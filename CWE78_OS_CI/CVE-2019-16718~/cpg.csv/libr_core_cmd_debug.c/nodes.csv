command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4193162	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_debug.c								
ANR	4193163	DeclStmt									
ANR	4193164	Decl							const char	const char * [ ]	help_msg_d
ANR	4193165	DeclStmt									
ANR	4193166	Decl							const char	const char * [ ]	help_msg_db
ANR	4193167	DeclStmt									
ANR	4193168	Decl							const char	const char * [ ]	help_msg_dbt
ANR	4193169	DeclStmt									
ANR	4193170	Decl							const char	const char * [ ]	help_msg_dbw
ANR	4193171	DeclStmt									
ANR	4193172	Decl							const char	const char * [ ]	help_msg_dc
ANR	4193173	DeclStmt									
ANR	4193174	Decl							const char	const char * [ ]	help_msg_dcs
ANR	4193175	DeclStmt									
ANR	4193176	Decl							const char	const char * [ ]	help_msg_dcu
ANR	4193177	DeclStmt									
ANR	4193178	Decl							const char	const char * [ ]	help_msg_dd
ANR	4193179	DeclStmt									
ANR	4193180	Decl							const char	const char * [ ]	help_msg_de
ANR	4193181	DeclStmt									
ANR	4193182	Decl							const char	const char * [ ]	help_msg_des
ANR	4193183	DeclStmt									
ANR	4193184	Decl							const char	const char * [ ]	help_msg_di
ANR	4193185	DeclStmt									
ANR	4193186	Decl							const char	const char * [ ]	help_msg_dk
ANR	4193187	DeclStmt									
ANR	4193188	Decl							const char	const char * [ ]	help_msg_dko
ANR	4193189	DeclStmt									
ANR	4193190	Decl							const char	const char * [ ]	help_msg_dm
ANR	4193191	DeclStmt									
ANR	4193192	Decl							const char	const char * [ ]	help_msg_dmi
ANR	4193193	DeclStmt									
ANR	4193194	Decl							const char	const char * [ ]	help_msg_dmm
ANR	4193195	DeclStmt									
ANR	4193196	Decl							const char	const char * [ ]	help_msg_dmp
ANR	4193197	DeclStmt									
ANR	4193198	Decl							const char	const char * [ ]	help_msg_dms
ANR	4193199	DeclStmt									
ANR	4193200	Decl							const char	const char * [ ]	help_msg_do
ANR	4193201	DeclStmt									
ANR	4193202	Decl							const char	const char * [ ]	help_msg_dp
ANR	4193203	DeclStmt									
ANR	4193204	Decl							const char	const char * [ ]	help_msg_dr
ANR	4193205	DeclStmt									
ANR	4193206	Decl							const char	const char * [ ]	help_msg_drp
ANR	4193207	DeclStmt									
ANR	4193208	Decl							const char	const char * [ ]	help_msg_drs
ANR	4193209	DeclStmt									
ANR	4193210	Decl							const char	const char * [ ]	help_msg_drt
ANR	4193211	DeclStmt									
ANR	4193212	Decl							const char	const char * [ ]	help_msg_drx
ANR	4193213	DeclStmt									
ANR	4193214	Decl							const char	const char * [ ]	help_msg_ds
ANR	4193215	DeclStmt									
ANR	4193216	Decl							const char	const char * [ ]	help_msg_dsu
ANR	4193217	DeclStmt									
ANR	4193218	Decl							const char	const char * [ ]	help_msg_dt
ANR	4193219	DeclStmt									
ANR	4193220	Decl							const char	const char * [ ]	help_msg_dte
ANR	4193221	DeclStmt									
ANR	4193222	Decl							const char	const char * [ ]	help_msg_dts
ANR	4193223	DeclStmt									
ANR	4193224	Decl							const char	const char * [ ]	help_msg_dx
ANR	4193225	DeclStmt									
ANR	4193226	Decl							const char	const char * [ ]	help_msg_dL
ANR	4193227	ClassDef	dot_trace_ght	488:0:19595:19652							
ANR	4193228	DeclStmt									
ANR	4193229	Decl							RGraph	RGraph *	graph
ANR	4193230	DeclStmt									
ANR	4193231	Decl							Sdb	Sdb *	graphnodes
ANR	4193232	ClassDef	trace_node	493:0:19656:19699							
ANR	4193233	DeclStmt									
ANR	4193234	Decl							ut64	ut64	addr
ANR	4193235	DeclStmt									
ANR	4193236	Decl							int	int	refs
ANR	4193237	Function	cmd_debug_init	498:0:19703:20774							
ANR	4193238	FunctionDef	cmd_debug_init (RCore * core)		4193237	0					
ANR	4193239	CompoundStatement		498:40:19743:20774	4193237	0					
ANR	4193240	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , d )"	499:1:19746:19777	4193237	0	True				
ANR	4193241	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , d )"		4193237	0					
ANR	4193242	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193243	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193244	ArgumentList	core		4193237	1					
ANR	4193245	Argument	core		4193237	0					
ANR	4193246	Identifier	core		4193237	0					
ANR	4193247	Argument	d		4193237	1					
ANR	4193248	Identifier	d		4193237	0					
ANR	4193249	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , db )"	500:1:19780:19812	4193237	1	True				
ANR	4193250	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , db )"		4193237	0					
ANR	4193251	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193252	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193253	ArgumentList	core		4193237	1					
ANR	4193254	Argument	core		4193237	0					
ANR	4193255	Identifier	core		4193237	0					
ANR	4193256	Argument	db		4193237	1					
ANR	4193257	Identifier	db		4193237	0					
ANR	4193258	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dbt )"	501:1:19815:19848	4193237	2	True				
ANR	4193259	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dbt )"		4193237	0					
ANR	4193260	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193261	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193262	ArgumentList	core		4193237	1					
ANR	4193263	Argument	core		4193237	0					
ANR	4193264	Identifier	core		4193237	0					
ANR	4193265	Argument	dbt		4193237	1					
ANR	4193266	Identifier	dbt		4193237	0					
ANR	4193267	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dc )"	502:1:19851:19883	4193237	3	True				
ANR	4193268	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dc )"		4193237	0					
ANR	4193269	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193270	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193271	ArgumentList	core		4193237	1					
ANR	4193272	Argument	core		4193237	0					
ANR	4193273	Identifier	core		4193237	0					
ANR	4193274	Argument	dc		4193237	1					
ANR	4193275	Identifier	dc		4193237	0					
ANR	4193276	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dcs )"	503:1:19886:19919	4193237	4	True				
ANR	4193277	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dcs )"		4193237	0					
ANR	4193278	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193279	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193280	ArgumentList	core		4193237	1					
ANR	4193281	Argument	core		4193237	0					
ANR	4193282	Identifier	core		4193237	0					
ANR	4193283	Argument	dcs		4193237	1					
ANR	4193284	Identifier	dcs		4193237	0					
ANR	4193285	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dcu )"	504:1:19922:19955	4193237	5	True				
ANR	4193286	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dcu )"		4193237	0					
ANR	4193287	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193288	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193289	ArgumentList	core		4193237	1					
ANR	4193290	Argument	core		4193237	0					
ANR	4193291	Identifier	core		4193237	0					
ANR	4193292	Argument	dcu		4193237	1					
ANR	4193293	Identifier	dcu		4193237	0					
ANR	4193294	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dd )"	505:1:19958:19990	4193237	6	True				
ANR	4193295	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dd )"		4193237	0					
ANR	4193296	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193297	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193298	ArgumentList	core		4193237	1					
ANR	4193299	Argument	core		4193237	0					
ANR	4193300	Identifier	core		4193237	0					
ANR	4193301	Argument	dd		4193237	1					
ANR	4193302	Identifier	dd		4193237	0					
ANR	4193303	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , de )"	506:1:19993:20025	4193237	7	True				
ANR	4193304	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , de )"		4193237	0					
ANR	4193305	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193306	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193307	ArgumentList	core		4193237	1					
ANR	4193308	Argument	core		4193237	0					
ANR	4193309	Identifier	core		4193237	0					
ANR	4193310	Argument	de		4193237	1					
ANR	4193311	Identifier	de		4193237	0					
ANR	4193312	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , des )"	507:1:20028:20061	4193237	8	True				
ANR	4193313	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , des )"		4193237	0					
ANR	4193314	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193315	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193316	ArgumentList	core		4193237	1					
ANR	4193317	Argument	core		4193237	0					
ANR	4193318	Identifier	core		4193237	0					
ANR	4193319	Argument	des		4193237	1					
ANR	4193320	Identifier	des		4193237	0					
ANR	4193321	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , di )"	508:1:20064:20096	4193237	9	True				
ANR	4193322	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , di )"		4193237	0					
ANR	4193323	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193324	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193325	ArgumentList	core		4193237	1					
ANR	4193326	Argument	core		4193237	0					
ANR	4193327	Identifier	core		4193237	0					
ANR	4193328	Argument	di		4193237	1					
ANR	4193329	Identifier	di		4193237	0					
ANR	4193330	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dk )"	509:1:20099:20131	4193237	10	True				
ANR	4193331	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dk )"		4193237	0					
ANR	4193332	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193333	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193334	ArgumentList	core		4193237	1					
ANR	4193335	Argument	core		4193237	0					
ANR	4193336	Identifier	core		4193237	0					
ANR	4193337	Argument	dk		4193237	1					
ANR	4193338	Identifier	dk		4193237	0					
ANR	4193339	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dko )"	510:1:20134:20167	4193237	11	True				
ANR	4193340	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dko )"		4193237	0					
ANR	4193341	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193342	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193343	ArgumentList	core		4193237	1					
ANR	4193344	Argument	core		4193237	0					
ANR	4193345	Identifier	core		4193237	0					
ANR	4193346	Argument	dko		4193237	1					
ANR	4193347	Identifier	dko		4193237	0					
ANR	4193348	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dm )"	511:1:20170:20202	4193237	12	True				
ANR	4193349	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dm )"		4193237	0					
ANR	4193350	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193351	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193352	ArgumentList	core		4193237	1					
ANR	4193353	Argument	core		4193237	0					
ANR	4193354	Identifier	core		4193237	0					
ANR	4193355	Argument	dm		4193237	1					
ANR	4193356	Identifier	dm		4193237	0					
ANR	4193357	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dmi )"	512:1:20205:20238	4193237	13	True				
ANR	4193358	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dmi )"		4193237	0					
ANR	4193359	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193360	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193361	ArgumentList	core		4193237	1					
ANR	4193362	Argument	core		4193237	0					
ANR	4193363	Identifier	core		4193237	0					
ANR	4193364	Argument	dmi		4193237	1					
ANR	4193365	Identifier	dmi		4193237	0					
ANR	4193366	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dmm )"	513:1:20241:20274	4193237	14	True				
ANR	4193367	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dmm )"		4193237	0					
ANR	4193368	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193369	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193370	ArgumentList	core		4193237	1					
ANR	4193371	Argument	core		4193237	0					
ANR	4193372	Identifier	core		4193237	0					
ANR	4193373	Argument	dmm		4193237	1					
ANR	4193374	Identifier	dmm		4193237	0					
ANR	4193375	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dmp )"	514:1:20277:20310	4193237	15	True				
ANR	4193376	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dmp )"		4193237	0					
ANR	4193377	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193378	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193379	ArgumentList	core		4193237	1					
ANR	4193380	Argument	core		4193237	0					
ANR	4193381	Identifier	core		4193237	0					
ANR	4193382	Argument	dmp		4193237	1					
ANR	4193383	Identifier	dmp		4193237	0					
ANR	4193384	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dms )"	515:1:20313:20346	4193237	16	True				
ANR	4193385	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dms )"		4193237	0					
ANR	4193386	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193387	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193388	ArgumentList	core		4193237	1					
ANR	4193389	Argument	core		4193237	0					
ANR	4193390	Identifier	core		4193237	0					
ANR	4193391	Argument	dms		4193237	1					
ANR	4193392	Identifier	dms		4193237	0					
ANR	4193393	Statement	DEFINE_CMD_DESCRIPTOR	516:1:20349:20369	4193237	17	True				
ANR	4193394	Statement	(	516:23:20371:20371	4193237	18	True				
ANR	4193395	Statement	core	516:24:20372:20375	4193237	19	True				
ANR	4193396	Statement	","	516:28:20376:20376	4193237	20	True				
ANR	4193397	DoStatement	do		4193237	21					
ANR	4193398	Statement	)		4193237	0					
ANR	4193399	ExpressionStatement		516:33:20381:20381	4193237	22	True				
ANR	4193400	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dp )"	517:1:20384:20416	4193237	23	True				
ANR	4193401	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dp )"		4193237	0					
ANR	4193402	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193403	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193404	ArgumentList	core		4193237	1					
ANR	4193405	Argument	core		4193237	0					
ANR	4193406	Identifier	core		4193237	0					
ANR	4193407	Argument	dp		4193237	1					
ANR	4193408	Identifier	dp		4193237	0					
ANR	4193409	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dr )"	518:1:20419:20451	4193237	24	True				
ANR	4193410	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dr )"		4193237	0					
ANR	4193411	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193412	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193413	ArgumentList	core		4193237	1					
ANR	4193414	Argument	core		4193237	0					
ANR	4193415	Identifier	core		4193237	0					
ANR	4193416	Argument	dr		4193237	1					
ANR	4193417	Identifier	dr		4193237	0					
ANR	4193418	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drp )"	519:1:20454:20487	4193237	25	True				
ANR	4193419	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drp )"		4193237	0					
ANR	4193420	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193421	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193422	ArgumentList	core		4193237	1					
ANR	4193423	Argument	core		4193237	0					
ANR	4193424	Identifier	core		4193237	0					
ANR	4193425	Argument	drp		4193237	1					
ANR	4193426	Identifier	drp		4193237	0					
ANR	4193427	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drs )"	520:1:20490:20523	4193237	26	True				
ANR	4193428	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drs )"		4193237	0					
ANR	4193429	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193430	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193431	ArgumentList	core		4193237	1					
ANR	4193432	Argument	core		4193237	0					
ANR	4193433	Identifier	core		4193237	0					
ANR	4193434	Argument	drs		4193237	1					
ANR	4193435	Identifier	drs		4193237	0					
ANR	4193436	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drt )"	521:1:20526:20559	4193237	27	True				
ANR	4193437	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drt )"		4193237	0					
ANR	4193438	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193439	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193440	ArgumentList	core		4193237	1					
ANR	4193441	Argument	core		4193237	0					
ANR	4193442	Identifier	core		4193237	0					
ANR	4193443	Argument	drt		4193237	1					
ANR	4193444	Identifier	drt		4193237	0					
ANR	4193445	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , drx )"	522:1:20562:20595	4193237	28	True				
ANR	4193446	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , drx )"		4193237	0					
ANR	4193447	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193448	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193449	ArgumentList	core		4193237	1					
ANR	4193450	Argument	core		4193237	0					
ANR	4193451	Identifier	core		4193237	0					
ANR	4193452	Argument	drx		4193237	1					
ANR	4193453	Identifier	drx		4193237	0					
ANR	4193454	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , ds )"	523:1:20598:20630	4193237	29	True				
ANR	4193455	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , ds )"		4193237	0					
ANR	4193456	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193457	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193458	ArgumentList	core		4193237	1					
ANR	4193459	Argument	core		4193237	0					
ANR	4193460	Identifier	core		4193237	0					
ANR	4193461	Argument	ds		4193237	1					
ANR	4193462	Identifier	ds		4193237	0					
ANR	4193463	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dt )"	524:1:20633:20665	4193237	30	True				
ANR	4193464	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dt )"		4193237	0					
ANR	4193465	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193466	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193467	ArgumentList	core		4193237	1					
ANR	4193468	Argument	core		4193237	0					
ANR	4193469	Identifier	core		4193237	0					
ANR	4193470	Argument	dt		4193237	1					
ANR	4193471	Identifier	dt		4193237	0					
ANR	4193472	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dte )"	525:1:20668:20701	4193237	31	True				
ANR	4193473	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dte )"		4193237	0					
ANR	4193474	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193475	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193476	ArgumentList	core		4193237	1					
ANR	4193477	Argument	core		4193237	0					
ANR	4193478	Identifier	core		4193237	0					
ANR	4193479	Argument	dte		4193237	1					
ANR	4193480	Identifier	dte		4193237	0					
ANR	4193481	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dts )"	526:1:20704:20737	4193237	32	True				
ANR	4193482	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dts )"		4193237	0					
ANR	4193483	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193484	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193485	ArgumentList	core		4193237	1					
ANR	4193486	Argument	core		4193237	0					
ANR	4193487	Identifier	core		4193237	0					
ANR	4193488	Argument	dts		4193237	1					
ANR	4193489	Identifier	dts		4193237	0					
ANR	4193490	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , dx )"	527:1:20740:20772	4193237	33	True				
ANR	4193491	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , dx )"		4193237	0					
ANR	4193492	Callee	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193493	Identifier	DEFINE_CMD_DESCRIPTOR		4193237	0					
ANR	4193494	ArgumentList	core		4193237	1					
ANR	4193495	Argument	core		4193237	0					
ANR	4193496	Identifier	core		4193237	0					
ANR	4193497	Argument	dx		4193237	1					
ANR	4193498	Identifier	dx		4193237	0					
ANR	4193499	ReturnType	static void		4193237	1					
ANR	4193500	Identifier	cmd_debug_init		4193237	2					
ANR	4193501	ParameterList	RCore * core		4193237	3					
ANR	4193502	Parameter	RCore * core	498:27:19730:19740	4193237	0	True				
ANR	4193503	ParameterType	RCore *		4193237	0					
ANR	4193504	Identifier	core		4193237	1					
ANR	4193505	CFGEntryNode	ENTRY		4193237		True				
ANR	4193506	CFGExitNode	EXIT		4193237		True				
ANR	4193507	CFGErrorNode	ERROR		4193237		True				
ANR	4193508	Symbol	dd		4193237						
ANR	4193509	Symbol	de		4193237						
ANR	4193510	Symbol	dmi		4193237						
ANR	4193511	Symbol	di		4193237						
ANR	4193512	Symbol	dmm		4193237						
ANR	4193513	Symbol	dmp		4193237						
ANR	4193514	Symbol	dk		4193237						
ANR	4193515	Symbol	dko		4193237						
ANR	4193516	Symbol	dm		4193237						
ANR	4193517	Symbol	dms		4193237						
ANR	4193518	Symbol	dp		4193237						
ANR	4193519	Symbol	dr		4193237						
ANR	4193520	Symbol	ds		4193237						
ANR	4193521	Symbol	dt		4193237						
ANR	4193522	Symbol	des		4193237						
ANR	4193523	Symbol	dte		4193237						
ANR	4193524	Symbol	dx		4193237						
ANR	4193525	Symbol	dcs		4193237						
ANR	4193526	Symbol	dcu		4193237						
ANR	4193527	Symbol	dts		4193237						
ANR	4193528	Symbol	drp		4193237						
ANR	4193529	Symbol	d		4193237						
ANR	4193530	Symbol	drs		4193237						
ANR	4193531	Symbol	drt		4193237						
ANR	4193532	Symbol	drx		4193237						
ANR	4193533	Symbol	core		4193237						
ANR	4193534	Symbol	dbt		4193237						
ANR	4193535	Symbol	db		4193237						
ANR	4193536	Symbol	dc		4193237						
ANR	4193537	Function	setRarunProfileString	531:0:20853:21179							
ANR	4193538	FunctionDef	"setRarunProfileString (RCore * core , const char * str)"		4193537	0					
ANR	4193539	CompoundStatement		531:64:20917:21179	4193537	0					
ANR	4193540	IdentifierDeclStatement	"char * file = r_file_temp ( ""rarun2"" ) ;"	532:1:20920:20955	4193537	0	True				
ANR	4193541	IdentifierDecl	"* file = r_file_temp ( ""rarun2"" )"		4193537	0					
ANR	4193542	IdentifierDeclType	char *		4193537	0					
ANR	4193543	Identifier	file		4193537	1					
ANR	4193544	AssignmentExpression	"* file = r_file_temp ( ""rarun2"" )"		4193537	2		=			
ANR	4193545	Identifier	file		4193537	0					
ANR	4193546	CallExpression	"r_file_temp ( ""rarun2"" )"		4193537	1					
ANR	4193547	Callee	r_file_temp		4193537	0					
ANR	4193548	Identifier	r_file_temp		4193537	0					
ANR	4193549	ArgumentList	"""rarun2"""		4193537	1					
ANR	4193550	Argument	"""rarun2"""		4193537	0					
ANR	4193551	PrimaryExpression	"""rarun2"""		4193537	0					
ANR	4193552	IdentifierDeclStatement	char * s = strdup ( str ) ;	533:1:20958:20980	4193537	1	True				
ANR	4193553	IdentifierDecl	* s = strdup ( str )		4193537	0					
ANR	4193554	IdentifierDeclType	char *		4193537	0					
ANR	4193555	Identifier	s		4193537	1					
ANR	4193556	AssignmentExpression	* s = strdup ( str )		4193537	2		=			
ANR	4193557	Identifier	s		4193537	0					
ANR	4193558	CallExpression	strdup ( str )		4193537	1					
ANR	4193559	Callee	strdup		4193537	0					
ANR	4193560	Identifier	strdup		4193537	0					
ANR	4193561	ArgumentList	str		4193537	1					
ANR	4193562	Argument	str		4193537	0					
ANR	4193563	Identifier	str		4193537	0					
ANR	4193564	ExpressionStatement	"r_config_set ( core -> config , ""dbg.profile"" , file )"	534:1:20983:21031	4193537	2	True				
ANR	4193565	CallExpression	"r_config_set ( core -> config , ""dbg.profile"" , file )"		4193537	0					
ANR	4193566	Callee	r_config_set		4193537	0					
ANR	4193567	Identifier	r_config_set		4193537	0					
ANR	4193568	ArgumentList	core -> config		4193537	1					
ANR	4193569	Argument	core -> config		4193537	0					
ANR	4193570	PtrMemberAccess	core -> config		4193537	0					
ANR	4193571	Identifier	core		4193537	0					
ANR	4193572	Identifier	config		4193537	1					
ANR	4193573	Argument	"""dbg.profile"""		4193537	1					
ANR	4193574	PrimaryExpression	"""dbg.profile"""		4193537	0					
ANR	4193575	Argument	file		4193537	2					
ANR	4193576	Identifier	file		4193537	0					
ANR	4193577	ExpressionStatement	"r_str_replace_char ( s , ',' , '\\n' )"	535:1:21034:21067	4193537	3	True				
ANR	4193578	CallExpression	"r_str_replace_char ( s , ',' , '\\n' )"		4193537	0					
ANR	4193579	Callee	r_str_replace_char		4193537	0					
ANR	4193580	Identifier	r_str_replace_char		4193537	0					
ANR	4193581	ArgumentList	s		4193537	1					
ANR	4193582	Argument	s		4193537	0					
ANR	4193583	Identifier	s		4193537	0					
ANR	4193584	Argument	"','"		4193537	1					
ANR	4193585	PrimaryExpression	"','"		4193537	0					
ANR	4193586	Argument	'\\n'		4193537	2					
ANR	4193587	PrimaryExpression	'\\n'		4193537	0					
ANR	4193588	ExpressionStatement	"r_file_dump ( file , ( const ut8 * ) s , strlen ( s ) , 0 )"	536:1:21070:21118	4193537	4	True				
ANR	4193589	CallExpression	"r_file_dump ( file , ( const ut8 * ) s , strlen ( s ) , 0 )"		4193537	0					
ANR	4193590	Callee	r_file_dump		4193537	0					
ANR	4193591	Identifier	r_file_dump		4193537	0					
ANR	4193592	ArgumentList	file		4193537	1					
ANR	4193593	Argument	file		4193537	0					
ANR	4193594	Identifier	file		4193537	0					
ANR	4193595	Argument	( const ut8 * ) s		4193537	1					
ANR	4193596	CastExpression	( const ut8 * ) s		4193537	0					
ANR	4193597	CastTarget	const ut8 *		4193537	0					
ANR	4193598	Identifier	s		4193537	1					
ANR	4193599	Argument	strlen ( s )		4193537	2					
ANR	4193600	CallExpression	strlen ( s )		4193537	0					
ANR	4193601	Callee	strlen		4193537	0					
ANR	4193602	Identifier	strlen		4193537	0					
ANR	4193603	ArgumentList	s		4193537	1					
ANR	4193604	Argument	s		4193537	0					
ANR	4193605	Identifier	s		4193537	0					
ANR	4193606	Argument	0		4193537	3					
ANR	4193607	PrimaryExpression	0		4193537	0					
ANR	4193608	ExpressionStatement	"r_file_dump ( file , ( const ut8 * ) ""\\n"" , 1 , 1 )"	537:1:21121:21163	4193537	5	True				
ANR	4193609	CallExpression	"r_file_dump ( file , ( const ut8 * ) ""\\n"" , 1 , 1 )"		4193537	0					
ANR	4193610	Callee	r_file_dump		4193537	0					
ANR	4193611	Identifier	r_file_dump		4193537	0					
ANR	4193612	ArgumentList	file		4193537	1					
ANR	4193613	Argument	file		4193537	0					
ANR	4193614	Identifier	file		4193537	0					
ANR	4193615	Argument	"( const ut8 * ) ""\\n"""		4193537	1					
ANR	4193616	CastExpression	"( const ut8 * ) ""\\n"""		4193537	0					
ANR	4193617	CastTarget	const ut8 *		4193537	0					
ANR	4193618	PrimaryExpression	"""\\n"""		4193537	1					
ANR	4193619	Argument	1		4193537	2					
ANR	4193620	PrimaryExpression	1		4193537	0					
ANR	4193621	Argument	1		4193537	3					
ANR	4193622	PrimaryExpression	1		4193537	0					
ANR	4193623	ExpressionStatement	free ( file )	538:1:21166:21177	4193537	6	True				
ANR	4193624	CallExpression	free ( file )		4193537	0					
ANR	4193625	Callee	free		4193537	0					
ANR	4193626	Identifier	free		4193537	0					
ANR	4193627	ArgumentList	file		4193537	1					
ANR	4193628	Argument	file		4193537	0					
ANR	4193629	Identifier	file		4193537	0					
ANR	4193630	ReturnType	static void		4193537	1					
ANR	4193631	Identifier	setRarunProfileString		4193537	2					
ANR	4193632	ParameterList	"RCore * core , const char * str"		4193537	3					
ANR	4193633	Parameter	RCore * core	531:34:20887:20897	4193537	0	True				
ANR	4193634	ParameterType	RCore *		4193537	0					
ANR	4193635	Identifier	core		4193537	1					
ANR	4193636	Parameter	const char * str	531:47:20900:20914	4193537	1	True				
ANR	4193637	ParameterType	const char *		4193537	0					
ANR	4193638	Identifier	str		4193537	1					
ANR	4193639	CFGEntryNode	ENTRY		4193537		True				
ANR	4193640	CFGExitNode	EXIT		4193537		True				
ANR	4193641	Symbol	str		4193537						
ANR	4193642	Symbol	core -> config		4193537						
ANR	4193643	Symbol	core		4193537						
ANR	4193644	Symbol	strlen		4193537						
ANR	4193645	Symbol	file		4193537						
ANR	4193646	Symbol	s		4193537						
ANR	4193647	Symbol	* core		4193537						
ANR	4193648	Symbol	r_file_temp		4193537						
ANR	4193649	Symbol	strdup		4193537						
ANR	4193650	Function	cmd_debug_cont_syscall	541:0:21182:22239							
ANR	4193651	FunctionDef	"cmd_debug_cont_syscall (RCore * core , const char * _str)"		4193650	0					
ANR	4193652	CompoundStatement		541:67:21249:22239	4193650	0					
ANR	4193653	IdentifierDeclStatement	"int i , * syscalls = NULL ;"	543:1:21301:21324	4193650	0	True				
ANR	4193654	IdentifierDecl	i		4193650	0					
ANR	4193655	IdentifierDeclType	int		4193650	0					
ANR	4193656	Identifier	i		4193650	1					
ANR	4193657	IdentifierDecl	* syscalls = NULL		4193650	1					
ANR	4193658	IdentifierDeclType	int *		4193650	0					
ANR	4193659	Identifier	syscalls		4193650	1					
ANR	4193660	AssignmentExpression	* syscalls = NULL		4193650	2		=			
ANR	4193661	Identifier	NULL		4193650	0					
ANR	4193662	Identifier	NULL		4193650	1					
ANR	4193663	IdentifierDeclStatement	int count = 0 ;	544:1:21327:21340	4193650	1	True				
ANR	4193664	IdentifierDecl	count = 0		4193650	0					
ANR	4193665	IdentifierDeclType	int		4193650	0					
ANR	4193666	Identifier	count		4193650	1					
ANR	4193667	AssignmentExpression	count = 0		4193650	2		=			
ANR	4193668	Identifier	count		4193650	0					
ANR	4193669	PrimaryExpression	0		4193650	1					
ANR	4193670	IfStatement	if ( _str && * _str )		4193650	2					
ANR	4193671	Condition	_str && * _str	545:5:21347:21359	4193650	0	True				
ANR	4193672	AndExpression	_str && * _str		4193650	0		&&			
ANR	4193673	Identifier	_str		4193650	0					
ANR	4193674	UnaryOperationExpression	* _str		4193650	1					
ANR	4193675	UnaryOperator	*		4193650	0					
ANR	4193676	Identifier	_str		4193650	1					
ANR	4193677	CompoundStatement		6:2:116:141	4193650	1					
ANR	4193678	IdentifierDeclStatement	char * str = strdup ( _str ) ;	546:2:21366:21391	4193650	0	True				
ANR	4193679	IdentifierDecl	* str = strdup ( _str )		4193650	0					
ANR	4193680	IdentifierDeclType	char *		4193650	0					
ANR	4193681	Identifier	str		4193650	1					
ANR	4193682	AssignmentExpression	* str = strdup ( _str )		4193650	2		=			
ANR	4193683	Identifier	str		4193650	0					
ANR	4193684	CallExpression	strdup ( _str )		4193650	1					
ANR	4193685	Callee	strdup		4193650	0					
ANR	4193686	Identifier	strdup		4193650	0					
ANR	4193687	ArgumentList	_str		4193650	1					
ANR	4193688	Argument	_str		4193650	0					
ANR	4193689	Identifier	_str		4193650	0					
ANR	4193690	ExpressionStatement	count = r_str_word_set0 ( str )	547:2:21395:21424	4193650	1	True				
ANR	4193691	AssignmentExpression	count = r_str_word_set0 ( str )		4193650	0		=			
ANR	4193692	Identifier	count		4193650	0					
ANR	4193693	CallExpression	r_str_word_set0 ( str )		4193650	1					
ANR	4193694	Callee	r_str_word_set0		4193650	0					
ANR	4193695	Identifier	r_str_word_set0		4193650	0					
ANR	4193696	ArgumentList	str		4193650	1					
ANR	4193697	Argument	str		4193650	0					
ANR	4193698	Identifier	str		4193650	0					
ANR	4193699	ExpressionStatement	"syscalls = calloc ( sizeof ( int ) , count )"	548:2:21428:21467	4193650	2	True				
ANR	4193700	AssignmentExpression	"syscalls = calloc ( sizeof ( int ) , count )"		4193650	0		=			
ANR	4193701	Identifier	syscalls		4193650	0					
ANR	4193702	CallExpression	"calloc ( sizeof ( int ) , count )"		4193650	1					
ANR	4193703	Callee	calloc		4193650	0					
ANR	4193704	Identifier	calloc		4193650	0					
ANR	4193705	ArgumentList	sizeof ( int )		4193650	1					
ANR	4193706	Argument	sizeof ( int )		4193650	0					
ANR	4193707	SizeofExpression	sizeof ( int )		4193650	0					
ANR	4193708	Sizeof	sizeof		4193650	0					
ANR	4193709	SizeofOperand	int		4193650	1					
ANR	4193710	Argument	count		4193650	1					
ANR	4193711	Identifier	count		4193650	0					
ANR	4193712	ForStatement	for ( i = 0 ; i < count ; i ++ )		4193650	3					
ANR	4193713	ForInit	i = 0 ;	549:7:21476:21481	4193650	0	True				
ANR	4193714	AssignmentExpression	i = 0		4193650	0		=			
ANR	4193715	Identifier	i		4193650	0					
ANR	4193716	PrimaryExpression	0		4193650	1					
ANR	4193717	Condition	i < count	549:14:21483:21491	4193650	1	True				
ANR	4193718	RelationalExpression	i < count		4193650	0		<			
ANR	4193719	Identifier	i		4193650	0					
ANR	4193720	Identifier	count		4193650	1					
ANR	4193721	PostIncDecOperationExpression	i ++	549:25:21494:21496	4193650	2	True				
ANR	4193722	Identifier	i		4193650	0					
ANR	4193723	IncDec	++		4193650	1					
ANR	4193724	CompoundStatement		11:3:307:355	4193650	3					
ANR	4193725	IdentifierDeclStatement	"const char * sysnumstr = r_str_word_get0 ( str , i ) ;"	550:3:21504:21552	4193650	0	True				
ANR	4193726	IdentifierDecl	"* sysnumstr = r_str_word_get0 ( str , i )"		4193650	0					
ANR	4193727	IdentifierDeclType	const char *		4193650	0					
ANR	4193728	Identifier	sysnumstr		4193650	1					
ANR	4193729	AssignmentExpression	"* sysnumstr = r_str_word_get0 ( str , i )"		4193650	2		=			
ANR	4193730	Identifier	sysnumstr		4193650	0					
ANR	4193731	CallExpression	"r_str_word_get0 ( str , i )"		4193650	1					
ANR	4193732	Callee	r_str_word_get0		4193650	0					
ANR	4193733	Identifier	r_str_word_get0		4193650	0					
ANR	4193734	ArgumentList	str		4193650	1					
ANR	4193735	Argument	str		4193650	0					
ANR	4193736	Identifier	str		4193650	0					
ANR	4193737	Argument	i		4193650	1					
ANR	4193738	Identifier	i		4193650	0					
ANR	4193739	IdentifierDeclStatement	"int sig = ( int ) r_num_math ( core -> num , sysnumstr ) ;"	551:3:21557:21605	4193650	1	True				
ANR	4193740	IdentifierDecl	"sig = ( int ) r_num_math ( core -> num , sysnumstr )"		4193650	0					
ANR	4193741	IdentifierDeclType	int		4193650	0					
ANR	4193742	Identifier	sig		4193650	1					
ANR	4193743	AssignmentExpression	"sig = ( int ) r_num_math ( core -> num , sysnumstr )"		4193650	2		=			
ANR	4193744	Identifier	sig		4193650	0					
ANR	4193745	CastExpression	"( int ) r_num_math ( core -> num , sysnumstr )"		4193650	1					
ANR	4193746	CastTarget	int		4193650	0					
ANR	4193747	CallExpression	"r_num_math ( core -> num , sysnumstr )"		4193650	1					
ANR	4193748	Callee	r_num_math		4193650	0					
ANR	4193749	Identifier	r_num_math		4193650	0					
ANR	4193750	ArgumentList	core -> num		4193650	1					
ANR	4193751	Argument	core -> num		4193650	0					
ANR	4193752	PtrMemberAccess	core -> num		4193650	0					
ANR	4193753	Identifier	core		4193650	0					
ANR	4193754	Identifier	num		4193650	1					
ANR	4193755	Argument	sysnumstr		4193650	1					
ANR	4193756	Identifier	sysnumstr		4193650	0					
ANR	4193757	IfStatement	if ( sig == - 1 )		4193650	2					
ANR	4193758	Condition	sig == - 1	552:7:21614:21622	4193650	0	True				
ANR	4193759	EqualityExpression	sig == - 1		4193650	0		==			
ANR	4193760	Identifier	sig		4193650	0					
ANR	4193761	UnaryOperationExpression	- 1		4193650	1					
ANR	4193762	UnaryOperator	-		4193650	0					
ANR	4193763	PrimaryExpression	1		4193650	1					
ANR	4193764	CompoundStatement		12:18:375:375	4193650	1					
ANR	4193765	ExpressionStatement	syscalls [ i ] = - 1	553:4:21653:21669	4193650	0	True				
ANR	4193766	AssignmentExpression	syscalls [ i ] = - 1		4193650	0		=			
ANR	4193767	ArrayIndexing	syscalls [ i ]		4193650	0					
ANR	4193768	Identifier	syscalls		4193650	0					
ANR	4193769	Identifier	i		4193650	1					
ANR	4193770	UnaryOperationExpression	- 1		4193650	1					
ANR	4193771	UnaryOperator	-		4193650	0					
ANR	4193772	PrimaryExpression	1		4193650	1					
ANR	4193773	ElseStatement	else		4193650	0					
ANR	4193774	IfStatement	if ( sig == 0 )		4193650	0					
ANR	4193775	Condition	sig == 0	554:14:21685:21692	4193650	0	True				
ANR	4193776	EqualityExpression	sig == 0		4193650	0		==			
ANR	4193777	Identifier	sig		4193650	0					
ANR	4193778	PrimaryExpression	0		4193650	1					
ANR	4193779	CompoundStatement		14:24:445:445	4193650	1					
ANR	4193780	ExpressionStatement	"sig = r_syscall_get_num ( core -> anal -> syscall , sysnumstr )"	555:4:21701:21757	4193650	0	True				
ANR	4193781	AssignmentExpression	"sig = r_syscall_get_num ( core -> anal -> syscall , sysnumstr )"		4193650	0		=			
ANR	4193782	Identifier	sig		4193650	0					
ANR	4193783	CallExpression	"r_syscall_get_num ( core -> anal -> syscall , sysnumstr )"		4193650	1					
ANR	4193784	Callee	r_syscall_get_num		4193650	0					
ANR	4193785	Identifier	r_syscall_get_num		4193650	0					
ANR	4193786	ArgumentList	core -> anal -> syscall		4193650	1					
ANR	4193787	Argument	core -> anal -> syscall		4193650	0					
ANR	4193788	PtrMemberAccess	core -> anal -> syscall		4193650	0					
ANR	4193789	PtrMemberAccess	core -> anal		4193650	0					
ANR	4193790	Identifier	core		4193650	0					
ANR	4193791	Identifier	anal		4193650	1					
ANR	4193792	Identifier	syscall		4193650	1					
ANR	4193793	Argument	sysnumstr		4193650	1					
ANR	4193794	Identifier	sysnumstr		4193650	0					
ANR	4193795	IfStatement	if ( sig == - 1 )		4193650	1					
ANR	4193796	Condition	sig == - 1	556:8:21767:21775	4193650	0	True				
ANR	4193797	EqualityExpression	sig == - 1		4193650	0		==			
ANR	4193798	Identifier	sig		4193650	0					
ANR	4193799	UnaryOperationExpression	- 1		4193650	1					
ANR	4193800	UnaryOperator	-		4193650	0					
ANR	4193801	PrimaryExpression	1		4193650	1					
ANR	4193802	CompoundStatement		16:19:528:528	4193650	1					
ANR	4193803	ExpressionStatement	"eprintf ( ""Unknown syscall number\\n"" )"	557:5:21785:21821	4193650	0	True				
ANR	4193804	CallExpression	"eprintf ( ""Unknown syscall number\\n"" )"		4193650	0					
ANR	4193805	Callee	eprintf		4193650	0					
ANR	4193806	Identifier	eprintf		4193650	0					
ANR	4193807	ArgumentList	"""Unknown syscall number\\n"""		4193650	1					
ANR	4193808	Argument	"""Unknown syscall number\\n"""		4193650	0					
ANR	4193809	PrimaryExpression	"""Unknown syscall number\\n"""		4193650	0					
ANR	4193810	ExpressionStatement	free ( str )	558:5:21828:21838	4193650	1	True				
ANR	4193811	CallExpression	free ( str )		4193650	0					
ANR	4193812	Callee	free		4193650	0					
ANR	4193813	Identifier	free		4193650	0					
ANR	4193814	ArgumentList	str		4193650	1					
ANR	4193815	Argument	str		4193650	0					
ANR	4193816	Identifier	str		4193650	0					
ANR	4193817	ExpressionStatement	free ( syscalls )	559:5:21845:21860	4193650	2	True				
ANR	4193818	CallExpression	free ( syscalls )		4193650	0					
ANR	4193819	Callee	free		4193650	0					
ANR	4193820	Identifier	free		4193650	0					
ANR	4193821	ArgumentList	syscalls		4193650	1					
ANR	4193822	Argument	syscalls		4193650	0					
ANR	4193823	Identifier	syscalls		4193650	0					
ANR	4193824	ReturnStatement	return ;	560:5:21867:21873	4193650	3	True				
ANR	4193825	ExpressionStatement	syscalls [ i ] = sig	562:4:21885:21902	4193650	2	True				
ANR	4193826	AssignmentExpression	syscalls [ i ] = sig		4193650	0		=			
ANR	4193827	ArrayIndexing	syscalls [ i ]		4193650	0					
ANR	4193828	Identifier	syscalls		4193650	0					
ANR	4193829	Identifier	i		4193650	1					
ANR	4193830	Identifier	sig		4193650	1					
ANR	4193831	ExpressionStatement	"eprintf ( ""Running child until syscalls:"" )"	565:2:21915:21956	4193650	4	True				
ANR	4193832	CallExpression	"eprintf ( ""Running child until syscalls:"" )"		4193650	0					
ANR	4193833	Callee	eprintf		4193650	0					
ANR	4193834	Identifier	eprintf		4193650	0					
ANR	4193835	ArgumentList	"""Running child until syscalls:"""		4193650	1					
ANR	4193836	Argument	"""Running child until syscalls:"""		4193650	0					
ANR	4193837	PrimaryExpression	"""Running child until syscalls:"""		4193650	0					
ANR	4193838	ForStatement	for ( i = 0 ; i < count ; i ++ )		4193650	5					
ANR	4193839	ForInit	i = 0 ;	566:7:21965:21970	4193650	0	True				
ANR	4193840	AssignmentExpression	i = 0		4193650	0		=			
ANR	4193841	Identifier	i		4193650	0					
ANR	4193842	PrimaryExpression	0		4193650	1					
ANR	4193843	Condition	i < count	566:14:21972:21980	4193650	1	True				
ANR	4193844	RelationalExpression	i < count		4193650	0		<			
ANR	4193845	Identifier	i		4193650	0					
ANR	4193846	Identifier	count		4193650	1					
ANR	4193847	PostIncDecOperationExpression	i ++	566:25:21983:21985	4193650	2	True				
ANR	4193848	Identifier	i		4193650	0					
ANR	4193849	IncDec	++		4193650	1					
ANR	4193850	CompoundStatement		26:30:738:738	4193650	3					
ANR	4193851	ExpressionStatement	"eprintf ( ""%d "" , syscalls [ i ] )"	567:3:21993:22021	4193650	0	True				
ANR	4193852	CallExpression	"eprintf ( ""%d "" , syscalls [ i ] )"		4193650	0					
ANR	4193853	Callee	eprintf		4193650	0					
ANR	4193854	Identifier	eprintf		4193650	0					
ANR	4193855	ArgumentList	"""%d """		4193650	1					
ANR	4193856	Argument	"""%d """		4193650	0					
ANR	4193857	PrimaryExpression	"""%d """		4193650	0					
ANR	4193858	Argument	syscalls [ i ]		4193650	1					
ANR	4193859	ArrayIndexing	syscalls [ i ]		4193650	0					
ANR	4193860	Identifier	syscalls		4193650	0					
ANR	4193861	Identifier	i		4193650	1					
ANR	4193862	ExpressionStatement	"eprintf ( ""\\n"" )"	569:2:22029:22043	4193650	6	True				
ANR	4193863	CallExpression	"eprintf ( ""\\n"" )"		4193650	0					
ANR	4193864	Callee	eprintf		4193650	0					
ANR	4193865	Identifier	eprintf		4193650	0					
ANR	4193866	ArgumentList	"""\\n"""		4193650	1					
ANR	4193867	Argument	"""\\n"""		4193650	0					
ANR	4193868	PrimaryExpression	"""\\n"""		4193650	0					
ANR	4193869	ExpressionStatement	free ( str )	570:2:22047:22057	4193650	7	True				
ANR	4193870	CallExpression	free ( str )		4193650	0					
ANR	4193871	Callee	free		4193650	0					
ANR	4193872	Identifier	free		4193650	0					
ANR	4193873	ArgumentList	str		4193650	1					
ANR	4193874	Argument	str		4193650	0					
ANR	4193875	Identifier	str		4193650	0					
ANR	4193876	ElseStatement	else		4193650	0					
ANR	4193877	CompoundStatement		31:8:817:817	4193650	0					
ANR	4193878	ExpressionStatement	"eprintf ( ""Running child until next syscall\\n"" )"	572:2:22071:22117	4193650	0	True				
ANR	4193879	CallExpression	"eprintf ( ""Running child until next syscall\\n"" )"		4193650	0					
ANR	4193880	Callee	eprintf		4193650	0					
ANR	4193881	Identifier	eprintf		4193650	0					
ANR	4193882	ArgumentList	"""Running child until next syscall\\n"""		4193650	1					
ANR	4193883	Argument	"""Running child until next syscall\\n"""		4193650	0					
ANR	4193884	PrimaryExpression	"""Running child until next syscall\\n"""		4193650	0					
ANR	4193885	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	574:1:22123:22162	4193650	3	True				
ANR	4193886	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4193650	0					
ANR	4193887	Callee	r_reg_arena_swap		4193650	0					
ANR	4193888	Identifier	r_reg_arena_swap		4193650	0					
ANR	4193889	ArgumentList	core -> dbg -> reg		4193650	1					
ANR	4193890	Argument	core -> dbg -> reg		4193650	0					
ANR	4193891	PtrMemberAccess	core -> dbg -> reg		4193650	0					
ANR	4193892	PtrMemberAccess	core -> dbg		4193650	0					
ANR	4193893	Identifier	core		4193650	0					
ANR	4193894	Identifier	dbg		4193650	1					
ANR	4193895	Identifier	reg		4193650	1					
ANR	4193896	Argument	true		4193650	1					
ANR	4193897	Identifier	true		4193650	0					
ANR	4193898	ExpressionStatement	"r_debug_continue_syscalls ( core -> dbg , syscalls , count )"	575:1:22165:22219	4193650	4	True				
ANR	4193899	CallExpression	"r_debug_continue_syscalls ( core -> dbg , syscalls , count )"		4193650	0					
ANR	4193900	Callee	r_debug_continue_syscalls		4193650	0					
ANR	4193901	Identifier	r_debug_continue_syscalls		4193650	0					
ANR	4193902	ArgumentList	core -> dbg		4193650	1					
ANR	4193903	Argument	core -> dbg		4193650	0					
ANR	4193904	PtrMemberAccess	core -> dbg		4193650	0					
ANR	4193905	Identifier	core		4193650	0					
ANR	4193906	Identifier	dbg		4193650	1					
ANR	4193907	Argument	syscalls		4193650	1					
ANR	4193908	Identifier	syscalls		4193650	0					
ANR	4193909	Argument	count		4193650	2					
ANR	4193910	Identifier	count		4193650	0					
ANR	4193911	ExpressionStatement	free ( syscalls )	576:1:22222:22237	4193650	5	True				
ANR	4193912	CallExpression	free ( syscalls )		4193650	0					
ANR	4193913	Callee	free		4193650	0					
ANR	4193914	Identifier	free		4193650	0					
ANR	4193915	ArgumentList	syscalls		4193650	1					
ANR	4193916	Argument	syscalls		4193650	0					
ANR	4193917	Identifier	syscalls		4193650	0					
ANR	4193918	ReturnType	static void		4193650	1					
ANR	4193919	Identifier	cmd_debug_cont_syscall		4193650	2					
ANR	4193920	ParameterList	"RCore * core , const char * _str"		4193650	3					
ANR	4193921	Parameter	RCore * core	541:36:21218:21228	4193650	0	True				
ANR	4193922	ParameterType	RCore *		4193650	0					
ANR	4193923	Identifier	core		4193650	1					
ANR	4193924	Parameter	const char * _str	541:49:21231:21246	4193650	1	True				
ANR	4193925	ParameterType	const char *		4193650	0					
ANR	4193926	Identifier	_str		4193650	1					
ANR	4193927	CFGEntryNode	ENTRY		4193650		True				
ANR	4193928	CFGExitNode	EXIT		4193650		True				
ANR	4193929	Symbol	* core		4193650						
ANR	4193930	Symbol	sysnumstr		4193650						
ANR	4193931	Symbol	calloc		4193650						
ANR	4193932	Symbol	r_str_word_set0		4193650						
ANR	4193933	Symbol	core -> anal		4193650						
ANR	4193934	Symbol	r_num_math		4193650						
ANR	4193935	Symbol	sig		4193650						
ANR	4193936	Symbol	core -> num		4193650						
ANR	4193937	Symbol	_str		4193650						
ANR	4193938	Symbol	* * core		4193650						
ANR	4193939	Symbol	NULL		4193650						
ANR	4193940	Symbol	count		4193650						
ANR	4193941	Symbol	i		4193650						
ANR	4193942	Symbol	r_str_word_get0		4193650						
ANR	4193943	Symbol	r_syscall_get_num		4193650						
ANR	4193944	Symbol	core -> anal -> syscall		4193650						
ANR	4193945	Symbol	* syscalls		4193650						
ANR	4193946	Symbol	str		4193650						
ANR	4193947	Symbol	core		4193650						
ANR	4193948	Symbol	* _str		4193650						
ANR	4193949	Symbol	* i		4193650						
ANR	4193950	Symbol	* core -> anal		4193650						
ANR	4193951	Symbol	core -> dbg -> reg		4193650						
ANR	4193952	Symbol	true		4193650						
ANR	4193953	Symbol	strdup		4193650						
ANR	4193954	Symbol	* core -> dbg		4193650						
ANR	4193955	Symbol	syscalls		4193650						
ANR	4193956	Symbol	core -> dbg		4193650						
ANR	4193957	Function	showreg	579:0:22242:23343							
ANR	4193958	FunctionDef	"showreg (RCore * core , const char * str)"		4193957	0					
ANR	4193959	CompoundStatement		579:49:22291:23343	4193957	0					
ANR	4193960	IdentifierDeclStatement	int size = 0 ;	580:1:22294:22306	4193957	0	True				
ANR	4193961	IdentifierDecl	size = 0		4193957	0					
ANR	4193962	IdentifierDeclType	int		4193957	0					
ANR	4193963	Identifier	size		4193957	1					
ANR	4193964	AssignmentExpression	size = 0		4193957	2		=			
ANR	4193965	Identifier	size		4193957	0					
ANR	4193966	PrimaryExpression	0		4193957	1					
ANR	4193967	IdentifierDeclStatement	RRegItem * r = 0 ;	581:1:22309:22324	4193957	1	True				
ANR	4193968	IdentifierDecl	* r = 0		4193957	0					
ANR	4193969	IdentifierDeclType	RRegItem *		4193957	0					
ANR	4193970	Identifier	r		4193957	1					
ANR	4193971	AssignmentExpression	* r = 0		4193957	2		=			
ANR	4193972	Identifier	r		4193957	0					
ANR	4193973	PrimaryExpression	0		4193957	1					
ANR	4193974	IdentifierDeclStatement	const char * rname = str ;	582:1:22327:22350	4193957	2	True				
ANR	4193975	IdentifierDecl	* rname = str		4193957	0					
ANR	4193976	IdentifierDeclType	const char *		4193957	0					
ANR	4193977	Identifier	rname		4193957	1					
ANR	4193978	AssignmentExpression	* rname = str		4193957	2		=			
ANR	4193979	Identifier	str		4193957	0					
ANR	4193980	Identifier	str		4193957	1					
ANR	4193981	IdentifierDeclStatement	int role = r_reg_get_name_idx ( str ) ;	584:1:22377:22412	4193957	3	True				
ANR	4193982	IdentifierDecl	role = r_reg_get_name_idx ( str )		4193957	0					
ANR	4193983	IdentifierDeclType	int		4193957	0					
ANR	4193984	Identifier	role		4193957	1					
ANR	4193985	AssignmentExpression	role = r_reg_get_name_idx ( str )		4193957	2		=			
ANR	4193986	Identifier	role		4193957	0					
ANR	4193987	CallExpression	r_reg_get_name_idx ( str )		4193957	1					
ANR	4193988	Callee	r_reg_get_name_idx		4193957	0					
ANR	4193989	Identifier	r_reg_get_name_idx		4193957	0					
ANR	4193990	ArgumentList	str		4193957	1					
ANR	4193991	Argument	str		4193957	0					
ANR	4193992	Identifier	str		4193957	0					
ANR	4193993	IfStatement	if ( role != - 1 )		4193957	4					
ANR	4193994	Condition	role != - 1	585:5:22419:22428	4193957	0	True				
ANR	4193995	EqualityExpression	role != - 1		4193957	0		!=			
ANR	4193996	Identifier	role		4193957	0					
ANR	4193997	UnaryOperationExpression	- 1		4193957	1					
ANR	4193998	UnaryOperator	-		4193957	0					
ANR	4193999	PrimaryExpression	1		4193957	1					
ANR	4194000	CompoundStatement		7:17:139:139	4193957	1					
ANR	4194001	ExpressionStatement	"rname = r_reg_get_name ( core -> dbg -> reg , role )"	586:2:22435:22480	4193957	0	True				
ANR	4194002	AssignmentExpression	"rname = r_reg_get_name ( core -> dbg -> reg , role )"		4193957	0		=			
ANR	4194003	Identifier	rname		4193957	0					
ANR	4194004	CallExpression	"r_reg_get_name ( core -> dbg -> reg , role )"		4193957	1					
ANR	4194005	Callee	r_reg_get_name		4193957	0					
ANR	4194006	Identifier	r_reg_get_name		4193957	0					
ANR	4194007	ArgumentList	core -> dbg -> reg		4193957	1					
ANR	4194008	Argument	core -> dbg -> reg		4193957	0					
ANR	4194009	PtrMemberAccess	core -> dbg -> reg		4193957	0					
ANR	4194010	PtrMemberAccess	core -> dbg		4193957	0					
ANR	4194011	Identifier	core		4193957	0					
ANR	4194012	Identifier	dbg		4193957	1					
ANR	4194013	Identifier	reg		4193957	1					
ANR	4194014	Argument	role		4193957	1					
ANR	4194015	Identifier	role		4193957	0					
ANR	4194016	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , rname , - 1 )"	588:1:22486:22528	4193957	5	True				
ANR	4194017	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , rname , - 1 )"		4193957	0		=			
ANR	4194018	Identifier	r		4193957	0					
ANR	4194019	CallExpression	"r_reg_get ( core -> dbg -> reg , rname , - 1 )"		4193957	1					
ANR	4194020	Callee	r_reg_get		4193957	0					
ANR	4194021	Identifier	r_reg_get		4193957	0					
ANR	4194022	ArgumentList	core -> dbg -> reg		4193957	1					
ANR	4194023	Argument	core -> dbg -> reg		4193957	0					
ANR	4194024	PtrMemberAccess	core -> dbg -> reg		4193957	0					
ANR	4194025	PtrMemberAccess	core -> dbg		4193957	0					
ANR	4194026	Identifier	core		4193957	0					
ANR	4194027	Identifier	dbg		4193957	1					
ANR	4194028	Identifier	reg		4193957	1					
ANR	4194029	Argument	rname		4193957	1					
ANR	4194030	Identifier	rname		4193957	0					
ANR	4194031	Argument	- 1		4193957	2					
ANR	4194032	UnaryOperationExpression	- 1		4193957	0					
ANR	4194033	UnaryOperator	-		4193957	0					
ANR	4194034	PrimaryExpression	1		4193957	1					
ANR	4194035	IfStatement	if ( r )		4193957	6					
ANR	4194036	Condition	r	589:5:22535:22535	4193957	0	True				
ANR	4194037	Identifier	r		4193957	0					
ANR	4194038	CompoundStatement		13:2:262:271	4193957	1					
ANR	4194039	IdentifierDeclStatement	ut64 off ;	590:2:22542:22550	4193957	0	True				
ANR	4194040	IdentifierDecl	off		4193957	0					
ANR	4194041	IdentifierDeclType	ut64		4193957	0					
ANR	4194042	Identifier	off		4193957	1					
ANR	4194043	IdentifierDeclStatement	utX value ;	591:2:22554:22563	4193957	1	True				
ANR	4194044	IdentifierDecl	value		4193957	0					
ANR	4194045	IdentifierDeclType	utX		4193957	0					
ANR	4194046	Identifier	value		4193957	1					
ANR	4194047	IfStatement	if ( r -> size > 64 )		4193957	2					
ANR	4194048	Condition	r -> size > 64	592:6:22571:22582	4193957	0	True				
ANR	4194049	RelationalExpression	r -> size > 64		4193957	0		>			
ANR	4194050	PtrMemberAccess	r -> size		4193957	0					
ANR	4194051	Identifier	r		4193957	0					
ANR	4194052	Identifier	size		4193957	1					
ANR	4194053	PrimaryExpression	64		4193957	1					
ANR	4194054	CompoundStatement		14:20:293:293	4193957	1					
ANR	4194055	ExpressionStatement	"off = r_reg_get_value_big ( core -> dbg -> reg , r , & value )"	593:3:22590:22643	4193957	0	True				
ANR	4194056	AssignmentExpression	"off = r_reg_get_value_big ( core -> dbg -> reg , r , & value )"		4193957	0		=			
ANR	4194057	Identifier	off		4193957	0					
ANR	4194058	CallExpression	"r_reg_get_value_big ( core -> dbg -> reg , r , & value )"		4193957	1					
ANR	4194059	Callee	r_reg_get_value_big		4193957	0					
ANR	4194060	Identifier	r_reg_get_value_big		4193957	0					
ANR	4194061	ArgumentList	core -> dbg -> reg		4193957	1					
ANR	4194062	Argument	core -> dbg -> reg		4193957	0					
ANR	4194063	PtrMemberAccess	core -> dbg -> reg		4193957	0					
ANR	4194064	PtrMemberAccess	core -> dbg		4193957	0					
ANR	4194065	Identifier	core		4193957	0					
ANR	4194066	Identifier	dbg		4193957	1					
ANR	4194067	Identifier	reg		4193957	1					
ANR	4194068	Argument	r		4193957	1					
ANR	4194069	Identifier	r		4193957	0					
ANR	4194070	Argument	& value		4193957	2					
ANR	4194071	UnaryOperationExpression	& value		4193957	0					
ANR	4194072	UnaryOperator	&		4193957	0					
ANR	4194073	Identifier	value		4193957	1					
ANR	4194074	SwitchStatement	switch ( r -> size )		4193957	1					
ANR	4194075	Condition	r -> size	594:11:22656:22662	4193957	0	True				
ANR	4194076	PtrMemberAccess	r -> size		4193957	0					
ANR	4194077	Identifier	r		4193957	0					
ANR	4194078	Identifier	size		4193957	1					
ANR	4194079	CompoundStatement		16:20:373:373	4193957	1					
ANR	4194080	Label	case 80 :	595:3:22670:22677	4193957	0	True				
ANR	4194081	Statement	r_cons_printf	596:4:22683:22695	4193957	1	True				
ANR	4194082	Statement	(	596:18:22697:22697	4193957	2	True				
ANR	4194083	Statement	"""0x%04x%016"""	596:19:22698:22709	4193957	3	True				
ANR	4194084	Statement	PFMT64x	596:31:22710:22716	4193957	4	True				
ANR	4194085	Statement	"""\\n"""	596:38:22717:22720	4193957	5	True				
ANR	4194086	Statement	","	596:42:22721:22721	4193957	6	True				
ANR	4194087	Statement	value	596:44:22723:22727	4193957	7	True				
ANR	4194088	Statement	.	596:49:22728:22728	4193957	8	True				
ANR	4194089	Statement	v80	596:50:22729:22731	4193957	9	True				
ANR	4194090	Statement	.	596:53:22732:22732	4193957	10	True				
ANR	4194091	Statement	High	596:54:22733:22736	4193957	11	True				
ANR	4194092	Statement	","	596:58:22737:22737	4193957	12	True				
ANR	4194093	Statement	value	596:60:22739:22743	4193957	13	True				
ANR	4194094	Statement	.	596:65:22744:22744	4193957	14	True				
ANR	4194095	Statement	v80	596:66:22745:22747	4193957	15	True				
ANR	4194096	Statement	.	596:69:22748:22748	4193957	16	True				
ANR	4194097	Statement	Low	596:70:22749:22751	4193957	17	True				
ANR	4194098	Statement	)	596:73:22752:22752	4193957	18	True				
ANR	4194099	ExpressionStatement		596:74:22753:22753	4193957	19	True				
ANR	4194100	BreakStatement	break ;	597:4:22759:22764	4193957	20	True				
ANR	4194101	Label	case 96 :	598:3:22769:22776	4193957	21	True				
ANR	4194102	Statement	r_cons_printf	599:4:22782:22794	4193957	22	True				
ANR	4194103	Statement	(	599:18:22796:22796	4193957	23	True				
ANR	4194104	Statement	"""0x%08x%016"""	599:19:22797:22808	4193957	24	True				
ANR	4194105	Statement	PFMT64x	599:31:22809:22815	4193957	25	True				
ANR	4194106	Statement	"""\\n"""	599:38:22816:22819	4193957	26	True				
ANR	4194107	Statement	","	599:42:22820:22820	4193957	27	True				
ANR	4194108	Statement	value	599:44:22822:22826	4193957	28	True				
ANR	4194109	Statement	.	599:49:22827:22827	4193957	29	True				
ANR	4194110	Statement	v96	599:50:22828:22830	4193957	30	True				
ANR	4194111	Statement	.	599:53:22831:22831	4193957	31	True				
ANR	4194112	Statement	High	599:54:22832:22835	4193957	32	True				
ANR	4194113	Statement	","	599:58:22836:22836	4193957	33	True				
ANR	4194114	Statement	value	599:60:22838:22842	4193957	34	True				
ANR	4194115	Statement	.	599:65:22843:22843	4193957	35	True				
ANR	4194116	Statement	v96	599:66:22844:22846	4193957	36	True				
ANR	4194117	Statement	.	599:69:22847:22847	4193957	37	True				
ANR	4194118	Statement	Low	599:70:22848:22850	4193957	38	True				
ANR	4194119	Statement	)	599:73:22851:22851	4193957	39	True				
ANR	4194120	ExpressionStatement		599:74:22852:22852	4193957	40	True				
ANR	4194121	BreakStatement	break ;	600:4:22858:22863	4193957	41	True				
ANR	4194122	Label	case 128 :	601:3:22868:22876	4193957	42	True				
ANR	4194123	Statement	r_cons_printf	602:4:22882:22894	4193957	43	True				
ANR	4194124	Statement	(	602:18:22896:22896	4193957	44	True				
ANR	4194125	Statement	"""0x%016"""	602:19:22897:22904	4193957	45	True				
ANR	4194126	Statement	PFMT64x	602:27:22905:22911	4193957	46	True				
ANR	4194127	Statement	"""%016"""	602:34:22912:22917	4193957	47	True				
ANR	4194128	Statement	PFMT64x	602:40:22918:22924	4193957	48	True				
ANR	4194129	Statement	"""\\n"""	602:47:22925:22928	4193957	49	True				
ANR	4194130	Statement	","	602:51:22929:22929	4193957	50	True				
ANR	4194131	Statement	value	602:53:22931:22935	4193957	51	True				
ANR	4194132	Statement	.	602:58:22936:22936	4193957	52	True				
ANR	4194133	Statement	v128	602:59:22937:22940	4193957	53	True				
ANR	4194134	Statement	.	602:63:22941:22941	4193957	54	True				
ANR	4194135	Statement	High	602:64:22942:22945	4193957	55	True				
ANR	4194136	Statement	","	602:68:22946:22946	4193957	56	True				
ANR	4194137	Statement	value	602:70:22948:22952	4193957	57	True				
ANR	4194138	Statement	.	602:75:22953:22953	4193957	58	True				
ANR	4194139	Statement	v128	602:76:22954:22957	4193957	59	True				
ANR	4194140	Statement	.	602:80:22958:22958	4193957	60	True				
ANR	4194141	Statement	Low	602:81:22959:22961	4193957	61	True				
ANR	4194142	Statement	)	602:84:22962:22962	4193957	62	True				
ANR	4194143	ExpressionStatement		602:85:22963:22963	4193957	63	True				
ANR	4194144	BreakStatement	break ;	603:4:22969:22974	4193957	64	True				
ANR	4194145	Label	default :	604:3:22979:22986	4193957	65	True				
ANR	4194146	Identifier	default		4193957	0					
ANR	4194147	ExpressionStatement	"r_cons_printf ( ""Error while retrieving reg '%s' of %i bits\\n"" , str + 1 , r -> size )"	605:4:22992:23071	4193957	66	True				
ANR	4194148	CallExpression	"r_cons_printf ( ""Error while retrieving reg '%s' of %i bits\\n"" , str + 1 , r -> size )"		4193957	0					
ANR	4194149	Callee	r_cons_printf		4193957	0					
ANR	4194150	Identifier	r_cons_printf		4193957	0					
ANR	4194151	ArgumentList	"""Error while retrieving reg '%s' of %i bits\\n"""		4193957	1					
ANR	4194152	Argument	"""Error while retrieving reg '%s' of %i bits\\n"""		4193957	0					
ANR	4194153	PrimaryExpression	"""Error while retrieving reg '%s' of %i bits\\n"""		4193957	0					
ANR	4194154	Argument	str + 1		4193957	1					
ANR	4194155	AdditiveExpression	str + 1		4193957	0		+			
ANR	4194156	Identifier	str		4193957	0					
ANR	4194157	PrimaryExpression	1		4193957	1					
ANR	4194158	Argument	r -> size		4193957	2					
ANR	4194159	PtrMemberAccess	r -> size		4193957	0					
ANR	4194160	Identifier	r		4193957	0					
ANR	4194161	Identifier	size		4193957	1					
ANR	4194162	ElseStatement	else		4193957	0					
ANR	4194163	CompoundStatement		29:9:795:795	4193957	0					
ANR	4194164	ExpressionStatement	"off = r_reg_get_value ( core -> dbg -> reg , r )"	608:3:23092:23133	4193957	0	True				
ANR	4194165	AssignmentExpression	"off = r_reg_get_value ( core -> dbg -> reg , r )"		4193957	0		=			
ANR	4194166	Identifier	off		4193957	0					
ANR	4194167	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		4193957	1					
ANR	4194168	Callee	r_reg_get_value		4193957	0					
ANR	4194169	Identifier	r_reg_get_value		4193957	0					
ANR	4194170	ArgumentList	core -> dbg -> reg		4193957	1					
ANR	4194171	Argument	core -> dbg -> reg		4193957	0					
ANR	4194172	PtrMemberAccess	core -> dbg -> reg		4193957	0					
ANR	4194173	PtrMemberAccess	core -> dbg		4193957	0					
ANR	4194174	Identifier	core		4193957	0					
ANR	4194175	Identifier	dbg		4193957	1					
ANR	4194176	Identifier	reg		4193957	1					
ANR	4194177	Argument	r		4193957	1					
ANR	4194178	Identifier	r		4193957	0					
ANR	4194179	Statement	r_cons_printf	609:3:23138:23150	4193957	1	True				
ANR	4194180	Statement	(	609:17:23152:23152	4193957	2	True				
ANR	4194181	Statement	"""0x%08"""	609:18:23153:23159	4193957	3	True				
ANR	4194182	Statement	PFMT64x	609:25:23160:23166	4193957	4	True				
ANR	4194183	Statement	"""\\n"""	609:33:23168:23171	4193957	5	True				
ANR	4194184	Statement	","	609:37:23172:23172	4193957	6	True				
ANR	4194185	Statement	off	609:39:23174:23176	4193957	7	True				
ANR	4194186	Statement	)	609:42:23177:23177	4193957	8	True				
ANR	4194187	ExpressionStatement		609:43:23178:23178	4193957	9	True				
ANR	4194188	ReturnStatement	return r -> size ;	611:2:23186:23200	4193957	3	True				
ANR	4194189	PtrMemberAccess	r -> size		4193957	0					
ANR	4194190	Identifier	r		4193957	0					
ANR	4194191	Identifier	size		4193957	1					
ANR	4194192	IdentifierDeclStatement	"char * arg = strchr ( str + 1 , ' ' ) ;"	613:1:23206:23239	4193957	7	True				
ANR	4194193	IdentifierDecl	"* arg = strchr ( str + 1 , ' ' )"		4193957	0					
ANR	4194194	IdentifierDeclType	char *		4193957	0					
ANR	4194195	Identifier	arg		4193957	1					
ANR	4194196	AssignmentExpression	"* arg = strchr ( str + 1 , ' ' )"		4193957	2		=			
ANR	4194197	Identifier	arg		4193957	0					
ANR	4194198	CallExpression	"strchr ( str + 1 , ' ' )"		4193957	1					
ANR	4194199	Callee	strchr		4193957	0					
ANR	4194200	Identifier	strchr		4193957	0					
ANR	4194201	ArgumentList	str + 1		4193957	1					
ANR	4194202	Argument	str + 1		4193957	0					
ANR	4194203	AdditiveExpression	str + 1		4193957	0		+			
ANR	4194204	Identifier	str		4193957	0					
ANR	4194205	PrimaryExpression	1		4193957	1					
ANR	4194206	Argument	' '		4193957	1					
ANR	4194207	PrimaryExpression	' '		4193957	0					
ANR	4194208	IfStatement	if ( arg && size == 0 )		4193957	8					
ANR	4194209	Condition	arg && size == 0	614:5:23246:23261	4193957	0	True				
ANR	4194210	AndExpression	arg && size == 0		4193957	0		&&			
ANR	4194211	Identifier	arg		4193957	0					
ANR	4194212	EqualityExpression	size == 0		4193957	1		==			
ANR	4194213	Identifier	size		4193957	0					
ANR	4194214	PrimaryExpression	0		4193957	1					
ANR	4194215	CompoundStatement		36:23:972:972	4193957	1					
ANR	4194216	ExpressionStatement	size = atoi ( arg + 1 )	615:2:23268:23289	4193957	0	True				
ANR	4194217	AssignmentExpression	size = atoi ( arg + 1 )		4193957	0		=			
ANR	4194218	Identifier	size		4193957	0					
ANR	4194219	CallExpression	atoi ( arg + 1 )		4193957	1					
ANR	4194220	Callee	atoi		4193957	0					
ANR	4194221	Identifier	atoi		4193957	0					
ANR	4194222	ArgumentList	arg + 1		4193957	1					
ANR	4194223	Argument	arg + 1		4193957	0					
ANR	4194224	AdditiveExpression	arg + 1		4193957	0		+			
ANR	4194225	Identifier	arg		4193957	0					
ANR	4194226	PrimaryExpression	1		4193957	1					
ANR	4194227	ElseStatement	else		4193957	0					
ANR	4194228	CompoundStatement		38:8:1007:1007	4193957	0					
ANR	4194229	ExpressionStatement	size = atoi ( str + 1 )	617:2:23303:23324	4193957	0	True				
ANR	4194230	AssignmentExpression	size = atoi ( str + 1 )		4193957	0		=			
ANR	4194231	Identifier	size		4193957	0					
ANR	4194232	CallExpression	atoi ( str + 1 )		4193957	1					
ANR	4194233	Callee	atoi		4193957	0					
ANR	4194234	Identifier	atoi		4193957	0					
ANR	4194235	ArgumentList	str + 1		4193957	1					
ANR	4194236	Argument	str + 1		4193957	0					
ANR	4194237	AdditiveExpression	str + 1		4193957	0		+			
ANR	4194238	Identifier	str		4193957	0					
ANR	4194239	PrimaryExpression	1		4193957	1					
ANR	4194240	ReturnStatement	return size ;	619:1:23330:23341	4193957	9	True				
ANR	4194241	Identifier	size		4193957	0					
ANR	4194242	ReturnType	static int		4193957	1					
ANR	4194243	Identifier	showreg		4193957	2					
ANR	4194244	ParameterList	"RCore * core , const char * str"		4193957	3					
ANR	4194245	Parameter	RCore * core	579:19:22261:22271	4193957	0	True				
ANR	4194246	ParameterType	RCore *		4193957	0					
ANR	4194247	Identifier	core		4193957	1					
ANR	4194248	Parameter	const char * str	579:32:22274:22288	4193957	1	True				
ANR	4194249	ParameterType	const char *		4193957	0					
ANR	4194250	Identifier	str		4193957	1					
ANR	4194251	CFGEntryNode	ENTRY		4193957		True				
ANR	4194252	CFGExitNode	EXIT		4193957		True				
ANR	4194253	Symbol	atoi		4193957						
ANR	4194254	Symbol	r_reg_get_value		4193957						
ANR	4194255	Symbol	role		4193957						
ANR	4194256	Symbol	& value		4193957						
ANR	4194257	Symbol	rname		4193957						
ANR	4194258	Symbol	* core		4193957						
ANR	4194259	Symbol	strchr		4193957						
ANR	4194260	Symbol	r_reg_get_value_big		4193957						
ANR	4194261	Symbol	off		4193957						
ANR	4194262	Symbol	str		4193957						
ANR	4194263	Symbol	core		4193957						
ANR	4194264	Symbol	r_reg_get_name_idx		4193957						
ANR	4194265	Symbol	r		4193957						
ANR	4194266	Symbol	size		4193957						
ANR	4194267	Symbol	r_reg_get_name		4193957						
ANR	4194268	Symbol	core -> dbg -> reg		4193957						
ANR	4194269	Symbol	arg		4193957						
ANR	4194270	Symbol	* r		4193957						
ANR	4194271	Symbol	* core -> dbg		4193957						
ANR	4194272	Symbol	value		4193957						
ANR	4194273	Symbol	* * core		4193957						
ANR	4194274	Symbol	r -> size		4193957						
ANR	4194275	Symbol	core -> dbg		4193957						
ANR	4194276	Symbol	r_reg_get		4193957						
ANR	4194277	Function	get_graphtrace_node	622:0:23346:23707							
ANR	4194278	FunctionDef	"get_graphtrace_node (RGraph * g , Sdb * nodes , struct trace_node * tn)"		4194277	0					
ANR	4194279	CompoundStatement		622:86:23432:23707	4194277	0					
ANR	4194280	IdentifierDeclStatement	RGraphNode * gn ;	623:1:23435:23449	4194277	0	True				
ANR	4194281	IdentifierDecl	* gn		4194277	0					
ANR	4194282	IdentifierDeclType	RGraphNode *		4194277	0					
ANR	4194283	Identifier	gn		4194277	1					
ANR	4194284	IdentifierDeclStatement	char tn_key [ TN_KEY_LEN ] ;	624:1:23452:23475	4194277	1	True				
ANR	4194285	IdentifierDecl	tn_key [ TN_KEY_LEN ]		4194277	0					
ANR	4194286	IdentifierDeclType	char [ TN_KEY_LEN ]		4194277	0					
ANR	4194287	Identifier	tn_key		4194277	1					
ANR	4194288	Identifier	TN_KEY_LEN		4194277	2					
ANR	4194289	ExpressionStatement	"snprintf ( tn_key , TN_KEY_LEN , TN_KEY_FMT , tn -> addr )"	626:1:23479:23530	4194277	2	True				
ANR	4194290	CallExpression	"snprintf ( tn_key , TN_KEY_LEN , TN_KEY_FMT , tn -> addr )"		4194277	0					
ANR	4194291	Callee	snprintf		4194277	0					
ANR	4194292	Identifier	snprintf		4194277	0					
ANR	4194293	ArgumentList	tn_key		4194277	1					
ANR	4194294	Argument	tn_key		4194277	0					
ANR	4194295	Identifier	tn_key		4194277	0					
ANR	4194296	Argument	TN_KEY_LEN		4194277	1					
ANR	4194297	Identifier	TN_KEY_LEN		4194277	0					
ANR	4194298	Argument	TN_KEY_FMT		4194277	2					
ANR	4194299	Identifier	TN_KEY_FMT		4194277	0					
ANR	4194300	Argument	tn -> addr		4194277	3					
ANR	4194301	PtrMemberAccess	tn -> addr		4194277	0					
ANR	4194302	Identifier	tn		4194277	0					
ANR	4194303	Identifier	addr		4194277	1					
ANR	4194304	ExpressionStatement	"gn = ( RGraphNode * ) ( size_t ) sdb_num_get ( nodes , tn_key , NULL )"	627:1:23533:23593	4194277	3	True				
ANR	4194305	AssignmentExpression	"gn = ( RGraphNode * ) ( size_t ) sdb_num_get ( nodes , tn_key , NULL )"		4194277	0		=			
ANR	4194306	Identifier	gn		4194277	0					
ANR	4194307	CastExpression	"( RGraphNode * ) ( size_t ) sdb_num_get ( nodes , tn_key , NULL )"		4194277	1					
ANR	4194308	CastTarget	RGraphNode *		4194277	0					
ANR	4194309	CastExpression	"( size_t ) sdb_num_get ( nodes , tn_key , NULL )"		4194277	1					
ANR	4194310	CastTarget	size_t		4194277	0					
ANR	4194311	CallExpression	"sdb_num_get ( nodes , tn_key , NULL )"		4194277	1					
ANR	4194312	Callee	sdb_num_get		4194277	0					
ANR	4194313	Identifier	sdb_num_get		4194277	0					
ANR	4194314	ArgumentList	nodes		4194277	1					
ANR	4194315	Argument	nodes		4194277	0					
ANR	4194316	Identifier	nodes		4194277	0					
ANR	4194317	Argument	tn_key		4194277	1					
ANR	4194318	Identifier	tn_key		4194277	0					
ANR	4194319	Argument	NULL		4194277	2					
ANR	4194320	Identifier	NULL		4194277	0					
ANR	4194321	IfStatement	if ( ! gn )		4194277	4					
ANR	4194322	Condition	! gn	628:5:23600:23602	4194277	0	True				
ANR	4194323	UnaryOperationExpression	! gn		4194277	0					
ANR	4194324	UnaryOperator	!		4194277	0					
ANR	4194325	Identifier	gn		4194277	1					
ANR	4194326	CompoundStatement		7:10:172:172	4194277	1					
ANR	4194327	ExpressionStatement	"gn = r_graph_add_node ( g , tn )"	629:2:23609:23638	4194277	0	True				
ANR	4194328	AssignmentExpression	"gn = r_graph_add_node ( g , tn )"		4194277	0		=			
ANR	4194329	Identifier	gn		4194277	0					
ANR	4194330	CallExpression	"r_graph_add_node ( g , tn )"		4194277	1					
ANR	4194331	Callee	r_graph_add_node		4194277	0					
ANR	4194332	Identifier	r_graph_add_node		4194277	0					
ANR	4194333	ArgumentList	g		4194277	1					
ANR	4194334	Argument	g		4194277	0					
ANR	4194335	Identifier	g		4194277	0					
ANR	4194336	Argument	tn		4194277	1					
ANR	4194337	Identifier	tn		4194277	0					
ANR	4194338	ExpressionStatement	"sdb_num_set ( nodes , tn_key , ( ut64 ) ( size_t ) gn , 0 )"	630:2:23642:23690	4194277	1	True				
ANR	4194339	CallExpression	"sdb_num_set ( nodes , tn_key , ( ut64 ) ( size_t ) gn , 0 )"		4194277	0					
ANR	4194340	Callee	sdb_num_set		4194277	0					
ANR	4194341	Identifier	sdb_num_set		4194277	0					
ANR	4194342	ArgumentList	nodes		4194277	1					
ANR	4194343	Argument	nodes		4194277	0					
ANR	4194344	Identifier	nodes		4194277	0					
ANR	4194345	Argument	tn_key		4194277	1					
ANR	4194346	Identifier	tn_key		4194277	0					
ANR	4194347	Argument	( ut64 ) ( size_t ) gn		4194277	2					
ANR	4194348	CastExpression	( ut64 ) ( size_t ) gn		4194277	0					
ANR	4194349	CastTarget	ut64		4194277	0					
ANR	4194350	CastExpression	( size_t ) gn		4194277	1					
ANR	4194351	CastTarget	size_t		4194277	0					
ANR	4194352	Identifier	gn		4194277	1					
ANR	4194353	Argument	0		4194277	3					
ANR	4194354	PrimaryExpression	0		4194277	0					
ANR	4194355	ReturnStatement	return gn ;	632:1:23696:23705	4194277	5	True				
ANR	4194356	Identifier	gn		4194277	0					
ANR	4194357	ReturnType	static RGraphNode *		4194277	1					
ANR	4194358	Identifier	get_graphtrace_node		4194277	2					
ANR	4194359	ParameterList	"RGraph * g , Sdb * nodes , struct trace_node * tn"		4194277	3					
ANR	4194360	Parameter	RGraph * g	622:40:23386:23394	4194277	0	True				
ANR	4194361	ParameterType	RGraph *		4194277	0					
ANR	4194362	Identifier	g		4194277	1					
ANR	4194363	Parameter	Sdb * nodes	622:51:23397:23406	4194277	1	True				
ANR	4194364	ParameterType	Sdb *		4194277	0					
ANR	4194365	Identifier	nodes		4194277	1					
ANR	4194366	Parameter	struct trace_node * tn	622:63:23409:23429	4194277	2	True				
ANR	4194367	ParameterType	struct trace_node *		4194277	0					
ANR	4194368	Identifier	tn		4194277	1					
ANR	4194369	CFGEntryNode	ENTRY		4194277		True				
ANR	4194370	CFGExitNode	EXIT		4194277		True				
ANR	4194371	Symbol	sdb_num_get		4194277						
ANR	4194372	Symbol	nodes		4194277						
ANR	4194373	Symbol	* tn		4194277						
ANR	4194374	Symbol	tn -> addr		4194277						
ANR	4194375	Symbol	NULL		4194277						
ANR	4194376	Symbol	TN_KEY_LEN		4194277						
ANR	4194377	Symbol	g		4194277						
ANR	4194378	Symbol	gn		4194277						
ANR	4194379	Symbol	tn_key		4194277						
ANR	4194380	Symbol	tn		4194277						
ANR	4194381	Symbol	r_graph_add_node		4194277						
ANR	4194382	Symbol	TN_KEY_FMT		4194277						
ANR	4194383	Function	dot_trace_create_node	635:0:23710:23945							
ANR	4194384	FunctionDef	"dot_trace_create_node (RTreeNode * n , RTreeVisitor * vis)"		4194383	0					
ANR	4194385	CompoundStatement		635:68:23778:23945	4194383	0					
ANR	4194386	IdentifierDeclStatement	struct dot_trace_ght * data = ( struct dot_trace_ght * ) vis -> data ;	636:1:23781:23843	4194383	0	True				
ANR	4194387	IdentifierDecl	* data = ( struct dot_trace_ght * ) vis -> data		4194383	0					
ANR	4194388	IdentifierDeclType	struct dot_trace_ght *		4194383	0					
ANR	4194389	Identifier	data		4194383	1					
ANR	4194390	AssignmentExpression	* data = ( struct dot_trace_ght * ) vis -> data		4194383	2		=			
ANR	4194391	Identifier	data		4194383	0					
ANR	4194392	CastExpression	( struct dot_trace_ght * ) vis -> data		4194383	1					
ANR	4194393	CastTarget	struct dot_trace_ght *		4194383	0					
ANR	4194394	PtrMemberAccess	vis -> data		4194383	1					
ANR	4194395	Identifier	vis		4194383	0					
ANR	4194396	Identifier	data		4194383	1					
ANR	4194397	IdentifierDeclStatement	struct trace_node * tn = n -> data ;	637:1:23846:23877	4194383	1	True				
ANR	4194398	IdentifierDecl	* tn = n -> data		4194383	0					
ANR	4194399	IdentifierDeclType	struct trace_node *		4194383	0					
ANR	4194400	Identifier	tn		4194383	1					
ANR	4194401	AssignmentExpression	* tn = n -> data		4194383	2		=			
ANR	4194402	Identifier	tn		4194383	0					
ANR	4194403	PtrMemberAccess	n -> data		4194383	1					
ANR	4194404	Identifier	n		4194383	0					
ANR	4194405	Identifier	data		4194383	1					
ANR	4194406	IfStatement	if ( tn )		4194383	2					
ANR	4194407	Condition	tn	638:5:23884:23885	4194383	0	True				
ANR	4194408	Identifier	tn		4194383	0					
ANR	4194409	ExpressionStatement	"get_graphtrace_node ( data -> graph , data -> graphnodes , tn )"	638:9:23888:23943	4194383	1	True				
ANR	4194410	CallExpression	"get_graphtrace_node ( data -> graph , data -> graphnodes , tn )"		4194383	0					
ANR	4194411	Callee	get_graphtrace_node		4194383	0					
ANR	4194412	Identifier	get_graphtrace_node		4194383	0					
ANR	4194413	ArgumentList	data -> graph		4194383	1					
ANR	4194414	Argument	data -> graph		4194383	0					
ANR	4194415	PtrMemberAccess	data -> graph		4194383	0					
ANR	4194416	Identifier	data		4194383	0					
ANR	4194417	Identifier	graph		4194383	1					
ANR	4194418	Argument	data -> graphnodes		4194383	1					
ANR	4194419	PtrMemberAccess	data -> graphnodes		4194383	0					
ANR	4194420	Identifier	data		4194383	0					
ANR	4194421	Identifier	graphnodes		4194383	1					
ANR	4194422	Argument	tn		4194383	2					
ANR	4194423	Identifier	tn		4194383	0					
ANR	4194424	ReturnType	static void		4194383	1					
ANR	4194425	Identifier	dot_trace_create_node		4194383	2					
ANR	4194426	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		4194383	3					
ANR	4194427	Parameter	RTreeNode * n	635:35:23745:23756	4194383	0	True				
ANR	4194428	ParameterType	RTreeNode *		4194383	0					
ANR	4194429	Identifier	n		4194383	1					
ANR	4194430	Parameter	RTreeVisitor * vis	635:49:23759:23775	4194383	1	True				
ANR	4194431	ParameterType	RTreeVisitor *		4194383	0					
ANR	4194432	Identifier	vis		4194383	1					
ANR	4194433	CFGEntryNode	ENTRY		4194383		True				
ANR	4194434	CFGExitNode	EXIT		4194383		True				
ANR	4194435	Symbol	vis		4194383						
ANR	4194436	Symbol	data -> graph		4194383						
ANR	4194437	Symbol	data -> graphnodes		4194383						
ANR	4194438	Symbol	n -> data		4194383						
ANR	4194439	Symbol	data		4194383						
ANR	4194440	Symbol	* n		4194383						
ANR	4194441	Symbol	* vis		4194383						
ANR	4194442	Symbol	tn		4194383						
ANR	4194443	Symbol	vis -> data		4194383						
ANR	4194444	Symbol	* data		4194383						
ANR	4194445	Symbol	n		4194383						
ANR	4194446	Function	dot_trace_discover_child	641:0:23948:24496							
ANR	4194447	FunctionDef	"dot_trace_discover_child (RTreeNode * n , RTreeVisitor * vis)"		4194446	0					
ANR	4194448	CompoundStatement		641:71:24019:24496	4194446	0					
ANR	4194449	IdentifierDeclStatement	struct dot_trace_ght * data = ( struct dot_trace_ght * ) vis -> data ;	642:1:24022:24084	4194446	0	True				
ANR	4194450	IdentifierDecl	* data = ( struct dot_trace_ght * ) vis -> data		4194446	0					
ANR	4194451	IdentifierDeclType	struct dot_trace_ght *		4194446	0					
ANR	4194452	Identifier	data		4194446	1					
ANR	4194453	AssignmentExpression	* data = ( struct dot_trace_ght * ) vis -> data		4194446	2		=			
ANR	4194454	Identifier	data		4194446	0					
ANR	4194455	CastExpression	( struct dot_trace_ght * ) vis -> data		4194446	1					
ANR	4194456	CastTarget	struct dot_trace_ght *		4194446	0					
ANR	4194457	PtrMemberAccess	vis -> data		4194446	1					
ANR	4194458	Identifier	vis		4194446	0					
ANR	4194459	Identifier	data		4194446	1					
ANR	4194460	IdentifierDeclStatement	RGraph * g = data -> graph ;	643:1:24087:24110	4194446	1	True				
ANR	4194461	IdentifierDecl	* g = data -> graph		4194446	0					
ANR	4194462	IdentifierDeclType	RGraph *		4194446	0					
ANR	4194463	Identifier	g		4194446	1					
ANR	4194464	AssignmentExpression	* g = data -> graph		4194446	2		=			
ANR	4194465	Identifier	g		4194446	0					
ANR	4194466	PtrMemberAccess	data -> graph		4194446	1					
ANR	4194467	Identifier	data		4194446	0					
ANR	4194468	Identifier	graph		4194446	1					
ANR	4194469	IdentifierDeclStatement	Sdb * gnodes = data -> graphnodes ;	644:1:24113:24143	4194446	2	True				
ANR	4194470	IdentifierDecl	* gnodes = data -> graphnodes		4194446	0					
ANR	4194471	IdentifierDeclType	Sdb *		4194446	0					
ANR	4194472	Identifier	gnodes		4194446	1					
ANR	4194473	AssignmentExpression	* gnodes = data -> graphnodes		4194446	2		=			
ANR	4194474	Identifier	gnodes		4194446	0					
ANR	4194475	PtrMemberAccess	data -> graphnodes		4194446	1					
ANR	4194476	Identifier	data		4194446	0					
ANR	4194477	Identifier	graphnodes		4194446	1					
ANR	4194478	IdentifierDeclStatement	RTreeNode * parent = n -> parent ;	645:1:24146:24175	4194446	3	True				
ANR	4194479	IdentifierDecl	* parent = n -> parent		4194446	0					
ANR	4194480	IdentifierDeclType	RTreeNode *		4194446	0					
ANR	4194481	Identifier	parent		4194446	1					
ANR	4194482	AssignmentExpression	* parent = n -> parent		4194446	2		=			
ANR	4194483	Identifier	parent		4194446	0					
ANR	4194484	PtrMemberAccess	n -> parent		4194446	1					
ANR	4194485	Identifier	n		4194446	0					
ANR	4194486	Identifier	parent		4194446	1					
ANR	4194487	IdentifierDeclStatement	struct trace_node * tn = n -> data ;	646:1:24178:24209	4194446	4	True				
ANR	4194488	IdentifierDecl	* tn = n -> data		4194446	0					
ANR	4194489	IdentifierDeclType	struct trace_node *		4194446	0					
ANR	4194490	Identifier	tn		4194446	1					
ANR	4194491	AssignmentExpression	* tn = n -> data		4194446	2		=			
ANR	4194492	Identifier	tn		4194446	0					
ANR	4194493	PtrMemberAccess	n -> data		4194446	1					
ANR	4194494	Identifier	n		4194446	0					
ANR	4194495	Identifier	data		4194446	1					
ANR	4194496	IdentifierDeclStatement	struct trace_node * tn_parent = parent -> data ;	647:1:24212:24255	4194446	5	True				
ANR	4194497	IdentifierDecl	* tn_parent = parent -> data		4194446	0					
ANR	4194498	IdentifierDeclType	struct trace_node *		4194446	0					
ANR	4194499	Identifier	tn_parent		4194446	1					
ANR	4194500	AssignmentExpression	* tn_parent = parent -> data		4194446	2		=			
ANR	4194501	Identifier	tn_parent		4194446	0					
ANR	4194502	PtrMemberAccess	parent -> data		4194446	1					
ANR	4194503	Identifier	parent		4194446	0					
ANR	4194504	Identifier	data		4194446	1					
ANR	4194505	IfStatement	if ( tn && tn_parent )		4194446	6					
ANR	4194506	Condition	tn && tn_parent	649:5:24263:24277	4194446	0	True				
ANR	4194507	AndExpression	tn && tn_parent		4194446	0		&&			
ANR	4194508	Identifier	tn		4194446	0					
ANR	4194509	Identifier	tn_parent		4194446	1					
ANR	4194510	CompoundStatement		11:2:320:386	4194446	1					
ANR	4194511	IdentifierDeclStatement	"RGraphNode * gn = get_graphtrace_node ( g , gnodes , tn ) ;"	650:2:24284:24336	4194446	0	True				
ANR	4194512	IdentifierDecl	"* gn = get_graphtrace_node ( g , gnodes , tn )"		4194446	0					
ANR	4194513	IdentifierDeclType	RGraphNode *		4194446	0					
ANR	4194514	Identifier	gn		4194446	1					
ANR	4194515	AssignmentExpression	"* gn = get_graphtrace_node ( g , gnodes , tn )"		4194446	2		=			
ANR	4194516	Identifier	gn		4194446	0					
ANR	4194517	CallExpression	"get_graphtrace_node ( g , gnodes , tn )"		4194446	1					
ANR	4194518	Callee	get_graphtrace_node		4194446	0					
ANR	4194519	Identifier	get_graphtrace_node		4194446	0					
ANR	4194520	ArgumentList	g		4194446	1					
ANR	4194521	Argument	g		4194446	0					
ANR	4194522	Identifier	g		4194446	0					
ANR	4194523	Argument	gnodes		4194446	1					
ANR	4194524	Identifier	gnodes		4194446	0					
ANR	4194525	Argument	tn		4194446	2					
ANR	4194526	Identifier	tn		4194446	0					
ANR	4194527	IdentifierDeclStatement	"RGraphNode * gn_parent = get_graphtrace_node ( g , gnodes , tn_parent ) ;"	651:2:24340:24406	4194446	1	True				
ANR	4194528	IdentifierDecl	"* gn_parent = get_graphtrace_node ( g , gnodes , tn_parent )"		4194446	0					
ANR	4194529	IdentifierDeclType	RGraphNode *		4194446	0					
ANR	4194530	Identifier	gn_parent		4194446	1					
ANR	4194531	AssignmentExpression	"* gn_parent = get_graphtrace_node ( g , gnodes , tn_parent )"		4194446	2		=			
ANR	4194532	Identifier	gn_parent		4194446	0					
ANR	4194533	CallExpression	"get_graphtrace_node ( g , gnodes , tn_parent )"		4194446	1					
ANR	4194534	Callee	get_graphtrace_node		4194446	0					
ANR	4194535	Identifier	get_graphtrace_node		4194446	0					
ANR	4194536	ArgumentList	g		4194446	1					
ANR	4194537	Argument	g		4194446	0					
ANR	4194538	Identifier	g		4194446	0					
ANR	4194539	Argument	gnodes		4194446	1					
ANR	4194540	Identifier	gnodes		4194446	0					
ANR	4194541	Argument	tn_parent		4194446	2					
ANR	4194542	Identifier	tn_parent		4194446	0					
ANR	4194543	IfStatement	"if ( ! r_graph_adjacent ( g , gn_parent , gn ) )"		4194446	2					
ANR	4194544	Condition	"! r_graph_adjacent ( g , gn_parent , gn )"	653:6:24415:24450	4194446	0	True				
ANR	4194545	UnaryOperationExpression	"! r_graph_adjacent ( g , gn_parent , gn )"		4194446	0					
ANR	4194546	UnaryOperator	!		4194446	0					
ANR	4194547	CallExpression	"r_graph_adjacent ( g , gn_parent , gn )"		4194446	1					
ANR	4194548	Callee	r_graph_adjacent		4194446	0					
ANR	4194549	Identifier	r_graph_adjacent		4194446	0					
ANR	4194550	ArgumentList	g		4194446	1					
ANR	4194551	Argument	g		4194446	0					
ANR	4194552	Identifier	g		4194446	0					
ANR	4194553	Argument	gn_parent		4194446	1					
ANR	4194554	Identifier	gn_parent		4194446	0					
ANR	4194555	Argument	gn		4194446	2					
ANR	4194556	Identifier	gn		4194446	0					
ANR	4194557	ExpressionStatement	"r_graph_add_edge ( g , gn_parent , gn )"	654:3:24456:24491	4194446	1	True				
ANR	4194558	CallExpression	"r_graph_add_edge ( g , gn_parent , gn )"		4194446	0					
ANR	4194559	Callee	r_graph_add_edge		4194446	0					
ANR	4194560	Identifier	r_graph_add_edge		4194446	0					
ANR	4194561	ArgumentList	g		4194446	1					
ANR	4194562	Argument	g		4194446	0					
ANR	4194563	Identifier	g		4194446	0					
ANR	4194564	Argument	gn_parent		4194446	1					
ANR	4194565	Identifier	gn_parent		4194446	0					
ANR	4194566	Argument	gn		4194446	2					
ANR	4194567	Identifier	gn		4194446	0					
ANR	4194568	ReturnType	static void		4194446	1					
ANR	4194569	Identifier	dot_trace_discover_child		4194446	2					
ANR	4194570	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		4194446	3					
ANR	4194571	Parameter	RTreeNode * n	641:38:23986:23997	4194446	0	True				
ANR	4194572	ParameterType	RTreeNode *		4194446	0					
ANR	4194573	Identifier	n		4194446	1					
ANR	4194574	Parameter	RTreeVisitor * vis	641:52:24000:24016	4194446	1	True				
ANR	4194575	ParameterType	RTreeVisitor *		4194446	0					
ANR	4194576	Identifier	vis		4194446	1					
ANR	4194577	CFGEntryNode	ENTRY		4194446		True				
ANR	4194578	CFGExitNode	EXIT		4194446		True				
ANR	4194579	Symbol	vis		4194446						
ANR	4194580	Symbol	data -> graph		4194446						
ANR	4194581	Symbol	parent		4194446						
ANR	4194582	Symbol	data -> graphnodes		4194446						
ANR	4194583	Symbol	n -> data		4194446						
ANR	4194584	Symbol	* parent		4194446						
ANR	4194585	Symbol	data		4194446						
ANR	4194586	Symbol	gn_parent		4194446						
ANR	4194587	Symbol	g		4194446						
ANR	4194588	Symbol	gn		4194446						
ANR	4194589	Symbol	* vis		4194446						
ANR	4194590	Symbol	get_graphtrace_node		4194446						
ANR	4194591	Symbol	n		4194446						
ANR	4194592	Symbol	gnodes		4194446						
ANR	4194593	Symbol	tn_parent		4194446						
ANR	4194594	Symbol	n -> parent		4194446						
ANR	4194595	Symbol	parent -> data		4194446						
ANR	4194596	Symbol	r_graph_adjacent		4194446						
ANR	4194597	Symbol	* n		4194446						
ANR	4194598	Symbol	tn		4194446						
ANR	4194599	Symbol	vis -> data		4194446						
ANR	4194600	Symbol	* data		4194446						
ANR	4194601	Function	dot_trace_traverse	658:0:24499:26372							
ANR	4194602	FunctionDef	"dot_trace_traverse (RCore * core , RTree * t , int fmt)"		4194601	0					
ANR	4194603	CompoundStatement		658:63:24562:26372	4194601	0					
ANR	4194604	IdentifierDeclStatement	"const char * gfont = r_config_get ( core -> config , ""graph.font"" ) ;"	659:1:24565:24626	4194601	0	True				
ANR	4194605	IdentifierDecl	"* gfont = r_config_get ( core -> config , ""graph.font"" )"		4194601	0					
ANR	4194606	IdentifierDeclType	const char *		4194601	0					
ANR	4194607	Identifier	gfont		4194601	1					
ANR	4194608	AssignmentExpression	"* gfont = r_config_get ( core -> config , ""graph.font"" )"		4194601	2		=			
ANR	4194609	Identifier	gfont		4194601	0					
ANR	4194610	CallExpression	"r_config_get ( core -> config , ""graph.font"" )"		4194601	1					
ANR	4194611	Callee	r_config_get		4194601	0					
ANR	4194612	Identifier	r_config_get		4194601	0					
ANR	4194613	ArgumentList	core -> config		4194601	1					
ANR	4194614	Argument	core -> config		4194601	0					
ANR	4194615	PtrMemberAccess	core -> config		4194601	0					
ANR	4194616	Identifier	core		4194601	0					
ANR	4194617	Identifier	config		4194601	1					
ANR	4194618	Argument	"""graph.font"""		4194601	1					
ANR	4194619	PrimaryExpression	"""graph.font"""		4194601	0					
ANR	4194620	IdentifierDeclStatement	struct dot_trace_ght aux_data ;	660:1:24629:24658	4194601	1	True				
ANR	4194621	IdentifierDecl	aux_data		4194601	0					
ANR	4194622	IdentifierDeclType	struct dot_trace_ght		4194601	0					
ANR	4194623	Identifier	aux_data		4194601	1					
ANR	4194624	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	661:1:24661:24685	4194601	2	True				
ANR	4194625	IdentifierDecl	vis = { 0 }		4194601	0					
ANR	4194626	IdentifierDeclType	RTreeVisitor		4194601	0					
ANR	4194627	Identifier	vis		4194601	1					
ANR	4194628	AssignmentExpression	vis = { 0 }		4194601	2		=			
ANR	4194629	Identifier	vis		4194601	0					
ANR	4194630	InitializerList	0		4194601	1					
ANR	4194631	PrimaryExpression	0		4194601	0					
ANR	4194632	IdentifierDeclStatement	const RList * nodes ;	662:1:24688:24706	4194601	3	True				
ANR	4194633	IdentifierDecl	* nodes		4194601	0					
ANR	4194634	IdentifierDeclType	const RList *		4194601	0					
ANR	4194635	Identifier	nodes		4194601	1					
ANR	4194636	IdentifierDeclStatement	RListIter * iter ;	663:1:24709:24724	4194601	4	True				
ANR	4194637	IdentifierDecl	* iter		4194601	0					
ANR	4194638	IdentifierDeclType	RListIter *		4194601	0					
ANR	4194639	Identifier	iter		4194601	1					
ANR	4194640	IdentifierDeclStatement	RGraphNode * n ;	664:1:24727:24740	4194601	5	True				
ANR	4194641	IdentifierDecl	* n		4194601	0					
ANR	4194642	IdentifierDeclType	RGraphNode *		4194601	0					
ANR	4194643	Identifier	n		4194601	1					
ANR	4194644	IfStatement	if ( fmt == 'i' )		4194601	6					
ANR	4194645	Condition	fmt == 'i'	666:5:24748:24757	4194601	0	True				
ANR	4194646	EqualityExpression	fmt == 'i'		4194601	0		==			
ANR	4194647	Identifier	fmt		4194601	0					
ANR	4194648	PrimaryExpression	'i'		4194601	1					
ANR	4194649	CompoundStatement		9:17:197:197	4194601	1					
ANR	4194650	ExpressionStatement	"r_core_cmd0 ( core , ""ag-;.dtg*;aggi"" )"	667:2:24764:24800	4194601	0	True				
ANR	4194651	CallExpression	"r_core_cmd0 ( core , ""ag-;.dtg*;aggi"" )"		4194601	0					
ANR	4194652	Callee	r_core_cmd0		4194601	0					
ANR	4194653	Identifier	r_core_cmd0		4194601	0					
ANR	4194654	ArgumentList	core		4194601	1					
ANR	4194655	Argument	core		4194601	0					
ANR	4194656	Identifier	core		4194601	0					
ANR	4194657	Argument	"""ag-;.dtg*;aggi"""		4194601	1					
ANR	4194658	PrimaryExpression	"""ag-;.dtg*;aggi"""		4194601	0					
ANR	4194659	ReturnStatement	return ;	668:2:24804:24810	4194601	1	True				
ANR	4194660	ExpressionStatement	aux_data . graph = r_graph_new ( )	670:1:24816:24847	4194601	7	True				
ANR	4194661	AssignmentExpression	aux_data . graph = r_graph_new ( )		4194601	0		=			
ANR	4194662	MemberAccess	aux_data . graph		4194601	0					
ANR	4194663	Identifier	aux_data		4194601	0					
ANR	4194664	Identifier	graph		4194601	1					
ANR	4194665	CallExpression	r_graph_new ( )		4194601	1					
ANR	4194666	Callee	r_graph_new		4194601	0					
ANR	4194667	Identifier	r_graph_new		4194601	0					
ANR	4194668	ArgumentList			4194601	1					
ANR	4194669	ExpressionStatement	aux_data . graphnodes = sdb_new0 ( )	671:1:24850:24883	4194601	8	True				
ANR	4194670	AssignmentExpression	aux_data . graphnodes = sdb_new0 ( )		4194601	0		=			
ANR	4194671	MemberAccess	aux_data . graphnodes		4194601	0					
ANR	4194672	Identifier	aux_data		4194601	0					
ANR	4194673	Identifier	graphnodes		4194601	1					
ANR	4194674	CallExpression	sdb_new0 ( )		4194601	1					
ANR	4194675	Callee	sdb_new0		4194601	0					
ANR	4194676	Identifier	sdb_new0		4194601	0					
ANR	4194677	ArgumentList			4194601	1					
ANR	4194678	ExpressionStatement	vis . data = & aux_data	674:1:24937:24957	4194601	9	True				
ANR	4194679	AssignmentExpression	vis . data = & aux_data		4194601	0		=			
ANR	4194680	MemberAccess	vis . data		4194601	0					
ANR	4194681	Identifier	vis		4194601	0					
ANR	4194682	Identifier	data		4194601	1					
ANR	4194683	UnaryOperationExpression	& aux_data		4194601	1					
ANR	4194684	UnaryOperator	&		4194601	0					
ANR	4194685	Identifier	aux_data		4194601	1					
ANR	4194686	ExpressionStatement	vis . pre_visit = ( RTreeNodeVisitCb ) dot_trace_create_node	675:1:24960:25015	4194601	10	True				
ANR	4194687	AssignmentExpression	vis . pre_visit = ( RTreeNodeVisitCb ) dot_trace_create_node		4194601	0		=			
ANR	4194688	MemberAccess	vis . pre_visit		4194601	0					
ANR	4194689	Identifier	vis		4194601	0					
ANR	4194690	Identifier	pre_visit		4194601	1					
ANR	4194691	CastExpression	( RTreeNodeVisitCb ) dot_trace_create_node		4194601	1					
ANR	4194692	CastTarget	RTreeNodeVisitCb		4194601	0					
ANR	4194693	Identifier	dot_trace_create_node		4194601	1					
ANR	4194694	ExpressionStatement	vis . discover_child = ( RTreeNodeVisitCb ) dot_trace_discover_child	676:1:25018:25081	4194601	11	True				
ANR	4194695	AssignmentExpression	vis . discover_child = ( RTreeNodeVisitCb ) dot_trace_discover_child		4194601	0		=			
ANR	4194696	MemberAccess	vis . discover_child		4194601	0					
ANR	4194697	Identifier	vis		4194601	0					
ANR	4194698	Identifier	discover_child		4194601	1					
ANR	4194699	CastExpression	( RTreeNodeVisitCb ) dot_trace_discover_child		4194601	1					
ANR	4194700	CastTarget	RTreeNodeVisitCb		4194601	0					
ANR	4194701	Identifier	dot_trace_discover_child		4194601	1					
ANR	4194702	ExpressionStatement	"r_tree_bfs ( t , & vis )"	677:1:25084:25104	4194601	12	True				
ANR	4194703	CallExpression	"r_tree_bfs ( t , & vis )"		4194601	0					
ANR	4194704	Callee	r_tree_bfs		4194601	0					
ANR	4194705	Identifier	r_tree_bfs		4194601	0					
ANR	4194706	ArgumentList	t		4194601	1					
ANR	4194707	Argument	t		4194601	0					
ANR	4194708	Identifier	t		4194601	0					
ANR	4194709	Argument	& vis		4194601	1					
ANR	4194710	UnaryOperationExpression	& vis		4194601	0					
ANR	4194711	UnaryOperator	&		4194601	0					
ANR	4194712	Identifier	vis		4194601	1					
ANR	4194713	ExpressionStatement	nodes = r_graph_get_nodes ( aux_data . graph )	680:1:25160:25202	4194601	13	True				
ANR	4194714	AssignmentExpression	nodes = r_graph_get_nodes ( aux_data . graph )		4194601	0		=			
ANR	4194715	Identifier	nodes		4194601	0					
ANR	4194716	CallExpression	r_graph_get_nodes ( aux_data . graph )		4194601	1					
ANR	4194717	Callee	r_graph_get_nodes		4194601	0					
ANR	4194718	Identifier	r_graph_get_nodes		4194601	0					
ANR	4194719	ArgumentList	aux_data . graph		4194601	1					
ANR	4194720	Argument	aux_data . graph		4194601	0					
ANR	4194721	MemberAccess	aux_data . graph		4194601	0					
ANR	4194722	Identifier	aux_data		4194601	0					
ANR	4194723	Identifier	graph		4194601	1					
ANR	4194724	IfStatement	if ( fmt == 0 )		4194601	14					
ANR	4194725	Condition	fmt == 0	681:5:25209:25216	4194601	0	True				
ANR	4194726	EqualityExpression	fmt == 0		4194601	0		==			
ANR	4194727	Identifier	fmt		4194601	0					
ANR	4194728	PrimaryExpression	0		4194601	1					
ANR	4194729	CompoundStatement		24:15:656:656	4194601	1					
ANR	4194730	Statement	r_cons_printf	682:2:25223:25235	4194601	0	True				
ANR	4194731	Statement	(	682:16:25237:25237	4194601	1	True				
ANR	4194732	Statement	"""digraph code {\\n"""	682:17:25238:25255	4194601	2	True				
ANR	4194733	Statement	"""graph [bgcolor=white];\\n"""	683:4:25261:25286	4194601	3	True				
ANR	4194734	Statement	"""    node [color=lightgray, style=filled"""	684:4:25292:25332	4194601	4	True				
ANR	4194735	Statement	""" shape=box fontname=\\""%s\\"" fontsize=\\""8\\""];\\n"""	685:4:25338:25384	4194601	5	True				
ANR	4194736	Statement	","	685:51:25385:25385	4194601	6	True				
ANR	4194737	Statement	gfont	685:53:25387:25391	4194601	7	True				
ANR	4194738	Statement	)	685:58:25392:25392	4194601	8	True				
ANR	4194739	ExpressionStatement		685:59:25393:25393	4194601	9	True				
ANR	4194740	Statement	r_list_foreach	687:1:25399:25412	4194601	15	True				
ANR	4194741	Statement	(	687:16:25414:25414	4194601	16	True				
ANR	4194742	Statement	nodes	687:17:25415:25419	4194601	17	True				
ANR	4194743	Statement	","	687:22:25420:25420	4194601	18	True				
ANR	4194744	Statement	iter	687:24:25422:25425	4194601	19	True				
ANR	4194745	Statement	","	687:28:25426:25426	4194601	20	True				
ANR	4194746	Statement	n	687:30:25428:25428	4194601	21	True				
ANR	4194747	Statement	)	687:31:25429:25429	4194601	22	True				
ANR	4194748	CompoundStatement		34:2:1019:1032	4194601	23					
ANR	4194749	IdentifierDeclStatement	struct trace_node * tn = ( struct trace_node * ) n -> data ;	688:2:25435:25487	4194601	0	True				
ANR	4194750	IdentifierDecl	* tn = ( struct trace_node * ) n -> data		4194601	0					
ANR	4194751	IdentifierDeclType	struct trace_node *		4194601	0					
ANR	4194752	Identifier	tn		4194601	1					
ANR	4194753	AssignmentExpression	* tn = ( struct trace_node * ) n -> data		4194601	2		=			
ANR	4194754	Identifier	tn		4194601	0					
ANR	4194755	CastExpression	( struct trace_node * ) n -> data		4194601	1					
ANR	4194756	CastTarget	struct trace_node *		4194601	0					
ANR	4194757	PtrMemberAccess	n -> data		4194601	1					
ANR	4194758	Identifier	n		4194601	0					
ANR	4194759	Identifier	data		4194601	1					
ANR	4194760	IdentifierDeclStatement	"const RList * neighbours = r_graph_get_neighbours ( aux_data . graph , n ) ;"	689:2:25491:25559	4194601	1	True				
ANR	4194761	IdentifierDecl	"* neighbours = r_graph_get_neighbours ( aux_data . graph , n )"		4194601	0					
ANR	4194762	IdentifierDeclType	const RList *		4194601	0					
ANR	4194763	Identifier	neighbours		4194601	1					
ANR	4194764	AssignmentExpression	"* neighbours = r_graph_get_neighbours ( aux_data . graph , n )"		4194601	2		=			
ANR	4194765	Identifier	neighbours		4194601	0					
ANR	4194766	CallExpression	"r_graph_get_neighbours ( aux_data . graph , n )"		4194601	1					
ANR	4194767	Callee	r_graph_get_neighbours		4194601	0					
ANR	4194768	Identifier	r_graph_get_neighbours		4194601	0					
ANR	4194769	ArgumentList	aux_data . graph		4194601	1					
ANR	4194770	Argument	aux_data . graph		4194601	0					
ANR	4194771	MemberAccess	aux_data . graph		4194601	0					
ANR	4194772	Identifier	aux_data		4194601	0					
ANR	4194773	Identifier	graph		4194601	1					
ANR	4194774	Argument	n		4194601	1					
ANR	4194775	Identifier	n		4194601	0					
ANR	4194776	IdentifierDeclStatement	RListIter * it_n ;	690:2:25563:25578	4194601	2	True				
ANR	4194777	IdentifierDecl	* it_n		4194601	0					
ANR	4194778	IdentifierDeclType	RListIter *		4194601	0					
ANR	4194779	Identifier	it_n		4194601	1					
ANR	4194780	IdentifierDeclStatement	RGraphNode * w ;	691:2:25582:25595	4194601	3	True				
ANR	4194781	IdentifierDecl	* w		4194601	0					
ANR	4194782	IdentifierDeclType	RGraphNode *		4194601	0					
ANR	4194783	Identifier	w		4194601	1					
ANR	4194784	IfStatement	if ( ! fmt && tn )		4194601	4					
ANR	4194785	Condition	! fmt && tn	693:6:25604:25613	4194601	0	True				
ANR	4194786	AndExpression	! fmt && tn		4194601	0		&&			
ANR	4194787	UnaryOperationExpression	! fmt		4194601	0					
ANR	4194788	UnaryOperator	!		4194601	0					
ANR	4194789	Identifier	fmt		4194601	1					
ANR	4194790	Identifier	tn		4194601	1					
ANR	4194791	CompoundStatement		36:18:1053:1053	4194601	1					
ANR	4194792	Statement	r_cons_printf	694:3:25621:25633	4194601	0	True				
ANR	4194793	Statement	(	694:17:25635:25635	4194601	1	True				
ANR	4194794	Statement	"""\\""0x%08"""	694:18:25636:25644	4194601	2	True				
ANR	4194795	Statement	PFMT64x	694:27:25645:25651	4194601	3	True				
ANR	4194796	Statement	"""\\"" [URL=\\""0x%08"""	694:34:25652:25668	4194601	4	True				
ANR	4194797	Statement	PFMT64x	694:51:25669:25675	4194601	5	True				
ANR	4194798	Statement	"""\\"" color=\\""lightgray\\"" label=\\""0x%08"""	695:5:25682:25719	4194601	6	True				
ANR	4194799	Statement	PFMT64x	695:43:25720:25726	4194601	7	True				
ANR	4194800	Statement	""" (%d)\\""]\\n"""	696:5:25733:25744	4194601	8	True				
ANR	4194801	Statement	","	696:17:25745:25745	4194601	9	True				
ANR	4194802	Statement	tn	696:19:25747:25748	4194601	10	True				
ANR	4194803	Statement	->	696:21:25749:25750	4194601	11	True				
ANR	4194804	Statement	addr	696:23:25751:25754	4194601	12	True				
ANR	4194805	Statement	","	696:27:25755:25755	4194601	13	True				
ANR	4194806	Statement	tn	696:29:25757:25758	4194601	14	True				
ANR	4194807	Statement	->	696:31:25759:25760	4194601	15	True				
ANR	4194808	Statement	addr	696:33:25761:25764	4194601	16	True				
ANR	4194809	Statement	","	696:37:25765:25765	4194601	17	True				
ANR	4194810	Statement	tn	696:39:25767:25768	4194601	18	True				
ANR	4194811	Statement	->	696:41:25769:25770	4194601	19	True				
ANR	4194812	Statement	addr	696:43:25771:25774	4194601	20	True				
ANR	4194813	Statement	","	696:47:25775:25775	4194601	21	True				
ANR	4194814	Statement	tn	696:49:25777:25778	4194601	22	True				
ANR	4194815	Statement	->	696:51:25779:25780	4194601	23	True				
ANR	4194816	Statement	refs	696:53:25781:25784	4194601	24	True				
ANR	4194817	Statement	)	696:57:25785:25785	4194601	25	True				
ANR	4194818	ExpressionStatement		696:58:25786:25786	4194601	26	True				
ANR	4194819	Statement	r_list_foreach	698:2:25794:25807	4194601	5	True				
ANR	4194820	Statement	(	698:17:25809:25809	4194601	6	True				
ANR	4194821	Statement	neighbours	698:18:25810:25819	4194601	7	True				
ANR	4194822	Statement	","	698:28:25820:25820	4194601	8	True				
ANR	4194823	Statement	it_n	698:30:25822:25825	4194601	9	True				
ANR	4194824	Statement	","	698:34:25826:25826	4194601	10	True				
ANR	4194825	Statement	w	698:36:25828:25828	4194601	11	True				
ANR	4194826	Statement	)	698:37:25829:25829	4194601	12	True				
ANR	4194827	CompoundStatement		42:3:1273:1325	4194601	13					
ANR	4194828	IdentifierDeclStatement	struct trace_node * tv = ( struct trace_node * ) w -> data ;	699:3:25836:25888	4194601	0	True				
ANR	4194829	IdentifierDecl	* tv = ( struct trace_node * ) w -> data		4194601	0					
ANR	4194830	IdentifierDeclType	struct trace_node *		4194601	0					
ANR	4194831	Identifier	tv		4194601	1					
ANR	4194832	AssignmentExpression	* tv = ( struct trace_node * ) w -> data		4194601	2		=			
ANR	4194833	Identifier	tv		4194601	0					
ANR	4194834	CastExpression	( struct trace_node * ) w -> data		4194601	1					
ANR	4194835	CastTarget	struct trace_node *		4194601	0					
ANR	4194836	PtrMemberAccess	w -> data		4194601	1					
ANR	4194837	Identifier	w		4194601	0					
ANR	4194838	Identifier	data		4194601	1					
ANR	4194839	IfStatement	if ( tv && tn )		4194601	1					
ANR	4194840	Condition	tv && tn	701:7:25898:25905	4194601	0	True				
ANR	4194841	AndExpression	tv && tn		4194601	0		&&			
ANR	4194842	Identifier	tv		4194601	0					
ANR	4194843	Identifier	tn		4194601	1					
ANR	4194844	CompoundStatement		44:17:1345:1345	4194601	1					
ANR	4194845	IfStatement	if ( fmt )		4194601	0					
ANR	4194846	Condition	fmt	702:8:25918:25920	4194601	0	True				
ANR	4194847	Identifier	fmt		4194601	0					
ANR	4194848	CompoundStatement		45:13:1360:1360	4194601	1					
ANR	4194849	Statement	r_cons_printf	703:5:25930:25942	4194601	0	True				
ANR	4194850	Statement	(	703:19:25944:25944	4194601	1	True				
ANR	4194851	Statement	"""agn 0x%08"""	703:20:25945:25955	4194601	2	True				
ANR	4194852	Statement	PFMT64x	703:31:25956:25962	4194601	3	True				
ANR	4194853	Statement	"""\\n"""	703:38:25963:25966	4194601	4	True				
ANR	4194854	Statement	","	703:42:25967:25967	4194601	5	True				
ANR	4194855	Statement	tn	703:44:25969:25970	4194601	6	True				
ANR	4194856	Statement	->	703:46:25971:25972	4194601	7	True				
ANR	4194857	Statement	addr	703:48:25973:25976	4194601	8	True				
ANR	4194858	Statement	)	703:52:25977:25977	4194601	9	True				
ANR	4194859	ExpressionStatement		703:53:25978:25978	4194601	10	True				
ANR	4194860	Statement	r_cons_printf	704:5:25985:25997	4194601	11	True				
ANR	4194861	Statement	(	704:19:25999:25999	4194601	12	True				
ANR	4194862	Statement	"""agn 0x%08"""	704:20:26000:26010	4194601	13	True				
ANR	4194863	Statement	PFMT64x	704:31:26011:26017	4194601	14	True				
ANR	4194864	Statement	"""\\n"""	704:38:26018:26021	4194601	15	True				
ANR	4194865	Statement	","	704:42:26022:26022	4194601	16	True				
ANR	4194866	Statement	tv	704:44:26024:26025	4194601	17	True				
ANR	4194867	Statement	->	704:46:26026:26027	4194601	18	True				
ANR	4194868	Statement	addr	704:48:26028:26031	4194601	19	True				
ANR	4194869	Statement	)	704:52:26032:26032	4194601	20	True				
ANR	4194870	ExpressionStatement		704:53:26033:26033	4194601	21	True				
ANR	4194871	Statement	r_cons_printf	705:5:26040:26052	4194601	22	True				
ANR	4194872	Statement	(	705:19:26054:26054	4194601	23	True				
ANR	4194873	Statement	"""age 0x%08"""	705:20:26055:26065	4194601	24	True				
ANR	4194874	Statement	PFMT64x	705:31:26066:26072	4194601	25	True				
ANR	4194875	Statement	""" 0x%08"""	705:38:26073:26080	4194601	26	True				
ANR	4194876	Statement	PFMT64x	705:46:26081:26087	4194601	27	True				
ANR	4194877	Statement	"""\\n"""	705:53:26088:26091	4194601	28	True				
ANR	4194878	Statement	","	705:57:26092:26092	4194601	29	True				
ANR	4194879	Statement	tn	706:7:26101:26102	4194601	30	True				
ANR	4194880	Statement	->	706:9:26103:26104	4194601	31	True				
ANR	4194881	Statement	addr	706:11:26105:26108	4194601	32	True				
ANR	4194882	Statement	","	706:15:26109:26109	4194601	33	True				
ANR	4194883	Statement	tv	706:17:26111:26112	4194601	34	True				
ANR	4194884	Statement	->	706:19:26113:26114	4194601	35	True				
ANR	4194885	Statement	addr	706:21:26115:26118	4194601	36	True				
ANR	4194886	Statement	)	706:25:26119:26119	4194601	37	True				
ANR	4194887	ExpressionStatement		706:26:26120:26120	4194601	38	True				
ANR	4194888	ElseStatement	else		4194601	0					
ANR	4194889	CompoundStatement		50:11:1570:1570	4194601	0					
ANR	4194890	Statement	r_cons_printf	708:5:26140:26152	4194601	0	True				
ANR	4194891	Statement	(	708:19:26154:26154	4194601	1	True				
ANR	4194892	Statement	"""\\""0x%08"""	708:20:26155:26163	4194601	2	True				
ANR	4194893	Statement	PFMT64x	708:29:26164:26170	4194601	3	True				
ANR	4194894	Statement	"""\\"" -> \\""0x%08"""	708:36:26171:26185	4194601	4	True				
ANR	4194895	Statement	PFMT64x	708:51:26186:26192	4194601	5	True				
ANR	4194896	Statement	"""\\"" [color=\\""red\\""];\\n"""	709:7:26201:26223	4194601	6	True				
ANR	4194897	Statement	","	709:30:26224:26224	4194601	7	True				
ANR	4194898	Statement	tn	709:32:26226:26227	4194601	8	True				
ANR	4194899	Statement	->	709:34:26228:26229	4194601	9	True				
ANR	4194900	Statement	addr	709:36:26230:26233	4194601	10	True				
ANR	4194901	Statement	","	709:40:26234:26234	4194601	11	True				
ANR	4194902	Statement	tv	709:42:26236:26237	4194601	12	True				
ANR	4194903	Statement	->	709:44:26238:26239	4194601	13	True				
ANR	4194904	Statement	addr	709:46:26240:26243	4194601	14	True				
ANR	4194905	Statement	)	709:50:26244:26244	4194601	15	True				
ANR	4194906	ExpressionStatement		709:51:26245:26245	4194601	16	True				
ANR	4194907	IfStatement	if ( ! fmt )		4194601	24					
ANR	4194908	Condition	! fmt	714:5:26270:26273	4194601	0	True				
ANR	4194909	UnaryOperationExpression	! fmt		4194601	0					
ANR	4194910	UnaryOperator	!		4194601	0					
ANR	4194911	Identifier	fmt		4194601	1					
ANR	4194912	CompoundStatement		57:11:1713:1713	4194601	1					
ANR	4194913	ExpressionStatement	"r_cons_printf ( ""}\\n"" )"	715:2:26280:26301	4194601	0	True				
ANR	4194914	CallExpression	"r_cons_printf ( ""}\\n"" )"		4194601	0					
ANR	4194915	Callee	r_cons_printf		4194601	0					
ANR	4194916	Identifier	r_cons_printf		4194601	0					
ANR	4194917	ArgumentList	"""}\\n"""		4194601	1					
ANR	4194918	Argument	"""}\\n"""		4194601	0					
ANR	4194919	PrimaryExpression	"""}\\n"""		4194601	0					
ANR	4194920	ExpressionStatement	r_graph_free ( aux_data . graph )	718:1:26308:26337	4194601	25	True				
ANR	4194921	CallExpression	r_graph_free ( aux_data . graph )		4194601	0					
ANR	4194922	Callee	r_graph_free		4194601	0					
ANR	4194923	Identifier	r_graph_free		4194601	0					
ANR	4194924	ArgumentList	aux_data . graph		4194601	1					
ANR	4194925	Argument	aux_data . graph		4194601	0					
ANR	4194926	MemberAccess	aux_data . graph		4194601	0					
ANR	4194927	Identifier	aux_data		4194601	0					
ANR	4194928	Identifier	graph		4194601	1					
ANR	4194929	ExpressionStatement	sdb_free ( aux_data . graphnodes )	719:1:26340:26370	4194601	26	True				
ANR	4194930	CallExpression	sdb_free ( aux_data . graphnodes )		4194601	0					
ANR	4194931	Callee	sdb_free		4194601	0					
ANR	4194932	Identifier	sdb_free		4194601	0					
ANR	4194933	ArgumentList	aux_data . graphnodes		4194601	1					
ANR	4194934	Argument	aux_data . graphnodes		4194601	0					
ANR	4194935	MemberAccess	aux_data . graphnodes		4194601	0					
ANR	4194936	Identifier	aux_data		4194601	0					
ANR	4194937	Identifier	graphnodes		4194601	1					
ANR	4194938	ReturnType	static void		4194601	1					
ANR	4194939	Identifier	dot_trace_traverse		4194601	2					
ANR	4194940	ParameterList	"RCore * core , RTree * t , int fmt"		4194601	3					
ANR	4194941	Parameter	RCore * core	658:31:24530:24540	4194601	0	True				
ANR	4194942	ParameterType	RCore *		4194601	0					
ANR	4194943	Identifier	core		4194601	1					
ANR	4194944	Parameter	RTree * t	658:44:24543:24550	4194601	1	True				
ANR	4194945	ParameterType	RTree *		4194601	0					
ANR	4194946	Identifier	t		4194601	1					
ANR	4194947	Parameter	int fmt	658:54:24553:24559	4194601	2	True				
ANR	4194948	ParameterType	int		4194601	0					
ANR	4194949	Identifier	fmt		4194601	1					
ANR	4194950	CFGEntryNode	ENTRY		4194601		True				
ANR	4194951	CFGExitNode	EXIT		4194601		True				
ANR	4194952	Symbol	& vis		4194601						
ANR	4194953	Symbol	* w		4194601						
ANR	4194954	Symbol	tv		4194601						
ANR	4194955	Symbol	n -> data		4194601						
ANR	4194956	Symbol	r_graph_get_neighbours		4194601						
ANR	4194957	Symbol	r_config_get		4194601						
ANR	4194958	Symbol	* core		4194601						
ANR	4194959	Symbol	r_graph_new		4194601						
ANR	4194960	Symbol	dot_trace_discover_child		4194601						
ANR	4194961	Symbol	fmt		4194601						
ANR	4194962	Symbol	& aux_data		4194601						
ANR	4194963	Symbol	vis . data		4194601						
ANR	4194964	Symbol	core -> config		4194601						
ANR	4194965	Symbol	aux_data . graphnodes		4194601						
ANR	4194966	Symbol	vis		4194601						
ANR	4194967	Symbol	sdb_new0		4194601						
ANR	4194968	Symbol	r_graph_get_nodes		4194601						
ANR	4194969	Symbol	aux_data . graph		4194601						
ANR	4194970	Symbol	iter		4194601						
ANR	4194971	Symbol	neighbours		4194601						
ANR	4194972	Symbol	it_n		4194601						
ANR	4194973	Symbol	gfont		4194601						
ANR	4194974	Symbol	n		4194601						
ANR	4194975	Symbol	core		4194601						
ANR	4194976	Symbol	nodes		4194601						
ANR	4194977	Symbol	t		4194601						
ANR	4194978	Symbol	vis . pre_visit		4194601						
ANR	4194979	Symbol	w		4194601						
ANR	4194980	Symbol	* n		4194601						
ANR	4194981	Symbol	vis . discover_child		4194601						
ANR	4194982	Symbol	tn		4194601						
ANR	4194983	Symbol	w -> data		4194601						
ANR	4194984	Symbol	dot_trace_create_node		4194601						
ANR	4194985	Symbol	aux_data		4194601						
ANR	4194986	Function	step_until	726:0:26506:27099							
ANR	4194987	FunctionDef	"step_until (RCore * core , ut64 addr)"		4194986	0					
ANR	4194988	CompoundStatement		726:46:26552:27099	4194986	0					
ANR	4194989	IdentifierDeclStatement	"ut64 off = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	727:1:26555:26599	4194986	0	True				
ANR	4194990	IdentifierDecl	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		4194986	0					
ANR	4194991	IdentifierDeclType	ut64		4194986	0					
ANR	4194992	Identifier	off		4194986	1					
ANR	4194993	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		4194986	2		=			
ANR	4194994	Identifier	off		4194986	0					
ANR	4194995	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4194986	1					
ANR	4194996	Callee	r_debug_reg_get		4194986	0					
ANR	4194997	Identifier	r_debug_reg_get		4194986	0					
ANR	4194998	ArgumentList	core -> dbg		4194986	1					
ANR	4194999	Argument	core -> dbg		4194986	0					
ANR	4195000	PtrMemberAccess	core -> dbg		4194986	0					
ANR	4195001	Identifier	core		4194986	0					
ANR	4195002	Identifier	dbg		4194986	1					
ANR	4195003	Argument	"""PC"""		4194986	1					
ANR	4195004	PrimaryExpression	"""PC"""		4194986	0					
ANR	4195005	IfStatement	if ( ! off )		4194986	1					
ANR	4195006	Condition	! off	728:5:26606:26609	4194986	0	True				
ANR	4195007	UnaryOperationExpression	! off		4194986	0					
ANR	4195008	UnaryOperator	!		4194986	0					
ANR	4195009	Identifier	off		4194986	1					
ANR	4195010	CompoundStatement		3:11:59:59	4194986	1					
ANR	4195011	ExpressionStatement	"eprintf ( ""Cannot 'drn PC'\\n"" )"	729:2:26616:26645	4194986	0	True				
ANR	4195012	CallExpression	"eprintf ( ""Cannot 'drn PC'\\n"" )"		4194986	0					
ANR	4195013	Callee	eprintf		4194986	0					
ANR	4195014	Identifier	eprintf		4194986	0					
ANR	4195015	ArgumentList	"""Cannot 'drn PC'\\n"""		4194986	1					
ANR	4195016	Argument	"""Cannot 'drn PC'\\n"""		4194986	0					
ANR	4195017	PrimaryExpression	"""Cannot 'drn PC'\\n"""		4194986	0					
ANR	4195018	ReturnStatement	return false ;	730:2:26649:26661	4194986	1	True				
ANR	4195019	Identifier	false		4194986	0					
ANR	4195020	IfStatement	if ( ! addr )		4194986	2					
ANR	4195021	Condition	! addr	732:5:26671:26675	4194986	0	True				
ANR	4195022	UnaryOperationExpression	! addr		4194986	0					
ANR	4195023	UnaryOperator	!		4194986	0					
ANR	4195024	Identifier	addr		4194986	1					
ANR	4195025	CompoundStatement		7:12:125:125	4194986	1					
ANR	4195026	ExpressionStatement	"eprintf ( ""Cannot continue until address 0\\n"" )"	733:2:26682:26727	4194986	0	True				
ANR	4195027	CallExpression	"eprintf ( ""Cannot continue until address 0\\n"" )"		4194986	0					
ANR	4195028	Callee	eprintf		4194986	0					
ANR	4195029	Identifier	eprintf		4194986	0					
ANR	4195030	ArgumentList	"""Cannot continue until address 0\\n"""		4194986	1					
ANR	4195031	Argument	"""Cannot continue until address 0\\n"""		4194986	0					
ANR	4195032	PrimaryExpression	"""Cannot continue until address 0\\n"""		4194986	0					
ANR	4195033	ReturnStatement	return false ;	734:2:26731:26743	4194986	1	True				
ANR	4195034	Identifier	false		4194986	0					
ANR	4195035	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	736:1:26749:26779	4194986	3	True				
ANR	4195036	CallExpression	"r_cons_break_push ( NULL , NULL )"		4194986	0					
ANR	4195037	Callee	r_cons_break_push		4194986	0					
ANR	4195038	Identifier	r_cons_break_push		4194986	0					
ANR	4195039	ArgumentList	NULL		4194986	1					
ANR	4195040	Argument	NULL		4194986	0					
ANR	4195041	Identifier	NULL		4194986	0					
ANR	4195042	Argument	NULL		4194986	1					
ANR	4195043	Identifier	NULL		4194986	0					
ANR	4195044	DoStatement	do		4194986	4					
ANR	4195045	CompoundStatement		12:4:232:232	4194986	0					
ANR	4195046	IfStatement	if ( r_cons_is_breaked ( ) )		4194986	0					
ANR	4195047	Condition	r_cons_is_breaked ( )	738:6:26793:26812	4194986	0	True				
ANR	4195048	CallExpression	r_cons_is_breaked ( )		4194986	0					
ANR	4195049	Callee	r_cons_is_breaked		4194986	0					
ANR	4195050	Identifier	r_cons_is_breaked		4194986	0					
ANR	4195051	ArgumentList			4194986	1					
ANR	4195052	CompoundStatement		13:28:262:262	4194986	1					
ANR	4195053	ExpressionStatement	core -> break_loop = true	739:3:26820:26843	4194986	0	True				
ANR	4195054	AssignmentExpression	core -> break_loop = true		4194986	0		=			
ANR	4195055	PtrMemberAccess	core -> break_loop		4194986	0					
ANR	4195056	Identifier	core		4194986	0					
ANR	4195057	Identifier	break_loop		4194986	1					
ANR	4195058	Identifier	true		4194986	1					
ANR	4195059	BreakStatement	break ;	740:3:26848:26853	4194986	1	True				
ANR	4195060	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4194986	1					
ANR	4195061	Condition	r_debug_is_dead ( core -> dbg )	742:6:26865:26891	4194986	0	True				
ANR	4195062	CallExpression	r_debug_is_dead ( core -> dbg )		4194986	0					
ANR	4195063	Callee	r_debug_is_dead		4194986	0					
ANR	4195064	Identifier	r_debug_is_dead		4194986	0					
ANR	4195065	ArgumentList	core -> dbg		4194986	1					
ANR	4195066	Argument	core -> dbg		4194986	0					
ANR	4195067	PtrMemberAccess	core -> dbg		4194986	0					
ANR	4195068	Identifier	core		4194986	0					
ANR	4195069	Identifier	dbg		4194986	1					
ANR	4195070	CompoundStatement		17:35:341:341	4194986	1					
ANR	4195071	ExpressionStatement	core -> break_loop = true	743:3:26899:26922	4194986	0	True				
ANR	4195072	AssignmentExpression	core -> break_loop = true		4194986	0		=			
ANR	4195073	PtrMemberAccess	core -> break_loop		4194986	0					
ANR	4195074	Identifier	core		4194986	0					
ANR	4195075	Identifier	break_loop		4194986	1					
ANR	4195076	Identifier	true		4194986	1					
ANR	4195077	BreakStatement	break ;	744:3:26927:26932	4194986	1	True				
ANR	4195078	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	746:2:26940:26967	4194986	2	True				
ANR	4195079	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4194986	0					
ANR	4195080	Callee	r_debug_step		4194986	0					
ANR	4195081	Identifier	r_debug_step		4194986	0					
ANR	4195082	ArgumentList	core -> dbg		4194986	1					
ANR	4195083	Argument	core -> dbg		4194986	0					
ANR	4195084	PtrMemberAccess	core -> dbg		4194986	0					
ANR	4195085	Identifier	core		4194986	0					
ANR	4195086	Identifier	dbg		4194986	1					
ANR	4195087	Argument	1		4194986	1					
ANR	4195088	PrimaryExpression	1		4194986	0					
ANR	4195089	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"	747:2:26971:27010	4194986	3	True				
ANR	4195090	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		4194986	0		=			
ANR	4195091	Identifier	off		4194986	0					
ANR	4195092	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4194986	1					
ANR	4195093	Callee	r_debug_reg_get		4194986	0					
ANR	4195094	Identifier	r_debug_reg_get		4194986	0					
ANR	4195095	ArgumentList	core -> dbg		4194986	1					
ANR	4195096	Argument	core -> dbg		4194986	0					
ANR	4195097	PtrMemberAccess	core -> dbg		4194986	0					
ANR	4195098	Identifier	core		4194986	0					
ANR	4195099	Identifier	dbg		4194986	1					
ANR	4195100	Argument	"""PC"""		4194986	1					
ANR	4195101	PrimaryExpression	"""PC"""		4194986	0					
ANR	4195102	Condition	off != addr	749:10:27049:27059	4194986	1	True				
ANR	4195103	EqualityExpression	off != addr		4194986	0		!=			
ANR	4195104	Identifier	off		4194986	0					
ANR	4195105	Identifier	addr		4194986	1					
ANR	4195106	ExpressionStatement	r_cons_break_pop ( )	750:1:27064:27083	4194986	5	True				
ANR	4195107	CallExpression	r_cons_break_pop ( )		4194986	0					
ANR	4195108	Callee	r_cons_break_pop		4194986	0					
ANR	4195109	Identifier	r_cons_break_pop		4194986	0					
ANR	4195110	ArgumentList			4194986	1					
ANR	4195111	ReturnStatement	return true ;	751:1:27086:27097	4194986	6	True				
ANR	4195112	Identifier	true		4194986	0					
ANR	4195113	ReturnType	static int		4194986	1					
ANR	4195114	Identifier	step_until		4194986	2					
ANR	4195115	ParameterList	"RCore * core , ut64 addr"		4194986	3					
ANR	4195116	Parameter	RCore * core	726:22:26528:26538	4194986	0	True				
ANR	4195117	ParameterType	RCore *		4194986	0					
ANR	4195118	Identifier	core		4194986	1					
ANR	4195119	Parameter	ut64 addr	726:35:26541:26549	4194986	1	True				
ANR	4195120	ParameterType	ut64		4194986	0					
ANR	4195121	Identifier	addr		4194986	1					
ANR	4195122	CFGEntryNode	ENTRY		4194986		True				
ANR	4195123	CFGExitNode	EXIT		4194986		True				
ANR	4195124	Symbol	core		4194986						
ANR	4195125	Symbol	core -> break_loop		4194986						
ANR	4195126	Symbol	r_cons_is_breaked		4194986						
ANR	4195127	Symbol	r_debug_is_dead		4194986						
ANR	4195128	Symbol	NULL		4194986						
ANR	4195129	Symbol	r_debug_reg_get		4194986						
ANR	4195130	Symbol	* core		4194986						
ANR	4195131	Symbol	false		4194986						
ANR	4195132	Symbol	true		4194986						
ANR	4195133	Symbol	addr		4194986						
ANR	4195134	Symbol	off		4194986						
ANR	4195135	Symbol	core -> dbg		4194986						
ANR	4195136	Function	step_until_esil	754:0:27102:27771							
ANR	4195137	FunctionDef	"step_until_esil (RCore * core , const char * esilstr)"		4195136	0					
ANR	4195138	CompoundStatement		754:61:27163:27771	4195136	0					
ANR	4195139	IfStatement	if ( ! core || ! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil )		4195136	0					
ANR	4195140	Condition	! core || ! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil	755:5:27170:27251	4195136	0	True				
ANR	4195141	OrExpression	! core || ! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil		4195136	0		||			
ANR	4195142	UnaryOperationExpression	! core		4195136	0					
ANR	4195143	UnaryOperator	!		4195136	0					
ANR	4195144	Identifier	core		4195136	1					
ANR	4195145	OrExpression	! esilstr || ! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil		4195136	1		||			
ANR	4195146	UnaryOperationExpression	! esilstr		4195136	0					
ANR	4195147	UnaryOperator	!		4195136	0					
ANR	4195148	Identifier	esilstr		4195136	1					
ANR	4195149	OrExpression	! core -> dbg || ! core -> dbg -> anal || ! core -> dbg -> anal -> esil		4195136	1		||			
ANR	4195150	UnaryOperationExpression	! core -> dbg		4195136	0					
ANR	4195151	UnaryOperator	!		4195136	0					
ANR	4195152	PtrMemberAccess	core -> dbg		4195136	1					
ANR	4195153	Identifier	core		4195136	0					
ANR	4195154	Identifier	dbg		4195136	1					
ANR	4195155	OrExpression	! core -> dbg -> anal || ! core -> dbg -> anal -> esil		4195136	1		||			
ANR	4195156	UnaryOperationExpression	! core -> dbg -> anal		4195136	0					
ANR	4195157	UnaryOperator	!		4195136	0					
ANR	4195158	PtrMemberAccess	core -> dbg -> anal		4195136	1					
ANR	4195159	PtrMemberAccess	core -> dbg		4195136	0					
ANR	4195160	Identifier	core		4195136	0					
ANR	4195161	Identifier	dbg		4195136	1					
ANR	4195162	Identifier	anal		4195136	1					
ANR	4195163	UnaryOperationExpression	! core -> dbg -> anal -> esil		4195136	1					
ANR	4195164	UnaryOperator	!		4195136	0					
ANR	4195165	PtrMemberAccess	core -> dbg -> anal -> esil		4195136	1					
ANR	4195166	PtrMemberAccess	core -> dbg -> anal		4195136	0					
ANR	4195167	PtrMemberAccess	core -> dbg		4195136	0					
ANR	4195168	Identifier	core		4195136	0					
ANR	4195169	Identifier	dbg		4195136	1					
ANR	4195170	Identifier	anal		4195136	1					
ANR	4195171	Identifier	esil		4195136	1					
ANR	4195172	CompoundStatement		3:30:90:90	4195136	1					
ANR	4195173	ExpressionStatement	"eprintf ( ""Not initialized %p. Run 'aei' first.\\n"" , core -> anal -> esil )"	757:2:27258:27326	4195136	0	True				
ANR	4195174	CallExpression	"eprintf ( ""Not initialized %p. Run 'aei' first.\\n"" , core -> anal -> esil )"		4195136	0					
ANR	4195175	Callee	eprintf		4195136	0					
ANR	4195176	Identifier	eprintf		4195136	0					
ANR	4195177	ArgumentList	"""Not initialized %p. Run 'aei' first.\\n"""		4195136	1					
ANR	4195178	Argument	"""Not initialized %p. Run 'aei' first.\\n"""		4195136	0					
ANR	4195179	PrimaryExpression	"""Not initialized %p. Run 'aei' first.\\n"""		4195136	0					
ANR	4195180	Argument	core -> anal -> esil		4195136	1					
ANR	4195181	PtrMemberAccess	core -> anal -> esil		4195136	0					
ANR	4195182	PtrMemberAccess	core -> anal		4195136	0					
ANR	4195183	Identifier	core		4195136	0					
ANR	4195184	Identifier	anal		4195136	1					
ANR	4195185	Identifier	esil		4195136	1					
ANR	4195186	ReturnStatement	return false ;	758:2:27330:27342	4195136	1	True				
ANR	4195187	Identifier	false		4195136	0					
ANR	4195188	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	760:1:27348:27378	4195136	1	True				
ANR	4195189	CallExpression	"r_cons_break_push ( NULL , NULL )"		4195136	0					
ANR	4195190	Callee	r_cons_break_push		4195136	0					
ANR	4195191	Identifier	r_cons_break_push		4195136	0					
ANR	4195192	ArgumentList	NULL		4195136	1					
ANR	4195193	Argument	NULL		4195136	0					
ANR	4195194	Identifier	NULL		4195136	0					
ANR	4195195	Argument	NULL		4195136	1					
ANR	4195196	Identifier	NULL		4195136	0					
ANR	4195197	ForStatement	for ( ; ; )		4195136	2					
ANR	4195198	CompoundStatement		8:10:226:226	4195136	0					
ANR	4195199	IfStatement	if ( r_cons_is_breaked ( ) )		4195136	0					
ANR	4195200	Condition	r_cons_is_breaked ( )	762:6:27398:27417	4195136	0	True				
ANR	4195201	CallExpression	r_cons_is_breaked ( )		4195136	0					
ANR	4195202	Callee	r_cons_is_breaked		4195136	0					
ANR	4195203	Identifier	r_cons_is_breaked		4195136	0					
ANR	4195204	ArgumentList			4195136	1					
ANR	4195205	CompoundStatement		9:28:256:256	4195136	1					
ANR	4195206	ExpressionStatement	core -> break_loop = true	763:3:27425:27448	4195136	0	True				
ANR	4195207	AssignmentExpression	core -> break_loop = true		4195136	0		=			
ANR	4195208	PtrMemberAccess	core -> break_loop		4195136	0					
ANR	4195209	Identifier	core		4195136	0					
ANR	4195210	Identifier	break_loop		4195136	1					
ANR	4195211	Identifier	true		4195136	1					
ANR	4195212	BreakStatement	break ;	764:3:27453:27458	4195136	1	True				
ANR	4195213	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4195136	1					
ANR	4195214	Condition	r_debug_is_dead ( core -> dbg )	766:6:27470:27496	4195136	0	True				
ANR	4195215	CallExpression	r_debug_is_dead ( core -> dbg )		4195136	0					
ANR	4195216	Callee	r_debug_is_dead		4195136	0					
ANR	4195217	Identifier	r_debug_is_dead		4195136	0					
ANR	4195218	ArgumentList	core -> dbg		4195136	1					
ANR	4195219	Argument	core -> dbg		4195136	0					
ANR	4195220	PtrMemberAccess	core -> dbg		4195136	0					
ANR	4195221	Identifier	core		4195136	0					
ANR	4195222	Identifier	dbg		4195136	1					
ANR	4195223	CompoundStatement		13:35:335:335	4195136	1					
ANR	4195224	ExpressionStatement	core -> break_loop = true	767:3:27504:27527	4195136	0	True				
ANR	4195225	AssignmentExpression	core -> break_loop = true		4195136	0		=			
ANR	4195226	PtrMemberAccess	core -> break_loop		4195136	0					
ANR	4195227	Identifier	core		4195136	0					
ANR	4195228	Identifier	break_loop		4195136	1					
ANR	4195229	Identifier	true		4195136	1					
ANR	4195230	BreakStatement	break ;	768:3:27532:27537	4195136	1	True				
ANR	4195231	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	770:2:27545:27572	4195136	2	True				
ANR	4195232	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4195136	0					
ANR	4195233	Callee	r_debug_step		4195136	0					
ANR	4195234	Identifier	r_debug_step		4195136	0					
ANR	4195235	ArgumentList	core -> dbg		4195136	1					
ANR	4195236	Argument	core -> dbg		4195136	0					
ANR	4195237	PtrMemberAccess	core -> dbg		4195136	0					
ANR	4195238	Identifier	core		4195136	0					
ANR	4195239	Identifier	dbg		4195136	1					
ANR	4195240	Argument	1		4195136	1					
ANR	4195241	PrimaryExpression	1		4195136	0					
ANR	4195242	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	771:2:27576:27627	4195136	3	True				
ANR	4195243	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		4195136	0					
ANR	4195244	Callee	r_debug_reg_sync		4195136	0					
ANR	4195245	Identifier	r_debug_reg_sync		4195136	0					
ANR	4195246	ArgumentList	core -> dbg		4195136	1					
ANR	4195247	Argument	core -> dbg		4195136	0					
ANR	4195248	PtrMemberAccess	core -> dbg		4195136	0					
ANR	4195249	Identifier	core		4195136	0					
ANR	4195250	Identifier	dbg		4195136	1					
ANR	4195251	Argument	R_REG_TYPE_ALL		4195136	1					
ANR	4195252	Identifier	R_REG_TYPE_ALL		4195136	0					
ANR	4195253	Argument	false		4195136	2					
ANR	4195254	Identifier	false		4195136	0					
ANR	4195255	IfStatement	"if ( r_anal_esil_condition ( core -> anal -> esil , esilstr ) )"		4195136	4					
ANR	4195256	Condition	"r_anal_esil_condition ( core -> anal -> esil , esilstr )"	772:6:27635:27683	4195136	0	True				
ANR	4195257	CallExpression	"r_anal_esil_condition ( core -> anal -> esil , esilstr )"		4195136	0					
ANR	4195258	Callee	r_anal_esil_condition		4195136	0					
ANR	4195259	Identifier	r_anal_esil_condition		4195136	0					
ANR	4195260	ArgumentList	core -> anal -> esil		4195136	1					
ANR	4195261	Argument	core -> anal -> esil		4195136	0					
ANR	4195262	PtrMemberAccess	core -> anal -> esil		4195136	0					
ANR	4195263	PtrMemberAccess	core -> anal		4195136	0					
ANR	4195264	Identifier	core		4195136	0					
ANR	4195265	Identifier	anal		4195136	1					
ANR	4195266	Identifier	esil		4195136	1					
ANR	4195267	Argument	esilstr		4195136	1					
ANR	4195268	Identifier	esilstr		4195136	0					
ANR	4195269	CompoundStatement		19:57:522:522	4195136	1					
ANR	4195270	ExpressionStatement	"eprintf ( ""ESIL BREAK!\\n"" )"	773:3:27691:27716	4195136	0	True				
ANR	4195271	CallExpression	"eprintf ( ""ESIL BREAK!\\n"" )"		4195136	0					
ANR	4195272	Callee	eprintf		4195136	0					
ANR	4195273	Identifier	eprintf		4195136	0					
ANR	4195274	ArgumentList	"""ESIL BREAK!\\n"""		4195136	1					
ANR	4195275	Argument	"""ESIL BREAK!\\n"""		4195136	0					
ANR	4195276	PrimaryExpression	"""ESIL BREAK!\\n"""		4195136	0					
ANR	4195277	BreakStatement	break ;	774:3:27721:27726	4195136	1	True				
ANR	4195278	ExpressionStatement	r_cons_break_pop ( )	777:1:27736:27755	4195136	3	True				
ANR	4195279	CallExpression	r_cons_break_pop ( )		4195136	0					
ANR	4195280	Callee	r_cons_break_pop		4195136	0					
ANR	4195281	Identifier	r_cons_break_pop		4195136	0					
ANR	4195282	ArgumentList			4195136	1					
ANR	4195283	ReturnStatement	return true ;	778:1:27758:27769	4195136	4	True				
ANR	4195284	Identifier	true		4195136	0					
ANR	4195285	ReturnType	static int		4195136	1					
ANR	4195286	Identifier	step_until_esil		4195136	2					
ANR	4195287	ParameterList	"RCore * core , const char * esilstr"		4195136	3					
ANR	4195288	Parameter	RCore * core	754:27:27129:27139	4195136	0	True				
ANR	4195289	ParameterType	RCore *		4195136	0					
ANR	4195290	Identifier	core		4195136	1					
ANR	4195291	Parameter	const char * esilstr	754:40:27142:27160	4195136	1	True				
ANR	4195292	ParameterType	const char *		4195136	0					
ANR	4195293	Identifier	esilstr		4195136	1					
ANR	4195294	CFGEntryNode	ENTRY		4195136		True				
ANR	4195295	CFGExitNode	EXIT		4195136		True				
ANR	4195296	InfiniteForNode	true		4195136		True				
ANR	4195297	Symbol	NULL		4195136						
ANR	4195298	Symbol	core -> dbg -> anal		4195136						
ANR	4195299	Symbol	* core		4195136						
ANR	4195300	Symbol	false		4195136						
ANR	4195301	Symbol	esilstr		4195136						
ANR	4195302	Symbol	core -> anal		4195136						
ANR	4195303	Symbol	core		4195136						
ANR	4195304	Symbol	* * * core		4195136						
ANR	4195305	Symbol	core -> break_loop		4195136						
ANR	4195306	Symbol	r_cons_is_breaked		4195136						
ANR	4195307	Symbol	r_debug_is_dead		4195136						
ANR	4195308	Symbol	* core -> anal		4195136						
ANR	4195309	Symbol	core -> dbg -> anal -> esil		4195136						
ANR	4195310	Symbol	* core -> dbg -> anal		4195136						
ANR	4195311	Symbol	R_REG_TYPE_ALL		4195136						
ANR	4195312	Symbol	true		4195136						
ANR	4195313	Symbol	r_anal_esil_condition		4195136						
ANR	4195314	Symbol	core -> anal -> esil		4195136						
ANR	4195315	Symbol	* core -> dbg		4195136						
ANR	4195316	Symbol	* * core		4195136						
ANR	4195317	Symbol	core -> dbg		4195136						
ANR	4195318	Symbol	* * core -> dbg		4195136						
ANR	4195319	Function	is_repeatable_inst	781:0:27774:28211							
ANR	4195320	FunctionDef	"is_repeatable_inst (RCore * core , ut64 addr)"		4195319	0					
ANR	4195321	CompoundStatement		781:55:27829:28211	4195319	0					
ANR	4195322	IdentifierDeclStatement	bool ret = false ;	782:1:27832:27848	4195319	0	True				
ANR	4195323	IdentifierDecl	ret = false		4195319	0					
ANR	4195324	IdentifierDeclType	bool		4195319	0					
ANR	4195325	Identifier	ret		4195319	1					
ANR	4195326	AssignmentExpression	ret = false		4195319	2		=			
ANR	4195327	Identifier	false		4195319	0					
ANR	4195328	Identifier	false		4195319	1					
ANR	4195329	IfStatement	"if ( ! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" ) )"		4195319	1					
ANR	4195330	Condition	"! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"	784:5:27856:27921	4195319	0	True				
ANR	4195331	UnaryOperationExpression	"! r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"		4195319	0					
ANR	4195332	UnaryOperator	!		4195319	0					
ANR	4195333	CallExpression	"r_str_startswith ( r_config_get ( core -> config , ""asm.arch"" ) , ""x86"" )"		4195319	1					
ANR	4195334	Callee	r_str_startswith		4195319	0					
ANR	4195335	Identifier	r_str_startswith		4195319	0					
ANR	4195336	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		4195319	1					
ANR	4195337	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		4195319	0					
ANR	4195338	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4195319	0					
ANR	4195339	Callee	r_config_get		4195319	0					
ANR	4195340	Identifier	r_config_get		4195319	0					
ANR	4195341	ArgumentList	core -> config		4195319	1					
ANR	4195342	Argument	core -> config		4195319	0					
ANR	4195343	PtrMemberAccess	core -> config		4195319	0					
ANR	4195344	Identifier	core		4195319	0					
ANR	4195345	Identifier	config		4195319	1					
ANR	4195346	Argument	"""asm.arch"""		4195319	1					
ANR	4195347	PrimaryExpression	"""asm.arch"""		4195319	0					
ANR	4195348	Argument	"""x86"""		4195319	1					
ANR	4195349	PrimaryExpression	"""x86"""		4195319	0					
ANR	4195350	CompoundStatement		4:73:94:94	4195319	1					
ANR	4195351	ReturnStatement	return false ;	785:2:27928:27940	4195319	0	True				
ANR	4195352	Identifier	false		4195319	0					
ANR	4195353	IdentifierDeclStatement	"RAnalOp * op = r_core_op_anal ( core , addr ) ;"	788:1:27947:27988	4195319	2	True				
ANR	4195354	IdentifierDecl	"* op = r_core_op_anal ( core , addr )"		4195319	0					
ANR	4195355	IdentifierDeclType	RAnalOp *		4195319	0					
ANR	4195356	Identifier	op		4195319	1					
ANR	4195357	AssignmentExpression	"* op = r_core_op_anal ( core , addr )"		4195319	2		=			
ANR	4195358	Identifier	op		4195319	0					
ANR	4195359	CallExpression	"r_core_op_anal ( core , addr )"		4195319	1					
ANR	4195360	Callee	r_core_op_anal		4195319	0					
ANR	4195361	Identifier	r_core_op_anal		4195319	0					
ANR	4195362	ArgumentList	core		4195319	1					
ANR	4195363	Argument	core		4195319	0					
ANR	4195364	Identifier	core		4195319	0					
ANR	4195365	Argument	addr		4195319	1					
ANR	4195366	Identifier	addr		4195319	0					
ANR	4195367	IfStatement	if ( ! op )		4195319	3					
ANR	4195368	Condition	! op	789:5:27995:27997	4195319	0	True				
ANR	4195369	UnaryOperationExpression	! op		4195319	0					
ANR	4195370	UnaryOperator	!		4195319	0					
ANR	4195371	Identifier	op		4195319	1					
ANR	4195372	CompoundStatement		9:10:170:170	4195319	1					
ANR	4195373	Statement	eprintf	790:2:28004:28010	4195319	0	True				
ANR	4195374	Statement	(	790:10:28012:28012	4195319	1	True				
ANR	4195375	Statement	"""Cannot analyze opcode at 0x%08"""	790:11:28013:28044	4195319	2	True				
ANR	4195376	Statement	PFMT64x	790:44:28046:28052	4195319	3	True				
ANR	4195377	Statement	"""\\n"""	790:52:28054:28057	4195319	4	True				
ANR	4195378	Statement	","	790:56:28058:28058	4195319	5	True				
ANR	4195379	Statement	addr	790:58:28060:28063	4195319	6	True				
ANR	4195380	Statement	)	790:62:28064:28064	4195319	7	True				
ANR	4195381	ExpressionStatement		790:63:28065:28065	4195319	8	True				
ANR	4195382	ReturnStatement	return false ;	791:2:28069:28081	4195319	9	True				
ANR	4195383	Identifier	false		4195319	0					
ANR	4195384	ExpressionStatement	ret = ( op -> prefix & R_ANAL_OP_PREFIX_REP ) || ( op -> prefix & R_ANAL_OP_PREFIX_REPNE )	794:1:28088:28170	4195319	4	True				
ANR	4195385	AssignmentExpression	ret = ( op -> prefix & R_ANAL_OP_PREFIX_REP ) || ( op -> prefix & R_ANAL_OP_PREFIX_REPNE )		4195319	0		=			
ANR	4195386	Identifier	ret		4195319	0					
ANR	4195387	OrExpression	( op -> prefix & R_ANAL_OP_PREFIX_REP ) || ( op -> prefix & R_ANAL_OP_PREFIX_REPNE )		4195319	1		||			
ANR	4195388	BitAndExpression	op -> prefix & R_ANAL_OP_PREFIX_REP		4195319	0		&			
ANR	4195389	PtrMemberAccess	op -> prefix		4195319	0					
ANR	4195390	Identifier	op		4195319	0					
ANR	4195391	Identifier	prefix		4195319	1					
ANR	4195392	Identifier	R_ANAL_OP_PREFIX_REP		4195319	1					
ANR	4195393	BitAndExpression	op -> prefix & R_ANAL_OP_PREFIX_REPNE		4195319	1		&			
ANR	4195394	PtrMemberAccess	op -> prefix		4195319	0					
ANR	4195395	Identifier	op		4195319	0					
ANR	4195396	Identifier	prefix		4195319	1					
ANR	4195397	Identifier	R_ANAL_OP_PREFIX_REPNE		4195319	1					
ANR	4195398	ExpressionStatement	r_anal_op_free ( op )	796:4:28177:28196	4195319	5	True				
ANR	4195399	CallExpression	r_anal_op_free ( op )		4195319	0					
ANR	4195400	Callee	r_anal_op_free		4195319	0					
ANR	4195401	Identifier	r_anal_op_free		4195319	0					
ANR	4195402	ArgumentList	op		4195319	1					
ANR	4195403	Argument	op		4195319	0					
ANR	4195404	Identifier	op		4195319	0					
ANR	4195405	ReturnStatement	return ret ;	797:1:28199:28209	4195319	6	True				
ANR	4195406	Identifier	ret		4195319	0					
ANR	4195407	ReturnType	static bool		4195319	1					
ANR	4195408	Identifier	is_repeatable_inst		4195319	2					
ANR	4195409	ParameterList	"RCore * core , ut64 addr"		4195319	3					
ANR	4195410	Parameter	RCore * core	781:31:27805:27815	4195319	0	True				
ANR	4195411	ParameterType	RCore *		4195319	0					
ANR	4195412	Identifier	core		4195319	1					
ANR	4195413	Parameter	ut64 addr	781:44:27818:27826	4195319	1	True				
ANR	4195414	ParameterType	ut64		4195319	0					
ANR	4195415	Identifier	addr		4195319	1					
ANR	4195416	CFGEntryNode	ENTRY		4195319		True				
ANR	4195417	CFGExitNode	EXIT		4195319		True				
ANR	4195418	Symbol	ret		4195319						
ANR	4195419	Symbol	r_str_startswith		4195319						
ANR	4195420	Symbol	core -> config		4195319						
ANR	4195421	Symbol	op		4195319						
ANR	4195422	Symbol	* op		4195319						
ANR	4195423	Symbol	false		4195319						
ANR	4195424	Symbol	r_config_get		4195319						
ANR	4195425	Symbol	* core		4195319						
ANR	4195426	Symbol	op -> prefix		4195319						
ANR	4195427	Symbol	core		4195319						
ANR	4195428	Symbol	R_ANAL_OP_PREFIX_REPNE		4195319						
ANR	4195429	Symbol	R_ANAL_OP_PREFIX_REP		4195319						
ANR	4195430	Symbol	addr		4195319						
ANR	4195431	Symbol	r_core_op_anal		4195319						
ANR	4195432	Function	step_until_inst	800:0:28214:29546							
ANR	4195433	FunctionDef	"step_until_inst (RCore * core , const char * instr , bool regex)"		4195432	0					
ANR	4195434	CompoundStatement		800:71:28285:29546	4195432	0					
ANR	4195435	IdentifierDeclStatement	RAsmOp asmop ;	801:1:28288:28300	4195432	0	True				
ANR	4195436	IdentifierDecl	asmop		4195432	0					
ANR	4195437	IdentifierDeclType	RAsmOp		4195432	0					
ANR	4195438	Identifier	asmop		4195432	1					
ANR	4195439	IdentifierDeclStatement	ut8 buf [ 32 ] ;	802:1:28303:28314	4195432	1	True				
ANR	4195440	IdentifierDecl	buf [ 32 ]		4195432	0					
ANR	4195441	IdentifierDeclType	ut8 [ 32 ]		4195432	0					
ANR	4195442	Identifier	buf		4195432	1					
ANR	4195443	PrimaryExpression	32		4195432	2					
ANR	4195444	IdentifierDeclStatement	ut64 pc ;	803:1:28317:28324	4195432	2	True				
ANR	4195445	IdentifierDecl	pc		4195432	0					
ANR	4195446	IdentifierDeclType	ut64		4195432	0					
ANR	4195447	Identifier	pc		4195432	1					
ANR	4195448	IdentifierDeclStatement	int ret ;	804:1:28327:28334	4195432	3	True				
ANR	4195449	IdentifierDecl	ret		4195432	0					
ANR	4195450	IdentifierDeclType	int		4195432	0					
ANR	4195451	Identifier	ret		4195432	1					
ANR	4195452	ExpressionStatement	instr = r_str_trim_ro ( instr )	806:1:28338:28367	4195432	4	True				
ANR	4195453	AssignmentExpression	instr = r_str_trim_ro ( instr )		4195432	0		=			
ANR	4195454	Identifier	instr		4195432	0					
ANR	4195455	CallExpression	r_str_trim_ro ( instr )		4195432	1					
ANR	4195456	Callee	r_str_trim_ro		4195432	0					
ANR	4195457	Identifier	r_str_trim_ro		4195432	0					
ANR	4195458	ArgumentList	instr		4195432	1					
ANR	4195459	Argument	instr		4195432	0					
ANR	4195460	Identifier	instr		4195432	0					
ANR	4195461	IfStatement	if ( ! core || ! instr || ! core -> dbg )		4195432	5					
ANR	4195462	Condition	! core || ! instr || ! core -> dbg	807:5:28374:28401	4195432	0	True				
ANR	4195463	OrExpression	! core || ! instr || ! core -> dbg		4195432	0		||			
ANR	4195464	UnaryOperationExpression	! core		4195432	0					
ANR	4195465	UnaryOperator	!		4195432	0					
ANR	4195466	Identifier	core		4195432	1					
ANR	4195467	OrExpression	! instr || ! core -> dbg		4195432	1		||			
ANR	4195468	UnaryOperationExpression	! instr		4195432	0					
ANR	4195469	UnaryOperator	!		4195432	0					
ANR	4195470	Identifier	instr		4195432	1					
ANR	4195471	UnaryOperationExpression	! core -> dbg		4195432	1					
ANR	4195472	UnaryOperator	!		4195432	0					
ANR	4195473	PtrMemberAccess	core -> dbg		4195432	1					
ANR	4195474	Identifier	core		4195432	0					
ANR	4195475	Identifier	dbg		4195432	1					
ANR	4195476	CompoundStatement		8:35:118:118	4195432	1					
ANR	4195477	ExpressionStatement	"eprintf ( ""Wrong state\\n"" )"	808:2:28408:28433	4195432	0	True				
ANR	4195478	CallExpression	"eprintf ( ""Wrong state\\n"" )"		4195432	0					
ANR	4195479	Callee	eprintf		4195432	0					
ANR	4195480	Identifier	eprintf		4195432	0					
ANR	4195481	ArgumentList	"""Wrong state\\n"""		4195432	1					
ANR	4195482	Argument	"""Wrong state\\n"""		4195432	0					
ANR	4195483	PrimaryExpression	"""Wrong state\\n"""		4195432	0					
ANR	4195484	ReturnStatement	return false ;	809:2:28437:28449	4195432	1	True				
ANR	4195485	Identifier	false		4195432	0					
ANR	4195486	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	811:1:28455:28485	4195432	6	True				
ANR	4195487	CallExpression	"r_cons_break_push ( NULL , NULL )"		4195432	0					
ANR	4195488	Callee	r_cons_break_push		4195432	0					
ANR	4195489	Identifier	r_cons_break_push		4195432	0					
ANR	4195490	ArgumentList	NULL		4195432	1					
ANR	4195491	Argument	NULL		4195432	0					
ANR	4195492	Identifier	NULL		4195432	0					
ANR	4195493	Argument	NULL		4195432	1					
ANR	4195494	Identifier	NULL		4195432	0					
ANR	4195495	ForStatement	for ( ; ; )		4195432	7					
ANR	4195496	CompoundStatement		13:10:211:211	4195432	0					
ANR	4195497	IfStatement	if ( r_cons_is_breaked ( ) )		4195432	0					
ANR	4195498	Condition	r_cons_is_breaked ( )	813:6:28505:28524	4195432	0	True				
ANR	4195499	CallExpression	r_cons_is_breaked ( )		4195432	0					
ANR	4195500	Callee	r_cons_is_breaked		4195432	0					
ANR	4195501	Identifier	r_cons_is_breaked		4195432	0					
ANR	4195502	ArgumentList			4195432	1					
ANR	4195503	CompoundStatement		14:28:241:241	4195432	1					
ANR	4195504	BreakStatement	break ;	814:3:28532:28537	4195432	0	True				
ANR	4195505	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4195432	1					
ANR	4195506	Condition	r_debug_is_dead ( core -> dbg )	816:6:28549:28575	4195432	0	True				
ANR	4195507	CallExpression	r_debug_is_dead ( core -> dbg )		4195432	0					
ANR	4195508	Callee	r_debug_is_dead		4195432	0					
ANR	4195509	Identifier	r_debug_is_dead		4195432	0					
ANR	4195510	ArgumentList	core -> dbg		4195432	1					
ANR	4195511	Argument	core -> dbg		4195432	0					
ANR	4195512	PtrMemberAccess	core -> dbg		4195432	0					
ANR	4195513	Identifier	core		4195432	0					
ANR	4195514	Identifier	dbg		4195432	1					
ANR	4195515	CompoundStatement		17:35:292:292	4195432	1					
ANR	4195516	BreakStatement	break ;	817:3:28583:28588	4195432	0	True				
ANR	4195517	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	819:2:28596:28634	4195432	2	True				
ANR	4195518	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4195432	0		=			
ANR	4195519	Identifier	pc		4195432	0					
ANR	4195520	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4195432	1					
ANR	4195521	Callee	r_debug_reg_get		4195432	0					
ANR	4195522	Identifier	r_debug_reg_get		4195432	0					
ANR	4195523	ArgumentList	core -> dbg		4195432	1					
ANR	4195524	Argument	core -> dbg		4195432	0					
ANR	4195525	PtrMemberAccess	core -> dbg		4195432	0					
ANR	4195526	Identifier	core		4195432	0					
ANR	4195527	Identifier	dbg		4195432	1					
ANR	4195528	Argument	"""PC"""		4195432	1					
ANR	4195529	PrimaryExpression	"""PC"""		4195432	0					
ANR	4195530	IfStatement	"if ( is_repeatable_inst ( core , pc ) )"		4195432	3					
ANR	4195531	Condition	"is_repeatable_inst ( core , pc )"	820:6:28642:28670	4195432	0	True				
ANR	4195532	CallExpression	"is_repeatable_inst ( core , pc )"		4195432	0					
ANR	4195533	Callee	is_repeatable_inst		4195432	0					
ANR	4195534	Identifier	is_repeatable_inst		4195432	0					
ANR	4195535	ArgumentList	core		4195432	1					
ANR	4195536	Argument	core		4195432	0					
ANR	4195537	Identifier	core		4195432	0					
ANR	4195538	Argument	pc		4195432	1					
ANR	4195539	Identifier	pc		4195432	0					
ANR	4195540	CompoundStatement		21:37:387:387	4195432	1					
ANR	4195541	ExpressionStatement	"r_debug_step_over ( core -> dbg , 1 )"	821:3:28678:28710	4195432	0	True				
ANR	4195542	CallExpression	"r_debug_step_over ( core -> dbg , 1 )"		4195432	0					
ANR	4195543	Callee	r_debug_step_over		4195432	0					
ANR	4195544	Identifier	r_debug_step_over		4195432	0					
ANR	4195545	ArgumentList	core -> dbg		4195432	1					
ANR	4195546	Argument	core -> dbg		4195432	0					
ANR	4195547	PtrMemberAccess	core -> dbg		4195432	0					
ANR	4195548	Identifier	core		4195432	0					
ANR	4195549	Identifier	dbg		4195432	1					
ANR	4195550	Argument	1		4195432	1					
ANR	4195551	PrimaryExpression	1		4195432	0					
ANR	4195552	ElseStatement	else		4195432	0					
ANR	4195553	CompoundStatement		23:9:435:435	4195432	0					
ANR	4195554	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	823:3:28726:28753	4195432	0	True				
ANR	4195555	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4195432	0					
ANR	4195556	Callee	r_debug_step		4195432	0					
ANR	4195557	Identifier	r_debug_step		4195432	0					
ANR	4195558	ArgumentList	core -> dbg		4195432	1					
ANR	4195559	Argument	core -> dbg		4195432	0					
ANR	4195560	PtrMemberAccess	core -> dbg		4195432	0					
ANR	4195561	Identifier	core		4195432	0					
ANR	4195562	Identifier	dbg		4195432	1					
ANR	4195563	Argument	1		4195432	1					
ANR	4195564	PrimaryExpression	1		4195432	0					
ANR	4195565	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	825:2:28761:28799	4195432	4	True				
ANR	4195566	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4195432	0		=			
ANR	4195567	Identifier	pc		4195432	0					
ANR	4195568	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4195432	1					
ANR	4195569	Callee	r_debug_reg_get		4195432	0					
ANR	4195570	Identifier	r_debug_reg_get		4195432	0					
ANR	4195571	ArgumentList	core -> dbg		4195432	1					
ANR	4195572	Argument	core -> dbg		4195432	0					
ANR	4195573	PtrMemberAccess	core -> dbg		4195432	0					
ANR	4195574	Identifier	core		4195432	0					
ANR	4195575	Identifier	dbg		4195432	1					
ANR	4195576	Argument	"""PC"""		4195432	1					
ANR	4195577	PrimaryExpression	"""PC"""		4195432	0					
ANR	4195578	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	826:2:28803:28854	4195432	5	True				
ANR	4195579	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		4195432	0					
ANR	4195580	Callee	r_debug_reg_sync		4195432	0					
ANR	4195581	Identifier	r_debug_reg_sync		4195432	0					
ANR	4195582	ArgumentList	core -> dbg		4195432	1					
ANR	4195583	Argument	core -> dbg		4195432	0					
ANR	4195584	PtrMemberAccess	core -> dbg		4195432	0					
ANR	4195585	Identifier	core		4195432	0					
ANR	4195586	Identifier	dbg		4195432	1					
ANR	4195587	Argument	R_REG_TYPE_ALL		4195432	1					
ANR	4195588	Identifier	R_REG_TYPE_ALL		4195432	0					
ANR	4195589	Argument	false		4195432	2					
ANR	4195590	Identifier	false		4195432	0					
ANR	4195591	ExpressionStatement	"r_asm_set_pc ( core -> assembler , pc )"	828:2:28907:28941	4195432	6	True				
ANR	4195592	CallExpression	"r_asm_set_pc ( core -> assembler , pc )"		4195432	0					
ANR	4195593	Callee	r_asm_set_pc		4195432	0					
ANR	4195594	Identifier	r_asm_set_pc		4195432	0					
ANR	4195595	ArgumentList	core -> assembler		4195432	1					
ANR	4195596	Argument	core -> assembler		4195432	0					
ANR	4195597	PtrMemberAccess	core -> assembler		4195432	0					
ANR	4195598	Identifier	core		4195432	0					
ANR	4195599	Identifier	assembler		4195432	1					
ANR	4195600	Argument	pc		4195432	1					
ANR	4195601	Identifier	pc		4195432	0					
ANR	4195602	ExpressionStatement	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"	830:2:29018:29064	4195432	7	True				
ANR	4195603	CallExpression	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"		4195432	0					
ANR	4195604	Callee	r_io_read_at		4195432	0					
ANR	4195605	Identifier	r_io_read_at		4195432	0					
ANR	4195606	ArgumentList	core -> io		4195432	1					
ANR	4195607	Argument	core -> io		4195432	0					
ANR	4195608	PtrMemberAccess	core -> io		4195432	0					
ANR	4195609	Identifier	core		4195432	0					
ANR	4195610	Identifier	io		4195432	1					
ANR	4195611	Argument	pc		4195432	1					
ANR	4195612	Identifier	pc		4195432	0					
ANR	4195613	Argument	buf		4195432	2					
ANR	4195614	Identifier	buf		4195432	0					
ANR	4195615	Argument	sizeof ( buf )		4195432	3					
ANR	4195616	SizeofExpression	sizeof ( buf )		4195432	0					
ANR	4195617	Sizeof	sizeof		4195432	0					
ANR	4195618	SizeofOperand	buf		4195432	1					
ANR	4195619	ExpressionStatement	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"	831:2:29068:29136	4195432	8	True				
ANR	4195620	AssignmentExpression	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		4195432	0		=			
ANR	4195621	Identifier	ret		4195432	0					
ANR	4195622	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		4195432	1					
ANR	4195623	Callee	r_asm_disassemble		4195432	0					
ANR	4195624	Identifier	r_asm_disassemble		4195432	0					
ANR	4195625	ArgumentList	core -> assembler		4195432	1					
ANR	4195626	Argument	core -> assembler		4195432	0					
ANR	4195627	PtrMemberAccess	core -> assembler		4195432	0					
ANR	4195628	Identifier	core		4195432	0					
ANR	4195629	Identifier	assembler		4195432	1					
ANR	4195630	Argument	& asmop		4195432	1					
ANR	4195631	UnaryOperationExpression	& asmop		4195432	0					
ANR	4195632	UnaryOperator	&		4195432	0					
ANR	4195633	Identifier	asmop		4195432	1					
ANR	4195634	Argument	buf		4195432	2					
ANR	4195635	Identifier	buf		4195432	0					
ANR	4195636	Argument	sizeof ( buf )		4195432	3					
ANR	4195637	SizeofExpression	sizeof ( buf )		4195432	0					
ANR	4195638	Sizeof	sizeof		4195432	0					
ANR	4195639	SizeofOperand	buf		4195432	1					
ANR	4195640	Statement	eprintf	832:2:29140:29146	4195432	9	True				
ANR	4195641	Statement	(	832:10:29148:29148	4195432	10	True				
ANR	4195642	Statement	"""0x%08"""	832:11:29149:29155	4195432	11	True				
ANR	4195643	Statement	PFMT64x	832:18:29156:29162	4195432	12	True				
ANR	4195644	Statement	""" %d %s\\n"""	832:25:29163:29172	4195432	13	True				
ANR	4195645	Statement	","	832:35:29173:29173	4195432	14	True				
ANR	4195646	Statement	pc	832:37:29175:29176	4195432	15	True				
ANR	4195647	Statement	","	832:39:29177:29177	4195432	16	True				
ANR	4195648	Statement	ret	832:41:29179:29181	4195432	17	True				
ANR	4195649	Statement	","	832:44:29182:29182	4195432	18	True				
ANR	4195650	Statement	r_asm_op_get_asm	832:46:29184:29199	4195432	19	True				
ANR	4195651	Statement	(	832:63:29201:29201	4195432	20	True				
ANR	4195652	Statement	&	832:64:29202:29202	4195432	21	True				
ANR	4195653	Statement	asmop	832:65:29203:29207	4195432	22	True				
ANR	4195654	Statement	)	832:70:29208:29208	4195432	23	True				
ANR	4195655	Statement	)	832:71:29209:29209	4195432	24	True				
ANR	4195656	ExpressionStatement		832:72:29210:29210	4195432	25	True				
ANR	4195657	IfStatement	if ( ret > 0 )		4195432	26					
ANR	4195658	Condition	ret > 0	833:6:29237:29243	4195432	0	True				
ANR	4195659	RelationalExpression	ret > 0		4195432	0		>			
ANR	4195660	Identifier	ret		4195432	0					
ANR	4195661	PrimaryExpression	0		4195432	1					
ANR	4195662	CompoundStatement		35:3:965:1012	4195432	1					
ANR	4195663	IdentifierDeclStatement	const char * buf_asm = r_asm_op_get_asm ( & asmop ) ;	834:3:29251:29298	4195432	0	True				
ANR	4195664	IdentifierDecl	* buf_asm = r_asm_op_get_asm ( & asmop )		4195432	0					
ANR	4195665	IdentifierDeclType	const char *		4195432	0					
ANR	4195666	Identifier	buf_asm		4195432	1					
ANR	4195667	AssignmentExpression	* buf_asm = r_asm_op_get_asm ( & asmop )		4195432	2		=			
ANR	4195668	Identifier	buf_asm		4195432	0					
ANR	4195669	CallExpression	r_asm_op_get_asm ( & asmop )		4195432	1					
ANR	4195670	Callee	r_asm_op_get_asm		4195432	0					
ANR	4195671	Identifier	r_asm_op_get_asm		4195432	0					
ANR	4195672	ArgumentList	& asmop		4195432	1					
ANR	4195673	Argument	& asmop		4195432	0					
ANR	4195674	UnaryOperationExpression	& asmop		4195432	0					
ANR	4195675	UnaryOperator	&		4195432	0					
ANR	4195676	Identifier	asmop		4195432	1					
ANR	4195677	IfStatement	if ( regex )		4195432	1					
ANR	4195678	Condition	regex	835:7:29307:29311	4195432	0	True				
ANR	4195679	Identifier	regex		4195432	0					
ANR	4195680	CompoundStatement		36:14:1028:1028	4195432	1					
ANR	4195681	IfStatement	"if ( r_regex_match ( instr , ""e"" , buf_asm ) )"		4195432	0					
ANR	4195682	Condition	"r_regex_match ( instr , ""e"" , buf_asm )"	836:8:29324:29358	4195432	0	True				
ANR	4195683	CallExpression	"r_regex_match ( instr , ""e"" , buf_asm )"		4195432	0					
ANR	4195684	Callee	r_regex_match		4195432	0					
ANR	4195685	Identifier	r_regex_match		4195432	0					
ANR	4195686	ArgumentList	instr		4195432	1					
ANR	4195687	Argument	instr		4195432	0					
ANR	4195688	Identifier	instr		4195432	0					
ANR	4195689	Argument	"""e"""		4195432	1					
ANR	4195690	PrimaryExpression	"""e"""		4195432	0					
ANR	4195691	Argument	buf_asm		4195432	2					
ANR	4195692	Identifier	buf_asm		4195432	0					
ANR	4195693	CompoundStatement		37:45:1075:1075	4195432	1					
ANR	4195694	ExpressionStatement	"eprintf ( ""Stop.\\n"" )"	837:5:29368:29387	4195432	0	True				
ANR	4195695	CallExpression	"eprintf ( ""Stop.\\n"" )"		4195432	0					
ANR	4195696	Callee	eprintf		4195432	0					
ANR	4195697	Identifier	eprintf		4195432	0					
ANR	4195698	ArgumentList	"""Stop.\\n"""		4195432	1					
ANR	4195699	Argument	"""Stop.\\n"""		4195432	0					
ANR	4195700	PrimaryExpression	"""Stop.\\n"""		4195432	0					
ANR	4195701	BreakStatement	break ;	838:5:29394:29399	4195432	1	True				
ANR	4195702	ElseStatement	else		4195432	0					
ANR	4195703	CompoundStatement		41:10:1131:1131	4195432	0					
ANR	4195704	IfStatement	"if ( strstr ( buf_asm , instr ) )"		4195432	0					
ANR	4195705	Condition	"strstr ( buf_asm , instr )"	841:8:29427:29449	4195432	0	True				
ANR	4195706	CallExpression	"strstr ( buf_asm , instr )"		4195432	0					
ANR	4195707	Callee	strstr		4195432	0					
ANR	4195708	Identifier	strstr		4195432	0					
ANR	4195709	ArgumentList	buf_asm		4195432	1					
ANR	4195710	Argument	buf_asm		4195432	0					
ANR	4195711	Identifier	buf_asm		4195432	0					
ANR	4195712	Argument	instr		4195432	1					
ANR	4195713	Identifier	instr		4195432	0					
ANR	4195714	CompoundStatement		42:33:1166:1166	4195432	1					
ANR	4195715	ExpressionStatement	"eprintf ( ""Stop.\\n"" )"	842:5:29459:29478	4195432	0	True				
ANR	4195716	CallExpression	"eprintf ( ""Stop.\\n"" )"		4195432	0					
ANR	4195717	Callee	eprintf		4195432	0					
ANR	4195718	Identifier	eprintf		4195432	0					
ANR	4195719	ArgumentList	"""Stop.\\n"""		4195432	1					
ANR	4195720	Argument	"""Stop.\\n"""		4195432	0					
ANR	4195721	PrimaryExpression	"""Stop.\\n"""		4195432	0					
ANR	4195722	BreakStatement	break ;	843:5:29485:29490	4195432	1	True				
ANR	4195723	ExpressionStatement	r_cons_break_pop ( )	848:1:29511:29530	4195432	8	True				
ANR	4195724	CallExpression	r_cons_break_pop ( )		4195432	0					
ANR	4195725	Callee	r_cons_break_pop		4195432	0					
ANR	4195726	Identifier	r_cons_break_pop		4195432	0					
ANR	4195727	ArgumentList			4195432	1					
ANR	4195728	ReturnStatement	return true ;	849:1:29533:29544	4195432	9	True				
ANR	4195729	Identifier	true		4195432	0					
ANR	4195730	ReturnType	static int		4195432	1					
ANR	4195731	Identifier	step_until_inst		4195432	2					
ANR	4195732	ParameterList	"RCore * core , const char * instr , bool regex"		4195432	3					
ANR	4195733	Parameter	RCore * core	800:27:28241:28251	4195432	0	True				
ANR	4195734	ParameterType	RCore *		4195432	0					
ANR	4195735	Identifier	core		4195432	1					
ANR	4195736	Parameter	const char * instr	800:40:28254:28270	4195432	1	True				
ANR	4195737	ParameterType	const char *		4195432	0					
ANR	4195738	Identifier	instr		4195432	1					
ANR	4195739	Parameter	bool regex	800:59:28273:28282	4195432	2	True				
ANR	4195740	ParameterType	bool		4195432	0					
ANR	4195741	Identifier	regex		4195432	1					
ANR	4195742	CFGEntryNode	ENTRY		4195432		True				
ANR	4195743	CFGExitNode	EXIT		4195432		True				
ANR	4195744	InfiniteForNode	true		4195432		True				
ANR	4195745	Symbol	r_debug_reg_get		4195432						
ANR	4195746	Symbol	* core		4195432						
ANR	4195747	Symbol	core -> assembler		4195432						
ANR	4195748	Symbol	r_asm_op_get_asm		4195432						
ANR	4195749	Symbol	asmop		4195432						
ANR	4195750	Symbol	r_cons_is_breaked		4195432						
ANR	4195751	Symbol	core -> io		4195432						
ANR	4195752	Symbol	R_REG_TYPE_ALL		4195432						
ANR	4195753	Symbol	instr		4195432						
ANR	4195754	Symbol	ret		4195432						
ANR	4195755	Symbol	is_repeatable_inst		4195432						
ANR	4195756	Symbol	NULL		4195432						
ANR	4195757	Symbol	false		4195432						
ANR	4195758	Symbol	r_regex_match		4195432						
ANR	4195759	Symbol	core		4195432						
ANR	4195760	Symbol	regex		4195432						
ANR	4195761	Symbol	buf		4195432						
ANR	4195762	Symbol	r_debug_is_dead		4195432						
ANR	4195763	Symbol	pc		4195432						
ANR	4195764	Symbol	strstr		4195432						
ANR	4195765	Symbol	& asmop		4195432						
ANR	4195766	Symbol	r_str_trim_ro		4195432						
ANR	4195767	Symbol	true		4195432						
ANR	4195768	Symbol	buf_asm		4195432						
ANR	4195769	Symbol	r_asm_disassemble		4195432						
ANR	4195770	Symbol	core -> dbg		4195432						
ANR	4195771	Function	step_until_optype	852:0:29549:31573							
ANR	4195772	FunctionDef	"step_until_optype (RCore * core , const char * _optypes)"		4195771	0					
ANR	4195773	CompoundStatement		852:64:29613:31573	4195771	0					
ANR	4195774	IdentifierDeclStatement	RAnalOp op ;	853:1:29616:29626	4195771	0	True				
ANR	4195775	IdentifierDecl	op		4195771	0					
ANR	4195776	IdentifierDeclType	RAnalOp		4195771	0					
ANR	4195777	Identifier	op		4195771	1					
ANR	4195778	IdentifierDeclStatement	ut8 buf [ 32 ] ;	854:1:29629:29640	4195771	1	True				
ANR	4195779	IdentifierDecl	buf [ 32 ]		4195771	0					
ANR	4195780	IdentifierDeclType	ut8 [ 32 ]		4195771	0					
ANR	4195781	Identifier	buf		4195771	1					
ANR	4195782	PrimaryExpression	32		4195771	2					
ANR	4195783	IdentifierDeclStatement	ut64 pc ;	855:1:29643:29650	4195771	2	True				
ANR	4195784	IdentifierDecl	pc		4195771	0					
ANR	4195785	IdentifierDeclType	ut64		4195771	0					
ANR	4195786	Identifier	pc		4195771	1					
ANR	4195787	IdentifierDeclStatement	int res = true ;	856:1:29653:29667	4195771	3	True				
ANR	4195788	IdentifierDecl	res = true		4195771	0					
ANR	4195789	IdentifierDeclType	int		4195771	0					
ANR	4195790	Identifier	res		4195771	1					
ANR	4195791	AssignmentExpression	res = true		4195771	2		=			
ANR	4195792	Identifier	true		4195771	0					
ANR	4195793	Identifier	true		4195771	1					
ANR	4195794	IdentifierDeclStatement	"bool debugMode = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	857:1:29670:29729	4195771	4	True				
ANR	4195795	IdentifierDecl	"debugMode = r_config_get_i ( core -> config , ""cfg.debug"" )"		4195771	0					
ANR	4195796	IdentifierDeclType	bool		4195771	0					
ANR	4195797	Identifier	debugMode		4195771	1					
ANR	4195798	AssignmentExpression	"debugMode = r_config_get_i ( core -> config , ""cfg.debug"" )"		4195771	2		=			
ANR	4195799	Identifier	debugMode		4195771	0					
ANR	4195800	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		4195771	1					
ANR	4195801	Callee	r_config_get_i		4195771	0					
ANR	4195802	Identifier	r_config_get_i		4195771	0					
ANR	4195803	ArgumentList	core -> config		4195771	1					
ANR	4195804	Argument	core -> config		4195771	0					
ANR	4195805	PtrMemberAccess	core -> config		4195771	0					
ANR	4195806	Identifier	core		4195771	0					
ANR	4195807	Identifier	config		4195771	1					
ANR	4195808	Argument	"""cfg.debug"""		4195771	1					
ANR	4195809	PrimaryExpression	"""cfg.debug"""		4195771	0					
ANR	4195810	IdentifierDeclStatement	RList * optypes_list = NULL ;	859:1:29733:29759	4195771	5	True				
ANR	4195811	IdentifierDecl	* optypes_list = NULL		4195771	0					
ANR	4195812	IdentifierDeclType	RList *		4195771	0					
ANR	4195813	Identifier	optypes_list		4195771	1					
ANR	4195814	AssignmentExpression	* optypes_list = NULL		4195771	2		=			
ANR	4195815	Identifier	NULL		4195771	0					
ANR	4195816	Identifier	NULL		4195771	1					
ANR	4195817	IdentifierDeclStatement	RListIter * iter ;	860:1:29762:29777	4195771	6	True				
ANR	4195818	IdentifierDecl	* iter		4195771	0					
ANR	4195819	IdentifierDeclType	RListIter *		4195771	0					
ANR	4195820	Identifier	iter		4195771	1					
ANR	4195821	IdentifierDeclStatement	"char * optype , * optypes = strdup ( r_str_trim_head ( ( char * ) _optypes ) ) ;"	861:1:29780:29849	4195771	7	True				
ANR	4195822	IdentifierDecl	* optype		4195771	0					
ANR	4195823	IdentifierDeclType	char *		4195771	0					
ANR	4195824	Identifier	optype		4195771	1					
ANR	4195825	IdentifierDecl	* optypes = strdup ( r_str_trim_head ( ( char * ) _optypes ) )		4195771	1					
ANR	4195826	IdentifierDeclType	char *		4195771	0					
ANR	4195827	Identifier	optypes		4195771	1					
ANR	4195828	AssignmentExpression	* optypes = strdup ( r_str_trim_head ( ( char * ) _optypes ) )		4195771	2		=			
ANR	4195829	Identifier	optypes		4195771	0					
ANR	4195830	CallExpression	strdup ( r_str_trim_head ( ( char * ) _optypes ) )		4195771	1					
ANR	4195831	Callee	strdup		4195771	0					
ANR	4195832	Identifier	strdup		4195771	0					
ANR	4195833	ArgumentList	r_str_trim_head ( ( char * ) _optypes )		4195771	1					
ANR	4195834	Argument	r_str_trim_head ( ( char * ) _optypes )		4195771	0					
ANR	4195835	CallExpression	r_str_trim_head ( ( char * ) _optypes )		4195771	0					
ANR	4195836	Callee	r_str_trim_head		4195771	0					
ANR	4195837	Identifier	r_str_trim_head		4195771	0					
ANR	4195838	ArgumentList	( char * ) _optypes		4195771	1					
ANR	4195839	Argument	( char * ) _optypes		4195771	0					
ANR	4195840	CastExpression	( char * ) _optypes		4195771	0					
ANR	4195841	CastTarget	char *		4195771	0					
ANR	4195842	Identifier	_optypes		4195771	1					
ANR	4195843	IfStatement	if ( ! core || ! core -> dbg )		4195771	8					
ANR	4195844	Condition	! core || ! core -> dbg	863:5:29857:29875	4195771	0	True				
ANR	4195845	OrExpression	! core || ! core -> dbg		4195771	0		||			
ANR	4195846	UnaryOperationExpression	! core		4195771	0					
ANR	4195847	UnaryOperator	!		4195771	0					
ANR	4195848	Identifier	core		4195771	1					
ANR	4195849	UnaryOperationExpression	! core -> dbg		4195771	1					
ANR	4195850	UnaryOperator	!		4195771	0					
ANR	4195851	PtrMemberAccess	core -> dbg		4195771	1					
ANR	4195852	Identifier	core		4195771	0					
ANR	4195853	Identifier	dbg		4195771	1					
ANR	4195854	CompoundStatement		12:26:264:264	4195771	1					
ANR	4195855	ExpressionStatement	"eprintf ( ""Wrong state\\n"" )"	864:2:29882:29907	4195771	0	True				
ANR	4195856	CallExpression	"eprintf ( ""Wrong state\\n"" )"		4195771	0					
ANR	4195857	Callee	eprintf		4195771	0					
ANR	4195858	Identifier	eprintf		4195771	0					
ANR	4195859	ArgumentList	"""Wrong state\\n"""		4195771	1					
ANR	4195860	Argument	"""Wrong state\\n"""		4195771	0					
ANR	4195861	PrimaryExpression	"""Wrong state\\n"""		4195771	0					
ANR	4195862	ExpressionStatement	res = false	865:2:29911:29922	4195771	1	True				
ANR	4195863	AssignmentExpression	res = false		4195771	0		=			
ANR	4195864	Identifier	res		4195771	0					
ANR	4195865	Identifier	false		4195771	1					
ANR	4195866	GotoStatement	goto end ;	866:2:29926:29934	4195771	2	True				
ANR	4195867	Identifier	end		4195771	0					
ANR	4195868	IfStatement	if ( ! optypes || ! * optypes )		4195771	9					
ANR	4195869	Condition	! optypes || ! * optypes	868:5:29944:29964	4195771	0	True				
ANR	4195870	OrExpression	! optypes || ! * optypes		4195771	0		||			
ANR	4195871	UnaryOperationExpression	! optypes		4195771	0					
ANR	4195872	UnaryOperator	!		4195771	0					
ANR	4195873	Identifier	optypes		4195771	1					
ANR	4195874	UnaryOperationExpression	! * optypes		4195771	1					
ANR	4195875	UnaryOperator	!		4195771	0					
ANR	4195876	UnaryOperationExpression	* optypes		4195771	1					
ANR	4195877	UnaryOperator	*		4195771	0					
ANR	4195878	Identifier	optypes		4195771	1					
ANR	4195879	CompoundStatement		17:28:353:353	4195771	1					
ANR	4195880	ExpressionStatement	"eprintf ( ""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"" )"	869:2:29971:30034	4195771	0	True				
ANR	4195881	CallExpression	"eprintf ( ""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"" )"		4195771	0					
ANR	4195882	Callee	eprintf		4195771	0					
ANR	4195883	Identifier	eprintf		4195771	0					
ANR	4195884	ArgumentList	"""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"""		4195771	1					
ANR	4195885	Argument	"""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"""		4195771	0					
ANR	4195886	PrimaryExpression	"""Missing optypes. Usage example: 'dsuo ucall ujmp'\\n"""		4195771	0					
ANR	4195887	ExpressionStatement	res = false	870:2:30038:30049	4195771	1	True				
ANR	4195888	AssignmentExpression	res = false		4195771	0		=			
ANR	4195889	Identifier	res		4195771	0					
ANR	4195890	Identifier	false		4195771	1					
ANR	4195891	GotoStatement	goto end ;	871:2:30053:30061	4195771	2	True				
ANR	4195892	Identifier	end		4195771	0					
ANR	4195893	ExpressionStatement	"optypes_list = r_str_split_list ( optypes , "" "" , 0 )"	874:1:30068:30117	4195771	10	True				
ANR	4195894	AssignmentExpression	"optypes_list = r_str_split_list ( optypes , "" "" , 0 )"		4195771	0		=			
ANR	4195895	Identifier	optypes_list		4195771	0					
ANR	4195896	CallExpression	"r_str_split_list ( optypes , "" "" , 0 )"		4195771	1					
ANR	4195897	Callee	r_str_split_list		4195771	0					
ANR	4195898	Identifier	r_str_split_list		4195771	0					
ANR	4195899	ArgumentList	optypes		4195771	1					
ANR	4195900	Argument	optypes		4195771	0					
ANR	4195901	Identifier	optypes		4195771	0					
ANR	4195902	Argument	""" """		4195771	1					
ANR	4195903	PrimaryExpression	""" """		4195771	0					
ANR	4195904	Argument	0		4195771	2					
ANR	4195905	PrimaryExpression	0		4195771	0					
ANR	4195906	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	876:1:30121:30151	4195771	11	True				
ANR	4195907	CallExpression	"r_cons_break_push ( NULL , NULL )"		4195771	0					
ANR	4195908	Callee	r_cons_break_push		4195771	0					
ANR	4195909	Identifier	r_cons_break_push		4195771	0					
ANR	4195910	ArgumentList	NULL		4195771	1					
ANR	4195911	Argument	NULL		4195771	0					
ANR	4195912	Identifier	NULL		4195771	0					
ANR	4195913	Argument	NULL		4195771	1					
ANR	4195914	Identifier	NULL		4195771	0					
ANR	4195915	ForStatement	for ( ; ; )		4195771	12					
ANR	4195916	CompoundStatement		64:2:1664:1722	4195771	0					
ANR	4195917	IfStatement	if ( r_cons_is_breaked ( ) )		4195771	0					
ANR	4195918	Condition	r_cons_is_breaked ( )	878:6:30171:30190	4195771	0	True				
ANR	4195919	CallExpression	r_cons_is_breaked ( )		4195771	0					
ANR	4195920	Callee	r_cons_is_breaked		4195771	0					
ANR	4195921	Identifier	r_cons_is_breaked		4195771	0					
ANR	4195922	ArgumentList			4195771	1					
ANR	4195923	CompoundStatement		27:28:579:579	4195771	1					
ANR	4195924	ExpressionStatement	core -> break_loop = true	879:3:30198:30221	4195771	0	True				
ANR	4195925	AssignmentExpression	core -> break_loop = true		4195771	0		=			
ANR	4195926	PtrMemberAccess	core -> break_loop		4195771	0					
ANR	4195927	Identifier	core		4195771	0					
ANR	4195928	Identifier	break_loop		4195771	1					
ANR	4195929	Identifier	true		4195771	1					
ANR	4195930	BreakStatement	break ;	880:3:30226:30231	4195771	1	True				
ANR	4195931	IfStatement	if ( debugMode )		4195771	1					
ANR	4195932	Condition	debugMode	882:6:30243:30251	4195771	0	True				
ANR	4195933	Identifier	debugMode		4195771	0					
ANR	4195934	CompoundStatement		31:17:640:640	4195771	1					
ANR	4195935	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4195771	0					
ANR	4195936	Condition	r_debug_is_dead ( core -> dbg )	883:7:30263:30289	4195771	0	True				
ANR	4195937	CallExpression	r_debug_is_dead ( core -> dbg )		4195771	0					
ANR	4195938	Callee	r_debug_is_dead		4195771	0					
ANR	4195939	Identifier	r_debug_is_dead		4195771	0					
ANR	4195940	ArgumentList	core -> dbg		4195771	1					
ANR	4195941	Argument	core -> dbg		4195771	0					
ANR	4195942	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4195943	Identifier	core		4195771	0					
ANR	4195944	Identifier	dbg		4195771	1					
ANR	4195945	CompoundStatement		32:36:678:678	4195771	1					
ANR	4195946	ExpressionStatement	core -> break_loop = true	884:4:30298:30321	4195771	0	True				
ANR	4195947	AssignmentExpression	core -> break_loop = true		4195771	0		=			
ANR	4195948	PtrMemberAccess	core -> break_loop		4195771	0					
ANR	4195949	Identifier	core		4195771	0					
ANR	4195950	Identifier	break_loop		4195771	1					
ANR	4195951	Identifier	true		4195771	1					
ANR	4195952	BreakStatement	break ;	885:4:30327:30332	4195771	1	True				
ANR	4195953	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	887:3:30342:30369	4195771	1	True				
ANR	4195954	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4195771	0					
ANR	4195955	Callee	r_debug_step		4195771	0					
ANR	4195956	Identifier	r_debug_step		4195771	0					
ANR	4195957	ArgumentList	core -> dbg		4195771	1					
ANR	4195958	Argument	core -> dbg		4195771	0					
ANR	4195959	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4195960	Identifier	core		4195771	0					
ANR	4195961	Identifier	dbg		4195771	1					
ANR	4195962	Argument	1		4195771	1					
ANR	4195963	PrimaryExpression	1		4195771	0					
ANR	4195964	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , core -> dbg -> reg -> name [ R_REG_NAME_PC ] )"	888:3:30374:30443	4195771	2	True				
ANR	4195965	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , core -> dbg -> reg -> name [ R_REG_NAME_PC ] )"		4195771	0		=			
ANR	4195966	Identifier	pc		4195771	0					
ANR	4195967	CallExpression	"r_debug_reg_get ( core -> dbg , core -> dbg -> reg -> name [ R_REG_NAME_PC ] )"		4195771	1					
ANR	4195968	Callee	r_debug_reg_get		4195771	0					
ANR	4195969	Identifier	r_debug_reg_get		4195771	0					
ANR	4195970	ArgumentList	core -> dbg		4195771	1					
ANR	4195971	Argument	core -> dbg		4195771	0					
ANR	4195972	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4195973	Identifier	core		4195771	0					
ANR	4195974	Identifier	dbg		4195771	1					
ANR	4195975	Argument	core -> dbg -> reg -> name [ R_REG_NAME_PC ]		4195771	1					
ANR	4195976	ArrayIndexing	core -> dbg -> reg -> name [ R_REG_NAME_PC ]		4195771	0					
ANR	4195977	PtrMemberAccess	core -> dbg -> reg -> name		4195771	0					
ANR	4195978	PtrMemberAccess	core -> dbg -> reg		4195771	0					
ANR	4195979	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4195980	Identifier	core		4195771	0					
ANR	4195981	Identifier	dbg		4195771	1					
ANR	4195982	Identifier	reg		4195771	1					
ANR	4195983	Identifier	name		4195771	1					
ANR	4195984	Identifier	R_REG_NAME_PC		4195771	1					
ANR	4195985	IfStatement	if ( ! core -> dbg -> iob . read_at )		4195771	3					
ANR	4195986	Condition	! core -> dbg -> iob . read_at	890:7:30488:30510	4195771	0	True				
ANR	4195987	UnaryOperationExpression	! core -> dbg -> iob . read_at		4195771	0					
ANR	4195988	UnaryOperator	!		4195771	0					
ANR	4195989	MemberAccess	core -> dbg -> iob . read_at		4195771	1					
ANR	4195990	PtrMemberAccess	core -> dbg -> iob		4195771	0					
ANR	4195991	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4195992	Identifier	core		4195771	0					
ANR	4195993	Identifier	dbg		4195771	1					
ANR	4195994	Identifier	iob		4195771	1					
ANR	4195995	Identifier	read_at		4195771	1					
ANR	4195996	CompoundStatement		39:32:899:899	4195771	1					
ANR	4195997	ExpressionStatement	"eprintf ( ""ERROR\\n"" )"	891:4:30519:30538	4195771	0	True				
ANR	4195998	CallExpression	"eprintf ( ""ERROR\\n"" )"		4195771	0					
ANR	4195999	Callee	eprintf		4195771	0					
ANR	4196000	Identifier	eprintf		4195771	0					
ANR	4196001	ArgumentList	"""ERROR\\n"""		4195771	1					
ANR	4196002	Argument	"""ERROR\\n"""		4195771	0					
ANR	4196003	PrimaryExpression	"""ERROR\\n"""		4195771	0					
ANR	4196004	ExpressionStatement	res = false	892:4:30544:30555	4195771	1	True				
ANR	4196005	AssignmentExpression	res = false		4195771	0		=			
ANR	4196006	Identifier	res		4195771	0					
ANR	4196007	Identifier	false		4195771	1					
ANR	4196008	GotoStatement	goto cleanup_after_push ;	893:4:30561:30584	4195771	2	True				
ANR	4196009	Identifier	cleanup_after_push		4195771	0					
ANR	4196010	IfStatement	"if ( ! core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) ) )"		4195771	4					
ANR	4196011	Condition	"! core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) )"	895:7:30598:30663	4195771	0	True				
ANR	4196012	UnaryOperationExpression	"! core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) )"		4195771	0					
ANR	4196013	UnaryOperator	!		4195771	0					
ANR	4196014	CallExpression	"core -> dbg -> iob . read_at ( core -> dbg -> iob . io , pc , buf , sizeof ( buf ) )"		4195771	1					
ANR	4196015	Callee	core -> dbg -> iob . read_at		4195771	0					
ANR	4196016	MemberAccess	core -> dbg -> iob . read_at		4195771	0					
ANR	4196017	PtrMemberAccess	core -> dbg -> iob		4195771	0					
ANR	4196018	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4196019	Identifier	core		4195771	0					
ANR	4196020	Identifier	dbg		4195771	1					
ANR	4196021	Identifier	iob		4195771	1					
ANR	4196022	Identifier	read_at		4195771	1					
ANR	4196023	ArgumentList	core -> dbg -> iob . io		4195771	1					
ANR	4196024	Argument	core -> dbg -> iob . io		4195771	0					
ANR	4196025	MemberAccess	core -> dbg -> iob . io		4195771	0					
ANR	4196026	PtrMemberAccess	core -> dbg -> iob		4195771	0					
ANR	4196027	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4196028	Identifier	core		4195771	0					
ANR	4196029	Identifier	dbg		4195771	1					
ANR	4196030	Identifier	iob		4195771	1					
ANR	4196031	Identifier	io		4195771	1					
ANR	4196032	Argument	pc		4195771	1					
ANR	4196033	Identifier	pc		4195771	0					
ANR	4196034	Argument	buf		4195771	2					
ANR	4196035	Identifier	buf		4195771	0					
ANR	4196036	Argument	sizeof ( buf )		4195771	3					
ANR	4196037	SizeofExpression	sizeof ( buf )		4195771	0					
ANR	4196038	Sizeof	sizeof		4195771	0					
ANR	4196039	SizeofOperand	buf		4195771	1					
ANR	4196040	CompoundStatement		44:75:1052:1052	4195771	1					
ANR	4196041	ExpressionStatement	"eprintf ( ""ERROR\\n"" )"	896:4:30672:30691	4195771	0	True				
ANR	4196042	CallExpression	"eprintf ( ""ERROR\\n"" )"		4195771	0					
ANR	4196043	Callee	eprintf		4195771	0					
ANR	4196044	Identifier	eprintf		4195771	0					
ANR	4196045	ArgumentList	"""ERROR\\n"""		4195771	1					
ANR	4196046	Argument	"""ERROR\\n"""		4195771	0					
ANR	4196047	PrimaryExpression	"""ERROR\\n"""		4195771	0					
ANR	4196048	ExpressionStatement	res = false	897:4:30697:30708	4195771	1	True				
ANR	4196049	AssignmentExpression	res = false		4195771	0		=			
ANR	4196050	Identifier	res		4195771	0					
ANR	4196051	Identifier	false		4195771	1					
ANR	4196052	GotoStatement	goto cleanup_after_push ;	898:4:30714:30737	4195771	2	True				
ANR	4196053	Identifier	cleanup_after_push		4195771	0					
ANR	4196054	ElseStatement	else		4195771	0					
ANR	4196055	CompoundStatement		49:9:1139:1139	4195771	0					
ANR	4196056	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"	901:3:30758:30810	4195771	0	True				
ANR	4196057	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL , false )"		4195771	0					
ANR	4196058	Callee	r_core_esil_step		4195771	0					
ANR	4196059	Identifier	r_core_esil_step		4195771	0					
ANR	4196060	ArgumentList	core		4195771	1					
ANR	4196061	Argument	core		4195771	0					
ANR	4196062	Identifier	core		4195771	0					
ANR	4196063	Argument	UT64_MAX		4195771	1					
ANR	4196064	Identifier	UT64_MAX		4195771	0					
ANR	4196065	Argument	NULL		4195771	2					
ANR	4196066	Identifier	NULL		4195771	0					
ANR	4196067	Argument	NULL		4195771	3					
ANR	4196068	Identifier	NULL		4195771	0					
ANR	4196069	Argument	false		4195771	4					
ANR	4196070	Identifier	false		4195771	0					
ANR	4196071	ExpressionStatement	"pc = r_reg_getv ( core -> anal -> reg , ""PC"" )"	902:3:30815:30854	4195771	1	True				
ANR	4196072	AssignmentExpression	"pc = r_reg_getv ( core -> anal -> reg , ""PC"" )"		4195771	0		=			
ANR	4196073	Identifier	pc		4195771	0					
ANR	4196074	CallExpression	"r_reg_getv ( core -> anal -> reg , ""PC"" )"		4195771	1					
ANR	4196075	Callee	r_reg_getv		4195771	0					
ANR	4196076	Identifier	r_reg_getv		4195771	0					
ANR	4196077	ArgumentList	core -> anal -> reg		4195771	1					
ANR	4196078	Argument	core -> anal -> reg		4195771	0					
ANR	4196079	PtrMemberAccess	core -> anal -> reg		4195771	0					
ANR	4196080	PtrMemberAccess	core -> anal		4195771	0					
ANR	4196081	Identifier	core		4195771	0					
ANR	4196082	Identifier	anal		4195771	1					
ANR	4196083	Identifier	reg		4195771	1					
ANR	4196084	Argument	"""PC"""		4195771	1					
ANR	4196085	PrimaryExpression	"""PC"""		4195771	0					
ANR	4196086	ExpressionStatement	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"	904:2:30862:30908	4195771	2	True				
ANR	4196087	CallExpression	"r_io_read_at ( core -> io , pc , buf , sizeof ( buf ) )"		4195771	0					
ANR	4196088	Callee	r_io_read_at		4195771	0					
ANR	4196089	Identifier	r_io_read_at		4195771	0					
ANR	4196090	ArgumentList	core -> io		4195771	1					
ANR	4196091	Argument	core -> io		4195771	0					
ANR	4196092	PtrMemberAccess	core -> io		4195771	0					
ANR	4196093	Identifier	core		4195771	0					
ANR	4196094	Identifier	io		4195771	1					
ANR	4196095	Argument	pc		4195771	1					
ANR	4196096	Identifier	pc		4195771	0					
ANR	4196097	Argument	buf		4195771	2					
ANR	4196098	Identifier	buf		4195771	0					
ANR	4196099	Argument	sizeof ( buf )		4195771	3					
ANR	4196100	SizeofExpression	sizeof ( buf )		4195771	0					
ANR	4196101	Sizeof	sizeof		4195771	0					
ANR	4196102	SizeofOperand	buf		4195771	1					
ANR	4196103	IfStatement	"if ( ! r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC ) )"		4195771	3					
ANR	4196104	Condition	"! r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	906:6:30917:30994	4195771	0	True				
ANR	4196105	UnaryOperationExpression	"! r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		4195771	0					
ANR	4196106	UnaryOperator	!		4195771	0					
ANR	4196107	CallExpression	"r_anal_op ( core -> dbg -> anal , & op , pc , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		4195771	1					
ANR	4196108	Callee	r_anal_op		4195771	0					
ANR	4196109	Identifier	r_anal_op		4195771	0					
ANR	4196110	ArgumentList	core -> dbg -> anal		4195771	1					
ANR	4196111	Argument	core -> dbg -> anal		4195771	0					
ANR	4196112	PtrMemberAccess	core -> dbg -> anal		4195771	0					
ANR	4196113	PtrMemberAccess	core -> dbg		4195771	0					
ANR	4196114	Identifier	core		4195771	0					
ANR	4196115	Identifier	dbg		4195771	1					
ANR	4196116	Identifier	anal		4195771	1					
ANR	4196117	Argument	& op		4195771	1					
ANR	4196118	UnaryOperationExpression	& op		4195771	0					
ANR	4196119	UnaryOperator	&		4195771	0					
ANR	4196120	Identifier	op		4195771	1					
ANR	4196121	Argument	pc		4195771	2					
ANR	4196122	Identifier	pc		4195771	0					
ANR	4196123	Argument	buf		4195771	3					
ANR	4196124	Identifier	buf		4195771	0					
ANR	4196125	Argument	sizeof ( buf )		4195771	4					
ANR	4196126	SizeofExpression	sizeof ( buf )		4195771	0					
ANR	4196127	Sizeof	sizeof		4195771	0					
ANR	4196128	SizeofOperand	buf		4195771	1					
ANR	4196129	Argument	R_ANAL_OP_MASK_BASIC		4195771	5					
ANR	4196130	Identifier	R_ANAL_OP_MASK_BASIC		4195771	0					
ANR	4196131	CompoundStatement		55:86:1383:1383	4195771	1					
ANR	4196132	ExpressionStatement	"eprintf ( ""Error: r_anal_op failed\\n"" )"	907:3:31002:31039	4195771	0	True				
ANR	4196133	CallExpression	"eprintf ( ""Error: r_anal_op failed\\n"" )"		4195771	0					
ANR	4196134	Callee	eprintf		4195771	0					
ANR	4196135	Identifier	eprintf		4195771	0					
ANR	4196136	ArgumentList	"""Error: r_anal_op failed\\n"""		4195771	1					
ANR	4196137	Argument	"""Error: r_anal_op failed\\n"""		4195771	0					
ANR	4196138	PrimaryExpression	"""Error: r_anal_op failed\\n"""		4195771	0					
ANR	4196139	ExpressionStatement	res = false	908:3:31044:31055	4195771	1	True				
ANR	4196140	AssignmentExpression	res = false		4195771	0		=			
ANR	4196141	Identifier	res		4195771	0					
ANR	4196142	Identifier	false		4195771	1					
ANR	4196143	GotoStatement	goto cleanup_after_push ;	909:3:31060:31083	4195771	2	True				
ANR	4196144	Identifier	cleanup_after_push		4195771	0					
ANR	4196145	IdentifierDeclStatement	const char * optype_str = r_anal_optype_to_string ( op . type ) ;	915:2:31278:31336	4195771	4	True				
ANR	4196146	IdentifierDecl	* optype_str = r_anal_optype_to_string ( op . type )		4195771	0					
ANR	4196147	IdentifierDeclType	const char *		4195771	0					
ANR	4196148	Identifier	optype_str		4195771	1					
ANR	4196149	AssignmentExpression	* optype_str = r_anal_optype_to_string ( op . type )		4195771	2		=			
ANR	4196150	Identifier	optype_str		4195771	0					
ANR	4196151	CallExpression	r_anal_optype_to_string ( op . type )		4195771	1					
ANR	4196152	Callee	r_anal_optype_to_string		4195771	0					
ANR	4196153	Identifier	r_anal_optype_to_string		4195771	0					
ANR	4196154	ArgumentList	op . type		4195771	1					
ANR	4196155	Argument	op . type		4195771	0					
ANR	4196156	MemberAccess	op . type		4195771	0					
ANR	4196157	Identifier	op		4195771	0					
ANR	4196158	Identifier	type		4195771	1					
ANR	4196159	Statement	r_list_foreach	916:2:31340:31353	4195771	5	True				
ANR	4196160	Statement	(	916:17:31355:31355	4195771	6	True				
ANR	4196161	Statement	optypes_list	916:18:31356:31367	4195771	7	True				
ANR	4196162	Statement	","	916:30:31368:31368	4195771	8	True				
ANR	4196163	Statement	iter	916:32:31370:31373	4195771	9	True				
ANR	4196164	Statement	","	916:36:31374:31374	4195771	10	True				
ANR	4196165	Statement	optype	916:38:31376:31381	4195771	11	True				
ANR	4196166	Statement	)	916:44:31382:31382	4195771	12	True				
ANR	4196167	CompoundStatement		65:46:1770:1770	4195771	13					
ANR	4196168	IfStatement	"if ( ! strcmp ( optype_str , optype ) )"		4195771	0					
ANR	4196169	Condition	"! strcmp ( optype_str , optype )"	917:7:31393:31420	4195771	0	True				
ANR	4196170	UnaryOperationExpression	"! strcmp ( optype_str , optype )"		4195771	0					
ANR	4196171	UnaryOperator	!		4195771	0					
ANR	4196172	CallExpression	"strcmp ( optype_str , optype )"		4195771	1					
ANR	4196173	Callee	strcmp		4195771	0					
ANR	4196174	Identifier	strcmp		4195771	0					
ANR	4196175	ArgumentList	optype_str		4195771	1					
ANR	4196176	Argument	optype_str		4195771	0					
ANR	4196177	Identifier	optype_str		4195771	0					
ANR	4196178	Argument	optype		4195771	1					
ANR	4196179	Identifier	optype		4195771	0					
ANR	4196180	CompoundStatement		66:37:1809:1809	4195771	1					
ANR	4196181	GotoStatement	goto cleanup_after_push ;	918:4:31429:31452	4195771	0	True				
ANR	4196182	Identifier	cleanup_after_push		4195771	0					
ANR	4196183	Label	cleanup_after_push :	923:0:31467:31485	4195771	13	True				
ANR	4196184	Identifier	cleanup_after_push		4195771	0					
ANR	4196185	ExpressionStatement	r_cons_break_pop ( )	924:1:31488:31507	4195771	14	True				
ANR	4196186	CallExpression	r_cons_break_pop ( )		4195771	0					
ANR	4196187	Callee	r_cons_break_pop		4195771	0					
ANR	4196188	Identifier	r_cons_break_pop		4195771	0					
ANR	4196189	ArgumentList			4195771	1					
ANR	4196190	Label	end :	925:0:31509:31512	4195771	15	True				
ANR	4196191	Identifier	end		4195771	0					
ANR	4196192	ExpressionStatement	free ( optypes )	926:1:31515:31529	4195771	16	True				
ANR	4196193	CallExpression	free ( optypes )		4195771	0					
ANR	4196194	Callee	free		4195771	0					
ANR	4196195	Identifier	free		4195771	0					
ANR	4196196	ArgumentList	optypes		4195771	1					
ANR	4196197	Argument	optypes		4195771	0					
ANR	4196198	Identifier	optypes		4195771	0					
ANR	4196199	ExpressionStatement	r_list_free ( optypes_list )	927:1:31532:31558	4195771	17	True				
ANR	4196200	CallExpression	r_list_free ( optypes_list )		4195771	0					
ANR	4196201	Callee	r_list_free		4195771	0					
ANR	4196202	Identifier	r_list_free		4195771	0					
ANR	4196203	ArgumentList	optypes_list		4195771	1					
ANR	4196204	Argument	optypes_list		4195771	0					
ANR	4196205	Identifier	optypes_list		4195771	0					
ANR	4196206	ReturnStatement	return res ;	928:1:31561:31571	4195771	18	True				
ANR	4196207	Identifier	res		4195771	0					
ANR	4196208	ReturnType	static int		4195771	1					
ANR	4196209	Identifier	step_until_optype		4195771	2					
ANR	4196210	ParameterList	"RCore * core , const char * _optypes"		4195771	3					
ANR	4196211	Parameter	RCore * core	852:29:29578:29588	4195771	0	True				
ANR	4196212	ParameterType	RCore *		4195771	0					
ANR	4196213	Identifier	core		4195771	1					
ANR	4196214	Parameter	const char * _optypes	852:42:29591:29610	4195771	1	True				
ANR	4196215	ParameterType	const char *		4195771	0					
ANR	4196216	Identifier	_optypes		4195771	1					
ANR	4196217	CFGEntryNode	ENTRY		4195771		True				
ANR	4196218	CFGExitNode	EXIT		4195771		True				
ANR	4196219	InfiniteForNode	true		4195771		True				
ANR	4196220	Symbol	core -> dbg -> iob . io		4195771						
ANR	4196221	Symbol	core -> anal -> reg		4195771						
ANR	4196222	Symbol	R_REG_NAME_PC		4195771						
ANR	4196223	Symbol	r_debug_reg_get		4195771						
ANR	4196224	Symbol	& op		4195771						
ANR	4196225	Symbol	core -> dbg -> iob		4195771						
ANR	4196226	Symbol	* * core -> dbg -> reg		4195771						
ANR	4196227	Symbol	* core -> dbg -> reg		4195771						
ANR	4196228	Symbol	r_anal_op		4195771						
ANR	4196229	Symbol	strcmp		4195771						
ANR	4196230	Symbol	res		4195771						
ANR	4196231	Symbol	NULL		4195771						
ANR	4196232	Symbol	core -> dbg -> reg -> name		4195771						
ANR	4196233	Symbol	iter		4195771						
ANR	4196234	Symbol	* optypes		4195771						
ANR	4196235	Symbol	core -> dbg -> iob . read_at		4195771						
ANR	4196236	Symbol	core		4195771						
ANR	4196237	Symbol	* * * core		4195771						
ANR	4196238	Symbol	optypes		4195771						
ANR	4196239	Symbol	r_config_get_i		4195771						
ANR	4196240	Symbol	* core -> dbg -> reg -> name		4195771						
ANR	4196241	Symbol	true		4195771						
ANR	4196242	Symbol	r_reg_getv		4195771						
ANR	4196243	Symbol	debugMode		4195771						
ANR	4196244	Symbol	* core -> dbg		4195771						
ANR	4196245	Symbol	* core		4195771						
ANR	4196246	Symbol	r_str_split_list		4195771						
ANR	4196247	Symbol	r_anal_optype_to_string		4195771						
ANR	4196248	Symbol	core -> anal		4195771						
ANR	4196249	Symbol	R_ANAL_OP_MASK_BASIC		4195771						
ANR	4196250	Symbol	optype		4195771						
ANR	4196251	Symbol	core -> break_loop		4195771						
ANR	4196252	Symbol	r_cons_is_breaked		4195771						
ANR	4196253	Symbol	* * * core -> dbg		4195771						
ANR	4196254	Symbol	core -> io		4195771						
ANR	4196255	Symbol	r_str_trim_head		4195771						
ANR	4196256	Symbol	* R_REG_NAME_PC		4195771						
ANR	4196257	Symbol	* * * * core		4195771						
ANR	4196258	Symbol	UT64_MAX		4195771						
ANR	4196259	Symbol	* * core		4195771						
ANR	4196260	Symbol	core -> config		4195771						
ANR	4196261	Symbol	op		4195771						
ANR	4196262	Symbol	_optypes		4195771						
ANR	4196263	Symbol	op . type		4195771						
ANR	4196264	Symbol	core -> dbg -> anal		4195771						
ANR	4196265	Symbol	false		4195771						
ANR	4196266	Symbol	optype_str		4195771						
ANR	4196267	Symbol	buf		4195771						
ANR	4196268	Symbol	r_debug_is_dead		4195771						
ANR	4196269	Symbol	pc		4195771						
ANR	4196270	Symbol	* core -> anal		4195771						
ANR	4196271	Symbol	core -> dbg -> reg		4195771						
ANR	4196272	Symbol	strdup		4195771						
ANR	4196273	Symbol	optypes_list		4195771						
ANR	4196274	Symbol	core -> dbg		4195771						
ANR	4196275	Symbol	* * core -> dbg		4195771						
ANR	4196276	Function	step_until_flag	931:0:31576:32388							
ANR	4196277	FunctionDef	"step_until_flag (RCore * core , const char * instr)"		4196276	0					
ANR	4196278	CompoundStatement		931:59:31635:32388	4196276	0					
ANR	4196279	IdentifierDeclStatement	const RList * list ;	932:1:31638:31655	4196276	0	True				
ANR	4196280	IdentifierDecl	* list		4196276	0					
ANR	4196281	IdentifierDeclType	const RList *		4196276	0					
ANR	4196282	Identifier	list		4196276	1					
ANR	4196283	IdentifierDeclStatement	RListIter * iter ;	933:1:31658:31673	4196276	1	True				
ANR	4196284	IdentifierDecl	* iter		4196276	0					
ANR	4196285	IdentifierDeclType	RListIter *		4196276	0					
ANR	4196286	Identifier	iter		4196276	1					
ANR	4196287	IdentifierDeclStatement	RFlagItem * f ;	934:1:31676:31688	4196276	2	True				
ANR	4196288	IdentifierDecl	* f		4196276	0					
ANR	4196289	IdentifierDeclType	RFlagItem *		4196276	0					
ANR	4196290	Identifier	f		4196276	1					
ANR	4196291	IdentifierDeclStatement	ut64 pc ;	935:1:31691:31698	4196276	3	True				
ANR	4196292	IdentifierDecl	pc		4196276	0					
ANR	4196293	IdentifierDeclType	ut64		4196276	0					
ANR	4196294	Identifier	pc		4196276	1					
ANR	4196295	ExpressionStatement	instr = r_str_trim_ro ( instr )	937:1:31702:31731	4196276	4	True				
ANR	4196296	AssignmentExpression	instr = r_str_trim_ro ( instr )		4196276	0		=			
ANR	4196297	Identifier	instr		4196276	0					
ANR	4196298	CallExpression	r_str_trim_ro ( instr )		4196276	1					
ANR	4196299	Callee	r_str_trim_ro		4196276	0					
ANR	4196300	Identifier	r_str_trim_ro		4196276	0					
ANR	4196301	ArgumentList	instr		4196276	1					
ANR	4196302	Argument	instr		4196276	0					
ANR	4196303	Identifier	instr		4196276	0					
ANR	4196304	IfStatement	if ( ! core || ! instr || ! core -> dbg )		4196276	5					
ANR	4196305	Condition	! core || ! instr || ! core -> dbg	938:5:31738:31766	4196276	0	True				
ANR	4196306	OrExpression	! core || ! instr || ! core -> dbg		4196276	0		||			
ANR	4196307	UnaryOperationExpression	! core		4196276	0					
ANR	4196308	UnaryOperator	!		4196276	0					
ANR	4196309	Identifier	core		4196276	1					
ANR	4196310	OrExpression	! instr || ! core -> dbg		4196276	1		||			
ANR	4196311	UnaryOperationExpression	! instr		4196276	0					
ANR	4196312	UnaryOperator	!		4196276	0					
ANR	4196313	Identifier	instr		4196276	1					
ANR	4196314	UnaryOperationExpression	! core -> dbg		4196276	1					
ANR	4196315	UnaryOperator	!		4196276	0					
ANR	4196316	PtrMemberAccess	core -> dbg		4196276	1					
ANR	4196317	Identifier	core		4196276	0					
ANR	4196318	Identifier	dbg		4196276	1					
ANR	4196319	CompoundStatement		8:36:133:133	4196276	1					
ANR	4196320	ExpressionStatement	"eprintf ( ""Wrong state\\n"" )"	939:2:31773:31798	4196276	0	True				
ANR	4196321	CallExpression	"eprintf ( ""Wrong state\\n"" )"		4196276	0					
ANR	4196322	Callee	eprintf		4196276	0					
ANR	4196323	Identifier	eprintf		4196276	0					
ANR	4196324	ArgumentList	"""Wrong state\\n"""		4196276	1					
ANR	4196325	Argument	"""Wrong state\\n"""		4196276	0					
ANR	4196326	PrimaryExpression	"""Wrong state\\n"""		4196276	0					
ANR	4196327	ReturnStatement	return false ;	940:2:31802:31814	4196276	1	True				
ANR	4196328	Identifier	false		4196276	0					
ANR	4196329	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	942:1:31820:31850	4196276	6	True				
ANR	4196330	CallExpression	"r_cons_break_push ( NULL , NULL )"		4196276	0					
ANR	4196331	Callee	r_cons_break_push		4196276	0					
ANR	4196332	Identifier	r_cons_break_push		4196276	0					
ANR	4196333	ArgumentList	NULL		4196276	1					
ANR	4196334	Argument	NULL		4196276	0					
ANR	4196335	Identifier	NULL		4196276	0					
ANR	4196336	Argument	NULL		4196276	1					
ANR	4196337	Identifier	NULL		4196276	0					
ANR	4196338	ForStatement	for ( ; ; )		4196276	7					
ANR	4196339	CompoundStatement		13:10:226:226	4196276	0					
ANR	4196340	IfStatement	if ( r_cons_is_breaked ( ) )		4196276	0					
ANR	4196341	Condition	r_cons_is_breaked ( )	944:6:31870:31889	4196276	0	True				
ANR	4196342	CallExpression	r_cons_is_breaked ( )		4196276	0					
ANR	4196343	Callee	r_cons_is_breaked		4196276	0					
ANR	4196344	Identifier	r_cons_is_breaked		4196276	0					
ANR	4196345	ArgumentList			4196276	1					
ANR	4196346	CompoundStatement		14:28:256:256	4196276	1					
ANR	4196347	BreakStatement	break ;	945:3:31897:31902	4196276	0	True				
ANR	4196348	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4196276	1					
ANR	4196349	Condition	r_debug_is_dead ( core -> dbg )	947:6:31914:31940	4196276	0	True				
ANR	4196350	CallExpression	r_debug_is_dead ( core -> dbg )		4196276	0					
ANR	4196351	Callee	r_debug_is_dead		4196276	0					
ANR	4196352	Identifier	r_debug_is_dead		4196276	0					
ANR	4196353	ArgumentList	core -> dbg		4196276	1					
ANR	4196354	Argument	core -> dbg		4196276	0					
ANR	4196355	PtrMemberAccess	core -> dbg		4196276	0					
ANR	4196356	Identifier	core		4196276	0					
ANR	4196357	Identifier	dbg		4196276	1					
ANR	4196358	CompoundStatement		17:35:307:307	4196276	1					
ANR	4196359	BreakStatement	break ;	948:3:31948:31953	4196276	0	True				
ANR	4196360	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	950:2:31961:31988	4196276	2	True				
ANR	4196361	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4196276	0					
ANR	4196362	Callee	r_debug_step		4196276	0					
ANR	4196363	Identifier	r_debug_step		4196276	0					
ANR	4196364	ArgumentList	core -> dbg		4196276	1					
ANR	4196365	Argument	core -> dbg		4196276	0					
ANR	4196366	PtrMemberAccess	core -> dbg		4196276	0					
ANR	4196367	Identifier	core		4196276	0					
ANR	4196368	Identifier	dbg		4196276	1					
ANR	4196369	Argument	1		4196276	1					
ANR	4196370	PrimaryExpression	1		4196276	0					
ANR	4196371	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	951:2:31992:32043	4196276	3	True				
ANR	4196372	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		4196276	0					
ANR	4196373	Callee	r_debug_reg_sync		4196276	0					
ANR	4196374	Identifier	r_debug_reg_sync		4196276	0					
ANR	4196375	ArgumentList	core -> dbg		4196276	1					
ANR	4196376	Argument	core -> dbg		4196276	0					
ANR	4196377	PtrMemberAccess	core -> dbg		4196276	0					
ANR	4196378	Identifier	core		4196276	0					
ANR	4196379	Identifier	dbg		4196276	1					
ANR	4196380	Argument	R_REG_TYPE_ALL		4196276	1					
ANR	4196381	Identifier	R_REG_TYPE_ALL		4196276	0					
ANR	4196382	Argument	false		4196276	2					
ANR	4196383	Identifier	false		4196276	0					
ANR	4196384	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	952:2:32047:32085	4196276	4	True				
ANR	4196385	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4196276	0		=			
ANR	4196386	Identifier	pc		4196276	0					
ANR	4196387	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4196276	1					
ANR	4196388	Callee	r_debug_reg_get		4196276	0					
ANR	4196389	Identifier	r_debug_reg_get		4196276	0					
ANR	4196390	ArgumentList	core -> dbg		4196276	1					
ANR	4196391	Argument	core -> dbg		4196276	0					
ANR	4196392	PtrMemberAccess	core -> dbg		4196276	0					
ANR	4196393	Identifier	core		4196276	0					
ANR	4196394	Identifier	dbg		4196276	1					
ANR	4196395	Argument	"""PC"""		4196276	1					
ANR	4196396	PrimaryExpression	"""PC"""		4196276	0					
ANR	4196397	ExpressionStatement	"list = r_flag_get_list ( core -> flags , pc )"	953:2:32089:32129	4196276	5	True				
ANR	4196398	AssignmentExpression	"list = r_flag_get_list ( core -> flags , pc )"		4196276	0		=			
ANR	4196399	Identifier	list		4196276	0					
ANR	4196400	CallExpression	"r_flag_get_list ( core -> flags , pc )"		4196276	1					
ANR	4196401	Callee	r_flag_get_list		4196276	0					
ANR	4196402	Identifier	r_flag_get_list		4196276	0					
ANR	4196403	ArgumentList	core -> flags		4196276	1					
ANR	4196404	Argument	core -> flags		4196276	0					
ANR	4196405	PtrMemberAccess	core -> flags		4196276	0					
ANR	4196406	Identifier	core		4196276	0					
ANR	4196407	Identifier	flags		4196276	1					
ANR	4196408	Argument	pc		4196276	1					
ANR	4196409	Identifier	pc		4196276	0					
ANR	4196410	Statement	r_list_foreach	954:2:32133:32146	4196276	6	True				
ANR	4196411	Statement	(	954:17:32148:32148	4196276	7	True				
ANR	4196412	Statement	list	954:18:32149:32152	4196276	8	True				
ANR	4196413	Statement	","	954:22:32153:32153	4196276	9	True				
ANR	4196414	Statement	iter	954:24:32155:32158	4196276	10	True				
ANR	4196415	Statement	","	954:28:32159:32159	4196276	11	True				
ANR	4196416	Statement	f	954:30:32161:32161	4196276	12	True				
ANR	4196417	Statement	)	954:31:32162:32162	4196276	13	True				
ANR	4196418	CompoundStatement		24:33:528:528	4196276	14					
ANR	4196419	IfStatement	"if ( ! instr || ! * instr || ( f -> realname && strstr ( f -> realname , instr ) ) )"		4196276	0					
ANR	4196420	Condition	"! instr || ! * instr || ( f -> realname && strstr ( f -> realname , instr ) )"	955:7:32173:32235	4196276	0	True				
ANR	4196421	OrExpression	"! instr || ! * instr || ( f -> realname && strstr ( f -> realname , instr ) )"		4196276	0		||			
ANR	4196422	UnaryOperationExpression	! instr		4196276	0					
ANR	4196423	UnaryOperator	!		4196276	0					
ANR	4196424	Identifier	instr		4196276	1					
ANR	4196425	OrExpression	"! * instr || ( f -> realname && strstr ( f -> realname , instr ) )"		4196276	1		||			
ANR	4196426	UnaryOperationExpression	! * instr		4196276	0					
ANR	4196427	UnaryOperator	!		4196276	0					
ANR	4196428	UnaryOperationExpression	* instr		4196276	1					
ANR	4196429	UnaryOperator	*		4196276	0					
ANR	4196430	Identifier	instr		4196276	1					
ANR	4196431	AndExpression	"f -> realname && strstr ( f -> realname , instr )"		4196276	1		&&			
ANR	4196432	PtrMemberAccess	f -> realname		4196276	0					
ANR	4196433	Identifier	f		4196276	0					
ANR	4196434	Identifier	realname		4196276	1					
ANR	4196435	CallExpression	"strstr ( f -> realname , instr )"		4196276	1					
ANR	4196436	Callee	strstr		4196276	0					
ANR	4196437	Identifier	strstr		4196276	0					
ANR	4196438	ArgumentList	f -> realname		4196276	1					
ANR	4196439	Argument	f -> realname		4196276	0					
ANR	4196440	PtrMemberAccess	f -> realname		4196276	0					
ANR	4196441	Identifier	f		4196276	0					
ANR	4196442	Identifier	realname		4196276	1					
ANR	4196443	Argument	instr		4196276	1					
ANR	4196444	Identifier	instr		4196276	0					
ANR	4196445	CompoundStatement		25:72:602:602	4196276	1					
ANR	4196446	Statement	r_cons_printf	956:4:32244:32256	4196276	0	True				
ANR	4196447	Statement	(	956:18:32258:32258	4196276	1	True				
ANR	4196448	Statement	"""[ 0x%08"""	956:19:32259:32267	4196276	2	True				
ANR	4196449	Statement	PFMT64x	956:28:32268:32274	4196276	3	True				
ANR	4196450	Statement	""" ] %s\\n"""	956:35:32275:32283	4196276	4	True				
ANR	4196451	Statement	","	956:44:32284:32284	4196276	5	True				
ANR	4196452	Statement	f	957:6:32292:32292	4196276	6	True				
ANR	4196453	Statement	->	957:7:32293:32294	4196276	7	True				
ANR	4196454	Statement	offset	957:9:32295:32300	4196276	8	True				
ANR	4196455	Statement	","	957:15:32301:32301	4196276	9	True				
ANR	4196456	Statement	f	957:17:32303:32303	4196276	10	True				
ANR	4196457	Statement	->	957:18:32304:32305	4196276	11	True				
ANR	4196458	Statement	realname	957:20:32306:32313	4196276	12	True				
ANR	4196459	Statement	)	957:28:32314:32314	4196276	13	True				
ANR	4196460	ExpressionStatement		957:29:32315:32315	4196276	14	True				
ANR	4196461	GotoStatement	goto beach ;	958:4:32321:32331	4196276	15	True				
ANR	4196462	Identifier	beach		4196276	0					
ANR	4196463	Label	beach :	962:0:32345:32350	4196276	8	True				
ANR	4196464	Identifier	beach		4196276	0					
ANR	4196465	ExpressionStatement	r_cons_break_pop ( )	963:1:32353:32372	4196276	9	True				
ANR	4196466	CallExpression	r_cons_break_pop ( )		4196276	0					
ANR	4196467	Callee	r_cons_break_pop		4196276	0					
ANR	4196468	Identifier	r_cons_break_pop		4196276	0					
ANR	4196469	ArgumentList			4196276	1					
ANR	4196470	ReturnStatement	return true ;	964:1:32375:32386	4196276	10	True				
ANR	4196471	Identifier	true		4196276	0					
ANR	4196472	ReturnType	static int		4196276	1					
ANR	4196473	Identifier	step_until_flag		4196276	2					
ANR	4196474	ParameterList	"RCore * core , const char * instr"		4196276	3					
ANR	4196475	Parameter	RCore * core	931:27:31603:31613	4196276	0	True				
ANR	4196476	ParameterType	RCore *		4196276	0					
ANR	4196477	Identifier	core		4196276	1					
ANR	4196478	Parameter	const char * instr	931:40:31616:31632	4196276	1	True				
ANR	4196479	ParameterType	const char *		4196276	0					
ANR	4196480	Identifier	instr		4196276	1					
ANR	4196481	CFGEntryNode	ENTRY		4196276		True				
ANR	4196482	CFGExitNode	EXIT		4196276		True				
ANR	4196483	InfiniteForNode	true		4196276		True				
ANR	4196484	Symbol	NULL		4196276						
ANR	4196485	Symbol	f -> realname		4196276						
ANR	4196486	Symbol	f		4196276						
ANR	4196487	Symbol	r_debug_reg_get		4196276						
ANR	4196488	Symbol	* core		4196276						
ANR	4196489	Symbol	false		4196276						
ANR	4196490	Symbol	iter		4196276						
ANR	4196491	Symbol	core -> flags		4196276						
ANR	4196492	Symbol	* instr		4196276						
ANR	4196493	Symbol	list		4196276						
ANR	4196494	Symbol	* f		4196276						
ANR	4196495	Symbol	core		4196276						
ANR	4196496	Symbol	r_cons_is_breaked		4196276						
ANR	4196497	Symbol	r_debug_is_dead		4196276						
ANR	4196498	Symbol	pc		4196276						
ANR	4196499	Symbol	strstr		4196276						
ANR	4196500	Symbol	R_REG_TYPE_ALL		4196276						
ANR	4196501	Symbol	instr		4196276						
ANR	4196502	Symbol	r_str_trim_ro		4196276						
ANR	4196503	Symbol	true		4196276						
ANR	4196504	Symbol	r_flag_get_list		4196276						
ANR	4196505	Symbol	core -> dbg		4196276						
ANR	4196506	Function	step_until_eof	968:0:32416:32835							
ANR	4196507	FunctionDef	step_until_eof (RCore * core)		4196506	0					
ANR	4196508	CompoundStatement		968:39:32455:32835	4196506	0					
ANR	4196509	IdentifierDeclStatement	int maxLoops = 200000 ;	969:1:32458:32479	4196506	0	True				
ANR	4196510	IdentifierDecl	maxLoops = 200000		4196506	0					
ANR	4196511	IdentifierDeclType	int		4196506	0					
ANR	4196512	Identifier	maxLoops		4196506	1					
ANR	4196513	AssignmentExpression	maxLoops = 200000		4196506	2		=			
ANR	4196514	Identifier	maxLoops		4196506	0					
ANR	4196515	PrimaryExpression	200000		4196506	1					
ANR	4196516	IdentifierDeclStatement	"ut64 off , now = r_debug_reg_get ( core -> dbg , ""SP"" ) ;"	970:1:32482:32531	4196506	1	True				
ANR	4196517	IdentifierDecl	off		4196506	0					
ANR	4196518	IdentifierDeclType	ut64		4196506	0					
ANR	4196519	Identifier	off		4196506	1					
ANR	4196520	IdentifierDecl	"now = r_debug_reg_get ( core -> dbg , ""SP"" )"		4196506	1					
ANR	4196521	IdentifierDeclType	ut64		4196506	0					
ANR	4196522	Identifier	now		4196506	1					
ANR	4196523	AssignmentExpression	"now = r_debug_reg_get ( core -> dbg , ""SP"" )"		4196506	2		=			
ANR	4196524	Identifier	now		4196506	0					
ANR	4196525	CallExpression	"r_debug_reg_get ( core -> dbg , ""SP"" )"		4196506	1					
ANR	4196526	Callee	r_debug_reg_get		4196506	0					
ANR	4196527	Identifier	r_debug_reg_get		4196506	0					
ANR	4196528	ArgumentList	core -> dbg		4196506	1					
ANR	4196529	Argument	core -> dbg		4196506	0					
ANR	4196530	PtrMemberAccess	core -> dbg		4196506	0					
ANR	4196531	Identifier	core		4196506	0					
ANR	4196532	Identifier	dbg		4196506	1					
ANR	4196533	Argument	"""SP"""		4196506	1					
ANR	4196534	PrimaryExpression	"""SP"""		4196506	0					
ANR	4196535	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	971:1:32534:32564	4196506	2	True				
ANR	4196536	CallExpression	"r_cons_break_push ( NULL , NULL )"		4196506	0					
ANR	4196537	Callee	r_cons_break_push		4196506	0					
ANR	4196538	Identifier	r_cons_break_push		4196506	0					
ANR	4196539	ArgumentList	NULL		4196506	1					
ANR	4196540	Argument	NULL		4196506	0					
ANR	4196541	Identifier	NULL		4196506	0					
ANR	4196542	Argument	NULL		4196506	1					
ANR	4196543	Identifier	NULL		4196506	0					
ANR	4196544	DoStatement	do		4196506	3					
ANR	4196545	CompoundStatement		5:4:114:114	4196506	0					
ANR	4196546	ExpressionStatement	"r_debug_step_over ( core -> dbg , 1 )"	974:2:32591:32623	4196506	0	True				
ANR	4196547	CallExpression	"r_debug_step_over ( core -> dbg , 1 )"		4196506	0					
ANR	4196548	Callee	r_debug_step_over		4196506	0					
ANR	4196549	Identifier	r_debug_step_over		4196506	0					
ANR	4196550	ArgumentList	core -> dbg		4196506	1					
ANR	4196551	Argument	core -> dbg		4196506	0					
ANR	4196552	PtrMemberAccess	core -> dbg		4196506	0					
ANR	4196553	Identifier	core		4196506	0					
ANR	4196554	Identifier	dbg		4196506	1					
ANR	4196555	Argument	1		4196506	1					
ANR	4196556	PrimaryExpression	1		4196506	0					
ANR	4196557	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , ""SP"" )"	975:2:32627:32666	4196506	1	True				
ANR	4196558	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""SP"" )"		4196506	0		=			
ANR	4196559	Identifier	off		4196506	0					
ANR	4196560	CallExpression	"r_debug_reg_get ( core -> dbg , ""SP"" )"		4196506	1					
ANR	4196561	Callee	r_debug_reg_get		4196506	0					
ANR	4196562	Identifier	r_debug_reg_get		4196506	0					
ANR	4196563	ArgumentList	core -> dbg		4196506	1					
ANR	4196564	Argument	core -> dbg		4196506	0					
ANR	4196565	PtrMemberAccess	core -> dbg		4196506	0					
ANR	4196566	Identifier	core		4196506	0					
ANR	4196567	Identifier	dbg		4196506	1					
ANR	4196568	Argument	"""SP"""		4196506	1					
ANR	4196569	PrimaryExpression	"""SP"""		4196506	0					
ANR	4196570	IfStatement	if ( -- maxLoops < 0 )		4196506	2					
ANR	4196571	Condition	-- maxLoops < 0	977:6:32701:32714	4196506	0	True				
ANR	4196572	RelationalExpression	-- maxLoops < 0		4196506	0		<			
ANR	4196573	UnaryExpression	-- maxLoops		4196506	0					
ANR	4196574	IncDec	--		4196506	0					
ANR	4196575	Identifier	maxLoops		4196506	1					
ANR	4196576	PrimaryExpression	0		4196506	1					
ANR	4196577	CompoundStatement		10:22:261:261	4196506	1					
ANR	4196578	ExpressionStatement	"eprintf ( ""Step loop limit exceeded\\n"" )"	978:3:32722:32760	4196506	0	True				
ANR	4196579	CallExpression	"eprintf ( ""Step loop limit exceeded\\n"" )"		4196506	0					
ANR	4196580	Callee	eprintf		4196506	0					
ANR	4196581	Identifier	eprintf		4196506	0					
ANR	4196582	ArgumentList	"""Step loop limit exceeded\\n"""		4196506	1					
ANR	4196583	Argument	"""Step loop limit exceeded\\n"""		4196506	0					
ANR	4196584	PrimaryExpression	"""Step loop limit exceeded\\n"""		4196506	0					
ANR	4196585	BreakStatement	break ;	979:3:32765:32770	4196506	1	True				
ANR	4196586	Condition	off <= now	981:10:32786:32795	4196506	1	True				
ANR	4196587	RelationalExpression	off <= now		4196506	0		<=			
ANR	4196588	Identifier	off		4196506	0					
ANR	4196589	Identifier	now		4196506	1					
ANR	4196590	ExpressionStatement	r_cons_break_pop ( )	982:1:32800:32819	4196506	4	True				
ANR	4196591	CallExpression	r_cons_break_pop ( )		4196506	0					
ANR	4196592	Callee	r_cons_break_pop		4196506	0					
ANR	4196593	Identifier	r_cons_break_pop		4196506	0					
ANR	4196594	ArgumentList			4196506	1					
ANR	4196595	ReturnStatement	return true ;	983:1:32822:32833	4196506	5	True				
ANR	4196596	Identifier	true		4196506	0					
ANR	4196597	ReturnType	static int		4196506	1					
ANR	4196598	Identifier	step_until_eof		4196506	2					
ANR	4196599	ParameterList	RCore * core		4196506	3					
ANR	4196600	Parameter	RCore * core	968:26:32442:32452	4196506	0	True				
ANR	4196601	ParameterType	RCore *		4196506	0					
ANR	4196602	Identifier	core		4196506	1					
ANR	4196603	CFGEntryNode	ENTRY		4196506		True				
ANR	4196604	CFGExitNode	EXIT		4196506		True				
ANR	4196605	Symbol	core		4196506						
ANR	4196606	Symbol	NULL		4196506						
ANR	4196607	Symbol	now		4196506						
ANR	4196608	Symbol	r_debug_reg_get		4196506						
ANR	4196609	Symbol	* core		4196506						
ANR	4196610	Symbol	true		4196506						
ANR	4196611	Symbol	maxLoops		4196506						
ANR	4196612	Symbol	off		4196506						
ANR	4196613	Symbol	core -> dbg		4196506						
ANR	4196614	Function	step_line	986:0:32838:33947							
ANR	4196615	FunctionDef	"step_line (RCore * core , int times)"		4196614	0					
ANR	4196616	CompoundStatement		986:45:32883:33947	4196614	0					
ANR	4196617	IdentifierDeclStatement	"char file [ 512 ] , file2 [ 512 ] ;"	987:1:32886:32912	4196614	0	True				
ANR	4196618	IdentifierDecl	file [ 512 ]		4196614	0					
ANR	4196619	IdentifierDeclType	char [ 512 ]		4196614	0					
ANR	4196620	Identifier	file		4196614	1					
ANR	4196621	PrimaryExpression	512		4196614	2					
ANR	4196622	IdentifierDecl	file2 [ 512 ]		4196614	1					
ANR	4196623	IdentifierDeclType	char [ 512 ]		4196614	0					
ANR	4196624	Identifier	file2		4196614	1					
ANR	4196625	PrimaryExpression	512		4196614	2					
ANR	4196626	IdentifierDeclStatement	"int find_meta , line = - 1 , line2 = - 1 ;"	988:1:32915:32951	4196614	1	True				
ANR	4196627	IdentifierDecl	find_meta		4196614	0					
ANR	4196628	IdentifierDeclType	int		4196614	0					
ANR	4196629	Identifier	find_meta		4196614	1					
ANR	4196630	IdentifierDecl	line = - 1		4196614	1					
ANR	4196631	IdentifierDeclType	int		4196614	0					
ANR	4196632	Identifier	line		4196614	1					
ANR	4196633	AssignmentExpression	line = - 1		4196614	2		=			
ANR	4196634	Identifier	line		4196614	0					
ANR	4196635	UnaryOperationExpression	- 1		4196614	1					
ANR	4196636	UnaryOperator	-		4196614	0					
ANR	4196637	PrimaryExpression	1		4196614	1					
ANR	4196638	IdentifierDecl	line2 = - 1		4196614	2					
ANR	4196639	IdentifierDeclType	int		4196614	0					
ANR	4196640	Identifier	line2		4196614	1					
ANR	4196641	AssignmentExpression	line2 = - 1		4196614	2		=			
ANR	4196642	Identifier	line2		4196614	0					
ANR	4196643	UnaryOperationExpression	- 1		4196614	1					
ANR	4196644	UnaryOperator	-		4196614	0					
ANR	4196645	PrimaryExpression	1		4196614	1					
ANR	4196646	IdentifierDeclStatement	char * tmp_ptr = NULL ;	989:1:32954:32974	4196614	2	True				
ANR	4196647	IdentifierDecl	* tmp_ptr = NULL		4196614	0					
ANR	4196648	IdentifierDeclType	char *		4196614	0					
ANR	4196649	Identifier	tmp_ptr		4196614	1					
ANR	4196650	AssignmentExpression	* tmp_ptr = NULL		4196614	2		=			
ANR	4196651	Identifier	NULL		4196614	0					
ANR	4196652	Identifier	NULL		4196614	1					
ANR	4196653	IdentifierDeclStatement	"ut64 off = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	990:1:32977:33021	4196614	3	True				
ANR	4196654	IdentifierDecl	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		4196614	0					
ANR	4196655	IdentifierDeclType	ut64		4196614	0					
ANR	4196656	Identifier	off		4196614	1					
ANR	4196657	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		4196614	2		=			
ANR	4196658	Identifier	off		4196614	0					
ANR	4196659	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4196614	1					
ANR	4196660	Callee	r_debug_reg_get		4196614	0					
ANR	4196661	Identifier	r_debug_reg_get		4196614	0					
ANR	4196662	ArgumentList	core -> dbg		4196614	1					
ANR	4196663	Argument	core -> dbg		4196614	0					
ANR	4196664	PtrMemberAccess	core -> dbg		4196614	0					
ANR	4196665	Identifier	core		4196614	0					
ANR	4196666	Identifier	dbg		4196614	1					
ANR	4196667	Argument	"""PC"""		4196614	1					
ANR	4196668	PrimaryExpression	"""PC"""		4196614	0					
ANR	4196669	Statement	if	991:1:33024:33025	4196614	4	True				
ANR	4196670	Statement	(	991:4:33027:33027	4196614	5	True				
ANR	4196671	Statement	off	991:5:33028:33030	4196614	6	True				
ANR	4196672	Statement	==	991:9:33032:33033	4196614	7	True				
ANR	4196673	Statement	0L	991:12:33035:33036	4196614	8	True				
ANR	4196674	Statement	L	991:14:33037:33037	4196614	9	True				
ANR	4196675	Statement	)	991:15:33038:33038	4196614	10	True				
ANR	4196676	CompoundStatement		6:17:156:156	4196614	11					
ANR	4196677	ExpressionStatement	"eprintf ( ""Cannot 'drn PC'\\n"" )"	992:2:33044:33073	4196614	0	True				
ANR	4196678	CallExpression	"eprintf ( ""Cannot 'drn PC'\\n"" )"		4196614	0					
ANR	4196679	Callee	eprintf		4196614	0					
ANR	4196680	Identifier	eprintf		4196614	0					
ANR	4196681	ArgumentList	"""Cannot 'drn PC'\\n"""		4196614	1					
ANR	4196682	Argument	"""Cannot 'drn PC'\\n"""		4196614	0					
ANR	4196683	PrimaryExpression	"""Cannot 'drn PC'\\n"""		4196614	0					
ANR	4196684	ReturnStatement	return false ;	993:2:33077:33089	4196614	1	True				
ANR	4196685	Identifier	false		4196614	0					
ANR	4196686	ExpressionStatement	file [ 0 ] = 0	995:1:33095:33106	4196614	12	True				
ANR	4196687	AssignmentExpression	file [ 0 ] = 0		4196614	0		=			
ANR	4196688	ArrayIndexing	file [ 0 ]		4196614	0					
ANR	4196689	Identifier	file		4196614	0					
ANR	4196690	PrimaryExpression	0		4196614	1					
ANR	4196691	PrimaryExpression	0		4196614	1					
ANR	4196692	ExpressionStatement	file2 [ 0 ] = 0	996:1:33109:33121	4196614	13	True				
ANR	4196693	AssignmentExpression	file2 [ 0 ] = 0		4196614	0		=			
ANR	4196694	ArrayIndexing	file2 [ 0 ]		4196614	0					
ANR	4196695	Identifier	file2		4196614	0					
ANR	4196696	PrimaryExpression	0		4196614	1					
ANR	4196697	PrimaryExpression	0		4196614	1					
ANR	4196698	IfStatement	"if ( r_bin_addr2line ( core -> bin , off , file , sizeof ( file ) , & line ) )"		4196614	14					
ANR	4196699	Condition	"r_bin_addr2line ( core -> bin , off , file , sizeof ( file ) , & line )"	997:5:33128:33187	4196614	0	True				
ANR	4196700	CallExpression	"r_bin_addr2line ( core -> bin , off , file , sizeof ( file ) , & line )"		4196614	0					
ANR	4196701	Callee	r_bin_addr2line		4196614	0					
ANR	4196702	Identifier	r_bin_addr2line		4196614	0					
ANR	4196703	ArgumentList	core -> bin		4196614	1					
ANR	4196704	Argument	core -> bin		4196614	0					
ANR	4196705	PtrMemberAccess	core -> bin		4196614	0					
ANR	4196706	Identifier	core		4196614	0					
ANR	4196707	Identifier	bin		4196614	1					
ANR	4196708	Argument	off		4196614	1					
ANR	4196709	Identifier	off		4196614	0					
ANR	4196710	Argument	file		4196614	2					
ANR	4196711	Identifier	file		4196614	0					
ANR	4196712	Argument	sizeof ( file )		4196614	3					
ANR	4196713	SizeofExpression	sizeof ( file )		4196614	0					
ANR	4196714	Sizeof	sizeof		4196614	0					
ANR	4196715	SizeofOperand	file		4196614	1					
ANR	4196716	Argument	& line		4196614	4					
ANR	4196717	UnaryOperationExpression	& line		4196614	0					
ANR	4196718	UnaryOperator	&		4196614	0					
ANR	4196719	Identifier	line		4196614	1					
ANR	4196720	CompoundStatement		13:2:310:355	4196614	1					
ANR	4196721	IdentifierDeclStatement	"char * ptr = r_file_slurp_line ( file , line , 0 ) ;"	998:2:33194:33239	4196614	0	True				
ANR	4196722	IdentifierDecl	"* ptr = r_file_slurp_line ( file , line , 0 )"		4196614	0					
ANR	4196723	IdentifierDeclType	char *		4196614	0					
ANR	4196724	Identifier	ptr		4196614	1					
ANR	4196725	AssignmentExpression	"* ptr = r_file_slurp_line ( file , line , 0 )"		4196614	2		=			
ANR	4196726	Identifier	ptr		4196614	0					
ANR	4196727	CallExpression	"r_file_slurp_line ( file , line , 0 )"		4196614	1					
ANR	4196728	Callee	r_file_slurp_line		4196614	0					
ANR	4196729	Identifier	r_file_slurp_line		4196614	0					
ANR	4196730	ArgumentList	file		4196614	1					
ANR	4196731	Argument	file		4196614	0					
ANR	4196732	Identifier	file		4196614	0					
ANR	4196733	Argument	line		4196614	1					
ANR	4196734	Identifier	line		4196614	0					
ANR	4196735	Argument	0		4196614	2					
ANR	4196736	PrimaryExpression	0		4196614	0					
ANR	4196737	Statement	eprintf	999:2:33243:33249	4196614	1	True				
ANR	4196738	Statement	(	999:10:33251:33251	4196614	2	True				
ANR	4196739	Statement	"""--> 0x%08"""	999:11:33252:33262	4196614	3	True				
ANR	4196740	Statement	PFMT64x	999:22:33263:33269	4196614	4	True				
ANR	4196741	Statement	""" %s : %d\\n"""	999:29:33270:33281	4196614	5	True				
ANR	4196742	Statement	","	999:41:33282:33282	4196614	6	True				
ANR	4196743	Statement	off	999:43:33284:33286	4196614	7	True				
ANR	4196744	Statement	","	999:46:33287:33287	4196614	8	True				
ANR	4196745	Statement	file	999:48:33289:33292	4196614	9	True				
ANR	4196746	Statement	","	999:52:33293:33293	4196614	10	True				
ANR	4196747	Statement	line	999:54:33295:33298	4196614	11	True				
ANR	4196748	Statement	)	999:58:33299:33299	4196614	12	True				
ANR	4196749	ExpressionStatement		999:59:33300:33300	4196614	13	True				
ANR	4196750	ExpressionStatement	"eprintf ( ""--> %s\\n"" , ptr )"	1000:2:33304:33329	4196614	14	True				
ANR	4196751	CallExpression	"eprintf ( ""--> %s\\n"" , ptr )"		4196614	0					
ANR	4196752	Callee	eprintf		4196614	0					
ANR	4196753	Identifier	eprintf		4196614	0					
ANR	4196754	ArgumentList	"""--> %s\\n"""		4196614	1					
ANR	4196755	Argument	"""--> %s\\n"""		4196614	0					
ANR	4196756	PrimaryExpression	"""--> %s\\n"""		4196614	0					
ANR	4196757	Argument	ptr		4196614	1					
ANR	4196758	Identifier	ptr		4196614	0					
ANR	4196759	ExpressionStatement	find_meta = false	1001:2:33333:33350	4196614	15	True				
ANR	4196760	AssignmentExpression	find_meta = false		4196614	0		=			
ANR	4196761	Identifier	find_meta		4196614	0					
ANR	4196762	Identifier	false		4196614	1					
ANR	4196763	ExpressionStatement	free ( ptr )	1002:2:33354:33364	4196614	16	True				
ANR	4196764	CallExpression	free ( ptr )		4196614	0					
ANR	4196765	Callee	free		4196614	0					
ANR	4196766	Identifier	free		4196614	0					
ANR	4196767	ArgumentList	ptr		4196614	1					
ANR	4196768	Argument	ptr		4196614	0					
ANR	4196769	Identifier	ptr		4196614	0					
ANR	4196770	ElseStatement	else		4196614	0					
ANR	4196771	CompoundStatement		18:8:490:490	4196614	0					
ANR	4196772	ExpressionStatement	"eprintf ( ""--> Stepping until dwarf line\\n"" )"	1004:2:33378:33421	4196614	0	True				
ANR	4196773	CallExpression	"eprintf ( ""--> Stepping until dwarf line\\n"" )"		4196614	0					
ANR	4196774	Callee	eprintf		4196614	0					
ANR	4196775	Identifier	eprintf		4196614	0					
ANR	4196776	ArgumentList	"""--> Stepping until dwarf line\\n"""		4196614	1					
ANR	4196777	Argument	"""--> Stepping until dwarf line\\n"""		4196614	0					
ANR	4196778	PrimaryExpression	"""--> Stepping until dwarf line\\n"""		4196614	0					
ANR	4196779	ExpressionStatement	find_meta = true	1005:2:33425:33441	4196614	1	True				
ANR	4196780	AssignmentExpression	find_meta = true		4196614	0		=			
ANR	4196781	Identifier	find_meta		4196614	0					
ANR	4196782	Identifier	true		4196614	1					
ANR	4196783	DoStatement	do		4196614	15					
ANR	4196784	CompoundStatement		22:4:566:566	4196614	0					
ANR	4196785	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	1008:2:33454:33481	4196614	0	True				
ANR	4196786	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4196614	0					
ANR	4196787	Callee	r_debug_step		4196614	0					
ANR	4196788	Identifier	r_debug_step		4196614	0					
ANR	4196789	ArgumentList	core -> dbg		4196614	1					
ANR	4196790	Argument	core -> dbg		4196614	0					
ANR	4196791	PtrMemberAccess	core -> dbg		4196614	0					
ANR	4196792	Identifier	core		4196614	0					
ANR	4196793	Identifier	dbg		4196614	1					
ANR	4196794	Argument	1		4196614	1					
ANR	4196795	PrimaryExpression	1		4196614	0					
ANR	4196796	ExpressionStatement	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"	1009:2:33485:33524	4196614	1	True				
ANR	4196797	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , ""PC"" )"		4196614	0		=			
ANR	4196798	Identifier	off		4196614	0					
ANR	4196799	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4196614	1					
ANR	4196800	Callee	r_debug_reg_get		4196614	0					
ANR	4196801	Identifier	r_debug_reg_get		4196614	0					
ANR	4196802	ArgumentList	core -> dbg		4196614	1					
ANR	4196803	Argument	core -> dbg		4196614	0					
ANR	4196804	PtrMemberAccess	core -> dbg		4196614	0					
ANR	4196805	Identifier	core		4196614	0					
ANR	4196806	Identifier	dbg		4196614	1					
ANR	4196807	Argument	"""PC"""		4196614	1					
ANR	4196808	PrimaryExpression	"""PC"""		4196614	0					
ANR	4196809	IfStatement	"if ( ! r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 ) )"		4196614	2					
ANR	4196810	Condition	"! r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 )"	1010:6:33532:33595	4196614	0	True				
ANR	4196811	UnaryOperationExpression	"! r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 )"		4196614	0					
ANR	4196812	UnaryOperator	!		4196614	0					
ANR	4196813	CallExpression	"r_bin_addr2line ( core -> bin , off , file2 , sizeof ( file2 ) , & line2 )"		4196614	1					
ANR	4196814	Callee	r_bin_addr2line		4196614	0					
ANR	4196815	Identifier	r_bin_addr2line		4196614	0					
ANR	4196816	ArgumentList	core -> bin		4196614	1					
ANR	4196817	Argument	core -> bin		4196614	0					
ANR	4196818	PtrMemberAccess	core -> bin		4196614	0					
ANR	4196819	Identifier	core		4196614	0					
ANR	4196820	Identifier	bin		4196614	1					
ANR	4196821	Argument	off		4196614	1					
ANR	4196822	Identifier	off		4196614	0					
ANR	4196823	Argument	file2		4196614	2					
ANR	4196824	Identifier	file2		4196614	0					
ANR	4196825	Argument	sizeof ( file2 )		4196614	3					
ANR	4196826	SizeofExpression	sizeof ( file2 )		4196614	0					
ANR	4196827	Sizeof	sizeof		4196614	0					
ANR	4196828	SizeofOperand	file2		4196614	1					
ANR	4196829	Argument	& line2		4196614	4					
ANR	4196830	UnaryOperationExpression	& line2		4196614	0					
ANR	4196831	UnaryOperator	&		4196614	0					
ANR	4196832	Identifier	line2		4196614	1					
ANR	4196833	CompoundStatement		25:72:714:714	4196614	1					
ANR	4196834	IfStatement	if ( find_meta )		4196614	0					
ANR	4196835	Condition	find_meta	1011:7:33607:33615	4196614	0	True				
ANR	4196836	Identifier	find_meta		4196614	0					
ANR	4196837	ContinueStatement	continue ;	1012:4:33622:33630	4196614	1	True				
ANR	4196838	Statement	eprintf	1013:3:33635:33641	4196614	1	True				
ANR	4196839	Statement	(	1013:11:33643:33643	4196614	2	True				
ANR	4196840	Statement	"""Cannot retrieve dwarf info at 0x%08"""	1013:12:33644:33680	4196614	3	True				
ANR	4196841	Statement	PFMT64x	1013:49:33681:33687	4196614	4	True				
ANR	4196842	Statement	"""\\n"""	1013:56:33688:33691	4196614	5	True				
ANR	4196843	Statement	","	1013:60:33692:33692	4196614	6	True				
ANR	4196844	Statement	off	1013:62:33694:33696	4196614	7	True				
ANR	4196845	Statement	)	1013:65:33697:33697	4196614	8	True				
ANR	4196846	ExpressionStatement		1013:66:33698:33698	4196614	9	True				
ANR	4196847	ReturnStatement	return false ;	1014:3:33703:33715	4196614	10	True				
ANR	4196848	Identifier	false		4196614	0					
ANR	4196849	Condition	"! strcmp ( file , file2 ) && line == line2"	1016:10:33731:33768	4196614	1	True				
ANR	4196850	AndExpression	"! strcmp ( file , file2 ) && line == line2"		4196614	0		&&			
ANR	4196851	UnaryOperationExpression	"! strcmp ( file , file2 )"		4196614	0					
ANR	4196852	UnaryOperator	!		4196614	0					
ANR	4196853	CallExpression	"strcmp ( file , file2 )"		4196614	1					
ANR	4196854	Callee	strcmp		4196614	0					
ANR	4196855	Identifier	strcmp		4196614	0					
ANR	4196856	ArgumentList	file		4196614	1					
ANR	4196857	Argument	file		4196614	0					
ANR	4196858	Identifier	file		4196614	0					
ANR	4196859	Argument	file2		4196614	1					
ANR	4196860	Identifier	file2		4196614	0					
ANR	4196861	EqualityExpression	line == line2		4196614	1		==			
ANR	4196862	Identifier	line		4196614	0					
ANR	4196863	Identifier	line2		4196614	1					
ANR	4196864	Statement	eprintf	1018:1:33774:33780	4196614	16	True				
ANR	4196865	Statement	(	1018:9:33782:33782	4196614	17	True				
ANR	4196866	Statement	"""--> 0x%08"""	1018:10:33783:33793	4196614	18	True				
ANR	4196867	Statement	PFMT64x	1018:21:33794:33800	4196614	19	True				
ANR	4196868	Statement	""" %s : %d\\n"""	1018:28:33801:33812	4196614	20	True				
ANR	4196869	Statement	","	1018:40:33813:33813	4196614	21	True				
ANR	4196870	Statement	off	1018:42:33815:33817	4196614	22	True				
ANR	4196871	Statement	","	1018:45:33818:33818	4196614	23	True				
ANR	4196872	Statement	file2	1018:47:33820:33824	4196614	24	True				
ANR	4196873	Statement	","	1018:52:33825:33825	4196614	25	True				
ANR	4196874	Statement	line2	1018:54:33827:33831	4196614	26	True				
ANR	4196875	Statement	)	1018:59:33832:33832	4196614	27	True				
ANR	4196876	ExpressionStatement		1018:60:33833:33833	4196614	28	True				
ANR	4196877	ExpressionStatement	"tmp_ptr = r_file_slurp_line ( file2 , line2 , 0 )"	1019:1:33836:33881	4196614	29	True				
ANR	4196878	AssignmentExpression	"tmp_ptr = r_file_slurp_line ( file2 , line2 , 0 )"		4196614	0		=			
ANR	4196879	Identifier	tmp_ptr		4196614	0					
ANR	4196880	CallExpression	"r_file_slurp_line ( file2 , line2 , 0 )"		4196614	1					
ANR	4196881	Callee	r_file_slurp_line		4196614	0					
ANR	4196882	Identifier	r_file_slurp_line		4196614	0					
ANR	4196883	ArgumentList	file2		4196614	1					
ANR	4196884	Argument	file2		4196614	0					
ANR	4196885	Identifier	file2		4196614	0					
ANR	4196886	Argument	line2		4196614	1					
ANR	4196887	Identifier	line2		4196614	0					
ANR	4196888	Argument	0		4196614	2					
ANR	4196889	PrimaryExpression	0		4196614	0					
ANR	4196890	ExpressionStatement	"eprintf ( ""--> %s\\n"" , tmp_ptr )"	1020:1:33884:33913	4196614	30	True				
ANR	4196891	CallExpression	"eprintf ( ""--> %s\\n"" , tmp_ptr )"		4196614	0					
ANR	4196892	Callee	eprintf		4196614	0					
ANR	4196893	Identifier	eprintf		4196614	0					
ANR	4196894	ArgumentList	"""--> %s\\n"""		4196614	1					
ANR	4196895	Argument	"""--> %s\\n"""		4196614	0					
ANR	4196896	PrimaryExpression	"""--> %s\\n"""		4196614	0					
ANR	4196897	Argument	tmp_ptr		4196614	1					
ANR	4196898	Identifier	tmp_ptr		4196614	0					
ANR	4196899	ExpressionStatement	free ( tmp_ptr )	1021:1:33916:33930	4196614	31	True				
ANR	4196900	CallExpression	free ( tmp_ptr )		4196614	0					
ANR	4196901	Callee	free		4196614	0					
ANR	4196902	Identifier	free		4196614	0					
ANR	4196903	ArgumentList	tmp_ptr		4196614	1					
ANR	4196904	Argument	tmp_ptr		4196614	0					
ANR	4196905	Identifier	tmp_ptr		4196614	0					
ANR	4196906	ReturnStatement	return true ;	1023:1:33934:33945	4196614	32	True				
ANR	4196907	Identifier	true		4196614	0					
ANR	4196908	ReturnType	static int		4196614	1					
ANR	4196909	Identifier	step_line		4196614	2					
ANR	4196910	ParameterList	"RCore * core , int times"		4196614	3					
ANR	4196911	Parameter	RCore * core	986:21:32859:32869	4196614	0	True				
ANR	4196912	ParameterType	RCore *		4196614	0					
ANR	4196913	Identifier	core		4196614	1					
ANR	4196914	Parameter	int times	986:34:32872:32880	4196614	1	True				
ANR	4196915	ParameterType	int		4196614	0					
ANR	4196916	Identifier	times		4196614	1					
ANR	4196917	CFGEntryNode	ENTRY		4196614		True				
ANR	4196918	CFGExitNode	EXIT		4196614		True				
ANR	4196919	Symbol	strcmp		4196614						
ANR	4196920	Symbol	NULL		4196614						
ANR	4196921	Symbol	& line		4196614						
ANR	4196922	Symbol	line		4196614						
ANR	4196923	Symbol	r_debug_reg_get		4196614						
ANR	4196924	Symbol	* core		4196614						
ANR	4196925	Symbol	false		4196614						
ANR	4196926	Symbol	tmp_ptr		4196614						
ANR	4196927	Symbol	* file		4196614						
ANR	4196928	Symbol	r_bin_addr2line		4196614						
ANR	4196929	Symbol	off		4196614						
ANR	4196930	Symbol	* file2		4196614						
ANR	4196931	Symbol	ptr		4196614						
ANR	4196932	Symbol	& line2		4196614						
ANR	4196933	Symbol	core		4196614						
ANR	4196934	Symbol	r_file_slurp_line		4196614						
ANR	4196935	Symbol	times		4196614						
ANR	4196936	Symbol	file		4196614						
ANR	4196937	Symbol	find_meta		4196614						
ANR	4196938	Symbol	file2		4196614						
ANR	4196939	Symbol	true		4196614						
ANR	4196940	Symbol	line2		4196614						
ANR	4196941	Symbol	core -> bin		4196614						
ANR	4196942	Symbol	core -> dbg		4196614						
ANR	4196943	Function	cmd_debug_pid	1026:0:33950:37656							
ANR	4196944	FunctionDef	"cmd_debug_pid (RCore * core , const char * input)"		4196943	0					
ANR	4196945	CompoundStatement		1026:58:34008:37656	4196943	0					
ANR	4196946	IdentifierDeclStatement	"int pid , sig ;"	1027:1:34011:34023	4196943	0	True				
ANR	4196947	IdentifierDecl	pid		4196943	0					
ANR	4196948	IdentifierDeclType	int		4196943	0					
ANR	4196949	Identifier	pid		4196943	1					
ANR	4196950	IdentifierDecl	sig		4196943	1					
ANR	4196951	IdentifierDeclType	int		4196943	0					
ANR	4196952	Identifier	sig		4196943	1					
ANR	4196953	IdentifierDeclStatement	const char * ptr ;	1028:1:34026:34041	4196943	1	True				
ANR	4196954	IdentifierDecl	* ptr		4196943	0					
ANR	4196955	IdentifierDeclType	const char *		4196943	0					
ANR	4196956	Identifier	ptr		4196943	1					
ANR	4196957	SwitchStatement	switch ( input [ 1 ] )		4196943	2					
ANR	4196958	Condition	input [ 1 ]	1029:9:34052:34059	4196943	0	True				
ANR	4196959	ArrayIndexing	input [ 1 ]		4196943	0					
ANR	4196960	Identifier	input		4196943	0					
ANR	4196961	PrimaryExpression	1		4196943	1					
ANR	4196962	CompoundStatement		4:19:53:53	4196943	1					
ANR	4196963	Label	case '\\0' :	1030:1:34065:34074	4196943	0	True				
ANR	4196964	ExpressionStatement	"eprintf ( ""Selected: %d %d\\n"" , core -> dbg -> pid , core -> dbg -> tid )"	1031:2:34086:34147	4196943	1	True				
ANR	4196965	CallExpression	"eprintf ( ""Selected: %d %d\\n"" , core -> dbg -> pid , core -> dbg -> tid )"		4196943	0					
ANR	4196966	Callee	eprintf		4196943	0					
ANR	4196967	Identifier	eprintf		4196943	0					
ANR	4196968	ArgumentList	"""Selected: %d %d\\n"""		4196943	1					
ANR	4196969	Argument	"""Selected: %d %d\\n"""		4196943	0					
ANR	4196970	PrimaryExpression	"""Selected: %d %d\\n"""		4196943	0					
ANR	4196971	Argument	core -> dbg -> pid		4196943	1					
ANR	4196972	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4196973	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4196974	Identifier	core		4196943	0					
ANR	4196975	Identifier	dbg		4196943	1					
ANR	4196976	Identifier	pid		4196943	1					
ANR	4196977	Argument	core -> dbg -> tid		4196943	2					
ANR	4196978	PtrMemberAccess	core -> dbg -> tid		4196943	0					
ANR	4196979	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4196980	Identifier	core		4196943	0					
ANR	4196981	Identifier	dbg		4196943	1					
ANR	4196982	Identifier	tid		4196943	1					
ANR	4196983	ExpressionStatement	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 0 )"	1032:2:34151:34198	4196943	2	True				
ANR	4196984	CallExpression	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 0 )"		4196943	0					
ANR	4196985	Callee	r_debug_pid_list		4196943	0					
ANR	4196986	Identifier	r_debug_pid_list		4196943	0					
ANR	4196987	ArgumentList	core -> dbg		4196943	1					
ANR	4196988	Argument	core -> dbg		4196943	0					
ANR	4196989	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4196990	Identifier	core		4196943	0					
ANR	4196991	Identifier	dbg		4196943	1					
ANR	4196992	Argument	core -> dbg -> pid		4196943	1					
ANR	4196993	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4196994	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4196995	Identifier	core		4196943	0					
ANR	4196996	Identifier	dbg		4196943	1					
ANR	4196997	Identifier	pid		4196943	1					
ANR	4196998	Argument	0		4196943	2					
ANR	4196999	PrimaryExpression	0		4196943	0					
ANR	4197000	BreakStatement	break ;	1033:2:34202:34207	4196943	3	True				
ANR	4197001	Label	case '-' :	1034:1:34210:34218	4196943	4	True				
ANR	4197002	IfStatement	if ( input [ 2 ] == ' ' )		4196943	5					
ANR	4197003	Condition	input [ 2 ] == ' '	1035:6:34235:34248	4196943	0	True				
ANR	4197004	EqualityExpression	input [ 2 ] == ' '		4196943	0		==			
ANR	4197005	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197006	Identifier	input		4196943	0					
ANR	4197007	PrimaryExpression	2		4196943	1					
ANR	4197008	PrimaryExpression	' '		4196943	1					
ANR	4197009	CompoundStatement		10:22:242:242	4196943	1					
ANR	4197010	ExpressionStatement	"r_debug_detach ( core -> dbg , r_num_math ( core -> num , input + 2 ) )"	1036:3:34256:34317	4196943	0	True				
ANR	4197011	CallExpression	"r_debug_detach ( core -> dbg , r_num_math ( core -> num , input + 2 ) )"		4196943	0					
ANR	4197012	Callee	r_debug_detach		4196943	0					
ANR	4197013	Identifier	r_debug_detach		4196943	0					
ANR	4197014	ArgumentList	core -> dbg		4196943	1					
ANR	4197015	Argument	core -> dbg		4196943	0					
ANR	4197016	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197017	Identifier	core		4196943	0					
ANR	4197018	Identifier	dbg		4196943	1					
ANR	4197019	Argument	"r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197020	CallExpression	"r_num_math ( core -> num , input + 2 )"		4196943	0					
ANR	4197021	Callee	r_num_math		4196943	0					
ANR	4197022	Identifier	r_num_math		4196943	0					
ANR	4197023	ArgumentList	core -> num		4196943	1					
ANR	4197024	Argument	core -> num		4196943	0					
ANR	4197025	PtrMemberAccess	core -> num		4196943	0					
ANR	4197026	Identifier	core		4196943	0					
ANR	4197027	Identifier	num		4196943	1					
ANR	4197028	Argument	input + 2		4196943	1					
ANR	4197029	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197030	Identifier	input		4196943	0					
ANR	4197031	PrimaryExpression	2		4196943	1					
ANR	4197032	ElseStatement	else		4196943	0					
ANR	4197033	CompoundStatement		12:9:319:319	4196943	0					
ANR	4197034	ExpressionStatement	"r_debug_detach ( core -> dbg , core -> dbg -> pid )"	1038:3:34333:34375	4196943	0	True				
ANR	4197035	CallExpression	"r_debug_detach ( core -> dbg , core -> dbg -> pid )"		4196943	0					
ANR	4197036	Callee	r_debug_detach		4196943	0					
ANR	4197037	Identifier	r_debug_detach		4196943	0					
ANR	4197038	ArgumentList	core -> dbg		4196943	1					
ANR	4197039	Argument	core -> dbg		4196943	0					
ANR	4197040	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197041	Identifier	core		4196943	0					
ANR	4197042	Identifier	dbg		4196943	1					
ANR	4197043	Argument	core -> dbg -> pid		4196943	1					
ANR	4197044	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4197045	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197046	Identifier	core		4196943	0					
ANR	4197047	Identifier	dbg		4196943	1					
ANR	4197048	Identifier	pid		4196943	1					
ANR	4197049	BreakStatement	break ;	1040:2:34383:34388	4196943	6	True				
ANR	4197050	Label	case 'c' :	1041:1:34391:34399	4196943	7	True				
ANR	4197051	IfStatement	if ( core -> dbg -> forked_pid != - 1 )		4196943	8					
ANR	4197052	Condition	core -> dbg -> forked_pid != - 1	1042:6:34416:34442	4196943	0	True				
ANR	4197053	EqualityExpression	core -> dbg -> forked_pid != - 1		4196943	0		!=			
ANR	4197054	PtrMemberAccess	core -> dbg -> forked_pid		4196943	0					
ANR	4197055	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197056	Identifier	core		4196943	0					
ANR	4197057	Identifier	dbg		4196943	1					
ANR	4197058	Identifier	forked_pid		4196943	1					
ANR	4197059	UnaryOperationExpression	- 1		4196943	1					
ANR	4197060	UnaryOperator	-		4196943	0					
ANR	4197061	PrimaryExpression	1		4196943	1					
ANR	4197062	CompoundStatement		17:35:436:436	4196943	1					
ANR	4197063	IfStatement	if ( input [ 2 ] == '*' )		4196943	0					
ANR	4197064	Condition	input [ 2 ] == '*'	1043:7:34454:34468	4196943	0	True				
ANR	4197065	EqualityExpression	input [ 2 ] == '*'		4196943	0		==			
ANR	4197066	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197067	Identifier	input		4196943	0					
ANR	4197068	PrimaryExpression	2		4196943	1					
ANR	4197069	PrimaryExpression	'*'		4196943	1					
ANR	4197070	CompoundStatement		18:24:462:462	4196943	1					
ANR	4197071	ExpressionStatement	"eprintf ( ""dp %d\\n"" , core -> dbg -> forked_pid )"	1044:4:34477:34519	4196943	0	True				
ANR	4197072	CallExpression	"eprintf ( ""dp %d\\n"" , core -> dbg -> forked_pid )"		4196943	0					
ANR	4197073	Callee	eprintf		4196943	0					
ANR	4197074	Identifier	eprintf		4196943	0					
ANR	4197075	ArgumentList	"""dp %d\\n"""		4196943	1					
ANR	4197076	Argument	"""dp %d\\n"""		4196943	0					
ANR	4197077	PrimaryExpression	"""dp %d\\n"""		4196943	0					
ANR	4197078	Argument	core -> dbg -> forked_pid		4196943	1					
ANR	4197079	PtrMemberAccess	core -> dbg -> forked_pid		4196943	0					
ANR	4197080	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197081	Identifier	core		4196943	0					
ANR	4197082	Identifier	dbg		4196943	1					
ANR	4197083	Identifier	forked_pid		4196943	1					
ANR	4197084	ElseStatement	else		4196943	0					
ANR	4197085	CompoundStatement		20:10:522:522	4196943	0					
ANR	4197086	ExpressionStatement	"r_debug_select ( core -> dbg , core -> dbg -> forked_pid , core -> dbg -> tid )"	1046:4:34537:34602	4196943	0	True				
ANR	4197087	CallExpression	"r_debug_select ( core -> dbg , core -> dbg -> forked_pid , core -> dbg -> tid )"		4196943	0					
ANR	4197088	Callee	r_debug_select		4196943	0					
ANR	4197089	Identifier	r_debug_select		4196943	0					
ANR	4197090	ArgumentList	core -> dbg		4196943	1					
ANR	4197091	Argument	core -> dbg		4196943	0					
ANR	4197092	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197093	Identifier	core		4196943	0					
ANR	4197094	Identifier	dbg		4196943	1					
ANR	4197095	Argument	core -> dbg -> forked_pid		4196943	1					
ANR	4197096	PtrMemberAccess	core -> dbg -> forked_pid		4196943	0					
ANR	4197097	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197098	Identifier	core		4196943	0					
ANR	4197099	Identifier	dbg		4196943	1					
ANR	4197100	Identifier	forked_pid		4196943	1					
ANR	4197101	Argument	core -> dbg -> tid		4196943	2					
ANR	4197102	PtrMemberAccess	core -> dbg -> tid		4196943	0					
ANR	4197103	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197104	Identifier	core		4196943	0					
ANR	4197105	Identifier	dbg		4196943	1					
ANR	4197106	Identifier	tid		4196943	1					
ANR	4197107	ExpressionStatement	core -> dbg -> main_pid = core -> dbg -> forked_pid	1047:4:34608:34651	4196943	1	True				
ANR	4197108	AssignmentExpression	core -> dbg -> main_pid = core -> dbg -> forked_pid		4196943	0		=			
ANR	4197109	PtrMemberAccess	core -> dbg -> main_pid		4196943	0					
ANR	4197110	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197111	Identifier	core		4196943	0					
ANR	4197112	Identifier	dbg		4196943	1					
ANR	4197113	Identifier	main_pid		4196943	1					
ANR	4197114	PtrMemberAccess	core -> dbg -> forked_pid		4196943	1					
ANR	4197115	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197116	Identifier	core		4196943	0					
ANR	4197117	Identifier	dbg		4196943	1					
ANR	4197118	Identifier	forked_pid		4196943	1					
ANR	4197119	ExpressionStatement	core -> dbg -> n_threads = 0	1048:4:34657:34681	4196943	2	True				
ANR	4197120	AssignmentExpression	core -> dbg -> n_threads = 0		4196943	0		=			
ANR	4197121	PtrMemberAccess	core -> dbg -> n_threads		4196943	0					
ANR	4197122	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197123	Identifier	core		4196943	0					
ANR	4197124	Identifier	dbg		4196943	1					
ANR	4197125	Identifier	n_threads		4196943	1					
ANR	4197126	PrimaryExpression	0		4196943	1					
ANR	4197127	ExpressionStatement	core -> dbg -> forked_pid = - 1	1049:4:34687:34713	4196943	3	True				
ANR	4197128	AssignmentExpression	core -> dbg -> forked_pid = - 1		4196943	0		=			
ANR	4197129	PtrMemberAccess	core -> dbg -> forked_pid		4196943	0					
ANR	4197130	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197131	Identifier	core		4196943	0					
ANR	4197132	Identifier	dbg		4196943	1					
ANR	4197133	Identifier	forked_pid		4196943	1					
ANR	4197134	UnaryOperationExpression	- 1		4196943	1					
ANR	4197135	UnaryOperator	-		4196943	0					
ANR	4197136	PrimaryExpression	1		4196943	1					
ANR	4197137	ElseStatement	else		4196943	0					
ANR	4197138	CompoundStatement		26:9:720:720	4196943	0					
ANR	4197139	ExpressionStatement	"eprintf ( ""No recently forked children\\n"" )"	1052:3:34734:34775	4196943	0	True				
ANR	4197140	CallExpression	"eprintf ( ""No recently forked children\\n"" )"		4196943	0					
ANR	4197141	Callee	eprintf		4196943	0					
ANR	4197142	Identifier	eprintf		4196943	0					
ANR	4197143	ArgumentList	"""No recently forked children\\n"""		4196943	1					
ANR	4197144	Argument	"""No recently forked children\\n"""		4196943	0					
ANR	4197145	PrimaryExpression	"""No recently forked children\\n"""		4196943	0					
ANR	4197146	BreakStatement	break ;	1054:2:34783:34788	4196943	9	True				
ANR	4197147	Label	case 'k' :	1055:1:34791:34799	4196943	10	True				
ANR	4197148	ExpressionStatement	pid = atoi ( input + 2 )	1059:2:34983:35005	4196943	11	True				
ANR	4197149	AssignmentExpression	pid = atoi ( input + 2 )		4196943	0		=			
ANR	4197150	Identifier	pid		4196943	0					
ANR	4197151	CallExpression	atoi ( input + 2 )		4196943	1					
ANR	4197152	Callee	atoi		4196943	0					
ANR	4197153	Identifier	atoi		4196943	0					
ANR	4197154	ArgumentList	input + 2		4196943	1					
ANR	4197155	Argument	input + 2		4196943	0					
ANR	4197156	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197157	Identifier	input		4196943	0					
ANR	4197158	PrimaryExpression	2		4196943	1					
ANR	4197159	IfStatement	if ( pid > 0 )		4196943	12					
ANR	4197160	Condition	pid > 0	1060:6:35013:35019	4196943	0	True				
ANR	4197161	RelationalExpression	pid > 0		4196943	0		>			
ANR	4197162	Identifier	pid		4196943	0					
ANR	4197163	PrimaryExpression	0		4196943	1					
ANR	4197164	CompoundStatement		35:15:1013:1013	4196943	1					
ANR	4197165	ExpressionStatement	ptr = r_str_trim_ro ( input + 2 )	1061:3:35027:35058	4196943	0	True				
ANR	4197166	AssignmentExpression	ptr = r_str_trim_ro ( input + 2 )		4196943	0		=			
ANR	4197167	Identifier	ptr		4196943	0					
ANR	4197168	CallExpression	r_str_trim_ro ( input + 2 )		4196943	1					
ANR	4197169	Callee	r_str_trim_ro		4196943	0					
ANR	4197170	Identifier	r_str_trim_ro		4196943	0					
ANR	4197171	ArgumentList	input + 2		4196943	1					
ANR	4197172	Argument	input + 2		4196943	0					
ANR	4197173	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197174	Identifier	input		4196943	0					
ANR	4197175	PrimaryExpression	2		4196943	1					
ANR	4197176	ExpressionStatement	"ptr = strchr ( ptr , ' ' )"	1062:3:35063:35086	4196943	1	True				
ANR	4197177	AssignmentExpression	"ptr = strchr ( ptr , ' ' )"		4196943	0		=			
ANR	4197178	Identifier	ptr		4196943	0					
ANR	4197179	CallExpression	"strchr ( ptr , ' ' )"		4196943	1					
ANR	4197180	Callee	strchr		4196943	0					
ANR	4197181	Identifier	strchr		4196943	0					
ANR	4197182	ArgumentList	ptr		4196943	1					
ANR	4197183	Argument	ptr		4196943	0					
ANR	4197184	Identifier	ptr		4196943	0					
ANR	4197185	Argument	' '		4196943	1					
ANR	4197186	PrimaryExpression	' '		4196943	0					
ANR	4197187	ExpressionStatement	sig = ptr ? atoi ( ptr + 1 ) : 0	1063:3:35091:35119	4196943	2	True				
ANR	4197188	AssignmentExpression	sig = ptr ? atoi ( ptr + 1 ) : 0		4196943	0		=			
ANR	4197189	Identifier	sig		4196943	0					
ANR	4197190	ConditionalExpression	ptr ? atoi ( ptr + 1 ) : 0		4196943	1					
ANR	4197191	Condition	ptr		4196943	0					
ANR	4197192	Identifier	ptr		4196943	0					
ANR	4197193	CallExpression	atoi ( ptr + 1 )		4196943	1					
ANR	4197194	Callee	atoi		4196943	0					
ANR	4197195	Identifier	atoi		4196943	0					
ANR	4197196	ArgumentList	ptr + 1		4196943	1					
ANR	4197197	Argument	ptr + 1		4196943	0					
ANR	4197198	AdditiveExpression	ptr + 1		4196943	0		+			
ANR	4197199	Identifier	ptr		4196943	0					
ANR	4197200	PrimaryExpression	1		4196943	1					
ANR	4197201	PrimaryExpression	0		4196943	2					
ANR	4197202	ExpressionStatement	"eprintf ( ""Sending signal '%d' to pid '%d'\\n"" , sig , pid )"	1064:3:35124:35179	4196943	3	True				
ANR	4197203	CallExpression	"eprintf ( ""Sending signal '%d' to pid '%d'\\n"" , sig , pid )"		4196943	0					
ANR	4197204	Callee	eprintf		4196943	0					
ANR	4197205	Identifier	eprintf		4196943	0					
ANR	4197206	ArgumentList	"""Sending signal '%d' to pid '%d'\\n"""		4196943	1					
ANR	4197207	Argument	"""Sending signal '%d' to pid '%d'\\n"""		4196943	0					
ANR	4197208	PrimaryExpression	"""Sending signal '%d' to pid '%d'\\n"""		4196943	0					
ANR	4197209	Argument	sig		4196943	1					
ANR	4197210	Identifier	sig		4196943	0					
ANR	4197211	Argument	pid		4196943	2					
ANR	4197212	Identifier	pid		4196943	0					
ANR	4197213	ExpressionStatement	"r_debug_kill ( core -> dbg , 0 , false , sig )"	1065:3:35184:35223	4196943	4	True				
ANR	4197214	CallExpression	"r_debug_kill ( core -> dbg , 0 , false , sig )"		4196943	0					
ANR	4197215	Callee	r_debug_kill		4196943	0					
ANR	4197216	Identifier	r_debug_kill		4196943	0					
ANR	4197217	ArgumentList	core -> dbg		4196943	1					
ANR	4197218	Argument	core -> dbg		4196943	0					
ANR	4197219	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197220	Identifier	core		4196943	0					
ANR	4197221	Identifier	dbg		4196943	1					
ANR	4197222	Argument	0		4196943	1					
ANR	4197223	PrimaryExpression	0		4196943	0					
ANR	4197224	Argument	false		4196943	2					
ANR	4197225	Identifier	false		4196943	0					
ANR	4197226	Argument	sig		4196943	3					
ANR	4197227	Identifier	sig		4196943	0					
ANR	4197228	ElseStatement	else		4196943	0					
ANR	4197229	ExpressionStatement	"eprintf ( ""cmd_debug_pid: Invalid arguments (%s)\\n"" , input )"	1066:9:35234:35292	4196943	0	True				
ANR	4197230	CallExpression	"eprintf ( ""cmd_debug_pid: Invalid arguments (%s)\\n"" , input )"		4196943	0					
ANR	4197231	Callee	eprintf		4196943	0					
ANR	4197232	Identifier	eprintf		4196943	0					
ANR	4197233	ArgumentList	"""cmd_debug_pid: Invalid arguments (%s)\\n"""		4196943	1					
ANR	4197234	Argument	"""cmd_debug_pid: Invalid arguments (%s)\\n"""		4196943	0					
ANR	4197235	PrimaryExpression	"""cmd_debug_pid: Invalid arguments (%s)\\n"""		4196943	0					
ANR	4197236	Argument	input		4196943	1					
ANR	4197237	Identifier	input		4196943	0					
ANR	4197238	BreakStatement	break ;	1067:2:35296:35301	4196943	13	True				
ANR	4197239	Label	case 'n' :	1068:1:35304:35312	4196943	14	True				
ANR	4197240	ExpressionStatement	"eprintf ( ""TODO: debug_fork: %d\\n"" , r_debug_child_fork ( core -> dbg ) )"	1069:2:35325:35391	4196943	15	True				
ANR	4197241	CallExpression	"eprintf ( ""TODO: debug_fork: %d\\n"" , r_debug_child_fork ( core -> dbg ) )"		4196943	0					
ANR	4197242	Callee	eprintf		4196943	0					
ANR	4197243	Identifier	eprintf		4196943	0					
ANR	4197244	ArgumentList	"""TODO: debug_fork: %d\\n"""		4196943	1					
ANR	4197245	Argument	"""TODO: debug_fork: %d\\n"""		4196943	0					
ANR	4197246	PrimaryExpression	"""TODO: debug_fork: %d\\n"""		4196943	0					
ANR	4197247	Argument	r_debug_child_fork ( core -> dbg )		4196943	1					
ANR	4197248	CallExpression	r_debug_child_fork ( core -> dbg )		4196943	0					
ANR	4197249	Callee	r_debug_child_fork		4196943	0					
ANR	4197250	Identifier	r_debug_child_fork		4196943	0					
ANR	4197251	ArgumentList	core -> dbg		4196943	1					
ANR	4197252	Argument	core -> dbg		4196943	0					
ANR	4197253	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197254	Identifier	core		4196943	0					
ANR	4197255	Identifier	dbg		4196943	1					
ANR	4197256	BreakStatement	break ;	1070:2:35395:35400	4196943	16	True				
ANR	4197257	Label	case 't' :	1071:1:35403:35411	4196943	17	True				
ANR	4197258	SwitchStatement	switch ( input [ 2 ] )		4196943	18					
ANR	4197259	Condition	input [ 2 ]	1072:10:35432:35439	4196943	0	True				
ANR	4197260	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197261	Identifier	input		4196943	0					
ANR	4197262	PrimaryExpression	2		4196943	1					
ANR	4197263	CompoundStatement		47:20:1433:1433	4196943	1					
ANR	4197264	Label	case '\\0' :	1073:2:35446:35455	4196943	0	True				
ANR	4197265	ExpressionStatement	"r_debug_thread_list ( core -> dbg , core -> dbg -> pid )"	1074:3:35469:35516	4196943	1	True				
ANR	4197266	CallExpression	"r_debug_thread_list ( core -> dbg , core -> dbg -> pid )"		4196943	0					
ANR	4197267	Callee	r_debug_thread_list		4196943	0					
ANR	4197268	Identifier	r_debug_thread_list		4196943	0					
ANR	4197269	ArgumentList	core -> dbg		4196943	1					
ANR	4197270	Argument	core -> dbg		4196943	0					
ANR	4197271	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197272	Identifier	core		4196943	0					
ANR	4197273	Identifier	dbg		4196943	1					
ANR	4197274	Argument	core -> dbg -> pid		4196943	1					
ANR	4197275	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4197276	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197277	Identifier	core		4196943	0					
ANR	4197278	Identifier	dbg		4196943	1					
ANR	4197279	Identifier	pid		4196943	1					
ANR	4197280	BreakStatement	break ;	1075:3:35521:35526	4196943	2	True				
ANR	4197281	Label	case ' ' :	1076:2:35530:35538	4196943	3	True				
ANR	4197282	ExpressionStatement	"r_debug_thread_list ( core -> dbg , atoi ( input + 2 ) )"	1077:3:35553:35602	4196943	4	True				
ANR	4197283	CallExpression	"r_debug_thread_list ( core -> dbg , atoi ( input + 2 ) )"		4196943	0					
ANR	4197284	Callee	r_debug_thread_list		4196943	0					
ANR	4197285	Identifier	r_debug_thread_list		4196943	0					
ANR	4197286	ArgumentList	core -> dbg		4196943	1					
ANR	4197287	Argument	core -> dbg		4196943	0					
ANR	4197288	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197289	Identifier	core		4196943	0					
ANR	4197290	Identifier	dbg		4196943	1					
ANR	4197291	Argument	atoi ( input + 2 )		4196943	1					
ANR	4197292	CallExpression	atoi ( input + 2 )		4196943	0					
ANR	4197293	Callee	atoi		4196943	0					
ANR	4197294	Identifier	atoi		4196943	0					
ANR	4197295	ArgumentList	input + 2		4196943	1					
ANR	4197296	Argument	input + 2		4196943	0					
ANR	4197297	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197298	Identifier	input		4196943	0					
ANR	4197299	PrimaryExpression	2		4196943	1					
ANR	4197300	BreakStatement	break ;	1078:3:35607:35612	4196943	5	True				
ANR	4197301	Label	case '=' :	1079:2:35616:35624	4196943	6	True				
ANR	4197302	ExpressionStatement	"r_debug_select ( core -> dbg , core -> dbg -> pid , ( int ) r_num_math ( core -> num , input + 3 ) )"	1080:3:35639:35727	4196943	7	True				
ANR	4197303	CallExpression	"r_debug_select ( core -> dbg , core -> dbg -> pid , ( int ) r_num_math ( core -> num , input + 3 ) )"		4196943	0					
ANR	4197304	Callee	r_debug_select		4196943	0					
ANR	4197305	Identifier	r_debug_select		4196943	0					
ANR	4197306	ArgumentList	core -> dbg		4196943	1					
ANR	4197307	Argument	core -> dbg		4196943	0					
ANR	4197308	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197309	Identifier	core		4196943	0					
ANR	4197310	Identifier	dbg		4196943	1					
ANR	4197311	Argument	core -> dbg -> pid		4196943	1					
ANR	4197312	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4197313	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197314	Identifier	core		4196943	0					
ANR	4197315	Identifier	dbg		4196943	1					
ANR	4197316	Identifier	pid		4196943	1					
ANR	4197317	Argument	"( int ) r_num_math ( core -> num , input + 3 )"		4196943	2					
ANR	4197318	CastExpression	"( int ) r_num_math ( core -> num , input + 3 )"		4196943	0					
ANR	4197319	CastTarget	int		4196943	0					
ANR	4197320	CallExpression	"r_num_math ( core -> num , input + 3 )"		4196943	1					
ANR	4197321	Callee	r_num_math		4196943	0					
ANR	4197322	Identifier	r_num_math		4196943	0					
ANR	4197323	ArgumentList	core -> num		4196943	1					
ANR	4197324	Argument	core -> num		4196943	0					
ANR	4197325	PtrMemberAccess	core -> num		4196943	0					
ANR	4197326	Identifier	core		4196943	0					
ANR	4197327	Identifier	num		4196943	1					
ANR	4197328	Argument	input + 3		4196943	1					
ANR	4197329	AdditiveExpression	input + 3		4196943	0		+			
ANR	4197330	Identifier	input		4196943	0					
ANR	4197331	PrimaryExpression	3		4196943	1					
ANR	4197332	BreakStatement	break ;	1082:3:35732:35737	4196943	8	True				
ANR	4197333	Label	case 'n' :	1083:2:35741:35749	4196943	9	True				
ANR	4197334	ExpressionStatement	"eprintf ( ""TODO: debug_clone: %d\\n"" , r_debug_child_clone ( core -> dbg ) )"	1084:3:35764:35832	4196943	10	True				
ANR	4197335	CallExpression	"eprintf ( ""TODO: debug_clone: %d\\n"" , r_debug_child_clone ( core -> dbg ) )"		4196943	0					
ANR	4197336	Callee	eprintf		4196943	0					
ANR	4197337	Identifier	eprintf		4196943	0					
ANR	4197338	ArgumentList	"""TODO: debug_clone: %d\\n"""		4196943	1					
ANR	4197339	Argument	"""TODO: debug_clone: %d\\n"""		4196943	0					
ANR	4197340	PrimaryExpression	"""TODO: debug_clone: %d\\n"""		4196943	0					
ANR	4197341	Argument	r_debug_child_clone ( core -> dbg )		4196943	1					
ANR	4197342	CallExpression	r_debug_child_clone ( core -> dbg )		4196943	0					
ANR	4197343	Callee	r_debug_child_clone		4196943	0					
ANR	4197344	Identifier	r_debug_child_clone		4196943	0					
ANR	4197345	ArgumentList	core -> dbg		4196943	1					
ANR	4197346	Argument	core -> dbg		4196943	0					
ANR	4197347	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197348	Identifier	core		4196943	0					
ANR	4197349	Identifier	dbg		4196943	1					
ANR	4197350	BreakStatement	break ;	1085:3:35837:35842	4196943	11	True				
ANR	4197351	Label	case '?' :	1086:2:35846:35854	4196943	12	True				
ANR	4197352	Label	default :	1087:2:35868:35875	4196943	13	True				
ANR	4197353	Identifier	default		4196943	0					
ANR	4197354	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dp )"	1088:3:35880:35915	4196943	14	True				
ANR	4197355	CallExpression	"r_core_cmd_help ( core , help_msg_dp )"		4196943	0					
ANR	4197356	Callee	r_core_cmd_help		4196943	0					
ANR	4197357	Identifier	r_core_cmd_help		4196943	0					
ANR	4197358	ArgumentList	core		4196943	1					
ANR	4197359	Argument	core		4196943	0					
ANR	4197360	Identifier	core		4196943	0					
ANR	4197361	Argument	help_msg_dp		4196943	1					
ANR	4197362	Identifier	help_msg_dp		4196943	0					
ANR	4197363	BreakStatement	break ;	1089:3:35920:35925	4196943	15	True				
ANR	4197364	BreakStatement	break ;	1091:2:35933:35938	4196943	19	True				
ANR	4197365	Label	case 'a' :	1092:1:35941:35949	4196943	20	True				
ANR	4197366	IfStatement	if ( input [ 2 ] )		4196943	21					
ANR	4197367	Condition	input [ 2 ]	1093:6:35966:35973	4196943	0	True				
ANR	4197368	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197369	Identifier	input		4196943	0					
ANR	4197370	PrimaryExpression	2		4196943	1					
ANR	4197371	CompoundStatement		68:16:1967:1967	4196943	1					
ANR	4197372	ExpressionStatement	"r_debug_attach ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) )"	1094:3:35981:36055	4196943	0	True				
ANR	4197373	CallExpression	"r_debug_attach ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	0					
ANR	4197374	Callee	r_debug_attach		4196943	0					
ANR	4197375	Identifier	r_debug_attach		4196943	0					
ANR	4197376	ArgumentList	core -> dbg		4196943	1					
ANR	4197377	Argument	core -> dbg		4196943	0					
ANR	4197378	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197379	Identifier	core		4196943	0					
ANR	4197380	Identifier	dbg		4196943	1					
ANR	4197381	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197382	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	0					
ANR	4197383	CastTarget	int		4196943	0					
ANR	4197384	CallExpression	"r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197385	Callee	r_num_math		4196943	0					
ANR	4197386	Identifier	r_num_math		4196943	0					
ANR	4197387	ArgumentList	core -> num		4196943	1					
ANR	4197388	Argument	core -> num		4196943	0					
ANR	4197389	PtrMemberAccess	core -> num		4196943	0					
ANR	4197390	Identifier	core		4196943	0					
ANR	4197391	Identifier	num		4196943	1					
ANR	4197392	Argument	input + 2		4196943	1					
ANR	4197393	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197394	Identifier	input		4196943	0					
ANR	4197395	PrimaryExpression	2		4196943	1					
ANR	4197396	ElseStatement	else		4196943	0					
ANR	4197397	CompoundStatement		71:9:2057:2057	4196943	0					
ANR	4197398	IfStatement	if ( core -> file && core -> io )		4196943	0					
ANR	4197399	Condition	core -> file && core -> io	1097:7:36075:36096	4196943	0	True				
ANR	4197400	AndExpression	core -> file && core -> io		4196943	0		&&			
ANR	4197401	PtrMemberAccess	core -> file		4196943	0					
ANR	4197402	Identifier	core		4196943	0					
ANR	4197403	Identifier	file		4196943	1					
ANR	4197404	PtrMemberAccess	core -> io		4196943	1					
ANR	4197405	Identifier	core		4196943	0					
ANR	4197406	Identifier	io		4196943	1					
ANR	4197407	CompoundStatement		72:31:2090:2090	4196943	1					
ANR	4197408	ExpressionStatement	"r_debug_attach ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) )"	1098:4:36105:36181	4196943	0	True				
ANR	4197409	CallExpression	"r_debug_attach ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) )"		4196943	0					
ANR	4197410	Callee	r_debug_attach		4196943	0					
ANR	4197411	Identifier	r_debug_attach		4196943	0					
ANR	4197412	ArgumentList	core -> dbg		4196943	1					
ANR	4197413	Argument	core -> dbg		4196943	0					
ANR	4197414	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197415	Identifier	core		4196943	0					
ANR	4197416	Identifier	dbg		4196943	1					
ANR	4197417	Argument	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		4196943	1					
ANR	4197418	CallExpression	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		4196943	0					
ANR	4197419	Callee	r_io_fd_get_pid		4196943	0					
ANR	4197420	Identifier	r_io_fd_get_pid		4196943	0					
ANR	4197421	ArgumentList	core -> io		4196943	1					
ANR	4197422	Argument	core -> io		4196943	0					
ANR	4197423	PtrMemberAccess	core -> io		4196943	0					
ANR	4197424	Identifier	core		4196943	0					
ANR	4197425	Identifier	io		4196943	1					
ANR	4197426	Argument	core -> file -> fd		4196943	1					
ANR	4197427	PtrMemberAccess	core -> file -> fd		4196943	0					
ANR	4197428	PtrMemberAccess	core -> file		4196943	0					
ANR	4197429	Identifier	core		4196943	0					
ANR	4197430	Identifier	file		4196943	1					
ANR	4197431	Identifier	fd		4196943	1					
ANR	4197432	ExpressionStatement	"r_debug_select ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid )"	1102:2:36194:36252	4196943	22	True				
ANR	4197433	CallExpression	"r_debug_select ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid )"		4196943	0					
ANR	4197434	Callee	r_debug_select		4196943	0					
ANR	4197435	Identifier	r_debug_select		4196943	0					
ANR	4197436	ArgumentList	core -> dbg		4196943	1					
ANR	4197437	Argument	core -> dbg		4196943	0					
ANR	4197438	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197439	Identifier	core		4196943	0					
ANR	4197440	Identifier	dbg		4196943	1					
ANR	4197441	Argument	core -> dbg -> pid		4196943	1					
ANR	4197442	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4197443	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197444	Identifier	core		4196943	0					
ANR	4197445	Identifier	dbg		4196943	1					
ANR	4197446	Identifier	pid		4196943	1					
ANR	4197447	Argument	core -> dbg -> tid		4196943	2					
ANR	4197448	PtrMemberAccess	core -> dbg -> tid		4196943	0					
ANR	4197449	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197450	Identifier	core		4196943	0					
ANR	4197451	Identifier	dbg		4196943	1					
ANR	4197452	Identifier	tid		4196943	1					
ANR	4197453	ExpressionStatement	"r_config_set_i ( core -> config , ""dbg.swstep"" , ( core -> dbg -> h && ! core -> dbg -> h -> canstep ) )"	1103:2:36256:36345	4196943	23	True				
ANR	4197454	CallExpression	"r_config_set_i ( core -> config , ""dbg.swstep"" , ( core -> dbg -> h && ! core -> dbg -> h -> canstep ) )"		4196943	0					
ANR	4197455	Callee	r_config_set_i		4196943	0					
ANR	4197456	Identifier	r_config_set_i		4196943	0					
ANR	4197457	ArgumentList	core -> config		4196943	1					
ANR	4197458	Argument	core -> config		4196943	0					
ANR	4197459	PtrMemberAccess	core -> config		4196943	0					
ANR	4197460	Identifier	core		4196943	0					
ANR	4197461	Identifier	config		4196943	1					
ANR	4197462	Argument	"""dbg.swstep"""		4196943	1					
ANR	4197463	PrimaryExpression	"""dbg.swstep"""		4196943	0					
ANR	4197464	Argument	core -> dbg -> h && ! core -> dbg -> h -> canstep		4196943	2					
ANR	4197465	AndExpression	core -> dbg -> h && ! core -> dbg -> h -> canstep		4196943	0		&&			
ANR	4197466	PtrMemberAccess	core -> dbg -> h		4196943	0					
ANR	4197467	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197468	Identifier	core		4196943	0					
ANR	4197469	Identifier	dbg		4196943	1					
ANR	4197470	Identifier	h		4196943	1					
ANR	4197471	UnaryOperationExpression	! core -> dbg -> h -> canstep		4196943	1					
ANR	4197472	UnaryOperator	!		4196943	0					
ANR	4197473	PtrMemberAccess	core -> dbg -> h -> canstep		4196943	1					
ANR	4197474	PtrMemberAccess	core -> dbg -> h		4196943	0					
ANR	4197475	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197476	Identifier	core		4196943	0					
ANR	4197477	Identifier	dbg		4196943	1					
ANR	4197478	Identifier	h		4196943	1					
ANR	4197479	Identifier	canstep		4196943	1					
ANR	4197480	ExpressionStatement	"r_core_cmdf ( core , ""=!pid %d"" , core -> dbg -> pid )"	1105:2:36349:36395	4196943	24	True				
ANR	4197481	CallExpression	"r_core_cmdf ( core , ""=!pid %d"" , core -> dbg -> pid )"		4196943	0					
ANR	4197482	Callee	r_core_cmdf		4196943	0					
ANR	4197483	Identifier	r_core_cmdf		4196943	0					
ANR	4197484	ArgumentList	core		4196943	1					
ANR	4197485	Argument	core		4196943	0					
ANR	4197486	Identifier	core		4196943	0					
ANR	4197487	Argument	"""=!pid %d"""		4196943	1					
ANR	4197488	PrimaryExpression	"""=!pid %d"""		4196943	0					
ANR	4197489	Argument	core -> dbg -> pid		4196943	2					
ANR	4197490	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4197491	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197492	Identifier	core		4196943	0					
ANR	4197493	Identifier	dbg		4196943	1					
ANR	4197494	Identifier	pid		4196943	1					
ANR	4197495	BreakStatement	break ;	1106:2:36399:36404	4196943	25	True				
ANR	4197496	Label	case 'f' :	1107:1:36407:36415	4196943	26	True				
ANR	4197497	IfStatement	if ( core -> file && core -> io )		4196943	27					
ANR	4197498	Condition	core -> file && core -> io	1108:6:36432:36453	4196943	0	True				
ANR	4197499	AndExpression	core -> file && core -> io		4196943	0		&&			
ANR	4197500	PtrMemberAccess	core -> file		4196943	0					
ANR	4197501	Identifier	core		4196943	0					
ANR	4197502	Identifier	file		4196943	1					
ANR	4197503	PtrMemberAccess	core -> io		4196943	1					
ANR	4197504	Identifier	core		4196943	0					
ANR	4197505	Identifier	io		4196943	1					
ANR	4197506	CompoundStatement		83:30:2447:2447	4196943	1					
ANR	4197507	ExpressionStatement	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"	1109:3:36461:36580	4196943	0	True				
ANR	4197508	CallExpression	"r_debug_select ( core -> dbg , r_io_fd_get_pid ( core -> io , core -> file -> fd ) , r_io_fd_get_tid ( core -> io , core -> file -> fd ) )"		4196943	0					
ANR	4197509	Callee	r_debug_select		4196943	0					
ANR	4197510	Identifier	r_debug_select		4196943	0					
ANR	4197511	ArgumentList	core -> dbg		4196943	1					
ANR	4197512	Argument	core -> dbg		4196943	0					
ANR	4197513	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197514	Identifier	core		4196943	0					
ANR	4197515	Identifier	dbg		4196943	1					
ANR	4197516	Argument	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		4196943	1					
ANR	4197517	CallExpression	"r_io_fd_get_pid ( core -> io , core -> file -> fd )"		4196943	0					
ANR	4197518	Callee	r_io_fd_get_pid		4196943	0					
ANR	4197519	Identifier	r_io_fd_get_pid		4196943	0					
ANR	4197520	ArgumentList	core -> io		4196943	1					
ANR	4197521	Argument	core -> io		4196943	0					
ANR	4197522	PtrMemberAccess	core -> io		4196943	0					
ANR	4197523	Identifier	core		4196943	0					
ANR	4197524	Identifier	io		4196943	1					
ANR	4197525	Argument	core -> file -> fd		4196943	1					
ANR	4197526	PtrMemberAccess	core -> file -> fd		4196943	0					
ANR	4197527	PtrMemberAccess	core -> file		4196943	0					
ANR	4197528	Identifier	core		4196943	0					
ANR	4197529	Identifier	file		4196943	1					
ANR	4197530	Identifier	fd		4196943	1					
ANR	4197531	Argument	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		4196943	2					
ANR	4197532	CallExpression	"r_io_fd_get_tid ( core -> io , core -> file -> fd )"		4196943	0					
ANR	4197533	Callee	r_io_fd_get_tid		4196943	0					
ANR	4197534	Identifier	r_io_fd_get_tid		4196943	0					
ANR	4197535	ArgumentList	core -> io		4196943	1					
ANR	4197536	Argument	core -> io		4196943	0					
ANR	4197537	PtrMemberAccess	core -> io		4196943	0					
ANR	4197538	Identifier	core		4196943	0					
ANR	4197539	Identifier	io		4196943	1					
ANR	4197540	Argument	core -> file -> fd		4196943	1					
ANR	4197541	PtrMemberAccess	core -> file -> fd		4196943	0					
ANR	4197542	PtrMemberAccess	core -> file		4196943	0					
ANR	4197543	Identifier	core		4196943	0					
ANR	4197544	Identifier	file		4196943	1					
ANR	4197545	Identifier	fd		4196943	1					
ANR	4197546	BreakStatement	break ;	1112:2:36588:36593	4196943	28	True				
ANR	4197547	Label	case '=' :	1113:1:36596:36604	4196943	29	True				
ANR	4197548	ExpressionStatement	"r_debug_select ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) , core -> dbg -> tid )"	1114:2:36617:36704	4196943	30	True				
ANR	4197549	CallExpression	"r_debug_select ( core -> dbg , ( int ) r_num_math ( core -> num , input + 2 ) , core -> dbg -> tid )"		4196943	0					
ANR	4197550	Callee	r_debug_select		4196943	0					
ANR	4197551	Identifier	r_debug_select		4196943	0					
ANR	4197552	ArgumentList	core -> dbg		4196943	1					
ANR	4197553	Argument	core -> dbg		4196943	0					
ANR	4197554	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197555	Identifier	core		4196943	0					
ANR	4197556	Identifier	dbg		4196943	1					
ANR	4197557	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197558	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	0					
ANR	4197559	CastTarget	int		4196943	0					
ANR	4197560	CallExpression	"r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197561	Callee	r_num_math		4196943	0					
ANR	4197562	Identifier	r_num_math		4196943	0					
ANR	4197563	ArgumentList	core -> num		4196943	1					
ANR	4197564	Argument	core -> num		4196943	0					
ANR	4197565	PtrMemberAccess	core -> num		4196943	0					
ANR	4197566	Identifier	core		4196943	0					
ANR	4197567	Identifier	num		4196943	1					
ANR	4197568	Argument	input + 2		4196943	1					
ANR	4197569	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197570	Identifier	input		4196943	0					
ANR	4197571	PrimaryExpression	2		4196943	1					
ANR	4197572	Argument	core -> dbg -> tid		4196943	2					
ANR	4197573	PtrMemberAccess	core -> dbg -> tid		4196943	0					
ANR	4197574	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197575	Identifier	core		4196943	0					
ANR	4197576	Identifier	dbg		4196943	1					
ANR	4197577	Identifier	tid		4196943	1					
ANR	4197578	ExpressionStatement	"core -> dbg -> main_pid = r_num_math ( core -> num , input + 2 )"	1116:2:36708:36763	4196943	31	True				
ANR	4197579	AssignmentExpression	"core -> dbg -> main_pid = r_num_math ( core -> num , input + 2 )"		4196943	0		=			
ANR	4197580	PtrMemberAccess	core -> dbg -> main_pid		4196943	0					
ANR	4197581	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197582	Identifier	core		4196943	0					
ANR	4197583	Identifier	dbg		4196943	1					
ANR	4197584	Identifier	main_pid		4196943	1					
ANR	4197585	CallExpression	"r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197586	Callee	r_num_math		4196943	0					
ANR	4197587	Identifier	r_num_math		4196943	0					
ANR	4197588	ArgumentList	core -> num		4196943	1					
ANR	4197589	Argument	core -> num		4196943	0					
ANR	4197590	PtrMemberAccess	core -> num		4196943	0					
ANR	4197591	Identifier	core		4196943	0					
ANR	4197592	Identifier	num		4196943	1					
ANR	4197593	Argument	input + 2		4196943	1					
ANR	4197594	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197595	Identifier	input		4196943	0					
ANR	4197596	PrimaryExpression	2		4196943	1					
ANR	4197597	BreakStatement	break ;	1117:2:36767:36772	4196943	32	True				
ANR	4197598	Label	case 'l' :	1118:1:36775:36783	4196943	33	True				
ANR	4197599	SwitchStatement	switch ( input [ 2 ] )		4196943	34					
ANR	4197600	Condition	input [ 2 ]	1119:10:36804:36811	4196943	0	True				
ANR	4197601	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197602	Identifier	input		4196943	0					
ANR	4197603	PrimaryExpression	2		4196943	1					
ANR	4197604	CompoundStatement		94:20:2805:2805	4196943	1					
ANR	4197605	Label	case '\\0' :	1120:2:36818:36827	4196943	0	True				
ANR	4197606	ExpressionStatement	"r_debug_pid_list ( core -> dbg , 0 , 0 )"	1121:3:36841:36875	4196943	1	True				
ANR	4197607	CallExpression	"r_debug_pid_list ( core -> dbg , 0 , 0 )"		4196943	0					
ANR	4197608	Callee	r_debug_pid_list		4196943	0					
ANR	4197609	Identifier	r_debug_pid_list		4196943	0					
ANR	4197610	ArgumentList	core -> dbg		4196943	1					
ANR	4197611	Argument	core -> dbg		4196943	0					
ANR	4197612	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197613	Identifier	core		4196943	0					
ANR	4197614	Identifier	dbg		4196943	1					
ANR	4197615	Argument	0		4196943	1					
ANR	4197616	PrimaryExpression	0		4196943	0					
ANR	4197617	Argument	0		4196943	2					
ANR	4197618	PrimaryExpression	0		4196943	0					
ANR	4197619	BreakStatement	break ;	1122:3:36880:36885	4196943	2	True				
ANR	4197620	Label	case 'j' :	1123:2:36889:36897	4196943	3	True				
ANR	4197621	ExpressionStatement	"r_debug_pid_list ( core -> dbg , 0 , 'j' )"	1124:3:36912:36948	4196943	4	True				
ANR	4197622	CallExpression	"r_debug_pid_list ( core -> dbg , 0 , 'j' )"		4196943	0					
ANR	4197623	Callee	r_debug_pid_list		4196943	0					
ANR	4197624	Identifier	r_debug_pid_list		4196943	0					
ANR	4197625	ArgumentList	core -> dbg		4196943	1					
ANR	4197626	Argument	core -> dbg		4196943	0					
ANR	4197627	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197628	Identifier	core		4196943	0					
ANR	4197629	Identifier	dbg		4196943	1					
ANR	4197630	Argument	0		4196943	1					
ANR	4197631	PrimaryExpression	0		4196943	0					
ANR	4197632	Argument	'j'		4196943	2					
ANR	4197633	PrimaryExpression	'j'		4196943	0					
ANR	4197634	BreakStatement	break ;	1125:3:36953:36958	4196943	5	True				
ANR	4197635	BreakStatement	break ;	1127:2:36966:36971	4196943	35	True				
ANR	4197636	Label	case 'j' :	1128:1:36974:36982	4196943	36	True				
ANR	4197637	SwitchStatement	switch ( input [ 2 ] )		4196943	37					
ANR	4197638	Condition	input [ 2 ]	1129:10:37003:37010	4196943	0	True				
ANR	4197639	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197640	Identifier	input		4196943	0					
ANR	4197641	PrimaryExpression	2		4196943	1					
ANR	4197642	CompoundStatement		104:20:3004:3004	4196943	1					
ANR	4197643	Label	case '\\0' :	1130:2:37017:37026	4196943	0	True				
ANR	4197644	ExpressionStatement	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 'j' )"	1131:3:37040:37089	4196943	1	True				
ANR	4197645	CallExpression	"r_debug_pid_list ( core -> dbg , core -> dbg -> pid , 'j' )"		4196943	0					
ANR	4197646	Callee	r_debug_pid_list		4196943	0					
ANR	4197647	Identifier	r_debug_pid_list		4196943	0					
ANR	4197648	ArgumentList	core -> dbg		4196943	1					
ANR	4197649	Argument	core -> dbg		4196943	0					
ANR	4197650	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197651	Identifier	core		4196943	0					
ANR	4197652	Identifier	dbg		4196943	1					
ANR	4197653	Argument	core -> dbg -> pid		4196943	1					
ANR	4197654	PtrMemberAccess	core -> dbg -> pid		4196943	0					
ANR	4197655	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197656	Identifier	core		4196943	0					
ANR	4197657	Identifier	dbg		4196943	1					
ANR	4197658	Identifier	pid		4196943	1					
ANR	4197659	Argument	'j'		4196943	2					
ANR	4197660	PrimaryExpression	'j'		4196943	0					
ANR	4197661	BreakStatement	break ;	1132:3:37094:37099	4196943	2	True				
ANR	4197662	Label	case ' ' :	1133:2:37103:37111	4196943	3	True				
ANR	4197663	ExpressionStatement	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 'j' )"	1134:3:37126:37221	4196943	4	True				
ANR	4197664	CallExpression	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 'j' )"		4196943	0					
ANR	4197665	Callee	r_debug_pid_list		4196943	0					
ANR	4197666	Identifier	r_debug_pid_list		4196943	0					
ANR	4197667	ArgumentList	core -> dbg		4196943	1					
ANR	4197668	Argument	core -> dbg		4196943	0					
ANR	4197669	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197670	Identifier	core		4196943	0					
ANR	4197671	Identifier	dbg		4196943	1					
ANR	4197672	Argument	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	1					
ANR	4197673	CastExpression	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	0					
ANR	4197674	CastTarget	int		4196943	0					
ANR	4197675	CallExpression	"R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	1					
ANR	4197676	Callee	R_MAX		4196943	0					
ANR	4197677	Identifier	R_MAX		4196943	0					
ANR	4197678	ArgumentList	0		4196943	1					
ANR	4197679	Argument	0		4196943	0					
ANR	4197680	PrimaryExpression	0		4196943	0					
ANR	4197681	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197682	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	0					
ANR	4197683	CastTarget	int		4196943	0					
ANR	4197684	CallExpression	"r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197685	Callee	r_num_math		4196943	0					
ANR	4197686	Identifier	r_num_math		4196943	0					
ANR	4197687	ArgumentList	core -> num		4196943	1					
ANR	4197688	Argument	core -> num		4196943	0					
ANR	4197689	PtrMemberAccess	core -> num		4196943	0					
ANR	4197690	Identifier	core		4196943	0					
ANR	4197691	Identifier	num		4196943	1					
ANR	4197692	Argument	input + 2		4196943	1					
ANR	4197693	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197694	Identifier	input		4196943	0					
ANR	4197695	PrimaryExpression	2		4196943	1					
ANR	4197696	Argument	'j'		4196943	2					
ANR	4197697	PrimaryExpression	'j'		4196943	0					
ANR	4197698	BreakStatement	break ;	1136:3:37226:37231	4196943	5	True				
ANR	4197699	BreakStatement	break ;	1138:2:37239:37244	4196943	38	True				
ANR	4197700	Label	case 'e' :	1139:1:37247:37255	4196943	39	True				
ANR	4197701	CompoundStatement		117:3:3330:3365	4196943	40					
ANR	4197702	IdentifierDeclStatement	int pid = ( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid ;	1141:3:37273:37334	4196943	0	True				
ANR	4197703	IdentifierDecl	pid = ( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid		4196943	0					
ANR	4197704	IdentifierDeclType	int		4196943	0					
ANR	4197705	Identifier	pid		4196943	1					
ANR	4197706	AssignmentExpression	pid = ( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid		4196943	2		=			
ANR	4197707	Identifier	pid		4196943	0					
ANR	4197708	ConditionalExpression	( input [ 2 ] == ' ' ) ? atoi ( input + 2 ) : core -> dbg -> pid		4196943	1					
ANR	4197709	Condition	input [ 2 ] == ' '		4196943	0					
ANR	4197710	EqualityExpression	input [ 2 ] == ' '		4196943	0		==			
ANR	4197711	ArrayIndexing	input [ 2 ]		4196943	0					
ANR	4197712	Identifier	input		4196943	0					
ANR	4197713	PrimaryExpression	2		4196943	1					
ANR	4197714	PrimaryExpression	' '		4196943	1					
ANR	4197715	CallExpression	atoi ( input + 2 )		4196943	1					
ANR	4197716	Callee	atoi		4196943	0					
ANR	4197717	Identifier	atoi		4196943	0					
ANR	4197718	ArgumentList	input + 2		4196943	1					
ANR	4197719	Argument	input + 2		4196943	0					
ANR	4197720	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197721	Identifier	input		4196943	0					
ANR	4197722	PrimaryExpression	2		4196943	1					
ANR	4197723	PtrMemberAccess	core -> dbg -> pid		4196943	2					
ANR	4197724	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197725	Identifier	core		4196943	0					
ANR	4197726	Identifier	dbg		4196943	1					
ANR	4197727	Identifier	pid		4196943	1					
ANR	4197728	IdentifierDeclStatement	char * exe = r_sys_pid_to_path ( pid ) ;	1142:3:37339:37374	4196943	1	True				
ANR	4197729	IdentifierDecl	* exe = r_sys_pid_to_path ( pid )		4196943	0					
ANR	4197730	IdentifierDeclType	char *		4196943	0					
ANR	4197731	Identifier	exe		4196943	1					
ANR	4197732	AssignmentExpression	* exe = r_sys_pid_to_path ( pid )		4196943	2		=			
ANR	4197733	Identifier	exe		4196943	0					
ANR	4197734	CallExpression	r_sys_pid_to_path ( pid )		4196943	1					
ANR	4197735	Callee	r_sys_pid_to_path		4196943	0					
ANR	4197736	Identifier	r_sys_pid_to_path		4196943	0					
ANR	4197737	ArgumentList	pid		4196943	1					
ANR	4197738	Argument	pid		4196943	0					
ANR	4197739	Identifier	pid		4196943	0					
ANR	4197740	IfStatement	if ( exe )		4196943	2					
ANR	4197741	Condition	exe	1143:7:37383:37385	4196943	0	True				
ANR	4197742	Identifier	exe		4196943	0					
ANR	4197743	CompoundStatement		118:12:3379:3379	4196943	1					
ANR	4197744	ExpressionStatement	r_cons_println ( exe )	1144:4:37394:37414	4196943	0	True				
ANR	4197745	CallExpression	r_cons_println ( exe )		4196943	0					
ANR	4197746	Callee	r_cons_println		4196943	0					
ANR	4197747	Identifier	r_cons_println		4196943	0					
ANR	4197748	ArgumentList	exe		4196943	1					
ANR	4197749	Argument	exe		4196943	0					
ANR	4197750	Identifier	exe		4196943	0					
ANR	4197751	ExpressionStatement	free ( exe )	1145:4:37420:37430	4196943	1	True				
ANR	4197752	CallExpression	free ( exe )		4196943	0					
ANR	4197753	Callee	free		4196943	0					
ANR	4197754	Identifier	free		4196943	0					
ANR	4197755	ArgumentList	exe		4196943	1					
ANR	4197756	Argument	exe		4196943	0					
ANR	4197757	Identifier	exe		4196943	0					
ANR	4197758	BreakStatement	break ;	1148:2:37443:37448	4196943	41	True				
ANR	4197759	Label	case ' ' :	1149:1:37451:37459	4196943	42	True				
ANR	4197760	ExpressionStatement	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 0 )"	1150:2:37472:37564	4196943	43	True				
ANR	4197761	CallExpression	"r_debug_pid_list ( core -> dbg , ( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) ) , 0 )"		4196943	0					
ANR	4197762	Callee	r_debug_pid_list		4196943	0					
ANR	4197763	Identifier	r_debug_pid_list		4196943	0					
ANR	4197764	ArgumentList	core -> dbg		4196943	1					
ANR	4197765	Argument	core -> dbg		4196943	0					
ANR	4197766	PtrMemberAccess	core -> dbg		4196943	0					
ANR	4197767	Identifier	core		4196943	0					
ANR	4197768	Identifier	dbg		4196943	1					
ANR	4197769	Argument	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	1					
ANR	4197770	CastExpression	"( int ) R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	0					
ANR	4197771	CastTarget	int		4196943	0					
ANR	4197772	CallExpression	"R_MAX ( 0 , ( int ) r_num_math ( core -> num , input + 2 ) )"		4196943	1					
ANR	4197773	Callee	R_MAX		4196943	0					
ANR	4197774	Identifier	R_MAX		4196943	0					
ANR	4197775	ArgumentList	0		4196943	1					
ANR	4197776	Argument	0		4196943	0					
ANR	4197777	PrimaryExpression	0		4196943	0					
ANR	4197778	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197779	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		4196943	0					
ANR	4197780	CastTarget	int		4196943	0					
ANR	4197781	CallExpression	"r_num_math ( core -> num , input + 2 )"		4196943	1					
ANR	4197782	Callee	r_num_math		4196943	0					
ANR	4197783	Identifier	r_num_math		4196943	0					
ANR	4197784	ArgumentList	core -> num		4196943	1					
ANR	4197785	Argument	core -> num		4196943	0					
ANR	4197786	PtrMemberAccess	core -> num		4196943	0					
ANR	4197787	Identifier	core		4196943	0					
ANR	4197788	Identifier	num		4196943	1					
ANR	4197789	Argument	input + 2		4196943	1					
ANR	4197790	AdditiveExpression	input + 2		4196943	0		+			
ANR	4197791	Identifier	input		4196943	0					
ANR	4197792	PrimaryExpression	2		4196943	1					
ANR	4197793	Argument	0		4196943	2					
ANR	4197794	PrimaryExpression	0		4196943	0					
ANR	4197795	BreakStatement	break ;	1152:2:37568:37573	4196943	44	True				
ANR	4197796	Label	case '?' :	1153:1:37576:37584	4196943	45	True				
ANR	4197797	Label	default :	1154:1:37596:37603	4196943	46	True				
ANR	4197798	Identifier	default		4196943	0					
ANR	4197799	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dp )"	1155:2:37607:37642	4196943	47	True				
ANR	4197800	CallExpression	"r_core_cmd_help ( core , help_msg_dp )"		4196943	0					
ANR	4197801	Callee	r_core_cmd_help		4196943	0					
ANR	4197802	Identifier	r_core_cmd_help		4196943	0					
ANR	4197803	ArgumentList	core		4196943	1					
ANR	4197804	Argument	core		4196943	0					
ANR	4197805	Identifier	core		4196943	0					
ANR	4197806	Argument	help_msg_dp		4196943	1					
ANR	4197807	Identifier	help_msg_dp		4196943	0					
ANR	4197808	BreakStatement	break ;	1156:2:37646:37651	4196943	48	True				
ANR	4197809	ReturnType	static void		4196943	1					
ANR	4197810	Identifier	cmd_debug_pid		4196943	2					
ANR	4197811	ParameterList	"RCore * core , const char * input"		4196943	3					
ANR	4197812	Parameter	RCore * core	1026:26:33976:33986	4196943	0	True				
ANR	4197813	ParameterType	RCore *		4196943	0					
ANR	4197814	Identifier	core		4196943	1					
ANR	4197815	Parameter	const char * input	1026:39:33989:34005	4196943	1	True				
ANR	4197816	ParameterType	const char *		4196943	0					
ANR	4197817	Identifier	input		4196943	1					
ANR	4197818	CFGEntryNode	ENTRY		4196943		True				
ANR	4197819	CFGExitNode	EXIT		4196943		True				
ANR	4197820	Symbol	core -> dbg -> main_pid		4196943						
ANR	4197821	Symbol	* input		4196943						
ANR	4197822	Symbol	* core		4196943						
ANR	4197823	Symbol	strchr		4196943						
ANR	4197824	Symbol	pid		4196943						
ANR	4197825	Symbol	* core -> dbg -> h		4196943						
ANR	4197826	Symbol	r_num_math		4196943						
ANR	4197827	Symbol	sig		4196943						
ANR	4197828	Symbol	exe		4196943						
ANR	4197829	Symbol	core -> io		4196943						
ANR	4197830	Symbol	core -> dbg -> n_threads		4196943						
ANR	4197831	Symbol	core -> num		4196943						
ANR	4197832	Symbol	* * core		4196943						
ANR	4197833	Symbol	atoi		4196943						
ANR	4197834	Symbol	core -> config		4196943						
ANR	4197835	Symbol	core -> dbg -> forked_pid		4196943						
ANR	4197836	Symbol	core -> file		4196943						
ANR	4197837	Symbol	core -> dbg -> h -> canstep		4196943						
ANR	4197838	Symbol	false		4196943						
ANR	4197839	Symbol	core -> dbg -> h		4196943						
ANR	4197840	Symbol	r_sys_pid_to_path		4196943						
ANR	4197841	Symbol	ptr		4196943						
ANR	4197842	Symbol	r_io_fd_get_tid		4196943						
ANR	4197843	Symbol	core		4196943						
ANR	4197844	Symbol	input		4196943						
ANR	4197845	Symbol	help_msg_dp		4196943						
ANR	4197846	Symbol	* core -> file		4196943						
ANR	4197847	Symbol	* * * core		4196943						
ANR	4197848	Symbol	r_debug_child_fork		4196943						
ANR	4197849	Symbol	r_debug_child_clone		4196943						
ANR	4197850	Symbol	r_io_fd_get_pid		4196943						
ANR	4197851	Symbol	r_str_trim_ro		4196943						
ANR	4197852	Symbol	core -> file -> fd		4196943						
ANR	4197853	Symbol	R_MAX		4196943						
ANR	4197854	Symbol	core -> dbg -> tid		4196943						
ANR	4197855	Symbol	* core -> dbg		4196943						
ANR	4197856	Symbol	core -> dbg -> pid		4196943						
ANR	4197857	Symbol	core -> dbg		4196943						
ANR	4197858	Symbol	* * core -> dbg		4196943						
ANR	4197859	Function	cmd_debug_backtrace	1160:0:37659:38811							
ANR	4197860	FunctionDef	"cmd_debug_backtrace (RCore * core , const char * input)"		4197859	0					
ANR	4197861	CompoundStatement		1160:64:37723:38811	4197859	0					
ANR	4197862	IdentifierDeclStatement	RAnalOp analop ;	1161:1:37726:37740	4197859	0	True				
ANR	4197863	IdentifierDecl	analop		4197859	0					
ANR	4197864	IdentifierDeclType	RAnalOp		4197859	0					
ANR	4197865	Identifier	analop		4197859	1					
ANR	4197866	IdentifierDeclStatement	"ut64 addr , len = r_num_math ( core -> num , input ) ;"	1162:1:37743:37789	4197859	1	True				
ANR	4197867	IdentifierDecl	addr		4197859	0					
ANR	4197868	IdentifierDeclType	ut64		4197859	0					
ANR	4197869	Identifier	addr		4197859	1					
ANR	4197870	IdentifierDecl	"len = r_num_math ( core -> num , input )"		4197859	1					
ANR	4197871	IdentifierDeclType	ut64		4197859	0					
ANR	4197872	Identifier	len		4197859	1					
ANR	4197873	AssignmentExpression	"len = r_num_math ( core -> num , input )"		4197859	2		=			
ANR	4197874	Identifier	len		4197859	0					
ANR	4197875	CallExpression	"r_num_math ( core -> num , input )"		4197859	1					
ANR	4197876	Callee	r_num_math		4197859	0					
ANR	4197877	Identifier	r_num_math		4197859	0					
ANR	4197878	ArgumentList	core -> num		4197859	1					
ANR	4197879	Argument	core -> num		4197859	0					
ANR	4197880	PtrMemberAccess	core -> num		4197859	0					
ANR	4197881	Identifier	core		4197859	0					
ANR	4197882	Identifier	num		4197859	1					
ANR	4197883	Argument	input		4197859	1					
ANR	4197884	Identifier	input		4197859	0					
ANR	4197885	IfStatement	if ( ! len )		4197859	2					
ANR	4197886	Condition	! len	1163:5:37796:37799	4197859	0	True				
ANR	4197887	UnaryOperationExpression	! len		4197859	0					
ANR	4197888	UnaryOperator	!		4197859	0					
ANR	4197889	Identifier	len		4197859	1					
ANR	4197890	CompoundStatement		4:11:78:78	4197859	1					
ANR	4197891	ExpressionStatement	r_bp_traptrace_list ( core -> dbg -> bp )	1164:2:37806:37841	4197859	0	True				
ANR	4197892	CallExpression	r_bp_traptrace_list ( core -> dbg -> bp )		4197859	0					
ANR	4197893	Callee	r_bp_traptrace_list		4197859	0					
ANR	4197894	Identifier	r_bp_traptrace_list		4197859	0					
ANR	4197895	ArgumentList	core -> dbg -> bp		4197859	1					
ANR	4197896	Argument	core -> dbg -> bp		4197859	0					
ANR	4197897	PtrMemberAccess	core -> dbg -> bp		4197859	0					
ANR	4197898	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4197899	Identifier	core		4197859	0					
ANR	4197900	Identifier	dbg		4197859	1					
ANR	4197901	Identifier	bp		4197859	1					
ANR	4197902	ElseStatement	else		4197859	0					
ANR	4197903	CompoundStatement		6:8:127:127	4197859	0					
ANR	4197904	Statement	ut64	1166:2:37855:37858	4197859	0	True				
ANR	4197905	Statement	oaddr	1166:7:37860:37864	4197859	1	True				
ANR	4197906	Statement	=	1166:13:37866:37866	4197859	2	True				
ANR	4197907	Statement	0L	1166:15:37868:37869	4197859	3	True				
ANR	4197908	ExpressionStatement	L	1166:17:37870:37871	4197859	4	True				
ANR	4197909	Identifier	L		4197859	0					
ANR	4197910	Statement	eprintf	1167:2:37875:37881	4197859	5	True				
ANR	4197911	Statement	(	1167:10:37883:37883	4197859	6	True				
ANR	4197912	Statement	"""Trap tracing 0x%08"""	1167:11:37884:37903	4197859	7	True				
ANR	4197913	Statement	PFMT64x	1167:31:37904:37910	4197859	8	True				
ANR	4197914	Statement	"""-0x%08"""	1167:38:37911:37918	4197859	9	True				
ANR	4197915	Statement	PFMT64x	1167:46:37919:37925	4197859	10	True				
ANR	4197916	Statement	"""\\n"""	1167:53:37926:37929	4197859	11	True				
ANR	4197917	Statement	","	1167:57:37930:37930	4197859	12	True				
ANR	4197918	Statement	core	1168:4:37936:37939	4197859	13	True				
ANR	4197919	Statement	->	1168:8:37940:37941	4197859	14	True				
ANR	4197920	Statement	offset	1168:10:37942:37947	4197859	15	True				
ANR	4197921	Statement	","	1168:16:37948:37948	4197859	16	True				
ANR	4197922	Statement	core	1168:18:37950:37953	4197859	17	True				
ANR	4197923	Statement	->	1168:22:37954:37955	4197859	18	True				
ANR	4197924	Statement	offset	1168:24:37956:37961	4197859	19	True				
ANR	4197925	Statement	+	1168:30:37962:37962	4197859	20	True				
ANR	4197926	Statement	len	1168:31:37963:37965	4197859	21	True				
ANR	4197927	Statement	)	1168:34:37966:37966	4197859	22	True				
ANR	4197928	ExpressionStatement		1168:35:37967:37967	4197859	23	True				
ANR	4197929	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	1169:2:37971:38010	4197859	24	True				
ANR	4197930	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4197859	0					
ANR	4197931	Callee	r_reg_arena_swap		4197859	0					
ANR	4197932	Identifier	r_reg_arena_swap		4197859	0					
ANR	4197933	ArgumentList	core -> dbg -> reg		4197859	1					
ANR	4197934	Argument	core -> dbg -> reg		4197859	0					
ANR	4197935	PtrMemberAccess	core -> dbg -> reg		4197859	0					
ANR	4197936	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4197937	Identifier	core		4197859	0					
ANR	4197938	Identifier	dbg		4197859	1					
ANR	4197939	Identifier	reg		4197859	1					
ANR	4197940	Argument	true		4197859	1					
ANR	4197941	Identifier	true		4197859	0					
ANR	4197942	ExpressionStatement	"r_bp_traptrace_reset ( core -> dbg -> bp , true )"	1170:2:38014:38056	4197859	25	True				
ANR	4197943	CallExpression	"r_bp_traptrace_reset ( core -> dbg -> bp , true )"		4197859	0					
ANR	4197944	Callee	r_bp_traptrace_reset		4197859	0					
ANR	4197945	Identifier	r_bp_traptrace_reset		4197859	0					
ANR	4197946	ArgumentList	core -> dbg -> bp		4197859	1					
ANR	4197947	Argument	core -> dbg -> bp		4197859	0					
ANR	4197948	PtrMemberAccess	core -> dbg -> bp		4197859	0					
ANR	4197949	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4197950	Identifier	core		4197859	0					
ANR	4197951	Identifier	dbg		4197859	1					
ANR	4197952	Identifier	bp		4197859	1					
ANR	4197953	Argument	true		4197859	1					
ANR	4197954	Identifier	true		4197859	0					
ANR	4197955	ExpressionStatement	"r_bp_traptrace_add ( core -> dbg -> bp , core -> offset , core -> offset + len )"	1171:2:38060:38126	4197859	26	True				
ANR	4197956	CallExpression	"r_bp_traptrace_add ( core -> dbg -> bp , core -> offset , core -> offset + len )"		4197859	0					
ANR	4197957	Callee	r_bp_traptrace_add		4197859	0					
ANR	4197958	Identifier	r_bp_traptrace_add		4197859	0					
ANR	4197959	ArgumentList	core -> dbg -> bp		4197859	1					
ANR	4197960	Argument	core -> dbg -> bp		4197859	0					
ANR	4197961	PtrMemberAccess	core -> dbg -> bp		4197859	0					
ANR	4197962	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4197963	Identifier	core		4197859	0					
ANR	4197964	Identifier	dbg		4197859	1					
ANR	4197965	Identifier	bp		4197859	1					
ANR	4197966	Argument	core -> offset		4197859	1					
ANR	4197967	PtrMemberAccess	core -> offset		4197859	0					
ANR	4197968	Identifier	core		4197859	0					
ANR	4197969	Identifier	offset		4197859	1					
ANR	4197970	Argument	core -> offset + len		4197859	2					
ANR	4197971	AdditiveExpression	core -> offset + len		4197859	0		+			
ANR	4197972	PtrMemberAccess	core -> offset		4197859	0					
ANR	4197973	Identifier	core		4197859	0					
ANR	4197974	Identifier	offset		4197859	1					
ANR	4197975	Identifier	len		4197859	1					
ANR	4197976	ExpressionStatement	"r_bp_traptrace_enable ( core -> dbg -> bp , true )"	1172:2:38130:38173	4197859	27	True				
ANR	4197977	CallExpression	"r_bp_traptrace_enable ( core -> dbg -> bp , true )"		4197859	0					
ANR	4197978	Callee	r_bp_traptrace_enable		4197859	0					
ANR	4197979	Identifier	r_bp_traptrace_enable		4197859	0					
ANR	4197980	ArgumentList	core -> dbg -> bp		4197859	1					
ANR	4197981	Argument	core -> dbg -> bp		4197859	0					
ANR	4197982	PtrMemberAccess	core -> dbg -> bp		4197859	0					
ANR	4197983	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4197984	Identifier	core		4197859	0					
ANR	4197985	Identifier	dbg		4197859	1					
ANR	4197986	Identifier	bp		4197859	1					
ANR	4197987	Argument	true		4197859	1					
ANR	4197988	Identifier	true		4197859	0					
ANR	4197989	DoStatement	do		4197859	28					
ANR	4197990	CompoundStatement		15:3:461:472	4197859	0					
ANR	4197991	IdentifierDeclStatement	ut8 buf [ 32 ] ;	1174:3:38185:38196	4197859	0	True				
ANR	4197992	IdentifierDecl	buf [ 32 ]		4197859	0					
ANR	4197993	IdentifierDeclType	ut8 [ 32 ]		4197859	0					
ANR	4197994	Identifier	buf		4197859	1					
ANR	4197995	PrimaryExpression	32		4197859	2					
ANR	4197996	ExpressionStatement	r_debug_continue ( core -> dbg )	1175:3:38201:38229	4197859	1	True				
ANR	4197997	CallExpression	r_debug_continue ( core -> dbg )		4197859	0					
ANR	4197998	Callee	r_debug_continue		4197859	0					
ANR	4197999	Identifier	r_debug_continue		4197859	0					
ANR	4198000	ArgumentList	core -> dbg		4197859	1					
ANR	4198001	Argument	core -> dbg		4197859	0					
ANR	4198002	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4198003	Identifier	core		4197859	0					
ANR	4198004	Identifier	dbg		4197859	1					
ANR	4198005	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	1176:3:38234:38274	4197859	2	True				
ANR	4198006	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		4197859	0		=			
ANR	4198007	Identifier	addr		4197859	0					
ANR	4198008	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4197859	1					
ANR	4198009	Callee	r_debug_reg_get		4197859	0					
ANR	4198010	Identifier	r_debug_reg_get		4197859	0					
ANR	4198011	ArgumentList	core -> dbg		4197859	1					
ANR	4198012	Argument	core -> dbg		4197859	0					
ANR	4198013	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4198014	Identifier	core		4197859	0					
ANR	4198015	Identifier	dbg		4197859	1					
ANR	4198016	Argument	"""PC"""		4197859	1					
ANR	4198017	PrimaryExpression	"""PC"""		4197859	0					
ANR	4198018	IfStatement	if ( ! addr )		4197859	3					
ANR	4198019	Condition	! addr	1177:7:38283:38287	4197859	0	True				
ANR	4198020	UnaryOperationExpression	! addr		4197859	0					
ANR	4198021	UnaryOperator	!		4197859	0					
ANR	4198022	Identifier	addr		4197859	1					
ANR	4198023	CompoundStatement		18:14:566:566	4197859	1					
ANR	4198024	ExpressionStatement	"eprintf ( ""pc=0\\n"" )"	1178:4:38296:38314	4197859	0	True				
ANR	4198025	CallExpression	"eprintf ( ""pc=0\\n"" )"		4197859	0					
ANR	4198026	Callee	eprintf		4197859	0					
ANR	4198027	Identifier	eprintf		4197859	0					
ANR	4198028	ArgumentList	"""pc=0\\n"""		4197859	1					
ANR	4198029	Argument	"""pc=0\\n"""		4197859	0					
ANR	4198030	PrimaryExpression	"""pc=0\\n"""		4197859	0					
ANR	4198031	BreakStatement	break ;	1179:4:38320:38325	4197859	1	True				
ANR	4198032	IfStatement	if ( addr == oaddr )		4197859	4					
ANR	4198033	Condition	addr == oaddr	1181:7:38339:38351	4197859	0	True				
ANR	4198034	EqualityExpression	addr == oaddr		4197859	0		==			
ANR	4198035	Identifier	addr		4197859	0					
ANR	4198036	Identifier	oaddr		4197859	1					
ANR	4198037	CompoundStatement		22:22:630:630	4197859	1					
ANR	4198038	ExpressionStatement	"eprintf ( ""pc=opc\\n"" )"	1182:4:38360:38380	4197859	0	True				
ANR	4198039	CallExpression	"eprintf ( ""pc=opc\\n"" )"		4197859	0					
ANR	4198040	Callee	eprintf		4197859	0					
ANR	4198041	Identifier	eprintf		4197859	0					
ANR	4198042	ArgumentList	"""pc=opc\\n"""		4197859	1					
ANR	4198043	Argument	"""pc=opc\\n"""		4197859	0					
ANR	4198044	PrimaryExpression	"""pc=opc\\n"""		4197859	0					
ANR	4198045	BreakStatement	break ;	1183:4:38386:38391	4197859	1	True				
ANR	4198046	ExpressionStatement	oaddr = addr	1185:3:38401:38413	4197859	5	True				
ANR	4198047	AssignmentExpression	oaddr = addr		4197859	0		=			
ANR	4198048	Identifier	oaddr		4197859	0					
ANR	4198049	Identifier	addr		4197859	1					
ANR	4198050	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , 32 )"	1188:3:38548:38586	4197859	6	True				
ANR	4198051	CallExpression	"r_io_read_at ( core -> io , addr , buf , 32 )"		4197859	0					
ANR	4198052	Callee	r_io_read_at		4197859	0					
ANR	4198053	Identifier	r_io_read_at		4197859	0					
ANR	4198054	ArgumentList	core -> io		4197859	1					
ANR	4198055	Argument	core -> io		4197859	0					
ANR	4198056	PtrMemberAccess	core -> io		4197859	0					
ANR	4198057	Identifier	core		4197859	0					
ANR	4198058	Identifier	io		4197859	1					
ANR	4198059	Argument	addr		4197859	1					
ANR	4198060	Identifier	addr		4197859	0					
ANR	4198061	Argument	buf		4197859	2					
ANR	4198062	Identifier	buf		4197859	0					
ANR	4198063	Argument	32		4197859	3					
ANR	4198064	PrimaryExpression	32		4197859	0					
ANR	4198065	ExpressionStatement	"r_anal_op ( core -> anal , & analop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	1189:3:38614:38692	4197859	7	True				
ANR	4198066	CallExpression	"r_anal_op ( core -> anal , & analop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		4197859	0					
ANR	4198067	Callee	r_anal_op		4197859	0					
ANR	4198068	Identifier	r_anal_op		4197859	0					
ANR	4198069	ArgumentList	core -> anal		4197859	1					
ANR	4198070	Argument	core -> anal		4197859	0					
ANR	4198071	PtrMemberAccess	core -> anal		4197859	0					
ANR	4198072	Identifier	core		4197859	0					
ANR	4198073	Identifier	anal		4197859	1					
ANR	4198074	Argument	& analop		4197859	1					
ANR	4198075	UnaryOperationExpression	& analop		4197859	0					
ANR	4198076	UnaryOperator	&		4197859	0					
ANR	4198077	Identifier	analop		4197859	1					
ANR	4198078	Argument	addr		4197859	2					
ANR	4198079	Identifier	addr		4197859	0					
ANR	4198080	Argument	buf		4197859	3					
ANR	4198081	Identifier	buf		4197859	0					
ANR	4198082	Argument	sizeof ( buf )		4197859	4					
ANR	4198083	SizeofExpression	sizeof ( buf )		4197859	0					
ANR	4198084	Sizeof	sizeof		4197859	0					
ANR	4198085	SizeofOperand	buf		4197859	1					
ANR	4198086	Argument	R_ANAL_OP_MASK_BASIC		4197859	5					
ANR	4198087	Identifier	R_ANAL_OP_MASK_BASIC		4197859	0					
ANR	4198088	Condition	"r_bp_traptrace_at ( core -> dbg -> bp , addr , analop . size )"	1190:11:38705:38756	4197859	1	True				
ANR	4198089	CallExpression	"r_bp_traptrace_at ( core -> dbg -> bp , addr , analop . size )"		4197859	0					
ANR	4198090	Callee	r_bp_traptrace_at		4197859	0					
ANR	4198091	Identifier	r_bp_traptrace_at		4197859	0					
ANR	4198092	ArgumentList	core -> dbg -> bp		4197859	1					
ANR	4198093	Argument	core -> dbg -> bp		4197859	0					
ANR	4198094	PtrMemberAccess	core -> dbg -> bp		4197859	0					
ANR	4198095	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4198096	Identifier	core		4197859	0					
ANR	4198097	Identifier	dbg		4197859	1					
ANR	4198098	Identifier	bp		4197859	1					
ANR	4198099	Argument	addr		4197859	1					
ANR	4198100	Identifier	addr		4197859	0					
ANR	4198101	Argument	analop . size		4197859	2					
ANR	4198102	MemberAccess	analop . size		4197859	0					
ANR	4198103	Identifier	analop		4197859	0					
ANR	4198104	Identifier	size		4197859	1					
ANR	4198105	ExpressionStatement	"r_bp_traptrace_enable ( core -> dbg -> bp , false )"	1191:2:38762:38806	4197859	29	True				
ANR	4198106	CallExpression	"r_bp_traptrace_enable ( core -> dbg -> bp , false )"		4197859	0					
ANR	4198107	Callee	r_bp_traptrace_enable		4197859	0					
ANR	4198108	Identifier	r_bp_traptrace_enable		4197859	0					
ANR	4198109	ArgumentList	core -> dbg -> bp		4197859	1					
ANR	4198110	Argument	core -> dbg -> bp		4197859	0					
ANR	4198111	PtrMemberAccess	core -> dbg -> bp		4197859	0					
ANR	4198112	PtrMemberAccess	core -> dbg		4197859	0					
ANR	4198113	Identifier	core		4197859	0					
ANR	4198114	Identifier	dbg		4197859	1					
ANR	4198115	Identifier	bp		4197859	1					
ANR	4198116	Argument	false		4197859	1					
ANR	4198117	Identifier	false		4197859	0					
ANR	4198118	ReturnType	static void		4197859	1					
ANR	4198119	Identifier	cmd_debug_backtrace		4197859	2					
ANR	4198120	ParameterList	"RCore * core , const char * input"		4197859	3					
ANR	4198121	Parameter	RCore * core	1160:32:37691:37701	4197859	0	True				
ANR	4198122	ParameterType	RCore *		4197859	0					
ANR	4198123	Identifier	core		4197859	1					
ANR	4198124	Parameter	const char * input	1160:45:37704:37720	4197859	1	True				
ANR	4198125	ParameterType	const char *		4197859	0					
ANR	4198126	Identifier	input		4197859	1					
ANR	4198127	CFGEntryNode	ENTRY		4197859		True				
ANR	4198128	CFGExitNode	EXIT		4197859		True				
ANR	4198129	Symbol	& analop		4197859						
ANR	4198130	Symbol	r_debug_reg_get		4197859						
ANR	4198131	Symbol	* core		4197859						
ANR	4198132	Symbol	core -> offset		4197859						
ANR	4198133	Symbol	core -> dbg -> bp		4197859						
ANR	4198134	Symbol	core -> anal		4197859						
ANR	4198135	Symbol	R_ANAL_OP_MASK_BASIC		4197859						
ANR	4198136	Symbol	r_num_math		4197859						
ANR	4198137	Symbol	len		4197859						
ANR	4198138	Symbol	core -> io		4197859						
ANR	4198139	Symbol	core -> num		4197859						
ANR	4198140	Symbol	addr		4197859						
ANR	4198141	Symbol	* * core		4197859						
ANR	4198142	Symbol	r_bp_traptrace_at		4197859						
ANR	4198143	Symbol	false		4197859						
ANR	4198144	Symbol	oaddr		4197859						
ANR	4198145	Symbol	core		4197859						
ANR	4198146	Symbol	input		4197859						
ANR	4198147	Symbol	buf		4197859						
ANR	4198148	Symbol	core -> dbg -> reg		4197859						
ANR	4198149	Symbol	analop . size		4197859						
ANR	4198150	Symbol	analop		4197859						
ANR	4198151	Symbol	true		4197859						
ANR	4198152	Symbol	* core -> dbg		4197859						
ANR	4198153	Symbol	core -> dbg		4197859						
ANR	4198154	Function	__r_debug_snap_diff	1195:0:38814:39481							
ANR	4198155	FunctionDef	"__r_debug_snap_diff (RCore * core , int idx)"		4198154	0					
ANR	4198156	CompoundStatement		1195:53:38867:39481	4198154	0					
ANR	4198157	IdentifierDeclStatement	ut32 count = 0 ;	1196:1:38870:38884	4198154	0	True				
ANR	4198158	IdentifierDecl	count = 0		4198154	0					
ANR	4198159	IdentifierDeclType	ut32		4198154	0					
ANR	4198160	Identifier	count		4198154	1					
ANR	4198161	AssignmentExpression	count = 0		4198154	2		=			
ANR	4198162	Identifier	count		4198154	0					
ANR	4198163	PrimaryExpression	0		4198154	1					
ANR	4198164	IdentifierDeclStatement	RDebug * dbg = core -> dbg ;	1197:1:38887:38910	4198154	1	True				
ANR	4198165	IdentifierDecl	* dbg = core -> dbg		4198154	0					
ANR	4198166	IdentifierDeclType	RDebug *		4198154	0					
ANR	4198167	Identifier	dbg		4198154	1					
ANR	4198168	AssignmentExpression	* dbg = core -> dbg		4198154	2		=			
ANR	4198169	Identifier	dbg		4198154	0					
ANR	4198170	PtrMemberAccess	core -> dbg		4198154	1					
ANR	4198171	Identifier	core		4198154	0					
ANR	4198172	Identifier	dbg		4198154	1					
ANR	4198173	IdentifierDeclStatement	ut32 oflags = core -> print -> flags ;	1198:1:38913:38945	4198154	2	True				
ANR	4198174	IdentifierDecl	oflags = core -> print -> flags		4198154	0					
ANR	4198175	IdentifierDeclType	ut32		4198154	0					
ANR	4198176	Identifier	oflags		4198154	1					
ANR	4198177	AssignmentExpression	oflags = core -> print -> flags		4198154	2		=			
ANR	4198178	Identifier	oflags		4198154	0					
ANR	4198179	PtrMemberAccess	core -> print -> flags		4198154	1					
ANR	4198180	PtrMemberAccess	core -> print		4198154	0					
ANR	4198181	Identifier	core		4198154	0					
ANR	4198182	Identifier	print		4198154	1					
ANR	4198183	Identifier	flags		4198154	1					
ANR	4198184	IdentifierDeclStatement	int col = core -> cons -> columns > 123 ;	1199:1:38948:38981	4198154	3	True				
ANR	4198185	IdentifierDecl	col = core -> cons -> columns > 123		4198154	0					
ANR	4198186	IdentifierDeclType	int		4198154	0					
ANR	4198187	Identifier	col		4198154	1					
ANR	4198188	AssignmentExpression	col = core -> cons -> columns > 123		4198154	2		=			
ANR	4198189	Identifier	col		4198154	0					
ANR	4198190	RelationalExpression	core -> cons -> columns > 123		4198154	1		>			
ANR	4198191	PtrMemberAccess	core -> cons -> columns		4198154	0					
ANR	4198192	PtrMemberAccess	core -> cons		4198154	0					
ANR	4198193	Identifier	core		4198154	0					
ANR	4198194	Identifier	cons		4198154	1					
ANR	4198195	Identifier	columns		4198154	1					
ANR	4198196	PrimaryExpression	123		4198154	1					
ANR	4198197	IdentifierDeclStatement	RDebugSnap * snap ;	1200:1:38984:39000	4198154	4	True				
ANR	4198198	IdentifierDecl	* snap		4198154	0					
ANR	4198199	IdentifierDeclType	RDebugSnap *		4198154	0					
ANR	4198200	Identifier	snap		4198154	1					
ANR	4198201	IdentifierDeclStatement	RListIter * iter ;	1201:1:39003:39018	4198154	5	True				
ANR	4198202	IdentifierDecl	* iter		4198154	0					
ANR	4198203	IdentifierDeclType	RListIter *		4198154	0					
ANR	4198204	Identifier	iter		4198154	1					
ANR	4198205	ExpressionStatement	core -> print -> flags |= R_PRINT_FLAGS_DIFFOUT	1202:1:39021:39064	4198154	6	True				
ANR	4198206	AssignmentExpression	core -> print -> flags |= R_PRINT_FLAGS_DIFFOUT		4198154	0		|=			
ANR	4198207	PtrMemberAccess	core -> print -> flags		4198154	0					
ANR	4198208	PtrMemberAccess	core -> print		4198154	0					
ANR	4198209	Identifier	core		4198154	0					
ANR	4198210	Identifier	print		4198154	1					
ANR	4198211	Identifier	flags		4198154	1					
ANR	4198212	Identifier	R_PRINT_FLAGS_DIFFOUT		4198154	1					
ANR	4198213	Statement	r_list_foreach	1203:1:39067:39080	4198154	7	True				
ANR	4198214	Statement	(	1203:16:39082:39082	4198154	8	True				
ANR	4198215	Statement	dbg	1203:17:39083:39085	4198154	9	True				
ANR	4198216	Statement	->	1203:20:39086:39087	4198154	10	True				
ANR	4198217	Statement	snaps	1203:22:39088:39092	4198154	11	True				
ANR	4198218	Statement	","	1203:27:39093:39093	4198154	12	True				
ANR	4198219	Statement	iter	1203:29:39095:39098	4198154	13	True				
ANR	4198220	Statement	","	1203:33:39099:39099	4198154	14	True				
ANR	4198221	Statement	snap	1203:35:39101:39104	4198154	15	True				
ANR	4198222	Statement	)	1203:39:39105:39105	4198154	16	True				
ANR	4198223	CompoundStatement		9:41:239:239	4198154	17					
ANR	4198224	IfStatement	if ( count == idx )		4198154	0					
ANR	4198225	Condition	count == idx	1204:6:39115:39126	4198154	0	True				
ANR	4198226	EqualityExpression	count == idx		4198154	0		==			
ANR	4198227	Identifier	count		4198154	0					
ANR	4198228	Identifier	idx		4198154	1					
ANR	4198229	CompoundStatement		11:3:266:294	4198154	1					
ANR	4198230	IdentifierDeclStatement	ut8 * b = malloc ( snap -> size ) ;	1205:3:39134:39162	4198154	0	True				
ANR	4198231	IdentifierDecl	* b = malloc ( snap -> size )		4198154	0					
ANR	4198232	IdentifierDeclType	ut8 *		4198154	0					
ANR	4198233	Identifier	b		4198154	1					
ANR	4198234	AssignmentExpression	* b = malloc ( snap -> size )		4198154	2		=			
ANR	4198235	Identifier	b		4198154	0					
ANR	4198236	CallExpression	malloc ( snap -> size )		4198154	1					
ANR	4198237	Callee	malloc		4198154	0					
ANR	4198238	Identifier	malloc		4198154	0					
ANR	4198239	ArgumentList	snap -> size		4198154	1					
ANR	4198240	Argument	snap -> size		4198154	0					
ANR	4198241	PtrMemberAccess	snap -> size		4198154	0					
ANR	4198242	Identifier	snap		4198154	0					
ANR	4198243	Identifier	size		4198154	1					
ANR	4198244	IfStatement	if ( ! b )		4198154	1					
ANR	4198245	Condition	! b	1206:7:39171:39172	4198154	0	True				
ANR	4198246	UnaryOperationExpression	! b		4198154	0					
ANR	4198247	UnaryOperator	!		4198154	0					
ANR	4198248	Identifier	b		4198154	1					
ANR	4198249	CompoundStatement		12:11:307:307	4198154	1					
ANR	4198250	ExpressionStatement	"eprintf ( ""Cannot allocate snapshot\\n"" )"	1207:4:39181:39219	4198154	0	True				
ANR	4198251	CallExpression	"eprintf ( ""Cannot allocate snapshot\\n"" )"		4198154	0					
ANR	4198252	Callee	eprintf		4198154	0					
ANR	4198253	Identifier	eprintf		4198154	0					
ANR	4198254	ArgumentList	"""Cannot allocate snapshot\\n"""		4198154	1					
ANR	4198255	Argument	"""Cannot allocate snapshot\\n"""		4198154	0					
ANR	4198256	PrimaryExpression	"""Cannot allocate snapshot\\n"""		4198154	0					
ANR	4198257	ContinueStatement	continue ;	1208:4:39225:39233	4198154	1	True				
ANR	4198258	ExpressionStatement	"dbg -> iob . read_at ( dbg -> iob . io , snap -> addr , b , snap -> size )"	1210:3:39243:39301	4198154	2	True				
ANR	4198259	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , snap -> addr , b , snap -> size )"		4198154	0					
ANR	4198260	Callee	dbg -> iob . read_at		4198154	0					
ANR	4198261	MemberAccess	dbg -> iob . read_at		4198154	0					
ANR	4198262	PtrMemberAccess	dbg -> iob		4198154	0					
ANR	4198263	Identifier	dbg		4198154	0					
ANR	4198264	Identifier	iob		4198154	1					
ANR	4198265	Identifier	read_at		4198154	1					
ANR	4198266	ArgumentList	dbg -> iob . io		4198154	1					
ANR	4198267	Argument	dbg -> iob . io		4198154	0					
ANR	4198268	MemberAccess	dbg -> iob . io		4198154	0					
ANR	4198269	PtrMemberAccess	dbg -> iob		4198154	0					
ANR	4198270	Identifier	dbg		4198154	0					
ANR	4198271	Identifier	iob		4198154	1					
ANR	4198272	Identifier	io		4198154	1					
ANR	4198273	Argument	snap -> addr		4198154	1					
ANR	4198274	PtrMemberAccess	snap -> addr		4198154	0					
ANR	4198275	Identifier	snap		4198154	0					
ANR	4198276	Identifier	addr		4198154	1					
ANR	4198277	Argument	b		4198154	2					
ANR	4198278	Identifier	b		4198154	0					
ANR	4198279	Argument	snap -> size		4198154	3					
ANR	4198280	PtrMemberAccess	snap -> size		4198154	0					
ANR	4198281	Identifier	snap		4198154	0					
ANR	4198282	Identifier	size		4198154	1					
ANR	4198283	ExpressionStatement	"r_print_hexdiff ( core -> print , snap -> addr , snap -> data , snap -> addr , b , snap -> size , col )"	1211:3:39306:39406	4198154	3	True				
ANR	4198284	CallExpression	"r_print_hexdiff ( core -> print , snap -> addr , snap -> data , snap -> addr , b , snap -> size , col )"		4198154	0					
ANR	4198285	Callee	r_print_hexdiff		4198154	0					
ANR	4198286	Identifier	r_print_hexdiff		4198154	0					
ANR	4198287	ArgumentList	core -> print		4198154	1					
ANR	4198288	Argument	core -> print		4198154	0					
ANR	4198289	PtrMemberAccess	core -> print		4198154	0					
ANR	4198290	Identifier	core		4198154	0					
ANR	4198291	Identifier	print		4198154	1					
ANR	4198292	Argument	snap -> addr		4198154	1					
ANR	4198293	PtrMemberAccess	snap -> addr		4198154	0					
ANR	4198294	Identifier	snap		4198154	0					
ANR	4198295	Identifier	addr		4198154	1					
ANR	4198296	Argument	snap -> data		4198154	2					
ANR	4198297	PtrMemberAccess	snap -> data		4198154	0					
ANR	4198298	Identifier	snap		4198154	0					
ANR	4198299	Identifier	data		4198154	1					
ANR	4198300	Argument	snap -> addr		4198154	3					
ANR	4198301	PtrMemberAccess	snap -> addr		4198154	0					
ANR	4198302	Identifier	snap		4198154	0					
ANR	4198303	Identifier	addr		4198154	1					
ANR	4198304	Argument	b		4198154	4					
ANR	4198305	Identifier	b		4198154	0					
ANR	4198306	Argument	snap -> size		4198154	5					
ANR	4198307	PtrMemberAccess	snap -> size		4198154	0					
ANR	4198308	Identifier	snap		4198154	0					
ANR	4198309	Identifier	size		4198154	1					
ANR	4198310	Argument	col		4198154	6					
ANR	4198311	Identifier	col		4198154	0					
ANR	4198312	ExpressionStatement	free ( b )	1215:3:39411:39419	4198154	4	True				
ANR	4198313	CallExpression	free ( b )		4198154	0					
ANR	4198314	Callee	free		4198154	0					
ANR	4198315	Identifier	free		4198154	0					
ANR	4198316	ArgumentList	b		4198154	1					
ANR	4198317	Argument	b		4198154	0					
ANR	4198318	Identifier	b		4198154	0					
ANR	4198319	ExpressionStatement	count ++	1217:2:39427:39435	4198154	1	True				
ANR	4198320	PostIncDecOperationExpression	count ++		4198154	0					
ANR	4198321	Identifier	count		4198154	0					
ANR	4198322	IncDec	++		4198154	1					
ANR	4198323	ExpressionStatement	core -> print -> flags = oflags	1219:1:39441:39468	4198154	18	True				
ANR	4198324	AssignmentExpression	core -> print -> flags = oflags		4198154	0		=			
ANR	4198325	PtrMemberAccess	core -> print -> flags		4198154	0					
ANR	4198326	PtrMemberAccess	core -> print		4198154	0					
ANR	4198327	Identifier	core		4198154	0					
ANR	4198328	Identifier	print		4198154	1					
ANR	4198329	Identifier	flags		4198154	1					
ANR	4198330	Identifier	oflags		4198154	1					
ANR	4198331	ReturnStatement	return 0 ;	1220:1:39471:39479	4198154	19	True				
ANR	4198332	PrimaryExpression	0		4198154	0					
ANR	4198333	ReturnType	static int		4198154	1					
ANR	4198334	Identifier	__r_debug_snap_diff		4198154	2					
ANR	4198335	ParameterList	"RCore * core , int idx"		4198154	3					
ANR	4198336	Parameter	RCore * core	1195:31:38845:38855	4198154	0	True				
ANR	4198337	ParameterType	RCore *		4198154	0					
ANR	4198338	Identifier	core		4198154	1					
ANR	4198339	Parameter	int idx	1195:44:38858:38864	4198154	1	True				
ANR	4198340	ParameterType	int		4198154	0					
ANR	4198341	Identifier	idx		4198154	1					
ANR	4198342	CFGEntryNode	ENTRY		4198154		True				
ANR	4198343	CFGExitNode	EXIT		4198154		True				
ANR	4198344	CFGErrorNode	ERROR		4198154		True				
ANR	4198345	Symbol	oflags		4198154						
ANR	4198346	Symbol	col		4198154						
ANR	4198347	Symbol	dbg -> iob . io		4198154						
ANR	4198348	Symbol	snap -> size		4198154						
ANR	4198349	Symbol	* core -> cons		4198154						
ANR	4198350	Symbol	* core		4198154						
ANR	4198351	Symbol	core -> cons -> columns		4198154						
ANR	4198352	Symbol	snap -> data		4198154						
ANR	4198353	Symbol	core -> cons		4198154						
ANR	4198354	Symbol	snap -> addr		4198154						
ANR	4198355	Symbol	* * core		4198154						
ANR	4198356	Symbol	malloc		4198154						
ANR	4198357	Symbol	b		4198154						
ANR	4198358	Symbol	dbg -> iob		4198154						
ANR	4198359	Symbol	* snap		4198154						
ANR	4198360	Symbol	count		4198154						
ANR	4198361	Symbol	dbg		4198154						
ANR	4198362	Symbol	iter		4198154						
ANR	4198363	Symbol	* dbg		4198154						
ANR	4198364	Symbol	core		4198154						
ANR	4198365	Symbol	* core -> print		4198154						
ANR	4198366	Symbol	R_PRINT_FLAGS_DIFFOUT		4198154						
ANR	4198367	Symbol	idx		4198154						
ANR	4198368	Symbol	core -> print		4198154						
ANR	4198369	Symbol	core -> print -> flags		4198154						
ANR	4198370	Symbol	core -> dbg		4198154						
ANR	4198371	Symbol	snap		4198154						
ANR	4198372	Function	cmd_debug_map_snapshot	1223:0:39484:41631							
ANR	4198373	FunctionDef	"cmd_debug_map_snapshot (RCore * core , const char * input)"		4198372	0					
ANR	4198374	CompoundStatement		1223:66:39550:41631	4198372	0					
ANR	4198375	SwitchStatement	switch ( * input )		4198372	0					
ANR	4198376	Condition	* input	1224:9:39561:39566	4198372	0	True				
ANR	4198377	UnaryOperationExpression	* input		4198372	0					
ANR	4198378	UnaryOperator	*		4198372	0					
ANR	4198379	Identifier	input		4198372	1					
ANR	4198380	CompoundStatement		2:17:18:18	4198372	1					
ANR	4198381	Label	case 'f' :	1225:1:39572:39580	4198372	0	True				
ANR	4198382	CompoundStatement		6:3:53:69	4198372	1					
ANR	4198383	IdentifierDeclStatement	char * file ;	1227:3:39589:39599	4198372	0	True				
ANR	4198384	IdentifierDecl	* file		4198372	0					
ANR	4198385	IdentifierDeclType	char *		4198372	0					
ANR	4198386	Identifier	file		4198372	1					
ANR	4198387	IdentifierDeclStatement	RDebugSnap * snap ;	1228:3:39604:39620	4198372	1	True				
ANR	4198388	IdentifierDecl	* snap		4198372	0					
ANR	4198389	IdentifierDeclType	RDebugSnap *		4198372	0					
ANR	4198390	Identifier	snap		4198372	1					
ANR	4198391	IfStatement	if ( input [ 1 ] == ' ' )		4198372	2					
ANR	4198392	Condition	input [ 1 ] == ' '	1229:7:39629:39643	4198372	0	True				
ANR	4198393	EqualityExpression	input [ 1 ] == ' '		4198372	0		==			
ANR	4198394	ArrayIndexing	input [ 1 ]		4198372	0					
ANR	4198395	Identifier	input		4198372	0					
ANR	4198396	PrimaryExpression	1		4198372	1					
ANR	4198397	PrimaryExpression	' '		4198372	1					
ANR	4198398	CompoundStatement		7:24:95:95	4198372	1					
ANR	4198399	ExpressionStatement	file = strdup ( input + 2 )	1230:4:39652:39677	4198372	0	True				
ANR	4198400	AssignmentExpression	file = strdup ( input + 2 )		4198372	0		=			
ANR	4198401	Identifier	file		4198372	0					
ANR	4198402	CallExpression	strdup ( input + 2 )		4198372	1					
ANR	4198403	Callee	strdup		4198372	0					
ANR	4198404	Identifier	strdup		4198372	0					
ANR	4198405	ArgumentList	input + 2		4198372	1					
ANR	4198406	Argument	input + 2		4198372	0					
ANR	4198407	AdditiveExpression	input + 2		4198372	0		+			
ANR	4198408	Identifier	input		4198372	0					
ANR	4198409	PrimaryExpression	2		4198372	1					
ANR	4198410	ElseStatement	else		4198372	0					
ANR	4198411	CompoundStatement		9:10:138:138	4198372	0					
ANR	4198412	Statement	file	1232:4:39695:39698	4198372	0	True				
ANR	4198413	Statement	=	1232:9:39700:39700	4198372	1	True				
ANR	4198414	Statement	r_str_newf	1232:11:39702:39711	4198372	2	True				
ANR	4198415	Statement	(	1232:22:39713:39713	4198372	3	True				
ANR	4198416	Statement	"""0x%08"""	1232:23:39714:39720	4198372	4	True				
ANR	4198417	Statement	PFMT64x	1232:30:39721:39727	4198372	5	True				
ANR	4198418	Statement	""".dump"""	1232:37:39728:39734	4198372	6	True				
ANR	4198419	Statement	","	1232:44:39735:39735	4198372	7	True				
ANR	4198420	Statement	core	1232:46:39737:39740	4198372	8	True				
ANR	4198421	Statement	->	1232:50:39741:39742	4198372	9	True				
ANR	4198422	Statement	offset	1232:52:39743:39748	4198372	10	True				
ANR	4198423	Statement	)	1232:58:39749:39749	4198372	11	True				
ANR	4198424	ExpressionStatement		1232:59:39750:39750	4198372	12	True				
ANR	4198425	ExpressionStatement	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"	1234:3:39760:39809	4198372	3	True				
ANR	4198426	AssignmentExpression	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"		4198372	0		=			
ANR	4198427	Identifier	snap		4198372	0					
ANR	4198428	CallExpression	"r_debug_snap_get ( core -> dbg , core -> offset )"		4198372	1					
ANR	4198429	Callee	r_debug_snap_get		4198372	0					
ANR	4198430	Identifier	r_debug_snap_get		4198372	0					
ANR	4198431	ArgumentList	core -> dbg		4198372	1					
ANR	4198432	Argument	core -> dbg		4198372	0					
ANR	4198433	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198434	Identifier	core		4198372	0					
ANR	4198435	Identifier	dbg		4198372	1					
ANR	4198436	Argument	core -> offset		4198372	1					
ANR	4198437	PtrMemberAccess	core -> offset		4198372	0					
ANR	4198438	Identifier	core		4198372	0					
ANR	4198439	Identifier	offset		4198372	1					
ANR	4198440	IfStatement	if ( ! snap )		4198372	4					
ANR	4198441	Condition	! snap	1235:7:39818:39822	4198372	0	True				
ANR	4198442	UnaryOperationExpression	! snap		4198372	0					
ANR	4198443	UnaryOperator	!		4198372	0					
ANR	4198444	Identifier	snap		4198372	1					
ANR	4198445	CompoundStatement		13:14:274:274	4198372	1					
ANR	4198446	ExpressionStatement	"r_debug_snap ( core -> dbg , core -> offset )"	1236:4:39831:39869	4198372	0	True				
ANR	4198447	CallExpression	"r_debug_snap ( core -> dbg , core -> offset )"		4198372	0					
ANR	4198448	Callee	r_debug_snap		4198372	0					
ANR	4198449	Identifier	r_debug_snap		4198372	0					
ANR	4198450	ArgumentList	core -> dbg		4198372	1					
ANR	4198451	Argument	core -> dbg		4198372	0					
ANR	4198452	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198453	Identifier	core		4198372	0					
ANR	4198454	Identifier	dbg		4198372	1					
ANR	4198455	Argument	core -> offset		4198372	1					
ANR	4198456	PtrMemberAccess	core -> offset		4198372	0					
ANR	4198457	Identifier	core		4198372	0					
ANR	4198458	Identifier	offset		4198372	1					
ANR	4198459	ExpressionStatement	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"	1237:4:39875:39924	4198372	1	True				
ANR	4198460	AssignmentExpression	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"		4198372	0		=			
ANR	4198461	Identifier	snap		4198372	0					
ANR	4198462	CallExpression	"r_debug_snap_get ( core -> dbg , core -> offset )"		4198372	1					
ANR	4198463	Callee	r_debug_snap_get		4198372	0					
ANR	4198464	Identifier	r_debug_snap_get		4198372	0					
ANR	4198465	ArgumentList	core -> dbg		4198372	1					
ANR	4198466	Argument	core -> dbg		4198372	0					
ANR	4198467	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198468	Identifier	core		4198372	0					
ANR	4198469	Identifier	dbg		4198372	1					
ANR	4198470	Argument	core -> offset		4198372	1					
ANR	4198471	PtrMemberAccess	core -> offset		4198372	0					
ANR	4198472	Identifier	core		4198372	0					
ANR	4198473	Identifier	offset		4198372	1					
ANR	4198474	IfStatement	if ( snap )		4198372	5					
ANR	4198475	Condition	snap	1239:7:39938:39941	4198372	0	True				
ANR	4198476	Identifier	snap		4198372	0					
ANR	4198477	CompoundStatement		19:4:416:454	4198372	1					
ANR	4198478	IdentifierDeclStatement	int fsz = 0 ;	1240:4:39950:39961	4198372	0	True				
ANR	4198479	IdentifierDecl	fsz = 0		4198372	0					
ANR	4198480	IdentifierDeclType	int		4198372	0					
ANR	4198481	Identifier	fsz		4198372	1					
ANR	4198482	AssignmentExpression	fsz = 0		4198372	2		=			
ANR	4198483	Identifier	fsz		4198372	0					
ANR	4198484	PrimaryExpression	0		4198372	1					
ANR	4198485	IdentifierDeclStatement	"char * data = r_file_slurp ( file , & fsz ) ;"	1241:4:39967:40005	4198372	1	True				
ANR	4198486	IdentifierDecl	"* data = r_file_slurp ( file , & fsz )"		4198372	0					
ANR	4198487	IdentifierDeclType	char *		4198372	0					
ANR	4198488	Identifier	data		4198372	1					
ANR	4198489	AssignmentExpression	"* data = r_file_slurp ( file , & fsz )"		4198372	2		=			
ANR	4198490	Identifier	data		4198372	0					
ANR	4198491	CallExpression	"r_file_slurp ( file , & fsz )"		4198372	1					
ANR	4198492	Callee	r_file_slurp		4198372	0					
ANR	4198493	Identifier	r_file_slurp		4198372	0					
ANR	4198494	ArgumentList	file		4198372	1					
ANR	4198495	Argument	file		4198372	0					
ANR	4198496	Identifier	file		4198372	0					
ANR	4198497	Argument	& fsz		4198372	1					
ANR	4198498	UnaryOperationExpression	& fsz		4198372	0					
ANR	4198499	UnaryOperator	&		4198372	0					
ANR	4198500	Identifier	fsz		4198372	1					
ANR	4198501	IfStatement	if ( data )		4198372	2					
ANR	4198502	Condition	data	1242:8:40015:40018	4198372	0	True				
ANR	4198503	Identifier	data		4198372	0					
ANR	4198504	CompoundStatement		20:14:470:470	4198372	1					
ANR	4198505	IfStatement	if ( fsz >= snap -> size )		4198372	0					
ANR	4198506	Condition	fsz >= snap -> size	1243:9:40032:40048	4198372	0	True				
ANR	4198507	RelationalExpression	fsz >= snap -> size		4198372	0		>=			
ANR	4198508	Identifier	fsz		4198372	0					
ANR	4198509	PtrMemberAccess	snap -> size		4198372	1					
ANR	4198510	Identifier	snap		4198372	0					
ANR	4198511	Identifier	size		4198372	1					
ANR	4198512	CompoundStatement		21:28:500:500	4198372	1					
ANR	4198513	ExpressionStatement	"memcpy ( snap -> data , data , snap -> size )"	1244:6:40059:40096	4198372	0	True				
ANR	4198514	CallExpression	"memcpy ( snap -> data , data , snap -> size )"		4198372	0					
ANR	4198515	Callee	memcpy		4198372	0					
ANR	4198516	Identifier	memcpy		4198372	0					
ANR	4198517	ArgumentList	snap -> data		4198372	1					
ANR	4198518	Argument	snap -> data		4198372	0					
ANR	4198519	PtrMemberAccess	snap -> data		4198372	0					
ANR	4198520	Identifier	snap		4198372	0					
ANR	4198521	Identifier	data		4198372	1					
ANR	4198522	Argument	data		4198372	1					
ANR	4198523	Identifier	data		4198372	0					
ANR	4198524	Argument	snap -> size		4198372	2					
ANR	4198525	PtrMemberAccess	snap -> size		4198372	0					
ANR	4198526	Identifier	snap		4198372	0					
ANR	4198527	Identifier	size		4198372	1					
ANR	4198528	ElseStatement	else		4198372	0					
ANR	4198529	CompoundStatement		23:12:559:559	4198372	0					
ANR	4198530	ExpressionStatement	"eprintf ( ""This file is smaller than the snapshot size\\n"" )"	1246:6:40118:40175	4198372	0	True				
ANR	4198531	CallExpression	"eprintf ( ""This file is smaller than the snapshot size\\n"" )"		4198372	0					
ANR	4198532	Callee	eprintf		4198372	0					
ANR	4198533	Identifier	eprintf		4198372	0					
ANR	4198534	ArgumentList	"""This file is smaller than the snapshot size\\n"""		4198372	1					
ANR	4198535	Argument	"""This file is smaller than the snapshot size\\n"""		4198372	0					
ANR	4198536	PrimaryExpression	"""This file is smaller than the snapshot size\\n"""		4198372	0					
ANR	4198537	ExpressionStatement	free ( data )	1248:5:40189:40200	4198372	1	True				
ANR	4198538	CallExpression	free ( data )		4198372	0					
ANR	4198539	Callee	free		4198372	0					
ANR	4198540	Identifier	free		4198372	0					
ANR	4198541	ArgumentList	data		4198372	1					
ANR	4198542	Argument	data		4198372	0					
ANR	4198543	Identifier	data		4198372	0					
ANR	4198544	ElseStatement	else		4198372	0					
ANR	4198545	ExpressionStatement	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"	1249:11:40213:40250	4198372	0	True				
ANR	4198546	CallExpression	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"		4198372	0					
ANR	4198547	Callee	eprintf		4198372	0					
ANR	4198548	Identifier	eprintf		4198372	0					
ANR	4198549	ArgumentList	"""Cannot slurp '%s'\\n"""		4198372	1					
ANR	4198550	Argument	"""Cannot slurp '%s'\\n"""		4198372	0					
ANR	4198551	PrimaryExpression	"""Cannot slurp '%s'\\n"""		4198372	0					
ANR	4198552	Argument	file		4198372	1					
ANR	4198553	Identifier	file		4198372	0					
ANR	4198554	ElseStatement	else		4198372	0					
ANR	4198555	CompoundStatement		28:10:711:711	4198372	0					
ANR	4198556	Statement	eprintf	1251:4:40268:40274	4198372	0	True				
ANR	4198557	Statement	(	1251:12:40276:40276	4198372	1	True				
ANR	4198558	Statement	"""Unable to find a snapshot for 0x%08"""	1251:13:40277:40313	4198372	2	True				
ANR	4198559	Statement	PFMT64x	1251:50:40314:40320	4198372	3	True				
ANR	4198560	Statement	"""\\n"""	1251:57:40321:40324	4198372	4	True				
ANR	4198561	Statement	","	1251:61:40325:40325	4198372	5	True				
ANR	4198562	Statement	core	1251:63:40327:40330	4198372	6	True				
ANR	4198563	Statement	->	1251:67:40331:40332	4198372	7	True				
ANR	4198564	Statement	offset	1251:69:40333:40338	4198372	8	True				
ANR	4198565	Statement	)	1251:75:40339:40339	4198372	9	True				
ANR	4198566	ExpressionStatement		1251:76:40340:40340	4198372	10	True				
ANR	4198567	ExpressionStatement	free ( file )	1253:3:40350:40361	4198372	6	True				
ANR	4198568	CallExpression	free ( file )		4198372	0					
ANR	4198569	Callee	free		4198372	0					
ANR	4198570	Identifier	free		4198372	0					
ANR	4198571	ArgumentList	file		4198372	1					
ANR	4198572	Argument	file		4198372	0					
ANR	4198573	Identifier	file		4198372	0					
ANR	4198574	BreakStatement	break ;	1255:2:40369:40374	4198372	2	True				
ANR	4198575	Label	case 't' :	1256:1:40377:40385	4198372	3	True				
ANR	4198576	CompoundStatement		37:3:858:874	4198372	4					
ANR	4198577	IdentifierDeclStatement	char * file ;	1258:3:40394:40404	4198372	0	True				
ANR	4198578	IdentifierDecl	* file		4198372	0					
ANR	4198579	IdentifierDeclType	char *		4198372	0					
ANR	4198580	Identifier	file		4198372	1					
ANR	4198581	IdentifierDeclStatement	RDebugSnap * snap ;	1259:3:40409:40425	4198372	1	True				
ANR	4198582	IdentifierDecl	* snap		4198372	0					
ANR	4198583	IdentifierDeclType	RDebugSnap *		4198372	0					
ANR	4198584	Identifier	snap		4198372	1					
ANR	4198585	IfStatement	if ( input [ 1 ] == ' ' )		4198372	2					
ANR	4198586	Condition	input [ 1 ] == ' '	1260:7:40434:40448	4198372	0	True				
ANR	4198587	EqualityExpression	input [ 1 ] == ' '		4198372	0		==			
ANR	4198588	ArrayIndexing	input [ 1 ]		4198372	0					
ANR	4198589	Identifier	input		4198372	0					
ANR	4198590	PrimaryExpression	1		4198372	1					
ANR	4198591	PrimaryExpression	' '		4198372	1					
ANR	4198592	CompoundStatement		38:24:900:900	4198372	1					
ANR	4198593	ExpressionStatement	file = strdup ( input + 2 )	1261:4:40457:40482	4198372	0	True				
ANR	4198594	AssignmentExpression	file = strdup ( input + 2 )		4198372	0		=			
ANR	4198595	Identifier	file		4198372	0					
ANR	4198596	CallExpression	strdup ( input + 2 )		4198372	1					
ANR	4198597	Callee	strdup		4198372	0					
ANR	4198598	Identifier	strdup		4198372	0					
ANR	4198599	ArgumentList	input + 2		4198372	1					
ANR	4198600	Argument	input + 2		4198372	0					
ANR	4198601	AdditiveExpression	input + 2		4198372	0		+			
ANR	4198602	Identifier	input		4198372	0					
ANR	4198603	PrimaryExpression	2		4198372	1					
ANR	4198604	ElseStatement	else		4198372	0					
ANR	4198605	CompoundStatement		40:10:943:943	4198372	0					
ANR	4198606	Statement	file	1263:4:40500:40503	4198372	0	True				
ANR	4198607	Statement	=	1263:9:40505:40505	4198372	1	True				
ANR	4198608	Statement	r_str_newf	1263:11:40507:40516	4198372	2	True				
ANR	4198609	Statement	(	1263:22:40518:40518	4198372	3	True				
ANR	4198610	Statement	"""0x%08"""	1263:23:40519:40525	4198372	4	True				
ANR	4198611	Statement	PFMT64x	1263:30:40526:40532	4198372	5	True				
ANR	4198612	Statement	""".dump"""	1263:37:40533:40539	4198372	6	True				
ANR	4198613	Statement	","	1263:44:40540:40540	4198372	7	True				
ANR	4198614	Statement	core	1263:46:40542:40545	4198372	8	True				
ANR	4198615	Statement	->	1263:50:40546:40547	4198372	9	True				
ANR	4198616	Statement	offset	1263:52:40548:40553	4198372	10	True				
ANR	4198617	Statement	)	1263:58:40554:40554	4198372	11	True				
ANR	4198618	ExpressionStatement		1263:59:40555:40555	4198372	12	True				
ANR	4198619	ExpressionStatement	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"	1265:3:40565:40614	4198372	3	True				
ANR	4198620	AssignmentExpression	"snap = r_debug_snap_get ( core -> dbg , core -> offset )"		4198372	0		=			
ANR	4198621	Identifier	snap		4198372	0					
ANR	4198622	CallExpression	"r_debug_snap_get ( core -> dbg , core -> offset )"		4198372	1					
ANR	4198623	Callee	r_debug_snap_get		4198372	0					
ANR	4198624	Identifier	r_debug_snap_get		4198372	0					
ANR	4198625	ArgumentList	core -> dbg		4198372	1					
ANR	4198626	Argument	core -> dbg		4198372	0					
ANR	4198627	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198628	Identifier	core		4198372	0					
ANR	4198629	Identifier	dbg		4198372	1					
ANR	4198630	Argument	core -> offset		4198372	1					
ANR	4198631	PtrMemberAccess	core -> offset		4198372	0					
ANR	4198632	Identifier	core		4198372	0					
ANR	4198633	Identifier	offset		4198372	1					
ANR	4198634	IfStatement	if ( snap )		4198372	4					
ANR	4198635	Condition	snap	1266:7:40623:40626	4198372	0	True				
ANR	4198636	Identifier	snap		4198372	0					
ANR	4198637	CompoundStatement		44:13:1078:1078	4198372	1					
ANR	4198638	IfStatement	"if ( ! r_file_dump ( file , snap -> data , snap -> size , 0 ) )"		4198372	0					
ANR	4198639	Condition	"! r_file_dump ( file , snap -> data , snap -> size , 0 )"	1267:8:40639:40684	4198372	0	True				
ANR	4198640	UnaryOperationExpression	"! r_file_dump ( file , snap -> data , snap -> size , 0 )"		4198372	0					
ANR	4198641	UnaryOperator	!		4198372	0					
ANR	4198642	CallExpression	"r_file_dump ( file , snap -> data , snap -> size , 0 )"		4198372	1					
ANR	4198643	Callee	r_file_dump		4198372	0					
ANR	4198644	Identifier	r_file_dump		4198372	0					
ANR	4198645	ArgumentList	file		4198372	1					
ANR	4198646	Argument	file		4198372	0					
ANR	4198647	Identifier	file		4198372	0					
ANR	4198648	Argument	snap -> data		4198372	1					
ANR	4198649	PtrMemberAccess	snap -> data		4198372	0					
ANR	4198650	Identifier	snap		4198372	0					
ANR	4198651	Identifier	data		4198372	1					
ANR	4198652	Argument	snap -> size		4198372	2					
ANR	4198653	PtrMemberAccess	snap -> size		4198372	0					
ANR	4198654	Identifier	snap		4198372	0					
ANR	4198655	Identifier	size		4198372	1					
ANR	4198656	Argument	0		4198372	3					
ANR	4198657	PrimaryExpression	0		4198372	0					
ANR	4198658	CompoundStatement		45:56:1136:1136	4198372	1					
ANR	4198659	ExpressionStatement	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"	1268:5:40694:40731	4198372	0	True				
ANR	4198660	CallExpression	"eprintf ( ""Cannot slurp '%s'\\n"" , file )"		4198372	0					
ANR	4198661	Callee	eprintf		4198372	0					
ANR	4198662	Identifier	eprintf		4198372	0					
ANR	4198663	ArgumentList	"""Cannot slurp '%s'\\n"""		4198372	1					
ANR	4198664	Argument	"""Cannot slurp '%s'\\n"""		4198372	0					
ANR	4198665	PrimaryExpression	"""Cannot slurp '%s'\\n"""		4198372	0					
ANR	4198666	Argument	file		4198372	1					
ANR	4198667	Identifier	file		4198372	0					
ANR	4198668	ElseStatement	else		4198372	0					
ANR	4198669	CompoundStatement		48:10:1198:1198	4198372	0					
ANR	4198670	Statement	eprintf	1271:4:40755:40761	4198372	0	True				
ANR	4198671	Statement	(	1271:12:40763:40763	4198372	1	True				
ANR	4198672	Statement	"""Unable to find a snapshot for 0x%08"""	1271:13:40764:40800	4198372	2	True				
ANR	4198673	Statement	PFMT64x	1271:50:40801:40807	4198372	3	True				
ANR	4198674	Statement	"""\\n"""	1271:57:40808:40811	4198372	4	True				
ANR	4198675	Statement	","	1271:61:40812:40812	4198372	5	True				
ANR	4198676	Statement	core	1271:63:40814:40817	4198372	6	True				
ANR	4198677	Statement	->	1271:67:40818:40819	4198372	7	True				
ANR	4198678	Statement	offset	1271:69:40820:40825	4198372	8	True				
ANR	4198679	Statement	)	1271:75:40826:40826	4198372	9	True				
ANR	4198680	ExpressionStatement		1271:76:40827:40827	4198372	10	True				
ANR	4198681	ExpressionStatement	free ( file )	1273:3:40837:40848	4198372	5	True				
ANR	4198682	CallExpression	free ( file )		4198372	0					
ANR	4198683	Callee	free		4198372	0					
ANR	4198684	Identifier	free		4198372	0					
ANR	4198685	ArgumentList	file		4198372	1					
ANR	4198686	Argument	file		4198372	0					
ANR	4198687	Identifier	file		4198372	0					
ANR	4198688	BreakStatement	break ;	1275:2:40856:40861	4198372	5	True				
ANR	4198689	Label	case '?' :	1276:1:40864:40872	4198372	6	True				
ANR	4198690	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dms )"	1277:2:40876:40912	4198372	7	True				
ANR	4198691	CallExpression	"r_core_cmd_help ( core , help_msg_dms )"		4198372	0					
ANR	4198692	Callee	r_core_cmd_help		4198372	0					
ANR	4198693	Identifier	r_core_cmd_help		4198372	0					
ANR	4198694	ArgumentList	core		4198372	1					
ANR	4198695	Argument	core		4198372	0					
ANR	4198696	Identifier	core		4198372	0					
ANR	4198697	Argument	help_msg_dms		4198372	1					
ANR	4198698	Identifier	help_msg_dms		4198372	0					
ANR	4198699	BreakStatement	break ;	1278:2:40916:40921	4198372	8	True				
ANR	4198700	Label	case '-' :	1279:1:40924:40932	4198372	9	True				
ANR	4198701	IfStatement	if ( input [ 1 ] == '*' )		4198372	10					
ANR	4198702	Condition	input [ 1 ] == '*'	1280:6:40940:40952	4198372	0	True				
ANR	4198703	EqualityExpression	input [ 1 ] == '*'		4198372	0		==			
ANR	4198704	ArrayIndexing	input [ 1 ]		4198372	0					
ANR	4198705	Identifier	input		4198372	0					
ANR	4198706	PrimaryExpression	1		4198372	1					
ANR	4198707	PrimaryExpression	'*'		4198372	1					
ANR	4198708	CompoundStatement		58:21:1404:1404	4198372	1					
ANR	4198709	ExpressionStatement	"r_debug_snap_delete ( core -> dbg , - 1 )"	1281:3:40960:40995	4198372	0	True				
ANR	4198710	CallExpression	"r_debug_snap_delete ( core -> dbg , - 1 )"		4198372	0					
ANR	4198711	Callee	r_debug_snap_delete		4198372	0					
ANR	4198712	Identifier	r_debug_snap_delete		4198372	0					
ANR	4198713	ArgumentList	core -> dbg		4198372	1					
ANR	4198714	Argument	core -> dbg		4198372	0					
ANR	4198715	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198716	Identifier	core		4198372	0					
ANR	4198717	Identifier	dbg		4198372	1					
ANR	4198718	Argument	- 1		4198372	1					
ANR	4198719	UnaryOperationExpression	- 1		4198372	0					
ANR	4198720	UnaryOperator	-		4198372	0					
ANR	4198721	PrimaryExpression	1		4198372	1					
ANR	4198722	ElseStatement	else		4198372	0					
ANR	4198723	CompoundStatement		60:9:1455:1455	4198372	0					
ANR	4198724	ExpressionStatement	"r_debug_snap_delete ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"	1283:3:41011:41077	4198372	0	True				
ANR	4198725	CallExpression	"r_debug_snap_delete ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"		4198372	0					
ANR	4198726	Callee	r_debug_snap_delete		4198372	0					
ANR	4198727	Identifier	r_debug_snap_delete		4198372	0					
ANR	4198728	ArgumentList	core -> dbg		4198372	1					
ANR	4198729	Argument	core -> dbg		4198372	0					
ANR	4198730	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198731	Identifier	core		4198372	0					
ANR	4198732	Identifier	dbg		4198372	1					
ANR	4198733	Argument	"r_num_math ( core -> num , input + 1 )"		4198372	1					
ANR	4198734	CallExpression	"r_num_math ( core -> num , input + 1 )"		4198372	0					
ANR	4198735	Callee	r_num_math		4198372	0					
ANR	4198736	Identifier	r_num_math		4198372	0					
ANR	4198737	ArgumentList	core -> num		4198372	1					
ANR	4198738	Argument	core -> num		4198372	0					
ANR	4198739	PtrMemberAccess	core -> num		4198372	0					
ANR	4198740	Identifier	core		4198372	0					
ANR	4198741	Identifier	num		4198372	1					
ANR	4198742	Argument	input + 1		4198372	1					
ANR	4198743	AdditiveExpression	input + 1		4198372	0		+			
ANR	4198744	Identifier	input		4198372	0					
ANR	4198745	PrimaryExpression	1		4198372	1					
ANR	4198746	BreakStatement	break ;	1285:2:41085:41090	4198372	11	True				
ANR	4198747	Label	case ' ' :	1286:1:41093:41101	4198372	12	True				
ANR	4198748	ExpressionStatement	"r_debug_snap ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"	1287:2:41105:41164	4198372	13	True				
ANR	4198749	CallExpression	"r_debug_snap ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"		4198372	0					
ANR	4198750	Callee	r_debug_snap		4198372	0					
ANR	4198751	Identifier	r_debug_snap		4198372	0					
ANR	4198752	ArgumentList	core -> dbg		4198372	1					
ANR	4198753	Argument	core -> dbg		4198372	0					
ANR	4198754	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198755	Identifier	core		4198372	0					
ANR	4198756	Identifier	dbg		4198372	1					
ANR	4198757	Argument	"r_num_math ( core -> num , input + 1 )"		4198372	1					
ANR	4198758	CallExpression	"r_num_math ( core -> num , input + 1 )"		4198372	0					
ANR	4198759	Callee	r_num_math		4198372	0					
ANR	4198760	Identifier	r_num_math		4198372	0					
ANR	4198761	ArgumentList	core -> num		4198372	1					
ANR	4198762	Argument	core -> num		4198372	0					
ANR	4198763	PtrMemberAccess	core -> num		4198372	0					
ANR	4198764	Identifier	core		4198372	0					
ANR	4198765	Identifier	num		4198372	1					
ANR	4198766	Argument	input + 1		4198372	1					
ANR	4198767	AdditiveExpression	input + 1		4198372	0		+			
ANR	4198768	Identifier	input		4198372	0					
ANR	4198769	PrimaryExpression	1		4198372	1					
ANR	4198770	BreakStatement	break ;	1288:2:41168:41173	4198372	14	True				
ANR	4198771	Label	case 'A' :	1289:1:41176:41184	4198372	15	True				
ANR	4198772	ExpressionStatement	"r_debug_snap_set_idx ( core -> dbg , atoi ( input + 1 ) )"	1290:2:41188:41238	4198372	16	True				
ANR	4198773	CallExpression	"r_debug_snap_set_idx ( core -> dbg , atoi ( input + 1 ) )"		4198372	0					
ANR	4198774	Callee	r_debug_snap_set_idx		4198372	0					
ANR	4198775	Identifier	r_debug_snap_set_idx		4198372	0					
ANR	4198776	ArgumentList	core -> dbg		4198372	1					
ANR	4198777	Argument	core -> dbg		4198372	0					
ANR	4198778	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198779	Identifier	core		4198372	0					
ANR	4198780	Identifier	dbg		4198372	1					
ANR	4198781	Argument	atoi ( input + 1 )		4198372	1					
ANR	4198782	CallExpression	atoi ( input + 1 )		4198372	0					
ANR	4198783	Callee	atoi		4198372	0					
ANR	4198784	Identifier	atoi		4198372	0					
ANR	4198785	ArgumentList	input + 1		4198372	1					
ANR	4198786	Argument	input + 1		4198372	0					
ANR	4198787	AdditiveExpression	input + 1		4198372	0		+			
ANR	4198788	Identifier	input		4198372	0					
ANR	4198789	PrimaryExpression	1		4198372	1					
ANR	4198790	BreakStatement	break ;	1291:2:41242:41247	4198372	17	True				
ANR	4198791	Label	case 'C' :	1292:1:41250:41258	4198372	18	True				
ANR	4198792	ExpressionStatement	"r_debug_snap_comment ( core -> dbg , atoi ( input + 1 ) , strchr ( input , ' ' ) )"	1293:2:41262:41333	4198372	19	True				
ANR	4198793	CallExpression	"r_debug_snap_comment ( core -> dbg , atoi ( input + 1 ) , strchr ( input , ' ' ) )"		4198372	0					
ANR	4198794	Callee	r_debug_snap_comment		4198372	0					
ANR	4198795	Identifier	r_debug_snap_comment		4198372	0					
ANR	4198796	ArgumentList	core -> dbg		4198372	1					
ANR	4198797	Argument	core -> dbg		4198372	0					
ANR	4198798	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198799	Identifier	core		4198372	0					
ANR	4198800	Identifier	dbg		4198372	1					
ANR	4198801	Argument	atoi ( input + 1 )		4198372	1					
ANR	4198802	CallExpression	atoi ( input + 1 )		4198372	0					
ANR	4198803	Callee	atoi		4198372	0					
ANR	4198804	Identifier	atoi		4198372	0					
ANR	4198805	ArgumentList	input + 1		4198372	1					
ANR	4198806	Argument	input + 1		4198372	0					
ANR	4198807	AdditiveExpression	input + 1		4198372	0		+			
ANR	4198808	Identifier	input		4198372	0					
ANR	4198809	PrimaryExpression	1		4198372	1					
ANR	4198810	Argument	"strchr ( input , ' ' )"		4198372	2					
ANR	4198811	CallExpression	"strchr ( input , ' ' )"		4198372	0					
ANR	4198812	Callee	strchr		4198372	0					
ANR	4198813	Identifier	strchr		4198372	0					
ANR	4198814	ArgumentList	input		4198372	1					
ANR	4198815	Argument	input		4198372	0					
ANR	4198816	Identifier	input		4198372	0					
ANR	4198817	Argument	' '		4198372	1					
ANR	4198818	PrimaryExpression	' '		4198372	0					
ANR	4198819	BreakStatement	break ;	1294:2:41337:41342	4198372	20	True				
ANR	4198820	Label	case 'd' :	1295:1:41345:41353	4198372	21	True				
ANR	4198821	ExpressionStatement	"__r_debug_snap_diff ( core , atoi ( input + 1 ) )"	1296:2:41357:41401	4198372	22	True				
ANR	4198822	CallExpression	"__r_debug_snap_diff ( core , atoi ( input + 1 ) )"		4198372	0					
ANR	4198823	Callee	__r_debug_snap_diff		4198372	0					
ANR	4198824	Identifier	__r_debug_snap_diff		4198372	0					
ANR	4198825	ArgumentList	core		4198372	1					
ANR	4198826	Argument	core		4198372	0					
ANR	4198827	Identifier	core		4198372	0					
ANR	4198828	Argument	atoi ( input + 1 )		4198372	1					
ANR	4198829	CallExpression	atoi ( input + 1 )		4198372	0					
ANR	4198830	Callee	atoi		4198372	0					
ANR	4198831	Identifier	atoi		4198372	0					
ANR	4198832	ArgumentList	input + 1		4198372	1					
ANR	4198833	Argument	input + 1		4198372	0					
ANR	4198834	AdditiveExpression	input + 1		4198372	0		+			
ANR	4198835	Identifier	input		4198372	0					
ANR	4198836	PrimaryExpression	1		4198372	1					
ANR	4198837	BreakStatement	break ;	1297:2:41405:41410	4198372	23	True				
ANR	4198838	Label	case 'a' :	1298:1:41413:41421	4198372	24	True				
ANR	4198839	ExpressionStatement	"r_debug_snap_all ( core -> dbg , 0 )"	1299:2:41425:41456	4198372	25	True				
ANR	4198840	CallExpression	"r_debug_snap_all ( core -> dbg , 0 )"		4198372	0					
ANR	4198841	Callee	r_debug_snap_all		4198372	0					
ANR	4198842	Identifier	r_debug_snap_all		4198372	0					
ANR	4198843	ArgumentList	core -> dbg		4198372	1					
ANR	4198844	Argument	core -> dbg		4198372	0					
ANR	4198845	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198846	Identifier	core		4198372	0					
ANR	4198847	Identifier	dbg		4198372	1					
ANR	4198848	Argument	0		4198372	1					
ANR	4198849	PrimaryExpression	0		4198372	0					
ANR	4198850	BreakStatement	break ;	1300:2:41460:41465	4198372	26	True				
ANR	4198851	Label	case 'w' :	1301:1:41468:41476	4198372	27	True				
ANR	4198852	ExpressionStatement	"r_debug_snap_all ( core -> dbg , R_PERM_RW )"	1302:2:41480:41519	4198372	28	True				
ANR	4198853	CallExpression	"r_debug_snap_all ( core -> dbg , R_PERM_RW )"		4198372	0					
ANR	4198854	Callee	r_debug_snap_all		4198372	0					
ANR	4198855	Identifier	r_debug_snap_all		4198372	0					
ANR	4198856	ArgumentList	core -> dbg		4198372	1					
ANR	4198857	Argument	core -> dbg		4198372	0					
ANR	4198858	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198859	Identifier	core		4198372	0					
ANR	4198860	Identifier	dbg		4198372	1					
ANR	4198861	Argument	R_PERM_RW		4198372	1					
ANR	4198862	Identifier	R_PERM_RW		4198372	0					
ANR	4198863	BreakStatement	break ;	1303:2:41523:41528	4198372	29	True				
ANR	4198864	Label	case 0 :	1304:1:41531:41537	4198372	30	True				
ANR	4198865	Label	case 'j' :	1305:1:41540:41548	4198372	31	True				
ANR	4198866	Label	case '*' :	1306:1:41551:41559	4198372	32	True				
ANR	4198867	ExpressionStatement	"r_debug_snap_list ( core -> dbg , - 1 , input [ 0 ] )"	1307:2:41563:41606	4198372	33	True				
ANR	4198868	CallExpression	"r_debug_snap_list ( core -> dbg , - 1 , input [ 0 ] )"		4198372	0					
ANR	4198869	Callee	r_debug_snap_list		4198372	0					
ANR	4198870	Identifier	r_debug_snap_list		4198372	0					
ANR	4198871	ArgumentList	core -> dbg		4198372	1					
ANR	4198872	Argument	core -> dbg		4198372	0					
ANR	4198873	PtrMemberAccess	core -> dbg		4198372	0					
ANR	4198874	Identifier	core		4198372	0					
ANR	4198875	Identifier	dbg		4198372	1					
ANR	4198876	Argument	- 1		4198372	1					
ANR	4198877	UnaryOperationExpression	- 1		4198372	0					
ANR	4198878	UnaryOperator	-		4198372	0					
ANR	4198879	PrimaryExpression	1		4198372	1					
ANR	4198880	Argument	input [ 0 ]		4198372	2					
ANR	4198881	ArrayIndexing	input [ 0 ]		4198372	0					
ANR	4198882	Identifier	input		4198372	0					
ANR	4198883	PrimaryExpression	0		4198372	1					
ANR	4198884	BreakStatement	break ;	1308:2:41610:41615	4198372	34	True				
ANR	4198885	ReturnStatement	return 0 ;	1310:1:41621:41629	4198372	1	True				
ANR	4198886	PrimaryExpression	0		4198372	0					
ANR	4198887	ReturnType	static int		4198372	1					
ANR	4198888	Identifier	cmd_debug_map_snapshot		4198372	2					
ANR	4198889	ParameterList	"RCore * core , const char * input"		4198372	3					
ANR	4198890	Parameter	RCore * core	1223:34:39518:39528	4198372	0	True				
ANR	4198891	ParameterType	RCore *		4198372	0					
ANR	4198892	Identifier	core		4198372	1					
ANR	4198893	Parameter	const char * input	1223:47:39531:39547	4198372	1	True				
ANR	4198894	ParameterType	const char *		4198372	0					
ANR	4198895	Identifier	input		4198372	1					
ANR	4198896	CFGEntryNode	ENTRY		4198372		True				
ANR	4198897	CFGExitNode	EXIT		4198372		True				
ANR	4198898	Symbol	atoi		4198372						
ANR	4198899	Symbol	r_file_slurp		4198372						
ANR	4198900	Symbol	snap -> size		4198372						
ANR	4198901	Symbol	data		4198372						
ANR	4198902	Symbol	* snap		4198372						
ANR	4198903	Symbol	r_debug_snap_get		4198372						
ANR	4198904	Symbol	* input		4198372						
ANR	4198905	Symbol	* core		4198372						
ANR	4198906	Symbol	core -> offset		4198372						
ANR	4198907	Symbol	strchr		4198372						
ANR	4198908	Symbol	fsz		4198372						
ANR	4198909	Symbol	r_num_math		4198372						
ANR	4198910	Symbol	help_msg_dms		4198372						
ANR	4198911	Symbol	core		4198372						
ANR	4198912	Symbol	input		4198372						
ANR	4198913	Symbol	snap -> data		4198372						
ANR	4198914	Symbol	file		4198372						
ANR	4198915	Symbol	R_PERM_RW		4198372						
ANR	4198916	Symbol	& fsz		4198372						
ANR	4198917	Symbol	r_file_dump		4198372						
ANR	4198918	Symbol	strdup		4198372						
ANR	4198919	Symbol	core -> num		4198372						
ANR	4198920	Symbol	snap		4198372						
ANR	4198921	Symbol	core -> dbg		4198372						
ANR	4198922	Function	grab_bits	1313:0:41634:42186							
ANR	4198923	FunctionDef	"grab_bits (RCore * core , const char * arg , int * pcbits2)"		4198922	0					
ANR	4198924	CompoundStatement		1313:65:41699:42186	4198922	0					
ANR	4198925	IdentifierDeclStatement	int pcbits = atoi ( arg ) ;	1314:1:41702:41725	4198922	0	True				
ANR	4198926	IdentifierDecl	pcbits = atoi ( arg )		4198922	0					
ANR	4198927	IdentifierDeclType	int		4198922	0					
ANR	4198928	Identifier	pcbits		4198922	1					
ANR	4198929	AssignmentExpression	pcbits = atoi ( arg )		4198922	2		=			
ANR	4198930	Identifier	pcbits		4198922	0					
ANR	4198931	CallExpression	atoi ( arg )		4198922	1					
ANR	4198932	Callee	atoi		4198922	0					
ANR	4198933	Identifier	atoi		4198922	0					
ANR	4198934	ArgumentList	arg		4198922	1					
ANR	4198935	Argument	arg		4198922	0					
ANR	4198936	Identifier	arg		4198922	0					
ANR	4198937	IfStatement	if ( pcbits2 )		4198922	1					
ANR	4198938	Condition	pcbits2	1315:5:41732:41738	4198922	0	True				
ANR	4198939	Identifier	pcbits2		4198922	0					
ANR	4198940	CompoundStatement		3:14:41:41	4198922	1					
ANR	4198941	ExpressionStatement	* pcbits2 = 0	1316:2:41745:41757	4198922	0	True				
ANR	4198942	AssignmentExpression	* pcbits2 = 0		4198922	0		=			
ANR	4198943	UnaryOperationExpression	* pcbits2		4198922	0					
ANR	4198944	UnaryOperator	*		4198922	0					
ANR	4198945	Identifier	pcbits2		4198922	1					
ANR	4198946	PrimaryExpression	0		4198922	1					
ANR	4198947	IfStatement	if ( pcbits < 1 )		4198922	2					
ANR	4198948	Condition	pcbits < 1	1318:5:41767:41776	4198922	0	True				
ANR	4198949	RelationalExpression	pcbits < 1		4198922	0		<			
ANR	4198950	Identifier	pcbits		4198922	0					
ANR	4198951	PrimaryExpression	1		4198922	1					
ANR	4198952	CompoundStatement		6:17:79:79	4198922	1					
ANR	4198953	IfStatement	"if ( ! strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" ) )"		4198922	0					
ANR	4198954	Condition	"! strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" )"	1319:6:41787:41842	4198922	0	True				
ANR	4198955	UnaryOperationExpression	"! strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" )"		4198922	0					
ANR	4198956	UnaryOperator	!		4198922	0					
ANR	4198957	CallExpression	"strcmp ( r_config_get ( core -> config , ""asm.arch"" ) , ""avr"" )"		4198922	1					
ANR	4198958	Callee	strcmp		4198922	0					
ANR	4198959	Identifier	strcmp		4198922	0					
ANR	4198960	ArgumentList	"r_config_get ( core -> config , ""asm.arch"" )"		4198922	1					
ANR	4198961	Argument	"r_config_get ( core -> config , ""asm.arch"" )"		4198922	0					
ANR	4198962	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4198922	0					
ANR	4198963	Callee	r_config_get		4198922	0					
ANR	4198964	Identifier	r_config_get		4198922	0					
ANR	4198965	ArgumentList	core -> config		4198922	1					
ANR	4198966	Argument	core -> config		4198922	0					
ANR	4198967	PtrMemberAccess	core -> config		4198922	0					
ANR	4198968	Identifier	core		4198922	0					
ANR	4198969	Identifier	config		4198922	1					
ANR	4198970	Argument	"""asm.arch"""		4198922	1					
ANR	4198971	PrimaryExpression	"""asm.arch"""		4198922	0					
ANR	4198972	Argument	"""avr"""		4198922	1					
ANR	4198973	PrimaryExpression	"""avr"""		4198922	0					
ANR	4198974	CompoundStatement		7:64:145:145	4198922	1					
ANR	4198975	ExpressionStatement	pcbits = 8	1320:3:41850:41860	4198922	0	True				
ANR	4198976	AssignmentExpression	pcbits = 8		4198922	0		=			
ANR	4198977	Identifier	pcbits		4198922	0					
ANR	4198978	PrimaryExpression	8		4198922	1					
ANR	4198979	IfStatement	if ( pcbits2 )		4198922	1					
ANR	4198980	Condition	pcbits2	1321:7:41869:41875	4198922	0	True				
ANR	4198981	Identifier	pcbits2		4198922	0					
ANR	4198982	CompoundStatement		9:16:178:178	4198922	1					
ANR	4198983	ExpressionStatement	* pcbits2 = 32	1322:4:41884:41897	4198922	0	True				
ANR	4198984	AssignmentExpression	* pcbits2 = 32		4198922	0		=			
ANR	4198985	UnaryOperationExpression	* pcbits2		4198922	0					
ANR	4198986	UnaryOperator	*		4198922	0					
ANR	4198987	Identifier	pcbits2		4198922	1					
ANR	4198988	PrimaryExpression	32		4198922	1					
ANR	4198989	ElseStatement	else		4198922	0					
ANR	4198990	CompoundStatement		14:3:291:345	4198922	0					
ANR	4198991	IdentifierDeclStatement	"const char * pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	1325:3:41918:41986	4198922	0	True				
ANR	4198992	IdentifierDecl	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4198922	0					
ANR	4198993	IdentifierDeclType	const char *		4198922	0					
ANR	4198994	Identifier	pcname		4198922	1					
ANR	4198995	AssignmentExpression	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4198922	2		=			
ANR	4198996	Identifier	pcname		4198922	0					
ANR	4198997	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4198922	1					
ANR	4198998	Callee	r_reg_get_name		4198922	0					
ANR	4198999	Identifier	r_reg_get_name		4198922	0					
ANR	4199000	ArgumentList	core -> anal -> reg		4198922	1					
ANR	4199001	Argument	core -> anal -> reg		4198922	0					
ANR	4199002	PtrMemberAccess	core -> anal -> reg		4198922	0					
ANR	4199003	PtrMemberAccess	core -> anal		4198922	0					
ANR	4199004	Identifier	core		4198922	0					
ANR	4199005	Identifier	anal		4198922	1					
ANR	4199006	Identifier	reg		4198922	1					
ANR	4199007	Argument	R_REG_NAME_PC		4198922	1					
ANR	4199008	Identifier	R_REG_NAME_PC		4198922	0					
ANR	4199009	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( core -> anal -> reg , pcname , 0 ) ;"	1326:3:41991:42045	4198922	1	True				
ANR	4199010	IdentifierDecl	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		4198922	0					
ANR	4199011	IdentifierDeclType	RRegItem *		4198922	0					
ANR	4199012	Identifier	reg		4198922	1					
ANR	4199013	AssignmentExpression	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		4198922	2		=			
ANR	4199014	Identifier	reg		4198922	0					
ANR	4199015	CallExpression	"r_reg_get ( core -> anal -> reg , pcname , 0 )"		4198922	1					
ANR	4199016	Callee	r_reg_get		4198922	0					
ANR	4199017	Identifier	r_reg_get		4198922	0					
ANR	4199018	ArgumentList	core -> anal -> reg		4198922	1					
ANR	4199019	Argument	core -> anal -> reg		4198922	0					
ANR	4199020	PtrMemberAccess	core -> anal -> reg		4198922	0					
ANR	4199021	PtrMemberAccess	core -> anal		4198922	0					
ANR	4199022	Identifier	core		4198922	0					
ANR	4199023	Identifier	anal		4198922	1					
ANR	4199024	Identifier	reg		4198922	1					
ANR	4199025	Argument	pcname		4198922	1					
ANR	4199026	Identifier	pcname		4198922	0					
ANR	4199027	Argument	0		4198922	2					
ANR	4199028	PrimaryExpression	0		4198922	0					
ANR	4199029	IfStatement	if ( reg )		4198922	2					
ANR	4199030	Condition	reg	1327:7:42054:42056	4198922	0	True				
ANR	4199031	Identifier	reg		4198922	0					
ANR	4199032	CompoundStatement		15:12:359:359	4198922	1					
ANR	4199033	IfStatement	if ( core -> assembler -> bits != reg -> size )		4198922	0					
ANR	4199034	Condition	core -> assembler -> bits != reg -> size	1328:8:42069:42102	4198922	0	True				
ANR	4199035	EqualityExpression	core -> assembler -> bits != reg -> size		4198922	0		!=			
ANR	4199036	PtrMemberAccess	core -> assembler -> bits		4198922	0					
ANR	4199037	PtrMemberAccess	core -> assembler		4198922	0					
ANR	4199038	Identifier	core		4198922	0					
ANR	4199039	Identifier	assembler		4198922	1					
ANR	4199040	Identifier	bits		4198922	1					
ANR	4199041	PtrMemberAccess	reg -> size		4198922	1					
ANR	4199042	Identifier	reg		4198922	0					
ANR	4199043	Identifier	size		4198922	1					
ANR	4199044	ExpressionStatement	pcbits = reg -> size	1329:5:42110:42128	4198922	1	True				
ANR	4199045	AssignmentExpression	pcbits = reg -> size		4198922	0		=			
ANR	4199046	Identifier	pcbits		4198922	0					
ANR	4199047	PtrMemberAccess	reg -> size		4198922	1					
ANR	4199048	Identifier	reg		4198922	0					
ANR	4199049	Identifier	size		4198922	1					
ANR	4199050	ReturnStatement	return pcbits ? pcbits : core -> anal -> bits ;	1333:1:42143:42184	4198922	3	True				
ANR	4199051	ConditionalExpression	pcbits ? pcbits : core -> anal -> bits		4198922	0					
ANR	4199052	Condition	pcbits		4198922	0					
ANR	4199053	Identifier	pcbits		4198922	0					
ANR	4199054	Identifier	pcbits		4198922	1					
ANR	4199055	PtrMemberAccess	core -> anal -> bits		4198922	2					
ANR	4199056	PtrMemberAccess	core -> anal		4198922	0					
ANR	4199057	Identifier	core		4198922	0					
ANR	4199058	Identifier	anal		4198922	1					
ANR	4199059	Identifier	bits		4198922	1					
ANR	4199060	ReturnType	static int		4198922	1					
ANR	4199061	Identifier	grab_bits		4198922	2					
ANR	4199062	ParameterList	"RCore * core , const char * arg , int * pcbits2"		4198922	3					
ANR	4199063	Parameter	RCore * core	1313:21:41655:41665	4198922	0	True				
ANR	4199064	ParameterType	RCore *		4198922	0					
ANR	4199065	Identifier	core		4198922	1					
ANR	4199066	Parameter	const char * arg	1313:34:41668:41682	4198922	1	True				
ANR	4199067	ParameterType	const char *		4198922	0					
ANR	4199068	Identifier	arg		4198922	1					
ANR	4199069	Parameter	int * pcbits2	1313:51:41685:41696	4198922	2	True				
ANR	4199070	ParameterType	int *		4198922	0					
ANR	4199071	Identifier	pcbits2		4198922	1					
ANR	4199072	CFGEntryNode	ENTRY		4198922		True				
ANR	4199073	CFGExitNode	EXIT		4198922		True				
ANR	4199074	Symbol	core -> anal -> reg		4198922						
ANR	4199075	Symbol	R_REG_NAME_PC		4198922						
ANR	4199076	Symbol	r_config_get		4198922						
ANR	4199077	Symbol	* core		4198922						
ANR	4199078	Symbol	core -> assembler -> bits		4198922						
ANR	4199079	Symbol	core -> assembler		4198922						
ANR	4199080	Symbol	core -> anal		4198922						
ANR	4199081	Symbol	* core -> assembler		4198922						
ANR	4199082	Symbol	reg		4198922						
ANR	4199083	Symbol	arg		4198922						
ANR	4199084	Symbol	pcbits2		4198922						
ANR	4199085	Symbol	* * core		4198922						
ANR	4199086	Symbol	r_reg_get		4198922						
ANR	4199087	Symbol	atoi		4198922						
ANR	4199088	Symbol	core -> config		4198922						
ANR	4199089	Symbol	strcmp		4198922						
ANR	4199090	Symbol	core -> anal -> bits		4198922						
ANR	4199091	Symbol	core		4198922						
ANR	4199092	Symbol	* core -> anal		4198922						
ANR	4199093	Symbol	r_reg_get_name		4198922						
ANR	4199094	Symbol	pcbits		4198922						
ANR	4199095	Symbol	reg -> size		4198922						
ANR	4199096	Symbol	pcname		4198922						
ANR	4199097	Symbol	* pcbits2		4198922						
ANR	4199098	Symbol	* reg		4198922						
ANR	4199099	Function	dump_maps	1337:0:42224:43684							
ANR	4199100	FunctionDef	"dump_maps (RCore * core , int perm , const char * filename)"		4199099	0					
ANR	4199101	CompoundStatement		1337:66:42290:43684	4199099	0					
ANR	4199102	IdentifierDeclStatement	RDebugMap * map ;	1338:1:42293:42307	4199099	0	True				
ANR	4199103	IdentifierDecl	* map		4199099	0					
ANR	4199104	IdentifierDeclType	RDebugMap *		4199099	0					
ANR	4199105	Identifier	map		4199099	1					
ANR	4199106	IdentifierDeclStatement	RListIter * iter ;	1339:1:42310:42325	4199099	1	True				
ANR	4199107	IdentifierDecl	* iter		4199099	0					
ANR	4199108	IdentifierDeclType	RListIter *		4199099	0					
ANR	4199109	Identifier	iter		4199099	1					
ANR	4199110	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1340:1:42328:42356	4199099	2	True				
ANR	4199111	CallExpression	r_debug_map_sync ( core -> dbg )		4199099	0					
ANR	4199112	Callee	r_debug_map_sync		4199099	0					
ANR	4199113	Identifier	r_debug_map_sync		4199099	0					
ANR	4199114	ArgumentList	core -> dbg		4199099	1					
ANR	4199115	Argument	core -> dbg		4199099	0					
ANR	4199116	PtrMemberAccess	core -> dbg		4199099	0					
ANR	4199117	Identifier	core		4199099	0					
ANR	4199118	Identifier	dbg		4199099	1					
ANR	4199119	IdentifierDeclStatement	ut64 addr = core -> offset ;	1341:1:42389:42413	4199099	3	True				
ANR	4199120	IdentifierDecl	addr = core -> offset		4199099	0					
ANR	4199121	IdentifierDeclType	ut64		4199099	0					
ANR	4199122	Identifier	addr		4199099	1					
ANR	4199123	AssignmentExpression	addr = core -> offset		4199099	2		=			
ANR	4199124	Identifier	addr		4199099	0					
ANR	4199125	PtrMemberAccess	core -> offset		4199099	1					
ANR	4199126	Identifier	core		4199099	0					
ANR	4199127	Identifier	offset		4199099	1					
ANR	4199128	IdentifierDeclStatement	int do_dump = false ;	1342:1:42416:42435	4199099	4	True				
ANR	4199129	IdentifierDecl	do_dump = false		4199099	0					
ANR	4199130	IdentifierDeclType	int		4199099	0					
ANR	4199131	Identifier	do_dump		4199099	1					
ANR	4199132	AssignmentExpression	do_dump = false		4199099	2		=			
ANR	4199133	Identifier	false		4199099	0					
ANR	4199134	Identifier	false		4199099	1					
ANR	4199135	IdentifierDeclStatement	int ret = r_list_empty ( core -> dbg -> maps ) ? false : true ;	1343:1:42438:42490	4199099	5	True				
ANR	4199136	IdentifierDecl	ret = r_list_empty ( core -> dbg -> maps ) ? false : true		4199099	0					
ANR	4199137	IdentifierDeclType	int		4199099	0					
ANR	4199138	Identifier	ret		4199099	1					
ANR	4199139	AssignmentExpression	ret = r_list_empty ( core -> dbg -> maps ) ? false : true		4199099	2		=			
ANR	4199140	Identifier	ret		4199099	0					
ANR	4199141	ConditionalExpression	r_list_empty ( core -> dbg -> maps ) ? false : true		4199099	1					
ANR	4199142	Condition	r_list_empty ( core -> dbg -> maps )		4199099	0					
ANR	4199143	CallExpression	r_list_empty ( core -> dbg -> maps )		4199099	0					
ANR	4199144	Callee	r_list_empty		4199099	0					
ANR	4199145	Identifier	r_list_empty		4199099	0					
ANR	4199146	ArgumentList	core -> dbg -> maps		4199099	1					
ANR	4199147	Argument	core -> dbg -> maps		4199099	0					
ANR	4199148	PtrMemberAccess	core -> dbg -> maps		4199099	0					
ANR	4199149	PtrMemberAccess	core -> dbg		4199099	0					
ANR	4199150	Identifier	core		4199099	0					
ANR	4199151	Identifier	dbg		4199099	1					
ANR	4199152	Identifier	maps		4199099	1					
ANR	4199153	Identifier	false		4199099	1					
ANR	4199154	Identifier	true		4199099	2					
ANR	4199155	Statement	r_list_foreach	1344:1:42493:42506	4199099	6	True				
ANR	4199156	Statement	(	1344:16:42508:42508	4199099	7	True				
ANR	4199157	Statement	core	1344:17:42509:42512	4199099	8	True				
ANR	4199158	Statement	->	1344:21:42513:42514	4199099	9	True				
ANR	4199159	Statement	dbg	1344:23:42515:42517	4199099	10	True				
ANR	4199160	Statement	->	1344:26:42518:42519	4199099	11	True				
ANR	4199161	Statement	maps	1344:28:42520:42523	4199099	12	True				
ANR	4199162	Statement	","	1344:32:42524:42524	4199099	13	True				
ANR	4199163	Statement	iter	1344:34:42526:42529	4199099	14	True				
ANR	4199164	Statement	","	1344:38:42530:42530	4199099	15	True				
ANR	4199165	Statement	map	1344:40:42532:42534	4199099	16	True				
ANR	4199166	Statement	)	1344:43:42535:42535	4199099	17	True				
ANR	4199167	CompoundStatement		8:45:246:246	4199099	18					
ANR	4199168	ExpressionStatement	do_dump = false	1345:2:42541:42556	4199099	0	True				
ANR	4199169	AssignmentExpression	do_dump = false		4199099	0		=			
ANR	4199170	Identifier	do_dump		4199099	0					
ANR	4199171	Identifier	false		4199099	1					
ANR	4199172	IfStatement	if ( perm == - 1 )		4199099	1					
ANR	4199173	Condition	perm == - 1	1346:6:42564:42573	4199099	0	True				
ANR	4199174	EqualityExpression	perm == - 1		4199099	0		==			
ANR	4199175	Identifier	perm		4199099	0					
ANR	4199176	UnaryOperationExpression	- 1		4199099	1					
ANR	4199177	UnaryOperator	-		4199099	0					
ANR	4199178	PrimaryExpression	1		4199099	1					
ANR	4199179	CompoundStatement		10:18:285:285	4199099	1					
ANR	4199180	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		4199099	0					
ANR	4199181	Condition	addr >= map -> addr && addr < map -> addr_end	1347:7:42585:42625	4199099	0	True				
ANR	4199182	AndExpression	addr >= map -> addr && addr < map -> addr_end		4199099	0		&&			
ANR	4199183	RelationalExpression	addr >= map -> addr		4199099	0		>=			
ANR	4199184	Identifier	addr		4199099	0					
ANR	4199185	PtrMemberAccess	map -> addr		4199099	1					
ANR	4199186	Identifier	map		4199099	0					
ANR	4199187	Identifier	addr		4199099	1					
ANR	4199188	RelationalExpression	addr < map -> addr_end		4199099	1		<			
ANR	4199189	Identifier	addr		4199099	0					
ANR	4199190	PtrMemberAccess	map -> addr_end		4199099	1					
ANR	4199191	Identifier	map		4199099	0					
ANR	4199192	Identifier	addr_end		4199099	1					
ANR	4199193	CompoundStatement		11:50:337:337	4199099	1					
ANR	4199194	ExpressionStatement	do_dump = true	1348:4:42634:42648	4199099	0	True				
ANR	4199195	AssignmentExpression	do_dump = true		4199099	0		=			
ANR	4199196	Identifier	do_dump		4199099	0					
ANR	4199197	Identifier	true		4199099	1					
ANR	4199198	ElseStatement	else		4199099	0					
ANR	4199199	IfStatement	if ( perm == 0 )		4199099	0					
ANR	4199200	Condition	perm == 0	1350:13:42668:42676	4199099	0	True				
ANR	4199201	EqualityExpression	perm == 0		4199099	0		==			
ANR	4199202	Identifier	perm		4199099	0					
ANR	4199203	PrimaryExpression	0		4199099	1					
ANR	4199204	CompoundStatement		14:24:388:388	4199099	1					
ANR	4199205	ExpressionStatement	do_dump = true	1351:3:42684:42698	4199099	0	True				
ANR	4199206	AssignmentExpression	do_dump = true		4199099	0		=			
ANR	4199207	Identifier	do_dump		4199099	0					
ANR	4199208	Identifier	true		4199099	1					
ANR	4199209	ElseStatement	else		4199099	0					
ANR	4199210	IfStatement	if ( perm == ( map -> perm & perm ) )		4199099	0					
ANR	4199211	Condition	perm == ( map -> perm & perm )	1352:13:42713:42738	4199099	0	True				
ANR	4199212	EqualityExpression	perm == ( map -> perm & perm )		4199099	0		==			
ANR	4199213	Identifier	perm		4199099	0					
ANR	4199214	BitAndExpression	map -> perm & perm		4199099	1		&			
ANR	4199215	PtrMemberAccess	map -> perm		4199099	0					
ANR	4199216	Identifier	map		4199099	0					
ANR	4199217	Identifier	perm		4199099	1					
ANR	4199218	Identifier	perm		4199099	1					
ANR	4199219	CompoundStatement		16:41:450:450	4199099	1					
ANR	4199220	ExpressionStatement	do_dump = true	1353:3:42746:42760	4199099	0	True				
ANR	4199221	AssignmentExpression	do_dump = true		4199099	0		=			
ANR	4199222	Identifier	do_dump		4199099	0					
ANR	4199223	Identifier	true		4199099	1					
ANR	4199224	IfStatement	if ( do_dump )		4199099	2					
ANR	4199225	Condition	do_dump	1355:6:42772:42778	4199099	0	True				
ANR	4199226	Identifier	do_dump		4199099	0					
ANR	4199227	CompoundStatement		20:3:495:524	4199099	1					
ANR	4199228	IdentifierDeclStatement	ut8 * buf = malloc ( map -> size ) ;	1356:3:42786:42815	4199099	0	True				
ANR	4199229	IdentifierDecl	* buf = malloc ( map -> size )		4199099	0					
ANR	4199230	IdentifierDeclType	ut8 *		4199099	0					
ANR	4199231	Identifier	buf		4199099	1					
ANR	4199232	AssignmentExpression	* buf = malloc ( map -> size )		4199099	2		=			
ANR	4199233	Identifier	buf		4199099	0					
ANR	4199234	CallExpression	malloc ( map -> size )		4199099	1					
ANR	4199235	Callee	malloc		4199099	0					
ANR	4199236	Identifier	malloc		4199099	0					
ANR	4199237	ArgumentList	map -> size		4199099	1					
ANR	4199238	Argument	map -> size		4199099	0					
ANR	4199239	PtrMemberAccess	map -> size		4199099	0					
ANR	4199240	Identifier	map		4199099	0					
ANR	4199241	Identifier	size		4199099	1					
ANR	4199242	IfStatement	if ( ! buf )		4199099	1					
ANR	4199243	Condition	! buf	1358:7:42884:42887	4199099	0	True				
ANR	4199244	UnaryOperationExpression	! buf		4199099	0					
ANR	4199245	UnaryOperator	!		4199099	0					
ANR	4199246	Identifier	buf		4199099	1					
ANR	4199247	CompoundStatement		22:13:599:599	4199099	1					
ANR	4199248	Statement	eprintf	1359:4:42896:42902	4199099	0	True				
ANR	4199249	Statement	(	1359:12:42904:42904	4199099	1	True				
ANR	4199250	Statement	"""Cannot allocate 0x%08"""	1359:13:42905:42927	4199099	2	True				
ANR	4199251	Statement	PFMT64x	1359:36:42928:42934	4199099	3	True				
ANR	4199252	Statement	""" bytes\\n"""	1359:43:42935:42944	4199099	4	True				
ANR	4199253	Statement	","	1359:53:42945:42945	4199099	5	True				
ANR	4199254	Statement	map	1359:55:42947:42949	4199099	6	True				
ANR	4199255	Statement	->	1359:58:42950:42951	4199099	7	True				
ANR	4199256	Statement	size	1359:60:42952:42955	4199099	8	True				
ANR	4199257	Statement	)	1359:64:42956:42956	4199099	9	True				
ANR	4199258	ExpressionStatement		1359:65:42957:42957	4199099	10	True				
ANR	4199259	ExpressionStatement	free ( buf )	1360:4:42963:42973	4199099	11	True				
ANR	4199260	CallExpression	free ( buf )		4199099	0					
ANR	4199261	Callee	free		4199099	0					
ANR	4199262	Identifier	free		4199099	0					
ANR	4199263	ArgumentList	buf		4199099	1					
ANR	4199264	Argument	buf		4199099	0					
ANR	4199265	Identifier	buf		4199099	0					
ANR	4199266	ContinueStatement	continue ;	1362:4:43016:43024	4199099	12	True				
ANR	4199267	IfStatement	if ( map -> size > MAX_MAP_SIZE )		4199099	2					
ANR	4199268	Condition	map -> size > MAX_MAP_SIZE	1364:7:43038:43061	4199099	0	True				
ANR	4199269	RelationalExpression	map -> size > MAX_MAP_SIZE		4199099	0		>			
ANR	4199270	PtrMemberAccess	map -> size		4199099	0					
ANR	4199271	Identifier	map		4199099	0					
ANR	4199272	Identifier	size		4199099	1					
ANR	4199273	Identifier	MAX_MAP_SIZE		4199099	1					
ANR	4199274	CompoundStatement		28:33:773:773	4199099	1					
ANR	4199275	Statement	eprintf	1365:4:43070:43076	4199099	0	True				
ANR	4199276	Statement	(	1365:12:43078:43078	4199099	1	True				
ANR	4199277	Statement	"""Do not dumping 0x%08"""	1365:13:43079:43100	4199099	2	True				
ANR	4199278	Statement	PFMT64x	1365:35:43101:43107	4199099	3	True				
ANR	4199279	Statement	""" because it's too big\\n"""	1365:42:43108:43132	4199099	4	True				
ANR	4199280	Statement	","	1365:67:43133:43133	4199099	5	True				
ANR	4199281	Statement	map	1365:69:43135:43137	4199099	6	True				
ANR	4199282	Statement	->	1365:72:43138:43139	4199099	7	True				
ANR	4199283	Statement	addr	1365:74:43140:43143	4199099	8	True				
ANR	4199284	Statement	)	1365:78:43144:43144	4199099	9	True				
ANR	4199285	ExpressionStatement		1365:79:43145:43145	4199099	10	True				
ANR	4199286	ExpressionStatement	free ( buf )	1366:4:43151:43161	4199099	11	True				
ANR	4199287	CallExpression	free ( buf )		4199099	0					
ANR	4199288	Callee	free		4199099	0					
ANR	4199289	Identifier	free		4199099	0					
ANR	4199290	ArgumentList	buf		4199099	1					
ANR	4199291	Argument	buf		4199099	0					
ANR	4199292	Identifier	buf		4199099	0					
ANR	4199293	ContinueStatement	continue ;	1367:4:43167:43175	4199099	12	True				
ANR	4199294	ExpressionStatement	"r_io_read_at ( core -> io , map -> addr , buf , map -> size )"	1369:3:43185:43235	4199099	3	True				
ANR	4199295	CallExpression	"r_io_read_at ( core -> io , map -> addr , buf , map -> size )"		4199099	0					
ANR	4199296	Callee	r_io_read_at		4199099	0					
ANR	4199297	Identifier	r_io_read_at		4199099	0					
ANR	4199298	ArgumentList	core -> io		4199099	1					
ANR	4199299	Argument	core -> io		4199099	0					
ANR	4199300	PtrMemberAccess	core -> io		4199099	0					
ANR	4199301	Identifier	core		4199099	0					
ANR	4199302	Identifier	io		4199099	1					
ANR	4199303	Argument	map -> addr		4199099	1					
ANR	4199304	PtrMemberAccess	map -> addr		4199099	0					
ANR	4199305	Identifier	map		4199099	0					
ANR	4199306	Identifier	addr		4199099	1					
ANR	4199307	Argument	buf		4199099	2					
ANR	4199308	Identifier	buf		4199099	0					
ANR	4199309	Argument	map -> size		4199099	3					
ANR	4199310	PtrMemberAccess	map -> size		4199099	0					
ANR	4199311	Identifier	map		4199099	0					
ANR	4199312	Identifier	size		4199099	1					
ANR	4199313	Statement	char	1370:3:43240:43243	4199099	4	True				
ANR	4199314	Statement	*	1370:8:43245:43245	4199099	5	True				
ANR	4199315	Statement	file	1370:9:43246:43249	4199099	6	True				
ANR	4199316	Statement	=	1370:14:43251:43251	4199099	7	True				
ANR	4199317	Statement	filename	1370:16:43253:43260	4199099	8	True				
ANR	4199318	Statement	?	1371:3:43265:43265	4199099	9	True				
ANR	4199319	Statement	strdup	1371:5:43267:43272	4199099	10	True				
ANR	4199320	Statement	(	1371:12:43274:43274	4199099	11	True				
ANR	4199321	Statement	filename	1371:13:43275:43282	4199099	12	True				
ANR	4199322	Statement	)	1371:21:43283:43283	4199099	13	True				
ANR	4199323	Statement	:	1372:3:43288:43288	4199099	14	True				
ANR	4199324	Statement	r_str_newf	1372:5:43290:43299	4199099	15	True				
ANR	4199325	Statement	(	1372:16:43301:43301	4199099	16	True				
ANR	4199326	Statement	"""0x%08"""	1372:17:43302:43308	4199099	17	True				
ANR	4199327	Statement	PFMT64x	1372:24:43309:43315	4199099	18	True				
ANR	4199328	Statement	"""-0x%08"""	1372:31:43316:43323	4199099	19	True				
ANR	4199329	Statement	PFMT64x	1372:39:43324:43330	4199099	20	True				
ANR	4199330	Statement	"""-%s.dmp"""	1372:46:43331:43339	4199099	21	True				
ANR	4199331	Statement	","	1372:55:43340:43340	4199099	22	True				
ANR	4199332	Statement	map	1373:5:43347:43349	4199099	23	True				
ANR	4199333	Statement	->	1373:8:43350:43351	4199099	24	True				
ANR	4199334	Statement	addr	1373:10:43352:43355	4199099	25	True				
ANR	4199335	Statement	","	1373:14:43356:43356	4199099	26	True				
ANR	4199336	Statement	map	1373:16:43358:43360	4199099	27	True				
ANR	4199337	Statement	->	1373:19:43361:43362	4199099	28	True				
ANR	4199338	Statement	addr_end	1373:21:43363:43370	4199099	29	True				
ANR	4199339	Statement	","	1373:29:43371:43371	4199099	30	True				
ANR	4199340	Statement	r_str_rwx_i	1373:31:43373:43383	4199099	31	True				
ANR	4199341	Statement	(	1373:43:43385:43385	4199099	32	True				
ANR	4199342	Statement	map	1373:44:43386:43388	4199099	33	True				
ANR	4199343	Statement	->	1373:47:43389:43390	4199099	34	True				
ANR	4199344	Statement	perm	1373:49:43391:43394	4199099	35	True				
ANR	4199345	Statement	)	1373:53:43395:43395	4199099	36	True				
ANR	4199346	Statement	)	1373:54:43396:43396	4199099	37	True				
ANR	4199347	ExpressionStatement		1373:55:43397:43397	4199099	38	True				
ANR	4199348	IfStatement	"if ( ! r_file_dump ( file , buf , map -> size , 0 ) )"		4199099	39					
ANR	4199349	Condition	"! r_file_dump ( file , buf , map -> size , 0 )"	1374:7:43406:43443	4199099	0	True				
ANR	4199350	UnaryOperationExpression	"! r_file_dump ( file , buf , map -> size , 0 )"		4199099	0					
ANR	4199351	UnaryOperator	!		4199099	0					
ANR	4199352	CallExpression	"r_file_dump ( file , buf , map -> size , 0 )"		4199099	1					
ANR	4199353	Callee	r_file_dump		4199099	0					
ANR	4199354	Identifier	r_file_dump		4199099	0					
ANR	4199355	ArgumentList	file		4199099	1					
ANR	4199356	Argument	file		4199099	0					
ANR	4199357	Identifier	file		4199099	0					
ANR	4199358	Argument	buf		4199099	1					
ANR	4199359	Identifier	buf		4199099	0					
ANR	4199360	Argument	map -> size		4199099	2					
ANR	4199361	PtrMemberAccess	map -> size		4199099	0					
ANR	4199362	Identifier	map		4199099	0					
ANR	4199363	Identifier	size		4199099	1					
ANR	4199364	Argument	0		4199099	3					
ANR	4199365	PrimaryExpression	0		4199099	0					
ANR	4199366	CompoundStatement		38:47:1155:1155	4199099	1					
ANR	4199367	ExpressionStatement	"eprintf ( ""Cannot write '%s'\\n"" , file )"	1375:4:43452:43489	4199099	0	True				
ANR	4199368	CallExpression	"eprintf ( ""Cannot write '%s'\\n"" , file )"		4199099	0					
ANR	4199369	Callee	eprintf		4199099	0					
ANR	4199370	Identifier	eprintf		4199099	0					
ANR	4199371	ArgumentList	"""Cannot write '%s'\\n"""		4199099	1					
ANR	4199372	Argument	"""Cannot write '%s'\\n"""		4199099	0					
ANR	4199373	PrimaryExpression	"""Cannot write '%s'\\n"""		4199099	0					
ANR	4199374	Argument	file		4199099	1					
ANR	4199375	Identifier	file		4199099	0					
ANR	4199376	ExpressionStatement	ret = 0	1376:4:43495:43502	4199099	1	True				
ANR	4199377	AssignmentExpression	ret = 0		4199099	0		=			
ANR	4199378	Identifier	ret		4199099	0					
ANR	4199379	PrimaryExpression	0		4199099	1					
ANR	4199380	ElseStatement	else		4199099	0					
ANR	4199381	CompoundStatement		41:10:1223:1223	4199099	0					
ANR	4199382	ExpressionStatement	"eprintf ( ""Dumped %d byte(s) into %s\\n"" , ( int ) map -> size , file )"	1378:4:43520:43581	4199099	0	True				
ANR	4199383	CallExpression	"eprintf ( ""Dumped %d byte(s) into %s\\n"" , ( int ) map -> size , file )"		4199099	0					
ANR	4199384	Callee	eprintf		4199099	0					
ANR	4199385	Identifier	eprintf		4199099	0					
ANR	4199386	ArgumentList	"""Dumped %d byte(s) into %s\\n"""		4199099	1					
ANR	4199387	Argument	"""Dumped %d byte(s) into %s\\n"""		4199099	0					
ANR	4199388	PrimaryExpression	"""Dumped %d byte(s) into %s\\n"""		4199099	0					
ANR	4199389	Argument	( int ) map -> size		4199099	1					
ANR	4199390	CastExpression	( int ) map -> size		4199099	0					
ANR	4199391	CastTarget	int		4199099	0					
ANR	4199392	PtrMemberAccess	map -> size		4199099	1					
ANR	4199393	Identifier	map		4199099	0					
ANR	4199394	Identifier	size		4199099	1					
ANR	4199395	Argument	file		4199099	2					
ANR	4199396	Identifier	file		4199099	0					
ANR	4199397	ExpressionStatement	free ( file )	1380:3:43591:43602	4199099	40	True				
ANR	4199398	CallExpression	free ( file )		4199099	0					
ANR	4199399	Callee	free		4199099	0					
ANR	4199400	Identifier	free		4199099	0					
ANR	4199401	ArgumentList	file		4199099	1					
ANR	4199402	Argument	file		4199099	0					
ANR	4199403	Identifier	file		4199099	0					
ANR	4199404	ExpressionStatement	free ( buf )	1381:3:43607:43617	4199099	41	True				
ANR	4199405	CallExpression	free ( buf )		4199099	0					
ANR	4199406	Callee	free		4199099	0					
ANR	4199407	Identifier	free		4199099	0					
ANR	4199408	ArgumentList	buf		4199099	1					
ANR	4199409	Argument	buf		4199099	0					
ANR	4199410	Identifier	buf		4199099	0					
ANR	4199411	ReturnStatement	return ret ;	1385:1:43672:43682	4199099	19	True				
ANR	4199412	Identifier	ret		4199099	0					
ANR	4199413	ReturnType	static int		4199099	1					
ANR	4199414	Identifier	dump_maps		4199099	2					
ANR	4199415	ParameterList	"RCore * core , int perm , const char * filename"		4199099	3					
ANR	4199416	Parameter	RCore * core	1337:21:42245:42255	4199099	0	True				
ANR	4199417	ParameterType	RCore *		4199099	0					
ANR	4199418	Identifier	core		4199099	1					
ANR	4199419	Parameter	int perm	1337:34:42258:42265	4199099	1	True				
ANR	4199420	ParameterType	int		4199099	0					
ANR	4199421	Identifier	perm		4199099	1					
ANR	4199422	Parameter	const char * filename	1337:44:42268:42287	4199099	2	True				
ANR	4199423	ParameterType	const char *		4199099	0					
ANR	4199424	Identifier	filename		4199099	1					
ANR	4199425	CFGEntryNode	ENTRY		4199099		True				
ANR	4199426	CFGExitNode	EXIT		4199099		True				
ANR	4199427	CFGErrorNode	ERROR		4199099		True				
ANR	4199428	Symbol	map -> addr		4199099						
ANR	4199429	Symbol	perm		4199099						
ANR	4199430	Symbol	* map		4199099						
ANR	4199431	Symbol	MAX_MAP_SIZE		4199099						
ANR	4199432	Symbol	* core		4199099						
ANR	4199433	Symbol	core -> offset		4199099						
ANR	4199434	Symbol	map -> size		4199099						
ANR	4199435	Symbol	file		4199099						
ANR	4199436	Symbol	core -> io		4199099						
ANR	4199437	Symbol	r_file_dump		4199099						
ANR	4199438	Symbol	addr		4199099						
ANR	4199439	Symbol	map		4199099						
ANR	4199440	Symbol	* * core		4199099						
ANR	4199441	Symbol	ret		4199099						
ANR	4199442	Symbol	malloc		4199099						
ANR	4199443	Symbol	false		4199099						
ANR	4199444	Symbol	iter		4199099						
ANR	4199445	Symbol	do_dump		4199099						
ANR	4199446	Symbol	core -> dbg -> maps		4199099						
ANR	4199447	Symbol	core		4199099						
ANR	4199448	Symbol	buf		4199099						
ANR	4199449	Symbol	filename		4199099						
ANR	4199450	Symbol	true		4199099						
ANR	4199451	Symbol	map -> addr_end		4199099						
ANR	4199452	Symbol	r_list_empty		4199099						
ANR	4199453	Symbol	* core -> dbg		4199099						
ANR	4199454	Symbol	map -> perm		4199099						
ANR	4199455	Symbol	core -> dbg		4199099						
ANR	4199456	Function	cmd_debug_modules	1388:0:43687:45524							
ANR	4199457	FunctionDef	"cmd_debug_modules (RCore * core , int mode)"		4199456	0					
ANR	4199458	CompoundStatement		1388:53:43740:45524	4199456	0					
ANR	4199459	IdentifierDeclStatement	ut64 addr = core -> offset ;	1389:1:43752:43776	4199456	0	True				
ANR	4199460	IdentifierDecl	addr = core -> offset		4199456	0					
ANR	4199461	IdentifierDeclType	ut64		4199456	0					
ANR	4199462	Identifier	addr		4199456	1					
ANR	4199463	AssignmentExpression	addr = core -> offset		4199456	2		=			
ANR	4199464	Identifier	addr		4199456	0					
ANR	4199465	PtrMemberAccess	core -> offset		4199456	1					
ANR	4199466	Identifier	core		4199456	0					
ANR	4199467	Identifier	offset		4199456	1					
ANR	4199468	IdentifierDeclStatement	RDebugMap * map ;	1390:1:43779:43793	4199456	1	True				
ANR	4199469	IdentifierDecl	* map		4199456	0					
ANR	4199470	IdentifierDeclType	RDebugMap *		4199456	0					
ANR	4199471	Identifier	map		4199456	1					
ANR	4199472	IdentifierDeclStatement	RList * list ;	1391:1:43796:43807	4199456	2	True				
ANR	4199473	IdentifierDecl	* list		4199456	0					
ANR	4199474	IdentifierDeclType	RList *		4199456	0					
ANR	4199475	Identifier	list		4199456	1					
ANR	4199476	IdentifierDeclStatement	RListIter * iter ;	1392:1:43810:43825	4199456	3	True				
ANR	4199477	IdentifierDecl	* iter		4199456	0					
ANR	4199478	IdentifierDeclType	RListIter *		4199456	0					
ANR	4199479	Identifier	iter		4199456	1					
ANR	4199480	IfStatement	if ( mode == '?' )		4199456	4					
ANR	4199481	Condition	mode == '?'	1395:5:43894:43904	4199456	0	True				
ANR	4199482	EqualityExpression	mode == '?'		4199456	0		==			
ANR	4199483	Identifier	mode		4199456	0					
ANR	4199484	PrimaryExpression	'?'		4199456	1					
ANR	4199485	CompoundStatement		8:18:166:166	4199456	1					
ANR	4199486	Label	show_help :	1396:0:43909:43918	4199456	0	True				
ANR	4199487	Identifier	show_help		4199456	0					
ANR	4199488	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dmm )"	1397:2:43922:43958	4199456	1	True				
ANR	4199489	CallExpression	"r_core_cmd_help ( core , help_msg_dmm )"		4199456	0					
ANR	4199490	Callee	r_core_cmd_help		4199456	0					
ANR	4199491	Identifier	r_core_cmd_help		4199456	0					
ANR	4199492	ArgumentList	core		4199456	1					
ANR	4199493	Argument	core		4199456	0					
ANR	4199494	Identifier	core		4199456	0					
ANR	4199495	Argument	help_msg_dmm		4199456	1					
ANR	4199496	Identifier	help_msg_dmm		4199456	0					
ANR	4199497	ReturnStatement	return ;	1398:2:43962:43968	4199456	2	True				
ANR	4199498	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	1400:1:43974:43992	4199456	5	True				
ANR	4199499	IdentifierDecl	* pj = pj_new ( )		4199456	0					
ANR	4199500	IdentifierDeclType	PJ *		4199456	0					
ANR	4199501	Identifier	pj		4199456	1					
ANR	4199502	AssignmentExpression	* pj = pj_new ( )		4199456	2		=			
ANR	4199503	Identifier	pj		4199456	0					
ANR	4199504	CallExpression	pj_new ( )		4199456	1					
ANR	4199505	Callee	pj_new		4199456	0					
ANR	4199506	Identifier	pj_new		4199456	0					
ANR	4199507	ArgumentList			4199456	1					
ANR	4199508	IfStatement	if ( mode == 'j' )		4199456	6					
ANR	4199509	Condition	mode == 'j'	1401:5:43999:44009	4199456	0	True				
ANR	4199510	EqualityExpression	mode == 'j'		4199456	0		==			
ANR	4199511	Identifier	mode		4199456	0					
ANR	4199512	PrimaryExpression	'j'		4199456	1					
ANR	4199513	CompoundStatement		14:18:271:271	4199456	1					
ANR	4199514	ExpressionStatement	pj_a ( pj )	1402:2:44016:44025	4199456	0	True				
ANR	4199515	CallExpression	pj_a ( pj )		4199456	0					
ANR	4199516	Callee	pj_a		4199456	0					
ANR	4199517	Identifier	pj_a		4199456	0					
ANR	4199518	ArgumentList	pj		4199456	1					
ANR	4199519	Argument	pj		4199456	0					
ANR	4199520	Identifier	pj		4199456	0					
ANR	4199521	ExpressionStatement	list = r_debug_modules_list ( core -> dbg )	1405:1:44052:44091	4199456	7	True				
ANR	4199522	AssignmentExpression	list = r_debug_modules_list ( core -> dbg )		4199456	0		=			
ANR	4199523	Identifier	list		4199456	0					
ANR	4199524	CallExpression	r_debug_modules_list ( core -> dbg )		4199456	1					
ANR	4199525	Callee	r_debug_modules_list		4199456	0					
ANR	4199526	Identifier	r_debug_modules_list		4199456	0					
ANR	4199527	ArgumentList	core -> dbg		4199456	1					
ANR	4199528	Argument	core -> dbg		4199456	0					
ANR	4199529	PtrMemberAccess	core -> dbg		4199456	0					
ANR	4199530	Identifier	core		4199456	0					
ANR	4199531	Identifier	dbg		4199456	1					
ANR	4199532	Statement	r_list_foreach	1406:1:44094:44107	4199456	8	True				
ANR	4199533	Statement	(	1406:16:44109:44109	4199456	9	True				
ANR	4199534	Statement	list	1406:17:44110:44113	4199456	10	True				
ANR	4199535	Statement	","	1406:21:44114:44114	4199456	11	True				
ANR	4199536	Statement	iter	1406:23:44116:44119	4199456	12	True				
ANR	4199537	Statement	","	1406:27:44120:44120	4199456	13	True				
ANR	4199538	Statement	map	1406:29:44122:44124	4199456	14	True				
ANR	4199539	Statement	)	1406:32:44125:44125	4199456	15	True				
ANR	4199540	CompoundStatement		19:34:386:386	4199456	16					
ANR	4199541	SwitchStatement	switch ( mode )		4199456	0					
ANR	4199542	Condition	mode	1407:10:44139:44142	4199456	0	True				
ANR	4199543	Identifier	mode		4199456	0					
ANR	4199544	CompoundStatement		20:16:404:404	4199456	1					
ANR	4199545	Label	case 0 :	1408:2:44149:44155	4199456	0	True				
ANR	4199546	Statement	r_cons_printf	1409:3:44160:44172	4199456	1	True				
ANR	4199547	Statement	(	1409:17:44174:44174	4199456	2	True				
ANR	4199548	Statement	"""0x%08"""	1409:18:44175:44181	4199456	3	True				
ANR	4199549	Statement	PFMT64x	1409:25:44182:44188	4199456	4	True				
ANR	4199550	Statement	""" 0x%08"""	1409:32:44189:44196	4199456	5	True				
ANR	4199551	Statement	PFMT64x	1409:40:44197:44203	4199456	6	True				
ANR	4199552	Statement	"""  %s\\n"""	1409:47:44204:44211	4199456	7	True				
ANR	4199553	Statement	","	1409:55:44212:44212	4199456	8	True				
ANR	4199554	Statement	map	1409:57:44214:44216	4199456	9	True				
ANR	4199555	Statement	->	1409:60:44217:44218	4199456	10	True				
ANR	4199556	Statement	addr	1409:62:44219:44222	4199456	11	True				
ANR	4199557	Statement	","	1409:66:44223:44223	4199456	12	True				
ANR	4199558	Statement	map	1409:68:44225:44227	4199456	13	True				
ANR	4199559	Statement	->	1409:71:44228:44229	4199456	14	True				
ANR	4199560	Statement	addr_end	1409:73:44230:44237	4199456	15	True				
ANR	4199561	Statement	","	1409:81:44238:44238	4199456	16	True				
ANR	4199562	Statement	map	1409:83:44240:44242	4199456	17	True				
ANR	4199563	Statement	->	1409:86:44243:44244	4199456	18	True				
ANR	4199564	Statement	file	1409:88:44245:44248	4199456	19	True				
ANR	4199565	Statement	)	1409:92:44249:44249	4199456	20	True				
ANR	4199566	ExpressionStatement		1409:93:44250:44250	4199456	21	True				
ANR	4199567	BreakStatement	break ;	1410:3:44255:44260	4199456	22	True				
ANR	4199568	Label	case '.' :	1411:2:44264:44272	4199456	23	True				
ANR	4199569	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		4199456	24					
ANR	4199570	Condition	addr >= map -> addr && addr < map -> addr_end	1412:7:44281:44321	4199456	0	True				
ANR	4199571	AndExpression	addr >= map -> addr && addr < map -> addr_end		4199456	0		&&			
ANR	4199572	RelationalExpression	addr >= map -> addr		4199456	0		>=			
ANR	4199573	Identifier	addr		4199456	0					
ANR	4199574	PtrMemberAccess	map -> addr		4199456	1					
ANR	4199575	Identifier	map		4199456	0					
ANR	4199576	Identifier	addr		4199456	1					
ANR	4199577	RelationalExpression	addr < map -> addr_end		4199456	1		<			
ANR	4199578	Identifier	addr		4199456	0					
ANR	4199579	PtrMemberAccess	map -> addr_end		4199456	1					
ANR	4199580	Identifier	map		4199456	0					
ANR	4199581	Identifier	addr_end		4199456	1					
ANR	4199582	CompoundStatement		25:50:583:583	4199456	1					
ANR	4199583	Statement	r_cons_printf	1413:4:44330:44342	4199456	0	True				
ANR	4199584	Statement	(	1413:18:44344:44344	4199456	1	True				
ANR	4199585	Statement	"""0x%08"""	1413:19:44345:44351	4199456	2	True				
ANR	4199586	Statement	PFMT64x	1413:26:44352:44358	4199456	3	True				
ANR	4199587	Statement	""" 0x%08"""	1413:33:44359:44366	4199456	4	True				
ANR	4199588	Statement	PFMT64x	1413:41:44367:44373	4199456	5	True				
ANR	4199589	Statement	"""  %s\\n"""	1413:48:44374:44381	4199456	6	True				
ANR	4199590	Statement	","	1413:56:44382:44382	4199456	7	True				
ANR	4199591	Statement	map	1413:58:44384:44386	4199456	8	True				
ANR	4199592	Statement	->	1413:61:44387:44388	4199456	9	True				
ANR	4199593	Statement	addr	1413:63:44389:44392	4199456	10	True				
ANR	4199594	Statement	","	1413:67:44393:44393	4199456	11	True				
ANR	4199595	Statement	map	1413:69:44395:44397	4199456	12	True				
ANR	4199596	Statement	->	1413:72:44398:44399	4199456	13	True				
ANR	4199597	Statement	addr_end	1413:74:44400:44407	4199456	14	True				
ANR	4199598	Statement	","	1413:82:44408:44408	4199456	15	True				
ANR	4199599	Statement	map	1413:84:44410:44412	4199456	16	True				
ANR	4199600	Statement	->	1413:87:44413:44414	4199456	17	True				
ANR	4199601	Statement	file	1413:89:44415:44418	4199456	18	True				
ANR	4199602	Statement	)	1413:93:44419:44419	4199456	19	True				
ANR	4199603	ExpressionStatement		1413:94:44420:44420	4199456	20	True				
ANR	4199604	GotoStatement	goto beach ;	1414:4:44426:44436	4199456	21	True				
ANR	4199605	Identifier	beach		4199456	0					
ANR	4199606	BreakStatement	break ;	1416:3:44446:44451	4199456	25	True				
ANR	4199607	Label	case 'j' :	1417:2:44455:44463	4199456	26	True				
ANR	4199608	CompoundStatement		31:3:727:727	4199456	27					
ANR	4199609	ExpressionStatement	pj_o ( pj )	1420:4:44523:44532	4199456	0	True				
ANR	4199610	CallExpression	pj_o ( pj )		4199456	0					
ANR	4199611	Callee	pj_o		4199456	0					
ANR	4199612	Identifier	pj_o		4199456	0					
ANR	4199613	ArgumentList	pj		4199456	1					
ANR	4199614	Argument	pj		4199456	0					
ANR	4199615	Identifier	pj		4199456	0					
ANR	4199616	ExpressionStatement	"pj_kn ( pj , ""addr"" , map -> addr )"	1421:4:44538:44567	4199456	1	True				
ANR	4199617	CallExpression	"pj_kn ( pj , ""addr"" , map -> addr )"		4199456	0					
ANR	4199618	Callee	pj_kn		4199456	0					
ANR	4199619	Identifier	pj_kn		4199456	0					
ANR	4199620	ArgumentList	pj		4199456	1					
ANR	4199621	Argument	pj		4199456	0					
ANR	4199622	Identifier	pj		4199456	0					
ANR	4199623	Argument	"""addr"""		4199456	1					
ANR	4199624	PrimaryExpression	"""addr"""		4199456	0					
ANR	4199625	Argument	map -> addr		4199456	2					
ANR	4199626	PtrMemberAccess	map -> addr		4199456	0					
ANR	4199627	Identifier	map		4199456	0					
ANR	4199628	Identifier	addr		4199456	1					
ANR	4199629	ExpressionStatement	"pj_kn ( pj , ""addr_end"" , map -> addr_end )"	1422:4:44573:44610	4199456	2	True				
ANR	4199630	CallExpression	"pj_kn ( pj , ""addr_end"" , map -> addr_end )"		4199456	0					
ANR	4199631	Callee	pj_kn		4199456	0					
ANR	4199632	Identifier	pj_kn		4199456	0					
ANR	4199633	ArgumentList	pj		4199456	1					
ANR	4199634	Argument	pj		4199456	0					
ANR	4199635	Identifier	pj		4199456	0					
ANR	4199636	Argument	"""addr_end"""		4199456	1					
ANR	4199637	PrimaryExpression	"""addr_end"""		4199456	0					
ANR	4199638	Argument	map -> addr_end		4199456	2					
ANR	4199639	PtrMemberAccess	map -> addr_end		4199456	0					
ANR	4199640	Identifier	map		4199456	0					
ANR	4199641	Identifier	addr_end		4199456	1					
ANR	4199642	ExpressionStatement	"pj_ks ( pj , ""file"" , map -> file )"	1423:4:44616:44645	4199456	3	True				
ANR	4199643	CallExpression	"pj_ks ( pj , ""file"" , map -> file )"		4199456	0					
ANR	4199644	Callee	pj_ks		4199456	0					
ANR	4199645	Identifier	pj_ks		4199456	0					
ANR	4199646	ArgumentList	pj		4199456	1					
ANR	4199647	Argument	pj		4199456	0					
ANR	4199648	Identifier	pj		4199456	0					
ANR	4199649	Argument	"""file"""		4199456	1					
ANR	4199650	PrimaryExpression	"""file"""		4199456	0					
ANR	4199651	Argument	map -> file		4199456	2					
ANR	4199652	PtrMemberAccess	map -> file		4199456	0					
ANR	4199653	Identifier	map		4199456	0					
ANR	4199654	Identifier	file		4199456	1					
ANR	4199655	ExpressionStatement	"pj_ks ( pj , ""name"" , map -> name )"	1424:4:44651:44680	4199456	4	True				
ANR	4199656	CallExpression	"pj_ks ( pj , ""name"" , map -> name )"		4199456	0					
ANR	4199657	Callee	pj_ks		4199456	0					
ANR	4199658	Identifier	pj_ks		4199456	0					
ANR	4199659	ArgumentList	pj		4199456	1					
ANR	4199660	Argument	pj		4199456	0					
ANR	4199661	Identifier	pj		4199456	0					
ANR	4199662	Argument	"""name"""		4199456	1					
ANR	4199663	PrimaryExpression	"""name"""		4199456	0					
ANR	4199664	Argument	map -> name		4199456	2					
ANR	4199665	PtrMemberAccess	map -> name		4199456	0					
ANR	4199666	Identifier	map		4199456	0					
ANR	4199667	Identifier	name		4199456	1					
ANR	4199668	ExpressionStatement	pj_end ( pj )	1425:4:44686:44697	4199456	5	True				
ANR	4199669	CallExpression	pj_end ( pj )		4199456	0					
ANR	4199670	Callee	pj_end		4199456	0					
ANR	4199671	Identifier	pj_end		4199456	0					
ANR	4199672	ArgumentList	pj		4199456	1					
ANR	4199673	Argument	pj		4199456	0					
ANR	4199674	Identifier	pj		4199456	0					
ANR	4199675	BreakStatement	break ;	1427:3:44707:44712	4199456	28	True				
ANR	4199676	Label	case ':' :	1428:2:44716:44724	4199456	29	True				
ANR	4199677	Label	case '*' :	1429:2:44728:44736	4199456	30	True				
ANR	4199678	IfStatement	if ( mode == '*' || ( mode == ':' && addr >= map -> addr && addr < map -> addr_end ) )		4199456	31					
ANR	4199679	Condition	mode == '*' || ( mode == ':' && addr >= map -> addr && addr < map -> addr_end )	1430:7:44745:44821	4199456	0	True				
ANR	4199680	OrExpression	mode == '*' || ( mode == ':' && addr >= map -> addr && addr < map -> addr_end )		4199456	0		||			
ANR	4199681	EqualityExpression	mode == '*'		4199456	0		==			
ANR	4199682	Identifier	mode		4199456	0					
ANR	4199683	PrimaryExpression	'*'		4199456	1					
ANR	4199684	AndExpression	mode == ':' && addr >= map -> addr && addr < map -> addr_end		4199456	1		&&			
ANR	4199685	EqualityExpression	mode == ':'		4199456	0		==			
ANR	4199686	Identifier	mode		4199456	0					
ANR	4199687	PrimaryExpression	':'		4199456	1					
ANR	4199688	AndExpression	addr >= map -> addr && addr < map -> addr_end		4199456	1		&&			
ANR	4199689	RelationalExpression	addr >= map -> addr		4199456	0		>=			
ANR	4199690	Identifier	addr		4199456	0					
ANR	4199691	PtrMemberAccess	map -> addr		4199456	1					
ANR	4199692	Identifier	map		4199456	0					
ANR	4199693	Identifier	addr		4199456	1					
ANR	4199694	RelationalExpression	addr < map -> addr_end		4199456	1		<			
ANR	4199695	Identifier	addr		4199456	0					
ANR	4199696	PtrMemberAccess	map -> addr_end		4199456	1					
ANR	4199697	Identifier	map		4199456	0					
ANR	4199698	Identifier	addr_end		4199456	1					
ANR	4199699	CompoundStatement		47:4:1189:1229	4199456	1					
ANR	4199700	IdentifierDeclStatement	char * escaped_path = r_str_escape ( map -> file ) ;	1433:4:44879:44924	4199456	0	True				
ANR	4199701	IdentifierDecl	* escaped_path = r_str_escape ( map -> file )		4199456	0					
ANR	4199702	IdentifierDeclType	char *		4199456	0					
ANR	4199703	Identifier	escaped_path		4199456	1					
ANR	4199704	AssignmentExpression	* escaped_path = r_str_escape ( map -> file )		4199456	2		=			
ANR	4199705	Identifier	escaped_path		4199456	0					
ANR	4199706	CallExpression	r_str_escape ( map -> file )		4199456	1					
ANR	4199707	Callee	r_str_escape		4199456	0					
ANR	4199708	Identifier	r_str_escape		4199456	0					
ANR	4199709	ArgumentList	map -> file		4199456	1					
ANR	4199710	Argument	map -> file		4199456	0					
ANR	4199711	PtrMemberAccess	map -> file		4199456	0					
ANR	4199712	Identifier	map		4199456	0					
ANR	4199713	Identifier	file		4199456	1					
ANR	4199714	IdentifierDeclStatement	char * filtered_name = strdup ( map -> name ) ;	1434:4:44930:44970	4199456	1	True				
ANR	4199715	IdentifierDecl	* filtered_name = strdup ( map -> name )		4199456	0					
ANR	4199716	IdentifierDeclType	char *		4199456	0					
ANR	4199717	Identifier	filtered_name		4199456	1					
ANR	4199718	AssignmentExpression	* filtered_name = strdup ( map -> name )		4199456	2		=			
ANR	4199719	Identifier	filtered_name		4199456	0					
ANR	4199720	CallExpression	strdup ( map -> name )		4199456	1					
ANR	4199721	Callee	strdup		4199456	0					
ANR	4199722	Identifier	strdup		4199456	0					
ANR	4199723	ArgumentList	map -> name		4199456	1					
ANR	4199724	Argument	map -> name		4199456	0					
ANR	4199725	PtrMemberAccess	map -> name		4199456	0					
ANR	4199726	Identifier	map		4199456	0					
ANR	4199727	Identifier	name		4199456	1					
ANR	4199728	ExpressionStatement	"r_name_filter ( filtered_name , 0 )"	1435:4:44976:45008	4199456	2	True				
ANR	4199729	CallExpression	"r_name_filter ( filtered_name , 0 )"		4199456	0					
ANR	4199730	Callee	r_name_filter		4199456	0					
ANR	4199731	Identifier	r_name_filter		4199456	0					
ANR	4199732	ArgumentList	filtered_name		4199456	1					
ANR	4199733	Argument	filtered_name		4199456	0					
ANR	4199734	Identifier	filtered_name		4199456	0					
ANR	4199735	Argument	0		4199456	1					
ANR	4199736	PrimaryExpression	0		4199456	0					
ANR	4199737	Statement	r_cons_printf	1436:4:45014:45026	4199456	3	True				
ANR	4199738	Statement	(	1436:18:45028:45028	4199456	4	True				
ANR	4199739	Statement	"""f mod.%s = 0x%08"""	1436:19:45029:45046	4199456	5	True				
ANR	4199740	Statement	PFMT64x	1436:37:45047:45053	4199456	6	True				
ANR	4199741	Statement	"""\\n"""	1436:44:45054:45057	4199456	7	True				
ANR	4199742	Statement	","	1436:48:45058:45058	4199456	8	True				
ANR	4199743	Statement	filtered_name	1437:5:45065:45077	4199456	9	True				
ANR	4199744	Statement	","	1437:18:45078:45078	4199456	10	True				
ANR	4199745	Statement	map	1437:20:45080:45082	4199456	11	True				
ANR	4199746	Statement	->	1437:23:45083:45084	4199456	12	True				
ANR	4199747	Statement	addr	1437:25:45085:45088	4199456	13	True				
ANR	4199748	Statement	)	1437:29:45089:45089	4199456	14	True				
ANR	4199749	ExpressionStatement		1437:30:45090:45090	4199456	15	True				
ANR	4199750	Statement	r_cons_printf	1438:4:45096:45108	4199456	16	True				
ANR	4199751	Statement	(	1438:18:45110:45110	4199456	17	True				
ANR	4199752	Statement	"""oba 0x%08"""	1438:19:45111:45121	4199456	18	True				
ANR	4199753	Statement	PFMT64x	1438:30:45122:45128	4199456	19	True				
ANR	4199754	Statement	""" %s\\n"""	1438:37:45129:45135	4199456	20	True				
ANR	4199755	Statement	","	1438:44:45136:45136	4199456	21	True				
ANR	4199756	Statement	map	1438:46:45138:45140	4199456	22	True				
ANR	4199757	Statement	->	1438:49:45141:45142	4199456	23	True				
ANR	4199758	Statement	addr	1438:51:45143:45146	4199456	24	True				
ANR	4199759	Statement	","	1438:55:45147:45147	4199456	25	True				
ANR	4199760	Statement	escaped_path	1438:57:45149:45160	4199456	26	True				
ANR	4199761	Statement	)	1438:69:45161:45161	4199456	27	True				
ANR	4199762	ExpressionStatement		1438:70:45162:45162	4199456	28	True				
ANR	4199763	ExpressionStatement	free ( escaped_path )	1440:4:45257:45276	4199456	29	True				
ANR	4199764	CallExpression	free ( escaped_path )		4199456	0					
ANR	4199765	Callee	free		4199456	0					
ANR	4199766	Identifier	free		4199456	0					
ANR	4199767	ArgumentList	escaped_path		4199456	1					
ANR	4199768	Argument	escaped_path		4199456	0					
ANR	4199769	Identifier	escaped_path		4199456	0					
ANR	4199770	ExpressionStatement	free ( filtered_name )	1441:4:45282:45302	4199456	30	True				
ANR	4199771	CallExpression	free ( filtered_name )		4199456	0					
ANR	4199772	Callee	free		4199456	0					
ANR	4199773	Identifier	free		4199456	0					
ANR	4199774	ArgumentList	filtered_name		4199456	1					
ANR	4199775	Argument	filtered_name		4199456	0					
ANR	4199776	Identifier	filtered_name		4199456	0					
ANR	4199777	BreakStatement	break ;	1443:3:45312:45317	4199456	32	True				
ANR	4199778	Label	default :	1444:2:45321:45328	4199456	33	True				
ANR	4199779	Identifier	default		4199456	0					
ANR	4199780	ExpressionStatement	r_list_free ( list )	1445:3:45333:45351	4199456	34	True				
ANR	4199781	CallExpression	r_list_free ( list )		4199456	0					
ANR	4199782	Callee	r_list_free		4199456	0					
ANR	4199783	Identifier	r_list_free		4199456	0					
ANR	4199784	ArgumentList	list		4199456	1					
ANR	4199785	Argument	list		4199456	0					
ANR	4199786	Identifier	list		4199456	0					
ANR	4199787	GotoStatement	goto show_help ;	1446:3:45356:45370	4199456	35	True				
ANR	4199788	Identifier	show_help		4199456	0					
ANR	4199789	Label	beach :	1450:0:45400:45405	4199456	17	True				
ANR	4199790	Identifier	beach		4199456	0					
ANR	4199791	IfStatement	if ( mode == 'j' )		4199456	18					
ANR	4199792	Condition	mode == 'j'	1451:5:45412:45422	4199456	0	True				
ANR	4199793	EqualityExpression	mode == 'j'		4199456	0		==			
ANR	4199794	Identifier	mode		4199456	0					
ANR	4199795	PrimaryExpression	'j'		4199456	1					
ANR	4199796	CompoundStatement		64:18:1684:1684	4199456	1					
ANR	4199797	ExpressionStatement	pj_end ( pj )	1452:2:45429:45440	4199456	0	True				
ANR	4199798	CallExpression	pj_end ( pj )		4199456	0					
ANR	4199799	Callee	pj_end		4199456	0					
ANR	4199800	Identifier	pj_end		4199456	0					
ANR	4199801	ArgumentList	pj		4199456	1					
ANR	4199802	Argument	pj		4199456	0					
ANR	4199803	Identifier	pj		4199456	0					
ANR	4199804	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	1453:2:45444:45482	4199456	1	True				
ANR	4199805	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4199456	0					
ANR	4199806	Callee	r_cons_printf		4199456	0					
ANR	4199807	Identifier	r_cons_printf		4199456	0					
ANR	4199808	ArgumentList	"""%s\\n"""		4199456	1					
ANR	4199809	Argument	"""%s\\n"""		4199456	0					
ANR	4199810	PrimaryExpression	"""%s\\n"""		4199456	0					
ANR	4199811	Argument	pj_string ( pj )		4199456	1					
ANR	4199812	CallExpression	pj_string ( pj )		4199456	0					
ANR	4199813	Callee	pj_string		4199456	0					
ANR	4199814	Identifier	pj_string		4199456	0					
ANR	4199815	ArgumentList	pj		4199456	1					
ANR	4199816	Argument	pj		4199456	0					
ANR	4199817	Identifier	pj		4199456	0					
ANR	4199818	ExpressionStatement	pj_free ( pj )	1454:2:45486:45498	4199456	2	True				
ANR	4199819	CallExpression	pj_free ( pj )		4199456	0					
ANR	4199820	Callee	pj_free		4199456	0					
ANR	4199821	Identifier	pj_free		4199456	0					
ANR	4199822	ArgumentList	pj		4199456	1					
ANR	4199823	Argument	pj		4199456	0					
ANR	4199824	Identifier	pj		4199456	0					
ANR	4199825	ExpressionStatement	r_list_free ( list )	1456:1:45504:45522	4199456	19	True				
ANR	4199826	CallExpression	r_list_free ( list )		4199456	0					
ANR	4199827	Callee	r_list_free		4199456	0					
ANR	4199828	Identifier	r_list_free		4199456	0					
ANR	4199829	ArgumentList	list		4199456	1					
ANR	4199830	Argument	list		4199456	0					
ANR	4199831	Identifier	list		4199456	0					
ANR	4199832	ReturnType	static void		4199456	1					
ANR	4199833	Identifier	cmd_debug_modules		4199456	2					
ANR	4199834	ParameterList	"RCore * core , int mode"		4199456	3					
ANR	4199835	Parameter	RCore * core	1388:30:43717:43727	4199456	0	True				
ANR	4199836	ParameterType	RCore *		4199456	0					
ANR	4199837	Identifier	core		4199456	1					
ANR	4199838	Parameter	int mode	1388:43:43730:43737	4199456	1	True				
ANR	4199839	ParameterType	int		4199456	0					
ANR	4199840	Identifier	mode		4199456	1					
ANR	4199841	CFGEntryNode	ENTRY		4199456		True				
ANR	4199842	CFGExitNode	EXIT		4199456		True				
ANR	4199843	Symbol	map -> addr		4199456						
ANR	4199844	Symbol	pj_string		4199456						
ANR	4199845	Symbol	r_debug_modules_list		4199456						
ANR	4199846	Symbol	* map		4199456						
ANR	4199847	Symbol	map -> file		4199456						
ANR	4199848	Symbol	* core		4199456						
ANR	4199849	Symbol	core -> offset		4199456						
ANR	4199850	Symbol	iter		4199456						
ANR	4199851	Symbol	list		4199456						
ANR	4199852	Symbol	mode		4199456						
ANR	4199853	Symbol	r_str_escape		4199456						
ANR	4199854	Symbol	core		4199456						
ANR	4199855	Symbol	filtered_name		4199456						
ANR	4199856	Symbol	map -> name		4199456						
ANR	4199857	Symbol	escaped_path		4199456						
ANR	4199858	Symbol	help_msg_dmm		4199456						
ANR	4199859	Symbol	map -> addr_end		4199456						
ANR	4199860	Symbol	pj		4199456						
ANR	4199861	Symbol	pj_new		4199456						
ANR	4199862	Symbol	strdup		4199456						
ANR	4199863	Symbol	addr		4199456						
ANR	4199864	Symbol	map		4199456						
ANR	4199865	Symbol	core -> dbg		4199456						
ANR	4199866	DeclStmt									
ANR	4199867	Decl							int	"int ( RCore * core , const char * input )"	cmd_dbg_map_heap_glibc_32
ANR	4199868	DeclStmt									
ANR	4199869	Decl							int	"int ( RCore * core , const char * input )"	cmd_dbg_map_heap_glibc_64
ANR	4199870	DeclStmt									
ANR	4199871	Decl							int	"int ( RCore * core , const char * input )"	cmd_debug_map_heap_win
ANR	4199872	Function	addroflib	1469:0:45911:46455							
ANR	4199873	FunctionDef	"addroflib (RCore * core , const char * libname)"		4199872	0					
ANR	4199874	CompoundStatement		1469:56:45967:46455	4199872	0					
ANR	4199875	IdentifierDeclStatement	RListIter * iter ;	1470:1:45970:45985	4199872	0	True				
ANR	4199876	IdentifierDecl	* iter		4199872	0					
ANR	4199877	IdentifierDeclType	RListIter *		4199872	0					
ANR	4199878	Identifier	iter		4199872	1					
ANR	4199879	IdentifierDeclStatement	RDebugMap * map ;	1471:1:45988:46002	4199872	1	True				
ANR	4199880	IdentifierDecl	* map		4199872	0					
ANR	4199881	IdentifierDeclType	RDebugMap *		4199872	0					
ANR	4199882	Identifier	map		4199872	1					
ANR	4199883	IfStatement	if ( ! core || ! libname )		4199872	2					
ANR	4199884	Condition	! core || ! libname	1472:5:46009:46025	4199872	0	True				
ANR	4199885	OrExpression	! core || ! libname		4199872	0		||			
ANR	4199886	UnaryOperationExpression	! core		4199872	0					
ANR	4199887	UnaryOperator	!		4199872	0					
ANR	4199888	Identifier	core		4199872	1					
ANR	4199889	UnaryOperationExpression	! libname		4199872	1					
ANR	4199890	UnaryOperator	!		4199872	0					
ANR	4199891	Identifier	libname		4199872	1					
ANR	4199892	CompoundStatement		4:24:60:60	4199872	1					
ANR	4199893	ReturnStatement	return UT64_MAX ;	1473:2:46032:46047	4199872	0	True				
ANR	4199894	Identifier	UT64_MAX		4199872	0					
ANR	4199895	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1475:1:46053:46081	4199872	3	True				
ANR	4199896	CallExpression	r_debug_map_sync ( core -> dbg )		4199872	0					
ANR	4199897	Callee	r_debug_map_sync		4199872	0					
ANR	4199898	Identifier	r_debug_map_sync		4199872	0					
ANR	4199899	ArgumentList	core -> dbg		4199872	1					
ANR	4199900	Argument	core -> dbg		4199872	0					
ANR	4199901	PtrMemberAccess	core -> dbg		4199872	0					
ANR	4199902	Identifier	core		4199872	0					
ANR	4199903	Identifier	dbg		4199872	1					
ANR	4199904	IdentifierDeclStatement	RList * list = r_debug_modules_list ( core -> dbg ) ;	1477:1:46142:46188	4199872	4	True				
ANR	4199905	IdentifierDecl	* list = r_debug_modules_list ( core -> dbg )		4199872	0					
ANR	4199906	IdentifierDeclType	RList *		4199872	0					
ANR	4199907	Identifier	list		4199872	1					
ANR	4199908	AssignmentExpression	* list = r_debug_modules_list ( core -> dbg )		4199872	2		=			
ANR	4199909	Identifier	list		4199872	0					
ANR	4199910	CallExpression	r_debug_modules_list ( core -> dbg )		4199872	1					
ANR	4199911	Callee	r_debug_modules_list		4199872	0					
ANR	4199912	Identifier	r_debug_modules_list		4199872	0					
ANR	4199913	ArgumentList	core -> dbg		4199872	1					
ANR	4199914	Argument	core -> dbg		4199872	0					
ANR	4199915	PtrMemberAccess	core -> dbg		4199872	0					
ANR	4199916	Identifier	core		4199872	0					
ANR	4199917	Identifier	dbg		4199872	1					
ANR	4199918	Statement	r_list_foreach	1478:1:46191:46204	4199872	5	True				
ANR	4199919	Statement	(	1478:16:46206:46206	4199872	6	True				
ANR	4199920	Statement	list	1478:17:46207:46210	4199872	7	True				
ANR	4199921	Statement	","	1478:21:46211:46211	4199872	8	True				
ANR	4199922	Statement	iter	1478:23:46213:46216	4199872	9	True				
ANR	4199923	Statement	","	1478:27:46217:46217	4199872	10	True				
ANR	4199924	Statement	map	1478:29:46219:46221	4199872	11	True				
ANR	4199925	Statement	)	1478:32:46222:46222	4199872	12	True				
ANR	4199926	CompoundStatement		10:34:256:256	4199872	13					
ANR	4199927	IfStatement	"if ( strstr ( r_file_basename ( map -> name ) , libname ) )"		4199872	0					
ANR	4199928	Condition	"strstr ( r_file_basename ( map -> name ) , libname )"	1479:6:46232:46275	4199872	0	True				
ANR	4199929	CallExpression	"strstr ( r_file_basename ( map -> name ) , libname )"		4199872	0					
ANR	4199930	Callee	strstr		4199872	0					
ANR	4199931	Identifier	strstr		4199872	0					
ANR	4199932	ArgumentList	r_file_basename ( map -> name )		4199872	1					
ANR	4199933	Argument	r_file_basename ( map -> name )		4199872	0					
ANR	4199934	CallExpression	r_file_basename ( map -> name )		4199872	0					
ANR	4199935	Callee	r_file_basename		4199872	0					
ANR	4199936	Identifier	r_file_basename		4199872	0					
ANR	4199937	ArgumentList	map -> name		4199872	1					
ANR	4199938	Argument	map -> name		4199872	0					
ANR	4199939	PtrMemberAccess	map -> name		4199872	0					
ANR	4199940	Identifier	map		4199872	0					
ANR	4199941	Identifier	name		4199872	1					
ANR	4199942	Argument	libname		4199872	1					
ANR	4199943	Identifier	libname		4199872	0					
ANR	4199944	CompoundStatement		11:52:310:310	4199872	1					
ANR	4199945	ReturnStatement	return map -> addr ;	1480:3:46283:46299	4199872	0	True				
ANR	4199946	PtrMemberAccess	map -> addr		4199872	0					
ANR	4199947	Identifier	map		4199872	0					
ANR	4199948	Identifier	addr		4199872	1					
ANR	4199949	Statement	r_list_foreach	1483:1:46309:46322	4199872	14	True				
ANR	4199950	Statement	(	1483:16:46324:46324	4199872	15	True				
ANR	4199951	Statement	core	1483:17:46325:46328	4199872	16	True				
ANR	4199952	Statement	->	1483:21:46329:46330	4199872	17	True				
ANR	4199953	Statement	dbg	1483:23:46331:46333	4199872	18	True				
ANR	4199954	Statement	->	1483:26:46334:46335	4199872	19	True				
ANR	4199955	Statement	maps	1483:28:46336:46339	4199872	20	True				
ANR	4199956	Statement	","	1483:32:46340:46340	4199872	21	True				
ANR	4199957	Statement	iter	1483:34:46342:46345	4199872	22	True				
ANR	4199958	Statement	","	1483:38:46346:46346	4199872	23	True				
ANR	4199959	Statement	map	1483:40:46348:46350	4199872	24	True				
ANR	4199960	Statement	)	1483:43:46351:46351	4199872	25	True				
ANR	4199961	CompoundStatement		15:45:385:385	4199872	26					
ANR	4199962	IfStatement	"if ( strstr ( r_file_basename ( map -> name ) , libname ) )"		4199872	0					
ANR	4199963	Condition	"strstr ( r_file_basename ( map -> name ) , libname )"	1484:6:46361:46404	4199872	0	True				
ANR	4199964	CallExpression	"strstr ( r_file_basename ( map -> name ) , libname )"		4199872	0					
ANR	4199965	Callee	strstr		4199872	0					
ANR	4199966	Identifier	strstr		4199872	0					
ANR	4199967	ArgumentList	r_file_basename ( map -> name )		4199872	1					
ANR	4199968	Argument	r_file_basename ( map -> name )		4199872	0					
ANR	4199969	CallExpression	r_file_basename ( map -> name )		4199872	0					
ANR	4199970	Callee	r_file_basename		4199872	0					
ANR	4199971	Identifier	r_file_basename		4199872	0					
ANR	4199972	ArgumentList	map -> name		4199872	1					
ANR	4199973	Argument	map -> name		4199872	0					
ANR	4199974	PtrMemberAccess	map -> name		4199872	0					
ANR	4199975	Identifier	map		4199872	0					
ANR	4199976	Identifier	name		4199872	1					
ANR	4199977	Argument	libname		4199872	1					
ANR	4199978	Identifier	libname		4199872	0					
ANR	4199979	CompoundStatement		16:52:439:439	4199872	1					
ANR	4199980	ReturnStatement	return map -> addr ;	1485:3:46412:46428	4199872	0	True				
ANR	4199981	PtrMemberAccess	map -> addr		4199872	0					
ANR	4199982	Identifier	map		4199872	0					
ANR	4199983	Identifier	addr		4199872	1					
ANR	4199984	ReturnStatement	return UT64_MAX ;	1488:1:46438:46453	4199872	27	True				
ANR	4199985	Identifier	UT64_MAX		4199872	0					
ANR	4199986	ReturnType	static ut64		4199872	1					
ANR	4199987	Identifier	addroflib		4199872	2					
ANR	4199988	ParameterList	"RCore * core , const char * libname"		4199872	3					
ANR	4199989	Parameter	RCore * core	1469:22:45933:45943	4199872	0	True				
ANR	4199990	ParameterType	RCore *		4199872	0					
ANR	4199991	Identifier	core		4199872	1					
ANR	4199992	Parameter	const char * libname	1469:35:45946:45964	4199872	1	True				
ANR	4199993	ParameterType	const char *		4199872	0					
ANR	4199994	Identifier	libname		4199872	1					
ANR	4199995	CFGEntryNode	ENTRY		4199872		True				
ANR	4199996	CFGExitNode	EXIT		4199872		True				
ANR	4199997	Symbol	map -> addr		4199872						
ANR	4199998	Symbol	r_debug_modules_list		4199872						
ANR	4199999	Symbol	* map		4199872						
ANR	4200000	Symbol	* core		4199872						
ANR	4200001	Symbol	iter		4199872						
ANR	4200002	Symbol	list		4199872						
ANR	4200003	Symbol	r_file_basename		4199872						
ANR	4200004	Symbol	core		4199872						
ANR	4200005	Symbol	map -> name		4199872						
ANR	4200006	Symbol	strstr		4199872						
ANR	4200007	Symbol	libname		4199872						
ANR	4200008	Symbol	UT64_MAX		4199872						
ANR	4200009	Symbol	map		4199872						
ANR	4200010	Symbol	core -> dbg		4199872						
ANR	4200011	Function	get_closest_map	1491:0:46458:46921							
ANR	4200012	FunctionDef	"get_closest_map (RCore * core , ut64 addr)"		4200011	0					
ANR	4200013	CompoundStatement		1491:58:46516:46921	4200011	0					
ANR	4200014	IdentifierDeclStatement	RListIter * iter ;	1492:1:46519:46534	4200011	0	True				
ANR	4200015	IdentifierDecl	* iter		4200011	0					
ANR	4200016	IdentifierDeclType	RListIter *		4200011	0					
ANR	4200017	Identifier	iter		4200011	1					
ANR	4200018	IdentifierDeclStatement	RDebugMap * map ;	1493:1:46537:46551	4200011	1	True				
ANR	4200019	IdentifierDecl	* map		4200011	0					
ANR	4200020	IdentifierDeclType	RDebugMap *		4200011	0					
ANR	4200021	Identifier	map		4200011	1					
ANR	4200022	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1495:1:46555:46583	4200011	2	True				
ANR	4200023	CallExpression	r_debug_map_sync ( core -> dbg )		4200011	0					
ANR	4200024	Callee	r_debug_map_sync		4200011	0					
ANR	4200025	Identifier	r_debug_map_sync		4200011	0					
ANR	4200026	ArgumentList	core -> dbg		4200011	1					
ANR	4200027	Argument	core -> dbg		4200011	0					
ANR	4200028	PtrMemberAccess	core -> dbg		4200011	0					
ANR	4200029	Identifier	core		4200011	0					
ANR	4200030	Identifier	dbg		4200011	1					
ANR	4200031	IdentifierDeclStatement	RList * list = r_debug_modules_list ( core -> dbg ) ;	1496:1:46586:46632	4200011	3	True				
ANR	4200032	IdentifierDecl	* list = r_debug_modules_list ( core -> dbg )		4200011	0					
ANR	4200033	IdentifierDeclType	RList *		4200011	0					
ANR	4200034	Identifier	list		4200011	1					
ANR	4200035	AssignmentExpression	* list = r_debug_modules_list ( core -> dbg )		4200011	2		=			
ANR	4200036	Identifier	list		4200011	0					
ANR	4200037	CallExpression	r_debug_modules_list ( core -> dbg )		4200011	1					
ANR	4200038	Callee	r_debug_modules_list		4200011	0					
ANR	4200039	Identifier	r_debug_modules_list		4200011	0					
ANR	4200040	ArgumentList	core -> dbg		4200011	1					
ANR	4200041	Argument	core -> dbg		4200011	0					
ANR	4200042	PtrMemberAccess	core -> dbg		4200011	0					
ANR	4200043	Identifier	core		4200011	0					
ANR	4200044	Identifier	dbg		4200011	1					
ANR	4200045	Statement	r_list_foreach	1497:1:46635:46648	4200011	4	True				
ANR	4200046	Statement	(	1497:16:46650:46650	4200011	5	True				
ANR	4200047	Statement	list	1497:17:46651:46654	4200011	6	True				
ANR	4200048	Statement	","	1497:21:46655:46655	4200011	7	True				
ANR	4200049	Statement	iter	1497:23:46657:46660	4200011	8	True				
ANR	4200050	Statement	","	1497:27:46661:46661	4200011	9	True				
ANR	4200051	Statement	map	1497:29:46663:46665	4200011	10	True				
ANR	4200052	Statement	)	1497:32:46666:46666	4200011	11	True				
ANR	4200053	CompoundStatement		7:34:151:151	4200011	12					
ANR	4200054	IfStatement	if ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) )		4200011	0					
ANR	4200055	Condition	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )	1498:6:46676:46738	4200011	0	True				
ANR	4200056	AndExpression	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )		4200011	0		&&			
ANR	4200057	EqualityExpression	addr != UT64_MAX		4200011	0		!=			
ANR	4200058	Identifier	addr		4200011	0					
ANR	4200059	Identifier	UT64_MAX		4200011	1					
ANR	4200060	AndExpression	addr >= map -> addr && addr < map -> addr_end		4200011	1		&&			
ANR	4200061	RelationalExpression	addr >= map -> addr		4200011	0		>=			
ANR	4200062	Identifier	addr		4200011	0					
ANR	4200063	PtrMemberAccess	map -> addr		4200011	1					
ANR	4200064	Identifier	map		4200011	0					
ANR	4200065	Identifier	addr		4200011	1					
ANR	4200066	RelationalExpression	addr < map -> addr_end		4200011	1		<			
ANR	4200067	Identifier	addr		4200011	0					
ANR	4200068	PtrMemberAccess	map -> addr_end		4200011	1					
ANR	4200069	Identifier	map		4200011	0					
ANR	4200070	Identifier	addr_end		4200011	1					
ANR	4200071	CompoundStatement		8:71:224:224	4200011	1					
ANR	4200072	ReturnStatement	return map ;	1499:3:46746:46756	4200011	0	True				
ANR	4200073	Identifier	map		4200011	0					
ANR	4200074	Statement	r_list_foreach	1502:1:46766:46779	4200011	13	True				
ANR	4200075	Statement	(	1502:16:46781:46781	4200011	14	True				
ANR	4200076	Statement	core	1502:17:46782:46785	4200011	15	True				
ANR	4200077	Statement	->	1502:21:46786:46787	4200011	16	True				
ANR	4200078	Statement	dbg	1502:23:46788:46790	4200011	17	True				
ANR	4200079	Statement	->	1502:26:46791:46792	4200011	18	True				
ANR	4200080	Statement	maps	1502:28:46793:46796	4200011	19	True				
ANR	4200081	Statement	","	1502:32:46797:46797	4200011	20	True				
ANR	4200082	Statement	iter	1502:34:46799:46802	4200011	21	True				
ANR	4200083	Statement	","	1502:38:46803:46803	4200011	22	True				
ANR	4200084	Statement	map	1502:40:46805:46807	4200011	23	True				
ANR	4200085	Statement	)	1502:43:46808:46808	4200011	24	True				
ANR	4200086	CompoundStatement		12:45:293:293	4200011	25					
ANR	4200087	IfStatement	if ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) )		4200011	0					
ANR	4200088	Condition	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )	1503:6:46818:46880	4200011	0	True				
ANR	4200089	AndExpression	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )		4200011	0		&&			
ANR	4200090	EqualityExpression	addr != UT64_MAX		4200011	0		!=			
ANR	4200091	Identifier	addr		4200011	0					
ANR	4200092	Identifier	UT64_MAX		4200011	1					
ANR	4200093	AndExpression	addr >= map -> addr && addr < map -> addr_end		4200011	1		&&			
ANR	4200094	RelationalExpression	addr >= map -> addr		4200011	0		>=			
ANR	4200095	Identifier	addr		4200011	0					
ANR	4200096	PtrMemberAccess	map -> addr		4200011	1					
ANR	4200097	Identifier	map		4200011	0					
ANR	4200098	Identifier	addr		4200011	1					
ANR	4200099	RelationalExpression	addr < map -> addr_end		4200011	1		<			
ANR	4200100	Identifier	addr		4200011	0					
ANR	4200101	PtrMemberAccess	map -> addr_end		4200011	1					
ANR	4200102	Identifier	map		4200011	0					
ANR	4200103	Identifier	addr_end		4200011	1					
ANR	4200104	CompoundStatement		13:71:366:366	4200011	1					
ANR	4200105	ReturnStatement	return map ;	1504:3:46888:46898	4200011	0	True				
ANR	4200106	Identifier	map		4200011	0					
ANR	4200107	ReturnStatement	return NULL ;	1507:1:46908:46919	4200011	26	True				
ANR	4200108	Identifier	NULL		4200011	0					
ANR	4200109	ReturnType	static RDebugMap *		4200011	1					
ANR	4200110	Identifier	get_closest_map		4200011	2					
ANR	4200111	ParameterList	"RCore * core , ut64 addr"		4200011	3					
ANR	4200112	Parameter	RCore * core	1491:34:46492:46502	4200011	0	True				
ANR	4200113	ParameterType	RCore *		4200011	0					
ANR	4200114	Identifier	core		4200011	1					
ANR	4200115	Parameter	ut64 addr	1491:47:46505:46513	4200011	1	True				
ANR	4200116	ParameterType	ut64		4200011	0					
ANR	4200117	Identifier	addr		4200011	1					
ANR	4200118	CFGEntryNode	ENTRY		4200011		True				
ANR	4200119	CFGExitNode	EXIT		4200011		True				
ANR	4200120	Symbol	map -> addr		4200011						
ANR	4200121	Symbol	NULL		4200011						
ANR	4200122	Symbol	r_debug_modules_list		4200011						
ANR	4200123	Symbol	* map		4200011						
ANR	4200124	Symbol	* core		4200011						
ANR	4200125	Symbol	iter		4200011						
ANR	4200126	Symbol	list		4200011						
ANR	4200127	Symbol	core		4200011						
ANR	4200128	Symbol	map -> addr_end		4200011						
ANR	4200129	Symbol	addr		4200011						
ANR	4200130	Symbol	UT64_MAX		4200011						
ANR	4200131	Symbol	map		4200011						
ANR	4200132	Symbol	core -> dbg		4200011						
ANR	4200133	Function	r_debug_heap	1510:0:46924:47734							
ANR	4200134	FunctionDef	"r_debug_heap (RCore * core , const char * input)"		4200133	0					
ANR	4200135	CompoundStatement		1510:56:46980:47734	4200133	0					
ANR	4200136	IdentifierDeclStatement	"const char * m = r_config_get ( core -> config , ""dbg.malloc"" ) ;"	1511:1:46983:47040	4200133	0	True				
ANR	4200137	IdentifierDecl	"* m = r_config_get ( core -> config , ""dbg.malloc"" )"		4200133	0					
ANR	4200138	IdentifierDeclType	const char *		4200133	0					
ANR	4200139	Identifier	m		4200133	1					
ANR	4200140	AssignmentExpression	"* m = r_config_get ( core -> config , ""dbg.malloc"" )"		4200133	2		=			
ANR	4200141	Identifier	m		4200133	0					
ANR	4200142	CallExpression	"r_config_get ( core -> config , ""dbg.malloc"" )"		4200133	1					
ANR	4200143	Callee	r_config_get		4200133	0					
ANR	4200144	Identifier	r_config_get		4200133	0					
ANR	4200145	ArgumentList	core -> config		4200133	1					
ANR	4200146	Argument	core -> config		4200133	0					
ANR	4200147	PtrMemberAccess	core -> config		4200133	0					
ANR	4200148	Identifier	core		4200133	0					
ANR	4200149	Identifier	config		4200133	1					
ANR	4200150	Argument	"""dbg.malloc"""		4200133	1					
ANR	4200151	PrimaryExpression	"""dbg.malloc"""		4200133	0					
ANR	4200152	IfStatement	"if ( m && ! strcmp ( ""glibc"" , m ) )"		4200133	1					
ANR	4200153	Condition	"m && ! strcmp ( ""glibc"" , m )"	1512:5:47047:47071	4200133	0	True				
ANR	4200154	AndExpression	"m && ! strcmp ( ""glibc"" , m )"		4200133	0		&&			
ANR	4200155	Identifier	m		4200133	0					
ANR	4200156	UnaryOperationExpression	"! strcmp ( ""glibc"" , m )"		4200133	1					
ANR	4200157	UnaryOperator	!		4200133	0					
ANR	4200158	CallExpression	"strcmp ( ""glibc"" , m )"		4200133	1					
ANR	4200159	Callee	strcmp		4200133	0					
ANR	4200160	Identifier	strcmp		4200133	0					
ANR	4200161	ArgumentList	"""glibc"""		4200133	1					
ANR	4200162	Argument	"""glibc"""		4200133	0					
ANR	4200163	PrimaryExpression	"""glibc"""		4200133	0					
ANR	4200164	Argument	m		4200133	1					
ANR	4200165	Identifier	m		4200133	0					
ANR	4200166	CompoundStatement		3:32:93:93	4200133	1					
ANR	4200167	IfStatement	if ( core -> assembler -> bits == 64 )		4200133	0					
ANR	4200168	Condition	core -> assembler -> bits == 64	1514:6:47147:47173	4200133	0	True				
ANR	4200169	EqualityExpression	core -> assembler -> bits == 64		4200133	0		==			
ANR	4200170	PtrMemberAccess	core -> assembler -> bits		4200133	0					
ANR	4200171	PtrMemberAccess	core -> assembler		4200133	0					
ANR	4200172	Identifier	core		4200133	0					
ANR	4200173	Identifier	assembler		4200133	1					
ANR	4200174	Identifier	bits		4200133	1					
ANR	4200175	PrimaryExpression	64		4200133	1					
ANR	4200176	CompoundStatement		5:35:195:195	4200133	1					
ANR	4200177	ExpressionStatement	"cmd_dbg_map_heap_glibc_64 ( core , input + 1 )"	1515:3:47181:47224	4200133	0	True				
ANR	4200178	CallExpression	"cmd_dbg_map_heap_glibc_64 ( core , input + 1 )"		4200133	0					
ANR	4200179	Callee	cmd_dbg_map_heap_glibc_64		4200133	0					
ANR	4200180	Identifier	cmd_dbg_map_heap_glibc_64		4200133	0					
ANR	4200181	ArgumentList	core		4200133	1					
ANR	4200182	Argument	core		4200133	0					
ANR	4200183	Identifier	core		4200133	0					
ANR	4200184	Argument	input + 1		4200133	1					
ANR	4200185	AdditiveExpression	input + 1		4200133	0		+			
ANR	4200186	Identifier	input		4200133	0					
ANR	4200187	PrimaryExpression	1		4200133	1					
ANR	4200188	ElseStatement	else		4200133	0					
ANR	4200189	CompoundStatement		7:9:254:254	4200133	0					
ANR	4200190	ExpressionStatement	"cmd_dbg_map_heap_glibc_32 ( core , input + 1 )"	1517:3:47240:47283	4200133	0	True				
ANR	4200191	CallExpression	"cmd_dbg_map_heap_glibc_32 ( core , input + 1 )"		4200133	0					
ANR	4200192	Callee	cmd_dbg_map_heap_glibc_32		4200133	0					
ANR	4200193	Identifier	cmd_dbg_map_heap_glibc_32		4200133	0					
ANR	4200194	ArgumentList	core		4200133	1					
ANR	4200195	Argument	core		4200133	0					
ANR	4200196	Identifier	core		4200133	0					
ANR	4200197	Argument	input + 1		4200133	1					
ANR	4200198	AdditiveExpression	input + 1		4200133	0		+			
ANR	4200199	Identifier	input		4200133	0					
ANR	4200200	PrimaryExpression	1		4200133	1					
ANR	4200201	ElseStatement	else		4200133	0					
ANR	4200202	IfStatement	"if ( m && ! strcmp ( ""jemalloc"" , m ) )"		4200133	0					
ANR	4200203	Condition	"m && ! strcmp ( ""jemalloc"" , m )"	1523:12:47387:47414	4200133	0	True				
ANR	4200204	AndExpression	"m && ! strcmp ( ""jemalloc"" , m )"		4200133	0		&&			
ANR	4200205	Identifier	m		4200133	0					
ANR	4200206	UnaryOperationExpression	"! strcmp ( ""jemalloc"" , m )"		4200133	1					
ANR	4200207	UnaryOperator	!		4200133	0					
ANR	4200208	CallExpression	"strcmp ( ""jemalloc"" , m )"		4200133	1					
ANR	4200209	Callee	strcmp		4200133	0					
ANR	4200210	Identifier	strcmp		4200133	0					
ANR	4200211	ArgumentList	"""jemalloc"""		4200133	1					
ANR	4200212	Argument	"""jemalloc"""		4200133	0					
ANR	4200213	PrimaryExpression	"""jemalloc"""		4200133	0					
ANR	4200214	Argument	m		4200133	1					
ANR	4200215	Identifier	m		4200133	0					
ANR	4200216	CompoundStatement		14:42:436:436	4200133	1					
ANR	4200217	IfStatement	if ( core -> assembler -> bits == 64 )		4200133	0					
ANR	4200218	Condition	core -> assembler -> bits == 64	1524:6:47425:47451	4200133	0	True				
ANR	4200219	EqualityExpression	core -> assembler -> bits == 64		4200133	0		==			
ANR	4200220	PtrMemberAccess	core -> assembler -> bits		4200133	0					
ANR	4200221	PtrMemberAccess	core -> assembler		4200133	0					
ANR	4200222	Identifier	core		4200133	0					
ANR	4200223	Identifier	assembler		4200133	1					
ANR	4200224	Identifier	bits		4200133	1					
ANR	4200225	PrimaryExpression	64		4200133	1					
ANR	4200226	CompoundStatement		15:35:473:473	4200133	1					
ANR	4200227	ExpressionStatement	"cmd_dbg_map_jemalloc_64 ( core , input + 1 )"	1525:3:47459:47500	4200133	0	True				
ANR	4200228	CallExpression	"cmd_dbg_map_jemalloc_64 ( core , input + 1 )"		4200133	0					
ANR	4200229	Callee	cmd_dbg_map_jemalloc_64		4200133	0					
ANR	4200230	Identifier	cmd_dbg_map_jemalloc_64		4200133	0					
ANR	4200231	ArgumentList	core		4200133	1					
ANR	4200232	Argument	core		4200133	0					
ANR	4200233	Identifier	core		4200133	0					
ANR	4200234	Argument	input + 1		4200133	1					
ANR	4200235	AdditiveExpression	input + 1		4200133	0		+			
ANR	4200236	Identifier	input		4200133	0					
ANR	4200237	PrimaryExpression	1		4200133	1					
ANR	4200238	ElseStatement	else		4200133	0					
ANR	4200239	CompoundStatement		17:9:530:530	4200133	0					
ANR	4200240	ExpressionStatement	"cmd_dbg_map_jemalloc_32 ( core , input + 1 )"	1527:3:47516:47557	4200133	0	True				
ANR	4200241	CallExpression	"cmd_dbg_map_jemalloc_32 ( core , input + 1 )"		4200133	0					
ANR	4200242	Callee	cmd_dbg_map_jemalloc_32		4200133	0					
ANR	4200243	Identifier	cmd_dbg_map_jemalloc_32		4200133	0					
ANR	4200244	ArgumentList	core		4200133	1					
ANR	4200245	Argument	core		4200133	0					
ANR	4200246	Identifier	core		4200133	0					
ANR	4200247	Argument	input + 1		4200133	1					
ANR	4200248	AdditiveExpression	input + 1		4200133	0		+			
ANR	4200249	Identifier	input		4200133	0					
ANR	4200250	PrimaryExpression	1		4200133	1					
ANR	4200251	ElseStatement	else		4200133	0					
ANR	4200252	CompoundStatement		21:8:597:597	4200133	0					
ANR	4200253	ExpressionStatement	"cmd_debug_map_heap_win ( core , input + 1 )"	1532:2:47598:47638	4200133	0	True				
ANR	4200254	CallExpression	"cmd_debug_map_heap_win ( core , input + 1 )"		4200133	0					
ANR	4200255	Callee	cmd_debug_map_heap_win		4200133	0					
ANR	4200256	Identifier	cmd_debug_map_heap_win		4200133	0					
ANR	4200257	ArgumentList	core		4200133	1					
ANR	4200258	Argument	core		4200133	0					
ANR	4200259	Identifier	core		4200133	0					
ANR	4200260	Argument	input + 1		4200133	1					
ANR	4200261	AdditiveExpression	input + 1		4200133	0		+			
ANR	4200262	Identifier	input		4200133	0					
ANR	4200263	PrimaryExpression	1		4200133	1					
ANR	4200264	ReturnStatement	return true ;	1538:1:47721:47732	4200133	2	True				
ANR	4200265	Identifier	true		4200133	0					
ANR	4200266	ReturnType	static int		4200133	1					
ANR	4200267	Identifier	r_debug_heap		4200133	2					
ANR	4200268	ParameterList	"RCore * core , const char * input"		4200133	3					
ANR	4200269	Parameter	RCore * core	1510:24:46948:46958	4200133	0	True				
ANR	4200270	ParameterType	RCore *		4200133	0					
ANR	4200271	Identifier	core		4200133	1					
ANR	4200272	Parameter	const char * input	1510:37:46961:46977	4200133	1	True				
ANR	4200273	ParameterType	const char *		4200133	0					
ANR	4200274	Identifier	input		4200133	1					
ANR	4200275	CFGEntryNode	ENTRY		4200133		True				
ANR	4200276	CFGExitNode	EXIT		4200133		True				
ANR	4200277	Symbol	core -> config		4200133						
ANR	4200278	Symbol	strcmp		4200133						
ANR	4200279	Symbol	* core -> assembler		4200133						
ANR	4200280	Symbol	core		4200133						
ANR	4200281	Symbol	input		4200133						
ANR	4200282	Symbol	r_config_get		4200133						
ANR	4200283	Symbol	* core		4200133						
ANR	4200284	Symbol	core -> assembler -> bits		4200133						
ANR	4200285	Symbol	true		4200133						
ANR	4200286	Symbol	core -> assembler		4200133						
ANR	4200287	Symbol	m		4200133						
ANR	4200288	Symbol	* * core		4200133						
ANR	4200289	Function	cmd_debug_map	1541:0:47737:57334							
ANR	4200290	FunctionDef	"cmd_debug_map (RCore * core , const char * input)"		4200289	0					
ANR	4200291	CompoundStatement		1541:57:47794:57334	4200289	0					
ANR	4200292	IdentifierDeclStatement	RListIter * iter ;	1542:1:47797:47812	4200289	0	True				
ANR	4200293	IdentifierDecl	* iter		4200289	0					
ANR	4200294	IdentifierDeclType	RListIter *		4200289	0					
ANR	4200295	Identifier	iter		4200289	1					
ANR	4200296	IdentifierDeclStatement	RDebugMap * map ;	1543:1:47815:47829	4200289	1	True				
ANR	4200297	IdentifierDecl	* map		4200289	0					
ANR	4200298	IdentifierDeclType	RDebugMap *		4200289	0					
ANR	4200299	Identifier	map		4200289	1					
ANR	4200300	IdentifierDeclStatement	ut64 addr = core -> offset ;	1544:1:47832:47856	4200289	2	True				
ANR	4200301	IdentifierDecl	addr = core -> offset		4200289	0					
ANR	4200302	IdentifierDeclType	ut64		4200289	0					
ANR	4200303	Identifier	addr		4200289	1					
ANR	4200304	AssignmentExpression	addr = core -> offset		4200289	2		=			
ANR	4200305	Identifier	addr		4200289	0					
ANR	4200306	PtrMemberAccess	core -> offset		4200289	1					
ANR	4200307	Identifier	core		4200289	0					
ANR	4200308	Identifier	offset		4200289	1					
ANR	4200309	SwitchStatement	switch ( input [ 0 ] )		4200289	3					
ANR	4200310	Condition	input [ 0 ]	1546:9:47868:47875	4200289	0	True				
ANR	4200311	ArrayIndexing	input [ 0 ]		4200289	0					
ANR	4200312	Identifier	input		4200289	0					
ANR	4200313	PrimaryExpression	0		4200289	1					
ANR	4200314	CompoundStatement		6:19:83:83	4200289	1					
ANR	4200315	Label	case 's' :	1547:1:47881:47889	4200289	0	True				
ANR	4200316	ExpressionStatement	"cmd_debug_map_snapshot ( core , input + 1 )"	1548:2:47902:47942	4200289	1	True				
ANR	4200317	CallExpression	"cmd_debug_map_snapshot ( core , input + 1 )"		4200289	0					
ANR	4200318	Callee	cmd_debug_map_snapshot		4200289	0					
ANR	4200319	Identifier	cmd_debug_map_snapshot		4200289	0					
ANR	4200320	ArgumentList	core		4200289	1					
ANR	4200321	Argument	core		4200289	0					
ANR	4200322	Identifier	core		4200289	0					
ANR	4200323	Argument	input + 1		4200289	1					
ANR	4200324	AdditiveExpression	input + 1		4200289	0		+			
ANR	4200325	Identifier	input		4200289	0					
ANR	4200326	PrimaryExpression	1		4200289	1					
ANR	4200327	BreakStatement	break ;	1549:2:47946:47951	4200289	2	True				
ANR	4200328	Label	case '.' :	1550:1:47954:47962	4200289	3	True				
ANR	4200329	ExpressionStatement	"r_debug_map_list ( core -> dbg , addr , input )"	1551:2:47975:48016	4200289	4	True				
ANR	4200330	CallExpression	"r_debug_map_list ( core -> dbg , addr , input )"		4200289	0					
ANR	4200331	Callee	r_debug_map_list		4200289	0					
ANR	4200332	Identifier	r_debug_map_list		4200289	0					
ANR	4200333	ArgumentList	core -> dbg		4200289	1					
ANR	4200334	Argument	core -> dbg		4200289	0					
ANR	4200335	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4200336	Identifier	core		4200289	0					
ANR	4200337	Identifier	dbg		4200289	1					
ANR	4200338	Argument	addr		4200289	1					
ANR	4200339	Identifier	addr		4200289	0					
ANR	4200340	Argument	input		4200289	2					
ANR	4200341	Identifier	input		4200289	0					
ANR	4200342	BreakStatement	break ;	1552:2:48020:48025	4200289	5	True				
ANR	4200343	Label	case 'm' :	1553:1:48028:48036	4200289	6	True				
ANR	4200344	IfStatement	"if ( ! strcmp ( input + 1 , "".*"" ) )"		4200289	7					
ANR	4200345	Condition	"! strcmp ( input + 1 , "".*"" )"	1554:6:48053:48077	4200289	0	True				
ANR	4200346	UnaryOperationExpression	"! strcmp ( input + 1 , "".*"" )"		4200289	0					
ANR	4200347	UnaryOperator	!		4200289	0					
ANR	4200348	CallExpression	"strcmp ( input + 1 , "".*"" )"		4200289	1					
ANR	4200349	Callee	strcmp		4200289	0					
ANR	4200350	Identifier	strcmp		4200289	0					
ANR	4200351	ArgumentList	input + 1		4200289	1					
ANR	4200352	Argument	input + 1		4200289	0					
ANR	4200353	AdditiveExpression	input + 1		4200289	0		+			
ANR	4200354	Identifier	input		4200289	0					
ANR	4200355	PrimaryExpression	1		4200289	1					
ANR	4200356	Argument	""".*"""		4200289	1					
ANR	4200357	PrimaryExpression	""".*"""		4200289	0					
ANR	4200358	CompoundStatement		14:33:285:285	4200289	1					
ANR	4200359	ExpressionStatement	"cmd_debug_modules ( core , ':' )"	1555:3:48085:48114	4200289	0	True				
ANR	4200360	CallExpression	"cmd_debug_modules ( core , ':' )"		4200289	0					
ANR	4200361	Callee	cmd_debug_modules		4200289	0					
ANR	4200362	Identifier	cmd_debug_modules		4200289	0					
ANR	4200363	ArgumentList	core		4200289	1					
ANR	4200364	Argument	core		4200289	0					
ANR	4200365	Identifier	core		4200289	0					
ANR	4200366	Argument	':'		4200289	1					
ANR	4200367	PrimaryExpression	':'		4200289	0					
ANR	4200368	ElseStatement	else		4200289	0					
ANR	4200369	ExpressionStatement	"cmd_debug_modules ( core , input [ 1 ] )"	1556:9:48125:48159	4200289	0	True				
ANR	4200370	CallExpression	"cmd_debug_modules ( core , input [ 1 ] )"		4200289	0					
ANR	4200371	Callee	cmd_debug_modules		4200289	0					
ANR	4200372	Identifier	cmd_debug_modules		4200289	0					
ANR	4200373	ArgumentList	core		4200289	1					
ANR	4200374	Argument	core		4200289	0					
ANR	4200375	Identifier	core		4200289	0					
ANR	4200376	Argument	input [ 1 ]		4200289	1					
ANR	4200377	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200378	Identifier	input		4200289	0					
ANR	4200379	PrimaryExpression	1		4200289	1					
ANR	4200380	BreakStatement	break ;	1557:2:48163:48168	4200289	8	True				
ANR	4200381	Label	case '?' :	1558:1:48171:48179	4200289	9	True				
ANR	4200382	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dm )"	1559:2:48192:48227	4200289	10	True				
ANR	4200383	CallExpression	"r_core_cmd_help ( core , help_msg_dm )"		4200289	0					
ANR	4200384	Callee	r_core_cmd_help		4200289	0					
ANR	4200385	Identifier	r_core_cmd_help		4200289	0					
ANR	4200386	ArgumentList	core		4200289	1					
ANR	4200387	Argument	core		4200289	0					
ANR	4200388	Identifier	core		4200289	0					
ANR	4200389	Argument	help_msg_dm		4200289	1					
ANR	4200390	Identifier	help_msg_dm		4200289	0					
ANR	4200391	BreakStatement	break ;	1560:2:48231:48236	4200289	11	True				
ANR	4200392	Label	case 'p' :	1561:1:48239:48247	4200289	12	True				
ANR	4200393	IfStatement	if ( input [ 1 ] == '?' )		4200289	13					
ANR	4200394	Condition	input [ 1 ] == '?'	1562:6:48264:48278	4200289	0	True				
ANR	4200395	EqualityExpression	input [ 1 ] == '?'		4200289	0		==			
ANR	4200396	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200397	Identifier	input		4200289	0					
ANR	4200398	PrimaryExpression	1		4200289	1					
ANR	4200399	PrimaryExpression	'?'		4200289	1					
ANR	4200400	CompoundStatement		22:23:486:486	4200289	1					
ANR	4200401	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dmp )"	1563:3:48286:48322	4200289	0	True				
ANR	4200402	CallExpression	"r_core_cmd_help ( core , help_msg_dmp )"		4200289	0					
ANR	4200403	Callee	r_core_cmd_help		4200289	0					
ANR	4200404	Identifier	r_core_cmd_help		4200289	0					
ANR	4200405	ArgumentList	core		4200289	1					
ANR	4200406	Argument	core		4200289	0					
ANR	4200407	Identifier	core		4200289	0					
ANR	4200408	Argument	help_msg_dmp		4200289	1					
ANR	4200409	Identifier	help_msg_dmp		4200289	0					
ANR	4200410	ElseStatement	else		4200289	0					
ANR	4200411	IfStatement	if ( input [ 1 ] == ' ' )		4200289	0					
ANR	4200412	Condition	input [ 1 ] == ' '	1564:13:48337:48351	4200289	0	True				
ANR	4200413	EqualityExpression	input [ 1 ] == ' '		4200289	0		==			
ANR	4200414	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200415	Identifier	input		4200289	0					
ANR	4200416	PrimaryExpression	1		4200289	1					
ANR	4200417	PrimaryExpression	' '		4200289	1					
ANR	4200418	CompoundStatement		27:3:594:613	4200289	1					
ANR	4200419	IdentifierDeclStatement	int perms ;	1565:3:48359:48368	4200289	0	True				
ANR	4200420	IdentifierDecl	perms		4200289	0					
ANR	4200421	IdentifierDeclType	int		4200289	0					
ANR	4200422	Identifier	perms		4200289	1					
ANR	4200423	IdentifierDeclStatement	"char * p , * q ;"	1566:3:48373:48384	4200289	1	True				
ANR	4200424	IdentifierDecl	* p		4200289	0					
ANR	4200425	IdentifierDeclType	char *		4200289	0					
ANR	4200426	Identifier	p		4200289	1					
ANR	4200427	IdentifierDecl	* q		4200289	1					
ANR	4200428	IdentifierDeclType	char *		4200289	0					
ANR	4200429	Identifier	q		4200289	1					
ANR	4200430	IdentifierDeclStatement	"ut64 size = 0 , addr ;"	1567:3:48389:48408	4200289	2	True				
ANR	4200431	IdentifierDecl	size = 0		4200289	0					
ANR	4200432	IdentifierDeclType	ut64		4200289	0					
ANR	4200433	Identifier	size		4200289	1					
ANR	4200434	AssignmentExpression	size = 0		4200289	2		=			
ANR	4200435	Identifier	size		4200289	0					
ANR	4200436	PrimaryExpression	0		4200289	1					
ANR	4200437	IdentifierDecl	addr		4200289	1					
ANR	4200438	IdentifierDeclType	ut64		4200289	0					
ANR	4200439	Identifier	addr		4200289	1					
ANR	4200440	ExpressionStatement	"p = strchr ( input + 2 , ' ' )"	1568:3:48413:48440	4200289	3	True				
ANR	4200441	AssignmentExpression	"p = strchr ( input + 2 , ' ' )"		4200289	0		=			
ANR	4200442	Identifier	p		4200289	0					
ANR	4200443	CallExpression	"strchr ( input + 2 , ' ' )"		4200289	1					
ANR	4200444	Callee	strchr		4200289	0					
ANR	4200445	Identifier	strchr		4200289	0					
ANR	4200446	ArgumentList	input + 2		4200289	1					
ANR	4200447	Argument	input + 2		4200289	0					
ANR	4200448	AdditiveExpression	input + 2		4200289	0		+			
ANR	4200449	Identifier	input		4200289	0					
ANR	4200450	PrimaryExpression	2		4200289	1					
ANR	4200451	Argument	' '		4200289	1					
ANR	4200452	PrimaryExpression	' '		4200289	0					
ANR	4200453	IfStatement	if ( p )		4200289	4					
ANR	4200454	Condition	p	1569:7:48449:48449	4200289	0	True				
ANR	4200455	Identifier	p		4200289	0					
ANR	4200456	CompoundStatement		29:10:657:657	4200289	1					
ANR	4200457	ExpressionStatement	* p ++ = 0	1570:4:48458:48466	4200289	0	True				
ANR	4200458	AssignmentExpression	* p ++ = 0		4200289	0		=			
ANR	4200459	UnaryOperationExpression	* p ++		4200289	0					
ANR	4200460	UnaryOperator	*		4200289	0					
ANR	4200461	PostIncDecOperationExpression	p ++		4200289	1					
ANR	4200462	Identifier	p		4200289	0					
ANR	4200463	IncDec	++		4200289	1					
ANR	4200464	PrimaryExpression	0		4200289	1					
ANR	4200465	ExpressionStatement	"q = strchr ( p , ' ' )"	1571:4:48472:48491	4200289	1	True				
ANR	4200466	AssignmentExpression	"q = strchr ( p , ' ' )"		4200289	0		=			
ANR	4200467	Identifier	q		4200289	0					
ANR	4200468	CallExpression	"strchr ( p , ' ' )"		4200289	1					
ANR	4200469	Callee	strchr		4200289	0					
ANR	4200470	Identifier	strchr		4200289	0					
ANR	4200471	ArgumentList	p		4200289	1					
ANR	4200472	Argument	p		4200289	0					
ANR	4200473	Identifier	p		4200289	0					
ANR	4200474	Argument	' '		4200289	1					
ANR	4200475	PrimaryExpression	' '		4200289	0					
ANR	4200476	IfStatement	if ( q )		4200289	2					
ANR	4200477	Condition	q	1572:8:48501:48501	4200289	0	True				
ANR	4200478	Identifier	q		4200289	0					
ANR	4200479	CompoundStatement		32:11:709:709	4200289	1					
ANR	4200480	ExpressionStatement	* q ++ = 0	1573:5:48511:48519	4200289	0	True				
ANR	4200481	AssignmentExpression	* q ++ = 0		4200289	0		=			
ANR	4200482	UnaryOperationExpression	* q ++		4200289	0					
ANR	4200483	UnaryOperator	*		4200289	0					
ANR	4200484	PostIncDecOperationExpression	q ++		4200289	1					
ANR	4200485	Identifier	q		4200289	0					
ANR	4200486	IncDec	++		4200289	1					
ANR	4200487	PrimaryExpression	0		4200289	1					
ANR	4200488	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	1574:5:48526:48566	4200289	1	True				
ANR	4200489	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4200289	0		=			
ANR	4200490	Identifier	addr		4200289	0					
ANR	4200491	CallExpression	"r_num_math ( core -> num , input + 2 )"		4200289	1					
ANR	4200492	Callee	r_num_math		4200289	0					
ANR	4200493	Identifier	r_num_math		4200289	0					
ANR	4200494	ArgumentList	core -> num		4200289	1					
ANR	4200495	Argument	core -> num		4200289	0					
ANR	4200496	PtrMemberAccess	core -> num		4200289	0					
ANR	4200497	Identifier	core		4200289	0					
ANR	4200498	Identifier	num		4200289	1					
ANR	4200499	Argument	input + 2		4200289	1					
ANR	4200500	AdditiveExpression	input + 2		4200289	0		+			
ANR	4200501	Identifier	input		4200289	0					
ANR	4200502	PrimaryExpression	2		4200289	1					
ANR	4200503	ExpressionStatement	"size = r_num_math ( core -> num , p )"	1575:5:48573:48605	4200289	2	True				
ANR	4200504	AssignmentExpression	"size = r_num_math ( core -> num , p )"		4200289	0		=			
ANR	4200505	Identifier	size		4200289	0					
ANR	4200506	CallExpression	"r_num_math ( core -> num , p )"		4200289	1					
ANR	4200507	Callee	r_num_math		4200289	0					
ANR	4200508	Identifier	r_num_math		4200289	0					
ANR	4200509	ArgumentList	core -> num		4200289	1					
ANR	4200510	Argument	core -> num		4200289	0					
ANR	4200511	PtrMemberAccess	core -> num		4200289	0					
ANR	4200512	Identifier	core		4200289	0					
ANR	4200513	Identifier	num		4200289	1					
ANR	4200514	Argument	p		4200289	1					
ANR	4200515	Identifier	p		4200289	0					
ANR	4200516	ExpressionStatement	perms = r_str_rwx ( q )	1576:5:48612:48633	4200289	3	True				
ANR	4200517	AssignmentExpression	perms = r_str_rwx ( q )		4200289	0		=			
ANR	4200518	Identifier	perms		4200289	0					
ANR	4200519	CallExpression	r_str_rwx ( q )		4200289	1					
ANR	4200520	Callee	r_str_rwx		4200289	0					
ANR	4200521	Identifier	r_str_rwx		4200289	0					
ANR	4200522	ArgumentList	q		4200289	1					
ANR	4200523	Argument	q		4200289	0					
ANR	4200524	Identifier	q		4200289	0					
ANR	4200525	ExpressionStatement	"r_debug_map_protect ( core -> dbg , addr , size , perms )"	1579:5:48760:48810	4200289	4	True				
ANR	4200526	CallExpression	"r_debug_map_protect ( core -> dbg , addr , size , perms )"		4200289	0					
ANR	4200527	Callee	r_debug_map_protect		4200289	0					
ANR	4200528	Identifier	r_debug_map_protect		4200289	0					
ANR	4200529	ArgumentList	core -> dbg		4200289	1					
ANR	4200530	Argument	core -> dbg		4200289	0					
ANR	4200531	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4200532	Identifier	core		4200289	0					
ANR	4200533	Identifier	dbg		4200289	1					
ANR	4200534	Argument	addr		4200289	1					
ANR	4200535	Identifier	addr		4200289	0					
ANR	4200536	Argument	size		4200289	2					
ANR	4200537	Identifier	size		4200289	0					
ANR	4200538	Argument	perms		4200289	3					
ANR	4200539	Identifier	perms		4200289	0					
ANR	4200540	ElseStatement	else		4200289	0					
ANR	4200541	ExpressionStatement	"eprintf ( ""See dmp?\\n"" )"	1580:11:48823:48845	4200289	0	True				
ANR	4200542	CallExpression	"eprintf ( ""See dmp?\\n"" )"		4200289	0					
ANR	4200543	Callee	eprintf		4200289	0					
ANR	4200544	Identifier	eprintf		4200289	0					
ANR	4200545	ArgumentList	"""See dmp?\\n"""		4200289	1					
ANR	4200546	Argument	"""See dmp?\\n"""		4200289	0					
ANR	4200547	PrimaryExpression	"""See dmp?\\n"""		4200289	0					
ANR	4200548	ElseStatement	else		4200289	0					
ANR	4200549	CompoundStatement		41:10:1062:1062	4200289	0					
ANR	4200550	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1582:4:48863:48891	4200289	0	True				
ANR	4200551	CallExpression	r_debug_map_sync ( core -> dbg )		4200289	0					
ANR	4200552	Callee	r_debug_map_sync		4200289	0					
ANR	4200553	Identifier	r_debug_map_sync		4200289	0					
ANR	4200554	ArgumentList	core -> dbg		4200289	1					
ANR	4200555	Argument	core -> dbg		4200289	0					
ANR	4200556	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4200557	Identifier	core		4200289	0					
ANR	4200558	Identifier	dbg		4200289	1					
ANR	4200559	ExpressionStatement	addr = UT64_MAX	1583:4:48927:48942	4200289	1	True				
ANR	4200560	AssignmentExpression	addr = UT64_MAX		4200289	0		=			
ANR	4200561	Identifier	addr		4200289	0					
ANR	4200562	Identifier	UT64_MAX		4200289	1					
ANR	4200563	Statement	r_list_foreach	1584:4:48948:48961	4200289	2	True				
ANR	4200564	Statement	(	1584:19:48963:48963	4200289	3	True				
ANR	4200565	Statement	core	1584:20:48964:48967	4200289	4	True				
ANR	4200566	Statement	->	1584:24:48968:48969	4200289	5	True				
ANR	4200567	Statement	dbg	1584:26:48970:48972	4200289	6	True				
ANR	4200568	Statement	->	1584:29:48973:48974	4200289	7	True				
ANR	4200569	Statement	maps	1584:31:48975:48978	4200289	8	True				
ANR	4200570	Statement	","	1584:35:48979:48979	4200289	9	True				
ANR	4200571	Statement	iter	1584:37:48981:48984	4200289	10	True				
ANR	4200572	Statement	","	1584:41:48985:48985	4200289	11	True				
ANR	4200573	Statement	map	1584:43:48987:48989	4200289	12	True				
ANR	4200574	Statement	)	1584:46:48990:48990	4200289	13	True				
ANR	4200575	CompoundStatement		44:48:1197:1197	4200289	14					
ANR	4200576	IfStatement	if ( core -> offset >= map -> addr && core -> offset < map -> addr_end )		4200289	0					
ANR	4200577	Condition	core -> offset >= map -> addr && core -> offset < map -> addr_end	1585:9:49003:49060	4200289	0	True				
ANR	4200578	AndExpression	core -> offset >= map -> addr && core -> offset < map -> addr_end		4200289	0		&&			
ANR	4200579	RelationalExpression	core -> offset >= map -> addr		4200289	0		>=			
ANR	4200580	PtrMemberAccess	core -> offset		4200289	0					
ANR	4200581	Identifier	core		4200289	0					
ANR	4200582	Identifier	offset		4200289	1					
ANR	4200583	PtrMemberAccess	map -> addr		4200289	1					
ANR	4200584	Identifier	map		4200289	0					
ANR	4200585	Identifier	addr		4200289	1					
ANR	4200586	RelationalExpression	core -> offset < map -> addr_end		4200289	1		<			
ANR	4200587	PtrMemberAccess	core -> offset		4200289	0					
ANR	4200588	Identifier	core		4200289	0					
ANR	4200589	Identifier	offset		4200289	1					
ANR	4200590	PtrMemberAccess	map -> addr_end		4200289	1					
ANR	4200591	Identifier	map		4200289	0					
ANR	4200592	Identifier	addr_end		4200289	1					
ANR	4200593	CompoundStatement		45:69:1268:1268	4200289	1					
ANR	4200594	ExpressionStatement	addr = map -> addr	1586:6:49071:49087	4200289	0	True				
ANR	4200595	AssignmentExpression	addr = map -> addr		4200289	0		=			
ANR	4200596	Identifier	addr		4200289	0					
ANR	4200597	PtrMemberAccess	map -> addr		4200289	1					
ANR	4200598	Identifier	map		4200289	0					
ANR	4200599	Identifier	addr		4200289	1					
ANR	4200600	ExpressionStatement	size = map -> size	1587:6:49095:49111	4200289	1	True				
ANR	4200601	AssignmentExpression	size = map -> size		4200289	0		=			
ANR	4200602	Identifier	size		4200289	0					
ANR	4200603	PtrMemberAccess	map -> size		4200289	1					
ANR	4200604	Identifier	map		4200289	0					
ANR	4200605	Identifier	size		4200289	1					
ANR	4200606	BreakStatement	break ;	1588:6:49119:49124	4200289	2	True				
ANR	4200607	ExpressionStatement	perms = r_str_rwx ( input + 2 )	1591:4:49143:49172	4200289	15	True				
ANR	4200608	AssignmentExpression	perms = r_str_rwx ( input + 2 )		4200289	0		=			
ANR	4200609	Identifier	perms		4200289	0					
ANR	4200610	CallExpression	r_str_rwx ( input + 2 )		4200289	1					
ANR	4200611	Callee	r_str_rwx		4200289	0					
ANR	4200612	Identifier	r_str_rwx		4200289	0					
ANR	4200613	ArgumentList	input + 2		4200289	1					
ANR	4200614	Argument	input + 2		4200289	0					
ANR	4200615	AdditiveExpression	input + 2		4200289	0		+			
ANR	4200616	Identifier	input		4200289	0					
ANR	4200617	PrimaryExpression	2		4200289	1					
ANR	4200618	IfStatement	if ( addr != UT64_MAX && perms >= 0 )		4200289	16					
ANR	4200619	Condition	addr != UT64_MAX && perms >= 0	1592:8:49182:49211	4200289	0	True				
ANR	4200620	AndExpression	addr != UT64_MAX && perms >= 0		4200289	0		&&			
ANR	4200621	EqualityExpression	addr != UT64_MAX		4200289	0		!=			
ANR	4200622	Identifier	addr		4200289	0					
ANR	4200623	Identifier	UT64_MAX		4200289	1					
ANR	4200624	RelationalExpression	perms >= 0		4200289	1		>=			
ANR	4200625	Identifier	perms		4200289	0					
ANR	4200626	PrimaryExpression	0		4200289	1					
ANR	4200627	CompoundStatement		52:40:1419:1419	4200289	1					
ANR	4200628	ExpressionStatement	"r_debug_map_protect ( core -> dbg , addr , size , perms )"	1593:5:49221:49271	4200289	0	True				
ANR	4200629	CallExpression	"r_debug_map_protect ( core -> dbg , addr , size , perms )"		4200289	0					
ANR	4200630	Callee	r_debug_map_protect		4200289	0					
ANR	4200631	Identifier	r_debug_map_protect		4200289	0					
ANR	4200632	ArgumentList	core -> dbg		4200289	1					
ANR	4200633	Argument	core -> dbg		4200289	0					
ANR	4200634	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4200635	Identifier	core		4200289	0					
ANR	4200636	Identifier	dbg		4200289	1					
ANR	4200637	Argument	addr		4200289	1					
ANR	4200638	Identifier	addr		4200289	0					
ANR	4200639	Argument	size		4200289	2					
ANR	4200640	Identifier	size		4200289	0					
ANR	4200641	Argument	perms		4200289	3					
ANR	4200642	Identifier	perms		4200289	0					
ANR	4200643	ElseStatement	else		4200289	0					
ANR	4200644	CompoundStatement		54:11:1489:1489	4200289	0					
ANR	4200645	ExpressionStatement	"eprintf ( ""See dmp?\\n"" )"	1595:5:49291:49313	4200289	0	True				
ANR	4200646	CallExpression	"eprintf ( ""See dmp?\\n"" )"		4200289	0					
ANR	4200647	Callee	eprintf		4200289	0					
ANR	4200648	Identifier	eprintf		4200289	0					
ANR	4200649	ArgumentList	"""See dmp?\\n"""		4200289	1					
ANR	4200650	Argument	"""See dmp?\\n"""		4200289	0					
ANR	4200651	PrimaryExpression	"""See dmp?\\n"""		4200289	0					
ANR	4200652	ElseStatement	else		4200289	0					
ANR	4200653	CompoundStatement		58:9:1540:1540	4200289	0					
ANR	4200654	ExpressionStatement	"eprintf ( ""See dmp?\\n"" )"	1599:3:49340:49362	4200289	0	True				
ANR	4200655	CallExpression	"eprintf ( ""See dmp?\\n"" )"		4200289	0					
ANR	4200656	Callee	eprintf		4200289	0					
ANR	4200657	Identifier	eprintf		4200289	0					
ANR	4200658	ArgumentList	"""See dmp?\\n"""		4200289	1					
ANR	4200659	Argument	"""See dmp?\\n"""		4200289	0					
ANR	4200660	PrimaryExpression	"""See dmp?\\n"""		4200289	0					
ANR	4200661	BreakStatement	break ;	1601:2:49370:49375	4200289	14	True				
ANR	4200662	Label	case 'd' :	1602:1:49378:49386	4200289	15	True				
ANR	4200663	SwitchStatement	switch ( input [ 1 ] )		4200289	16					
ANR	4200664	Condition	input [ 1 ]	1603:10:49407:49414	4200289	0	True				
ANR	4200665	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200666	Identifier	input		4200289	0					
ANR	4200667	PrimaryExpression	1		4200289	1					
ANR	4200668	CompoundStatement		63:20:1622:1622	4200289	1					
ANR	4200669	Label	case 'a' :	1604:2:49421:49429	4200289	0	True				
ANR	4200670	ReturnStatement	"return dump_maps ( core , 0 , NULL ) ;"	1604:12:49431:49463	4200289	1	True				
ANR	4200671	CallExpression	"dump_maps ( core , 0 , NULL )"		4200289	0					
ANR	4200672	Callee	dump_maps		4200289	0					
ANR	4200673	Identifier	dump_maps		4200289	0					
ANR	4200674	ArgumentList	core		4200289	1					
ANR	4200675	Argument	core		4200289	0					
ANR	4200676	Identifier	core		4200289	0					
ANR	4200677	Argument	0		4200289	1					
ANR	4200678	PrimaryExpression	0		4200289	0					
ANR	4200679	Argument	NULL		4200289	2					
ANR	4200680	Identifier	NULL		4200289	0					
ANR	4200681	Label	case 'w' :	1605:2:49467:49475	4200289	2	True				
ANR	4200682	ReturnStatement	"return dump_maps ( core , R_PERM_RW , NULL ) ;"	1605:12:49477:49517	4200289	3	True				
ANR	4200683	CallExpression	"dump_maps ( core , R_PERM_RW , NULL )"		4200289	0					
ANR	4200684	Callee	dump_maps		4200289	0					
ANR	4200685	Identifier	dump_maps		4200289	0					
ANR	4200686	ArgumentList	core		4200289	1					
ANR	4200687	Argument	core		4200289	0					
ANR	4200688	Identifier	core		4200289	0					
ANR	4200689	Argument	R_PERM_RW		4200289	1					
ANR	4200690	Identifier	R_PERM_RW		4200289	0					
ANR	4200691	Argument	NULL		4200289	2					
ANR	4200692	Identifier	NULL		4200289	0					
ANR	4200693	Label	case ' ' :	1606:2:49521:49529	4200289	4	True				
ANR	4200694	ReturnStatement	"return dump_maps ( core , - 1 , input + 2 ) ;"	1606:12:49531:49569	4200289	5	True				
ANR	4200695	CallExpression	"dump_maps ( core , - 1 , input + 2 )"		4200289	0					
ANR	4200696	Callee	dump_maps		4200289	0					
ANR	4200697	Identifier	dump_maps		4200289	0					
ANR	4200698	ArgumentList	core		4200289	1					
ANR	4200699	Argument	core		4200289	0					
ANR	4200700	Identifier	core		4200289	0					
ANR	4200701	Argument	- 1		4200289	1					
ANR	4200702	UnaryOperationExpression	- 1		4200289	0					
ANR	4200703	UnaryOperator	-		4200289	0					
ANR	4200704	PrimaryExpression	1		4200289	1					
ANR	4200705	Argument	input + 2		4200289	2					
ANR	4200706	AdditiveExpression	input + 2		4200289	0		+			
ANR	4200707	Identifier	input		4200289	0					
ANR	4200708	PrimaryExpression	2		4200289	1					
ANR	4200709	Label	case 0 :	1607:2:49573:49579	4200289	6	True				
ANR	4200710	ReturnStatement	"return dump_maps ( core , - 1 , NULL ) ;"	1607:10:49581:49614	4200289	7	True				
ANR	4200711	CallExpression	"dump_maps ( core , - 1 , NULL )"		4200289	0					
ANR	4200712	Callee	dump_maps		4200289	0					
ANR	4200713	Identifier	dump_maps		4200289	0					
ANR	4200714	ArgumentList	core		4200289	1					
ANR	4200715	Argument	core		4200289	0					
ANR	4200716	Identifier	core		4200289	0					
ANR	4200717	Argument	- 1		4200289	1					
ANR	4200718	UnaryOperationExpression	- 1		4200289	0					
ANR	4200719	UnaryOperator	-		4200289	0					
ANR	4200720	PrimaryExpression	1		4200289	1					
ANR	4200721	Argument	NULL		4200289	2					
ANR	4200722	Identifier	NULL		4200289	0					
ANR	4200723	Label	case '?' :	1608:2:49618:49626	4200289	8	True				
ANR	4200724	Label	default :	1609:2:49630:49637	4200289	9	True				
ANR	4200725	Identifier	default		4200289	0					
ANR	4200726	ExpressionStatement	"eprintf ( ""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"" )"	1610:3:49642:49707	4200289	10	True				
ANR	4200727	CallExpression	"eprintf ( ""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"" )"		4200289	0					
ANR	4200728	Callee	eprintf		4200289	0					
ANR	4200729	Identifier	eprintf		4200289	0					
ANR	4200730	ArgumentList	"""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"""		4200289	1					
ANR	4200731	Argument	"""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"""		4200289	0					
ANR	4200732	PrimaryExpression	"""Usage: dmd[aw]  - dump (all-or-writable) debug maps\\n"""		4200289	0					
ANR	4200733	BreakStatement	break ;	1611:3:49712:49717	4200289	11	True				
ANR	4200734	BreakStatement	break ;	1613:2:49725:49730	4200289	17	True				
ANR	4200735	Label	case 'l' :	1614:1:49733:49741	4200289	18	True				
ANR	4200736	IfStatement	if ( input [ 1 ] != ' ' )		4200289	19					
ANR	4200737	Condition	input [ 1 ] != ' '	1615:6:49758:49772	4200289	0	True				
ANR	4200738	EqualityExpression	input [ 1 ] != ' '		4200289	0		!=			
ANR	4200739	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200740	Identifier	input		4200289	0					
ANR	4200741	PrimaryExpression	1		4200289	1					
ANR	4200742	PrimaryExpression	' '		4200289	1					
ANR	4200743	CompoundStatement		75:23:1980:1980	4200289	1					
ANR	4200744	ExpressionStatement	"eprintf ( ""Usage: dml [file]\\n"" )"	1616:3:49780:49811	4200289	0	True				
ANR	4200745	CallExpression	"eprintf ( ""Usage: dml [file]\\n"" )"		4200289	0					
ANR	4200746	Callee	eprintf		4200289	0					
ANR	4200747	Identifier	eprintf		4200289	0					
ANR	4200748	ArgumentList	"""Usage: dml [file]\\n"""		4200289	1					
ANR	4200749	Argument	"""Usage: dml [file]\\n"""		4200289	0					
ANR	4200750	PrimaryExpression	"""Usage: dml [file]\\n"""		4200289	0					
ANR	4200751	ReturnStatement	return false ;	1617:3:49816:49828	4200289	1	True				
ANR	4200752	Identifier	false		4200289	0					
ANR	4200753	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1619:2:49836:49864	4200289	20	True				
ANR	4200754	CallExpression	r_debug_map_sync ( core -> dbg )		4200289	0					
ANR	4200755	Callee	r_debug_map_sync		4200289	0					
ANR	4200756	Identifier	r_debug_map_sync		4200289	0					
ANR	4200757	ArgumentList	core -> dbg		4200289	1					
ANR	4200758	Argument	core -> dbg		4200289	0					
ANR	4200759	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4200760	Identifier	core		4200289	0					
ANR	4200761	Identifier	dbg		4200289	1					
ANR	4200762	Statement	r_list_foreach	1620:2:49898:49911	4200289	21	True				
ANR	4200763	Statement	(	1620:17:49913:49913	4200289	22	True				
ANR	4200764	Statement	core	1620:18:49914:49917	4200289	23	True				
ANR	4200765	Statement	->	1620:22:49918:49919	4200289	24	True				
ANR	4200766	Statement	dbg	1620:24:49920:49922	4200289	25	True				
ANR	4200767	Statement	->	1620:27:49923:49924	4200289	26	True				
ANR	4200768	Statement	maps	1620:29:49925:49928	4200289	27	True				
ANR	4200769	Statement	","	1620:33:49929:49929	4200289	28	True				
ANR	4200770	Statement	iter	1620:35:49931:49934	4200289	29	True				
ANR	4200771	Statement	","	1620:39:49935:49935	4200289	30	True				
ANR	4200772	Statement	map	1620:41:49937:49939	4200289	31	True				
ANR	4200773	Statement	)	1620:44:49940:49940	4200289	32	True				
ANR	4200774	CompoundStatement		80:46:2147:2147	4200289	33					
ANR	4200775	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		4200289	0					
ANR	4200776	Condition	addr >= map -> addr && addr < map -> addr_end	1621:7:49951:49991	4200289	0	True				
ANR	4200777	AndExpression	addr >= map -> addr && addr < map -> addr_end		4200289	0		&&			
ANR	4200778	RelationalExpression	addr >= map -> addr		4200289	0		>=			
ANR	4200779	Identifier	addr		4200289	0					
ANR	4200780	PtrMemberAccess	map -> addr		4200289	1					
ANR	4200781	Identifier	map		4200289	0					
ANR	4200782	Identifier	addr		4200289	1					
ANR	4200783	RelationalExpression	addr < map -> addr_end		4200289	1		<			
ANR	4200784	Identifier	addr		4200289	0					
ANR	4200785	PtrMemberAccess	map -> addr_end		4200289	1					
ANR	4200786	Identifier	map		4200289	0					
ANR	4200787	Identifier	addr_end		4200289	1					
ANR	4200788	CompoundStatement		83:4:2217:2258	4200289	1					
ANR	4200789	IdentifierDeclStatement	int sz ;	1622:4:50000:50006	4200289	0	True				
ANR	4200790	IdentifierDecl	sz		4200289	0					
ANR	4200791	IdentifierDeclType	int		4200289	0					
ANR	4200792	Identifier	sz		4200289	1					
ANR	4200793	IdentifierDeclStatement	"char * buf = r_file_slurp ( input + 2 , & sz ) ;"	1623:4:50012:50053	4200289	1	True				
ANR	4200794	IdentifierDecl	"* buf = r_file_slurp ( input + 2 , & sz )"		4200289	0					
ANR	4200795	IdentifierDeclType	char *		4200289	0					
ANR	4200796	Identifier	buf		4200289	1					
ANR	4200797	AssignmentExpression	"* buf = r_file_slurp ( input + 2 , & sz )"		4200289	2		=			
ANR	4200798	Identifier	buf		4200289	0					
ANR	4200799	CallExpression	"r_file_slurp ( input + 2 , & sz )"		4200289	1					
ANR	4200800	Callee	r_file_slurp		4200289	0					
ANR	4200801	Identifier	r_file_slurp		4200289	0					
ANR	4200802	ArgumentList	input + 2		4200289	1					
ANR	4200803	Argument	input + 2		4200289	0					
ANR	4200804	AdditiveExpression	input + 2		4200289	0		+			
ANR	4200805	Identifier	input		4200289	0					
ANR	4200806	PrimaryExpression	2		4200289	1					
ANR	4200807	Argument	& sz		4200289	1					
ANR	4200808	UnaryOperationExpression	& sz		4200289	0					
ANR	4200809	UnaryOperator	&		4200289	0					
ANR	4200810	Identifier	sz		4200289	1					
ANR	4200811	IfStatement	if ( ! buf )		4200289	2					
ANR	4200812	Condition	! buf	1625:8:50124:50127	4200289	0	True				
ANR	4200813	UnaryOperationExpression	! buf		4200289	0					
ANR	4200814	UnaryOperator	!		4200289	0					
ANR	4200815	Identifier	buf		4200289	1					
ANR	4200816	CompoundStatement		85:14:2335:2335	4200289	1					
ANR	4200817	Statement	eprintf	1626:5:50137:50143	4200289	0	True				
ANR	4200818	Statement	(	1626:13:50145:50145	4200289	1	True				
ANR	4200819	Statement	"""Cannot allocate 0x%08"""	1626:14:50146:50168	4200289	2	True				
ANR	4200820	Statement	PFMT64x	1626:37:50169:50175	4200289	3	True				
ANR	4200821	Statement	""" byte(s)\\n"""	1626:44:50176:50187	4200289	4	True				
ANR	4200822	Statement	","	1626:56:50188:50188	4200289	5	True				
ANR	4200823	Statement	map	1626:58:50190:50192	4200289	6	True				
ANR	4200824	Statement	->	1626:61:50193:50194	4200289	7	True				
ANR	4200825	Statement	size	1626:63:50195:50198	4200289	8	True				
ANR	4200826	Statement	)	1626:67:50199:50199	4200289	9	True				
ANR	4200827	ExpressionStatement		1626:68:50200:50200	4200289	10	True				
ANR	4200828	ReturnStatement	return false ;	1627:5:50207:50219	4200289	11	True				
ANR	4200829	Identifier	false		4200289	0					
ANR	4200830	ExpressionStatement	"r_io_write_at ( core -> io , map -> addr , ( const ut8 * ) buf , sz )"	1629:4:50231:50287	4200289	3	True				
ANR	4200831	CallExpression	"r_io_write_at ( core -> io , map -> addr , ( const ut8 * ) buf , sz )"		4200289	0					
ANR	4200832	Callee	r_io_write_at		4200289	0					
ANR	4200833	Identifier	r_io_write_at		4200289	0					
ANR	4200834	ArgumentList	core -> io		4200289	1					
ANR	4200835	Argument	core -> io		4200289	0					
ANR	4200836	PtrMemberAccess	core -> io		4200289	0					
ANR	4200837	Identifier	core		4200289	0					
ANR	4200838	Identifier	io		4200289	1					
ANR	4200839	Argument	map -> addr		4200289	1					
ANR	4200840	PtrMemberAccess	map -> addr		4200289	0					
ANR	4200841	Identifier	map		4200289	0					
ANR	4200842	Identifier	addr		4200289	1					
ANR	4200843	Argument	( const ut8 * ) buf		4200289	2					
ANR	4200844	CastExpression	( const ut8 * ) buf		4200289	0					
ANR	4200845	CastTarget	const ut8 *		4200289	0					
ANR	4200846	Identifier	buf		4200289	1					
ANR	4200847	Argument	sz		4200289	3					
ANR	4200848	Identifier	sz		4200289	0					
ANR	4200849	IfStatement	if ( sz != map -> size )		4200289	4					
ANR	4200850	Condition	sz != map -> size	1630:8:50297:50311	4200289	0	True				
ANR	4200851	EqualityExpression	sz != map -> size		4200289	0		!=			
ANR	4200852	Identifier	sz		4200289	0					
ANR	4200853	PtrMemberAccess	map -> size		4200289	1					
ANR	4200854	Identifier	map		4200289	0					
ANR	4200855	Identifier	size		4200289	1					
ANR	4200856	Statement	eprintf	1631:5:50319:50325	4200289	1	True				
ANR	4200857	Statement	(	1631:13:50327:50327	4200289	5	True				
ANR	4200858	Statement	"""File size differs from region size (%d vs %"""	1631:14:50328:50372	4200289	6	True				
ANR	4200859	Statement	PFMT64d	1631:59:50373:50379	4200289	7	True				
ANR	4200860	Statement	""")\\n"""	1631:66:50380:50384	4200289	8	True				
ANR	4200861	Statement	","	1631:71:50385:50385	4200289	9	True				
ANR	4200862	Statement	sz	1632:7:50394:50395	4200289	10	True				
ANR	4200863	Statement	","	1632:9:50396:50396	4200289	11	True				
ANR	4200864	Statement	map	1632:11:50398:50400	4200289	12	True				
ANR	4200865	Statement	->	1632:14:50401:50402	4200289	13	True				
ANR	4200866	Statement	size	1632:16:50403:50406	4200289	14	True				
ANR	4200867	Statement	)	1632:20:50407:50407	4200289	15	True				
ANR	4200868	ExpressionStatement		1632:21:50408:50408	4200289	16	True				
ANR	4200869	Statement	eprintf	1633:4:50414:50420	4200289	17	True				
ANR	4200870	Statement	(	1633:12:50422:50422	4200289	18	True				
ANR	4200871	Statement	"""Loaded %d byte(s) into the map region at 0x%08"""	1633:13:50423:50470	4200289	19	True				
ANR	4200872	Statement	PFMT64x	1633:61:50471:50477	4200289	20	True				
ANR	4200873	Statement	"""\\n"""	1633:68:50478:50481	4200289	21	True				
ANR	4200874	Statement	","	1633:72:50482:50482	4200289	22	True				
ANR	4200875	Statement	sz	1634:6:50490:50491	4200289	23	True				
ANR	4200876	Statement	","	1634:8:50492:50492	4200289	24	True				
ANR	4200877	Statement	map	1634:10:50494:50496	4200289	25	True				
ANR	4200878	Statement	->	1634:13:50497:50498	4200289	26	True				
ANR	4200879	Statement	addr	1634:15:50499:50502	4200289	27	True				
ANR	4200880	Statement	)	1634:19:50503:50503	4200289	28	True				
ANR	4200881	ExpressionStatement		1634:20:50504:50504	4200289	29	True				
ANR	4200882	ExpressionStatement	free ( buf )	1635:4:50510:50520	4200289	30	True				
ANR	4200883	CallExpression	free ( buf )		4200289	0					
ANR	4200884	Callee	free		4200289	0					
ANR	4200885	Identifier	free		4200289	0					
ANR	4200886	ArgumentList	buf		4200289	1					
ANR	4200887	Argument	buf		4200289	0					
ANR	4200888	Identifier	buf		4200289	0					
ANR	4200889	ReturnStatement	return true ;	1636:4:50526:50537	4200289	31	True				
ANR	4200890	Identifier	true		4200289	0					
ANR	4200891	ExpressionStatement	"eprintf ( ""No debug region found here\\n"" )"	1639:2:50550:50590	4200289	34	True				
ANR	4200892	CallExpression	"eprintf ( ""No debug region found here\\n"" )"		4200289	0					
ANR	4200893	Callee	eprintf		4200289	0					
ANR	4200894	Identifier	eprintf		4200289	0					
ANR	4200895	ArgumentList	"""No debug region found here\\n"""		4200289	1					
ANR	4200896	Argument	"""No debug region found here\\n"""		4200289	0					
ANR	4200897	PrimaryExpression	"""No debug region found here\\n"""		4200289	0					
ANR	4200898	ReturnStatement	return false ;	1640:2:50594:50606	4200289	35	True				
ANR	4200899	Identifier	false		4200289	0					
ANR	4200900	Label	case 'i' :	1641:1:50609:50617	4200289	36	True				
ANR	4200901	SwitchStatement	switch ( input [ 1 ] )		4200289	37					
ANR	4200902	Condition	input [ 1 ]	1642:10:50638:50645	4200289	0	True				
ANR	4200903	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200904	Identifier	input		4200289	0					
ANR	4200905	PrimaryExpression	1		4200289	1					
ANR	4200906	CompoundStatement		102:20:2853:2853	4200289	1					
ANR	4200907	Label	case '\\0' :	1643:2:50652:50661	4200289	0	True				
ANR	4200908	ExpressionStatement	"r_core_cmd ( core , ""dmm"" , 0 )"	1644:3:50690:50717	4200289	1	True				
ANR	4200909	CallExpression	"r_core_cmd ( core , ""dmm"" , 0 )"		4200289	0					
ANR	4200910	Callee	r_core_cmd		4200289	0					
ANR	4200911	Identifier	r_core_cmd		4200289	0					
ANR	4200912	ArgumentList	core		4200289	1					
ANR	4200913	Argument	core		4200289	0					
ANR	4200914	Identifier	core		4200289	0					
ANR	4200915	Argument	"""dmm"""		4200289	1					
ANR	4200916	PrimaryExpression	"""dmm"""		4200289	0					
ANR	4200917	Argument	0		4200289	2					
ANR	4200918	PrimaryExpression	0		4200289	0					
ANR	4200919	BreakStatement	break ;	1645:3:50722:50727	4200289	2	True				
ANR	4200920	Label	case ' ' :	1646:2:50731:50739	4200289	3	True				
ANR	4200921	Label	case '*' :	1647:2:50753:50761	4200289	4	True				
ANR	4200922	Label	case 'v' :	1648:2:50775:50783	4200289	5	True				
ANR	4200923	CompoundStatement		113:4:3112:3117	4200289	6					
ANR	4200924	IdentifierDeclStatement	"const char * libname = NULL , * symname = NULL , * mode = """" , * a0 ;"	1650:4:50804:50864	4200289	0	True				
ANR	4200925	IdentifierDecl	* libname = NULL		4200289	0					
ANR	4200926	IdentifierDeclType	const char *		4200289	0					
ANR	4200927	Identifier	libname		4200289	1					
ANR	4200928	AssignmentExpression	* libname = NULL		4200289	2		=			
ANR	4200929	Identifier	NULL		4200289	0					
ANR	4200930	Identifier	NULL		4200289	1					
ANR	4200931	IdentifierDecl	* symname = NULL		4200289	1					
ANR	4200932	IdentifierDeclType	const char *		4200289	0					
ANR	4200933	Identifier	symname		4200289	1					
ANR	4200934	AssignmentExpression	* symname = NULL		4200289	2		=			
ANR	4200935	Identifier	NULL		4200289	0					
ANR	4200936	Identifier	NULL		4200289	1					
ANR	4200937	IdentifierDecl	"* mode = """""		4200289	2					
ANR	4200938	IdentifierDeclType	const char *		4200289	0					
ANR	4200939	Identifier	mode		4200289	1					
ANR	4200940	AssignmentExpression	"* mode = """""		4200289	2		=			
ANR	4200941	Identifier	mode		4200289	0					
ANR	4200942	PrimaryExpression	""""""		4200289	1					
ANR	4200943	IdentifierDecl	* a0		4200289	3					
ANR	4200944	IdentifierDeclType	const char *		4200289	0					
ANR	4200945	Identifier	a0		4200289	1					
ANR	4200946	Statement	ut64	1651:4:50870:50873	4200289	1	True				
ANR	4200947	Statement	baddr	1651:9:50875:50879	4200289	2	True				
ANR	4200948	Statement	=	1651:15:50881:50881	4200289	3	True				
ANR	4200949	Statement	0L	1651:17:50883:50884	4200289	4	True				
ANR	4200950	ExpressionStatement	L	1651:19:50885:50886	4200289	5	True				
ANR	4200951	Identifier	L		4200289	0					
ANR	4200952	IdentifierDeclStatement	char * ptr ;	1652:4:50892:50901	4200289	6	True				
ANR	4200953	IdentifierDecl	* ptr		4200289	0					
ANR	4200954	IdentifierDeclType	char *		4200289	0					
ANR	4200955	Identifier	ptr		4200289	1					
ANR	4200956	IdentifierDeclStatement	int i ;	1653:4:50907:50912	4200289	7	True				
ANR	4200957	IdentifierDecl	i		4200289	0					
ANR	4200958	IdentifierDeclType	int		4200289	0					
ANR	4200959	Identifier	i		4200289	1					
ANR	4200960	IfStatement	if ( input [ 1 ] == '*' )		4200289	8					
ANR	4200961	Condition	input [ 1 ] == '*'	1654:8:50922:50934	4200289	0	True				
ANR	4200962	EqualityExpression	input [ 1 ] == '*'		4200289	0		==			
ANR	4200963	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4200964	Identifier	input		4200289	0					
ANR	4200965	PrimaryExpression	1		4200289	1					
ANR	4200966	PrimaryExpression	'*'		4200289	1					
ANR	4200967	CompoundStatement		114:23:3142:3142	4200289	1					
ANR	4200968	ExpressionStatement	"mode = ""-r """	1655:5:50944:50956	4200289	0	True				
ANR	4200969	AssignmentExpression	"mode = ""-r """		4200289	0		=			
ANR	4200970	Identifier	mode		4200289	0					
ANR	4200971	PrimaryExpression	"""-r """		4200289	1					
ANR	4200972	ExpressionStatement	ptr = strdup ( r_str_trim_ro ( input + 2 ) )	1657:4:50968:51008	4200289	9	True				
ANR	4200973	AssignmentExpression	ptr = strdup ( r_str_trim_ro ( input + 2 ) )		4200289	0		=			
ANR	4200974	Identifier	ptr		4200289	0					
ANR	4200975	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		4200289	1					
ANR	4200976	Callee	strdup		4200289	0					
ANR	4200977	Identifier	strdup		4200289	0					
ANR	4200978	ArgumentList	r_str_trim_ro ( input + 2 )		4200289	1					
ANR	4200979	Argument	r_str_trim_ro ( input + 2 )		4200289	0					
ANR	4200980	CallExpression	r_str_trim_ro ( input + 2 )		4200289	0					
ANR	4200981	Callee	r_str_trim_ro		4200289	0					
ANR	4200982	Identifier	r_str_trim_ro		4200289	0					
ANR	4200983	ArgumentList	input + 2		4200289	1					
ANR	4200984	Argument	input + 2		4200289	0					
ANR	4200985	AdditiveExpression	input + 2		4200289	0		+			
ANR	4200986	Identifier	input		4200289	0					
ANR	4200987	PrimaryExpression	2		4200289	1					
ANR	4200988	IfStatement	if ( ! ptr || ! * ptr )		4200289	10					
ANR	4200989	Condition	! ptr || ! * ptr	1658:8:51018:51030	4200289	0	True				
ANR	4200990	OrExpression	! ptr || ! * ptr		4200289	0		||			
ANR	4200991	UnaryOperationExpression	! ptr		4200289	0					
ANR	4200992	UnaryOperator	!		4200289	0					
ANR	4200993	Identifier	ptr		4200289	1					
ANR	4200994	UnaryOperationExpression	! * ptr		4200289	1					
ANR	4200995	UnaryOperator	!		4200289	0					
ANR	4200996	UnaryOperationExpression	* ptr		4200289	1					
ANR	4200997	UnaryOperator	*		4200289	0					
ANR	4200998	Identifier	ptr		4200289	1					
ANR	4200999	CompoundStatement		118:23:3238:3238	4200289	1					
ANR	4201000	ExpressionStatement	"r_core_cmd ( core , ""dmm"" , 0 )"	1659:5:51040:51067	4200289	0	True				
ANR	4201001	CallExpression	"r_core_cmd ( core , ""dmm"" , 0 )"		4200289	0					
ANR	4201002	Callee	r_core_cmd		4200289	0					
ANR	4201003	Identifier	r_core_cmd		4200289	0					
ANR	4201004	ArgumentList	core		4200289	1					
ANR	4201005	Argument	core		4200289	0					
ANR	4201006	Identifier	core		4200289	0					
ANR	4201007	Argument	"""dmm"""		4200289	1					
ANR	4201008	PrimaryExpression	"""dmm"""		4200289	0					
ANR	4201009	Argument	0		4200289	2					
ANR	4201010	PrimaryExpression	0		4200289	0					
ANR	4201011	ExpressionStatement	free ( ptr )	1660:5:51074:51084	4200289	1	True				
ANR	4201012	CallExpression	free ( ptr )		4200289	0					
ANR	4201013	Callee	free		4200289	0					
ANR	4201014	Identifier	free		4200289	0					
ANR	4201015	ArgumentList	ptr		4200289	1					
ANR	4201016	Argument	ptr		4200289	0					
ANR	4201017	Identifier	ptr		4200289	0					
ANR	4201018	BreakStatement	break ;	1661:5:51091:51096	4200289	2	True				
ANR	4201019	ExpressionStatement	i = r_str_word_set0 ( ptr )	1663:4:51108:51133	4200289	11	True				
ANR	4201020	AssignmentExpression	i = r_str_word_set0 ( ptr )		4200289	0		=			
ANR	4201021	Identifier	i		4200289	0					
ANR	4201022	CallExpression	r_str_word_set0 ( ptr )		4200289	1					
ANR	4201023	Callee	r_str_word_set0		4200289	0					
ANR	4201024	Identifier	r_str_word_set0		4200289	0					
ANR	4201025	ArgumentList	ptr		4200289	1					
ANR	4201026	Argument	ptr		4200289	0					
ANR	4201027	Identifier	ptr		4200289	0					
ANR	4201028	SwitchStatement	switch ( i )		4200289	12					
ANR	4201029	Condition	i	1664:12:51147:51147	4200289	0	True				
ANR	4201030	Identifier	i		4200289	0					
ANR	4201031	CompoundStatement		124:15:3355:3355	4200289	1					
ANR	4201032	Label	case 2 :	1665:4:51156:51162	4200289	0	True				
ANR	4201033	ExpressionStatement	"symname = r_str_word_get0 ( ptr , 1 )"	1666:5:51169:51203	4200289	1	True				
ANR	4201034	AssignmentExpression	"symname = r_str_word_get0 ( ptr , 1 )"		4200289	0		=			
ANR	4201035	Identifier	symname		4200289	0					
ANR	4201036	CallExpression	"r_str_word_get0 ( ptr , 1 )"		4200289	1					
ANR	4201037	Callee	r_str_word_get0		4200289	0					
ANR	4201038	Identifier	r_str_word_get0		4200289	0					
ANR	4201039	ArgumentList	ptr		4200289	1					
ANR	4201040	Argument	ptr		4200289	0					
ANR	4201041	Identifier	ptr		4200289	0					
ANR	4201042	Argument	1		4200289	1					
ANR	4201043	PrimaryExpression	1		4200289	0					
ANR	4201044	Label	case 1 :	1668:4:51230:51236	4200289	2	True				
ANR	4201045	ExpressionStatement	"a0 = r_str_word_get0 ( ptr , 0 )"	1669:5:51243:51272	4200289	3	True				
ANR	4201046	AssignmentExpression	"a0 = r_str_word_get0 ( ptr , 0 )"		4200289	0		=			
ANR	4201047	Identifier	a0		4200289	0					
ANR	4201048	CallExpression	"r_str_word_get0 ( ptr , 0 )"		4200289	1					
ANR	4201049	Callee	r_str_word_get0		4200289	0					
ANR	4201050	Identifier	r_str_word_get0		4200289	0					
ANR	4201051	ArgumentList	ptr		4200289	1					
ANR	4201052	Argument	ptr		4200289	0					
ANR	4201053	Identifier	ptr		4200289	0					
ANR	4201054	Argument	0		4200289	1					
ANR	4201055	PrimaryExpression	0		4200289	0					
ANR	4201056	ExpressionStatement	"addr = r_num_math ( core -> num , a0 )"	1670:5:51279:51312	4200289	4	True				
ANR	4201057	AssignmentExpression	"addr = r_num_math ( core -> num , a0 )"		4200289	0		=			
ANR	4201058	Identifier	addr		4200289	0					
ANR	4201059	CallExpression	"r_num_math ( core -> num , a0 )"		4200289	1					
ANR	4201060	Callee	r_num_math		4200289	0					
ANR	4201061	Identifier	r_num_math		4200289	0					
ANR	4201062	ArgumentList	core -> num		4200289	1					
ANR	4201063	Argument	core -> num		4200289	0					
ANR	4201064	PtrMemberAccess	core -> num		4200289	0					
ANR	4201065	Identifier	core		4200289	0					
ANR	4201066	Identifier	num		4200289	1					
ANR	4201067	Argument	a0		4200289	1					
ANR	4201068	Identifier	a0		4200289	0					
ANR	4201069	IfStatement	if ( ! addr || addr == UT64_MAX )		4200289	5					
ANR	4201070	Condition	! addr || addr == UT64_MAX	1671:9:51323:51347	4200289	0	True				
ANR	4201071	OrExpression	! addr || addr == UT64_MAX		4200289	0		||			
ANR	4201072	UnaryOperationExpression	! addr		4200289	0					
ANR	4201073	UnaryOperator	!		4200289	0					
ANR	4201074	Identifier	addr		4200289	1					
ANR	4201075	EqualityExpression	addr == UT64_MAX		4200289	1		==			
ANR	4201076	Identifier	addr		4200289	0					
ANR	4201077	Identifier	UT64_MAX		4200289	1					
ANR	4201078	CompoundStatement		131:36:3555:3555	4200289	1					
ANR	4201079	ExpressionStatement	"libname = r_str_word_get0 ( ptr , 0 )"	1672:6:51358:51392	4200289	0	True				
ANR	4201080	AssignmentExpression	"libname = r_str_word_get0 ( ptr , 0 )"		4200289	0		=			
ANR	4201081	Identifier	libname		4200289	0					
ANR	4201082	CallExpression	"r_str_word_get0 ( ptr , 0 )"		4200289	1					
ANR	4201083	Callee	r_str_word_get0		4200289	0					
ANR	4201084	Identifier	r_str_word_get0		4200289	0					
ANR	4201085	ArgumentList	ptr		4200289	1					
ANR	4201086	Argument	ptr		4200289	0					
ANR	4201087	Identifier	ptr		4200289	0					
ANR	4201088	Argument	0		4200289	1					
ANR	4201089	PrimaryExpression	0		4200289	0					
ANR	4201090	BreakStatement	break ;	1674:5:51406:51411	4200289	6	True				
ANR	4201091	IfStatement	if ( libname && ! addr )		4200289	13					
ANR	4201092	Condition	libname && ! addr	1676:8:51427:51442	4200289	0	True				
ANR	4201093	AndExpression	libname && ! addr		4200289	0		&&			
ANR	4201094	Identifier	libname		4200289	0					
ANR	4201095	UnaryOperationExpression	! addr		4200289	1					
ANR	4201096	UnaryOperator	!		4200289	0					
ANR	4201097	Identifier	addr		4200289	1					
ANR	4201098	CompoundStatement		136:26:3650:3650	4200289	1					
ANR	4201099	ExpressionStatement	"addr = addroflib ( core , libname )"	1677:5:51452:51484	4200289	0	True				
ANR	4201100	AssignmentExpression	"addr = addroflib ( core , libname )"		4200289	0		=			
ANR	4201101	Identifier	addr		4200289	0					
ANR	4201102	CallExpression	"addroflib ( core , libname )"		4200289	1					
ANR	4201103	Callee	addroflib		4200289	0					
ANR	4201104	Identifier	addroflib		4200289	0					
ANR	4201105	ArgumentList	core		4200289	1					
ANR	4201106	Argument	core		4200289	0					
ANR	4201107	Identifier	core		4200289	0					
ANR	4201108	Argument	libname		4200289	1					
ANR	4201109	Identifier	libname		4200289	0					
ANR	4201110	IfStatement	if ( addr == UT64_MAX )		4200289	1					
ANR	4201111	Condition	addr == UT64_MAX	1678:9:51495:51510	4200289	0	True				
ANR	4201112	EqualityExpression	addr == UT64_MAX		4200289	0		==			
ANR	4201113	Identifier	addr		4200289	0					
ANR	4201114	Identifier	UT64_MAX		4200289	1					
ANR	4201115	CompoundStatement		138:27:3718:3718	4200289	1					
ANR	4201116	ExpressionStatement	"eprintf ( ""Unknown library, or not found in dm\\n"" )"	1679:6:51521:51570	4200289	0	True				
ANR	4201117	CallExpression	"eprintf ( ""Unknown library, or not found in dm\\n"" )"		4200289	0					
ANR	4201118	Callee	eprintf		4200289	0					
ANR	4201119	Identifier	eprintf		4200289	0					
ANR	4201120	ArgumentList	"""Unknown library, or not found in dm\\n"""		4200289	1					
ANR	4201121	Argument	"""Unknown library, or not found in dm\\n"""		4200289	0					
ANR	4201122	PrimaryExpression	"""Unknown library, or not found in dm\\n"""		4200289	0					
ANR	4201123	ExpressionStatement	"map = get_closest_map ( core , addr )"	1682:4:51589:51623	4200289	14	True				
ANR	4201124	AssignmentExpression	"map = get_closest_map ( core , addr )"		4200289	0		=			
ANR	4201125	Identifier	map		4200289	0					
ANR	4201126	CallExpression	"get_closest_map ( core , addr )"		4200289	1					
ANR	4201127	Callee	get_closest_map		4200289	0					
ANR	4201128	Identifier	get_closest_map		4200289	0					
ANR	4201129	ArgumentList	core		4200289	1					
ANR	4201130	Argument	core		4200289	0					
ANR	4201131	Identifier	core		4200289	0					
ANR	4201132	Argument	addr		4200289	1					
ANR	4201133	Identifier	addr		4200289	0					
ANR	4201134	IfStatement	if ( map )		4200289	15					
ANR	4201135	Condition	map	1683:8:51633:51635	4200289	0	True				
ANR	4201136	Identifier	map		4200289	0					
ANR	4201137	CompoundStatement		144:5:3850:3871	4200289	1					
ANR	4201138	IdentifierDeclStatement	RCoreBinFilter filter ;	1684:5:51645:51666	4200289	0	True				
ANR	4201139	IdentifierDecl	filter		4200289	0					
ANR	4201140	IdentifierDeclType	RCoreBinFilter		4200289	0					
ANR	4201141	Identifier	filter		4200289	1					
ANR	4201142	Statement	filter	1685:5:51673:51678	4200289	1	True				
ANR	4201143	Statement	.	1685:11:51679:51679	4200289	2	True				
ANR	4201144	Statement	offset	1685:12:51680:51685	4200289	3	True				
ANR	4201145	Statement	=	1685:19:51687:51687	4200289	4	True				
ANR	4201146	Statement	0L	1685:21:51689:51690	4200289	5	True				
ANR	4201147	ExpressionStatement	L	1685:23:51691:51692	4200289	6	True				
ANR	4201148	Identifier	L		4200289	0					
ANR	4201149	ExpressionStatement	filter . name = ( char * ) symname	1686:5:51699:51728	4200289	7	True				
ANR	4201150	AssignmentExpression	filter . name = ( char * ) symname		4200289	0		=			
ANR	4201151	MemberAccess	filter . name		4200289	0					
ANR	4201152	Identifier	filter		4200289	0					
ANR	4201153	Identifier	name		4200289	1					
ANR	4201154	CastExpression	( char * ) symname		4200289	1					
ANR	4201155	CastTarget	char *		4200289	0					
ANR	4201156	Identifier	symname		4200289	1					
ANR	4201157	ExpressionStatement	baddr = map -> addr	1687:5:51735:51752	4200289	8	True				
ANR	4201158	AssignmentExpression	baddr = map -> addr		4200289	0		=			
ANR	4201159	Identifier	baddr		4200289	0					
ANR	4201160	PtrMemberAccess	map -> addr		4200289	1					
ANR	4201161	Identifier	map		4200289	0					
ANR	4201162	Identifier	addr		4200289	1					
ANR	4201163	IfStatement	if ( libname )		4200289	9					
ANR	4201164	Condition	libname	1689:9:51764:51770	4200289	0	True				
ANR	4201165	Identifier	libname		4200289	0					
ANR	4201166	CompoundStatement		152:6:4067:4087	4200289	1					
ANR	4201167	IdentifierDeclStatement	"char * cmd , * res ;"	1690:6:51781:51796	4200289	0	True				
ANR	4201168	IdentifierDecl	* cmd		4200289	0					
ANR	4201169	IdentifierDeclType	char *		4200289	0					
ANR	4201170	Identifier	cmd		4200289	1					
ANR	4201171	IdentifierDecl	* res		4200289	1					
ANR	4201172	IdentifierDeclType	char *		4200289	0					
ANR	4201173	Identifier	res		4200289	1					
ANR	4201174	IdentifierDeclStatement	const char * file = map -> file ? map -> file : map -> name ;	1691:6:51804:51854	4200289	1	True				
ANR	4201175	IdentifierDecl	* file = map -> file ? map -> file : map -> name		4200289	0					
ANR	4201176	IdentifierDeclType	const char *		4200289	0					
ANR	4201177	Identifier	file		4200289	1					
ANR	4201178	AssignmentExpression	* file = map -> file ? map -> file : map -> name		4200289	2		=			
ANR	4201179	Identifier	file		4200289	0					
ANR	4201180	ConditionalExpression	map -> file ? map -> file : map -> name		4200289	1					
ANR	4201181	Condition	map -> file		4200289	0					
ANR	4201182	PtrMemberAccess	map -> file		4200289	0					
ANR	4201183	Identifier	map		4200289	0					
ANR	4201184	Identifier	file		4200289	1					
ANR	4201185	PtrMemberAccess	map -> file		4200289	1					
ANR	4201186	Identifier	map		4200289	0					
ANR	4201187	Identifier	file		4200289	1					
ANR	4201188	PtrMemberAccess	map -> name		4200289	2					
ANR	4201189	Identifier	map		4200289	0					
ANR	4201190	Identifier	name		4200289	1					
ANR	4201191	IdentifierDeclStatement	char * newfile = NULL ;	1692:6:51862:51882	4200289	2	True				
ANR	4201192	IdentifierDecl	* newfile = NULL		4200289	0					
ANR	4201193	IdentifierDeclType	char *		4200289	0					
ANR	4201194	Identifier	newfile		4200289	1					
ANR	4201195	AssignmentExpression	* newfile = NULL		4200289	2		=			
ANR	4201196	Identifier	NULL		4200289	0					
ANR	4201197	Identifier	NULL		4200289	1					
ANR	4201198	IfStatement	if ( ! r_file_exists ( file ) )		4200289	3					
ANR	4201199	Condition	! r_file_exists ( file )	1693:10:51894:51914	4200289	0	True				
ANR	4201200	UnaryOperationExpression	! r_file_exists ( file )		4200289	0					
ANR	4201201	UnaryOperator	!		4200289	0					
ANR	4201202	CallExpression	r_file_exists ( file )		4200289	1					
ANR	4201203	Callee	r_file_exists		4200289	0					
ANR	4201204	Identifier	r_file_exists		4200289	0					
ANR	4201205	ArgumentList	file		4200289	1					
ANR	4201206	Argument	file		4200289	0					
ANR	4201207	Identifier	file		4200289	0					
ANR	4201208	CompoundStatement		153:33:4122:4122	4200289	1					
ANR	4201209	ExpressionStatement	"newfile = r_file_temp ( ""memlib"" )"	1694:7:51926:51958	4200289	0	True				
ANR	4201210	AssignmentExpression	"newfile = r_file_temp ( ""memlib"" )"		4200289	0		=			
ANR	4201211	Identifier	newfile		4200289	0					
ANR	4201212	CallExpression	"r_file_temp ( ""memlib"" )"		4200289	1					
ANR	4201213	Callee	r_file_temp		4200289	0					
ANR	4201214	Identifier	r_file_temp		4200289	0					
ANR	4201215	ArgumentList	"""memlib"""		4200289	1					
ANR	4201216	Argument	"""memlib"""		4200289	0					
ANR	4201217	PrimaryExpression	"""memlib"""		4200289	0					
ANR	4201218	IfStatement	if ( newfile )		4200289	1					
ANR	4201219	Condition	newfile	1695:11:51971:51977	4200289	0	True				
ANR	4201220	Identifier	newfile		4200289	0					
ANR	4201221	CompoundStatement		155:20:4185:4185	4200289	1					
ANR	4201222	ExpressionStatement	file = newfile	1696:8:51990:52004	4200289	0	True				
ANR	4201223	AssignmentExpression	file = newfile		4200289	0		=			
ANR	4201224	Identifier	file		4200289	0					
ANR	4201225	Identifier	newfile		4200289	1					
ANR	4201226	Statement	r_core_cmdf	1697:8:52014:52024	4200289	1	True				
ANR	4201227	Statement	(	1697:20:52026:52026	4200289	2	True				
ANR	4201228	Statement	core	1697:21:52027:52030	4200289	3	True				
ANR	4201229	Statement	","	1697:25:52031:52031	4200289	4	True				
ANR	4201230	Statement	"""wtf %s 0x%"""	1697:27:52033:52044	4200289	5	True				
ANR	4201231	Statement	PFMT64x	1697:39:52045:52051	4200289	6	True				
ANR	4201232	Statement	""" @ 0x%"""	1697:46:52052:52059	4200289	7	True				
ANR	4201233	Statement	PFMT64x	1697:54:52060:52066	4200289	8	True				
ANR	4201234	Statement	""" 2> %s"""	1697:61:52067:52074	4200289	9	True				
ANR	4201235	Statement	","	1697:69:52075:52075	4200289	10	True				
ANR	4201236	Statement	file	1698:21:52098:52101	4200289	11	True				
ANR	4201237	Statement	","	1698:25:52102:52102	4200289	12	True				
ANR	4201238	Statement	map	1698:27:52104:52106	4200289	13	True				
ANR	4201239	Statement	->	1698:30:52107:52108	4200289	14	True				
ANR	4201240	Statement	size	1698:32:52109:52112	4200289	15	True				
ANR	4201241	Statement	","	1698:36:52113:52113	4200289	16	True				
ANR	4201242	Statement	baddr	1698:38:52115:52119	4200289	17	True				
ANR	4201243	Statement	","	1698:43:52120:52120	4200289	18	True				
ANR	4201244	Statement	R_SYS_DEVNULL	1698:45:52122:52134	4200289	19	True				
ANR	4201245	Statement	)	1698:58:52135:52135	4200289	20	True				
ANR	4201246	ExpressionStatement		1698:59:52136:52136	4200289	21	True				
ANR	4201247	IfStatement	if ( symname )		4200289	4					
ANR	4201248	Condition	symname	1701:10:52165:52171	4200289	0	True				
ANR	4201249	Identifier	symname		4200289	0					
ANR	4201250	CompoundStatement		161:19:4379:4379	4200289	1					
ANR	4201251	Statement	cmd	1702:7:52183:52185	4200289	0	True				
ANR	4201252	Statement	=	1702:11:52187:52187	4200289	1	True				
ANR	4201253	Statement	r_str_newf	1702:13:52189:52198	4200289	2	True				
ANR	4201254	Statement	(	1702:24:52200:52200	4200289	3	True				
ANR	4201255	Statement	"""rabin2 %s-B 0x%08"""	1702:25:52201:52219	4200289	4	True				
ANR	4201256	Statement	PFMT64x	1702:44:52220:52226	4200289	5	True				
ANR	4201257	Statement	""" -s %s | grep %s"""	1702:51:52227:52244	4200289	6	True				
ANR	4201258	Statement	","	1702:69:52245:52245	4200289	7	True				
ANR	4201259	Statement	mode	1702:71:52247:52250	4200289	8	True				
ANR	4201260	Statement	","	1702:75:52251:52251	4200289	9	True				
ANR	4201261	Statement	baddr	1702:77:52253:52257	4200289	10	True				
ANR	4201262	Statement	","	1702:82:52258:52258	4200289	11	True				
ANR	4201263	Statement	file	1702:84:52260:52263	4200289	12	True				
ANR	4201264	Statement	","	1702:88:52264:52264	4200289	13	True				
ANR	4201265	Statement	symname	1702:90:52266:52272	4200289	14	True				
ANR	4201266	Statement	)	1702:97:52273:52273	4200289	15	True				
ANR	4201267	ExpressionStatement		1702:98:52274:52274	4200289	16	True				
ANR	4201268	ElseStatement	else		4200289	0					
ANR	4201269	CompoundStatement		163:13:4494:4494	4200289	0					
ANR	4201270	Statement	cmd	1704:7:52298:52300	4200289	0	True				
ANR	4201271	Statement	=	1704:11:52302:52302	4200289	1	True				
ANR	4201272	Statement	r_str_newf	1704:13:52304:52313	4200289	2	True				
ANR	4201273	Statement	(	1704:24:52315:52315	4200289	3	True				
ANR	4201274	Statement	"""rabin2 %s-B 0x%08"""	1704:25:52316:52334	4200289	4	True				
ANR	4201275	Statement	PFMT64x	1704:44:52335:52341	4200289	5	True				
ANR	4201276	Statement	""" -s %s"""	1704:51:52342:52349	4200289	6	True				
ANR	4201277	Statement	","	1704:59:52350:52350	4200289	7	True				
ANR	4201278	Statement	mode	1704:61:52352:52355	4200289	8	True				
ANR	4201279	Statement	","	1704:65:52356:52356	4200289	9	True				
ANR	4201280	Statement	baddr	1704:67:52358:52362	4200289	10	True				
ANR	4201281	Statement	","	1704:72:52363:52363	4200289	11	True				
ANR	4201282	Statement	file	1704:74:52365:52368	4200289	12	True				
ANR	4201283	Statement	)	1704:78:52369:52369	4200289	13	True				
ANR	4201284	ExpressionStatement		1704:79:52370:52370	4200289	14	True				
ANR	4201285	ExpressionStatement	"res = r_sys_cmd_str ( cmd , NULL , NULL )"	1707:6:52424:52461	4200289	5	True				
ANR	4201286	AssignmentExpression	"res = r_sys_cmd_str ( cmd , NULL , NULL )"		4200289	0		=			
ANR	4201287	Identifier	res		4200289	0					
ANR	4201288	CallExpression	"r_sys_cmd_str ( cmd , NULL , NULL )"		4200289	1					
ANR	4201289	Callee	r_sys_cmd_str		4200289	0					
ANR	4201290	Identifier	r_sys_cmd_str		4200289	0					
ANR	4201291	ArgumentList	cmd		4200289	1					
ANR	4201292	Argument	cmd		4200289	0					
ANR	4201293	Identifier	cmd		4200289	0					
ANR	4201294	Argument	NULL		4200289	1					
ANR	4201295	Identifier	NULL		4200289	0					
ANR	4201296	Argument	NULL		4200289	2					
ANR	4201297	Identifier	NULL		4200289	0					
ANR	4201298	ExpressionStatement	r_cons_println ( res )	1708:6:52469:52489	4200289	6	True				
ANR	4201299	CallExpression	r_cons_println ( res )		4200289	0					
ANR	4201300	Callee	r_cons_println		4200289	0					
ANR	4201301	Identifier	r_cons_println		4200289	0					
ANR	4201302	ArgumentList	res		4200289	1					
ANR	4201303	Argument	res		4200289	0					
ANR	4201304	Identifier	res		4200289	0					
ANR	4201305	ExpressionStatement	free ( res )	1709:6:52497:52507	4200289	7	True				
ANR	4201306	CallExpression	free ( res )		4200289	0					
ANR	4201307	Callee	free		4200289	0					
ANR	4201308	Identifier	free		4200289	0					
ANR	4201309	ArgumentList	res		4200289	1					
ANR	4201310	Argument	res		4200289	0					
ANR	4201311	Identifier	res		4200289	0					
ANR	4201312	ExpressionStatement	free ( cmd )	1710:6:52515:52525	4200289	8	True				
ANR	4201313	CallExpression	free ( cmd )		4200289	0					
ANR	4201314	Callee	free		4200289	0					
ANR	4201315	Identifier	free		4200289	0					
ANR	4201316	ArgumentList	cmd		4200289	1					
ANR	4201317	Argument	cmd		4200289	0					
ANR	4201318	Identifier	cmd		4200289	0					
ANR	4201319	IfStatement	if ( newfile )		4200289	9					
ANR	4201320	Condition	newfile	1711:10:52537:52543	4200289	0	True				
ANR	4201321	Identifier	newfile		4200289	0					
ANR	4201322	CompoundStatement		171:19:4751:4751	4200289	1					
ANR	4201323	IfStatement	if ( ! r_file_rm ( newfile ) )		4200289	0					
ANR	4201324	Condition	! r_file_rm ( newfile )	1712:11:52559:52578	4200289	0	True				
ANR	4201325	UnaryOperationExpression	! r_file_rm ( newfile )		4200289	0					
ANR	4201326	UnaryOperator	!		4200289	0					
ANR	4201327	CallExpression	r_file_rm ( newfile )		4200289	1					
ANR	4201328	Callee	r_file_rm		4200289	0					
ANR	4201329	Identifier	r_file_rm		4200289	0					
ANR	4201330	ArgumentList	newfile		4200289	1					
ANR	4201331	Argument	newfile		4200289	0					
ANR	4201332	Identifier	newfile		4200289	0					
ANR	4201333	CompoundStatement		172:33:4786:4786	4200289	1					
ANR	4201334	ExpressionStatement	"eprintf ( ""Error when removing %s\\n"" , newfile )"	1713:8:52591:52636	4200289	0	True				
ANR	4201335	CallExpression	"eprintf ( ""Error when removing %s\\n"" , newfile )"		4200289	0					
ANR	4201336	Callee	eprintf		4200289	0					
ANR	4201337	Identifier	eprintf		4200289	0					
ANR	4201338	ArgumentList	"""Error when removing %s\\n"""		4200289	1					
ANR	4201339	Argument	"""Error when removing %s\\n"""		4200289	0					
ANR	4201340	PrimaryExpression	"""Error when removing %s\\n"""		4200289	0					
ANR	4201341	Argument	newfile		4200289	1					
ANR	4201342	Identifier	newfile		4200289	0					
ANR	4201343	ExpressionStatement	free ( newfile )	1715:7:52654:52668	4200289	1	True				
ANR	4201344	CallExpression	free ( newfile )		4200289	0					
ANR	4201345	Callee	free		4200289	0					
ANR	4201346	Identifier	free		4200289	0					
ANR	4201347	ArgumentList	newfile		4200289	1					
ANR	4201348	Argument	newfile		4200289	0					
ANR	4201349	Identifier	newfile		4200289	0					
ANR	4201350	ElseStatement	else		4200289	0					
ANR	4201351	CompoundStatement		177:12:4895:4895	4200289	0					
ANR	4201352	ExpressionStatement	"r_bin_set_baddr ( core -> bin , map -> addr )"	1718:6:52698:52736	4200289	0	True				
ANR	4201353	CallExpression	"r_bin_set_baddr ( core -> bin , map -> addr )"		4200289	0					
ANR	4201354	Callee	r_bin_set_baddr		4200289	0					
ANR	4201355	Identifier	r_bin_set_baddr		4200289	0					
ANR	4201356	ArgumentList	core -> bin		4200289	1					
ANR	4201357	Argument	core -> bin		4200289	0					
ANR	4201358	PtrMemberAccess	core -> bin		4200289	0					
ANR	4201359	Identifier	core		4200289	0					
ANR	4201360	Identifier	bin		4200289	1					
ANR	4201361	Argument	map -> addr		4200289	1					
ANR	4201362	PtrMemberAccess	map -> addr		4200289	0					
ANR	4201363	Identifier	map		4200289	0					
ANR	4201364	Identifier	addr		4200289	1					
ANR	4201365	ExpressionStatement	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , ( input [ 1 ] == '*' ) , true , & filter , NULL )"	1719:6:52744:52828	4200289	1	True				
ANR	4201366	CallExpression	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , ( input [ 1 ] == '*' ) , true , & filter , NULL )"		4200289	0					
ANR	4201367	Callee	r_core_bin_info		4200289	0					
ANR	4201368	Identifier	r_core_bin_info		4200289	0					
ANR	4201369	ArgumentList	core		4200289	1					
ANR	4201370	Argument	core		4200289	0					
ANR	4201371	Identifier	core		4200289	0					
ANR	4201372	Argument	R_CORE_BIN_ACC_SYMBOLS		4200289	1					
ANR	4201373	Identifier	R_CORE_BIN_ACC_SYMBOLS		4200289	0					
ANR	4201374	Argument	input [ 1 ] == '*'		4200289	2					
ANR	4201375	EqualityExpression	input [ 1 ] == '*'		4200289	0		==			
ANR	4201376	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4201377	Identifier	input		4200289	0					
ANR	4201378	PrimaryExpression	1		4200289	1					
ANR	4201379	PrimaryExpression	'*'		4200289	1					
ANR	4201380	Argument	true		4200289	3					
ANR	4201381	Identifier	true		4200289	0					
ANR	4201382	Argument	& filter		4200289	4					
ANR	4201383	UnaryOperationExpression	& filter		4200289	0					
ANR	4201384	UnaryOperator	&		4200289	0					
ANR	4201385	Identifier	filter		4200289	1					
ANR	4201386	Argument	NULL		4200289	5					
ANR	4201387	Identifier	NULL		4200289	0					
ANR	4201388	ExpressionStatement	"r_bin_set_baddr ( core -> bin , baddr )"	1720:6:52836:52870	4200289	2	True				
ANR	4201389	CallExpression	"r_bin_set_baddr ( core -> bin , baddr )"		4200289	0					
ANR	4201390	Callee	r_bin_set_baddr		4200289	0					
ANR	4201391	Identifier	r_bin_set_baddr		4200289	0					
ANR	4201392	ArgumentList	core -> bin		4200289	1					
ANR	4201393	Argument	core -> bin		4200289	0					
ANR	4201394	PtrMemberAccess	core -> bin		4200289	0					
ANR	4201395	Identifier	core		4200289	0					
ANR	4201396	Identifier	bin		4200289	1					
ANR	4201397	Argument	baddr		4200289	1					
ANR	4201398	Identifier	baddr		4200289	0					
ANR	4201399	ExpressionStatement	free ( ptr )	1723:4:52889:52899	4200289	16	True				
ANR	4201400	CallExpression	free ( ptr )		4200289	0					
ANR	4201401	Callee	free		4200289	0					
ANR	4201402	Identifier	free		4200289	0					
ANR	4201403	ArgumentList	ptr		4200289	1					
ANR	4201404	Argument	ptr		4200289	0					
ANR	4201405	Identifier	ptr		4200289	0					
ANR	4201406	BreakStatement	break ;	1725:3:52909:52914	4200289	7	True				
ANR	4201407	Label	case '.' :	1726:2:52918:52926	4200289	8	True				
ANR	4201408	CompoundStatement		187:3:5146:5146	4200289	9					
ANR	4201409	ExpressionStatement	"map = get_closest_map ( core , addr )"	1728:4:52947:52981	4200289	0	True				
ANR	4201410	AssignmentExpression	"map = get_closest_map ( core , addr )"		4200289	0		=			
ANR	4201411	Identifier	map		4200289	0					
ANR	4201412	CallExpression	"get_closest_map ( core , addr )"		4200289	1					
ANR	4201413	Callee	get_closest_map		4200289	0					
ANR	4201414	Identifier	get_closest_map		4200289	0					
ANR	4201415	ArgumentList	core		4200289	1					
ANR	4201416	Argument	core		4200289	0					
ANR	4201417	Identifier	core		4200289	0					
ANR	4201418	Argument	addr		4200289	1					
ANR	4201419	Identifier	addr		4200289	0					
ANR	4201420	IfStatement	if ( map )		4200289	1					
ANR	4201421	Condition	map	1729:8:52991:52993	4200289	0	True				
ANR	4201422	Identifier	map		4200289	0					
ANR	4201423	CompoundStatement		192:5:5296:5338	4200289	1					
ANR	4201424	IdentifierDeclStatement	ut64 closest_addr = UT64_MAX ;	1730:5:53003:53031	4200289	0	True				
ANR	4201425	IdentifierDecl	closest_addr = UT64_MAX		4200289	0					
ANR	4201426	IdentifierDeclType	ut64		4200289	0					
ANR	4201427	Identifier	closest_addr		4200289	1					
ANR	4201428	AssignmentExpression	closest_addr = UT64_MAX		4200289	2		=			
ANR	4201429	Identifier	UT64_MAX		4200289	0					
ANR	4201430	Identifier	UT64_MAX		4200289	1					
ANR	4201431	IdentifierDeclStatement	RList * symbols = r_bin_get_symbols ( core -> bin ) ;	1731:5:53038:53084	4200289	1	True				
ANR	4201432	IdentifierDecl	* symbols = r_bin_get_symbols ( core -> bin )		4200289	0					
ANR	4201433	IdentifierDeclType	RList *		4200289	0					
ANR	4201434	Identifier	symbols		4200289	1					
ANR	4201435	AssignmentExpression	* symbols = r_bin_get_symbols ( core -> bin )		4200289	2		=			
ANR	4201436	Identifier	symbols		4200289	0					
ANR	4201437	CallExpression	r_bin_get_symbols ( core -> bin )		4200289	1					
ANR	4201438	Callee	r_bin_get_symbols		4200289	0					
ANR	4201439	Identifier	r_bin_get_symbols		4200289	0					
ANR	4201440	ArgumentList	core -> bin		4200289	1					
ANR	4201441	Argument	core -> bin		4200289	0					
ANR	4201442	PtrMemberAccess	core -> bin		4200289	0					
ANR	4201443	Identifier	core		4200289	0					
ANR	4201444	Identifier	bin		4200289	1					
ANR	4201445	IdentifierDeclStatement	"RBinSymbol * symbol , * closest_symbol = NULL ;"	1732:5:53091:53133	4200289	2	True				
ANR	4201446	IdentifierDecl	* symbol		4200289	0					
ANR	4201447	IdentifierDeclType	RBinSymbol *		4200289	0					
ANR	4201448	Identifier	symbol		4200289	1					
ANR	4201449	IdentifierDecl	* closest_symbol = NULL		4200289	1					
ANR	4201450	IdentifierDeclType	RBinSymbol *		4200289	0					
ANR	4201451	Identifier	closest_symbol		4200289	1					
ANR	4201452	AssignmentExpression	* closest_symbol = NULL		4200289	2		=			
ANR	4201453	Identifier	NULL		4200289	0					
ANR	4201454	Identifier	NULL		4200289	1					
ANR	4201455	Statement	r_list_foreach	1734:5:53141:53154	4200289	3	True				
ANR	4201456	Statement	(	1734:20:53156:53156	4200289	4	True				
ANR	4201457	Statement	symbols	1734:21:53157:53163	4200289	5	True				
ANR	4201458	Statement	","	1734:28:53164:53164	4200289	6	True				
ANR	4201459	Statement	iter	1734:30:53166:53169	4200289	7	True				
ANR	4201460	Statement	","	1734:34:53170:53170	4200289	8	True				
ANR	4201461	Statement	symbol	1734:36:53172:53177	4200289	9	True				
ANR	4201462	Statement	)	1734:42:53178:53178	4200289	10	True				
ANR	4201463	CompoundStatement		194:44:5385:5385	4200289	11					
ANR	4201464	IfStatement	if ( symbol -> vaddr > addr )		4200289	0					
ANR	4201465	Condition	symbol -> vaddr > addr	1735:10:53192:53211	4200289	0	True				
ANR	4201466	RelationalExpression	symbol -> vaddr > addr		4200289	0		>			
ANR	4201467	PtrMemberAccess	symbol -> vaddr		4200289	0					
ANR	4201468	Identifier	symbol		4200289	0					
ANR	4201469	Identifier	vaddr		4200289	1					
ANR	4201470	Identifier	addr		4200289	1					
ANR	4201471	CompoundStatement		195:32:5419:5419	4200289	1					
ANR	4201472	IfStatement	if ( symbol -> vaddr - addr < closest_addr )		4200289	0					
ANR	4201473	Condition	symbol -> vaddr - addr < closest_addr	1736:11:53227:53261	4200289	0	True				
ANR	4201474	RelationalExpression	symbol -> vaddr - addr < closest_addr		4200289	0		<			
ANR	4201475	AdditiveExpression	symbol -> vaddr - addr		4200289	0		-			
ANR	4201476	PtrMemberAccess	symbol -> vaddr		4200289	0					
ANR	4201477	Identifier	symbol		4200289	0					
ANR	4201478	Identifier	vaddr		4200289	1					
ANR	4201479	Identifier	addr		4200289	1					
ANR	4201480	Identifier	closest_addr		4200289	1					
ANR	4201481	CompoundStatement		196:48:5469:5469	4200289	1					
ANR	4201482	ExpressionStatement	closest_addr = symbol -> vaddr - addr	1737:8:53274:53309	4200289	0	True				
ANR	4201483	AssignmentExpression	closest_addr = symbol -> vaddr - addr		4200289	0		=			
ANR	4201484	Identifier	closest_addr		4200289	0					
ANR	4201485	AdditiveExpression	symbol -> vaddr - addr		4200289	1		-			
ANR	4201486	PtrMemberAccess	symbol -> vaddr		4200289	0					
ANR	4201487	Identifier	symbol		4200289	0					
ANR	4201488	Identifier	vaddr		4200289	1					
ANR	4201489	Identifier	addr		4200289	1					
ANR	4201490	ExpressionStatement	closest_symbol = symbol	1738:8:53319:53342	4200289	1	True				
ANR	4201491	AssignmentExpression	closest_symbol = symbol		4200289	0		=			
ANR	4201492	Identifier	closest_symbol		4200289	0					
ANR	4201493	Identifier	symbol		4200289	1					
ANR	4201494	ElseStatement	else		4200289	0					
ANR	4201495	CompoundStatement		200:13:5571:5571	4200289	0					
ANR	4201496	IfStatement	if ( addr - symbol -> vaddr < closest_addr )		4200289	0					
ANR	4201497	Condition	addr - symbol -> vaddr < closest_addr	1741:11:53379:53413	4200289	0	True				
ANR	4201498	RelationalExpression	addr - symbol -> vaddr < closest_addr		4200289	0		<			
ANR	4201499	AdditiveExpression	addr - symbol -> vaddr		4200289	0		-			
ANR	4201500	Identifier	addr		4200289	0					
ANR	4201501	PtrMemberAccess	symbol -> vaddr		4200289	1					
ANR	4201502	Identifier	symbol		4200289	0					
ANR	4201503	Identifier	vaddr		4200289	1					
ANR	4201504	Identifier	closest_addr		4200289	1					
ANR	4201505	CompoundStatement		201:48:5621:5621	4200289	1					
ANR	4201506	ExpressionStatement	closest_addr = addr - symbol -> vaddr	1742:8:53426:53461	4200289	0	True				
ANR	4201507	AssignmentExpression	closest_addr = addr - symbol -> vaddr		4200289	0		=			
ANR	4201508	Identifier	closest_addr		4200289	0					
ANR	4201509	AdditiveExpression	addr - symbol -> vaddr		4200289	1		-			
ANR	4201510	Identifier	addr		4200289	0					
ANR	4201511	PtrMemberAccess	symbol -> vaddr		4200289	1					
ANR	4201512	Identifier	symbol		4200289	0					
ANR	4201513	Identifier	vaddr		4200289	1					
ANR	4201514	ExpressionStatement	closest_symbol = symbol	1743:8:53471:53494	4200289	1	True				
ANR	4201515	AssignmentExpression	closest_symbol = symbol		4200289	0		=			
ANR	4201516	Identifier	closest_symbol		4200289	0					
ANR	4201517	Identifier	symbol		4200289	1					
ANR	4201518	IfStatement	if ( closest_symbol )		4200289	12					
ANR	4201519	Condition	closest_symbol	1747:9:53529:53542	4200289	0	True				
ANR	4201520	Identifier	closest_symbol		4200289	0					
ANR	4201521	CompoundStatement		208:6:5758:5779	4200289	1					
ANR	4201522	IdentifierDeclStatement	RCoreBinFilter filter ;	1748:6:53553:53574	4200289	0	True				
ANR	4201523	IdentifierDecl	filter		4200289	0					
ANR	4201524	IdentifierDeclType	RCoreBinFilter		4200289	0					
ANR	4201525	Identifier	filter		4200289	1					
ANR	4201526	Statement	filter	1749:6:53582:53587	4200289	1	True				
ANR	4201527	Statement	.	1749:12:53588:53588	4200289	2	True				
ANR	4201528	Statement	offset	1749:13:53589:53594	4200289	3	True				
ANR	4201529	Statement	=	1749:20:53596:53596	4200289	4	True				
ANR	4201530	Statement	0L	1749:22:53598:53599	4200289	5	True				
ANR	4201531	ExpressionStatement	L	1749:24:53600:53601	4200289	6	True				
ANR	4201532	Identifier	L		4200289	0					
ANR	4201533	ExpressionStatement	filter . name = ( char * ) closest_symbol -> name	1750:6:53609:53652	4200289	7	True				
ANR	4201534	AssignmentExpression	filter . name = ( char * ) closest_symbol -> name		4200289	0		=			
ANR	4201535	MemberAccess	filter . name		4200289	0					
ANR	4201536	Identifier	filter		4200289	0					
ANR	4201537	Identifier	name		4200289	1					
ANR	4201538	CastExpression	( char * ) closest_symbol -> name		4200289	1					
ANR	4201539	CastTarget	char *		4200289	0					
ANR	4201540	PtrMemberAccess	closest_symbol -> name		4200289	1					
ANR	4201541	Identifier	closest_symbol		4200289	0					
ANR	4201542	Identifier	name		4200289	1					
ANR	4201543	ExpressionStatement	"r_bin_set_baddr ( core -> bin , map -> addr )"	1752:6:53661:53699	4200289	8	True				
ANR	4201544	CallExpression	"r_bin_set_baddr ( core -> bin , map -> addr )"		4200289	0					
ANR	4201545	Callee	r_bin_set_baddr		4200289	0					
ANR	4201546	Identifier	r_bin_set_baddr		4200289	0					
ANR	4201547	ArgumentList	core -> bin		4200289	1					
ANR	4201548	Argument	core -> bin		4200289	0					
ANR	4201549	PtrMemberAccess	core -> bin		4200289	0					
ANR	4201550	Identifier	core		4200289	0					
ANR	4201551	Identifier	bin		4200289	1					
ANR	4201552	Argument	map -> addr		4200289	1					
ANR	4201553	PtrMemberAccess	map -> addr		4200289	0					
ANR	4201554	Identifier	map		4200289	0					
ANR	4201555	Identifier	addr		4200289	1					
ANR	4201556	ExpressionStatement	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , false , true , & filter , NULL )"	1753:6:53707:53781	4200289	9	True				
ANR	4201557	CallExpression	"r_core_bin_info ( core , R_CORE_BIN_ACC_SYMBOLS , false , true , & filter , NULL )"		4200289	0					
ANR	4201558	Callee	r_core_bin_info		4200289	0					
ANR	4201559	Identifier	r_core_bin_info		4200289	0					
ANR	4201560	ArgumentList	core		4200289	1					
ANR	4201561	Argument	core		4200289	0					
ANR	4201562	Identifier	core		4200289	0					
ANR	4201563	Argument	R_CORE_BIN_ACC_SYMBOLS		4200289	1					
ANR	4201564	Identifier	R_CORE_BIN_ACC_SYMBOLS		4200289	0					
ANR	4201565	Argument	false		4200289	2					
ANR	4201566	Identifier	false		4200289	0					
ANR	4201567	Argument	true		4200289	3					
ANR	4201568	Identifier	true		4200289	0					
ANR	4201569	Argument	& filter		4200289	4					
ANR	4201570	UnaryOperationExpression	& filter		4200289	0					
ANR	4201571	UnaryOperator	&		4200289	0					
ANR	4201572	Identifier	filter		4200289	1					
ANR	4201573	Argument	NULL		4200289	5					
ANR	4201574	Identifier	NULL		4200289	0					
ANR	4201575	BreakStatement	break ;	1757:3:53804:53809	4200289	10	True				
ANR	4201576	Label	default :	1758:2:53813:53820	4200289	11	True				
ANR	4201577	Identifier	default		4200289	0					
ANR	4201578	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dmi )"	1759:3:53825:53861	4200289	12	True				
ANR	4201579	CallExpression	"r_core_cmd_help ( core , help_msg_dmi )"		4200289	0					
ANR	4201580	Callee	r_core_cmd_help		4200289	0					
ANR	4201581	Identifier	r_core_cmd_help		4200289	0					
ANR	4201582	ArgumentList	core		4200289	1					
ANR	4201583	Argument	core		4200289	0					
ANR	4201584	Identifier	core		4200289	0					
ANR	4201585	Argument	help_msg_dmi		4200289	1					
ANR	4201586	Identifier	help_msg_dmi		4200289	0					
ANR	4201587	BreakStatement	break ;	1760:3:53866:53871	4200289	13	True				
ANR	4201588	BreakStatement	break ;	1762:2:53879:53884	4200289	38	True				
ANR	4201589	Label	case 'S' :	1763:1:53887:53895	4200289	39	True				
ANR	4201590	CompoundStatement		256:3:6934:6980	4200289	40					
ANR	4201591	IdentifierDeclStatement	"const char * libname = NULL , * sectname = NULL , * mode = """" ;"	1765:3:53944:54000	4200289	0	True				
ANR	4201592	IdentifierDecl	* libname = NULL		4200289	0					
ANR	4201593	IdentifierDeclType	const char *		4200289	0					
ANR	4201594	Identifier	libname		4200289	1					
ANR	4201595	AssignmentExpression	* libname = NULL		4200289	2		=			
ANR	4201596	Identifier	NULL		4200289	0					
ANR	4201597	Identifier	NULL		4200289	1					
ANR	4201598	IdentifierDecl	* sectname = NULL		4200289	1					
ANR	4201599	IdentifierDeclType	const char *		4200289	0					
ANR	4201600	Identifier	sectname		4200289	1					
ANR	4201601	AssignmentExpression	* sectname = NULL		4200289	2		=			
ANR	4201602	Identifier	NULL		4200289	0					
ANR	4201603	Identifier	NULL		4200289	1					
ANR	4201604	IdentifierDecl	"* mode = """""		4200289	2					
ANR	4201605	IdentifierDeclType	const char *		4200289	0					
ANR	4201606	Identifier	mode		4200289	1					
ANR	4201607	AssignmentExpression	"* mode = """""		4200289	2		=			
ANR	4201608	Identifier	mode		4200289	0					
ANR	4201609	PrimaryExpression	""""""		4200289	1					
ANR	4201610	Statement	ut64	1766:3:54005:54008	4200289	1	True				
ANR	4201611	Statement	baddr	1766:8:54010:54014	4200289	2	True				
ANR	4201612	Statement	=	1766:14:54016:54016	4200289	3	True				
ANR	4201613	Statement	0L	1766:16:54018:54019	4200289	4	True				
ANR	4201614	ExpressionStatement	L	1766:18:54020:54021	4200289	5	True				
ANR	4201615	Identifier	L		4200289	0					
ANR	4201616	IdentifierDeclStatement	char * ptr ;	1767:3:54026:54035	4200289	6	True				
ANR	4201617	IdentifierDecl	* ptr		4200289	0					
ANR	4201618	IdentifierDeclType	char *		4200289	0					
ANR	4201619	Identifier	ptr		4200289	1					
ANR	4201620	IdentifierDeclStatement	int i ;	1768:3:54040:54045	4200289	7	True				
ANR	4201621	IdentifierDecl	i		4200289	0					
ANR	4201622	IdentifierDeclType	int		4200289	0					
ANR	4201623	Identifier	i		4200289	1					
ANR	4201624	IfStatement	if ( input [ 1 ] == '*' )		4200289	8					
ANR	4201625	Condition	input [ 1 ] == '*'	1770:7:54055:54067	4200289	0	True				
ANR	4201626	EqualityExpression	input [ 1 ] == '*'		4200289	0		==			
ANR	4201627	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4201628	Identifier	input		4200289	0					
ANR	4201629	PrimaryExpression	1		4200289	1					
ANR	4201630	PrimaryExpression	'*'		4200289	1					
ANR	4201631	CompoundStatement		230:22:6275:6275	4200289	1					
ANR	4201632	ExpressionStatement	ptr = strdup ( r_str_trim_head ( ( char * ) input + 2 ) )	1771:4:54076:54125	4200289	0	True				
ANR	4201633	AssignmentExpression	ptr = strdup ( r_str_trim_head ( ( char * ) input + 2 ) )		4200289	0		=			
ANR	4201634	Identifier	ptr		4200289	0					
ANR	4201635	CallExpression	strdup ( r_str_trim_head ( ( char * ) input + 2 ) )		4200289	1					
ANR	4201636	Callee	strdup		4200289	0					
ANR	4201637	Identifier	strdup		4200289	0					
ANR	4201638	ArgumentList	r_str_trim_head ( ( char * ) input + 2 )		4200289	1					
ANR	4201639	Argument	r_str_trim_head ( ( char * ) input + 2 )		4200289	0					
ANR	4201640	CallExpression	r_str_trim_head ( ( char * ) input + 2 )		4200289	0					
ANR	4201641	Callee	r_str_trim_head		4200289	0					
ANR	4201642	Identifier	r_str_trim_head		4200289	0					
ANR	4201643	ArgumentList	( char * ) input + 2		4200289	1					
ANR	4201644	Argument	( char * ) input + 2		4200289	0					
ANR	4201645	AdditiveExpression	( char * ) input + 2		4200289	0		+			
ANR	4201646	CastExpression	( char * ) input		4200289	0					
ANR	4201647	CastTarget	char *		4200289	0					
ANR	4201648	Identifier	input		4200289	1					
ANR	4201649	PrimaryExpression	2		4200289	1					
ANR	4201650	ExpressionStatement	"mode = ""-r """	1772:4:54131:54143	4200289	1	True				
ANR	4201651	AssignmentExpression	"mode = ""-r """		4200289	0		=			
ANR	4201652	Identifier	mode		4200289	0					
ANR	4201653	PrimaryExpression	"""-r """		4200289	1					
ANR	4201654	ElseStatement	else		4200289	0					
ANR	4201655	CompoundStatement		233:10:6360:6360	4200289	0					
ANR	4201656	ExpressionStatement	ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )	1774:4:54161:54210	4200289	0	True				
ANR	4201657	AssignmentExpression	ptr = strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		4200289	0		=			
ANR	4201658	Identifier	ptr		4200289	0					
ANR	4201659	CallExpression	strdup ( r_str_trim_head ( ( char * ) input + 1 ) )		4200289	1					
ANR	4201660	Callee	strdup		4200289	0					
ANR	4201661	Identifier	strdup		4200289	0					
ANR	4201662	ArgumentList	r_str_trim_head ( ( char * ) input + 1 )		4200289	1					
ANR	4201663	Argument	r_str_trim_head ( ( char * ) input + 1 )		4200289	0					
ANR	4201664	CallExpression	r_str_trim_head ( ( char * ) input + 1 )		4200289	0					
ANR	4201665	Callee	r_str_trim_head		4200289	0					
ANR	4201666	Identifier	r_str_trim_head		4200289	0					
ANR	4201667	ArgumentList	( char * ) input + 1		4200289	1					
ANR	4201668	Argument	( char * ) input + 1		4200289	0					
ANR	4201669	AdditiveExpression	( char * ) input + 1		4200289	0		+			
ANR	4201670	CastExpression	( char * ) input		4200289	0					
ANR	4201671	CastTarget	char *		4200289	0					
ANR	4201672	Identifier	input		4200289	1					
ANR	4201673	PrimaryExpression	1		4200289	1					
ANR	4201674	ExpressionStatement	i = r_str_word_set0 ( ptr )	1776:3:54220:54245	4200289	9	True				
ANR	4201675	AssignmentExpression	i = r_str_word_set0 ( ptr )		4200289	0		=			
ANR	4201676	Identifier	i		4200289	0					
ANR	4201677	CallExpression	r_str_word_set0 ( ptr )		4200289	1					
ANR	4201678	Callee	r_str_word_set0		4200289	0					
ANR	4201679	Identifier	r_str_word_set0		4200289	0					
ANR	4201680	ArgumentList	ptr		4200289	1					
ANR	4201681	Argument	ptr		4200289	0					
ANR	4201682	Identifier	ptr		4200289	0					
ANR	4201683	ExpressionStatement	addr = UT64_MAX	1778:3:54251:54266	4200289	10	True				
ANR	4201684	AssignmentExpression	addr = UT64_MAX		4200289	0		=			
ANR	4201685	Identifier	addr		4200289	0					
ANR	4201686	Identifier	UT64_MAX		4200289	1					
ANR	4201687	SwitchStatement	switch ( i )		4200289	11					
ANR	4201688	Condition	i	1779:11:54279:54279	4200289	0	True				
ANR	4201689	Identifier	i		4200289	0					
ANR	4201690	CompoundStatement		239:14:6487:6487	4200289	1					
ANR	4201691	Label	case 2 :	1780:3:54287:54293	4200289	0	True				
ANR	4201692	ExpressionStatement	"sectname = r_str_word_get0 ( ptr , 1 )"	1781:4:54319:54354	4200289	1	True				
ANR	4201693	AssignmentExpression	"sectname = r_str_word_get0 ( ptr , 1 )"		4200289	0		=			
ANR	4201694	Identifier	sectname		4200289	0					
ANR	4201695	CallExpression	"r_str_word_get0 ( ptr , 1 )"		4200289	1					
ANR	4201696	Callee	r_str_word_get0		4200289	0					
ANR	4201697	Identifier	r_str_word_get0		4200289	0					
ANR	4201698	ArgumentList	ptr		4200289	1					
ANR	4201699	Argument	ptr		4200289	0					
ANR	4201700	Identifier	ptr		4200289	0					
ANR	4201701	Argument	1		4200289	1					
ANR	4201702	PrimaryExpression	1		4200289	0					
ANR	4201703	Label	case 1 :	1783:3:54379:54385	4200289	2	True				
ANR	4201704	IfStatement	if ( IS_DIGIT ( * ptr ) )		4200289	3					
ANR	4201705	Condition	IS_DIGIT ( * ptr )	1784:8:54415:54429	4200289	0	True				
ANR	4201706	CallExpression	IS_DIGIT ( * ptr )		4200289	0					
ANR	4201707	Callee	IS_DIGIT		4200289	0					
ANR	4201708	Identifier	IS_DIGIT		4200289	0					
ANR	4201709	ArgumentList	* ptr		4200289	1					
ANR	4201710	Argument	* ptr		4200289	0					
ANR	4201711	UnaryOperationExpression	* ptr		4200289	0					
ANR	4201712	UnaryOperator	*		4200289	0					
ANR	4201713	Identifier	ptr		4200289	1					
ANR	4201714	CompoundStatement		245:5:6644:6685	4200289	1					
ANR	4201715	IdentifierDeclStatement	"const char * a0 = r_str_word_get0 ( ptr , 0 ) ;"	1785:5:54439:54480	4200289	0	True				
ANR	4201716	IdentifierDecl	"* a0 = r_str_word_get0 ( ptr , 0 )"		4200289	0					
ANR	4201717	IdentifierDeclType	const char *		4200289	0					
ANR	4201718	Identifier	a0		4200289	1					
ANR	4201719	AssignmentExpression	"* a0 = r_str_word_get0 ( ptr , 0 )"		4200289	2		=			
ANR	4201720	Identifier	a0		4200289	0					
ANR	4201721	CallExpression	"r_str_word_get0 ( ptr , 0 )"		4200289	1					
ANR	4201722	Callee	r_str_word_get0		4200289	0					
ANR	4201723	Identifier	r_str_word_get0		4200289	0					
ANR	4201724	ArgumentList	ptr		4200289	1					
ANR	4201725	Argument	ptr		4200289	0					
ANR	4201726	Identifier	ptr		4200289	0					
ANR	4201727	Argument	0		4200289	1					
ANR	4201728	PrimaryExpression	0		4200289	0					
ANR	4201729	ExpressionStatement	"addr = r_num_math ( core -> num , a0 )"	1786:5:54487:54520	4200289	1	True				
ANR	4201730	AssignmentExpression	"addr = r_num_math ( core -> num , a0 )"		4200289	0		=			
ANR	4201731	Identifier	addr		4200289	0					
ANR	4201732	CallExpression	"r_num_math ( core -> num , a0 )"		4200289	1					
ANR	4201733	Callee	r_num_math		4200289	0					
ANR	4201734	Identifier	r_num_math		4200289	0					
ANR	4201735	ArgumentList	core -> num		4200289	1					
ANR	4201736	Argument	core -> num		4200289	0					
ANR	4201737	PtrMemberAccess	core -> num		4200289	0					
ANR	4201738	Identifier	core		4200289	0					
ANR	4201739	Identifier	num		4200289	1					
ANR	4201740	Argument	a0		4200289	1					
ANR	4201741	Identifier	a0		4200289	0					
ANR	4201742	ElseStatement	else		4200289	0					
ANR	4201743	CompoundStatement		247:11:6738:6738	4200289	0					
ANR	4201744	ExpressionStatement	addr = UT64_MAX	1788:5:54540:54555	4200289	0	True				
ANR	4201745	AssignmentExpression	addr = UT64_MAX		4200289	0		=			
ANR	4201746	Identifier	addr		4200289	0					
ANR	4201747	Identifier	UT64_MAX		4200289	1					
ANR	4201748	IfStatement	if ( ! addr || addr == UT64_MAX )		4200289	4					
ANR	4201749	Condition	! addr || addr == UT64_MAX	1790:8:54571:54595	4200289	0	True				
ANR	4201750	OrExpression	! addr || addr == UT64_MAX		4200289	0		||			
ANR	4201751	UnaryOperationExpression	! addr		4200289	0					
ANR	4201752	UnaryOperator	!		4200289	0					
ANR	4201753	Identifier	addr		4200289	1					
ANR	4201754	EqualityExpression	addr == UT64_MAX		4200289	1		==			
ANR	4201755	Identifier	addr		4200289	0					
ANR	4201756	Identifier	UT64_MAX		4200289	1					
ANR	4201757	CompoundStatement		250:35:6803:6803	4200289	1					
ANR	4201758	ExpressionStatement	"libname = r_str_word_get0 ( ptr , 0 )"	1791:5:54605:54639	4200289	0	True				
ANR	4201759	AssignmentExpression	"libname = r_str_word_get0 ( ptr , 0 )"		4200289	0		=			
ANR	4201760	Identifier	libname		4200289	0					
ANR	4201761	CallExpression	"r_str_word_get0 ( ptr , 0 )"		4200289	1					
ANR	4201762	Callee	r_str_word_get0		4200289	0					
ANR	4201763	Identifier	r_str_word_get0		4200289	0					
ANR	4201764	ArgumentList	ptr		4200289	1					
ANR	4201765	Argument	ptr		4200289	0					
ANR	4201766	Identifier	ptr		4200289	0					
ANR	4201767	Argument	0		4200289	1					
ANR	4201768	PrimaryExpression	0		4200289	0					
ANR	4201769	BreakStatement	break ;	1793:4:54651:54656	4200289	5	True				
ANR	4201770	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1795:3:54666:54694	4200289	12	True				
ANR	4201771	CallExpression	r_debug_map_sync ( core -> dbg )		4200289	0					
ANR	4201772	Callee	r_debug_map_sync		4200289	0					
ANR	4201773	Identifier	r_debug_map_sync		4200289	0					
ANR	4201774	ArgumentList	core -> dbg		4200289	1					
ANR	4201775	Argument	core -> dbg		4200289	0					
ANR	4201776	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4201777	Identifier	core		4200289	0					
ANR	4201778	Identifier	dbg		4200289	1					
ANR	4201779	IdentifierDeclStatement	RList * list = r_debug_modules_list ( core -> dbg ) ;	1796:3:54729:54775	4200289	13	True				
ANR	4201780	IdentifierDecl	* list = r_debug_modules_list ( core -> dbg )		4200289	0					
ANR	4201781	IdentifierDeclType	RList *		4200289	0					
ANR	4201782	Identifier	list		4200289	1					
ANR	4201783	AssignmentExpression	* list = r_debug_modules_list ( core -> dbg )		4200289	2		=			
ANR	4201784	Identifier	list		4200289	0					
ANR	4201785	CallExpression	r_debug_modules_list ( core -> dbg )		4200289	1					
ANR	4201786	Callee	r_debug_modules_list		4200289	0					
ANR	4201787	Identifier	r_debug_modules_list		4200289	0					
ANR	4201788	ArgumentList	core -> dbg		4200289	1					
ANR	4201789	Argument	core -> dbg		4200289	0					
ANR	4201790	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4201791	Identifier	core		4200289	0					
ANR	4201792	Identifier	dbg		4200289	1					
ANR	4201793	Statement	r_list_foreach	1797:3:54780:54793	4200289	14	True				
ANR	4201794	Statement	(	1797:18:54795:54795	4200289	15	True				
ANR	4201795	Statement	list	1797:19:54796:54799	4200289	16	True				
ANR	4201796	Statement	","	1797:23:54800:54800	4200289	17	True				
ANR	4201797	Statement	iter	1797:25:54802:54805	4200289	18	True				
ANR	4201798	Statement	","	1797:29:54806:54806	4200289	19	True				
ANR	4201799	Statement	map	1797:31:54808:54810	4200289	20	True				
ANR	4201800	Statement	)	1797:34:54811:54811	4200289	21	True				
ANR	4201801	CompoundStatement		257:36:7018:7018	4200289	22					
ANR	4201802	IfStatement	"if ( ( ! libname || ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) ) ) )"		4200289	0					
ANR	4201803	Condition	"! libname || ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) )"	1798:8:54823:54967	4200289	0	True				
ANR	4201804	OrExpression	"! libname || ( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) )"		4200289	0		||			
ANR	4201805	UnaryOperationExpression	! libname		4200289	0					
ANR	4201806	UnaryOperator	!		4200289	0					
ANR	4201807	Identifier	libname		4200289	1					
ANR	4201808	OrExpression	"( addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end ) ) || ( libname != NULL && ( strstr ( map -> name , libname ) ) )"		4200289	1		||			
ANR	4201809	AndExpression	addr != UT64_MAX && ( addr >= map -> addr && addr < map -> addr_end )		4200289	0		&&			
ANR	4201810	EqualityExpression	addr != UT64_MAX		4200289	0		!=			
ANR	4201811	Identifier	addr		4200289	0					
ANR	4201812	Identifier	UT64_MAX		4200289	1					
ANR	4201813	AndExpression	addr >= map -> addr && addr < map -> addr_end		4200289	1		&&			
ANR	4201814	RelationalExpression	addr >= map -> addr		4200289	0		>=			
ANR	4201815	Identifier	addr		4200289	0					
ANR	4201816	PtrMemberAccess	map -> addr		4200289	1					
ANR	4201817	Identifier	map		4200289	0					
ANR	4201818	Identifier	addr		4200289	1					
ANR	4201819	RelationalExpression	addr < map -> addr_end		4200289	1		<			
ANR	4201820	Identifier	addr		4200289	0					
ANR	4201821	PtrMemberAccess	map -> addr_end		4200289	1					
ANR	4201822	Identifier	map		4200289	0					
ANR	4201823	Identifier	addr_end		4200289	1					
ANR	4201824	AndExpression	"libname != NULL && ( strstr ( map -> name , libname ) )"		4200289	1		&&			
ANR	4201825	EqualityExpression	libname != NULL		4200289	0		!=			
ANR	4201826	Identifier	libname		4200289	0					
ANR	4201827	Identifier	NULL		4200289	1					
ANR	4201828	CallExpression	"strstr ( map -> name , libname )"		4200289	1					
ANR	4201829	Callee	strstr		4200289	0					
ANR	4201830	Identifier	strstr		4200289	0					
ANR	4201831	ArgumentList	map -> name		4200289	1					
ANR	4201832	Argument	map -> name		4200289	0					
ANR	4201833	PtrMemberAccess	map -> name		4200289	0					
ANR	4201834	Identifier	map		4200289	0					
ANR	4201835	Identifier	name		4200289	1					
ANR	4201836	Argument	libname		4200289	1					
ANR	4201837	Identifier	libname		4200289	0					
ANR	4201838	CompoundStatement		265:5:7344:7378	4200289	1					
ANR	4201839	ExpressionStatement	baddr = map -> addr	1801:5:54977:54994	4200289	0	True				
ANR	4201840	AssignmentExpression	baddr = map -> addr		4200289	0		=			
ANR	4201841	Identifier	baddr		4200289	0					
ANR	4201842	PtrMemberAccess	map -> addr		4200289	1					
ANR	4201843	Identifier	map		4200289	0					
ANR	4201844	Identifier	addr		4200289	1					
ANR	4201845	IdentifierDeclStatement	char * res ;	1802:5:55001:55010	4200289	1	True				
ANR	4201846	IdentifierDecl	* res		4200289	0					
ANR	4201847	IdentifierDeclType	char *		4200289	0					
ANR	4201848	Identifier	res		4200289	1					
ANR	4201849	IdentifierDeclStatement	const char * file = map -> file ? map -> file : map -> name ;	1803:5:55017:55067	4200289	2	True				
ANR	4201850	IdentifierDecl	* file = map -> file ? map -> file : map -> name		4200289	0					
ANR	4201851	IdentifierDeclType	const char *		4200289	0					
ANR	4201852	Identifier	file		4200289	1					
ANR	4201853	AssignmentExpression	* file = map -> file ? map -> file : map -> name		4200289	2		=			
ANR	4201854	Identifier	file		4200289	0					
ANR	4201855	ConditionalExpression	map -> file ? map -> file : map -> name		4200289	1					
ANR	4201856	Condition	map -> file		4200289	0					
ANR	4201857	PtrMemberAccess	map -> file		4200289	0					
ANR	4201858	Identifier	map		4200289	0					
ANR	4201859	Identifier	file		4200289	1					
ANR	4201860	PtrMemberAccess	map -> file		4200289	1					
ANR	4201861	Identifier	map		4200289	0					
ANR	4201862	Identifier	file		4200289	1					
ANR	4201863	PtrMemberAccess	map -> name		4200289	2					
ANR	4201864	Identifier	map		4200289	0					
ANR	4201865	Identifier	name		4200289	1					
ANR	4201866	IdentifierDeclStatement	char * name = r_str_escape ( ( char * ) r_file_basename ( file ) ) ;	1804:5:55074:55132	4200289	3	True				
ANR	4201867	IdentifierDecl	* name = r_str_escape ( ( char * ) r_file_basename ( file ) )		4200289	0					
ANR	4201868	IdentifierDeclType	char *		4200289	0					
ANR	4201869	Identifier	name		4200289	1					
ANR	4201870	AssignmentExpression	* name = r_str_escape ( ( char * ) r_file_basename ( file ) )		4200289	2		=			
ANR	4201871	Identifier	name		4200289	0					
ANR	4201872	CallExpression	r_str_escape ( ( char * ) r_file_basename ( file ) )		4200289	1					
ANR	4201873	Callee	r_str_escape		4200289	0					
ANR	4201874	Identifier	r_str_escape		4200289	0					
ANR	4201875	ArgumentList	( char * ) r_file_basename ( file )		4200289	1					
ANR	4201876	Argument	( char * ) r_file_basename ( file )		4200289	0					
ANR	4201877	CastExpression	( char * ) r_file_basename ( file )		4200289	0					
ANR	4201878	CastTarget	char *		4200289	0					
ANR	4201879	CallExpression	r_file_basename ( file )		4200289	1					
ANR	4201880	Callee	r_file_basename		4200289	0					
ANR	4201881	Identifier	r_file_basename		4200289	0					
ANR	4201882	ArgumentList	file		4200289	1					
ANR	4201883	Argument	file		4200289	0					
ANR	4201884	Identifier	file		4200289	0					
ANR	4201885	IdentifierDeclStatement	char * filesc = r_str_escape ( file ) ;	1805:5:55139:55173	4200289	4	True				
ANR	4201886	IdentifierDecl	* filesc = r_str_escape ( file )		4200289	0					
ANR	4201887	IdentifierDeclType	char *		4200289	0					
ANR	4201888	Identifier	filesc		4200289	1					
ANR	4201889	AssignmentExpression	* filesc = r_str_escape ( file )		4200289	2		=			
ANR	4201890	Identifier	filesc		4200289	0					
ANR	4201891	CallExpression	r_str_escape ( file )		4200289	1					
ANR	4201892	Callee	r_str_escape		4200289	0					
ANR	4201893	Identifier	r_str_escape		4200289	0					
ANR	4201894	ArgumentList	file		4200289	1					
ANR	4201895	Argument	file		4200289	0					
ANR	4201896	Identifier	file		4200289	0					
ANR	4201897	IfStatement	if ( sectname )		4200289	5					
ANR	4201898	Condition	sectname	1807:9:55228:55235	4200289	0	True				
ANR	4201899	Identifier	sectname		4200289	0					
ANR	4201900	CompoundStatement		268:6:7451:7487	4200289	1					
ANR	4201901	IdentifierDeclStatement	char * sect = r_str_escape ( sectname ) ;	1808:6:55246:55282	4200289	0	True				
ANR	4201902	IdentifierDecl	* sect = r_str_escape ( sectname )		4200289	0					
ANR	4201903	IdentifierDeclType	char *		4200289	0					
ANR	4201904	Identifier	sect		4200289	1					
ANR	4201905	AssignmentExpression	* sect = r_str_escape ( sectname )		4200289	2		=			
ANR	4201906	Identifier	sect		4200289	0					
ANR	4201907	CallExpression	r_str_escape ( sectname )		4200289	1					
ANR	4201908	Callee	r_str_escape		4200289	0					
ANR	4201909	Identifier	r_str_escape		4200289	0					
ANR	4201910	ArgumentList	sectname		4200289	1					
ANR	4201911	Argument	sectname		4200289	0					
ANR	4201912	Identifier	sectname		4200289	0					
ANR	4201913	Statement	res	1809:6:55290:55292	4200289	1	True				
ANR	4201914	Statement	=	1809:11:55295:55295	4200289	2	True				
ANR	4201915	Statement	r_sys_cmd_strf	1809:13:55297:55310	4200289	3	True				
ANR	4201916	Statement	(	1809:28:55312:55312	4200289	4	True				
ANR	4201917	Statement	"""env RABIN2_PREFIX=\\""%s\\"" rabin2 %s-B 0x%08"""	1809:29:55313:55356	4200289	5	True				
ANR	4201918	Statement	PFMT64x	1810:7:55365:55371	4200289	6	True				
ANR	4201919	Statement	""" -S \\""%s\\"" | grep \\""%s\\"""""	1810:14:55372:55397	4200289	7	True				
ANR	4201920	Statement	","	1810:40:55398:55398	4200289	8	True				
ANR	4201921	Statement	name	1810:42:55400:55403	4200289	9	True				
ANR	4201922	Statement	","	1810:46:55404:55404	4200289	10	True				
ANR	4201923	Statement	mode	1810:48:55406:55409	4200289	11	True				
ANR	4201924	Statement	","	1810:52:55410:55410	4200289	12	True				
ANR	4201925	Statement	baddr	1810:54:55412:55416	4200289	13	True				
ANR	4201926	Statement	","	1810:59:55417:55417	4200289	14	True				
ANR	4201927	Statement	filesc	1810:61:55419:55424	4200289	15	True				
ANR	4201928	Statement	","	1810:67:55425:55425	4200289	16	True				
ANR	4201929	Statement	sect	1810:69:55427:55430	4200289	17	True				
ANR	4201930	Statement	)	1810:73:55431:55431	4200289	18	True				
ANR	4201931	ExpressionStatement		1810:74:55432:55432	4200289	19	True				
ANR	4201932	ExpressionStatement	free ( sect )	1811:6:55440:55451	4200289	20	True				
ANR	4201933	CallExpression	free ( sect )		4200289	0					
ANR	4201934	Callee	free		4200289	0					
ANR	4201935	Identifier	free		4200289	0					
ANR	4201936	ArgumentList	sect		4200289	1					
ANR	4201937	Argument	sect		4200289	0					
ANR	4201938	Identifier	sect		4200289	0					
ANR	4201939	ElseStatement	else		4200289	0					
ANR	4201940	CompoundStatement		272:12:7670:7670	4200289	0					
ANR	4201941	Statement	res	1813:6:55473:55475	4200289	0	True				
ANR	4201942	Statement	=	1813:10:55477:55477	4200289	1	True				
ANR	4201943	Statement	r_sys_cmd_strf	1813:12:55479:55492	4200289	2	True				
ANR	4201944	Statement	(	1813:27:55494:55494	4200289	3	True				
ANR	4201945	Statement	"""env RABIN2_PREFIX=\\""%s\\"" rabin2 %s-B 0x%08"""	1813:28:55495:55538	4200289	4	True				
ANR	4201946	Statement	PFMT64x	1814:7:55547:55553	4200289	5	True				
ANR	4201947	Statement	""" -S \\""%s\\"""""	1814:14:55554:55565	4200289	6	True				
ANR	4201948	Statement	","	1814:26:55566:55566	4200289	7	True				
ANR	4201949	Statement	name	1814:28:55568:55571	4200289	8	True				
ANR	4201950	Statement	","	1814:32:55572:55572	4200289	9	True				
ANR	4201951	Statement	mode	1814:34:55574:55577	4200289	10	True				
ANR	4201952	Statement	","	1814:38:55578:55578	4200289	11	True				
ANR	4201953	Statement	baddr	1814:40:55580:55584	4200289	12	True				
ANR	4201954	Statement	","	1814:45:55585:55585	4200289	13	True				
ANR	4201955	Statement	filesc	1814:47:55587:55592	4200289	14	True				
ANR	4201956	Statement	)	1814:53:55593:55593	4200289	15	True				
ANR	4201957	ExpressionStatement		1814:54:55594:55594	4200289	16	True				
ANR	4201958	ExpressionStatement	free ( filesc )	1816:5:55608:55621	4200289	6	True				
ANR	4201959	CallExpression	free ( filesc )		4200289	0					
ANR	4201960	Callee	free		4200289	0					
ANR	4201961	Identifier	free		4200289	0					
ANR	4201962	ArgumentList	filesc		4200289	1					
ANR	4201963	Argument	filesc		4200289	0					
ANR	4201964	Identifier	filesc		4200289	0					
ANR	4201965	ExpressionStatement	r_cons_println ( res )	1817:5:55628:55648	4200289	7	True				
ANR	4201966	CallExpression	r_cons_println ( res )		4200289	0					
ANR	4201967	Callee	r_cons_println		4200289	0					
ANR	4201968	Identifier	r_cons_println		4200289	0					
ANR	4201969	ArgumentList	res		4200289	1					
ANR	4201970	Argument	res		4200289	0					
ANR	4201971	Identifier	res		4200289	0					
ANR	4201972	ExpressionStatement	free ( name )	1818:5:55655:55665	4200289	8	True				
ANR	4201973	CallExpression	free ( name )		4200289	0					
ANR	4201974	Callee	free		4200289	0					
ANR	4201975	Identifier	free		4200289	0					
ANR	4201976	ArgumentList	name		4200289	1					
ANR	4201977	Argument	name		4200289	0					
ANR	4201978	Identifier	name		4200289	0					
ANR	4201979	ExpressionStatement	free ( res )	1819:5:55672:55682	4200289	9	True				
ANR	4201980	CallExpression	free ( res )		4200289	0					
ANR	4201981	Callee	free		4200289	0					
ANR	4201982	Identifier	free		4200289	0					
ANR	4201983	ArgumentList	res		4200289	1					
ANR	4201984	Argument	res		4200289	0					
ANR	4201985	Identifier	res		4200289	0					
ANR	4201986	IfStatement	if ( libname || addr != UT64_MAX )		4200289	10					
ANR	4201987	Condition	libname || addr != UT64_MAX	1820:9:55693:55719	4200289	0	True				
ANR	4201988	OrExpression	libname || addr != UT64_MAX		4200289	0		||			
ANR	4201989	Identifier	libname		4200289	0					
ANR	4201990	EqualityExpression	addr != UT64_MAX		4200289	1		!=			
ANR	4201991	Identifier	addr		4200289	0					
ANR	4201992	Identifier	UT64_MAX		4200289	1					
ANR	4201993	CompoundStatement		280:38:7927:7927	4200289	1					
ANR	4201994	BreakStatement	break ;	1821:6:55760:55765	4200289	0	True				
ANR	4201995	ExpressionStatement	free ( ptr )	1825:3:55788:55798	4200289	23	True				
ANR	4201996	CallExpression	free ( ptr )		4200289	0					
ANR	4201997	Callee	free		4200289	0					
ANR	4201998	Identifier	free		4200289	0					
ANR	4201999	ArgumentList	ptr		4200289	1					
ANR	4202000	Argument	ptr		4200289	0					
ANR	4202001	Identifier	ptr		4200289	0					
ANR	4202002	BreakStatement	break ;	1827:2:55806:55811	4200289	41	True				
ANR	4202003	Label	case ' ' :	1828:1:55814:55822	4200289	42	True				
ANR	4202004	CompoundStatement		291:3:8058:8091	4200289	43					
ANR	4202005	IdentifierDeclStatement	int size ;	1830:3:55840:55848	4200289	0	True				
ANR	4202006	IdentifierDecl	size		4200289	0					
ANR	4202007	IdentifierDeclType	int		4200289	0					
ANR	4202008	Identifier	size		4200289	1					
ANR	4202009	IdentifierDeclStatement	"char * p = strchr ( input + 2 , ' ' ) ;"	1831:3:55853:55886	4200289	1	True				
ANR	4202010	IdentifierDecl	"* p = strchr ( input + 2 , ' ' )"		4200289	0					
ANR	4202011	IdentifierDeclType	char *		4200289	0					
ANR	4202012	Identifier	p		4200289	1					
ANR	4202013	AssignmentExpression	"* p = strchr ( input + 2 , ' ' )"		4200289	2		=			
ANR	4202014	Identifier	p		4200289	0					
ANR	4202015	CallExpression	"strchr ( input + 2 , ' ' )"		4200289	1					
ANR	4202016	Callee	strchr		4200289	0					
ANR	4202017	Identifier	strchr		4200289	0					
ANR	4202018	ArgumentList	input + 2		4200289	1					
ANR	4202019	Argument	input + 2		4200289	0					
ANR	4202020	AdditiveExpression	input + 2		4200289	0		+			
ANR	4202021	Identifier	input		4200289	0					
ANR	4202022	PrimaryExpression	2		4200289	1					
ANR	4202023	Argument	' '		4200289	1					
ANR	4202024	PrimaryExpression	' '		4200289	0					
ANR	4202025	IfStatement	if ( p )		4200289	2					
ANR	4202026	Condition	p	1832:7:55895:55895	4200289	0	True				
ANR	4202027	Identifier	p		4200289	0					
ANR	4202028	CompoundStatement		292:10:8103:8103	4200289	1					
ANR	4202029	ExpressionStatement	* p ++ = 0	1833:4:55904:55912	4200289	0	True				
ANR	4202030	AssignmentExpression	* p ++ = 0		4200289	0		=			
ANR	4202031	UnaryOperationExpression	* p ++		4200289	0					
ANR	4202032	UnaryOperator	*		4200289	0					
ANR	4202033	PostIncDecOperationExpression	p ++		4200289	1					
ANR	4202034	Identifier	p		4200289	0					
ANR	4202035	IncDec	++		4200289	1					
ANR	4202036	PrimaryExpression	0		4200289	1					
ANR	4202037	ExpressionStatement	"addr = r_num_math ( core -> num , input + 1 )"	1834:4:55918:55958	4200289	1	True				
ANR	4202038	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		4200289	0		=			
ANR	4202039	Identifier	addr		4200289	0					
ANR	4202040	CallExpression	"r_num_math ( core -> num , input + 1 )"		4200289	1					
ANR	4202041	Callee	r_num_math		4200289	0					
ANR	4202042	Identifier	r_num_math		4200289	0					
ANR	4202043	ArgumentList	core -> num		4200289	1					
ANR	4202044	Argument	core -> num		4200289	0					
ANR	4202045	PtrMemberAccess	core -> num		4200289	0					
ANR	4202046	Identifier	core		4200289	0					
ANR	4202047	Identifier	num		4200289	1					
ANR	4202048	Argument	input + 1		4200289	1					
ANR	4202049	AdditiveExpression	input + 1		4200289	0		+			
ANR	4202050	Identifier	input		4200289	0					
ANR	4202051	PrimaryExpression	1		4200289	1					
ANR	4202052	ExpressionStatement	"size = r_num_math ( core -> num , p )"	1835:4:55964:55996	4200289	2	True				
ANR	4202053	AssignmentExpression	"size = r_num_math ( core -> num , p )"		4200289	0		=			
ANR	4202054	Identifier	size		4200289	0					
ANR	4202055	CallExpression	"r_num_math ( core -> num , p )"		4200289	1					
ANR	4202056	Callee	r_num_math		4200289	0					
ANR	4202057	Identifier	r_num_math		4200289	0					
ANR	4202058	ArgumentList	core -> num		4200289	1					
ANR	4202059	Argument	core -> num		4200289	0					
ANR	4202060	PtrMemberAccess	core -> num		4200289	0					
ANR	4202061	Identifier	core		4200289	0					
ANR	4202062	Identifier	num		4200289	1					
ANR	4202063	Argument	p		4200289	1					
ANR	4202064	Identifier	p		4200289	0					
ANR	4202065	ExpressionStatement	"r_debug_map_alloc ( core -> dbg , addr , size , false )"	1836:4:56002:56050	4200289	3	True				
ANR	4202066	CallExpression	"r_debug_map_alloc ( core -> dbg , addr , size , false )"		4200289	0					
ANR	4202067	Callee	r_debug_map_alloc		4200289	0					
ANR	4202068	Identifier	r_debug_map_alloc		4200289	0					
ANR	4202069	ArgumentList	core -> dbg		4200289	1					
ANR	4202070	Argument	core -> dbg		4200289	0					
ANR	4202071	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202072	Identifier	core		4200289	0					
ANR	4202073	Identifier	dbg		4200289	1					
ANR	4202074	Argument	addr		4200289	1					
ANR	4202075	Identifier	addr		4200289	0					
ANR	4202076	Argument	size		4200289	2					
ANR	4202077	Identifier	size		4200289	0					
ANR	4202078	Argument	false		4200289	3					
ANR	4202079	Identifier	false		4200289	0					
ANR	4202080	ElseStatement	else		4200289	0					
ANR	4202081	CompoundStatement		297:10:8267:8267	4200289	0					
ANR	4202082	ExpressionStatement	"eprintf ( ""Usage: dm addr size\\n"" )"	1838:4:56068:56101	4200289	0	True				
ANR	4202083	CallExpression	"eprintf ( ""Usage: dm addr size\\n"" )"		4200289	0					
ANR	4202084	Callee	eprintf		4200289	0					
ANR	4202085	Identifier	eprintf		4200289	0					
ANR	4202086	ArgumentList	"""Usage: dm addr size\\n"""		4200289	1					
ANR	4202087	Argument	"""Usage: dm addr size\\n"""		4200289	0					
ANR	4202088	PrimaryExpression	"""Usage: dm addr size\\n"""		4200289	0					
ANR	4202089	ReturnStatement	return false ;	1839:4:56107:56119	4200289	1	True				
ANR	4202090	Identifier	false		4200289	0					
ANR	4202091	BreakStatement	break ;	1842:2:56132:56137	4200289	44	True				
ANR	4202092	Label	case '-' :	1843:1:56140:56148	4200289	45	True				
ANR	4202093	IfStatement	if ( input [ 1 ] != ' ' )		4200289	46					
ANR	4202094	Condition	input [ 1 ] != ' '	1844:6:56165:56179	4200289	0	True				
ANR	4202095	EqualityExpression	input [ 1 ] != ' '		4200289	0		!=			
ANR	4202096	ArrayIndexing	input [ 1 ]		4200289	0					
ANR	4202097	Identifier	input		4200289	0					
ANR	4202098	PrimaryExpression	1		4200289	1					
ANR	4202099	PrimaryExpression	' '		4200289	1					
ANR	4202100	CompoundStatement		304:23:8387:8387	4200289	1					
ANR	4202101	ExpressionStatement	"eprintf ( ""|ERROR| Usage: dm- [addr]\\n"" )"	1845:3:56187:56226	4200289	0	True				
ANR	4202102	CallExpression	"eprintf ( ""|ERROR| Usage: dm- [addr]\\n"" )"		4200289	0					
ANR	4202103	Callee	eprintf		4200289	0					
ANR	4202104	Identifier	eprintf		4200289	0					
ANR	4202105	ArgumentList	"""|ERROR| Usage: dm- [addr]\\n"""		4200289	1					
ANR	4202106	Argument	"""|ERROR| Usage: dm- [addr]\\n"""		4200289	0					
ANR	4202107	PrimaryExpression	"""|ERROR| Usage: dm- [addr]\\n"""		4200289	0					
ANR	4202108	BreakStatement	break ;	1846:3:56231:56236	4200289	1	True				
ANR	4202109	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	1848:2:56244:56284	4200289	47	True				
ANR	4202110	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4200289	0		=			
ANR	4202111	Identifier	addr		4200289	0					
ANR	4202112	CallExpression	"r_num_math ( core -> num , input + 2 )"		4200289	1					
ANR	4202113	Callee	r_num_math		4200289	0					
ANR	4202114	Identifier	r_num_math		4200289	0					
ANR	4202115	ArgumentList	core -> num		4200289	1					
ANR	4202116	Argument	core -> num		4200289	0					
ANR	4202117	PtrMemberAccess	core -> num		4200289	0					
ANR	4202118	Identifier	core		4200289	0					
ANR	4202119	Identifier	num		4200289	1					
ANR	4202120	Argument	input + 2		4200289	1					
ANR	4202121	AdditiveExpression	input + 2		4200289	0		+			
ANR	4202122	Identifier	input		4200289	0					
ANR	4202123	PrimaryExpression	2		4200289	1					
ANR	4202124	Statement	r_list_foreach	1849:2:56288:56301	4200289	48	True				
ANR	4202125	Statement	(	1849:17:56303:56303	4200289	49	True				
ANR	4202126	Statement	core	1849:18:56304:56307	4200289	50	True				
ANR	4202127	Statement	->	1849:22:56308:56309	4200289	51	True				
ANR	4202128	Statement	dbg	1849:24:56310:56312	4200289	52	True				
ANR	4202129	Statement	->	1849:27:56313:56314	4200289	53	True				
ANR	4202130	Statement	maps	1849:29:56315:56318	4200289	54	True				
ANR	4202131	Statement	","	1849:33:56319:56319	4200289	55	True				
ANR	4202132	Statement	iter	1849:35:56321:56324	4200289	56	True				
ANR	4202133	Statement	","	1849:39:56325:56325	4200289	57	True				
ANR	4202134	Statement	map	1849:41:56327:56329	4200289	58	True				
ANR	4202135	Statement	)	1849:44:56330:56330	4200289	59	True				
ANR	4202136	CompoundStatement		309:46:8537:8537	4200289	60					
ANR	4202137	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		4200289	0					
ANR	4202138	Condition	addr >= map -> addr && addr < map -> addr_end	1850:7:56341:56381	4200289	0	True				
ANR	4202139	AndExpression	addr >= map -> addr && addr < map -> addr_end		4200289	0		&&			
ANR	4202140	RelationalExpression	addr >= map -> addr		4200289	0		>=			
ANR	4202141	Identifier	addr		4200289	0					
ANR	4202142	PtrMemberAccess	map -> addr		4200289	1					
ANR	4202143	Identifier	map		4200289	0					
ANR	4202144	Identifier	addr		4200289	1					
ANR	4202145	RelationalExpression	addr < map -> addr_end		4200289	1		<			
ANR	4202146	Identifier	addr		4200289	0					
ANR	4202147	PtrMemberAccess	map -> addr_end		4200289	1					
ANR	4202148	Identifier	map		4200289	0					
ANR	4202149	Identifier	addr_end		4200289	1					
ANR	4202150	CompoundStatement		310:50:8589:8589	4200289	1					
ANR	4202151	ExpressionStatement	"r_debug_map_dealloc ( core -> dbg , map )"	1851:4:56390:56425	4200289	0	True				
ANR	4202152	CallExpression	"r_debug_map_dealloc ( core -> dbg , map )"		4200289	0					
ANR	4202153	Callee	r_debug_map_dealloc		4200289	0					
ANR	4202154	Identifier	r_debug_map_dealloc		4200289	0					
ANR	4202155	ArgumentList	core -> dbg		4200289	1					
ANR	4202156	Argument	core -> dbg		4200289	0					
ANR	4202157	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202158	Identifier	core		4200289	0					
ANR	4202159	Identifier	dbg		4200289	1					
ANR	4202160	Argument	map		4200289	1					
ANR	4202161	Identifier	map		4200289	0					
ANR	4202162	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1852:4:56431:56459	4200289	1	True				
ANR	4202163	CallExpression	r_debug_map_sync ( core -> dbg )		4200289	0					
ANR	4202164	Callee	r_debug_map_sync		4200289	0					
ANR	4202165	Identifier	r_debug_map_sync		4200289	0					
ANR	4202166	ArgumentList	core -> dbg		4200289	1					
ANR	4202167	Argument	core -> dbg		4200289	0					
ANR	4202168	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202169	Identifier	core		4200289	0					
ANR	4202170	Identifier	dbg		4200289	1					
ANR	4202171	ReturnStatement	return true ;	1853:4:56465:56476	4200289	2	True				
ANR	4202172	Identifier	true		4200289	0					
ANR	4202173	ExpressionStatement	"eprintf ( ""The address doesn't match with any map.\\n"" )"	1856:2:56489:56542	4200289	61	True				
ANR	4202174	CallExpression	"eprintf ( ""The address doesn't match with any map.\\n"" )"		4200289	0					
ANR	4202175	Callee	eprintf		4200289	0					
ANR	4202176	Identifier	eprintf		4200289	0					
ANR	4202177	ArgumentList	"""The address doesn't match with any map.\\n"""		4200289	1					
ANR	4202178	Argument	"""The address doesn't match with any map.\\n"""		4200289	0					
ANR	4202179	PrimaryExpression	"""The address doesn't match with any map.\\n"""		4200289	0					
ANR	4202180	BreakStatement	break ;	1857:2:56546:56551	4200289	62	True				
ANR	4202181	Label	case 'L' :	1858:1:56554:56562	4200289	63	True				
ANR	4202182	CompoundStatement		321:3:8798:8831	4200289	64					
ANR	4202183	IdentifierDeclStatement	int size ;	1860:3:56580:56588	4200289	0	True				
ANR	4202184	IdentifierDecl	size		4200289	0					
ANR	4202185	IdentifierDeclType	int		4200289	0					
ANR	4202186	Identifier	size		4200289	1					
ANR	4202187	IdentifierDeclStatement	"char * p = strchr ( input + 2 , ' ' ) ;"	1861:3:56593:56626	4200289	1	True				
ANR	4202188	IdentifierDecl	"* p = strchr ( input + 2 , ' ' )"		4200289	0					
ANR	4202189	IdentifierDeclType	char *		4200289	0					
ANR	4202190	Identifier	p		4200289	1					
ANR	4202191	AssignmentExpression	"* p = strchr ( input + 2 , ' ' )"		4200289	2		=			
ANR	4202192	Identifier	p		4200289	0					
ANR	4202193	CallExpression	"strchr ( input + 2 , ' ' )"		4200289	1					
ANR	4202194	Callee	strchr		4200289	0					
ANR	4202195	Identifier	strchr		4200289	0					
ANR	4202196	ArgumentList	input + 2		4200289	1					
ANR	4202197	Argument	input + 2		4200289	0					
ANR	4202198	AdditiveExpression	input + 2		4200289	0		+			
ANR	4202199	Identifier	input		4200289	0					
ANR	4202200	PrimaryExpression	2		4200289	1					
ANR	4202201	Argument	' '		4200289	1					
ANR	4202202	PrimaryExpression	' '		4200289	0					
ANR	4202203	IfStatement	if ( p )		4200289	2					
ANR	4202204	Condition	p	1862:7:56635:56635	4200289	0	True				
ANR	4202205	Identifier	p		4200289	0					
ANR	4202206	CompoundStatement		322:10:8843:8843	4200289	1					
ANR	4202207	ExpressionStatement	* p ++ = 0	1863:4:56644:56652	4200289	0	True				
ANR	4202208	AssignmentExpression	* p ++ = 0		4200289	0		=			
ANR	4202209	UnaryOperationExpression	* p ++		4200289	0					
ANR	4202210	UnaryOperator	*		4200289	0					
ANR	4202211	PostIncDecOperationExpression	p ++		4200289	1					
ANR	4202212	Identifier	p		4200289	0					
ANR	4202213	IncDec	++		4200289	1					
ANR	4202214	PrimaryExpression	0		4200289	1					
ANR	4202215	ExpressionStatement	"addr = r_num_math ( core -> num , input + 1 )"	1864:4:56658:56698	4200289	1	True				
ANR	4202216	AssignmentExpression	"addr = r_num_math ( core -> num , input + 1 )"		4200289	0		=			
ANR	4202217	Identifier	addr		4200289	0					
ANR	4202218	CallExpression	"r_num_math ( core -> num , input + 1 )"		4200289	1					
ANR	4202219	Callee	r_num_math		4200289	0					
ANR	4202220	Identifier	r_num_math		4200289	0					
ANR	4202221	ArgumentList	core -> num		4200289	1					
ANR	4202222	Argument	core -> num		4200289	0					
ANR	4202223	PtrMemberAccess	core -> num		4200289	0					
ANR	4202224	Identifier	core		4200289	0					
ANR	4202225	Identifier	num		4200289	1					
ANR	4202226	Argument	input + 1		4200289	1					
ANR	4202227	AdditiveExpression	input + 1		4200289	0		+			
ANR	4202228	Identifier	input		4200289	0					
ANR	4202229	PrimaryExpression	1		4200289	1					
ANR	4202230	ExpressionStatement	"size = r_num_math ( core -> num , p )"	1865:4:56704:56736	4200289	2	True				
ANR	4202231	AssignmentExpression	"size = r_num_math ( core -> num , p )"		4200289	0		=			
ANR	4202232	Identifier	size		4200289	0					
ANR	4202233	CallExpression	"r_num_math ( core -> num , p )"		4200289	1					
ANR	4202234	Callee	r_num_math		4200289	0					
ANR	4202235	Identifier	r_num_math		4200289	0					
ANR	4202236	ArgumentList	core -> num		4200289	1					
ANR	4202237	Argument	core -> num		4200289	0					
ANR	4202238	PtrMemberAccess	core -> num		4200289	0					
ANR	4202239	Identifier	core		4200289	0					
ANR	4202240	Identifier	num		4200289	1					
ANR	4202241	Argument	p		4200289	1					
ANR	4202242	Identifier	p		4200289	0					
ANR	4202243	ExpressionStatement	"r_debug_map_alloc ( core -> dbg , addr , size , true )"	1866:4:56742:56789	4200289	3	True				
ANR	4202244	CallExpression	"r_debug_map_alloc ( core -> dbg , addr , size , true )"		4200289	0					
ANR	4202245	Callee	r_debug_map_alloc		4200289	0					
ANR	4202246	Identifier	r_debug_map_alloc		4200289	0					
ANR	4202247	ArgumentList	core -> dbg		4200289	1					
ANR	4202248	Argument	core -> dbg		4200289	0					
ANR	4202249	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202250	Identifier	core		4200289	0					
ANR	4202251	Identifier	dbg		4200289	1					
ANR	4202252	Argument	addr		4200289	1					
ANR	4202253	Identifier	addr		4200289	0					
ANR	4202254	Argument	size		4200289	2					
ANR	4202255	Identifier	size		4200289	0					
ANR	4202256	Argument	true		4200289	3					
ANR	4202257	Identifier	true		4200289	0					
ANR	4202258	ElseStatement	else		4200289	0					
ANR	4202259	CompoundStatement		327:10:9006:9006	4200289	0					
ANR	4202260	ExpressionStatement	"eprintf ( ""Usage: dmL addr size\\n"" )"	1868:4:56807:56841	4200289	0	True				
ANR	4202261	CallExpression	"eprintf ( ""Usage: dmL addr size\\n"" )"		4200289	0					
ANR	4202262	Callee	eprintf		4200289	0					
ANR	4202263	Identifier	eprintf		4200289	0					
ANR	4202264	ArgumentList	"""Usage: dmL addr size\\n"""		4200289	1					
ANR	4202265	Argument	"""Usage: dmL addr size\\n"""		4200289	0					
ANR	4202266	PrimaryExpression	"""Usage: dmL addr size\\n"""		4200289	0					
ANR	4202267	ReturnStatement	return false ;	1869:4:56847:56859	4200289	1	True				
ANR	4202268	Identifier	false		4200289	0					
ANR	4202269	BreakStatement	break ;	1872:2:56872:56877	4200289	65	True				
ANR	4202270	Label	case '\\0' :	1873:1:56880:56889	4200289	66	True				
ANR	4202271	Label	case '*' :	1874:1:56900:56908	4200289	67	True				
ANR	4202272	Label	case 'j' :	1875:1:56920:56928	4200289	68	True				
ANR	4202273	Label	case 'q' :	1876:1:56940:56948	4200289	69	True				
ANR	4202274	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1877:2:56961:56989	4200289	70	True				
ANR	4202275	CallExpression	r_debug_map_sync ( core -> dbg )		4200289	0					
ANR	4202276	Callee	r_debug_map_sync		4200289	0					
ANR	4202277	Identifier	r_debug_map_sync		4200289	0					
ANR	4202278	ArgumentList	core -> dbg		4200289	1					
ANR	4202279	Argument	core -> dbg		4200289	0					
ANR	4202280	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202281	Identifier	core		4200289	0					
ANR	4202282	Identifier	dbg		4200289	1					
ANR	4202283	ExpressionStatement	"r_debug_map_list ( core -> dbg , core -> offset , input )"	1878:2:57023:57072	4200289	71	True				
ANR	4202284	CallExpression	"r_debug_map_list ( core -> dbg , core -> offset , input )"		4200289	0					
ANR	4202285	Callee	r_debug_map_list		4200289	0					
ANR	4202286	Identifier	r_debug_map_list		4200289	0					
ANR	4202287	ArgumentList	core -> dbg		4200289	1					
ANR	4202288	Argument	core -> dbg		4200289	0					
ANR	4202289	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202290	Identifier	core		4200289	0					
ANR	4202291	Identifier	dbg		4200289	1					
ANR	4202292	Argument	core -> offset		4200289	1					
ANR	4202293	PtrMemberAccess	core -> offset		4200289	0					
ANR	4202294	Identifier	core		4200289	0					
ANR	4202295	Identifier	offset		4200289	1					
ANR	4202296	Argument	input		4200289	2					
ANR	4202297	Identifier	input		4200289	0					
ANR	4202298	BreakStatement	break ;	1879:2:57076:57081	4200289	72	True				
ANR	4202299	Label	case '=' :	1880:1:57084:57092	4200289	73	True				
ANR	4202300	ExpressionStatement	r_debug_map_sync ( core -> dbg )	1881:2:57105:57133	4200289	74	True				
ANR	4202301	CallExpression	r_debug_map_sync ( core -> dbg )		4200289	0					
ANR	4202302	Callee	r_debug_map_sync		4200289	0					
ANR	4202303	Identifier	r_debug_map_sync		4200289	0					
ANR	4202304	ArgumentList	core -> dbg		4200289	1					
ANR	4202305	Argument	core -> dbg		4200289	0					
ANR	4202306	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202307	Identifier	core		4200289	0					
ANR	4202308	Identifier	dbg		4200289	1					
ANR	4202309	ExpressionStatement	"r_debug_map_list_visual ( core -> dbg , core -> offset , input , r_config_get_i ( core -> config , ""scr.color"" ) )"	1882:2:57137:57241	4200289	75	True				
ANR	4202310	CallExpression	"r_debug_map_list_visual ( core -> dbg , core -> offset , input , r_config_get_i ( core -> config , ""scr.color"" ) )"		4200289	0					
ANR	4202311	Callee	r_debug_map_list_visual		4200289	0					
ANR	4202312	Identifier	r_debug_map_list_visual		4200289	0					
ANR	4202313	ArgumentList	core -> dbg		4200289	1					
ANR	4202314	Argument	core -> dbg		4200289	0					
ANR	4202315	PtrMemberAccess	core -> dbg		4200289	0					
ANR	4202316	Identifier	core		4200289	0					
ANR	4202317	Identifier	dbg		4200289	1					
ANR	4202318	Argument	core -> offset		4200289	1					
ANR	4202319	PtrMemberAccess	core -> offset		4200289	0					
ANR	4202320	Identifier	core		4200289	0					
ANR	4202321	Identifier	offset		4200289	1					
ANR	4202322	Argument	input		4200289	2					
ANR	4202323	Identifier	input		4200289	0					
ANR	4202324	Argument	"r_config_get_i ( core -> config , ""scr.color"" )"		4200289	3					
ANR	4202325	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4200289	0					
ANR	4202326	Callee	r_config_get_i		4200289	0					
ANR	4202327	Identifier	r_config_get_i		4200289	0					
ANR	4202328	ArgumentList	core -> config		4200289	1					
ANR	4202329	Argument	core -> config		4200289	0					
ANR	4202330	PtrMemberAccess	core -> config		4200289	0					
ANR	4202331	Identifier	core		4200289	0					
ANR	4202332	Identifier	config		4200289	1					
ANR	4202333	Argument	"""scr.color"""		4200289	1					
ANR	4202334	PrimaryExpression	"""scr.color"""		4200289	0					
ANR	4202335	BreakStatement	break ;	1884:2:57245:57250	4200289	76	True				
ANR	4202336	Label	case 'h' :	1885:1:57253:57261	4200289	77	True				
ANR	4202337	ExpressionStatement	"( void ) r_debug_heap ( core , input )"	1886:2:57274:57306	4200289	78	True				
ANR	4202338	CastExpression	"( void ) r_debug_heap ( core , input )"		4200289	0					
ANR	4202339	CastTarget	void		4200289	0					
ANR	4202340	CallExpression	"r_debug_heap ( core , input )"		4200289	1					
ANR	4202341	Callee	r_debug_heap		4200289	0					
ANR	4202342	Identifier	r_debug_heap		4200289	0					
ANR	4202343	ArgumentList	core		4200289	1					
ANR	4202344	Argument	core		4200289	0					
ANR	4202345	Identifier	core		4200289	0					
ANR	4202346	Argument	input		4200289	1					
ANR	4202347	Identifier	input		4200289	0					
ANR	4202348	BreakStatement	break ;	1887:2:57310:57315	4200289	79	True				
ANR	4202349	ReturnStatement	return true ;	1889:1:57321:57332	4200289	4	True				
ANR	4202350	Identifier	true		4200289	0					
ANR	4202351	ReturnType	static int		4200289	1					
ANR	4202352	Identifier	cmd_debug_map		4200289	2					
ANR	4202353	ParameterList	"RCore * core , const char * input"		4200289	3					
ANR	4202354	Parameter	RCore * core	1541:25:47762:47772	4200289	0	True				
ANR	4202355	ParameterType	RCore *		4200289	0					
ANR	4202356	Identifier	core		4200289	1					
ANR	4202357	Parameter	const char * input	1541:38:47775:47791	4200289	1	True				
ANR	4202358	ParameterType	const char *		4200289	0					
ANR	4202359	Identifier	input		4200289	1					
ANR	4202360	CFGEntryNode	ENTRY		4200289		True				
ANR	4202361	CFGExitNode	EXIT		4200289		True				
ANR	4202362	Symbol	symbol		4200289						
ANR	4202363	Symbol	r_file_rm		4200289						
ANR	4202364	Symbol	* map		4200289						
ANR	4202365	Symbol	* q ++		4200289						
ANR	4202366	Symbol	* closest_symbol		4200289						
ANR	4202367	Symbol	* input		4200289						
ANR	4202368	Symbol	core -> offset		4200289						
ANR	4202369	Symbol	strchr		4200289						
ANR	4202370	Symbol	r_file_temp		4200289						
ANR	4202371	Symbol	r_str_word_set0		4200289						
ANR	4202372	Symbol	& filter		4200289						
ANR	4202373	Symbol	mode		4200289						
ANR	4202374	Symbol	closest_symbol -> name		4200289						
ANR	4202375	Symbol	* ptr		4200289						
ANR	4202376	Symbol	core -> num		4200289						
ANR	4202377	Symbol	* symbol		4200289						
ANR	4202378	Symbol	core -> bin		4200289						
ANR	4202379	Symbol	newfile		4200289						
ANR	4202380	Symbol	strcmp		4200289						
ANR	4202381	Symbol	res		4200289						
ANR	4202382	Symbol	r_file_slurp		4200289						
ANR	4202383	Symbol	r_str_rwx		4200289						
ANR	4202384	Symbol	NULL		4200289						
ANR	4202385	Symbol	r_debug_modules_list		4200289						
ANR	4202386	Symbol	iter		4200289						
ANR	4202387	Symbol	closest_symbol		4200289						
ANR	4202388	Symbol	list		4200289						
ANR	4202389	Symbol	& sz		4200289						
ANR	4202390	Symbol	r_str_escape		4200289						
ANR	4202391	Symbol	core		4200289						
ANR	4202392	Symbol	input		4200289						
ANR	4202393	Symbol	filter . name		4200289						
ANR	4202394	Symbol	size		4200289						
ANR	4202395	Symbol	help_msg_dmp		4200289						
ANR	4202396	Symbol	strstr		4200289						
ANR	4202397	Symbol	r_config_get_i		4200289						
ANR	4202398	Symbol	map -> addr_end		4200289						
ANR	4202399	Symbol	true		4200289						
ANR	4202400	Symbol	r_str_trim_ro		4200289						
ANR	4202401	Symbol	name		4200289						
ANR	4202402	Symbol	dump_maps		4200289						
ANR	4202403	Symbol	help_msg_dmi		4200289						
ANR	4202404	Symbol	cmd		4200289						
ANR	4202405	Symbol	baddr		4200289						
ANR	4202406	Symbol	symbol -> vaddr		4200289						
ANR	4202407	Symbol	map -> addr		4200289						
ANR	4202408	Symbol	filesc		4200289						
ANR	4202409	Symbol	map -> file		4200289						
ANR	4202410	Symbol	* core		4200289						
ANR	4202411	Symbol	symname		4200289						
ANR	4202412	Symbol	R_CORE_BIN_ACC_SYMBOLS		4200289						
ANR	4202413	Symbol	map -> size		4200289						
ANR	4202414	Symbol	sectname		4200289						
ANR	4202415	Symbol	symbols		4200289						
ANR	4202416	Symbol	r_num_math		4200289						
ANR	4202417	Symbol	r_sys_cmd_str		4200289						
ANR	4202418	Symbol	R_PERM_RW		4200289						
ANR	4202419	Symbol	file		4200289						
ANR	4202420	Symbol	map -> name		4200289						
ANR	4202421	Symbol	core -> io		4200289						
ANR	4202422	Symbol	perms		4200289						
ANR	4202423	Symbol	addroflib		4200289						
ANR	4202424	Symbol	r_str_trim_head		4200289						
ANR	4202425	Symbol	addr		4200289						
ANR	4202426	Symbol	UT64_MAX		4200289						
ANR	4202427	Symbol	map		4200289						
ANR	4202428	Symbol	core -> config		4200289						
ANR	4202429	Symbol	* p ++		4200289						
ANR	4202430	Symbol	sz		4200289						
ANR	4202431	Symbol	false		4200289						
ANR	4202432	Symbol	i		4200289						
ANR	4202433	Symbol	r_str_word_get0		4200289						
ANR	4202434	Symbol	r_file_basename		4200289						
ANR	4202435	Symbol	a0		4200289						
ANR	4202436	Symbol	ptr		4200289						
ANR	4202437	Symbol	IS_DIGIT		4200289						
ANR	4202438	Symbol	p		4200289						
ANR	4202439	Symbol	filter		4200289						
ANR	4202440	Symbol	q		4200289						
ANR	4202441	Symbol	buf		4200289						
ANR	4202442	Symbol	closest_addr		4200289						
ANR	4202443	Symbol	libname		4200289						
ANR	4202444	Symbol	sect		4200289						
ANR	4202445	Symbol	r_bin_get_symbols		4200289						
ANR	4202446	Symbol	get_closest_map		4200289						
ANR	4202447	Symbol	strdup		4200289						
ANR	4202448	Symbol	help_msg_dm		4200289						
ANR	4202449	Symbol	r_file_exists		4200289						
ANR	4202450	Symbol	core -> dbg		4200289						
ANR	4202451	Function	_new	1901:11:57545:57620							
ANR	4202452	FunctionDef	_new (x n)		4202451	0					
ANR	4202453	CompoundStatement		1901:24:57558:57620	4202451	0					
ANR	4202454	IdentifierDeclStatement	x * m = malloc ( sizeof ( x ) ) ;	1902:2:57563:57588	4202451	0	True				
ANR	4202455	IdentifierDecl	* m = malloc ( sizeof ( x ) )		4202451	0					
ANR	4202456	IdentifierDeclType	x *		4202451	0					
ANR	4202457	Identifier	m		4202451	1					
ANR	4202458	AssignmentExpression	* m = malloc ( sizeof ( x ) )		4202451	2		=			
ANR	4202459	Identifier	m		4202451	0					
ANR	4202460	CallExpression	malloc ( sizeof ( x ) )		4202451	1					
ANR	4202461	Callee	malloc		4202451	0					
ANR	4202462	Identifier	malloc		4202451	0					
ANR	4202463	ArgumentList	sizeof ( x )		4202451	1					
ANR	4202464	Argument	sizeof ( x )		4202451	0					
ANR	4202465	SizeofExpression	sizeof ( x )		4202451	0					
ANR	4202466	Sizeof	sizeof		4202451	0					
ANR	4202467	SizeofOperand	x		4202451	1					
ANR	4202468	ReturnStatement	"return m ? * m = n , m : m ;"	1903:2:57593:57615	4202451	1	True				
ANR	4202469	ConditionalExpression	"m ? * m = n , m : m"		4202451	0					
ANR	4202470	Condition	m		4202451	0					
ANR	4202471	Identifier	m		4202451	0					
ANR	4202472	Expression	"* m = n , m"		4202451	1					
ANR	4202473	AssignmentExpression	* m = n		4202451	0		=			
ANR	4202474	UnaryOperationExpression	* m		4202451	0					
ANR	4202475	UnaryOperator	*		4202451	0					
ANR	4202476	Identifier	m		4202451	1					
ANR	4202477	Identifier	n		4202451	1					
ANR	4202478	Identifier	m		4202451	1					
ANR	4202479	Identifier	m		4202451	2					
ANR	4202480	ReturnType	x		4202451	1					
ANR	4202481	Identifier	_new		4202451	2					
ANR	4202482	ParameterList	x n		4202451	3					
ANR	4202483	Parameter	x n	1901:19:57553:57555	4202451	0	True				
ANR	4202484	ParameterType	x		4202451	0					
ANR	4202485	Identifier	n		4202451	1					
ANR	4202486	CFGEntryNode	ENTRY		4202451		True				
ANR	4202487	CFGExitNode	EXIT		4202451		True				
ANR	4202488	Symbol	malloc		4202451						
ANR	4202489	Symbol	* m		4202451						
ANR	4202490	Symbol	m		4202451						
ANR	4202491	Symbol	n		4202451						
ANR	4202492	Function	regcmp	1908:0:57640:57831							
ANR	4202493	FunctionDef	"regcmp (const void * a , const void * b)"		4202492	0					
ANR	4202494	CompoundStatement		1908:48:57688:57831	4202492	0					
ANR	4202495	IdentifierDeclStatement	const ut64 * A = ( const ut64 * ) a ;	1909:1:57691:57721	4202492	0	True				
ANR	4202496	IdentifierDecl	* A = ( const ut64 * ) a		4202492	0					
ANR	4202497	IdentifierDeclType	const ut64 *		4202492	0					
ANR	4202498	Identifier	A		4202492	1					
ANR	4202499	AssignmentExpression	* A = ( const ut64 * ) a		4202492	2		=			
ANR	4202500	Identifier	A		4202492	0					
ANR	4202501	CastExpression	( const ut64 * ) a		4202492	1					
ANR	4202502	CastTarget	const ut64 *		4202492	0					
ANR	4202503	Identifier	a		4202492	1					
ANR	4202504	IdentifierDeclStatement	const ut64 * B = ( const ut64 * ) b ;	1910:1:57724:57754	4202492	1	True				
ANR	4202505	IdentifierDecl	* B = ( const ut64 * ) b		4202492	0					
ANR	4202506	IdentifierDeclType	const ut64 *		4202492	0					
ANR	4202507	Identifier	B		4202492	1					
ANR	4202508	AssignmentExpression	* B = ( const ut64 * ) b		4202492	2		=			
ANR	4202509	Identifier	B		4202492	0					
ANR	4202510	CastExpression	( const ut64 * ) b		4202492	1					
ANR	4202511	CastTarget	const ut64 *		4202492	0					
ANR	4202512	Identifier	b		4202492	1					
ANR	4202513	IfStatement	if ( * A > * B )		4202492	2					
ANR	4202514	Condition	* A > * B	1911:5:57761:57767	4202492	0	True				
ANR	4202515	RelationalExpression	* A > * B		4202492	0		>			
ANR	4202516	UnaryOperationExpression	* A		4202492	0					
ANR	4202517	UnaryOperator	*		4202492	0					
ANR	4202518	Identifier	A		4202492	1					
ANR	4202519	UnaryOperationExpression	* B		4202492	1					
ANR	4202520	UnaryOperator	*		4202492	0					
ANR	4202521	Identifier	B		4202492	1					
ANR	4202522	CompoundStatement		4:14:81:81	4202492	1					
ANR	4202523	ReturnStatement	return 1 ;	1912:2:57774:57782	4202492	0	True				
ANR	4202524	PrimaryExpression	1		4202492	0					
ANR	4202525	IfStatement	if ( * A == * B )		4202492	3					
ANR	4202526	Condition	* A == * B	1914:5:57792:57799	4202492	0	True				
ANR	4202527	EqualityExpression	* A == * B		4202492	0		==			
ANR	4202528	UnaryOperationExpression	* A		4202492	0					
ANR	4202529	UnaryOperator	*		4202492	0					
ANR	4202530	Identifier	A		4202492	1					
ANR	4202531	UnaryOperationExpression	* B		4202492	1					
ANR	4202532	UnaryOperator	*		4202492	0					
ANR	4202533	Identifier	B		4202492	1					
ANR	4202534	CompoundStatement		7:15:113:113	4202492	1					
ANR	4202535	ReturnStatement	return 0 ;	1915:2:57806:57814	4202492	0	True				
ANR	4202536	PrimaryExpression	0		4202492	0					
ANR	4202537	ReturnStatement	return - 1 ;	1917:1:57820:57829	4202492	4	True				
ANR	4202538	UnaryOperationExpression	- 1		4202492	0					
ANR	4202539	UnaryOperator	-		4202492	0					
ANR	4202540	PrimaryExpression	1		4202492	1					
ANR	4202541	ReturnType	static int		4202492	1					
ANR	4202542	Identifier	regcmp		4202492	2					
ANR	4202543	ParameterList	"const void * a , const void * b"		4202492	3					
ANR	4202544	Parameter	const void * a	1908:18:57658:57670	4202492	0	True				
ANR	4202545	ParameterType	const void *		4202492	0					
ANR	4202546	Identifier	a		4202492	1					
ANR	4202547	Parameter	const void * b	1908:33:57673:57685	4202492	1	True				
ANR	4202548	ParameterType	const void *		4202492	0					
ANR	4202549	Identifier	b		4202492	1					
ANR	4202550	CFGEntryNode	ENTRY		4202492		True				
ANR	4202551	CFGExitNode	EXIT		4202492		True				
ANR	4202552	Symbol	a		4202492						
ANR	4202553	Symbol	A		4202492						
ANR	4202554	Symbol	b		4202492						
ANR	4202555	Symbol	B		4202492						
ANR	4202556	Symbol	* A		4202492						
ANR	4202557	Symbol	* B		4202492						
ANR	4202558	Function	regcb	1920:0:57834:58000							
ANR	4202559	FunctionDef	"regcb (void * u , const ut64 k , const void * v)"		4202558	0					
ANR	4202560	CompoundStatement		1920:56:57890:58000	4202558	0					
ANR	4202561	IdentifierDeclStatement	RList * sorted = ( RList * ) u ;	1921:1:57893:57919	4202558	0	True				
ANR	4202562	IdentifierDecl	* sorted = ( RList * ) u		4202558	0					
ANR	4202563	IdentifierDeclType	RList *		4202558	0					
ANR	4202564	Identifier	sorted		4202558	1					
ANR	4202565	AssignmentExpression	* sorted = ( RList * ) u		4202558	2		=			
ANR	4202566	Identifier	sorted		4202558	0					
ANR	4202567	CastExpression	( RList * ) u		4202558	1					
ANR	4202568	CastTarget	RList *		4202558	0					
ANR	4202569	Identifier	u		4202558	1					
ANR	4202570	IdentifierDeclStatement	ut64 * n = ut64_new ( k ) ;	1922:1:57922:57944	4202558	1	True				
ANR	4202571	IdentifierDecl	* n = ut64_new ( k )		4202558	0					
ANR	4202572	IdentifierDeclType	ut64 *		4202558	0					
ANR	4202573	Identifier	n		4202558	1					
ANR	4202574	AssignmentExpression	* n = ut64_new ( k )		4202558	2		=			
ANR	4202575	Identifier	n		4202558	0					
ANR	4202576	CallExpression	ut64_new ( k )		4202558	1					
ANR	4202577	Callee	ut64_new		4202558	0					
ANR	4202578	Identifier	ut64_new		4202558	0					
ANR	4202579	ArgumentList	k		4202558	1					
ANR	4202580	Argument	k		4202558	0					
ANR	4202581	Identifier	k		4202558	0					
ANR	4202582	ExpressionStatement	"r_list_add_sorted ( sorted , n , regcmp )"	1923:1:57947:57984	4202558	2	True				
ANR	4202583	CallExpression	"r_list_add_sorted ( sorted , n , regcmp )"		4202558	0					
ANR	4202584	Callee	r_list_add_sorted		4202558	0					
ANR	4202585	Identifier	r_list_add_sorted		4202558	0					
ANR	4202586	ArgumentList	sorted		4202558	1					
ANR	4202587	Argument	sorted		4202558	0					
ANR	4202588	Identifier	sorted		4202558	0					
ANR	4202589	Argument	n		4202558	1					
ANR	4202590	Identifier	n		4202558	0					
ANR	4202591	Argument	regcmp		4202558	2					
ANR	4202592	Identifier	regcmp		4202558	0					
ANR	4202593	ReturnStatement	return true ;	1924:1:57987:57998	4202558	3	True				
ANR	4202594	Identifier	true		4202558	0					
ANR	4202595	ReturnType	static bool		4202558	1					
ANR	4202596	Identifier	regcb		4202558	2					
ANR	4202597	ParameterList	"void * u , const ut64 k , const void * v"		4202558	3					
ANR	4202598	Parameter	void * u	1920:18:57852:57858	4202558	0	True				
ANR	4202599	ParameterType	void *		4202558	0					
ANR	4202600	Identifier	u		4202558	1					
ANR	4202601	Parameter	const ut64 k	1920:27:57861:57872	4202558	1	True				
ANR	4202602	ParameterType	const ut64		4202558	0					
ANR	4202603	Identifier	k		4202558	1					
ANR	4202604	Parameter	const void * v	1920:41:57875:57887	4202558	2	True				
ANR	4202605	ParameterType	const void *		4202558	0					
ANR	4202606	Identifier	v		4202558	1					
ANR	4202607	CFGEntryNode	ENTRY		4202558		True				
ANR	4202608	CFGExitNode	EXIT		4202558		True				
ANR	4202609	Symbol	sorted		4202558						
ANR	4202610	Symbol	u		4202558						
ANR	4202611	Symbol	ut64_new		4202558						
ANR	4202612	Symbol	v		4202558						
ANR	4202613	Symbol	true		4202558						
ANR	4202614	Symbol	regcmp		4202558						
ANR	4202615	Symbol	k		4202558						
ANR	4202616	Symbol	n		4202558						
ANR	4202617	Function	r_core_debug_ri	1927:0:58003:59270							
ANR	4202618	FunctionDef	"r_core_debug_ri (RCore * core , RReg * reg , int mode)"		4202617	0					
ANR	4202619	CompoundStatement		1927:61:58064:59270	4202617	0					
ANR	4202620	IdentifierDeclStatement	"RList * list = r_reg_get_list ( reg , R_REG_TYPE_GPR ) ;"	1928:1:58067:58117	4202617	0	True				
ANR	4202621	IdentifierDecl	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		4202617	0					
ANR	4202622	IdentifierDeclType	RList *		4202617	0					
ANR	4202623	Identifier	list		4202617	1					
ANR	4202624	AssignmentExpression	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		4202617	2		=			
ANR	4202625	Identifier	list		4202617	0					
ANR	4202626	CallExpression	"r_reg_get_list ( reg , R_REG_TYPE_GPR )"		4202617	1					
ANR	4202627	Callee	r_reg_get_list		4202617	0					
ANR	4202628	Identifier	r_reg_get_list		4202617	0					
ANR	4202629	ArgumentList	reg		4202617	1					
ANR	4202630	Argument	reg		4202617	0					
ANR	4202631	Identifier	reg		4202617	0					
ANR	4202632	Argument	R_REG_TYPE_GPR		4202617	1					
ANR	4202633	Identifier	R_REG_TYPE_GPR		4202617	0					
ANR	4202634	IdentifierDeclStatement	RListIter * iter ;	1929:1:58120:58135	4202617	1	True				
ANR	4202635	IdentifierDecl	* iter		4202617	0					
ANR	4202636	IdentifierDeclType	RListIter *		4202617	0					
ANR	4202637	Identifier	iter		4202617	1					
ANR	4202638	IdentifierDeclStatement	RRegItem * r ;	1930:1:58138:58149	4202617	2	True				
ANR	4202639	IdentifierDecl	* r		4202617	0					
ANR	4202640	IdentifierDeclType	RRegItem *		4202617	0					
ANR	4202641	Identifier	r		4202617	1					
ANR	4202642	IdentifierDeclStatement	HtUP * db = ht_up_new0 ( ) ;	1931:1:58152:58176	4202617	3	True				
ANR	4202643	IdentifierDecl	* db = ht_up_new0 ( )		4202617	0					
ANR	4202644	IdentifierDeclType	HtUP *		4202617	0					
ANR	4202645	Identifier	db		4202617	1					
ANR	4202646	AssignmentExpression	* db = ht_up_new0 ( )		4202617	2		=			
ANR	4202647	Identifier	db		4202617	0					
ANR	4202648	CallExpression	ht_up_new0 ( )		4202617	1					
ANR	4202649	Callee	ht_up_new0		4202617	0					
ANR	4202650	Identifier	ht_up_new0		4202617	0					
ANR	4202651	ArgumentList			4202617	1					
ANR	4202652	Statement	r_list_foreach	1933:1:58180:58193	4202617	4	True				
ANR	4202653	Statement	(	1933:16:58195:58195	4202617	5	True				
ANR	4202654	Statement	list	1933:17:58196:58199	4202617	6	True				
ANR	4202655	Statement	","	1933:21:58200:58200	4202617	7	True				
ANR	4202656	Statement	iter	1933:23:58202:58205	4202617	8	True				
ANR	4202657	Statement	","	1933:27:58206:58206	4202617	9	True				
ANR	4202658	Statement	r	1933:29:58208:58208	4202617	10	True				
ANR	4202659	Statement	)	1933:30:58209:58209	4202617	11	True				
ANR	4202660	CompoundStatement		12:2:250:292	4202617	12					
ANR	4202661	IfStatement	if ( r -> size != core -> assembler -> bits )		4202617	0					
ANR	4202662	Condition	r -> size != core -> assembler -> bits	1934:6:58219:58250	4202617	0	True				
ANR	4202663	EqualityExpression	r -> size != core -> assembler -> bits		4202617	0		!=			
ANR	4202664	PtrMemberAccess	r -> size		4202617	0					
ANR	4202665	Identifier	r		4202617	0					
ANR	4202666	Identifier	size		4202617	1					
ANR	4202667	PtrMemberAccess	core -> assembler -> bits		4202617	1					
ANR	4202668	PtrMemberAccess	core -> assembler		4202617	0					
ANR	4202669	Identifier	core		4202617	0					
ANR	4202670	Identifier	assembler		4202617	1					
ANR	4202671	Identifier	bits		4202617	1					
ANR	4202672	CompoundStatement		8:40:188:188	4202617	1					
ANR	4202673	ContinueStatement	continue ;	1935:3:58258:58266	4202617	0	True				
ANR	4202674	IdentifierDeclStatement	"ut64 value = r_reg_get_value ( reg , r ) ;"	1937:2:58274:58311	4202617	1	True				
ANR	4202675	IdentifierDecl	"value = r_reg_get_value ( reg , r )"		4202617	0					
ANR	4202676	IdentifierDeclType	ut64		4202617	0					
ANR	4202677	Identifier	value		4202617	1					
ANR	4202678	AssignmentExpression	"value = r_reg_get_value ( reg , r )"		4202617	2		=			
ANR	4202679	Identifier	value		4202617	0					
ANR	4202680	CallExpression	"r_reg_get_value ( reg , r )"		4202617	1					
ANR	4202681	Callee	r_reg_get_value		4202617	0					
ANR	4202682	Identifier	r_reg_get_value		4202617	0					
ANR	4202683	ArgumentList	reg		4202617	1					
ANR	4202684	Argument	reg		4202617	0					
ANR	4202685	Identifier	reg		4202617	0					
ANR	4202686	Argument	r		4202617	1					
ANR	4202687	Identifier	r		4202617	0					
ANR	4202688	IdentifierDeclStatement	"RList * list = ht_up_find ( db , value , NULL ) ;"	1938:2:58315:58357	4202617	2	True				
ANR	4202689	IdentifierDecl	"* list = ht_up_find ( db , value , NULL )"		4202617	0					
ANR	4202690	IdentifierDeclType	RList *		4202617	0					
ANR	4202691	Identifier	list		4202617	1					
ANR	4202692	AssignmentExpression	"* list = ht_up_find ( db , value , NULL )"		4202617	2		=			
ANR	4202693	Identifier	list		4202617	0					
ANR	4202694	CallExpression	"ht_up_find ( db , value , NULL )"		4202617	1					
ANR	4202695	Callee	ht_up_find		4202617	0					
ANR	4202696	Identifier	ht_up_find		4202617	0					
ANR	4202697	ArgumentList	db		4202617	1					
ANR	4202698	Argument	db		4202617	0					
ANR	4202699	Identifier	db		4202617	0					
ANR	4202700	Argument	value		4202617	1					
ANR	4202701	Identifier	value		4202617	0					
ANR	4202702	Argument	NULL		4202617	2					
ANR	4202703	Identifier	NULL		4202617	0					
ANR	4202704	IfStatement	if ( ! list )		4202617	3					
ANR	4202705	Condition	! list	1939:6:58365:58369	4202617	0	True				
ANR	4202706	UnaryOperationExpression	! list		4202617	0					
ANR	4202707	UnaryOperator	!		4202617	0					
ANR	4202708	Identifier	list		4202617	1					
ANR	4202709	CompoundStatement		13:13:307:307	4202617	1					
ANR	4202710	ExpressionStatement	list = r_list_newf ( NULL )	1940:3:58377:58402	4202617	0	True				
ANR	4202711	AssignmentExpression	list = r_list_newf ( NULL )		4202617	0		=			
ANR	4202712	Identifier	list		4202617	0					
ANR	4202713	CallExpression	r_list_newf ( NULL )		4202617	1					
ANR	4202714	Callee	r_list_newf		4202617	0					
ANR	4202715	Identifier	r_list_newf		4202617	0					
ANR	4202716	ArgumentList	NULL		4202617	1					
ANR	4202717	Argument	NULL		4202617	0					
ANR	4202718	Identifier	NULL		4202617	0					
ANR	4202719	ExpressionStatement	"ht_up_update ( db , value , list )"	1941:3:58407:58437	4202617	1	True				
ANR	4202720	CallExpression	"ht_up_update ( db , value , list )"		4202617	0					
ANR	4202721	Callee	ht_up_update		4202617	0					
ANR	4202722	Identifier	ht_up_update		4202617	0					
ANR	4202723	ArgumentList	db		4202617	1					
ANR	4202724	Argument	db		4202617	0					
ANR	4202725	Identifier	db		4202617	0					
ANR	4202726	Argument	value		4202617	1					
ANR	4202727	Identifier	value		4202617	0					
ANR	4202728	Argument	list		4202617	2					
ANR	4202729	Identifier	list		4202617	0					
ANR	4202730	ExpressionStatement	"r_list_append ( list , r -> name )"	1943:2:58445:58474	4202617	4	True				
ANR	4202731	CallExpression	"r_list_append ( list , r -> name )"		4202617	0					
ANR	4202732	Callee	r_list_append		4202617	0					
ANR	4202733	Identifier	r_list_append		4202617	0					
ANR	4202734	ArgumentList	list		4202617	1					
ANR	4202735	Argument	list		4202617	0					
ANR	4202736	Identifier	list		4202617	0					
ANR	4202737	Argument	r -> name		4202617	1					
ANR	4202738	PtrMemberAccess	r -> name		4202617	0					
ANR	4202739	Identifier	r		4202617	0					
ANR	4202740	Identifier	name		4202617	1					
ANR	4202741	IdentifierDeclStatement	RList * sorted = r_list_newf ( free ) ;	1946:1:58482:58516	4202617	13	True				
ANR	4202742	IdentifierDecl	* sorted = r_list_newf ( free )		4202617	0					
ANR	4202743	IdentifierDeclType	RList *		4202617	0					
ANR	4202744	Identifier	sorted		4202617	1					
ANR	4202745	AssignmentExpression	* sorted = r_list_newf ( free )		4202617	2		=			
ANR	4202746	Identifier	sorted		4202617	0					
ANR	4202747	CallExpression	r_list_newf ( free )		4202617	1					
ANR	4202748	Callee	r_list_newf		4202617	0					
ANR	4202749	Identifier	r_list_newf		4202617	0					
ANR	4202750	ArgumentList	free		4202617	1					
ANR	4202751	Argument	free		4202617	0					
ANR	4202752	Identifier	free		4202617	0					
ANR	4202753	ExpressionStatement	"ht_up_foreach ( db , regcb , sorted )"	1947:1:58519:58552	4202617	14	True				
ANR	4202754	CallExpression	"ht_up_foreach ( db , regcb , sorted )"		4202617	0					
ANR	4202755	Callee	ht_up_foreach		4202617	0					
ANR	4202756	Identifier	ht_up_foreach		4202617	0					
ANR	4202757	ArgumentList	db		4202617	1					
ANR	4202758	Argument	db		4202617	0					
ANR	4202759	Identifier	db		4202617	0					
ANR	4202760	Argument	regcb		4202617	1					
ANR	4202761	Identifier	regcb		4202617	0					
ANR	4202762	Argument	sorted		4202617	2					
ANR	4202763	Identifier	sorted		4202617	0					
ANR	4202764	IdentifierDeclStatement	ut64 * addr ;	1948:1:58555:58565	4202617	15	True				
ANR	4202765	IdentifierDecl	* addr		4202617	0					
ANR	4202766	IdentifierDeclType	ut64 *		4202617	0					
ANR	4202767	Identifier	addr		4202617	1					
ANR	4202768	Statement	r_list_foreach	1949:1:58568:58581	4202617	16	True				
ANR	4202769	Statement	(	1949:16:58583:58583	4202617	17	True				
ANR	4202770	Statement	sorted	1949:17:58584:58589	4202617	18	True				
ANR	4202771	Statement	","	1949:23:58590:58590	4202617	19	True				
ANR	4202772	Statement	iter	1949:25:58592:58595	4202617	20	True				
ANR	4202773	Statement	","	1949:29:58596:58596	4202617	21	True				
ANR	4202774	Statement	addr	1949:31:58598:58601	4202617	22	True				
ANR	4202775	Statement	)	1949:35:58602:58602	4202617	23	True				
ANR	4202776	CompoundStatement		32:2:741:783	4202617	24					
ANR	4202777	IdentifierDeclStatement	int rwx = 0 ;	1950:2:58608:58619	4202617	0	True				
ANR	4202778	IdentifierDecl	rwx = 0		4202617	0					
ANR	4202779	IdentifierDeclType	int		4202617	0					
ANR	4202780	Identifier	rwx		4202617	1					
ANR	4202781	AssignmentExpression	rwx = 0		4202617	2		=			
ANR	4202782	Identifier	rwx		4202617	0					
ANR	4202783	PrimaryExpression	0		4202617	1					
ANR	4202784	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , * addr ) ;"	1951:2:58623:58674	4202617	1	True				
ANR	4202785	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , * addr )"		4202617	0					
ANR	4202786	IdentifierDeclType	RDebugMap *		4202617	0					
ANR	4202787	Identifier	map		4202617	1					
ANR	4202788	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , * addr )"		4202617	2		=			
ANR	4202789	Identifier	map		4202617	0					
ANR	4202790	CallExpression	"r_debug_map_get ( core -> dbg , * addr )"		4202617	1					
ANR	4202791	Callee	r_debug_map_get		4202617	0					
ANR	4202792	Identifier	r_debug_map_get		4202617	0					
ANR	4202793	ArgumentList	core -> dbg		4202617	1					
ANR	4202794	Argument	core -> dbg		4202617	0					
ANR	4202795	PtrMemberAccess	core -> dbg		4202617	0					
ANR	4202796	Identifier	core		4202617	0					
ANR	4202797	Identifier	dbg		4202617	1					
ANR	4202798	Argument	* addr		4202617	1					
ANR	4202799	UnaryOperationExpression	* addr		4202617	0					
ANR	4202800	UnaryOperator	*		4202617	0					
ANR	4202801	Identifier	addr		4202617	1					
ANR	4202802	IfStatement	if ( map )		4202617	2					
ANR	4202803	Condition	map	1952:6:58682:58684	4202617	0	True				
ANR	4202804	Identifier	map		4202617	0					
ANR	4202805	CompoundStatement		26:11:622:622	4202617	1					
ANR	4202806	ExpressionStatement	rwx = map -> perm	1953:3:58692:58707	4202617	0	True				
ANR	4202807	AssignmentExpression	rwx = map -> perm		4202617	0		=			
ANR	4202808	Identifier	rwx		4202617	0					
ANR	4202809	PtrMemberAccess	map -> perm		4202617	1					
ANR	4202810	Identifier	map		4202617	0					
ANR	4202811	Identifier	perm		4202617	1					
ANR	4202812	ExpressionStatement	"r_cons_printf ( "" %s  "" , r_str_rwx_i ( rwx ) )"	1955:2:58715:58757	4202617	3	True				
ANR	4202813	CallExpression	"r_cons_printf ( "" %s  "" , r_str_rwx_i ( rwx ) )"		4202617	0					
ANR	4202814	Callee	r_cons_printf		4202617	0					
ANR	4202815	Identifier	r_cons_printf		4202617	0					
ANR	4202816	ArgumentList	""" %s  """		4202617	1					
ANR	4202817	Argument	""" %s  """		4202617	0					
ANR	4202818	PrimaryExpression	""" %s  """		4202617	0					
ANR	4202819	Argument	r_str_rwx_i ( rwx )		4202617	1					
ANR	4202820	CallExpression	r_str_rwx_i ( rwx )		4202617	0					
ANR	4202821	Callee	r_str_rwx_i		4202617	0					
ANR	4202822	Identifier	r_str_rwx_i		4202617	0					
ANR	4202823	ArgumentList	rwx		4202617	1					
ANR	4202824	Argument	rwx		4202617	0					
ANR	4202825	Identifier	rwx		4202617	0					
ANR	4202826	Statement	r_cons_printf	1957:2:58762:58774	4202617	4	True				
ANR	4202827	Statement	(	1957:16:58776:58776	4202617	5	True				
ANR	4202828	Statement	"""0x%08"""	1957:17:58777:58783	4202617	6	True				
ANR	4202829	Statement	PFMT64x	1957:24:58784:58790	4202617	7	True				
ANR	4202830	Statement	""" """	1957:31:58791:58793	4202617	8	True				
ANR	4202831	Statement	","	1957:34:58794:58794	4202617	9	True				
ANR	4202832	Statement	*	1957:36:58796:58796	4202617	10	True				
ANR	4202833	Statement	addr	1957:37:58797:58800	4202617	11	True				
ANR	4202834	Statement	)	1957:41:58801:58801	4202617	12	True				
ANR	4202835	ExpressionStatement		1957:42:58802:58802	4202617	13	True				
ANR	4202836	IdentifierDeclStatement	"RList * list = ht_up_find ( db , * addr , NULL ) ;"	1958:2:58806:58848	4202617	14	True				
ANR	4202837	IdentifierDecl	"* list = ht_up_find ( db , * addr , NULL )"		4202617	0					
ANR	4202838	IdentifierDeclType	RList *		4202617	0					
ANR	4202839	Identifier	list		4202617	1					
ANR	4202840	AssignmentExpression	"* list = ht_up_find ( db , * addr , NULL )"		4202617	2		=			
ANR	4202841	Identifier	list		4202617	0					
ANR	4202842	CallExpression	"ht_up_find ( db , * addr , NULL )"		4202617	1					
ANR	4202843	Callee	ht_up_find		4202617	0					
ANR	4202844	Identifier	ht_up_find		4202617	0					
ANR	4202845	ArgumentList	db		4202617	1					
ANR	4202846	Argument	db		4202617	0					
ANR	4202847	Identifier	db		4202617	0					
ANR	4202848	Argument	* addr		4202617	1					
ANR	4202849	UnaryOperationExpression	* addr		4202617	0					
ANR	4202850	UnaryOperator	*		4202617	0					
ANR	4202851	Identifier	addr		4202617	1					
ANR	4202852	Argument	NULL		4202617	2					
ANR	4202853	Identifier	NULL		4202617	0					
ANR	4202854	IfStatement	if ( list )		4202617	15					
ANR	4202855	Condition	list	1959:6:58856:58859	4202617	0	True				
ANR	4202856	Identifier	list		4202617	0					
ANR	4202857	CompoundStatement		41:3:976:1029	4202617	1					
ANR	4202858	IdentifierDeclStatement	RListIter * iter ;	1960:3:58867:58882	4202617	0	True				
ANR	4202859	IdentifierDecl	* iter		4202617	0					
ANR	4202860	IdentifierDeclType	RListIter *		4202617	0					
ANR	4202861	Identifier	iter		4202617	1					
ANR	4202862	IdentifierDeclStatement	const char * r ;	1961:3:58887:58900	4202617	1	True				
ANR	4202863	IdentifierDecl	* r		4202617	0					
ANR	4202864	IdentifierDeclType	const char *		4202617	0					
ANR	4202865	Identifier	r		4202617	1					
ANR	4202866	ExpressionStatement	r_cons_strcat ( Color_YELLOW )	1962:3:58905:58933	4202617	2	True				
ANR	4202867	CallExpression	r_cons_strcat ( Color_YELLOW )		4202617	0					
ANR	4202868	Callee	r_cons_strcat		4202617	0					
ANR	4202869	Identifier	r_cons_strcat		4202617	0					
ANR	4202870	ArgumentList	Color_YELLOW		4202617	1					
ANR	4202871	Argument	Color_YELLOW		4202617	0					
ANR	4202872	Identifier	Color_YELLOW		4202617	0					
ANR	4202873	Statement	r_list_foreach	1963:3:58938:58951	4202617	3	True				
ANR	4202874	Statement	(	1963:18:58953:58953	4202617	4	True				
ANR	4202875	Statement	list	1963:19:58954:58957	4202617	5	True				
ANR	4202876	Statement	","	1963:23:58958:58958	4202617	6	True				
ANR	4202877	Statement	iter	1963:25:58960:58963	4202617	7	True				
ANR	4202878	Statement	","	1963:29:58964:58964	4202617	8	True				
ANR	4202879	Statement	r	1963:31:58966:58966	4202617	9	True				
ANR	4202880	Statement	)	1963:32:58967:58967	4202617	10	True				
ANR	4202881	CompoundStatement		37:34:904:904	4202617	11					
ANR	4202882	ExpressionStatement	"r_cons_printf ( "" %s"" , r )"	1964:4:58975:58999	4202617	0	True				
ANR	4202883	CallExpression	"r_cons_printf ( "" %s"" , r )"		4202617	0					
ANR	4202884	Callee	r_cons_printf		4202617	0					
ANR	4202885	Identifier	r_cons_printf		4202617	0					
ANR	4202886	ArgumentList	""" %s"""		4202617	1					
ANR	4202887	Argument	""" %s"""		4202617	0					
ANR	4202888	PrimaryExpression	""" %s"""		4202617	0					
ANR	4202889	Argument	r		4202617	1					
ANR	4202890	Identifier	r		4202617	0					
ANR	4202891	ExpressionStatement	r_cons_strcat ( Color_RESET )	1966:3:59009:59036	4202617	12	True				
ANR	4202892	CallExpression	r_cons_strcat ( Color_RESET )		4202617	0					
ANR	4202893	Callee	r_cons_strcat		4202617	0					
ANR	4202894	Identifier	r_cons_strcat		4202617	0					
ANR	4202895	ArgumentList	Color_RESET		4202617	1					
ANR	4202896	Argument	Color_RESET		4202617	0					
ANR	4202897	Identifier	Color_RESET		4202617	0					
ANR	4202898	IdentifierDeclStatement	"char * rrstr = r_core_anal_hasrefs ( core , * addr , true ) ;"	1967:3:59041:59094	4202617	13	True				
ANR	4202899	IdentifierDecl	"* rrstr = r_core_anal_hasrefs ( core , * addr , true )"		4202617	0					
ANR	4202900	IdentifierDeclType	char *		4202617	0					
ANR	4202901	Identifier	rrstr		4202617	1					
ANR	4202902	AssignmentExpression	"* rrstr = r_core_anal_hasrefs ( core , * addr , true )"		4202617	2		=			
ANR	4202903	Identifier	rrstr		4202617	0					
ANR	4202904	CallExpression	"r_core_anal_hasrefs ( core , * addr , true )"		4202617	1					
ANR	4202905	Callee	r_core_anal_hasrefs		4202617	0					
ANR	4202906	Identifier	r_core_anal_hasrefs		4202617	0					
ANR	4202907	ArgumentList	core		4202617	1					
ANR	4202908	Argument	core		4202617	0					
ANR	4202909	Identifier	core		4202617	0					
ANR	4202910	Argument	* addr		4202617	1					
ANR	4202911	UnaryOperationExpression	* addr		4202617	0					
ANR	4202912	UnaryOperator	*		4202617	0					
ANR	4202913	Identifier	addr		4202617	1					
ANR	4202914	Argument	true		4202617	2					
ANR	4202915	Identifier	true		4202617	0					
ANR	4202916	IfStatement	"if ( rrstr && * rrstr && strchr ( rrstr , 'R' ) )"		4202617	14					
ANR	4202917	Condition	"rrstr && * rrstr && strchr ( rrstr , 'R' )"	1968:7:59103:59140	4202617	0	True				
ANR	4202918	AndExpression	"rrstr && * rrstr && strchr ( rrstr , 'R' )"		4202617	0		&&			
ANR	4202919	Identifier	rrstr		4202617	0					
ANR	4202920	AndExpression	"* rrstr && strchr ( rrstr , 'R' )"		4202617	1		&&			
ANR	4202921	UnaryOperationExpression	* rrstr		4202617	0					
ANR	4202922	UnaryOperator	*		4202617	0					
ANR	4202923	Identifier	rrstr		4202617	1					
ANR	4202924	CallExpression	"strchr ( rrstr , 'R' )"		4202617	1					
ANR	4202925	Callee	strchr		4202617	0					
ANR	4202926	Identifier	strchr		4202617	0					
ANR	4202927	ArgumentList	rrstr		4202617	1					
ANR	4202928	Argument	rrstr		4202617	0					
ANR	4202929	Identifier	rrstr		4202617	0					
ANR	4202930	Argument	'R'		4202617	1					
ANR	4202931	PrimaryExpression	'R'		4202617	0					
ANR	4202932	CompoundStatement		42:47:1078:1078	4202617	1					
ANR	4202933	Statement	r_cons_printf	1969:4:59149:59161	4202617	0	True				
ANR	4202934	Statement	(	1969:18:59163:59163	4202617	1	True				
ANR	4202935	Statement	"""    ;%s"""	1969:19:59164:59172	4202617	2	True				
ANR	4202936	Statement	Color_RESET	1969:28:59173:59183	4202617	3	True				
ANR	4202937	Statement	","	1969:39:59184:59184	4202617	4	True				
ANR	4202938	Statement	rrstr	1969:41:59186:59190	4202617	5	True				
ANR	4202939	Statement	)	1969:46:59191:59191	4202617	6	True				
ANR	4202940	ExpressionStatement		1969:47:59192:59192	4202617	7	True				
ANR	4202941	ExpressionStatement	r_cons_newline ( )	1971:3:59202:59219	4202617	15	True				
ANR	4202942	CallExpression	r_cons_newline ( )		4202617	0					
ANR	4202943	Callee	r_cons_newline		4202617	0					
ANR	4202944	Identifier	r_cons_newline		4202617	0					
ANR	4202945	ArgumentList			4202617	1					
ANR	4202946	ExpressionStatement	r_list_free ( sorted )	1974:1:59230:59250	4202617	25	True				
ANR	4202947	CallExpression	r_list_free ( sorted )		4202617	0					
ANR	4202948	Callee	r_list_free		4202617	0					
ANR	4202949	Identifier	r_list_free		4202617	0					
ANR	4202950	ArgumentList	sorted		4202617	1					
ANR	4202951	Argument	sorted		4202617	0					
ANR	4202952	Identifier	sorted		4202617	0					
ANR	4202953	ExpressionStatement	ht_up_free ( db )	1975:1:59253:59268	4202617	26	True				
ANR	4202954	CallExpression	ht_up_free ( db )		4202617	0					
ANR	4202955	Callee	ht_up_free		4202617	0					
ANR	4202956	Identifier	ht_up_free		4202617	0					
ANR	4202957	ArgumentList	db		4202617	1					
ANR	4202958	Argument	db		4202617	0					
ANR	4202959	Identifier	db		4202617	0					
ANR	4202960	ReturnType	R_API void		4202617	1					
ANR	4202961	Identifier	r_core_debug_ri		4202617	2					
ANR	4202962	ParameterList	"RCore * core , RReg * reg , int mode"		4202617	3					
ANR	4202963	Parameter	RCore * core	1927:27:58030:58040	4202617	0	True				
ANR	4202964	ParameterType	RCore *		4202617	0					
ANR	4202965	Identifier	core		4202617	1					
ANR	4202966	Parameter	RReg * reg	1927:40:58043:58051	4202617	1	True				
ANR	4202967	ParameterType	RReg *		4202617	0					
ANR	4202968	Identifier	reg		4202617	1					
ANR	4202969	Parameter	int mode	1927:51:58054:58061	4202617	2	True				
ANR	4202970	ParameterType	int		4202617	0					
ANR	4202971	Identifier	mode		4202617	1					
ANR	4202972	CFGEntryNode	ENTRY		4202617		True				
ANR	4202973	CFGExitNode	EXIT		4202617		True				
ANR	4202974	CFGErrorNode	ERROR		4202617		True				
ANR	4202975	Symbol	ht_up_find		4202617						
ANR	4202976	Symbol	regcb		4202617						
ANR	4202977	Symbol	* map		4202617						
ANR	4202978	Symbol	* core		4202617						
ANR	4202979	Symbol	core -> assembler -> bits		4202617						
ANR	4202980	Symbol	Color_RESET		4202617						
ANR	4202981	Symbol	core -> assembler		4202617						
ANR	4202982	Symbol	strchr		4202617						
ANR	4202983	Symbol	rrstr		4202617						
ANR	4202984	Symbol	mode		4202617						
ANR	4202985	Symbol	* core -> assembler		4202617						
ANR	4202986	Symbol	rwx		4202617						
ANR	4202987	Symbol	reg		4202617						
ANR	4202988	Symbol	r_debug_map_get		4202617						
ANR	4202989	Symbol	free		4202617						
ANR	4202990	Symbol	addr		4202617						
ANR	4202991	Symbol	value		4202617						
ANR	4202992	Symbol	map		4202617						
ANR	4202993	Symbol	r_str_rwx_i		4202617						
ANR	4202994	Symbol	R_REG_TYPE_GPR		4202617						
ANR	4202995	Symbol	* * core		4202617						
ANR	4202996	Symbol	r_reg_get_value		4202617						
ANR	4202997	Symbol	NULL		4202617						
ANR	4202998	Symbol	Color_YELLOW		4202617						
ANR	4202999	Symbol	r_list_newf		4202617						
ANR	4203000	Symbol	r_reg_get_list		4202617						
ANR	4203001	Symbol	* rrstr		4202617						
ANR	4203002	Symbol	iter		4202617						
ANR	4203003	Symbol	list		4202617						
ANR	4203004	Symbol	ht_up_new0		4202617						
ANR	4203005	Symbol	r_core_anal_hasrefs		4202617						
ANR	4203006	Symbol	core		4202617						
ANR	4203007	Symbol	r		4202617						
ANR	4203008	Symbol	sorted		4202617						
ANR	4203009	Symbol	r -> name		4202617						
ANR	4203010	Symbol	true		4202617						
ANR	4203011	Symbol	* addr		4202617						
ANR	4203012	Symbol	* r		4202617						
ANR	4203013	Symbol	map -> perm		4202617						
ANR	4203014	Symbol	db		4202617						
ANR	4203015	Symbol	r -> size		4202617						
ANR	4203016	Symbol	core -> dbg		4202617						
ANR	4203017	Function	r_core_debug_rr	1978:0:59273:61685							
ANR	4203018	FunctionDef	"r_core_debug_rr (RCore * core , RReg * reg , int mode)"		4203017	0					
ANR	4203019	CompoundStatement		1978:61:59334:61685	4203017	0					
ANR	4203020	IdentifierDeclStatement	"char * use_color , * color = """" ;"	1979:1:59337:59365	4203017	0	True				
ANR	4203021	IdentifierDecl	* use_color		4203017	0					
ANR	4203022	IdentifierDeclType	char *		4203017	0					
ANR	4203023	Identifier	use_color		4203017	1					
ANR	4203024	IdentifierDecl	"* color = """""		4203017	1					
ANR	4203025	IdentifierDeclType	char *		4203017	0					
ANR	4203026	Identifier	color		4203017	1					
ANR	4203027	AssignmentExpression	"* color = """""		4203017	2		=			
ANR	4203028	Identifier	color		4203017	0					
ANR	4203029	PrimaryExpression	""""""		4203017	1					
ANR	4203030	IdentifierDeclStatement	"int use_colors = r_config_get_i ( core -> config , ""scr.color"" ) ;"	1980:1:59368:59427	4203017	1	True				
ANR	4203031	IdentifierDecl	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		4203017	0					
ANR	4203032	IdentifierDeclType	int		4203017	0					
ANR	4203033	Identifier	use_colors		4203017	1					
ANR	4203034	AssignmentExpression	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		4203017	2		=			
ANR	4203035	Identifier	use_colors		4203017	0					
ANR	4203036	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4203017	1					
ANR	4203037	Callee	r_config_get_i		4203017	0					
ANR	4203038	Identifier	r_config_get_i		4203017	0					
ANR	4203039	ArgumentList	core -> config		4203017	1					
ANR	4203040	Argument	core -> config		4203017	0					
ANR	4203041	PtrMemberAccess	core -> config		4203017	0					
ANR	4203042	Identifier	core		4203017	0					
ANR	4203043	Identifier	config		4203017	1					
ANR	4203044	Argument	"""scr.color"""		4203017	1					
ANR	4203045	PrimaryExpression	"""scr.color"""		4203017	0					
ANR	4203046	IdentifierDeclStatement	int delta = 0 ;	1981:1:59430:59443	4203017	2	True				
ANR	4203047	IdentifierDecl	delta = 0		4203017	0					
ANR	4203048	IdentifierDeclType	int		4203017	0					
ANR	4203049	Identifier	delta		4203017	1					
ANR	4203050	AssignmentExpression	delta = 0		4203017	2		=			
ANR	4203051	Identifier	delta		4203017	0					
ANR	4203052	PrimaryExpression	0		4203017	1					
ANR	4203053	IdentifierDeclStatement	"ut64 diff , value ;"	1982:1:59446:59462	4203017	3	True				
ANR	4203054	IdentifierDecl	diff		4203017	0					
ANR	4203055	IdentifierDeclType	ut64		4203017	0					
ANR	4203056	Identifier	diff		4203017	1					
ANR	4203057	IdentifierDecl	value		4203017	1					
ANR	4203058	IdentifierDeclType	ut64		4203017	0					
ANR	4203059	Identifier	value		4203017	1					
ANR	4203060	IdentifierDeclStatement	int bits = core -> assembler -> bits ;	1983:1:59465:59497	4203017	4	True				
ANR	4203061	IdentifierDecl	bits = core -> assembler -> bits		4203017	0					
ANR	4203062	IdentifierDeclType	int		4203017	0					
ANR	4203063	Identifier	bits		4203017	1					
ANR	4203064	AssignmentExpression	bits = core -> assembler -> bits		4203017	2		=			
ANR	4203065	Identifier	bits		4203017	0					
ANR	4203066	PtrMemberAccess	core -> assembler -> bits		4203017	1					
ANR	4203067	PtrMemberAccess	core -> assembler		4203017	0					
ANR	4203068	Identifier	core		4203017	0					
ANR	4203069	Identifier	assembler		4203017	1					
ANR	4203070	Identifier	bits		4203017	1					
ANR	4203071	IdentifierDeclStatement	"RList * list = r_reg_get_list ( reg , R_REG_TYPE_GPR ) ;"	1984:1:59500:59550	4203017	5	True				
ANR	4203072	IdentifierDecl	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		4203017	0					
ANR	4203073	IdentifierDeclType	RList *		4203017	0					
ANR	4203074	Identifier	list		4203017	1					
ANR	4203075	AssignmentExpression	"* list = r_reg_get_list ( reg , R_REG_TYPE_GPR )"		4203017	2		=			
ANR	4203076	Identifier	list		4203017	0					
ANR	4203077	CallExpression	"r_reg_get_list ( reg , R_REG_TYPE_GPR )"		4203017	1					
ANR	4203078	Callee	r_reg_get_list		4203017	0					
ANR	4203079	Identifier	r_reg_get_list		4203017	0					
ANR	4203080	ArgumentList	reg		4203017	1					
ANR	4203081	Argument	reg		4203017	0					
ANR	4203082	Identifier	reg		4203017	0					
ANR	4203083	Argument	R_REG_TYPE_GPR		4203017	1					
ANR	4203084	Identifier	R_REG_TYPE_GPR		4203017	0					
ANR	4203085	IdentifierDeclStatement	RListIter * iter ;	1985:1:59553:59568	4203017	6	True				
ANR	4203086	IdentifierDecl	* iter		4203017	0					
ANR	4203087	IdentifierDeclType	RListIter *		4203017	0					
ANR	4203088	Identifier	iter		4203017	1					
ANR	4203089	IdentifierDeclStatement	RRegItem * r ;	1986:1:59571:59582	4203017	7	True				
ANR	4203090	IdentifierDecl	* r		4203017	0					
ANR	4203091	IdentifierDeclType	RRegItem *		4203017	0					
ANR	4203092	Identifier	r		4203017	1					
ANR	4203093	IfStatement	if ( use_colors )		4203017	8					
ANR	4203094	Condition	use_colors	1987:5:59589:59598	4203017	0	True				
ANR	4203095	Identifier	use_colors		4203017	0					
ANR	4203096	CompoundStatement		10:17:266:266	4203017	1					
ANR	4203097	Statement	undef	1988:1:59604:59608	4203017	0	True				
ANR	4203098	Statement	ConsP	1988:7:59610:59614	4203017	1	True				
ANR	4203099	Statement	define	1989:1:59617:59622	4203017	2	True				
ANR	4203100	Statement	ConsP	1989:8:59624:59628	4203017	3	True				
ANR	4203101	Statement	(	1989:13:59629:59629	4203017	4	True				
ANR	4203102	Statement	x	1989:14:59630:59630	4203017	5	True				
ANR	4203103	Statement	)	1989:15:59631:59631	4203017	6	True				
ANR	4203104	Statement	(	1989:17:59633:59633	4203017	7	True				
ANR	4203105	Statement	core	1989:18:59634:59637	4203017	8	True				
ANR	4203106	Statement	->	1989:22:59638:59639	4203017	9	True				
ANR	4203107	Statement	cons	1989:24:59640:59643	4203017	10	True				
ANR	4203108	Statement	&&	1989:29:59645:59646	4203017	11	True				
ANR	4203109	Statement	core	1989:32:59648:59651	4203017	12	True				
ANR	4203110	Statement	->	1989:36:59652:59653	4203017	13	True				
ANR	4203111	Statement	cons	1989:38:59654:59657	4203017	14	True				
ANR	4203112	Statement	->	1989:42:59658:59659	4203017	15	True				
ANR	4203113	Statement	context	1989:44:59660:59666	4203017	16	True				
ANR	4203114	Statement	->	1989:51:59667:59668	4203017	17	True				
ANR	4203115	Statement	pal	1989:53:59669:59671	4203017	18	True				
ANR	4203116	Statement	.	1989:56:59672:59672	4203017	19	True				
ANR	4203117	Statement	x	1989:57:59673:59673	4203017	20	True				
ANR	4203118	Statement	)	1989:58:59674:59674	4203017	21	True				
ANR	4203119	Statement	?	1989:59:59675:59675	4203017	22	True				
ANR	4203120	Statement	core	1989:61:59677:59680	4203017	23	True				
ANR	4203121	Statement	->	1989:65:59681:59682	4203017	24	True				
ANR	4203122	Statement	cons	1989:67:59683:59686	4203017	25	True				
ANR	4203123	Statement	->	1989:71:59687:59688	4203017	26	True				
ANR	4203124	Statement	context	1989:73:59689:59695	4203017	27	True				
ANR	4203125	Statement	->	1989:80:59696:59697	4203017	28	True				
ANR	4203126	Statement	pal	1989:82:59698:59700	4203017	29	True				
ANR	4203127	Statement	.	1989:85:59701:59701	4203017	30	True				
ANR	4203128	Statement	x	1989:86:59702:59702	4203017	31	True				
ANR	4203129	Statement	use_color	1990:2:59706:59714	4203017	32	True				
ANR	4203130	Statement	=	1990:12:59716:59716	4203017	33	True				
ANR	4203131	Statement	ConsP	1990:14:59718:59722	4203017	34	True				
ANR	4203132	Statement	(	1990:19:59723:59723	4203017	35	True				
ANR	4203133	Statement	creg	1990:20:59724:59727	4203017	36	True				
ANR	4203134	Statement	)	1990:24:59728:59728	4203017	37	True				
ANR	4203135	Statement	:	1990:25:59729:59729	4203017	38	True				
ANR	4203136	ExpressionStatement	Color_BWHITE	1990:27:59731:59743	4203017	39	True				
ANR	4203137	Identifier	Color_BWHITE		4203017	0					
ANR	4203138	ElseStatement	else		4203017	0					
ANR	4203139	CompoundStatement		14:8:418:418	4203017	0					
ANR	4203140	ExpressionStatement	use_color = NULL	1992:2:59757:59773	4203017	0	True				
ANR	4203141	AssignmentExpression	use_color = NULL		4203017	0		=			
ANR	4203142	Identifier	use_color		4203017	0					
ANR	4203143	Identifier	NULL		4203017	1					
ANR	4203144	IfStatement	if ( mode == 'j' )		4203017	9					
ANR	4203145	Condition	mode == 'j'	1995:5:59816:59826	4203017	0	True				
ANR	4203146	EqualityExpression	mode == 'j'		4203017	0		==			
ANR	4203147	Identifier	mode		4203017	0					
ANR	4203148	PrimaryExpression	'j'		4203017	1					
ANR	4203149	CompoundStatement		18:18:494:494	4203017	1					
ANR	4203150	ExpressionStatement	"r_cons_printf ( ""["" )"	1996:2:59833:59852	4203017	0	True				
ANR	4203151	CallExpression	"r_cons_printf ( ""["" )"		4203017	0					
ANR	4203152	Callee	r_cons_printf		4203017	0					
ANR	4203153	Identifier	r_cons_printf		4203017	0					
ANR	4203154	ArgumentList	"""["""		4203017	1					
ANR	4203155	Argument	"""["""		4203017	0					
ANR	4203156	PrimaryExpression	"""["""		4203017	0					
ANR	4203157	Statement	r_list_foreach	1998:1:59858:59871	4203017	10	True				
ANR	4203158	Statement	(	1998:16:59873:59873	4203017	11	True				
ANR	4203159	Statement	list	1998:17:59874:59877	4203017	12	True				
ANR	4203160	Statement	","	1998:21:59878:59878	4203017	13	True				
ANR	4203161	Statement	iter	1998:23:59880:59883	4203017	14	True				
ANR	4203162	Statement	","	1998:27:59884:59884	4203017	15	True				
ANR	4203163	Statement	r	1998:29:59886:59886	4203017	16	True				
ANR	4203164	Statement	)	1998:30:59887:59887	4203017	17	True				
ANR	4203165	CompoundStatement		29:2:737:758	4203017	18					
ANR	4203166	IdentifierDeclStatement	char * tmp = NULL ;	1999:2:59893:59909	4203017	0	True				
ANR	4203167	IdentifierDecl	* tmp = NULL		4203017	0					
ANR	4203168	IdentifierDeclType	char *		4203017	0					
ANR	4203169	Identifier	tmp		4203017	1					
ANR	4203170	AssignmentExpression	* tmp = NULL		4203017	2		=			
ANR	4203171	Identifier	NULL		4203017	0					
ANR	4203172	Identifier	NULL		4203017	1					
ANR	4203173	IfStatement	if ( r -> size != bits )		4203017	1					
ANR	4203174	Condition	r -> size != bits	2000:6:59917:59931	4203017	0	True				
ANR	4203175	EqualityExpression	r -> size != bits		4203017	0		!=			
ANR	4203176	PtrMemberAccess	r -> size		4203017	0					
ANR	4203177	Identifier	r		4203017	0					
ANR	4203178	Identifier	size		4203017	1					
ANR	4203179	Identifier	bits		4203017	1					
ANR	4203180	CompoundStatement		23:23:599:599	4203017	1					
ANR	4203181	ContinueStatement	continue ;	2001:3:59939:59947	4203017	0	True				
ANR	4203182	ExpressionStatement	"value = r_reg_get_value ( core -> dbg -> reg , r )"	2003:2:59955:59998	4203017	2	True				
ANR	4203183	AssignmentExpression	"value = r_reg_get_value ( core -> dbg -> reg , r )"		4203017	0		=			
ANR	4203184	Identifier	value		4203017	0					
ANR	4203185	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		4203017	1					
ANR	4203186	Callee	r_reg_get_value		4203017	0					
ANR	4203187	Identifier	r_reg_get_value		4203017	0					
ANR	4203188	ArgumentList	core -> dbg -> reg		4203017	1					
ANR	4203189	Argument	core -> dbg -> reg		4203017	0					
ANR	4203190	PtrMemberAccess	core -> dbg -> reg		4203017	0					
ANR	4203191	PtrMemberAccess	core -> dbg		4203017	0					
ANR	4203192	Identifier	core		4203017	0					
ANR	4203193	Identifier	dbg		4203017	1					
ANR	4203194	Identifier	reg		4203017	1					
ANR	4203195	Argument	r		4203017	1					
ANR	4203196	Identifier	r		4203017	0					
ANR	4203197	IdentifierDeclStatement	"char * rrstr = r_core_anal_hasrefs ( core , value , true ) ;"	2004:2:60002:60055	4203017	3	True				
ANR	4203198	IdentifierDecl	"* rrstr = r_core_anal_hasrefs ( core , value , true )"		4203017	0					
ANR	4203199	IdentifierDeclType	char *		4203017	0					
ANR	4203200	Identifier	rrstr		4203017	1					
ANR	4203201	AssignmentExpression	"* rrstr = r_core_anal_hasrefs ( core , value , true )"		4203017	2		=			
ANR	4203202	Identifier	rrstr		4203017	0					
ANR	4203203	CallExpression	"r_core_anal_hasrefs ( core , value , true )"		4203017	1					
ANR	4203204	Callee	r_core_anal_hasrefs		4203017	0					
ANR	4203205	Identifier	r_core_anal_hasrefs		4203017	0					
ANR	4203206	ArgumentList	core		4203017	1					
ANR	4203207	Argument	core		4203017	0					
ANR	4203208	Identifier	core		4203017	0					
ANR	4203209	Argument	value		4203017	1					
ANR	4203210	Identifier	value		4203017	0					
ANR	4203211	Argument	true		4203017	2					
ANR	4203212	Identifier	true		4203017	0					
ANR	4203213	ExpressionStatement	delta = 0	2005:2:60059:60068	4203017	4	True				
ANR	4203214	AssignmentExpression	delta = 0		4203017	0		=			
ANR	4203215	Identifier	delta		4203017	0					
ANR	4203216	PrimaryExpression	0		4203017	1					
ANR	4203217	IdentifierDeclStatement	int regSize = r -> size ;	2006:2:60072:60093	4203017	5	True				
ANR	4203218	IdentifierDecl	regSize = r -> size		4203017	0					
ANR	4203219	IdentifierDeclType	int		4203017	0					
ANR	4203220	Identifier	regSize		4203017	1					
ANR	4203221	AssignmentExpression	regSize = r -> size		4203017	2		=			
ANR	4203222	Identifier	regSize		4203017	0					
ANR	4203223	PtrMemberAccess	r -> size		4203017	1					
ANR	4203224	Identifier	r		4203017	0					
ANR	4203225	Identifier	size		4203017	1					
ANR	4203226	IfStatement	if ( regSize < 80 )		4203017	6					
ANR	4203227	Condition	regSize < 80	2007:6:60101:60112	4203017	0	True				
ANR	4203228	RelationalExpression	regSize < 80		4203017	0		<			
ANR	4203229	Identifier	regSize		4203017	0					
ANR	4203230	PrimaryExpression	80		4203017	1					
ANR	4203231	CompoundStatement		30:20:780:780	4203017	1					
ANR	4203232	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2008:3:60120:60160	4203017	0	True				
ANR	4203233	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		4203017	0					
ANR	4203234	Callee	r_reg_arena_swap		4203017	0					
ANR	4203235	Identifier	r_reg_arena_swap		4203017	0					
ANR	4203236	ArgumentList	core -> dbg -> reg		4203017	1					
ANR	4203237	Argument	core -> dbg -> reg		4203017	0					
ANR	4203238	PtrMemberAccess	core -> dbg -> reg		4203017	0					
ANR	4203239	PtrMemberAccess	core -> dbg		4203017	0					
ANR	4203240	Identifier	core		4203017	0					
ANR	4203241	Identifier	dbg		4203017	1					
ANR	4203242	Identifier	reg		4203017	1					
ANR	4203243	Argument	false		4203017	1					
ANR	4203244	Identifier	false		4203017	0					
ANR	4203245	ExpressionStatement	"diff = r_reg_get_value ( core -> dbg -> reg , r )"	2009:3:60165:60207	4203017	1	True				
ANR	4203246	AssignmentExpression	"diff = r_reg_get_value ( core -> dbg -> reg , r )"		4203017	0		=			
ANR	4203247	Identifier	diff		4203017	0					
ANR	4203248	CallExpression	"r_reg_get_value ( core -> dbg -> reg , r )"		4203017	1					
ANR	4203249	Callee	r_reg_get_value		4203017	0					
ANR	4203250	Identifier	r_reg_get_value		4203017	0					
ANR	4203251	ArgumentList	core -> dbg -> reg		4203017	1					
ANR	4203252	Argument	core -> dbg -> reg		4203017	0					
ANR	4203253	PtrMemberAccess	core -> dbg -> reg		4203017	0					
ANR	4203254	PtrMemberAccess	core -> dbg		4203017	0					
ANR	4203255	Identifier	core		4203017	0					
ANR	4203256	Identifier	dbg		4203017	1					
ANR	4203257	Identifier	reg		4203017	1					
ANR	4203258	Argument	r		4203017	1					
ANR	4203259	Identifier	r		4203017	0					
ANR	4203260	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2010:3:60212:60252	4203017	2	True				
ANR	4203261	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		4203017	0					
ANR	4203262	Callee	r_reg_arena_swap		4203017	0					
ANR	4203263	Identifier	r_reg_arena_swap		4203017	0					
ANR	4203264	ArgumentList	core -> dbg -> reg		4203017	1					
ANR	4203265	Argument	core -> dbg -> reg		4203017	0					
ANR	4203266	PtrMemberAccess	core -> dbg -> reg		4203017	0					
ANR	4203267	PtrMemberAccess	core -> dbg		4203017	0					
ANR	4203268	Identifier	core		4203017	0					
ANR	4203269	Identifier	dbg		4203017	1					
ANR	4203270	Identifier	reg		4203017	1					
ANR	4203271	Argument	false		4203017	1					
ANR	4203272	Identifier	false		4203017	0					
ANR	4203273	ExpressionStatement	delta = value - diff	2011:3:60257:60275	4203017	3	True				
ANR	4203274	AssignmentExpression	delta = value - diff		4203017	0		=			
ANR	4203275	Identifier	delta		4203017	0					
ANR	4203276	AdditiveExpression	value - diff		4203017	1		-			
ANR	4203277	Identifier	value		4203017	0					
ANR	4203278	Identifier	diff		4203017	1					
ANR	4203279	IfStatement	if ( delta && use_color )		4203017	7					
ANR	4203280	Condition	delta && use_color	2013:5:60286:60303	4203017	0	True				
ANR	4203281	AndExpression	delta && use_color		4203017	0		&&			
ANR	4203282	Identifier	delta		4203017	0					
ANR	4203283	Identifier	use_color		4203017	1					
ANR	4203284	CompoundStatement		36:24:970:970	4203017	1					
ANR	4203285	ExpressionStatement	color = use_color	2014:3:60310:60327	4203017	0	True				
ANR	4203286	AssignmentExpression	color = use_color		4203017	0		=			
ANR	4203287	Identifier	color		4203017	0					
ANR	4203288	Identifier	use_color		4203017	1					
ANR	4203289	ElseStatement	else		4203017	0					
ANR	4203290	CompoundStatement		38:9:1003:1003	4203017	0					
ANR	4203291	ExpressionStatement	"color = """""	2016:3:60343:60353	4203017	0	True				
ANR	4203292	AssignmentExpression	"color = """""		4203017	0		=			
ANR	4203293	Identifier	color		4203017	0					
ANR	4203294	PrimaryExpression	""""""		4203017	1					
ANR	4203295	SwitchStatement	switch ( mode )		4203017	8					
ANR	4203296	Condition	mode	2018:10:60369:60372	4203017	0	True				
ANR	4203297	Identifier	mode		4203017	0					
ANR	4203298	CompoundStatement		41:16:1040:1040	4203017	1					
ANR	4203299	Label	case 'j' :	2019:2:60379:60387	4203017	0	True				
ANR	4203300	IfStatement	if ( r -> flags )		4203017	1					
ANR	4203301	Condition	r -> flags	2020:7:60396:60403	4203017	0	True				
ANR	4203302	PtrMemberAccess	r -> flags		4203017	0					
ANR	4203303	Identifier	r		4203017	0					
ANR	4203304	Identifier	flags		4203017	1					
ANR	4203305	CompoundStatement		43:17:1071:1071	4203017	1					
ANR	4203306	ExpressionStatement	"tmp = r_reg_get_bvalue ( reg , r )"	2021:4:60412:60443	4203017	0	True				
ANR	4203307	AssignmentExpression	"tmp = r_reg_get_bvalue ( reg , r )"		4203017	0		=			
ANR	4203308	Identifier	tmp		4203017	0					
ANR	4203309	CallExpression	"r_reg_get_bvalue ( reg , r )"		4203017	1					
ANR	4203310	Callee	r_reg_get_bvalue		4203017	0					
ANR	4203311	Identifier	r_reg_get_bvalue		4203017	0					
ANR	4203312	ArgumentList	reg		4203017	1					
ANR	4203313	Argument	reg		4203017	0					
ANR	4203314	Identifier	reg		4203017	0					
ANR	4203315	Argument	r		4203017	1					
ANR	4203316	Identifier	r		4203017	0					
ANR	4203317	ExpressionStatement	"r_cons_printf ( ""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""" , iter -> p ? "","" : """" , r -> name , tmp )"	2022:4:60449:60531	4203017	1	True				
ANR	4203318	CallExpression	"r_cons_printf ( ""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""" , iter -> p ? "","" : """" , r -> name , tmp )"		4203017	0					
ANR	4203319	Callee	r_cons_printf		4203017	0					
ANR	4203320	Identifier	r_cons_printf		4203017	0					
ANR	4203321	ArgumentList	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""""		4203017	1					
ANR	4203322	Argument	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""""		4203017	0					
ANR	4203323	PrimaryExpression	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""%s\\"""""		4203017	0					
ANR	4203324	Argument	"iter -> p ? "","" : """""		4203017	1					
ANR	4203325	ConditionalExpression	"iter -> p ? "","" : """""		4203017	0					
ANR	4203326	Condition	iter -> p		4203017	0					
ANR	4203327	PtrMemberAccess	iter -> p		4203017	0					
ANR	4203328	Identifier	iter		4203017	0					
ANR	4203329	Identifier	p		4203017	1					
ANR	4203330	PrimaryExpression	""","""		4203017	1					
ANR	4203331	PrimaryExpression	""""""		4203017	2					
ANR	4203332	Argument	r -> name		4203017	2					
ANR	4203333	PtrMemberAccess	r -> name		4203017	0					
ANR	4203334	Identifier	r		4203017	0					
ANR	4203335	Identifier	name		4203017	1					
ANR	4203336	Argument	tmp		4203017	3					
ANR	4203337	Identifier	tmp		4203017	0					
ANR	4203338	ElseStatement	else		4203017	0					
ANR	4203339	CompoundStatement		46:10:1208:1208	4203017	0					
ANR	4203340	Statement	r_cons_printf	2024:4:60549:60561	4203017	0	True				
ANR	4203341	Statement	(	2024:18:60563:60563	4203017	1	True				
ANR	4203342	Statement	"""%s{\\""reg\\"":\\""%s\\"",\\""value\\"":\\""0x%"""	2024:19:60564:60598	4203017	2	True				
ANR	4203343	Statement	PFMT64x	2024:54:60599:60605	4203017	3	True				
ANR	4203344	Statement	"""\\"""""	2024:61:60606:60609	4203017	4	True				
ANR	4203345	Statement	","	2024:65:60610:60610	4203017	5	True				
ANR	4203346	Statement	iter	2024:67:60612:60615	4203017	6	True				
ANR	4203347	Statement	->	2024:71:60616:60617	4203017	7	True				
ANR	4203348	Statement	p	2024:73:60618:60618	4203017	8	True				
ANR	4203349	Statement	?	2024:74:60619:60619	4203017	9	True				
ANR	4203350	Statement	""","""	2024:75:60620:60622	4203017	10	True				
ANR	4203351	Statement	:	2024:78:60623:60623	4203017	11	True				
ANR	4203352	Statement	""""""	2024:79:60624:60625	4203017	12	True				
ANR	4203353	Statement	","	2024:81:60626:60626	4203017	13	True				
ANR	4203354	Statement	r	2024:83:60628:60628	4203017	14	True				
ANR	4203355	Statement	->	2024:84:60629:60630	4203017	15	True				
ANR	4203356	Statement	name	2024:86:60631:60634	4203017	16	True				
ANR	4203357	Statement	","	2024:90:60635:60635	4203017	17	True				
ANR	4203358	Statement	value	2024:92:60637:60641	4203017	18	True				
ANR	4203359	Statement	)	2024:97:60642:60642	4203017	19	True				
ANR	4203360	ExpressionStatement		2024:98:60643:60643	4203017	20	True				
ANR	4203361	BreakStatement	break ;	2026:3:60653:60658	4203017	2	True				
ANR	4203362	Label	default :	2027:2:60662:60669	4203017	3	True				
ANR	4203363	Identifier	default		4203017	0					
ANR	4203364	CompoundStatement		53:4:1371:1376	4203017	4					
ANR	4203365	IdentifierDeclStatement	"const char * arg = """" ;"	2029:4:60680:60700	4203017	0	True				
ANR	4203366	IdentifierDecl	"* arg = """""		4203017	0					
ANR	4203367	IdentifierDeclType	const char *		4203017	0					
ANR	4203368	Identifier	arg		4203017	1					
ANR	4203369	AssignmentExpression	"* arg = """""		4203017	2		=			
ANR	4203370	Identifier	arg		4203017	0					
ANR	4203371	PrimaryExpression	""""""		4203017	1					
ANR	4203372	IdentifierDeclStatement	int i ;	2030:4:60706:60711	4203017	1	True				
ANR	4203373	IdentifierDecl	i		4203017	0					
ANR	4203374	IdentifierDeclType	int		4203017	0					
ANR	4203375	Identifier	i		4203017	1					
ANR	4203376	ForStatement	for ( i = 0 ; i < R_REG_NAME_LAST ; i ++ )		4203017	2					
ANR	4203377	ForInit	i = 0 ;	2031:9:60722:60727	4203017	0	True				
ANR	4203378	AssignmentExpression	i = 0		4203017	0		=			
ANR	4203379	Identifier	i		4203017	0					
ANR	4203380	PrimaryExpression	0		4203017	1					
ANR	4203381	Condition	i < R_REG_NAME_LAST	2031:16:60729:60747	4203017	1	True				
ANR	4203382	RelationalExpression	i < R_REG_NAME_LAST		4203017	0		<			
ANR	4203383	Identifier	i		4203017	0					
ANR	4203384	Identifier	R_REG_NAME_LAST		4203017	1					
ANR	4203385	PostIncDecOperationExpression	i ++	2031:37:60750:60752	4203017	2	True				
ANR	4203386	Identifier	i		4203017	0					
ANR	4203387	IncDec	++		4203017	1					
ANR	4203388	CompoundStatement		55:5:1427:1466	4203017	3					
ANR	4203389	IdentifierDeclStatement	"const char * t = r_reg_get_name ( reg , i ) ;"	2032:5:60762:60801	4203017	0	True				
ANR	4203390	IdentifierDecl	"* t = r_reg_get_name ( reg , i )"		4203017	0					
ANR	4203391	IdentifierDeclType	const char *		4203017	0					
ANR	4203392	Identifier	t		4203017	1					
ANR	4203393	AssignmentExpression	"* t = r_reg_get_name ( reg , i )"		4203017	2		=			
ANR	4203394	Identifier	t		4203017	0					
ANR	4203395	CallExpression	"r_reg_get_name ( reg , i )"		4203017	1					
ANR	4203396	Callee	r_reg_get_name		4203017	0					
ANR	4203397	Identifier	r_reg_get_name		4203017	0					
ANR	4203398	ArgumentList	reg		4203017	1					
ANR	4203399	Argument	reg		4203017	0					
ANR	4203400	Identifier	reg		4203017	0					
ANR	4203401	Argument	i		4203017	1					
ANR	4203402	Identifier	i		4203017	0					
ANR	4203403	IfStatement	"if ( t && ! strcmp ( t , r -> name ) )"		4203017	1					
ANR	4203404	Condition	"t && ! strcmp ( t , r -> name )"	2033:9:60812:60836	4203017	0	True				
ANR	4203405	AndExpression	"t && ! strcmp ( t , r -> name )"		4203017	0		&&			
ANR	4203406	Identifier	t		4203017	0					
ANR	4203407	UnaryOperationExpression	"! strcmp ( t , r -> name )"		4203017	1					
ANR	4203408	UnaryOperator	!		4203017	0					
ANR	4203409	CallExpression	"strcmp ( t , r -> name )"		4203017	1					
ANR	4203410	Callee	strcmp		4203017	0					
ANR	4203411	Identifier	strcmp		4203017	0					
ANR	4203412	ArgumentList	t		4203017	1					
ANR	4203413	Argument	t		4203017	0					
ANR	4203414	Identifier	t		4203017	0					
ANR	4203415	Argument	r -> name		4203017	1					
ANR	4203416	PtrMemberAccess	r -> name		4203017	0					
ANR	4203417	Identifier	r		4203017	0					
ANR	4203418	Identifier	name		4203017	1					
ANR	4203419	CompoundStatement		56:36:1504:1504	4203017	1					
ANR	4203420	ExpressionStatement	arg = r_reg_get_role ( i )	2034:6:60847:60871	4203017	0	True				
ANR	4203421	AssignmentExpression	arg = r_reg_get_role ( i )		4203017	0		=			
ANR	4203422	Identifier	arg		4203017	0					
ANR	4203423	CallExpression	r_reg_get_role ( i )		4203017	1					
ANR	4203424	Callee	r_reg_get_role		4203017	0					
ANR	4203425	Identifier	r_reg_get_role		4203017	0					
ANR	4203426	ArgumentList	i		4203017	1					
ANR	4203427	Argument	i		4203017	0					
ANR	4203428	Identifier	i		4203017	0					
ANR	4203429	ExpressionStatement	"r_cons_printf ( ""%3s"" , arg )"	2037:4:60890:60916	4203017	3	True				
ANR	4203430	CallExpression	"r_cons_printf ( ""%3s"" , arg )"		4203017	0					
ANR	4203431	Callee	r_cons_printf		4203017	0					
ANR	4203432	Identifier	r_cons_printf		4203017	0					
ANR	4203433	ArgumentList	"""%3s"""		4203017	1					
ANR	4203434	Argument	"""%3s"""		4203017	0					
ANR	4203435	PrimaryExpression	"""%3s"""		4203017	0					
ANR	4203436	Argument	arg		4203017	1					
ANR	4203437	Identifier	arg		4203017	0					
ANR	4203438	IfStatement	if ( bits == 64 )		4203017	5					
ANR	4203439	Condition	bits == 64	2039:7:60930:60939	4203017	0	True				
ANR	4203440	EqualityExpression	bits == 64		4203017	0		==			
ANR	4203441	Identifier	bits		4203017	0					
ANR	4203442	PrimaryExpression	64		4203017	1					
ANR	4203443	CompoundStatement		62:19:1607:1607	4203017	1					
ANR	4203444	IfStatement	if ( r -> flags )		4203017	0					
ANR	4203445	Condition	r -> flags	2040:8:60952:60959	4203017	0	True				
ANR	4203446	PtrMemberAccess	r -> flags		4203017	0					
ANR	4203447	Identifier	r		4203017	0					
ANR	4203448	Identifier	flags		4203017	1					
ANR	4203449	CompoundStatement		63:18:1627:1627	4203017	1					
ANR	4203450	ExpressionStatement	"tmp = r_reg_get_bvalue ( reg , r )"	2041:5:60969:61000	4203017	0	True				
ANR	4203451	AssignmentExpression	"tmp = r_reg_get_bvalue ( reg , r )"		4203017	0		=			
ANR	4203452	Identifier	tmp		4203017	0					
ANR	4203453	CallExpression	"r_reg_get_bvalue ( reg , r )"		4203017	1					
ANR	4203454	Callee	r_reg_get_bvalue		4203017	0					
ANR	4203455	Identifier	r_reg_get_bvalue		4203017	0					
ANR	4203456	ArgumentList	reg		4203017	1					
ANR	4203457	Argument	reg		4203017	0					
ANR	4203458	Identifier	reg		4203017	0					
ANR	4203459	Argument	r		4203017	1					
ANR	4203460	Identifier	r		4203017	0					
ANR	4203461	ExpressionStatement	"r_cons_printf ( ""%s%6s %-18s%s"" , color , r -> name , tmp , Color_RESET )"	2042:5:61007:61072	4203017	1	True				
ANR	4203462	CallExpression	"r_cons_printf ( ""%s%6s %-18s%s"" , color , r -> name , tmp , Color_RESET )"		4203017	0					
ANR	4203463	Callee	r_cons_printf		4203017	0					
ANR	4203464	Identifier	r_cons_printf		4203017	0					
ANR	4203465	ArgumentList	"""%s%6s %-18s%s"""		4203017	1					
ANR	4203466	Argument	"""%s%6s %-18s%s"""		4203017	0					
ANR	4203467	PrimaryExpression	"""%s%6s %-18s%s"""		4203017	0					
ANR	4203468	Argument	color		4203017	1					
ANR	4203469	Identifier	color		4203017	0					
ANR	4203470	Argument	r -> name		4203017	2					
ANR	4203471	PtrMemberAccess	r -> name		4203017	0					
ANR	4203472	Identifier	r		4203017	0					
ANR	4203473	Identifier	name		4203017	1					
ANR	4203474	Argument	tmp		4203017	3					
ANR	4203475	Identifier	tmp		4203017	0					
ANR	4203476	Argument	Color_RESET		4203017	4					
ANR	4203477	Identifier	Color_RESET		4203017	0					
ANR	4203478	ElseStatement	else		4203017	0					
ANR	4203479	CompoundStatement		66:11:1750:1750	4203017	0					
ANR	4203480	Statement	r_cons_printf	2044:5:61092:61104	4203017	0	True				
ANR	4203481	Statement	(	2044:19:61106:61106	4203017	1	True				
ANR	4203482	Statement	"""%s%6s 0x%-16"""	2044:20:61107:61120	4203017	2	True				
ANR	4203483	Statement	PFMT64x	2044:34:61121:61127	4203017	3	True				
ANR	4203484	Statement	"""%s"""	2044:41:61128:61131	4203017	4	True				
ANR	4203485	Statement	","	2044:45:61132:61132	4203017	5	True				
ANR	4203486	Statement	color	2044:47:61134:61138	4203017	6	True				
ANR	4203487	Statement	","	2044:52:61139:61139	4203017	7	True				
ANR	4203488	Statement	r	2044:54:61141:61141	4203017	8	True				
ANR	4203489	Statement	->	2044:55:61142:61143	4203017	9	True				
ANR	4203490	Statement	name	2044:57:61144:61147	4203017	10	True				
ANR	4203491	Statement	","	2044:61:61148:61148	4203017	11	True				
ANR	4203492	Statement	value	2044:63:61150:61154	4203017	12	True				
ANR	4203493	Statement	","	2044:68:61155:61155	4203017	13	True				
ANR	4203494	Statement	Color_RESET	2044:70:61157:61167	4203017	14	True				
ANR	4203495	Statement	)	2044:81:61168:61168	4203017	15	True				
ANR	4203496	ExpressionStatement		2044:82:61169:61169	4203017	16	True				
ANR	4203497	ElseStatement	else		4203017	0					
ANR	4203498	CompoundStatement		69:10:1852:1852	4203017	0					
ANR	4203499	IfStatement	if ( r -> flags )		4203017	0					
ANR	4203500	Condition	r -> flags	2047:8:61197:61204	4203017	0	True				
ANR	4203501	PtrMemberAccess	r -> flags		4203017	0					
ANR	4203502	Identifier	r		4203017	0					
ANR	4203503	Identifier	flags		4203017	1					
ANR	4203504	CompoundStatement		70:18:1872:1872	4203017	1					
ANR	4203505	ExpressionStatement	"tmp = r_reg_get_bvalue ( reg , r )"	2048:5:61214:61245	4203017	0	True				
ANR	4203506	AssignmentExpression	"tmp = r_reg_get_bvalue ( reg , r )"		4203017	0		=			
ANR	4203507	Identifier	tmp		4203017	0					
ANR	4203508	CallExpression	"r_reg_get_bvalue ( reg , r )"		4203017	1					
ANR	4203509	Callee	r_reg_get_bvalue		4203017	0					
ANR	4203510	Identifier	r_reg_get_bvalue		4203017	0					
ANR	4203511	ArgumentList	reg		4203017	1					
ANR	4203512	Argument	reg		4203017	0					
ANR	4203513	Identifier	reg		4203017	0					
ANR	4203514	Argument	r		4203017	1					
ANR	4203515	Identifier	r		4203017	0					
ANR	4203516	ExpressionStatement	"r_cons_printf ( ""%s%6s %-10s%s"" , color , r -> name , tmp , Color_RESET )"	2049:5:61252:61317	4203017	1	True				
ANR	4203517	CallExpression	"r_cons_printf ( ""%s%6s %-10s%s"" , color , r -> name , tmp , Color_RESET )"		4203017	0					
ANR	4203518	Callee	r_cons_printf		4203017	0					
ANR	4203519	Identifier	r_cons_printf		4203017	0					
ANR	4203520	ArgumentList	"""%s%6s %-10s%s"""		4203017	1					
ANR	4203521	Argument	"""%s%6s %-10s%s"""		4203017	0					
ANR	4203522	PrimaryExpression	"""%s%6s %-10s%s"""		4203017	0					
ANR	4203523	Argument	color		4203017	1					
ANR	4203524	Identifier	color		4203017	0					
ANR	4203525	Argument	r -> name		4203017	2					
ANR	4203526	PtrMemberAccess	r -> name		4203017	0					
ANR	4203527	Identifier	r		4203017	0					
ANR	4203528	Identifier	name		4203017	1					
ANR	4203529	Argument	tmp		4203017	3					
ANR	4203530	Identifier	tmp		4203017	0					
ANR	4203531	Argument	Color_RESET		4203017	4					
ANR	4203532	Identifier	Color_RESET		4203017	0					
ANR	4203533	ElseStatement	else		4203017	0					
ANR	4203534	CompoundStatement		73:11:1995:1995	4203017	0					
ANR	4203535	Statement	r_cons_printf	2051:5:61337:61349	4203017	0	True				
ANR	4203536	Statement	(	2051:19:61351:61351	4203017	1	True				
ANR	4203537	Statement	"""%s%6s 0x%-8"""	2051:20:61352:61364	4203017	2	True				
ANR	4203538	Statement	PFMT64x	2051:33:61365:61371	4203017	3	True				
ANR	4203539	Statement	"""%s"""	2051:40:61372:61375	4203017	4	True				
ANR	4203540	Statement	","	2051:44:61376:61376	4203017	5	True				
ANR	4203541	Statement	color	2051:46:61378:61382	4203017	6	True				
ANR	4203542	Statement	","	2051:51:61383:61383	4203017	7	True				
ANR	4203543	Statement	r	2051:53:61385:61385	4203017	8	True				
ANR	4203544	Statement	->	2051:54:61386:61387	4203017	9	True				
ANR	4203545	Statement	name	2051:56:61388:61391	4203017	10	True				
ANR	4203546	Statement	","	2051:60:61392:61392	4203017	11	True				
ANR	4203547	Statement	value	2051:62:61394:61398	4203017	12	True				
ANR	4203548	Statement	","	2051:67:61399:61399	4203017	13	True				
ANR	4203549	Statement	Color_RESET	2051:69:61401:61411	4203017	14	True				
ANR	4203550	Statement	)	2051:80:61412:61412	4203017	15	True				
ANR	4203551	ExpressionStatement		2051:81:61413:61413	4203017	16	True				
ANR	4203552	BreakStatement	break ;	2054:3:61429:61434	4203017	6	True				
ANR	4203553	IfStatement	if ( r -> flags )		4203017	9					
ANR	4203554	Condition	r -> flags	2056:6:61446:61453	4203017	0	True				
ANR	4203555	PtrMemberAccess	r -> flags		4203017	0					
ANR	4203556	Identifier	r		4203017	0					
ANR	4203557	Identifier	flags		4203017	1					
ANR	4203558	CompoundStatement		79:16:2121:2121	4203017	1					
ANR	4203559	ExpressionStatement	free ( tmp )	2057:3:61461:61471	4203017	0	True				
ANR	4203560	CallExpression	free ( tmp )		4203017	0					
ANR	4203561	Callee	free		4203017	0					
ANR	4203562	Identifier	free		4203017	0					
ANR	4203563	ArgumentList	tmp		4203017	1					
ANR	4203564	Argument	tmp		4203017	0					
ANR	4203565	Identifier	tmp		4203017	0					
ANR	4203566	IfStatement	if ( rrstr )		4203017	10					
ANR	4203567	Condition	rrstr	2059:6:61483:61487	4203017	0	True				
ANR	4203568	Identifier	rrstr		4203017	0					
ANR	4203569	CompoundStatement		82:13:2155:2155	4203017	1					
ANR	4203570	IfStatement	if ( mode == 'j' )		4203017	0					
ANR	4203571	Condition	mode == 'j'	2060:7:61499:61509	4203017	0	True				
ANR	4203572	EqualityExpression	mode == 'j'		4203017	0		==			
ANR	4203573	Identifier	mode		4203017	0					
ANR	4203574	PrimaryExpression	'j'		4203017	1					
ANR	4203575	CompoundStatement		83:20:2177:2177	4203017	1					
ANR	4203576	ExpressionStatement	"r_cons_printf ( "",\\""ref\\"":\\""%s\\""}"" , rrstr )"	2061:4:61518:61559	4203017	0	True				
ANR	4203577	CallExpression	"r_cons_printf ( "",\\""ref\\"":\\""%s\\""}"" , rrstr )"		4203017	0					
ANR	4203578	Callee	r_cons_printf		4203017	0					
ANR	4203579	Identifier	r_cons_printf		4203017	0					
ANR	4203580	ArgumentList	""",\\""ref\\"":\\""%s\\""}"""		4203017	1					
ANR	4203581	Argument	""",\\""ref\\"":\\""%s\\""}"""		4203017	0					
ANR	4203582	PrimaryExpression	""",\\""ref\\"":\\""%s\\""}"""		4203017	0					
ANR	4203583	Argument	rrstr		4203017	1					
ANR	4203584	Identifier	rrstr		4203017	0					
ANR	4203585	ElseStatement	else		4203017	0					
ANR	4203586	CompoundStatement		85:10:2236:2236	4203017	0					
ANR	4203587	ExpressionStatement	"r_cons_printf ( "" %s\\n"" , rrstr )"	2063:4:61577:61607	4203017	0	True				
ANR	4203588	CallExpression	"r_cons_printf ( "" %s\\n"" , rrstr )"		4203017	0					
ANR	4203589	Callee	r_cons_printf		4203017	0					
ANR	4203590	Identifier	r_cons_printf		4203017	0					
ANR	4203591	ArgumentList	""" %s\\n"""		4203017	1					
ANR	4203592	Argument	""" %s\\n"""		4203017	0					
ANR	4203593	PrimaryExpression	""" %s\\n"""		4203017	0					
ANR	4203594	Argument	rrstr		4203017	1					
ANR	4203595	Identifier	rrstr		4203017	0					
ANR	4203596	ExpressionStatement	free ( rrstr )	2065:3:61617:61629	4203017	1	True				
ANR	4203597	CallExpression	free ( rrstr )		4203017	0					
ANR	4203598	Callee	free		4203017	0					
ANR	4203599	Identifier	free		4203017	0					
ANR	4203600	ArgumentList	rrstr		4203017	1					
ANR	4203601	Argument	rrstr		4203017	0					
ANR	4203602	Identifier	rrstr		4203017	0					
ANR	4203603	IfStatement	if ( mode == 'j' )		4203017	19					
ANR	4203604	Condition	mode == 'j'	2068:5:61643:61653	4203017	0	True				
ANR	4203605	EqualityExpression	mode == 'j'		4203017	0		==			
ANR	4203606	Identifier	mode		4203017	0					
ANR	4203607	PrimaryExpression	'j'		4203017	1					
ANR	4203608	CompoundStatement		91:18:2321:2321	4203017	1					
ANR	4203609	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	2069:2:61660:61680	4203017	0	True				
ANR	4203610	CallExpression	"r_cons_printf ( ""]\\n"" )"		4203017	0					
ANR	4203611	Callee	r_cons_printf		4203017	0					
ANR	4203612	Identifier	r_cons_printf		4203017	0					
ANR	4203613	ArgumentList	"""]\\n"""		4203017	1					
ANR	4203614	Argument	"""]\\n"""		4203017	0					
ANR	4203615	PrimaryExpression	"""]\\n"""		4203017	0					
ANR	4203616	ReturnType	R_API void		4203017	1					
ANR	4203617	Identifier	r_core_debug_rr		4203017	2					
ANR	4203618	ParameterList	"RCore * core , RReg * reg , int mode"		4203017	3					
ANR	4203619	Parameter	RCore * core	1978:27:59300:59310	4203017	0	True				
ANR	4203620	ParameterType	RCore *		4203017	0					
ANR	4203621	Identifier	core		4203017	1					
ANR	4203622	Parameter	RReg * reg	1978:40:59313:59321	4203017	1	True				
ANR	4203623	ParameterType	RReg *		4203017	0					
ANR	4203624	Identifier	reg		4203017	1					
ANR	4203625	Parameter	int mode	1978:51:59324:59331	4203017	2	True				
ANR	4203626	ParameterType	int		4203017	0					
ANR	4203627	Identifier	mode		4203017	1					
ANR	4203628	CFGEntryNode	ENTRY		4203017		True				
ANR	4203629	CFGExitNode	EXIT		4203017		True				
ANR	4203630	CFGErrorNode	ERROR		4203017		True				
ANR	4203631	Symbol	r -> flags		4203017						
ANR	4203632	Symbol	color		4203017						
ANR	4203633	Symbol	regSize		4203017						
ANR	4203634	Symbol	* core		4203017						
ANR	4203635	Symbol	delta		4203017						
ANR	4203636	Symbol	core -> assembler -> bits		4203017						
ANR	4203637	Symbol	Color_RESET		4203017						
ANR	4203638	Symbol	core -> assembler		4203017						
ANR	4203639	Symbol	r_reg_get_bvalue		4203017						
ANR	4203640	Symbol	r_reg_get_role		4203017						
ANR	4203641	Symbol	rrstr		4203017						
ANR	4203642	Symbol	mode		4203017						
ANR	4203643	Symbol	* core -> assembler		4203017						
ANR	4203644	Symbol	* iter		4203017						
ANR	4203645	Symbol	R_REG_NAME_LAST		4203017						
ANR	4203646	Symbol	reg		4203017						
ANR	4203647	Symbol	tmp		4203017						
ANR	4203648	Symbol	arg		4203017						
ANR	4203649	Symbol	iter -> p		4203017						
ANR	4203650	Symbol	value		4203017						
ANR	4203651	Symbol	* * core		4203017						
ANR	4203652	Symbol	R_REG_TYPE_GPR		4203017						
ANR	4203653	Symbol	core -> config		4203017						
ANR	4203654	Symbol	strcmp		4203017						
ANR	4203655	Symbol	r_reg_get_value		4203017						
ANR	4203656	Symbol	NULL		4203017						
ANR	4203657	Symbol	r_reg_get_list		4203017						
ANR	4203658	Symbol	bits		4203017						
ANR	4203659	Symbol	false		4203017						
ANR	4203660	Symbol	iter		4203017						
ANR	4203661	Symbol	i		4203017						
ANR	4203662	Symbol	diff		4203017						
ANR	4203663	Symbol	list		4203017						
ANR	4203664	Symbol	use_color		4203017						
ANR	4203665	Symbol	r_core_anal_hasrefs		4203017						
ANR	4203666	Symbol	core		4203017						
ANR	4203667	Symbol	r		4203017						
ANR	4203668	Symbol	t		4203017						
ANR	4203669	Symbol	r_reg_get_name		4203017						
ANR	4203670	Symbol	core -> dbg -> reg		4203017						
ANR	4203671	Symbol	r -> name		4203017						
ANR	4203672	Symbol	r_config_get_i		4203017						
ANR	4203673	Symbol	true		4203017						
ANR	4203674	Symbol	use_colors		4203017						
ANR	4203675	Symbol	* r		4203017						
ANR	4203676	Symbol	* core -> dbg		4203017						
ANR	4203677	Symbol	r -> size		4203017						
ANR	4203678	Symbol	core -> dbg		4203017						
ANR	4203679	Function	show_drpi	2073:0:61688:62561							
ANR	4203680	FunctionDef	show_drpi (RCore * core)		4203679	0					
ANR	4203681	CompoundStatement		2073:35:61723:62561	4203679	0					
ANR	4203682	IdentifierDeclStatement	int i ;	2074:1:61726:61731	4203679	0	True				
ANR	4203683	IdentifierDecl	i		4203679	0					
ANR	4203684	IdentifierDeclType	int		4203679	0					
ANR	4203685	Identifier	i		4203679	1					
ANR	4203686	IdentifierDeclStatement	RListIter * iter ;	2075:1:61734:61749	4203679	1	True				
ANR	4203687	IdentifierDecl	* iter		4203679	0					
ANR	4203688	IdentifierDeclType	RListIter *		4203679	0					
ANR	4203689	Identifier	iter		4203679	1					
ANR	4203690	IdentifierDeclStatement	RRegItem * ri ;	2076:1:61752:61764	4203679	2	True				
ANR	4203691	IdentifierDecl	* ri		4203679	0					
ANR	4203692	IdentifierDeclType	RRegItem *		4203679	0					
ANR	4203693	Identifier	ri		4203679	1					
ANR	4203694	ExpressionStatement	"r_cons_printf ( ""Aliases (Reg->name)\\n"" )"	2077:1:61767:61806	4203679	3	True				
ANR	4203695	CallExpression	"r_cons_printf ( ""Aliases (Reg->name)\\n"" )"		4203679	0					
ANR	4203696	Callee	r_cons_printf		4203679	0					
ANR	4203697	Identifier	r_cons_printf		4203679	0					
ANR	4203698	ArgumentList	"""Aliases (Reg->name)\\n"""		4203679	1					
ANR	4203699	Argument	"""Aliases (Reg->name)\\n"""		4203679	0					
ANR	4203700	PrimaryExpression	"""Aliases (Reg->name)\\n"""		4203679	0					
ANR	4203701	ForStatement	for ( i = 0 ; i < R_REG_NAME_LAST ; i ++ )		4203679	4					
ANR	4203702	ForInit	i = 0 ;	2078:6:61814:61819	4203679	0	True				
ANR	4203703	AssignmentExpression	i = 0		4203679	0		=			
ANR	4203704	Identifier	i		4203679	0					
ANR	4203705	PrimaryExpression	0		4203679	1					
ANR	4203706	Condition	i < R_REG_NAME_LAST	2078:13:61821:61839	4203679	1	True				
ANR	4203707	RelationalExpression	i < R_REG_NAME_LAST		4203679	0		<			
ANR	4203708	Identifier	i		4203679	0					
ANR	4203709	Identifier	R_REG_NAME_LAST		4203679	1					
ANR	4203710	PostIncDecOperationExpression	i ++	2078:34:61842:61844	4203679	2	True				
ANR	4203711	Identifier	i		4203679	0					
ANR	4203712	IncDec	++		4203679	1					
ANR	4203713	CompoundStatement		6:39:123:123	4203679	3					
ANR	4203714	ExpressionStatement	"r_cons_printf ( ""%d %s %s\\n"" , i , r_reg_get_role ( i ) , core -> anal -> reg -> name [ i ] )"	2079:2:61851:61928	4203679	0	True				
ANR	4203715	CallExpression	"r_cons_printf ( ""%d %s %s\\n"" , i , r_reg_get_role ( i ) , core -> anal -> reg -> name [ i ] )"		4203679	0					
ANR	4203716	Callee	r_cons_printf		4203679	0					
ANR	4203717	Identifier	r_cons_printf		4203679	0					
ANR	4203718	ArgumentList	"""%d %s %s\\n"""		4203679	1					
ANR	4203719	Argument	"""%d %s %s\\n"""		4203679	0					
ANR	4203720	PrimaryExpression	"""%d %s %s\\n"""		4203679	0					
ANR	4203721	Argument	i		4203679	1					
ANR	4203722	Identifier	i		4203679	0					
ANR	4203723	Argument	r_reg_get_role ( i )		4203679	2					
ANR	4203724	CallExpression	r_reg_get_role ( i )		4203679	0					
ANR	4203725	Callee	r_reg_get_role		4203679	0					
ANR	4203726	Identifier	r_reg_get_role		4203679	0					
ANR	4203727	ArgumentList	i		4203679	1					
ANR	4203728	Argument	i		4203679	0					
ANR	4203729	Identifier	i		4203679	0					
ANR	4203730	Argument	core -> anal -> reg -> name [ i ]		4203679	3					
ANR	4203731	ArrayIndexing	core -> anal -> reg -> name [ i ]		4203679	0					
ANR	4203732	PtrMemberAccess	core -> anal -> reg -> name		4203679	0					
ANR	4203733	PtrMemberAccess	core -> anal -> reg		4203679	0					
ANR	4203734	PtrMemberAccess	core -> anal		4203679	0					
ANR	4203735	Identifier	core		4203679	0					
ANR	4203736	Identifier	anal		4203679	1					
ANR	4203737	Identifier	reg		4203679	1					
ANR	4203738	Identifier	name		4203679	1					
ANR	4203739	Identifier	i		4203679	1					
ANR	4203740	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		4203679	5					
ANR	4203741	ForInit	i = 0 ;	2081:6:61939:61944	4203679	0	True				
ANR	4203742	AssignmentExpression	i = 0		4203679	0		=			
ANR	4203743	Identifier	i		4203679	0					
ANR	4203744	PrimaryExpression	0		4203679	1					
ANR	4203745	Condition	i < R_REG_TYPE_LAST	2081:13:61946:61964	4203679	1	True				
ANR	4203746	RelationalExpression	i < R_REG_TYPE_LAST		4203679	0		<			
ANR	4203747	Identifier	i		4203679	0					
ANR	4203748	Identifier	R_REG_TYPE_LAST		4203679	1					
ANR	4203749	PostIncDecOperationExpression	i ++	2081:34:61967:61969	4203679	2	True				
ANR	4203750	Identifier	i		4203679	0					
ANR	4203751	IncDec	++		4203679	1					
ANR	4203752	CompoundStatement		12:2:338:379	4203679	3					
ANR	4203753	IdentifierDeclStatement	const char * nmi = r_reg_get_type ( i ) ;	2082:2:61976:62012	4203679	0	True				
ANR	4203754	IdentifierDecl	* nmi = r_reg_get_type ( i )		4203679	0					
ANR	4203755	IdentifierDeclType	const char *		4203679	0					
ANR	4203756	Identifier	nmi		4203679	1					
ANR	4203757	AssignmentExpression	* nmi = r_reg_get_type ( i )		4203679	2		=			
ANR	4203758	Identifier	nmi		4203679	0					
ANR	4203759	CallExpression	r_reg_get_type ( i )		4203679	1					
ANR	4203760	Callee	r_reg_get_type		4203679	0					
ANR	4203761	Identifier	r_reg_get_type		4203679	0					
ANR	4203762	ArgumentList	i		4203679	1					
ANR	4203763	Argument	i		4203679	0					
ANR	4203764	Identifier	i		4203679	0					
ANR	4203765	ExpressionStatement	"r_cons_printf ( ""regset %d (%s)\\n"" , i , nmi )"	2083:2:62016:62058	4203679	1	True				
ANR	4203766	CallExpression	"r_cons_printf ( ""regset %d (%s)\\n"" , i , nmi )"		4203679	0					
ANR	4203767	Callee	r_cons_printf		4203679	0					
ANR	4203768	Identifier	r_cons_printf		4203679	0					
ANR	4203769	ArgumentList	"""regset %d (%s)\\n"""		4203679	1					
ANR	4203770	Argument	"""regset %d (%s)\\n"""		4203679	0					
ANR	4203771	PrimaryExpression	"""regset %d (%s)\\n"""		4203679	0					
ANR	4203772	Argument	i		4203679	1					
ANR	4203773	Identifier	i		4203679	0					
ANR	4203774	Argument	nmi		4203679	2					
ANR	4203775	Identifier	nmi		4203679	0					
ANR	4203776	IdentifierDeclStatement	RRegSet * rs = & core -> anal -> reg -> regset [ i ] ;	2084:2:62062:62103	4203679	2	True				
ANR	4203777	IdentifierDecl	* rs = & core -> anal -> reg -> regset [ i ]		4203679	0					
ANR	4203778	IdentifierDeclType	RRegSet *		4203679	0					
ANR	4203779	Identifier	rs		4203679	1					
ANR	4203780	AssignmentExpression	* rs = & core -> anal -> reg -> regset [ i ]		4203679	2		=			
ANR	4203781	Identifier	rs		4203679	0					
ANR	4203782	UnaryOperationExpression	& core -> anal -> reg -> regset [ i ]		4203679	1					
ANR	4203783	UnaryOperator	&		4203679	0					
ANR	4203784	ArrayIndexing	core -> anal -> reg -> regset [ i ]		4203679	1					
ANR	4203785	PtrMemberAccess	core -> anal -> reg -> regset		4203679	0					
ANR	4203786	PtrMemberAccess	core -> anal -> reg		4203679	0					
ANR	4203787	PtrMemberAccess	core -> anal		4203679	0					
ANR	4203788	Identifier	core		4203679	0					
ANR	4203789	Identifier	anal		4203679	1					
ANR	4203790	Identifier	reg		4203679	1					
ANR	4203791	Identifier	regset		4203679	1					
ANR	4203792	Identifier	i		4203679	1					
ANR	4203793	ExpressionStatement	"r_cons_printf ( ""* arena %s size %d\\n"" , r_reg_get_type ( i ) , rs -> arena -> size )"	2085:2:62107:62182	4203679	3	True				
ANR	4203794	CallExpression	"r_cons_printf ( ""* arena %s size %d\\n"" , r_reg_get_type ( i ) , rs -> arena -> size )"		4203679	0					
ANR	4203795	Callee	r_cons_printf		4203679	0					
ANR	4203796	Identifier	r_cons_printf		4203679	0					
ANR	4203797	ArgumentList	"""* arena %s size %d\\n"""		4203679	1					
ANR	4203798	Argument	"""* arena %s size %d\\n"""		4203679	0					
ANR	4203799	PrimaryExpression	"""* arena %s size %d\\n"""		4203679	0					
ANR	4203800	Argument	r_reg_get_type ( i )		4203679	1					
ANR	4203801	CallExpression	r_reg_get_type ( i )		4203679	0					
ANR	4203802	Callee	r_reg_get_type		4203679	0					
ANR	4203803	Identifier	r_reg_get_type		4203679	0					
ANR	4203804	ArgumentList	i		4203679	1					
ANR	4203805	Argument	i		4203679	0					
ANR	4203806	Identifier	i		4203679	0					
ANR	4203807	Argument	rs -> arena -> size		4203679	2					
ANR	4203808	PtrMemberAccess	rs -> arena -> size		4203679	0					
ANR	4203809	PtrMemberAccess	rs -> arena		4203679	0					
ANR	4203810	Identifier	rs		4203679	0					
ANR	4203811	Identifier	arena		4203679	1					
ANR	4203812	Identifier	size		4203679	1					
ANR	4203813	Statement	r_list_foreach	2086:2:62186:62199	4203679	4	True				
ANR	4203814	Statement	(	2086:17:62201:62201	4203679	5	True				
ANR	4203815	Statement	rs	2086:18:62202:62203	4203679	6	True				
ANR	4203816	Statement	->	2086:20:62204:62205	4203679	7	True				
ANR	4203817	Statement	regs	2086:22:62206:62209	4203679	8	True				
ANR	4203818	Statement	","	2086:26:62210:62210	4203679	9	True				
ANR	4203819	Statement	iter	2086:28:62212:62215	4203679	10	True				
ANR	4203820	Statement	","	2086:32:62216:62216	4203679	11	True				
ANR	4203821	Statement	ri	2086:34:62218:62219	4203679	12	True				
ANR	4203822	Statement	)	2086:36:62220:62220	4203679	13	True				
ANR	4203823	CompoundStatement		16:3:551:595	4203679	14					
ANR	4203824	IdentifierDeclStatement	const char * tpe = r_reg_get_type ( ri -> type ) ;	2087:3:62227:62270	4203679	0	True				
ANR	4203825	IdentifierDecl	* tpe = r_reg_get_type ( ri -> type )		4203679	0					
ANR	4203826	IdentifierDeclType	const char *		4203679	0					
ANR	4203827	Identifier	tpe		4203679	1					
ANR	4203828	AssignmentExpression	* tpe = r_reg_get_type ( ri -> type )		4203679	2		=			
ANR	4203829	Identifier	tpe		4203679	0					
ANR	4203830	CallExpression	r_reg_get_type ( ri -> type )		4203679	1					
ANR	4203831	Callee	r_reg_get_type		4203679	0					
ANR	4203832	Identifier	r_reg_get_type		4203679	0					
ANR	4203833	ArgumentList	ri -> type		4203679	1					
ANR	4203834	Argument	ri -> type		4203679	0					
ANR	4203835	PtrMemberAccess	ri -> type		4203679	0					
ANR	4203836	Identifier	ri		4203679	0					
ANR	4203837	Identifier	type		4203679	1					
ANR	4203838	IdentifierDeclStatement	const char * arn = r_reg_get_type ( ri -> arena ) ;	2088:3:62275:62319	4203679	1	True				
ANR	4203839	IdentifierDecl	* arn = r_reg_get_type ( ri -> arena )		4203679	0					
ANR	4203840	IdentifierDeclType	const char *		4203679	0					
ANR	4203841	Identifier	arn		4203679	1					
ANR	4203842	AssignmentExpression	* arn = r_reg_get_type ( ri -> arena )		4203679	2		=			
ANR	4203843	Identifier	arn		4203679	0					
ANR	4203844	CallExpression	r_reg_get_type ( ri -> arena )		4203679	1					
ANR	4203845	Callee	r_reg_get_type		4203679	0					
ANR	4203846	Identifier	r_reg_get_type		4203679	0					
ANR	4203847	ArgumentList	ri -> arena		4203679	1					
ANR	4203848	Argument	ri -> arena		4203679	0					
ANR	4203849	PtrMemberAccess	ri -> arena		4203679	0					
ANR	4203850	Identifier	ri		4203679	0					
ANR	4203851	Identifier	arena		4203679	1					
ANR	4203852	ExpressionStatement	"r_cons_printf ( ""   %s %s @ %s (offset: %d  size: %d)"" , ri -> name , tpe , arn , ri -> offset / 8 , ri -> size / 8 )"	2089:3:62324:62428	4203679	2	True				
ANR	4203853	CallExpression	"r_cons_printf ( ""   %s %s @ %s (offset: %d  size: %d)"" , ri -> name , tpe , arn , ri -> offset / 8 , ri -> size / 8 )"		4203679	0					
ANR	4203854	Callee	r_cons_printf		4203679	0					
ANR	4203855	Identifier	r_cons_printf		4203679	0					
ANR	4203856	ArgumentList	"""   %s %s @ %s (offset: %d  size: %d)"""		4203679	1					
ANR	4203857	Argument	"""   %s %s @ %s (offset: %d  size: %d)"""		4203679	0					
ANR	4203858	PrimaryExpression	"""   %s %s @ %s (offset: %d  size: %d)"""		4203679	0					
ANR	4203859	Argument	ri -> name		4203679	1					
ANR	4203860	PtrMemberAccess	ri -> name		4203679	0					
ANR	4203861	Identifier	ri		4203679	0					
ANR	4203862	Identifier	name		4203679	1					
ANR	4203863	Argument	tpe		4203679	2					
ANR	4203864	Identifier	tpe		4203679	0					
ANR	4203865	Argument	arn		4203679	3					
ANR	4203866	Identifier	arn		4203679	0					
ANR	4203867	Argument	ri -> offset / 8		4203679	4					
ANR	4203868	MultiplicativeExpression	ri -> offset / 8		4203679	0		/			
ANR	4203869	PtrMemberAccess	ri -> offset		4203679	0					
ANR	4203870	Identifier	ri		4203679	0					
ANR	4203871	Identifier	offset		4203679	1					
ANR	4203872	PrimaryExpression	8		4203679	1					
ANR	4203873	Argument	ri -> size / 8		4203679	5					
ANR	4203874	MultiplicativeExpression	ri -> size / 8		4203679	0		/			
ANR	4203875	PtrMemberAccess	ri -> size		4203679	0					
ANR	4203876	Identifier	ri		4203679	0					
ANR	4203877	Identifier	size		4203679	1					
ANR	4203878	PrimaryExpression	8		4203679	1					
ANR	4203879	IfStatement	if ( ( ri -> offset / 8 ) + ( ri -> size / 8 ) > rs -> arena -> size )		4203679	3					
ANR	4203880	Condition	( ri -> offset / 8 ) + ( ri -> size / 8 ) > rs -> arena -> size	2090:7:62437:62487	4203679	0	True				
ANR	4203881	RelationalExpression	( ri -> offset / 8 ) + ( ri -> size / 8 ) > rs -> arena -> size		4203679	0		>			
ANR	4203882	AdditiveExpression	( ri -> offset / 8 ) + ( ri -> size / 8 )		4203679	0		+			
ANR	4203883	MultiplicativeExpression	ri -> offset / 8		4203679	0		/			
ANR	4203884	PtrMemberAccess	ri -> offset		4203679	0					
ANR	4203885	Identifier	ri		4203679	0					
ANR	4203886	Identifier	offset		4203679	1					
ANR	4203887	PrimaryExpression	8		4203679	1					
ANR	4203888	MultiplicativeExpression	ri -> size / 8		4203679	1		/			
ANR	4203889	PtrMemberAccess	ri -> size		4203679	0					
ANR	4203890	Identifier	ri		4203679	0					
ANR	4203891	Identifier	size		4203679	1					
ANR	4203892	PrimaryExpression	8		4203679	1					
ANR	4203893	PtrMemberAccess	rs -> arena -> size		4203679	1					
ANR	4203894	PtrMemberAccess	rs -> arena		4203679	0					
ANR	4203895	Identifier	rs		4203679	0					
ANR	4203896	Identifier	arena		4203679	1					
ANR	4203897	Identifier	size		4203679	1					
ANR	4203898	CompoundStatement		18:60:766:766	4203679	1					
ANR	4203899	ExpressionStatement	"r_cons_printf ( "" *OVERFLOW*"" )"	2091:4:62496:62525	4203679	0	True				
ANR	4203900	CallExpression	"r_cons_printf ( "" *OVERFLOW*"" )"		4203679	0					
ANR	4203901	Callee	r_cons_printf		4203679	0					
ANR	4203902	Identifier	r_cons_printf		4203679	0					
ANR	4203903	ArgumentList	""" *OVERFLOW*"""		4203679	1					
ANR	4203904	Argument	""" *OVERFLOW*"""		4203679	0					
ANR	4203905	PrimaryExpression	""" *OVERFLOW*"""		4203679	0					
ANR	4203906	ExpressionStatement	r_cons_newline ( )	2093:3:62535:62552	4203679	4	True				
ANR	4203907	CallExpression	r_cons_newline ( )		4203679	0					
ANR	4203908	Callee	r_cons_newline		4203679	0					
ANR	4203909	Identifier	r_cons_newline		4203679	0					
ANR	4203910	ArgumentList			4203679	1					
ANR	4203911	ReturnType	static void		4203679	1					
ANR	4203912	Identifier	show_drpi		4203679	2					
ANR	4203913	ParameterList	RCore * core		4203679	3					
ANR	4203914	Parameter	RCore * core	2073:22:61710:61720	4203679	0	True				
ANR	4203915	ParameterType	RCore *		4203679	0					
ANR	4203916	Identifier	core		4203679	1					
ANR	4203917	CFGEntryNode	ENTRY		4203679		True				
ANR	4203918	CFGExitNode	EXIT		4203679		True				
ANR	4203919	Symbol	core -> anal -> reg		4203679						
ANR	4203920	Symbol	rs		4203679						
ANR	4203921	Symbol	* core -> anal -> reg -> name		4203679						
ANR	4203922	Symbol	r_reg_get_type		4203679						
ANR	4203923	Symbol	rs -> arena -> size		4203679						
ANR	4203924	Symbol	* core		4203679						
ANR	4203925	Symbol	ri -> type		4203679						
ANR	4203926	Symbol	nmi		4203679						
ANR	4203927	Symbol	r_reg_get_role		4203679						
ANR	4203928	Symbol	core -> anal		4203679						
ANR	4203929	Symbol	ri -> size		4203679						
ANR	4203930	Symbol	R_REG_NAME_LAST		4203679						
ANR	4203931	Symbol	ri -> name		4203679						
ANR	4203932	Symbol	* * core -> anal		4203679						
ANR	4203933	Symbol	* core -> anal -> reg		4203679						
ANR	4203934	Symbol	* * * * core		4203679						
ANR	4203935	Symbol	core -> anal -> reg -> regset		4203679						
ANR	4203936	Symbol	arn		4203679						
ANR	4203937	Symbol	* * core		4203679						
ANR	4203938	Symbol	ri -> offset		4203679						
ANR	4203939	Symbol	ri -> arena		4203679						
ANR	4203940	Symbol	* rs		4203679						
ANR	4203941	Symbol	tpe		4203679						
ANR	4203942	Symbol	i		4203679						
ANR	4203943	Symbol	iter		4203679						
ANR	4203944	Symbol	R_REG_TYPE_LAST		4203679						
ANR	4203945	Symbol	* * rs		4203679						
ANR	4203946	Symbol	core -> anal -> reg -> name		4203679						
ANR	4203947	Symbol	core		4203679						
ANR	4203948	Symbol	* * * core		4203679						
ANR	4203949	Symbol	* i		4203679						
ANR	4203950	Symbol	* core -> anal		4203679						
ANR	4203951	Symbol	* rs -> arena		4203679						
ANR	4203952	Symbol	rs -> arena		4203679						
ANR	4203953	Symbol	ri		4203679						
ANR	4203954	Symbol	* * * core -> anal		4203679						
ANR	4203955	Symbol	* ri		4203679						
ANR	4203956	Symbol	* * core -> anal -> reg		4203679						
ANR	4203957	Function	cmd_reg_profile	2098:0:62564:65514							
ANR	4203958	FunctionDef	"cmd_reg_profile (RCore * core , char from , const char * str)"		4203957	0					
ANR	4203959	CompoundStatement		2098:70:62634:65514	4203957	0					
ANR	4203960	IdentifierDeclStatement	const char * ptr ;	2099:1:62656:62671	4203957	0	True				
ANR	4203961	IdentifierDecl	* ptr		4203957	0					
ANR	4203962	IdentifierDeclType	const char *		4203957	0					
ANR	4203963	Identifier	ptr		4203957	1					
ANR	4203964	SwitchStatement	switch ( str [ 1 ] )		4203957	1					
ANR	4203965	Condition	str [ 1 ]	2100:9:62682:62687	4203957	0	True				
ANR	4203966	ArrayIndexing	str [ 1 ]		4203957	0					
ANR	4203967	Identifier	str		4203957	0					
ANR	4203968	PrimaryExpression	1		4203957	1					
ANR	4203969	CompoundStatement		3:17:55:55	4203957	1					
ANR	4203970	Label	case '\\0' :	2101:1:62693:62702	4203957	0	True				
ANR	4203971	IfStatement	if ( core -> dbg -> reg -> reg_profile_str )		4203957	1					
ANR	4203972	Condition	core -> dbg -> reg -> reg_profile_str	2102:6:62719:62749	4203957	0	True				
ANR	4203973	PtrMemberAccess	core -> dbg -> reg -> reg_profile_str		4203957	0					
ANR	4203974	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4203975	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4203976	Identifier	core		4203957	0					
ANR	4203977	Identifier	dbg		4203957	1					
ANR	4203978	Identifier	reg		4203957	1					
ANR	4203979	Identifier	reg_profile_str		4203957	1					
ANR	4203980	CompoundStatement		5:39:117:117	4203957	1					
ANR	4203981	ExpressionStatement	r_cons_println ( core -> dbg -> reg -> reg_profile_str )	2103:3:62757:62805	4203957	0	True				
ANR	4203982	CallExpression	r_cons_println ( core -> dbg -> reg -> reg_profile_str )		4203957	0					
ANR	4203983	Callee	r_cons_println		4203957	0					
ANR	4203984	Identifier	r_cons_println		4203957	0					
ANR	4203985	ArgumentList	core -> dbg -> reg -> reg_profile_str		4203957	1					
ANR	4203986	Argument	core -> dbg -> reg -> reg_profile_str		4203957	0					
ANR	4203987	PtrMemberAccess	core -> dbg -> reg -> reg_profile_str		4203957	0					
ANR	4203988	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4203989	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4203990	Identifier	core		4203957	0					
ANR	4203991	Identifier	dbg		4203957	1					
ANR	4203992	Identifier	reg		4203957	1					
ANR	4203993	Identifier	reg_profile_str		4203957	1					
ANR	4203994	ElseStatement	else		4203957	0					
ANR	4203995	CompoundStatement		7:9:181:181	4203957	0					
ANR	4203996	ExpressionStatement	"eprintf ( ""No register profile defined. Try 'dr.'\\n"" )"	2105:3:62821:62873	4203957	0	True				
ANR	4203997	CallExpression	"eprintf ( ""No register profile defined. Try 'dr.'\\n"" )"		4203957	0					
ANR	4203998	Callee	eprintf		4203957	0					
ANR	4203999	Identifier	eprintf		4203957	0					
ANR	4204000	ArgumentList	"""No register profile defined. Try 'dr.'\\n"""		4203957	1					
ANR	4204001	Argument	"""No register profile defined. Try 'dr.'\\n"""		4203957	0					
ANR	4204002	PrimaryExpression	"""No register profile defined. Try 'dr.'\\n"""		4203957	0					
ANR	4204003	BreakStatement	break ;	2107:2:62881:62886	4203957	2	True				
ANR	4204004	Label	case ' ' :	2108:1:62889:62897	4203957	3	True				
ANR	4204005	ExpressionStatement	ptr = str + 2	2109:2:62911:62924	4203957	4	True				
ANR	4204006	AssignmentExpression	ptr = str + 2		4203957	0		=			
ANR	4204007	Identifier	ptr		4203957	0					
ANR	4204008	AdditiveExpression	str + 2		4203957	1		+			
ANR	4204009	Identifier	str		4203957	0					
ANR	4204010	PrimaryExpression	2		4203957	1					
ANR	4204011	WhileStatement	while ( isspace ( ( ut8 ) * ptr ) )		4203957	5					
ANR	4204012	Condition	isspace ( ( ut8 ) * ptr )	2110:9:62935:62953	4203957	0	True				
ANR	4204013	CallExpression	isspace ( ( ut8 ) * ptr )		4203957	0					
ANR	4204014	Callee	isspace		4203957	0					
ANR	4204015	Identifier	isspace		4203957	0					
ANR	4204016	ArgumentList	( ut8 ) * ptr		4203957	1					
ANR	4204017	Argument	( ut8 ) * ptr		4203957	0					
ANR	4204018	CastExpression	( ut8 ) * ptr		4203957	0					
ANR	4204019	CastTarget	ut8		4203957	0					
ANR	4204020	UnaryOperationExpression	* ptr		4203957	1					
ANR	4204021	UnaryOperator	*		4203957	0					
ANR	4204022	Identifier	ptr		4203957	1					
ANR	4204023	CompoundStatement		13:30:321:321	4203957	1					
ANR	4204024	ExpressionStatement	ptr ++	2111:3:62961:62966	4203957	0	True				
ANR	4204025	PostIncDecOperationExpression	ptr ++		4203957	0					
ANR	4204026	Identifier	ptr		4203957	0					
ANR	4204027	IncDec	++		4203957	1					
ANR	4204028	IfStatement	"if ( r_str_startswith ( ptr , ""gdb "" ) )"		4203957	6					
ANR	4204029	Condition	"r_str_startswith ( ptr , ""gdb "" )"	2113:6:62978:63007	4203957	0	True				
ANR	4204030	CallExpression	"r_str_startswith ( ptr , ""gdb "" )"		4203957	0					
ANR	4204031	Callee	r_str_startswith		4203957	0					
ANR	4204032	Identifier	r_str_startswith		4203957	0					
ANR	4204033	ArgumentList	ptr		4203957	1					
ANR	4204034	Argument	ptr		4203957	0					
ANR	4204035	Identifier	ptr		4203957	0					
ANR	4204036	Argument	"""gdb """		4203957	1					
ANR	4204037	PrimaryExpression	"""gdb """		4203957	0					
ANR	4204038	CompoundStatement		16:38:375:375	4203957	1					
ANR	4204039	ExpressionStatement	r_reg_parse_gdb_profile ( ptr + 4 )	2114:3:63015:63048	4203957	0	True				
ANR	4204040	CallExpression	r_reg_parse_gdb_profile ( ptr + 4 )		4203957	0					
ANR	4204041	Callee	r_reg_parse_gdb_profile		4203957	0					
ANR	4204042	Identifier	r_reg_parse_gdb_profile		4203957	0					
ANR	4204043	ArgumentList	ptr + 4		4203957	1					
ANR	4204044	Argument	ptr + 4		4203957	0					
ANR	4204045	AdditiveExpression	ptr + 4		4203957	0		+			
ANR	4204046	Identifier	ptr		4203957	0					
ANR	4204047	PrimaryExpression	4		4203957	1					
ANR	4204048	BreakStatement	break ;	2115:3:63053:63058	4203957	1	True				
ANR	4204049	ExpressionStatement	"r_reg_set_profile ( core -> dbg -> reg , str + 2 )"	2117:2:63066:63107	4203957	7	True				
ANR	4204050	CallExpression	"r_reg_set_profile ( core -> dbg -> reg , str + 2 )"		4203957	0					
ANR	4204051	Callee	r_reg_set_profile		4203957	0					
ANR	4204052	Identifier	r_reg_set_profile		4203957	0					
ANR	4204053	ArgumentList	core -> dbg -> reg		4203957	1					
ANR	4204054	Argument	core -> dbg -> reg		4203957	0					
ANR	4204055	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4204056	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4204057	Identifier	core		4203957	0					
ANR	4204058	Identifier	dbg		4203957	1					
ANR	4204059	Identifier	reg		4203957	1					
ANR	4204060	Argument	str + 2		4203957	1					
ANR	4204061	AdditiveExpression	str + 2		4203957	0		+			
ANR	4204062	Identifier	str		4203957	0					
ANR	4204063	PrimaryExpression	2		4203957	1					
ANR	4204064	BreakStatement	break ;	2118:2:63111:63116	4203957	8	True				
ANR	4204065	Label	case '.' :	2119:1:63119:63127	4203957	9	True				
ANR	4204066	CompoundStatement		23:2:508:571	4203957	10					
ANR	4204067	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2120:2:63143:63206	4203957	0	True				
ANR	4204068	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	0					
ANR	4204069	IdentifierDeclType	RRegSet *		4203957	0					
ANR	4204070	Identifier	rs		4203957	1					
ANR	4204071	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	2		=			
ANR	4204072	Identifier	rs		4203957	0					
ANR	4204073	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	1					
ANR	4204074	Callee	r_reg_regset_get		4203957	0					
ANR	4204075	Identifier	r_reg_regset_get		4203957	0					
ANR	4204076	ArgumentList	core -> dbg -> reg		4203957	1					
ANR	4204077	Argument	core -> dbg -> reg		4203957	0					
ANR	4204078	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4204079	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4204080	Identifier	core		4203957	0					
ANR	4204081	Identifier	dbg		4203957	1					
ANR	4204082	Identifier	reg		4203957	1					
ANR	4204083	Argument	R_REG_TYPE_GPR		4203957	1					
ANR	4204084	Identifier	R_REG_TYPE_GPR		4203957	0					
ANR	4204085	IfStatement	if ( rs )		4203957	1					
ANR	4204086	Condition	rs	2121:6:63214:63215	4203957	0	True				
ANR	4204087	Identifier	rs		4203957	0					
ANR	4204088	CompoundStatement		24:10:583:583	4203957	1					
ANR	4204089	ExpressionStatement	"eprintf ( ""size = %d\\n"" , rs -> arena -> size )"	2122:3:63223:63263	4203957	0	True				
ANR	4204090	CallExpression	"eprintf ( ""size = %d\\n"" , rs -> arena -> size )"		4203957	0					
ANR	4204091	Callee	eprintf		4203957	0					
ANR	4204092	Identifier	eprintf		4203957	0					
ANR	4204093	ArgumentList	"""size = %d\\n"""		4203957	1					
ANR	4204094	Argument	"""size = %d\\n"""		4203957	0					
ANR	4204095	PrimaryExpression	"""size = %d\\n"""		4203957	0					
ANR	4204096	Argument	rs -> arena -> size		4203957	1					
ANR	4204097	PtrMemberAccess	rs -> arena -> size		4203957	0					
ANR	4204098	PtrMemberAccess	rs -> arena		4203957	0					
ANR	4204099	Identifier	rs		4203957	0					
ANR	4204100	Identifier	arena		4203957	1					
ANR	4204101	Identifier	size		4203957	1					
ANR	4204102	BreakStatement	break ;	2124:2:63271:63276	4203957	2	True				
ANR	4204103	Label	case 'i' :	2126:1:63282:63290	4203957	11	True				
ANR	4204104	ExpressionStatement	show_drpi ( core )	2127:2:63304:63320	4203957	12	True				
ANR	4204105	CallExpression	show_drpi ( core )		4203957	0					
ANR	4204106	Callee	show_drpi		4203957	0					
ANR	4204107	Identifier	show_drpi		4203957	0					
ANR	4204108	ArgumentList	core		4203957	1					
ANR	4204109	Argument	core		4203957	0					
ANR	4204110	Identifier	core		4203957	0					
ANR	4204111	BreakStatement	break ;	2128:2:63324:63329	4203957	13	True				
ANR	4204112	Label	case 's' :	2129:1:63332:63340	4203957	14	True				
ANR	4204113	IfStatement	if ( str [ 2 ] == ' ' )		4203957	15					
ANR	4204114	Condition	str [ 2 ] == ' '	2130:6:63358:63370	4203957	0	True				
ANR	4204115	EqualityExpression	str [ 2 ] == ' '		4203957	0		==			
ANR	4204116	ArrayIndexing	str [ 2 ]		4203957	0					
ANR	4204117	Identifier	str		4203957	0					
ANR	4204118	PrimaryExpression	2		4203957	1					
ANR	4204119	PrimaryExpression	' '		4203957	1					
ANR	4204120	CompoundStatement		36:3:833:896	4203957	1					
ANR	4204121	IdentifierDeclStatement	"ut64 n = r_num_math ( core -> num , str + 2 ) ;"	2131:3:63378:63416	4203957	0	True				
ANR	4204122	IdentifierDecl	"n = r_num_math ( core -> num , str + 2 )"		4203957	0					
ANR	4204123	IdentifierDeclType	ut64		4203957	0					
ANR	4204124	Identifier	n		4203957	1					
ANR	4204125	AssignmentExpression	"n = r_num_math ( core -> num , str + 2 )"		4203957	2		=			
ANR	4204126	Identifier	n		4203957	0					
ANR	4204127	CallExpression	"r_num_math ( core -> num , str + 2 )"		4203957	1					
ANR	4204128	Callee	r_num_math		4203957	0					
ANR	4204129	Identifier	r_num_math		4203957	0					
ANR	4204130	ArgumentList	core -> num		4203957	1					
ANR	4204131	Argument	core -> num		4203957	0					
ANR	4204132	PtrMemberAccess	core -> num		4203957	0					
ANR	4204133	Identifier	core		4203957	0					
ANR	4204134	Identifier	num		4203957	1					
ANR	4204135	Argument	str + 2		4203957	1					
ANR	4204136	AdditiveExpression	str + 2		4203957	0		+			
ANR	4204137	Identifier	str		4203957	0					
ANR	4204138	PrimaryExpression	2		4203957	1					
ANR	4204139	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2133:3:63468:63531	4203957	1	True				
ANR	4204140	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	0					
ANR	4204141	IdentifierDeclType	RRegSet *		4203957	0					
ANR	4204142	Identifier	rs		4203957	1					
ANR	4204143	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	2		=			
ANR	4204144	Identifier	rs		4203957	0					
ANR	4204145	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	1					
ANR	4204146	Callee	r_reg_regset_get		4203957	0					
ANR	4204147	Identifier	r_reg_regset_get		4203957	0					
ANR	4204148	ArgumentList	core -> dbg -> reg		4203957	1					
ANR	4204149	Argument	core -> dbg -> reg		4203957	0					
ANR	4204150	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4204151	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4204152	Identifier	core		4203957	0					
ANR	4204153	Identifier	dbg		4203957	1					
ANR	4204154	Identifier	reg		4203957	1					
ANR	4204155	Argument	R_REG_TYPE_GPR		4203957	1					
ANR	4204156	Identifier	R_REG_TYPE_GPR		4203957	0					
ANR	4204157	IfStatement	if ( rs && n > 0 )		4203957	2					
ANR	4204158	Condition	rs && n > 0	2134:7:63540:63548	4203957	0	True				
ANR	4204159	AndExpression	rs && n > 0		4203957	0		&&			
ANR	4204160	Identifier	rs		4203957	0					
ANR	4204161	RelationalExpression	n > 0		4203957	1		>			
ANR	4204162	Identifier	n		4203957	0					
ANR	4204163	PrimaryExpression	0		4203957	1					
ANR	4204164	CompoundStatement		39:4:943:959	4203957	1					
ANR	4204165	IdentifierDeclStatement	RListIter * iter ;	2135:4:63557:63572	4203957	0	True				
ANR	4204166	IdentifierDecl	* iter		4203957	0					
ANR	4204167	IdentifierDeclType	RListIter *		4203957	0					
ANR	4204168	Identifier	iter		4203957	1					
ANR	4204169	IdentifierDeclStatement	RRegArena * arena ;	2136:4:63578:63594	4203957	1	True				
ANR	4204170	IdentifierDecl	* arena		4203957	0					
ANR	4204171	IdentifierDeclType	RRegArena *		4203957	0					
ANR	4204172	Identifier	arena		4203957	1					
ANR	4204173	Statement	r_list_foreach	2137:4:63600:63613	4203957	2	True				
ANR	4204174	Statement	(	2137:19:63615:63615	4203957	3	True				
ANR	4204175	Statement	rs	2137:20:63616:63617	4203957	4	True				
ANR	4204176	Statement	->	2137:22:63618:63619	4203957	5	True				
ANR	4204177	Statement	pool	2137:24:63620:63623	4203957	6	True				
ANR	4204178	Statement	","	2137:28:63624:63624	4203957	7	True				
ANR	4204179	Statement	iter	2137:30:63626:63629	4203957	8	True				
ANR	4204180	Statement	","	2137:34:63630:63630	4203957	9	True				
ANR	4204181	Statement	arena	2137:36:63632:63636	4203957	10	True				
ANR	4204182	Statement	)	2137:41:63637:63637	4203957	11	True				
ANR	4204183	CompoundStatement		41:5:1011:1040	4203957	12					
ANR	4204184	IdentifierDeclStatement	"ut8 * newbytes = calloc ( 1 , n ) ;"	2138:5:63646:63675	4203957	0	True				
ANR	4204185	IdentifierDecl	"* newbytes = calloc ( 1 , n )"		4203957	0					
ANR	4204186	IdentifierDeclType	ut8 *		4203957	0					
ANR	4204187	Identifier	newbytes		4203957	1					
ANR	4204188	AssignmentExpression	"* newbytes = calloc ( 1 , n )"		4203957	2		=			
ANR	4204189	Identifier	newbytes		4203957	0					
ANR	4204190	CallExpression	"calloc ( 1 , n )"		4203957	1					
ANR	4204191	Callee	calloc		4203957	0					
ANR	4204192	Identifier	calloc		4203957	0					
ANR	4204193	ArgumentList	1		4203957	1					
ANR	4204194	Argument	1		4203957	0					
ANR	4204195	PrimaryExpression	1		4203957	0					
ANR	4204196	Argument	n		4203957	1					
ANR	4204197	Identifier	n		4203957	0					
ANR	4204198	IfStatement	if ( newbytes )		4203957	1					
ANR	4204199	Condition	newbytes	2139:9:63686:63693	4203957	0	True				
ANR	4204200	Identifier	newbytes		4203957	0					
ANR	4204201	CompoundStatement		42:19:1061:1061	4203957	1					
ANR	4204202	ExpressionStatement	free ( arena -> bytes )	2140:6:63704:63723	4203957	0	True				
ANR	4204203	CallExpression	free ( arena -> bytes )		4203957	0					
ANR	4204204	Callee	free		4203957	0					
ANR	4204205	Identifier	free		4203957	0					
ANR	4204206	ArgumentList	arena -> bytes		4203957	1					
ANR	4204207	Argument	arena -> bytes		4203957	0					
ANR	4204208	PtrMemberAccess	arena -> bytes		4203957	0					
ANR	4204209	Identifier	arena		4203957	0					
ANR	4204210	Identifier	bytes		4203957	1					
ANR	4204211	ExpressionStatement	arena -> bytes = newbytes	2141:6:63731:63754	4203957	1	True				
ANR	4204212	AssignmentExpression	arena -> bytes = newbytes		4203957	0		=			
ANR	4204213	PtrMemberAccess	arena -> bytes		4203957	0					
ANR	4204214	Identifier	arena		4203957	0					
ANR	4204215	Identifier	bytes		4203957	1					
ANR	4204216	Identifier	newbytes		4203957	1					
ANR	4204217	ExpressionStatement	arena -> size = n	2142:6:63762:63777	4203957	2	True				
ANR	4204218	AssignmentExpression	arena -> size = n		4203957	0		=			
ANR	4204219	PtrMemberAccess	arena -> size		4203957	0					
ANR	4204220	Identifier	arena		4203957	0					
ANR	4204221	Identifier	size		4203957	1					
ANR	4204222	Identifier	n		4203957	1					
ANR	4204223	ElseStatement	else		4203957	0					
ANR	4204224	CompoundStatement		46:12:1156:1156	4203957	0					
ANR	4204225	ExpressionStatement	"eprintf ( ""Cannot allocate %d\\n"" , ( int ) n )"	2144:6:63799:63839	4203957	0	True				
ANR	4204226	CallExpression	"eprintf ( ""Cannot allocate %d\\n"" , ( int ) n )"		4203957	0					
ANR	4204227	Callee	eprintf		4203957	0					
ANR	4204228	Identifier	eprintf		4203957	0					
ANR	4204229	ArgumentList	"""Cannot allocate %d\\n"""		4203957	1					
ANR	4204230	Argument	"""Cannot allocate %d\\n"""		4203957	0					
ANR	4204231	PrimaryExpression	"""Cannot allocate %d\\n"""		4203957	0					
ANR	4204232	Argument	( int ) n		4203957	1					
ANR	4204233	CastExpression	( int ) n		4203957	0					
ANR	4204234	CastTarget	int		4203957	0					
ANR	4204235	Identifier	n		4203957	1					
ANR	4204236	ElseStatement	else		4203957	0					
ANR	4204237	CompoundStatement		50:10:1229:1229	4203957	0					
ANR	4204238	ExpressionStatement	"eprintf ( ""Invalid arena size\\n"" )"	2148:4:63870:63902	4203957	0	True				
ANR	4204239	CallExpression	"eprintf ( ""Invalid arena size\\n"" )"		4203957	0					
ANR	4204240	Callee	eprintf		4203957	0					
ANR	4204241	Identifier	eprintf		4203957	0					
ANR	4204242	ArgumentList	"""Invalid arena size\\n"""		4203957	1					
ANR	4204243	Argument	"""Invalid arena size\\n"""		4203957	0					
ANR	4204244	PrimaryExpression	"""Invalid arena size\\n"""		4203957	0					
ANR	4204245	ElseStatement	else		4203957	0					
ANR	4204246	CompoundStatement		54:3:1288:1351	4203957	0					
ANR	4204247	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2151:3:63923:63986	4203957	0	True				
ANR	4204248	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	0					
ANR	4204249	IdentifierDeclType	RRegSet *		4203957	0					
ANR	4204250	Identifier	rs		4203957	1					
ANR	4204251	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	2		=			
ANR	4204252	Identifier	rs		4203957	0					
ANR	4204253	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4203957	1					
ANR	4204254	Callee	r_reg_regset_get		4203957	0					
ANR	4204255	Identifier	r_reg_regset_get		4203957	0					
ANR	4204256	ArgumentList	core -> dbg -> reg		4203957	1					
ANR	4204257	Argument	core -> dbg -> reg		4203957	0					
ANR	4204258	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4204259	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4204260	Identifier	core		4203957	0					
ANR	4204261	Identifier	dbg		4203957	1					
ANR	4204262	Identifier	reg		4203957	1					
ANR	4204263	Argument	R_REG_TYPE_GPR		4203957	1					
ANR	4204264	Identifier	R_REG_TYPE_GPR		4203957	0					
ANR	4204265	IfStatement	if ( rs )		4203957	1					
ANR	4204266	Condition	rs	2152:7:63995:63996	4203957	0	True				
ANR	4204267	Identifier	rs		4203957	0					
ANR	4204268	CompoundStatement		55:11:1364:1364	4203957	1					
ANR	4204269	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , rs -> arena -> size )"	2153:4:64005:64044	4203957	0	True				
ANR	4204270	CallExpression	"r_cons_printf ( ""%d\\n"" , rs -> arena -> size )"		4203957	0					
ANR	4204271	Callee	r_cons_printf		4203957	0					
ANR	4204272	Identifier	r_cons_printf		4203957	0					
ANR	4204273	ArgumentList	"""%d\\n"""		4203957	1					
ANR	4204274	Argument	"""%d\\n"""		4203957	0					
ANR	4204275	PrimaryExpression	"""%d\\n"""		4203957	0					
ANR	4204276	Argument	rs -> arena -> size		4203957	1					
ANR	4204277	PtrMemberAccess	rs -> arena -> size		4203957	0					
ANR	4204278	PtrMemberAccess	rs -> arena		4203957	0					
ANR	4204279	Identifier	rs		4203957	0					
ANR	4204280	Identifier	arena		4203957	1					
ANR	4204281	Identifier	size		4203957	1					
ANR	4204282	ElseStatement	else		4203957	0					
ANR	4204283	ExpressionStatement	"eprintf ( ""Cannot find GPR register arena.\\n"" )"	2154:10:64056:64101	4203957	0	True				
ANR	4204284	CallExpression	"eprintf ( ""Cannot find GPR register arena.\\n"" )"		4203957	0					
ANR	4204285	Callee	eprintf		4203957	0					
ANR	4204286	Identifier	eprintf		4203957	0					
ANR	4204287	ArgumentList	"""Cannot find GPR register arena.\\n"""		4203957	1					
ANR	4204288	Argument	"""Cannot find GPR register arena.\\n"""		4203957	0					
ANR	4204289	PrimaryExpression	"""Cannot find GPR register arena.\\n"""		4203957	0					
ANR	4204290	BreakStatement	break ;	2156:2:64109:64114	4203957	16	True				
ANR	4204291	Label	case 'j' :	2157:1:64117:64125	4203957	17	True				
ANR	4204292	CompoundStatement		66:3:1587:1605	4203957	18					
ANR	4204293	IdentifierDeclStatement	RListIter * iter ;	2160:3:64176:64191	4203957	0	True				
ANR	4204294	IdentifierDecl	* iter		4203957	0					
ANR	4204295	IdentifierDeclType	RListIter *		4203957	0					
ANR	4204296	Identifier	iter		4203957	1					
ANR	4204297	IdentifierDeclStatement	RRegItem * r ;	2161:3:64196:64207	4203957	1	True				
ANR	4204298	IdentifierDecl	* r		4203957	0					
ANR	4204299	IdentifierDeclType	RRegItem *		4203957	0					
ANR	4204300	Identifier	r		4203957	1					
ANR	4204301	IdentifierDeclStatement	int i ;	2162:3:64212:64217	4203957	2	True				
ANR	4204302	IdentifierDecl	i		4203957	0					
ANR	4204303	IdentifierDeclType	int		4203957	0					
ANR	4204304	Identifier	i		4203957	1					
ANR	4204305	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	2163:3:64222:64240	4203957	3	True				
ANR	4204306	IdentifierDecl	* pj = pj_new ( )		4203957	0					
ANR	4204307	IdentifierDeclType	PJ *		4203957	0					
ANR	4204308	Identifier	pj		4203957	1					
ANR	4204309	AssignmentExpression	* pj = pj_new ( )		4203957	2		=			
ANR	4204310	Identifier	pj		4203957	0					
ANR	4204311	CallExpression	pj_new ( )		4203957	1					
ANR	4204312	Callee	pj_new		4203957	0					
ANR	4204313	Identifier	pj_new		4203957	0					
ANR	4204314	ArgumentList			4203957	1					
ANR	4204315	ExpressionStatement	pj_o ( pj )	2164:3:64245:64254	4203957	4	True				
ANR	4204316	CallExpression	pj_o ( pj )		4203957	0					
ANR	4204317	Callee	pj_o		4203957	0					
ANR	4204318	Identifier	pj_o		4203957	0					
ANR	4204319	ArgumentList	pj		4203957	1					
ANR	4204320	Argument	pj		4203957	0					
ANR	4204321	Identifier	pj		4203957	0					
ANR	4204322	ExpressionStatement	"pj_k ( pj , ""alias_info"" )"	2165:3:64259:64282	4203957	5	True				
ANR	4204323	CallExpression	"pj_k ( pj , ""alias_info"" )"		4203957	0					
ANR	4204324	Callee	pj_k		4203957	0					
ANR	4204325	Identifier	pj_k		4203957	0					
ANR	4204326	ArgumentList	pj		4203957	1					
ANR	4204327	Argument	pj		4203957	0					
ANR	4204328	Identifier	pj		4203957	0					
ANR	4204329	Argument	"""alias_info"""		4203957	1					
ANR	4204330	PrimaryExpression	"""alias_info"""		4203957	0					
ANR	4204331	ExpressionStatement	pj_a ( pj )	2166:3:64287:64296	4203957	6	True				
ANR	4204332	CallExpression	pj_a ( pj )		4203957	0					
ANR	4204333	Callee	pj_a		4203957	0					
ANR	4204334	Identifier	pj_a		4203957	0					
ANR	4204335	ArgumentList	pj		4203957	1					
ANR	4204336	Argument	pj		4203957	0					
ANR	4204337	Identifier	pj		4203957	0					
ANR	4204338	ForStatement	for ( i = 0 ; i < R_REG_NAME_LAST ; i ++ )		4203957	7					
ANR	4204339	ForInit	i = 0 ;	2167:8:64306:64311	4203957	0	True				
ANR	4204340	AssignmentExpression	i = 0		4203957	0		=			
ANR	4204341	Identifier	i		4203957	0					
ANR	4204342	PrimaryExpression	0		4203957	1					
ANR	4204343	Condition	i < R_REG_NAME_LAST	2167:15:64313:64331	4203957	1	True				
ANR	4204344	RelationalExpression	i < R_REG_NAME_LAST		4203957	0		<			
ANR	4204345	Identifier	i		4203957	0					
ANR	4204346	Identifier	R_REG_NAME_LAST		4203957	1					
ANR	4204347	PostIncDecOperationExpression	i ++	2167:36:64334:64336	4203957	2	True				
ANR	4204348	Identifier	i		4203957	0					
ANR	4204349	IncDec	++		4203957	1					
ANR	4204350	CompoundStatement		70:41:1704:1704	4203957	3					
ANR	4204351	IfStatement	if ( core -> dbg -> reg -> name [ i ] )		4203957	0					
ANR	4204352	Condition	core -> dbg -> reg -> name [ i ]	2168:8:64349:64371	4203957	0	True				
ANR	4204353	ArrayIndexing	core -> dbg -> reg -> name [ i ]		4203957	0					
ANR	4204354	PtrMemberAccess	core -> dbg -> reg -> name		4203957	0					
ANR	4204355	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4204356	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4204357	Identifier	core		4203957	0					
ANR	4204358	Identifier	dbg		4203957	1					
ANR	4204359	Identifier	reg		4203957	1					
ANR	4204360	Identifier	name		4203957	1					
ANR	4204361	Identifier	i		4203957	1					
ANR	4204362	CompoundStatement		71:33:1739:1739	4203957	1					
ANR	4204363	ExpressionStatement	pj_o ( pj )	2169:5:64381:64390	4203957	0	True				
ANR	4204364	CallExpression	pj_o ( pj )		4203957	0					
ANR	4204365	Callee	pj_o		4203957	0					
ANR	4204366	Identifier	pj_o		4203957	0					
ANR	4204367	ArgumentList	pj		4203957	1					
ANR	4204368	Argument	pj		4203957	0					
ANR	4204369	Identifier	pj		4203957	0					
ANR	4204370	ExpressionStatement	"pj_kn ( pj , ""role"" , i )"	2170:5:64397:64418	4203957	1	True				
ANR	4204371	CallExpression	"pj_kn ( pj , ""role"" , i )"		4203957	0					
ANR	4204372	Callee	pj_kn		4203957	0					
ANR	4204373	Identifier	pj_kn		4203957	0					
ANR	4204374	ArgumentList	pj		4203957	1					
ANR	4204375	Argument	pj		4203957	0					
ANR	4204376	Identifier	pj		4203957	0					
ANR	4204377	Argument	"""role"""		4203957	1					
ANR	4204378	PrimaryExpression	"""role"""		4203957	0					
ANR	4204379	Argument	i		4203957	2					
ANR	4204380	Identifier	i		4203957	0					
ANR	4204381	ExpressionStatement	"pj_ks ( pj , ""role_str"" , r_reg_get_role ( i ) )"	2171:5:64425:64467	4203957	2	True				
ANR	4204382	CallExpression	"pj_ks ( pj , ""role_str"" , r_reg_get_role ( i ) )"		4203957	0					
ANR	4204383	Callee	pj_ks		4203957	0					
ANR	4204384	Identifier	pj_ks		4203957	0					
ANR	4204385	ArgumentList	pj		4203957	1					
ANR	4204386	Argument	pj		4203957	0					
ANR	4204387	Identifier	pj		4203957	0					
ANR	4204388	Argument	"""role_str"""		4203957	1					
ANR	4204389	PrimaryExpression	"""role_str"""		4203957	0					
ANR	4204390	Argument	r_reg_get_role ( i )		4203957	2					
ANR	4204391	CallExpression	r_reg_get_role ( i )		4203957	0					
ANR	4204392	Callee	r_reg_get_role		4203957	0					
ANR	4204393	Identifier	r_reg_get_role		4203957	0					
ANR	4204394	ArgumentList	i		4203957	1					
ANR	4204395	Argument	i		4203957	0					
ANR	4204396	Identifier	i		4203957	0					
ANR	4204397	ExpressionStatement	"pj_ks ( pj , ""reg"" , core -> dbg -> reg -> name [ i ] )"	2172:5:64474:64516	4203957	3	True				
ANR	4204398	CallExpression	"pj_ks ( pj , ""reg"" , core -> dbg -> reg -> name [ i ] )"		4203957	0					
ANR	4204399	Callee	pj_ks		4203957	0					
ANR	4204400	Identifier	pj_ks		4203957	0					
ANR	4204401	ArgumentList	pj		4203957	1					
ANR	4204402	Argument	pj		4203957	0					
ANR	4204403	Identifier	pj		4203957	0					
ANR	4204404	Argument	"""reg"""		4203957	1					
ANR	4204405	PrimaryExpression	"""reg"""		4203957	0					
ANR	4204406	Argument	core -> dbg -> reg -> name [ i ]		4203957	2					
ANR	4204407	ArrayIndexing	core -> dbg -> reg -> name [ i ]		4203957	0					
ANR	4204408	PtrMemberAccess	core -> dbg -> reg -> name		4203957	0					
ANR	4204409	PtrMemberAccess	core -> dbg -> reg		4203957	0					
ANR	4204410	PtrMemberAccess	core -> dbg		4203957	0					
ANR	4204411	Identifier	core		4203957	0					
ANR	4204412	Identifier	dbg		4203957	1					
ANR	4204413	Identifier	reg		4203957	1					
ANR	4204414	Identifier	name		4203957	1					
ANR	4204415	Identifier	i		4203957	1					
ANR	4204416	ExpressionStatement	pj_end ( pj )	2173:5:64523:64534	4203957	4	True				
ANR	4204417	CallExpression	pj_end ( pj )		4203957	0					
ANR	4204418	Callee	pj_end		4203957	0					
ANR	4204419	Identifier	pj_end		4203957	0					
ANR	4204420	ArgumentList	pj		4203957	1					
ANR	4204421	Argument	pj		4203957	0					
ANR	4204422	Identifier	pj		4203957	0					
ANR	4204423	ExpressionStatement	pj_end ( pj )	2176:3:64550:64561	4203957	8	True				
ANR	4204424	CallExpression	pj_end ( pj )		4203957	0					
ANR	4204425	Callee	pj_end		4203957	0					
ANR	4204426	Identifier	pj_end		4203957	0					
ANR	4204427	ArgumentList	pj		4203957	1					
ANR	4204428	Argument	pj		4203957	0					
ANR	4204429	Identifier	pj		4203957	0					
ANR	4204430	ExpressionStatement	"pj_k ( pj , ""reg_info"" )"	2177:3:64566:64587	4203957	9	True				
ANR	4204431	CallExpression	"pj_k ( pj , ""reg_info"" )"		4203957	0					
ANR	4204432	Callee	pj_k		4203957	0					
ANR	4204433	Identifier	pj_k		4203957	0					
ANR	4204434	ArgumentList	pj		4203957	1					
ANR	4204435	Argument	pj		4203957	0					
ANR	4204436	Identifier	pj		4203957	0					
ANR	4204437	Argument	"""reg_info"""		4203957	1					
ANR	4204438	PrimaryExpression	"""reg_info"""		4203957	0					
ANR	4204439	ExpressionStatement	pj_a ( pj )	2178:3:64592:64601	4203957	10	True				
ANR	4204440	CallExpression	pj_a ( pj )		4203957	0					
ANR	4204441	Callee	pj_a		4203957	0					
ANR	4204442	Identifier	pj_a		4203957	0					
ANR	4204443	ArgumentList	pj		4203957	1					
ANR	4204444	Argument	pj		4203957	0					
ANR	4204445	Identifier	pj		4203957	0					
ANR	4204446	ForStatement	for ( i = 0 ; i < R_REG_TYPE_LAST ; i ++ )		4203957	11					
ANR	4204447	ForInit	i = 0 ;	2179:8:64611:64616	4203957	0	True				
ANR	4204448	AssignmentExpression	i = 0		4203957	0		=			
ANR	4204449	Identifier	i		4203957	0					
ANR	4204450	PrimaryExpression	0		4203957	1					
ANR	4204451	Condition	i < R_REG_TYPE_LAST	2179:15:64618:64636	4203957	1	True				
ANR	4204452	RelationalExpression	i < R_REG_TYPE_LAST		4203957	0		<			
ANR	4204453	Identifier	i		4203957	0					
ANR	4204454	Identifier	R_REG_TYPE_LAST		4203957	1					
ANR	4204455	PostIncDecOperationExpression	i ++	2179:36:64639:64641	4203957	2	True				
ANR	4204456	Identifier	i		4203957	0					
ANR	4204457	IncDec	++		4203957	1					
ANR	4204458	CompoundStatement		82:41:2009:2009	4203957	3					
ANR	4204459	Statement	r_list_foreach	2180:4:64650:64663	4203957	0	True				
ANR	4204460	Statement	(	2180:19:64665:64665	4203957	1	True				
ANR	4204461	Statement	core	2180:20:64666:64669	4203957	2	True				
ANR	4204462	Statement	->	2180:24:64670:64671	4203957	3	True				
ANR	4204463	Statement	dbg	2180:26:64672:64674	4203957	4	True				
ANR	4204464	Statement	->	2180:29:64675:64676	4203957	5	True				
ANR	4204465	Statement	reg	2180:31:64677:64679	4203957	6	True				
ANR	4204466	Statement	->	2180:34:64680:64681	4203957	7	True				
ANR	4204467	Statement	regset	2180:36:64682:64687	4203957	8	True				
ANR	4204468	Statement	[	2180:42:64688:64688	4203957	9	True				
ANR	4204469	Statement	i	2180:43:64689:64689	4203957	10	True				
ANR	4204470	Statement	]	2180:44:64690:64690	4203957	11	True				
ANR	4204471	Statement	.	2180:45:64691:64691	4203957	12	True				
ANR	4204472	Statement	regs	2180:46:64692:64695	4203957	13	True				
ANR	4204473	Statement	","	2180:50:64696:64696	4203957	14	True				
ANR	4204474	Statement	iter	2180:52:64698:64701	4203957	15	True				
ANR	4204475	Statement	","	2180:56:64702:64702	4203957	16	True				
ANR	4204476	Statement	r	2180:58:64704:64704	4203957	17	True				
ANR	4204477	Statement	)	2180:59:64705:64705	4203957	18	True				
ANR	4204478	CompoundStatement		83:61:2072:2072	4203957	19					
ANR	4204479	ExpressionStatement	pj_o ( pj )	2181:5:64714:64723	4203957	0	True				
ANR	4204480	CallExpression	pj_o ( pj )		4203957	0					
ANR	4204481	Callee	pj_o		4203957	0					
ANR	4204482	Identifier	pj_o		4203957	0					
ANR	4204483	ArgumentList	pj		4203957	1					
ANR	4204484	Argument	pj		4203957	0					
ANR	4204485	Identifier	pj		4203957	0					
ANR	4204486	ExpressionStatement	"pj_kn ( pj , ""type"" , r -> type )"	2182:5:64730:64757	4203957	1	True				
ANR	4204487	CallExpression	"pj_kn ( pj , ""type"" , r -> type )"		4203957	0					
ANR	4204488	Callee	pj_kn		4203957	0					
ANR	4204489	Identifier	pj_kn		4203957	0					
ANR	4204490	ArgumentList	pj		4203957	1					
ANR	4204491	Argument	pj		4203957	0					
ANR	4204492	Identifier	pj		4203957	0					
ANR	4204493	Argument	"""type"""		4203957	1					
ANR	4204494	PrimaryExpression	"""type"""		4203957	0					
ANR	4204495	Argument	r -> type		4203957	2					
ANR	4204496	PtrMemberAccess	r -> type		4203957	0					
ANR	4204497	Identifier	r		4203957	0					
ANR	4204498	Identifier	type		4203957	1					
ANR	4204499	ExpressionStatement	"pj_ks ( pj , ""type_str"" , r_reg_get_type ( r -> type ) )"	2183:5:64764:64812	4203957	2	True				
ANR	4204500	CallExpression	"pj_ks ( pj , ""type_str"" , r_reg_get_type ( r -> type ) )"		4203957	0					
ANR	4204501	Callee	pj_ks		4203957	0					
ANR	4204502	Identifier	pj_ks		4203957	0					
ANR	4204503	ArgumentList	pj		4203957	1					
ANR	4204504	Argument	pj		4203957	0					
ANR	4204505	Identifier	pj		4203957	0					
ANR	4204506	Argument	"""type_str"""		4203957	1					
ANR	4204507	PrimaryExpression	"""type_str"""		4203957	0					
ANR	4204508	Argument	r_reg_get_type ( r -> type )		4203957	2					
ANR	4204509	CallExpression	r_reg_get_type ( r -> type )		4203957	0					
ANR	4204510	Callee	r_reg_get_type		4203957	0					
ANR	4204511	Identifier	r_reg_get_type		4203957	0					
ANR	4204512	ArgumentList	r -> type		4203957	1					
ANR	4204513	Argument	r -> type		4203957	0					
ANR	4204514	PtrMemberAccess	r -> type		4203957	0					
ANR	4204515	Identifier	r		4203957	0					
ANR	4204516	Identifier	type		4203957	1					
ANR	4204517	ExpressionStatement	"pj_ks ( pj , ""name"" , r -> name )"	2184:5:64819:64846	4203957	3	True				
ANR	4204518	CallExpression	"pj_ks ( pj , ""name"" , r -> name )"		4203957	0					
ANR	4204519	Callee	pj_ks		4203957	0					
ANR	4204520	Identifier	pj_ks		4203957	0					
ANR	4204521	ArgumentList	pj		4203957	1					
ANR	4204522	Argument	pj		4203957	0					
ANR	4204523	Identifier	pj		4203957	0					
ANR	4204524	Argument	"""name"""		4203957	1					
ANR	4204525	PrimaryExpression	"""name"""		4203957	0					
ANR	4204526	Argument	r -> name		4203957	2					
ANR	4204527	PtrMemberAccess	r -> name		4203957	0					
ANR	4204528	Identifier	r		4203957	0					
ANR	4204529	Identifier	name		4203957	1					
ANR	4204530	ExpressionStatement	"pj_kn ( pj , ""size"" , r -> size )"	2185:5:64853:64880	4203957	4	True				
ANR	4204531	CallExpression	"pj_kn ( pj , ""size"" , r -> size )"		4203957	0					
ANR	4204532	Callee	pj_kn		4203957	0					
ANR	4204533	Identifier	pj_kn		4203957	0					
ANR	4204534	ArgumentList	pj		4203957	1					
ANR	4204535	Argument	pj		4203957	0					
ANR	4204536	Identifier	pj		4203957	0					
ANR	4204537	Argument	"""size"""		4203957	1					
ANR	4204538	PrimaryExpression	"""size"""		4203957	0					
ANR	4204539	Argument	r -> size		4203957	2					
ANR	4204540	PtrMemberAccess	r -> size		4203957	0					
ANR	4204541	Identifier	r		4203957	0					
ANR	4204542	Identifier	size		4203957	1					
ANR	4204543	ExpressionStatement	"pj_kn ( pj , ""offset"" , r -> offset )"	2186:5:64887:64918	4203957	5	True				
ANR	4204544	CallExpression	"pj_kn ( pj , ""offset"" , r -> offset )"		4203957	0					
ANR	4204545	Callee	pj_kn		4203957	0					
ANR	4204546	Identifier	pj_kn		4203957	0					
ANR	4204547	ArgumentList	pj		4203957	1					
ANR	4204548	Argument	pj		4203957	0					
ANR	4204549	Identifier	pj		4203957	0					
ANR	4204550	Argument	"""offset"""		4203957	1					
ANR	4204551	PrimaryExpression	"""offset"""		4203957	0					
ANR	4204552	Argument	r -> offset		4203957	2					
ANR	4204553	PtrMemberAccess	r -> offset		4203957	0					
ANR	4204554	Identifier	r		4203957	0					
ANR	4204555	Identifier	offset		4203957	1					
ANR	4204556	ExpressionStatement	pj_end ( pj )	2187:5:64925:64936	4203957	6	True				
ANR	4204557	CallExpression	pj_end ( pj )		4203957	0					
ANR	4204558	Callee	pj_end		4203957	0					
ANR	4204559	Identifier	pj_end		4203957	0					
ANR	4204560	ArgumentList	pj		4203957	1					
ANR	4204561	Argument	pj		4203957	0					
ANR	4204562	Identifier	pj		4203957	0					
ANR	4204563	ExpressionStatement	pj_end ( pj )	2190:3:64952:64963	4203957	12	True				
ANR	4204564	CallExpression	pj_end ( pj )		4203957	0					
ANR	4204565	Callee	pj_end		4203957	0					
ANR	4204566	Identifier	pj_end		4203957	0					
ANR	4204567	ArgumentList	pj		4203957	1					
ANR	4204568	Argument	pj		4203957	0					
ANR	4204569	Identifier	pj		4203957	0					
ANR	4204570	ExpressionStatement	pj_end ( pj )	2191:3:64975:64986	4203957	13	True				
ANR	4204571	CallExpression	pj_end ( pj )		4203957	0					
ANR	4204572	Callee	pj_end		4203957	0					
ANR	4204573	Identifier	pj_end		4203957	0					
ANR	4204574	ArgumentList	pj		4203957	1					
ANR	4204575	Argument	pj		4203957	0					
ANR	4204576	Identifier	pj		4203957	0					
ANR	4204577	ExpressionStatement	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"	2192:3:64998:65034	4203957	14	True				
ANR	4204578	CallExpression	"r_cons_printf ( ""%s"" , pj_string ( pj ) )"		4203957	0					
ANR	4204579	Callee	r_cons_printf		4203957	0					
ANR	4204580	Identifier	r_cons_printf		4203957	0					
ANR	4204581	ArgumentList	"""%s"""		4203957	1					
ANR	4204582	Argument	"""%s"""		4203957	0					
ANR	4204583	PrimaryExpression	"""%s"""		4203957	0					
ANR	4204584	Argument	pj_string ( pj )		4203957	1					
ANR	4204585	CallExpression	pj_string ( pj )		4203957	0					
ANR	4204586	Callee	pj_string		4203957	0					
ANR	4204587	Identifier	pj_string		4203957	0					
ANR	4204588	ArgumentList	pj		4203957	1					
ANR	4204589	Argument	pj		4203957	0					
ANR	4204590	Identifier	pj		4203957	0					
ANR	4204591	ExpressionStatement	pj_free ( pj )	2193:3:65039:65051	4203957	15	True				
ANR	4204592	CallExpression	pj_free ( pj )		4203957	0					
ANR	4204593	Callee	pj_free		4203957	0					
ANR	4204594	Identifier	pj_free		4203957	0					
ANR	4204595	ArgumentList	pj		4203957	1					
ANR	4204596	Argument	pj		4203957	0					
ANR	4204597	Identifier	pj		4203957	0					
ANR	4204598	BreakStatement	break ;	2195:2:65059:65064	4203957	19	True				
ANR	4204599	Label	case '?' :	2196:1:65067:65075	4203957	20	True				
ANR	4204600	Label	default :	2197:1:65088:65095	4203957	21	True				
ANR	4204601	Identifier	default		4203957	0					
ANR	4204602	CompoundStatement		104:3:2569:2605	4203957	22					
ANR	4204603	IdentifierDeclStatement	"const char * from_a [ ] = { ""arp"" , ""arpi"" , ""arp."" , ""arpj"" , ""arps"" } ;"	2199:3:65104:65168	4203957	0	True				
ANR	4204604	IdentifierDecl	"* from_a [ ] = { ""arp"" , ""arpi"" , ""arp."" , ""arpj"" , ""arps"" }"		4203957	0					
ANR	4204605	IdentifierDeclType	const char * [ ]		4203957	0					
ANR	4204606	Identifier	from_a		4203957	1					
ANR	4204607	AssignmentExpression	"* from_a [ ] = { ""arp"" , ""arpi"" , ""arp."" , ""arpj"" , ""arps"" }"		4203957	2		=			
ANR	4204608	Identifier	from_a		4203957	0					
ANR	4204609	InitializerList	"""arp"""		4203957	1					
ANR	4204610	PrimaryExpression	"""arp"""		4203957	0					
ANR	4204611	PrimaryExpression	"""arpi"""		4203957	1					
ANR	4204612	PrimaryExpression	"""arp."""		4203957	2					
ANR	4204613	PrimaryExpression	"""arpj"""		4203957	3					
ANR	4204614	PrimaryExpression	"""arps"""		4203957	4					
ANR	4204615	IdentifierDeclStatement	const char * * help_msg = help_msg_drp ;	2201:3:65204:65240	4203957	1	True				
ANR	4204616	IdentifierDecl	* * help_msg = help_msg_drp		4203957	0					
ANR	4204617	IdentifierDeclType	const char * *		4203957	0					
ANR	4204618	Identifier	help_msg		4203957	1					
ANR	4204619	AssignmentExpression	* * help_msg = help_msg_drp		4203957	2		=			
ANR	4204620	Identifier	help_msg_drp		4203957	0					
ANR	4204621	Identifier	help_msg_drp		4203957	1					
ANR	4204622	IfStatement	if ( from == 'a' )		4203957	2					
ANR	4204623	Condition	from == 'a'	2202:7:65249:65259	4203957	0	True				
ANR	4204624	EqualityExpression	from == 'a'		4203957	0		==			
ANR	4204625	Identifier	from		4203957	0					
ANR	4204626	PrimaryExpression	'a'		4203957	1					
ANR	4204627	CompoundStatement		105:20:2627:2627	4203957	1					
ANR	4204628	ExpressionStatement	help_msg [ 1 ] = help_msg [ 3 ] = help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]	2203:4:65268:65333	4203957	0	True				
ANR	4204629	AssignmentExpression	help_msg [ 1 ] = help_msg [ 3 ] = help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]		4203957	0		=			
ANR	4204630	ArrayIndexing	help_msg [ 1 ]		4203957	0					
ANR	4204631	Identifier	help_msg		4203957	0					
ANR	4204632	PrimaryExpression	1		4203957	1					
ANR	4204633	AssignmentExpression	help_msg [ 3 ] = help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]		4203957	1		=			
ANR	4204634	ArrayIndexing	help_msg [ 3 ]		4203957	0					
ANR	4204635	Identifier	help_msg		4203957	0					
ANR	4204636	PrimaryExpression	3		4203957	1					
ANR	4204637	AssignmentExpression	help_msg [ 6 ] = help_msg [ 9 ] = from_a [ 0 ]		4203957	1		=			
ANR	4204638	ArrayIndexing	help_msg [ 6 ]		4203957	0					
ANR	4204639	Identifier	help_msg		4203957	0					
ANR	4204640	PrimaryExpression	6		4203957	1					
ANR	4204641	AssignmentExpression	help_msg [ 9 ] = from_a [ 0 ]		4203957	1		=			
ANR	4204642	ArrayIndexing	help_msg [ 9 ]		4203957	0					
ANR	4204643	Identifier	help_msg		4203957	0					
ANR	4204644	PrimaryExpression	9		4203957	1					
ANR	4204645	ArrayIndexing	from_a [ 0 ]		4203957	1					
ANR	4204646	Identifier	from_a		4203957	0					
ANR	4204647	PrimaryExpression	0		4203957	1					
ANR	4204648	ExpressionStatement	help_msg [ 12 ] = from_a [ 1 ]	2204:4:65339:65363	4203957	1	True				
ANR	4204649	AssignmentExpression	help_msg [ 12 ] = from_a [ 1 ]		4203957	0		=			
ANR	4204650	ArrayIndexing	help_msg [ 12 ]		4203957	0					
ANR	4204651	Identifier	help_msg		4203957	0					
ANR	4204652	PrimaryExpression	12		4203957	1					
ANR	4204653	ArrayIndexing	from_a [ 1 ]		4203957	1					
ANR	4204654	Identifier	from_a		4203957	0					
ANR	4204655	PrimaryExpression	1		4203957	1					
ANR	4204656	ExpressionStatement	help_msg [ 15 ] = from_a [ 2 ]	2205:4:65369:65393	4203957	2	True				
ANR	4204657	AssignmentExpression	help_msg [ 15 ] = from_a [ 2 ]		4203957	0		=			
ANR	4204658	ArrayIndexing	help_msg [ 15 ]		4203957	0					
ANR	4204659	Identifier	help_msg		4203957	0					
ANR	4204660	PrimaryExpression	15		4203957	1					
ANR	4204661	ArrayIndexing	from_a [ 2 ]		4203957	1					
ANR	4204662	Identifier	from_a		4203957	0					
ANR	4204663	PrimaryExpression	2		4203957	1					
ANR	4204664	ExpressionStatement	help_msg [ 18 ] = from_a [ 3 ]	2206:4:65399:65423	4203957	3	True				
ANR	4204665	AssignmentExpression	help_msg [ 18 ] = from_a [ 3 ]		4203957	0		=			
ANR	4204666	ArrayIndexing	help_msg [ 18 ]		4203957	0					
ANR	4204667	Identifier	help_msg		4203957	0					
ANR	4204668	PrimaryExpression	18		4203957	1					
ANR	4204669	ArrayIndexing	from_a [ 3 ]		4203957	1					
ANR	4204670	Identifier	from_a		4203957	0					
ANR	4204671	PrimaryExpression	3		4203957	1					
ANR	4204672	ExpressionStatement	help_msg [ 21 ] = from_a [ 4 ]	2207:4:65429:65453	4203957	4	True				
ANR	4204673	AssignmentExpression	help_msg [ 21 ] = from_a [ 4 ]		4203957	0		=			
ANR	4204674	ArrayIndexing	help_msg [ 21 ]		4203957	0					
ANR	4204675	Identifier	help_msg		4203957	0					
ANR	4204676	PrimaryExpression	21		4203957	1					
ANR	4204677	ArrayIndexing	from_a [ 4 ]		4203957	1					
ANR	4204678	Identifier	from_a		4203957	0					
ANR	4204679	PrimaryExpression	4		4203957	1					
ANR	4204680	ExpressionStatement	"r_core_cmd_help ( core , help_msg )"	2209:3:65463:65495	4203957	3	True				
ANR	4204681	CallExpression	"r_core_cmd_help ( core , help_msg )"		4203957	0					
ANR	4204682	Callee	r_core_cmd_help		4203957	0					
ANR	4204683	Identifier	r_core_cmd_help		4203957	0					
ANR	4204684	ArgumentList	core		4203957	1					
ANR	4204685	Argument	core		4203957	0					
ANR	4204686	Identifier	core		4203957	0					
ANR	4204687	Argument	help_msg		4203957	1					
ANR	4204688	Identifier	help_msg		4203957	0					
ANR	4204689	BreakStatement	break ;	2210:3:65500:65505	4203957	4	True				
ANR	4204690	ReturnType	static void		4203957	1					
ANR	4204691	Identifier	cmd_reg_profile		4203957	2					
ANR	4204692	ParameterList	"RCore * core , char from , const char * str"		4203957	3					
ANR	4204693	Parameter	RCore * core	2098:29:62593:62603	4203957	0	True				
ANR	4204694	ParameterType	RCore *		4203957	0					
ANR	4204695	Identifier	core		4203957	1					
ANR	4204696	Parameter	char from	2098:42:62606:62614	4203957	1	True				
ANR	4204697	ParameterType	char		4203957	0					
ANR	4204698	Identifier	from		4203957	1					
ANR	4204699	Parameter	const char * str	2098:53:62617:62631	4203957	2	True				
ANR	4204700	ParameterType	const char *		4203957	0					
ANR	4204701	Identifier	str		4203957	1					
ANR	4204702	CFGEntryNode	ENTRY		4203957		True				
ANR	4204703	CFGExitNode	EXIT		4203957		True				
ANR	4204704	Symbol	* from_a		4203957						
ANR	4204705	Symbol	pj_string		4203957						
ANR	4204706	Symbol	from_a		4203957						
ANR	4204707	Symbol	r_reg_get_type		4203957						
ANR	4204708	Symbol	arena		4203957						
ANR	4204709	Symbol	r_reg_regset_get		4203957						
ANR	4204710	Symbol	newbytes		4203957						
ANR	4204711	Symbol	R_REG_NAME_LAST		4203957						
ANR	4204712	Symbol	* * core -> dbg -> reg		4203957						
ANR	4204713	Symbol	* core -> dbg -> reg		4203957						
ANR	4204714	Symbol	* ptr		4203957						
ANR	4204715	Symbol	help_msg_drp		4203957						
ANR	4204716	Symbol	from		4203957						
ANR	4204717	Symbol	arena -> bytes		4203957						
ANR	4204718	Symbol	core -> num		4203957						
ANR	4204719	Symbol	r -> offset		4203957						
ANR	4204720	Symbol	core -> dbg -> reg -> name		4203957						
ANR	4204721	Symbol	isspace		4203957						
ANR	4204722	Symbol	iter		4203957						
ANR	4204723	Symbol	R_REG_TYPE_LAST		4203957						
ANR	4204724	Symbol	arena -> size		4203957						
ANR	4204725	Symbol	* * rs		4203957						
ANR	4204726	Symbol	str		4203957						
ANR	4204727	Symbol	core		4203957						
ANR	4204728	Symbol	* * * core		4203957						
ANR	4204729	Symbol	* help_msg		4203957						
ANR	4204730	Symbol	rs -> arena		4203957						
ANR	4204731	Symbol	r -> name		4203957						
ANR	4204732	Symbol	* core -> dbg -> reg -> name		4203957						
ANR	4204733	Symbol	* core -> dbg		4203957						
ANR	4204734	Symbol	r -> size		4203957						
ANR	4204735	Symbol	rs		4203957						
ANR	4204736	Symbol	r -> type		4203957						
ANR	4204737	Symbol	rs -> arena -> size		4203957						
ANR	4204738	Symbol	* core		4203957						
ANR	4204739	Symbol	calloc		4203957						
ANR	4204740	Symbol	r_reg_get_role		4203957						
ANR	4204741	Symbol	r_num_math		4203957						
ANR	4204742	Symbol	* * * core -> dbg		4203957						
ANR	4204743	Symbol	* str		4203957						
ANR	4204744	Symbol	* * * * core		4203957						
ANR	4204745	Symbol	* * core		4203957						
ANR	4204746	Symbol	R_REG_TYPE_GPR		4203957						
ANR	4204747	Symbol	r_str_startswith		4203957						
ANR	4204748	Symbol	* rs		4203957						
ANR	4204749	Symbol	i		4203957						
ANR	4204750	Symbol	n		4203957						
ANR	4204751	Symbol	ptr		4203957						
ANR	4204752	Symbol	help_msg		4203957						
ANR	4204753	Symbol	r		4203957						
ANR	4204754	Symbol	core -> dbg -> reg -> reg_profile_str		4203957						
ANR	4204755	Symbol	* i		4203957						
ANR	4204756	Symbol	* rs -> arena		4203957						
ANR	4204757	Symbol	core -> dbg -> reg		4203957						
ANR	4204758	Symbol	pj		4203957						
ANR	4204759	Symbol	pj_new		4203957						
ANR	4204760	Symbol	* arena		4203957						
ANR	4204761	Symbol	* r		4203957						
ANR	4204762	Symbol	core -> dbg		4203957						
ANR	4204763	Symbol	* * core -> dbg		4203957						
ANR	4204764	Function	showreg	2217:0:65524:66516							
ANR	4204765	FunctionDef	"showreg (RCore * core , const char * str , bool use_color)"		4204764	0					
ANR	4204766	CompoundStatement		2217:65:65589:66516	4204764	0					
ANR	4204767	IdentifierDeclStatement	ut64 off ;	2218:1:65592:65600	4204764	0	True				
ANR	4204768	IdentifierDecl	off		4204764	0					
ANR	4204769	IdentifierDeclType	ut64		4204764	0					
ANR	4204770	Identifier	off		4204764	1					
ANR	4204771	IdentifierDeclStatement	utX value ;	2219:1:65603:65612	4204764	1	True				
ANR	4204772	IdentifierDecl	value		4204764	0					
ANR	4204773	IdentifierDeclType	utX		4204764	0					
ANR	4204774	Identifier	value		4204764	1					
ANR	4204775	IdentifierDeclStatement	int err ;	2220:1:65615:65622	4204764	2	True				
ANR	4204776	IdentifierDecl	err		4204764	0					
ANR	4204777	IdentifierDeclType	int		4204764	0					
ANR	4204778	Identifier	err		4204764	1					
ANR	4204779	IdentifierDeclStatement	int bits = atoi ( str ) ;	2221:1:65625:65646	4204764	3	True				
ANR	4204780	IdentifierDecl	bits = atoi ( str )		4204764	0					
ANR	4204781	IdentifierDeclType	int		4204764	0					
ANR	4204782	Identifier	bits		4204764	1					
ANR	4204783	AssignmentExpression	bits = atoi ( str )		4204764	2		=			
ANR	4204784	Identifier	bits		4204764	0					
ANR	4204785	CallExpression	atoi ( str )		4204764	1					
ANR	4204786	Callee	atoi		4204764	0					
ANR	4204787	Identifier	atoi		4204764	0					
ANR	4204788	ArgumentList	str		4204764	1					
ANR	4204789	Argument	str		4204764	0					
ANR	4204790	Identifier	str		4204764	0					
ANR	4204791	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	2222:1:65649:65700	4204764	4	True				
ANR	4204792	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		4204764	0					
ANR	4204793	Callee	r_debug_reg_sync		4204764	0					
ANR	4204794	Identifier	r_debug_reg_sync		4204764	0					
ANR	4204795	ArgumentList	core -> dbg		4204764	1					
ANR	4204796	Argument	core -> dbg		4204764	0					
ANR	4204797	PtrMemberAccess	core -> dbg		4204764	0					
ANR	4204798	Identifier	core		4204764	0					
ANR	4204799	Identifier	dbg		4204764	1					
ANR	4204800	Argument	R_REG_TYPE_ALL		4204764	1					
ANR	4204801	Identifier	R_REG_TYPE_ALL		4204764	0					
ANR	4204802	Argument	false		4204764	2					
ANR	4204803	Identifier	false		4204764	0					
ANR	4204804	IfStatement	if ( bits )		4204764	5					
ANR	4204805	Condition	bits	2223:5:65733:65736	4204764	0	True				
ANR	4204806	Identifier	bits		4204764	0					
ANR	4204807	CompoundStatement		7:11:149:149	4204764	1					
ANR	4204808	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , str [ 0 ] , use_color ? Color_GREEN : NULL )"	2224:2:65743:65831	4204764	0	True				
ANR	4204809	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , str [ 0 ] , use_color ? Color_GREEN : NULL )"		4204764	0					
ANR	4204810	Callee	r_debug_reg_list		4204764	0					
ANR	4204811	Identifier	r_debug_reg_list		4204764	0					
ANR	4204812	ArgumentList	core -> dbg		4204764	1					
ANR	4204813	Argument	core -> dbg		4204764	0					
ANR	4204814	PtrMemberAccess	core -> dbg		4204764	0					
ANR	4204815	Identifier	core		4204764	0					
ANR	4204816	Identifier	dbg		4204764	1					
ANR	4204817	Argument	R_REG_TYPE_GPR		4204764	1					
ANR	4204818	Identifier	R_REG_TYPE_GPR		4204764	0					
ANR	4204819	Argument	bits		4204764	2					
ANR	4204820	Identifier	bits		4204764	0					
ANR	4204821	Argument	str [ 0 ]		4204764	3					
ANR	4204822	ArrayIndexing	str [ 0 ]		4204764	0					
ANR	4204823	Identifier	str		4204764	0					
ANR	4204824	PrimaryExpression	0		4204764	1					
ANR	4204825	Argument	use_color ? Color_GREEN : NULL		4204764	4					
ANR	4204826	ConditionalExpression	use_color ? Color_GREEN : NULL		4204764	0					
ANR	4204827	Condition	use_color		4204764	0					
ANR	4204828	Identifier	use_color		4204764	0					
ANR	4204829	Identifier	Color_GREEN		4204764	1					
ANR	4204830	Identifier	NULL		4204764	2					
ANR	4204831	ElseStatement	else		4204764	0					
ANR	4204832	CompoundStatement		9:8:251:251	4204764	0					
ANR	4204833	ExpressionStatement	"off = r_debug_reg_get_err ( core -> dbg , str + 1 , & err , & value )"	2226:2:65845:65905	4204764	0	True				
ANR	4204834	AssignmentExpression	"off = r_debug_reg_get_err ( core -> dbg , str + 1 , & err , & value )"		4204764	0		=			
ANR	4204835	Identifier	off		4204764	0					
ANR	4204836	CallExpression	"r_debug_reg_get_err ( core -> dbg , str + 1 , & err , & value )"		4204764	1					
ANR	4204837	Callee	r_debug_reg_get_err		4204764	0					
ANR	4204838	Identifier	r_debug_reg_get_err		4204764	0					
ANR	4204839	ArgumentList	core -> dbg		4204764	1					
ANR	4204840	Argument	core -> dbg		4204764	0					
ANR	4204841	PtrMemberAccess	core -> dbg		4204764	0					
ANR	4204842	Identifier	core		4204764	0					
ANR	4204843	Identifier	dbg		4204764	1					
ANR	4204844	Argument	str + 1		4204764	1					
ANR	4204845	AdditiveExpression	str + 1		4204764	0		+			
ANR	4204846	Identifier	str		4204764	0					
ANR	4204847	PrimaryExpression	1		4204764	1					
ANR	4204848	Argument	& err		4204764	2					
ANR	4204849	UnaryOperationExpression	& err		4204764	0					
ANR	4204850	UnaryOperator	&		4204764	0					
ANR	4204851	Identifier	err		4204764	1					
ANR	4204852	Argument	& value		4204764	3					
ANR	4204853	UnaryOperationExpression	& value		4204764	0					
ANR	4204854	UnaryOperator	&		4204764	0					
ANR	4204855	Identifier	value		4204764	1					
ANR	4204856	ExpressionStatement	core -> num -> value = off	2227:2:65909:65931	4204764	1	True				
ANR	4204857	AssignmentExpression	core -> num -> value = off		4204764	0		=			
ANR	4204858	PtrMemberAccess	core -> num -> value		4204764	0					
ANR	4204859	PtrMemberAccess	core -> num		4204764	0					
ANR	4204860	Identifier	core		4204764	0					
ANR	4204861	Identifier	num		4204764	1					
ANR	4204862	Identifier	value		4204764	1					
ANR	4204863	Identifier	off		4204764	1					
ANR	4204864	SwitchStatement	switch ( err )		4204764	2					
ANR	4204865	Condition	err	2228:10:65943:65945	4204764	0	True				
ANR	4204866	Identifier	err		4204764	0					
ANR	4204867	CompoundStatement		12:15:358:358	4204764	1					
ANR	4204868	Label	case 0 :	2229:2:65952:65958	4204764	0	True				
ANR	4204869	Statement	r_cons_printf	2230:3:65963:65975	4204764	1	True				
ANR	4204870	Statement	(	2230:17:65977:65977	4204764	2	True				
ANR	4204871	Statement	"""0x%08"""	2230:18:65978:65984	4204764	3	True				
ANR	4204872	Statement	PFMT64x	2230:25:65985:65991	4204764	4	True				
ANR	4204873	Statement	"""\\n"""	2230:32:65992:65995	4204764	5	True				
ANR	4204874	Statement	","	2230:36:65996:65996	4204764	6	True				
ANR	4204875	Statement	off	2230:38:65998:66000	4204764	7	True				
ANR	4204876	Statement	)	2230:41:66001:66001	4204764	8	True				
ANR	4204877	ExpressionStatement		2230:42:66002:66002	4204764	9	True				
ANR	4204878	BreakStatement	break ;	2231:3:66007:66012	4204764	10	True				
ANR	4204879	Label	case 1 :	2232:2:66016:66022	4204764	11	True				
ANR	4204880	ExpressionStatement	"r_cons_printf ( ""Unknown register '%s'\\n"" , str + 1 )"	2233:3:66027:66077	4204764	12	True				
ANR	4204881	CallExpression	"r_cons_printf ( ""Unknown register '%s'\\n"" , str + 1 )"		4204764	0					
ANR	4204882	Callee	r_cons_printf		4204764	0					
ANR	4204883	Identifier	r_cons_printf		4204764	0					
ANR	4204884	ArgumentList	"""Unknown register '%s'\\n"""		4204764	1					
ANR	4204885	Argument	"""Unknown register '%s'\\n"""		4204764	0					
ANR	4204886	PrimaryExpression	"""Unknown register '%s'\\n"""		4204764	0					
ANR	4204887	Argument	str + 1		4204764	1					
ANR	4204888	AdditiveExpression	str + 1		4204764	0		+			
ANR	4204889	Identifier	str		4204764	0					
ANR	4204890	PrimaryExpression	1		4204764	1					
ANR	4204891	BreakStatement	break ;	2234:3:66082:66087	4204764	13	True				
ANR	4204892	Label	case 80 :	2235:2:66091:66098	4204764	14	True				
ANR	4204893	Statement	r_cons_printf	2236:3:66103:66115	4204764	15	True				
ANR	4204894	Statement	(	2236:17:66117:66117	4204764	16	True				
ANR	4204895	Statement	"""0x%04x%016"""	2236:18:66118:66129	4204764	17	True				
ANR	4204896	Statement	PFMT64x	2236:30:66130:66136	4204764	18	True				
ANR	4204897	Statement	"""\\n"""	2236:37:66137:66140	4204764	19	True				
ANR	4204898	Statement	","	2236:41:66141:66141	4204764	20	True				
ANR	4204899	Statement	value	2236:43:66143:66147	4204764	21	True				
ANR	4204900	Statement	.	2236:48:66148:66148	4204764	22	True				
ANR	4204901	Statement	v80	2236:49:66149:66151	4204764	23	True				
ANR	4204902	Statement	.	2236:52:66152:66152	4204764	24	True				
ANR	4204903	Statement	High	2236:53:66153:66156	4204764	25	True				
ANR	4204904	Statement	","	2236:57:66157:66157	4204764	26	True				
ANR	4204905	Statement	value	2236:59:66159:66163	4204764	27	True				
ANR	4204906	Statement	.	2236:64:66164:66164	4204764	28	True				
ANR	4204907	Statement	v80	2236:65:66165:66167	4204764	29	True				
ANR	4204908	Statement	.	2236:68:66168:66168	4204764	30	True				
ANR	4204909	Statement	Low	2236:69:66169:66171	4204764	31	True				
ANR	4204910	Statement	)	2236:72:66172:66172	4204764	32	True				
ANR	4204911	ExpressionStatement		2236:73:66173:66173	4204764	33	True				
ANR	4204912	BreakStatement	break ;	2237:3:66178:66183	4204764	34	True				
ANR	4204913	Label	case 96 :	2238:2:66187:66194	4204764	35	True				
ANR	4204914	Statement	r_cons_printf	2239:3:66199:66211	4204764	36	True				
ANR	4204915	Statement	(	2239:17:66213:66213	4204764	37	True				
ANR	4204916	Statement	"""0x%08x%016"""	2239:18:66214:66225	4204764	38	True				
ANR	4204917	Statement	PFMT64x	2239:30:66226:66232	4204764	39	True				
ANR	4204918	Statement	"""\\n"""	2239:37:66233:66236	4204764	40	True				
ANR	4204919	Statement	","	2239:41:66237:66237	4204764	41	True				
ANR	4204920	Statement	value	2239:43:66239:66243	4204764	42	True				
ANR	4204921	Statement	.	2239:48:66244:66244	4204764	43	True				
ANR	4204922	Statement	v96	2239:49:66245:66247	4204764	44	True				
ANR	4204923	Statement	.	2239:52:66248:66248	4204764	45	True				
ANR	4204924	Statement	High	2239:53:66249:66252	4204764	46	True				
ANR	4204925	Statement	","	2239:57:66253:66253	4204764	47	True				
ANR	4204926	Statement	value	2239:59:66255:66259	4204764	48	True				
ANR	4204927	Statement	.	2239:64:66260:66260	4204764	49	True				
ANR	4204928	Statement	v96	2239:65:66261:66263	4204764	50	True				
ANR	4204929	Statement	.	2239:68:66264:66264	4204764	51	True				
ANR	4204930	Statement	Low	2239:69:66265:66267	4204764	52	True				
ANR	4204931	Statement	)	2239:72:66268:66268	4204764	53	True				
ANR	4204932	ExpressionStatement		2239:73:66269:66269	4204764	54	True				
ANR	4204933	BreakStatement	break ;	2240:3:66274:66279	4204764	55	True				
ANR	4204934	Label	case 128 :	2241:2:66283:66291	4204764	56	True				
ANR	4204935	Statement	r_cons_printf	2242:3:66296:66308	4204764	57	True				
ANR	4204936	Statement	(	2242:17:66310:66310	4204764	58	True				
ANR	4204937	Statement	"""0x%016"""	2242:18:66311:66318	4204764	59	True				
ANR	4204938	Statement	PFMT64x	2242:26:66319:66325	4204764	60	True				
ANR	4204939	Statement	"""%016"""	2242:33:66326:66331	4204764	61	True				
ANR	4204940	Statement	PFMT64x	2242:39:66332:66338	4204764	62	True				
ANR	4204941	Statement	"""\\n"""	2242:46:66339:66342	4204764	63	True				
ANR	4204942	Statement	","	2242:50:66343:66343	4204764	64	True				
ANR	4204943	Statement	value	2242:52:66345:66349	4204764	65	True				
ANR	4204944	Statement	.	2242:57:66350:66350	4204764	66	True				
ANR	4204945	Statement	v128	2242:58:66351:66354	4204764	67	True				
ANR	4204946	Statement	.	2242:62:66355:66355	4204764	68	True				
ANR	4204947	Statement	High	2242:63:66356:66359	4204764	69	True				
ANR	4204948	Statement	","	2242:67:66360:66360	4204764	70	True				
ANR	4204949	Statement	value	2242:69:66362:66366	4204764	71	True				
ANR	4204950	Statement	.	2242:74:66367:66367	4204764	72	True				
ANR	4204951	Statement	v128	2242:75:66368:66371	4204764	73	True				
ANR	4204952	Statement	.	2242:79:66372:66372	4204764	74	True				
ANR	4204953	Statement	Low	2242:80:66373:66375	4204764	75	True				
ANR	4204954	Statement	)	2242:83:66376:66376	4204764	76	True				
ANR	4204955	ExpressionStatement		2242:84:66377:66377	4204764	77	True				
ANR	4204956	BreakStatement	break ;	2243:3:66382:66387	4204764	78	True				
ANR	4204957	Label	default :	2244:2:66391:66398	4204764	79	True				
ANR	4204958	Identifier	default		4204764	0					
ANR	4204959	ExpressionStatement	"r_cons_printf ( ""Error %i while retrieving '%s' \\n"" , err , str + 1 )"	2245:3:66403:66468	4204764	80	True				
ANR	4204960	CallExpression	"r_cons_printf ( ""Error %i while retrieving '%s' \\n"" , err , str + 1 )"		4204764	0					
ANR	4204961	Callee	r_cons_printf		4204764	0					
ANR	4204962	Identifier	r_cons_printf		4204764	0					
ANR	4204963	ArgumentList	"""Error %i while retrieving '%s' \\n"""		4204764	1					
ANR	4204964	Argument	"""Error %i while retrieving '%s' \\n"""		4204764	0					
ANR	4204965	PrimaryExpression	"""Error %i while retrieving '%s' \\n"""		4204764	0					
ANR	4204966	Argument	err		4204764	1					
ANR	4204967	Identifier	err		4204764	0					
ANR	4204968	Argument	str + 1		4204764	2					
ANR	4204969	AdditiveExpression	str + 1		4204764	0		+			
ANR	4204970	Identifier	str		4204764	0					
ANR	4204971	PrimaryExpression	1		4204764	1					
ANR	4204972	ExpressionStatement	core -> num -> value = 0	2246:3:66473:66493	4204764	81	True				
ANR	4204973	AssignmentExpression	core -> num -> value = 0		4204764	0		=			
ANR	4204974	PtrMemberAccess	core -> num -> value		4204764	0					
ANR	4204975	PtrMemberAccess	core -> num		4204764	0					
ANR	4204976	Identifier	core		4204764	0					
ANR	4204977	Identifier	num		4204764	1					
ANR	4204978	Identifier	value		4204764	1					
ANR	4204979	PrimaryExpression	0		4204764	1					
ANR	4204980	ReturnStatement	return bits ;	2249:1:66503:66514	4204764	6	True				
ANR	4204981	Identifier	bits		4204764	0					
ANR	4204982	ReturnType	static int		4204764	1					
ANR	4204983	Identifier	showreg		4204764	2					
ANR	4204984	ParameterList	"RCore * core , const char * str , bool use_color"		4204764	3					
ANR	4204985	Parameter	RCore * core	2217:19:65543:65553	4204764	0	True				
ANR	4204986	ParameterType	RCore *		4204764	0					
ANR	4204987	Identifier	core		4204764	1					
ANR	4204988	Parameter	const char * str	2217:32:65556:65570	4204764	1	True				
ANR	4204989	ParameterType	const char *		4204764	0					
ANR	4204990	Identifier	str		4204764	1					
ANR	4204991	Parameter	bool use_color	2217:49:65573:65586	4204764	2	True				
ANR	4204992	ParameterType	bool		4204764	0					
ANR	4204993	Identifier	use_color		4204764	1					
ANR	4204994	CFGEntryNode	ENTRY		4204764		True				
ANR	4204995	CFGExitNode	EXIT		4204764		True				
ANR	4204996	Symbol	atoi		4204764						
ANR	4204997	Symbol	Color_GREEN		4204764						
ANR	4204998	Symbol	NULL		4204764						
ANR	4204999	Symbol	& value		4204764						
ANR	4205000	Symbol	err		4204764						
ANR	4205001	Symbol	r_debug_reg_get_err		4204764						
ANR	4205002	Symbol	bits		4204764						
ANR	4205003	Symbol	false		4204764						
ANR	4205004	Symbol	* core		4204764						
ANR	4205005	Symbol	core -> num -> value		4204764						
ANR	4205006	Symbol	& err		4204764						
ANR	4205007	Symbol	use_color		4204764						
ANR	4205008	Symbol	off		4204764						
ANR	4205009	Symbol	str		4204764						
ANR	4205010	Symbol	core		4204764						
ANR	4205011	Symbol	R_REG_TYPE_ALL		4204764						
ANR	4205012	Symbol	* core -> num		4204764						
ANR	4205013	Symbol	* str		4204764						
ANR	4205014	Symbol	core -> num		4204764						
ANR	4205015	Symbol	value		4204764						
ANR	4205016	Symbol	R_REG_TYPE_GPR		4204764						
ANR	4205017	Symbol	* * core		4204764						
ANR	4205018	Symbol	core -> dbg		4204764						
ANR	4205019	Function	cmd_debug_reg	2253:0:66526:82723							
ANR	4205020	FunctionDef	"cmd_debug_reg (RCore * core , const char * str)"		4205019	0					
ANR	4205021	CompoundStatement		2253:56:66582:82723	4205019	0					
ANR	4205022	IdentifierDeclStatement	char * arg ;	2254:1:66585:66594	4205019	0	True				
ANR	4205023	IdentifierDecl	* arg		4205019	0					
ANR	4205024	IdentifierDeclType	char *		4205019	0					
ANR	4205025	Identifier	arg		4205019	1					
ANR	4205026	IdentifierDeclStatement	struct r_reg_item_t * r ;	2255:1:66597:66619	4205019	1	True				
ANR	4205027	IdentifierDecl	* r		4205019	0					
ANR	4205028	IdentifierDeclType	struct r_reg_item_t *		4205019	0					
ANR	4205029	Identifier	r		4205019	1					
ANR	4205030	IdentifierDeclStatement	"const char * name , * use_color ;"	2256:1:66622:66650	4205019	2	True				
ANR	4205031	IdentifierDecl	* name		4205019	0					
ANR	4205032	IdentifierDeclType	const char *		4205019	0					
ANR	4205033	Identifier	name		4205019	1					
ANR	4205034	IdentifierDecl	* use_color		4205019	1					
ANR	4205035	IdentifierDeclType	const char *		4205019	0					
ANR	4205036	Identifier	use_color		4205019	1					
ANR	4205037	IdentifierDeclStatement	"int size , i , type = R_REG_TYPE_GPR ;"	2257:1:66653:66687	4205019	3	True				
ANR	4205038	IdentifierDecl	size		4205019	0					
ANR	4205039	IdentifierDeclType	int		4205019	0					
ANR	4205040	Identifier	size		4205019	1					
ANR	4205041	IdentifierDecl	i		4205019	1					
ANR	4205042	IdentifierDeclType	int		4205019	0					
ANR	4205043	Identifier	i		4205019	1					
ANR	4205044	IdentifierDecl	type = R_REG_TYPE_GPR		4205019	2					
ANR	4205045	IdentifierDeclType	int		4205019	0					
ANR	4205046	Identifier	type		4205019	1					
ANR	4205047	AssignmentExpression	type = R_REG_TYPE_GPR		4205019	2		=			
ANR	4205048	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4205049	Identifier	R_REG_TYPE_GPR		4205019	1					
ANR	4205050	IdentifierDeclStatement	int bits = ( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32 ;	2258:1:66690:66742	4205019	4	True				
ANR	4205051	IdentifierDecl	bits = ( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32		4205019	0					
ANR	4205052	IdentifierDeclType	int		4205019	0					
ANR	4205053	Identifier	bits		4205019	1					
ANR	4205054	AssignmentExpression	bits = ( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32		4205019	2		=			
ANR	4205055	Identifier	bits		4205019	0					
ANR	4205056	ConditionalExpression	( core -> dbg -> bits & R_SYS_BITS_64 ) ? 64 : 32		4205019	1					
ANR	4205057	Condition	core -> dbg -> bits & R_SYS_BITS_64		4205019	0					
ANR	4205058	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_64		4205019	0		&			
ANR	4205059	PtrMemberAccess	core -> dbg -> bits		4205019	0					
ANR	4205060	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205061	Identifier	core		4205019	0					
ANR	4205062	Identifier	dbg		4205019	1					
ANR	4205063	Identifier	bits		4205019	1					
ANR	4205064	Identifier	R_SYS_BITS_64		4205019	1					
ANR	4205065	PrimaryExpression	64		4205019	1					
ANR	4205066	PrimaryExpression	32		4205019	2					
ANR	4205067	IdentifierDeclStatement	"int use_colors = r_config_get_i ( core -> config , ""scr.color"" ) ;"	2259:1:66745:66804	4205019	5	True				
ANR	4205068	IdentifierDecl	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		4205019	0					
ANR	4205069	IdentifierDeclType	int		4205019	0					
ANR	4205070	Identifier	use_colors		4205019	1					
ANR	4205071	AssignmentExpression	"use_colors = r_config_get_i ( core -> config , ""scr.color"" )"		4205019	2		=			
ANR	4205072	Identifier	use_colors		4205019	0					
ANR	4205073	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		4205019	1					
ANR	4205074	Callee	r_config_get_i		4205019	0					
ANR	4205075	Identifier	r_config_get_i		4205019	0					
ANR	4205076	ArgumentList	core -> config		4205019	1					
ANR	4205077	Argument	core -> config		4205019	0					
ANR	4205078	PtrMemberAccess	core -> config		4205019	0					
ANR	4205079	Identifier	core		4205019	0					
ANR	4205080	Identifier	config		4205019	1					
ANR	4205081	Argument	"""scr.color"""		4205019	1					
ANR	4205082	PrimaryExpression	"""scr.color"""		4205019	0					
ANR	4205083	IdentifierDeclStatement	"int newbits = atoi ( ( str && * str ) ? str + 1 : """" ) ;"	2260:1:66807:66852	4205019	6	True				
ANR	4205084	IdentifierDecl	"newbits = atoi ( ( str && * str ) ? str + 1 : """" )"		4205019	0					
ANR	4205085	IdentifierDeclType	int		4205019	0					
ANR	4205086	Identifier	newbits		4205019	1					
ANR	4205087	AssignmentExpression	"newbits = atoi ( ( str && * str ) ? str + 1 : """" )"		4205019	2		=			
ANR	4205088	Identifier	newbits		4205019	0					
ANR	4205089	CallExpression	"atoi ( ( str && * str ) ? str + 1 : """" )"		4205019	1					
ANR	4205090	Callee	atoi		4205019	0					
ANR	4205091	Identifier	atoi		4205019	0					
ANR	4205092	ArgumentList	"( str && * str ) ? str + 1 : """""		4205019	1					
ANR	4205093	Argument	"( str && * str ) ? str + 1 : """""		4205019	0					
ANR	4205094	ConditionalExpression	"( str && * str ) ? str + 1 : """""		4205019	0					
ANR	4205095	Condition	str && * str		4205019	0					
ANR	4205096	AndExpression	str && * str		4205019	0		&&			
ANR	4205097	Identifier	str		4205019	0					
ANR	4205098	UnaryOperationExpression	* str		4205019	1					
ANR	4205099	UnaryOperator	*		4205019	0					
ANR	4205100	Identifier	str		4205019	1					
ANR	4205101	AdditiveExpression	str + 1		4205019	1		+			
ANR	4205102	Identifier	str		4205019	0					
ANR	4205103	PrimaryExpression	1		4205019	1					
ANR	4205104	PrimaryExpression	""""""		4205019	2					
ANR	4205105	IfStatement	if ( newbits > 0 )		4205019	7					
ANR	4205106	Condition	newbits > 0	2261:5:66859:66869	4205019	0	True				
ANR	4205107	RelationalExpression	newbits > 0		4205019	0		>			
ANR	4205108	Identifier	newbits		4205019	0					
ANR	4205109	PrimaryExpression	0		4205019	1					
ANR	4205110	CompoundStatement		9:18:289:289	4205019	1					
ANR	4205111	ExpressionStatement	bits = newbits	2262:2:66876:66890	4205019	0	True				
ANR	4205112	AssignmentExpression	bits = newbits		4205019	0		=			
ANR	4205113	Identifier	bits		4205019	0					
ANR	4205114	Identifier	newbits		4205019	1					
ANR	4205115	IfStatement	if ( use_colors )		4205019	8					
ANR	4205116	Condition	use_colors	2264:5:66900:66909	4205019	0	True				
ANR	4205117	Identifier	use_colors		4205019	0					
ANR	4205118	CompoundStatement		12:17:329:329	4205019	1					
ANR	4205119	Statement	undef	2265:1:66915:66919	4205019	0	True				
ANR	4205120	Statement	ConsP	2265:7:66921:66925	4205019	1	True				
ANR	4205121	Statement	define	2266:1:66928:66933	4205019	2	True				
ANR	4205122	Statement	ConsP	2266:8:66935:66939	4205019	3	True				
ANR	4205123	Statement	(	2266:13:66940:66940	4205019	4	True				
ANR	4205124	Statement	x	2266:14:66941:66941	4205019	5	True				
ANR	4205125	Statement	)	2266:15:66942:66942	4205019	6	True				
ANR	4205126	Statement	(	2266:17:66944:66944	4205019	7	True				
ANR	4205127	Statement	core	2266:18:66945:66948	4205019	8	True				
ANR	4205128	Statement	->	2266:22:66949:66950	4205019	9	True				
ANR	4205129	Statement	cons	2266:24:66951:66954	4205019	10	True				
ANR	4205130	Statement	&&	2266:29:66956:66957	4205019	11	True				
ANR	4205131	Statement	core	2266:32:66959:66962	4205019	12	True				
ANR	4205132	Statement	->	2266:36:66963:66964	4205019	13	True				
ANR	4205133	Statement	cons	2266:38:66965:66968	4205019	14	True				
ANR	4205134	Statement	->	2266:42:66969:66970	4205019	15	True				
ANR	4205135	Statement	context	2266:44:66971:66977	4205019	16	True				
ANR	4205136	Statement	->	2266:51:66978:66979	4205019	17	True				
ANR	4205137	Statement	pal	2266:53:66980:66982	4205019	18	True				
ANR	4205138	Statement	.	2266:56:66983:66983	4205019	19	True				
ANR	4205139	Statement	x	2266:57:66984:66984	4205019	20	True				
ANR	4205140	Statement	)	2266:58:66985:66985	4205019	21	True				
ANR	4205141	Statement	?	2266:59:66986:66986	4205019	22	True				
ANR	4205142	Statement	core	2266:61:66988:66991	4205019	23	True				
ANR	4205143	Statement	->	2266:65:66992:66993	4205019	24	True				
ANR	4205144	Statement	cons	2266:67:66994:66997	4205019	25	True				
ANR	4205145	Statement	->	2266:71:66998:66999	4205019	26	True				
ANR	4205146	Statement	context	2266:73:67000:67006	4205019	27	True				
ANR	4205147	Statement	->	2266:80:67007:67008	4205019	28	True				
ANR	4205148	Statement	pal	2266:82:67009:67011	4205019	29	True				
ANR	4205149	Statement	.	2266:85:67012:67012	4205019	30	True				
ANR	4205150	Statement	x	2266:86:67013:67013	4205019	31	True				
ANR	4205151	Statement	use_color	2267:2:67017:67025	4205019	32	True				
ANR	4205152	Statement	=	2267:12:67027:67027	4205019	33	True				
ANR	4205153	Statement	ConsP	2267:14:67029:67033	4205019	34	True				
ANR	4205154	Statement	(	2267:19:67034:67034	4205019	35	True				
ANR	4205155	Statement	creg	2267:20:67035:67038	4205019	36	True				
ANR	4205156	Statement	)	2267:24:67039:67039	4205019	37	True				
ANR	4205157	Statement	:	2267:25:67040:67040	4205019	38	True				
ANR	4205158	ExpressionStatement	Color_BWHITE	2267:27:67042:67054	4205019	39	True				
ANR	4205159	Identifier	Color_BWHITE		4205019	0					
ANR	4205160	ElseStatement	else		4205019	0					
ANR	4205161	CompoundStatement		16:8:481:481	4205019	0					
ANR	4205162	ExpressionStatement	use_color = NULL	2269:2:67068:67084	4205019	0	True				
ANR	4205163	AssignmentExpression	use_color = NULL		4205019	0		=			
ANR	4205164	Identifier	use_color		4205019	0					
ANR	4205165	Identifier	NULL		4205019	1					
ANR	4205166	IfStatement	if ( ! str )		4205019	9					
ANR	4205167	Condition	! str	2271:5:67094:67097	4205019	0	True				
ANR	4205168	UnaryOperationExpression	! str		4205019	0					
ANR	4205169	UnaryOperator	!		4205019	0					
ANR	4205170	Identifier	str		4205019	1					
ANR	4205171	CompoundStatement		19:11:517:517	4205019	1					
ANR	4205172	ExpressionStatement	"str = """""	2272:2:67104:67112	4205019	0	True				
ANR	4205173	AssignmentExpression	"str = """""		4205019	0		=			
ANR	4205174	Identifier	str		4205019	0					
ANR	4205175	PrimaryExpression	""""""		4205019	1					
ANR	4205176	SwitchStatement	switch ( str [ 0 ] )		4205019	10					
ANR	4205177	Condition	str [ 0 ]	2274:9:67126:67131	4205019	0	True				
ANR	4205178	ArrayIndexing	str [ 0 ]		4205019	0					
ANR	4205179	Identifier	str		4205019	0					
ANR	4205180	PrimaryExpression	0		4205019	1					
ANR	4205181	CompoundStatement		22:17:551:551	4205019	1					
ANR	4205182	Label	case 'C' :	2275:1:67137:67145	4205019	0	True				
ANR	4205183	IfStatement	if ( core -> dbg -> reg -> reg_profile_cmt )		4205019	1					
ANR	4205184	Condition	core -> dbg -> reg -> reg_profile_cmt	2276:6:67162:67192	4205019	0	True				
ANR	4205185	PtrMemberAccess	core -> dbg -> reg -> reg_profile_cmt		4205019	0					
ANR	4205186	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4205187	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205188	Identifier	core		4205019	0					
ANR	4205189	Identifier	dbg		4205019	1					
ANR	4205190	Identifier	reg		4205019	1					
ANR	4205191	Identifier	reg_profile_cmt		4205019	1					
ANR	4205192	CompoundStatement		24:39:612:612	4205019	1					
ANR	4205193	ExpressionStatement	r_cons_println ( core -> dbg -> reg -> reg_profile_cmt )	2277:3:67200:67248	4205019	0	True				
ANR	4205194	CallExpression	r_cons_println ( core -> dbg -> reg -> reg_profile_cmt )		4205019	0					
ANR	4205195	Callee	r_cons_println		4205019	0					
ANR	4205196	Identifier	r_cons_println		4205019	0					
ANR	4205197	ArgumentList	core -> dbg -> reg -> reg_profile_cmt		4205019	1					
ANR	4205198	Argument	core -> dbg -> reg -> reg_profile_cmt		4205019	0					
ANR	4205199	PtrMemberAccess	core -> dbg -> reg -> reg_profile_cmt		4205019	0					
ANR	4205200	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4205201	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205202	Identifier	core		4205019	0					
ANR	4205203	Identifier	dbg		4205019	1					
ANR	4205204	Identifier	reg		4205019	1					
ANR	4205205	Identifier	reg_profile_cmt		4205019	1					
ANR	4205206	BreakStatement	break ;	2279:2:67256:67261	4205019	2	True				
ANR	4205207	Label	case '-' :	2280:1:67264:67272	4205019	3	True				
ANR	4205208	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , '-' , 0 )"	2281:2:67285:67343	4205019	4	True				
ANR	4205209	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , '-' , 0 )"		4205019	0					
ANR	4205210	Callee	r_debug_reg_list		4205019	0					
ANR	4205211	Identifier	r_debug_reg_list		4205019	0					
ANR	4205212	ArgumentList	core -> dbg		4205019	1					
ANR	4205213	Argument	core -> dbg		4205019	0					
ANR	4205214	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205215	Identifier	core		4205019	0					
ANR	4205216	Identifier	dbg		4205019	1					
ANR	4205217	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4205218	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4205219	Argument	bits		4205019	2					
ANR	4205220	Identifier	bits		4205019	0					
ANR	4205221	Argument	'-'		4205019	3					
ANR	4205222	PrimaryExpression	'-'		4205019	0					
ANR	4205223	Argument	0		4205019	4					
ANR	4205224	PrimaryExpression	0		4205019	0					
ANR	4205225	BreakStatement	break ;	2282:2:67347:67352	4205019	5	True				
ANR	4205226	Label	case '?' :	2283:1:67355:67363	4205019	6	True				
ANR	4205227	IfStatement	if ( str [ 1 ] )		4205019	7					
ANR	4205228	Condition	str [ 1 ]	2284:6:67380:67385	4205019	0	True				
ANR	4205229	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4205230	Identifier	str		4205019	0					
ANR	4205231	PrimaryExpression	1		4205019	1					
ANR	4205232	CompoundStatement		44:3:1193:1225	4205019	1					
ANR	4205233	IdentifierDeclStatement	RListIter * iter ;	2285:3:67393:67408	4205019	0	True				
ANR	4205234	IdentifierDecl	* iter		4205019	0					
ANR	4205235	IdentifierDeclType	RListIter *		4205019	0					
ANR	4205236	Identifier	iter		4205019	1					
ANR	4205237	IdentifierDeclStatement	char * all = ( char * ) r_str_trim_ro ( str + 1 ) ;	2286:3:67413:67456	4205019	1	True				
ANR	4205238	IdentifierDecl	* all = ( char * ) r_str_trim_ro ( str + 1 )		4205019	0					
ANR	4205239	IdentifierDeclType	char *		4205019	0					
ANR	4205240	Identifier	all		4205019	1					
ANR	4205241	AssignmentExpression	* all = ( char * ) r_str_trim_ro ( str + 1 )		4205019	2		=			
ANR	4205242	Identifier	all		4205019	0					
ANR	4205243	CastExpression	( char * ) r_str_trim_ro ( str + 1 )		4205019	1					
ANR	4205244	CastTarget	char *		4205019	0					
ANR	4205245	CallExpression	r_str_trim_ro ( str + 1 )		4205019	1					
ANR	4205246	Callee	r_str_trim_ro		4205019	0					
ANR	4205247	Identifier	r_str_trim_ro		4205019	0					
ANR	4205248	ArgumentList	str + 1		4205019	1					
ANR	4205249	Argument	str + 1		4205019	0					
ANR	4205250	AdditiveExpression	str + 1		4205019	0		+			
ANR	4205251	Identifier	str		4205019	0					
ANR	4205252	PrimaryExpression	1		4205019	1					
ANR	4205253	IfStatement	"if ( ! strcmp ( all , ""?"" ) )"		4205019	2					
ANR	4205254	Condition	"! strcmp ( all , ""?"" )"	2287:7:67465:67482	4205019	0	True				
ANR	4205255	UnaryOperationExpression	"! strcmp ( all , ""?"" )"		4205019	0					
ANR	4205256	UnaryOperator	!		4205019	0					
ANR	4205257	CallExpression	"strcmp ( all , ""?"" )"		4205019	1					
ANR	4205258	Callee	strcmp		4205019	0					
ANR	4205259	Identifier	strcmp		4205019	0					
ANR	4205260	ArgumentList	all		4205019	1					
ANR	4205261	Argument	all		4205019	0					
ANR	4205262	Identifier	all		4205019	0					
ANR	4205263	Argument	"""?"""		4205019	1					
ANR	4205264	PrimaryExpression	"""?"""		4205019	0					
ANR	4205265	CompoundStatement		35:27:902:902	4205019	1					
ANR	4205266	ExpressionStatement	"all = r_core_cmd_str ( core , ""drp~=[0]"" )"	2288:4:67501:67540	4205019	0	True				
ANR	4205267	AssignmentExpression	"all = r_core_cmd_str ( core , ""drp~=[0]"" )"		4205019	0		=			
ANR	4205268	Identifier	all		4205019	0					
ANR	4205269	CallExpression	"r_core_cmd_str ( core , ""drp~=[0]"" )"		4205019	1					
ANR	4205270	Callee	r_core_cmd_str		4205019	0					
ANR	4205271	Identifier	r_core_cmd_str		4205019	0					
ANR	4205272	ArgumentList	core		4205019	1					
ANR	4205273	Argument	core		4205019	0					
ANR	4205274	Identifier	core		4205019	0					
ANR	4205275	Argument	"""drp~=[0]"""		4205019	1					
ANR	4205276	PrimaryExpression	"""drp~=[0]"""		4205019	0					
ANR	4205277	ExpressionStatement	"all = r_str_replace ( all , ""\\n"" , "" "" , 1 )"	2289:4:67546:67585	4205019	1	True				
ANR	4205278	AssignmentExpression	"all = r_str_replace ( all , ""\\n"" , "" "" , 1 )"		4205019	0		=			
ANR	4205279	Identifier	all		4205019	0					
ANR	4205280	CallExpression	"r_str_replace ( all , ""\\n"" , "" "" , 1 )"		4205019	1					
ANR	4205281	Callee	r_str_replace		4205019	0					
ANR	4205282	Identifier	r_str_replace		4205019	0					
ANR	4205283	ArgumentList	all		4205019	1					
ANR	4205284	Argument	all		4205019	0					
ANR	4205285	Identifier	all		4205019	0					
ANR	4205286	Argument	"""\\n"""		4205019	1					
ANR	4205287	PrimaryExpression	"""\\n"""		4205019	0					
ANR	4205288	Argument	""" """		4205019	2					
ANR	4205289	PrimaryExpression	""" """		4205019	0					
ANR	4205290	Argument	1		4205019	3					
ANR	4205291	PrimaryExpression	1		4205019	0					
ANR	4205292	ElseStatement	else		4205019	0					
ANR	4205293	CompoundStatement		38:10:1014:1014	4205019	0					
ANR	4205294	ExpressionStatement	all = strdup ( all )	2291:4:67603:67621	4205019	0	True				
ANR	4205295	AssignmentExpression	all = strdup ( all )		4205019	0		=			
ANR	4205296	Identifier	all		4205019	0					
ANR	4205297	CallExpression	strdup ( all )		4205019	1					
ANR	4205298	Callee	strdup		4205019	0					
ANR	4205299	Identifier	strdup		4205019	0					
ANR	4205300	ArgumentList	all		4205019	1					
ANR	4205301	Argument	all		4205019	0					
ANR	4205302	Identifier	all		4205019	0					
ANR	4205303	IdentifierDeclStatement	char * arg ;	2293:3:67631:67640	4205019	3	True				
ANR	4205304	IdentifierDecl	* arg		4205019	0					
ANR	4205305	IdentifierDeclType	char *		4205019	0					
ANR	4205306	Identifier	arg		4205019	1					
ANR	4205307	IdentifierDeclStatement	"RList * args = r_str_split_list ( all , "" "" , 0 ) ;"	2294:3:67645:67689	4205019	4	True				
ANR	4205308	IdentifierDecl	"* args = r_str_split_list ( all , "" "" , 0 )"		4205019	0					
ANR	4205309	IdentifierDeclType	RList *		4205019	0					
ANR	4205310	Identifier	args		4205019	1					
ANR	4205311	AssignmentExpression	"* args = r_str_split_list ( all , "" "" , 0 )"		4205019	2		=			
ANR	4205312	Identifier	args		4205019	0					
ANR	4205313	CallExpression	"r_str_split_list ( all , "" "" , 0 )"		4205019	1					
ANR	4205314	Callee	r_str_split_list		4205019	0					
ANR	4205315	Identifier	r_str_split_list		4205019	0					
ANR	4205316	ArgumentList	all		4205019	1					
ANR	4205317	Argument	all		4205019	0					
ANR	4205318	Identifier	all		4205019	0					
ANR	4205319	Argument	""" """		4205019	1					
ANR	4205320	PrimaryExpression	""" """		4205019	0					
ANR	4205321	Argument	0		4205019	2					
ANR	4205322	PrimaryExpression	0		4205019	0					
ANR	4205323	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"	2295:3:67694:67745	4205019	5	True				
ANR	4205324	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , false )"		4205019	0					
ANR	4205325	Callee	r_debug_reg_sync		4205019	0					
ANR	4205326	Identifier	r_debug_reg_sync		4205019	0					
ANR	4205327	ArgumentList	core -> dbg		4205019	1					
ANR	4205328	Argument	core -> dbg		4205019	0					
ANR	4205329	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205330	Identifier	core		4205019	0					
ANR	4205331	Identifier	dbg		4205019	1					
ANR	4205332	Argument	R_REG_TYPE_ALL		4205019	1					
ANR	4205333	Identifier	R_REG_TYPE_ALL		4205019	0					
ANR	4205334	Argument	false		4205019	2					
ANR	4205335	Identifier	false		4205019	0					
ANR	4205336	IdentifierDeclStatement	int count = r_list_length ( args ) ;	2296:3:67776:67808	4205019	6	True				
ANR	4205337	IdentifierDecl	count = r_list_length ( args )		4205019	0					
ANR	4205338	IdentifierDeclType	int		4205019	0					
ANR	4205339	Identifier	count		4205019	1					
ANR	4205340	AssignmentExpression	count = r_list_length ( args )		4205019	2		=			
ANR	4205341	Identifier	count		4205019	0					
ANR	4205342	CallExpression	r_list_length ( args )		4205019	1					
ANR	4205343	Callee	r_list_length		4205019	0					
ANR	4205344	Identifier	r_list_length		4205019	0					
ANR	4205345	ArgumentList	args		4205019	1					
ANR	4205346	Argument	args		4205019	0					
ANR	4205347	Identifier	args		4205019	0					
ANR	4205348	Statement	r_list_foreach	2297:3:67813:67826	4205019	7	True				
ANR	4205349	Statement	(	2297:18:67828:67828	4205019	8	True				
ANR	4205350	Statement	args	2297:19:67829:67832	4205019	9	True				
ANR	4205351	Statement	","	2297:23:67833:67833	4205019	10	True				
ANR	4205352	Statement	iter	2297:25:67835:67838	4205019	11	True				
ANR	4205353	Statement	","	2297:29:67839:67839	4205019	12	True				
ANR	4205354	Statement	arg	2297:31:67841:67843	4205019	13	True				
ANR	4205355	Statement	)	2297:34:67844:67844	4205019	14	True				
ANR	4205356	CompoundStatement		46:4:1269:1312	4205019	15					
ANR	4205357	IdentifierDeclStatement	"ut64 off = r_debug_reg_get ( core -> dbg , arg ) ;"	2298:4:67852:67895	4205019	0	True				
ANR	4205358	IdentifierDecl	"off = r_debug_reg_get ( core -> dbg , arg )"		4205019	0					
ANR	4205359	IdentifierDeclType	ut64		4205019	0					
ANR	4205360	Identifier	off		4205019	1					
ANR	4205361	AssignmentExpression	"off = r_debug_reg_get ( core -> dbg , arg )"		4205019	2		=			
ANR	4205362	Identifier	off		4205019	0					
ANR	4205363	CallExpression	"r_debug_reg_get ( core -> dbg , arg )"		4205019	1					
ANR	4205364	Callee	r_debug_reg_get		4205019	0					
ANR	4205365	Identifier	r_debug_reg_get		4205019	0					
ANR	4205366	ArgumentList	core -> dbg		4205019	1					
ANR	4205367	Argument	core -> dbg		4205019	0					
ANR	4205368	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205369	Identifier	core		4205019	0					
ANR	4205370	Identifier	dbg		4205019	1					
ANR	4205371	Argument	arg		4205019	1					
ANR	4205372	Identifier	arg		4205019	0					
ANR	4205373	IfStatement	if ( count == 1 )		4205019	1					
ANR	4205374	Condition	count == 1	2299:8:67905:67914	4205019	0	True				
ANR	4205375	EqualityExpression	count == 1		4205019	0		==			
ANR	4205376	Identifier	count		4205019	0					
ANR	4205377	PrimaryExpression	1		4205019	1					
ANR	4205378	CompoundStatement		47:20:1334:1334	4205019	1					
ANR	4205379	Statement	r_cons_printf	2300:5:67924:67936	4205019	0	True				
ANR	4205380	Statement	(	2300:19:67938:67938	4205019	1	True				
ANR	4205381	Statement	"""0x%08"""	2300:20:67939:67945	4205019	2	True				
ANR	4205382	Statement	PFMT64x	2300:27:67946:67952	4205019	3	True				
ANR	4205383	Statement	"""\\n"""	2300:34:67953:67956	4205019	4	True				
ANR	4205384	Statement	","	2300:38:67957:67957	4205019	5	True				
ANR	4205385	Statement	off	2300:40:67959:67961	4205019	6	True				
ANR	4205386	Statement	)	2300:43:67962:67962	4205019	7	True				
ANR	4205387	ExpressionStatement		2300:44:67963:67963	4205019	8	True				
ANR	4205388	ElseStatement	else		4205019	0					
ANR	4205389	CompoundStatement		51:5:1442:1461	4205019	0					
ANR	4205390	IdentifierDeclStatement	int type = r_reg_get_name_idx ( arg ) ;	2302:5:67983:68018	4205019	0	True				
ANR	4205391	IdentifierDecl	type = r_reg_get_name_idx ( arg )		4205019	0					
ANR	4205392	IdentifierDeclType	int		4205019	0					
ANR	4205393	Identifier	type		4205019	1					
ANR	4205394	AssignmentExpression	type = r_reg_get_name_idx ( arg )		4205019	2		=			
ANR	4205395	Identifier	type		4205019	0					
ANR	4205396	CallExpression	r_reg_get_name_idx ( arg )		4205019	1					
ANR	4205397	Callee	r_reg_get_name_idx		4205019	0					
ANR	4205398	Identifier	r_reg_get_name_idx		4205019	0					
ANR	4205399	ArgumentList	arg		4205019	1					
ANR	4205400	Argument	arg		4205019	0					
ANR	4205401	Identifier	arg		4205019	0					
ANR	4205402	IdentifierDeclStatement	const char * r = arg ;	2303:5:68025:68044	4205019	1	True				
ANR	4205403	IdentifierDecl	* r = arg		4205019	0					
ANR	4205404	IdentifierDeclType	const char *		4205019	0					
ANR	4205405	Identifier	r		4205019	1					
ANR	4205406	AssignmentExpression	* r = arg		4205019	2		=			
ANR	4205407	Identifier	arg		4205019	0					
ANR	4205408	Identifier	arg		4205019	1					
ANR	4205409	IfStatement	if ( type != - 1 )		4205019	2					
ANR	4205410	Condition	type != - 1	2304:9:68055:68064	4205019	0	True				
ANR	4205411	EqualityExpression	type != - 1		4205019	0		!=			
ANR	4205412	Identifier	type		4205019	0					
ANR	4205413	UnaryOperationExpression	- 1		4205019	1					
ANR	4205414	UnaryOperator	-		4205019	0					
ANR	4205415	PrimaryExpression	1		4205019	1					
ANR	4205416	CompoundStatement		52:21:1484:1484	4205019	1					
ANR	4205417	ExpressionStatement	"r = r_reg_get_name ( core -> dbg -> reg , type )"	2305:6:68075:68116	4205019	0	True				
ANR	4205418	AssignmentExpression	"r = r_reg_get_name ( core -> dbg -> reg , type )"		4205019	0		=			
ANR	4205419	Identifier	r		4205019	0					
ANR	4205420	CallExpression	"r_reg_get_name ( core -> dbg -> reg , type )"		4205019	1					
ANR	4205421	Callee	r_reg_get_name		4205019	0					
ANR	4205422	Identifier	r_reg_get_name		4205019	0					
ANR	4205423	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4205424	Argument	core -> dbg -> reg		4205019	0					
ANR	4205425	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4205426	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205427	Identifier	core		4205019	0					
ANR	4205428	Identifier	dbg		4205019	1					
ANR	4205429	Identifier	reg		4205019	1					
ANR	4205430	Argument	type		4205019	1					
ANR	4205431	Identifier	type		4205019	0					
ANR	4205432	Statement	r_cons_printf	2307:5:68130:68142	4205019	3	True				
ANR	4205433	Statement	(	2307:19:68144:68144	4205019	4	True				
ANR	4205434	Statement	"""%3s %3s 0x%08"""	2307:20:68145:68159	4205019	5	True				
ANR	4205435	Statement	PFMT64x	2307:35:68160:68166	4205019	6	True				
ANR	4205436	Statement	"""\\n"""	2307:42:68167:68170	4205019	7	True				
ANR	4205437	Statement	","	2307:46:68171:68171	4205019	8	True				
ANR	4205438	Statement	arg	2307:48:68173:68175	4205019	9	True				
ANR	4205439	Statement	","	2307:51:68176:68176	4205019	10	True				
ANR	4205440	Statement	r	2307:53:68178:68178	4205019	11	True				
ANR	4205441	Statement	","	2307:54:68179:68179	4205019	12	True				
ANR	4205442	Statement	off	2307:56:68181:68183	4205019	13	True				
ANR	4205443	Statement	)	2307:59:68184:68184	4205019	14	True				
ANR	4205444	ExpressionStatement		2307:60:68185:68185	4205019	15	True				
ANR	4205445	ExpressionStatement	core -> num -> value = off	2309:4:68197:68219	4205019	2	True				
ANR	4205446	AssignmentExpression	core -> num -> value = off		4205019	0		=			
ANR	4205447	PtrMemberAccess	core -> num -> value		4205019	0					
ANR	4205448	PtrMemberAccess	core -> num		4205019	0					
ANR	4205449	Identifier	core		4205019	0					
ANR	4205450	Identifier	num		4205019	1					
ANR	4205451	Identifier	value		4205019	1					
ANR	4205452	Identifier	off		4205019	1					
ANR	4205453	ExpressionStatement	free ( all )	2311:3:68229:68239	4205019	16	True				
ANR	4205454	CallExpression	free ( all )		4205019	0					
ANR	4205455	Callee	free		4205019	0					
ANR	4205456	Identifier	free		4205019	0					
ANR	4205457	ArgumentList	all		4205019	1					
ANR	4205458	Argument	all		4205019	0					
ANR	4205459	Identifier	all		4205019	0					
ANR	4205460	ExpressionStatement	r_list_free ( args )	2312:3:68244:68262	4205019	17	True				
ANR	4205461	CallExpression	r_list_free ( args )		4205019	0					
ANR	4205462	Callee	r_list_free		4205019	0					
ANR	4205463	Identifier	r_list_free		4205019	0					
ANR	4205464	ArgumentList	args		4205019	1					
ANR	4205465	Argument	args		4205019	0					
ANR	4205466	Identifier	args		4205019	0					
ANR	4205467	ElseStatement	else		4205019	0					
ANR	4205468	CompoundStatement		61:9:1690:1690	4205019	0					
ANR	4205469	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dr )"	2314:3:68278:68313	4205019	0	True				
ANR	4205470	CallExpression	"r_core_cmd_help ( core , help_msg_dr )"		4205019	0					
ANR	4205471	Callee	r_core_cmd_help		4205019	0					
ANR	4205472	Identifier	r_core_cmd_help		4205019	0					
ANR	4205473	ArgumentList	core		4205019	1					
ANR	4205474	Argument	core		4205019	0					
ANR	4205475	Identifier	core		4205019	0					
ANR	4205476	Argument	help_msg_dr		4205019	1					
ANR	4205477	Identifier	help_msg_dr		4205019	0					
ANR	4205478	BreakStatement	break ;	2316:2:68321:68326	4205019	8	True				
ANR	4205479	Label	case 'l' :	2317:1:68329:68337	4205019	9	True				
ANR	4205480	CompoundStatement		67:3:1775:1796	4205019	10					
ANR	4205481	IdentifierDeclStatement	bool json_out = false ;	2319:3:68358:68379	4205019	0	True				
ANR	4205482	IdentifierDecl	json_out = false		4205019	0					
ANR	4205483	IdentifierDeclType	bool		4205019	0					
ANR	4205484	Identifier	json_out		4205019	1					
ANR	4205485	AssignmentExpression	json_out = false		4205019	2		=			
ANR	4205486	Identifier	false		4205019	0					
ANR	4205487	Identifier	false		4205019	1					
ANR	4205488	SwitchStatement	switch ( str [ 1 ] )		4205019	1					
ANR	4205489	Condition	str [ 1 ]	2320:11:68392:68397	4205019	0	True				
ANR	4205490	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4205491	Identifier	str		4205019	0					
ANR	4205492	PrimaryExpression	1		4205019	1					
ANR	4205493	CompoundStatement		68:19:1817:1817	4205019	1					
ANR	4205494	Label	case 'j' :	2321:3:68405:68413	4205019	0	True				
ANR	4205495	ExpressionStatement	json_out = true	2322:4:68419:68434	4205019	1	True				
ANR	4205496	AssignmentExpression	json_out = true		4205019	0		=			
ANR	4205497	Identifier	json_out		4205019	0					
ANR	4205498	Identifier	true		4205019	1					
ANR	4205499	Label	case 0 :	2324:3:68459:68465	4205019	2	True				
ANR	4205500	CompoundStatement		74:5:1895:1958	4205019	3					
ANR	4205501	IdentifierDeclStatement	"RRegSet * rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR ) ;"	2326:5:68478:68541	4205019	0	True				
ANR	4205502	IdentifierDecl	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4205019	0					
ANR	4205503	IdentifierDeclType	RRegSet *		4205019	0					
ANR	4205504	Identifier	rs		4205019	1					
ANR	4205505	AssignmentExpression	"* rs = r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4205019	2		=			
ANR	4205506	Identifier	rs		4205019	0					
ANR	4205507	CallExpression	"r_reg_regset_get ( core -> dbg -> reg , R_REG_TYPE_GPR )"		4205019	1					
ANR	4205508	Callee	r_reg_regset_get		4205019	0					
ANR	4205509	Identifier	r_reg_regset_get		4205019	0					
ANR	4205510	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4205511	Argument	core -> dbg -> reg		4205019	0					
ANR	4205512	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4205513	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205514	Identifier	core		4205019	0					
ANR	4205515	Identifier	dbg		4205019	1					
ANR	4205516	Identifier	reg		4205019	1					
ANR	4205517	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4205518	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4205519	IfStatement	if ( rs )		4205019	1					
ANR	4205520	Condition	rs	2327:9:68552:68553	4205019	0	True				
ANR	4205521	Identifier	rs		4205019	0					
ANR	4205522	CompoundStatement		77:6:2000:2015	4205019	1					
ANR	4205523	IdentifierDeclStatement	RRegItem * r ;	2328:6:68564:68575	4205019	0	True				
ANR	4205524	IdentifierDecl	* r		4205019	0					
ANR	4205525	IdentifierDeclType	RRegItem *		4205019	0					
ANR	4205526	Identifier	r		4205019	1					
ANR	4205527	IdentifierDeclStatement	RListIter * iter ;	2329:6:68583:68598	4205019	1	True				
ANR	4205528	IdentifierDecl	* iter		4205019	0					
ANR	4205529	IdentifierDeclType	RListIter *		4205019	0					
ANR	4205530	Identifier	iter		4205019	1					
ANR	4205531	ExpressionStatement	i = 0	2330:6:68606:68611	4205019	2	True				
ANR	4205532	AssignmentExpression	i = 0		4205019	0		=			
ANR	4205533	Identifier	i		4205019	0					
ANR	4205534	PrimaryExpression	0		4205019	1					
ANR	4205535	IfStatement	if ( json_out )		4205019	3					
ANR	4205536	Condition	json_out	2331:10:68623:68630	4205019	0	True				
ANR	4205537	Identifier	json_out		4205019	0					
ANR	4205538	CompoundStatement		79:20:2050:2050	4205019	1					
ANR	4205539	ExpressionStatement	"r_cons_printf ( ""["" )"	2332:7:68642:68661	4205019	0	True				
ANR	4205540	CallExpression	"r_cons_printf ( ""["" )"		4205019	0					
ANR	4205541	Callee	r_cons_printf		4205019	0					
ANR	4205542	Identifier	r_cons_printf		4205019	0					
ANR	4205543	ArgumentList	"""["""		4205019	1					
ANR	4205544	Argument	"""["""		4205019	0					
ANR	4205545	PrimaryExpression	"""["""		4205019	0					
ANR	4205546	Statement	r_list_foreach	2334:6:68677:68690	4205019	4	True				
ANR	4205547	Statement	(	2334:21:68692:68692	4205019	5	True				
ANR	4205548	Statement	rs	2334:22:68693:68694	4205019	6	True				
ANR	4205549	Statement	->	2334:24:68695:68696	4205019	7	True				
ANR	4205550	Statement	regs	2334:26:68697:68700	4205019	8	True				
ANR	4205551	Statement	","	2334:30:68701:68701	4205019	9	True				
ANR	4205552	Statement	iter	2334:32:68703:68706	4205019	10	True				
ANR	4205553	Statement	","	2334:36:68707:68707	4205019	11	True				
ANR	4205554	Statement	r	2334:38:68709:68709	4205019	12	True				
ANR	4205555	Statement	)	2334:39:68710:68710	4205019	13	True				
ANR	4205556	CompoundStatement		82:41:2129:2129	4205019	14					
ANR	4205557	IfStatement	if ( json_out )		4205019	0					
ANR	4205558	Condition	json_out	2335:11:68725:68732	4205019	0	True				
ANR	4205559	Identifier	json_out		4205019	0					
ANR	4205560	CompoundStatement		83:21:2152:2152	4205019	1					
ANR	4205561	ExpressionStatement	"r_cons_printf ( ""%s\\""%s\\"""" , ( i ? "","" : """" ) , r -> name )"	2336:8:68745:68814	4205019	0	True				
ANR	4205562	CallExpression	"r_cons_printf ( ""%s\\""%s\\"""" , ( i ? "","" : """" ) , r -> name )"		4205019	0					
ANR	4205563	Callee	r_cons_printf		4205019	0					
ANR	4205564	Identifier	r_cons_printf		4205019	0					
ANR	4205565	ArgumentList	"""%s\\""%s\\"""""		4205019	1					
ANR	4205566	Argument	"""%s\\""%s\\"""""		4205019	0					
ANR	4205567	PrimaryExpression	"""%s\\""%s\\"""""		4205019	0					
ANR	4205568	Argument	"i ? "","" : """""		4205019	1					
ANR	4205569	ConditionalExpression	"i ? "","" : """""		4205019	0					
ANR	4205570	Condition	i		4205019	0					
ANR	4205571	Identifier	i		4205019	0					
ANR	4205572	PrimaryExpression	""","""		4205019	1					
ANR	4205573	PrimaryExpression	""""""		4205019	2					
ANR	4205574	Argument	r -> name		4205019	2					
ANR	4205575	PtrMemberAccess	r -> name		4205019	0					
ANR	4205576	Identifier	r		4205019	0					
ANR	4205577	Identifier	name		4205019	1					
ANR	4205578	ExpressionStatement	i ++	2339:8:68824:68827	4205019	1	True				
ANR	4205579	PostIncDecOperationExpression	i ++		4205019	0					
ANR	4205580	Identifier	i		4205019	0					
ANR	4205581	IncDec	++		4205019	1					
ANR	4205582	ElseStatement	else		4205019	0					
ANR	4205583	CompoundStatement		88:14:2260:2260	4205019	0					
ANR	4205584	ExpressionStatement	r_cons_println ( r -> name )	2341:8:68853:68877	4205019	0	True				
ANR	4205585	CallExpression	r_cons_println ( r -> name )		4205019	0					
ANR	4205586	Callee	r_cons_println		4205019	0					
ANR	4205587	Identifier	r_cons_println		4205019	0					
ANR	4205588	ArgumentList	r -> name		4205019	1					
ANR	4205589	Argument	r -> name		4205019	0					
ANR	4205590	PtrMemberAccess	r -> name		4205019	0					
ANR	4205591	Identifier	r		4205019	0					
ANR	4205592	Identifier	name		4205019	1					
ANR	4205593	IfStatement	if ( json_out )		4205019	15					
ANR	4205594	Condition	json_out	2344:10:68906:68913	4205019	0	True				
ANR	4205595	Identifier	json_out		4205019	0					
ANR	4205596	CompoundStatement		92:20:2333:2333	4205019	1					
ANR	4205597	ExpressionStatement	"r_cons_printf ( ""]"" )"	2345:7:68925:68944	4205019	0	True				
ANR	4205598	CallExpression	"r_cons_printf ( ""]"" )"		4205019	0					
ANR	4205599	Callee	r_cons_printf		4205019	0					
ANR	4205600	Identifier	r_cons_printf		4205019	0					
ANR	4205601	ArgumentList	"""]"""		4205019	1					
ANR	4205602	Argument	"""]"""		4205019	0					
ANR	4205603	PrimaryExpression	"""]"""		4205019	0					
ANR	4205604	BreakStatement	break ;	2348:5:68966:68971	4205019	2	True				
ANR	4205605	BreakStatement	break ;	2352:2:68990:68995	4205019	11	True				
ANR	4205606	Label	case '8' :	2353:1:68998:69006	4205019	12	True				
ANR	4205607	Label	case 'b' :	2354:1:69018:69026	4205019	13	True				
ANR	4205608	CompoundStatement		116:3:2752:2807	4205019	14					
ANR	4205609	IdentifierDeclStatement	"int len , type = R_REG_TYPE_GPR ;"	2356:3:69044:69074	4205019	0	True				
ANR	4205610	IdentifierDecl	len		4205019	0					
ANR	4205611	IdentifierDeclType	int		4205019	0					
ANR	4205612	Identifier	len		4205019	1					
ANR	4205613	IdentifierDecl	type = R_REG_TYPE_GPR		4205019	1					
ANR	4205614	IdentifierDeclType	int		4205019	0					
ANR	4205615	Identifier	type		4205019	1					
ANR	4205616	AssignmentExpression	type = R_REG_TYPE_GPR		4205019	2		=			
ANR	4205617	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4205618	Identifier	R_REG_TYPE_GPR		4205019	1					
ANR	4205619	ExpressionStatement	"arg = strchr ( str , ' ' )"	2357:3:69079:69102	4205019	1	True				
ANR	4205620	AssignmentExpression	"arg = strchr ( str , ' ' )"		4205019	0		=			
ANR	4205621	Identifier	arg		4205019	0					
ANR	4205622	CallExpression	"strchr ( str , ' ' )"		4205019	1					
ANR	4205623	Callee	strchr		4205019	0					
ANR	4205624	Identifier	strchr		4205019	0					
ANR	4205625	ArgumentList	str		4205019	1					
ANR	4205626	Argument	str		4205019	0					
ANR	4205627	Identifier	str		4205019	0					
ANR	4205628	Argument	' '		4205019	1					
ANR	4205629	PrimaryExpression	' '		4205019	0					
ANR	4205630	IfStatement	if ( arg )		4205019	2					
ANR	4205631	Condition	arg	2358:7:69111:69113	4205019	0	True				
ANR	4205632	Identifier	arg		4205019	0					
ANR	4205633	CompoundStatement		107:4:2539:2578	4205019	1					
ANR	4205634	IdentifierDeclStatement	char * string = r_str_trim_dup ( arg + 1 ) ;	2359:4:69122:69161	4205019	0	True				
ANR	4205635	IdentifierDecl	* string = r_str_trim_dup ( arg + 1 )		4205019	0					
ANR	4205636	IdentifierDeclType	char *		4205019	0					
ANR	4205637	Identifier	string		4205019	1					
ANR	4205638	AssignmentExpression	* string = r_str_trim_dup ( arg + 1 )		4205019	2		=			
ANR	4205639	Identifier	string		4205019	0					
ANR	4205640	CallExpression	r_str_trim_dup ( arg + 1 )		4205019	1					
ANR	4205641	Callee	r_str_trim_dup		4205019	0					
ANR	4205642	Identifier	r_str_trim_dup		4205019	0					
ANR	4205643	ArgumentList	arg + 1		4205019	1					
ANR	4205644	Argument	arg + 1		4205019	0					
ANR	4205645	AdditiveExpression	arg + 1		4205019	0		+			
ANR	4205646	Identifier	arg		4205019	0					
ANR	4205647	PrimaryExpression	1		4205019	1					
ANR	4205648	IfStatement	if ( string )		4205019	1					
ANR	4205649	Condition	string	2360:8:69171:69176	4205019	0	True				
ANR	4205650	Identifier	string		4205019	0					
ANR	4205651	CompoundStatement		108:16:2596:2596	4205019	1					
ANR	4205652	ExpressionStatement	type = r_reg_type_by_name ( string )	2361:5:69186:69220	4205019	0	True				
ANR	4205653	AssignmentExpression	type = r_reg_type_by_name ( string )		4205019	0		=			
ANR	4205654	Identifier	type		4205019	0					
ANR	4205655	CallExpression	r_reg_type_by_name ( string )		4205019	1					
ANR	4205656	Callee	r_reg_type_by_name		4205019	0					
ANR	4205657	Identifier	r_reg_type_by_name		4205019	0					
ANR	4205658	ArgumentList	string		4205019	1					
ANR	4205659	Argument	string		4205019	0					
ANR	4205660	Identifier	string		4205019	0					
ANR	4205661	IfStatement	if ( type == - 1 && string [ 0 ] != 'a' )		4205019	1					
ANR	4205662	Condition	type == - 1 && string [ 0 ] != 'a'	2362:9:69231:69260	4205019	0	True				
ANR	4205663	AndExpression	type == - 1 && string [ 0 ] != 'a'		4205019	0		&&			
ANR	4205664	EqualityExpression	type == - 1		4205019	0		==			
ANR	4205665	Identifier	type		4205019	0					
ANR	4205666	UnaryOperationExpression	- 1		4205019	1					
ANR	4205667	UnaryOperator	-		4205019	0					
ANR	4205668	PrimaryExpression	1		4205019	1					
ANR	4205669	EqualityExpression	string [ 0 ] != 'a'		4205019	1		!=			
ANR	4205670	ArrayIndexing	string [ 0 ]		4205019	0					
ANR	4205671	Identifier	string		4205019	0					
ANR	4205672	PrimaryExpression	0		4205019	1					
ANR	4205673	PrimaryExpression	'a'		4205019	1					
ANR	4205674	CompoundStatement		110:41:2680:2680	4205019	1					
ANR	4205675	ExpressionStatement	type = R_REG_TYPE_GPR	2363:6:69271:69292	4205019	0	True				
ANR	4205676	AssignmentExpression	type = R_REG_TYPE_GPR		4205019	0		=			
ANR	4205677	Identifier	type		4205019	0					
ANR	4205678	Identifier	R_REG_TYPE_GPR		4205019	1					
ANR	4205679	ExpressionStatement	free ( string )	2365:5:69306:69319	4205019	2	True				
ANR	4205680	CallExpression	free ( string )		4205019	0					
ANR	4205681	Callee	free		4205019	0					
ANR	4205682	Identifier	free		4205019	0					
ANR	4205683	ArgumentList	string		4205019	1					
ANR	4205684	Argument	string		4205019	0					
ANR	4205685	Identifier	string		4205019	0					
ANR	4205686	IdentifierDeclStatement	"ut8 * buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len ) ;"	2368:3:69335:69390	4205019	3	True				
ANR	4205687	IdentifierDecl	"* buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		4205019	0					
ANR	4205688	IdentifierDeclType	ut8 *		4205019	0					
ANR	4205689	Identifier	buf		4205019	1					
ANR	4205690	AssignmentExpression	"* buf = r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		4205019	2		=			
ANR	4205691	Identifier	buf		4205019	0					
ANR	4205692	CallExpression	"r_reg_get_bytes ( core -> dbg -> reg , type , & len )"		4205019	1					
ANR	4205693	Callee	r_reg_get_bytes		4205019	0					
ANR	4205694	Identifier	r_reg_get_bytes		4205019	0					
ANR	4205695	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4205696	Argument	core -> dbg -> reg		4205019	0					
ANR	4205697	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4205698	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205699	Identifier	core		4205019	0					
ANR	4205700	Identifier	dbg		4205019	1					
ANR	4205701	Identifier	reg		4205019	1					
ANR	4205702	Argument	type		4205019	1					
ANR	4205703	Identifier	type		4205019	0					
ANR	4205704	Argument	& len		4205019	2					
ANR	4205705	UnaryOperationExpression	& len		4205019	0					
ANR	4205706	UnaryOperator	&		4205019	0					
ANR	4205707	Identifier	len		4205019	1					
ANR	4205708	IfStatement	if ( str [ 0 ] == '8' )		4205019	4					
ANR	4205709	Condition	str [ 0 ] == '8'	2369:7:69399:69411	4205019	0	True				
ANR	4205710	EqualityExpression	str [ 0 ] == '8'		4205019	0		==			
ANR	4205711	ArrayIndexing	str [ 0 ]		4205019	0					
ANR	4205712	Identifier	str		4205019	0					
ANR	4205713	PrimaryExpression	0		4205019	1					
ANR	4205714	PrimaryExpression	'8'		4205019	1					
ANR	4205715	CompoundStatement		117:22:2831:2831	4205019	1					
ANR	4205716	ExpressionStatement	"r_print_bytes ( core -> print , buf , len , ""%02x"" )"	2370:4:69420:69465	4205019	0	True				
ANR	4205717	CallExpression	"r_print_bytes ( core -> print , buf , len , ""%02x"" )"		4205019	0					
ANR	4205718	Callee	r_print_bytes		4205019	0					
ANR	4205719	Identifier	r_print_bytes		4205019	0					
ANR	4205720	ArgumentList	core -> print		4205019	1					
ANR	4205721	Argument	core -> print		4205019	0					
ANR	4205722	PtrMemberAccess	core -> print		4205019	0					
ANR	4205723	Identifier	core		4205019	0					
ANR	4205724	Identifier	print		4205019	1					
ANR	4205725	Argument	buf		4205019	1					
ANR	4205726	Identifier	buf		4205019	0					
ANR	4205727	Argument	len		4205019	2					
ANR	4205728	Identifier	len		4205019	0					
ANR	4205729	Argument	"""%02x"""		4205019	3					
ANR	4205730	PrimaryExpression	"""%02x"""		4205019	0					
ANR	4205731	ElseStatement	else		4205019	0					
ANR	4205732	CompoundStatement		119:10:2894:2894	4205019	0					
ANR	4205733	SwitchStatement	switch ( str [ 1 ] )		4205019	0					
ANR	4205734	Condition	str [ 1 ]	2372:12:69491:69496	4205019	0	True				
ANR	4205735	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4205736	Identifier	str		4205019	0					
ANR	4205737	PrimaryExpression	1		4205019	1					
ANR	4205738	CompoundStatement		120:20:2916:2916	4205019	1					
ANR	4205739	Label	case '1' :	2373:4:69505:69513	4205019	0	True				
ANR	4205740	Statement	r_print_hexdump	2374:5:69520:69534	4205019	1	True				
ANR	4205741	Statement	(	2374:21:69536:69536	4205019	2	True				
ANR	4205742	Statement	core	2374:22:69537:69540	4205019	3	True				
ANR	4205743	Statement	->	2374:26:69541:69542	4205019	4	True				
ANR	4205744	Statement	print	2374:28:69543:69547	4205019	5	True				
ANR	4205745	Statement	","	2374:33:69548:69548	4205019	6	True				
ANR	4205746	Statement	0l	2374:35:69550:69551	4205019	7	True				
ANR	4205747	Statement	l	2374:37:69552:69552	4205019	8	True				
ANR	4205748	Statement	","	2374:38:69553:69553	4205019	9	True				
ANR	4205749	Statement	buf	2374:40:69555:69557	4205019	10	True				
ANR	4205750	Statement	","	2374:43:69558:69558	4205019	11	True				
ANR	4205751	Statement	len	2374:45:69560:69562	4205019	12	True				
ANR	4205752	Statement	","	2374:48:69563:69563	4205019	13	True				
ANR	4205753	Statement	8	2374:50:69565:69565	4205019	14	True				
ANR	4205754	Statement	","	2374:51:69566:69566	4205019	15	True				
ANR	4205755	Statement	1	2374:53:69568:69568	4205019	16	True				
ANR	4205756	Statement	","	2374:54:69569:69569	4205019	17	True				
ANR	4205757	Statement	1	2374:56:69571:69571	4205019	18	True				
ANR	4205758	Statement	)	2374:57:69572:69572	4205019	19	True				
ANR	4205759	ExpressionStatement		2374:58:69573:69573	4205019	20	True				
ANR	4205760	BreakStatement	break ;	2375:5:69580:69585	4205019	21	True				
ANR	4205761	Label	case '2' :	2376:4:69591:69599	4205019	22	True				
ANR	4205762	Statement	r_print_hexdump	2377:5:69606:69620	4205019	23	True				
ANR	4205763	Statement	(	2377:21:69622:69622	4205019	24	True				
ANR	4205764	Statement	core	2377:22:69623:69626	4205019	25	True				
ANR	4205765	Statement	->	2377:26:69627:69628	4205019	26	True				
ANR	4205766	Statement	print	2377:28:69629:69633	4205019	27	True				
ANR	4205767	Statement	","	2377:33:69634:69634	4205019	28	True				
ANR	4205768	Statement	0l	2377:35:69636:69637	4205019	29	True				
ANR	4205769	Statement	l	2377:37:69638:69638	4205019	30	True				
ANR	4205770	Statement	","	2377:38:69639:69639	4205019	31	True				
ANR	4205771	Statement	buf	2377:40:69641:69643	4205019	32	True				
ANR	4205772	Statement	","	2377:43:69644:69644	4205019	33	True				
ANR	4205773	Statement	len	2377:45:69646:69648	4205019	34	True				
ANR	4205774	Statement	","	2377:48:69649:69649	4205019	35	True				
ANR	4205775	Statement	16	2377:50:69651:69652	4205019	36	True				
ANR	4205776	Statement	","	2377:52:69653:69653	4205019	37	True				
ANR	4205777	Statement	2	2377:54:69655:69655	4205019	38	True				
ANR	4205778	Statement	","	2377:55:69656:69656	4205019	39	True				
ANR	4205779	Statement	1	2377:57:69658:69658	4205019	40	True				
ANR	4205780	Statement	)	2377:58:69659:69659	4205019	41	True				
ANR	4205781	ExpressionStatement		2377:59:69660:69660	4205019	42	True				
ANR	4205782	BreakStatement	break ;	2378:5:69667:69672	4205019	43	True				
ANR	4205783	Label	case '4' :	2379:4:69678:69686	4205019	44	True				
ANR	4205784	Statement	r_print_hexdump	2380:5:69693:69707	4205019	45	True				
ANR	4205785	Statement	(	2380:21:69709:69709	4205019	46	True				
ANR	4205786	Statement	core	2380:22:69710:69713	4205019	47	True				
ANR	4205787	Statement	->	2380:26:69714:69715	4205019	48	True				
ANR	4205788	Statement	print	2380:28:69716:69720	4205019	49	True				
ANR	4205789	Statement	","	2380:33:69721:69721	4205019	50	True				
ANR	4205790	Statement	0l	2380:35:69723:69724	4205019	51	True				
ANR	4205791	Statement	l	2380:37:69725:69725	4205019	52	True				
ANR	4205792	Statement	","	2380:38:69726:69726	4205019	53	True				
ANR	4205793	Statement	buf	2380:40:69728:69730	4205019	54	True				
ANR	4205794	Statement	","	2380:43:69731:69731	4205019	55	True				
ANR	4205795	Statement	len	2380:45:69733:69735	4205019	56	True				
ANR	4205796	Statement	","	2380:48:69736:69736	4205019	57	True				
ANR	4205797	Statement	32	2380:50:69738:69739	4205019	58	True				
ANR	4205798	Statement	","	2380:52:69740:69740	4205019	59	True				
ANR	4205799	Statement	4	2380:54:69742:69742	4205019	60	True				
ANR	4205800	Statement	","	2380:55:69743:69743	4205019	61	True				
ANR	4205801	Statement	1	2380:57:69745:69745	4205019	62	True				
ANR	4205802	Statement	)	2380:58:69746:69746	4205019	63	True				
ANR	4205803	ExpressionStatement		2380:59:69747:69747	4205019	64	True				
ANR	4205804	BreakStatement	break ;	2381:5:69754:69759	4205019	65	True				
ANR	4205805	Label	case '8' :	2382:4:69765:69773	4205019	66	True				
ANR	4205806	Statement	r_print_hexdump	2383:5:69780:69794	4205019	67	True				
ANR	4205807	Statement	(	2383:21:69796:69796	4205019	68	True				
ANR	4205808	Statement	core	2383:22:69797:69800	4205019	69	True				
ANR	4205809	Statement	->	2383:26:69801:69802	4205019	70	True				
ANR	4205810	Statement	print	2383:28:69803:69807	4205019	71	True				
ANR	4205811	Statement	","	2383:33:69808:69808	4205019	72	True				
ANR	4205812	Statement	0l	2383:35:69810:69811	4205019	73	True				
ANR	4205813	Statement	l	2383:37:69812:69812	4205019	74	True				
ANR	4205814	Statement	","	2383:38:69813:69813	4205019	75	True				
ANR	4205815	Statement	buf	2383:40:69815:69817	4205019	76	True				
ANR	4205816	Statement	","	2383:43:69818:69818	4205019	77	True				
ANR	4205817	Statement	len	2383:45:69820:69822	4205019	78	True				
ANR	4205818	Statement	","	2383:48:69823:69823	4205019	79	True				
ANR	4205819	Statement	64	2383:50:69825:69826	4205019	80	True				
ANR	4205820	Statement	","	2383:52:69827:69827	4205019	81	True				
ANR	4205821	Statement	8	2383:54:69829:69829	4205019	82	True				
ANR	4205822	Statement	","	2383:55:69830:69830	4205019	83	True				
ANR	4205823	Statement	1	2383:57:69832:69832	4205019	84	True				
ANR	4205824	Statement	)	2383:58:69833:69833	4205019	85	True				
ANR	4205825	ExpressionStatement		2383:59:69834:69834	4205019	86	True				
ANR	4205826	BreakStatement	break ;	2384:5:69841:69846	4205019	87	True				
ANR	4205827	Label	default :	2385:4:69852:69859	4205019	88	True				
ANR	4205828	Identifier	default		4205019	0					
ANR	4205829	IfStatement	if ( core -> assembler -> bits == 64 )		4205019	89					
ANR	4205830	Condition	core -> assembler -> bits == 64	2386:9:69870:69896	4205019	0	True				
ANR	4205831	EqualityExpression	core -> assembler -> bits == 64		4205019	0		==			
ANR	4205832	PtrMemberAccess	core -> assembler -> bits		4205019	0					
ANR	4205833	PtrMemberAccess	core -> assembler		4205019	0					
ANR	4205834	Identifier	core		4205019	0					
ANR	4205835	Identifier	assembler		4205019	1					
ANR	4205836	Identifier	bits		4205019	1					
ANR	4205837	PrimaryExpression	64		4205019	1					
ANR	4205838	CompoundStatement		134:38:3316:3316	4205019	1					
ANR	4205839	Statement	r_print_hexdump	2387:6:69907:69921	4205019	0	True				
ANR	4205840	Statement	(	2387:22:69923:69923	4205019	1	True				
ANR	4205841	Statement	core	2387:23:69924:69927	4205019	2	True				
ANR	4205842	Statement	->	2387:27:69928:69929	4205019	3	True				
ANR	4205843	Statement	print	2387:29:69930:69934	4205019	4	True				
ANR	4205844	Statement	","	2387:34:69935:69935	4205019	5	True				
ANR	4205845	Statement	0l	2387:36:69937:69938	4205019	6	True				
ANR	4205846	Statement	l	2387:38:69939:69939	4205019	7	True				
ANR	4205847	Statement	","	2387:39:69940:69940	4205019	8	True				
ANR	4205848	Statement	buf	2387:41:69942:69944	4205019	9	True				
ANR	4205849	Statement	","	2387:44:69945:69945	4205019	10	True				
ANR	4205850	Statement	len	2387:46:69947:69949	4205019	11	True				
ANR	4205851	Statement	","	2387:49:69950:69950	4205019	12	True				
ANR	4205852	Statement	64	2387:51:69952:69953	4205019	13	True				
ANR	4205853	Statement	","	2387:53:69954:69954	4205019	14	True				
ANR	4205854	Statement	8	2387:55:69956:69956	4205019	15	True				
ANR	4205855	Statement	","	2387:56:69957:69957	4205019	16	True				
ANR	4205856	Statement	1	2387:58:69959:69959	4205019	17	True				
ANR	4205857	Statement	)	2387:59:69960:69960	4205019	18	True				
ANR	4205858	ExpressionStatement		2387:60:69961:69961	4205019	19	True				
ANR	4205859	ElseStatement	else		4205019	0					
ANR	4205860	CompoundStatement		136:12:3392:3392	4205019	0					
ANR	4205861	Statement	r_print_hexdump	2389:6:69983:69997	4205019	0	True				
ANR	4205862	Statement	(	2389:22:69999:69999	4205019	1	True				
ANR	4205863	Statement	core	2389:23:70000:70003	4205019	2	True				
ANR	4205864	Statement	->	2389:27:70004:70005	4205019	3	True				
ANR	4205865	Statement	print	2389:29:70006:70010	4205019	4	True				
ANR	4205866	Statement	","	2389:34:70011:70011	4205019	5	True				
ANR	4205867	Statement	0l	2389:36:70013:70014	4205019	6	True				
ANR	4205868	Statement	l	2389:38:70015:70015	4205019	7	True				
ANR	4205869	Statement	","	2389:39:70016:70016	4205019	8	True				
ANR	4205870	Statement	buf	2389:41:70018:70020	4205019	9	True				
ANR	4205871	Statement	","	2389:44:70021:70021	4205019	10	True				
ANR	4205872	Statement	len	2389:46:70023:70025	4205019	11	True				
ANR	4205873	Statement	","	2389:49:70026:70026	4205019	12	True				
ANR	4205874	Statement	32	2389:51:70028:70029	4205019	13	True				
ANR	4205875	Statement	","	2389:53:70030:70030	4205019	14	True				
ANR	4205876	Statement	4	2389:55:70032:70032	4205019	15	True				
ANR	4205877	Statement	","	2389:56:70033:70033	4205019	16	True				
ANR	4205878	Statement	1	2389:58:70035:70035	4205019	17	True				
ANR	4205879	Statement	)	2389:59:70036:70036	4205019	18	True				
ANR	4205880	ExpressionStatement		2389:60:70037:70037	4205019	19	True				
ANR	4205881	BreakStatement	break ;	2391:5:70051:70056	4205019	90	True				
ANR	4205882	ExpressionStatement	free ( buf )	2394:3:70072:70082	4205019	5	True				
ANR	4205883	CallExpression	free ( buf )		4205019	0					
ANR	4205884	Callee	free		4205019	0					
ANR	4205885	Identifier	free		4205019	0					
ANR	4205886	ArgumentList	buf		4205019	1					
ANR	4205887	Argument	buf		4205019	0					
ANR	4205888	Identifier	buf		4205019	0					
ANR	4205889	BreakStatement	break ;	2396:2:70090:70095	4205019	15	True				
ANR	4205890	Label	case 'c' :	2397:1:70098:70106	4205019	16	True				
ANR	4205891	IfStatement	if ( str [ 1 ] == '=' )		4205019	17					
ANR	4205892	Condition	str [ 1 ] == '='	2399:6:70164:70176	4205019	0	True				
ANR	4205893	EqualityExpression	str [ 1 ] == '='		4205019	0		==			
ANR	4205894	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4205895	Identifier	str		4205019	0					
ANR	4205896	PrimaryExpression	1		4205019	1					
ANR	4205897	PrimaryExpression	'='		4205019	1					
ANR	4205898	CompoundStatement		148:3:3601:3659	4205019	1					
ANR	4205899	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2400:3:70184:70242	4205019	0	True				
ANR	4205900	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	0					
ANR	4205901	IdentifierDeclType	RRegFlags *		4205019	0					
ANR	4205902	Identifier	rf		4205019	1					
ANR	4205903	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	2		=			
ANR	4205904	Identifier	rf		4205019	0					
ANR	4205905	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	1					
ANR	4205906	Callee	r_reg_cond_retrieve		4205019	0					
ANR	4205907	Identifier	r_reg_cond_retrieve		4205019	0					
ANR	4205908	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4205909	Argument	core -> dbg -> reg		4205019	0					
ANR	4205910	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4205911	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4205912	Identifier	core		4205019	0					
ANR	4205913	Identifier	dbg		4205019	1					
ANR	4205914	Identifier	reg		4205019	1					
ANR	4205915	Argument	NULL		4205019	1					
ANR	4205916	Identifier	NULL		4205019	0					
ANR	4205917	IfStatement	if ( rf )		4205019	1					
ANR	4205918	Condition	rf	2401:7:70251:70252	4205019	0	True				
ANR	4205919	Identifier	rf		4205019	0					
ANR	4205920	CompoundStatement		149:11:3672:3672	4205019	1					
ANR	4205921	ExpressionStatement	"r_cons_printf ( ""s:%d z:%d c:%d o:%d p:%d\\n"" , rf -> s , rf -> z , rf -> c , rf -> o , rf -> p )"	2402:4:70261:70346	4205019	0	True				
ANR	4205922	CallExpression	"r_cons_printf ( ""s:%d z:%d c:%d o:%d p:%d\\n"" , rf -> s , rf -> z , rf -> c , rf -> o , rf -> p )"		4205019	0					
ANR	4205923	Callee	r_cons_printf		4205019	0					
ANR	4205924	Identifier	r_cons_printf		4205019	0					
ANR	4205925	ArgumentList	"""s:%d z:%d c:%d o:%d p:%d\\n"""		4205019	1					
ANR	4205926	Argument	"""s:%d z:%d c:%d o:%d p:%d\\n"""		4205019	0					
ANR	4205927	PrimaryExpression	"""s:%d z:%d c:%d o:%d p:%d\\n"""		4205019	0					
ANR	4205928	Argument	rf -> s		4205019	1					
ANR	4205929	PtrMemberAccess	rf -> s		4205019	0					
ANR	4205930	Identifier	rf		4205019	0					
ANR	4205931	Identifier	s		4205019	1					
ANR	4205932	Argument	rf -> z		4205019	2					
ANR	4205933	PtrMemberAccess	rf -> z		4205019	0					
ANR	4205934	Identifier	rf		4205019	0					
ANR	4205935	Identifier	z		4205019	1					
ANR	4205936	Argument	rf -> c		4205019	3					
ANR	4205937	PtrMemberAccess	rf -> c		4205019	0					
ANR	4205938	Identifier	rf		4205019	0					
ANR	4205939	Identifier	c		4205019	1					
ANR	4205940	Argument	rf -> o		4205019	4					
ANR	4205941	PtrMemberAccess	rf -> o		4205019	0					
ANR	4205942	Identifier	rf		4205019	0					
ANR	4205943	Identifier	o		4205019	1					
ANR	4205944	Argument	rf -> p		4205019	5					
ANR	4205945	PtrMemberAccess	rf -> p		4205019	0					
ANR	4205946	Identifier	rf		4205019	0					
ANR	4205947	Identifier	p		4205019	1					
ANR	4205948	ExpressionStatement	free ( rf )	2404:4:70352:70361	4205019	1	True				
ANR	4205949	CallExpression	free ( rf )		4205019	0					
ANR	4205950	Callee	free		4205019	0					
ANR	4205951	Identifier	free		4205019	0					
ANR	4205952	ArgumentList	rf		4205019	1					
ANR	4205953	Argument	rf		4205019	0					
ANR	4205954	Identifier	rf		4205019	0					
ANR	4205955	ElseStatement	else		4205019	0					
ANR	4205956	IfStatement	"if ( strchr ( str , '=' ) )"		4205019	0					
ANR	4205957	Condition	"strchr ( str , '=' )"	2406:13:70381:70397	4205019	0	True				
ANR	4205958	CallExpression	"strchr ( str , '=' )"		4205019	0					
ANR	4205959	Callee	strchr		4205019	0					
ANR	4205960	Identifier	strchr		4205019	0					
ANR	4205961	ArgumentList	str		4205019	1					
ANR	4205962	Argument	str		4205019	0					
ANR	4205963	Identifier	str		4205019	0					
ANR	4205964	Argument	'='		4205019	1					
ANR	4205965	PrimaryExpression	'='		4205019	0					
ANR	4205966	CompoundStatement		156:3:3869:3895	4205019	1					
ANR	4205967	IdentifierDeclStatement	char * a = strdup ( r_str_trim_ro ( str + 1 ) ) ;	2407:3:70405:70447	4205019	0	True				
ANR	4205968	IdentifierDecl	* a = strdup ( r_str_trim_ro ( str + 1 ) )		4205019	0					
ANR	4205969	IdentifierDeclType	char *		4205019	0					
ANR	4205970	Identifier	a		4205019	1					
ANR	4205971	AssignmentExpression	* a = strdup ( r_str_trim_ro ( str + 1 ) )		4205019	2		=			
ANR	4205972	Identifier	a		4205019	0					
ANR	4205973	CallExpression	strdup ( r_str_trim_ro ( str + 1 ) )		4205019	1					
ANR	4205974	Callee	strdup		4205019	0					
ANR	4205975	Identifier	strdup		4205019	0					
ANR	4205976	ArgumentList	r_str_trim_ro ( str + 1 )		4205019	1					
ANR	4205977	Argument	r_str_trim_ro ( str + 1 )		4205019	0					
ANR	4205978	CallExpression	r_str_trim_ro ( str + 1 )		4205019	0					
ANR	4205979	Callee	r_str_trim_ro		4205019	0					
ANR	4205980	Identifier	r_str_trim_ro		4205019	0					
ANR	4205981	ArgumentList	str + 1		4205019	1					
ANR	4205982	Argument	str + 1		4205019	0					
ANR	4205983	AdditiveExpression	str + 1		4205019	0		+			
ANR	4205984	Identifier	str		4205019	0					
ANR	4205985	PrimaryExpression	1		4205019	1					
ANR	4205986	IdentifierDeclStatement	"char * eq = strchr ( a , '=' ) ;"	2408:3:70452:70478	4205019	1	True				
ANR	4205987	IdentifierDecl	"* eq = strchr ( a , '=' )"		4205019	0					
ANR	4205988	IdentifierDeclType	char *		4205019	0					
ANR	4205989	Identifier	eq		4205019	1					
ANR	4205990	AssignmentExpression	"* eq = strchr ( a , '=' )"		4205019	2		=			
ANR	4205991	Identifier	eq		4205019	0					
ANR	4205992	CallExpression	"strchr ( a , '=' )"		4205019	1					
ANR	4205993	Callee	strchr		4205019	0					
ANR	4205994	Identifier	strchr		4205019	0					
ANR	4205995	ArgumentList	a		4205019	1					
ANR	4205996	Argument	a		4205019	0					
ANR	4205997	Identifier	a		4205019	0					
ANR	4205998	Argument	'='		4205019	1					
ANR	4205999	PrimaryExpression	'='		4205019	0					
ANR	4206000	IfStatement	if ( eq )		4205019	2					
ANR	4206001	Condition	eq	2409:7:70487:70488	4205019	0	True				
ANR	4206002	Identifier	eq		4205019	0					
ANR	4206003	CompoundStatement		162:4:4014:4051	4205019	1					
ANR	4206004	ExpressionStatement	* eq ++ = 0	2410:4:70497:70506	4205019	0	True				
ANR	4206005	AssignmentExpression	* eq ++ = 0		4205019	0		=			
ANR	4206006	UnaryOperationExpression	* eq ++		4205019	0					
ANR	4206007	UnaryOperator	*		4205019	0					
ANR	4206008	PostIncDecOperationExpression	eq ++		4205019	1					
ANR	4206009	Identifier	eq		4205019	0					
ANR	4206010	IncDec	++		4205019	1					
ANR	4206011	PrimaryExpression	0		4205019	1					
ANR	4206012	IdentifierDeclStatement	char * k = a ;	2411:4:70512:70523	4205019	1	True				
ANR	4206013	IdentifierDecl	* k = a		4205019	0					
ANR	4206014	IdentifierDeclType	char *		4205019	0					
ANR	4206015	Identifier	k		4205019	1					
ANR	4206016	AssignmentExpression	* k = a		4205019	2		=			
ANR	4206017	Identifier	a		4205019	0					
ANR	4206018	Identifier	a		4205019	1					
ANR	4206019	ExpressionStatement	r_str_trim ( a )	2412:4:70529:70543	4205019	2	True				
ANR	4206020	CallExpression	r_str_trim ( a )		4205019	0					
ANR	4206021	Callee	r_str_trim		4205019	0					
ANR	4206022	Identifier	r_str_trim		4205019	0					
ANR	4206023	ArgumentList	a		4205019	1					
ANR	4206024	Argument	a		4205019	0					
ANR	4206025	Identifier	a		4205019	0					
ANR	4206026	IdentifierDeclStatement	"bool v = ! strcmp ( eq , ""true"" ) || atoi ( eq ) ;"	2413:4:70549:70591	4205019	3	True				
ANR	4206027	IdentifierDecl	"v = ! strcmp ( eq , ""true"" ) || atoi ( eq )"		4205019	0					
ANR	4206028	IdentifierDeclType	bool		4205019	0					
ANR	4206029	Identifier	v		4205019	1					
ANR	4206030	AssignmentExpression	"v = ! strcmp ( eq , ""true"" ) || atoi ( eq )"		4205019	2		=			
ANR	4206031	Identifier	v		4205019	0					
ANR	4206032	OrExpression	"! strcmp ( eq , ""true"" ) || atoi ( eq )"		4205019	1		||			
ANR	4206033	UnaryOperationExpression	"! strcmp ( eq , ""true"" )"		4205019	0					
ANR	4206034	UnaryOperator	!		4205019	0					
ANR	4206035	CallExpression	"strcmp ( eq , ""true"" )"		4205019	1					
ANR	4206036	Callee	strcmp		4205019	0					
ANR	4206037	Identifier	strcmp		4205019	0					
ANR	4206038	ArgumentList	eq		4205019	1					
ANR	4206039	Argument	eq		4205019	0					
ANR	4206040	Identifier	eq		4205019	0					
ANR	4206041	Argument	"""true"""		4205019	1					
ANR	4206042	PrimaryExpression	"""true"""		4205019	0					
ANR	4206043	CallExpression	atoi ( eq )		4205019	1					
ANR	4206044	Callee	atoi		4205019	0					
ANR	4206045	Identifier	atoi		4205019	0					
ANR	4206046	ArgumentList	eq		4205019	1					
ANR	4206047	Argument	eq		4205019	0					
ANR	4206048	Identifier	eq		4205019	0					
ANR	4206049	IdentifierDeclStatement	int type = r_reg_cond_from_string ( k ) ;	2414:4:70597:70634	4205019	4	True				
ANR	4206050	IdentifierDecl	type = r_reg_cond_from_string ( k )		4205019	0					
ANR	4206051	IdentifierDeclType	int		4205019	0					
ANR	4206052	Identifier	type		4205019	1					
ANR	4206053	AssignmentExpression	type = r_reg_cond_from_string ( k )		4205019	2		=			
ANR	4206054	Identifier	type		4205019	0					
ANR	4206055	CallExpression	r_reg_cond_from_string ( k )		4205019	1					
ANR	4206056	Callee	r_reg_cond_from_string		4205019	0					
ANR	4206057	Identifier	r_reg_cond_from_string		4205019	0					
ANR	4206058	ArgumentList	k		4205019	1					
ANR	4206059	Argument	k		4205019	0					
ANR	4206060	Identifier	k		4205019	0					
ANR	4206061	IfStatement	if ( type != - 1 )		4205019	5					
ANR	4206062	Condition	type != - 1	2415:8:70644:70653	4205019	0	True				
ANR	4206063	EqualityExpression	type != - 1		4205019	0		!=			
ANR	4206064	Identifier	type		4205019	0					
ANR	4206065	UnaryOperationExpression	- 1		4205019	1					
ANR	4206066	UnaryOperator	-		4205019	0					
ANR	4206067	PrimaryExpression	1		4205019	1					
ANR	4206068	CompoundStatement		164:5:4080:4138	4205019	1					
ANR	4206069	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2416:5:70663:70721	4205019	0	True				
ANR	4206070	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	0					
ANR	4206071	IdentifierDeclType	RRegFlags *		4205019	0					
ANR	4206072	Identifier	rf		4205019	1					
ANR	4206073	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	2		=			
ANR	4206074	Identifier	rf		4205019	0					
ANR	4206075	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	1					
ANR	4206076	Callee	r_reg_cond_retrieve		4205019	0					
ANR	4206077	Identifier	r_reg_cond_retrieve		4205019	0					
ANR	4206078	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206079	Argument	core -> dbg -> reg		4205019	0					
ANR	4206080	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206081	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206082	Identifier	core		4205019	0					
ANR	4206083	Identifier	dbg		4205019	1					
ANR	4206084	Identifier	reg		4205019	1					
ANR	4206085	Argument	NULL		4205019	1					
ANR	4206086	Identifier	NULL		4205019	0					
ANR	4206087	IfStatement	if ( rf )		4205019	1					
ANR	4206088	Condition	rf	2417:9:70732:70733	4205019	0	True				
ANR	4206089	Identifier	rf		4205019	0					
ANR	4206090	CompoundStatement		165:13:4153:4153	4205019	1					
ANR	4206091	ExpressionStatement	"r_reg_cond_bits_set ( core -> dbg -> reg , type , rf , v )"	2418:6:70744:70793	4205019	0	True				
ANR	4206092	CallExpression	"r_reg_cond_bits_set ( core -> dbg -> reg , type , rf , v )"		4205019	0					
ANR	4206093	Callee	r_reg_cond_bits_set		4205019	0					
ANR	4206094	Identifier	r_reg_cond_bits_set		4205019	0					
ANR	4206095	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206096	Argument	core -> dbg -> reg		4205019	0					
ANR	4206097	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206098	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206099	Identifier	core		4205019	0					
ANR	4206100	Identifier	dbg		4205019	1					
ANR	4206101	Identifier	reg		4205019	1					
ANR	4206102	Argument	type		4205019	1					
ANR	4206103	Identifier	type		4205019	0					
ANR	4206104	Argument	rf		4205019	2					
ANR	4206105	Identifier	rf		4205019	0					
ANR	4206106	Argument	v		4205019	3					
ANR	4206107	Identifier	v		4205019	0					
ANR	4206108	ExpressionStatement	"r_reg_cond_apply ( core -> dbg -> reg , rf )"	2419:6:70801:70838	4205019	1	True				
ANR	4206109	CallExpression	"r_reg_cond_apply ( core -> dbg -> reg , rf )"		4205019	0					
ANR	4206110	Callee	r_reg_cond_apply		4205019	0					
ANR	4206111	Identifier	r_reg_cond_apply		4205019	0					
ANR	4206112	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206113	Argument	core -> dbg -> reg		4205019	0					
ANR	4206114	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206115	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206116	Identifier	core		4205019	0					
ANR	4206117	Identifier	dbg		4205019	1					
ANR	4206118	Identifier	reg		4205019	1					
ANR	4206119	Argument	rf		4205019	1					
ANR	4206120	Identifier	rf		4205019	0					
ANR	4206121	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	2420:6:70846:70896	4205019	2	True				
ANR	4206122	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		4205019	0					
ANR	4206123	Callee	r_debug_reg_sync		4205019	0					
ANR	4206124	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206125	ArgumentList	core -> dbg		4205019	1					
ANR	4206126	Argument	core -> dbg		4205019	0					
ANR	4206127	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206128	Identifier	core		4205019	0					
ANR	4206129	Identifier	dbg		4205019	1					
ANR	4206130	Argument	R_REG_TYPE_ALL		4205019	1					
ANR	4206131	Identifier	R_REG_TYPE_ALL		4205019	0					
ANR	4206132	Argument	true		4205019	2					
ANR	4206133	Identifier	true		4205019	0					
ANR	4206134	ExpressionStatement	free ( rf )	2421:6:70904:70913	4205019	3	True				
ANR	4206135	CallExpression	free ( rf )		4205019	0					
ANR	4206136	Callee	free		4205019	0					
ANR	4206137	Identifier	free		4205019	0					
ANR	4206138	ArgumentList	rf		4205019	1					
ANR	4206139	Argument	rf		4205019	0					
ANR	4206140	Identifier	rf		4205019	0					
ANR	4206141	ElseStatement	else		4205019	0					
ANR	4206142	CompoundStatement		171:11:4350:4350	4205019	0					
ANR	4206143	ExpressionStatement	"eprintf ( ""Unknown condition register\\n"" )"	2424:5:70940:70980	4205019	0	True				
ANR	4206144	CallExpression	"eprintf ( ""Unknown condition register\\n"" )"		4205019	0					
ANR	4206145	Callee	eprintf		4205019	0					
ANR	4206146	Identifier	eprintf		4205019	0					
ANR	4206147	ArgumentList	"""Unknown condition register\\n"""		4205019	1					
ANR	4206148	Argument	"""Unknown condition register\\n"""		4205019	0					
ANR	4206149	PrimaryExpression	"""Unknown condition register\\n"""		4205019	0					
ANR	4206150	ExpressionStatement	free ( a )	2427:3:70996:71004	4205019	3	True				
ANR	4206151	CallExpression	free ( a )		4205019	0					
ANR	4206152	Callee	free		4205019	0					
ANR	4206153	Identifier	free		4205019	0					
ANR	4206154	ArgumentList	a		4205019	1					
ANR	4206155	Argument	a		4205019	0					
ANR	4206156	Identifier	a		4205019	0					
ANR	4206157	ElseStatement	else		4205019	0					
ANR	4206158	CompoundStatement		178:3:4453:4495	4205019	0					
ANR	4206159	IdentifierDeclStatement	RRegItem * r ;	2429:3:71020:71031	4205019	0	True				
ANR	4206160	IdentifierDecl	* r		4205019	0					
ANR	4206161	IdentifierDeclType	RRegItem *		4205019	0					
ANR	4206162	Identifier	r		4205019	1					
ANR	4206163	IdentifierDeclStatement	const char * name = r_str_trim_ro ( str + 1 ) ;	2430:3:71036:71078	4205019	1	True				
ANR	4206164	IdentifierDecl	* name = r_str_trim_ro ( str + 1 )		4205019	0					
ANR	4206165	IdentifierDeclType	const char *		4205019	0					
ANR	4206166	Identifier	name		4205019	1					
ANR	4206167	AssignmentExpression	* name = r_str_trim_ro ( str + 1 )		4205019	2		=			
ANR	4206168	Identifier	name		4205019	0					
ANR	4206169	CallExpression	r_str_trim_ro ( str + 1 )		4205019	1					
ANR	4206170	Callee	r_str_trim_ro		4205019	0					
ANR	4206171	Identifier	r_str_trim_ro		4205019	0					
ANR	4206172	ArgumentList	str + 1		4205019	1					
ANR	4206173	Argument	str + 1		4205019	0					
ANR	4206174	AdditiveExpression	str + 1		4205019	0		+			
ANR	4206175	Identifier	str		4205019	0					
ANR	4206176	PrimaryExpression	1		4205019	1					
ANR	4206177	IfStatement	if ( * name && name [ 1 ] )		4205019	2					
ANR	4206178	Condition	* name && name [ 1 ]	2431:7:71087:71102	4205019	0	True				
ANR	4206179	AndExpression	* name && name [ 1 ]		4205019	0		&&			
ANR	4206180	UnaryOperationExpression	* name		4205019	0					
ANR	4206181	UnaryOperator	*		4205019	0					
ANR	4206182	Identifier	name		4205019	1					
ANR	4206183	ArrayIndexing	name [ 1 ]		4205019	1					
ANR	4206184	Identifier	name		4205019	0					
ANR	4206185	PrimaryExpression	1		4205019	1					
ANR	4206186	CompoundStatement		179:25:4522:4522	4205019	1					
ANR	4206187	ExpressionStatement	"r = r_reg_cond_get ( core -> dbg -> reg , name )"	2432:4:71111:71152	4205019	0	True				
ANR	4206188	AssignmentExpression	"r = r_reg_cond_get ( core -> dbg -> reg , name )"		4205019	0		=			
ANR	4206189	Identifier	r		4205019	0					
ANR	4206190	CallExpression	"r_reg_cond_get ( core -> dbg -> reg , name )"		4205019	1					
ANR	4206191	Callee	r_reg_cond_get		4205019	0					
ANR	4206192	Identifier	r_reg_cond_get		4205019	0					
ANR	4206193	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206194	Argument	core -> dbg -> reg		4205019	0					
ANR	4206195	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206196	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206197	Identifier	core		4205019	0					
ANR	4206198	Identifier	dbg		4205019	1					
ANR	4206199	Identifier	reg		4205019	1					
ANR	4206200	Argument	name		4205019	1					
ANR	4206201	Identifier	name		4205019	0					
ANR	4206202	IfStatement	if ( r )		4205019	1					
ANR	4206203	Condition	r	2433:8:71162:71162	4205019	0	True				
ANR	4206204	Identifier	r		4205019	0					
ANR	4206205	CompoundStatement		181:11:4582:4582	4205019	1					
ANR	4206206	ExpressionStatement	r_cons_println ( r -> name )	2434:5:71172:71196	4205019	0	True				
ANR	4206207	CallExpression	r_cons_println ( r -> name )		4205019	0					
ANR	4206208	Callee	r_cons_println		4205019	0					
ANR	4206209	Identifier	r_cons_println		4205019	0					
ANR	4206210	ArgumentList	r -> name		4205019	1					
ANR	4206211	Argument	r -> name		4205019	0					
ANR	4206212	PtrMemberAccess	r -> name		4205019	0					
ANR	4206213	Identifier	r		4205019	0					
ANR	4206214	Identifier	name		4205019	1					
ANR	4206215	ElseStatement	else		4205019	0					
ANR	4206216	CompoundStatement		185:5:4678:4736	4205019	0					
ANR	4206217	IdentifierDeclStatement	int id = r_reg_cond_from_string ( name ) ;	2436:5:71216:71254	4205019	0	True				
ANR	4206218	IdentifierDecl	id = r_reg_cond_from_string ( name )		4205019	0					
ANR	4206219	IdentifierDeclType	int		4205019	0					
ANR	4206220	Identifier	id		4205019	1					
ANR	4206221	AssignmentExpression	id = r_reg_cond_from_string ( name )		4205019	2		=			
ANR	4206222	Identifier	id		4205019	0					
ANR	4206223	CallExpression	r_reg_cond_from_string ( name )		4205019	1					
ANR	4206224	Callee	r_reg_cond_from_string		4205019	0					
ANR	4206225	Identifier	r_reg_cond_from_string		4205019	0					
ANR	4206226	ArgumentList	name		4205019	1					
ANR	4206227	Argument	name		4205019	0					
ANR	4206228	Identifier	name		4205019	0					
ANR	4206229	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2437:5:71261:71319	4205019	1	True				
ANR	4206230	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	0					
ANR	4206231	IdentifierDeclType	RRegFlags *		4205019	0					
ANR	4206232	Identifier	rf		4205019	1					
ANR	4206233	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	2		=			
ANR	4206234	Identifier	rf		4205019	0					
ANR	4206235	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	1					
ANR	4206236	Callee	r_reg_cond_retrieve		4205019	0					
ANR	4206237	Identifier	r_reg_cond_retrieve		4205019	0					
ANR	4206238	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206239	Argument	core -> dbg -> reg		4205019	0					
ANR	4206240	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206241	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206242	Identifier	core		4205019	0					
ANR	4206243	Identifier	dbg		4205019	1					
ANR	4206244	Identifier	reg		4205019	1					
ANR	4206245	Argument	NULL		4205019	1					
ANR	4206246	Identifier	NULL		4205019	0					
ANR	4206247	IfStatement	if ( rf )		4205019	2					
ANR	4206248	Condition	rf	2438:9:71330:71331	4205019	0	True				
ANR	4206249	Identifier	rf		4205019	0					
ANR	4206250	CompoundStatement		187:6:4759:4807	4205019	1					
ANR	4206251	IdentifierDeclStatement	"int o = r_reg_cond_bits ( core -> dbg -> reg , id , rf ) ;"	2439:6:71342:71390	4205019	0	True				
ANR	4206252	IdentifierDecl	"o = r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		4205019	0					
ANR	4206253	IdentifierDeclType	int		4205019	0					
ANR	4206254	Identifier	o		4205019	1					
ANR	4206255	AssignmentExpression	"o = r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		4205019	2		=			
ANR	4206256	Identifier	o		4205019	0					
ANR	4206257	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , id , rf )"		4205019	1					
ANR	4206258	Callee	r_reg_cond_bits		4205019	0					
ANR	4206259	Identifier	r_reg_cond_bits		4205019	0					
ANR	4206260	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206261	Argument	core -> dbg -> reg		4205019	0					
ANR	4206262	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206263	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206264	Identifier	core		4205019	0					
ANR	4206265	Identifier	dbg		4205019	1					
ANR	4206266	Identifier	reg		4205019	1					
ANR	4206267	Argument	id		4205019	1					
ANR	4206268	Identifier	id		4205019	0					
ANR	4206269	Argument	rf		4205019	2					
ANR	4206270	Identifier	rf		4205019	0					
ANR	4206271	ExpressionStatement	core -> num -> value = o	2440:6:71398:71418	4205019	1	True				
ANR	4206272	AssignmentExpression	core -> num -> value = o		4205019	0		=			
ANR	4206273	PtrMemberAccess	core -> num -> value		4205019	0					
ANR	4206274	PtrMemberAccess	core -> num		4205019	0					
ANR	4206275	Identifier	core		4205019	0					
ANR	4206276	Identifier	num		4205019	1					
ANR	4206277	Identifier	value		4205019	1					
ANR	4206278	Identifier	o		4205019	1					
ANR	4206279	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , o )"	2442:6:71441:71466	4205019	2	True				
ANR	4206280	CallExpression	"r_cons_printf ( ""%d\\n"" , o )"		4205019	0					
ANR	4206281	Callee	r_cons_printf		4205019	0					
ANR	4206282	Identifier	r_cons_printf		4205019	0					
ANR	4206283	ArgumentList	"""%d\\n"""		4205019	1					
ANR	4206284	Argument	"""%d\\n"""		4205019	0					
ANR	4206285	PrimaryExpression	"""%d\\n"""		4205019	0					
ANR	4206286	Argument	o		4205019	1					
ANR	4206287	Identifier	o		4205019	0					
ANR	4206288	ExpressionStatement	free ( rf )	2443:6:71474:71483	4205019	3	True				
ANR	4206289	CallExpression	free ( rf )		4205019	0					
ANR	4206290	Callee	free		4205019	0					
ANR	4206291	Identifier	free		4205019	0					
ANR	4206292	ArgumentList	rf		4205019	1					
ANR	4206293	Argument	rf		4205019	0					
ANR	4206294	Identifier	rf		4205019	0					
ANR	4206295	ElseStatement	else		4205019	0					
ANR	4206296	ExpressionStatement	"eprintf ( ""unknown conditional or flag register\\n"" )"	2444:12:71497:71547	4205019	0	True				
ANR	4206297	CallExpression	"eprintf ( ""unknown conditional or flag register\\n"" )"		4205019	0					
ANR	4206298	Callee	eprintf		4205019	0					
ANR	4206299	Identifier	eprintf		4205019	0					
ANR	4206300	ArgumentList	"""unknown conditional or flag register\\n"""		4205019	1					
ANR	4206301	Argument	"""unknown conditional or flag register\\n"""		4205019	0					
ANR	4206302	PrimaryExpression	"""unknown conditional or flag register\\n"""		4205019	0					
ANR	4206303	ElseStatement	else		4205019	0					
ANR	4206304	CompoundStatement		195:4:4988:5046	4205019	0					
ANR	4206305	IdentifierDeclStatement	"RRegFlags * rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL ) ;"	2447:4:71571:71629	4205019	0	True				
ANR	4206306	IdentifierDecl	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	0					
ANR	4206307	IdentifierDeclType	RRegFlags *		4205019	0					
ANR	4206308	Identifier	rf		4205019	1					
ANR	4206309	AssignmentExpression	"* rf = r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	2		=			
ANR	4206310	Identifier	rf		4205019	0					
ANR	4206311	CallExpression	"r_reg_cond_retrieve ( core -> dbg -> reg , NULL )"		4205019	1					
ANR	4206312	Callee	r_reg_cond_retrieve		4205019	0					
ANR	4206313	Identifier	r_reg_cond_retrieve		4205019	0					
ANR	4206314	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206315	Argument	core -> dbg -> reg		4205019	0					
ANR	4206316	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206317	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206318	Identifier	core		4205019	0					
ANR	4206319	Identifier	dbg		4205019	1					
ANR	4206320	Identifier	reg		4205019	1					
ANR	4206321	Argument	NULL		4205019	1					
ANR	4206322	Identifier	NULL		4205019	0					
ANR	4206323	IfStatement	if ( rf )		4205019	1					
ANR	4206324	Condition	rf	2448:8:71639:71640	4205019	0	True				
ANR	4206325	Identifier	rf		4205019	0					
ANR	4206326	CompoundStatement		196:12:5060:5060	4205019	1					
ANR	4206327	IfStatement	if ( * name == '=' )		4205019	0					
ANR	4206328	Condition	* name == '='	2449:9:71654:71663	4205019	0	True				
ANR	4206329	EqualityExpression	* name == '='		4205019	0		==			
ANR	4206330	UnaryOperationExpression	* name		4205019	0					
ANR	4206331	UnaryOperator	*		4205019	0					
ANR	4206332	Identifier	name		4205019	1					
ANR	4206333	PrimaryExpression	'='		4205019	1					
ANR	4206334	CompoundStatement		197:21:5083:5083	4205019	1					
ANR	4206335	ForStatement	for ( i = 0 ; i < R_REG_COND_LAST ; i ++ )		4205019	0					
ANR	4206336	ForInit	i = 0 ;	2450:11:71679:71682	4205019	0	True				
ANR	4206337	AssignmentExpression	i = 0		4205019	0		=			
ANR	4206338	Identifier	i		4205019	0					
ANR	4206339	PrimaryExpression	0		4205019	1					
ANR	4206340	Condition	i < R_REG_COND_LAST	2450:16:71684:71700	4205019	1	True				
ANR	4206341	RelationalExpression	i < R_REG_COND_LAST		4205019	0		<			
ANR	4206342	Identifier	i		4205019	0					
ANR	4206343	Identifier	R_REG_COND_LAST		4205019	1					
ANR	4206344	PostIncDecOperationExpression	i ++	2450:35:71703:71705	4205019	2	True				
ANR	4206345	Identifier	i		4205019	0					
ANR	4206346	IncDec	++		4205019	1					
ANR	4206347	CompoundStatement		198:40:5125:5125	4205019	3					
ANR	4206348	ExpressionStatement	"r_cons_printf ( ""%s:%d "" , r_reg_cond_to_string ( i ) , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) )"	2451:7:71717:71826	4205019	0	True				
ANR	4206349	CallExpression	"r_cons_printf ( ""%s:%d "" , r_reg_cond_to_string ( i ) , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) )"		4205019	0					
ANR	4206350	Callee	r_cons_printf		4205019	0					
ANR	4206351	Identifier	r_cons_printf		4205019	0					
ANR	4206352	ArgumentList	"""%s:%d """		4205019	1					
ANR	4206353	Argument	"""%s:%d """		4205019	0					
ANR	4206354	PrimaryExpression	"""%s:%d """		4205019	0					
ANR	4206355	Argument	r_reg_cond_to_string ( i )		4205019	1					
ANR	4206356	CallExpression	r_reg_cond_to_string ( i )		4205019	0					
ANR	4206357	Callee	r_reg_cond_to_string		4205019	0					
ANR	4206358	Identifier	r_reg_cond_to_string		4205019	0					
ANR	4206359	ArgumentList	i		4205019	1					
ANR	4206360	Argument	i		4205019	0					
ANR	4206361	Identifier	i		4205019	0					
ANR	4206362	Argument	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		4205019	2					
ANR	4206363	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		4205019	0					
ANR	4206364	Callee	r_reg_cond_bits		4205019	0					
ANR	4206365	Identifier	r_reg_cond_bits		4205019	0					
ANR	4206366	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206367	Argument	core -> dbg -> reg		4205019	0					
ANR	4206368	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206369	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206370	Identifier	core		4205019	0					
ANR	4206371	Identifier	dbg		4205019	1					
ANR	4206372	Identifier	reg		4205019	1					
ANR	4206373	Argument	i		4205019	1					
ANR	4206374	Identifier	i		4205019	0					
ANR	4206375	Argument	rf		4205019	2					
ANR	4206376	Identifier	rf		4205019	0					
ANR	4206377	ExpressionStatement	r_cons_newline ( )	2455:6:71842:71859	4205019	1	True				
ANR	4206378	CallExpression	r_cons_newline ( )		4205019	0					
ANR	4206379	Callee	r_cons_newline		4205019	0					
ANR	4206380	Identifier	r_cons_newline		4205019	0					
ANR	4206381	ArgumentList			4205019	1					
ANR	4206382	ElseStatement	else		4205019	0					
ANR	4206383	CompoundStatement		204:12:5290:5290	4205019	0					
ANR	4206384	ForStatement	for ( i = 0 ; i < R_REG_COND_LAST ; i ++ )		4205019	0					
ANR	4206385	ForInit	i = 0 ;	2457:11:71886:71889	4205019	0	True				
ANR	4206386	AssignmentExpression	i = 0		4205019	0		=			
ANR	4206387	Identifier	i		4205019	0					
ANR	4206388	PrimaryExpression	0		4205019	1					
ANR	4206389	Condition	i < R_REG_COND_LAST	2457:16:71891:71907	4205019	1	True				
ANR	4206390	RelationalExpression	i < R_REG_COND_LAST		4205019	0		<			
ANR	4206391	Identifier	i		4205019	0					
ANR	4206392	Identifier	R_REG_COND_LAST		4205019	1					
ANR	4206393	PostIncDecOperationExpression	i ++	2457:35:71910:71912	4205019	2	True				
ANR	4206394	Identifier	i		4205019	0					
ANR	4206395	IncDec	++		4205019	1					
ANR	4206396	CompoundStatement		205:40:5332:5332	4205019	3					
ANR	4206397	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) , r_reg_cond_to_string ( i ) )"	2458:7:71924:72034	4205019	0	True				
ANR	4206398	CallExpression	"r_cons_printf ( ""%d %s\\n"" , r_reg_cond_bits ( core -> dbg -> reg , i , rf ) , r_reg_cond_to_string ( i ) )"		4205019	0					
ANR	4206399	Callee	r_cons_printf		4205019	0					
ANR	4206400	Identifier	r_cons_printf		4205019	0					
ANR	4206401	ArgumentList	"""%d %s\\n"""		4205019	1					
ANR	4206402	Argument	"""%d %s\\n"""		4205019	0					
ANR	4206403	PrimaryExpression	"""%d %s\\n"""		4205019	0					
ANR	4206404	Argument	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		4205019	1					
ANR	4206405	CallExpression	"r_reg_cond_bits ( core -> dbg -> reg , i , rf )"		4205019	0					
ANR	4206406	Callee	r_reg_cond_bits		4205019	0					
ANR	4206407	Identifier	r_reg_cond_bits		4205019	0					
ANR	4206408	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206409	Argument	core -> dbg -> reg		4205019	0					
ANR	4206410	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206411	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206412	Identifier	core		4205019	0					
ANR	4206413	Identifier	dbg		4205019	1					
ANR	4206414	Identifier	reg		4205019	1					
ANR	4206415	Argument	i		4205019	1					
ANR	4206416	Identifier	i		4205019	0					
ANR	4206417	Argument	rf		4205019	2					
ANR	4206418	Identifier	rf		4205019	0					
ANR	4206419	Argument	r_reg_cond_to_string ( i )		4205019	2					
ANR	4206420	CallExpression	r_reg_cond_to_string ( i )		4205019	0					
ANR	4206421	Callee	r_reg_cond_to_string		4205019	0					
ANR	4206422	Identifier	r_reg_cond_to_string		4205019	0					
ANR	4206423	ArgumentList	i		4205019	1					
ANR	4206424	Argument	i		4205019	0					
ANR	4206425	Identifier	i		4205019	0					
ANR	4206426	ExpressionStatement	free ( rf )	2463:5:72056:72065	4205019	1	True				
ANR	4206427	CallExpression	free ( rf )		4205019	0					
ANR	4206428	Callee	free		4205019	0					
ANR	4206429	Identifier	free		4205019	0					
ANR	4206430	ArgumentList	rf		4205019	1					
ANR	4206431	Argument	rf		4205019	0					
ANR	4206432	Identifier	rf		4205019	0					
ANR	4206433	BreakStatement	break ;	2467:2:72084:72089	4205019	18	True				
ANR	4206434	Label	case 'x' :	2468:1:72092:72100	4205019	19	True				
ANR	4206435	SwitchStatement	switch ( str [ 1 ] )		4205019	20					
ANR	4206436	Condition	str [ 1 ]	2469:10:72121:72126	4205019	0	True				
ANR	4206437	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4206438	Identifier	str		4205019	0					
ANR	4206439	PrimaryExpression	1		4205019	1					
ANR	4206440	CompoundStatement		217:18:5546:5546	4205019	1					
ANR	4206441	Label	case '\\0' :	2470:2:72133:72142	4205019	0	True				
ANR	4206442	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2471:3:72147:72198	4205019	1	True				
ANR	4206443	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		4205019	0					
ANR	4206444	Callee	r_debug_reg_sync		4205019	0					
ANR	4206445	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206446	ArgumentList	core -> dbg		4205019	1					
ANR	4206447	Argument	core -> dbg		4205019	0					
ANR	4206448	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206449	Identifier	core		4205019	0					
ANR	4206450	Identifier	dbg		4205019	1					
ANR	4206451	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206452	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206453	Argument	false		4205019	2					
ANR	4206454	Identifier	false		4205019	0					
ANR	4206455	ExpressionStatement	r_debug_drx_list ( core -> dbg )	2472:3:72203:72231	4205019	2	True				
ANR	4206456	CallExpression	r_debug_drx_list ( core -> dbg )		4205019	0					
ANR	4206457	Callee	r_debug_drx_list		4205019	0					
ANR	4206458	Identifier	r_debug_drx_list		4205019	0					
ANR	4206459	ArgumentList	core -> dbg		4205019	1					
ANR	4206460	Argument	core -> dbg		4205019	0					
ANR	4206461	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206462	Identifier	core		4205019	0					
ANR	4206463	Identifier	dbg		4205019	1					
ANR	4206464	BreakStatement	break ;	2473:3:72236:72241	4205019	3	True				
ANR	4206465	Label	case '-' :	2474:2:72245:72253	4205019	4	True				
ANR	4206466	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2475:3:72258:72309	4205019	5	True				
ANR	4206467	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		4205019	0					
ANR	4206468	Callee	r_debug_reg_sync		4205019	0					
ANR	4206469	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206470	ArgumentList	core -> dbg		4205019	1					
ANR	4206471	Argument	core -> dbg		4205019	0					
ANR	4206472	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206473	Identifier	core		4205019	0					
ANR	4206474	Identifier	dbg		4205019	1					
ANR	4206475	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206476	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206477	Argument	false		4205019	2					
ANR	4206478	Identifier	false		4205019	0					
ANR	4206479	ExpressionStatement	"r_debug_drx_unset ( core -> dbg , atoi ( str + 2 ) )"	2476:3:72314:72359	4205019	6	True				
ANR	4206480	CallExpression	"r_debug_drx_unset ( core -> dbg , atoi ( str + 2 ) )"		4205019	0					
ANR	4206481	Callee	r_debug_drx_unset		4205019	0					
ANR	4206482	Identifier	r_debug_drx_unset		4205019	0					
ANR	4206483	ArgumentList	core -> dbg		4205019	1					
ANR	4206484	Argument	core -> dbg		4205019	0					
ANR	4206485	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206486	Identifier	core		4205019	0					
ANR	4206487	Identifier	dbg		4205019	1					
ANR	4206488	Argument	atoi ( str + 2 )		4205019	1					
ANR	4206489	CallExpression	atoi ( str + 2 )		4205019	0					
ANR	4206490	Callee	atoi		4205019	0					
ANR	4206491	Identifier	atoi		4205019	0					
ANR	4206492	ArgumentList	str + 2		4205019	1					
ANR	4206493	Argument	str + 2		4205019	0					
ANR	4206494	AdditiveExpression	str + 2		4205019	0		+			
ANR	4206495	Identifier	str		4205019	0					
ANR	4206496	PrimaryExpression	2		4205019	1					
ANR	4206497	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"	2477:3:72364:72414	4205019	7	True				
ANR	4206498	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"		4205019	0					
ANR	4206499	Callee	r_debug_reg_sync		4205019	0					
ANR	4206500	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206501	ArgumentList	core -> dbg		4205019	1					
ANR	4206502	Argument	core -> dbg		4205019	0					
ANR	4206503	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206504	Identifier	core		4205019	0					
ANR	4206505	Identifier	dbg		4205019	1					
ANR	4206506	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206507	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206508	Argument	true		4205019	2					
ANR	4206509	Identifier	true		4205019	0					
ANR	4206510	BreakStatement	break ;	2478:3:72419:72424	4205019	8	True				
ANR	4206511	Label	case ' ' :	2479:2:72428:72436	4205019	9	True				
ANR	4206512	CompoundStatement		231:6:5934:5942	4205019	10					
ANR	4206513	IdentifierDeclStatement	char * s = strdup ( str + 2 ) ;	2480:6:72446:72470	4205019	0	True				
ANR	4206514	IdentifierDecl	* s = strdup ( str + 2 )		4205019	0					
ANR	4206515	IdentifierDeclType	char *		4205019	0					
ANR	4206516	Identifier	s		4205019	1					
ANR	4206517	AssignmentExpression	* s = strdup ( str + 2 )		4205019	2		=			
ANR	4206518	Identifier	s		4205019	0					
ANR	4206519	CallExpression	strdup ( str + 2 )		4205019	1					
ANR	4206520	Callee	strdup		4205019	0					
ANR	4206521	Identifier	strdup		4205019	0					
ANR	4206522	ArgumentList	str + 2		4205019	1					
ANR	4206523	Argument	str + 2		4205019	0					
ANR	4206524	AdditiveExpression	str + 2		4205019	0		+			
ANR	4206525	Identifier	str		4205019	0					
ANR	4206526	PrimaryExpression	2		4205019	1					
ANR	4206527	IdentifierDeclStatement	"char sl , n , perm ;"	2481:6:72478:72494	4205019	1	True				
ANR	4206528	IdentifierDecl	sl		4205019	0					
ANR	4206529	IdentifierDeclType	char		4205019	0					
ANR	4206530	Identifier	sl		4205019	1					
ANR	4206531	IdentifierDecl	n		4205019	1					
ANR	4206532	IdentifierDeclType	char		4205019	0					
ANR	4206533	Identifier	n		4205019	1					
ANR	4206534	IdentifierDecl	perm		4205019	2					
ANR	4206535	IdentifierDeclType	char		4205019	0					
ANR	4206536	Identifier	perm		4205019	1					
ANR	4206537	IdentifierDeclStatement	int len ;	2482:6:72502:72509	4205019	2	True				
ANR	4206538	IdentifierDecl	len		4205019	0					
ANR	4206539	IdentifierDeclType	int		4205019	0					
ANR	4206540	Identifier	len		4205019	1					
ANR	4206541	IdentifierDeclStatement	ut64 off ;	2483:6:72517:72525	4205019	3	True				
ANR	4206542	IdentifierDecl	off		4205019	0					
ANR	4206543	IdentifierDeclType	ut64		4205019	0					
ANR	4206544	Identifier	off		4205019	1					
ANR	4206545	ExpressionStatement	sl = r_str_word_set0 ( s )	2485:6:72534:72558	4205019	4	True				
ANR	4206546	AssignmentExpression	sl = r_str_word_set0 ( s )		4205019	0		=			
ANR	4206547	Identifier	sl		4205019	0					
ANR	4206548	CallExpression	r_str_word_set0 ( s )		4205019	1					
ANR	4206549	Callee	r_str_word_set0		4205019	0					
ANR	4206550	Identifier	r_str_word_set0		4205019	0					
ANR	4206551	ArgumentList	s		4205019	1					
ANR	4206552	Argument	s		4205019	0					
ANR	4206553	Identifier	s		4205019	0					
ANR	4206554	IfStatement	if ( sl == 4 )		4205019	5					
ANR	4206555	Condition	sl == 4	2486:10:72570:72576	4205019	0	True				
ANR	4206556	EqualityExpression	sl == 4		4205019	0		==			
ANR	4206557	Identifier	sl		4205019	0					
ANR	4206558	PrimaryExpression	4		4205019	1					
ANR	4206559	CompoundStatement		234:19:5996:5996	4205019	1					
ANR	4206560	Statement	define	2487:1:72582:72587	4205019	0	True				
ANR	4206561	Statement	arg	2487:8:72589:72591	4205019	1	True				
ANR	4206562	Statement	(	2487:11:72592:72592	4205019	2	True				
ANR	4206563	Statement	x	2487:12:72593:72593	4205019	3	True				
ANR	4206564	Statement	)	2487:13:72594:72594	4205019	4	True				
ANR	4206565	Statement	r_str_word_get0	2487:15:72596:72610	4205019	5	True				
ANR	4206566	Statement	(	2487:30:72611:72611	4205019	6	True				
ANR	4206567	Statement	s	2487:31:72612:72612	4205019	7	True				
ANR	4206568	Statement	","	2487:32:72613:72613	4205019	8	True				
ANR	4206569	Statement	x	2487:33:72614:72614	4205019	9	True				
ANR	4206570	Statement	)	2487:34:72615:72615	4205019	10	True				
ANR	4206571	ExpressionStatement	"n = ( char ) r_num_math ( core -> num , arg ( 0 ) )"	2488:7:72624:72664	4205019	11	True				
ANR	4206572	AssignmentExpression	"n = ( char ) r_num_math ( core -> num , arg ( 0 ) )"		4205019	0		=			
ANR	4206573	Identifier	n		4205019	0					
ANR	4206574	CastExpression	"( char ) r_num_math ( core -> num , arg ( 0 ) )"		4205019	1					
ANR	4206575	CastTarget	char		4205019	0					
ANR	4206576	CallExpression	"r_num_math ( core -> num , arg ( 0 ) )"		4205019	1					
ANR	4206577	Callee	r_num_math		4205019	0					
ANR	4206578	Identifier	r_num_math		4205019	0					
ANR	4206579	ArgumentList	core -> num		4205019	1					
ANR	4206580	Argument	core -> num		4205019	0					
ANR	4206581	PtrMemberAccess	core -> num		4205019	0					
ANR	4206582	Identifier	core		4205019	0					
ANR	4206583	Identifier	num		4205019	1					
ANR	4206584	Argument	arg ( 0 )		4205019	1					
ANR	4206585	CallExpression	arg ( 0 )		4205019	0					
ANR	4206586	Callee	arg		4205019	0					
ANR	4206587	Identifier	arg		4205019	0					
ANR	4206588	ArgumentList	0		4205019	1					
ANR	4206589	Argument	0		4205019	0					
ANR	4206590	PrimaryExpression	0		4205019	0					
ANR	4206591	ExpressionStatement	"off = r_num_math ( core -> num , arg ( 1 ) )"	2489:7:72673:72709	4205019	12	True				
ANR	4206592	AssignmentExpression	"off = r_num_math ( core -> num , arg ( 1 ) )"		4205019	0		=			
ANR	4206593	Identifier	off		4205019	0					
ANR	4206594	CallExpression	"r_num_math ( core -> num , arg ( 1 ) )"		4205019	1					
ANR	4206595	Callee	r_num_math		4205019	0					
ANR	4206596	Identifier	r_num_math		4205019	0					
ANR	4206597	ArgumentList	core -> num		4205019	1					
ANR	4206598	Argument	core -> num		4205019	0					
ANR	4206599	PtrMemberAccess	core -> num		4205019	0					
ANR	4206600	Identifier	core		4205019	0					
ANR	4206601	Identifier	num		4205019	1					
ANR	4206602	Argument	arg ( 1 )		4205019	1					
ANR	4206603	CallExpression	arg ( 1 )		4205019	0					
ANR	4206604	Callee	arg		4205019	0					
ANR	4206605	Identifier	arg		4205019	0					
ANR	4206606	ArgumentList	1		4205019	1					
ANR	4206607	Argument	1		4205019	0					
ANR	4206608	PrimaryExpression	1		4205019	0					
ANR	4206609	ExpressionStatement	"len = ( int ) r_num_math ( core -> num , arg ( 2 ) )"	2490:7:72718:72759	4205019	13	True				
ANR	4206610	AssignmentExpression	"len = ( int ) r_num_math ( core -> num , arg ( 2 ) )"		4205019	0		=			
ANR	4206611	Identifier	len		4205019	0					
ANR	4206612	CastExpression	"( int ) r_num_math ( core -> num , arg ( 2 ) )"		4205019	1					
ANR	4206613	CastTarget	int		4205019	0					
ANR	4206614	CallExpression	"r_num_math ( core -> num , arg ( 2 ) )"		4205019	1					
ANR	4206615	Callee	r_num_math		4205019	0					
ANR	4206616	Identifier	r_num_math		4205019	0					
ANR	4206617	ArgumentList	core -> num		4205019	1					
ANR	4206618	Argument	core -> num		4205019	0					
ANR	4206619	PtrMemberAccess	core -> num		4205019	0					
ANR	4206620	Identifier	core		4205019	0					
ANR	4206621	Identifier	num		4205019	1					
ANR	4206622	Argument	arg ( 2 )		4205019	1					
ANR	4206623	CallExpression	arg ( 2 )		4205019	0					
ANR	4206624	Callee	arg		4205019	0					
ANR	4206625	Identifier	arg		4205019	0					
ANR	4206626	ArgumentList	2		4205019	1					
ANR	4206627	Argument	2		4205019	0					
ANR	4206628	PrimaryExpression	2		4205019	0					
ANR	4206629	ExpressionStatement	perm = ( char ) r_str_rwx ( arg ( 3 ) )	2491:7:72768:72800	4205019	14	True				
ANR	4206630	AssignmentExpression	perm = ( char ) r_str_rwx ( arg ( 3 ) )		4205019	0		=			
ANR	4206631	Identifier	perm		4205019	0					
ANR	4206632	CastExpression	( char ) r_str_rwx ( arg ( 3 ) )		4205019	1					
ANR	4206633	CastTarget	char		4205019	0					
ANR	4206634	CallExpression	r_str_rwx ( arg ( 3 ) )		4205019	1					
ANR	4206635	Callee	r_str_rwx		4205019	0					
ANR	4206636	Identifier	r_str_rwx		4205019	0					
ANR	4206637	ArgumentList	arg ( 3 )		4205019	1					
ANR	4206638	Argument	arg ( 3 )		4205019	0					
ANR	4206639	CallExpression	arg ( 3 )		4205019	0					
ANR	4206640	Callee	arg		4205019	0					
ANR	4206641	Identifier	arg		4205019	0					
ANR	4206642	ArgumentList	3		4205019	1					
ANR	4206643	Argument	3		4205019	0					
ANR	4206644	PrimaryExpression	3		4205019	0					
ANR	4206645	IfStatement	if ( len == - 1 )		4205019	15					
ANR	4206646	Condition	len == - 1	2492:11:72813:72821	4205019	0	True				
ANR	4206647	EqualityExpression	len == - 1		4205019	0		==			
ANR	4206648	Identifier	len		4205019	0					
ANR	4206649	UnaryOperationExpression	- 1		4205019	1					
ANR	4206650	UnaryOperator	-		4205019	0					
ANR	4206651	PrimaryExpression	1		4205019	1					
ANR	4206652	CompoundStatement		240:22:6241:6241	4205019	1					
ANR	4206653	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2493:8:72834:72885	4205019	0	True				
ANR	4206654	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		4205019	0					
ANR	4206655	Callee	r_debug_reg_sync		4205019	0					
ANR	4206656	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206657	ArgumentList	core -> dbg		4205019	1					
ANR	4206658	Argument	core -> dbg		4205019	0					
ANR	4206659	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206660	Identifier	core		4205019	0					
ANR	4206661	Identifier	dbg		4205019	1					
ANR	4206662	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206663	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206664	Argument	false		4205019	2					
ANR	4206665	Identifier	false		4205019	0					
ANR	4206666	ExpressionStatement	"r_debug_drx_set ( core -> dbg , n , 0 , 0 , 0 , 0 )"	2494:8:72895:72937	4205019	1	True				
ANR	4206667	CallExpression	"r_debug_drx_set ( core -> dbg , n , 0 , 0 , 0 , 0 )"		4205019	0					
ANR	4206668	Callee	r_debug_drx_set		4205019	0					
ANR	4206669	Identifier	r_debug_drx_set		4205019	0					
ANR	4206670	ArgumentList	core -> dbg		4205019	1					
ANR	4206671	Argument	core -> dbg		4205019	0					
ANR	4206672	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206673	Identifier	core		4205019	0					
ANR	4206674	Identifier	dbg		4205019	1					
ANR	4206675	Argument	n		4205019	1					
ANR	4206676	Identifier	n		4205019	0					
ANR	4206677	Argument	0		4205019	2					
ANR	4206678	PrimaryExpression	0		4205019	0					
ANR	4206679	Argument	0		4205019	3					
ANR	4206680	PrimaryExpression	0		4205019	0					
ANR	4206681	Argument	0		4205019	4					
ANR	4206682	PrimaryExpression	0		4205019	0					
ANR	4206683	Argument	0		4205019	5					
ANR	4206684	PrimaryExpression	0		4205019	0					
ANR	4206685	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"	2495:8:72947:72997	4205019	2	True				
ANR	4206686	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"		4205019	0					
ANR	4206687	Callee	r_debug_reg_sync		4205019	0					
ANR	4206688	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206689	ArgumentList	core -> dbg		4205019	1					
ANR	4206690	Argument	core -> dbg		4205019	0					
ANR	4206691	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206692	Identifier	core		4205019	0					
ANR	4206693	Identifier	dbg		4205019	1					
ANR	4206694	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206695	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206696	Argument	true		4205019	2					
ANR	4206697	Identifier	true		4205019	0					
ANR	4206698	ElseStatement	else		4205019	0					
ANR	4206699	CompoundStatement		244:14:6430:6430	4205019	0					
ANR	4206700	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"	2497:8:73023:73074	4205019	0	True				
ANR	4206701	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , false )"		4205019	0					
ANR	4206702	Callee	r_debug_reg_sync		4205019	0					
ANR	4206703	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206704	ArgumentList	core -> dbg		4205019	1					
ANR	4206705	Argument	core -> dbg		4205019	0					
ANR	4206706	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206707	Identifier	core		4205019	0					
ANR	4206708	Identifier	dbg		4205019	1					
ANR	4206709	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206710	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206711	Argument	false		4205019	2					
ANR	4206712	Identifier	false		4205019	0					
ANR	4206713	ExpressionStatement	"r_debug_drx_set ( core -> dbg , n , off , len , perm , 0 )"	2498:8:73084:73133	4205019	1	True				
ANR	4206714	CallExpression	"r_debug_drx_set ( core -> dbg , n , off , len , perm , 0 )"		4205019	0					
ANR	4206715	Callee	r_debug_drx_set		4205019	0					
ANR	4206716	Identifier	r_debug_drx_set		4205019	0					
ANR	4206717	ArgumentList	core -> dbg		4205019	1					
ANR	4206718	Argument	core -> dbg		4205019	0					
ANR	4206719	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206720	Identifier	core		4205019	0					
ANR	4206721	Identifier	dbg		4205019	1					
ANR	4206722	Argument	n		4205019	1					
ANR	4206723	Identifier	n		4205019	0					
ANR	4206724	Argument	off		4205019	2					
ANR	4206725	Identifier	off		4205019	0					
ANR	4206726	Argument	len		4205019	3					
ANR	4206727	Identifier	len		4205019	0					
ANR	4206728	Argument	perm		4205019	4					
ANR	4206729	Identifier	perm		4205019	0					
ANR	4206730	Argument	0		4205019	5					
ANR	4206731	PrimaryExpression	0		4205019	0					
ANR	4206732	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"	2499:8:73143:73193	4205019	2	True				
ANR	4206733	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_DRX , true )"		4205019	0					
ANR	4206734	Callee	r_debug_reg_sync		4205019	0					
ANR	4206735	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206736	ArgumentList	core -> dbg		4205019	1					
ANR	4206737	Argument	core -> dbg		4205019	0					
ANR	4206738	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206739	Identifier	core		4205019	0					
ANR	4206740	Identifier	dbg		4205019	1					
ANR	4206741	Argument	R_REG_TYPE_DRX		4205019	1					
ANR	4206742	Identifier	R_REG_TYPE_DRX		4205019	0					
ANR	4206743	Argument	true		4205019	2					
ANR	4206744	Identifier	true		4205019	0					
ANR	4206745	ElseStatement	else		4205019	0					
ANR	4206746	CompoundStatement		249:13:6634:6634	4205019	0					
ANR	4206747	ExpressionStatement	"eprintf ( ""|usage: drx n [address] [length] [perm]\\n"" )"	2502:5:73224:73277	4205019	0	True				
ANR	4206748	CallExpression	"eprintf ( ""|usage: drx n [address] [length] [perm]\\n"" )"		4205019	0					
ANR	4206749	Callee	eprintf		4205019	0					
ANR	4206750	Identifier	eprintf		4205019	0					
ANR	4206751	ArgumentList	"""|usage: drx n [address] [length] [perm]\\n"""		4205019	1					
ANR	4206752	Argument	"""|usage: drx n [address] [length] [perm]\\n"""		4205019	0					
ANR	4206753	PrimaryExpression	"""|usage: drx n [address] [length] [perm]\\n"""		4205019	0					
ANR	4206754	ExpressionStatement	free ( s )	2504:6:73293:73301	4205019	6	True				
ANR	4206755	CallExpression	free ( s )		4205019	0					
ANR	4206756	Callee	free		4205019	0					
ANR	4206757	Identifier	free		4205019	0					
ANR	4206758	ArgumentList	s		4205019	1					
ANR	4206759	Argument	s		4205019	0					
ANR	4206760	Identifier	s		4205019	0					
ANR	4206761	BreakStatement	break ;	2505:7:73310:73315	4205019	11	True				
ANR	4206762	Label	case '?' :	2506:2:73319:73327	4205019	12	True				
ANR	4206763	Label	default :	2507:2:73331:73338	4205019	13	True				
ANR	4206764	Identifier	default		4205019	0					
ANR	4206765	ExpressionStatement	"r_core_cmd_help ( core , help_msg_drx )"	2508:3:73343:73379	4205019	14	True				
ANR	4206766	CallExpression	"r_core_cmd_help ( core , help_msg_drx )"		4205019	0					
ANR	4206767	Callee	r_core_cmd_help		4205019	0					
ANR	4206768	Identifier	r_core_cmd_help		4205019	0					
ANR	4206769	ArgumentList	core		4205019	1					
ANR	4206770	Argument	core		4205019	0					
ANR	4206771	Identifier	core		4205019	0					
ANR	4206772	Argument	help_msg_drx		4205019	1					
ANR	4206773	Identifier	help_msg_drx		4205019	0					
ANR	4206774	BreakStatement	break ;	2509:3:73384:73389	4205019	15	True				
ANR	4206775	BreakStatement	break ;	2511:2:73397:73402	4205019	21	True				
ANR	4206776	Label	case 's' :	2512:1:73405:73413	4205019	22	True				
ANR	4206777	SwitchStatement	switch ( str [ 1 ] )		4205019	23					
ANR	4206778	Condition	str [ 1 ]	2513:10:73434:73439	4205019	0	True				
ANR	4206779	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4206780	Identifier	str		4205019	0					
ANR	4206781	PrimaryExpression	1		4205019	1					
ANR	4206782	CompoundStatement		261:18:6859:6859	4205019	1					
ANR	4206783	Label	case '\\0' :	2514:2:73446:73455	4205019	0	True				
ANR	4206784	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool ) )"	2515:3:73469:73546	4205019	1	True				
ANR	4206785	CallExpression	"r_cons_printf ( ""%d\\n"" , r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool ) )"		4205019	0					
ANR	4206786	Callee	r_cons_printf		4205019	0					
ANR	4206787	Identifier	r_cons_printf		4205019	0					
ANR	4206788	ArgumentList	"""%d\\n"""		4205019	1					
ANR	4206789	Argument	"""%d\\n"""		4205019	0					
ANR	4206790	PrimaryExpression	"""%d\\n"""		4205019	0					
ANR	4206791	Argument	r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool )		4205019	1					
ANR	4206792	CallExpression	r_list_length ( core -> dbg -> reg -> regset [ 0 ] . pool )		4205019	0					
ANR	4206793	Callee	r_list_length		4205019	0					
ANR	4206794	Identifier	r_list_length		4205019	0					
ANR	4206795	ArgumentList	core -> dbg -> reg -> regset [ 0 ] . pool		4205019	1					
ANR	4206796	Argument	core -> dbg -> reg -> regset [ 0 ] . pool		4205019	0					
ANR	4206797	MemberAccess	core -> dbg -> reg -> regset [ 0 ] . pool		4205019	0					
ANR	4206798	ArrayIndexing	core -> dbg -> reg -> regset [ 0 ]		4205019	0					
ANR	4206799	PtrMemberAccess	core -> dbg -> reg -> regset		4205019	0					
ANR	4206800	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206801	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206802	Identifier	core		4205019	0					
ANR	4206803	Identifier	dbg		4205019	1					
ANR	4206804	Identifier	reg		4205019	1					
ANR	4206805	Identifier	regset		4205019	1					
ANR	4206806	PrimaryExpression	0		4205019	1					
ANR	4206807	Identifier	pool		4205019	1					
ANR	4206808	BreakStatement	break ;	2517:3:73551:73556	4205019	2	True				
ANR	4206809	Label	case '-' :	2518:2:73560:73568	4205019	3	True				
ANR	4206810	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	2519:3:73583:73615	4205019	4	True				
ANR	4206811	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		4205019	0					
ANR	4206812	Callee	r_reg_arena_pop		4205019	0					
ANR	4206813	Identifier	r_reg_arena_pop		4205019	0					
ANR	4206814	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206815	Argument	core -> dbg -> reg		4205019	0					
ANR	4206816	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206817	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206818	Identifier	core		4205019	0					
ANR	4206819	Identifier	dbg		4205019	1					
ANR	4206820	Identifier	reg		4205019	1					
ANR	4206821	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	2521:3:73670:73720	4205019	5	True				
ANR	4206822	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		4205019	0					
ANR	4206823	Callee	r_debug_reg_sync		4205019	0					
ANR	4206824	Identifier	r_debug_reg_sync		4205019	0					
ANR	4206825	ArgumentList	core -> dbg		4205019	1					
ANR	4206826	Argument	core -> dbg		4205019	0					
ANR	4206827	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206828	Identifier	core		4205019	0					
ANR	4206829	Identifier	dbg		4205019	1					
ANR	4206830	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4206831	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4206832	Argument	true		4205019	2					
ANR	4206833	Identifier	true		4205019	0					
ANR	4206834	BreakStatement	break ;	2522:3:73725:73730	4205019	6	True				
ANR	4206835	Label	case '+' :	2523:2:73734:73742	4205019	7	True				
ANR	4206836	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	2524:3:73757:73790	4205019	8	True				
ANR	4206837	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		4205019	0					
ANR	4206838	Callee	r_reg_arena_push		4205019	0					
ANR	4206839	Identifier	r_reg_arena_push		4205019	0					
ANR	4206840	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4206841	Argument	core -> dbg -> reg		4205019	0					
ANR	4206842	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4206843	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4206844	Identifier	core		4205019	0					
ANR	4206845	Identifier	dbg		4205019	1					
ANR	4206846	Identifier	reg		4205019	1					
ANR	4206847	BreakStatement	break ;	2525:3:73795:73800	4205019	9	True				
ANR	4206848	Label	case '?' :	2526:2:73804:73812	4205019	10	True				
ANR	4206849	Label	default :	2527:2:73826:73833	4205019	11	True				
ANR	4206850	Identifier	default		4205019	0					
ANR	4206851	ExpressionStatement	"r_core_cmd_help ( core , help_msg_drs )"	2528:3:73838:73874	4205019	12	True				
ANR	4206852	CallExpression	"r_core_cmd_help ( core , help_msg_drs )"		4205019	0					
ANR	4206853	Callee	r_core_cmd_help		4205019	0					
ANR	4206854	Identifier	r_core_cmd_help		4205019	0					
ANR	4206855	ArgumentList	core		4205019	1					
ANR	4206856	Argument	core		4205019	0					
ANR	4206857	Identifier	core		4205019	0					
ANR	4206858	Argument	help_msg_drs		4205019	1					
ANR	4206859	Identifier	help_msg_drs		4205019	0					
ANR	4206860	BreakStatement	break ;	2529:3:73879:73884	4205019	13	True				
ANR	4206861	BreakStatement	break ;	2531:2:73892:73897	4205019	24	True				
ANR	4206862	Label	case 'm' :	2532:1:73900:73908	4205019	25	True				
ANR	4206863	IfStatement	if ( str [ 1 ] == '?' )		4205019	26					
ANR	4206864	Condition	str [ 1 ] == '?'	2533:6:73925:73935	4205019	0	True				
ANR	4206865	EqualityExpression	str [ 1 ] == '?'		4205019	0		==			
ANR	4206866	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4206867	Identifier	str		4205019	0					
ANR	4206868	PrimaryExpression	1		4205019	1					
ANR	4206869	PrimaryExpression	'?'		4205019	1					
ANR	4206870	CompoundStatement		281:19:7355:7355	4205019	1					
ANR	4206871	ExpressionStatement	"eprintf ( ""usage: drm [reg] [idx] [wordsize] [= value]\\n"" )"	2534:3:73943:74000	4205019	0	True				
ANR	4206872	CallExpression	"eprintf ( ""usage: drm [reg] [idx] [wordsize] [= value]\\n"" )"		4205019	0					
ANR	4206873	Callee	eprintf		4205019	0					
ANR	4206874	Identifier	eprintf		4205019	0					
ANR	4206875	ArgumentList	"""usage: drm [reg] [idx] [wordsize] [= value]\\n"""		4205019	1					
ANR	4206876	Argument	"""usage: drm [reg] [idx] [wordsize] [= value]\\n"""		4205019	0					
ANR	4206877	PrimaryExpression	"""usage: drm [reg] [idx] [wordsize] [= value]\\n"""		4205019	0					
ANR	4206878	ElseStatement	else		4205019	0					
ANR	4206879	IfStatement	if ( str [ 1 ] == ' ' )		4205019	0					
ANR	4206880	Condition	str [ 1 ] == ' '	2535:13:74015:74025	4205019	0	True				
ANR	4206881	EqualityExpression	str [ 1 ] == ' '		4205019	0		==			
ANR	4206882	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4206883	Identifier	str		4205019	0					
ANR	4206884	PrimaryExpression	1		4205019	1					
ANR	4206885	PrimaryExpression	' '		4205019	1					
ANR	4206886	CompoundStatement		301:3:7793:7846	4205019	1					
ANR	4206887	IdentifierDeclStatement	int word = 0 ;	2536:3:74033:74045	4205019	0	True				
ANR	4206888	IdentifierDecl	word = 0		4205019	0					
ANR	4206889	IdentifierDeclType	int		4205019	0					
ANR	4206890	Identifier	word		4205019	1					
ANR	4206891	AssignmentExpression	word = 0		4205019	2		=			
ANR	4206892	Identifier	word		4205019	0					
ANR	4206893	PrimaryExpression	0		4205019	1					
ANR	4206894	IdentifierDeclStatement	int size = 0 ;	2537:3:74050:74062	4205019	1	True				
ANR	4206895	IdentifierDecl	size = 0		4205019	0					
ANR	4206896	IdentifierDeclType	int		4205019	0					
ANR	4206897	Identifier	size		4205019	1					
ANR	4206898	AssignmentExpression	size = 0		4205019	2		=			
ANR	4206899	Identifier	size		4205019	0					
ANR	4206900	PrimaryExpression	0		4205019	1					
ANR	4206901	IdentifierDeclStatement	"char * q , * p , * name = strdup ( str + 2 ) ;"	2538:3:74075:74110	4205019	2	True				
ANR	4206902	IdentifierDecl	* q		4205019	0					
ANR	4206903	IdentifierDeclType	char *		4205019	0					
ANR	4206904	Identifier	q		4205019	1					
ANR	4206905	IdentifierDecl	* p		4205019	1					
ANR	4206906	IdentifierDeclType	char *		4205019	0					
ANR	4206907	Identifier	p		4205019	1					
ANR	4206908	IdentifierDecl	* name = strdup ( str + 2 )		4205019	2					
ANR	4206909	IdentifierDeclType	char *		4205019	0					
ANR	4206910	Identifier	name		4205019	1					
ANR	4206911	AssignmentExpression	* name = strdup ( str + 2 )		4205019	2		=			
ANR	4206912	Identifier	name		4205019	0					
ANR	4206913	CallExpression	strdup ( str + 2 )		4205019	1					
ANR	4206914	Callee	strdup		4205019	0					
ANR	4206915	Identifier	strdup		4205019	0					
ANR	4206916	ArgumentList	str + 2		4205019	1					
ANR	4206917	Argument	str + 2		4205019	0					
ANR	4206918	AdditiveExpression	str + 2		4205019	0		+			
ANR	4206919	Identifier	str		4205019	0					
ANR	4206920	PrimaryExpression	2		4205019	1					
ANR	4206921	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	2539:3:74115:74144	4205019	3	True				
ANR	4206922	IdentifierDecl	"* eq = strchr ( name , '=' )"		4205019	0					
ANR	4206923	IdentifierDeclType	char *		4205019	0					
ANR	4206924	Identifier	eq		4205019	1					
ANR	4206925	AssignmentExpression	"* eq = strchr ( name , '=' )"		4205019	2		=			
ANR	4206926	Identifier	eq		4205019	0					
ANR	4206927	CallExpression	"strchr ( name , '=' )"		4205019	1					
ANR	4206928	Callee	strchr		4205019	0					
ANR	4206929	Identifier	strchr		4205019	0					
ANR	4206930	ArgumentList	name		4205019	1					
ANR	4206931	Argument	name		4205019	0					
ANR	4206932	Identifier	name		4205019	0					
ANR	4206933	Argument	'='		4205019	1					
ANR	4206934	PrimaryExpression	'='		4205019	0					
ANR	4206935	IfStatement	if ( eq )		4205019	4					
ANR	4206936	Condition	eq	2540:7:74153:74154	4205019	0	True				
ANR	4206937	Identifier	eq		4205019	0					
ANR	4206938	CompoundStatement		288:11:7574:7574	4205019	1					
ANR	4206939	ExpressionStatement	* eq ++ = 0	2541:4:74163:74172	4205019	0	True				
ANR	4206940	AssignmentExpression	* eq ++ = 0		4205019	0		=			
ANR	4206941	UnaryOperationExpression	* eq ++		4205019	0					
ANR	4206942	UnaryOperator	*		4205019	0					
ANR	4206943	PostIncDecOperationExpression	eq ++		4205019	1					
ANR	4206944	Identifier	eq		4205019	0					
ANR	4206945	IncDec	++		4205019	1					
ANR	4206946	PrimaryExpression	0		4205019	1					
ANR	4206947	ExpressionStatement	"p = strchr ( name , ' ' )"	2543:3:74182:74204	4205019	5	True				
ANR	4206948	AssignmentExpression	"p = strchr ( name , ' ' )"		4205019	0		=			
ANR	4206949	Identifier	p		4205019	0					
ANR	4206950	CallExpression	"strchr ( name , ' ' )"		4205019	1					
ANR	4206951	Callee	strchr		4205019	0					
ANR	4206952	Identifier	strchr		4205019	0					
ANR	4206953	ArgumentList	name		4205019	1					
ANR	4206954	Argument	name		4205019	0					
ANR	4206955	Identifier	name		4205019	0					
ANR	4206956	Argument	' '		4205019	1					
ANR	4206957	PrimaryExpression	' '		4205019	0					
ANR	4206958	IfStatement	if ( p )		4205019	6					
ANR	4206959	Condition	p	2544:7:74213:74213	4205019	0	True				
ANR	4206960	Identifier	p		4205019	0					
ANR	4206961	CompoundStatement		292:10:7633:7633	4205019	1					
ANR	4206962	ExpressionStatement	* p ++ = 0	2545:4:74222:74230	4205019	0	True				
ANR	4206963	AssignmentExpression	* p ++ = 0		4205019	0		=			
ANR	4206964	UnaryOperationExpression	* p ++		4205019	0					
ANR	4206965	UnaryOperator	*		4205019	0					
ANR	4206966	PostIncDecOperationExpression	p ++		4205019	1					
ANR	4206967	Identifier	p		4205019	0					
ANR	4206968	IncDec	++		4205019	1					
ANR	4206969	PrimaryExpression	0		4205019	1					
ANR	4206970	ExpressionStatement	"q = strchr ( p , ' ' )"	2546:4:74236:74255	4205019	1	True				
ANR	4206971	AssignmentExpression	"q = strchr ( p , ' ' )"		4205019	0		=			
ANR	4206972	Identifier	q		4205019	0					
ANR	4206973	CallExpression	"strchr ( p , ' ' )"		4205019	1					
ANR	4206974	Callee	strchr		4205019	0					
ANR	4206975	Identifier	strchr		4205019	0					
ANR	4206976	ArgumentList	p		4205019	1					
ANR	4206977	Argument	p		4205019	0					
ANR	4206978	Identifier	p		4205019	0					
ANR	4206979	Argument	' '		4205019	1					
ANR	4206980	PrimaryExpression	' '		4205019	0					
ANR	4206981	IfStatement	if ( q )		4205019	2					
ANR	4206982	Condition	q	2547:8:74265:74265	4205019	0	True				
ANR	4206983	Identifier	q		4205019	0					
ANR	4206984	CompoundStatement		295:11:7685:7685	4205019	1					
ANR	4206985	ExpressionStatement	* q ++ = 0	2548:5:74275:74283	4205019	0	True				
ANR	4206986	AssignmentExpression	* q ++ = 0		4205019	0		=			
ANR	4206987	UnaryOperationExpression	* q ++		4205019	0					
ANR	4206988	UnaryOperator	*		4205019	0					
ANR	4206989	PostIncDecOperationExpression	q ++		4205019	1					
ANR	4206990	Identifier	q		4205019	0					
ANR	4206991	IncDec	++		4205019	1					
ANR	4206992	PrimaryExpression	0		4205019	1					
ANR	4206993	ExpressionStatement	"size = r_num_math ( core -> num , q )"	2549:5:74290:74322	4205019	1	True				
ANR	4206994	AssignmentExpression	"size = r_num_math ( core -> num , q )"		4205019	0		=			
ANR	4206995	Identifier	size		4205019	0					
ANR	4206996	CallExpression	"r_num_math ( core -> num , q )"		4205019	1					
ANR	4206997	Callee	r_num_math		4205019	0					
ANR	4206998	Identifier	r_num_math		4205019	0					
ANR	4206999	ArgumentList	core -> num		4205019	1					
ANR	4207000	Argument	core -> num		4205019	0					
ANR	4207001	PtrMemberAccess	core -> num		4205019	0					
ANR	4207002	Identifier	core		4205019	0					
ANR	4207003	Identifier	num		4205019	1					
ANR	4207004	Argument	q		4205019	1					
ANR	4207005	Identifier	q		4205019	0					
ANR	4207006	ExpressionStatement	"word = r_num_math ( core -> num , p )"	2551:4:74334:74366	4205019	3	True				
ANR	4207007	AssignmentExpression	"word = r_num_math ( core -> num , p )"		4205019	0		=			
ANR	4207008	Identifier	word		4205019	0					
ANR	4207009	CallExpression	"r_num_math ( core -> num , p )"		4205019	1					
ANR	4207010	Callee	r_num_math		4205019	0					
ANR	4207011	Identifier	r_num_math		4205019	0					
ANR	4207012	ArgumentList	core -> num		4205019	1					
ANR	4207013	Argument	core -> num		4205019	0					
ANR	4207014	PtrMemberAccess	core -> num		4205019	0					
ANR	4207015	Identifier	core		4205019	0					
ANR	4207016	Identifier	num		4205019	1					
ANR	4207017	Argument	p		4205019	1					
ANR	4207018	Identifier	p		4205019	0					
ANR	4207019	IdentifierDeclStatement	"RRegItem * item = r_reg_get ( core -> dbg -> reg , name , - 1 ) ;"	2553:3:74376:74429	4205019	7	True				
ANR	4207020	IdentifierDecl	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		4205019	0					
ANR	4207021	IdentifierDeclType	RRegItem *		4205019	0					
ANR	4207022	Identifier	item		4205019	1					
ANR	4207023	AssignmentExpression	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		4205019	2		=			
ANR	4207024	Identifier	item		4205019	0					
ANR	4207025	CallExpression	"r_reg_get ( core -> dbg -> reg , name , - 1 )"		4205019	1					
ANR	4207026	Callee	r_reg_get		4205019	0					
ANR	4207027	Identifier	r_reg_get		4205019	0					
ANR	4207028	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207029	Argument	core -> dbg -> reg		4205019	0					
ANR	4207030	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207031	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207032	Identifier	core		4205019	0					
ANR	4207033	Identifier	dbg		4205019	1					
ANR	4207034	Identifier	reg		4205019	1					
ANR	4207035	Argument	name		4205019	1					
ANR	4207036	Identifier	name		4205019	0					
ANR	4207037	Argument	- 1		4205019	2					
ANR	4207038	UnaryOperationExpression	- 1		4205019	0					
ANR	4207039	UnaryOperator	-		4205019	0					
ANR	4207040	PrimaryExpression	1		4205019	1					
ANR	4207041	IfStatement	if ( item )		4205019	8					
ANR	4207042	Condition	item	2554:7:74438:74441	4205019	0	True				
ANR	4207043	Identifier	item		4205019	0					
ANR	4207044	CompoundStatement		302:13:7861:7861	4205019	1					
ANR	4207045	IfStatement	if ( eq )		4205019	0					
ANR	4207046	Condition	eq	2555:8:74454:74455	4205019	0	True				
ANR	4207047	Identifier	eq		4205019	0					
ANR	4207048	CompoundStatement		304:5:7882:7919	4205019	1					
ANR	4207049	IdentifierDeclStatement	"ut64 val = r_num_math ( core -> num , eq ) ;"	2556:5:74465:74502	4205019	0	True				
ANR	4207050	IdentifierDecl	"val = r_num_math ( core -> num , eq )"		4205019	0					
ANR	4207051	IdentifierDeclType	ut64		4205019	0					
ANR	4207052	Identifier	val		4205019	1					
ANR	4207053	AssignmentExpression	"val = r_num_math ( core -> num , eq )"		4205019	2		=			
ANR	4207054	Identifier	val		4205019	0					
ANR	4207055	CallExpression	"r_num_math ( core -> num , eq )"		4205019	1					
ANR	4207056	Callee	r_num_math		4205019	0					
ANR	4207057	Identifier	r_num_math		4205019	0					
ANR	4207058	ArgumentList	core -> num		4205019	1					
ANR	4207059	Argument	core -> num		4205019	0					
ANR	4207060	PtrMemberAccess	core -> num		4205019	0					
ANR	4207061	Identifier	core		4205019	0					
ANR	4207062	Identifier	num		4205019	1					
ANR	4207063	Argument	eq		4205019	1					
ANR	4207064	Identifier	eq		4205019	0					
ANR	4207065	ExpressionStatement	"r_reg_set_pack ( core -> dbg -> reg , item , word , size , val )"	2557:5:74509:74563	4205019	1	True				
ANR	4207066	CallExpression	"r_reg_set_pack ( core -> dbg -> reg , item , word , size , val )"		4205019	0					
ANR	4207067	Callee	r_reg_set_pack		4205019	0					
ANR	4207068	Identifier	r_reg_set_pack		4205019	0					
ANR	4207069	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207070	Argument	core -> dbg -> reg		4205019	0					
ANR	4207071	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207072	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207073	Identifier	core		4205019	0					
ANR	4207074	Identifier	dbg		4205019	1					
ANR	4207075	Identifier	reg		4205019	1					
ANR	4207076	Argument	item		4205019	1					
ANR	4207077	Identifier	item		4205019	0					
ANR	4207078	Argument	word		4205019	2					
ANR	4207079	Identifier	word		4205019	0					
ANR	4207080	Argument	size		4205019	3					
ANR	4207081	Identifier	size		4205019	0					
ANR	4207082	Argument	val		4205019	4					
ANR	4207083	Identifier	val		4205019	0					
ANR	4207084	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	2558:5:74570:74620	4205019	2	True				
ANR	4207085	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		4205019	0					
ANR	4207086	Callee	r_debug_reg_sync		4205019	0					
ANR	4207087	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207088	ArgumentList	core -> dbg		4205019	1					
ANR	4207089	Argument	core -> dbg		4205019	0					
ANR	4207090	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207091	Identifier	core		4205019	0					
ANR	4207092	Identifier	dbg		4205019	1					
ANR	4207093	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4207094	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4207095	Argument	true		4205019	2					
ANR	4207096	Identifier	true		4205019	0					
ANR	4207097	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , true )"	2559:5:74627:74677	4205019	3	True				
ANR	4207098	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , true )"		4205019	0					
ANR	4207099	Callee	r_debug_reg_sync		4205019	0					
ANR	4207100	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207101	ArgumentList	core -> dbg		4205019	1					
ANR	4207102	Argument	core -> dbg		4205019	0					
ANR	4207103	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207104	Identifier	core		4205019	0					
ANR	4207105	Identifier	dbg		4205019	1					
ANR	4207106	Argument	R_REG_TYPE_MMX		4205019	1					
ANR	4207107	Identifier	R_REG_TYPE_MMX		4205019	0					
ANR	4207108	Argument	true		4205019	2					
ANR	4207109	Identifier	true		4205019	0					
ANR	4207110	ElseStatement	else		4205019	0					
ANR	4207111	CompoundStatement		311:5:8230:8290	4205019	0					
ANR	4207112	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2561:5:74697:74748	4205019	0	True				
ANR	4207113	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4205019	0					
ANR	4207114	Callee	r_debug_reg_sync		4205019	0					
ANR	4207115	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207116	ArgumentList	core -> dbg		4205019	1					
ANR	4207117	Argument	core -> dbg		4205019	0					
ANR	4207118	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207119	Identifier	core		4205019	0					
ANR	4207120	Identifier	dbg		4205019	1					
ANR	4207121	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4207122	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4207123	Argument	false		4205019	2					
ANR	4207124	Identifier	false		4205019	0					
ANR	4207125	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , false )"	2562:5:74755:74806	4205019	1	True				
ANR	4207126	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_MMX , false )"		4205019	0					
ANR	4207127	Callee	r_debug_reg_sync		4205019	0					
ANR	4207128	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207129	ArgumentList	core -> dbg		4205019	1					
ANR	4207130	Argument	core -> dbg		4205019	0					
ANR	4207131	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207132	Identifier	core		4205019	0					
ANR	4207133	Identifier	dbg		4205019	1					
ANR	4207134	Argument	R_REG_TYPE_MMX		4205019	1					
ANR	4207135	Identifier	R_REG_TYPE_MMX		4205019	0					
ANR	4207136	Argument	false		4205019	2					
ANR	4207137	Identifier	false		4205019	0					
ANR	4207138	IdentifierDeclStatement	"ut64 res = r_reg_get_pack ( core -> dbg -> reg , item , word , size ) ;"	2563:5:74813:74873	4205019	2	True				
ANR	4207139	IdentifierDecl	"res = r_reg_get_pack ( core -> dbg -> reg , item , word , size )"		4205019	0					
ANR	4207140	IdentifierDeclType	ut64		4205019	0					
ANR	4207141	Identifier	res		4205019	1					
ANR	4207142	AssignmentExpression	"res = r_reg_get_pack ( core -> dbg -> reg , item , word , size )"		4205019	2		=			
ANR	4207143	Identifier	res		4205019	0					
ANR	4207144	CallExpression	"r_reg_get_pack ( core -> dbg -> reg , item , word , size )"		4205019	1					
ANR	4207145	Callee	r_reg_get_pack		4205019	0					
ANR	4207146	Identifier	r_reg_get_pack		4205019	0					
ANR	4207147	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207148	Argument	core -> dbg -> reg		4205019	0					
ANR	4207149	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207150	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207151	Identifier	core		4205019	0					
ANR	4207152	Identifier	dbg		4205019	1					
ANR	4207153	Identifier	reg		4205019	1					
ANR	4207154	Argument	item		4205019	1					
ANR	4207155	Identifier	item		4205019	0					
ANR	4207156	Argument	word		4205019	2					
ANR	4207157	Identifier	word		4205019	0					
ANR	4207158	Argument	size		4205019	3					
ANR	4207159	Identifier	size		4205019	0					
ANR	4207160	Statement	r_cons_printf	2564:5:74880:74892	4205019	3	True				
ANR	4207161	Statement	(	2564:19:74894:74894	4205019	4	True				
ANR	4207162	Statement	"""0x%08"""	2564:20:74895:74901	4205019	5	True				
ANR	4207163	Statement	PFMT64x	2564:27:74902:74908	4205019	6	True				
ANR	4207164	Statement	"""\\n"""	2564:34:74909:74912	4205019	7	True				
ANR	4207165	Statement	","	2564:38:74913:74913	4205019	8	True				
ANR	4207166	Statement	res	2564:40:74915:74917	4205019	9	True				
ANR	4207167	Statement	)	2564:43:74918:74918	4205019	10	True				
ANR	4207168	ExpressionStatement		2564:44:74919:74919	4205019	11	True				
ANR	4207169	ElseStatement	else		4205019	0					
ANR	4207170	CompoundStatement		314:10:8354:8354	4205019	0					
ANR	4207171	ExpressionStatement	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"	2567:4:74943:74999	4205019	0	True				
ANR	4207172	CallExpression	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"		4205019	0					
ANR	4207173	Callee	eprintf		4205019	0					
ANR	4207174	Identifier	eprintf		4205019	0					
ANR	4207175	ArgumentList	"""cannot find multimedia register '%s'\\n"""		4205019	1					
ANR	4207176	Argument	"""cannot find multimedia register '%s'\\n"""		4205019	0					
ANR	4207177	PrimaryExpression	"""cannot find multimedia register '%s'\\n"""		4205019	0					
ANR	4207178	Argument	name		4205019	1					
ANR	4207179	Identifier	name		4205019	0					
ANR	4207180	ExpressionStatement	free ( name )	2569:3:75009:75020	4205019	9	True				
ANR	4207181	CallExpression	free ( name )		4205019	0					
ANR	4207182	Callee	free		4205019	0					
ANR	4207183	Identifier	free		4205019	0					
ANR	4207184	ArgumentList	name		4205019	1					
ANR	4207185	Argument	name		4205019	0					
ANR	4207186	Identifier	name		4205019	0					
ANR	4207187	ElseStatement	else		4205019	0					
ANR	4207188	CompoundStatement		318:9:8448:8448	4205019	0					
ANR	4207189	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_MMX , false )"	2571:3:75036:75088	4205019	0	True				
ANR	4207190	CallExpression	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_MMX , false )"		4205019	0					
ANR	4207191	Callee	r_debug_reg_sync		4205019	0					
ANR	4207192	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207193	ArgumentList	core -> dbg		4205019	1					
ANR	4207194	Argument	core -> dbg		4205019	0					
ANR	4207195	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207196	Identifier	core		4205019	0					
ANR	4207197	Identifier	dbg		4205019	1					
ANR	4207198	Argument	- R_REG_TYPE_MMX		4205019	1					
ANR	4207199	UnaryOperationExpression	- R_REG_TYPE_MMX		4205019	0					
ANR	4207200	UnaryOperator	-		4205019	0					
ANR	4207201	Identifier	R_REG_TYPE_MMX		4205019	1					
ANR	4207202	Argument	false		4205019	2					
ANR	4207203	Identifier	false		4205019	0					
ANR	4207204	BreakStatement	break ;	2574:2:75130:75135	4205019	27	True				
ANR	4207205	Label	case 'f' :	2575:1:75138:75146	4205019	28	True				
ANR	4207206	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"	2577:2:75239:75291	4205019	29	True				
ANR	4207207	CallExpression	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"		4205019	0					
ANR	4207208	Callee	r_debug_reg_sync		4205019	0					
ANR	4207209	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207210	ArgumentList	core -> dbg		4205019	1					
ANR	4207211	Argument	core -> dbg		4205019	0					
ANR	4207212	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207213	Identifier	core		4205019	0					
ANR	4207214	Identifier	dbg		4205019	1					
ANR	4207215	Argument	- R_REG_TYPE_FPU		4205019	1					
ANR	4207216	UnaryOperationExpression	- R_REG_TYPE_FPU		4205019	0					
ANR	4207217	UnaryOperator	-		4205019	0					
ANR	4207218	Identifier	R_REG_TYPE_FPU		4205019	1					
ANR	4207219	Argument	false		4205019	2					
ANR	4207220	Identifier	false		4205019	0					
ANR	4207221	IfStatement	if ( str [ 1 ] == '?' )		4205019	30					
ANR	4207222	Condition	str [ 1 ] == '?'	2579:6:75333:75343	4205019	0	True				
ANR	4207223	EqualityExpression	str [ 1 ] == '?'		4205019	0		==			
ANR	4207224	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4207225	Identifier	str		4205019	0					
ANR	4207226	PrimaryExpression	1		4205019	1					
ANR	4207227	PrimaryExpression	'?'		4205019	1					
ANR	4207228	CompoundStatement		327:19:8763:8763	4205019	1					
ANR	4207229	ExpressionStatement	"eprintf ( ""usage: drf [fpureg] [= value]\\n"" )"	2580:3:75351:75394	4205019	0	True				
ANR	4207230	CallExpression	"eprintf ( ""usage: drf [fpureg] [= value]\\n"" )"		4205019	0					
ANR	4207231	Callee	eprintf		4205019	0					
ANR	4207232	Identifier	eprintf		4205019	0					
ANR	4207233	ArgumentList	"""usage: drf [fpureg] [= value]\\n"""		4205019	1					
ANR	4207234	Argument	"""usage: drf [fpureg] [= value]\\n"""		4205019	0					
ANR	4207235	PrimaryExpression	"""usage: drf [fpureg] [= value]\\n"""		4205019	0					
ANR	4207236	ElseStatement	else		4205019	0					
ANR	4207237	IfStatement	if ( str [ 1 ] == ' ' )		4205019	0					
ANR	4207238	Condition	str [ 1 ] == ' '	2581:13:75409:75419	4205019	0	True				
ANR	4207239	EqualityExpression	str [ 1 ] == ' '		4205019	0		==			
ANR	4207240	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4207241	Identifier	str		4205019	0					
ANR	4207242	PrimaryExpression	1		4205019	1					
ANR	4207243	PrimaryExpression	' '		4205019	1					
ANR	4207244	CompoundStatement		339:3:9005:9058	4205019	1					
ANR	4207245	IdentifierDeclStatement	"char * p , * name = strdup ( str + 2 ) ;"	2582:3:75427:75458	4205019	0	True				
ANR	4207246	IdentifierDecl	* p		4205019	0					
ANR	4207247	IdentifierDeclType	char *		4205019	0					
ANR	4207248	Identifier	p		4205019	1					
ANR	4207249	IdentifierDecl	* name = strdup ( str + 2 )		4205019	1					
ANR	4207250	IdentifierDeclType	char *		4205019	0					
ANR	4207251	Identifier	name		4205019	1					
ANR	4207252	AssignmentExpression	* name = strdup ( str + 2 )		4205019	2		=			
ANR	4207253	Identifier	name		4205019	0					
ANR	4207254	CallExpression	strdup ( str + 2 )		4205019	1					
ANR	4207255	Callee	strdup		4205019	0					
ANR	4207256	Identifier	strdup		4205019	0					
ANR	4207257	ArgumentList	str + 2		4205019	1					
ANR	4207258	Argument	str + 2		4205019	0					
ANR	4207259	AdditiveExpression	str + 2		4205019	0		+			
ANR	4207260	Identifier	str		4205019	0					
ANR	4207261	PrimaryExpression	2		4205019	1					
ANR	4207262	IdentifierDeclStatement	"char * eq = strchr ( name , '=' ) ;"	2583:3:75463:75492	4205019	1	True				
ANR	4207263	IdentifierDecl	"* eq = strchr ( name , '=' )"		4205019	0					
ANR	4207264	IdentifierDeclType	char *		4205019	0					
ANR	4207265	Identifier	eq		4205019	1					
ANR	4207266	AssignmentExpression	"* eq = strchr ( name , '=' )"		4205019	2		=			
ANR	4207267	Identifier	eq		4205019	0					
ANR	4207268	CallExpression	"strchr ( name , '=' )"		4205019	1					
ANR	4207269	Callee	strchr		4205019	0					
ANR	4207270	Identifier	strchr		4205019	0					
ANR	4207271	ArgumentList	name		4205019	1					
ANR	4207272	Argument	name		4205019	0					
ANR	4207273	Identifier	name		4205019	0					
ANR	4207274	Argument	'='		4205019	1					
ANR	4207275	PrimaryExpression	'='		4205019	0					
ANR	4207276	IfStatement	if ( eq )		4205019	2					
ANR	4207277	Condition	eq	2584:7:75501:75502	4205019	0	True				
ANR	4207278	Identifier	eq		4205019	0					
ANR	4207279	CompoundStatement		332:11:8922:8922	4205019	1					
ANR	4207280	ExpressionStatement	* eq ++ = 0	2585:4:75511:75520	4205019	0	True				
ANR	4207281	AssignmentExpression	* eq ++ = 0		4205019	0		=			
ANR	4207282	UnaryOperationExpression	* eq ++		4205019	0					
ANR	4207283	UnaryOperator	*		4205019	0					
ANR	4207284	PostIncDecOperationExpression	eq ++		4205019	1					
ANR	4207285	Identifier	eq		4205019	0					
ANR	4207286	IncDec	++		4205019	1					
ANR	4207287	PrimaryExpression	0		4205019	1					
ANR	4207288	ExpressionStatement	"p = strchr ( name , ' ' )"	2587:3:75530:75552	4205019	3	True				
ANR	4207289	AssignmentExpression	"p = strchr ( name , ' ' )"		4205019	0		=			
ANR	4207290	Identifier	p		4205019	0					
ANR	4207291	CallExpression	"strchr ( name , ' ' )"		4205019	1					
ANR	4207292	Callee	strchr		4205019	0					
ANR	4207293	Identifier	strchr		4205019	0					
ANR	4207294	ArgumentList	name		4205019	1					
ANR	4207295	Argument	name		4205019	0					
ANR	4207296	Identifier	name		4205019	0					
ANR	4207297	Argument	' '		4205019	1					
ANR	4207298	PrimaryExpression	' '		4205019	0					
ANR	4207299	IfStatement	if ( p )		4205019	4					
ANR	4207300	Condition	p	2588:7:75561:75561	4205019	0	True				
ANR	4207301	Identifier	p		4205019	0					
ANR	4207302	CompoundStatement		336:10:8981:8981	4205019	1					
ANR	4207303	ExpressionStatement	* p ++ = 0	2589:4:75570:75578	4205019	0	True				
ANR	4207304	AssignmentExpression	* p ++ = 0		4205019	0		=			
ANR	4207305	UnaryOperationExpression	* p ++		4205019	0					
ANR	4207306	UnaryOperator	*		4205019	0					
ANR	4207307	PostIncDecOperationExpression	p ++		4205019	1					
ANR	4207308	Identifier	p		4205019	0					
ANR	4207309	IncDec	++		4205019	1					
ANR	4207310	PrimaryExpression	0		4205019	1					
ANR	4207311	IdentifierDeclStatement	"RRegItem * item = r_reg_get ( core -> dbg -> reg , name , - 1 ) ;"	2591:3:75588:75641	4205019	5	True				
ANR	4207312	IdentifierDecl	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		4205019	0					
ANR	4207313	IdentifierDeclType	RRegItem *		4205019	0					
ANR	4207314	Identifier	item		4205019	1					
ANR	4207315	AssignmentExpression	"* item = r_reg_get ( core -> dbg -> reg , name , - 1 )"		4205019	2		=			
ANR	4207316	Identifier	item		4205019	0					
ANR	4207317	CallExpression	"r_reg_get ( core -> dbg -> reg , name , - 1 )"		4205019	1					
ANR	4207318	Callee	r_reg_get		4205019	0					
ANR	4207319	Identifier	r_reg_get		4205019	0					
ANR	4207320	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207321	Argument	core -> dbg -> reg		4205019	0					
ANR	4207322	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207323	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207324	Identifier	core		4205019	0					
ANR	4207325	Identifier	dbg		4205019	1					
ANR	4207326	Identifier	reg		4205019	1					
ANR	4207327	Argument	name		4205019	1					
ANR	4207328	Identifier	name		4205019	0					
ANR	4207329	Argument	- 1		4205019	2					
ANR	4207330	UnaryOperationExpression	- 1		4205019	0					
ANR	4207331	UnaryOperator	-		4205019	0					
ANR	4207332	PrimaryExpression	1		4205019	1					
ANR	4207333	IfStatement	if ( item )		4205019	6					
ANR	4207334	Condition	item	2592:7:75650:75653	4205019	0	True				
ANR	4207335	Identifier	item		4205019	0					
ANR	4207336	CompoundStatement		340:13:9073:9073	4205019	1					
ANR	4207337	IfStatement	if ( eq )		4205019	0					
ANR	4207338	Condition	eq	2593:8:75666:75667	4205019	0	True				
ANR	4207339	Identifier	eq		4205019	0					
ANR	4207340	CompoundStatement		344:5:9139:9157	4205019	1					
ANR	4207341	IdentifierDeclStatement	long double val = 0.0f ;	2594:5:75677:75699	4205019	0	True				
ANR	4207342	IdentifierDecl	val = 0.0f		4205019	0					
ANR	4207343	IdentifierDeclType	long double		4205019	0					
ANR	4207344	Identifier	val		4205019	1					
ANR	4207345	AssignmentExpression	val = 0.0f		4205019	2		=			
ANR	4207346	Identifier	val		4205019	0					
ANR	4207347	PrimaryExpression	0.0f		4205019	1					
ANR	4207348	IdentifierDeclStatement	double dval = 0.0f ;	2596:5:75722:75740	4205019	1	True				
ANR	4207349	IdentifierDecl	dval = 0.0f		4205019	0					
ANR	4207350	IdentifierDeclType	double		4205019	0					
ANR	4207351	Identifier	dval		4205019	1					
ANR	4207352	AssignmentExpression	dval = 0.0f		4205019	2		=			
ANR	4207353	Identifier	dval		4205019	0					
ANR	4207354	PrimaryExpression	0.0f		4205019	1					
ANR	4207355	ExpressionStatement	"sscanf ( eq , ""%lf"" , ( double * ) & dval )"	2597:5:75747:75781	4205019	2	True				
ANR	4207356	CallExpression	"sscanf ( eq , ""%lf"" , ( double * ) & dval )"		4205019	0					
ANR	4207357	Callee	sscanf		4205019	0					
ANR	4207358	Identifier	sscanf		4205019	0					
ANR	4207359	ArgumentList	eq		4205019	1					
ANR	4207360	Argument	eq		4205019	0					
ANR	4207361	Identifier	eq		4205019	0					
ANR	4207362	Argument	"""%lf"""		4205019	1					
ANR	4207363	PrimaryExpression	"""%lf"""		4205019	0					
ANR	4207364	Argument	( double * ) & dval		4205019	2					
ANR	4207365	CastExpression	( double * ) & dval		4205019	0					
ANR	4207366	CastTarget	double *		4205019	0					
ANR	4207367	UnaryOperationExpression	& dval		4205019	1					
ANR	4207368	UnaryOperator	&		4205019	0					
ANR	4207369	Identifier	dval		4205019	1					
ANR	4207370	ExpressionStatement	val = dval	2598:5:75788:75798	4205019	3	True				
ANR	4207371	AssignmentExpression	val = dval		4205019	0		=			
ANR	4207372	Identifier	val		4205019	0					
ANR	4207373	Identifier	dval		4205019	1					
ANR	4207374	ExpressionStatement	"r_reg_set_double ( core -> dbg -> reg , item , val )"	2602:5:75849:75893	4205019	4	True				
ANR	4207375	CallExpression	"r_reg_set_double ( core -> dbg -> reg , item , val )"		4205019	0					
ANR	4207376	Callee	r_reg_set_double		4205019	0					
ANR	4207377	Identifier	r_reg_set_double		4205019	0					
ANR	4207378	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207379	Argument	core -> dbg -> reg		4205019	0					
ANR	4207380	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207381	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207382	Identifier	core		4205019	0					
ANR	4207383	Identifier	dbg		4205019	1					
ANR	4207384	Identifier	reg		4205019	1					
ANR	4207385	Argument	item		4205019	1					
ANR	4207386	Identifier	item		4205019	0					
ANR	4207387	Argument	val		4205019	2					
ANR	4207388	Identifier	val		4205019	0					
ANR	4207389	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"	2603:5:75900:75950	4205019	5	True				
ANR	4207390	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , true )"		4205019	0					
ANR	4207391	Callee	r_debug_reg_sync		4205019	0					
ANR	4207392	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207393	ArgumentList	core -> dbg		4205019	1					
ANR	4207394	Argument	core -> dbg		4205019	0					
ANR	4207395	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207396	Identifier	core		4205019	0					
ANR	4207397	Identifier	dbg		4205019	1					
ANR	4207398	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4207399	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4207400	Argument	true		4205019	2					
ANR	4207401	Identifier	true		4205019	0					
ANR	4207402	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , true )"	2604:5:75957:76007	4205019	6	True				
ANR	4207403	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , true )"		4205019	0					
ANR	4207404	Callee	r_debug_reg_sync		4205019	0					
ANR	4207405	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207406	ArgumentList	core -> dbg		4205019	1					
ANR	4207407	Argument	core -> dbg		4205019	0					
ANR	4207408	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207409	Identifier	core		4205019	0					
ANR	4207410	Identifier	dbg		4205019	1					
ANR	4207411	Argument	R_REG_TYPE_FPU		4205019	1					
ANR	4207412	Identifier	R_REG_TYPE_FPU		4205019	0					
ANR	4207413	Argument	true		4205019	2					
ANR	4207414	Identifier	true		4205019	0					
ANR	4207415	ElseStatement	else		4205019	0					
ANR	4207416	CompoundStatement		356:5:9560:9617	4205019	0					
ANR	4207417	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2606:5:76027:76078	4205019	0	True				
ANR	4207418	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4205019	0					
ANR	4207419	Callee	r_debug_reg_sync		4205019	0					
ANR	4207420	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207421	ArgumentList	core -> dbg		4205019	1					
ANR	4207422	Argument	core -> dbg		4205019	0					
ANR	4207423	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207424	Identifier	core		4205019	0					
ANR	4207425	Identifier	dbg		4205019	1					
ANR	4207426	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4207427	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4207428	Argument	false		4205019	2					
ANR	4207429	Identifier	false		4205019	0					
ANR	4207430	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , false )"	2607:5:76085:76136	4205019	1	True				
ANR	4207431	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_FPU , false )"		4205019	0					
ANR	4207432	Callee	r_debug_reg_sync		4205019	0					
ANR	4207433	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207434	ArgumentList	core -> dbg		4205019	1					
ANR	4207435	Argument	core -> dbg		4205019	0					
ANR	4207436	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207437	Identifier	core		4205019	0					
ANR	4207438	Identifier	dbg		4205019	1					
ANR	4207439	Argument	R_REG_TYPE_FPU		4205019	1					
ANR	4207440	Identifier	R_REG_TYPE_FPU		4205019	0					
ANR	4207441	Argument	false		4205019	2					
ANR	4207442	Identifier	false		4205019	0					
ANR	4207443	IdentifierDeclStatement	"long double res = r_reg_get_double ( core -> dbg -> reg , item ) ;"	2608:5:76143:76200	4205019	2	True				
ANR	4207444	IdentifierDecl	"res = r_reg_get_double ( core -> dbg -> reg , item )"		4205019	0					
ANR	4207445	IdentifierDeclType	long double		4205019	0					
ANR	4207446	Identifier	res		4205019	1					
ANR	4207447	AssignmentExpression	"res = r_reg_get_double ( core -> dbg -> reg , item )"		4205019	2		=			
ANR	4207448	Identifier	res		4205019	0					
ANR	4207449	CallExpression	"r_reg_get_double ( core -> dbg -> reg , item )"		4205019	1					
ANR	4207450	Callee	r_reg_get_double		4205019	0					
ANR	4207451	Identifier	r_reg_get_double		4205019	0					
ANR	4207452	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207453	Argument	core -> dbg -> reg		4205019	0					
ANR	4207454	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207455	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207456	Identifier	core		4205019	0					
ANR	4207457	Identifier	dbg		4205019	1					
ANR	4207458	Identifier	reg		4205019	1					
ANR	4207459	Argument	item		4205019	1					
ANR	4207460	Identifier	item		4205019	0					
ANR	4207461	ExpressionStatement	"r_cons_printf ( ""%lf\\n"" , res )"	2609:5:76207:76235	4205019	3	True				
ANR	4207462	CallExpression	"r_cons_printf ( ""%lf\\n"" , res )"		4205019	0					
ANR	4207463	Callee	r_cons_printf		4205019	0					
ANR	4207464	Identifier	r_cons_printf		4205019	0					
ANR	4207465	ArgumentList	"""%lf\\n"""		4205019	1					
ANR	4207466	Argument	"""%lf\\n"""		4205019	0					
ANR	4207467	PrimaryExpression	"""%lf\\n"""		4205019	0					
ANR	4207468	Argument	res		4205019	1					
ANR	4207469	Identifier	res		4205019	0					
ANR	4207470	ElseStatement	else		4205019	0					
ANR	4207471	CompoundStatement		359:10:9670:9670	4205019	0					
ANR	4207472	ExpressionStatement	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"	2612:4:76259:76315	4205019	0	True				
ANR	4207473	CallExpression	"eprintf ( ""cannot find multimedia register '%s'\\n"" , name )"		4205019	0					
ANR	4207474	Callee	eprintf		4205019	0					
ANR	4207475	Identifier	eprintf		4205019	0					
ANR	4207476	ArgumentList	"""cannot find multimedia register '%s'\\n"""		4205019	1					
ANR	4207477	Argument	"""cannot find multimedia register '%s'\\n"""		4205019	0					
ANR	4207478	PrimaryExpression	"""cannot find multimedia register '%s'\\n"""		4205019	0					
ANR	4207479	Argument	name		4205019	1					
ANR	4207480	Identifier	name		4205019	0					
ANR	4207481	ExpressionStatement	free ( name )	2614:3:76325:76336	4205019	7	True				
ANR	4207482	CallExpression	free ( name )		4205019	0					
ANR	4207483	Callee	free		4205019	0					
ANR	4207484	Identifier	free		4205019	0					
ANR	4207485	ArgumentList	name		4205019	1					
ANR	4207486	Argument	name		4205019	0					
ANR	4207487	Identifier	name		4205019	0					
ANR	4207488	ElseStatement	else		4205019	0					
ANR	4207489	CompoundStatement		363:9:9764:9764	4205019	0					
ANR	4207490	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"	2616:3:76352:76404	4205019	0	True				
ANR	4207491	CallExpression	"r_debug_reg_sync ( core -> dbg , - R_REG_TYPE_FPU , false )"		4205019	0					
ANR	4207492	Callee	r_debug_reg_sync		4205019	0					
ANR	4207493	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207494	ArgumentList	core -> dbg		4205019	1					
ANR	4207495	Argument	core -> dbg		4205019	0					
ANR	4207496	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207497	Identifier	core		4205019	0					
ANR	4207498	Identifier	dbg		4205019	1					
ANR	4207499	Argument	- R_REG_TYPE_FPU		4205019	1					
ANR	4207500	UnaryOperationExpression	- R_REG_TYPE_FPU		4205019	0					
ANR	4207501	UnaryOperator	-		4205019	0					
ANR	4207502	Identifier	R_REG_TYPE_FPU		4205019	1					
ANR	4207503	Argument	false		4205019	2					
ANR	4207504	Identifier	false		4205019	0					
ANR	4207505	BreakStatement	break ;	2618:2:76412:76417	4205019	31	True				
ANR	4207506	Label	case 'p' :	2619:1:76420:76428	4205019	32	True				
ANR	4207507	ExpressionStatement	"cmd_reg_profile ( core , 'd' , str )"	2620:2:76441:76473	4205019	33	True				
ANR	4207508	CallExpression	"cmd_reg_profile ( core , 'd' , str )"		4205019	0					
ANR	4207509	Callee	cmd_reg_profile		4205019	0					
ANR	4207510	Identifier	cmd_reg_profile		4205019	0					
ANR	4207511	ArgumentList	core		4205019	1					
ANR	4207512	Argument	core		4205019	0					
ANR	4207513	Identifier	core		4205019	0					
ANR	4207514	Argument	'd'		4205019	1					
ANR	4207515	PrimaryExpression	'd'		4205019	0					
ANR	4207516	Argument	str		4205019	2					
ANR	4207517	Identifier	str		4205019	0					
ANR	4207518	BreakStatement	break ;	2621:2:76477:76482	4205019	34	True				
ANR	4207519	Label	case 't' :	2622:1:76485:76493	4205019	35	True				
ANR	4207520	CompoundStatement		371:2:9925:9937	4205019	36					
ANR	4207521	IdentifierDeclStatement	char rad = 0 ;	2623:2:76508:76520	4205019	0	True				
ANR	4207522	IdentifierDecl	rad = 0		4205019	0					
ANR	4207523	IdentifierDeclType	char		4205019	0					
ANR	4207524	Identifier	rad		4205019	1					
ANR	4207525	AssignmentExpression	rad = 0		4205019	2		=			
ANR	4207526	Identifier	rad		4205019	0					
ANR	4207527	PrimaryExpression	0		4205019	1					
ANR	4207528	SwitchStatement	switch ( str [ 1 ] )		4205019	1					
ANR	4207529	Condition	str [ 1 ]	2624:10:76532:76537	4205019	0	True				
ANR	4207530	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4207531	Identifier	str		4205019	0					
ANR	4207532	PrimaryExpression	1		4205019	1					
ANR	4207533	CompoundStatement		372:18:9957:9957	4205019	1					
ANR	4207534	Label	case '\\0' :	2625:2:76544:76553	4205019	0	True				
ANR	4207535	ForStatement	for ( i = 0 ; ( name = r_reg_get_type ( i ) ) ; i ++ )		4205019	1					
ANR	4207536	ForInit	i = 0 ;	2626:8:76572:76577	4205019	0	True				
ANR	4207537	AssignmentExpression	i = 0		4205019	0		=			
ANR	4207538	Identifier	i		4205019	0					
ANR	4207539	PrimaryExpression	0		4205019	1					
ANR	4207540	Condition	name = r_reg_get_type ( i )	2626:15:76579:76605	4205019	1	True				
ANR	4207541	AssignmentExpression	name = r_reg_get_type ( i )		4205019	0		=			
ANR	4207542	Identifier	name		4205019	0					
ANR	4207543	CallExpression	r_reg_get_type ( i )		4205019	1					
ANR	4207544	Callee	r_reg_get_type		4205019	0					
ANR	4207545	Identifier	r_reg_get_type		4205019	0					
ANR	4207546	ArgumentList	i		4205019	1					
ANR	4207547	Argument	i		4205019	0					
ANR	4207548	Identifier	i		4205019	0					
ANR	4207549	PostIncDecOperationExpression	i ++	2626:44:76608:76610	4205019	2	True				
ANR	4207550	Identifier	i		4205019	0					
ANR	4207551	IncDec	++		4205019	1					
ANR	4207552	CompoundStatement		374:49:10030:10030	4205019	3					
ANR	4207553	ExpressionStatement	r_cons_println ( name )	2627:4:76619:76640	4205019	0	True				
ANR	4207554	CallExpression	r_cons_println ( name )		4205019	0					
ANR	4207555	Callee	r_cons_println		4205019	0					
ANR	4207556	Identifier	r_cons_println		4205019	0					
ANR	4207557	ArgumentList	name		4205019	1					
ANR	4207558	Argument	name		4205019	0					
ANR	4207559	Identifier	name		4205019	0					
ANR	4207560	BreakStatement	break ;	2629:3:76650:76655	4205019	2	True				
ANR	4207561	Label	case 'j' :	2630:2:76659:76667	4205019	3	True				
ANR	4207562	Label	case '*' :	2631:2:76681:76689	4205019	4	True				
ANR	4207563	ExpressionStatement	rad = str [ 1 ]	2632:3:76704:76716	4205019	5	True				
ANR	4207564	AssignmentExpression	rad = str [ 1 ]		4205019	0		=			
ANR	4207565	Identifier	rad		4205019	0					
ANR	4207566	ArrayIndexing	str [ 1 ]		4205019	1					
ANR	4207567	Identifier	str		4205019	0					
ANR	4207568	PrimaryExpression	1		4205019	1					
ANR	4207569	ExpressionStatement	str ++	2633:3:76721:76726	4205019	6	True				
ANR	4207570	PostIncDecOperationExpression	str ++		4205019	0					
ANR	4207571	Identifier	str		4205019	0					
ANR	4207572	IncDec	++		4205019	1					
ANR	4207573	IfStatement	if ( rad == 'j' && ! str [ 1 ] )		4205019	7					
ANR	4207574	Condition	rad == 'j' && ! str [ 1 ]	2634:7:76735:76755	4205019	0	True				
ANR	4207575	AndExpression	rad == 'j' && ! str [ 1 ]		4205019	0		&&			
ANR	4207576	EqualityExpression	rad == 'j'		4205019	0		==			
ANR	4207577	Identifier	rad		4205019	0					
ANR	4207578	PrimaryExpression	'j'		4205019	1					
ANR	4207579	UnaryOperationExpression	! str [ 1 ]		4205019	1					
ANR	4207580	UnaryOperator	!		4205019	0					
ANR	4207581	ArrayIndexing	str [ 1 ]		4205019	1					
ANR	4207582	Identifier	str		4205019	0					
ANR	4207583	PrimaryExpression	1		4205019	1					
ANR	4207584	CompoundStatement		382:30:10175:10175	4205019	1					
ANR	4207585	ExpressionStatement	"r_cons_print ( ""["" )"	2635:4:76764:76781	4205019	0	True				
ANR	4207586	CallExpression	"r_cons_print ( ""["" )"		4205019	0					
ANR	4207587	Callee	r_cons_print		4205019	0					
ANR	4207588	Identifier	r_cons_print		4205019	0					
ANR	4207589	ArgumentList	"""["""		4205019	1					
ANR	4207590	Argument	"""["""		4205019	0					
ANR	4207591	PrimaryExpression	"""["""		4205019	0					
ANR	4207592	ForStatement	for ( i = 0 ; ( name = r_reg_get_type ( i ) ) ; i ++ )		4205019	1					
ANR	4207593	ForInit	i = 0 ;	2636:9:76792:76797	4205019	0	True				
ANR	4207594	AssignmentExpression	i = 0		4205019	0		=			
ANR	4207595	Identifier	i		4205019	0					
ANR	4207596	PrimaryExpression	0		4205019	1					
ANR	4207597	Condition	name = r_reg_get_type ( i )	2636:16:76799:76825	4205019	1	True				
ANR	4207598	AssignmentExpression	name = r_reg_get_type ( i )		4205019	0		=			
ANR	4207599	Identifier	name		4205019	0					
ANR	4207600	CallExpression	r_reg_get_type ( i )		4205019	1					
ANR	4207601	Callee	r_reg_get_type		4205019	0					
ANR	4207602	Identifier	r_reg_get_type		4205019	0					
ANR	4207603	ArgumentList	i		4205019	1					
ANR	4207604	Argument	i		4205019	0					
ANR	4207605	Identifier	i		4205019	0					
ANR	4207606	PostIncDecOperationExpression	i ++	2636:45:76828:76830	4205019	2	True				
ANR	4207607	Identifier	i		4205019	0					
ANR	4207608	IncDec	++		4205019	1					
ANR	4207609	CompoundStatement		384:50:10250:10250	4205019	3					
ANR	4207610	IfStatement	if ( i )		4205019	0					
ANR	4207611	Condition	i	2637:9:76844:76844	4205019	0	True				
ANR	4207612	Identifier	i		4205019	0					
ANR	4207613	CompoundStatement		385:12:10264:10264	4205019	1					
ANR	4207614	ExpressionStatement	"r_cons_print ( "","" )"	2638:6:76855:76873	4205019	0	True				
ANR	4207615	CallExpression	"r_cons_print ( "","" )"		4205019	0					
ANR	4207616	Callee	r_cons_print		4205019	0					
ANR	4207617	Identifier	r_cons_print		4205019	0					
ANR	4207618	ArgumentList	""","""		4205019	1					
ANR	4207619	Argument	""","""		4205019	0					
ANR	4207620	PrimaryExpression	""","""		4205019	0					
ANR	4207621	ExpressionStatement	"r_cons_printf ( ""\\""%s\\"""" , name )"	2640:5:76887:76917	4205019	1	True				
ANR	4207622	CallExpression	"r_cons_printf ( ""\\""%s\\"""" , name )"		4205019	0					
ANR	4207623	Callee	r_cons_printf		4205019	0					
ANR	4207624	Identifier	r_cons_printf		4205019	0					
ANR	4207625	ArgumentList	"""\\""%s\\"""""		4205019	1					
ANR	4207626	Argument	"""\\""%s\\"""""		4205019	0					
ANR	4207627	PrimaryExpression	"""\\""%s\\"""""		4205019	0					
ANR	4207628	Argument	name		4205019	1					
ANR	4207629	Identifier	name		4205019	0					
ANR	4207630	ExpressionStatement	"r_cons_println ( ""]"" )"	2642:4:76929:76949	4205019	2	True				
ANR	4207631	CallExpression	"r_cons_println ( ""]"" )"		4205019	0					
ANR	4207632	Callee	r_cons_println		4205019	0					
ANR	4207633	Identifier	r_cons_println		4205019	0					
ANR	4207634	ArgumentList	"""]"""		4205019	1					
ANR	4207635	Argument	"""]"""		4205019	0					
ANR	4207636	PrimaryExpression	"""]"""		4205019	0					
ANR	4207637	BreakStatement	break ;	2643:4:76955:76960	4205019	3	True				
ANR	4207638	Label	case ' ' :	2646:2:76987:76995	4205019	8	True				
ANR	4207639	CompoundStatement		397:3:10473:10532	4205019	9					
ANR	4207640	IdentifierDeclStatement	int role = r_reg_get_name_idx ( str + 2 ) ;	2648:3:77014:77051	4205019	0	True				
ANR	4207641	IdentifierDecl	role = r_reg_get_name_idx ( str + 2 )		4205019	0					
ANR	4207642	IdentifierDeclType	int		4205019	0					
ANR	4207643	Identifier	role		4205019	1					
ANR	4207644	AssignmentExpression	role = r_reg_get_name_idx ( str + 2 )		4205019	2		=			
ANR	4207645	Identifier	role		4205019	0					
ANR	4207646	CallExpression	r_reg_get_name_idx ( str + 2 )		4205019	1					
ANR	4207647	Callee	r_reg_get_name_idx		4205019	0					
ANR	4207648	Identifier	r_reg_get_name_idx		4205019	0					
ANR	4207649	ArgumentList	str + 2		4205019	1					
ANR	4207650	Argument	str + 2		4205019	0					
ANR	4207651	AdditiveExpression	str + 2		4205019	0		+			
ANR	4207652	Identifier	str		4205019	0					
ANR	4207653	PrimaryExpression	2		4205019	1					
ANR	4207654	IdentifierDeclStatement	"const char * regname = r_reg_get_name ( core -> dbg -> reg , role ) ;"	2649:3:77056:77115	4205019	1	True				
ANR	4207655	IdentifierDecl	"* regname = r_reg_get_name ( core -> dbg -> reg , role )"		4205019	0					
ANR	4207656	IdentifierDeclType	const char *		4205019	0					
ANR	4207657	Identifier	regname		4205019	1					
ANR	4207658	AssignmentExpression	"* regname = r_reg_get_name ( core -> dbg -> reg , role )"		4205019	2		=			
ANR	4207659	Identifier	regname		4205019	0					
ANR	4207660	CallExpression	"r_reg_get_name ( core -> dbg -> reg , role )"		4205019	1					
ANR	4207661	Callee	r_reg_get_name		4205019	0					
ANR	4207662	Identifier	r_reg_get_name		4205019	0					
ANR	4207663	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207664	Argument	core -> dbg -> reg		4205019	0					
ANR	4207665	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207666	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207667	Identifier	core		4205019	0					
ANR	4207668	Identifier	dbg		4205019	1					
ANR	4207669	Identifier	reg		4205019	1					
ANR	4207670	Argument	role		4205019	1					
ANR	4207671	Identifier	role		4205019	0					
ANR	4207672	IfStatement	if ( ! regname )		4205019	2					
ANR	4207673	Condition	! regname	2650:7:77124:77131	4205019	0	True				
ANR	4207674	UnaryOperationExpression	! regname		4205019	0					
ANR	4207675	UnaryOperator	!		4205019	0					
ANR	4207676	Identifier	regname		4205019	1					
ANR	4207677	CompoundStatement		398:17:10551:10551	4205019	1					
ANR	4207678	ExpressionStatement	regname = str + 2	2651:4:77140:77157	4205019	0	True				
ANR	4207679	AssignmentExpression	regname = str + 2		4205019	0		=			
ANR	4207680	Identifier	regname		4205019	0					
ANR	4207681	AdditiveExpression	str + 2		4205019	1		+			
ANR	4207682	Identifier	str		4205019	0					
ANR	4207683	PrimaryExpression	2		4205019	1					
ANR	4207684	ExpressionStatement	size = atoi ( regname )	2653:3:77167:77188	4205019	3	True				
ANR	4207685	AssignmentExpression	size = atoi ( regname )		4205019	0		=			
ANR	4207686	Identifier	size		4205019	0					
ANR	4207687	CallExpression	atoi ( regname )		4205019	1					
ANR	4207688	Callee	atoi		4205019	0					
ANR	4207689	Identifier	atoi		4205019	0					
ANR	4207690	ArgumentList	regname		4205019	1					
ANR	4207691	Argument	regname		4205019	0					
ANR	4207692	Identifier	regname		4205019	0					
ANR	4207693	IfStatement	if ( size < 1 )		4205019	4					
ANR	4207694	Condition	size < 1	2654:7:77197:77204	4205019	0	True				
ANR	4207695	RelationalExpression	size < 1		4205019	0		<			
ANR	4207696	Identifier	size		4205019	0					
ANR	4207697	PrimaryExpression	1		4205019	1					
ANR	4207698	CompoundStatement		403:4:10630:10663	4205019	1					
ANR	4207699	IdentifierDeclStatement	"char * arg = strchr ( str + 2 , ' ' ) ;"	2655:4:77213:77246	4205019	0	True				
ANR	4207700	IdentifierDecl	"* arg = strchr ( str + 2 , ' ' )"		4205019	0					
ANR	4207701	IdentifierDeclType	char *		4205019	0					
ANR	4207702	Identifier	arg		4205019	1					
ANR	4207703	AssignmentExpression	"* arg = strchr ( str + 2 , ' ' )"		4205019	2		=			
ANR	4207704	Identifier	arg		4205019	0					
ANR	4207705	CallExpression	"strchr ( str + 2 , ' ' )"		4205019	1					
ANR	4207706	Callee	strchr		4205019	0					
ANR	4207707	Identifier	strchr		4205019	0					
ANR	4207708	ArgumentList	str + 2		4205019	1					
ANR	4207709	Argument	str + 2		4205019	0					
ANR	4207710	AdditiveExpression	str + 2		4205019	0		+			
ANR	4207711	Identifier	str		4205019	0					
ANR	4207712	PrimaryExpression	2		4205019	1					
ANR	4207713	Argument	' '		4205019	1					
ANR	4207714	PrimaryExpression	' '		4205019	0					
ANR	4207715	ExpressionStatement	size = - 1	2656:4:77252:77261	4205019	1	True				
ANR	4207716	AssignmentExpression	size = - 1		4205019	0		=			
ANR	4207717	Identifier	size		4205019	0					
ANR	4207718	UnaryOperationExpression	- 1		4205019	1					
ANR	4207719	UnaryOperator	-		4205019	0					
ANR	4207720	PrimaryExpression	1		4205019	1					
ANR	4207721	IfStatement	if ( arg )		4205019	2					
ANR	4207722	Condition	arg	2657:8:77271:77273	4205019	0	True				
ANR	4207723	Identifier	arg		4205019	0					
ANR	4207724	CompoundStatement		405:13:10693:10693	4205019	1					
ANR	4207725	ExpressionStatement	* arg ++ = 0	2658:5:77283:77293	4205019	0	True				
ANR	4207726	AssignmentExpression	* arg ++ = 0		4205019	0		=			
ANR	4207727	UnaryOperationExpression	* arg ++		4205019	0					
ANR	4207728	UnaryOperator	*		4205019	0					
ANR	4207729	PostIncDecOperationExpression	arg ++		4205019	1					
ANR	4207730	Identifier	arg		4205019	0					
ANR	4207731	IncDec	++		4205019	1					
ANR	4207732	PrimaryExpression	0		4205019	1					
ANR	4207733	ExpressionStatement	size = atoi ( arg )	2659:5:77300:77317	4205019	1	True				
ANR	4207734	AssignmentExpression	size = atoi ( arg )		4205019	0		=			
ANR	4207735	Identifier	size		4205019	0					
ANR	4207736	CallExpression	atoi ( arg )		4205019	1					
ANR	4207737	Callee	atoi		4205019	0					
ANR	4207738	Identifier	atoi		4205019	0					
ANR	4207739	ArgumentList	arg		4205019	1					
ANR	4207740	Argument	arg		4205019	0					
ANR	4207741	Identifier	arg		4205019	0					
ANR	4207742	ExpressionStatement	type = r_reg_type_by_name ( str + 2 )	2661:4:77329:77364	4205019	3	True				
ANR	4207743	AssignmentExpression	type = r_reg_type_by_name ( str + 2 )		4205019	0		=			
ANR	4207744	Identifier	type		4205019	0					
ANR	4207745	CallExpression	r_reg_type_by_name ( str + 2 )		4205019	1					
ANR	4207746	Callee	r_reg_type_by_name		4205019	0					
ANR	4207747	Identifier	r_reg_type_by_name		4205019	0					
ANR	4207748	ArgumentList	str + 2		4205019	1					
ANR	4207749	Argument	str + 2		4205019	0					
ANR	4207750	AdditiveExpression	str + 2		4205019	0		+			
ANR	4207751	Identifier	str		4205019	0					
ANR	4207752	PrimaryExpression	2		4205019	1					
ANR	4207753	IfStatement	if ( size < 0 )		4205019	4					
ANR	4207754	Condition	size < 0	2662:8:77374:77381	4205019	0	True				
ANR	4207755	RelationalExpression	size < 0		4205019	0		<			
ANR	4207756	Identifier	size		4205019	0					
ANR	4207757	PrimaryExpression	0		4205019	1					
ANR	4207758	CompoundStatement		410:18:10801:10801	4205019	1					
ANR	4207759	ExpressionStatement	size = core -> dbg -> bits * 8	2663:5:77391:77417	4205019	0	True				
ANR	4207760	AssignmentExpression	size = core -> dbg -> bits * 8		4205019	0		=			
ANR	4207761	Identifier	size		4205019	0					
ANR	4207762	MultiplicativeExpression	core -> dbg -> bits * 8		4205019	1		*			
ANR	4207763	PtrMemberAccess	core -> dbg -> bits		4205019	0					
ANR	4207764	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207765	Identifier	core		4205019	0					
ANR	4207766	Identifier	dbg		4205019	1					
ANR	4207767	Identifier	bits		4205019	1					
ANR	4207768	PrimaryExpression	8		4205019	1					
ANR	4207769	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , type , false )"	2665:4:77429:77470	4205019	5	True				
ANR	4207770	CallExpression	"r_debug_reg_sync ( core -> dbg , type , false )"		4205019	0					
ANR	4207771	Callee	r_debug_reg_sync		4205019	0					
ANR	4207772	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207773	ArgumentList	core -> dbg		4205019	1					
ANR	4207774	Argument	core -> dbg		4205019	0					
ANR	4207775	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207776	Identifier	core		4205019	0					
ANR	4207777	Identifier	dbg		4205019	1					
ANR	4207778	Argument	type		4205019	1					
ANR	4207779	Identifier	type		4205019	0					
ANR	4207780	Argument	false		4205019	2					
ANR	4207781	Identifier	false		4205019	0					
ANR	4207782	ExpressionStatement	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"	2666:4:77476:77532	4205019	6	True				
ANR	4207783	CallExpression	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"		4205019	0					
ANR	4207784	Callee	r_debug_reg_list		4205019	0					
ANR	4207785	Identifier	r_debug_reg_list		4205019	0					
ANR	4207786	ArgumentList	core -> dbg		4205019	1					
ANR	4207787	Argument	core -> dbg		4205019	0					
ANR	4207788	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207789	Identifier	core		4205019	0					
ANR	4207790	Identifier	dbg		4205019	1					
ANR	4207791	Argument	type		4205019	1					
ANR	4207792	Identifier	type		4205019	0					
ANR	4207793	Argument	size		4205019	2					
ANR	4207794	Identifier	size		4205019	0					
ANR	4207795	Argument	rad		4205019	3					
ANR	4207796	Identifier	rad		4205019	0					
ANR	4207797	Argument	use_color		4205019	4					
ANR	4207798	Identifier	use_color		4205019	0					
ANR	4207799	ElseStatement	else		4205019	0					
ANR	4207800	CompoundStatement		415:10:10961:10961	4205019	0					
ANR	4207801	IfStatement	if ( type != R_REG_TYPE_LAST )		4205019	0					
ANR	4207802	Condition	type != R_REG_TYPE_LAST	2668:8:77554:77576	4205019	0	True				
ANR	4207803	EqualityExpression	type != R_REG_TYPE_LAST		4205019	0		!=			
ANR	4207804	Identifier	type		4205019	0					
ANR	4207805	Identifier	R_REG_TYPE_LAST		4205019	1					
ANR	4207806	CompoundStatement		416:33:10996:10996	4205019	1					
ANR	4207807	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , type , false )"	2669:5:77586:77627	4205019	0	True				
ANR	4207808	CallExpression	"r_debug_reg_sync ( core -> dbg , type , false )"		4205019	0					
ANR	4207809	Callee	r_debug_reg_sync		4205019	0					
ANR	4207810	Identifier	r_debug_reg_sync		4205019	0					
ANR	4207811	ArgumentList	core -> dbg		4205019	1					
ANR	4207812	Argument	core -> dbg		4205019	0					
ANR	4207813	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207814	Identifier	core		4205019	0					
ANR	4207815	Identifier	dbg		4205019	1					
ANR	4207816	Argument	type		4205019	1					
ANR	4207817	Identifier	type		4205019	0					
ANR	4207818	Argument	false		4205019	2					
ANR	4207819	Identifier	false		4205019	0					
ANR	4207820	ExpressionStatement	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"	2670:5:77634:77690	4205019	1	True				
ANR	4207821	CallExpression	"r_debug_reg_list ( core -> dbg , type , size , rad , use_color )"		4205019	0					
ANR	4207822	Callee	r_debug_reg_list		4205019	0					
ANR	4207823	Identifier	r_debug_reg_list		4205019	0					
ANR	4207824	ArgumentList	core -> dbg		4205019	1					
ANR	4207825	Argument	core -> dbg		4205019	0					
ANR	4207826	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207827	Identifier	core		4205019	0					
ANR	4207828	Identifier	dbg		4205019	1					
ANR	4207829	Argument	type		4205019	1					
ANR	4207830	Identifier	type		4205019	0					
ANR	4207831	Argument	size		4205019	2					
ANR	4207832	Identifier	size		4205019	0					
ANR	4207833	Argument	rad		4205019	3					
ANR	4207834	Identifier	rad		4205019	0					
ANR	4207835	Argument	use_color		4205019	4					
ANR	4207836	Identifier	use_color		4205019	0					
ANR	4207837	ElseStatement	else		4205019	0					
ANR	4207838	CompoundStatement		419:11:11120:11120	4205019	0					
ANR	4207839	ExpressionStatement	"eprintf ( ""cmd_debug_reg: unknown type\\n"" )"	2672:5:77710:77751	4205019	0	True				
ANR	4207840	CallExpression	"eprintf ( ""cmd_debug_reg: unknown type\\n"" )"		4205019	0					
ANR	4207841	Callee	eprintf		4205019	0					
ANR	4207842	Identifier	eprintf		4205019	0					
ANR	4207843	ArgumentList	"""cmd_debug_reg: unknown type\\n"""		4205019	1					
ANR	4207844	Argument	"""cmd_debug_reg: unknown type\\n"""		4205019	0					
ANR	4207845	PrimaryExpression	"""cmd_debug_reg: unknown type\\n"""		4205019	0					
ANR	4207846	BreakStatement	break ;	2675:3:77767:77772	4205019	5	True				
ANR	4207847	Label	case '?' :	2677:2:77780:77788	4205019	10	True				
ANR	4207848	Label	default :	2678:2:77802:77809	4205019	11	True				
ANR	4207849	Identifier	default		4205019	0					
ANR	4207850	ExpressionStatement	"r_core_cmd_help ( core , help_msg_drt )"	2679:3:77814:77850	4205019	12	True				
ANR	4207851	CallExpression	"r_core_cmd_help ( core , help_msg_drt )"		4205019	0					
ANR	4207852	Callee	r_core_cmd_help		4205019	0					
ANR	4207853	Identifier	r_core_cmd_help		4205019	0					
ANR	4207854	ArgumentList	core		4205019	1					
ANR	4207855	Argument	core		4205019	0					
ANR	4207856	Identifier	core		4205019	0					
ANR	4207857	Argument	help_msg_drt		4205019	1					
ANR	4207858	Identifier	help_msg_drt		4205019	0					
ANR	4207859	BreakStatement	break ;	2680:3:77855:77860	4205019	13	True				
ANR	4207860	BreakStatement	break ;	2683:2:77872:77877	4205019	37	True				
ANR	4207861	Label	case 'n' :	2684:1:77880:77888	4205019	38	True				
ANR	4207862	CompoundStatement		434:3:11323:11349	4205019	39					
ANR	4207863	IdentifierDeclStatement	char * foo = strdup ( str + 2 ) ;	2686:3:77906:77932	4205019	0	True				
ANR	4207864	IdentifierDecl	* foo = strdup ( str + 2 )		4205019	0					
ANR	4207865	IdentifierDeclType	char *		4205019	0					
ANR	4207866	Identifier	foo		4205019	1					
ANR	4207867	AssignmentExpression	* foo = strdup ( str + 2 )		4205019	2		=			
ANR	4207868	Identifier	foo		4205019	0					
ANR	4207869	CallExpression	strdup ( str + 2 )		4205019	1					
ANR	4207870	Callee	strdup		4205019	0					
ANR	4207871	Identifier	strdup		4205019	0					
ANR	4207872	ArgumentList	str + 2		4205019	1					
ANR	4207873	Argument	str + 2		4205019	0					
ANR	4207874	AdditiveExpression	str + 2		4205019	0		+			
ANR	4207875	Identifier	str		4205019	0					
ANR	4207876	PrimaryExpression	2		4205019	1					
ANR	4207877	ExpressionStatement	"r_str_case ( foo , true )"	2687:3:77937:77959	4205019	1	True				
ANR	4207878	CallExpression	"r_str_case ( foo , true )"		4205019	0					
ANR	4207879	Callee	r_str_case		4205019	0					
ANR	4207880	Identifier	r_str_case		4205019	0					
ANR	4207881	ArgumentList	foo		4205019	1					
ANR	4207882	Argument	foo		4205019	0					
ANR	4207883	Identifier	foo		4205019	0					
ANR	4207884	Argument	true		4205019	1					
ANR	4207885	Identifier	true		4205019	0					
ANR	4207886	ExpressionStatement	"name = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( foo ) )"	2688:3:77964:78028	4205019	2	True				
ANR	4207887	AssignmentExpression	"name = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( foo ) )"		4205019	0		=			
ANR	4207888	Identifier	name		4205019	0					
ANR	4207889	CallExpression	"r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( foo ) )"		4205019	1					
ANR	4207890	Callee	r_reg_get_name		4205019	0					
ANR	4207891	Identifier	r_reg_get_name		4205019	0					
ANR	4207892	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207893	Argument	core -> dbg -> reg		4205019	0					
ANR	4207894	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207895	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207896	Identifier	core		4205019	0					
ANR	4207897	Identifier	dbg		4205019	1					
ANR	4207898	Identifier	reg		4205019	1					
ANR	4207899	Argument	r_reg_get_name_idx ( foo )		4205019	1					
ANR	4207900	CallExpression	r_reg_get_name_idx ( foo )		4205019	0					
ANR	4207901	Callee	r_reg_get_name_idx		4205019	0					
ANR	4207902	Identifier	r_reg_get_name_idx		4205019	0					
ANR	4207903	ArgumentList	foo		4205019	1					
ANR	4207904	Argument	foo		4205019	0					
ANR	4207905	Identifier	foo		4205019	0					
ANR	4207906	IfStatement	if ( name && * name )		4205019	3					
ANR	4207907	Condition	name && * name	2689:7:78037:78049	4205019	0	True				
ANR	4207908	AndExpression	name && * name		4205019	0		&&			
ANR	4207909	Identifier	name		4205019	0					
ANR	4207910	UnaryOperationExpression	* name		4205019	1					
ANR	4207911	UnaryOperator	*		4205019	0					
ANR	4207912	Identifier	name		4205019	1					
ANR	4207913	CompoundStatement		437:22:11469:11469	4205019	1					
ANR	4207914	ExpressionStatement	r_cons_println ( name )	2690:4:78058:78079	4205019	0	True				
ANR	4207915	CallExpression	r_cons_println ( name )		4205019	0					
ANR	4207916	Callee	r_cons_println		4205019	0					
ANR	4207917	Identifier	r_cons_println		4205019	0					
ANR	4207918	ArgumentList	name		4205019	1					
ANR	4207919	Argument	name		4205019	0					
ANR	4207920	Identifier	name		4205019	0					
ANR	4207921	ElseStatement	else		4205019	0					
ANR	4207922	ExpressionStatement	"eprintf ( ""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"" )"	2691:10:78091:78162	4205019	0	True				
ANR	4207923	CallExpression	"eprintf ( ""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"" )"		4205019	0					
ANR	4207924	Callee	eprintf		4205019	0					
ANR	4207925	Identifier	eprintf		4205019	0					
ANR	4207926	ArgumentList	"""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"""		4205019	1					
ANR	4207927	Argument	"""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"""		4205019	0					
ANR	4207928	PrimaryExpression	"""oops. try drn [pc|sp|bp|a0|a1|a2|a3|a4|r0|r1|zf|sf|nf|of]\\n"""		4205019	0					
ANR	4207929	ExpressionStatement	free ( foo )	2692:3:78167:78177	4205019	4	True				
ANR	4207930	CallExpression	free ( foo )		4205019	0					
ANR	4207931	Callee	free		4205019	0					
ANR	4207932	Identifier	free		4205019	0					
ANR	4207933	ArgumentList	foo		4205019	1					
ANR	4207934	Argument	foo		4205019	0					
ANR	4207935	Identifier	foo		4205019	0					
ANR	4207936	BreakStatement	break ;	2694:2:78185:78190	4205019	40	True				
ANR	4207937	Label	case 'd' :	2695:1:78193:78201	4205019	41	True				
ANR	4207938	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 3 , use_color )"	2696:2:78214:78278	4205019	42	True				
ANR	4207939	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 3 , use_color )"		4205019	0					
ANR	4207940	Callee	r_debug_reg_list		4205019	0					
ANR	4207941	Identifier	r_debug_reg_list		4205019	0					
ANR	4207942	ArgumentList	core -> dbg		4205019	1					
ANR	4207943	Argument	core -> dbg		4205019	0					
ANR	4207944	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207945	Identifier	core		4205019	0					
ANR	4207946	Identifier	dbg		4205019	1					
ANR	4207947	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4207948	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4207949	Argument	bits		4205019	2					
ANR	4207950	Identifier	bits		4205019	0					
ANR	4207951	Argument	3		4205019	3					
ANR	4207952	PrimaryExpression	3		4205019	0					
ANR	4207953	Argument	use_color		4205019	4					
ANR	4207954	Identifier	use_color		4205019	0					
ANR	4207955	BreakStatement	break ;	2697:2:78323:78328	4205019	43	True				
ANR	4207956	Label	case 'o' :	2698:1:78331:78339	4205019	44	True				
ANR	4207957	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2699:2:78352:78392	4205019	45	True				
ANR	4207958	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		4205019	0					
ANR	4207959	Callee	r_reg_arena_swap		4205019	0					
ANR	4207960	Identifier	r_reg_arena_swap		4205019	0					
ANR	4207961	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207962	Argument	core -> dbg -> reg		4205019	0					
ANR	4207963	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207964	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207965	Identifier	core		4205019	0					
ANR	4207966	Identifier	dbg		4205019	1					
ANR	4207967	Identifier	reg		4205019	1					
ANR	4207968	Argument	false		4205019	1					
ANR	4207969	Identifier	false		4205019	0					
ANR	4207970	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 0 , use_color )"	2700:2:78396:78460	4205019	46	True				
ANR	4207971	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 0 , use_color )"		4205019	0					
ANR	4207972	Callee	r_debug_reg_list		4205019	0					
ANR	4207973	Identifier	r_debug_reg_list		4205019	0					
ANR	4207974	ArgumentList	core -> dbg		4205019	1					
ANR	4207975	Argument	core -> dbg		4205019	0					
ANR	4207976	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207977	Identifier	core		4205019	0					
ANR	4207978	Identifier	dbg		4205019	1					
ANR	4207979	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4207980	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4207981	Argument	bits		4205019	2					
ANR	4207982	Identifier	bits		4205019	0					
ANR	4207983	Argument	0		4205019	3					
ANR	4207984	PrimaryExpression	0		4205019	0					
ANR	4207985	Argument	use_color		4205019	4					
ANR	4207986	Identifier	use_color		4205019	0					
ANR	4207987	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , false )"	2701:2:78505:78545	4205019	47	True				
ANR	4207988	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , false )"		4205019	0					
ANR	4207989	Callee	r_reg_arena_swap		4205019	0					
ANR	4207990	Identifier	r_reg_arena_swap		4205019	0					
ANR	4207991	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4207992	Argument	core -> dbg -> reg		4205019	0					
ANR	4207993	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4207994	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4207995	Identifier	core		4205019	0					
ANR	4207996	Identifier	dbg		4205019	1					
ANR	4207997	Identifier	reg		4205019	1					
ANR	4207998	Argument	false		4205019	1					
ANR	4207999	Identifier	false		4205019	0					
ANR	4208000	BreakStatement	break ;	2702:2:78549:78554	4205019	48	True				
ANR	4208001	Label	case '=' :	2703:1:78557:78565	4205019	49	True				
ANR	4208002	CompoundStatement		453:3:12000:12057	4205019	50					
ANR	4208003	IdentifierDeclStatement	"int pcbits2 , pcbits = grab_bits ( core , str + 1 , & pcbits2 ) ;"	2705:3:78583:78640	4205019	0	True				
ANR	4208004	IdentifierDecl	pcbits2		4205019	0					
ANR	4208005	IdentifierDeclType	int		4205019	0					
ANR	4208006	Identifier	pcbits2		4205019	1					
ANR	4208007	IdentifierDecl	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		4205019	1					
ANR	4208008	IdentifierDeclType	int		4205019	0					
ANR	4208009	Identifier	pcbits		4205019	1					
ANR	4208010	AssignmentExpression	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		4205019	2		=			
ANR	4208011	Identifier	pcbits		4205019	0					
ANR	4208012	CallExpression	"grab_bits ( core , str + 1 , & pcbits2 )"		4205019	1					
ANR	4208013	Callee	grab_bits		4205019	0					
ANR	4208014	Identifier	grab_bits		4205019	0					
ANR	4208015	ArgumentList	core		4205019	1					
ANR	4208016	Argument	core		4205019	0					
ANR	4208017	Identifier	core		4205019	0					
ANR	4208018	Argument	str + 1		4205019	1					
ANR	4208019	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208020	Identifier	str		4205019	0					
ANR	4208021	PrimaryExpression	1		4205019	1					
ANR	4208022	Argument	& pcbits2		4205019	2					
ANR	4208023	UnaryOperationExpression	& pcbits2		4205019	0					
ANR	4208024	UnaryOperator	&		4205019	0					
ANR	4208025	Identifier	pcbits2		4205019	1					
ANR	4208026	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		4205019	1					
ANR	4208027	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	2706:7:78649:78690	4205019	0	True				
ANR	4208028	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		4205019	0					
ANR	4208029	Callee	r_config_get_i		4205019	0					
ANR	4208030	Identifier	r_config_get_i		4205019	0					
ANR	4208031	ArgumentList	core -> config		4205019	1					
ANR	4208032	Argument	core -> config		4205019	0					
ANR	4208033	PtrMemberAccess	core -> config		4205019	0					
ANR	4208034	Identifier	core		4205019	0					
ANR	4208035	Identifier	config		4205019	1					
ANR	4208036	Argument	"""cfg.debug"""		4205019	1					
ANR	4208037	PrimaryExpression	"""cfg.debug"""		4205019	0					
ANR	4208038	CompoundStatement		454:51:12110:12110	4205019	1					
ANR	4208039	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		4205019	0					
ANR	4208040	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2707:8:78703:78753	4205019	0	True				
ANR	4208041	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4205019	0					
ANR	4208042	Callee	r_debug_reg_sync		4205019	0					
ANR	4208043	Identifier	r_debug_reg_sync		4205019	0					
ANR	4208044	ArgumentList	core -> dbg		4205019	1					
ANR	4208045	Argument	core -> dbg		4205019	0					
ANR	4208046	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208047	Identifier	core		4205019	0					
ANR	4208048	Identifier	dbg		4205019	1					
ANR	4208049	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208050	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208051	Argument	false		4205019	2					
ANR	4208052	Identifier	false		4205019	0					
ANR	4208053	CompoundStatement		455:61:12173:12173	4205019	1					
ANR	4208054	IfStatement	if ( pcbits && pcbits != bits )		4205019	0					
ANR	4208055	Condition	pcbits && pcbits != bits	2708:9:78767:78790	4205019	0	True				
ANR	4208056	AndExpression	pcbits && pcbits != bits		4205019	0		&&			
ANR	4208057	Identifier	pcbits		4205019	0					
ANR	4208058	EqualityExpression	pcbits != bits		4205019	1		!=			
ANR	4208059	Identifier	pcbits		4205019	0					
ANR	4208060	Identifier	bits		4205019	1					
ANR	4208061	CompoundStatement		456:35:12210:12210	4205019	1					
ANR	4208062	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"	2709:6:78801:78867	4205019	0	True				
ANR	4208063	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"		4205019	0					
ANR	4208064	Callee	r_debug_reg_list		4205019	0					
ANR	4208065	Identifier	r_debug_reg_list		4205019	0					
ANR	4208066	ArgumentList	core -> dbg		4205019	1					
ANR	4208067	Argument	core -> dbg		4205019	0					
ANR	4208068	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208069	Identifier	core		4205019	0					
ANR	4208070	Identifier	dbg		4205019	1					
ANR	4208071	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208072	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208073	Argument	pcbits		4205019	2					
ANR	4208074	Identifier	pcbits		4205019	0					
ANR	4208075	Argument	2		4205019	3					
ANR	4208076	PrimaryExpression	2		4205019	0					
ANR	4208077	Argument	use_color		4205019	4					
ANR	4208078	Identifier	use_color		4205019	0					
ANR	4208079	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"	2711:5:78922:78986	4205019	1	True				
ANR	4208080	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"		4205019	0					
ANR	4208081	Callee	r_debug_reg_list		4205019	0					
ANR	4208082	Identifier	r_debug_reg_list		4205019	0					
ANR	4208083	ArgumentList	core -> dbg		4205019	1					
ANR	4208084	Argument	core -> dbg		4205019	0					
ANR	4208085	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208086	Identifier	core		4205019	0					
ANR	4208087	Identifier	dbg		4205019	1					
ANR	4208088	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208089	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208090	Argument	bits		4205019	2					
ANR	4208091	Identifier	bits		4205019	0					
ANR	4208092	Argument	2		4205019	3					
ANR	4208093	PrimaryExpression	2		4205019	0					
ANR	4208094	Argument	use_color		4205019	4					
ANR	4208095	Identifier	use_color		4205019	0					
ANR	4208096	IfStatement	if ( pcbits2 )		4205019	2					
ANR	4208097	Condition	pcbits2	2712:9:79038:79044	4205019	0	True				
ANR	4208098	Identifier	pcbits2		4205019	0					
ANR	4208099	CompoundStatement		460:18:12464:12464	4205019	1					
ANR	4208100	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , 2 , use_color )"	2713:6:79055:79122	4205019	0	True				
ANR	4208101	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , 2 , use_color )"		4205019	0					
ANR	4208102	Callee	r_debug_reg_list		4205019	0					
ANR	4208103	Identifier	r_debug_reg_list		4205019	0					
ANR	4208104	ArgumentList	core -> dbg		4205019	1					
ANR	4208105	Argument	core -> dbg		4205019	0					
ANR	4208106	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208107	Identifier	core		4205019	0					
ANR	4208108	Identifier	dbg		4205019	1					
ANR	4208109	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208110	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208111	Argument	pcbits2		4205019	2					
ANR	4208112	Identifier	pcbits2		4205019	0					
ANR	4208113	Argument	2		4205019	3					
ANR	4208114	PrimaryExpression	2		4205019	0					
ANR	4208115	Argument	use_color		4205019	4					
ANR	4208116	Identifier	use_color		4205019	0					
ANR	4208117	ElseStatement	else		4205019	0					
ANR	4208118	CompoundStatement		465:4:12687:12714	4205019	0					
ANR	4208119	IdentifierDeclStatement	RReg * orig = core -> dbg -> reg ;	2717:4:79270:79297	4205019	0	True				
ANR	4208120	IdentifierDecl	* orig = core -> dbg -> reg		4205019	0					
ANR	4208121	IdentifierDeclType	RReg *		4205019	0					
ANR	4208122	Identifier	orig		4205019	1					
ANR	4208123	AssignmentExpression	* orig = core -> dbg -> reg		4205019	2		=			
ANR	4208124	Identifier	orig		4205019	0					
ANR	4208125	PtrMemberAccess	core -> dbg -> reg		4205019	1					
ANR	4208126	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208127	Identifier	core		4205019	0					
ANR	4208128	Identifier	dbg		4205019	1					
ANR	4208129	Identifier	reg		4205019	1					
ANR	4208130	ExpressionStatement	core -> dbg -> reg = core -> anal -> reg	2718:4:79303:79335	4205019	1	True				
ANR	4208131	AssignmentExpression	core -> dbg -> reg = core -> anal -> reg		4205019	0		=			
ANR	4208132	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208133	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208134	Identifier	core		4205019	0					
ANR	4208135	Identifier	dbg		4205019	1					
ANR	4208136	Identifier	reg		4205019	1					
ANR	4208137	PtrMemberAccess	core -> anal -> reg		4205019	1					
ANR	4208138	PtrMemberAccess	core -> anal		4205019	0					
ANR	4208139	Identifier	core		4205019	0					
ANR	4208140	Identifier	anal		4205019	1					
ANR	4208141	Identifier	reg		4205019	1					
ANR	4208142	IfStatement	if ( pcbits && pcbits != bits )		4205019	2					
ANR	4208143	Condition	pcbits && pcbits != bits	2719:8:79345:79368	4205019	0	True				
ANR	4208144	AndExpression	pcbits && pcbits != bits		4205019	0		&&			
ANR	4208145	Identifier	pcbits		4205019	0					
ANR	4208146	EqualityExpression	pcbits != bits		4205019	1		!=			
ANR	4208147	Identifier	pcbits		4205019	0					
ANR	4208148	Identifier	bits		4205019	1					
ANR	4208149	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"	2720:5:79376:79442	4205019	1	True				
ANR	4208150	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , 2 , use_color )"		4205019	0					
ANR	4208151	Callee	r_debug_reg_list		4205019	0					
ANR	4208152	Identifier	r_debug_reg_list		4205019	0					
ANR	4208153	ArgumentList	core -> dbg		4205019	1					
ANR	4208154	Argument	core -> dbg		4205019	0					
ANR	4208155	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208156	Identifier	core		4205019	0					
ANR	4208157	Identifier	dbg		4205019	1					
ANR	4208158	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208159	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208160	Argument	pcbits		4205019	2					
ANR	4208161	Identifier	pcbits		4205019	0					
ANR	4208162	Argument	2		4205019	3					
ANR	4208163	PrimaryExpression	2		4205019	0					
ANR	4208164	Argument	use_color		4205019	4					
ANR	4208165	Identifier	use_color		4205019	0					
ANR	4208166	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"	2721:4:79489:79553	4205019	3	True				
ANR	4208167	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , bits , 2 , use_color )"		4205019	0					
ANR	4208168	Callee	r_debug_reg_list		4205019	0					
ANR	4208169	Identifier	r_debug_reg_list		4205019	0					
ANR	4208170	ArgumentList	core -> dbg		4205019	1					
ANR	4208171	Argument	core -> dbg		4205019	0					
ANR	4208172	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208173	Identifier	core		4205019	0					
ANR	4208174	Identifier	dbg		4205019	1					
ANR	4208175	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208176	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208177	Argument	bits		4205019	2					
ANR	4208178	Identifier	bits		4205019	0					
ANR	4208179	Argument	2		4205019	3					
ANR	4208180	PrimaryExpression	2		4205019	0					
ANR	4208181	Argument	use_color		4205019	4					
ANR	4208182	Identifier	use_color		4205019	0					
ANR	4208183	ExpressionStatement	core -> dbg -> reg = orig	2722:4:79600:79621	4205019	4	True				
ANR	4208184	AssignmentExpression	core -> dbg -> reg = orig		4205019	0		=			
ANR	4208185	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208186	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208187	Identifier	core		4205019	0					
ANR	4208188	Identifier	dbg		4205019	1					
ANR	4208189	Identifier	reg		4205019	1					
ANR	4208190	Identifier	orig		4205019	1					
ANR	4208191	BreakStatement	break ;	2725:2:79634:79639	4205019	51	True				
ANR	4208192	Label	case '.' :	2726:1:79642:79650	4205019	52	True				
ANR	4208193	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		4205019	53					
ANR	4208194	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2727:6:79658:79708	4205019	0	True				
ANR	4208195	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4205019	0					
ANR	4208196	Callee	r_debug_reg_sync		4205019	0					
ANR	4208197	Identifier	r_debug_reg_sync		4205019	0					
ANR	4208198	ArgumentList	core -> dbg		4205019	1					
ANR	4208199	Argument	core -> dbg		4205019	0					
ANR	4208200	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208201	Identifier	core		4205019	0					
ANR	4208202	Identifier	dbg		4205019	1					
ANR	4208203	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208204	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208205	Argument	false		4205019	2					
ANR	4208206	Identifier	false		4205019	0					
ANR	4208207	CompoundStatement		476:3:13133:13190	4205019	1					
ANR	4208208	IdentifierDeclStatement	"int pcbits2 , pcbits = grab_bits ( core , str + 1 , & pcbits2 ) ;"	2728:3:79716:79773	4205019	0	True				
ANR	4208209	IdentifierDecl	pcbits2		4205019	0					
ANR	4208210	IdentifierDeclType	int		4205019	0					
ANR	4208211	Identifier	pcbits2		4205019	1					
ANR	4208212	IdentifierDecl	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		4205019	1					
ANR	4208213	IdentifierDeclType	int		4205019	0					
ANR	4208214	Identifier	pcbits		4205019	1					
ANR	4208215	AssignmentExpression	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		4205019	2		=			
ANR	4208216	Identifier	pcbits		4205019	0					
ANR	4208217	CallExpression	"grab_bits ( core , str + 1 , & pcbits2 )"		4205019	1					
ANR	4208218	Callee	grab_bits		4205019	0					
ANR	4208219	Identifier	grab_bits		4205019	0					
ANR	4208220	ArgumentList	core		4205019	1					
ANR	4208221	Argument	core		4205019	0					
ANR	4208222	Identifier	core		4205019	0					
ANR	4208223	Argument	str + 1		4205019	1					
ANR	4208224	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208225	Identifier	str		4205019	0					
ANR	4208226	PrimaryExpression	1		4205019	1					
ANR	4208227	Argument	& pcbits2		4205019	2					
ANR	4208228	UnaryOperationExpression	& pcbits2		4205019	0					
ANR	4208229	UnaryOperator	&		4205019	0					
ANR	4208230	Identifier	pcbits2		4205019	1					
ANR	4208231	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '.' , use_color )"	2729:3:79778:79846	4205019	1	True				
ANR	4208232	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '.' , use_color )"		4205019	0					
ANR	4208233	Callee	r_debug_reg_list		4205019	0					
ANR	4208234	Identifier	r_debug_reg_list		4205019	0					
ANR	4208235	ArgumentList	core -> dbg		4205019	1					
ANR	4208236	Argument	core -> dbg		4205019	0					
ANR	4208237	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208238	Identifier	core		4205019	0					
ANR	4208239	Identifier	dbg		4205019	1					
ANR	4208240	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208241	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208242	Argument	pcbits		4205019	2					
ANR	4208243	Identifier	pcbits		4205019	0					
ANR	4208244	Argument	'.'		4205019	3					
ANR	4208245	PrimaryExpression	'.'		4205019	0					
ANR	4208246	Argument	use_color		4205019	4					
ANR	4208247	Identifier	use_color		4205019	0					
ANR	4208248	IfStatement	if ( pcbits2 )		4205019	2					
ANR	4208249	Condition	pcbits2	2730:7:79855:79861	4205019	0	True				
ANR	4208250	Identifier	pcbits2		4205019	0					
ANR	4208251	CompoundStatement		478:16:13281:13281	4205019	1					
ANR	4208252	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '.' , use_color )"	2731:4:79870:79939	4205019	0	True				
ANR	4208253	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '.' , use_color )"		4205019	0					
ANR	4208254	Callee	r_debug_reg_list		4205019	0					
ANR	4208255	Identifier	r_debug_reg_list		4205019	0					
ANR	4208256	ArgumentList	core -> dbg		4205019	1					
ANR	4208257	Argument	core -> dbg		4205019	0					
ANR	4208258	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208259	Identifier	core		4205019	0					
ANR	4208260	Identifier	dbg		4205019	1					
ANR	4208261	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208262	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208263	Argument	pcbits2		4205019	2					
ANR	4208264	Identifier	pcbits2		4205019	0					
ANR	4208265	Argument	'.'		4205019	3					
ANR	4208266	PrimaryExpression	'.'		4205019	0					
ANR	4208267	Argument	use_color		4205019	4					
ANR	4208268	Identifier	use_color		4205019	0					
ANR	4208269	BreakStatement	break ;	2734:2:79952:79957	4205019	54	True				
ANR	4208270	Label	case '*' :	2735:1:79960:79968	4205019	55	True				
ANR	4208271	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		4205019	56					
ANR	4208272	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2736:6:79985:80035	4205019	0	True				
ANR	4208273	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4205019	0					
ANR	4208274	Callee	r_debug_reg_sync		4205019	0					
ANR	4208275	Identifier	r_debug_reg_sync		4205019	0					
ANR	4208276	ArgumentList	core -> dbg		4205019	1					
ANR	4208277	Argument	core -> dbg		4205019	0					
ANR	4208278	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208279	Identifier	core		4205019	0					
ANR	4208280	Identifier	dbg		4205019	1					
ANR	4208281	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208282	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208283	Argument	false		4205019	2					
ANR	4208284	Identifier	false		4205019	0					
ANR	4208285	CompoundStatement		485:3:13460:13517	4205019	1					
ANR	4208286	IdentifierDeclStatement	"int pcbits2 , pcbits = grab_bits ( core , str + 1 , & pcbits2 ) ;"	2737:3:80043:80100	4205019	0	True				
ANR	4208287	IdentifierDecl	pcbits2		4205019	0					
ANR	4208288	IdentifierDeclType	int		4205019	0					
ANR	4208289	Identifier	pcbits2		4205019	1					
ANR	4208290	IdentifierDecl	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		4205019	1					
ANR	4208291	IdentifierDeclType	int		4205019	0					
ANR	4208292	Identifier	pcbits		4205019	1					
ANR	4208293	AssignmentExpression	"pcbits = grab_bits ( core , str + 1 , & pcbits2 )"		4205019	2		=			
ANR	4208294	Identifier	pcbits		4205019	0					
ANR	4208295	CallExpression	"grab_bits ( core , str + 1 , & pcbits2 )"		4205019	1					
ANR	4208296	Callee	grab_bits		4205019	0					
ANR	4208297	Identifier	grab_bits		4205019	0					
ANR	4208298	ArgumentList	core		4205019	1					
ANR	4208299	Argument	core		4205019	0					
ANR	4208300	Identifier	core		4205019	0					
ANR	4208301	Argument	str + 1		4205019	1					
ANR	4208302	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208303	Identifier	str		4205019	0					
ANR	4208304	PrimaryExpression	1		4205019	1					
ANR	4208305	Argument	& pcbits2		4205019	2					
ANR	4208306	UnaryOperationExpression	& pcbits2		4205019	0					
ANR	4208307	UnaryOperator	&		4205019	0					
ANR	4208308	Identifier	pcbits2		4205019	1					
ANR	4208309	ExpressionStatement	"r_cons_printf ( ""fs+regs\\n"" )"	2738:3:80105:80132	4205019	1	True				
ANR	4208310	CallExpression	"r_cons_printf ( ""fs+regs\\n"" )"		4205019	0					
ANR	4208311	Callee	r_cons_printf		4205019	0					
ANR	4208312	Identifier	r_cons_printf		4205019	0					
ANR	4208313	ArgumentList	"""fs+regs\\n"""		4205019	1					
ANR	4208314	Argument	"""fs+regs\\n"""		4205019	0					
ANR	4208315	PrimaryExpression	"""fs+regs\\n"""		4205019	0					
ANR	4208316	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '*' , use_color )"	2739:3:80137:80205	4205019	2	True				
ANR	4208317	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , '*' , use_color )"		4205019	0					
ANR	4208318	Callee	r_debug_reg_list		4205019	0					
ANR	4208319	Identifier	r_debug_reg_list		4205019	0					
ANR	4208320	ArgumentList	core -> dbg		4205019	1					
ANR	4208321	Argument	core -> dbg		4205019	0					
ANR	4208322	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208323	Identifier	core		4205019	0					
ANR	4208324	Identifier	dbg		4205019	1					
ANR	4208325	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208326	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208327	Argument	pcbits		4205019	2					
ANR	4208328	Identifier	pcbits		4205019	0					
ANR	4208329	Argument	'*'		4205019	3					
ANR	4208330	PrimaryExpression	'*'		4205019	0					
ANR	4208331	Argument	use_color		4205019	4					
ANR	4208332	Identifier	use_color		4205019	0					
ANR	4208333	IfStatement	if ( pcbits2 )		4205019	3					
ANR	4208334	Condition	pcbits2	2740:7:80214:80220	4205019	0	True				
ANR	4208335	Identifier	pcbits2		4205019	0					
ANR	4208336	CompoundStatement		488:16:13640:13640	4205019	1					
ANR	4208337	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '*' , use_color )"	2741:4:80229:80298	4205019	0	True				
ANR	4208338	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits2 , '*' , use_color )"		4205019	0					
ANR	4208339	Callee	r_debug_reg_list		4205019	0					
ANR	4208340	Identifier	r_debug_reg_list		4205019	0					
ANR	4208341	ArgumentList	core -> dbg		4205019	1					
ANR	4208342	Argument	core -> dbg		4205019	0					
ANR	4208343	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208344	Identifier	core		4205019	0					
ANR	4208345	Identifier	dbg		4205019	1					
ANR	4208346	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208347	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208348	Argument	pcbits2		4205019	2					
ANR	4208349	Identifier	pcbits2		4205019	0					
ANR	4208350	Argument	'*'		4205019	3					
ANR	4208351	PrimaryExpression	'*'		4205019	0					
ANR	4208352	Argument	use_color		4205019	4					
ANR	4208353	Identifier	use_color		4205019	0					
ANR	4208354	ExpressionStatement	r_flag_space_pop ( core -> flags )	2743:3:80308:80338	4205019	4	True				
ANR	4208355	CallExpression	r_flag_space_pop ( core -> flags )		4205019	0					
ANR	4208356	Callee	r_flag_space_pop		4205019	0					
ANR	4208357	Identifier	r_flag_space_pop		4205019	0					
ANR	4208358	ArgumentList	core -> flags		4205019	1					
ANR	4208359	Argument	core -> flags		4205019	0					
ANR	4208360	PtrMemberAccess	core -> flags		4205019	0					
ANR	4208361	Identifier	core		4205019	0					
ANR	4208362	Identifier	flags		4205019	1					
ANR	4208363	ExpressionStatement	"r_cons_printf ( ""fs-\\n"" )"	2744:3:80343:80366	4205019	5	True				
ANR	4208364	CallExpression	"r_cons_printf ( ""fs-\\n"" )"		4205019	0					
ANR	4208365	Callee	r_cons_printf		4205019	0					
ANR	4208366	Identifier	r_cons_printf		4205019	0					
ANR	4208367	ArgumentList	"""fs-\\n"""		4205019	1					
ANR	4208368	Argument	"""fs-\\n"""		4205019	0					
ANR	4208369	PrimaryExpression	"""fs-\\n"""		4205019	0					
ANR	4208370	BreakStatement	break ;	2746:2:80374:80379	4205019	57	True				
ANR	4208371	Label	case 'i' :	2747:1:80382:80390	4205019	58	True				
ANR	4208372	ExpressionStatement	"r_core_debug_ri ( core , core -> dbg -> reg , 0 )"	2748:2:80403:80444	4205019	59	True				
ANR	4208373	CallExpression	"r_core_debug_ri ( core , core -> dbg -> reg , 0 )"		4205019	0					
ANR	4208374	Callee	r_core_debug_ri		4205019	0					
ANR	4208375	Identifier	r_core_debug_ri		4205019	0					
ANR	4208376	ArgumentList	core		4205019	1					
ANR	4208377	Argument	core		4205019	0					
ANR	4208378	Identifier	core		4205019	0					
ANR	4208379	Argument	core -> dbg -> reg		4205019	1					
ANR	4208380	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208381	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208382	Identifier	core		4205019	0					
ANR	4208383	Identifier	dbg		4205019	1					
ANR	4208384	Identifier	reg		4205019	1					
ANR	4208385	Argument	0		4205019	2					
ANR	4208386	PrimaryExpression	0		4205019	0					
ANR	4208387	BreakStatement	break ;	2749:2:80448:80453	4205019	60	True				
ANR	4208388	Label	case 'r' :	2750:1:80456:80464	4205019	61	True				
ANR	4208389	SwitchStatement	switch ( str [ 1 ] )		4205019	62					
ANR	4208390	Condition	str [ 1 ]	2751:10:80485:80490	4205019	0	True				
ANR	4208391	ArrayIndexing	str [ 1 ]		4205019	0					
ANR	4208392	Identifier	str		4205019	0					
ANR	4208393	PrimaryExpression	1		4205019	1					
ANR	4208394	CompoundStatement		499:18:13910:13910	4205019	1					
ANR	4208395	Label	case 'j' :	2752:2:80497:80505	4205019	0	True				
ANR	4208396	ExpressionStatement	"r_core_debug_rr ( core , core -> dbg -> reg , 'j' )"	2753:3:80520:80563	4205019	1	True				
ANR	4208397	CallExpression	"r_core_debug_rr ( core , core -> dbg -> reg , 'j' )"		4205019	0					
ANR	4208398	Callee	r_core_debug_rr		4205019	0					
ANR	4208399	Identifier	r_core_debug_rr		4205019	0					
ANR	4208400	ArgumentList	core		4205019	1					
ANR	4208401	Argument	core		4205019	0					
ANR	4208402	Identifier	core		4205019	0					
ANR	4208403	Argument	core -> dbg -> reg		4205019	1					
ANR	4208404	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208405	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208406	Identifier	core		4205019	0					
ANR	4208407	Identifier	dbg		4205019	1					
ANR	4208408	Identifier	reg		4205019	1					
ANR	4208409	Argument	'j'		4205019	2					
ANR	4208410	PrimaryExpression	'j'		4205019	0					
ANR	4208411	BreakStatement	break ;	2754:3:80568:80573	4205019	2	True				
ANR	4208412	Label	default :	2755:2:80577:80584	4205019	3	True				
ANR	4208413	Identifier	default		4205019	0					
ANR	4208414	ExpressionStatement	"r_core_debug_rr ( core , core -> dbg -> reg , 0 )"	2756:3:80589:80630	4205019	4	True				
ANR	4208415	CallExpression	"r_core_debug_rr ( core , core -> dbg -> reg , 0 )"		4205019	0					
ANR	4208416	Callee	r_core_debug_rr		4205019	0					
ANR	4208417	Identifier	r_core_debug_rr		4205019	0					
ANR	4208418	ArgumentList	core		4205019	1					
ANR	4208419	Argument	core		4205019	0					
ANR	4208420	Identifier	core		4205019	0					
ANR	4208421	Argument	core -> dbg -> reg		4205019	1					
ANR	4208422	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208423	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208424	Identifier	core		4205019	0					
ANR	4208425	Identifier	dbg		4205019	1					
ANR	4208426	Identifier	reg		4205019	1					
ANR	4208427	Argument	0		4205019	2					
ANR	4208428	PrimaryExpression	0		4205019	0					
ANR	4208429	BreakStatement	break ;	2757:3:80635:80640	4205019	5	True				
ANR	4208430	BreakStatement	break ;	2759:2:80648:80653	4205019	63	True				
ANR	4208431	Label	case 'j' :	2760:1:80656:80664	4205019	64	True				
ANR	4208432	Label	case '\\0' :	2761:1:80676:80685	4205019	65	True				
ANR	4208433	IfStatement	"if ( r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false ) )"		4205019	66					
ANR	4208434	Condition	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	2762:6:80701:80751	4205019	0	True				
ANR	4208435	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4205019	0					
ANR	4208436	Callee	r_debug_reg_sync		4205019	0					
ANR	4208437	Identifier	r_debug_reg_sync		4205019	0					
ANR	4208438	ArgumentList	core -> dbg		4205019	1					
ANR	4208439	Argument	core -> dbg		4205019	0					
ANR	4208440	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208441	Identifier	core		4205019	0					
ANR	4208442	Identifier	dbg		4205019	1					
ANR	4208443	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208444	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208445	Argument	false		4205019	2					
ANR	4208446	Identifier	false		4205019	0					
ANR	4208447	CompoundStatement		513:3:14283:14337	4205019	1					
ANR	4208448	IdentifierDeclStatement	int pcbits = core -> anal -> bits ;	2763:3:80759:80788	4205019	0	True				
ANR	4208449	IdentifierDecl	pcbits = core -> anal -> bits		4205019	0					
ANR	4208450	IdentifierDeclType	int		4205019	0					
ANR	4208451	Identifier	pcbits		4205019	1					
ANR	4208452	AssignmentExpression	pcbits = core -> anal -> bits		4205019	2		=			
ANR	4208453	Identifier	pcbits		4205019	0					
ANR	4208454	PtrMemberAccess	core -> anal -> bits		4205019	1					
ANR	4208455	PtrMemberAccess	core -> anal		4205019	0					
ANR	4208456	Identifier	core		4205019	0					
ANR	4208457	Identifier	anal		4205019	1					
ANR	4208458	Identifier	bits		4205019	1					
ANR	4208459	IdentifierDeclStatement	"const char * pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC ) ;"	2764:3:80793:80861	4205019	1	True				
ANR	4208460	IdentifierDecl	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4205019	0					
ANR	4208461	IdentifierDeclType	const char *		4205019	0					
ANR	4208462	Identifier	pcname		4205019	1					
ANR	4208463	AssignmentExpression	"* pcname = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4205019	2		=			
ANR	4208464	Identifier	pcname		4205019	0					
ANR	4208465	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_PC )"		4205019	1					
ANR	4208466	Callee	r_reg_get_name		4205019	0					
ANR	4208467	Identifier	r_reg_get_name		4205019	0					
ANR	4208468	ArgumentList	core -> anal -> reg		4205019	1					
ANR	4208469	Argument	core -> anal -> reg		4205019	0					
ANR	4208470	PtrMemberAccess	core -> anal -> reg		4205019	0					
ANR	4208471	PtrMemberAccess	core -> anal		4205019	0					
ANR	4208472	Identifier	core		4205019	0					
ANR	4208473	Identifier	anal		4205019	1					
ANR	4208474	Identifier	reg		4205019	1					
ANR	4208475	Argument	R_REG_NAME_PC		4205019	1					
ANR	4208476	Identifier	R_REG_NAME_PC		4205019	0					
ANR	4208477	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( core -> anal -> reg , pcname , 0 ) ;"	2765:3:80866:80920	4205019	2	True				
ANR	4208478	IdentifierDecl	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		4205019	0					
ANR	4208479	IdentifierDeclType	RRegItem *		4205019	0					
ANR	4208480	Identifier	reg		4205019	1					
ANR	4208481	AssignmentExpression	"* reg = r_reg_get ( core -> anal -> reg , pcname , 0 )"		4205019	2		=			
ANR	4208482	Identifier	reg		4205019	0					
ANR	4208483	CallExpression	"r_reg_get ( core -> anal -> reg , pcname , 0 )"		4205019	1					
ANR	4208484	Callee	r_reg_get		4205019	0					
ANR	4208485	Identifier	r_reg_get		4205019	0					
ANR	4208486	ArgumentList	core -> anal -> reg		4205019	1					
ANR	4208487	Argument	core -> anal -> reg		4205019	0					
ANR	4208488	PtrMemberAccess	core -> anal -> reg		4205019	0					
ANR	4208489	PtrMemberAccess	core -> anal		4205019	0					
ANR	4208490	Identifier	core		4205019	0					
ANR	4208491	Identifier	anal		4205019	1					
ANR	4208492	Identifier	reg		4205019	1					
ANR	4208493	Argument	pcname		4205019	1					
ANR	4208494	Identifier	pcname		4205019	0					
ANR	4208495	Argument	0		4205019	2					
ANR	4208496	PrimaryExpression	0		4205019	0					
ANR	4208497	IfStatement	if ( reg )		4205019	3					
ANR	4208498	Condition	reg	2766:7:80929:80931	4205019	0	True				
ANR	4208499	Identifier	reg		4205019	0					
ANR	4208500	CompoundStatement		514:12:14351:14351	4205019	1					
ANR	4208501	IfStatement	if ( core -> assembler -> bits != reg -> size )		4205019	0					
ANR	4208502	Condition	core -> assembler -> bits != reg -> size	2767:8:80944:80977	4205019	0	True				
ANR	4208503	EqualityExpression	core -> assembler -> bits != reg -> size		4205019	0		!=			
ANR	4208504	PtrMemberAccess	core -> assembler -> bits		4205019	0					
ANR	4208505	PtrMemberAccess	core -> assembler		4205019	0					
ANR	4208506	Identifier	core		4205019	0					
ANR	4208507	Identifier	assembler		4205019	1					
ANR	4208508	Identifier	bits		4205019	1					
ANR	4208509	PtrMemberAccess	reg -> size		4205019	1					
ANR	4208510	Identifier	reg		4205019	0					
ANR	4208511	Identifier	size		4205019	1					
ANR	4208512	CompoundStatement		515:44:14397:14397	4205019	1					
ANR	4208513	ExpressionStatement	pcbits = reg -> size	2768:5:80987:81005	4205019	0	True				
ANR	4208514	AssignmentExpression	pcbits = reg -> size		4205019	0		=			
ANR	4208515	Identifier	pcbits		4205019	0					
ANR	4208516	PtrMemberAccess	reg -> size		4205019	1					
ANR	4208517	Identifier	reg		4205019	0					
ANR	4208518	Identifier	size		4205019	1					
ANR	4208519	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , str [ 0 ] , use_color )"	2771:3:81021:81092	4205019	4	True				
ANR	4208520	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , pcbits , str [ 0 ] , use_color )"		4205019	0					
ANR	4208521	Callee	r_debug_reg_list		4205019	0					
ANR	4208522	Identifier	r_debug_reg_list		4205019	0					
ANR	4208523	ArgumentList	core -> dbg		4205019	1					
ANR	4208524	Argument	core -> dbg		4205019	0					
ANR	4208525	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208526	Identifier	core		4205019	0					
ANR	4208527	Identifier	dbg		4205019	1					
ANR	4208528	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208529	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208530	Argument	pcbits		4205019	2					
ANR	4208531	Identifier	pcbits		4205019	0					
ANR	4208532	Argument	str [ 0 ]		4205019	3					
ANR	4208533	ArrayIndexing	str [ 0 ]		4205019	0					
ANR	4208534	Identifier	str		4205019	0					
ANR	4208535	PrimaryExpression	0		4205019	1					
ANR	4208536	Argument	use_color		4205019	4					
ANR	4208537	Identifier	use_color		4205019	0					
ANR	4208538	ElseStatement	else		4205019	0					
ANR	4208539	CompoundStatement		520:9:14520:14520	4205019	0					
ANR	4208540	ExpressionStatement	"eprintf ( ""cannot retrieve registers from pid %d\\n"" , core -> dbg -> pid )"	2773:3:81108:81175	4205019	0	True				
ANR	4208541	CallExpression	"eprintf ( ""cannot retrieve registers from pid %d\\n"" , core -> dbg -> pid )"		4205019	0					
ANR	4208542	Callee	eprintf		4205019	0					
ANR	4208543	Identifier	eprintf		4205019	0					
ANR	4208544	ArgumentList	"""cannot retrieve registers from pid %d\\n"""		4205019	1					
ANR	4208545	Argument	"""cannot retrieve registers from pid %d\\n"""		4205019	0					
ANR	4208546	PrimaryExpression	"""cannot retrieve registers from pid %d\\n"""		4205019	0					
ANR	4208547	Argument	core -> dbg -> pid		4205019	1					
ANR	4208548	PtrMemberAccess	core -> dbg -> pid		4205019	0					
ANR	4208549	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208550	Identifier	core		4205019	0					
ANR	4208551	Identifier	dbg		4205019	1					
ANR	4208552	Identifier	pid		4205019	1					
ANR	4208553	BreakStatement	break ;	2775:2:81183:81188	4205019	67	True				
ANR	4208554	Label	case ' ' :	2776:1:81191:81199	4205019	68	True				
ANR	4208555	ExpressionStatement	"arg = strchr ( str + 1 , '=' )"	2777:2:81211:81238	4205019	69	True				
ANR	4208556	AssignmentExpression	"arg = strchr ( str + 1 , '=' )"		4205019	0		=			
ANR	4208557	Identifier	arg		4205019	0					
ANR	4208558	CallExpression	"strchr ( str + 1 , '=' )"		4205019	1					
ANR	4208559	Callee	strchr		4205019	0					
ANR	4208560	Identifier	strchr		4205019	0					
ANR	4208561	ArgumentList	str + 1		4205019	1					
ANR	4208562	Argument	str + 1		4205019	0					
ANR	4208563	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208564	Identifier	str		4205019	0					
ANR	4208565	PrimaryExpression	1		4205019	1					
ANR	4208566	Argument	'='		4205019	1					
ANR	4208567	PrimaryExpression	'='		4205019	0					
ANR	4208568	IfStatement	if ( arg )		4205019	70					
ANR	4208569	Condition	arg	2778:6:81246:81248	4205019	0	True				
ANR	4208570	Identifier	arg		4205019	0					
ANR	4208571	CompoundStatement		529:3:14730:14812	4205019	1					
ANR	4208572	ExpressionStatement	* arg = 0	2779:3:81256:81264	4205019	0	True				
ANR	4208573	AssignmentExpression	* arg = 0		4205019	0		=			
ANR	4208574	UnaryOperationExpression	* arg		4205019	0					
ANR	4208575	UnaryOperator	*		4205019	0					
ANR	4208576	Identifier	arg		4205019	1					
ANR	4208577	PrimaryExpression	0		4205019	1					
ANR	4208578	IdentifierDeclStatement	char * string = r_str_trim_dup ( str + 1 ) ;	2780:3:81269:81308	4205019	1	True				
ANR	4208579	IdentifierDecl	* string = r_str_trim_dup ( str + 1 )		4205019	0					
ANR	4208580	IdentifierDeclType	char *		4205019	0					
ANR	4208581	Identifier	string		4205019	1					
ANR	4208582	AssignmentExpression	* string = r_str_trim_dup ( str + 1 )		4205019	2		=			
ANR	4208583	Identifier	string		4205019	0					
ANR	4208584	CallExpression	r_str_trim_dup ( str + 1 )		4205019	1					
ANR	4208585	Callee	r_str_trim_dup		4205019	0					
ANR	4208586	Identifier	r_str_trim_dup		4205019	0					
ANR	4208587	ArgumentList	str + 1		4205019	1					
ANR	4208588	Argument	str + 1		4205019	0					
ANR	4208589	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208590	Identifier	str		4205019	0					
ANR	4208591	PrimaryExpression	1		4205019	1					
ANR	4208592	IdentifierDeclStatement	"const char * regname = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) ) ;"	2781:3:81313:81395	4205019	2	True				
ANR	4208593	IdentifierDecl	"* regname = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) )"		4205019	0					
ANR	4208594	IdentifierDeclType	const char *		4205019	0					
ANR	4208595	Identifier	regname		4205019	1					
ANR	4208596	AssignmentExpression	"* regname = r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) )"		4205019	2		=			
ANR	4208597	Identifier	regname		4205019	0					
ANR	4208598	CallExpression	"r_reg_get_name ( core -> dbg -> reg , r_reg_get_name_idx ( string ) )"		4205019	1					
ANR	4208599	Callee	r_reg_get_name		4205019	0					
ANR	4208600	Identifier	r_reg_get_name		4205019	0					
ANR	4208601	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4208602	Argument	core -> dbg -> reg		4205019	0					
ANR	4208603	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208604	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208605	Identifier	core		4205019	0					
ANR	4208606	Identifier	dbg		4205019	1					
ANR	4208607	Identifier	reg		4205019	1					
ANR	4208608	Argument	r_reg_get_name_idx ( string )		4205019	1					
ANR	4208609	CallExpression	r_reg_get_name_idx ( string )		4205019	0					
ANR	4208610	Callee	r_reg_get_name_idx		4205019	0					
ANR	4208611	Identifier	r_reg_get_name_idx		4205019	0					
ANR	4208612	ArgumentList	string		4205019	1					
ANR	4208613	Argument	string		4205019	0					
ANR	4208614	Identifier	string		4205019	0					
ANR	4208615	IfStatement	if ( ! regname )		4205019	3					
ANR	4208616	Condition	! regname	2782:7:81404:81411	4205019	0	True				
ANR	4208617	UnaryOperationExpression	! regname		4205019	0					
ANR	4208618	UnaryOperator	!		4205019	0					
ANR	4208619	Identifier	regname		4205019	1					
ANR	4208620	CompoundStatement		530:17:14831:14831	4205019	1					
ANR	4208621	ExpressionStatement	regname = string	2783:4:81420:81436	4205019	0	True				
ANR	4208622	AssignmentExpression	regname = string		4205019	0		=			
ANR	4208623	Identifier	regname		4205019	0					
ANR	4208624	Identifier	string		4205019	1					
ANR	4208625	ExpressionStatement	"r = r_reg_get ( core -> dbg -> reg , regname , - 1 )"	2785:3:81446:81489	4205019	4	True				
ANR	4208626	AssignmentExpression	"r = r_reg_get ( core -> dbg -> reg , regname , - 1 )"		4205019	0		=			
ANR	4208627	Identifier	r		4205019	0					
ANR	4208628	CallExpression	"r_reg_get ( core -> dbg -> reg , regname , - 1 )"		4205019	1					
ANR	4208629	Callee	r_reg_get		4205019	0					
ANR	4208630	Identifier	r_reg_get		4205019	0					
ANR	4208631	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4208632	Argument	core -> dbg -> reg		4205019	0					
ANR	4208633	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208634	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208635	Identifier	core		4205019	0					
ANR	4208636	Identifier	dbg		4205019	1					
ANR	4208637	Identifier	reg		4205019	1					
ANR	4208638	Argument	regname		4205019	1					
ANR	4208639	Identifier	regname		4205019	0					
ANR	4208640	Argument	- 1		4205019	2					
ANR	4208641	UnaryOperationExpression	- 1		4205019	0					
ANR	4208642	UnaryOperator	-		4205019	0					
ANR	4208643	PrimaryExpression	1		4205019	1					
ANR	4208644	IfStatement	if ( r )		4205019	5					
ANR	4208645	Condition	r	2786:7:81517:81517	4205019	0	True				
ANR	4208646	Identifier	r		4205019	0					
ANR	4208647	CompoundStatement		534:10:14937:14937	4205019	1					
ANR	4208648	IfStatement	if ( r -> flags )		4205019	0					
ANR	4208649	Condition	r -> flags	2787:8:81530:81537	4205019	0	True				
ANR	4208650	PtrMemberAccess	r -> flags		4205019	0					
ANR	4208651	Identifier	r		4205019	0					
ANR	4208652	Identifier	flags		4205019	1					
ANR	4208653	CompoundStatement		535:18:14957:14957	4205019	1					
ANR	4208654	Statement	r_cons_printf	2788:5:81547:81559	4205019	0	True				
ANR	4208655	Statement	(	2788:19:81561:81561	4205019	1	True				
ANR	4208656	Statement	"""0x%08"""	2788:20:81562:81568	4205019	2	True				
ANR	4208657	Statement	PFMT64x	2788:27:81569:81575	4205019	3	True				
ANR	4208658	Statement	""" ->"""	2788:34:81576:81580	4205019	4	True				
ANR	4208659	Statement	","	2788:39:81581:81581	4205019	5	True				
ANR	4208660	Statement	r_reg_get_value	2789:7:81590:81604	4205019	6	True				
ANR	4208661	Statement	(	2789:23:81606:81606	4205019	7	True				
ANR	4208662	Statement	core	2789:24:81607:81610	4205019	8	True				
ANR	4208663	Statement	->	2789:28:81611:81612	4205019	9	True				
ANR	4208664	Statement	dbg	2789:30:81613:81615	4205019	10	True				
ANR	4208665	Statement	->	2789:33:81616:81617	4205019	11	True				
ANR	4208666	Statement	reg	2789:35:81618:81620	4205019	12	True				
ANR	4208667	Statement	","	2789:38:81621:81621	4205019	13	True				
ANR	4208668	Statement	r	2789:40:81623:81623	4205019	14	True				
ANR	4208669	Statement	)	2789:41:81624:81624	4205019	15	True				
ANR	4208670	Statement	)	2789:42:81625:81625	4205019	16	True				
ANR	4208671	ExpressionStatement		2789:43:81626:81626	4205019	17	True				
ANR	4208672	ExpressionStatement	"r_reg_set_bvalue ( core -> dbg -> reg , r , arg + 1 )"	2790:5:81633:81676	4205019	18	True				
ANR	4208673	CallExpression	"r_reg_set_bvalue ( core -> dbg -> reg , r , arg + 1 )"		4205019	0					
ANR	4208674	Callee	r_reg_set_bvalue		4205019	0					
ANR	4208675	Identifier	r_reg_set_bvalue		4205019	0					
ANR	4208676	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4208677	Argument	core -> dbg -> reg		4205019	0					
ANR	4208678	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208679	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208680	Identifier	core		4205019	0					
ANR	4208681	Identifier	dbg		4205019	1					
ANR	4208682	Identifier	reg		4205019	1					
ANR	4208683	Argument	r		4205019	1					
ANR	4208684	Identifier	r		4205019	0					
ANR	4208685	Argument	arg + 1		4205019	2					
ANR	4208686	AdditiveExpression	arg + 1		4205019	0		+			
ANR	4208687	Identifier	arg		4205019	0					
ANR	4208688	PrimaryExpression	1		4205019	1					
ANR	4208689	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	2791:5:81683:81733	4205019	19	True				
ANR	4208690	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		4205019	0					
ANR	4208691	Callee	r_debug_reg_sync		4205019	0					
ANR	4208692	Identifier	r_debug_reg_sync		4205019	0					
ANR	4208693	ArgumentList	core -> dbg		4205019	1					
ANR	4208694	Argument	core -> dbg		4205019	0					
ANR	4208695	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208696	Identifier	core		4205019	0					
ANR	4208697	Identifier	dbg		4205019	1					
ANR	4208698	Argument	R_REG_TYPE_ALL		4205019	1					
ANR	4208699	Identifier	R_REG_TYPE_ALL		4205019	0					
ANR	4208700	Argument	true		4205019	2					
ANR	4208701	Identifier	true		4205019	0					
ANR	4208702	Statement	r_cons_printf	2792:5:81740:81752	4205019	20	True				
ANR	4208703	Statement	(	2792:19:81754:81754	4205019	21	True				
ANR	4208704	Statement	"""0x%08"""	2792:20:81755:81761	4205019	22	True				
ANR	4208705	Statement	PFMT64x	2792:27:81762:81768	4205019	23	True				
ANR	4208706	Statement	"""\\n"""	2792:34:81769:81772	4205019	24	True				
ANR	4208707	Statement	","	2792:38:81773:81773	4205019	25	True				
ANR	4208708	Statement	r_reg_get_value	2793:7:81782:81796	4205019	26	True				
ANR	4208709	Statement	(	2793:23:81798:81798	4205019	27	True				
ANR	4208710	Statement	core	2793:24:81799:81802	4205019	28	True				
ANR	4208711	Statement	->	2793:28:81803:81804	4205019	29	True				
ANR	4208712	Statement	dbg	2793:30:81805:81807	4205019	30	True				
ANR	4208713	Statement	->	2793:33:81808:81809	4205019	31	True				
ANR	4208714	Statement	reg	2793:35:81810:81812	4205019	32	True				
ANR	4208715	Statement	","	2793:38:81813:81813	4205019	33	True				
ANR	4208716	Statement	r	2793:40:81815:81815	4205019	34	True				
ANR	4208717	Statement	)	2793:41:81816:81816	4205019	35	True				
ANR	4208718	Statement	)	2793:42:81817:81817	4205019	36	True				
ANR	4208719	ExpressionStatement		2793:43:81818:81818	4205019	37	True				
ANR	4208720	ElseStatement	else		4205019	0					
ANR	4208721	CompoundStatement		542:11:15248:15248	4205019	0					
ANR	4208722	Statement	r_cons_printf	2795:5:81838:81850	4205019	0	True				
ANR	4208723	Statement	(	2795:19:81852:81852	4205019	1	True				
ANR	4208724	Statement	"""0x%08"""	2795:20:81853:81859	4205019	2	True				
ANR	4208725	Statement	PFMT64x	2795:27:81860:81866	4205019	3	True				
ANR	4208726	Statement	""" ->"""	2795:34:81867:81871	4205019	4	True				
ANR	4208727	Statement	","	2795:39:81872:81872	4205019	5	True				
ANR	4208728	Statement	r_reg_get_value	2796:7:81881:81895	4205019	6	True				
ANR	4208729	Statement	(	2796:23:81897:81897	4205019	7	True				
ANR	4208730	Statement	core	2796:24:81898:81901	4205019	8	True				
ANR	4208731	Statement	->	2796:28:81902:81903	4205019	9	True				
ANR	4208732	Statement	dbg	2796:30:81904:81906	4205019	10	True				
ANR	4208733	Statement	->	2796:33:81907:81908	4205019	11	True				
ANR	4208734	Statement	reg	2796:35:81909:81911	4205019	12	True				
ANR	4208735	Statement	","	2796:38:81912:81912	4205019	13	True				
ANR	4208736	Statement	r	2796:40:81914:81914	4205019	14	True				
ANR	4208737	Statement	)	2796:41:81915:81915	4205019	15	True				
ANR	4208738	Statement	)	2796:42:81916:81916	4205019	16	True				
ANR	4208739	ExpressionStatement		2796:43:81917:81917	4205019	17	True				
ANR	4208740	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , r_num_math ( core -> num , arg + 1 ) )"	2797:5:81924:81997	4205019	18	True				
ANR	4208741	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , r_num_math ( core -> num , arg + 1 ) )"		4205019	0					
ANR	4208742	Callee	r_reg_set_value		4205019	0					
ANR	4208743	Identifier	r_reg_set_value		4205019	0					
ANR	4208744	ArgumentList	core -> dbg -> reg		4205019	1					
ANR	4208745	Argument	core -> dbg -> reg		4205019	0					
ANR	4208746	PtrMemberAccess	core -> dbg -> reg		4205019	0					
ANR	4208747	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208748	Identifier	core		4205019	0					
ANR	4208749	Identifier	dbg		4205019	1					
ANR	4208750	Identifier	reg		4205019	1					
ANR	4208751	Argument	r		4205019	1					
ANR	4208752	Identifier	r		4205019	0					
ANR	4208753	Argument	"r_num_math ( core -> num , arg + 1 )"		4205019	2					
ANR	4208754	CallExpression	"r_num_math ( core -> num , arg + 1 )"		4205019	0					
ANR	4208755	Callee	r_num_math		4205019	0					
ANR	4208756	Identifier	r_num_math		4205019	0					
ANR	4208757	ArgumentList	core -> num		4205019	1					
ANR	4208758	Argument	core -> num		4205019	0					
ANR	4208759	PtrMemberAccess	core -> num		4205019	0					
ANR	4208760	Identifier	core		4205019	0					
ANR	4208761	Identifier	num		4205019	1					
ANR	4208762	Argument	arg + 1		4205019	1					
ANR	4208763	AdditiveExpression	arg + 1		4205019	0		+			
ANR	4208764	Identifier	arg		4205019	0					
ANR	4208765	PrimaryExpression	1		4205019	1					
ANR	4208766	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"	2799:5:82004:82054	4205019	19	True				
ANR	4208767	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_ALL , true )"		4205019	0					
ANR	4208768	Callee	r_debug_reg_sync		4205019	0					
ANR	4208769	Identifier	r_debug_reg_sync		4205019	0					
ANR	4208770	ArgumentList	core -> dbg		4205019	1					
ANR	4208771	Argument	core -> dbg		4205019	0					
ANR	4208772	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208773	Identifier	core		4205019	0					
ANR	4208774	Identifier	dbg		4205019	1					
ANR	4208775	Argument	R_REG_TYPE_ALL		4205019	1					
ANR	4208776	Identifier	R_REG_TYPE_ALL		4205019	0					
ANR	4208777	Argument	true		4205019	2					
ANR	4208778	Identifier	true		4205019	0					
ANR	4208779	Statement	r_cons_printf	2800:5:82061:82073	4205019	20	True				
ANR	4208780	Statement	(	2800:19:82075:82075	4205019	21	True				
ANR	4208781	Statement	"""0x%08"""	2800:20:82076:82082	4205019	22	True				
ANR	4208782	Statement	PFMT64x	2800:27:82083:82089	4205019	23	True				
ANR	4208783	Statement	"""\\n"""	2800:34:82090:82093	4205019	24	True				
ANR	4208784	Statement	","	2800:38:82094:82094	4205019	25	True				
ANR	4208785	Statement	r_reg_get_value	2801:7:82103:82117	4205019	26	True				
ANR	4208786	Statement	(	2801:23:82119:82119	4205019	27	True				
ANR	4208787	Statement	core	2801:24:82120:82123	4205019	28	True				
ANR	4208788	Statement	->	2801:28:82124:82125	4205019	29	True				
ANR	4208789	Statement	dbg	2801:30:82126:82128	4205019	30	True				
ANR	4208790	Statement	->	2801:33:82129:82130	4205019	31	True				
ANR	4208791	Statement	reg	2801:35:82131:82133	4205019	32	True				
ANR	4208792	Statement	","	2801:38:82134:82134	4205019	33	True				
ANR	4208793	Statement	r	2801:40:82136:82136	4205019	34	True				
ANR	4208794	Statement	)	2801:41:82137:82137	4205019	35	True				
ANR	4208795	Statement	)	2801:42:82138:82138	4205019	36	True				
ANR	4208796	ExpressionStatement		2801:43:82139:82139	4205019	37	True				
ANR	4208797	ElseStatement	else		4205019	0					
ANR	4208798	CompoundStatement		551:10:15574:15574	4205019	0					
ANR	4208799	ExpressionStatement	"eprintf ( ""unknown register '%s'\\n"" , string )"	2804:4:82163:82206	4205019	0	True				
ANR	4208800	CallExpression	"eprintf ( ""unknown register '%s'\\n"" , string )"		4205019	0					
ANR	4208801	Callee	eprintf		4205019	0					
ANR	4208802	Identifier	eprintf		4205019	0					
ANR	4208803	ArgumentList	"""unknown register '%s'\\n"""		4205019	1					
ANR	4208804	Argument	"""unknown register '%s'\\n"""		4205019	0					
ANR	4208805	PrimaryExpression	"""unknown register '%s'\\n"""		4205019	0					
ANR	4208806	Argument	string		4205019	1					
ANR	4208807	Identifier	string		4205019	0					
ANR	4208808	ExpressionStatement	free ( string )	2806:3:82216:82229	4205019	6	True				
ANR	4208809	CallExpression	free ( string )		4205019	0					
ANR	4208810	Callee	free		4205019	0					
ANR	4208811	Identifier	free		4205019	0					
ANR	4208812	ArgumentList	string		4205019	1					
ANR	4208813	Argument	string		4205019	0					
ANR	4208814	Identifier	string		4205019	0					
ANR	4208815	ExpressionStatement	"r_core_cmdf ( core , "".dr*%d"" , bits )"	2808:3:82258:82292	4205019	7	True				
ANR	4208816	CallExpression	"r_core_cmdf ( core , "".dr*%d"" , bits )"		4205019	0					
ANR	4208817	Callee	r_core_cmdf		4205019	0					
ANR	4208818	Identifier	r_core_cmdf		4205019	0					
ANR	4208819	ArgumentList	core		4205019	1					
ANR	4208820	Argument	core		4205019	0					
ANR	4208821	Identifier	core		4205019	0					
ANR	4208822	Argument	""".dr*%d"""		4205019	1					
ANR	4208823	PrimaryExpression	""".dr*%d"""		4205019	0					
ANR	4208824	Argument	bits		4205019	2					
ANR	4208825	Identifier	bits		4205019	0					
ANR	4208826	ReturnStatement	return ;	2809:3:82297:82303	4205019	8	True				
ANR	4208827	ExpressionStatement	size = atoi ( str + 1 )	2812:2:82312:82333	4205019	71	True				
ANR	4208828	AssignmentExpression	size = atoi ( str + 1 )		4205019	0		=			
ANR	4208829	Identifier	size		4205019	0					
ANR	4208830	CallExpression	atoi ( str + 1 )		4205019	1					
ANR	4208831	Callee	atoi		4205019	0					
ANR	4208832	Identifier	atoi		4205019	0					
ANR	4208833	ArgumentList	str + 1		4205019	1					
ANR	4208834	Argument	str + 1		4205019	0					
ANR	4208835	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208836	Identifier	str		4205019	0					
ANR	4208837	PrimaryExpression	1		4205019	1					
ANR	4208838	IfStatement	if ( size )		4205019	72					
ANR	4208839	Condition	size	2813:6:82341:82344	4205019	0	True				
ANR	4208840	Identifier	size		4205019	0					
ANR	4208841	CompoundStatement		561:12:15764:15764	4205019	1					
ANR	4208842	ExpressionStatement	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , size , str [ 0 ] , use_color )"	2814:3:82352:82421	4205019	0	True				
ANR	4208843	CallExpression	"r_debug_reg_list ( core -> dbg , R_REG_TYPE_GPR , size , str [ 0 ] , use_color )"		4205019	0					
ANR	4208844	Callee	r_debug_reg_list		4205019	0					
ANR	4208845	Identifier	r_debug_reg_list		4205019	0					
ANR	4208846	ArgumentList	core -> dbg		4205019	1					
ANR	4208847	Argument	core -> dbg		4205019	0					
ANR	4208848	PtrMemberAccess	core -> dbg		4205019	0					
ANR	4208849	Identifier	core		4205019	0					
ANR	4208850	Identifier	dbg		4205019	1					
ANR	4208851	Argument	R_REG_TYPE_GPR		4205019	1					
ANR	4208852	Identifier	R_REG_TYPE_GPR		4205019	0					
ANR	4208853	Argument	size		4205019	2					
ANR	4208854	Identifier	size		4205019	0					
ANR	4208855	Argument	str [ 0 ]		4205019	3					
ANR	4208856	ArrayIndexing	str [ 0 ]		4205019	0					
ANR	4208857	Identifier	str		4205019	0					
ANR	4208858	PrimaryExpression	0		4205019	1					
ANR	4208859	Argument	use_color		4205019	4					
ANR	4208860	Identifier	use_color		4205019	0					
ANR	4208861	ElseStatement	else		4205019	0					
ANR	4208862	CompoundStatement		564:3:15854:15889	4205019	0					
ANR	4208863	IdentifierDeclStatement	"char * comma = strchr ( str + 1 , ',' ) ;"	2816:3:82437:82472	4205019	0	True				
ANR	4208864	IdentifierDecl	"* comma = strchr ( str + 1 , ',' )"		4205019	0					
ANR	4208865	IdentifierDeclType	char *		4205019	0					
ANR	4208866	Identifier	comma		4205019	1					
ANR	4208867	AssignmentExpression	"* comma = strchr ( str + 1 , ',' )"		4205019	2		=			
ANR	4208868	Identifier	comma		4205019	0					
ANR	4208869	CallExpression	"strchr ( str + 1 , ',' )"		4205019	1					
ANR	4208870	Callee	strchr		4205019	0					
ANR	4208871	Identifier	strchr		4205019	0					
ANR	4208872	ArgumentList	str + 1		4205019	1					
ANR	4208873	Argument	str + 1		4205019	0					
ANR	4208874	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208875	Identifier	str		4205019	0					
ANR	4208876	PrimaryExpression	1		4205019	1					
ANR	4208877	Argument	"','"		4205019	1					
ANR	4208878	PrimaryExpression	"','"		4205019	0					
ANR	4208879	IfStatement	if ( comma )		4205019	1					
ANR	4208880	Condition	comma	2817:7:82481:82485	4205019	0	True				
ANR	4208881	Identifier	comma		4205019	0					
ANR	4208882	CompoundStatement		567:4:15946:15981	4205019	1					
ANR	4208883	IdentifierDeclStatement	char * args = strdup ( str + 1 ) ;	2818:4:82494:82523	4205019	0	True				
ANR	4208884	IdentifierDecl	* args = strdup ( str + 1 )		4205019	0					
ANR	4208885	IdentifierDeclType	char *		4205019	0					
ANR	4208886	Identifier	args		4205019	1					
ANR	4208887	AssignmentExpression	* args = strdup ( str + 1 )		4205019	2		=			
ANR	4208888	Identifier	args		4205019	0					
ANR	4208889	CallExpression	strdup ( str + 1 )		4205019	1					
ANR	4208890	Callee	strdup		4205019	0					
ANR	4208891	Identifier	strdup		4205019	0					
ANR	4208892	ArgumentList	str + 1		4205019	1					
ANR	4208893	Argument	str + 1		4205019	0					
ANR	4208894	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208895	Identifier	str		4205019	0					
ANR	4208896	PrimaryExpression	1		4205019	1					
ANR	4208897	IdentifierDeclStatement	"char argc = r_str_split ( args , ',' ) ;"	2819:4:82529:82564	4205019	1	True				
ANR	4208898	IdentifierDecl	"argc = r_str_split ( args , ',' )"		4205019	0					
ANR	4208899	IdentifierDeclType	char		4205019	0					
ANR	4208900	Identifier	argc		4205019	1					
ANR	4208901	AssignmentExpression	"argc = r_str_split ( args , ',' )"		4205019	2		=			
ANR	4208902	Identifier	argc		4205019	0					
ANR	4208903	CallExpression	"r_str_split ( args , ',' )"		4205019	1					
ANR	4208904	Callee	r_str_split		4205019	0					
ANR	4208905	Identifier	r_str_split		4205019	0					
ANR	4208906	ArgumentList	args		4205019	1					
ANR	4208907	Argument	args		4205019	0					
ANR	4208908	Identifier	args		4205019	0					
ANR	4208909	Argument	"','"		4205019	1					
ANR	4208910	PrimaryExpression	"','"		4205019	0					
ANR	4208911	ForStatement	for ( i = 0 ; i < argc ; i ++ )		4205019	2					
ANR	4208912	ForInit	i = 0 ;	2820:9:82575:82580	4205019	0	True				
ANR	4208913	AssignmentExpression	i = 0		4205019	0		=			
ANR	4208914	Identifier	i		4205019	0					
ANR	4208915	PrimaryExpression	0		4205019	1					
ANR	4208916	Condition	i < argc	2820:16:82582:82589	4205019	1	True				
ANR	4208917	RelationalExpression	i < argc		4205019	0		<			
ANR	4208918	Identifier	i		4205019	0					
ANR	4208919	Identifier	argc		4205019	1					
ANR	4208920	PostIncDecOperationExpression	i ++	2820:26:82592:82594	4205019	2	True				
ANR	4208921	Identifier	i		4205019	0					
ANR	4208922	IncDec	++		4205019	1					
ANR	4208923	CompoundStatement		568:31:16014:16014	4205019	3					
ANR	4208924	ExpressionStatement	"showreg ( core , r_str_word_get0 ( args , i ) )"	2821:5:82604:82645	4205019	0	True				
ANR	4208925	CallExpression	"showreg ( core , r_str_word_get0 ( args , i ) )"		4205019	0					
ANR	4208926	Callee	showreg		4205019	0					
ANR	4208927	Identifier	showreg		4205019	0					
ANR	4208928	ArgumentList	core		4205019	1					
ANR	4208929	Argument	core		4205019	0					
ANR	4208930	Identifier	core		4205019	0					
ANR	4208931	Argument	"r_str_word_get0 ( args , i )"		4205019	1					
ANR	4208932	CallExpression	"r_str_word_get0 ( args , i )"		4205019	0					
ANR	4208933	Callee	r_str_word_get0		4205019	0					
ANR	4208934	Identifier	r_str_word_get0		4205019	0					
ANR	4208935	ArgumentList	args		4205019	1					
ANR	4208936	Argument	args		4205019	0					
ANR	4208937	Identifier	args		4205019	0					
ANR	4208938	Argument	i		4205019	1					
ANR	4208939	Identifier	i		4205019	0					
ANR	4208940	ExpressionStatement	free ( args )	2823:4:82657:82668	4205019	3	True				
ANR	4208941	CallExpression	free ( args )		4205019	0					
ANR	4208942	Callee	free		4205019	0					
ANR	4208943	Identifier	free		4205019	0					
ANR	4208944	ArgumentList	args		4205019	1					
ANR	4208945	Argument	args		4205019	0					
ANR	4208946	Identifier	args		4205019	0					
ANR	4208947	ElseStatement	else		4205019	0					
ANR	4208948	CompoundStatement		572:10:16097:16097	4205019	0					
ANR	4208949	ExpressionStatement	"showreg ( core , str + 1 )"	2825:4:82686:82709	4205019	0	True				
ANR	4208950	CallExpression	"showreg ( core , str + 1 )"		4205019	0					
ANR	4208951	Callee	showreg		4205019	0					
ANR	4208952	Identifier	showreg		4205019	0					
ANR	4208953	ArgumentList	core		4205019	1					
ANR	4208954	Argument	core		4205019	0					
ANR	4208955	Identifier	core		4205019	0					
ANR	4208956	Argument	str + 1		4205019	1					
ANR	4208957	AdditiveExpression	str + 1		4205019	0		+			
ANR	4208958	Identifier	str		4205019	0					
ANR	4208959	PrimaryExpression	1		4205019	1					
ANR	4208960	ReturnType	static void		4205019	1					
ANR	4208961	Identifier	cmd_debug_reg		4205019	2					
ANR	4208962	ParameterList	"RCore * core , const char * str"		4205019	3					
ANR	4208963	Parameter	RCore * core	2253:26:66552:66562	4205019	0	True				
ANR	4208964	ParameterType	RCore *		4205019	0					
ANR	4208965	Identifier	core		4205019	1					
ANR	4208966	Parameter	const char * str	2253:39:66565:66579	4205019	1	True				
ANR	4208967	ParameterType	const char *		4205019	0					
ANR	4208968	Identifier	str		4205019	1					
ANR	4208969	CFGEntryNode	ENTRY		4205019		True				
ANR	4208970	CFGExitNode	EXIT		4205019		True				
ANR	4208971	Symbol	R_REG_NAME_PC		4205019						
ANR	4208972	Symbol	r_debug_reg_get		4205019						
ANR	4208973	Symbol	* q ++		4205019						
ANR	4208974	Symbol	r_reg_get_type		4205019						
ANR	4208975	Symbol	strchr		4205019						
ANR	4208976	Symbol	R_REG_TYPE_MMX		4205019						
ANR	4208977	Symbol	type		4205019						
ANR	4208978	Symbol	r_reg_regset_get		4205019						
ANR	4208979	Symbol	r_str_word_set0		4205019						
ANR	4208980	Symbol	* core -> assembler		4205019						
ANR	4208981	Symbol	help_msg_drx		4205019						
ANR	4208982	Symbol	dval		4205019						
ANR	4208983	Symbol	len		4205019						
ANR	4208984	Symbol	rad		4205019						
ANR	4208985	Symbol	help_msg_drt		4205019						
ANR	4208986	Symbol	help_msg_drs		4205019						
ANR	4208987	Symbol	* core -> num		4205019						
ANR	4208988	Symbol	id		4205019						
ANR	4208989	Symbol	R_REG_TYPE_FPU		4205019						
ANR	4208990	Symbol	val		4205019						
ANR	4208991	Symbol	r_reg_get_pack		4205019						
ANR	4208992	Symbol	item		4205019						
ANR	4208993	Symbol	r_str_rwx		4205019						
ANR	4208994	Symbol	bits		4205019						
ANR	4208995	Symbol	iter		4205019						
ANR	4208996	Symbol	str		4205019						
ANR	4208997	Symbol	* * * core		4205019						
ANR	4208998	Symbol	size		4205019						
ANR	4208999	Symbol	rf		4205019						
ANR	4209000	Symbol	r -> name		4205019						
ANR	4209001	Symbol	r_config_get_i		4205019						
ANR	4209002	Symbol	r_str_trim_ro		4205019						
ANR	4209003	Symbol	json_out		4205019						
ANR	4209004	Symbol	reg -> size		4205019						
ANR	4209005	Symbol	pcname		4205019						
ANR	4209006	Symbol	& len		4205019						
ANR	4209007	Symbol	* core -> dbg		4205019						
ANR	4209008	Symbol	word		4205019						
ANR	4209009	Symbol	& dval		4205019						
ANR	4209010	Symbol	* arg		4205019						
ANR	4209011	Symbol	rf -> p		4205019						
ANR	4209012	Symbol	rs		4205019						
ANR	4209013	Symbol	rf -> o		4205019						
ANR	4209014	Symbol	r_debug_reg_sync		4205019						
ANR	4209015	Symbol	r -> flags		4205019						
ANR	4209016	Symbol	role		4205019						
ANR	4209017	Symbol	r_reg_cond_get		4205019						
ANR	4209018	Symbol	* core		4205019						
ANR	4209019	Symbol	core -> assembler -> bits		4205019						
ANR	4209020	Symbol	* string		4205019						
ANR	4209021	Symbol	core -> assembler		4205019						
ANR	4209022	Symbol	R_REG_COND_LAST		4205019						
ANR	4209023	Symbol	rf -> c		4205019						
ANR	4209024	Symbol	core -> anal		4205019						
ANR	4209025	Symbol	r_reg_cond_from_string		4205019						
ANR	4209026	Symbol	& pcbits2		4205019						
ANR	4209027	Symbol	core -> dbg -> reg -> reg_profile_cmt		4205019						
ANR	4209028	Symbol	R_REG_TYPE_ALL		4205019						
ANR	4209029	Symbol	arg		4205019						
ANR	4209030	Symbol	core -> dbg -> bits		4205019						
ANR	4209031	Symbol	sl		4205019						
ANR	4209032	Symbol	core -> dbg -> reg -> regset		4205019						
ANR	4209033	Symbol	rf -> z		4205019						
ANR	4209034	Symbol	* str		4205019						
ANR	4209035	Symbol	rf -> s		4205019						
ANR	4209036	Symbol	R_REG_TYPE_GPR		4205019						
ANR	4209037	Symbol	R_REG_TYPE_DRX		4205019						
ANR	4209038	Symbol	atoi		4205019						
ANR	4209039	Symbol	* name		4205019						
ANR	4209040	Symbol	a		4205019						
ANR	4209041	Symbol	core -> anal -> bits		4205019						
ANR	4209042	Symbol	i		4205019						
ANR	4209043	Symbol	r_reg_get_bytes		4205019						
ANR	4209044	Symbol	core -> flags		4205019						
ANR	4209045	Symbol	r_str_word_get0		4205019						
ANR	4209046	Symbol	k		4205019						
ANR	4209047	Symbol	off		4205019						
ANR	4209048	Symbol	n		4205019						
ANR	4209049	Symbol	o		4205019						
ANR	4209050	Symbol	p		4205019						
ANR	4209051	Symbol	q		4205019						
ANR	4209052	Symbol	r		4205019						
ANR	4209053	Symbol	buf		4205019						
ANR	4209054	Symbol	comma		4205019						
ANR	4209055	Symbol	s		4205019						
ANR	4209056	Symbol	* core -> anal		4205019						
ANR	4209057	Symbol	orig		4205019						
ANR	4209058	Symbol	core -> dbg -> reg		4205019						
ANR	4209059	Symbol	v		4205019						
ANR	4209060	Symbol	core -> dbg -> pid		4205019						
ANR	4209061	Symbol	r_list_length		4205019						
ANR	4209062	Symbol	core -> anal -> reg		4205019						
ANR	4209063	Symbol	r_core_cmd_str		4205019						
ANR	4209064	Symbol	core -> num -> value		4205019						
ANR	4209065	Symbol	r_str_trim_dup		4205019						
ANR	4209066	Symbol	* core -> dbg -> reg -> regset		4205019						
ANR	4209067	Symbol	* * core -> dbg -> reg		4205019						
ANR	4209068	Symbol	* arg ++		4205019						
ANR	4209069	Symbol	* core -> dbg -> reg		4205019						
ANR	4209070	Symbol	reg		4205019						
ANR	4209071	Symbol	pcbits2		4205019						
ANR	4209072	Symbol	r_reg_cond_retrieve		4205019						
ANR	4209073	Symbol	core -> num		4205019						
ANR	4209074	Symbol	R_SYS_BITS_64		4205019						
ANR	4209075	Symbol	r_reg_get		4205019						
ANR	4209076	Symbol	all		4205019						
ANR	4209077	Symbol	strcmp		4205019						
ANR	4209078	Symbol	res		4205019						
ANR	4209079	Symbol	regname		4205019						
ANR	4209080	Symbol	NULL		4205019						
ANR	4209081	Symbol	newbits		4205019						
ANR	4209082	Symbol	count		4205019						
ANR	4209083	Symbol	R_REG_TYPE_LAST		4205019						
ANR	4209084	Symbol	eq		4205019						
ANR	4209085	Symbol	use_color		4205019						
ANR	4209086	Symbol	core -> dbg -> reg -> regset [ 0 ] . pool		4205019						
ANR	4209087	Symbol	core		4205019						
ANR	4209088	Symbol	r_reg_get_name_idx		4205019						
ANR	4209089	Symbol	r_reg_get_name		4205019						
ANR	4209090	Symbol	grab_bits		4205019						
ANR	4209091	Symbol	name		4205019						
ANR	4209092	Symbol	true		4205019						
ANR	4209093	Symbol	pcbits		4205019						
ANR	4209094	Symbol	core -> print		4205019						
ANR	4209095	Symbol	r_reg_cond_to_string		4205019						
ANR	4209096	Symbol	r_reg_cond_bits		4205019						
ANR	4209097	Symbol	string		4205019						
ANR	4209098	Symbol	perm		4205019						
ANR	4209099	Symbol	foo		4205019						
ANR	4209100	Symbol	r_str_split_list		4205019						
ANR	4209101	Symbol	r_num_math		4205019						
ANR	4209102	Symbol	r_reg_type_by_name		4205019						
ANR	4209103	Symbol	* * * core -> dbg		4205019						
ANR	4209104	Symbol	r_str_replace		4205019						
ANR	4209105	Symbol	* * * * core		4205019						
ANR	4209106	Symbol	* * core		4205019						
ANR	4209107	Symbol	core -> config		4205019						
ANR	4209108	Symbol	argc		4205019						
ANR	4209109	Symbol	* p ++		4205019						
ANR	4209110	Symbol	false		4205019						
ANR	4209111	Symbol	args		4205019						
ANR	4209112	Symbol	help_msg_dr		4205019						
ANR	4209113	Symbol	r_str_split		4205019						
ANR	4209114	Symbol	r_reg_get_double		4205019						
ANR	4209115	Symbol	* rf		4205019						
ANR	4209116	Symbol	use_colors		4205019						
ANR	4209117	Symbol	strdup		4205019						
ANR	4209118	Symbol	* r		4205019						
ANR	4209119	Symbol	* eq ++		4205019						
ANR	4209120	Symbol	* reg		4205019						
ANR	4209121	Symbol	core -> dbg		4205019						
ANR	4209122	Symbol	* * core -> dbg		4205019						
ANR	4209123	Function	validAddress	2831:0:82726:83177							
ANR	4209124	FunctionDef	"validAddress (RCore * core , ut64 addr)"		4209123	0					
ANR	4209125	CompoundStatement		2831:48:82774:83177	4209123	0					
ANR	4209126	IdentifierDeclStatement	RDebugMap * map ;	2832:1:82777:82791	4209123	0	True				
ANR	4209127	IdentifierDecl	* map		4209123	0					
ANR	4209128	IdentifierDeclType	RDebugMap *		4209123	0					
ANR	4209129	Identifier	map		4209123	1					
ANR	4209130	IdentifierDeclStatement	RListIter * iter ;	2833:1:82794:82809	4209123	1	True				
ANR	4209131	IdentifierDecl	* iter		4209123	0					
ANR	4209132	IdentifierDeclType	RListIter *		4209123	0					
ANR	4209133	Identifier	iter		4209123	1					
ANR	4209134	IfStatement	"if ( ! r_config_get_i ( core -> config , ""dbg.bpinmaps"" ) )"		4209123	2					
ANR	4209135	Condition	"! r_config_get_i ( core -> config , ""dbg.bpinmaps"" )"	2834:5:82816:82861	4209123	0	True				
ANR	4209136	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""dbg.bpinmaps"" )"		4209123	0					
ANR	4209137	UnaryOperator	!		4209123	0					
ANR	4209138	CallExpression	"r_config_get_i ( core -> config , ""dbg.bpinmaps"" )"		4209123	1					
ANR	4209139	Callee	r_config_get_i		4209123	0					
ANR	4209140	Identifier	r_config_get_i		4209123	0					
ANR	4209141	ArgumentList	core -> config		4209123	1					
ANR	4209142	Argument	core -> config		4209123	0					
ANR	4209143	PtrMemberAccess	core -> config		4209123	0					
ANR	4209144	Identifier	core		4209123	0					
ANR	4209145	Identifier	config		4209123	1					
ANR	4209146	Argument	"""dbg.bpinmaps"""		4209123	1					
ANR	4209147	PrimaryExpression	"""dbg.bpinmaps"""		4209123	0					
ANR	4209148	CompoundStatement		4:53:89:89	4209123	1					
ANR	4209149	ReturnStatement	return core -> num -> value = 1 ;	2835:2:82868:82895	4209123	0	True				
ANR	4209150	AssignmentExpression	core -> num -> value = 1		4209123	0		=			
ANR	4209151	PtrMemberAccess	core -> num -> value		4209123	0					
ANR	4209152	PtrMemberAccess	core -> num		4209123	0					
ANR	4209153	Identifier	core		4209123	0					
ANR	4209154	Identifier	num		4209123	1					
ANR	4209155	Identifier	value		4209123	1					
ANR	4209156	PrimaryExpression	1		4209123	1					
ANR	4209157	ExpressionStatement	r_debug_map_sync ( core -> dbg )	2837:1:82901:82929	4209123	3	True				
ANR	4209158	CallExpression	r_debug_map_sync ( core -> dbg )		4209123	0					
ANR	4209159	Callee	r_debug_map_sync		4209123	0					
ANR	4209160	Identifier	r_debug_map_sync		4209123	0					
ANR	4209161	ArgumentList	core -> dbg		4209123	1					
ANR	4209162	Argument	core -> dbg		4209123	0					
ANR	4209163	PtrMemberAccess	core -> dbg		4209123	0					
ANR	4209164	Identifier	core		4209123	0					
ANR	4209165	Identifier	dbg		4209123	1					
ANR	4209166	Statement	r_list_foreach	2838:1:82932:82945	4209123	4	True				
ANR	4209167	Statement	(	2838:16:82947:82947	4209123	5	True				
ANR	4209168	Statement	core	2838:17:82948:82951	4209123	6	True				
ANR	4209169	Statement	->	2838:21:82952:82953	4209123	7	True				
ANR	4209170	Statement	dbg	2838:23:82954:82956	4209123	8	True				
ANR	4209171	Statement	->	2838:26:82957:82958	4209123	9	True				
ANR	4209172	Statement	maps	2838:28:82959:82962	4209123	10	True				
ANR	4209173	Statement	","	2838:32:82963:82963	4209123	11	True				
ANR	4209174	Statement	iter	2838:34:82965:82968	4209123	12	True				
ANR	4209175	Statement	","	2838:38:82969:82969	4209123	13	True				
ANR	4209176	Statement	map	2838:40:82971:82973	4209123	14	True				
ANR	4209177	Statement	)	2838:43:82974:82974	4209123	15	True				
ANR	4209178	CompoundStatement		8:45:201:201	4209123	16					
ANR	4209179	IfStatement	if ( addr >= map -> addr && addr < map -> addr_end )		4209123	0					
ANR	4209180	Condition	addr >= map -> addr && addr < map -> addr_end	2839:6:82984:83024	4209123	0	True				
ANR	4209181	AndExpression	addr >= map -> addr && addr < map -> addr_end		4209123	0		&&			
ANR	4209182	RelationalExpression	addr >= map -> addr		4209123	0		>=			
ANR	4209183	Identifier	addr		4209123	0					
ANR	4209184	PtrMemberAccess	map -> addr		4209123	1					
ANR	4209185	Identifier	map		4209123	0					
ANR	4209186	Identifier	addr		4209123	1					
ANR	4209187	RelationalExpression	addr < map -> addr_end		4209123	1		<			
ANR	4209188	Identifier	addr		4209123	0					
ANR	4209189	PtrMemberAccess	map -> addr_end		4209123	1					
ANR	4209190	Identifier	map		4209123	0					
ANR	4209191	Identifier	addr_end		4209123	1					
ANR	4209192	CompoundStatement		9:49:252:252	4209123	1					
ANR	4209193	ReturnStatement	return core -> num -> value = 1 ;	2840:3:83032:83059	4209123	0	True				
ANR	4209194	AssignmentExpression	core -> num -> value = 1		4209123	0		=			
ANR	4209195	PtrMemberAccess	core -> num -> value		4209123	0					
ANR	4209196	PtrMemberAccess	core -> num		4209123	0					
ANR	4209197	Identifier	core		4209123	0					
ANR	4209198	Identifier	num		4209123	1					
ANR	4209199	Identifier	value		4209123	1					
ANR	4209200	PrimaryExpression	1		4209123	1					
ANR	4209201	ReturnStatement	return core -> num -> value = 0 ;	2845:1:83148:83175	4209123	17	True				
ANR	4209202	AssignmentExpression	core -> num -> value = 0		4209123	0		=			
ANR	4209203	PtrMemberAccess	core -> num -> value		4209123	0					
ANR	4209204	PtrMemberAccess	core -> num		4209123	0					
ANR	4209205	Identifier	core		4209123	0					
ANR	4209206	Identifier	num		4209123	1					
ANR	4209207	Identifier	value		4209123	1					
ANR	4209208	PrimaryExpression	0		4209123	1					
ANR	4209209	ReturnType	static int		4209123	1					
ANR	4209210	Identifier	validAddress		4209123	2					
ANR	4209211	ParameterList	"RCore * core , ut64 addr"		4209123	3					
ANR	4209212	Parameter	RCore * core	2831:24:82750:82760	4209123	0	True				
ANR	4209213	ParameterType	RCore *		4209123	0					
ANR	4209214	Identifier	core		4209123	1					
ANR	4209215	Parameter	ut64 addr	2831:37:82763:82771	4209123	1	True				
ANR	4209216	ParameterType	ut64		4209123	0					
ANR	4209217	Identifier	addr		4209123	1					
ANR	4209218	CFGEntryNode	ENTRY		4209123		True				
ANR	4209219	CFGExitNode	EXIT		4209123		True				
ANR	4209220	Symbol	core -> config		4209123						
ANR	4209221	Symbol	map -> addr		4209123						
ANR	4209222	Symbol	* map		4209123						
ANR	4209223	Symbol	* core		4209123						
ANR	4209224	Symbol	iter		4209123						
ANR	4209225	Symbol	core -> num -> value		4209123						
ANR	4209226	Symbol	core		4209123						
ANR	4209227	Symbol	r_config_get_i		4209123						
ANR	4209228	Symbol	map -> addr_end		4209123						
ANR	4209229	Symbol	* core -> num		4209123						
ANR	4209230	Symbol	addr		4209123						
ANR	4209231	Symbol	core -> num		4209123						
ANR	4209232	Symbol	map		4209123						
ANR	4209233	Symbol	* * core		4209123						
ANR	4209234	Symbol	core -> dbg		4209123						
ANR	4209235	Function	backtrace_vars	2848:0:83180:84891							
ANR	4209236	FunctionDef	"backtrace_vars (RCore * core , RList * frames)"		4209235	0					
ANR	4209237	CompoundStatement		2848:55:83235:84891	4209235	0					
ANR	4209238	IdentifierDeclStatement	RDebugFrame * f ;	2849:1:83238:83252	4209235	0	True				
ANR	4209239	IdentifierDecl	* f		4209235	0					
ANR	4209240	IdentifierDeclType	RDebugFrame *		4209235	0					
ANR	4209241	Identifier	f		4209235	1					
ANR	4209242	IdentifierDeclStatement	RListIter * iter ;	2850:1:83255:83270	4209235	1	True				
ANR	4209243	IdentifierDecl	* iter		4209235	0					
ANR	4209244	IdentifierDeclType	RListIter *		4209235	0					
ANR	4209245	Identifier	iter		4209235	1					
ANR	4209246	IdentifierDeclStatement	"const char * sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	2852:1:83293:83357	4209235	2	True				
ANR	4209247	IdentifierDecl	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4209235	0					
ANR	4209248	IdentifierDeclType	const char *		4209235	0					
ANR	4209249	Identifier	sp		4209235	1					
ANR	4209250	AssignmentExpression	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4209235	2		=			
ANR	4209251	Identifier	sp		4209235	0					
ANR	4209252	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4209235	1					
ANR	4209253	Callee	r_reg_get_name		4209235	0					
ANR	4209254	Identifier	r_reg_get_name		4209235	0					
ANR	4209255	ArgumentList	core -> anal -> reg		4209235	1					
ANR	4209256	Argument	core -> anal -> reg		4209235	0					
ANR	4209257	PtrMemberAccess	core -> anal -> reg		4209235	0					
ANR	4209258	PtrMemberAccess	core -> anal		4209235	0					
ANR	4209259	Identifier	core		4209235	0					
ANR	4209260	Identifier	anal		4209235	1					
ANR	4209261	Identifier	reg		4209235	1					
ANR	4209262	Argument	R_REG_NAME_SP		4209235	1					
ANR	4209263	Identifier	R_REG_NAME_SP		4209235	0					
ANR	4209264	IdentifierDeclStatement	"const char * bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP ) ;"	2853:1:83360:83424	4209235	3	True				
ANR	4209265	IdentifierDecl	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		4209235	0					
ANR	4209266	IdentifierDeclType	const char *		4209235	0					
ANR	4209267	Identifier	bp		4209235	1					
ANR	4209268	AssignmentExpression	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		4209235	2		=			
ANR	4209269	Identifier	bp		4209235	0					
ANR	4209270	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		4209235	1					
ANR	4209271	Callee	r_reg_get_name		4209235	0					
ANR	4209272	Identifier	r_reg_get_name		4209235	0					
ANR	4209273	ArgumentList	core -> anal -> reg		4209235	1					
ANR	4209274	Argument	core -> anal -> reg		4209235	0					
ANR	4209275	PtrMemberAccess	core -> anal -> reg		4209235	0					
ANR	4209276	PtrMemberAccess	core -> anal		4209235	0					
ANR	4209277	Identifier	core		4209235	0					
ANR	4209278	Identifier	anal		4209235	1					
ANR	4209279	Identifier	reg		4209235	1					
ANR	4209280	Argument	R_REG_NAME_BP		4209235	1					
ANR	4209281	Identifier	R_REG_NAME_BP		4209235	0					
ANR	4209282	IfStatement	if ( ! sp )		4209235	4					
ANR	4209283	Condition	! sp	2854:5:83431:83433	4209235	0	True				
ANR	4209284	UnaryOperationExpression	! sp		4209235	0					
ANR	4209285	UnaryOperator	!		4209235	0					
ANR	4209286	Identifier	sp		4209235	1					
ANR	4209287	CompoundStatement		7:10:200:200	4209235	1					
ANR	4209288	ExpressionStatement	"sp = ""SP"""	2855:2:83440:83449	4209235	0	True				
ANR	4209289	AssignmentExpression	"sp = ""SP"""		4209235	0		=			
ANR	4209290	Identifier	sp		4209235	0					
ANR	4209291	PrimaryExpression	"""SP"""		4209235	1					
ANR	4209292	IfStatement	if ( ! bp )		4209235	5					
ANR	4209293	Condition	! bp	2857:5:83459:83461	4209235	0	True				
ANR	4209294	UnaryOperationExpression	! bp		4209235	0					
ANR	4209295	UnaryOperator	!		4209235	0					
ANR	4209296	Identifier	bp		4209235	1					
ANR	4209297	CompoundStatement		10:10:228:228	4209235	1					
ANR	4209298	ExpressionStatement	"bp = ""BP"""	2858:2:83468:83477	4209235	0	True				
ANR	4209299	AssignmentExpression	"bp = ""BP"""		4209235	0		=			
ANR	4209300	Identifier	bp		4209235	0					
ANR	4209301	PrimaryExpression	"""BP"""		4209235	1					
ANR	4209302	IdentifierDeclStatement	RReg * r = core -> anal -> reg ;	2860:1:83483:83508	4209235	6	True				
ANR	4209303	IdentifierDecl	* r = core -> anal -> reg		4209235	0					
ANR	4209304	IdentifierDeclType	RReg *		4209235	0					
ANR	4209305	Identifier	r		4209235	1					
ANR	4209306	AssignmentExpression	* r = core -> anal -> reg		4209235	2		=			
ANR	4209307	Identifier	r		4209235	0					
ANR	4209308	PtrMemberAccess	core -> anal -> reg		4209235	1					
ANR	4209309	PtrMemberAccess	core -> anal		4209235	0					
ANR	4209310	Identifier	core		4209235	0					
ANR	4209311	Identifier	anal		4209235	1					
ANR	4209312	Identifier	reg		4209235	1					
ANR	4209313	IdentifierDeclStatement	"ut64 dsp = r_reg_getv ( r , sp ) ;"	2861:1:83511:83540	4209235	7	True				
ANR	4209314	IdentifierDecl	"dsp = r_reg_getv ( r , sp )"		4209235	0					
ANR	4209315	IdentifierDeclType	ut64		4209235	0					
ANR	4209316	Identifier	dsp		4209235	1					
ANR	4209317	AssignmentExpression	"dsp = r_reg_getv ( r , sp )"		4209235	2		=			
ANR	4209318	Identifier	dsp		4209235	0					
ANR	4209319	CallExpression	"r_reg_getv ( r , sp )"		4209235	1					
ANR	4209320	Callee	r_reg_getv		4209235	0					
ANR	4209321	Identifier	r_reg_getv		4209235	0					
ANR	4209322	ArgumentList	r		4209235	1					
ANR	4209323	Argument	r		4209235	0					
ANR	4209324	Identifier	r		4209235	0					
ANR	4209325	Argument	sp		4209235	1					
ANR	4209326	Identifier	sp		4209235	0					
ANR	4209327	IdentifierDeclStatement	"ut64 dbp = r_reg_getv ( r , bp ) ;"	2862:1:83543:83572	4209235	8	True				
ANR	4209328	IdentifierDecl	"dbp = r_reg_getv ( r , bp )"		4209235	0					
ANR	4209329	IdentifierDeclType	ut64		4209235	0					
ANR	4209330	Identifier	dbp		4209235	1					
ANR	4209331	AssignmentExpression	"dbp = r_reg_getv ( r , bp )"		4209235	2		=			
ANR	4209332	Identifier	dbp		4209235	0					
ANR	4209333	CallExpression	"r_reg_getv ( r , bp )"		4209235	1					
ANR	4209334	Callee	r_reg_getv		4209235	0					
ANR	4209335	Identifier	r_reg_getv		4209235	0					
ANR	4209336	ArgumentList	r		4209235	1					
ANR	4209337	Argument	r		4209235	0					
ANR	4209338	Identifier	r		4209235	0					
ANR	4209339	Argument	bp		4209235	1					
ANR	4209340	Identifier	bp		4209235	0					
ANR	4209341	IdentifierDeclStatement	int n = 0 ;	2863:1:83575:83584	4209235	9	True				
ANR	4209342	IdentifierDecl	n = 0		4209235	0					
ANR	4209343	IdentifierDeclType	int		4209235	0					
ANR	4209344	Identifier	n		4209235	1					
ANR	4209345	AssignmentExpression	n = 0		4209235	2		=			
ANR	4209346	Identifier	n		4209235	0					
ANR	4209347	PrimaryExpression	0		4209235	1					
ANR	4209348	Statement	r_list_foreach	2864:1:83587:83600	4209235	10	True				
ANR	4209349	Statement	(	2864:16:83602:83602	4209235	11	True				
ANR	4209350	Statement	frames	2864:17:83603:83608	4209235	12	True				
ANR	4209351	Statement	","	2864:23:83609:83609	4209235	13	True				
ANR	4209352	Statement	iter	2864:25:83611:83614	4209235	14	True				
ANR	4209353	Statement	","	2864:29:83615:83615	4209235	15	True				
ANR	4209354	Statement	f	2864:31:83617:83617	4209235	16	True				
ANR	4209355	Statement	)	2864:32:83618:83618	4209235	17	True				
ANR	4209356	CompoundStatement		45:2:1127:1190	4209235	18					
ANR	4209357	IdentifierDeclStatement	ut64 s = f -> sp ? f -> sp : dsp ;	2865:2:83624:83652	4209235	0	True				
ANR	4209358	IdentifierDecl	s = f -> sp ? f -> sp : dsp		4209235	0					
ANR	4209359	IdentifierDeclType	ut64		4209235	0					
ANR	4209360	Identifier	s		4209235	1					
ANR	4209361	AssignmentExpression	s = f -> sp ? f -> sp : dsp		4209235	2		=			
ANR	4209362	Identifier	s		4209235	0					
ANR	4209363	ConditionalExpression	f -> sp ? f -> sp : dsp		4209235	1					
ANR	4209364	Condition	f -> sp		4209235	0					
ANR	4209365	PtrMemberAccess	f -> sp		4209235	0					
ANR	4209366	Identifier	f		4209235	0					
ANR	4209367	Identifier	sp		4209235	1					
ANR	4209368	PtrMemberAccess	f -> sp		4209235	1					
ANR	4209369	Identifier	f		4209235	0					
ANR	4209370	Identifier	sp		4209235	1					
ANR	4209371	Identifier	dsp		4209235	2					
ANR	4209372	IdentifierDeclStatement	ut64 b = f -> bp ? f -> bp : dbp ;	2866:2:83656:83684	4209235	1	True				
ANR	4209373	IdentifierDecl	b = f -> bp ? f -> bp : dbp		4209235	0					
ANR	4209374	IdentifierDeclType	ut64		4209235	0					
ANR	4209375	Identifier	b		4209235	1					
ANR	4209376	AssignmentExpression	b = f -> bp ? f -> bp : dbp		4209235	2		=			
ANR	4209377	Identifier	b		4209235	0					
ANR	4209378	ConditionalExpression	f -> bp ? f -> bp : dbp		4209235	1					
ANR	4209379	Condition	f -> bp		4209235	0					
ANR	4209380	PtrMemberAccess	f -> bp		4209235	0					
ANR	4209381	Identifier	f		4209235	0					
ANR	4209382	Identifier	bp		4209235	1					
ANR	4209383	PtrMemberAccess	f -> bp		4209235	1					
ANR	4209384	Identifier	f		4209235	0					
ANR	4209385	Identifier	bp		4209235	1					
ANR	4209386	Identifier	dbp		4209235	2					
ANR	4209387	ExpressionStatement	"r_reg_setv ( r , bp , s )"	2867:2:83688:83709	4209235	2	True				
ANR	4209388	CallExpression	"r_reg_setv ( r , bp , s )"		4209235	0					
ANR	4209389	Callee	r_reg_setv		4209235	0					
ANR	4209390	Identifier	r_reg_setv		4209235	0					
ANR	4209391	ArgumentList	r		4209235	1					
ANR	4209392	Argument	r		4209235	0					
ANR	4209393	Identifier	r		4209235	0					
ANR	4209394	Argument	bp		4209235	1					
ANR	4209395	Identifier	bp		4209235	0					
ANR	4209396	Argument	s		4209235	2					
ANR	4209397	Identifier	s		4209235	0					
ANR	4209398	ExpressionStatement	"r_reg_setv ( r , sp , b )"	2868:2:83713:83734	4209235	3	True				
ANR	4209399	CallExpression	"r_reg_setv ( r , sp , b )"		4209235	0					
ANR	4209400	Callee	r_reg_setv		4209235	0					
ANR	4209401	Identifier	r_reg_setv		4209235	0					
ANR	4209402	ArgumentList	r		4209235	1					
ANR	4209403	Argument	r		4209235	0					
ANR	4209404	Identifier	r		4209235	0					
ANR	4209405	Argument	sp		4209235	1					
ANR	4209406	Identifier	sp		4209235	0					
ANR	4209407	Argument	b		4209235	2					
ANR	4209408	Identifier	b		4209235	0					
ANR	4209409	IdentifierDeclStatement	"char flagdesc [ 1024 ] , flagdesc2 [ 1024 ] ;"	2870:2:83749:83785	4209235	4	True				
ANR	4209410	IdentifierDecl	flagdesc [ 1024 ]		4209235	0					
ANR	4209411	IdentifierDeclType	char [ 1024 ]		4209235	0					
ANR	4209412	Identifier	flagdesc		4209235	1					
ANR	4209413	PrimaryExpression	1024		4209235	2					
ANR	4209414	IdentifierDecl	flagdesc2 [ 1024 ]		4209235	1					
ANR	4209415	IdentifierDeclType	char [ 1024 ]		4209235	0					
ANR	4209416	Identifier	flagdesc2		4209235	1					
ANR	4209417	PrimaryExpression	1024		4209235	2					
ANR	4209418	IdentifierDeclStatement	"RFlagItem * fi = r_flag_get_at ( core -> flags , f -> addr , true ) ;"	2871:2:83789:83847	4209235	5	True				
ANR	4209419	IdentifierDecl	"* fi = r_flag_get_at ( core -> flags , f -> addr , true )"		4209235	0					
ANR	4209420	IdentifierDeclType	RFlagItem *		4209235	0					
ANR	4209421	Identifier	fi		4209235	1					
ANR	4209422	AssignmentExpression	"* fi = r_flag_get_at ( core -> flags , f -> addr , true )"		4209235	2		=			
ANR	4209423	Identifier	fi		4209235	0					
ANR	4209424	CallExpression	"r_flag_get_at ( core -> flags , f -> addr , true )"		4209235	1					
ANR	4209425	Callee	r_flag_get_at		4209235	0					
ANR	4209426	Identifier	r_flag_get_at		4209235	0					
ANR	4209427	ArgumentList	core -> flags		4209235	1					
ANR	4209428	Argument	core -> flags		4209235	0					
ANR	4209429	PtrMemberAccess	core -> flags		4209235	0					
ANR	4209430	Identifier	core		4209235	0					
ANR	4209431	Identifier	flags		4209235	1					
ANR	4209432	Argument	f -> addr		4209235	1					
ANR	4209433	PtrMemberAccess	f -> addr		4209235	0					
ANR	4209434	Identifier	f		4209235	0					
ANR	4209435	Identifier	addr		4209235	1					
ANR	4209436	Argument	true		4209235	2					
ANR	4209437	Identifier	true		4209235	0					
ANR	4209438	ExpressionStatement	flagdesc [ 0 ] = flagdesc2 [ 0 ] = 0	2872:2:83851:83881	4209235	6	True				
ANR	4209439	AssignmentExpression	flagdesc [ 0 ] = flagdesc2 [ 0 ] = 0		4209235	0		=			
ANR	4209440	ArrayIndexing	flagdesc [ 0 ]		4209235	0					
ANR	4209441	Identifier	flagdesc		4209235	0					
ANR	4209442	PrimaryExpression	0		4209235	1					
ANR	4209443	AssignmentExpression	flagdesc2 [ 0 ] = 0		4209235	1		=			
ANR	4209444	ArrayIndexing	flagdesc2 [ 0 ]		4209235	0					
ANR	4209445	Identifier	flagdesc2		4209235	0					
ANR	4209446	PrimaryExpression	0		4209235	1					
ANR	4209447	PrimaryExpression	0		4209235	1					
ANR	4209448	IfStatement	if ( fi )		4209235	7					
ANR	4209449	Condition	fi	2873:6:83889:83890	4209235	0	True				
ANR	4209450	Identifier	fi		4209235	0					
ANR	4209451	CompoundStatement		26:10:657:657	4209235	1					
ANR	4209452	IfStatement	if ( fi -> offset != f -> addr )		4209235	0					
ANR	4209453	Condition	fi -> offset != f -> addr	2874:7:83902:83922	4209235	0	True				
ANR	4209454	EqualityExpression	fi -> offset != f -> addr		4209235	0		!=			
ANR	4209455	PtrMemberAccess	fi -> offset		4209235	0					
ANR	4209456	Identifier	fi		4209235	0					
ANR	4209457	Identifier	offset		4209235	1					
ANR	4209458	PtrMemberAccess	f -> addr		4209235	1					
ANR	4209459	Identifier	f		4209235	0					
ANR	4209460	Identifier	addr		4209235	1					
ANR	4209461	CompoundStatement		28:4:695:734	4209235	1					
ANR	4209462	IdentifierDeclStatement	int delta = ( int ) ( f -> addr - fi -> offset ) ;	2875:4:83931:83970	4209235	0	True				
ANR	4209463	IdentifierDecl	delta = ( int ) ( f -> addr - fi -> offset )		4209235	0					
ANR	4209464	IdentifierDeclType	int		4209235	0					
ANR	4209465	Identifier	delta		4209235	1					
ANR	4209466	AssignmentExpression	delta = ( int ) ( f -> addr - fi -> offset )		4209235	2		=			
ANR	4209467	Identifier	delta		4209235	0					
ANR	4209468	CastExpression	( int ) ( f -> addr - fi -> offset )		4209235	1					
ANR	4209469	CastTarget	int		4209235	0					
ANR	4209470	AdditiveExpression	f -> addr - fi -> offset		4209235	1		-			
ANR	4209471	PtrMemberAccess	f -> addr		4209235	0					
ANR	4209472	Identifier	f		4209235	0					
ANR	4209473	Identifier	addr		4209235	1					
ANR	4209474	PtrMemberAccess	fi -> offset		4209235	1					
ANR	4209475	Identifier	fi		4209235	0					
ANR	4209476	Identifier	offset		4209235	1					
ANR	4209477	IfStatement	if ( delta > 0 )		4209235	1					
ANR	4209478	Condition	delta > 0	2876:8:83980:83988	4209235	0	True				
ANR	4209479	RelationalExpression	delta > 0		4209235	0		>			
ANR	4209480	Identifier	delta		4209235	0					
ANR	4209481	PrimaryExpression	0		4209235	1					
ANR	4209482	CompoundStatement		29:19:755:755	4209235	1					
ANR	4209483	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s+%d"" , fi -> name , delta )"	2877:5:83998:84069	4209235	0	True				
ANR	4209484	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s+%d"" , fi -> name , delta )"		4209235	0					
ANR	4209485	Callee	snprintf		4209235	0					
ANR	4209486	Identifier	snprintf		4209235	0					
ANR	4209487	ArgumentList	flagdesc		4209235	1					
ANR	4209488	Argument	flagdesc		4209235	0					
ANR	4209489	Identifier	flagdesc		4209235	0					
ANR	4209490	Argument	sizeof ( flagdesc )		4209235	1					
ANR	4209491	SizeofExpression	sizeof ( flagdesc )		4209235	0					
ANR	4209492	Sizeof	sizeof		4209235	0					
ANR	4209493	SizeofOperand	flagdesc		4209235	1					
ANR	4209494	Argument	"""%s+%d"""		4209235	2					
ANR	4209495	PrimaryExpression	"""%s+%d"""		4209235	0					
ANR	4209496	Argument	fi -> name		4209235	3					
ANR	4209497	PtrMemberAccess	fi -> name		4209235	0					
ANR	4209498	Identifier	fi		4209235	0					
ANR	4209499	Identifier	name		4209235	1					
ANR	4209500	Argument	delta		4209235	4					
ANR	4209501	Identifier	delta		4209235	0					
ANR	4209502	ElseStatement	else		4209235	0					
ANR	4209503	IfStatement	if ( delta < 0 )		4209235	0					
ANR	4209504	Condition	delta < 0	2879:15:84086:84094	4209235	0	True				
ANR	4209505	RelationalExpression	delta < 0		4209235	0		<			
ANR	4209506	Identifier	delta		4209235	0					
ANR	4209507	PrimaryExpression	0		4209235	1					
ANR	4209508	CompoundStatement		32:26:861:861	4209235	1					
ANR	4209509	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s%d"" , fi -> name , delta )"	2880:5:84104:84174	4209235	0	True				
ANR	4209510	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s%d"" , fi -> name , delta )"		4209235	0					
ANR	4209511	Callee	snprintf		4209235	0					
ANR	4209512	Identifier	snprintf		4209235	0					
ANR	4209513	ArgumentList	flagdesc		4209235	1					
ANR	4209514	Argument	flagdesc		4209235	0					
ANR	4209515	Identifier	flagdesc		4209235	0					
ANR	4209516	Argument	sizeof ( flagdesc )		4209235	1					
ANR	4209517	SizeofExpression	sizeof ( flagdesc )		4209235	0					
ANR	4209518	Sizeof	sizeof		4209235	0					
ANR	4209519	SizeofOperand	flagdesc		4209235	1					
ANR	4209520	Argument	"""%s%d"""		4209235	2					
ANR	4209521	PrimaryExpression	"""%s%d"""		4209235	0					
ANR	4209522	Argument	fi -> name		4209235	3					
ANR	4209523	PtrMemberAccess	fi -> name		4209235	0					
ANR	4209524	Identifier	fi		4209235	0					
ANR	4209525	Identifier	name		4209235	1					
ANR	4209526	Argument	delta		4209235	4					
ANR	4209527	Identifier	delta		4209235	0					
ANR	4209528	ElseStatement	else		4209235	0					
ANR	4209529	CompoundStatement		35:11:951:951	4209235	0					
ANR	4209530	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"	2883:5:84194:84255	4209235	0	True				
ANR	4209531	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"		4209235	0					
ANR	4209532	Callee	snprintf		4209235	0					
ANR	4209533	Identifier	snprintf		4209235	0					
ANR	4209534	ArgumentList	flagdesc		4209235	1					
ANR	4209535	Argument	flagdesc		4209235	0					
ANR	4209536	Identifier	flagdesc		4209235	0					
ANR	4209537	Argument	sizeof ( flagdesc )		4209235	1					
ANR	4209538	SizeofExpression	sizeof ( flagdesc )		4209235	0					
ANR	4209539	Sizeof	sizeof		4209235	0					
ANR	4209540	SizeofOperand	flagdesc		4209235	1					
ANR	4209541	Argument	"""%s"""		4209235	2					
ANR	4209542	PrimaryExpression	"""%s"""		4209235	0					
ANR	4209543	Argument	fi -> name		4209235	3					
ANR	4209544	PtrMemberAccess	fi -> name		4209235	0					
ANR	4209545	Identifier	fi		4209235	0					
ANR	4209546	Identifier	name		4209235	1					
ANR	4209547	ElseStatement	else		4209235	0					
ANR	4209548	CompoundStatement		39:10:1037:1037	4209235	0					
ANR	4209549	ExpressionStatement	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"	2887:4:84279:84339	4209235	0	True				
ANR	4209550	CallExpression	"snprintf ( flagdesc , sizeof ( flagdesc ) , ""%s"" , fi -> name )"		4209235	0					
ANR	4209551	Callee	snprintf		4209235	0					
ANR	4209552	Identifier	snprintf		4209235	0					
ANR	4209553	ArgumentList	flagdesc		4209235	1					
ANR	4209554	Argument	flagdesc		4209235	0					
ANR	4209555	Identifier	flagdesc		4209235	0					
ANR	4209556	Argument	sizeof ( flagdesc )		4209235	1					
ANR	4209557	SizeofExpression	sizeof ( flagdesc )		4209235	0					
ANR	4209558	Sizeof	sizeof		4209235	0					
ANR	4209559	SizeofOperand	flagdesc		4209235	1					
ANR	4209560	Argument	"""%s"""		4209235	2					
ANR	4209561	PrimaryExpression	"""%s"""		4209235	0					
ANR	4209562	Argument	fi -> name		4209235	3					
ANR	4209563	PtrMemberAccess	fi -> name		4209235	0					
ANR	4209564	Identifier	fi		4209235	0					
ANR	4209565	Identifier	name		4209235	1					
ANR	4209566	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , f -> addr , 0 ) ;"	2892:2:84363:84426	4209235	8	True				
ANR	4209567	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , f -> addr , 0 )"		4209235	0					
ANR	4209568	IdentifierDeclType	RAnalFunction *		4209235	0					
ANR	4209569	Identifier	fcn		4209235	1					
ANR	4209570	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , f -> addr , 0 )"		4209235	2		=			
ANR	4209571	Identifier	fcn		4209235	0					
ANR	4209572	CallExpression	"r_anal_get_fcn_in ( core -> anal , f -> addr , 0 )"		4209235	1					
ANR	4209573	Callee	r_anal_get_fcn_in		4209235	0					
ANR	4209574	Identifier	r_anal_get_fcn_in		4209235	0					
ANR	4209575	ArgumentList	core -> anal		4209235	1					
ANR	4209576	Argument	core -> anal		4209235	0					
ANR	4209577	PtrMemberAccess	core -> anal		4209235	0					
ANR	4209578	Identifier	core		4209235	0					
ANR	4209579	Identifier	anal		4209235	1					
ANR	4209580	Argument	f -> addr		4209235	1					
ANR	4209581	PtrMemberAccess	f -> addr		4209235	0					
ANR	4209582	Identifier	f		4209235	0					
ANR	4209583	Identifier	addr		4209235	1					
ANR	4209584	Argument	0		4209235	2					
ANR	4209585	PrimaryExpression	0		4209235	0					
ANR	4209586	Statement	r_cons_printf	2894:2:84477:84489	4209235	9	True				
ANR	4209587	Statement	(	2894:16:84491:84491	4209235	10	True				
ANR	4209588	Statement	"""%d  0x%08"""	2894:17:84492:84502	4209235	11	True				
ANR	4209589	Statement	PFMT64x	2894:28:84503:84509	4209235	12	True				
ANR	4209590	Statement	""" sp: 0x%08"""	2894:35:84510:84521	4209235	13	True				
ANR	4209591	Statement	PFMT64x	2894:47:84522:84528	4209235	14	True				
ANR	4209592	Statement	""" %-5d"""	2894:54:84529:84535	4209235	15	True				
ANR	4209593	Statement	"""[%s]  %s %s\\n"""	2895:4:84541:84555	4209235	16	True				
ANR	4209594	Statement	","	2895:19:84556:84556	4209235	17	True				
ANR	4209595	Statement	n	2895:21:84558:84558	4209235	18	True				
ANR	4209596	Statement	","	2895:22:84559:84559	4209235	19	True				
ANR	4209597	Statement	f	2895:24:84561:84561	4209235	20	True				
ANR	4209598	Statement	->	2895:25:84562:84563	4209235	21	True				
ANR	4209599	Statement	addr	2895:27:84564:84567	4209235	22	True				
ANR	4209600	Statement	","	2895:31:84568:84568	4209235	23	True				
ANR	4209601	Statement	f	2895:33:84570:84570	4209235	24	True				
ANR	4209602	Statement	->	2895:34:84571:84572	4209235	25	True				
ANR	4209603	Statement	sp	2895:36:84573:84574	4209235	26	True				
ANR	4209604	Statement	","	2895:38:84575:84575	4209235	27	True				
ANR	4209605	Statement	(	2895:40:84577:84577	4209235	28	True				
ANR	4209606	Statement	int	2895:41:84578:84580	4209235	29	True				
ANR	4209607	Statement	)	2895:44:84581:84581	4209235	30	True				
ANR	4209608	Statement	f	2895:45:84582:84582	4209235	31	True				
ANR	4209609	Statement	->	2895:46:84583:84584	4209235	32	True				
ANR	4209610	Statement	size	2895:48:84585:84588	4209235	33	True				
ANR	4209611	Statement	","	2895:52:84589:84589	4209235	34	True				
ANR	4209612	Statement	fcn	2896:4:84595:84597	4209235	35	True				
ANR	4209613	Statement	?	2896:8:84599:84599	4209235	36	True				
ANR	4209614	Statement	fcn	2896:10:84601:84603	4209235	37	True				
ANR	4209615	Statement	->	2896:13:84604:84605	4209235	38	True				
ANR	4209616	Label	name :	2896:15:84606:84611	4209235	39	True				
ANR	4209617	Identifier	name		4209235	0					
ANR	4209618	Statement	"""??"""	2896:22:84613:84616	4209235	40	True				
ANR	4209619	Statement	","	2896:26:84617:84617	4209235	41	True				
ANR	4209620	Statement	flagdesc	2896:28:84619:84626	4209235	42	True				
ANR	4209621	Statement	","	2896:36:84627:84627	4209235	43	True				
ANR	4209622	Statement	flagdesc2	2896:38:84629:84637	4209235	44	True				
ANR	4209623	Statement	)	2896:47:84638:84638	4209235	45	True				
ANR	4209624	ExpressionStatement		2896:48:84639:84639	4209235	46	True				
ANR	4209625	Statement	eprintf	2897:2:84643:84649	4209235	47	True				
ANR	4209626	Statement	(	2897:10:84651:84651	4209235	48	True				
ANR	4209627	Statement	"""afvd @ 0x%"""	2897:11:84652:84663	4209235	49	True				
ANR	4209628	Statement	PFMT64x	2897:23:84664:84670	4209235	50	True				
ANR	4209629	Statement	"""\\n"""	2897:30:84671:84674	4209235	51	True				
ANR	4209630	Statement	","	2897:34:84675:84675	4209235	52	True				
ANR	4209631	Statement	f	2897:36:84677:84677	4209235	53	True				
ANR	4209632	Statement	->	2897:37:84678:84679	4209235	54	True				
ANR	4209633	Statement	addr	2897:39:84680:84683	4209235	55	True				
ANR	4209634	Statement	)	2897:43:84684:84684	4209235	56	True				
ANR	4209635	ExpressionStatement		2897:44:84685:84685	4209235	57	True				
ANR	4209636	ExpressionStatement	r_cons_push ( )	2898:2:84689:84702	4209235	58	True				
ANR	4209637	CallExpression	r_cons_push ( )		4209235	0					
ANR	4209638	Callee	r_cons_push		4209235	0					
ANR	4209639	Identifier	r_cons_push		4209235	0					
ANR	4209640	ArgumentList			4209235	1					
ANR	4209641	Statement	char	2899:2:84706:84709	4209235	59	True				
ANR	4209642	Statement	*	2899:7:84711:84711	4209235	60	True				
ANR	4209643	Statement	res	2899:8:84712:84714	4209235	61	True				
ANR	4209644	Statement	=	2899:12:84716:84716	4209235	62	True				
ANR	4209645	Statement	r_core_cmd_strf	2899:14:84718:84732	4209235	63	True				
ANR	4209646	Statement	(	2899:30:84734:84734	4209235	64	True				
ANR	4209647	Statement	core	2899:31:84735:84738	4209235	65	True				
ANR	4209648	Statement	","	2899:35:84739:84739	4209235	66	True				
ANR	4209649	Statement	"""afvd@0x%"""	2899:37:84741:84750	4209235	67	True				
ANR	4209650	Statement	PFMT64x	2899:47:84751:84757	4209235	68	True				
ANR	4209651	Statement	","	2899:54:84758:84758	4209235	69	True				
ANR	4209652	Statement	f	2899:56:84760:84760	4209235	70	True				
ANR	4209653	Statement	->	2899:57:84761:84762	4209235	71	True				
ANR	4209654	Statement	addr	2899:59:84763:84766	4209235	72	True				
ANR	4209655	Statement	)	2899:63:84767:84767	4209235	73	True				
ANR	4209656	ExpressionStatement		2899:64:84768:84768	4209235	74	True				
ANR	4209657	ExpressionStatement	r_cons_pop ( )	2900:2:84772:84784	4209235	75	True				
ANR	4209658	CallExpression	r_cons_pop ( )		4209235	0					
ANR	4209659	Callee	r_cons_pop		4209235	0					
ANR	4209660	Identifier	r_cons_pop		4209235	0					
ANR	4209661	ArgumentList			4209235	1					
ANR	4209662	ExpressionStatement	"r_cons_printf ( ""%s"" , res )"	2901:2:84788:84813	4209235	76	True				
ANR	4209663	CallExpression	"r_cons_printf ( ""%s"" , res )"		4209235	0					
ANR	4209664	Callee	r_cons_printf		4209235	0					
ANR	4209665	Identifier	r_cons_printf		4209235	0					
ANR	4209666	ArgumentList	"""%s"""		4209235	1					
ANR	4209667	Argument	"""%s"""		4209235	0					
ANR	4209668	PrimaryExpression	"""%s"""		4209235	0					
ANR	4209669	Argument	res		4209235	1					
ANR	4209670	Identifier	res		4209235	0					
ANR	4209671	ExpressionStatement	free ( res )	2902:2:84817:84827	4209235	77	True				
ANR	4209672	CallExpression	free ( res )		4209235	0					
ANR	4209673	Callee	free		4209235	0					
ANR	4209674	Identifier	free		4209235	0					
ANR	4209675	ArgumentList	res		4209235	1					
ANR	4209676	Argument	res		4209235	0					
ANR	4209677	Identifier	res		4209235	0					
ANR	4209678	ExpressionStatement	n ++	2903:2:84831:84834	4209235	78	True				
ANR	4209679	PostIncDecOperationExpression	n ++		4209235	0					
ANR	4209680	Identifier	n		4209235	0					
ANR	4209681	IncDec	++		4209235	1					
ANR	4209682	ExpressionStatement	"r_reg_setv ( r , bp , dbp )"	2905:1:84840:84863	4209235	19	True				
ANR	4209683	CallExpression	"r_reg_setv ( r , bp , dbp )"		4209235	0					
ANR	4209684	Callee	r_reg_setv		4209235	0					
ANR	4209685	Identifier	r_reg_setv		4209235	0					
ANR	4209686	ArgumentList	r		4209235	1					
ANR	4209687	Argument	r		4209235	0					
ANR	4209688	Identifier	r		4209235	0					
ANR	4209689	Argument	bp		4209235	1					
ANR	4209690	Identifier	bp		4209235	0					
ANR	4209691	Argument	dbp		4209235	2					
ANR	4209692	Identifier	dbp		4209235	0					
ANR	4209693	ExpressionStatement	"r_reg_setv ( r , sp , dsp )"	2906:1:84866:84889	4209235	20	True				
ANR	4209694	CallExpression	"r_reg_setv ( r , sp , dsp )"		4209235	0					
ANR	4209695	Callee	r_reg_setv		4209235	0					
ANR	4209696	Identifier	r_reg_setv		4209235	0					
ANR	4209697	ArgumentList	r		4209235	1					
ANR	4209698	Argument	r		4209235	0					
ANR	4209699	Identifier	r		4209235	0					
ANR	4209700	Argument	sp		4209235	1					
ANR	4209701	Identifier	sp		4209235	0					
ANR	4209702	Argument	dsp		4209235	2					
ANR	4209703	Identifier	dsp		4209235	0					
ANR	4209704	ReturnType	static void		4209235	1					
ANR	4209705	Identifier	backtrace_vars		4209235	2					
ANR	4209706	ParameterList	"RCore * core , RList * frames"		4209235	3					
ANR	4209707	Parameter	RCore * core	2848:27:83207:83217	4209235	0	True				
ANR	4209708	ParameterType	RCore *		4209235	0					
ANR	4209709	Identifier	core		4209235	1					
ANR	4209710	Parameter	RList * frames	2848:40:83220:83232	4209235	1	True				
ANR	4209711	ParameterType	RList *		4209235	0					
ANR	4209712	Identifier	frames		4209235	1					
ANR	4209713	CFGEntryNode	ENTRY		4209235		True				
ANR	4209714	CFGExitNode	EXIT		4209235		True				
ANR	4209715	Symbol	dsp		4209235						
ANR	4209716	Symbol	core -> anal -> reg		4209235						
ANR	4209717	Symbol	fi		4209235						
ANR	4209718	Symbol	flagdesc		4209235						
ANR	4209719	Symbol	* core		4209235						
ANR	4209720	Symbol	delta		4209235						
ANR	4209721	Symbol	fi -> name		4209235						
ANR	4209722	Symbol	core -> anal		4209235						
ANR	4209723	Symbol	bp		4209235						
ANR	4209724	Symbol	f -> bp		4209235						
ANR	4209725	Symbol	fcn		4209235						
ANR	4209726	Symbol	fi -> offset		4209235						
ANR	4209727	Symbol	f -> addr		4209235						
ANR	4209728	Symbol	sp		4209235						
ANR	4209729	Symbol	* * core		4209235						
ANR	4209730	Symbol	f -> sp		4209235						
ANR	4209731	Symbol	R_REG_NAME_BP		4209235						
ANR	4209732	Symbol	* flagdesc		4209235						
ANR	4209733	Symbol	res		4209235						
ANR	4209734	Symbol	b		4209235						
ANR	4209735	Symbol	frames		4209235						
ANR	4209736	Symbol	f		4209235						
ANR	4209737	Symbol	flagdesc2		4209235						
ANR	4209738	Symbol	iter		4209235						
ANR	4209739	Symbol	core -> flags		4209235						
ANR	4209740	Symbol	* fi		4209235						
ANR	4209741	Symbol	n		4209235						
ANR	4209742	Symbol	* f		4209235						
ANR	4209743	Symbol	core		4209235						
ANR	4209744	Symbol	r		4209235						
ANR	4209745	Symbol	R_REG_NAME_SP		4209235						
ANR	4209746	Symbol	* core -> anal		4209235						
ANR	4209747	Symbol	dbp		4209235						
ANR	4209748	Symbol	s		4209235						
ANR	4209749	Symbol	r_anal_get_fcn_in		4209235						
ANR	4209750	Symbol	r_reg_get_name		4209235						
ANR	4209751	Symbol	true		4209235						
ANR	4209752	Symbol	* flagdesc2		4209235						
ANR	4209753	Symbol	r_reg_getv		4209235						
ANR	4209754	Symbol	r_flag_get_at		4209235						
ANR	4209755	Function	asciiart_backtrace	2909:0:84894:86635							
ANR	4209756	FunctionDef	"asciiart_backtrace (RCore * core , RList * frames)"		4209755	0					
ANR	4209757	CompoundStatement		2909:59:84953:86635	4209755	0					
ANR	4209758	IdentifierDeclStatement	RDebugFrame * f ;	2914:1:85092:85106	4209755	0	True				
ANR	4209759	IdentifierDecl	* f		4209755	0					
ANR	4209760	IdentifierDeclType	RDebugFrame *		4209755	0					
ANR	4209761	Identifier	f		4209755	1					
ANR	4209762	IdentifierDeclStatement	RListIter * iter ;	2915:1:85109:85124	4209755	1	True				
ANR	4209763	IdentifierDecl	* iter		4209755	0					
ANR	4209764	IdentifierDeclType	RListIter *		4209755	0					
ANR	4209765	Identifier	iter		4209755	1					
ANR	4209766	IdentifierDeclStatement	bool mymap = false ;	2916:1:85127:85145	4209755	2	True				
ANR	4209767	IdentifierDecl	mymap = false		4209755	0					
ANR	4209768	IdentifierDeclType	bool		4209755	0					
ANR	4209769	Identifier	mymap		4209755	1					
ANR	4209770	AssignmentExpression	mymap = false		4209755	2		=			
ANR	4209771	Identifier	false		4209755	0					
ANR	4209772	Identifier	false		4209755	1					
ANR	4209773	IdentifierDeclStatement	"const char * sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP ) ;"	2918:1:85168:85232	4209755	3	True				
ANR	4209774	IdentifierDecl	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4209755	0					
ANR	4209775	IdentifierDeclType	const char *		4209755	0					
ANR	4209776	Identifier	sp		4209755	1					
ANR	4209777	AssignmentExpression	"* sp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4209755	2		=			
ANR	4209778	Identifier	sp		4209755	0					
ANR	4209779	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SP )"		4209755	1					
ANR	4209780	Callee	r_reg_get_name		4209755	0					
ANR	4209781	Identifier	r_reg_get_name		4209755	0					
ANR	4209782	ArgumentList	core -> anal -> reg		4209755	1					
ANR	4209783	Argument	core -> anal -> reg		4209755	0					
ANR	4209784	PtrMemberAccess	core -> anal -> reg		4209755	0					
ANR	4209785	PtrMemberAccess	core -> anal		4209755	0					
ANR	4209786	Identifier	core		4209755	0					
ANR	4209787	Identifier	anal		4209755	1					
ANR	4209788	Identifier	reg		4209755	1					
ANR	4209789	Argument	R_REG_NAME_SP		4209755	1					
ANR	4209790	Identifier	R_REG_NAME_SP		4209755	0					
ANR	4209791	IdentifierDeclStatement	"const char * bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP ) ;"	2919:1:85235:85299	4209755	4	True				
ANR	4209792	IdentifierDecl	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		4209755	0					
ANR	4209793	IdentifierDeclType	const char *		4209755	0					
ANR	4209794	Identifier	bp		4209755	1					
ANR	4209795	AssignmentExpression	"* bp = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		4209755	2		=			
ANR	4209796	Identifier	bp		4209755	0					
ANR	4209797	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_BP )"		4209755	1					
ANR	4209798	Callee	r_reg_get_name		4209755	0					
ANR	4209799	Identifier	r_reg_get_name		4209755	0					
ANR	4209800	ArgumentList	core -> anal -> reg		4209755	1					
ANR	4209801	Argument	core -> anal -> reg		4209755	0					
ANR	4209802	PtrMemberAccess	core -> anal -> reg		4209755	0					
ANR	4209803	PtrMemberAccess	core -> anal		4209755	0					
ANR	4209804	Identifier	core		4209755	0					
ANR	4209805	Identifier	anal		4209755	1					
ANR	4209806	Identifier	reg		4209755	1					
ANR	4209807	Argument	R_REG_NAME_BP		4209755	1					
ANR	4209808	Identifier	R_REG_NAME_BP		4209755	0					
ANR	4209809	IfStatement	if ( ! sp )		4209755	5					
ANR	4209810	Condition	! sp	2920:5:85306:85308	4209755	0	True				
ANR	4209811	UnaryOperationExpression	! sp		4209755	0					
ANR	4209812	UnaryOperator	!		4209755	0					
ANR	4209813	Identifier	sp		4209755	1					
ANR	4209814	CompoundStatement		12:10:357:357	4209755	1					
ANR	4209815	ExpressionStatement	"sp = ""SP"""	2921:2:85315:85324	4209755	0	True				
ANR	4209816	AssignmentExpression	"sp = ""SP"""		4209755	0		=			
ANR	4209817	Identifier	sp		4209755	0					
ANR	4209818	PrimaryExpression	"""SP"""		4209755	1					
ANR	4209819	IfStatement	if ( ! bp )		4209755	6					
ANR	4209820	Condition	! bp	2923:5:85334:85336	4209755	0	True				
ANR	4209821	UnaryOperationExpression	! bp		4209755	0					
ANR	4209822	UnaryOperator	!		4209755	0					
ANR	4209823	Identifier	bp		4209755	1					
ANR	4209824	CompoundStatement		15:10:385:385	4209755	1					
ANR	4209825	ExpressionStatement	"bp = ""BP"""	2924:2:85343:85352	4209755	0	True				
ANR	4209826	AssignmentExpression	"bp = ""BP"""		4209755	0		=			
ANR	4209827	Identifier	bp		4209755	0					
ANR	4209828	PrimaryExpression	"""BP"""		4209755	1					
ANR	4209829	IdentifierDeclStatement	"ut64 dsp = r_reg_getv ( core -> anal -> reg , sp ) ;"	2926:1:85358:85401	4209755	7	True				
ANR	4209830	IdentifierDecl	"dsp = r_reg_getv ( core -> anal -> reg , sp )"		4209755	0					
ANR	4209831	IdentifierDeclType	ut64		4209755	0					
ANR	4209832	Identifier	dsp		4209755	1					
ANR	4209833	AssignmentExpression	"dsp = r_reg_getv ( core -> anal -> reg , sp )"		4209755	2		=			
ANR	4209834	Identifier	dsp		4209755	0					
ANR	4209835	CallExpression	"r_reg_getv ( core -> anal -> reg , sp )"		4209755	1					
ANR	4209836	Callee	r_reg_getv		4209755	0					
ANR	4209837	Identifier	r_reg_getv		4209755	0					
ANR	4209838	ArgumentList	core -> anal -> reg		4209755	1					
ANR	4209839	Argument	core -> anal -> reg		4209755	0					
ANR	4209840	PtrMemberAccess	core -> anal -> reg		4209755	0					
ANR	4209841	PtrMemberAccess	core -> anal		4209755	0					
ANR	4209842	Identifier	core		4209755	0					
ANR	4209843	Identifier	anal		4209755	1					
ANR	4209844	Identifier	reg		4209755	1					
ANR	4209845	Argument	sp		4209755	1					
ANR	4209846	Identifier	sp		4209755	0					
ANR	4209847	IdentifierDeclStatement	"ut64 dbp = r_reg_getv ( core -> anal -> reg , bp ) ;"	2927:1:85404:85447	4209755	8	True				
ANR	4209848	IdentifierDecl	"dbp = r_reg_getv ( core -> anal -> reg , bp )"		4209755	0					
ANR	4209849	IdentifierDeclType	ut64		4209755	0					
ANR	4209850	Identifier	dbp		4209755	1					
ANR	4209851	AssignmentExpression	"dbp = r_reg_getv ( core -> anal -> reg , bp )"		4209755	2		=			
ANR	4209852	Identifier	dbp		4209755	0					
ANR	4209853	CallExpression	"r_reg_getv ( core -> anal -> reg , bp )"		4209755	1					
ANR	4209854	Callee	r_reg_getv		4209755	0					
ANR	4209855	Identifier	r_reg_getv		4209755	0					
ANR	4209856	ArgumentList	core -> anal -> reg		4209755	1					
ANR	4209857	Argument	core -> anal -> reg		4209755	0					
ANR	4209858	PtrMemberAccess	core -> anal -> reg		4209755	0					
ANR	4209859	PtrMemberAccess	core -> anal		4209755	0					
ANR	4209860	Identifier	core		4209755	0					
ANR	4209861	Identifier	anal		4209755	1					
ANR	4209862	Identifier	reg		4209755	1					
ANR	4209863	Argument	bp		4209755	1					
ANR	4209864	Identifier	bp		4209755	0					
ANR	4209865	IdentifierDeclStatement	"RDebugMap * map = r_debug_map_get ( core -> dbg , dsp ) ;"	2928:1:85450:85499	4209755	9	True				
ANR	4209866	IdentifierDecl	"* map = r_debug_map_get ( core -> dbg , dsp )"		4209755	0					
ANR	4209867	IdentifierDeclType	RDebugMap *		4209755	0					
ANR	4209868	Identifier	map		4209755	1					
ANR	4209869	AssignmentExpression	"* map = r_debug_map_get ( core -> dbg , dsp )"		4209755	2		=			
ANR	4209870	Identifier	map		4209755	0					
ANR	4209871	CallExpression	"r_debug_map_get ( core -> dbg , dsp )"		4209755	1					
ANR	4209872	Callee	r_debug_map_get		4209755	0					
ANR	4209873	Identifier	r_debug_map_get		4209755	0					
ANR	4209874	ArgumentList	core -> dbg		4209755	1					
ANR	4209875	Argument	core -> dbg		4209755	0					
ANR	4209876	PtrMemberAccess	core -> dbg		4209755	0					
ANR	4209877	Identifier	core		4209755	0					
ANR	4209878	Identifier	dbg		4209755	1					
ANR	4209879	Argument	dsp		4209755	1					
ANR	4209880	Identifier	dsp		4209755	0					
ANR	4209881	IfStatement	if ( ! map )		4209755	10					
ANR	4209882	Condition	! map	2929:5:85506:85509	4209755	0	True				
ANR	4209883	UnaryOperationExpression	! map		4209755	0					
ANR	4209884	UnaryOperator	!		4209755	0					
ANR	4209885	Identifier	map		4209755	1					
ANR	4209886	CompoundStatement		21:11:558:558	4209755	1					
ANR	4209887	ExpressionStatement	mymap = true	2930:2:85516:85528	4209755	0	True				
ANR	4209888	AssignmentExpression	mymap = true		4209755	0		=			
ANR	4209889	Identifier	mymap		4209755	0					
ANR	4209890	Identifier	true		4209755	1					
ANR	4209891	ExpressionStatement	map = R_NEW0 ( RDebugMap )	2931:2:85532:85556	4209755	1	True				
ANR	4209892	AssignmentExpression	map = R_NEW0 ( RDebugMap )		4209755	0		=			
ANR	4209893	Identifier	map		4209755	0					
ANR	4209894	CallExpression	R_NEW0 ( RDebugMap )		4209755	1					
ANR	4209895	Callee	R_NEW0		4209755	0					
ANR	4209896	Identifier	R_NEW0		4209755	0					
ANR	4209897	ArgumentList	RDebugMap		4209755	1					
ANR	4209898	Argument	RDebugMap		4209755	0					
ANR	4209899	Identifier	RDebugMap		4209755	0					
ANR	4209900	ExpressionStatement	map -> addr = UT64_MAX	2932:2:85560:85580	4209755	2	True				
ANR	4209901	AssignmentExpression	map -> addr = UT64_MAX		4209755	0		=			
ANR	4209902	PtrMemberAccess	map -> addr		4209755	0					
ANR	4209903	Identifier	map		4209755	0					
ANR	4209904	Identifier	addr		4209755	1					
ANR	4209905	Identifier	UT64_MAX		4209755	1					
ANR	4209906	ExpressionStatement	map -> addr_end = UT64_MAX	2933:2:85584:85608	4209755	3	True				
ANR	4209907	AssignmentExpression	map -> addr_end = UT64_MAX		4209755	0		=			
ANR	4209908	PtrMemberAccess	map -> addr_end		4209755	0					
ANR	4209909	Identifier	map		4209755	0					
ANR	4209910	Identifier	addr_end		4209755	1					
ANR	4209911	Identifier	UT64_MAX		4209755	1					
ANR	4209912	Statement	r_cons_printf	2936:1:85615:85627	4209755	11	True				
ANR	4209913	Statement	(	2936:15:85629:85629	4209755	12	True				
ANR	4209914	Statement	"""0x%016"""	2936:16:85630:85637	4209755	13	True				
ANR	4209915	Statement	PFMT64x	2936:24:85638:85644	4209755	14	True				
ANR	4209916	Statement	"""  STACK END  ^^^\\n"""	2936:31:85645:85664	4209755	15	True				
ANR	4209917	Statement	","	2936:51:85665:85665	4209755	16	True				
ANR	4209918	Statement	map	2936:53:85667:85669	4209755	17	True				
ANR	4209919	Statement	->	2936:56:85670:85671	4209755	18	True				
ANR	4209920	Statement	addr	2936:58:85672:85675	4209755	19	True				
ANR	4209921	Statement	)	2936:62:85676:85676	4209755	20	True				
ANR	4209922	ExpressionStatement		2936:63:85677:85677	4209755	21	True				
ANR	4209923	Statement	r_cons_printf	2937:1:85680:85692	4209755	22	True				
ANR	4209924	Statement	(	2937:15:85694:85694	4209755	23	True				
ANR	4209925	Statement	"""0x%016"""	2937:16:85695:85702	4209755	24	True				
ANR	4209926	Statement	PFMT64x	2937:24:85703:85709	4209755	25	True				
ANR	4209927	Statement	"""  STACK POINTER: %s\\n"""	2937:31:85710:85732	4209755	26	True				
ANR	4209928	Statement	","	2937:54:85733:85733	4209755	27	True				
ANR	4209929	Statement	dsp	2937:56:85735:85737	4209755	28	True				
ANR	4209930	Statement	","	2937:59:85738:85738	4209755	29	True				
ANR	4209931	Statement	sp	2937:61:85740:85741	4209755	30	True				
ANR	4209932	Statement	)	2937:63:85742:85742	4209755	31	True				
ANR	4209933	ExpressionStatement		2937:64:85743:85743	4209755	32	True				
ANR	4209934	ExpressionStatement	"r_cons_printf ( ""                    .------------------------.\\n"" )"	2938:1:85746:85812	4209755	33	True				
ANR	4209935	CallExpression	"r_cons_printf ( ""                    .------------------------.\\n"" )"		4209755	0					
ANR	4209936	Callee	r_cons_printf		4209755	0					
ANR	4209937	Identifier	r_cons_printf		4209755	0					
ANR	4209938	ArgumentList	"""                    .------------------------.\\n"""		4209755	1					
ANR	4209939	Argument	"""                    .------------------------.\\n"""		4209755	0					
ANR	4209940	PrimaryExpression	"""                    .------------------------.\\n"""		4209755	0					
ANR	4209941	IdentifierDeclStatement	int n = 0 ;	2939:1:85815:85824	4209755	34	True				
ANR	4209942	IdentifierDecl	n = 0		4209755	0					
ANR	4209943	IdentifierDeclType	int		4209755	0					
ANR	4209944	Identifier	n		4209755	1					
ANR	4209945	AssignmentExpression	n = 0		4209755	2		=			
ANR	4209946	Identifier	n		4209755	0					
ANR	4209947	PrimaryExpression	0		4209755	1					
ANR	4209948	Statement	r_list_foreach	2940:1:85827:85840	4209755	35	True				
ANR	4209949	Statement	(	2940:16:85842:85842	4209755	36	True				
ANR	4209950	Statement	frames	2940:17:85843:85848	4209755	37	True				
ANR	4209951	Statement	","	2940:23:85849:85849	4209755	38	True				
ANR	4209952	Statement	iter	2940:25:85851:85854	4209755	39	True				
ANR	4209953	Statement	","	2940:29:85855:85855	4209755	40	True				
ANR	4209954	Statement	f	2940:31:85857:85857	4209755	41	True				
ANR	4209955	Statement	)	2940:32:85858:85858	4209755	42	True				
ANR	4209956	CompoundStatement		35:2:974:1014	4209755	43					
ANR	4209957	IdentifierDeclStatement	ut64 s = f -> sp ? f -> sp : dsp ;	2941:2:85864:85892	4209755	0	True				
ANR	4209958	IdentifierDecl	s = f -> sp ? f -> sp : dsp		4209755	0					
ANR	4209959	IdentifierDeclType	ut64		4209755	0					
ANR	4209960	Identifier	s		4209755	1					
ANR	4209961	AssignmentExpression	s = f -> sp ? f -> sp : dsp		4209755	2		=			
ANR	4209962	Identifier	s		4209755	0					
ANR	4209963	ConditionalExpression	f -> sp ? f -> sp : dsp		4209755	1					
ANR	4209964	Condition	f -> sp		4209755	0					
ANR	4209965	PtrMemberAccess	f -> sp		4209755	0					
ANR	4209966	Identifier	f		4209755	0					
ANR	4209967	Identifier	sp		4209755	1					
ANR	4209968	PtrMemberAccess	f -> sp		4209755	1					
ANR	4209969	Identifier	f		4209755	0					
ANR	4209970	Identifier	sp		4209755	1					
ANR	4209971	Identifier	dsp		4209755	2					
ANR	4209972	IdentifierDeclStatement	ut64 b = f -> bp ? f -> bp : dbp ;	2942:2:85896:85924	4209755	1	True				
ANR	4209973	IdentifierDecl	b = f -> bp ? f -> bp : dbp		4209755	0					
ANR	4209974	IdentifierDeclType	ut64		4209755	0					
ANR	4209975	Identifier	b		4209755	1					
ANR	4209976	AssignmentExpression	b = f -> bp ? f -> bp : dbp		4209755	2		=			
ANR	4209977	Identifier	b		4209755	0					
ANR	4209978	ConditionalExpression	f -> bp ? f -> bp : dbp		4209755	1					
ANR	4209979	Condition	f -> bp		4209755	0					
ANR	4209980	PtrMemberAccess	f -> bp		4209755	0					
ANR	4209981	Identifier	f		4209755	0					
ANR	4209982	Identifier	bp		4209755	1					
ANR	4209983	PtrMemberAccess	f -> bp		4209755	1					
ANR	4209984	Identifier	f		4209755	0					
ANR	4209985	Identifier	bp		4209755	1					
ANR	4209986	Identifier	dbp		4209755	2					
ANR	4209987	IdentifierDeclStatement	"char * str = r_str_newf ( ""[frame %d]"" , n ) ;"	2943:2:85928:85968	4209755	2	True				
ANR	4209988	IdentifierDecl	"* str = r_str_newf ( ""[frame %d]"" , n )"		4209755	0					
ANR	4209989	IdentifierDeclType	char *		4209755	0					
ANR	4209990	Identifier	str		4209755	1					
ANR	4209991	AssignmentExpression	"* str = r_str_newf ( ""[frame %d]"" , n )"		4209755	2		=			
ANR	4209992	Identifier	str		4209755	0					
ANR	4209993	CallExpression	"r_str_newf ( ""[frame %d]"" , n )"		4209755	1					
ANR	4209994	Callee	r_str_newf		4209755	0					
ANR	4209995	Identifier	r_str_newf		4209755	0					
ANR	4209996	ArgumentList	"""[frame %d]"""		4209755	1					
ANR	4209997	Argument	"""[frame %d]"""		4209755	0					
ANR	4209998	PrimaryExpression	"""[frame %d]"""		4209755	0					
ANR	4209999	Argument	n		4209755	1					
ANR	4210000	Identifier	n		4209755	0					
ANR	4210001	Statement	r_cons_printf	2944:2:85972:85984	4209755	3	True				
ANR	4210002	Statement	(	2944:16:85986:85986	4209755	4	True				
ANR	4210003	Statement	"""0x%016"""	2944:17:85987:85994	4209755	5	True				
ANR	4210004	Statement	PFMT64x	2944:25:85995:86001	4209755	6	True				
ANR	4210005	Statement	"""  |%4s    %10s      | ; size %d\\n"""	2944:32:86002:86036	4209755	7	True				
ANR	4210006	Statement	","	2944:67:86037:86037	4209755	8	True				
ANR	4210007	Statement	s	2944:69:86039:86039	4209755	9	True				
ANR	4210008	Statement	","	2944:70:86040:86040	4209755	10	True				
ANR	4210009	Statement	sp	2944:72:86042:86043	4209755	11	True				
ANR	4210010	Statement	","	2944:74:86044:86044	4209755	12	True				
ANR	4210011	Statement	str	2944:76:86046:86048	4209755	13	True				
ANR	4210012	Statement	","	2944:79:86049:86049	4209755	14	True				
ANR	4210013	Statement	s	2944:81:86051:86051	4209755	15	True				
ANR	4210014	Statement	-	2944:83:86053:86053	4209755	16	True				
ANR	4210015	Statement	b	2944:85:86055:86055	4209755	17	True				
ANR	4210016	Statement	)	2944:86:86056:86056	4209755	18	True				
ANR	4210017	ExpressionStatement		2944:87:86057:86057	4209755	19	True				
ANR	4210018	ExpressionStatement	free ( str )	2945:2:86061:86071	4209755	20	True				
ANR	4210019	CallExpression	free ( str )		4209755	0					
ANR	4210020	Callee	free		4209755	0					
ANR	4210021	Identifier	free		4209755	0					
ANR	4210022	ArgumentList	str		4209755	1					
ANR	4210023	Argument	str		4209755	0					
ANR	4210024	Identifier	str		4209755	0					
ANR	4210025	ExpressionStatement	"r_cons_printf ( ""                    |            ...         |\\n"" )"	2946:2:86075:86141	4209755	21	True				
ANR	4210026	CallExpression	"r_cons_printf ( ""                    |            ...         |\\n"" )"		4209755	0					
ANR	4210027	Callee	r_cons_printf		4209755	0					
ANR	4210028	Identifier	r_cons_printf		4209755	0					
ANR	4210029	ArgumentList	"""                    |            ...         |\\n"""		4209755	1					
ANR	4210030	Argument	"""                    |            ...         |\\n"""		4209755	0					
ANR	4210031	PrimaryExpression	"""                    |            ...         |\\n"""		4209755	0					
ANR	4210032	Statement	r_cons_printf	2947:2:86145:86157	4209755	22	True				
ANR	4210033	Statement	(	2947:16:86159:86159	4209755	23	True				
ANR	4210034	Statement	"""0x%016"""	2947:17:86160:86167	4209755	24	True				
ANR	4210035	Statement	PFMT64x	2947:25:86168:86174	4209755	25	True				
ANR	4210036	Statement	"""  |%4s 0x%016"""	2947:32:86175:86189	4209755	26	True				
ANR	4210037	Statement	PFMT64x	2947:47:86190:86196	4209755	27	True				
ANR	4210038	Statement	""" | %s\\n"""	2947:54:86197:86205	4209755	28	True				
ANR	4210039	Statement	","	2947:63:86206:86206	4209755	29	True				
ANR	4210040	Statement	b	2947:65:86208:86208	4209755	30	True				
ANR	4210041	Statement	","	2947:66:86209:86209	4209755	31	True				
ANR	4210042	Statement	bp	2947:68:86211:86212	4209755	32	True				
ANR	4210043	Statement	","	2947:70:86213:86213	4209755	33	True				
ANR	4210044	Statement	f	2947:72:86215:86215	4209755	34	True				
ANR	4210045	Statement	->	2947:73:86216:86217	4209755	35	True				
ANR	4210046	Statement	addr	2947:75:86218:86221	4209755	36	True				
ANR	4210047	Statement	","	2947:79:86222:86222	4209755	37	True				
ANR	4210048	Statement	"""; return address"""	2947:81:86224:86241	4209755	38	True				
ANR	4210049	Statement	)	2947:99:86242:86242	4209755	39	True				
ANR	4210050	ExpressionStatement		2947:100:86243:86243	4209755	40	True				
ANR	4210051	ExpressionStatement	"r_cons_printf ( ""                    )------------------------(\\n"" )"	2948:2:86247:86313	4209755	41	True				
ANR	4210052	CallExpression	"r_cons_printf ( ""                    )------------------------(\\n"" )"		4209755	0					
ANR	4210053	Callee	r_cons_printf		4209755	0					
ANR	4210054	Identifier	r_cons_printf		4209755	0					
ANR	4210055	ArgumentList	"""                    )------------------------(\\n"""		4209755	1					
ANR	4210056	Argument	"""                    )------------------------(\\n"""		4209755	0					
ANR	4210057	PrimaryExpression	"""                    )------------------------(\\n"""		4209755	0					
ANR	4210058	ExpressionStatement	n ++	2950:2:86379:86382	4209755	42	True				
ANR	4210059	PostIncDecOperationExpression	n ++		4209755	0					
ANR	4210060	Identifier	n		4209755	0					
ANR	4210061	IncDec	++		4209755	1					
ANR	4210062	ExpressionStatement	"r_cons_printf ( ""                    |           ...          |\\n"" )"	2952:1:86388:86454	4209755	44	True				
ANR	4210063	CallExpression	"r_cons_printf ( ""                    |           ...          |\\n"" )"		4209755	0					
ANR	4210064	Callee	r_cons_printf		4209755	0					
ANR	4210065	Identifier	r_cons_printf		4209755	0					
ANR	4210066	ArgumentList	"""                    |           ...          |\\n"""		4209755	1					
ANR	4210067	Argument	"""                    |           ...          |\\n"""		4209755	0					
ANR	4210068	PrimaryExpression	"""                    |           ...          |\\n"""		4209755	0					
ANR	4210069	ExpressionStatement	"r_cons_printf ( ""                    `------------------------'\\n"" )"	2953:1:86457:86523	4209755	45	True				
ANR	4210070	CallExpression	"r_cons_printf ( ""                    `------------------------'\\n"" )"		4209755	0					
ANR	4210071	Callee	r_cons_printf		4209755	0					
ANR	4210072	Identifier	r_cons_printf		4209755	0					
ANR	4210073	ArgumentList	"""                    `------------------------'\\n"""		4209755	1					
ANR	4210074	Argument	"""                    `------------------------'\\n"""		4209755	0					
ANR	4210075	PrimaryExpression	"""                    `------------------------'\\n"""		4209755	0					
ANR	4210076	Statement	r_cons_printf	2954:1:86526:86538	4209755	46	True				
ANR	4210077	Statement	(	2954:15:86540:86540	4209755	47	True				
ANR	4210078	Statement	"""0x%016"""	2954:16:86541:86548	4209755	48	True				
ANR	4210079	Statement	PFMT64x	2954:24:86549:86555	4209755	49	True				
ANR	4210080	Statement	"""  STACK BOTTOM\\n"""	2954:31:86556:86573	4209755	50	True				
ANR	4210081	Statement	","	2954:49:86574:86574	4209755	51	True				
ANR	4210082	Statement	map	2954:51:86576:86578	4209755	52	True				
ANR	4210083	Statement	->	2954:54:86579:86580	4209755	53	True				
ANR	4210084	Statement	addr_end	2954:56:86581:86588	4209755	54	True				
ANR	4210085	Statement	)	2954:64:86589:86589	4209755	55	True				
ANR	4210086	ExpressionStatement		2954:65:86590:86590	4209755	56	True				
ANR	4210087	IfStatement	if ( mymap )		4209755	57					
ANR	4210088	Condition	mymap	2955:5:86597:86601	4209755	0	True				
ANR	4210089	Identifier	mymap		4209755	0					
ANR	4210090	CompoundStatement		47:12:1650:1650	4209755	1					
ANR	4210091	ExpressionStatement	r_debug_map_free ( map )	2956:2:86608:86630	4209755	0	True				
ANR	4210092	CallExpression	r_debug_map_free ( map )		4209755	0					
ANR	4210093	Callee	r_debug_map_free		4209755	0					
ANR	4210094	Identifier	r_debug_map_free		4209755	0					
ANR	4210095	ArgumentList	map		4209755	1					
ANR	4210096	Argument	map		4209755	0					
ANR	4210097	Identifier	map		4209755	0					
ANR	4210098	ReturnType	static void		4209755	1					
ANR	4210099	Identifier	asciiart_backtrace		4209755	2					
ANR	4210100	ParameterList	"RCore * core , RList * frames"		4209755	3					
ANR	4210101	Parameter	RCore * core	2909:31:84925:84935	4209755	0	True				
ANR	4210102	ParameterType	RCore *		4209755	0					
ANR	4210103	Identifier	core		4209755	1					
ANR	4210104	Parameter	RList * frames	2909:44:84938:84950	4209755	1	True				
ANR	4210105	ParameterType	RList *		4209755	0					
ANR	4210106	Identifier	frames		4209755	1					
ANR	4210107	CFGEntryNode	ENTRY		4209755		True				
ANR	4210108	CFGExitNode	EXIT		4209755		True				
ANR	4210109	Symbol	dsp		4209755						
ANR	4210110	Symbol	core -> anal -> reg		4209755						
ANR	4210111	Symbol	map -> addr		4209755						
ANR	4210112	Symbol	* map		4209755						
ANR	4210113	Symbol	mymap		4209755						
ANR	4210114	Symbol	* core		4209755						
ANR	4210115	Symbol	r_str_newf		4209755						
ANR	4210116	Symbol	core -> anal		4209755						
ANR	4210117	Symbol	bp		4209755						
ANR	4210118	Symbol	f -> bp		4209755						
ANR	4210119	Symbol	RDebugMap		4209755						
ANR	4210120	Symbol	r_debug_map_get		4209755						
ANR	4210121	Symbol	UT64_MAX		4209755						
ANR	4210122	Symbol	sp		4209755						
ANR	4210123	Symbol	map		4209755						
ANR	4210124	Symbol	* * core		4209755						
ANR	4210125	Symbol	f -> sp		4209755						
ANR	4210126	Symbol	R_REG_NAME_BP		4209755						
ANR	4210127	Symbol	b		4209755						
ANR	4210128	Symbol	frames		4209755						
ANR	4210129	Symbol	f		4209755						
ANR	4210130	Symbol	false		4209755						
ANR	4210131	Symbol	iter		4209755						
ANR	4210132	Symbol	n		4209755						
ANR	4210133	Symbol	* f		4209755						
ANR	4210134	Symbol	str		4209755						
ANR	4210135	Symbol	core		4209755						
ANR	4210136	Symbol	R_NEW0		4209755						
ANR	4210137	Symbol	* core -> anal		4209755						
ANR	4210138	Symbol	R_REG_NAME_SP		4209755						
ANR	4210139	Symbol	dbp		4209755						
ANR	4210140	Symbol	s		4209755						
ANR	4210141	Symbol	r_reg_get_name		4209755						
ANR	4210142	Symbol	true		4209755						
ANR	4210143	Symbol	map -> addr_end		4209755						
ANR	4210144	Symbol	r_reg_getv		4209755						
ANR	4210145	Symbol	core -> dbg		4209755						
ANR	4210146	Function	get_backtrace_info	2960:0:86638:88740							
ANR	4210147	FunctionDef	"get_backtrace_info (RCore * core , RDebugFrame * frame , ut64 addr , char * * flagdesc , char * * flagdesc2 , char * * pcstr , char * * spstr , bool hex_format)"		4210146	0					
ANR	4210148	CompoundStatement		2960:155:86793:88740	4210146	0					
ANR	4210149	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( core -> flags , frame -> addr , true ) ;"	2961:1:86796:86857	4210146	0	True				
ANR	4210150	IdentifierDecl	"* f = r_flag_get_at ( core -> flags , frame -> addr , true )"		4210146	0					
ANR	4210151	IdentifierDeclType	RFlagItem *		4210146	0					
ANR	4210152	Identifier	f		4210146	1					
ANR	4210153	AssignmentExpression	"* f = r_flag_get_at ( core -> flags , frame -> addr , true )"		4210146	2		=			
ANR	4210154	Identifier	f		4210146	0					
ANR	4210155	CallExpression	"r_flag_get_at ( core -> flags , frame -> addr , true )"		4210146	1					
ANR	4210156	Callee	r_flag_get_at		4210146	0					
ANR	4210157	Identifier	r_flag_get_at		4210146	0					
ANR	4210158	ArgumentList	core -> flags		4210146	1					
ANR	4210159	Argument	core -> flags		4210146	0					
ANR	4210160	PtrMemberAccess	core -> flags		4210146	0					
ANR	4210161	Identifier	core		4210146	0					
ANR	4210162	Identifier	flags		4210146	1					
ANR	4210163	Argument	frame -> addr		4210146	1					
ANR	4210164	PtrMemberAccess	frame -> addr		4210146	0					
ANR	4210165	Identifier	frame		4210146	0					
ANR	4210166	Identifier	addr		4210146	1					
ANR	4210167	Argument	true		4210146	2					
ANR	4210168	Identifier	true		4210146	0					
ANR	4210169	ExpressionStatement	* flagdesc = NULL	2962:1:86860:86876	4210146	1	True				
ANR	4210170	AssignmentExpression	* flagdesc = NULL		4210146	0		=			
ANR	4210171	UnaryOperationExpression	* flagdesc		4210146	0					
ANR	4210172	UnaryOperator	*		4210146	0					
ANR	4210173	Identifier	flagdesc		4210146	1					
ANR	4210174	Identifier	NULL		4210146	1					
ANR	4210175	ExpressionStatement	* flagdesc2 = NULL	2963:1:86879:86896	4210146	2	True				
ANR	4210176	AssignmentExpression	* flagdesc2 = NULL		4210146	0		=			
ANR	4210177	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210178	UnaryOperator	*		4210146	0					
ANR	4210179	Identifier	flagdesc2		4210146	1					
ANR	4210180	Identifier	NULL		4210146	1					
ANR	4210181	IfStatement	if ( f )		4210146	3					
ANR	4210182	Condition	f	2964:5:86903:86903	4210146	0	True				
ANR	4210183	Identifier	f		4210146	0					
ANR	4210184	CompoundStatement		5:8:112:112	4210146	1					
ANR	4210185	IfStatement	if ( f -> offset != addr )		4210146	0					
ANR	4210186	Condition	f -> offset != addr	2965:6:86914:86930	4210146	0	True				
ANR	4210187	EqualityExpression	f -> offset != addr		4210146	0		!=			
ANR	4210188	PtrMemberAccess	f -> offset		4210146	0					
ANR	4210189	Identifier	f		4210146	0					
ANR	4210190	Identifier	offset		4210146	1					
ANR	4210191	Identifier	addr		4210146	1					
ANR	4210192	CompoundStatement		7:3:144:186	4210146	1					
ANR	4210193	IdentifierDeclStatement	int delta = ( int ) ( frame -> addr - f -> offset ) ;	2966:3:86938:86980	4210146	0	True				
ANR	4210194	IdentifierDecl	delta = ( int ) ( frame -> addr - f -> offset )		4210146	0					
ANR	4210195	IdentifierDeclType	int		4210146	0					
ANR	4210196	Identifier	delta		4210146	1					
ANR	4210197	AssignmentExpression	delta = ( int ) ( frame -> addr - f -> offset )		4210146	2		=			
ANR	4210198	Identifier	delta		4210146	0					
ANR	4210199	CastExpression	( int ) ( frame -> addr - f -> offset )		4210146	1					
ANR	4210200	CastTarget	int		4210146	0					
ANR	4210201	AdditiveExpression	frame -> addr - f -> offset		4210146	1		-			
ANR	4210202	PtrMemberAccess	frame -> addr		4210146	0					
ANR	4210203	Identifier	frame		4210146	0					
ANR	4210204	Identifier	addr		4210146	1					
ANR	4210205	PtrMemberAccess	f -> offset		4210146	1					
ANR	4210206	Identifier	f		4210146	0					
ANR	4210207	Identifier	offset		4210146	1					
ANR	4210208	IfStatement	if ( delta > 0 )		4210146	1					
ANR	4210209	Condition	delta > 0	2967:7:86989:86997	4210146	0	True				
ANR	4210210	RelationalExpression	delta > 0		4210146	0		>			
ANR	4210211	Identifier	delta		4210146	0					
ANR	4210212	PrimaryExpression	0		4210146	1					
ANR	4210213	CompoundStatement		8:18:206:206	4210146	1					
ANR	4210214	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s+%d"" , f -> name , delta )"	2968:4:87006:87054	4210146	0	True				
ANR	4210215	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s+%d"" , f -> name , delta )"		4210146	0		=			
ANR	4210216	UnaryOperationExpression	* flagdesc		4210146	0					
ANR	4210217	UnaryOperator	*		4210146	0					
ANR	4210218	Identifier	flagdesc		4210146	1					
ANR	4210219	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , delta )"		4210146	1					
ANR	4210220	Callee	r_str_newf		4210146	0					
ANR	4210221	Identifier	r_str_newf		4210146	0					
ANR	4210222	ArgumentList	"""%s+%d"""		4210146	1					
ANR	4210223	Argument	"""%s+%d"""		4210146	0					
ANR	4210224	PrimaryExpression	"""%s+%d"""		4210146	0					
ANR	4210225	Argument	f -> name		4210146	1					
ANR	4210226	PtrMemberAccess	f -> name		4210146	0					
ANR	4210227	Identifier	f		4210146	0					
ANR	4210228	Identifier	name		4210146	1					
ANR	4210229	Argument	delta		4210146	2					
ANR	4210230	Identifier	delta		4210146	0					
ANR	4210231	ElseStatement	else		4210146	0					
ANR	4210232	IfStatement	if ( delta < 0 )		4210146	0					
ANR	4210233	Condition	delta < 0	2969:14:87070:87078	4210146	0	True				
ANR	4210234	RelationalExpression	delta < 0		4210146	0		<			
ANR	4210235	Identifier	delta		4210146	0					
ANR	4210236	PrimaryExpression	0		4210146	1					
ANR	4210237	CompoundStatement		10:25:287:287	4210146	1					
ANR	4210238	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s%d"" , f -> name , delta )"	2970:4:87087:87134	4210146	0	True				
ANR	4210239	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s%d"" , f -> name , delta )"		4210146	0		=			
ANR	4210240	UnaryOperationExpression	* flagdesc		4210146	0					
ANR	4210241	UnaryOperator	*		4210146	0					
ANR	4210242	Identifier	flagdesc		4210146	1					
ANR	4210243	CallExpression	"r_str_newf ( ""%s%d"" , f -> name , delta )"		4210146	1					
ANR	4210244	Callee	r_str_newf		4210146	0					
ANR	4210245	Identifier	r_str_newf		4210146	0					
ANR	4210246	ArgumentList	"""%s%d"""		4210146	1					
ANR	4210247	Argument	"""%s%d"""		4210146	0					
ANR	4210248	PrimaryExpression	"""%s%d"""		4210146	0					
ANR	4210249	Argument	f -> name		4210146	1					
ANR	4210250	PtrMemberAccess	f -> name		4210146	0					
ANR	4210251	Identifier	f		4210146	0					
ANR	4210252	Identifier	name		4210146	1					
ANR	4210253	Argument	delta		4210146	2					
ANR	4210254	Identifier	delta		4210146	0					
ANR	4210255	ElseStatement	else		4210146	0					
ANR	4210256	CompoundStatement		12:10:352:352	4210146	0					
ANR	4210257	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"	2972:4:87152:87190	4210146	0	True				
ANR	4210258	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"		4210146	0		=			
ANR	4210259	UnaryOperationExpression	* flagdesc		4210146	0					
ANR	4210260	UnaryOperator	*		4210146	0					
ANR	4210261	Identifier	flagdesc		4210146	1					
ANR	4210262	CallExpression	"r_str_newf ( ""%s"" , f -> name )"		4210146	1					
ANR	4210263	Callee	r_str_newf		4210146	0					
ANR	4210264	Identifier	r_str_newf		4210146	0					
ANR	4210265	ArgumentList	"""%s"""		4210146	1					
ANR	4210266	Argument	"""%s"""		4210146	0					
ANR	4210267	PrimaryExpression	"""%s"""		4210146	0					
ANR	4210268	Argument	f -> name		4210146	1					
ANR	4210269	PtrMemberAccess	f -> name		4210146	0					
ANR	4210270	Identifier	f		4210146	0					
ANR	4210271	Identifier	name		4210146	1					
ANR	4210272	ElseStatement	else		4210146	0					
ANR	4210273	CompoundStatement		15:9:412:412	4210146	0					
ANR	4210274	ExpressionStatement	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"	2975:3:87211:87249	4210146	0	True				
ANR	4210275	AssignmentExpression	"* flagdesc = r_str_newf ( ""%s"" , f -> name )"		4210146	0		=			
ANR	4210276	UnaryOperationExpression	* flagdesc		4210146	0					
ANR	4210277	UnaryOperator	*		4210146	0					
ANR	4210278	Identifier	flagdesc		4210146	1					
ANR	4210279	CallExpression	"r_str_newf ( ""%s"" , f -> name )"		4210146	1					
ANR	4210280	Callee	r_str_newf		4210146	0					
ANR	4210281	Identifier	r_str_newf		4210146	0					
ANR	4210282	ArgumentList	"""%s"""		4210146	1					
ANR	4210283	Argument	"""%s"""		4210146	0					
ANR	4210284	PrimaryExpression	"""%s"""		4210146	0					
ANR	4210285	Argument	f -> name		4210146	1					
ANR	4210286	PtrMemberAccess	f -> name		4210146	0					
ANR	4210287	Identifier	f		4210146	0					
ANR	4210288	Identifier	name		4210146	1					
ANR	4210289	ExpressionStatement	"f = r_flag_get_at ( core -> flags , frame -> addr , true )"	2978:1:87259:87309	4210146	4	True				
ANR	4210290	AssignmentExpression	"f = r_flag_get_at ( core -> flags , frame -> addr , true )"		4210146	0		=			
ANR	4210291	Identifier	f		4210146	0					
ANR	4210292	CallExpression	"r_flag_get_at ( core -> flags , frame -> addr , true )"		4210146	1					
ANR	4210293	Callee	r_flag_get_at		4210146	0					
ANR	4210294	Identifier	r_flag_get_at		4210146	0					
ANR	4210295	ArgumentList	core -> flags		4210146	1					
ANR	4210296	Argument	core -> flags		4210146	0					
ANR	4210297	PtrMemberAccess	core -> flags		4210146	0					
ANR	4210298	Identifier	core		4210146	0					
ANR	4210299	Identifier	flags		4210146	1					
ANR	4210300	Argument	frame -> addr		4210146	1					
ANR	4210301	PtrMemberAccess	frame -> addr		4210146	0					
ANR	4210302	Identifier	frame		4210146	0					
ANR	4210303	Identifier	addr		4210146	1					
ANR	4210304	Argument	true		4210146	2					
ANR	4210305	Identifier	true		4210146	0					
ANR	4210306	IfStatement	"if ( f && ! strchr ( f -> name , '.' ) )"		4210146	5					
ANR	4210307	Condition	"f && ! strchr ( f -> name , '.' )"	2979:5:87316:87342	4210146	0	True				
ANR	4210308	AndExpression	"f && ! strchr ( f -> name , '.' )"		4210146	0		&&			
ANR	4210309	Identifier	f		4210146	0					
ANR	4210310	UnaryOperationExpression	"! strchr ( f -> name , '.' )"		4210146	1					
ANR	4210311	UnaryOperator	!		4210146	0					
ANR	4210312	CallExpression	"strchr ( f -> name , '.' )"		4210146	1					
ANR	4210313	Callee	strchr		4210146	0					
ANR	4210314	Identifier	strchr		4210146	0					
ANR	4210315	ArgumentList	f -> name		4210146	1					
ANR	4210316	Argument	f -> name		4210146	0					
ANR	4210317	PtrMemberAccess	f -> name		4210146	0					
ANR	4210318	Identifier	f		4210146	0					
ANR	4210319	Identifier	name		4210146	1					
ANR	4210320	Argument	'.'		4210146	1					
ANR	4210321	PrimaryExpression	'.'		4210146	0					
ANR	4210322	CompoundStatement		20:34:551:551	4210146	1					
ANR	4210323	ExpressionStatement	"f = r_flag_get_at ( core -> flags , frame -> addr - 1 , true )"	2980:2:87349:87403	4210146	0	True				
ANR	4210324	AssignmentExpression	"f = r_flag_get_at ( core -> flags , frame -> addr - 1 , true )"		4210146	0		=			
ANR	4210325	Identifier	f		4210146	0					
ANR	4210326	CallExpression	"r_flag_get_at ( core -> flags , frame -> addr - 1 , true )"		4210146	1					
ANR	4210327	Callee	r_flag_get_at		4210146	0					
ANR	4210328	Identifier	r_flag_get_at		4210146	0					
ANR	4210329	ArgumentList	core -> flags		4210146	1					
ANR	4210330	Argument	core -> flags		4210146	0					
ANR	4210331	PtrMemberAccess	core -> flags		4210146	0					
ANR	4210332	Identifier	core		4210146	0					
ANR	4210333	Identifier	flags		4210146	1					
ANR	4210334	Argument	frame -> addr - 1		4210146	1					
ANR	4210335	AdditiveExpression	frame -> addr - 1		4210146	0		-			
ANR	4210336	PtrMemberAccess	frame -> addr		4210146	0					
ANR	4210337	Identifier	frame		4210146	0					
ANR	4210338	Identifier	addr		4210146	1					
ANR	4210339	PrimaryExpression	1		4210146	1					
ANR	4210340	Argument	true		4210146	2					
ANR	4210341	Identifier	true		4210146	0					
ANR	4210342	IfStatement	if ( f )		4210146	6					
ANR	4210343	Condition	f	2982:5:87413:87413	4210146	0	True				
ANR	4210344	Identifier	f		4210146	0					
ANR	4210345	CompoundStatement		23:8:622:622	4210146	1					
ANR	4210346	IfStatement	if ( f -> offset != addr )		4210146	0					
ANR	4210347	Condition	f -> offset != addr	2983:6:87424:87440	4210146	0	True				
ANR	4210348	EqualityExpression	f -> offset != addr		4210146	0		!=			
ANR	4210349	PtrMemberAccess	f -> offset		4210146	0					
ANR	4210350	Identifier	f		4210146	0					
ANR	4210351	Identifier	offset		4210146	1					
ANR	4210352	Identifier	addr		4210146	1					
ANR	4210353	CompoundStatement		25:3:654:700	4210146	1					
ANR	4210354	IdentifierDeclStatement	int delta = ( int ) ( frame -> addr - 1 - f -> offset ) ;	2984:3:87448:87494	4210146	0	True				
ANR	4210355	IdentifierDecl	delta = ( int ) ( frame -> addr - 1 - f -> offset )		4210146	0					
ANR	4210356	IdentifierDeclType	int		4210146	0					
ANR	4210357	Identifier	delta		4210146	1					
ANR	4210358	AssignmentExpression	delta = ( int ) ( frame -> addr - 1 - f -> offset )		4210146	2		=			
ANR	4210359	Identifier	delta		4210146	0					
ANR	4210360	CastExpression	( int ) ( frame -> addr - 1 - f -> offset )		4210146	1					
ANR	4210361	CastTarget	int		4210146	0					
ANR	4210362	AdditiveExpression	frame -> addr - 1 - f -> offset		4210146	1		-			
ANR	4210363	PtrMemberAccess	frame -> addr		4210146	0					
ANR	4210364	Identifier	frame		4210146	0					
ANR	4210365	Identifier	addr		4210146	1					
ANR	4210366	AdditiveExpression	1 - f -> offset		4210146	1		-			
ANR	4210367	PrimaryExpression	1		4210146	0					
ANR	4210368	PtrMemberAccess	f -> offset		4210146	1					
ANR	4210369	Identifier	f		4210146	0					
ANR	4210370	Identifier	offset		4210146	1					
ANR	4210371	IfStatement	if ( delta > 0 )		4210146	1					
ANR	4210372	Condition	delta > 0	2985:7:87503:87511	4210146	0	True				
ANR	4210373	RelationalExpression	delta > 0		4210146	0		>			
ANR	4210374	Identifier	delta		4210146	0					
ANR	4210375	PrimaryExpression	0		4210146	1					
ANR	4210376	CompoundStatement		26:18:720:720	4210146	1					
ANR	4210377	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s+%d"" , f -> name , delta + 1 )"	2986:4:87520:87573	4210146	0	True				
ANR	4210378	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s+%d"" , f -> name , delta + 1 )"		4210146	0		=			
ANR	4210379	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210380	UnaryOperator	*		4210146	0					
ANR	4210381	Identifier	flagdesc2		4210146	1					
ANR	4210382	CallExpression	"r_str_newf ( ""%s+%d"" , f -> name , delta + 1 )"		4210146	1					
ANR	4210383	Callee	r_str_newf		4210146	0					
ANR	4210384	Identifier	r_str_newf		4210146	0					
ANR	4210385	ArgumentList	"""%s+%d"""		4210146	1					
ANR	4210386	Argument	"""%s+%d"""		4210146	0					
ANR	4210387	PrimaryExpression	"""%s+%d"""		4210146	0					
ANR	4210388	Argument	f -> name		4210146	1					
ANR	4210389	PtrMemberAccess	f -> name		4210146	0					
ANR	4210390	Identifier	f		4210146	0					
ANR	4210391	Identifier	name		4210146	1					
ANR	4210392	Argument	delta + 1		4210146	2					
ANR	4210393	AdditiveExpression	delta + 1		4210146	0		+			
ANR	4210394	Identifier	delta		4210146	0					
ANR	4210395	PrimaryExpression	1		4210146	1					
ANR	4210396	ElseStatement	else		4210146	0					
ANR	4210397	IfStatement	if ( delta < 0 )		4210146	0					
ANR	4210398	Condition	delta < 0	2987:14:87589:87597	4210146	0	True				
ANR	4210399	RelationalExpression	delta < 0		4210146	0		<			
ANR	4210400	Identifier	delta		4210146	0					
ANR	4210401	PrimaryExpression	0		4210146	1					
ANR	4210402	CompoundStatement		28:25:806:806	4210146	1					
ANR	4210403	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s%d"" , f -> name , delta + 1 )"	2988:4:87606:87658	4210146	0	True				
ANR	4210404	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s%d"" , f -> name , delta + 1 )"		4210146	0		=			
ANR	4210405	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210406	UnaryOperator	*		4210146	0					
ANR	4210407	Identifier	flagdesc2		4210146	1					
ANR	4210408	CallExpression	"r_str_newf ( ""%s%d"" , f -> name , delta + 1 )"		4210146	1					
ANR	4210409	Callee	r_str_newf		4210146	0					
ANR	4210410	Identifier	r_str_newf		4210146	0					
ANR	4210411	ArgumentList	"""%s%d"""		4210146	1					
ANR	4210412	Argument	"""%s%d"""		4210146	0					
ANR	4210413	PrimaryExpression	"""%s%d"""		4210146	0					
ANR	4210414	Argument	f -> name		4210146	1					
ANR	4210415	PtrMemberAccess	f -> name		4210146	0					
ANR	4210416	Identifier	f		4210146	0					
ANR	4210417	Identifier	name		4210146	1					
ANR	4210418	Argument	delta + 1		4210146	2					
ANR	4210419	AdditiveExpression	delta + 1		4210146	0		+			
ANR	4210420	Identifier	delta		4210146	0					
ANR	4210421	PrimaryExpression	1		4210146	1					
ANR	4210422	ElseStatement	else		4210146	0					
ANR	4210423	CompoundStatement		30:10:876:876	4210146	0					
ANR	4210424	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s+1"" , f -> name )"	2990:4:87676:87717	4210146	0	True				
ANR	4210425	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s+1"" , f -> name )"		4210146	0		=			
ANR	4210426	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210427	UnaryOperator	*		4210146	0					
ANR	4210428	Identifier	flagdesc2		4210146	1					
ANR	4210429	CallExpression	"r_str_newf ( ""%s+1"" , f -> name )"		4210146	1					
ANR	4210430	Callee	r_str_newf		4210146	0					
ANR	4210431	Identifier	r_str_newf		4210146	0					
ANR	4210432	ArgumentList	"""%s+1"""		4210146	1					
ANR	4210433	Argument	"""%s+1"""		4210146	0					
ANR	4210434	PrimaryExpression	"""%s+1"""		4210146	0					
ANR	4210435	Argument	f -> name		4210146	1					
ANR	4210436	PtrMemberAccess	f -> name		4210146	0					
ANR	4210437	Identifier	f		4210146	0					
ANR	4210438	Identifier	name		4210146	1					
ANR	4210439	ElseStatement	else		4210146	0					
ANR	4210440	CompoundStatement		33:9:939:939	4210146	0					
ANR	4210441	ExpressionStatement	"* flagdesc2 = r_str_newf ( ""%s"" , f -> name )"	2993:3:87738:87777	4210146	0	True				
ANR	4210442	AssignmentExpression	"* flagdesc2 = r_str_newf ( ""%s"" , f -> name )"		4210146	0		=			
ANR	4210443	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210444	UnaryOperator	*		4210146	0					
ANR	4210445	Identifier	flagdesc2		4210146	1					
ANR	4210446	CallExpression	"r_str_newf ( ""%s"" , f -> name )"		4210146	1					
ANR	4210447	Callee	r_str_newf		4210146	0					
ANR	4210448	Identifier	r_str_newf		4210146	0					
ANR	4210449	ArgumentList	"""%s"""		4210146	1					
ANR	4210450	Argument	"""%s"""		4210146	0					
ANR	4210451	PrimaryExpression	"""%s"""		4210146	0					
ANR	4210452	Argument	f -> name		4210146	1					
ANR	4210453	PtrMemberAccess	f -> name		4210146	0					
ANR	4210454	Identifier	f		4210146	0					
ANR	4210455	Identifier	name		4210146	1					
ANR	4210456	IfStatement	"if ( ! r_str_cmp ( * flagdesc , * flagdesc2 , - 1 ) )"		4210146	7					
ANR	4210457	Condition	"! r_str_cmp ( * flagdesc , * flagdesc2 , - 1 )"	2996:5:87791:87828	4210146	0	True				
ANR	4210458	UnaryOperationExpression	"! r_str_cmp ( * flagdesc , * flagdesc2 , - 1 )"		4210146	0					
ANR	4210459	UnaryOperator	!		4210146	0					
ANR	4210460	CallExpression	"r_str_cmp ( * flagdesc , * flagdesc2 , - 1 )"		4210146	1					
ANR	4210461	Callee	r_str_cmp		4210146	0					
ANR	4210462	Identifier	r_str_cmp		4210146	0					
ANR	4210463	ArgumentList	* flagdesc		4210146	1					
ANR	4210464	Argument	* flagdesc		4210146	0					
ANR	4210465	UnaryOperationExpression	* flagdesc		4210146	0					
ANR	4210466	UnaryOperator	*		4210146	0					
ANR	4210467	Identifier	flagdesc		4210146	1					
ANR	4210468	Argument	* flagdesc2		4210146	1					
ANR	4210469	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210470	UnaryOperator	*		4210146	0					
ANR	4210471	Identifier	flagdesc2		4210146	1					
ANR	4210472	Argument	- 1		4210146	2					
ANR	4210473	UnaryOperationExpression	- 1		4210146	0					
ANR	4210474	UnaryOperator	-		4210146	0					
ANR	4210475	PrimaryExpression	1		4210146	1					
ANR	4210476	CompoundStatement		37:45:1037:1037	4210146	1					
ANR	4210477	ExpressionStatement	free ( * flagdesc2 )	2997:2:87835:87852	4210146	0	True				
ANR	4210478	CallExpression	free ( * flagdesc2 )		4210146	0					
ANR	4210479	Callee	free		4210146	0					
ANR	4210480	Identifier	free		4210146	0					
ANR	4210481	ArgumentList	* flagdesc2		4210146	1					
ANR	4210482	Argument	* flagdesc2		4210146	0					
ANR	4210483	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210484	UnaryOperator	*		4210146	0					
ANR	4210485	Identifier	flagdesc2		4210146	1					
ANR	4210486	ExpressionStatement	* flagdesc2 = NULL	2998:2:87856:87873	4210146	1	True				
ANR	4210487	AssignmentExpression	* flagdesc2 = NULL		4210146	0		=			
ANR	4210488	UnaryOperationExpression	* flagdesc2		4210146	0					
ANR	4210489	UnaryOperator	*		4210146	0					
ANR	4210490	Identifier	flagdesc2		4210146	1					
ANR	4210491	Identifier	NULL		4210146	1					
ANR	4210492	IfStatement	if ( hex_format )		4210146	8					
ANR	4210493	Condition	hex_format	3000:5:87883:87892	4210146	0	True				
ANR	4210494	Identifier	hex_format		4210146	0					
ANR	4210495	CompoundStatement		41:17:1101:1101	4210146	1					
ANR	4210496	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_64 )		4210146	0					
ANR	4210497	Condition	core -> dbg -> bits & R_SYS_BITS_64	3001:6:87903:87933	4210146	0	True				
ANR	4210498	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_64		4210146	0		&			
ANR	4210499	PtrMemberAccess	core -> dbg -> bits		4210146	0					
ANR	4210500	PtrMemberAccess	core -> dbg		4210146	0					
ANR	4210501	Identifier	core		4210146	0					
ANR	4210502	Identifier	dbg		4210146	1					
ANR	4210503	Identifier	bits		4210146	1					
ANR	4210504	Identifier	R_SYS_BITS_64		4210146	1					
ANR	4210505	CompoundStatement		42:39:1142:1142	4210146	1					
ANR	4210506	Statement	*	3002:3:87941:87941	4210146	0	True				
ANR	4210507	Statement	pcstr	3002:4:87942:87946	4210146	1	True				
ANR	4210508	Statement	=	3002:10:87948:87948	4210146	2	True				
ANR	4210509	Statement	r_str_newf	3002:12:87950:87959	4210146	3	True				
ANR	4210510	Statement	(	3002:23:87961:87961	4210146	4	True				
ANR	4210511	Statement	"""0x%-16"""	3002:24:87962:87969	4210146	5	True				
ANR	4210512	Statement	PFMT64x	3002:33:87971:87977	4210146	6	True				
ANR	4210513	Statement	","	3002:40:87978:87978	4210146	7	True				
ANR	4210514	Statement	frame	3002:42:87980:87984	4210146	8	True				
ANR	4210515	Statement	->	3002:47:87985:87986	4210146	9	True				
ANR	4210516	Statement	addr	3002:49:87987:87990	4210146	10	True				
ANR	4210517	Statement	)	3002:53:87991:87991	4210146	11	True				
ANR	4210518	ExpressionStatement		3002:54:87992:87992	4210146	12	True				
ANR	4210519	Statement	*	3003:3:87997:87997	4210146	13	True				
ANR	4210520	Statement	spstr	3003:4:87998:88002	4210146	14	True				
ANR	4210521	Statement	=	3003:10:88004:88004	4210146	15	True				
ANR	4210522	Statement	r_str_newf	3003:12:88006:88015	4210146	16	True				
ANR	4210523	Statement	(	3003:23:88017:88017	4210146	17	True				
ANR	4210524	Statement	"""0x%-16"""	3003:24:88018:88025	4210146	18	True				
ANR	4210525	Statement	PFMT64x	3003:33:88027:88033	4210146	19	True				
ANR	4210526	Statement	","	3003:40:88034:88034	4210146	20	True				
ANR	4210527	Statement	frame	3003:42:88036:88040	4210146	21	True				
ANR	4210528	Statement	->	3003:47:88041:88042	4210146	22	True				
ANR	4210529	Statement	sp	3003:49:88043:88044	4210146	23	True				
ANR	4210530	Statement	)	3003:51:88045:88045	4210146	24	True				
ANR	4210531	ExpressionStatement		3003:52:88046:88046	4210146	25	True				
ANR	4210532	ElseStatement	else		4210146	0					
ANR	4210533	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_32 )		4210146	0					
ANR	4210534	Condition	core -> dbg -> bits & R_SYS_BITS_32	3004:13:88061:88091	4210146	0	True				
ANR	4210535	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_32		4210146	0		&			
ANR	4210536	PtrMemberAccess	core -> dbg -> bits		4210146	0					
ANR	4210537	PtrMemberAccess	core -> dbg		4210146	0					
ANR	4210538	Identifier	core		4210146	0					
ANR	4210539	Identifier	dbg		4210146	1					
ANR	4210540	Identifier	bits		4210146	1					
ANR	4210541	Identifier	R_SYS_BITS_32		4210146	1					
ANR	4210542	CompoundStatement		45:46:1300:1300	4210146	1					
ANR	4210543	Statement	*	3005:3:88099:88099	4210146	0	True				
ANR	4210544	Statement	pcstr	3005:4:88100:88104	4210146	1	True				
ANR	4210545	Statement	=	3005:10:88106:88106	4210146	2	True				
ANR	4210546	Statement	r_str_newf	3005:12:88108:88117	4210146	3	True				
ANR	4210547	Statement	(	3005:23:88119:88119	4210146	4	True				
ANR	4210548	Statement	"""0x%-8"""	3005:24:88120:88126	4210146	5	True				
ANR	4210549	Statement	PFMT64x	3005:32:88128:88134	4210146	6	True				
ANR	4210550	Statement	","	3005:39:88135:88135	4210146	7	True				
ANR	4210551	Statement	frame	3005:41:88137:88141	4210146	8	True				
ANR	4210552	Statement	->	3005:46:88142:88143	4210146	9	True				
ANR	4210553	Statement	addr	3005:48:88144:88147	4210146	10	True				
ANR	4210554	Statement	)	3005:52:88148:88148	4210146	11	True				
ANR	4210555	ExpressionStatement		3005:53:88149:88149	4210146	12	True				
ANR	4210556	Statement	*	3006:3:88154:88154	4210146	13	True				
ANR	4210557	Statement	spstr	3006:4:88155:88159	4210146	14	True				
ANR	4210558	Statement	=	3006:10:88161:88161	4210146	15	True				
ANR	4210559	Statement	r_str_newf	3006:12:88163:88172	4210146	16	True				
ANR	4210560	Statement	(	3006:23:88174:88174	4210146	17	True				
ANR	4210561	Statement	"""0x%-8"""	3006:24:88175:88181	4210146	18	True				
ANR	4210562	Statement	PFMT64x	3006:32:88183:88189	4210146	19	True				
ANR	4210563	Statement	","	3006:39:88190:88190	4210146	20	True				
ANR	4210564	Statement	frame	3006:41:88192:88196	4210146	21	True				
ANR	4210565	Statement	->	3006:46:88197:88198	4210146	22	True				
ANR	4210566	Statement	sp	3006:48:88199:88200	4210146	23	True				
ANR	4210567	Statement	)	3006:50:88201:88201	4210146	24	True				
ANR	4210568	ExpressionStatement		3006:51:88202:88202	4210146	25	True				
ANR	4210569	ElseStatement	else		4210146	0					
ANR	4210570	CompoundStatement		48:9:1419:1419	4210146	0					
ANR	4210571	Statement	*	3008:3:88218:88218	4210146	0	True				
ANR	4210572	Statement	pcstr	3008:4:88219:88223	4210146	1	True				
ANR	4210573	Statement	=	3008:10:88225:88225	4210146	2	True				
ANR	4210574	Statement	r_str_newf	3008:12:88227:88236	4210146	3	True				
ANR	4210575	Statement	(	3008:23:88238:88238	4210146	4	True				
ANR	4210576	Statement	"""0x%"""	3008:24:88239:88243	4210146	5	True				
ANR	4210577	Statement	PFMT64x	3008:30:88245:88251	4210146	6	True				
ANR	4210578	Statement	","	3008:37:88252:88252	4210146	7	True				
ANR	4210579	Statement	frame	3008:39:88254:88258	4210146	8	True				
ANR	4210580	Statement	->	3008:44:88259:88260	4210146	9	True				
ANR	4210581	Statement	addr	3008:46:88261:88264	4210146	10	True				
ANR	4210582	Statement	)	3008:50:88265:88265	4210146	11	True				
ANR	4210583	ExpressionStatement		3008:51:88266:88266	4210146	12	True				
ANR	4210584	Statement	*	3009:3:88271:88271	4210146	13	True				
ANR	4210585	Statement	spstr	3009:4:88272:88276	4210146	14	True				
ANR	4210586	Statement	=	3009:10:88278:88278	4210146	15	True				
ANR	4210587	Statement	r_str_newf	3009:12:88280:88289	4210146	16	True				
ANR	4210588	Statement	(	3009:23:88291:88291	4210146	17	True				
ANR	4210589	Statement	"""0x%"""	3009:24:88292:88296	4210146	18	True				
ANR	4210590	Statement	PFMT64x	3009:30:88298:88304	4210146	19	True				
ANR	4210591	Statement	","	3009:37:88305:88305	4210146	20	True				
ANR	4210592	Statement	frame	3009:39:88307:88311	4210146	21	True				
ANR	4210593	Statement	->	3009:44:88312:88313	4210146	22	True				
ANR	4210594	Statement	sp	3009:46:88314:88315	4210146	23	True				
ANR	4210595	Statement	)	3009:48:88316:88316	4210146	24	True				
ANR	4210596	ExpressionStatement		3009:49:88317:88317	4210146	25	True				
ANR	4210597	ElseStatement	else		4210146	0					
ANR	4210598	CompoundStatement		52:8:1537:1537	4210146	0					
ANR	4210599	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_64 )		4210146	0					
ANR	4210600	Condition	core -> dbg -> bits & R_SYS_BITS_64	3012:6:88339:88369	4210146	0	True				
ANR	4210601	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_64		4210146	0		&			
ANR	4210602	PtrMemberAccess	core -> dbg -> bits		4210146	0					
ANR	4210603	PtrMemberAccess	core -> dbg		4210146	0					
ANR	4210604	Identifier	core		4210146	0					
ANR	4210605	Identifier	dbg		4210146	1					
ANR	4210606	Identifier	bits		4210146	1					
ANR	4210607	Identifier	R_SYS_BITS_64		4210146	1					
ANR	4210608	CompoundStatement		53:39:1578:1578	4210146	1					
ANR	4210609	Statement	*	3013:3:88377:88377	4210146	0	True				
ANR	4210610	Statement	pcstr	3013:4:88378:88382	4210146	1	True				
ANR	4210611	Statement	=	3013:10:88384:88384	4210146	2	True				
ANR	4210612	Statement	r_str_newf	3013:12:88386:88395	4210146	3	True				
ANR	4210613	Statement	(	3013:23:88397:88397	4210146	4	True				
ANR	4210614	Statement	"""%"""	3013:24:88398:88400	4210146	5	True				
ANR	4210615	Statement	PFMT64d	3013:28:88402:88408	4210146	6	True				
ANR	4210616	Statement	","	3013:35:88409:88409	4210146	7	True				
ANR	4210617	Statement	frame	3013:37:88411:88415	4210146	8	True				
ANR	4210618	Statement	->	3013:42:88416:88417	4210146	9	True				
ANR	4210619	Statement	addr	3013:44:88418:88421	4210146	10	True				
ANR	4210620	Statement	)	3013:48:88422:88422	4210146	11	True				
ANR	4210621	ExpressionStatement		3013:49:88423:88423	4210146	12	True				
ANR	4210622	Statement	*	3014:3:88428:88428	4210146	13	True				
ANR	4210623	Statement	spstr	3014:4:88429:88433	4210146	14	True				
ANR	4210624	Statement	=	3014:10:88435:88435	4210146	15	True				
ANR	4210625	Statement	r_str_newf	3014:12:88437:88446	4210146	16	True				
ANR	4210626	Statement	(	3014:23:88448:88448	4210146	17	True				
ANR	4210627	Statement	"""%"""	3014:24:88449:88451	4210146	18	True				
ANR	4210628	Statement	PFMT64d	3014:28:88453:88459	4210146	19	True				
ANR	4210629	Statement	","	3014:35:88460:88460	4210146	20	True				
ANR	4210630	Statement	frame	3014:37:88462:88466	4210146	21	True				
ANR	4210631	Statement	->	3014:42:88467:88468	4210146	22	True				
ANR	4210632	Statement	sp	3014:44:88469:88470	4210146	23	True				
ANR	4210633	Statement	)	3014:46:88471:88471	4210146	24	True				
ANR	4210634	ExpressionStatement		3014:47:88472:88472	4210146	25	True				
ANR	4210635	ElseStatement	else		4210146	0					
ANR	4210636	IfStatement	if ( core -> dbg -> bits & R_SYS_BITS_32 )		4210146	0					
ANR	4210637	Condition	core -> dbg -> bits & R_SYS_BITS_32	3015:13:88487:88517	4210146	0	True				
ANR	4210638	BitAndExpression	core -> dbg -> bits & R_SYS_BITS_32		4210146	0		&			
ANR	4210639	PtrMemberAccess	core -> dbg -> bits		4210146	0					
ANR	4210640	PtrMemberAccess	core -> dbg		4210146	0					
ANR	4210641	Identifier	core		4210146	0					
ANR	4210642	Identifier	dbg		4210146	1					
ANR	4210643	Identifier	bits		4210146	1					
ANR	4210644	Identifier	R_SYS_BITS_32		4210146	1					
ANR	4210645	CompoundStatement		56:46:1726:1726	4210146	1					
ANR	4210646	Statement	*	3016:3:88525:88525	4210146	0	True				
ANR	4210647	Statement	pcstr	3016:4:88526:88530	4210146	1	True				
ANR	4210648	Statement	=	3016:10:88532:88532	4210146	2	True				
ANR	4210649	Statement	r_str_newf	3016:12:88534:88543	4210146	3	True				
ANR	4210650	Statement	(	3016:23:88545:88545	4210146	4	True				
ANR	4210651	Statement	"""%"""	3016:24:88546:88548	4210146	5	True				
ANR	4210652	Statement	PFMT64d	3016:28:88550:88556	4210146	6	True				
ANR	4210653	Statement	","	3016:35:88557:88557	4210146	7	True				
ANR	4210654	Statement	frame	3016:37:88559:88563	4210146	8	True				
ANR	4210655	Statement	->	3016:42:88564:88565	4210146	9	True				
ANR	4210656	Statement	addr	3016:44:88566:88569	4210146	10	True				
ANR	4210657	Statement	)	3016:48:88570:88570	4210146	11	True				
ANR	4210658	ExpressionStatement		3016:49:88571:88571	4210146	12	True				
ANR	4210659	Statement	*	3017:3:88576:88576	4210146	13	True				
ANR	4210660	Statement	spstr	3017:4:88577:88581	4210146	14	True				
ANR	4210661	Statement	=	3017:10:88583:88583	4210146	15	True				
ANR	4210662	Statement	r_str_newf	3017:12:88585:88594	4210146	16	True				
ANR	4210663	Statement	(	3017:23:88596:88596	4210146	17	True				
ANR	4210664	Statement	"""%"""	3017:24:88597:88599	4210146	18	True				
ANR	4210665	Statement	PFMT64d	3017:28:88601:88607	4210146	19	True				
ANR	4210666	Statement	","	3017:35:88608:88608	4210146	20	True				
ANR	4210667	Statement	frame	3017:37:88610:88614	4210146	21	True				
ANR	4210668	Statement	->	3017:42:88615:88616	4210146	22	True				
ANR	4210669	Statement	sp	3017:44:88617:88618	4210146	23	True				
ANR	4210670	Statement	)	3017:46:88619:88619	4210146	24	True				
ANR	4210671	ExpressionStatement		3017:47:88620:88620	4210146	25	True				
ANR	4210672	ElseStatement	else		4210146	0					
ANR	4210673	CompoundStatement		59:9:1837:1837	4210146	0					
ANR	4210674	Statement	*	3019:3:88636:88636	4210146	0	True				
ANR	4210675	Statement	pcstr	3019:4:88637:88641	4210146	1	True				
ANR	4210676	Statement	=	3019:10:88643:88643	4210146	2	True				
ANR	4210677	Statement	r_str_newf	3019:12:88645:88654	4210146	3	True				
ANR	4210678	Statement	(	3019:23:88656:88656	4210146	4	True				
ANR	4210679	Statement	"""%"""	3019:24:88657:88659	4210146	5	True				
ANR	4210680	Statement	PFMT64d	3019:28:88661:88667	4210146	6	True				
ANR	4210681	Statement	","	3019:35:88668:88668	4210146	7	True				
ANR	4210682	Statement	frame	3019:37:88670:88674	4210146	8	True				
ANR	4210683	Statement	->	3019:42:88675:88676	4210146	9	True				
ANR	4210684	Statement	addr	3019:44:88677:88680	4210146	10	True				
ANR	4210685	Statement	)	3019:48:88681:88681	4210146	11	True				
ANR	4210686	ExpressionStatement		3019:49:88682:88682	4210146	12	True				
ANR	4210687	Statement	*	3020:3:88687:88687	4210146	13	True				
ANR	4210688	Statement	spstr	3020:4:88688:88692	4210146	14	True				
ANR	4210689	Statement	=	3020:10:88694:88694	4210146	15	True				
ANR	4210690	Statement	r_str_newf	3020:12:88696:88705	4210146	16	True				
ANR	4210691	Statement	(	3020:23:88707:88707	4210146	17	True				
ANR	4210692	Statement	"""%"""	3020:24:88708:88710	4210146	18	True				
ANR	4210693	Statement	PFMT64d	3020:28:88712:88718	4210146	19	True				
ANR	4210694	Statement	","	3020:35:88719:88719	4210146	20	True				
ANR	4210695	Statement	frame	3020:37:88721:88725	4210146	21	True				
ANR	4210696	Statement	->	3020:42:88726:88727	4210146	22	True				
ANR	4210697	Statement	sp	3020:44:88728:88729	4210146	23	True				
ANR	4210698	Statement	)	3020:46:88730:88730	4210146	24	True				
ANR	4210699	ExpressionStatement		3020:47:88731:88731	4210146	25	True				
ANR	4210700	ReturnType	static void		4210146	1					
ANR	4210701	Identifier	get_backtrace_info		4210146	2					
ANR	4210702	ParameterList	"RCore * core , RDebugFrame * frame , ut64 addr , char * * flagdesc , char * * flagdesc2 , char * * pcstr , char * * spstr , bool hex_format"		4210146	3					
ANR	4210703	Parameter	RCore * core	2960:31:86669:86679	4210146	0	True				
ANR	4210704	ParameterType	RCore *		4210146	0					
ANR	4210705	Identifier	core		4210146	1					
ANR	4210706	Parameter	RDebugFrame * frame	2960:44:86682:86699	4210146	1	True				
ANR	4210707	ParameterType	RDebugFrame *		4210146	0					
ANR	4210708	Identifier	frame		4210146	1					
ANR	4210709	Parameter	ut64 addr	2960:64:86702:86710	4210146	2	True				
ANR	4210710	ParameterType	ut64		4210146	0					
ANR	4210711	Identifier	addr		4210146	1					
ANR	4210712	Parameter	char * * flagdesc	2960:75:86713:86727	4210146	3	True				
ANR	4210713	ParameterType	char * *		4210146	0					
ANR	4210714	Identifier	flagdesc		4210146	1					
ANR	4210715	Parameter	char * * flagdesc2	2960:92:86730:86745	4210146	4	True				
ANR	4210716	ParameterType	char * *		4210146	0					
ANR	4210717	Identifier	flagdesc2		4210146	1					
ANR	4210718	Parameter	char * * pcstr	2960:110:86748:86759	4210146	5	True				
ANR	4210719	ParameterType	char * *		4210146	0					
ANR	4210720	Identifier	pcstr		4210146	1					
ANR	4210721	Parameter	char * * spstr	2960:124:86762:86773	4210146	6	True				
ANR	4210722	ParameterType	char * *		4210146	0					
ANR	4210723	Identifier	spstr		4210146	1					
ANR	4210724	Parameter	bool hex_format	2960:138:86776:86790	4210146	7	True				
ANR	4210725	ParameterType	bool		4210146	0					
ANR	4210726	Identifier	hex_format		4210146	1					
ANR	4210727	CFGEntryNode	ENTRY		4210146		True				
ANR	4210728	CFGExitNode	EXIT		4210146		True				
ANR	4210729	Symbol	flagdesc		4210146						
ANR	4210730	Symbol	* frame		4210146						
ANR	4210731	Symbol	f -> name		4210146						
ANR	4210732	Symbol	pcstr		4210146						
ANR	4210733	Symbol	* core		4210146						
ANR	4210734	Symbol	delta		4210146						
ANR	4210735	Symbol	strchr		4210146						
ANR	4210736	Symbol	r_str_newf		4210146						
ANR	4210737	Symbol	core -> dbg -> bits		4210146						
ANR	4210738	Symbol	frame -> addr		4210146						
ANR	4210739	Symbol	addr		4210146						
ANR	4210740	Symbol	R_SYS_BITS_64		4210146						
ANR	4210741	Symbol	* * core		4210146						
ANR	4210742	Symbol	* flagdesc		4210146						
ANR	4210743	Symbol	NULL		4210146						
ANR	4210744	Symbol	flagdesc2		4210146						
ANR	4210745	Symbol	f		4210146						
ANR	4210746	Symbol	hex_format		4210146						
ANR	4210747	Symbol	core -> flags		4210146						
ANR	4210748	Symbol	* f		4210146						
ANR	4210749	Symbol	r_str_cmp		4210146						
ANR	4210750	Symbol	core		4210146						
ANR	4210751	Symbol	f -> offset		4210146						
ANR	4210752	Symbol	true		4210146						
ANR	4210753	Symbol	* flagdesc2		4210146						
ANR	4210754	Symbol	spstr		4210146						
ANR	4210755	Symbol	r_flag_get_at		4210146						
ANR	4210756	Symbol	* core -> dbg		4210146						
ANR	4210757	Symbol	frame		4210146						
ANR	4210758	Symbol	core -> dbg		4210146						
ANR	4210759	Symbol	R_SYS_BITS_32		4210146						
ANR	4210760	Function	static_debug_stop	3025:0:88743:88833							
ANR	4210761	FunctionDef	static_debug_stop (void * u)		4210760	0					
ANR	4210762	CompoundStatement		3025:39:88782:88833	4210760	0					
ANR	4210763	IdentifierDeclStatement	RDebug * dbg = ( RDebug * ) u ;	3026:1:88785:88810	4210760	0	True				
ANR	4210764	IdentifierDecl	* dbg = ( RDebug * ) u		4210760	0					
ANR	4210765	IdentifierDeclType	RDebug *		4210760	0					
ANR	4210766	Identifier	dbg		4210760	1					
ANR	4210767	AssignmentExpression	* dbg = ( RDebug * ) u		4210760	2		=			
ANR	4210768	Identifier	dbg		4210760	0					
ANR	4210769	CastExpression	( RDebug * ) u		4210760	1					
ANR	4210770	CastTarget	RDebug *		4210760	0					
ANR	4210771	Identifier	u		4210760	1					
ANR	4210772	ExpressionStatement	r_debug_stop ( dbg )	3027:1:88813:88831	4210760	1	True				
ANR	4210773	CallExpression	r_debug_stop ( dbg )		4210760	0					
ANR	4210774	Callee	r_debug_stop		4210760	0					
ANR	4210775	Identifier	r_debug_stop		4210760	0					
ANR	4210776	ArgumentList	dbg		4210760	1					
ANR	4210777	Argument	dbg		4210760	0					
ANR	4210778	Identifier	dbg		4210760	0					
ANR	4210779	ReturnType	static void		4210760	1					
ANR	4210780	Identifier	static_debug_stop		4210760	2					
ANR	4210781	ParameterList	void * u		4210760	3					
ANR	4210782	Parameter	void * u	3025:30:88773:88779	4210760	0	True				
ANR	4210783	ParameterType	void *		4210760	0					
ANR	4210784	Identifier	u		4210760	1					
ANR	4210785	CFGEntryNode	ENTRY		4210760		True				
ANR	4210786	CFGExitNode	EXIT		4210760		True				
ANR	4210787	Symbol	u		4210760						
ANR	4210788	Symbol	dbg		4210760						
ANR	4210789	Function	core_cmd_dbi	3030:0:88836:91579							
ANR	4210790	FunctionDef	"core_cmd_dbi (RCore * core , const char * input , ut64 addr)"		4210789	0					
ANR	4210791	CompoundStatement		3030:69:88905:91579	4210789	0					
ANR	4210792	IdentifierDeclStatement	int i ;	3031:1:88908:88913	4210789	0	True				
ANR	4210793	IdentifierDecl	i		4210789	0					
ANR	4210794	IdentifierDeclType	int		4210789	0					
ANR	4210795	Identifier	i		4210789	1					
ANR	4210796	IdentifierDeclStatement	char * p ;	3032:1:88916:88923	4210789	1	True				
ANR	4210797	IdentifierDecl	* p		4210789	0					
ANR	4210798	IdentifierDeclType	char *		4210789	0					
ANR	4210799	Identifier	p		4210789	1					
ANR	4210800	IdentifierDeclStatement	RBreakpointItem * bpi ;	3033:1:88926:88946	4210789	2	True				
ANR	4210801	IdentifierDecl	* bpi		4210789	0					
ANR	4210802	IdentifierDeclType	RBreakpointItem *		4210789	0					
ANR	4210803	Identifier	bpi		4210789	1					
ANR	4210804	SwitchStatement	switch ( input [ 2 ] )		4210789	3					
ANR	4210805	Condition	input [ 2 ]	3034:9:88957:88964	4210789	0	True				
ANR	4210806	ArrayIndexing	input [ 2 ]		4210789	0					
ANR	4210807	Identifier	input		4210789	0					
ANR	4210808	PrimaryExpression	2		4210789	1					
ANR	4210809	CompoundStatement		5:19:61:61	4210789	1					
ANR	4210810	Label	case ' ' :	3035:1:88970:88978	4210789	0	True				
ANR	4210811	CompoundStatement		8:3:91:140	4210789	1					
ANR	4210812	IdentifierDeclStatement	"int idx = r_bp_get_index_at ( core -> dbg -> bp , addr ) ;"	3037:3:88997:89046	4210789	0	True				
ANR	4210813	IdentifierDecl	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		4210789	0					
ANR	4210814	IdentifierDeclType	int		4210789	0					
ANR	4210815	Identifier	idx		4210789	1					
ANR	4210816	AssignmentExpression	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		4210789	2		=			
ANR	4210817	Identifier	idx		4210789	0					
ANR	4210818	CallExpression	"r_bp_get_index_at ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4210819	Callee	r_bp_get_index_at		4210789	0					
ANR	4210820	Identifier	r_bp_get_index_at		4210789	0					
ANR	4210821	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4210822	Argument	core -> dbg -> bp		4210789	0					
ANR	4210823	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4210824	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4210825	Identifier	core		4210789	0					
ANR	4210826	Identifier	dbg		4210789	1					
ANR	4210827	Identifier	bp		4210789	1					
ANR	4210828	Argument	addr		4210789	1					
ANR	4210829	Identifier	addr		4210789	0					
ANR	4210830	IfStatement	if ( idx != - 1 )		4210789	1					
ANR	4210831	Condition	idx != - 1	3038:7:89055:89063	4210789	0	True				
ANR	4210832	EqualityExpression	idx != - 1		4210789	0		!=			
ANR	4210833	Identifier	idx		4210789	0					
ANR	4210834	UnaryOperationExpression	- 1		4210789	1					
ANR	4210835	UnaryOperator	-		4210789	0					
ANR	4210836	PrimaryExpression	1		4210789	1					
ANR	4210837	CompoundStatement		9:18:160:160	4210789	1					
ANR	4210838	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , idx )"	3039:4:89072:89099	4210789	0	True				
ANR	4210839	CallExpression	"r_cons_printf ( ""%d\\n"" , idx )"		4210789	0					
ANR	4210840	Callee	r_cons_printf		4210789	0					
ANR	4210841	Identifier	r_cons_printf		4210789	0					
ANR	4210842	ArgumentList	"""%d\\n"""		4210789	1					
ANR	4210843	Argument	"""%d\\n"""		4210789	0					
ANR	4210844	PrimaryExpression	"""%d\\n"""		4210789	0					
ANR	4210845	Argument	idx		4210789	1					
ANR	4210846	Identifier	idx		4210789	0					
ANR	4210847	BreakStatement	break ;	3042:2:89112:89117	4210789	2	True				
ANR	4210848	Label	case '.' :	3043:1:89120:89128	4210789	3	True				
ANR	4210849	CompoundStatement		16:3:241:298	4210789	4					
ANR	4210850	IdentifierDeclStatement	"int idx = r_bp_get_index_at ( core -> dbg -> bp , core -> offset ) ;"	3045:3:89147:89204	4210789	0	True				
ANR	4210851	IdentifierDecl	"idx = r_bp_get_index_at ( core -> dbg -> bp , core -> offset )"		4210789	0					
ANR	4210852	IdentifierDeclType	int		4210789	0					
ANR	4210853	Identifier	idx		4210789	1					
ANR	4210854	AssignmentExpression	"idx = r_bp_get_index_at ( core -> dbg -> bp , core -> offset )"		4210789	2		=			
ANR	4210855	Identifier	idx		4210789	0					
ANR	4210856	CallExpression	"r_bp_get_index_at ( core -> dbg -> bp , core -> offset )"		4210789	1					
ANR	4210857	Callee	r_bp_get_index_at		4210789	0					
ANR	4210858	Identifier	r_bp_get_index_at		4210789	0					
ANR	4210859	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4210860	Argument	core -> dbg -> bp		4210789	0					
ANR	4210861	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4210862	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4210863	Identifier	core		4210789	0					
ANR	4210864	Identifier	dbg		4210789	1					
ANR	4210865	Identifier	bp		4210789	1					
ANR	4210866	Argument	core -> offset		4210789	1					
ANR	4210867	PtrMemberAccess	core -> offset		4210789	0					
ANR	4210868	Identifier	core		4210789	0					
ANR	4210869	Identifier	offset		4210789	1					
ANR	4210870	IfStatement	if ( idx != - 1 )		4210789	1					
ANR	4210871	Condition	idx != - 1	3046:7:89213:89221	4210789	0	True				
ANR	4210872	EqualityExpression	idx != - 1		4210789	0		!=			
ANR	4210873	Identifier	idx		4210789	0					
ANR	4210874	UnaryOperationExpression	- 1		4210789	1					
ANR	4210875	UnaryOperator	-		4210789	0					
ANR	4210876	PrimaryExpression	1		4210789	1					
ANR	4210877	CompoundStatement		17:18:318:318	4210789	1					
ANR	4210878	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , idx )"	3047:4:89230:89257	4210789	0	True				
ANR	4210879	CallExpression	"r_cons_printf ( ""%d\\n"" , idx )"		4210789	0					
ANR	4210880	Callee	r_cons_printf		4210789	0					
ANR	4210881	Identifier	r_cons_printf		4210789	0					
ANR	4210882	ArgumentList	"""%d\\n"""		4210789	1					
ANR	4210883	Argument	"""%d\\n"""		4210789	0					
ANR	4210884	PrimaryExpression	"""%d\\n"""		4210789	0					
ANR	4210885	Argument	idx		4210789	1					
ANR	4210886	Identifier	idx		4210789	0					
ANR	4210887	BreakStatement	break ;	3050:2:89270:89275	4210789	5	True				
ANR	4210888	Label	case 0 :	3051:1:89278:89284	4210789	6	True				
ANR	4210889	ForStatement	for ( i = 0 ; i < core -> dbg -> bp -> bps_idx_count ; i ++ )		4210789	7					
ANR	4210890	ForInit	i = 0 ;	3052:7:89302:89307	4210789	0	True				
ANR	4210891	AssignmentExpression	i = 0		4210789	0		=			
ANR	4210892	Identifier	i		4210789	0					
ANR	4210893	PrimaryExpression	0		4210789	1					
ANR	4210894	Condition	i < core -> dbg -> bp -> bps_idx_count	3052:14:89309:89340	4210789	1	True				
ANR	4210895	RelationalExpression	i < core -> dbg -> bp -> bps_idx_count		4210789	0		<			
ANR	4210896	Identifier	i		4210789	0					
ANR	4210897	PtrMemberAccess	core -> dbg -> bp -> bps_idx_count		4210789	1					
ANR	4210898	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4210899	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4210900	Identifier	core		4210789	0					
ANR	4210901	Identifier	dbg		4210789	1					
ANR	4210902	Identifier	bp		4210789	1					
ANR	4210903	Identifier	bps_idx_count		4210789	1					
ANR	4210904	PostIncDecOperationExpression	i ++	3052:48:89343:89345	4210789	2	True				
ANR	4210905	Identifier	i		4210789	0					
ANR	4210906	IncDec	++		4210789	1					
ANR	4210907	CompoundStatement		23:53:442:442	4210789	3					
ANR	4210908	IfStatement	if ( ( bpi = core -> dbg -> bp -> bps_idx [ i ] ) )		4210789	0					
ANR	4210909	Condition	bpi = core -> dbg -> bp -> bps_idx [ i ]	3053:7:89357:89389	4210789	0	True				
ANR	4210910	AssignmentExpression	bpi = core -> dbg -> bp -> bps_idx [ i ]		4210789	0		=			
ANR	4210911	Identifier	bpi		4210789	0					
ANR	4210912	ArrayIndexing	core -> dbg -> bp -> bps_idx [ i ]		4210789	1					
ANR	4210913	PtrMemberAccess	core -> dbg -> bp -> bps_idx		4210789	0					
ANR	4210914	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4210915	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4210916	Identifier	core		4210789	0					
ANR	4210917	Identifier	dbg		4210789	1					
ANR	4210918	Identifier	bp		4210789	1					
ANR	4210919	Identifier	bps_idx		4210789	1					
ANR	4210920	Identifier	i		4210789	1					
ANR	4210921	CompoundStatement		24:42:486:486	4210789	1					
ANR	4210922	Statement	r_cons_printf	3054:4:89398:89410	4210789	0	True				
ANR	4210923	Statement	(	3054:18:89412:89412	4210789	1	True				
ANR	4210924	Statement	"""%d 0x%08"""	3054:19:89413:89422	4210789	2	True				
ANR	4210925	Statement	PFMT64x	3054:29:89423:89429	4210789	3	True				
ANR	4210926	Statement	""" E:%d T:%d\\n"""	3054:36:89430:89443	4210789	4	True				
ANR	4210927	Statement	","	3054:50:89444:89444	4210789	5	True				
ANR	4210928	Statement	i	3055:6:89452:89452	4210789	6	True				
ANR	4210929	Statement	","	3055:7:89453:89453	4210789	7	True				
ANR	4210930	Statement	bpi	3055:9:89455:89457	4210789	8	True				
ANR	4210931	Statement	->	3055:12:89458:89459	4210789	9	True				
ANR	4210932	Statement	addr	3055:14:89460:89463	4210789	10	True				
ANR	4210933	Statement	","	3055:18:89464:89464	4210789	11	True				
ANR	4210934	Statement	bpi	3055:20:89466:89468	4210789	12	True				
ANR	4210935	Statement	->	3055:23:89469:89470	4210789	13	True				
ANR	4210936	Statement	enabled	3055:25:89471:89477	4210789	14	True				
ANR	4210937	Statement	","	3055:32:89478:89478	4210789	15	True				
ANR	4210938	Statement	bpi	3055:34:89480:89482	4210789	16	True				
ANR	4210939	Statement	->	3055:37:89483:89484	4210789	17	True				
ANR	4210940	Statement	trace	3055:39:89485:89489	4210789	18	True				
ANR	4210941	Statement	)	3055:44:89490:89490	4210789	19	True				
ANR	4210942	ExpressionStatement		3055:45:89491:89491	4210789	20	True				
ANR	4210943	BreakStatement	break ;	3058:2:89504:89509	4210789	8	True				
ANR	4210944	Label	case 'x' :	3059:1:89512:89520	4210789	9	True				
ANR	4210945	IfStatement	if ( input [ 3 ] == ' ' )		4210789	10					
ANR	4210946	Condition	input [ 3 ] == ' '	3060:6:89538:89552	4210789	0	True				
ANR	4210947	EqualityExpression	input [ 3 ] == ' '		4210789	0		==			
ANR	4210948	ArrayIndexing	input [ 3 ]		4210789	0					
ANR	4210949	Identifier	input		4210789	0					
ANR	4210950	PrimaryExpression	3		4210789	1					
ANR	4210951	PrimaryExpression	' '		4210789	1					
ANR	4210952	CompoundStatement		32:3:654:703	4210789	1					
ANR	4210953	IdentifierDeclStatement	"int idx = r_bp_get_index_at ( core -> dbg -> bp , addr ) ;"	3061:3:89560:89609	4210789	0	True				
ANR	4210954	IdentifierDecl	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		4210789	0					
ANR	4210955	IdentifierDeclType	int		4210789	0					
ANR	4210956	Identifier	idx		4210789	1					
ANR	4210957	AssignmentExpression	"idx = r_bp_get_index_at ( core -> dbg -> bp , addr )"		4210789	2		=			
ANR	4210958	Identifier	idx		4210789	0					
ANR	4210959	CallExpression	"r_bp_get_index_at ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4210960	Callee	r_bp_get_index_at		4210789	0					
ANR	4210961	Identifier	r_bp_get_index_at		4210789	0					
ANR	4210962	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4210963	Argument	core -> dbg -> bp		4210789	0					
ANR	4210964	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4210965	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4210966	Identifier	core		4210789	0					
ANR	4210967	Identifier	dbg		4210789	1					
ANR	4210968	Identifier	bp		4210789	1					
ANR	4210969	Argument	addr		4210789	1					
ANR	4210970	Identifier	addr		4210789	0					
ANR	4210971	IfStatement	if ( idx != - 1 )		4210789	1					
ANR	4210972	Condition	idx != - 1	3062:7:89618:89626	4210789	0	True				
ANR	4210973	EqualityExpression	idx != - 1		4210789	0		!=			
ANR	4210974	Identifier	idx		4210789	0					
ANR	4210975	UnaryOperationExpression	- 1		4210789	1					
ANR	4210976	UnaryOperator	-		4210789	0					
ANR	4210977	PrimaryExpression	1		4210789	1					
ANR	4210978	CompoundStatement		33:18:723:723	4210789	1					
ANR	4210979	ExpressionStatement	"bpi = r_bp_get_index ( core -> dbg -> bp , idx )"	3063:4:89635:89676	4210789	0	True				
ANR	4210980	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , idx )"		4210789	0		=			
ANR	4210981	Identifier	bpi		4210789	0					
ANR	4210982	CallExpression	"r_bp_get_index ( core -> dbg -> bp , idx )"		4210789	1					
ANR	4210983	Callee	r_bp_get_index		4210789	0					
ANR	4210984	Identifier	r_bp_get_index		4210789	0					
ANR	4210985	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4210986	Argument	core -> dbg -> bp		4210789	0					
ANR	4210987	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4210988	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4210989	Identifier	core		4210789	0					
ANR	4210990	Identifier	dbg		4210789	1					
ANR	4210991	Identifier	bp		4210789	1					
ANR	4210992	Argument	idx		4210789	1					
ANR	4210993	Identifier	idx		4210789	0					
ANR	4210994	IfStatement	if ( bpi )		4210789	1					
ANR	4210995	Condition	bpi	3064:8:89686:89688	4210789	0	True				
ANR	4210996	Identifier	bpi		4210789	0					
ANR	4210997	CompoundStatement		36:5:792:828	4210789	1					
ANR	4210998	IdentifierDeclStatement	"char * expr = strchr ( input + 4 , ' ' ) ;"	3065:5:89698:89734	4210789	0	True				
ANR	4210999	IdentifierDecl	"* expr = strchr ( input + 4 , ' ' )"		4210789	0					
ANR	4211000	IdentifierDeclType	char *		4210789	0					
ANR	4211001	Identifier	expr		4210789	1					
ANR	4211002	AssignmentExpression	"* expr = strchr ( input + 4 , ' ' )"		4210789	2		=			
ANR	4211003	Identifier	expr		4210789	0					
ANR	4211004	CallExpression	"strchr ( input + 4 , ' ' )"		4210789	1					
ANR	4211005	Callee	strchr		4210789	0					
ANR	4211006	Identifier	strchr		4210789	0					
ANR	4211007	ArgumentList	input + 4		4210789	1					
ANR	4211008	Argument	input + 4		4210789	0					
ANR	4211009	AdditiveExpression	input + 4		4210789	0		+			
ANR	4211010	Identifier	input		4210789	0					
ANR	4211011	PrimaryExpression	4		4210789	1					
ANR	4211012	Argument	' '		4210789	1					
ANR	4211013	PrimaryExpression	' '		4210789	0					
ANR	4211014	IfStatement	if ( expr )		4210789	1					
ANR	4211015	Condition	expr	3066:9:89745:89748	4210789	0	True				
ANR	4211016	Identifier	expr		4210789	0					
ANR	4211017	CompoundStatement		37:15:845:845	4210789	1					
ANR	4211018	ExpressionStatement	free ( bpi -> expr )	3067:6:89759:89775	4210789	0	True				
ANR	4211019	CallExpression	free ( bpi -> expr )		4210789	0					
ANR	4211020	Callee	free		4210789	0					
ANR	4211021	Identifier	free		4210789	0					
ANR	4211022	ArgumentList	bpi -> expr		4210789	1					
ANR	4211023	Argument	bpi -> expr		4210789	0					
ANR	4211024	PtrMemberAccess	bpi -> expr		4210789	0					
ANR	4211025	Identifier	bpi		4210789	0					
ANR	4211026	Identifier	expr		4210789	1					
ANR	4211027	ExpressionStatement	bpi -> expr = strdup ( expr )	3068:6:89783:89808	4210789	1	True				
ANR	4211028	AssignmentExpression	bpi -> expr = strdup ( expr )		4210789	0		=			
ANR	4211029	PtrMemberAccess	bpi -> expr		4210789	0					
ANR	4211030	Identifier	bpi		4210789	0					
ANR	4211031	Identifier	expr		4210789	1					
ANR	4211032	CallExpression	strdup ( expr )		4210789	1					
ANR	4211033	Callee	strdup		4210789	0					
ANR	4211034	Identifier	strdup		4210789	0					
ANR	4211035	ArgumentList	expr		4210789	1					
ANR	4211036	Argument	expr		4210789	0					
ANR	4211037	Identifier	expr		4210789	0					
ANR	4211038	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , idx )"	3071:4:89827:89854	4210789	2	True				
ANR	4211039	CallExpression	"r_cons_printf ( ""%d\\n"" , idx )"		4210789	0					
ANR	4211040	Callee	r_cons_printf		4210789	0					
ANR	4211041	Identifier	r_cons_printf		4210789	0					
ANR	4211042	ArgumentList	"""%d\\n"""		4210789	1					
ANR	4211043	Argument	"""%d\\n"""		4210789	0					
ANR	4211044	PrimaryExpression	"""%d\\n"""		4210789	0					
ANR	4211045	Argument	idx		4210789	1					
ANR	4211046	Identifier	idx		4210789	0					
ANR	4211047	ElseStatement	else		4210789	0					
ANR	4211048	CompoundStatement		44:9:964:964	4210789	0					
ANR	4211049	ForStatement	for ( i = 0 ; i < core -> dbg -> bp -> bps_idx_count ; i ++ )		4210789	0					
ANR	4211050	ForInit	i = 0 ;	3074:8:89880:89885	4210789	0	True				
ANR	4211051	AssignmentExpression	i = 0		4210789	0		=			
ANR	4211052	Identifier	i		4210789	0					
ANR	4211053	PrimaryExpression	0		4210789	1					
ANR	4211054	Condition	i < core -> dbg -> bp -> bps_idx_count	3074:15:89887:89918	4210789	1	True				
ANR	4211055	RelationalExpression	i < core -> dbg -> bp -> bps_idx_count		4210789	0		<			
ANR	4211056	Identifier	i		4210789	0					
ANR	4211057	PtrMemberAccess	core -> dbg -> bp -> bps_idx_count		4210789	1					
ANR	4211058	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211059	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211060	Identifier	core		4210789	0					
ANR	4211061	Identifier	dbg		4210789	1					
ANR	4211062	Identifier	bp		4210789	1					
ANR	4211063	Identifier	bps_idx_count		4210789	1					
ANR	4211064	PostIncDecOperationExpression	i ++	3074:49:89921:89923	4210789	2	True				
ANR	4211065	Identifier	i		4210789	0					
ANR	4211066	IncDec	++		4210789	1					
ANR	4211067	CompoundStatement		46:4:1026:1073	4210789	3					
ANR	4211068	IdentifierDeclStatement	RBreakpointItem * bp = core -> dbg -> bp -> bps_idx [ i ] ;	3075:4:89932:89979	4210789	0	True				
ANR	4211069	IdentifierDecl	* bp = core -> dbg -> bp -> bps_idx [ i ]		4210789	0					
ANR	4211070	IdentifierDeclType	RBreakpointItem *		4210789	0					
ANR	4211071	Identifier	bp		4210789	1					
ANR	4211072	AssignmentExpression	* bp = core -> dbg -> bp -> bps_idx [ i ]		4210789	2		=			
ANR	4211073	Identifier	bp		4210789	0					
ANR	4211074	ArrayIndexing	core -> dbg -> bp -> bps_idx [ i ]		4210789	1					
ANR	4211075	PtrMemberAccess	core -> dbg -> bp -> bps_idx		4210789	0					
ANR	4211076	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211077	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211078	Identifier	core		4210789	0					
ANR	4211079	Identifier	dbg		4210789	1					
ANR	4211080	Identifier	bp		4210789	1					
ANR	4211081	Identifier	bps_idx		4210789	1					
ANR	4211082	Identifier	i		4210789	1					
ANR	4211083	IfStatement	if ( bp )		4210789	1					
ANR	4211084	Condition	bp	3076:8:89989:89990	4210789	0	True				
ANR	4211085	Identifier	bp		4210789	0					
ANR	4211086	CompoundStatement		47:12:1087:1087	4210789	1					
ANR	4211087	Statement	r_cons_printf	3077:5:90000:90012	4210789	0	True				
ANR	4211088	Statement	(	3077:19:90014:90014	4210789	1	True				
ANR	4211089	Statement	"""%d 0x%08"""	3077:20:90015:90024	4210789	2	True				
ANR	4211090	Statement	PFMT64x	3077:30:90025:90031	4210789	3	True				
ANR	4211091	Statement	""" %s\\n"""	3077:37:90032:90038	4210789	4	True				
ANR	4211092	Statement	","	3077:44:90039:90039	4210789	5	True				
ANR	4211093	Statement	i	3077:46:90041:90041	4210789	6	True				
ANR	4211094	Statement	","	3077:47:90042:90042	4210789	7	True				
ANR	4211095	Statement	bp	3077:49:90044:90045	4210789	8	True				
ANR	4211096	Statement	->	3077:51:90046:90047	4210789	9	True				
ANR	4211097	Statement	addr	3077:53:90048:90051	4210789	10	True				
ANR	4211098	Statement	","	3077:57:90052:90052	4210789	11	True				
ANR	4211099	Statement	bp	3077:59:90054:90055	4210789	12	True				
ANR	4211100	Statement	->	3077:61:90056:90057	4210789	13	True				
ANR	4211101	Statement	expr	3077:63:90058:90061	4210789	14	True				
ANR	4211102	Statement	)	3077:67:90062:90062	4210789	15	True				
ANR	4211103	ExpressionStatement		3077:68:90063:90063	4210789	16	True				
ANR	4211104	BreakStatement	break ;	3081:2:90082:90087	4210789	11	True				
ANR	4211105	Label	case 'c' :	3082:1:90090:90098	4210789	12	True				
ANR	4211106	ExpressionStatement	"p = strchr ( input + 3 , ' ' )"	3083:2:90112:90139	4210789	13	True				
ANR	4211107	AssignmentExpression	"p = strchr ( input + 3 , ' ' )"		4210789	0		=			
ANR	4211108	Identifier	p		4210789	0					
ANR	4211109	CallExpression	"strchr ( input + 3 , ' ' )"		4210789	1					
ANR	4211110	Callee	strchr		4210789	0					
ANR	4211111	Identifier	strchr		4210789	0					
ANR	4211112	ArgumentList	input + 3		4210789	1					
ANR	4211113	Argument	input + 3		4210789	0					
ANR	4211114	AdditiveExpression	input + 3		4210789	0		+			
ANR	4211115	Identifier	input		4210789	0					
ANR	4211116	PrimaryExpression	3		4210789	1					
ANR	4211117	Argument	' '		4210789	1					
ANR	4211118	PrimaryExpression	' '		4210789	0					
ANR	4211119	IfStatement	if ( p )		4210789	14					
ANR	4211120	Condition	p	3084:6:90147:90147	4210789	0	True				
ANR	4211121	Identifier	p		4210789	0					
ANR	4211122	CompoundStatement		56:3:1249:1278	4210789	1					
ANR	4211123	IdentifierDeclStatement	"char * q = strchr ( p + 1 , ' ' ) ;"	3085:3:90155:90184	4210789	0	True				
ANR	4211124	IdentifierDecl	"* q = strchr ( p + 1 , ' ' )"		4210789	0					
ANR	4211125	IdentifierDeclType	char *		4210789	0					
ANR	4211126	Identifier	q		4210789	1					
ANR	4211127	AssignmentExpression	"* q = strchr ( p + 1 , ' ' )"		4210789	2		=			
ANR	4211128	Identifier	q		4210789	0					
ANR	4211129	CallExpression	"strchr ( p + 1 , ' ' )"		4210789	1					
ANR	4211130	Callee	strchr		4210789	0					
ANR	4211131	Identifier	strchr		4210789	0					
ANR	4211132	ArgumentList	p + 1		4210789	1					
ANR	4211133	Argument	p + 1		4210789	0					
ANR	4211134	AdditiveExpression	p + 1		4210789	0		+			
ANR	4211135	Identifier	p		4210789	0					
ANR	4211136	PrimaryExpression	1		4210789	1					
ANR	4211137	Argument	' '		4210789	1					
ANR	4211138	PrimaryExpression	' '		4210789	0					
ANR	4211139	IfStatement	if ( q )		4210789	1					
ANR	4211140	Condition	q	3086:7:90193:90193	4210789	0	True				
ANR	4211141	Identifier	q		4210789	0					
ANR	4211142	CompoundStatement		59:4:1310:1347	4210789	1					
ANR	4211143	ExpressionStatement	* q ++ = 0	3087:4:90202:90210	4210789	0	True				
ANR	4211144	AssignmentExpression	* q ++ = 0		4210789	0		=			
ANR	4211145	UnaryOperationExpression	* q ++		4210789	0					
ANR	4211146	UnaryOperator	*		4210789	0					
ANR	4211147	PostIncDecOperationExpression	q ++		4210789	1					
ANR	4211148	Identifier	q		4210789	0					
ANR	4211149	IncDec	++		4210789	1					
ANR	4211150	PrimaryExpression	0		4210789	1					
ANR	4211151	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , p ) ;"	3088:4:90216:90253	4210789	1	True				
ANR	4211152	IdentifierDecl	"addr = r_num_math ( core -> num , p )"		4210789	0					
ANR	4211153	IdentifierDeclType	ut64		4210789	0					
ANR	4211154	Identifier	addr		4210789	1					
ANR	4211155	AssignmentExpression	"addr = r_num_math ( core -> num , p )"		4210789	2		=			
ANR	4211156	Identifier	addr		4210789	0					
ANR	4211157	CallExpression	"r_num_math ( core -> num , p )"		4210789	1					
ANR	4211158	Callee	r_num_math		4210789	0					
ANR	4211159	Identifier	r_num_math		4210789	0					
ANR	4211160	ArgumentList	core -> num		4210789	1					
ANR	4211161	Argument	core -> num		4210789	0					
ANR	4211162	PtrMemberAccess	core -> num		4210789	0					
ANR	4211163	Identifier	core		4210789	0					
ANR	4211164	Identifier	num		4210789	1					
ANR	4211165	Argument	p		4210789	1					
ANR	4211166	Identifier	p		4210789	0					
ANR	4211167	ExpressionStatement	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3089:4:90259:90301	4210789	2	True				
ANR	4211168	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211169	Identifier	bpi		4210789	0					
ANR	4211170	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211171	Callee	r_bp_get_index		4210789	0					
ANR	4211172	Identifier	r_bp_get_index		4210789	0					
ANR	4211173	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211174	Argument	core -> dbg -> bp		4210789	0					
ANR	4211175	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211176	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211177	Identifier	core		4210789	0					
ANR	4211178	Identifier	dbg		4210789	1					
ANR	4211179	Identifier	bp		4210789	1					
ANR	4211180	Argument	addr		4210789	1					
ANR	4211181	Identifier	addr		4210789	0					
ANR	4211182	IfStatement	if ( bpi )		4210789	3					
ANR	4211183	Condition	bpi	3090:8:90311:90313	4210789	0	True				
ANR	4211184	Identifier	bpi		4210789	0					
ANR	4211185	CompoundStatement		61:13:1410:1410	4210789	1					
ANR	4211186	ExpressionStatement	bpi -> data = strdup ( q )	3091:5:90323:90345	4210789	0	True				
ANR	4211187	AssignmentExpression	bpi -> data = strdup ( q )		4210789	0		=			
ANR	4211188	PtrMemberAccess	bpi -> data		4210789	0					
ANR	4211189	Identifier	bpi		4210789	0					
ANR	4211190	Identifier	data		4210789	1					
ANR	4211191	CallExpression	strdup ( q )		4210789	1					
ANR	4211192	Callee	strdup		4210789	0					
ANR	4211193	Identifier	strdup		4210789	0					
ANR	4211194	ArgumentList	q		4210789	1					
ANR	4211195	Argument	q		4210789	0					
ANR	4211196	Identifier	q		4210789	0					
ANR	4211197	ElseStatement	else		4210789	0					
ANR	4211198	CompoundStatement		63:11:1452:1452	4210789	0					
ANR	4211199	ExpressionStatement	"eprintf ( ""Cannot set command\\n"" )"	3093:5:90365:90397	4210789	0	True				
ANR	4211200	CallExpression	"eprintf ( ""Cannot set command\\n"" )"		4210789	0					
ANR	4211201	Callee	eprintf		4210789	0					
ANR	4211202	Identifier	eprintf		4210789	0					
ANR	4211203	ArgumentList	"""Cannot set command\\n"""		4210789	1					
ANR	4211204	Argument	"""Cannot set command\\n"""		4210789	0					
ANR	4211205	PrimaryExpression	"""Cannot set command\\n"""		4210789	0					
ANR	4211206	ElseStatement	else		4210789	0					
ANR	4211207	CompoundStatement		66:10:1509:1509	4210789	0					
ANR	4211208	ExpressionStatement	"eprintf ( ""|Usage: dbic # cmd\\n"" )"	3096:4:90421:90453	4210789	0	True				
ANR	4211209	CallExpression	"eprintf ( ""|Usage: dbic # cmd\\n"" )"		4210789	0					
ANR	4211210	Callee	eprintf		4210789	0					
ANR	4211211	Identifier	eprintf		4210789	0					
ANR	4211212	ArgumentList	"""|Usage: dbic # cmd\\n"""		4210789	1					
ANR	4211213	Argument	"""|Usage: dbic # cmd\\n"""		4210789	0					
ANR	4211214	PrimaryExpression	"""|Usage: dbic # cmd\\n"""		4210789	0					
ANR	4211215	ElseStatement	else		4210789	0					
ANR	4211216	CompoundStatement		69:9:1563:1563	4210789	0					
ANR	4211217	ExpressionStatement	"eprintf ( ""|Usage: dbic # cmd\\n"" )"	3099:3:90474:90506	4210789	0	True				
ANR	4211218	CallExpression	"eprintf ( ""|Usage: dbic # cmd\\n"" )"		4210789	0					
ANR	4211219	Callee	eprintf		4210789	0					
ANR	4211220	Identifier	eprintf		4210789	0					
ANR	4211221	ArgumentList	"""|Usage: dbic # cmd\\n"""		4210789	1					
ANR	4211222	Argument	"""|Usage: dbic # cmd\\n"""		4210789	0					
ANR	4211223	PrimaryExpression	"""|Usage: dbic # cmd\\n"""		4210789	0					
ANR	4211224	BreakStatement	break ;	3101:2:90514:90519	4210789	15	True				
ANR	4211225	Label	case 'e' :	3102:1:90522:90530	4210789	16	True				
ANR	4211226	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		4210789	17					
ANR	4211227	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3103:6:90548:90591	4210789	0	True				
ANR	4211228	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211229	Identifier	bpi		4210789	0					
ANR	4211230	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211231	Callee	r_bp_get_index		4210789	0					
ANR	4211232	Identifier	r_bp_get_index		4210789	0					
ANR	4211233	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211234	Argument	core -> dbg -> bp		4210789	0					
ANR	4211235	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211236	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211237	Identifier	core		4210789	0					
ANR	4211238	Identifier	dbg		4210789	1					
ANR	4211239	Identifier	bp		4210789	1					
ANR	4211240	Argument	addr		4210789	1					
ANR	4211241	Identifier	addr		4210789	0					
ANR	4211242	CompoundStatement		74:52:1688:1688	4210789	1					
ANR	4211243	ExpressionStatement	bpi -> enabled = true	3104:3:90599:90618	4210789	0	True				
ANR	4211244	AssignmentExpression	bpi -> enabled = true		4210789	0		=			
ANR	4211245	PtrMemberAccess	bpi -> enabled		4210789	0					
ANR	4211246	Identifier	bpi		4210789	0					
ANR	4211247	Identifier	enabled		4210789	1					
ANR	4211248	Identifier	true		4210789	1					
ANR	4211249	ElseStatement	else		4210789	0					
ANR	4211250	CompoundStatement		76:9:1723:1723	4210789	0					
ANR	4211251	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3106:3:90634:90671	4210789	0	True				
ANR	4211252	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4210789	0					
ANR	4211253	Callee	eprintf		4210789	0					
ANR	4211254	Identifier	eprintf		4210789	0					
ANR	4211255	ArgumentList	"""Cannot unset tracepoint\\n"""		4210789	1					
ANR	4211256	Argument	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211257	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211258	BreakStatement	break ;	3108:2:90679:90684	4210789	18	True				
ANR	4211259	Label	case 'd' :	3109:1:90687:90695	4210789	19	True				
ANR	4211260	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		4210789	20					
ANR	4211261	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3110:6:90713:90756	4210789	0	True				
ANR	4211262	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211263	Identifier	bpi		4210789	0					
ANR	4211264	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211265	Callee	r_bp_get_index		4210789	0					
ANR	4211266	Identifier	r_bp_get_index		4210789	0					
ANR	4211267	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211268	Argument	core -> dbg -> bp		4210789	0					
ANR	4211269	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211270	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211271	Identifier	core		4210789	0					
ANR	4211272	Identifier	dbg		4210789	1					
ANR	4211273	Identifier	bp		4210789	1					
ANR	4211274	Argument	addr		4210789	1					
ANR	4211275	Identifier	addr		4210789	0					
ANR	4211276	CompoundStatement		81:52:1853:1853	4210789	1					
ANR	4211277	ExpressionStatement	bpi -> enabled = false	3111:3:90764:90784	4210789	0	True				
ANR	4211278	AssignmentExpression	bpi -> enabled = false		4210789	0		=			
ANR	4211279	PtrMemberAccess	bpi -> enabled		4210789	0					
ANR	4211280	Identifier	bpi		4210789	0					
ANR	4211281	Identifier	enabled		4210789	1					
ANR	4211282	Identifier	false		4210789	1					
ANR	4211283	ElseStatement	else		4210789	0					
ANR	4211284	CompoundStatement		83:9:1889:1889	4210789	0					
ANR	4211285	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3113:3:90800:90837	4210789	0	True				
ANR	4211286	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4210789	0					
ANR	4211287	Callee	eprintf		4210789	0					
ANR	4211288	Identifier	eprintf		4210789	0					
ANR	4211289	ArgumentList	"""Cannot unset tracepoint\\n"""		4210789	1					
ANR	4211290	Argument	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211291	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211292	BreakStatement	break ;	3115:2:90845:90850	4210789	21	True				
ANR	4211293	Label	case 's' :	3116:1:90853:90861	4210789	22	True				
ANR	4211294	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		4210789	23					
ANR	4211295	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3117:6:90879:90922	4210789	0	True				
ANR	4211296	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211297	Identifier	bpi		4210789	0					
ANR	4211298	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211299	Callee	r_bp_get_index		4210789	0					
ANR	4211300	Identifier	r_bp_get_index		4210789	0					
ANR	4211301	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211302	Argument	core -> dbg -> bp		4210789	0					
ANR	4211303	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211304	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211305	Identifier	core		4210789	0					
ANR	4211306	Identifier	dbg		4210789	1					
ANR	4211307	Identifier	bp		4210789	1					
ANR	4211308	Argument	addr		4210789	1					
ANR	4211309	Identifier	addr		4210789	0					
ANR	4211310	CompoundStatement		88:52:2019:2019	4210789	1					
ANR	4211311	ExpressionStatement	bpi -> enabled = ! ! ! bpi -> enabled	3118:3:90930:90960	4210789	0	True				
ANR	4211312	AssignmentExpression	bpi -> enabled = ! ! ! bpi -> enabled		4210789	0		=			
ANR	4211313	PtrMemberAccess	bpi -> enabled		4210789	0					
ANR	4211314	Identifier	bpi		4210789	0					
ANR	4211315	Identifier	enabled		4210789	1					
ANR	4211316	UnaryOperationExpression	! ! ! bpi -> enabled		4210789	1					
ANR	4211317	UnaryOperator	!		4210789	0					
ANR	4211318	UnaryOperationExpression	! ! bpi -> enabled		4210789	1					
ANR	4211319	UnaryOperator	!		4210789	0					
ANR	4211320	UnaryOperationExpression	! bpi -> enabled		4210789	1					
ANR	4211321	UnaryOperator	!		4210789	0					
ANR	4211322	PtrMemberAccess	bpi -> enabled		4210789	1					
ANR	4211323	Identifier	bpi		4210789	0					
ANR	4211324	Identifier	enabled		4210789	1					
ANR	4211325	ElseStatement	else		4210789	0					
ANR	4211326	CompoundStatement		90:9:2065:2065	4210789	0					
ANR	4211327	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3120:3:90976:91013	4210789	0	True				
ANR	4211328	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4210789	0					
ANR	4211329	Callee	eprintf		4210789	0					
ANR	4211330	Identifier	eprintf		4210789	0					
ANR	4211331	ArgumentList	"""Cannot unset tracepoint\\n"""		4210789	1					
ANR	4211332	Argument	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211333	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211334	BreakStatement	break ;	3122:2:91021:91026	4210789	24	True				
ANR	4211335	Label	case 't' :	3123:1:91029:91037	4210789	25	True				
ANR	4211336	SwitchStatement	switch ( input [ 3 ] )		4210789	26					
ANR	4211337	Condition	input [ 3 ]	3124:10:91072:91079	4210789	0	True				
ANR	4211338	ArrayIndexing	input [ 3 ]		4210789	0					
ANR	4211339	Identifier	input		4210789	0					
ANR	4211340	PrimaryExpression	3		4210789	1					
ANR	4211341	CompoundStatement		95:20:2176:2176	4210789	1					
ANR	4211342	Label	case 'e' :	3125:2:91086:91094	4210789	0	True				
ANR	4211343	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		4210789	1					
ANR	4211344	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3126:7:91103:91146	4210789	0	True				
ANR	4211345	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211346	Identifier	bpi		4210789	0					
ANR	4211347	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211348	Callee	r_bp_get_index		4210789	0					
ANR	4211349	Identifier	r_bp_get_index		4210789	0					
ANR	4211350	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211351	Argument	core -> dbg -> bp		4210789	0					
ANR	4211352	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211353	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211354	Identifier	core		4210789	0					
ANR	4211355	Identifier	dbg		4210789	1					
ANR	4211356	Identifier	bp		4210789	1					
ANR	4211357	Argument	addr		4210789	1					
ANR	4211358	Identifier	addr		4210789	0					
ANR	4211359	CompoundStatement		97:53:2243:2243	4210789	1					
ANR	4211360	ExpressionStatement	bpi -> trace = true	3127:4:91155:91172	4210789	0	True				
ANR	4211361	AssignmentExpression	bpi -> trace = true		4210789	0		=			
ANR	4211362	PtrMemberAccess	bpi -> trace		4210789	0					
ANR	4211363	Identifier	bpi		4210789	0					
ANR	4211364	Identifier	trace		4210789	1					
ANR	4211365	Identifier	true		4210789	1					
ANR	4211366	ElseStatement	else		4210789	0					
ANR	4211367	CompoundStatement		99:10:2278:2278	4210789	0					
ANR	4211368	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3129:4:91190:91227	4210789	0	True				
ANR	4211369	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4210789	0					
ANR	4211370	Callee	eprintf		4210789	0					
ANR	4211371	Identifier	eprintf		4210789	0					
ANR	4211372	ArgumentList	"""Cannot unset tracepoint\\n"""		4210789	1					
ANR	4211373	Argument	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211374	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211375	BreakStatement	break ;	3131:3:91237:91242	4210789	2	True				
ANR	4211376	Label	case 'd' :	3132:2:91246:91254	4210789	3	True				
ANR	4211377	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		4210789	4					
ANR	4211378	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3133:7:91263:91306	4210789	0	True				
ANR	4211379	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211380	Identifier	bpi		4210789	0					
ANR	4211381	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211382	Callee	r_bp_get_index		4210789	0					
ANR	4211383	Identifier	r_bp_get_index		4210789	0					
ANR	4211384	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211385	Argument	core -> dbg -> bp		4210789	0					
ANR	4211386	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211387	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211388	Identifier	core		4210789	0					
ANR	4211389	Identifier	dbg		4210789	1					
ANR	4211390	Identifier	bp		4210789	1					
ANR	4211391	Argument	addr		4210789	1					
ANR	4211392	Identifier	addr		4210789	0					
ANR	4211393	CompoundStatement		104:53:2403:2403	4210789	1					
ANR	4211394	ExpressionStatement	bpi -> trace = false	3134:4:91315:91333	4210789	0	True				
ANR	4211395	AssignmentExpression	bpi -> trace = false		4210789	0		=			
ANR	4211396	PtrMemberAccess	bpi -> trace		4210789	0					
ANR	4211397	Identifier	bpi		4210789	0					
ANR	4211398	Identifier	trace		4210789	1					
ANR	4211399	Identifier	false		4210789	1					
ANR	4211400	ElseStatement	else		4210789	0					
ANR	4211401	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3135:10:91345:91382	4210789	0	True				
ANR	4211402	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4210789	0					
ANR	4211403	Callee	eprintf		4210789	0					
ANR	4211404	Identifier	eprintf		4210789	0					
ANR	4211405	ArgumentList	"""Cannot unset tracepoint\\n"""		4210789	1					
ANR	4211406	Argument	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211407	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211408	BreakStatement	break ;	3136:3:91387:91392	4210789	5	True				
ANR	4211409	Label	case 's' :	3137:2:91396:91404	4210789	6	True				
ANR	4211410	IfStatement	"if ( ( bpi = r_bp_get_index ( core -> dbg -> bp , addr ) ) )"		4210789	7					
ANR	4211411	Condition	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"	3138:7:91413:91456	4210789	0	True				
ANR	4211412	AssignmentExpression	"bpi = r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	0		=			
ANR	4211413	Identifier	bpi		4210789	0					
ANR	4211414	CallExpression	"r_bp_get_index ( core -> dbg -> bp , addr )"		4210789	1					
ANR	4211415	Callee	r_bp_get_index		4210789	0					
ANR	4211416	Identifier	r_bp_get_index		4210789	0					
ANR	4211417	ArgumentList	core -> dbg -> bp		4210789	1					
ANR	4211418	Argument	core -> dbg -> bp		4210789	0					
ANR	4211419	PtrMemberAccess	core -> dbg -> bp		4210789	0					
ANR	4211420	PtrMemberAccess	core -> dbg		4210789	0					
ANR	4211421	Identifier	core		4210789	0					
ANR	4211422	Identifier	dbg		4210789	1					
ANR	4211423	Identifier	bp		4210789	1					
ANR	4211424	Argument	addr		4210789	1					
ANR	4211425	Identifier	addr		4210789	0					
ANR	4211426	CompoundStatement		109:53:2553:2553	4210789	1					
ANR	4211427	ExpressionStatement	bpi -> trace = ! ! ! bpi -> trace	3139:4:91465:91491	4210789	0	True				
ANR	4211428	AssignmentExpression	bpi -> trace = ! ! ! bpi -> trace		4210789	0		=			
ANR	4211429	PtrMemberAccess	bpi -> trace		4210789	0					
ANR	4211430	Identifier	bpi		4210789	0					
ANR	4211431	Identifier	trace		4210789	1					
ANR	4211432	UnaryOperationExpression	! ! ! bpi -> trace		4210789	1					
ANR	4211433	UnaryOperator	!		4210789	0					
ANR	4211434	UnaryOperationExpression	! ! bpi -> trace		4210789	1					
ANR	4211435	UnaryOperator	!		4210789	0					
ANR	4211436	UnaryOperationExpression	! bpi -> trace		4210789	1					
ANR	4211437	UnaryOperator	!		4210789	0					
ANR	4211438	PtrMemberAccess	bpi -> trace		4210789	1					
ANR	4211439	Identifier	bpi		4210789	0					
ANR	4211440	Identifier	trace		4210789	1					
ANR	4211441	ElseStatement	else		4210789	0					
ANR	4211442	CompoundStatement		111:10:2597:2597	4210789	0					
ANR	4211443	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3141:4:91509:91546	4210789	0	True				
ANR	4211444	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4210789	0					
ANR	4211445	Callee	eprintf		4210789	0					
ANR	4211446	Identifier	eprintf		4210789	0					
ANR	4211447	ArgumentList	"""Cannot unset tracepoint\\n"""		4210789	1					
ANR	4211448	Argument	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211449	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4210789	0					
ANR	4211450	BreakStatement	break ;	3143:3:91556:91561	4210789	8	True				
ANR	4211451	BreakStatement	break ;	3145:2:91569:91574	4210789	27	True				
ANR	4211452	ReturnType	static void		4210789	1					
ANR	4211453	Identifier	core_cmd_dbi		4210789	2					
ANR	4211454	ParameterList	"RCore * core , const char * input , ut64 addr"		4210789	3					
ANR	4211455	Parameter	RCore * core	3030:26:88862:88872	4210789	0	True				
ANR	4211456	ParameterType	RCore *		4210789	0					
ANR	4211457	Identifier	core		4210789	1					
ANR	4211458	Parameter	const char * input	3030:39:88875:88891	4210789	1	True				
ANR	4211459	ParameterType	const char *		4210789	0					
ANR	4211460	Identifier	input		4210789	1					
ANR	4211461	Parameter	ut64 addr	3030:58:88894:88902	4210789	2	True				
ANR	4211462	ParameterType	ut64		4210789	0					
ANR	4211463	Identifier	addr		4210789	1					
ANR	4211464	CFGEntryNode	ENTRY		4210789		True				
ANR	4211465	CFGExitNode	EXIT		4210789		True				
ANR	4211466	Symbol	core -> dbg -> bp -> bps_idx		4210789						
ANR	4211467	Symbol	* q ++		4210789						
ANR	4211468	Symbol	* input		4210789						
ANR	4211469	Symbol	* core		4210789						
ANR	4211470	Symbol	core -> offset		4210789						
ANR	4211471	Symbol	strchr		4210789						
ANR	4211472	Symbol	core -> dbg -> bp		4210789						
ANR	4211473	Symbol	r_bp_get_index_at		4210789						
ANR	4211474	Symbol	bp		4210789						
ANR	4211475	Symbol	r_num_math		4210789						
ANR	4211476	Symbol	* * * core -> dbg		4210789						
ANR	4211477	Symbol	r_bp_get_index		4210789						
ANR	4211478	Symbol	bpi		4210789						
ANR	4211479	Symbol	expr		4210789						
ANR	4211480	Symbol	addr		4210789						
ANR	4211481	Symbol	* * * * core		4210789						
ANR	4211482	Symbol	core -> num		4210789						
ANR	4211483	Symbol	* * core		4210789						
ANR	4211484	Symbol	bpi -> expr		4210789						
ANR	4211485	Symbol	* core -> dbg -> bp		4210789						
ANR	4211486	Symbol	core -> dbg -> bp -> bps_idx_count		4210789						
ANR	4211487	Symbol	false		4210789						
ANR	4211488	Symbol	i		4210789						
ANR	4211489	Symbol	bpi -> enabled		4210789						
ANR	4211490	Symbol	bpi -> data		4210789						
ANR	4211491	Symbol	p		4210789						
ANR	4211492	Symbol	core		4210789						
ANR	4211493	Symbol	input		4210789						
ANR	4211494	Symbol	* * * core		4210789						
ANR	4211495	Symbol	q		4210789						
ANR	4211496	Symbol	* i		4210789						
ANR	4211497	Symbol	true		4210789						
ANR	4211498	Symbol	* bpi		4210789						
ANR	4211499	Symbol	* core -> dbg -> bp -> bps_idx		4210789						
ANR	4211500	Symbol	* * core -> dbg -> bp		4210789						
ANR	4211501	Symbol	strdup		4210789						
ANR	4211502	Symbol	idx		4210789						
ANR	4211503	Symbol	bpi -> trace		4210789						
ANR	4211504	Symbol	* core -> dbg		4210789						
ANR	4211505	Symbol	core -> dbg		4210789						
ANR	4211506	Symbol	* * core -> dbg		4210789						
ANR	4211507	Function	r_core_cmd_bp	3153:0:91661:104230							
ANR	4211508	FunctionDef	"r_core_cmd_bp (RCore * core , const char * input)"		4211507	0					
ANR	4211509	CompoundStatement		3153:58:91719:104230	4211507	0					
ANR	4211510	IdentifierDeclStatement	RBreakpointItem * bpi ;	3154:1:91722:91742	4211507	0	True				
ANR	4211511	IdentifierDecl	* bpi		4211507	0					
ANR	4211512	IdentifierDeclType	RBreakpointItem *		4211507	0					
ANR	4211513	Identifier	bpi		4211507	1					
ANR	4211514	IdentifierDeclStatement	"int i , hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" ) ;"	3155:1:91745:91800	4211507	1	True				
ANR	4211515	IdentifierDecl	i		4211507	0					
ANR	4211516	IdentifierDeclType	int		4211507	0					
ANR	4211517	Identifier	i		4211507	1					
ANR	4211518	IdentifierDecl	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		4211507	1					
ANR	4211519	IdentifierDeclType	int		4211507	0					
ANR	4211520	Identifier	hwbp		4211507	1					
ANR	4211521	AssignmentExpression	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		4211507	2		=			
ANR	4211522	Identifier	hwbp		4211507	0					
ANR	4211523	CallExpression	"r_config_get_i ( core -> config , ""dbg.hwbp"" )"		4211507	1					
ANR	4211524	Callee	r_config_get_i		4211507	0					
ANR	4211525	Identifier	r_config_get_i		4211507	0					
ANR	4211526	ArgumentList	core -> config		4211507	1					
ANR	4211527	Argument	core -> config		4211507	0					
ANR	4211528	PtrMemberAccess	core -> config		4211507	0					
ANR	4211529	Identifier	core		4211507	0					
ANR	4211530	Identifier	config		4211507	1					
ANR	4211531	Argument	"""dbg.hwbp"""		4211507	1					
ANR	4211532	PrimaryExpression	"""dbg.hwbp"""		4211507	0					
ANR	4211533	IdentifierDeclStatement	RDebugFrame * frame ;	3156:1:91803:91821	4211507	2	True				
ANR	4211534	IdentifierDecl	* frame		4211507	0					
ANR	4211535	IdentifierDeclType	RDebugFrame *		4211507	0					
ANR	4211536	Identifier	frame		4211507	1					
ANR	4211537	IdentifierDeclStatement	RListIter * iter ;	3157:1:91824:91839	4211507	3	True				
ANR	4211538	IdentifierDecl	* iter		4211507	0					
ANR	4211539	IdentifierDeclType	RListIter *		4211507	0					
ANR	4211540	Identifier	iter		4211507	1					
ANR	4211541	IdentifierDeclStatement	const char * p ;	3158:1:91842:91855	4211507	4	True				
ANR	4211542	IdentifierDecl	* p		4211507	0					
ANR	4211543	IdentifierDeclType	const char *		4211507	0					
ANR	4211544	Identifier	p		4211507	1					
ANR	4211545	IdentifierDeclStatement	bool hex_format ;	3159:1:91858:91873	4211507	5	True				
ANR	4211546	IdentifierDecl	hex_format		4211507	0					
ANR	4211547	IdentifierDeclType	bool		4211507	0					
ANR	4211548	Identifier	hex_format		4211507	1					
ANR	4211549	IdentifierDeclStatement	bool watch = false ;	3160:1:91876:91894	4211507	6	True				
ANR	4211550	IdentifierDecl	watch = false		4211507	0					
ANR	4211551	IdentifierDeclType	bool		4211507	0					
ANR	4211552	Identifier	watch		4211507	1					
ANR	4211553	AssignmentExpression	watch = false		4211507	2		=			
ANR	4211554	Identifier	false		4211507	0					
ANR	4211555	Identifier	false		4211507	1					
ANR	4211556	IdentifierDeclStatement	int rw = 0 ;	3161:1:91897:91907	4211507	7	True				
ANR	4211557	IdentifierDecl	rw = 0		4211507	0					
ANR	4211558	IdentifierDeclType	int		4211507	0					
ANR	4211559	Identifier	rw		4211507	1					
ANR	4211560	AssignmentExpression	rw = 0		4211507	2		=			
ANR	4211561	Identifier	rw		4211507	0					
ANR	4211562	PrimaryExpression	0		4211507	1					
ANR	4211563	IdentifierDeclStatement	RList * list ;	3162:1:91910:91921	4211507	8	True				
ANR	4211564	IdentifierDecl	* list		4211507	0					
ANR	4211565	IdentifierDeclType	RList *		4211507	0					
ANR	4211566	Identifier	list		4211507	1					
ANR	4211567	IdentifierDeclStatement	ut64 addr ;	3163:1:91924:91933	4211507	9	True				
ANR	4211568	IdentifierDecl	addr		4211507	0					
ANR	4211569	IdentifierDeclType	ut64		4211507	0					
ANR	4211570	Identifier	addr		4211507	1					
ANR	4211571	ExpressionStatement	"p = strchr ( input , ' ' )"	3164:1:91936:91959	4211507	10	True				
ANR	4211572	AssignmentExpression	"p = strchr ( input , ' ' )"		4211507	0		=			
ANR	4211573	Identifier	p		4211507	0					
ANR	4211574	CallExpression	"strchr ( input , ' ' )"		4211507	1					
ANR	4211575	Callee	strchr		4211507	0					
ANR	4211576	Identifier	strchr		4211507	0					
ANR	4211577	ArgumentList	input		4211507	1					
ANR	4211578	Argument	input		4211507	0					
ANR	4211579	Identifier	input		4211507	0					
ANR	4211580	Argument	' '		4211507	1					
ANR	4211581	PrimaryExpression	' '		4211507	0					
ANR	4211582	ExpressionStatement	"addr = p ? r_num_math ( core -> num , p + 1 ) : UT64_MAX"	3165:1:91962:92011	4211507	11	True				
ANR	4211583	AssignmentExpression	"addr = p ? r_num_math ( core -> num , p + 1 ) : UT64_MAX"		4211507	0		=			
ANR	4211584	Identifier	addr		4211507	0					
ANR	4211585	ConditionalExpression	"p ? r_num_math ( core -> num , p + 1 ) : UT64_MAX"		4211507	1					
ANR	4211586	Condition	p		4211507	0					
ANR	4211587	Identifier	p		4211507	0					
ANR	4211588	CallExpression	"r_num_math ( core -> num , p + 1 )"		4211507	1					
ANR	4211589	Callee	r_num_math		4211507	0					
ANR	4211590	Identifier	r_num_math		4211507	0					
ANR	4211591	ArgumentList	core -> num		4211507	1					
ANR	4211592	Argument	core -> num		4211507	0					
ANR	4211593	PtrMemberAccess	core -> num		4211507	0					
ANR	4211594	Identifier	core		4211507	0					
ANR	4211595	Identifier	num		4211507	1					
ANR	4211596	Argument	p + 1		4211507	1					
ANR	4211597	AdditiveExpression	p + 1		4211507	0		+			
ANR	4211598	Identifier	p		4211507	0					
ANR	4211599	PrimaryExpression	1		4211507	1					
ANR	4211600	Identifier	UT64_MAX		4211507	2					
ANR	4211601	IfStatement	if ( ! addr )		4211507	12					
ANR	4211602	Condition	! addr	3166:5:92018:92022	4211507	0	True				
ANR	4211603	UnaryOperationExpression	! addr		4211507	0					
ANR	4211604	UnaryOperator	!		4211507	0					
ANR	4211605	Identifier	addr		4211507	1					
ANR	4211606	CompoundStatement		14:12:305:305	4211507	1					
ANR	4211607	ExpressionStatement	addr = UT64_MAX	3167:2:92029:92044	4211507	0	True				
ANR	4211608	AssignmentExpression	addr = UT64_MAX		4211507	0		=			
ANR	4211609	Identifier	addr		4211507	0					
ANR	4211610	Identifier	UT64_MAX		4211507	1					
ANR	4211611	IdentifierDeclStatement	char * str = NULL ;	3169:1:92050:92066	4211507	13	True				
ANR	4211612	IdentifierDecl	* str = NULL		4211507	0					
ANR	4211613	IdentifierDeclType	char *		4211507	0					
ANR	4211614	Identifier	str		4211507	1					
ANR	4211615	AssignmentExpression	* str = NULL		4211507	2		=			
ANR	4211616	Identifier	NULL		4211507	0					
ANR	4211617	Identifier	NULL		4211507	1					
ANR	4211618	SwitchStatement	switch ( input [ 1 ] )		4211507	14					
ANR	4211619	Condition	input [ 1 ]	3171:9:92078:92085	4211507	0	True				
ANR	4211620	ArrayIndexing	input [ 1 ]		4211507	0					
ANR	4211621	Identifier	input		4211507	0					
ANR	4211622	PrimaryExpression	1		4211507	1					
ANR	4211623	CompoundStatement		412:2:10797:10827	4211507	1					
ANR	4211624	Label	case '.' :	3172:1:92091:92099	4211507	0	True				
ANR	4211625	IfStatement	if ( input [ 2 ] )		4211507	1					
ANR	4211626	Condition	input [ 2 ]	3173:6:92107:92114	4211507	0	True				
ANR	4211627	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4211628	Identifier	input		4211507	0					
ANR	4211629	PrimaryExpression	2		4211507	1					
ANR	4211630	CompoundStatement		22:3:402:461	4211507	1					
ANR	4211631	IdentifierDeclStatement	"ut64 addr = r_num_tail ( core -> num , core -> offset , input + 2 ) ;"	3174:3:92122:92181	4211507	0	True				
ANR	4211632	IdentifierDecl	"addr = r_num_tail ( core -> num , core -> offset , input + 2 )"		4211507	0					
ANR	4211633	IdentifierDeclType	ut64		4211507	0					
ANR	4211634	Identifier	addr		4211507	1					
ANR	4211635	AssignmentExpression	"addr = r_num_tail ( core -> num , core -> offset , input + 2 )"		4211507	2		=			
ANR	4211636	Identifier	addr		4211507	0					
ANR	4211637	CallExpression	"r_num_tail ( core -> num , core -> offset , input + 2 )"		4211507	1					
ANR	4211638	Callee	r_num_tail		4211507	0					
ANR	4211639	Identifier	r_num_tail		4211507	0					
ANR	4211640	ArgumentList	core -> num		4211507	1					
ANR	4211641	Argument	core -> num		4211507	0					
ANR	4211642	PtrMemberAccess	core -> num		4211507	0					
ANR	4211643	Identifier	core		4211507	0					
ANR	4211644	Identifier	num		4211507	1					
ANR	4211645	Argument	core -> offset		4211507	1					
ANR	4211646	PtrMemberAccess	core -> offset		4211507	0					
ANR	4211647	Identifier	core		4211507	0					
ANR	4211648	Identifier	offset		4211507	1					
ANR	4211649	Argument	input + 2		4211507	2					
ANR	4211650	AdditiveExpression	input + 2		4211507	0		+			
ANR	4211651	Identifier	input		4211507	0					
ANR	4211652	PrimaryExpression	2		4211507	1					
ANR	4211653	IfStatement	"if ( validAddress ( core , addr ) )"		4211507	1					
ANR	4211654	Condition	"validAddress ( core , addr )"	3175:7:92190:92214	4211507	0	True				
ANR	4211655	CallExpression	"validAddress ( core , addr )"		4211507	0					
ANR	4211656	Callee	validAddress		4211507	0					
ANR	4211657	Identifier	validAddress		4211507	0					
ANR	4211658	ArgumentList	core		4211507	1					
ANR	4211659	Argument	core		4211507	0					
ANR	4211660	Identifier	core		4211507	0					
ANR	4211661	Argument	addr		4211507	1					
ANR	4211662	Identifier	addr		4211507	0					
ANR	4211663	CompoundStatement		23:34:497:497	4211507	1					
ANR	4211664	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"	3176:4:92223:92286	4211507	0	True				
ANR	4211665	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		4211507	0		=			
ANR	4211666	Identifier	bpi		4211507	0					
ANR	4211667	CallExpression	"r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		4211507	1					
ANR	4211668	Callee	r_debug_bp_add		4211507	0					
ANR	4211669	Identifier	r_debug_bp_add		4211507	0					
ANR	4211670	ArgumentList	core -> dbg		4211507	1					
ANR	4211671	Argument	core -> dbg		4211507	0					
ANR	4211672	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4211673	Identifier	core		4211507	0					
ANR	4211674	Identifier	dbg		4211507	1					
ANR	4211675	Argument	addr		4211507	1					
ANR	4211676	Identifier	addr		4211507	0					
ANR	4211677	Argument	hwbp		4211507	2					
ANR	4211678	Identifier	hwbp		4211507	0					
ANR	4211679	Argument	false		4211507	3					
ANR	4211680	Identifier	false		4211507	0					
ANR	4211681	Argument	0		4211507	4					
ANR	4211682	PrimaryExpression	0		4211507	0					
ANR	4211683	Argument	NULL		4211507	5					
ANR	4211684	Identifier	NULL		4211507	0					
ANR	4211685	Argument	0		4211507	6					
ANR	4211686	PrimaryExpression	0		4211507	0					
ANR	4211687	IfStatement	if ( ! bpi )		4211507	1					
ANR	4211688	Condition	! bpi	3177:8:92296:92299	4211507	0	True				
ANR	4211689	UnaryOperationExpression	! bpi		4211507	0					
ANR	4211690	UnaryOperator	!		4211507	0					
ANR	4211691	Identifier	bpi		4211507	1					
ANR	4211692	CompoundStatement		25:14:582:582	4211507	1					
ANR	4211693	ExpressionStatement	"eprintf ( ""Unable to add breakpoint (%s)\\n"" , input + 2 )"	3178:5:92309:92363	4211507	0	True				
ANR	4211694	CallExpression	"eprintf ( ""Unable to add breakpoint (%s)\\n"" , input + 2 )"		4211507	0					
ANR	4211695	Callee	eprintf		4211507	0					
ANR	4211696	Identifier	eprintf		4211507	0					
ANR	4211697	ArgumentList	"""Unable to add breakpoint (%s)\\n"""		4211507	1					
ANR	4211698	Argument	"""Unable to add breakpoint (%s)\\n"""		4211507	0					
ANR	4211699	PrimaryExpression	"""Unable to add breakpoint (%s)\\n"""		4211507	0					
ANR	4211700	Argument	input + 2		4211507	1					
ANR	4211701	AdditiveExpression	input + 2		4211507	0		+			
ANR	4211702	Identifier	input		4211507	0					
ANR	4211703	PrimaryExpression	2		4211507	1					
ANR	4211704	ElseStatement	else		4211507	0					
ANR	4211705	CompoundStatement		28:10:661:661	4211507	0					
ANR	4211706	ExpressionStatement	"eprintf ( ""Invalid address\\n"" )"	3181:4:92387:92416	4211507	0	True				
ANR	4211707	CallExpression	"eprintf ( ""Invalid address\\n"" )"		4211507	0					
ANR	4211708	Callee	eprintf		4211507	0					
ANR	4211709	Identifier	eprintf		4211507	0					
ANR	4211710	ArgumentList	"""Invalid address\\n"""		4211507	1					
ANR	4211711	Argument	"""Invalid address\\n"""		4211507	0					
ANR	4211712	PrimaryExpression	"""Invalid address\\n"""		4211507	0					
ANR	4211713	ElseStatement	else		4211507	0					
ANR	4211714	CompoundStatement		31:9:712:712	4211507	0					
ANR	4211715	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"	3184:3:92437:92484	4211507	0	True				
ANR	4211716	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"		4211507	0		=			
ANR	4211717	Identifier	bpi		4211507	0					
ANR	4211718	CallExpression	"r_bp_get_at ( core -> dbg -> bp , core -> offset )"		4211507	1					
ANR	4211719	Callee	r_bp_get_at		4211507	0					
ANR	4211720	Identifier	r_bp_get_at		4211507	0					
ANR	4211721	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4211722	Argument	core -> dbg -> bp		4211507	0					
ANR	4211723	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4211724	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4211725	Identifier	core		4211507	0					
ANR	4211726	Identifier	dbg		4211507	1					
ANR	4211727	Identifier	bp		4211507	1					
ANR	4211728	Argument	core -> offset		4211507	1					
ANR	4211729	PtrMemberAccess	core -> offset		4211507	0					
ANR	4211730	Identifier	core		4211507	0					
ANR	4211731	Identifier	offset		4211507	1					
ANR	4211732	IfStatement	if ( bpi )		4211507	1					
ANR	4211733	Condition	bpi	3185:7:92493:92495	4211507	0	True				
ANR	4211734	Identifier	bpi		4211507	0					
ANR	4211735	CompoundStatement		33:12:778:778	4211507	1					
ANR	4211736	ExpressionStatement	"r_cons_printf ( ""breakpoint %s %s %s\\n"" , r_str_rwx_i ( bpi -> perm ) , bpi -> enabled ? ""enabled"" : ""disabled"" , bpi -> name ? bpi -> name : """" )"	3186:4:92504:92654	4211507	0	True				
ANR	4211737	CallExpression	"r_cons_printf ( ""breakpoint %s %s %s\\n"" , r_str_rwx_i ( bpi -> perm ) , bpi -> enabled ? ""enabled"" : ""disabled"" , bpi -> name ? bpi -> name : """" )"		4211507	0					
ANR	4211738	Callee	r_cons_printf		4211507	0					
ANR	4211739	Identifier	r_cons_printf		4211507	0					
ANR	4211740	ArgumentList	"""breakpoint %s %s %s\\n"""		4211507	1					
ANR	4211741	Argument	"""breakpoint %s %s %s\\n"""		4211507	0					
ANR	4211742	PrimaryExpression	"""breakpoint %s %s %s\\n"""		4211507	0					
ANR	4211743	Argument	r_str_rwx_i ( bpi -> perm )		4211507	1					
ANR	4211744	CallExpression	r_str_rwx_i ( bpi -> perm )		4211507	0					
ANR	4211745	Callee	r_str_rwx_i		4211507	0					
ANR	4211746	Identifier	r_str_rwx_i		4211507	0					
ANR	4211747	ArgumentList	bpi -> perm		4211507	1					
ANR	4211748	Argument	bpi -> perm		4211507	0					
ANR	4211749	PtrMemberAccess	bpi -> perm		4211507	0					
ANR	4211750	Identifier	bpi		4211507	0					
ANR	4211751	Identifier	perm		4211507	1					
ANR	4211752	Argument	"bpi -> enabled ? ""enabled"" : ""disabled"""		4211507	2					
ANR	4211753	ConditionalExpression	"bpi -> enabled ? ""enabled"" : ""disabled"""		4211507	0					
ANR	4211754	Condition	bpi -> enabled		4211507	0					
ANR	4211755	PtrMemberAccess	bpi -> enabled		4211507	0					
ANR	4211756	Identifier	bpi		4211507	0					
ANR	4211757	Identifier	enabled		4211507	1					
ANR	4211758	PrimaryExpression	"""enabled"""		4211507	1					
ANR	4211759	PrimaryExpression	"""disabled"""		4211507	2					
ANR	4211760	Argument	"bpi -> name ? bpi -> name : """""		4211507	3					
ANR	4211761	ConditionalExpression	"bpi -> name ? bpi -> name : """""		4211507	0					
ANR	4211762	Condition	bpi -> name		4211507	0					
ANR	4211763	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4211764	Identifier	bpi		4211507	0					
ANR	4211765	Identifier	name		4211507	1					
ANR	4211766	PtrMemberAccess	bpi -> name		4211507	1					
ANR	4211767	Identifier	bpi		4211507	0					
ANR	4211768	Identifier	name		4211507	1					
ANR	4211769	PrimaryExpression	""""""		4211507	2					
ANR	4211770	BreakStatement	break ;	3192:2:92667:92672	4211507	2	True				
ANR	4211771	Label	case 'f' :	3193:1:92675:92683	4211507	3	True				
ANR	4211772	CompoundStatement		44:2:1021:1039	4211507	4					
ANR	4211773	IdentifierDeclStatement	RList * symbols = r_bin_get_symbols ( core -> bin ) ;	3195:2:92691:92737	4211507	0	True				
ANR	4211774	IdentifierDecl	* symbols = r_bin_get_symbols ( core -> bin )		4211507	0					
ANR	4211775	IdentifierDeclType	RList *		4211507	0					
ANR	4211776	Identifier	symbols		4211507	1					
ANR	4211777	AssignmentExpression	* symbols = r_bin_get_symbols ( core -> bin )		4211507	2		=			
ANR	4211778	Identifier	symbols		4211507	0					
ANR	4211779	CallExpression	r_bin_get_symbols ( core -> bin )		4211507	1					
ANR	4211780	Callee	r_bin_get_symbols		4211507	0					
ANR	4211781	Identifier	r_bin_get_symbols		4211507	0					
ANR	4211782	ArgumentList	core -> bin		4211507	1					
ANR	4211783	Argument	core -> bin		4211507	0					
ANR	4211784	PtrMemberAccess	core -> bin		4211507	0					
ANR	4211785	Identifier	core		4211507	0					
ANR	4211786	Identifier	bin		4211507	1					
ANR	4211787	IdentifierDeclStatement	RBinSymbol * symbol ;	3196:2:92741:92759	4211507	1	True				
ANR	4211788	IdentifierDecl	* symbol		4211507	0					
ANR	4211789	IdentifierDeclType	RBinSymbol *		4211507	0					
ANR	4211790	Identifier	symbol		4211507	1					
ANR	4211791	Statement	r_list_foreach	3197:2:92763:92776	4211507	2	True				
ANR	4211792	Statement	(	3197:17:92778:92778	4211507	3	True				
ANR	4211793	Statement	symbols	3197:18:92779:92785	4211507	4	True				
ANR	4211794	Statement	","	3197:25:92786:92786	4211507	5	True				
ANR	4211795	Statement	iter	3197:27:92788:92791	4211507	6	True				
ANR	4211796	Statement	","	3197:31:92792:92792	4211507	7	True				
ANR	4211797	Statement	symbol	3197:33:92794:92799	4211507	8	True				
ANR	4211798	Statement	)	3197:39:92800:92800	4211507	9	True				
ANR	4211799	CompoundStatement		45:41:1082:1082	4211507	10					
ANR	4211800	IfStatement	"if ( symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR ) )"		4211507	0					
ANR	4211801	Condition	"symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"	3198:7:92811:92869	4211507	0	True				
ANR	4211802	AndExpression	"symbol -> type && ! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"		4211507	0		&&			
ANR	4211803	PtrMemberAccess	symbol -> type		4211507	0					
ANR	4211804	Identifier	symbol		4211507	0					
ANR	4211805	Identifier	type		4211507	1					
ANR	4211806	UnaryOperationExpression	"! strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"		4211507	1					
ANR	4211807	UnaryOperator	!		4211507	0					
ANR	4211808	CallExpression	"strcmp ( symbol -> type , R_BIN_TYPE_FUNC_STR )"		4211507	1					
ANR	4211809	Callee	strcmp		4211507	0					
ANR	4211810	Identifier	strcmp		4211507	0					
ANR	4211811	ArgumentList	symbol -> type		4211507	1					
ANR	4211812	Argument	symbol -> type		4211507	0					
ANR	4211813	PtrMemberAccess	symbol -> type		4211507	0					
ANR	4211814	Identifier	symbol		4211507	0					
ANR	4211815	Identifier	type		4211507	1					
ANR	4211816	Argument	R_BIN_TYPE_FUNC_STR		4211507	1					
ANR	4211817	Identifier	R_BIN_TYPE_FUNC_STR		4211507	0					
ANR	4211818	CompoundStatement		46:68:1152:1152	4211507	1					
ANR	4211819	IfStatement	"if ( r_anal_noreturn_at ( core -> anal , symbol -> vaddr ) )"		4211507	0					
ANR	4211820	Condition	"r_anal_noreturn_at ( core -> anal , symbol -> vaddr )"	3199:8:92882:92927	4211507	0	True				
ANR	4211821	CallExpression	"r_anal_noreturn_at ( core -> anal , symbol -> vaddr )"		4211507	0					
ANR	4211822	Callee	r_anal_noreturn_at		4211507	0					
ANR	4211823	Identifier	r_anal_noreturn_at		4211507	0					
ANR	4211824	ArgumentList	core -> anal		4211507	1					
ANR	4211825	Argument	core -> anal		4211507	0					
ANR	4211826	PtrMemberAccess	core -> anal		4211507	0					
ANR	4211827	Identifier	core		4211507	0					
ANR	4211828	Identifier	anal		4211507	1					
ANR	4211829	Argument	symbol -> vaddr		4211507	1					
ANR	4211830	PtrMemberAccess	symbol -> vaddr		4211507	0					
ANR	4211831	Identifier	symbol		4211507	0					
ANR	4211832	Identifier	vaddr		4211507	1					
ANR	4211833	CompoundStatement		47:56:1210:1210	4211507	1					
ANR	4211834	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , symbol -> vaddr , hwbp , false , 0 , NULL , 0 )"	3200:5:92937:93009	4211507	0	True				
ANR	4211835	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , symbol -> vaddr , hwbp , false , 0 , NULL , 0 )"		4211507	0		=			
ANR	4211836	Identifier	bpi		4211507	0					
ANR	4211837	CallExpression	"r_debug_bp_add ( core -> dbg , symbol -> vaddr , hwbp , false , 0 , NULL , 0 )"		4211507	1					
ANR	4211838	Callee	r_debug_bp_add		4211507	0					
ANR	4211839	Identifier	r_debug_bp_add		4211507	0					
ANR	4211840	ArgumentList	core -> dbg		4211507	1					
ANR	4211841	Argument	core -> dbg		4211507	0					
ANR	4211842	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4211843	Identifier	core		4211507	0					
ANR	4211844	Identifier	dbg		4211507	1					
ANR	4211845	Argument	symbol -> vaddr		4211507	1					
ANR	4211846	PtrMemberAccess	symbol -> vaddr		4211507	0					
ANR	4211847	Identifier	symbol		4211507	0					
ANR	4211848	Identifier	vaddr		4211507	1					
ANR	4211849	Argument	hwbp		4211507	2					
ANR	4211850	Identifier	hwbp		4211507	0					
ANR	4211851	Argument	false		4211507	3					
ANR	4211852	Identifier	false		4211507	0					
ANR	4211853	Argument	0		4211507	4					
ANR	4211854	PrimaryExpression	0		4211507	0					
ANR	4211855	Argument	NULL		4211507	5					
ANR	4211856	Identifier	NULL		4211507	0					
ANR	4211857	Argument	0		4211507	6					
ANR	4211858	PrimaryExpression	0		4211507	0					
ANR	4211859	IfStatement	if ( bpi )		4211507	1					
ANR	4211860	Condition	bpi	3201:9:93020:93022	4211507	0	True				
ANR	4211861	Identifier	bpi		4211507	0					
ANR	4211862	CompoundStatement		49:14:1305:1305	4211507	1					
ANR	4211863	ExpressionStatement	"bpi -> name = r_str_newf ( ""%s.%s"" , ""sym"" , symbol -> name )"	3202:6:93033:93086	4211507	0	True				
ANR	4211864	AssignmentExpression	"bpi -> name = r_str_newf ( ""%s.%s"" , ""sym"" , symbol -> name )"		4211507	0		=			
ANR	4211865	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4211866	Identifier	bpi		4211507	0					
ANR	4211867	Identifier	name		4211507	1					
ANR	4211868	CallExpression	"r_str_newf ( ""%s.%s"" , ""sym"" , symbol -> name )"		4211507	1					
ANR	4211869	Callee	r_str_newf		4211507	0					
ANR	4211870	Identifier	r_str_newf		4211507	0					
ANR	4211871	ArgumentList	"""%s.%s"""		4211507	1					
ANR	4211872	Argument	"""%s.%s"""		4211507	0					
ANR	4211873	PrimaryExpression	"""%s.%s"""		4211507	0					
ANR	4211874	Argument	"""sym"""		4211507	1					
ANR	4211875	PrimaryExpression	"""sym"""		4211507	0					
ANR	4211876	Argument	symbol -> name		4211507	2					
ANR	4211877	PtrMemberAccess	symbol -> name		4211507	0					
ANR	4211878	Identifier	symbol		4211507	0					
ANR	4211879	Identifier	name		4211507	1					
ANR	4211880	ElseStatement	else		4211507	0					
ANR	4211881	CompoundStatement		51:12:1380:1380	4211507	0					
ANR	4211882	Statement	eprintf	3204:6:93108:93114	4211507	0	True				
ANR	4211883	Statement	(	3204:14:93116:93116	4211507	1	True				
ANR	4211884	Statement	"""Unable to add a breakpoint"""	3204:15:93117:93144	4211507	2	True				
ANR	4211885	Statement	"""into a noreturn function %s at addr 0x%"""	3205:6:93152:93192	4211507	3	True				
ANR	4211886	Statement	PFMT64x	3205:47:93193:93199	4211507	4	True				
ANR	4211887	Statement	"""\\n"""	3205:54:93200:93203	4211507	5	True				
ANR	4211888	Statement	","	3205:58:93204:93204	4211507	6	True				
ANR	4211889	Statement	symbol	3206:9:93215:93220	4211507	7	True				
ANR	4211890	Statement	->	3206:15:93221:93222	4211507	8	True				
ANR	4211891	Statement	name	3206:17:93223:93226	4211507	9	True				
ANR	4211892	Statement	","	3206:21:93227:93227	4211507	10	True				
ANR	4211893	Statement	symbol	3206:23:93229:93234	4211507	11	True				
ANR	4211894	Statement	->	3206:29:93235:93236	4211507	12	True				
ANR	4211895	Statement	vaddr	3206:31:93237:93241	4211507	13	True				
ANR	4211896	Statement	)	3206:36:93242:93242	4211507	14	True				
ANR	4211897	ExpressionStatement		3206:37:93243:93243	4211507	15	True				
ANR	4211898	BreakStatement	break ;	3212:2:93273:93278	4211507	5	True				
ANR	4211899	Label	case 'x' :	3213:1:93281:93289	4211507	6	True				
ANR	4211900	IfStatement	if ( input [ 2 ] == ' ' )		4211507	7					
ANR	4211901	Condition	input [ 2 ] == ' '	3214:6:93306:93320	4211507	0	True				
ANR	4211902	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4211903	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4211904	Identifier	input		4211507	0					
ANR	4211905	PrimaryExpression	2		4211507	1					
ANR	4211906	PrimaryExpression	' '		4211507	1					
ANR	4211907	CompoundStatement		62:23:1603:1603	4211507	1					
ANR	4211908	IfStatement	if ( addr == UT64_MAX )		4211507	0					
ANR	4211909	Condition	addr == UT64_MAX	3215:7:93332:93347	4211507	0	True				
ANR	4211910	EqualityExpression	addr == UT64_MAX		4211507	0		==			
ANR	4211911	Identifier	addr		4211507	0					
ANR	4211912	Identifier	UT64_MAX		4211507	1					
ANR	4211913	CompoundStatement		63:25:1630:1630	4211507	1					
ANR	4211914	ExpressionStatement	addr = core -> offset	3216:4:93356:93375	4211507	0	True				
ANR	4211915	AssignmentExpression	addr = core -> offset		4211507	0		=			
ANR	4211916	Identifier	addr		4211507	0					
ANR	4211917	PtrMemberAccess	core -> offset		4211507	1					
ANR	4211918	Identifier	core		4211507	0					
ANR	4211919	Identifier	offset		4211507	1					
ANR	4211920	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3218:3:93385:93424	4211507	1	True				
ANR	4211921	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	0		=			
ANR	4211922	Identifier	bpi		4211507	0					
ANR	4211923	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	1					
ANR	4211924	Callee	r_bp_get_at		4211507	0					
ANR	4211925	Identifier	r_bp_get_at		4211507	0					
ANR	4211926	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4211927	Argument	core -> dbg -> bp		4211507	0					
ANR	4211928	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4211929	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4211930	Identifier	core		4211507	0					
ANR	4211931	Identifier	dbg		4211507	1					
ANR	4211932	Identifier	bp		4211507	1					
ANR	4211933	Argument	addr		4211507	1					
ANR	4211934	Identifier	addr		4211507	0					
ANR	4211935	IfStatement	if ( bpi )		4211507	2					
ANR	4211936	Condition	bpi	3219:7:93433:93435	4211507	0	True				
ANR	4211937	Identifier	bpi		4211507	0					
ANR	4211938	CompoundStatement		67:12:1718:1718	4211507	1					
ANR	4211939	ExpressionStatement	free ( bpi -> expr )	3220:4:93444:93460	4211507	0	True				
ANR	4211940	CallExpression	free ( bpi -> expr )		4211507	0					
ANR	4211941	Callee	free		4211507	0					
ANR	4211942	Identifier	free		4211507	0					
ANR	4211943	ArgumentList	bpi -> expr		4211507	1					
ANR	4211944	Argument	bpi -> expr		4211507	0					
ANR	4211945	PtrMemberAccess	bpi -> expr		4211507	0					
ANR	4211946	Identifier	bpi		4211507	0					
ANR	4211947	Identifier	expr		4211507	1					
ANR	4211948	ExpressionStatement	bpi -> expr = strdup ( input + 3 )	3221:4:93466:93496	4211507	1	True				
ANR	4211949	AssignmentExpression	bpi -> expr = strdup ( input + 3 )		4211507	0		=			
ANR	4211950	PtrMemberAccess	bpi -> expr		4211507	0					
ANR	4211951	Identifier	bpi		4211507	0					
ANR	4211952	Identifier	expr		4211507	1					
ANR	4211953	CallExpression	strdup ( input + 3 )		4211507	1					
ANR	4211954	Callee	strdup		4211507	0					
ANR	4211955	Identifier	strdup		4211507	0					
ANR	4211956	ArgumentList	input + 3		4211507	1					
ANR	4211957	Argument	input + 3		4211507	0					
ANR	4211958	AdditiveExpression	input + 3		4211507	0		+			
ANR	4211959	Identifier	input		4211507	0					
ANR	4211960	PrimaryExpression	3		4211507	1					
ANR	4211961	ElseStatement	else		4211507	0					
ANR	4211962	CompoundStatement		72:3:1797:1816	4211507	0					
ANR	4211963	IdentifierDeclStatement	RBreakpointItem * bp ;	3224:3:93517:93536	4211507	0	True				
ANR	4211964	IdentifierDecl	* bp		4211507	0					
ANR	4211965	IdentifierDeclType	RBreakpointItem *		4211507	0					
ANR	4211966	Identifier	bp		4211507	1					
ANR	4211967	Statement	r_list_foreach	3225:3:93541:93554	4211507	1	True				
ANR	4211968	Statement	(	3225:18:93556:93556	4211507	2	True				
ANR	4211969	Statement	core	3225:19:93557:93560	4211507	3	True				
ANR	4211970	Statement	->	3225:23:93561:93562	4211507	4	True				
ANR	4211971	Statement	dbg	3225:25:93563:93565	4211507	5	True				
ANR	4211972	Statement	->	3225:28:93566:93567	4211507	6	True				
ANR	4211973	Statement	bp	3225:30:93568:93569	4211507	7	True				
ANR	4211974	Statement	->	3225:32:93570:93571	4211507	8	True				
ANR	4211975	Statement	bps	3225:34:93572:93574	4211507	9	True				
ANR	4211976	Statement	","	3225:37:93575:93575	4211507	10	True				
ANR	4211977	Statement	iter	3225:39:93577:93580	4211507	11	True				
ANR	4211978	Statement	","	3225:43:93581:93581	4211507	12	True				
ANR	4211979	Statement	bp	3225:45:93583:93584	4211507	13	True				
ANR	4211980	Statement	)	3225:47:93585:93585	4211507	14	True				
ANR	4211981	CompoundStatement		73:49:1867:1867	4211507	15					
ANR	4211982	Statement	r_cons_printf	3226:4:93593:93605	4211507	0	True				
ANR	4211983	Statement	(	3226:18:93607:93607	4211507	1	True				
ANR	4211984	Statement	"""0x%08"""	3226:19:93608:93614	4211507	2	True				
ANR	4211985	Statement	PFMT64x	3226:26:93615:93621	4211507	3	True				
ANR	4211986	Statement	""" %s\\n"""	3226:33:93622:93628	4211507	4	True				
ANR	4211987	Statement	","	3226:40:93629:93629	4211507	5	True				
ANR	4211988	Statement	bp	3226:42:93631:93632	4211507	6	True				
ANR	4211989	Statement	->	3226:44:93633:93634	4211507	7	True				
ANR	4211990	Statement	addr	3226:46:93635:93638	4211507	8	True				
ANR	4211991	Statement	","	3226:50:93639:93639	4211507	9	True				
ANR	4211992	Statement	r_str_get2	3226:52:93641:93650	4211507	10	True				
ANR	4211993	Statement	(	3226:63:93652:93652	4211507	11	True				
ANR	4211994	Statement	bp	3226:64:93653:93654	4211507	12	True				
ANR	4211995	Statement	->	3226:66:93655:93656	4211507	13	True				
ANR	4211996	Statement	expr	3226:68:93657:93660	4211507	14	True				
ANR	4211997	Statement	)	3226:72:93661:93661	4211507	15	True				
ANR	4211998	Statement	)	3226:73:93662:93662	4211507	16	True				
ANR	4211999	ExpressionStatement		3226:74:93663:93663	4211507	17	True				
ANR	4212000	BreakStatement	break ;	3229:2:93676:93681	4211507	8	True				
ANR	4212001	Label	case 't' :	3230:1:93684:93692	4211507	9	True				
ANR	4212002	SwitchStatement	switch ( input [ 2 ] )		4211507	10					
ANR	4212003	Condition	input [ 2 ]	3231:10:93713:93720	4211507	0	True				
ANR	4212004	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4212005	Identifier	input		4211507	0					
ANR	4212006	PrimaryExpression	2		4211507	1					
ANR	4212007	CompoundStatement		79:20:2003:2003	4211507	1					
ANR	4212008	Label	case 'v' :	3232:2:93727:93735	4211507	0	True				
ANR	4212009	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3233:3:93750:93789	4211507	1	True				
ANR	4212010	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		4211507	0		=			
ANR	4212011	Identifier	list		4211507	0					
ANR	4212012	CallExpression	"r_debug_frames ( core -> dbg , addr )"		4211507	1					
ANR	4212013	Callee	r_debug_frames		4211507	0					
ANR	4212014	Identifier	r_debug_frames		4211507	0					
ANR	4212015	ArgumentList	core -> dbg		4211507	1					
ANR	4212016	Argument	core -> dbg		4211507	0					
ANR	4212017	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212018	Identifier	core		4211507	0					
ANR	4212019	Identifier	dbg		4211507	1					
ANR	4212020	Argument	addr		4211507	1					
ANR	4212021	Identifier	addr		4211507	0					
ANR	4212022	ExpressionStatement	"backtrace_vars ( core , list )"	3234:3:93794:93821	4211507	2	True				
ANR	4212023	CallExpression	"backtrace_vars ( core , list )"		4211507	0					
ANR	4212024	Callee	backtrace_vars		4211507	0					
ANR	4212025	Identifier	backtrace_vars		4211507	0					
ANR	4212026	ArgumentList	core		4211507	1					
ANR	4212027	Argument	core		4211507	0					
ANR	4212028	Identifier	core		4211507	0					
ANR	4212029	Argument	list		4211507	1					
ANR	4212030	Identifier	list		4211507	0					
ANR	4212031	ExpressionStatement	r_list_free ( list )	3235:3:93826:93844	4211507	3	True				
ANR	4212032	CallExpression	r_list_free ( list )		4211507	0					
ANR	4212033	Callee	r_list_free		4211507	0					
ANR	4212034	Identifier	r_list_free		4211507	0					
ANR	4212035	ArgumentList	list		4211507	1					
ANR	4212036	Argument	list		4211507	0					
ANR	4212037	Identifier	list		4211507	0					
ANR	4212038	BreakStatement	break ;	3236:3:93849:93854	4211507	4	True				
ANR	4212039	Label	case 'a' :	3237:2:93858:93866	4211507	5	True				
ANR	4212040	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3238:3:93881:93920	4211507	6	True				
ANR	4212041	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		4211507	0		=			
ANR	4212042	Identifier	list		4211507	0					
ANR	4212043	CallExpression	"r_debug_frames ( core -> dbg , addr )"		4211507	1					
ANR	4212044	Callee	r_debug_frames		4211507	0					
ANR	4212045	Identifier	r_debug_frames		4211507	0					
ANR	4212046	ArgumentList	core -> dbg		4211507	1					
ANR	4212047	Argument	core -> dbg		4211507	0					
ANR	4212048	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212049	Identifier	core		4211507	0					
ANR	4212050	Identifier	dbg		4211507	1					
ANR	4212051	Argument	addr		4211507	1					
ANR	4212052	Identifier	addr		4211507	0					
ANR	4212053	ExpressionStatement	"asciiart_backtrace ( core , list )"	3239:3:93925:93956	4211507	7	True				
ANR	4212054	CallExpression	"asciiart_backtrace ( core , list )"		4211507	0					
ANR	4212055	Callee	asciiart_backtrace		4211507	0					
ANR	4212056	Identifier	asciiart_backtrace		4211507	0					
ANR	4212057	ArgumentList	core		4211507	1					
ANR	4212058	Argument	core		4211507	0					
ANR	4212059	Identifier	core		4211507	0					
ANR	4212060	Argument	list		4211507	1					
ANR	4212061	Identifier	list		4211507	0					
ANR	4212062	ExpressionStatement	r_list_free ( list )	3240:3:93961:93979	4211507	8	True				
ANR	4212063	CallExpression	r_list_free ( list )		4211507	0					
ANR	4212064	Callee	r_list_free		4211507	0					
ANR	4212065	Identifier	r_list_free		4211507	0					
ANR	4212066	ArgumentList	list		4211507	1					
ANR	4212067	Argument	list		4211507	0					
ANR	4212068	Identifier	list		4211507	0					
ANR	4212069	BreakStatement	break ;	3241:3:93984:93989	4211507	9	True				
ANR	4212070	Label	case 'e' :	3242:2:93993:94001	4211507	10	True				
ANR	4212071	ForStatement	for ( p = input + 3 ; * p == ' ' ; p ++ )		4211507	11					
ANR	4212072	ForInit	p = input + 3 ;	3243:8:94021:94034	4211507	0	True				
ANR	4212073	AssignmentExpression	p = input + 3		4211507	0		=			
ANR	4212074	Identifier	p		4211507	0					
ANR	4212075	AdditiveExpression	input + 3		4211507	1		+			
ANR	4212076	Identifier	input		4211507	0					
ANR	4212077	PrimaryExpression	3		4211507	1					
ANR	4212078	Condition	* p == ' '	3243:23:94036:94044	4211507	1	True				
ANR	4212079	EqualityExpression	* p == ' '		4211507	0		==			
ANR	4212080	UnaryOperationExpression	* p		4211507	0					
ANR	4212081	UnaryOperator	*		4211507	0					
ANR	4212082	Identifier	p		4211507	1					
ANR	4212083	PrimaryExpression	' '		4211507	1					
ANR	4212084	PostIncDecOperationExpression	p ++	3243:34:94047:94049	4211507	2	True				
ANR	4212085	Identifier	p		4211507	0					
ANR	4212086	IncDec	++		4211507	1					
ANR	4212087	CompoundStatement		91:39:2332:2332	4211507	3					
ANR	4212088	IfStatement	if ( * p == '*' )		4211507	12					
ANR	4212089	Condition	* p == '*'	3246:7:94095:94103	4211507	0	True				
ANR	4212090	EqualityExpression	* p == '*'		4211507	0		==			
ANR	4212091	UnaryOperationExpression	* p		4211507	0					
ANR	4212092	UnaryOperator	*		4211507	0					
ANR	4212093	Identifier	p		4211507	1					
ANR	4212094	PrimaryExpression	'*'		4211507	1					
ANR	4212095	CompoundStatement		94:18:2386:2386	4211507	1					
ANR	4212096	ExpressionStatement	"r_bp_set_trace_all ( core -> dbg -> bp , true )"	3247:4:94112:94151	4211507	0	True				
ANR	4212097	CallExpression	"r_bp_set_trace_all ( core -> dbg -> bp , true )"		4211507	0					
ANR	4212098	Callee	r_bp_set_trace_all		4211507	0					
ANR	4212099	Identifier	r_bp_set_trace_all		4211507	0					
ANR	4212100	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4212101	Argument	core -> dbg -> bp		4211507	0					
ANR	4212102	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4212103	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212104	Identifier	core		4211507	0					
ANR	4212105	Identifier	dbg		4211507	1					
ANR	4212106	Identifier	bp		4211507	1					
ANR	4212107	Argument	true		4211507	1					
ANR	4212108	Identifier	true		4211507	0					
ANR	4212109	ElseStatement	else		4211507	0					
ANR	4212110	IfStatement	"if ( ! r_bp_set_trace ( core -> dbg -> bp , addr , true ) )"		4211507	0					
ANR	4212111	Condition	"! r_bp_set_trace ( core -> dbg -> bp , addr , true )"	3248:14:94167:94209	4211507	0	True				
ANR	4212112	UnaryOperationExpression	"! r_bp_set_trace ( core -> dbg -> bp , addr , true )"		4211507	0					
ANR	4212113	UnaryOperator	!		4211507	0					
ANR	4212114	CallExpression	"r_bp_set_trace ( core -> dbg -> bp , addr , true )"		4211507	1					
ANR	4212115	Callee	r_bp_set_trace		4211507	0					
ANR	4212116	Identifier	r_bp_set_trace		4211507	0					
ANR	4212117	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4212118	Argument	core -> dbg -> bp		4211507	0					
ANR	4212119	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4212120	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212121	Identifier	core		4211507	0					
ANR	4212122	Identifier	dbg		4211507	1					
ANR	4212123	Identifier	bp		4211507	1					
ANR	4212124	Argument	addr		4211507	1					
ANR	4212125	Identifier	addr		4211507	0					
ANR	4212126	Argument	true		4211507	2					
ANR	4212127	Identifier	true		4211507	0					
ANR	4212128	CompoundStatement		96:59:2492:2492	4211507	1					
ANR	4212129	ExpressionStatement	"eprintf ( ""Cannot set tracepoint\\n"" )"	3249:4:94218:94253	4211507	0	True				
ANR	4212130	CallExpression	"eprintf ( ""Cannot set tracepoint\\n"" )"		4211507	0					
ANR	4212131	Callee	eprintf		4211507	0					
ANR	4212132	Identifier	eprintf		4211507	0					
ANR	4212133	ArgumentList	"""Cannot set tracepoint\\n"""		4211507	1					
ANR	4212134	Argument	"""Cannot set tracepoint\\n"""		4211507	0					
ANR	4212135	PrimaryExpression	"""Cannot set tracepoint\\n"""		4211507	0					
ANR	4212136	BreakStatement	break ;	3251:3:94263:94268	4211507	13	True				
ANR	4212137	Label	case 'd' :	3252:2:94272:94280	4211507	14	True				
ANR	4212138	ForStatement	for ( p = input + 3 ; * p == ' ' ; p ++ )		4211507	15					
ANR	4212139	ForInit	p = input + 3 ;	3253:8:94300:94313	4211507	0	True				
ANR	4212140	AssignmentExpression	p = input + 3		4211507	0		=			
ANR	4212141	Identifier	p		4211507	0					
ANR	4212142	AdditiveExpression	input + 3		4211507	1		+			
ANR	4212143	Identifier	input		4211507	0					
ANR	4212144	PrimaryExpression	3		4211507	1					
ANR	4212145	Condition	* p == ' '	3253:23:94315:94321	4211507	1	True				
ANR	4212146	EqualityExpression	* p == ' '		4211507	0		==			
ANR	4212147	UnaryOperationExpression	* p		4211507	0					
ANR	4212148	UnaryOperator	*		4211507	0					
ANR	4212149	Identifier	p		4211507	1					
ANR	4212150	PrimaryExpression	' '		4211507	1					
ANR	4212151	PostIncDecOperationExpression	p ++	3253:31:94323:94325	4211507	2	True				
ANR	4212152	Identifier	p		4211507	0					
ANR	4212153	IncDec	++		4211507	1					
ANR	4212154	CompoundStatement		101:36:2608:2608	4211507	3					
ANR	4212155	IfStatement	if ( * p == '*' )		4211507	16					
ANR	4212156	Condition	* p == '*'	3256:7:94368:94376	4211507	0	True				
ANR	4212157	EqualityExpression	* p == '*'		4211507	0		==			
ANR	4212158	UnaryOperationExpression	* p		4211507	0					
ANR	4212159	UnaryOperator	*		4211507	0					
ANR	4212160	Identifier	p		4211507	1					
ANR	4212161	PrimaryExpression	'*'		4211507	1					
ANR	4212162	CompoundStatement		104:18:2659:2659	4211507	1					
ANR	4212163	ExpressionStatement	"r_bp_set_trace_all ( core -> dbg -> bp , false )"	3257:4:94385:94426	4211507	0	True				
ANR	4212164	CallExpression	"r_bp_set_trace_all ( core -> dbg -> bp , false )"		4211507	0					
ANR	4212165	Callee	r_bp_set_trace_all		4211507	0					
ANR	4212166	Identifier	r_bp_set_trace_all		4211507	0					
ANR	4212167	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4212168	Argument	core -> dbg -> bp		4211507	0					
ANR	4212169	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4212170	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212171	Identifier	core		4211507	0					
ANR	4212172	Identifier	dbg		4211507	1					
ANR	4212173	Identifier	bp		4211507	1					
ANR	4212174	Argument	false		4211507	1					
ANR	4212175	Identifier	false		4211507	0					
ANR	4212176	ElseStatement	else		4211507	0					
ANR	4212177	IfStatement	"if ( ! r_bp_set_trace ( core -> dbg -> bp , addr , false ) )"		4211507	0					
ANR	4212178	Condition	"! r_bp_set_trace ( core -> dbg -> bp , addr , false )"	3258:14:94442:94485	4211507	0	True				
ANR	4212179	UnaryOperationExpression	"! r_bp_set_trace ( core -> dbg -> bp , addr , false )"		4211507	0					
ANR	4212180	UnaryOperator	!		4211507	0					
ANR	4212181	CallExpression	"r_bp_set_trace ( core -> dbg -> bp , addr , false )"		4211507	1					
ANR	4212182	Callee	r_bp_set_trace		4211507	0					
ANR	4212183	Identifier	r_bp_set_trace		4211507	0					
ANR	4212184	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4212185	Argument	core -> dbg -> bp		4211507	0					
ANR	4212186	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4212187	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212188	Identifier	core		4211507	0					
ANR	4212189	Identifier	dbg		4211507	1					
ANR	4212190	Identifier	bp		4211507	1					
ANR	4212191	Argument	addr		4211507	1					
ANR	4212192	Identifier	addr		4211507	0					
ANR	4212193	Argument	false		4211507	2					
ANR	4212194	Identifier	false		4211507	0					
ANR	4212195	CompoundStatement		106:60:2768:2768	4211507	1					
ANR	4212196	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3259:4:94494:94531	4211507	0	True				
ANR	4212197	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4211507	0					
ANR	4212198	Callee	eprintf		4211507	0					
ANR	4212199	Identifier	eprintf		4211507	0					
ANR	4212200	ArgumentList	"""Cannot unset tracepoint\\n"""		4211507	1					
ANR	4212201	Argument	"""Cannot unset tracepoint\\n"""		4211507	0					
ANR	4212202	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4211507	0					
ANR	4212203	BreakStatement	break ;	3261:3:94541:94546	4211507	17	True				
ANR	4212204	Label	case 's' :	3262:2:94550:94558	4211507	18	True				
ANR	4212205	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3263:3:94573:94612	4211507	19	True				
ANR	4212206	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	0		=			
ANR	4212207	Identifier	bpi		4211507	0					
ANR	4212208	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	1					
ANR	4212209	Callee	r_bp_get_at		4211507	0					
ANR	4212210	Identifier	r_bp_get_at		4211507	0					
ANR	4212211	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4212212	Argument	core -> dbg -> bp		4211507	0					
ANR	4212213	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4212214	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212215	Identifier	core		4211507	0					
ANR	4212216	Identifier	dbg		4211507	1					
ANR	4212217	Identifier	bp		4211507	1					
ANR	4212218	Argument	addr		4211507	1					
ANR	4212219	Identifier	addr		4211507	0					
ANR	4212220	IfStatement	if ( bpi )		4211507	20					
ANR	4212221	Condition	bpi	3264:7:94621:94623	4211507	0	True				
ANR	4212222	Identifier	bpi		4211507	0					
ANR	4212223	CompoundStatement		112:12:2906:2906	4211507	1					
ANR	4212224	ExpressionStatement	bpi -> trace = ! ! ! bpi -> trace	3265:4:94632:94658	4211507	0	True				
ANR	4212225	AssignmentExpression	bpi -> trace = ! ! ! bpi -> trace		4211507	0		=			
ANR	4212226	PtrMemberAccess	bpi -> trace		4211507	0					
ANR	4212227	Identifier	bpi		4211507	0					
ANR	4212228	Identifier	trace		4211507	1					
ANR	4212229	UnaryOperationExpression	! ! ! bpi -> trace		4211507	1					
ANR	4212230	UnaryOperator	!		4211507	0					
ANR	4212231	UnaryOperationExpression	! ! bpi -> trace		4211507	1					
ANR	4212232	UnaryOperator	!		4211507	0					
ANR	4212233	UnaryOperationExpression	! bpi -> trace		4211507	1					
ANR	4212234	UnaryOperator	!		4211507	0					
ANR	4212235	PtrMemberAccess	bpi -> trace		4211507	1					
ANR	4212236	Identifier	bpi		4211507	0					
ANR	4212237	Identifier	trace		4211507	1					
ANR	4212238	ElseStatement	else		4211507	0					
ANR	4212239	CompoundStatement		114:10:2950:2950	4211507	0					
ANR	4212240	ExpressionStatement	"eprintf ( ""Cannot unset tracepoint\\n"" )"	3267:4:94676:94713	4211507	0	True				
ANR	4212241	CallExpression	"eprintf ( ""Cannot unset tracepoint\\n"" )"		4211507	0					
ANR	4212242	Callee	eprintf		4211507	0					
ANR	4212243	Identifier	eprintf		4211507	0					
ANR	4212244	ArgumentList	"""Cannot unset tracepoint\\n"""		4211507	1					
ANR	4212245	Argument	"""Cannot unset tracepoint\\n"""		4211507	0					
ANR	4212246	PrimaryExpression	"""Cannot unset tracepoint\\n"""		4211507	0					
ANR	4212247	BreakStatement	break ;	3269:3:94723:94728	4211507	21	True				
ANR	4212248	Label	case 'j' :	3270:2:94732:94740	4211507	22	True				
ANR	4212249	ExpressionStatement	addr = UT64_MAX	3271:3:94755:94770	4211507	23	True				
ANR	4212250	AssignmentExpression	addr = UT64_MAX		4211507	0		=			
ANR	4212251	Identifier	addr		4211507	0					
ANR	4212252	Identifier	UT64_MAX		4211507	1					
ANR	4212253	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		4211507	24					
ANR	4212254	Condition	input [ 2 ] == ' ' && input [ 3 ]	3272:7:94779:94805	4211507	0	True				
ANR	4212255	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		4211507	0		&&			
ANR	4212256	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4212257	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4212258	Identifier	input		4211507	0					
ANR	4212259	PrimaryExpression	2		4211507	1					
ANR	4212260	PrimaryExpression	' '		4211507	1					
ANR	4212261	ArrayIndexing	input [ 3 ]		4211507	1					
ANR	4212262	Identifier	input		4211507	0					
ANR	4212263	PrimaryExpression	3		4211507	1					
ANR	4212264	CompoundStatement		120:36:3088:3088	4211507	1					
ANR	4212265	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3273:4:94814:94854	4211507	0	True				
ANR	4212266	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4211507	0		=			
ANR	4212267	Identifier	addr		4211507	0					
ANR	4212268	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4212269	Callee	r_num_math		4211507	0					
ANR	4212270	Identifier	r_num_math		4211507	0					
ANR	4212271	ArgumentList	core -> num		4211507	1					
ANR	4212272	Argument	core -> num		4211507	0					
ANR	4212273	PtrMemberAccess	core -> num		4211507	0					
ANR	4212274	Identifier	core		4211507	0					
ANR	4212275	Identifier	num		4211507	1					
ANR	4212276	Argument	input + 2		4211507	1					
ANR	4212277	AdditiveExpression	input + 2		4211507	0		+			
ANR	4212278	Identifier	input		4211507	0					
ANR	4212279	PrimaryExpression	2		4211507	1					
ANR	4212280	ExpressionStatement	i = 0	3275:3:94864:94869	4211507	25	True				
ANR	4212281	AssignmentExpression	i = 0		4211507	0		=			
ANR	4212282	Identifier	i		4211507	0					
ANR	4212283	PrimaryExpression	0		4211507	1					
ANR	4212284	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3276:3:94874:94913	4211507	26	True				
ANR	4212285	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		4211507	0		=			
ANR	4212286	Identifier	list		4211507	0					
ANR	4212287	CallExpression	"r_debug_frames ( core -> dbg , addr )"		4211507	1					
ANR	4212288	Callee	r_debug_frames		4211507	0					
ANR	4212289	Identifier	r_debug_frames		4211507	0					
ANR	4212290	ArgumentList	core -> dbg		4211507	1					
ANR	4212291	Argument	core -> dbg		4211507	0					
ANR	4212292	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212293	Identifier	core		4211507	0					
ANR	4212294	Identifier	dbg		4211507	1					
ANR	4212295	Argument	addr		4211507	1					
ANR	4212296	Identifier	addr		4211507	0					
ANR	4212297	ExpressionStatement	hex_format = false	3277:3:94918:94936	4211507	27	True				
ANR	4212298	AssignmentExpression	hex_format = false		4211507	0		=			
ANR	4212299	Identifier	hex_format		4211507	0					
ANR	4212300	Identifier	false		4211507	1					
ANR	4212301	ExpressionStatement	"r_cons_printf ( ""["" )"	3278:3:94941:94960	4211507	28	True				
ANR	4212302	CallExpression	"r_cons_printf ( ""["" )"		4211507	0					
ANR	4212303	Callee	r_cons_printf		4211507	0					
ANR	4212304	Identifier	r_cons_printf		4211507	0					
ANR	4212305	ArgumentList	"""["""		4211507	1					
ANR	4212306	Argument	"""["""		4211507	0					
ANR	4212307	PrimaryExpression	"""["""		4211507	0					
ANR	4212308	Statement	r_list_foreach	3279:3:94965:94978	4211507	29	True				
ANR	4212309	Statement	(	3279:18:94980:94980	4211507	30	True				
ANR	4212310	Statement	list	3279:19:94981:94984	4211507	31	True				
ANR	4212311	Statement	","	3279:23:94985:94985	4211507	32	True				
ANR	4212312	Statement	iter	3279:25:94987:94990	4211507	33	True				
ANR	4212313	Statement	","	3279:29:94991:94991	4211507	34	True				
ANR	4212314	Statement	frame	3279:31:94993:94997	4211507	35	True				
ANR	4212315	Statement	)	3279:36:94998:94998	4211507	36	True				
ANR	4212316	CompoundStatement		130:4:3429:3496	4211507	37					
ANR	4212317	IdentifierDeclStatement	"char * flagdesc , * flagdesc2 , * pcstr , * spstr ;"	3280:4:95006:95048	4211507	0	True				
ANR	4212318	IdentifierDecl	* flagdesc		4211507	0					
ANR	4212319	IdentifierDeclType	char *		4211507	0					
ANR	4212320	Identifier	flagdesc		4211507	1					
ANR	4212321	IdentifierDecl	* flagdesc2		4211507	1					
ANR	4212322	IdentifierDeclType	char *		4211507	0					
ANR	4212323	Identifier	flagdesc2		4211507	1					
ANR	4212324	IdentifierDecl	* pcstr		4211507	2					
ANR	4212325	IdentifierDeclType	char *		4211507	0					
ANR	4212326	Identifier	pcstr		4211507	1					
ANR	4212327	IdentifierDecl	* spstr		4211507	3					
ANR	4212328	IdentifierDeclType	char *		4211507	0					
ANR	4212329	Identifier	spstr		4211507	1					
ANR	4212330	ExpressionStatement	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"	3281:4:95054:95143	4211507	1	True				
ANR	4212331	CallExpression	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"		4211507	0					
ANR	4212332	Callee	get_backtrace_info		4211507	0					
ANR	4212333	Identifier	get_backtrace_info		4211507	0					
ANR	4212334	ArgumentList	core		4211507	1					
ANR	4212335	Argument	core		4211507	0					
ANR	4212336	Identifier	core		4211507	0					
ANR	4212337	Argument	frame		4211507	1					
ANR	4212338	Identifier	frame		4211507	0					
ANR	4212339	Argument	addr		4211507	2					
ANR	4212340	Identifier	addr		4211507	0					
ANR	4212341	Argument	& flagdesc		4211507	3					
ANR	4212342	UnaryOperationExpression	& flagdesc		4211507	0					
ANR	4212343	UnaryOperator	&		4211507	0					
ANR	4212344	Identifier	flagdesc		4211507	1					
ANR	4212345	Argument	& flagdesc2		4211507	4					
ANR	4212346	UnaryOperationExpression	& flagdesc2		4211507	0					
ANR	4212347	UnaryOperator	&		4211507	0					
ANR	4212348	Identifier	flagdesc2		4211507	1					
ANR	4212349	Argument	& pcstr		4211507	5					
ANR	4212350	UnaryOperationExpression	& pcstr		4211507	0					
ANR	4212351	UnaryOperator	&		4211507	0					
ANR	4212352	Identifier	pcstr		4211507	1					
ANR	4212353	Argument	& spstr		4211507	6					
ANR	4212354	UnaryOperationExpression	& spstr		4211507	0					
ANR	4212355	UnaryOperator	&		4211507	0					
ANR	4212356	Identifier	spstr		4211507	1					
ANR	4212357	Argument	hex_format		4211507	7					
ANR	4212358	Identifier	hex_format		4211507	0					
ANR	4212359	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 ) ;"	3282:4:95149:95216	4211507	2	True				
ANR	4212360	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		4211507	0					
ANR	4212361	IdentifierDeclType	RAnalFunction *		4211507	0					
ANR	4212362	Identifier	fcn		4211507	1					
ANR	4212363	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		4211507	2		=			
ANR	4212364	Identifier	fcn		4211507	0					
ANR	4212365	CallExpression	"r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		4211507	1					
ANR	4212366	Callee	r_anal_get_fcn_in		4211507	0					
ANR	4212367	Identifier	r_anal_get_fcn_in		4211507	0					
ANR	4212368	ArgumentList	core -> anal		4211507	1					
ANR	4212369	Argument	core -> anal		4211507	0					
ANR	4212370	PtrMemberAccess	core -> anal		4211507	0					
ANR	4212371	Identifier	core		4211507	0					
ANR	4212372	Identifier	anal		4211507	1					
ANR	4212373	Argument	frame -> addr		4211507	1					
ANR	4212374	PtrMemberAccess	frame -> addr		4211507	0					
ANR	4212375	Identifier	frame		4211507	0					
ANR	4212376	Identifier	addr		4211507	1					
ANR	4212377	Argument	0		4211507	2					
ANR	4212378	PrimaryExpression	0		4211507	0					
ANR	4212379	Statement	r_cons_printf	3283:4:95222:95234	4211507	3	True				
ANR	4212380	Statement	(	3283:18:95236:95236	4211507	4	True				
ANR	4212381	Statement	"""%s{\\""idx\\"":%d,\\""pc\\"":%s,\\""sp\\"":%s,\\""frame_size\\"":%d,"""	3283:19:95237:95290	4211507	5	True				
ANR	4212382	Statement	"""\\""fname\\"":\\""%s\\"",\\""desc\\"":\\""%s%s\\""}"""	3284:6:95298:95334	4211507	6	True				
ANR	4212383	Statement	","	3284:43:95335:95335	4211507	7	True				
ANR	4212384	Statement	(	3284:45:95337:95337	4211507	8	True				
ANR	4212385	Statement	i	3284:46:95338:95338	4211507	9	True				
ANR	4212386	Statement	?	3284:48:95340:95340	4211507	10	True				
ANR	4212387	Statement	""" ,"""	3284:50:95342:95345	4211507	11	True				
ANR	4212388	Statement	:	3284:55:95347:95347	4211507	12	True				
ANR	4212389	Statement	""""""	3284:57:95349:95350	4211507	13	True				
ANR	4212390	Statement	)	3284:59:95351:95351	4211507	14	True				
ANR	4212391	Statement	","	3284:60:95352:95352	4211507	15	True				
ANR	4212392	Statement	i	3285:6:95360:95360	4211507	16	True				
ANR	4212393	Statement	","	3285:7:95361:95361	4211507	17	True				
ANR	4212394	Statement	pcstr	3286:6:95369:95373	4211507	18	True				
ANR	4212395	Statement	","	3286:11:95374:95374	4211507	19	True				
ANR	4212396	Statement	spstr	3286:13:95376:95380	4211507	20	True				
ANR	4212397	Statement	","	3286:18:95381:95381	4211507	21	True				
ANR	4212398	Statement	(	3287:6:95389:95389	4211507	22	True				
ANR	4212399	Statement	int	3287:7:95390:95392	4211507	23	True				
ANR	4212400	Statement	)	3287:10:95393:95393	4211507	24	True				
ANR	4212401	Statement	frame	3287:11:95394:95398	4211507	25	True				
ANR	4212402	Statement	->	3287:16:95399:95400	4211507	26	True				
ANR	4212403	Statement	size	3287:18:95401:95404	4211507	27	True				
ANR	4212404	Statement	","	3287:22:95405:95405	4211507	28	True				
ANR	4212405	Statement	fcn	3288:6:95413:95415	4211507	29	True				
ANR	4212406	Statement	?	3288:10:95417:95417	4211507	30	True				
ANR	4212407	Statement	fcn	3288:12:95419:95421	4211507	31	True				
ANR	4212408	Statement	->	3288:15:95422:95423	4211507	32	True				
ANR	4212409	Label	name :	3288:17:95424:95429	4211507	33	True				
ANR	4212410	Identifier	name		4211507	0					
ANR	4212411	Statement	""""""	3288:24:95431:95432	4211507	34	True				
ANR	4212412	Statement	","	3288:26:95433:95433	4211507	35	True				
ANR	4212413	Statement	flagdesc	3289:6:95441:95448	4211507	36	True				
ANR	4212414	Statement	?	3289:15:95450:95450	4211507	37	True				
ANR	4212415	Label	flagdesc :	3289:17:95452:95461	4211507	38	True				
ANR	4212416	Identifier	flagdesc		4211507	0					
ANR	4212417	Statement	""""""	3289:28:95463:95464	4211507	39	True				
ANR	4212418	Statement	","	3289:30:95465:95465	4211507	40	True				
ANR	4212419	Statement	flagdesc2	3290:6:95473:95481	4211507	41	True				
ANR	4212420	Statement	?	3290:16:95483:95483	4211507	42	True				
ANR	4212421	Label	flagdesc2 :	3290:18:95485:95495	4211507	43	True				
ANR	4212422	Identifier	flagdesc2		4211507	0					
ANR	4212423	Statement	""""""	3290:30:95497:95498	4211507	44	True				
ANR	4212424	Statement	)	3290:32:95499:95499	4211507	45	True				
ANR	4212425	ExpressionStatement		3290:33:95500:95500	4211507	46	True				
ANR	4212426	ExpressionStatement	i ++	3291:4:95506:95509	4211507	47	True				
ANR	4212427	PostIncDecOperationExpression	i ++		4211507	0					
ANR	4212428	Identifier	i		4211507	0					
ANR	4212429	IncDec	++		4211507	1					
ANR	4212430	ExpressionStatement	free ( flagdesc )	3292:4:95515:95530	4211507	48	True				
ANR	4212431	CallExpression	free ( flagdesc )		4211507	0					
ANR	4212432	Callee	free		4211507	0					
ANR	4212433	Identifier	free		4211507	0					
ANR	4212434	ArgumentList	flagdesc		4211507	1					
ANR	4212435	Argument	flagdesc		4211507	0					
ANR	4212436	Identifier	flagdesc		4211507	0					
ANR	4212437	ExpressionStatement	free ( flagdesc2 )	3293:4:95536:95552	4211507	49	True				
ANR	4212438	CallExpression	free ( flagdesc2 )		4211507	0					
ANR	4212439	Callee	free		4211507	0					
ANR	4212440	Identifier	free		4211507	0					
ANR	4212441	ArgumentList	flagdesc2		4211507	1					
ANR	4212442	Argument	flagdesc2		4211507	0					
ANR	4212443	Identifier	flagdesc2		4211507	0					
ANR	4212444	ExpressionStatement	free ( pcstr )	3294:4:95558:95570	4211507	50	True				
ANR	4212445	CallExpression	free ( pcstr )		4211507	0					
ANR	4212446	Callee	free		4211507	0					
ANR	4212447	Identifier	free		4211507	0					
ANR	4212448	ArgumentList	pcstr		4211507	1					
ANR	4212449	Argument	pcstr		4211507	0					
ANR	4212450	Identifier	pcstr		4211507	0					
ANR	4212451	ExpressionStatement	free ( spstr )	3295:4:95576:95588	4211507	51	True				
ANR	4212452	CallExpression	free ( spstr )		4211507	0					
ANR	4212453	Callee	free		4211507	0					
ANR	4212454	Identifier	free		4211507	0					
ANR	4212455	ArgumentList	spstr		4211507	1					
ANR	4212456	Argument	spstr		4211507	0					
ANR	4212457	Identifier	spstr		4211507	0					
ANR	4212458	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	3297:3:95598:95619	4211507	38	True				
ANR	4212459	CallExpression	"r_cons_printf ( ""]\\n"" )"		4211507	0					
ANR	4212460	Callee	r_cons_printf		4211507	0					
ANR	4212461	Identifier	r_cons_printf		4211507	0					
ANR	4212462	ArgumentList	"""]\\n"""		4211507	1					
ANR	4212463	Argument	"""]\\n"""		4211507	0					
ANR	4212464	PrimaryExpression	"""]\\n"""		4211507	0					
ANR	4212465	ExpressionStatement	r_list_free ( list )	3298:3:95624:95642	4211507	39	True				
ANR	4212466	CallExpression	r_list_free ( list )		4211507	0					
ANR	4212467	Callee	r_list_free		4211507	0					
ANR	4212468	Identifier	r_list_free		4211507	0					
ANR	4212469	ArgumentList	list		4211507	1					
ANR	4212470	Argument	list		4211507	0					
ANR	4212471	Identifier	list		4211507	0					
ANR	4212472	BreakStatement	break ;	3299:3:95647:95652	4211507	40	True				
ANR	4212473	Label	case '=' :	3300:2:95656:95664	4211507	41	True				
ANR	4212474	ExpressionStatement	addr = UT64_MAX	3301:3:95677:95692	4211507	42	True				
ANR	4212475	AssignmentExpression	addr = UT64_MAX		4211507	0		=			
ANR	4212476	Identifier	addr		4211507	0					
ANR	4212477	Identifier	UT64_MAX		4211507	1					
ANR	4212478	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		4211507	43					
ANR	4212479	Condition	input [ 2 ] == ' ' && input [ 3 ]	3302:7:95701:95727	4211507	0	True				
ANR	4212480	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		4211507	0		&&			
ANR	4212481	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4212482	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4212483	Identifier	input		4211507	0					
ANR	4212484	PrimaryExpression	2		4211507	1					
ANR	4212485	PrimaryExpression	' '		4211507	1					
ANR	4212486	ArrayIndexing	input [ 3 ]		4211507	1					
ANR	4212487	Identifier	input		4211507	0					
ANR	4212488	PrimaryExpression	3		4211507	1					
ANR	4212489	CompoundStatement		150:36:4010:4010	4211507	1					
ANR	4212490	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3303:4:95736:95776	4211507	0	True				
ANR	4212491	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4211507	0		=			
ANR	4212492	Identifier	addr		4211507	0					
ANR	4212493	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4212494	Callee	r_num_math		4211507	0					
ANR	4212495	Identifier	r_num_math		4211507	0					
ANR	4212496	ArgumentList	core -> num		4211507	1					
ANR	4212497	Argument	core -> num		4211507	0					
ANR	4212498	PtrMemberAccess	core -> num		4211507	0					
ANR	4212499	Identifier	core		4211507	0					
ANR	4212500	Identifier	num		4211507	1					
ANR	4212501	Argument	input + 2		4211507	1					
ANR	4212502	AdditiveExpression	input + 2		4211507	0		+			
ANR	4212503	Identifier	input		4211507	0					
ANR	4212504	PrimaryExpression	2		4211507	1					
ANR	4212505	ExpressionStatement	i = 0	3305:3:95786:95791	4211507	44	True				
ANR	4212506	AssignmentExpression	i = 0		4211507	0		=			
ANR	4212507	Identifier	i		4211507	0					
ANR	4212508	PrimaryExpression	0		4211507	1					
ANR	4212509	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3306:3:95796:95835	4211507	45	True				
ANR	4212510	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		4211507	0		=			
ANR	4212511	Identifier	list		4211507	0					
ANR	4212512	CallExpression	"r_debug_frames ( core -> dbg , addr )"		4211507	1					
ANR	4212513	Callee	r_debug_frames		4211507	0					
ANR	4212514	Identifier	r_debug_frames		4211507	0					
ANR	4212515	ArgumentList	core -> dbg		4211507	1					
ANR	4212516	Argument	core -> dbg		4211507	0					
ANR	4212517	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212518	Identifier	core		4211507	0					
ANR	4212519	Identifier	dbg		4211507	1					
ANR	4212520	Argument	addr		4211507	1					
ANR	4212521	Identifier	addr		4211507	0					
ANR	4212522	ExpressionStatement	r_list_reverse ( list )	3307:3:95840:95861	4211507	46	True				
ANR	4212523	CallExpression	r_list_reverse ( list )		4211507	0					
ANR	4212524	Callee	r_list_reverse		4211507	0					
ANR	4212525	Identifier	r_list_reverse		4211507	0					
ANR	4212526	ArgumentList	list		4211507	1					
ANR	4212527	Argument	list		4211507	0					
ANR	4212528	Identifier	list		4211507	0					
ANR	4212529	Statement	r_list_foreach	3308:3:95866:95879	4211507	47	True				
ANR	4212530	Statement	(	3308:18:95881:95881	4211507	48	True				
ANR	4212531	Statement	list	3308:19:95882:95885	4211507	49	True				
ANR	4212532	Statement	","	3308:23:95886:95886	4211507	50	True				
ANR	4212533	Statement	iter	3308:25:95888:95891	4211507	51	True				
ANR	4212534	Statement	","	3308:29:95892:95892	4211507	52	True				
ANR	4212535	Statement	frame	3308:31:95894:95898	4211507	53	True				
ANR	4212536	Statement	)	3308:36:95899:95899	4211507	54	True				
ANR	4212537	CompoundStatement		156:38:4181:4181	4211507	55					
ANR	4212538	SwitchStatement	switch ( input [ 3 ] )		4211507	0					
ANR	4212539	Condition	input [ 3 ]	3309:12:95915:95922	4211507	0	True				
ANR	4212540	ArrayIndexing	input [ 3 ]		4211507	0					
ANR	4212541	Identifier	input		4211507	0					
ANR	4212542	PrimaryExpression	3		4211507	1					
ANR	4212543	CompoundStatement		157:22:4205:4205	4211507	1					
ANR	4212544	Label	case 0 :	3310:4:95931:95937	4211507	0	True				
ANR	4212545	Statement	r_cons_printf	3311:5:95944:95956	4211507	1	True				
ANR	4212546	Statement	(	3311:19:95958:95958	4211507	2	True				
ANR	4212547	Statement	"""%s0x%08"""	3311:20:95959:95967	4211507	3	True				
ANR	4212548	Statement	PFMT64x	3311:29:95968:95974	4211507	4	True				
ANR	4212549	Statement	","	3311:36:95975:95975	4211507	5	True				
ANR	4212550	Statement	(	3312:7:95984:95984	4211507	6	True				
ANR	4212551	Statement	i	3312:8:95985:95985	4211507	7	True				
ANR	4212552	Statement	?	3312:10:95987:95987	4211507	8	True				
ANR	4212553	Statement	""" """	3312:12:95989:95991	4211507	9	True				
ANR	4212554	Statement	:	3312:16:95993:95993	4211507	10	True				
ANR	4212555	Statement	""""""	3312:18:95995:95996	4211507	11	True				
ANR	4212556	Statement	)	3312:20:95997:95997	4211507	12	True				
ANR	4212557	Statement	","	3312:21:95998:95998	4211507	13	True				
ANR	4212558	Statement	frame	3312:23:96000:96004	4211507	14	True				
ANR	4212559	Statement	->	3312:28:96005:96006	4211507	15	True				
ANR	4212560	Statement	addr	3312:30:96007:96010	4211507	16	True				
ANR	4212561	Statement	)	3312:34:96011:96011	4211507	17	True				
ANR	4212562	ExpressionStatement		3312:35:96012:96012	4211507	18	True				
ANR	4212563	BreakStatement	break ;	3313:5:96019:96024	4211507	19	True				
ANR	4212564	Label	case 's' :	3314:4:96030:96038	4211507	20	True				
ANR	4212565	Statement	r_cons_printf	3315:5:96045:96057	4211507	21	True				
ANR	4212566	Statement	(	3315:19:96059:96059	4211507	22	True				
ANR	4212567	Statement	"""%s0x%08"""	3315:20:96060:96068	4211507	23	True				
ANR	4212568	Statement	PFMT64x	3315:29:96069:96075	4211507	24	True				
ANR	4212569	Statement	","	3315:36:96076:96076	4211507	25	True				
ANR	4212570	Statement	(	3316:7:96085:96085	4211507	26	True				
ANR	4212571	Statement	i	3316:8:96086:96086	4211507	27	True				
ANR	4212572	Statement	?	3316:10:96088:96088	4211507	28	True				
ANR	4212573	Statement	""" """	3316:12:96090:96092	4211507	29	True				
ANR	4212574	Statement	:	3316:16:96094:96094	4211507	30	True				
ANR	4212575	Statement	""""""	3316:18:96096:96097	4211507	31	True				
ANR	4212576	Statement	)	3316:20:96098:96098	4211507	32	True				
ANR	4212577	Statement	","	3316:21:96099:96099	4211507	33	True				
ANR	4212578	Statement	frame	3316:23:96101:96105	4211507	34	True				
ANR	4212579	Statement	->	3316:28:96106:96107	4211507	35	True				
ANR	4212580	Statement	sp	3316:30:96108:96109	4211507	36	True				
ANR	4212581	Statement	)	3316:32:96110:96110	4211507	37	True				
ANR	4212582	ExpressionStatement		3316:33:96111:96111	4211507	38	True				
ANR	4212583	BreakStatement	break ;	3317:5:96118:96123	4211507	39	True				
ANR	4212584	Label	case 'b' :	3318:4:96129:96137	4211507	40	True				
ANR	4212585	Statement	r_cons_printf	3319:5:96144:96156	4211507	41	True				
ANR	4212586	Statement	(	3319:19:96158:96158	4211507	42	True				
ANR	4212587	Statement	"""%s0x%08"""	3319:20:96159:96167	4211507	43	True				
ANR	4212588	Statement	PFMT64x	3319:29:96168:96174	4211507	44	True				
ANR	4212589	Statement	","	3319:36:96175:96175	4211507	45	True				
ANR	4212590	Statement	(	3320:7:96184:96184	4211507	46	True				
ANR	4212591	Statement	i	3320:8:96185:96185	4211507	47	True				
ANR	4212592	Statement	?	3320:10:96187:96187	4211507	48	True				
ANR	4212593	Statement	""" """	3320:12:96189:96191	4211507	49	True				
ANR	4212594	Statement	:	3320:16:96193:96193	4211507	50	True				
ANR	4212595	Statement	""""""	3320:18:96195:96196	4211507	51	True				
ANR	4212596	Statement	)	3320:20:96197:96197	4211507	52	True				
ANR	4212597	Statement	","	3320:21:96198:96198	4211507	53	True				
ANR	4212598	Statement	frame	3320:23:96200:96204	4211507	54	True				
ANR	4212599	Statement	->	3320:28:96205:96206	4211507	55	True				
ANR	4212600	Statement	bp	3320:30:96207:96208	4211507	56	True				
ANR	4212601	Statement	)	3320:32:96209:96209	4211507	57	True				
ANR	4212602	ExpressionStatement		3320:33:96210:96210	4211507	58	True				
ANR	4212603	BreakStatement	break ;	3321:5:96217:96222	4211507	59	True				
ANR	4212604	Label	case '?' :	3322:4:96228:96236	4211507	60	True				
ANR	4212605	Label	default :	3323:4:96242:96249	4211507	61	True				
ANR	4212606	Identifier	default		4211507	0					
ANR	4212607	ExpressionStatement	"r_core_cmd0 ( core , ""db?~dbt"" )"	3324:5:96256:96285	4211507	62	True				
ANR	4212608	CallExpression	"r_core_cmd0 ( core , ""db?~dbt"" )"		4211507	0					
ANR	4212609	Callee	r_core_cmd0		4211507	0					
ANR	4212610	Identifier	r_core_cmd0		4211507	0					
ANR	4212611	ArgumentList	core		4211507	1					
ANR	4212612	Argument	core		4211507	0					
ANR	4212613	Identifier	core		4211507	0					
ANR	4212614	Argument	"""db?~dbt"""		4211507	1					
ANR	4212615	PrimaryExpression	"""db?~dbt"""		4211507	0					
ANR	4212616	BreakStatement	break ;	3325:5:96292:96297	4211507	63	True				
ANR	4212617	ExpressionStatement	i ++	3327:4:96309:96312	4211507	1	True				
ANR	4212618	PostIncDecOperationExpression	i ++		4211507	0					
ANR	4212619	Identifier	i		4211507	0					
ANR	4212620	IncDec	++		4211507	1					
ANR	4212621	ExpressionStatement	r_cons_newline ( )	3329:3:96322:96339	4211507	56	True				
ANR	4212622	CallExpression	r_cons_newline ( )		4211507	0					
ANR	4212623	Callee	r_cons_newline		4211507	0					
ANR	4212624	Identifier	r_cons_newline		4211507	0					
ANR	4212625	ArgumentList			4211507	1					
ANR	4212626	ExpressionStatement	r_list_free ( list )	3330:3:96344:96362	4211507	57	True				
ANR	4212627	CallExpression	r_list_free ( list )		4211507	0					
ANR	4212628	Callee	r_list_free		4211507	0					
ANR	4212629	Identifier	r_list_free		4211507	0					
ANR	4212630	ArgumentList	list		4211507	1					
ANR	4212631	Argument	list		4211507	0					
ANR	4212632	Identifier	list		4211507	0					
ANR	4212633	BreakStatement	break ;	3331:3:96367:96372	4211507	58	True				
ANR	4212634	Label	case '*' :	3332:2:96376:96384	4211507	59	True				
ANR	4212635	ExpressionStatement	addr = UT64_MAX	3333:3:96397:96412	4211507	60	True				
ANR	4212636	AssignmentExpression	addr = UT64_MAX		4211507	0		=			
ANR	4212637	Identifier	addr		4211507	0					
ANR	4212638	Identifier	UT64_MAX		4211507	1					
ANR	4212639	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		4211507	61					
ANR	4212640	Condition	input [ 2 ] == ' ' && input [ 3 ]	3334:7:96421:96447	4211507	0	True				
ANR	4212641	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		4211507	0		&&			
ANR	4212642	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4212643	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4212644	Identifier	input		4211507	0					
ANR	4212645	PrimaryExpression	2		4211507	1					
ANR	4212646	PrimaryExpression	' '		4211507	1					
ANR	4212647	ArrayIndexing	input [ 3 ]		4211507	1					
ANR	4212648	Identifier	input		4211507	0					
ANR	4212649	PrimaryExpression	3		4211507	1					
ANR	4212650	CompoundStatement		182:36:4730:4730	4211507	1					
ANR	4212651	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3335:4:96456:96496	4211507	0	True				
ANR	4212652	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4211507	0		=			
ANR	4212653	Identifier	addr		4211507	0					
ANR	4212654	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4212655	Callee	r_num_math		4211507	0					
ANR	4212656	Identifier	r_num_math		4211507	0					
ANR	4212657	ArgumentList	core -> num		4211507	1					
ANR	4212658	Argument	core -> num		4211507	0					
ANR	4212659	PtrMemberAccess	core -> num		4211507	0					
ANR	4212660	Identifier	core		4211507	0					
ANR	4212661	Identifier	num		4211507	1					
ANR	4212662	Argument	input + 2		4211507	1					
ANR	4212663	AdditiveExpression	input + 2		4211507	0		+			
ANR	4212664	Identifier	input		4211507	0					
ANR	4212665	PrimaryExpression	2		4211507	1					
ANR	4212666	ExpressionStatement	i = 0	3337:3:96506:96511	4211507	62	True				
ANR	4212667	AssignmentExpression	i = 0		4211507	0		=			
ANR	4212668	Identifier	i		4211507	0					
ANR	4212669	PrimaryExpression	0		4211507	1					
ANR	4212670	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3338:3:96516:96555	4211507	63	True				
ANR	4212671	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		4211507	0		=			
ANR	4212672	Identifier	list		4211507	0					
ANR	4212673	CallExpression	"r_debug_frames ( core -> dbg , addr )"		4211507	1					
ANR	4212674	Callee	r_debug_frames		4211507	0					
ANR	4212675	Identifier	r_debug_frames		4211507	0					
ANR	4212676	ArgumentList	core -> dbg		4211507	1					
ANR	4212677	Argument	core -> dbg		4211507	0					
ANR	4212678	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212679	Identifier	core		4211507	0					
ANR	4212680	Identifier	dbg		4211507	1					
ANR	4212681	Argument	addr		4211507	1					
ANR	4212682	Identifier	addr		4211507	0					
ANR	4212683	ExpressionStatement	r_list_reverse ( list )	3339:3:96560:96581	4211507	64	True				
ANR	4212684	CallExpression	r_list_reverse ( list )		4211507	0					
ANR	4212685	Callee	r_list_reverse		4211507	0					
ANR	4212686	Identifier	r_list_reverse		4211507	0					
ANR	4212687	ArgumentList	list		4211507	1					
ANR	4212688	Argument	list		4211507	0					
ANR	4212689	Identifier	list		4211507	0					
ANR	4212690	ExpressionStatement	"r_cons_printf ( ""f-bt.*\\n"" )"	3340:3:96586:96612	4211507	65	True				
ANR	4212691	CallExpression	"r_cons_printf ( ""f-bt.*\\n"" )"		4211507	0					
ANR	4212692	Callee	r_cons_printf		4211507	0					
ANR	4212693	Identifier	r_cons_printf		4211507	0					
ANR	4212694	ArgumentList	"""f-bt.*\\n"""		4211507	1					
ANR	4212695	Argument	"""f-bt.*\\n"""		4211507	0					
ANR	4212696	PrimaryExpression	"""f-bt.*\\n"""		4211507	0					
ANR	4212697	Statement	r_list_foreach	3341:3:96617:96630	4211507	66	True				
ANR	4212698	Statement	(	3341:18:96632:96632	4211507	67	True				
ANR	4212699	Statement	list	3341:19:96633:96636	4211507	68	True				
ANR	4212700	Statement	","	3341:23:96637:96637	4211507	69	True				
ANR	4212701	Statement	iter	3341:25:96639:96642	4211507	70	True				
ANR	4212702	Statement	","	3341:29:96643:96643	4211507	71	True				
ANR	4212703	Statement	frame	3341:31:96645:96649	4211507	72	True				
ANR	4212704	Statement	)	3341:36:96650:96650	4211507	73	True				
ANR	4212705	CompoundStatement		189:38:4932:4932	4211507	74					
ANR	4212706	Statement	r_cons_printf	3342:4:96658:96670	4211507	0	True				
ANR	4212707	Statement	(	3342:18:96672:96672	4211507	1	True				
ANR	4212708	Statement	"""f bt.frame%d = 0x%08"""	3342:19:96673:96694	4211507	2	True				
ANR	4212709	Statement	PFMT64x	3342:41:96695:96701	4211507	3	True				
ANR	4212710	Statement	"""\\n"""	3342:48:96702:96705	4211507	4	True				
ANR	4212711	Statement	","	3342:52:96706:96706	4211507	5	True				
ANR	4212712	Statement	i	3342:54:96708:96708	4211507	6	True				
ANR	4212713	Statement	","	3342:55:96709:96709	4211507	7	True				
ANR	4212714	Statement	frame	3342:57:96711:96715	4211507	8	True				
ANR	4212715	Statement	->	3342:62:96716:96717	4211507	9	True				
ANR	4212716	Statement	addr	3342:64:96718:96721	4211507	10	True				
ANR	4212717	Statement	)	3342:68:96722:96722	4211507	11	True				
ANR	4212718	ExpressionStatement		3342:69:96723:96723	4211507	12	True				
ANR	4212719	Statement	r_cons_printf	3343:4:96729:96741	4211507	13	True				
ANR	4212720	Statement	(	3343:18:96743:96743	4211507	14	True				
ANR	4212721	Statement	"""f bt.frame%d.stack %d 0x%08"""	3343:19:96744:96772	4211507	15	True				
ANR	4212722	Statement	PFMT64x	3343:48:96773:96779	4211507	16	True				
ANR	4212723	Statement	"""\\n"""	3343:55:96780:96783	4211507	17	True				
ANR	4212724	Statement	","	3343:59:96784:96784	4211507	18	True				
ANR	4212725	Statement	i	3343:61:96786:96786	4211507	19	True				
ANR	4212726	Statement	","	3343:62:96787:96787	4211507	20	True				
ANR	4212727	Statement	frame	3343:64:96789:96793	4211507	21	True				
ANR	4212728	Statement	->	3343:69:96794:96795	4211507	22	True				
ANR	4212729	Statement	size	3343:71:96796:96799	4211507	23	True				
ANR	4212730	Statement	","	3343:75:96800:96800	4211507	24	True				
ANR	4212731	Statement	frame	3343:77:96802:96806	4211507	25	True				
ANR	4212732	Statement	->	3343:82:96807:96808	4211507	26	True				
ANR	4212733	Statement	sp	3343:84:96809:96810	4211507	27	True				
ANR	4212734	Statement	)	3343:86:96811:96811	4211507	28	True				
ANR	4212735	ExpressionStatement		3343:87:96812:96812	4211507	29	True				
ANR	4212736	ExpressionStatement	i ++	3344:4:96818:96821	4211507	30	True				
ANR	4212737	PostIncDecOperationExpression	i ++		4211507	0					
ANR	4212738	Identifier	i		4211507	0					
ANR	4212739	IncDec	++		4211507	1					
ANR	4212740	ExpressionStatement	r_list_free ( list )	3346:3:96831:96849	4211507	75	True				
ANR	4212741	CallExpression	r_list_free ( list )		4211507	0					
ANR	4212742	Callee	r_list_free		4211507	0					
ANR	4212743	Identifier	r_list_free		4211507	0					
ANR	4212744	ArgumentList	list		4211507	1					
ANR	4212745	Argument	list		4211507	0					
ANR	4212746	Identifier	list		4211507	0					
ANR	4212747	BreakStatement	break ;	3347:3:96854:96859	4211507	76	True				
ANR	4212748	Label	case 0 :	3348:2:96863:96869	4211507	77	True				
ANR	4212749	ExpressionStatement	addr = UT64_MAX	3349:3:96896:96911	4211507	78	True				
ANR	4212750	AssignmentExpression	addr = UT64_MAX		4211507	0		=			
ANR	4212751	Identifier	addr		4211507	0					
ANR	4212752	Identifier	UT64_MAX		4211507	1					
ANR	4212753	IfStatement	if ( input [ 2 ] == ' ' && input [ 3 ] )		4211507	79					
ANR	4212754	Condition	input [ 2 ] == ' ' && input [ 3 ]	3350:7:96920:96946	4211507	0	True				
ANR	4212755	AndExpression	input [ 2 ] == ' ' && input [ 3 ]		4211507	0		&&			
ANR	4212756	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4212757	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4212758	Identifier	input		4211507	0					
ANR	4212759	PrimaryExpression	2		4211507	1					
ANR	4212760	PrimaryExpression	' '		4211507	1					
ANR	4212761	ArrayIndexing	input [ 3 ]		4211507	1					
ANR	4212762	Identifier	input		4211507	0					
ANR	4212763	PrimaryExpression	3		4211507	1					
ANR	4212764	CompoundStatement		198:36:5229:5229	4211507	1					
ANR	4212765	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3351:4:96955:96995	4211507	0	True				
ANR	4212766	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4211507	0		=			
ANR	4212767	Identifier	addr		4211507	0					
ANR	4212768	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4212769	Callee	r_num_math		4211507	0					
ANR	4212770	Identifier	r_num_math		4211507	0					
ANR	4212771	ArgumentList	core -> num		4211507	1					
ANR	4212772	Argument	core -> num		4211507	0					
ANR	4212773	PtrMemberAccess	core -> num		4211507	0					
ANR	4212774	Identifier	core		4211507	0					
ANR	4212775	Identifier	num		4211507	1					
ANR	4212776	Argument	input + 2		4211507	1					
ANR	4212777	AdditiveExpression	input + 2		4211507	0		+			
ANR	4212778	Identifier	input		4211507	0					
ANR	4212779	PrimaryExpression	2		4211507	1					
ANR	4212780	ExpressionStatement	i = 0	3353:3:97005:97010	4211507	80	True				
ANR	4212781	AssignmentExpression	i = 0		4211507	0		=			
ANR	4212782	Identifier	i		4211507	0					
ANR	4212783	PrimaryExpression	0		4211507	1					
ANR	4212784	ExpressionStatement	"list = r_debug_frames ( core -> dbg , addr )"	3354:3:97015:97054	4211507	81	True				
ANR	4212785	AssignmentExpression	"list = r_debug_frames ( core -> dbg , addr )"		4211507	0		=			
ANR	4212786	Identifier	list		4211507	0					
ANR	4212787	CallExpression	"r_debug_frames ( core -> dbg , addr )"		4211507	1					
ANR	4212788	Callee	r_debug_frames		4211507	0					
ANR	4212789	Identifier	r_debug_frames		4211507	0					
ANR	4212790	ArgumentList	core -> dbg		4211507	1					
ANR	4212791	Argument	core -> dbg		4211507	0					
ANR	4212792	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212793	Identifier	core		4211507	0					
ANR	4212794	Identifier	dbg		4211507	1					
ANR	4212795	Argument	addr		4211507	1					
ANR	4212796	Identifier	addr		4211507	0					
ANR	4212797	ExpressionStatement	hex_format = true	3355:3:97059:97076	4211507	82	True				
ANR	4212798	AssignmentExpression	hex_format = true		4211507	0		=			
ANR	4212799	Identifier	hex_format		4211507	0					
ANR	4212800	Identifier	true		4211507	1					
ANR	4212801	Statement	r_list_foreach	3356:3:97081:97094	4211507	83	True				
ANR	4212802	Statement	(	3356:18:97096:97096	4211507	84	True				
ANR	4212803	Statement	list	3356:19:97097:97100	4211507	85	True				
ANR	4212804	Statement	","	3356:23:97101:97101	4211507	86	True				
ANR	4212805	Statement	iter	3356:25:97103:97106	4211507	87	True				
ANR	4212806	Statement	","	3356:29:97107:97107	4211507	88	True				
ANR	4212807	Statement	frame	3356:31:97109:97113	4211507	89	True				
ANR	4212808	Statement	)	3356:36:97114:97114	4211507	90	True				
ANR	4212809	CompoundStatement		207:4:5545:5612	4211507	91					
ANR	4212810	IdentifierDeclStatement	"char * flagdesc , * flagdesc2 , * pcstr , * spstr ;"	3357:4:97122:97164	4211507	0	True				
ANR	4212811	IdentifierDecl	* flagdesc		4211507	0					
ANR	4212812	IdentifierDeclType	char *		4211507	0					
ANR	4212813	Identifier	flagdesc		4211507	1					
ANR	4212814	IdentifierDecl	* flagdesc2		4211507	1					
ANR	4212815	IdentifierDeclType	char *		4211507	0					
ANR	4212816	Identifier	flagdesc2		4211507	1					
ANR	4212817	IdentifierDecl	* pcstr		4211507	2					
ANR	4212818	IdentifierDeclType	char *		4211507	0					
ANR	4212819	Identifier	pcstr		4211507	1					
ANR	4212820	IdentifierDecl	* spstr		4211507	3					
ANR	4212821	IdentifierDeclType	char *		4211507	0					
ANR	4212822	Identifier	spstr		4211507	1					
ANR	4212823	ExpressionStatement	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"	3358:4:97170:97259	4211507	1	True				
ANR	4212824	CallExpression	"get_backtrace_info ( core , frame , addr , & flagdesc , & flagdesc2 , & pcstr , & spstr , hex_format )"		4211507	0					
ANR	4212825	Callee	get_backtrace_info		4211507	0					
ANR	4212826	Identifier	get_backtrace_info		4211507	0					
ANR	4212827	ArgumentList	core		4211507	1					
ANR	4212828	Argument	core		4211507	0					
ANR	4212829	Identifier	core		4211507	0					
ANR	4212830	Argument	frame		4211507	1					
ANR	4212831	Identifier	frame		4211507	0					
ANR	4212832	Argument	addr		4211507	2					
ANR	4212833	Identifier	addr		4211507	0					
ANR	4212834	Argument	& flagdesc		4211507	3					
ANR	4212835	UnaryOperationExpression	& flagdesc		4211507	0					
ANR	4212836	UnaryOperator	&		4211507	0					
ANR	4212837	Identifier	flagdesc		4211507	1					
ANR	4212838	Argument	& flagdesc2		4211507	4					
ANR	4212839	UnaryOperationExpression	& flagdesc2		4211507	0					
ANR	4212840	UnaryOperator	&		4211507	0					
ANR	4212841	Identifier	flagdesc2		4211507	1					
ANR	4212842	Argument	& pcstr		4211507	5					
ANR	4212843	UnaryOperationExpression	& pcstr		4211507	0					
ANR	4212844	UnaryOperator	&		4211507	0					
ANR	4212845	Identifier	pcstr		4211507	1					
ANR	4212846	Argument	& spstr		4211507	6					
ANR	4212847	UnaryOperationExpression	& spstr		4211507	0					
ANR	4212848	UnaryOperator	&		4211507	0					
ANR	4212849	Identifier	spstr		4211507	1					
ANR	4212850	Argument	hex_format		4211507	7					
ANR	4212851	Identifier	hex_format		4211507	0					
ANR	4212852	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 ) ;"	3359:4:97265:97332	4211507	2	True				
ANR	4212853	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		4211507	0					
ANR	4212854	IdentifierDeclType	RAnalFunction *		4211507	0					
ANR	4212855	Identifier	fcn		4211507	1					
ANR	4212856	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		4211507	2		=			
ANR	4212857	Identifier	fcn		4211507	0					
ANR	4212858	CallExpression	"r_anal_get_fcn_in ( core -> anal , frame -> addr , 0 )"		4211507	1					
ANR	4212859	Callee	r_anal_get_fcn_in		4211507	0					
ANR	4212860	Identifier	r_anal_get_fcn_in		4211507	0					
ANR	4212861	ArgumentList	core -> anal		4211507	1					
ANR	4212862	Argument	core -> anal		4211507	0					
ANR	4212863	PtrMemberAccess	core -> anal		4211507	0					
ANR	4212864	Identifier	core		4211507	0					
ANR	4212865	Identifier	anal		4211507	1					
ANR	4212866	Argument	frame -> addr		4211507	1					
ANR	4212867	PtrMemberAccess	frame -> addr		4211507	0					
ANR	4212868	Identifier	frame		4211507	0					
ANR	4212869	Identifier	addr		4211507	1					
ANR	4212870	Argument	0		4211507	2					
ANR	4212871	PrimaryExpression	0		4211507	0					
ANR	4212872	Statement	r_cons_printf	3360:4:97338:97350	4211507	3	True				
ANR	4212873	Statement	(	3360:18:97352:97352	4211507	4	True				
ANR	4212874	Statement	"""%d  %s sp: %s  %-5d"""	3360:19:97353:97373	4211507	5	True				
ANR	4212875	Statement	"""[%s]  %s %s\\n"""	3361:6:97381:97395	4211507	6	True				
ANR	4212876	Statement	","	3361:21:97396:97396	4211507	7	True				
ANR	4212877	Statement	i	3361:23:97398:97398	4211507	8	True				
ANR	4212878	Statement	++	3361:24:97399:97400	4211507	9	True				
ANR	4212879	Statement	","	3361:26:97401:97401	4211507	10	True				
ANR	4212880	Statement	pcstr	3362:6:97409:97413	4211507	11	True				
ANR	4212881	Statement	","	3362:11:97414:97414	4211507	12	True				
ANR	4212882	Statement	spstr	3362:13:97416:97420	4211507	13	True				
ANR	4212883	Statement	","	3362:18:97421:97421	4211507	14	True				
ANR	4212884	Statement	(	3363:6:97429:97429	4211507	15	True				
ANR	4212885	Statement	int	3363:7:97430:97432	4211507	16	True				
ANR	4212886	Statement	)	3363:10:97433:97433	4211507	17	True				
ANR	4212887	Statement	frame	3363:11:97434:97438	4211507	18	True				
ANR	4212888	Statement	->	3363:16:97439:97440	4211507	19	True				
ANR	4212889	Statement	size	3363:18:97441:97444	4211507	20	True				
ANR	4212890	Statement	","	3363:22:97445:97445	4211507	21	True				
ANR	4212891	Statement	fcn	3364:6:97453:97455	4211507	22	True				
ANR	4212892	Statement	?	3364:10:97457:97457	4211507	23	True				
ANR	4212893	Statement	fcn	3364:12:97459:97461	4211507	24	True				
ANR	4212894	Statement	->	3364:15:97462:97463	4211507	25	True				
ANR	4212895	Label	name :	3364:17:97464:97469	4211507	26	True				
ANR	4212896	Identifier	name		4211507	0					
ANR	4212897	Statement	"""??"""	3364:24:97471:97474	4211507	27	True				
ANR	4212898	Statement	","	3364:28:97475:97475	4211507	28	True				
ANR	4212899	Statement	flagdesc	3365:6:97483:97490	4211507	29	True				
ANR	4212900	Statement	?	3365:15:97492:97492	4211507	30	True				
ANR	4212901	Label	flagdesc :	3365:17:97494:97503	4211507	31	True				
ANR	4212902	Identifier	flagdesc		4211507	0					
ANR	4212903	Statement	""""""	3365:28:97505:97506	4211507	32	True				
ANR	4212904	Statement	","	3365:30:97507:97507	4211507	33	True				
ANR	4212905	Statement	flagdesc2	3366:6:97515:97523	4211507	34	True				
ANR	4212906	Statement	?	3366:16:97525:97525	4211507	35	True				
ANR	4212907	Label	flagdesc2 :	3366:18:97527:97537	4211507	36	True				
ANR	4212908	Identifier	flagdesc2		4211507	0					
ANR	4212909	Statement	""""""	3366:30:97539:97540	4211507	37	True				
ANR	4212910	Statement	)	3366:32:97541:97541	4211507	38	True				
ANR	4212911	ExpressionStatement		3366:33:97542:97542	4211507	39	True				
ANR	4212912	ExpressionStatement	free ( flagdesc )	3367:4:97548:97563	4211507	40	True				
ANR	4212913	CallExpression	free ( flagdesc )		4211507	0					
ANR	4212914	Callee	free		4211507	0					
ANR	4212915	Identifier	free		4211507	0					
ANR	4212916	ArgumentList	flagdesc		4211507	1					
ANR	4212917	Argument	flagdesc		4211507	0					
ANR	4212918	Identifier	flagdesc		4211507	0					
ANR	4212919	ExpressionStatement	free ( flagdesc2 )	3368:4:97569:97585	4211507	41	True				
ANR	4212920	CallExpression	free ( flagdesc2 )		4211507	0					
ANR	4212921	Callee	free		4211507	0					
ANR	4212922	Identifier	free		4211507	0					
ANR	4212923	ArgumentList	flagdesc2		4211507	1					
ANR	4212924	Argument	flagdesc2		4211507	0					
ANR	4212925	Identifier	flagdesc2		4211507	0					
ANR	4212926	ExpressionStatement	free ( pcstr )	3369:4:97591:97603	4211507	42	True				
ANR	4212927	CallExpression	free ( pcstr )		4211507	0					
ANR	4212928	Callee	free		4211507	0					
ANR	4212929	Identifier	free		4211507	0					
ANR	4212930	ArgumentList	pcstr		4211507	1					
ANR	4212931	Argument	pcstr		4211507	0					
ANR	4212932	Identifier	pcstr		4211507	0					
ANR	4212933	ExpressionStatement	free ( spstr )	3370:4:97609:97621	4211507	43	True				
ANR	4212934	CallExpression	free ( spstr )		4211507	0					
ANR	4212935	Callee	free		4211507	0					
ANR	4212936	Identifier	free		4211507	0					
ANR	4212937	ArgumentList	spstr		4211507	1					
ANR	4212938	Argument	spstr		4211507	0					
ANR	4212939	Identifier	spstr		4211507	0					
ANR	4212940	ExpressionStatement	r_list_free ( list )	3372:3:97631:97649	4211507	92	True				
ANR	4212941	CallExpression	r_list_free ( list )		4211507	0					
ANR	4212942	Callee	r_list_free		4211507	0					
ANR	4212943	Identifier	r_list_free		4211507	0					
ANR	4212944	ArgumentList	list		4211507	1					
ANR	4212945	Argument	list		4211507	0					
ANR	4212946	Identifier	list		4211507	0					
ANR	4212947	BreakStatement	break ;	3373:3:97654:97659	4211507	93	True				
ANR	4212948	Label	case '?' :	3374:2:97663:97671	4211507	94	True				
ANR	4212949	Label	default :	3375:2:97675:97682	4211507	95	True				
ANR	4212950	Identifier	default		4211507	0					
ANR	4212951	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dbt )"	3376:3:97687:97723	4211507	96	True				
ANR	4212952	CallExpression	"r_core_cmd_help ( core , help_msg_dbt )"		4211507	0					
ANR	4212953	Callee	r_core_cmd_help		4211507	0					
ANR	4212954	Identifier	r_core_cmd_help		4211507	0					
ANR	4212955	ArgumentList	core		4211507	1					
ANR	4212956	Argument	core		4211507	0					
ANR	4212957	Identifier	core		4211507	0					
ANR	4212958	Argument	help_msg_dbt		4211507	1					
ANR	4212959	Identifier	help_msg_dbt		4211507	0					
ANR	4212960	BreakStatement	break ;	3377:3:97728:97733	4211507	97	True				
ANR	4212961	BreakStatement	break ;	3379:2:97741:97746	4211507	11	True				
ANR	4212962	Label	case 'b' :	3380:1:97749:97757	4211507	12	True				
ANR	4212963	IfStatement	if ( input [ 2 ] )		4211507	13					
ANR	4212964	Condition	input [ 2 ]	3381:6:97774:97781	4211507	0	True				
ANR	4212965	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4212966	Identifier	input		4211507	0					
ANR	4212967	PrimaryExpression	2		4211507	1					
ANR	4212968	CompoundStatement		229:16:6064:6064	4211507	1					
ANR	4212969	ExpressionStatement	"core -> dbg -> bp -> delta = ( st64 ) r_num_math ( core -> num , input + 2 )"	3382:3:97789:97851	4211507	0	True				
ANR	4212970	AssignmentExpression	"core -> dbg -> bp -> delta = ( st64 ) r_num_math ( core -> num , input + 2 )"		4211507	0		=			
ANR	4212971	PtrMemberAccess	core -> dbg -> bp -> delta		4211507	0					
ANR	4212972	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4212973	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4212974	Identifier	core		4211507	0					
ANR	4212975	Identifier	dbg		4211507	1					
ANR	4212976	Identifier	bp		4211507	1					
ANR	4212977	Identifier	delta		4211507	1					
ANR	4212978	CastExpression	"( st64 ) r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4212979	CastTarget	st64		4211507	0					
ANR	4212980	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4212981	Callee	r_num_math		4211507	0					
ANR	4212982	Identifier	r_num_math		4211507	0					
ANR	4212983	ArgumentList	core -> num		4211507	1					
ANR	4212984	Argument	core -> num		4211507	0					
ANR	4212985	PtrMemberAccess	core -> num		4211507	0					
ANR	4212986	Identifier	core		4211507	0					
ANR	4212987	Identifier	num		4211507	1					
ANR	4212988	Argument	input + 2		4211507	1					
ANR	4212989	AdditiveExpression	input + 2		4211507	0		+			
ANR	4212990	Identifier	input		4211507	0					
ANR	4212991	PrimaryExpression	2		4211507	1					
ANR	4212992	ElseStatement	else		4211507	0					
ANR	4212993	CompoundStatement		231:9:6142:6142	4211507	0					
ANR	4212994	Statement	r_cons_printf	3384:3:97867:97879	4211507	0	True				
ANR	4212995	Statement	(	3384:17:97881:97881	4211507	1	True				
ANR	4212996	Statement	"""%"""	3384:18:97882:97884	4211507	2	True				
ANR	4212997	Statement	PFMT64d	3384:21:97885:97891	4211507	3	True				
ANR	4212998	Statement	"""\\n"""	3384:28:97892:97895	4211507	4	True				
ANR	4212999	Statement	","	3384:32:97896:97896	4211507	5	True				
ANR	4213000	Statement	core	3384:34:97898:97901	4211507	6	True				
ANR	4213001	Statement	->	3384:38:97902:97903	4211507	7	True				
ANR	4213002	Statement	dbg	3384:40:97904:97906	4211507	8	True				
ANR	4213003	Statement	->	3384:43:97907:97908	4211507	9	True				
ANR	4213004	Statement	bp	3384:45:97909:97910	4211507	10	True				
ANR	4213005	Statement	->	3384:47:97911:97912	4211507	11	True				
ANR	4213006	Statement	delta	3384:49:97913:97917	4211507	12	True				
ANR	4213007	Statement	)	3384:54:97918:97918	4211507	13	True				
ANR	4213008	ExpressionStatement		3384:55:97919:97919	4211507	14	True				
ANR	4213009	BreakStatement	break ;	3386:2:97927:97932	4211507	14	True				
ANR	4213010	Label	case 'm' :	3387:1:97935:97943	4211507	15	True				
ANR	4213011	IfStatement	if ( input [ 2 ] && input [ 3 ] )		4211507	16					
ANR	4213012	Condition	input [ 2 ] && input [ 3 ]	3388:6:97960:97979	4211507	0	True				
ANR	4213013	AndExpression	input [ 2 ] && input [ 3 ]		4211507	0		&&			
ANR	4213014	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4213015	Identifier	input		4211507	0					
ANR	4213016	PrimaryExpression	2		4211507	1					
ANR	4213017	ArrayIndexing	input [ 3 ]		4211507	1					
ANR	4213018	Identifier	input		4211507	0					
ANR	4213019	PrimaryExpression	3		4211507	1					
ANR	4213020	CompoundStatement		239:3:6329:6343	4211507	1					
ANR	4213021	IdentifierDeclStatement	char * string = strdup ( input + 3 ) ;	3389:3:97987:98020	4211507	0	True				
ANR	4213022	IdentifierDecl	* string = strdup ( input + 3 )		4211507	0					
ANR	4213023	IdentifierDeclType	char *		4211507	0					
ANR	4213024	Identifier	string		4211507	1					
ANR	4213025	AssignmentExpression	* string = strdup ( input + 3 )		4211507	2		=			
ANR	4213026	Identifier	string		4211507	0					
ANR	4213027	CallExpression	strdup ( input + 3 )		4211507	1					
ANR	4213028	Callee	strdup		4211507	0					
ANR	4213029	Identifier	strdup		4211507	0					
ANR	4213030	ArgumentList	input + 3		4211507	1					
ANR	4213031	Argument	input + 3		4211507	0					
ANR	4213032	AdditiveExpression	input + 3		4211507	0		+			
ANR	4213033	Identifier	input		4211507	0					
ANR	4213034	PrimaryExpression	3		4211507	1					
ANR	4213035	IdentifierDeclStatement	char * module = NULL ;	3390:3:98025:98044	4211507	1	True				
ANR	4213036	IdentifierDecl	* module = NULL		4211507	0					
ANR	4213037	IdentifierDeclType	char *		4211507	0					
ANR	4213038	Identifier	module		4211507	1					
ANR	4213039	AssignmentExpression	* module = NULL		4211507	2		=			
ANR	4213040	Identifier	NULL		4211507	0					
ANR	4213041	Identifier	NULL		4211507	1					
ANR	4213042	IdentifierDeclStatement	st64 delta = 0 ;	3391:3:98049:98063	4211507	2	True				
ANR	4213043	IdentifierDecl	delta = 0		4211507	0					
ANR	4213044	IdentifierDeclType	st64		4211507	0					
ANR	4213045	Identifier	delta		4211507	1					
ANR	4213046	AssignmentExpression	delta = 0		4211507	2		=			
ANR	4213047	Identifier	delta		4211507	0					
ANR	4213048	PrimaryExpression	0		4211507	1					
ANR	4213049	ExpressionStatement	"module = strtok ( string , "" "" )"	3393:3:98069:98098	4211507	3	True				
ANR	4213050	AssignmentExpression	"module = strtok ( string , "" "" )"		4211507	0		=			
ANR	4213051	Identifier	module		4211507	0					
ANR	4213052	CallExpression	"strtok ( string , "" "" )"		4211507	1					
ANR	4213053	Callee	strtok		4211507	0					
ANR	4213054	Identifier	strtok		4211507	0					
ANR	4213055	ArgumentList	string		4211507	1					
ANR	4213056	Argument	string		4211507	0					
ANR	4213057	Identifier	string		4211507	0					
ANR	4213058	Argument	""" """		4211507	1					
ANR	4213059	PrimaryExpression	""" """		4211507	0					
ANR	4213060	ExpressionStatement	"delta = ( ut64 ) r_num_math ( core -> num , strtok ( NULL , """" ) )"	3394:3:98103:98158	4211507	4	True				
ANR	4213061	AssignmentExpression	"delta = ( ut64 ) r_num_math ( core -> num , strtok ( NULL , """" ) )"		4211507	0		=			
ANR	4213062	Identifier	delta		4211507	0					
ANR	4213063	CastExpression	"( ut64 ) r_num_math ( core -> num , strtok ( NULL , """" ) )"		4211507	1					
ANR	4213064	CastTarget	ut64		4211507	0					
ANR	4213065	CallExpression	"r_num_math ( core -> num , strtok ( NULL , """" ) )"		4211507	1					
ANR	4213066	Callee	r_num_math		4211507	0					
ANR	4213067	Identifier	r_num_math		4211507	0					
ANR	4213068	ArgumentList	core -> num		4211507	1					
ANR	4213069	Argument	core -> num		4211507	0					
ANR	4213070	PtrMemberAccess	core -> num		4211507	0					
ANR	4213071	Identifier	core		4211507	0					
ANR	4213072	Identifier	num		4211507	1					
ANR	4213073	Argument	"strtok ( NULL , """" )"		4211507	1					
ANR	4213074	CallExpression	"strtok ( NULL , """" )"		4211507	0					
ANR	4213075	Callee	strtok		4211507	0					
ANR	4213076	Identifier	strtok		4211507	0					
ANR	4213077	ArgumentList	NULL		4211507	1					
ANR	4213078	Argument	NULL		4211507	0					
ANR	4213079	Identifier	NULL		4211507	0					
ANR	4213080	Argument	""""""		4211507	1					
ANR	4213081	PrimaryExpression	""""""		4211507	0					
ANR	4213082	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , 0 , hwbp , false , 0 , module , delta )"	3395:3:98163:98229	4211507	5	True				
ANR	4213083	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , 0 , hwbp , false , 0 , module , delta )"		4211507	0		=			
ANR	4213084	Identifier	bpi		4211507	0					
ANR	4213085	CallExpression	"r_debug_bp_add ( core -> dbg , 0 , hwbp , false , 0 , module , delta )"		4211507	1					
ANR	4213086	Callee	r_debug_bp_add		4211507	0					
ANR	4213087	Identifier	r_debug_bp_add		4211507	0					
ANR	4213088	ArgumentList	core -> dbg		4211507	1					
ANR	4213089	Argument	core -> dbg		4211507	0					
ANR	4213090	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213091	Identifier	core		4211507	0					
ANR	4213092	Identifier	dbg		4211507	1					
ANR	4213093	Argument	0		4211507	1					
ANR	4213094	PrimaryExpression	0		4211507	0					
ANR	4213095	Argument	hwbp		4211507	2					
ANR	4213096	Identifier	hwbp		4211507	0					
ANR	4213097	Argument	false		4211507	3					
ANR	4213098	Identifier	false		4211507	0					
ANR	4213099	Argument	0		4211507	4					
ANR	4213100	PrimaryExpression	0		4211507	0					
ANR	4213101	Argument	module		4211507	5					
ANR	4213102	Identifier	module		4211507	0					
ANR	4213103	Argument	delta		4211507	6					
ANR	4213104	Identifier	delta		4211507	0					
ANR	4213105	IfStatement	if ( ! bpi )		4211507	6					
ANR	4213106	Condition	! bpi	3396:7:98238:98241	4211507	0	True				
ANR	4213107	UnaryOperationExpression	! bpi		4211507	0					
ANR	4213108	UnaryOperator	!		4211507	0					
ANR	4213109	Identifier	bpi		4211507	1					
ANR	4213110	CompoundStatement		244:13:6524:6524	4211507	1					
ANR	4213111	ExpressionStatement	"eprintf ( ""Cannot set breakpoint.\\n"" )"	3397:4:98250:98286	4211507	0	True				
ANR	4213112	CallExpression	"eprintf ( ""Cannot set breakpoint.\\n"" )"		4211507	0					
ANR	4213113	Callee	eprintf		4211507	0					
ANR	4213114	Identifier	eprintf		4211507	0					
ANR	4213115	ArgumentList	"""Cannot set breakpoint.\\n"""		4211507	1					
ANR	4213116	Argument	"""Cannot set breakpoint.\\n"""		4211507	0					
ANR	4213117	PrimaryExpression	"""Cannot set breakpoint.\\n"""		4211507	0					
ANR	4213118	ExpressionStatement	free ( string )	3399:3:98296:98309	4211507	7	True				
ANR	4213119	CallExpression	free ( string )		4211507	0					
ANR	4213120	Callee	free		4211507	0					
ANR	4213121	Identifier	free		4211507	0					
ANR	4213122	ArgumentList	string		4211507	1					
ANR	4213123	Argument	string		4211507	0					
ANR	4213124	Identifier	string		4211507	0					
ANR	4213125	BreakStatement	break ;	3401:2:98317:98322	4211507	17	True				
ANR	4213126	Label	case 'j' :	3402:1:98325:98333	4211507	18	True				
ANR	4213127	ExpressionStatement	"r_bp_list ( core -> dbg -> bp , 'j' )"	3402:11:98335:98365	4211507	19	True				
ANR	4213128	CallExpression	"r_bp_list ( core -> dbg -> bp , 'j' )"		4211507	0					
ANR	4213129	Callee	r_bp_list		4211507	0					
ANR	4213130	Identifier	r_bp_list		4211507	0					
ANR	4213131	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213132	Argument	core -> dbg -> bp		4211507	0					
ANR	4213133	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213134	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213135	Identifier	core		4211507	0					
ANR	4213136	Identifier	dbg		4211507	1					
ANR	4213137	Identifier	bp		4211507	1					
ANR	4213138	Argument	'j'		4211507	1					
ANR	4213139	PrimaryExpression	'j'		4211507	0					
ANR	4213140	BreakStatement	break ;	3402:43:98367:98372	4211507	20	True				
ANR	4213141	Label	case '*' :	3403:1:98375:98383	4211507	21	True				
ANR	4213142	ExpressionStatement	"r_bp_list ( core -> dbg -> bp , 1 )"	3403:11:98385:98413	4211507	22	True				
ANR	4213143	CallExpression	"r_bp_list ( core -> dbg -> bp , 1 )"		4211507	0					
ANR	4213144	Callee	r_bp_list		4211507	0					
ANR	4213145	Identifier	r_bp_list		4211507	0					
ANR	4213146	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213147	Argument	core -> dbg -> bp		4211507	0					
ANR	4213148	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213149	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213150	Identifier	core		4211507	0					
ANR	4213151	Identifier	dbg		4211507	1					
ANR	4213152	Identifier	bp		4211507	1					
ANR	4213153	Argument	1		4211507	1					
ANR	4213154	PrimaryExpression	1		4211507	0					
ANR	4213155	BreakStatement	break ;	3403:41:98415:98420	4211507	23	True				
ANR	4213156	Label	case '\\0' :	3404:1:98423:98432	4211507	24	True				
ANR	4213157	ExpressionStatement	"r_bp_list ( core -> dbg -> bp , 0 )"	3404:12:98434:98462	4211507	25	True				
ANR	4213158	CallExpression	"r_bp_list ( core -> dbg -> bp , 0 )"		4211507	0					
ANR	4213159	Callee	r_bp_list		4211507	0					
ANR	4213160	Identifier	r_bp_list		4211507	0					
ANR	4213161	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213162	Argument	core -> dbg -> bp		4211507	0					
ANR	4213163	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213164	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213165	Identifier	core		4211507	0					
ANR	4213166	Identifier	dbg		4211507	1					
ANR	4213167	Identifier	bp		4211507	1					
ANR	4213168	Argument	0		4211507	1					
ANR	4213169	PrimaryExpression	0		4211507	0					
ANR	4213170	BreakStatement	break ;	3404:42:98464:98469	4211507	26	True				
ANR	4213171	Label	case '-' :	3405:1:98472:98480	4211507	27	True				
ANR	4213172	IfStatement	if ( input [ 2 ] == '*' )		4211507	28					
ANR	4213173	Condition	input [ 2 ] == '*'	3406:6:98497:98511	4211507	0	True				
ANR	4213174	EqualityExpression	input [ 2 ] == '*'		4211507	0		==			
ANR	4213175	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4213176	Identifier	input		4211507	0					
ANR	4213177	PrimaryExpression	2		4211507	1					
ANR	4213178	PrimaryExpression	'*'		4211507	1					
ANR	4213179	CompoundStatement		254:23:6794:6794	4211507	1					
ANR	4213180	ExpressionStatement	r_bp_del_all ( core -> dbg -> bp )	3407:3:98519:98547	4211507	0	True				
ANR	4213181	CallExpression	r_bp_del_all ( core -> dbg -> bp )		4211507	0					
ANR	4213182	Callee	r_bp_del_all		4211507	0					
ANR	4213183	Identifier	r_bp_del_all		4211507	0					
ANR	4213184	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213185	Argument	core -> dbg -> bp		4211507	0					
ANR	4213186	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213187	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213188	Identifier	core		4211507	0					
ANR	4213189	Identifier	dbg		4211507	1					
ANR	4213190	Identifier	bp		4211507	1					
ANR	4213191	ElseStatement	else		4211507	0					
ANR	4213192	CompoundStatement		260:3:6952:6982	4211507	0					
ANR	4213193	Statement	define	3409:4:98564:98569	4211507	0	True				
ANR	4213194	Statement	DB_ARG	3409:11:98571:98576	4211507	1	True				
ANR	4213195	Statement	(	3409:17:98577:98577	4211507	2	True				
ANR	4213196	Statement	x	3409:18:98578:98578	4211507	3	True				
ANR	4213197	Statement	)	3409:19:98579:98579	4211507	4	True				
ANR	4213198	Statement	r_str_word_get0	3409:21:98581:98595	4211507	5	True				
ANR	4213199	Statement	(	3409:36:98596:98596	4211507	6	True				
ANR	4213200	Statement	str	3409:37:98597:98599	4211507	7	True				
ANR	4213201	Statement	","	3409:40:98600:98600	4211507	8	True				
ANR	4213202	Statement	x	3409:42:98602:98602	4211507	9	True				
ANR	4213203	Statement	)	3409:43:98603:98603	4211507	10	True				
ANR	4213204	IdentifierDeclStatement	char * str = strdup ( r_str_trim_ro ( input + 2 ) ) ;	3410:3:98608:98653	4211507	11	True				
ANR	4213205	IdentifierDecl	* str = strdup ( r_str_trim_ro ( input + 2 ) )		4211507	0					
ANR	4213206	IdentifierDeclType	char *		4211507	0					
ANR	4213207	Identifier	str		4211507	1					
ANR	4213208	AssignmentExpression	* str = strdup ( r_str_trim_ro ( input + 2 ) )		4211507	2		=			
ANR	4213209	Identifier	str		4211507	0					
ANR	4213210	CallExpression	strdup ( r_str_trim_ro ( input + 2 ) )		4211507	1					
ANR	4213211	Callee	strdup		4211507	0					
ANR	4213212	Identifier	strdup		4211507	0					
ANR	4213213	ArgumentList	r_str_trim_ro ( input + 2 )		4211507	1					
ANR	4213214	Argument	r_str_trim_ro ( input + 2 )		4211507	0					
ANR	4213215	CallExpression	r_str_trim_ro ( input + 2 )		4211507	0					
ANR	4213216	Callee	r_str_trim_ro		4211507	0					
ANR	4213217	Identifier	r_str_trim_ro		4211507	0					
ANR	4213218	ArgumentList	input + 2		4211507	1					
ANR	4213219	Argument	input + 2		4211507	0					
ANR	4213220	AdditiveExpression	input + 2		4211507	0		+			
ANR	4213221	Identifier	input		4211507	0					
ANR	4213222	PrimaryExpression	2		4211507	1					
ANR	4213223	IdentifierDeclStatement	int i = 0 ;	3411:3:98658:98667	4211507	12	True				
ANR	4213224	IdentifierDecl	i = 0		4211507	0					
ANR	4213225	IdentifierDeclType	int		4211507	0					
ANR	4213226	Identifier	i		4211507	1					
ANR	4213227	AssignmentExpression	i = 0		4211507	2		=			
ANR	4213228	Identifier	i		4211507	0					
ANR	4213229	PrimaryExpression	0		4211507	1					
ANR	4213230	IdentifierDeclStatement	int sl = r_str_word_set0 ( str ) ;	3412:3:98672:98702	4211507	13	True				
ANR	4213231	IdentifierDecl	sl = r_str_word_set0 ( str )		4211507	0					
ANR	4213232	IdentifierDeclType	int		4211507	0					
ANR	4213233	Identifier	sl		4211507	1					
ANR	4213234	AssignmentExpression	sl = r_str_word_set0 ( str )		4211507	2		=			
ANR	4213235	Identifier	sl		4211507	0					
ANR	4213236	CallExpression	r_str_word_set0 ( str )		4211507	1					
ANR	4213237	Callee	r_str_word_set0		4211507	0					
ANR	4213238	Identifier	r_str_word_set0		4211507	0					
ANR	4213239	ArgumentList	str		4211507	1					
ANR	4213240	Argument	str		4211507	0					
ANR	4213241	Identifier	str		4211507	0					
ANR	4213242	ForStatement	for ( ; i < sl ; i ++ )		4211507	14					
ANR	4213243	Condition	i < sl	3413:11:98715:98720	4211507	0	True				
ANR	4213244	RelationalExpression	i < sl		4211507	0		<			
ANR	4213245	Identifier	i		4211507	0					
ANR	4213246	Identifier	sl		4211507	1					
ANR	4213247	PostIncDecOperationExpression	i ++	3413:19:98723:98725	4211507	1	True				
ANR	4213248	Identifier	i		4211507	0					
ANR	4213249	IncDec	++		4211507	1					
ANR	4213250	CompoundStatement		262:4:7014:7066	4211507	2					
ANR	4213251	IdentifierDeclStatement	"const ut64 addr = r_num_math ( core -> num , DB_ARG ( i ) ) ;"	3414:4:98734:98786	4211507	0	True				
ANR	4213252	IdentifierDecl	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"		4211507	0					
ANR	4213253	IdentifierDeclType	const ut64		4211507	0					
ANR	4213254	Identifier	addr		4211507	1					
ANR	4213255	AssignmentExpression	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"		4211507	2		=			
ANR	4213256	Identifier	addr		4211507	0					
ANR	4213257	CallExpression	"r_num_math ( core -> num , DB_ARG ( i ) )"		4211507	1					
ANR	4213258	Callee	r_num_math		4211507	0					
ANR	4213259	Identifier	r_num_math		4211507	0					
ANR	4213260	ArgumentList	core -> num		4211507	1					
ANR	4213261	Argument	core -> num		4211507	0					
ANR	4213262	PtrMemberAccess	core -> num		4211507	0					
ANR	4213263	Identifier	core		4211507	0					
ANR	4213264	Identifier	num		4211507	1					
ANR	4213265	Argument	DB_ARG ( i )		4211507	1					
ANR	4213266	CallExpression	DB_ARG ( i )		4211507	0					
ANR	4213267	Callee	DB_ARG		4211507	0					
ANR	4213268	Identifier	DB_ARG		4211507	0					
ANR	4213269	ArgumentList	i		4211507	1					
ANR	4213270	Argument	i		4211507	0					
ANR	4213271	Identifier	i		4211507	0					
ANR	4213272	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	3415:4:98792:98822	4211507	1	True				
ANR	4213273	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		4211507	0					
ANR	4213274	Callee	r_bp_del		4211507	0					
ANR	4213275	Identifier	r_bp_del		4211507	0					
ANR	4213276	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213277	Argument	core -> dbg -> bp		4211507	0					
ANR	4213278	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213279	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213280	Identifier	core		4211507	0					
ANR	4213281	Identifier	dbg		4211507	1					
ANR	4213282	Identifier	bp		4211507	1					
ANR	4213283	Argument	addr		4211507	1					
ANR	4213284	Identifier	addr		4211507	0					
ANR	4213285	ExpressionStatement	free ( str )	3417:3:98832:98842	4211507	15	True				
ANR	4213286	CallExpression	free ( str )		4211507	0					
ANR	4213287	Callee	free		4211507	0					
ANR	4213288	Identifier	free		4211507	0					
ANR	4213289	ArgumentList	str		4211507	1					
ANR	4213290	Argument	str		4211507	0					
ANR	4213291	Identifier	str		4211507	0					
ANR	4213292	BreakStatement	break ;	3419:2:98850:98855	4211507	29	True				
ANR	4213293	Label	case 'c' :	3420:1:98858:98866	4211507	30	True				
ANR	4213294	IfStatement	if ( input [ 2 ] == ' ' )		4211507	31					
ANR	4213295	Condition	input [ 2 ] == ' '	3421:6:98883:98897	4211507	0	True				
ANR	4213296	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4213297	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4213298	Identifier	input		4211507	0					
ANR	4213299	PrimaryExpression	2		4211507	1					
ANR	4213300	PrimaryExpression	' '		4211507	1					
ANR	4213301	CompoundStatement		270:3:7185:7215	4211507	1					
ANR	4213302	IdentifierDeclStatement	char * inp = strdup ( input + 3 ) ;	3422:3:98905:98935	4211507	0	True				
ANR	4213303	IdentifierDecl	* inp = strdup ( input + 3 )		4211507	0					
ANR	4213304	IdentifierDeclType	char *		4211507	0					
ANR	4213305	Identifier	inp		4211507	1					
ANR	4213306	AssignmentExpression	* inp = strdup ( input + 3 )		4211507	2		=			
ANR	4213307	Identifier	inp		4211507	0					
ANR	4213308	CallExpression	strdup ( input + 3 )		4211507	1					
ANR	4213309	Callee	strdup		4211507	0					
ANR	4213310	Identifier	strdup		4211507	0					
ANR	4213311	ArgumentList	input + 3		4211507	1					
ANR	4213312	Argument	input + 3		4211507	0					
ANR	4213313	AdditiveExpression	input + 3		4211507	0		+			
ANR	4213314	Identifier	input		4211507	0					
ANR	4213315	PrimaryExpression	3		4211507	1					
ANR	4213316	IfStatement	if ( inp )		4211507	1					
ANR	4213317	Condition	inp	3423:7:98944:98946	4211507	0	True				
ANR	4213318	Identifier	inp		4211507	0					
ANR	4213319	CompoundStatement		272:4:7235:7264	4211507	1					
ANR	4213320	IdentifierDeclStatement	"char * arg = strchr ( inp , ' ' ) ;"	3424:4:98955:98984	4211507	0	True				
ANR	4213321	IdentifierDecl	"* arg = strchr ( inp , ' ' )"		4211507	0					
ANR	4213322	IdentifierDeclType	char *		4211507	0					
ANR	4213323	Identifier	arg		4211507	1					
ANR	4213324	AssignmentExpression	"* arg = strchr ( inp , ' ' )"		4211507	2		=			
ANR	4213325	Identifier	arg		4211507	0					
ANR	4213326	CallExpression	"strchr ( inp , ' ' )"		4211507	1					
ANR	4213327	Callee	strchr		4211507	0					
ANR	4213328	Identifier	strchr		4211507	0					
ANR	4213329	ArgumentList	inp		4211507	1					
ANR	4213330	Argument	inp		4211507	0					
ANR	4213331	Identifier	inp		4211507	0					
ANR	4213332	Argument	' '		4211507	1					
ANR	4213333	PrimaryExpression	' '		4211507	0					
ANR	4213334	IfStatement	if ( arg )		4211507	1					
ANR	4213335	Condition	arg	3425:8:98994:98996	4211507	0	True				
ANR	4213336	Identifier	arg		4211507	0					
ANR	4213337	CompoundStatement		273:13:7279:7279	4211507	1					
ANR	4213338	ExpressionStatement	* arg ++ = 0	3426:5:99006:99016	4211507	0	True				
ANR	4213339	AssignmentExpression	* arg ++ = 0		4211507	0		=			
ANR	4213340	UnaryOperationExpression	* arg ++		4211507	0					
ANR	4213341	UnaryOperator	*		4211507	0					
ANR	4213342	PostIncDecOperationExpression	arg ++		4211507	1					
ANR	4213343	Identifier	arg		4211507	0					
ANR	4213344	IncDec	++		4211507	1					
ANR	4213345	PrimaryExpression	0		4211507	1					
ANR	4213346	ExpressionStatement	"addr = r_num_math ( core -> num , inp )"	3427:5:99023:99057	4211507	1	True				
ANR	4213347	AssignmentExpression	"addr = r_num_math ( core -> num , inp )"		4211507	0		=			
ANR	4213348	Identifier	addr		4211507	0					
ANR	4213349	CallExpression	"r_num_math ( core -> num , inp )"		4211507	1					
ANR	4213350	Callee	r_num_math		4211507	0					
ANR	4213351	Identifier	r_num_math		4211507	0					
ANR	4213352	ArgumentList	core -> num		4211507	1					
ANR	4213353	Argument	core -> num		4211507	0					
ANR	4213354	PtrMemberAccess	core -> num		4211507	0					
ANR	4213355	Identifier	core		4211507	0					
ANR	4213356	Identifier	num		4211507	1					
ANR	4213357	Argument	inp		4211507	1					
ANR	4213358	Identifier	inp		4211507	0					
ANR	4213359	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3428:5:99064:99103	4211507	2	True				
ANR	4213360	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	0		=			
ANR	4213361	Identifier	bpi		4211507	0					
ANR	4213362	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	1					
ANR	4213363	Callee	r_bp_get_at		4211507	0					
ANR	4213364	Identifier	r_bp_get_at		4211507	0					
ANR	4213365	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213366	Argument	core -> dbg -> bp		4211507	0					
ANR	4213367	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213368	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213369	Identifier	core		4211507	0					
ANR	4213370	Identifier	dbg		4211507	1					
ANR	4213371	Identifier	bp		4211507	1					
ANR	4213372	Argument	addr		4211507	1					
ANR	4213373	Identifier	addr		4211507	0					
ANR	4213374	IfStatement	if ( bpi )		4211507	3					
ANR	4213375	Condition	bpi	3429:9:99114:99116	4211507	0	True				
ANR	4213376	Identifier	bpi		4211507	0					
ANR	4213377	CompoundStatement		277:14:7399:7399	4211507	1					
ANR	4213378	ExpressionStatement	free ( bpi -> data )	3430:6:99127:99143	4211507	0	True				
ANR	4213379	CallExpression	free ( bpi -> data )		4211507	0					
ANR	4213380	Callee	free		4211507	0					
ANR	4213381	Identifier	free		4211507	0					
ANR	4213382	ArgumentList	bpi -> data		4211507	1					
ANR	4213383	Argument	bpi -> data		4211507	0					
ANR	4213384	PtrMemberAccess	bpi -> data		4211507	0					
ANR	4213385	Identifier	bpi		4211507	0					
ANR	4213386	Identifier	data		4211507	1					
ANR	4213387	ExpressionStatement	bpi -> data = strdup ( arg )	3431:6:99151:99175	4211507	1	True				
ANR	4213388	AssignmentExpression	bpi -> data = strdup ( arg )		4211507	0		=			
ANR	4213389	PtrMemberAccess	bpi -> data		4211507	0					
ANR	4213390	Identifier	bpi		4211507	0					
ANR	4213391	Identifier	data		4211507	1					
ANR	4213392	CallExpression	strdup ( arg )		4211507	1					
ANR	4213393	Callee	strdup		4211507	0					
ANR	4213394	Identifier	strdup		4211507	0					
ANR	4213395	ArgumentList	arg		4211507	1					
ANR	4213396	Argument	arg		4211507	0					
ANR	4213397	Identifier	arg		4211507	0					
ANR	4213398	ElseStatement	else		4211507	0					
ANR	4213399	CompoundStatement		280:12:7469:7469	4211507	0					
ANR	4213400	Statement	eprintf	3433:6:99197:99203	4211507	0	True				
ANR	4213401	Statement	(	3433:14:99205:99205	4211507	1	True				
ANR	4213402	Statement	"""No breakpoint defined at 0x%08"""	3433:15:99206:99237	4211507	2	True				
ANR	4213403	Statement	PFMT64x	3433:47:99238:99244	4211507	3	True				
ANR	4213404	Statement	"""\\n"""	3433:54:99245:99248	4211507	4	True				
ANR	4213405	Statement	","	3433:58:99249:99249	4211507	5	True				
ANR	4213406	Statement	addr	3433:60:99251:99254	4211507	6	True				
ANR	4213407	Statement	)	3433:64:99255:99255	4211507	7	True				
ANR	4213408	ExpressionStatement		3433:65:99256:99256	4211507	8	True				
ANR	4213409	ElseStatement	else		4211507	0					
ANR	4213410	CompoundStatement		283:11:7556:7556	4211507	0					
ANR	4213411	ExpressionStatement	"eprintf ( ""- Missing argument\\n"" )"	3436:5:99283:99315	4211507	0	True				
ANR	4213412	CallExpression	"eprintf ( ""- Missing argument\\n"" )"		4211507	0					
ANR	4213413	Callee	eprintf		4211507	0					
ANR	4213414	Identifier	eprintf		4211507	0					
ANR	4213415	ArgumentList	"""- Missing argument\\n"""		4211507	1					
ANR	4213416	Argument	"""- Missing argument\\n"""		4211507	0					
ANR	4213417	PrimaryExpression	"""- Missing argument\\n"""		4211507	0					
ANR	4213418	ExpressionStatement	free ( inp )	3438:4:99327:99337	4211507	2	True				
ANR	4213419	CallExpression	free ( inp )		4211507	0					
ANR	4213420	Callee	free		4211507	0					
ANR	4213421	Identifier	free		4211507	0					
ANR	4213422	ArgumentList	inp		4211507	1					
ANR	4213423	Argument	inp		4211507	0					
ANR	4213424	Identifier	inp		4211507	0					
ANR	4213425	ElseStatement	else		4211507	0					
ANR	4213426	CompoundStatement		287:10:7629:7629	4211507	0					
ANR	4213427	ExpressionStatement	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"	3440:4:99355:99406	4211507	0	True				
ANR	4213428	CallExpression	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"		4211507	0					
ANR	4213429	Callee	eprintf		4211507	0					
ANR	4213430	Identifier	eprintf		4211507	0					
ANR	4213431	ArgumentList	"""Cannot strdup. Your heap is fucked up\\n"""		4211507	1					
ANR	4213432	Argument	"""Cannot strdup. Your heap is fucked up\\n"""		4211507	0					
ANR	4213433	PrimaryExpression	"""Cannot strdup. Your heap is fucked up\\n"""		4211507	0					
ANR	4213434	ElseStatement	else		4211507	0					
ANR	4213435	CompoundStatement		290:9:7702:7702	4211507	0					
ANR	4213436	ExpressionStatement	"eprintf ( ""Use: dbc [addr] [command]\\n"" )"	3443:3:99427:99466	4211507	0	True				
ANR	4213437	CallExpression	"eprintf ( ""Use: dbc [addr] [command]\\n"" )"		4211507	0					
ANR	4213438	Callee	eprintf		4211507	0					
ANR	4213439	Identifier	eprintf		4211507	0					
ANR	4213440	ArgumentList	"""Use: dbc [addr] [command]\\n"""		4211507	1					
ANR	4213441	Argument	"""Use: dbc [addr] [command]\\n"""		4211507	0					
ANR	4213442	PrimaryExpression	"""Use: dbc [addr] [command]\\n"""		4211507	0					
ANR	4213443	BreakStatement	break ;	3445:2:99474:99479	4211507	32	True				
ANR	4213444	Label	case 'C' :	3446:1:99482:99490	4211507	33	True				
ANR	4213445	IfStatement	if ( input [ 2 ] == ' ' )		4211507	34					
ANR	4213446	Condition	input [ 2 ] == ' '	3447:6:99507:99521	4211507	0	True				
ANR	4213447	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4213448	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4213449	Identifier	input		4211507	0					
ANR	4213450	PrimaryExpression	2		4211507	1					
ANR	4213451	PrimaryExpression	' '		4211507	1					
ANR	4213452	CompoundStatement		296:3:7809:7839	4211507	1					
ANR	4213453	IdentifierDeclStatement	char * inp = strdup ( input + 3 ) ;	3448:3:99529:99559	4211507	0	True				
ANR	4213454	IdentifierDecl	* inp = strdup ( input + 3 )		4211507	0					
ANR	4213455	IdentifierDeclType	char *		4211507	0					
ANR	4213456	Identifier	inp		4211507	1					
ANR	4213457	AssignmentExpression	* inp = strdup ( input + 3 )		4211507	2		=			
ANR	4213458	Identifier	inp		4211507	0					
ANR	4213459	CallExpression	strdup ( input + 3 )		4211507	1					
ANR	4213460	Callee	strdup		4211507	0					
ANR	4213461	Identifier	strdup		4211507	0					
ANR	4213462	ArgumentList	input + 3		4211507	1					
ANR	4213463	Argument	input + 3		4211507	0					
ANR	4213464	AdditiveExpression	input + 3		4211507	0		+			
ANR	4213465	Identifier	input		4211507	0					
ANR	4213466	PrimaryExpression	3		4211507	1					
ANR	4213467	IfStatement	if ( inp )		4211507	1					
ANR	4213468	Condition	inp	3449:7:99568:99570	4211507	0	True				
ANR	4213469	Identifier	inp		4211507	0					
ANR	4213470	CompoundStatement		298:4:7859:7888	4211507	1					
ANR	4213471	IdentifierDeclStatement	"char * arg = strchr ( inp , ' ' ) ;"	3450:4:99579:99608	4211507	0	True				
ANR	4213472	IdentifierDecl	"* arg = strchr ( inp , ' ' )"		4211507	0					
ANR	4213473	IdentifierDeclType	char *		4211507	0					
ANR	4213474	Identifier	arg		4211507	1					
ANR	4213475	AssignmentExpression	"* arg = strchr ( inp , ' ' )"		4211507	2		=			
ANR	4213476	Identifier	arg		4211507	0					
ANR	4213477	CallExpression	"strchr ( inp , ' ' )"		4211507	1					
ANR	4213478	Callee	strchr		4211507	0					
ANR	4213479	Identifier	strchr		4211507	0					
ANR	4213480	ArgumentList	inp		4211507	1					
ANR	4213481	Argument	inp		4211507	0					
ANR	4213482	Identifier	inp		4211507	0					
ANR	4213483	Argument	' '		4211507	1					
ANR	4213484	PrimaryExpression	' '		4211507	0					
ANR	4213485	IfStatement	if ( arg )		4211507	1					
ANR	4213486	Condition	arg	3451:8:99618:99620	4211507	0	True				
ANR	4213487	Identifier	arg		4211507	0					
ANR	4213488	CompoundStatement		299:13:7903:7903	4211507	1					
ANR	4213489	ExpressionStatement	* arg ++ = 0	3452:5:99630:99640	4211507	0	True				
ANR	4213490	AssignmentExpression	* arg ++ = 0		4211507	0		=			
ANR	4213491	UnaryOperationExpression	* arg ++		4211507	0					
ANR	4213492	UnaryOperator	*		4211507	0					
ANR	4213493	PostIncDecOperationExpression	arg ++		4211507	1					
ANR	4213494	Identifier	arg		4211507	0					
ANR	4213495	IncDec	++		4211507	1					
ANR	4213496	PrimaryExpression	0		4211507	1					
ANR	4213497	ExpressionStatement	"addr = r_num_math ( core -> num , inp )"	3453:5:99647:99681	4211507	1	True				
ANR	4213498	AssignmentExpression	"addr = r_num_math ( core -> num , inp )"		4211507	0		=			
ANR	4213499	Identifier	addr		4211507	0					
ANR	4213500	CallExpression	"r_num_math ( core -> num , inp )"		4211507	1					
ANR	4213501	Callee	r_num_math		4211507	0					
ANR	4213502	Identifier	r_num_math		4211507	0					
ANR	4213503	ArgumentList	core -> num		4211507	1					
ANR	4213504	Argument	core -> num		4211507	0					
ANR	4213505	PtrMemberAccess	core -> num		4211507	0					
ANR	4213506	Identifier	core		4211507	0					
ANR	4213507	Identifier	num		4211507	1					
ANR	4213508	Argument	inp		4211507	1					
ANR	4213509	Identifier	inp		4211507	0					
ANR	4213510	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3454:5:99688:99727	4211507	2	True				
ANR	4213511	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	0		=			
ANR	4213512	Identifier	bpi		4211507	0					
ANR	4213513	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	1					
ANR	4213514	Callee	r_bp_get_at		4211507	0					
ANR	4213515	Identifier	r_bp_get_at		4211507	0					
ANR	4213516	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213517	Argument	core -> dbg -> bp		4211507	0					
ANR	4213518	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213519	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213520	Identifier	core		4211507	0					
ANR	4213521	Identifier	dbg		4211507	1					
ANR	4213522	Identifier	bp		4211507	1					
ANR	4213523	Argument	addr		4211507	1					
ANR	4213524	Identifier	addr		4211507	0					
ANR	4213525	IfStatement	if ( bpi )		4211507	3					
ANR	4213526	Condition	bpi	3455:9:99738:99740	4211507	0	True				
ANR	4213527	Identifier	bpi		4211507	0					
ANR	4213528	CompoundStatement		303:14:8023:8023	4211507	1					
ANR	4213529	ExpressionStatement	free ( bpi -> cond )	3456:6:99751:99767	4211507	0	True				
ANR	4213530	CallExpression	free ( bpi -> cond )		4211507	0					
ANR	4213531	Callee	free		4211507	0					
ANR	4213532	Identifier	free		4211507	0					
ANR	4213533	ArgumentList	bpi -> cond		4211507	1					
ANR	4213534	Argument	bpi -> cond		4211507	0					
ANR	4213535	PtrMemberAccess	bpi -> cond		4211507	0					
ANR	4213536	Identifier	bpi		4211507	0					
ANR	4213537	Identifier	cond		4211507	1					
ANR	4213538	ExpressionStatement	bpi -> cond = strdup ( arg )	3457:6:99775:99799	4211507	1	True				
ANR	4213539	AssignmentExpression	bpi -> cond = strdup ( arg )		4211507	0		=			
ANR	4213540	PtrMemberAccess	bpi -> cond		4211507	0					
ANR	4213541	Identifier	bpi		4211507	0					
ANR	4213542	Identifier	cond		4211507	1					
ANR	4213543	CallExpression	strdup ( arg )		4211507	1					
ANR	4213544	Callee	strdup		4211507	0					
ANR	4213545	Identifier	strdup		4211507	0					
ANR	4213546	ArgumentList	arg		4211507	1					
ANR	4213547	Argument	arg		4211507	0					
ANR	4213548	Identifier	arg		4211507	0					
ANR	4213549	ElseStatement	else		4211507	0					
ANR	4213550	CompoundStatement		306:12:8093:8093	4211507	0					
ANR	4213551	Statement	eprintf	3459:6:99821:99827	4211507	0	True				
ANR	4213552	Statement	(	3459:14:99829:99829	4211507	1	True				
ANR	4213553	Statement	"""No breakpoint defined at 0x%08"""	3459:15:99830:99861	4211507	2	True				
ANR	4213554	Statement	PFMT64x	3459:47:99862:99868	4211507	3	True				
ANR	4213555	Statement	"""\\n"""	3459:54:99869:99872	4211507	4	True				
ANR	4213556	Statement	","	3459:58:99873:99873	4211507	5	True				
ANR	4213557	Statement	addr	3459:60:99875:99878	4211507	6	True				
ANR	4213558	Statement	)	3459:64:99879:99879	4211507	7	True				
ANR	4213559	ExpressionStatement		3459:65:99880:99880	4211507	8	True				
ANR	4213560	ElseStatement	else		4211507	0					
ANR	4213561	CompoundStatement		309:11:8180:8180	4211507	0					
ANR	4213562	ExpressionStatement	"eprintf ( ""1 Missing argument\\n"" )"	3462:5:99907:99939	4211507	0	True				
ANR	4213563	CallExpression	"eprintf ( ""1 Missing argument\\n"" )"		4211507	0					
ANR	4213564	Callee	eprintf		4211507	0					
ANR	4213565	Identifier	eprintf		4211507	0					
ANR	4213566	ArgumentList	"""1 Missing argument\\n"""		4211507	1					
ANR	4213567	Argument	"""1 Missing argument\\n"""		4211507	0					
ANR	4213568	PrimaryExpression	"""1 Missing argument\\n"""		4211507	0					
ANR	4213569	ExpressionStatement	free ( inp )	3464:4:99951:99961	4211507	2	True				
ANR	4213570	CallExpression	free ( inp )		4211507	0					
ANR	4213571	Callee	free		4211507	0					
ANR	4213572	Identifier	free		4211507	0					
ANR	4213573	ArgumentList	inp		4211507	1					
ANR	4213574	Argument	inp		4211507	0					
ANR	4213575	Identifier	inp		4211507	0					
ANR	4213576	ElseStatement	else		4211507	0					
ANR	4213577	CompoundStatement		313:10:8253:8253	4211507	0					
ANR	4213578	ExpressionStatement	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"	3466:4:99979:100030	4211507	0	True				
ANR	4213579	CallExpression	"eprintf ( ""Cannot strdup. Your heap is fucked up\\n"" )"		4211507	0					
ANR	4213580	Callee	eprintf		4211507	0					
ANR	4213581	Identifier	eprintf		4211507	0					
ANR	4213582	ArgumentList	"""Cannot strdup. Your heap is fucked up\\n"""		4211507	1					
ANR	4213583	Argument	"""Cannot strdup. Your heap is fucked up\\n"""		4211507	0					
ANR	4213584	PrimaryExpression	"""Cannot strdup. Your heap is fucked up\\n"""		4211507	0					
ANR	4213585	ElseStatement	else		4211507	0					
ANR	4213586	CompoundStatement		316:9:8326:8326	4211507	0					
ANR	4213587	ExpressionStatement	"eprintf ( ""Use: dbC [addr] [command]\\n"" )"	3469:3:100051:100090	4211507	0	True				
ANR	4213588	CallExpression	"eprintf ( ""Use: dbC [addr] [command]\\n"" )"		4211507	0					
ANR	4213589	Callee	eprintf		4211507	0					
ANR	4213590	Identifier	eprintf		4211507	0					
ANR	4213591	ArgumentList	"""Use: dbC [addr] [command]\\n"""		4211507	1					
ANR	4213592	Argument	"""Use: dbC [addr] [command]\\n"""		4211507	0					
ANR	4213593	PrimaryExpression	"""Use: dbC [addr] [command]\\n"""		4211507	0					
ANR	4213594	BreakStatement	break ;	3471:2:100098:100103	4211507	35	True				
ANR	4213595	Label	case 's' :	3472:1:100106:100114	4211507	36	True				
ANR	4213596	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3473:2:100127:100167	4211507	37	True				
ANR	4213597	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		4211507	0		=			
ANR	4213598	Identifier	addr		4211507	0					
ANR	4213599	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4213600	Callee	r_num_math		4211507	0					
ANR	4213601	Identifier	r_num_math		4211507	0					
ANR	4213602	ArgumentList	core -> num		4211507	1					
ANR	4213603	Argument	core -> num		4211507	0					
ANR	4213604	PtrMemberAccess	core -> num		4211507	0					
ANR	4213605	Identifier	core		4211507	0					
ANR	4213606	Identifier	num		4211507	1					
ANR	4213607	Argument	input + 2		4211507	1					
ANR	4213608	AdditiveExpression	input + 2		4211507	0		+			
ANR	4213609	Identifier	input		4211507	0					
ANR	4213610	PrimaryExpression	2		4211507	1					
ANR	4213611	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"	3474:2:100171:100210	4211507	38	True				
ANR	4213612	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	0		=			
ANR	4213613	Identifier	bpi		4211507	0					
ANR	4213614	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4211507	1					
ANR	4213615	Callee	r_bp_get_at		4211507	0					
ANR	4213616	Identifier	r_bp_get_at		4211507	0					
ANR	4213617	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213618	Argument	core -> dbg -> bp		4211507	0					
ANR	4213619	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213620	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213621	Identifier	core		4211507	0					
ANR	4213622	Identifier	dbg		4211507	1					
ANR	4213623	Identifier	bp		4211507	1					
ANR	4213624	Argument	addr		4211507	1					
ANR	4213625	Identifier	addr		4211507	0					
ANR	4213626	IfStatement	if ( bpi )		4211507	39					
ANR	4213627	Condition	bpi	3475:6:100218:100220	4211507	0	True				
ANR	4213628	Identifier	bpi		4211507	0					
ANR	4213629	CompoundStatement		323:11:8503:8503	4211507	1					
ANR	4213630	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	3478:3:100325:100355	4211507	0	True				
ANR	4213631	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		4211507	0					
ANR	4213632	Callee	r_bp_del		4211507	0					
ANR	4213633	Identifier	r_bp_del		4211507	0					
ANR	4213634	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213635	Argument	core -> dbg -> bp		4211507	0					
ANR	4213636	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213637	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213638	Identifier	core		4211507	0					
ANR	4213639	Identifier	dbg		4211507	1					
ANR	4213640	Identifier	bp		4211507	1					
ANR	4213641	Argument	addr		4211507	1					
ANR	4213642	Identifier	addr		4211507	0					
ANR	4213643	ElseStatement	else		4211507	0					
ANR	4213644	CompoundStatement		327:9:8646:8646	4211507	0					
ANR	4213645	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"	3481:3:100431:100494	4211507	0	True				
ANR	4213646	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		4211507	0		=			
ANR	4213647	Identifier	bpi		4211507	0					
ANR	4213648	CallExpression	"r_debug_bp_add ( core -> dbg , addr , hwbp , false , 0 , NULL , 0 )"		4211507	1					
ANR	4213649	Callee	r_debug_bp_add		4211507	0					
ANR	4213650	Identifier	r_debug_bp_add		4211507	0					
ANR	4213651	ArgumentList	core -> dbg		4211507	1					
ANR	4213652	Argument	core -> dbg		4211507	0					
ANR	4213653	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213654	Identifier	core		4211507	0					
ANR	4213655	Identifier	dbg		4211507	1					
ANR	4213656	Argument	addr		4211507	1					
ANR	4213657	Identifier	addr		4211507	0					
ANR	4213658	Argument	hwbp		4211507	2					
ANR	4213659	Identifier	hwbp		4211507	0					
ANR	4213660	Argument	false		4211507	3					
ANR	4213661	Identifier	false		4211507	0					
ANR	4213662	Argument	0		4211507	4					
ANR	4213663	PrimaryExpression	0		4211507	0					
ANR	4213664	Argument	NULL		4211507	5					
ANR	4213665	Identifier	NULL		4211507	0					
ANR	4213666	Argument	0		4211507	6					
ANR	4213667	PrimaryExpression	0		4211507	0					
ANR	4213668	IfStatement	if ( ! bpi )		4211507	1					
ANR	4213669	Condition	! bpi	3482:7:100503:100506	4211507	0	True				
ANR	4213670	UnaryOperationExpression	! bpi		4211507	0					
ANR	4213671	UnaryOperator	!		4211507	0					
ANR	4213672	Identifier	bpi		4211507	1					
ANR	4213673	CompoundStatement		330:13:8789:8789	4211507	1					
ANR	4213674	ExpressionStatement	"eprintf ( ""Cannot set breakpoint (%s)\\n"" , input + 2 )"	3483:4:100515:100566	4211507	0	True				
ANR	4213675	CallExpression	"eprintf ( ""Cannot set breakpoint (%s)\\n"" , input + 2 )"		4211507	0					
ANR	4213676	Callee	eprintf		4211507	0					
ANR	4213677	Identifier	eprintf		4211507	0					
ANR	4213678	ArgumentList	"""Cannot set breakpoint (%s)\\n"""		4211507	1					
ANR	4213679	Argument	"""Cannot set breakpoint (%s)\\n"""		4211507	0					
ANR	4213680	PrimaryExpression	"""Cannot set breakpoint (%s)\\n"""		4211507	0					
ANR	4213681	Argument	input + 2		4211507	1					
ANR	4213682	AdditiveExpression	input + 2		4211507	0		+			
ANR	4213683	Identifier	input		4211507	0					
ANR	4213684	PrimaryExpression	2		4211507	1					
ANR	4213685	ExpressionStatement	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , 0 )"	3486:2:100579:100650	4211507	40	True				
ANR	4213686	CallExpression	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , 0 )"		4211507	0					
ANR	4213687	Callee	r_bp_enable		4211507	0					
ANR	4213688	Identifier	r_bp_enable		4211507	0					
ANR	4213689	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213690	Argument	core -> dbg -> bp		4211507	0					
ANR	4213691	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213692	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213693	Identifier	core		4211507	0					
ANR	4213694	Identifier	dbg		4211507	1					
ANR	4213695	Identifier	bp		4211507	1					
ANR	4213696	Argument	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4213697	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	0					
ANR	4213698	Callee	r_num_math		4211507	0					
ANR	4213699	Identifier	r_num_math		4211507	0					
ANR	4213700	ArgumentList	core -> num		4211507	1					
ANR	4213701	Argument	core -> num		4211507	0					
ANR	4213702	PtrMemberAccess	core -> num		4211507	0					
ANR	4213703	Identifier	core		4211507	0					
ANR	4213704	Identifier	num		4211507	1					
ANR	4213705	Argument	input + 2		4211507	1					
ANR	4213706	AdditiveExpression	input + 2		4211507	0		+			
ANR	4213707	Identifier	input		4211507	0					
ANR	4213708	PrimaryExpression	2		4211507	1					
ANR	4213709	Argument	true		4211507	2					
ANR	4213710	Identifier	true		4211507	0					
ANR	4213711	Argument	0		4211507	3					
ANR	4213712	PrimaryExpression	0		4211507	0					
ANR	4213713	BreakStatement	break ;	3487:2:100654:100659	4211507	41	True				
ANR	4213714	Label	case 'n' :	3488:1:100662:100670	4211507	42	True				
ANR	4213715	ExpressionStatement	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"	3489:2:100683:100730	4211507	43	True				
ANR	4213716	AssignmentExpression	"bpi = r_bp_get_at ( core -> dbg -> bp , core -> offset )"		4211507	0		=			
ANR	4213717	Identifier	bpi		4211507	0					
ANR	4213718	CallExpression	"r_bp_get_at ( core -> dbg -> bp , core -> offset )"		4211507	1					
ANR	4213719	Callee	r_bp_get_at		4211507	0					
ANR	4213720	Identifier	r_bp_get_at		4211507	0					
ANR	4213721	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213722	Argument	core -> dbg -> bp		4211507	0					
ANR	4213723	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213724	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213725	Identifier	core		4211507	0					
ANR	4213726	Identifier	dbg		4211507	1					
ANR	4213727	Identifier	bp		4211507	1					
ANR	4213728	Argument	core -> offset		4211507	1					
ANR	4213729	PtrMemberAccess	core -> offset		4211507	0					
ANR	4213730	Identifier	core		4211507	0					
ANR	4213731	Identifier	offset		4211507	1					
ANR	4213732	IfStatement	if ( input [ 2 ] == ' ' )		4211507	44					
ANR	4213733	Condition	input [ 2 ] == ' '	3490:6:100738:100752	4211507	0	True				
ANR	4213734	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4213735	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4213736	Identifier	input		4211507	0					
ANR	4213737	PrimaryExpression	2		4211507	1					
ANR	4213738	PrimaryExpression	' '		4211507	1					
ANR	4213739	CompoundStatement		338:23:9035:9035	4211507	1					
ANR	4213740	IfStatement	if ( bpi )		4211507	0					
ANR	4213741	Condition	bpi	3491:7:100764:100766	4211507	0	True				
ANR	4213742	Identifier	bpi		4211507	0					
ANR	4213743	CompoundStatement		339:12:9049:9049	4211507	1					
ANR	4213744	ExpressionStatement	free ( bpi -> name )	3492:4:100775:100791	4211507	0	True				
ANR	4213745	CallExpression	free ( bpi -> name )		4211507	0					
ANR	4213746	Callee	free		4211507	0					
ANR	4213747	Identifier	free		4211507	0					
ANR	4213748	ArgumentList	bpi -> name		4211507	1					
ANR	4213749	Argument	bpi -> name		4211507	0					
ANR	4213750	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4213751	Identifier	bpi		4211507	0					
ANR	4213752	Identifier	name		4211507	1					
ANR	4213753	ExpressionStatement	bpi -> name = strdup ( input + 3 )	3493:4:100797:100827	4211507	1	True				
ANR	4213754	AssignmentExpression	bpi -> name = strdup ( input + 3 )		4211507	0		=			
ANR	4213755	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4213756	Identifier	bpi		4211507	0					
ANR	4213757	Identifier	name		4211507	1					
ANR	4213758	CallExpression	strdup ( input + 3 )		4211507	1					
ANR	4213759	Callee	strdup		4211507	0					
ANR	4213760	Identifier	strdup		4211507	0					
ANR	4213761	ArgumentList	input + 3		4211507	1					
ANR	4213762	Argument	input + 3		4211507	0					
ANR	4213763	AdditiveExpression	input + 3		4211507	0		+			
ANR	4213764	Identifier	input		4211507	0					
ANR	4213765	PrimaryExpression	3		4211507	1					
ANR	4213766	ElseStatement	else		4211507	0					
ANR	4213767	CompoundStatement		342:10:9119:9119	4211507	0					
ANR	4213768	Statement	eprintf	3495:4:100845:100851	4211507	0	True				
ANR	4213769	Statement	(	3495:12:100853:100853	4211507	1	True				
ANR	4213770	Statement	"""Cannot find breakpoint at """	3495:13:100854:100881	4211507	2	True				
ANR	4213771	Statement	"""0x%08"""	3496:6:100889:100895	4211507	3	True				
ANR	4213772	Statement	PFMT64x	3496:13:100896:100902	4211507	4	True				
ANR	4213773	Statement	"""\\n"""	3496:20:100903:100906	4211507	5	True				
ANR	4213774	Statement	","	3496:24:100907:100907	4211507	6	True				
ANR	4213775	Statement	core	3496:26:100909:100912	4211507	7	True				
ANR	4213776	Statement	->	3496:30:100913:100914	4211507	8	True				
ANR	4213777	Statement	offset	3496:32:100915:100920	4211507	9	True				
ANR	4213778	Statement	)	3496:38:100921:100921	4211507	10	True				
ANR	4213779	ExpressionStatement		3496:39:100922:100922	4211507	11	True				
ANR	4213780	ElseStatement	else		4211507	0					
ANR	4213781	CompoundStatement		346:9:9218:9218	4211507	0					
ANR	4213782	IfStatement	if ( bpi && bpi -> name )		4211507	0					
ANR	4213783	Condition	bpi && bpi -> name	3499:7:100947:100962	4211507	0	True				
ANR	4213784	AndExpression	bpi && bpi -> name		4211507	0		&&			
ANR	4213785	Identifier	bpi		4211507	0					
ANR	4213786	PtrMemberAccess	bpi -> name		4211507	1					
ANR	4213787	Identifier	bpi		4211507	0					
ANR	4213788	Identifier	name		4211507	1					
ANR	4213789	CompoundStatement		347:25:9245:9245	4211507	1					
ANR	4213790	ExpressionStatement	r_cons_println ( bpi -> name )	3500:4:100971:100997	4211507	0	True				
ANR	4213791	CallExpression	r_cons_println ( bpi -> name )		4211507	0					
ANR	4213792	Callee	r_cons_println		4211507	0					
ANR	4213793	Identifier	r_cons_println		4211507	0					
ANR	4213794	ArgumentList	bpi -> name		4211507	1					
ANR	4213795	Argument	bpi -> name		4211507	0					
ANR	4213796	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4213797	Identifier	bpi		4211507	0					
ANR	4213798	Identifier	name		4211507	1					
ANR	4213799	BreakStatement	break ;	3503:2:101010:101015	4211507	45	True				
ANR	4213800	Label	case 'e' :	3504:1:101018:101026	4211507	46	True				
ANR	4213801	ForStatement	for ( p = input + 2 ; * p == ' ' ; p ++ )		4211507	47					
ANR	4213802	ForInit	p = input + 2 ;	3505:7:101035:101048	4211507	0	True				
ANR	4213803	AssignmentExpression	p = input + 2		4211507	0		=			
ANR	4213804	Identifier	p		4211507	0					
ANR	4213805	AdditiveExpression	input + 2		4211507	1		+			
ANR	4213806	Identifier	input		4211507	0					
ANR	4213807	PrimaryExpression	2		4211507	1					
ANR	4213808	Condition	* p == ' '	3505:22:101050:101058	4211507	1	True				
ANR	4213809	EqualityExpression	* p == ' '		4211507	0		==			
ANR	4213810	UnaryOperationExpression	* p		4211507	0					
ANR	4213811	UnaryOperator	*		4211507	0					
ANR	4213812	Identifier	p		4211507	1					
ANR	4213813	PrimaryExpression	' '		4211507	1					
ANR	4213814	PostIncDecOperationExpression	p ++	3505:33:101061:101063	4211507	2	True				
ANR	4213815	Identifier	p		4211507	0					
ANR	4213816	IncDec	++		4211507	1					
ANR	4213817	ExpressionStatement		3505:37:101065:101065	4211507	3	True				
ANR	4213818	IfStatement	if ( * p == '*' )		4211507	48					
ANR	4213819	Condition	* p == '*'	3506:6:101073:101081	4211507	0	True				
ANR	4213820	EqualityExpression	* p == '*'		4211507	0		==			
ANR	4213821	UnaryOperationExpression	* p		4211507	0					
ANR	4213822	UnaryOperator	*		4211507	0					
ANR	4213823	Identifier	p		4211507	1					
ANR	4213824	PrimaryExpression	'*'		4211507	1					
ANR	4213825	ExpressionStatement	"r_bp_enable_all ( core -> dbg -> bp , true )"	3506:17:101084:101120	4211507	1	True				
ANR	4213826	CallExpression	"r_bp_enable_all ( core -> dbg -> bp , true )"		4211507	0					
ANR	4213827	Callee	r_bp_enable_all		4211507	0					
ANR	4213828	Identifier	r_bp_enable_all		4211507	0					
ANR	4213829	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213830	Argument	core -> dbg -> bp		4211507	0					
ANR	4213831	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213832	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213833	Identifier	core		4211507	0					
ANR	4213834	Identifier	dbg		4211507	1					
ANR	4213835	Identifier	bp		4211507	1					
ANR	4213836	Argument	true		4211507	1					
ANR	4213837	Identifier	true		4211507	0					
ANR	4213838	ElseStatement	else		4211507	0					
ANR	4213839	CompoundStatement		355:7:9409:9409	4211507	0					
ANR	4213840	ForStatement	for ( ; * p && * p != ' ' ; p ++ )		4211507	0					
ANR	4213841	Condition	* p && * p != ' '	3508:10:101141:101155	4211507	0	True				
ANR	4213842	AndExpression	* p && * p != ' '		4211507	0		&&			
ANR	4213843	UnaryOperationExpression	* p		4211507	0					
ANR	4213844	UnaryOperator	*		4211507	0					
ANR	4213845	Identifier	p		4211507	1					
ANR	4213846	EqualityExpression	* p != ' '		4211507	1		!=			
ANR	4213847	UnaryOperationExpression	* p		4211507	0					
ANR	4213848	UnaryOperator	*		4211507	0					
ANR	4213849	Identifier	p		4211507	1					
ANR	4213850	PrimaryExpression	' '		4211507	1					
ANR	4213851	PostIncDecOperationExpression	p ++	3508:27:101158:101160	4211507	1	True				
ANR	4213852	Identifier	p		4211507	0					
ANR	4213853	IncDec	++		4211507	1					
ANR	4213854	ExpressionStatement		3508:31:101162:101162	4211507	2	True				
ANR	4213855	ExpressionStatement	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , r_num_math ( core -> num , p ) )"	3509:3:101167:101262	4211507	1	True				
ANR	4213856	CallExpression	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , true , r_num_math ( core -> num , p ) )"		4211507	0					
ANR	4213857	Callee	r_bp_enable		4211507	0					
ANR	4213858	Identifier	r_bp_enable		4211507	0					
ANR	4213859	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213860	Argument	core -> dbg -> bp		4211507	0					
ANR	4213861	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213862	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213863	Identifier	core		4211507	0					
ANR	4213864	Identifier	dbg		4211507	1					
ANR	4213865	Identifier	bp		4211507	1					
ANR	4213866	Argument	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4213867	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	0					
ANR	4213868	Callee	r_num_math		4211507	0					
ANR	4213869	Identifier	r_num_math		4211507	0					
ANR	4213870	ArgumentList	core -> num		4211507	1					
ANR	4213871	Argument	core -> num		4211507	0					
ANR	4213872	PtrMemberAccess	core -> num		4211507	0					
ANR	4213873	Identifier	core		4211507	0					
ANR	4213874	Identifier	num		4211507	1					
ANR	4213875	Argument	input + 2		4211507	1					
ANR	4213876	AdditiveExpression	input + 2		4211507	0		+			
ANR	4213877	Identifier	input		4211507	0					
ANR	4213878	PrimaryExpression	2		4211507	1					
ANR	4213879	Argument	true		4211507	2					
ANR	4213880	Identifier	true		4211507	0					
ANR	4213881	Argument	"r_num_math ( core -> num , p )"		4211507	3					
ANR	4213882	CallExpression	"r_num_math ( core -> num , p )"		4211507	0					
ANR	4213883	Callee	r_num_math		4211507	0					
ANR	4213884	Identifier	r_num_math		4211507	0					
ANR	4213885	ArgumentList	core -> num		4211507	1					
ANR	4213886	Argument	core -> num		4211507	0					
ANR	4213887	PtrMemberAccess	core -> num		4211507	0					
ANR	4213888	Identifier	core		4211507	0					
ANR	4213889	Identifier	num		4211507	1					
ANR	4213890	Argument	p		4211507	1					
ANR	4213891	Identifier	p		4211507	0					
ANR	4213892	BreakStatement	break ;	3511:2:101270:101275	4211507	49	True				
ANR	4213893	Label	case 'd' :	3512:1:101278:101286	4211507	50	True				
ANR	4213894	ForStatement	for ( p = input + 2 ; * p == ' ' ; p ++ )		4211507	51					
ANR	4213895	ForInit	p = input + 2 ;	3513:7:101295:101308	4211507	0	True				
ANR	4213896	AssignmentExpression	p = input + 2		4211507	0		=			
ANR	4213897	Identifier	p		4211507	0					
ANR	4213898	AdditiveExpression	input + 2		4211507	1		+			
ANR	4213899	Identifier	input		4211507	0					
ANR	4213900	PrimaryExpression	2		4211507	1					
ANR	4213901	Condition	* p == ' '	3513:22:101310:101318	4211507	1	True				
ANR	4213902	EqualityExpression	* p == ' '		4211507	0		==			
ANR	4213903	UnaryOperationExpression	* p		4211507	0					
ANR	4213904	UnaryOperator	*		4211507	0					
ANR	4213905	Identifier	p		4211507	1					
ANR	4213906	PrimaryExpression	' '		4211507	1					
ANR	4213907	PostIncDecOperationExpression	p ++	3513:33:101321:101323	4211507	2	True				
ANR	4213908	Identifier	p		4211507	0					
ANR	4213909	IncDec	++		4211507	1					
ANR	4213910	ExpressionStatement		3513:37:101325:101325	4211507	3	True				
ANR	4213911	IfStatement	if ( * p == '*' )		4211507	52					
ANR	4213912	Condition	* p == '*'	3514:6:101333:101341	4211507	0	True				
ANR	4213913	EqualityExpression	* p == '*'		4211507	0		==			
ANR	4213914	UnaryOperationExpression	* p		4211507	0					
ANR	4213915	UnaryOperator	*		4211507	0					
ANR	4213916	Identifier	p		4211507	1					
ANR	4213917	PrimaryExpression	'*'		4211507	1					
ANR	4213918	ExpressionStatement	"r_bp_enable_all ( core -> dbg -> bp , false )"	3514:17:101344:101382	4211507	1	True				
ANR	4213919	CallExpression	"r_bp_enable_all ( core -> dbg -> bp , false )"		4211507	0					
ANR	4213920	Callee	r_bp_enable_all		4211507	0					
ANR	4213921	Identifier	r_bp_enable_all		4211507	0					
ANR	4213922	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213923	Argument	core -> dbg -> bp		4211507	0					
ANR	4213924	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213925	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213926	Identifier	core		4211507	0					
ANR	4213927	Identifier	dbg		4211507	1					
ANR	4213928	Identifier	bp		4211507	1					
ANR	4213929	Argument	false		4211507	1					
ANR	4213930	Identifier	false		4211507	0					
ANR	4213931	ElseStatement	else		4211507	0					
ANR	4213932	CompoundStatement		363:7:9671:9671	4211507	0					
ANR	4213933	ForStatement	for ( ; * p && * p != ' ' ; p ++ )		4211507	0					
ANR	4213934	Condition	* p && * p != ' '	3516:10:101403:101417	4211507	0	True				
ANR	4213935	AndExpression	* p && * p != ' '		4211507	0		&&			
ANR	4213936	UnaryOperationExpression	* p		4211507	0					
ANR	4213937	UnaryOperator	*		4211507	0					
ANR	4213938	Identifier	p		4211507	1					
ANR	4213939	EqualityExpression	* p != ' '		4211507	1		!=			
ANR	4213940	UnaryOperationExpression	* p		4211507	0					
ANR	4213941	UnaryOperator	*		4211507	0					
ANR	4213942	Identifier	p		4211507	1					
ANR	4213943	PrimaryExpression	' '		4211507	1					
ANR	4213944	PostIncDecOperationExpression	p ++	3516:27:101420:101422	4211507	1	True				
ANR	4213945	Identifier	p		4211507	0					
ANR	4213946	IncDec	++		4211507	1					
ANR	4213947	ExpressionStatement		3516:31:101424:101424	4211507	2	True				
ANR	4213948	ExpressionStatement	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , false , r_num_math ( core -> num , p ) )"	3517:3:101429:101525	4211507	1	True				
ANR	4213949	CallExpression	"r_bp_enable ( core -> dbg -> bp , r_num_math ( core -> num , input + 2 ) , false , r_num_math ( core -> num , p ) )"		4211507	0					
ANR	4213950	Callee	r_bp_enable		4211507	0					
ANR	4213951	Identifier	r_bp_enable		4211507	0					
ANR	4213952	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213953	Argument	core -> dbg -> bp		4211507	0					
ANR	4213954	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4213955	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4213956	Identifier	core		4211507	0					
ANR	4213957	Identifier	dbg		4211507	1					
ANR	4213958	Identifier	bp		4211507	1					
ANR	4213959	Argument	"r_num_math ( core -> num , input + 2 )"		4211507	1					
ANR	4213960	CallExpression	"r_num_math ( core -> num , input + 2 )"		4211507	0					
ANR	4213961	Callee	r_num_math		4211507	0					
ANR	4213962	Identifier	r_num_math		4211507	0					
ANR	4213963	ArgumentList	core -> num		4211507	1					
ANR	4213964	Argument	core -> num		4211507	0					
ANR	4213965	PtrMemberAccess	core -> num		4211507	0					
ANR	4213966	Identifier	core		4211507	0					
ANR	4213967	Identifier	num		4211507	1					
ANR	4213968	Argument	input + 2		4211507	1					
ANR	4213969	AdditiveExpression	input + 2		4211507	0		+			
ANR	4213970	Identifier	input		4211507	0					
ANR	4213971	PrimaryExpression	2		4211507	1					
ANR	4213972	Argument	false		4211507	2					
ANR	4213973	Identifier	false		4211507	0					
ANR	4213974	Argument	"r_num_math ( core -> num , p )"		4211507	3					
ANR	4213975	CallExpression	"r_num_math ( core -> num , p )"		4211507	0					
ANR	4213976	Callee	r_num_math		4211507	0					
ANR	4213977	Identifier	r_num_math		4211507	0					
ANR	4213978	ArgumentList	core -> num		4211507	1					
ANR	4213979	Argument	core -> num		4211507	0					
ANR	4213980	PtrMemberAccess	core -> num		4211507	0					
ANR	4213981	Identifier	core		4211507	0					
ANR	4213982	Identifier	num		4211507	1					
ANR	4213983	Argument	p		4211507	1					
ANR	4213984	Identifier	p		4211507	0					
ANR	4213985	BreakStatement	break ;	3519:2:101533:101538	4211507	53	True				
ANR	4213986	Label	case 'h' :	3520:1:101541:101549	4211507	54	True				
ANR	4213987	SwitchStatement	switch ( input [ 2 ] )		4211507	55					
ANR	4213988	Condition	input [ 2 ]	3521:10:101561:101568	4211507	0	True				
ANR	4213989	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4213990	Identifier	input		4211507	0					
ANR	4213991	PrimaryExpression	2		4211507	1					
ANR	4213992	CompoundStatement		369:20:9851:9851	4211507	1					
ANR	4213993	Label	case 0 :	3522:2:101575:101581	4211507	0	True				
ANR	4213994	ExpressionStatement	r_bp_plugin_list ( core -> dbg -> bp )	3523:3:101586:101618	4211507	1	True				
ANR	4213995	CallExpression	r_bp_plugin_list ( core -> dbg -> bp )		4211507	0					
ANR	4213996	Callee	r_bp_plugin_list		4211507	0					
ANR	4213997	Identifier	r_bp_plugin_list		4211507	0					
ANR	4213998	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4213999	Argument	core -> dbg -> bp		4211507	0					
ANR	4214000	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4214001	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4214002	Identifier	core		4211507	0					
ANR	4214003	Identifier	dbg		4211507	1					
ANR	4214004	Identifier	bp		4211507	1					
ANR	4214005	BreakStatement	break ;	3524:3:101623:101628	4211507	2	True				
ANR	4214006	Label	case ' ' :	3525:2:101632:101640	4211507	3	True				
ANR	4214007	IfStatement	if ( input [ 3 ] )		4211507	4					
ANR	4214008	Condition	input [ 3 ]	3526:7:101649:101656	4211507	0	True				
ANR	4214009	ArrayIndexing	input [ 3 ]		4211507	0					
ANR	4214010	Identifier	input		4211507	0					
ANR	4214011	PrimaryExpression	3		4211507	1					
ANR	4214012	CompoundStatement		374:17:9939:9939	4211507	1					
ANR	4214013	IfStatement	"if ( ! r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits ) )"		4211507	0					
ANR	4214014	Condition	"! r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits )"	3527:8:101669:101722	4211507	0	True				
ANR	4214015	UnaryOperationExpression	"! r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits )"		4211507	0					
ANR	4214016	UnaryOperator	!		4211507	0					
ANR	4214017	CallExpression	"r_bp_use ( core -> dbg -> bp , input + 3 , core -> anal -> bits )"		4211507	1					
ANR	4214018	Callee	r_bp_use		4211507	0					
ANR	4214019	Identifier	r_bp_use		4211507	0					
ANR	4214020	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4214021	Argument	core -> dbg -> bp		4211507	0					
ANR	4214022	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4214023	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4214024	Identifier	core		4211507	0					
ANR	4214025	Identifier	dbg		4211507	1					
ANR	4214026	Identifier	bp		4211507	1					
ANR	4214027	Argument	input + 3		4211507	1					
ANR	4214028	AdditiveExpression	input + 3		4211507	0		+			
ANR	4214029	Identifier	input		4211507	0					
ANR	4214030	PrimaryExpression	3		4211507	1					
ANR	4214031	Argument	core -> anal -> bits		4211507	2					
ANR	4214032	PtrMemberAccess	core -> anal -> bits		4211507	0					
ANR	4214033	PtrMemberAccess	core -> anal		4211507	0					
ANR	4214034	Identifier	core		4211507	0					
ANR	4214035	Identifier	anal		4211507	1					
ANR	4214036	Identifier	bits		4211507	1					
ANR	4214037	CompoundStatement		375:64:10005:10005	4211507	1					
ANR	4214038	ExpressionStatement	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"	3528:5:101732:101776	4211507	0	True				
ANR	4214039	CallExpression	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"		4211507	0					
ANR	4214040	Callee	eprintf		4211507	0					
ANR	4214041	Identifier	eprintf		4211507	0					
ANR	4214042	ArgumentList	"""Invalid name: '%s'.\\n"""		4211507	1					
ANR	4214043	Argument	"""Invalid name: '%s'.\\n"""		4211507	0					
ANR	4214044	PrimaryExpression	"""Invalid name: '%s'.\\n"""		4211507	0					
ANR	4214045	Argument	input + 3		4211507	1					
ANR	4214046	AdditiveExpression	input + 3		4211507	0		+			
ANR	4214047	Identifier	input		4211507	0					
ANR	4214048	PrimaryExpression	3		4211507	1					
ANR	4214049	BreakStatement	break ;	3531:3:101792:101797	4211507	5	True				
ANR	4214050	Label	case '-' :	3532:2:101801:101809	4211507	6	True				
ANR	4214051	IfStatement	if ( input [ 3 ] )		4211507	7					
ANR	4214052	Condition	input [ 3 ]	3533:7:101818:101825	4211507	0	True				
ANR	4214053	ArrayIndexing	input [ 3 ]		4211507	0					
ANR	4214054	Identifier	input		4211507	0					
ANR	4214055	PrimaryExpression	3		4211507	1					
ANR	4214056	CompoundStatement		381:17:10108:10108	4211507	1					
ANR	4214057	IfStatement	"if ( ! r_bp_plugin_del ( core -> dbg -> bp , input + 3 ) )"		4211507	0					
ANR	4214058	Condition	"! r_bp_plugin_del ( core -> dbg -> bp , input + 3 )"	3534:8:101838:101880	4211507	0	True				
ANR	4214059	UnaryOperationExpression	"! r_bp_plugin_del ( core -> dbg -> bp , input + 3 )"		4211507	0					
ANR	4214060	UnaryOperator	!		4211507	0					
ANR	4214061	CallExpression	"r_bp_plugin_del ( core -> dbg -> bp , input + 3 )"		4211507	1					
ANR	4214062	Callee	r_bp_plugin_del		4211507	0					
ANR	4214063	Identifier	r_bp_plugin_del		4211507	0					
ANR	4214064	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4214065	Argument	core -> dbg -> bp		4211507	0					
ANR	4214066	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4214067	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4214068	Identifier	core		4211507	0					
ANR	4214069	Identifier	dbg		4211507	1					
ANR	4214070	Identifier	bp		4211507	1					
ANR	4214071	Argument	input + 3		4211507	1					
ANR	4214072	AdditiveExpression	input + 3		4211507	0		+			
ANR	4214073	Identifier	input		4211507	0					
ANR	4214074	PrimaryExpression	3		4211507	1					
ANR	4214075	CompoundStatement		382:53:10163:10163	4211507	1					
ANR	4214076	ExpressionStatement	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"	3535:5:101890:101934	4211507	0	True				
ANR	4214077	CallExpression	"eprintf ( ""Invalid name: '%s'.\\n"" , input + 3 )"		4211507	0					
ANR	4214078	Callee	eprintf		4211507	0					
ANR	4214079	Identifier	eprintf		4211507	0					
ANR	4214080	ArgumentList	"""Invalid name: '%s'.\\n"""		4211507	1					
ANR	4214081	Argument	"""Invalid name: '%s'.\\n"""		4211507	0					
ANR	4214082	PrimaryExpression	"""Invalid name: '%s'.\\n"""		4211507	0					
ANR	4214083	Argument	input + 3		4211507	1					
ANR	4214084	AdditiveExpression	input + 3		4211507	0		+			
ANR	4214085	Identifier	input		4211507	0					
ANR	4214086	PrimaryExpression	3		4211507	1					
ANR	4214087	BreakStatement	break ;	3538:3:101950:101955	4211507	8	True				
ANR	4214088	Label	case '?' :	3539:2:101959:101967	4211507	9	True				
ANR	4214089	Label	default :	3540:2:101971:101978	4211507	10	True				
ANR	4214090	Identifier	default		4211507	0					
ANR	4214091	ExpressionStatement	"eprintf ( ""Usage: dh [plugin-name]  # select a debug handler plugin\\n"" )"	3541:3:101983:102053	4211507	11	True				
ANR	4214092	CallExpression	"eprintf ( ""Usage: dh [plugin-name]  # select a debug handler plugin\\n"" )"		4211507	0					
ANR	4214093	Callee	eprintf		4211507	0					
ANR	4214094	Identifier	eprintf		4211507	0					
ANR	4214095	ArgumentList	"""Usage: dh [plugin-name]  # select a debug handler plugin\\n"""		4211507	1					
ANR	4214096	Argument	"""Usage: dh [plugin-name]  # select a debug handler plugin\\n"""		4211507	0					
ANR	4214097	PrimaryExpression	"""Usage: dh [plugin-name]  # select a debug handler plugin\\n"""		4211507	0					
ANR	4214098	BreakStatement	break ;	3542:3:102058:102063	4211507	12	True				
ANR	4214099	BreakStatement	break ;	3544:2:102071:102076	4211507	56	True				
ANR	4214100	Label	case 'W' :	3546:1:102095:102103	4211507	57	True				
ANR	4214101	IfStatement	if ( input [ 2 ] == ' ' )		4211507	58					
ANR	4214102	Condition	input [ 2 ] == ' '	3547:6:102120:102134	4211507	0	True				
ANR	4214103	EqualityExpression	input [ 2 ] == ' '		4211507	0		==			
ANR	4214104	ArrayIndexing	input [ 2 ]		4211507	0					
ANR	4214105	Identifier	input		4211507	0					
ANR	4214106	PrimaryExpression	2		4211507	1					
ANR	4214107	PrimaryExpression	' '		4211507	1					
ANR	4214108	CompoundStatement		395:23:10417:10417	4211507	1					
ANR	4214109	IfStatement	"if ( r_w32_add_winmsg_breakpoint ( core -> dbg , input + 3 ) )"		4211507	0					
ANR	4214110	Condition	"r_w32_add_winmsg_breakpoint ( core -> dbg , input + 3 )"	3548:7:102146:102195	4211507	0	True				
ANR	4214111	CallExpression	"r_w32_add_winmsg_breakpoint ( core -> dbg , input + 3 )"		4211507	0					
ANR	4214112	Callee	r_w32_add_winmsg_breakpoint		4211507	0					
ANR	4214113	Identifier	r_w32_add_winmsg_breakpoint		4211507	0					
ANR	4214114	ArgumentList	core -> dbg		4211507	1					
ANR	4214115	Argument	core -> dbg		4211507	0					
ANR	4214116	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4214117	Identifier	core		4211507	0					
ANR	4214118	Identifier	dbg		4211507	1					
ANR	4214119	Argument	input + 3		4211507	1					
ANR	4214120	AdditiveExpression	input + 3		4211507	0		+			
ANR	4214121	Identifier	input		4211507	0					
ANR	4214122	PrimaryExpression	3		4211507	1					
ANR	4214123	CompoundStatement		396:59:10478:10478	4211507	1					
ANR	4214124	ExpressionStatement	"r_cons_print ( ""Breakpoint set.\\n"" )"	3549:4:102204:102238	4211507	0	True				
ANR	4214125	CallExpression	"r_cons_print ( ""Breakpoint set.\\n"" )"		4211507	0					
ANR	4214126	Callee	r_cons_print		4211507	0					
ANR	4214127	Identifier	r_cons_print		4211507	0					
ANR	4214128	ArgumentList	"""Breakpoint set.\\n"""		4211507	1					
ANR	4214129	Argument	"""Breakpoint set.\\n"""		4211507	0					
ANR	4214130	PrimaryExpression	"""Breakpoint set.\\n"""		4211507	0					
ANR	4214131	ElseStatement	else		4211507	0					
ANR	4214132	CompoundStatement		398:10:10530:10530	4211507	0					
ANR	4214133	ExpressionStatement	"r_cons_print ( ""Breakpoint not set.\\n"" )"	3551:4:102256:102294	4211507	0	True				
ANR	4214134	CallExpression	"r_cons_print ( ""Breakpoint not set.\\n"" )"		4211507	0					
ANR	4214135	Callee	r_cons_print		4211507	0					
ANR	4214136	Identifier	r_cons_print		4211507	0					
ANR	4214137	ArgumentList	"""Breakpoint not set.\\n"""		4211507	1					
ANR	4214138	Argument	"""Breakpoint not set.\\n"""		4211507	0					
ANR	4214139	PrimaryExpression	"""Breakpoint not set.\\n"""		4211507	0					
ANR	4214140	BreakStatement	break ;	3554:2:102307:102312	4211507	59	True				
ANR	4214141	Label	case 'w' :	3556:1:102322:102330	4211507	60	True				
ANR	4214142	ExpressionStatement	input ++	3557:2:102343:102350	4211507	61	True				
ANR	4214143	PostIncDecOperationExpression	input ++		4211507	0					
ANR	4214144	Identifier	input		4211507	0					
ANR	4214145	IncDec	++		4211507	1					
ANR	4214146	ExpressionStatement	watch = true	3558:2:102366:102378	4211507	62	True				
ANR	4214147	AssignmentExpression	watch = true		4211507	0		=			
ANR	4214148	Identifier	watch		4211507	0					
ANR	4214149	Identifier	true		4211507	1					
ANR	4214150	Label	case ' ' :	3560:1:102395:102403	4211507	63	True				
ANR	4214151	ExpressionStatement		3560:11:102405:102405	4211507	64	True				
ANR	4214152	Statement	define	3561:3:102417:102422	4211507	65	True				
ANR	4214153	Statement	DB_ARG	3561:10:102424:102429	4211507	66	True				
ANR	4214154	Statement	(	3561:16:102430:102430	4211507	67	True				
ANR	4214155	Statement	x	3561:17:102431:102431	4211507	68	True				
ANR	4214156	Statement	)	3561:18:102432:102432	4211507	69	True				
ANR	4214157	Statement	r_str_word_get0	3561:20:102434:102448	4211507	70	True				
ANR	4214158	Statement	(	3561:35:102449:102449	4211507	71	True				
ANR	4214159	Statement	str	3561:36:102450:102452	4211507	72	True				
ANR	4214160	Statement	","	3561:39:102453:102453	4211507	73	True				
ANR	4214161	Statement	x	3561:41:102455:102455	4211507	74	True				
ANR	4214162	Statement	)	3561:42:102456:102456	4211507	75	True				
ANR	4214163	ExpressionStatement	str = strdup ( r_str_trim_ro ( input + 1 ) )	3562:2:102460:102500	4211507	76	True				
ANR	4214164	AssignmentExpression	str = strdup ( r_str_trim_ro ( input + 1 ) )		4211507	0		=			
ANR	4214165	Identifier	str		4211507	0					
ANR	4214166	CallExpression	strdup ( r_str_trim_ro ( input + 1 ) )		4211507	1					
ANR	4214167	Callee	strdup		4211507	0					
ANR	4214168	Identifier	strdup		4211507	0					
ANR	4214169	ArgumentList	r_str_trim_ro ( input + 1 )		4211507	1					
ANR	4214170	Argument	r_str_trim_ro ( input + 1 )		4211507	0					
ANR	4214171	CallExpression	r_str_trim_ro ( input + 1 )		4211507	0					
ANR	4214172	Callee	r_str_trim_ro		4211507	0					
ANR	4214173	Identifier	r_str_trim_ro		4211507	0					
ANR	4214174	ArgumentList	input + 1		4211507	1					
ANR	4214175	Argument	input + 1		4211507	0					
ANR	4214176	AdditiveExpression	input + 1		4211507	0		+			
ANR	4214177	Identifier	input		4211507	0					
ANR	4214178	PrimaryExpression	1		4211507	1					
ANR	4214179	IdentifierDeclStatement	int i = 0 ;	3563:2:102504:102513	4211507	77	True				
ANR	4214180	IdentifierDecl	i = 0		4211507	0					
ANR	4214181	IdentifierDeclType	int		4211507	0					
ANR	4214182	Identifier	i		4211507	1					
ANR	4214183	AssignmentExpression	i = 0		4211507	2		=			
ANR	4214184	Identifier	i		4211507	0					
ANR	4214185	PrimaryExpression	0		4211507	1					
ANR	4214186	IdentifierDeclStatement	int sl = r_str_word_set0 ( str ) ;	3564:2:102517:102547	4211507	78	True				
ANR	4214187	IdentifierDecl	sl = r_str_word_set0 ( str )		4211507	0					
ANR	4214188	IdentifierDeclType	int		4211507	0					
ANR	4214189	Identifier	sl		4211507	1					
ANR	4214190	AssignmentExpression	sl = r_str_word_set0 ( str )		4211507	2		=			
ANR	4214191	Identifier	sl		4211507	0					
ANR	4214192	CallExpression	r_str_word_set0 ( str )		4211507	1					
ANR	4214193	Callee	r_str_word_set0		4211507	0					
ANR	4214194	Identifier	r_str_word_set0		4211507	0					
ANR	4214195	ArgumentList	str		4211507	1					
ANR	4214196	Argument	str		4211507	0					
ANR	4214197	Identifier	str		4211507	0					
ANR	4214198	ForStatement	for ( ; i < sl ; i += 1 + ( watch ? 1 : 0 ) )		4211507	79					
ANR	4214199	Condition	i < sl	3566:10:102626:102631	4211507	0	True				
ANR	4214200	RelationalExpression	i < sl		4211507	0		<			
ANR	4214201	Identifier	i		4211507	0					
ANR	4214202	Identifier	sl		4211507	1					
ANR	4214203	AssignmentExpression	i += 1 + ( watch ? 1 : 0 )	3566:18:102634:102657	4211507	1	True	+=			
ANR	4214204	Identifier	i		4211507	0					
ANR	4214205	AdditiveExpression	1 + ( watch ? 1 : 0 )		4211507	1		+			
ANR	4214206	PrimaryExpression	1		4211507	0					
ANR	4214207	ConditionalExpression	watch ? 1 : 0		4211507	1					
ANR	4214208	Condition	watch		4211507	0					
ANR	4214209	Identifier	watch		4211507	0					
ANR	4214210	PrimaryExpression	1		4211507	1					
ANR	4214211	PrimaryExpression	0		4211507	2					
ANR	4214212	CompoundStatement		414:44:10940:10940	4211507	2					
ANR	4214213	IfStatement	if ( * DB_ARG ( i ) == '-' )		4211507	0					
ANR	4214214	Condition	* DB_ARG ( i ) == '-'	3567:7:102669:102685	4211507	0	True				
ANR	4214215	EqualityExpression	* DB_ARG ( i ) == '-'		4211507	0		==			
ANR	4214216	UnaryOperationExpression	* DB_ARG ( i )		4211507	0					
ANR	4214217	UnaryOperator	*		4211507	0					
ANR	4214218	CallExpression	DB_ARG ( i )		4211507	1					
ANR	4214219	Callee	DB_ARG		4211507	0					
ANR	4214220	Identifier	DB_ARG		4211507	0					
ANR	4214221	ArgumentList	i		4211507	1					
ANR	4214222	Argument	i		4211507	0					
ANR	4214223	Identifier	i		4211507	0					
ANR	4214224	PrimaryExpression	'-'		4211507	1					
ANR	4214225	CompoundStatement		415:26:10968:10968	4211507	1					
ANR	4214226	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , r_num_math ( core -> num , DB_ARG ( i ) + 1 ) )"	3568:4:102694:102758	4211507	0	True				
ANR	4214227	CallExpression	"r_bp_del ( core -> dbg -> bp , r_num_math ( core -> num , DB_ARG ( i ) + 1 ) )"		4211507	0					
ANR	4214228	Callee	r_bp_del		4211507	0					
ANR	4214229	Identifier	r_bp_del		4211507	0					
ANR	4214230	ArgumentList	core -> dbg -> bp		4211507	1					
ANR	4214231	Argument	core -> dbg -> bp		4211507	0					
ANR	4214232	PtrMemberAccess	core -> dbg -> bp		4211507	0					
ANR	4214233	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4214234	Identifier	core		4211507	0					
ANR	4214235	Identifier	dbg		4211507	1					
ANR	4214236	Identifier	bp		4211507	1					
ANR	4214237	Argument	"r_num_math ( core -> num , DB_ARG ( i ) + 1 )"		4211507	1					
ANR	4214238	CallExpression	"r_num_math ( core -> num , DB_ARG ( i ) + 1 )"		4211507	0					
ANR	4214239	Callee	r_num_math		4211507	0					
ANR	4214240	Identifier	r_num_math		4211507	0					
ANR	4214241	ArgumentList	core -> num		4211507	1					
ANR	4214242	Argument	core -> num		4211507	0					
ANR	4214243	PtrMemberAccess	core -> num		4211507	0					
ANR	4214244	Identifier	core		4211507	0					
ANR	4214245	Identifier	num		4211507	1					
ANR	4214246	Argument	DB_ARG ( i ) + 1		4211507	1					
ANR	4214247	AdditiveExpression	DB_ARG ( i ) + 1		4211507	0		+			
ANR	4214248	CallExpression	DB_ARG ( i )		4211507	0					
ANR	4214249	Callee	DB_ARG		4211507	0					
ANR	4214250	Identifier	DB_ARG		4211507	0					
ANR	4214251	ArgumentList	i		4211507	1					
ANR	4214252	Argument	i		4211507	0					
ANR	4214253	Identifier	i		4211507	0					
ANR	4214254	PrimaryExpression	1		4211507	1					
ANR	4214255	ElseStatement	else		4211507	0					
ANR	4214256	CompoundStatement		417:10:11050:11050	4211507	0					
ANR	4214257	IfStatement	if ( watch )		4211507	0					
ANR	4214258	Condition	watch	3570:8:102780:102784	4211507	0	True				
ANR	4214259	Identifier	watch		4211507	0					
ANR	4214260	CompoundStatement		418:15:11067:11067	4211507	1					
ANR	4214261	IfStatement	if ( sl % 2 == 0 )		4211507	0					
ANR	4214262	Condition	sl % 2 == 0	3571:9:102798:102808	4211507	0	True				
ANR	4214263	EqualityExpression	sl % 2 == 0		4211507	0		==			
ANR	4214264	MultiplicativeExpression	sl % 2		4211507	0		%			
ANR	4214265	Identifier	sl		4211507	0					
ANR	4214266	PrimaryExpression	2		4211507	1					
ANR	4214267	PrimaryExpression	0		4211507	1					
ANR	4214268	CompoundStatement		419:22:11091:11091	4211507	1					
ANR	4214269	IfStatement	"if ( ! strcmp ( DB_ARG ( i + 1 ) , ""r"" ) )"		4211507	0					
ANR	4214270	Condition	"! strcmp ( DB_ARG ( i + 1 ) , ""r"" )"	3572:10:102823:102851	4211507	0	True				
ANR	4214271	UnaryOperationExpression	"! strcmp ( DB_ARG ( i + 1 ) , ""r"" )"		4211507	0					
ANR	4214272	UnaryOperator	!		4211507	0					
ANR	4214273	CallExpression	"strcmp ( DB_ARG ( i + 1 ) , ""r"" )"		4211507	1					
ANR	4214274	Callee	strcmp		4211507	0					
ANR	4214275	Identifier	strcmp		4211507	0					
ANR	4214276	ArgumentList	DB_ARG ( i + 1 )		4211507	1					
ANR	4214277	Argument	DB_ARG ( i + 1 )		4211507	0					
ANR	4214278	CallExpression	DB_ARG ( i + 1 )		4211507	0					
ANR	4214279	Callee	DB_ARG		4211507	0					
ANR	4214280	Identifier	DB_ARG		4211507	0					
ANR	4214281	ArgumentList	i + 1		4211507	1					
ANR	4214282	Argument	i + 1		4211507	0					
ANR	4214283	AdditiveExpression	i + 1		4211507	0		+			
ANR	4214284	Identifier	i		4211507	0					
ANR	4214285	PrimaryExpression	1		4211507	1					
ANR	4214286	Argument	"""r"""		4211507	1					
ANR	4214287	PrimaryExpression	"""r"""		4211507	0					
ANR	4214288	CompoundStatement		420:41:11134:11134	4211507	1					
ANR	4214289	ExpressionStatement	rw = R_BP_PROT_READ	3573:7:102863:102882	4211507	0	True				
ANR	4214290	AssignmentExpression	rw = R_BP_PROT_READ		4211507	0		=			
ANR	4214291	Identifier	rw		4211507	0					
ANR	4214292	Identifier	R_BP_PROT_READ		4211507	1					
ANR	4214293	ElseStatement	else		4211507	0					
ANR	4214294	IfStatement	"if ( ! strcmp ( DB_ARG ( i + 1 ) , ""w"" ) )"		4211507	0					
ANR	4214295	Condition	"! strcmp ( DB_ARG ( i + 1 ) , ""w"" )"	3574:17:102901:102929	4211507	0	True				
ANR	4214296	UnaryOperationExpression	"! strcmp ( DB_ARG ( i + 1 ) , ""w"" )"		4211507	0					
ANR	4214297	UnaryOperator	!		4211507	0					
ANR	4214298	CallExpression	"strcmp ( DB_ARG ( i + 1 ) , ""w"" )"		4211507	1					
ANR	4214299	Callee	strcmp		4211507	0					
ANR	4214300	Identifier	strcmp		4211507	0					
ANR	4214301	ArgumentList	DB_ARG ( i + 1 )		4211507	1					
ANR	4214302	Argument	DB_ARG ( i + 1 )		4211507	0					
ANR	4214303	CallExpression	DB_ARG ( i + 1 )		4211507	0					
ANR	4214304	Callee	DB_ARG		4211507	0					
ANR	4214305	Identifier	DB_ARG		4211507	0					
ANR	4214306	ArgumentList	i + 1		4211507	1					
ANR	4214307	Argument	i + 1		4211507	0					
ANR	4214308	AdditiveExpression	i + 1		4211507	0		+			
ANR	4214309	Identifier	i		4211507	0					
ANR	4214310	PrimaryExpression	1		4211507	1					
ANR	4214311	Argument	"""w"""		4211507	1					
ANR	4214312	PrimaryExpression	"""w"""		4211507	0					
ANR	4214313	CompoundStatement		422:48:11212:11212	4211507	1					
ANR	4214314	ExpressionStatement	rw = R_BP_PROT_WRITE	3575:7:102941:102961	4211507	0	True				
ANR	4214315	AssignmentExpression	rw = R_BP_PROT_WRITE		4211507	0		=			
ANR	4214316	Identifier	rw		4211507	0					
ANR	4214317	Identifier	R_BP_PROT_WRITE		4211507	1					
ANR	4214318	ElseStatement	else		4211507	0					
ANR	4214319	IfStatement	"if ( ! strcmp ( DB_ARG ( i + 1 ) , ""rw"" ) )"		4211507	0					
ANR	4214320	Condition	"! strcmp ( DB_ARG ( i + 1 ) , ""rw"" )"	3576:17:102980:103009	4211507	0	True				
ANR	4214321	UnaryOperationExpression	"! strcmp ( DB_ARG ( i + 1 ) , ""rw"" )"		4211507	0					
ANR	4214322	UnaryOperator	!		4211507	0					
ANR	4214323	CallExpression	"strcmp ( DB_ARG ( i + 1 ) , ""rw"" )"		4211507	1					
ANR	4214324	Callee	strcmp		4211507	0					
ANR	4214325	Identifier	strcmp		4211507	0					
ANR	4214326	ArgumentList	DB_ARG ( i + 1 )		4211507	1					
ANR	4214327	Argument	DB_ARG ( i + 1 )		4211507	0					
ANR	4214328	CallExpression	DB_ARG ( i + 1 )		4211507	0					
ANR	4214329	Callee	DB_ARG		4211507	0					
ANR	4214330	Identifier	DB_ARG		4211507	0					
ANR	4214331	ArgumentList	i + 1		4211507	1					
ANR	4214332	Argument	i + 1		4211507	0					
ANR	4214333	AdditiveExpression	i + 1		4211507	0		+			
ANR	4214334	Identifier	i		4211507	0					
ANR	4214335	PrimaryExpression	1		4211507	1					
ANR	4214336	Argument	"""rw"""		4211507	1					
ANR	4214337	PrimaryExpression	"""rw"""		4211507	0					
ANR	4214338	CompoundStatement		424:49:11292:11292	4211507	1					
ANR	4214339	ExpressionStatement	rw = R_BP_PROT_ACCESS	3577:7:103021:103042	4211507	0	True				
ANR	4214340	AssignmentExpression	rw = R_BP_PROT_ACCESS		4211507	0		=			
ANR	4214341	Identifier	rw		4211507	0					
ANR	4214342	Identifier	R_BP_PROT_ACCESS		4211507	1					
ANR	4214343	ElseStatement	else		4211507	0					
ANR	4214344	CompoundStatement		426:13:11337:11337	4211507	0					
ANR	4214345	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dbw )"	3579:7:103066:103102	4211507	0	True				
ANR	4214346	CallExpression	"r_core_cmd_help ( core , help_msg_dbw )"		4211507	0					
ANR	4214347	Callee	r_core_cmd_help		4211507	0					
ANR	4214348	Identifier	r_core_cmd_help		4211507	0					
ANR	4214349	ArgumentList	core		4211507	1					
ANR	4214350	Argument	core		4211507	0					
ANR	4214351	Identifier	core		4211507	0					
ANR	4214352	Argument	help_msg_dbw		4211507	1					
ANR	4214353	Identifier	help_msg_dbw		4211507	0					
ANR	4214354	BreakStatement	break ;	3580:7:103111:103116	4211507	1	True				
ANR	4214355	ElseStatement	else		4211507	0					
ANR	4214356	CompoundStatement		430:12:11418:11418	4211507	0					
ANR	4214357	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dbw )"	3583:6:103146:103182	4211507	0	True				
ANR	4214358	CallExpression	"r_core_cmd_help ( core , help_msg_dbw )"		4211507	0					
ANR	4214359	Callee	r_core_cmd_help		4211507	0					
ANR	4214360	Identifier	r_core_cmd_help		4211507	0					
ANR	4214361	ArgumentList	core		4211507	1					
ANR	4214362	Argument	core		4211507	0					
ANR	4214363	Identifier	core		4211507	0					
ANR	4214364	Argument	help_msg_dbw		4211507	1					
ANR	4214365	Identifier	help_msg_dbw		4211507	0					
ANR	4214366	BreakStatement	break ;	3584:6:103190:103195	4211507	1	True				
ANR	4214367	ExpressionStatement	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"	3587:4:103214:103255	4211507	1	True				
ANR	4214368	AssignmentExpression	"addr = r_num_math ( core -> num , DB_ARG ( i ) )"		4211507	0		=			
ANR	4214369	Identifier	addr		4211507	0					
ANR	4214370	CallExpression	"r_num_math ( core -> num , DB_ARG ( i ) )"		4211507	1					
ANR	4214371	Callee	r_num_math		4211507	0					
ANR	4214372	Identifier	r_num_math		4211507	0					
ANR	4214373	ArgumentList	core -> num		4211507	1					
ANR	4214374	Argument	core -> num		4211507	0					
ANR	4214375	PtrMemberAccess	core -> num		4211507	0					
ANR	4214376	Identifier	core		4211507	0					
ANR	4214377	Identifier	num		4211507	1					
ANR	4214378	Argument	DB_ARG ( i )		4211507	1					
ANR	4214379	CallExpression	DB_ARG ( i )		4211507	0					
ANR	4214380	Callee	DB_ARG		4211507	0					
ANR	4214381	Identifier	DB_ARG		4211507	0					
ANR	4214382	ArgumentList	i		4211507	1					
ANR	4214383	Argument	i		4211507	0					
ANR	4214384	Identifier	i		4211507	0					
ANR	4214385	IfStatement	"if ( validAddress ( core , addr ) )"		4211507	2					
ANR	4214386	Condition	"validAddress ( core , addr )"	3588:8:103265:103289	4211507	0	True				
ANR	4214387	CallExpression	"validAddress ( core , addr )"		4211507	0					
ANR	4214388	Callee	validAddress		4211507	0					
ANR	4214389	Identifier	validAddress		4211507	0					
ANR	4214390	ArgumentList	core		4211507	1					
ANR	4214391	Argument	core		4211507	0					
ANR	4214392	Identifier	core		4211507	0					
ANR	4214393	Argument	addr		4211507	1					
ANR	4214394	Identifier	addr		4211507	0					
ANR	4214395	CompoundStatement		436:35:11572:11572	4211507	1					
ANR	4214396	ExpressionStatement	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , watch , rw , NULL , 0 )"	3589:5:103299:103363	4211507	0	True				
ANR	4214397	AssignmentExpression	"bpi = r_debug_bp_add ( core -> dbg , addr , hwbp , watch , rw , NULL , 0 )"		4211507	0		=			
ANR	4214398	Identifier	bpi		4211507	0					
ANR	4214399	CallExpression	"r_debug_bp_add ( core -> dbg , addr , hwbp , watch , rw , NULL , 0 )"		4211507	1					
ANR	4214400	Callee	r_debug_bp_add		4211507	0					
ANR	4214401	Identifier	r_debug_bp_add		4211507	0					
ANR	4214402	ArgumentList	core -> dbg		4211507	1					
ANR	4214403	Argument	core -> dbg		4211507	0					
ANR	4214404	PtrMemberAccess	core -> dbg		4211507	0					
ANR	4214405	Identifier	core		4211507	0					
ANR	4214406	Identifier	dbg		4211507	1					
ANR	4214407	Argument	addr		4211507	1					
ANR	4214408	Identifier	addr		4211507	0					
ANR	4214409	Argument	hwbp		4211507	2					
ANR	4214410	Identifier	hwbp		4211507	0					
ANR	4214411	Argument	watch		4211507	3					
ANR	4214412	Identifier	watch		4211507	0					
ANR	4214413	Argument	rw		4211507	4					
ANR	4214414	Identifier	rw		4211507	0					
ANR	4214415	Argument	NULL		4211507	5					
ANR	4214416	Identifier	NULL		4211507	0					
ANR	4214417	Argument	0		4211507	6					
ANR	4214418	PrimaryExpression	0		4211507	0					
ANR	4214419	IfStatement	if ( bpi )		4211507	1					
ANR	4214420	Condition	bpi	3590:9:103374:103376	4211507	0	True				
ANR	4214421	Identifier	bpi		4211507	0					
ANR	4214422	CompoundStatement		438:14:11659:11659	4211507	1					
ANR	4214423	ExpressionStatement	free ( bpi -> name )	3591:6:103387:103403	4211507	0	True				
ANR	4214424	CallExpression	free ( bpi -> name )		4211507	0					
ANR	4214425	Callee	free		4211507	0					
ANR	4214426	Identifier	free		4211507	0					
ANR	4214427	ArgumentList	bpi -> name		4211507	1					
ANR	4214428	Argument	bpi -> name		4211507	0					
ANR	4214429	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4214430	Identifier	bpi		4211507	0					
ANR	4214431	Identifier	name		4211507	1					
ANR	4214432	IfStatement	"if ( ! strcmp ( DB_ARG ( i ) , ""$$"" ) )"		4211507	1					
ANR	4214433	Condition	"! strcmp ( DB_ARG ( i ) , ""$$"" )"	3592:10:103415:103440	4211507	0	True				
ANR	4214434	UnaryOperationExpression	"! strcmp ( DB_ARG ( i ) , ""$$"" )"		4211507	0					
ANR	4214435	UnaryOperator	!		4211507	0					
ANR	4214436	CallExpression	"strcmp ( DB_ARG ( i ) , ""$$"" )"		4211507	1					
ANR	4214437	Callee	strcmp		4211507	0					
ANR	4214438	Identifier	strcmp		4211507	0					
ANR	4214439	ArgumentList	DB_ARG ( i )		4211507	1					
ANR	4214440	Argument	DB_ARG ( i )		4211507	0					
ANR	4214441	CallExpression	DB_ARG ( i )		4211507	0					
ANR	4214442	Callee	DB_ARG		4211507	0					
ANR	4214443	Identifier	DB_ARG		4211507	0					
ANR	4214444	ArgumentList	i		4211507	1					
ANR	4214445	Argument	i		4211507	0					
ANR	4214446	Identifier	i		4211507	0					
ANR	4214447	Argument	"""$$"""		4211507	1					
ANR	4214448	PrimaryExpression	"""$$"""		4211507	0					
ANR	4214449	CompoundStatement		441:7:11732:11792	4211507	1					
ANR	4214450	IdentifierDeclStatement	"RFlagItem * f = r_core_flag_get_by_spaces ( core -> flags , addr ) ;"	3593:7:103452:103512	4211507	0	True				
ANR	4214451	IdentifierDecl	"* f = r_core_flag_get_by_spaces ( core -> flags , addr )"		4211507	0					
ANR	4214452	IdentifierDeclType	RFlagItem *		4211507	0					
ANR	4214453	Identifier	f		4211507	1					
ANR	4214454	AssignmentExpression	"* f = r_core_flag_get_by_spaces ( core -> flags , addr )"		4211507	2		=			
ANR	4214455	Identifier	f		4211507	0					
ANR	4214456	CallExpression	"r_core_flag_get_by_spaces ( core -> flags , addr )"		4211507	1					
ANR	4214457	Callee	r_core_flag_get_by_spaces		4211507	0					
ANR	4214458	Identifier	r_core_flag_get_by_spaces		4211507	0					
ANR	4214459	ArgumentList	core -> flags		4211507	1					
ANR	4214460	Argument	core -> flags		4211507	0					
ANR	4214461	PtrMemberAccess	core -> flags		4211507	0					
ANR	4214462	Identifier	core		4211507	0					
ANR	4214463	Identifier	flags		4211507	1					
ANR	4214464	Argument	addr		4211507	1					
ANR	4214465	Identifier	addr		4211507	0					
ANR	4214466	IfStatement	if ( f )		4211507	1					
ANR	4214467	Condition	f	3594:11:103525:103525	4211507	0	True				
ANR	4214468	Identifier	f		4211507	0					
ANR	4214469	CompoundStatement		442:14:11808:11808	4211507	1					
ANR	4214470	IfStatement	if ( addr > f -> offset )		4211507	0					
ANR	4214471	Condition	addr > f -> offset	3595:12:103542:103557	4211507	0	True				
ANR	4214472	RelationalExpression	addr > f -> offset		4211507	0		>			
ANR	4214473	Identifier	addr		4211507	0					
ANR	4214474	PtrMemberAccess	f -> offset		4211507	1					
ANR	4214475	Identifier	f		4211507	0					
ANR	4214476	Identifier	offset		4211507	1					
ANR	4214477	CompoundStatement		443:30:11840:11840	4211507	1					
ANR	4214478	Statement	bpi	3596:9:103571:103573	4211507	0	True				
ANR	4214479	Statement	->	3596:12:103574:103575	4211507	1	True				
ANR	4214480	Statement	name	3596:14:103576:103579	4211507	2	True				
ANR	4214481	Statement	=	3596:19:103581:103581	4211507	3	True				
ANR	4214482	Statement	r_str_newf	3596:21:103583:103592	4211507	4	True				
ANR	4214483	Statement	(	3596:32:103594:103594	4211507	5	True				
ANR	4214484	Statement	"""%s+0x%"""	3596:33:103595:103602	4211507	6	True				
ANR	4214485	Statement	PFMT64x	3596:42:103604:103610	4211507	7	True				
ANR	4214486	Statement	","	3596:49:103611:103611	4211507	8	True				
ANR	4214487	Statement	f	3596:51:103613:103613	4211507	9	True				
ANR	4214488	Statement	->	3596:52:103614:103615	4211507	10	True				
ANR	4214489	Statement	name	3596:54:103616:103619	4211507	11	True				
ANR	4214490	Statement	","	3596:58:103620:103620	4211507	12	True				
ANR	4214491	Statement	addr	3596:60:103622:103625	4211507	13	True				
ANR	4214492	Statement	-	3596:65:103627:103627	4211507	14	True				
ANR	4214493	Statement	f	3596:67:103629:103629	4211507	15	True				
ANR	4214494	Statement	->	3596:68:103630:103631	4211507	16	True				
ANR	4214495	Statement	offset	3596:70:103632:103637	4211507	17	True				
ANR	4214496	Statement	)	3596:76:103638:103638	4211507	18	True				
ANR	4214497	ExpressionStatement		3596:77:103639:103639	4211507	19	True				
ANR	4214498	ElseStatement	else		4211507	0					
ANR	4214499	CompoundStatement		445:15:11936:11936	4211507	0					
ANR	4214500	ExpressionStatement	bpi -> name = strdup ( f -> name )	3598:9:103667:103695	4211507	0	True				
ANR	4214501	AssignmentExpression	bpi -> name = strdup ( f -> name )		4211507	0		=			
ANR	4214502	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4214503	Identifier	bpi		4211507	0					
ANR	4214504	Identifier	name		4211507	1					
ANR	4214505	CallExpression	strdup ( f -> name )		4211507	1					
ANR	4214506	Callee	strdup		4211507	0					
ANR	4214507	Identifier	strdup		4211507	0					
ANR	4214508	ArgumentList	f -> name		4211507	1					
ANR	4214509	Argument	f -> name		4211507	0					
ANR	4214510	PtrMemberAccess	f -> name		4211507	0					
ANR	4214511	Identifier	f		4211507	0					
ANR	4214512	Identifier	name		4211507	1					
ANR	4214513	ElseStatement	else		4211507	0					
ANR	4214514	CompoundStatement		448:14:12001:12001	4211507	0					
ANR	4214515	Statement	bpi	3601:8:103731:103733	4211507	0	True				
ANR	4214516	Statement	->	3601:11:103734:103735	4211507	1	True				
ANR	4214517	Statement	name	3601:13:103736:103739	4211507	2	True				
ANR	4214518	Statement	=	3601:18:103741:103741	4211507	3	True				
ANR	4214519	Statement	r_str_newf	3601:20:103743:103752	4211507	4	True				
ANR	4214520	Statement	(	3601:31:103754:103754	4211507	5	True				
ANR	4214521	Statement	"""0x%08"""	3601:32:103755:103761	4211507	6	True				
ANR	4214522	Statement	PFMT64x	3601:40:103763:103769	4211507	7	True				
ANR	4214523	Statement	","	3601:47:103770:103770	4211507	8	True				
ANR	4214524	Statement	addr	3601:49:103772:103775	4211507	9	True				
ANR	4214525	Statement	)	3601:53:103776:103776	4211507	10	True				
ANR	4214526	ExpressionStatement		3601:54:103777:103777	4211507	11	True				
ANR	4214527	ElseStatement	else		4211507	0					
ANR	4214528	CompoundStatement		451:13:12081:12081	4211507	0					
ANR	4214529	ExpressionStatement	bpi -> name = strdup ( DB_ARG ( i ) )	3604:7:103810:103841	4211507	0	True				
ANR	4214530	AssignmentExpression	bpi -> name = strdup ( DB_ARG ( i ) )		4211507	0		=			
ANR	4214531	PtrMemberAccess	bpi -> name		4211507	0					
ANR	4214532	Identifier	bpi		4211507	0					
ANR	4214533	Identifier	name		4211507	1					
ANR	4214534	CallExpression	strdup ( DB_ARG ( i ) )		4211507	1					
ANR	4214535	Callee	strdup		4211507	0					
ANR	4214536	Identifier	strdup		4211507	0					
ANR	4214537	ArgumentList	DB_ARG ( i )		4211507	1					
ANR	4214538	Argument	DB_ARG ( i )		4211507	0					
ANR	4214539	CallExpression	DB_ARG ( i )		4211507	0					
ANR	4214540	Callee	DB_ARG		4211507	0					
ANR	4214541	Identifier	DB_ARG		4211507	0					
ANR	4214542	ArgumentList	i		4211507	1					
ANR	4214543	Argument	i		4211507	0					
ANR	4214544	Identifier	i		4211507	0					
ANR	4214545	ElseStatement	else		4211507	0					
ANR	4214546	CompoundStatement		454:12:12143:12143	4211507	0					
ANR	4214547	ExpressionStatement	"eprintf ( ""Cannot set breakpoint at '%s'\\n"" , DB_ARG ( i ) )"	3607:6:103871:103926	4211507	0	True				
ANR	4214548	CallExpression	"eprintf ( ""Cannot set breakpoint at '%s'\\n"" , DB_ARG ( i ) )"		4211507	0					
ANR	4214549	Callee	eprintf		4211507	0					
ANR	4214550	Identifier	eprintf		4211507	0					
ANR	4214551	ArgumentList	"""Cannot set breakpoint at '%s'\\n"""		4211507	1					
ANR	4214552	Argument	"""Cannot set breakpoint at '%s'\\n"""		4211507	0					
ANR	4214553	PrimaryExpression	"""Cannot set breakpoint at '%s'\\n"""		4211507	0					
ANR	4214554	Argument	DB_ARG ( i )		4211507	1					
ANR	4214555	CallExpression	DB_ARG ( i )		4211507	0					
ANR	4214556	Callee	DB_ARG		4211507	0					
ANR	4214557	Identifier	DB_ARG		4211507	0					
ANR	4214558	ArgumentList	i		4211507	1					
ANR	4214559	Argument	i		4211507	0					
ANR	4214560	Identifier	i		4211507	0					
ANR	4214561	ElseStatement	else		4211507	0					
ANR	4214562	CompoundStatement		457:11:12226:12226	4211507	0					
ANR	4214563	Statement	eprintf	3610:5:103953:103959	4211507	0	True				
ANR	4214564	Statement	(	3610:13:103961:103961	4211507	1	True				
ANR	4214565	Statement	"""Cannot place a breakpoint on 0x%08"""	3610:14:103962:103997	4211507	2	True				
ANR	4214566	Statement	PFMT64x	3610:50:103998:104004	4211507	3	True				
ANR	4214567	Statement	""" unmapped memory."""	3610:57:104005:104023	4211507	4	True				
ANR	4214568	Statement	"""See e? dbg.bpinmaps\\n"""	3611:8:104033:104055	4211507	5	True				
ANR	4214569	Statement	","	3611:31:104056:104056	4211507	6	True				
ANR	4214570	Statement	addr	3611:33:104058:104061	4211507	7	True				
ANR	4214571	Statement	)	3611:37:104062:104062	4211507	8	True				
ANR	4214572	ExpressionStatement		3611:38:104063:104063	4211507	9	True				
ANR	4214573	BreakStatement	break ;	3615:2:104082:104087	4211507	80	True				
ANR	4214574	Label	case 'i' :	3616:1:104090:104098	4211507	81	True				
ANR	4214575	ExpressionStatement	"core_cmd_dbi ( core , input , addr )"	3617:2:104102:104134	4211507	82	True				
ANR	4214576	CallExpression	"core_cmd_dbi ( core , input , addr )"		4211507	0					
ANR	4214577	Callee	core_cmd_dbi		4211507	0					
ANR	4214578	Identifier	core_cmd_dbi		4211507	0					
ANR	4214579	ArgumentList	core		4211507	1					
ANR	4214580	Argument	core		4211507	0					
ANR	4214581	Identifier	core		4211507	0					
ANR	4214582	Argument	input		4211507	1					
ANR	4214583	Identifier	input		4211507	0					
ANR	4214584	Argument	addr		4211507	2					
ANR	4214585	Identifier	addr		4211507	0					
ANR	4214586	BreakStatement	break ;	3618:2:104138:104143	4211507	83	True				
ANR	4214587	Label	case '?' :	3619:1:104146:104154	4211507	84	True				
ANR	4214588	Label	default :	3620:1:104157:104164	4211507	85	True				
ANR	4214589	Identifier	default		4211507	0					
ANR	4214590	ExpressionStatement	"r_core_cmd_help ( core , help_msg_db )"	3621:2:104168:104203	4211507	86	True				
ANR	4214591	CallExpression	"r_core_cmd_help ( core , help_msg_db )"		4211507	0					
ANR	4214592	Callee	r_core_cmd_help		4211507	0					
ANR	4214593	Identifier	r_core_cmd_help		4211507	0					
ANR	4214594	ArgumentList	core		4211507	1					
ANR	4214595	Argument	core		4211507	0					
ANR	4214596	Identifier	core		4211507	0					
ANR	4214597	Argument	help_msg_db		4211507	1					
ANR	4214598	Identifier	help_msg_db		4211507	0					
ANR	4214599	BreakStatement	break ;	3622:2:104207:104212	4211507	87	True				
ANR	4214600	ExpressionStatement	free ( str )	3624:1:104218:104228	4211507	15	True				
ANR	4214601	CallExpression	free ( str )		4211507	0					
ANR	4214602	Callee	free		4211507	0					
ANR	4214603	Identifier	free		4211507	0					
ANR	4214604	ArgumentList	str		4211507	1					
ANR	4214605	Argument	str		4211507	0					
ANR	4214606	Identifier	str		4211507	0					
ANR	4214607	ReturnType	static void		4211507	1					
ANR	4214608	Identifier	r_core_cmd_bp		4211507	2					
ANR	4214609	ParameterList	"RCore * core , const char * input"		4211507	3					
ANR	4214610	Parameter	RCore * core	3153:26:91687:91697	4211507	0	True				
ANR	4214611	ParameterType	RCore *		4211507	0					
ANR	4214612	Identifier	core		4211507	1					
ANR	4214613	Parameter	const char * input	3153:39:91700:91716	4211507	1	True				
ANR	4214614	ParameterType	const char *		4211507	0					
ANR	4214615	Identifier	input		4211507	1					
ANR	4214616	CFGEntryNode	ENTRY		4211507		True				
ANR	4214617	CFGExitNode	EXIT		4211507		True				
ANR	4214618	Symbol	R_BP_PROT_ACCESS		4211507						
ANR	4214619	Symbol	help_msg_dbw		4211507						
ANR	4214620	Symbol	validAddress		4211507						
ANR	4214621	Symbol	help_msg_dbt		4211507						
ANR	4214622	Symbol	pcstr		4211507						
ANR	4214623	Symbol	* input		4211507						
ANR	4214624	Symbol	delta		4211507						
ANR	4214625	Symbol	strchr		4211507						
ANR	4214626	Symbol	core -> offset		4211507						
ANR	4214627	Symbol	core -> dbg -> bp		4211507						
ANR	4214628	Symbol	r_str_word_set0		4211507						
ANR	4214629	Symbol	r_num_tail		4211507						
ANR	4214630	Symbol	& flagdesc		4211507						
ANR	4214631	Symbol	symbol -> type		4211507						
ANR	4214632	Symbol	r_str_rwx_i		4211507						
ANR	4214633	Symbol	core -> bin		4211507						
ANR	4214634	Symbol	DB_ARG		4211507						
ANR	4214635	Symbol	flagdesc2		4211507						
ANR	4214636	Symbol	module		4211507						
ANR	4214637	Symbol	iter		4211507						
ANR	4214638	Symbol	r_anal_noreturn_at		4211507						
ANR	4214639	Symbol	str		4211507						
ANR	4214640	Symbol	input		4211507						
ANR	4214641	Symbol	* * * core		4211507						
ANR	4214642	Symbol	r_w32_add_winmsg_breakpoint		4211507						
ANR	4214643	Symbol	r_bp_plugin_del		4211507						
ANR	4214644	Symbol	r_config_get_i		4211507						
ANR	4214645	Symbol	r_str_trim_ro		4211507						
ANR	4214646	Symbol	* DB_ARG		4211507						
ANR	4214647	Symbol	* core -> dbg		4211507						
ANR	4214648	Symbol	spstr		4211507						
ANR	4214649	Symbol	symbol -> vaddr		4211507						
ANR	4214650	Symbol	rw		4211507						
ANR	4214651	Symbol	f -> name		4211507						
ANR	4214652	Symbol	* core		4211507						
ANR	4214653	Symbol	r_debug_bp_add		4211507						
ANR	4214654	Symbol	core -> anal		4211507						
ANR	4214655	Symbol	bp		4211507						
ANR	4214656	Symbol	r_debug_frames		4211507						
ANR	4214657	Symbol	& flagdesc2		4211507						
ANR	4214658	Symbol	fcn		4211507						
ANR	4214659	Symbol	arg		4211507						
ANR	4214660	Symbol	sl		4211507						
ANR	4214661	Symbol	core -> anal -> bits		4211507						
ANR	4214662	Symbol	f		4211507						
ANR	4214663	Symbol	i		4211507						
ANR	4214664	Symbol	bpi -> enabled		4211507						
ANR	4214665	Symbol	core -> flags		4211507						
ANR	4214666	Symbol	r_bp_set_trace		4211507						
ANR	4214667	Symbol	& spstr		4211507						
ANR	4214668	Symbol	bpi -> data		4211507						
ANR	4214669	Symbol	p		4211507						
ANR	4214670	Symbol	* core -> anal		4211507						
ANR	4214671	Symbol	f -> offset		4211507						
ANR	4214672	Symbol	watch		4211507						
ANR	4214673	Symbol	bpi -> name		4211507						
ANR	4214674	Symbol	r_bin_get_symbols		4211507						
ANR	4214675	Symbol	symbol		4211507						
ANR	4214676	Symbol	help_msg_db		4211507						
ANR	4214677	Symbol	r_bp_get_at		4211507						
ANR	4214678	Symbol	* arg ++		4211507						
ANR	4214679	Symbol	bpi -> perm		4211507						
ANR	4214680	Symbol	core -> num		4211507						
ANR	4214681	Symbol	* symbol		4211507						
ANR	4214682	Symbol	strcmp		4211507						
ANR	4214683	Symbol	NULL		4211507						
ANR	4214684	Symbol	bpi -> expr		4211507						
ANR	4214685	Symbol	hex_format		4211507						
ANR	4214686	Symbol	strtok		4211507						
ANR	4214687	Symbol	hwbp		4211507						
ANR	4214688	Symbol	list		4211507						
ANR	4214689	Symbol	core		4211507						
ANR	4214690	Symbol	true		4211507						
ANR	4214691	Symbol	* bpi		4211507						
ANR	4214692	Symbol	frame		4211507						
ANR	4214693	Symbol	flagdesc		4211507						
ANR	4214694	Symbol	& pcstr		4211507						
ANR	4214695	Symbol	* frame		4211507						
ANR	4214696	Symbol	string		4211507						
ANR	4214697	Symbol	symbol -> name		4211507						
ANR	4214698	Symbol	r_core_flag_get_by_spaces		4211507						
ANR	4214699	Symbol	r_str_newf		4211507						
ANR	4214700	Symbol	r_bp_use		4211507						
ANR	4214701	Symbol	symbols		4211507						
ANR	4214702	Symbol	r_num_math		4211507						
ANR	4214703	Symbol	R_BIN_TYPE_FUNC_STR		4211507						
ANR	4214704	Symbol	core -> dbg -> bp -> delta		4211507						
ANR	4214705	Symbol	bpi		4211507						
ANR	4214706	Symbol	frame -> addr		4211507						
ANR	4214707	Symbol	addr		4211507						
ANR	4214708	Symbol	UT64_MAX		4211507						
ANR	4214709	Symbol	* * core		4211507						
ANR	4214710	Symbol	core -> config		4211507						
ANR	4214711	Symbol	* DB_ARG ( i )		4211507						
ANR	4214712	Symbol	* core -> dbg -> bp		4211507						
ANR	4214713	Symbol	false		4211507						
ANR	4214714	Symbol	inp		4211507						
ANR	4214715	Symbol	* f		4211507						
ANR	4214716	Symbol	r_anal_get_fcn_in		4211507						
ANR	4214717	Symbol	bpi -> cond		4211507						
ANR	4214718	Symbol	R_BP_PROT_WRITE		4211507						
ANR	4214719	Symbol	* p		4211507						
ANR	4214720	Symbol	strdup		4211507						
ANR	4214721	Symbol	bpi -> trace		4211507						
ANR	4214722	Symbol	R_BP_PROT_READ		4211507						
ANR	4214723	Symbol	core -> dbg		4211507						
ANR	4214724	Symbol	* * core -> dbg		4211507						
ANR	4214725	Function	add_trace_tree_child	3627:0:104233:104717							
ANR	4214726	FunctionDef	"add_trace_tree_child (Sdb * db , RTree * t , RTreeNode * cur , ut64 addr)"		4214725	0					
ANR	4214727	CompoundStatement		3627:86:104319:104717	4214725	0					
ANR	4214728	IdentifierDeclStatement	struct trace_node * t_node ;	3628:1:104322:104347	4214725	0	True				
ANR	4214729	IdentifierDecl	* t_node		4214725	0					
ANR	4214730	IdentifierDeclType	struct trace_node *		4214725	0					
ANR	4214731	Identifier	t_node		4214725	1					
ANR	4214732	IdentifierDeclStatement	char dbkey [ TN_KEY_LEN ] ;	3629:1:104350:104372	4214725	1	True				
ANR	4214733	IdentifierDecl	dbkey [ TN_KEY_LEN ]		4214725	0					
ANR	4214734	IdentifierDeclType	char [ TN_KEY_LEN ]		4214725	0					
ANR	4214735	Identifier	dbkey		4214725	1					
ANR	4214736	Identifier	TN_KEY_LEN		4214725	2					
ANR	4214737	ExpressionStatement	"snprintf ( dbkey , TN_KEY_LEN , TN_KEY_FMT , addr )"	3631:1:104376:104422	4214725	2	True				
ANR	4214738	CallExpression	"snprintf ( dbkey , TN_KEY_LEN , TN_KEY_FMT , addr )"		4214725	0					
ANR	4214739	Callee	snprintf		4214725	0					
ANR	4214740	Identifier	snprintf		4214725	0					
ANR	4214741	ArgumentList	dbkey		4214725	1					
ANR	4214742	Argument	dbkey		4214725	0					
ANR	4214743	Identifier	dbkey		4214725	0					
ANR	4214744	Argument	TN_KEY_LEN		4214725	1					
ANR	4214745	Identifier	TN_KEY_LEN		4214725	0					
ANR	4214746	Argument	TN_KEY_FMT		4214725	2					
ANR	4214747	Identifier	TN_KEY_FMT		4214725	0					
ANR	4214748	Argument	addr		4214725	3					
ANR	4214749	Identifier	addr		4214725	0					
ANR	4214750	ExpressionStatement	"t_node = ( struct trace_node * ) ( size_t ) sdb_num_get ( db , dbkey , NULL )"	3632:1:104425:104492	4214725	3	True				
ANR	4214751	AssignmentExpression	"t_node = ( struct trace_node * ) ( size_t ) sdb_num_get ( db , dbkey , NULL )"		4214725	0		=			
ANR	4214752	Identifier	t_node		4214725	0					
ANR	4214753	CastExpression	"( struct trace_node * ) ( size_t ) sdb_num_get ( db , dbkey , NULL )"		4214725	1					
ANR	4214754	CastTarget	struct trace_node *		4214725	0					
ANR	4214755	CastExpression	"( size_t ) sdb_num_get ( db , dbkey , NULL )"		4214725	1					
ANR	4214756	CastTarget	size_t		4214725	0					
ANR	4214757	CallExpression	"sdb_num_get ( db , dbkey , NULL )"		4214725	1					
ANR	4214758	Callee	sdb_num_get		4214725	0					
ANR	4214759	Identifier	sdb_num_get		4214725	0					
ANR	4214760	ArgumentList	db		4214725	1					
ANR	4214761	Argument	db		4214725	0					
ANR	4214762	Identifier	db		4214725	0					
ANR	4214763	Argument	dbkey		4214725	1					
ANR	4214764	Identifier	dbkey		4214725	0					
ANR	4214765	Argument	NULL		4214725	2					
ANR	4214766	Identifier	NULL		4214725	0					
ANR	4214767	IfStatement	if ( ! t_node )		4214725	4					
ANR	4214768	Condition	! t_node	3633:5:104499:104505	4214725	0	True				
ANR	4214769	UnaryOperationExpression	! t_node		4214725	0					
ANR	4214770	UnaryOperator	!		4214725	0					
ANR	4214771	Identifier	t_node		4214725	1					
ANR	4214772	CompoundStatement		7:14:188:188	4214725	1					
ANR	4214773	Statement	t_node	3634:2:104512:104517	4214725	0	True				
ANR	4214774	Statement	=	3634:9:104519:104519	4214725	1	True				
ANR	4214775	Statement	R_NEW0	3634:11:104521:104526	4214725	2	True				
ANR	4214776	Statement	(	3634:18:104528:104528	4214725	3	True				
ANR	4214777	Statement	struct	3634:19:104529:104534	4214725	4	True				
ANR	4214778	Statement	trace_node	3634:26:104536:104545	4214725	5	True				
ANR	4214779	Statement	)	3634:36:104546:104546	4214725	6	True				
ANR	4214780	ExpressionStatement		3634:37:104547:104547	4214725	7	True				
ANR	4214781	ExpressionStatement	t_node -> addr = addr	3635:2:104551:104570	4214725	8	True				
ANR	4214782	AssignmentExpression	t_node -> addr = addr		4214725	0		=			
ANR	4214783	PtrMemberAccess	t_node -> addr		4214725	0					
ANR	4214784	Identifier	t_node		4214725	0					
ANR	4214785	Identifier	addr		4214725	1					
ANR	4214786	Identifier	addr		4214725	1					
ANR	4214787	ExpressionStatement	t_node -> refs = 1	3636:2:104574:104590	4214725	9	True				
ANR	4214788	AssignmentExpression	t_node -> refs = 1		4214725	0		=			
ANR	4214789	PtrMemberAccess	t_node -> refs		4214725	0					
ANR	4214790	Identifier	t_node		4214725	0					
ANR	4214791	Identifier	refs		4214725	1					
ANR	4214792	PrimaryExpression	1		4214725	1					
ANR	4214793	ExpressionStatement	"sdb_num_set ( db , dbkey , ( ut64 ) ( size_t ) t_node , 0 )"	3637:2:104594:104642	4214725	10	True				
ANR	4214794	CallExpression	"sdb_num_set ( db , dbkey , ( ut64 ) ( size_t ) t_node , 0 )"		4214725	0					
ANR	4214795	Callee	sdb_num_set		4214725	0					
ANR	4214796	Identifier	sdb_num_set		4214725	0					
ANR	4214797	ArgumentList	db		4214725	1					
ANR	4214798	Argument	db		4214725	0					
ANR	4214799	Identifier	db		4214725	0					
ANR	4214800	Argument	dbkey		4214725	1					
ANR	4214801	Identifier	dbkey		4214725	0					
ANR	4214802	Argument	( ut64 ) ( size_t ) t_node		4214725	2					
ANR	4214803	CastExpression	( ut64 ) ( size_t ) t_node		4214725	0					
ANR	4214804	CastTarget	ut64		4214725	0					
ANR	4214805	CastExpression	( size_t ) t_node		4214725	1					
ANR	4214806	CastTarget	size_t		4214725	0					
ANR	4214807	Identifier	t_node		4214725	1					
ANR	4214808	Argument	0		4214725	3					
ANR	4214809	PrimaryExpression	0		4214725	0					
ANR	4214810	ElseStatement	else		4214725	0					
ANR	4214811	CompoundStatement		12:8:332:332	4214725	0					
ANR	4214812	ExpressionStatement	t_node -> refs ++	3639:2:104656:104670	4214725	0	True				
ANR	4214813	PostIncDecOperationExpression	t_node -> refs ++		4214725	0					
ANR	4214814	PtrMemberAccess	t_node -> refs		4214725	0					
ANR	4214815	Identifier	t_node		4214725	0					
ANR	4214816	Identifier	refs		4214725	1					
ANR	4214817	IncDec	++		4214725	1					
ANR	4214818	ReturnStatement	"return r_tree_add_node ( t , cur , t_node ) ;"	3641:1:104676:104715	4214725	5	True				
ANR	4214819	CallExpression	"r_tree_add_node ( t , cur , t_node )"		4214725	0					
ANR	4214820	Callee	r_tree_add_node		4214725	0					
ANR	4214821	Identifier	r_tree_add_node		4214725	0					
ANR	4214822	ArgumentList	t		4214725	1					
ANR	4214823	Argument	t		4214725	0					
ANR	4214824	Identifier	t		4214725	0					
ANR	4214825	Argument	cur		4214725	1					
ANR	4214826	Identifier	cur		4214725	0					
ANR	4214827	Argument	t_node		4214725	2					
ANR	4214828	Identifier	t_node		4214725	0					
ANR	4214829	ReturnType	static RTreeNode *		4214725	1					
ANR	4214830	Identifier	add_trace_tree_child		4214725	2					
ANR	4214831	ParameterList	"Sdb * db , RTree * t , RTreeNode * cur , ut64 addr"		4214725	3					
ANR	4214832	Parameter	Sdb * db	3627:40:104273:104279	4214725	0	True				
ANR	4214833	ParameterType	Sdb *		4214725	0					
ANR	4214834	Identifier	db		4214725	1					
ANR	4214835	Parameter	RTree * t	3627:49:104282:104289	4214725	1	True				
ANR	4214836	ParameterType	RTree *		4214725	0					
ANR	4214837	Identifier	t		4214725	1					
ANR	4214838	Parameter	RTreeNode * cur	3627:59:104292:104305	4214725	2	True				
ANR	4214839	ParameterType	RTreeNode *		4214725	0					
ANR	4214840	Identifier	cur		4214725	1					
ANR	4214841	Parameter	ut64 addr	3627:75:104308:104316	4214725	3	True				
ANR	4214842	ParameterType	ut64		4214725	0					
ANR	4214843	Identifier	addr		4214725	1					
ANR	4214844	CFGEntryNode	ENTRY		4214725		True				
ANR	4214845	CFGExitNode	EXIT		4214725		True				
ANR	4214846	Symbol	sdb_num_get		4214725						
ANR	4214847	Symbol	cur		4214725						
ANR	4214848	Symbol	NULL		4214725						
ANR	4214849	Symbol	t_node -> addr		4214725						
ANR	4214850	Symbol	t_node -> refs		4214725						
ANR	4214851	Symbol	t_node		4214725						
ANR	4214852	Symbol	dbkey		4214725						
ANR	4214853	Symbol	TN_KEY_FMT		4214725						
ANR	4214854	Symbol	t		4214725						
ANR	4214855	Symbol	TN_KEY_LEN		4214725						
ANR	4214856	Symbol	* t_node		4214725						
ANR	4214857	Symbol	addr		4214725						
ANR	4214858	Symbol	db		4214725						
ANR	4214859	Symbol	r_tree_add_node		4214725						
ANR	4214860	DeclStmt									
ANR	4214861	Decl							RCore	RCore *	_core
ANR	4214862	Function	trace_traverse_pre	3646:0:104749:105163							
ANR	4214863	FunctionDef	"trace_traverse_pre (RTreeNode * n , RTreeVisitor * vis)"		4214862	0					
ANR	4214864	CompoundStatement		3646:65:104814:105163	4214862	0					
ANR	4214865	IdentifierDeclStatement	"const char * name = """" ;"	3647:1:104817:104838	4214862	0	True				
ANR	4214866	IdentifierDecl	"* name = """""		4214862	0					
ANR	4214867	IdentifierDeclType	const char *		4214862	0					
ANR	4214868	Identifier	name		4214862	1					
ANR	4214869	AssignmentExpression	"* name = """""		4214862	2		=			
ANR	4214870	Identifier	name		4214862	0					
ANR	4214871	PrimaryExpression	""""""		4214862	1					
ANR	4214872	IdentifierDeclStatement	struct trace_node * tn = n -> data ;	3648:1:104841:104872	4214862	1	True				
ANR	4214873	IdentifierDecl	* tn = n -> data		4214862	0					
ANR	4214874	IdentifierDeclType	struct trace_node *		4214862	0					
ANR	4214875	Identifier	tn		4214862	1					
ANR	4214876	AssignmentExpression	* tn = n -> data		4214862	2		=			
ANR	4214877	Identifier	tn		4214862	0					
ANR	4214878	PtrMemberAccess	n -> data		4214862	1					
ANR	4214879	Identifier	n		4214862	0					
ANR	4214880	Identifier	data		4214862	1					
ANR	4214881	IdentifierDeclStatement	unsigned int i ;	3649:1:104875:104889	4214862	2	True				
ANR	4214882	IdentifierDecl	i		4214862	0					
ANR	4214883	IdentifierDeclType	unsigned int		4214862	0					
ANR	4214884	Identifier	i		4214862	1					
ANR	4214885	IfStatement	if ( ! tn )		4214862	3					
ANR	4214886	Condition	! tn	3650:5:104896:104898	4214862	0	True				
ANR	4214887	UnaryOperationExpression	! tn		4214862	0					
ANR	4214888	UnaryOperator	!		4214862	0					
ANR	4214889	Identifier	tn		4214862	1					
ANR	4214890	ReturnStatement	return ;	3650:10:104901:104907	4214862	1	True				
ANR	4214891	ForStatement	for ( i = 0 ; i < n -> depth - 1 ; i ++ )		4214862	4					
ANR	4214892	ForInit	i = 0 ;	3651:6:104915:104920	4214862	0	True				
ANR	4214893	AssignmentExpression	i = 0		4214862	0		=			
ANR	4214894	Identifier	i		4214862	0					
ANR	4214895	PrimaryExpression	0		4214862	1					
ANR	4214896	Condition	i < n -> depth - 1	3651:13:104922:104937	4214862	1	True				
ANR	4214897	RelationalExpression	i < n -> depth - 1		4214862	0		<			
ANR	4214898	Identifier	i		4214862	0					
ANR	4214899	AdditiveExpression	n -> depth - 1		4214862	1		-			
ANR	4214900	PtrMemberAccess	n -> depth		4214862	0					
ANR	4214901	Identifier	n		4214862	0					
ANR	4214902	Identifier	depth		4214862	1					
ANR	4214903	PrimaryExpression	1		4214862	1					
ANR	4214904	PostIncDecOperationExpression	i ++	3651:31:104940:104942	4214862	2	True				
ANR	4214905	Identifier	i		4214862	0					
ANR	4214906	IncDec	++		4214862	1					
ANR	4214907	CompoundStatement		6:36:130:130	4214862	3					
ANR	4214908	ExpressionStatement	"r_cons_printf ( ""  "" )"	3652:2:104949:104969	4214862	0	True				
ANR	4214909	CallExpression	"r_cons_printf ( ""  "" )"		4214862	0					
ANR	4214910	Callee	r_cons_printf		4214862	0					
ANR	4214911	Identifier	r_cons_printf		4214862	0					
ANR	4214912	ArgumentList	"""  """		4214862	1					
ANR	4214913	Argument	"""  """		4214862	0					
ANR	4214914	PrimaryExpression	"""  """		4214862	0					
ANR	4214915	IfStatement	if ( _core )		4214862	5					
ANR	4214916	Condition	_core	3654:5:104979:104983	4214862	0	True				
ANR	4214917	Identifier	_core		4214862	0					
ANR	4214918	CompoundStatement		10:2:175:234	4214862	1					
ANR	4214919	IdentifierDeclStatement	"RFlagItem * f = r_flag_get_at ( _core -> flags , tn -> addr , true ) ;"	3655:2:104990:105049	4214862	0	True				
ANR	4214920	IdentifierDecl	"* f = r_flag_get_at ( _core -> flags , tn -> addr , true )"		4214862	0					
ANR	4214921	IdentifierDeclType	RFlagItem *		4214862	0					
ANR	4214922	Identifier	f		4214862	1					
ANR	4214923	AssignmentExpression	"* f = r_flag_get_at ( _core -> flags , tn -> addr , true )"		4214862	2		=			
ANR	4214924	Identifier	f		4214862	0					
ANR	4214925	CallExpression	"r_flag_get_at ( _core -> flags , tn -> addr , true )"		4214862	1					
ANR	4214926	Callee	r_flag_get_at		4214862	0					
ANR	4214927	Identifier	r_flag_get_at		4214862	0					
ANR	4214928	ArgumentList	_core -> flags		4214862	1					
ANR	4214929	Argument	_core -> flags		4214862	0					
ANR	4214930	PtrMemberAccess	_core -> flags		4214862	0					
ANR	4214931	Identifier	_core		4214862	0					
ANR	4214932	Identifier	flags		4214862	1					
ANR	4214933	Argument	tn -> addr		4214862	1					
ANR	4214934	PtrMemberAccess	tn -> addr		4214862	0					
ANR	4214935	Identifier	tn		4214862	0					
ANR	4214936	Identifier	addr		4214862	1					
ANR	4214937	Argument	true		4214862	2					
ANR	4214938	Identifier	true		4214862	0					
ANR	4214939	IfStatement	if ( f )		4214862	1					
ANR	4214940	Condition	f	3656:6:105057:105057	4214862	0	True				
ANR	4214941	Identifier	f		4214862	0					
ANR	4214942	CompoundStatement		11:9:245:245	4214862	1					
ANR	4214943	ExpressionStatement	name = f -> name	3657:3:105065:105079	4214862	0	True				
ANR	4214944	AssignmentExpression	name = f -> name		4214862	0		=			
ANR	4214945	Identifier	name		4214862	0					
ANR	4214946	PtrMemberAccess	f -> name		4214862	1					
ANR	4214947	Identifier	f		4214862	0					
ANR	4214948	Identifier	name		4214862	1					
ANR	4214949	Statement	r_cons_printf	3660:1:105089:105101	4214862	6	True				
ANR	4214950	Statement	(	3660:15:105103:105103	4214862	7	True				
ANR	4214951	Statement	""" 0x%08"""	3660:16:105104:105111	4214862	8	True				
ANR	4214952	Statement	PFMT64x	3660:24:105112:105118	4214862	9	True				
ANR	4214953	Statement	""" refs %d %s\\n"""	3660:31:105119:105133	4214862	10	True				
ANR	4214954	Statement	","	3660:46:105134:105134	4214862	11	True				
ANR	4214955	Statement	tn	3660:48:105136:105137	4214862	12	True				
ANR	4214956	Statement	->	3660:50:105138:105139	4214862	13	True				
ANR	4214957	Statement	addr	3660:52:105140:105143	4214862	14	True				
ANR	4214958	Statement	","	3660:56:105144:105144	4214862	15	True				
ANR	4214959	Statement	tn	3660:58:105146:105147	4214862	16	True				
ANR	4214960	Statement	->	3660:60:105148:105149	4214862	17	True				
ANR	4214961	Statement	refs	3660:62:105150:105153	4214862	18	True				
ANR	4214962	Statement	","	3660:66:105154:105154	4214862	19	True				
ANR	4214963	Statement	name	3660:68:105156:105159	4214862	20	True				
ANR	4214964	Statement	)	3660:72:105160:105160	4214862	21	True				
ANR	4214965	ExpressionStatement		3660:73:105161:105161	4214862	22	True				
ANR	4214966	ReturnType	static void		4214862	1					
ANR	4214967	Identifier	trace_traverse_pre		4214862	2					
ANR	4214968	ParameterList	"RTreeNode * n , RTreeVisitor * vis"		4214862	3					
ANR	4214969	Parameter	RTreeNode * n	3646:32:104781:104792	4214862	0	True				
ANR	4214970	ParameterType	RTreeNode *		4214862	0					
ANR	4214971	Identifier	n		4214862	1					
ANR	4214972	Parameter	RTreeVisitor * vis	3646:46:104795:104811	4214862	1	True				
ANR	4214973	ParameterType	RTreeVisitor *		4214862	0					
ANR	4214974	Identifier	vis		4214862	1					
ANR	4214975	CFGEntryNode	ENTRY		4214862		True				
ANR	4214976	CFGExitNode	EXIT		4214862		True				
ANR	4214977	Symbol	vis		4214862						
ANR	4214978	Symbol	* _core		4214862						
ANR	4214979	Symbol	n -> data		4214862						
ANR	4214980	Symbol	* tn		4214862						
ANR	4214981	Symbol	f -> name		4214862						
ANR	4214982	Symbol	f		4214862						
ANR	4214983	Symbol	i		4214862						
ANR	4214984	Symbol	n		4214862						
ANR	4214985	Symbol	* f		4214862						
ANR	4214986	Symbol	tn -> addr		4214862						
ANR	4214987	Symbol	_core		4214862						
ANR	4214988	Symbol	name		4214862						
ANR	4214989	Symbol	* n		4214862						
ANR	4214990	Symbol	true		4214862						
ANR	4214991	Symbol	n -> depth		4214862						
ANR	4214992	Symbol	tn		4214862						
ANR	4214993	Symbol	_core -> flags		4214862						
ANR	4214994	Symbol	r_flag_get_at		4214862						
ANR	4214995	Function	trace_traverse	3663:0:105166:105430							
ANR	4214996	FunctionDef	trace_traverse (RTree * t)		4214995	0					
ANR	4214997	CompoundStatement		3663:38:105204:105430	4214995	0					
ANR	4214998	IdentifierDeclStatement	RTreeVisitor vis = { 0 } ;	3664:1:105207:105231	4214995	0	True				
ANR	4214999	IdentifierDecl	vis = { 0 }		4214995	0					
ANR	4215000	IdentifierDeclType	RTreeVisitor		4214995	0					
ANR	4215001	Identifier	vis		4214995	1					
ANR	4215002	AssignmentExpression	vis = { 0 }		4214995	2		=			
ANR	4215003	Identifier	vis		4214995	0					
ANR	4215004	InitializerList	0		4214995	1					
ANR	4215005	PrimaryExpression	0		4214995	0					
ANR	4215006	ExpressionStatement	"fprintf ( stderr , ""\\x1b[2K\\r"" )"	3667:1:105303:105332	4214995	1	True				
ANR	4215007	CallExpression	"fprintf ( stderr , ""\\x1b[2K\\r"" )"		4214995	0					
ANR	4215008	Callee	fprintf		4214995	0					
ANR	4215009	Identifier	fprintf		4214995	0					
ANR	4215010	ArgumentList	stderr		4214995	1					
ANR	4215011	Argument	stderr		4214995	0					
ANR	4215012	Identifier	stderr		4214995	0					
ANR	4215013	Argument	"""\\x1b[2K\\r"""		4214995	1					
ANR	4215014	PrimaryExpression	"""\\x1b[2K\\r"""		4214995	0					
ANR	4215015	ExpressionStatement	fflush ( stderr )	3668:1:105335:105350	4214995	2	True				
ANR	4215016	CallExpression	fflush ( stderr )		4214995	0					
ANR	4215017	Callee	fflush		4214995	0					
ANR	4215018	Identifier	fflush		4214995	0					
ANR	4215019	ArgumentList	stderr		4214995	1					
ANR	4215020	Argument	stderr		4214995	0					
ANR	4215021	Identifier	stderr		4214995	0					
ANR	4215022	ExpressionStatement	vis . pre_visit = ( RTreeNodeVisitCb ) trace_traverse_pre	3669:1:105353:105405	4214995	3	True				
ANR	4215023	AssignmentExpression	vis . pre_visit = ( RTreeNodeVisitCb ) trace_traverse_pre		4214995	0		=			
ANR	4215024	MemberAccess	vis . pre_visit		4214995	0					
ANR	4215025	Identifier	vis		4214995	0					
ANR	4215026	Identifier	pre_visit		4214995	1					
ANR	4215027	CastExpression	( RTreeNodeVisitCb ) trace_traverse_pre		4214995	1					
ANR	4215028	CastTarget	RTreeNodeVisitCb		4214995	0					
ANR	4215029	Identifier	trace_traverse_pre		4214995	1					
ANR	4215030	ExpressionStatement	"r_tree_dfs ( t , & vis )"	3670:1:105408:105428	4214995	4	True				
ANR	4215031	CallExpression	"r_tree_dfs ( t , & vis )"		4214995	0					
ANR	4215032	Callee	r_tree_dfs		4214995	0					
ANR	4215033	Identifier	r_tree_dfs		4214995	0					
ANR	4215034	ArgumentList	t		4214995	1					
ANR	4215035	Argument	t		4214995	0					
ANR	4215036	Identifier	t		4214995	0					
ANR	4215037	Argument	& vis		4214995	1					
ANR	4215038	UnaryOperationExpression	& vis		4214995	0					
ANR	4215039	UnaryOperator	&		4214995	0					
ANR	4215040	Identifier	vis		4214995	1					
ANR	4215041	ReturnType	static void		4214995	1					
ANR	4215042	Identifier	trace_traverse		4214995	2					
ANR	4215043	ParameterList	RTree * t		4214995	3					
ANR	4215044	Parameter	RTree * t	3663:28:105194:105201	4214995	0	True				
ANR	4215045	ParameterType	RTree *		4214995	0					
ANR	4215046	Identifier	t		4214995	1					
ANR	4215047	CFGEntryNode	ENTRY		4214995		True				
ANR	4215048	CFGExitNode	EXIT		4214995		True				
ANR	4215049	Symbol	vis		4214995						
ANR	4215050	Symbol	& vis		4214995						
ANR	4215051	Symbol	t		4214995						
ANR	4215052	Symbol	vis . pre_visit		4214995						
ANR	4215053	Symbol	trace_traverse_pre		4214995						
ANR	4215054	Symbol	stderr		4214995						
ANR	4215055	Function	do_debug_trace_calls	3673:0:105433:108546							
ANR	4215056	FunctionDef	"do_debug_trace_calls (RCore * core , ut64 from , ut64 to , ut64 final_addr)"		4215055	0					
ANR	4215057	CompoundStatement		3673:83:105516:108546	4215055	0					
ANR	4215058	IdentifierDeclStatement	"bool trace_libs = r_config_get_i ( core -> config , ""dbg.trace.libs"" ) ;"	3674:1:105519:105584	4215055	0	True				
ANR	4215059	IdentifierDecl	"trace_libs = r_config_get_i ( core -> config , ""dbg.trace.libs"" )"		4215055	0					
ANR	4215060	IdentifierDeclType	bool		4215055	0					
ANR	4215061	Identifier	trace_libs		4215055	1					
ANR	4215062	AssignmentExpression	"trace_libs = r_config_get_i ( core -> config , ""dbg.trace.libs"" )"		4215055	2		=			
ANR	4215063	Identifier	trace_libs		4215055	0					
ANR	4215064	CallExpression	"r_config_get_i ( core -> config , ""dbg.trace.libs"" )"		4215055	1					
ANR	4215065	Callee	r_config_get_i		4215055	0					
ANR	4215066	Identifier	r_config_get_i		4215055	0					
ANR	4215067	ArgumentList	core -> config		4215055	1					
ANR	4215068	Argument	core -> config		4215055	0					
ANR	4215069	PtrMemberAccess	core -> config		4215055	0					
ANR	4215070	Identifier	core		4215055	0					
ANR	4215071	Identifier	config		4215055	1					
ANR	4215072	Argument	"""dbg.trace.libs"""		4215055	1					
ANR	4215073	PrimaryExpression	"""dbg.trace.libs"""		4215055	0					
ANR	4215074	IdentifierDeclStatement	"bool shallow_trace = r_config_get_i ( core -> config , ""dbg.trace.inrange"" ) ;"	3675:1:105587:105658	4215055	1	True				
ANR	4215075	IdentifierDecl	"shallow_trace = r_config_get_i ( core -> config , ""dbg.trace.inrange"" )"		4215055	0					
ANR	4215076	IdentifierDeclType	bool		4215055	0					
ANR	4215077	Identifier	shallow_trace		4215055	1					
ANR	4215078	AssignmentExpression	"shallow_trace = r_config_get_i ( core -> config , ""dbg.trace.inrange"" )"		4215055	2		=			
ANR	4215079	Identifier	shallow_trace		4215055	0					
ANR	4215080	CallExpression	"r_config_get_i ( core -> config , ""dbg.trace.inrange"" )"		4215055	1					
ANR	4215081	Callee	r_config_get_i		4215055	0					
ANR	4215082	Identifier	r_config_get_i		4215055	0					
ANR	4215083	ArgumentList	core -> config		4215055	1					
ANR	4215084	Argument	core -> config		4215055	0					
ANR	4215085	PtrMemberAccess	core -> config		4215055	0					
ANR	4215086	Identifier	core		4215055	0					
ANR	4215087	Identifier	config		4215055	1					
ANR	4215088	Argument	"""dbg.trace.inrange"""		4215055	1					
ANR	4215089	PrimaryExpression	"""dbg.trace.inrange"""		4215055	0					
ANR	4215090	IdentifierDeclStatement	Sdb * tracenodes = core -> dbg -> tracenodes ;	3676:1:105661:105700	4215055	2	True				
ANR	4215091	IdentifierDecl	* tracenodes = core -> dbg -> tracenodes		4215055	0					
ANR	4215092	IdentifierDeclType	Sdb *		4215055	0					
ANR	4215093	Identifier	tracenodes		4215055	1					
ANR	4215094	AssignmentExpression	* tracenodes = core -> dbg -> tracenodes		4215055	2		=			
ANR	4215095	Identifier	tracenodes		4215055	0					
ANR	4215096	PtrMemberAccess	core -> dbg -> tracenodes		4215055	1					
ANR	4215097	PtrMemberAccess	core -> dbg		4215055	0					
ANR	4215098	Identifier	core		4215055	0					
ANR	4215099	Identifier	dbg		4215055	1					
ANR	4215100	Identifier	tracenodes		4215055	1					
ANR	4215101	IdentifierDeclStatement	RTree * tr = core -> dbg -> tree ;	3677:1:105703:105730	4215055	3	True				
ANR	4215102	IdentifierDecl	* tr = core -> dbg -> tree		4215055	0					
ANR	4215103	IdentifierDeclType	RTree *		4215055	0					
ANR	4215104	Identifier	tr		4215055	1					
ANR	4215105	AssignmentExpression	* tr = core -> dbg -> tree		4215055	2		=			
ANR	4215106	Identifier	tr		4215055	0					
ANR	4215107	PtrMemberAccess	core -> dbg -> tree		4215055	1					
ANR	4215108	PtrMemberAccess	core -> dbg		4215055	0					
ANR	4215109	Identifier	core		4215055	0					
ANR	4215110	Identifier	dbg		4215055	1					
ANR	4215111	Identifier	tree		4215055	1					
ANR	4215112	IdentifierDeclStatement	RDebug * dbg = core -> dbg ;	3678:1:105733:105756	4215055	4	True				
ANR	4215113	IdentifierDecl	* dbg = core -> dbg		4215055	0					
ANR	4215114	IdentifierDeclType	RDebug *		4215055	0					
ANR	4215115	Identifier	dbg		4215055	1					
ANR	4215116	AssignmentExpression	* dbg = core -> dbg		4215055	2		=			
ANR	4215117	Identifier	dbg		4215055	0					
ANR	4215118	PtrMemberAccess	core -> dbg		4215055	1					
ANR	4215119	Identifier	core		4215055	0					
ANR	4215120	Identifier	dbg		4215055	1					
ANR	4215121	IdentifierDeclStatement	ut64 debug_to = UT64_MAX ;	3679:1:105759:105783	4215055	5	True				
ANR	4215122	IdentifierDecl	debug_to = UT64_MAX		4215055	0					
ANR	4215123	IdentifierDeclType	ut64		4215055	0					
ANR	4215124	Identifier	debug_to		4215055	1					
ANR	4215125	AssignmentExpression	debug_to = UT64_MAX		4215055	2		=			
ANR	4215126	Identifier	UT64_MAX		4215055	0					
ANR	4215127	Identifier	UT64_MAX		4215055	1					
ANR	4215128	IdentifierDeclStatement	RTreeNode * cur ;	3680:1:105786:105800	4215055	6	True				
ANR	4215129	IdentifierDecl	* cur		4215055	0					
ANR	4215130	IdentifierDeclType	RTreeNode *		4215055	0					
ANR	4215131	Identifier	cur		4215055	1					
ANR	4215132	IdentifierDeclStatement	ut64 addr = 0 ;	3681:1:105803:105816	4215055	7	True				
ANR	4215133	IdentifierDecl	addr = 0		4215055	0					
ANR	4215134	IdentifierDeclType	ut64		4215055	0					
ANR	4215135	Identifier	addr		4215055	1					
ANR	4215136	AssignmentExpression	addr = 0		4215055	2		=			
ANR	4215137	Identifier	addr		4215055	0					
ANR	4215138	PrimaryExpression	0		4215055	1					
ANR	4215139	IdentifierDeclStatement	int n = 0 ;	3682:1:105819:105828	4215055	8	True				
ANR	4215140	IdentifierDecl	n = 0		4215055	0					
ANR	4215141	IdentifierDeclType	int		4215055	0					
ANR	4215142	Identifier	n		4215055	1					
ANR	4215143	AssignmentExpression	n = 0		4215055	2		=			
ANR	4215144	Identifier	n		4215055	0					
ANR	4215145	PrimaryExpression	0		4215055	1					
ANR	4215146	IfStatement	if ( ! trace_libs )		4215055	9					
ANR	4215147	Condition	! trace_libs	3684:5:105836:105846	4215055	0	True				
ANR	4215148	UnaryOperationExpression	! trace_libs		4215055	0					
ANR	4215149	UnaryOperator	!		4215055	0					
ANR	4215150	Identifier	trace_libs		4215055	1					
ANR	4215151	CompoundStatement		14:2:345:423	4215055	1					
ANR	4215152	IdentifierDeclStatement	"RList * bounds = r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" ) ;"	3686:2:105862:105940	4215055	0	True				
ANR	4215153	IdentifierDecl	"* bounds = r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" )"		4215055	0					
ANR	4215154	IdentifierDeclType	RList *		4215055	0					
ANR	4215155	Identifier	bounds		4215055	1					
ANR	4215156	AssignmentExpression	"* bounds = r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" )"		4215055	2		=			
ANR	4215157	Identifier	bounds		4215055	0					
ANR	4215158	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , ""dbg.program"" , ""search"" )"		4215055	1					
ANR	4215159	Callee	r_core_get_boundaries_prot		4215055	0					
ANR	4215160	Identifier	r_core_get_boundaries_prot		4215055	0					
ANR	4215161	ArgumentList	core		4215055	1					
ANR	4215162	Argument	core		4215055	0					
ANR	4215163	Identifier	core		4215055	0					
ANR	4215164	Argument	- 1		4215055	1					
ANR	4215165	UnaryOperationExpression	- 1		4215055	0					
ANR	4215166	UnaryOperator	-		4215055	0					
ANR	4215167	PrimaryExpression	1		4215055	1					
ANR	4215168	Argument	"""dbg.program"""		4215055	2					
ANR	4215169	PrimaryExpression	"""dbg.program"""		4215055	0					
ANR	4215170	Argument	"""search"""		4215055	3					
ANR	4215171	PrimaryExpression	"""search"""		4215055	0					
ANR	4215172	ExpressionStatement	r_list_free ( bounds )	3687:2:105944:105964	4215055	1	True				
ANR	4215173	CallExpression	r_list_free ( bounds )		4215055	0					
ANR	4215174	Callee	r_list_free		4215055	0					
ANR	4215175	Identifier	r_list_free		4215055	0					
ANR	4215176	ArgumentList	bounds		4215055	1					
ANR	4215177	Argument	bounds		4215055	0					
ANR	4215178	Identifier	bounds		4215055	0					
ANR	4215179	ExpressionStatement	"r_tree_add_node ( tr , NULL , NULL )"	3692:1:106017:106049	4215055	10	True				
ANR	4215180	CallExpression	"r_tree_add_node ( tr , NULL , NULL )"		4215055	0					
ANR	4215181	Callee	r_tree_add_node		4215055	0					
ANR	4215182	Identifier	r_tree_add_node		4215055	0					
ANR	4215183	ArgumentList	tr		4215055	1					
ANR	4215184	Argument	tr		4215055	0					
ANR	4215185	Identifier	tr		4215055	0					
ANR	4215186	Argument	NULL		4215055	1					
ANR	4215187	Identifier	NULL		4215055	0					
ANR	4215188	Argument	NULL		4215055	2					
ANR	4215189	Identifier	NULL		4215055	0					
ANR	4215190	ExpressionStatement	cur = tr -> root	3693:1:106052:106066	4215055	11	True				
ANR	4215191	AssignmentExpression	cur = tr -> root		4215055	0		=			
ANR	4215192	Identifier	cur		4215055	0					
ANR	4215193	PtrMemberAccess	tr -> root		4215055	1					
ANR	4215194	Identifier	tr		4215055	0					
ANR	4215195	Identifier	root		4215055	1					
ANR	4215196	WhileStatement	while ( true )		4215055	12					
ANR	4215197	Condition	true	3695:8:106077:106080	4215055	0	True				
ANR	4215198	Identifier	true		4215055	0					
ANR	4215199	CompoundStatement		26:2:600:617	4215055	1					
ANR	4215200	IdentifierDeclStatement	ut8 buf [ 32 ] ;	3696:2:106087:106098	4215055	0	True				
ANR	4215201	IdentifierDecl	buf [ 32 ]		4215055	0					
ANR	4215202	IdentifierDeclType	ut8 [ 32 ]		4215055	0					
ANR	4215203	Identifier	buf		4215055	1					
ANR	4215204	PrimaryExpression	32		4215055	2					
ANR	4215205	IdentifierDeclStatement	RAnalOp aop ;	3697:2:106102:106113	4215055	1	True				
ANR	4215206	IdentifierDecl	aop		4215055	0					
ANR	4215207	IdentifierDeclType	RAnalOp		4215055	0					
ANR	4215208	Identifier	aop		4215055	1					
ANR	4215209	IdentifierDeclStatement	int addr_in_range ;	3698:2:106117:106134	4215055	2	True				
ANR	4215210	IdentifierDecl	addr_in_range		4215055	0					
ANR	4215211	IdentifierDeclType	int		4215055	0					
ANR	4215212	Identifier	addr_in_range		4215055	1					
ANR	4215213	IfStatement	if ( r_cons_is_breaked ( ) )		4215055	3					
ANR	4215214	Condition	r_cons_is_breaked ( )	3700:6:106143:106161	4215055	0	True				
ANR	4215215	CallExpression	r_cons_is_breaked ( )		4215055	0					
ANR	4215216	Callee	r_cons_is_breaked		4215055	0					
ANR	4215217	Identifier	r_cons_is_breaked		4215055	0					
ANR	4215218	ArgumentList			4215055	1					
ANR	4215219	CompoundStatement		28:27:647:647	4215055	1					
ANR	4215220	BreakStatement	break ;	3701:3:106169:106174	4215055	0	True				
ANR	4215221	IfStatement	if ( r_debug_is_dead ( dbg ) )		4215055	4					
ANR	4215222	Condition	r_debug_is_dead ( dbg )	3703:6:106186:106206	4215055	0	True				
ANR	4215223	CallExpression	r_debug_is_dead ( dbg )		4215055	0					
ANR	4215224	Callee	r_debug_is_dead		4215055	0					
ANR	4215225	Identifier	r_debug_is_dead		4215055	0					
ANR	4215226	ArgumentList	dbg		4215055	1					
ANR	4215227	Argument	dbg		4215055	0					
ANR	4215228	Identifier	dbg		4215055	0					
ANR	4215229	CompoundStatement		31:29:692:692	4215055	1					
ANR	4215230	BreakStatement	break ;	3704:3:106214:106219	4215055	0	True				
ANR	4215231	IfStatement	"if ( debug_to != UT64_MAX && ! r_debug_continue_until ( dbg , debug_to ) )"		4215055	5					
ANR	4215232	Condition	"debug_to != UT64_MAX && ! r_debug_continue_until ( dbg , debug_to )"	3706:6:106231:106293	4215055	0	True				
ANR	4215233	AndExpression	"debug_to != UT64_MAX && ! r_debug_continue_until ( dbg , debug_to )"		4215055	0		&&			
ANR	4215234	EqualityExpression	debug_to != UT64_MAX		4215055	0		!=			
ANR	4215235	Identifier	debug_to		4215055	0					
ANR	4215236	Identifier	UT64_MAX		4215055	1					
ANR	4215237	UnaryOperationExpression	"! r_debug_continue_until ( dbg , debug_to )"		4215055	1					
ANR	4215238	UnaryOperator	!		4215055	0					
ANR	4215239	CallExpression	"r_debug_continue_until ( dbg , debug_to )"		4215055	1					
ANR	4215240	Callee	r_debug_continue_until		4215055	0					
ANR	4215241	Identifier	r_debug_continue_until		4215055	0					
ANR	4215242	ArgumentList	dbg		4215055	1					
ANR	4215243	Argument	dbg		4215055	0					
ANR	4215244	Identifier	dbg		4215055	0					
ANR	4215245	Argument	debug_to		4215055	1					
ANR	4215246	Identifier	debug_to		4215055	0					
ANR	4215247	CompoundStatement		34:71:779:779	4215055	1					
ANR	4215248	BreakStatement	break ;	3707:3:106301:106306	4215055	0	True				
ANR	4215249	IfStatement	"if ( ! r_debug_step ( dbg , 1 ) )"		4215055	6					
ANR	4215250	Condition	"! r_debug_step ( dbg , 1 )"	3709:6:106318:106339	4215055	0	True				
ANR	4215251	UnaryOperationExpression	"! r_debug_step ( dbg , 1 )"		4215055	0					
ANR	4215252	UnaryOperator	!		4215055	0					
ANR	4215253	CallExpression	"r_debug_step ( dbg , 1 )"		4215055	1					
ANR	4215254	Callee	r_debug_step		4215055	0					
ANR	4215255	Identifier	r_debug_step		4215055	0					
ANR	4215256	ArgumentList	dbg		4215055	1					
ANR	4215257	Argument	dbg		4215055	0					
ANR	4215258	Identifier	dbg		4215055	0					
ANR	4215259	Argument	1		4215055	1					
ANR	4215260	PrimaryExpression	1		4215055	0					
ANR	4215261	CompoundStatement		37:30:825:825	4215055	1					
ANR	4215262	BreakStatement	break ;	3710:3:106347:106352	4215055	0	True				
ANR	4215263	ExpressionStatement	debug_to = UT64_MAX	3712:2:106360:106379	4215055	7	True				
ANR	4215264	AssignmentExpression	debug_to = UT64_MAX		4215055	0		=			
ANR	4215265	Identifier	debug_to		4215055	0					
ANR	4215266	Identifier	UT64_MAX		4215055	1					
ANR	4215267	IfStatement	"if ( ! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false ) )"		4215055	8					
ANR	4215268	Condition	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	3713:6:106387:106432	4215055	0	True				
ANR	4215269	UnaryOperationExpression	"! r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		4215055	0					
ANR	4215270	UnaryOperator	!		4215055	0					
ANR	4215271	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		4215055	1					
ANR	4215272	Callee	r_debug_reg_sync		4215055	0					
ANR	4215273	Identifier	r_debug_reg_sync		4215055	0					
ANR	4215274	ArgumentList	dbg		4215055	1					
ANR	4215275	Argument	dbg		4215055	0					
ANR	4215276	Identifier	dbg		4215055	0					
ANR	4215277	Argument	R_REG_TYPE_GPR		4215055	1					
ANR	4215278	Identifier	R_REG_TYPE_GPR		4215055	0					
ANR	4215279	Argument	false		4215055	2					
ANR	4215280	Identifier	false		4215055	0					
ANR	4215281	CompoundStatement		41:54:918:918	4215055	1					
ANR	4215282	BreakStatement	break ;	3714:3:106440:106445	4215055	0	True				
ANR	4215283	ExpressionStatement	"addr = r_debug_reg_get ( dbg , ""PC"" )"	3716:2:106453:106487	4215055	9	True				
ANR	4215284	AssignmentExpression	"addr = r_debug_reg_get ( dbg , ""PC"" )"		4215055	0		=			
ANR	4215285	Identifier	addr		4215055	0					
ANR	4215286	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		4215055	1					
ANR	4215287	Callee	r_debug_reg_get		4215055	0					
ANR	4215288	Identifier	r_debug_reg_get		4215055	0					
ANR	4215289	ArgumentList	dbg		4215055	1					
ANR	4215290	Argument	dbg		4215055	0					
ANR	4215291	Identifier	dbg		4215055	0					
ANR	4215292	Argument	"""PC"""		4215055	1					
ANR	4215293	PrimaryExpression	"""PC"""		4215055	0					
ANR	4215294	IfStatement	if ( addr == final_addr )		4215055	10					
ANR	4215295	Condition	addr == final_addr	3717:6:106495:106512	4215055	0	True				
ANR	4215296	EqualityExpression	addr == final_addr		4215055	0		==			
ANR	4215297	Identifier	addr		4215055	0					
ANR	4215298	Identifier	final_addr		4215055	1					
ANR	4215299	CompoundStatement		45:26:998:998	4215055	1					
ANR	4215300	BreakStatement	break ;	3719:3:106567:106572	4215055	0	True				
ANR	4215301	ExpressionStatement	addr_in_range = addr >= from && addr < to	3721:2:106580:106621	4215055	11	True				
ANR	4215302	AssignmentExpression	addr_in_range = addr >= from && addr < to		4215055	0		=			
ANR	4215303	Identifier	addr_in_range		4215055	0					
ANR	4215304	AndExpression	addr >= from && addr < to		4215055	1		&&			
ANR	4215305	RelationalExpression	addr >= from		4215055	0		>=			
ANR	4215306	Identifier	addr		4215055	0					
ANR	4215307	Identifier	from		4215055	1					
ANR	4215308	RelationalExpression	addr < to		4215055	1		<			
ANR	4215309	Identifier	addr		4215055	0					
ANR	4215310	Identifier	to		4215055	1					
ANR	4215311	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	3723:2:106626:106674	4215055	12	True				
ANR	4215312	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		4215055	0					
ANR	4215313	Callee	r_io_read_at		4215055	0					
ANR	4215314	Identifier	r_io_read_at		4215055	0					
ANR	4215315	ArgumentList	core -> io		4215055	1					
ANR	4215316	Argument	core -> io		4215055	0					
ANR	4215317	PtrMemberAccess	core -> io		4215055	0					
ANR	4215318	Identifier	core		4215055	0					
ANR	4215319	Identifier	io		4215055	1					
ANR	4215320	Argument	addr		4215055	1					
ANR	4215321	Identifier	addr		4215055	0					
ANR	4215322	Argument	buf		4215055	2					
ANR	4215323	Identifier	buf		4215055	0					
ANR	4215324	Argument	sizeof ( buf )		4215055	3					
ANR	4215325	SizeofExpression	sizeof ( buf )		4215055	0					
ANR	4215326	Sizeof	sizeof		4215055	0					
ANR	4215327	SizeofOperand	buf		4215055	1					
ANR	4215328	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	3724:2:106678:106753	4215055	13	True				
ANR	4215329	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		4215055	0					
ANR	4215330	Callee	r_anal_op		4215055	0					
ANR	4215331	Identifier	r_anal_op		4215055	0					
ANR	4215332	ArgumentList	core -> anal		4215055	1					
ANR	4215333	Argument	core -> anal		4215055	0					
ANR	4215334	PtrMemberAccess	core -> anal		4215055	0					
ANR	4215335	Identifier	core		4215055	0					
ANR	4215336	Identifier	anal		4215055	1					
ANR	4215337	Argument	& aop		4215055	1					
ANR	4215338	UnaryOperationExpression	& aop		4215055	0					
ANR	4215339	UnaryOperator	&		4215055	0					
ANR	4215340	Identifier	aop		4215055	1					
ANR	4215341	Argument	addr		4215055	2					
ANR	4215342	Identifier	addr		4215055	0					
ANR	4215343	Argument	buf		4215055	3					
ANR	4215344	Identifier	buf		4215055	0					
ANR	4215345	Argument	sizeof ( buf )		4215055	4					
ANR	4215346	SizeofExpression	sizeof ( buf )		4215055	0					
ANR	4215347	Sizeof	sizeof		4215055	0					
ANR	4215348	SizeofOperand	buf		4215055	1					
ANR	4215349	Argument	R_ANAL_OP_MASK_BASIC		4215055	5					
ANR	4215350	Identifier	R_ANAL_OP_MASK_BASIC		4215055	0					
ANR	4215351	Statement	eprintf	3725:2:106757:106763	4215055	14	True				
ANR	4215352	Statement	(	3725:10:106765:106765	4215055	15	True				
ANR	4215353	Statement	"""%d %"""	3725:11:106766:106771	4215055	16	True				
ANR	4215354	Statement	PFMT64x	3725:17:106772:106778	4215055	17	True				
ANR	4215355	Statement	"""\\r"""	3725:24:106779:106782	4215055	18	True				
ANR	4215356	Statement	","	3725:28:106783:106783	4215055	19	True				
ANR	4215357	Statement	n	3725:30:106785:106785	4215055	20	True				
ANR	4215358	Statement	++	3725:31:106786:106787	4215055	21	True				
ANR	4215359	Statement	","	3725:33:106788:106788	4215055	22	True				
ANR	4215360	Statement	addr	3725:35:106790:106793	4215055	23	True				
ANR	4215361	Statement	)	3725:39:106794:106794	4215055	24	True				
ANR	4215362	ExpressionStatement		3725:40:106795:106795	4215055	25	True				
ANR	4215363	SwitchStatement	switch ( aop . type )		4215055	26					
ANR	4215364	Condition	aop . type	3726:10:106807:106814	4215055	0	True				
ANR	4215365	MemberAccess	aop . type		4215055	0					
ANR	4215366	Identifier	aop		4215055	0					
ANR	4215367	Identifier	type		4215055	1					
ANR	4215368	CompoundStatement		54:20:1300:1300	4215055	1					
ANR	4215369	Label	case R_ANAL_OP_TYPE_UCALL :	3727:2:106821:106846	4215055	0	True				
ANR	4215370	Identifier	R_ANAL_OP_TYPE_UCALL		4215055	0					
ANR	4215371	Label	case R_ANAL_OP_TYPE_ICALL :	3728:2:106850:106875	4215055	1	True				
ANR	4215372	Identifier	R_ANAL_OP_TYPE_ICALL		4215055	0					
ANR	4215373	Label	case R_ANAL_OP_TYPE_RCALL :	3729:2:106879:106904	4215055	2	True				
ANR	4215374	Identifier	R_ANAL_OP_TYPE_RCALL		4215055	0					
ANR	4215375	Label	case R_ANAL_OP_TYPE_IRCALL :	3730:2:106908:106934	4215055	3	True				
ANR	4215376	Identifier	R_ANAL_OP_TYPE_IRCALL		4215055	0					
ANR	4215377	CompoundStatement		61:4:1450:1469	4215055	4					
ANR	4215378	IdentifierDeclStatement	ut64 called_addr ;	3732:4:106945:106961	4215055	0	True				
ANR	4215379	IdentifierDecl	called_addr		4215055	0					
ANR	4215380	IdentifierDeclType	ut64		4215055	0					
ANR	4215381	Identifier	called_addr		4215055	1					
ANR	4215382	IdentifierDeclStatement	int called_in_range ;	3733:4:106967:106986	4215055	1	True				
ANR	4215383	IdentifierDecl	called_in_range		4215055	0					
ANR	4215384	IdentifierDeclType	int		4215055	0					
ANR	4215385	Identifier	called_in_range		4215055	1					
ANR	4215386	ExpressionStatement	"r_debug_step ( dbg , 1 )"	3737:4:107041:107062	4215055	2	True				
ANR	4215387	CallExpression	"r_debug_step ( dbg , 1 )"		4215055	0					
ANR	4215388	Callee	r_debug_step		4215055	0					
ANR	4215389	Identifier	r_debug_step		4215055	0					
ANR	4215390	ArgumentList	dbg		4215055	1					
ANR	4215391	Argument	dbg		4215055	0					
ANR	4215392	Identifier	dbg		4215055	0					
ANR	4215393	Argument	1		4215055	1					
ANR	4215394	PrimaryExpression	1		4215055	0					
ANR	4215395	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	3738:4:107068:107113	4215055	3	True				
ANR	4215396	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		4215055	0					
ANR	4215397	Callee	r_debug_reg_sync		4215055	0					
ANR	4215398	Identifier	r_debug_reg_sync		4215055	0					
ANR	4215399	ArgumentList	dbg		4215055	1					
ANR	4215400	Argument	dbg		4215055	0					
ANR	4215401	Identifier	dbg		4215055	0					
ANR	4215402	Argument	R_REG_TYPE_GPR		4215055	1					
ANR	4215403	Identifier	R_REG_TYPE_GPR		4215055	0					
ANR	4215404	Argument	false		4215055	2					
ANR	4215405	Identifier	false		4215055	0					
ANR	4215406	ExpressionStatement	"called_addr = r_debug_reg_get ( dbg , ""PC"" )"	3739:4:107119:107160	4215055	4	True				
ANR	4215407	AssignmentExpression	"called_addr = r_debug_reg_get ( dbg , ""PC"" )"		4215055	0		=			
ANR	4215408	Identifier	called_addr		4215055	0					
ANR	4215409	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		4215055	1					
ANR	4215410	Callee	r_debug_reg_get		4215055	0					
ANR	4215411	Identifier	r_debug_reg_get		4215055	0					
ANR	4215412	ArgumentList	dbg		4215055	1					
ANR	4215413	Argument	dbg		4215055	0					
ANR	4215414	Identifier	dbg		4215055	0					
ANR	4215415	Argument	"""PC"""		4215055	1					
ANR	4215416	PrimaryExpression	"""PC"""		4215055	0					
ANR	4215417	ExpressionStatement	called_in_range = called_addr >= from && called_addr < to	3740:4:107166:107223	4215055	5	True				
ANR	4215418	AssignmentExpression	called_in_range = called_addr >= from && called_addr < to		4215055	0		=			
ANR	4215419	Identifier	called_in_range		4215055	0					
ANR	4215420	AndExpression	called_addr >= from && called_addr < to		4215055	1		&&			
ANR	4215421	RelationalExpression	called_addr >= from		4215055	0		>=			
ANR	4215422	Identifier	called_addr		4215055	0					
ANR	4215423	Identifier	from		4215055	1					
ANR	4215424	RelationalExpression	called_addr < to		4215055	1		<			
ANR	4215425	Identifier	called_addr		4215055	0					
ANR	4215426	Identifier	to		4215055	1					
ANR	4215427	IfStatement	if ( ! called_in_range && addr_in_range && ! shallow_trace )		4215055	6					
ANR	4215428	Condition	! called_in_range && addr_in_range && ! shallow_trace	3741:8:107233:107283	4215055	0	True				
ANR	4215429	AndExpression	! called_in_range && addr_in_range && ! shallow_trace		4215055	0		&&			
ANR	4215430	UnaryOperationExpression	! called_in_range		4215055	0					
ANR	4215431	UnaryOperator	!		4215055	0					
ANR	4215432	Identifier	called_in_range		4215055	1					
ANR	4215433	AndExpression	addr_in_range && ! shallow_trace		4215055	1		&&			
ANR	4215434	Identifier	addr_in_range		4215055	0					
ANR	4215435	UnaryOperationExpression	! shallow_trace		4215055	1					
ANR	4215436	UnaryOperator	!		4215055	0					
ANR	4215437	Identifier	shallow_trace		4215055	1					
ANR	4215438	CompoundStatement		69:61:1769:1769	4215055	1					
ANR	4215439	ExpressionStatement	debug_to = addr + aop . size	3742:5:107293:107319	4215055	0	True				
ANR	4215440	AssignmentExpression	debug_to = addr + aop . size		4215055	0		=			
ANR	4215441	Identifier	debug_to		4215055	0					
ANR	4215442	AdditiveExpression	addr + aop . size		4215055	1		+			
ANR	4215443	Identifier	addr		4215055	0					
ANR	4215444	MemberAccess	aop . size		4215055	1					
ANR	4215445	Identifier	aop		4215055	0					
ANR	4215446	Identifier	size		4215055	1					
ANR	4215447	IfStatement	if ( addr_in_range || shallow_trace )		4215055	7					
ANR	4215448	Condition	addr_in_range || shallow_trace	3744:8:107335:107364	4215055	0	True				
ANR	4215449	OrExpression	addr_in_range || shallow_trace		4215055	0		||			
ANR	4215450	Identifier	addr_in_range		4215055	0					
ANR	4215451	Identifier	shallow_trace		4215055	1					
ANR	4215452	CompoundStatement		72:40:1850:1850	4215055	1					
ANR	4215453	ExpressionStatement	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"	3745:5:107374:107428	4215055	0	True				
ANR	4215454	AssignmentExpression	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"		4215055	0		=			
ANR	4215455	Identifier	cur		4215055	0					
ANR	4215456	CallExpression	"add_trace_tree_child ( tracenodes , tr , cur , addr )"		4215055	1					
ANR	4215457	Callee	add_trace_tree_child		4215055	0					
ANR	4215458	Identifier	add_trace_tree_child		4215055	0					
ANR	4215459	ArgumentList	tracenodes		4215055	1					
ANR	4215460	Argument	tracenodes		4215055	0					
ANR	4215461	Identifier	tracenodes		4215055	0					
ANR	4215462	Argument	tr		4215055	1					
ANR	4215463	Identifier	tr		4215055	0					
ANR	4215464	Argument	cur		4215055	2					
ANR	4215465	Identifier	cur		4215055	0					
ANR	4215466	Argument	addr		4215055	3					
ANR	4215467	Identifier	addr		4215055	0					
ANR	4215468	IfStatement	if ( debug_to != UT64_MAX )		4215055	1					
ANR	4215469	Condition	debug_to != UT64_MAX	3746:9:107439:107458	4215055	0	True				
ANR	4215470	EqualityExpression	debug_to != UT64_MAX		4215055	0		!=			
ANR	4215471	Identifier	debug_to		4215055	0					
ANR	4215472	Identifier	UT64_MAX		4215055	1					
ANR	4215473	CompoundStatement		74:31:1944:1944	4215055	1					
ANR	4215474	ExpressionStatement	cur = cur -> parent	3747:6:107469:107486	4215055	0	True				
ANR	4215475	AssignmentExpression	cur = cur -> parent		4215055	0		=			
ANR	4215476	Identifier	cur		4215055	0					
ANR	4215477	PtrMemberAccess	cur -> parent		4215055	1					
ANR	4215478	Identifier	cur		4215055	0					
ANR	4215479	Identifier	parent		4215055	1					
ANR	4215480	BreakStatement	break ;	3751:4:107562:107567	4215055	8	True				
ANR	4215481	Label	case R_ANAL_OP_TYPE_CALL :	3753:2:107576:107600	4215055	5	True				
ANR	4215482	Identifier	R_ANAL_OP_TYPE_CALL		4215055	0					
ANR	4215483	CompoundStatement		83:4:2094:2149	4215055	6					
ANR	4215484	IdentifierDeclStatement	int called_in_range = aop . jump >= from && aop . jump < to ;	3755:4:107611:107666	4215055	0	True				
ANR	4215485	IdentifierDecl	called_in_range = aop . jump >= from && aop . jump < to		4215055	0					
ANR	4215486	IdentifierDeclType	int		4215055	0					
ANR	4215487	Identifier	called_in_range		4215055	1					
ANR	4215488	AssignmentExpression	called_in_range = aop . jump >= from && aop . jump < to		4215055	2		=			
ANR	4215489	Identifier	called_in_range		4215055	0					
ANR	4215490	AndExpression	aop . jump >= from && aop . jump < to		4215055	1		&&			
ANR	4215491	RelationalExpression	aop . jump >= from		4215055	0		>=			
ANR	4215492	MemberAccess	aop . jump		4215055	0					
ANR	4215493	Identifier	aop		4215055	0					
ANR	4215494	Identifier	jump		4215055	1					
ANR	4215495	Identifier	from		4215055	1					
ANR	4215496	RelationalExpression	aop . jump < to		4215055	1		<			
ANR	4215497	MemberAccess	aop . jump		4215055	0					
ANR	4215498	Identifier	aop		4215055	0					
ANR	4215499	Identifier	jump		4215055	1					
ANR	4215500	Identifier	to		4215055	1					
ANR	4215501	IfStatement	if ( ! called_in_range && addr_in_range && ! shallow_trace )		4215055	1					
ANR	4215502	Condition	! called_in_range && addr_in_range && ! shallow_trace	3756:8:107676:107726	4215055	0	True				
ANR	4215503	AndExpression	! called_in_range && addr_in_range && ! shallow_trace		4215055	0		&&			
ANR	4215504	UnaryOperationExpression	! called_in_range		4215055	0					
ANR	4215505	UnaryOperator	!		4215055	0					
ANR	4215506	Identifier	called_in_range		4215055	1					
ANR	4215507	AndExpression	addr_in_range && ! shallow_trace		4215055	1		&&			
ANR	4215508	Identifier	addr_in_range		4215055	0					
ANR	4215509	UnaryOperationExpression	! shallow_trace		4215055	1					
ANR	4215510	UnaryOperator	!		4215055	0					
ANR	4215511	Identifier	shallow_trace		4215055	1					
ANR	4215512	CompoundStatement		84:61:2212:2212	4215055	1					
ANR	4215513	ExpressionStatement	debug_to = aop . addr + aop . size	3757:5:107736:107766	4215055	0	True				
ANR	4215514	AssignmentExpression	debug_to = aop . addr + aop . size		4215055	0		=			
ANR	4215515	Identifier	debug_to		4215055	0					
ANR	4215516	AdditiveExpression	aop . addr + aop . size		4215055	1		+			
ANR	4215517	MemberAccess	aop . addr		4215055	0					
ANR	4215518	Identifier	aop		4215055	0					
ANR	4215519	Identifier	addr		4215055	1					
ANR	4215520	MemberAccess	aop . size		4215055	1					
ANR	4215521	Identifier	aop		4215055	0					
ANR	4215522	Identifier	size		4215055	1					
ANR	4215523	IfStatement	if ( addr_in_range || shallow_trace )		4215055	2					
ANR	4215524	Condition	addr_in_range || shallow_trace	3759:8:107782:107811	4215055	0	True				
ANR	4215525	OrExpression	addr_in_range || shallow_trace		4215055	0		||			
ANR	4215526	Identifier	addr_in_range		4215055	0					
ANR	4215527	Identifier	shallow_trace		4215055	1					
ANR	4215528	CompoundStatement		87:40:2297:2297	4215055	1					
ANR	4215529	ExpressionStatement	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"	3760:5:107821:107875	4215055	0	True				
ANR	4215530	AssignmentExpression	"cur = add_trace_tree_child ( tracenodes , tr , cur , addr )"		4215055	0		=			
ANR	4215531	Identifier	cur		4215055	0					
ANR	4215532	CallExpression	"add_trace_tree_child ( tracenodes , tr , cur , addr )"		4215055	1					
ANR	4215533	Callee	add_trace_tree_child		4215055	0					
ANR	4215534	Identifier	add_trace_tree_child		4215055	0					
ANR	4215535	ArgumentList	tracenodes		4215055	1					
ANR	4215536	Argument	tracenodes		4215055	0					
ANR	4215537	Identifier	tracenodes		4215055	0					
ANR	4215538	Argument	tr		4215055	1					
ANR	4215539	Identifier	tr		4215055	0					
ANR	4215540	Argument	cur		4215055	2					
ANR	4215541	Identifier	cur		4215055	0					
ANR	4215542	Argument	addr		4215055	3					
ANR	4215543	Identifier	addr		4215055	0					
ANR	4215544	IfStatement	if ( debug_to != UT64_MAX )		4215055	1					
ANR	4215545	Condition	debug_to != UT64_MAX	3761:9:107886:107905	4215055	0	True				
ANR	4215546	EqualityExpression	debug_to != UT64_MAX		4215055	0		!=			
ANR	4215547	Identifier	debug_to		4215055	0					
ANR	4215548	Identifier	UT64_MAX		4215055	1					
ANR	4215549	CompoundStatement		89:31:2391:2391	4215055	1					
ANR	4215550	ExpressionStatement	cur = cur -> parent	3762:6:107916:107933	4215055	0	True				
ANR	4215551	AssignmentExpression	cur = cur -> parent		4215055	0		=			
ANR	4215552	Identifier	cur		4215055	0					
ANR	4215553	PtrMemberAccess	cur -> parent		4215055	1					
ANR	4215554	Identifier	cur		4215055	0					
ANR	4215555	Identifier	parent		4215055	1					
ANR	4215556	BreakStatement	break ;	3765:4:107952:107957	4215055	3	True				
ANR	4215557	Label	case R_ANAL_OP_TYPE_RET :	3767:2:107966:107989	4215055	7	True				
ANR	4215558	Identifier	R_ANAL_OP_TYPE_RET		4215055	0					
ANR	4215559	ExpressionStatement	"r_debug_step ( dbg , 1 )"	3770:3:108085:108106	4215055	8	True				
ANR	4215560	CallExpression	"r_debug_step ( dbg , 1 )"		4215055	0					
ANR	4215561	Callee	r_debug_step		4215055	0					
ANR	4215562	Identifier	r_debug_step		4215055	0					
ANR	4215563	ArgumentList	dbg		4215055	1					
ANR	4215564	Argument	dbg		4215055	0					
ANR	4215565	Identifier	dbg		4215055	0					
ANR	4215566	Argument	1		4215055	1					
ANR	4215567	PrimaryExpression	1		4215055	0					
ANR	4215568	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"	3771:3:108111:108156	4215055	9	True				
ANR	4215569	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_GPR , false )"		4215055	0					
ANR	4215570	Callee	r_debug_reg_sync		4215055	0					
ANR	4215571	Identifier	r_debug_reg_sync		4215055	0					
ANR	4215572	ArgumentList	dbg		4215055	1					
ANR	4215573	Argument	dbg		4215055	0					
ANR	4215574	Identifier	dbg		4215055	0					
ANR	4215575	Argument	R_REG_TYPE_GPR		4215055	1					
ANR	4215576	Identifier	R_REG_TYPE_GPR		4215055	0					
ANR	4215577	Argument	false		4215055	2					
ANR	4215578	Identifier	false		4215055	0					
ANR	4215579	ExpressionStatement	"addr = r_debug_reg_get ( dbg , ""PC"" )"	3772:3:108161:108195	4215055	10	True				
ANR	4215580	AssignmentExpression	"addr = r_debug_reg_get ( dbg , ""PC"" )"		4215055	0		=			
ANR	4215581	Identifier	addr		4215055	0					
ANR	4215582	CallExpression	"r_debug_reg_get ( dbg , ""PC"" )"		4215055	1					
ANR	4215583	Callee	r_debug_reg_get		4215055	0					
ANR	4215584	Identifier	r_debug_reg_get		4215055	0					
ANR	4215585	ArgumentList	dbg		4215055	1					
ANR	4215586	Argument	dbg		4215055	0					
ANR	4215587	Identifier	dbg		4215055	0					
ANR	4215588	Argument	"""PC"""		4215055	1					
ANR	4215589	PrimaryExpression	"""PC"""		4215055	0					
ANR	4215590	IfStatement	if ( cur != tr -> root )		4215055	11					
ANR	4215591	Condition	cur != tr -> root	3776:7:108335:108349	4215055	0	True				
ANR	4215592	EqualityExpression	cur != tr -> root		4215055	0		!=			
ANR	4215593	Identifier	cur		4215055	0					
ANR	4215594	PtrMemberAccess	tr -> root		4215055	1					
ANR	4215595	Identifier	tr		4215055	0					
ANR	4215596	Identifier	root		4215055	1					
ANR	4215597	CompoundStatement		104:24:2835:2835	4215055	1					
ANR	4215598	ExpressionStatement	cur = cur -> parent	3777:4:108358:108375	4215055	0	True				
ANR	4215599	AssignmentExpression	cur = cur -> parent		4215055	0		=			
ANR	4215600	Identifier	cur		4215055	0					
ANR	4215601	PtrMemberAccess	cur -> parent		4215055	1					
ANR	4215602	Identifier	cur		4215055	0					
ANR	4215603	Identifier	parent		4215055	1					
ANR	4215604	IfStatement	if ( addr != gn -> addr )		4215055	12					
ANR	4215605	Condition	addr != gn -> addr	3780:7:108395:108410	4215055	0	True				
ANR	4215606	EqualityExpression	addr != gn -> addr		4215055	0		!=			
ANR	4215607	Identifier	addr		4215055	0					
ANR	4215608	PtrMemberAccess	gn -> addr		4215055	1					
ANR	4215609	Identifier	gn		4215055	0					
ANR	4215610	Identifier	addr		4215055	1					
ANR	4215611	CompoundStatement		108:25:2896:2896	4215055	1					
ANR	4215612	Statement	eprintf	3781:4:108419:108425	4215055	0	True				
ANR	4215613	Statement	(	3781:12:108427:108427	4215055	1	True				
ANR	4215614	Statement	"""Oops. invalid return address 0x%08"""	3781:13:108428:108463	4215055	2	True				
ANR	4215615	Statement	PFMT64x	3781:49:108464:108470	4215055	3	True				
ANR	4215616	Statement	"""\\n0x%08"""	3782:6:108478:108486	4215055	4	True				
ANR	4215617	Statement	PFMT64x	3782:15:108487:108493	4215055	5	True				
ANR	4215618	Statement	"""\\n"""	3782:22:108494:108497	4215055	6	True				
ANR	4215619	Statement	","	3782:26:108498:108498	4215055	7	True				
ANR	4215620	Statement	addr	3782:28:108500:108503	4215055	8	True				
ANR	4215621	Statement	","	3782:32:108504:108504	4215055	9	True				
ANR	4215622	Statement	gn	3782:34:108506:108507	4215055	10	True				
ANR	4215623	Statement	->	3782:36:108508:108509	4215055	11	True				
ANR	4215624	Statement	addr	3782:38:108510:108513	4215055	12	True				
ANR	4215625	Statement	)	3782:42:108514:108514	4215055	13	True				
ANR	4215626	ExpressionStatement		3782:43:108515:108515	4215055	14	True				
ANR	4215627	BreakStatement	break ;	3785:3:108532:108537	4215055	13	True				
ANR	4215628	ReturnType	static void		4215055	1					
ANR	4215629	Identifier	do_debug_trace_calls		4215055	2					
ANR	4215630	ParameterList	"RCore * core , ut64 from , ut64 to , ut64 final_addr"		4215055	3					
ANR	4215631	Parameter	RCore * core	3673:33:105466:105476	4215055	0	True				
ANR	4215632	ParameterType	RCore *		4215055	0					
ANR	4215633	Identifier	core		4215055	1					
ANR	4215634	Parameter	ut64 from	3673:46:105479:105487	4215055	1	True				
ANR	4215635	ParameterType	ut64		4215055	0					
ANR	4215636	Identifier	from		4215055	1					
ANR	4215637	Parameter	ut64 to	3673:57:105490:105496	4215055	2	True				
ANR	4215638	ParameterType	ut64		4215055	0					
ANR	4215639	Identifier	to		4215055	1					
ANR	4215640	Parameter	ut64 final_addr	3673:66:105499:105513	4215055	3	True				
ANR	4215641	ParameterType	ut64		4215055	0					
ANR	4215642	Identifier	final_addr		4215055	1					
ANR	4215643	CFGEntryNode	ENTRY		4215055		True				
ANR	4215644	CFGExitNode	EXIT		4215055		True				
ANR	4215645	Symbol	aop . jump		4215055						
ANR	4215646	Symbol	aop		4215055						
ANR	4215647	Symbol	core -> dbg -> tracenodes		4215055						
ANR	4215648	Symbol	r_debug_reg_get		4215055						
ANR	4215649	Symbol	gn -> addr		4215055						
ANR	4215650	Symbol	aop . type		4215055						
ANR	4215651	Symbol	* gn		4215055						
ANR	4215652	Symbol	* cur		4215055						
ANR	4215653	Symbol	from		4215055						
ANR	4215654	Symbol	final_addr		4215055						
ANR	4215655	Symbol	NULL		4215055						
ANR	4215656	Symbol	* tr		4215055						
ANR	4215657	Symbol	dbg		4215055						
ANR	4215658	Symbol	trace_libs		4215055						
ANR	4215659	Symbol	& aop		4215055						
ANR	4215660	Symbol	core		4215055						
ANR	4215661	Symbol	r_debug_continue_until		4215055						
ANR	4215662	Symbol	r_config_get_i		4215055						
ANR	4215663	Symbol	bounds		4215055						
ANR	4215664	Symbol	true		4215055						
ANR	4215665	Symbol	tracenodes		4215055						
ANR	4215666	Symbol	aop . addr		4215055						
ANR	4215667	Symbol	* core -> dbg		4215055						
ANR	4215668	Symbol	shallow_trace		4215055						
ANR	4215669	Symbol	debug_to		4215055						
ANR	4215670	Symbol	cur		4215055						
ANR	4215671	Symbol	r_debug_reg_sync		4215055						
ANR	4215672	Symbol	* core		4215055						
ANR	4215673	Symbol	R_ANAL_OP_MASK_BASIC		4215055						
ANR	4215674	Symbol	core -> anal		4215055						
ANR	4215675	Symbol	r_cons_is_breaked		4215055						
ANR	4215676	Symbol	aop . size		4215055						
ANR	4215677	Symbol	core -> io		4215055						
ANR	4215678	Symbol	add_trace_tree_child		4215055						
ANR	4215679	Symbol	UT64_MAX		4215055						
ANR	4215680	Symbol	addr		4215055						
ANR	4215681	Symbol	* * core		4215055						
ANR	4215682	Symbol	R_REG_TYPE_GPR		4215055						
ANR	4215683	Symbol	core -> config		4215055						
ANR	4215684	Symbol	called_in_range		4215055						
ANR	4215685	Symbol	addr_in_range		4215055						
ANR	4215686	Symbol	core -> dbg -> tree		4215055						
ANR	4215687	Symbol	gn		4215055						
ANR	4215688	Symbol	false		4215055						
ANR	4215689	Symbol	tr -> root		4215055						
ANR	4215690	Symbol	n		4215055						
ANR	4215691	Symbol	r_debug_step		4215055						
ANR	4215692	Symbol	buf		4215055						
ANR	4215693	Symbol	r_debug_is_dead		4215055						
ANR	4215694	Symbol	called_addr		4215055						
ANR	4215695	Symbol	to		4215055						
ANR	4215696	Symbol	r_core_get_boundaries_prot		4215055						
ANR	4215697	Symbol	cur -> parent		4215055						
ANR	4215698	Symbol	tr		4215055						
ANR	4215699	Symbol	core -> dbg		4215055						
ANR	4215700	Function	debug_trace_calls	3790:0:108549:109858							
ANR	4215701	FunctionDef	"debug_trace_calls (RCore * core , const char * input)"		4215700	0					
ANR	4215702	CompoundStatement		3790:62:108611:109858	4215700	0					
ANR	4215703	IdentifierDeclStatement	RBreakpointItem * bp_final = NULL ;	3791:1:108614:108646	4215700	0	True				
ANR	4215704	IdentifierDecl	* bp_final = NULL		4215700	0					
ANR	4215705	IdentifierDeclType	RBreakpointItem *		4215700	0					
ANR	4215706	Identifier	bp_final		4215700	1					
ANR	4215707	AssignmentExpression	* bp_final = NULL		4215700	2		=			
ANR	4215708	Identifier	NULL		4215700	0					
ANR	4215709	Identifier	NULL		4215700	1					
ANR	4215710	IdentifierDeclStatement	int t = core -> dbg -> trace -> enabled ;	3792:1:108649:108682	4215700	1	True				
ANR	4215711	IdentifierDecl	t = core -> dbg -> trace -> enabled		4215700	0					
ANR	4215712	IdentifierDeclType	int		4215700	0					
ANR	4215713	Identifier	t		4215700	1					
ANR	4215714	AssignmentExpression	t = core -> dbg -> trace -> enabled		4215700	2		=			
ANR	4215715	Identifier	t		4215700	0					
ANR	4215716	PtrMemberAccess	core -> dbg -> trace -> enabled		4215700	1					
ANR	4215717	PtrMemberAccess	core -> dbg -> trace		4215700	0					
ANR	4215718	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215719	Identifier	core		4215700	0					
ANR	4215720	Identifier	dbg		4215700	1					
ANR	4215721	Identifier	trace		4215700	1					
ANR	4215722	Identifier	enabled		4215700	1					
ANR	4215723	IdentifierDeclStatement	"ut64 from = 0 , to = UT64_MAX , final_addr = UT64_MAX ;"	3793:1:108685:108736	4215700	2	True				
ANR	4215724	IdentifierDecl	from = 0		4215700	0					
ANR	4215725	IdentifierDeclType	ut64		4215700	0					
ANR	4215726	Identifier	from		4215700	1					
ANR	4215727	AssignmentExpression	from = 0		4215700	2		=			
ANR	4215728	Identifier	from		4215700	0					
ANR	4215729	PrimaryExpression	0		4215700	1					
ANR	4215730	IdentifierDecl	to = UT64_MAX		4215700	1					
ANR	4215731	IdentifierDeclType	ut64		4215700	0					
ANR	4215732	Identifier	to		4215700	1					
ANR	4215733	AssignmentExpression	to = UT64_MAX		4215700	2		=			
ANR	4215734	Identifier	UT64_MAX		4215700	0					
ANR	4215735	Identifier	UT64_MAX		4215700	1					
ANR	4215736	IdentifierDecl	final_addr = UT64_MAX		4215700	2					
ANR	4215737	IdentifierDeclType	ut64		4215700	0					
ANR	4215738	Identifier	final_addr		4215700	1					
ANR	4215739	AssignmentExpression	final_addr = UT64_MAX		4215700	2		=			
ANR	4215740	Identifier	UT64_MAX		4215700	0					
ANR	4215741	Identifier	UT64_MAX		4215700	1					
ANR	4215742	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4215700	3					
ANR	4215743	Condition	r_debug_is_dead ( core -> dbg )	3795:5:108744:108770	4215700	0	True				
ANR	4215744	CallExpression	r_debug_is_dead ( core -> dbg )		4215700	0					
ANR	4215745	Callee	r_debug_is_dead		4215700	0					
ANR	4215746	Identifier	r_debug_is_dead		4215700	0					
ANR	4215747	ArgumentList	core -> dbg		4215700	1					
ANR	4215748	Argument	core -> dbg		4215700	0					
ANR	4215749	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215750	Identifier	core		4215700	0					
ANR	4215751	Identifier	dbg		4215700	1					
ANR	4215752	CompoundStatement		6:34:161:161	4215700	1					
ANR	4215753	ExpressionStatement	"eprintf ( ""No process to debug."" )"	3796:2:108777:108809	4215700	0	True				
ANR	4215754	CallExpression	"eprintf ( ""No process to debug."" )"		4215700	0					
ANR	4215755	Callee	eprintf		4215700	0					
ANR	4215756	Identifier	eprintf		4215700	0					
ANR	4215757	ArgumentList	"""No process to debug."""		4215700	1					
ANR	4215758	Argument	"""No process to debug."""		4215700	0					
ANR	4215759	PrimaryExpression	"""No process to debug."""		4215700	0					
ANR	4215760	ReturnStatement	return ;	3797:2:108813:108819	4215700	1	True				
ANR	4215761	IfStatement	if ( * input == ' ' )		4215700	4					
ANR	4215762	Condition	* input == ' '	3799:5:108829:108841	4215700	0	True				
ANR	4215763	EqualityExpression	* input == ' '		4215700	0		==			
ANR	4215764	UnaryOperationExpression	* input		4215700	0					
ANR	4215765	UnaryOperator	*		4215700	0					
ANR	4215766	Identifier	input		4215700	1					
ANR	4215767	PrimaryExpression	' '		4215700	1					
ANR	4215768	CompoundStatement		12:2:269:313	4215700	1					
ANR	4215769	ExpressionStatement	input = r_str_trim_ro ( input )	3800:2:108848:108877	4215700	0	True				
ANR	4215770	AssignmentExpression	input = r_str_trim_ro ( input )		4215700	0		=			
ANR	4215771	Identifier	input		4215700	0					
ANR	4215772	CallExpression	r_str_trim_ro ( input )		4215700	1					
ANR	4215773	Callee	r_str_trim_ro		4215700	0					
ANR	4215774	Identifier	r_str_trim_ro		4215700	0					
ANR	4215775	ArgumentList	input		4215700	1					
ANR	4215776	Argument	input		4215700	0					
ANR	4215777	Identifier	input		4215700	0					
ANR	4215778	IdentifierDeclStatement	"ut64 first_n = r_num_math ( core -> num , input ) ;"	3801:2:108881:108925	4215700	1	True				
ANR	4215779	IdentifierDecl	"first_n = r_num_math ( core -> num , input )"		4215700	0					
ANR	4215780	IdentifierDeclType	ut64		4215700	0					
ANR	4215781	Identifier	first_n		4215700	1					
ANR	4215782	AssignmentExpression	"first_n = r_num_math ( core -> num , input )"		4215700	2		=			
ANR	4215783	Identifier	first_n		4215700	0					
ANR	4215784	CallExpression	"r_num_math ( core -> num , input )"		4215700	1					
ANR	4215785	Callee	r_num_math		4215700	0					
ANR	4215786	Identifier	r_num_math		4215700	0					
ANR	4215787	ArgumentList	core -> num		4215700	1					
ANR	4215788	Argument	core -> num		4215700	0					
ANR	4215789	PtrMemberAccess	core -> num		4215700	0					
ANR	4215790	Identifier	core		4215700	0					
ANR	4215791	Identifier	num		4215700	1					
ANR	4215792	Argument	input		4215700	1					
ANR	4215793	Identifier	input		4215700	0					
ANR	4215794	ExpressionStatement	"input = strchr ( input , ' ' )"	3802:2:108929:108956	4215700	2	True				
ANR	4215795	AssignmentExpression	"input = strchr ( input , ' ' )"		4215700	0		=			
ANR	4215796	Identifier	input		4215700	0					
ANR	4215797	CallExpression	"strchr ( input , ' ' )"		4215700	1					
ANR	4215798	Callee	strchr		4215700	0					
ANR	4215799	Identifier	strchr		4215700	0					
ANR	4215800	ArgumentList	input		4215700	1					
ANR	4215801	Argument	input		4215700	0					
ANR	4215802	Identifier	input		4215700	0					
ANR	4215803	Argument	' '		4215700	1					
ANR	4215804	PrimaryExpression	' '		4215700	0					
ANR	4215805	IfStatement	if ( input )		4215700	3					
ANR	4215806	Condition	input	3803:6:108964:108968	4215700	0	True				
ANR	4215807	Identifier	input		4215700	0					
ANR	4215808	CompoundStatement		14:13:359:359	4215700	1					
ANR	4215809	ExpressionStatement	input = r_str_trim_ro ( input )	3804:3:108976:109005	4215700	0	True				
ANR	4215810	AssignmentExpression	input = r_str_trim_ro ( input )		4215700	0		=			
ANR	4215811	Identifier	input		4215700	0					
ANR	4215812	CallExpression	r_str_trim_ro ( input )		4215700	1					
ANR	4215813	Callee	r_str_trim_ro		4215700	0					
ANR	4215814	Identifier	r_str_trim_ro		4215700	0					
ANR	4215815	ArgumentList	input		4215700	1					
ANR	4215816	Argument	input		4215700	0					
ANR	4215817	Identifier	input		4215700	0					
ANR	4215818	ExpressionStatement	from = first_n	3805:3:109010:109024	4215700	1	True				
ANR	4215819	AssignmentExpression	from = first_n		4215700	0		=			
ANR	4215820	Identifier	from		4215700	0					
ANR	4215821	Identifier	first_n		4215700	1					
ANR	4215822	ExpressionStatement	"to = r_num_math ( core -> num , input )"	3806:3:109029:109063	4215700	2	True				
ANR	4215823	AssignmentExpression	"to = r_num_math ( core -> num , input )"		4215700	0		=			
ANR	4215824	Identifier	to		4215700	0					
ANR	4215825	CallExpression	"r_num_math ( core -> num , input )"		4215700	1					
ANR	4215826	Callee	r_num_math		4215700	0					
ANR	4215827	Identifier	r_num_math		4215700	0					
ANR	4215828	ArgumentList	core -> num		4215700	1					
ANR	4215829	Argument	core -> num		4215700	0					
ANR	4215830	PtrMemberAccess	core -> num		4215700	0					
ANR	4215831	Identifier	core		4215700	0					
ANR	4215832	Identifier	num		4215700	1					
ANR	4215833	Argument	input		4215700	1					
ANR	4215834	Identifier	input		4215700	0					
ANR	4215835	ExpressionStatement	"input = strchr ( input , ' ' )"	3807:3:109068:109095	4215700	3	True				
ANR	4215836	AssignmentExpression	"input = strchr ( input , ' ' )"		4215700	0		=			
ANR	4215837	Identifier	input		4215700	0					
ANR	4215838	CallExpression	"strchr ( input , ' ' )"		4215700	1					
ANR	4215839	Callee	strchr		4215700	0					
ANR	4215840	Identifier	strchr		4215700	0					
ANR	4215841	ArgumentList	input		4215700	1					
ANR	4215842	Argument	input		4215700	0					
ANR	4215843	Identifier	input		4215700	0					
ANR	4215844	Argument	' '		4215700	1					
ANR	4215845	PrimaryExpression	' '		4215700	0					
ANR	4215846	IfStatement	if ( input )		4215700	4					
ANR	4215847	Condition	input	3808:7:109104:109108	4215700	0	True				
ANR	4215848	Identifier	input		4215700	0					
ANR	4215849	CompoundStatement		19:14:499:499	4215700	1					
ANR	4215850	ExpressionStatement	input = r_str_trim_ro ( input )	3809:4:109117:109146	4215700	0	True				
ANR	4215851	AssignmentExpression	input = r_str_trim_ro ( input )		4215700	0		=			
ANR	4215852	Identifier	input		4215700	0					
ANR	4215853	CallExpression	r_str_trim_ro ( input )		4215700	1					
ANR	4215854	Callee	r_str_trim_ro		4215700	0					
ANR	4215855	Identifier	r_str_trim_ro		4215700	0					
ANR	4215856	ArgumentList	input		4215700	1					
ANR	4215857	Argument	input		4215700	0					
ANR	4215858	Identifier	input		4215700	0					
ANR	4215859	ExpressionStatement	"final_addr = r_num_math ( core -> num , input )"	3810:4:109152:109194	4215700	1	True				
ANR	4215860	AssignmentExpression	"final_addr = r_num_math ( core -> num , input )"		4215700	0		=			
ANR	4215861	Identifier	final_addr		4215700	0					
ANR	4215862	CallExpression	"r_num_math ( core -> num , input )"		4215700	1					
ANR	4215863	Callee	r_num_math		4215700	0					
ANR	4215864	Identifier	r_num_math		4215700	0					
ANR	4215865	ArgumentList	core -> num		4215700	1					
ANR	4215866	Argument	core -> num		4215700	0					
ANR	4215867	PtrMemberAccess	core -> num		4215700	0					
ANR	4215868	Identifier	core		4215700	0					
ANR	4215869	Identifier	num		4215700	1					
ANR	4215870	Argument	input		4215700	1					
ANR	4215871	Identifier	input		4215700	0					
ANR	4215872	ElseStatement	else		4215700	0					
ANR	4215873	CompoundStatement		23:9:598:598	4215700	0					
ANR	4215874	ExpressionStatement	final_addr = first_n	3813:3:109215:109235	4215700	0	True				
ANR	4215875	AssignmentExpression	final_addr = first_n		4215700	0		=			
ANR	4215876	Identifier	final_addr		4215700	0					
ANR	4215877	Identifier	first_n		4215700	1					
ANR	4215878	ExpressionStatement	core -> dbg -> trace -> enabled = 0	3816:1:109245:109274	4215700	5	True				
ANR	4215879	AssignmentExpression	core -> dbg -> trace -> enabled = 0		4215700	0		=			
ANR	4215880	PtrMemberAccess	core -> dbg -> trace -> enabled		4215700	0					
ANR	4215881	PtrMemberAccess	core -> dbg -> trace		4215700	0					
ANR	4215882	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215883	Identifier	core		4215700	0					
ANR	4215884	Identifier	dbg		4215700	1					
ANR	4215885	Identifier	trace		4215700	1					
ANR	4215886	Identifier	enabled		4215700	1					
ANR	4215887	PrimaryExpression	0		4215700	1					
ANR	4215888	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	3817:1:109277:109325	4215700	6	True				
ANR	4215889	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		4215700	0					
ANR	4215890	Callee	r_cons_break_push		4215700	0					
ANR	4215891	Identifier	r_cons_break_push		4215700	0					
ANR	4215892	ArgumentList	static_debug_stop		4215700	1					
ANR	4215893	Argument	static_debug_stop		4215700	0					
ANR	4215894	Identifier	static_debug_stop		4215700	0					
ANR	4215895	Argument	core -> dbg		4215700	1					
ANR	4215896	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215897	Identifier	core		4215700	0					
ANR	4215898	Identifier	dbg		4215700	1					
ANR	4215899	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	3818:1:109328:109367	4215700	7	True				
ANR	4215900	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4215700	0					
ANR	4215901	Callee	r_reg_arena_swap		4215700	0					
ANR	4215902	Identifier	r_reg_arena_swap		4215700	0					
ANR	4215903	ArgumentList	core -> dbg -> reg		4215700	1					
ANR	4215904	Argument	core -> dbg -> reg		4215700	0					
ANR	4215905	PtrMemberAccess	core -> dbg -> reg		4215700	0					
ANR	4215906	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215907	Identifier	core		4215700	0					
ANR	4215908	Identifier	dbg		4215700	1					
ANR	4215909	Identifier	reg		4215700	1					
ANR	4215910	Argument	true		4215700	1					
ANR	4215911	Identifier	true		4215700	0					
ANR	4215912	IfStatement	if ( final_addr != UT64_MAX )		4215700	8					
ANR	4215913	Condition	final_addr != UT64_MAX	3819:5:109374:109395	4215700	0	True				
ANR	4215914	EqualityExpression	final_addr != UT64_MAX		4215700	0		!=			
ANR	4215915	Identifier	final_addr		4215700	0					
ANR	4215916	Identifier	UT64_MAX		4215700	1					
ANR	4215917	CompoundStatement		31:2:790:842	4215700	1					
ANR	4215918	IdentifierDeclStatement	"int hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" ) ;"	3820:2:109402:109454	4215700	0	True				
ANR	4215919	IdentifierDecl	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		4215700	0					
ANR	4215920	IdentifierDeclType	int		4215700	0					
ANR	4215921	Identifier	hwbp		4215700	1					
ANR	4215922	AssignmentExpression	"hwbp = r_config_get_i ( core -> config , ""dbg.hwbp"" )"		4215700	2		=			
ANR	4215923	Identifier	hwbp		4215700	0					
ANR	4215924	CallExpression	"r_config_get_i ( core -> config , ""dbg.hwbp"" )"		4215700	1					
ANR	4215925	Callee	r_config_get_i		4215700	0					
ANR	4215926	Identifier	r_config_get_i		4215700	0					
ANR	4215927	ArgumentList	core -> config		4215700	1					
ANR	4215928	Argument	core -> config		4215700	0					
ANR	4215929	PtrMemberAccess	core -> config		4215700	0					
ANR	4215930	Identifier	core		4215700	0					
ANR	4215931	Identifier	config		4215700	1					
ANR	4215932	Argument	"""dbg.hwbp"""		4215700	1					
ANR	4215933	PrimaryExpression	"""dbg.hwbp"""		4215700	0					
ANR	4215934	ExpressionStatement	"bp_final = r_debug_bp_add ( core -> dbg , final_addr , hwbp , false , 0 , NULL , 0 )"	3821:2:109458:109532	4215700	1	True				
ANR	4215935	AssignmentExpression	"bp_final = r_debug_bp_add ( core -> dbg , final_addr , hwbp , false , 0 , NULL , 0 )"		4215700	0		=			
ANR	4215936	Identifier	bp_final		4215700	0					
ANR	4215937	CallExpression	"r_debug_bp_add ( core -> dbg , final_addr , hwbp , false , 0 , NULL , 0 )"		4215700	1					
ANR	4215938	Callee	r_debug_bp_add		4215700	0					
ANR	4215939	Identifier	r_debug_bp_add		4215700	0					
ANR	4215940	ArgumentList	core -> dbg		4215700	1					
ANR	4215941	Argument	core -> dbg		4215700	0					
ANR	4215942	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215943	Identifier	core		4215700	0					
ANR	4215944	Identifier	dbg		4215700	1					
ANR	4215945	Argument	final_addr		4215700	1					
ANR	4215946	Identifier	final_addr		4215700	0					
ANR	4215947	Argument	hwbp		4215700	2					
ANR	4215948	Identifier	hwbp		4215700	0					
ANR	4215949	Argument	false		4215700	3					
ANR	4215950	Identifier	false		4215700	0					
ANR	4215951	Argument	0		4215700	4					
ANR	4215952	PrimaryExpression	0		4215700	0					
ANR	4215953	Argument	NULL		4215700	5					
ANR	4215954	Identifier	NULL		4215700	0					
ANR	4215955	Argument	0		4215700	6					
ANR	4215956	PrimaryExpression	0		4215700	0					
ANR	4215957	IfStatement	if ( ! bp_final )		4215700	2					
ANR	4215958	Condition	! bp_final	3822:6:109540:109548	4215700	0	True				
ANR	4215959	UnaryOperationExpression	! bp_final		4215700	0					
ANR	4215960	UnaryOperator	!		4215700	0					
ANR	4215961	Identifier	bp_final		4215700	1					
ANR	4215962	CompoundStatement		33:17:939:939	4215700	1					
ANR	4215963	Statement	eprintf	3823:3:109556:109562	4215700	0	True				
ANR	4215964	Statement	(	3823:11:109564:109564	4215700	1	True				
ANR	4215965	Statement	"""Cannot set breakpoint at final address (%"""	3823:12:109565:109607	4215700	2	True				
ANR	4215966	Statement	PFMT64x	3823:55:109608:109614	4215700	3	True				
ANR	4215967	Statement	""")\\n"""	3823:62:109615:109619	4215700	4	True				
ANR	4215968	Statement	","	3823:67:109620:109620	4215700	5	True				
ANR	4215969	Statement	final_addr	3823:69:109622:109631	4215700	6	True				
ANR	4215970	Statement	)	3823:79:109632:109632	4215700	7	True				
ANR	4215971	ExpressionStatement		3823:80:109633:109633	4215700	8	True				
ANR	4215972	ExpressionStatement	"do_debug_trace_calls ( core , from , to , final_addr )"	3826:1:109643:109692	4215700	9	True				
ANR	4215973	CallExpression	"do_debug_trace_calls ( core , from , to , final_addr )"		4215700	0					
ANR	4215974	Callee	do_debug_trace_calls		4215700	0					
ANR	4215975	Identifier	do_debug_trace_calls		4215700	0					
ANR	4215976	ArgumentList	core		4215700	1					
ANR	4215977	Argument	core		4215700	0					
ANR	4215978	Identifier	core		4215700	0					
ANR	4215979	Argument	from		4215700	1					
ANR	4215980	Identifier	from		4215700	0					
ANR	4215981	Argument	to		4215700	2					
ANR	4215982	Identifier	to		4215700	0					
ANR	4215983	Argument	final_addr		4215700	3					
ANR	4215984	Identifier	final_addr		4215700	0					
ANR	4215985	IfStatement	if ( bp_final )		4215700	10					
ANR	4215986	Condition	bp_final	3827:5:109699:109706	4215700	0	True				
ANR	4215987	Identifier	bp_final		4215700	0					
ANR	4215988	CompoundStatement		38:15:1097:1097	4215700	1					
ANR	4215989	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , final_addr )"	3828:2:109713:109749	4215700	0	True				
ANR	4215990	CallExpression	"r_bp_del ( core -> dbg -> bp , final_addr )"		4215700	0					
ANR	4215991	Callee	r_bp_del		4215700	0					
ANR	4215992	Identifier	r_bp_del		4215700	0					
ANR	4215993	ArgumentList	core -> dbg -> bp		4215700	1					
ANR	4215994	Argument	core -> dbg -> bp		4215700	0					
ANR	4215995	PtrMemberAccess	core -> dbg -> bp		4215700	0					
ANR	4215996	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4215997	Identifier	core		4215700	0					
ANR	4215998	Identifier	dbg		4215700	1					
ANR	4215999	Identifier	bp		4215700	1					
ANR	4216000	Argument	final_addr		4215700	1					
ANR	4216001	Identifier	final_addr		4215700	0					
ANR	4216002	ExpressionStatement	_core = core	3830:1:109755:109767	4215700	11	True				
ANR	4216003	AssignmentExpression	_core = core		4215700	0		=			
ANR	4216004	Identifier	_core		4215700	0					
ANR	4216005	Identifier	core		4215700	1					
ANR	4216006	ExpressionStatement	trace_traverse ( core -> dbg -> tree )	3831:1:109770:109802	4215700	12	True				
ANR	4216007	CallExpression	trace_traverse ( core -> dbg -> tree )		4215700	0					
ANR	4216008	Callee	trace_traverse		4215700	0					
ANR	4216009	Identifier	trace_traverse		4215700	0					
ANR	4216010	ArgumentList	core -> dbg -> tree		4215700	1					
ANR	4216011	Argument	core -> dbg -> tree		4215700	0					
ANR	4216012	PtrMemberAccess	core -> dbg -> tree		4215700	0					
ANR	4216013	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4216014	Identifier	core		4215700	0					
ANR	4216015	Identifier	dbg		4215700	1					
ANR	4216016	Identifier	tree		4215700	1					
ANR	4216017	ExpressionStatement	core -> dbg -> trace -> enabled = t	3832:1:109805:109834	4215700	13	True				
ANR	4216018	AssignmentExpression	core -> dbg -> trace -> enabled = t		4215700	0		=			
ANR	4216019	PtrMemberAccess	core -> dbg -> trace -> enabled		4215700	0					
ANR	4216020	PtrMemberAccess	core -> dbg -> trace		4215700	0					
ANR	4216021	PtrMemberAccess	core -> dbg		4215700	0					
ANR	4216022	Identifier	core		4215700	0					
ANR	4216023	Identifier	dbg		4215700	1					
ANR	4216024	Identifier	trace		4215700	1					
ANR	4216025	Identifier	enabled		4215700	1					
ANR	4216026	Identifier	t		4215700	1					
ANR	4216027	ExpressionStatement	r_cons_break_pop ( )	3833:1:109837:109856	4215700	14	True				
ANR	4216028	CallExpression	r_cons_break_pop ( )		4215700	0					
ANR	4216029	Callee	r_cons_break_pop		4215700	0					
ANR	4216030	Identifier	r_cons_break_pop		4215700	0					
ANR	4216031	ArgumentList			4215700	1					
ANR	4216032	ReturnType	static void		4215700	1					
ANR	4216033	Identifier	debug_trace_calls		4215700	2					
ANR	4216034	ParameterList	"RCore * core , const char * input"		4215700	3					
ANR	4216035	Parameter	RCore * core	3790:30:108579:108589	4215700	0	True				
ANR	4216036	ParameterType	RCore *		4215700	0					
ANR	4216037	Identifier	core		4215700	1					
ANR	4216038	Parameter	const char * input	3790:43:108592:108608	4215700	1	True				
ANR	4216039	ParameterType	const char *		4215700	0					
ANR	4216040	Identifier	input		4215700	1					
ANR	4216041	CFGEntryNode	ENTRY		4215700		True				
ANR	4216042	CFGExitNode	EXIT		4215700		True				
ANR	4216043	Symbol	* core		4215700						
ANR	4216044	Symbol	* input		4215700						
ANR	4216045	Symbol	r_debug_bp_add		4215700						
ANR	4216046	Symbol	strchr		4215700						
ANR	4216047	Symbol	* core -> dbg -> trace		4215700						
ANR	4216048	Symbol	core -> dbg -> bp		4215700						
ANR	4216049	Symbol	r_num_math		4215700						
ANR	4216050	Symbol	core -> dbg -> trace		4215700						
ANR	4216051	Symbol	_core		4215700						
ANR	4216052	Symbol	from		4215700						
ANR	4216053	Symbol	UT64_MAX		4215700						
ANR	4216054	Symbol	final_addr		4215700						
ANR	4216055	Symbol	core -> num		4215700						
ANR	4216056	Symbol	bp_final		4215700						
ANR	4216057	Symbol	* * core		4215700						
ANR	4216058	Symbol	core -> config		4215700						
ANR	4216059	Symbol	NULL		4215700						
ANR	4216060	Symbol	core -> dbg -> tree		4215700						
ANR	4216061	Symbol	false		4215700						
ANR	4216062	Symbol	hwbp		4215700						
ANR	4216063	Symbol	core		4215700						
ANR	4216064	Symbol	input		4215700						
ANR	4216065	Symbol	* * * core		4215700						
ANR	4216066	Symbol	r_debug_is_dead		4215700						
ANR	4216067	Symbol	core -> dbg -> trace -> enabled		4215700						
ANR	4216068	Symbol	t		4215700						
ANR	4216069	Symbol	core -> dbg -> reg		4215700						
ANR	4216070	Symbol	static_debug_stop		4215700						
ANR	4216071	Symbol	r_config_get_i		4215700						
ANR	4216072	Symbol	r_str_trim_ro		4215700						
ANR	4216073	Symbol	true		4215700						
ANR	4216074	Symbol	to		4215700						
ANR	4216075	Symbol	first_n		4215700						
ANR	4216076	Symbol	* core -> dbg		4215700						
ANR	4216077	Symbol	core -> dbg		4215700						
ANR	4216078	Symbol	* * core -> dbg		4215700						
ANR	4216079	Function	r_core_debug_esil	3836:0:109861:112283							
ANR	4216080	FunctionDef	"r_core_debug_esil (RCore * core , const char * input)"		4216079	0					
ANR	4216081	CompoundStatement		3836:63:109924:112283	4216079	0					
ANR	4216082	SwitchStatement	switch ( input [ 0 ] )		4216079	0					
ANR	4216083	Condition	input [ 0 ]	3837:9:109935:109942	4216079	0	True				
ANR	4216084	ArrayIndexing	input [ 0 ]		4216079	0					
ANR	4216085	Identifier	input		4216079	0					
ANR	4216086	PrimaryExpression	0		4216079	1					
ANR	4216087	CompoundStatement		2:19:20:20	4216079	1					
ANR	4216088	Label	case '\\0' :	3838:1:109948:109957	4216079	0	True				
ANR	4216089	ExpressionStatement	r_debug_esil_watch_list ( core -> dbg )	3840:2:109979:110014	4216079	1	True				
ANR	4216090	CallExpression	r_debug_esil_watch_list ( core -> dbg )		4216079	0					
ANR	4216091	Callee	r_debug_esil_watch_list		4216079	0					
ANR	4216092	Identifier	r_debug_esil_watch_list		4216079	0					
ANR	4216093	ArgumentList	core -> dbg		4216079	1					
ANR	4216094	Argument	core -> dbg		4216079	0					
ANR	4216095	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216096	Identifier	core		4216079	0					
ANR	4216097	Identifier	dbg		4216079	1					
ANR	4216098	BreakStatement	break ;	3841:2:110018:110023	4216079	2	True				
ANR	4216099	Label	case ' ' :	3842:1:110026:110034	4216079	3	True				
ANR	4216100	CompoundStatement		12:3:196:217	4216079	4					
ANR	4216101	IdentifierDeclStatement	char * line = strdup ( input + 1 ) ;	3844:3:110052:110083	4216079	0	True				
ANR	4216102	IdentifierDecl	* line = strdup ( input + 1 )		4216079	0					
ANR	4216103	IdentifierDeclType	char *		4216079	0					
ANR	4216104	Identifier	line		4216079	1					
ANR	4216105	AssignmentExpression	* line = strdup ( input + 1 )		4216079	2		=			
ANR	4216106	Identifier	line		4216079	0					
ANR	4216107	CallExpression	strdup ( input + 1 )		4216079	1					
ANR	4216108	Callee	strdup		4216079	0					
ANR	4216109	Identifier	strdup		4216079	0					
ANR	4216110	ArgumentList	input + 1		4216079	1					
ANR	4216111	Argument	input + 1		4216079	0					
ANR	4216112	AdditiveExpression	input + 1		4216079	0		+			
ANR	4216113	Identifier	input		4216079	0					
ANR	4216114	PrimaryExpression	1		4216079	1					
ANR	4216115	IdentifierDeclStatement	"char * p , * q ;"	3845:3:110088:110099	4216079	1	True				
ANR	4216116	IdentifierDecl	* p		4216079	0					
ANR	4216117	IdentifierDeclType	char *		4216079	0					
ANR	4216118	Identifier	p		4216079	1					
ANR	4216119	IdentifierDecl	* q		4216079	1					
ANR	4216120	IdentifierDeclType	char *		4216079	0					
ANR	4216121	Identifier	q		4216079	1					
ANR	4216122	IdentifierDeclStatement	int done = 0 ;	3846:3:110104:110116	4216079	2	True				
ANR	4216123	IdentifierDecl	done = 0		4216079	0					
ANR	4216124	IdentifierDeclType	int		4216079	0					
ANR	4216125	Identifier	done		4216079	1					
ANR	4216126	AssignmentExpression	done = 0		4216079	2		=			
ANR	4216127	Identifier	done		4216079	0					
ANR	4216128	PrimaryExpression	0		4216079	1					
ANR	4216129	IdentifierDeclStatement	"int perm = 0 , dev = 0 ;"	3847:3:110121:110142	4216079	3	True				
ANR	4216130	IdentifierDecl	perm = 0		4216079	0					
ANR	4216131	IdentifierDeclType	int		4216079	0					
ANR	4216132	Identifier	perm		4216079	1					
ANR	4216133	AssignmentExpression	perm = 0		4216079	2		=			
ANR	4216134	Identifier	perm		4216079	0					
ANR	4216135	PrimaryExpression	0		4216079	1					
ANR	4216136	IdentifierDecl	dev = 0		4216079	1					
ANR	4216137	IdentifierDeclType	int		4216079	0					
ANR	4216138	Identifier	dev		4216079	1					
ANR	4216139	AssignmentExpression	dev = 0		4216079	2		=			
ANR	4216140	Identifier	dev		4216079	0					
ANR	4216141	PrimaryExpression	0		4216079	1					
ANR	4216142	ExpressionStatement	"p = strchr ( line , ' ' )"	3848:3:110147:110169	4216079	4	True				
ANR	4216143	AssignmentExpression	"p = strchr ( line , ' ' )"		4216079	0		=			
ANR	4216144	Identifier	p		4216079	0					
ANR	4216145	CallExpression	"strchr ( line , ' ' )"		4216079	1					
ANR	4216146	Callee	strchr		4216079	0					
ANR	4216147	Identifier	strchr		4216079	0					
ANR	4216148	ArgumentList	line		4216079	1					
ANR	4216149	Argument	line		4216079	0					
ANR	4216150	Identifier	line		4216079	0					
ANR	4216151	Argument	' '		4216079	1					
ANR	4216152	PrimaryExpression	' '		4216079	0					
ANR	4216153	IfStatement	if ( p )		4216079	5					
ANR	4216154	Condition	p	3849:7:110178:110178	4216079	0	True				
ANR	4216155	Identifier	p		4216079	0					
ANR	4216156	CompoundStatement		14:10:256:256	4216079	1					
ANR	4216157	ExpressionStatement	* p ++ = 0	3850:4:110187:110195	4216079	0	True				
ANR	4216158	AssignmentExpression	* p ++ = 0		4216079	0		=			
ANR	4216159	UnaryOperationExpression	* p ++		4216079	0					
ANR	4216160	UnaryOperator	*		4216079	0					
ANR	4216161	PostIncDecOperationExpression	p ++		4216079	1					
ANR	4216162	Identifier	p		4216079	0					
ANR	4216163	IncDec	++		4216079	1					
ANR	4216164	PrimaryExpression	0		4216079	1					
ANR	4216165	IfStatement	"if ( strchr ( line , 'r' ) )"		4216079	1					
ANR	4216166	Condition	"strchr ( line , 'r' )"	3851:8:110205:110222	4216079	0	True				
ANR	4216167	CallExpression	"strchr ( line , 'r' )"		4216079	0					
ANR	4216168	Callee	strchr		4216079	0					
ANR	4216169	Identifier	strchr		4216079	0					
ANR	4216170	ArgumentList	line		4216079	1					
ANR	4216171	Argument	line		4216079	0					
ANR	4216172	Identifier	line		4216079	0					
ANR	4216173	Argument	'r'		4216079	1					
ANR	4216174	PrimaryExpression	'r'		4216079	0					
ANR	4216175	ExpressionStatement	perm |= R_PERM_R	3851:28:110225:110241	4216079	1	True				
ANR	4216176	AssignmentExpression	perm |= R_PERM_R		4216079	0		|=			
ANR	4216177	Identifier	perm		4216079	0					
ANR	4216178	Identifier	R_PERM_R		4216079	1					
ANR	4216179	IfStatement	"if ( strchr ( line , 'w' ) )"		4216079	2					
ANR	4216180	Condition	"strchr ( line , 'w' )"	3852:8:110251:110268	4216079	0	True				
ANR	4216181	CallExpression	"strchr ( line , 'w' )"		4216079	0					
ANR	4216182	Callee	strchr		4216079	0					
ANR	4216183	Identifier	strchr		4216079	0					
ANR	4216184	ArgumentList	line		4216079	1					
ANR	4216185	Argument	line		4216079	0					
ANR	4216186	Identifier	line		4216079	0					
ANR	4216187	Argument	'w'		4216079	1					
ANR	4216188	PrimaryExpression	'w'		4216079	0					
ANR	4216189	ExpressionStatement	perm |= R_PERM_W	3852:28:110271:110287	4216079	1	True				
ANR	4216190	AssignmentExpression	perm |= R_PERM_W		4216079	0		|=			
ANR	4216191	Identifier	perm		4216079	0					
ANR	4216192	Identifier	R_PERM_W		4216079	1					
ANR	4216193	IfStatement	"if ( strchr ( line , 'x' ) )"		4216079	3					
ANR	4216194	Condition	"strchr ( line , 'x' )"	3853:8:110297:110314	4216079	0	True				
ANR	4216195	CallExpression	"strchr ( line , 'x' )"		4216079	0					
ANR	4216196	Callee	strchr		4216079	0					
ANR	4216197	Identifier	strchr		4216079	0					
ANR	4216198	ArgumentList	line		4216079	1					
ANR	4216199	Argument	line		4216079	0					
ANR	4216200	Identifier	line		4216079	0					
ANR	4216201	Argument	'x'		4216079	1					
ANR	4216202	PrimaryExpression	'x'		4216079	0					
ANR	4216203	ExpressionStatement	perm |= R_PERM_X	3853:28:110317:110333	4216079	1	True				
ANR	4216204	AssignmentExpression	perm |= R_PERM_X		4216079	0		|=			
ANR	4216205	Identifier	perm		4216079	0					
ANR	4216206	Identifier	R_PERM_X		4216079	1					
ANR	4216207	ExpressionStatement	"q = strchr ( p , ' ' )"	3854:4:110339:110358	4216079	4	True				
ANR	4216208	AssignmentExpression	"q = strchr ( p , ' ' )"		4216079	0		=			
ANR	4216209	Identifier	q		4216079	0					
ANR	4216210	CallExpression	"strchr ( p , ' ' )"		4216079	1					
ANR	4216211	Callee	strchr		4216079	0					
ANR	4216212	Identifier	strchr		4216079	0					
ANR	4216213	ArgumentList	p		4216079	1					
ANR	4216214	Argument	p		4216079	0					
ANR	4216215	Identifier	p		4216079	0					
ANR	4216216	Argument	' '		4216079	1					
ANR	4216217	PrimaryExpression	' '		4216079	0					
ANR	4216218	IfStatement	if ( q )		4216079	5					
ANR	4216219	Condition	q	3855:8:110368:110368	4216079	0	True				
ANR	4216220	Identifier	q		4216079	0					
ANR	4216221	CompoundStatement		20:11:446:446	4216079	1					
ANR	4216222	ExpressionStatement	* q ++ = 0	3856:5:110378:110386	4216079	0	True				
ANR	4216223	AssignmentExpression	* q ++ = 0		4216079	0		=			
ANR	4216224	UnaryOperationExpression	* q ++		4216079	0					
ANR	4216225	UnaryOperator	*		4216079	0					
ANR	4216226	PostIncDecOperationExpression	q ++		4216079	1					
ANR	4216227	Identifier	q		4216079	0					
ANR	4216228	IncDec	++		4216079	1					
ANR	4216229	PrimaryExpression	0		4216079	1					
ANR	4216230	ExpressionStatement	dev = p [ 0 ]	3857:5:110393:110403	4216079	1	True				
ANR	4216231	AssignmentExpression	dev = p [ 0 ]		4216079	0		=			
ANR	4216232	Identifier	dev		4216079	0					
ANR	4216233	ArrayIndexing	p [ 0 ]		4216079	1					
ANR	4216234	Identifier	p		4216079	0					
ANR	4216235	PrimaryExpression	0		4216079	1					
ANR	4216236	IfStatement	if ( q )		4216079	2					
ANR	4216237	Condition	q	3858:9:110414:110414	4216079	0	True				
ANR	4216238	Identifier	q		4216079	0					
ANR	4216239	CompoundStatement		23:12:492:492	4216079	1					
ANR	4216240	ExpressionStatement	"r_debug_esil_watch ( core -> dbg , perm , dev , q )"	3859:6:110425:110469	4216079	0	True				
ANR	4216241	CallExpression	"r_debug_esil_watch ( core -> dbg , perm , dev , q )"		4216079	0					
ANR	4216242	Callee	r_debug_esil_watch		4216079	0					
ANR	4216243	Identifier	r_debug_esil_watch		4216079	0					
ANR	4216244	ArgumentList	core -> dbg		4216079	1					
ANR	4216245	Argument	core -> dbg		4216079	0					
ANR	4216246	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216247	Identifier	core		4216079	0					
ANR	4216248	Identifier	dbg		4216079	1					
ANR	4216249	Argument	perm		4216079	1					
ANR	4216250	Identifier	perm		4216079	0					
ANR	4216251	Argument	dev		4216079	2					
ANR	4216252	Identifier	dev		4216079	0					
ANR	4216253	Argument	q		4216079	3					
ANR	4216254	Identifier	q		4216079	0					
ANR	4216255	ExpressionStatement	done = 1	3860:6:110477:110485	4216079	1	True				
ANR	4216256	AssignmentExpression	done = 1		4216079	0		=			
ANR	4216257	Identifier	done		4216079	0					
ANR	4216258	PrimaryExpression	1		4216079	1					
ANR	4216259	IfStatement	if ( ! done )		4216079	6					
ANR	4216260	Condition	! done	3864:7:110512:110516	4216079	0	True				
ANR	4216261	UnaryOperationExpression	! done		4216079	0					
ANR	4216262	UnaryOperator	!		4216079	0					
ANR	4216263	Identifier	done		4216079	1					
ANR	4216264	CompoundStatement		30:4:600:694	4216079	1					
ANR	4216265	IdentifierDeclStatement	"const char * help_de_msg [ ] = { ""Usage:"" , ""de"" , "" [perm] [reg|mem] [expr]"" , NULL } ;"	3865:4:110525:110619	4216079	0	True				
ANR	4216266	IdentifierDecl	"* help_de_msg [ ] = { ""Usage:"" , ""de"" , "" [perm] [reg|mem] [expr]"" , NULL }"		4216079	0					
ANR	4216267	IdentifierDeclType	const char * [ ]		4216079	0					
ANR	4216268	Identifier	help_de_msg		4216079	1					
ANR	4216269	AssignmentExpression	"* help_de_msg [ ] = { ""Usage:"" , ""de"" , "" [perm] [reg|mem] [expr]"" , NULL }"		4216079	2		=			
ANR	4216270	Identifier	help_de_msg		4216079	0					
ANR	4216271	InitializerList	"""Usage:"""		4216079	1					
ANR	4216272	PrimaryExpression	"""Usage:"""		4216079	0					
ANR	4216273	PrimaryExpression	"""de"""		4216079	1					
ANR	4216274	PrimaryExpression	""" [perm] [reg|mem] [expr]"""		4216079	2					
ANR	4216275	Identifier	NULL		4216079	3					
ANR	4216276	ExpressionStatement	"r_core_cmd_help ( core , help_de_msg )"	3869:4:110625:110660	4216079	1	True				
ANR	4216277	CallExpression	"r_core_cmd_help ( core , help_de_msg )"		4216079	0					
ANR	4216278	Callee	r_core_cmd_help		4216079	0					
ANR	4216279	Identifier	r_core_cmd_help		4216079	0					
ANR	4216280	ArgumentList	core		4216079	1					
ANR	4216281	Argument	core		4216079	0					
ANR	4216282	Identifier	core		4216079	0					
ANR	4216283	Argument	help_de_msg		4216079	1					
ANR	4216284	Identifier	help_de_msg		4216079	0					
ANR	4216285	ExpressionStatement	free ( line )	3871:3:110670:110681	4216079	7	True				
ANR	4216286	CallExpression	free ( line )		4216079	0					
ANR	4216287	Callee	free		4216079	0					
ANR	4216288	Identifier	free		4216079	0					
ANR	4216289	ArgumentList	line		4216079	1					
ANR	4216290	Argument	line		4216079	0					
ANR	4216291	Identifier	line		4216079	0					
ANR	4216292	BreakStatement	break ;	3873:2:110689:110694	4216079	5	True				
ANR	4216293	Label	case '-' :	3874:1:110697:110705	4216079	6	True				
ANR	4216294	ExpressionStatement	r_debug_esil_watch_reset ( core -> dbg )	3875:2:110718:110754	4216079	7	True				
ANR	4216295	CallExpression	r_debug_esil_watch_reset ( core -> dbg )		4216079	0					
ANR	4216296	Callee	r_debug_esil_watch_reset		4216079	0					
ANR	4216297	Identifier	r_debug_esil_watch_reset		4216079	0					
ANR	4216298	ArgumentList	core -> dbg		4216079	1					
ANR	4216299	Argument	core -> dbg		4216079	0					
ANR	4216300	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216301	Identifier	core		4216079	0					
ANR	4216302	Identifier	dbg		4216079	1					
ANR	4216303	BreakStatement	break ;	3876:2:110758:110763	4216079	8	True				
ANR	4216304	Label	case 'c' :	3877:1:110766:110774	4216079	9	True				
ANR	4216305	IfStatement	if ( r_debug_esil_watch_empty ( core -> dbg ) )		4216079	10					
ANR	4216306	Condition	r_debug_esil_watch_empty ( core -> dbg )	3878:6:110791:110826	4216079	0	True				
ANR	4216307	CallExpression	r_debug_esil_watch_empty ( core -> dbg )		4216079	0					
ANR	4216308	Callee	r_debug_esil_watch_empty		4216079	0					
ANR	4216309	Identifier	r_debug_esil_watch_empty		4216079	0					
ANR	4216310	ArgumentList	core -> dbg		4216079	1					
ANR	4216311	Argument	core -> dbg		4216079	0					
ANR	4216312	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216313	Identifier	core		4216079	0					
ANR	4216314	Identifier	dbg		4216079	1					
ANR	4216315	CompoundStatement		43:44:904:904	4216079	1					
ANR	4216316	ExpressionStatement	"eprintf ( ""Error: no esil watchpoints defined\\n"" )"	3879:3:110834:110882	4216079	0	True				
ANR	4216317	CallExpression	"eprintf ( ""Error: no esil watchpoints defined\\n"" )"		4216079	0					
ANR	4216318	Callee	eprintf		4216079	0					
ANR	4216319	Identifier	eprintf		4216079	0					
ANR	4216320	ArgumentList	"""Error: no esil watchpoints defined\\n"""		4216079	1					
ANR	4216321	Argument	"""Error: no esil watchpoints defined\\n"""		4216079	0					
ANR	4216322	PrimaryExpression	"""Error: no esil watchpoints defined\\n"""		4216079	0					
ANR	4216323	ElseStatement	else		4216079	0					
ANR	4216324	CompoundStatement		45:9:968:968	4216079	0					
ANR	4216325	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	3881:3:110898:110923	4216079	0	True				
ANR	4216326	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		4216079	0					
ANR	4216327	Callee	r_core_cmd0		4216079	0					
ANR	4216328	Identifier	r_core_cmd0		4216079	0					
ANR	4216329	ArgumentList	core		4216079	1					
ANR	4216330	Argument	core		4216079	0					
ANR	4216331	Identifier	core		4216079	0					
ANR	4216332	Argument	"""aei"""		4216079	1					
ANR	4216333	PrimaryExpression	"""aei"""		4216079	0					
ANR	4216334	ExpressionStatement	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"	3882:3:110928:111007	4216079	1	True				
ANR	4216335	CallExpression	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"		4216079	0					
ANR	4216336	Callee	r_debug_esil_prestep		4216079	0					
ANR	4216337	Identifier	r_debug_esil_prestep		4216079	0					
ANR	4216338	ArgumentList	core -> dbg		4216079	1					
ANR	4216339	Argument	core -> dbg		4216079	0					
ANR	4216340	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216341	Identifier	core		4216079	0					
ANR	4216342	Identifier	dbg		4216079	1					
ANR	4216343	Argument	"r_config_get_i ( core -> config , ""esil.prestep"" )"		4216079	1					
ANR	4216344	CallExpression	"r_config_get_i ( core -> config , ""esil.prestep"" )"		4216079	0					
ANR	4216345	Callee	r_config_get_i		4216079	0					
ANR	4216346	Identifier	r_config_get_i		4216079	0					
ANR	4216347	ArgumentList	core -> config		4216079	1					
ANR	4216348	Argument	core -> config		4216079	0					
ANR	4216349	PtrMemberAccess	core -> config		4216079	0					
ANR	4216350	Identifier	core		4216079	0					
ANR	4216351	Identifier	config		4216079	1					
ANR	4216352	Argument	"""esil.prestep"""		4216079	1					
ANR	4216353	PrimaryExpression	"""esil.prestep"""		4216079	0					
ANR	4216354	ExpressionStatement	r_debug_esil_continue ( core -> dbg )	3883:3:111012:111045	4216079	2	True				
ANR	4216355	CallExpression	r_debug_esil_continue ( core -> dbg )		4216079	0					
ANR	4216356	Callee	r_debug_esil_continue		4216079	0					
ANR	4216357	Identifier	r_debug_esil_continue		4216079	0					
ANR	4216358	ArgumentList	core -> dbg		4216079	1					
ANR	4216359	Argument	core -> dbg		4216079	0					
ANR	4216360	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216361	Identifier	core		4216079	0					
ANR	4216362	Identifier	dbg		4216079	1					
ANR	4216363	BreakStatement	break ;	3885:2:111053:111058	4216079	11	True				
ANR	4216364	Label	case 's' :	3886:1:111061:111069	4216079	12	True				
ANR	4216365	IfStatement	if ( input [ 1 ] == 'u' && input [ 2 ] == ' ' )		4216079	13					
ANR	4216366	Condition	input [ 1 ] == 'u' && input [ 2 ] == ' '	3887:6:111086:111119	4216079	0	True				
ANR	4216367	AndExpression	input [ 1 ] == 'u' && input [ 2 ] == ' '		4216079	0		&&			
ANR	4216368	EqualityExpression	input [ 1 ] == 'u'		4216079	0		==			
ANR	4216369	ArrayIndexing	input [ 1 ]		4216079	0					
ANR	4216370	Identifier	input		4216079	0					
ANR	4216371	PrimaryExpression	1		4216079	1					
ANR	4216372	PrimaryExpression	'u'		4216079	1					
ANR	4216373	EqualityExpression	input [ 2 ] == ' '		4216079	1		==			
ANR	4216374	ArrayIndexing	input [ 2 ]		4216079	0					
ANR	4216375	Identifier	input		4216079	0					
ANR	4216376	PrimaryExpression	2		4216079	1					
ANR	4216377	PrimaryExpression	' '		4216079	1					
ANR	4216378	CompoundStatement		53:3:1212:1269	4216079	1					
ANR	4216379	IdentifierDeclStatement	"ut64 addr , naddr , fin = r_num_math ( core -> num , input + 2 ) ;"	3888:3:111137:111194	4216079	0	True				
ANR	4216380	IdentifierDecl	addr		4216079	0					
ANR	4216381	IdentifierDeclType	ut64		4216079	0					
ANR	4216382	Identifier	addr		4216079	1					
ANR	4216383	IdentifierDecl	naddr		4216079	1					
ANR	4216384	IdentifierDeclType	ut64		4216079	0					
ANR	4216385	Identifier	naddr		4216079	1					
ANR	4216386	IdentifierDecl	"fin = r_num_math ( core -> num , input + 2 )"		4216079	2					
ANR	4216387	IdentifierDeclType	ut64		4216079	0					
ANR	4216388	Identifier	fin		4216079	1					
ANR	4216389	AssignmentExpression	"fin = r_num_math ( core -> num , input + 2 )"		4216079	2		=			
ANR	4216390	Identifier	fin		4216079	0					
ANR	4216391	CallExpression	"r_num_math ( core -> num , input + 2 )"		4216079	1					
ANR	4216392	Callee	r_num_math		4216079	0					
ANR	4216393	Identifier	r_num_math		4216079	0					
ANR	4216394	ArgumentList	core -> num		4216079	1					
ANR	4216395	Argument	core -> num		4216079	0					
ANR	4216396	PtrMemberAccess	core -> num		4216079	0					
ANR	4216397	Identifier	core		4216079	0					
ANR	4216398	Identifier	num		4216079	1					
ANR	4216399	Argument	input + 2		4216079	1					
ANR	4216400	AdditiveExpression	input + 2		4216079	0		+			
ANR	4216401	Identifier	input		4216079	0					
ANR	4216402	PrimaryExpression	2		4216079	1					
ANR	4216403	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	3889:3:111199:111224	4216079	1	True				
ANR	4216404	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		4216079	0					
ANR	4216405	Callee	r_core_cmd0		4216079	0					
ANR	4216406	Identifier	r_core_cmd0		4216079	0					
ANR	4216407	ArgumentList	core		4216079	1					
ANR	4216408	Argument	core		4216079	0					
ANR	4216409	Identifier	core		4216079	0					
ANR	4216410	Argument	"""aei"""		4216079	1					
ANR	4216411	PrimaryExpression	"""aei"""		4216079	0					
ANR	4216412	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	3890:3:111229:111269	4216079	2	True				
ANR	4216413	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		4216079	0		=			
ANR	4216414	Identifier	addr		4216079	0					
ANR	4216415	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4216079	1					
ANR	4216416	Callee	r_debug_reg_get		4216079	0					
ANR	4216417	Identifier	r_debug_reg_get		4216079	0					
ANR	4216418	ArgumentList	core -> dbg		4216079	1					
ANR	4216419	Argument	core -> dbg		4216079	0					
ANR	4216420	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216421	Identifier	core		4216079	0					
ANR	4216422	Identifier	dbg		4216079	1					
ANR	4216423	Argument	"""PC"""		4216079	1					
ANR	4216424	PrimaryExpression	"""PC"""		4216079	0					
ANR	4216425	WhileStatement	while ( addr != fin )		4216079	3					
ANR	4216426	Condition	addr != fin	3891:10:111281:111291	4216079	0	True				
ANR	4216427	EqualityExpression	addr != fin		4216079	0		!=			
ANR	4216428	Identifier	addr		4216079	0					
ANR	4216429	Identifier	fin		4216079	1					
ANR	4216430	CompoundStatement		56:23:1369:1369	4216079	1					
ANR	4216431	ExpressionStatement	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"	3892:4:111300:111387	4216079	0	True				
ANR	4216432	CallExpression	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"		4216079	0					
ANR	4216433	Callee	r_debug_esil_prestep		4216079	0					
ANR	4216434	Identifier	r_debug_esil_prestep		4216079	0					
ANR	4216435	ArgumentList	core -> dbg		4216079	1					
ANR	4216436	Argument	core -> dbg		4216079	0					
ANR	4216437	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216438	Identifier	core		4216079	0					
ANR	4216439	Identifier	dbg		4216079	1					
ANR	4216440	Argument	"r_config_get_i ( core -> config , ""esil.prestep"" )"		4216079	1					
ANR	4216441	CallExpression	"r_config_get_i ( core -> config , ""esil.prestep"" )"		4216079	0					
ANR	4216442	Callee	r_config_get_i		4216079	0					
ANR	4216443	Identifier	r_config_get_i		4216079	0					
ANR	4216444	ArgumentList	core -> config		4216079	1					
ANR	4216445	Argument	core -> config		4216079	0					
ANR	4216446	PtrMemberAccess	core -> config		4216079	0					
ANR	4216447	Identifier	core		4216079	0					
ANR	4216448	Identifier	config		4216079	1					
ANR	4216449	Argument	"""esil.prestep"""		4216079	1					
ANR	4216450	PrimaryExpression	"""esil.prestep"""		4216079	0					
ANR	4216451	ExpressionStatement	"r_debug_esil_step ( core -> dbg , 1 )"	3894:4:111393:111425	4216079	1	True				
ANR	4216452	CallExpression	"r_debug_esil_step ( core -> dbg , 1 )"		4216079	0					
ANR	4216453	Callee	r_debug_esil_step		4216079	0					
ANR	4216454	Identifier	r_debug_esil_step		4216079	0					
ANR	4216455	ArgumentList	core -> dbg		4216079	1					
ANR	4216456	Argument	core -> dbg		4216079	0					
ANR	4216457	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216458	Identifier	core		4216079	0					
ANR	4216459	Identifier	dbg		4216079	1					
ANR	4216460	Argument	1		4216079	1					
ANR	4216461	PrimaryExpression	1		4216079	0					
ANR	4216462	ExpressionStatement	"naddr = r_debug_reg_get ( core -> dbg , ""PC"" )"	3895:4:111431:111472	4216079	2	True				
ANR	4216463	AssignmentExpression	"naddr = r_debug_reg_get ( core -> dbg , ""PC"" )"		4216079	0		=			
ANR	4216464	Identifier	naddr		4216079	0					
ANR	4216465	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4216079	1					
ANR	4216466	Callee	r_debug_reg_get		4216079	0					
ANR	4216467	Identifier	r_debug_reg_get		4216079	0					
ANR	4216468	ArgumentList	core -> dbg		4216079	1					
ANR	4216469	Argument	core -> dbg		4216079	0					
ANR	4216470	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216471	Identifier	core		4216079	0					
ANR	4216472	Identifier	dbg		4216079	1					
ANR	4216473	Argument	"""PC"""		4216079	1					
ANR	4216474	PrimaryExpression	"""PC"""		4216079	0					
ANR	4216475	IfStatement	if ( naddr == addr )		4216079	3					
ANR	4216476	Condition	naddr == addr	3896:8:111482:111494	4216079	0	True				
ANR	4216477	EqualityExpression	naddr == addr		4216079	0		==			
ANR	4216478	Identifier	naddr		4216079	0					
ANR	4216479	Identifier	addr		4216079	1					
ANR	4216480	CompoundStatement		61:23:1572:1572	4216079	1					
ANR	4216481	ExpressionStatement	"eprintf ( ""Detected loophole\\n"" )"	3897:5:111504:111535	4216079	0	True				
ANR	4216482	CallExpression	"eprintf ( ""Detected loophole\\n"" )"		4216079	0					
ANR	4216483	Callee	eprintf		4216079	0					
ANR	4216484	Identifier	eprintf		4216079	0					
ANR	4216485	ArgumentList	"""Detected loophole\\n"""		4216079	1					
ANR	4216486	Argument	"""Detected loophole\\n"""		4216079	0					
ANR	4216487	PrimaryExpression	"""Detected loophole\\n"""		4216079	0					
ANR	4216488	BreakStatement	break ;	3898:5:111542:111547	4216079	1	True				
ANR	4216489	ExpressionStatement	addr = naddr	3900:4:111559:111571	4216079	4	True				
ANR	4216490	AssignmentExpression	addr = naddr		4216079	0		=			
ANR	4216491	Identifier	addr		4216079	0					
ANR	4216492	Identifier	naddr		4216079	1					
ANR	4216493	ElseStatement	else		4216079	0					
ANR	4216494	IfStatement	if ( input [ 1 ] == '?' || ! input [ 1 ] )		4216079	0					
ANR	4216495	Condition	input [ 1 ] == '?' || ! input [ 1 ]	3902:13:111591:111618	4216079	0	True				
ANR	4216496	OrExpression	input [ 1 ] == '?' || ! input [ 1 ]		4216079	0		||			
ANR	4216497	EqualityExpression	input [ 1 ] == '?'		4216079	0		==			
ANR	4216498	ArrayIndexing	input [ 1 ]		4216079	0					
ANR	4216499	Identifier	input		4216079	0					
ANR	4216500	PrimaryExpression	1		4216079	1					
ANR	4216501	PrimaryExpression	'?'		4216079	1					
ANR	4216502	UnaryOperationExpression	! input [ 1 ]		4216079	1					
ANR	4216503	UnaryOperator	!		4216079	0					
ANR	4216504	ArrayIndexing	input [ 1 ]		4216079	1					
ANR	4216505	Identifier	input		4216079	0					
ANR	4216506	PrimaryExpression	1		4216079	1					
ANR	4216507	CompoundStatement		67:43:1696:1696	4216079	1					
ANR	4216508	ExpressionStatement	"r_core_cmd_help ( core , help_msg_des )"	3903:3:111626:111662	4216079	0	True				
ANR	4216509	CallExpression	"r_core_cmd_help ( core , help_msg_des )"		4216079	0					
ANR	4216510	Callee	r_core_cmd_help		4216079	0					
ANR	4216511	Identifier	r_core_cmd_help		4216079	0					
ANR	4216512	ArgumentList	core		4216079	1					
ANR	4216513	Argument	core		4216079	0					
ANR	4216514	Identifier	core		4216079	0					
ANR	4216515	Argument	help_msg_des		4216079	1					
ANR	4216516	Identifier	help_msg_des		4216079	0					
ANR	4216517	ElseStatement	else		4216079	0					
ANR	4216518	CompoundStatement		69:9:1748:1748	4216079	0					
ANR	4216519	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	3905:3:111678:111703	4216079	0	True				
ANR	4216520	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		4216079	0					
ANR	4216521	Callee	r_core_cmd0		4216079	0					
ANR	4216522	Identifier	r_core_cmd0		4216079	0					
ANR	4216523	ArgumentList	core		4216079	1					
ANR	4216524	Argument	core		4216079	0					
ANR	4216525	Identifier	core		4216079	0					
ANR	4216526	Argument	"""aei"""		4216079	1					
ANR	4216527	PrimaryExpression	"""aei"""		4216079	0					
ANR	4216528	ExpressionStatement	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"	3906:3:111708:111787	4216079	1	True				
ANR	4216529	CallExpression	"r_debug_esil_prestep ( core -> dbg , r_config_get_i ( core -> config , ""esil.prestep"" ) )"		4216079	0					
ANR	4216530	Callee	r_debug_esil_prestep		4216079	0					
ANR	4216531	Identifier	r_debug_esil_prestep		4216079	0					
ANR	4216532	ArgumentList	core -> dbg		4216079	1					
ANR	4216533	Argument	core -> dbg		4216079	0					
ANR	4216534	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216535	Identifier	core		4216079	0					
ANR	4216536	Identifier	dbg		4216079	1					
ANR	4216537	Argument	"r_config_get_i ( core -> config , ""esil.prestep"" )"		4216079	1					
ANR	4216538	CallExpression	"r_config_get_i ( core -> config , ""esil.prestep"" )"		4216079	0					
ANR	4216539	Callee	r_config_get_i		4216079	0					
ANR	4216540	Identifier	r_config_get_i		4216079	0					
ANR	4216541	ArgumentList	core -> config		4216079	1					
ANR	4216542	Argument	core -> config		4216079	0					
ANR	4216543	PtrMemberAccess	core -> config		4216079	0					
ANR	4216544	Identifier	core		4216079	0					
ANR	4216545	Identifier	config		4216079	1					
ANR	4216546	Argument	"""esil.prestep"""		4216079	1					
ANR	4216547	PrimaryExpression	"""esil.prestep"""		4216079	0					
ANR	4216548	ExpressionStatement	"r_debug_esil_step ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"	3908:3:111807:111871	4216079	2	True				
ANR	4216549	CallExpression	"r_debug_esil_step ( core -> dbg , r_num_math ( core -> num , input + 1 ) )"		4216079	0					
ANR	4216550	Callee	r_debug_esil_step		4216079	0					
ANR	4216551	Identifier	r_debug_esil_step		4216079	0					
ANR	4216552	ArgumentList	core -> dbg		4216079	1					
ANR	4216553	Argument	core -> dbg		4216079	0					
ANR	4216554	PtrMemberAccess	core -> dbg		4216079	0					
ANR	4216555	Identifier	core		4216079	0					
ANR	4216556	Identifier	dbg		4216079	1					
ANR	4216557	Argument	"r_num_math ( core -> num , input + 1 )"		4216079	1					
ANR	4216558	CallExpression	"r_num_math ( core -> num , input + 1 )"		4216079	0					
ANR	4216559	Callee	r_num_math		4216079	0					
ANR	4216560	Identifier	r_num_math		4216079	0					
ANR	4216561	ArgumentList	core -> num		4216079	1					
ANR	4216562	Argument	core -> num		4216079	0					
ANR	4216563	PtrMemberAccess	core -> num		4216079	0					
ANR	4216564	Identifier	core		4216079	0					
ANR	4216565	Identifier	num		4216079	1					
ANR	4216566	Argument	input + 1		4216079	1					
ANR	4216567	AdditiveExpression	input + 1		4216079	0		+			
ANR	4216568	Identifier	input		4216079	0					
ANR	4216569	PrimaryExpression	1		4216079	1					
ANR	4216570	BreakStatement	break ;	3910:2:111879:111884	4216079	14	True				
ANR	4216571	Label	case '?' :	3911:1:111887:111895	4216079	15	True				
ANR	4216572	Label	default :	3912:1:111907:111914	4216079	16	True				
ANR	4216573	Identifier	default		4216079	0					
ANR	4216574	CompoundStatement		78:2:1993:1993	4216079	17					
ANR	4216575	ExpressionStatement	"r_core_cmd_help ( core , help_msg_de )"	3914:3:111923:111958	4216079	0	True				
ANR	4216576	CallExpression	"r_core_cmd_help ( core , help_msg_de )"		4216079	0					
ANR	4216577	Callee	r_core_cmd_help		4216079	0					
ANR	4216578	Identifier	r_core_cmd_help		4216079	0					
ANR	4216579	ArgumentList	core		4216079	1					
ANR	4216580	Argument	core		4216079	0					
ANR	4216581	Identifier	core		4216079	0					
ANR	4216582	Argument	help_msg_de		4216079	1					
ANR	4216583	Identifier	help_msg_de		4216079	0					
ANR	4216584	Statement	r_cons_printf	3916:3:112010:112022	4216079	1	True				
ANR	4216585	Statement	(	3916:17:112024:112024	4216079	2	True				
ANR	4216586	Statement	"""Examples:\\n"""	3916:18:112025:112037	4216079	3	True				
ANR	4216587	Statement	""" de r r rip       # stop when reads rip\\n"""	3917:5:112044:112086	4216079	4	True				
ANR	4216588	Statement	""" de rw m ADDR     # stop when read or write in ADDR\\n"""	3918:5:112093:112147	4216079	5	True				
ANR	4216589	Statement	""" de w r rdx       # stop when rdx register is modified\\n"""	3919:5:112154:112211	4216079	6	True				
ANR	4216590	Statement	""" de x m FROM..TO  # stop when rip in range\\n"""	3920:5:112218:112263	4216079	7	True				
ANR	4216591	Statement	)	3920:51:112264:112264	4216079	8	True				
ANR	4216592	ExpressionStatement		3920:52:112265:112265	4216079	9	True				
ANR	4216593	BreakStatement	break ;	3922:2:112273:112278	4216079	18	True				
ANR	4216594	ReturnType	static void		4216079	1					
ANR	4216595	Identifier	r_core_debug_esil		4216079	2					
ANR	4216596	ParameterList	"RCore * core , const char * input"		4216079	3					
ANR	4216597	Parameter	RCore * core	3836:31:109892:109902	4216079	0	True				
ANR	4216598	ParameterType	RCore *		4216079	0					
ANR	4216599	Identifier	core		4216079	1					
ANR	4216600	Parameter	const char * input	3836:44:109905:109921	4216079	1	True				
ANR	4216601	ParameterType	const char *		4216079	0					
ANR	4216602	Identifier	input		4216079	1					
ANR	4216603	CFGEntryNode	ENTRY		4216079		True				
ANR	4216604	CFGExitNode	EXIT		4216079		True				
ANR	4216605	Symbol	perm		4216079						
ANR	4216606	Symbol	help_msg_de		4216079						
ANR	4216607	Symbol	line		4216079						
ANR	4216608	Symbol	* q ++		4216079						
ANR	4216609	Symbol	r_debug_reg_get		4216079						
ANR	4216610	Symbol	* input		4216079						
ANR	4216611	Symbol	* core		4216079						
ANR	4216612	Symbol	strchr		4216079						
ANR	4216613	Symbol	fin		4216079						
ANR	4216614	Symbol	r_num_math		4216079						
ANR	4216615	Symbol	R_PERM_X		4216079						
ANR	4216616	Symbol	R_PERM_W		4216079						
ANR	4216617	Symbol	dev		4216079						
ANR	4216618	Symbol	help_de_msg		4216079						
ANR	4216619	Symbol	R_PERM_R		4216079						
ANR	4216620	Symbol	addr		4216079						
ANR	4216621	Symbol	core -> num		4216079						
ANR	4216622	Symbol	core -> config		4216079						
ANR	4216623	Symbol	NULL		4216079						
ANR	4216624	Symbol	naddr		4216079						
ANR	4216625	Symbol	* p ++		4216079						
ANR	4216626	Symbol	help_msg_des		4216079						
ANR	4216627	Symbol	done		4216079						
ANR	4216628	Symbol	r_debug_esil_watch_empty		4216079						
ANR	4216629	Symbol	p		4216079						
ANR	4216630	Symbol	core		4216079						
ANR	4216631	Symbol	input		4216079						
ANR	4216632	Symbol	q		4216079						
ANR	4216633	Symbol	r_config_get_i		4216079						
ANR	4216634	Symbol	* p		4216079						
ANR	4216635	Symbol	strdup		4216079						
ANR	4216636	Symbol	core -> dbg		4216079						
ANR	4216637	Function	r_core_debug_kill	3926:0:112286:114784							
ANR	4216638	FunctionDef	"r_core_debug_kill (RCore * core , const char * input)"		4216637	0					
ANR	4216639	CompoundStatement		3926:63:112349:114784	4216637	0					
ANR	4216640	IfStatement	if ( ! input || * input == '?' )		4216637	0					
ANR	4216641	Condition	! input || * input == '?'	3927:5:112356:112376	4216637	0	True				
ANR	4216642	OrExpression	! input || * input == '?'		4216637	0		||			
ANR	4216643	UnaryOperationExpression	! input		4216637	0					
ANR	4216644	UnaryOperator	!		4216637	0					
ANR	4216645	Identifier	input		4216637	1					
ANR	4216646	EqualityExpression	* input == '?'		4216637	1		==			
ANR	4216647	UnaryOperationExpression	* input		4216637	0					
ANR	4216648	UnaryOperator	*		4216637	0					
ANR	4216649	Identifier	input		4216637	1					
ANR	4216650	PrimaryExpression	'?'		4216637	1					
ANR	4216651	CompoundStatement		2:28:29:29	4216637	1					
ANR	4216652	IfStatement	if ( input && input [ 1 ] )		4216637	0					
ANR	4216653	Condition	input && input [ 1 ]	3928:6:112387:112403	4216637	0	True				
ANR	4216654	AndExpression	input && input [ 1 ]		4216637	0		&&			
ANR	4216655	Identifier	input		4216637	0					
ANR	4216656	ArrayIndexing	input [ 1 ]		4216637	1					
ANR	4216657	Identifier	input		4216637	0					
ANR	4216658	PrimaryExpression	1		4216637	1					
ANR	4216659	CompoundStatement		5:3:103:126	4216637	1					
ANR	4216660	IdentifierDeclStatement	"const char * signame , * arg = input + 1 ;"	3929:3:112411:112448	4216637	0	True				
ANR	4216661	IdentifierDecl	* signame		4216637	0					
ANR	4216662	IdentifierDeclType	const char *		4216637	0					
ANR	4216663	Identifier	signame		4216637	1					
ANR	4216664	IdentifierDecl	* arg = input + 1		4216637	1					
ANR	4216665	IdentifierDeclType	const char *		4216637	0					
ANR	4216666	Identifier	arg		4216637	1					
ANR	4216667	AssignmentExpression	* arg = input + 1		4216637	2		=			
ANR	4216668	Identifier	arg		4216637	0					
ANR	4216669	AdditiveExpression	input + 1		4216637	1		+			
ANR	4216670	Identifier	input		4216637	0					
ANR	4216671	PrimaryExpression	1		4216637	1					
ANR	4216672	IdentifierDeclStatement	int signum = atoi ( arg ) ;	3930:3:112453:112476	4216637	1	True				
ANR	4216673	IdentifierDecl	signum = atoi ( arg )		4216637	0					
ANR	4216674	IdentifierDeclType	int		4216637	0					
ANR	4216675	Identifier	signum		4216637	1					
ANR	4216676	AssignmentExpression	signum = atoi ( arg )		4216637	2		=			
ANR	4216677	Identifier	signum		4216637	0					
ANR	4216678	CallExpression	atoi ( arg )		4216637	1					
ANR	4216679	Callee	atoi		4216637	0					
ANR	4216680	Identifier	atoi		4216637	0					
ANR	4216681	ArgumentList	arg		4216637	1					
ANR	4216682	Argument	arg		4216637	0					
ANR	4216683	Identifier	arg		4216637	0					
ANR	4216684	IfStatement	if ( signum > 0 )		4216637	2					
ANR	4216685	Condition	signum > 0	3931:7:112485:112494	4216637	0	True				
ANR	4216686	RelationalExpression	signum > 0		4216637	0		>			
ANR	4216687	Identifier	signum		4216637	0					
ANR	4216688	PrimaryExpression	0		4216637	1					
ANR	4216689	CompoundStatement		6:19:147:147	4216637	1					
ANR	4216690	ExpressionStatement	signame = r_signal_to_string ( signum )	3932:4:112503:112540	4216637	0	True				
ANR	4216691	AssignmentExpression	signame = r_signal_to_string ( signum )		4216637	0		=			
ANR	4216692	Identifier	signame		4216637	0					
ANR	4216693	CallExpression	r_signal_to_string ( signum )		4216637	1					
ANR	4216694	Callee	r_signal_to_string		4216637	0					
ANR	4216695	Identifier	r_signal_to_string		4216637	0					
ANR	4216696	ArgumentList	signum		4216637	1					
ANR	4216697	Argument	signum		4216637	0					
ANR	4216698	Identifier	signum		4216637	0					
ANR	4216699	IfStatement	if ( signame )		4216637	1					
ANR	4216700	Condition	signame	3933:8:112550:112556	4216637	0	True				
ANR	4216701	Identifier	signame		4216637	0					
ANR	4216702	ExpressionStatement	r_cons_println ( signame )	3934:5:112564:112588	4216637	1	True				
ANR	4216703	CallExpression	r_cons_println ( signame )		4216637	0					
ANR	4216704	Callee	r_cons_println		4216637	0					
ANR	4216705	Identifier	r_cons_println		4216637	0					
ANR	4216706	ArgumentList	signame		4216637	1					
ANR	4216707	Argument	signame		4216637	0					
ANR	4216708	Identifier	signame		4216637	0					
ANR	4216709	ElseStatement	else		4216637	0					
ANR	4216710	CompoundStatement		10:10:250:250	4216637	0					
ANR	4216711	ExpressionStatement	signum = r_signal_from_string ( arg )	3936:4:112606:112641	4216637	0	True				
ANR	4216712	AssignmentExpression	signum = r_signal_from_string ( arg )		4216637	0		=			
ANR	4216713	Identifier	signum		4216637	0					
ANR	4216714	CallExpression	r_signal_from_string ( arg )		4216637	1					
ANR	4216715	Callee	r_signal_from_string		4216637	0					
ANR	4216716	Identifier	r_signal_from_string		4216637	0					
ANR	4216717	ArgumentList	arg		4216637	1					
ANR	4216718	Argument	arg		4216637	0					
ANR	4216719	Identifier	arg		4216637	0					
ANR	4216720	IfStatement	if ( signum > 0 )		4216637	1					
ANR	4216721	Condition	signum > 0	3937:8:112651:112660	4216637	0	True				
ANR	4216722	RelationalExpression	signum > 0		4216637	0		>			
ANR	4216723	Identifier	signum		4216637	0					
ANR	4216724	PrimaryExpression	0		4216637	1					
ANR	4216725	CompoundStatement		12:20:313:313	4216637	1					
ANR	4216726	ExpressionStatement	"r_cons_printf ( ""%d\\n"" , signum )"	3938:5:112670:112700	4216637	0	True				
ANR	4216727	CallExpression	"r_cons_printf ( ""%d\\n"" , signum )"		4216637	0					
ANR	4216728	Callee	r_cons_printf		4216637	0					
ANR	4216729	Identifier	r_cons_printf		4216637	0					
ANR	4216730	ArgumentList	"""%d\\n"""		4216637	1					
ANR	4216731	Argument	"""%d\\n"""		4216637	0					
ANR	4216732	PrimaryExpression	"""%d\\n"""		4216637	0					
ANR	4216733	Argument	signum		4216637	1					
ANR	4216734	Identifier	signum		4216637	0					
ANR	4216735	ElseStatement	else		4216637	0					
ANR	4216736	CompoundStatement		16:9:372:372	4216637	0					
ANR	4216737	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dk )"	3942:3:112727:112762	4216637	0	True				
ANR	4216738	CallExpression	"r_core_cmd_help ( core , help_msg_dk )"		4216637	0					
ANR	4216739	Callee	r_core_cmd_help		4216637	0					
ANR	4216740	Identifier	r_core_cmd_help		4216637	0					
ANR	4216741	ArgumentList	core		4216637	1					
ANR	4216742	Argument	core		4216637	0					
ANR	4216743	Identifier	core		4216637	0					
ANR	4216744	Argument	help_msg_dk		4216637	1					
ANR	4216745	Identifier	help_msg_dk		4216637	0					
ANR	4216746	ElseStatement	else		4216637	0					
ANR	4216747	IfStatement	if ( * input == 'o' )		4216637	0					
ANR	4216748	Condition	* input == 'o'	3944:12:112780:112790	4216637	0	True				
ANR	4216749	EqualityExpression	* input == 'o'		4216637	0		==			
ANR	4216750	UnaryOperationExpression	* input		4216637	0					
ANR	4216751	UnaryOperator	*		4216637	0					
ANR	4216752	Identifier	input		4216637	1					
ANR	4216753	PrimaryExpression	'o'		4216637	1					
ANR	4216754	CompoundStatement		19:25:443:443	4216637	1					
ANR	4216755	SwitchStatement	switch ( input [ 1 ] )		4216637	0					
ANR	4216756	Condition	input [ 1 ]	3945:10:112805:112812	4216637	0	True				
ANR	4216757	ArrayIndexing	input [ 1 ]		4216637	0					
ANR	4216758	Identifier	input		4216637	0					
ANR	4216759	PrimaryExpression	1		4216637	1					
ANR	4216760	CompoundStatement		20:20:465:465	4216637	1					
ANR	4216761	Label	case 0 :	3946:3:112820:112826	4216637	0	True				
ANR	4216762	ExpressionStatement	"r_debug_signal_list ( core -> dbg , 1 )"	3947:4:112866:112900	4216637	1	True				
ANR	4216763	CallExpression	"r_debug_signal_list ( core -> dbg , 1 )"		4216637	0					
ANR	4216764	Callee	r_debug_signal_list		4216637	0					
ANR	4216765	Identifier	r_debug_signal_list		4216637	0					
ANR	4216766	ArgumentList	core -> dbg		4216637	1					
ANR	4216767	Argument	core -> dbg		4216637	0					
ANR	4216768	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4216769	Identifier	core		4216637	0					
ANR	4216770	Identifier	dbg		4216637	1					
ANR	4216771	Argument	1		4216637	1					
ANR	4216772	PrimaryExpression	1		4216637	0					
ANR	4216773	BreakStatement	break ;	3948:4:112906:112911	4216637	2	True				
ANR	4216774	Label	case ' ' :	3949:3:112916:112924	4216637	3	True				
ANR	4216775	IfStatement	if ( input [ 2 ] )		4216637	4					
ANR	4216776	Condition	input [ 2 ]	3950:8:112948:112955	4216637	0	True				
ANR	4216777	ArrayIndexing	input [ 2 ]		4216637	0					
ANR	4216778	Identifier	input		4216637	0					
ANR	4216779	PrimaryExpression	2		4216637	1					
ANR	4216780	CompoundStatement		27:5:657:681	4216637	1					
ANR	4216781	IdentifierDeclStatement	"char * p , * name = strdup ( input + 2 ) ;"	3951:5:112965:113000	4216637	0	True				
ANR	4216782	IdentifierDecl	* p		4216637	0					
ANR	4216783	IdentifierDeclType	char *		4216637	0					
ANR	4216784	Identifier	p		4216637	1					
ANR	4216785	IdentifierDecl	* name = strdup ( input + 2 )		4216637	1					
ANR	4216786	IdentifierDeclType	char *		4216637	0					
ANR	4216787	Identifier	name		4216637	1					
ANR	4216788	AssignmentExpression	* name = strdup ( input + 2 )		4216637	2		=			
ANR	4216789	Identifier	name		4216637	0					
ANR	4216790	CallExpression	strdup ( input + 2 )		4216637	1					
ANR	4216791	Callee	strdup		4216637	0					
ANR	4216792	Identifier	strdup		4216637	0					
ANR	4216793	ArgumentList	input + 2		4216637	1					
ANR	4216794	Argument	input + 2		4216637	0					
ANR	4216795	AdditiveExpression	input + 2		4216637	0		+			
ANR	4216796	Identifier	input		4216637	0					
ANR	4216797	PrimaryExpression	2		4216637	1					
ANR	4216798	IdentifierDeclStatement	int signum = atoi ( name ) ;	3952:5:113007:113031	4216637	1	True				
ANR	4216799	IdentifierDecl	signum = atoi ( name )		4216637	0					
ANR	4216800	IdentifierDeclType	int		4216637	0					
ANR	4216801	Identifier	signum		4216637	1					
ANR	4216802	AssignmentExpression	signum = atoi ( name )		4216637	2		=			
ANR	4216803	Identifier	signum		4216637	0					
ANR	4216804	CallExpression	atoi ( name )		4216637	1					
ANR	4216805	Callee	atoi		4216637	0					
ANR	4216806	Identifier	atoi		4216637	0					
ANR	4216807	ArgumentList	name		4216637	1					
ANR	4216808	Argument	name		4216637	0					
ANR	4216809	Identifier	name		4216637	0					
ANR	4216810	ExpressionStatement	"p = strchr ( name , ' ' )"	3953:5:113038:113060	4216637	2	True				
ANR	4216811	AssignmentExpression	"p = strchr ( name , ' ' )"		4216637	0		=			
ANR	4216812	Identifier	p		4216637	0					
ANR	4216813	CallExpression	"strchr ( name , ' ' )"		4216637	1					
ANR	4216814	Callee	strchr		4216637	0					
ANR	4216815	Identifier	strchr		4216637	0					
ANR	4216816	ArgumentList	name		4216637	1					
ANR	4216817	Argument	name		4216637	0					
ANR	4216818	Identifier	name		4216637	0					
ANR	4216819	Argument	' '		4216637	1					
ANR	4216820	PrimaryExpression	' '		4216637	0					
ANR	4216821	IfStatement	if ( p )		4216637	3					
ANR	4216822	Condition	p	3954:9:113071:113071	4216637	0	True				
ANR	4216823	Identifier	p		4216637	0					
ANR	4216824	ExpressionStatement	* p ++ = 0	3954:12:113074:113082	4216637	1	True				
ANR	4216825	AssignmentExpression	* p ++ = 0		4216637	0		=			
ANR	4216826	UnaryOperationExpression	* p ++		4216637	0					
ANR	4216827	UnaryOperator	*		4216637	0					
ANR	4216828	PostIncDecOperationExpression	p ++		4216637	1					
ANR	4216829	Identifier	p		4216637	0					
ANR	4216830	IncDec	++		4216637	1					
ANR	4216831	PrimaryExpression	0		4216637	1					
ANR	4216832	IfStatement	if ( signum < 1 )		4216637	4					
ANR	4216833	Condition	signum < 1	3959:9:113190:113197	4216637	0	True				
ANR	4216834	RelationalExpression	signum < 1		4216637	0		<			
ANR	4216835	Identifier	signum		4216637	0					
ANR	4216836	PrimaryExpression	1		4216637	1					
ANR	4216837	ExpressionStatement	signum = r_signal_from_string ( name )	3959:19:113200:113236	4216637	1	True				
ANR	4216838	AssignmentExpression	signum = r_signal_from_string ( name )		4216637	0		=			
ANR	4216839	Identifier	signum		4216637	0					
ANR	4216840	CallExpression	r_signal_from_string ( name )		4216637	1					
ANR	4216841	Callee	r_signal_from_string		4216637	0					
ANR	4216842	Identifier	r_signal_from_string		4216637	0					
ANR	4216843	ArgumentList	name		4216637	1					
ANR	4216844	Argument	name		4216637	0					
ANR	4216845	Identifier	name		4216637	0					
ANR	4216846	IfStatement	if ( signum > 0 )		4216637	5					
ANR	4216847	Condition	signum > 0	3960:9:113247:113254	4216637	0	True				
ANR	4216848	RelationalExpression	signum > 0		4216637	0		>			
ANR	4216849	Identifier	signum		4216637	0					
ANR	4216850	PrimaryExpression	0		4216637	1					
ANR	4216851	CompoundStatement		35:19:907:907	4216637	1					
ANR	4216852	IfStatement	if ( ! p || ! p [ 0 ] )		4216637	0					
ANR	4216853	Condition	! p || ! p [ 0 ]	3961:10:113269:113279	4216637	0	True				
ANR	4216854	OrExpression	! p || ! p [ 0 ]		4216637	0		||			
ANR	4216855	UnaryOperationExpression	! p		4216637	0					
ANR	4216856	UnaryOperator	!		4216637	0					
ANR	4216857	Identifier	p		4216637	1					
ANR	4216858	UnaryOperationExpression	! p [ 0 ]		4216637	1					
ANR	4216859	UnaryOperator	!		4216637	0					
ANR	4216860	ArrayIndexing	p [ 0 ]		4216637	1					
ANR	4216861	Identifier	p		4216637	0					
ANR	4216862	PrimaryExpression	0		4216637	1					
ANR	4216863	CompoundStatement		36:23:932:932	4216637	1					
ANR	4216864	ExpressionStatement	"r_debug_signal_setup ( core -> dbg , signum , 0 )"	3962:7:113311:113354	4216637	0	True				
ANR	4216865	CallExpression	"r_debug_signal_setup ( core -> dbg , signum , 0 )"		4216637	0					
ANR	4216866	Callee	r_debug_signal_setup		4216637	0					
ANR	4216867	Identifier	r_debug_signal_setup		4216637	0					
ANR	4216868	ArgumentList	core -> dbg		4216637	1					
ANR	4216869	Argument	core -> dbg		4216637	0					
ANR	4216870	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4216871	Identifier	core		4216637	0					
ANR	4216872	Identifier	dbg		4216637	1					
ANR	4216873	Argument	signum		4216637	1					
ANR	4216874	Identifier	signum		4216637	0					
ANR	4216875	Argument	0		4216637	2					
ANR	4216876	PrimaryExpression	0		4216637	0					
ANR	4216877	ElseStatement	else		4216637	0					
ANR	4216878	IfStatement	if ( * p == 's' )		4216637	0					
ANR	4216879	Condition	* p == 's'	3963:17:113373:113381	4216637	0	True				
ANR	4216880	EqualityExpression	* p == 's'		4216637	0		==			
ANR	4216881	UnaryOperationExpression	* p		4216637	0					
ANR	4216882	UnaryOperator	*		4216637	0					
ANR	4216883	Identifier	p		4216637	1					
ANR	4216884	PrimaryExpression	's'		4216637	1					
ANR	4216885	CompoundStatement		38:28:1034:1034	4216637	1					
ANR	4216886	ExpressionStatement	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_SKIP )"	3964:7:113401:113460	4216637	0	True				
ANR	4216887	CallExpression	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_SKIP )"		4216637	0					
ANR	4216888	Callee	r_debug_signal_setup		4216637	0					
ANR	4216889	Identifier	r_debug_signal_setup		4216637	0					
ANR	4216890	ArgumentList	core -> dbg		4216637	1					
ANR	4216891	Argument	core -> dbg		4216637	0					
ANR	4216892	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4216893	Identifier	core		4216637	0					
ANR	4216894	Identifier	dbg		4216637	1					
ANR	4216895	Argument	signum		4216637	1					
ANR	4216896	Identifier	signum		4216637	0					
ANR	4216897	Argument	R_DBG_SIGNAL_SKIP		4216637	2					
ANR	4216898	Identifier	R_DBG_SIGNAL_SKIP		4216637	0					
ANR	4216899	ElseStatement	else		4216637	0					
ANR	4216900	IfStatement	if ( * p == 'c' )		4216637	0					
ANR	4216901	Condition	* p == 'c'	3965:17:113479:113487	4216637	0	True				
ANR	4216902	EqualityExpression	* p == 'c'		4216637	0		==			
ANR	4216903	UnaryOperationExpression	* p		4216637	0					
ANR	4216904	UnaryOperator	*		4216637	0					
ANR	4216905	Identifier	p		4216637	1					
ANR	4216906	PrimaryExpression	'c'		4216637	1					
ANR	4216907	CompoundStatement		40:28:1140:1140	4216637	1					
ANR	4216908	ExpressionStatement	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_CONT )"	3966:7:113507:113566	4216637	0	True				
ANR	4216909	CallExpression	"r_debug_signal_setup ( core -> dbg , signum , R_DBG_SIGNAL_CONT )"		4216637	0					
ANR	4216910	Callee	r_debug_signal_setup		4216637	0					
ANR	4216911	Identifier	r_debug_signal_setup		4216637	0					
ANR	4216912	ArgumentList	core -> dbg		4216637	1					
ANR	4216913	Argument	core -> dbg		4216637	0					
ANR	4216914	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4216915	Identifier	core		4216637	0					
ANR	4216916	Identifier	dbg		4216637	1					
ANR	4216917	Argument	signum		4216637	1					
ANR	4216918	Identifier	signum		4216637	0					
ANR	4216919	Argument	R_DBG_SIGNAL_CONT		4216637	2					
ANR	4216920	Identifier	R_DBG_SIGNAL_CONT		4216637	0					
ANR	4216921	ElseStatement	else		4216637	0					
ANR	4216922	CompoundStatement		42:13:1231:1231	4216637	0					
ANR	4216923	ExpressionStatement	"eprintf ( ""Invalid option: %s\\n"" , p )"	3968:7:113590:113625	4216637	0	True				
ANR	4216924	CallExpression	"eprintf ( ""Invalid option: %s\\n"" , p )"		4216637	0					
ANR	4216925	Callee	eprintf		4216637	0					
ANR	4216926	Identifier	eprintf		4216637	0					
ANR	4216927	ArgumentList	"""Invalid option: %s\\n"""		4216637	1					
ANR	4216928	Argument	"""Invalid option: %s\\n"""		4216637	0					
ANR	4216929	PrimaryExpression	"""Invalid option: %s\\n"""		4216637	0					
ANR	4216930	Argument	p		4216637	1					
ANR	4216931	Identifier	p		4216637	0					
ANR	4216932	ElseStatement	else		4216637	0					
ANR	4216933	CompoundStatement		45:12:1297:1297	4216637	0					
ANR	4216934	ExpressionStatement	"eprintf ( ""Invalid signal: %s\\n"" , input + 2 )"	3971:6:113655:113698	4216637	0	True				
ANR	4216935	CallExpression	"eprintf ( ""Invalid signal: %s\\n"" , input + 2 )"		4216637	0					
ANR	4216936	Callee	eprintf		4216637	0					
ANR	4216937	Identifier	eprintf		4216637	0					
ANR	4216938	ArgumentList	"""Invalid signal: %s\\n"""		4216637	1					
ANR	4216939	Argument	"""Invalid signal: %s\\n"""		4216637	0					
ANR	4216940	PrimaryExpression	"""Invalid signal: %s\\n"""		4216637	0					
ANR	4216941	Argument	input + 2		4216637	1					
ANR	4216942	AdditiveExpression	input + 2		4216637	0		+			
ANR	4216943	Identifier	input		4216637	0					
ANR	4216944	PrimaryExpression	2		4216637	1					
ANR	4216945	ExpressionStatement	free ( name )	3973:5:113712:113723	4216637	6	True				
ANR	4216946	CallExpression	free ( name )		4216637	0					
ANR	4216947	Callee	free		4216637	0					
ANR	4216948	Identifier	free		4216637	0					
ANR	4216949	ArgumentList	name		4216637	1					
ANR	4216950	Argument	name		4216637	0					
ANR	4216951	Identifier	name		4216637	0					
ANR	4216952	BreakStatement	break ;	3974:5:113730:113735	4216637	7	True				
ANR	4216953	Label	case '?' :	3977:3:113769:113777	4216637	5	True				
ANR	4216954	Label	default :	3978:3:113782:113789	4216637	6	True				
ANR	4216955	Identifier	default		4216637	0					
ANR	4216956	CompoundStatement		54:4:1445:1445	4216637	7					
ANR	4216957	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dko )"	3980:5:113802:113838	4216637	0	True				
ANR	4216958	CallExpression	"r_core_cmd_help ( core , help_msg_dko )"		4216637	0					
ANR	4216959	Callee	r_core_cmd_help		4216637	0					
ANR	4216960	Identifier	r_core_cmd_help		4216637	0					
ANR	4216961	ArgumentList	core		4216637	1					
ANR	4216962	Argument	core		4216637	0					
ANR	4216963	Identifier	core		4216637	0					
ANR	4216964	Argument	help_msg_dko		4216637	1					
ANR	4216965	Identifier	help_msg_dko		4216637	0					
ANR	4216966	Statement	r_cons_println	3982:5:113894:113907	4216637	1	True				
ANR	4216967	Statement	(	3982:20:113909:113909	4216637	2	True				
ANR	4216968	Statement	"""NOTE: [signal] can be a number or a string that resolves with dk?\\n"""	3982:21:113910:113978	4216637	3	True				
ANR	4216969	Statement	"""  skip means do not enter into the signal handler\\n"""	3983:7:113987:114039	4216637	4	True				
ANR	4216970	Statement	"""  continue means enter into the signal handler"""	3984:7:114048:114095	4216637	5	True				
ANR	4216971	Statement	)	3984:55:114096:114096	4216637	6	True				
ANR	4216972	ExpressionStatement		3984:56:114097:114097	4216637	7	True				
ANR	4216973	ElseStatement	else		4216637	0					
ANR	4216974	IfStatement	if ( * input == 'j' )		4216637	0					
ANR	4216975	Condition	* input == 'j'	3987:12:114121:114133	4216637	0	True				
ANR	4216976	EqualityExpression	* input == 'j'		4216637	0		==			
ANR	4216977	UnaryOperationExpression	* input		4216637	0					
ANR	4216978	UnaryOperator	*		4216637	0					
ANR	4216979	Identifier	input		4216637	1					
ANR	4216980	PrimaryExpression	'j'		4216637	1					
ANR	4216981	CompoundStatement		62:27:1786:1786	4216637	1					
ANR	4216982	ExpressionStatement	"r_debug_signal_list ( core -> dbg , 2 )"	3988:2:114140:114174	4216637	0	True				
ANR	4216983	CallExpression	"r_debug_signal_list ( core -> dbg , 2 )"		4216637	0					
ANR	4216984	Callee	r_debug_signal_list		4216637	0					
ANR	4216985	Identifier	r_debug_signal_list		4216637	0					
ANR	4216986	ArgumentList	core -> dbg		4216637	1					
ANR	4216987	Argument	core -> dbg		4216637	0					
ANR	4216988	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4216989	Identifier	core		4216637	0					
ANR	4216990	Identifier	dbg		4216637	1					
ANR	4216991	Argument	2		4216637	1					
ANR	4216992	PrimaryExpression	2		4216637	0					
ANR	4216993	ElseStatement	else		4216637	0					
ANR	4216994	IfStatement	if ( ! * input )		4216637	0					
ANR	4216995	Condition	! * input	3989:12:114188:114194	4216637	0	True				
ANR	4216996	UnaryOperationExpression	! * input		4216637	0					
ANR	4216997	UnaryOperator	!		4216637	0					
ANR	4216998	UnaryOperationExpression	* input		4216637	1					
ANR	4216999	UnaryOperator	*		4216637	0					
ANR	4217000	Identifier	input		4216637	1					
ANR	4217001	CompoundStatement		70:2:1987:2030	4216637	1					
ANR	4217002	ExpressionStatement	"r_debug_signal_list ( core -> dbg , 0 )"	3990:2:114201:114235	4216637	0	True				
ANR	4217003	CallExpression	"r_debug_signal_list ( core -> dbg , 0 )"		4216637	0					
ANR	4217004	Callee	r_debug_signal_list		4216637	0					
ANR	4217005	Identifier	r_debug_signal_list		4216637	0					
ANR	4217006	ArgumentList	core -> dbg		4216637	1					
ANR	4217007	Argument	core -> dbg		4216637	0					
ANR	4217008	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4217009	Identifier	core		4216637	0					
ANR	4217010	Identifier	dbg		4216637	1					
ANR	4217011	Argument	0		4216637	1					
ANR	4217012	PrimaryExpression	0		4216637	0					
ANR	4217013	IdentifierDeclStatement	RListIter * iter ;	3992:2:114245:114260	4216637	1	True				
ANR	4217014	IdentifierDecl	* iter		4216637	0					
ANR	4217015	IdentifierDeclType	RListIter *		4216637	0					
ANR	4217016	Identifier	iter		4216637	1					
ANR	4217017	IdentifierDeclStatement	RDebugSignal * ds ;	3993:2:114264:114280	4216637	2	True				
ANR	4217018	IdentifierDecl	* ds		4216637	0					
ANR	4217019	IdentifierDeclType	RDebugSignal *		4216637	0					
ANR	4217020	Identifier	ds		4216637	1					
ANR	4217021	ExpressionStatement	"eprintf ( ""TODO: list signal handlers of child\\n"" )"	3994:2:114284:114333	4216637	3	True				
ANR	4217022	CallExpression	"eprintf ( ""TODO: list signal handlers of child\\n"" )"		4216637	0					
ANR	4217023	Callee	eprintf		4216637	0					
ANR	4217024	Identifier	eprintf		4216637	0					
ANR	4217025	ArgumentList	"""TODO: list signal handlers of child\\n"""		4216637	1					
ANR	4217026	Argument	"""TODO: list signal handlers of child\\n"""		4216637	0					
ANR	4217027	PrimaryExpression	"""TODO: list signal handlers of child\\n"""		4216637	0					
ANR	4217028	IdentifierDeclStatement	RList * list = r_debug_kill_list ( core -> dbg ) ;	3995:2:114337:114380	4216637	4	True				
ANR	4217029	IdentifierDecl	* list = r_debug_kill_list ( core -> dbg )		4216637	0					
ANR	4217030	IdentifierDeclType	RList *		4216637	0					
ANR	4217031	Identifier	list		4216637	1					
ANR	4217032	AssignmentExpression	* list = r_debug_kill_list ( core -> dbg )		4216637	2		=			
ANR	4217033	Identifier	list		4216637	0					
ANR	4217034	CallExpression	r_debug_kill_list ( core -> dbg )		4216637	1					
ANR	4217035	Callee	r_debug_kill_list		4216637	0					
ANR	4217036	Identifier	r_debug_kill_list		4216637	0					
ANR	4217037	ArgumentList	core -> dbg		4216637	1					
ANR	4217038	Argument	core -> dbg		4216637	0					
ANR	4217039	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4217040	Identifier	core		4216637	0					
ANR	4217041	Identifier	dbg		4216637	1					
ANR	4217042	Statement	r_list_foreach	3996:2:114384:114397	4216637	5	True				
ANR	4217043	Statement	(	3996:17:114399:114399	4216637	6	True				
ANR	4217044	Statement	list	3996:18:114400:114403	4216637	7	True				
ANR	4217045	Statement	","	3996:22:114404:114404	4216637	8	True				
ANR	4217046	Statement	iter	3996:24:114406:114409	4216637	9	True				
ANR	4217047	Statement	","	3996:28:114410:114410	4216637	10	True				
ANR	4217048	Statement	ds	3996:30:114412:114413	4216637	11	True				
ANR	4217049	Statement	)	3996:32:114414:114414	4216637	12	True				
ANR	4217050	CompoundStatement		71:34:2066:2066	4216637	13					
ANR	4217051	ExpressionStatement	"eprintf ( ""--> %d\\n"" , ds -> num )"	3998:3:114487:114516	4216637	0	True				
ANR	4217052	CallExpression	"eprintf ( ""--> %d\\n"" , ds -> num )"		4216637	0					
ANR	4217053	Callee	eprintf		4216637	0					
ANR	4217054	Identifier	eprintf		4216637	0					
ANR	4217055	ArgumentList	"""--> %d\\n"""		4216637	1					
ANR	4217056	Argument	"""--> %d\\n"""		4216637	0					
ANR	4217057	PrimaryExpression	"""--> %d\\n"""		4216637	0					
ANR	4217058	Argument	ds -> num		4216637	1					
ANR	4217059	PtrMemberAccess	ds -> num		4216637	0					
ANR	4217060	Identifier	ds		4216637	0					
ANR	4217061	Identifier	num		4216637	1					
ANR	4217062	ExpressionStatement	r_list_free ( list )	4000:2:114524:114542	4216637	14	True				
ANR	4217063	CallExpression	r_list_free ( list )		4216637	0					
ANR	4217064	Callee	r_list_free		4216637	0					
ANR	4217065	Identifier	r_list_free		4216637	0					
ANR	4217066	ArgumentList	list		4216637	1					
ANR	4217067	Argument	list		4216637	0					
ANR	4217068	Identifier	list		4216637	0					
ANR	4217069	ElseStatement	else		4216637	0					
ANR	4217070	CompoundStatement		79:2:2239:2268	4216637	0					
ANR	4217071	IdentifierDeclStatement	int sig = atoi ( input ) ;	4003:2:114563:114585	4216637	0	True				
ANR	4217072	IdentifierDecl	sig = atoi ( input )		4216637	0					
ANR	4217073	IdentifierDeclType	int		4216637	0					
ANR	4217074	Identifier	sig		4216637	1					
ANR	4217075	AssignmentExpression	sig = atoi ( input )		4216637	2		=			
ANR	4217076	Identifier	sig		4216637	0					
ANR	4217077	CallExpression	atoi ( input )		4216637	1					
ANR	4217078	Callee	atoi		4216637	0					
ANR	4217079	Identifier	atoi		4216637	0					
ANR	4217080	ArgumentList	input		4216637	1					
ANR	4217081	Argument	input		4216637	0					
ANR	4217082	Identifier	input		4216637	0					
ANR	4217083	IdentifierDeclStatement	"char * p = strchr ( input , '=' ) ;"	4004:2:114589:114618	4216637	1	True				
ANR	4217084	IdentifierDecl	"* p = strchr ( input , '=' )"		4216637	0					
ANR	4217085	IdentifierDeclType	char *		4216637	0					
ANR	4217086	Identifier	p		4216637	1					
ANR	4217087	AssignmentExpression	"* p = strchr ( input , '=' )"		4216637	2		=			
ANR	4217088	Identifier	p		4216637	0					
ANR	4217089	CallExpression	"strchr ( input , '=' )"		4216637	1					
ANR	4217090	Callee	strchr		4216637	0					
ANR	4217091	Identifier	strchr		4216637	0					
ANR	4217092	ArgumentList	input		4216637	1					
ANR	4217093	Argument	input		4216637	0					
ANR	4217094	Identifier	input		4216637	0					
ANR	4217095	Argument	'='		4216637	1					
ANR	4217096	PrimaryExpression	'='		4216637	0					
ANR	4217097	IfStatement	if ( p )		4216637	2					
ANR	4217098	Condition	p	4005:6:114626:114626	4216637	0	True				
ANR	4217099	Identifier	p		4216637	0					
ANR	4217100	CompoundStatement		80:9:2279:2279	4216637	1					
ANR	4217101	ExpressionStatement	"r_debug_kill_setup ( core -> dbg , sig , r_num_math ( core -> num , p + 1 ) )"	4006:3:114634:114698	4216637	0	True				
ANR	4217102	CallExpression	"r_debug_kill_setup ( core -> dbg , sig , r_num_math ( core -> num , p + 1 ) )"		4216637	0					
ANR	4217103	Callee	r_debug_kill_setup		4216637	0					
ANR	4217104	Identifier	r_debug_kill_setup		4216637	0					
ANR	4217105	ArgumentList	core -> dbg		4216637	1					
ANR	4217106	Argument	core -> dbg		4216637	0					
ANR	4217107	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4217108	Identifier	core		4216637	0					
ANR	4217109	Identifier	dbg		4216637	1					
ANR	4217110	Argument	sig		4216637	1					
ANR	4217111	Identifier	sig		4216637	0					
ANR	4217112	Argument	"r_num_math ( core -> num , p + 1 )"		4216637	2					
ANR	4217113	CallExpression	"r_num_math ( core -> num , p + 1 )"		4216637	0					
ANR	4217114	Callee	r_num_math		4216637	0					
ANR	4217115	Identifier	r_num_math		4216637	0					
ANR	4217116	ArgumentList	core -> num		4216637	1					
ANR	4217117	Argument	core -> num		4216637	0					
ANR	4217118	PtrMemberAccess	core -> num		4216637	0					
ANR	4217119	Identifier	core		4216637	0					
ANR	4217120	Identifier	num		4216637	1					
ANR	4217121	Argument	p + 1		4216637	1					
ANR	4217122	AdditiveExpression	p + 1		4216637	0		+			
ANR	4217123	Identifier	p		4216637	0					
ANR	4217124	PrimaryExpression	1		4216637	1					
ANR	4217125	ElseStatement	else		4216637	0					
ANR	4217126	CompoundStatement		82:9:2359:2359	4216637	0					
ANR	4217127	ExpressionStatement	"r_debug_kill ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid , sig )"	4008:3:114714:114775	4216637	0	True				
ANR	4217128	CallExpression	"r_debug_kill ( core -> dbg , core -> dbg -> pid , core -> dbg -> tid , sig )"		4216637	0					
ANR	4217129	Callee	r_debug_kill		4216637	0					
ANR	4217130	Identifier	r_debug_kill		4216637	0					
ANR	4217131	ArgumentList	core -> dbg		4216637	1					
ANR	4217132	Argument	core -> dbg		4216637	0					
ANR	4217133	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4217134	Identifier	core		4216637	0					
ANR	4217135	Identifier	dbg		4216637	1					
ANR	4217136	Argument	core -> dbg -> pid		4216637	1					
ANR	4217137	PtrMemberAccess	core -> dbg -> pid		4216637	0					
ANR	4217138	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4217139	Identifier	core		4216637	0					
ANR	4217140	Identifier	dbg		4216637	1					
ANR	4217141	Identifier	pid		4216637	1					
ANR	4217142	Argument	core -> dbg -> tid		4216637	2					
ANR	4217143	PtrMemberAccess	core -> dbg -> tid		4216637	0					
ANR	4217144	PtrMemberAccess	core -> dbg		4216637	0					
ANR	4217145	Identifier	core		4216637	0					
ANR	4217146	Identifier	dbg		4216637	1					
ANR	4217147	Identifier	tid		4216637	1					
ANR	4217148	Argument	sig		4216637	3					
ANR	4217149	Identifier	sig		4216637	0					
ANR	4217150	ReturnType	static void		4216637	1					
ANR	4217151	Identifier	r_core_debug_kill		4216637	2					
ANR	4217152	ParameterList	"RCore * core , const char * input"		4216637	3					
ANR	4217153	Parameter	RCore * core	3926:31:112317:112327	4216637	0	True				
ANR	4217154	ParameterType	RCore *		4216637	0					
ANR	4217155	Identifier	core		4216637	1					
ANR	4217156	Parameter	const char * input	3926:44:112330:112346	4216637	1	True				
ANR	4217157	ParameterType	const char *		4216637	0					
ANR	4217158	Identifier	input		4216637	1					
ANR	4217159	CFGEntryNode	ENTRY		4216637		True				
ANR	4217160	CFGExitNode	EXIT		4216637		True				
ANR	4217161	Symbol	r_signal_from_string		4216637						
ANR	4217162	Symbol	* input		4216637						
ANR	4217163	Symbol	* core		4216637						
ANR	4217164	Symbol	strchr		4216637						
ANR	4217165	Symbol	ds		4216637						
ANR	4217166	Symbol	r_debug_kill_list		4216637						
ANR	4217167	Symbol	r_num_math		4216637						
ANR	4217168	Symbol	sig		4216637						
ANR	4217169	Symbol	* ds		4216637						
ANR	4217170	Symbol	arg		4216637						
ANR	4217171	Symbol	core -> num		4216637						
ANR	4217172	Symbol	* * core		4216637						
ANR	4217173	Symbol	signum		4216637						
ANR	4217174	Symbol	atoi		4216637						
ANR	4217175	Symbol	signame		4216637						
ANR	4217176	Symbol	ds -> num		4216637						
ANR	4217177	Symbol	* p ++		4216637						
ANR	4217178	Symbol	iter		4216637						
ANR	4217179	Symbol	R_DBG_SIGNAL_SKIP		4216637						
ANR	4217180	Symbol	list		4216637						
ANR	4217181	Symbol	r_signal_to_string		4216637						
ANR	4217182	Symbol	p		4216637						
ANR	4217183	Symbol	core		4216637						
ANR	4217184	Symbol	input		4216637						
ANR	4217185	Symbol	help_msg_dko		4216637						
ANR	4217186	Symbol	R_DBG_SIGNAL_CONT		4216637						
ANR	4217187	Symbol	name		4216637						
ANR	4217188	Symbol	core -> dbg -> tid		4216637						
ANR	4217189	Symbol	help_msg_dk		4216637						
ANR	4217190	Symbol	* p		4216637						
ANR	4217191	Symbol	strdup		4216637						
ANR	4217192	Symbol	* core -> dbg		4216637						
ANR	4217193	Symbol	core -> dbg -> pid		4216637						
ANR	4217194	Symbol	core -> dbg		4216637						
ANR	4217195	Function	is_x86_call	4013:0:114787:115261							
ANR	4217196	FunctionDef	"is_x86_call (RDebug * dbg , ut64 addr)"		4217195	0					
ANR	4217197	CompoundStatement		4013:48:114835:115261	4217195	0					
ANR	4217198	IdentifierDeclStatement	ut8 buf [ 3 ] ;	4014:1:114838:114848	4217195	0	True				
ANR	4217199	IdentifierDecl	buf [ 3 ]		4217195	0					
ANR	4217200	IdentifierDeclType	ut8 [ 3 ]		4217195	0					
ANR	4217201	Identifier	buf		4217195	1					
ANR	4217202	PrimaryExpression	3		4217195	2					
ANR	4217203	IdentifierDeclStatement	ut8 * op = buf ;	4015:1:114851:114864	4217195	1	True				
ANR	4217204	IdentifierDecl	* op = buf		4217195	0					
ANR	4217205	IdentifierDeclType	ut8 *		4217195	0					
ANR	4217206	Identifier	op		4217195	1					
ANR	4217207	AssignmentExpression	* op = buf		4217195	2		=			
ANR	4217208	Identifier	buf		4217195	0					
ANR	4217209	Identifier	buf		4217195	1					
ANR	4217210	ExpressionStatement	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"	4016:1:114867:114934	4217195	2	True				
ANR	4217211	CastExpression	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		4217195	0					
ANR	4217212	CastTarget	void		4217195	0					
ANR	4217213	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		4217195	1					
ANR	4217214	Callee	dbg -> iob . read_at		4217195	0					
ANR	4217215	MemberAccess	dbg -> iob . read_at		4217195	0					
ANR	4217216	PtrMemberAccess	dbg -> iob		4217195	0					
ANR	4217217	Identifier	dbg		4217195	0					
ANR	4217218	Identifier	iob		4217195	1					
ANR	4217219	Identifier	read_at		4217195	1					
ANR	4217220	ArgumentList	dbg -> iob . io		4217195	1					
ANR	4217221	Argument	dbg -> iob . io		4217195	0					
ANR	4217222	MemberAccess	dbg -> iob . io		4217195	0					
ANR	4217223	PtrMemberAccess	dbg -> iob		4217195	0					
ANR	4217224	Identifier	dbg		4217195	0					
ANR	4217225	Identifier	iob		4217195	1					
ANR	4217226	Identifier	io		4217195	1					
ANR	4217227	Argument	addr		4217195	1					
ANR	4217228	Identifier	addr		4217195	0					
ANR	4217229	Argument	buf		4217195	2					
ANR	4217230	Identifier	buf		4217195	0					
ANR	4217231	Argument	R_ARRAY_SIZE ( buf )		4217195	3					
ANR	4217232	CallExpression	R_ARRAY_SIZE ( buf )		4217195	0					
ANR	4217233	Callee	R_ARRAY_SIZE		4217195	0					
ANR	4217234	Identifier	R_ARRAY_SIZE		4217195	0					
ANR	4217235	ArgumentList	buf		4217195	1					
ANR	4217236	Argument	buf		4217195	0					
ANR	4217237	Identifier	buf		4217195	0					
ANR	4217238	SwitchStatement	switch ( buf [ 0 ] )		4217195	3					
ANR	4217239	Condition	buf [ 0 ]	4017:9:114945:114950	4217195	0	True				
ANR	4217240	ArrayIndexing	buf [ 0 ]		4217195	0					
ANR	4217241	Identifier	buf		4217195	0					
ANR	4217242	PrimaryExpression	0		4217195	1					
ANR	4217243	CompoundStatement		5:17:117:117	4217195	1					
ANR	4217244	Label	case 0x65 :	4018:1:114989:114998	4217195	0	True				
ANR	4217245	Label	case 0x64 :	4019:1:115001:115010	4217195	1	True				
ANR	4217246	Label	case 0x26 :	4020:1:115013:115022	4217195	2	True				
ANR	4217247	Label	case 0x3e :	4021:1:115025:115034	4217195	3	True				
ANR	4217248	Label	case 0x36 :	4022:1:115037:115046	4217195	4	True				
ANR	4217249	Label	case 0x2e :	4023:1:115049:115058	4217195	5	True				
ANR	4217250	ExpressionStatement	op ++	4024:2:115062:115066	4217195	6	True				
ANR	4217251	PostIncDecOperationExpression	op ++		4217195	0					
ANR	4217252	Identifier	op		4217195	0					
ANR	4217253	IncDec	++		4217195	1					
ANR	4217254	IfStatement	if ( op [ 0 ] == 0xe8 )		4217195	4					
ANR	4217255	Condition	op [ 0 ] == 0xe8	4026:5:115076:115088	4217195	0	True				
ANR	4217256	EqualityExpression	op [ 0 ] == 0xe8		4217195	0		==			
ANR	4217257	ArrayIndexing	op [ 0 ]		4217195	0					
ANR	4217258	Identifier	op		4217195	0					
ANR	4217259	PrimaryExpression	0		4217195	1					
ANR	4217260	PrimaryExpression	0xe8		4217195	1					
ANR	4217261	CompoundStatement		14:20:255:255	4217195	1					
ANR	4217262	ReturnStatement	return true ;	4027:2:115095:115106	4217195	0	True				
ANR	4217263	Identifier	true		4217195	0					
ANR	4217264	IfStatement	if ( op [ 0 ] == 0xff && ( op [ 1 ] & 0x30 ) == 0x10 )		4217195	5					
ANR	4217265	Condition	op [ 0 ] == 0xff && ( op [ 1 ] & 0x30 ) == 0x10	4029:5:115116:115212	4217195	0	True				
ANR	4217266	AndExpression	op [ 0 ] == 0xff && ( op [ 1 ] & 0x30 ) == 0x10		4217195	0		&&			
ANR	4217267	EqualityExpression	op [ 0 ] == 0xff		4217195	0		==			
ANR	4217268	ArrayIndexing	op [ 0 ]		4217195	0					
ANR	4217269	Identifier	op		4217195	0					
ANR	4217270	PrimaryExpression	0		4217195	1					
ANR	4217271	PrimaryExpression	0xff		4217195	1					
ANR	4217272	EqualityExpression	( op [ 1 ] & 0x30 ) == 0x10		4217195	1		==			
ANR	4217273	BitAndExpression	op [ 1 ] & 0x30		4217195	0		&			
ANR	4217274	ArrayIndexing	op [ 1 ]		4217195	0					
ANR	4217275	Identifier	op		4217195	0					
ANR	4217276	PrimaryExpression	1		4217195	1					
ANR	4217277	PrimaryExpression	0x30		4217195	1					
ANR	4217278	PrimaryExpression	0x10		4217195	1					
ANR	4217279	CompoundStatement		18:32:379:379	4217195	1					
ANR	4217280	ReturnStatement	return true ;	4031:2:115219:115230	4217195	0	True				
ANR	4217281	Identifier	true		4217195	0					
ANR	4217282	ReturnStatement	return false ;	4034:1:115247:115259	4217195	6	True				
ANR	4217283	Identifier	false		4217195	0					
ANR	4217284	ReturnType	static bool		4217195	1					
ANR	4217285	Identifier	is_x86_call		4217195	2					
ANR	4217286	ParameterList	"RDebug * dbg , ut64 addr"		4217195	3					
ANR	4217287	Parameter	RDebug * dbg	4013:24:114811:114821	4217195	0	True				
ANR	4217288	ParameterType	RDebug *		4217195	0					
ANR	4217289	Identifier	dbg		4217195	1					
ANR	4217290	Parameter	ut64 addr	4013:37:114824:114832	4217195	1	True				
ANR	4217291	ParameterType	ut64		4217195	0					
ANR	4217292	Identifier	addr		4217195	1					
ANR	4217293	CFGEntryNode	ENTRY		4217195		True				
ANR	4217294	CFGExitNode	EXIT		4217195		True				
ANR	4217295	Symbol	op		4217195						
ANR	4217296	Symbol	buf		4217195						
ANR	4217297	Symbol	dbg -> iob . io		4217195						
ANR	4217298	Symbol	* buf		4217195						
ANR	4217299	Symbol	dbg -> iob		4217195						
ANR	4217300	Symbol	* op		4217195						
ANR	4217301	Symbol	dbg		4217195						
ANR	4217302	Symbol	R_ARRAY_SIZE		4217195						
ANR	4217303	Symbol	true		4217195						
ANR	4217304	Symbol	false		4217195						
ANR	4217305	Symbol	addr		4217195						
ANR	4217306	Symbol	* dbg		4217195						
ANR	4217307	Function	is_x86_ret	4037:0:115264:115570							
ANR	4217308	FunctionDef	"is_x86_ret (RDebug * dbg , ut64 addr)"		4217307	0					
ANR	4217309	CompoundStatement		4037:47:115311:115570	4217307	0					
ANR	4217310	IdentifierDeclStatement	ut8 buf [ 1 ] ;	4038:1:115314:115324	4217307	0	True				
ANR	4217311	IdentifierDecl	buf [ 1 ]		4217307	0					
ANR	4217312	IdentifierDeclType	ut8 [ 1 ]		4217307	0					
ANR	4217313	Identifier	buf		4217307	1					
ANR	4217314	PrimaryExpression	1		4217307	2					
ANR	4217315	ExpressionStatement	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"	4039:1:115327:115394	4217307	1	True				
ANR	4217316	CastExpression	"( void ) dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		4217307	0					
ANR	4217317	CastTarget	void		4217307	0					
ANR	4217318	CallExpression	"dbg -> iob . read_at ( dbg -> iob . io , addr , buf , R_ARRAY_SIZE ( buf ) )"		4217307	1					
ANR	4217319	Callee	dbg -> iob . read_at		4217307	0					
ANR	4217320	MemberAccess	dbg -> iob . read_at		4217307	0					
ANR	4217321	PtrMemberAccess	dbg -> iob		4217307	0					
ANR	4217322	Identifier	dbg		4217307	0					
ANR	4217323	Identifier	iob		4217307	1					
ANR	4217324	Identifier	read_at		4217307	1					
ANR	4217325	ArgumentList	dbg -> iob . io		4217307	1					
ANR	4217326	Argument	dbg -> iob . io		4217307	0					
ANR	4217327	MemberAccess	dbg -> iob . io		4217307	0					
ANR	4217328	PtrMemberAccess	dbg -> iob		4217307	0					
ANR	4217329	Identifier	dbg		4217307	0					
ANR	4217330	Identifier	iob		4217307	1					
ANR	4217331	Identifier	io		4217307	1					
ANR	4217332	Argument	addr		4217307	1					
ANR	4217333	Identifier	addr		4217307	0					
ANR	4217334	Argument	buf		4217307	2					
ANR	4217335	Identifier	buf		4217307	0					
ANR	4217336	Argument	R_ARRAY_SIZE ( buf )		4217307	3					
ANR	4217337	CallExpression	R_ARRAY_SIZE ( buf )		4217307	0					
ANR	4217338	Callee	R_ARRAY_SIZE		4217307	0					
ANR	4217339	Identifier	R_ARRAY_SIZE		4217307	0					
ANR	4217340	ArgumentList	buf		4217307	1					
ANR	4217341	Argument	buf		4217307	0					
ANR	4217342	Identifier	buf		4217307	0					
ANR	4217343	SwitchStatement	switch ( buf [ 0 ] )		4217307	2					
ANR	4217344	Condition	buf [ 0 ]	4040:9:115405:115410	4217307	0	True				
ANR	4217345	ArrayIndexing	buf [ 0 ]		4217307	0					
ANR	4217346	Identifier	buf		4217307	0					
ANR	4217347	PrimaryExpression	0		4217307	1					
ANR	4217348	CompoundStatement		4:17:101:101	4217307	1					
ANR	4217349	Label	case 0xc3 :	4041:1:115416:115425	4217307	0	True				
ANR	4217350	Label	case 0xcb :	4042:1:115428:115437	4217307	1	True				
ANR	4217351	Label	case 0xc2 :	4043:1:115440:115449	4217307	2	True				
ANR	4217352	Label	case 0xca :	4044:1:115452:115461	4217307	3	True				
ANR	4217353	ReturnStatement	return true ;	4045:2:115465:115476	4217307	4	True				
ANR	4217354	Identifier	true		4217307	0					
ANR	4217355	Label	default :	4046:1:115479:115486	4217307	5	True				
ANR	4217356	Identifier	default		4217307	0					
ANR	4217357	ReturnStatement	return false ;	4047:2:115490:115502	4217307	6	True				
ANR	4217358	Identifier	false		4217307	0					
ANR	4217359	ReturnType	static bool		4217307	1					
ANR	4217360	Identifier	is_x86_ret		4217307	2					
ANR	4217361	ParameterList	"RDebug * dbg , ut64 addr"		4217307	3					
ANR	4217362	Parameter	RDebug * dbg	4037:23:115287:115297	4217307	0	True				
ANR	4217363	ParameterType	RDebug *		4217307	0					
ANR	4217364	Identifier	dbg		4217307	1					
ANR	4217365	Parameter	ut64 addr	4037:36:115300:115308	4217307	1	True				
ANR	4217366	ParameterType	ut64		4217307	0					
ANR	4217367	Identifier	addr		4217307	1					
ANR	4217368	CFGEntryNode	ENTRY		4217307		True				
ANR	4217369	CFGExitNode	EXIT		4217307		True				
ANR	4217370	Symbol	buf		4217307						
ANR	4217371	Symbol	dbg -> iob . io		4217307						
ANR	4217372	Symbol	* buf		4217307						
ANR	4217373	Symbol	dbg -> iob		4217307						
ANR	4217374	Symbol	dbg		4217307						
ANR	4217375	Symbol	R_ARRAY_SIZE		4217307						
ANR	4217376	Symbol	true		4217307						
ANR	4217377	Symbol	false		4217307						
ANR	4217378	Symbol	addr		4217307						
ANR	4217379	Symbol	* dbg		4217307						
ANR	4217380	Function	cmd_dcu	4052:0:115573:120046							
ANR	4217381	FunctionDef	"cmd_dcu (RCore * core , const char * input)"		4217380	0					
ANR	4217382	CompoundStatement		4052:53:115626:120046	4217380	0					
ANR	4217383	IdentifierDeclStatement	const char * ptr = NULL ;	4053:1:115629:115651	4217380	0	True				
ANR	4217384	IdentifierDecl	* ptr = NULL		4217380	0					
ANR	4217385	IdentifierDeclType	const char *		4217380	0					
ANR	4217386	Identifier	ptr		4217380	1					
ANR	4217387	AssignmentExpression	* ptr = NULL		4217380	2		=			
ANR	4217388	Identifier	NULL		4217380	0					
ANR	4217389	Identifier	NULL		4217380	1					
ANR	4217390	IdentifierDeclStatement	"ut64 from , to , pc ;"	4054:1:115654:115671	4217380	1	True				
ANR	4217391	IdentifierDecl	from		4217380	0					
ANR	4217392	IdentifierDeclType	ut64		4217380	0					
ANR	4217393	Identifier	from		4217380	1					
ANR	4217394	IdentifierDecl	to		4217380	1					
ANR	4217395	IdentifierDeclType	ut64		4217380	0					
ANR	4217396	Identifier	to		4217380	1					
ANR	4217397	IdentifierDecl	pc		4217380	2					
ANR	4217398	IdentifierDeclType	ut64		4217380	0					
ANR	4217399	Identifier	pc		4217380	1					
ANR	4217400	IdentifierDeclStatement	bool dcu_range = false ;	4055:1:115674:115696	4217380	2	True				
ANR	4217401	IdentifierDecl	dcu_range = false		4217380	0					
ANR	4217402	IdentifierDeclType	bool		4217380	0					
ANR	4217403	Identifier	dcu_range		4217380	1					
ANR	4217404	AssignmentExpression	dcu_range = false		4217380	2		=			
ANR	4217405	Identifier	false		4217380	0					
ANR	4217406	Identifier	false		4217380	1					
ANR	4217407	IdentifierDeclStatement	bool invalid = ( ! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ] ) ;	4056:1:115699:115751	4217380	3	True				
ANR	4217408	IdentifierDecl	invalid = ( ! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ] )		4217380	0					
ANR	4217409	IdentifierDeclType	bool		4217380	0					
ANR	4217410	Identifier	invalid		4217380	1					
ANR	4217411	AssignmentExpression	invalid = ( ! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ] )		4217380	2		=			
ANR	4217412	Identifier	invalid		4217380	0					
ANR	4217413	OrExpression	! input [ 0 ] || ! input [ 1 ] || ! input [ 2 ]		4217380	1		||			
ANR	4217414	UnaryOperationExpression	! input [ 0 ]		4217380	0					
ANR	4217415	UnaryOperator	!		4217380	0					
ANR	4217416	ArrayIndexing	input [ 0 ]		4217380	1					
ANR	4217417	Identifier	input		4217380	0					
ANR	4217418	PrimaryExpression	0		4217380	1					
ANR	4217419	OrExpression	! input [ 1 ] || ! input [ 2 ]		4217380	1		||			
ANR	4217420	UnaryOperationExpression	! input [ 1 ]		4217380	0					
ANR	4217421	UnaryOperator	!		4217380	0					
ANR	4217422	ArrayIndexing	input [ 1 ]		4217380	1					
ANR	4217423	Identifier	input		4217380	0					
ANR	4217424	PrimaryExpression	1		4217380	1					
ANR	4217425	UnaryOperationExpression	! input [ 2 ]		4217380	1					
ANR	4217426	UnaryOperator	!		4217380	0					
ANR	4217427	ArrayIndexing	input [ 2 ]		4217380	1					
ANR	4217428	Identifier	input		4217380	0					
ANR	4217429	PrimaryExpression	2		4217380	1					
ANR	4217430	IfStatement	if ( invalid || ( input [ 2 ] != ' ' && input [ 2 ] != '.' ) )		4217380	4					
ANR	4217431	Condition	invalid || ( input [ 2 ] != ' ' && input [ 2 ] != '.' )	4057:5:115758:115804	4217380	0	True				
ANR	4217432	OrExpression	invalid || ( input [ 2 ] != ' ' && input [ 2 ] != '.' )		4217380	0		||			
ANR	4217433	Identifier	invalid		4217380	0					
ANR	4217434	AndExpression	input [ 2 ] != ' ' && input [ 2 ] != '.'		4217380	1		&&			
ANR	4217435	EqualityExpression	input [ 2 ] != ' '		4217380	0		!=			
ANR	4217436	ArrayIndexing	input [ 2 ]		4217380	0					
ANR	4217437	Identifier	input		4217380	0					
ANR	4217438	PrimaryExpression	2		4217380	1					
ANR	4217439	PrimaryExpression	' '		4217380	1					
ANR	4217440	EqualityExpression	input [ 2 ] != '.'		4217380	1		!=			
ANR	4217441	ArrayIndexing	input [ 2 ]		4217380	0					
ANR	4217442	Identifier	input		4217380	0					
ANR	4217443	PrimaryExpression	2		4217380	1					
ANR	4217444	PrimaryExpression	'.'		4217380	1					
ANR	4217445	CompoundStatement		6:54:180:180	4217380	1					
ANR	4217446	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dcu )"	4058:2:115811:115847	4217380	0	True				
ANR	4217447	CallExpression	"r_core_cmd_help ( core , help_msg_dcu )"		4217380	0					
ANR	4217448	Callee	r_core_cmd_help		4217380	0					
ANR	4217449	Identifier	r_core_cmd_help		4217380	0					
ANR	4217450	ArgumentList	core		4217380	1					
ANR	4217451	Argument	core		4217380	0					
ANR	4217452	Identifier	core		4217380	0					
ANR	4217453	Argument	help_msg_dcu		4217380	1					
ANR	4217454	Identifier	help_msg_dcu		4217380	0					
ANR	4217455	ReturnStatement	return false ;	4059:2:115851:115863	4217380	1	True				
ANR	4217456	Identifier	false		4217380	0					
ANR	4217457	ExpressionStatement	to = UT64_MAX	4061:1:115869:115882	4217380	5	True				
ANR	4217458	AssignmentExpression	to = UT64_MAX		4217380	0		=			
ANR	4217459	Identifier	to		4217380	0					
ANR	4217460	Identifier	UT64_MAX		4217380	1					
ANR	4217461	IfStatement	if ( input [ 2 ] == '.' )		4217380	6					
ANR	4217462	Condition	input [ 2 ] == '.'	4062:5:115889:115903	4217380	0	True				
ANR	4217463	EqualityExpression	input [ 2 ] == '.'		4217380	0		==			
ANR	4217464	ArrayIndexing	input [ 2 ]		4217380	0					
ANR	4217465	Identifier	input		4217380	0					
ANR	4217466	PrimaryExpression	2		4217380	1					
ANR	4217467	PrimaryExpression	'.'		4217380	1					
ANR	4217468	CompoundStatement		11:22:279:279	4217380	1					
ANR	4217469	ExpressionStatement	"ptr = strchr ( input + 3 , ' ' )"	4063:2:115910:115939	4217380	0	True				
ANR	4217470	AssignmentExpression	"ptr = strchr ( input + 3 , ' ' )"		4217380	0		=			
ANR	4217471	Identifier	ptr		4217380	0					
ANR	4217472	CallExpression	"strchr ( input + 3 , ' ' )"		4217380	1					
ANR	4217473	Callee	strchr		4217380	0					
ANR	4217474	Identifier	strchr		4217380	0					
ANR	4217475	ArgumentList	input + 3		4217380	1					
ANR	4217476	Argument	input + 3		4217380	0					
ANR	4217477	AdditiveExpression	input + 3		4217380	0		+			
ANR	4217478	Identifier	input		4217380	0					
ANR	4217479	PrimaryExpression	3		4217380	1					
ANR	4217480	Argument	' '		4217380	1					
ANR	4217481	PrimaryExpression	' '		4217380	0					
ANR	4217482	IfStatement	if ( ptr )		4217380	1					
ANR	4217483	Condition	ptr	4064:6:115947:115949	4217380	0	True				
ANR	4217484	Identifier	ptr		4217380	0					
ANR	4217485	CompoundStatement		13:11:325:325	4217380	1					
ANR	4217486	ExpressionStatement	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"	4065:3:115992:116046	4217380	0	True				
ANR	4217487	AssignmentExpression	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"		4217380	0		=			
ANR	4217488	Identifier	from		4217380	0					
ANR	4217489	CallExpression	"r_num_tail ( core -> num , core -> offset , input + 2 )"		4217380	1					
ANR	4217490	Callee	r_num_tail		4217380	0					
ANR	4217491	Identifier	r_num_tail		4217380	0					
ANR	4217492	ArgumentList	core -> num		4217380	1					
ANR	4217493	Argument	core -> num		4217380	0					
ANR	4217494	PtrMemberAccess	core -> num		4217380	0					
ANR	4217495	Identifier	core		4217380	0					
ANR	4217496	Identifier	num		4217380	1					
ANR	4217497	Argument	core -> offset		4217380	1					
ANR	4217498	PtrMemberAccess	core -> offset		4217380	0					
ANR	4217499	Identifier	core		4217380	0					
ANR	4217500	Identifier	offset		4217380	1					
ANR	4217501	Argument	input + 2		4217380	2					
ANR	4217502	AdditiveExpression	input + 2		4217380	0		+			
ANR	4217503	Identifier	input		4217380	0					
ANR	4217504	PrimaryExpression	2		4217380	1					
ANR	4217505	IfStatement	if ( ptr [ 1 ] == '.' )		4217380	1					
ANR	4217506	Condition	ptr [ 1 ] == '.'	4066:7:116055:116065	4217380	0	True				
ANR	4217507	EqualityExpression	ptr [ 1 ] == '.'		4217380	0		==			
ANR	4217508	ArrayIndexing	ptr [ 1 ]		4217380	0					
ANR	4217509	Identifier	ptr		4217380	0					
ANR	4217510	PrimaryExpression	1		4217380	1					
ANR	4217511	PrimaryExpression	'.'		4217380	1					
ANR	4217512	CompoundStatement		15:20:441:441	4217380	1					
ANR	4217513	ExpressionStatement	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"	4067:4:116074:116122	4217380	0	True				
ANR	4217514	AssignmentExpression	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"		4217380	0		=			
ANR	4217515	Identifier	to		4217380	0					
ANR	4217516	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 2 )"		4217380	1					
ANR	4217517	Callee	r_num_tail		4217380	0					
ANR	4217518	Identifier	r_num_tail		4217380	0					
ANR	4217519	ArgumentList	core -> num		4217380	1					
ANR	4217520	Argument	core -> num		4217380	0					
ANR	4217521	PtrMemberAccess	core -> num		4217380	0					
ANR	4217522	Identifier	core		4217380	0					
ANR	4217523	Identifier	num		4217380	1					
ANR	4217524	Argument	core -> offset		4217380	1					
ANR	4217525	PtrMemberAccess	core -> offset		4217380	0					
ANR	4217526	Identifier	core		4217380	0					
ANR	4217527	Identifier	offset		4217380	1					
ANR	4217528	Argument	ptr + 2		4217380	2					
ANR	4217529	AdditiveExpression	ptr + 2		4217380	0		+			
ANR	4217530	Identifier	ptr		4217380	0					
ANR	4217531	PrimaryExpression	2		4217380	1					
ANR	4217532	ElseStatement	else		4217380	0					
ANR	4217533	CompoundStatement		17:10:507:507	4217380	0					
ANR	4217534	ExpressionStatement	"to = r_num_math ( core -> num , ptr + 1 )"	4069:4:116140:116174	4217380	0	True				
ANR	4217535	AssignmentExpression	"to = r_num_math ( core -> num , ptr + 1 )"		4217380	0		=			
ANR	4217536	Identifier	to		4217380	0					
ANR	4217537	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		4217380	1					
ANR	4217538	Callee	r_num_math		4217380	0					
ANR	4217539	Identifier	r_num_math		4217380	0					
ANR	4217540	ArgumentList	core -> num		4217380	1					
ANR	4217541	Argument	core -> num		4217380	0					
ANR	4217542	PtrMemberAccess	core -> num		4217380	0					
ANR	4217543	Identifier	core		4217380	0					
ANR	4217544	Identifier	num		4217380	1					
ANR	4217545	Argument	ptr + 1		4217380	1					
ANR	4217546	AdditiveExpression	ptr + 1		4217380	0		+			
ANR	4217547	Identifier	ptr		4217380	0					
ANR	4217548	PrimaryExpression	1		4217380	1					
ANR	4217549	ExpressionStatement	dcu_range = true	4071:3:116184:116200	4217380	2	True				
ANR	4217550	AssignmentExpression	dcu_range = true		4217380	0		=			
ANR	4217551	Identifier	dcu_range		4217380	0					
ANR	4217552	Identifier	true		4217380	1					
ANR	4217553	ElseStatement	else		4217380	0					
ANR	4217554	CompoundStatement		21:9:584:584	4217380	0					
ANR	4217555	ExpressionStatement	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"	4073:3:116216:116270	4217380	0	True				
ANR	4217556	AssignmentExpression	"from = r_num_tail ( core -> num , core -> offset , input + 2 )"		4217380	0		=			
ANR	4217557	Identifier	from		4217380	0					
ANR	4217558	CallExpression	"r_num_tail ( core -> num , core -> offset , input + 2 )"		4217380	1					
ANR	4217559	Callee	r_num_tail		4217380	0					
ANR	4217560	Identifier	r_num_tail		4217380	0					
ANR	4217561	ArgumentList	core -> num		4217380	1					
ANR	4217562	Argument	core -> num		4217380	0					
ANR	4217563	PtrMemberAccess	core -> num		4217380	0					
ANR	4217564	Identifier	core		4217380	0					
ANR	4217565	Identifier	num		4217380	1					
ANR	4217566	Argument	core -> offset		4217380	1					
ANR	4217567	PtrMemberAccess	core -> offset		4217380	0					
ANR	4217568	Identifier	core		4217380	0					
ANR	4217569	Identifier	offset		4217380	1					
ANR	4217570	Argument	input + 2		4217380	2					
ANR	4217571	AdditiveExpression	input + 2		4217380	0		+			
ANR	4217572	Identifier	input		4217380	0					
ANR	4217573	PrimaryExpression	2		4217380	1					
ANR	4217574	ElseStatement	else		4217380	0					
ANR	4217575	CompoundStatement		24:8:657:657	4217380	0					
ANR	4217576	ExpressionStatement	"ptr = strchr ( input + 3 , ' ' )"	4076:2:116288:116317	4217380	0	True				
ANR	4217577	AssignmentExpression	"ptr = strchr ( input + 3 , ' ' )"		4217380	0		=			
ANR	4217578	Identifier	ptr		4217380	0					
ANR	4217579	CallExpression	"strchr ( input + 3 , ' ' )"		4217380	1					
ANR	4217580	Callee	strchr		4217380	0					
ANR	4217581	Identifier	strchr		4217380	0					
ANR	4217582	ArgumentList	input + 3		4217380	1					
ANR	4217583	Argument	input + 3		4217380	0					
ANR	4217584	AdditiveExpression	input + 3		4217380	0		+			
ANR	4217585	Identifier	input		4217380	0					
ANR	4217586	PrimaryExpression	3		4217380	1					
ANR	4217587	Argument	' '		4217380	1					
ANR	4217588	PrimaryExpression	' '		4217380	0					
ANR	4217589	IfStatement	if ( ptr )		4217380	1					
ANR	4217590	Condition	ptr	4077:6:116325:116327	4217380	0	True				
ANR	4217591	Identifier	ptr		4217380	0					
ANR	4217592	CompoundStatement		26:11:703:703	4217380	1					
ANR	4217593	ExpressionStatement	"from = r_num_math ( core -> num , input + 3 )"	4078:3:116370:116410	4217380	0	True				
ANR	4217594	AssignmentExpression	"from = r_num_math ( core -> num , input + 3 )"		4217380	0		=			
ANR	4217595	Identifier	from		4217380	0					
ANR	4217596	CallExpression	"r_num_math ( core -> num , input + 3 )"		4217380	1					
ANR	4217597	Callee	r_num_math		4217380	0					
ANR	4217598	Identifier	r_num_math		4217380	0					
ANR	4217599	ArgumentList	core -> num		4217380	1					
ANR	4217600	Argument	core -> num		4217380	0					
ANR	4217601	PtrMemberAccess	core -> num		4217380	0					
ANR	4217602	Identifier	core		4217380	0					
ANR	4217603	Identifier	num		4217380	1					
ANR	4217604	Argument	input + 3		4217380	1					
ANR	4217605	AdditiveExpression	input + 3		4217380	0		+			
ANR	4217606	Identifier	input		4217380	0					
ANR	4217607	PrimaryExpression	3		4217380	1					
ANR	4217608	IfStatement	if ( ptr [ 1 ] == '.' )		4217380	1					
ANR	4217609	Condition	ptr [ 1 ] == '.'	4079:7:116419:116429	4217380	0	True				
ANR	4217610	EqualityExpression	ptr [ 1 ] == '.'		4217380	0		==			
ANR	4217611	ArrayIndexing	ptr [ 1 ]		4217380	0					
ANR	4217612	Identifier	ptr		4217380	0					
ANR	4217613	PrimaryExpression	1		4217380	1					
ANR	4217614	PrimaryExpression	'.'		4217380	1					
ANR	4217615	CompoundStatement		28:20:805:805	4217380	1					
ANR	4217616	ExpressionStatement	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"	4080:4:116438:116486	4217380	0	True				
ANR	4217617	AssignmentExpression	"to = r_num_tail ( core -> num , core -> offset , ptr + 2 )"		4217380	0		=			
ANR	4217618	Identifier	to		4217380	0					
ANR	4217619	CallExpression	"r_num_tail ( core -> num , core -> offset , ptr + 2 )"		4217380	1					
ANR	4217620	Callee	r_num_tail		4217380	0					
ANR	4217621	Identifier	r_num_tail		4217380	0					
ANR	4217622	ArgumentList	core -> num		4217380	1					
ANR	4217623	Argument	core -> num		4217380	0					
ANR	4217624	PtrMemberAccess	core -> num		4217380	0					
ANR	4217625	Identifier	core		4217380	0					
ANR	4217626	Identifier	num		4217380	1					
ANR	4217627	Argument	core -> offset		4217380	1					
ANR	4217628	PtrMemberAccess	core -> offset		4217380	0					
ANR	4217629	Identifier	core		4217380	0					
ANR	4217630	Identifier	offset		4217380	1					
ANR	4217631	Argument	ptr + 2		4217380	2					
ANR	4217632	AdditiveExpression	ptr + 2		4217380	0		+			
ANR	4217633	Identifier	ptr		4217380	0					
ANR	4217634	PrimaryExpression	2		4217380	1					
ANR	4217635	ElseStatement	else		4217380	0					
ANR	4217636	CompoundStatement		30:10:871:871	4217380	0					
ANR	4217637	ExpressionStatement	"to = r_num_math ( core -> num , ptr + 1 )"	4082:4:116504:116538	4217380	0	True				
ANR	4217638	AssignmentExpression	"to = r_num_math ( core -> num , ptr + 1 )"		4217380	0		=			
ANR	4217639	Identifier	to		4217380	0					
ANR	4217640	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		4217380	1					
ANR	4217641	Callee	r_num_math		4217380	0					
ANR	4217642	Identifier	r_num_math		4217380	0					
ANR	4217643	ArgumentList	core -> num		4217380	1					
ANR	4217644	Argument	core -> num		4217380	0					
ANR	4217645	PtrMemberAccess	core -> num		4217380	0					
ANR	4217646	Identifier	core		4217380	0					
ANR	4217647	Identifier	num		4217380	1					
ANR	4217648	Argument	ptr + 1		4217380	1					
ANR	4217649	AdditiveExpression	ptr + 1		4217380	0		+			
ANR	4217650	Identifier	ptr		4217380	0					
ANR	4217651	PrimaryExpression	1		4217380	1					
ANR	4217652	ExpressionStatement	dcu_range = true	4084:3:116548:116564	4217380	2	True				
ANR	4217653	AssignmentExpression	dcu_range = true		4217380	0		=			
ANR	4217654	Identifier	dcu_range		4217380	0					
ANR	4217655	Identifier	true		4217380	1					
ANR	4217656	ElseStatement	else		4217380	0					
ANR	4217657	CompoundStatement		34:9:948:948	4217380	0					
ANR	4217658	ExpressionStatement	"from = r_num_math ( core -> num , input + 3 )"	4086:3:116580:116620	4217380	0	True				
ANR	4217659	AssignmentExpression	"from = r_num_math ( core -> num , input + 3 )"		4217380	0		=			
ANR	4217660	Identifier	from		4217380	0					
ANR	4217661	CallExpression	"r_num_math ( core -> num , input + 3 )"		4217380	1					
ANR	4217662	Callee	r_num_math		4217380	0					
ANR	4217663	Identifier	r_num_math		4217380	0					
ANR	4217664	ArgumentList	core -> num		4217380	1					
ANR	4217665	Argument	core -> num		4217380	0					
ANR	4217666	PtrMemberAccess	core -> num		4217380	0					
ANR	4217667	Identifier	core		4217380	0					
ANR	4217668	Identifier	num		4217380	1					
ANR	4217669	Argument	input + 3		4217380	1					
ANR	4217670	AdditiveExpression	input + 3		4217380	0		+			
ANR	4217671	Identifier	input		4217380	0					
ANR	4217672	PrimaryExpression	3		4217380	1					
ANR	4217673	IfStatement	if ( core -> num -> nc . errors && r_cons_is_interactive ( ) )		4217380	7					
ANR	4217674	Condition	core -> num -> nc . errors && r_cons_is_interactive ( )	4089:5:116634:116681	4217380	0	True				
ANR	4217675	AndExpression	core -> num -> nc . errors && r_cons_is_interactive ( )		4217380	0		&&			
ANR	4217676	MemberAccess	core -> num -> nc . errors		4217380	0					
ANR	4217677	PtrMemberAccess	core -> num -> nc		4217380	0					
ANR	4217678	PtrMemberAccess	core -> num		4217380	0					
ANR	4217679	Identifier	core		4217380	0					
ANR	4217680	Identifier	num		4217380	1					
ANR	4217681	Identifier	nc		4217380	1					
ANR	4217682	Identifier	errors		4217380	1					
ANR	4217683	CallExpression	r_cons_is_interactive ( )		4217380	1					
ANR	4217684	Callee	r_cons_is_interactive		4217380	0					
ANR	4217685	Identifier	r_cons_is_interactive		4217380	0					
ANR	4217686	ArgumentList			4217380	1					
ANR	4217687	CompoundStatement		38:55:1057:1057	4217380	1					
ANR	4217688	ExpressionStatement	"eprintf ( ""Cannot continue until unknown address '%s'\\n"" , core -> num -> nc . calc_buf )"	4090:2:116688:116768	4217380	0	True				
ANR	4217689	CallExpression	"eprintf ( ""Cannot continue until unknown address '%s'\\n"" , core -> num -> nc . calc_buf )"		4217380	0					
ANR	4217690	Callee	eprintf		4217380	0					
ANR	4217691	Identifier	eprintf		4217380	0					
ANR	4217692	ArgumentList	"""Cannot continue until unknown address '%s'\\n"""		4217380	1					
ANR	4217693	Argument	"""Cannot continue until unknown address '%s'\\n"""		4217380	0					
ANR	4217694	PrimaryExpression	"""Cannot continue until unknown address '%s'\\n"""		4217380	0					
ANR	4217695	Argument	core -> num -> nc . calc_buf		4217380	1					
ANR	4217696	MemberAccess	core -> num -> nc . calc_buf		4217380	0					
ANR	4217697	PtrMemberAccess	core -> num -> nc		4217380	0					
ANR	4217698	PtrMemberAccess	core -> num		4217380	0					
ANR	4217699	Identifier	core		4217380	0					
ANR	4217700	Identifier	num		4217380	1					
ANR	4217701	Identifier	nc		4217380	1					
ANR	4217702	Identifier	calc_buf		4217380	1					
ANR	4217703	ReturnStatement	return false ;	4091:2:116772:116784	4217380	1	True				
ANR	4217704	Identifier	false		4217380	0					
ANR	4217705	IfStatement	if ( to == UT64_MAX )		4217380	8					
ANR	4217706	Condition	to == UT64_MAX	4093:5:116794:116807	4217380	0	True				
ANR	4217707	EqualityExpression	to == UT64_MAX		4217380	0		==			
ANR	4217708	Identifier	to		4217380	0					
ANR	4217709	Identifier	UT64_MAX		4217380	1					
ANR	4217710	CompoundStatement		42:21:1183:1183	4217380	1					
ANR	4217711	ExpressionStatement	to = from	4094:2:116814:116823	4217380	0	True				
ANR	4217712	AssignmentExpression	to = from		4217380	0		=			
ANR	4217713	Identifier	to		4217380	0					
ANR	4217714	Identifier	from		4217380	1					
ANR	4217715	IfStatement	if ( dcu_range )		4217380	9					
ANR	4217716	Condition	dcu_range	4096:5:116833:116841	4217380	0	True				
ANR	4217717	Identifier	dcu_range		4217380	0					
ANR	4217718	CompoundStatement		45:16:1217:1217	4217380	1					
ANR	4217719	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4097:2:116848:116878	4217380	0	True				
ANR	4217720	CallExpression	"r_cons_break_push ( NULL , NULL )"		4217380	0					
ANR	4217721	Callee	r_cons_break_push		4217380	0					
ANR	4217722	Identifier	r_cons_break_push		4217380	0					
ANR	4217723	ArgumentList	NULL		4217380	1					
ANR	4217724	Argument	NULL		4217380	0					
ANR	4217725	Identifier	NULL		4217380	0					
ANR	4217726	Argument	NULL		4217380	1					
ANR	4217727	Identifier	NULL		4217380	0					
ANR	4217728	DoStatement	do		4217380	1					
ANR	4217729	CompoundStatement		47:5:1258:1258	4217380	0					
ANR	4217730	IfStatement	if ( r_cons_is_breaked ( ) )		4217380	0					
ANR	4217731	Condition	r_cons_is_breaked ( )	4099:7:116894:116913	4217380	0	True				
ANR	4217732	CallExpression	r_cons_is_breaked ( )		4217380	0					
ANR	4217733	Callee	r_cons_is_breaked		4217380	0					
ANR	4217734	Identifier	r_cons_is_breaked		4217380	0					
ANR	4217735	ArgumentList			4217380	1					
ANR	4217736	CompoundStatement		48:29:1289:1289	4217380	1					
ANR	4217737	BreakStatement	break ;	4100:4:116922:116927	4217380	0	True				
ANR	4217738	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4102:3:116937:116964	4217380	1	True				
ANR	4217739	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4217380	0					
ANR	4217740	Callee	r_debug_step		4217380	0					
ANR	4217741	Identifier	r_debug_step		4217380	0					
ANR	4217742	ArgumentList	core -> dbg		4217380	1					
ANR	4217743	Argument	core -> dbg		4217380	0					
ANR	4217744	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217745	Identifier	core		4217380	0					
ANR	4217746	Identifier	dbg		4217380	1					
ANR	4217747	Argument	1		4217380	1					
ANR	4217748	PrimaryExpression	1		4217380	0					
ANR	4217749	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4103:3:116969:117020	4217380	2	True				
ANR	4217750	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4217380	0					
ANR	4217751	Callee	r_debug_reg_sync		4217380	0					
ANR	4217752	Identifier	r_debug_reg_sync		4217380	0					
ANR	4217753	ArgumentList	core -> dbg		4217380	1					
ANR	4217754	Argument	core -> dbg		4217380	0					
ANR	4217755	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217756	Identifier	core		4217380	0					
ANR	4217757	Identifier	dbg		4217380	1					
ANR	4217758	Argument	R_REG_TYPE_GPR		4217380	1					
ANR	4217759	Identifier	R_REG_TYPE_GPR		4217380	0					
ANR	4217760	Argument	false		4217380	2					
ANR	4217761	Identifier	false		4217380	0					
ANR	4217762	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	4104:3:117025:117063	4217380	3	True				
ANR	4217763	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4217380	0		=			
ANR	4217764	Identifier	pc		4217380	0					
ANR	4217765	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4217380	1					
ANR	4217766	Callee	r_debug_reg_get		4217380	0					
ANR	4217767	Identifier	r_debug_reg_get		4217380	0					
ANR	4217768	ArgumentList	core -> dbg		4217380	1					
ANR	4217769	Argument	core -> dbg		4217380	0					
ANR	4217770	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217771	Identifier	core		4217380	0					
ANR	4217772	Identifier	dbg		4217380	1					
ANR	4217773	Argument	"""PC"""		4217380	1					
ANR	4217774	PrimaryExpression	"""PC"""		4217380	0					
ANR	4217775	Statement	eprintf	4105:3:117068:117074	4217380	4	True				
ANR	4217776	Statement	(	4105:11:117076:117076	4217380	5	True				
ANR	4217777	Statement	"""Continue 0x%08"""	4105:12:117077:117092	4217380	6	True				
ANR	4217778	Statement	PFMT64x	4105:28:117093:117099	4217380	7	True				
ANR	4217779	Statement	""" > 0x%08"""	4105:35:117100:117109	4217380	8	True				
ANR	4217780	Statement	PFMT64x	4105:45:117110:117116	4217380	9	True				
ANR	4217781	Statement	""" < 0x%08"""	4105:52:117117:117126	4217380	10	True				
ANR	4217782	Statement	PFMT64x	4105:62:117127:117133	4217380	11	True				
ANR	4217783	Statement	"""\\n"""	4105:69:117134:117137	4217380	12	True				
ANR	4217784	Statement	","	4105:73:117138:117138	4217380	13	True				
ANR	4217785	Statement	from	4106:5:117145:117148	4217380	14	True				
ANR	4217786	Statement	","	4106:9:117149:117149	4217380	15	True				
ANR	4217787	Statement	pc	4106:11:117151:117152	4217380	16	True				
ANR	4217788	Statement	","	4106:13:117153:117153	4217380	17	True				
ANR	4217789	Statement	to	4106:15:117155:117156	4217380	18	True				
ANR	4217790	Statement	)	4106:17:117157:117157	4217380	19	True				
ANR	4217791	ExpressionStatement		4106:18:117158:117158	4217380	20	True				
ANR	4217792	Condition	pc < from || pc > to	4107:11:117171:117190	4217380	1	True				
ANR	4217793	OrExpression	pc < from || pc > to		4217380	0		||			
ANR	4217794	RelationalExpression	pc < from		4217380	0		<			
ANR	4217795	Identifier	pc		4217380	0					
ANR	4217796	Identifier	from		4217380	1					
ANR	4217797	RelationalExpression	pc > to		4217380	1		>			
ANR	4217798	Identifier	pc		4217380	0					
ANR	4217799	Identifier	to		4217380	1					
ANR	4217800	ExpressionStatement	r_cons_break_pop ( )	4108:2:117196:117215	4217380	2	True				
ANR	4217801	CallExpression	r_cons_break_pop ( )		4217380	0					
ANR	4217802	Callee	r_cons_break_pop		4217380	0					
ANR	4217803	Identifier	r_cons_break_pop		4217380	0					
ANR	4217804	ArgumentList			4217380	1					
ANR	4217805	ElseStatement	else		4217380	0					
ANR	4217806	CompoundStatement		59:2:1602:1618	4217380	0					
ANR	4217807	IdentifierDeclStatement	ut64 addr = from ;	4110:2:117229:117245	4217380	0	True				
ANR	4217808	IdentifierDecl	addr = from		4217380	0					
ANR	4217809	IdentifierDeclType	ut64		4217380	0					
ANR	4217810	Identifier	addr		4217380	1					
ANR	4217811	AssignmentExpression	addr = from		4217380	2		=			
ANR	4217812	Identifier	from		4217380	0					
ANR	4217813	Identifier	from		4217380	1					
ANR	4217814	IfStatement	"if ( ! strcmp ( core -> dbg -> btalgo , ""trace"" ) && core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4 )"		4217380	1					
ANR	4217815	Condition	"! strcmp ( core -> dbg -> btalgo , ""trace"" ) && core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"	4111:6:117253:117373	4217380	0	True				
ANR	4217816	AndExpression	"! strcmp ( core -> dbg -> btalgo , ""trace"" ) && core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"		4217380	0		&&			
ANR	4217817	UnaryOperationExpression	"! strcmp ( core -> dbg -> btalgo , ""trace"" )"		4217380	0					
ANR	4217818	UnaryOperator	!		4217380	0					
ANR	4217819	CallExpression	"strcmp ( core -> dbg -> btalgo , ""trace"" )"		4217380	1					
ANR	4217820	Callee	strcmp		4217380	0					
ANR	4217821	Identifier	strcmp		4217380	0					
ANR	4217822	ArgumentList	core -> dbg -> btalgo		4217380	1					
ANR	4217823	Argument	core -> dbg -> btalgo		4217380	0					
ANR	4217824	PtrMemberAccess	core -> dbg -> btalgo		4217380	0					
ANR	4217825	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217826	Identifier	core		4217380	0					
ANR	4217827	Identifier	dbg		4217380	1					
ANR	4217828	Identifier	btalgo		4217380	1					
ANR	4217829	Argument	"""trace"""		4217380	1					
ANR	4217830	PrimaryExpression	"""trace"""		4217380	0					
ANR	4217831	AndExpression	"core -> dbg -> arch && ! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"		4217380	1		&&			
ANR	4217832	PtrMemberAccess	core -> dbg -> arch		4217380	0					
ANR	4217833	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217834	Identifier	core		4217380	0					
ANR	4217835	Identifier	dbg		4217380	1					
ANR	4217836	Identifier	arch		4217380	1					
ANR	4217837	AndExpression	"! strcmp ( core -> dbg -> arch , ""x86"" ) && core -> dbg -> bits == 4"		4217380	1		&&			
ANR	4217838	UnaryOperationExpression	"! strcmp ( core -> dbg -> arch , ""x86"" )"		4217380	0					
ANR	4217839	UnaryOperator	!		4217380	0					
ANR	4217840	CallExpression	"strcmp ( core -> dbg -> arch , ""x86"" )"		4217380	1					
ANR	4217841	Callee	strcmp		4217380	0					
ANR	4217842	Identifier	strcmp		4217380	0					
ANR	4217843	ArgumentList	core -> dbg -> arch		4217380	1					
ANR	4217844	Argument	core -> dbg -> arch		4217380	0					
ANR	4217845	PtrMemberAccess	core -> dbg -> arch		4217380	0					
ANR	4217846	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217847	Identifier	core		4217380	0					
ANR	4217848	Identifier	dbg		4217380	1					
ANR	4217849	Identifier	arch		4217380	1					
ANR	4217850	Argument	"""x86"""		4217380	1					
ANR	4217851	PrimaryExpression	"""x86"""		4217380	0					
ANR	4217852	EqualityExpression	core -> dbg -> bits == 4		4217380	1		==			
ANR	4217853	PtrMemberAccess	core -> dbg -> bits		4217380	0					
ANR	4217854	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217855	Identifier	core		4217380	0					
ANR	4217856	Identifier	dbg		4217380	1					
ANR	4217857	Identifier	bits		4217380	1					
ANR	4217858	PrimaryExpression	4		4217380	1					
ANR	4217859	CompoundStatement		69:3:2006:2025	4217380	1					
ANR	4217860	IdentifierDeclStatement	unsigned long steps = 0 ;	4113:3:117381:117404	4217380	0	True				
ANR	4217861	IdentifierDecl	steps = 0		4217380	0					
ANR	4217862	IdentifierDeclType	unsigned long		4217380	0					
ANR	4217863	Identifier	steps		4217380	1					
ANR	4217864	AssignmentExpression	steps = 0		4217380	2		=			
ANR	4217865	Identifier	steps		4217380	0					
ANR	4217866	PrimaryExpression	0		4217380	1					
ANR	4217867	IdentifierDeclStatement	long level = 0 ;	4114:3:117409:117423	4217380	1	True				
ANR	4217868	IdentifierDecl	level = 0		4217380	0					
ANR	4217869	IdentifierDeclType	long		4217380	0					
ANR	4217870	Identifier	level		4217380	1					
ANR	4217871	AssignmentExpression	level = 0		4217380	2		=			
ANR	4217872	Identifier	level		4217380	0					
ANR	4217873	PrimaryExpression	0		4217380	1					
ANR	4217874	IdentifierDeclStatement	const char * pc_name = core -> dbg -> reg -> name [ R_REG_NAME_PC ] ;	4115:3:117428:117485	4217380	2	True				
ANR	4217875	IdentifierDecl	* pc_name = core -> dbg -> reg -> name [ R_REG_NAME_PC ]		4217380	0					
ANR	4217876	IdentifierDeclType	const char *		4217380	0					
ANR	4217877	Identifier	pc_name		4217380	1					
ANR	4217878	AssignmentExpression	* pc_name = core -> dbg -> reg -> name [ R_REG_NAME_PC ]		4217380	2		=			
ANR	4217879	Identifier	pc_name		4217380	0					
ANR	4217880	ArrayIndexing	core -> dbg -> reg -> name [ R_REG_NAME_PC ]		4217380	1					
ANR	4217881	PtrMemberAccess	core -> dbg -> reg -> name		4217380	0					
ANR	4217882	PtrMemberAccess	core -> dbg -> reg		4217380	0					
ANR	4217883	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217884	Identifier	core		4217380	0					
ANR	4217885	Identifier	dbg		4217380	1					
ANR	4217886	Identifier	reg		4217380	1					
ANR	4217887	Identifier	name		4217380	1					
ANR	4217888	Identifier	R_REG_NAME_PC		4217380	1					
ANR	4217889	IdentifierDeclStatement	ut64 prev_pc = UT64_MAX ;	4116:3:117490:117513	4217380	3	True				
ANR	4217890	IdentifierDecl	prev_pc = UT64_MAX		4217380	0					
ANR	4217891	IdentifierDeclType	ut64		4217380	0					
ANR	4217892	Identifier	prev_pc		4217380	1					
ANR	4217893	AssignmentExpression	prev_pc = UT64_MAX		4217380	2		=			
ANR	4217894	Identifier	UT64_MAX		4217380	0					
ANR	4217895	Identifier	UT64_MAX		4217380	1					
ANR	4217896	IdentifierDeclStatement	bool prev_call = false ;	4117:3:117518:117540	4217380	4	True				
ANR	4217897	IdentifierDecl	prev_call = false		4217380	0					
ANR	4217898	IdentifierDeclType	bool		4217380	0					
ANR	4217899	Identifier	prev_call		4217380	1					
ANR	4217900	AssignmentExpression	prev_call = false		4217380	2		=			
ANR	4217901	Identifier	false		4217380	0					
ANR	4217902	Identifier	false		4217380	1					
ANR	4217903	IdentifierDeclStatement	bool prev_ret = false ;	4118:3:117545:117566	4217380	5	True				
ANR	4217904	IdentifierDecl	prev_ret = false		4217380	0					
ANR	4217905	IdentifierDeclType	bool		4217380	0					
ANR	4217906	Identifier	prev_ret		4217380	1					
ANR	4217907	AssignmentExpression	prev_ret = false		4217380	2		=			
ANR	4217908	Identifier	false		4217380	0					
ANR	4217909	Identifier	false		4217380	1					
ANR	4217910	IdentifierDeclStatement	const char * sp_name = core -> dbg -> reg -> name [ R_REG_NAME_SP ] ;	4119:3:117571:117628	4217380	6	True				
ANR	4217911	IdentifierDecl	* sp_name = core -> dbg -> reg -> name [ R_REG_NAME_SP ]		4217380	0					
ANR	4217912	IdentifierDeclType	const char *		4217380	0					
ANR	4217913	Identifier	sp_name		4217380	1					
ANR	4217914	AssignmentExpression	* sp_name = core -> dbg -> reg -> name [ R_REG_NAME_SP ]		4217380	2		=			
ANR	4217915	Identifier	sp_name		4217380	0					
ANR	4217916	ArrayIndexing	core -> dbg -> reg -> name [ R_REG_NAME_SP ]		4217380	1					
ANR	4217917	PtrMemberAccess	core -> dbg -> reg -> name		4217380	0					
ANR	4217918	PtrMemberAccess	core -> dbg -> reg		4217380	0					
ANR	4217919	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217920	Identifier	core		4217380	0					
ANR	4217921	Identifier	dbg		4217380	1					
ANR	4217922	Identifier	reg		4217380	1					
ANR	4217923	Identifier	name		4217380	1					
ANR	4217924	Identifier	R_REG_NAME_SP		4217380	1					
ANR	4217925	IdentifierDeclStatement	"ut64 old_sp , cur_sp ;"	4120:3:117633:117652	4217380	7	True				
ANR	4217926	IdentifierDecl	old_sp		4217380	0					
ANR	4217927	IdentifierDeclType	ut64		4217380	0					
ANR	4217928	Identifier	old_sp		4217380	1					
ANR	4217929	IdentifierDecl	cur_sp		4217380	1					
ANR	4217930	IdentifierDeclType	ut64		4217380	0					
ANR	4217931	Identifier	cur_sp		4217380	1					
ANR	4217932	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	4121:3:117657:117687	4217380	8	True				
ANR	4217933	CallExpression	"r_cons_break_push ( NULL , NULL )"		4217380	0					
ANR	4217934	Callee	r_cons_break_push		4217380	0					
ANR	4217935	Identifier	r_cons_break_push		4217380	0					
ANR	4217936	ArgumentList	NULL		4217380	1					
ANR	4217937	Argument	NULL		4217380	0					
ANR	4217938	Identifier	NULL		4217380	0					
ANR	4217939	Argument	NULL		4217380	1					
ANR	4217940	Identifier	NULL		4217380	0					
ANR	4217941	ExpressionStatement	r_list_free ( core -> dbg -> call_frames )	4122:3:117692:117728	4217380	9	True				
ANR	4217942	CallExpression	r_list_free ( core -> dbg -> call_frames )		4217380	0					
ANR	4217943	Callee	r_list_free		4217380	0					
ANR	4217944	Identifier	r_list_free		4217380	0					
ANR	4217945	ArgumentList	core -> dbg -> call_frames		4217380	1					
ANR	4217946	Argument	core -> dbg -> call_frames		4217380	0					
ANR	4217947	PtrMemberAccess	core -> dbg -> call_frames		4217380	0					
ANR	4217948	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217949	Identifier	core		4217380	0					
ANR	4217950	Identifier	dbg		4217380	1					
ANR	4217951	Identifier	call_frames		4217380	1					
ANR	4217952	ExpressionStatement	core -> dbg -> call_frames = r_list_new ( )	4123:3:117733:117771	4217380	10	True				
ANR	4217953	AssignmentExpression	core -> dbg -> call_frames = r_list_new ( )		4217380	0		=			
ANR	4217954	PtrMemberAccess	core -> dbg -> call_frames		4217380	0					
ANR	4217955	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217956	Identifier	core		4217380	0					
ANR	4217957	Identifier	dbg		4217380	1					
ANR	4217958	Identifier	call_frames		4217380	1					
ANR	4217959	CallExpression	r_list_new ( )		4217380	1					
ANR	4217960	Callee	r_list_new		4217380	0					
ANR	4217961	Identifier	r_list_new		4217380	0					
ANR	4217962	ArgumentList			4217380	1					
ANR	4217963	ExpressionStatement	core -> dbg -> call_frames -> free = free	4124:3:117776:117811	4217380	11	True				
ANR	4217964	AssignmentExpression	core -> dbg -> call_frames -> free = free		4217380	0		=			
ANR	4217965	PtrMemberAccess	core -> dbg -> call_frames -> free		4217380	0					
ANR	4217966	PtrMemberAccess	core -> dbg -> call_frames		4217380	0					
ANR	4217967	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217968	Identifier	core		4217380	0					
ANR	4217969	Identifier	dbg		4217380	1					
ANR	4217970	Identifier	call_frames		4217380	1					
ANR	4217971	Identifier	free		4217380	1					
ANR	4217972	Identifier	free		4217380	1					
ANR	4217973	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4125:3:117816:117867	4217380	12	True				
ANR	4217974	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4217380	0					
ANR	4217975	Callee	r_debug_reg_sync		4217380	0					
ANR	4217976	Identifier	r_debug_reg_sync		4217380	0					
ANR	4217977	ArgumentList	core -> dbg		4217380	1					
ANR	4217978	Argument	core -> dbg		4217380	0					
ANR	4217979	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217980	Identifier	core		4217380	0					
ANR	4217981	Identifier	dbg		4217380	1					
ANR	4217982	Argument	R_REG_TYPE_GPR		4217380	1					
ANR	4217983	Identifier	R_REG_TYPE_GPR		4217380	0					
ANR	4217984	Argument	false		4217380	2					
ANR	4217985	Identifier	false		4217380	0					
ANR	4217986	ExpressionStatement	"old_sp = r_debug_reg_get ( core -> dbg , sp_name )"	4126:3:117872:117917	4217380	13	True				
ANR	4217987	AssignmentExpression	"old_sp = r_debug_reg_get ( core -> dbg , sp_name )"		4217380	0		=			
ANR	4217988	Identifier	old_sp		4217380	0					
ANR	4217989	CallExpression	"r_debug_reg_get ( core -> dbg , sp_name )"		4217380	1					
ANR	4217990	Callee	r_debug_reg_get		4217380	0					
ANR	4217991	Identifier	r_debug_reg_get		4217380	0					
ANR	4217992	ArgumentList	core -> dbg		4217380	1					
ANR	4217993	Argument	core -> dbg		4217380	0					
ANR	4217994	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4217995	Identifier	core		4217380	0					
ANR	4217996	Identifier	dbg		4217380	1					
ANR	4217997	Argument	sp_name		4217380	1					
ANR	4217998	Identifier	sp_name		4217380	0					
ANR	4217999	WhileStatement	while ( true )		4217380	14					
ANR	4218000	Condition	true	4127:10:117929:117932	4217380	0	True				
ANR	4218001	Identifier	true		4217380	0					
ANR	4218002	CompoundStatement		76:16:2308:2308	4217380	1					
ANR	4218003	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4128:4:117941:117992	4217380	0	True				
ANR	4218004	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4217380	0					
ANR	4218005	Callee	r_debug_reg_sync		4217380	0					
ANR	4218006	Identifier	r_debug_reg_sync		4217380	0					
ANR	4218007	ArgumentList	core -> dbg		4217380	1					
ANR	4218008	Argument	core -> dbg		4217380	0					
ANR	4218009	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218010	Identifier	core		4217380	0					
ANR	4218011	Identifier	dbg		4217380	1					
ANR	4218012	Argument	R_REG_TYPE_GPR		4217380	1					
ANR	4218013	Identifier	R_REG_TYPE_GPR		4217380	0					
ANR	4218014	Argument	false		4217380	2					
ANR	4218015	Identifier	false		4217380	0					
ANR	4218016	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , pc_name )"	4129:4:117998:118039	4217380	1	True				
ANR	4218017	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , pc_name )"		4217380	0		=			
ANR	4218018	Identifier	pc		4217380	0					
ANR	4218019	CallExpression	"r_debug_reg_get ( core -> dbg , pc_name )"		4217380	1					
ANR	4218020	Callee	r_debug_reg_get		4217380	0					
ANR	4218021	Identifier	r_debug_reg_get		4217380	0					
ANR	4218022	ArgumentList	core -> dbg		4217380	1					
ANR	4218023	Argument	core -> dbg		4217380	0					
ANR	4218024	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218025	Identifier	core		4217380	0					
ANR	4218026	Identifier	dbg		4217380	1					
ANR	4218027	Argument	pc_name		4217380	1					
ANR	4218028	Identifier	pc_name		4217380	0					
ANR	4218029	IfStatement	if ( prev_call )		4217380	2					
ANR	4218030	Condition	prev_call	4130:8:118049:118057	4217380	0	True				
ANR	4218031	Identifier	prev_call		4217380	0					
ANR	4218032	CompoundStatement		81:5:2460:2501	4217380	1					
ANR	4218033	IdentifierDeclStatement	ut32 ret_addr ;	4131:5:118067:118080	4217380	0	True				
ANR	4218034	IdentifierDecl	ret_addr		4217380	0					
ANR	4218035	IdentifierDeclType	ut32		4217380	0					
ANR	4218036	Identifier	ret_addr		4217380	1					
ANR	4218037	IdentifierDeclStatement	RDebugFrame * frame = R_NEW0 ( RDebugFrame ) ;	4132:5:118087:118128	4217380	1	True				
ANR	4218038	IdentifierDecl	* frame = R_NEW0 ( RDebugFrame )		4217380	0					
ANR	4218039	IdentifierDeclType	RDebugFrame *		4217380	0					
ANR	4218040	Identifier	frame		4217380	1					
ANR	4218041	AssignmentExpression	* frame = R_NEW0 ( RDebugFrame )		4217380	2		=			
ANR	4218042	Identifier	frame		4217380	0					
ANR	4218043	CallExpression	R_NEW0 ( RDebugFrame )		4217380	1					
ANR	4218044	Callee	R_NEW0		4217380	0					
ANR	4218045	Identifier	R_NEW0		4217380	0					
ANR	4218046	ArgumentList	RDebugFrame		4217380	1					
ANR	4218047	Argument	RDebugFrame		4217380	0					
ANR	4218048	Identifier	RDebugFrame		4217380	0					
ANR	4218049	ExpressionStatement	"cur_sp = r_debug_reg_get ( core -> dbg , sp_name )"	4133:5:118135:118180	4217380	2	True				
ANR	4218050	AssignmentExpression	"cur_sp = r_debug_reg_get ( core -> dbg , sp_name )"		4217380	0		=			
ANR	4218051	Identifier	cur_sp		4217380	0					
ANR	4218052	CallExpression	"r_debug_reg_get ( core -> dbg , sp_name )"		4217380	1					
ANR	4218053	Callee	r_debug_reg_get		4217380	0					
ANR	4218054	Identifier	r_debug_reg_get		4217380	0					
ANR	4218055	ArgumentList	core -> dbg		4217380	1					
ANR	4218056	Argument	core -> dbg		4217380	0					
ANR	4218057	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218058	Identifier	core		4217380	0					
ANR	4218059	Identifier	dbg		4217380	1					
ANR	4218060	Argument	sp_name		4217380	1					
ANR	4218061	Identifier	sp_name		4217380	0					
ANR	4218062	ExpressionStatement	"( void ) core -> dbg -> iob . read_at ( core -> dbg -> iob . io , cur_sp , ( ut8 * ) & ret_addr , sizeof ( ret_addr ) )"	4134:5:118187:118315	4217380	3	True				
ANR	4218063	CastExpression	"( void ) core -> dbg -> iob . read_at ( core -> dbg -> iob . io , cur_sp , ( ut8 * ) & ret_addr , sizeof ( ret_addr ) )"		4217380	0					
ANR	4218064	CastTarget	void		4217380	0					
ANR	4218065	CallExpression	"core -> dbg -> iob . read_at ( core -> dbg -> iob . io , cur_sp , ( ut8 * ) & ret_addr , sizeof ( ret_addr ) )"		4217380	1					
ANR	4218066	Callee	core -> dbg -> iob . read_at		4217380	0					
ANR	4218067	MemberAccess	core -> dbg -> iob . read_at		4217380	0					
ANR	4218068	PtrMemberAccess	core -> dbg -> iob		4217380	0					
ANR	4218069	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218070	Identifier	core		4217380	0					
ANR	4218071	Identifier	dbg		4217380	1					
ANR	4218072	Identifier	iob		4217380	1					
ANR	4218073	Identifier	read_at		4217380	1					
ANR	4218074	ArgumentList	core -> dbg -> iob . io		4217380	1					
ANR	4218075	Argument	core -> dbg -> iob . io		4217380	0					
ANR	4218076	MemberAccess	core -> dbg -> iob . io		4217380	0					
ANR	4218077	PtrMemberAccess	core -> dbg -> iob		4217380	0					
ANR	4218078	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218079	Identifier	core		4217380	0					
ANR	4218080	Identifier	dbg		4217380	1					
ANR	4218081	Identifier	iob		4217380	1					
ANR	4218082	Identifier	io		4217380	1					
ANR	4218083	Argument	cur_sp		4217380	1					
ANR	4218084	Identifier	cur_sp		4217380	0					
ANR	4218085	Argument	( ut8 * ) & ret_addr		4217380	2					
ANR	4218086	CastExpression	( ut8 * ) & ret_addr		4217380	0					
ANR	4218087	CastTarget	ut8 *		4217380	0					
ANR	4218088	UnaryOperationExpression	& ret_addr		4217380	1					
ANR	4218089	UnaryOperator	&		4217380	0					
ANR	4218090	Identifier	ret_addr		4217380	1					
ANR	4218091	Argument	sizeof ( ret_addr )		4217380	3					
ANR	4218092	SizeofExpression	sizeof ( ret_addr )		4217380	0					
ANR	4218093	Sizeof	sizeof		4217380	0					
ANR	4218094	SizeofOperand	ret_addr		4217380	1					
ANR	4218095	ExpressionStatement	frame -> addr = ret_addr	4136:5:118322:118344	4217380	4	True				
ANR	4218096	AssignmentExpression	frame -> addr = ret_addr		4217380	0		=			
ANR	4218097	PtrMemberAccess	frame -> addr		4217380	0					
ANR	4218098	Identifier	frame		4217380	0					
ANR	4218099	Identifier	addr		4217380	1					
ANR	4218100	Identifier	ret_addr		4217380	1					
ANR	4218101	ExpressionStatement	frame -> size = old_sp - cur_sp	4137:5:118351:118380	4217380	5	True				
ANR	4218102	AssignmentExpression	frame -> size = old_sp - cur_sp		4217380	0		=			
ANR	4218103	PtrMemberAccess	frame -> size		4217380	0					
ANR	4218104	Identifier	frame		4217380	0					
ANR	4218105	Identifier	size		4217380	1					
ANR	4218106	AdditiveExpression	old_sp - cur_sp		4217380	1		-			
ANR	4218107	Identifier	old_sp		4217380	0					
ANR	4218108	Identifier	cur_sp		4217380	1					
ANR	4218109	ExpressionStatement	frame -> sp = cur_sp	4138:5:118387:118405	4217380	6	True				
ANR	4218110	AssignmentExpression	frame -> sp = cur_sp		4217380	0		=			
ANR	4218111	PtrMemberAccess	frame -> sp		4217380	0					
ANR	4218112	Identifier	frame		4217380	0					
ANR	4218113	Identifier	sp		4217380	1					
ANR	4218114	Identifier	cur_sp		4217380	1					
ANR	4218115	ExpressionStatement	frame -> bp = old_sp	4139:5:118412:118430	4217380	7	True				
ANR	4218116	AssignmentExpression	frame -> bp = old_sp		4217380	0		=			
ANR	4218117	PtrMemberAccess	frame -> bp		4217380	0					
ANR	4218118	Identifier	frame		4217380	0					
ANR	4218119	Identifier	bp		4217380	1					
ANR	4218120	Identifier	old_sp		4217380	1					
ANR	4218121	ExpressionStatement	"r_list_prepend ( core -> dbg -> call_frames , frame )"	4140:5:118437:118483	4217380	8	True				
ANR	4218122	CallExpression	"r_list_prepend ( core -> dbg -> call_frames , frame )"		4217380	0					
ANR	4218123	Callee	r_list_prepend		4217380	0					
ANR	4218124	Identifier	r_list_prepend		4217380	0					
ANR	4218125	ArgumentList	core -> dbg -> call_frames		4217380	1					
ANR	4218126	Argument	core -> dbg -> call_frames		4217380	0					
ANR	4218127	PtrMemberAccess	core -> dbg -> call_frames		4217380	0					
ANR	4218128	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218129	Identifier	core		4217380	0					
ANR	4218130	Identifier	dbg		4217380	1					
ANR	4218131	Identifier	call_frames		4217380	1					
ANR	4218132	Argument	frame		4217380	1					
ANR	4218133	Identifier	frame		4217380	0					
ANR	4218134	Statement	eprintf	4141:5:118490:118496	4217380	9	True				
ANR	4218135	Statement	(	4141:13:118498:118498	4217380	10	True				
ANR	4218136	Statement	"""%ld Call from 0x%08"""	4141:14:118499:118519	4217380	11	True				
ANR	4218137	Statement	PFMT64x	4141:35:118520:118526	4217380	12	True				
ANR	4218138	Statement	""" to 0x%08"""	4141:42:118527:118537	4217380	13	True				
ANR	4218139	Statement	PFMT64x	4141:53:118538:118544	4217380	14	True				
ANR	4218140	Statement	""" ret 0x%08"""	4141:60:118545:118556	4217380	15	True				
ANR	4218141	Statement	PFMT32x	4141:72:118557:118563	4217380	16	True				
ANR	4218142	Statement	"""\\n"""	4141:79:118564:118567	4217380	17	True				
ANR	4218143	Statement	","	4141:83:118568:118568	4217380	18	True				
ANR	4218144	Statement	level	4142:14:118584:118588	4217380	19	True				
ANR	4218145	Statement	","	4142:19:118589:118589	4217380	20	True				
ANR	4218146	Statement	prev_pc	4142:21:118591:118597	4217380	21	True				
ANR	4218147	Statement	","	4142:28:118598:118598	4217380	22	True				
ANR	4218148	Statement	pc	4142:30:118600:118601	4217380	23	True				
ANR	4218149	Statement	","	4142:32:118602:118602	4217380	24	True				
ANR	4218150	Statement	ret_addr	4142:34:118604:118611	4217380	25	True				
ANR	4218151	Statement	)	4142:42:118612:118612	4217380	26	True				
ANR	4218152	ExpressionStatement		4142:43:118613:118613	4217380	27	True				
ANR	4218153	ExpressionStatement	level ++	4143:5:118620:118627	4217380	28	True				
ANR	4218154	PostIncDecOperationExpression	level ++		4217380	0					
ANR	4218155	Identifier	level		4217380	0					
ANR	4218156	IncDec	++		4217380	1					
ANR	4218157	ExpressionStatement	old_sp = cur_sp	4144:5:118634:118649	4217380	29	True				
ANR	4218158	AssignmentExpression	old_sp = cur_sp		4217380	0		=			
ANR	4218159	Identifier	old_sp		4217380	0					
ANR	4218160	Identifier	cur_sp		4217380	1					
ANR	4218161	ExpressionStatement	prev_call = false	4145:5:118656:118673	4217380	30	True				
ANR	4218162	AssignmentExpression	prev_call = false		4217380	0		=			
ANR	4218163	Identifier	prev_call		4217380	0					
ANR	4218164	Identifier	false		4217380	1					
ANR	4218165	ElseStatement	else		4217380	0					
ANR	4218166	IfStatement	if ( prev_ret )		4217380	0					
ANR	4218167	Condition	prev_ret	4146:15:118690:118697	4217380	0	True				
ANR	4218168	Identifier	prev_ret		4217380	0					
ANR	4218169	CompoundStatement		96:5:3080:3142	4217380	1					
ANR	4218170	IdentifierDeclStatement	RDebugFrame * head = r_list_get_bottom ( core -> dbg -> call_frames ) ;	4147:5:118707:118769	4217380	0	True				
ANR	4218171	IdentifierDecl	* head = r_list_get_bottom ( core -> dbg -> call_frames )		4217380	0					
ANR	4218172	IdentifierDeclType	RDebugFrame *		4217380	0					
ANR	4218173	Identifier	head		4217380	1					
ANR	4218174	AssignmentExpression	* head = r_list_get_bottom ( core -> dbg -> call_frames )		4217380	2		=			
ANR	4218175	Identifier	head		4217380	0					
ANR	4218176	CallExpression	r_list_get_bottom ( core -> dbg -> call_frames )		4217380	1					
ANR	4218177	Callee	r_list_get_bottom		4217380	0					
ANR	4218178	Identifier	r_list_get_bottom		4217380	0					
ANR	4218179	ArgumentList	core -> dbg -> call_frames		4217380	1					
ANR	4218180	Argument	core -> dbg -> call_frames		4217380	0					
ANR	4218181	PtrMemberAccess	core -> dbg -> call_frames		4217380	0					
ANR	4218182	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218183	Identifier	core		4217380	0					
ANR	4218184	Identifier	dbg		4217380	1					
ANR	4218185	Identifier	call_frames		4217380	1					
ANR	4218186	IfStatement	if ( head && head -> addr != pc )		4217380	1					
ANR	4218187	Condition	head && head -> addr != pc	4148:9:118780:118803	4217380	0	True				
ANR	4218188	AndExpression	head && head -> addr != pc		4217380	0		&&			
ANR	4218189	Identifier	head		4217380	0					
ANR	4218190	EqualityExpression	head -> addr != pc		4217380	1		!=			
ANR	4218191	PtrMemberAccess	head -> addr		4217380	0					
ANR	4218192	Identifier	head		4217380	0					
ANR	4218193	Identifier	addr		4217380	1					
ANR	4218194	Identifier	pc		4217380	1					
ANR	4218195	CompoundStatement		97:35:3179:3179	4217380	1					
ANR	4218196	ExpressionStatement	"eprintf ( ""*"" )"	4149:6:118814:118827	4217380	0	True				
ANR	4218197	CallExpression	"eprintf ( ""*"" )"		4217380	0					
ANR	4218198	Callee	eprintf		4217380	0					
ANR	4218199	Identifier	eprintf		4217380	0					
ANR	4218200	ArgumentList	"""*"""		4217380	1					
ANR	4218201	Argument	"""*"""		4217380	0					
ANR	4218202	PrimaryExpression	"""*"""		4217380	0					
ANR	4218203	ElseStatement	else		4217380	0					
ANR	4218204	CompoundStatement		99:12:3214:3214	4217380	0					
ANR	4218205	ExpressionStatement	r_list_pop_head ( core -> dbg -> call_frames )	4151:6:118849:118889	4217380	0	True				
ANR	4218206	CallExpression	r_list_pop_head ( core -> dbg -> call_frames )		4217380	0					
ANR	4218207	Callee	r_list_pop_head		4217380	0					
ANR	4218208	Identifier	r_list_pop_head		4217380	0					
ANR	4218209	ArgumentList	core -> dbg -> call_frames		4217380	1					
ANR	4218210	Argument	core -> dbg -> call_frames		4217380	0					
ANR	4218211	PtrMemberAccess	core -> dbg -> call_frames		4217380	0					
ANR	4218212	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218213	Identifier	core		4217380	0					
ANR	4218214	Identifier	dbg		4217380	1					
ANR	4218215	Identifier	call_frames		4217380	1					
ANR	4218216	ExpressionStatement	"eprintf ( ""%ld"" , level )"	4152:6:118897:118919	4217380	1	True				
ANR	4218217	CallExpression	"eprintf ( ""%ld"" , level )"		4217380	0					
ANR	4218218	Callee	eprintf		4217380	0					
ANR	4218219	Identifier	eprintf		4217380	0					
ANR	4218220	ArgumentList	"""%ld"""		4217380	1					
ANR	4218221	Argument	"""%ld"""		4217380	0					
ANR	4218222	PrimaryExpression	"""%ld"""		4217380	0					
ANR	4218223	Argument	level		4217380	1					
ANR	4218224	Identifier	level		4217380	0					
ANR	4218225	ExpressionStatement	level --	4153:6:118927:118934	4217380	2	True				
ANR	4218226	PostIncDecOperationExpression	level --		4217380	0					
ANR	4218227	Identifier	level		4217380	0					
ANR	4218228	IncDec	--		4217380	1					
ANR	4218229	Statement	eprintf	4155:5:118948:118954	4217380	2	True				
ANR	4218230	Statement	(	4155:13:118956:118956	4217380	3	True				
ANR	4218231	Statement	""" Ret from 0x%08"""	4155:14:118957:118973	4217380	4	True				
ANR	4218232	Statement	PFMT64x	4155:31:118974:118980	4217380	5	True				
ANR	4218233	Statement	""" to 0x%08"""	4155:38:118981:118991	4217380	6	True				
ANR	4218234	Statement	PFMT64x	4155:49:118992:118998	4217380	7	True				
ANR	4218235	Statement	"""\\n"""	4155:56:118999:119002	4217380	8	True				
ANR	4218236	Statement	","	4155:60:119003:119003	4217380	9	True				
ANR	4218237	Statement	prev_pc	4156:14:119019:119025	4217380	10	True				
ANR	4218238	Statement	","	4156:21:119026:119026	4217380	11	True				
ANR	4218239	Statement	pc	4156:23:119028:119029	4217380	12	True				
ANR	4218240	Statement	)	4156:25:119030:119030	4217380	13	True				
ANR	4218241	ExpressionStatement		4156:26:119031:119031	4217380	14	True				
ANR	4218242	ExpressionStatement	prev_ret = false	4157:5:119038:119054	4217380	15	True				
ANR	4218243	AssignmentExpression	prev_ret = false		4217380	0		=			
ANR	4218244	Identifier	prev_ret		4217380	0					
ANR	4218245	Identifier	false		4217380	1					
ANR	4218246	IfStatement	if ( steps % 500 == 0 || pc == addr )		4217380	3					
ANR	4218247	Condition	steps % 500 == 0 || pc == addr	4159:8:119070:119099	4217380	0	True				
ANR	4218248	OrExpression	steps % 500 == 0 || pc == addr		4217380	0		||			
ANR	4218249	EqualityExpression	steps % 500 == 0		4217380	0		==			
ANR	4218250	MultiplicativeExpression	steps % 500		4217380	0		%			
ANR	4218251	Identifier	steps		4217380	0					
ANR	4218252	PrimaryExpression	500		4217380	1					
ANR	4218253	PrimaryExpression	0		4217380	1					
ANR	4218254	EqualityExpression	pc == addr		4217380	1		==			
ANR	4218255	Identifier	pc		4217380	0					
ANR	4218256	Identifier	addr		4217380	1					
ANR	4218257	CompoundStatement		108:40:3475:3475	4217380	1					
ANR	4218258	Statement	eprintf	4160:5:119109:119115	4217380	0	True				
ANR	4218259	Statement	(	4160:13:119117:119117	4217380	1	True				
ANR	4218260	Statement	"""At 0x%08"""	4160:14:119118:119127	4217380	2	True				
ANR	4218261	Statement	PFMT64x	4160:24:119128:119134	4217380	3	True				
ANR	4218262	Statement	""" after %lu steps\\n"""	4160:31:119135:119154	4217380	4	True				
ANR	4218263	Statement	","	4160:51:119155:119155	4217380	5	True				
ANR	4218264	Statement	pc	4160:53:119157:119158	4217380	6	True				
ANR	4218265	Statement	","	4160:55:119159:119159	4217380	7	True				
ANR	4218266	Statement	steps	4160:57:119161:119165	4217380	8	True				
ANR	4218267	Statement	)	4160:62:119166:119166	4217380	9	True				
ANR	4218268	ExpressionStatement		4160:63:119167:119167	4217380	10	True				
ANR	4218269	IfStatement	if ( r_cons_is_breaked ( ) || r_debug_is_dead ( core -> dbg ) || pc == addr )		4217380	4					
ANR	4218270	Condition	r_cons_is_breaked ( ) || r_debug_is_dead ( core -> dbg ) || pc == addr	4162:8:119183:119247	4217380	0	True				
ANR	4218271	OrExpression	r_cons_is_breaked ( ) || r_debug_is_dead ( core -> dbg ) || pc == addr		4217380	0		||			
ANR	4218272	CallExpression	r_cons_is_breaked ( )		4217380	0					
ANR	4218273	Callee	r_cons_is_breaked		4217380	0					
ANR	4218274	Identifier	r_cons_is_breaked		4217380	0					
ANR	4218275	ArgumentList			4217380	1					
ANR	4218276	OrExpression	r_debug_is_dead ( core -> dbg ) || pc == addr		4217380	1		||			
ANR	4218277	CallExpression	r_debug_is_dead ( core -> dbg )		4217380	0					
ANR	4218278	Callee	r_debug_is_dead		4217380	0					
ANR	4218279	Identifier	r_debug_is_dead		4217380	0					
ANR	4218280	ArgumentList	core -> dbg		4217380	1					
ANR	4218281	Argument	core -> dbg		4217380	0					
ANR	4218282	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218283	Identifier	core		4217380	0					
ANR	4218284	Identifier	dbg		4217380	1					
ANR	4218285	EqualityExpression	pc == addr		4217380	1		==			
ANR	4218286	Identifier	pc		4217380	0					
ANR	4218287	Identifier	addr		4217380	1					
ANR	4218288	CompoundStatement		111:75:3623:3623	4217380	1					
ANR	4218289	BreakStatement	break ;	4163:5:119257:119262	4217380	0	True				
ANR	4218290	IfStatement	"if ( is_x86_call ( core -> dbg , pc ) )"		4217380	5					
ANR	4218291	Condition	"is_x86_call ( core -> dbg , pc )"	4165:8:119278:119304	4217380	0	True				
ANR	4218292	CallExpression	"is_x86_call ( core -> dbg , pc )"		4217380	0					
ANR	4218293	Callee	is_x86_call		4217380	0					
ANR	4218294	Identifier	is_x86_call		4217380	0					
ANR	4218295	ArgumentList	core -> dbg		4217380	1					
ANR	4218296	Argument	core -> dbg		4217380	0					
ANR	4218297	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218298	Identifier	core		4217380	0					
ANR	4218299	Identifier	dbg		4217380	1					
ANR	4218300	Argument	pc		4217380	1					
ANR	4218301	Identifier	pc		4217380	0					
ANR	4218302	CompoundStatement		114:37:3680:3680	4217380	1					
ANR	4218303	ExpressionStatement	prev_pc = pc	4166:5:119314:119326	4217380	0	True				
ANR	4218304	AssignmentExpression	prev_pc = pc		4217380	0		=			
ANR	4218305	Identifier	prev_pc		4217380	0					
ANR	4218306	Identifier	pc		4217380	1					
ANR	4218307	ExpressionStatement	prev_call = true	4167:5:119333:119349	4217380	1	True				
ANR	4218308	AssignmentExpression	prev_call = true		4217380	0		=			
ANR	4218309	Identifier	prev_call		4217380	0					
ANR	4218310	Identifier	true		4217380	1					
ANR	4218311	ElseStatement	else		4217380	0					
ANR	4218312	IfStatement	"if ( is_x86_ret ( core -> dbg , pc ) )"		4217380	0					
ANR	4218313	Condition	"is_x86_ret ( core -> dbg , pc )"	4168:15:119366:119391	4217380	0	True				
ANR	4218314	CallExpression	"is_x86_ret ( core -> dbg , pc )"		4217380	0					
ANR	4218315	Callee	is_x86_ret		4217380	0					
ANR	4218316	Identifier	is_x86_ret		4217380	0					
ANR	4218317	ArgumentList	core -> dbg		4217380	1					
ANR	4218318	Argument	core -> dbg		4217380	0					
ANR	4218319	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218320	Identifier	core		4217380	0					
ANR	4218321	Identifier	dbg		4217380	1					
ANR	4218322	Argument	pc		4217380	1					
ANR	4218323	Identifier	pc		4217380	0					
ANR	4218324	CompoundStatement		117:43:3767:3767	4217380	1					
ANR	4218325	ExpressionStatement	prev_pc = pc	4169:5:119401:119413	4217380	0	True				
ANR	4218326	AssignmentExpression	prev_pc = pc		4217380	0		=			
ANR	4218327	Identifier	prev_pc		4217380	0					
ANR	4218328	Identifier	pc		4217380	1					
ANR	4218329	ExpressionStatement	prev_ret = true	4170:5:119420:119435	4217380	1	True				
ANR	4218330	AssignmentExpression	prev_ret = true		4217380	0		=			
ANR	4218331	Identifier	prev_ret		4217380	0					
ANR	4218332	Identifier	true		4217380	1					
ANR	4218333	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4172:4:119447:119474	4217380	6	True				
ANR	4218334	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4217380	0					
ANR	4218335	Callee	r_debug_step		4217380	0					
ANR	4218336	Identifier	r_debug_step		4217380	0					
ANR	4218337	ArgumentList	core -> dbg		4217380	1					
ANR	4218338	Argument	core -> dbg		4217380	0					
ANR	4218339	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218340	Identifier	core		4217380	0					
ANR	4218341	Identifier	dbg		4217380	1					
ANR	4218342	Argument	1		4217380	1					
ANR	4218343	PrimaryExpression	1		4217380	0					
ANR	4218344	ExpressionStatement	steps ++	4173:4:119480:119487	4217380	7	True				
ANR	4218345	PostIncDecOperationExpression	steps ++		4217380	0					
ANR	4218346	Identifier	steps		4217380	0					
ANR	4218347	IncDec	++		4217380	1					
ANR	4218348	ExpressionStatement	r_cons_break_pop ( )	4175:3:119497:119516	4217380	15	True				
ANR	4218349	CallExpression	r_cons_break_pop ( )		4217380	0					
ANR	4218350	Callee	r_cons_break_pop		4217380	0					
ANR	4218351	Identifier	r_cons_break_pop		4217380	0					
ANR	4218352	ArgumentList			4217380	1					
ANR	4218353	ReturnStatement	return true ;	4176:3:119521:119532	4217380	16	True				
ANR	4218354	Identifier	true		4217380	0					
ANR	4218355	Statement	eprintf	4178:2:119540:119546	4217380	2	True				
ANR	4218356	Statement	(	4178:10:119548:119548	4217380	3	True				
ANR	4218357	Statement	"""Continue until 0x%08"""	4178:11:119549:119570	4217380	4	True				
ANR	4218358	Statement	PFMT64x	4178:33:119571:119577	4217380	5	True				
ANR	4218359	Statement	""" using %d bpsize\\n"""	4178:40:119578:119597	4217380	6	True				
ANR	4218360	Statement	","	4178:60:119598:119598	4217380	7	True				
ANR	4218361	Statement	addr	4178:62:119600:119603	4217380	8	True				
ANR	4218362	Statement	","	4178:66:119604:119604	4217380	9	True				
ANR	4218363	Statement	core	4178:68:119606:119609	4217380	10	True				
ANR	4218364	Statement	->	4178:72:119610:119611	4217380	11	True				
ANR	4218365	Statement	dbg	4178:74:119612:119614	4217380	12	True				
ANR	4218366	Statement	->	4178:77:119615:119616	4217380	13	True				
ANR	4218367	Statement	bpsize	4178:79:119617:119622	4217380	14	True				
ANR	4218368	Statement	)	4178:85:119623:119623	4217380	15	True				
ANR	4218369	ExpressionStatement		4178:86:119624:119624	4217380	16	True				
ANR	4218370	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4179:2:119628:119667	4217380	17	True				
ANR	4218371	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4217380	0					
ANR	4218372	Callee	r_reg_arena_swap		4217380	0					
ANR	4218373	Identifier	r_reg_arena_swap		4217380	0					
ANR	4218374	ArgumentList	core -> dbg -> reg		4217380	1					
ANR	4218375	Argument	core -> dbg -> reg		4217380	0					
ANR	4218376	PtrMemberAccess	core -> dbg -> reg		4217380	0					
ANR	4218377	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218378	Identifier	core		4217380	0					
ANR	4218379	Identifier	dbg		4217380	1					
ANR	4218380	Identifier	reg		4217380	1					
ANR	4218381	Argument	true		4217380	1					
ANR	4218382	Identifier	true		4217380	0					
ANR	4218383	IfStatement	"if ( r_bp_add_sw ( core -> dbg -> bp , addr , core -> dbg -> bpsize , R_BP_PROT_EXEC ) )"		4217380	18					
ANR	4218384	Condition	"r_bp_add_sw ( core -> dbg -> bp , addr , core -> dbg -> bpsize , R_BP_PROT_EXEC )"	4180:6:119675:119742	4217380	0	True				
ANR	4218385	CallExpression	"r_bp_add_sw ( core -> dbg -> bp , addr , core -> dbg -> bpsize , R_BP_PROT_EXEC )"		4217380	0					
ANR	4218386	Callee	r_bp_add_sw		4217380	0					
ANR	4218387	Identifier	r_bp_add_sw		4217380	0					
ANR	4218388	ArgumentList	core -> dbg -> bp		4217380	1					
ANR	4218389	Argument	core -> dbg -> bp		4217380	0					
ANR	4218390	PtrMemberAccess	core -> dbg -> bp		4217380	0					
ANR	4218391	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218392	Identifier	core		4217380	0					
ANR	4218393	Identifier	dbg		4217380	1					
ANR	4218394	Identifier	bp		4217380	1					
ANR	4218395	Argument	addr		4217380	1					
ANR	4218396	Identifier	addr		4217380	0					
ANR	4218397	Argument	core -> dbg -> bpsize		4217380	2					
ANR	4218398	PtrMemberAccess	core -> dbg -> bpsize		4217380	0					
ANR	4218399	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218400	Identifier	core		4217380	0					
ANR	4218401	Identifier	dbg		4217380	1					
ANR	4218402	Identifier	bpsize		4217380	1					
ANR	4218403	Argument	R_BP_PROT_EXEC		4217380	3					
ANR	4218404	Identifier	R_BP_PROT_EXEC		4217380	0					
ANR	4218405	CompoundStatement		129:76:4118:4118	4217380	1					
ANR	4218406	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4217380	0					
ANR	4218407	Condition	r_debug_is_dead ( core -> dbg )	4181:7:119754:119780	4217380	0	True				
ANR	4218408	CallExpression	r_debug_is_dead ( core -> dbg )		4217380	0					
ANR	4218409	Callee	r_debug_is_dead		4217380	0					
ANR	4218410	Identifier	r_debug_is_dead		4217380	0					
ANR	4218411	ArgumentList	core -> dbg		4217380	1					
ANR	4218412	Argument	core -> dbg		4217380	0					
ANR	4218413	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218414	Identifier	core		4217380	0					
ANR	4218415	Identifier	dbg		4217380	1					
ANR	4218416	CompoundStatement		130:36:4156:4156	4217380	1					
ANR	4218417	ExpressionStatement	"eprintf ( ""Cannot continue, run ood?\\n"" )"	4182:4:119789:119828	4217380	0	True				
ANR	4218418	CallExpression	"eprintf ( ""Cannot continue, run ood?\\n"" )"		4217380	0					
ANR	4218419	Callee	eprintf		4217380	0					
ANR	4218420	Identifier	eprintf		4217380	0					
ANR	4218421	ArgumentList	"""Cannot continue, run ood?\\n"""		4217380	1					
ANR	4218422	Argument	"""Cannot continue, run ood?\\n"""		4217380	0					
ANR	4218423	PrimaryExpression	"""Cannot continue, run ood?\\n"""		4217380	0					
ANR	4218424	ElseStatement	else		4217380	0					
ANR	4218425	CompoundStatement		132:10:4213:4213	4217380	0					
ANR	4218426	ExpressionStatement	r_debug_continue ( core -> dbg )	4184:4:119846:119874	4217380	0	True				
ANR	4218427	CallExpression	r_debug_continue ( core -> dbg )		4217380	0					
ANR	4218428	Callee	r_debug_continue		4217380	0					
ANR	4218429	Identifier	r_debug_continue		4217380	0					
ANR	4218430	ArgumentList	core -> dbg		4217380	1					
ANR	4218431	Argument	core -> dbg		4217380	0					
ANR	4218432	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218433	Identifier	core		4217380	0					
ANR	4218434	Identifier	dbg		4217380	1					
ANR	4218435	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	4186:3:119884:119914	4217380	1	True				
ANR	4218436	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		4217380	0					
ANR	4218437	Callee	r_bp_del		4217380	0					
ANR	4218438	Identifier	r_bp_del		4217380	0					
ANR	4218439	ArgumentList	core -> dbg -> bp		4217380	1					
ANR	4218440	Argument	core -> dbg -> bp		4217380	0					
ANR	4218441	PtrMemberAccess	core -> dbg -> bp		4217380	0					
ANR	4218442	PtrMemberAccess	core -> dbg		4217380	0					
ANR	4218443	Identifier	core		4217380	0					
ANR	4218444	Identifier	dbg		4217380	1					
ANR	4218445	Identifier	bp		4217380	1					
ANR	4218446	Argument	addr		4217380	1					
ANR	4218447	Identifier	addr		4217380	0					
ANR	4218448	ElseStatement	else		4217380	0					
ANR	4218449	CompoundStatement		136:9:4298:4298	4217380	0					
ANR	4218450	Statement	eprintf	4188:3:119930:119936	4217380	0	True				
ANR	4218451	Statement	(	4188:11:119938:119938	4217380	1	True				
ANR	4218452	Statement	"""Cannot set breakpoint of size %d at 0x%08"""	4188:12:119939:119981	4217380	2	True				
ANR	4218453	Statement	PFMT64x	4188:55:119982:119988	4217380	3	True				
ANR	4218454	Statement	"""\\n"""	4188:62:119989:119992	4217380	4	True				
ANR	4218455	Statement	","	4188:66:119993:119993	4217380	5	True				
ANR	4218456	Statement	core	4189:4:119999:120002	4217380	6	True				
ANR	4218457	Statement	->	4189:8:120003:120004	4217380	7	True				
ANR	4218458	Statement	dbg	4189:10:120005:120007	4217380	8	True				
ANR	4218459	Statement	->	4189:13:120008:120009	4217380	9	True				
ANR	4218460	Statement	bpsize	4189:15:120010:120015	4217380	10	True				
ANR	4218461	Statement	","	4189:21:120016:120016	4217380	11	True				
ANR	4218462	Statement	addr	4189:23:120018:120021	4217380	12	True				
ANR	4218463	Statement	)	4189:27:120022:120022	4217380	13	True				
ANR	4218464	ExpressionStatement		4189:28:120023:120023	4217380	14	True				
ANR	4218465	ReturnStatement	return true ;	4192:1:120033:120044	4217380	10	True				
ANR	4218466	Identifier	true		4217380	0					
ANR	4218467	ReturnType	static bool		4217380	1					
ANR	4218468	Identifier	cmd_dcu		4217380	2					
ANR	4218469	ParameterList	"RCore * core , const char * input"		4217380	3					
ANR	4218470	Parameter	RCore * core	4052:21:115594:115604	4217380	0	True				
ANR	4218471	ParameterType	RCore *		4217380	0					
ANR	4218472	Identifier	core		4217380	1					
ANR	4218473	Parameter	const char * input	4052:34:115607:115623	4217380	1	True				
ANR	4218474	ParameterType	const char *		4217380	0					
ANR	4218475	Identifier	input		4217380	1					
ANR	4218476	CFGEntryNode	ENTRY		4217380		True				
ANR	4218477	CFGExitNode	EXIT		4217380		True				
ANR	4218478	Symbol	core -> dbg -> iob . io		4217380						
ANR	4218479	Symbol	frame -> bp		4217380						
ANR	4218480	Symbol	R_REG_NAME_PC		4217380						
ANR	4218481	Symbol	r_debug_reg_get		4217380						
ANR	4218482	Symbol	* input		4217380						
ANR	4218483	Symbol	strchr		4217380						
ANR	4218484	Symbol	core -> offset		4217380						
ANR	4218485	Symbol	* head		4217380						
ANR	4218486	Symbol	core -> dbg -> bp		4217380						
ANR	4218487	Symbol	dcu_range		4217380						
ANR	4218488	Symbol	core -> dbg -> iob		4217380						
ANR	4218489	Symbol	head -> addr		4217380						
ANR	4218490	Symbol	frame -> sp		4217380						
ANR	4218491	Symbol	r_num_tail		4217380						
ANR	4218492	Symbol	* * core -> dbg -> reg		4217380						
ANR	4218493	Symbol	* core -> dbg -> reg		4217380						
ANR	4218494	Symbol	* ptr		4217380						
ANR	4218495	Symbol	from		4217380						
ANR	4218496	Symbol	* core -> num		4217380						
ANR	4218497	Symbol	prev_ret		4217380						
ANR	4218498	Symbol	core -> num		4217380						
ANR	4218499	Symbol	strcmp		4217380						
ANR	4218500	Symbol	r_cons_is_interactive		4217380						
ANR	4218501	Symbol	NULL		4217380						
ANR	4218502	Symbol	core -> dbg -> reg -> name		4217380						
ANR	4218503	Symbol	level		4217380						
ANR	4218504	Symbol	core -> dbg -> arch		4217380						
ANR	4218505	Symbol	cur_sp		4217380						
ANR	4218506	Symbol	core -> num -> nc . calc_buf		4217380						
ANR	4218507	Symbol	steps		4217380						
ANR	4218508	Symbol	core		4217380						
ANR	4218509	Symbol	input		4217380						
ANR	4218510	Symbol	* * * core		4217380						
ANR	4218511	Symbol	R_NEW0		4217380						
ANR	4218512	Symbol	r_list_get_bottom		4217380						
ANR	4218513	Symbol	r_bp_add_sw		4217380						
ANR	4218514	Symbol	R_REG_NAME_SP		4217380						
ANR	4218515	Symbol	core -> dbg -> call_frames -> free		4217380						
ANR	4218516	Symbol	* core -> dbg -> reg -> name		4217380						
ANR	4218517	Symbol	invalid		4217380						
ANR	4218518	Symbol	true		4217380						
ANR	4218519	Symbol	prev_call		4217380						
ANR	4218520	Symbol	ret_addr		4217380						
ANR	4218521	Symbol	* core -> dbg -> call_frames		4217380						
ANR	4218522	Symbol	* core -> dbg		4217380						
ANR	4218523	Symbol	frame		4217380						
ANR	4218524	Symbol	core -> num -> nc		4217380						
ANR	4218525	Symbol	pc_name		4217380						
ANR	4218526	Symbol	* R_REG_NAME_SP		4217380						
ANR	4218527	Symbol	* frame		4217380						
ANR	4218528	Symbol	* core		4217380						
ANR	4218529	Symbol	core -> num -> nc . errors		4217380						
ANR	4218530	Symbol	core -> dbg -> bpsize		4217380						
ANR	4218531	Symbol	RDebugFrame		4217380						
ANR	4218532	Symbol	is_x86_ret		4217380						
ANR	4218533	Symbol	r_num_math		4217380						
ANR	4218534	Symbol	head		4217380						
ANR	4218535	Symbol	r_cons_is_breaked		4217380						
ANR	4218536	Symbol	* * * core -> dbg		4217380						
ANR	4218537	Symbol	sp_name		4217380						
ANR	4218538	Symbol	is_x86_call		4217380						
ANR	4218539	Symbol	core -> dbg -> bits		4217380						
ANR	4218540	Symbol	* R_REG_NAME_PC		4217380						
ANR	4218541	Symbol	frame -> addr		4217380						
ANR	4218542	Symbol	UT64_MAX		4217380						
ANR	4218543	Symbol	addr		4217380						
ANR	4218544	Symbol	* * * * core		4217380						
ANR	4218545	Symbol	free		4217380						
ANR	4218546	Symbol	* * core		4217380						
ANR	4218547	Symbol	R_REG_TYPE_GPR		4217380						
ANR	4218548	Symbol	& ret_addr		4217380						
ANR	4218549	Symbol	help_msg_dcu		4217380						
ANR	4218550	Symbol	core -> dbg -> call_frames		4217380						
ANR	4218551	Symbol	false		4217380						
ANR	4218552	Symbol	core -> dbg -> btalgo		4217380						
ANR	4218553	Symbol	ptr		4217380						
ANR	4218554	Symbol	r_debug_is_dead		4217380						
ANR	4218555	Symbol	pc		4217380						
ANR	4218556	Symbol	R_BP_PROT_EXEC		4217380						
ANR	4218557	Symbol	core -> dbg -> reg		4217380						
ANR	4218558	Symbol	prev_pc		4217380						
ANR	4218559	Symbol	to		4217380						
ANR	4218560	Symbol	frame -> size		4217380						
ANR	4218561	Symbol	core -> dbg		4217380						
ANR	4218562	Symbol	* * core -> dbg		4217380						
ANR	4218563	Symbol	old_sp		4217380						
ANR	4218564	Symbol	r_list_new		4217380						
ANR	4218565	Function	cmd_debug_continue	4195:0:120049:123547							
ANR	4218566	FunctionDef	"cmd_debug_continue (RCore * core , const char * input)"		4218565	0					
ANR	4218567	CompoundStatement		4195:63:120112:123547	4218565	0					
ANR	4218568	IdentifierDeclStatement	"int pid , old_pid , signum ;"	4196:1:120115:120139	4218565	0	True				
ANR	4218569	IdentifierDecl	pid		4218565	0					
ANR	4218570	IdentifierDeclType	int		4218565	0					
ANR	4218571	Identifier	pid		4218565	1					
ANR	4218572	IdentifierDecl	old_pid		4218565	1					
ANR	4218573	IdentifierDeclType	int		4218565	0					
ANR	4218574	Identifier	old_pid		4218565	1					
ANR	4218575	IdentifierDecl	signum		4218565	2					
ANR	4218576	IdentifierDeclType	int		4218565	0					
ANR	4218577	Identifier	signum		4218565	1					
ANR	4218578	IdentifierDeclStatement	char * ptr ;	4197:1:120142:120151	4218565	1	True				
ANR	4218579	IdentifierDecl	* ptr		4218565	0					
ANR	4218580	IdentifierDeclType	char *		4218565	0					
ANR	4218581	Identifier	ptr		4218565	1					
ANR	4218582	SwitchStatement	switch ( input [ 1 ] )		4218565	2					
ANR	4218583	Condition	input [ 1 ]	4199:9:120216:120223	4218565	0	True				
ANR	4218584	ArrayIndexing	input [ 1 ]		4218565	0					
ANR	4218585	Identifier	input		4218565	0					
ANR	4218586	PrimaryExpression	1		4218565	1					
ANR	4218587	CompoundStatement		5:19:113:113	4218565	1					
ANR	4218588	Label	case 0 :	4200:1:120229:120235	4218565	0	True				
ANR	4218589	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4201:2:120247:120286	4218565	1	True				
ANR	4218590	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4218565	0					
ANR	4218591	Callee	r_reg_arena_swap		4218565	0					
ANR	4218592	Identifier	r_reg_arena_swap		4218565	0					
ANR	4218593	ArgumentList	core -> dbg -> reg		4218565	1					
ANR	4218594	Argument	core -> dbg -> reg		4218565	0					
ANR	4218595	PtrMemberAccess	core -> dbg -> reg		4218565	0					
ANR	4218596	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218597	Identifier	core		4218565	0					
ANR	4218598	Identifier	dbg		4218565	1					
ANR	4218599	Identifier	reg		4218565	1					
ANR	4218600	Argument	true		4218565	1					
ANR	4218601	Identifier	true		4218565	0					
ANR	4218602	ExpressionStatement	core -> dbg -> continue_all_threads = true	4203:2:120304:120342	4218565	2	True				
ANR	4218603	AssignmentExpression	core -> dbg -> continue_all_threads = true		4218565	0		=			
ANR	4218604	PtrMemberAccess	core -> dbg -> continue_all_threads		4218565	0					
ANR	4218605	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218606	Identifier	core		4218565	0					
ANR	4218607	Identifier	dbg		4218565	1					
ANR	4218608	Identifier	continue_all_threads		4218565	1					
ANR	4218609	Identifier	true		4218565	1					
ANR	4218610	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4218565	3					
ANR	4218611	Condition	r_debug_is_dead ( core -> dbg )	4205:6:120357:120383	4218565	0	True				
ANR	4218612	CallExpression	r_debug_is_dead ( core -> dbg )		4218565	0					
ANR	4218613	Callee	r_debug_is_dead		4218565	0					
ANR	4218614	Identifier	r_debug_is_dead		4218565	0					
ANR	4218615	ArgumentList	core -> dbg		4218565	1					
ANR	4218616	Argument	core -> dbg		4218565	0					
ANR	4218617	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218618	Identifier	core		4218565	0					
ANR	4218619	Identifier	dbg		4218565	1					
ANR	4218620	CompoundStatement		11:35:273:273	4218565	1					
ANR	4218621	ExpressionStatement	"eprintf ( ""Cannot continue, run ood?\\n"" )"	4206:3:120391:120430	4218565	0	True				
ANR	4218622	CallExpression	"eprintf ( ""Cannot continue, run ood?\\n"" )"		4218565	0					
ANR	4218623	Callee	eprintf		4218565	0					
ANR	4218624	Identifier	eprintf		4218565	0					
ANR	4218625	ArgumentList	"""Cannot continue, run ood?\\n"""		4218565	1					
ANR	4218626	Argument	"""Cannot continue, run ood?\\n"""		4218565	0					
ANR	4218627	PrimaryExpression	"""Cannot continue, run ood?\\n"""		4218565	0					
ANR	4218628	BreakStatement	break ;	4207:3:120435:120440	4218565	1	True				
ANR	4218629	ExpressionStatement	r_debug_continue ( core -> dbg )	4209:2:120448:120476	4218565	4	True				
ANR	4218630	CallExpression	r_debug_continue ( core -> dbg )		4218565	0					
ANR	4218631	Callee	r_debug_continue		4218565	0					
ANR	4218632	Identifier	r_debug_continue		4218565	0					
ANR	4218633	ArgumentList	core -> dbg		4218565	1					
ANR	4218634	Argument	core -> dbg		4218565	0					
ANR	4218635	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218636	Identifier	core		4218565	0					
ANR	4218637	Identifier	dbg		4218565	1					
ANR	4218638	BreakStatement	break ;	4210:2:120480:120485	4218565	5	True				
ANR	4218639	Label	case 'a' :	4211:1:120488:120496	4218565	6	True				
ANR	4218640	ExpressionStatement	"eprintf ( ""TODO: dca\\n"" )"	4212:2:120509:120532	4218565	7	True				
ANR	4218641	CallExpression	"eprintf ( ""TODO: dca\\n"" )"		4218565	0					
ANR	4218642	Callee	eprintf		4218565	0					
ANR	4218643	Identifier	eprintf		4218565	0					
ANR	4218644	ArgumentList	"""TODO: dca\\n"""		4218565	1					
ANR	4218645	Argument	"""TODO: dca\\n"""		4218565	0					
ANR	4218646	PrimaryExpression	"""TODO: dca\\n"""		4218565	0					
ANR	4218647	BreakStatement	break ;	4213:2:120536:120541	4218565	8	True				
ANR	4218648	Label	case 'b' :	4214:1:120544:120552	4218565	9	True				
ANR	4218649	CompoundStatement		21:2:452:452	4218565	10					
ANR	4218650	IfStatement	if ( ! r_debug_continue_back ( core -> dbg ) )		4218565	0					
ANR	4218651	Condition	! r_debug_continue_back ( core -> dbg )	4216:7:120574:120607	4218565	0	True				
ANR	4218652	UnaryOperationExpression	! r_debug_continue_back ( core -> dbg )		4218565	0					
ANR	4218653	UnaryOperator	!		4218565	0					
ANR	4218654	CallExpression	r_debug_continue_back ( core -> dbg )		4218565	1					
ANR	4218655	Callee	r_debug_continue_back		4218565	0					
ANR	4218656	Identifier	r_debug_continue_back		4218565	0					
ANR	4218657	ArgumentList	core -> dbg		4218565	1					
ANR	4218658	Argument	core -> dbg		4218565	0					
ANR	4218659	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218660	Identifier	core		4218565	0					
ANR	4218661	Identifier	dbg		4218565	1					
ANR	4218662	CompoundStatement		22:43:497:497	4218565	1					
ANR	4218663	ExpressionStatement	"eprintf ( ""cannot continue back\\n"" )"	4217:4:120616:120650	4218565	0	True				
ANR	4218664	CallExpression	"eprintf ( ""cannot continue back\\n"" )"		4218565	0					
ANR	4218665	Callee	eprintf		4218565	0					
ANR	4218666	Identifier	eprintf		4218565	0					
ANR	4218667	ArgumentList	"""cannot continue back\\n"""		4218565	1					
ANR	4218668	Argument	"""cannot continue back\\n"""		4218565	0					
ANR	4218669	PrimaryExpression	"""cannot continue back\\n"""		4218565	0					
ANR	4218670	BreakStatement	break ;	4219:3:120660:120665	4218565	1	True				
ANR	4218671	Label	case 'e' :	4222:1:120688:120696	4218565	11	True				
ANR	4218672	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4223:2:120709:120748	4218565	12	True				
ANR	4218673	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4218565	0					
ANR	4218674	Callee	r_reg_arena_swap		4218565	0					
ANR	4218675	Identifier	r_reg_arena_swap		4218565	0					
ANR	4218676	ArgumentList	core -> dbg -> reg		4218565	1					
ANR	4218677	Argument	core -> dbg -> reg		4218565	0					
ANR	4218678	PtrMemberAccess	core -> dbg -> reg		4218565	0					
ANR	4218679	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218680	Identifier	core		4218565	0					
ANR	4218681	Identifier	dbg		4218565	1					
ANR	4218682	Identifier	reg		4218565	1					
ANR	4218683	Argument	true		4218565	1					
ANR	4218684	Identifier	true		4218565	0					
ANR	4218685	ExpressionStatement	r_debug_continue_pass_exception ( core -> dbg )	4224:2:120752:120795	4218565	13	True				
ANR	4218686	CallExpression	r_debug_continue_pass_exception ( core -> dbg )		4218565	0					
ANR	4218687	Callee	r_debug_continue_pass_exception		4218565	0					
ANR	4218688	Identifier	r_debug_continue_pass_exception		4218565	0					
ANR	4218689	ArgumentList	core -> dbg		4218565	1					
ANR	4218690	Argument	core -> dbg		4218565	0					
ANR	4218691	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218692	Identifier	core		4218565	0					
ANR	4218693	Identifier	dbg		4218565	1					
ANR	4218694	BreakStatement	break ;	4225:2:120799:120804	4218565	14	True				
ANR	4218695	Label	case 'f' :	4227:1:120814:120822	4218565	15	True				
ANR	4218696	ExpressionStatement	"eprintf ( ""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"" )"	4228:2:120835:120904	4218565	16	True				
ANR	4218697	CallExpression	"eprintf ( ""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"" )"		4218565	0					
ANR	4218698	Callee	eprintf		4218565	0					
ANR	4218699	Identifier	eprintf		4218565	0					
ANR	4218700	ArgumentList	"""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"""		4218565	1					
ANR	4218701	Argument	"""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"""		4218565	0					
ANR	4218702	PrimaryExpression	"""[+] Running 'dcs vfork fork clone' behind the scenes...\\n"""		4218565	0					
ANR	4218703	ExpressionStatement	"r_core_cmd0 ( core , ""dcs vfork fork clone"" )"	4232:2:121042:121084	4218565	17	True				
ANR	4218704	CallExpression	"r_core_cmd0 ( core , ""dcs vfork fork clone"" )"		4218565	0					
ANR	4218705	Callee	r_core_cmd0		4218565	0					
ANR	4218706	Identifier	r_core_cmd0		4218565	0					
ANR	4218707	ArgumentList	core		4218565	1					
ANR	4218708	Argument	core		4218565	0					
ANR	4218709	Identifier	core		4218565	0					
ANR	4218710	Argument	"""dcs vfork fork clone"""		4218565	1					
ANR	4218711	PrimaryExpression	"""dcs vfork fork clone"""		4218565	0					
ANR	4218712	BreakStatement	break ;	4233:2:121088:121093	4218565	18	True				
ANR	4218713	Label	case 'c' :	4234:1:121096:121104	4218565	19	True				
ANR	4218714	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4235:2:121117:121156	4218565	20	True				
ANR	4218715	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4218565	0					
ANR	4218716	Callee	r_reg_arena_swap		4218565	0					
ANR	4218717	Identifier	r_reg_arena_swap		4218565	0					
ANR	4218718	ArgumentList	core -> dbg -> reg		4218565	1					
ANR	4218719	Argument	core -> dbg -> reg		4218565	0					
ANR	4218720	PtrMemberAccess	core -> dbg -> reg		4218565	0					
ANR	4218721	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218722	Identifier	core		4218565	0					
ANR	4218723	Identifier	dbg		4218565	1					
ANR	4218724	Identifier	reg		4218565	1					
ANR	4218725	Argument	true		4218565	1					
ANR	4218726	Identifier	true		4218565	0					
ANR	4218727	IfStatement	if ( input [ 2 ] == 'u' )		4218565	21					
ANR	4218728	Condition	input [ 2 ] == 'u'	4236:6:121164:121178	4218565	0	True				
ANR	4218729	EqualityExpression	input [ 2 ] == 'u'		4218565	0		==			
ANR	4218730	ArrayIndexing	input [ 2 ]		4218565	0					
ANR	4218731	Identifier	input		4218565	0					
ANR	4218732	PrimaryExpression	2		4218565	1					
ANR	4218733	PrimaryExpression	'u'		4218565	1					
ANR	4218734	CompoundStatement		42:23:1068:1068	4218565	1					
ANR	4218735	ExpressionStatement	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_UCALL , 0 )"	4237:3:121186:121252	4218565	0	True				
ANR	4218736	CallExpression	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_UCALL , 0 )"		4218565	0					
ANR	4218737	Callee	r_debug_continue_until_optype		4218565	0					
ANR	4218738	Identifier	r_debug_continue_until_optype		4218565	0					
ANR	4218739	ArgumentList	core -> dbg		4218565	1					
ANR	4218740	Argument	core -> dbg		4218565	0					
ANR	4218741	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218742	Identifier	core		4218565	0					
ANR	4218743	Identifier	dbg		4218565	1					
ANR	4218744	Argument	R_ANAL_OP_TYPE_UCALL		4218565	1					
ANR	4218745	Identifier	R_ANAL_OP_TYPE_UCALL		4218565	0					
ANR	4218746	Argument	0		4218565	2					
ANR	4218747	PrimaryExpression	0		4218565	0					
ANR	4218748	ElseStatement	else		4218565	0					
ANR	4218749	CompoundStatement		44:9:1150:1150	4218565	0					
ANR	4218750	ExpressionStatement	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_CALL , 0 )"	4239:3:121268:121333	4218565	0	True				
ANR	4218751	CallExpression	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_CALL , 0 )"		4218565	0					
ANR	4218752	Callee	r_debug_continue_until_optype		4218565	0					
ANR	4218753	Identifier	r_debug_continue_until_optype		4218565	0					
ANR	4218754	ArgumentList	core -> dbg		4218565	1					
ANR	4218755	Argument	core -> dbg		4218565	0					
ANR	4218756	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218757	Identifier	core		4218565	0					
ANR	4218758	Identifier	dbg		4218565	1					
ANR	4218759	Argument	R_ANAL_OP_TYPE_CALL		4218565	1					
ANR	4218760	Identifier	R_ANAL_OP_TYPE_CALL		4218565	0					
ANR	4218761	Argument	0		4218565	2					
ANR	4218762	PrimaryExpression	0		4218565	0					
ANR	4218763	BreakStatement	break ;	4241:2:121341:121346	4218565	22	True				
ANR	4218764	Label	case 'r' :	4242:1:121349:121357	4218565	23	True				
ANR	4218765	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4243:2:121361:121400	4218565	24	True				
ANR	4218766	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4218565	0					
ANR	4218767	Callee	r_reg_arena_swap		4218565	0					
ANR	4218768	Identifier	r_reg_arena_swap		4218565	0					
ANR	4218769	ArgumentList	core -> dbg -> reg		4218565	1					
ANR	4218770	Argument	core -> dbg -> reg		4218565	0					
ANR	4218771	PtrMemberAccess	core -> dbg -> reg		4218565	0					
ANR	4218772	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218773	Identifier	core		4218565	0					
ANR	4218774	Identifier	dbg		4218565	1					
ANR	4218775	Identifier	reg		4218565	1					
ANR	4218776	Argument	true		4218565	1					
ANR	4218777	Identifier	true		4218565	0					
ANR	4218778	ExpressionStatement	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_RET , 1 )"	4244:2:121404:121468	4218565	25	True				
ANR	4218779	CallExpression	"r_debug_continue_until_optype ( core -> dbg , R_ANAL_OP_TYPE_RET , 1 )"		4218565	0					
ANR	4218780	Callee	r_debug_continue_until_optype		4218565	0					
ANR	4218781	Identifier	r_debug_continue_until_optype		4218565	0					
ANR	4218782	ArgumentList	core -> dbg		4218565	1					
ANR	4218783	Argument	core -> dbg		4218565	0					
ANR	4218784	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218785	Identifier	core		4218565	0					
ANR	4218786	Identifier	dbg		4218565	1					
ANR	4218787	Argument	R_ANAL_OP_TYPE_RET		4218565	1					
ANR	4218788	Identifier	R_ANAL_OP_TYPE_RET		4218565	0					
ANR	4218789	Argument	1		4218565	2					
ANR	4218790	PrimaryExpression	1		4218565	0					
ANR	4218791	BreakStatement	break ;	4245:2:121472:121477	4218565	26	True				
ANR	4218792	Label	case 'k' :	4246:1:121480:121488	4218565	27	True				
ANR	4218793	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4248:2:121546:121585	4218565	28	True				
ANR	4218794	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4218565	0					
ANR	4218795	Callee	r_reg_arena_swap		4218565	0					
ANR	4218796	Identifier	r_reg_arena_swap		4218565	0					
ANR	4218797	ArgumentList	core -> dbg -> reg		4218565	1					
ANR	4218798	Argument	core -> dbg -> reg		4218565	0					
ANR	4218799	PtrMemberAccess	core -> dbg -> reg		4218565	0					
ANR	4218800	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218801	Identifier	core		4218565	0					
ANR	4218802	Identifier	dbg		4218565	1					
ANR	4218803	Identifier	reg		4218565	1					
ANR	4218804	Argument	true		4218565	1					
ANR	4218805	Identifier	true		4218565	0					
ANR	4218806	ExpressionStatement	"signum = r_num_math ( core -> num , input + 2 )"	4249:2:121589:121631	4218565	29	True				
ANR	4218807	AssignmentExpression	"signum = r_num_math ( core -> num , input + 2 )"		4218565	0		=			
ANR	4218808	Identifier	signum		4218565	0					
ANR	4218809	CallExpression	"r_num_math ( core -> num , input + 2 )"		4218565	1					
ANR	4218810	Callee	r_num_math		4218565	0					
ANR	4218811	Identifier	r_num_math		4218565	0					
ANR	4218812	ArgumentList	core -> num		4218565	1					
ANR	4218813	Argument	core -> num		4218565	0					
ANR	4218814	PtrMemberAccess	core -> num		4218565	0					
ANR	4218815	Identifier	core		4218565	0					
ANR	4218816	Identifier	num		4218565	1					
ANR	4218817	Argument	input + 2		4218565	1					
ANR	4218818	AdditiveExpression	input + 2		4218565	0		+			
ANR	4218819	Identifier	input		4218565	0					
ANR	4218820	PrimaryExpression	2		4218565	1					
ANR	4218821	ExpressionStatement	"ptr = strchr ( input + 3 , ' ' )"	4250:2:121635:121664	4218565	30	True				
ANR	4218822	AssignmentExpression	"ptr = strchr ( input + 3 , ' ' )"		4218565	0		=			
ANR	4218823	Identifier	ptr		4218565	0					
ANR	4218824	CallExpression	"strchr ( input + 3 , ' ' )"		4218565	1					
ANR	4218825	Callee	strchr		4218565	0					
ANR	4218826	Identifier	strchr		4218565	0					
ANR	4218827	ArgumentList	input + 3		4218565	1					
ANR	4218828	Argument	input + 3		4218565	0					
ANR	4218829	AdditiveExpression	input + 3		4218565	0		+			
ANR	4218830	Identifier	input		4218565	0					
ANR	4218831	PrimaryExpression	3		4218565	1					
ANR	4218832	Argument	' '		4218565	1					
ANR	4218833	PrimaryExpression	' '		4218565	0					
ANR	4218834	IfStatement	if ( ptr )		4218565	31					
ANR	4218835	Condition	ptr	4251:6:121672:121674	4218565	0	True				
ANR	4218836	Identifier	ptr		4218565	0					
ANR	4218837	CompoundStatement		61:3:1662:1675	4218565	1					
ANR	4218838	IdentifierDeclStatement	int old_pid = core -> dbg -> pid ;	4252:3:121682:121710	4218565	0	True				
ANR	4218839	IdentifierDecl	old_pid = core -> dbg -> pid		4218565	0					
ANR	4218840	IdentifierDeclType	int		4218565	0					
ANR	4218841	Identifier	old_pid		4218565	1					
ANR	4218842	AssignmentExpression	old_pid = core -> dbg -> pid		4218565	2		=			
ANR	4218843	Identifier	old_pid		4218565	0					
ANR	4218844	PtrMemberAccess	core -> dbg -> pid		4218565	1					
ANR	4218845	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218846	Identifier	core		4218565	0					
ANR	4218847	Identifier	dbg		4218565	1					
ANR	4218848	Identifier	pid		4218565	1					
ANR	4218849	IdentifierDeclStatement	int old_tid = core -> dbg -> tid ;	4253:3:121715:121743	4218565	1	True				
ANR	4218850	IdentifierDecl	old_tid = core -> dbg -> tid		4218565	0					
ANR	4218851	IdentifierDeclType	int		4218565	0					
ANR	4218852	Identifier	old_tid		4218565	1					
ANR	4218853	AssignmentExpression	old_tid = core -> dbg -> tid		4218565	2		=			
ANR	4218854	Identifier	old_tid		4218565	0					
ANR	4218855	PtrMemberAccess	core -> dbg -> tid		4218565	1					
ANR	4218856	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218857	Identifier	core		4218565	0					
ANR	4218858	Identifier	dbg		4218565	1					
ANR	4218859	Identifier	tid		4218565	1					
ANR	4218860	IdentifierDeclStatement	int pid = atoi ( ptr + 1 ) ;	4254:3:121748:121770	4218565	2	True				
ANR	4218861	IdentifierDecl	pid = atoi ( ptr + 1 )		4218565	0					
ANR	4218862	IdentifierDeclType	int		4218565	0					
ANR	4218863	Identifier	pid		4218565	1					
ANR	4218864	AssignmentExpression	pid = atoi ( ptr + 1 )		4218565	2		=			
ANR	4218865	Identifier	pid		4218565	0					
ANR	4218866	CallExpression	atoi ( ptr + 1 )		4218565	1					
ANR	4218867	Callee	atoi		4218565	0					
ANR	4218868	Identifier	atoi		4218565	0					
ANR	4218869	ArgumentList	ptr + 1		4218565	1					
ANR	4218870	Argument	ptr + 1		4218565	0					
ANR	4218871	AdditiveExpression	ptr + 1		4218565	0		+			
ANR	4218872	Identifier	ptr		4218565	0					
ANR	4218873	PrimaryExpression	1		4218565	1					
ANR	4218874	IdentifierDeclStatement	int tid = pid ;	4255:3:121775:121788	4218565	3	True				
ANR	4218875	IdentifierDecl	tid = pid		4218565	0					
ANR	4218876	IdentifierDeclType	int		4218565	0					
ANR	4218877	Identifier	tid		4218565	1					
ANR	4218878	AssignmentExpression	tid = pid		4218565	2		=			
ANR	4218879	Identifier	pid		4218565	0					
ANR	4218880	Identifier	pid		4218565	1					
ANR	4218881	ExpressionStatement	* ptr = 0	4256:3:121800:121808	4218565	4	True				
ANR	4218882	AssignmentExpression	* ptr = 0		4218565	0		=			
ANR	4218883	UnaryOperationExpression	* ptr		4218565	0					
ANR	4218884	UnaryOperator	*		4218565	0					
ANR	4218885	Identifier	ptr		4218565	1					
ANR	4218886	PrimaryExpression	0		4218565	1					
ANR	4218887	ExpressionStatement	"r_debug_select ( core -> dbg , pid , tid )"	4257:3:121813:121849	4218565	5	True				
ANR	4218888	CallExpression	"r_debug_select ( core -> dbg , pid , tid )"		4218565	0					
ANR	4218889	Callee	r_debug_select		4218565	0					
ANR	4218890	Identifier	r_debug_select		4218565	0					
ANR	4218891	ArgumentList	core -> dbg		4218565	1					
ANR	4218892	Argument	core -> dbg		4218565	0					
ANR	4218893	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218894	Identifier	core		4218565	0					
ANR	4218895	Identifier	dbg		4218565	1					
ANR	4218896	Argument	pid		4218565	1					
ANR	4218897	Identifier	pid		4218565	0					
ANR	4218898	Argument	tid		4218565	2					
ANR	4218899	Identifier	tid		4218565	0					
ANR	4218900	ExpressionStatement	"r_debug_continue_kill ( core -> dbg , signum )"	4258:3:121854:121895	4218565	6	True				
ANR	4218901	CallExpression	"r_debug_continue_kill ( core -> dbg , signum )"		4218565	0					
ANR	4218902	Callee	r_debug_continue_kill		4218565	0					
ANR	4218903	Identifier	r_debug_continue_kill		4218565	0					
ANR	4218904	ArgumentList	core -> dbg		4218565	1					
ANR	4218905	Argument	core -> dbg		4218565	0					
ANR	4218906	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218907	Identifier	core		4218565	0					
ANR	4218908	Identifier	dbg		4218565	1					
ANR	4218909	Argument	signum		4218565	1					
ANR	4218910	Identifier	signum		4218565	0					
ANR	4218911	ExpressionStatement	"r_debug_select ( core -> dbg , old_pid , old_tid )"	4259:3:121900:121944	4218565	7	True				
ANR	4218912	CallExpression	"r_debug_select ( core -> dbg , old_pid , old_tid )"		4218565	0					
ANR	4218913	Callee	r_debug_select		4218565	0					
ANR	4218914	Identifier	r_debug_select		4218565	0					
ANR	4218915	ArgumentList	core -> dbg		4218565	1					
ANR	4218916	Argument	core -> dbg		4218565	0					
ANR	4218917	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218918	Identifier	core		4218565	0					
ANR	4218919	Identifier	dbg		4218565	1					
ANR	4218920	Argument	old_pid		4218565	1					
ANR	4218921	Identifier	old_pid		4218565	0					
ANR	4218922	Argument	old_tid		4218565	2					
ANR	4218923	Identifier	old_tid		4218565	0					
ANR	4218924	ElseStatement	else		4218565	0					
ANR	4218925	CompoundStatement		66:9:1842:1842	4218565	0					
ANR	4218926	ExpressionStatement	"r_debug_continue_kill ( core -> dbg , signum )"	4261:3:121960:122001	4218565	0	True				
ANR	4218927	CallExpression	"r_debug_continue_kill ( core -> dbg , signum )"		4218565	0					
ANR	4218928	Callee	r_debug_continue_kill		4218565	0					
ANR	4218929	Identifier	r_debug_continue_kill		4218565	0					
ANR	4218930	ArgumentList	core -> dbg		4218565	1					
ANR	4218931	Argument	core -> dbg		4218565	0					
ANR	4218932	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4218933	Identifier	core		4218565	0					
ANR	4218934	Identifier	dbg		4218565	1					
ANR	4218935	Argument	signum		4218565	1					
ANR	4218936	Identifier	signum		4218565	0					
ANR	4218937	BreakStatement	break ;	4263:2:122009:122014	4218565	32	True				
ANR	4218938	Label	case 's' :	4264:1:122017:122025	4218565	33	True				
ANR	4218939	SwitchStatement	switch ( input [ 2 ] )		4218565	34					
ANR	4218940	Condition	input [ 2 ]	4265:10:122046:122053	4218565	0	True				
ANR	4218941	ArrayIndexing	input [ 2 ]		4218565	0					
ANR	4218942	Identifier	input		4218565	0					
ANR	4218943	PrimaryExpression	2		4218565	1					
ANR	4218944	CompoundStatement		71:20:1943:1943	4218565	1					
ANR	4218945	Label	case '*' :	4266:2:122060:122068	4218565	0	True				
ANR	4218946	ExpressionStatement	"cmd_debug_cont_syscall ( core , ""-1"" )"	4267:3:122073:122108	4218565	1	True				
ANR	4218947	CallExpression	"cmd_debug_cont_syscall ( core , ""-1"" )"		4218565	0					
ANR	4218948	Callee	cmd_debug_cont_syscall		4218565	0					
ANR	4218949	Identifier	cmd_debug_cont_syscall		4218565	0					
ANR	4218950	ArgumentList	core		4218565	1					
ANR	4218951	Argument	core		4218565	0					
ANR	4218952	Identifier	core		4218565	0					
ANR	4218953	Argument	"""-1"""		4218565	1					
ANR	4218954	PrimaryExpression	"""-1"""		4218565	0					
ANR	4218955	BreakStatement	break ;	4268:3:122113:122118	4218565	2	True				
ANR	4218956	Label	case ' ' :	4269:2:122122:122130	4218565	3	True				
ANR	4218957	ExpressionStatement	"cmd_debug_cont_syscall ( core , input + 3 )"	4270:3:122135:122175	4218565	4	True				
ANR	4218958	CallExpression	"cmd_debug_cont_syscall ( core , input + 3 )"		4218565	0					
ANR	4218959	Callee	cmd_debug_cont_syscall		4218565	0					
ANR	4218960	Identifier	cmd_debug_cont_syscall		4218565	0					
ANR	4218961	ArgumentList	core		4218565	1					
ANR	4218962	Argument	core		4218565	0					
ANR	4218963	Identifier	core		4218565	0					
ANR	4218964	Argument	input + 3		4218565	1					
ANR	4218965	AdditiveExpression	input + 3		4218565	0		+			
ANR	4218966	Identifier	input		4218565	0					
ANR	4218967	PrimaryExpression	3		4218565	1					
ANR	4218968	BreakStatement	break ;	4271:3:122180:122185	4218565	5	True				
ANR	4218969	Label	case '\\0' :	4272:2:122189:122198	4218565	6	True				
ANR	4218970	ExpressionStatement	"cmd_debug_cont_syscall ( core , NULL )"	4273:3:122203:122238	4218565	7	True				
ANR	4218971	CallExpression	"cmd_debug_cont_syscall ( core , NULL )"		4218565	0					
ANR	4218972	Callee	cmd_debug_cont_syscall		4218565	0					
ANR	4218973	Identifier	cmd_debug_cont_syscall		4218565	0					
ANR	4218974	ArgumentList	core		4218565	1					
ANR	4218975	Argument	core		4218565	0					
ANR	4218976	Identifier	core		4218565	0					
ANR	4218977	Argument	NULL		4218565	1					
ANR	4218978	Identifier	NULL		4218565	0					
ANR	4218979	BreakStatement	break ;	4274:3:122243:122248	4218565	8	True				
ANR	4218980	Label	default :	4275:2:122252:122259	4218565	9	True				
ANR	4218981	Identifier	default		4218565	0					
ANR	4218982	Label	case '?' :	4276:2:122263:122271	4218565	10	True				
ANR	4218983	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dcs )"	4277:3:122276:122312	4218565	11	True				
ANR	4218984	CallExpression	"r_core_cmd_help ( core , help_msg_dcs )"		4218565	0					
ANR	4218985	Callee	r_core_cmd_help		4218565	0					
ANR	4218986	Identifier	r_core_cmd_help		4218565	0					
ANR	4218987	ArgumentList	core		4218565	1					
ANR	4218988	Argument	core		4218565	0					
ANR	4218989	Identifier	core		4218565	0					
ANR	4218990	Argument	help_msg_dcs		4218565	1					
ANR	4218991	Identifier	help_msg_dcs		4218565	0					
ANR	4218992	BreakStatement	break ;	4278:3:122317:122322	4218565	12	True				
ANR	4218993	BreakStatement	break ;	4280:2:122330:122335	4218565	35	True				
ANR	4218994	Label	case 'p' :	4281:1:122338:122346	4218565	36	True				
ANR	4218995	CompoundStatement		92:3:2317:2351	4218565	37					
ANR	4218996	IdentifierDeclStatement	RIOMap * s ;	4283:3:122390:122399	4218565	0	True				
ANR	4218997	IdentifierDecl	* s		4218565	0					
ANR	4218998	IdentifierDeclType	RIOMap *		4218565	0					
ANR	4218999	Identifier	s		4218565	1					
ANR	4219000	IdentifierDeclStatement	ut64 pc ;	4284:3:122404:122411	4218565	1	True				
ANR	4219001	IdentifierDecl	pc		4218565	0					
ANR	4219002	IdentifierDeclType	ut64		4218565	0					
ANR	4219003	Identifier	pc		4218565	1					
ANR	4219004	IdentifierDeclStatement	int n = 0 ;	4285:3:122416:122425	4218565	2	True				
ANR	4219005	IdentifierDecl	n = 0		4218565	0					
ANR	4219006	IdentifierDeclType	int		4218565	0					
ANR	4219007	Identifier	n		4218565	1					
ANR	4219008	AssignmentExpression	n = 0		4218565	2		=			
ANR	4219009	Identifier	n		4218565	0					
ANR	4219010	PrimaryExpression	0		4218565	1					
ANR	4219011	IdentifierDeclStatement	bool t = core -> dbg -> trace -> enabled ;	4286:3:122430:122464	4218565	3	True				
ANR	4219012	IdentifierDecl	t = core -> dbg -> trace -> enabled		4218565	0					
ANR	4219013	IdentifierDeclType	bool		4218565	0					
ANR	4219014	Identifier	t		4218565	1					
ANR	4219015	AssignmentExpression	t = core -> dbg -> trace -> enabled		4218565	2		=			
ANR	4219016	Identifier	t		4218565	0					
ANR	4219017	PtrMemberAccess	core -> dbg -> trace -> enabled		4218565	1					
ANR	4219018	PtrMemberAccess	core -> dbg -> trace		4218565	0					
ANR	4219019	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219020	Identifier	core		4218565	0					
ANR	4219021	Identifier	dbg		4218565	1					
ANR	4219022	Identifier	trace		4218565	1					
ANR	4219023	Identifier	enabled		4218565	1					
ANR	4219024	ExpressionStatement	core -> dbg -> trace -> enabled = false	4287:3:122469:122502	4218565	4	True				
ANR	4219025	AssignmentExpression	core -> dbg -> trace -> enabled = false		4218565	0		=			
ANR	4219026	PtrMemberAccess	core -> dbg -> trace -> enabled		4218565	0					
ANR	4219027	PtrMemberAccess	core -> dbg -> trace		4218565	0					
ANR	4219028	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219029	Identifier	core		4218565	0					
ANR	4219030	Identifier	dbg		4218565	1					
ANR	4219031	Identifier	trace		4218565	1					
ANR	4219032	Identifier	enabled		4218565	1					
ANR	4219033	Identifier	false		4218565	1					
ANR	4219034	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	4288:3:122507:122555	4218565	5	True				
ANR	4219035	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		4218565	0					
ANR	4219036	Callee	r_cons_break_push		4218565	0					
ANR	4219037	Identifier	r_cons_break_push		4218565	0					
ANR	4219038	ArgumentList	static_debug_stop		4218565	1					
ANR	4219039	Argument	static_debug_stop		4218565	0					
ANR	4219040	Identifier	static_debug_stop		4218565	0					
ANR	4219041	Argument	core -> dbg		4218565	1					
ANR	4219042	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219043	Identifier	core		4218565	0					
ANR	4219044	Identifier	dbg		4218565	1					
ANR	4219045	DoStatement	do		4218565	6					
ANR	4219046	CompoundStatement		95:6:2450:2450	4218565	0					
ANR	4219047	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4290:4:122569:122596	4218565	0	True				
ANR	4219048	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4218565	0					
ANR	4219049	Callee	r_debug_step		4218565	0					
ANR	4219050	Identifier	r_debug_step		4218565	0					
ANR	4219051	ArgumentList	core -> dbg		4218565	1					
ANR	4219052	Argument	core -> dbg		4218565	0					
ANR	4219053	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219054	Identifier	core		4218565	0					
ANR	4219055	Identifier	dbg		4218565	1					
ANR	4219056	Argument	1		4218565	1					
ANR	4219057	PrimaryExpression	1		4218565	0					
ANR	4219058	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4291:4:122602:122653	4218565	1	True				
ANR	4219059	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4218565	0					
ANR	4219060	Callee	r_debug_reg_sync		4218565	0					
ANR	4219061	Identifier	r_debug_reg_sync		4218565	0					
ANR	4219062	ArgumentList	core -> dbg		4218565	1					
ANR	4219063	Argument	core -> dbg		4218565	0					
ANR	4219064	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219065	Identifier	core		4218565	0					
ANR	4219066	Identifier	dbg		4218565	1					
ANR	4219067	Argument	R_REG_TYPE_GPR		4218565	1					
ANR	4219068	Identifier	R_REG_TYPE_GPR		4218565	0					
ANR	4219069	Argument	false		4218565	2					
ANR	4219070	Identifier	false		4218565	0					
ANR	4219071	ExpressionStatement	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"	4292:4:122659:122697	4218565	2	True				
ANR	4219072	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4218565	0		=			
ANR	4219073	Identifier	pc		4218565	0					
ANR	4219074	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4218565	1					
ANR	4219075	Callee	r_debug_reg_get		4218565	0					
ANR	4219076	Identifier	r_debug_reg_get		4218565	0					
ANR	4219077	ArgumentList	core -> dbg		4218565	1					
ANR	4219078	Argument	core -> dbg		4218565	0					
ANR	4219079	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219080	Identifier	core		4218565	0					
ANR	4219081	Identifier	dbg		4218565	1					
ANR	4219082	Argument	"""PC"""		4218565	1					
ANR	4219083	PrimaryExpression	"""PC"""		4218565	0					
ANR	4219084	Statement	eprintf	4293:4:122703:122709	4218565	3	True				
ANR	4219085	Statement	(	4293:12:122711:122711	4218565	4	True				
ANR	4219086	Statement	""" %d %"""	4293:13:122712:122718	4218565	5	True				
ANR	4219087	Statement	PFMT64x	4293:20:122719:122725	4218565	6	True				
ANR	4219088	Statement	"""\\r"""	4293:27:122726:122729	4218565	7	True				
ANR	4219089	Statement	","	4293:31:122730:122730	4218565	8	True				
ANR	4219090	Statement	n	4293:33:122732:122732	4218565	9	True				
ANR	4219091	Statement	++	4293:34:122733:122734	4218565	10	True				
ANR	4219092	Statement	","	4293:36:122735:122735	4218565	11	True				
ANR	4219093	Statement	pc	4293:38:122737:122738	4218565	12	True				
ANR	4219094	Statement	)	4293:40:122739:122739	4218565	13	True				
ANR	4219095	ExpressionStatement		4293:41:122740:122740	4218565	14	True				
ANR	4219096	ExpressionStatement	"s = r_io_map_get ( core -> io , pc )"	4294:4:122746:122777	4218565	15	True				
ANR	4219097	AssignmentExpression	"s = r_io_map_get ( core -> io , pc )"		4218565	0		=			
ANR	4219098	Identifier	s		4218565	0					
ANR	4219099	CallExpression	"r_io_map_get ( core -> io , pc )"		4218565	1					
ANR	4219100	Callee	r_io_map_get		4218565	0					
ANR	4219101	Identifier	r_io_map_get		4218565	0					
ANR	4219102	ArgumentList	core -> io		4218565	1					
ANR	4219103	Argument	core -> io		4218565	0					
ANR	4219104	PtrMemberAccess	core -> io		4218565	0					
ANR	4219105	Identifier	core		4218565	0					
ANR	4219106	Identifier	io		4218565	1					
ANR	4219107	Argument	pc		4218565	1					
ANR	4219108	Identifier	pc		4218565	0					
ANR	4219109	IfStatement	if ( r_cons_is_breaked ( ) )		4218565	16					
ANR	4219110	Condition	r_cons_is_breaked ( )	4295:8:122787:122806	4218565	0	True				
ANR	4219111	CallExpression	r_cons_is_breaked ( )		4218565	0					
ANR	4219112	Callee	r_cons_is_breaked		4218565	0					
ANR	4219113	Identifier	r_cons_is_breaked		4218565	0					
ANR	4219114	ArgumentList			4218565	1					
ANR	4219115	CompoundStatement		101:30:2696:2696	4218565	1					
ANR	4219116	BreakStatement	break ;	4296:5:122816:122821	4218565	0	True				
ANR	4219117	Condition	! s	4298:12:122841:122842	4218565	1	True				
ANR	4219118	UnaryOperationExpression	! s		4218565	0					
ANR	4219119	UnaryOperator	!		4218565	0					
ANR	4219120	Identifier	s		4218565	1					
ANR	4219121	ExpressionStatement	"eprintf ( ""\\n"" )"	4299:3:122849:122863	4218565	7	True				
ANR	4219122	CallExpression	"eprintf ( ""\\n"" )"		4218565	0					
ANR	4219123	Callee	eprintf		4218565	0					
ANR	4219124	Identifier	eprintf		4218565	0					
ANR	4219125	ArgumentList	"""\\n"""		4218565	1					
ANR	4219126	Argument	"""\\n"""		4218565	0					
ANR	4219127	PrimaryExpression	"""\\n"""		4218565	0					
ANR	4219128	ExpressionStatement	core -> dbg -> trace -> enabled = t	4300:3:122868:122897	4218565	8	True				
ANR	4219129	AssignmentExpression	core -> dbg -> trace -> enabled = t		4218565	0		=			
ANR	4219130	PtrMemberAccess	core -> dbg -> trace -> enabled		4218565	0					
ANR	4219131	PtrMemberAccess	core -> dbg -> trace		4218565	0					
ANR	4219132	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219133	Identifier	core		4218565	0					
ANR	4219134	Identifier	dbg		4218565	1					
ANR	4219135	Identifier	trace		4218565	1					
ANR	4219136	Identifier	enabled		4218565	1					
ANR	4219137	Identifier	t		4218565	1					
ANR	4219138	ExpressionStatement	r_cons_break_pop ( )	4301:3:122902:122921	4218565	9	True				
ANR	4219139	CallExpression	r_cons_break_pop ( )		4218565	0					
ANR	4219140	Callee	r_cons_break_pop		4218565	0					
ANR	4219141	Identifier	r_cons_break_pop		4218565	0					
ANR	4219142	ArgumentList			4218565	1					
ANR	4219143	ReturnStatement	return 1 ;	4302:3:122926:122934	4218565	10	True				
ANR	4219144	PrimaryExpression	1		4218565	0					
ANR	4219145	Label	case 'u' :	4304:1:122941:122949	4218565	38	True				
ANR	4219146	IfStatement	if ( input [ 2 ] == '?' )		4218565	39					
ANR	4219147	Condition	input [ 2 ] == '?'	4305:6:122966:122980	4218565	0	True				
ANR	4219148	EqualityExpression	input [ 2 ] == '?'		4218565	0		==			
ANR	4219149	ArrayIndexing	input [ 2 ]		4218565	0					
ANR	4219150	Identifier	input		4218565	0					
ANR	4219151	PrimaryExpression	2		4218565	1					
ANR	4219152	PrimaryExpression	'?'		4218565	1					
ANR	4219153	CompoundStatement		111:23:2870:2870	4218565	1					
ANR	4219154	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dcu )"	4306:3:122988:123024	4218565	0	True				
ANR	4219155	CallExpression	"r_core_cmd_help ( core , help_msg_dcu )"		4218565	0					
ANR	4219156	Callee	r_core_cmd_help		4218565	0					
ANR	4219157	Identifier	r_core_cmd_help		4218565	0					
ANR	4219158	ArgumentList	core		4218565	1					
ANR	4219159	Argument	core		4218565	0					
ANR	4219160	Identifier	core		4218565	0					
ANR	4219161	Argument	help_msg_dcu		4218565	1					
ANR	4219162	Identifier	help_msg_dcu		4218565	0					
ANR	4219163	ElseStatement	else		4218565	0					
ANR	4219164	IfStatement	if ( input [ 2 ] == '.' )		4218565	0					
ANR	4219165	Condition	input [ 2 ] == '.'	4307:13:123039:123053	4218565	0	True				
ANR	4219166	EqualityExpression	input [ 2 ] == '.'		4218565	0		==			
ANR	4219167	ArrayIndexing	input [ 2 ]		4218565	0					
ANR	4219168	Identifier	input		4218565	0					
ANR	4219169	PrimaryExpression	2		4218565	1					
ANR	4219170	PrimaryExpression	'.'		4218565	1					
ANR	4219171	CompoundStatement		113:30:2943:2943	4218565	1					
ANR	4219172	ExpressionStatement	"cmd_dcu ( core , ""cu $$"" )"	4308:3:123061:123084	4218565	0	True				
ANR	4219173	CallExpression	"cmd_dcu ( core , ""cu $$"" )"		4218565	0					
ANR	4219174	Callee	cmd_dcu		4218565	0					
ANR	4219175	Identifier	cmd_dcu		4218565	0					
ANR	4219176	ArgumentList	core		4218565	1					
ANR	4219177	Argument	core		4218565	0					
ANR	4219178	Identifier	core		4218565	0					
ANR	4219179	Argument	"""cu $$"""		4218565	1					
ANR	4219180	PrimaryExpression	"""cu $$"""		4218565	0					
ANR	4219181	ElseStatement	else		4218565	0					
ANR	4219182	CompoundStatement		115:9:2982:2982	4218565	0					
ANR	4219183	ExpressionStatement	"cmd_dcu ( core , input )"	4310:3:123100:123121	4218565	0	True				
ANR	4219184	CallExpression	"cmd_dcu ( core , input )"		4218565	0					
ANR	4219185	Callee	cmd_dcu		4218565	0					
ANR	4219186	Identifier	cmd_dcu		4218565	0					
ANR	4219187	ArgumentList	core		4218565	1					
ANR	4219188	Argument	core		4218565	0					
ANR	4219189	Identifier	core		4218565	0					
ANR	4219190	Argument	input		4218565	1					
ANR	4219191	Identifier	input		4218565	0					
ANR	4219192	BreakStatement	break ;	4312:2:123129:123134	4218565	40	True				
ANR	4219193	Label	case ' ' :	4313:1:123137:123145	4218565	41	True				
ANR	4219194	ExpressionStatement	old_pid = core -> dbg -> pid	4314:2:123149:123173	4218565	42	True				
ANR	4219195	AssignmentExpression	old_pid = core -> dbg -> pid		4218565	0		=			
ANR	4219196	Identifier	old_pid		4218565	0					
ANR	4219197	PtrMemberAccess	core -> dbg -> pid		4218565	1					
ANR	4219198	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219199	Identifier	core		4218565	0					
ANR	4219200	Identifier	dbg		4218565	1					
ANR	4219201	Identifier	pid		4218565	1					
ANR	4219202	ExpressionStatement	pid = atoi ( input + 2 )	4315:2:123177:123199	4218565	43	True				
ANR	4219203	AssignmentExpression	pid = atoi ( input + 2 )		4218565	0		=			
ANR	4219204	Identifier	pid		4218565	0					
ANR	4219205	CallExpression	atoi ( input + 2 )		4218565	1					
ANR	4219206	Callee	atoi		4218565	0					
ANR	4219207	Identifier	atoi		4218565	0					
ANR	4219208	ArgumentList	input + 2		4218565	1					
ANR	4219209	Argument	input + 2		4218565	0					
ANR	4219210	AdditiveExpression	input + 2		4218565	0		+			
ANR	4219211	Identifier	input		4218565	0					
ANR	4219212	PrimaryExpression	2		4218565	1					
ANR	4219213	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4316:2:123203:123242	4218565	44	True				
ANR	4219214	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4218565	0					
ANR	4219215	Callee	r_reg_arena_swap		4218565	0					
ANR	4219216	Identifier	r_reg_arena_swap		4218565	0					
ANR	4219217	ArgumentList	core -> dbg -> reg		4218565	1					
ANR	4219218	Argument	core -> dbg -> reg		4218565	0					
ANR	4219219	PtrMemberAccess	core -> dbg -> reg		4218565	0					
ANR	4219220	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219221	Identifier	core		4218565	0					
ANR	4219222	Identifier	dbg		4218565	1					
ANR	4219223	Identifier	reg		4218565	1					
ANR	4219224	Argument	true		4218565	1					
ANR	4219225	Identifier	true		4218565	0					
ANR	4219226	ExpressionStatement	"r_debug_select ( core -> dbg , pid , core -> dbg -> tid )"	4317:2:123246:123293	4218565	45	True				
ANR	4219227	CallExpression	"r_debug_select ( core -> dbg , pid , core -> dbg -> tid )"		4218565	0					
ANR	4219228	Callee	r_debug_select		4218565	0					
ANR	4219229	Identifier	r_debug_select		4218565	0					
ANR	4219230	ArgumentList	core -> dbg		4218565	1					
ANR	4219231	Argument	core -> dbg		4218565	0					
ANR	4219232	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219233	Identifier	core		4218565	0					
ANR	4219234	Identifier	dbg		4218565	1					
ANR	4219235	Argument	pid		4218565	1					
ANR	4219236	Identifier	pid		4218565	0					
ANR	4219237	Argument	core -> dbg -> tid		4218565	2					
ANR	4219238	PtrMemberAccess	core -> dbg -> tid		4218565	0					
ANR	4219239	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219240	Identifier	core		4218565	0					
ANR	4219241	Identifier	dbg		4218565	1					
ANR	4219242	Identifier	tid		4218565	1					
ANR	4219243	ExpressionStatement	r_debug_continue ( core -> dbg )	4318:2:123297:123325	4218565	46	True				
ANR	4219244	CallExpression	r_debug_continue ( core -> dbg )		4218565	0					
ANR	4219245	Callee	r_debug_continue		4218565	0					
ANR	4219246	Identifier	r_debug_continue		4218565	0					
ANR	4219247	ArgumentList	core -> dbg		4218565	1					
ANR	4219248	Argument	core -> dbg		4218565	0					
ANR	4219249	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219250	Identifier	core		4218565	0					
ANR	4219251	Identifier	dbg		4218565	1					
ANR	4219252	ExpressionStatement	"r_debug_select ( core -> dbg , old_pid , core -> dbg -> tid )"	4319:2:123329:123380	4218565	47	True				
ANR	4219253	CallExpression	"r_debug_select ( core -> dbg , old_pid , core -> dbg -> tid )"		4218565	0					
ANR	4219254	Callee	r_debug_select		4218565	0					
ANR	4219255	Identifier	r_debug_select		4218565	0					
ANR	4219256	ArgumentList	core -> dbg		4218565	1					
ANR	4219257	Argument	core -> dbg		4218565	0					
ANR	4219258	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219259	Identifier	core		4218565	0					
ANR	4219260	Identifier	dbg		4218565	1					
ANR	4219261	Argument	old_pid		4218565	1					
ANR	4219262	Identifier	old_pid		4218565	0					
ANR	4219263	Argument	core -> dbg -> tid		4218565	2					
ANR	4219264	PtrMemberAccess	core -> dbg -> tid		4218565	0					
ANR	4219265	PtrMemberAccess	core -> dbg		4218565	0					
ANR	4219266	Identifier	core		4218565	0					
ANR	4219267	Identifier	dbg		4218565	1					
ANR	4219268	Identifier	tid		4218565	1					
ANR	4219269	BreakStatement	break ;	4320:2:123384:123389	4218565	48	True				
ANR	4219270	Label	case 't' :	4321:1:123392:123400	4218565	49	True				
ANR	4219271	ExpressionStatement	"cmd_debug_backtrace ( core , input + 2 )"	4322:2:123404:123441	4218565	50	True				
ANR	4219272	CallExpression	"cmd_debug_backtrace ( core , input + 2 )"		4218565	0					
ANR	4219273	Callee	cmd_debug_backtrace		4218565	0					
ANR	4219274	Identifier	cmd_debug_backtrace		4218565	0					
ANR	4219275	ArgumentList	core		4218565	1					
ANR	4219276	Argument	core		4218565	0					
ANR	4219277	Identifier	core		4218565	0					
ANR	4219278	Argument	input + 2		4218565	1					
ANR	4219279	AdditiveExpression	input + 2		4218565	0		+			
ANR	4219280	Identifier	input		4218565	0					
ANR	4219281	PrimaryExpression	2		4218565	1					
ANR	4219282	BreakStatement	break ;	4323:2:123445:123450	4218565	51	True				
ANR	4219283	Label	case '?' :	4324:1:123453:123461	4218565	52	True				
ANR	4219284	Label	default :	4325:1:123473:123480	4218565	53	True				
ANR	4219285	Identifier	default		4218565	0					
ANR	4219286	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dc )"	4326:2:123484:123519	4218565	54	True				
ANR	4219287	CallExpression	"r_core_cmd_help ( core , help_msg_dc )"		4218565	0					
ANR	4219288	Callee	r_core_cmd_help		4218565	0					
ANR	4219289	Identifier	r_core_cmd_help		4218565	0					
ANR	4219290	ArgumentList	core		4218565	1					
ANR	4219291	Argument	core		4218565	0					
ANR	4219292	Identifier	core		4218565	0					
ANR	4219293	Argument	help_msg_dc		4218565	1					
ANR	4219294	Identifier	help_msg_dc		4218565	0					
ANR	4219295	ReturnStatement	return 0 ;	4327:2:123523:123531	4218565	55	True				
ANR	4219296	PrimaryExpression	0		4218565	0					
ANR	4219297	ReturnStatement	return 1 ;	4329:1:123537:123545	4218565	3	True				
ANR	4219298	PrimaryExpression	1		4218565	0					
ANR	4219299	ReturnType	static int		4218565	1					
ANR	4219300	Identifier	cmd_debug_continue		4218565	2					
ANR	4219301	ParameterList	"RCore * core , const char * input"		4218565	3					
ANR	4219302	Parameter	RCore * core	4195:31:120080:120090	4218565	0	True				
ANR	4219303	ParameterType	RCore *		4218565	0					
ANR	4219304	Identifier	core		4218565	1					
ANR	4219305	Parameter	const char * input	4195:44:120093:120109	4218565	1	True				
ANR	4219306	ParameterType	const char *		4218565	0					
ANR	4219307	Identifier	input		4218565	1					
ANR	4219308	CFGEntryNode	ENTRY		4218565		True				
ANR	4219309	CFGExitNode	EXIT		4218565		True				
ANR	4219310	Symbol	help_msg_dc		4218565						
ANR	4219311	Symbol	r_debug_reg_get		4218565						
ANR	4219312	Symbol	* input		4218565						
ANR	4219313	Symbol	* core		4218565						
ANR	4219314	Symbol	strchr		4218565						
ANR	4219315	Symbol	pid		4218565						
ANR	4219316	Symbol	* core -> dbg -> trace		4218565						
ANR	4219317	Symbol	tid		4218565						
ANR	4219318	Symbol	r_num_math		4218565						
ANR	4219319	Symbol	R_ANAL_OP_TYPE_UCALL		4218565						
ANR	4219320	Symbol	r_cons_is_breaked		4218565						
ANR	4219321	Symbol	core -> io		4218565						
ANR	4219322	Symbol	core -> dbg -> trace		4218565						
ANR	4219323	Symbol	* ptr		4218565						
ANR	4219324	Symbol	core -> num		4218565						
ANR	4219325	Symbol	r_debug_continue_back		4218565						
ANR	4219326	Symbol	* * core		4218565						
ANR	4219327	Symbol	R_REG_TYPE_GPR		4218565						
ANR	4219328	Symbol	R_ANAL_OP_TYPE_RET		4218565						
ANR	4219329	Symbol	signum		4218565						
ANR	4219330	Symbol	atoi		4218565						
ANR	4219331	Symbol	core -> dbg -> continue_all_threads		4218565						
ANR	4219332	Symbol	NULL		4218565						
ANR	4219333	Symbol	help_msg_dcu		4218565						
ANR	4219334	Symbol	help_msg_dcs		4218565						
ANR	4219335	Symbol	false		4218565						
ANR	4219336	Symbol	n		4218565						
ANR	4219337	Symbol	ptr		4218565						
ANR	4219338	Symbol	core		4218565						
ANR	4219339	Symbol	input		4218565						
ANR	4219340	Symbol	* * * core		4218565						
ANR	4219341	Symbol	r_debug_is_dead		4218565						
ANR	4219342	Symbol	s		4218565						
ANR	4219343	Symbol	pc		4218565						
ANR	4219344	Symbol	core -> dbg -> trace -> enabled		4218565						
ANR	4219345	Symbol	t		4218565						
ANR	4219346	Symbol	core -> dbg -> reg		4218565						
ANR	4219347	Symbol	R_ANAL_OP_TYPE_CALL		4218565						
ANR	4219348	Symbol	static_debug_stop		4218565						
ANR	4219349	Symbol	true		4218565						
ANR	4219350	Symbol	core -> dbg -> tid		4218565						
ANR	4219351	Symbol	old_tid		4218565						
ANR	4219352	Symbol	* core -> dbg		4218565						
ANR	4219353	Symbol	core -> dbg -> pid		4218565						
ANR	4219354	Symbol	old_pid		4218565						
ANR	4219355	Symbol	r_io_map_get		4218565						
ANR	4219356	Symbol	core -> dbg		4218565						
ANR	4219357	Symbol	* * core -> dbg		4218565						
ANR	4219358	Function	get_corefile_name	4332:0:123550:123698							
ANR	4219359	FunctionDef	"get_corefile_name (const char * raw_name , int pid)"		4219358	0					
ANR	4219360	CompoundStatement		4332:63:123613:123698	4219358	0					
ANR	4219361	ReturnStatement	"return ( ! * raw_name ) ? r_str_newf ( ""core.%u"" , pid ) : r_str_trim_dup ( raw_name ) ;"	4333:1:123616:123696	4219358	0	True				
ANR	4219362	ConditionalExpression	"( ! * raw_name ) ? r_str_newf ( ""core.%u"" , pid ) : r_str_trim_dup ( raw_name )"		4219358	0					
ANR	4219363	Condition	! * raw_name		4219358	0					
ANR	4219364	UnaryOperationExpression	! * raw_name		4219358	0					
ANR	4219365	UnaryOperator	!		4219358	0					
ANR	4219366	UnaryOperationExpression	* raw_name		4219358	1					
ANR	4219367	UnaryOperator	*		4219358	0					
ANR	4219368	Identifier	raw_name		4219358	1					
ANR	4219369	CallExpression	"r_str_newf ( ""core.%u"" , pid )"		4219358	1					
ANR	4219370	Callee	r_str_newf		4219358	0					
ANR	4219371	Identifier	r_str_newf		4219358	0					
ANR	4219372	ArgumentList	"""core.%u"""		4219358	1					
ANR	4219373	Argument	"""core.%u"""		4219358	0					
ANR	4219374	PrimaryExpression	"""core.%u"""		4219358	0					
ANR	4219375	Argument	pid		4219358	1					
ANR	4219376	Identifier	pid		4219358	0					
ANR	4219377	CallExpression	r_str_trim_dup ( raw_name )		4219358	2					
ANR	4219378	Callee	r_str_trim_dup		4219358	0					
ANR	4219379	Identifier	r_str_trim_dup		4219358	0					
ANR	4219380	ArgumentList	raw_name		4219358	1					
ANR	4219381	Argument	raw_name		4219358	0					
ANR	4219382	Identifier	raw_name		4219358	0					
ANR	4219383	ReturnType	static char *		4219358	1					
ANR	4219384	Identifier	get_corefile_name		4219358	2					
ANR	4219385	ParameterList	"const char * raw_name , int pid"		4219358	3					
ANR	4219386	Parameter	const char * raw_name	4332:32:123582:123601	4219358	0	True				
ANR	4219387	ParameterType	const char *		4219358	0					
ANR	4219388	Identifier	raw_name		4219358	1					
ANR	4219389	Parameter	int pid	4332:54:123604:123610	4219358	1	True				
ANR	4219390	ParameterType	int		4219358	0					
ANR	4219391	Identifier	pid		4219358	1					
ANR	4219392	CFGEntryNode	ENTRY		4219358		True				
ANR	4219393	CFGExitNode	EXIT		4219358		True				
ANR	4219394	Symbol	raw_name		4219358						
ANR	4219395	Symbol	* raw_name		4219358						
ANR	4219396	Symbol	pid		4219358						
ANR	4219397	Symbol	r_str_newf		4219358						
ANR	4219398	Symbol	r_str_trim_dup		4219358						
ANR	4219399	Function	cmd_debug_step	4338:0:123701:128350							
ANR	4219400	FunctionDef	"cmd_debug_step (RCore * core , const char * input)"		4219399	0					
ANR	4219401	CompoundStatement		4338:59:123760:128350	4219399	0					
ANR	4219402	IdentifierDeclStatement	ut64 addr = core -> offset ;	4339:1:123763:123787	4219399	0	True				
ANR	4219403	IdentifierDecl	addr = core -> offset		4219399	0					
ANR	4219404	IdentifierDeclType	ut64		4219399	0					
ANR	4219405	Identifier	addr		4219399	1					
ANR	4219406	AssignmentExpression	addr = core -> offset		4219399	2		=			
ANR	4219407	Identifier	addr		4219399	0					
ANR	4219408	PtrMemberAccess	core -> offset		4219399	1					
ANR	4219409	Identifier	core		4219399	0					
ANR	4219410	Identifier	offset		4219399	1					
ANR	4219411	ExpressionStatement		4339:26:123788:123788	4219399	1	True				
ANR	4219412	IdentifierDeclStatement	ut8 buf [ 64 ] ;	4340:1:123791:123802	4219399	2	True				
ANR	4219413	IdentifierDecl	buf [ 64 ]		4219399	0					
ANR	4219414	IdentifierDeclType	ut8 [ 64 ]		4219399	0					
ANR	4219415	Identifier	buf		4219399	1					
ANR	4219416	PrimaryExpression	64		4219399	2					
ANR	4219417	IdentifierDeclStatement	RAnalOp aop ;	4341:1:123805:123816	4219399	3	True				
ANR	4219418	IdentifierDecl	aop		4219399	0					
ANR	4219419	IdentifierDeclType	RAnalOp		4219399	0					
ANR	4219420	Identifier	aop		4219399	1					
ANR	4219421	IdentifierDeclStatement	"int i , times = 1 ;"	4342:1:123819:123835	4219399	4	True				
ANR	4219422	IdentifierDecl	i		4219399	0					
ANR	4219423	IdentifierDeclType	int		4219399	0					
ANR	4219424	Identifier	i		4219399	1					
ANR	4219425	IdentifierDecl	times = 1		4219399	1					
ANR	4219426	IdentifierDeclType	int		4219399	0					
ANR	4219427	Identifier	times		4219399	1					
ANR	4219428	AssignmentExpression	times = 1		4219399	2		=			
ANR	4219429	Identifier	times		4219399	0					
ANR	4219430	PrimaryExpression	1		4219399	1					
ANR	4219431	IfStatement	if ( strlen ( input ) > 2 )		4219399	5					
ANR	4219432	Condition	strlen ( input ) > 2	4343:5:123842:123859	4219399	0	True				
ANR	4219433	RelationalExpression	strlen ( input ) > 2		4219399	0		>			
ANR	4219434	CallExpression	strlen ( input )		4219399	0					
ANR	4219435	Callee	strlen		4219399	0					
ANR	4219436	Identifier	strlen		4219399	0					
ANR	4219437	ArgumentList	input		4219399	1					
ANR	4219438	Argument	input		4219399	0					
ANR	4219439	Identifier	input		4219399	0					
ANR	4219440	PrimaryExpression	2		4219399	1					
ANR	4219441	CompoundStatement		6:25:101:101	4219399	1					
ANR	4219442	ExpressionStatement	"times = r_num_math ( core -> num , input + 2 )"	4344:2:123866:123907	4219399	0	True				
ANR	4219443	AssignmentExpression	"times = r_num_math ( core -> num , input + 2 )"		4219399	0		=			
ANR	4219444	Identifier	times		4219399	0					
ANR	4219445	CallExpression	"r_num_math ( core -> num , input + 2 )"		4219399	1					
ANR	4219446	Callee	r_num_math		4219399	0					
ANR	4219447	Identifier	r_num_math		4219399	0					
ANR	4219448	ArgumentList	core -> num		4219399	1					
ANR	4219449	Argument	core -> num		4219399	0					
ANR	4219450	PtrMemberAccess	core -> num		4219399	0					
ANR	4219451	Identifier	core		4219399	0					
ANR	4219452	Identifier	num		4219399	1					
ANR	4219453	Argument	input + 2		4219399	1					
ANR	4219454	AdditiveExpression	input + 2		4219399	0		+			
ANR	4219455	Identifier	input		4219399	0					
ANR	4219456	PrimaryExpression	2		4219399	1					
ANR	4219457	IfStatement	if ( times < 1 )		4219399	6					
ANR	4219458	Condition	times < 1	4346:5:123917:123925	4219399	0	True				
ANR	4219459	RelationalExpression	times < 1		4219399	0		<			
ANR	4219460	Identifier	times		4219399	0					
ANR	4219461	PrimaryExpression	1		4219399	1					
ANR	4219462	CompoundStatement		9:16:167:167	4219399	1					
ANR	4219463	ExpressionStatement	times = 1	4347:2:123932:123941	4219399	0	True				
ANR	4219464	AssignmentExpression	times = 1		4219399	0		=			
ANR	4219465	Identifier	times		4219399	0					
ANR	4219466	PrimaryExpression	1		4219399	1					
ANR	4219467	SwitchStatement	switch ( input [ 1 ] )		4219399	7					
ANR	4219468	Condition	input [ 1 ]	4349:9:123955:123962	4219399	0	True				
ANR	4219469	ArrayIndexing	input [ 1 ]		4219399	0					
ANR	4219470	Identifier	input		4219399	0					
ANR	4219471	PrimaryExpression	1		4219399	1					
ANR	4219472	CompoundStatement		12:19:204:204	4219399	1					
ANR	4219473	Label	case 0 :	4350:1:123968:123974	4219399	0	True				
ANR	4219474	Label	case ' ' :	4351:1:123985:123993	4219399	1	True				
ANR	4219475	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		4219399	2					
ANR	4219476	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	4352:6:124001:124042	4219399	0	True				
ANR	4219477	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		4219399	0					
ANR	4219478	Callee	r_config_get_i		4219399	0					
ANR	4219479	Identifier	r_config_get_i		4219399	0					
ANR	4219480	ArgumentList	core -> config		4219399	1					
ANR	4219481	Argument	core -> config		4219399	0					
ANR	4219482	PtrMemberAccess	core -> config		4219399	0					
ANR	4219483	Identifier	core		4219399	0					
ANR	4219484	Identifier	config		4219399	1					
ANR	4219485	Argument	"""cfg.debug"""		4219399	1					
ANR	4219486	PrimaryExpression	"""cfg.debug"""		4219399	0					
ANR	4219487	CompoundStatement		20:3:469:512	4219399	1					
ANR	4219488	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4353:3:124050:124089	4219399	0	True				
ANR	4219489	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4219399	0					
ANR	4219490	Callee	r_reg_arena_swap		4219399	0					
ANR	4219491	Identifier	r_reg_arena_swap		4219399	0					
ANR	4219492	ArgumentList	core -> dbg -> reg		4219399	1					
ANR	4219493	Argument	core -> dbg -> reg		4219399	0					
ANR	4219494	PtrMemberAccess	core -> dbg -> reg		4219399	0					
ANR	4219495	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219496	Identifier	core		4219399	0					
ANR	4219497	Identifier	dbg		4219399	1					
ANR	4219498	Identifier	reg		4219399	1					
ANR	4219499	Argument	true		4219399	1					
ANR	4219500	Identifier	true		4219399	0					
ANR	4219501	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4356:3:124174:124225	4219399	1	True				
ANR	4219502	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4219399	0					
ANR	4219503	Callee	r_debug_reg_sync		4219399	0					
ANR	4219504	Identifier	r_debug_reg_sync		4219399	0					
ANR	4219505	ArgumentList	core -> dbg		4219399	1					
ANR	4219506	Argument	core -> dbg		4219399	0					
ANR	4219507	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219508	Identifier	core		4219399	0					
ANR	4219509	Identifier	dbg		4219399	1					
ANR	4219510	Argument	R_REG_TYPE_GPR		4219399	1					
ANR	4219511	Identifier	R_REG_TYPE_GPR		4219399	0					
ANR	4219512	Argument	false		4219399	2					
ANR	4219513	Identifier	false		4219399	0					
ANR	4219514	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	4357:3:124230:124273	4219399	2	True				
ANR	4219515	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	0					
ANR	4219516	IdentifierDeclType	ut64		4219399	0					
ANR	4219517	Identifier	pc		4219399	1					
ANR	4219518	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	2		=			
ANR	4219519	Identifier	pc		4219399	0					
ANR	4219520	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	1					
ANR	4219521	Callee	r_debug_reg_get		4219399	0					
ANR	4219522	Identifier	r_debug_reg_get		4219399	0					
ANR	4219523	ArgumentList	core -> dbg		4219399	1					
ANR	4219524	Argument	core -> dbg		4219399	0					
ANR	4219525	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219526	Identifier	core		4219399	0					
ANR	4219527	Identifier	dbg		4219399	1					
ANR	4219528	Argument	"""PC"""		4219399	1					
ANR	4219529	PrimaryExpression	"""PC"""		4219399	0					
ANR	4219530	ExpressionStatement	"r_debug_trace_pc ( core -> dbg , pc )"	4358:3:124278:124310	4219399	3	True				
ANR	4219531	CallExpression	"r_debug_trace_pc ( core -> dbg , pc )"		4219399	0					
ANR	4219532	Callee	r_debug_trace_pc		4219399	0					
ANR	4219533	Identifier	r_debug_trace_pc		4219399	0					
ANR	4219534	ArgumentList	core -> dbg		4219399	1					
ANR	4219535	Argument	core -> dbg		4219399	0					
ANR	4219536	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219537	Identifier	core		4219399	0					
ANR	4219538	Identifier	dbg		4219399	1					
ANR	4219539	Argument	pc		4219399	1					
ANR	4219540	Identifier	pc		4219399	0					
ANR	4219541	IfStatement	"if ( ! r_debug_step ( core -> dbg , times ) )"		4219399	4					
ANR	4219542	Condition	"! r_debug_step ( core -> dbg , times )"	4359:7:124319:124350	4219399	0	True				
ANR	4219543	UnaryOperationExpression	"! r_debug_step ( core -> dbg , times )"		4219399	0					
ANR	4219544	UnaryOperator	!		4219399	0					
ANR	4219545	CallExpression	"r_debug_step ( core -> dbg , times )"		4219399	1					
ANR	4219546	Callee	r_debug_step		4219399	0					
ANR	4219547	Identifier	r_debug_step		4219399	0					
ANR	4219548	ArgumentList	core -> dbg		4219399	1					
ANR	4219549	Argument	core -> dbg		4219399	0					
ANR	4219550	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219551	Identifier	core		4219399	0					
ANR	4219552	Identifier	dbg		4219399	1					
ANR	4219553	Argument	times		4219399	1					
ANR	4219554	Identifier	times		4219399	0					
ANR	4219555	CompoundStatement		22:41:592:592	4219399	1					
ANR	4219556	ExpressionStatement	"eprintf ( ""Step failed\\n"" )"	4360:4:124359:124384	4219399	0	True				
ANR	4219557	CallExpression	"eprintf ( ""Step failed\\n"" )"		4219399	0					
ANR	4219558	Callee	eprintf		4219399	0					
ANR	4219559	Identifier	eprintf		4219399	0					
ANR	4219560	ArgumentList	"""Step failed\\n"""		4219399	1					
ANR	4219561	Argument	"""Step failed\\n"""		4219399	0					
ANR	4219562	PrimaryExpression	"""Step failed\\n"""		4219399	0					
ANR	4219563	ExpressionStatement	core -> break_loop = true	4361:4:124390:124413	4219399	1	True				
ANR	4219564	AssignmentExpression	core -> break_loop = true		4219399	0		=			
ANR	4219565	PtrMemberAccess	core -> break_loop		4219399	0					
ANR	4219566	Identifier	core		4219399	0					
ANR	4219567	Identifier	break_loop		4219399	1					
ANR	4219568	Identifier	true		4219399	1					
ANR	4219569	ElseStatement	else		4219399	0					
ANR	4219570	CompoundStatement		26:9:668:668	4219399	0					
ANR	4219571	ExpressionStatement	"r_core_cmdf ( core , ""%daes"" , R_MAX ( 1 , times ) )"	4364:3:124434:124479	4219399	0	True				
ANR	4219572	CallExpression	"r_core_cmdf ( core , ""%daes"" , R_MAX ( 1 , times ) )"		4219399	0					
ANR	4219573	Callee	r_core_cmdf		4219399	0					
ANR	4219574	Identifier	r_core_cmdf		4219399	0					
ANR	4219575	ArgumentList	core		4219399	1					
ANR	4219576	Argument	core		4219399	0					
ANR	4219577	Identifier	core		4219399	0					
ANR	4219578	Argument	"""%daes"""		4219399	1					
ANR	4219579	PrimaryExpression	"""%daes"""		4219399	0					
ANR	4219580	Argument	"R_MAX ( 1 , times )"		4219399	2					
ANR	4219581	CallExpression	"R_MAX ( 1 , times )"		4219399	0					
ANR	4219582	Callee	R_MAX		4219399	0					
ANR	4219583	Identifier	R_MAX		4219399	0					
ANR	4219584	ArgumentList	1		4219399	1					
ANR	4219585	Argument	1		4219399	0					
ANR	4219586	PrimaryExpression	1		4219399	0					
ANR	4219587	Argument	times		4219399	1					
ANR	4219588	Identifier	times		4219399	0					
ANR	4219589	BreakStatement	break ;	4366:2:124487:124492	4219399	3	True				
ANR	4219590	Label	case 'i' :	4367:1:124495:124503	4219399	4	True				
ANR	4219591	IfStatement	if ( input [ 2 ] == ' ' )		4219399	5					
ANR	4219592	Condition	input [ 2 ] == ' '	4368:6:124520:124534	4219399	0	True				
ANR	4219593	EqualityExpression	input [ 2 ] == ' '		4219399	0		==			
ANR	4219594	ArrayIndexing	input [ 2 ]		4219399	0					
ANR	4219595	Identifier	input		4219399	0					
ANR	4219596	PrimaryExpression	2		4219399	1					
ANR	4219597	PrimaryExpression	' '		4219399	1					
ANR	4219598	CompoundStatement		32:3:781:790	4219399	1					
ANR	4219599	IdentifierDeclStatement	int n = 0 ;	4369:3:124542:124551	4219399	0	True				
ANR	4219600	IdentifierDecl	n = 0		4219399	0					
ANR	4219601	IdentifierDeclType	int		4219399	0					
ANR	4219602	Identifier	n		4219399	1					
ANR	4219603	AssignmentExpression	n = 0		4219399	2		=			
ANR	4219604	Identifier	n		4219399	0					
ANR	4219605	PrimaryExpression	0		4219399	1					
ANR	4219606	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	4370:3:124556:124604	4219399	1	True				
ANR	4219607	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		4219399	0					
ANR	4219608	Callee	r_cons_break_push		4219399	0					
ANR	4219609	Identifier	r_cons_break_push		4219399	0					
ANR	4219610	ArgumentList	static_debug_stop		4219399	1					
ANR	4219611	Argument	static_debug_stop		4219399	0					
ANR	4219612	Identifier	static_debug_stop		4219399	0					
ANR	4219613	Argument	core -> dbg		4219399	1					
ANR	4219614	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219615	Identifier	core		4219399	0					
ANR	4219616	Identifier	dbg		4219399	1					
ANR	4219617	DoStatement	do		4219399	2					
ANR	4219618	CompoundStatement		34:6:851:851	4219399	0					
ANR	4219619	IfStatement	if ( r_cons_is_breaked ( ) )		4219399	0					
ANR	4219620	Condition	r_cons_is_breaked ( )	4372:8:124622:124641	4219399	0	True				
ANR	4219621	CallExpression	r_cons_is_breaked ( )		4219399	0					
ANR	4219622	Callee	r_cons_is_breaked		4219399	0					
ANR	4219623	Identifier	r_cons_is_breaked		4219399	0					
ANR	4219624	ArgumentList			4219399	1					
ANR	4219625	CompoundStatement		35:30:883:883	4219399	1					
ANR	4219626	BreakStatement	break ;	4373:5:124651:124656	4219399	0	True				
ANR	4219627	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4375:4:124668:124695	4219399	1	True				
ANR	4219628	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4219399	0					
ANR	4219629	Callee	r_debug_step		4219399	0					
ANR	4219630	Identifier	r_debug_step		4219399	0					
ANR	4219631	ArgumentList	core -> dbg		4219399	1					
ANR	4219632	Argument	core -> dbg		4219399	0					
ANR	4219633	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219634	Identifier	core		4219399	0					
ANR	4219635	Identifier	dbg		4219399	1					
ANR	4219636	Argument	1		4219399	1					
ANR	4219637	PrimaryExpression	1		4219399	0					
ANR	4219638	IfStatement	if ( r_debug_is_dead ( core -> dbg ) )		4219399	2					
ANR	4219639	Condition	r_debug_is_dead ( core -> dbg )	4376:8:124705:124731	4219399	0	True				
ANR	4219640	CallExpression	r_debug_is_dead ( core -> dbg )		4219399	0					
ANR	4219641	Callee	r_debug_is_dead		4219399	0					
ANR	4219642	Identifier	r_debug_is_dead		4219399	0					
ANR	4219643	ArgumentList	core -> dbg		4219399	1					
ANR	4219644	Argument	core -> dbg		4219399	0					
ANR	4219645	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219646	Identifier	core		4219399	0					
ANR	4219647	Identifier	dbg		4219399	1					
ANR	4219648	CompoundStatement		39:37:973:973	4219399	1					
ANR	4219649	ExpressionStatement	core -> break_loop = true	4377:5:124741:124764	4219399	0	True				
ANR	4219650	AssignmentExpression	core -> break_loop = true		4219399	0		=			
ANR	4219651	PtrMemberAccess	core -> break_loop		4219399	0					
ANR	4219652	Identifier	core		4219399	0					
ANR	4219653	Identifier	break_loop		4219399	1					
ANR	4219654	Identifier	true		4219399	1					
ANR	4219655	BreakStatement	break ;	4378:5:124771:124776	4219399	1	True				
ANR	4219656	ExpressionStatement	"r_core_cmd0 ( core , "".dr*"" )"	4380:4:124788:124814	4219399	3	True				
ANR	4219657	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		4219399	0					
ANR	4219658	Callee	r_core_cmd0		4219399	0					
ANR	4219659	Identifier	r_core_cmd0		4219399	0					
ANR	4219660	ArgumentList	core		4219399	1					
ANR	4219661	Argument	core		4219399	0					
ANR	4219662	Identifier	core		4219399	0					
ANR	4219663	Argument	""".dr*"""		4219399	1					
ANR	4219664	PrimaryExpression	""".dr*"""		4219399	0					
ANR	4219665	ExpressionStatement	n ++	4381:4:124820:124823	4219399	4	True				
ANR	4219666	PostIncDecOperationExpression	n ++		4219399	0					
ANR	4219667	Identifier	n		4219399	0					
ANR	4219668	IncDec	++		4219399	1					
ANR	4219669	Condition	"! r_num_conditional ( core -> num , input + 3 )"	4382:12:124837:124877	4219399	1	True				
ANR	4219670	UnaryOperationExpression	"! r_num_conditional ( core -> num , input + 3 )"		4219399	0					
ANR	4219671	UnaryOperator	!		4219399	0					
ANR	4219672	CallExpression	"r_num_conditional ( core -> num , input + 3 )"		4219399	1					
ANR	4219673	Callee	r_num_conditional		4219399	0					
ANR	4219674	Identifier	r_num_conditional		4219399	0					
ANR	4219675	ArgumentList	core -> num		4219399	1					
ANR	4219676	Argument	core -> num		4219399	0					
ANR	4219677	PtrMemberAccess	core -> num		4219399	0					
ANR	4219678	Identifier	core		4219399	0					
ANR	4219679	Identifier	num		4219399	1					
ANR	4219680	Argument	input + 3		4219399	1					
ANR	4219681	AdditiveExpression	input + 3		4219399	0		+			
ANR	4219682	Identifier	input		4219399	0					
ANR	4219683	PrimaryExpression	3		4219399	1					
ANR	4219684	ExpressionStatement	r_cons_break_pop ( )	4383:3:124884:124903	4219399	3	True				
ANR	4219685	CallExpression	r_cons_break_pop ( )		4219399	0					
ANR	4219686	Callee	r_cons_break_pop		4219399	0					
ANR	4219687	Identifier	r_cons_break_pop		4219399	0					
ANR	4219688	ArgumentList			4219399	1					
ANR	4219689	ExpressionStatement	"eprintf ( ""Stopped after %d instructions\\n"" , n )"	4384:3:124908:124954	4219399	4	True				
ANR	4219690	CallExpression	"eprintf ( ""Stopped after %d instructions\\n"" , n )"		4219399	0					
ANR	4219691	Callee	eprintf		4219399	0					
ANR	4219692	Identifier	eprintf		4219399	0					
ANR	4219693	ArgumentList	"""Stopped after %d instructions\\n"""		4219399	1					
ANR	4219694	Argument	"""Stopped after %d instructions\\n"""		4219399	0					
ANR	4219695	PrimaryExpression	"""Stopped after %d instructions\\n"""		4219399	0					
ANR	4219696	Argument	n		4219399	1					
ANR	4219697	Identifier	n		4219399	0					
ANR	4219698	ElseStatement	else		4219399	0					
ANR	4219699	CompoundStatement		48:9:1204:1204	4219399	0					
ANR	4219700	ExpressionStatement	"eprintf ( ""3 Missing argument\\n"" )"	4386:3:124970:125002	4219399	0	True				
ANR	4219701	CallExpression	"eprintf ( ""3 Missing argument\\n"" )"		4219399	0					
ANR	4219702	Callee	eprintf		4219399	0					
ANR	4219703	Identifier	eprintf		4219399	0					
ANR	4219704	ArgumentList	"""3 Missing argument\\n"""		4219399	1					
ANR	4219705	Argument	"""3 Missing argument\\n"""		4219399	0					
ANR	4219706	PrimaryExpression	"""3 Missing argument\\n"""		4219399	0					
ANR	4219707	BreakStatement	break ;	4388:2:125010:125015	4219399	6	True				
ANR	4219708	Label	case 'f' :	4389:1:125018:125026	4219399	7	True				
ANR	4219709	ExpressionStatement	step_until_eof ( core )	4390:2:125039:125060	4219399	8	True				
ANR	4219710	CallExpression	step_until_eof ( core )		4219399	0					
ANR	4219711	Callee	step_until_eof		4219399	0					
ANR	4219712	Identifier	step_until_eof		4219399	0					
ANR	4219713	ArgumentList	core		4219399	1					
ANR	4219714	Argument	core		4219399	0					
ANR	4219715	Identifier	core		4219399	0					
ANR	4219716	BreakStatement	break ;	4391:2:125064:125069	4219399	9	True				
ANR	4219717	Label	case 'u' :	4392:1:125072:125080	4219399	10	True				
ANR	4219718	SwitchStatement	switch ( input [ 2 ] )		4219399	11					
ANR	4219719	Condition	input [ 2 ]	4393:10:125101:125108	4219399	0	True				
ANR	4219720	ArrayIndexing	input [ 2 ]		4219399	0					
ANR	4219721	Identifier	input		4219399	0					
ANR	4219722	PrimaryExpression	2		4219399	1					
ANR	4219723	CompoundStatement		56:20:1350:1350	4219399	1					
ANR	4219724	Label	case 'f' :	4394:2:125115:125123	4219399	0	True				
ANR	4219725	ExpressionStatement	"step_until_flag ( core , input + 3 )"	4395:3:125136:125169	4219399	1	True				
ANR	4219726	CallExpression	"step_until_flag ( core , input + 3 )"		4219399	0					
ANR	4219727	Callee	step_until_flag		4219399	0					
ANR	4219728	Identifier	step_until_flag		4219399	0					
ANR	4219729	ArgumentList	core		4219399	1					
ANR	4219730	Argument	core		4219399	0					
ANR	4219731	Identifier	core		4219399	0					
ANR	4219732	Argument	input + 3		4219399	1					
ANR	4219733	AdditiveExpression	input + 3		4219399	0		+			
ANR	4219734	Identifier	input		4219399	0					
ANR	4219735	PrimaryExpression	3		4219399	1					
ANR	4219736	BreakStatement	break ;	4396:3:125174:125179	4219399	2	True				
ANR	4219737	Label	case 'i' :	4397:2:125183:125191	4219399	3	True				
ANR	4219738	IfStatement	if ( input [ 3 ] == 'r' )		4219399	4					
ANR	4219739	Condition	input [ 3 ] == 'r'	4398:7:125208:125222	4219399	0	True				
ANR	4219740	EqualityExpression	input [ 3 ] == 'r'		4219399	0		==			
ANR	4219741	ArrayIndexing	input [ 3 ]		4219399	0					
ANR	4219742	Identifier	input		4219399	0					
ANR	4219743	PrimaryExpression	3		4219399	1					
ANR	4219744	PrimaryExpression	'r'		4219399	1					
ANR	4219745	CompoundStatement		61:24:1464:1464	4219399	1					
ANR	4219746	ExpressionStatement	"step_until_inst ( core , input + 4 , true )"	4399:4:125231:125270	4219399	0	True				
ANR	4219747	CallExpression	"step_until_inst ( core , input + 4 , true )"		4219399	0					
ANR	4219748	Callee	step_until_inst		4219399	0					
ANR	4219749	Identifier	step_until_inst		4219399	0					
ANR	4219750	ArgumentList	core		4219399	1					
ANR	4219751	Argument	core		4219399	0					
ANR	4219752	Identifier	core		4219399	0					
ANR	4219753	Argument	input + 4		4219399	1					
ANR	4219754	AdditiveExpression	input + 4		4219399	0		+			
ANR	4219755	Identifier	input		4219399	0					
ANR	4219756	PrimaryExpression	4		4219399	1					
ANR	4219757	Argument	true		4219399	2					
ANR	4219758	Identifier	true		4219399	0					
ANR	4219759	ElseStatement	else		4219399	0					
ANR	4219760	CompoundStatement		64:8:1524:1524	4219399	0					
ANR	4219761	ExpressionStatement	"step_until_inst ( core , input + 3 , false )"	4402:4:125291:125331	4219399	0	True				
ANR	4219762	CallExpression	"step_until_inst ( core , input + 3 , false )"		4219399	0					
ANR	4219763	Callee	step_until_inst		4219399	0					
ANR	4219764	Identifier	step_until_inst		4219399	0					
ANR	4219765	ArgumentList	core		4219399	1					
ANR	4219766	Argument	core		4219399	0					
ANR	4219767	Identifier	core		4219399	0					
ANR	4219768	Argument	input + 3		4219399	1					
ANR	4219769	AdditiveExpression	input + 3		4219399	0		+			
ANR	4219770	Identifier	input		4219399	0					
ANR	4219771	PrimaryExpression	3		4219399	1					
ANR	4219772	Argument	false		4219399	2					
ANR	4219773	Identifier	false		4219399	0					
ANR	4219774	BreakStatement	break ;	4404:3:125341:125346	4219399	5	True				
ANR	4219775	Label	case 'e' :	4405:2:125350:125358	4219399	6	True				
ANR	4219776	ExpressionStatement	"step_until_esil ( core , input + 3 )"	4406:3:125371:125404	4219399	7	True				
ANR	4219777	CallExpression	"step_until_esil ( core , input + 3 )"		4219399	0					
ANR	4219778	Callee	step_until_esil		4219399	0					
ANR	4219779	Identifier	step_until_esil		4219399	0					
ANR	4219780	ArgumentList	core		4219399	1					
ANR	4219781	Argument	core		4219399	0					
ANR	4219782	Identifier	core		4219399	0					
ANR	4219783	Argument	input + 3		4219399	1					
ANR	4219784	AdditiveExpression	input + 3		4219399	0		+			
ANR	4219785	Identifier	input		4219399	0					
ANR	4219786	PrimaryExpression	3		4219399	1					
ANR	4219787	BreakStatement	break ;	4407:3:125409:125414	4219399	8	True				
ANR	4219788	Label	case 'o' :	4408:2:125418:125426	4219399	9	True				
ANR	4219789	ExpressionStatement	"step_until_optype ( core , input + 3 )"	4409:3:125439:125474	4219399	10	True				
ANR	4219790	CallExpression	"step_until_optype ( core , input + 3 )"		4219399	0					
ANR	4219791	Callee	step_until_optype		4219399	0					
ANR	4219792	Identifier	step_until_optype		4219399	0					
ANR	4219793	ArgumentList	core		4219399	1					
ANR	4219794	Argument	core		4219399	0					
ANR	4219795	Identifier	core		4219399	0					
ANR	4219796	Argument	input + 3		4219399	1					
ANR	4219797	AdditiveExpression	input + 3		4219399	0		+			
ANR	4219798	Identifier	input		4219399	0					
ANR	4219799	PrimaryExpression	3		4219399	1					
ANR	4219800	BreakStatement	break ;	4410:3:125479:125484	4219399	11	True				
ANR	4219801	Label	case ' ' :	4411:2:125488:125496	4219399	12	True				
ANR	4219802	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4412:3:125518:125557	4219399	13	True				
ANR	4219803	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4219399	0					
ANR	4219804	Callee	r_reg_arena_swap		4219399	0					
ANR	4219805	Identifier	r_reg_arena_swap		4219399	0					
ANR	4219806	ArgumentList	core -> dbg -> reg		4219399	1					
ANR	4219807	Argument	core -> dbg -> reg		4219399	0					
ANR	4219808	PtrMemberAccess	core -> dbg -> reg		4219399	0					
ANR	4219809	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219810	Identifier	core		4219399	0					
ANR	4219811	Identifier	dbg		4219399	1					
ANR	4219812	Identifier	reg		4219399	1					
ANR	4219813	Argument	true		4219399	1					
ANR	4219814	Identifier	true		4219399	0					
ANR	4219815	ExpressionStatement	"step_until ( core , r_num_math ( core -> num , input + 2 ) )"	4413:3:125562:125614	4219399	14	True				
ANR	4219816	CallExpression	"step_until ( core , r_num_math ( core -> num , input + 2 ) )"		4219399	0					
ANR	4219817	Callee	step_until		4219399	0					
ANR	4219818	Identifier	step_until		4219399	0					
ANR	4219819	ArgumentList	core		4219399	1					
ANR	4219820	Argument	core		4219399	0					
ANR	4219821	Identifier	core		4219399	0					
ANR	4219822	Argument	"r_num_math ( core -> num , input + 2 )"		4219399	1					
ANR	4219823	CallExpression	"r_num_math ( core -> num , input + 2 )"		4219399	0					
ANR	4219824	Callee	r_num_math		4219399	0					
ANR	4219825	Identifier	r_num_math		4219399	0					
ANR	4219826	ArgumentList	core -> num		4219399	1					
ANR	4219827	Argument	core -> num		4219399	0					
ANR	4219828	PtrMemberAccess	core -> num		4219399	0					
ANR	4219829	Identifier	core		4219399	0					
ANR	4219830	Identifier	num		4219399	1					
ANR	4219831	Argument	input + 2		4219399	1					
ANR	4219832	AdditiveExpression	input + 2		4219399	0		+			
ANR	4219833	Identifier	input		4219399	0					
ANR	4219834	PrimaryExpression	2		4219399	1					
ANR	4219835	BreakStatement	break ;	4414:3:125642:125647	4219399	15	True				
ANR	4219836	Label	default :	4415:2:125651:125658	4219399	16	True				
ANR	4219837	Identifier	default		4219399	0					
ANR	4219838	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dsu )"	4416:3:125663:125699	4219399	17	True				
ANR	4219839	CallExpression	"r_core_cmd_help ( core , help_msg_dsu )"		4219399	0					
ANR	4219840	Callee	r_core_cmd_help		4219399	0					
ANR	4219841	Identifier	r_core_cmd_help		4219399	0					
ANR	4219842	ArgumentList	core		4219399	1					
ANR	4219843	Argument	core		4219399	0					
ANR	4219844	Identifier	core		4219399	0					
ANR	4219845	Argument	help_msg_dsu		4219399	1					
ANR	4219846	Identifier	help_msg_dsu		4219399	0					
ANR	4219847	ReturnStatement	return 0 ;	4417:3:125704:125712	4219399	18	True				
ANR	4219848	PrimaryExpression	0		4219399	0					
ANR	4219849	BreakStatement	break ;	4419:2:125720:125725	4219399	12	True				
ANR	4219850	Label	case 'p' :	4420:1:125728:125736	4219399	13	True				
ANR	4219851	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4421:2:125749:125788	4219399	14	True				
ANR	4219852	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4219399	0					
ANR	4219853	Callee	r_reg_arena_swap		4219399	0					
ANR	4219854	Identifier	r_reg_arena_swap		4219399	0					
ANR	4219855	ArgumentList	core -> dbg -> reg		4219399	1					
ANR	4219856	Argument	core -> dbg -> reg		4219399	0					
ANR	4219857	PtrMemberAccess	core -> dbg -> reg		4219399	0					
ANR	4219858	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219859	Identifier	core		4219399	0					
ANR	4219860	Identifier	dbg		4219399	1					
ANR	4219861	Identifier	reg		4219399	1					
ANR	4219862	Argument	true		4219399	1					
ANR	4219863	Identifier	true		4219399	0					
ANR	4219864	ForStatement	for ( i = 0 ; i < times ; i ++ )		4219399	15					
ANR	4219865	ForInit	i = 0 ;	4422:7:125797:125802	4219399	0	True				
ANR	4219866	AssignmentExpression	i = 0		4219399	0		=			
ANR	4219867	Identifier	i		4219399	0					
ANR	4219868	PrimaryExpression	0		4219399	1					
ANR	4219869	Condition	i < times	4422:14:125804:125812	4219399	1	True				
ANR	4219870	RelationalExpression	i < times		4219399	0		<			
ANR	4219871	Identifier	i		4219399	0					
ANR	4219872	Identifier	times		4219399	1					
ANR	4219873	PostIncDecOperationExpression	i ++	4422:25:125815:125817	4219399	2	True				
ANR	4219874	Identifier	i		4219399	0					
ANR	4219875	IncDec	++		4219399	1					
ANR	4219876	CompoundStatement		88:3:2094:2105	4219399	3					
ANR	4219877	IdentifierDeclStatement	ut8 buf [ 64 ] ;	4423:3:125825:125836	4219399	0	True				
ANR	4219878	IdentifierDecl	buf [ 64 ]		4219399	0					
ANR	4219879	IdentifierDeclType	ut8 [ 64 ]		4219399	0					
ANR	4219880	Identifier	buf		4219399	1					
ANR	4219881	PrimaryExpression	64		4219399	2					
ANR	4219882	IdentifierDeclStatement	ut64 addr ;	4424:3:125841:125850	4219399	1	True				
ANR	4219883	IdentifierDecl	addr		4219399	0					
ANR	4219884	IdentifierDeclType	ut64		4219399	0					
ANR	4219885	Identifier	addr		4219399	1					
ANR	4219886	IdentifierDeclStatement	RAnalOp aop ;	4425:3:125855:125866	4219399	2	True				
ANR	4219887	IdentifierDecl	aop		4219399	0					
ANR	4219888	IdentifierDeclType	RAnalOp		4219399	0					
ANR	4219889	Identifier	aop		4219399	1					
ANR	4219890	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4426:3:125871:125922	4219399	3	True				
ANR	4219891	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4219399	0					
ANR	4219892	Callee	r_debug_reg_sync		4219399	0					
ANR	4219893	Identifier	r_debug_reg_sync		4219399	0					
ANR	4219894	ArgumentList	core -> dbg		4219399	1					
ANR	4219895	Argument	core -> dbg		4219399	0					
ANR	4219896	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219897	Identifier	core		4219399	0					
ANR	4219898	Identifier	dbg		4219399	1					
ANR	4219899	Argument	R_REG_TYPE_GPR		4219399	1					
ANR	4219900	Identifier	R_REG_TYPE_GPR		4219399	0					
ANR	4219901	Argument	false		4219399	2					
ANR	4219902	Identifier	false		4219399	0					
ANR	4219903	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	4427:3:125927:125967	4219399	4	True				
ANR	4219904	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	0		=			
ANR	4219905	Identifier	addr		4219399	0					
ANR	4219906	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	1					
ANR	4219907	Callee	r_debug_reg_get		4219399	0					
ANR	4219908	Identifier	r_debug_reg_get		4219399	0					
ANR	4219909	ArgumentList	core -> dbg		4219399	1					
ANR	4219910	Argument	core -> dbg		4219399	0					
ANR	4219911	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4219912	Identifier	core		4219399	0					
ANR	4219913	Identifier	dbg		4219399	1					
ANR	4219914	Argument	"""PC"""		4219399	1					
ANR	4219915	PrimaryExpression	"""PC"""		4219399	0					
ANR	4219916	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	4428:3:125972:126020	4219399	5	True				
ANR	4219917	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		4219399	0					
ANR	4219918	Callee	r_io_read_at		4219399	0					
ANR	4219919	Identifier	r_io_read_at		4219399	0					
ANR	4219920	ArgumentList	core -> io		4219399	1					
ANR	4219921	Argument	core -> io		4219399	0					
ANR	4219922	PtrMemberAccess	core -> io		4219399	0					
ANR	4219923	Identifier	core		4219399	0					
ANR	4219924	Identifier	io		4219399	1					
ANR	4219925	Argument	addr		4219399	1					
ANR	4219926	Identifier	addr		4219399	0					
ANR	4219927	Argument	buf		4219399	2					
ANR	4219928	Identifier	buf		4219399	0					
ANR	4219929	Argument	sizeof ( buf )		4219399	3					
ANR	4219930	SizeofExpression	sizeof ( buf )		4219399	0					
ANR	4219931	Sizeof	sizeof		4219399	0					
ANR	4219932	SizeofOperand	buf		4219399	1					
ANR	4219933	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	4429:3:126025:126100	4219399	6	True				
ANR	4219934	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		4219399	0					
ANR	4219935	Callee	r_anal_op		4219399	0					
ANR	4219936	Identifier	r_anal_op		4219399	0					
ANR	4219937	ArgumentList	core -> anal		4219399	1					
ANR	4219938	Argument	core -> anal		4219399	0					
ANR	4219939	PtrMemberAccess	core -> anal		4219399	0					
ANR	4219940	Identifier	core		4219399	0					
ANR	4219941	Identifier	anal		4219399	1					
ANR	4219942	Argument	& aop		4219399	1					
ANR	4219943	UnaryOperationExpression	& aop		4219399	0					
ANR	4219944	UnaryOperator	&		4219399	0					
ANR	4219945	Identifier	aop		4219399	1					
ANR	4219946	Argument	addr		4219399	2					
ANR	4219947	Identifier	addr		4219399	0					
ANR	4219948	Argument	buf		4219399	3					
ANR	4219949	Identifier	buf		4219399	0					
ANR	4219950	Argument	sizeof ( buf )		4219399	4					
ANR	4219951	SizeofExpression	sizeof ( buf )		4219399	0					
ANR	4219952	Sizeof	sizeof		4219399	0					
ANR	4219953	SizeofOperand	buf		4219399	1					
ANR	4219954	Argument	R_ANAL_OP_MASK_BASIC		4219399	5					
ANR	4219955	Identifier	R_ANAL_OP_MASK_BASIC		4219399	0					
ANR	4219956	IfStatement	if ( aop . type == R_ANAL_OP_TYPE_CALL )		4219399	7					
ANR	4219957	Condition	aop . type == R_ANAL_OP_TYPE_CALL	4430:7:126109:126139	4219399	0	True				
ANR	4219958	EqualityExpression	aop . type == R_ANAL_OP_TYPE_CALL		4219399	0		==			
ANR	4219959	MemberAccess	aop . type		4219399	0					
ANR	4219960	Identifier	aop		4219399	0					
ANR	4219961	Identifier	type		4219399	1					
ANR	4219962	Identifier	R_ANAL_OP_TYPE_CALL		4219399	1					
ANR	4219963	CompoundStatement		95:4:2437:2494	4219399	1					
ANR	4219964	IdentifierDeclStatement	RBinObject * o = r_bin_cur_object ( core -> bin ) ;	4431:4:126148:126192	4219399	0	True				
ANR	4219965	IdentifierDecl	* o = r_bin_cur_object ( core -> bin )		4219399	0					
ANR	4219966	IdentifierDeclType	RBinObject *		4219399	0					
ANR	4219967	Identifier	o		4219399	1					
ANR	4219968	AssignmentExpression	* o = r_bin_cur_object ( core -> bin )		4219399	2		=			
ANR	4219969	Identifier	o		4219399	0					
ANR	4219970	CallExpression	r_bin_cur_object ( core -> bin )		4219399	1					
ANR	4219971	Callee	r_bin_cur_object		4219399	0					
ANR	4219972	Identifier	r_bin_cur_object		4219399	0					
ANR	4219973	ArgumentList	core -> bin		4219399	1					
ANR	4219974	Argument	core -> bin		4219399	0					
ANR	4219975	PtrMemberAccess	core -> bin		4219399	0					
ANR	4219976	Identifier	core		4219399	0					
ANR	4219977	Identifier	bin		4219399	1					
ANR	4219978	IdentifierDeclStatement	"RBinSection * s = r_bin_get_section_at ( o , aop . jump , true ) ;"	4432:4:126198:126255	4219399	1	True				
ANR	4219979	IdentifierDecl	"* s = r_bin_get_section_at ( o , aop . jump , true )"		4219399	0					
ANR	4219980	IdentifierDeclType	RBinSection *		4219399	0					
ANR	4219981	Identifier	s		4219399	1					
ANR	4219982	AssignmentExpression	"* s = r_bin_get_section_at ( o , aop . jump , true )"		4219399	2		=			
ANR	4219983	Identifier	s		4219399	0					
ANR	4219984	CallExpression	"r_bin_get_section_at ( o , aop . jump , true )"		4219399	1					
ANR	4219985	Callee	r_bin_get_section_at		4219399	0					
ANR	4219986	Identifier	r_bin_get_section_at		4219399	0					
ANR	4219987	ArgumentList	o		4219399	1					
ANR	4219988	Argument	o		4219399	0					
ANR	4219989	Identifier	o		4219399	0					
ANR	4219990	Argument	aop . jump		4219399	1					
ANR	4219991	MemberAccess	aop . jump		4219399	0					
ANR	4219992	Identifier	aop		4219399	0					
ANR	4219993	Identifier	jump		4219399	1					
ANR	4219994	Argument	true		4219399	2					
ANR	4219995	Identifier	true		4219399	0					
ANR	4219996	IfStatement	if ( ! s )		4219399	2					
ANR	4219997	Condition	! s	4433:8:126265:126266	4219399	0	True				
ANR	4219998	UnaryOperationExpression	! s		4219399	0					
ANR	4219999	UnaryOperator	!		4219399	0					
ANR	4220000	Identifier	s		4219399	1					
ANR	4220001	CompoundStatement		96:12:2508:2508	4219399	1					
ANR	4220002	ExpressionStatement	"r_debug_step_over ( core -> dbg , times )"	4434:5:126276:126312	4219399	0	True				
ANR	4220003	CallExpression	"r_debug_step_over ( core -> dbg , times )"		4219399	0					
ANR	4220004	Callee	r_debug_step_over		4219399	0					
ANR	4220005	Identifier	r_debug_step_over		4219399	0					
ANR	4220006	ArgumentList	core -> dbg		4219399	1					
ANR	4220007	Argument	core -> dbg		4219399	0					
ANR	4220008	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220009	Identifier	core		4219399	0					
ANR	4220010	Identifier	dbg		4219399	1					
ANR	4220011	Argument	times		4219399	1					
ANR	4220012	Identifier	times		4219399	0					
ANR	4220013	ContinueStatement	continue ;	4435:5:126319:126327	4219399	1	True				
ANR	4220014	ExpressionStatement	"r_debug_step ( core -> dbg , 1 )"	4438:3:126343:126370	4219399	8	True				
ANR	4220015	CallExpression	"r_debug_step ( core -> dbg , 1 )"		4219399	0					
ANR	4220016	Callee	r_debug_step		4219399	0					
ANR	4220017	Identifier	r_debug_step		4219399	0					
ANR	4220018	ArgumentList	core -> dbg		4219399	1					
ANR	4220019	Argument	core -> dbg		4219399	0					
ANR	4220020	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220021	Identifier	core		4219399	0					
ANR	4220022	Identifier	dbg		4219399	1					
ANR	4220023	Argument	1		4219399	1					
ANR	4220024	PrimaryExpression	1		4219399	0					
ANR	4220025	BreakStatement	break ;	4440:2:126378:126383	4219399	16	True				
ANR	4220026	Label	case 's' :	4441:1:126386:126394	4219399	17	True				
ANR	4220027	CompoundStatement		108:3:2725:2781	4219399	18					
ANR	4220028	IdentifierDeclStatement	char delb [ 128 ] = R_EMPTY ;	4443:3:126412:126436	4219399	0	True				
ANR	4220029	IdentifierDecl	delb [ 128 ] = R_EMPTY		4219399	0					
ANR	4220030	IdentifierDeclType	char [ 128 ]		4219399	0					
ANR	4220031	Identifier	delb		4219399	1					
ANR	4220032	PrimaryExpression	128		4219399	2					
ANR	4220033	AssignmentExpression	delb [ 128 ] = R_EMPTY		4219399	3		=			
ANR	4220034	Identifier	R_EMPTY		4219399	0					
ANR	4220035	Identifier	R_EMPTY		4219399	1					
ANR	4220036	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	4444:3:126441:126481	4219399	1	True				
ANR	4220037	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	0		=			
ANR	4220038	Identifier	addr		4219399	0					
ANR	4220039	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	1					
ANR	4220040	Callee	r_debug_reg_get		4219399	0					
ANR	4220041	Identifier	r_debug_reg_get		4219399	0					
ANR	4220042	ArgumentList	core -> dbg		4219399	1					
ANR	4220043	Argument	core -> dbg		4219399	0					
ANR	4220044	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220045	Identifier	core		4219399	0					
ANR	4220046	Identifier	dbg		4219399	1					
ANR	4220047	Argument	"""PC"""		4219399	1					
ANR	4220048	PrimaryExpression	"""PC"""		4219399	0					
ANR	4220049	IdentifierDeclStatement	"RBreakpointItem * bpi = r_bp_get_at ( core -> dbg -> bp , addr ) ;"	4445:3:126486:126542	4219399	2	True				
ANR	4220050	IdentifierDecl	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4219399	0					
ANR	4220051	IdentifierDeclType	RBreakpointItem *		4219399	0					
ANR	4220052	Identifier	bpi		4219399	1					
ANR	4220053	AssignmentExpression	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4219399	2		=			
ANR	4220054	Identifier	bpi		4219399	0					
ANR	4220055	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4219399	1					
ANR	4220056	Callee	r_bp_get_at		4219399	0					
ANR	4220057	Identifier	r_bp_get_at		4219399	0					
ANR	4220058	ArgumentList	core -> dbg -> bp		4219399	1					
ANR	4220059	Argument	core -> dbg -> bp		4219399	0					
ANR	4220060	PtrMemberAccess	core -> dbg -> bp		4219399	0					
ANR	4220061	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220062	Identifier	core		4219399	0					
ANR	4220063	Identifier	dbg		4219399	1					
ANR	4220064	Identifier	bp		4219399	1					
ANR	4220065	Argument	addr		4219399	1					
ANR	4220066	Identifier	addr		4219399	0					
ANR	4220067	Statement	sprintf	4446:3:126547:126553	4219399	3	True				
ANR	4220068	Statement	(	4446:10:126554:126554	4219399	4	True				
ANR	4220069	Statement	delb	4446:11:126555:126558	4219399	5	True				
ANR	4220070	Statement	","	4446:15:126559:126559	4219399	6	True				
ANR	4220071	Statement	"""db 0x%"""	4446:17:126561:126568	4219399	7	True				
ANR	4220072	Statement	PFMT64x	4446:25:126569:126575	4219399	8	True				
ANR	4220073	Statement	""""""	4446:32:126576:126577	4219399	9	True				
ANR	4220074	Statement	","	4446:34:126578:126578	4219399	10	True				
ANR	4220075	Statement	addr	4446:36:126580:126583	4219399	11	True				
ANR	4220076	Statement	)	4446:40:126584:126584	4219399	12	True				
ANR	4220077	ExpressionStatement		4446:41:126585:126585	4219399	13	True				
ANR	4220078	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4447:3:126590:126629	4219399	14	True				
ANR	4220079	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4219399	0					
ANR	4220080	Callee	r_reg_arena_swap		4219399	0					
ANR	4220081	Identifier	r_reg_arena_swap		4219399	0					
ANR	4220082	ArgumentList	core -> dbg -> reg		4219399	1					
ANR	4220083	Argument	core -> dbg -> reg		4219399	0					
ANR	4220084	PtrMemberAccess	core -> dbg -> reg		4219399	0					
ANR	4220085	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220086	Identifier	core		4219399	0					
ANR	4220087	Identifier	dbg		4219399	1					
ANR	4220088	Identifier	reg		4219399	1					
ANR	4220089	Argument	true		4219399	1					
ANR	4220090	Identifier	true		4219399	0					
ANR	4220091	ForStatement	for ( i = 0 ; i < times ; i ++ )		4219399	15					
ANR	4220092	ForInit	i = 0 ;	4448:8:126639:126644	4219399	0	True				
ANR	4220093	AssignmentExpression	i = 0		4219399	0		=			
ANR	4220094	Identifier	i		4219399	0					
ANR	4220095	PrimaryExpression	0		4219399	1					
ANR	4220096	Condition	i < times	4448:15:126646:126654	4219399	1	True				
ANR	4220097	RelationalExpression	i < times		4219399	0		<			
ANR	4220098	Identifier	i		4219399	0					
ANR	4220099	Identifier	times		4219399	1					
ANR	4220100	PostIncDecOperationExpression	i ++	4448:26:126657:126659	4219399	2	True				
ANR	4220101	Identifier	i		4219399	0					
ANR	4220102	IncDec	++		4219399	1					
ANR	4220103	CompoundStatement		111:31:2901:2901	4219399	3					
ANR	4220104	ExpressionStatement	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"	4449:4:126668:126719	4219399	0	True				
ANR	4220105	CallExpression	"r_debug_reg_sync ( core -> dbg , R_REG_TYPE_GPR , false )"		4219399	0					
ANR	4220106	Callee	r_debug_reg_sync		4219399	0					
ANR	4220107	Identifier	r_debug_reg_sync		4219399	0					
ANR	4220108	ArgumentList	core -> dbg		4219399	1					
ANR	4220109	Argument	core -> dbg		4219399	0					
ANR	4220110	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220111	Identifier	core		4219399	0					
ANR	4220112	Identifier	dbg		4219399	1					
ANR	4220113	Argument	R_REG_TYPE_GPR		4219399	1					
ANR	4220114	Identifier	R_REG_TYPE_GPR		4219399	0					
ANR	4220115	Argument	false		4219399	2					
ANR	4220116	Identifier	false		4219399	0					
ANR	4220117	ExpressionStatement	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"	4450:4:126725:126773	4219399	1	True				
ANR	4220118	CallExpression	"r_io_read_at ( core -> io , addr , buf , sizeof ( buf ) )"		4219399	0					
ANR	4220119	Callee	r_io_read_at		4219399	0					
ANR	4220120	Identifier	r_io_read_at		4219399	0					
ANR	4220121	ArgumentList	core -> io		4219399	1					
ANR	4220122	Argument	core -> io		4219399	0					
ANR	4220123	PtrMemberAccess	core -> io		4219399	0					
ANR	4220124	Identifier	core		4219399	0					
ANR	4220125	Identifier	io		4219399	1					
ANR	4220126	Argument	addr		4219399	1					
ANR	4220127	Identifier	addr		4219399	0					
ANR	4220128	Argument	buf		4219399	2					
ANR	4220129	Identifier	buf		4219399	0					
ANR	4220130	Argument	sizeof ( buf )		4219399	3					
ANR	4220131	SizeofExpression	sizeof ( buf )		4219399	0					
ANR	4220132	Sizeof	sizeof		4219399	0					
ANR	4220133	SizeofOperand	buf		4219399	1					
ANR	4220134	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"	4451:4:126779:126854	4219399	2	True				
ANR	4220135	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf , sizeof ( buf ) , R_ANAL_OP_MASK_BASIC )"		4219399	0					
ANR	4220136	Callee	r_anal_op		4219399	0					
ANR	4220137	Identifier	r_anal_op		4219399	0					
ANR	4220138	ArgumentList	core -> anal		4219399	1					
ANR	4220139	Argument	core -> anal		4219399	0					
ANR	4220140	PtrMemberAccess	core -> anal		4219399	0					
ANR	4220141	Identifier	core		4219399	0					
ANR	4220142	Identifier	anal		4219399	1					
ANR	4220143	Argument	& aop		4219399	1					
ANR	4220144	UnaryOperationExpression	& aop		4219399	0					
ANR	4220145	UnaryOperator	&		4219399	0					
ANR	4220146	Identifier	aop		4219399	1					
ANR	4220147	Argument	addr		4219399	2					
ANR	4220148	Identifier	addr		4219399	0					
ANR	4220149	Argument	buf		4219399	3					
ANR	4220150	Identifier	buf		4219399	0					
ANR	4220151	Argument	sizeof ( buf )		4219399	4					
ANR	4220152	SizeofExpression	sizeof ( buf )		4219399	0					
ANR	4220153	Sizeof	sizeof		4219399	0					
ANR	4220154	SizeofOperand	buf		4219399	1					
ANR	4220155	Argument	R_ANAL_OP_MASK_BASIC		4219399	5					
ANR	4220156	Identifier	R_ANAL_OP_MASK_BASIC		4219399	0					
ANR	4220157	IfStatement	if ( aop . jump != UT64_MAX && aop . fail != UT64_MAX )		4219399	3					
ANR	4220158	Condition	aop . jump != UT64_MAX && aop . fail != UT64_MAX	4453:8:126870:126913	4219399	0	True				
ANR	4220159	AndExpression	aop . jump != UT64_MAX && aop . fail != UT64_MAX		4219399	0		&&			
ANR	4220160	EqualityExpression	aop . jump != UT64_MAX		4219399	0		!=			
ANR	4220161	MemberAccess	aop . jump		4219399	0					
ANR	4220162	Identifier	aop		4219399	0					
ANR	4220163	Identifier	jump		4219399	1					
ANR	4220164	Identifier	UT64_MAX		4219399	1					
ANR	4220165	EqualityExpression	aop . fail != UT64_MAX		4219399	1		!=			
ANR	4220166	MemberAccess	aop . fail		4219399	0					
ANR	4220167	Identifier	aop		4219399	0					
ANR	4220168	Identifier	fail		4219399	1					
ANR	4220169	Identifier	UT64_MAX		4219399	1					
ANR	4220170	CompoundStatement		116:54:3155:3155	4219399	1					
ANR	4220171	ExpressionStatement	"eprintf ( ""Don't know how to skip this instruction\\n"" )"	4454:5:126923:126976	4219399	0	True				
ANR	4220172	CallExpression	"eprintf ( ""Don't know how to skip this instruction\\n"" )"		4219399	0					
ANR	4220173	Callee	eprintf		4219399	0					
ANR	4220174	Identifier	eprintf		4219399	0					
ANR	4220175	ArgumentList	"""Don't know how to skip this instruction\\n"""		4219399	1					
ANR	4220176	Argument	"""Don't know how to skip this instruction\\n"""		4219399	0					
ANR	4220177	PrimaryExpression	"""Don't know how to skip this instruction\\n"""		4219399	0					
ANR	4220178	IfStatement	if ( bpi )		4219399	1					
ANR	4220179	Condition	bpi	4455:9:126987:126989	4219399	0	True				
ANR	4220180	Identifier	bpi		4219399	0					
ANR	4220181	ExpressionStatement	"r_core_cmd0 ( core , delb )"	4455:14:126992:127016	4219399	1	True				
ANR	4220182	CallExpression	"r_core_cmd0 ( core , delb )"		4219399	0					
ANR	4220183	Callee	r_core_cmd0		4219399	0					
ANR	4220184	Identifier	r_core_cmd0		4219399	0					
ANR	4220185	ArgumentList	core		4219399	1					
ANR	4220186	Argument	core		4219399	0					
ANR	4220187	Identifier	core		4219399	0					
ANR	4220188	Argument	delb		4219399	1					
ANR	4220189	Identifier	delb		4219399	0					
ANR	4220190	BreakStatement	break ;	4456:5:127023:127028	4219399	2	True				
ANR	4220191	ExpressionStatement	addr += aop . size	4459:4:127047:127063	4219399	4	True				
ANR	4220192	AssignmentExpression	addr += aop . size		4219399	0		+=			
ANR	4220193	Identifier	addr		4219399	0					
ANR	4220194	MemberAccess	aop . size		4219399	1					
ANR	4220195	Identifier	aop		4219399	0					
ANR	4220196	Identifier	size		4219399	1					
ANR	4220197	ExpressionStatement	"r_debug_reg_set ( core -> dbg , ""PC"" , addr )"	4461:3:127073:127112	4219399	16	True				
ANR	4220198	CallExpression	"r_debug_reg_set ( core -> dbg , ""PC"" , addr )"		4219399	0					
ANR	4220199	Callee	r_debug_reg_set		4219399	0					
ANR	4220200	Identifier	r_debug_reg_set		4219399	0					
ANR	4220201	ArgumentList	core -> dbg		4219399	1					
ANR	4220202	Argument	core -> dbg		4219399	0					
ANR	4220203	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220204	Identifier	core		4219399	0					
ANR	4220205	Identifier	dbg		4219399	1					
ANR	4220206	Argument	"""PC"""		4219399	1					
ANR	4220207	PrimaryExpression	"""PC"""		4219399	0					
ANR	4220208	Argument	addr		4219399	2					
ANR	4220209	Identifier	addr		4219399	0					
ANR	4220210	ExpressionStatement	"r_reg_setv ( core -> anal -> reg , ""PC"" , addr )"	4462:3:127117:127157	4219399	17	True				
ANR	4220211	CallExpression	"r_reg_setv ( core -> anal -> reg , ""PC"" , addr )"		4219399	0					
ANR	4220212	Callee	r_reg_setv		4219399	0					
ANR	4220213	Identifier	r_reg_setv		4219399	0					
ANR	4220214	ArgumentList	core -> anal -> reg		4219399	1					
ANR	4220215	Argument	core -> anal -> reg		4219399	0					
ANR	4220216	PtrMemberAccess	core -> anal -> reg		4219399	0					
ANR	4220217	PtrMemberAccess	core -> anal		4219399	0					
ANR	4220218	Identifier	core		4219399	0					
ANR	4220219	Identifier	anal		4219399	1					
ANR	4220220	Identifier	reg		4219399	1					
ANR	4220221	Argument	"""PC"""		4219399	1					
ANR	4220222	PrimaryExpression	"""PC"""		4219399	0					
ANR	4220223	Argument	addr		4219399	2					
ANR	4220224	Identifier	addr		4219399	0					
ANR	4220225	ExpressionStatement	"r_core_cmd0 ( core , "".dr*"" )"	4463:3:127162:127188	4219399	18	True				
ANR	4220226	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		4219399	0					
ANR	4220227	Callee	r_core_cmd0		4219399	0					
ANR	4220228	Identifier	r_core_cmd0		4219399	0					
ANR	4220229	ArgumentList	core		4219399	1					
ANR	4220230	Argument	core		4219399	0					
ANR	4220231	Identifier	core		4219399	0					
ANR	4220232	Argument	""".dr*"""		4219399	1					
ANR	4220233	PrimaryExpression	""".dr*"""		4219399	0					
ANR	4220234	IfStatement	if ( bpi )		4219399	19					
ANR	4220235	Condition	bpi	4464:7:127197:127199	4219399	0	True				
ANR	4220236	Identifier	bpi		4219399	0					
ANR	4220237	CompoundStatement		127:12:3441:3441	4219399	1					
ANR	4220238	ExpressionStatement	"r_core_cmd0 ( core , delb )"	4465:4:127208:127232	4219399	0	True				
ANR	4220239	CallExpression	"r_core_cmd0 ( core , delb )"		4219399	0					
ANR	4220240	Callee	r_core_cmd0		4219399	0					
ANR	4220241	Identifier	r_core_cmd0		4219399	0					
ANR	4220242	ArgumentList	core		4219399	1					
ANR	4220243	Argument	core		4219399	0					
ANR	4220244	Identifier	core		4219399	0					
ANR	4220245	Argument	delb		4219399	1					
ANR	4220246	Identifier	delb		4219399	0					
ANR	4220247	BreakStatement	break ;	4467:3:127242:127247	4219399	20	True				
ANR	4220248	Label	case 'o' :	4469:1:127254:127262	4219399	19	True				
ANR	4220249	IfStatement	"if ( r_config_get_i ( core -> config , ""dbg.skipover"" ) )"		4219399	20					
ANR	4220250	Condition	"r_config_get_i ( core -> config , ""dbg.skipover"" )"	4470:6:127279:127323	4219399	0	True				
ANR	4220251	CallExpression	"r_config_get_i ( core -> config , ""dbg.skipover"" )"		4219399	0					
ANR	4220252	Callee	r_config_get_i		4219399	0					
ANR	4220253	Identifier	r_config_get_i		4219399	0					
ANR	4220254	ArgumentList	core -> config		4219399	1					
ANR	4220255	Argument	core -> config		4219399	0					
ANR	4220256	PtrMemberAccess	core -> config		4219399	0					
ANR	4220257	Identifier	core		4219399	0					
ANR	4220258	Identifier	config		4219399	1					
ANR	4220259	Argument	"""dbg.skipover"""		4219399	1					
ANR	4220260	PrimaryExpression	"""dbg.skipover"""		4219399	0					
ANR	4220261	CompoundStatement		133:53:3565:3565	4219399	1					
ANR	4220262	ExpressionStatement	"r_core_cmdf ( core , ""dss%s"" , input + 2 )"	4471:3:127331:127369	4219399	0	True				
ANR	4220263	CallExpression	"r_core_cmdf ( core , ""dss%s"" , input + 2 )"		4219399	0					
ANR	4220264	Callee	r_core_cmdf		4219399	0					
ANR	4220265	Identifier	r_core_cmdf		4219399	0					
ANR	4220266	ArgumentList	core		4219399	1					
ANR	4220267	Argument	core		4219399	0					
ANR	4220268	Identifier	core		4219399	0					
ANR	4220269	Argument	"""dss%s"""		4219399	1					
ANR	4220270	PrimaryExpression	"""dss%s"""		4219399	0					
ANR	4220271	Argument	input + 2		4219399	2					
ANR	4220272	AdditiveExpression	input + 2		4219399	0		+			
ANR	4220273	Identifier	input		4219399	0					
ANR	4220274	PrimaryExpression	2		4219399	1					
ANR	4220275	ElseStatement	else		4219399	0					
ANR	4220276	CompoundStatement		135:9:3619:3619	4219399	0					
ANR	4220277	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		4219399	0					
ANR	4220278	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	4473:7:127389:127430	4219399	0	True				
ANR	4220279	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		4219399	0					
ANR	4220280	Callee	r_config_get_i		4219399	0					
ANR	4220281	Identifier	r_config_get_i		4219399	0					
ANR	4220282	ArgumentList	core -> config		4219399	1					
ANR	4220283	Argument	core -> config		4219399	0					
ANR	4220284	PtrMemberAccess	core -> config		4219399	0					
ANR	4220285	Identifier	core		4219399	0					
ANR	4220286	Identifier	config		4219399	1					
ANR	4220287	Argument	"""cfg.debug"""		4219399	1					
ANR	4220288	PrimaryExpression	"""cfg.debug"""		4219399	0					
ANR	4220289	CompoundStatement		139:4:3754:3810	4219399	1					
ANR	4220290	IdentifierDeclStatement	char delb [ 128 ] = R_EMPTY ;	4474:4:127439:127463	4219399	0	True				
ANR	4220291	IdentifierDecl	delb [ 128 ] = R_EMPTY		4219399	0					
ANR	4220292	IdentifierDeclType	char [ 128 ]		4219399	0					
ANR	4220293	Identifier	delb		4219399	1					
ANR	4220294	PrimaryExpression	128		4219399	2					
ANR	4220295	AssignmentExpression	delb [ 128 ] = R_EMPTY		4219399	3		=			
ANR	4220296	Identifier	R_EMPTY		4219399	0					
ANR	4220297	Identifier	R_EMPTY		4219399	1					
ANR	4220298	ExpressionStatement	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"	4475:4:127469:127509	4219399	1	True				
ANR	4220299	AssignmentExpression	"addr = r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	0		=			
ANR	4220300	Identifier	addr		4219399	0					
ANR	4220301	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4219399	1					
ANR	4220302	Callee	r_debug_reg_get		4219399	0					
ANR	4220303	Identifier	r_debug_reg_get		4219399	0					
ANR	4220304	ArgumentList	core -> dbg		4219399	1					
ANR	4220305	Argument	core -> dbg		4219399	0					
ANR	4220306	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220307	Identifier	core		4219399	0					
ANR	4220308	Identifier	dbg		4219399	1					
ANR	4220309	Argument	"""PC"""		4219399	1					
ANR	4220310	PrimaryExpression	"""PC"""		4219399	0					
ANR	4220311	IdentifierDeclStatement	"RBreakpointItem * bpi = r_bp_get_at ( core -> dbg -> bp , addr ) ;"	4476:4:127515:127571	4219399	2	True				
ANR	4220312	IdentifierDecl	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4219399	0					
ANR	4220313	IdentifierDeclType	RBreakpointItem *		4219399	0					
ANR	4220314	Identifier	bpi		4219399	1					
ANR	4220315	AssignmentExpression	"* bpi = r_bp_get_at ( core -> dbg -> bp , addr )"		4219399	2		=			
ANR	4220316	Identifier	bpi		4219399	0					
ANR	4220317	CallExpression	"r_bp_get_at ( core -> dbg -> bp , addr )"		4219399	1					
ANR	4220318	Callee	r_bp_get_at		4219399	0					
ANR	4220319	Identifier	r_bp_get_at		4219399	0					
ANR	4220320	ArgumentList	core -> dbg -> bp		4219399	1					
ANR	4220321	Argument	core -> dbg -> bp		4219399	0					
ANR	4220322	PtrMemberAccess	core -> dbg -> bp		4219399	0					
ANR	4220323	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220324	Identifier	core		4219399	0					
ANR	4220325	Identifier	dbg		4219399	1					
ANR	4220326	Identifier	bp		4219399	1					
ANR	4220327	Argument	addr		4219399	1					
ANR	4220328	Identifier	addr		4219399	0					
ANR	4220329	Statement	sprintf	4477:4:127577:127583	4219399	3	True				
ANR	4220330	Statement	(	4477:11:127584:127584	4219399	4	True				
ANR	4220331	Statement	delb	4477:12:127585:127588	4219399	5	True				
ANR	4220332	Statement	","	4477:16:127589:127589	4219399	6	True				
ANR	4220333	Statement	"""db 0x%"""	4477:18:127591:127598	4219399	7	True				
ANR	4220334	Statement	PFMT64x	4477:26:127599:127605	4219399	8	True				
ANR	4220335	Statement	""""""	4477:33:127606:127607	4219399	9	True				
ANR	4220336	Statement	","	4477:35:127608:127608	4219399	10	True				
ANR	4220337	Statement	addr	4477:37:127610:127613	4219399	11	True				
ANR	4220338	Statement	)	4477:41:127614:127614	4219399	12	True				
ANR	4220339	ExpressionStatement		4477:42:127615:127615	4219399	13	True				
ANR	4220340	ExpressionStatement	"r_bp_del ( core -> dbg -> bp , addr )"	4478:4:127621:127651	4219399	14	True				
ANR	4220341	CallExpression	"r_bp_del ( core -> dbg -> bp , addr )"		4219399	0					
ANR	4220342	Callee	r_bp_del		4219399	0					
ANR	4220343	Identifier	r_bp_del		4219399	0					
ANR	4220344	ArgumentList	core -> dbg -> bp		4219399	1					
ANR	4220345	Argument	core -> dbg -> bp		4219399	0					
ANR	4220346	PtrMemberAccess	core -> dbg -> bp		4219399	0					
ANR	4220347	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220348	Identifier	core		4219399	0					
ANR	4220349	Identifier	dbg		4219399	1					
ANR	4220350	Identifier	bp		4219399	1					
ANR	4220351	Argument	addr		4219399	1					
ANR	4220352	Identifier	addr		4219399	0					
ANR	4220353	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4479:4:127657:127696	4219399	15	True				
ANR	4220354	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4219399	0					
ANR	4220355	Callee	r_reg_arena_swap		4219399	0					
ANR	4220356	Identifier	r_reg_arena_swap		4219399	0					
ANR	4220357	ArgumentList	core -> dbg -> reg		4219399	1					
ANR	4220358	Argument	core -> dbg -> reg		4219399	0					
ANR	4220359	PtrMemberAccess	core -> dbg -> reg		4219399	0					
ANR	4220360	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220361	Identifier	core		4219399	0					
ANR	4220362	Identifier	dbg		4219399	1					
ANR	4220363	Identifier	reg		4219399	1					
ANR	4220364	Argument	true		4219399	1					
ANR	4220365	Identifier	true		4219399	0					
ANR	4220366	ExpressionStatement	"r_debug_step_over ( core -> dbg , times )"	4480:4:127702:127738	4219399	16	True				
ANR	4220367	CallExpression	"r_debug_step_over ( core -> dbg , times )"		4219399	0					
ANR	4220368	Callee	r_debug_step_over		4219399	0					
ANR	4220369	Identifier	r_debug_step_over		4219399	0					
ANR	4220370	ArgumentList	core -> dbg		4219399	1					
ANR	4220371	Argument	core -> dbg		4219399	0					
ANR	4220372	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220373	Identifier	core		4219399	0					
ANR	4220374	Identifier	dbg		4219399	1					
ANR	4220375	Argument	times		4219399	1					
ANR	4220376	Identifier	times		4219399	0					
ANR	4220377	IfStatement	if ( bpi )		4219399	17					
ANR	4220378	Condition	bpi	4481:8:127748:127750	4219399	0	True				
ANR	4220379	Identifier	bpi		4219399	0					
ANR	4220380	ExpressionStatement	"r_core_cmd0 ( core , delb )"	4481:13:127753:127777	4219399	1	True				
ANR	4220381	CallExpression	"r_core_cmd0 ( core , delb )"		4219399	0					
ANR	4220382	Callee	r_core_cmd0		4219399	0					
ANR	4220383	Identifier	r_core_cmd0		4219399	0					
ANR	4220384	ArgumentList	core		4219399	1					
ANR	4220385	Argument	core		4219399	0					
ANR	4220386	Identifier	core		4219399	0					
ANR	4220387	Argument	delb		4219399	1					
ANR	4220388	Identifier	delb		4219399	0					
ANR	4220389	ElseStatement	else		4219399	0					
ANR	4220390	CompoundStatement		145:10:4028:4028	4219399	0					
ANR	4220391	ExpressionStatement	"r_core_cmdf ( core , ""aeso%s"" , input + 2 )"	4483:4:127795:127834	4219399	0	True				
ANR	4220392	CallExpression	"r_core_cmdf ( core , ""aeso%s"" , input + 2 )"		4219399	0					
ANR	4220393	Callee	r_core_cmdf		4219399	0					
ANR	4220394	Identifier	r_core_cmdf		4219399	0					
ANR	4220395	ArgumentList	core		4219399	1					
ANR	4220396	Argument	core		4219399	0					
ANR	4220397	Identifier	core		4219399	0					
ANR	4220398	Argument	"""aeso%s"""		4219399	1					
ANR	4220399	PrimaryExpression	"""aeso%s"""		4219399	0					
ANR	4220400	Argument	input + 2		4219399	2					
ANR	4220401	AdditiveExpression	input + 2		4219399	0		+			
ANR	4220402	Identifier	input		4219399	0					
ANR	4220403	PrimaryExpression	2		4219399	1					
ANR	4220404	BreakStatement	break ;	4486:2:127847:127852	4219399	21	True				
ANR	4220405	Label	case 'b' :	4487:1:127855:127863	4219399	22	True				
ANR	4220406	IfStatement	"if ( r_config_get_i ( core -> config , ""cfg.debug"" ) )"		4219399	23					
ANR	4220407	Condition	"r_config_get_i ( core -> config , ""cfg.debug"" )"	4488:6:127880:127921	4219399	0	True				
ANR	4220408	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		4219399	0					
ANR	4220409	Callee	r_config_get_i		4219399	0					
ANR	4220410	Identifier	r_config_get_i		4219399	0					
ANR	4220411	ArgumentList	core -> config		4219399	1					
ANR	4220412	Argument	core -> config		4219399	0					
ANR	4220413	PtrMemberAccess	core -> config		4219399	0					
ANR	4220414	Identifier	core		4219399	0					
ANR	4220415	Identifier	config		4219399	1					
ANR	4220416	Argument	"""cfg.debug"""		4219399	1					
ANR	4220417	PrimaryExpression	"""cfg.debug"""		4219399	0					
ANR	4220418	CompoundStatement		151:50:4163:4163	4219399	1					
ANR	4220419	IfStatement	if ( ! r_debug_step_back ( core -> dbg ) )		4219399	0					
ANR	4220420	Condition	! r_debug_step_back ( core -> dbg )	4489:7:127933:127962	4219399	0	True				
ANR	4220421	UnaryOperationExpression	! r_debug_step_back ( core -> dbg )		4219399	0					
ANR	4220422	UnaryOperator	!		4219399	0					
ANR	4220423	CallExpression	r_debug_step_back ( core -> dbg )		4219399	1					
ANR	4220424	Callee	r_debug_step_back		4219399	0					
ANR	4220425	Identifier	r_debug_step_back		4219399	0					
ANR	4220426	ArgumentList	core -> dbg		4219399	1					
ANR	4220427	Argument	core -> dbg		4219399	0					
ANR	4220428	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220429	Identifier	core		4219399	0					
ANR	4220430	Identifier	dbg		4219399	1					
ANR	4220431	CompoundStatement		152:39:4204:4204	4219399	1					
ANR	4220432	ExpressionStatement	"eprintf ( ""cannot step back\\n"" )"	4490:4:127971:128001	4219399	0	True				
ANR	4220433	CallExpression	"eprintf ( ""cannot step back\\n"" )"		4219399	0					
ANR	4220434	Callee	eprintf		4219399	0					
ANR	4220435	Identifier	eprintf		4219399	0					
ANR	4220436	ArgumentList	"""cannot step back\\n"""		4219399	1					
ANR	4220437	Argument	"""cannot step back\\n"""		4219399	0					
ANR	4220438	PrimaryExpression	"""cannot step back\\n"""		4219399	0					
ANR	4220439	ElseStatement	else		4219399	0					
ANR	4220440	CompoundStatement		155:9:4256:4256	4219399	0					
ANR	4220441	IfStatement	if ( r_core_esil_step_back ( core ) )		4219399	0					
ANR	4220442	Condition	r_core_esil_step_back ( core )	4493:7:128026:128053	4219399	0	True				
ANR	4220443	CallExpression	r_core_esil_step_back ( core )		4219399	0					
ANR	4220444	Callee	r_core_esil_step_back		4219399	0					
ANR	4220445	Identifier	r_core_esil_step_back		4219399	0					
ANR	4220446	ArgumentList	core		4219399	1					
ANR	4220447	Argument	core		4219399	0					
ANR	4220448	Identifier	core		4219399	0					
ANR	4220449	CompoundStatement		156:37:4295:4295	4219399	1					
ANR	4220450	ExpressionStatement	"r_core_cmd0 ( core , "".dr*"" )"	4494:4:128062:128088	4219399	0	True				
ANR	4220451	CallExpression	"r_core_cmd0 ( core , "".dr*"" )"		4219399	0					
ANR	4220452	Callee	r_core_cmd0		4219399	0					
ANR	4220453	Identifier	r_core_cmd0		4219399	0					
ANR	4220454	ArgumentList	core		4219399	1					
ANR	4220455	Argument	core		4219399	0					
ANR	4220456	Identifier	core		4219399	0					
ANR	4220457	Argument	""".dr*"""		4219399	1					
ANR	4220458	PrimaryExpression	""".dr*"""		4219399	0					
ANR	4220459	ElseStatement	else		4219399	0					
ANR	4220460	CompoundStatement		158:10:4339:4339	4219399	0					
ANR	4220461	ExpressionStatement	"eprintf ( ""cannot step back\\n"" )"	4496:4:128106:128136	4219399	0	True				
ANR	4220462	CallExpression	"eprintf ( ""cannot step back\\n"" )"		4219399	0					
ANR	4220463	Callee	eprintf		4219399	0					
ANR	4220464	Identifier	eprintf		4219399	0					
ANR	4220465	ArgumentList	"""cannot step back\\n"""		4219399	1					
ANR	4220466	Argument	"""cannot step back\\n"""		4219399	0					
ANR	4220467	PrimaryExpression	"""cannot step back\\n"""		4219399	0					
ANR	4220468	BreakStatement	break ;	4499:2:128149:128154	4219399	24	True				
ANR	4220469	Label	case 'l' :	4500:1:128157:128165	4219399	25	True				
ANR	4220470	ExpressionStatement	"r_reg_arena_swap ( core -> dbg -> reg , true )"	4501:2:128178:128217	4219399	26	True				
ANR	4220471	CallExpression	"r_reg_arena_swap ( core -> dbg -> reg , true )"		4219399	0					
ANR	4220472	Callee	r_reg_arena_swap		4219399	0					
ANR	4220473	Identifier	r_reg_arena_swap		4219399	0					
ANR	4220474	ArgumentList	core -> dbg -> reg		4219399	1					
ANR	4220475	Argument	core -> dbg -> reg		4219399	0					
ANR	4220476	PtrMemberAccess	core -> dbg -> reg		4219399	0					
ANR	4220477	PtrMemberAccess	core -> dbg		4219399	0					
ANR	4220478	Identifier	core		4219399	0					
ANR	4220479	Identifier	dbg		4219399	1					
ANR	4220480	Identifier	reg		4219399	1					
ANR	4220481	Argument	true		4219399	1					
ANR	4220482	Identifier	true		4219399	0					
ANR	4220483	ExpressionStatement	"step_line ( core , times )"	4502:2:128221:128244	4219399	27	True				
ANR	4220484	CallExpression	"step_line ( core , times )"		4219399	0					
ANR	4220485	Callee	step_line		4219399	0					
ANR	4220486	Identifier	step_line		4219399	0					
ANR	4220487	ArgumentList	core		4219399	1					
ANR	4220488	Argument	core		4219399	0					
ANR	4220489	Identifier	core		4219399	0					
ANR	4220490	Argument	times		4219399	1					
ANR	4220491	Identifier	times		4219399	0					
ANR	4220492	BreakStatement	break ;	4503:2:128248:128253	4219399	28	True				
ANR	4220493	Label	case '?' :	4504:1:128256:128264	4219399	29	True				
ANR	4220494	Label	default :	4505:1:128276:128283	4219399	30	True				
ANR	4220495	Identifier	default		4219399	0					
ANR	4220496	ExpressionStatement	"r_core_cmd_help ( core , help_msg_ds )"	4506:2:128287:128322	4219399	31	True				
ANR	4220497	CallExpression	"r_core_cmd_help ( core , help_msg_ds )"		4219399	0					
ANR	4220498	Callee	r_core_cmd_help		4219399	0					
ANR	4220499	Identifier	r_core_cmd_help		4219399	0					
ANR	4220500	ArgumentList	core		4219399	1					
ANR	4220501	Argument	core		4219399	0					
ANR	4220502	Identifier	core		4219399	0					
ANR	4220503	Argument	help_msg_ds		4219399	1					
ANR	4220504	Identifier	help_msg_ds		4219399	0					
ANR	4220505	ReturnStatement	return 0 ;	4507:2:128326:128334	4219399	32	True				
ANR	4220506	PrimaryExpression	0		4219399	0					
ANR	4220507	ReturnStatement	return 1 ;	4509:1:128340:128348	4219399	8	True				
ANR	4220508	PrimaryExpression	1		4219399	0					
ANR	4220509	ReturnType	static int		4219399	1					
ANR	4220510	Identifier	cmd_debug_step		4219399	2					
ANR	4220511	ParameterList	"RCore * core , const char * input"		4219399	3					
ANR	4220512	Parameter	RCore * core	4338:27:123728:123738	4219399	0	True				
ANR	4220513	ParameterType	RCore *		4219399	0					
ANR	4220514	Identifier	core		4219399	1					
ANR	4220515	Parameter	const char * input	4338:40:123741:123757	4219399	1	True				
ANR	4220516	ParameterType	const char *		4219399	0					
ANR	4220517	Identifier	input		4219399	1					
ANR	4220518	CFGEntryNode	ENTRY		4219399		True				
ANR	4220519	CFGExitNode	EXIT		4219399		True				
ANR	4220520	Symbol	aop . jump		4219399						
ANR	4220521	Symbol	core -> anal -> reg		4219399						
ANR	4220522	Symbol	aop		4219399						
ANR	4220523	Symbol	r_debug_reg_get		4219399						
ANR	4220524	Symbol	r_bp_get_at		4219399						
ANR	4220525	Symbol	* input		4219399						
ANR	4220526	Symbol	core -> offset		4219399						
ANR	4220527	Symbol	aop . type		4219399						
ANR	4220528	Symbol	core -> dbg -> bp		4219399						
ANR	4220529	Symbol	strlen		4219399						
ANR	4220530	Symbol	aop . fail		4219399						
ANR	4220531	Symbol	delb		4219399						
ANR	4220532	Symbol	core -> num		4219399						
ANR	4220533	Symbol	core -> bin		4219399						
ANR	4220534	Symbol	r_num_conditional		4219399						
ANR	4220535	Symbol	& aop		4219399						
ANR	4220536	Symbol	core		4219399						
ANR	4220537	Symbol	input		4219399						
ANR	4220538	Symbol	R_ANAL_OP_TYPE_CALL		4219399						
ANR	4220539	Symbol	r_config_get_i		4219399						
ANR	4220540	Symbol	true		4219399						
ANR	4220541	Symbol	* core -> dbg		4219399						
ANR	4220542	Symbol	* core		4219399						
ANR	4220543	Symbol	R_EMPTY		4219399						
ANR	4220544	Symbol	core -> anal		4219399						
ANR	4220545	Symbol	R_ANAL_OP_MASK_BASIC		4219399						
ANR	4220546	Symbol	r_num_math		4219399						
ANR	4220547	Symbol	core -> break_loop		4219399						
ANR	4220548	Symbol	times		4219399						
ANR	4220549	Symbol	r_cons_is_breaked		4219399						
ANR	4220550	Symbol	aop . size		4219399						
ANR	4220551	Symbol	core -> io		4219399						
ANR	4220552	Symbol	r_core_esil_step_back		4219399						
ANR	4220553	Symbol	bpi		4219399						
ANR	4220554	Symbol	addr		4219399						
ANR	4220555	Symbol	UT64_MAX		4219399						
ANR	4220556	Symbol	* * core		4219399						
ANR	4220557	Symbol	R_REG_TYPE_GPR		4219399						
ANR	4220558	Symbol	r_bin_cur_object		4219399						
ANR	4220559	Symbol	core -> config		4219399						
ANR	4220560	Symbol	false		4219399						
ANR	4220561	Symbol	i		4219399						
ANR	4220562	Symbol	r_bin_get_section_at		4219399						
ANR	4220563	Symbol	n		4219399						
ANR	4220564	Symbol	r_debug_step		4219399						
ANR	4220565	Symbol	o		4219399						
ANR	4220566	Symbol	buf		4219399						
ANR	4220567	Symbol	r_debug_is_dead		4219399						
ANR	4220568	Symbol	help_msg_ds		4219399						
ANR	4220569	Symbol	pc		4219399						
ANR	4220570	Symbol	s		4219399						
ANR	4220571	Symbol	* core -> anal		4219399						
ANR	4220572	Symbol	help_msg_dsu		4219399						
ANR	4220573	Symbol	core -> dbg -> reg		4219399						
ANR	4220574	Symbol	static_debug_stop		4219399						
ANR	4220575	Symbol	R_MAX		4219399						
ANR	4220576	Symbol	r_debug_step_back		4219399						
ANR	4220577	Symbol	core -> dbg		4219399						
ANR	4220578	Function	getFileData	4512:0:128353:128525							
ANR	4220579	FunctionDef	"getFileData (RCore * core , const char * arg)"		4220578	0					
ANR	4220580	CompoundStatement		4512:53:128406:128525	4220578	0					
ANR	4220581	IfStatement	if ( * arg == '$' )		4220578	0					
ANR	4220582	Condition	* arg == '$'	4513:5:128413:128423	4220578	0	True				
ANR	4220583	EqualityExpression	* arg == '$'		4220578	0		==			
ANR	4220584	UnaryOperationExpression	* arg		4220578	0					
ANR	4220585	UnaryOperator	*		4220578	0					
ANR	4220586	Identifier	arg		4220578	1					
ANR	4220587	PrimaryExpression	'$'		4220578	1					
ANR	4220588	CompoundStatement		2:18:19:19	4220578	1					
ANR	4220589	ReturnStatement	"return ( ut8 * ) r_cmd_alias_get ( core -> rcmd , arg , 1 ) ;"	4514:2:128430:128480	4220578	0	True				
ANR	4220590	CastExpression	"( ut8 * ) r_cmd_alias_get ( core -> rcmd , arg , 1 )"		4220578	0					
ANR	4220591	CastTarget	ut8 *		4220578	0					
ANR	4220592	CallExpression	"r_cmd_alias_get ( core -> rcmd , arg , 1 )"		4220578	1					
ANR	4220593	Callee	r_cmd_alias_get		4220578	0					
ANR	4220594	Identifier	r_cmd_alias_get		4220578	0					
ANR	4220595	ArgumentList	core -> rcmd		4220578	1					
ANR	4220596	Argument	core -> rcmd		4220578	0					
ANR	4220597	PtrMemberAccess	core -> rcmd		4220578	0					
ANR	4220598	Identifier	core		4220578	0					
ANR	4220599	Identifier	rcmd		4220578	1					
ANR	4220600	Argument	arg		4220578	1					
ANR	4220601	Identifier	arg		4220578	0					
ANR	4220602	Argument	1		4220578	2					
ANR	4220603	PrimaryExpression	1		4220578	0					
ANR	4220604	ReturnStatement	"return ( ut8 * ) r_file_slurp ( arg , NULL ) ;"	4516:1:128486:128523	4220578	1	True				
ANR	4220605	CastExpression	"( ut8 * ) r_file_slurp ( arg , NULL )"		4220578	0					
ANR	4220606	CastTarget	ut8 *		4220578	0					
ANR	4220607	CallExpression	"r_file_slurp ( arg , NULL )"		4220578	1					
ANR	4220608	Callee	r_file_slurp		4220578	0					
ANR	4220609	Identifier	r_file_slurp		4220578	0					
ANR	4220610	ArgumentList	arg		4220578	1					
ANR	4220611	Argument	arg		4220578	0					
ANR	4220612	Identifier	arg		4220578	0					
ANR	4220613	Argument	NULL		4220578	1					
ANR	4220614	Identifier	NULL		4220578	0					
ANR	4220615	ReturnType	static ut8 *		4220578	1					
ANR	4220616	Identifier	getFileData		4220578	2					
ANR	4220617	ParameterList	"RCore * core , const char * arg"		4220578	3					
ANR	4220618	Parameter	RCore * core	4512:23:128376:128386	4220578	0	True				
ANR	4220619	ParameterType	RCore *		4220578	0					
ANR	4220620	Identifier	core		4220578	1					
ANR	4220621	Parameter	const char * arg	4512:36:128389:128403	4220578	1	True				
ANR	4220622	ParameterType	const char *		4220578	0					
ANR	4220623	Identifier	arg		4220578	1					
ANR	4220624	CFGEntryNode	ENTRY		4220578		True				
ANR	4220625	CFGExitNode	EXIT		4220578		True				
ANR	4220626	Symbol	core		4220578						
ANR	4220627	Symbol	r_file_slurp		4220578						
ANR	4220628	Symbol	NULL		4220578						
ANR	4220629	Symbol	core -> rcmd		4220578						
ANR	4220630	Symbol	arg		4220578						
ANR	4220631	Symbol	* core		4220578						
ANR	4220632	Symbol	r_cmd_alias_get		4220578						
ANR	4220633	Symbol	* arg		4220578						
ANR	4220634	Function	consumeBuffer	4519:0:128528:128886							
ANR	4220635	FunctionDef	"consumeBuffer (RBuffer * buf , const char * cmd , const char * errmsg)"		4220634	0					
ANR	4220636	CompoundStatement		4519:77:128605:128886	4220634	0					
ANR	4220637	IfStatement	if ( ! buf )		4220634	0					
ANR	4220638	Condition	! buf	4520:5:128612:128615	4220634	0	True				
ANR	4220639	UnaryOperationExpression	! buf		4220634	0					
ANR	4220640	UnaryOperator	!		4220634	0					
ANR	4220641	Identifier	buf		4220634	1					
ANR	4220642	CompoundStatement		2:11:12:12	4220634	1					
ANR	4220643	IfStatement	if ( errmsg )		4220634	0					
ANR	4220644	Condition	errmsg	4521:6:128626:128631	4220634	0	True				
ANR	4220645	Identifier	errmsg		4220634	0					
ANR	4220646	CompoundStatement		3:14:28:28	4220634	1					
ANR	4220647	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , errmsg )"	4522:3:128639:128669	4220634	0	True				
ANR	4220648	CallExpression	"r_cons_printf ( ""%s\\n"" , errmsg )"		4220634	0					
ANR	4220649	Callee	r_cons_printf		4220634	0					
ANR	4220650	Identifier	r_cons_printf		4220634	0					
ANR	4220651	ArgumentList	"""%s\\n"""		4220634	1					
ANR	4220652	Argument	"""%s\\n"""		4220634	0					
ANR	4220653	PrimaryExpression	"""%s\\n"""		4220634	0					
ANR	4220654	Argument	errmsg		4220634	1					
ANR	4220655	Identifier	errmsg		4220634	0					
ANR	4220656	ReturnStatement	return ;	4524:2:128677:128683	4220634	1	True				
ANR	4220657	IfStatement	if ( cmd )		4220634	1					
ANR	4220658	Condition	cmd	4526:5:128693:128695	4220634	0	True				
ANR	4220659	Identifier	cmd		4220634	0					
ANR	4220660	CompoundStatement		8:10:92:92	4220634	1					
ANR	4220661	ExpressionStatement	"r_cons_printf ( ""%s"" , cmd )"	4527:2:128702:128727	4220634	0	True				
ANR	4220662	CallExpression	"r_cons_printf ( ""%s"" , cmd )"		4220634	0					
ANR	4220663	Callee	r_cons_printf		4220634	0					
ANR	4220664	Identifier	r_cons_printf		4220634	0					
ANR	4220665	ArgumentList	"""%s"""		4220634	1					
ANR	4220666	Argument	"""%s"""		4220634	0					
ANR	4220667	PrimaryExpression	"""%s"""		4220634	0					
ANR	4220668	Argument	cmd		4220634	1					
ANR	4220669	Identifier	cmd		4220634	0					
ANR	4220670	IdentifierDeclStatement	int i ;	4529:1:128733:128738	4220634	2	True				
ANR	4220671	IdentifierDecl	i		4220634	0					
ANR	4220672	IdentifierDeclType	int		4220634	0					
ANR	4220673	Identifier	i		4220634	1					
ANR	4220674	ExpressionStatement	"r_buf_seek ( buf , 0 , R_BUF_SET )"	4530:1:128741:128771	4220634	3	True				
ANR	4220675	CallExpression	"r_buf_seek ( buf , 0 , R_BUF_SET )"		4220634	0					
ANR	4220676	Callee	r_buf_seek		4220634	0					
ANR	4220677	Identifier	r_buf_seek		4220634	0					
ANR	4220678	ArgumentList	buf		4220634	1					
ANR	4220679	Argument	buf		4220634	0					
ANR	4220680	Identifier	buf		4220634	0					
ANR	4220681	Argument	0		4220634	1					
ANR	4220682	PrimaryExpression	0		4220634	0					
ANR	4220683	Argument	R_BUF_SET		4220634	2					
ANR	4220684	Identifier	R_BUF_SET		4220634	0					
ANR	4220685	ForStatement	for ( i = 0 ; i < r_buf_size ( buf ) ; i ++ )		4220634	4					
ANR	4220686	ForInit	i = 0 ;	4531:6:128779:128784	4220634	0	True				
ANR	4220687	AssignmentExpression	i = 0		4220634	0		=			
ANR	4220688	Identifier	i		4220634	0					
ANR	4220689	PrimaryExpression	0		4220634	1					
ANR	4220690	Condition	i < r_buf_size ( buf )	4531:13:128786:128805	4220634	1	True				
ANR	4220691	RelationalExpression	i < r_buf_size ( buf )		4220634	0		<			
ANR	4220692	Identifier	i		4220634	0					
ANR	4220693	CallExpression	r_buf_size ( buf )		4220634	1					
ANR	4220694	Callee	r_buf_size		4220634	0					
ANR	4220695	Identifier	r_buf_size		4220634	0					
ANR	4220696	ArgumentList	buf		4220634	1					
ANR	4220697	Argument	buf		4220634	0					
ANR	4220698	Identifier	buf		4220634	0					
ANR	4220699	PostIncDecOperationExpression	i ++	4531:35:128808:128810	4220634	2	True				
ANR	4220700	Identifier	i		4220634	0					
ANR	4220701	IncDec	++		4220634	1					
ANR	4220702	CompoundStatement		13:40:207:207	4220634	3					
ANR	4220703	ExpressionStatement	"r_cons_printf ( ""%02x"" , r_buf_read8 ( buf ) )"	4532:2:128817:128858	4220634	0	True				
ANR	4220704	CallExpression	"r_cons_printf ( ""%02x"" , r_buf_read8 ( buf ) )"		4220634	0					
ANR	4220705	Callee	r_cons_printf		4220634	0					
ANR	4220706	Identifier	r_cons_printf		4220634	0					
ANR	4220707	ArgumentList	"""%02x"""		4220634	1					
ANR	4220708	Argument	"""%02x"""		4220634	0					
ANR	4220709	PrimaryExpression	"""%02x"""		4220634	0					
ANR	4220710	Argument	r_buf_read8 ( buf )		4220634	1					
ANR	4220711	CallExpression	r_buf_read8 ( buf )		4220634	0					
ANR	4220712	Callee	r_buf_read8		4220634	0					
ANR	4220713	Identifier	r_buf_read8		4220634	0					
ANR	4220714	ArgumentList	buf		4220634	1					
ANR	4220715	Argument	buf		4220634	0					
ANR	4220716	Identifier	buf		4220634	0					
ANR	4220717	ExpressionStatement	"r_cons_printf ( ""\\n"" )"	4534:1:128864:128884	4220634	5	True				
ANR	4220718	CallExpression	"r_cons_printf ( ""\\n"" )"		4220634	0					
ANR	4220719	Callee	r_cons_printf		4220634	0					
ANR	4220720	Identifier	r_cons_printf		4220634	0					
ANR	4220721	ArgumentList	"""\\n"""		4220634	1					
ANR	4220722	Argument	"""\\n"""		4220634	0					
ANR	4220723	PrimaryExpression	"""\\n"""		4220634	0					
ANR	4220724	ReturnType	static void		4220634	1					
ANR	4220725	Identifier	consumeBuffer		4220634	2					
ANR	4220726	ParameterList	"RBuffer * buf , const char * cmd , const char * errmsg"		4220634	3					
ANR	4220727	Parameter	RBuffer * buf	4519:26:128554:128565	4220634	0	True				
ANR	4220728	ParameterType	RBuffer *		4220634	0					
ANR	4220729	Identifier	buf		4220634	1					
ANR	4220730	Parameter	const char * cmd	4519:40:128568:128582	4220634	1	True				
ANR	4220731	ParameterType	const char *		4220634	0					
ANR	4220732	Identifier	cmd		4220634	1					
ANR	4220733	Parameter	const char * errmsg	4519:57:128585:128602	4220634	2	True				
ANR	4220734	ParameterType	const char *		4220634	0					
ANR	4220735	Identifier	errmsg		4220634	1					
ANR	4220736	CFGEntryNode	ENTRY		4220634		True				
ANR	4220737	CFGExitNode	EXIT		4220634		True				
ANR	4220738	Symbol	R_BUF_SET		4220634						
ANR	4220739	Symbol	buf		4220634						
ANR	4220740	Symbol	errmsg		4220634						
ANR	4220741	Symbol	i		4220634						
ANR	4220742	Symbol	cmd		4220634						
ANR	4220743	Symbol	r_buf_read8		4220634						
ANR	4220744	Symbol	r_buf_size		4220634						
ANR	4220745	Function	cmd_debug	4537:0:128889:149226							
ANR	4220746	FunctionDef	"cmd_debug (void * data , const char * input)"		4220745	0					
ANR	4220747	CompoundStatement		4537:52:128941:149226	4220745	0					
ANR	4220748	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	4538:1:128944:128971	4220745	0	True				
ANR	4220749	IdentifierDecl	* core = ( RCore * ) data		4220745	0					
ANR	4220750	IdentifierDeclType	RCore *		4220745	0					
ANR	4220751	Identifier	core		4220745	1					
ANR	4220752	AssignmentExpression	* core = ( RCore * ) data		4220745	2		=			
ANR	4220753	Identifier	core		4220745	0					
ANR	4220754	CastExpression	( RCore * ) data		4220745	1					
ANR	4220755	CastTarget	RCore *		4220745	0					
ANR	4220756	Identifier	data		4220745	1					
ANR	4220757	IdentifierDeclStatement	RDebugTracepoint * t ;	4539:1:128974:128993	4220745	1	True				
ANR	4220758	IdentifierDecl	* t		4220745	0					
ANR	4220759	IdentifierDeclType	RDebugTracepoint *		4220745	0					
ANR	4220760	Identifier	t		4220745	1					
ANR	4220761	IdentifierDeclStatement	int follow = 0 ;	4540:1:128996:129010	4220745	2	True				
ANR	4220762	IdentifierDecl	follow = 0		4220745	0					
ANR	4220763	IdentifierDeclType	int		4220745	0					
ANR	4220764	Identifier	follow		4220745	1					
ANR	4220765	AssignmentExpression	follow = 0		4220745	2		=			
ANR	4220766	Identifier	follow		4220745	0					
ANR	4220767	PrimaryExpression	0		4220745	1					
ANR	4220768	IdentifierDeclStatement	const char * ptr ;	4541:1:129013:129028	4220745	3	True				
ANR	4220769	IdentifierDecl	* ptr		4220745	0					
ANR	4220770	IdentifierDeclType	const char *		4220745	0					
ANR	4220771	Identifier	ptr		4220745	1					
ANR	4220772	IdentifierDeclStatement	ut64 addr ;	4542:1:129031:129040	4220745	4	True				
ANR	4220773	IdentifierDecl	addr		4220745	0					
ANR	4220774	IdentifierDeclType	ut64		4220745	0					
ANR	4220775	Identifier	addr		4220745	1					
ANR	4220776	IdentifierDeclStatement	int min ;	4543:1:129043:129050	4220745	5	True				
ANR	4220777	IdentifierDecl	min		4220745	0					
ANR	4220778	IdentifierDeclType	int		4220745	0					
ANR	4220779	Identifier	min		4220745	1					
ANR	4220780	IdentifierDeclStatement	RListIter * iter ;	4544:1:129053:129068	4220745	6	True				
ANR	4220781	IdentifierDecl	* iter		4220745	0					
ANR	4220782	IdentifierDeclType	RListIter *		4220745	0					
ANR	4220783	Identifier	iter		4220745	1					
ANR	4220784	IdentifierDeclStatement	RDebugTracepoint * trace ;	4545:1:129071:129094	4220745	7	True				
ANR	4220785	IdentifierDecl	* trace		4220745	0					
ANR	4220786	IdentifierDeclType	RDebugTracepoint *		4220745	0					
ANR	4220787	Identifier	trace		4220745	1					
ANR	4220788	IdentifierDeclStatement	RAnalOp * op ;	4546:1:129097:129108	4220745	8	True				
ANR	4220789	IdentifierDecl	* op		4220745	0					
ANR	4220790	IdentifierDeclType	RAnalOp *		4220745	0					
ANR	4220791	Identifier	op		4220745	1					
ANR	4220792	IfStatement	if ( r_sandbox_enable ( 0 ) )		4220745	9					
ANR	4220793	Condition	r_sandbox_enable ( 0 )	4548:5:129116:129135	4220745	0	True				
ANR	4220794	CallExpression	r_sandbox_enable ( 0 )		4220745	0					
ANR	4220795	Callee	r_sandbox_enable		4220745	0					
ANR	4220796	Identifier	r_sandbox_enable		4220745	0					
ANR	4220797	ArgumentList	0		4220745	1					
ANR	4220798	Argument	0		4220745	0					
ANR	4220799	PrimaryExpression	0		4220745	0					
ANR	4220800	CompoundStatement		12:27:196:196	4220745	1					
ANR	4220801	ExpressionStatement	"eprintf ( ""Debugger commands disabled in sandbox mode\\n"" )"	4549:2:129142:129198	4220745	0	True				
ANR	4220802	CallExpression	"eprintf ( ""Debugger commands disabled in sandbox mode\\n"" )"		4220745	0					
ANR	4220803	Callee	eprintf		4220745	0					
ANR	4220804	Identifier	eprintf		4220745	0					
ANR	4220805	ArgumentList	"""Debugger commands disabled in sandbox mode\\n"""		4220745	1					
ANR	4220806	Argument	"""Debugger commands disabled in sandbox mode\\n"""		4220745	0					
ANR	4220807	PrimaryExpression	"""Debugger commands disabled in sandbox mode\\n"""		4220745	0					
ANR	4220808	ReturnStatement	return 0 ;	4550:2:129202:129210	4220745	1	True				
ANR	4220809	PrimaryExpression	0		4220745	0					
ANR	4220810	IfStatement	"if ( ! strncmp ( input , ""ate"" , 3 ) )"		4220745	10					
ANR	4220811	Condition	"! strncmp ( input , ""ate"" , 3 )"	4552:5:129220:129245	4220745	0	True				
ANR	4220812	UnaryOperationExpression	"! strncmp ( input , ""ate"" , 3 )"		4220745	0					
ANR	4220813	UnaryOperator	!		4220745	0					
ANR	4220814	CallExpression	"strncmp ( input , ""ate"" , 3 )"		4220745	1					
ANR	4220815	Callee	strncmp		4220745	0					
ANR	4220816	Identifier	strncmp		4220745	0					
ANR	4220817	ArgumentList	input		4220745	1					
ANR	4220818	Argument	input		4220745	0					
ANR	4220819	Identifier	input		4220745	0					
ANR	4220820	Argument	"""ate"""		4220745	1					
ANR	4220821	PrimaryExpression	"""ate"""		4220745	0					
ANR	4220822	Argument	3		4220745	2					
ANR	4220823	PrimaryExpression	3		4220745	0					
ANR	4220824	CompoundStatement		17:2:310:323	4220745	1					
ANR	4220825	IdentifierDeclStatement	char str [ 128 ] ;	4553:2:129252:129265	4220745	0	True				
ANR	4220826	IdentifierDecl	str [ 128 ]		4220745	0					
ANR	4220827	IdentifierDeclType	char [ 128 ]		4220745	0					
ANR	4220828	Identifier	str		4220745	1					
ANR	4220829	PrimaryExpression	128		4220745	2					
ANR	4220830	ExpressionStatement	str [ 0 ] = 0	4554:2:129269:129279	4220745	1	True				
ANR	4220831	AssignmentExpression	str [ 0 ] = 0		4220745	0		=			
ANR	4220832	ArrayIndexing	str [ 0 ]		4220745	0					
ANR	4220833	Identifier	str		4220745	0					
ANR	4220834	PrimaryExpression	0		4220745	1					
ANR	4220835	PrimaryExpression	0		4220745	1					
ANR	4220836	ExpressionStatement	"r_print_date_get_now ( core -> print , str )"	4555:2:129283:129322	4220745	2	True				
ANR	4220837	CallExpression	"r_print_date_get_now ( core -> print , str )"		4220745	0					
ANR	4220838	Callee	r_print_date_get_now		4220745	0					
ANR	4220839	Identifier	r_print_date_get_now		4220745	0					
ANR	4220840	ArgumentList	core -> print		4220745	1					
ANR	4220841	Argument	core -> print		4220745	0					
ANR	4220842	PtrMemberAccess	core -> print		4220745	0					
ANR	4220843	Identifier	core		4220745	0					
ANR	4220844	Identifier	print		4220745	1					
ANR	4220845	Argument	str		4220745	1					
ANR	4220846	Identifier	str		4220745	0					
ANR	4220847	ExpressionStatement	r_cons_println ( str )	4556:2:129326:129346	4220745	3	True				
ANR	4220848	CallExpression	r_cons_println ( str )		4220745	0					
ANR	4220849	Callee	r_cons_println		4220745	0					
ANR	4220850	Identifier	r_cons_println		4220745	0					
ANR	4220851	ArgumentList	str		4220745	1					
ANR	4220852	Argument	str		4220745	0					
ANR	4220853	Identifier	str		4220745	0					
ANR	4220854	ReturnStatement	return 0 ;	4557:2:129350:129358	4220745	4	True				
ANR	4220855	PrimaryExpression	0		4220745	0					
ANR	4220856	SwitchStatement	switch ( input [ 0 ] )		4220745	11					
ANR	4220857	Condition	input [ 0 ]	4560:9:129373:129380	4220745	0	True				
ANR	4220858	ArrayIndexing	input [ 0 ]		4220745	0					
ANR	4220859	Identifier	input		4220745	0					
ANR	4220860	PrimaryExpression	0		4220745	1					
ANR	4220861	CompoundStatement		24:19:441:441	4220745	1					
ANR	4220862	Label	case 't' :	4561:1:129386:129394	4220745	0	True				
ANR	4220863	SwitchStatement	switch ( input [ 1 ] )		4220745	1					
ANR	4220864	Condition	input [ 1 ]	4563:10:129499:129506	4220745	0	True				
ANR	4220865	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4220866	Identifier	input		4220745	0					
ANR	4220867	PrimaryExpression	1		4220745	1					
ANR	4220868	CompoundStatement		27:20:567:567	4220745	1					
ANR	4220869	Label	case '\\0' :	4564:2:129513:129522	4220745	0	True				
ANR	4220870	ExpressionStatement	"r_debug_trace_list ( core -> dbg , 0 , core -> offset )"	4565:3:129535:129582	4220745	1	True				
ANR	4220871	CallExpression	"r_debug_trace_list ( core -> dbg , 0 , core -> offset )"		4220745	0					
ANR	4220872	Callee	r_debug_trace_list		4220745	0					
ANR	4220873	Identifier	r_debug_trace_list		4220745	0					
ANR	4220874	ArgumentList	core -> dbg		4220745	1					
ANR	4220875	Argument	core -> dbg		4220745	0					
ANR	4220876	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4220877	Identifier	core		4220745	0					
ANR	4220878	Identifier	dbg		4220745	1					
ANR	4220879	Argument	0		4220745	1					
ANR	4220880	PrimaryExpression	0		4220745	0					
ANR	4220881	Argument	core -> offset		4220745	2					
ANR	4220882	PtrMemberAccess	core -> offset		4220745	0					
ANR	4220883	Identifier	core		4220745	0					
ANR	4220884	Identifier	offset		4220745	1					
ANR	4220885	BreakStatement	break ;	4566:3:129587:129592	4220745	2	True				
ANR	4220886	Label	case '=' :	4567:2:129596:129604	4220745	3	True				
ANR	4220887	ExpressionStatement	"r_debug_trace_list ( core -> dbg , '=' , core -> offset )"	4568:3:129618:129667	4220745	4	True				
ANR	4220888	CallExpression	"r_debug_trace_list ( core -> dbg , '=' , core -> offset )"		4220745	0					
ANR	4220889	Callee	r_debug_trace_list		4220745	0					
ANR	4220890	Identifier	r_debug_trace_list		4220745	0					
ANR	4220891	ArgumentList	core -> dbg		4220745	1					
ANR	4220892	Argument	core -> dbg		4220745	0					
ANR	4220893	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4220894	Identifier	core		4220745	0					
ANR	4220895	Identifier	dbg		4220745	1					
ANR	4220896	Argument	'='		4220745	1					
ANR	4220897	PrimaryExpression	'='		4220745	0					
ANR	4220898	Argument	core -> offset		4220745	2					
ANR	4220899	PtrMemberAccess	core -> offset		4220745	0					
ANR	4220900	Identifier	core		4220745	0					
ANR	4220901	Identifier	offset		4220745	1					
ANR	4220902	BreakStatement	break ;	4569:3:129672:129677	4220745	5	True				
ANR	4220903	Label	case 'q' :	4570:2:129681:129689	4220745	6	True				
ANR	4220904	ExpressionStatement	"r_debug_trace_list ( core -> dbg , 'q' , core -> offset )"	4571:3:129703:129752	4220745	7	True				
ANR	4220905	CallExpression	"r_debug_trace_list ( core -> dbg , 'q' , core -> offset )"		4220745	0					
ANR	4220906	Callee	r_debug_trace_list		4220745	0					
ANR	4220907	Identifier	r_debug_trace_list		4220745	0					
ANR	4220908	ArgumentList	core -> dbg		4220745	1					
ANR	4220909	Argument	core -> dbg		4220745	0					
ANR	4220910	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4220911	Identifier	core		4220745	0					
ANR	4220912	Identifier	dbg		4220745	1					
ANR	4220913	Argument	'q'		4220745	1					
ANR	4220914	PrimaryExpression	'q'		4220745	0					
ANR	4220915	Argument	core -> offset		4220745	2					
ANR	4220916	PtrMemberAccess	core -> offset		4220745	0					
ANR	4220917	Identifier	core		4220745	0					
ANR	4220918	Identifier	offset		4220745	1					
ANR	4220919	BreakStatement	break ;	4572:3:129757:129762	4220745	8	True				
ANR	4220920	Label	case '*' :	4573:2:129766:129774	4220745	9	True				
ANR	4220921	ExpressionStatement	"r_debug_trace_list ( core -> dbg , 1 , core -> offset )"	4574:3:129788:129835	4220745	10	True				
ANR	4220922	CallExpression	"r_debug_trace_list ( core -> dbg , 1 , core -> offset )"		4220745	0					
ANR	4220923	Callee	r_debug_trace_list		4220745	0					
ANR	4220924	Identifier	r_debug_trace_list		4220745	0					
ANR	4220925	ArgumentList	core -> dbg		4220745	1					
ANR	4220926	Argument	core -> dbg		4220745	0					
ANR	4220927	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4220928	Identifier	core		4220745	0					
ANR	4220929	Identifier	dbg		4220745	1					
ANR	4220930	Argument	1		4220745	1					
ANR	4220931	PrimaryExpression	1		4220745	0					
ANR	4220932	Argument	core -> offset		4220745	2					
ANR	4220933	PtrMemberAccess	core -> offset		4220745	0					
ANR	4220934	Identifier	core		4220745	0					
ANR	4220935	Identifier	offset		4220745	1					
ANR	4220936	BreakStatement	break ;	4575:3:129840:129845	4220745	11	True				
ANR	4220937	Label	case ' ' :	4576:2:129849:129857	4220745	12	True				
ANR	4220938	IfStatement	"if ( ( t = r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) ) ) )"		4220745	13					
ANR	4220939	Condition	"t = r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"	4577:7:129881:129955	4220745	0	True				
ANR	4220940	AssignmentExpression	"t = r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"		4220745	0		=			
ANR	4220941	Identifier	t		4220745	0					
ANR	4220942	CallExpression	"r_debug_trace_get ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"		4220745	1					
ANR	4220943	Callee	r_debug_trace_get		4220745	0					
ANR	4220944	Identifier	r_debug_trace_get		4220745	0					
ANR	4220945	ArgumentList	core -> dbg		4220745	1					
ANR	4220946	Argument	core -> dbg		4220745	0					
ANR	4220947	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4220948	Identifier	core		4220745	0					
ANR	4220949	Identifier	dbg		4220745	1					
ANR	4220950	Argument	"r_num_math ( core -> num , input + 3 )"		4220745	1					
ANR	4220951	CallExpression	"r_num_math ( core -> num , input + 3 )"		4220745	0					
ANR	4220952	Callee	r_num_math		4220745	0					
ANR	4220953	Identifier	r_num_math		4220745	0					
ANR	4220954	ArgumentList	core -> num		4220745	1					
ANR	4220955	Argument	core -> num		4220745	0					
ANR	4220956	PtrMemberAccess	core -> num		4220745	0					
ANR	4220957	Identifier	core		4220745	0					
ANR	4220958	Identifier	num		4220745	1					
ANR	4220959	Argument	input + 3		4220745	1					
ANR	4220960	AdditiveExpression	input + 3		4220745	0		+			
ANR	4220961	Identifier	input		4220745	0					
ANR	4220962	PrimaryExpression	3		4220745	1					
ANR	4220963	CompoundStatement		42:42:1016:1016	4220745	1					
ANR	4220964	Statement	r_cons_printf	4579:4:129964:129976	4220745	0	True				
ANR	4220965	Statement	(	4579:18:129978:129978	4220745	1	True				
ANR	4220966	Statement	"""offset = 0x%"""	4579:19:129979:129992	4220745	2	True				
ANR	4220967	Statement	PFMT64x	4579:34:129994:130000	4220745	3	True				
ANR	4220968	Statement	"""\\n"""	4579:42:130002:130005	4220745	4	True				
ANR	4220969	Statement	","	4579:46:130006:130006	4220745	5	True				
ANR	4220970	Statement	t	4579:48:130008:130008	4220745	6	True				
ANR	4220971	Statement	->	4579:49:130009:130010	4220745	7	True				
ANR	4220972	Statement	addr	4579:51:130011:130014	4220745	8	True				
ANR	4220973	Statement	)	4579:55:130015:130015	4220745	9	True				
ANR	4220974	ExpressionStatement		4579:56:130016:130016	4220745	10	True				
ANR	4220975	ExpressionStatement	"r_cons_printf ( ""opsize = %d\\n"" , t -> size )"	4580:4:130022:130062	4220745	11	True				
ANR	4220976	CallExpression	"r_cons_printf ( ""opsize = %d\\n"" , t -> size )"		4220745	0					
ANR	4220977	Callee	r_cons_printf		4220745	0					
ANR	4220978	Identifier	r_cons_printf		4220745	0					
ANR	4220979	ArgumentList	"""opsize = %d\\n"""		4220745	1					
ANR	4220980	Argument	"""opsize = %d\\n"""		4220745	0					
ANR	4220981	PrimaryExpression	"""opsize = %d\\n"""		4220745	0					
ANR	4220982	Argument	t -> size		4220745	1					
ANR	4220983	PtrMemberAccess	t -> size		4220745	0					
ANR	4220984	Identifier	t		4220745	0					
ANR	4220985	Identifier	size		4220745	1					
ANR	4220986	ExpressionStatement	"r_cons_printf ( ""times = %d\\n"" , t -> times )"	4581:4:130068:130108	4220745	12	True				
ANR	4220987	CallExpression	"r_cons_printf ( ""times = %d\\n"" , t -> times )"		4220745	0					
ANR	4220988	Callee	r_cons_printf		4220745	0					
ANR	4220989	Identifier	r_cons_printf		4220745	0					
ANR	4220990	ArgumentList	"""times = %d\\n"""		4220745	1					
ANR	4220991	Argument	"""times = %d\\n"""		4220745	0					
ANR	4220992	PrimaryExpression	"""times = %d\\n"""		4220745	0					
ANR	4220993	Argument	t -> times		4220745	1					
ANR	4220994	PtrMemberAccess	t -> times		4220745	0					
ANR	4220995	Identifier	t		4220745	0					
ANR	4220996	Identifier	times		4220745	1					
ANR	4220997	ExpressionStatement	"r_cons_printf ( ""count = %d\\n"" , t -> count )"	4582:4:130114:130154	4220745	13	True				
ANR	4220998	CallExpression	"r_cons_printf ( ""count = %d\\n"" , t -> count )"		4220745	0					
ANR	4220999	Callee	r_cons_printf		4220745	0					
ANR	4221000	Identifier	r_cons_printf		4220745	0					
ANR	4221001	ArgumentList	"""count = %d\\n"""		4220745	1					
ANR	4221002	Argument	"""count = %d\\n"""		4220745	0					
ANR	4221003	PrimaryExpression	"""count = %d\\n"""		4220745	0					
ANR	4221004	Argument	t -> count		4220745	1					
ANR	4221005	PtrMemberAccess	t -> count		4220745	0					
ANR	4221006	Identifier	t		4220745	0					
ANR	4221007	Identifier	count		4220745	1					
ANR	4221008	BreakStatement	break ;	4585:3:130210:130215	4220745	14	True				
ANR	4221009	Label	case 'a' :	4586:2:130219:130227	4220745	15	True				
ANR	4221010	ExpressionStatement	"r_debug_trace_at ( core -> dbg , input + 3 )"	4587:3:130241:130280	4220745	16	True				
ANR	4221011	CallExpression	"r_debug_trace_at ( core -> dbg , input + 3 )"		4220745	0					
ANR	4221012	Callee	r_debug_trace_at		4220745	0					
ANR	4221013	Identifier	r_debug_trace_at		4220745	0					
ANR	4221014	ArgumentList	core -> dbg		4220745	1					
ANR	4221015	Argument	core -> dbg		4220745	0					
ANR	4221016	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221017	Identifier	core		4220745	0					
ANR	4221018	Identifier	dbg		4220745	1					
ANR	4221019	Argument	input + 3		4220745	1					
ANR	4221020	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221021	Identifier	input		4220745	0					
ANR	4221022	PrimaryExpression	3		4220745	1					
ANR	4221023	BreakStatement	break ;	4588:3:130285:130290	4220745	17	True				
ANR	4221024	Label	case 't' :	4589:2:130294:130302	4220745	18	True				
ANR	4221025	ExpressionStatement	"r_debug_trace_tag ( core -> dbg , atoi ( input + 3 ) )"	4590:3:130316:130363	4220745	19	True				
ANR	4221026	CallExpression	"r_debug_trace_tag ( core -> dbg , atoi ( input + 3 ) )"		4220745	0					
ANR	4221027	Callee	r_debug_trace_tag		4220745	0					
ANR	4221028	Identifier	r_debug_trace_tag		4220745	0					
ANR	4221029	ArgumentList	core -> dbg		4220745	1					
ANR	4221030	Argument	core -> dbg		4220745	0					
ANR	4221031	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221032	Identifier	core		4220745	0					
ANR	4221033	Identifier	dbg		4220745	1					
ANR	4221034	Argument	atoi ( input + 3 )		4220745	1					
ANR	4221035	CallExpression	atoi ( input + 3 )		4220745	0					
ANR	4221036	Callee	atoi		4220745	0					
ANR	4221037	Identifier	atoi		4220745	0					
ANR	4221038	ArgumentList	input + 3		4220745	1					
ANR	4221039	Argument	input + 3		4220745	0					
ANR	4221040	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221041	Identifier	input		4220745	0					
ANR	4221042	PrimaryExpression	3		4220745	1					
ANR	4221043	BreakStatement	break ;	4591:3:130368:130373	4220745	20	True				
ANR	4221044	Label	case 'c' :	4592:2:130377:130385	4220745	21	True				
ANR	4221045	IfStatement	if ( input [ 2 ] == '?' )		4220745	22					
ANR	4221046	Condition	input [ 2 ] == '?'	4593:7:130403:130417	4220745	0	True				
ANR	4221047	EqualityExpression	input [ 2 ] == '?'		4220745	0		==			
ANR	4221048	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221049	Identifier	input		4220745	0					
ANR	4221050	PrimaryExpression	2		4220745	1					
ANR	4221051	PrimaryExpression	'?'		4220745	1					
ANR	4221052	CompoundStatement		57:24:1478:1478	4220745	1					
ANR	4221053	ExpressionStatement	"r_cons_println ( ""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"" )"	4594:4:130426:130509	4220745	0	True				
ANR	4221054	CallExpression	"r_cons_println ( ""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"" )"		4220745	0					
ANR	4221055	Callee	r_cons_println		4220745	0					
ANR	4221056	Identifier	r_cons_println		4220745	0					
ANR	4221057	ArgumentList	"""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"""		4220745	1					
ANR	4221058	Argument	"""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"""		4220745	0					
ANR	4221059	PrimaryExpression	"""Usage: dtc [addr] ([from] [to] [addr]) - trace calls in debugger"""		4220745	0					
ANR	4221060	ElseStatement	else		4220745	0					
ANR	4221061	CompoundStatement		59:10:1579:1579	4220745	0					
ANR	4221062	ExpressionStatement	"debug_trace_calls ( core , input + 2 )"	4596:4:130527:130562	4220745	0	True				
ANR	4221063	CallExpression	"debug_trace_calls ( core , input + 2 )"		4220745	0					
ANR	4221064	Callee	debug_trace_calls		4220745	0					
ANR	4221065	Identifier	debug_trace_calls		4220745	0					
ANR	4221066	ArgumentList	core		4220745	1					
ANR	4221067	Argument	core		4220745	0					
ANR	4221068	Identifier	core		4220745	0					
ANR	4221069	Argument	input + 2		4220745	1					
ANR	4221070	AdditiveExpression	input + 2		4220745	0		+			
ANR	4221071	Identifier	input		4220745	0					
ANR	4221072	PrimaryExpression	2		4220745	1					
ANR	4221073	BreakStatement	break ;	4598:3:130572:130577	4220745	23	True				
ANR	4221074	Label	case 'd' :	4599:2:130581:130589	4220745	24	True				
ANR	4221075	ExpressionStatement	"min = r_num_math ( core -> num , input + 3 )"	4600:3:130603:130642	4220745	25	True				
ANR	4221076	AssignmentExpression	"min = r_num_math ( core -> num , input + 3 )"		4220745	0		=			
ANR	4221077	Identifier	min		4220745	0					
ANR	4221078	CallExpression	"r_num_math ( core -> num , input + 3 )"		4220745	1					
ANR	4221079	Callee	r_num_math		4220745	0					
ANR	4221080	Identifier	r_num_math		4220745	0					
ANR	4221081	ArgumentList	core -> num		4220745	1					
ANR	4221082	Argument	core -> num		4220745	0					
ANR	4221083	PtrMemberAccess	core -> num		4220745	0					
ANR	4221084	Identifier	core		4220745	0					
ANR	4221085	Identifier	num		4220745	1					
ANR	4221086	Argument	input + 3		4220745	1					
ANR	4221087	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221088	Identifier	input		4220745	0					
ANR	4221089	PrimaryExpression	3		4220745	1					
ANR	4221090	IfStatement	if ( input [ 2 ] == 'q' )		4220745	26					
ANR	4221091	Condition	input [ 2 ] == 'q'	4601:7:130651:130665	4220745	0	True				
ANR	4221092	EqualityExpression	input [ 2 ] == 'q'		4220745	0		==			
ANR	4221093	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221094	Identifier	input		4220745	0					
ANR	4221095	PrimaryExpression	2		4220745	1					
ANR	4221096	PrimaryExpression	'q'		4220745	1					
ANR	4221097	CompoundStatement		66:4:1742:1751	4220745	1					
ANR	4221098	IdentifierDeclStatement	int n = 0 ;	4602:4:130684:130693	4220745	0	True				
ANR	4221099	IdentifierDecl	n = 0		4220745	0					
ANR	4221100	IdentifierDeclType	int		4220745	0					
ANR	4221101	Identifier	n		4220745	1					
ANR	4221102	AssignmentExpression	n = 0		4220745	2		=			
ANR	4221103	Identifier	n		4220745	0					
ANR	4221104	PrimaryExpression	0		4220745	1					
ANR	4221105	Statement	r_list_foreach	4603:4:130699:130712	4220745	1	True				
ANR	4221106	Statement	(	4603:19:130714:130714	4220745	2	True				
ANR	4221107	Statement	core	4603:20:130715:130718	4220745	3	True				
ANR	4221108	Statement	->	4603:24:130719:130720	4220745	4	True				
ANR	4221109	Statement	dbg	4603:26:130721:130723	4220745	5	True				
ANR	4221110	Statement	->	4603:29:130724:130725	4220745	6	True				
ANR	4221111	Statement	trace	4603:31:130726:130730	4220745	7	True				
ANR	4221112	Statement	->	4603:36:130731:130732	4220745	8	True				
ANR	4221113	Statement	traces	4603:38:130733:130738	4220745	9	True				
ANR	4221114	Statement	","	4603:44:130739:130739	4220745	10	True				
ANR	4221115	Statement	iter	4603:46:130741:130744	4220745	11	True				
ANR	4221116	Statement	","	4603:50:130745:130745	4220745	12	True				
ANR	4221117	Statement	trace	4603:52:130747:130751	4220745	13	True				
ANR	4221118	Statement	)	4603:57:130752:130752	4220745	14	True				
ANR	4221119	CompoundStatement		67:59:1812:1812	4220745	15					
ANR	4221120	IfStatement	if ( n >= min )		4220745	0					
ANR	4221121	Condition	n >= min	4604:9:130765:130772	4220745	0	True				
ANR	4221122	RelationalExpression	n >= min		4220745	0		>=			
ANR	4221123	Identifier	n		4220745	0					
ANR	4221124	Identifier	min		4220745	1					
ANR	4221125	CompoundStatement		68:19:1833:1833	4220745	1					
ANR	4221126	ExpressionStatement	"r_cons_printf ( ""%d  "" , trace -> count )"	4605:6:130783:130819	4220745	0	True				
ANR	4221127	CallExpression	"r_cons_printf ( ""%d  "" , trace -> count )"		4220745	0					
ANR	4221128	Callee	r_cons_printf		4220745	0					
ANR	4221129	Identifier	r_cons_printf		4220745	0					
ANR	4221130	ArgumentList	"""%d  """		4220745	1					
ANR	4221131	Argument	"""%d  """		4220745	0					
ANR	4221132	PrimaryExpression	"""%d  """		4220745	0					
ANR	4221133	Argument	trace -> count		4220745	1					
ANR	4221134	PtrMemberAccess	trace -> count		4220745	0					
ANR	4221135	Identifier	trace		4220745	0					
ANR	4221136	Identifier	count		4220745	1					
ANR	4221137	Statement	r_cons_printf	4606:6:130827:130839	4220745	1	True				
ANR	4221138	Statement	(	4606:20:130841:130841	4220745	2	True				
ANR	4221139	Statement	"""0x%08"""	4606:21:130842:130848	4220745	3	True				
ANR	4221140	Statement	PFMT64x	4606:28:130849:130855	4220745	4	True				
ANR	4221141	Statement	"""\\n"""	4606:35:130856:130859	4220745	5	True				
ANR	4221142	Statement	","	4606:39:130860:130860	4220745	6	True				
ANR	4221143	Statement	trace	4606:41:130862:130866	4220745	7	True				
ANR	4221144	Statement	->	4606:46:130867:130868	4220745	8	True				
ANR	4221145	Statement	addr	4606:48:130869:130872	4220745	9	True				
ANR	4221146	Statement	)	4606:52:130873:130873	4220745	10	True				
ANR	4221147	ExpressionStatement		4606:53:130874:130874	4220745	11	True				
ANR	4221148	BreakStatement	break ;	4607:6:130882:130887	4220745	12	True				
ANR	4221149	ExpressionStatement	n ++	4609:5:130901:130904	4220745	1	True				
ANR	4221150	PostIncDecOperationExpression	n ++		4220745	0					
ANR	4221151	Identifier	n		4220745	0					
ANR	4221152	IncDec	++		4220745	1					
ANR	4221153	ElseStatement	else		4220745	0					
ANR	4221154	IfStatement	if ( input [ 2 ] == 'i' )		4220745	0					
ANR	4221155	Condition	input [ 2 ] == 'i'	4611:14:130926:130940	4220745	0	True				
ANR	4221156	EqualityExpression	input [ 2 ] == 'i'		4220745	0		==			
ANR	4221157	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221158	Identifier	input		4220745	0					
ANR	4221159	PrimaryExpression	2		4220745	1					
ANR	4221160	PrimaryExpression	'i'		4220745	1					
ANR	4221161	CompoundStatement		76:4:2007:2016	4220745	1					
ANR	4221162	IdentifierDeclStatement	int n = 0 ;	4612:4:130949:130958	4220745	0	True				
ANR	4221163	IdentifierDecl	n = 0		4220745	0					
ANR	4221164	IdentifierDeclType	int		4220745	0					
ANR	4221165	Identifier	n		4220745	1					
ANR	4221166	AssignmentExpression	n = 0		4220745	2		=			
ANR	4221167	Identifier	n		4220745	0					
ANR	4221168	PrimaryExpression	0		4220745	1					
ANR	4221169	Statement	r_list_foreach	4613:4:130964:130977	4220745	1	True				
ANR	4221170	Statement	(	4613:19:130979:130979	4220745	2	True				
ANR	4221171	Statement	core	4613:20:130980:130983	4220745	3	True				
ANR	4221172	Statement	->	4613:24:130984:130985	4220745	4	True				
ANR	4221173	Statement	dbg	4613:26:130986:130988	4220745	5	True				
ANR	4221174	Statement	->	4613:29:130989:130990	4220745	6	True				
ANR	4221175	Statement	trace	4613:31:130991:130995	4220745	7	True				
ANR	4221176	Statement	->	4613:36:130996:130997	4220745	8	True				
ANR	4221177	Statement	traces	4613:38:130998:131003	4220745	9	True				
ANR	4221178	Statement	","	4613:44:131004:131004	4220745	10	True				
ANR	4221179	Statement	iter	4613:46:131006:131009	4220745	11	True				
ANR	4221180	Statement	","	4613:50:131010:131010	4220745	12	True				
ANR	4221181	Statement	trace	4613:52:131012:131016	4220745	13	True				
ANR	4221182	Statement	)	4613:57:131017:131017	4220745	14	True				
ANR	4221183	CompoundStatement		77:59:2077:2077	4220745	15					
ANR	4221184	ExpressionStatement	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	4614:5:131026:131111	4220745	0	True				
ANR	4221185	AssignmentExpression	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		4220745	0		=			
ANR	4221186	Identifier	op		4220745	0					
ANR	4221187	CallExpression	"r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		4220745	1					
ANR	4221188	Callee	r_core_anal_op		4220745	0					
ANR	4221189	Identifier	r_core_anal_op		4220745	0					
ANR	4221190	ArgumentList	core		4220745	1					
ANR	4221191	Argument	core		4220745	0					
ANR	4221192	Identifier	core		4220745	0					
ANR	4221193	Argument	trace -> addr		4220745	1					
ANR	4221194	PtrMemberAccess	trace -> addr		4220745	0					
ANR	4221195	Identifier	trace		4220745	0					
ANR	4221196	Identifier	addr		4220745	1					
ANR	4221197	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		4220745	2					
ANR	4221198	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		4220745	0		|			
ANR	4221199	Identifier	R_ANAL_OP_MASK_BASIC		4220745	0					
ANR	4221200	Identifier	R_ANAL_OP_MASK_DISASM		4220745	1					
ANR	4221201	IfStatement	if ( n >= min )		4220745	1					
ANR	4221202	Condition	n >= min	4615:9:131122:131129	4220745	0	True				
ANR	4221203	RelationalExpression	n >= min		4220745	0		>=			
ANR	4221204	Identifier	n		4220745	0					
ANR	4221205	Identifier	min		4220745	1					
ANR	4221206	CompoundStatement		79:19:2190:2190	4220745	1					
ANR	4221207	ExpressionStatement	"r_cons_printf ( ""%d %s\\n"" , trace -> count , op -> mnemonic )"	4616:6:131140:131193	4220745	0	True				
ANR	4221208	CallExpression	"r_cons_printf ( ""%d %s\\n"" , trace -> count , op -> mnemonic )"		4220745	0					
ANR	4221209	Callee	r_cons_printf		4220745	0					
ANR	4221210	Identifier	r_cons_printf		4220745	0					
ANR	4221211	ArgumentList	"""%d %s\\n"""		4220745	1					
ANR	4221212	Argument	"""%d %s\\n"""		4220745	0					
ANR	4221213	PrimaryExpression	"""%d %s\\n"""		4220745	0					
ANR	4221214	Argument	trace -> count		4220745	1					
ANR	4221215	PtrMemberAccess	trace -> count		4220745	0					
ANR	4221216	Identifier	trace		4220745	0					
ANR	4221217	Identifier	count		4220745	1					
ANR	4221218	Argument	op -> mnemonic		4220745	2					
ANR	4221219	PtrMemberAccess	op -> mnemonic		4220745	0					
ANR	4221220	Identifier	op		4220745	0					
ANR	4221221	Identifier	mnemonic		4220745	1					
ANR	4221222	ExpressionStatement	n ++	4618:5:131207:131210	4220745	2	True				
ANR	4221223	PostIncDecOperationExpression	n ++		4220745	0					
ANR	4221224	Identifier	n		4220745	0					
ANR	4221225	IncDec	++		4220745	1					
ANR	4221226	ExpressionStatement	r_anal_op_free ( op )	4619:5:131217:131236	4220745	3	True				
ANR	4221227	CallExpression	r_anal_op_free ( op )		4220745	0					
ANR	4221228	Callee	r_anal_op_free		4220745	0					
ANR	4221229	Identifier	r_anal_op_free		4220745	0					
ANR	4221230	ArgumentList	op		4220745	1					
ANR	4221231	Argument	op		4220745	0					
ANR	4221232	Identifier	op		4220745	0					
ANR	4221233	ElseStatement	else		4220745	0					
ANR	4221234	IfStatement	if ( input [ 2 ] == ' ' )		4220745	0					
ANR	4221235	Condition	input [ 2 ] == ' '	4621:14:131258:131272	4220745	0	True				
ANR	4221236	EqualityExpression	input [ 2 ] == ' '		4220745	0		==			
ANR	4221237	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221238	Identifier	input		4220745	0					
ANR	4221239	PrimaryExpression	2		4220745	1					
ANR	4221240	PrimaryExpression	' '		4220745	1					
ANR	4221241	CompoundStatement		86:4:2339:2348	4220745	1					
ANR	4221242	IdentifierDeclStatement	int n = 0 ;	4622:4:131281:131290	4220745	0	True				
ANR	4221243	IdentifierDecl	n = 0		4220745	0					
ANR	4221244	IdentifierDeclType	int		4220745	0					
ANR	4221245	Identifier	n		4220745	1					
ANR	4221246	AssignmentExpression	n = 0		4220745	2		=			
ANR	4221247	Identifier	n		4220745	0					
ANR	4221248	PrimaryExpression	0		4220745	1					
ANR	4221249	Statement	r_list_foreach	4623:4:131296:131309	4220745	1	True				
ANR	4221250	Statement	(	4623:19:131311:131311	4220745	2	True				
ANR	4221251	Statement	core	4623:20:131312:131315	4220745	3	True				
ANR	4221252	Statement	->	4623:24:131316:131317	4220745	4	True				
ANR	4221253	Statement	dbg	4623:26:131318:131320	4220745	5	True				
ANR	4221254	Statement	->	4623:29:131321:131322	4220745	6	True				
ANR	4221255	Statement	trace	4623:31:131323:131327	4220745	7	True				
ANR	4221256	Statement	->	4623:36:131328:131329	4220745	8	True				
ANR	4221257	Statement	traces	4623:38:131330:131335	4220745	9	True				
ANR	4221258	Statement	","	4623:44:131336:131336	4220745	10	True				
ANR	4221259	Statement	iter	4623:46:131338:131341	4220745	11	True				
ANR	4221260	Statement	","	4623:50:131342:131342	4220745	12	True				
ANR	4221261	Statement	trace	4623:52:131344:131348	4220745	13	True				
ANR	4221262	Statement	)	4623:57:131349:131349	4220745	14	True				
ANR	4221263	CompoundStatement		87:59:2409:2409	4220745	15					
ANR	4221264	ExpressionStatement	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	4624:5:131358:131443	4220745	0	True				
ANR	4221265	AssignmentExpression	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		4220745	0		=			
ANR	4221266	Identifier	op		4220745	0					
ANR	4221267	CallExpression	"r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		4220745	1					
ANR	4221268	Callee	r_core_anal_op		4220745	0					
ANR	4221269	Identifier	r_core_anal_op		4220745	0					
ANR	4221270	ArgumentList	core		4220745	1					
ANR	4221271	Argument	core		4220745	0					
ANR	4221272	Identifier	core		4220745	0					
ANR	4221273	Argument	trace -> addr		4220745	1					
ANR	4221274	PtrMemberAccess	trace -> addr		4220745	0					
ANR	4221275	Identifier	trace		4220745	0					
ANR	4221276	Identifier	addr		4220745	1					
ANR	4221277	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		4220745	2					
ANR	4221278	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		4220745	0		|			
ANR	4221279	Identifier	R_ANAL_OP_MASK_BASIC		4220745	0					
ANR	4221280	Identifier	R_ANAL_OP_MASK_DISASM		4220745	1					
ANR	4221281	IfStatement	if ( n >= min )		4220745	1					
ANR	4221282	Condition	n >= min	4625:9:131454:131461	4220745	0	True				
ANR	4221283	RelationalExpression	n >= min		4220745	0		>=			
ANR	4221284	Identifier	n		4220745	0					
ANR	4221285	Identifier	min		4220745	1					
ANR	4221286	CompoundStatement		89:19:2522:2522	4220745	1					
ANR	4221287	Statement	r_cons_printf	4626:6:131472:131484	4220745	0	True				
ANR	4221288	Statement	(	4626:20:131486:131486	4220745	1	True				
ANR	4221289	Statement	"""0x%08"""	4626:21:131487:131493	4220745	2	True				
ANR	4221290	Statement	PFMT64x	4626:28:131494:131500	4220745	3	True				
ANR	4221291	Statement	""" %s\\n"""	4626:35:131501:131507	4220745	4	True				
ANR	4221292	Statement	","	4626:42:131508:131508	4220745	5	True				
ANR	4221293	Statement	trace	4626:44:131510:131514	4220745	6	True				
ANR	4221294	Statement	->	4626:49:131515:131516	4220745	7	True				
ANR	4221295	Statement	addr	4626:51:131517:131520	4220745	8	True				
ANR	4221296	Statement	","	4626:55:131521:131521	4220745	9	True				
ANR	4221297	Statement	op	4626:57:131523:131524	4220745	10	True				
ANR	4221298	Statement	->	4626:59:131525:131526	4220745	11	True				
ANR	4221299	Statement	mnemonic	4626:61:131527:131534	4220745	12	True				
ANR	4221300	Statement	)	4626:69:131535:131535	4220745	13	True				
ANR	4221301	ExpressionStatement		4626:70:131536:131536	4220745	14	True				
ANR	4221302	ExpressionStatement	n ++	4628:5:131550:131553	4220745	2	True				
ANR	4221303	PostIncDecOperationExpression	n ++		4220745	0					
ANR	4221304	Identifier	n		4220745	0					
ANR	4221305	IncDec	++		4220745	1					
ANR	4221306	ExpressionStatement	r_anal_op_free ( op )	4629:5:131560:131579	4220745	3	True				
ANR	4221307	CallExpression	r_anal_op_free ( op )		4220745	0					
ANR	4221308	Callee	r_anal_op_free		4220745	0					
ANR	4221309	Identifier	r_anal_op_free		4220745	0					
ANR	4221310	ArgumentList	op		4220745	1					
ANR	4221311	Argument	op		4220745	0					
ANR	4221312	Identifier	op		4220745	0					
ANR	4221313	ElseStatement	else		4220745	0					
ANR	4221314	CompoundStatement		95:10:2655:2655	4220745	0					
ANR	4221315	Statement	r_list_foreach	4634:4:131686:131699	4220745	0	True				
ANR	4221316	Statement	(	4634:19:131701:131701	4220745	1	True				
ANR	4221317	Statement	core	4634:20:131702:131705	4220745	2	True				
ANR	4221318	Statement	->	4634:24:131706:131707	4220745	3	True				
ANR	4221319	Statement	dbg	4634:26:131708:131710	4220745	4	True				
ANR	4221320	Statement	->	4634:29:131711:131712	4220745	5	True				
ANR	4221321	Statement	trace	4634:31:131713:131717	4220745	6	True				
ANR	4221322	Statement	->	4634:36:131718:131719	4220745	7	True				
ANR	4221323	Statement	traces	4634:38:131720:131725	4220745	8	True				
ANR	4221324	Statement	","	4634:44:131726:131726	4220745	9	True				
ANR	4221325	Statement	iter	4634:46:131728:131731	4220745	10	True				
ANR	4221326	Statement	","	4634:50:131732:131732	4220745	11	True				
ANR	4221327	Statement	trace	4634:52:131734:131738	4220745	12	True				
ANR	4221328	Statement	)	4634:57:131739:131739	4220745	13	True				
ANR	4221329	CompoundStatement		98:59:2799:2799	4220745	14					
ANR	4221330	ExpressionStatement	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	4635:5:131748:131833	4220745	0	True				
ANR	4221331	AssignmentExpression	"op = r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		4220745	0		=			
ANR	4221332	Identifier	op		4220745	0					
ANR	4221333	CallExpression	"r_core_anal_op ( core , trace -> addr , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		4220745	1					
ANR	4221334	Callee	r_core_anal_op		4220745	0					
ANR	4221335	Identifier	r_core_anal_op		4220745	0					
ANR	4221336	ArgumentList	core		4220745	1					
ANR	4221337	Argument	core		4220745	0					
ANR	4221338	Identifier	core		4220745	0					
ANR	4221339	Argument	trace -> addr		4220745	1					
ANR	4221340	PtrMemberAccess	trace -> addr		4220745	0					
ANR	4221341	Identifier	trace		4220745	0					
ANR	4221342	Identifier	addr		4220745	1					
ANR	4221343	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		4220745	2					
ANR	4221344	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		4220745	0		|			
ANR	4221345	Identifier	R_ANAL_OP_MASK_BASIC		4220745	0					
ANR	4221346	Identifier	R_ANAL_OP_MASK_DISASM		4220745	1					
ANR	4221347	Statement	r_cons_printf	4636:5:131840:131852	4220745	1	True				
ANR	4221348	Statement	(	4636:19:131854:131854	4220745	2	True				
ANR	4221349	Statement	"""0x%08"""	4636:20:131855:131861	4220745	3	True				
ANR	4221350	Statement	PFMT64x	4636:27:131862:131868	4220745	4	True				
ANR	4221351	Statement	""" %s\\n"""	4636:34:131869:131875	4220745	5	True				
ANR	4221352	Statement	","	4636:41:131876:131876	4220745	6	True				
ANR	4221353	Statement	trace	4636:43:131878:131882	4220745	7	True				
ANR	4221354	Statement	->	4636:48:131883:131884	4220745	8	True				
ANR	4221355	Statement	addr	4636:50:131885:131888	4220745	9	True				
ANR	4221356	Statement	","	4636:54:131889:131889	4220745	10	True				
ANR	4221357	Statement	op	4636:56:131891:131892	4220745	11	True				
ANR	4221358	Statement	->	4636:58:131893:131894	4220745	12	True				
ANR	4221359	Statement	mnemonic	4636:60:131895:131902	4220745	13	True				
ANR	4221360	Statement	)	4636:68:131903:131903	4220745	14	True				
ANR	4221361	ExpressionStatement		4636:69:131904:131904	4220745	15	True				
ANR	4221362	ExpressionStatement	r_anal_op_free ( op )	4637:5:131911:131930	4220745	16	True				
ANR	4221363	CallExpression	r_anal_op_free ( op )		4220745	0					
ANR	4221364	Callee	r_anal_op_free		4220745	0					
ANR	4221365	Identifier	r_anal_op_free		4220745	0					
ANR	4221366	ArgumentList	op		4220745	1					
ANR	4221367	Argument	op		4220745	0					
ANR	4221368	Identifier	op		4220745	0					
ANR	4221369	BreakStatement	break ;	4640:3:131946:131951	4220745	27	True				
ANR	4221370	Label	case 'g' :	4641:2:131955:131963	4220745	28	True				
ANR	4221371	ExpressionStatement	"dot_trace_traverse ( core , core -> dbg -> tree , input [ 2 ] )"	4642:3:131977:132029	4220745	29	True				
ANR	4221372	CallExpression	"dot_trace_traverse ( core , core -> dbg -> tree , input [ 2 ] )"		4220745	0					
ANR	4221373	Callee	dot_trace_traverse		4220745	0					
ANR	4221374	Identifier	dot_trace_traverse		4220745	0					
ANR	4221375	ArgumentList	core		4220745	1					
ANR	4221376	Argument	core		4220745	0					
ANR	4221377	Identifier	core		4220745	0					
ANR	4221378	Argument	core -> dbg -> tree		4220745	1					
ANR	4221379	PtrMemberAccess	core -> dbg -> tree		4220745	0					
ANR	4221380	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221381	Identifier	core		4220745	0					
ANR	4221382	Identifier	dbg		4220745	1					
ANR	4221383	Identifier	tree		4220745	1					
ANR	4221384	Argument	input [ 2 ]		4220745	2					
ANR	4221385	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221386	Identifier	input		4220745	0					
ANR	4221387	PrimaryExpression	2		4220745	1					
ANR	4221388	BreakStatement	break ;	4643:3:132034:132039	4220745	30	True				
ANR	4221389	Label	case '-' :	4644:2:132043:132051	4220745	31	True				
ANR	4221390	ExpressionStatement	r_tree_reset ( core -> dbg -> tree )	4645:3:132065:132095	4220745	32	True				
ANR	4221391	CallExpression	r_tree_reset ( core -> dbg -> tree )		4220745	0					
ANR	4221392	Callee	r_tree_reset		4220745	0					
ANR	4221393	Identifier	r_tree_reset		4220745	0					
ANR	4221394	ArgumentList	core -> dbg -> tree		4220745	1					
ANR	4221395	Argument	core -> dbg -> tree		4220745	0					
ANR	4221396	PtrMemberAccess	core -> dbg -> tree		4220745	0					
ANR	4221397	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221398	Identifier	core		4220745	0					
ANR	4221399	Identifier	dbg		4220745	1					
ANR	4221400	Identifier	tree		4220745	1					
ANR	4221401	ExpressionStatement	r_debug_trace_free ( core -> dbg -> trace )	4646:3:132100:132137	4220745	33	True				
ANR	4221402	CallExpression	r_debug_trace_free ( core -> dbg -> trace )		4220745	0					
ANR	4221403	Callee	r_debug_trace_free		4220745	0					
ANR	4221404	Identifier	r_debug_trace_free		4220745	0					
ANR	4221405	ArgumentList	core -> dbg -> trace		4220745	1					
ANR	4221406	Argument	core -> dbg -> trace		4220745	0					
ANR	4221407	PtrMemberAccess	core -> dbg -> trace		4220745	0					
ANR	4221408	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221409	Identifier	core		4220745	0					
ANR	4221410	Identifier	dbg		4220745	1					
ANR	4221411	Identifier	trace		4220745	1					
ANR	4221412	ExpressionStatement	r_debug_tracenodes_reset ( core -> dbg )	4647:3:132142:132178	4220745	34	True				
ANR	4221413	CallExpression	r_debug_tracenodes_reset ( core -> dbg )		4220745	0					
ANR	4221414	Callee	r_debug_tracenodes_reset		4220745	0					
ANR	4221415	Identifier	r_debug_tracenodes_reset		4220745	0					
ANR	4221416	ArgumentList	core -> dbg		4220745	1					
ANR	4221417	Argument	core -> dbg		4220745	0					
ANR	4221418	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221419	Identifier	core		4220745	0					
ANR	4221420	Identifier	dbg		4220745	1					
ANR	4221421	ExpressionStatement	core -> dbg -> trace = r_debug_trace_new ( )	4648:3:132183:132222	4220745	35	True				
ANR	4221422	AssignmentExpression	core -> dbg -> trace = r_debug_trace_new ( )		4220745	0		=			
ANR	4221423	PtrMemberAccess	core -> dbg -> trace		4220745	0					
ANR	4221424	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221425	Identifier	core		4220745	0					
ANR	4221426	Identifier	dbg		4220745	1					
ANR	4221427	Identifier	trace		4220745	1					
ANR	4221428	CallExpression	r_debug_trace_new ( )		4220745	1					
ANR	4221429	Callee	r_debug_trace_new		4220745	0					
ANR	4221430	Identifier	r_debug_trace_new		4220745	0					
ANR	4221431	ArgumentList			4220745	1					
ANR	4221432	BreakStatement	break ;	4649:3:132227:132232	4220745	36	True				
ANR	4221433	Label	case '+' :	4650:2:132236:132244	4220745	37	True				
ANR	4221434	IfStatement	if ( input [ 2 ] == '+' )		4220745	38					
ANR	4221435	Condition	input [ 2 ] == '+'	4651:7:132262:132276	4220745	0	True				
ANR	4221436	EqualityExpression	input [ 2 ] == '+'		4220745	0		==			
ANR	4221437	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221438	Identifier	input		4220745	0					
ANR	4221439	PrimaryExpression	2		4220745	1					
ANR	4221440	PrimaryExpression	'+'		4220745	1					
ANR	4221441	CompoundStatement		118:4:3447:3462	4220745	1					
ANR	4221442	IdentifierDeclStatement	"char * a , * s = r_str_trim_dup ( input + 3 ) ;"	4652:4:132295:132335	4220745	0	True				
ANR	4221443	IdentifierDecl	* a		4220745	0					
ANR	4221444	IdentifierDeclType	char *		4220745	0					
ANR	4221445	Identifier	a		4220745	1					
ANR	4221446	IdentifierDecl	* s = r_str_trim_dup ( input + 3 )		4220745	1					
ANR	4221447	IdentifierDeclType	char *		4220745	0					
ANR	4221448	Identifier	s		4220745	1					
ANR	4221449	AssignmentExpression	* s = r_str_trim_dup ( input + 3 )		4220745	2		=			
ANR	4221450	Identifier	s		4220745	0					
ANR	4221451	CallExpression	r_str_trim_dup ( input + 3 )		4220745	1					
ANR	4221452	Callee	r_str_trim_dup		4220745	0					
ANR	4221453	Identifier	r_str_trim_dup		4220745	0					
ANR	4221454	ArgumentList	input + 3		4220745	1					
ANR	4221455	Argument	input + 3		4220745	0					
ANR	4221456	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221457	Identifier	input		4220745	0					
ANR	4221458	PrimaryExpression	3		4220745	1					
ANR	4221459	IdentifierDeclStatement	"RList * args = r_str_split_list ( s , "" "" , 0 ) ;"	4653:4:132341:132383	4220745	1	True				
ANR	4221460	IdentifierDecl	"* args = r_str_split_list ( s , "" "" , 0 )"		4220745	0					
ANR	4221461	IdentifierDeclType	RList *		4220745	0					
ANR	4221462	Identifier	args		4220745	1					
ANR	4221463	AssignmentExpression	"* args = r_str_split_list ( s , "" "" , 0 )"		4220745	2		=			
ANR	4221464	Identifier	args		4220745	0					
ANR	4221465	CallExpression	"r_str_split_list ( s , "" "" , 0 )"		4220745	1					
ANR	4221466	Callee	r_str_split_list		4220745	0					
ANR	4221467	Identifier	r_str_split_list		4220745	0					
ANR	4221468	ArgumentList	s		4220745	1					
ANR	4221469	Argument	s		4220745	0					
ANR	4221470	Identifier	s		4220745	0					
ANR	4221471	Argument	""" """		4220745	1					
ANR	4221472	PrimaryExpression	""" """		4220745	0					
ANR	4221473	Argument	0		4220745	2					
ANR	4221474	PrimaryExpression	0		4220745	0					
ANR	4221475	IdentifierDeclStatement	RListIter * iter ;	4654:4:132389:132404	4220745	2	True				
ANR	4221476	IdentifierDecl	* iter		4220745	0					
ANR	4221477	IdentifierDeclType	RListIter *		4220745	0					
ANR	4221478	Identifier	iter		4220745	1					
ANR	4221479	Statement	r_list_foreach	4655:4:132410:132423	4220745	3	True				
ANR	4221480	Statement	(	4655:19:132425:132425	4220745	4	True				
ANR	4221481	Statement	args	4655:20:132426:132429	4220745	5	True				
ANR	4221482	Statement	","	4655:24:132430:132430	4220745	6	True				
ANR	4221483	Statement	iter	4655:26:132432:132435	4220745	7	True				
ANR	4221484	Statement	","	4655:30:132436:132436	4220745	8	True				
ANR	4221485	Statement	a	4655:32:132438:132438	4220745	9	True				
ANR	4221486	Statement	)	4655:33:132439:132439	4220745	10	True				
ANR	4221487	CompoundStatement		120:5:3506:3537	4220745	11					
ANR	4221488	IdentifierDeclStatement	"ut64 addr = r_num_get ( NULL , a ) ;"	4656:5:132448:132479	4220745	0	True				
ANR	4221489	IdentifierDecl	"addr = r_num_get ( NULL , a )"		4220745	0					
ANR	4221490	IdentifierDeclType	ut64		4220745	0					
ANR	4221491	Identifier	addr		4220745	1					
ANR	4221492	AssignmentExpression	"addr = r_num_get ( NULL , a )"		4220745	2		=			
ANR	4221493	Identifier	addr		4220745	0					
ANR	4221494	CallExpression	"r_num_get ( NULL , a )"		4220745	1					
ANR	4221495	Callee	r_num_get		4220745	0					
ANR	4221496	Identifier	r_num_get		4220745	0					
ANR	4221497	ArgumentList	NULL		4220745	1					
ANR	4221498	Argument	NULL		4220745	0					
ANR	4221499	Identifier	NULL		4220745	0					
ANR	4221500	Argument	a		4220745	1					
ANR	4221501	Identifier	a		4220745	0					
ANR	4221502	ExpressionStatement	"( void ) r_debug_trace_add ( core -> dbg , addr , 1 )"	4657:5:132486:132530	4220745	1	True				
ANR	4221503	CastExpression	"( void ) r_debug_trace_add ( core -> dbg , addr , 1 )"		4220745	0					
ANR	4221504	CastTarget	void		4220745	0					
ANR	4221505	CallExpression	"r_debug_trace_add ( core -> dbg , addr , 1 )"		4220745	1					
ANR	4221506	Callee	r_debug_trace_add		4220745	0					
ANR	4221507	Identifier	r_debug_trace_add		4220745	0					
ANR	4221508	ArgumentList	core -> dbg		4220745	1					
ANR	4221509	Argument	core -> dbg		4220745	0					
ANR	4221510	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221511	Identifier	core		4220745	0					
ANR	4221512	Identifier	dbg		4220745	1					
ANR	4221513	Argument	addr		4220745	1					
ANR	4221514	Identifier	addr		4220745	0					
ANR	4221515	Argument	1		4220745	2					
ANR	4221516	PrimaryExpression	1		4220745	0					
ANR	4221517	ExpressionStatement	r_list_free ( args )	4659:4:132542:132560	4220745	12	True				
ANR	4221518	CallExpression	r_list_free ( args )		4220745	0					
ANR	4221519	Callee	r_list_free		4220745	0					
ANR	4221520	Identifier	r_list_free		4220745	0					
ANR	4221521	ArgumentList	args		4220745	1					
ANR	4221522	Argument	args		4220745	0					
ANR	4221523	Identifier	args		4220745	0					
ANR	4221524	ExpressionStatement	free ( s )	4660:4:132566:132574	4220745	13	True				
ANR	4221525	CallExpression	free ( s )		4220745	0					
ANR	4221526	Callee	free		4220745	0					
ANR	4221527	Identifier	free		4220745	0					
ANR	4221528	ArgumentList	s		4220745	1					
ANR	4221529	Argument	s		4220745	0					
ANR	4221530	Identifier	s		4220745	0					
ANR	4221531	ElseStatement	else		4220745	0					
ANR	4221532	CompoundStatement		133:4:3826:3867	4220745	0					
ANR	4221533	ExpressionStatement	ptr = input + 2	4662:4:132592:132607	4220745	0	True				
ANR	4221534	AssignmentExpression	ptr = input + 2		4220745	0		=			
ANR	4221535	Identifier	ptr		4220745	0					
ANR	4221536	AdditiveExpression	input + 2		4220745	1		+			
ANR	4221537	Identifier	input		4220745	0					
ANR	4221538	PrimaryExpression	2		4220745	1					
ANR	4221539	ExpressionStatement	"addr = r_num_math ( core -> num , ptr )"	4663:4:132613:132647	4220745	1	True				
ANR	4221540	AssignmentExpression	"addr = r_num_math ( core -> num , ptr )"		4220745	0		=			
ANR	4221541	Identifier	addr		4220745	0					
ANR	4221542	CallExpression	"r_num_math ( core -> num , ptr )"		4220745	1					
ANR	4221543	Callee	r_num_math		4220745	0					
ANR	4221544	Identifier	r_num_math		4220745	0					
ANR	4221545	ArgumentList	core -> num		4220745	1					
ANR	4221546	Argument	core -> num		4220745	0					
ANR	4221547	PtrMemberAccess	core -> num		4220745	0					
ANR	4221548	Identifier	core		4220745	0					
ANR	4221549	Identifier	num		4220745	1					
ANR	4221550	Argument	ptr		4220745	1					
ANR	4221551	Identifier	ptr		4220745	0					
ANR	4221552	ExpressionStatement	"ptr = strchr ( ptr , ' ' )"	4664:4:132653:132676	4220745	2	True				
ANR	4221553	AssignmentExpression	"ptr = strchr ( ptr , ' ' )"		4220745	0		=			
ANR	4221554	Identifier	ptr		4220745	0					
ANR	4221555	CallExpression	"strchr ( ptr , ' ' )"		4220745	1					
ANR	4221556	Callee	strchr		4220745	0					
ANR	4221557	Identifier	strchr		4220745	0					
ANR	4221558	ArgumentList	ptr		4220745	1					
ANR	4221559	Argument	ptr		4220745	0					
ANR	4221560	Identifier	ptr		4220745	0					
ANR	4221561	Argument	' '		4220745	1					
ANR	4221562	PrimaryExpression	' '		4220745	0					
ANR	4221563	IdentifierDeclStatement	int count = 1 ;	4665:4:132682:132695	4220745	3	True				
ANR	4221564	IdentifierDecl	count = 1		4220745	0					
ANR	4221565	IdentifierDeclType	int		4220745	0					
ANR	4221566	Identifier	count		4220745	1					
ANR	4221567	AssignmentExpression	count = 1		4220745	2		=			
ANR	4221568	Identifier	count		4220745	0					
ANR	4221569	PrimaryExpression	1		4220745	1					
ANR	4221570	IfStatement	if ( ptr )		4220745	4					
ANR	4221571	Condition	ptr	4666:8:132705:132707	4220745	0	True				
ANR	4221572	Identifier	ptr		4220745	0					
ANR	4221573	CompoundStatement		130:13:3768:3768	4220745	1					
ANR	4221574	ExpressionStatement	"count = r_num_math ( core -> num , ptr + 1 )"	4667:5:132717:132756	4220745	0	True				
ANR	4221575	AssignmentExpression	"count = r_num_math ( core -> num , ptr + 1 )"		4220745	0		=			
ANR	4221576	Identifier	count		4220745	0					
ANR	4221577	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		4220745	1					
ANR	4221578	Callee	r_num_math		4220745	0					
ANR	4221579	Identifier	r_num_math		4220745	0					
ANR	4221580	ArgumentList	core -> num		4220745	1					
ANR	4221581	Argument	core -> num		4220745	0					
ANR	4221582	PtrMemberAccess	core -> num		4220745	0					
ANR	4221583	Identifier	core		4220745	0					
ANR	4221584	Identifier	num		4220745	1					
ANR	4221585	Argument	ptr + 1		4220745	1					
ANR	4221586	AdditiveExpression	ptr + 1		4220745	0		+			
ANR	4221587	Identifier	ptr		4220745	0					
ANR	4221588	PrimaryExpression	1		4220745	1					
ANR	4221589	IdentifierDeclStatement	"RAnalOp * op = r_core_op_anal ( core , addr ) ;"	4669:4:132768:132809	4220745	5	True				
ANR	4221590	IdentifierDecl	"* op = r_core_op_anal ( core , addr )"		4220745	0					
ANR	4221591	IdentifierDeclType	RAnalOp *		4220745	0					
ANR	4221592	Identifier	op		4220745	1					
ANR	4221593	AssignmentExpression	"* op = r_core_op_anal ( core , addr )"		4220745	2		=			
ANR	4221594	Identifier	op		4220745	0					
ANR	4221595	CallExpression	"r_core_op_anal ( core , addr )"		4220745	1					
ANR	4221596	Callee	r_core_op_anal		4220745	0					
ANR	4221597	Identifier	r_core_op_anal		4220745	0					
ANR	4221598	ArgumentList	core		4220745	1					
ANR	4221599	Argument	core		4220745	0					
ANR	4221600	Identifier	core		4220745	0					
ANR	4221601	Argument	addr		4220745	1					
ANR	4221602	Identifier	addr		4220745	0					
ANR	4221603	IfStatement	if ( op )		4220745	6					
ANR	4221604	Condition	op	4670:8:132819:132820	4220745	0	True				
ANR	4221605	Identifier	op		4220745	0					
ANR	4221606	CompoundStatement		135:5:3888:3956	4220745	1					
ANR	4221607	IdentifierDeclStatement	"RDebugTracepoint * tp = r_debug_trace_add ( core -> dbg , addr , op -> size ) ;"	4671:5:132830:132898	4220745	0	True				
ANR	4221608	IdentifierDecl	"* tp = r_debug_trace_add ( core -> dbg , addr , op -> size )"		4220745	0					
ANR	4221609	IdentifierDeclType	RDebugTracepoint *		4220745	0					
ANR	4221610	Identifier	tp		4220745	1					
ANR	4221611	AssignmentExpression	"* tp = r_debug_trace_add ( core -> dbg , addr , op -> size )"		4220745	2		=			
ANR	4221612	Identifier	tp		4220745	0					
ANR	4221613	CallExpression	"r_debug_trace_add ( core -> dbg , addr , op -> size )"		4220745	1					
ANR	4221614	Callee	r_debug_trace_add		4220745	0					
ANR	4221615	Identifier	r_debug_trace_add		4220745	0					
ANR	4221616	ArgumentList	core -> dbg		4220745	1					
ANR	4221617	Argument	core -> dbg		4220745	0					
ANR	4221618	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4221619	Identifier	core		4220745	0					
ANR	4221620	Identifier	dbg		4220745	1					
ANR	4221621	Argument	addr		4220745	1					
ANR	4221622	Identifier	addr		4220745	0					
ANR	4221623	Argument	op -> size		4220745	2					
ANR	4221624	PtrMemberAccess	op -> size		4220745	0					
ANR	4221625	Identifier	op		4220745	0					
ANR	4221626	Identifier	size		4220745	1					
ANR	4221627	IfStatement	if ( ! tp )		4220745	1					
ANR	4221628	Condition	! tp	4672:9:132909:132911	4220745	0	True				
ANR	4221629	UnaryOperationExpression	! tp		4220745	0					
ANR	4221630	UnaryOperator	!		4220745	0					
ANR	4221631	Identifier	tp		4220745	1					
ANR	4221632	CompoundStatement		136:14:3972:3972	4220745	1					
ANR	4221633	ExpressionStatement	r_anal_op_free ( op )	4673:6:132922:132941	4220745	0	True				
ANR	4221634	CallExpression	r_anal_op_free ( op )		4220745	0					
ANR	4221635	Callee	r_anal_op_free		4220745	0					
ANR	4221636	Identifier	r_anal_op_free		4220745	0					
ANR	4221637	ArgumentList	op		4220745	1					
ANR	4221638	Argument	op		4220745	0					
ANR	4221639	Identifier	op		4220745	0					
ANR	4221640	BreakStatement	break ;	4674:6:132949:132954	4220745	1	True				
ANR	4221641	ExpressionStatement	tp -> count = count	4676:5:132968:132985	4220745	2	True				
ANR	4221642	AssignmentExpression	tp -> count = count		4220745	0		=			
ANR	4221643	PtrMemberAccess	tp -> count		4220745	0					
ANR	4221644	Identifier	tp		4220745	0					
ANR	4221645	Identifier	count		4220745	1					
ANR	4221646	Identifier	count		4220745	1					
ANR	4221647	ExpressionStatement	"r_anal_trace_bb ( core -> anal , addr )"	4677:5:132992:133026	4220745	3	True				
ANR	4221648	CallExpression	"r_anal_trace_bb ( core -> anal , addr )"		4220745	0					
ANR	4221649	Callee	r_anal_trace_bb		4220745	0					
ANR	4221650	Identifier	r_anal_trace_bb		4220745	0					
ANR	4221651	ArgumentList	core -> anal		4220745	1					
ANR	4221652	Argument	core -> anal		4220745	0					
ANR	4221653	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221654	Identifier	core		4220745	0					
ANR	4221655	Identifier	anal		4220745	1					
ANR	4221656	Argument	addr		4220745	1					
ANR	4221657	Identifier	addr		4220745	0					
ANR	4221658	ExpressionStatement	r_anal_op_free ( op )	4678:5:133033:133052	4220745	4	True				
ANR	4221659	CallExpression	r_anal_op_free ( op )		4220745	0					
ANR	4221660	Callee	r_anal_op_free		4220745	0					
ANR	4221661	Identifier	r_anal_op_free		4220745	0					
ANR	4221662	ArgumentList	op		4220745	1					
ANR	4221663	Argument	op		4220745	0					
ANR	4221664	Identifier	op		4220745	0					
ANR	4221665	ElseStatement	else		4220745	0					
ANR	4221666	CompoundStatement		143:11:4123:4123	4220745	0					
ANR	4221667	Statement	eprintf	4680:5:133072:133078	4220745	0	True				
ANR	4221668	Statement	(	4680:13:133080:133080	4220745	1	True				
ANR	4221669	Statement	"""Cannot analyze opcode at 0x%08"""	4680:14:133081:133112	4220745	2	True				
ANR	4221670	Statement	PFMT64x	4680:47:133114:133120	4220745	3	True				
ANR	4221671	Statement	"""\\n"""	4680:55:133122:133125	4220745	4	True				
ANR	4221672	Statement	","	4680:59:133126:133126	4220745	5	True				
ANR	4221673	Statement	addr	4680:61:133128:133131	4220745	6	True				
ANR	4221674	Statement	)	4680:65:133132:133132	4220745	7	True				
ANR	4221675	ExpressionStatement		4680:66:133133:133133	4220745	8	True				
ANR	4221676	BreakStatement	break ;	4683:3:133149:133154	4220745	39	True				
ANR	4221677	Label	case 'e' :	4684:2:133158:133166	4220745	40	True				
ANR	4221678	IfStatement	if ( ! core -> anal -> esil )		4220745	41					
ANR	4221679	Condition	! core -> anal -> esil	4685:7:133184:133200	4220745	0	True				
ANR	4221680	UnaryOperationExpression	! core -> anal -> esil		4220745	0					
ANR	4221681	UnaryOperator	!		4220745	0					
ANR	4221682	PtrMemberAccess	core -> anal -> esil		4220745	1					
ANR	4221683	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221684	Identifier	core		4220745	0					
ANR	4221685	Identifier	anal		4220745	1					
ANR	4221686	Identifier	esil		4220745	1					
ANR	4221687	CompoundStatement		155:4:4586:4657	4220745	1					
ANR	4221688	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	4686:4:133209:133274	4220745	0	True				
ANR	4221689	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		4220745	0					
ANR	4221690	IdentifierDeclType	int		4220745	0					
ANR	4221691	Identifier	stacksize		4220745	1					
ANR	4221692	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		4220745	2		=			
ANR	4221693	Identifier	stacksize		4220745	0					
ANR	4221694	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		4220745	1					
ANR	4221695	Callee	r_config_get_i		4220745	0					
ANR	4221696	Identifier	r_config_get_i		4220745	0					
ANR	4221697	ArgumentList	core -> config		4220745	1					
ANR	4221698	Argument	core -> config		4220745	0					
ANR	4221699	PtrMemberAccess	core -> config		4220745	0					
ANR	4221700	Identifier	core		4220745	0					
ANR	4221701	Identifier	config		4220745	1					
ANR	4221702	Argument	"""esil.stack.depth"""		4220745	1					
ANR	4221703	PrimaryExpression	"""esil.stack.depth"""		4220745	0					
ANR	4221704	IdentifierDeclStatement	"int romem = r_config_get_i ( core -> config , ""esil.romem"" ) ;"	4687:4:133280:133335	4220745	1	True				
ANR	4221705	IdentifierDecl	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		4220745	0					
ANR	4221706	IdentifierDeclType	int		4220745	0					
ANR	4221707	Identifier	romem		4220745	1					
ANR	4221708	AssignmentExpression	"romem = r_config_get_i ( core -> config , ""esil.romem"" )"		4220745	2		=			
ANR	4221709	Identifier	romem		4220745	0					
ANR	4221710	CallExpression	"r_config_get_i ( core -> config , ""esil.romem"" )"		4220745	1					
ANR	4221711	Callee	r_config_get_i		4220745	0					
ANR	4221712	Identifier	r_config_get_i		4220745	0					
ANR	4221713	ArgumentList	core -> config		4220745	1					
ANR	4221714	Argument	core -> config		4220745	0					
ANR	4221715	PtrMemberAccess	core -> config		4220745	0					
ANR	4221716	Identifier	core		4220745	0					
ANR	4221717	Identifier	config		4220745	1					
ANR	4221718	Argument	"""esil.romem"""		4220745	1					
ANR	4221719	PrimaryExpression	"""esil.romem"""		4220745	0					
ANR	4221720	IdentifierDeclStatement	"int stats = r_config_get_i ( core -> config , ""esil.stats"" ) ;"	4688:4:133341:133396	4220745	2	True				
ANR	4221721	IdentifierDecl	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		4220745	0					
ANR	4221722	IdentifierDeclType	int		4220745	0					
ANR	4221723	Identifier	stats		4220745	1					
ANR	4221724	AssignmentExpression	"stats = r_config_get_i ( core -> config , ""esil.stats"" )"		4220745	2		=			
ANR	4221725	Identifier	stats		4220745	0					
ANR	4221726	CallExpression	"r_config_get_i ( core -> config , ""esil.stats"" )"		4220745	1					
ANR	4221727	Callee	r_config_get_i		4220745	0					
ANR	4221728	Identifier	r_config_get_i		4220745	0					
ANR	4221729	ArgumentList	core -> config		4220745	1					
ANR	4221730	Argument	core -> config		4220745	0					
ANR	4221731	PtrMemberAccess	core -> config		4220745	0					
ANR	4221732	Identifier	core		4220745	0					
ANR	4221733	Identifier	config		4220745	1					
ANR	4221734	Argument	"""esil.stats"""		4220745	1					
ANR	4221735	PrimaryExpression	"""esil.stats"""		4220745	0					
ANR	4221736	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	4689:4:133402:133459	4220745	3	True				
ANR	4221737	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		4220745	0					
ANR	4221738	IdentifierDeclType	int		4220745	0					
ANR	4221739	Identifier	iotrap		4220745	1					
ANR	4221740	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		4220745	2		=			
ANR	4221741	Identifier	iotrap		4220745	0					
ANR	4221742	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		4220745	1					
ANR	4221743	Callee	r_config_get_i		4220745	0					
ANR	4221744	Identifier	r_config_get_i		4220745	0					
ANR	4221745	ArgumentList	core -> config		4220745	1					
ANR	4221746	Argument	core -> config		4220745	0					
ANR	4221747	PtrMemberAccess	core -> config		4220745	0					
ANR	4221748	Identifier	core		4220745	0					
ANR	4221749	Identifier	config		4220745	1					
ANR	4221750	Argument	"""esil.iotrap"""		4220745	1					
ANR	4221751	PrimaryExpression	"""esil.iotrap"""		4220745	0					
ANR	4221752	IdentifierDeclStatement	"int nonull = r_config_get_i ( core -> config , ""esil.nonull"" ) ;"	4690:4:133465:133522	4220745	4	True				
ANR	4221753	IdentifierDecl	"nonull = r_config_get_i ( core -> config , ""esil.nonull"" )"		4220745	0					
ANR	4221754	IdentifierDeclType	int		4220745	0					
ANR	4221755	Identifier	nonull		4220745	1					
ANR	4221756	AssignmentExpression	"nonull = r_config_get_i ( core -> config , ""esil.nonull"" )"		4220745	2		=			
ANR	4221757	Identifier	nonull		4220745	0					
ANR	4221758	CallExpression	"r_config_get_i ( core -> config , ""esil.nonull"" )"		4220745	1					
ANR	4221759	Callee	r_config_get_i		4220745	0					
ANR	4221760	Identifier	r_config_get_i		4220745	0					
ANR	4221761	ArgumentList	core -> config		4220745	1					
ANR	4221762	Argument	core -> config		4220745	0					
ANR	4221763	PtrMemberAccess	core -> config		4220745	0					
ANR	4221764	Identifier	core		4220745	0					
ANR	4221765	Identifier	config		4220745	1					
ANR	4221766	Argument	"""esil.nonull"""		4220745	1					
ANR	4221767	PrimaryExpression	"""esil.nonull"""		4220745	0					
ANR	4221768	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	4691:4:133528:133599	4220745	5	True				
ANR	4221769	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		4220745	0					
ANR	4221770	IdentifierDeclType	unsigned int		4220745	0					
ANR	4221771	Identifier	addrsize		4220745	1					
ANR	4221772	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		4220745	2		=			
ANR	4221773	Identifier	addrsize		4220745	0					
ANR	4221774	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		4220745	1					
ANR	4221775	Callee	r_config_get_i		4220745	0					
ANR	4221776	Identifier	r_config_get_i		4220745	0					
ANR	4221777	ArgumentList	core -> config		4220745	1					
ANR	4221778	Argument	core -> config		4220745	0					
ANR	4221779	PtrMemberAccess	core -> config		4220745	0					
ANR	4221780	Identifier	core		4220745	0					
ANR	4221781	Identifier	config		4220745	1					
ANR	4221782	Argument	"""esil.addr.size"""		4220745	1					
ANR	4221783	PrimaryExpression	"""esil.addr.size"""		4220745	0					
ANR	4221784	IfStatement	"if ( ! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		4220745	6					
ANR	4221785	Condition	"! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	4692:8:133609:133675	4220745	0	True				
ANR	4221786	UnaryOperationExpression	"! ( core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		4220745	0					
ANR	4221787	UnaryOperator	!		4220745	0					
ANR	4221788	AssignmentExpression	"core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		4220745	1		=			
ANR	4221789	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221790	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221791	Identifier	core		4220745	0					
ANR	4221792	Identifier	anal		4220745	1					
ANR	4221793	Identifier	esil		4220745	1					
ANR	4221794	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		4220745	1					
ANR	4221795	Callee	r_anal_esil_new		4220745	0					
ANR	4221796	Identifier	r_anal_esil_new		4220745	0					
ANR	4221797	ArgumentList	stacksize		4220745	1					
ANR	4221798	Argument	stacksize		4220745	0					
ANR	4221799	Identifier	stacksize		4220745	0					
ANR	4221800	Argument	iotrap		4220745	1					
ANR	4221801	Identifier	iotrap		4220745	0					
ANR	4221802	Argument	addrsize		4220745	2					
ANR	4221803	Identifier	addrsize		4220745	0					
ANR	4221804	CompoundStatement		156:77:4736:4736	4220745	1					
ANR	4221805	ReturnStatement	return 0 ;	4693:5:133685:133693	4220745	0	True				
ANR	4221806	PrimaryExpression	0		4220745	0					
ANR	4221807	ExpressionStatement	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , romem , stats , nonull )"	4695:4:133705:133775	4220745	7	True				
ANR	4221808	CallExpression	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , romem , stats , nonull )"		4220745	0					
ANR	4221809	Callee	r_anal_esil_setup		4220745	0					
ANR	4221810	Identifier	r_anal_esil_setup		4220745	0					
ANR	4221811	ArgumentList	core -> anal -> esil		4220745	1					
ANR	4221812	Argument	core -> anal -> esil		4220745	0					
ANR	4221813	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221814	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221815	Identifier	core		4220745	0					
ANR	4221816	Identifier	anal		4220745	1					
ANR	4221817	Identifier	esil		4220745	1					
ANR	4221818	Argument	core -> anal		4220745	1					
ANR	4221819	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221820	Identifier	core		4220745	0					
ANR	4221821	Identifier	anal		4220745	1					
ANR	4221822	Argument	romem		4220745	2					
ANR	4221823	Identifier	romem		4220745	0					
ANR	4221824	Argument	stats		4220745	3					
ANR	4221825	Identifier	stats		4220745	0					
ANR	4221826	Argument	nonull		4220745	4					
ANR	4221827	Identifier	nonull		4220745	0					
ANR	4221828	SwitchStatement	switch ( input [ 2 ] )		4220745	42					
ANR	4221829	Condition	input [ 2 ]	4697:11:133793:133800	4220745	0	True				
ANR	4221830	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4221831	Identifier	input		4220745	0					
ANR	4221832	PrimaryExpression	2		4220745	1					
ANR	4221833	CompoundStatement		161:21:4861:4861	4220745	1					
ANR	4221834	Label	case 0 :	4698:3:133808:133814	4220745	0	True				
ANR	4221835	ExpressionStatement	r_anal_esil_trace_list ( core -> anal -> esil )	4699:4:133829:133870	4220745	1	True				
ANR	4221836	CallExpression	r_anal_esil_trace_list ( core -> anal -> esil )		4220745	0					
ANR	4221837	Callee	r_anal_esil_trace_list		4220745	0					
ANR	4221838	Identifier	r_anal_esil_trace_list		4220745	0					
ANR	4221839	ArgumentList	core -> anal -> esil		4220745	1					
ANR	4221840	Argument	core -> anal -> esil		4220745	0					
ANR	4221841	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221842	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221843	Identifier	core		4220745	0					
ANR	4221844	Identifier	anal		4220745	1					
ANR	4221845	Identifier	esil		4220745	1					
ANR	4221846	BreakStatement	break ;	4700:4:133876:133881	4220745	2	True				
ANR	4221847	Label	case 'i' :	4701:3:133886:133894	4220745	3	True				
ANR	4221848	CompoundStatement		170:4:5070:5132	4220745	4					
ANR	4221849	IdentifierDeclStatement	"ut64 addr = r_num_math ( core -> num , input + 3 ) ;"	4702:4:133912:133957	4220745	0	True				
ANR	4221850	IdentifierDecl	"addr = r_num_math ( core -> num , input + 3 )"		4220745	0					
ANR	4221851	IdentifierDeclType	ut64		4220745	0					
ANR	4221852	Identifier	addr		4220745	1					
ANR	4221853	AssignmentExpression	"addr = r_num_math ( core -> num , input + 3 )"		4220745	2		=			
ANR	4221854	Identifier	addr		4220745	0					
ANR	4221855	CallExpression	"r_num_math ( core -> num , input + 3 )"		4220745	1					
ANR	4221856	Callee	r_num_math		4220745	0					
ANR	4221857	Identifier	r_num_math		4220745	0					
ANR	4221858	ArgumentList	core -> num		4220745	1					
ANR	4221859	Argument	core -> num		4220745	0					
ANR	4221860	PtrMemberAccess	core -> num		4220745	0					
ANR	4221861	Identifier	core		4220745	0					
ANR	4221862	Identifier	num		4220745	1					
ANR	4221863	Argument	input + 3		4220745	1					
ANR	4221864	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221865	Identifier	input		4220745	0					
ANR	4221866	PrimaryExpression	3		4220745	1					
ANR	4221867	IfStatement	if ( ! addr )		4220745	1					
ANR	4221868	Condition	! addr	4703:8:133967:133971	4220745	0	True				
ANR	4221869	UnaryOperationExpression	! addr		4220745	0					
ANR	4221870	UnaryOperator	!		4220745	0					
ANR	4221871	Identifier	addr		4220745	1					
ANR	4221872	CompoundStatement		167:15:5032:5032	4220745	1					
ANR	4221873	ExpressionStatement	addr = core -> offset	4704:5:133981:134000	4220745	0	True				
ANR	4221874	AssignmentExpression	addr = core -> offset		4220745	0		=			
ANR	4221875	Identifier	addr		4220745	0					
ANR	4221876	PtrMemberAccess	core -> offset		4220745	1					
ANR	4221877	Identifier	core		4220745	0					
ANR	4221878	Identifier	offset		4220745	1					
ANR	4221879	IdentifierDeclStatement	"RAnalOp * op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL ) ;"	4706:4:134012:134074	4220745	2	True				
ANR	4221880	IdentifierDecl	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL )"		4220745	0					
ANR	4221881	IdentifierDeclType	RAnalOp *		4220745	0					
ANR	4221882	Identifier	op		4220745	1					
ANR	4221883	AssignmentExpression	"* op = r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL )"		4220745	2		=			
ANR	4221884	Identifier	op		4220745	0					
ANR	4221885	CallExpression	"r_core_anal_op ( core , addr , R_ANAL_OP_MASK_ESIL )"		4220745	1					
ANR	4221886	Callee	r_core_anal_op		4220745	0					
ANR	4221887	Identifier	r_core_anal_op		4220745	0					
ANR	4221888	ArgumentList	core		4220745	1					
ANR	4221889	Argument	core		4220745	0					
ANR	4221890	Identifier	core		4220745	0					
ANR	4221891	Argument	addr		4220745	1					
ANR	4221892	Identifier	addr		4220745	0					
ANR	4221893	Argument	R_ANAL_OP_MASK_ESIL		4220745	2					
ANR	4221894	Identifier	R_ANAL_OP_MASK_ESIL		4220745	0					
ANR	4221895	IfStatement	if ( op )		4220745	3					
ANR	4221896	Condition	op	4707:8:134084:134085	4220745	0	True				
ANR	4221897	Identifier	op		4220745	0					
ANR	4221898	CompoundStatement		171:12:5146:5146	4220745	1					
ANR	4221899	ExpressionStatement	"r_anal_esil_trace ( core -> anal -> esil , op )"	4708:5:134095:134135	4220745	0	True				
ANR	4221900	CallExpression	"r_anal_esil_trace ( core -> anal -> esil , op )"		4220745	0					
ANR	4221901	Callee	r_anal_esil_trace		4220745	0					
ANR	4221902	Identifier	r_anal_esil_trace		4220745	0					
ANR	4221903	ArgumentList	core -> anal -> esil		4220745	1					
ANR	4221904	Argument	core -> anal -> esil		4220745	0					
ANR	4221905	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221906	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221907	Identifier	core		4220745	0					
ANR	4221908	Identifier	anal		4220745	1					
ANR	4221909	Identifier	esil		4220745	1					
ANR	4221910	Argument	op		4220745	1					
ANR	4221911	Identifier	op		4220745	0					
ANR	4221912	ExpressionStatement	r_anal_op_free ( op )	4710:4:134147:134166	4220745	4	True				
ANR	4221913	CallExpression	r_anal_op_free ( op )		4220745	0					
ANR	4221914	Callee	r_anal_op_free		4220745	0					
ANR	4221915	Identifier	r_anal_op_free		4220745	0					
ANR	4221916	ArgumentList	op		4220745	1					
ANR	4221917	Argument	op		4220745	0					
ANR	4221918	Identifier	op		4220745	0					
ANR	4221919	BreakStatement	break ;	4711:5:134173:134178	4220745	5	True				
ANR	4221920	Label	case '-' :	4712:3:134183:134191	4220745	6	True				
ANR	4221921	IfStatement	"if ( ! strcmp ( input + 3 , ""*"" ) )"		4220745	7					
ANR	4221922	Condition	"! strcmp ( input + 3 , ""*"" )"	4713:8:134211:134234	4220745	0	True				
ANR	4221923	UnaryOperationExpression	"! strcmp ( input + 3 , ""*"" )"		4220745	0					
ANR	4221924	UnaryOperator	!		4220745	0					
ANR	4221925	CallExpression	"strcmp ( input + 3 , ""*"" )"		4220745	1					
ANR	4221926	Callee	strcmp		4220745	0					
ANR	4221927	Identifier	strcmp		4220745	0					
ANR	4221928	ArgumentList	input + 3		4220745	1					
ANR	4221929	Argument	input + 3		4220745	0					
ANR	4221930	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221931	Identifier	input		4220745	0					
ANR	4221932	PrimaryExpression	3		4220745	1					
ANR	4221933	Argument	"""*"""		4220745	1					
ANR	4221934	PrimaryExpression	"""*"""		4220745	0					
ANR	4221935	CompoundStatement		177:34:5295:5295	4220745	1					
ANR	4221936	IfStatement	if ( core -> anal -> esil )		4220745	0					
ANR	4221937	Condition	core -> anal -> esil	4714:9:134248:134263	4220745	0	True				
ANR	4221938	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221939	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221940	Identifier	core		4220745	0					
ANR	4221941	Identifier	anal		4220745	1					
ANR	4221942	Identifier	esil		4220745	1					
ANR	4221943	CompoundStatement		178:27:5324:5324	4220745	1					
ANR	4221944	ExpressionStatement	sdb_free ( core -> anal -> esil -> db_trace )	4715:6:134274:134311	4220745	0	True				
ANR	4221945	CallExpression	sdb_free ( core -> anal -> esil -> db_trace )		4220745	0					
ANR	4221946	Callee	sdb_free		4220745	0					
ANR	4221947	Identifier	sdb_free		4220745	0					
ANR	4221948	ArgumentList	core -> anal -> esil -> db_trace		4220745	1					
ANR	4221949	Argument	core -> anal -> esil -> db_trace		4220745	0					
ANR	4221950	PtrMemberAccess	core -> anal -> esil -> db_trace		4220745	0					
ANR	4221951	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221952	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221953	Identifier	core		4220745	0					
ANR	4221954	Identifier	anal		4220745	1					
ANR	4221955	Identifier	esil		4220745	1					
ANR	4221956	Identifier	db_trace		4220745	1					
ANR	4221957	ExpressionStatement	core -> anal -> esil -> db_trace = sdb_new0 ( )	4716:6:134319:134359	4220745	1	True				
ANR	4221958	AssignmentExpression	core -> anal -> esil -> db_trace = sdb_new0 ( )		4220745	0		=			
ANR	4221959	PtrMemberAccess	core -> anal -> esil -> db_trace		4220745	0					
ANR	4221960	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4221961	PtrMemberAccess	core -> anal		4220745	0					
ANR	4221962	Identifier	core		4220745	0					
ANR	4221963	Identifier	anal		4220745	1					
ANR	4221964	Identifier	esil		4220745	1					
ANR	4221965	Identifier	db_trace		4220745	1					
ANR	4221966	CallExpression	sdb_new0 ( )		4220745	1					
ANR	4221967	Callee	sdb_new0		4220745	0					
ANR	4221968	Identifier	sdb_new0		4220745	0					
ANR	4221969	ArgumentList			4220745	1					
ANR	4221970	ElseStatement	else		4220745	0					
ANR	4221971	CompoundStatement		182:11:5437:5437	4220745	0					
ANR	4221972	ExpressionStatement	"eprintf ( ""TODO: dte- cannot delete specific logs. Use dte-*\\n"" )"	4719:5:134386:134449	4220745	0	True				
ANR	4221973	CallExpression	"eprintf ( ""TODO: dte- cannot delete specific logs. Use dte-*\\n"" )"		4220745	0					
ANR	4221974	Callee	eprintf		4220745	0					
ANR	4221975	Identifier	eprintf		4220745	0					
ANR	4221976	ArgumentList	"""TODO: dte- cannot delete specific logs. Use dte-*\\n"""		4220745	1					
ANR	4221977	Argument	"""TODO: dte- cannot delete specific logs. Use dte-*\\n"""		4220745	0					
ANR	4221978	PrimaryExpression	"""TODO: dte- cannot delete specific logs. Use dte-*\\n"""		4220745	0					
ANR	4221979	BreakStatement	break ;	4721:4:134461:134466	4220745	8	True				
ANR	4221980	Label	case ' ' :	4722:3:134471:134479	4220745	9	True				
ANR	4221981	CompoundStatement		187:4:5555:5581	4220745	10					
ANR	4221982	IdentifierDeclStatement	int idx = atoi ( input + 3 ) ;	4723:4:134497:134523	4220745	0	True				
ANR	4221983	IdentifierDecl	idx = atoi ( input + 3 )		4220745	0					
ANR	4221984	IdentifierDeclType	int		4220745	0					
ANR	4221985	Identifier	idx		4220745	1					
ANR	4221986	AssignmentExpression	idx = atoi ( input + 3 )		4220745	2		=			
ANR	4221987	Identifier	idx		4220745	0					
ANR	4221988	CallExpression	atoi ( input + 3 )		4220745	1					
ANR	4221989	Callee	atoi		4220745	0					
ANR	4221990	Identifier	atoi		4220745	0					
ANR	4221991	ArgumentList	input + 3		4220745	1					
ANR	4221992	Argument	input + 3		4220745	0					
ANR	4221993	AdditiveExpression	input + 3		4220745	0		+			
ANR	4221994	Identifier	input		4220745	0					
ANR	4221995	PrimaryExpression	3		4220745	1					
ANR	4221996	ExpressionStatement	"r_anal_esil_trace_show ( core -> anal -> esil , idx )"	4724:4:134529:134581	4220745	1	True				
ANR	4221997	CallExpression	"r_anal_esil_trace_show ( core -> anal -> esil , idx )"		4220745	0					
ANR	4221998	Callee	r_anal_esil_trace_show		4220745	0					
ANR	4221999	Identifier	r_anal_esil_trace_show		4220745	0					
ANR	4222000	ArgumentList	core -> anal -> esil		4220745	1					
ANR	4222001	Argument	core -> anal -> esil		4220745	0					
ANR	4222002	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4222003	PtrMemberAccess	core -> anal		4220745	0					
ANR	4222004	Identifier	core		4220745	0					
ANR	4222005	Identifier	anal		4220745	1					
ANR	4222006	Identifier	esil		4220745	1					
ANR	4222007	Argument	idx		4220745	1					
ANR	4222008	Identifier	idx		4220745	0					
ANR	4222009	BreakStatement	break ;	4726:5:134588:134593	4220745	11	True				
ANR	4222010	Label	case 'k' :	4727:3:134598:134606	4220745	12	True				
ANR	4222011	IfStatement	if ( input [ 3 ] == ' ' )		4220745	13					
ANR	4222012	Condition	input [ 3 ] == ' '	4728:8:134626:134640	4220745	0	True				
ANR	4222013	EqualityExpression	input [ 3 ] == ' '		4220745	0		==			
ANR	4222014	ArrayIndexing	input [ 3 ]		4220745	0					
ANR	4222015	Identifier	input		4220745	0					
ANR	4222016	PrimaryExpression	3		4220745	1					
ANR	4222017	PrimaryExpression	' '		4220745	1					
ANR	4222018	CompoundStatement		193:5:5708:5784	4220745	1					
ANR	4222019	IdentifierDeclStatement	"char * s = sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 ) ;"	4729:5:134650:134726	4220745	0	True				
ANR	4222020	IdentifierDecl	"* s = sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 )"		4220745	0					
ANR	4222021	IdentifierDeclType	char *		4220745	0					
ANR	4222022	Identifier	s		4220745	1					
ANR	4222023	AssignmentExpression	"* s = sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 )"		4220745	2		=			
ANR	4222024	Identifier	s		4220745	0					
ANR	4222025	CallExpression	"sdb_querys ( core -> anal -> esil -> db_trace , NULL , 0 , input + 4 )"		4220745	1					
ANR	4222026	Callee	sdb_querys		4220745	0					
ANR	4222027	Identifier	sdb_querys		4220745	0					
ANR	4222028	ArgumentList	core -> anal -> esil -> db_trace		4220745	1					
ANR	4222029	Argument	core -> anal -> esil -> db_trace		4220745	0					
ANR	4222030	PtrMemberAccess	core -> anal -> esil -> db_trace		4220745	0					
ANR	4222031	PtrMemberAccess	core -> anal -> esil		4220745	0					
ANR	4222032	PtrMemberAccess	core -> anal		4220745	0					
ANR	4222033	Identifier	core		4220745	0					
ANR	4222034	Identifier	anal		4220745	1					
ANR	4222035	Identifier	esil		4220745	1					
ANR	4222036	Identifier	db_trace		4220745	1					
ANR	4222037	Argument	NULL		4220745	1					
ANR	4222038	Identifier	NULL		4220745	0					
ANR	4222039	Argument	0		4220745	2					
ANR	4222040	PrimaryExpression	0		4220745	0					
ANR	4222041	Argument	input + 4		4220745	3					
ANR	4222042	AdditiveExpression	input + 4		4220745	0		+			
ANR	4222043	Identifier	input		4220745	0					
ANR	4222044	PrimaryExpression	4		4220745	1					
ANR	4222045	ExpressionStatement	r_cons_println ( s )	4731:5:134733:134751	4220745	1	True				
ANR	4222046	CallExpression	r_cons_println ( s )		4220745	0					
ANR	4222047	Callee	r_cons_println		4220745	0					
ANR	4222048	Identifier	r_cons_println		4220745	0					
ANR	4222049	ArgumentList	s		4220745	1					
ANR	4222050	Argument	s		4220745	0					
ANR	4222051	Identifier	s		4220745	0					
ANR	4222052	ExpressionStatement	free ( s )	4732:5:134758:134766	4220745	2	True				
ANR	4222053	CallExpression	free ( s )		4220745	0					
ANR	4222054	Callee	free		4220745	0					
ANR	4222055	Identifier	free		4220745	0					
ANR	4222056	ArgumentList	s		4220745	1					
ANR	4222057	Argument	s		4220745	0					
ANR	4222058	Identifier	s		4220745	0					
ANR	4222059	ElseStatement	else		4220745	0					
ANR	4222060	CompoundStatement		197:11:5837:5837	4220745	0					
ANR	4222061	ExpressionStatement	"eprintf ( ""Usage: dtek [query]\\n"" )"	4734:5:134786:134819	4220745	0	True				
ANR	4222062	CallExpression	"eprintf ( ""Usage: dtek [query]\\n"" )"		4220745	0					
ANR	4222063	Callee	eprintf		4220745	0					
ANR	4222064	Identifier	eprintf		4220745	0					
ANR	4222065	ArgumentList	"""Usage: dtek [query]\\n"""		4220745	1					
ANR	4222066	Argument	"""Usage: dtek [query]\\n"""		4220745	0					
ANR	4222067	PrimaryExpression	"""Usage: dtek [query]\\n"""		4220745	0					
ANR	4222068	BreakStatement	break ;	4736:4:134831:134836	4220745	14	True				
ANR	4222069	Label	default :	4737:3:134841:134848	4220745	15	True				
ANR	4222070	Identifier	default		4220745	0					
ANR	4222071	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dte )"	4738:4:134854:134890	4220745	16	True				
ANR	4222072	CallExpression	"r_core_cmd_help ( core , help_msg_dte )"		4220745	0					
ANR	4222073	Callee	r_core_cmd_help		4220745	0					
ANR	4222074	Identifier	r_core_cmd_help		4220745	0					
ANR	4222075	ArgumentList	core		4220745	1					
ANR	4222076	Argument	core		4220745	0					
ANR	4222077	Identifier	core		4220745	0					
ANR	4222078	Argument	help_msg_dte		4220745	1					
ANR	4222079	Identifier	help_msg_dte		4220745	0					
ANR	4222080	BreakStatement	break ;	4740:3:134900:134905	4220745	43	True				
ANR	4222081	Label	case 's' :	4741:2:134909:134917	4220745	44	True				
ANR	4222082	SwitchStatement	switch ( input [ 2 ] )		4220745	45					
ANR	4222083	Condition	input [ 2 ]	4742:11:134939:134946	4220745	0	True				
ANR	4222084	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4222085	Identifier	input		4220745	0					
ANR	4222086	PrimaryExpression	2		4220745	1					
ANR	4222087	CompoundStatement		206:21:6007:6007	4220745	1					
ANR	4222088	Label	case 0 :	4743:3:134954:134960	4220745	0	True				
ANR	4222089	ExpressionStatement	r_debug_session_list ( core -> dbg )	4744:4:134975:135007	4220745	1	True				
ANR	4222090	CallExpression	r_debug_session_list ( core -> dbg )		4220745	0					
ANR	4222091	Callee	r_debug_session_list		4220745	0					
ANR	4222092	Identifier	r_debug_session_list		4220745	0					
ANR	4222093	ArgumentList	core -> dbg		4220745	1					
ANR	4222094	Argument	core -> dbg		4220745	0					
ANR	4222095	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222096	Identifier	core		4220745	0					
ANR	4222097	Identifier	dbg		4220745	1					
ANR	4222098	BreakStatement	break ;	4745:4:135013:135018	4220745	2	True				
ANR	4222099	Label	case '+' :	4746:3:135023:135031	4220745	3	True				
ANR	4222100	ExpressionStatement	"r_debug_session_add ( core -> dbg , NULL )"	4747:4:135047:135084	4220745	4	True				
ANR	4222101	CallExpression	"r_debug_session_add ( core -> dbg , NULL )"		4220745	0					
ANR	4222102	Callee	r_debug_session_add		4220745	0					
ANR	4222103	Identifier	r_debug_session_add		4220745	0					
ANR	4222104	ArgumentList	core -> dbg		4220745	1					
ANR	4222105	Argument	core -> dbg		4220745	0					
ANR	4222106	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222107	Identifier	core		4220745	0					
ANR	4222108	Identifier	dbg		4220745	1					
ANR	4222109	Argument	NULL		4220745	1					
ANR	4222110	Identifier	NULL		4220745	0					
ANR	4222111	BreakStatement	break ;	4748:4:135090:135095	4220745	5	True				
ANR	4222112	Label	case '-' :	4749:3:135100:135108	4220745	6	True				
ANR	4222113	IfStatement	if ( input [ 3 ] == ' ' )		4220745	7					
ANR	4222114	Condition	input [ 3 ] == ' '	4750:8:135128:135142	4220745	0	True				
ANR	4222115	EqualityExpression	input [ 3 ] == ' '		4220745	0		==			
ANR	4222116	ArrayIndexing	input [ 3 ]		4220745	0					
ANR	4222117	Identifier	input		4220745	0					
ANR	4222118	PrimaryExpression	3		4220745	1					
ANR	4222119	PrimaryExpression	' '		4220745	1					
ANR	4222120	CompoundStatement		214:25:6203:6203	4220745	1					
ANR	4222121	ExpressionStatement	"r_debug_session_delete ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"	4751:5:135152:135221	4220745	0	True				
ANR	4222122	CallExpression	"r_debug_session_delete ( core -> dbg , r_num_math ( core -> num , input + 3 ) )"		4220745	0					
ANR	4222123	Callee	r_debug_session_delete		4220745	0					
ANR	4222124	Identifier	r_debug_session_delete		4220745	0					
ANR	4222125	ArgumentList	core -> dbg		4220745	1					
ANR	4222126	Argument	core -> dbg		4220745	0					
ANR	4222127	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222128	Identifier	core		4220745	0					
ANR	4222129	Identifier	dbg		4220745	1					
ANR	4222130	Argument	"r_num_math ( core -> num , input + 3 )"		4220745	1					
ANR	4222131	CallExpression	"r_num_math ( core -> num , input + 3 )"		4220745	0					
ANR	4222132	Callee	r_num_math		4220745	0					
ANR	4222133	Identifier	r_num_math		4220745	0					
ANR	4222134	ArgumentList	core -> num		4220745	1					
ANR	4222135	Argument	core -> num		4220745	0					
ANR	4222136	PtrMemberAccess	core -> num		4220745	0					
ANR	4222137	Identifier	core		4220745	0					
ANR	4222138	Identifier	num		4220745	1					
ANR	4222139	Argument	input + 3		4220745	1					
ANR	4222140	AdditiveExpression	input + 3		4220745	0		+			
ANR	4222141	Identifier	input		4220745	0					
ANR	4222142	PrimaryExpression	3		4220745	1					
ANR	4222143	ElseStatement	else		4220745	0					
ANR	4222144	CompoundStatement		216:11:6292:6292	4220745	0					
ANR	4222145	ExpressionStatement	"r_cons_println ( ""Usage: dts- [id] - Delete trace session"" )"	4753:5:135241:135299	4220745	0	True				
ANR	4222146	CallExpression	"r_cons_println ( ""Usage: dts- [id] - Delete trace session"" )"		4220745	0					
ANR	4222147	Callee	r_cons_println		4220745	0					
ANR	4222148	Identifier	r_cons_println		4220745	0					
ANR	4222149	ArgumentList	"""Usage: dts- [id] - Delete trace session"""		4220745	1					
ANR	4222150	Argument	"""Usage: dts- [id] - Delete trace session"""		4220745	0					
ANR	4222151	PrimaryExpression	"""Usage: dts- [id] - Delete trace session"""		4220745	0					
ANR	4222152	BreakStatement	break ;	4755:4:135311:135316	4220745	8	True				
ANR	4222153	Label	case 't' :	4756:3:135321:135329	4220745	9	True				
ANR	4222154	IfStatement	if ( input [ 3 ] == ' ' )		4220745	10					
ANR	4222155	Condition	input [ 3 ] == ' '	4757:8:135349:135363	4220745	0	True				
ANR	4222156	EqualityExpression	input [ 3 ] == ' '		4220745	0		==			
ANR	4222157	ArrayIndexing	input [ 3 ]		4220745	0					
ANR	4222158	Identifier	input		4220745	0					
ANR	4222159	PrimaryExpression	3		4220745	1					
ANR	4222160	PrimaryExpression	' '		4220745	1					
ANR	4222161	CompoundStatement		221:25:6424:6424	4220745	1					
ANR	4222162	ExpressionStatement	"r_debug_session_save ( core -> dbg , input + 4 )"	4758:5:135373:135416	4220745	0	True				
ANR	4222163	CallExpression	"r_debug_session_save ( core -> dbg , input + 4 )"		4220745	0					
ANR	4222164	Callee	r_debug_session_save		4220745	0					
ANR	4222165	Identifier	r_debug_session_save		4220745	0					
ANR	4222166	ArgumentList	core -> dbg		4220745	1					
ANR	4222167	Argument	core -> dbg		4220745	0					
ANR	4222168	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222169	Identifier	core		4220745	0					
ANR	4222170	Identifier	dbg		4220745	1					
ANR	4222171	Argument	input + 4		4220745	1					
ANR	4222172	AdditiveExpression	input + 4		4220745	0		+			
ANR	4222173	Identifier	input		4220745	0					
ANR	4222174	PrimaryExpression	4		4220745	1					
ANR	4222175	ElseStatement	else		4220745	0					
ANR	4222176	CompoundStatement		223:11:6487:6487	4220745	0					
ANR	4222177	ExpressionStatement	"r_cons_println ( ""Usage: dtst [file] - save trace sessions to disk"" )"	4760:5:135436:135503	4220745	0	True				
ANR	4222178	CallExpression	"r_cons_println ( ""Usage: dtst [file] - save trace sessions to disk"" )"		4220745	0					
ANR	4222179	Callee	r_cons_println		4220745	0					
ANR	4222180	Identifier	r_cons_println		4220745	0					
ANR	4222181	ArgumentList	"""Usage: dtst [file] - save trace sessions to disk"""		4220745	1					
ANR	4222182	Argument	"""Usage: dtst [file] - save trace sessions to disk"""		4220745	0					
ANR	4222183	PrimaryExpression	"""Usage: dtst [file] - save trace sessions to disk"""		4220745	0					
ANR	4222184	BreakStatement	break ;	4762:4:135515:135520	4220745	11	True				
ANR	4222185	Label	case 'f' :	4763:3:135525:135533	4220745	12	True				
ANR	4222186	IfStatement	if ( input [ 3 ] == ' ' )		4220745	13					
ANR	4222187	Condition	input [ 3 ] == ' '	4764:8:135553:135567	4220745	0	True				
ANR	4222188	EqualityExpression	input [ 3 ] == ' '		4220745	0		==			
ANR	4222189	ArrayIndexing	input [ 3 ]		4220745	0					
ANR	4222190	Identifier	input		4220745	0					
ANR	4222191	PrimaryExpression	3		4220745	1					
ANR	4222192	PrimaryExpression	' '		4220745	1					
ANR	4222193	CompoundStatement		228:25:6628:6628	4220745	1					
ANR	4222194	ExpressionStatement	"r_debug_session_restore ( core -> dbg , input + 4 )"	4765:5:135577:135623	4220745	0	True				
ANR	4222195	CallExpression	"r_debug_session_restore ( core -> dbg , input + 4 )"		4220745	0					
ANR	4222196	Callee	r_debug_session_restore		4220745	0					
ANR	4222197	Identifier	r_debug_session_restore		4220745	0					
ANR	4222198	ArgumentList	core -> dbg		4220745	1					
ANR	4222199	Argument	core -> dbg		4220745	0					
ANR	4222200	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222201	Identifier	core		4220745	0					
ANR	4222202	Identifier	dbg		4220745	1					
ANR	4222203	Argument	input + 4		4220745	1					
ANR	4222204	AdditiveExpression	input + 4		4220745	0		+			
ANR	4222205	Identifier	input		4220745	0					
ANR	4222206	PrimaryExpression	4		4220745	1					
ANR	4222207	ElseStatement	else		4220745	0					
ANR	4222208	CompoundStatement		230:11:6694:6694	4220745	0					
ANR	4222209	ExpressionStatement	"r_cons_println ( ""Usage: dtsf [file] - read trace sessions from disk"" )"	4767:5:135643:135712	4220745	0	True				
ANR	4222210	CallExpression	"r_cons_println ( ""Usage: dtsf [file] - read trace sessions from disk"" )"		4220745	0					
ANR	4222211	Callee	r_cons_println		4220745	0					
ANR	4222212	Identifier	r_cons_println		4220745	0					
ANR	4222213	ArgumentList	"""Usage: dtsf [file] - read trace sessions from disk"""		4220745	1					
ANR	4222214	Argument	"""Usage: dtsf [file] - read trace sessions from disk"""		4220745	0					
ANR	4222215	PrimaryExpression	"""Usage: dtsf [file] - read trace sessions from disk"""		4220745	0					
ANR	4222216	BreakStatement	break ;	4769:4:135724:135729	4220745	14	True				
ANR	4222217	Label	case 'C' :	4770:3:135734:135742	4220745	15	True				
ANR	4222218	IfStatement	if ( input [ 3 ] == ' ' )		4220745	16					
ANR	4222219	Condition	input [ 3 ] == ' '	4771:8:135762:135776	4220745	0	True				
ANR	4222220	EqualityExpression	input [ 3 ] == ' '		4220745	0		==			
ANR	4222221	ArrayIndexing	input [ 3 ]		4220745	0					
ANR	4222222	Identifier	input		4220745	0					
ANR	4222223	PrimaryExpression	3		4220745	1					
ANR	4222224	PrimaryExpression	' '		4220745	1					
ANR	4222225	CompoundStatement		235:25:6837:6837	4220745	1					
ANR	4222226	ExpressionStatement	"r_debug_session_comment ( core -> dbg , atoi ( input + 3 ) , strchr ( input + 4 , ' ' ) )"	4772:5:135786:135864	4220745	0	True				
ANR	4222227	CallExpression	"r_debug_session_comment ( core -> dbg , atoi ( input + 3 ) , strchr ( input + 4 , ' ' ) )"		4220745	0					
ANR	4222228	Callee	r_debug_session_comment		4220745	0					
ANR	4222229	Identifier	r_debug_session_comment		4220745	0					
ANR	4222230	ArgumentList	core -> dbg		4220745	1					
ANR	4222231	Argument	core -> dbg		4220745	0					
ANR	4222232	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222233	Identifier	core		4220745	0					
ANR	4222234	Identifier	dbg		4220745	1					
ANR	4222235	Argument	atoi ( input + 3 )		4220745	1					
ANR	4222236	CallExpression	atoi ( input + 3 )		4220745	0					
ANR	4222237	Callee	atoi		4220745	0					
ANR	4222238	Identifier	atoi		4220745	0					
ANR	4222239	ArgumentList	input + 3		4220745	1					
ANR	4222240	Argument	input + 3		4220745	0					
ANR	4222241	AdditiveExpression	input + 3		4220745	0		+			
ANR	4222242	Identifier	input		4220745	0					
ANR	4222243	PrimaryExpression	3		4220745	1					
ANR	4222244	Argument	"strchr ( input + 4 , ' ' )"		4220745	2					
ANR	4222245	CallExpression	"strchr ( input + 4 , ' ' )"		4220745	0					
ANR	4222246	Callee	strchr		4220745	0					
ANR	4222247	Identifier	strchr		4220745	0					
ANR	4222248	ArgumentList	input + 4		4220745	1					
ANR	4222249	Argument	input + 4		4220745	0					
ANR	4222250	AdditiveExpression	input + 4		4220745	0		+			
ANR	4222251	Identifier	input		4220745	0					
ANR	4222252	PrimaryExpression	4		4220745	1					
ANR	4222253	Argument	' '		4220745	1					
ANR	4222254	PrimaryExpression	' '		4220745	0					
ANR	4222255	ElseStatement	else		4220745	0					
ANR	4222256	CompoundStatement		237:11:6935:6935	4220745	0					
ANR	4222257	ExpressionStatement	"r_cons_println ( ""Usage: dtsC id comment - add comment for given trace session"" )"	4774:5:135884:135963	4220745	0	True				
ANR	4222258	CallExpression	"r_cons_println ( ""Usage: dtsC id comment - add comment for given trace session"" )"		4220745	0					
ANR	4222259	Callee	r_cons_println		4220745	0					
ANR	4222260	Identifier	r_cons_println		4220745	0					
ANR	4222261	ArgumentList	"""Usage: dtsC id comment - add comment for given trace session"""		4220745	1					
ANR	4222262	Argument	"""Usage: dtsC id comment - add comment for given trace session"""		4220745	0					
ANR	4222263	PrimaryExpression	"""Usage: dtsC id comment - add comment for given trace session"""		4220745	0					
ANR	4222264	BreakStatement	break ;	4776:4:135975:135980	4220745	17	True				
ANR	4222265	Label	case 'A' :	4777:3:135985:135993	4220745	18	True				
ANR	4222266	ExpressionStatement	"r_debug_session_set_idx ( core -> dbg , atoi ( input + 4 ) )"	4778:4:136063:136116	4220745	19	True				
ANR	4222267	CallExpression	"r_debug_session_set_idx ( core -> dbg , atoi ( input + 4 ) )"		4220745	0					
ANR	4222268	Callee	r_debug_session_set_idx		4220745	0					
ANR	4222269	Identifier	r_debug_session_set_idx		4220745	0					
ANR	4222270	ArgumentList	core -> dbg		4220745	1					
ANR	4222271	Argument	core -> dbg		4220745	0					
ANR	4222272	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222273	Identifier	core		4220745	0					
ANR	4222274	Identifier	dbg		4220745	1					
ANR	4222275	Argument	atoi ( input + 4 )		4220745	1					
ANR	4222276	CallExpression	atoi ( input + 4 )		4220745	0					
ANR	4222277	Callee	atoi		4220745	0					
ANR	4222278	Identifier	atoi		4220745	0					
ANR	4222279	ArgumentList	input + 4		4220745	1					
ANR	4222280	Argument	input + 4		4220745	0					
ANR	4222281	AdditiveExpression	input + 4		4220745	0		+			
ANR	4222282	Identifier	input		4220745	0					
ANR	4222283	PrimaryExpression	4		4220745	1					
ANR	4222284	BreakStatement	break ;	4779:4:136122:136127	4220745	20	True				
ANR	4222285	Label	default :	4780:3:136132:136139	4220745	21	True				
ANR	4222286	Identifier	default		4220745	0					
ANR	4222287	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dts )"	4781:4:136145:136181	4220745	22	True				
ANR	4222288	CallExpression	"r_core_cmd_help ( core , help_msg_dts )"		4220745	0					
ANR	4222289	Callee	r_core_cmd_help		4220745	0					
ANR	4222290	Identifier	r_core_cmd_help		4220745	0					
ANR	4222291	ArgumentList	core		4220745	1					
ANR	4222292	Argument	core		4220745	0					
ANR	4222293	Identifier	core		4220745	0					
ANR	4222294	Argument	help_msg_dts		4220745	1					
ANR	4222295	Identifier	help_msg_dts		4220745	0					
ANR	4222296	BreakStatement	break ;	4783:3:136191:136196	4220745	46	True				
ANR	4222297	Label	case '?' :	4784:2:136200:136208	4220745	47	True				
ANR	4222298	Label	default :	4785:2:136212:136219	4220745	48	True				
ANR	4222299	Identifier	default		4220745	0					
ANR	4222300	CompoundStatement		250:3:7282:7282	4220745	49					
ANR	4222301	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dt )"	4787:4:136230:136265	4220745	0	True				
ANR	4222302	CallExpression	"r_core_cmd_help ( core , help_msg_dt )"		4220745	0					
ANR	4222303	Callee	r_core_cmd_help		4220745	0					
ANR	4222304	Identifier	r_core_cmd_help		4220745	0					
ANR	4222305	ArgumentList	core		4220745	1					
ANR	4222306	Argument	core		4220745	0					
ANR	4222307	Identifier	core		4220745	0					
ANR	4222308	Argument	help_msg_dt		4220745	1					
ANR	4222309	Identifier	help_msg_dt		4220745	0					
ANR	4222310	ExpressionStatement	"r_cons_printf ( ""Current Tag: %d\\n"" , core -> dbg -> trace -> tag )"	4788:4:136271:136329	4220745	1	True				
ANR	4222311	CallExpression	"r_cons_printf ( ""Current Tag: %d\\n"" , core -> dbg -> trace -> tag )"		4220745	0					
ANR	4222312	Callee	r_cons_printf		4220745	0					
ANR	4222313	Identifier	r_cons_printf		4220745	0					
ANR	4222314	ArgumentList	"""Current Tag: %d\\n"""		4220745	1					
ANR	4222315	Argument	"""Current Tag: %d\\n"""		4220745	0					
ANR	4222316	PrimaryExpression	"""Current Tag: %d\\n"""		4220745	0					
ANR	4222317	Argument	core -> dbg -> trace -> tag		4220745	1					
ANR	4222318	PtrMemberAccess	core -> dbg -> trace -> tag		4220745	0					
ANR	4222319	PtrMemberAccess	core -> dbg -> trace		4220745	0					
ANR	4222320	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222321	Identifier	core		4220745	0					
ANR	4222322	Identifier	dbg		4220745	1					
ANR	4222323	Identifier	trace		4220745	1					
ANR	4222324	Identifier	tag		4220745	1					
ANR	4222325	BreakStatement	break ;	4790:3:136339:136344	4220745	50	True				
ANR	4222326	BreakStatement	break ;	4792:2:136352:136357	4220745	2	True				
ANR	4222327	Label	case 'd' :	4793:1:136360:136368	4220745	3	True				
ANR	4222328	SwitchStatement	switch ( input [ 1 ] )		4220745	4					
ANR	4222329	Condition	input [ 1 ]	4794:10:136389:136396	4220745	0	True				
ANR	4222330	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4222331	Identifier	input		4220745	0					
ANR	4222332	PrimaryExpression	1		4220745	1					
ANR	4222333	CompoundStatement		258:20:7457:7457	4220745	1					
ANR	4222334	Label	case '\\0' :	4795:2:136403:136412	4220745	0	True				
ANR	4222335	ExpressionStatement	"r_debug_desc_list ( core -> dbg , 0 )"	4796:3:136426:136458	4220745	1	True				
ANR	4222336	CallExpression	"r_debug_desc_list ( core -> dbg , 0 )"		4220745	0					
ANR	4222337	Callee	r_debug_desc_list		4220745	0					
ANR	4222338	Identifier	r_debug_desc_list		4220745	0					
ANR	4222339	ArgumentList	core -> dbg		4220745	1					
ANR	4222340	Argument	core -> dbg		4220745	0					
ANR	4222341	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222342	Identifier	core		4220745	0					
ANR	4222343	Identifier	dbg		4220745	1					
ANR	4222344	Argument	0		4220745	1					
ANR	4222345	PrimaryExpression	0		4220745	0					
ANR	4222346	BreakStatement	break ;	4797:3:136463:136468	4220745	2	True				
ANR	4222347	Label	case '*' :	4798:2:136472:136480	4220745	3	True				
ANR	4222348	ExpressionStatement	"r_debug_desc_list ( core -> dbg , 1 )"	4799:3:136495:136527	4220745	4	True				
ANR	4222349	CallExpression	"r_debug_desc_list ( core -> dbg , 1 )"		4220745	0					
ANR	4222350	Callee	r_debug_desc_list		4220745	0					
ANR	4222351	Identifier	r_debug_desc_list		4220745	0					
ANR	4222352	ArgumentList	core -> dbg		4220745	1					
ANR	4222353	Argument	core -> dbg		4220745	0					
ANR	4222354	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222355	Identifier	core		4220745	0					
ANR	4222356	Identifier	dbg		4220745	1					
ANR	4222357	Argument	1		4220745	1					
ANR	4222358	PrimaryExpression	1		4220745	0					
ANR	4222359	BreakStatement	break ;	4800:3:136532:136537	4220745	5	True				
ANR	4222360	Label	case 's' :	4801:2:136541:136549	4220745	6	True				
ANR	4222361	CompoundStatement		269:4:7684:7719	4220745	7					
ANR	4222362	IdentifierDeclStatement	ut64 off = UT64_MAX ;	4803:4:136570:136589	4220745	0	True				
ANR	4222363	IdentifierDecl	off = UT64_MAX		4220745	0					
ANR	4222364	IdentifierDeclType	ut64		4220745	0					
ANR	4222365	Identifier	off		4220745	1					
ANR	4222366	AssignmentExpression	off = UT64_MAX		4220745	2		=			
ANR	4222367	Identifier	UT64_MAX		4220745	0					
ANR	4222368	Identifier	UT64_MAX		4220745	1					
ANR	4222369	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4804:4:136595:136620	4220745	1	True				
ANR	4222370	IdentifierDecl	fd = atoi ( input + 2 )		4220745	0					
ANR	4222371	IdentifierDeclType	int		4220745	0					
ANR	4222372	Identifier	fd		4220745	1					
ANR	4222373	AssignmentExpression	fd = atoi ( input + 2 )		4220745	2		=			
ANR	4222374	Identifier	fd		4220745	0					
ANR	4222375	CallExpression	atoi ( input + 2 )		4220745	1					
ANR	4222376	Callee	atoi		4220745	0					
ANR	4222377	Identifier	atoi		4220745	0					
ANR	4222378	ArgumentList	input + 2		4220745	1					
ANR	4222379	Argument	input + 2		4220745	0					
ANR	4222380	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222381	Identifier	input		4220745	0					
ANR	4222382	PrimaryExpression	2		4220745	1					
ANR	4222383	IdentifierDeclStatement	"char * str = strchr ( input + 2 , ' ' ) ;"	4805:4:136626:136661	4220745	2	True				
ANR	4222384	IdentifierDecl	"* str = strchr ( input + 2 , ' ' )"		4220745	0					
ANR	4222385	IdentifierDeclType	char *		4220745	0					
ANR	4222386	Identifier	str		4220745	1					
ANR	4222387	AssignmentExpression	"* str = strchr ( input + 2 , ' ' )"		4220745	2		=			
ANR	4222388	Identifier	str		4220745	0					
ANR	4222389	CallExpression	"strchr ( input + 2 , ' ' )"		4220745	1					
ANR	4222390	Callee	strchr		4220745	0					
ANR	4222391	Identifier	strchr		4220745	0					
ANR	4222392	ArgumentList	input + 2		4220745	1					
ANR	4222393	Argument	input + 2		4220745	0					
ANR	4222394	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222395	Identifier	input		4220745	0					
ANR	4222396	PrimaryExpression	2		4220745	1					
ANR	4222397	Argument	' '		4220745	1					
ANR	4222398	PrimaryExpression	' '		4220745	0					
ANR	4222399	IfStatement	if ( str )		4220745	3					
ANR	4222400	Condition	str	4806:8:136671:136673	4220745	0	True				
ANR	4222401	Identifier	str		4220745	0					
ANR	4222402	ExpressionStatement	"off = r_num_math ( core -> num , str + 1 )"	4806:13:136676:136711	4220745	1	True				
ANR	4222403	AssignmentExpression	"off = r_num_math ( core -> num , str + 1 )"		4220745	0		=			
ANR	4222404	Identifier	off		4220745	0					
ANR	4222405	CallExpression	"r_num_math ( core -> num , str + 1 )"		4220745	1					
ANR	4222406	Callee	r_num_math		4220745	0					
ANR	4222407	Identifier	r_num_math		4220745	0					
ANR	4222408	ArgumentList	core -> num		4220745	1					
ANR	4222409	Argument	core -> num		4220745	0					
ANR	4222410	PtrMemberAccess	core -> num		4220745	0					
ANR	4222411	Identifier	core		4220745	0					
ANR	4222412	Identifier	num		4220745	1					
ANR	4222413	Argument	str + 1		4220745	1					
ANR	4222414	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222415	Identifier	str		4220745	0					
ANR	4222416	PrimaryExpression	1		4220745	1					
ANR	4222417	IfStatement	"if ( off == UT64_MAX || ! r_debug_desc_seek ( core -> dbg , fd , off ) )"		4220745	4					
ANR	4222418	Condition	"off == UT64_MAX || ! r_debug_desc_seek ( core -> dbg , fd , off )"	4807:8:136721:136778	4220745	0	True				
ANR	4222419	OrExpression	"off == UT64_MAX || ! r_debug_desc_seek ( core -> dbg , fd , off )"		4220745	0		||			
ANR	4222420	EqualityExpression	off == UT64_MAX		4220745	0		==			
ANR	4222421	Identifier	off		4220745	0					
ANR	4222422	Identifier	UT64_MAX		4220745	1					
ANR	4222423	UnaryOperationExpression	"! r_debug_desc_seek ( core -> dbg , fd , off )"		4220745	1					
ANR	4222424	UnaryOperator	!		4220745	0					
ANR	4222425	CallExpression	"r_debug_desc_seek ( core -> dbg , fd , off )"		4220745	1					
ANR	4222426	Callee	r_debug_desc_seek		4220745	0					
ANR	4222427	Identifier	r_debug_desc_seek		4220745	0					
ANR	4222428	ArgumentList	core -> dbg		4220745	1					
ANR	4222429	Argument	core -> dbg		4220745	0					
ANR	4222430	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222431	Identifier	core		4220745	0					
ANR	4222432	Identifier	dbg		4220745	1					
ANR	4222433	Argument	fd		4220745	1					
ANR	4222434	Identifier	fd		4220745	0					
ANR	4222435	Argument	off		4220745	2					
ANR	4222436	Identifier	off		4220745	0					
ANR	4222437	CompoundStatement		271:68:7839:7839	4220745	1					
ANR	4222438	Statement	RBuffer	4808:5:136788:136794	4220745	0	True				
ANR	4222439	Statement	*	4808:13:136796:136796	4220745	1	True				
ANR	4222440	Statement	buf	4808:14:136797:136799	4220745	2	True				
ANR	4222441	Statement	=	4808:18:136801:136801	4220745	3	True				
ANR	4222442	Statement	r_core_syscallf	4808:20:136803:136817	4220745	4	True				
ANR	4222443	Statement	(	4808:36:136819:136819	4220745	5	True				
ANR	4222444	Statement	core	4808:37:136820:136823	4220745	6	True				
ANR	4222445	Statement	","	4808:41:136824:136824	4220745	7	True				
ANR	4222446	Statement	"""lseek"""	4808:43:136826:136832	4220745	8	True				
ANR	4222447	Statement	","	4808:50:136833:136833	4220745	9	True				
ANR	4222448	Statement	"""%d, 0x%"""	4808:52:136835:136843	4220745	10	True				
ANR	4222449	Statement	PFMT64x	4808:61:136844:136850	4220745	11	True				
ANR	4222450	Statement	""", %d"""	4808:68:136851:136856	4220745	12	True				
ANR	4222451	Statement	","	4808:74:136857:136857	4220745	13	True				
ANR	4222452	Statement	fd	4808:76:136859:136860	4220745	14	True				
ANR	4222453	Statement	","	4808:78:136861:136861	4220745	15	True				
ANR	4222454	Statement	off	4808:80:136863:136865	4220745	16	True				
ANR	4222455	Statement	","	4808:83:136866:136866	4220745	17	True				
ANR	4222456	Statement	0	4808:85:136868:136868	4220745	18	True				
ANR	4222457	Statement	)	4808:86:136869:136869	4220745	19	True				
ANR	4222458	ExpressionStatement		4808:87:136870:136870	4220745	20	True				
ANR	4222459	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot seek"" )"	4809:5:136877:136918	4220745	21	True				
ANR	4222460	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot seek"" )"		4220745	0					
ANR	4222461	Callee	consumeBuffer		4220745	0					
ANR	4222462	Identifier	consumeBuffer		4220745	0					
ANR	4222463	ArgumentList	buf		4220745	1					
ANR	4222464	Argument	buf		4220745	0					
ANR	4222465	Identifier	buf		4220745	0					
ANR	4222466	Argument	"""dx """		4220745	1					
ANR	4222467	PrimaryExpression	"""dx """		4220745	0					
ANR	4222468	Argument	"""Cannot seek"""		4220745	2					
ANR	4222469	PrimaryExpression	"""Cannot seek"""		4220745	0					
ANR	4222470	BreakStatement	break ;	4812:3:136934:136939	4220745	8	True				
ANR	4222471	Label	case 't' :	4813:2:136943:136951	4220745	9	True				
ANR	4222472	ExpressionStatement	"r_core_cmdf ( core , ""dd-0"" )"	4814:3:136975:137001	4220745	10	True				
ANR	4222473	CallExpression	"r_core_cmdf ( core , ""dd-0"" )"		4220745	0					
ANR	4222474	Callee	r_core_cmdf		4220745	0					
ANR	4222475	Identifier	r_core_cmdf		4220745	0					
ANR	4222476	ArgumentList	core		4220745	1					
ANR	4222477	Argument	core		4220745	0					
ANR	4222478	Identifier	core		4220745	0					
ANR	4222479	Argument	"""dd-0"""		4220745	1					
ANR	4222480	PrimaryExpression	"""dd-0"""		4220745	0					
ANR	4222481	BreakStatement	break ;	4815:3:137006:137011	4220745	11	True				
ANR	4222482	Label	case 'd' :	4816:2:137015:137023	4220745	12	True				
ANR	4222483	CompoundStatement		284:4:8159:8194	4220745	13					
ANR	4222484	IdentifierDeclStatement	ut64 newfd = UT64_MAX ;	4818:4:137043:137064	4220745	0	True				
ANR	4222485	IdentifierDecl	newfd = UT64_MAX		4220745	0					
ANR	4222486	IdentifierDeclType	ut64		4220745	0					
ANR	4222487	Identifier	newfd		4220745	1					
ANR	4222488	AssignmentExpression	newfd = UT64_MAX		4220745	2		=			
ANR	4222489	Identifier	UT64_MAX		4220745	0					
ANR	4222490	Identifier	UT64_MAX		4220745	1					
ANR	4222491	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4819:4:137070:137095	4220745	1	True				
ANR	4222492	IdentifierDecl	fd = atoi ( input + 2 )		4220745	0					
ANR	4222493	IdentifierDeclType	int		4220745	0					
ANR	4222494	Identifier	fd		4220745	1					
ANR	4222495	AssignmentExpression	fd = atoi ( input + 2 )		4220745	2		=			
ANR	4222496	Identifier	fd		4220745	0					
ANR	4222497	CallExpression	atoi ( input + 2 )		4220745	1					
ANR	4222498	Callee	atoi		4220745	0					
ANR	4222499	Identifier	atoi		4220745	0					
ANR	4222500	ArgumentList	input + 2		4220745	1					
ANR	4222501	Argument	input + 2		4220745	0					
ANR	4222502	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222503	Identifier	input		4220745	0					
ANR	4222504	PrimaryExpression	2		4220745	1					
ANR	4222505	IdentifierDeclStatement	"char * str = strchr ( input + 3 , ' ' ) ;"	4820:4:137101:137136	4220745	2	True				
ANR	4222506	IdentifierDecl	"* str = strchr ( input + 3 , ' ' )"		4220745	0					
ANR	4222507	IdentifierDeclType	char *		4220745	0					
ANR	4222508	Identifier	str		4220745	1					
ANR	4222509	AssignmentExpression	"* str = strchr ( input + 3 , ' ' )"		4220745	2		=			
ANR	4222510	Identifier	str		4220745	0					
ANR	4222511	CallExpression	"strchr ( input + 3 , ' ' )"		4220745	1					
ANR	4222512	Callee	strchr		4220745	0					
ANR	4222513	Identifier	strchr		4220745	0					
ANR	4222514	ArgumentList	input + 3		4220745	1					
ANR	4222515	Argument	input + 3		4220745	0					
ANR	4222516	AdditiveExpression	input + 3		4220745	0		+			
ANR	4222517	Identifier	input		4220745	0					
ANR	4222518	PrimaryExpression	3		4220745	1					
ANR	4222519	Argument	' '		4220745	1					
ANR	4222520	PrimaryExpression	' '		4220745	0					
ANR	4222521	IfStatement	if ( str )		4220745	3					
ANR	4222522	Condition	str	4821:8:137146:137148	4220745	0	True				
ANR	4222523	Identifier	str		4220745	0					
ANR	4222524	ExpressionStatement	"newfd = r_num_math ( core -> num , str + 1 )"	4821:13:137151:137188	4220745	1	True				
ANR	4222525	AssignmentExpression	"newfd = r_num_math ( core -> num , str + 1 )"		4220745	0		=			
ANR	4222526	Identifier	newfd		4220745	0					
ANR	4222527	CallExpression	"r_num_math ( core -> num , str + 1 )"		4220745	1					
ANR	4222528	Callee	r_num_math		4220745	0					
ANR	4222529	Identifier	r_num_math		4220745	0					
ANR	4222530	ArgumentList	core -> num		4220745	1					
ANR	4222531	Argument	core -> num		4220745	0					
ANR	4222532	PtrMemberAccess	core -> num		4220745	0					
ANR	4222533	Identifier	core		4220745	0					
ANR	4222534	Identifier	num		4220745	1					
ANR	4222535	Argument	str + 1		4220745	1					
ANR	4222536	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222537	Identifier	str		4220745	0					
ANR	4222538	PrimaryExpression	1		4220745	1					
ANR	4222539	IfStatement	"if ( newfd == UT64_MAX || ! r_debug_desc_dup ( core -> dbg , fd , newfd ) )"		4220745	4					
ANR	4222540	Condition	"newfd == UT64_MAX || ! r_debug_desc_dup ( core -> dbg , fd , newfd )"	4822:8:137198:137258	4220745	0	True				
ANR	4222541	OrExpression	"newfd == UT64_MAX || ! r_debug_desc_dup ( core -> dbg , fd , newfd )"		4220745	0		||			
ANR	4222542	EqualityExpression	newfd == UT64_MAX		4220745	0		==			
ANR	4222543	Identifier	newfd		4220745	0					
ANR	4222544	Identifier	UT64_MAX		4220745	1					
ANR	4222545	UnaryOperationExpression	"! r_debug_desc_dup ( core -> dbg , fd , newfd )"		4220745	1					
ANR	4222546	UnaryOperator	!		4220745	0					
ANR	4222547	CallExpression	"r_debug_desc_dup ( core -> dbg , fd , newfd )"		4220745	1					
ANR	4222548	Callee	r_debug_desc_dup		4220745	0					
ANR	4222549	Identifier	r_debug_desc_dup		4220745	0					
ANR	4222550	ArgumentList	core -> dbg		4220745	1					
ANR	4222551	Argument	core -> dbg		4220745	0					
ANR	4222552	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222553	Identifier	core		4220745	0					
ANR	4222554	Identifier	dbg		4220745	1					
ANR	4222555	Argument	fd		4220745	1					
ANR	4222556	Identifier	fd		4220745	0					
ANR	4222557	Argument	newfd		4220745	2					
ANR	4222558	Identifier	newfd		4220745	0					
ANR	4222559	CompoundStatement		287:5:8326:8397	4220745	1					
ANR	4222560	IdentifierDeclStatement	"RBuffer * buf = r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd ) ;"	4823:5:137268:137339	4220745	0	True				
ANR	4222561	IdentifierDecl	"* buf = r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd )"		4220745	0					
ANR	4222562	IdentifierDeclType	RBuffer *		4220745	0					
ANR	4222563	Identifier	buf		4220745	1					
ANR	4222564	AssignmentExpression	"* buf = r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd )"		4220745	2		=			
ANR	4222565	Identifier	buf		4220745	0					
ANR	4222566	CallExpression	"r_core_syscallf ( core , ""dup2"" , ""%d, %d"" , fd , ( int ) newfd )"		4220745	1					
ANR	4222567	Callee	r_core_syscallf		4220745	0					
ANR	4222568	Identifier	r_core_syscallf		4220745	0					
ANR	4222569	ArgumentList	core		4220745	1					
ANR	4222570	Argument	core		4220745	0					
ANR	4222571	Identifier	core		4220745	0					
ANR	4222572	Argument	"""dup2"""		4220745	1					
ANR	4222573	PrimaryExpression	"""dup2"""		4220745	0					
ANR	4222574	Argument	"""%d, %d"""		4220745	2					
ANR	4222575	PrimaryExpression	"""%d, %d"""		4220745	0					
ANR	4222576	Argument	fd		4220745	3					
ANR	4222577	Identifier	fd		4220745	0					
ANR	4222578	Argument	( int ) newfd		4220745	4					
ANR	4222579	CastExpression	( int ) newfd		4220745	0					
ANR	4222580	CastTarget	int		4220745	0					
ANR	4222581	Identifier	newfd		4220745	1					
ANR	4222582	IfStatement	if ( buf )		4220745	1					
ANR	4222583	Condition	buf	4824:9:137350:137352	4220745	0	True				
ANR	4222584	Identifier	buf		4220745	0					
ANR	4222585	CompoundStatement		288:14:8413:8413	4220745	1					
ANR	4222586	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , NULL )"	4825:6:137363:137395	4220745	0	True				
ANR	4222587	CallExpression	"consumeBuffer ( buf , ""dx "" , NULL )"		4220745	0					
ANR	4222588	Callee	consumeBuffer		4220745	0					
ANR	4222589	Identifier	consumeBuffer		4220745	0					
ANR	4222590	ArgumentList	buf		4220745	1					
ANR	4222591	Argument	buf		4220745	0					
ANR	4222592	Identifier	buf		4220745	0					
ANR	4222593	Argument	"""dx """		4220745	1					
ANR	4222594	PrimaryExpression	"""dx """		4220745	0					
ANR	4222595	Argument	NULL		4220745	2					
ANR	4222596	Identifier	NULL		4220745	0					
ANR	4222597	ElseStatement	else		4220745	0					
ANR	4222598	CompoundStatement		290:12:8467:8467	4220745	0					
ANR	4222599	ExpressionStatement	"eprintf ( ""Cannot dup %d %d\\n"" , fd , ( int ) newfd )"	4827:6:137417:137463	4220745	0	True				
ANR	4222600	CallExpression	"eprintf ( ""Cannot dup %d %d\\n"" , fd , ( int ) newfd )"		4220745	0					
ANR	4222601	Callee	eprintf		4220745	0					
ANR	4222602	Identifier	eprintf		4220745	0					
ANR	4222603	ArgumentList	"""Cannot dup %d %d\\n"""		4220745	1					
ANR	4222604	Argument	"""Cannot dup %d %d\\n"""		4220745	0					
ANR	4222605	PrimaryExpression	"""Cannot dup %d %d\\n"""		4220745	0					
ANR	4222606	Argument	fd		4220745	1					
ANR	4222607	Identifier	fd		4220745	0					
ANR	4222608	Argument	( int ) newfd		4220745	2					
ANR	4222609	CastExpression	( int ) newfd		4220745	0					
ANR	4222610	CastTarget	int		4220745	0					
ANR	4222611	Identifier	newfd		4220745	1					
ANR	4222612	BreakStatement	break ;	4831:3:137486:137491	4220745	14	True				
ANR	4222613	Label	case 'r' :	4832:2:137495:137503	4220745	15	True				
ANR	4222614	CompoundStatement		301:4:8653:8688	4220745	16					
ANR	4222615	IdentifierDeclStatement	ut64 off = UT64_MAX ;	4834:4:137514:137533	4220745	0	True				
ANR	4222616	IdentifierDecl	off = UT64_MAX		4220745	0					
ANR	4222617	IdentifierDeclType	ut64		4220745	0					
ANR	4222618	Identifier	off		4220745	1					
ANR	4222619	AssignmentExpression	off = UT64_MAX		4220745	2		=			
ANR	4222620	Identifier	UT64_MAX		4220745	0					
ANR	4222621	Identifier	UT64_MAX		4220745	1					
ANR	4222622	IdentifierDeclStatement	ut64 len = UT64_MAX ;	4835:4:137539:137558	4220745	1	True				
ANR	4222623	IdentifierDecl	len = UT64_MAX		4220745	0					
ANR	4222624	IdentifierDeclType	ut64		4220745	0					
ANR	4222625	Identifier	len		4220745	1					
ANR	4222626	AssignmentExpression	len = UT64_MAX		4220745	2		=			
ANR	4222627	Identifier	UT64_MAX		4220745	0					
ANR	4222628	Identifier	UT64_MAX		4220745	1					
ANR	4222629	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4836:4:137564:137589	4220745	2	True				
ANR	4222630	IdentifierDecl	fd = atoi ( input + 2 )		4220745	0					
ANR	4222631	IdentifierDeclType	int		4220745	0					
ANR	4222632	Identifier	fd		4220745	1					
ANR	4222633	AssignmentExpression	fd = atoi ( input + 2 )		4220745	2		=			
ANR	4222634	Identifier	fd		4220745	0					
ANR	4222635	CallExpression	atoi ( input + 2 )		4220745	1					
ANR	4222636	Callee	atoi		4220745	0					
ANR	4222637	Identifier	atoi		4220745	0					
ANR	4222638	ArgumentList	input + 2		4220745	1					
ANR	4222639	Argument	input + 2		4220745	0					
ANR	4222640	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222641	Identifier	input		4220745	0					
ANR	4222642	PrimaryExpression	2		4220745	1					
ANR	4222643	IdentifierDeclStatement	"char * str = strchr ( input + 2 , ' ' ) ;"	4837:4:137595:137630	4220745	3	True				
ANR	4222644	IdentifierDecl	"* str = strchr ( input + 2 , ' ' )"		4220745	0					
ANR	4222645	IdentifierDeclType	char *		4220745	0					
ANR	4222646	Identifier	str		4220745	1					
ANR	4222647	AssignmentExpression	"* str = strchr ( input + 2 , ' ' )"		4220745	2		=			
ANR	4222648	Identifier	str		4220745	0					
ANR	4222649	CallExpression	"strchr ( input + 2 , ' ' )"		4220745	1					
ANR	4222650	Callee	strchr		4220745	0					
ANR	4222651	Identifier	strchr		4220745	0					
ANR	4222652	ArgumentList	input + 2		4220745	1					
ANR	4222653	Argument	input + 2		4220745	0					
ANR	4222654	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222655	Identifier	input		4220745	0					
ANR	4222656	PrimaryExpression	2		4220745	1					
ANR	4222657	Argument	' '		4220745	1					
ANR	4222658	PrimaryExpression	' '		4220745	0					
ANR	4222659	IfStatement	if ( str )		4220745	4					
ANR	4222660	Condition	str	4838:8:137640:137642	4220745	0	True				
ANR	4222661	Identifier	str		4220745	0					
ANR	4222662	ExpressionStatement	"off = r_num_math ( core -> num , str + 1 )"	4838:13:137645:137680	4220745	1	True				
ANR	4222663	AssignmentExpression	"off = r_num_math ( core -> num , str + 1 )"		4220745	0		=			
ANR	4222664	Identifier	off		4220745	0					
ANR	4222665	CallExpression	"r_num_math ( core -> num , str + 1 )"		4220745	1					
ANR	4222666	Callee	r_num_math		4220745	0					
ANR	4222667	Identifier	r_num_math		4220745	0					
ANR	4222668	ArgumentList	core -> num		4220745	1					
ANR	4222669	Argument	core -> num		4220745	0					
ANR	4222670	PtrMemberAccess	core -> num		4220745	0					
ANR	4222671	Identifier	core		4220745	0					
ANR	4222672	Identifier	num		4220745	1					
ANR	4222673	Argument	str + 1		4220745	1					
ANR	4222674	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222675	Identifier	str		4220745	0					
ANR	4222676	PrimaryExpression	1		4220745	1					
ANR	4222677	IfStatement	if ( str )		4220745	5					
ANR	4222678	Condition	str	4839:8:137690:137692	4220745	0	True				
ANR	4222679	Identifier	str		4220745	0					
ANR	4222680	ExpressionStatement	"str = strchr ( str + 1 , ' ' )"	4839:13:137695:137720	4220745	1	True				
ANR	4222681	AssignmentExpression	"str = strchr ( str + 1 , ' ' )"		4220745	0		=			
ANR	4222682	Identifier	str		4220745	0					
ANR	4222683	CallExpression	"strchr ( str + 1 , ' ' )"		4220745	1					
ANR	4222684	Callee	strchr		4220745	0					
ANR	4222685	Identifier	strchr		4220745	0					
ANR	4222686	ArgumentList	str + 1		4220745	1					
ANR	4222687	Argument	str + 1		4220745	0					
ANR	4222688	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222689	Identifier	str		4220745	0					
ANR	4222690	PrimaryExpression	1		4220745	1					
ANR	4222691	Argument	' '		4220745	1					
ANR	4222692	PrimaryExpression	' '		4220745	0					
ANR	4222693	IfStatement	if ( str )		4220745	6					
ANR	4222694	Condition	str	4840:8:137730:137732	4220745	0	True				
ANR	4222695	Identifier	str		4220745	0					
ANR	4222696	ExpressionStatement	"len = r_num_math ( core -> num , str + 1 )"	4840:13:137735:137770	4220745	1	True				
ANR	4222697	AssignmentExpression	"len = r_num_math ( core -> num , str + 1 )"		4220745	0		=			
ANR	4222698	Identifier	len		4220745	0					
ANR	4222699	CallExpression	"r_num_math ( core -> num , str + 1 )"		4220745	1					
ANR	4222700	Callee	r_num_math		4220745	0					
ANR	4222701	Identifier	r_num_math		4220745	0					
ANR	4222702	ArgumentList	core -> num		4220745	1					
ANR	4222703	Argument	core -> num		4220745	0					
ANR	4222704	PtrMemberAccess	core -> num		4220745	0					
ANR	4222705	Identifier	core		4220745	0					
ANR	4222706	Identifier	num		4220745	1					
ANR	4222707	Argument	str + 1		4220745	1					
ANR	4222708	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222709	Identifier	str		4220745	0					
ANR	4222710	PrimaryExpression	1		4220745	1					
ANR	4222711	IfStatement	"if ( len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len ) )"		4220745	7					
ANR	4222712	Condition	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len )"	4841:8:137780:137869	4220745	0	True				
ANR	4222713	OrExpression	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len )"		4220745	0		||			
ANR	4222714	EqualityExpression	len == UT64_MAX		4220745	0		==			
ANR	4222715	Identifier	len		4220745	0					
ANR	4222716	Identifier	UT64_MAX		4220745	1					
ANR	4222717	OrExpression	"off == UT64_MAX || ! r_debug_desc_read ( core -> dbg , fd , off , len )"		4220745	1		||			
ANR	4222718	EqualityExpression	off == UT64_MAX		4220745	0		==			
ANR	4222719	Identifier	off		4220745	0					
ANR	4222720	Identifier	UT64_MAX		4220745	1					
ANR	4222721	UnaryOperationExpression	"! r_debug_desc_read ( core -> dbg , fd , off , len )"		4220745	1					
ANR	4222722	UnaryOperator	!		4220745	0					
ANR	4222723	CallExpression	"r_debug_desc_read ( core -> dbg , fd , off , len )"		4220745	1					
ANR	4222724	Callee	r_debug_desc_read		4220745	0					
ANR	4222725	Identifier	r_debug_desc_read		4220745	0					
ANR	4222726	ArgumentList	core -> dbg		4220745	1					
ANR	4222727	Argument	core -> dbg		4220745	0					
ANR	4222728	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222729	Identifier	core		4220745	0					
ANR	4222730	Identifier	dbg		4220745	1					
ANR	4222731	Argument	fd		4220745	1					
ANR	4222732	Identifier	fd		4220745	0					
ANR	4222733	Argument	off		4220745	2					
ANR	4222734	Identifier	off		4220745	0					
ANR	4222735	Argument	len		4220745	3					
ANR	4222736	Identifier	len		4220745	0					
ANR	4222737	CompoundStatement		306:52:8930:8930	4220745	1					
ANR	4222738	Statement	consumeBuffer	4843:5:137879:137891	4220745	0	True				
ANR	4222739	Statement	(	4843:19:137893:137893	4220745	1	True				
ANR	4222740	Statement	r_core_syscallf	4843:20:137894:137908	4220745	2	True				
ANR	4222741	Statement	(	4843:36:137910:137910	4220745	3	True				
ANR	4222742	Statement	core	4843:37:137911:137914	4220745	4	True				
ANR	4222743	Statement	","	4843:41:137915:137915	4220745	5	True				
ANR	4222744	Statement	"""read"""	4843:43:137917:137922	4220745	6	True				
ANR	4222745	Statement	","	4843:49:137923:137923	4220745	7	True				
ANR	4222746	Statement	"""%d, 0x%"""	4843:51:137925:137933	4220745	8	True				
ANR	4222747	Statement	PFMT64x	4843:60:137934:137940	4220745	9	True				
ANR	4222748	Statement	""", %d"""	4843:67:137941:137946	4220745	10	True				
ANR	4222749	Statement	","	4843:73:137947:137947	4220745	11	True				
ANR	4222750	Statement	fd	4844:8:137957:137958	4220745	12	True				
ANR	4222751	Statement	","	4844:10:137959:137959	4220745	13	True				
ANR	4222752	Statement	off	4844:12:137961:137963	4220745	14	True				
ANR	4222753	Statement	","	4844:15:137964:137964	4220745	15	True				
ANR	4222754	Statement	(	4844:17:137966:137966	4220745	16	True				
ANR	4222755	Statement	int	4844:18:137967:137969	4220745	17	True				
ANR	4222756	Statement	)	4844:21:137970:137970	4220745	18	True				
ANR	4222757	Statement	len	4844:22:137971:137973	4220745	19	True				
ANR	4222758	Statement	)	4844:25:137974:137974	4220745	20	True				
ANR	4222759	Statement	","	4844:26:137975:137975	4220745	21	True				
ANR	4222760	Statement	"""dx """	4844:28:137977:137981	4220745	22	True				
ANR	4222761	Statement	","	4844:33:137982:137982	4220745	23	True				
ANR	4222762	Statement	"""Cannot read"""	4844:35:137984:137996	4220745	24	True				
ANR	4222763	Statement	)	4844:48:137997:137997	4220745	25	True				
ANR	4222764	ExpressionStatement		4844:49:137998:137998	4220745	26	True				
ANR	4222765	BreakStatement	break ;	4847:3:138014:138019	4220745	17	True				
ANR	4222766	Label	case 'w' :	4848:2:138023:138031	4220745	18	True				
ANR	4222767	CompoundStatement		317:4:9181:9216	4220745	19					
ANR	4222768	IdentifierDeclStatement	ut64 off = UT64_MAX ;	4850:4:138042:138061	4220745	0	True				
ANR	4222769	IdentifierDecl	off = UT64_MAX		4220745	0					
ANR	4222770	IdentifierDeclType	ut64		4220745	0					
ANR	4222771	Identifier	off		4220745	1					
ANR	4222772	AssignmentExpression	off = UT64_MAX		4220745	2		=			
ANR	4222773	Identifier	UT64_MAX		4220745	0					
ANR	4222774	Identifier	UT64_MAX		4220745	1					
ANR	4222775	IdentifierDeclStatement	ut64 len = UT64_MAX ;	4851:4:138067:138086	4220745	1	True				
ANR	4222776	IdentifierDecl	len = UT64_MAX		4220745	0					
ANR	4222777	IdentifierDeclType	ut64		4220745	0					
ANR	4222778	Identifier	len		4220745	1					
ANR	4222779	AssignmentExpression	len = UT64_MAX		4220745	2		=			
ANR	4222780	Identifier	UT64_MAX		4220745	0					
ANR	4222781	Identifier	UT64_MAX		4220745	1					
ANR	4222782	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4852:4:138092:138117	4220745	2	True				
ANR	4222783	IdentifierDecl	fd = atoi ( input + 2 )		4220745	0					
ANR	4222784	IdentifierDeclType	int		4220745	0					
ANR	4222785	Identifier	fd		4220745	1					
ANR	4222786	AssignmentExpression	fd = atoi ( input + 2 )		4220745	2		=			
ANR	4222787	Identifier	fd		4220745	0					
ANR	4222788	CallExpression	atoi ( input + 2 )		4220745	1					
ANR	4222789	Callee	atoi		4220745	0					
ANR	4222790	Identifier	atoi		4220745	0					
ANR	4222791	ArgumentList	input + 2		4220745	1					
ANR	4222792	Argument	input + 2		4220745	0					
ANR	4222793	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222794	Identifier	input		4220745	0					
ANR	4222795	PrimaryExpression	2		4220745	1					
ANR	4222796	IdentifierDeclStatement	"char * str = strchr ( input + 2 , ' ' ) ;"	4853:4:138123:138158	4220745	3	True				
ANR	4222797	IdentifierDecl	"* str = strchr ( input + 2 , ' ' )"		4220745	0					
ANR	4222798	IdentifierDeclType	char *		4220745	0					
ANR	4222799	Identifier	str		4220745	1					
ANR	4222800	AssignmentExpression	"* str = strchr ( input + 2 , ' ' )"		4220745	2		=			
ANR	4222801	Identifier	str		4220745	0					
ANR	4222802	CallExpression	"strchr ( input + 2 , ' ' )"		4220745	1					
ANR	4222803	Callee	strchr		4220745	0					
ANR	4222804	Identifier	strchr		4220745	0					
ANR	4222805	ArgumentList	input + 2		4220745	1					
ANR	4222806	Argument	input + 2		4220745	0					
ANR	4222807	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222808	Identifier	input		4220745	0					
ANR	4222809	PrimaryExpression	2		4220745	1					
ANR	4222810	Argument	' '		4220745	1					
ANR	4222811	PrimaryExpression	' '		4220745	0					
ANR	4222812	IfStatement	if ( str )		4220745	4					
ANR	4222813	Condition	str	4854:8:138168:138170	4220745	0	True				
ANR	4222814	Identifier	str		4220745	0					
ANR	4222815	ExpressionStatement	"off = r_num_math ( core -> num , str + 1 )"	4854:13:138173:138208	4220745	1	True				
ANR	4222816	AssignmentExpression	"off = r_num_math ( core -> num , str + 1 )"		4220745	0		=			
ANR	4222817	Identifier	off		4220745	0					
ANR	4222818	CallExpression	"r_num_math ( core -> num , str + 1 )"		4220745	1					
ANR	4222819	Callee	r_num_math		4220745	0					
ANR	4222820	Identifier	r_num_math		4220745	0					
ANR	4222821	ArgumentList	core -> num		4220745	1					
ANR	4222822	Argument	core -> num		4220745	0					
ANR	4222823	PtrMemberAccess	core -> num		4220745	0					
ANR	4222824	Identifier	core		4220745	0					
ANR	4222825	Identifier	num		4220745	1					
ANR	4222826	Argument	str + 1		4220745	1					
ANR	4222827	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222828	Identifier	str		4220745	0					
ANR	4222829	PrimaryExpression	1		4220745	1					
ANR	4222830	IfStatement	if ( str )		4220745	5					
ANR	4222831	Condition	str	4855:8:138218:138220	4220745	0	True				
ANR	4222832	Identifier	str		4220745	0					
ANR	4222833	ExpressionStatement	"str = strchr ( str + 1 , ' ' )"	4855:13:138223:138248	4220745	1	True				
ANR	4222834	AssignmentExpression	"str = strchr ( str + 1 , ' ' )"		4220745	0		=			
ANR	4222835	Identifier	str		4220745	0					
ANR	4222836	CallExpression	"strchr ( str + 1 , ' ' )"		4220745	1					
ANR	4222837	Callee	strchr		4220745	0					
ANR	4222838	Identifier	strchr		4220745	0					
ANR	4222839	ArgumentList	str + 1		4220745	1					
ANR	4222840	Argument	str + 1		4220745	0					
ANR	4222841	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222842	Identifier	str		4220745	0					
ANR	4222843	PrimaryExpression	1		4220745	1					
ANR	4222844	Argument	' '		4220745	1					
ANR	4222845	PrimaryExpression	' '		4220745	0					
ANR	4222846	IfStatement	if ( str )		4220745	6					
ANR	4222847	Condition	str	4856:8:138258:138260	4220745	0	True				
ANR	4222848	Identifier	str		4220745	0					
ANR	4222849	ExpressionStatement	"len = r_num_math ( core -> num , str + 1 )"	4856:13:138263:138298	4220745	1	True				
ANR	4222850	AssignmentExpression	"len = r_num_math ( core -> num , str + 1 )"		4220745	0		=			
ANR	4222851	Identifier	len		4220745	0					
ANR	4222852	CallExpression	"r_num_math ( core -> num , str + 1 )"		4220745	1					
ANR	4222853	Callee	r_num_math		4220745	0					
ANR	4222854	Identifier	r_num_math		4220745	0					
ANR	4222855	ArgumentList	core -> num		4220745	1					
ANR	4222856	Argument	core -> num		4220745	0					
ANR	4222857	PtrMemberAccess	core -> num		4220745	0					
ANR	4222858	Identifier	core		4220745	0					
ANR	4222859	Identifier	num		4220745	1					
ANR	4222860	Argument	str + 1		4220745	1					
ANR	4222861	AdditiveExpression	str + 1		4220745	0		+			
ANR	4222862	Identifier	str		4220745	0					
ANR	4222863	PrimaryExpression	1		4220745	1					
ANR	4222864	IfStatement	"if ( len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len ) )"		4220745	7					
ANR	4222865	Condition	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len )"	4857:8:138308:138398	4220745	0	True				
ANR	4222866	OrExpression	"len == UT64_MAX || off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len )"		4220745	0		||			
ANR	4222867	EqualityExpression	len == UT64_MAX		4220745	0		==			
ANR	4222868	Identifier	len		4220745	0					
ANR	4222869	Identifier	UT64_MAX		4220745	1					
ANR	4222870	OrExpression	"off == UT64_MAX || ! r_debug_desc_write ( core -> dbg , fd , off , len )"		4220745	1		||			
ANR	4222871	EqualityExpression	off == UT64_MAX		4220745	0		==			
ANR	4222872	Identifier	off		4220745	0					
ANR	4222873	Identifier	UT64_MAX		4220745	1					
ANR	4222874	UnaryOperationExpression	"! r_debug_desc_write ( core -> dbg , fd , off , len )"		4220745	1					
ANR	4222875	UnaryOperator	!		4220745	0					
ANR	4222876	CallExpression	"r_debug_desc_write ( core -> dbg , fd , off , len )"		4220745	1					
ANR	4222877	Callee	r_debug_desc_write		4220745	0					
ANR	4222878	Identifier	r_debug_desc_write		4220745	0					
ANR	4222879	ArgumentList	core -> dbg		4220745	1					
ANR	4222880	Argument	core -> dbg		4220745	0					
ANR	4222881	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4222882	Identifier	core		4220745	0					
ANR	4222883	Identifier	dbg		4220745	1					
ANR	4222884	Argument	fd		4220745	1					
ANR	4222885	Identifier	fd		4220745	0					
ANR	4222886	Argument	off		4220745	2					
ANR	4222887	Identifier	off		4220745	0					
ANR	4222888	Argument	len		4220745	3					
ANR	4222889	Identifier	len		4220745	0					
ANR	4222890	CompoundStatement		322:53:9459:9459	4220745	1					
ANR	4222891	Statement	RBuffer	4859:5:138408:138414	4220745	0	True				
ANR	4222892	Statement	*	4859:13:138416:138416	4220745	1	True				
ANR	4222893	Statement	buf	4859:14:138417:138419	4220745	2	True				
ANR	4222894	Statement	=	4859:18:138421:138421	4220745	3	True				
ANR	4222895	Statement	r_core_syscallf	4859:20:138423:138437	4220745	4	True				
ANR	4222896	Statement	(	4859:36:138439:138439	4220745	5	True				
ANR	4222897	Statement	core	4859:37:138440:138443	4220745	6	True				
ANR	4222898	Statement	","	4859:41:138444:138444	4220745	7	True				
ANR	4222899	Statement	"""write"""	4859:43:138446:138452	4220745	8	True				
ANR	4222900	Statement	","	4859:50:138453:138453	4220745	9	True				
ANR	4222901	Statement	"""%d, 0x%"""	4859:52:138455:138463	4220745	10	True				
ANR	4222902	Statement	PFMT64x	4859:61:138464:138470	4220745	11	True				
ANR	4222903	Statement	""", %d"""	4859:68:138471:138476	4220745	12	True				
ANR	4222904	Statement	","	4859:74:138477:138477	4220745	13	True				
ANR	4222905	Statement	fd	4859:76:138479:138480	4220745	14	True				
ANR	4222906	Statement	","	4859:78:138481:138481	4220745	15	True				
ANR	4222907	Statement	off	4859:80:138483:138485	4220745	16	True				
ANR	4222908	Statement	","	4859:83:138486:138486	4220745	17	True				
ANR	4222909	Statement	(	4859:85:138488:138488	4220745	18	True				
ANR	4222910	Statement	int	4859:86:138489:138491	4220745	19	True				
ANR	4222911	Statement	)	4859:89:138492:138492	4220745	20	True				
ANR	4222912	Statement	len	4859:90:138493:138495	4220745	21	True				
ANR	4222913	Statement	)	4859:93:138496:138496	4220745	22	True				
ANR	4222914	ExpressionStatement		4859:94:138497:138497	4220745	23	True				
ANR	4222915	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot write"" )"	4860:5:138504:138546	4220745	24	True				
ANR	4222916	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot write"" )"		4220745	0					
ANR	4222917	Callee	consumeBuffer		4220745	0					
ANR	4222918	Identifier	consumeBuffer		4220745	0					
ANR	4222919	ArgumentList	buf		4220745	1					
ANR	4222920	Argument	buf		4220745	0					
ANR	4222921	Identifier	buf		4220745	0					
ANR	4222922	Argument	"""dx """		4220745	1					
ANR	4222923	PrimaryExpression	"""dx """		4220745	0					
ANR	4222924	Argument	"""Cannot write"""		4220745	2					
ANR	4222925	PrimaryExpression	"""Cannot write"""		4220745	0					
ANR	4222926	BreakStatement	break ;	4863:3:138562:138567	4220745	20	True				
ANR	4222927	Label	case '-' :	4864:2:138571:138579	4220745	21	True				
ANR	4222928	CompoundStatement		334:4:9850:9906	4220745	22					
ANR	4222929	IdentifierDeclStatement	int fd = atoi ( input + 2 ) ;	4868:4:138678:138703	4220745	0	True				
ANR	4222930	IdentifierDecl	fd = atoi ( input + 2 )		4220745	0					
ANR	4222931	IdentifierDeclType	int		4220745	0					
ANR	4222932	Identifier	fd		4220745	1					
ANR	4222933	AssignmentExpression	fd = atoi ( input + 2 )		4220745	2		=			
ANR	4222934	Identifier	fd		4220745	0					
ANR	4222935	CallExpression	atoi ( input + 2 )		4220745	1					
ANR	4222936	Callee	atoi		4220745	0					
ANR	4222937	Identifier	atoi		4220745	0					
ANR	4222938	ArgumentList	input + 2		4220745	1					
ANR	4222939	Argument	input + 2		4220745	0					
ANR	4222940	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222941	Identifier	input		4220745	0					
ANR	4222942	PrimaryExpression	2		4220745	1					
ANR	4222943	IdentifierDeclStatement	"RBuffer * buf = r_core_syscallf ( core , ""close"" , ""%d"" , fd ) ;"	4870:4:138792:138848	4220745	1	True				
ANR	4222944	IdentifierDecl	"* buf = r_core_syscallf ( core , ""close"" , ""%d"" , fd )"		4220745	0					
ANR	4222945	IdentifierDeclType	RBuffer *		4220745	0					
ANR	4222946	Identifier	buf		4220745	1					
ANR	4222947	AssignmentExpression	"* buf = r_core_syscallf ( core , ""close"" , ""%d"" , fd )"		4220745	2		=			
ANR	4222948	Identifier	buf		4220745	0					
ANR	4222949	CallExpression	"r_core_syscallf ( core , ""close"" , ""%d"" , fd )"		4220745	1					
ANR	4222950	Callee	r_core_syscallf		4220745	0					
ANR	4222951	Identifier	r_core_syscallf		4220745	0					
ANR	4222952	ArgumentList	core		4220745	1					
ANR	4222953	Argument	core		4220745	0					
ANR	4222954	Identifier	core		4220745	0					
ANR	4222955	Argument	"""close"""		4220745	1					
ANR	4222956	PrimaryExpression	"""close"""		4220745	0					
ANR	4222957	Argument	"""%d"""		4220745	2					
ANR	4222958	PrimaryExpression	"""%d"""		4220745	0					
ANR	4222959	Argument	fd		4220745	3					
ANR	4222960	Identifier	fd		4220745	0					
ANR	4222961	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot close"" )"	4871:4:138854:138896	4220745	2	True				
ANR	4222962	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot close"" )"		4220745	0					
ANR	4222963	Callee	consumeBuffer		4220745	0					
ANR	4222964	Identifier	consumeBuffer		4220745	0					
ANR	4222965	ArgumentList	buf		4220745	1					
ANR	4222966	Argument	buf		4220745	0					
ANR	4222967	Identifier	buf		4220745	0					
ANR	4222968	Argument	"""dx """		4220745	1					
ANR	4222969	PrimaryExpression	"""dx """		4220745	0					
ANR	4222970	Argument	"""Cannot close"""		4220745	2					
ANR	4222971	PrimaryExpression	"""Cannot close"""		4220745	0					
ANR	4222972	BreakStatement	break ;	4873:3:138906:138911	4220745	23	True				
ANR	4222973	Label	case ' ' :	4874:2:138915:138923	4220745	24	True				
ANR	4222974	CompoundStatement		341:4:10043:10122	4220745	25					
ANR	4222975	IdentifierDeclStatement	"RBuffer * buf = r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 ) ;"	4877:4:138985:139064	4220745	0	True				
ANR	4222976	IdentifierDecl	"* buf = r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 )"		4220745	0					
ANR	4222977	IdentifierDeclType	RBuffer *		4220745	0					
ANR	4222978	Identifier	buf		4220745	1					
ANR	4222979	AssignmentExpression	"* buf = r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 )"		4220745	2		=			
ANR	4222980	Identifier	buf		4220745	0					
ANR	4222981	CallExpression	"r_core_syscallf ( core , ""open"" , ""%s, %d, %d"" , input + 2 , 2 , 0644 )"		4220745	1					
ANR	4222982	Callee	r_core_syscallf		4220745	0					
ANR	4222983	Identifier	r_core_syscallf		4220745	0					
ANR	4222984	ArgumentList	core		4220745	1					
ANR	4222985	Argument	core		4220745	0					
ANR	4222986	Identifier	core		4220745	0					
ANR	4222987	Argument	"""open"""		4220745	1					
ANR	4222988	PrimaryExpression	"""open"""		4220745	0					
ANR	4222989	Argument	"""%s, %d, %d"""		4220745	2					
ANR	4222990	PrimaryExpression	"""%s, %d, %d"""		4220745	0					
ANR	4222991	Argument	input + 2		4220745	3					
ANR	4222992	AdditiveExpression	input + 2		4220745	0		+			
ANR	4222993	Identifier	input		4220745	0					
ANR	4222994	PrimaryExpression	2		4220745	1					
ANR	4222995	Argument	2		4220745	4					
ANR	4222996	PrimaryExpression	2		4220745	0					
ANR	4222997	Argument	0644		4220745	5					
ANR	4222998	PrimaryExpression	0644		4220745	0					
ANR	4222999	ExpressionStatement	"consumeBuffer ( buf , ""dx "" , ""Cannot open"" )"	4878:4:139070:139111	4220745	1	True				
ANR	4223000	CallExpression	"consumeBuffer ( buf , ""dx "" , ""Cannot open"" )"		4220745	0					
ANR	4223001	Callee	consumeBuffer		4220745	0					
ANR	4223002	Identifier	consumeBuffer		4220745	0					
ANR	4223003	ArgumentList	buf		4220745	1					
ANR	4223004	Argument	buf		4220745	0					
ANR	4223005	Identifier	buf		4220745	0					
ANR	4223006	Argument	"""dx """		4220745	1					
ANR	4223007	PrimaryExpression	"""dx """		4220745	0					
ANR	4223008	Argument	"""Cannot open"""		4220745	2					
ANR	4223009	PrimaryExpression	"""Cannot open"""		4220745	0					
ANR	4223010	BreakStatement	break ;	4881:3:139137:139142	4220745	26	True				
ANR	4223011	Label	case '?' :	4882:2:139146:139154	4220745	27	True				
ANR	4223012	Label	default :	4883:2:139158:139165	4220745	28	True				
ANR	4223013	Identifier	default		4220745	0					
ANR	4223014	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dd )"	4884:3:139170:139205	4220745	29	True				
ANR	4223015	CallExpression	"r_core_cmd_help ( core , help_msg_dd )"		4220745	0					
ANR	4223016	Callee	r_core_cmd_help		4220745	0					
ANR	4223017	Identifier	r_core_cmd_help		4220745	0					
ANR	4223018	ArgumentList	core		4220745	1					
ANR	4223019	Argument	core		4220745	0					
ANR	4223020	Identifier	core		4220745	0					
ANR	4223021	Argument	help_msg_dd		4220745	1					
ANR	4223022	Identifier	help_msg_dd		4220745	0					
ANR	4223023	BreakStatement	break ;	4885:3:139210:139215	4220745	30	True				
ANR	4223024	BreakStatement	break ;	4887:2:139223:139228	4220745	5	True				
ANR	4223025	Label	case 's' :	4888:1:139231:139239	4220745	6	True				
ANR	4223026	IfStatement	"if ( cmd_debug_step ( core , input ) )"		4220745	7					
ANR	4223027	Condition	"cmd_debug_step ( core , input )"	4889:6:139247:139274	4220745	0	True				
ANR	4223028	CallExpression	"cmd_debug_step ( core , input )"		4220745	0					
ANR	4223029	Callee	cmd_debug_step		4220745	0					
ANR	4223030	Identifier	cmd_debug_step		4220745	0					
ANR	4223031	ArgumentList	core		4220745	1					
ANR	4223032	Argument	core		4220745	0					
ANR	4223033	Identifier	core		4220745	0					
ANR	4223034	Argument	input		4220745	1					
ANR	4223035	Identifier	input		4220745	0					
ANR	4223036	CompoundStatement		353:36:10335:10335	4220745	1					
ANR	4223037	ExpressionStatement	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"	4890:3:139282:139334	4220745	0	True				
ANR	4223038	AssignmentExpression	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		4220745	0		=			
ANR	4223039	Identifier	follow		4220745	0					
ANR	4223040	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		4220745	1					
ANR	4223041	Callee	r_config_get_i		4220745	0					
ANR	4223042	Identifier	r_config_get_i		4220745	0					
ANR	4223043	ArgumentList	core -> config		4220745	1					
ANR	4223044	Argument	core -> config		4220745	0					
ANR	4223045	PtrMemberAccess	core -> config		4220745	0					
ANR	4223046	Identifier	core		4220745	0					
ANR	4223047	Identifier	config		4220745	1					
ANR	4223048	Argument	"""dbg.follow"""		4220745	1					
ANR	4223049	PrimaryExpression	"""dbg.follow"""		4220745	0					
ANR	4223050	BreakStatement	break ;	4892:2:139342:139347	4220745	8	True				
ANR	4223051	Label	case 'b' :	4893:1:139350:139358	4220745	9	True				
ANR	4223052	ExpressionStatement	"r_core_cmd_bp ( core , input )"	4894:2:139362:139389	4220745	10	True				
ANR	4223053	CallExpression	"r_core_cmd_bp ( core , input )"		4220745	0					
ANR	4223054	Callee	r_core_cmd_bp		4220745	0					
ANR	4223055	Identifier	r_core_cmd_bp		4220745	0					
ANR	4223056	ArgumentList	core		4220745	1					
ANR	4223057	Argument	core		4220745	0					
ANR	4223058	Identifier	core		4220745	0					
ANR	4223059	Argument	input		4220745	1					
ANR	4223060	Identifier	input		4220745	0					
ANR	4223061	BreakStatement	break ;	4895:2:139393:139398	4220745	11	True				
ANR	4223062	Label	case 'H' :	4896:1:139401:139409	4220745	12	True				
ANR	4223063	ExpressionStatement	"eprintf ( ""TODO: transplant process\\n"" )"	4897:2:139413:139451	4220745	13	True				
ANR	4223064	CallExpression	"eprintf ( ""TODO: transplant process\\n"" )"		4220745	0					
ANR	4223065	Callee	eprintf		4220745	0					
ANR	4223066	Identifier	eprintf		4220745	0					
ANR	4223067	ArgumentList	"""TODO: transplant process\\n"""		4220745	1					
ANR	4223068	Argument	"""TODO: transplant process\\n"""		4220745	0					
ANR	4223069	PrimaryExpression	"""TODO: transplant process\\n"""		4220745	0					
ANR	4223070	BreakStatement	break ;	4898:2:139455:139460	4220745	14	True				
ANR	4223071	Label	case 'c' :	4899:1:139463:139471	4220745	15	True				
ANR	4223072	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	4900:2:139483:139531	4220745	16	True				
ANR	4223073	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		4220745	0					
ANR	4223074	Callee	r_cons_break_push		4220745	0					
ANR	4223075	Identifier	r_cons_break_push		4220745	0					
ANR	4223076	ArgumentList	static_debug_stop		4220745	1					
ANR	4223077	Argument	static_debug_stop		4220745	0					
ANR	4223078	Identifier	static_debug_stop		4220745	0					
ANR	4223079	Argument	core -> dbg		4220745	1					
ANR	4223080	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223081	Identifier	core		4220745	0					
ANR	4223082	Identifier	dbg		4220745	1					
ANR	4223083	ExpressionStatement	"( void ) cmd_debug_continue ( core , input )"	4901:2:139535:139573	4220745	17	True				
ANR	4223084	CastExpression	"( void ) cmd_debug_continue ( core , input )"		4220745	0					
ANR	4223085	CastTarget	void		4220745	0					
ANR	4223086	CallExpression	"cmd_debug_continue ( core , input )"		4220745	1					
ANR	4223087	Callee	cmd_debug_continue		4220745	0					
ANR	4223088	Identifier	cmd_debug_continue		4220745	0					
ANR	4223089	ArgumentList	core		4220745	1					
ANR	4223090	Argument	core		4220745	0					
ANR	4223091	Identifier	core		4220745	0					
ANR	4223092	Argument	input		4220745	1					
ANR	4223093	Identifier	input		4220745	0					
ANR	4223094	ExpressionStatement	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"	4902:2:139577:139629	4220745	18	True				
ANR	4223095	AssignmentExpression	"follow = r_config_get_i ( core -> config , ""dbg.follow"" )"		4220745	0		=			
ANR	4223096	Identifier	follow		4220745	0					
ANR	4223097	CallExpression	"r_config_get_i ( core -> config , ""dbg.follow"" )"		4220745	1					
ANR	4223098	Callee	r_config_get_i		4220745	0					
ANR	4223099	Identifier	r_config_get_i		4220745	0					
ANR	4223100	ArgumentList	core -> config		4220745	1					
ANR	4223101	Argument	core -> config		4220745	0					
ANR	4223102	PtrMemberAccess	core -> config		4220745	0					
ANR	4223103	Identifier	core		4220745	0					
ANR	4223104	Identifier	config		4220745	1					
ANR	4223105	Argument	"""dbg.follow"""		4220745	1					
ANR	4223106	PrimaryExpression	"""dbg.follow"""		4220745	0					
ANR	4223107	ExpressionStatement	r_cons_break_pop ( )	4903:2:139633:139652	4220745	19	True				
ANR	4223108	CallExpression	r_cons_break_pop ( )		4220745	0					
ANR	4223109	Callee	r_cons_break_pop		4220745	0					
ANR	4223110	Identifier	r_cons_break_pop		4220745	0					
ANR	4223111	ArgumentList			4220745	1					
ANR	4223112	BreakStatement	break ;	4904:2:139656:139661	4220745	20	True				
ANR	4223113	Label	case 'm' :	4905:1:139664:139672	4220745	21	True				
ANR	4223114	ExpressionStatement	"cmd_debug_map ( core , input + 1 )"	4906:2:139684:139715	4220745	22	True				
ANR	4223115	CallExpression	"cmd_debug_map ( core , input + 1 )"		4220745	0					
ANR	4223116	Callee	cmd_debug_map		4220745	0					
ANR	4223117	Identifier	cmd_debug_map		4220745	0					
ANR	4223118	ArgumentList	core		4220745	1					
ANR	4223119	Argument	core		4220745	0					
ANR	4223120	Identifier	core		4220745	0					
ANR	4223121	Argument	input + 1		4220745	1					
ANR	4223122	AdditiveExpression	input + 1		4220745	0		+			
ANR	4223123	Identifier	input		4220745	0					
ANR	4223124	PrimaryExpression	1		4220745	1					
ANR	4223125	BreakStatement	break ;	4907:2:139719:139724	4220745	23	True				
ANR	4223126	Label	case 'r' :	4908:1:139727:139735	4220745	24	True				
ANR	4223127	IfStatement	if ( core -> io -> debug || input [ 1 ] == '?' )		4220745	25					
ANR	4223128	Condition	core -> io -> debug || input [ 1 ] == '?'	4909:6:139751:139784	4220745	0	True				
ANR	4223129	OrExpression	core -> io -> debug || input [ 1 ] == '?'		4220745	0		||			
ANR	4223130	PtrMemberAccess	core -> io -> debug		4220745	0					
ANR	4223131	PtrMemberAccess	core -> io		4220745	0					
ANR	4223132	Identifier	core		4220745	0					
ANR	4223133	Identifier	io		4220745	1					
ANR	4223134	Identifier	debug		4220745	1					
ANR	4223135	EqualityExpression	input [ 1 ] == '?'		4220745	1		==			
ANR	4223136	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4223137	Identifier	input		4220745	0					
ANR	4223138	PrimaryExpression	1		4220745	1					
ANR	4223139	PrimaryExpression	'?'		4220745	1					
ANR	4223140	CompoundStatement		373:42:10845:10845	4220745	1					
ANR	4223141	ExpressionStatement	"cmd_debug_reg ( core , input + 1 )"	4910:3:139792:139823	4220745	0	True				
ANR	4223142	CallExpression	"cmd_debug_reg ( core , input + 1 )"		4220745	0					
ANR	4223143	Callee	cmd_debug_reg		4220745	0					
ANR	4223144	Identifier	cmd_debug_reg		4220745	0					
ANR	4223145	ArgumentList	core		4220745	1					
ANR	4223146	Argument	core		4220745	0					
ANR	4223147	Identifier	core		4220745	0					
ANR	4223148	Argument	input + 1		4220745	1					
ANR	4223149	AdditiveExpression	input + 1		4220745	0		+			
ANR	4223150	Identifier	input		4220745	0					
ANR	4223151	PrimaryExpression	1		4220745	1					
ANR	4223152	ElseStatement	else		4220745	0					
ANR	4223153	CompoundStatement		376:3:10897:10945	4220745	0					
ANR	4223154	IdentifierDeclStatement	"void cmd_anal_reg ( RCore * core , const char * str ) ;"	4912:3:139839:139887	4220745	0	True				
ANR	4223155	IdentifierDecl	"cmd_anal_reg ( RCore * core , const char * str )"		4220745	0					
ANR	4223156	IdentifierDeclType	"void ( RCore * core , const char * str )"		4220745	0					
ANR	4223157	Identifier	cmd_anal_reg		4220745	1					
ANR	4223158	Identifier	core		4220745	2					
ANR	4223159	Identifier	str		4220745	3					
ANR	4223160	ExpressionStatement	"cmd_anal_reg ( core , input + 1 )"	4913:3:139892:139922	4220745	1	True				
ANR	4223161	CallExpression	"cmd_anal_reg ( core , input + 1 )"		4220745	0					
ANR	4223162	Callee	cmd_anal_reg		4220745	0					
ANR	4223163	Identifier	cmd_anal_reg		4220745	0					
ANR	4223164	ArgumentList	core		4220745	1					
ANR	4223165	Argument	core		4220745	0					
ANR	4223166	Identifier	core		4220745	0					
ANR	4223167	Argument	input + 1		4220745	1					
ANR	4223168	AdditiveExpression	input + 1		4220745	0		+			
ANR	4223169	Identifier	input		4220745	0					
ANR	4223170	PrimaryExpression	1		4220745	1					
ANR	4223171	BreakStatement	break ;	4916:2:139964:139969	4220745	26	True				
ANR	4223172	Label	case 'p' :	4917:1:139972:139980	4220745	27	True				
ANR	4223173	ExpressionStatement	"cmd_debug_pid ( core , input )"	4918:2:139992:140019	4220745	28	True				
ANR	4223174	CallExpression	"cmd_debug_pid ( core , input )"		4220745	0					
ANR	4223175	Callee	cmd_debug_pid		4220745	0					
ANR	4223176	Identifier	cmd_debug_pid		4220745	0					
ANR	4223177	ArgumentList	core		4220745	1					
ANR	4223178	Argument	core		4220745	0					
ANR	4223179	Identifier	core		4220745	0					
ANR	4223180	Argument	input		4220745	1					
ANR	4223181	Identifier	input		4220745	0					
ANR	4223182	BreakStatement	break ;	4919:2:140023:140028	4220745	29	True				
ANR	4223183	Label	case 'L' :	4920:1:140031:140039	4220745	30	True				
ANR	4223184	SwitchStatement	switch ( input [ 1 ] )		4220745	31					
ANR	4223185	Condition	input [ 1 ]	4921:10:140059:140066	4220745	0	True				
ANR	4223186	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4223187	Identifier	input		4220745	0					
ANR	4223188	PrimaryExpression	1		4220745	1					
ANR	4223189	CompoundStatement		385:20:11127:11127	4220745	1					
ANR	4223190	Label	case 'q' :	4922:2:140073:140081	4220745	0	True				
ANR	4223191	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 'q' )"	4923:3:140086:140122	4220745	1	True				
ANR	4223192	CallExpression	"r_debug_plugin_list ( core -> dbg , 'q' )"		4220745	0					
ANR	4223193	Callee	r_debug_plugin_list		4220745	0					
ANR	4223194	Identifier	r_debug_plugin_list		4220745	0					
ANR	4223195	ArgumentList	core -> dbg		4220745	1					
ANR	4223196	Argument	core -> dbg		4220745	0					
ANR	4223197	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223198	Identifier	core		4220745	0					
ANR	4223199	Identifier	dbg		4220745	1					
ANR	4223200	Argument	'q'		4220745	1					
ANR	4223201	PrimaryExpression	'q'		4220745	0					
ANR	4223202	BreakStatement	break ;	4924:3:140127:140132	4220745	2	True				
ANR	4223203	Label	case 'j' :	4925:2:140136:140144	4220745	3	True				
ANR	4223204	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 'j' )"	4926:3:140149:140185	4220745	4	True				
ANR	4223205	CallExpression	"r_debug_plugin_list ( core -> dbg , 'j' )"		4220745	0					
ANR	4223206	Callee	r_debug_plugin_list		4220745	0					
ANR	4223207	Identifier	r_debug_plugin_list		4220745	0					
ANR	4223208	ArgumentList	core -> dbg		4220745	1					
ANR	4223209	Argument	core -> dbg		4220745	0					
ANR	4223210	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223211	Identifier	core		4220745	0					
ANR	4223212	Identifier	dbg		4220745	1					
ANR	4223213	Argument	'j'		4220745	1					
ANR	4223214	PrimaryExpression	'j'		4220745	0					
ANR	4223215	BreakStatement	break ;	4927:3:140190:140195	4220745	5	True				
ANR	4223216	Label	case '?' :	4928:2:140199:140207	4220745	6	True				
ANR	4223217	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dL )"	4929:3:140212:140247	4220745	7	True				
ANR	4223218	CallExpression	"r_core_cmd_help ( core , help_msg_dL )"		4220745	0					
ANR	4223219	Callee	r_core_cmd_help		4220745	0					
ANR	4223220	Identifier	r_core_cmd_help		4220745	0					
ANR	4223221	ArgumentList	core		4220745	1					
ANR	4223222	Argument	core		4220745	0					
ANR	4223223	Identifier	core		4220745	0					
ANR	4223224	Argument	help_msg_dL		4220745	1					
ANR	4223225	Identifier	help_msg_dL		4220745	0					
ANR	4223226	BreakStatement	break ;	4930:3:140252:140257	4220745	8	True				
ANR	4223227	Label	case ' ' :	4931:2:140261:140269	4220745	9	True				
ANR	4223228	CompoundStatement		396:3:11334:11372	4220745	10					
ANR	4223229	IdentifierDeclStatement	char * str = r_str_trim_dup ( input + 2 ) ;	4932:3:140276:140314	4220745	0	True				
ANR	4223230	IdentifierDecl	* str = r_str_trim_dup ( input + 2 )		4220745	0					
ANR	4223231	IdentifierDeclType	char *		4220745	0					
ANR	4223232	Identifier	str		4220745	1					
ANR	4223233	AssignmentExpression	* str = r_str_trim_dup ( input + 2 )		4220745	2		=			
ANR	4223234	Identifier	str		4220745	0					
ANR	4223235	CallExpression	r_str_trim_dup ( input + 2 )		4220745	1					
ANR	4223236	Callee	r_str_trim_dup		4220745	0					
ANR	4223237	Identifier	r_str_trim_dup		4220745	0					
ANR	4223238	ArgumentList	input + 2		4220745	1					
ANR	4223239	Argument	input + 2		4220745	0					
ANR	4223240	AdditiveExpression	input + 2		4220745	0		+			
ANR	4223241	Identifier	input		4220745	0					
ANR	4223242	PrimaryExpression	2		4220745	1					
ANR	4223243	ExpressionStatement	"r_config_set ( core -> config , ""dbg.backend"" , str )"	4933:3:140319:140366	4220745	1	True				
ANR	4223244	CallExpression	"r_config_set ( core -> config , ""dbg.backend"" , str )"		4220745	0					
ANR	4223245	Callee	r_config_set		4220745	0					
ANR	4223246	Identifier	r_config_set		4220745	0					
ANR	4223247	ArgumentList	core -> config		4220745	1					
ANR	4223248	Argument	core -> config		4220745	0					
ANR	4223249	PtrMemberAccess	core -> config		4220745	0					
ANR	4223250	Identifier	core		4220745	0					
ANR	4223251	Identifier	config		4220745	1					
ANR	4223252	Argument	"""dbg.backend"""		4220745	1					
ANR	4223253	PrimaryExpression	"""dbg.backend"""		4220745	0					
ANR	4223254	Argument	str		4220745	2					
ANR	4223255	Identifier	str		4220745	0					
ANR	4223256	ExpressionStatement	free ( str )	4935:3:140430:140440	4220745	2	True				
ANR	4223257	CallExpression	free ( str )		4220745	0					
ANR	4223258	Callee	free		4220745	0					
ANR	4223259	Identifier	free		4220745	0					
ANR	4223260	ArgumentList	str		4220745	1					
ANR	4223261	Argument	str		4220745	0					
ANR	4223262	Identifier	str		4220745	0					
ANR	4223263	BreakStatement	break ;	4937:3:140450:140455	4220745	11	True				
ANR	4223264	Label	default :	4938:2:140459:140466	4220745	12	True				
ANR	4223265	Identifier	default		4220745	0					
ANR	4223266	ExpressionStatement	"r_debug_plugin_list ( core -> dbg , 0 )"	4939:3:140471:140505	4220745	13	True				
ANR	4223267	CallExpression	"r_debug_plugin_list ( core -> dbg , 0 )"		4220745	0					
ANR	4223268	Callee	r_debug_plugin_list		4220745	0					
ANR	4223269	Identifier	r_debug_plugin_list		4220745	0					
ANR	4223270	ArgumentList	core -> dbg		4220745	1					
ANR	4223271	Argument	core -> dbg		4220745	0					
ANR	4223272	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223273	Identifier	core		4220745	0					
ANR	4223274	Identifier	dbg		4220745	1					
ANR	4223275	Argument	0		4220745	1					
ANR	4223276	PrimaryExpression	0		4220745	0					
ANR	4223277	BreakStatement	break ;	4940:3:140510:140515	4220745	14	True				
ANR	4223278	BreakStatement	break ;	4942:2:140523:140528	4220745	32	True				
ANR	4223279	Label	case 'i' :	4943:1:140531:140539	4220745	33	True				
ANR	4223280	CompoundStatement		411:3:11732:11749	4220745	34					
ANR	4223281	IdentifierDeclStatement	"RDebugInfo * rdi = r_debug_info ( core -> dbg , input + 2 ) ;"	4945:3:140556:140609	4220745	0	True				
ANR	4223282	IdentifierDecl	"* rdi = r_debug_info ( core -> dbg , input + 2 )"		4220745	0					
ANR	4223283	IdentifierDeclType	RDebugInfo *		4220745	0					
ANR	4223284	Identifier	rdi		4220745	1					
ANR	4223285	AssignmentExpression	"* rdi = r_debug_info ( core -> dbg , input + 2 )"		4220745	2		=			
ANR	4223286	Identifier	rdi		4220745	0					
ANR	4223287	CallExpression	"r_debug_info ( core -> dbg , input + 2 )"		4220745	1					
ANR	4223288	Callee	r_debug_info		4220745	0					
ANR	4223289	Identifier	r_debug_info		4220745	0					
ANR	4223290	ArgumentList	core -> dbg		4220745	1					
ANR	4223291	Argument	core -> dbg		4220745	0					
ANR	4223292	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223293	Identifier	core		4220745	0					
ANR	4223294	Identifier	dbg		4220745	1					
ANR	4223295	Argument	input + 2		4220745	1					
ANR	4223296	AdditiveExpression	input + 2		4220745	0		+			
ANR	4223297	Identifier	input		4220745	0					
ANR	4223298	PrimaryExpression	2		4220745	1					
ANR	4223299	IdentifierDeclStatement	RDebugReasonType stop = r_debug_stop_reason ( core -> dbg ) ;	4946:3:140614:140669	4220745	1	True				
ANR	4223300	IdentifierDecl	stop = r_debug_stop_reason ( core -> dbg )		4220745	0					
ANR	4223301	IdentifierDeclType	RDebugReasonType		4220745	0					
ANR	4223302	Identifier	stop		4220745	1					
ANR	4223303	AssignmentExpression	stop = r_debug_stop_reason ( core -> dbg )		4220745	2		=			
ANR	4223304	Identifier	stop		4220745	0					
ANR	4223305	CallExpression	r_debug_stop_reason ( core -> dbg )		4220745	1					
ANR	4223306	Callee	r_debug_stop_reason		4220745	0					
ANR	4223307	Identifier	r_debug_stop_reason		4220745	0					
ANR	4223308	ArgumentList	core -> dbg		4220745	1					
ANR	4223309	Argument	core -> dbg		4220745	0					
ANR	4223310	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223311	Identifier	core		4220745	0					
ANR	4223312	Identifier	dbg		4220745	1					
ANR	4223313	IdentifierDeclStatement	char * escaped_str ;	4947:3:140674:140691	4220745	2	True				
ANR	4223314	IdentifierDecl	* escaped_str		4220745	0					
ANR	4223315	IdentifierDeclType	char *		4220745	0					
ANR	4223316	Identifier	escaped_str		4220745	1					
ANR	4223317	SwitchStatement	switch ( input [ 1 ] )		4220745	3					
ANR	4223318	Condition	input [ 1 ]	4948:11:140704:140711	4220745	0	True				
ANR	4223319	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4223320	Identifier	input		4220745	0					
ANR	4223321	PrimaryExpression	1		4220745	1					
ANR	4223322	CompoundStatement		412:21:11772:11772	4220745	1					
ANR	4223323	Label	case '\\0' :	4949:3:140719:140728	4220745	0	True				
ANR	4223324	Statement	define	4950:1:140739:140744	4220745	1	True				
ANR	4223325	Statement	P	4950:8:140746:140746	4220745	2	True				
ANR	4223326	Statement	r_cons_printf	4950:10:140748:140760	4220745	3	True				
ANR	4223327	Statement	define	4951:1:140763:140768	4220745	4	True				
ANR	4223328	Statement	PS	4951:8:140770:140771	4220745	5	True				
ANR	4223329	Statement	(	4951:10:140772:140772	4220745	6	True				
ANR	4223330	Statement	X	4951:11:140773:140773	4220745	7	True				
ANR	4223331	Statement	","	4951:12:140774:140774	4220745	8	True				
ANR	4223332	Statement	Y	4951:14:140776:140776	4220745	9	True				
ANR	4223333	Statement	)	4951:15:140777:140777	4220745	10	True				
ANR	4223334	CompoundStatement		415:17:11837:11837	4220745	11					
ANR	4223335	ExpressionStatement	escaped_str = r_str_escape ( Y )	4951:18:140780:140810	4220745	0	True				
ANR	4223336	AssignmentExpression	escaped_str = r_str_escape ( Y )		4220745	0		=			
ANR	4223337	Identifier	escaped_str		4220745	0					
ANR	4223338	CallExpression	r_str_escape ( Y )		4220745	1					
ANR	4223339	Callee	r_str_escape		4220745	0					
ANR	4223340	Identifier	r_str_escape		4220745	0					
ANR	4223341	ArgumentList	Y		4220745	1					
ANR	4223342	Argument	Y		4220745	0					
ANR	4223343	Identifier	Y		4220745	0					
ANR	4223344	ExpressionStatement	"r_cons_printf ( X , escaped_str )"	4951:49:140811:140840	4220745	1	True				
ANR	4223345	CallExpression	"r_cons_printf ( X , escaped_str )"		4220745	0					
ANR	4223346	Callee	r_cons_printf		4220745	0					
ANR	4223347	Identifier	r_cons_printf		4220745	0					
ANR	4223348	ArgumentList	X		4220745	1					
ANR	4223349	Argument	X		4220745	0					
ANR	4223350	Identifier	X		4220745	0					
ANR	4223351	Argument	escaped_str		4220745	1					
ANR	4223352	Identifier	escaped_str		4220745	0					
ANR	4223353	ExpressionStatement	free ( escaped_str )	4951:79:140841:140858	4220745	2	True				
ANR	4223354	CallExpression	free ( escaped_str )		4220745	0					
ANR	4223355	Callee	free		4220745	0					
ANR	4223356	Identifier	free		4220745	0					
ANR	4223357	ArgumentList	escaped_str		4220745	1					
ANR	4223358	Argument	escaped_str		4220745	0					
ANR	4223359	Identifier	escaped_str		4220745	0					
ANR	4223360	IfStatement	if ( rdi )		4220745	12					
ANR	4223361	Condition	rdi	4952:8:140869:140871	4220745	0	True				
ANR	4223362	Identifier	rdi		4220745	0					
ANR	4223363	CompoundStatement		417:5:11939:12000	4220745	1					
ANR	4223364	IdentifierDeclStatement	const char * s = r_signal_to_string ( core -> dbg -> reason . signum ) ;	4953:5:140881:140942	4220745	0	True				
ANR	4223365	IdentifierDecl	* s = r_signal_to_string ( core -> dbg -> reason . signum )		4220745	0					
ANR	4223366	IdentifierDeclType	const char *		4220745	0					
ANR	4223367	Identifier	s		4220745	1					
ANR	4223368	AssignmentExpression	* s = r_signal_to_string ( core -> dbg -> reason . signum )		4220745	2		=			
ANR	4223369	Identifier	s		4220745	0					
ANR	4223370	CallExpression	r_signal_to_string ( core -> dbg -> reason . signum )		4220745	1					
ANR	4223371	Callee	r_signal_to_string		4220745	0					
ANR	4223372	Identifier	r_signal_to_string		4220745	0					
ANR	4223373	ArgumentList	core -> dbg -> reason . signum		4220745	1					
ANR	4223374	Argument	core -> dbg -> reason . signum		4220745	0					
ANR	4223375	MemberAccess	core -> dbg -> reason . signum		4220745	0					
ANR	4223376	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223377	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223378	Identifier	core		4220745	0					
ANR	4223379	Identifier	dbg		4220745	1					
ANR	4223380	Identifier	reason		4220745	1					
ANR	4223381	Identifier	signum		4220745	1					
ANR	4223382	ExpressionStatement	"P ( ""type=%s\\n"" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"	4954:5:140949:141015	4220745	1	True				
ANR	4223383	CallExpression	"P ( ""type=%s\\n"" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"		4220745	0					
ANR	4223384	Callee	P		4220745	0					
ANR	4223385	Identifier	P		4220745	0					
ANR	4223386	ArgumentList	"""type=%s\\n"""		4220745	1					
ANR	4223387	Argument	"""type=%s\\n"""		4220745	0					
ANR	4223388	PrimaryExpression	"""type=%s\\n"""		4220745	0					
ANR	4223389	Argument	r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	1					
ANR	4223390	CallExpression	r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	0					
ANR	4223391	Callee	r_debug_reason_to_string		4220745	0					
ANR	4223392	Identifier	r_debug_reason_to_string		4220745	0					
ANR	4223393	ArgumentList	core -> dbg -> reason . type		4220745	1					
ANR	4223394	Argument	core -> dbg -> reason . type		4220745	0					
ANR	4223395	MemberAccess	core -> dbg -> reason . type		4220745	0					
ANR	4223396	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223397	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223398	Identifier	core		4220745	0					
ANR	4223399	Identifier	dbg		4220745	1					
ANR	4223400	Identifier	reason		4220745	1					
ANR	4223401	Identifier	type		4220745	1					
ANR	4223402	ExpressionStatement	"P ( ""signal=%s\\n"" , s ? s : ""none"" )"	4955:5:141022:141053	4220745	2	True				
ANR	4223403	CallExpression	"P ( ""signal=%s\\n"" , s ? s : ""none"" )"		4220745	0					
ANR	4223404	Callee	P		4220745	0					
ANR	4223405	Identifier	P		4220745	0					
ANR	4223406	ArgumentList	"""signal=%s\\n"""		4220745	1					
ANR	4223407	Argument	"""signal=%s\\n"""		4220745	0					
ANR	4223408	PrimaryExpression	"""signal=%s\\n"""		4220745	0					
ANR	4223409	Argument	"s ? s : ""none"""		4220745	1					
ANR	4223410	ConditionalExpression	"s ? s : ""none"""		4220745	0					
ANR	4223411	Condition	s		4220745	0					
ANR	4223412	Identifier	s		4220745	0					
ANR	4223413	Identifier	s		4220745	1					
ANR	4223414	PrimaryExpression	"""none"""		4220745	2					
ANR	4223415	ExpressionStatement	"P ( ""signum=%d\\n"" , core -> dbg -> reason . signum )"	4956:5:141060:141103	4220745	3	True				
ANR	4223416	CallExpression	"P ( ""signum=%d\\n"" , core -> dbg -> reason . signum )"		4220745	0					
ANR	4223417	Callee	P		4220745	0					
ANR	4223418	Identifier	P		4220745	0					
ANR	4223419	ArgumentList	"""signum=%d\\n"""		4220745	1					
ANR	4223420	Argument	"""signum=%d\\n"""		4220745	0					
ANR	4223421	PrimaryExpression	"""signum=%d\\n"""		4220745	0					
ANR	4223422	Argument	core -> dbg -> reason . signum		4220745	1					
ANR	4223423	MemberAccess	core -> dbg -> reason . signum		4220745	0					
ANR	4223424	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223425	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223426	Identifier	core		4220745	0					
ANR	4223427	Identifier	dbg		4220745	1					
ANR	4223428	Identifier	reason		4220745	1					
ANR	4223429	Identifier	signum		4220745	1					
ANR	4223430	ExpressionStatement	"P ( ""sigpid=%d\\n"" , core -> dbg -> reason . tid )"	4957:5:141110:141150	4220745	4	True				
ANR	4223431	CallExpression	"P ( ""sigpid=%d\\n"" , core -> dbg -> reason . tid )"		4220745	0					
ANR	4223432	Callee	P		4220745	0					
ANR	4223433	Identifier	P		4220745	0					
ANR	4223434	ArgumentList	"""sigpid=%d\\n"""		4220745	1					
ANR	4223435	Argument	"""sigpid=%d\\n"""		4220745	0					
ANR	4223436	PrimaryExpression	"""sigpid=%d\\n"""		4220745	0					
ANR	4223437	Argument	core -> dbg -> reason . tid		4220745	1					
ANR	4223438	MemberAccess	core -> dbg -> reason . tid		4220745	0					
ANR	4223439	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223440	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223441	Identifier	core		4220745	0					
ANR	4223442	Identifier	dbg		4220745	1					
ANR	4223443	Identifier	reason		4220745	1					
ANR	4223444	Identifier	tid		4220745	1					
ANR	4223445	Statement	P	4958:5:141157:141157	4220745	5	True				
ANR	4223446	Statement	(	4958:7:141159:141159	4220745	6	True				
ANR	4223447	Statement	"""addr=0x%"""	4958:8:141160:141169	4220745	7	True				
ANR	4223448	Statement	PFMT64x	4958:18:141170:141176	4220745	8	True				
ANR	4223449	Statement	"""\\n"""	4958:25:141177:141180	4220745	9	True				
ANR	4223450	Statement	","	4958:29:141181:141181	4220745	10	True				
ANR	4223451	Statement	core	4958:31:141183:141186	4220745	11	True				
ANR	4223452	Statement	->	4958:35:141187:141188	4220745	12	True				
ANR	4223453	Statement	dbg	4958:37:141189:141191	4220745	13	True				
ANR	4223454	Statement	->	4958:40:141192:141193	4220745	14	True				
ANR	4223455	Statement	reason	4958:42:141194:141199	4220745	15	True				
ANR	4223456	Statement	.	4958:48:141200:141200	4220745	16	True				
ANR	4223457	Statement	addr	4958:49:141201:141204	4220745	17	True				
ANR	4223458	Statement	)	4958:53:141205:141205	4220745	18	True				
ANR	4223459	ExpressionStatement		4958:54:141206:141206	4220745	19	True				
ANR	4223460	Statement	P	4959:5:141213:141213	4220745	20	True				
ANR	4223461	Statement	(	4959:7:141215:141215	4220745	21	True				
ANR	4223462	Statement	"""bp_addr=0x%"""	4959:8:141216:141228	4220745	22	True				
ANR	4223463	Statement	PFMT64x	4959:21:141229:141235	4220745	23	True				
ANR	4223464	Statement	"""\\n"""	4959:28:141236:141239	4220745	24	True				
ANR	4223465	Statement	","	4959:32:141240:141240	4220745	25	True				
ANR	4223466	Statement	core	4959:34:141242:141245	4220745	26	True				
ANR	4223467	Statement	->	4959:38:141246:141247	4220745	27	True				
ANR	4223468	Statement	dbg	4959:40:141248:141250	4220745	28	True				
ANR	4223469	Statement	->	4959:43:141251:141252	4220745	29	True				
ANR	4223470	Statement	reason	4959:45:141253:141258	4220745	30	True				
ANR	4223471	Statement	.	4959:51:141259:141259	4220745	31	True				
ANR	4223472	Statement	bp_addr	4959:52:141260:141266	4220745	32	True				
ANR	4223473	Statement	)	4959:59:141267:141267	4220745	33	True				
ANR	4223474	ExpressionStatement		4959:60:141268:141268	4220745	34	True				
ANR	4223475	ExpressionStatement	"P ( ""inbp=%s\\n"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"	4960:5:141275:141330	4220745	35	True				
ANR	4223476	CallExpression	"P ( ""inbp=%s\\n"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"		4220745	0					
ANR	4223477	Callee	P		4220745	0					
ANR	4223478	Identifier	P		4220745	0					
ANR	4223479	ArgumentList	"""inbp=%s\\n"""		4220745	1					
ANR	4223480	Argument	"""inbp=%s\\n"""		4220745	0					
ANR	4223481	PrimaryExpression	"""inbp=%s\\n"""		4220745	0					
ANR	4223482	Argument	r_str_bool ( core -> dbg -> reason . bp_addr )		4220745	1					
ANR	4223483	CallExpression	r_str_bool ( core -> dbg -> reason . bp_addr )		4220745	0					
ANR	4223484	Callee	r_str_bool		4220745	0					
ANR	4223485	Identifier	r_str_bool		4220745	0					
ANR	4223486	ArgumentList	core -> dbg -> reason . bp_addr		4220745	1					
ANR	4223487	Argument	core -> dbg -> reason . bp_addr		4220745	0					
ANR	4223488	MemberAccess	core -> dbg -> reason . bp_addr		4220745	0					
ANR	4223489	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223490	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223491	Identifier	core		4220745	0					
ANR	4223492	Identifier	dbg		4220745	1					
ANR	4223493	Identifier	reason		4220745	1					
ANR	4223494	Identifier	bp_addr		4220745	1					
ANR	4223495	Statement	P	4961:5:141337:141337	4220745	36	True				
ANR	4223496	Statement	(	4961:7:141339:141339	4220745	37	True				
ANR	4223497	Statement	"""baddr=0x%"""	4961:8:141340:141350	4220745	38	True				
ANR	4223498	Statement	PFMT64x	4961:19:141351:141357	4220745	39	True				
ANR	4223499	Statement	"""\\n"""	4961:26:141358:141361	4220745	40	True				
ANR	4223500	Statement	","	4961:30:141362:141362	4220745	41	True				
ANR	4223501	Statement	r_debug_get_baddr	4961:32:141364:141380	4220745	42	True				
ANR	4223502	Statement	(	4961:50:141382:141382	4220745	43	True				
ANR	4223503	Statement	core	4961:51:141383:141386	4220745	44	True				
ANR	4223504	Statement	->	4961:55:141387:141388	4220745	45	True				
ANR	4223505	Statement	dbg	4961:57:141389:141391	4220745	46	True				
ANR	4223506	Statement	","	4961:60:141392:141392	4220745	47	True				
ANR	4223507	Statement	NULL	4961:62:141394:141397	4220745	48	True				
ANR	4223508	Statement	)	4961:66:141398:141398	4220745	49	True				
ANR	4223509	Statement	)	4961:67:141399:141399	4220745	50	True				
ANR	4223510	ExpressionStatement		4961:68:141400:141400	4220745	51	True				
ANR	4223511	ExpressionStatement	"P ( ""pid=%d\\n"" , rdi -> pid )"	4962:5:141407:141431	4220745	52	True				
ANR	4223512	CallExpression	"P ( ""pid=%d\\n"" , rdi -> pid )"		4220745	0					
ANR	4223513	Callee	P		4220745	0					
ANR	4223514	Identifier	P		4220745	0					
ANR	4223515	ArgumentList	"""pid=%d\\n"""		4220745	1					
ANR	4223516	Argument	"""pid=%d\\n"""		4220745	0					
ANR	4223517	PrimaryExpression	"""pid=%d\\n"""		4220745	0					
ANR	4223518	Argument	rdi -> pid		4220745	1					
ANR	4223519	PtrMemberAccess	rdi -> pid		4220745	0					
ANR	4223520	Identifier	rdi		4220745	0					
ANR	4223521	Identifier	pid		4220745	1					
ANR	4223522	ExpressionStatement	"P ( ""tid=%d\\n"" , rdi -> tid )"	4963:5:141438:141462	4220745	53	True				
ANR	4223523	CallExpression	"P ( ""tid=%d\\n"" , rdi -> tid )"		4220745	0					
ANR	4223524	Callee	P		4220745	0					
ANR	4223525	Identifier	P		4220745	0					
ANR	4223526	ArgumentList	"""tid=%d\\n"""		4220745	1					
ANR	4223527	Argument	"""tid=%d\\n"""		4220745	0					
ANR	4223528	PrimaryExpression	"""tid=%d\\n"""		4220745	0					
ANR	4223529	Argument	rdi -> tid		4220745	1					
ANR	4223530	PtrMemberAccess	rdi -> tid		4220745	0					
ANR	4223531	Identifier	rdi		4220745	0					
ANR	4223532	Identifier	tid		4220745	1					
ANR	4223533	Statement	P	4964:5:141469:141469	4220745	54	True				
ANR	4223534	Statement	(	4964:7:141471:141471	4220745	55	True				
ANR	4223535	Statement	"""stopaddr=0x%"""	4964:8:141472:141485	4220745	56	True				
ANR	4223536	Statement	PFMT64x	4964:22:141486:141492	4220745	57	True				
ANR	4223537	Statement	"""\\n"""	4964:29:141493:141496	4220745	58	True				
ANR	4223538	Statement	","	4964:33:141497:141497	4220745	59	True				
ANR	4223539	Statement	core	4964:35:141499:141502	4220745	60	True				
ANR	4223540	Statement	->	4964:39:141503:141504	4220745	61	True				
ANR	4223541	Statement	dbg	4964:41:141505:141507	4220745	62	True				
ANR	4223542	Statement	->	4964:44:141508:141509	4220745	63	True				
ANR	4223543	Statement	stopaddr	4964:46:141510:141517	4220745	64	True				
ANR	4223544	Statement	)	4964:54:141518:141518	4220745	65	True				
ANR	4223545	ExpressionStatement		4964:55:141519:141519	4220745	66	True				
ANR	4223546	IfStatement	if ( rdi -> uid != - 1 )		4220745	67					
ANR	4223547	Condition	rdi -> uid != - 1	4965:9:141530:141543	4220745	0	True				
ANR	4223548	EqualityExpression	rdi -> uid != - 1		4220745	0		!=			
ANR	4223549	PtrMemberAccess	rdi -> uid		4220745	0					
ANR	4223550	Identifier	rdi		4220745	0					
ANR	4223551	Identifier	uid		4220745	1					
ANR	4223552	UnaryOperationExpression	- 1		4220745	1					
ANR	4223553	UnaryOperator	-		4220745	0					
ANR	4223554	PrimaryExpression	1		4220745	1					
ANR	4223555	CompoundStatement		429:25:12604:12604	4220745	1					
ANR	4223556	ExpressionStatement	"P ( ""uid=%d\\n"" , rdi -> uid )"	4966:6:141554:141578	4220745	0	True				
ANR	4223557	CallExpression	"P ( ""uid=%d\\n"" , rdi -> uid )"		4220745	0					
ANR	4223558	Callee	P		4220745	0					
ANR	4223559	Identifier	P		4220745	0					
ANR	4223560	ArgumentList	"""uid=%d\\n"""		4220745	1					
ANR	4223561	Argument	"""uid=%d\\n"""		4220745	0					
ANR	4223562	PrimaryExpression	"""uid=%d\\n"""		4220745	0					
ANR	4223563	Argument	rdi -> uid		4220745	1					
ANR	4223564	PtrMemberAccess	rdi -> uid		4220745	0					
ANR	4223565	Identifier	rdi		4220745	0					
ANR	4223566	Identifier	uid		4220745	1					
ANR	4223567	IfStatement	if ( rdi -> gid != - 1 )		4220745	68					
ANR	4223568	Condition	rdi -> gid != - 1	4968:9:141596:141609	4220745	0	True				
ANR	4223569	EqualityExpression	rdi -> gid != - 1		4220745	0		!=			
ANR	4223570	PtrMemberAccess	rdi -> gid		4220745	0					
ANR	4223571	Identifier	rdi		4220745	0					
ANR	4223572	Identifier	gid		4220745	1					
ANR	4223573	UnaryOperationExpression	- 1		4220745	1					
ANR	4223574	UnaryOperator	-		4220745	0					
ANR	4223575	PrimaryExpression	1		4220745	1					
ANR	4223576	CompoundStatement		432:25:12670:12670	4220745	1					
ANR	4223577	ExpressionStatement	"P ( ""gid=%d\\n"" , rdi -> gid )"	4969:6:141620:141644	4220745	0	True				
ANR	4223578	CallExpression	"P ( ""gid=%d\\n"" , rdi -> gid )"		4220745	0					
ANR	4223579	Callee	P		4220745	0					
ANR	4223580	Identifier	P		4220745	0					
ANR	4223581	ArgumentList	"""gid=%d\\n"""		4220745	1					
ANR	4223582	Argument	"""gid=%d\\n"""		4220745	0					
ANR	4223583	PrimaryExpression	"""gid=%d\\n"""		4220745	0					
ANR	4223584	Argument	rdi -> gid		4220745	1					
ANR	4223585	PtrMemberAccess	rdi -> gid		4220745	0					
ANR	4223586	Identifier	rdi		4220745	0					
ANR	4223587	Identifier	gid		4220745	1					
ANR	4223588	IfStatement	if ( rdi -> usr )		4220745	69					
ANR	4223589	Condition	rdi -> usr	4971:9:141662:141669	4220745	0	True				
ANR	4223590	PtrMemberAccess	rdi -> usr		4220745	0					
ANR	4223591	Identifier	rdi		4220745	0					
ANR	4223592	Identifier	usr		4220745	1					
ANR	4223593	CompoundStatement		435:19:12730:12730	4220745	1					
ANR	4223594	ExpressionStatement	"P ( ""usr=%s\\n"" , rdi -> usr )"	4972:6:141680:141704	4220745	0	True				
ANR	4223595	CallExpression	"P ( ""usr=%s\\n"" , rdi -> usr )"		4220745	0					
ANR	4223596	Callee	P		4220745	0					
ANR	4223597	Identifier	P		4220745	0					
ANR	4223598	ArgumentList	"""usr=%s\\n"""		4220745	1					
ANR	4223599	Argument	"""usr=%s\\n"""		4220745	0					
ANR	4223600	PrimaryExpression	"""usr=%s\\n"""		4220745	0					
ANR	4223601	Argument	rdi -> usr		4220745	1					
ANR	4223602	PtrMemberAccess	rdi -> usr		4220745	0					
ANR	4223603	Identifier	rdi		4220745	0					
ANR	4223604	Identifier	usr		4220745	1					
ANR	4223605	IfStatement	if ( rdi -> exe && * rdi -> exe )		4220745	70					
ANR	4223606	Condition	rdi -> exe && * rdi -> exe	4974:9:141722:141742	4220745	0	True				
ANR	4223607	AndExpression	rdi -> exe && * rdi -> exe		4220745	0		&&			
ANR	4223608	PtrMemberAccess	rdi -> exe		4220745	0					
ANR	4223609	Identifier	rdi		4220745	0					
ANR	4223610	Identifier	exe		4220745	1					
ANR	4223611	UnaryOperationExpression	* rdi -> exe		4220745	1					
ANR	4223612	UnaryOperator	*		4220745	0					
ANR	4223613	PtrMemberAccess	rdi -> exe		4220745	1					
ANR	4223614	Identifier	rdi		4220745	0					
ANR	4223615	Identifier	exe		4220745	1					
ANR	4223616	CompoundStatement		438:32:12803:12803	4220745	1					
ANR	4223617	ExpressionStatement	"P ( ""exe=%s\\n"" , rdi -> exe )"	4975:6:141753:141777	4220745	0	True				
ANR	4223618	CallExpression	"P ( ""exe=%s\\n"" , rdi -> exe )"		4220745	0					
ANR	4223619	Callee	P		4220745	0					
ANR	4223620	Identifier	P		4220745	0					
ANR	4223621	ArgumentList	"""exe=%s\\n"""		4220745	1					
ANR	4223622	Argument	"""exe=%s\\n"""		4220745	0					
ANR	4223623	PrimaryExpression	"""exe=%s\\n"""		4220745	0					
ANR	4223624	Argument	rdi -> exe		4220745	1					
ANR	4223625	PtrMemberAccess	rdi -> exe		4220745	0					
ANR	4223626	Identifier	rdi		4220745	0					
ANR	4223627	Identifier	exe		4220745	1					
ANR	4223628	IfStatement	if ( rdi -> cmdline && * rdi -> cmdline )		4220745	71					
ANR	4223629	Condition	rdi -> cmdline && * rdi -> cmdline	4977:9:141795:141823	4220745	0	True				
ANR	4223630	AndExpression	rdi -> cmdline && * rdi -> cmdline		4220745	0		&&			
ANR	4223631	PtrMemberAccess	rdi -> cmdline		4220745	0					
ANR	4223632	Identifier	rdi		4220745	0					
ANR	4223633	Identifier	cmdline		4220745	1					
ANR	4223634	UnaryOperationExpression	* rdi -> cmdline		4220745	1					
ANR	4223635	UnaryOperator	*		4220745	0					
ANR	4223636	PtrMemberAccess	rdi -> cmdline		4220745	1					
ANR	4223637	Identifier	rdi		4220745	0					
ANR	4223638	Identifier	cmdline		4220745	1					
ANR	4223639	CompoundStatement		441:40:12884:12884	4220745	1					
ANR	4223640	ExpressionStatement	"P ( ""cmdline=%s\\n"" , rdi -> cmdline )"	4978:6:141834:141866	4220745	0	True				
ANR	4223641	CallExpression	"P ( ""cmdline=%s\\n"" , rdi -> cmdline )"		4220745	0					
ANR	4223642	Callee	P		4220745	0					
ANR	4223643	Identifier	P		4220745	0					
ANR	4223644	ArgumentList	"""cmdline=%s\\n"""		4220745	1					
ANR	4223645	Argument	"""cmdline=%s\\n"""		4220745	0					
ANR	4223646	PrimaryExpression	"""cmdline=%s\\n"""		4220745	0					
ANR	4223647	Argument	rdi -> cmdline		4220745	1					
ANR	4223648	PtrMemberAccess	rdi -> cmdline		4220745	0					
ANR	4223649	Identifier	rdi		4220745	0					
ANR	4223650	Identifier	cmdline		4220745	1					
ANR	4223651	IfStatement	if ( rdi -> cwd && * rdi -> cwd )		4220745	72					
ANR	4223652	Condition	rdi -> cwd && * rdi -> cwd	4980:9:141884:141904	4220745	0	True				
ANR	4223653	AndExpression	rdi -> cwd && * rdi -> cwd		4220745	0		&&			
ANR	4223654	PtrMemberAccess	rdi -> cwd		4220745	0					
ANR	4223655	Identifier	rdi		4220745	0					
ANR	4223656	Identifier	cwd		4220745	1					
ANR	4223657	UnaryOperationExpression	* rdi -> cwd		4220745	1					
ANR	4223658	UnaryOperator	*		4220745	0					
ANR	4223659	PtrMemberAccess	rdi -> cwd		4220745	1					
ANR	4223660	Identifier	rdi		4220745	0					
ANR	4223661	Identifier	cwd		4220745	1					
ANR	4223662	CompoundStatement		444:32:12965:12965	4220745	1					
ANR	4223663	ExpressionStatement	"P ( ""cwd=%s\\n"" , rdi -> cwd )"	4981:6:141915:141939	4220745	0	True				
ANR	4223664	CallExpression	"P ( ""cwd=%s\\n"" , rdi -> cwd )"		4220745	0					
ANR	4223665	Callee	P		4220745	0					
ANR	4223666	Identifier	P		4220745	0					
ANR	4223667	ArgumentList	"""cwd=%s\\n"""		4220745	1					
ANR	4223668	Argument	"""cwd=%s\\n"""		4220745	0					
ANR	4223669	PrimaryExpression	"""cwd=%s\\n"""		4220745	0					
ANR	4223670	Argument	rdi -> cwd		4220745	1					
ANR	4223671	PtrMemberAccess	rdi -> cwd		4220745	0					
ANR	4223672	Identifier	rdi		4220745	0					
ANR	4223673	Identifier	cwd		4220745	1					
ANR	4223674	IfStatement	if ( rdi -> kernel_stack && * rdi -> kernel_stack )		4220745	73					
ANR	4223675	Condition	rdi -> kernel_stack && * rdi -> kernel_stack	4983:9:141957:141995	4220745	0	True				
ANR	4223676	AndExpression	rdi -> kernel_stack && * rdi -> kernel_stack		4220745	0		&&			
ANR	4223677	PtrMemberAccess	rdi -> kernel_stack		4220745	0					
ANR	4223678	Identifier	rdi		4220745	0					
ANR	4223679	Identifier	kernel_stack		4220745	1					
ANR	4223680	UnaryOperationExpression	* rdi -> kernel_stack		4220745	1					
ANR	4223681	UnaryOperator	*		4220745	0					
ANR	4223682	PtrMemberAccess	rdi -> kernel_stack		4220745	1					
ANR	4223683	Identifier	rdi		4220745	0					
ANR	4223684	Identifier	kernel_stack		4220745	1					
ANR	4223685	CompoundStatement		447:50:13056:13056	4220745	1					
ANR	4223686	ExpressionStatement	"P ( ""kernel_stack=\\n%s\\n"" , rdi -> kernel_stack )"	4984:6:142006:142050	4220745	0	True				
ANR	4223687	CallExpression	"P ( ""kernel_stack=\\n%s\\n"" , rdi -> kernel_stack )"		4220745	0					
ANR	4223688	Callee	P		4220745	0					
ANR	4223689	Identifier	P		4220745	0					
ANR	4223690	ArgumentList	"""kernel_stack=\\n%s\\n"""		4220745	1					
ANR	4223691	Argument	"""kernel_stack=\\n%s\\n"""		4220745	0					
ANR	4223692	PrimaryExpression	"""kernel_stack=\\n%s\\n"""		4220745	0					
ANR	4223693	Argument	rdi -> kernel_stack		4220745	1					
ANR	4223694	PtrMemberAccess	rdi -> kernel_stack		4220745	0					
ANR	4223695	Identifier	rdi		4220745	0					
ANR	4223696	Identifier	kernel_stack		4220745	1					
ANR	4223697	IfStatement	if ( stop != - 1 )		4220745	13					
ANR	4223698	Condition	stop != - 1	4987:8:142073:142082	4220745	0	True				
ANR	4223699	EqualityExpression	stop != - 1		4220745	0		!=			
ANR	4223700	Identifier	stop		4220745	0					
ANR	4223701	UnaryOperationExpression	- 1		4220745	1					
ANR	4223702	UnaryOperator	-		4220745	0					
ANR	4223703	PrimaryExpression	1		4220745	1					
ANR	4223704	CompoundStatement		451:20:13143:13143	4220745	1					
ANR	4223705	ExpressionStatement	"P ( ""stopreason=%d\\n"" , stop )"	4988:5:142092:142119	4220745	0	True				
ANR	4223706	CallExpression	"P ( ""stopreason=%d\\n"" , stop )"		4220745	0					
ANR	4223707	Callee	P		4220745	0					
ANR	4223708	Identifier	P		4220745	0					
ANR	4223709	ArgumentList	"""stopreason=%d\\n"""		4220745	1					
ANR	4223710	Argument	"""stopreason=%d\\n"""		4220745	0					
ANR	4223711	PrimaryExpression	"""stopreason=%d\\n"""		4220745	0					
ANR	4223712	Argument	stop		4220745	1					
ANR	4223713	Identifier	stop		4220745	0					
ANR	4223714	BreakStatement	break ;	4990:4:142131:142136	4220745	14	True				
ANR	4223715	Label	case 'f' :	4991:3:142141:142149	4220745	15	True				
ANR	4223716	IfStatement	if ( input [ 1 ] == '?' )		4220745	16					
ANR	4223717	Condition	input [ 1 ] == '?'	4992:8:142168:142182	4220745	0	True				
ANR	4223718	EqualityExpression	input [ 1 ] == '?'		4220745	0		==			
ANR	4223719	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4223720	Identifier	input		4220745	0					
ANR	4223721	PrimaryExpression	1		4220745	1					
ANR	4223722	PrimaryExpression	'?'		4220745	1					
ANR	4223723	CompoundStatement		456:25:13243:13243	4220745	1					
ANR	4223724	ExpressionStatement	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"	4993:5:142192:142246	4220745	0	True				
ANR	4223725	CallExpression	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"		4220745	0					
ANR	4223726	Callee	eprintf		4220745	0					
ANR	4223727	Identifier	eprintf		4220745	0					
ANR	4223728	ArgumentList	"""Usage: dif $a $b  # diff two alias files\\n"""		4220745	1					
ANR	4223729	Argument	"""Usage: dif $a $b  # diff two alias files\\n"""		4220745	0					
ANR	4223730	PrimaryExpression	"""Usage: dif $a $b  # diff two alias files\\n"""		4220745	0					
ANR	4223731	ElseStatement	else		4220745	0					
ANR	4223732	CompoundStatement		459:5:13324:13355	4220745	0					
ANR	4223733	IdentifierDeclStatement	"char * arg = strchr ( input , ' ' ) ;"	4995:5:142266:142297	4220745	0	True				
ANR	4223734	IdentifierDecl	"* arg = strchr ( input , ' ' )"		4220745	0					
ANR	4223735	IdentifierDeclType	char *		4220745	0					
ANR	4223736	Identifier	arg		4220745	1					
ANR	4223737	AssignmentExpression	"* arg = strchr ( input , ' ' )"		4220745	2		=			
ANR	4223738	Identifier	arg		4220745	0					
ANR	4223739	CallExpression	"strchr ( input , ' ' )"		4220745	1					
ANR	4223740	Callee	strchr		4220745	0					
ANR	4223741	Identifier	strchr		4220745	0					
ANR	4223742	ArgumentList	input		4220745	1					
ANR	4223743	Argument	input		4220745	0					
ANR	4223744	Identifier	input		4220745	0					
ANR	4223745	Argument	' '		4220745	1					
ANR	4223746	PrimaryExpression	' '		4220745	0					
ANR	4223747	IfStatement	if ( arg )		4220745	1					
ANR	4223748	Condition	arg	4996:9:142308:142310	4220745	0	True				
ANR	4223749	Identifier	arg		4220745	0					
ANR	4223750	CompoundStatement		462:6:13425:13455	4220745	1					
ANR	4223751	ExpressionStatement	arg = strdup ( r_str_trim_ro ( arg + 1 ) )	4997:6:142321:142359	4220745	0	True				
ANR	4223752	AssignmentExpression	arg = strdup ( r_str_trim_ro ( arg + 1 ) )		4220745	0		=			
ANR	4223753	Identifier	arg		4220745	0					
ANR	4223754	CallExpression	strdup ( r_str_trim_ro ( arg + 1 ) )		4220745	1					
ANR	4223755	Callee	strdup		4220745	0					
ANR	4223756	Identifier	strdup		4220745	0					
ANR	4223757	ArgumentList	r_str_trim_ro ( arg + 1 )		4220745	1					
ANR	4223758	Argument	r_str_trim_ro ( arg + 1 )		4220745	0					
ANR	4223759	CallExpression	r_str_trim_ro ( arg + 1 )		4220745	0					
ANR	4223760	Callee	r_str_trim_ro		4220745	0					
ANR	4223761	Identifier	r_str_trim_ro		4220745	0					
ANR	4223762	ArgumentList	arg + 1		4220745	1					
ANR	4223763	Argument	arg + 1		4220745	0					
ANR	4223764	AdditiveExpression	arg + 1		4220745	0		+			
ANR	4223765	Identifier	arg		4220745	0					
ANR	4223766	PrimaryExpression	1		4220745	1					
ANR	4223767	IdentifierDeclStatement	"char * arg2 = strchr ( arg , ' ' ) ;"	4998:6:142367:142397	4220745	1	True				
ANR	4223768	IdentifierDecl	"* arg2 = strchr ( arg , ' ' )"		4220745	0					
ANR	4223769	IdentifierDeclType	char *		4220745	0					
ANR	4223770	Identifier	arg2		4220745	1					
ANR	4223771	AssignmentExpression	"* arg2 = strchr ( arg , ' ' )"		4220745	2		=			
ANR	4223772	Identifier	arg2		4220745	0					
ANR	4223773	CallExpression	"strchr ( arg , ' ' )"		4220745	1					
ANR	4223774	Callee	strchr		4220745	0					
ANR	4223775	Identifier	strchr		4220745	0					
ANR	4223776	ArgumentList	arg		4220745	1					
ANR	4223777	Argument	arg		4220745	0					
ANR	4223778	Identifier	arg		4220745	0					
ANR	4223779	Argument	' '		4220745	1					
ANR	4223780	PrimaryExpression	' '		4220745	0					
ANR	4223781	IfStatement	if ( arg2 )		4220745	2					
ANR	4223782	Condition	arg2	4999:10:142409:142412	4220745	0	True				
ANR	4223783	Identifier	arg2		4220745	0					
ANR	4223784	CompoundStatement		466:7:13543:13576	4220745	1					
ANR	4223785	ExpressionStatement	* arg2 ++ = 0	5000:7:142424:142435	4220745	0	True				
ANR	4223786	AssignmentExpression	* arg2 ++ = 0		4220745	0		=			
ANR	4223787	UnaryOperationExpression	* arg2 ++		4220745	0					
ANR	4223788	UnaryOperator	*		4220745	0					
ANR	4223789	PostIncDecOperationExpression	arg2 ++		4220745	1					
ANR	4223790	Identifier	arg2		4220745	0					
ANR	4223791	IncDec	++		4220745	1					
ANR	4223792	PrimaryExpression	0		4220745	1					
ANR	4223793	IdentifierDeclStatement	"ut8 * a = getFileData ( core , arg ) ;"	5001:7:142444:142476	4220745	1	True				
ANR	4223794	IdentifierDecl	"* a = getFileData ( core , arg )"		4220745	0					
ANR	4223795	IdentifierDeclType	ut8 *		4220745	0					
ANR	4223796	Identifier	a		4220745	1					
ANR	4223797	AssignmentExpression	"* a = getFileData ( core , arg )"		4220745	2		=			
ANR	4223798	Identifier	a		4220745	0					
ANR	4223799	CallExpression	"getFileData ( core , arg )"		4220745	1					
ANR	4223800	Callee	getFileData		4220745	0					
ANR	4223801	Identifier	getFileData		4220745	0					
ANR	4223802	ArgumentList	core		4220745	1					
ANR	4223803	Argument	core		4220745	0					
ANR	4223804	Identifier	core		4220745	0					
ANR	4223805	Argument	arg		4220745	1					
ANR	4223806	Identifier	arg		4220745	0					
ANR	4223807	IdentifierDeclStatement	"ut8 * b = getFileData ( core , arg2 ) ;"	5002:7:142485:142518	4220745	2	True				
ANR	4223808	IdentifierDecl	"* b = getFileData ( core , arg2 )"		4220745	0					
ANR	4223809	IdentifierDeclType	ut8 *		4220745	0					
ANR	4223810	Identifier	b		4220745	1					
ANR	4223811	AssignmentExpression	"* b = getFileData ( core , arg2 )"		4220745	2		=			
ANR	4223812	Identifier	b		4220745	0					
ANR	4223813	CallExpression	"getFileData ( core , arg2 )"		4220745	1					
ANR	4223814	Callee	getFileData		4220745	0					
ANR	4223815	Identifier	getFileData		4220745	0					
ANR	4223816	ArgumentList	core		4220745	1					
ANR	4223817	Argument	core		4220745	0					
ANR	4223818	Identifier	core		4220745	0					
ANR	4223819	Argument	arg2		4220745	1					
ANR	4223820	Identifier	arg2		4220745	0					
ANR	4223821	IfStatement	if ( a && b )		4220745	3					
ANR	4223822	Condition	a && b	5003:11:142531:142536	4220745	0	True				
ANR	4223823	AndExpression	a && b		4220745	0		&&			
ANR	4223824	Identifier	a		4220745	0					
ANR	4223825	Identifier	b		4220745	1					
ANR	4223826	CompoundStatement		471:8:13725:13779	4220745	1					
ANR	4223827	IdentifierDeclStatement	int al = strlen ( ( const char * ) a ) ;	5004:8:142549:142581	4220745	0	True				
ANR	4223828	IdentifierDecl	al = strlen ( ( const char * ) a )		4220745	0					
ANR	4223829	IdentifierDeclType	int		4220745	0					
ANR	4223830	Identifier	al		4220745	1					
ANR	4223831	AssignmentExpression	al = strlen ( ( const char * ) a )		4220745	2		=			
ANR	4223832	Identifier	al		4220745	0					
ANR	4223833	CallExpression	strlen ( ( const char * ) a )		4220745	1					
ANR	4223834	Callee	strlen		4220745	0					
ANR	4223835	Identifier	strlen		4220745	0					
ANR	4223836	ArgumentList	( const char * ) a		4220745	1					
ANR	4223837	Argument	( const char * ) a		4220745	0					
ANR	4223838	CastExpression	( const char * ) a		4220745	0					
ANR	4223839	CastTarget	const char *		4220745	0					
ANR	4223840	Identifier	a		4220745	1					
ANR	4223841	IdentifierDeclStatement	int bl = strlen ( ( const char * ) b ) ;	5005:8:142591:142623	4220745	1	True				
ANR	4223842	IdentifierDecl	bl = strlen ( ( const char * ) b )		4220745	0					
ANR	4223843	IdentifierDeclType	int		4220745	0					
ANR	4223844	Identifier	bl		4220745	1					
ANR	4223845	AssignmentExpression	bl = strlen ( ( const char * ) b )		4220745	2		=			
ANR	4223846	Identifier	bl		4220745	0					
ANR	4223847	CallExpression	strlen ( ( const char * ) b )		4220745	1					
ANR	4223848	Callee	strlen		4220745	0					
ANR	4223849	Identifier	strlen		4220745	0					
ANR	4223850	ArgumentList	( const char * ) b		4220745	1					
ANR	4223851	Argument	( const char * ) b		4220745	0					
ANR	4223852	CastExpression	( const char * ) b		4220745	0					
ANR	4223853	CastTarget	const char *		4220745	0					
ANR	4223854	Identifier	b		4220745	1					
ANR	4223855	IdentifierDeclStatement	RDiff * d = r_diff_new ( ) ;	5006:8:142633:142657	4220745	2	True				
ANR	4223856	IdentifierDecl	* d = r_diff_new ( )		4220745	0					
ANR	4223857	IdentifierDeclType	RDiff *		4220745	0					
ANR	4223858	Identifier	d		4220745	1					
ANR	4223859	AssignmentExpression	* d = r_diff_new ( )		4220745	2		=			
ANR	4223860	Identifier	d		4220745	0					
ANR	4223861	CallExpression	r_diff_new ( )		4220745	1					
ANR	4223862	Callee	r_diff_new		4220745	0					
ANR	4223863	Identifier	r_diff_new		4220745	0					
ANR	4223864	ArgumentList			4220745	1					
ANR	4223865	IdentifierDeclStatement	"char * uni = r_diff_buffers_to_string ( d , a , al , b , bl ) ;"	5007:8:142667:142721	4220745	3	True				
ANR	4223866	IdentifierDecl	"* uni = r_diff_buffers_to_string ( d , a , al , b , bl )"		4220745	0					
ANR	4223867	IdentifierDeclType	char *		4220745	0					
ANR	4223868	Identifier	uni		4220745	1					
ANR	4223869	AssignmentExpression	"* uni = r_diff_buffers_to_string ( d , a , al , b , bl )"		4220745	2		=			
ANR	4223870	Identifier	uni		4220745	0					
ANR	4223871	CallExpression	"r_diff_buffers_to_string ( d , a , al , b , bl )"		4220745	1					
ANR	4223872	Callee	r_diff_buffers_to_string		4220745	0					
ANR	4223873	Identifier	r_diff_buffers_to_string		4220745	0					
ANR	4223874	ArgumentList	d		4220745	1					
ANR	4223875	Argument	d		4220745	0					
ANR	4223876	Identifier	d		4220745	0					
ANR	4223877	Argument	a		4220745	1					
ANR	4223878	Identifier	a		4220745	0					
ANR	4223879	Argument	al		4220745	2					
ANR	4223880	Identifier	al		4220745	0					
ANR	4223881	Argument	b		4220745	3					
ANR	4223882	Identifier	b		4220745	0					
ANR	4223883	Argument	bl		4220745	4					
ANR	4223884	Identifier	bl		4220745	0					
ANR	4223885	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , uni )"	5008:8:142731:142758	4220745	4	True				
ANR	4223886	CallExpression	"r_cons_printf ( ""%s\\n"" , uni )"		4220745	0					
ANR	4223887	Callee	r_cons_printf		4220745	0					
ANR	4223888	Identifier	r_cons_printf		4220745	0					
ANR	4223889	ArgumentList	"""%s\\n"""		4220745	1					
ANR	4223890	Argument	"""%s\\n"""		4220745	0					
ANR	4223891	PrimaryExpression	"""%s\\n"""		4220745	0					
ANR	4223892	Argument	uni		4220745	1					
ANR	4223893	Identifier	uni		4220745	0					
ANR	4223894	ExpressionStatement	r_diff_free ( d )	5009:8:142768:142783	4220745	5	True				
ANR	4223895	CallExpression	r_diff_free ( d )		4220745	0					
ANR	4223896	Callee	r_diff_free		4220745	0					
ANR	4223897	Identifier	r_diff_free		4220745	0					
ANR	4223898	ArgumentList	d		4220745	1					
ANR	4223899	Argument	d		4220745	0					
ANR	4223900	Identifier	d		4220745	0					
ANR	4223901	ExpressionStatement	free ( uni )	5010:8:142793:142803	4220745	6	True				
ANR	4223902	CallExpression	free ( uni )		4220745	0					
ANR	4223903	Callee	free		4220745	0					
ANR	4223904	Identifier	free		4220745	0					
ANR	4223905	ArgumentList	uni		4220745	1					
ANR	4223906	Argument	uni		4220745	0					
ANR	4223907	Identifier	uni		4220745	0					
ANR	4223908	ElseStatement	else		4220745	0					
ANR	4223909	CompoundStatement		475:14:13877:13877	4220745	0					
ANR	4223910	ExpressionStatement	"eprintf ( ""Cannot open those alias files\\n"" )"	5012:8:142829:142872	4220745	0	True				
ANR	4223911	CallExpression	"eprintf ( ""Cannot open those alias files\\n"" )"		4220745	0					
ANR	4223912	Callee	eprintf		4220745	0					
ANR	4223913	Identifier	eprintf		4220745	0					
ANR	4223914	ArgumentList	"""Cannot open those alias files\\n"""		4220745	1					
ANR	4223915	Argument	"""Cannot open those alias files\\n"""		4220745	0					
ANR	4223916	PrimaryExpression	"""Cannot open those alias files\\n"""		4220745	0					
ANR	4223917	ExpressionStatement	free ( arg )	5015:6:142897:142907	4220745	3	True				
ANR	4223918	CallExpression	free ( arg )		4220745	0					
ANR	4223919	Callee	free		4220745	0					
ANR	4223920	Identifier	free		4220745	0					
ANR	4223921	ArgumentList	arg		4220745	1					
ANR	4223922	Argument	arg		4220745	0					
ANR	4223923	Identifier	arg		4220745	0					
ANR	4223924	ElseStatement	else		4220745	0					
ANR	4223925	CompoundStatement		480:12:13979:13979	4220745	0					
ANR	4223926	ExpressionStatement	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"	5017:6:142929:142983	4220745	0	True				
ANR	4223927	CallExpression	"eprintf ( ""Usage: dif $a $b  # diff two alias files\\n"" )"		4220745	0					
ANR	4223928	Callee	eprintf		4220745	0					
ANR	4223929	Identifier	eprintf		4220745	0					
ANR	4223930	ArgumentList	"""Usage: dif $a $b  # diff two alias files\\n"""		4220745	1					
ANR	4223931	Argument	"""Usage: dif $a $b  # diff two alias files\\n"""		4220745	0					
ANR	4223932	PrimaryExpression	"""Usage: dif $a $b  # diff two alias files\\n"""		4220745	0					
ANR	4223933	BreakStatement	break ;	5020:4:143002:143007	4220745	17	True				
ANR	4223934	Label	case '*' :	5021:3:143012:143020	4220745	18	True				
ANR	4223935	IfStatement	if ( rdi )		4220745	19					
ANR	4223936	Condition	rdi	5022:8:143039:143041	4220745	0	True				
ANR	4223937	Identifier	rdi		4220745	0					
ANR	4223938	CompoundStatement		486:13:14102:14102	4220745	1					
ANR	4223939	ExpressionStatement	"r_cons_printf ( ""f dbg.signal = %d\\n"" , core -> dbg -> reason . signum )"	5023:5:143051:143114	4220745	0	True				
ANR	4223940	CallExpression	"r_cons_printf ( ""f dbg.signal = %d\\n"" , core -> dbg -> reason . signum )"		4220745	0					
ANR	4223941	Callee	r_cons_printf		4220745	0					
ANR	4223942	Identifier	r_cons_printf		4220745	0					
ANR	4223943	ArgumentList	"""f dbg.signal = %d\\n"""		4220745	1					
ANR	4223944	Argument	"""f dbg.signal = %d\\n"""		4220745	0					
ANR	4223945	PrimaryExpression	"""f dbg.signal = %d\\n"""		4220745	0					
ANR	4223946	Argument	core -> dbg -> reason . signum		4220745	1					
ANR	4223947	MemberAccess	core -> dbg -> reason . signum		4220745	0					
ANR	4223948	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223949	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223950	Identifier	core		4220745	0					
ANR	4223951	Identifier	dbg		4220745	1					
ANR	4223952	Identifier	reason		4220745	1					
ANR	4223953	Identifier	signum		4220745	1					
ANR	4223954	ExpressionStatement	"r_cons_printf ( ""f dbg.sigpid = %d\\n"" , core -> dbg -> reason . tid )"	5024:5:143121:143181	4220745	1	True				
ANR	4223955	CallExpression	"r_cons_printf ( ""f dbg.sigpid = %d\\n"" , core -> dbg -> reason . tid )"		4220745	0					
ANR	4223956	Callee	r_cons_printf		4220745	0					
ANR	4223957	Identifier	r_cons_printf		4220745	0					
ANR	4223958	ArgumentList	"""f dbg.sigpid = %d\\n"""		4220745	1					
ANR	4223959	Argument	"""f dbg.sigpid = %d\\n"""		4220745	0					
ANR	4223960	PrimaryExpression	"""f dbg.sigpid = %d\\n"""		4220745	0					
ANR	4223961	Argument	core -> dbg -> reason . tid		4220745	1					
ANR	4223962	MemberAccess	core -> dbg -> reason . tid		4220745	0					
ANR	4223963	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223964	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223965	Identifier	core		4220745	0					
ANR	4223966	Identifier	dbg		4220745	1					
ANR	4223967	Identifier	reason		4220745	1					
ANR	4223968	Identifier	tid		4220745	1					
ANR	4223969	ExpressionStatement	"r_cons_printf ( ""f dbg.inbp = %d\\n"" , core -> dbg -> reason . bp_addr ? 1 : 0 )"	5025:5:143188:143256	4220745	2	True				
ANR	4223970	CallExpression	"r_cons_printf ( ""f dbg.inbp = %d\\n"" , core -> dbg -> reason . bp_addr ? 1 : 0 )"		4220745	0					
ANR	4223971	Callee	r_cons_printf		4220745	0					
ANR	4223972	Identifier	r_cons_printf		4220745	0					
ANR	4223973	ArgumentList	"""f dbg.inbp = %d\\n"""		4220745	1					
ANR	4223974	Argument	"""f dbg.inbp = %d\\n"""		4220745	0					
ANR	4223975	PrimaryExpression	"""f dbg.inbp = %d\\n"""		4220745	0					
ANR	4223976	Argument	core -> dbg -> reason . bp_addr ? 1 : 0		4220745	1					
ANR	4223977	ConditionalExpression	core -> dbg -> reason . bp_addr ? 1 : 0		4220745	0					
ANR	4223978	Condition	core -> dbg -> reason . bp_addr		4220745	0					
ANR	4223979	MemberAccess	core -> dbg -> reason . bp_addr		4220745	0					
ANR	4223980	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4223981	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4223982	Identifier	core		4220745	0					
ANR	4223983	Identifier	dbg		4220745	1					
ANR	4223984	Identifier	reason		4220745	1					
ANR	4223985	Identifier	bp_addr		4220745	1					
ANR	4223986	PrimaryExpression	1		4220745	1					
ANR	4223987	PrimaryExpression	0		4220745	2					
ANR	4223988	Statement	r_cons_printf	5026:5:143263:143275	4220745	3	True				
ANR	4223989	Statement	(	5026:19:143277:143277	4220745	4	True				
ANR	4223990	Statement	"""f dbg.sigaddr = 0x%"""	5026:20:143278:143298	4220745	5	True				
ANR	4223991	Statement	PFMT64x	5026:41:143299:143305	4220745	6	True				
ANR	4223992	Statement	"""\\n"""	5026:48:143306:143309	4220745	7	True				
ANR	4223993	Statement	","	5026:52:143310:143310	4220745	8	True				
ANR	4223994	Statement	core	5026:54:143312:143315	4220745	9	True				
ANR	4223995	Statement	->	5026:58:143316:143317	4220745	10	True				
ANR	4223996	Statement	dbg	5026:60:143318:143320	4220745	11	True				
ANR	4223997	Statement	->	5026:63:143321:143322	4220745	12	True				
ANR	4223998	Statement	reason	5026:65:143323:143328	4220745	13	True				
ANR	4223999	Statement	.	5026:71:143329:143329	4220745	14	True				
ANR	4224000	Statement	addr	5026:72:143330:143333	4220745	15	True				
ANR	4224001	Statement	)	5026:76:143334:143334	4220745	16	True				
ANR	4224002	ExpressionStatement		5026:77:143335:143335	4220745	17	True				
ANR	4224003	Statement	r_cons_printf	5027:5:143342:143354	4220745	18	True				
ANR	4224004	Statement	(	5027:19:143356:143356	4220745	19	True				
ANR	4224005	Statement	"""f dbg.baddr = 0x%"""	5027:20:143357:143375	4220745	20	True				
ANR	4224006	Statement	PFMT64x	5027:39:143376:143382	4220745	21	True				
ANR	4224007	Statement	"""\\n"""	5027:46:143383:143386	4220745	22	True				
ANR	4224008	Statement	","	5027:50:143387:143387	4220745	23	True				
ANR	4224009	Statement	r_debug_get_baddr	5027:52:143389:143405	4220745	24	True				
ANR	4224010	Statement	(	5027:70:143407:143407	4220745	25	True				
ANR	4224011	Statement	core	5027:71:143408:143411	4220745	26	True				
ANR	4224012	Statement	->	5027:75:143412:143413	4220745	27	True				
ANR	4224013	Statement	dbg	5027:77:143414:143416	4220745	28	True				
ANR	4224014	Statement	","	5027:80:143417:143417	4220745	29	True				
ANR	4224015	Statement	NULL	5027:82:143419:143422	4220745	30	True				
ANR	4224016	Statement	)	5027:86:143423:143423	4220745	31	True				
ANR	4224017	Statement	)	5027:87:143424:143424	4220745	32	True				
ANR	4224018	ExpressionStatement		5027:88:143425:143425	4220745	33	True				
ANR	4224019	ExpressionStatement	"r_cons_printf ( ""f dbg.pid = %d\\n"" , rdi -> pid )"	5028:5:143432:143476	4220745	34	True				
ANR	4224020	CallExpression	"r_cons_printf ( ""f dbg.pid = %d\\n"" , rdi -> pid )"		4220745	0					
ANR	4224021	Callee	r_cons_printf		4220745	0					
ANR	4224022	Identifier	r_cons_printf		4220745	0					
ANR	4224023	ArgumentList	"""f dbg.pid = %d\\n"""		4220745	1					
ANR	4224024	Argument	"""f dbg.pid = %d\\n"""		4220745	0					
ANR	4224025	PrimaryExpression	"""f dbg.pid = %d\\n"""		4220745	0					
ANR	4224026	Argument	rdi -> pid		4220745	1					
ANR	4224027	PtrMemberAccess	rdi -> pid		4220745	0					
ANR	4224028	Identifier	rdi		4220745	0					
ANR	4224029	Identifier	pid		4220745	1					
ANR	4224030	ExpressionStatement	"r_cons_printf ( ""f dbg.tid = %d\\n"" , rdi -> tid )"	5029:5:143483:143527	4220745	35	True				
ANR	4224031	CallExpression	"r_cons_printf ( ""f dbg.tid = %d\\n"" , rdi -> tid )"		4220745	0					
ANR	4224032	Callee	r_cons_printf		4220745	0					
ANR	4224033	Identifier	r_cons_printf		4220745	0					
ANR	4224034	ArgumentList	"""f dbg.tid = %d\\n"""		4220745	1					
ANR	4224035	Argument	"""f dbg.tid = %d\\n"""		4220745	0					
ANR	4224036	PrimaryExpression	"""f dbg.tid = %d\\n"""		4220745	0					
ANR	4224037	Argument	rdi -> tid		4220745	1					
ANR	4224038	PtrMemberAccess	rdi -> tid		4220745	0					
ANR	4224039	Identifier	rdi		4220745	0					
ANR	4224040	Identifier	tid		4220745	1					
ANR	4224041	ExpressionStatement	"r_cons_printf ( ""f dbg.uid = %d\\n"" , rdi -> uid )"	5030:5:143534:143578	4220745	36	True				
ANR	4224042	CallExpression	"r_cons_printf ( ""f dbg.uid = %d\\n"" , rdi -> uid )"		4220745	0					
ANR	4224043	Callee	r_cons_printf		4220745	0					
ANR	4224044	Identifier	r_cons_printf		4220745	0					
ANR	4224045	ArgumentList	"""f dbg.uid = %d\\n"""		4220745	1					
ANR	4224046	Argument	"""f dbg.uid = %d\\n"""		4220745	0					
ANR	4224047	PrimaryExpression	"""f dbg.uid = %d\\n"""		4220745	0					
ANR	4224048	Argument	rdi -> uid		4220745	1					
ANR	4224049	PtrMemberAccess	rdi -> uid		4220745	0					
ANR	4224050	Identifier	rdi		4220745	0					
ANR	4224051	Identifier	uid		4220745	1					
ANR	4224052	ExpressionStatement	"r_cons_printf ( ""f dbg.gid = %d\\n"" , rdi -> gid )"	5031:5:143585:143629	4220745	37	True				
ANR	4224053	CallExpression	"r_cons_printf ( ""f dbg.gid = %d\\n"" , rdi -> gid )"		4220745	0					
ANR	4224054	Callee	r_cons_printf		4220745	0					
ANR	4224055	Identifier	r_cons_printf		4220745	0					
ANR	4224056	ArgumentList	"""f dbg.gid = %d\\n"""		4220745	1					
ANR	4224057	Argument	"""f dbg.gid = %d\\n"""		4220745	0					
ANR	4224058	PrimaryExpression	"""f dbg.gid = %d\\n"""		4220745	0					
ANR	4224059	Argument	rdi -> gid		4220745	1					
ANR	4224060	PtrMemberAccess	rdi -> gid		4220745	0					
ANR	4224061	Identifier	rdi		4220745	0					
ANR	4224062	Identifier	gid		4220745	1					
ANR	4224063	BreakStatement	break ;	5033:4:143641:143646	4220745	20	True				
ANR	4224064	Label	case 'j' :	5034:3:143651:143659	4220745	21	True				
ANR	4224065	ExpressionStatement	"P ( ""{"" )"	5035:4:143674:143681	4220745	22	True				
ANR	4224066	CallExpression	"P ( ""{"" )"		4220745	0					
ANR	4224067	Callee	P		4220745	0					
ANR	4224068	Identifier	P		4220745	0					
ANR	4224069	ArgumentList	"""{"""		4220745	1					
ANR	4224070	Argument	"""{"""		4220745	0					
ANR	4224071	PrimaryExpression	"""{"""		4220745	0					
ANR	4224072	IfStatement	if ( rdi )		4220745	23					
ANR	4224073	Condition	rdi	5036:8:143691:143693	4220745	0	True				
ANR	4224074	Identifier	rdi		4220745	0					
ANR	4224075	CompoundStatement		501:5:14761:14822	4220745	1					
ANR	4224076	IdentifierDeclStatement	const char * s = r_signal_to_string ( core -> dbg -> reason . signum ) ;	5037:5:143703:143764	4220745	0	True				
ANR	4224077	IdentifierDecl	* s = r_signal_to_string ( core -> dbg -> reason . signum )		4220745	0					
ANR	4224078	IdentifierDeclType	const char *		4220745	0					
ANR	4224079	Identifier	s		4220745	1					
ANR	4224080	AssignmentExpression	* s = r_signal_to_string ( core -> dbg -> reason . signum )		4220745	2		=			
ANR	4224081	Identifier	s		4220745	0					
ANR	4224082	CallExpression	r_signal_to_string ( core -> dbg -> reason . signum )		4220745	1					
ANR	4224083	Callee	r_signal_to_string		4220745	0					
ANR	4224084	Identifier	r_signal_to_string		4220745	0					
ANR	4224085	ArgumentList	core -> dbg -> reason . signum		4220745	1					
ANR	4224086	Argument	core -> dbg -> reason . signum		4220745	0					
ANR	4224087	MemberAccess	core -> dbg -> reason . signum		4220745	0					
ANR	4224088	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4224089	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224090	Identifier	core		4220745	0					
ANR	4224091	Identifier	dbg		4220745	1					
ANR	4224092	Identifier	reason		4220745	1					
ANR	4224093	Identifier	signum		4220745	1					
ANR	4224094	ExpressionStatement	"P ( ""\\""type\\"":\\""%s\\"","" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"	5038:5:143771:143844	4220745	1	True				
ANR	4224095	CallExpression	"P ( ""\\""type\\"":\\""%s\\"","" , r_debug_reason_to_string ( core -> dbg -> reason . type ) )"		4220745	0					
ANR	4224096	Callee	P		4220745	0					
ANR	4224097	Identifier	P		4220745	0					
ANR	4224098	ArgumentList	"""\\""type\\"":\\""%s\\"","""		4220745	1					
ANR	4224099	Argument	"""\\""type\\"":\\""%s\\"","""		4220745	0					
ANR	4224100	PrimaryExpression	"""\\""type\\"":\\""%s\\"","""		4220745	0					
ANR	4224101	Argument	r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	1					
ANR	4224102	CallExpression	r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	0					
ANR	4224103	Callee	r_debug_reason_to_string		4220745	0					
ANR	4224104	Identifier	r_debug_reason_to_string		4220745	0					
ANR	4224105	ArgumentList	core -> dbg -> reason . type		4220745	1					
ANR	4224106	Argument	core -> dbg -> reason . type		4220745	0					
ANR	4224107	MemberAccess	core -> dbg -> reason . type		4220745	0					
ANR	4224108	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4224109	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224110	Identifier	core		4220745	0					
ANR	4224111	Identifier	dbg		4220745	1					
ANR	4224112	Identifier	reason		4220745	1					
ANR	4224113	Identifier	type		4220745	1					
ANR	4224114	ExpressionStatement	"P ( ""\\""signal\\"":\\""%s\\"","" , s ? s : ""none"" )"	5039:5:143851:143889	4220745	2	True				
ANR	4224115	CallExpression	"P ( ""\\""signal\\"":\\""%s\\"","" , s ? s : ""none"" )"		4220745	0					
ANR	4224116	Callee	P		4220745	0					
ANR	4224117	Identifier	P		4220745	0					
ANR	4224118	ArgumentList	"""\\""signal\\"":\\""%s\\"","""		4220745	1					
ANR	4224119	Argument	"""\\""signal\\"":\\""%s\\"","""		4220745	0					
ANR	4224120	PrimaryExpression	"""\\""signal\\"":\\""%s\\"","""		4220745	0					
ANR	4224121	Argument	"s ? s : ""none"""		4220745	1					
ANR	4224122	ConditionalExpression	"s ? s : ""none"""		4220745	0					
ANR	4224123	Condition	s		4220745	0					
ANR	4224124	Identifier	s		4220745	0					
ANR	4224125	Identifier	s		4220745	1					
ANR	4224126	PrimaryExpression	"""none"""		4220745	2					
ANR	4224127	ExpressionStatement	"P ( ""\\""signum\\"":%d,"" , core -> dbg -> reason . signum )"	5040:5:143896:143942	4220745	3	True				
ANR	4224128	CallExpression	"P ( ""\\""signum\\"":%d,"" , core -> dbg -> reason . signum )"		4220745	0					
ANR	4224129	Callee	P		4220745	0					
ANR	4224130	Identifier	P		4220745	0					
ANR	4224131	ArgumentList	"""\\""signum\\"":%d,"""		4220745	1					
ANR	4224132	Argument	"""\\""signum\\"":%d,"""		4220745	0					
ANR	4224133	PrimaryExpression	"""\\""signum\\"":%d,"""		4220745	0					
ANR	4224134	Argument	core -> dbg -> reason . signum		4220745	1					
ANR	4224135	MemberAccess	core -> dbg -> reason . signum		4220745	0					
ANR	4224136	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4224137	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224138	Identifier	core		4220745	0					
ANR	4224139	Identifier	dbg		4220745	1					
ANR	4224140	Identifier	reason		4220745	1					
ANR	4224141	Identifier	signum		4220745	1					
ANR	4224142	ExpressionStatement	"P ( ""\\""sigpid\\"":%d,"" , core -> dbg -> reason . tid )"	5041:5:143949:143992	4220745	4	True				
ANR	4224143	CallExpression	"P ( ""\\""sigpid\\"":%d,"" , core -> dbg -> reason . tid )"		4220745	0					
ANR	4224144	Callee	P		4220745	0					
ANR	4224145	Identifier	P		4220745	0					
ANR	4224146	ArgumentList	"""\\""sigpid\\"":%d,"""		4220745	1					
ANR	4224147	Argument	"""\\""sigpid\\"":%d,"""		4220745	0					
ANR	4224148	PrimaryExpression	"""\\""sigpid\\"":%d,"""		4220745	0					
ANR	4224149	Argument	core -> dbg -> reason . tid		4220745	1					
ANR	4224150	MemberAccess	core -> dbg -> reason . tid		4220745	0					
ANR	4224151	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4224152	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224153	Identifier	core		4220745	0					
ANR	4224154	Identifier	dbg		4220745	1					
ANR	4224155	Identifier	reason		4220745	1					
ANR	4224156	Identifier	tid		4220745	1					
ANR	4224157	Statement	P	5042:5:143999:143999	4220745	5	True				
ANR	4224158	Statement	(	5042:7:144001:144001	4220745	6	True				
ANR	4224159	Statement	"""\\""addr\\"":%"""	5042:8:144002:144013	4220745	7	True				
ANR	4224160	Statement	PFMT64d	5042:20:144014:144020	4220745	8	True				
ANR	4224161	Statement	""","""	5042:27:144021:144023	4220745	9	True				
ANR	4224162	Statement	","	5042:30:144024:144024	4220745	10	True				
ANR	4224163	Statement	core	5042:32:144026:144029	4220745	11	True				
ANR	4224164	Statement	->	5042:36:144030:144031	4220745	12	True				
ANR	4224165	Statement	dbg	5042:38:144032:144034	4220745	13	True				
ANR	4224166	Statement	->	5042:41:144035:144036	4220745	14	True				
ANR	4224167	Statement	reason	5042:43:144037:144042	4220745	15	True				
ANR	4224168	Statement	.	5042:49:144043:144043	4220745	16	True				
ANR	4224169	Statement	addr	5042:50:144044:144047	4220745	17	True				
ANR	4224170	Statement	)	5042:54:144048:144048	4220745	18	True				
ANR	4224171	ExpressionStatement		5042:55:144049:144049	4220745	19	True				
ANR	4224172	ExpressionStatement	"P ( ""\\""inbp\\"":%s,"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"	5043:5:144056:144114	4220745	20	True				
ANR	4224173	CallExpression	"P ( ""\\""inbp\\"":%s,"" , r_str_bool ( core -> dbg -> reason . bp_addr ) )"		4220745	0					
ANR	4224174	Callee	P		4220745	0					
ANR	4224175	Identifier	P		4220745	0					
ANR	4224176	ArgumentList	"""\\""inbp\\"":%s,"""		4220745	1					
ANR	4224177	Argument	"""\\""inbp\\"":%s,"""		4220745	0					
ANR	4224178	PrimaryExpression	"""\\""inbp\\"":%s,"""		4220745	0					
ANR	4224179	Argument	r_str_bool ( core -> dbg -> reason . bp_addr )		4220745	1					
ANR	4224180	CallExpression	r_str_bool ( core -> dbg -> reason . bp_addr )		4220745	0					
ANR	4224181	Callee	r_str_bool		4220745	0					
ANR	4224182	Identifier	r_str_bool		4220745	0					
ANR	4224183	ArgumentList	core -> dbg -> reason . bp_addr		4220745	1					
ANR	4224184	Argument	core -> dbg -> reason . bp_addr		4220745	0					
ANR	4224185	MemberAccess	core -> dbg -> reason . bp_addr		4220745	0					
ANR	4224186	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4224187	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224188	Identifier	core		4220745	0					
ANR	4224189	Identifier	dbg		4220745	1					
ANR	4224190	Identifier	reason		4220745	1					
ANR	4224191	Identifier	bp_addr		4220745	1					
ANR	4224192	Statement	P	5044:5:144121:144121	4220745	21	True				
ANR	4224193	Statement	(	5044:7:144123:144123	4220745	22	True				
ANR	4224194	Statement	"""\\""baddr\\"":%"""	5044:8:144124:144136	4220745	23	True				
ANR	4224195	Statement	PFMT64d	5044:21:144137:144143	4220745	24	True				
ANR	4224196	Statement	""","""	5044:28:144144:144146	4220745	25	True				
ANR	4224197	Statement	","	5044:31:144147:144147	4220745	26	True				
ANR	4224198	Statement	r_debug_get_baddr	5044:33:144149:144165	4220745	27	True				
ANR	4224199	Statement	(	5044:51:144167:144167	4220745	28	True				
ANR	4224200	Statement	core	5044:52:144168:144171	4220745	29	True				
ANR	4224201	Statement	->	5044:56:144172:144173	4220745	30	True				
ANR	4224202	Statement	dbg	5044:58:144174:144176	4220745	31	True				
ANR	4224203	Statement	","	5044:61:144177:144177	4220745	32	True				
ANR	4224204	Statement	NULL	5044:63:144179:144182	4220745	33	True				
ANR	4224205	Statement	)	5044:67:144183:144183	4220745	34	True				
ANR	4224206	Statement	)	5044:68:144184:144184	4220745	35	True				
ANR	4224207	ExpressionStatement		5044:69:144185:144185	4220745	36	True				
ANR	4224208	Statement	P	5045:5:144192:144192	4220745	37	True				
ANR	4224209	Statement	(	5045:7:144194:144194	4220745	38	True				
ANR	4224210	Statement	"""\\""stopaddr\\"":%"""	5045:8:144195:144210	4220745	39	True				
ANR	4224211	Statement	PFMT64d	5045:24:144211:144217	4220745	40	True				
ANR	4224212	Statement	""","""	5045:31:144218:144220	4220745	41	True				
ANR	4224213	Statement	","	5045:34:144221:144221	4220745	42	True				
ANR	4224214	Statement	core	5045:36:144223:144226	4220745	43	True				
ANR	4224215	Statement	->	5045:40:144227:144228	4220745	44	True				
ANR	4224216	Statement	dbg	5045:42:144229:144231	4220745	45	True				
ANR	4224217	Statement	->	5045:45:144232:144233	4220745	46	True				
ANR	4224218	Statement	stopaddr	5045:47:144234:144241	4220745	47	True				
ANR	4224219	Statement	)	5045:55:144242:144242	4220745	48	True				
ANR	4224220	ExpressionStatement		5045:56:144243:144243	4220745	49	True				
ANR	4224221	ExpressionStatement	"P ( ""\\""pid\\"":%d,"" , rdi -> pid )"	5046:5:144250:144277	4220745	50	True				
ANR	4224222	CallExpression	"P ( ""\\""pid\\"":%d,"" , rdi -> pid )"		4220745	0					
ANR	4224223	Callee	P		4220745	0					
ANR	4224224	Identifier	P		4220745	0					
ANR	4224225	ArgumentList	"""\\""pid\\"":%d,"""		4220745	1					
ANR	4224226	Argument	"""\\""pid\\"":%d,"""		4220745	0					
ANR	4224227	PrimaryExpression	"""\\""pid\\"":%d,"""		4220745	0					
ANR	4224228	Argument	rdi -> pid		4220745	1					
ANR	4224229	PtrMemberAccess	rdi -> pid		4220745	0					
ANR	4224230	Identifier	rdi		4220745	0					
ANR	4224231	Identifier	pid		4220745	1					
ANR	4224232	ExpressionStatement	"P ( ""\\""tid\\"":%d,"" , rdi -> tid )"	5047:5:144284:144311	4220745	51	True				
ANR	4224233	CallExpression	"P ( ""\\""tid\\"":%d,"" , rdi -> tid )"		4220745	0					
ANR	4224234	Callee	P		4220745	0					
ANR	4224235	Identifier	P		4220745	0					
ANR	4224236	ArgumentList	"""\\""tid\\"":%d,"""		4220745	1					
ANR	4224237	Argument	"""\\""tid\\"":%d,"""		4220745	0					
ANR	4224238	PrimaryExpression	"""\\""tid\\"":%d,"""		4220745	0					
ANR	4224239	Argument	rdi -> tid		4220745	1					
ANR	4224240	PtrMemberAccess	rdi -> tid		4220745	0					
ANR	4224241	Identifier	rdi		4220745	0					
ANR	4224242	Identifier	tid		4220745	1					
ANR	4224243	ExpressionStatement	"P ( ""\\""uid\\"":%d,"" , rdi -> uid )"	5048:5:144318:144345	4220745	52	True				
ANR	4224244	CallExpression	"P ( ""\\""uid\\"":%d,"" , rdi -> uid )"		4220745	0					
ANR	4224245	Callee	P		4220745	0					
ANR	4224246	Identifier	P		4220745	0					
ANR	4224247	ArgumentList	"""\\""uid\\"":%d,"""		4220745	1					
ANR	4224248	Argument	"""\\""uid\\"":%d,"""		4220745	0					
ANR	4224249	PrimaryExpression	"""\\""uid\\"":%d,"""		4220745	0					
ANR	4224250	Argument	rdi -> uid		4220745	1					
ANR	4224251	PtrMemberAccess	rdi -> uid		4220745	0					
ANR	4224252	Identifier	rdi		4220745	0					
ANR	4224253	Identifier	uid		4220745	1					
ANR	4224254	ExpressionStatement	"P ( ""\\""gid\\"":%d,"" , rdi -> gid )"	5049:5:144352:144379	4220745	53	True				
ANR	4224255	CallExpression	"P ( ""\\""gid\\"":%d,"" , rdi -> gid )"		4220745	0					
ANR	4224256	Callee	P		4220745	0					
ANR	4224257	Identifier	P		4220745	0					
ANR	4224258	ArgumentList	"""\\""gid\\"":%d,"""		4220745	1					
ANR	4224259	Argument	"""\\""gid\\"":%d,"""		4220745	0					
ANR	4224260	PrimaryExpression	"""\\""gid\\"":%d,"""		4220745	0					
ANR	4224261	Argument	rdi -> gid		4220745	1					
ANR	4224262	PtrMemberAccess	rdi -> gid		4220745	0					
ANR	4224263	Identifier	rdi		4220745	0					
ANR	4224264	Identifier	gid		4220745	1					
ANR	4224265	IfStatement	if ( rdi -> usr )		4220745	54					
ANR	4224266	Condition	rdi -> usr	5050:9:144390:144397	4220745	0	True				
ANR	4224267	PtrMemberAccess	rdi -> usr		4220745	0					
ANR	4224268	Identifier	rdi		4220745	0					
ANR	4224269	Identifier	usr		4220745	1					
ANR	4224270	CompoundStatement		514:19:15458:15458	4220745	1					
ANR	4224271	ExpressionStatement	"PS ( ""\\""usr\\"":\\""%s\\"","" , rdi -> usr )"	5051:6:144408:144439	4220745	0	True				
ANR	4224272	CallExpression	"PS ( ""\\""usr\\"":\\""%s\\"","" , rdi -> usr )"		4220745	0					
ANR	4224273	Callee	PS		4220745	0					
ANR	4224274	Identifier	PS		4220745	0					
ANR	4224275	ArgumentList	"""\\""usr\\"":\\""%s\\"","""		4220745	1					
ANR	4224276	Argument	"""\\""usr\\"":\\""%s\\"","""		4220745	0					
ANR	4224277	PrimaryExpression	"""\\""usr\\"":\\""%s\\"","""		4220745	0					
ANR	4224278	Argument	rdi -> usr		4220745	1					
ANR	4224279	PtrMemberAccess	rdi -> usr		4220745	0					
ANR	4224280	Identifier	rdi		4220745	0					
ANR	4224281	Identifier	usr		4220745	1					
ANR	4224282	IfStatement	if ( rdi -> exe )		4220745	55					
ANR	4224283	Condition	rdi -> exe	5053:9:144457:144464	4220745	0	True				
ANR	4224284	PtrMemberAccess	rdi -> exe		4220745	0					
ANR	4224285	Identifier	rdi		4220745	0					
ANR	4224286	Identifier	exe		4220745	1					
ANR	4224287	CompoundStatement		517:19:15525:15525	4220745	1					
ANR	4224288	ExpressionStatement	"PS ( ""\\""exe\\"":\\""%s\\"","" , rdi -> exe )"	5054:6:144475:144506	4220745	0	True				
ANR	4224289	CallExpression	"PS ( ""\\""exe\\"":\\""%s\\"","" , rdi -> exe )"		4220745	0					
ANR	4224290	Callee	PS		4220745	0					
ANR	4224291	Identifier	PS		4220745	0					
ANR	4224292	ArgumentList	"""\\""exe\\"":\\""%s\\"","""		4220745	1					
ANR	4224293	Argument	"""\\""exe\\"":\\""%s\\"","""		4220745	0					
ANR	4224294	PrimaryExpression	"""\\""exe\\"":\\""%s\\"","""		4220745	0					
ANR	4224295	Argument	rdi -> exe		4220745	1					
ANR	4224296	PtrMemberAccess	rdi -> exe		4220745	0					
ANR	4224297	Identifier	rdi		4220745	0					
ANR	4224298	Identifier	exe		4220745	1					
ANR	4224299	IfStatement	if ( rdi -> cmdline )		4220745	56					
ANR	4224300	Condition	rdi -> cmdline	5056:9:144524:144535	4220745	0	True				
ANR	4224301	PtrMemberAccess	rdi -> cmdline		4220745	0					
ANR	4224302	Identifier	rdi		4220745	0					
ANR	4224303	Identifier	cmdline		4220745	1					
ANR	4224304	CompoundStatement		520:23:15596:15596	4220745	1					
ANR	4224305	ExpressionStatement	"PS ( ""\\""cmdline\\"":\\""%s\\"","" , rdi -> cmdline )"	5057:6:144546:144586	4220745	0	True				
ANR	4224306	CallExpression	"PS ( ""\\""cmdline\\"":\\""%s\\"","" , rdi -> cmdline )"		4220745	0					
ANR	4224307	Callee	PS		4220745	0					
ANR	4224308	Identifier	PS		4220745	0					
ANR	4224309	ArgumentList	"""\\""cmdline\\"":\\""%s\\"","""		4220745	1					
ANR	4224310	Argument	"""\\""cmdline\\"":\\""%s\\"","""		4220745	0					
ANR	4224311	PrimaryExpression	"""\\""cmdline\\"":\\""%s\\"","""		4220745	0					
ANR	4224312	Argument	rdi -> cmdline		4220745	1					
ANR	4224313	PtrMemberAccess	rdi -> cmdline		4220745	0					
ANR	4224314	Identifier	rdi		4220745	0					
ANR	4224315	Identifier	cmdline		4220745	1					
ANR	4224316	IfStatement	if ( rdi -> cwd )		4220745	57					
ANR	4224317	Condition	rdi -> cwd	5059:9:144604:144611	4220745	0	True				
ANR	4224318	PtrMemberAccess	rdi -> cwd		4220745	0					
ANR	4224319	Identifier	rdi		4220745	0					
ANR	4224320	Identifier	cwd		4220745	1					
ANR	4224321	CompoundStatement		523:19:15672:15672	4220745	1					
ANR	4224322	ExpressionStatement	"PS ( ""\\""cwd\\"":\\""%s\\"","" , rdi -> cwd )"	5060:6:144622:144654	4220745	0	True				
ANR	4224323	CallExpression	"PS ( ""\\""cwd\\"":\\""%s\\"","" , rdi -> cwd )"		4220745	0					
ANR	4224324	Callee	PS		4220745	0					
ANR	4224325	Identifier	PS		4220745	0					
ANR	4224326	ArgumentList	"""\\""cwd\\"":\\""%s\\"","""		4220745	1					
ANR	4224327	Argument	"""\\""cwd\\"":\\""%s\\"","""		4220745	0					
ANR	4224328	PrimaryExpression	"""\\""cwd\\"":\\""%s\\"","""		4220745	0					
ANR	4224329	Argument	rdi -> cwd		4220745	1					
ANR	4224330	PtrMemberAccess	rdi -> cwd		4220745	0					
ANR	4224331	Identifier	rdi		4220745	0					
ANR	4224332	Identifier	cwd		4220745	1					
ANR	4224333	ExpressionStatement	"P ( ""\\""stopreason\\"":%d}\\n"" , stop )"	5063:4:144673:144705	4220745	24	True				
ANR	4224334	CallExpression	"P ( ""\\""stopreason\\"":%d}\\n"" , stop )"		4220745	0					
ANR	4224335	Callee	P		4220745	0					
ANR	4224336	Identifier	P		4220745	0					
ANR	4224337	ArgumentList	"""\\""stopreason\\"":%d}\\n"""		4220745	1					
ANR	4224338	Argument	"""\\""stopreason\\"":%d}\\n"""		4220745	0					
ANR	4224339	PrimaryExpression	"""\\""stopreason\\"":%d}\\n"""		4220745	0					
ANR	4224340	Argument	stop		4220745	1					
ANR	4224341	Identifier	stop		4220745	0					
ANR	4224342	BreakStatement	break ;	5064:4:144711:144716	4220745	25	True				
ANR	4224343	Statement	undef	5065:1:144719:144723	4220745	26	True				
ANR	4224344	Statement	P	5065:7:144725:144725	4220745	27	True				
ANR	4224345	Statement	undef	5066:1:144728:144732	4220745	28	True				
ANR	4224346	Statement	PS	5066:7:144734:144735	4220745	29	True				
ANR	4224347	Label	case 'q' :	5067:3:144740:144748	4220745	30	True				
ANR	4224348	CompoundStatement		533:5:15819:15884	4220745	31					
ANR	4224349	IdentifierDeclStatement	const char * r = r_debug_reason_to_string ( core -> dbg -> reason . type ) ;	5069:5:144761:144826	4220745	0	True				
ANR	4224350	IdentifierDecl	* r = r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	0					
ANR	4224351	IdentifierDeclType	const char *		4220745	0					
ANR	4224352	Identifier	r		4220745	1					
ANR	4224353	AssignmentExpression	* r = r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	2		=			
ANR	4224354	Identifier	r		4220745	0					
ANR	4224355	CallExpression	r_debug_reason_to_string ( core -> dbg -> reason . type )		4220745	1					
ANR	4224356	Callee	r_debug_reason_to_string		4220745	0					
ANR	4224357	Identifier	r_debug_reason_to_string		4220745	0					
ANR	4224358	ArgumentList	core -> dbg -> reason . type		4220745	1					
ANR	4224359	Argument	core -> dbg -> reason . type		4220745	0					
ANR	4224360	MemberAccess	core -> dbg -> reason . type		4220745	0					
ANR	4224361	PtrMemberAccess	core -> dbg -> reason		4220745	0					
ANR	4224362	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224363	Identifier	core		4220745	0					
ANR	4224364	Identifier	dbg		4220745	1					
ANR	4224365	Identifier	reason		4220745	1					
ANR	4224366	Identifier	type		4220745	1					
ANR	4224367	IfStatement	if ( ! r )		4220745	1					
ANR	4224368	Condition	! r	5070:9:144837:144838	4220745	0	True				
ANR	4224369	UnaryOperationExpression	! r		4220745	0					
ANR	4224370	UnaryOperator	!		4220745	0					
ANR	4224371	Identifier	r		4220745	1					
ANR	4224372	CompoundStatement		534:13:15899:15899	4220745	1					
ANR	4224373	ExpressionStatement	"r = ""none"""	5071:6:144849:144859	4220745	0	True				
ANR	4224374	AssignmentExpression	"r = ""none"""		4220745	0		=			
ANR	4224375	Identifier	r		4220745	0					
ANR	4224376	PrimaryExpression	"""none"""		4220745	1					
ANR	4224377	Statement	r_cons_printf	5073:5:144873:144885	4220745	2	True				
ANR	4224378	Statement	(	5073:19:144887:144887	4220745	3	True				
ANR	4224379	Statement	"""%s at 0x%08"""	5073:20:144888:144900	4220745	4	True				
ANR	4224380	Statement	PFMT64x	5073:33:144901:144907	4220745	5	True				
ANR	4224381	Statement	"""\\n"""	5073:40:144908:144911	4220745	6	True				
ANR	4224382	Statement	","	5073:44:144912:144912	4220745	7	True				
ANR	4224383	Statement	r	5073:46:144914:144914	4220745	8	True				
ANR	4224384	Statement	","	5073:47:144915:144915	4220745	9	True				
ANR	4224385	Statement	core	5073:49:144917:144920	4220745	10	True				
ANR	4224386	Statement	->	5073:53:144921:144922	4220745	11	True				
ANR	4224387	Statement	dbg	5073:55:144923:144925	4220745	12	True				
ANR	4224388	Statement	->	5073:58:144926:144927	4220745	13	True				
ANR	4224389	Statement	stopaddr	5073:60:144928:144935	4220745	14	True				
ANR	4224390	Statement	)	5073:68:144936:144936	4220745	15	True				
ANR	4224391	ExpressionStatement		5073:69:144937:144937	4220745	16	True				
ANR	4224392	BreakStatement	break ;	5075:4:144949:144954	4220745	32	True				
ANR	4224393	Label	case '?' :	5076:3:144959:144967	4220745	33	True				
ANR	4224394	Label	default :	5077:3:144981:144988	4220745	34	True				
ANR	4224395	Identifier	default		4220745	0					
ANR	4224396	ExpressionStatement	"r_core_cmd_help ( core , help_msg_di )"	5078:4:144994:145029	4220745	35	True				
ANR	4224397	CallExpression	"r_core_cmd_help ( core , help_msg_di )"		4220745	0					
ANR	4224398	Callee	r_core_cmd_help		4220745	0					
ANR	4224399	Identifier	r_core_cmd_help		4220745	0					
ANR	4224400	ArgumentList	core		4220745	1					
ANR	4224401	Argument	core		4220745	0					
ANR	4224402	Identifier	core		4220745	0					
ANR	4224403	Argument	help_msg_di		4220745	1					
ANR	4224404	Identifier	help_msg_di		4220745	0					
ANR	4224405	BreakStatement	break ;	5079:4:145035:145040	4220745	36	True				
ANR	4224406	ExpressionStatement	r_debug_info_free ( rdi )	5081:3:145050:145073	4220745	4	True				
ANR	4224407	CallExpression	r_debug_info_free ( rdi )		4220745	0					
ANR	4224408	Callee	r_debug_info_free		4220745	0					
ANR	4224409	Identifier	r_debug_info_free		4220745	0					
ANR	4224410	ArgumentList	rdi		4220745	1					
ANR	4224411	Argument	rdi		4220745	0					
ANR	4224412	Identifier	rdi		4220745	0					
ANR	4224413	BreakStatement	break ;	5083:2:145081:145086	4220745	35	True				
ANR	4224414	Label	case 'e' :	5084:1:145089:145097	4220745	36	True				
ANR	4224415	ExpressionStatement	"r_core_debug_esil ( core , input + 1 )"	5085:2:145109:145144	4220745	37	True				
ANR	4224416	CallExpression	"r_core_debug_esil ( core , input + 1 )"		4220745	0					
ANR	4224417	Callee	r_core_debug_esil		4220745	0					
ANR	4224418	Identifier	r_core_debug_esil		4220745	0					
ANR	4224419	ArgumentList	core		4220745	1					
ANR	4224420	Argument	core		4220745	0					
ANR	4224421	Identifier	core		4220745	0					
ANR	4224422	Argument	input + 1		4220745	1					
ANR	4224423	AdditiveExpression	input + 1		4220745	0		+			
ANR	4224424	Identifier	input		4220745	0					
ANR	4224425	PrimaryExpression	1		4220745	1					
ANR	4224426	BreakStatement	break ;	5086:2:145148:145153	4220745	38	True				
ANR	4224427	Label	case 'g' :	5087:1:145156:145164	4220745	39	True				
ANR	4224428	IfStatement	if ( core -> dbg -> h && core -> dbg -> h -> gcore )		4220745	40					
ANR	4224429	Condition	core -> dbg -> h && core -> dbg -> h -> gcore	5088:6:145180:145214	4220745	0	True				
ANR	4224430	AndExpression	core -> dbg -> h && core -> dbg -> h -> gcore		4220745	0		&&			
ANR	4224431	PtrMemberAccess	core -> dbg -> h		4220745	0					
ANR	4224432	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224433	Identifier	core		4220745	0					
ANR	4224434	Identifier	dbg		4220745	1					
ANR	4224435	Identifier	h		4220745	1					
ANR	4224436	PtrMemberAccess	core -> dbg -> h -> gcore		4220745	1					
ANR	4224437	PtrMemberAccess	core -> dbg -> h		4220745	0					
ANR	4224438	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224439	Identifier	core		4220745	0					
ANR	4224440	Identifier	dbg		4220745	1					
ANR	4224441	Identifier	h		4220745	1					
ANR	4224442	Identifier	gcore		4220745	1					
ANR	4224443	CompoundStatement		560:3:16520:16584	4220745	1					
ANR	4224444	IfStatement	if ( core -> dbg -> pid == - 1 )		4220745	0					
ANR	4224445	Condition	core -> dbg -> pid == - 1	5089:7:145226:145245	4220745	0	True				
ANR	4224446	EqualityExpression	core -> dbg -> pid == - 1		4220745	0		==			
ANR	4224447	PtrMemberAccess	core -> dbg -> pid		4220745	0					
ANR	4224448	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224449	Identifier	core		4220745	0					
ANR	4224450	Identifier	dbg		4220745	1					
ANR	4224451	Identifier	pid		4220745	1					
ANR	4224452	UnaryOperationExpression	- 1		4220745	1					
ANR	4224453	UnaryOperator	-		4220745	0					
ANR	4224454	PrimaryExpression	1		4220745	1					
ANR	4224455	CompoundStatement		553:29:16306:16306	4220745	1					
ANR	4224456	ExpressionStatement	"eprintf ( ""Not debugging, can't write core.\\n"" )"	5090:4:145254:145300	4220745	0	True				
ANR	4224457	CallExpression	"eprintf ( ""Not debugging, can't write core.\\n"" )"		4220745	0					
ANR	4224458	Callee	eprintf		4220745	0					
ANR	4224459	Identifier	eprintf		4220745	0					
ANR	4224460	ArgumentList	"""Not debugging, can't write core.\\n"""		4220745	1					
ANR	4224461	Argument	"""Not debugging, can't write core.\\n"""		4220745	0					
ANR	4224462	PrimaryExpression	"""Not debugging, can't write core.\\n"""		4220745	0					
ANR	4224463	BreakStatement	break ;	5091:4:145306:145311	4220745	1	True				
ANR	4224464	IdentifierDeclStatement	"char * corefile = get_corefile_name ( input + 1 , core -> dbg -> pid ) ;"	5093:3:145321:145383	4220745	1	True				
ANR	4224465	IdentifierDecl	"* corefile = get_corefile_name ( input + 1 , core -> dbg -> pid )"		4220745	0					
ANR	4224466	IdentifierDeclType	char *		4220745	0					
ANR	4224467	Identifier	corefile		4220745	1					
ANR	4224468	AssignmentExpression	"* corefile = get_corefile_name ( input + 1 , core -> dbg -> pid )"		4220745	2		=			
ANR	4224469	Identifier	corefile		4220745	0					
ANR	4224470	CallExpression	"get_corefile_name ( input + 1 , core -> dbg -> pid )"		4220745	1					
ANR	4224471	Callee	get_corefile_name		4220745	0					
ANR	4224472	Identifier	get_corefile_name		4220745	0					
ANR	4224473	ArgumentList	input + 1		4220745	1					
ANR	4224474	Argument	input + 1		4220745	0					
ANR	4224475	AdditiveExpression	input + 1		4220745	0		+			
ANR	4224476	Identifier	input		4220745	0					
ANR	4224477	PrimaryExpression	1		4220745	1					
ANR	4224478	Argument	core -> dbg -> pid		4220745	1					
ANR	4224479	PtrMemberAccess	core -> dbg -> pid		4220745	0					
ANR	4224480	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224481	Identifier	core		4220745	0					
ANR	4224482	Identifier	dbg		4220745	1					
ANR	4224483	Identifier	pid		4220745	1					
ANR	4224484	ExpressionStatement	"eprintf ( ""Writing to file '%s'\\n"" , corefile )"	5094:3:145388:145432	4220745	2	True				
ANR	4224485	CallExpression	"eprintf ( ""Writing to file '%s'\\n"" , corefile )"		4220745	0					
ANR	4224486	Callee	eprintf		4220745	0					
ANR	4224487	Identifier	eprintf		4220745	0					
ANR	4224488	ArgumentList	"""Writing to file '%s'\\n"""		4220745	1					
ANR	4224489	Argument	"""Writing to file '%s'\\n"""		4220745	0					
ANR	4224490	PrimaryExpression	"""Writing to file '%s'\\n"""		4220745	0					
ANR	4224491	Argument	corefile		4220745	1					
ANR	4224492	Identifier	corefile		4220745	0					
ANR	4224493	ExpressionStatement	r_file_rm ( corefile )	5095:3:145437:145457	4220745	3	True				
ANR	4224494	CallExpression	r_file_rm ( corefile )		4220745	0					
ANR	4224495	Callee	r_file_rm		4220745	0					
ANR	4224496	Identifier	r_file_rm		4220745	0					
ANR	4224497	ArgumentList	corefile		4220745	1					
ANR	4224498	Argument	corefile		4220745	0					
ANR	4224499	Identifier	corefile		4220745	0					
ANR	4224500	IdentifierDeclStatement	"RBuffer * dst = r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 ) ;"	5096:3:145462:145526	4220745	4	True				
ANR	4224501	IdentifierDecl	"* dst = r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 )"		4220745	0					
ANR	4224502	IdentifierDeclType	RBuffer *		4220745	0					
ANR	4224503	Identifier	dst		4220745	1					
ANR	4224504	AssignmentExpression	"* dst = r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 )"		4220745	2		=			
ANR	4224505	Identifier	dst		4220745	0					
ANR	4224506	CallExpression	"r_buf_new_file ( corefile , O_RDWR | O_CREAT , 0644 )"		4220745	1					
ANR	4224507	Callee	r_buf_new_file		4220745	0					
ANR	4224508	Identifier	r_buf_new_file		4220745	0					
ANR	4224509	ArgumentList	corefile		4220745	1					
ANR	4224510	Argument	corefile		4220745	0					
ANR	4224511	Identifier	corefile		4220745	0					
ANR	4224512	Argument	O_RDWR | O_CREAT		4220745	1					
ANR	4224513	InclusiveOrExpression	O_RDWR | O_CREAT		4220745	0		|			
ANR	4224514	Identifier	O_RDWR		4220745	0					
ANR	4224515	Identifier	O_CREAT		4220745	1					
ANR	4224516	Argument	0644		4220745	2					
ANR	4224517	PrimaryExpression	0644		4220745	0					
ANR	4224518	IfStatement	if ( dst )		4220745	5					
ANR	4224519	Condition	dst	5097:7:145535:145537	4220745	0	True				
ANR	4224520	Identifier	dst		4220745	0					
ANR	4224521	CompoundStatement		561:12:16598:16598	4220745	1					
ANR	4224522	IfStatement	"if ( ! core -> dbg -> h -> gcore ( core -> dbg , dst ) )"		4220745	0					
ANR	4224523	Condition	"! core -> dbg -> h -> gcore ( core -> dbg , dst )"	5098:8:145550:145586	4220745	0	True				
ANR	4224524	UnaryOperationExpression	"! core -> dbg -> h -> gcore ( core -> dbg , dst )"		4220745	0					
ANR	4224525	UnaryOperator	!		4220745	0					
ANR	4224526	CallExpression	"core -> dbg -> h -> gcore ( core -> dbg , dst )"		4220745	1					
ANR	4224527	Callee	core -> dbg -> h -> gcore		4220745	0					
ANR	4224528	PtrMemberAccess	core -> dbg -> h -> gcore		4220745	0					
ANR	4224529	PtrMemberAccess	core -> dbg -> h		4220745	0					
ANR	4224530	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224531	Identifier	core		4220745	0					
ANR	4224532	Identifier	dbg		4220745	1					
ANR	4224533	Identifier	h		4220745	1					
ANR	4224534	Identifier	gcore		4220745	1					
ANR	4224535	ArgumentList	core -> dbg		4220745	1					
ANR	4224536	Argument	core -> dbg		4220745	0					
ANR	4224537	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224538	Identifier	core		4220745	0					
ANR	4224539	Identifier	dbg		4220745	1					
ANR	4224540	Argument	dst		4220745	1					
ANR	4224541	Identifier	dst		4220745	0					
ANR	4224542	CompoundStatement		562:47:16647:16647	4220745	1					
ANR	4224543	ExpressionStatement	"eprintf ( ""dg: coredump failed\\n"" )"	5099:5:145596:145629	4220745	0	True				
ANR	4224544	CallExpression	"eprintf ( ""dg: coredump failed\\n"" )"		4220745	0					
ANR	4224545	Callee	eprintf		4220745	0					
ANR	4224546	Identifier	eprintf		4220745	0					
ANR	4224547	ArgumentList	"""dg: coredump failed\\n"""		4220745	1					
ANR	4224548	Argument	"""dg: coredump failed\\n"""		4220745	0					
ANR	4224549	PrimaryExpression	"""dg: coredump failed\\n"""		4220745	0					
ANR	4224550	ExpressionStatement	r_buf_free ( dst )	5101:4:145641:145657	4220745	1	True				
ANR	4224551	CallExpression	r_buf_free ( dst )		4220745	0					
ANR	4224552	Callee	r_buf_free		4220745	0					
ANR	4224553	Identifier	r_buf_free		4220745	0					
ANR	4224554	ArgumentList	dst		4220745	1					
ANR	4224555	Argument	dst		4220745	0					
ANR	4224556	Identifier	dst		4220745	0					
ANR	4224557	ElseStatement	else		4220745	0					
ANR	4224558	CompoundStatement		566:10:16727:16727	4220745	0					
ANR	4224559	ExpressionStatement	"perror ( ""r_buf_new_file"" )"	5103:4:145675:145700	4220745	0	True				
ANR	4224560	CallExpression	"perror ( ""r_buf_new_file"" )"		4220745	0					
ANR	4224561	Callee	perror		4220745	0					
ANR	4224562	Identifier	perror		4220745	0					
ANR	4224563	ArgumentList	"""r_buf_new_file"""		4220745	1					
ANR	4224564	Argument	"""r_buf_new_file"""		4220745	0					
ANR	4224565	PrimaryExpression	"""r_buf_new_file"""		4220745	0					
ANR	4224566	ExpressionStatement	free ( corefile )	5105:3:145710:145725	4220745	6	True				
ANR	4224567	CallExpression	free ( corefile )		4220745	0					
ANR	4224568	Callee	free		4220745	0					
ANR	4224569	Identifier	free		4220745	0					
ANR	4224570	ArgumentList	corefile		4220745	1					
ANR	4224571	Argument	corefile		4220745	0					
ANR	4224572	Identifier	corefile		4220745	0					
ANR	4224573	BreakStatement	break ;	5107:2:145733:145738	4220745	41	True				
ANR	4224574	Label	case 'k' :	5108:1:145741:145749	4220745	42	True				
ANR	4224575	ExpressionStatement	"r_core_debug_kill ( core , input + 1 )"	5109:2:145761:145796	4220745	43	True				
ANR	4224576	CallExpression	"r_core_debug_kill ( core , input + 1 )"		4220745	0					
ANR	4224577	Callee	r_core_debug_kill		4220745	0					
ANR	4224578	Identifier	r_core_debug_kill		4220745	0					
ANR	4224579	ArgumentList	core		4220745	1					
ANR	4224580	Argument	core		4220745	0					
ANR	4224581	Identifier	core		4220745	0					
ANR	4224582	Argument	input + 1		4220745	1					
ANR	4224583	AdditiveExpression	input + 1		4220745	0		+			
ANR	4224584	Identifier	input		4220745	0					
ANR	4224585	PrimaryExpression	1		4220745	1					
ANR	4224586	BreakStatement	break ;	5110:2:145800:145805	4220745	44	True				
ANR	4224587	Label	case 'o' :	5111:1:145808:145816	4220745	45	True				
ANR	4224588	SwitchStatement	switch ( input [ 1 ] )		4220745	46					
ANR	4224589	Condition	input [ 1 ]	5112:10:145836:145843	4220745	0	True				
ANR	4224590	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4224591	Identifier	input		4220745	0					
ANR	4224592	PrimaryExpression	1		4220745	1					
ANR	4224593	CompoundStatement		576:20:16904:16904	4220745	1					
ANR	4224594	Label	case '\\0' :	5113:2:145850:145859	4220745	0	True				
ANR	4224595	ExpressionStatement	"r_core_file_reopen ( core , input [ 1 ] ? input + 2 : NULL , 0 , 1 )"	5114:3:145872:145931	4220745	1	True				
ANR	4224596	CallExpression	"r_core_file_reopen ( core , input [ 1 ] ? input + 2 : NULL , 0 , 1 )"		4220745	0					
ANR	4224597	Callee	r_core_file_reopen		4220745	0					
ANR	4224598	Identifier	r_core_file_reopen		4220745	0					
ANR	4224599	ArgumentList	core		4220745	1					
ANR	4224600	Argument	core		4220745	0					
ANR	4224601	Identifier	core		4220745	0					
ANR	4224602	Argument	input [ 1 ] ? input + 2 : NULL		4220745	1					
ANR	4224603	ConditionalExpression	input [ 1 ] ? input + 2 : NULL		4220745	0					
ANR	4224604	Condition	input [ 1 ]		4220745	0					
ANR	4224605	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4224606	Identifier	input		4220745	0					
ANR	4224607	PrimaryExpression	1		4220745	1					
ANR	4224608	AdditiveExpression	input + 2		4220745	1		+			
ANR	4224609	Identifier	input		4220745	0					
ANR	4224610	PrimaryExpression	2		4220745	1					
ANR	4224611	Identifier	NULL		4220745	2					
ANR	4224612	Argument	0		4220745	2					
ANR	4224613	PrimaryExpression	0		4220745	0					
ANR	4224614	Argument	1		4220745	3					
ANR	4224615	PrimaryExpression	1		4220745	0					
ANR	4224616	BreakStatement	break ;	5115:3:145936:145941	4220745	2	True				
ANR	4224617	Label	case 'r' :	5116:2:145945:145953	4220745	3	True				
ANR	4224618	IfStatement	if ( input [ 2 ] == ' ' )		4220745	4					
ANR	4224619	Condition	input [ 2 ] == ' '	5117:7:145986:146000	4220745	0	True				
ANR	4224620	EqualityExpression	input [ 2 ] == ' '		4220745	0		==			
ANR	4224621	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4224622	Identifier	input		4220745	0					
ANR	4224623	PrimaryExpression	2		4220745	1					
ANR	4224624	PrimaryExpression	' '		4220745	1					
ANR	4224625	CompoundStatement		581:24:17061:17061	4220745	1					
ANR	4224626	ExpressionStatement	"setRarunProfileString ( core , input + 3 )"	5118:4:146009:146048	4220745	0	True				
ANR	4224627	CallExpression	"setRarunProfileString ( core , input + 3 )"		4220745	0					
ANR	4224628	Callee	setRarunProfileString		4220745	0					
ANR	4224629	Identifier	setRarunProfileString		4220745	0					
ANR	4224630	ArgumentList	core		4220745	1					
ANR	4224631	Argument	core		4220745	0					
ANR	4224632	Identifier	core		4220745	0					
ANR	4224633	Argument	input + 3		4220745	1					
ANR	4224634	AdditiveExpression	input + 3		4220745	0		+			
ANR	4224635	Identifier	input		4220745	0					
ANR	4224636	PrimaryExpression	3		4220745	1					
ANR	4224637	ElseStatement	else		4220745	0					
ANR	4224638	CompoundStatement		583:10:17118:17118	4220745	0					
ANR	4224639	ExpressionStatement	"r_sys_cmd ( ""rarun2 -h"" )"	5121:4:146090:146113	4220745	0	True				
ANR	4224640	CallExpression	"r_sys_cmd ( ""rarun2 -h"" )"		4220745	0					
ANR	4224641	Callee	r_sys_cmd		4220745	0					
ANR	4224642	Identifier	r_sys_cmd		4220745	0					
ANR	4224643	ArgumentList	"""rarun2 -h"""		4220745	1					
ANR	4224644	Argument	"""rarun2 -h"""		4220745	0					
ANR	4224645	PrimaryExpression	"""rarun2 -h"""		4220745	0					
ANR	4224646	BreakStatement	break ;	5123:3:146123:146128	4220745	5	True				
ANR	4224647	Label	case 'o' :	5124:2:146132:146140	4220745	6	True				
ANR	4224648	ExpressionStatement	"r_core_file_reopen_debug ( core , input + 2 )"	5125:3:146174:146216	4220745	7	True				
ANR	4224649	CallExpression	"r_core_file_reopen_debug ( core , input + 2 )"		4220745	0					
ANR	4224650	Callee	r_core_file_reopen_debug		4220745	0					
ANR	4224651	Identifier	r_core_file_reopen_debug		4220745	0					
ANR	4224652	ArgumentList	core		4220745	1					
ANR	4224653	Argument	core		4220745	0					
ANR	4224654	Identifier	core		4220745	0					
ANR	4224655	Argument	input + 2		4220745	1					
ANR	4224656	AdditiveExpression	input + 2		4220745	0		+			
ANR	4224657	Identifier	input		4220745	0					
ANR	4224658	PrimaryExpression	2		4220745	1					
ANR	4224659	BreakStatement	break ;	5126:3:146221:146226	4220745	8	True				
ANR	4224660	Label	case '?' :	5127:2:146230:146238	4220745	9	True				
ANR	4224661	Label	default :	5128:2:146251:146258	4220745	10	True				
ANR	4224662	Identifier	default		4220745	0					
ANR	4224663	ExpressionStatement	"r_core_cmd_help ( core , help_msg_do )"	5129:3:146263:146298	4220745	11	True				
ANR	4224664	CallExpression	"r_core_cmd_help ( core , help_msg_do )"		4220745	0					
ANR	4224665	Callee	r_core_cmd_help		4220745	0					
ANR	4224666	Identifier	r_core_cmd_help		4220745	0					
ANR	4224667	ArgumentList	core		4220745	1					
ANR	4224668	Argument	core		4220745	0					
ANR	4224669	Identifier	core		4220745	0					
ANR	4224670	Argument	help_msg_do		4220745	1					
ANR	4224671	Identifier	help_msg_do		4220745	0					
ANR	4224672	BreakStatement	break ;	5130:3:146303:146308	4220745	12	True				
ANR	4224673	BreakStatement	break ;	5132:2:146316:146321	4220745	47	True				
ANR	4224674	Label	case 'W' :	5134:1:146340:146348	4220745	48	True				
ANR	4224675	ExpressionStatement	r_w32_print_windows ( core -> dbg )	5135:2:146360:146391	4220745	49	True				
ANR	4224676	CallExpression	r_w32_print_windows ( core -> dbg )		4220745	0					
ANR	4224677	Callee	r_w32_print_windows		4220745	0					
ANR	4224678	Identifier	r_w32_print_windows		4220745	0					
ANR	4224679	ArgumentList	core -> dbg		4220745	1					
ANR	4224680	Argument	core -> dbg		4220745	0					
ANR	4224681	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224682	Identifier	core		4220745	0					
ANR	4224683	Identifier	dbg		4220745	1					
ANR	4224684	BreakStatement	break ;	5136:2:146395:146400	4220745	50	True				
ANR	4224685	Label	case 'w' :	5138:1:146410:146418	4220745	51	True				
ANR	4224686	ExpressionStatement	"r_cons_break_push ( static_debug_stop , core -> dbg )"	5139:2:146430:146478	4220745	52	True				
ANR	4224687	CallExpression	"r_cons_break_push ( static_debug_stop , core -> dbg )"		4220745	0					
ANR	4224688	Callee	r_cons_break_push		4220745	0					
ANR	4224689	Identifier	r_cons_break_push		4220745	0					
ANR	4224690	ArgumentList	static_debug_stop		4220745	1					
ANR	4224691	Argument	static_debug_stop		4220745	0					
ANR	4224692	Identifier	static_debug_stop		4220745	0					
ANR	4224693	Argument	core -> dbg		4220745	1					
ANR	4224694	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224695	Identifier	core		4220745	0					
ANR	4224696	Identifier	dbg		4220745	1					
ANR	4224697	ForStatement	for ( ; ! r_cons_is_breaked ( ) ; )		4220745	53					
ANR	4224698	Condition	! r_cons_is_breaked ( )	5140:8:146488:146508	4220745	0	True				
ANR	4224699	UnaryOperationExpression	! r_cons_is_breaked ( )		4220745	0					
ANR	4224700	UnaryOperator	!		4220745	0					
ANR	4224701	CallExpression	r_cons_is_breaked ( )		4220745	1					
ANR	4224702	Callee	r_cons_is_breaked		4220745	0					
ANR	4224703	Identifier	r_cons_is_breaked		4220745	0					
ANR	4224704	ArgumentList			4220745	1					
ANR	4224705	CompoundStatement		607:3:17644:17689	4220745	1					
ANR	4224706	IdentifierDeclStatement	int pid = atoi ( input + 1 ) ;	5141:3:146517:146543	4220745	0	True				
ANR	4224707	IdentifierDecl	pid = atoi ( input + 1 )		4220745	0					
ANR	4224708	IdentifierDeclType	int		4220745	0					
ANR	4224709	Identifier	pid		4220745	1					
ANR	4224710	AssignmentExpression	pid = atoi ( input + 1 )		4220745	2		=			
ANR	4224711	Identifier	pid		4220745	0					
ANR	4224712	CallExpression	atoi ( input + 1 )		4220745	1					
ANR	4224713	Callee	atoi		4220745	0					
ANR	4224714	Identifier	atoi		4220745	0					
ANR	4224715	ArgumentList	input + 1		4220745	1					
ANR	4224716	Argument	input + 1		4220745	0					
ANR	4224717	AdditiveExpression	input + 1		4220745	0		+			
ANR	4224718	Identifier	input		4220745	0					
ANR	4224719	PrimaryExpression	1		4220745	1					
ANR	4224720	IdentifierDeclStatement	"int res = r_debug_kill ( core -> dbg , pid , 0 , 0 ) ;"	5143:3:146586:146631	4220745	1	True				
ANR	4224721	IdentifierDecl	"res = r_debug_kill ( core -> dbg , pid , 0 , 0 )"		4220745	0					
ANR	4224722	IdentifierDeclType	int		4220745	0					
ANR	4224723	Identifier	res		4220745	1					
ANR	4224724	AssignmentExpression	"res = r_debug_kill ( core -> dbg , pid , 0 , 0 )"		4220745	2		=			
ANR	4224725	Identifier	res		4220745	0					
ANR	4224726	CallExpression	"r_debug_kill ( core -> dbg , pid , 0 , 0 )"		4220745	1					
ANR	4224727	Callee	r_debug_kill		4220745	0					
ANR	4224728	Identifier	r_debug_kill		4220745	0					
ANR	4224729	ArgumentList	core -> dbg		4220745	1					
ANR	4224730	Argument	core -> dbg		4220745	0					
ANR	4224731	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224732	Identifier	core		4220745	0					
ANR	4224733	Identifier	dbg		4220745	1					
ANR	4224734	Argument	pid		4220745	1					
ANR	4224735	Identifier	pid		4220745	0					
ANR	4224736	Argument	0		4220745	2					
ANR	4224737	PrimaryExpression	0		4220745	0					
ANR	4224738	Argument	0		4220745	3					
ANR	4224739	PrimaryExpression	0		4220745	0					
ANR	4224740	IfStatement	if ( ! res )		4220745	2					
ANR	4224741	Condition	! res	5144:7:146640:146643	4220745	0	True				
ANR	4224742	UnaryOperationExpression	! res		4220745	0					
ANR	4224743	UnaryOperator	!		4220745	0					
ANR	4224744	Identifier	res		4220745	1					
ANR	4224745	CompoundStatement		608:13:17704:17704	4220745	1					
ANR	4224746	BreakStatement	break ;	5145:4:146652:146657	4220745	0	True				
ANR	4224747	ExpressionStatement	r_sys_usleep ( 200 )	5147:3:146667:146685	4220745	3	True				
ANR	4224748	CallExpression	r_sys_usleep ( 200 )		4220745	0					
ANR	4224749	Callee	r_sys_usleep		4220745	0					
ANR	4224750	Identifier	r_sys_usleep		4220745	0					
ANR	4224751	ArgumentList	200		4220745	1					
ANR	4224752	Argument	200		4220745	0					
ANR	4224753	PrimaryExpression	200		4220745	0					
ANR	4224754	ExpressionStatement	r_cons_break_pop ( )	5149:2:146693:146712	4220745	54	True				
ANR	4224755	CallExpression	r_cons_break_pop ( )		4220745	0					
ANR	4224756	Callee	r_cons_break_pop		4220745	0					
ANR	4224757	Identifier	r_cons_break_pop		4220745	0					
ANR	4224758	ArgumentList			4220745	1					
ANR	4224759	BreakStatement	break ;	5150:2:146716:146721	4220745	55	True				
ANR	4224760	Label	case 'x' :	5151:1:146724:146732	4220745	56	True				
ANR	4224761	SwitchStatement	switch ( input [ 1 ] )		4220745	57					
ANR	4224762	Condition	input [ 1 ]	5152:10:146752:146759	4220745	0	True				
ANR	4224763	ArrayIndexing	input [ 1 ]		4220745	0					
ANR	4224764	Identifier	input		4220745	0					
ANR	4224765	PrimaryExpression	1		4220745	1					
ANR	4224766	CompoundStatement		616:20:17820:17820	4220745	1					
ANR	4224767	Label	case ' ' :	5153:2:146766:146774	4220745	0	True				
ANR	4224768	CompoundStatement		618:3:17848:17863	4220745	1					
ANR	4224769	IdentifierDeclStatement	ut8 bytes [ 4096 ] ;	5154:3:146790:146805	4220745	0	True				
ANR	4224770	IdentifierDecl	bytes [ 4096 ]		4220745	0					
ANR	4224771	IdentifierDeclType	ut8 [ 4096 ]		4220745	0					
ANR	4224772	Identifier	bytes		4220745	1					
ANR	4224773	PrimaryExpression	4096		4220745	2					
ANR	4224774	IfStatement	if ( strlen ( input + 2 ) < 4096 )		4220745	1					
ANR	4224775	Condition	strlen ( input + 2 ) < 4096	5155:7:146814:146838	4220745	0	True				
ANR	4224776	RelationalExpression	strlen ( input + 2 ) < 4096		4220745	0		<			
ANR	4224777	CallExpression	strlen ( input + 2 )		4220745	0					
ANR	4224778	Callee	strlen		4220745	0					
ANR	4224779	Identifier	strlen		4220745	0					
ANR	4224780	ArgumentList	input + 2		4220745	1					
ANR	4224781	Argument	input + 2		4220745	0					
ANR	4224782	AdditiveExpression	input + 2		4220745	0		+			
ANR	4224783	Identifier	input		4220745	0					
ANR	4224784	PrimaryExpression	2		4220745	1					
ANR	4224785	PrimaryExpression	4096		4220745	1					
ANR	4224786	CompoundStatement		620:4:17904:17952	4220745	1					
ANR	4224787	IdentifierDeclStatement	"int bytes_len = r_hex_str2bin ( input + 2 , bytes ) ;"	5156:4:146846:146894	4220745	0	True				
ANR	4224788	IdentifierDecl	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		4220745	0					
ANR	4224789	IdentifierDeclType	int		4220745	0					
ANR	4224790	Identifier	bytes_len		4220745	1					
ANR	4224791	AssignmentExpression	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		4220745	2		=			
ANR	4224792	Identifier	bytes_len		4220745	0					
ANR	4224793	CallExpression	"r_hex_str2bin ( input + 2 , bytes )"		4220745	1					
ANR	4224794	Callee	r_hex_str2bin		4220745	0					
ANR	4224795	Identifier	r_hex_str2bin		4220745	0					
ANR	4224796	ArgumentList	input + 2		4220745	1					
ANR	4224797	Argument	input + 2		4220745	0					
ANR	4224798	AdditiveExpression	input + 2		4220745	0		+			
ANR	4224799	Identifier	input		4220745	0					
ANR	4224800	PrimaryExpression	2		4220745	1					
ANR	4224801	Argument	bytes		4220745	1					
ANR	4224802	Identifier	bytes		4220745	0					
ANR	4224803	IfStatement	if ( bytes_len > 0 )		4220745	1					
ANR	4224804	Condition	bytes_len > 0	5157:8:146904:146914	4220745	0	True				
ANR	4224805	RelationalExpression	bytes_len > 0		4220745	0		>			
ANR	4224806	Identifier	bytes_len		4220745	0					
ANR	4224807	PrimaryExpression	0		4220745	1					
ANR	4224808	ExpressionStatement	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"	5157:21:146917:146971	4220745	1	True				
ANR	4224809	CallExpression	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"		4220745	0					
ANR	4224810	Callee	r_debug_execute		4220745	0					
ANR	4224811	Identifier	r_debug_execute		4220745	0					
ANR	4224812	ArgumentList	core -> dbg		4220745	1					
ANR	4224813	Argument	core -> dbg		4220745	0					
ANR	4224814	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224815	Identifier	core		4220745	0					
ANR	4224816	Identifier	dbg		4220745	1					
ANR	4224817	Argument	bytes		4220745	1					
ANR	4224818	Identifier	bytes		4220745	0					
ANR	4224819	Argument	bytes_len		4220745	2					
ANR	4224820	Identifier	bytes_len		4220745	0					
ANR	4224821	Argument	0		4220745	3					
ANR	4224822	PrimaryExpression	0		4220745	0					
ANR	4224823	ElseStatement	else		4220745	0					
ANR	4224824	ExpressionStatement	"eprintf ( ""Invalid hexpairs\\n"" )"	5159:9:146982:147012	4220745	0	True				
ANR	4224825	CallExpression	"eprintf ( ""Invalid hexpairs\\n"" )"		4220745	0					
ANR	4224826	Callee	eprintf		4220745	0					
ANR	4224827	Identifier	eprintf		4220745	0					
ANR	4224828	ArgumentList	"""Invalid hexpairs\\n"""		4220745	1					
ANR	4224829	Argument	"""Invalid hexpairs\\n"""		4220745	0					
ANR	4224830	PrimaryExpression	"""Invalid hexpairs\\n"""		4220745	0					
ANR	4224831	ElseStatement	else		4220745	0					
ANR	4224832	ExpressionStatement	"eprintf ( ""Injection opcodes so long\\n"" )"	5160:10:147024:147063	4220745	0	True				
ANR	4224833	CallExpression	"eprintf ( ""Injection opcodes so long\\n"" )"		4220745	0					
ANR	4224834	Callee	eprintf		4220745	0					
ANR	4224835	Identifier	eprintf		4220745	0					
ANR	4224836	ArgumentList	"""Injection opcodes so long\\n"""		4220745	1					
ANR	4224837	Argument	"""Injection opcodes so long\\n"""		4220745	0					
ANR	4224838	PrimaryExpression	"""Injection opcodes so long\\n"""		4220745	0					
ANR	4224839	BreakStatement	break ;	5161:3:147068:147073	4220745	2	True				
ANR	4224840	Label	case 'a' :	5163:2:147081:147089	4220745	2	True				
ANR	4224841	CompoundStatement		628:3:18163:18178	4220745	3					
ANR	4224842	IdentifierDeclStatement	RAsmCode * acode ;	5164:3:147105:147120	4220745	0	True				
ANR	4224843	IdentifierDecl	* acode		4220745	0					
ANR	4224844	IdentifierDeclType	RAsmCode *		4220745	0					
ANR	4224845	Identifier	acode		4220745	1					
ANR	4224846	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	5165:3:147125:147169	4220745	1	True				
ANR	4224847	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		4220745	0					
ANR	4224848	Callee	r_asm_set_pc		4220745	0					
ANR	4224849	Identifier	r_asm_set_pc		4220745	0					
ANR	4224850	ArgumentList	core -> assembler		4220745	1					
ANR	4224851	Argument	core -> assembler		4220745	0					
ANR	4224852	PtrMemberAccess	core -> assembler		4220745	0					
ANR	4224853	Identifier	core		4220745	0					
ANR	4224854	Identifier	assembler		4220745	1					
ANR	4224855	Argument	core -> offset		4220745	1					
ANR	4224856	PtrMemberAccess	core -> offset		4220745	0					
ANR	4224857	Identifier	core		4220745	0					
ANR	4224858	Identifier	offset		4220745	1					
ANR	4224859	ExpressionStatement	"acode = r_asm_massemble ( core -> assembler , input + 2 )"	5166:3:147174:147226	4220745	2	True				
ANR	4224860	AssignmentExpression	"acode = r_asm_massemble ( core -> assembler , input + 2 )"		4220745	0		=			
ANR	4224861	Identifier	acode		4220745	0					
ANR	4224862	CallExpression	"r_asm_massemble ( core -> assembler , input + 2 )"		4220745	1					
ANR	4224863	Callee	r_asm_massemble		4220745	0					
ANR	4224864	Identifier	r_asm_massemble		4220745	0					
ANR	4224865	ArgumentList	core -> assembler		4220745	1					
ANR	4224866	Argument	core -> assembler		4220745	0					
ANR	4224867	PtrMemberAccess	core -> assembler		4220745	0					
ANR	4224868	Identifier	core		4220745	0					
ANR	4224869	Identifier	assembler		4220745	1					
ANR	4224870	Argument	input + 2		4220745	1					
ANR	4224871	AdditiveExpression	input + 2		4220745	0		+			
ANR	4224872	Identifier	input		4220745	0					
ANR	4224873	PrimaryExpression	2		4220745	1					
ANR	4224874	IfStatement	if ( acode )		4220745	3					
ANR	4224875	Condition	acode	5167:7:147235:147239	4220745	0	True				
ANR	4224876	Identifier	acode		4220745	0					
ANR	4224877	CompoundStatement		631:14:18300:18300	4220745	1					
ANR	4224878	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	5168:4:147248:147281	4220745	0	True				
ANR	4224879	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		4220745	0					
ANR	4224880	Callee	r_reg_arena_push		4220745	0					
ANR	4224881	Identifier	r_reg_arena_push		4220745	0					
ANR	4224882	ArgumentList	core -> dbg -> reg		4220745	1					
ANR	4224883	Argument	core -> dbg -> reg		4220745	0					
ANR	4224884	PtrMemberAccess	core -> dbg -> reg		4220745	0					
ANR	4224885	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224886	Identifier	core		4220745	0					
ANR	4224887	Identifier	dbg		4220745	1					
ANR	4224888	Identifier	reg		4220745	1					
ANR	4224889	ExpressionStatement	"r_debug_execute ( core -> dbg , acode -> bytes , acode -> len , 0 )"	5169:4:147287:147343	4220745	1	True				
ANR	4224890	CallExpression	"r_debug_execute ( core -> dbg , acode -> bytes , acode -> len , 0 )"		4220745	0					
ANR	4224891	Callee	r_debug_execute		4220745	0					
ANR	4224892	Identifier	r_debug_execute		4220745	0					
ANR	4224893	ArgumentList	core -> dbg		4220745	1					
ANR	4224894	Argument	core -> dbg		4220745	0					
ANR	4224895	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224896	Identifier	core		4220745	0					
ANR	4224897	Identifier	dbg		4220745	1					
ANR	4224898	Argument	acode -> bytes		4220745	1					
ANR	4224899	PtrMemberAccess	acode -> bytes		4220745	0					
ANR	4224900	Identifier	acode		4220745	0					
ANR	4224901	Identifier	bytes		4220745	1					
ANR	4224902	Argument	acode -> len		4220745	2					
ANR	4224903	PtrMemberAccess	acode -> len		4220745	0					
ANR	4224904	Identifier	acode		4220745	0					
ANR	4224905	Identifier	len		4220745	1					
ANR	4224906	Argument	0		4220745	3					
ANR	4224907	PrimaryExpression	0		4220745	0					
ANR	4224908	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	5170:4:147349:147381	4220745	2	True				
ANR	4224909	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		4220745	0					
ANR	4224910	Callee	r_reg_arena_pop		4220745	0					
ANR	4224911	Identifier	r_reg_arena_pop		4220745	0					
ANR	4224912	ArgumentList	core -> dbg -> reg		4220745	1					
ANR	4224913	Argument	core -> dbg -> reg		4220745	0					
ANR	4224914	PtrMemberAccess	core -> dbg -> reg		4220745	0					
ANR	4224915	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4224916	Identifier	core		4220745	0					
ANR	4224917	Identifier	dbg		4220745	1					
ANR	4224918	Identifier	reg		4220745	1					
ANR	4224919	ExpressionStatement	r_asm_code_free ( acode )	5172:3:147391:147414	4220745	4	True				
ANR	4224920	CallExpression	r_asm_code_free ( acode )		4220745	0					
ANR	4224921	Callee	r_asm_code_free		4220745	0					
ANR	4224922	Identifier	r_asm_code_free		4220745	0					
ANR	4224923	ArgumentList	acode		4220745	1					
ANR	4224924	Argument	acode		4220745	0					
ANR	4224925	Identifier	acode		4220745	0					
ANR	4224926	BreakStatement	break ;	5173:3:147419:147424	4220745	5	True				
ANR	4224927	Label	case 'e' :	5175:2:147432:147440	4220745	4	True				
ANR	4224928	CompoundStatement		653:3:19010:19049	4220745	5					
ANR	4224929	IdentifierDeclStatement	REgg * egg = core -> egg ;	5176:3:147456:147477	4220745	0	True				
ANR	4224930	IdentifierDecl	* egg = core -> egg		4220745	0					
ANR	4224931	IdentifierDeclType	REgg *		4220745	0					
ANR	4224932	Identifier	egg		4220745	1					
ANR	4224933	AssignmentExpression	* egg = core -> egg		4220745	2		=			
ANR	4224934	Identifier	egg		4220745	0					
ANR	4224935	PtrMemberAccess	core -> egg		4220745	1					
ANR	4224936	Identifier	core		4220745	0					
ANR	4224937	Identifier	egg		4220745	1					
ANR	4224938	IdentifierDeclStatement	RBuffer * b ;	5177:3:147482:147492	4220745	1	True				
ANR	4224939	IdentifierDecl	* b		4220745	0					
ANR	4224940	IdentifierDeclType	RBuffer *		4220745	0					
ANR	4224941	Identifier	b		4220745	1					
ANR	4224942	IdentifierDeclStatement	"const char * asm_arch = r_config_get ( core -> config , ""asm.arch"" ) ;"	5178:3:147497:147559	4220745	2	True				
ANR	4224943	IdentifierDecl	"* asm_arch = r_config_get ( core -> config , ""asm.arch"" )"		4220745	0					
ANR	4224944	IdentifierDeclType	const char *		4220745	0					
ANR	4224945	Identifier	asm_arch		4220745	1					
ANR	4224946	AssignmentExpression	"* asm_arch = r_config_get ( core -> config , ""asm.arch"" )"		4220745	2		=			
ANR	4224947	Identifier	asm_arch		4220745	0					
ANR	4224948	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		4220745	1					
ANR	4224949	Callee	r_config_get		4220745	0					
ANR	4224950	Identifier	r_config_get		4220745	0					
ANR	4224951	ArgumentList	core -> config		4220745	1					
ANR	4224952	Argument	core -> config		4220745	0					
ANR	4224953	PtrMemberAccess	core -> config		4220745	0					
ANR	4224954	Identifier	core		4220745	0					
ANR	4224955	Identifier	config		4220745	1					
ANR	4224956	Argument	"""asm.arch"""		4220745	1					
ANR	4224957	PrimaryExpression	"""asm.arch"""		4220745	0					
ANR	4224958	IdentifierDeclStatement	"int asm_bits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	5179:3:147564:147620	4220745	3	True				
ANR	4224959	IdentifierDecl	"asm_bits = r_config_get_i ( core -> config , ""asm.bits"" )"		4220745	0					
ANR	4224960	IdentifierDeclType	int		4220745	0					
ANR	4224961	Identifier	asm_bits		4220745	1					
ANR	4224962	AssignmentExpression	"asm_bits = r_config_get_i ( core -> config , ""asm.bits"" )"		4220745	2		=			
ANR	4224963	Identifier	asm_bits		4220745	0					
ANR	4224964	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		4220745	1					
ANR	4224965	Callee	r_config_get_i		4220745	0					
ANR	4224966	Identifier	r_config_get_i		4220745	0					
ANR	4224967	ArgumentList	core -> config		4220745	1					
ANR	4224968	Argument	core -> config		4220745	0					
ANR	4224969	PtrMemberAccess	core -> config		4220745	0					
ANR	4224970	Identifier	core		4220745	0					
ANR	4224971	Identifier	config		4220745	1					
ANR	4224972	Argument	"""asm.bits"""		4220745	1					
ANR	4224973	PrimaryExpression	"""asm.bits"""		4220745	0					
ANR	4224974	IdentifierDeclStatement	"const char * asm_os = r_config_get ( core -> config , ""asm.os"" ) ;"	5180:3:147625:147683	4220745	4	True				
ANR	4224975	IdentifierDecl	"* asm_os = r_config_get ( core -> config , ""asm.os"" )"		4220745	0					
ANR	4224976	IdentifierDeclType	const char *		4220745	0					
ANR	4224977	Identifier	asm_os		4220745	1					
ANR	4224978	AssignmentExpression	"* asm_os = r_config_get ( core -> config , ""asm.os"" )"		4220745	2		=			
ANR	4224979	Identifier	asm_os		4220745	0					
ANR	4224980	CallExpression	"r_config_get ( core -> config , ""asm.os"" )"		4220745	1					
ANR	4224981	Callee	r_config_get		4220745	0					
ANR	4224982	Identifier	r_config_get		4220745	0					
ANR	4224983	ArgumentList	core -> config		4220745	1					
ANR	4224984	Argument	core -> config		4220745	0					
ANR	4224985	PtrMemberAccess	core -> config		4220745	0					
ANR	4224986	Identifier	core		4220745	0					
ANR	4224987	Identifier	config		4220745	1					
ANR	4224988	Argument	"""asm.os"""		4220745	1					
ANR	4224989	PrimaryExpression	"""asm.os"""		4220745	0					
ANR	4224990	ExpressionStatement	"r_egg_setup ( egg , asm_arch , asm_bits , 0 , asm_os )"	5181:3:147688:147736	4220745	5	True				
ANR	4224991	CallExpression	"r_egg_setup ( egg , asm_arch , asm_bits , 0 , asm_os )"		4220745	0					
ANR	4224992	Callee	r_egg_setup		4220745	0					
ANR	4224993	Identifier	r_egg_setup		4220745	0					
ANR	4224994	ArgumentList	egg		4220745	1					
ANR	4224995	Argument	egg		4220745	0					
ANR	4224996	Identifier	egg		4220745	0					
ANR	4224997	Argument	asm_arch		4220745	1					
ANR	4224998	Identifier	asm_arch		4220745	0					
ANR	4224999	Argument	asm_bits		4220745	2					
ANR	4225000	Identifier	asm_bits		4220745	0					
ANR	4225001	Argument	0		4220745	3					
ANR	4225002	PrimaryExpression	0		4220745	0					
ANR	4225003	Argument	asm_os		4220745	4					
ANR	4225004	Identifier	asm_os		4220745	0					
ANR	4225005	ExpressionStatement	r_egg_reset ( egg )	5182:3:147741:147758	4220745	6	True				
ANR	4225006	CallExpression	r_egg_reset ( egg )		4220745	0					
ANR	4225007	Callee	r_egg_reset		4220745	0					
ANR	4225008	Identifier	r_egg_reset		4220745	0					
ANR	4225009	ArgumentList	egg		4220745	1					
ANR	4225010	Argument	egg		4220745	0					
ANR	4225011	Identifier	egg		4220745	0					
ANR	4225012	ExpressionStatement	"r_egg_load ( egg , input + 1 , 0 )"	5183:3:147763:147793	4220745	7	True				
ANR	4225013	CallExpression	"r_egg_load ( egg , input + 1 , 0 )"		4220745	0					
ANR	4225014	Callee	r_egg_load		4220745	0					
ANR	4225015	Identifier	r_egg_load		4220745	0					
ANR	4225016	ArgumentList	egg		4220745	1					
ANR	4225017	Argument	egg		4220745	0					
ANR	4225018	Identifier	egg		4220745	0					
ANR	4225019	Argument	input + 1		4220745	1					
ANR	4225020	AdditiveExpression	input + 1		4220745	0		+			
ANR	4225021	Identifier	input		4220745	0					
ANR	4225022	PrimaryExpression	1		4220745	1					
ANR	4225023	Argument	0		4220745	2					
ANR	4225024	PrimaryExpression	0		4220745	0					
ANR	4225025	ExpressionStatement	r_egg_compile ( egg )	5184:3:147798:147817	4220745	8	True				
ANR	4225026	CallExpression	r_egg_compile ( egg )		4220745	0					
ANR	4225027	Callee	r_egg_compile		4220745	0					
ANR	4225028	Identifier	r_egg_compile		4220745	0					
ANR	4225029	ArgumentList	egg		4220745	1					
ANR	4225030	Argument	egg		4220745	0					
ANR	4225031	Identifier	egg		4220745	0					
ANR	4225032	ExpressionStatement	b = r_egg_get_bin ( egg )	5185:3:147822:147845	4220745	9	True				
ANR	4225033	AssignmentExpression	b = r_egg_get_bin ( egg )		4220745	0		=			
ANR	4225034	Identifier	b		4220745	0					
ANR	4225035	CallExpression	r_egg_get_bin ( egg )		4220745	1					
ANR	4225036	Callee	r_egg_get_bin		4220745	0					
ANR	4225037	Identifier	r_egg_get_bin		4220745	0					
ANR	4225038	ArgumentList	egg		4220745	1					
ANR	4225039	Argument	egg		4220745	0					
ANR	4225040	Identifier	egg		4220745	0					
ANR	4225041	ExpressionStatement	"r_asm_set_pc ( core -> assembler , core -> offset )"	5186:3:147850:147894	4220745	10	True				
ANR	4225042	CallExpression	"r_asm_set_pc ( core -> assembler , core -> offset )"		4220745	0					
ANR	4225043	Callee	r_asm_set_pc		4220745	0					
ANR	4225044	Identifier	r_asm_set_pc		4220745	0					
ANR	4225045	ArgumentList	core -> assembler		4220745	1					
ANR	4225046	Argument	core -> assembler		4220745	0					
ANR	4225047	PtrMemberAccess	core -> assembler		4220745	0					
ANR	4225048	Identifier	core		4220745	0					
ANR	4225049	Identifier	assembler		4220745	1					
ANR	4225050	Argument	core -> offset		4220745	1					
ANR	4225051	PtrMemberAccess	core -> offset		4220745	0					
ANR	4225052	Identifier	core		4220745	0					
ANR	4225053	Identifier	offset		4220745	1					
ANR	4225054	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	5187:3:147899:147932	4220745	11	True				
ANR	4225055	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		4220745	0					
ANR	4225056	Callee	r_reg_arena_push		4220745	0					
ANR	4225057	Identifier	r_reg_arena_push		4220745	0					
ANR	4225058	ArgumentList	core -> dbg -> reg		4220745	1					
ANR	4225059	Argument	core -> dbg -> reg		4220745	0					
ANR	4225060	PtrMemberAccess	core -> dbg -> reg		4220745	0					
ANR	4225061	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225062	Identifier	core		4220745	0					
ANR	4225063	Identifier	dbg		4220745	1					
ANR	4225064	Identifier	reg		4220745	1					
ANR	4225065	IdentifierDeclStatement	ut64 tmpsz ;	5188:3:147937:147947	4220745	12	True				
ANR	4225066	IdentifierDecl	tmpsz		4220745	0					
ANR	4225067	IdentifierDeclType	ut64		4220745	0					
ANR	4225068	Identifier	tmpsz		4220745	1					
ANR	4225069	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( b , & tmpsz ) ;"	5189:3:147952:147991	4220745	13	True				
ANR	4225070	IdentifierDecl	"* tmp = r_buf_data ( b , & tmpsz )"		4220745	0					
ANR	4225071	IdentifierDeclType	const ut8 *		4220745	0					
ANR	4225072	Identifier	tmp		4220745	1					
ANR	4225073	AssignmentExpression	"* tmp = r_buf_data ( b , & tmpsz )"		4220745	2		=			
ANR	4225074	Identifier	tmp		4220745	0					
ANR	4225075	CallExpression	"r_buf_data ( b , & tmpsz )"		4220745	1					
ANR	4225076	Callee	r_buf_data		4220745	0					
ANR	4225077	Identifier	r_buf_data		4220745	0					
ANR	4225078	ArgumentList	b		4220745	1					
ANR	4225079	Argument	b		4220745	0					
ANR	4225080	Identifier	b		4220745	0					
ANR	4225081	Argument	& tmpsz		4220745	1					
ANR	4225082	UnaryOperationExpression	& tmpsz		4220745	0					
ANR	4225083	UnaryOperator	&		4220745	0					
ANR	4225084	Identifier	tmpsz		4220745	1					
ANR	4225085	ExpressionStatement	"r_debug_execute ( core -> dbg , tmp , tmpsz , 0 )"	5190:3:147996:148038	4220745	14	True				
ANR	4225086	CallExpression	"r_debug_execute ( core -> dbg , tmp , tmpsz , 0 )"		4220745	0					
ANR	4225087	Callee	r_debug_execute		4220745	0					
ANR	4225088	Identifier	r_debug_execute		4220745	0					
ANR	4225089	ArgumentList	core -> dbg		4220745	1					
ANR	4225090	Argument	core -> dbg		4220745	0					
ANR	4225091	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225092	Identifier	core		4220745	0					
ANR	4225093	Identifier	dbg		4220745	1					
ANR	4225094	Argument	tmp		4220745	1					
ANR	4225095	Identifier	tmp		4220745	0					
ANR	4225096	Argument	tmpsz		4220745	2					
ANR	4225097	Identifier	tmpsz		4220745	0					
ANR	4225098	Argument	0		4220745	3					
ANR	4225099	PrimaryExpression	0		4220745	0					
ANR	4225100	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	5191:3:148043:148075	4220745	15	True				
ANR	4225101	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		4220745	0					
ANR	4225102	Callee	r_reg_arena_pop		4220745	0					
ANR	4225103	Identifier	r_reg_arena_pop		4220745	0					
ANR	4225104	ArgumentList	core -> dbg -> reg		4220745	1					
ANR	4225105	Argument	core -> dbg -> reg		4220745	0					
ANR	4225106	PtrMemberAccess	core -> dbg -> reg		4220745	0					
ANR	4225107	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225108	Identifier	core		4220745	0					
ANR	4225109	Identifier	dbg		4220745	1					
ANR	4225110	Identifier	reg		4220745	1					
ANR	4225111	BreakStatement	break ;	5192:3:148080:148085	4220745	16	True				
ANR	4225112	Label	case 'r' :	5194:2:148093:148101	4220745	6	True				
ANR	4225113	ExpressionStatement	r_reg_arena_push ( core -> dbg -> reg )	5195:3:148115:148148	4220745	7	True				
ANR	4225114	CallExpression	r_reg_arena_push ( core -> dbg -> reg )		4220745	0					
ANR	4225115	Callee	r_reg_arena_push		4220745	0					
ANR	4225116	Identifier	r_reg_arena_push		4220745	0					
ANR	4225117	ArgumentList	core -> dbg -> reg		4220745	1					
ANR	4225118	Argument	core -> dbg -> reg		4220745	0					
ANR	4225119	PtrMemberAccess	core -> dbg -> reg		4220745	0					
ANR	4225120	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225121	Identifier	core		4220745	0					
ANR	4225122	Identifier	dbg		4220745	1					
ANR	4225123	Identifier	reg		4220745	1					
ANR	4225124	IfStatement	if ( input [ 2 ] == ' ' )		4220745	8					
ANR	4225125	Condition	input [ 2 ] == ' '	5196:7:148157:148171	4220745	0	True				
ANR	4225126	EqualityExpression	input [ 2 ] == ' '		4220745	0		==			
ANR	4225127	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4225128	Identifier	input		4220745	0					
ANR	4225129	PrimaryExpression	2		4220745	1					
ANR	4225130	PrimaryExpression	' '		4220745	1					
ANR	4225131	CompoundStatement		661:4:19238:19253	4220745	1					
ANR	4225132	IdentifierDeclStatement	ut8 bytes [ 4096 ] ;	5197:4:148180:148195	4220745	0	True				
ANR	4225133	IdentifierDecl	bytes [ 4096 ]		4220745	0					
ANR	4225134	IdentifierDeclType	ut8 [ 4096 ]		4220745	0					
ANR	4225135	Identifier	bytes		4220745	1					
ANR	4225136	PrimaryExpression	4096		4220745	2					
ANR	4225137	IfStatement	if ( strlen ( input + 2 ) < 4096 )		4220745	1					
ANR	4225138	Condition	strlen ( input + 2 ) < 4096	5198:8:148205:148229	4220745	0	True				
ANR	4225139	RelationalExpression	strlen ( input + 2 ) < 4096		4220745	0		<			
ANR	4225140	CallExpression	strlen ( input + 2 )		4220745	0					
ANR	4225141	Callee	strlen		4220745	0					
ANR	4225142	Identifier	strlen		4220745	0					
ANR	4225143	ArgumentList	input + 2		4220745	1					
ANR	4225144	Argument	input + 2		4220745	0					
ANR	4225145	AdditiveExpression	input + 2		4220745	0		+			
ANR	4225146	Identifier	input		4220745	0					
ANR	4225147	PrimaryExpression	2		4220745	1					
ANR	4225148	PrimaryExpression	4096		4220745	1					
ANR	4225149	CompoundStatement		663:5:19296:19351	4220745	1					
ANR	4225150	IdentifierDeclStatement	"int bytes_len = r_hex_str2bin ( input + 2 , bytes ) ;"	5199:5:148238:148293	4220745	0	True				
ANR	4225151	IdentifierDecl	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		4220745	0					
ANR	4225152	IdentifierDeclType	int		4220745	0					
ANR	4225153	Identifier	bytes_len		4220745	1					
ANR	4225154	AssignmentExpression	"bytes_len = r_hex_str2bin ( input + 2 , bytes )"		4220745	2		=			
ANR	4225155	Identifier	bytes_len		4220745	0					
ANR	4225156	CallExpression	"r_hex_str2bin ( input + 2 , bytes )"		4220745	1					
ANR	4225157	Callee	r_hex_str2bin		4220745	0					
ANR	4225158	Identifier	r_hex_str2bin		4220745	0					
ANR	4225159	ArgumentList	input + 2		4220745	1					
ANR	4225160	Argument	input + 2		4220745	0					
ANR	4225161	AdditiveExpression	input + 2		4220745	0		+			
ANR	4225162	Identifier	input		4220745	0					
ANR	4225163	PrimaryExpression	2		4220745	1					
ANR	4225164	Argument	bytes		4220745	1					
ANR	4225165	Identifier	bytes		4220745	0					
ANR	4225166	IfStatement	if ( bytes_len > 0 )		4220745	1					
ANR	4225167	Condition	bytes_len > 0	5201:9:148304:148316	4220745	0	True				
ANR	4225168	RelationalExpression	bytes_len > 0		4220745	0		>			
ANR	4225169	Identifier	bytes_len		4220745	0					
ANR	4225170	PrimaryExpression	0		4220745	1					
ANR	4225171	CompoundStatement		665:24:19377:19377	4220745	1					
ANR	4225172	ExpressionStatement	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"	5202:6:148327:148391	4220745	0	True				
ANR	4225173	CallExpression	"r_debug_execute ( core -> dbg , bytes , bytes_len , 0 )"		4220745	0					
ANR	4225174	Callee	r_debug_execute		4220745	0					
ANR	4225175	Identifier	r_debug_execute		4220745	0					
ANR	4225176	ArgumentList	core -> dbg		4220745	1					
ANR	4225177	Argument	core -> dbg		4220745	0					
ANR	4225178	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225179	Identifier	core		4220745	0					
ANR	4225180	Identifier	dbg		4220745	1					
ANR	4225181	Argument	bytes		4220745	1					
ANR	4225182	Identifier	bytes		4220745	0					
ANR	4225183	Argument	bytes_len		4220745	2					
ANR	4225184	Identifier	bytes_len		4220745	0					
ANR	4225185	Argument	0		4220745	3					
ANR	4225186	PrimaryExpression	0		4220745	0					
ANR	4225187	ElseStatement	else		4220745	0					
ANR	4225188	CompoundStatement		669:12:19463:19463	4220745	0					
ANR	4225189	ExpressionStatement	"eprintf ( ""Invalid hexpairs\\n"" )"	5206:6:148413:148443	4220745	0	True				
ANR	4225190	CallExpression	"eprintf ( ""Invalid hexpairs\\n"" )"		4220745	0					
ANR	4225191	Callee	eprintf		4220745	0					
ANR	4225192	Identifier	eprintf		4220745	0					
ANR	4225193	ArgumentList	"""Invalid hexpairs\\n"""		4220745	1					
ANR	4225194	Argument	"""Invalid hexpairs\\n"""		4220745	0					
ANR	4225195	PrimaryExpression	"""Invalid hexpairs\\n"""		4220745	0					
ANR	4225196	ElseStatement	else		4220745	0					
ANR	4225197	ExpressionStatement	"eprintf ( ""Injection opcodes so long\\n"" )"	5208:11:148463:148502	4220745	0	True				
ANR	4225198	CallExpression	"eprintf ( ""Injection opcodes so long\\n"" )"		4220745	0					
ANR	4225199	Callee	eprintf		4220745	0					
ANR	4225200	Identifier	eprintf		4220745	0					
ANR	4225201	ArgumentList	"""Injection opcodes so long\\n"""		4220745	1					
ANR	4225202	Argument	"""Injection opcodes so long\\n"""		4220745	0					
ANR	4225203	PrimaryExpression	"""Injection opcodes so long\\n"""		4220745	0					
ANR	4225204	ExpressionStatement	r_reg_arena_pop ( core -> dbg -> reg )	5210:3:148512:148544	4220745	9	True				
ANR	4225205	CallExpression	r_reg_arena_pop ( core -> dbg -> reg )		4220745	0					
ANR	4225206	Callee	r_reg_arena_pop		4220745	0					
ANR	4225207	Identifier	r_reg_arena_pop		4220745	0					
ANR	4225208	ArgumentList	core -> dbg -> reg		4220745	1					
ANR	4225209	Argument	core -> dbg -> reg		4220745	0					
ANR	4225210	PtrMemberAccess	core -> dbg -> reg		4220745	0					
ANR	4225211	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225212	Identifier	core		4220745	0					
ANR	4225213	Identifier	dbg		4220745	1					
ANR	4225214	Identifier	reg		4220745	1					
ANR	4225215	BreakStatement	break ;	5211:3:148549:148554	4220745	10	True				
ANR	4225216	Label	case 's' :	5212:2:148558:148566	4220745	11	True				
ANR	4225217	IfStatement	if ( input [ 2 ] )		4220745	12					
ANR	4225218	Condition	input [ 2 ]	5213:7:148584:148591	4220745	0	True				
ANR	4225219	ArrayIndexing	input [ 2 ]		4220745	0					
ANR	4225220	Identifier	input		4220745	0					
ANR	4225221	PrimaryExpression	2		4220745	1					
ANR	4225222	CompoundStatement		678:4:19658:19667	4220745	1					
ANR	4225223	IdentifierDeclStatement	char * str ;	5214:4:148600:148609	4220745	0	True				
ANR	4225224	IdentifierDecl	* str		4220745	0					
ANR	4225225	IdentifierDeclType	char *		4220745	0					
ANR	4225226	Identifier	str		4220745	1					
ANR	4225227	ExpressionStatement	r_cons_push ( )	5215:4:148615:148629	4220745	1	True				
ANR	4225228	CallExpression	r_cons_push ( )		4220745	0					
ANR	4225229	Callee	r_cons_push		4220745	0					
ANR	4225230	Identifier	r_cons_push		4220745	0					
ANR	4225231	ArgumentList			4220745	1					
ANR	4225232	ExpressionStatement	"str = r_core_cmd_str ( core , sdb_fmt ( ""gs %s"" , input + 2 ) )"	5216:4:148635:148692	4220745	2	True				
ANR	4225233	AssignmentExpression	"str = r_core_cmd_str ( core , sdb_fmt ( ""gs %s"" , input + 2 ) )"		4220745	0		=			
ANR	4225234	Identifier	str		4220745	0					
ANR	4225235	CallExpression	"r_core_cmd_str ( core , sdb_fmt ( ""gs %s"" , input + 2 ) )"		4220745	1					
ANR	4225236	Callee	r_core_cmd_str		4220745	0					
ANR	4225237	Identifier	r_core_cmd_str		4220745	0					
ANR	4225238	ArgumentList	core		4220745	1					
ANR	4225239	Argument	core		4220745	0					
ANR	4225240	Identifier	core		4220745	0					
ANR	4225241	Argument	"sdb_fmt ( ""gs %s"" , input + 2 )"		4220745	1					
ANR	4225242	CallExpression	"sdb_fmt ( ""gs %s"" , input + 2 )"		4220745	0					
ANR	4225243	Callee	sdb_fmt		4220745	0					
ANR	4225244	Identifier	sdb_fmt		4220745	0					
ANR	4225245	ArgumentList	"""gs %s"""		4220745	1					
ANR	4225246	Argument	"""gs %s"""		4220745	0					
ANR	4225247	PrimaryExpression	"""gs %s"""		4220745	0					
ANR	4225248	Argument	input + 2		4220745	1					
ANR	4225249	AdditiveExpression	input + 2		4220745	0		+			
ANR	4225250	Identifier	input		4220745	0					
ANR	4225251	PrimaryExpression	2		4220745	1					
ANR	4225252	ExpressionStatement	r_cons_pop ( )	5217:4:148698:148711	4220745	3	True				
ANR	4225253	CallExpression	r_cons_pop ( )		4220745	0					
ANR	4225254	Callee	r_cons_pop		4220745	0					
ANR	4225255	Identifier	r_cons_pop		4220745	0					
ANR	4225256	ArgumentList			4220745	1					
ANR	4225257	ExpressionStatement	"r_core_cmdf ( core , ""dx %s"" , str )"	5218:4:148717:148749	4220745	4	True				
ANR	4225258	CallExpression	"r_core_cmdf ( core , ""dx %s"" , str )"		4220745	0					
ANR	4225259	Callee	r_core_cmdf		4220745	0					
ANR	4225260	Identifier	r_core_cmdf		4220745	0					
ANR	4225261	ArgumentList	core		4220745	1					
ANR	4225262	Argument	core		4220745	0					
ANR	4225263	Identifier	core		4220745	0					
ANR	4225264	Argument	"""dx %s"""		4220745	1					
ANR	4225265	PrimaryExpression	"""dx %s"""		4220745	0					
ANR	4225266	Argument	str		4220745	2					
ANR	4225267	Identifier	str		4220745	0					
ANR	4225268	ExpressionStatement	free ( str )	5219:4:148779:148789	4220745	5	True				
ANR	4225269	CallExpression	free ( str )		4220745	0					
ANR	4225270	Callee	free		4220745	0					
ANR	4225271	Identifier	free		4220745	0					
ANR	4225272	ArgumentList	str		4220745	1					
ANR	4225273	Argument	str		4220745	0					
ANR	4225274	Identifier	str		4220745	0					
ANR	4225275	ElseStatement	else		4220745	0					
ANR	4225276	CompoundStatement		684:10:19859:19859	4220745	0					
ANR	4225277	ExpressionStatement	"eprintf ( ""Missing parameter used in gs by dxs\\n"" )"	5221:4:148807:148856	4220745	0	True				
ANR	4225278	CallExpression	"eprintf ( ""Missing parameter used in gs by dxs\\n"" )"		4220745	0					
ANR	4225279	Callee	eprintf		4220745	0					
ANR	4225280	Identifier	eprintf		4220745	0					
ANR	4225281	ArgumentList	"""Missing parameter used in gs by dxs\\n"""		4220745	1					
ANR	4225282	Argument	"""Missing parameter used in gs by dxs\\n"""		4220745	0					
ANR	4225283	PrimaryExpression	"""Missing parameter used in gs by dxs\\n"""		4220745	0					
ANR	4225284	BreakStatement	break ;	5223:3:148866:148871	4220745	13	True				
ANR	4225285	Label	case '?' :	5224:2:148875:148883	4220745	14	True				
ANR	4225286	Label	default :	5225:2:148896:148903	4220745	15	True				
ANR	4225287	Identifier	default		4220745	0					
ANR	4225288	ExpressionStatement	"r_core_cmd_help ( core , help_msg_dx )"	5226:3:148908:148943	4220745	16	True				
ANR	4225289	CallExpression	"r_core_cmd_help ( core , help_msg_dx )"		4220745	0					
ANR	4225290	Callee	r_core_cmd_help		4220745	0					
ANR	4225291	Identifier	r_core_cmd_help		4220745	0					
ANR	4225292	ArgumentList	core		4220745	1					
ANR	4225293	Argument	core		4220745	0					
ANR	4225294	Identifier	core		4220745	0					
ANR	4225295	Argument	help_msg_dx		4220745	1					
ANR	4225296	Identifier	help_msg_dx		4220745	0					
ANR	4225297	BreakStatement	break ;	5227:3:148948:148953	4220745	17	True				
ANR	4225298	BreakStatement	break ;	5229:2:148961:148966	4220745	58	True				
ANR	4225299	Label	case '?' :	5230:1:148969:148977	4220745	59	True				
ANR	4225300	Label	default :	5231:1:148988:148995	4220745	60	True				
ANR	4225301	Identifier	default		4220745	0					
ANR	4225302	ExpressionStatement	"r_core_cmd_help ( core , help_msg_d )"	5232:2:148999:149033	4220745	61	True				
ANR	4225303	CallExpression	"r_core_cmd_help ( core , help_msg_d )"		4220745	0					
ANR	4225304	Callee	r_core_cmd_help		4220745	0					
ANR	4225305	Identifier	r_core_cmd_help		4220745	0					
ANR	4225306	ArgumentList	core		4220745	1					
ANR	4225307	Argument	core		4220745	0					
ANR	4225308	Identifier	core		4220745	0					
ANR	4225309	Argument	help_msg_d		4220745	1					
ANR	4225310	Identifier	help_msg_d		4220745	0					
ANR	4225311	BreakStatement	break ;	5233:2:149037:149042	4220745	62	True				
ANR	4225312	IfStatement	if ( follow > 0 )		4220745	12					
ANR	4225313	Condition	follow > 0	5235:5:149052:149061	4220745	0	True				
ANR	4225314	RelationalExpression	follow > 0		4220745	0		>			
ANR	4225315	Identifier	follow		4220745	0					
ANR	4225316	PrimaryExpression	0		4220745	1					
ANR	4225317	CompoundStatement		700:2:20126:20169	4220745	1					
ANR	4225318	IdentifierDeclStatement	"ut64 pc = r_debug_reg_get ( core -> dbg , ""PC"" ) ;"	5236:2:149068:149111	4220745	0	True				
ANR	4225319	IdentifierDecl	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4220745	0					
ANR	4225320	IdentifierDeclType	ut64		4220745	0					
ANR	4225321	Identifier	pc		4220745	1					
ANR	4225322	AssignmentExpression	"pc = r_debug_reg_get ( core -> dbg , ""PC"" )"		4220745	2		=			
ANR	4225323	Identifier	pc		4220745	0					
ANR	4225324	CallExpression	"r_debug_reg_get ( core -> dbg , ""PC"" )"		4220745	1					
ANR	4225325	Callee	r_debug_reg_get		4220745	0					
ANR	4225326	Identifier	r_debug_reg_get		4220745	0					
ANR	4225327	ArgumentList	core -> dbg		4220745	1					
ANR	4225328	Argument	core -> dbg		4220745	0					
ANR	4225329	PtrMemberAccess	core -> dbg		4220745	0					
ANR	4225330	Identifier	core		4220745	0					
ANR	4225331	Identifier	dbg		4220745	1					
ANR	4225332	Argument	"""PC"""		4220745	1					
ANR	4225333	PrimaryExpression	"""PC"""		4220745	0					
ANR	4225334	IfStatement	if ( ( pc < core -> offset ) || ( pc > ( core -> offset + follow ) ) )		4220745	1					
ANR	4225335	Condition	( pc < core -> offset ) || ( pc > ( core -> offset + follow ) )	5237:6:149119:149171	4220745	0	True				
ANR	4225336	OrExpression	( pc < core -> offset ) || ( pc > ( core -> offset + follow ) )		4220745	0		||			
ANR	4225337	RelationalExpression	pc < core -> offset		4220745	0		<			
ANR	4225338	Identifier	pc		4220745	0					
ANR	4225339	PtrMemberAccess	core -> offset		4220745	1					
ANR	4225340	Identifier	core		4220745	0					
ANR	4225341	Identifier	offset		4220745	1					
ANR	4225342	RelationalExpression	pc > ( core -> offset + follow )		4220745	1		>			
ANR	4225343	Identifier	pc		4220745	0					
ANR	4225344	AdditiveExpression	core -> offset + follow		4220745	1		+			
ANR	4225345	PtrMemberAccess	core -> offset		4220745	0					
ANR	4225346	Identifier	core		4220745	0					
ANR	4225347	Identifier	offset		4220745	1					
ANR	4225348	Identifier	follow		4220745	1					
ANR	4225349	CompoundStatement		701:61:20232:20232	4220745	1					
ANR	4225350	ExpressionStatement	"r_core_cmd0 ( core , ""sr PC"" )"	5238:3:149179:149206	4220745	0	True				
ANR	4225351	CallExpression	"r_core_cmd0 ( core , ""sr PC"" )"		4220745	0					
ANR	4225352	Callee	r_core_cmd0		4220745	0					
ANR	4225353	Identifier	r_core_cmd0		4220745	0					
ANR	4225354	ArgumentList	core		4220745	1					
ANR	4225355	Argument	core		4220745	0					
ANR	4225356	Identifier	core		4220745	0					
ANR	4225357	Argument	"""sr PC"""		4220745	1					
ANR	4225358	PrimaryExpression	"""sr PC"""		4220745	0					
ANR	4225359	ReturnStatement	return 0 ;	5241:1:149216:149224	4220745	13	True				
ANR	4225360	PrimaryExpression	0		4220745	0					
ANR	4225361	ReturnType	static int		4220745	1					
ANR	4225362	Identifier	cmd_debug		4220745	2					
ANR	4225363	ParameterList	"void * data , const char * input"		4220745	3					
ANR	4225364	Parameter	void * data	4537:21:128910:128919	4220745	0	True				
ANR	4225365	ParameterType	void *		4220745	0					
ANR	4225366	Identifier	data		4220745	1					
ANR	4225367	Parameter	const char * input	4537:33:128922:128938	4220745	1	True				
ANR	4225368	ParameterType	const char *		4220745	0					
ANR	4225369	Identifier	input		4220745	1					
ANR	4225370	CFGEntryNode	ENTRY		4220745		True				
ANR	4225371	CFGExitNode	EXIT		4220745		True				
ANR	4225372	Symbol	t -> size		4220745						
ANR	4225373	Symbol	romem		4220745						
ANR	4225374	Symbol	egg		4220745						
ANR	4225375	Symbol	op -> mnemonic		4220745						
ANR	4225376	Symbol	r_debug_reg_get		4220745						
ANR	4225377	Symbol	* input		4220745						
ANR	4225378	Symbol	core -> offset		4220745						
ANR	4225379	Symbol	strchr		4220745						
ANR	4225380	Symbol	* core -> dbg -> h		4220745						
ANR	4225381	Symbol	addrsize		4220745						
ANR	4225382	Symbol	r_buf_new_file		4220745						
ANR	4225383	Symbol	strncmp		4220745						
ANR	4225384	Symbol	core -> egg		4220745						
ANR	4225385	Symbol	len		4220745						
ANR	4225386	Symbol	stats		4220745						
ANR	4225387	Symbol	* core -> anal -> esil		4220745						
ANR	4225388	Symbol	core -> io -> debug		4220745						
ANR	4225389	Symbol	tmp		4220745						
ANR	4225390	Symbol	t -> times		4220745						
ANR	4225391	Symbol	& tmpsz		4220745						
ANR	4225392	Symbol	core -> anal -> esil		4220745						
ANR	4225393	Symbol	r_core_op_anal		4220745						
ANR	4225394	Symbol	* tp		4220745						
ANR	4225395	Symbol	r_debug_desc_write		4220745						
ANR	4225396	Symbol	r_debug_trace_add		4220745						
ANR	4225397	Symbol	asm_os		4220745						
ANR	4225398	Symbol	r_debug_trace_new		4220745						
ANR	4225399	Symbol	iter		4220745						
ANR	4225400	Symbol	core -> dbg -> h		4220745						
ANR	4225401	Symbol	al		4220745						
ANR	4225402	Symbol	tmpsz		4220745						
ANR	4225403	Symbol	iotrap		4220745						
ANR	4225404	Symbol	get_corefile_name		4220745						
ANR	4225405	Symbol	str		4220745						
ANR	4225406	Symbol	input		4220745						
ANR	4225407	Symbol	* * * core		4220745						
ANR	4225408	Symbol	r_debug_desc_read		4220745						
ANR	4225409	Symbol	* rdi -> exe		4220745						
ANR	4225410	Symbol	stop		4220745						
ANR	4225411	Symbol	R_ANAL_OP_MASK_DISASM		4220745						
ANR	4225412	Symbol	* trace		4220745						
ANR	4225413	Symbol	r_config_get_i		4220745						
ANR	4225414	Symbol	escaped_str		4220745						
ANR	4225415	Symbol	r_str_trim_ro		4220745						
ANR	4225416	Symbol	r_diff_buffers_to_string		4220745						
ANR	4225417	Symbol	rdi -> exe		4220745						
ANR	4225418	Symbol	* core -> dbg		4220745						
ANR	4225419	Symbol	r_debug_info		4220745						
ANR	4225420	Symbol	getFileData		4220745						
ANR	4225421	Symbol	* core		4220745						
ANR	4225422	Symbol	core -> dbg -> reason . signum		4220745						
ANR	4225423	Symbol	r_config_get		4220745						
ANR	4225424	Symbol	help_msg_d		4220745						
ANR	4225425	Symbol	core -> assembler		4220745						
ANR	4225426	Symbol	rdi -> gid		4220745						
ANR	4225427	Symbol	bl		4220745						
ANR	4225428	Symbol	acode		4220745						
ANR	4225429	Symbol	core -> anal		4220745						
ANR	4225430	Symbol	O_RDWR		4220745						
ANR	4225431	Symbol	r_cons_is_breaked		4220745						
ANR	4225432	Symbol	min		4220745						
ANR	4225433	Symbol	r_debug_desc_seek		4220745						
ANR	4225434	Symbol	core -> io		4220745						
ANR	4225435	Symbol	core -> anal -> esil -> db_trace		4220745						
ANR	4225436	Symbol	arg		4220745						
ANR	4225437	Symbol	X		4220745						
ANR	4225438	Symbol	Y		4220745						
ANR	4225439	Symbol	* str		4220745						
ANR	4225440	Symbol	r_hex_str2bin		4220745						
ANR	4225441	Symbol	cmd_anal_reg		4220745						
ANR	4225442	Symbol	atoi		4220745						
ANR	4225443	Symbol	a		4220745						
ANR	4225444	Symbol	sdb_new0		4220745						
ANR	4225445	Symbol	t -> count		4220745						
ANR	4225446	Symbol	b		4220745						
ANR	4225447	Symbol	newfd		4220745						
ANR	4225448	Symbol	d		4220745						
ANR	4225449	Symbol	acode -> bytes		4220745						
ANR	4225450	Symbol	r_debug_trace_get		4220745						
ANR	4225451	Symbol	r_core_syscallf		4220745						
ANR	4225452	Symbol	asm_bits		4220745						
ANR	4225453	Symbol	n		4220745						
ANR	4225454	Symbol	off		4220745						
ANR	4225455	Symbol	buf		4220745						
ANR	4225456	Symbol	core -> dbg -> reason		4220745						
ANR	4225457	Symbol	r		4220745						
ANR	4225458	Symbol	s		4220745						
ANR	4225459	Symbol	* core -> anal		4220745						
ANR	4225460	Symbol	t		4220745						
ANR	4225461	Symbol	rdi		4220745						
ANR	4225462	Symbol	core -> dbg -> reg		4220745						
ANR	4225463	Symbol	static_debug_stop		4220745						
ANR	4225464	Symbol	r_anal_esil_new		4220745						
ANR	4225465	Symbol	r_debug_stop_reason		4220745						
ANR	4225466	Symbol	tp		4220745						
ANR	4225467	Symbol	cmd_debug_step		4220745						
ANR	4225468	Symbol	core -> dbg -> pid		4220745						
ANR	4225469	Symbol	* rdi -> kernel_stack		4220745						
ANR	4225470	Symbol	r_core_cmd_str		4220745						
ANR	4225471	Symbol	data		4220745						
ANR	4225472	Symbol	* op		4220745						
ANR	4225473	Symbol	stacksize		4220745						
ANR	4225474	Symbol	help_msg_dd		4220745						
ANR	4225475	Symbol	O_CREAT		4220745						
ANR	4225476	Symbol	* arg2 ++		4220745						
ANR	4225477	Symbol	* core -> dbg -> trace		4220745						
ANR	4225478	Symbol	pid		4220745						
ANR	4225479	Symbol	r_core_anal_op		4220745						
ANR	4225480	Symbol	r_str_trim_dup		4220745						
ANR	4225481	Symbol	acode -> len		4220745						
ANR	4225482	Symbol	bytes_len		4220745						
ANR	4225483	Symbol	* rdi -> cwd		4220745						
ANR	4225484	Symbol	strlen		4220745						
ANR	4225485	Symbol	core -> dbg -> h -> gcore		4220745						
ANR	4225486	Symbol	r_asm_massemble		4220745						
ANR	4225487	Symbol	* * core -> anal		4220745						
ANR	4225488	Symbol	r_num_get		4220745						
ANR	4225489	Symbol	core -> num		4220745						
ANR	4225490	Symbol	rdi -> cwd		4220745						
ANR	4225491	Symbol	help_msg_dL		4220745						
ANR	4225492	Symbol	strcmp		4220745						
ANR	4225493	Symbol	* rdi -> cmdline		4220745						
ANR	4225494	Symbol	res		4220745						
ANR	4225495	Symbol	NULL		4220745						
ANR	4225496	Symbol	count		4220745						
ANR	4225497	Symbol	sdb_querys		4220745						
ANR	4225498	Symbol	r_signal_to_string		4220745						
ANR	4225499	Symbol	r_str_escape		4220745						
ANR	4225500	Symbol	core		4220745						
ANR	4225501	Symbol	arg2		4220745						
ANR	4225502	Symbol	rdi -> pid		4220745						
ANR	4225503	Symbol	corefile		4220745						
ANR	4225504	Symbol	rdi -> usr		4220745						
ANR	4225505	Symbol	r_egg_get_bin		4220745						
ANR	4225506	Symbol	core -> dbg -> reason . bp_addr		4220745						
ANR	4225507	Symbol	core -> print		4220745						
ANR	4225508	Symbol	idx		4220745						
ANR	4225509	Symbol	asm_arch		4220745						
ANR	4225510	Symbol	fd		4220745						
ANR	4225511	Symbol	* acode		4220745						
ANR	4225512	Symbol	R_ANAL_OP_MASK_ESIL		4220745						
ANR	4225513	Symbol	rdi -> tid		4220745						
ANR	4225514	Symbol	dst		4220745						
ANR	4225515	Symbol	r_sandbox_enable		4220745						
ANR	4225516	Symbol	trace -> addr		4220745						
ANR	4225517	Symbol	r_diff_new		4220745						
ANR	4225518	Symbol	r_str_split_list		4220745						
ANR	4225519	Symbol	* * rdi		4220745						
ANR	4225520	Symbol	rdi -> cmdline		4220745						
ANR	4225521	Symbol	R_ANAL_OP_MASK_BASIC		4220745						
ANR	4225522	Symbol	nonull		4220745						
ANR	4225523	Symbol	rdi -> kernel_stack		4220745						
ANR	4225524	Symbol	r_num_math		4220745						
ANR	4225525	Symbol	trace		4220745						
ANR	4225526	Symbol	core -> dbg -> trace		4220745						
ANR	4225527	Symbol	help_msg_dts		4220745						
ANR	4225528	Symbol	addr		4220745						
ANR	4225529	Symbol	UT64_MAX		4220745						
ANR	4225530	Symbol	sdb_fmt		4220745						
ANR	4225531	Symbol	* * core		4220745						
ANR	4225532	Symbol	r_buf_data		4220745						
ANR	4225533	Symbol	core -> config		4220745						
ANR	4225534	Symbol	core -> dbg -> reason . type		4220745						
ANR	4225535	Symbol	op		4220745						
ANR	4225536	Symbol	trace -> count		4220745						
ANR	4225537	Symbol	r_str_bool		4220745						
ANR	4225538	Symbol	* rdi		4220745						
ANR	4225539	Symbol	core -> dbg -> tree		4220745						
ANR	4225540	Symbol	help_msg_dte		4220745						
ANR	4225541	Symbol	core -> dbg -> trace -> tag		4220745						
ANR	4225542	Symbol	help_msg_dx		4220745						
ANR	4225543	Symbol	follow		4220745						
ANR	4225544	Symbol	r_debug_reason_to_string		4220745						
ANR	4225545	Symbol	tp -> count		4220745						
ANR	4225546	Symbol	ptr		4220745						
ANR	4225547	Symbol	args		4220745						
ANR	4225548	Symbol	* core -> io		4220745						
ANR	4225549	Symbol	uni		4220745						
ANR	4225550	Symbol	r_debug_kill		4220745						
ANR	4225551	Symbol	pc		4220745						
ANR	4225552	Symbol	help_msg_dt		4220745						
ANR	4225553	Symbol	core -> dbg -> reason . tid		4220745						
ANR	4225554	Symbol	bytes		4220745						
ANR	4225555	Symbol	help_msg_di		4220745						
ANR	4225556	Symbol	op -> size		4220745						
ANR	4225557	Symbol	strdup		4220745						
ANR	4225558	Symbol	r_debug_desc_dup		4220745						
ANR	4225559	Symbol	rdi -> uid		4220745						
ANR	4225560	Symbol	* t		4220745						
ANR	4225561	Symbol	help_msg_do		4220745						
ANR	4225562	Symbol	core -> dbg		4220745						
ANR	4225563	Symbol	* * core -> dbg		4220745						
