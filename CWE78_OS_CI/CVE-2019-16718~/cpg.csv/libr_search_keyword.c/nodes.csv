command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5052055	File	data/converged/CVE-2019-16718~_radare2/libr_search_keyword.c								
ANR	5052056	Function	ignoreMask	5:0:76:211							
ANR	5052057	FunctionDef	"ignoreMask (const ut8 * bm , int len)"		5052056	0					
ANR	5052058	CompoundStatement		5:46:122:211	5052056	0					
ANR	5052059	IdentifierDeclStatement	int i ;	6:1:125:130	5052056	0	True				
ANR	5052060	IdentifierDecl	i		5052056	0					
ANR	5052061	IdentifierDeclType	int		5052056	0					
ANR	5052062	Identifier	i		5052056	1					
ANR	5052063	ForStatement	for ( i = 0 ; i < len ; i ++ )		5052056	1					
ANR	5052064	ForInit	i = 0 ;	7:6:138:141	5052056	0	True				
ANR	5052065	AssignmentExpression	i = 0		5052056	0		=			
ANR	5052066	Identifier	i		5052056	0					
ANR	5052067	PrimaryExpression	0		5052056	1					
ANR	5052068	Condition	i < len	7:11:143:147	5052056	1	True				
ANR	5052069	RelationalExpression	i < len		5052056	0		<			
ANR	5052070	Identifier	i		5052056	0					
ANR	5052071	Identifier	len		5052056	1					
ANR	5052072	PostIncDecOperationExpression	i ++	7:18:150:152	5052056	2	True				
ANR	5052073	Identifier	i		5052056	0					
ANR	5052074	IncDec	++		5052056	1					
ANR	5052075	CompoundStatement		3:23:32:32	5052056	3					
ANR	5052076	IfStatement	if ( bm [ i ] != 0xff )		5052056	0					
ANR	5052077	Condition	bm [ i ] != 0xff	8:6:163:175	5052056	0	True				
ANR	5052078	EqualityExpression	bm [ i ] != 0xff		5052056	0		!=			
ANR	5052079	ArrayIndexing	bm [ i ]		5052056	0					
ANR	5052080	Identifier	bm		5052056	0					
ANR	5052081	Identifier	i		5052056	1					
ANR	5052082	PrimaryExpression	0xff		5052056	1					
ANR	5052083	CompoundStatement		4:21:55:55	5052056	1					
ANR	5052084	ReturnStatement	return 0 ;	9:3:183:191	5052056	0	True				
ANR	5052085	PrimaryExpression	0		5052056	0					
ANR	5052086	ReturnStatement	return 1 ;	12:1:201:209	5052056	2	True				
ANR	5052087	PrimaryExpression	1		5052056	0					
ANR	5052088	ReturnType	static int		5052056	1					
ANR	5052089	Identifier	ignoreMask		5052056	2					
ANR	5052090	ParameterList	"const ut8 * bm , int len"		5052056	3					
ANR	5052091	Parameter	const ut8 * bm	5:22:98:110	5052056	0	True				
ANR	5052092	ParameterType	const ut8 *		5052056	0					
ANR	5052093	Identifier	bm		5052056	1					
ANR	5052094	Parameter	int len	5:37:113:119	5052056	1	True				
ANR	5052095	ParameterType	int		5052056	0					
ANR	5052096	Identifier	len		5052056	1					
ANR	5052097	CFGEntryNode	ENTRY		5052056		True				
ANR	5052098	CFGExitNode	EXIT		5052056		True				
ANR	5052099	Symbol	* bm		5052056						
ANR	5052100	Symbol	* i		5052056						
ANR	5052101	Symbol	len		5052056						
ANR	5052102	Symbol	i		5052056						
ANR	5052103	Symbol	bm		5052056						
ANR	5052104	Function	r_search_keyword_new	15:0:214:1032							
ANR	5052105	FunctionDef	"r_search_keyword_new (const ut8 * kwbuf , int kwlen , const ut8 * bmbuf , int bmlen , const char * data)"		5052104	0					
ANR	5052106	CompoundStatement		15:119:333:1032	5052104	0					
ANR	5052107	IdentifierDeclStatement	RSearchKeyword * kw ;	16:1:336:354	5052104	0	True				
ANR	5052108	IdentifierDecl	* kw		5052104	0					
ANR	5052109	IdentifierDeclType	RSearchKeyword *		5052104	0					
ANR	5052110	Identifier	kw		5052104	1					
ANR	5052111	IfStatement	if ( kwlen < 1 || bmlen < 0 )		5052104	1					
ANR	5052112	Condition	kwlen < 1 || bmlen < 0	17:5:361:382	5052104	0	True				
ANR	5052113	OrExpression	kwlen < 1 || bmlen < 0		5052104	0		||			
ANR	5052114	RelationalExpression	kwlen < 1		5052104	0		<			
ANR	5052115	Identifier	kwlen		5052104	0					
ANR	5052116	PrimaryExpression	1		5052104	1					
ANR	5052117	RelationalExpression	bmlen < 0		5052104	1		<			
ANR	5052118	Identifier	bmlen		5052104	0					
ANR	5052119	PrimaryExpression	0		5052104	1					
ANR	5052120	CompoundStatement		3:29:51:51	5052104	1					
ANR	5052121	ReturnStatement	return NULL ;	18:2:389:400	5052104	0	True				
ANR	5052122	Identifier	NULL		5052104	0					
ANR	5052123	ExpressionStatement	kw = R_NEW0 ( RSearchKeyword )	20:1:406:434	5052104	2	True				
ANR	5052124	AssignmentExpression	kw = R_NEW0 ( RSearchKeyword )		5052104	0		=			
ANR	5052125	Identifier	kw		5052104	0					
ANR	5052126	CallExpression	R_NEW0 ( RSearchKeyword )		5052104	1					
ANR	5052127	Callee	R_NEW0		5052104	0					
ANR	5052128	Identifier	R_NEW0		5052104	0					
ANR	5052129	ArgumentList	RSearchKeyword		5052104	1					
ANR	5052130	Argument	RSearchKeyword		5052104	0					
ANR	5052131	Identifier	RSearchKeyword		5052104	0					
ANR	5052132	IfStatement	if ( ! kw )		5052104	3					
ANR	5052133	Condition	! kw	21:5:441:443	5052104	0	True				
ANR	5052134	UnaryOperationExpression	! kw		5052104	0					
ANR	5052135	UnaryOperator	!		5052104	0					
ANR	5052136	Identifier	kw		5052104	1					
ANR	5052137	CompoundStatement		7:10:112:112	5052104	1					
ANR	5052138	ReturnStatement	return NULL ;	22:2:450:461	5052104	0	True				
ANR	5052139	Identifier	NULL		5052104	0					
ANR	5052140	ExpressionStatement	kw -> type = R_SEARCH_KEYWORD_TYPE_BINARY	24:1:467:506	5052104	4	True				
ANR	5052141	AssignmentExpression	kw -> type = R_SEARCH_KEYWORD_TYPE_BINARY		5052104	0		=			
ANR	5052142	PtrMemberAccess	kw -> type		5052104	0					
ANR	5052143	Identifier	kw		5052104	0					
ANR	5052144	Identifier	type		5052104	1					
ANR	5052145	Identifier	R_SEARCH_KEYWORD_TYPE_BINARY		5052104	1					
ANR	5052146	ExpressionStatement	kw -> data = ( void * ) data	25:1:509:533	5052104	5	True				
ANR	5052147	AssignmentExpression	kw -> data = ( void * ) data		5052104	0		=			
ANR	5052148	PtrMemberAccess	kw -> data		5052104	0					
ANR	5052149	Identifier	kw		5052104	0					
ANR	5052150	Identifier	data		5052104	1					
ANR	5052151	CastExpression	( void * ) data		5052104	1					
ANR	5052152	CastTarget	void *		5052104	0					
ANR	5052153	Identifier	data		5052104	1					
ANR	5052154	ExpressionStatement	kw -> keyword_length = kwlen	26:1:536:562	5052104	6	True				
ANR	5052155	AssignmentExpression	kw -> keyword_length = kwlen		5052104	0		=			
ANR	5052156	PtrMemberAccess	kw -> keyword_length		5052104	0					
ANR	5052157	Identifier	kw		5052104	0					
ANR	5052158	Identifier	keyword_length		5052104	1					
ANR	5052159	Identifier	kwlen		5052104	1					
ANR	5052160	ExpressionStatement	kw -> bin_keyword = malloc ( kwlen )	27:1:565:597	5052104	7	True				
ANR	5052161	AssignmentExpression	kw -> bin_keyword = malloc ( kwlen )		5052104	0		=			
ANR	5052162	PtrMemberAccess	kw -> bin_keyword		5052104	0					
ANR	5052163	Identifier	kw		5052104	0					
ANR	5052164	Identifier	bin_keyword		5052104	1					
ANR	5052165	CallExpression	malloc ( kwlen )		5052104	1					
ANR	5052166	Callee	malloc		5052104	0					
ANR	5052167	Identifier	malloc		5052104	0					
ANR	5052168	ArgumentList	kwlen		5052104	1					
ANR	5052169	Argument	kwlen		5052104	0					
ANR	5052170	Identifier	kwlen		5052104	0					
ANR	5052171	IfStatement	if ( ! kw -> bin_keyword )		5052104	8					
ANR	5052172	Condition	! kw -> bin_keyword	28:5:604:619	5052104	0	True				
ANR	5052173	UnaryOperationExpression	! kw -> bin_keyword		5052104	0					
ANR	5052174	UnaryOperator	!		5052104	0					
ANR	5052175	PtrMemberAccess	kw -> bin_keyword		5052104	1					
ANR	5052176	Identifier	kw		5052104	0					
ANR	5052177	Identifier	bin_keyword		5052104	1					
ANR	5052178	CompoundStatement		14:23:288:288	5052104	1					
ANR	5052179	ExpressionStatement	r_search_keyword_free ( kw )	29:2:626:652	5052104	0	True				
ANR	5052180	CallExpression	r_search_keyword_free ( kw )		5052104	0					
ANR	5052181	Callee	r_search_keyword_free		5052104	0					
ANR	5052182	Identifier	r_search_keyword_free		5052104	0					
ANR	5052183	ArgumentList	kw		5052104	1					
ANR	5052184	Argument	kw		5052104	0					
ANR	5052185	Identifier	kw		5052104	0					
ANR	5052186	ReturnStatement	return NULL ;	30:2:656:667	5052104	1	True				
ANR	5052187	Identifier	NULL		5052104	0					
ANR	5052188	ExpressionStatement	"memcpy ( kw -> bin_keyword , kwbuf , kwlen )"	32:1:673:711	5052104	9	True				
ANR	5052189	CallExpression	"memcpy ( kw -> bin_keyword , kwbuf , kwlen )"		5052104	0					
ANR	5052190	Callee	memcpy		5052104	0					
ANR	5052191	Identifier	memcpy		5052104	0					
ANR	5052192	ArgumentList	kw -> bin_keyword		5052104	1					
ANR	5052193	Argument	kw -> bin_keyword		5052104	0					
ANR	5052194	PtrMemberAccess	kw -> bin_keyword		5052104	0					
ANR	5052195	Identifier	kw		5052104	0					
ANR	5052196	Identifier	bin_keyword		5052104	1					
ANR	5052197	Argument	kwbuf		5052104	1					
ANR	5052198	Identifier	kwbuf		5052104	0					
ANR	5052199	Argument	kwlen		5052104	2					
ANR	5052200	Identifier	kwlen		5052104	0					
ANR	5052201	IfStatement	"if ( bmbuf && bmlen > 0 && ! ignoreMask ( bmbuf , bmlen ) )"		5052104	10					
ANR	5052202	Condition	"bmbuf && bmlen > 0 && ! ignoreMask ( bmbuf , bmlen )"	33:5:718:765	5052104	0	True				
ANR	5052203	AndExpression	"bmbuf && bmlen > 0 && ! ignoreMask ( bmbuf , bmlen )"		5052104	0		&&			
ANR	5052204	Identifier	bmbuf		5052104	0					
ANR	5052205	AndExpression	"bmlen > 0 && ! ignoreMask ( bmbuf , bmlen )"		5052104	1		&&			
ANR	5052206	RelationalExpression	bmlen > 0		5052104	0		>			
ANR	5052207	Identifier	bmlen		5052104	0					
ANR	5052208	PrimaryExpression	0		5052104	1					
ANR	5052209	UnaryOperationExpression	"! ignoreMask ( bmbuf , bmlen )"		5052104	1					
ANR	5052210	UnaryOperator	!		5052104	0					
ANR	5052211	CallExpression	"ignoreMask ( bmbuf , bmlen )"		5052104	1					
ANR	5052212	Callee	ignoreMask		5052104	0					
ANR	5052213	Identifier	ignoreMask		5052104	0					
ANR	5052214	ArgumentList	bmbuf		5052104	1					
ANR	5052215	Argument	bmbuf		5052104	0					
ANR	5052216	Identifier	bmbuf		5052104	0					
ANR	5052217	Argument	bmlen		5052104	1					
ANR	5052218	Identifier	bmlen		5052104	0					
ANR	5052219	CompoundStatement		19:55:434:434	5052104	1					
ANR	5052220	ExpressionStatement	kw -> bin_binmask = malloc ( bmlen )	34:2:772:804	5052104	0	True				
ANR	5052221	AssignmentExpression	kw -> bin_binmask = malloc ( bmlen )		5052104	0		=			
ANR	5052222	PtrMemberAccess	kw -> bin_binmask		5052104	0					
ANR	5052223	Identifier	kw		5052104	0					
ANR	5052224	Identifier	bin_binmask		5052104	1					
ANR	5052225	CallExpression	malloc ( bmlen )		5052104	1					
ANR	5052226	Callee	malloc		5052104	0					
ANR	5052227	Identifier	malloc		5052104	0					
ANR	5052228	ArgumentList	bmlen		5052104	1					
ANR	5052229	Argument	bmlen		5052104	0					
ANR	5052230	Identifier	bmlen		5052104	0					
ANR	5052231	IfStatement	if ( ! kw -> bin_binmask )		5052104	1					
ANR	5052232	Condition	! kw -> bin_binmask	35:6:812:827	5052104	0	True				
ANR	5052233	UnaryOperationExpression	! kw -> bin_binmask		5052104	0					
ANR	5052234	UnaryOperator	!		5052104	0					
ANR	5052235	PtrMemberAccess	kw -> bin_binmask		5052104	1					
ANR	5052236	Identifier	kw		5052104	0					
ANR	5052237	Identifier	bin_binmask		5052104	1					
ANR	5052238	CompoundStatement		21:24:496:496	5052104	1					
ANR	5052239	ExpressionStatement	r_search_keyword_free ( kw )	36:3:835:861	5052104	0	True				
ANR	5052240	CallExpression	r_search_keyword_free ( kw )		5052104	0					
ANR	5052241	Callee	r_search_keyword_free		5052104	0					
ANR	5052242	Identifier	r_search_keyword_free		5052104	0					
ANR	5052243	ArgumentList	kw		5052104	1					
ANR	5052244	Argument	kw		5052104	0					
ANR	5052245	Identifier	kw		5052104	0					
ANR	5052246	ReturnStatement	return NULL ;	37:3:866:877	5052104	1	True				
ANR	5052247	Identifier	NULL		5052104	0					
ANR	5052248	ExpressionStatement	"memcpy ( kw -> bin_binmask , bmbuf , bmlen )"	39:2:885:923	5052104	2	True				
ANR	5052249	CallExpression	"memcpy ( kw -> bin_binmask , bmbuf , bmlen )"		5052104	0					
ANR	5052250	Callee	memcpy		5052104	0					
ANR	5052251	Identifier	memcpy		5052104	0					
ANR	5052252	ArgumentList	kw -> bin_binmask		5052104	1					
ANR	5052253	Argument	kw -> bin_binmask		5052104	0					
ANR	5052254	PtrMemberAccess	kw -> bin_binmask		5052104	0					
ANR	5052255	Identifier	kw		5052104	0					
ANR	5052256	Identifier	bin_binmask		5052104	1					
ANR	5052257	Argument	bmbuf		5052104	1					
ANR	5052258	Identifier	bmbuf		5052104	0					
ANR	5052259	Argument	bmlen		5052104	2					
ANR	5052260	Identifier	bmlen		5052104	0					
ANR	5052261	ExpressionStatement	kw -> binmask_length = bmlen	40:2:927:953	5052104	3	True				
ANR	5052262	AssignmentExpression	kw -> binmask_length = bmlen		5052104	0		=			
ANR	5052263	PtrMemberAccess	kw -> binmask_length		5052104	0					
ANR	5052264	Identifier	kw		5052104	0					
ANR	5052265	Identifier	binmask_length		5052104	1					
ANR	5052266	Identifier	bmlen		5052104	1					
ANR	5052267	ElseStatement	else		5052104	0					
ANR	5052268	CompoundStatement		27:8:629:629	5052104	0					
ANR	5052269	ExpressionStatement	kw -> bin_binmask = NULL	42:2:967:989	5052104	0	True				
ANR	5052270	AssignmentExpression	kw -> bin_binmask = NULL		5052104	0		=			
ANR	5052271	PtrMemberAccess	kw -> bin_binmask		5052104	0					
ANR	5052272	Identifier	kw		5052104	0					
ANR	5052273	Identifier	bin_binmask		5052104	1					
ANR	5052274	Identifier	NULL		5052104	1					
ANR	5052275	ExpressionStatement	kw -> binmask_length = 0	43:2:993:1015	5052104	1	True				
ANR	5052276	AssignmentExpression	kw -> binmask_length = 0		5052104	0		=			
ANR	5052277	PtrMemberAccess	kw -> binmask_length		5052104	0					
ANR	5052278	Identifier	kw		5052104	0					
ANR	5052279	Identifier	binmask_length		5052104	1					
ANR	5052280	PrimaryExpression	0		5052104	1					
ANR	5052281	ReturnStatement	return kw ;	45:1:1021:1030	5052104	11	True				
ANR	5052282	Identifier	kw		5052104	0					
ANR	5052283	ReturnType	R_API RSearchKeyword *		5052104	1					
ANR	5052284	Identifier	r_search_keyword_new		5052104	2					
ANR	5052285	ParameterList	"const ut8 * kwbuf , int kwlen , const ut8 * bmbuf , int bmlen , const char * data"		5052104	3					
ANR	5052286	Parameter	const ut8 * kwbuf	15:43:257:272	5052104	0	True				
ANR	5052287	ParameterType	const ut8 *		5052104	0					
ANR	5052288	Identifier	kwbuf		5052104	1					
ANR	5052289	Parameter	int kwlen	15:61:275:283	5052104	1	True				
ANR	5052290	ParameterType	int		5052104	0					
ANR	5052291	Identifier	kwlen		5052104	1					
ANR	5052292	Parameter	const ut8 * bmbuf	15:72:286:301	5052104	2	True				
ANR	5052293	ParameterType	const ut8 *		5052104	0					
ANR	5052294	Identifier	bmbuf		5052104	1					
ANR	5052295	Parameter	int bmlen	15:90:304:312	5052104	3	True				
ANR	5052296	ParameterType	int		5052104	0					
ANR	5052297	Identifier	bmlen		5052104	1					
ANR	5052298	Parameter	const char * data	15:101:315:330	5052104	4	True				
ANR	5052299	ParameterType	const char *		5052104	0					
ANR	5052300	Identifier	data		5052104	1					
ANR	5052301	CFGEntryNode	ENTRY		5052104		True				
ANR	5052302	CFGExitNode	EXIT		5052104		True				
ANR	5052303	Symbol	malloc		5052104						
ANR	5052304	Symbol	NULL		5052104						
ANR	5052305	Symbol	data		5052104						
ANR	5052306	Symbol	ignoreMask		5052104						
ANR	5052307	Symbol	kw		5052104						
ANR	5052308	Symbol	bmbuf		5052104						
ANR	5052309	Symbol	kw -> type		5052104						
ANR	5052310	Symbol	R_NEW0		5052104						
ANR	5052311	Symbol	R_SEARCH_KEYWORD_TYPE_BINARY		5052104						
ANR	5052312	Symbol	* kw		5052104						
ANR	5052313	Symbol	kwlen		5052104						
ANR	5052314	Symbol	bmlen		5052104						
ANR	5052315	Symbol	kw -> binmask_length		5052104						
ANR	5052316	Symbol	kw -> keyword_length		5052104						
ANR	5052317	Symbol	kw -> bin_keyword		5052104						
ANR	5052318	Symbol	RSearchKeyword		5052104						
ANR	5052319	Symbol	kw -> data		5052104						
ANR	5052320	Symbol	kw -> bin_binmask		5052104						
ANR	5052321	Symbol	kwbuf		5052104						
ANR	5052322	Function	r_search_keyword_free	48:0:1035:1178							
ANR	5052323	FunctionDef	r_search_keyword_free (RSearchKeyword * kw)		5052322	0					
ANR	5052324	CompoundStatement		48:54:1089:1178	5052322	0					
ANR	5052325	IfStatement	if ( ! kw )		5052322	0					
ANR	5052326	Condition	! kw	49:5:1096:1098	5052322	0	True				
ANR	5052327	UnaryOperationExpression	! kw		5052322	0					
ANR	5052328	UnaryOperator	!		5052322	0					
ANR	5052329	Identifier	kw		5052322	1					
ANR	5052330	CompoundStatement		2:10:11:11	5052322	1					
ANR	5052331	ReturnStatement	return ;	50:2:1105:1111	5052322	0	True				
ANR	5052332	ExpressionStatement	free ( kw -> bin_binmask )	52:1:1117:1139	5052322	1	True				
ANR	5052333	CallExpression	free ( kw -> bin_binmask )		5052322	0					
ANR	5052334	Callee	free		5052322	0					
ANR	5052335	Identifier	free		5052322	0					
ANR	5052336	ArgumentList	kw -> bin_binmask		5052322	1					
ANR	5052337	Argument	kw -> bin_binmask		5052322	0					
ANR	5052338	PtrMemberAccess	kw -> bin_binmask		5052322	0					
ANR	5052339	Identifier	kw		5052322	0					
ANR	5052340	Identifier	bin_binmask		5052322	1					
ANR	5052341	ExpressionStatement	free ( kw -> bin_keyword )	53:1:1142:1164	5052322	2	True				
ANR	5052342	CallExpression	free ( kw -> bin_keyword )		5052322	0					
ANR	5052343	Callee	free		5052322	0					
ANR	5052344	Identifier	free		5052322	0					
ANR	5052345	ArgumentList	kw -> bin_keyword		5052322	1					
ANR	5052346	Argument	kw -> bin_keyword		5052322	0					
ANR	5052347	PtrMemberAccess	kw -> bin_keyword		5052322	0					
ANR	5052348	Identifier	kw		5052322	0					
ANR	5052349	Identifier	bin_keyword		5052322	1					
ANR	5052350	ExpressionStatement	free ( kw )	54:1:1167:1176	5052322	3	True				
ANR	5052351	CallExpression	free ( kw )		5052322	0					
ANR	5052352	Callee	free		5052322	0					
ANR	5052353	Identifier	free		5052322	0					
ANR	5052354	ArgumentList	kw		5052322	1					
ANR	5052355	Argument	kw		5052322	0					
ANR	5052356	Identifier	kw		5052322	0					
ANR	5052357	ReturnType	R_API void		5052322	1					
ANR	5052358	Identifier	r_search_keyword_free		5052322	2					
ANR	5052359	ParameterList	RSearchKeyword * kw		5052322	3					
ANR	5052360	Parameter	RSearchKeyword * kw	48:34:1069:1086	5052322	0	True				
ANR	5052361	ParameterType	RSearchKeyword *		5052322	0					
ANR	5052362	Identifier	kw		5052322	1					
ANR	5052363	CFGEntryNode	ENTRY		5052322		True				
ANR	5052364	CFGExitNode	EXIT		5052322		True				
ANR	5052365	Symbol	* kw		5052322						
ANR	5052366	Symbol	kw -> bin_keyword		5052322						
ANR	5052367	Symbol	kw -> bin_binmask		5052322						
ANR	5052368	Symbol	kw		5052322						
ANR	5052369	Function	r_search_keyword_new_str	57:0:1181:1723							
ANR	5052370	FunctionDef	"r_search_keyword_new_str (const char * kwbuf , const char * bmstr , const char * data , int ignore_case)"		5052369	0					
ANR	5052371	CompoundStatement		57:120:1301:1723	5052369	0					
ANR	5052372	IdentifierDeclStatement	RSearchKeyword * kw ;	58:1:1304:1322	5052369	0	True				
ANR	5052373	IdentifierDecl	* kw		5052369	0					
ANR	5052374	IdentifierDeclType	RSearchKeyword *		5052369	0					
ANR	5052375	Identifier	kw		5052369	1					
ANR	5052376	IdentifierDeclStatement	ut8 * bmbuf = NULL ;	59:1:1325:1342	5052369	1	True				
ANR	5052377	IdentifierDecl	* bmbuf = NULL		5052369	0					
ANR	5052378	IdentifierDeclType	ut8 *		5052369	0					
ANR	5052379	Identifier	bmbuf		5052369	1					
ANR	5052380	AssignmentExpression	* bmbuf = NULL		5052369	2		=			
ANR	5052381	Identifier	NULL		5052369	0					
ANR	5052382	Identifier	NULL		5052369	1					
ANR	5052383	IdentifierDeclStatement	int bmlen = 0 ;	60:1:1345:1358	5052369	2	True				
ANR	5052384	IdentifierDecl	bmlen = 0		5052369	0					
ANR	5052385	IdentifierDeclType	int		5052369	0					
ANR	5052386	Identifier	bmlen		5052369	1					
ANR	5052387	AssignmentExpression	bmlen = 0		5052369	2		=			
ANR	5052388	Identifier	bmlen		5052369	0					
ANR	5052389	PrimaryExpression	0		5052369	1					
ANR	5052390	IfStatement	if ( bmstr )		5052369	3					
ANR	5052391	Condition	bmstr	62:5:1366:1370	5052369	0	True				
ANR	5052392	Identifier	bmstr		5052369	0					
ANR	5052393	CompoundStatement		6:12:71:71	5052369	1					
ANR	5052394	ExpressionStatement	bmbuf = malloc ( strlen ( bmstr ) + 1 )	63:2:1377:1410	5052369	0	True				
ANR	5052395	AssignmentExpression	bmbuf = malloc ( strlen ( bmstr ) + 1 )		5052369	0		=			
ANR	5052396	Identifier	bmbuf		5052369	0					
ANR	5052397	CallExpression	malloc ( strlen ( bmstr ) + 1 )		5052369	1					
ANR	5052398	Callee	malloc		5052369	0					
ANR	5052399	Identifier	malloc		5052369	0					
ANR	5052400	ArgumentList	strlen ( bmstr ) + 1		5052369	1					
ANR	5052401	Argument	strlen ( bmstr ) + 1		5052369	0					
ANR	5052402	AdditiveExpression	strlen ( bmstr ) + 1		5052369	0		+			
ANR	5052403	CallExpression	strlen ( bmstr )		5052369	0					
ANR	5052404	Callee	strlen		5052369	0					
ANR	5052405	Identifier	strlen		5052369	0					
ANR	5052406	ArgumentList	bmstr		5052369	1					
ANR	5052407	Argument	bmstr		5052369	0					
ANR	5052408	Identifier	bmstr		5052369	0					
ANR	5052409	PrimaryExpression	1		5052369	1					
ANR	5052410	IfStatement	if ( ! bmbuf )		5052369	1					
ANR	5052411	Condition	! bmbuf	64:6:1418:1423	5052369	0	True				
ANR	5052412	UnaryOperationExpression	! bmbuf		5052369	0					
ANR	5052413	UnaryOperator	!		5052369	0					
ANR	5052414	Identifier	bmbuf		5052369	1					
ANR	5052415	CompoundStatement		8:14:124:124	5052369	1					
ANR	5052416	ReturnStatement	return NULL ;	65:3:1431:1442	5052369	0	True				
ANR	5052417	Identifier	NULL		5052369	0					
ANR	5052418	ExpressionStatement	"bmlen = r_hex_str2bin ( bmstr , bmbuf )"	67:2:1450:1486	5052369	2	True				
ANR	5052419	AssignmentExpression	"bmlen = r_hex_str2bin ( bmstr , bmbuf )"		5052369	0		=			
ANR	5052420	Identifier	bmlen		5052369	0					
ANR	5052421	CallExpression	"r_hex_str2bin ( bmstr , bmbuf )"		5052369	1					
ANR	5052422	Callee	r_hex_str2bin		5052369	0					
ANR	5052423	Identifier	r_hex_str2bin		5052369	0					
ANR	5052424	ArgumentList	bmstr		5052369	1					
ANR	5052425	Argument	bmstr		5052369	0					
ANR	5052426	Identifier	bmstr		5052369	0					
ANR	5052427	Argument	bmbuf		5052369	1					
ANR	5052428	Identifier	bmbuf		5052369	0					
ANR	5052429	IfStatement	if ( bmlen < 1 )		5052369	3					
ANR	5052430	Condition	bmlen < 1	68:6:1494:1502	5052369	0	True				
ANR	5052431	RelationalExpression	bmlen < 1		5052369	0		<			
ANR	5052432	Identifier	bmlen		5052369	0					
ANR	5052433	PrimaryExpression	1		5052369	1					
ANR	5052434	CompoundStatement		12:17:203:203	5052369	1					
ANR	5052435	ExpressionStatement	R_FREE ( bmbuf )	69:3:1510:1524	5052369	0	True				
ANR	5052436	CallExpression	R_FREE ( bmbuf )		5052369	0					
ANR	5052437	Callee	R_FREE		5052369	0					
ANR	5052438	Identifier	R_FREE		5052369	0					
ANR	5052439	ArgumentList	bmbuf		5052369	1					
ANR	5052440	Argument	bmbuf		5052369	0					
ANR	5052441	Identifier	bmbuf		5052369	0					
ANR	5052442	ExpressionStatement	"kw = r_search_keyword_new ( ( ut8 * ) kwbuf , strlen ( kwbuf ) , bmbuf , bmlen , data )"	72:1:1534:1610	5052369	4	True				
ANR	5052443	AssignmentExpression	"kw = r_search_keyword_new ( ( ut8 * ) kwbuf , strlen ( kwbuf ) , bmbuf , bmlen , data )"		5052369	0		=			
ANR	5052444	Identifier	kw		5052369	0					
ANR	5052445	CallExpression	"r_search_keyword_new ( ( ut8 * ) kwbuf , strlen ( kwbuf ) , bmbuf , bmlen , data )"		5052369	1					
ANR	5052446	Callee	r_search_keyword_new		5052369	0					
ANR	5052447	Identifier	r_search_keyword_new		5052369	0					
ANR	5052448	ArgumentList	( ut8 * ) kwbuf		5052369	1					
ANR	5052449	Argument	( ut8 * ) kwbuf		5052369	0					
ANR	5052450	CastExpression	( ut8 * ) kwbuf		5052369	0					
ANR	5052451	CastTarget	ut8 *		5052369	0					
ANR	5052452	Identifier	kwbuf		5052369	1					
ANR	5052453	Argument	strlen ( kwbuf )		5052369	1					
ANR	5052454	CallExpression	strlen ( kwbuf )		5052369	0					
ANR	5052455	Callee	strlen		5052369	0					
ANR	5052456	Identifier	strlen		5052369	0					
ANR	5052457	ArgumentList	kwbuf		5052369	1					
ANR	5052458	Argument	kwbuf		5052369	0					
ANR	5052459	Identifier	kwbuf		5052369	0					
ANR	5052460	Argument	bmbuf		5052369	2					
ANR	5052461	Identifier	bmbuf		5052369	0					
ANR	5052462	Argument	bmlen		5052369	3					
ANR	5052463	Identifier	bmlen		5052369	0					
ANR	5052464	Argument	data		5052369	4					
ANR	5052465	Identifier	data		5052369	0					
ANR	5052466	IfStatement	if ( kw )		5052369	5					
ANR	5052467	Condition	kw	73:5:1617:1618	5052369	0	True				
ANR	5052468	Identifier	kw		5052369	0					
ANR	5052469	CompoundStatement		17:9:319:319	5052369	1					
ANR	5052470	ExpressionStatement	kw -> icase = ignore_case	74:2:1625:1648	5052369	0	True				
ANR	5052471	AssignmentExpression	kw -> icase = ignore_case		5052369	0		=			
ANR	5052472	PtrMemberAccess	kw -> icase		5052369	0					
ANR	5052473	Identifier	kw		5052369	0					
ANR	5052474	Identifier	icase		5052369	1					
ANR	5052475	Identifier	ignore_case		5052369	1					
ANR	5052476	ExpressionStatement	kw -> type = R_SEARCH_KEYWORD_TYPE_STRING	75:2:1652:1691	5052369	1	True				
ANR	5052477	AssignmentExpression	kw -> type = R_SEARCH_KEYWORD_TYPE_STRING		5052369	0		=			
ANR	5052478	PtrMemberAccess	kw -> type		5052369	0					
ANR	5052479	Identifier	kw		5052369	0					
ANR	5052480	Identifier	type		5052369	1					
ANR	5052481	Identifier	R_SEARCH_KEYWORD_TYPE_STRING		5052369	1					
ANR	5052482	ExpressionStatement	free ( bmbuf )	77:1:1697:1709	5052369	6	True				
ANR	5052483	CallExpression	free ( bmbuf )		5052369	0					
ANR	5052484	Callee	free		5052369	0					
ANR	5052485	Identifier	free		5052369	0					
ANR	5052486	ArgumentList	bmbuf		5052369	1					
ANR	5052487	Argument	bmbuf		5052369	0					
ANR	5052488	Identifier	bmbuf		5052369	0					
ANR	5052489	ReturnStatement	return kw ;	78:1:1712:1721	5052369	7	True				
ANR	5052490	Identifier	kw		5052369	0					
ANR	5052491	ReturnType	R_API RSearchKeyword *		5052369	1					
ANR	5052492	Identifier	r_search_keyword_new_str		5052369	2					
ANR	5052493	ParameterList	"const char * kwbuf , const char * bmstr , const char * data , int ignore_case"		5052369	3					
ANR	5052494	Parameter	const char * kwbuf	57:47:1228:1244	5052369	0	True				
ANR	5052495	ParameterType	const char *		5052369	0					
ANR	5052496	Identifier	kwbuf		5052369	1					
ANR	5052497	Parameter	const char * bmstr	57:66:1247:1263	5052369	1	True				
ANR	5052498	ParameterType	const char *		5052369	0					
ANR	5052499	Identifier	bmstr		5052369	1					
ANR	5052500	Parameter	const char * data	57:85:1266:1281	5052369	2	True				
ANR	5052501	ParameterType	const char *		5052369	0					
ANR	5052502	Identifier	data		5052369	1					
ANR	5052503	Parameter	int ignore_case	57:103:1284:1298	5052369	3	True				
ANR	5052504	ParameterType	int		5052369	0					
ANR	5052505	Identifier	ignore_case		5052369	1					
ANR	5052506	CFGEntryNode	ENTRY		5052369		True				
ANR	5052507	CFGExitNode	EXIT		5052369		True				
ANR	5052508	Symbol	R_SEARCH_KEYWORD_TYPE_STRING		5052369						
ANR	5052509	Symbol	malloc		5052369						
ANR	5052510	Symbol	NULL		5052369						
ANR	5052511	Symbol	data		5052369						
ANR	5052512	Symbol	kw		5052369						
ANR	5052513	Symbol	kw -> icase		5052369						
ANR	5052514	Symbol	ignore_case		5052369						
ANR	5052515	Symbol	bmbuf		5052369						
ANR	5052516	Symbol	kw -> type		5052369						
ANR	5052517	Symbol	strlen		5052369						
ANR	5052518	Symbol	* kw		5052369						
ANR	5052519	Symbol	bmlen		5052369						
ANR	5052520	Symbol	kwbuf		5052369						
ANR	5052521	Symbol	r_hex_str2bin		5052369						
ANR	5052522	Symbol	bmstr		5052369						
ANR	5052523	Symbol	r_search_keyword_new		5052369						
ANR	5052524	Function	r_search_keyword_new_wide	81:0:1726:2809							
ANR	5052525	FunctionDef	"r_search_keyword_new_wide (const char * kwbuf , const char * bmstr , const char * data , int ignore_case)"		5052524	0					
ANR	5052526	CompoundStatement		81:121:1847:2809	5052524	0					
ANR	5052527	IdentifierDeclStatement	RSearchKeyword * kw ;	82:1:1850:1868	5052524	0	True				
ANR	5052528	IdentifierDecl	* kw		5052524	0					
ANR	5052529	IdentifierDeclType	RSearchKeyword *		5052524	0					
ANR	5052530	Identifier	kw		5052524	1					
ANR	5052531	IdentifierDeclStatement	int len ;	83:1:1871:1878	5052524	1	True				
ANR	5052532	IdentifierDecl	len		5052524	0					
ANR	5052533	IdentifierDeclType	int		5052524	0					
ANR	5052534	Identifier	len		5052524	1					
ANR	5052535	IdentifierDeclStatement	const char * p2 ;	84:1:1881:1895	5052524	2	True				
ANR	5052536	IdentifierDecl	* p2		5052524	0					
ANR	5052537	IdentifierDeclType	const char *		5052524	0					
ANR	5052538	Identifier	p2		5052524	1					
ANR	5052539	IdentifierDeclStatement	"char * p , * str ;"	85:1:1898:1911	5052524	3	True				
ANR	5052540	IdentifierDecl	* p		5052524	0					
ANR	5052541	IdentifierDeclType	char *		5052524	0					
ANR	5052542	Identifier	p		5052524	1					
ANR	5052543	IdentifierDecl	* str		5052524	1					
ANR	5052544	IdentifierDeclType	char *		5052524	0					
ANR	5052545	Identifier	str		5052524	1					
ANR	5052546	IdentifierDeclStatement	ut8 * bmbuf = NULL ;	86:1:1914:1931	5052524	4	True				
ANR	5052547	IdentifierDecl	* bmbuf = NULL		5052524	0					
ANR	5052548	IdentifierDeclType	ut8 *		5052524	0					
ANR	5052549	Identifier	bmbuf		5052524	1					
ANR	5052550	AssignmentExpression	* bmbuf = NULL		5052524	2		=			
ANR	5052551	Identifier	NULL		5052524	0					
ANR	5052552	Identifier	NULL		5052524	1					
ANR	5052553	IdentifierDeclStatement	int bmlen = 0 ;	87:1:1934:1947	5052524	5	True				
ANR	5052554	IdentifierDecl	bmlen = 0		5052524	0					
ANR	5052555	IdentifierDeclType	int		5052524	0					
ANR	5052556	Identifier	bmlen		5052524	1					
ANR	5052557	AssignmentExpression	bmlen = 0		5052524	2		=			
ANR	5052558	Identifier	bmlen		5052524	0					
ANR	5052559	PrimaryExpression	0		5052524	1					
ANR	5052560	IfStatement	if ( bmstr )		5052524	6					
ANR	5052561	Condition	bmstr	89:5:1955:1959	5052524	0	True				
ANR	5052562	Identifier	bmstr		5052524	0					
ANR	5052563	CompoundStatement		9:12:114:114	5052524	1					
ANR	5052564	ExpressionStatement	bmbuf = malloc ( strlen ( bmstr ) + 1 )	90:2:1966:1999	5052524	0	True				
ANR	5052565	AssignmentExpression	bmbuf = malloc ( strlen ( bmstr ) + 1 )		5052524	0		=			
ANR	5052566	Identifier	bmbuf		5052524	0					
ANR	5052567	CallExpression	malloc ( strlen ( bmstr ) + 1 )		5052524	1					
ANR	5052568	Callee	malloc		5052524	0					
ANR	5052569	Identifier	malloc		5052524	0					
ANR	5052570	ArgumentList	strlen ( bmstr ) + 1		5052524	1					
ANR	5052571	Argument	strlen ( bmstr ) + 1		5052524	0					
ANR	5052572	AdditiveExpression	strlen ( bmstr ) + 1		5052524	0		+			
ANR	5052573	CallExpression	strlen ( bmstr )		5052524	0					
ANR	5052574	Callee	strlen		5052524	0					
ANR	5052575	Identifier	strlen		5052524	0					
ANR	5052576	ArgumentList	bmstr		5052524	1					
ANR	5052577	Argument	bmstr		5052524	0					
ANR	5052578	Identifier	bmstr		5052524	0					
ANR	5052579	PrimaryExpression	1		5052524	1					
ANR	5052580	IfStatement	if ( ! bmbuf )		5052524	1					
ANR	5052581	Condition	! bmbuf	91:6:2007:2012	5052524	0	True				
ANR	5052582	UnaryOperationExpression	! bmbuf		5052524	0					
ANR	5052583	UnaryOperator	!		5052524	0					
ANR	5052584	Identifier	bmbuf		5052524	1					
ANR	5052585	CompoundStatement		11:14:167:167	5052524	1					
ANR	5052586	ReturnStatement	return NULL ;	92:3:2020:2031	5052524	0	True				
ANR	5052587	Identifier	NULL		5052524	0					
ANR	5052588	ExpressionStatement	"bmlen = r_hex_str2bin ( bmstr , bmbuf )"	94:2:2039:2075	5052524	2	True				
ANR	5052589	AssignmentExpression	"bmlen = r_hex_str2bin ( bmstr , bmbuf )"		5052524	0		=			
ANR	5052590	Identifier	bmlen		5052524	0					
ANR	5052591	CallExpression	"r_hex_str2bin ( bmstr , bmbuf )"		5052524	1					
ANR	5052592	Callee	r_hex_str2bin		5052524	0					
ANR	5052593	Identifier	r_hex_str2bin		5052524	0					
ANR	5052594	ArgumentList	bmstr		5052524	1					
ANR	5052595	Argument	bmstr		5052524	0					
ANR	5052596	Identifier	bmstr		5052524	0					
ANR	5052597	Argument	bmbuf		5052524	1					
ANR	5052598	Identifier	bmbuf		5052524	0					
ANR	5052599	IfStatement	if ( bmlen < 1 )		5052524	3					
ANR	5052600	Condition	bmlen < 1	95:6:2083:2091	5052524	0	True				
ANR	5052601	RelationalExpression	bmlen < 1		5052524	0		<			
ANR	5052602	Identifier	bmlen		5052524	0					
ANR	5052603	PrimaryExpression	1		5052524	1					
ANR	5052604	CompoundStatement		15:17:246:246	5052524	1					
ANR	5052605	ExpressionStatement	R_FREE ( bmbuf )	96:3:2099:2113	5052524	0	True				
ANR	5052606	CallExpression	R_FREE ( bmbuf )		5052524	0					
ANR	5052607	Callee	R_FREE		5052524	0					
ANR	5052608	Identifier	R_FREE		5052524	0					
ANR	5052609	ArgumentList	bmbuf		5052524	1					
ANR	5052610	Argument	bmbuf		5052524	0					
ANR	5052611	Identifier	bmbuf		5052524	0					
ANR	5052612	ExpressionStatement	len = strlen ( kwbuf )	100:1:2124:2143	5052524	7	True				
ANR	5052613	AssignmentExpression	len = strlen ( kwbuf )		5052524	0		=			
ANR	5052614	Identifier	len		5052524	0					
ANR	5052615	CallExpression	strlen ( kwbuf )		5052524	1					
ANR	5052616	Callee	strlen		5052524	0					
ANR	5052617	Identifier	strlen		5052524	0					
ANR	5052618	ArgumentList	kwbuf		5052524	1					
ANR	5052619	Argument	kwbuf		5052524	0					
ANR	5052620	Identifier	kwbuf		5052524	0					
ANR	5052621	ExpressionStatement	str = malloc ( ( len + 1 ) * 2 )	101:1:2146:2169	5052524	8	True				
ANR	5052622	AssignmentExpression	str = malloc ( ( len + 1 ) * 2 )		5052524	0		=			
ANR	5052623	Identifier	str		5052524	0					
ANR	5052624	CallExpression	malloc ( ( len + 1 ) * 2 )		5052524	1					
ANR	5052625	Callee	malloc		5052524	0					
ANR	5052626	Identifier	malloc		5052524	0					
ANR	5052627	ArgumentList	( len + 1 ) * 2		5052524	1					
ANR	5052628	Argument	( len + 1 ) * 2		5052524	0					
ANR	5052629	MultiplicativeExpression	( len + 1 ) * 2		5052524	0		*			
ANR	5052630	AdditiveExpression	len + 1		5052524	0		+			
ANR	5052631	Identifier	len		5052524	0					
ANR	5052632	PrimaryExpression	1		5052524	1					
ANR	5052633	PrimaryExpression	2		5052524	1					
ANR	5052634	ForStatement	"for ( p2 = kwbuf , p = str ; * p2 ; )"		5052524	9					
ANR	5052635	ForInit	"p2 = kwbuf , p = str ;"	102:6:2177:2192	5052524	0	True				
ANR	5052636	Expression	"p2 = kwbuf , p = str"		5052524	0					
ANR	5052637	AssignmentExpression	p2 = kwbuf		5052524	0		=			
ANR	5052638	Identifier	p2		5052524	0					
ANR	5052639	Identifier	kwbuf		5052524	1					
ANR	5052640	AssignmentExpression	p = str		5052524	1		=			
ANR	5052641	Identifier	p		5052524	0					
ANR	5052642	Identifier	str		5052524	1					
ANR	5052643	Condition	* p2	102:23:2194:2196	5052524	1	True				
ANR	5052644	UnaryOperationExpression	* p2		5052524	0					
ANR	5052645	UnaryOperator	*		5052524	0					
ANR	5052646	Identifier	p2		5052524	1					
ANR	5052647	CompoundStatement		36:2:667:719	5052524	2					
ANR	5052648	IdentifierDeclStatement	RRune ch ;	103:2:2205:2213	5052524	0	True				
ANR	5052649	IdentifierDecl	ch		5052524	0					
ANR	5052650	IdentifierDeclType	RRune		5052524	0					
ANR	5052651	Identifier	ch		5052524	1					
ANR	5052652	IdentifierDeclStatement	"int num_utf8_bytes = r_utf8_decode ( ( const ut8 * ) p2 , kwbuf + len - p2 , & ch ) ;"	104:2:2217:2292	5052524	1	True				
ANR	5052653	IdentifierDecl	"num_utf8_bytes = r_utf8_decode ( ( const ut8 * ) p2 , kwbuf + len - p2 , & ch )"		5052524	0					
ANR	5052654	IdentifierDeclType	int		5052524	0					
ANR	5052655	Identifier	num_utf8_bytes		5052524	1					
ANR	5052656	AssignmentExpression	"num_utf8_bytes = r_utf8_decode ( ( const ut8 * ) p2 , kwbuf + len - p2 , & ch )"		5052524	2		=			
ANR	5052657	Identifier	num_utf8_bytes		5052524	0					
ANR	5052658	CallExpression	"r_utf8_decode ( ( const ut8 * ) p2 , kwbuf + len - p2 , & ch )"		5052524	1					
ANR	5052659	Callee	r_utf8_decode		5052524	0					
ANR	5052660	Identifier	r_utf8_decode		5052524	0					
ANR	5052661	ArgumentList	( const ut8 * ) p2		5052524	1					
ANR	5052662	Argument	( const ut8 * ) p2		5052524	0					
ANR	5052663	CastExpression	( const ut8 * ) p2		5052524	0					
ANR	5052664	CastTarget	const ut8 *		5052524	0					
ANR	5052665	Identifier	p2		5052524	1					
ANR	5052666	Argument	kwbuf + len - p2		5052524	1					
ANR	5052667	AdditiveExpression	kwbuf + len - p2		5052524	0		+			
ANR	5052668	Identifier	kwbuf		5052524	0					
ANR	5052669	AdditiveExpression	len - p2		5052524	1		-			
ANR	5052670	Identifier	len		5052524	0					
ANR	5052671	Identifier	p2		5052524	1					
ANR	5052672	Argument	& ch		5052524	2					
ANR	5052673	UnaryOperationExpression	& ch		5052524	0					
ANR	5052674	UnaryOperator	&		5052524	0					
ANR	5052675	Identifier	ch		5052524	1					
ANR	5052676	IfStatement	if ( num_utf8_bytes < 1 )		5052524	2					
ANR	5052677	Condition	num_utf8_bytes < 1	105:6:2300:2317	5052524	0	True				
ANR	5052678	RelationalExpression	num_utf8_bytes < 1		5052524	0		<			
ANR	5052679	Identifier	num_utf8_bytes		5052524	0					
ANR	5052680	PrimaryExpression	1		5052524	1					
ANR	5052681	CompoundStatement		25:26:472:472	5052524	1					
ANR	5052682	ExpressionStatement	"eprintf ( ""WARNING: Malformed UTF8 at pos %td\\n"" , p2 - kwbuf )"	106:3:2325:2385	5052524	0	True				
ANR	5052683	CallExpression	"eprintf ( ""WARNING: Malformed UTF8 at pos %td\\n"" , p2 - kwbuf )"		5052524	0					
ANR	5052684	Callee	eprintf		5052524	0					
ANR	5052685	Identifier	eprintf		5052524	0					
ANR	5052686	ArgumentList	"""WARNING: Malformed UTF8 at pos %td\\n"""		5052524	1					
ANR	5052687	Argument	"""WARNING: Malformed UTF8 at pos %td\\n"""		5052524	0					
ANR	5052688	PrimaryExpression	"""WARNING: Malformed UTF8 at pos %td\\n"""		5052524	0					
ANR	5052689	Argument	p2 - kwbuf		5052524	1					
ANR	5052690	AdditiveExpression	p2 - kwbuf		5052524	0		-			
ANR	5052691	Identifier	p2		5052524	0					
ANR	5052692	Identifier	kwbuf		5052524	1					
ANR	5052693	ExpressionStatement	p [ 0 ] = * p2	107:3:2390:2400	5052524	1	True				
ANR	5052694	AssignmentExpression	p [ 0 ] = * p2		5052524	0		=			
ANR	5052695	ArrayIndexing	p [ 0 ]		5052524	0					
ANR	5052696	Identifier	p		5052524	0					
ANR	5052697	PrimaryExpression	0		5052524	1					
ANR	5052698	UnaryOperationExpression	* p2		5052524	1					
ANR	5052699	UnaryOperator	*		5052524	0					
ANR	5052700	Identifier	p2		5052524	1					
ANR	5052701	ExpressionStatement	p [ 1 ] = 0	108:3:2405:2413	5052524	2	True				
ANR	5052702	AssignmentExpression	p [ 1 ] = 0		5052524	0		=			
ANR	5052703	ArrayIndexing	p [ 1 ]		5052524	0					
ANR	5052704	Identifier	p		5052524	0					
ANR	5052705	PrimaryExpression	1		5052524	1					
ANR	5052706	PrimaryExpression	0		5052524	1					
ANR	5052707	ExpressionStatement	p2 ++	109:3:2418:2422	5052524	3	True				
ANR	5052708	PostIncDecOperationExpression	p2 ++		5052524	0					
ANR	5052709	Identifier	p2		5052524	0					
ANR	5052710	IncDec	++		5052524	1					
ANR	5052711	ExpressionStatement	p += 2	110:3:2427:2433	5052524	4	True				
ANR	5052712	AssignmentExpression	p += 2		5052524	0		+=			
ANR	5052713	Identifier	p		5052524	0					
ANR	5052714	PrimaryExpression	2		5052524	1					
ANR	5052715	ContinueStatement	continue ;	111:3:2438:2446	5052524	5	True				
ANR	5052716	IfStatement	if ( ignore_case && ch <= 0xff )		5052524	3					
ANR	5052717	Condition	ignore_case && ch <= 0xff	113:6:2458:2482	5052524	0	True				
ANR	5052718	AndExpression	ignore_case && ch <= 0xff		5052524	0		&&			
ANR	5052719	Identifier	ignore_case		5052524	0					
ANR	5052720	RelationalExpression	ch <= 0xff		5052524	1		<=			
ANR	5052721	Identifier	ch		5052524	0					
ANR	5052722	PrimaryExpression	0xff		5052524	1					
ANR	5052723	CompoundStatement		33:33:637:637	5052524	1					
ANR	5052724	ExpressionStatement	ch = tolower ( ch )	114:3:2490:2507	5052524	0	True				
ANR	5052725	AssignmentExpression	ch = tolower ( ch )		5052524	0		=			
ANR	5052726	Identifier	ch		5052524	0					
ANR	5052727	CallExpression	tolower ( ch )		5052524	1					
ANR	5052728	Callee	tolower		5052524	0					
ANR	5052729	Identifier	tolower		5052524	0					
ANR	5052730	ArgumentList	ch		5052524	1					
ANR	5052731	Argument	ch		5052524	0					
ANR	5052732	Identifier	ch		5052524	0					
ANR	5052733	IdentifierDeclStatement	"int num_wide_bytes = r_utf16le_encode ( ( ut8 * ) p , ch ) ;"	116:2:2515:2567	5052524	4	True				
ANR	5052734	IdentifierDecl	"num_wide_bytes = r_utf16le_encode ( ( ut8 * ) p , ch )"		5052524	0					
ANR	5052735	IdentifierDeclType	int		5052524	0					
ANR	5052736	Identifier	num_wide_bytes		5052524	1					
ANR	5052737	AssignmentExpression	"num_wide_bytes = r_utf16le_encode ( ( ut8 * ) p , ch )"		5052524	2		=			
ANR	5052738	Identifier	num_wide_bytes		5052524	0					
ANR	5052739	CallExpression	"r_utf16le_encode ( ( ut8 * ) p , ch )"		5052524	1					
ANR	5052740	Callee	r_utf16le_encode		5052524	0					
ANR	5052741	Identifier	r_utf16le_encode		5052524	0					
ANR	5052742	ArgumentList	( ut8 * ) p		5052524	1					
ANR	5052743	Argument	( ut8 * ) p		5052524	0					
ANR	5052744	CastExpression	( ut8 * ) p		5052524	0					
ANR	5052745	CastTarget	ut8 *		5052524	0					
ANR	5052746	Identifier	p		5052524	1					
ANR	5052747	Argument	ch		5052524	1					
ANR	5052748	Identifier	ch		5052524	0					
ANR	5052749	ExpressionStatement	r_warn_if_fail ( num_wide_bytes != 0 )	117:2:2571:2607	5052524	5	True				
ANR	5052750	CallExpression	r_warn_if_fail ( num_wide_bytes != 0 )		5052524	0					
ANR	5052751	Callee	r_warn_if_fail		5052524	0					
ANR	5052752	Identifier	r_warn_if_fail		5052524	0					
ANR	5052753	ArgumentList	num_wide_bytes != 0		5052524	1					
ANR	5052754	Argument	num_wide_bytes != 0		5052524	0					
ANR	5052755	EqualityExpression	num_wide_bytes != 0		5052524	0		!=			
ANR	5052756	Identifier	num_wide_bytes		5052524	0					
ANR	5052757	PrimaryExpression	0		5052524	1					
ANR	5052758	ExpressionStatement	p2 += num_utf8_bytes	118:2:2611:2631	5052524	6	True				
ANR	5052759	AssignmentExpression	p2 += num_utf8_bytes		5052524	0		+=			
ANR	5052760	Identifier	p2		5052524	0					
ANR	5052761	Identifier	num_utf8_bytes		5052524	1					
ANR	5052762	ExpressionStatement	p += num_wide_bytes	119:2:2635:2654	5052524	7	True				
ANR	5052763	AssignmentExpression	p += num_wide_bytes		5052524	0		+=			
ANR	5052764	Identifier	p		5052524	0					
ANR	5052765	Identifier	num_wide_bytes		5052524	1					
ANR	5052766	ExpressionStatement	"kw = r_search_keyword_new ( ( ut8 * ) str , p - str , bmbuf , bmlen , data )"	122:1:2661:2728	5052524	10	True				
ANR	5052767	AssignmentExpression	"kw = r_search_keyword_new ( ( ut8 * ) str , p - str , bmbuf , bmlen , data )"		5052524	0		=			
ANR	5052768	Identifier	kw		5052524	0					
ANR	5052769	CallExpression	"r_search_keyword_new ( ( ut8 * ) str , p - str , bmbuf , bmlen , data )"		5052524	1					
ANR	5052770	Callee	r_search_keyword_new		5052524	0					
ANR	5052771	Identifier	r_search_keyword_new		5052524	0					
ANR	5052772	ArgumentList	( ut8 * ) str		5052524	1					
ANR	5052773	Argument	( ut8 * ) str		5052524	0					
ANR	5052774	CastExpression	( ut8 * ) str		5052524	0					
ANR	5052775	CastTarget	ut8 *		5052524	0					
ANR	5052776	Identifier	str		5052524	1					
ANR	5052777	Argument	p - str		5052524	1					
ANR	5052778	AdditiveExpression	p - str		5052524	0		-			
ANR	5052779	Identifier	p		5052524	0					
ANR	5052780	Identifier	str		5052524	1					
ANR	5052781	Argument	bmbuf		5052524	2					
ANR	5052782	Identifier	bmbuf		5052524	0					
ANR	5052783	Argument	bmlen		5052524	3					
ANR	5052784	Identifier	bmlen		5052524	0					
ANR	5052785	Argument	data		5052524	4					
ANR	5052786	Identifier	data		5052524	0					
ANR	5052787	ExpressionStatement	free ( str )	123:1:2731:2740	5052524	11	True				
ANR	5052788	CallExpression	free ( str )		5052524	0					
ANR	5052789	Callee	free		5052524	0					
ANR	5052790	Identifier	free		5052524	0					
ANR	5052791	ArgumentList	str		5052524	1					
ANR	5052792	Argument	str		5052524	0					
ANR	5052793	Identifier	str		5052524	0					
ANR	5052794	IfStatement	if ( kw )		5052524	12					
ANR	5052795	Condition	kw	124:5:2747:2748	5052524	0	True				
ANR	5052796	Identifier	kw		5052524	0					
ANR	5052797	CompoundStatement		44:9:903:903	5052524	1					
ANR	5052798	ExpressionStatement	kw -> icase = ignore_case	125:2:2755:2778	5052524	0	True				
ANR	5052799	AssignmentExpression	kw -> icase = ignore_case		5052524	0		=			
ANR	5052800	PtrMemberAccess	kw -> icase		5052524	0					
ANR	5052801	Identifier	kw		5052524	0					
ANR	5052802	Identifier	icase		5052524	1					
ANR	5052803	Identifier	ignore_case		5052524	1					
ANR	5052804	ExpressionStatement	free ( bmbuf )	127:1:2784:2795	5052524	13	True				
ANR	5052805	CallExpression	free ( bmbuf )		5052524	0					
ANR	5052806	Callee	free		5052524	0					
ANR	5052807	Identifier	free		5052524	0					
ANR	5052808	ArgumentList	bmbuf		5052524	1					
ANR	5052809	Argument	bmbuf		5052524	0					
ANR	5052810	Identifier	bmbuf		5052524	0					
ANR	5052811	ReturnStatement	return kw ;	128:1:2798:2807	5052524	14	True				
ANR	5052812	Identifier	kw		5052524	0					
ANR	5052813	ReturnType	R_API RSearchKeyword *		5052524	1					
ANR	5052814	Identifier	r_search_keyword_new_wide		5052524	2					
ANR	5052815	ParameterList	"const char * kwbuf , const char * bmstr , const char * data , int ignore_case"		5052524	3					
ANR	5052816	Parameter	const char * kwbuf	81:48:1774:1790	5052524	0	True				
ANR	5052817	ParameterType	const char *		5052524	0					
ANR	5052818	Identifier	kwbuf		5052524	1					
ANR	5052819	Parameter	const char * bmstr	81:67:1793:1809	5052524	1	True				
ANR	5052820	ParameterType	const char *		5052524	0					
ANR	5052821	Identifier	bmstr		5052524	1					
ANR	5052822	Parameter	const char * data	81:86:1812:1827	5052524	2	True				
ANR	5052823	ParameterType	const char *		5052524	0					
ANR	5052824	Identifier	data		5052524	1					
ANR	5052825	Parameter	int ignore_case	81:104:1830:1844	5052524	3	True				
ANR	5052826	ParameterType	int		5052524	0					
ANR	5052827	Identifier	ignore_case		5052524	1					
ANR	5052828	CFGEntryNode	ENTRY		5052524		True				
ANR	5052829	CFGExitNode	EXIT		5052524		True				
ANR	5052830	Symbol	p2		5052524						
ANR	5052831	Symbol	data		5052524						
ANR	5052832	Symbol	tolower		5052524						
ANR	5052833	Symbol	r_utf8_decode		5052524						
ANR	5052834	Symbol	& ch		5052524						
ANR	5052835	Symbol	ignore_case		5052524						
ANR	5052836	Symbol	bmbuf		5052524						
ANR	5052837	Symbol	strlen		5052524						
ANR	5052838	Symbol	len		5052524						
ANR	5052839	Symbol	r_utf16le_encode		5052524						
ANR	5052840	Symbol	kwbuf		5052524						
ANR	5052841	Symbol	r_hex_str2bin		5052524						
ANR	5052842	Symbol	bmstr		5052524						
ANR	5052843	Symbol	malloc		5052524						
ANR	5052844	Symbol	NULL		5052524						
ANR	5052845	Symbol	num_utf8_bytes		5052524						
ANR	5052846	Symbol	ch		5052524						
ANR	5052847	Symbol	* p2		5052524						
ANR	5052848	Symbol	kw		5052524						
ANR	5052849	Symbol	kw -> icase		5052524						
ANR	5052850	Symbol	str		5052524						
ANR	5052851	Symbol	p		5052524						
ANR	5052852	Symbol	* kw		5052524						
ANR	5052853	Symbol	bmlen		5052524						
ANR	5052854	Symbol	num_wide_bytes		5052524						
ANR	5052855	Symbol	* p		5052524						
ANR	5052856	Symbol	r_search_keyword_new		5052524						
ANR	5052857	Function	r_search_keyword_new_hex	131:0:2812:3530							
ANR	5052858	FunctionDef	"r_search_keyword_new_hex (const char * kwstr , const char * bmstr , const char * data)"		5052857	0					
ANR	5052859	CompoundStatement		131:103:2915:3530	5052857	0					
ANR	5052860	IdentifierDeclStatement	RSearchKeyword * kw ;	132:1:2918:2936	5052857	0	True				
ANR	5052861	IdentifierDecl	* kw		5052857	0					
ANR	5052862	IdentifierDeclType	RSearchKeyword *		5052857	0					
ANR	5052863	Identifier	kw		5052857	1					
ANR	5052864	IdentifierDeclStatement	"ut8 * kwbuf , * bmbuf ;"	133:1:2939:2957	5052857	1	True				
ANR	5052865	IdentifierDecl	* kwbuf		5052857	0					
ANR	5052866	IdentifierDeclType	ut8 *		5052857	0					
ANR	5052867	Identifier	kwbuf		5052857	1					
ANR	5052868	IdentifierDecl	* bmbuf		5052857	1					
ANR	5052869	IdentifierDeclType	ut8 *		5052857	0					
ANR	5052870	Identifier	bmbuf		5052857	1					
ANR	5052871	IdentifierDeclStatement	"int kwlen , bmlen = 0 ;"	134:1:2960:2980	5052857	2	True				
ANR	5052872	IdentifierDecl	kwlen		5052857	0					
ANR	5052873	IdentifierDeclType	int		5052857	0					
ANR	5052874	Identifier	kwlen		5052857	1					
ANR	5052875	IdentifierDecl	bmlen = 0		5052857	1					
ANR	5052876	IdentifierDeclType	int		5052857	0					
ANR	5052877	Identifier	bmlen		5052857	1					
ANR	5052878	AssignmentExpression	bmlen = 0		5052857	2		=			
ANR	5052879	Identifier	bmlen		5052857	0					
ANR	5052880	PrimaryExpression	0		5052857	1					
ANR	5052881	IfStatement	if ( ! kwstr )		5052857	3					
ANR	5052882	Condition	! kwstr	136:5:2988:2993	5052857	0	True				
ANR	5052883	UnaryOperationExpression	! kwstr		5052857	0					
ANR	5052884	UnaryOperator	!		5052857	0					
ANR	5052885	Identifier	kwstr		5052857	1					
ANR	5052886	CompoundStatement		6:13:80:80	5052857	1					
ANR	5052887	ReturnStatement	return NULL ;	137:2:3000:3011	5052857	0	True				
ANR	5052888	Identifier	NULL		5052857	0					
ANR	5052889	ExpressionStatement	kwbuf = malloc ( strlen ( kwstr ) + 1 )	140:1:3018:3051	5052857	4	True				
ANR	5052890	AssignmentExpression	kwbuf = malloc ( strlen ( kwstr ) + 1 )		5052857	0		=			
ANR	5052891	Identifier	kwbuf		5052857	0					
ANR	5052892	CallExpression	malloc ( strlen ( kwstr ) + 1 )		5052857	1					
ANR	5052893	Callee	malloc		5052857	0					
ANR	5052894	Identifier	malloc		5052857	0					
ANR	5052895	ArgumentList	strlen ( kwstr ) + 1		5052857	1					
ANR	5052896	Argument	strlen ( kwstr ) + 1		5052857	0					
ANR	5052897	AdditiveExpression	strlen ( kwstr ) + 1		5052857	0		+			
ANR	5052898	CallExpression	strlen ( kwstr )		5052857	0					
ANR	5052899	Callee	strlen		5052857	0					
ANR	5052900	Identifier	strlen		5052857	0					
ANR	5052901	ArgumentList	kwstr		5052857	1					
ANR	5052902	Argument	kwstr		5052857	0					
ANR	5052903	Identifier	kwstr		5052857	0					
ANR	5052904	PrimaryExpression	1		5052857	1					
ANR	5052905	IfStatement	if ( ! kwbuf )		5052857	5					
ANR	5052906	Condition	! kwbuf	141:5:3058:3063	5052857	0	True				
ANR	5052907	UnaryOperationExpression	! kwbuf		5052857	0					
ANR	5052908	UnaryOperator	!		5052857	0					
ANR	5052909	Identifier	kwbuf		5052857	1					
ANR	5052910	CompoundStatement		11:13:150:150	5052857	1					
ANR	5052911	ReturnStatement	return NULL ;	142:2:3070:3081	5052857	0	True				
ANR	5052912	Identifier	NULL		5052857	0					
ANR	5052913	ExpressionStatement	"kwlen = r_hex_str2bin ( kwstr , kwbuf )"	145:1:3088:3124	5052857	6	True				
ANR	5052914	AssignmentExpression	"kwlen = r_hex_str2bin ( kwstr , kwbuf )"		5052857	0		=			
ANR	5052915	Identifier	kwlen		5052857	0					
ANR	5052916	CallExpression	"r_hex_str2bin ( kwstr , kwbuf )"		5052857	1					
ANR	5052917	Callee	r_hex_str2bin		5052857	0					
ANR	5052918	Identifier	r_hex_str2bin		5052857	0					
ANR	5052919	ArgumentList	kwstr		5052857	1					
ANR	5052920	Argument	kwstr		5052857	0					
ANR	5052921	Identifier	kwstr		5052857	0					
ANR	5052922	Argument	kwbuf		5052857	1					
ANR	5052923	Identifier	kwbuf		5052857	0					
ANR	5052924	IfStatement	if ( kwlen < 1 )		5052857	7					
ANR	5052925	Condition	kwlen < 1	146:5:3131:3139	5052857	0	True				
ANR	5052926	RelationalExpression	kwlen < 1		5052857	0		<			
ANR	5052927	Identifier	kwlen		5052857	0					
ANR	5052928	PrimaryExpression	1		5052857	1					
ANR	5052929	CompoundStatement		16:16:226:226	5052857	1					
ANR	5052930	ExpressionStatement	free ( kwbuf )	147:2:3146:3158	5052857	0	True				
ANR	5052931	CallExpression	free ( kwbuf )		5052857	0					
ANR	5052932	Callee	free		5052857	0					
ANR	5052933	Identifier	free		5052857	0					
ANR	5052934	ArgumentList	kwbuf		5052857	1					
ANR	5052935	Argument	kwbuf		5052857	0					
ANR	5052936	Identifier	kwbuf		5052857	0					
ANR	5052937	ReturnStatement	return NULL ;	148:2:3162:3173	5052857	1	True				
ANR	5052938	Identifier	NULL		5052857	0					
ANR	5052939	ExpressionStatement	bmbuf = NULL	151:1:3180:3192	5052857	8	True				
ANR	5052940	AssignmentExpression	bmbuf = NULL		5052857	0		=			
ANR	5052941	Identifier	bmbuf		5052857	0					
ANR	5052942	Identifier	NULL		5052857	1					
ANR	5052943	IfStatement	if ( bmstr && * bmstr )		5052857	9					
ANR	5052944	Condition	bmstr && * bmstr	152:5:3199:3213	5052857	0	True				
ANR	5052945	AndExpression	bmstr && * bmstr		5052857	0		&&			
ANR	5052946	Identifier	bmstr		5052857	0					
ANR	5052947	UnaryOperationExpression	* bmstr		5052857	1					
ANR	5052948	UnaryOperator	*		5052857	0					
ANR	5052949	Identifier	bmstr		5052857	1					
ANR	5052950	CompoundStatement		22:22:300:300	5052857	1					
ANR	5052951	ExpressionStatement	bmbuf = malloc ( strlen ( bmstr ) + 1 )	153:2:3220:3253	5052857	0	True				
ANR	5052952	AssignmentExpression	bmbuf = malloc ( strlen ( bmstr ) + 1 )		5052857	0		=			
ANR	5052953	Identifier	bmbuf		5052857	0					
ANR	5052954	CallExpression	malloc ( strlen ( bmstr ) + 1 )		5052857	1					
ANR	5052955	Callee	malloc		5052857	0					
ANR	5052956	Identifier	malloc		5052857	0					
ANR	5052957	ArgumentList	strlen ( bmstr ) + 1		5052857	1					
ANR	5052958	Argument	strlen ( bmstr ) + 1		5052857	0					
ANR	5052959	AdditiveExpression	strlen ( bmstr ) + 1		5052857	0		+			
ANR	5052960	CallExpression	strlen ( bmstr )		5052857	0					
ANR	5052961	Callee	strlen		5052857	0					
ANR	5052962	Identifier	strlen		5052857	0					
ANR	5052963	ArgumentList	bmstr		5052857	1					
ANR	5052964	Argument	bmstr		5052857	0					
ANR	5052965	Identifier	bmstr		5052857	0					
ANR	5052966	PrimaryExpression	1		5052857	1					
ANR	5052967	IfStatement	if ( ! bmbuf )		5052857	1					
ANR	5052968	Condition	! bmbuf	154:6:3261:3266	5052857	0	True				
ANR	5052969	UnaryOperationExpression	! bmbuf		5052857	0					
ANR	5052970	UnaryOperator	!		5052857	0					
ANR	5052971	Identifier	bmbuf		5052857	1					
ANR	5052972	CompoundStatement		24:14:353:353	5052857	1					
ANR	5052973	ExpressionStatement	free ( kwbuf )	155:3:3274:3286	5052857	0	True				
ANR	5052974	CallExpression	free ( kwbuf )		5052857	0					
ANR	5052975	Callee	free		5052857	0					
ANR	5052976	Identifier	free		5052857	0					
ANR	5052977	ArgumentList	kwbuf		5052857	1					
ANR	5052978	Argument	kwbuf		5052857	0					
ANR	5052979	Identifier	kwbuf		5052857	0					
ANR	5052980	ReturnStatement	return NULL ;	156:3:3291:3302	5052857	1	True				
ANR	5052981	Identifier	NULL		5052857	0					
ANR	5052982	ExpressionStatement	"bmlen = r_hex_str2bin ( bmstr , bmbuf )"	158:2:3310:3346	5052857	2	True				
ANR	5052983	AssignmentExpression	"bmlen = r_hex_str2bin ( bmstr , bmbuf )"		5052857	0		=			
ANR	5052984	Identifier	bmlen		5052857	0					
ANR	5052985	CallExpression	"r_hex_str2bin ( bmstr , bmbuf )"		5052857	1					
ANR	5052986	Callee	r_hex_str2bin		5052857	0					
ANR	5052987	Identifier	r_hex_str2bin		5052857	0					
ANR	5052988	ArgumentList	bmstr		5052857	1					
ANR	5052989	Argument	bmstr		5052857	0					
ANR	5052990	Identifier	bmstr		5052857	0					
ANR	5052991	Argument	bmbuf		5052857	1					
ANR	5052992	Identifier	bmbuf		5052857	0					
ANR	5052993	IfStatement	if ( bmlen < 1 )		5052857	3					
ANR	5052994	Condition	bmlen < 1	159:6:3354:3362	5052857	0	True				
ANR	5052995	RelationalExpression	bmlen < 1		5052857	0		<			
ANR	5052996	Identifier	bmlen		5052857	0					
ANR	5052997	PrimaryExpression	1		5052857	1					
ANR	5052998	CompoundStatement		29:17:449:449	5052857	1					
ANR	5052999	ExpressionStatement	free ( bmbuf )	160:3:3370:3382	5052857	0	True				
ANR	5053000	CallExpression	free ( bmbuf )		5052857	0					
ANR	5053001	Callee	free		5052857	0					
ANR	5053002	Identifier	free		5052857	0					
ANR	5053003	ArgumentList	bmbuf		5052857	1					
ANR	5053004	Argument	bmbuf		5052857	0					
ANR	5053005	Identifier	bmbuf		5052857	0					
ANR	5053006	ExpressionStatement	free ( kwbuf )	161:3:3387:3399	5052857	1	True				
ANR	5053007	CallExpression	free ( kwbuf )		5052857	0					
ANR	5053008	Callee	free		5052857	0					
ANR	5053009	Identifier	free		5052857	0					
ANR	5053010	ArgumentList	kwbuf		5052857	1					
ANR	5053011	Argument	kwbuf		5052857	0					
ANR	5053012	Identifier	kwbuf		5052857	0					
ANR	5053013	ReturnStatement	return NULL ;	162:3:3404:3415	5052857	2	True				
ANR	5053014	Identifier	NULL		5052857	0					
ANR	5053015	ExpressionStatement	"kw = r_search_keyword_new ( kwbuf , kwlen , bmbuf , bmlen , data )"	166:1:3426:3486	5052857	10	True				
ANR	5053016	AssignmentExpression	"kw = r_search_keyword_new ( kwbuf , kwlen , bmbuf , bmlen , data )"		5052857	0		=			
ANR	5053017	Identifier	kw		5052857	0					
ANR	5053018	CallExpression	"r_search_keyword_new ( kwbuf , kwlen , bmbuf , bmlen , data )"		5052857	1					
ANR	5053019	Callee	r_search_keyword_new		5052857	0					
ANR	5053020	Identifier	r_search_keyword_new		5052857	0					
ANR	5053021	ArgumentList	kwbuf		5052857	1					
ANR	5053022	Argument	kwbuf		5052857	0					
ANR	5053023	Identifier	kwbuf		5052857	0					
ANR	5053024	Argument	kwlen		5052857	1					
ANR	5053025	Identifier	kwlen		5052857	0					
ANR	5053026	Argument	bmbuf		5052857	2					
ANR	5053027	Identifier	bmbuf		5052857	0					
ANR	5053028	Argument	bmlen		5052857	3					
ANR	5053029	Identifier	bmlen		5052857	0					
ANR	5053030	Argument	data		5052857	4					
ANR	5053031	Identifier	data		5052857	0					
ANR	5053032	ExpressionStatement	free ( kwbuf )	167:1:3489:3501	5052857	11	True				
ANR	5053033	CallExpression	free ( kwbuf )		5052857	0					
ANR	5053034	Callee	free		5052857	0					
ANR	5053035	Identifier	free		5052857	0					
ANR	5053036	ArgumentList	kwbuf		5052857	1					
ANR	5053037	Argument	kwbuf		5052857	0					
ANR	5053038	Identifier	kwbuf		5052857	0					
ANR	5053039	ExpressionStatement	free ( bmbuf )	168:1:3504:3516	5052857	12	True				
ANR	5053040	CallExpression	free ( bmbuf )		5052857	0					
ANR	5053041	Callee	free		5052857	0					
ANR	5053042	Identifier	free		5052857	0					
ANR	5053043	ArgumentList	bmbuf		5052857	1					
ANR	5053044	Argument	bmbuf		5052857	0					
ANR	5053045	Identifier	bmbuf		5052857	0					
ANR	5053046	ReturnStatement	return kw ;	169:1:3519:3528	5052857	13	True				
ANR	5053047	Identifier	kw		5052857	0					
ANR	5053048	ReturnType	R_API RSearchKeyword *		5052857	1					
ANR	5053049	Identifier	r_search_keyword_new_hex		5052857	2					
ANR	5053050	ParameterList	"const char * kwstr , const char * bmstr , const char * data"		5052857	3					
ANR	5053051	Parameter	const char * kwstr	131:47:2859:2875	5052857	0	True				
ANR	5053052	ParameterType	const char *		5052857	0					
ANR	5053053	Identifier	kwstr		5052857	1					
ANR	5053054	Parameter	const char * bmstr	131:66:2878:2894	5052857	1	True				
ANR	5053055	ParameterType	const char *		5052857	0					
ANR	5053056	Identifier	bmstr		5052857	1					
ANR	5053057	Parameter	const char * data	131:85:2897:2912	5052857	2	True				
ANR	5053058	ParameterType	const char *		5052857	0					
ANR	5053059	Identifier	data		5052857	1					
ANR	5053060	CFGEntryNode	ENTRY		5052857		True				
ANR	5053061	CFGExitNode	EXIT		5052857		True				
ANR	5053062	Symbol	malloc		5052857						
ANR	5053063	Symbol	NULL		5052857						
ANR	5053064	Symbol	data		5052857						
ANR	5053065	Symbol	* bmstr		5052857						
ANR	5053066	Symbol	kw		5052857						
ANR	5053067	Symbol	bmbuf		5052857						
ANR	5053068	Symbol	strlen		5052857						
ANR	5053069	Symbol	bmlen		5052857						
ANR	5053070	Symbol	kwlen		5052857						
ANR	5053071	Symbol	kwbuf		5052857						
ANR	5053072	Symbol	r_hex_str2bin		5052857						
ANR	5053073	Symbol	kwstr		5052857						
ANR	5053074	Symbol	bmstr		5052857						
ANR	5053075	Symbol	r_search_keyword_new		5052857						
ANR	5053076	Function	r_search_keyword_new_hexmask	172:0:3533:4023							
ANR	5053077	FunctionDef	"r_search_keyword_new_hexmask (const char * kwstr , const char * data)"		5053076	0					
ANR	5053078	CompoundStatement		172:88:3621:4023	5053076	0					
ANR	5053079	IdentifierDeclStatement	RSearchKeyword * ks = NULL ;	173:1:3624:3649	5053076	0	True				
ANR	5053080	IdentifierDecl	* ks = NULL		5053076	0					
ANR	5053081	IdentifierDeclType	RSearchKeyword *		5053076	0					
ANR	5053082	Identifier	ks		5053076	1					
ANR	5053083	AssignmentExpression	* ks = NULL		5053076	2		=			
ANR	5053084	Identifier	NULL		5053076	0					
ANR	5053085	Identifier	NULL		5053076	1					
ANR	5053086	IdentifierDeclStatement	"ut8 * kw , * bm ;"	174:1:3652:3664	5053076	1	True				
ANR	5053087	IdentifierDecl	* kw		5053076	0					
ANR	5053088	IdentifierDeclType	ut8 *		5053076	0					
ANR	5053089	Identifier	kw		5053076	1					
ANR	5053090	IdentifierDecl	* bm		5053076	1					
ANR	5053091	IdentifierDeclType	ut8 *		5053076	0					
ANR	5053092	Identifier	bm		5053076	1					
ANR	5053093	IfStatement	if ( kwstr != NULL )		5053076	2					
ANR	5053094	Condition	kwstr != NULL	175:5:3671:3683	5053076	0	True				
ANR	5053095	EqualityExpression	kwstr != NULL		5053076	0		!=			
ANR	5053096	Identifier	kwstr		5053076	0					
ANR	5053097	Identifier	NULL		5053076	1					
ANR	5053098	CompoundStatement		5:2:68:92	5053076	1					
ANR	5053099	IdentifierDeclStatement	int len = strlen ( kwstr ) ;	176:2:3690:3714	5053076	0	True				
ANR	5053100	IdentifierDecl	len = strlen ( kwstr )		5053076	0					
ANR	5053101	IdentifierDeclType	int		5053076	0					
ANR	5053102	Identifier	len		5053076	1					
ANR	5053103	AssignmentExpression	len = strlen ( kwstr )		5053076	2		=			
ANR	5053104	Identifier	len		5053076	0					
ANR	5053105	CallExpression	strlen ( kwstr )		5053076	1					
ANR	5053106	Callee	strlen		5053076	0					
ANR	5053107	Identifier	strlen		5053076	0					
ANR	5053108	ArgumentList	kwstr		5053076	1					
ANR	5053109	Argument	kwstr		5053076	0					
ANR	5053110	Identifier	kwstr		5053076	0					
ANR	5053111	ExpressionStatement	kw = malloc ( len + 4 )	177:2:3718:3739	5053076	1	True				
ANR	5053112	AssignmentExpression	kw = malloc ( len + 4 )		5053076	0		=			
ANR	5053113	Identifier	kw		5053076	0					
ANR	5053114	CallExpression	malloc ( len + 4 )		5053076	1					
ANR	5053115	Callee	malloc		5053076	0					
ANR	5053116	Identifier	malloc		5053076	0					
ANR	5053117	ArgumentList	len + 4		5053076	1					
ANR	5053118	Argument	len + 4		5053076	0					
ANR	5053119	AdditiveExpression	len + 4		5053076	0		+			
ANR	5053120	Identifier	len		5053076	0					
ANR	5053121	PrimaryExpression	4		5053076	1					
ANR	5053122	ExpressionStatement	bm = malloc ( len + 4 )	178:2:3743:3764	5053076	2	True				
ANR	5053123	AssignmentExpression	bm = malloc ( len + 4 )		5053076	0		=			
ANR	5053124	Identifier	bm		5053076	0					
ANR	5053125	CallExpression	malloc ( len + 4 )		5053076	1					
ANR	5053126	Callee	malloc		5053076	0					
ANR	5053127	Identifier	malloc		5053076	0					
ANR	5053128	ArgumentList	len + 4		5053076	1					
ANR	5053129	Argument	len + 4		5053076	0					
ANR	5053130	AdditiveExpression	len + 4		5053076	0		+			
ANR	5053131	Identifier	len		5053076	0					
ANR	5053132	PrimaryExpression	4		5053076	1					
ANR	5053133	IfStatement	if ( kw != NULL && bm != NULL )		5053076	3					
ANR	5053134	Condition	kw != NULL && bm != NULL	179:6:3772:3795	5053076	0	True				
ANR	5053135	AndExpression	kw != NULL && bm != NULL		5053076	0		&&			
ANR	5053136	EqualityExpression	kw != NULL		5053076	0		!=			
ANR	5053137	Identifier	kw		5053076	0					
ANR	5053138	Identifier	NULL		5053076	1					
ANR	5053139	EqualityExpression	bm != NULL		5053076	1		!=			
ANR	5053140	Identifier	bm		5053076	0					
ANR	5053141	Identifier	NULL		5053076	1					
ANR	5053142	CompoundStatement		8:32:176:176	5053076	1					
ANR	5053143	ExpressionStatement	"len = r_hex_str2binmask ( kwstr , ( ut8 * ) kw , ( ut8 * ) bm )"	180:3:3803:3854	5053076	0	True				
ANR	5053144	AssignmentExpression	"len = r_hex_str2binmask ( kwstr , ( ut8 * ) kw , ( ut8 * ) bm )"		5053076	0		=			
ANR	5053145	Identifier	len		5053076	0					
ANR	5053146	CallExpression	"r_hex_str2binmask ( kwstr , ( ut8 * ) kw , ( ut8 * ) bm )"		5053076	1					
ANR	5053147	Callee	r_hex_str2binmask		5053076	0					
ANR	5053148	Identifier	r_hex_str2binmask		5053076	0					
ANR	5053149	ArgumentList	kwstr		5053076	1					
ANR	5053150	Argument	kwstr		5053076	0					
ANR	5053151	Identifier	kwstr		5053076	0					
ANR	5053152	Argument	( ut8 * ) kw		5053076	1					
ANR	5053153	CastExpression	( ut8 * ) kw		5053076	0					
ANR	5053154	CastTarget	ut8 *		5053076	0					
ANR	5053155	Identifier	kw		5053076	1					
ANR	5053156	Argument	( ut8 * ) bm		5053076	2					
ANR	5053157	CastExpression	( ut8 * ) bm		5053076	0					
ANR	5053158	CastTarget	ut8 *		5053076	0					
ANR	5053159	Identifier	bm		5053076	1					
ANR	5053160	IfStatement	if ( len < 0 )		5053076	1					
ANR	5053161	Condition	len < 0	181:7:3863:3869	5053076	0	True				
ANR	5053162	RelationalExpression	len < 0		5053076	0		<			
ANR	5053163	Identifier	len		5053076	0					
ANR	5053164	PrimaryExpression	0		5053076	1					
ANR	5053165	CompoundStatement		10:16:250:250	5053076	1					
ANR	5053166	ExpressionStatement	len = - len - 1	182:4:3878:3892	5053076	0	True				
ANR	5053167	AssignmentExpression	len = - len - 1		5053076	0		=			
ANR	5053168	Identifier	len		5053076	0					
ANR	5053169	AdditiveExpression	- len - 1		5053076	1		-			
ANR	5053170	UnaryOperationExpression	- len		5053076	0					
ANR	5053171	UnaryOperator	-		5053076	0					
ANR	5053172	Identifier	len		5053076	1					
ANR	5053173	PrimaryExpression	1		5053076	1					
ANR	5053174	IfStatement	if ( len > 0 )		5053076	2					
ANR	5053175	Condition	len > 0	184:7:3906:3912	5053076	0	True				
ANR	5053176	RelationalExpression	len > 0		5053076	0		>			
ANR	5053177	Identifier	len		5053076	0					
ANR	5053178	PrimaryExpression	0		5053076	1					
ANR	5053179	CompoundStatement		13:16:293:293	5053076	1					
ANR	5053180	ExpressionStatement	"ks = r_search_keyword_new ( kw , len , bm , len , data )"	185:4:3921:3971	5053076	0	True				
ANR	5053181	AssignmentExpression	"ks = r_search_keyword_new ( kw , len , bm , len , data )"		5053076	0		=			
ANR	5053182	Identifier	ks		5053076	0					
ANR	5053183	CallExpression	"r_search_keyword_new ( kw , len , bm , len , data )"		5053076	1					
ANR	5053184	Callee	r_search_keyword_new		5053076	0					
ANR	5053185	Identifier	r_search_keyword_new		5053076	0					
ANR	5053186	ArgumentList	kw		5053076	1					
ANR	5053187	Argument	kw		5053076	0					
ANR	5053188	Identifier	kw		5053076	0					
ANR	5053189	Argument	len		5053076	1					
ANR	5053190	Identifier	len		5053076	0					
ANR	5053191	Argument	bm		5053076	2					
ANR	5053192	Identifier	bm		5053076	0					
ANR	5053193	Argument	len		5053076	3					
ANR	5053194	Identifier	len		5053076	0					
ANR	5053195	Argument	data		5053076	4					
ANR	5053196	Identifier	data		5053076	0					
ANR	5053197	ExpressionStatement	free ( kw )	188:2:3984:3993	5053076	4	True				
ANR	5053198	CallExpression	free ( kw )		5053076	0					
ANR	5053199	Callee	free		5053076	0					
ANR	5053200	Identifier	free		5053076	0					
ANR	5053201	ArgumentList	kw		5053076	1					
ANR	5053202	Argument	kw		5053076	0					
ANR	5053203	Identifier	kw		5053076	0					
ANR	5053204	ExpressionStatement	free ( bm )	189:2:3997:4006	5053076	5	True				
ANR	5053205	CallExpression	free ( bm )		5053076	0					
ANR	5053206	Callee	free		5053076	0					
ANR	5053207	Identifier	free		5053076	0					
ANR	5053208	ArgumentList	bm		5053076	1					
ANR	5053209	Argument	bm		5053076	0					
ANR	5053210	Identifier	bm		5053076	0					
ANR	5053211	ReturnStatement	return ks ;	191:1:4012:4021	5053076	3	True				
ANR	5053212	Identifier	ks		5053076	0					
ANR	5053213	ReturnType	R_API RSearchKeyword *		5053076	1					
ANR	5053214	Identifier	r_search_keyword_new_hexmask		5053076	2					
ANR	5053215	ParameterList	"const char * kwstr , const char * data"		5053076	3					
ANR	5053216	Parameter	const char * kwstr	172:51:3584:3600	5053076	0	True				
ANR	5053217	ParameterType	const char *		5053076	0					
ANR	5053218	Identifier	kwstr		5053076	1					
ANR	5053219	Parameter	const char * data	172:70:3603:3618	5053076	1	True				
ANR	5053220	ParameterType	const char *		5053076	0					
ANR	5053221	Identifier	data		5053076	1					
ANR	5053222	CFGEntryNode	ENTRY		5053076		True				
ANR	5053223	CFGExitNode	EXIT		5053076		True				
ANR	5053224	Symbol	strlen		5053076						
ANR	5053225	Symbol	malloc		5053076						
ANR	5053226	Symbol	NULL		5053076						
ANR	5053227	Symbol	data		5053076						
ANR	5053228	Symbol	len		5053076						
ANR	5053229	Symbol	ks		5053076						
ANR	5053230	Symbol	r_hex_str2binmask		5053076						
ANR	5053231	Symbol	bm		5053076						
ANR	5053232	Symbol	kw		5053076						
ANR	5053233	Symbol	kwstr		5053076						
ANR	5053234	Symbol	r_search_keyword_new		5053076						
ANR	5053235	Function	r_search_keyword_new_regexp	195:0:4094:5247							
ANR	5053236	FunctionDef	"r_search_keyword_new_regexp (const char * str , const char * data)"		5053235	0					
ANR	5053237	CompoundStatement		195:86:4180:5247	5053235	0					
ANR	5053238	IdentifierDeclStatement	RSearchKeyword * kw ;	196:1:4183:4201	5053235	0	True				
ANR	5053239	IdentifierDecl	* kw		5053235	0					
ANR	5053240	IdentifierDeclType	RSearchKeyword *		5053235	0					
ANR	5053241	Identifier	kw		5053235	1					
ANR	5053242	IdentifierDeclStatement	"int i = 0 , start , length ;"	197:1:4204:4228	5053235	1	True				
ANR	5053243	IdentifierDecl	i = 0		5053235	0					
ANR	5053244	IdentifierDeclType	int		5053235	0					
ANR	5053245	Identifier	i		5053235	1					
ANR	5053246	AssignmentExpression	i = 0		5053235	2		=			
ANR	5053247	Identifier	i		5053235	0					
ANR	5053248	PrimaryExpression	0		5053235	1					
ANR	5053249	IdentifierDecl	start		5053235	1					
ANR	5053250	IdentifierDeclType	int		5053235	0					
ANR	5053251	Identifier	start		5053235	1					
ANR	5053252	IdentifierDecl	length		5053235	2					
ANR	5053253	IdentifierDeclType	int		5053235	0					
ANR	5053254	Identifier	length		5053235	1					
ANR	5053255	WhileStatement	while ( isspace ( ( const unsigned char ) str [ i ] ) )		5053235	2					
ANR	5053256	Condition	isspace ( ( const unsigned char ) str [ i ] )	199:8:4239:4275	5053235	0	True				
ANR	5053257	CallExpression	isspace ( ( const unsigned char ) str [ i ] )		5053235	0					
ANR	5053258	Callee	isspace		5053235	0					
ANR	5053259	Identifier	isspace		5053235	0					
ANR	5053260	ArgumentList	( const unsigned char ) str [ i ]		5053235	1					
ANR	5053261	Argument	( const unsigned char ) str [ i ]		5053235	0					
ANR	5053262	CastExpression	( const unsigned char ) str [ i ]		5053235	0					
ANR	5053263	CastTarget	const unsigned char		5053235	0					
ANR	5053264	ArrayIndexing	str [ i ]		5053235	1					
ANR	5053265	Identifier	str		5053235	0					
ANR	5053266	Identifier	i		5053235	1					
ANR	5053267	CompoundStatement		5:47:97:97	5053235	1					
ANR	5053268	ExpressionStatement	i ++	200:2:4282:4285	5053235	0	True				
ANR	5053269	PostIncDecOperationExpression	i ++		5053235	0					
ANR	5053270	Identifier	i		5053235	0					
ANR	5053271	IncDec	++		5053235	1					
ANR	5053272	IfStatement	if ( str [ i ++ ] != '/' )		5053235	3					
ANR	5053273	Condition	str [ i ++ ] != '/'	203:5:4296:4310	5053235	0	True				
ANR	5053274	EqualityExpression	str [ i ++ ] != '/'		5053235	0		!=			
ANR	5053275	ArrayIndexing	str [ i ++ ]		5053235	0					
ANR	5053276	Identifier	str		5053235	0					
ANR	5053277	PostIncDecOperationExpression	i ++		5053235	1					
ANR	5053278	Identifier	i		5053235	0					
ANR	5053279	IncDec	++		5053235	1					
ANR	5053280	PrimaryExpression	'/'		5053235	1					
ANR	5053281	CompoundStatement		9:22:132:132	5053235	1					
ANR	5053282	ReturnStatement	return NULL ;	204:2:4317:4328	5053235	0	True				
ANR	5053283	Identifier	NULL		5053235	0					
ANR	5053284	IdentifierDeclStatement	int specials = 0 ;	208:1:4384:4400	5053235	4	True				
ANR	5053285	IdentifierDecl	specials = 0		5053235	0					
ANR	5053286	IdentifierDeclType	int		5053235	0					
ANR	5053287	Identifier	specials		5053235	1					
ANR	5053288	AssignmentExpression	specials = 0		5053235	2		=			
ANR	5053289	Identifier	specials		5053235	0					
ANR	5053290	PrimaryExpression	0		5053235	1					
ANR	5053291	ForStatement	for ( start = i ; str [ i ] ; i ++ )		5053235	5					
ANR	5053292	ForInit	start = i ;	209:6:4408:4417	5053235	0	True				
ANR	5053293	AssignmentExpression	start = i		5053235	0		=			
ANR	5053294	Identifier	start		5053235	0					
ANR	5053295	Identifier	i		5053235	1					
ANR	5053296	Condition	str [ i ]	209:17:4419:4424	5053235	1	True				
ANR	5053297	ArrayIndexing	str [ i ]		5053235	0					
ANR	5053298	Identifier	str		5053235	0					
ANR	5053299	Identifier	i		5053235	1					
ANR	5053300	PostIncDecOperationExpression	i ++	209:25:4427:4429	5053235	2	True				
ANR	5053301	Identifier	i		5053235	0					
ANR	5053302	IncDec	++		5053235	1					
ANR	5053303	CompoundStatement		15:30:251:251	5053235	3					
ANR	5053304	IfStatement	if ( str [ i ] == '/' && str [ i - 1 ] != '\\\\' )		5053235	0					
ANR	5053305	Condition	str [ i ] == '/' && str [ i - 1 ] != '\\\\'	210:6:4440:4474	5053235	0	True				
ANR	5053306	AndExpression	str [ i ] == '/' && str [ i - 1 ] != '\\\\'		5053235	0		&&			
ANR	5053307	EqualityExpression	str [ i ] == '/'		5053235	0		==			
ANR	5053308	ArrayIndexing	str [ i ]		5053235	0					
ANR	5053309	Identifier	str		5053235	0					
ANR	5053310	Identifier	i		5053235	1					
ANR	5053311	PrimaryExpression	'/'		5053235	1					
ANR	5053312	EqualityExpression	str [ i - 1 ] != '\\\\'		5053235	1		!=			
ANR	5053313	ArrayIndexing	str [ i - 1 ]		5053235	0					
ANR	5053314	Identifier	str		5053235	0					
ANR	5053315	AdditiveExpression	i - 1		5053235	1		-			
ANR	5053316	Identifier	i		5053235	0					
ANR	5053317	PrimaryExpression	1		5053235	1					
ANR	5053318	PrimaryExpression	'\\\\'		5053235	1					
ANR	5053319	CompoundStatement		16:43:296:296	5053235	1					
ANR	5053320	BreakStatement	break ;	211:3:4482:4487	5053235	0	True				
ANR	5053321	ElseStatement	else		5053235	0					
ANR	5053322	IfStatement	if ( str [ i - 1 ] == '\\\\' && isalpha ( str [ i ] ) )		5053235	0					
ANR	5053323	Condition	str [ i - 1 ] == '\\\\' && isalpha ( str [ i ] )	212:13:4502:4539	5053235	0	True				
ANR	5053324	AndExpression	str [ i - 1 ] == '\\\\' && isalpha ( str [ i ] )		5053235	0		&&			
ANR	5053325	EqualityExpression	str [ i - 1 ] == '\\\\'		5053235	0		==			
ANR	5053326	ArrayIndexing	str [ i - 1 ]		5053235	0					
ANR	5053327	Identifier	str		5053235	0					
ANR	5053328	AdditiveExpression	i - 1		5053235	1		-			
ANR	5053329	Identifier	i		5053235	0					
ANR	5053330	PrimaryExpression	1		5053235	1					
ANR	5053331	PrimaryExpression	'\\\\'		5053235	1					
ANR	5053332	CallExpression	isalpha ( str [ i ] )		5053235	1					
ANR	5053333	Callee	isalpha		5053235	0					
ANR	5053334	Identifier	isalpha		5053235	0					
ANR	5053335	ArgumentList	str [ i ]		5053235	1					
ANR	5053336	Argument	str [ i ]		5053235	0					
ANR	5053337	ArrayIndexing	str [ i ]		5053235	0					
ANR	5053338	Identifier	str		5053235	0					
ANR	5053339	Identifier	i		5053235	1					
ANR	5053340	CompoundStatement		18:53:361:361	5053235	1					
ANR	5053341	ExpressionStatement	specials ++	213:3:4547:4557	5053235	0	True				
ANR	5053342	PostIncDecOperationExpression	specials ++		5053235	0					
ANR	5053343	Identifier	specials		5053235	0					
ANR	5053344	IncDec	++		5053235	1					
ANR	5053345	IfStatement	if ( str [ i ++ ] != '/' )		5053235	6					
ANR	5053346	Condition	str [ i ++ ] != '/'	217:5:4572:4586	5053235	0	True				
ANR	5053347	EqualityExpression	str [ i ++ ] != '/'		5053235	0		!=			
ANR	5053348	ArrayIndexing	str [ i ++ ]		5053235	0					
ANR	5053349	Identifier	str		5053235	0					
ANR	5053350	PostIncDecOperationExpression	i ++		5053235	1					
ANR	5053351	Identifier	i		5053235	0					
ANR	5053352	IncDec	++		5053235	1					
ANR	5053353	PrimaryExpression	'/'		5053235	1					
ANR	5053354	CompoundStatement		23:22:408:408	5053235	1					
ANR	5053355	ReturnStatement	return NULL ;	218:2:4593:4604	5053235	0	True				
ANR	5053356	Identifier	NULL		5053235	0					
ANR	5053357	ExpressionStatement	length = i - start - 1	221:1:4611:4633	5053235	7	True				
ANR	5053358	AssignmentExpression	length = i - start - 1		5053235	0		=			
ANR	5053359	Identifier	length		5053235	0					
ANR	5053360	AdditiveExpression	i - start - 1		5053235	1		-			
ANR	5053361	Identifier	i		5053235	0					
ANR	5053362	AdditiveExpression	start - 1		5053235	1		-			
ANR	5053363	Identifier	start		5053235	0					
ANR	5053364	PrimaryExpression	1		5053235	1					
ANR	5053365	IfStatement	if ( ( length > 128 ) || ( length < 1 ) )		5053235	8					
ANR	5053366	Condition	( length > 128 ) || ( length < 1 )	222:5:4640:4669	5053235	0	True				
ANR	5053367	OrExpression	( length > 128 ) || ( length < 1 )		5053235	0		||			
ANR	5053368	RelationalExpression	length > 128		5053235	0		>			
ANR	5053369	Identifier	length		5053235	0					
ANR	5053370	PrimaryExpression	128		5053235	1					
ANR	5053371	RelationalExpression	length < 1		5053235	1		<			
ANR	5053372	Identifier	length		5053235	0					
ANR	5053373	PrimaryExpression	1		5053235	1					
ANR	5053374	CompoundStatement		28:37:491:491	5053235	1					
ANR	5053375	ReturnStatement	return NULL ;	223:2:4676:4687	5053235	0	True				
ANR	5053376	Identifier	NULL		5053235	0					
ANR	5053377	ExpressionStatement	kw = R_NEW0 ( RSearchKeyword )	226:1:4694:4721	5053235	9	True				
ANR	5053378	AssignmentExpression	kw = R_NEW0 ( RSearchKeyword )		5053235	0		=			
ANR	5053379	Identifier	kw		5053235	0					
ANR	5053380	CallExpression	R_NEW0 ( RSearchKeyword )		5053235	1					
ANR	5053381	Callee	R_NEW0		5053235	0					
ANR	5053382	Identifier	R_NEW0		5053235	0					
ANR	5053383	ArgumentList	RSearchKeyword		5053235	1					
ANR	5053384	Argument	RSearchKeyword		5053235	0					
ANR	5053385	Identifier	RSearchKeyword		5053235	0					
ANR	5053386	IfStatement	if ( ! kw )		5053235	10					
ANR	5053387	Condition	! kw	227:5:4728:4730	5053235	0	True				
ANR	5053388	UnaryOperationExpression	! kw		5053235	0					
ANR	5053389	UnaryOperator	!		5053235	0					
ANR	5053390	Identifier	kw		5053235	1					
ANR	5053391	CompoundStatement		33:10:552:552	5053235	1					
ANR	5053392	ReturnStatement	return NULL ;	228:2:4737:4748	5053235	0	True				
ANR	5053393	Identifier	NULL		5053235	0					
ANR	5053394	ExpressionStatement	kw -> bin_keyword = malloc ( length + 1 )	231:1:4755:4790	5053235	11	True				
ANR	5053395	AssignmentExpression	kw -> bin_keyword = malloc ( length + 1 )		5053235	0		=			
ANR	5053396	PtrMemberAccess	kw -> bin_keyword		5053235	0					
ANR	5053397	Identifier	kw		5053235	0					
ANR	5053398	Identifier	bin_keyword		5053235	1					
ANR	5053399	CallExpression	malloc ( length + 1 )		5053235	1					
ANR	5053400	Callee	malloc		5053235	0					
ANR	5053401	Identifier	malloc		5053235	0					
ANR	5053402	ArgumentList	length + 1		5053235	1					
ANR	5053403	Argument	length + 1		5053235	0					
ANR	5053404	AdditiveExpression	length + 1		5053235	0		+			
ANR	5053405	Identifier	length		5053235	0					
ANR	5053406	PrimaryExpression	1		5053235	1					
ANR	5053407	IfStatement	if ( ! kw -> bin_keyword )		5053235	12					
ANR	5053408	Condition	! kw -> bin_keyword	232:5:4797:4812	5053235	0	True				
ANR	5053409	UnaryOperationExpression	! kw -> bin_keyword		5053235	0					
ANR	5053410	UnaryOperator	!		5053235	0					
ANR	5053411	PtrMemberAccess	kw -> bin_keyword		5053235	1					
ANR	5053412	Identifier	kw		5053235	0					
ANR	5053413	Identifier	bin_keyword		5053235	1					
ANR	5053414	CompoundStatement		38:23:634:634	5053235	1					
ANR	5053415	ExpressionStatement	r_search_keyword_free ( kw )	233:2:4819:4845	5053235	0	True				
ANR	5053416	CallExpression	r_search_keyword_free ( kw )		5053235	0					
ANR	5053417	Callee	r_search_keyword_free		5053235	0					
ANR	5053418	Identifier	r_search_keyword_free		5053235	0					
ANR	5053419	ArgumentList	kw		5053235	1					
ANR	5053420	Argument	kw		5053235	0					
ANR	5053421	Identifier	kw		5053235	0					
ANR	5053422	ReturnStatement	return NULL ;	234:2:4849:4860	5053235	1	True				
ANR	5053423	Identifier	NULL		5053235	0					
ANR	5053424	ExpressionStatement	kw -> bin_keyword [ length ] = 0	237:1:4867:4892	5053235	13	True				
ANR	5053425	AssignmentExpression	kw -> bin_keyword [ length ] = 0		5053235	0		=			
ANR	5053426	ArrayIndexing	kw -> bin_keyword [ length ]		5053235	0					
ANR	5053427	PtrMemberAccess	kw -> bin_keyword		5053235	0					
ANR	5053428	Identifier	kw		5053235	0					
ANR	5053429	Identifier	bin_keyword		5053235	1					
ANR	5053430	Identifier	length		5053235	1					
ANR	5053431	PrimaryExpression	0		5053235	1					
ANR	5053432	ExpressionStatement	"memcpy ( kw -> bin_keyword , str + start , length )"	238:1:4895:4939	5053235	14	True				
ANR	5053433	CallExpression	"memcpy ( kw -> bin_keyword , str + start , length )"		5053235	0					
ANR	5053434	Callee	memcpy		5053235	0					
ANR	5053435	Identifier	memcpy		5053235	0					
ANR	5053436	ArgumentList	kw -> bin_keyword		5053235	1					
ANR	5053437	Argument	kw -> bin_keyword		5053235	0					
ANR	5053438	PtrMemberAccess	kw -> bin_keyword		5053235	0					
ANR	5053439	Identifier	kw		5053235	0					
ANR	5053440	Identifier	bin_keyword		5053235	1					
ANR	5053441	Argument	str + start		5053235	1					
ANR	5053442	AdditiveExpression	str + start		5053235	0		+			
ANR	5053443	Identifier	str		5053235	0					
ANR	5053444	Identifier	start		5053235	1					
ANR	5053445	Argument	length		5053235	2					
ANR	5053446	Identifier	length		5053235	0					
ANR	5053447	ExpressionStatement	kw -> keyword_length = length - specials	239:1:4942:4980	5053235	15	True				
ANR	5053448	AssignmentExpression	kw -> keyword_length = length - specials		5053235	0		=			
ANR	5053449	PtrMemberAccess	kw -> keyword_length		5053235	0					
ANR	5053450	Identifier	kw		5053235	0					
ANR	5053451	Identifier	keyword_length		5053235	1					
ANR	5053452	AdditiveExpression	length - specials		5053235	1		-			
ANR	5053453	Identifier	length		5053235	0					
ANR	5053454	Identifier	specials		5053235	1					
ANR	5053455	ExpressionStatement	kw -> type = R_SEARCH_KEYWORD_TYPE_STRING	240:1:4983:5022	5053235	16	True				
ANR	5053456	AssignmentExpression	kw -> type = R_SEARCH_KEYWORD_TYPE_STRING		5053235	0		=			
ANR	5053457	PtrMemberAccess	kw -> type		5053235	0					
ANR	5053458	Identifier	kw		5053235	0					
ANR	5053459	Identifier	type		5053235	1					
ANR	5053460	Identifier	R_SEARCH_KEYWORD_TYPE_STRING		5053235	1					
ANR	5053461	ExpressionStatement	kw -> data = ( void * ) data	241:1:5025:5049	5053235	17	True				
ANR	5053462	AssignmentExpression	kw -> data = ( void * ) data		5053235	0		=			
ANR	5053463	PtrMemberAccess	kw -> data		5053235	0					
ANR	5053464	Identifier	kw		5053235	0					
ANR	5053465	Identifier	data		5053235	1					
ANR	5053466	CastExpression	( void * ) data		5053235	1					
ANR	5053467	CastTarget	void *		5053235	0					
ANR	5053468	Identifier	data		5053235	1					
ANR	5053469	ForStatement	for ( ; str [ i ] ; i ++ )		5053235	18					
ANR	5053470	Condition	str [ i ]	244:8:5085:5090	5053235	0	True				
ANR	5053471	ArrayIndexing	str [ i ]		5053235	0					
ANR	5053472	Identifier	str		5053235	0					
ANR	5053473	Identifier	i		5053235	1					
ANR	5053474	PostIncDecOperationExpression	i ++	244:16:5093:5095	5053235	1	True				
ANR	5053475	Identifier	i		5053235	0					
ANR	5053476	IncDec	++		5053235	1					
ANR	5053477	CompoundStatement		50:21:917:917	5053235	2					
ANR	5053478	SwitchStatement	switch ( str [ i ] )		5053235	0					
ANR	5053479	Condition	str [ i ]	245:10:5110:5115	5053235	0	True				
ANR	5053480	ArrayIndexing	str [ i ]		5053235	0					
ANR	5053481	Identifier	str		5053235	0					
ANR	5053482	Identifier	i		5053235	1					
ANR	5053483	CompoundStatement		51:18:937:937	5053235	1					
ANR	5053484	Label	case 'i' :	246:3:5123:5131	5053235	0	True				
ANR	5053485	ExpressionStatement	kw -> icase = true	247:4:5137:5153	5053235	1	True				
ANR	5053486	AssignmentExpression	kw -> icase = true		5053235	0		=			
ANR	5053487	PtrMemberAccess	kw -> icase		5053235	0					
ANR	5053488	Identifier	kw		5053235	0					
ANR	5053489	Identifier	icase		5053235	1					
ANR	5053490	Identifier	true		5053235	1					
ANR	5053491	BreakStatement	break ;	248:4:5159:5164	5053235	2	True				
ANR	5053492	Label	default :	249:3:5169:5176	5053235	3	True				
ANR	5053493	Identifier	default		5053235	0					
ANR	5053494	ExpressionStatement	r_search_keyword_free ( kw )	250:4:5182:5208	5053235	4	True				
ANR	5053495	CallExpression	r_search_keyword_free ( kw )		5053235	0					
ANR	5053496	Callee	r_search_keyword_free		5053235	0					
ANR	5053497	Identifier	r_search_keyword_free		5053235	0					
ANR	5053498	ArgumentList	kw		5053235	1					
ANR	5053499	Argument	kw		5053235	0					
ANR	5053500	Identifier	kw		5053235	0					
ANR	5053501	ReturnStatement	return NULL ;	251:4:5214:5225	5053235	5	True				
ANR	5053502	Identifier	NULL		5053235	0					
ANR	5053503	ReturnStatement	return kw ;	255:1:5236:5245	5053235	19	True				
ANR	5053504	Identifier	kw		5053235	0					
ANR	5053505	ReturnType	R_API RSearchKeyword *		5053235	1					
ANR	5053506	Identifier	r_search_keyword_new_regexp		5053235	2					
ANR	5053507	ParameterList	"const char * str , const char * data"		5053235	3					
ANR	5053508	Parameter	const char * str	195:51:4145:4159	5053235	0	True				
ANR	5053509	ParameterType	const char *		5053235	0					
ANR	5053510	Identifier	str		5053235	1					
ANR	5053511	Parameter	const char * data	195:68:4162:4177	5053235	1	True				
ANR	5053512	ParameterType	const char *		5053235	0					
ANR	5053513	Identifier	data		5053235	1					
ANR	5053514	CFGEntryNode	ENTRY		5053235		True				
ANR	5053515	CFGExitNode	EXIT		5053235		True				
ANR	5053516	Symbol	R_SEARCH_KEYWORD_TYPE_STRING		5053235						
ANR	5053517	Symbol	isalpha		5053235						
ANR	5053518	Symbol	data		5053235						
ANR	5053519	Symbol	specials		5053235						
ANR	5053520	Symbol	* length		5053235						
ANR	5053521	Symbol	* * kw		5053235						
ANR	5053522	Symbol	* str		5053235						
ANR	5053523	Symbol	kw -> data		5053235						
ANR	5053524	Symbol	malloc		5053235						
ANR	5053525	Symbol	NULL		5053235						
ANR	5053526	Symbol	length		5053235						
ANR	5053527	Symbol	start		5053235						
ANR	5053528	Symbol	isspace		5053235						
ANR	5053529	Symbol	i		5053235						
ANR	5053530	Symbol	kw		5053235						
ANR	5053531	Symbol	kw -> icase		5053235						
ANR	5053532	Symbol	str		5053235						
ANR	5053533	Symbol	* kw -> bin_keyword		5053235						
ANR	5053534	Symbol	kw -> type		5053235						
ANR	5053535	Symbol	R_NEW0		5053235						
ANR	5053536	Symbol	* kw		5053235						
ANR	5053537	Symbol	* i		5053235						
ANR	5053538	Symbol	kw -> bin_keyword		5053235						
ANR	5053539	Symbol	kw -> keyword_length		5053235						
ANR	5053540	Symbol	true		5053235						
ANR	5053541	Symbol	RSearchKeyword		5053235						
