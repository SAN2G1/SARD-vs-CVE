command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	370186	File	data/converged/CVE-2019-16718~_radare2/armass64.c								
ANR	370187	ClassDef	optype_t	9:8:160:265							
ANR	370188	DeclStmt									
ANR	370189	Decl							optype_t	optype_t	OpType
ANR	370190	ClassDef	regtype_t	17:8:276:396							
ANR	370191	DeclStmt									
ANR	370192	Decl							regtype_t	regtype_t	RegType
ANR	370193	ClassDef	shifttype_t	26:8:407:498							
ANR	370194	DeclStmt									
ANR	370195	Decl							shifttype_t	shifttype_t	ShiftType
ANR	370196	ClassDef	operand_t	33:8:509:771							
ANR	370197	DeclStmt									
ANR	370198	Decl							OpType	OpType	type
ANR	370199	ClassDef	<unnamed>	35:1:543:759							
ANR	370200	ClassDef	<unnamed>	36:2:553:613							
ANR	370201	DeclStmt									
ANR	370202	Decl							int	int	reg
ANR	370203	DeclStmt									
ANR	370204	Decl							RegType	RegType	reg_type
ANR	370205	DeclStmt									
ANR	370206	Decl							ut16	ut16	sp_val
ANR	370207	ClassDef	<unnamed>	41:2:618:661							
ANR	370208	DeclStmt									
ANR	370209	Decl							ut64	ut64	immediate
ANR	370210	DeclStmt									
ANR	370211	Decl							int	int	sign
ANR	370212	ClassDef	<unnamed>	45:2:666:719							
ANR	370213	DeclStmt									
ANR	370214	Decl							ut64	ut64	shift_amount
ANR	370215	DeclStmt									
ANR	370216	Decl							ShiftType	ShiftType	shift
ANR	370217	ClassDef	<unnamed>	49:2:724:755							
ANR	370218	DeclStmt									
ANR	370219	Decl							ut32	ut32	mem_option
ANR	370220	DeclStmt									
ANR	370221	Decl							operand_t	operand_t	Operand
ANR	370222	ClassDef	Opcode_t	57:8:806:947							
ANR	370223	DeclStmt									
ANR	370224	Decl							char	char *	mnemonic
ANR	370225	DeclStmt									
ANR	370226	Decl							ut32	ut32 [ 3 ]	op
ANR	370227	DeclStmt									
ANR	370228	Decl							size_t	size_t	op_len
ANR	370229	DeclStmt									
ANR	370230	Decl							ut8	ut8 [ 3 ]	opcode
ANR	370231	DeclStmt									
ANR	370232	Decl							int	int	operands_count
ANR	370233	DeclStmt									
ANR	370234	Decl							Operand	Operand [ MAX_OPERANDS ]	operands
ANR	370235	DeclStmt									
ANR	370236	Decl							Opcode_t	Opcode_t	ArmOp
ANR	370237	Function	get_mem_option	66:0:950:1359							
ANR	370238	FunctionDef	get_mem_option (char * token)		370237	0					
ANR	370239	CompoundStatement		66:39:989:1359	370237	0					
ANR	370240	IdentifierDeclStatement	"const char * options [ ] = { ""sy"" , ""st"" , ""ld"" , ""xxx"" , ""ish"" , ""ishst"" , ""ishld"" , ""xxx"" , ""nsh"" , ""nshst"" , ""nshld"" , ""xxx"" , ""osh"" , ""oshst"" , ""oshld"" , NULL } ;"	68:1:1039:1235	370237	0	True				
ANR	370241	IdentifierDecl	"* options [ ] = { ""sy"" , ""st"" , ""ld"" , ""xxx"" , ""ish"" , ""ishst"" , ""ishld"" , ""xxx"" , ""nsh"" , ""nshst"" , ""nshld"" , ""xxx"" , ""osh"" , ""oshst"" , ""oshld"" , NULL }"		370237	0					
ANR	370242	IdentifierDeclType	const char * [ ]		370237	0					
ANR	370243	Identifier	options		370237	1					
ANR	370244	AssignmentExpression	"* options [ ] = { ""sy"" , ""st"" , ""ld"" , ""xxx"" , ""ish"" , ""ishst"" , ""ishld"" , ""xxx"" , ""nsh"" , ""nshst"" , ""nshld"" , ""xxx"" , ""osh"" , ""oshst"" , ""oshld"" , NULL }"		370237	2		=			
ANR	370245	Identifier	options		370237	0					
ANR	370246	InitializerList	"""sy"""		370237	1					
ANR	370247	PrimaryExpression	"""sy"""		370237	0					
ANR	370248	PrimaryExpression	"""st"""		370237	1					
ANR	370249	PrimaryExpression	"""ld"""		370237	2					
ANR	370250	PrimaryExpression	"""xxx"""		370237	3					
ANR	370251	PrimaryExpression	"""ish"""		370237	4					
ANR	370252	PrimaryExpression	"""ishst"""		370237	5					
ANR	370253	PrimaryExpression	"""ishld"""		370237	6					
ANR	370254	PrimaryExpression	"""xxx"""		370237	7					
ANR	370255	PrimaryExpression	"""nsh"""		370237	8					
ANR	370256	PrimaryExpression	"""nshst"""		370237	9					
ANR	370257	PrimaryExpression	"""nshld"""		370237	10					
ANR	370258	PrimaryExpression	"""xxx"""		370237	11					
ANR	370259	PrimaryExpression	"""osh"""		370237	12					
ANR	370260	PrimaryExpression	"""oshst"""		370237	13					
ANR	370261	PrimaryExpression	"""oshld"""		370237	14					
ANR	370262	Identifier	NULL		370237	15					
ANR	370263	IdentifierDeclStatement	int i = 0 ;	71:1:1238:1247	370237	1	True				
ANR	370264	IdentifierDecl	i = 0		370237	0					
ANR	370265	IdentifierDeclType	int		370237	0					
ANR	370266	Identifier	i		370237	1					
ANR	370267	AssignmentExpression	i = 0		370237	2		=			
ANR	370268	Identifier	i		370237	0					
ANR	370269	PrimaryExpression	0		370237	1					
ANR	370270	WhileStatement	while ( options [ i ] )		370237	2					
ANR	370271	Condition	options [ i ]	72:8:1257:1266	370237	0	True				
ANR	370272	ArrayIndexing	options [ i ]		370237	0					
ANR	370273	Identifier	options		370237	0					
ANR	370274	Identifier	i		370237	1					
ANR	370275	CompoundStatement		7:20:279:279	370237	1					
ANR	370276	IfStatement	"if ( ! r_str_casecmp ( token , options [ i ] ) )"		370237	0					
ANR	370277	Condition	"! r_str_casecmp ( token , options [ i ] )"	73:6:1277:1310	370237	0	True				
ANR	370278	UnaryOperationExpression	"! r_str_casecmp ( token , options [ i ] )"		370237	0					
ANR	370279	UnaryOperator	!		370237	0					
ANR	370280	CallExpression	"r_str_casecmp ( token , options [ i ] )"		370237	1					
ANR	370281	Callee	r_str_casecmp		370237	0					
ANR	370282	Identifier	r_str_casecmp		370237	0					
ANR	370283	ArgumentList	token		370237	1					
ANR	370284	Argument	token		370237	0					
ANR	370285	Identifier	token		370237	0					
ANR	370286	Argument	options [ i ]		370237	1					
ANR	370287	ArrayIndexing	options [ i ]		370237	0					
ANR	370288	Identifier	options		370237	0					
ANR	370289	Identifier	i		370237	1					
ANR	370290	CompoundStatement		8:42:323:323	370237	1					
ANR	370291	ReturnStatement	return 15 - i ;	74:3:1318:1331	370237	0	True				
ANR	370292	AdditiveExpression	15 - i		370237	0		-			
ANR	370293	PrimaryExpression	15		370237	0					
ANR	370294	Identifier	i		370237	1					
ANR	370295	ExpressionStatement	i ++	76:2:1339:1342	370237	1	True				
ANR	370296	PostIncDecOperationExpression	i ++		370237	0					
ANR	370297	Identifier	i		370237	0					
ANR	370298	IncDec	++		370237	1					
ANR	370299	ReturnStatement	return - 1 ;	78:1:1348:1357	370237	3	True				
ANR	370300	UnaryOperationExpression	- 1		370237	0					
ANR	370301	UnaryOperator	-		370237	0					
ANR	370302	PrimaryExpression	1		370237	1					
ANR	370303	ReturnType	static int		370237	1					
ANR	370304	Identifier	get_mem_option		370237	2					
ANR	370305	ParameterList	char * token		370237	3					
ANR	370306	Parameter	char * token	66:26:976:986	370237	0	True				
ANR	370307	ParameterType	char *		370237	0					
ANR	370308	Identifier	token		370237	1					
ANR	370309	CFGEntryNode	ENTRY		370237		True				
ANR	370310	CFGExitNode	EXIT		370237		True				
ANR	370311	Symbol	NULL		370237						
ANR	370312	Symbol	* i		370237						
ANR	370313	Symbol	options		370237						
ANR	370314	Symbol	i		370237						
ANR	370315	Symbol	* options		370237						
ANR	370316	Symbol	token		370237						
ANR	370317	Symbol	r_str_casecmp		370237						
ANR	370318	Function	countLeadingZeros	81:0:1362:1470							
ANR	370319	FunctionDef	countLeadingZeros (ut32 x)		370318	0					
ANR	370320	CompoundStatement		81:37:1399:1470	370318	0					
ANR	370321	IdentifierDeclStatement	int count = 0 ;	82:1:1402:1415	370318	0	True				
ANR	370322	IdentifierDecl	count = 0		370318	0					
ANR	370323	IdentifierDeclType	int		370318	0					
ANR	370324	Identifier	count		370318	1					
ANR	370325	AssignmentExpression	count = 0		370318	2		=			
ANR	370326	Identifier	count		370318	0					
ANR	370327	PrimaryExpression	0		370318	1					
ANR	370328	WhileStatement	while ( x )		370318	1					
ANR	370329	Condition	x	83:8:1425:1425	370318	0	True				
ANR	370330	Identifier	x		370318	0					
ANR	370331	CompoundStatement		3:11:28:28	370318	1					
ANR	370332	ExpressionStatement	x >>= 1	84:2:1432:1439	370318	0	True				
ANR	370333	AssignmentExpression	x >>= 1		370318	0		>>=			
ANR	370334	Identifier	x		370318	0					
ANR	370335	PrimaryExpression	1		370318	1					
ANR	370336	ExpressionStatement	-- count	85:2:1443:1450	370318	1	True				
ANR	370337	UnaryExpression	-- count		370318	0					
ANR	370338	IncDec	--		370318	0					
ANR	370339	Identifier	count		370318	1					
ANR	370340	ReturnStatement	return count ;	87:1:1456:1468	370318	2	True				
ANR	370341	Identifier	count		370318	0					
ANR	370342	ReturnType	static int		370318	1					
ANR	370343	Identifier	countLeadingZeros		370318	2					
ANR	370344	ParameterList	ut32 x		370318	3					
ANR	370345	Parameter	ut32 x	81:29:1391:1396	370318	0	True				
ANR	370346	ParameterType	ut32		370318	0					
ANR	370347	Identifier	x		370318	1					
ANR	370348	CFGEntryNode	ENTRY		370318		True				
ANR	370349	CFGExitNode	EXIT		370318		True				
ANR	370350	Symbol	x		370318						
ANR	370351	Symbol	count		370318						
ANR	370352	Function	countTrailingZeros	90:0:1473:1639							
ANR	370353	FunctionDef	countTrailingZeros (ut32 x)		370352	0					
ANR	370354	CompoundStatement		90:38:1511:1639	370352	0					
ANR	370355	IdentifierDeclStatement	int count = 0 ;	91:1:1514:1527	370352	0	True				
ANR	370356	IdentifierDecl	count = 0		370352	0					
ANR	370357	IdentifierDeclType	int		370352	0					
ANR	370358	Identifier	count		370352	1					
ANR	370359	AssignmentExpression	count = 0		370352	2		=			
ANR	370360	Identifier	count		370352	0					
ANR	370361	PrimaryExpression	0		370352	1					
ANR	370362	WhileStatement	while ( x > 0 )		370352	1					
ANR	370363	Condition	x > 0	92:8:1537:1541	370352	0	True				
ANR	370364	RelationalExpression	x > 0		370352	0		>			
ANR	370365	Identifier	x		370352	0					
ANR	370366	PrimaryExpression	0		370352	1					
ANR	370367	CompoundStatement		3:15:32:32	370352	1					
ANR	370368	IfStatement	if ( ( x & 1 ) == 1 )		370352	0					
ANR	370369	Condition	( x & 1 ) == 1	93:6:1552:1563	370352	0	True				
ANR	370370	EqualityExpression	( x & 1 ) == 1		370352	0		==			
ANR	370371	BitAndExpression	x & 1		370352	0		&			
ANR	370372	Identifier	x		370352	0					
ANR	370373	PrimaryExpression	1		370352	1					
ANR	370374	PrimaryExpression	1		370352	1					
ANR	370375	CompoundStatement		4:20:54:54	370352	1					
ANR	370376	BreakStatement	break ;	94:3:1571:1576	370352	0	True				
ANR	370377	ElseStatement	else		370352	0					
ANR	370378	CompoundStatement		6:9:75:75	370352	0					
ANR	370379	ExpressionStatement	count ++	96:3:1592:1600	370352	0	True				
ANR	370380	PostIncDecOperationExpression	count ++		370352	0					
ANR	370381	Identifier	count		370352	0					
ANR	370382	IncDec	++		370352	1					
ANR	370383	ExpressionStatement	x = x >> 1	97:3:1605:1615	370352	1	True				
ANR	370384	AssignmentExpression	x = x >> 1		370352	0		=			
ANR	370385	Identifier	x		370352	0					
ANR	370386	ShiftExpression	x >> 1		370352	1		>>			
ANR	370387	Identifier	x		370352	0					
ANR	370388	PrimaryExpression	1		370352	1					
ANR	370389	ReturnStatement	return count ;	100:1:1625:1637	370352	2	True				
ANR	370390	Identifier	count		370352	0					
ANR	370391	ReturnType	static int		370352	1					
ANR	370392	Identifier	countTrailingZeros		370352	2					
ANR	370393	ParameterList	ut32 x		370352	3					
ANR	370394	Parameter	ut32 x	90:30:1503:1508	370352	0	True				
ANR	370395	ParameterType	ut32		370352	0					
ANR	370396	Identifier	x		370352	1					
ANR	370397	CFGEntryNode	ENTRY		370352		True				
ANR	370398	CFGExitNode	EXIT		370352		True				
ANR	370399	Symbol	x		370352						
ANR	370400	Symbol	count		370352						
ANR	370401	Function	calcNegOffset	103:0:1642:2012							
ANR	370402	FunctionDef	"calcNegOffset (int n , int shift)"		370401	0					
ANR	370403	CompoundStatement		103:43:1685:2012	370401	0					
ANR	370404	IdentifierDeclStatement	int a = n >> shift ;	104:1:1688:1706	370401	0	True				
ANR	370405	IdentifierDecl	a = n >> shift		370401	0					
ANR	370406	IdentifierDeclType	int		370401	0					
ANR	370407	Identifier	a		370401	1					
ANR	370408	AssignmentExpression	a = n >> shift		370401	2		=			
ANR	370409	Identifier	a		370401	0					
ANR	370410	ShiftExpression	n >> shift		370401	1		>>			
ANR	370411	Identifier	n		370401	0					
ANR	370412	Identifier	shift		370401	1					
ANR	370413	IfStatement	if ( a == 0 )		370401	1					
ANR	370414	Condition	a == 0	105:5:1713:1718	370401	0	True				
ANR	370415	EqualityExpression	a == 0		370401	0		==			
ANR	370416	Identifier	a		370401	0					
ANR	370417	PrimaryExpression	0		370401	1					
ANR	370418	CompoundStatement		3:13:35:35	370401	1					
ANR	370419	ReturnStatement	return 0xff ;	106:2:1725:1736	370401	0	True				
ANR	370420	PrimaryExpression	0xff		370401	0					
ANR	370421	IdentifierDeclStatement	int t = 0x400 ;	110:1:1806:1819	370401	2	True				
ANR	370422	IdentifierDecl	t = 0x400		370401	0					
ANR	370423	IdentifierDeclType	int		370401	0					
ANR	370424	Identifier	t		370401	1					
ANR	370425	AssignmentExpression	t = 0x400		370401	2		=			
ANR	370426	Identifier	t		370401	0					
ANR	370427	PrimaryExpression	0x400		370401	1					
ANR	370428	WhileStatement	while ( ! ( t & a ) && a != 0 && t != 0 )		370401	3					
ANR	370429	Condition	! ( t & a ) && a != 0 && t != 0	111:8:1829:1856	370401	0	True				
ANR	370430	AndExpression	! ( t & a ) && a != 0 && t != 0		370401	0		&&			
ANR	370431	UnaryOperationExpression	! ( t & a )		370401	0					
ANR	370432	UnaryOperator	!		370401	0					
ANR	370433	BitAndExpression	t & a		370401	1		&			
ANR	370434	Identifier	t		370401	0					
ANR	370435	Identifier	a		370401	1					
ANR	370436	AndExpression	a != 0 && t != 0		370401	1		&&			
ANR	370437	EqualityExpression	a != 0		370401	0		!=			
ANR	370438	Identifier	a		370401	0					
ANR	370439	PrimaryExpression	0		370401	1					
ANR	370440	EqualityExpression	t != 0		370401	1		!=			
ANR	370441	Identifier	t		370401	0					
ANR	370442	PrimaryExpression	0		370401	1					
ANR	370443	CompoundStatement		9:38:173:173	370401	1					
ANR	370444	ExpressionStatement	t = t >> 1	112:2:1863:1873	370401	0	True				
ANR	370445	AssignmentExpression	t = t >> 1		370401	0		=			
ANR	370446	Identifier	t		370401	0					
ANR	370447	ShiftExpression	t >> 1		370401	1		>>			
ANR	370448	Identifier	t		370401	0					
ANR	370449	PrimaryExpression	1		370401	1					
ANR	370450	ExpressionStatement	t = t & ( t - 1 )	114:1:1879:1894	370401	4	True				
ANR	370451	AssignmentExpression	t = t & ( t - 1 )		370401	0		=			
ANR	370452	Identifier	t		370401	0					
ANR	370453	BitAndExpression	t & ( t - 1 )		370401	1		&			
ANR	370454	Identifier	t		370401	0					
ANR	370455	AdditiveExpression	t - 1		370401	1		-			
ANR	370456	Identifier	t		370401	0					
ANR	370457	PrimaryExpression	1		370401	1					
ANR	370458	ExpressionStatement	a = a ^ t	115:1:1897:1906	370401	5	True				
ANR	370459	AssignmentExpression	a = a ^ t		370401	0		=			
ANR	370460	Identifier	a		370401	0					
ANR	370461	ExclusiveOrExpression	a ^ t		370401	1		^			
ANR	370462	Identifier	a		370401	0					
ANR	370463	Identifier	t		370401	1					
ANR	370464	IfStatement	if ( countTrailingZeros ( n ) > shift )		370401	6					
ANR	370465	Condition	countTrailingZeros ( n ) > shift	117:5:1942:1970	370401	0	True				
ANR	370466	RelationalExpression	countTrailingZeros ( n ) > shift		370401	0		>			
ANR	370467	CallExpression	countTrailingZeros ( n )		370401	0					
ANR	370468	Callee	countTrailingZeros		370401	0					
ANR	370469	Identifier	countTrailingZeros		370401	0					
ANR	370470	ArgumentList	n		370401	1					
ANR	370471	Argument	n		370401	0					
ANR	370472	Identifier	n		370401	0					
ANR	370473	Identifier	shift		370401	1					
ANR	370474	CompoundStatement		15:36:287:287	370401	1					
ANR	370475	ExpressionStatement	a --	118:2:1977:1980	370401	0	True				
ANR	370476	PostIncDecOperationExpression	a --		370401	0					
ANR	370477	Identifier	a		370401	0					
ANR	370478	IncDec	--		370401	1					
ANR	370479	ReturnStatement	return 0xff & ( 0xff - a ) ;	120:1:1986:2010	370401	7	True				
ANR	370480	BitAndExpression	0xff & ( 0xff - a )		370401	0		&			
ANR	370481	PrimaryExpression	0xff		370401	0					
ANR	370482	AdditiveExpression	0xff - a		370401	1		-			
ANR	370483	PrimaryExpression	0xff		370401	0					
ANR	370484	Identifier	a		370401	1					
ANR	370485	ReturnType	static int		370401	1					
ANR	370486	Identifier	calcNegOffset		370401	2					
ANR	370487	ParameterList	"int n , int shift"		370401	3					
ANR	370488	Parameter	int n	103:25:1667:1671	370401	0	True				
ANR	370489	ParameterType	int		370401	0					
ANR	370490	Identifier	n		370401	1					
ANR	370491	Parameter	int shift	103:32:1674:1682	370401	1	True				
ANR	370492	ParameterType	int		370401	0					
ANR	370493	Identifier	shift		370401	1					
ANR	370494	CFGEntryNode	ENTRY		370401		True				
ANR	370495	CFGExitNode	EXIT		370401		True				
ANR	370496	Symbol	a		370401						
ANR	370497	Symbol	countTrailingZeros		370401						
ANR	370498	Symbol	t		370401						
ANR	370499	Symbol	shift		370401						
ANR	370500	Symbol	n		370401						
ANR	370501	Function	countLeadingOnes	123:0:2015:2085							
ANR	370502	FunctionDef	countLeadingOnes (ut32 x)		370501	0					
ANR	370503	CompoundStatement		123:36:2051:2085	370501	0					
ANR	370504	ReturnStatement	return countLeadingZeros ( ~x ) ;	124:1:2054:2083	370501	0	True				
ANR	370505	CallExpression	countLeadingZeros ( ~x )		370501	0					
ANR	370506	Callee	countLeadingZeros		370501	0					
ANR	370507	Identifier	countLeadingZeros		370501	0					
ANR	370508	ArgumentList	~x		370501	1					
ANR	370509	Argument	~x		370501	0					
ANR	370510	Identifier	~x		370501	0					
ANR	370511	ReturnType	static int		370501	1					
ANR	370512	Identifier	countLeadingOnes		370501	2					
ANR	370513	ParameterList	ut32 x		370501	3					
ANR	370514	Parameter	ut32 x	123:28:2043:2048	370501	0	True				
ANR	370515	ParameterType	ut32		370501	0					
ANR	370516	Identifier	x		370501	1					
ANR	370517	CFGEntryNode	ENTRY		370501		True				
ANR	370518	CFGExitNode	EXIT		370501		True				
ANR	370519	Symbol	x		370501						
ANR	370520	Symbol	~x		370501						
ANR	370521	Symbol	countLeadingZeros		370501						
ANR	370522	Function	countTrailingOnes	127:0:2088:2160							
ANR	370523	FunctionDef	countTrailingOnes (ut32 x)		370522	0					
ANR	370524	CompoundStatement		127:37:2125:2160	370522	0					
ANR	370525	ReturnStatement	return countTrailingZeros ( ~x ) ;	128:1:2128:2158	370522	0	True				
ANR	370526	CallExpression	countTrailingZeros ( ~x )		370522	0					
ANR	370527	Callee	countTrailingZeros		370522	0					
ANR	370528	Identifier	countTrailingZeros		370522	0					
ANR	370529	ArgumentList	~x		370522	1					
ANR	370530	Argument	~x		370522	0					
ANR	370531	Identifier	~x		370522	0					
ANR	370532	ReturnType	static int		370522	1					
ANR	370533	Identifier	countTrailingOnes		370522	2					
ANR	370534	ParameterList	ut32 x		370522	3					
ANR	370535	Parameter	ut32 x	127:29:2117:2122	370522	0	True				
ANR	370536	ParameterType	ut32		370522	0					
ANR	370537	Identifier	x		370522	1					
ANR	370538	CFGEntryNode	ENTRY		370522		True				
ANR	370539	CFGExitNode	EXIT		370522		True				
ANR	370540	Symbol	countTrailingZeros		370522						
ANR	370541	Symbol	x		370522						
ANR	370542	Symbol	~x		370522						
ANR	370543	Function	isMask	131:0:2163:2242							
ANR	370544	FunctionDef	isMask (ut32 value)		370543	0					
ANR	370545	CompoundStatement		131:31:2194:2242	370543	0					
ANR	370546	ReturnStatement	return value && ( ( value + 1 ) & value ) == 0 ;	132:2:2198:2240	370543	0	True				
ANR	370547	AndExpression	value && ( ( value + 1 ) & value ) == 0		370543	0		&&			
ANR	370548	Identifier	value		370543	0					
ANR	370549	EqualityExpression	( ( value + 1 ) & value ) == 0		370543	1		==			
ANR	370550	BitAndExpression	( value + 1 ) & value		370543	0		&			
ANR	370551	AdditiveExpression	value + 1		370543	0		+			
ANR	370552	Identifier	value		370543	0					
ANR	370553	PrimaryExpression	1		370543	1					
ANR	370554	Identifier	value		370543	1					
ANR	370555	PrimaryExpression	0		370543	1					
ANR	370556	ReturnType	static bool		370543	1					
ANR	370557	Identifier	isMask		370543	2					
ANR	370558	ParameterList	ut32 value		370543	3					
ANR	370559	Parameter	ut32 value	131:19:2182:2191	370543	0	True				
ANR	370560	ParameterType	ut32		370543	0					
ANR	370561	Identifier	value		370543	1					
ANR	370562	CFGEntryNode	ENTRY		370543		True				
ANR	370563	CFGExitNode	EXIT		370543		True				
ANR	370564	Symbol	value		370543						
ANR	370565	Function	isShiftedMask	135:0:2245:2334							
ANR	370566	FunctionDef	isShiftedMask (ut32 value)		370565	0					
ANR	370567	CompoundStatement		135:39:2284:2334	370565	0					
ANR	370568	ReturnStatement	return value && isMask ( ( value - 1 ) | value ) ;	136:2:2288:2332	370565	0	True				
ANR	370569	AndExpression	value && isMask ( ( value - 1 ) | value )		370565	0		&&			
ANR	370570	Identifier	value		370565	0					
ANR	370571	CallExpression	isMask ( ( value - 1 ) | value )		370565	1					
ANR	370572	Callee	isMask		370565	0					
ANR	370573	Identifier	isMask		370565	0					
ANR	370574	ArgumentList	( value - 1 ) | value		370565	1					
ANR	370575	Argument	( value - 1 ) | value		370565	0					
ANR	370576	InclusiveOrExpression	( value - 1 ) | value		370565	0		|			
ANR	370577	AdditiveExpression	value - 1		370565	0		-			
ANR	370578	Identifier	value		370565	0					
ANR	370579	PrimaryExpression	1		370565	1					
ANR	370580	Identifier	value		370565	1					
ANR	370581	ReturnType	static bool		370565	1					
ANR	370582	Identifier	isShiftedMask		370565	2					
ANR	370583	ParameterList	ut32 value		370565	3					
ANR	370584	Parameter	ut32 value	135:27:2272:2281	370565	0	True				
ANR	370585	ParameterType	ut32		370565	0					
ANR	370586	Identifier	value		370565	1					
ANR	370587	CFGEntryNode	ENTRY		370565		True				
ANR	370588	CFGExitNode	EXIT		370565		True				
ANR	370589	Symbol	isMask		370565						
ANR	370590	Symbol	value		370565						
ANR	370591	Function	decodeBitMasks	139:0:2337:3427							
ANR	370592	FunctionDef	decodeBitMasks (ut32 imm)		370591	0					
ANR	370593	CompoundStatement		139:37:2374:3427	370591	0					
ANR	370594	IdentifierDeclStatement	int size = 32 ;	141:1:2398:2411	370591	0	True				
ANR	370595	IdentifierDecl	size = 32		370591	0					
ANR	370596	IdentifierDeclType	int		370591	0					
ANR	370597	Identifier	size		370591	1					
ANR	370598	AssignmentExpression	size = 32		370591	2		=			
ANR	370599	Identifier	size		370591	0					
ANR	370600	PrimaryExpression	32		370591	1					
ANR	370601	IdentifierDeclStatement	"ut32 cto , i ;"	143:1:2459:2470	370591	1	True				
ANR	370602	IdentifierDecl	cto		370591	0					
ANR	370603	IdentifierDeclType	ut32		370591	0					
ANR	370604	Identifier	cto		370591	1					
ANR	370605	IdentifierDecl	i		370591	1					
ANR	370606	IdentifierDeclType	ut32		370591	0					
ANR	370607	Identifier	i		370591	1					
ANR	370608	Statement	ut32	144:1:2473:2476	370591	2	True				
ANR	370609	Statement	mask	144:6:2478:2481	370591	3	True				
ANR	370610	Statement	=	144:11:2483:2483	370591	4	True				
ANR	370611	Statement	(	144:13:2485:2485	370591	5	True				
ANR	370612	Statement	(	144:14:2486:2486	370591	6	True				
ANR	370613	Statement	ut64	144:15:2487:2490	370591	7	True				
ANR	370614	Statement	)	144:19:2491:2491	370591	8	True				
ANR	370615	Statement	-	144:21:2493:2493	370591	9	True				
ANR	370616	Statement	1L	144:23:2495:2496	370591	10	True				
ANR	370617	Statement	L	144:25:2497:2497	370591	11	True				
ANR	370618	Statement	)	144:26:2498:2498	370591	12	True				
ANR	370619	Statement	>>	144:28:2500:2501	370591	13	True				
ANR	370620	ExpressionStatement	64 - size	144:31:2503:2514	370591	14	True				
ANR	370621	AdditiveExpression	64 - size		370591	0		-			
ANR	370622	PrimaryExpression	64		370591	0					
ANR	370623	Identifier	size		370591	1					
ANR	370624	IfStatement	if ( isShiftedMask ( imm ) )		370591	15					
ANR	370625	Condition	isShiftedMask ( imm )	146:5:2522:2540	370591	0	True				
ANR	370626	CallExpression	isShiftedMask ( imm )		370591	0					
ANR	370627	Callee	isShiftedMask		370591	0					
ANR	370628	Identifier	isShiftedMask		370591	0					
ANR	370629	ArgumentList	imm		370591	1					
ANR	370630	Argument	imm		370591	0					
ANR	370631	Identifier	imm		370591	0					
ANR	370632	CompoundStatement		8:26:168:168	370591	1					
ANR	370633	ExpressionStatement	i = countTrailingZeros ( imm )	147:2:2547:2575	370591	0	True				
ANR	370634	AssignmentExpression	i = countTrailingZeros ( imm )		370591	0		=			
ANR	370635	Identifier	i		370591	0					
ANR	370636	CallExpression	countTrailingZeros ( imm )		370591	1					
ANR	370637	Callee	countTrailingZeros		370591	0					
ANR	370638	Identifier	countTrailingZeros		370591	0					
ANR	370639	ArgumentList	imm		370591	1					
ANR	370640	Argument	imm		370591	0					
ANR	370641	Identifier	imm		370591	0					
ANR	370642	ExpressionStatement	cto = countTrailingOnes ( imm >> i )	148:2:2579:2613	370591	1	True				
ANR	370643	AssignmentExpression	cto = countTrailingOnes ( imm >> i )		370591	0		=			
ANR	370644	Identifier	cto		370591	0					
ANR	370645	CallExpression	countTrailingOnes ( imm >> i )		370591	1					
ANR	370646	Callee	countTrailingOnes		370591	0					
ANR	370647	Identifier	countTrailingOnes		370591	0					
ANR	370648	ArgumentList	imm >> i		370591	1					
ANR	370649	Argument	imm >> i		370591	0					
ANR	370650	ShiftExpression	imm >> i		370591	0		>>			
ANR	370651	Identifier	imm		370591	0					
ANR	370652	Identifier	i		370591	1					
ANR	370653	ElseStatement	else		370591	0					
ANR	370654	CompoundStatement		17:2:323:356	370591	0					
ANR	370655	ExpressionStatement	imm |= ~mask	150:2:2627:2639	370591	0	True				
ANR	370656	AssignmentExpression	imm |= ~mask		370591	0		|=			
ANR	370657	Identifier	imm		370591	0					
ANR	370658	Identifier	~mask		370591	1					
ANR	370659	IfStatement	if ( ! isShiftedMask ( imm ) )		370591	1					
ANR	370660	Condition	! isShiftedMask ( imm )	151:6:2647:2666	370591	0	True				
ANR	370661	UnaryOperationExpression	! isShiftedMask ( imm )		370591	0					
ANR	370662	UnaryOperator	!		370591	0					
ANR	370663	CallExpression	isShiftedMask ( imm )		370591	1					
ANR	370664	Callee	isShiftedMask		370591	0					
ANR	370665	Identifier	isShiftedMask		370591	0					
ANR	370666	ArgumentList	imm		370591	1					
ANR	370667	Argument	imm		370591	0					
ANR	370668	Identifier	imm		370591	0					
ANR	370669	CompoundStatement		13:28:294:294	370591	1					
ANR	370670	ReturnStatement	return UT32_MAX ;	152:3:2674:2689	370591	0	True				
ANR	370671	Identifier	UT32_MAX		370591	0					
ANR	370672	IdentifierDeclStatement	ut32 clo = countLeadingOnes ( imm ) ;	155:2:2698:2731	370591	2	True				
ANR	370673	IdentifierDecl	clo = countLeadingOnes ( imm )		370591	0					
ANR	370674	IdentifierDeclType	ut32		370591	0					
ANR	370675	Identifier	clo		370591	1					
ANR	370676	AssignmentExpression	clo = countLeadingOnes ( imm )		370591	2		=			
ANR	370677	Identifier	clo		370591	0					
ANR	370678	CallExpression	countLeadingOnes ( imm )		370591	1					
ANR	370679	Callee	countLeadingOnes		370591	0					
ANR	370680	Identifier	countLeadingOnes		370591	0					
ANR	370681	ArgumentList	imm		370591	1					
ANR	370682	Argument	imm		370591	0					
ANR	370683	Identifier	imm		370591	0					
ANR	370684	ExpressionStatement	i = 64 - clo	156:2:2735:2747	370591	3	True				
ANR	370685	AssignmentExpression	i = 64 - clo		370591	0		=			
ANR	370686	Identifier	i		370591	0					
ANR	370687	AdditiveExpression	64 - clo		370591	1		-			
ANR	370688	PrimaryExpression	64		370591	0					
ANR	370689	Identifier	clo		370591	1					
ANR	370690	ExpressionStatement	cto = clo + countTrailingOnes ( imm ) - ( 64 - size )	157:2:2751:2800	370591	4	True				
ANR	370691	AssignmentExpression	cto = clo + countTrailingOnes ( imm ) - ( 64 - size )		370591	0		=			
ANR	370692	Identifier	cto		370591	0					
ANR	370693	AdditiveExpression	clo + countTrailingOnes ( imm ) - ( 64 - size )		370591	1		+			
ANR	370694	Identifier	clo		370591	0					
ANR	370695	AdditiveExpression	countTrailingOnes ( imm ) - ( 64 - size )		370591	1		-			
ANR	370696	CallExpression	countTrailingOnes ( imm )		370591	0					
ANR	370697	Callee	countTrailingOnes		370591	0					
ANR	370698	Identifier	countTrailingOnes		370591	0					
ANR	370699	ArgumentList	imm		370591	1					
ANR	370700	Argument	imm		370591	0					
ANR	370701	Identifier	imm		370591	0					
ANR	370702	AdditiveExpression	64 - size		370591	1		-			
ANR	370703	PrimaryExpression	64		370591	0					
ANR	370704	Identifier	size		370591	1					
ANR	370705	IdentifierDeclStatement	ut32 immr = ( size - i ) & ( size - 1 ) ;	163:1:2969:3004	370591	16	True				
ANR	370706	IdentifierDecl	immr = ( size - i ) & ( size - 1 )		370591	0					
ANR	370707	IdentifierDeclType	ut32		370591	0					
ANR	370708	Identifier	immr		370591	1					
ANR	370709	AssignmentExpression	immr = ( size - i ) & ( size - 1 )		370591	2		=			
ANR	370710	Identifier	immr		370591	0					
ANR	370711	BitAndExpression	( size - i ) & ( size - 1 )		370591	1		&			
ANR	370712	AdditiveExpression	size - i		370591	0		-			
ANR	370713	Identifier	size		370591	0					
ANR	370714	Identifier	i		370591	1					
ANR	370715	AdditiveExpression	size - 1		370591	1		-			
ANR	370716	Identifier	size		370591	0					
ANR	370717	PrimaryExpression	1		370591	1					
ANR	370718	IdentifierDeclStatement	ut64 nimms = ~ ( size - 1 ) << 1 ;	166:1:3115:3144	370591	17	True				
ANR	370719	IdentifierDecl	nimms = ~ ( size - 1 ) << 1		370591	0					
ANR	370720	IdentifierDeclType	ut64		370591	0					
ANR	370721	Identifier	nimms		370591	1					
ANR	370722	AssignmentExpression	nimms = ~ ( size - 1 ) << 1		370591	2		=			
ANR	370723	Identifier	nimms		370591	0					
ANR	370724	ShiftExpression	~ ( size - 1 ) << 1		370591	1		<<			
ANR	370725	UnaryOperationExpression	~ ( size - 1 )		370591	0					
ANR	370726	UnaryOperator	~		370591	0					
ANR	370727	AdditiveExpression	size - 1		370591	1		-			
ANR	370728	Identifier	size		370591	0					
ANR	370729	PrimaryExpression	1		370591	1					
ANR	370730	PrimaryExpression	1		370591	1					
ANR	370731	ExpressionStatement	nimms |= ( cto - 1 )	169:1:3244:3262	370591	18	True				
ANR	370732	AssignmentExpression	nimms |= ( cto - 1 )		370591	0		|=			
ANR	370733	Identifier	nimms		370591	0					
ANR	370734	AdditiveExpression	cto - 1		370591	1		-			
ANR	370735	Identifier	cto		370591	0					
ANR	370736	PrimaryExpression	1		370591	1					
ANR	370737	IdentifierDeclStatement	ut32 n = ( ( nimms >> 6 ) & 1 ) ^ 1 ;	171:1:3317:3348	370591	19	True				
ANR	370738	IdentifierDecl	n = ( ( nimms >> 6 ) & 1 ) ^ 1		370591	0					
ANR	370739	IdentifierDeclType	ut32		370591	0					
ANR	370740	Identifier	n		370591	1					
ANR	370741	AssignmentExpression	n = ( ( nimms >> 6 ) & 1 ) ^ 1		370591	2		=			
ANR	370742	Identifier	n		370591	0					
ANR	370743	ExclusiveOrExpression	( ( nimms >> 6 ) & 1 ) ^ 1		370591	1		^			
ANR	370744	BitAndExpression	( nimms >> 6 ) & 1		370591	0		&			
ANR	370745	ShiftExpression	nimms >> 6		370591	0		>>			
ANR	370746	Identifier	nimms		370591	0					
ANR	370747	PrimaryExpression	6		370591	1					
ANR	370748	PrimaryExpression	1		370591	1					
ANR	370749	PrimaryExpression	1		370591	1					
ANR	370750	IdentifierDeclStatement	ut64 encoding = ( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f ) ;	172:1:3351:3407	370591	20	True				
ANR	370751	IdentifierDecl	encoding = ( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f )		370591	0					
ANR	370752	IdentifierDeclType	ut64		370591	0					
ANR	370753	Identifier	encoding		370591	1					
ANR	370754	AssignmentExpression	encoding = ( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f )		370591	2		=			
ANR	370755	Identifier	encoding		370591	0					
ANR	370756	InclusiveOrExpression	( n << 12 ) | ( immr << 6 ) | ( nimms & 0x3f )		370591	1		|			
ANR	370757	ShiftExpression	n << 12		370591	0		<<			
ANR	370758	Identifier	n		370591	0					
ANR	370759	PrimaryExpression	12		370591	1					
ANR	370760	InclusiveOrExpression	( immr << 6 ) | ( nimms & 0x3f )		370591	1		|			
ANR	370761	ShiftExpression	immr << 6		370591	0		<<			
ANR	370762	Identifier	immr		370591	0					
ANR	370763	PrimaryExpression	6		370591	1					
ANR	370764	BitAndExpression	nimms & 0x3f		370591	1		&			
ANR	370765	Identifier	nimms		370591	0					
ANR	370766	PrimaryExpression	0x3f		370591	1					
ANR	370767	ReturnStatement	return encoding ;	173:1:3410:3425	370591	21	True				
ANR	370768	Identifier	encoding		370591	0					
ANR	370769	ReturnType	static ut32		370591	1					
ANR	370770	Identifier	decodeBitMasks		370591	2					
ANR	370771	ParameterList	ut32 imm		370591	3					
ANR	370772	Parameter	ut32 imm	139:27:2364:2371	370591	0	True				
ANR	370773	ParameterType	ut32		370591	0					
ANR	370774	Identifier	imm		370591	1					
ANR	370775	CFGEntryNode	ENTRY		370591		True				
ANR	370776	CFGExitNode	EXIT		370591		True				
ANR	370777	Symbol	UT32_MAX		370591						
ANR	370778	Symbol	isShiftedMask		370591						
ANR	370779	Symbol	countTrailingOnes		370591						
ANR	370780	Symbol	clo		370591						
ANR	370781	Symbol	nimms		370591						
ANR	370782	Symbol	imm		370591						
ANR	370783	Symbol	~mask		370591						
ANR	370784	Symbol	i		370591						
ANR	370785	Symbol	encoding		370591						
ANR	370786	Symbol	n		370591						
ANR	370787	Symbol	countLeadingOnes		370591						
ANR	370788	Symbol	countTrailingZeros		370591						
ANR	370789	Symbol	size		370591						
ANR	370790	Symbol	immr		370591						
ANR	370791	Symbol	cto		370591						
ANR	370792	Function	mov	176:0:3430:4848							
ANR	370793	FunctionDef	mov (ArmOp * op)		370792	0					
ANR	370794	CompoundStatement		176:27:3457:4848	370792	0					
ANR	370795	IdentifierDeclStatement	int k = 0 ;	177:1:3460:3469	370792	0	True				
ANR	370796	IdentifierDecl	k = 0		370792	0					
ANR	370797	IdentifierDeclType	int		370792	0					
ANR	370798	Identifier	k		370792	1					
ANR	370799	AssignmentExpression	k = 0		370792	2		=			
ANR	370800	Identifier	k		370792	0					
ANR	370801	PrimaryExpression	0		370792	1					
ANR	370802	IdentifierDeclStatement	ut32 data = UT32_MAX ;	178:1:3472:3492	370792	1	True				
ANR	370803	IdentifierDecl	data = UT32_MAX		370792	0					
ANR	370804	IdentifierDeclType	ut32		370792	0					
ANR	370805	Identifier	data		370792	1					
ANR	370806	AssignmentExpression	data = UT32_MAX		370792	2		=			
ANR	370807	Identifier	UT32_MAX		370792	0					
ANR	370808	Identifier	UT32_MAX		370792	1					
ANR	370809	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""movz"" , 4 ) )"		370792	2					
ANR	370810	Condition	"! strncmp ( op -> mnemonic , ""movz"" , 4 )"	179:5:3499:3532	370792	0	True				
ANR	370811	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""movz"" , 4 )"		370792	0					
ANR	370812	UnaryOperator	!		370792	0					
ANR	370813	CallExpression	"strncmp ( op -> mnemonic , ""movz"" , 4 )"		370792	1					
ANR	370814	Callee	strncmp		370792	0					
ANR	370815	Identifier	strncmp		370792	0					
ANR	370816	ArgumentList	op -> mnemonic		370792	1					
ANR	370817	Argument	op -> mnemonic		370792	0					
ANR	370818	PtrMemberAccess	op -> mnemonic		370792	0					
ANR	370819	Identifier	op		370792	0					
ANR	370820	Identifier	mnemonic		370792	1					
ANR	370821	Argument	"""movz"""		370792	1					
ANR	370822	PrimaryExpression	"""movz"""		370792	0					
ANR	370823	Argument	4		370792	2					
ANR	370824	PrimaryExpression	4		370792	0					
ANR	370825	CompoundStatement		4:41:77:77	370792	1					
ANR	370826	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		370792	0					
ANR	370827	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	180:6:3543:3578	370792	0	True				
ANR	370828	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		370792	0		&			
ANR	370829	MemberAccess	op -> operands [ 0 ] . reg_type		370792	0					
ANR	370830	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370831	PtrMemberAccess	op -> operands		370792	0					
ANR	370832	Identifier	op		370792	0					
ANR	370833	Identifier	operands		370792	1					
ANR	370834	PrimaryExpression	0		370792	1					
ANR	370835	Identifier	reg_type		370792	1					
ANR	370836	Identifier	ARM_REG64		370792	1					
ANR	370837	CompoundStatement		5:44:123:123	370792	1					
ANR	370838	ExpressionStatement	k = 0x80d2	181:3:3586:3596	370792	0	True				
ANR	370839	AssignmentExpression	k = 0x80d2		370792	0		=			
ANR	370840	Identifier	k		370792	0					
ANR	370841	PrimaryExpression	0x80d2		370792	1					
ANR	370842	ElseStatement	else		370792	0					
ANR	370843	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		370792	0					
ANR	370844	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	182:13:3611:3646	370792	0	True				
ANR	370845	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		370792	0		&			
ANR	370846	MemberAccess	op -> operands [ 0 ] . reg_type		370792	0					
ANR	370847	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370848	PtrMemberAccess	op -> operands		370792	0					
ANR	370849	Identifier	op		370792	0					
ANR	370850	Identifier	operands		370792	1					
ANR	370851	PrimaryExpression	0		370792	1					
ANR	370852	Identifier	reg_type		370792	1					
ANR	370853	Identifier	ARM_REG32		370792	1					
ANR	370854	CompoundStatement		7:51:191:191	370792	1					
ANR	370855	ExpressionStatement	k = 0x8052	183:3:3654:3664	370792	0	True				
ANR	370856	AssignmentExpression	k = 0x8052		370792	0		=			
ANR	370857	Identifier	k		370792	0					
ANR	370858	PrimaryExpression	0x8052		370792	1					
ANR	370859	ElseStatement	else		370792	0					
ANR	370860	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""movk"" , 4 ) )"		370792	0					
ANR	370861	Condition	"! strncmp ( op -> mnemonic , ""movk"" , 4 )"	185:12:3682:3715	370792	0	True				
ANR	370862	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""movk"" , 4 )"		370792	0					
ANR	370863	UnaryOperator	!		370792	0					
ANR	370864	CallExpression	"strncmp ( op -> mnemonic , ""movk"" , 4 )"		370792	1					
ANR	370865	Callee	strncmp		370792	0					
ANR	370866	Identifier	strncmp		370792	0					
ANR	370867	ArgumentList	op -> mnemonic		370792	1					
ANR	370868	Argument	op -> mnemonic		370792	0					
ANR	370869	PtrMemberAccess	op -> mnemonic		370792	0					
ANR	370870	Identifier	op		370792	0					
ANR	370871	Identifier	mnemonic		370792	1					
ANR	370872	Argument	"""movk"""		370792	1					
ANR	370873	PrimaryExpression	"""movk"""		370792	0					
ANR	370874	Argument	4		370792	2					
ANR	370875	PrimaryExpression	4		370792	0					
ANR	370876	CompoundStatement		10:48:260:260	370792	1					
ANR	370877	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		370792	0					
ANR	370878	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	186:6:3726:3761	370792	0	True				
ANR	370879	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		370792	0		&			
ANR	370880	MemberAccess	op -> operands [ 0 ] . reg_type		370792	0					
ANR	370881	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370882	PtrMemberAccess	op -> operands		370792	0					
ANR	370883	Identifier	op		370792	0					
ANR	370884	Identifier	operands		370792	1					
ANR	370885	PrimaryExpression	0		370792	1					
ANR	370886	Identifier	reg_type		370792	1					
ANR	370887	Identifier	ARM_REG32		370792	1					
ANR	370888	CompoundStatement		11:44:306:306	370792	1					
ANR	370889	ExpressionStatement	k = 0x8072	187:3:3769:3779	370792	0	True				
ANR	370890	AssignmentExpression	k = 0x8072		370792	0		=			
ANR	370891	Identifier	k		370792	0					
ANR	370892	PrimaryExpression	0x8072		370792	1					
ANR	370893	ElseStatement	else		370792	0					
ANR	370894	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		370792	0					
ANR	370895	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	188:13:3794:3829	370792	0	True				
ANR	370896	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		370792	0		&			
ANR	370897	MemberAccess	op -> operands [ 0 ] . reg_type		370792	0					
ANR	370898	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370899	PtrMemberAccess	op -> operands		370792	0					
ANR	370900	Identifier	op		370792	0					
ANR	370901	Identifier	operands		370792	1					
ANR	370902	PrimaryExpression	0		370792	1					
ANR	370903	Identifier	reg_type		370792	1					
ANR	370904	Identifier	ARM_REG64		370792	1					
ANR	370905	CompoundStatement		13:51:374:374	370792	1					
ANR	370906	ExpressionStatement	k = 0x80f2	189:3:3837:3847	370792	0	True				
ANR	370907	AssignmentExpression	k = 0x80f2		370792	0		=			
ANR	370908	Identifier	k		370792	0					
ANR	370909	PrimaryExpression	0x80f2		370792	1					
ANR	370910	ElseStatement	else		370792	0					
ANR	370911	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""movn"" , 4 ) )"		370792	0					
ANR	370912	Condition	"! strncmp ( op -> mnemonic , ""movn"" , 4 )"	191:12:3865:3898	370792	0	True				
ANR	370913	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""movn"" , 4 )"		370792	0					
ANR	370914	UnaryOperator	!		370792	0					
ANR	370915	CallExpression	"strncmp ( op -> mnemonic , ""movn"" , 4 )"		370792	1					
ANR	370916	Callee	strncmp		370792	0					
ANR	370917	Identifier	strncmp		370792	0					
ANR	370918	ArgumentList	op -> mnemonic		370792	1					
ANR	370919	Argument	op -> mnemonic		370792	0					
ANR	370920	PtrMemberAccess	op -> mnemonic		370792	0					
ANR	370921	Identifier	op		370792	0					
ANR	370922	Identifier	mnemonic		370792	1					
ANR	370923	Argument	"""movn"""		370792	1					
ANR	370924	PrimaryExpression	"""movn"""		370792	0					
ANR	370925	Argument	4		370792	2					
ANR	370926	PrimaryExpression	4		370792	0					
ANR	370927	CompoundStatement		16:48:443:443	370792	1					
ANR	370928	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		370792	0					
ANR	370929	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	192:6:3909:3944	370792	0	True				
ANR	370930	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		370792	0		&			
ANR	370931	MemberAccess	op -> operands [ 0 ] . reg_type		370792	0					
ANR	370932	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370933	PtrMemberAccess	op -> operands		370792	0					
ANR	370934	Identifier	op		370792	0					
ANR	370935	Identifier	operands		370792	1					
ANR	370936	PrimaryExpression	0		370792	1					
ANR	370937	Identifier	reg_type		370792	1					
ANR	370938	Identifier	ARM_REG32		370792	1					
ANR	370939	CompoundStatement		17:44:489:489	370792	1					
ANR	370940	ExpressionStatement	k = 0x8012	193:3:3952:3962	370792	0	True				
ANR	370941	AssignmentExpression	k = 0x8012		370792	0		=			
ANR	370942	Identifier	k		370792	0					
ANR	370943	PrimaryExpression	0x8012		370792	1					
ANR	370944	ElseStatement	else		370792	0					
ANR	370945	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		370792	0					
ANR	370946	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	194:13:3977:4012	370792	0	True				
ANR	370947	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		370792	0		&			
ANR	370948	MemberAccess	op -> operands [ 0 ] . reg_type		370792	0					
ANR	370949	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370950	PtrMemberAccess	op -> operands		370792	0					
ANR	370951	Identifier	op		370792	0					
ANR	370952	Identifier	operands		370792	1					
ANR	370953	PrimaryExpression	0		370792	1					
ANR	370954	Identifier	reg_type		370792	1					
ANR	370955	Identifier	ARM_REG64		370792	1					
ANR	370956	CompoundStatement		19:51:557:557	370792	1					
ANR	370957	ExpressionStatement	k = 0x8092	195:3:4020:4030	370792	0	True				
ANR	370958	AssignmentExpression	k = 0x8092		370792	0		=			
ANR	370959	Identifier	k		370792	0					
ANR	370960	PrimaryExpression	0x8092		370792	1					
ANR	370961	ElseStatement	else		370792	0					
ANR	370962	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""mov"" , 3 ) )"		370792	0					
ANR	370963	Condition	"! strncmp ( op -> mnemonic , ""mov"" , 3 )"	197:12:4048:4080	370792	0	True				
ANR	370964	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""mov"" , 3 )"		370792	0					
ANR	370965	UnaryOperator	!		370792	0					
ANR	370966	CallExpression	"strncmp ( op -> mnemonic , ""mov"" , 3 )"		370792	1					
ANR	370967	Callee	strncmp		370792	0					
ANR	370968	Identifier	strncmp		370792	0					
ANR	370969	ArgumentList	op -> mnemonic		370792	1					
ANR	370970	Argument	op -> mnemonic		370792	0					
ANR	370971	PtrMemberAccess	op -> mnemonic		370792	0					
ANR	370972	Identifier	op		370792	0					
ANR	370973	Identifier	mnemonic		370792	1					
ANR	370974	Argument	"""mov"""		370792	1					
ANR	370975	PrimaryExpression	"""mov"""		370792	0					
ANR	370976	Argument	3		370792	2					
ANR	370977	PrimaryExpression	3		370792	0					
ANR	370978	CompoundStatement		22:47:625:625	370792	1					
ANR	370979	IfStatement	if ( op -> operands [ 0 ] . type & ARM_GPR )		370792	0					
ANR	370980	Condition	op -> operands [ 0 ] . type & ARM_GPR	199:6:4175:4204	370792	0	True				
ANR	370981	BitAndExpression	op -> operands [ 0 ] . type & ARM_GPR		370792	0		&			
ANR	370982	MemberAccess	op -> operands [ 0 ] . type		370792	0					
ANR	370983	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	370984	PtrMemberAccess	op -> operands		370792	0					
ANR	370985	Identifier	op		370792	0					
ANR	370986	Identifier	operands		370792	1					
ANR	370987	PrimaryExpression	0		370792	1					
ANR	370988	Identifier	type		370792	1					
ANR	370989	Identifier	ARM_GPR		370792	1					
ANR	370990	CompoundStatement		24:38:749:749	370792	1					
ANR	370991	IfStatement	if ( op -> operands [ 1 ] . type & ARM_GPR )		370792	0					
ANR	370992	Condition	op -> operands [ 1 ] . type & ARM_GPR	200:7:4216:4245	370792	0	True				
ANR	370993	BitAndExpression	op -> operands [ 1 ] . type & ARM_GPR		370792	0		&			
ANR	370994	MemberAccess	op -> operands [ 1 ] . type		370792	0					
ANR	370995	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	370996	PtrMemberAccess	op -> operands		370792	0					
ANR	370997	Identifier	op		370792	0					
ANR	370998	Identifier	operands		370792	1					
ANR	370999	PrimaryExpression	1		370792	1					
ANR	371000	Identifier	type		370792	1					
ANR	371001	Identifier	ARM_GPR		370792	1					
ANR	371002	CompoundStatement		25:39:790:790	370792	1					
ANR	371003	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG64 )		370792	0					
ANR	371004	Condition	op -> operands [ 1 ] . reg_type & ARM_REG64	201:8:4258:4293	370792	0	True				
ANR	371005	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG64		370792	0		&			
ANR	371006	MemberAccess	op -> operands [ 1 ] . reg_type		370792	0					
ANR	371007	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371008	PtrMemberAccess	op -> operands		370792	0					
ANR	371009	Identifier	op		370792	0					
ANR	371010	Identifier	operands		370792	1					
ANR	371011	PrimaryExpression	1		370792	1					
ANR	371012	Identifier	reg_type		370792	1					
ANR	371013	Identifier	ARM_REG64		370792	1					
ANR	371014	CompoundStatement		26:46:838:838	370792	1					
ANR	371015	ExpressionStatement	k = 0xe00300aa	202:5:4303:4317	370792	0	True				
ANR	371016	AssignmentExpression	k = 0xe00300aa		370792	0		=			
ANR	371017	Identifier	k		370792	0					
ANR	371018	PrimaryExpression	0xe00300aa		370792	1					
ANR	371019	ElseStatement	else		370792	0					
ANR	371020	CompoundStatement		28:11:872:872	370792	0					
ANR	371021	ExpressionStatement	k = 0xe003002a	204:5:4337:4351	370792	0	True				
ANR	371022	AssignmentExpression	k = 0xe003002a		370792	0		=			
ANR	371023	Identifier	k		370792	0					
ANR	371024	PrimaryExpression	0xe003002a		370792	1					
ANR	371025	ExpressionStatement	data = k | op -> operands [ 1 ] . reg << 8	206:4:4363:4398	370792	1	True				
ANR	371026	AssignmentExpression	data = k | op -> operands [ 1 ] . reg << 8		370792	0		=			
ANR	371027	Identifier	data		370792	0					
ANR	371028	InclusiveOrExpression	k | op -> operands [ 1 ] . reg << 8		370792	1		|			
ANR	371029	Identifier	k		370792	0					
ANR	371030	ShiftExpression	op -> operands [ 1 ] . reg << 8		370792	1		<<			
ANR	371031	MemberAccess	op -> operands [ 1 ] . reg		370792	0					
ANR	371032	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371033	PtrMemberAccess	op -> operands		370792	0					
ANR	371034	Identifier	op		370792	0					
ANR	371035	Identifier	operands		370792	1					
ANR	371036	PrimaryExpression	1		370792	1					
ANR	371037	Identifier	reg		370792	1					
ANR	371038	PrimaryExpression	8		370792	1					
ANR	371039	ElseStatement	else		370792	0					
ANR	371040	IfStatement	if ( op -> operands [ 1 ] . type & ARM_CONSTANT )		370792	0					
ANR	371041	Condition	op -> operands [ 1 ] . type & ARM_CONSTANT	207:14:4414:4448	370792	0	True				
ANR	371042	BitAndExpression	op -> operands [ 1 ] . type & ARM_CONSTANT		370792	0		&			
ANR	371043	MemberAccess	op -> operands [ 1 ] . type		370792	0					
ANR	371044	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371045	PtrMemberAccess	op -> operands		370792	0					
ANR	371046	Identifier	op		370792	0					
ANR	371047	Identifier	operands		370792	1					
ANR	371048	PrimaryExpression	1		370792	1					
ANR	371049	Identifier	type		370792	1					
ANR	371050	Identifier	ARM_CONSTANT		370792	1					
ANR	371051	CompoundStatement		32:51:993:993	370792	1					
ANR	371052	ExpressionStatement	k = 0x80d2	208:4:4457:4467	370792	0	True				
ANR	371053	AssignmentExpression	k = 0x80d2		370792	0		=			
ANR	371054	Identifier	k		370792	0					
ANR	371055	PrimaryExpression	0x80d2		370792	1					
ANR	371056	ExpressionStatement	data = k | op -> operands [ 1 ] . immediate << 29	209:4:4473:4515	370792	1	True				
ANR	371057	AssignmentExpression	data = k | op -> operands [ 1 ] . immediate << 29		370792	0		=			
ANR	371058	Identifier	data		370792	0					
ANR	371059	InclusiveOrExpression	k | op -> operands [ 1 ] . immediate << 29		370792	1		|			
ANR	371060	Identifier	k		370792	0					
ANR	371061	ShiftExpression	op -> operands [ 1 ] . immediate << 29		370792	1		<<			
ANR	371062	MemberAccess	op -> operands [ 1 ] . immediate		370792	0					
ANR	371063	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371064	PtrMemberAccess	op -> operands		370792	0					
ANR	371065	Identifier	op		370792	0					
ANR	371066	Identifier	operands		370792	1					
ANR	371067	PrimaryExpression	1		370792	1					
ANR	371068	Identifier	immediate		370792	1					
ANR	371069	PrimaryExpression	29		370792	1					
ANR	371070	ExpressionStatement	data |= op -> operands [ 0 ] . reg << 24	211:3:4525:4559	370792	1	True				
ANR	371071	AssignmentExpression	data |= op -> operands [ 0 ] . reg << 24		370792	0		|=			
ANR	371072	Identifier	data		370792	0					
ANR	371073	ShiftExpression	op -> operands [ 0 ] . reg << 24		370792	1		<<			
ANR	371074	MemberAccess	op -> operands [ 0 ] . reg		370792	0					
ANR	371075	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	371076	PtrMemberAccess	op -> operands		370792	0					
ANR	371077	Identifier	op		370792	0					
ANR	371078	Identifier	operands		370792	1					
ANR	371079	PrimaryExpression	0		370792	1					
ANR	371080	Identifier	reg		370792	1					
ANR	371081	PrimaryExpression	24		370792	1					
ANR	371082	ReturnStatement	return data ;	213:2:4567:4578	370792	1	True				
ANR	371083	Identifier	data		370792	0					
ANR	371084	ExpressionStatement	data = k	216:1:4585:4593	370792	3	True				
ANR	371085	AssignmentExpression	data = k		370792	0		=			
ANR	371086	Identifier	data		370792	0					
ANR	371087	Identifier	k		370792	1					
ANR	371088	ExpressionStatement	data |= ( op -> operands [ 0 ] . reg << 24 )	217:1:4596:4631	370792	4	True				
ANR	371089	AssignmentExpression	data |= ( op -> operands [ 0 ] . reg << 24 )		370792	0		|=			
ANR	371090	Identifier	data		370792	0					
ANR	371091	ShiftExpression	op -> operands [ 0 ] . reg << 24		370792	1		<<			
ANR	371092	MemberAccess	op -> operands [ 0 ] . reg		370792	0					
ANR	371093	ArrayIndexing	op -> operands [ 0 ]		370792	0					
ANR	371094	PtrMemberAccess	op -> operands		370792	0					
ANR	371095	Identifier	op		370792	0					
ANR	371096	Identifier	operands		370792	1					
ANR	371097	PrimaryExpression	0		370792	1					
ANR	371098	Identifier	reg		370792	1					
ANR	371099	PrimaryExpression	24		370792	1					
ANR	371100	ExpressionStatement	data |= ( ( op -> operands [ 1 ] . immediate & 7 ) << 29 )	218:1:4644:4691	370792	5	True				
ANR	371101	AssignmentExpression	data |= ( ( op -> operands [ 1 ] . immediate & 7 ) << 29 )		370792	0		|=			
ANR	371102	Identifier	data		370792	0					
ANR	371103	ShiftExpression	( op -> operands [ 1 ] . immediate & 7 ) << 29		370792	1		<<			
ANR	371104	BitAndExpression	op -> operands [ 1 ] . immediate & 7		370792	0		&			
ANR	371105	MemberAccess	op -> operands [ 1 ] . immediate		370792	0					
ANR	371106	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371107	PtrMemberAccess	op -> operands		370792	0					
ANR	371108	Identifier	op		370792	0					
ANR	371109	Identifier	operands		370792	1					
ANR	371110	PrimaryExpression	1		370792	1					
ANR	371111	Identifier	immediate		370792	1					
ANR	371112	PrimaryExpression	7		370792	1					
ANR	371113	PrimaryExpression	29		370792	1					
ANR	371114	ExpressionStatement	data |= ( ( ( op -> operands [ 1 ] . immediate >> 3 ) & 0xff ) << 16 )	219:1:4704:4761	370792	6	True				
ANR	371115	AssignmentExpression	data |= ( ( ( op -> operands [ 1 ] . immediate >> 3 ) & 0xff ) << 16 )		370792	0		|=			
ANR	371116	Identifier	data		370792	0					
ANR	371117	ShiftExpression	( ( op -> operands [ 1 ] . immediate >> 3 ) & 0xff ) << 16		370792	1		<<			
ANR	371118	BitAndExpression	( op -> operands [ 1 ] . immediate >> 3 ) & 0xff		370792	0		&			
ANR	371119	ShiftExpression	op -> operands [ 1 ] . immediate >> 3		370792	0		>>			
ANR	371120	MemberAccess	op -> operands [ 1 ] . immediate		370792	0					
ANR	371121	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371122	PtrMemberAccess	op -> operands		370792	0					
ANR	371123	Identifier	op		370792	0					
ANR	371124	Identifier	operands		370792	1					
ANR	371125	PrimaryExpression	1		370792	1					
ANR	371126	Identifier	immediate		370792	1					
ANR	371127	PrimaryExpression	3		370792	1					
ANR	371128	PrimaryExpression	0xff		370792	1					
ANR	371129	PrimaryExpression	16		370792	1					
ANR	371130	ExpressionStatement	data |= ( ( op -> operands [ 1 ] . immediate >> 10 ) << 7 )	220:1:4774:4822	370792	7	True				
ANR	371131	AssignmentExpression	data |= ( ( op -> operands [ 1 ] . immediate >> 10 ) << 7 )		370792	0		|=			
ANR	371132	Identifier	data		370792	0					
ANR	371133	ShiftExpression	( op -> operands [ 1 ] . immediate >> 10 ) << 7		370792	1		<<			
ANR	371134	ShiftExpression	op -> operands [ 1 ] . immediate >> 10		370792	0		>>			
ANR	371135	MemberAccess	op -> operands [ 1 ] . immediate		370792	0					
ANR	371136	ArrayIndexing	op -> operands [ 1 ]		370792	0					
ANR	371137	PtrMemberAccess	op -> operands		370792	0					
ANR	371138	Identifier	op		370792	0					
ANR	371139	Identifier	operands		370792	1					
ANR	371140	PrimaryExpression	1		370792	1					
ANR	371141	Identifier	immediate		370792	1					
ANR	371142	PrimaryExpression	10		370792	1					
ANR	371143	PrimaryExpression	7		370792	1					
ANR	371144	ReturnStatement	return data ;	221:1:4835:4846	370792	8	True				
ANR	371145	Identifier	data		370792	0					
ANR	371146	ReturnType	static ut32		370792	1					
ANR	371147	Identifier	mov		370792	2					
ANR	371148	ParameterList	ArmOp * op		370792	3					
ANR	371149	Parameter	ArmOp * op	176:16:3446:3454	370792	0	True				
ANR	371150	ParameterType	ArmOp *		370792	0					
ANR	371151	Identifier	op		370792	1					
ANR	371152	CFGEntryNode	ENTRY		370792		True				
ANR	371153	CFGExitNode	EXIT		370792		True				
ANR	371154	Symbol	UT32_MAX		370792						
ANR	371155	Symbol	op		370792						
ANR	371156	Symbol	ARM_CONSTANT		370792						
ANR	371157	Symbol	data		370792						
ANR	371158	Symbol	* op		370792						
ANR	371159	Symbol	op -> operands [ 1 ] . reg		370792						
ANR	371160	Symbol	op -> mnemonic		370792						
ANR	371161	Symbol	op -> operands [ 1 ] . reg_type		370792						
ANR	371162	Symbol	op -> operands [ 1 ] . immediate		370792						
ANR	371163	Symbol	k		370792						
ANR	371164	Symbol	op -> operands [ 0 ] . reg_type		370792						
ANR	371165	Symbol	ARM_GPR		370792						
ANR	371166	Symbol	* * op		370792						
ANR	371167	Symbol	ARM_REG64		370792						
ANR	371168	Symbol	ARM_REG32		370792						
ANR	371169	Symbol	strncmp		370792						
ANR	371170	Symbol	* op -> operands		370792						
ANR	371171	Symbol	op -> operands [ 1 ] . type		370792						
ANR	371172	Symbol	op -> operands [ 0 ] . type		370792						
ANR	371173	Symbol	op -> operands [ 0 ] . reg		370792						
ANR	371174	Symbol	op -> operands		370792						
ANR	371175	Function	cmp	224:0:4851:5473							
ANR	371176	FunctionDef	cmp (ArmOp * op)		371175	0					
ANR	371177	CompoundStatement		224:27:4878:5473	371175	0					
ANR	371178	IdentifierDeclStatement	ut32 data = UT32_MAX ;	225:1:4881:4901	371175	0	True				
ANR	371179	IdentifierDecl	data = UT32_MAX		371175	0					
ANR	371180	IdentifierDeclType	ut32		371175	0					
ANR	371181	Identifier	data		371175	1					
ANR	371182	AssignmentExpression	data = UT32_MAX		371175	2		=			
ANR	371183	Identifier	UT32_MAX		371175	0					
ANR	371184	Identifier	UT32_MAX		371175	1					
ANR	371185	IdentifierDeclStatement	int k = 0 ;	226:1:4904:4913	371175	1	True				
ANR	371186	IdentifierDecl	k = 0		371175	0					
ANR	371187	IdentifierDeclType	int		371175	0					
ANR	371188	Identifier	k		371175	1					
ANR	371189	AssignmentExpression	k = 0		371175	2		=			
ANR	371190	Identifier	k		371175	0					
ANR	371191	PrimaryExpression	0		371175	1					
ANR	371192	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 && op -> operands [ 1 ] . reg_type & ARM_REG64 )		371175	2					
ANR	371193	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64 && op -> operands [ 1 ] . reg_type & ARM_REG64	227:5:4920:4995	371175	0	True				
ANR	371194	AndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64 && op -> operands [ 1 ] . reg_type & ARM_REG64		371175	0		&&			
ANR	371195	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		371175	0		&			
ANR	371196	MemberAccess	op -> operands [ 0 ] . reg_type		371175	0					
ANR	371197	ArrayIndexing	op -> operands [ 0 ]		371175	0					
ANR	371198	PtrMemberAccess	op -> operands		371175	0					
ANR	371199	Identifier	op		371175	0					
ANR	371200	Identifier	operands		371175	1					
ANR	371201	PrimaryExpression	0		371175	1					
ANR	371202	Identifier	reg_type		371175	1					
ANR	371203	Identifier	ARM_REG64		371175	1					
ANR	371204	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG64		371175	1		&			
ANR	371205	MemberAccess	op -> operands [ 1 ] . reg_type		371175	0					
ANR	371206	ArrayIndexing	op -> operands [ 1 ]		371175	0					
ANR	371207	PtrMemberAccess	op -> operands		371175	0					
ANR	371208	Identifier	op		371175	0					
ANR	371209	Identifier	operands		371175	1					
ANR	371210	PrimaryExpression	1		371175	1					
ANR	371211	Identifier	reg_type		371175	1					
ANR	371212	Identifier	ARM_REG64		371175	1					
ANR	371213	CompoundStatement		4:83:119:119	371175	1					
ANR	371214	ExpressionStatement	k = 0x1f0000eb	228:2:5002:5017	371175	0	True				
ANR	371215	AssignmentExpression	k = 0x1f0000eb		371175	0		=			
ANR	371216	Identifier	k		371175	0					
ANR	371217	PrimaryExpression	0x1f0000eb		371175	1					
ANR	371218	ElseStatement	else		371175	0					
ANR	371219	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 && op -> operands [ 1 ] . reg_type & ARM_REG32 )		371175	0					
ANR	371220	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32 && op -> operands [ 1 ] . reg_type & ARM_REG32	229:12:5031:5106	371175	0	True				
ANR	371221	AndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32 && op -> operands [ 1 ] . reg_type & ARM_REG32		371175	0		&&			
ANR	371222	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		371175	0		&			
ANR	371223	MemberAccess	op -> operands [ 0 ] . reg_type		371175	0					
ANR	371224	ArrayIndexing	op -> operands [ 0 ]		371175	0					
ANR	371225	PtrMemberAccess	op -> operands		371175	0					
ANR	371226	Identifier	op		371175	0					
ANR	371227	Identifier	operands		371175	1					
ANR	371228	PrimaryExpression	0		371175	1					
ANR	371229	Identifier	reg_type		371175	1					
ANR	371230	Identifier	ARM_REG32		371175	1					
ANR	371231	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		371175	1		&			
ANR	371232	MemberAccess	op -> operands [ 1 ] . reg_type		371175	0					
ANR	371233	ArrayIndexing	op -> operands [ 1 ]		371175	0					
ANR	371234	PtrMemberAccess	op -> operands		371175	0					
ANR	371235	Identifier	op		371175	0					
ANR	371236	Identifier	operands		371175	1					
ANR	371237	PrimaryExpression	1		371175	1					
ANR	371238	Identifier	reg_type		371175	1					
ANR	371239	Identifier	ARM_REG32		371175	1					
ANR	371240	CompoundStatement		6:90:230:230	371175	1					
ANR	371241	IfStatement	if ( op -> operands [ 2 ] . shift_amount > 31 )		371175	0					
ANR	371242	Condition	op -> operands [ 2 ] . shift_amount > 31	230:6:5117:5149	371175	0	True				
ANR	371243	RelationalExpression	op -> operands [ 2 ] . shift_amount > 31		371175	0		>			
ANR	371244	MemberAccess	op -> operands [ 2 ] . shift_amount		371175	0					
ANR	371245	ArrayIndexing	op -> operands [ 2 ]		371175	0					
ANR	371246	PtrMemberAccess	op -> operands		371175	0					
ANR	371247	Identifier	op		371175	0					
ANR	371248	Identifier	operands		371175	1					
ANR	371249	PrimaryExpression	2		371175	1					
ANR	371250	Identifier	shift_amount		371175	1					
ANR	371251	PrimaryExpression	31		371175	1					
ANR	371252	CompoundStatement		7:41:273:273	371175	1					
ANR	371253	ReturnStatement	return UT32_MAX ;	231:3:5157:5172	371175	0	True				
ANR	371254	Identifier	UT32_MAX		371175	0					
ANR	371255	ExpressionStatement	k = 0x1f00006b	233:2:5180:5195	371175	1	True				
ANR	371256	AssignmentExpression	k = 0x1f00006b		371175	0		=			
ANR	371257	Identifier	k		371175	0					
ANR	371258	PrimaryExpression	0x1f00006b		371175	1					
ANR	371259	ElseStatement	else		371175	0					
ANR	371260	CompoundStatement		11:8:326:326	371175	0					
ANR	371261	ReturnStatement	return UT32_MAX ;	235:2:5209:5224	371175	0	True				
ANR	371262	Identifier	UT32_MAX		371175	0					
ANR	371263	ExpressionStatement	data = k | ( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8	238:1:5231:5331	371175	3	True				
ANR	371264	AssignmentExpression	data = k | ( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		371175	0		=			
ANR	371265	Identifier	data		371175	0					
ANR	371266	InclusiveOrExpression	k | ( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		371175	1		|			
ANR	371267	Identifier	k		371175	0					
ANR	371268	InclusiveOrExpression	( op -> operands [ 0 ] . reg & 0x18 ) << 13 | op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		371175	1		|			
ANR	371269	ShiftExpression	( op -> operands [ 0 ] . reg & 0x18 ) << 13		371175	0		<<			
ANR	371270	BitAndExpression	op -> operands [ 0 ] . reg & 0x18		371175	0		&			
ANR	371271	MemberAccess	op -> operands [ 0 ] . reg		371175	0					
ANR	371272	ArrayIndexing	op -> operands [ 0 ]		371175	0					
ANR	371273	PtrMemberAccess	op -> operands		371175	0					
ANR	371274	Identifier	op		371175	0					
ANR	371275	Identifier	operands		371175	1					
ANR	371276	PrimaryExpression	0		371175	1					
ANR	371277	Identifier	reg		371175	1					
ANR	371278	PrimaryExpression	0x18		371175	1					
ANR	371279	PrimaryExpression	13		371175	1					
ANR	371280	InclusiveOrExpression	op -> operands [ 0 ] . reg << 29 | op -> operands [ 1 ] . reg << 8		371175	1		|			
ANR	371281	ShiftExpression	op -> operands [ 0 ] . reg << 29		371175	0		<<			
ANR	371282	MemberAccess	op -> operands [ 0 ] . reg		371175	0					
ANR	371283	ArrayIndexing	op -> operands [ 0 ]		371175	0					
ANR	371284	PtrMemberAccess	op -> operands		371175	0					
ANR	371285	Identifier	op		371175	0					
ANR	371286	Identifier	operands		371175	1					
ANR	371287	PrimaryExpression	0		371175	1					
ANR	371288	Identifier	reg		371175	1					
ANR	371289	PrimaryExpression	29		371175	1					
ANR	371290	ShiftExpression	op -> operands [ 1 ] . reg << 8		371175	1		<<			
ANR	371291	MemberAccess	op -> operands [ 1 ] . reg		371175	0					
ANR	371292	ArrayIndexing	op -> operands [ 1 ]		371175	0					
ANR	371293	PtrMemberAccess	op -> operands		371175	0					
ANR	371294	Identifier	op		371175	0					
ANR	371295	Identifier	operands		371175	1					
ANR	371296	PrimaryExpression	1		371175	1					
ANR	371297	Identifier	reg		371175	1					
ANR	371298	PrimaryExpression	8		371175	1					
ANR	371299	IfStatement	if ( op -> operands [ 2 ] . shift != ARM_NO_SHIFT )		371175	4					
ANR	371300	Condition	op -> operands [ 2 ] . shift != ARM_NO_SHIFT	240:5:5339:5375	371175	0	True				
ANR	371301	EqualityExpression	op -> operands [ 2 ] . shift != ARM_NO_SHIFT		371175	0		!=			
ANR	371302	MemberAccess	op -> operands [ 2 ] . shift		371175	0					
ANR	371303	ArrayIndexing	op -> operands [ 2 ]		371175	0					
ANR	371304	PtrMemberAccess	op -> operands		371175	0					
ANR	371305	Identifier	op		371175	0					
ANR	371306	Identifier	operands		371175	1					
ANR	371307	PrimaryExpression	2		371175	1					
ANR	371308	Identifier	shift		371175	1					
ANR	371309	Identifier	ARM_NO_SHIFT		371175	1					
ANR	371310	CompoundStatement		17:44:499:499	371175	1					
ANR	371311	ExpressionStatement	data |= op -> operands [ 2 ] . shift_amount << 18 | op -> operands [ 2 ] . shift << 14	241:2:5382:5454	371175	0	True				
ANR	371312	AssignmentExpression	data |= op -> operands [ 2 ] . shift_amount << 18 | op -> operands [ 2 ] . shift << 14		371175	0		|=			
ANR	371313	Identifier	data		371175	0					
ANR	371314	InclusiveOrExpression	op -> operands [ 2 ] . shift_amount << 18 | op -> operands [ 2 ] . shift << 14		371175	1		|			
ANR	371315	ShiftExpression	op -> operands [ 2 ] . shift_amount << 18		371175	0		<<			
ANR	371316	MemberAccess	op -> operands [ 2 ] . shift_amount		371175	0					
ANR	371317	ArrayIndexing	op -> operands [ 2 ]		371175	0					
ANR	371318	PtrMemberAccess	op -> operands		371175	0					
ANR	371319	Identifier	op		371175	0					
ANR	371320	Identifier	operands		371175	1					
ANR	371321	PrimaryExpression	2		371175	1					
ANR	371322	Identifier	shift_amount		371175	1					
ANR	371323	PrimaryExpression	18		371175	1					
ANR	371324	ShiftExpression	op -> operands [ 2 ] . shift << 14		371175	1		<<			
ANR	371325	MemberAccess	op -> operands [ 2 ] . shift		371175	0					
ANR	371326	ArrayIndexing	op -> operands [ 2 ]		371175	0					
ANR	371327	PtrMemberAccess	op -> operands		371175	0					
ANR	371328	Identifier	op		371175	0					
ANR	371329	Identifier	operands		371175	1					
ANR	371330	PrimaryExpression	2		371175	1					
ANR	371331	Identifier	shift		371175	1					
ANR	371332	PrimaryExpression	14		371175	1					
ANR	371333	ReturnStatement	return data ;	243:1:5460:5471	371175	5	True				
ANR	371334	Identifier	data		371175	0					
ANR	371335	ReturnType	static ut32		371175	1					
ANR	371336	Identifier	cmp		371175	2					
ANR	371337	ParameterList	ArmOp * op		371175	3					
ANR	371338	Parameter	ArmOp * op	224:16:4867:4875	371175	0	True				
ANR	371339	ParameterType	ArmOp *		371175	0					
ANR	371340	Identifier	op		371175	1					
ANR	371341	CFGEntryNode	ENTRY		371175		True				
ANR	371342	CFGExitNode	EXIT		371175		True				
ANR	371343	Symbol	UT32_MAX		371175						
ANR	371344	Symbol	op		371175						
ANR	371345	Symbol	data		371175						
ANR	371346	Symbol	* op		371175						
ANR	371347	Symbol	op -> operands [ 1 ] . reg		371175						
ANR	371348	Symbol	op -> operands [ 1 ] . reg_type		371175						
ANR	371349	Symbol	k		371175						
ANR	371350	Symbol	op -> operands [ 0 ] . reg_type		371175						
ANR	371351	Symbol	* * op		371175						
ANR	371352	Symbol	ARM_REG64		371175						
ANR	371353	Symbol	op -> operands [ 2 ] . shift_amount		371175						
ANR	371354	Symbol	ARM_REG32		371175						
ANR	371355	Symbol	* op -> operands		371175						
ANR	371356	Symbol	op -> operands [ 2 ] . shift		371175						
ANR	371357	Symbol	ARM_NO_SHIFT		371175						
ANR	371358	Symbol	op -> operands [ 0 ] . reg		371175						
ANR	371359	Symbol	op -> operands		371175						
ANR	371360	Function	regsluop	247:0:5477:6299							
ANR	371361	FunctionDef	"regsluop (ArmOp * op , int k)"		371360	0					
ANR	371362	CompoundStatement		247:39:5516:6299	371360	0					
ANR	371363	IdentifierDeclStatement	ut32 data = UT32_MAX ;	248:1:5519:5539	371360	0	True				
ANR	371364	IdentifierDecl	data = UT32_MAX		371360	0					
ANR	371365	IdentifierDeclType	ut32		371360	0					
ANR	371366	Identifier	data		371360	1					
ANR	371367	AssignmentExpression	data = UT32_MAX		371360	2		=			
ANR	371368	Identifier	UT32_MAX		371360	0					
ANR	371369	Identifier	UT32_MAX		371360	1					
ANR	371370	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG32 )		371360	1					
ANR	371371	Condition	op -> operands [ 1 ] . reg_type & ARM_REG32	250:5:5547:5582	371360	0	True				
ANR	371372	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		371360	0		&			
ANR	371373	MemberAccess	op -> operands [ 1 ] . reg_type		371360	0					
ANR	371374	ArrayIndexing	op -> operands [ 1 ]		371360	0					
ANR	371375	PtrMemberAccess	op -> operands		371360	0					
ANR	371376	Identifier	op		371360	0					
ANR	371377	Identifier	operands		371360	1					
ANR	371378	PrimaryExpression	1		371360	1					
ANR	371379	Identifier	reg_type		371360	1					
ANR	371380	Identifier	ARM_REG32		371360	1					
ANR	371381	CompoundStatement		4:43:68:68	371360	1					
ANR	371382	ReturnStatement	return data ;	251:2:5589:5600	371360	0	True				
ANR	371383	Identifier	data		371360	0					
ANR	371384	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		371360	2					
ANR	371385	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	253:5:5610:5645	371360	0	True				
ANR	371386	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		371360	0		&			
ANR	371387	MemberAccess	op -> operands [ 0 ] . reg_type		371360	0					
ANR	371388	ArrayIndexing	op -> operands [ 0 ]		371360	0					
ANR	371389	PtrMemberAccess	op -> operands		371360	0					
ANR	371390	Identifier	op		371360	0					
ANR	371391	Identifier	operands		371360	1					
ANR	371392	PrimaryExpression	0		371360	1					
ANR	371393	Identifier	reg_type		371360	1					
ANR	371394	Identifier	ARM_REG32		371360	1					
ANR	371395	CompoundStatement		7:43:131:131	371360	1					
ANR	371396	ExpressionStatement	k -= 0x40	254:2:5652:5661	371360	0	True				
ANR	371397	AssignmentExpression	k -= 0x40		371360	0		-=			
ANR	371398	Identifier	k		371360	0					
ANR	371399	PrimaryExpression	0x40		371360	1					
ANR	371400	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		371360	3					
ANR	371401	Condition	op -> operands [ 2 ] . type & ARM_GPR	256:5:5671:5700	371360	0	True				
ANR	371402	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		371360	0		&			
ANR	371403	MemberAccess	op -> operands [ 2 ] . type		371360	0					
ANR	371404	ArrayIndexing	op -> operands [ 2 ]		371360	0					
ANR	371405	PtrMemberAccess	op -> operands		371360	0					
ANR	371406	Identifier	op		371360	0					
ANR	371407	Identifier	operands		371360	1					
ANR	371408	PrimaryExpression	2		371360	1					
ANR	371409	Identifier	type		371360	1					
ANR	371410	Identifier	ARM_GPR		371360	1					
ANR	371411	CompoundStatement		10:37:186:186	371360	1					
ANR	371412	ReturnStatement	return data ;	257:2:5707:5718	371360	0	True				
ANR	371413	Identifier	data		371360	0					
ANR	371414	IdentifierDeclStatement	int n = op -> operands [ 2 ] . immediate ;	260:1:5725:5758	371360	4	True				
ANR	371415	IdentifierDecl	n = op -> operands [ 2 ] . immediate		371360	0					
ANR	371416	IdentifierDeclType	int		371360	0					
ANR	371417	Identifier	n		371360	1					
ANR	371418	AssignmentExpression	n = op -> operands [ 2 ] . immediate		371360	2		=			
ANR	371419	Identifier	n		371360	0					
ANR	371420	MemberAccess	op -> operands [ 2 ] . immediate		371360	1					
ANR	371421	ArrayIndexing	op -> operands [ 2 ]		371360	0					
ANR	371422	PtrMemberAccess	op -> operands		371360	0					
ANR	371423	Identifier	op		371360	0					
ANR	371424	Identifier	operands		371360	1					
ANR	371425	PrimaryExpression	2		371360	1					
ANR	371426	Identifier	immediate		371360	1					
ANR	371427	IfStatement	if ( n > 0xff || n < - 0x100 )		371360	5					
ANR	371428	Condition	n > 0xff || n < - 0x100	261:5:5765:5786	371360	0	True				
ANR	371429	OrExpression	n > 0xff || n < - 0x100		371360	0		||			
ANR	371430	RelationalExpression	n > 0xff		371360	0		>			
ANR	371431	Identifier	n		371360	0					
ANR	371432	PrimaryExpression	0xff		371360	1					
ANR	371433	RelationalExpression	n < - 0x100		371360	1		<			
ANR	371434	Identifier	n		371360	0					
ANR	371435	UnaryOperationExpression	- 0x100		371360	1					
ANR	371436	UnaryOperator	-		371360	0					
ANR	371437	PrimaryExpression	0x100		371360	1					
ANR	371438	CompoundStatement		15:29:272:272	371360	1					
ANR	371439	ReturnStatement	return data ;	262:2:5793:5804	371360	0	True				
ANR	371440	Identifier	data		371360	0					
ANR	371441	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	265:1:5811:5910	371360	6	True				
ANR	371442	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371360	0		=			
ANR	371443	Identifier	data		371360	0					
ANR	371444	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371360	1		|			
ANR	371445	Identifier	k		371360	0					
ANR	371446	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371360	1		|			
ANR	371447	ShiftExpression	op -> operands [ 0 ] . reg << 24		371360	0		<<			
ANR	371448	MemberAccess	op -> operands [ 0 ] . reg		371360	0					
ANR	371449	ArrayIndexing	op -> operands [ 0 ]		371360	0					
ANR	371450	PtrMemberAccess	op -> operands		371360	0					
ANR	371451	Identifier	op		371360	0					
ANR	371452	Identifier	operands		371360	1					
ANR	371453	PrimaryExpression	0		371360	1					
ANR	371454	Identifier	reg		371360	1					
ANR	371455	PrimaryExpression	24		371360	1					
ANR	371456	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371360	1		|			
ANR	371457	ShiftExpression	op -> operands [ 1 ] . reg << 29		371360	0		<<			
ANR	371458	MemberAccess	op -> operands [ 1 ] . reg		371360	0					
ANR	371459	ArrayIndexing	op -> operands [ 1 ]		371360	0					
ANR	371460	PtrMemberAccess	op -> operands		371360	0					
ANR	371461	Identifier	op		371360	0					
ANR	371462	Identifier	operands		371360	1					
ANR	371463	PrimaryExpression	1		371360	1					
ANR	371464	Identifier	reg		371360	1					
ANR	371465	PrimaryExpression	29		371360	1					
ANR	371466	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		371360	1		<<			
ANR	371467	BitAndExpression	op -> operands [ 1 ] . reg & 56		371360	0		&			
ANR	371468	MemberAccess	op -> operands [ 1 ] . reg		371360	0					
ANR	371469	ArrayIndexing	op -> operands [ 1 ]		371360	0					
ANR	371470	PtrMemberAccess	op -> operands		371360	0					
ANR	371471	Identifier	op		371360	0					
ANR	371472	Identifier	operands		371360	1					
ANR	371473	PrimaryExpression	1		371360	1					
ANR	371474	Identifier	reg		371360	1					
ANR	371475	PrimaryExpression	56		371360	1					
ANR	371476	PrimaryExpression	13		371360	1					
ANR	371477	IfStatement	if ( n < 0 )		371360	7					
ANR	371478	Condition	n < 0	267:5:5918:5922	371360	0	True				
ANR	371479	RelationalExpression	n < 0		371360	0		<			
ANR	371480	Identifier	n		371360	0					
ANR	371481	PrimaryExpression	0		371360	1					
ANR	371482	CompoundStatement		21:12:408:408	371360	1					
ANR	371483	ExpressionStatement	n *= - 1	268:2:5929:5936	371360	0	True				
ANR	371484	AssignmentExpression	n *= - 1		371360	0		*=			
ANR	371485	Identifier	n		371360	0					
ANR	371486	UnaryOperationExpression	- 1		371360	1					
ANR	371487	UnaryOperator	-		371360	0					
ANR	371488	PrimaryExpression	1		371360	1					
ANR	371489	ExpressionStatement	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20	269:2:5940:5979	371360	1	True				
ANR	371490	AssignmentExpression	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		371360	0		|=			
ANR	371491	Identifier	data		371360	0					
ANR	371492	ShiftExpression	( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		371360	1		<<			
ANR	371493	BitAndExpression	0xf & ( 0xf - ( n - 1 ) )		371360	0		&			
ANR	371494	PrimaryExpression	0xf		371360	0					
ANR	371495	AdditiveExpression	0xf - ( n - 1 )		371360	1		-			
ANR	371496	PrimaryExpression	0xf		371360	0					
ANR	371497	AdditiveExpression	n - 1		371360	1		-			
ANR	371498	Identifier	n		371360	0					
ANR	371499	PrimaryExpression	1		371360	1					
ANR	371500	PrimaryExpression	20		371360	1					
ANR	371501	IfStatement	if ( countTrailingZeros ( n ) > 3 )		371360	2					
ANR	371502	Condition	countTrailingZeros ( n ) > 3	271:6:5988:6012	371360	0	True				
ANR	371503	RelationalExpression	countTrailingZeros ( n ) > 3		371360	0		>			
ANR	371504	CallExpression	countTrailingZeros ( n )		371360	0					
ANR	371505	Callee	countTrailingZeros		371360	0					
ANR	371506	Identifier	countTrailingZeros		371360	0					
ANR	371507	ArgumentList	n		371360	1					
ANR	371508	Argument	n		371360	0					
ANR	371509	Identifier	n		371360	0					
ANR	371510	PrimaryExpression	3		371360	1					
ANR	371511	CompoundStatement		25:33:498:498	371360	1					
ANR	371512	ExpressionStatement	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8	272:3:6020:6056	371360	0	True				
ANR	371513	AssignmentExpression	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		371360	0		|=			
ANR	371514	Identifier	data		371360	0					
ANR	371515	ShiftExpression	( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		371360	1		<<			
ANR	371516	AdditiveExpression	0x1f - ( ( n >> 4 ) - 1 )		371360	0		-			
ANR	371517	PrimaryExpression	0x1f		371360	0					
ANR	371518	AdditiveExpression	( n >> 4 ) - 1		371360	1		-			
ANR	371519	ShiftExpression	n >> 4		371360	0		>>			
ANR	371520	Identifier	n		371360	0					
ANR	371521	PrimaryExpression	4		371360	1					
ANR	371522	PrimaryExpression	1		371360	1					
ANR	371523	PrimaryExpression	8		371360	1					
ANR	371524	ElseStatement	else		371360	0					
ANR	371525	CompoundStatement		27:9:550:550	371360	0					
ANR	371526	ExpressionStatement	data |= ( 0x1f - ( n >> 4 ) ) << 8	274:3:6072:6102	371360	0	True				
ANR	371527	AssignmentExpression	data |= ( 0x1f - ( n >> 4 ) ) << 8		371360	0		|=			
ANR	371528	Identifier	data		371360	0					
ANR	371529	ShiftExpression	( 0x1f - ( n >> 4 ) ) << 8		371360	1		<<			
ANR	371530	AdditiveExpression	0x1f - ( n >> 4 )		371360	0		-			
ANR	371531	PrimaryExpression	0x1f		371360	0					
ANR	371532	ShiftExpression	n >> 4		371360	1		>>			
ANR	371533	Identifier	n		371360	0					
ANR	371534	PrimaryExpression	4		371360	1					
ANR	371535	PrimaryExpression	8		371360	1					
ANR	371536	ElseStatement	else		371360	0					
ANR	371537	CompoundStatement		30:8:599:599	371360	0					
ANR	371538	ExpressionStatement	data |= ( 0xf & ( n & 63 ) ) << 20	277:2:6120:6150	371360	0	True				
ANR	371539	AssignmentExpression	data |= ( 0xf & ( n & 63 ) ) << 20		371360	0		|=			
ANR	371540	Identifier	data		371360	0					
ANR	371541	ShiftExpression	( 0xf & ( n & 63 ) ) << 20		371360	1		<<			
ANR	371542	BitAndExpression	0xf & ( n & 63 )		371360	0		&			
ANR	371543	PrimaryExpression	0xf		371360	0					
ANR	371544	BitAndExpression	n & 63		371360	1		&			
ANR	371545	Identifier	n		371360	0					
ANR	371546	PrimaryExpression	63		371360	1					
ANR	371547	PrimaryExpression	20		371360	1					
ANR	371548	IfStatement	if ( countTrailingZeros ( n ) < 4 )		371360	1					
ANR	371549	Condition	countTrailingZeros ( n ) < 4	278:6:6158:6182	371360	0	True				
ANR	371550	RelationalExpression	countTrailingZeros ( n ) < 4		371360	0		<			
ANR	371551	CallExpression	countTrailingZeros ( n )		371360	0					
ANR	371552	Callee	countTrailingZeros		371360	0					
ANR	371553	Identifier	countTrailingZeros		371360	0					
ANR	371554	ArgumentList	n		371360	1					
ANR	371555	Argument	n		371360	0					
ANR	371556	Identifier	n		371360	0					
ANR	371557	PrimaryExpression	4		371360	1					
ANR	371558	CompoundStatement		32:33:668:668	371360	1					
ANR	371559	ExpressionStatement	data |= ( n >> 4 ) << 8	279:3:6190:6211	371360	0	True				
ANR	371560	AssignmentExpression	data |= ( n >> 4 ) << 8		371360	0		|=			
ANR	371561	Identifier	data		371360	0					
ANR	371562	ShiftExpression	( n >> 4 ) << 8		371360	1		<<			
ANR	371563	ShiftExpression	n >> 4		371360	0		>>			
ANR	371564	Identifier	n		371360	0					
ANR	371565	PrimaryExpression	4		371360	1					
ANR	371566	PrimaryExpression	8		371360	1					
ANR	371567	ElseStatement	else		371360	0					
ANR	371568	CompoundStatement		34:9:705:705	371360	0					
ANR	371569	ExpressionStatement	data |= ( 0xff & n ) << 4	281:3:6227:6250	371360	0	True				
ANR	371570	AssignmentExpression	data |= ( 0xff & n ) << 4		371360	0		|=			
ANR	371571	Identifier	data		371360	0					
ANR	371572	ShiftExpression	( 0xff & n ) << 4		371360	1		<<			
ANR	371573	BitAndExpression	0xff & n		371360	0		&			
ANR	371574	PrimaryExpression	0xff		371360	0					
ANR	371575	Identifier	n		371360	1					
ANR	371576	PrimaryExpression	4		371360	1					
ANR	371577	ExpressionStatement	data |= ( n >> 8 ) << 8	283:2:6258:6279	371360	2	True				
ANR	371578	AssignmentExpression	data |= ( n >> 8 ) << 8		371360	0		|=			
ANR	371579	Identifier	data		371360	0					
ANR	371580	ShiftExpression	( n >> 8 ) << 8		371360	1		<<			
ANR	371581	ShiftExpression	n >> 8		371360	0		>>			
ANR	371582	Identifier	n		371360	0					
ANR	371583	PrimaryExpression	8		371360	1					
ANR	371584	PrimaryExpression	8		371360	1					
ANR	371585	ReturnStatement	return data ;	286:1:6286:6297	371360	8	True				
ANR	371586	Identifier	data		371360	0					
ANR	371587	ReturnType	static ut32		371360	1					
ANR	371588	Identifier	regsluop		371360	2					
ANR	371589	ParameterList	"ArmOp * op , int k"		371360	3					
ANR	371590	Parameter	ArmOp * op	247:21:5498:5506	371360	0	True				
ANR	371591	ParameterType	ArmOp *		371360	0					
ANR	371592	Identifier	op		371360	1					
ANR	371593	Parameter	int k	247:32:5509:5513	371360	1	True				
ANR	371594	ParameterType	int		371360	0					
ANR	371595	Identifier	k		371360	1					
ANR	371596	CFGEntryNode	ENTRY		371360		True				
ANR	371597	CFGExitNode	EXIT		371360		True				
ANR	371598	Symbol	UT32_MAX		371360						
ANR	371599	Symbol	op -> operands [ 2 ] . immediate		371360						
ANR	371600	Symbol	op		371360						
ANR	371601	Symbol	data		371360						
ANR	371602	Symbol	* op		371360						
ANR	371603	Symbol	op -> operands [ 1 ] . reg		371360						
ANR	371604	Symbol	op -> operands [ 1 ] . reg_type		371360						
ANR	371605	Symbol	k		371360						
ANR	371606	Symbol	op -> operands [ 0 ] . reg_type		371360						
ANR	371607	Symbol	ARM_GPR		371360						
ANR	371608	Symbol	op -> operands [ 2 ] . type		371360						
ANR	371609	Symbol	n		371360						
ANR	371610	Symbol	* * op		371360						
ANR	371611	Symbol	ARM_REG32		371360						
ANR	371612	Symbol	* op -> operands		371360						
ANR	371613	Symbol	countTrailingZeros		371360						
ANR	371614	Symbol	op -> operands [ 0 ] . reg		371360						
ANR	371615	Symbol	op -> operands		371360						
ANR	371616	Function	reglsop	290:0:6329:7664							
ANR	371617	FunctionDef	"reglsop (ArmOp * op , int k)"		371616	0					
ANR	371618	CompoundStatement		290:38:6367:7664	371616	0					
ANR	371619	IdentifierDeclStatement	ut32 data = UT32_MAX ;	291:1:6370:6390	371616	0	True				
ANR	371620	IdentifierDecl	data = UT32_MAX		371616	0					
ANR	371621	IdentifierDeclType	ut32		371616	0					
ANR	371622	Identifier	data		371616	1					
ANR	371623	AssignmentExpression	data = UT32_MAX		371616	2		=			
ANR	371624	Identifier	UT32_MAX		371616	0					
ANR	371625	Identifier	UT32_MAX		371616	1					
ANR	371626	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG32 )		371616	1					
ANR	371627	Condition	op -> operands [ 1 ] . reg_type & ARM_REG32	293:5:6398:6433	371616	0	True				
ANR	371628	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		371616	0		&			
ANR	371629	MemberAccess	op -> operands [ 1 ] . reg_type		371616	0					
ANR	371630	ArrayIndexing	op -> operands [ 1 ]		371616	0					
ANR	371631	PtrMemberAccess	op -> operands		371616	0					
ANR	371632	Identifier	op		371616	0					
ANR	371633	Identifier	operands		371616	1					
ANR	371634	PrimaryExpression	1		371616	1					
ANR	371635	Identifier	reg_type		371616	1					
ANR	371636	Identifier	ARM_REG32		371616	1					
ANR	371637	CompoundStatement		4:43:68:68	371616	1					
ANR	371638	ReturnStatement	return data ;	294:2:6440:6451	371616	0	True				
ANR	371639	Identifier	data		371616	0					
ANR	371640	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		371616	2					
ANR	371641	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	296:5:6461:6496	371616	0	True				
ANR	371642	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		371616	0		&			
ANR	371643	MemberAccess	op -> operands [ 0 ] . reg_type		371616	0					
ANR	371644	ArrayIndexing	op -> operands [ 0 ]		371616	0					
ANR	371645	PtrMemberAccess	op -> operands		371616	0					
ANR	371646	Identifier	op		371616	0					
ANR	371647	Identifier	operands		371616	1					
ANR	371648	PrimaryExpression	0		371616	1					
ANR	371649	Identifier	reg_type		371616	1					
ANR	371650	Identifier	ARM_REG32		371616	1					
ANR	371651	CompoundStatement		7:43:131:131	371616	1					
ANR	371652	ExpressionStatement	k -= 0x40	297:2:6503:6512	371616	0	True				
ANR	371653	AssignmentExpression	k -= 0x40		371616	0		-=			
ANR	371654	Identifier	k		371616	0					
ANR	371655	PrimaryExpression	0x40		371616	1					
ANR	371656	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		371616	3					
ANR	371657	Condition	op -> operands [ 2 ] . type & ARM_GPR	299:5:6522:6551	371616	0	True				
ANR	371658	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		371616	0		&			
ANR	371659	MemberAccess	op -> operands [ 2 ] . type		371616	0					
ANR	371660	ArrayIndexing	op -> operands [ 2 ]		371616	0					
ANR	371661	PtrMemberAccess	op -> operands		371616	0					
ANR	371662	Identifier	op		371616	0					
ANR	371663	Identifier	operands		371616	1					
ANR	371664	PrimaryExpression	2		371616	1					
ANR	371665	Identifier	type		371616	1					
ANR	371666	Identifier	ARM_GPR		371616	1					
ANR	371667	CompoundStatement		10:37:186:186	371616	1					
ANR	371668	ExpressionStatement	k += 0x00682000	300:2:6558:6573	371616	0	True				
ANR	371669	AssignmentExpression	k += 0x00682000		371616	0		+=			
ANR	371670	Identifier	k		371616	0					
ANR	371671	PrimaryExpression	0x00682000		371616	1					
ANR	371672	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	301:2:6577:6676	371616	1	True				
ANR	371673	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	0		=			
ANR	371674	Identifier	data		371616	0					
ANR	371675	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		|			
ANR	371676	Identifier	k		371616	0					
ANR	371677	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		|			
ANR	371678	ShiftExpression	op -> operands [ 0 ] . reg << 24		371616	0		<<			
ANR	371679	MemberAccess	op -> operands [ 0 ] . reg		371616	0					
ANR	371680	ArrayIndexing	op -> operands [ 0 ]		371616	0					
ANR	371681	PtrMemberAccess	op -> operands		371616	0					
ANR	371682	Identifier	op		371616	0					
ANR	371683	Identifier	operands		371616	1					
ANR	371684	PrimaryExpression	0		371616	1					
ANR	371685	Identifier	reg		371616	1					
ANR	371686	PrimaryExpression	24		371616	1					
ANR	371687	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		|			
ANR	371688	ShiftExpression	op -> operands [ 1 ] . reg << 29		371616	0		<<			
ANR	371689	MemberAccess	op -> operands [ 1 ] . reg		371616	0					
ANR	371690	ArrayIndexing	op -> operands [ 1 ]		371616	0					
ANR	371691	PtrMemberAccess	op -> operands		371616	0					
ANR	371692	Identifier	op		371616	0					
ANR	371693	Identifier	operands		371616	1					
ANR	371694	PrimaryExpression	1		371616	1					
ANR	371695	Identifier	reg		371616	1					
ANR	371696	PrimaryExpression	29		371616	1					
ANR	371697	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		<<			
ANR	371698	BitAndExpression	op -> operands [ 1 ] . reg & 56		371616	0		&			
ANR	371699	MemberAccess	op -> operands [ 1 ] . reg		371616	0					
ANR	371700	ArrayIndexing	op -> operands [ 1 ]		371616	0					
ANR	371701	PtrMemberAccess	op -> operands		371616	0					
ANR	371702	Identifier	op		371616	0					
ANR	371703	Identifier	operands		371616	1					
ANR	371704	PrimaryExpression	1		371616	1					
ANR	371705	Identifier	reg		371616	1					
ANR	371706	PrimaryExpression	56		371616	1					
ANR	371707	PrimaryExpression	13		371616	1					
ANR	371708	ExpressionStatement	data |= op -> operands [ 2 ] . reg << 8	302:2:6680:6712	371616	2	True				
ANR	371709	AssignmentExpression	data |= op -> operands [ 2 ] . reg << 8		371616	0		|=			
ANR	371710	Identifier	data		371616	0					
ANR	371711	ShiftExpression	op -> operands [ 2 ] . reg << 8		371616	1		<<			
ANR	371712	MemberAccess	op -> operands [ 2 ] . reg		371616	0					
ANR	371713	ArrayIndexing	op -> operands [ 2 ]		371616	0					
ANR	371714	PtrMemberAccess	op -> operands		371616	0					
ANR	371715	Identifier	op		371616	0					
ANR	371716	Identifier	operands		371616	1					
ANR	371717	PrimaryExpression	2		371616	1					
ANR	371718	Identifier	reg		371616	1					
ANR	371719	PrimaryExpression	8		371616	1					
ANR	371720	ElseStatement	else		371616	0					
ANR	371721	CompoundStatement		15:2:358:391	371616	0					
ANR	371722	IdentifierDeclStatement	int n = op -> operands [ 2 ] . immediate ;	304:2:6726:6759	371616	0	True				
ANR	371723	IdentifierDecl	n = op -> operands [ 2 ] . immediate		371616	0					
ANR	371724	IdentifierDeclType	int		371616	0					
ANR	371725	Identifier	n		371616	1					
ANR	371726	AssignmentExpression	n = op -> operands [ 2 ] . immediate		371616	2		=			
ANR	371727	Identifier	n		371616	0					
ANR	371728	MemberAccess	op -> operands [ 2 ] . immediate		371616	1					
ANR	371729	ArrayIndexing	op -> operands [ 2 ]		371616	0					
ANR	371730	PtrMemberAccess	op -> operands		371616	0					
ANR	371731	Identifier	op		371616	0					
ANR	371732	Identifier	operands		371616	1					
ANR	371733	PrimaryExpression	2		371616	1					
ANR	371734	Identifier	immediate		371616	1					
ANR	371735	IfStatement	if ( n > 0x100 || n < - 0x100 )		371616	1					
ANR	371736	Condition	n > 0x100 || n < - 0x100	305:6:6767:6789	371616	0	True				
ANR	371737	OrExpression	n > 0x100 || n < - 0x100		371616	0		||			
ANR	371738	RelationalExpression	n > 0x100		371616	0		>			
ANR	371739	Identifier	n		371616	0					
ANR	371740	PrimaryExpression	0x100		371616	1					
ANR	371741	RelationalExpression	n < - 0x100		371616	1		<			
ANR	371742	Identifier	n		371616	0					
ANR	371743	UnaryOperationExpression	- 0x100		371616	1					
ANR	371744	UnaryOperator	-		371616	0					
ANR	371745	PrimaryExpression	0x100		371616	1					
ANR	371746	CompoundStatement		16:31:424:424	371616	1					
ANR	371747	ReturnStatement	return UT32_MAX ;	306:3:6797:6812	371616	0	True				
ANR	371748	Identifier	UT32_MAX		371616	0					
ANR	371749	IfStatement	if ( n == 0 || ( n > 0 && countTrailingZeros ( n ) >= 4 ) )		371616	2					
ANR	371750	Condition	n == 0 || ( n > 0 && countTrailingZeros ( n ) >= 4 )	309:6:6825:6871	371616	0	True				
ANR	371751	OrExpression	n == 0 || ( n > 0 && countTrailingZeros ( n ) >= 4 )		371616	0		||			
ANR	371752	EqualityExpression	n == 0		371616	0		==			
ANR	371753	Identifier	n		371616	0					
ANR	371754	PrimaryExpression	0		371616	1					
ANR	371755	AndExpression	n > 0 && countTrailingZeros ( n ) >= 4		371616	1		&&			
ANR	371756	RelationalExpression	n > 0		371616	0		>			
ANR	371757	Identifier	n		371616	0					
ANR	371758	PrimaryExpression	0		371616	1					
ANR	371759	RelationalExpression	countTrailingZeros ( n ) >= 4		371616	1		>=			
ANR	371760	CallExpression	countTrailingZeros ( n )		371616	0					
ANR	371761	Callee	countTrailingZeros		371616	0					
ANR	371762	Identifier	countTrailingZeros		371616	0					
ANR	371763	ArgumentList	n		371616	1					
ANR	371764	Argument	n		371616	0					
ANR	371765	Identifier	n		371616	0					
ANR	371766	PrimaryExpression	4		371616	1					
ANR	371767	CompoundStatement		20:55:506:506	371616	1					
ANR	371768	ExpressionStatement	k ++	310:3:6879:6883	371616	0	True				
ANR	371769	PostIncDecOperationExpression	k ++		371616	0					
ANR	371770	Identifier	k		371616	0					
ANR	371771	IncDec	++		371616	1					
ANR	371772	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	312:2:6891:6990	371616	3	True				
ANR	371773	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	0		=			
ANR	371774	Identifier	data		371616	0					
ANR	371775	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		|			
ANR	371776	Identifier	k		371616	0					
ANR	371777	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		|			
ANR	371778	ShiftExpression	op -> operands [ 0 ] . reg << 24		371616	0		<<			
ANR	371779	MemberAccess	op -> operands [ 0 ] . reg		371616	0					
ANR	371780	ArrayIndexing	op -> operands [ 0 ]		371616	0					
ANR	371781	PtrMemberAccess	op -> operands		371616	0					
ANR	371782	Identifier	op		371616	0					
ANR	371783	Identifier	operands		371616	1					
ANR	371784	PrimaryExpression	0		371616	1					
ANR	371785	Identifier	reg		371616	1					
ANR	371786	PrimaryExpression	24		371616	1					
ANR	371787	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		|			
ANR	371788	ShiftExpression	op -> operands [ 1 ] . reg << 29		371616	0		<<			
ANR	371789	MemberAccess	op -> operands [ 1 ] . reg		371616	0					
ANR	371790	ArrayIndexing	op -> operands [ 1 ]		371616	0					
ANR	371791	PtrMemberAccess	op -> operands		371616	0					
ANR	371792	Identifier	op		371616	0					
ANR	371793	Identifier	operands		371616	1					
ANR	371794	PrimaryExpression	1		371616	1					
ANR	371795	Identifier	reg		371616	1					
ANR	371796	PrimaryExpression	29		371616	1					
ANR	371797	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		371616	1		<<			
ANR	371798	BitAndExpression	op -> operands [ 1 ] . reg & 56		371616	0		&			
ANR	371799	MemberAccess	op -> operands [ 1 ] . reg		371616	0					
ANR	371800	ArrayIndexing	op -> operands [ 1 ]		371616	0					
ANR	371801	PtrMemberAccess	op -> operands		371616	0					
ANR	371802	Identifier	op		371616	0					
ANR	371803	Identifier	operands		371616	1					
ANR	371804	PrimaryExpression	1		371616	1					
ANR	371805	Identifier	reg		371616	1					
ANR	371806	PrimaryExpression	56		371616	1					
ANR	371807	PrimaryExpression	13		371616	1					
ANR	371808	IfStatement	if ( n < 0 )		371616	4					
ANR	371809	Condition	n < 0	314:6:6999:7003	371616	0	True				
ANR	371810	RelationalExpression	n < 0		371616	0		<			
ANR	371811	Identifier	n		371616	0					
ANR	371812	PrimaryExpression	0		371616	1					
ANR	371813	CompoundStatement		25:13:638:638	371616	1					
ANR	371814	ExpressionStatement	n *= - 1	315:3:7011:7018	371616	0	True				
ANR	371815	AssignmentExpression	n *= - 1		371616	0		*=			
ANR	371816	Identifier	n		371616	0					
ANR	371817	UnaryOperationExpression	- 1		371616	1					
ANR	371818	UnaryOperator	-		371616	0					
ANR	371819	PrimaryExpression	1		371616	1					
ANR	371820	ExpressionStatement	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20	316:3:7023:7062	371616	1	True				
ANR	371821	AssignmentExpression	data |= ( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		371616	0		|=			
ANR	371822	Identifier	data		371616	0					
ANR	371823	ShiftExpression	( 0xf & ( 0xf - ( n - 1 ) ) ) << 20		371616	1		<<			
ANR	371824	BitAndExpression	0xf & ( 0xf - ( n - 1 ) )		371616	0		&			
ANR	371825	PrimaryExpression	0xf		371616	0					
ANR	371826	AdditiveExpression	0xf - ( n - 1 )		371616	1		-			
ANR	371827	PrimaryExpression	0xf		371616	0					
ANR	371828	AdditiveExpression	n - 1		371616	1		-			
ANR	371829	Identifier	n		371616	0					
ANR	371830	PrimaryExpression	1		371616	1					
ANR	371831	PrimaryExpression	20		371616	1					
ANR	371832	IfStatement	if ( countTrailingZeros ( n ) > 3 )		371616	2					
ANR	371833	Condition	countTrailingZeros ( n ) > 3	317:7:7071:7095	371616	0	True				
ANR	371834	RelationalExpression	countTrailingZeros ( n ) > 3		371616	0		>			
ANR	371835	CallExpression	countTrailingZeros ( n )		371616	0					
ANR	371836	Callee	countTrailingZeros		371616	0					
ANR	371837	Identifier	countTrailingZeros		371616	0					
ANR	371838	ArgumentList	n		371616	1					
ANR	371839	Argument	n		371616	0					
ANR	371840	Identifier	n		371616	0					
ANR	371841	PrimaryExpression	3		371616	1					
ANR	371842	CompoundStatement		28:34:730:730	371616	1					
ANR	371843	ExpressionStatement	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8	318:4:7104:7140	371616	0	True				
ANR	371844	AssignmentExpression	data |= ( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		371616	0		|=			
ANR	371845	Identifier	data		371616	0					
ANR	371846	ShiftExpression	( 0x1f - ( ( n >> 4 ) - 1 ) ) << 8		371616	1		<<			
ANR	371847	AdditiveExpression	0x1f - ( ( n >> 4 ) - 1 )		371616	0		-			
ANR	371848	PrimaryExpression	0x1f		371616	0					
ANR	371849	AdditiveExpression	( n >> 4 ) - 1		371616	1		-			
ANR	371850	ShiftExpression	n >> 4		371616	0		>>			
ANR	371851	Identifier	n		371616	0					
ANR	371852	PrimaryExpression	4		371616	1					
ANR	371853	PrimaryExpression	1		371616	1					
ANR	371854	PrimaryExpression	8		371616	1					
ANR	371855	ElseStatement	else		371616	0					
ANR	371856	CompoundStatement		30:10:784:784	371616	0					
ANR	371857	ExpressionStatement	data |= ( 0x1f - ( n >> 4 ) ) << 8	320:4:7158:7188	371616	0	True				
ANR	371858	AssignmentExpression	data |= ( 0x1f - ( n >> 4 ) ) << 8		371616	0		|=			
ANR	371859	Identifier	data		371616	0					
ANR	371860	ShiftExpression	( 0x1f - ( n >> 4 ) ) << 8		371616	1		<<			
ANR	371861	AdditiveExpression	0x1f - ( n >> 4 )		371616	0		-			
ANR	371862	PrimaryExpression	0x1f		371616	0					
ANR	371863	ShiftExpression	n >> 4		371616	1		>>			
ANR	371864	Identifier	n		371616	0					
ANR	371865	PrimaryExpression	4		371616	1					
ANR	371866	PrimaryExpression	8		371616	1					
ANR	371867	ElseStatement	else		371616	0					
ANR	371868	CompoundStatement		33:9:836:836	371616	0					
ANR	371869	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG32 )		371616	0					
ANR	371870	Condition	op -> operands [ 0 ] . reg_type & ARM_REG32	323:7:7213:7248	371616	0	True				
ANR	371871	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG32		371616	0		&			
ANR	371872	MemberAccess	op -> operands [ 0 ] . reg_type		371616	0					
ANR	371873	ArrayIndexing	op -> operands [ 0 ]		371616	0					
ANR	371874	PtrMemberAccess	op -> operands		371616	0					
ANR	371875	Identifier	op		371616	0					
ANR	371876	Identifier	operands		371616	1					
ANR	371877	PrimaryExpression	0		371616	1					
ANR	371878	Identifier	reg_type		371616	1					
ANR	371879	Identifier	ARM_REG32		371616	1					
ANR	371880	CompoundStatement		34:45:883:883	371616	1					
ANR	371881	IfStatement	if ( countTrailingZeros ( n ) < 2 )		371616	0					
ANR	371882	Condition	countTrailingZeros ( n ) < 2	324:8:7261:7285	371616	0	True				
ANR	371883	RelationalExpression	countTrailingZeros ( n ) < 2		371616	0		<			
ANR	371884	CallExpression	countTrailingZeros ( n )		371616	0					
ANR	371885	Callee	countTrailingZeros		371616	0					
ANR	371886	Identifier	countTrailingZeros		371616	0					
ANR	371887	ArgumentList	n		371616	1					
ANR	371888	Argument	n		371616	0					
ANR	371889	Identifier	n		371616	0					
ANR	371890	PrimaryExpression	2		371616	1					
ANR	371891	CompoundStatement		35:35:920:920	371616	1					
ANR	371892	ExpressionStatement	data |= ( 0xf & ( n & 63 ) ) << 20	325:5:7295:7325	371616	0	True				
ANR	371893	AssignmentExpression	data |= ( 0xf & ( n & 63 ) ) << 20		371616	0		|=			
ANR	371894	Identifier	data		371616	0					
ANR	371895	ShiftExpression	( 0xf & ( n & 63 ) ) << 20		371616	1		<<			
ANR	371896	BitAndExpression	0xf & ( n & 63 )		371616	0		&			
ANR	371897	PrimaryExpression	0xf		371616	0					
ANR	371898	BitAndExpression	n & 63		371616	1		&			
ANR	371899	Identifier	n		371616	0					
ANR	371900	PrimaryExpression	63		371616	1					
ANR	371901	PrimaryExpression	20		371616	1					
ANR	371902	ExpressionStatement	data |= ( n >> 4 ) << 8	326:5:7332:7353	371616	1	True				
ANR	371903	AssignmentExpression	data |= ( n >> 4 ) << 8		371616	0		|=			
ANR	371904	Identifier	data		371616	0					
ANR	371905	ShiftExpression	( n >> 4 ) << 8		371616	1		<<			
ANR	371906	ShiftExpression	n >> 4		371616	0		>>			
ANR	371907	Identifier	n		371616	0					
ANR	371908	PrimaryExpression	4		371616	1					
ANR	371909	PrimaryExpression	8		371616	1					
ANR	371910	ElseStatement	else		371616	0					
ANR	371911	CompoundStatement		38:11:998:998	371616	0					
ANR	371912	ExpressionStatement	data ++	328:6:7374:7380	371616	0	True				
ANR	371913	PostIncDecOperationExpression	data ++		371616	0					
ANR	371914	Identifier	data		371616	0					
ANR	371915	IncDec	++		371616	1					
ANR	371916	ExpressionStatement	data |= ( 0xff & n ) << 16	329:6:7388:7412	371616	1	True				
ANR	371917	AssignmentExpression	data |= ( 0xff & n ) << 16		371616	0		|=			
ANR	371918	Identifier	data		371616	0					
ANR	371919	ShiftExpression	( 0xff & n ) << 16		371616	1		<<			
ANR	371920	BitAndExpression	0xff & n		371616	0		&			
ANR	371921	PrimaryExpression	0xff		371616	0					
ANR	371922	Identifier	n		371616	1					
ANR	371923	PrimaryExpression	16		371616	1					
ANR	371924	ExpressionStatement	data |= ( n >> 8 ) << 8	331:4:7424:7445	371616	1	True				
ANR	371925	AssignmentExpression	data |= ( n >> 8 ) << 8		371616	0		|=			
ANR	371926	Identifier	data		371616	0					
ANR	371927	ShiftExpression	( n >> 8 ) << 8		371616	1		<<			
ANR	371928	ShiftExpression	n >> 8		371616	0		>>			
ANR	371929	Identifier	n		371616	0					
ANR	371930	PrimaryExpression	8		371616	1					
ANR	371931	PrimaryExpression	8		371616	1					
ANR	371932	ElseStatement	else		371616	0					
ANR	371933	CompoundStatement		43:10:1089:1089	371616	0					
ANR	371934	ExpressionStatement	data |= ( 0xf & ( n & 63 ) ) << 20	333:4:7463:7493	371616	0	True				
ANR	371935	AssignmentExpression	data |= ( 0xf & ( n & 63 ) ) << 20		371616	0		|=			
ANR	371936	Identifier	data		371616	0					
ANR	371937	ShiftExpression	( 0xf & ( n & 63 ) ) << 20		371616	1		<<			
ANR	371938	BitAndExpression	0xf & ( n & 63 )		371616	0		&			
ANR	371939	PrimaryExpression	0xf		371616	0					
ANR	371940	BitAndExpression	n & 63		371616	1		&			
ANR	371941	Identifier	n		371616	0					
ANR	371942	PrimaryExpression	63		371616	1					
ANR	371943	PrimaryExpression	20		371616	1					
ANR	371944	IfStatement	if ( countTrailingZeros ( n ) < 4 )		371616	1					
ANR	371945	Condition	countTrailingZeros ( n ) < 4	334:8:7503:7527	371616	0	True				
ANR	371946	RelationalExpression	countTrailingZeros ( n ) < 4		371616	0		<			
ANR	371947	CallExpression	countTrailingZeros ( n )		371616	0					
ANR	371948	Callee	countTrailingZeros		371616	0					
ANR	371949	Identifier	countTrailingZeros		371616	0					
ANR	371950	ArgumentList	n		371616	1					
ANR	371951	Argument	n		371616	0					
ANR	371952	Identifier	n		371616	0					
ANR	371953	PrimaryExpression	4		371616	1					
ANR	371954	CompoundStatement		45:35:1162:1162	371616	1					
ANR	371955	ExpressionStatement	data |= ( n >> 4 ) << 8	335:5:7537:7558	371616	0	True				
ANR	371956	AssignmentExpression	data |= ( n >> 4 ) << 8		371616	0		|=			
ANR	371957	Identifier	data		371616	0					
ANR	371958	ShiftExpression	( n >> 4 ) << 8		371616	1		<<			
ANR	371959	ShiftExpression	n >> 4		371616	0		>>			
ANR	371960	Identifier	n		371616	0					
ANR	371961	PrimaryExpression	4		371616	1					
ANR	371962	PrimaryExpression	8		371616	1					
ANR	371963	ElseStatement	else		371616	0					
ANR	371964	CompoundStatement		47:11:1203:1203	371616	0					
ANR	371965	ExpressionStatement	data |= ( 0xff & n ) << 15	337:5:7578:7602	371616	0	True				
ANR	371966	AssignmentExpression	data |= ( 0xff & n ) << 15		371616	0		|=			
ANR	371967	Identifier	data		371616	0					
ANR	371968	ShiftExpression	( 0xff & n ) << 15		371616	1		<<			
ANR	371969	BitAndExpression	0xff & n		371616	0		&			
ANR	371970	PrimaryExpression	0xff		371616	0					
ANR	371971	Identifier	n		371616	1					
ANR	371972	PrimaryExpression	15		371616	1					
ANR	371973	ExpressionStatement	data |= ( n >> 8 ) << 23	339:4:7614:7636	371616	2	True				
ANR	371974	AssignmentExpression	data |= ( n >> 8 ) << 23		371616	0		|=			
ANR	371975	Identifier	data		371616	0					
ANR	371976	ShiftExpression	( n >> 8 ) << 23		371616	1		<<			
ANR	371977	ShiftExpression	n >> 8		371616	0		>>			
ANR	371978	Identifier	n		371616	0					
ANR	371979	PrimaryExpression	8		371616	1					
ANR	371980	PrimaryExpression	23		371616	1					
ANR	371981	ReturnStatement	return data ;	343:1:7651:7662	371616	4	True				
ANR	371982	Identifier	data		371616	0					
ANR	371983	ReturnType	static ut32		371616	1					
ANR	371984	Identifier	reglsop		371616	2					
ANR	371985	ParameterList	"ArmOp * op , int k"		371616	3					
ANR	371986	Parameter	ArmOp * op	290:20:6349:6357	371616	0	True				
ANR	371987	ParameterType	ArmOp *		371616	0					
ANR	371988	Identifier	op		371616	1					
ANR	371989	Parameter	int k	290:31:6360:6364	371616	1	True				
ANR	371990	ParameterType	int		371616	0					
ANR	371991	Identifier	k		371616	1					
ANR	371992	CFGEntryNode	ENTRY		371616		True				
ANR	371993	CFGExitNode	EXIT		371616		True				
ANR	371994	Symbol	UT32_MAX		371616						
ANR	371995	Symbol	op -> operands [ 2 ] . reg		371616						
ANR	371996	Symbol	op -> operands [ 2 ] . immediate		371616						
ANR	371997	Symbol	op		371616						
ANR	371998	Symbol	data		371616						
ANR	371999	Symbol	* op		371616						
ANR	372000	Symbol	op -> operands [ 1 ] . reg		371616						
ANR	372001	Symbol	op -> operands [ 1 ] . reg_type		371616						
ANR	372002	Symbol	k		371616						
ANR	372003	Symbol	op -> operands [ 0 ] . reg_type		371616						
ANR	372004	Symbol	op -> operands [ 2 ] . type		371616						
ANR	372005	Symbol	ARM_GPR		371616						
ANR	372006	Symbol	n		371616						
ANR	372007	Symbol	* * op		371616						
ANR	372008	Symbol	ARM_REG32		371616						
ANR	372009	Symbol	* op -> operands		371616						
ANR	372010	Symbol	countTrailingZeros		371616						
ANR	372011	Symbol	op -> operands [ 0 ] . reg		371616						
ANR	372012	Symbol	op -> operands		371616						
ANR	372013	Function	bytelsop	347:0:7690:9182							
ANR	372014	FunctionDef	"bytelsop (ArmOp * op , int k)"		372013	0					
ANR	372015	CompoundStatement		347:39:7729:9182	372013	0					
ANR	372016	IdentifierDeclStatement	ut32 data = UT32_MAX ;	348:1:7732:7752	372013	0	True				
ANR	372017	IdentifierDecl	data = UT32_MAX		372013	0					
ANR	372018	IdentifierDeclType	ut32		372013	0					
ANR	372019	Identifier	data		372013	1					
ANR	372020	AssignmentExpression	data = UT32_MAX		372013	2		=			
ANR	372021	Identifier	UT32_MAX		372013	0					
ANR	372022	Identifier	UT32_MAX		372013	1					
ANR	372023	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		372013	1					
ANR	372024	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	350:5:7760:7795	372013	0	True				
ANR	372025	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		372013	0		&			
ANR	372026	MemberAccess	op -> operands [ 0 ] . reg_type		372013	0					
ANR	372027	ArrayIndexing	op -> operands [ 0 ]		372013	0					
ANR	372028	PtrMemberAccess	op -> operands		372013	0					
ANR	372029	Identifier	op		372013	0					
ANR	372030	Identifier	operands		372013	1					
ANR	372031	PrimaryExpression	0		372013	1					
ANR	372032	Identifier	reg_type		372013	1					
ANR	372033	Identifier	ARM_REG64		372013	1					
ANR	372034	CompoundStatement		4:43:68:68	372013	1					
ANR	372035	ReturnStatement	return data ;	351:2:7802:7813	372013	0	True				
ANR	372036	Identifier	data		372013	0					
ANR	372037	IfStatement	if ( op -> operands [ 1 ] . reg_type & ARM_REG32 )		372013	2					
ANR	372038	Condition	op -> operands [ 1 ] . reg_type & ARM_REG32	353:5:7823:7858	372013	0	True				
ANR	372039	BitAndExpression	op -> operands [ 1 ] . reg_type & ARM_REG32		372013	0		&			
ANR	372040	MemberAccess	op -> operands [ 1 ] . reg_type		372013	0					
ANR	372041	ArrayIndexing	op -> operands [ 1 ]		372013	0					
ANR	372042	PtrMemberAccess	op -> operands		372013	0					
ANR	372043	Identifier	op		372013	0					
ANR	372044	Identifier	operands		372013	1					
ANR	372045	PrimaryExpression	1		372013	1					
ANR	372046	Identifier	reg_type		372013	1					
ANR	372047	Identifier	ARM_REG32		372013	1					
ANR	372048	CompoundStatement		7:43:131:131	372013	1					
ANR	372049	ReturnStatement	return data ;	354:2:7865:7876	372013	0	True				
ANR	372050	Identifier	data		372013	0					
ANR	372051	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		372013	3					
ANR	372052	Condition	op -> operands [ 2 ] . type & ARM_GPR	356:5:7886:7915	372013	0	True				
ANR	372053	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		372013	0		&			
ANR	372054	MemberAccess	op -> operands [ 2 ] . type		372013	0					
ANR	372055	ArrayIndexing	op -> operands [ 2 ]		372013	0					
ANR	372056	PtrMemberAccess	op -> operands		372013	0					
ANR	372057	Identifier	op		372013	0					
ANR	372058	Identifier	operands		372013	1					
ANR	372059	PrimaryExpression	2		372013	1					
ANR	372060	Identifier	type		372013	1					
ANR	372061	Identifier	ARM_GPR		372013	1					
ANR	372062	CompoundStatement		10:37:188:188	372013	1					
ANR	372063	IfStatement	if ( ( k & 0xf ) != 8 )		372013	0					
ANR	372064	Condition	( k & 0xf ) != 8	357:6:7926:7939	372013	0	True				
ANR	372065	EqualityExpression	( k & 0xf ) != 8		372013	0		!=			
ANR	372066	BitAndExpression	k & 0xf		372013	0		&			
ANR	372067	Identifier	k		372013	0					
ANR	372068	PrimaryExpression	0xf		372013	1					
ANR	372069	PrimaryExpression	8		372013	1					
ANR	372070	CompoundStatement		11:22:212:212	372013	1					
ANR	372071	ExpressionStatement	k --	358:3:7947:7950	372013	0	True				
ANR	372072	PostIncDecOperationExpression	k --		372013	0					
ANR	372073	Identifier	k		372013	0					
ANR	372074	IncDec	--		372013	1					
ANR	372075	ExpressionStatement	k += 0x00682000	360:2:7958:7973	372013	1	True				
ANR	372076	AssignmentExpression	k += 0x00682000		372013	0		+=			
ANR	372077	Identifier	k		372013	0					
ANR	372078	PrimaryExpression	0x00682000		372013	1					
ANR	372079	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	361:2:7977:8076	372013	2	True				
ANR	372080	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	0		=			
ANR	372081	Identifier	data		372013	0					
ANR	372082	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		|			
ANR	372083	Identifier	k		372013	0					
ANR	372084	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		|			
ANR	372085	ShiftExpression	op -> operands [ 0 ] . reg << 24		372013	0		<<			
ANR	372086	MemberAccess	op -> operands [ 0 ] . reg		372013	0					
ANR	372087	ArrayIndexing	op -> operands [ 0 ]		372013	0					
ANR	372088	PtrMemberAccess	op -> operands		372013	0					
ANR	372089	Identifier	op		372013	0					
ANR	372090	Identifier	operands		372013	1					
ANR	372091	PrimaryExpression	0		372013	1					
ANR	372092	Identifier	reg		372013	1					
ANR	372093	PrimaryExpression	24		372013	1					
ANR	372094	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		|			
ANR	372095	ShiftExpression	op -> operands [ 1 ] . reg << 29		372013	0		<<			
ANR	372096	MemberAccess	op -> operands [ 1 ] . reg		372013	0					
ANR	372097	ArrayIndexing	op -> operands [ 1 ]		372013	0					
ANR	372098	PtrMemberAccess	op -> operands		372013	0					
ANR	372099	Identifier	op		372013	0					
ANR	372100	Identifier	operands		372013	1					
ANR	372101	PrimaryExpression	1		372013	1					
ANR	372102	Identifier	reg		372013	1					
ANR	372103	PrimaryExpression	29		372013	1					
ANR	372104	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		<<			
ANR	372105	BitAndExpression	op -> operands [ 1 ] . reg & 56		372013	0		&			
ANR	372106	MemberAccess	op -> operands [ 1 ] . reg		372013	0					
ANR	372107	ArrayIndexing	op -> operands [ 1 ]		372013	0					
ANR	372108	PtrMemberAccess	op -> operands		372013	0					
ANR	372109	Identifier	op		372013	0					
ANR	372110	Identifier	operands		372013	1					
ANR	372111	PrimaryExpression	1		372013	1					
ANR	372112	Identifier	reg		372013	1					
ANR	372113	PrimaryExpression	56		372013	1					
ANR	372114	PrimaryExpression	13		372013	1					
ANR	372115	ExpressionStatement	data |= op -> operands [ 2 ] . reg << 8	362:2:8080:8112	372013	3	True				
ANR	372116	AssignmentExpression	data |= op -> operands [ 2 ] . reg << 8		372013	0		|=			
ANR	372117	Identifier	data		372013	0					
ANR	372118	ShiftExpression	op -> operands [ 2 ] . reg << 8		372013	1		<<			
ANR	372119	MemberAccess	op -> operands [ 2 ] . reg		372013	0					
ANR	372120	ArrayIndexing	op -> operands [ 2 ]		372013	0					
ANR	372121	PtrMemberAccess	op -> operands		372013	0					
ANR	372122	Identifier	op		372013	0					
ANR	372123	Identifier	operands		372013	1					
ANR	372124	PrimaryExpression	2		372013	1					
ANR	372125	Identifier	reg		372013	1					
ANR	372126	PrimaryExpression	8		372013	1					
ANR	372127	ReturnStatement	return data ;	363:2:8116:8127	372013	4	True				
ANR	372128	Identifier	data		372013	0					
ANR	372129	IdentifierDeclStatement	int n = op -> operands [ 2 ] . immediate ;	366:1:8134:8167	372013	4	True				
ANR	372130	IdentifierDecl	n = op -> operands [ 2 ] . immediate		372013	0					
ANR	372131	IdentifierDeclType	int		372013	0					
ANR	372132	Identifier	n		372013	1					
ANR	372133	AssignmentExpression	n = op -> operands [ 2 ] . immediate		372013	2		=			
ANR	372134	Identifier	n		372013	0					
ANR	372135	MemberAccess	op -> operands [ 2 ] . immediate		372013	1					
ANR	372136	ArrayIndexing	op -> operands [ 2 ]		372013	0					
ANR	372137	PtrMemberAccess	op -> operands		372013	0					
ANR	372138	Identifier	op		372013	0					
ANR	372139	Identifier	operands		372013	1					
ANR	372140	PrimaryExpression	2		372013	1					
ANR	372141	Identifier	immediate		372013	1					
ANR	372142	IfStatement	if ( n > 0xfff || n < - 0x100 )		372013	5					
ANR	372143	Condition	n > 0xfff || n < - 0x100	367:5:8174:8196	372013	0	True				
ANR	372144	OrExpression	n > 0xfff || n < - 0x100		372013	0		||			
ANR	372145	RelationalExpression	n > 0xfff		372013	0		>			
ANR	372146	Identifier	n		372013	0					
ANR	372147	PrimaryExpression	0xfff		372013	1					
ANR	372148	RelationalExpression	n < - 0x100		372013	1		<			
ANR	372149	Identifier	n		372013	0					
ANR	372150	UnaryOperationExpression	- 0x100		372013	1					
ANR	372151	UnaryOperator	-		372013	0					
ANR	372152	PrimaryExpression	0x100		372013	1					
ANR	372153	CompoundStatement		21:30:469:469	372013	1					
ANR	372154	ReturnStatement	return UT32_MAX ;	368:2:8203:8218	372013	0	True				
ANR	372155	Identifier	UT32_MAX		372013	0					
ANR	372156	IdentifierDeclStatement	int halfop = false ;	371:1:8237:8255	372013	6	True				
ANR	372157	IdentifierDecl	halfop = false		372013	0					
ANR	372158	IdentifierDeclType	int		372013	0					
ANR	372159	Identifier	halfop		372013	1					
ANR	372160	AssignmentExpression	halfop = false		372013	2		=			
ANR	372161	Identifier	false		372013	0					
ANR	372162	Identifier	false		372013	1					
ANR	372163	IfStatement	if ( ( k & 0xf ) == 8 )		372013	7					
ANR	372164	Condition	( k & 0xf ) == 8	372:5:8262:8275	372013	0	True				
ANR	372165	EqualityExpression	( k & 0xf ) == 8		372013	0		==			
ANR	372166	BitAndExpression	k & 0xf		372013	0		&			
ANR	372167	Identifier	k		372013	0					
ANR	372168	PrimaryExpression	0xf		372013	1					
ANR	372169	PrimaryExpression	8		372013	1					
ANR	372170	CompoundStatement		26:21:548:548	372013	1					
ANR	372171	ExpressionStatement	halfop = true	373:2:8282:8295	372013	0	True				
ANR	372172	AssignmentExpression	halfop = true		372013	0		=			
ANR	372173	Identifier	halfop		372013	0					
ANR	372174	Identifier	true		372013	1					
ANR	372175	IfStatement	if ( n == 0 || ( countTrailingZeros ( n ) && n > 0 ) )		372013	1					
ANR	372176	Condition	n == 0 || ( countTrailingZeros ( n ) && n > 0 )	374:6:8303:8344	372013	0	True				
ANR	372177	OrExpression	n == 0 || ( countTrailingZeros ( n ) && n > 0 )		372013	0		||			
ANR	372178	EqualityExpression	n == 0		372013	0		==			
ANR	372179	Identifier	n		372013	0					
ANR	372180	PrimaryExpression	0		372013	1					
ANR	372181	AndExpression	countTrailingZeros ( n ) && n > 0		372013	1		&&			
ANR	372182	CallExpression	countTrailingZeros ( n )		372013	0					
ANR	372183	Callee	countTrailingZeros		372013	0					
ANR	372184	Identifier	countTrailingZeros		372013	0					
ANR	372185	ArgumentList	n		372013	1					
ANR	372186	Argument	n		372013	0					
ANR	372187	Identifier	n		372013	0					
ANR	372188	RelationalExpression	n > 0		372013	1		>			
ANR	372189	Identifier	n		372013	0					
ANR	372190	PrimaryExpression	0		372013	1					
ANR	372191	CompoundStatement		28:50:617:617	372013	1					
ANR	372192	ExpressionStatement	k ++	375:3:8352:8355	372013	0	True				
ANR	372193	PostIncDecOperationExpression	k ++		372013	0					
ANR	372194	Identifier	k		372013	0					
ANR	372195	IncDec	++		372013	1					
ANR	372196	ElseStatement	else		372013	0					
ANR	372197	CompoundStatement		31:8:639:639	372013	0					
ANR	372198	IfStatement	if ( n < 0 )		372013	0					
ANR	372199	Condition	n < 0	378:6:8377:8381	372013	0	True				
ANR	372200	RelationalExpression	n < 0		372013	0		<			
ANR	372201	Identifier	n		372013	0					
ANR	372202	PrimaryExpression	0		372013	1					
ANR	372203	CompoundStatement		32:13:654:654	372013	1					
ANR	372204	ExpressionStatement	k --	379:3:8389:8392	372013	0	True				
ANR	372205	PostIncDecOperationExpression	k --		372013	0					
ANR	372206	Identifier	k		372013	0					
ANR	372207	IncDec	--		372013	1					
ANR	372208	ExpressionStatement	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13	383:1:8403:8502	372013	8	True				
ANR	372209	AssignmentExpression	data = k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	0		=			
ANR	372210	Identifier	data		372013	0					
ANR	372211	InclusiveOrExpression	k | op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		|			
ANR	372212	Identifier	k		372013	0					
ANR	372213	InclusiveOrExpression	op -> operands [ 0 ] . reg << 24 | op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		|			
ANR	372214	ShiftExpression	op -> operands [ 0 ] . reg << 24		372013	0		<<			
ANR	372215	MemberAccess	op -> operands [ 0 ] . reg		372013	0					
ANR	372216	ArrayIndexing	op -> operands [ 0 ]		372013	0					
ANR	372217	PtrMemberAccess	op -> operands		372013	0					
ANR	372218	Identifier	op		372013	0					
ANR	372219	Identifier	operands		372013	1					
ANR	372220	PrimaryExpression	0		372013	1					
ANR	372221	Identifier	reg		372013	1					
ANR	372222	PrimaryExpression	24		372013	1					
ANR	372223	InclusiveOrExpression	op -> operands [ 1 ] . reg << 29 | ( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		|			
ANR	372224	ShiftExpression	op -> operands [ 1 ] . reg << 29		372013	0		<<			
ANR	372225	MemberAccess	op -> operands [ 1 ] . reg		372013	0					
ANR	372226	ArrayIndexing	op -> operands [ 1 ]		372013	0					
ANR	372227	PtrMemberAccess	op -> operands		372013	0					
ANR	372228	Identifier	op		372013	0					
ANR	372229	Identifier	operands		372013	1					
ANR	372230	PrimaryExpression	1		372013	1					
ANR	372231	Identifier	reg		372013	1					
ANR	372232	PrimaryExpression	29		372013	1					
ANR	372233	ShiftExpression	( op -> operands [ 1 ] . reg & 56 ) << 13		372013	1		<<			
ANR	372234	BitAndExpression	op -> operands [ 1 ] . reg & 56		372013	0		&			
ANR	372235	MemberAccess	op -> operands [ 1 ] . reg		372013	0					
ANR	372236	ArrayIndexing	op -> operands [ 1 ]		372013	0					
ANR	372237	PtrMemberAccess	op -> operands		372013	0					
ANR	372238	Identifier	op		372013	0					
ANR	372239	Identifier	operands		372013	1					
ANR	372240	PrimaryExpression	1		372013	1					
ANR	372241	Identifier	reg		372013	1					
ANR	372242	PrimaryExpression	56		372013	1					
ANR	372243	PrimaryExpression	13		372013	1					
ANR	372244	IdentifierDeclStatement	int imm = n ;	385:1:8506:8517	372013	9	True				
ANR	372245	IdentifierDecl	imm = n		372013	0					
ANR	372246	IdentifierDeclType	int		372013	0					
ANR	372247	Identifier	imm		372013	1					
ANR	372248	AssignmentExpression	imm = n		372013	2		=			
ANR	372249	Identifier	n		372013	0					
ANR	372250	Identifier	n		372013	1					
ANR	372251	IdentifierDeclStatement	int low_shift = 20 ;	386:1:8520:8538	372013	10	True				
ANR	372252	IdentifierDecl	low_shift = 20		372013	0					
ANR	372253	IdentifierDeclType	int		372013	0					
ANR	372254	Identifier	low_shift		372013	1					
ANR	372255	AssignmentExpression	low_shift = 20		372013	2		=			
ANR	372256	Identifier	low_shift		372013	0					
ANR	372257	PrimaryExpression	20		372013	1					
ANR	372258	IdentifierDeclStatement	int high_shift = 8 ;	387:1:8541:8559	372013	11	True				
ANR	372259	IdentifierDecl	high_shift = 8		372013	0					
ANR	372260	IdentifierDeclType	int		372013	0					
ANR	372261	Identifier	high_shift		372013	1					
ANR	372262	AssignmentExpression	high_shift = 8		372013	2		=			
ANR	372263	Identifier	high_shift		372013	0					
ANR	372264	PrimaryExpression	8		372013	1					
ANR	372265	IdentifierDeclStatement	int top_shift = 10 ;	388:1:8562:8580	372013	12	True				
ANR	372266	IdentifierDecl	top_shift = 10		372013	0					
ANR	372267	IdentifierDeclType	int		372013	0					
ANR	372268	Identifier	top_shift		372013	1					
ANR	372269	AssignmentExpression	top_shift = 10		372013	2		=			
ANR	372270	Identifier	top_shift		372013	0					
ANR	372271	PrimaryExpression	10		372013	1					
ANR	372272	IfStatement	if ( n < 0 )		372013	13					
ANR	372273	Condition	n < 0	389:5:8587:8591	372013	0	True				
ANR	372274	RelationalExpression	n < 0		372013	0		<			
ANR	372275	Identifier	n		372013	0					
ANR	372276	PrimaryExpression	0		372013	1					
ANR	372277	CompoundStatement		43:12:864:864	372013	1					
ANR	372278	ExpressionStatement	imm = 0xfff + ( n + 1 )	390:2:8598:8619	372013	0	True				
ANR	372279	AssignmentExpression	imm = 0xfff + ( n + 1 )		372013	0		=			
ANR	372280	Identifier	imm		372013	0					
ANR	372281	AdditiveExpression	0xfff + ( n + 1 )		372013	1		+			
ANR	372282	PrimaryExpression	0xfff		372013	0					
ANR	372283	AdditiveExpression	n + 1		372013	1		+			
ANR	372284	Identifier	n		372013	0					
ANR	372285	PrimaryExpression	1		372013	1					
ANR	372286	IfStatement	if ( halfop )		372013	14					
ANR	372287	Condition	halfop	392:5:8629:8634	372013	0	True				
ANR	372288	Identifier	halfop		372013	0					
ANR	372289	CompoundStatement		46:13:907:907	372013	1					
ANR	372290	IfStatement	if ( imm & 0x1 || n < 0 )		372013	0					
ANR	372291	Condition	imm & 0x1 || n < 0	393:6:8645:8662	372013	0	True				
ANR	372292	OrExpression	imm & 0x1 || n < 0		372013	0		||			
ANR	372293	BitAndExpression	imm & 0x1		372013	0		&			
ANR	372294	Identifier	imm		372013	0					
ANR	372295	PrimaryExpression	0x1		372013	1					
ANR	372296	RelationalExpression	n < 0		372013	1		<			
ANR	372297	Identifier	n		372013	0					
ANR	372298	PrimaryExpression	0		372013	1					
ANR	372299	CompoundStatement		47:26:935:935	372013	1					
ANR	372300	ExpressionStatement	data |= ( 0xf & imm ) << low_shift	394:3:8670:8703	372013	0	True				
ANR	372301	AssignmentExpression	data |= ( 0xf & imm ) << low_shift		372013	0		|=			
ANR	372302	Identifier	data		372013	0					
ANR	372303	ShiftExpression	( 0xf & imm ) << low_shift		372013	1		<<			
ANR	372304	BitAndExpression	0xf & imm		372013	0		&			
ANR	372305	PrimaryExpression	0xf		372013	0					
ANR	372306	Identifier	imm		372013	1					
ANR	372307	Identifier	low_shift		372013	1					
ANR	372308	ExpressionStatement	data |= ( 0x7 & ( imm >> 4 ) ) << high_shift	395:3:8708:8748	372013	1	True				
ANR	372309	AssignmentExpression	data |= ( 0x7 & ( imm >> 4 ) ) << high_shift		372013	0		|=			
ANR	372310	Identifier	data		372013	0					
ANR	372311	ShiftExpression	( 0x7 & ( imm >> 4 ) ) << high_shift		372013	1		<<			
ANR	372312	BitAndExpression	0x7 & ( imm >> 4 )		372013	0		&			
ANR	372313	PrimaryExpression	0x7		372013	0					
ANR	372314	ShiftExpression	imm >> 4		372013	1		>>			
ANR	372315	Identifier	imm		372013	0					
ANR	372316	PrimaryExpression	4		372013	1					
ANR	372317	Identifier	high_shift		372013	1					
ANR	372318	ExpressionStatement	data |= ( 0x7 & ( imm >> 6 ) ) << top_shift	396:3:8753:8792	372013	2	True				
ANR	372319	AssignmentExpression	data |= ( 0x7 & ( imm >> 6 ) ) << top_shift		372013	0		|=			
ANR	372320	Identifier	data		372013	0					
ANR	372321	ShiftExpression	( 0x7 & ( imm >> 6 ) ) << top_shift		372013	1		<<			
ANR	372322	BitAndExpression	0x7 & ( imm >> 6 )		372013	0		&			
ANR	372323	PrimaryExpression	0x7		372013	0					
ANR	372324	ShiftExpression	imm >> 6		372013	1		>>			
ANR	372325	Identifier	imm		372013	0					
ANR	372326	PrimaryExpression	6		372013	1					
ANR	372327	Identifier	top_shift		372013	1					
ANR	372328	ElseStatement	else		372013	0					
ANR	372329	CompoundStatement		51:9:1073:1073	372013	0					
ANR	372330	ExpressionStatement	data |= ( 0xf & imm ) << ( low_shift - 3 )	398:3:8808:8846	372013	0	True				
ANR	372331	AssignmentExpression	data |= ( 0xf & imm ) << ( low_shift - 3 )		372013	0		|=			
ANR	372332	Identifier	data		372013	0					
ANR	372333	ShiftExpression	( 0xf & imm ) << ( low_shift - 3 )		372013	1		<<			
ANR	372334	BitAndExpression	0xf & imm		372013	0		&			
ANR	372335	PrimaryExpression	0xf		372013	0					
ANR	372336	Identifier	imm		372013	1					
ANR	372337	AdditiveExpression	low_shift - 3		372013	1		-			
ANR	372338	Identifier	low_shift		372013	0					
ANR	372339	PrimaryExpression	3		372013	1					
ANR	372340	ExpressionStatement	data |= ( 0x7 & ( imm >> 4 ) ) << ( high_shift + 13 )	399:3:8851:8898	372013	1	True				
ANR	372341	AssignmentExpression	data |= ( 0x7 & ( imm >> 4 ) ) << ( high_shift + 13 )		372013	0		|=			
ANR	372342	Identifier	data		372013	0					
ANR	372343	ShiftExpression	( 0x7 & ( imm >> 4 ) ) << ( high_shift + 13 )		372013	1		<<			
ANR	372344	BitAndExpression	0x7 & ( imm >> 4 )		372013	0		&			
ANR	372345	PrimaryExpression	0x7		372013	0					
ANR	372346	ShiftExpression	imm >> 4		372013	1		>>			
ANR	372347	Identifier	imm		372013	0					
ANR	372348	PrimaryExpression	4		372013	1					
ANR	372349	AdditiveExpression	high_shift + 13		372013	1		+			
ANR	372350	Identifier	high_shift		372013	0					
ANR	372351	PrimaryExpression	13		372013	1					
ANR	372352	ExpressionStatement	data |= ( 0x7 & ( imm >> 7 ) ) << ( top_shift - 2 )	400:3:8903:8949	372013	2	True				
ANR	372353	AssignmentExpression	data |= ( 0x7 & ( imm >> 7 ) ) << ( top_shift - 2 )		372013	0		|=			
ANR	372354	Identifier	data		372013	0					
ANR	372355	ShiftExpression	( 0x7 & ( imm >> 7 ) ) << ( top_shift - 2 )		372013	1		<<			
ANR	372356	BitAndExpression	0x7 & ( imm >> 7 )		372013	0		&			
ANR	372357	PrimaryExpression	0x7		372013	0					
ANR	372358	ShiftExpression	imm >> 7		372013	1		>>			
ANR	372359	Identifier	imm		372013	0					
ANR	372360	PrimaryExpression	7		372013	1					
ANR	372361	AdditiveExpression	top_shift - 2		372013	1		-			
ANR	372362	Identifier	top_shift		372013	0					
ANR	372363	PrimaryExpression	2		372013	1					
ANR	372364	ElseStatement	else		372013	0					
ANR	372365	CompoundStatement		56:8:1233:1233	372013	0					
ANR	372366	IfStatement	if ( n < 0 )		372013	0					
ANR	372367	Condition	n < 0	403:6:8971:8975	372013	0	True				
ANR	372368	RelationalExpression	n < 0		372013	0		<			
ANR	372369	Identifier	n		372013	0					
ANR	372370	PrimaryExpression	0		372013	1					
ANR	372371	CompoundStatement		57:13:1248:1248	372013	1					
ANR	372372	ExpressionStatement	data |= ( 0xf & imm ) << 20	404:3:8983:9008	372013	0	True				
ANR	372373	AssignmentExpression	data |= ( 0xf & imm ) << 20		372013	0		|=			
ANR	372374	Identifier	data		372013	0					
ANR	372375	ShiftExpression	( 0xf & imm ) << 20		372013	1		<<			
ANR	372376	BitAndExpression	0xf & imm		372013	0		&			
ANR	372377	PrimaryExpression	0xf		372013	0					
ANR	372378	Identifier	imm		372013	1					
ANR	372379	PrimaryExpression	20		372013	1					
ANR	372380	ExpressionStatement	data |= ( 0x1f & ( imm >> 4 ) ) << 8	405:3:9013:9045	372013	1	True				
ANR	372381	AssignmentExpression	data |= ( 0x1f & ( imm >> 4 ) ) << 8		372013	0		|=			
ANR	372382	Identifier	data		372013	0					
ANR	372383	ShiftExpression	( 0x1f & ( imm >> 4 ) ) << 8		372013	1		<<			
ANR	372384	BitAndExpression	0x1f & ( imm >> 4 )		372013	0		&			
ANR	372385	PrimaryExpression	0x1f		372013	0					
ANR	372386	ShiftExpression	imm >> 4		372013	1		>>			
ANR	372387	Identifier	imm		372013	0					
ANR	372388	PrimaryExpression	4		372013	1					
ANR	372389	PrimaryExpression	8		372013	1					
ANR	372390	ElseStatement	else		372013	0					
ANR	372391	CompoundStatement		60:9:1326:1326	372013	0					
ANR	372392	ExpressionStatement	data |= ( 0xf & imm ) << 18	407:3:9061:9086	372013	0	True				
ANR	372393	AssignmentExpression	data |= ( 0xf & imm ) << 18		372013	0		|=			
ANR	372394	Identifier	data		372013	0					
ANR	372395	ShiftExpression	( 0xf & imm ) << 18		372013	1		<<			
ANR	372396	BitAndExpression	0xf & imm		372013	0		&			
ANR	372397	PrimaryExpression	0xf		372013	0					
ANR	372398	Identifier	imm		372013	1					
ANR	372399	PrimaryExpression	18		372013	1					
ANR	372400	ExpressionStatement	data |= ( 0x3 & ( imm >> 4 ) ) << 22	408:3:9091:9123	372013	1	True				
ANR	372401	AssignmentExpression	data |= ( 0x3 & ( imm >> 4 ) ) << 22		372013	0		|=			
ANR	372402	Identifier	data		372013	0					
ANR	372403	ShiftExpression	( 0x3 & ( imm >> 4 ) ) << 22		372013	1		<<			
ANR	372404	BitAndExpression	0x3 & ( imm >> 4 )		372013	0		&			
ANR	372405	PrimaryExpression	0x3		372013	0					
ANR	372406	ShiftExpression	imm >> 4		372013	1		>>			
ANR	372407	Identifier	imm		372013	0					
ANR	372408	PrimaryExpression	4		372013	1					
ANR	372409	PrimaryExpression	22		372013	1					
ANR	372410	ExpressionStatement	data |= ( 0x7 & ( imm >> 6 ) ) << 8	409:3:9128:9159	372013	2	True				
ANR	372411	AssignmentExpression	data |= ( 0x7 & ( imm >> 6 ) ) << 8		372013	0		|=			
ANR	372412	Identifier	data		372013	0					
ANR	372413	ShiftExpression	( 0x7 & ( imm >> 6 ) ) << 8		372013	1		<<			
ANR	372414	BitAndExpression	0x7 & ( imm >> 6 )		372013	0		&			
ANR	372415	PrimaryExpression	0x7		372013	0					
ANR	372416	ShiftExpression	imm >> 6		372013	1		>>			
ANR	372417	Identifier	imm		372013	0					
ANR	372418	PrimaryExpression	6		372013	1					
ANR	372419	PrimaryExpression	8		372013	1					
ANR	372420	ReturnStatement	return data ;	412:1:9169:9180	372013	15	True				
ANR	372421	Identifier	data		372013	0					
ANR	372422	ReturnType	static ut32		372013	1					
ANR	372423	Identifier	bytelsop		372013	2					
ANR	372424	ParameterList	"ArmOp * op , int k"		372013	3					
ANR	372425	Parameter	ArmOp * op	347:21:7711:7719	372013	0	True				
ANR	372426	ParameterType	ArmOp *		372013	0					
ANR	372427	Identifier	op		372013	1					
ANR	372428	Parameter	int k	347:32:7722:7726	372013	1	True				
ANR	372429	ParameterType	int		372013	0					
ANR	372430	Identifier	k		372013	1					
ANR	372431	CFGEntryNode	ENTRY		372013		True				
ANR	372432	CFGExitNode	EXIT		372013		True				
ANR	372433	Symbol	UT32_MAX		372013						
ANR	372434	Symbol	data		372013						
ANR	372435	Symbol	* op		372013						
ANR	372436	Symbol	op -> operands [ 1 ] . reg_type		372013						
ANR	372437	Symbol	imm		372013						
ANR	372438	Symbol	op -> operands [ 0 ] . reg_type		372013						
ANR	372439	Symbol	ARM_GPR		372013						
ANR	372440	Symbol	* * op		372013						
ANR	372441	Symbol	high_shift		372013						
ANR	372442	Symbol	ARM_REG32		372013						
ANR	372443	Symbol	* op -> operands		372013						
ANR	372444	Symbol	halfop		372013						
ANR	372445	Symbol	top_shift		372013						
ANR	372446	Symbol	op -> operands [ 0 ] . reg		372013						
ANR	372447	Symbol	op -> operands [ 2 ] . reg		372013						
ANR	372448	Symbol	op -> operands [ 2 ] . immediate		372013						
ANR	372449	Symbol	op		372013						
ANR	372450	Symbol	op -> operands [ 1 ] . reg		372013						
ANR	372451	Symbol	false		372013						
ANR	372452	Symbol	k		372013						
ANR	372453	Symbol	op -> operands [ 2 ] . type		372013						
ANR	372454	Symbol	n		372013						
ANR	372455	Symbol	ARM_REG64		372013						
ANR	372456	Symbol	countTrailingZeros		372013						
ANR	372457	Symbol	true		372013						
ANR	372458	Symbol	op -> operands		372013						
ANR	372459	Symbol	low_shift		372013						
ANR	372460	Function	branch	415:0:9185:9867							
ANR	372461	FunctionDef	"branch (ArmOp * op , ut64 addr , int k)"		372460	0					
ANR	372462	CompoundStatement		415:48:9233:9867	372460	0					
ANR	372463	IdentifierDeclStatement	ut32 data = UT32_MAX ;	416:1:9236:9256	372460	0	True				
ANR	372464	IdentifierDecl	data = UT32_MAX		372460	0					
ANR	372465	IdentifierDeclType	ut32		372460	0					
ANR	372466	Identifier	data		372460	1					
ANR	372467	AssignmentExpression	data = UT32_MAX		372460	2		=			
ANR	372468	Identifier	UT32_MAX		372460	0					
ANR	372469	Identifier	UT32_MAX		372460	1					
ANR	372470	IdentifierDeclStatement	int n = 0 ;	417:1:9259:9268	372460	1	True				
ANR	372471	IdentifierDecl	n = 0		372460	0					
ANR	372472	IdentifierDeclType	int		372460	0					
ANR	372473	Identifier	n		372460	1					
ANR	372474	AssignmentExpression	n = 0		372460	2		=			
ANR	372475	Identifier	n		372460	0					
ANR	372476	PrimaryExpression	0		372460	1					
ANR	372477	IfStatement	if ( op -> operands [ 0 ] . type & ARM_CONSTANT )		372460	2					
ANR	372478	Condition	op -> operands [ 0 ] . type & ARM_CONSTANT	418:5:9275:9309	372460	0	True				
ANR	372479	BitAndExpression	op -> operands [ 0 ] . type & ARM_CONSTANT		372460	0		&			
ANR	372480	MemberAccess	op -> operands [ 0 ] . type		372460	0					
ANR	372481	ArrayIndexing	op -> operands [ 0 ]		372460	0					
ANR	372482	PtrMemberAccess	op -> operands		372460	0					
ANR	372483	Identifier	op		372460	0					
ANR	372484	Identifier	operands		372460	1					
ANR	372485	PrimaryExpression	0		372460	1					
ANR	372486	Identifier	type		372460	1					
ANR	372487	Identifier	ARM_CONSTANT		372460	1					
ANR	372488	CompoundStatement		4:42:78:78	372460	1					
ANR	372489	ExpressionStatement	n = op -> operands [ 0 ] . immediate	419:2:9316:9345	372460	0	True				
ANR	372490	AssignmentExpression	n = op -> operands [ 0 ] . immediate		372460	0		=			
ANR	372491	Identifier	n		372460	0					
ANR	372492	MemberAccess	op -> operands [ 0 ] . immediate		372460	1					
ANR	372493	ArrayIndexing	op -> operands [ 0 ]		372460	0					
ANR	372494	PtrMemberAccess	op -> operands		372460	0					
ANR	372495	Identifier	op		372460	0					
ANR	372496	Identifier	operands		372460	1					
ANR	372497	PrimaryExpression	0		372460	1					
ANR	372498	Identifier	immediate		372460	1					
ANR	372499	IfStatement	if ( ! ( n & 0x3 || n > 0x7ffffff ) )		372460	1					
ANR	372500	Condition	! ( n & 0x3 || n > 0x7ffffff )	420:6:9353:9379	372460	0	True				
ANR	372501	UnaryOperationExpression	! ( n & 0x3 || n > 0x7ffffff )		372460	0					
ANR	372502	UnaryOperator	!		372460	0					
ANR	372503	OrExpression	n & 0x3 || n > 0x7ffffff		372460	1		||			
ANR	372504	BitAndExpression	n & 0x3		372460	0		&			
ANR	372505	Identifier	n		372460	0					
ANR	372506	PrimaryExpression	0x3		372460	1					
ANR	372507	RelationalExpression	n > 0x7ffffff		372460	1		>			
ANR	372508	Identifier	n		372460	0					
ANR	372509	PrimaryExpression	0x7ffffff		372460	1					
ANR	372510	CompoundStatement		17:3:310:335	372460	1					
ANR	372511	IfStatement	if ( n >= addr )		372460	0					
ANR	372512	Condition	n >= addr	421:7:9391:9399	372460	0	True				
ANR	372513	RelationalExpression	n >= addr		372460	0		>=			
ANR	372514	Identifier	n		372460	0					
ANR	372515	Identifier	addr		372460	1					
ANR	372516	CompoundStatement		7:18:168:168	372460	1					
ANR	372517	ExpressionStatement	n -= addr	422:4:9408:9417	372460	0	True				
ANR	372518	AssignmentExpression	n -= addr		372460	0		-=			
ANR	372519	Identifier	n		372460	0					
ANR	372520	Identifier	addr		372460	1					
ANR	372521	ElseStatement	else		372460	0					
ANR	372522	CompoundStatement		9:10:195:195	372460	0					
ANR	372523	ExpressionStatement	n -= addr	424:4:9435:9444	372460	0	True				
ANR	372524	AssignmentExpression	n -= addr		372460	0		-=			
ANR	372525	Identifier	n		372460	0					
ANR	372526	Identifier	addr		372460	1					
ANR	372527	ExpressionStatement	n = n & 0xfffffff	425:4:9450:9467	372460	1	True				
ANR	372528	AssignmentExpression	n = n & 0xfffffff		372460	0		=			
ANR	372529	Identifier	n		372460	0					
ANR	372530	BitAndExpression	n & 0xfffffff		372460	1		&			
ANR	372531	Identifier	n		372460	0					
ANR	372532	PrimaryExpression	0xfffffff		372460	1					
ANR	372533	ExpressionStatement	k |= 3	426:4:9473:9479	372460	2	True				
ANR	372534	AssignmentExpression	k |= 3		372460	0		|=			
ANR	372535	Identifier	k		372460	0					
ANR	372536	PrimaryExpression	3		372460	1					
ANR	372537	ExpressionStatement	n = n >> 2	428:3:9489:9499	372460	1	True				
ANR	372538	AssignmentExpression	n = n >> 2		372460	0		=			
ANR	372539	Identifier	n		372460	0					
ANR	372540	ShiftExpression	n >> 2		372460	1		>>			
ANR	372541	Identifier	n		372460	0					
ANR	372542	PrimaryExpression	2		372460	1					
ANR	372543	IdentifierDeclStatement	int t = n >> 24 ;	429:3:9504:9519	372460	2	True				
ANR	372544	IdentifierDecl	t = n >> 24		372460	0					
ANR	372545	IdentifierDeclType	int		372460	0					
ANR	372546	Identifier	t		372460	1					
ANR	372547	AssignmentExpression	t = n >> 24		372460	2		=			
ANR	372548	Identifier	t		372460	0					
ANR	372549	ShiftExpression	n >> 24		372460	1		>>			
ANR	372550	Identifier	n		372460	0					
ANR	372551	PrimaryExpression	24		372460	1					
ANR	372552	IdentifierDeclStatement	int h = n >> 16 ;	430:3:9524:9539	372460	3	True				
ANR	372553	IdentifierDecl	h = n >> 16		372460	0					
ANR	372554	IdentifierDeclType	int		372460	0					
ANR	372555	Identifier	h		372460	1					
ANR	372556	AssignmentExpression	h = n >> 16		372460	2		=			
ANR	372557	Identifier	h		372460	0					
ANR	372558	ShiftExpression	n >> 16		372460	1		>>			
ANR	372559	Identifier	n		372460	0					
ANR	372560	PrimaryExpression	16		372460	1					
ANR	372561	IdentifierDeclStatement	int m = ( n & 0xff00 ) >> 8 ;	431:3:9544:9569	372460	4	True				
ANR	372562	IdentifierDecl	m = ( n & 0xff00 ) >> 8		372460	0					
ANR	372563	IdentifierDeclType	int		372460	0					
ANR	372564	Identifier	m		372460	1					
ANR	372565	AssignmentExpression	m = ( n & 0xff00 ) >> 8		372460	2		=			
ANR	372566	Identifier	m		372460	0					
ANR	372567	ShiftExpression	( n & 0xff00 ) >> 8		372460	1		>>			
ANR	372568	BitAndExpression	n & 0xff00		372460	0		&			
ANR	372569	Identifier	n		372460	0					
ANR	372570	PrimaryExpression	0xff00		372460	1					
ANR	372571	PrimaryExpression	8		372460	1					
ANR	372572	ExpressionStatement	n &= 0xff	432:3:9574:9583	372460	5	True				
ANR	372573	AssignmentExpression	n &= 0xff		372460	0		&=			
ANR	372574	Identifier	n		372460	0					
ANR	372575	PrimaryExpression	0xff		372460	1					
ANR	372576	ExpressionStatement	data = k	433:3:9588:9596	372460	6	True				
ANR	372577	AssignmentExpression	data = k		372460	0		=			
ANR	372578	Identifier	data		372460	0					
ANR	372579	Identifier	k		372460	1					
ANR	372580	ExpressionStatement	data |= n << 24	434:3:9601:9616	372460	7	True				
ANR	372581	AssignmentExpression	data |= n << 24		372460	0		|=			
ANR	372582	Identifier	data		372460	0					
ANR	372583	ShiftExpression	n << 24		372460	1		<<			
ANR	372584	Identifier	n		372460	0					
ANR	372585	PrimaryExpression	24		372460	1					
ANR	372586	ExpressionStatement	data |= m << 16	435:3:9621:9636	372460	8	True				
ANR	372587	AssignmentExpression	data |= m << 16		372460	0		|=			
ANR	372588	Identifier	data		372460	0					
ANR	372589	ShiftExpression	m << 16		372460	1		<<			
ANR	372590	Identifier	m		372460	0					
ANR	372591	PrimaryExpression	16		372460	1					
ANR	372592	ExpressionStatement	data |= h << 8	436:3:9641:9655	372460	9	True				
ANR	372593	AssignmentExpression	data |= h << 8		372460	0		|=			
ANR	372594	Identifier	data		372460	0					
ANR	372595	ShiftExpression	h << 8		372460	1		<<			
ANR	372596	Identifier	h		372460	0					
ANR	372597	PrimaryExpression	8		372460	1					
ANR	372598	ExpressionStatement	data |= t	437:3:9660:9669	372460	10	True				
ANR	372599	AssignmentExpression	data |= t		372460	0		|=			
ANR	372600	Identifier	data		372460	0					
ANR	372601	Identifier	t		372460	1					
ANR	372602	ElseStatement	else		372460	0					
ANR	372603	CompoundStatement		31:2:537:551	372460	0					
ANR	372604	ExpressionStatement	n = op -> operands [ 0 ] . reg	440:2:9687:9710	372460	0	True				
ANR	372605	AssignmentExpression	n = op -> operands [ 0 ] . reg		372460	0		=			
ANR	372606	Identifier	n		372460	0					
ANR	372607	MemberAccess	op -> operands [ 0 ] . reg		372460	1					
ANR	372608	ArrayIndexing	op -> operands [ 0 ]		372460	0					
ANR	372609	PtrMemberAccess	op -> operands		372460	0					
ANR	372610	Identifier	op		372460	0					
ANR	372611	Identifier	operands		372460	1					
ANR	372612	PrimaryExpression	0		372460	1					
ANR	372613	Identifier	reg		372460	1					
ANR	372614	IfStatement	if ( n < 0 || n > 31 )		372460	1					
ANR	372615	Condition	n < 0 || n > 31	441:6:9718:9732	372460	0	True				
ANR	372616	OrExpression	n < 0 || n > 31		372460	0		||			
ANR	372617	RelationalExpression	n < 0		372460	0		<			
ANR	372618	Identifier	n		372460	0					
ANR	372619	PrimaryExpression	0		372460	1					
ANR	372620	RelationalExpression	n > 31		372460	1		>			
ANR	372621	Identifier	n		372460	0					
ANR	372622	PrimaryExpression	31		372460	1					
ANR	372623	CompoundStatement		27:23:501:501	372460	1					
ANR	372624	ReturnStatement	return - 1 ;	442:3:9740:9749	372460	0	True				
ANR	372625	UnaryOperationExpression	- 1		372460	0					
ANR	372626	UnaryOperator	-		372460	0					
ANR	372627	PrimaryExpression	1		372460	1					
ANR	372628	ExpressionStatement	n = n << 5	444:2:9757:9767	372460	2	True				
ANR	372629	AssignmentExpression	n = n << 5		372460	0		=			
ANR	372630	Identifier	n		372460	0					
ANR	372631	ShiftExpression	n << 5		372460	1		<<			
ANR	372632	Identifier	n		372460	0					
ANR	372633	PrimaryExpression	5		372460	1					
ANR	372634	IdentifierDeclStatement	int h = n >> 8 ;	445:2:9771:9785	372460	3	True				
ANR	372635	IdentifierDecl	h = n >> 8		372460	0					
ANR	372636	IdentifierDeclType	int		372460	0					
ANR	372637	Identifier	h		372460	1					
ANR	372638	AssignmentExpression	h = n >> 8		372460	2		=			
ANR	372639	Identifier	h		372460	0					
ANR	372640	ShiftExpression	n >> 8		372460	1		>>			
ANR	372641	Identifier	n		372460	0					
ANR	372642	PrimaryExpression	8		372460	1					
ANR	372643	ExpressionStatement	n &= 0xff	446:2:9789:9798	372460	4	True				
ANR	372644	AssignmentExpression	n &= 0xff		372460	0		&=			
ANR	372645	Identifier	n		372460	0					
ANR	372646	PrimaryExpression	0xff		372460	1					
ANR	372647	ExpressionStatement	data = k	447:2:9802:9810	372460	5	True				
ANR	372648	AssignmentExpression	data = k		372460	0		=			
ANR	372649	Identifier	data		372460	0					
ANR	372650	Identifier	k		372460	1					
ANR	372651	ExpressionStatement	data |= n << 24	448:2:9814:9829	372460	6	True				
ANR	372652	AssignmentExpression	data |= n << 24		372460	0		|=			
ANR	372653	Identifier	data		372460	0					
ANR	372654	ShiftExpression	n << 24		372460	1		<<			
ANR	372655	Identifier	n		372460	0					
ANR	372656	PrimaryExpression	24		372460	1					
ANR	372657	ExpressionStatement	data |= h << 16	449:2:9833:9848	372460	7	True				
ANR	372658	AssignmentExpression	data |= h << 16		372460	0		|=			
ANR	372659	Identifier	data		372460	0					
ANR	372660	ShiftExpression	h << 16		372460	1		<<			
ANR	372661	Identifier	h		372460	0					
ANR	372662	PrimaryExpression	16		372460	1					
ANR	372663	ReturnStatement	return data ;	451:1:9854:9865	372460	3	True				
ANR	372664	Identifier	data		372460	0					
ANR	372665	ReturnType	static ut32		372460	1					
ANR	372666	Identifier	branch		372460	2					
ANR	372667	ParameterList	"ArmOp * op , ut64 addr , int k"		372460	3					
ANR	372668	Parameter	ArmOp * op	415:19:9204:9212	372460	0	True				
ANR	372669	ParameterType	ArmOp *		372460	0					
ANR	372670	Identifier	op		372460	1					
ANR	372671	Parameter	ut64 addr	415:30:9215:9223	372460	1	True				
ANR	372672	ParameterType	ut64		372460	0					
ANR	372673	Identifier	addr		372460	1					
ANR	372674	Parameter	int k	415:41:9226:9230	372460	2	True				
ANR	372675	ParameterType	int		372460	0					
ANR	372676	Identifier	k		372460	1					
ANR	372677	CFGEntryNode	ENTRY		372460		True				
ANR	372678	CFGExitNode	EXIT		372460		True				
ANR	372679	Symbol	UT32_MAX		372460						
ANR	372680	Symbol	op		372460						
ANR	372681	Symbol	ARM_CONSTANT		372460						
ANR	372682	Symbol	data		372460						
ANR	372683	Symbol	* op		372460						
ANR	372684	Symbol	h		372460						
ANR	372685	Symbol	k		372460						
ANR	372686	Symbol	op -> operands [ 0 ] . immediate		372460						
ANR	372687	Symbol	m		372460						
ANR	372688	Symbol	n		372460						
ANR	372689	Symbol	* * op		372460						
ANR	372690	Symbol	* op -> operands		372460						
ANR	372691	Symbol	t		372460						
ANR	372692	Symbol	op -> operands [ 0 ] . type		372460						
ANR	372693	Symbol	op -> operands [ 0 ] . reg		372460						
ANR	372694	Symbol	addr		372460						
ANR	372695	Symbol	op -> operands		372460						
ANR	372696	Function	bdot	454:0:9870:10489							
ANR	372697	FunctionDef	"bdot (ArmOp * op , ut64 addr , int k)"		372696	0					
ANR	372698	CompoundStatement		454:46:9916:10489	372696	0					
ANR	372699	IdentifierDeclStatement	ut32 data = UT32_MAX ;	455:1:9919:9939	372696	0	True				
ANR	372700	IdentifierDecl	data = UT32_MAX		372696	0					
ANR	372701	IdentifierDeclType	ut32		372696	0					
ANR	372702	Identifier	data		372696	1					
ANR	372703	AssignmentExpression	data = UT32_MAX		372696	2		=			
ANR	372704	Identifier	UT32_MAX		372696	0					
ANR	372705	Identifier	UT32_MAX		372696	1					
ANR	372706	IdentifierDeclStatement	int n = 0 ;	456:1:9942:9951	372696	1	True				
ANR	372707	IdentifierDecl	n = 0		372696	0					
ANR	372708	IdentifierDeclType	int		372696	0					
ANR	372709	Identifier	n		372696	1					
ANR	372710	AssignmentExpression	n = 0		372696	2		=			
ANR	372711	Identifier	n		372696	0					
ANR	372712	PrimaryExpression	0		372696	1					
ANR	372713	IdentifierDeclStatement	int a = 0 ;	457:1:9954:9963	372696	2	True				
ANR	372714	IdentifierDecl	a = 0		372696	0					
ANR	372715	IdentifierDeclType	int		372696	0					
ANR	372716	Identifier	a		372696	1					
ANR	372717	AssignmentExpression	a = 0		372696	2		=			
ANR	372718	Identifier	a		372696	0					
ANR	372719	PrimaryExpression	0		372696	1					
ANR	372720	ExpressionStatement	n = op -> operands [ 0 ] . immediate	458:1:9966:9995	372696	3	True				
ANR	372721	AssignmentExpression	n = op -> operands [ 0 ] . immediate		372696	0		=			
ANR	372722	Identifier	n		372696	0					
ANR	372723	MemberAccess	op -> operands [ 0 ] . immediate		372696	1					
ANR	372724	ArrayIndexing	op -> operands [ 0 ]		372696	0					
ANR	372725	PtrMemberAccess	op -> operands		372696	0					
ANR	372726	Identifier	op		372696	0					
ANR	372727	Identifier	operands		372696	1					
ANR	372728	PrimaryExpression	0		372696	1					
ANR	372729	Identifier	immediate		372696	1					
ANR	372730	IfStatement	if ( ! ( n & 0x3 || n > 0x7ffffff ) )		372696	4					
ANR	372731	Condition	! ( n & 0x3 || n > 0x7ffffff )	461:5:10126:10152	372696	0	True				
ANR	372732	UnaryOperationExpression	! ( n & 0x3 || n > 0x7ffffff )		372696	0					
ANR	372733	UnaryOperator	!		372696	0					
ANR	372734	OrExpression	n & 0x3 || n > 0x7ffffff		372696	1		||			
ANR	372735	BitAndExpression	n & 0x3		372696	0		&			
ANR	372736	Identifier	n		372696	0					
ANR	372737	PrimaryExpression	0x3		372696	1					
ANR	372738	RelationalExpression	n > 0x7ffffff		372696	1		>			
ANR	372739	Identifier	n		372696	0					
ANR	372740	PrimaryExpression	0x7ffffff		372696	1					
ANR	372741	CompoundStatement		8:34:238:238	372696	1					
ANR	372742	ExpressionStatement	n -= addr	462:2:10159:10168	372696	0	True				
ANR	372743	AssignmentExpression	n -= addr		372696	0		-=			
ANR	372744	Identifier	n		372696	0					
ANR	372745	Identifier	addr		372696	1					
ANR	372746	ExpressionStatement	data = k	463:2:10172:10180	372696	1	True				
ANR	372747	AssignmentExpression	data = k		372696	0		=			
ANR	372748	Identifier	data		372696	0					
ANR	372749	Identifier	k		372696	1					
ANR	372750	IfStatement	if ( n < 0 )		372696	2					
ANR	372751	Condition	n < 0	464:6:10188:10192	372696	0	True				
ANR	372752	RelationalExpression	n < 0		372696	0		<			
ANR	372753	Identifier	n		372696	0					
ANR	372754	PrimaryExpression	0		372696	1					
ANR	372755	CompoundStatement		11:13:278:278	372696	1					
ANR	372756	ExpressionStatement	n *= - 1	465:3:10200:10207	372696	0	True				
ANR	372757	AssignmentExpression	n *= - 1		372696	0		*=			
ANR	372758	Identifier	n		372696	0					
ANR	372759	UnaryOperationExpression	- 1		372696	1					
ANR	372760	UnaryOperator	-		372696	0					
ANR	372761	PrimaryExpression	1		372696	1					
ANR	372762	ExpressionStatement	a = ( n << 3 ) - 1	466:3:10212:10228	372696	1	True				
ANR	372763	AssignmentExpression	a = ( n << 3 ) - 1		372696	0		=			
ANR	372764	Identifier	a		372696	0					
ANR	372765	AdditiveExpression	( n << 3 ) - 1		372696	1		-			
ANR	372766	ShiftExpression	n << 3		372696	0		<<			
ANR	372767	Identifier	n		372696	0					
ANR	372768	PrimaryExpression	3		372696	1					
ANR	372769	PrimaryExpression	1		372696	1					
ANR	372770	ExpressionStatement	data |= ( 0xff - a ) << 24	467:3:10233:10257	372696	2	True				
ANR	372771	AssignmentExpression	data |= ( 0xff - a ) << 24		372696	0		|=			
ANR	372772	Identifier	data		372696	0					
ANR	372773	ShiftExpression	( 0xff - a ) << 24		372696	1		<<			
ANR	372774	AdditiveExpression	0xff - a		372696	0		-			
ANR	372775	PrimaryExpression	0xff		372696	0					
ANR	372776	Identifier	a		372696	1					
ANR	372777	PrimaryExpression	24		372696	1					
ANR	372778	ExpressionStatement	"a = calcNegOffset ( n , 5 )"	469:3:10263:10286	372696	3	True				
ANR	372779	AssignmentExpression	"a = calcNegOffset ( n , 5 )"		372696	0		=			
ANR	372780	Identifier	a		372696	0					
ANR	372781	CallExpression	"calcNegOffset ( n , 5 )"		372696	1					
ANR	372782	Callee	calcNegOffset		372696	0					
ANR	372783	Identifier	calcNegOffset		372696	0					
ANR	372784	ArgumentList	n		372696	1					
ANR	372785	Argument	n		372696	0					
ANR	372786	Identifier	n		372696	0					
ANR	372787	Argument	5		372696	1					
ANR	372788	PrimaryExpression	5		372696	0					
ANR	372789	ExpressionStatement	data |= a << 16	470:3:10291:10306	372696	4	True				
ANR	372790	AssignmentExpression	data |= a << 16		372696	0		|=			
ANR	372791	Identifier	data		372696	0					
ANR	372792	ShiftExpression	a << 16		372696	1		<<			
ANR	372793	Identifier	a		372696	0					
ANR	372794	PrimaryExpression	16		372696	1					
ANR	372795	ExpressionStatement	"a = calcNegOffset ( n , 13 )"	472:3:10312:10336	372696	5	True				
ANR	372796	AssignmentExpression	"a = calcNegOffset ( n , 13 )"		372696	0		=			
ANR	372797	Identifier	a		372696	0					
ANR	372798	CallExpression	"calcNegOffset ( n , 13 )"		372696	1					
ANR	372799	Callee	calcNegOffset		372696	0					
ANR	372800	Identifier	calcNegOffset		372696	0					
ANR	372801	ArgumentList	n		372696	1					
ANR	372802	Argument	n		372696	0					
ANR	372803	Identifier	n		372696	0					
ANR	372804	Argument	13		372696	1					
ANR	372805	PrimaryExpression	13		372696	0					
ANR	372806	ExpressionStatement	data |= a << 8	473:3:10341:10355	372696	6	True				
ANR	372807	AssignmentExpression	data |= a << 8		372696	0		|=			
ANR	372808	Identifier	data		372696	0					
ANR	372809	ShiftExpression	a << 8		372696	1		<<			
ANR	372810	Identifier	a		372696	0					
ANR	372811	PrimaryExpression	8		372696	1					
ANR	372812	ElseStatement	else		372696	0					
ANR	372813	CompoundStatement		21:9:449:449	372696	0					
ANR	372814	ExpressionStatement	data |= ( n & 31 ) << 27	475:3:10371:10393	372696	0	True				
ANR	372815	AssignmentExpression	data |= ( n & 31 ) << 27		372696	0		|=			
ANR	372816	Identifier	data		372696	0					
ANR	372817	ShiftExpression	( n & 31 ) << 27		372696	1		<<			
ANR	372818	BitAndExpression	n & 31		372696	0		&			
ANR	372819	Identifier	n		372696	0					
ANR	372820	PrimaryExpression	31		372696	1					
ANR	372821	PrimaryExpression	27		372696	1					
ANR	372822	ExpressionStatement	data |= ( 0xff & ( n >> 5 ) ) << 16	476:3:10398:10429	372696	1	True				
ANR	372823	AssignmentExpression	data |= ( 0xff & ( n >> 5 ) ) << 16		372696	0		|=			
ANR	372824	Identifier	data		372696	0					
ANR	372825	ShiftExpression	( 0xff & ( n >> 5 ) ) << 16		372696	1		<<			
ANR	372826	BitAndExpression	0xff & ( n >> 5 )		372696	0		&			
ANR	372827	PrimaryExpression	0xff		372696	0					
ANR	372828	ShiftExpression	n >> 5		372696	1		>>			
ANR	372829	Identifier	n		372696	0					
ANR	372830	PrimaryExpression	5		372696	1					
ANR	372831	PrimaryExpression	16		372696	1					
ANR	372832	ExpressionStatement	data |= ( 0xff & ( n >> 13 ) ) << 8	477:3:10434:10465	372696	2	True				
ANR	372833	AssignmentExpression	data |= ( 0xff & ( n >> 13 ) ) << 8		372696	0		|=			
ANR	372834	Identifier	data		372696	0					
ANR	372835	ShiftExpression	( 0xff & ( n >> 13 ) ) << 8		372696	1		<<			
ANR	372836	BitAndExpression	0xff & ( n >> 13 )		372696	0		&			
ANR	372837	PrimaryExpression	0xff		372696	0					
ANR	372838	ShiftExpression	n >> 13		372696	1		>>			
ANR	372839	Identifier	n		372696	0					
ANR	372840	PrimaryExpression	13		372696	1					
ANR	372841	PrimaryExpression	8		372696	1					
ANR	372842	ReturnStatement	return data ;	481:1:10476:10487	372696	5	True				
ANR	372843	Identifier	data		372696	0					
ANR	372844	ReturnType	static ut32		372696	1					
ANR	372845	Identifier	bdot		372696	2					
ANR	372846	ParameterList	"ArmOp * op , ut64 addr , int k"		372696	3					
ANR	372847	Parameter	ArmOp * op	454:17:9887:9895	372696	0	True				
ANR	372848	ParameterType	ArmOp *		372696	0					
ANR	372849	Identifier	op		372696	1					
ANR	372850	Parameter	ut64 addr	454:28:9898:9906	372696	1	True				
ANR	372851	ParameterType	ut64		372696	0					
ANR	372852	Identifier	addr		372696	1					
ANR	372853	Parameter	int k	454:39:9909:9913	372696	2	True				
ANR	372854	ParameterType	int		372696	0					
ANR	372855	Identifier	k		372696	1					
ANR	372856	CFGEntryNode	ENTRY		372696		True				
ANR	372857	CFGExitNode	EXIT		372696		True				
ANR	372858	Symbol	UT32_MAX		372696						
ANR	372859	Symbol	op		372696						
ANR	372860	Symbol	a		372696						
ANR	372861	Symbol	calcNegOffset		372696						
ANR	372862	Symbol	data		372696						
ANR	372863	Symbol	* op		372696						
ANR	372864	Symbol	k		372696						
ANR	372865	Symbol	op -> operands [ 0 ] . immediate		372696						
ANR	372866	Symbol	n		372696						
ANR	372867	Symbol	* * op		372696						
ANR	372868	Symbol	* op -> operands		372696						
ANR	372869	Symbol	addr		372696						
ANR	372870	Symbol	op -> operands		372696						
ANR	372871	Function	mem_barrier	484:0:10492:10987							
ANR	372872	FunctionDef	"mem_barrier (ArmOp * op , ut64 addr , int k)"		372871	0					
ANR	372873	CompoundStatement		484:54:10546:10987	372871	0					
ANR	372874	IdentifierDeclStatement	ut32 data = UT32_MAX ;	485:1:10549:10569	372871	0	True				
ANR	372875	IdentifierDecl	data = UT32_MAX		372871	0					
ANR	372876	IdentifierDeclType	ut32		372871	0					
ANR	372877	Identifier	data		372871	1					
ANR	372878	AssignmentExpression	data = UT32_MAX		372871	2		=			
ANR	372879	Identifier	UT32_MAX		372871	0					
ANR	372880	Identifier	UT32_MAX		372871	1					
ANR	372881	ExpressionStatement	data = k	486:1:10572:10580	372871	1	True				
ANR	372882	AssignmentExpression	data = k		372871	0		=			
ANR	372883	Identifier	data		372871	0					
ANR	372884	Identifier	k		372871	1					
ANR	372885	IfStatement	"if ( ! strncmp ( op -> mnemonic , ""isb"" , 3 ) )"		372871	2					
ANR	372886	Condition	"! strncmp ( op -> mnemonic , ""isb"" , 3 )"	487:5:10587:10619	372871	0	True				
ANR	372887	UnaryOperationExpression	"! strncmp ( op -> mnemonic , ""isb"" , 3 )"		372871	0					
ANR	372888	UnaryOperator	!		372871	0					
ANR	372889	CallExpression	"strncmp ( op -> mnemonic , ""isb"" , 3 )"		372871	1					
ANR	372890	Callee	strncmp		372871	0					
ANR	372891	Identifier	strncmp		372871	0					
ANR	372892	ArgumentList	op -> mnemonic		372871	1					
ANR	372893	Argument	op -> mnemonic		372871	0					
ANR	372894	PtrMemberAccess	op -> mnemonic		372871	0					
ANR	372895	Identifier	op		372871	0					
ANR	372896	Identifier	mnemonic		372871	1					
ANR	372897	Argument	"""isb"""		372871	1					
ANR	372898	PrimaryExpression	"""isb"""		372871	0					
ANR	372899	Argument	3		372871	2					
ANR	372900	PrimaryExpression	3		372871	0					
ANR	372901	CompoundStatement		4:40:75:75	372871	1					
ANR	372902	IfStatement	if ( op -> operands [ 0 ] . mem_option == 15 || op -> operands [ 0 ] . type == ARM_NOTYPE )		372871	0					
ANR	372903	Condition	op -> operands [ 0 ] . mem_option == 15 || op -> operands [ 0 ] . type == ARM_NOTYPE	488:6:10630:10699	372871	0	True				
ANR	372904	OrExpression	op -> operands [ 0 ] . mem_option == 15 || op -> operands [ 0 ] . type == ARM_NOTYPE		372871	0		||			
ANR	372905	EqualityExpression	op -> operands [ 0 ] . mem_option == 15		372871	0		==			
ANR	372906	MemberAccess	op -> operands [ 0 ] . mem_option		372871	0					
ANR	372907	ArrayIndexing	op -> operands [ 0 ]		372871	0					
ANR	372908	PtrMemberAccess	op -> operands		372871	0					
ANR	372909	Identifier	op		372871	0					
ANR	372910	Identifier	operands		372871	1					
ANR	372911	PrimaryExpression	0		372871	1					
ANR	372912	Identifier	mem_option		372871	1					
ANR	372913	PrimaryExpression	15		372871	1					
ANR	372914	EqualityExpression	op -> operands [ 0 ] . type == ARM_NOTYPE		372871	1		==			
ANR	372915	MemberAccess	op -> operands [ 0 ] . type		372871	0					
ANR	372916	ArrayIndexing	op -> operands [ 0 ]		372871	0					
ANR	372917	PtrMemberAccess	op -> operands		372871	0					
ANR	372918	Identifier	op		372871	0					
ANR	372919	Identifier	operands		372871	1					
ANR	372920	PrimaryExpression	0		372871	1					
ANR	372921	Identifier	type		372871	1					
ANR	372922	Identifier	ARM_NOTYPE		372871	1					
ANR	372923	CompoundStatement		5:78:155:155	372871	1					
ANR	372924	ReturnStatement	return data ;	489:3:10707:10718	372871	0	True				
ANR	372925	Identifier	data		372871	0					
ANR	372926	ElseStatement	else		372871	0					
ANR	372927	CompoundStatement		7:9:182:182	372871	0					
ANR	372928	ReturnStatement	return UT32_MAX ;	491:3:10734:10749	372871	0	True				
ANR	372929	Identifier	UT32_MAX		372871	0					
ANR	372930	IfStatement	if ( op -> operands [ 0 ] . type == ARM_MEM_OPT )		372871	3					
ANR	372931	Condition	op -> operands [ 0 ] . type == ARM_MEM_OPT	494:5:10763:10797	372871	0	True				
ANR	372932	EqualityExpression	op -> operands [ 0 ] . type == ARM_MEM_OPT		372871	0		==			
ANR	372933	MemberAccess	op -> operands [ 0 ] . type		372871	0					
ANR	372934	ArrayIndexing	op -> operands [ 0 ]		372871	0					
ANR	372935	PtrMemberAccess	op -> operands		372871	0					
ANR	372936	Identifier	op		372871	0					
ANR	372937	Identifier	operands		372871	1					
ANR	372938	PrimaryExpression	0		372871	1					
ANR	372939	Identifier	type		372871	1					
ANR	372940	Identifier	ARM_MEM_OPT		372871	1					
ANR	372941	CompoundStatement		11:42:253:253	372871	1					
ANR	372942	ExpressionStatement	data |= op -> operands [ 0 ] . mem_option << 16	495:2:10804:10844	372871	0	True				
ANR	372943	AssignmentExpression	data |= op -> operands [ 0 ] . mem_option << 16		372871	0		|=			
ANR	372944	Identifier	data		372871	0					
ANR	372945	ShiftExpression	op -> operands [ 0 ] . mem_option << 16		372871	1		<<			
ANR	372946	MemberAccess	op -> operands [ 0 ] . mem_option		372871	0					
ANR	372947	ArrayIndexing	op -> operands [ 0 ]		372871	0					
ANR	372948	PtrMemberAccess	op -> operands		372871	0					
ANR	372949	Identifier	op		372871	0					
ANR	372950	Identifier	operands		372871	1					
ANR	372951	PrimaryExpression	0		372871	1					
ANR	372952	Identifier	mem_option		372871	1					
ANR	372953	PrimaryExpression	16		372871	1					
ANR	372954	ElseStatement	else		372871	0					
ANR	372955	IfStatement	if ( op -> operands_count == 1 && op -> operands [ 0 ] . type == ARM_CONSTANT )		372871	0					
ANR	372956	Condition	op -> operands_count == 1 && op -> operands [ 0 ] . type == ARM_CONSTANT	496:12:10858:10920	372871	0	True				
ANR	372957	AndExpression	op -> operands_count == 1 && op -> operands [ 0 ] . type == ARM_CONSTANT		372871	0		&&			
ANR	372958	EqualityExpression	op -> operands_count == 1		372871	0		==			
ANR	372959	PtrMemberAccess	op -> operands_count		372871	0					
ANR	372960	Identifier	op		372871	0					
ANR	372961	Identifier	operands_count		372871	1					
ANR	372962	PrimaryExpression	1		372871	1					
ANR	372963	EqualityExpression	op -> operands [ 0 ] . type == ARM_CONSTANT		372871	1		==			
ANR	372964	MemberAccess	op -> operands [ 0 ] . type		372871	0					
ANR	372965	ArrayIndexing	op -> operands [ 0 ]		372871	0					
ANR	372966	PtrMemberAccess	op -> operands		372871	0					
ANR	372967	Identifier	op		372871	0					
ANR	372968	Identifier	operands		372871	1					
ANR	372969	PrimaryExpression	0		372871	1					
ANR	372970	Identifier	type		372871	1					
ANR	372971	Identifier	ARM_CONSTANT		372871	1					
ANR	372972	CompoundStatement		13:77:376:376	372871	1					
ANR	372973	ExpressionStatement	data |= ( op -> operands [ 0 ] . immediate << 16 )	497:2:10927:10968	372871	0	True				
ANR	372974	AssignmentExpression	data |= ( op -> operands [ 0 ] . immediate << 16 )		372871	0		|=			
ANR	372975	Identifier	data		372871	0					
ANR	372976	ShiftExpression	op -> operands [ 0 ] . immediate << 16		372871	1		<<			
ANR	372977	MemberAccess	op -> operands [ 0 ] . immediate		372871	0					
ANR	372978	ArrayIndexing	op -> operands [ 0 ]		372871	0					
ANR	372979	PtrMemberAccess	op -> operands		372871	0					
ANR	372980	Identifier	op		372871	0					
ANR	372981	Identifier	operands		372871	1					
ANR	372982	PrimaryExpression	0		372871	1					
ANR	372983	Identifier	immediate		372871	1					
ANR	372984	PrimaryExpression	16		372871	1					
ANR	372985	ReturnStatement	return data ;	499:1:10974:10985	372871	4	True				
ANR	372986	Identifier	data		372871	0					
ANR	372987	ReturnType	static ut32		372871	1					
ANR	372988	Identifier	mem_barrier		372871	2					
ANR	372989	ParameterList	"ArmOp * op , ut64 addr , int k"		372871	3					
ANR	372990	Parameter	ArmOp * op	484:25:10517:10525	372871	0	True				
ANR	372991	ParameterType	ArmOp *		372871	0					
ANR	372992	Identifier	op		372871	1					
ANR	372993	Parameter	ut64 addr	484:36:10528:10536	372871	1	True				
ANR	372994	ParameterType	ut64		372871	0					
ANR	372995	Identifier	addr		372871	1					
ANR	372996	Parameter	int k	484:47:10539:10543	372871	2	True				
ANR	372997	ParameterType	int		372871	0					
ANR	372998	Identifier	k		372871	1					
ANR	372999	CFGEntryNode	ENTRY		372871		True				
ANR	373000	CFGExitNode	EXIT		372871		True				
ANR	373001	Symbol	UT32_MAX		372871						
ANR	373002	Symbol	op		372871						
ANR	373003	Symbol	ARM_CONSTANT		372871						
ANR	373004	Symbol	ARM_MEM_OPT		372871						
ANR	373005	Symbol	data		372871						
ANR	373006	Symbol	* op		372871						
ANR	373007	Symbol	op -> mnemonic		372871						
ANR	373008	Symbol	ARM_NOTYPE		372871						
ANR	373009	Symbol	k		372871						
ANR	373010	Symbol	op -> operands [ 0 ] . immediate		372871						
ANR	373011	Symbol	op -> operands [ 0 ] . mem_option		372871						
ANR	373012	Symbol	* * op		372871						
ANR	373013	Symbol	strncmp		372871						
ANR	373014	Symbol	* op -> operands		372871						
ANR	373015	Symbol	op -> operands_count		372871						
ANR	373016	Symbol	op -> operands [ 0 ] . type		372871						
ANR	373017	Symbol	addr		372871						
ANR	373018	Symbol	op -> operands		372871						
ANR	373019	Function	msr	504:0:11019:12863							
ANR	373020	FunctionDef	"msr (ArmOp * op , int w)"		373019	0					
ANR	373021	CompoundStatement		504:34:11053:12863	373019	0					
ANR	373022	IdentifierDeclStatement	ut32 data = UT32_MAX ;	505:1:11056:11076	373019	0	True				
ANR	373023	IdentifierDecl	data = UT32_MAX		373019	0					
ANR	373024	IdentifierDeclType	ut32		373019	0					
ANR	373025	Identifier	data		373019	1					
ANR	373026	AssignmentExpression	data = UT32_MAX		373019	2		=			
ANR	373027	Identifier	UT32_MAX		373019	0					
ANR	373028	Identifier	UT32_MAX		373019	1					
ANR	373029	IdentifierDeclStatement	ut32 seq_data = UT32_MAX ;	506:1:11079:11103	373019	1	True				
ANR	373030	IdentifierDecl	seq_data = UT32_MAX		373019	0					
ANR	373031	IdentifierDeclType	ut32		373019	0					
ANR	373032	Identifier	seq_data		373019	1					
ANR	373033	AssignmentExpression	seq_data = UT32_MAX		373019	2		=			
ANR	373034	Identifier	UT32_MAX		373019	0					
ANR	373035	Identifier	UT32_MAX		373019	1					
ANR	373036	IdentifierDeclStatement	int is_immediate = 0 ;	507:1:11106:11126	373019	2	True				
ANR	373037	IdentifierDecl	is_immediate = 0		373019	0					
ANR	373038	IdentifierDeclType	int		373019	0					
ANR	373039	Identifier	is_immediate		373019	1					
ANR	373040	AssignmentExpression	is_immediate = 0		373019	2		=			
ANR	373041	Identifier	is_immediate		373019	0					
ANR	373042	PrimaryExpression	0		373019	1					
ANR	373043	IdentifierDeclStatement	int i ;	508:1:11129:11134	373019	3	True				
ANR	373044	IdentifierDecl	i		373019	0					
ANR	373045	IdentifierDeclType	int		373019	0					
ANR	373046	Identifier	i		373019	1					
ANR	373047	IdentifierDeclStatement	"ut32 r , b ;"	509:1:11137:11146	373019	4	True				
ANR	373048	IdentifierDecl	r		373019	0					
ANR	373049	IdentifierDeclType	ut32		373019	0					
ANR	373050	Identifier	r		373019	1					
ANR	373051	IdentifierDecl	b		373019	1					
ANR	373052	IdentifierDeclType	ut32		373019	0					
ANR	373053	Identifier	b		373019	1					
ANR	373054	IfStatement	if ( w )		373019	5					
ANR	373055	Condition	w	511:5:11180:11180	373019	0	True				
ANR	373056	Identifier	w		373019	0					
ANR	373057	CompoundStatement		8:8:129:129	373019	1					
ANR	373058	IfStatement	if ( op -> operands [ 1 ] . reg_type != ( ARM_REG64 | ARM_SP ) )		373019	0					
ANR	373059	Condition	op -> operands [ 1 ] . reg_type != ( ARM_REG64 | ARM_SP )	512:6:11191:11238	373019	0	True				
ANR	373060	EqualityExpression	op -> operands [ 1 ] . reg_type != ( ARM_REG64 | ARM_SP )		373019	0		!=			
ANR	373061	MemberAccess	op -> operands [ 1 ] . reg_type		373019	0					
ANR	373062	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373063	PtrMemberAccess	op -> operands		373019	0					
ANR	373064	Identifier	op		373019	0					
ANR	373065	Identifier	operands		373019	1					
ANR	373066	PrimaryExpression	1		373019	1					
ANR	373067	Identifier	reg_type		373019	1					
ANR	373068	InclusiveOrExpression	ARM_REG64 | ARM_SP		373019	1		|			
ANR	373069	Identifier	ARM_REG64		373019	0					
ANR	373070	Identifier	ARM_SP		373019	1					
ANR	373071	CompoundStatement		9:56:187:187	373019	1					
ANR	373072	IfStatement	if ( op -> operands [ 1 ] . type == ARM_CONSTANT )		373019	0					
ANR	373073	Condition	op -> operands [ 1 ] . type == ARM_CONSTANT	513:7:11250:11285	373019	0	True				
ANR	373074	EqualityExpression	op -> operands [ 1 ] . type == ARM_CONSTANT		373019	0		==			
ANR	373075	MemberAccess	op -> operands [ 1 ] . type		373019	0					
ANR	373076	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373077	PtrMemberAccess	op -> operands		373019	0					
ANR	373078	Identifier	op		373019	0					
ANR	373079	Identifier	operands		373019	1					
ANR	373080	PrimaryExpression	1		373019	1					
ANR	373081	Identifier	type		373019	1					
ANR	373082	Identifier	ARM_CONSTANT		373019	1					
ANR	373083	CompoundStatement		10:45:234:234	373019	1					
ANR	373084	ForStatement	for ( i = 0 ; msr_const [ i ] . name ; i ++ )		373019	0					
ANR	373085	ForInit	i = 0 ;	514:9:11299:11304	373019	0	True				
ANR	373086	AssignmentExpression	i = 0		373019	0		=			
ANR	373087	Identifier	i		373019	0					
ANR	373088	PrimaryExpression	0		373019	1					
ANR	373089	Condition	msr_const [ i ] . name	514:16:11306:11322	373019	1	True				
ANR	373090	MemberAccess	msr_const [ i ] . name		373019	0					
ANR	373091	ArrayIndexing	msr_const [ i ]		373019	0					
ANR	373092	Identifier	msr_const		373019	0					
ANR	373093	Identifier	i		373019	1					
ANR	373094	Identifier	name		373019	1					
ANR	373095	PostIncDecOperationExpression	i ++	514:35:11325:11327	373019	2	True				
ANR	373096	Identifier	i		373019	0					
ANR	373097	IncDec	++		373019	1					
ANR	373098	CompoundStatement		11:40:276:276	373019	3					
ANR	373099	IfStatement	if ( op -> operands [ 1 ] . immediate == msr_const [ i ] . val )		373019	0					
ANR	373100	Condition	op -> operands [ 1 ] . immediate == msr_const [ i ] . val	515:9:11341:11385	373019	0	True				
ANR	373101	EqualityExpression	op -> operands [ 1 ] . immediate == msr_const [ i ] . val		373019	0		==			
ANR	373102	MemberAccess	op -> operands [ 1 ] . immediate		373019	0					
ANR	373103	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373104	PtrMemberAccess	op -> operands		373019	0					
ANR	373105	Identifier	op		373019	0					
ANR	373106	Identifier	operands		373019	1					
ANR	373107	PrimaryExpression	1		373019	1					
ANR	373108	Identifier	immediate		373019	1					
ANR	373109	MemberAccess	msr_const [ i ] . val		373019	1					
ANR	373110	ArrayIndexing	msr_const [ i ]		373019	0					
ANR	373111	Identifier	msr_const		373019	0					
ANR	373112	Identifier	i		373019	1					
ANR	373113	Identifier	val		373019	1					
ANR	373114	CompoundStatement		12:56:334:334	373019	1					
ANR	373115	ExpressionStatement	op -> operands [ 1 ] . sp_val = msr_const [ i ] . val	516:6:11396:11437	373019	0	True				
ANR	373116	AssignmentExpression	op -> operands [ 1 ] . sp_val = msr_const [ i ] . val		373019	0		=			
ANR	373117	MemberAccess	op -> operands [ 1 ] . sp_val		373019	0					
ANR	373118	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373119	PtrMemberAccess	op -> operands		373019	0					
ANR	373120	Identifier	op		373019	0					
ANR	373121	Identifier	operands		373019	1					
ANR	373122	PrimaryExpression	1		373019	1					
ANR	373123	Identifier	sp_val		373019	1					
ANR	373124	MemberAccess	msr_const [ i ] . val		373019	1					
ANR	373125	ArrayIndexing	msr_const [ i ]		373019	0					
ANR	373126	Identifier	msr_const		373019	0					
ANR	373127	Identifier	i		373019	1					
ANR	373128	Identifier	val		373019	1					
ANR	373129	ExpressionStatement	op -> operands [ 1 ] . reg = op -> operands [ 1 ] . immediate	517:6:11445:11492	373019	1	True				
ANR	373130	AssignmentExpression	op -> operands [ 1 ] . reg = op -> operands [ 1 ] . immediate		373019	0		=			
ANR	373131	MemberAccess	op -> operands [ 1 ] . reg		373019	0					
ANR	373132	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373133	PtrMemberAccess	op -> operands		373019	0					
ANR	373134	Identifier	op		373019	0					
ANR	373135	Identifier	operands		373019	1					
ANR	373136	PrimaryExpression	1		373019	1					
ANR	373137	Identifier	reg		373019	1					
ANR	373138	MemberAccess	op -> operands [ 1 ] . immediate		373019	1					
ANR	373139	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373140	PtrMemberAccess	op -> operands		373019	0					
ANR	373141	Identifier	op		373019	0					
ANR	373142	Identifier	operands		373019	1					
ANR	373143	PrimaryExpression	1		373019	1					
ANR	373144	Identifier	immediate		373019	1					
ANR	373145	BreakStatement	break ;	518:6:11500:11505	373019	2	True				
ANR	373146	ElseStatement	else		373019	0					
ANR	373147	CompoundStatement		18:10:476:476	373019	0					
ANR	373148	ReturnStatement	return data ;	522:4:11536:11547	373019	0	True				
ANR	373149	Identifier	data		373019	0					
ANR	373150	ExpressionStatement	r = op -> operands [ 0 ] . reg	525:2:11560:11583	373019	1	True				
ANR	373151	AssignmentExpression	r = op -> operands [ 0 ] . reg		373019	0		=			
ANR	373152	Identifier	r		373019	0					
ANR	373153	MemberAccess	op -> operands [ 0 ] . reg		373019	1					
ANR	373154	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373155	PtrMemberAccess	op -> operands		373019	0					
ANR	373156	Identifier	op		373019	0					
ANR	373157	Identifier	operands		373019	1					
ANR	373158	PrimaryExpression	0		373019	1					
ANR	373159	Identifier	reg		373019	1					
ANR	373160	ExpressionStatement	b = op -> operands [ 1 ] . sp_val	526:2:11587:11613	373019	2	True				
ANR	373161	AssignmentExpression	b = op -> operands [ 1 ] . sp_val		373019	0		=			
ANR	373162	Identifier	b		373019	0					
ANR	373163	MemberAccess	op -> operands [ 1 ] . sp_val		373019	1					
ANR	373164	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373165	PtrMemberAccess	op -> operands		373019	0					
ANR	373166	Identifier	op		373019	0					
ANR	373167	Identifier	operands		373019	1					
ANR	373168	PrimaryExpression	1		373019	1					
ANR	373169	Identifier	sp_val		373019	1					
ANR	373170	ElseStatement	else		373019	0					
ANR	373171	CompoundStatement		24:8:569:569	373019	0					
ANR	373172	IfStatement	if ( op -> operands [ 0 ] . reg_type != ( ARM_REG64 | ARM_SP ) )		373019	0					
ANR	373173	Condition	op -> operands [ 0 ] . reg_type != ( ARM_REG64 | ARM_SP )	528:6:11631:11678	373019	0	True				
ANR	373174	EqualityExpression	op -> operands [ 0 ] . reg_type != ( ARM_REG64 | ARM_SP )		373019	0		!=			
ANR	373175	MemberAccess	op -> operands [ 0 ] . reg_type		373019	0					
ANR	373176	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373177	PtrMemberAccess	op -> operands		373019	0					
ANR	373178	Identifier	op		373019	0					
ANR	373179	Identifier	operands		373019	1					
ANR	373180	PrimaryExpression	0		373019	1					
ANR	373181	Identifier	reg_type		373019	1					
ANR	373182	InclusiveOrExpression	ARM_REG64 | ARM_SP		373019	1		|			
ANR	373183	Identifier	ARM_REG64		373019	0					
ANR	373184	Identifier	ARM_SP		373019	1					
ANR	373185	CompoundStatement		25:56:627:627	373019	1					
ANR	373186	IfStatement	if ( op -> operands [ 0 ] . type == ARM_CONSTANT )		373019	0					
ANR	373187	Condition	op -> operands [ 0 ] . type == ARM_CONSTANT	529:7:11690:11725	373019	0	True				
ANR	373188	EqualityExpression	op -> operands [ 0 ] . type == ARM_CONSTANT		373019	0		==			
ANR	373189	MemberAccess	op -> operands [ 0 ] . type		373019	0					
ANR	373190	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373191	PtrMemberAccess	op -> operands		373019	0					
ANR	373192	Identifier	op		373019	0					
ANR	373193	Identifier	operands		373019	1					
ANR	373194	PrimaryExpression	0		373019	1					
ANR	373195	Identifier	type		373019	1					
ANR	373196	Identifier	ARM_CONSTANT		373019	1					
ANR	373197	CompoundStatement		26:45:674:674	373019	1					
ANR	373198	ForStatement	for ( i = 0 ; msr_const [ i ] . name ; i ++ )		373019	0					
ANR	373199	ForInit	i = 0 ;	530:9:11739:11744	373019	0	True				
ANR	373200	AssignmentExpression	i = 0		373019	0		=			
ANR	373201	Identifier	i		373019	0					
ANR	373202	PrimaryExpression	0		373019	1					
ANR	373203	Condition	msr_const [ i ] . name	530:16:11746:11762	373019	1	True				
ANR	373204	MemberAccess	msr_const [ i ] . name		373019	0					
ANR	373205	ArrayIndexing	msr_const [ i ]		373019	0					
ANR	373206	Identifier	msr_const		373019	0					
ANR	373207	Identifier	i		373019	1					
ANR	373208	Identifier	name		373019	1					
ANR	373209	PostIncDecOperationExpression	i ++	530:35:11765:11767	373019	2	True				
ANR	373210	Identifier	i		373019	0					
ANR	373211	IncDec	++		373019	1					
ANR	373212	CompoundStatement		27:40:716:716	373019	3					
ANR	373213	IfStatement	if ( op -> operands [ 0 ] . immediate == msr_const [ i ] . val )		373019	0					
ANR	373214	Condition	op -> operands [ 0 ] . immediate == msr_const [ i ] . val	531:9:11781:11825	373019	0	True				
ANR	373215	EqualityExpression	op -> operands [ 0 ] . immediate == msr_const [ i ] . val		373019	0		==			
ANR	373216	MemberAccess	op -> operands [ 0 ] . immediate		373019	0					
ANR	373217	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373218	PtrMemberAccess	op -> operands		373019	0					
ANR	373219	Identifier	op		373019	0					
ANR	373220	Identifier	operands		373019	1					
ANR	373221	PrimaryExpression	0		373019	1					
ANR	373222	Identifier	immediate		373019	1					
ANR	373223	MemberAccess	msr_const [ i ] . val		373019	1					
ANR	373224	ArrayIndexing	msr_const [ i ]		373019	0					
ANR	373225	Identifier	msr_const		373019	0					
ANR	373226	Identifier	i		373019	1					
ANR	373227	Identifier	val		373019	1					
ANR	373228	CompoundStatement		28:56:774:774	373019	1					
ANR	373229	ExpressionStatement	op -> operands [ 0 ] . sp_val = msr_const [ i ] . val	532:6:11836:11877	373019	0	True				
ANR	373230	AssignmentExpression	op -> operands [ 0 ] . sp_val = msr_const [ i ] . val		373019	0		=			
ANR	373231	MemberAccess	op -> operands [ 0 ] . sp_val		373019	0					
ANR	373232	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373233	PtrMemberAccess	op -> operands		373019	0					
ANR	373234	Identifier	op		373019	0					
ANR	373235	Identifier	operands		373019	1					
ANR	373236	PrimaryExpression	0		373019	1					
ANR	373237	Identifier	sp_val		373019	1					
ANR	373238	MemberAccess	msr_const [ i ] . val		373019	1					
ANR	373239	ArrayIndexing	msr_const [ i ]		373019	0					
ANR	373240	Identifier	msr_const		373019	0					
ANR	373241	Identifier	i		373019	1					
ANR	373242	Identifier	val		373019	1					
ANR	373243	ExpressionStatement	op -> operands [ 0 ] . reg = op -> operands [ 0 ] . immediate	533:6:11885:11932	373019	1	True				
ANR	373244	AssignmentExpression	op -> operands [ 0 ] . reg = op -> operands [ 0 ] . immediate		373019	0		=			
ANR	373245	MemberAccess	op -> operands [ 0 ] . reg		373019	0					
ANR	373246	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373247	PtrMemberAccess	op -> operands		373019	0					
ANR	373248	Identifier	op		373019	0					
ANR	373249	Identifier	operands		373019	1					
ANR	373250	PrimaryExpression	0		373019	1					
ANR	373251	Identifier	reg		373019	1					
ANR	373252	MemberAccess	op -> operands [ 0 ] . immediate		373019	1					
ANR	373253	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373254	PtrMemberAccess	op -> operands		373019	0					
ANR	373255	Identifier	op		373019	0					
ANR	373256	Identifier	operands		373019	1					
ANR	373257	PrimaryExpression	0		373019	1					
ANR	373258	Identifier	immediate		373019	1					
ANR	373259	BreakStatement	break ;	534:6:11940:11945	373019	2	True				
ANR	373260	ElseStatement	else		373019	0					
ANR	373261	CompoundStatement		34:10:916:916	373019	0					
ANR	373262	ReturnStatement	return data ;	538:4:11976:11987	373019	0	True				
ANR	373263	Identifier	data		373019	0					
ANR	373264	ExpressionStatement	r = op -> operands [ 1 ] . reg	541:2:12000:12023	373019	1	True				
ANR	373265	AssignmentExpression	r = op -> operands [ 1 ] . reg		373019	0		=			
ANR	373266	Identifier	r		373019	0					
ANR	373267	MemberAccess	op -> operands [ 1 ] . reg		373019	1					
ANR	373268	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373269	PtrMemberAccess	op -> operands		373019	0					
ANR	373270	Identifier	op		373019	0					
ANR	373271	Identifier	operands		373019	1					
ANR	373272	PrimaryExpression	1		373019	1					
ANR	373273	Identifier	reg		373019	1					
ANR	373274	IfStatement	if ( op -> operands [ 1 ] . sp_val == 0xfffe )		373019	2					
ANR	373275	Condition	op -> operands [ 1 ] . sp_val == 0xfffe	542:7:12032:12063	373019	0	True				
ANR	373276	EqualityExpression	op -> operands [ 1 ] . sp_val == 0xfffe		373019	0		==			
ANR	373277	MemberAccess	op -> operands [ 1 ] . sp_val		373019	0					
ANR	373278	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373279	PtrMemberAccess	op -> operands		373019	0					
ANR	373280	Identifier	op		373019	0					
ANR	373281	Identifier	operands		373019	1					
ANR	373282	PrimaryExpression	1		373019	1					
ANR	373283	Identifier	sp_val		373019	1					
ANR	373284	PrimaryExpression	0xfffe		373019	1					
ANR	373285	CompoundStatement		39:42:1013:1013	373019	1					
ANR	373286	ExpressionStatement	is_immediate = 1	543:3:12072:12088	373019	0	True				
ANR	373287	AssignmentExpression	is_immediate = 1		373019	0		=			
ANR	373288	Identifier	is_immediate		373019	0					
ANR	373289	PrimaryExpression	1		373019	1					
ANR	373290	ExpressionStatement	r = op -> operands [ 1 ] . immediate	544:3:12093:12122	373019	1	True				
ANR	373291	AssignmentExpression	r = op -> operands [ 1 ] . immediate		373019	0		=			
ANR	373292	Identifier	r		373019	0					
ANR	373293	MemberAccess	op -> operands [ 1 ] . immediate		373019	1					
ANR	373294	ArrayIndexing	op -> operands [ 1 ]		373019	0					
ANR	373295	PtrMemberAccess	op -> operands		373019	0					
ANR	373296	Identifier	op		373019	0					
ANR	373297	Identifier	operands		373019	1					
ANR	373298	PrimaryExpression	1		373019	1					
ANR	373299	Identifier	immediate		373019	1					
ANR	373300	ExpressionStatement	b = op -> operands [ 0 ] . sp_val	546:2:12130:12156	373019	3	True				
ANR	373301	AssignmentExpression	b = op -> operands [ 0 ] . sp_val		373019	0		=			
ANR	373302	Identifier	b		373019	0					
ANR	373303	MemberAccess	op -> operands [ 0 ] . sp_val		373019	1					
ANR	373304	ArrayIndexing	op -> operands [ 0 ]		373019	0					
ANR	373305	PtrMemberAccess	op -> operands		373019	0					
ANR	373306	Identifier	op		373019	0					
ANR	373307	Identifier	operands		373019	1					
ANR	373308	PrimaryExpression	0		373019	1					
ANR	373309	Identifier	sp_val		373019	1					
ANR	373310	ExpressionStatement	data = 0x00000000	548:1:12162:12179	373019	6	True				
ANR	373311	AssignmentExpression	data = 0x00000000		373019	0		=			
ANR	373312	Identifier	data		373019	0					
ANR	373313	PrimaryExpression	0x00000000		373019	1					
ANR	373314	IfStatement	if ( is_immediate )		373019	7					
ANR	373315	Condition	is_immediate	550:5:12187:12198	373019	0	True				
ANR	373316	Identifier	is_immediate		373019	0					
ANR	373317	CompoundStatement		47:19:1147:1147	373019	1					
ANR	373318	ExpressionStatement	data = 0xd500401f	552:2:12237:12254	373019	0	True				
ANR	373319	AssignmentExpression	data = 0xd500401f		373019	0		=			
ANR	373320	Identifier	data		373019	0					
ANR	373321	PrimaryExpression	0xd500401f		373019	1					
ANR	373322	IfStatement	if ( b == 0xc210 )		373019	1					
ANR	373323	Condition	b == 0xc210	553:6:12262:12272	373019	0	True				
ANR	373324	EqualityExpression	b == 0xc210		373019	0		==			
ANR	373325	Identifier	b		373019	0					
ANR	373326	PrimaryExpression	0xc210		373019	1					
ANR	373327	CompoundStatement		50:19:1221:1221	373019	1					
ANR	373328	ExpressionStatement	b = 0x05	554:3:12295:12303	373019	0	True				
ANR	373329	AssignmentExpression	b = 0x05		373019	0		=			
ANR	373330	Identifier	b		373019	0					
ANR	373331	PrimaryExpression	0x05		373019	1					
ANR	373332	ExpressionStatement	data |= ( b & 0xf0 ) << 12	557:2:12345:12369	373019	2	True				
ANR	373333	AssignmentExpression	data |= ( b & 0xf0 ) << 12		373019	0		|=			
ANR	373334	Identifier	data		373019	0					
ANR	373335	ShiftExpression	( b & 0xf0 ) << 12		373019	1		<<			
ANR	373336	BitAndExpression	b & 0xf0		373019	0		&			
ANR	373337	Identifier	b		373019	0					
ANR	373338	PrimaryExpression	0xf0		373019	1					
ANR	373339	PrimaryExpression	12		373019	1					
ANR	373340	ExpressionStatement	data |= ( b & 0x0f ) << 5	558:2:12379:12402	373019	3	True				
ANR	373341	AssignmentExpression	data |= ( b & 0x0f ) << 5		373019	0		|=			
ANR	373342	Identifier	data		373019	0					
ANR	373343	ShiftExpression	( b & 0x0f ) << 5		373019	1		<<			
ANR	373344	BitAndExpression	b & 0x0f		373019	0		&			
ANR	373345	Identifier	b		373019	0					
ANR	373346	PrimaryExpression	0x0f		373019	1					
ANR	373347	PrimaryExpression	5		373019	1					
ANR	373348	ExpressionStatement	data |= ( r & 0xf ) << 8	559:2:12412:12434	373019	4	True				
ANR	373349	AssignmentExpression	data |= ( r & 0xf ) << 8		373019	0		|=			
ANR	373350	Identifier	data		373019	0					
ANR	373351	ShiftExpression	( r & 0xf ) << 8		373019	1		<<			
ANR	373352	BitAndExpression	r & 0xf		373019	0		&			
ANR	373353	Identifier	r		373019	0					
ANR	373354	PrimaryExpression	0xf		373019	1					
ANR	373355	PrimaryExpression	8		373019	1					
ANR	373356	ElseStatement	else		373019	0					
ANR	373357	CompoundStatement		58:8:1403:1403	373019	0					
ANR	373358	IfStatement	if ( w )		373019	0					
ANR	373359	Condition	w	562:6:12465:12465	373019	0	True				
ANR	373360	Identifier	w		373019	0					
ANR	373361	CompoundStatement		59:9:1414:1414	373019	1					
ANR	373362	ExpressionStatement	data |= 0xd5200000	564:3:12486:12504	373019	0	True				
ANR	373363	AssignmentExpression	data |= 0xd5200000		373019	0		|=			
ANR	373364	Identifier	data		373019	0					
ANR	373365	PrimaryExpression	0xd5200000		373019	1					
ANR	373366	ElseStatement	else		373019	0					
ANR	373367	CompoundStatement		62:9:1461:1461	373019	0					
ANR	373368	ExpressionStatement	data |= 0xd5000000	566:3:12520:12538	373019	0	True				
ANR	373369	AssignmentExpression	data |= 0xd5000000		373019	0		|=			
ANR	373370	Identifier	data		373019	0					
ANR	373371	PrimaryExpression	0xd5000000		373019	1					
ANR	373372	ExpressionStatement	data |= b << 5	568:2:12546:12560	373019	1	True				
ANR	373373	AssignmentExpression	data |= b << 5		373019	0		|=			
ANR	373374	Identifier	data		373019	0					
ANR	373375	ShiftExpression	b << 5		373019	1		<<			
ANR	373376	Identifier	b		373019	0					
ANR	373377	PrimaryExpression	5		373019	1					
ANR	373378	ExpressionStatement	data |= r	569:2:12564:12573	373019	2	True				
ANR	373379	AssignmentExpression	data |= r		373019	0		|=			
ANR	373380	Identifier	data		373019	0					
ANR	373381	Identifier	r		373019	1					
ANR	373382	ExpressionStatement	seq_data = 0x00000000	571:1:12579:12600	373019	8	True				
ANR	373383	AssignmentExpression	seq_data = 0x00000000		373019	0		=			
ANR	373384	Identifier	seq_data		373019	0					
ANR	373385	PrimaryExpression	0x00000000		373019	1					
ANR	373386	ExpressionStatement	seq_data |= ( data & 0xff ) << 8 * 3	572:1:12603:12635	373019	9	True				
ANR	373387	AssignmentExpression	seq_data |= ( data & 0xff ) << 8 * 3		373019	0		|=			
ANR	373388	Identifier	seq_data		373019	0					
ANR	373389	ShiftExpression	( data & 0xff ) << 8 * 3		373019	1		<<			
ANR	373390	BitAndExpression	data & 0xff		373019	0		&			
ANR	373391	Identifier	data		373019	0					
ANR	373392	PrimaryExpression	0xff		373019	1					
ANR	373393	MultiplicativeExpression	8 * 3		373019	1		*			
ANR	373394	PrimaryExpression	8		373019	0					
ANR	373395	PrimaryExpression	3		373019	1					
ANR	373396	ExpressionStatement	seq_data |= ( data & 0xff00 ) << 8 * 1	573:1:12638:12672	373019	10	True				
ANR	373397	AssignmentExpression	seq_data |= ( data & 0xff00 ) << 8 * 1		373019	0		|=			
ANR	373398	Identifier	seq_data		373019	0					
ANR	373399	ShiftExpression	( data & 0xff00 ) << 8 * 1		373019	1		<<			
ANR	373400	BitAndExpression	data & 0xff00		373019	0		&			
ANR	373401	Identifier	data		373019	0					
ANR	373402	PrimaryExpression	0xff00		373019	1					
ANR	373403	MultiplicativeExpression	8 * 1		373019	1		*			
ANR	373404	PrimaryExpression	8		373019	0					
ANR	373405	PrimaryExpression	1		373019	1					
ANR	373406	ExpressionStatement	seq_data |= ( data & 0xff0000 ) >> 8 * 1	574:1:12675:12711	373019	11	True				
ANR	373407	AssignmentExpression	seq_data |= ( data & 0xff0000 ) >> 8 * 1		373019	0		|=			
ANR	373408	Identifier	seq_data		373019	0					
ANR	373409	ShiftExpression	( data & 0xff0000 ) >> 8 * 1		373019	1		>>			
ANR	373410	BitAndExpression	data & 0xff0000		373019	0		&			
ANR	373411	Identifier	data		373019	0					
ANR	373412	PrimaryExpression	0xff0000		373019	1					
ANR	373413	MultiplicativeExpression	8 * 1		373019	1		*			
ANR	373414	PrimaryExpression	8		373019	0					
ANR	373415	PrimaryExpression	1		373019	1					
ANR	373416	ExpressionStatement	seq_data |= ( data & 0xff000000 ) >> 8 * 3	575:1:12714:12752	373019	12	True				
ANR	373417	AssignmentExpression	seq_data |= ( data & 0xff000000 ) >> 8 * 3		373019	0		|=			
ANR	373418	Identifier	seq_data		373019	0					
ANR	373419	ShiftExpression	( data & 0xff000000 ) >> 8 * 3		373019	1		>>			
ANR	373420	BitAndExpression	data & 0xff000000		373019	0		&			
ANR	373421	Identifier	data		373019	0					
ANR	373422	PrimaryExpression	0xff000000		373019	1					
ANR	373423	MultiplicativeExpression	8 * 3		373019	1		*			
ANR	373424	PrimaryExpression	8		373019	0					
ANR	373425	PrimaryExpression	3		373019	1					
ANR	373426	ReturnStatement	return seq_data ;	581:1:12846:12861	373019	13	True				
ANR	373427	Identifier	seq_data		373019	0					
ANR	373428	ReturnType	static ut32		373019	1					
ANR	373429	Identifier	msr		373019	2					
ANR	373430	ParameterList	"ArmOp * op , int w"		373019	3					
ANR	373431	Parameter	ArmOp * op	504:16:11035:11043	373019	0	True				
ANR	373432	ParameterType	ArmOp *		373019	0					
ANR	373433	Identifier	op		373019	1					
ANR	373434	Parameter	int w	504:27:11046:11050	373019	1	True				
ANR	373435	ParameterType	int		373019	0					
ANR	373436	Identifier	w		373019	1					
ANR	373437	CFGEntryNode	ENTRY		373019		True				
ANR	373438	CFGExitNode	EXIT		373019		True				
ANR	373439	Symbol	UT32_MAX		373019						
ANR	373440	Symbol	is_immediate		373019						
ANR	373441	Symbol	data		373019						
ANR	373442	Symbol	* op		373019						
ANR	373443	Symbol	op -> operands [ 1 ] . reg_type		373019						
ANR	373444	Symbol	op -> operands [ 1 ] . immediate		373019						
ANR	373445	Symbol	msr_const [ i ] . val		373019						
ANR	373446	Symbol	op -> operands [ 0 ] . reg_type		373019						
ANR	373447	Symbol	* * op		373019						
ANR	373448	Symbol	* op -> operands		373019						
ANR	373449	Symbol	ARM_SP		373019						
ANR	373450	Symbol	op -> operands [ 0 ] . type		373019						
ANR	373451	Symbol	msr_const [ i ] . name		373019						
ANR	373452	Symbol	op -> operands [ 0 ] . reg		373019						
ANR	373453	Symbol	op -> operands [ 0 ] . sp_val		373019						
ANR	373454	Symbol	op		373019						
ANR	373455	Symbol	ARM_CONSTANT		373019						
ANR	373456	Symbol	b		373019						
ANR	373457	Symbol	msr_const		373019						
ANR	373458	Symbol	op -> operands [ 1 ] . reg		373019						
ANR	373459	Symbol	op -> operands [ 1 ] . sp_val		373019						
ANR	373460	Symbol	i		373019						
ANR	373461	Symbol	op -> operands [ 0 ] . immediate		373019						
ANR	373462	Symbol	ARM_REG64		373019						
ANR	373463	Symbol	r		373019						
ANR	373464	Symbol	seq_data		373019						
ANR	373465	Symbol	* i		373019						
ANR	373466	Symbol	op -> operands [ 1 ] . type		373019						
ANR	373467	Symbol	w		373019						
ANR	373468	Symbol	op -> operands		373019						
ANR	373469	Symbol	* msr_const		373019						
ANR	373470	Function	orr	584:0:12866:14179							
ANR	373471	FunctionDef	"orr (ArmOp * op , int addr)"		373470	0					
ANR	373472	CompoundStatement		584:37:12903:14179	373470	0					
ANR	373473	IdentifierDeclStatement	ut32 data = UT32_MAX ;	585:1:12906:12926	373470	0	True				
ANR	373474	IdentifierDecl	data = UT32_MAX		373470	0					
ANR	373475	IdentifierDeclType	ut32		373470	0					
ANR	373476	Identifier	data		373470	1					
ANR	373477	AssignmentExpression	data = UT32_MAX		373470	2		=			
ANR	373478	Identifier	UT32_MAX		373470	0					
ANR	373479	Identifier	UT32_MAX		373470	1					
ANR	373480	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		373470	1					
ANR	373481	Condition	op -> operands [ 2 ] . type & ARM_GPR	587:5:12934:12963	373470	0	True				
ANR	373482	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		373470	0		&			
ANR	373483	MemberAccess	op -> operands [ 2 ] . type		373470	0					
ANR	373484	ArrayIndexing	op -> operands [ 2 ]		373470	0					
ANR	373485	PtrMemberAccess	op -> operands		373470	0					
ANR	373486	Identifier	op		373470	0					
ANR	373487	Identifier	operands		373470	1					
ANR	373488	PrimaryExpression	2		373470	1					
ANR	373489	Identifier	type		373470	1					
ANR	373490	Identifier	ARM_GPR		373470	1					
ANR	373491	CompoundStatement		4:37:62:62	373470	1					
ANR	373492	IfStatement	if ( ! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type ) )		373470	0					
ANR	373493	Condition	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type )	589:6:13012:13129	373470	0	True				
ANR	373494	UnaryOperationExpression	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type )		373470	0					
ANR	373495	UnaryOperator	!		373470	0					
ANR	373496	AndExpression	op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type && op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type		373470	1		&&			
ANR	373497	EqualityExpression	op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type		373470	0		==			
ANR	373498	MemberAccess	op -> operands [ 0 ] . reg_type		373470	0					
ANR	373499	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373500	PtrMemberAccess	op -> operands		373470	0					
ANR	373501	Identifier	op		373470	0					
ANR	373502	Identifier	operands		373470	1					
ANR	373503	PrimaryExpression	0		373470	1					
ANR	373504	Identifier	reg_type		373470	1					
ANR	373505	MemberAccess	op -> operands [ 1 ] . reg_type		373470	1					
ANR	373506	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373507	PtrMemberAccess	op -> operands		373470	0					
ANR	373508	Identifier	op		373470	0					
ANR	373509	Identifier	operands		373470	1					
ANR	373510	PrimaryExpression	1		373470	1					
ANR	373511	Identifier	reg_type		373470	1					
ANR	373512	EqualityExpression	op -> operands [ 1 ] . reg_type == op -> operands [ 2 ] . reg_type		373470	1		==			
ANR	373513	MemberAccess	op -> operands [ 1 ] . reg_type		373470	0					
ANR	373514	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373515	PtrMemberAccess	op -> operands		373470	0					
ANR	373516	Identifier	op		373470	0					
ANR	373517	Identifier	operands		373470	1					
ANR	373518	PrimaryExpression	1		373470	1					
ANR	373519	Identifier	reg_type		373470	1					
ANR	373520	MemberAccess	op -> operands [ 2 ] . reg_type		373470	1					
ANR	373521	ArrayIndexing	op -> operands [ 2 ]		373470	0					
ANR	373522	PtrMemberAccess	op -> operands		373470	0					
ANR	373523	Identifier	op		373470	0					
ANR	373524	Identifier	operands		373470	1					
ANR	373525	PrimaryExpression	2		373470	1					
ANR	373526	Identifier	reg_type		373470	1					
ANR	373527	CompoundStatement		7:62:228:228	373470	1					
ANR	373528	ReturnStatement	return data ;	591:7:13141:13152	373470	0	True				
ANR	373529	Identifier	data		373470	0					
ANR	373530	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		373470	1					
ANR	373531	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	593:6:13164:13199	373470	0	True				
ANR	373532	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		373470	0		&			
ANR	373533	MemberAccess	op -> operands [ 0 ] . reg_type		373470	0					
ANR	373534	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373535	PtrMemberAccess	op -> operands		373470	0					
ANR	373536	Identifier	op		373470	0					
ANR	373537	Identifier	operands		373470	1					
ANR	373538	PrimaryExpression	0		373470	1					
ANR	373539	Identifier	reg_type		373470	1					
ANR	373540	Identifier	ARM_REG64		373470	1					
ANR	373541	CompoundStatement		10:44:298:298	373470	1					
ANR	373542	ExpressionStatement	data = 0x000000aa	594:3:13207:13224	373470	0	True				
ANR	373543	AssignmentExpression	data = 0x000000aa		373470	0		=			
ANR	373544	Identifier	data		373470	0					
ANR	373545	PrimaryExpression	0x000000aa		373470	1					
ANR	373546	ElseStatement	else		373470	0					
ANR	373547	CompoundStatement		12:9:331:331	373470	0					
ANR	373548	ExpressionStatement	data = 0x0000002a	596:3:13240:13257	373470	0	True				
ANR	373549	AssignmentExpression	data = 0x0000002a		373470	0		=			
ANR	373550	Identifier	data		373470	0					
ANR	373551	PrimaryExpression	0x0000002a		373470	1					
ANR	373552	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	598:2:13265:13298	373470	2	True				
ANR	373553	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		373470	0		+=			
ANR	373554	Identifier	data		373470	0					
ANR	373555	ShiftExpression	op -> operands [ 0 ] . reg << 24		373470	1		<<			
ANR	373556	MemberAccess	op -> operands [ 0 ] . reg		373470	0					
ANR	373557	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373558	PtrMemberAccess	op -> operands		373470	0					
ANR	373559	Identifier	op		373470	0					
ANR	373560	Identifier	operands		373470	1					
ANR	373561	PrimaryExpression	0		373470	1					
ANR	373562	Identifier	reg		373470	1					
ANR	373563	PrimaryExpression	24		373470	1					
ANR	373564	ExpressionStatement	data += op -> operands [ 1 ] . reg << 29	599:2:13302:13335	373470	3	True				
ANR	373565	AssignmentExpression	data += op -> operands [ 1 ] . reg << 29		373470	0		+=			
ANR	373566	Identifier	data		373470	0					
ANR	373567	ShiftExpression	op -> operands [ 1 ] . reg << 29		373470	1		<<			
ANR	373568	MemberAccess	op -> operands [ 1 ] . reg		373470	0					
ANR	373569	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373570	PtrMemberAccess	op -> operands		373470	0					
ANR	373571	Identifier	op		373470	0					
ANR	373572	Identifier	operands		373470	1					
ANR	373573	PrimaryExpression	1		373470	1					
ANR	373574	Identifier	reg		373470	1					
ANR	373575	PrimaryExpression	29		373470	1					
ANR	373576	ExpressionStatement	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16	600:2:13339:13380	373470	4	True				
ANR	373577	AssignmentExpression	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16		373470	0		+=			
ANR	373578	Identifier	data		373470	0					
ANR	373579	ShiftExpression	( op -> operands [ 1 ] . reg >> 3 ) << 16		373470	1		<<			
ANR	373580	ShiftExpression	op -> operands [ 1 ] . reg >> 3		373470	0		>>			
ANR	373581	MemberAccess	op -> operands [ 1 ] . reg		373470	0					
ANR	373582	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373583	PtrMemberAccess	op -> operands		373470	0					
ANR	373584	Identifier	op		373470	0					
ANR	373585	Identifier	operands		373470	1					
ANR	373586	PrimaryExpression	1		373470	1					
ANR	373587	Identifier	reg		373470	1					
ANR	373588	PrimaryExpression	3		373470	1					
ANR	373589	PrimaryExpression	16		373470	1					
ANR	373590	ExpressionStatement	data += op -> operands [ 2 ] . reg << 8	601:2:13384:13416	373470	5	True				
ANR	373591	AssignmentExpression	data += op -> operands [ 2 ] . reg << 8		373470	0		+=			
ANR	373592	Identifier	data		373470	0					
ANR	373593	ShiftExpression	op -> operands [ 2 ] . reg << 8		373470	1		<<			
ANR	373594	MemberAccess	op -> operands [ 2 ] . reg		373470	0					
ANR	373595	ArrayIndexing	op -> operands [ 2 ]		373470	0					
ANR	373596	PtrMemberAccess	op -> operands		373470	0					
ANR	373597	Identifier	op		373470	0					
ANR	373598	Identifier	operands		373470	1					
ANR	373599	PrimaryExpression	2		373470	1					
ANR	373600	Identifier	reg		373470	1					
ANR	373601	PrimaryExpression	8		373470	1					
ANR	373602	ElseStatement	else		373470	0					
ANR	373603	IfStatement	if ( op -> operands [ 2 ] . type & ARM_CONSTANT )		373470	0					
ANR	373604	Condition	op -> operands [ 2 ] . type & ARM_CONSTANT	602:12:13430:13464	373470	0	True				
ANR	373605	BitAndExpression	op -> operands [ 2 ] . type & ARM_CONSTANT		373470	0		&			
ANR	373606	MemberAccess	op -> operands [ 2 ] . type		373470	0					
ANR	373607	ArrayIndexing	op -> operands [ 2 ]		373470	0					
ANR	373608	PtrMemberAccess	op -> operands		373470	0					
ANR	373609	Identifier	op		373470	0					
ANR	373610	Identifier	operands		373470	1					
ANR	373611	PrimaryExpression	2		373470	1					
ANR	373612	Identifier	type		373470	1					
ANR	373613	Identifier	ARM_CONSTANT		373470	1					
ANR	373614	CompoundStatement		38:2:1002:1021	373470	1					
ANR	373615	IfStatement	if ( ! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type ) )		373470	0					
ANR	373616	Condition	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type )	604:6:13504:13558	373470	0	True				
ANR	373617	UnaryOperationExpression	! ( op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type )		373470	0					
ANR	373618	UnaryOperator	!		373470	0					
ANR	373619	EqualityExpression	op -> operands [ 0 ] . reg_type == op -> operands [ 1 ] . reg_type		373470	1		==			
ANR	373620	MemberAccess	op -> operands [ 0 ] . reg_type		373470	0					
ANR	373621	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373622	PtrMemberAccess	op -> operands		373470	0					
ANR	373623	Identifier	op		373470	0					
ANR	373624	Identifier	operands		373470	1					
ANR	373625	PrimaryExpression	0		373470	1					
ANR	373626	Identifier	reg_type		373470	1					
ANR	373627	MemberAccess	op -> operands [ 1 ] . reg_type		373470	1					
ANR	373628	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373629	PtrMemberAccess	op -> operands		373470	0					
ANR	373630	Identifier	op		373470	0					
ANR	373631	Identifier	operands		373470	1					
ANR	373632	PrimaryExpression	1		373470	1					
ANR	373633	Identifier	reg_type		373470	1					
ANR	373634	CompoundStatement		21:63:657:657	373470	1					
ANR	373635	ReturnStatement	return data ;	605:3:13566:13577	373470	0	True				
ANR	373636	Identifier	data		373470	0					
ANR	373637	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		373470	1					
ANR	373638	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	607:6:13589:13624	373470	0	True				
ANR	373639	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		373470	0		&			
ANR	373640	MemberAccess	op -> operands [ 0 ] . reg_type		373470	0					
ANR	373641	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373642	PtrMemberAccess	op -> operands		373470	0					
ANR	373643	Identifier	op		373470	0					
ANR	373644	Identifier	operands		373470	1					
ANR	373645	PrimaryExpression	0		373470	1					
ANR	373646	Identifier	reg_type		373470	1					
ANR	373647	Identifier	ARM_REG64		373470	1					
ANR	373648	CompoundStatement		24:44:723:723	373470	1					
ANR	373649	ExpressionStatement	data = 0x000040b2	608:3:13632:13649	373470	0	True				
ANR	373650	AssignmentExpression	data = 0x000040b2		373470	0		=			
ANR	373651	Identifier	data		373470	0					
ANR	373652	PrimaryExpression	0x000040b2		373470	1					
ANR	373653	ElseStatement	else		373470	0					
ANR	373654	CompoundStatement		26:9:756:756	373470	0					
ANR	373655	ExpressionStatement	data = 0x00000032	610:3:13665:13682	373470	0	True				
ANR	373656	AssignmentExpression	data = 0x00000032		373470	0		=			
ANR	373657	Identifier	data		373470	0					
ANR	373658	PrimaryExpression	0x00000032		373470	1					
ANR	373659	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	613:2:13691:13724	373470	2	True				
ANR	373660	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		373470	0		+=			
ANR	373661	Identifier	data		373470	0					
ANR	373662	ShiftExpression	op -> operands [ 0 ] . reg << 24		373470	1		<<			
ANR	373663	MemberAccess	op -> operands [ 0 ] . reg		373470	0					
ANR	373664	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373665	PtrMemberAccess	op -> operands		373470	0					
ANR	373666	Identifier	op		373470	0					
ANR	373667	Identifier	operands		373470	1					
ANR	373668	PrimaryExpression	0		373470	1					
ANR	373669	Identifier	reg		373470	1					
ANR	373670	PrimaryExpression	24		373470	1					
ANR	373671	ExpressionStatement	data += op -> operands [ 1 ] . reg << 29	614:2:13728:13761	373470	3	True				
ANR	373672	AssignmentExpression	data += op -> operands [ 1 ] . reg << 29		373470	0		+=			
ANR	373673	Identifier	data		373470	0					
ANR	373674	ShiftExpression	op -> operands [ 1 ] . reg << 29		373470	1		<<			
ANR	373675	MemberAccess	op -> operands [ 1 ] . reg		373470	0					
ANR	373676	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373677	PtrMemberAccess	op -> operands		373470	0					
ANR	373678	Identifier	op		373470	0					
ANR	373679	Identifier	operands		373470	1					
ANR	373680	PrimaryExpression	1		373470	1					
ANR	373681	Identifier	reg		373470	1					
ANR	373682	PrimaryExpression	29		373470	1					
ANR	373683	ExpressionStatement	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16	615:2:13765:13806	373470	4	True				
ANR	373684	AssignmentExpression	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16		373470	0		+=			
ANR	373685	Identifier	data		373470	0					
ANR	373686	ShiftExpression	( op -> operands [ 1 ] . reg >> 3 ) << 16		373470	1		<<			
ANR	373687	ShiftExpression	op -> operands [ 1 ] . reg >> 3		373470	0		>>			
ANR	373688	MemberAccess	op -> operands [ 1 ] . reg		373470	0					
ANR	373689	ArrayIndexing	op -> operands [ 1 ]		373470	0					
ANR	373690	PtrMemberAccess	op -> operands		373470	0					
ANR	373691	Identifier	op		373470	0					
ANR	373692	Identifier	operands		373470	1					
ANR	373693	PrimaryExpression	1		373470	1					
ANR	373694	Identifier	reg		373470	1					
ANR	373695	PrimaryExpression	3		373470	1					
ANR	373696	PrimaryExpression	16		373470	1					
ANR	373697	IdentifierDeclStatement	ut32 imm = decodeBitMasks ( op -> operands [ 2 ] . immediate ) ;	617:2:13811:13864	373470	5	True				
ANR	373698	IdentifierDecl	imm = decodeBitMasks ( op -> operands [ 2 ] . immediate )		373470	0					
ANR	373699	IdentifierDeclType	ut32		373470	0					
ANR	373700	Identifier	imm		373470	1					
ANR	373701	AssignmentExpression	imm = decodeBitMasks ( op -> operands [ 2 ] . immediate )		373470	2		=			
ANR	373702	Identifier	imm		373470	0					
ANR	373703	CallExpression	decodeBitMasks ( op -> operands [ 2 ] . immediate )		373470	1					
ANR	373704	Callee	decodeBitMasks		373470	0					
ANR	373705	Identifier	decodeBitMasks		373470	0					
ANR	373706	ArgumentList	op -> operands [ 2 ] . immediate		373470	1					
ANR	373707	Argument	op -> operands [ 2 ] . immediate		373470	0					
ANR	373708	MemberAccess	op -> operands [ 2 ] . immediate		373470	0					
ANR	373709	ArrayIndexing	op -> operands [ 2 ]		373470	0					
ANR	373710	PtrMemberAccess	op -> operands		373470	0					
ANR	373711	Identifier	op		373470	0					
ANR	373712	Identifier	operands		373470	1					
ANR	373713	PrimaryExpression	2		373470	1					
ANR	373714	Identifier	immediate		373470	1					
ANR	373715	IfStatement	if ( imm == - 1 )		373470	6					
ANR	373716	Condition	imm == - 1	618:6:13872:13880	373470	0	True				
ANR	373717	EqualityExpression	imm == - 1		373470	0		==			
ANR	373718	Identifier	imm		373470	0					
ANR	373719	UnaryOperationExpression	- 1		373470	1					
ANR	373720	UnaryOperator	-		373470	0					
ANR	373721	PrimaryExpression	1		373470	1					
ANR	373722	CompoundStatement		35:17:979:979	373470	1					
ANR	373723	ReturnStatement	return imm ;	619:3:13888:13898	373470	0	True				
ANR	373724	Identifier	imm		373470	0					
ANR	373725	IdentifierDeclStatement	int low = imm & 0xF ;	621:2:13906:13925	373470	7	True				
ANR	373726	IdentifierDecl	low = imm & 0xF		373470	0					
ANR	373727	IdentifierDeclType	int		373470	0					
ANR	373728	Identifier	low		373470	1					
ANR	373729	AssignmentExpression	low = imm & 0xF		373470	2		=			
ANR	373730	Identifier	low		373470	0					
ANR	373731	BitAndExpression	imm & 0xF		373470	1		&			
ANR	373732	Identifier	imm		373470	0					
ANR	373733	PrimaryExpression	0xF		373470	1					
ANR	373734	IfStatement	if ( op -> operands [ 0 ] . reg_type & ARM_REG64 )		373470	8					
ANR	373735	Condition	op -> operands [ 0 ] . reg_type & ARM_REG64	622:6:13933:13968	373470	0	True				
ANR	373736	BitAndExpression	op -> operands [ 0 ] . reg_type & ARM_REG64		373470	0		&			
ANR	373737	MemberAccess	op -> operands [ 0 ] . reg_type		373470	0					
ANR	373738	ArrayIndexing	op -> operands [ 0 ]		373470	0					
ANR	373739	PtrMemberAccess	op -> operands		373470	0					
ANR	373740	Identifier	op		373470	0					
ANR	373741	Identifier	operands		373470	1					
ANR	373742	PrimaryExpression	0		373470	1					
ANR	373743	Identifier	reg_type		373470	1					
ANR	373744	Identifier	ARM_REG64		373470	1					
ANR	373745	CompoundStatement		39:44:1067:1067	373470	1					
ANR	373746	ExpressionStatement	imm = ( ( imm >> 6 ) | 0x78 )	623:3:13976:14001	373470	0	True				
ANR	373747	AssignmentExpression	imm = ( ( imm >> 6 ) | 0x78 )		373470	0		=			
ANR	373748	Identifier	imm		373470	0					
ANR	373749	InclusiveOrExpression	( imm >> 6 ) | 0x78		373470	1		|			
ANR	373750	ShiftExpression	imm >> 6		373470	0		>>			
ANR	373751	Identifier	imm		373470	0					
ANR	373752	PrimaryExpression	6		373470	1					
ANR	373753	PrimaryExpression	0x78		373470	1					
ANR	373754	IfStatement	if ( imm > 120 )		373470	1					
ANR	373755	Condition	imm > 120	624:7:14010:14018	373470	0	True				
ANR	373756	RelationalExpression	imm > 120		373470	0		>			
ANR	373757	Identifier	imm		373470	0					
ANR	373758	PrimaryExpression	120		373470	1					
ANR	373759	CompoundStatement		41:18:1117:1117	373470	1					
ANR	373760	ExpressionStatement	data |= imm << 8	625:4:14027:14043	373470	0	True				
ANR	373761	AssignmentExpression	data |= imm << 8		373470	0		|=			
ANR	373762	Identifier	data		373470	0					
ANR	373763	ShiftExpression	imm << 8		373470	1		<<			
ANR	373764	Identifier	imm		373470	0					
ANR	373765	PrimaryExpression	8		373470	1					
ANR	373766	ElseStatement	else		373470	0					
ANR	373767	CompoundStatement		44:9:1155:1155	373470	0					
ANR	373768	ExpressionStatement	imm = ( ( imm >> 2 ) )	628:3:14064:14082	373470	0	True				
ANR	373769	AssignmentExpression	imm = ( ( imm >> 2 ) )		373470	0		=			
ANR	373770	Identifier	imm		373470	0					
ANR	373771	ShiftExpression	imm >> 2		373470	1		>>			
ANR	373772	Identifier	imm		373470	0					
ANR	373773	PrimaryExpression	2		373470	1					
ANR	373774	IfStatement	if ( imm > 120 )		373470	1					
ANR	373775	Condition	imm > 120	629:7:14091:14099	373470	0	True				
ANR	373776	RelationalExpression	imm > 120		373470	0		>			
ANR	373777	Identifier	imm		373470	0					
ANR	373778	PrimaryExpression	120		373470	1					
ANR	373779	CompoundStatement		46:18:1198:1198	373470	1					
ANR	373780	ExpressionStatement	data |= imm << 4	630:4:14108:14124	373470	0	True				
ANR	373781	AssignmentExpression	data |= imm << 4		373470	0		|=			
ANR	373782	Identifier	data		373470	0					
ANR	373783	ShiftExpression	imm << 4		373470	1		<<			
ANR	373784	Identifier	imm		373470	0					
ANR	373785	PrimaryExpression	4		373470	1					
ANR	373786	ExpressionStatement	data |= ( 4 * low ) << 16	633:2:14137:14160	373470	9	True				
ANR	373787	AssignmentExpression	data |= ( 4 * low ) << 16		373470	0		|=			
ANR	373788	Identifier	data		373470	0					
ANR	373789	ShiftExpression	( 4 * low ) << 16		373470	1		<<			
ANR	373790	MultiplicativeExpression	4 * low		373470	0		*			
ANR	373791	PrimaryExpression	4		373470	0					
ANR	373792	Identifier	low		373470	1					
ANR	373793	PrimaryExpression	16		373470	1					
ANR	373794	ReturnStatement	return data ;	635:1:14166:14177	373470	2	True				
ANR	373795	Identifier	data		373470	0					
ANR	373796	ReturnType	static ut32		373470	1					
ANR	373797	Identifier	orr		373470	2					
ANR	373798	ParameterList	"ArmOp * op , int addr"		373470	3					
ANR	373799	Parameter	ArmOp * op	584:16:12882:12890	373470	0	True				
ANR	373800	ParameterType	ArmOp *		373470	0					
ANR	373801	Identifier	op		373470	1					
ANR	373802	Parameter	int addr	584:27:12893:12900	373470	1	True				
ANR	373803	ParameterType	int		373470	0					
ANR	373804	Identifier	addr		373470	1					
ANR	373805	CFGEntryNode	ENTRY		373470		True				
ANR	373806	CFGExitNode	EXIT		373470		True				
ANR	373807	Symbol	UT32_MAX		373470						
ANR	373808	Symbol	op -> operands [ 2 ] . reg		373470						
ANR	373809	Symbol	op -> operands [ 2 ] . immediate		373470						
ANR	373810	Symbol	op		373470						
ANR	373811	Symbol	ARM_CONSTANT		373470						
ANR	373812	Symbol	data		373470						
ANR	373813	Symbol	* op		373470						
ANR	373814	Symbol	op -> operands [ 1 ] . reg		373470						
ANR	373815	Symbol	op -> operands [ 1 ] . reg_type		373470						
ANR	373816	Symbol	imm		373470						
ANR	373817	Symbol	op -> operands [ 2 ] . reg_type		373470						
ANR	373818	Symbol	op -> operands [ 0 ] . reg_type		373470						
ANR	373819	Symbol	op -> operands [ 2 ] . type		373470						
ANR	373820	Symbol	ARM_GPR		373470						
ANR	373821	Symbol	* * op		373470						
ANR	373822	Symbol	ARM_REG64		373470						
ANR	373823	Symbol	decodeBitMasks		373470						
ANR	373824	Symbol	* op -> operands		373470						
ANR	373825	Symbol	low		373470						
ANR	373826	Symbol	op -> operands [ 0 ] . reg		373470						
ANR	373827	Symbol	addr		373470						
ANR	373828	Symbol	op -> operands		373470						
ANR	373829	Function	adrp	638:0:14182:14849							
ANR	373830	FunctionDef	"adrp (ArmOp * op , ut64 addr , ut32 k)"		373829	0					
ANR	373831	CompoundStatement		638:47:14229:14849	373829	0					
ANR	373832	Statement	ut64	639:1:14257:14260	373829	0	True				
ANR	373833	Statement	at	639:6:14262:14263	373829	1	True				
ANR	373834	Statement	=	639:9:14265:14265	373829	2	True				
ANR	373835	Statement	0L	639:11:14267:14268	373829	3	True				
ANR	373836	ExpressionStatement	L	639:13:14269:14270	373829	4	True				
ANR	373837	Identifier	L		373829	0					
ANR	373838	IdentifierDeclStatement	ut32 data = k ;	640:1:14273:14286	373829	5	True				
ANR	373839	IdentifierDecl	data = k		373829	0					
ANR	373840	IdentifierDeclType	ut32		373829	0					
ANR	373841	Identifier	data		373829	1					
ANR	373842	AssignmentExpression	data = k		373829	2		=			
ANR	373843	Identifier	k		373829	0					
ANR	373844	Identifier	k		373829	1					
ANR	373845	IfStatement	if ( op -> operands [ 0 ] . type == ARM_GPR )		373829	6					
ANR	373846	Condition	op -> operands [ 0 ] . type == ARM_GPR	641:5:14293:14323	373829	0	True				
ANR	373847	EqualityExpression	op -> operands [ 0 ] . type == ARM_GPR		373829	0		==			
ANR	373848	MemberAccess	op -> operands [ 0 ] . type		373829	0					
ANR	373849	ArrayIndexing	op -> operands [ 0 ]		373829	0					
ANR	373850	PtrMemberAccess	op -> operands		373829	0					
ANR	373851	Identifier	op		373829	0					
ANR	373852	Identifier	operands		373829	1					
ANR	373853	PrimaryExpression	0		373829	1					
ANR	373854	Identifier	type		373829	1					
ANR	373855	Identifier	ARM_GPR		373829	1					
ANR	373856	CompoundStatement		4:38:96:96	373829	1					
ANR	373857	ExpressionStatement	data += ( ( op -> operands [ 0 ] . reg & 0xff ) << 24 )	642:2:14330:14374	373829	0	True				
ANR	373858	AssignmentExpression	data += ( ( op -> operands [ 0 ] . reg & 0xff ) << 24 )		373829	0		+=			
ANR	373859	Identifier	data		373829	0					
ANR	373860	ShiftExpression	( op -> operands [ 0 ] . reg & 0xff ) << 24		373829	1		<<			
ANR	373861	BitAndExpression	op -> operands [ 0 ] . reg & 0xff		373829	0		&			
ANR	373862	MemberAccess	op -> operands [ 0 ] . reg		373829	0					
ANR	373863	ArrayIndexing	op -> operands [ 0 ]		373829	0					
ANR	373864	PtrMemberAccess	op -> operands		373829	0					
ANR	373865	Identifier	op		373829	0					
ANR	373866	Identifier	operands		373829	1					
ANR	373867	PrimaryExpression	0		373829	1					
ANR	373868	Identifier	reg		373829	1					
ANR	373869	PrimaryExpression	0xff		373829	1					
ANR	373870	PrimaryExpression	24		373829	1					
ANR	373871	ElseStatement	else		373829	0					
ANR	373872	CompoundStatement		6:8:154:154	373829	0					
ANR	373873	ExpressionStatement	"eprintf ( ""Usage: adrp x0, addr\\n"" )"	644:2:14388:14422	373829	0	True				
ANR	373874	CallExpression	"eprintf ( ""Usage: adrp x0, addr\\n"" )"		373829	0					
ANR	373875	Callee	eprintf		373829	0					
ANR	373876	Identifier	eprintf		373829	0					
ANR	373877	ArgumentList	"""Usage: adrp x0, addr\\n"""		373829	1					
ANR	373878	Argument	"""Usage: adrp x0, addr\\n"""		373829	0					
ANR	373879	PrimaryExpression	"""Usage: adrp x0, addr\\n"""		373829	0					
ANR	373880	ReturnStatement	return UT32_MAX ;	645:2:14426:14441	373829	1	True				
ANR	373881	Identifier	UT32_MAX		373829	0					
ANR	373882	IfStatement	if ( op -> operands [ 1 ] . type == ARM_CONSTANT )		373829	7					
ANR	373883	Condition	op -> operands [ 1 ] . type == ARM_CONSTANT	647:5:14451:14486	373829	0	True				
ANR	373884	EqualityExpression	op -> operands [ 1 ] . type == ARM_CONSTANT		373829	0		==			
ANR	373885	MemberAccess	op -> operands [ 1 ] . type		373829	0					
ANR	373886	ArrayIndexing	op -> operands [ 1 ]		373829	0					
ANR	373887	PtrMemberAccess	op -> operands		373829	0					
ANR	373888	Identifier	op		373829	0					
ANR	373889	Identifier	operands		373829	1					
ANR	373890	PrimaryExpression	1		373829	1					
ANR	373891	Identifier	type		373829	1					
ANR	373892	Identifier	ARM_CONSTANT		373829	1					
ANR	373893	CompoundStatement		10:43:259:259	373829	1					
ANR	373894	ExpressionStatement	at = op -> operands [ 1 ] . immediate - addr	649:2:14530:14567	373829	0	True				
ANR	373895	AssignmentExpression	at = op -> operands [ 1 ] . immediate - addr		373829	0		=			
ANR	373896	Identifier	at		373829	0					
ANR	373897	AdditiveExpression	op -> operands [ 1 ] . immediate - addr		373829	1		-			
ANR	373898	MemberAccess	op -> operands [ 1 ] . immediate		373829	0					
ANR	373899	ArrayIndexing	op -> operands [ 1 ]		373829	0					
ANR	373900	PtrMemberAccess	op -> operands		373829	0					
ANR	373901	Identifier	op		373829	0					
ANR	373902	Identifier	operands		373829	1					
ANR	373903	PrimaryExpression	1		373829	1					
ANR	373904	Identifier	immediate		373829	1					
ANR	373905	Identifier	addr		373829	1					
ANR	373906	ExpressionStatement	at /= 4	650:2:14571:14578	373829	1	True				
ANR	373907	AssignmentExpression	at /= 4		373829	0		/=			
ANR	373908	Identifier	at		373829	0					
ANR	373909	PrimaryExpression	4		373829	1					
ANR	373910	ElseStatement	else		373829	0					
ANR	373911	CompoundStatement		14:8:358:358	373829	0					
ANR	373912	ExpressionStatement	"eprintf ( ""Usage: adrp, x0, addr\\n"" )"	652:2:14592:14627	373829	0	True				
ANR	373913	CallExpression	"eprintf ( ""Usage: adrp, x0, addr\\n"" )"		373829	0					
ANR	373914	Callee	eprintf		373829	0					
ANR	373915	Identifier	eprintf		373829	0					
ANR	373916	ArgumentList	"""Usage: adrp, x0, addr\\n"""		373829	1					
ANR	373917	Argument	"""Usage: adrp, x0, addr\\n"""		373829	0					
ANR	373918	PrimaryExpression	"""Usage: adrp, x0, addr\\n"""		373829	0					
ANR	373919	ReturnStatement	return UT32_MAX ;	653:2:14631:14646	373829	1	True				
ANR	373920	Identifier	UT32_MAX		373829	0					
ANR	373921	IdentifierDeclStatement	ut8 b0 = at ;	655:1:14652:14663	373829	8	True				
ANR	373922	IdentifierDecl	b0 = at		373829	0					
ANR	373923	IdentifierDeclType	ut8		373829	0					
ANR	373924	Identifier	b0		373829	1					
ANR	373925	AssignmentExpression	b0 = at		373829	2		=			
ANR	373926	Identifier	at		373829	0					
ANR	373927	Identifier	at		373829	1					
ANR	373928	IdentifierDeclStatement	ut8 b1 = ( at >> 3 ) & 0xff ;	656:1:14666:14691	373829	9	True				
ANR	373929	IdentifierDecl	b1 = ( at >> 3 ) & 0xff		373829	0					
ANR	373930	IdentifierDeclType	ut8		373829	0					
ANR	373931	Identifier	b1		373829	1					
ANR	373932	AssignmentExpression	b1 = ( at >> 3 ) & 0xff		373829	2		=			
ANR	373933	Identifier	b1		373829	0					
ANR	373934	BitAndExpression	( at >> 3 ) & 0xff		373829	1		&			
ANR	373935	ShiftExpression	at >> 3		373829	0		>>			
ANR	373936	Identifier	at		373829	0					
ANR	373937	PrimaryExpression	3		373829	1					
ANR	373938	PrimaryExpression	0xff		373829	1					
ANR	373939	IdentifierDeclStatement	ut8 b2 = ( at >> ( 8 + 7 ) ) & 0xff ;	659:1:14701:14732	373829	10	True				
ANR	373940	IdentifierDecl	b2 = ( at >> ( 8 + 7 ) ) & 0xff		373829	0					
ANR	373941	IdentifierDeclType	ut8		373829	0					
ANR	373942	Identifier	b2		373829	1					
ANR	373943	AssignmentExpression	b2 = ( at >> ( 8 + 7 ) ) & 0xff		373829	2		=			
ANR	373944	Identifier	b2		373829	0					
ANR	373945	BitAndExpression	( at >> ( 8 + 7 ) ) & 0xff		373829	1		&			
ANR	373946	ShiftExpression	at >> ( 8 + 7 )		373829	0		>>			
ANR	373947	Identifier	at		373829	0					
ANR	373948	AdditiveExpression	8 + 7		373829	1		+			
ANR	373949	PrimaryExpression	8		373829	0					
ANR	373950	PrimaryExpression	7		373829	1					
ANR	373951	PrimaryExpression	0xff		373829	1					
ANR	373952	ExpressionStatement	data += b0 << 29	660:1:14735:14751	373829	11	True				
ANR	373953	AssignmentExpression	data += b0 << 29		373829	0		+=			
ANR	373954	Identifier	data		373829	0					
ANR	373955	ShiftExpression	b0 << 29		373829	1		<<			
ANR	373956	Identifier	b0		373829	0					
ANR	373957	PrimaryExpression	29		373829	1					
ANR	373958	ExpressionStatement	data += b1 << 16	661:1:14754:14770	373829	12	True				
ANR	373959	AssignmentExpression	data += b1 << 16		373829	0		+=			
ANR	373960	Identifier	data		373829	0					
ANR	373961	ShiftExpression	b1 << 16		373829	1		<<			
ANR	373962	Identifier	b1		373829	0					
ANR	373963	PrimaryExpression	16		373829	1					
ANR	373964	ExpressionStatement	data += b2 << 24	662:1:14773:14789	373829	13	True				
ANR	373965	AssignmentExpression	data += b2 << 24		373829	0		+=			
ANR	373966	Identifier	data		373829	0					
ANR	373967	ShiftExpression	b2 << 24		373829	1		<<			
ANR	373968	Identifier	b2		373829	0					
ANR	373969	PrimaryExpression	24		373829	1					
ANR	373970	ExpressionStatement	data += b0 << 16	664:1:14799:14815	373829	14	True				
ANR	373971	AssignmentExpression	data += b0 << 16		373829	0		+=			
ANR	373972	Identifier	data		373829	0					
ANR	373973	ShiftExpression	b0 << 16		373829	1		<<			
ANR	373974	Identifier	b0		373829	0					
ANR	373975	PrimaryExpression	16		373829	1					
ANR	373976	ExpressionStatement	data += b1 << 8	665:1:14818:14833	373829	15	True				
ANR	373977	AssignmentExpression	data += b1 << 8		373829	0		+=			
ANR	373978	Identifier	data		373829	0					
ANR	373979	ShiftExpression	b1 << 8		373829	1		<<			
ANR	373980	Identifier	b1		373829	0					
ANR	373981	PrimaryExpression	8		373829	1					
ANR	373982	ReturnStatement	return data ;	666:1:14836:14847	373829	16	True				
ANR	373983	Identifier	data		373829	0					
ANR	373984	ReturnType	static ut32		373829	1					
ANR	373985	Identifier	adrp		373829	2					
ANR	373986	ParameterList	"ArmOp * op , ut64 addr , ut32 k"		373829	3					
ANR	373987	Parameter	ArmOp * op	638:17:14199:14207	373829	0	True				
ANR	373988	ParameterType	ArmOp *		373829	0					
ANR	373989	Identifier	op		373829	1					
ANR	373990	Parameter	ut64 addr	638:28:14210:14218	373829	1	True				
ANR	373991	ParameterType	ut64		373829	0					
ANR	373992	Identifier	addr		373829	1					
ANR	373993	Parameter	ut32 k	638:39:14221:14226	373829	2	True				
ANR	373994	ParameterType	ut32		373829	0					
ANR	373995	Identifier	k		373829	1					
ANR	373996	CFGEntryNode	ENTRY		373829		True				
ANR	373997	CFGExitNode	EXIT		373829		True				
ANR	373998	Symbol	UT32_MAX		373829						
ANR	373999	Symbol	op		373829						
ANR	374000	Symbol	ARM_CONSTANT		373829						
ANR	374001	Symbol	data		373829						
ANR	374002	Symbol	* op		373829						
ANR	374003	Symbol	op -> operands [ 1 ] . immediate		373829						
ANR	374004	Symbol	k		373829						
ANR	374005	Symbol	ARM_GPR		373829						
ANR	374006	Symbol	b0		373829						
ANR	374007	Symbol	* * op		373829						
ANR	374008	Symbol	b1		373829						
ANR	374009	Symbol	b2		373829						
ANR	374010	Symbol	* op -> operands		373829						
ANR	374011	Symbol	at		373829						
ANR	374012	Symbol	op -> operands [ 1 ] . type		373829						
ANR	374013	Symbol	op -> operands [ 0 ] . type		373829						
ANR	374014	Symbol	op -> operands [ 0 ] . reg		373829						
ANR	374015	Symbol	addr		373829						
ANR	374016	Symbol	op -> operands		373829						
ANR	374017	Function	adr	669:0:14852:15277							
ANR	374018	FunctionDef	"adr (ArmOp * op , int addr)"		374017	0					
ANR	374019	CompoundStatement		669:37:14889:15277	374017	0					
ANR	374020	IdentifierDeclStatement	ut32 data = UT32_MAX ;	670:1:14892:14912	374017	0	True				
ANR	374021	IdentifierDecl	data = UT32_MAX		374017	0					
ANR	374022	IdentifierDeclType	ut32		374017	0					
ANR	374023	Identifier	data		374017	1					
ANR	374024	AssignmentExpression	data = UT32_MAX		374017	2		=			
ANR	374025	Identifier	UT32_MAX		374017	0					
ANR	374026	Identifier	UT32_MAX		374017	1					
ANR	374027	Statement	ut64	671:1:14915:14918	374017	1	True				
ANR	374028	Statement	at	671:6:14920:14921	374017	2	True				
ANR	374029	Statement	=	671:9:14923:14923	374017	3	True				
ANR	374030	Statement	0L	671:11:14925:14926	374017	4	True				
ANR	374031	ExpressionStatement	L	671:13:14927:14928	374017	5	True				
ANR	374032	Identifier	L		374017	0					
ANR	374033	IfStatement	if ( op -> operands [ 1 ] . type & ARM_CONSTANT )		374017	6					
ANR	374034	Condition	op -> operands [ 1 ] . type & ARM_CONSTANT	673:5:14936:14970	374017	0	True				
ANR	374035	BitAndExpression	op -> operands [ 1 ] . type & ARM_CONSTANT		374017	0		&			
ANR	374036	MemberAccess	op -> operands [ 1 ] . type		374017	0					
ANR	374037	ArrayIndexing	op -> operands [ 1 ]		374017	0					
ANR	374038	PtrMemberAccess	op -> operands		374017	0					
ANR	374039	Identifier	op		374017	0					
ANR	374040	Identifier	operands		374017	1					
ANR	374041	PrimaryExpression	1		374017	1					
ANR	374042	Identifier	type		374017	1					
ANR	374043	Identifier	ARM_CONSTANT		374017	1					
ANR	374044	CompoundStatement		5:42:83:83	374017	1					
ANR	374045	ExpressionStatement	at = op -> operands [ 1 ] . immediate - addr	675:2:15014:15051	374017	0	True				
ANR	374046	AssignmentExpression	at = op -> operands [ 1 ] . immediate - addr		374017	0		=			
ANR	374047	Identifier	at		374017	0					
ANR	374048	AdditiveExpression	op -> operands [ 1 ] . immediate - addr		374017	1		-			
ANR	374049	MemberAccess	op -> operands [ 1 ] . immediate		374017	0					
ANR	374050	ArrayIndexing	op -> operands [ 1 ]		374017	0					
ANR	374051	PtrMemberAccess	op -> operands		374017	0					
ANR	374052	Identifier	op		374017	0					
ANR	374053	Identifier	operands		374017	1					
ANR	374054	PrimaryExpression	1		374017	1					
ANR	374055	Identifier	immediate		374017	1					
ANR	374056	Identifier	addr		374017	1					
ANR	374057	ExpressionStatement	at /= 4	676:2:15055:15062	374017	1	True				
ANR	374058	AssignmentExpression	at /= 4		374017	0		/=			
ANR	374059	Identifier	at		374017	0					
ANR	374060	PrimaryExpression	4		374017	1					
ANR	374061	ExpressionStatement	data = 0x00000030	678:1:15068:15085	374017	7	True				
ANR	374062	AssignmentExpression	data = 0x00000030		374017	0		=			
ANR	374063	Identifier	data		374017	0					
ANR	374064	PrimaryExpression	0x00000030		374017	1					
ANR	374065	ExpressionStatement	data += 0x01000000 * op -> operands [ 0 ] . reg	679:1:15088:15128	374017	8	True				
ANR	374066	AssignmentExpression	data += 0x01000000 * op -> operands [ 0 ] . reg		374017	0		+=			
ANR	374067	Identifier	data		374017	0					
ANR	374068	MultiplicativeExpression	0x01000000 * op -> operands [ 0 ] . reg		374017	1		*			
ANR	374069	PrimaryExpression	0x01000000		374017	0					
ANR	374070	MemberAccess	op -> operands [ 0 ] . reg		374017	1					
ANR	374071	ArrayIndexing	op -> operands [ 0 ]		374017	0					
ANR	374072	PtrMemberAccess	op -> operands		374017	0					
ANR	374073	Identifier	op		374017	0					
ANR	374074	Identifier	operands		374017	1					
ANR	374075	PrimaryExpression	0		374017	1					
ANR	374076	Identifier	reg		374017	1					
ANR	374077	IdentifierDeclStatement	ut8 b0 = at ;	680:1:15131:15142	374017	9	True				
ANR	374078	IdentifierDecl	b0 = at		374017	0					
ANR	374079	IdentifierDeclType	ut8		374017	0					
ANR	374080	Identifier	b0		374017	1					
ANR	374081	AssignmentExpression	b0 = at		374017	2		=			
ANR	374082	Identifier	at		374017	0					
ANR	374083	Identifier	at		374017	1					
ANR	374084	IdentifierDeclStatement	ut8 b1 = ( at >> 3 ) & 0xff ;	681:1:15145:15170	374017	10	True				
ANR	374085	IdentifierDecl	b1 = ( at >> 3 ) & 0xff		374017	0					
ANR	374086	IdentifierDeclType	ut8		374017	0					
ANR	374087	Identifier	b1		374017	1					
ANR	374088	AssignmentExpression	b1 = ( at >> 3 ) & 0xff		374017	2		=			
ANR	374089	Identifier	b1		374017	0					
ANR	374090	BitAndExpression	( at >> 3 ) & 0xff		374017	1		&			
ANR	374091	ShiftExpression	at >> 3		374017	0		>>			
ANR	374092	Identifier	at		374017	0					
ANR	374093	PrimaryExpression	3		374017	1					
ANR	374094	PrimaryExpression	0xff		374017	1					
ANR	374095	IdentifierDeclStatement	ut8 b2 = ( at >> ( 8 + 7 ) ) & 0xff ;	682:1:15173:15204	374017	11	True				
ANR	374096	IdentifierDecl	b2 = ( at >> ( 8 + 7 ) ) & 0xff		374017	0					
ANR	374097	IdentifierDeclType	ut8		374017	0					
ANR	374098	Identifier	b2		374017	1					
ANR	374099	AssignmentExpression	b2 = ( at >> ( 8 + 7 ) ) & 0xff		374017	2		=			
ANR	374100	Identifier	b2		374017	0					
ANR	374101	BitAndExpression	( at >> ( 8 + 7 ) ) & 0xff		374017	1		&			
ANR	374102	ShiftExpression	at >> ( 8 + 7 )		374017	0		>>			
ANR	374103	Identifier	at		374017	0					
ANR	374104	AdditiveExpression	8 + 7		374017	1		+			
ANR	374105	PrimaryExpression	8		374017	0					
ANR	374106	PrimaryExpression	7		374017	1					
ANR	374107	PrimaryExpression	0xff		374017	1					
ANR	374108	ExpressionStatement	data += b0 << 29	683:1:15207:15223	374017	12	True				
ANR	374109	AssignmentExpression	data += b0 << 29		374017	0		+=			
ANR	374110	Identifier	data		374017	0					
ANR	374111	ShiftExpression	b0 << 29		374017	1		<<			
ANR	374112	Identifier	b0		374017	0					
ANR	374113	PrimaryExpression	29		374017	1					
ANR	374114	ExpressionStatement	data += b1 << 16	684:1:15226:15242	374017	13	True				
ANR	374115	AssignmentExpression	data += b1 << 16		374017	0		+=			
ANR	374116	Identifier	data		374017	0					
ANR	374117	ShiftExpression	b1 << 16		374017	1		<<			
ANR	374118	Identifier	b1		374017	0					
ANR	374119	PrimaryExpression	16		374017	1					
ANR	374120	ExpressionStatement	data += b2 << 24	685:1:15245:15261	374017	14	True				
ANR	374121	AssignmentExpression	data += b2 << 24		374017	0		+=			
ANR	374122	Identifier	data		374017	0					
ANR	374123	ShiftExpression	b2 << 24		374017	1		<<			
ANR	374124	Identifier	b2		374017	0					
ANR	374125	PrimaryExpression	24		374017	1					
ANR	374126	ReturnStatement	return data ;	686:1:15264:15275	374017	15	True				
ANR	374127	Identifier	data		374017	0					
ANR	374128	ReturnType	static ut32		374017	1					
ANR	374129	Identifier	adr		374017	2					
ANR	374130	ParameterList	"ArmOp * op , int addr"		374017	3					
ANR	374131	Parameter	ArmOp * op	669:16:14868:14876	374017	0	True				
ANR	374132	ParameterType	ArmOp *		374017	0					
ANR	374133	Identifier	op		374017	1					
ANR	374134	Parameter	int addr	669:27:14879:14886	374017	1	True				
ANR	374135	ParameterType	int		374017	0					
ANR	374136	Identifier	addr		374017	1					
ANR	374137	CFGEntryNode	ENTRY		374017		True				
ANR	374138	CFGExitNode	EXIT		374017		True				
ANR	374139	Symbol	UT32_MAX		374017						
ANR	374140	Symbol	op		374017						
ANR	374141	Symbol	ARM_CONSTANT		374017						
ANR	374142	Symbol	data		374017						
ANR	374143	Symbol	* op		374017						
ANR	374144	Symbol	op -> operands [ 1 ] . immediate		374017						
ANR	374145	Symbol	b0		374017						
ANR	374146	Symbol	* * op		374017						
ANR	374147	Symbol	b1		374017						
ANR	374148	Symbol	b2		374017						
ANR	374149	Symbol	* op -> operands		374017						
ANR	374150	Symbol	at		374017						
ANR	374151	Symbol	op -> operands [ 1 ] . type		374017						
ANR	374152	Symbol	op -> operands [ 0 ] . reg		374017						
ANR	374153	Symbol	addr		374017						
ANR	374154	Symbol	op -> operands		374017						
ANR	374155	Function	stp	689:0:15280:15771							
ANR	374156	FunctionDef	"stp (ArmOp * op , int k)"		374155	0					
ANR	374157	CompoundStatement		689:34:15314:15771	374155	0					
ANR	374158	IdentifierDeclStatement	ut32 data = UT32_MAX ;	690:1:15317:15337	374155	0	True				
ANR	374159	IdentifierDecl	data = UT32_MAX		374155	0					
ANR	374160	IdentifierDeclType	ut32		374155	0					
ANR	374161	Identifier	data		374155	1					
ANR	374162	AssignmentExpression	data = UT32_MAX		374155	2		=			
ANR	374163	Identifier	UT32_MAX		374155	0					
ANR	374164	Identifier	UT32_MAX		374155	1					
ANR	374165	IfStatement	if ( op -> operands [ 3 ] . immediate & 0x7 )		374155	1					
ANR	374166	Condition	op -> operands [ 3 ] . immediate & 0x7	692:5:15345:15375	374155	0	True				
ANR	374167	BitAndExpression	op -> operands [ 3 ] . immediate & 0x7		374155	0		&			
ANR	374168	MemberAccess	op -> operands [ 3 ] . immediate		374155	0					
ANR	374169	ArrayIndexing	op -> operands [ 3 ]		374155	0					
ANR	374170	PtrMemberAccess	op -> operands		374155	0					
ANR	374171	Identifier	op		374155	0					
ANR	374172	Identifier	operands		374155	1					
ANR	374173	PrimaryExpression	3		374155	1					
ANR	374174	Identifier	immediate		374155	1					
ANR	374175	PrimaryExpression	0x7		374155	1					
ANR	374176	CompoundStatement		4:38:63:63	374155	1					
ANR	374177	ReturnStatement	return data ;	693:2:15382:15393	374155	0	True				
ANR	374178	Identifier	data		374155	0					
ANR	374179	IfStatement	if ( k == 0x000040a9 && ( op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg ) )		374155	2					
ANR	374180	Condition	k == 0x000040a9 && ( op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg )	695:5:15403:15465	374155	0	True				
ANR	374181	AndExpression	k == 0x000040a9 && ( op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg )		374155	0		&&			
ANR	374182	EqualityExpression	k == 0x000040a9		374155	0		==			
ANR	374183	Identifier	k		374155	0					
ANR	374184	PrimaryExpression	0x000040a9		374155	1					
ANR	374185	EqualityExpression	op -> operands [ 0 ] . reg == op -> operands [ 1 ] . reg		374155	1		==			
ANR	374186	MemberAccess	op -> operands [ 0 ] . reg		374155	0					
ANR	374187	ArrayIndexing	op -> operands [ 0 ]		374155	0					
ANR	374188	PtrMemberAccess	op -> operands		374155	0					
ANR	374189	Identifier	op		374155	0					
ANR	374190	Identifier	operands		374155	1					
ANR	374191	PrimaryExpression	0		374155	1					
ANR	374192	Identifier	reg		374155	1					
ANR	374193	MemberAccess	op -> operands [ 1 ] . reg		374155	1					
ANR	374194	ArrayIndexing	op -> operands [ 1 ]		374155	0					
ANR	374195	PtrMemberAccess	op -> operands		374155	0					
ANR	374196	Identifier	op		374155	0					
ANR	374197	Identifier	operands		374155	1					
ANR	374198	PrimaryExpression	1		374155	1					
ANR	374199	Identifier	reg		374155	1					
ANR	374200	CompoundStatement		7:70:153:153	374155	1					
ANR	374201	ReturnStatement	return data ;	696:2:15472:15483	374155	0	True				
ANR	374202	Identifier	data		374155	0					
ANR	374203	ExpressionStatement	data = k	699:1:15490:15498	374155	3	True				
ANR	374204	AssignmentExpression	data = k		374155	0		=			
ANR	374205	Identifier	data		374155	0					
ANR	374206	Identifier	k		374155	1					
ANR	374207	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	700:1:15501:15534	374155	4	True				
ANR	374208	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		374155	0		+=			
ANR	374209	Identifier	data		374155	0					
ANR	374210	ShiftExpression	op -> operands [ 0 ] . reg << 24		374155	1		<<			
ANR	374211	MemberAccess	op -> operands [ 0 ] . reg		374155	0					
ANR	374212	ArrayIndexing	op -> operands [ 0 ]		374155	0					
ANR	374213	PtrMemberAccess	op -> operands		374155	0					
ANR	374214	Identifier	op		374155	0					
ANR	374215	Identifier	operands		374155	1					
ANR	374216	PrimaryExpression	0		374155	1					
ANR	374217	Identifier	reg		374155	1					
ANR	374218	PrimaryExpression	24		374155	1					
ANR	374219	ExpressionStatement	data += op -> operands [ 1 ] . reg << 18	701:1:15537:15570	374155	5	True				
ANR	374220	AssignmentExpression	data += op -> operands [ 1 ] . reg << 18		374155	0		+=			
ANR	374221	Identifier	data		374155	0					
ANR	374222	ShiftExpression	op -> operands [ 1 ] . reg << 18		374155	1		<<			
ANR	374223	MemberAccess	op -> operands [ 1 ] . reg		374155	0					
ANR	374224	ArrayIndexing	op -> operands [ 1 ]		374155	0					
ANR	374225	PtrMemberAccess	op -> operands		374155	0					
ANR	374226	Identifier	op		374155	0					
ANR	374227	Identifier	operands		374155	1					
ANR	374228	PrimaryExpression	1		374155	1					
ANR	374229	Identifier	reg		374155	1					
ANR	374230	PrimaryExpression	18		374155	1					
ANR	374231	ExpressionStatement	data += ( op -> operands [ 2 ] . reg & 0x7 ) << 29	702:1:15573:15614	374155	6	True				
ANR	374232	AssignmentExpression	data += ( op -> operands [ 2 ] . reg & 0x7 ) << 29		374155	0		+=			
ANR	374233	Identifier	data		374155	0					
ANR	374234	ShiftExpression	( op -> operands [ 2 ] . reg & 0x7 ) << 29		374155	1		<<			
ANR	374235	BitAndExpression	op -> operands [ 2 ] . reg & 0x7		374155	0		&			
ANR	374236	MemberAccess	op -> operands [ 2 ] . reg		374155	0					
ANR	374237	ArrayIndexing	op -> operands [ 2 ]		374155	0					
ANR	374238	PtrMemberAccess	op -> operands		374155	0					
ANR	374239	Identifier	op		374155	0					
ANR	374240	Identifier	operands		374155	1					
ANR	374241	PrimaryExpression	2		374155	1					
ANR	374242	Identifier	reg		374155	1					
ANR	374243	PrimaryExpression	0x7		374155	1					
ANR	374244	PrimaryExpression	29		374155	1					
ANR	374245	ExpressionStatement	data += ( op -> operands [ 2 ] . reg >> 3 ) << 16	703:1:15617:15657	374155	7	True				
ANR	374246	AssignmentExpression	data += ( op -> operands [ 2 ] . reg >> 3 ) << 16		374155	0		+=			
ANR	374247	Identifier	data		374155	0					
ANR	374248	ShiftExpression	( op -> operands [ 2 ] . reg >> 3 ) << 16		374155	1		<<			
ANR	374249	ShiftExpression	op -> operands [ 2 ] . reg >> 3		374155	0		>>			
ANR	374250	MemberAccess	op -> operands [ 2 ] . reg		374155	0					
ANR	374251	ArrayIndexing	op -> operands [ 2 ]		374155	0					
ANR	374252	PtrMemberAccess	op -> operands		374155	0					
ANR	374253	Identifier	op		374155	0					
ANR	374254	Identifier	operands		374155	1					
ANR	374255	PrimaryExpression	2		374155	1					
ANR	374256	Identifier	reg		374155	1					
ANR	374257	PrimaryExpression	3		374155	1					
ANR	374258	PrimaryExpression	16		374155	1					
ANR	374259	ExpressionStatement	data += ( op -> operands [ 3 ] . immediate & 0x8 ) << 20	704:1:15660:15707	374155	8	True				
ANR	374260	AssignmentExpression	data += ( op -> operands [ 3 ] . immediate & 0x8 ) << 20		374155	0		+=			
ANR	374261	Identifier	data		374155	0					
ANR	374262	ShiftExpression	( op -> operands [ 3 ] . immediate & 0x8 ) << 20		374155	1		<<			
ANR	374263	BitAndExpression	op -> operands [ 3 ] . immediate & 0x8		374155	0		&			
ANR	374264	MemberAccess	op -> operands [ 3 ] . immediate		374155	0					
ANR	374265	ArrayIndexing	op -> operands [ 3 ]		374155	0					
ANR	374266	PtrMemberAccess	op -> operands		374155	0					
ANR	374267	Identifier	op		374155	0					
ANR	374268	Identifier	operands		374155	1					
ANR	374269	PrimaryExpression	3		374155	1					
ANR	374270	Identifier	immediate		374155	1					
ANR	374271	PrimaryExpression	0x8		374155	1					
ANR	374272	PrimaryExpression	20		374155	1					
ANR	374273	ExpressionStatement	data += ( op -> operands [ 3 ] . immediate >> 4 ) << 8	705:1:15710:15755	374155	9	True				
ANR	374274	AssignmentExpression	data += ( op -> operands [ 3 ] . immediate >> 4 ) << 8		374155	0		+=			
ANR	374275	Identifier	data		374155	0					
ANR	374276	ShiftExpression	( op -> operands [ 3 ] . immediate >> 4 ) << 8		374155	1		<<			
ANR	374277	ShiftExpression	op -> operands [ 3 ] . immediate >> 4		374155	0		>>			
ANR	374278	MemberAccess	op -> operands [ 3 ] . immediate		374155	0					
ANR	374279	ArrayIndexing	op -> operands [ 3 ]		374155	0					
ANR	374280	PtrMemberAccess	op -> operands		374155	0					
ANR	374281	Identifier	op		374155	0					
ANR	374282	Identifier	operands		374155	1					
ANR	374283	PrimaryExpression	3		374155	1					
ANR	374284	Identifier	immediate		374155	1					
ANR	374285	PrimaryExpression	4		374155	1					
ANR	374286	PrimaryExpression	8		374155	1					
ANR	374287	ReturnStatement	return data ;	706:1:15758:15769	374155	10	True				
ANR	374288	Identifier	data		374155	0					
ANR	374289	ReturnType	static ut32		374155	1					
ANR	374290	Identifier	stp		374155	2					
ANR	374291	ParameterList	"ArmOp * op , int k"		374155	3					
ANR	374292	Parameter	ArmOp * op	689:16:15296:15304	374155	0	True				
ANR	374293	ParameterType	ArmOp *		374155	0					
ANR	374294	Identifier	op		374155	1					
ANR	374295	Parameter	int k	689:27:15307:15311	374155	1	True				
ANR	374296	ParameterType	int		374155	0					
ANR	374297	Identifier	k		374155	1					
ANR	374298	CFGEntryNode	ENTRY		374155		True				
ANR	374299	CFGExitNode	EXIT		374155		True				
ANR	374300	Symbol	UT32_MAX		374155						
ANR	374301	Symbol	op -> operands [ 2 ] . reg		374155						
ANR	374302	Symbol	op		374155						
ANR	374303	Symbol	* op -> operands		374155						
ANR	374304	Symbol	data		374155						
ANR	374305	Symbol	* op		374155						
ANR	374306	Symbol	op -> operands [ 1 ] . reg		374155						
ANR	374307	Symbol	op -> operands [ 0 ] . reg		374155						
ANR	374308	Symbol	k		374155						
ANR	374309	Symbol	op -> operands [ 3 ] . immediate		374155						
ANR	374310	Symbol	op -> operands		374155						
ANR	374311	Symbol	* * op		374155						
ANR	374312	Function	exception	709:0:15774:16025							
ANR	374313	FunctionDef	"exception (ArmOp * op , ut32 k)"		374312	0					
ANR	374314	CompoundStatement		709:41:15815:16025	374312	0					
ANR	374315	IdentifierDeclStatement	ut32 data = UT32_MAX ;	710:1:15818:15838	374312	0	True				
ANR	374316	IdentifierDecl	data = UT32_MAX		374312	0					
ANR	374317	IdentifierDeclType	ut32		374312	0					
ANR	374318	Identifier	data		374312	1					
ANR	374319	AssignmentExpression	data = UT32_MAX		374312	2		=			
ANR	374320	Identifier	UT32_MAX		374312	0					
ANR	374321	Identifier	UT32_MAX		374312	1					
ANR	374322	IfStatement	if ( op -> operands [ 0 ] . type == ARM_CONSTANT )		374312	1					
ANR	374323	Condition	op -> operands [ 0 ] . type == ARM_CONSTANT	712:5:15846:15881	374312	0	True				
ANR	374324	EqualityExpression	op -> operands [ 0 ] . type == ARM_CONSTANT		374312	0		==			
ANR	374325	MemberAccess	op -> operands [ 0 ] . type		374312	0					
ANR	374326	ArrayIndexing	op -> operands [ 0 ]		374312	0					
ANR	374327	PtrMemberAccess	op -> operands		374312	0					
ANR	374328	Identifier	op		374312	0					
ANR	374329	Identifier	operands		374312	1					
ANR	374330	PrimaryExpression	0		374312	1					
ANR	374331	Identifier	type		374312	1					
ANR	374332	Identifier	ARM_CONSTANT		374312	1					
ANR	374333	CompoundStatement		5:2:72:105	374312	1					
ANR	374334	IdentifierDeclStatement	int n = op -> operands [ 0 ] . immediate ;	713:2:15888:15921	374312	0	True				
ANR	374335	IdentifierDecl	n = op -> operands [ 0 ] . immediate		374312	0					
ANR	374336	IdentifierDeclType	int		374312	0					
ANR	374337	Identifier	n		374312	1					
ANR	374338	AssignmentExpression	n = op -> operands [ 0 ] . immediate		374312	2		=			
ANR	374339	Identifier	n		374312	0					
ANR	374340	MemberAccess	op -> operands [ 0 ] . immediate		374312	1					
ANR	374341	ArrayIndexing	op -> operands [ 0 ]		374312	0					
ANR	374342	PtrMemberAccess	op -> operands		374312	0					
ANR	374343	Identifier	op		374312	0					
ANR	374344	Identifier	operands		374312	1					
ANR	374345	PrimaryExpression	0		374312	1					
ANR	374346	Identifier	immediate		374312	1					
ANR	374347	ExpressionStatement	data = k	714:2:15925:15933	374312	1	True				
ANR	374348	AssignmentExpression	data = k		374312	0		=			
ANR	374349	Identifier	data		374312	0					
ANR	374350	Identifier	k		374312	1					
ANR	374351	ExpressionStatement	data += ( ( ( n / 8 ) & 0xff ) << 16 )	715:2:15937:15969	374312	2	True				
ANR	374352	AssignmentExpression	data += ( ( ( n / 8 ) & 0xff ) << 16 )		374312	0		+=			
ANR	374353	Identifier	data		374312	0					
ANR	374354	ShiftExpression	( ( n / 8 ) & 0xff ) << 16		374312	1		<<			
ANR	374355	BitAndExpression	( n / 8 ) & 0xff		374312	0		&			
ANR	374356	MultiplicativeExpression	n / 8		374312	0		/			
ANR	374357	Identifier	n		374312	0					
ANR	374358	PrimaryExpression	8		374312	1					
ANR	374359	PrimaryExpression	0xff		374312	1					
ANR	374360	PrimaryExpression	16		374312	1					
ANR	374361	ExpressionStatement	data += n << 29	716:2:15973:15988	374312	3	True				
ANR	374362	AssignmentExpression	data += n << 29		374312	0		+=			
ANR	374363	Identifier	data		374312	0					
ANR	374364	ShiftExpression	n << 29		374312	1		<<			
ANR	374365	Identifier	n		374312	0					
ANR	374366	PrimaryExpression	29		374312	1					
ANR	374367	ReturnStatement	return data ;	718:1:16012:16023	374312	2	True				
ANR	374368	Identifier	data		374312	0					
ANR	374369	ReturnType	static ut32		374312	1					
ANR	374370	Identifier	exception		374312	2					
ANR	374371	ParameterList	"ArmOp * op , ut32 k"		374312	3					
ANR	374372	Parameter	ArmOp * op	709:22:15796:15804	374312	0	True				
ANR	374373	ParameterType	ArmOp *		374312	0					
ANR	374374	Identifier	op		374312	1					
ANR	374375	Parameter	ut32 k	709:33:15807:15812	374312	1	True				
ANR	374376	ParameterType	ut32		374312	0					
ANR	374377	Identifier	k		374312	1					
ANR	374378	CFGEntryNode	ENTRY		374312		True				
ANR	374379	CFGExitNode	EXIT		374312		True				
ANR	374380	Symbol	UT32_MAX		374312						
ANR	374381	Symbol	op		374312						
ANR	374382	Symbol	ARM_CONSTANT		374312						
ANR	374383	Symbol	* op -> operands		374312						
ANR	374384	Symbol	data		374312						
ANR	374385	Symbol	* op		374312						
ANR	374386	Symbol	op -> operands [ 0 ] . type		374312						
ANR	374387	Symbol	k		374312						
ANR	374388	Symbol	op -> operands		374312						
ANR	374389	Symbol	op -> operands [ 0 ] . immediate		374312						
ANR	374390	Symbol	n		374312						
ANR	374391	Symbol	* * op		374312						
ANR	374392	Function	arithmetic	721:0:16028:16628							
ANR	374393	FunctionDef	"arithmetic (ArmOp * op , int k)"		374392	0					
ANR	374394	CompoundStatement		721:42:16070:16628	374392	0					
ANR	374395	IdentifierDeclStatement	ut32 data = UT32_MAX ;	722:1:16073:16093	374392	0	True				
ANR	374396	IdentifierDecl	data = UT32_MAX		374392	0					
ANR	374397	IdentifierDeclType	ut32		374392	0					
ANR	374398	Identifier	data		374392	1					
ANR	374399	AssignmentExpression	data = UT32_MAX		374392	2		=			
ANR	374400	Identifier	UT32_MAX		374392	0					
ANR	374401	Identifier	UT32_MAX		374392	1					
ANR	374402	IfStatement	if ( op -> operands_count < 3 )		374392	1					
ANR	374403	Condition	op -> operands_count < 3	723:5:16100:16121	374392	0	True				
ANR	374404	RelationalExpression	op -> operands_count < 3		374392	0		<			
ANR	374405	PtrMemberAccess	op -> operands_count		374392	0					
ANR	374406	Identifier	op		374392	0					
ANR	374407	Identifier	operands_count		374392	1					
ANR	374408	PrimaryExpression	3		374392	1					
ANR	374409	CompoundStatement		3:29:53:53	374392	1					
ANR	374410	ReturnStatement	return data ;	724:2:16128:16139	374392	0	True				
ANR	374411	Identifier	data		374392	0					
ANR	374412	IfStatement	if ( ! ( op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR ) )		374392	2					
ANR	374413	Condition	! ( op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR )	727:5:16150:16223	374392	0	True				
ANR	374414	UnaryOperationExpression	! ( op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR )		374392	0					
ANR	374415	UnaryOperator	!		374392	0					
ANR	374416	AndExpression	op -> operands [ 0 ] . type & ARM_GPR && op -> operands [ 1 ] . type & ARM_GPR		374392	1		&&			
ANR	374417	BitAndExpression	op -> operands [ 0 ] . type & ARM_GPR		374392	0		&			
ANR	374418	MemberAccess	op -> operands [ 0 ] . type		374392	0					
ANR	374419	ArrayIndexing	op -> operands [ 0 ]		374392	0					
ANR	374420	PtrMemberAccess	op -> operands		374392	0					
ANR	374421	Identifier	op		374392	0					
ANR	374422	Identifier	operands		374392	1					
ANR	374423	PrimaryExpression	0		374392	1					
ANR	374424	Identifier	type		374392	1					
ANR	374425	Identifier	ARM_GPR		374392	1					
ANR	374426	BitAndExpression	op -> operands [ 1 ] . type & ARM_GPR		374392	1		&			
ANR	374427	MemberAccess	op -> operands [ 1 ] . type		374392	0					
ANR	374428	ArrayIndexing	op -> operands [ 1 ]		374392	0					
ANR	374429	PtrMemberAccess	op -> operands		374392	0					
ANR	374430	Identifier	op		374392	0					
ANR	374431	Identifier	operands		374392	1					
ANR	374432	PrimaryExpression	1		374392	1					
ANR	374433	Identifier	type		374392	1					
ANR	374434	Identifier	ARM_GPR		374392	1					
ANR	374435	CompoundStatement		8:40:155:155	374392	1					
ANR	374436	ReturnStatement	return data ;	729:2:16230:16241	374392	0	True				
ANR	374437	Identifier	data		374392	0					
ANR	374438	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		374392	3					
ANR	374439	Condition	op -> operands [ 2 ] . type & ARM_GPR	731:5:16251:16280	374392	0	True				
ANR	374440	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		374392	0		&			
ANR	374441	MemberAccess	op -> operands [ 2 ] . type		374392	0					
ANR	374442	ArrayIndexing	op -> operands [ 2 ]		374392	0					
ANR	374443	PtrMemberAccess	op -> operands		374392	0					
ANR	374444	Identifier	op		374392	0					
ANR	374445	Identifier	operands		374392	1					
ANR	374446	PrimaryExpression	2		374392	1					
ANR	374447	Identifier	type		374392	1					
ANR	374448	Identifier	ARM_GPR		374392	1					
ANR	374449	CompoundStatement		11:37:212:212	374392	1					
ANR	374450	ExpressionStatement	k -= 6	732:2:16287:16293	374392	0	True				
ANR	374451	AssignmentExpression	k -= 6		374392	0		-=			
ANR	374452	Identifier	k		374392	0					
ANR	374453	PrimaryExpression	6		374392	1					
ANR	374454	ExpressionStatement	data = k	735:1:16300:16308	374392	4	True				
ANR	374455	AssignmentExpression	data = k		374392	0		=			
ANR	374456	Identifier	data		374392	0					
ANR	374457	Identifier	k		374392	1					
ANR	374458	ExpressionStatement	data += op -> operands [ 0 ] . reg << 24	736:1:16311:16344	374392	5	True				
ANR	374459	AssignmentExpression	data += op -> operands [ 0 ] . reg << 24		374392	0		+=			
ANR	374460	Identifier	data		374392	0					
ANR	374461	ShiftExpression	op -> operands [ 0 ] . reg << 24		374392	1		<<			
ANR	374462	MemberAccess	op -> operands [ 0 ] . reg		374392	0					
ANR	374463	ArrayIndexing	op -> operands [ 0 ]		374392	0					
ANR	374464	PtrMemberAccess	op -> operands		374392	0					
ANR	374465	Identifier	op		374392	0					
ANR	374466	Identifier	operands		374392	1					
ANR	374467	PrimaryExpression	0		374392	1					
ANR	374468	Identifier	reg		374392	1					
ANR	374469	PrimaryExpression	24		374392	1					
ANR	374470	ExpressionStatement	data += ( op -> operands [ 1 ] . reg & 7 ) << ( 24 + 5 )	737:1:16347:16392	374392	6	True				
ANR	374471	AssignmentExpression	data += ( op -> operands [ 1 ] . reg & 7 ) << ( 24 + 5 )		374392	0		+=			
ANR	374472	Identifier	data		374392	0					
ANR	374473	ShiftExpression	( op -> operands [ 1 ] . reg & 7 ) << ( 24 + 5 )		374392	1		<<			
ANR	374474	BitAndExpression	op -> operands [ 1 ] . reg & 7		374392	0		&			
ANR	374475	MemberAccess	op -> operands [ 1 ] . reg		374392	0					
ANR	374476	ArrayIndexing	op -> operands [ 1 ]		374392	0					
ANR	374477	PtrMemberAccess	op -> operands		374392	0					
ANR	374478	Identifier	op		374392	0					
ANR	374479	Identifier	operands		374392	1					
ANR	374480	PrimaryExpression	1		374392	1					
ANR	374481	Identifier	reg		374392	1					
ANR	374482	PrimaryExpression	7		374392	1					
ANR	374483	AdditiveExpression	24 + 5		374392	1		+			
ANR	374484	PrimaryExpression	24		374392	0					
ANR	374485	PrimaryExpression	5		374392	1					
ANR	374486	ExpressionStatement	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16	738:1:16395:16435	374392	7	True				
ANR	374487	AssignmentExpression	data += ( op -> operands [ 1 ] . reg >> 3 ) << 16		374392	0		+=			
ANR	374488	Identifier	data		374392	0					
ANR	374489	ShiftExpression	( op -> operands [ 1 ] . reg >> 3 ) << 16		374392	1		<<			
ANR	374490	ShiftExpression	op -> operands [ 1 ] . reg >> 3		374392	0		>>			
ANR	374491	MemberAccess	op -> operands [ 1 ] . reg		374392	0					
ANR	374492	ArrayIndexing	op -> operands [ 1 ]		374392	0					
ANR	374493	PtrMemberAccess	op -> operands		374392	0					
ANR	374494	Identifier	op		374392	0					
ANR	374495	Identifier	operands		374392	1					
ANR	374496	PrimaryExpression	1		374392	1					
ANR	374497	Identifier	reg		374392	1					
ANR	374498	PrimaryExpression	3		374392	1					
ANR	374499	PrimaryExpression	16		374392	1					
ANR	374500	IfStatement	if ( op -> operands [ 2 ] . type & ARM_GPR )		374392	8					
ANR	374501	Condition	op -> operands [ 2 ] . type & ARM_GPR	739:5:16442:16471	374392	0	True				
ANR	374502	BitAndExpression	op -> operands [ 2 ] . type & ARM_GPR		374392	0		&			
ANR	374503	MemberAccess	op -> operands [ 2 ] . type		374392	0					
ANR	374504	ArrayIndexing	op -> operands [ 2 ]		374392	0					
ANR	374505	PtrMemberAccess	op -> operands		374392	0					
ANR	374506	Identifier	op		374392	0					
ANR	374507	Identifier	operands		374392	1					
ANR	374508	PrimaryExpression	2		374392	1					
ANR	374509	Identifier	type		374392	1					
ANR	374510	Identifier	ARM_GPR		374392	1					
ANR	374511	CompoundStatement		19:37:403:403	374392	1					
ANR	374512	ExpressionStatement	data += op -> operands [ 2 ] . reg << 8	740:2:16478:16510	374392	0	True				
ANR	374513	AssignmentExpression	data += op -> operands [ 2 ] . reg << 8		374392	0		+=			
ANR	374514	Identifier	data		374392	0					
ANR	374515	ShiftExpression	op -> operands [ 2 ] . reg << 8		374392	1		<<			
ANR	374516	MemberAccess	op -> operands [ 2 ] . reg		374392	0					
ANR	374517	ArrayIndexing	op -> operands [ 2 ]		374392	0					
ANR	374518	PtrMemberAccess	op -> operands		374392	0					
ANR	374519	Identifier	op		374392	0					
ANR	374520	Identifier	operands		374392	1					
ANR	374521	PrimaryExpression	2		374392	1					
ANR	374522	Identifier	reg		374392	1					
ANR	374523	PrimaryExpression	8		374392	1					
ANR	374524	ElseStatement	else		374392	0					
ANR	374525	CompoundStatement		21:8:449:449	374392	0					
ANR	374526	ExpressionStatement	data += ( op -> operands [ 2 ] . reg & 0x3f ) << 18	742:2:16524:16566	374392	0	True				
ANR	374527	AssignmentExpression	data += ( op -> operands [ 2 ] . reg & 0x3f ) << 18		374392	0		+=			
ANR	374528	Identifier	data		374392	0					
ANR	374529	ShiftExpression	( op -> operands [ 2 ] . reg & 0x3f ) << 18		374392	1		<<			
ANR	374530	BitAndExpression	op -> operands [ 2 ] . reg & 0x3f		374392	0		&			
ANR	374531	MemberAccess	op -> operands [ 2 ] . reg		374392	0					
ANR	374532	ArrayIndexing	op -> operands [ 2 ]		374392	0					
ANR	374533	PtrMemberAccess	op -> operands		374392	0					
ANR	374534	Identifier	op		374392	0					
ANR	374535	Identifier	operands		374392	1					
ANR	374536	PrimaryExpression	2		374392	1					
ANR	374537	Identifier	reg		374392	1					
ANR	374538	PrimaryExpression	0x3f		374392	1					
ANR	374539	PrimaryExpression	18		374392	1					
ANR	374540	ExpressionStatement	data += ( op -> operands [ 2 ] . reg >> 6 ) << 8	743:2:16570:16609	374392	1	True				
ANR	374541	AssignmentExpression	data += ( op -> operands [ 2 ] . reg >> 6 ) << 8		374392	0		+=			
ANR	374542	Identifier	data		374392	0					
ANR	374543	ShiftExpression	( op -> operands [ 2 ] . reg >> 6 ) << 8		374392	1		<<			
ANR	374544	ShiftExpression	op -> operands [ 2 ] . reg >> 6		374392	0		>>			
ANR	374545	MemberAccess	op -> operands [ 2 ] . reg		374392	0					
ANR	374546	ArrayIndexing	op -> operands [ 2 ]		374392	0					
ANR	374547	PtrMemberAccess	op -> operands		374392	0					
ANR	374548	Identifier	op		374392	0					
ANR	374549	Identifier	operands		374392	1					
ANR	374550	PrimaryExpression	2		374392	1					
ANR	374551	Identifier	reg		374392	1					
ANR	374552	PrimaryExpression	6		374392	1					
ANR	374553	PrimaryExpression	8		374392	1					
ANR	374554	ReturnStatement	return data ;	745:1:16615:16626	374392	9	True				
ANR	374555	Identifier	data		374392	0					
ANR	374556	ReturnType	static ut32		374392	1					
ANR	374557	Identifier	arithmetic		374392	2					
ANR	374558	ParameterList	"ArmOp * op , int k"		374392	3					
ANR	374559	Parameter	ArmOp * op	721:24:16052:16060	374392	0	True				
ANR	374560	ParameterType	ArmOp *		374392	0					
ANR	374561	Identifier	op		374392	1					
ANR	374562	Parameter	int k	721:35:16063:16067	374392	1	True				
ANR	374563	ParameterType	int		374392	0					
ANR	374564	Identifier	k		374392	1					
ANR	374565	CFGEntryNode	ENTRY		374392		True				
ANR	374566	CFGExitNode	EXIT		374392		True				
ANR	374567	Symbol	UT32_MAX		374392						
ANR	374568	Symbol	op -> operands [ 2 ] . reg		374392						
ANR	374569	Symbol	op		374392						
ANR	374570	Symbol	data		374392						
ANR	374571	Symbol	* op		374392						
ANR	374572	Symbol	op -> operands [ 1 ] . reg		374392						
ANR	374573	Symbol	k		374392						
ANR	374574	Symbol	ARM_GPR		374392						
ANR	374575	Symbol	op -> operands [ 2 ] . type		374392						
ANR	374576	Symbol	* * op		374392						
ANR	374577	Symbol	* op -> operands		374392						
ANR	374578	Symbol	op -> operands [ 1 ] . type		374392						
ANR	374579	Symbol	op -> operands_count		374392						
ANR	374580	Symbol	op -> operands [ 0 ] . type		374392						
ANR	374581	Symbol	op -> operands [ 0 ] . reg		374392						
ANR	374582	Symbol	op -> operands		374392						
ANR	374583	Function	neg	748:0:16631:16855							
ANR	374584	FunctionDef	neg (ArmOp * op)		374583	0					
ANR	374585	CompoundStatement		748:27:16658:16855	374583	0					
ANR	374586	IfStatement	if ( op -> operands_count < 2 )		374583	0					
ANR	374587	Condition	op -> operands_count < 2	749:5:16665:16686	374583	0	True				
ANR	374588	RelationalExpression	op -> operands_count < 2		374583	0		<			
ANR	374589	PtrMemberAccess	op -> operands_count		374583	0					
ANR	374590	Identifier	op		374583	0					
ANR	374591	Identifier	operands_count		374583	1					
ANR	374592	PrimaryExpression	2		374583	1					
ANR	374593	CompoundStatement		2:29:30:30	374583	1					
ANR	374594	ReturnStatement	return - 1 ;	750:2:16693:16702	374583	0	True				
ANR	374595	UnaryOperationExpression	- 1		374583	0					
ANR	374596	UnaryOperator	-		374583	0					
ANR	374597	PrimaryExpression	1		374583	1					
ANR	374598	ExpressionStatement	op -> operands_count ++	752:1:16708:16728	374583	1	True				
ANR	374599	PostIncDecOperationExpression	op -> operands_count ++		374583	0					
ANR	374600	PtrMemberAccess	op -> operands_count		374583	0					
ANR	374601	Identifier	op		374583	0					
ANR	374602	Identifier	operands_count		374583	1					
ANR	374603	IncDec	++		374583	1					
ANR	374604	ExpressionStatement	op -> operands [ 2 ] = op -> operands [ 1 ]	753:1:16731:16764	374583	2	True				
ANR	374605	AssignmentExpression	op -> operands [ 2 ] = op -> operands [ 1 ]		374583	0		=			
ANR	374606	ArrayIndexing	op -> operands [ 2 ]		374583	0					
ANR	374607	PtrMemberAccess	op -> operands		374583	0					
ANR	374608	Identifier	op		374583	0					
ANR	374609	Identifier	operands		374583	1					
ANR	374610	PrimaryExpression	2		374583	1					
ANR	374611	ArrayIndexing	op -> operands [ 1 ]		374583	1					
ANR	374612	PtrMemberAccess	op -> operands		374583	0					
ANR	374613	Identifier	op		374583	0					
ANR	374614	Identifier	operands		374583	1					
ANR	374615	PrimaryExpression	1		374583	1					
ANR	374616	ExpressionStatement	op -> operands [ 1 ] . reg = 31	754:1:16767:16791	374583	3	True				
ANR	374617	AssignmentExpression	op -> operands [ 1 ] . reg = 31		374583	0		=			
ANR	374618	MemberAccess	op -> operands [ 1 ] . reg		374583	0					
ANR	374619	ArrayIndexing	op -> operands [ 1 ]		374583	0					
ANR	374620	PtrMemberAccess	op -> operands		374583	0					
ANR	374621	Identifier	op		374583	0					
ANR	374622	Identifier	operands		374583	1					
ANR	374623	PrimaryExpression	1		374583	1					
ANR	374624	Identifier	reg		374583	1					
ANR	374625	PrimaryExpression	31		374583	1					
ANR	374626	ReturnStatement	"return arithmetic ( op , 0xd1 ) ;"	756:1:16802:16830	374583	4	True				
ANR	374627	CallExpression	"arithmetic ( op , 0xd1 )"		374583	0					
ANR	374628	Callee	arithmetic		374583	0					
ANR	374629	Identifier	arithmetic		374583	0					
ANR	374630	ArgumentList	op		374583	1					
ANR	374631	Argument	op		374583	0					
ANR	374632	Identifier	op		374583	0					
ANR	374633	Argument	0xd1		374583	1					
ANR	374634	PrimaryExpression	0xd1		374583	0					
ANR	374635	ReturnType	static ut32		374583	1					
ANR	374636	Identifier	neg		374583	2					
ANR	374637	ParameterList	ArmOp * op		374583	3					
ANR	374638	Parameter	ArmOp * op	748:16:16647:16655	374583	0	True				
ANR	374639	ParameterType	ArmOp *		374583	0					
ANR	374640	Identifier	op		374583	1					
ANR	374641	CFGEntryNode	ENTRY		374583		True				
ANR	374642	CFGExitNode	EXIT		374583		True				
ANR	374643	Symbol	op		374583						
ANR	374644	Symbol	* op -> operands		374583						
ANR	374645	Symbol	* op		374583						
ANR	374646	Symbol	op -> operands [ 1 ] . reg		374583						
ANR	374647	Symbol	op -> operands_count		374583						
ANR	374648	Symbol	arithmetic		374583						
ANR	374649	Symbol	op -> operands		374583						
ANR	374650	Symbol	* * op		374583						
ANR	374651	Function	parseOperands	759:0:16858:21609							
ANR	374652	FunctionDef	"parseOperands (char * str , ArmOp * op)"		374651	0					
ANR	374653	CompoundStatement		759:48:16906:21609	374651	0					
ANR	374654	IdentifierDeclStatement	char * t = strdup ( str ) ;	760:1:16909:16931	374651	0	True				
ANR	374655	IdentifierDecl	* t = strdup ( str )		374651	0					
ANR	374656	IdentifierDeclType	char *		374651	0					
ANR	374657	Identifier	t		374651	1					
ANR	374658	AssignmentExpression	* t = strdup ( str )		374651	2		=			
ANR	374659	Identifier	t		374651	0					
ANR	374660	CallExpression	strdup ( str )		374651	1					
ANR	374661	Callee	strdup		374651	0					
ANR	374662	Identifier	strdup		374651	0					
ANR	374663	ArgumentList	str		374651	1					
ANR	374664	Argument	str		374651	0					
ANR	374665	Identifier	str		374651	0					
ANR	374666	IdentifierDeclStatement	int operand = 0 ;	761:1:16934:16949	374651	1	True				
ANR	374667	IdentifierDecl	operand = 0		374651	0					
ANR	374668	IdentifierDeclType	int		374651	0					
ANR	374669	Identifier	operand		374651	1					
ANR	374670	AssignmentExpression	operand = 0		374651	2		=			
ANR	374671	Identifier	operand		374651	0					
ANR	374672	PrimaryExpression	0		374651	1					
ANR	374673	IdentifierDeclStatement	char * token = t ;	762:1:16952:16967	374651	2	True				
ANR	374674	IdentifierDecl	* token = t		374651	0					
ANR	374675	IdentifierDeclType	char *		374651	0					
ANR	374676	Identifier	token		374651	1					
ANR	374677	AssignmentExpression	* token = t		374651	2		=			
ANR	374678	Identifier	t		374651	0					
ANR	374679	Identifier	t		374651	1					
ANR	374680	IdentifierDeclStatement	char * x ;	763:1:16970:16977	374651	3	True				
ANR	374681	IdentifierDecl	* x		374651	0					
ANR	374682	IdentifierDeclType	char *		374651	0					
ANR	374683	Identifier	x		374651	1					
ANR	374684	IdentifierDeclStatement	int imm_count = 0 ;	764:1:16980:16997	374651	4	True				
ANR	374685	IdentifierDecl	imm_count = 0		374651	0					
ANR	374686	IdentifierDeclType	int		374651	0					
ANR	374687	Identifier	imm_count		374651	1					
ANR	374688	AssignmentExpression	imm_count = 0		374651	2		=			
ANR	374689	Identifier	imm_count		374651	0					
ANR	374690	PrimaryExpression	0		374651	1					
ANR	374691	IdentifierDeclStatement	int mem_opt = 0 ;	765:1:17000:17015	374651	5	True				
ANR	374692	IdentifierDecl	mem_opt = 0		374651	0					
ANR	374693	IdentifierDeclType	int		374651	0					
ANR	374694	Identifier	mem_opt		374651	1					
ANR	374695	AssignmentExpression	mem_opt = 0		374651	2		=			
ANR	374696	Identifier	mem_opt		374651	0					
ANR	374697	PrimaryExpression	0		374651	1					
ANR	374698	IdentifierDeclStatement	int msr_op_index = 0 ;	766:1:17018:17038	374651	6	True				
ANR	374699	IdentifierDecl	msr_op_index = 0		374651	0					
ANR	374700	IdentifierDeclType	int		374651	0					
ANR	374701	Identifier	msr_op_index		374651	1					
ANR	374702	AssignmentExpression	msr_op_index = 0		374651	2		=			
ANR	374703	Identifier	msr_op_index		374651	0					
ANR	374704	PrimaryExpression	0		374651	1					
ANR	374705	IfStatement	if ( ! token )		374651	7					
ANR	374706	Condition	! token	767:5:17045:17050	374651	0	True				
ANR	374707	UnaryOperationExpression	! token		374651	0					
ANR	374708	UnaryOperator	!		374651	0					
ANR	374709	Identifier	token		374651	1					
ANR	374710	CompoundStatement		9:13:146:146	374651	1					
ANR	374711	ReturnStatement	return false ;	768:2:17057:17069	374651	0	True				
ANR	374712	Identifier	false		374651	0					
ANR	374713	WhileStatement	while ( token )		374651	8					
ANR	374714	Condition	token	771:8:17083:17087	374651	0	True				
ANR	374715	Identifier	token		374651	0					
ANR	374716	CompoundStatement		14:2:187:219	374651	1					
ANR	374717	IdentifierDeclStatement	"char * next = strchr ( token , ',' ) ;"	772:2:17094:17126	374651	0	True				
ANR	374718	IdentifierDecl	"* next = strchr ( token , ',' )"		374651	0					
ANR	374719	IdentifierDeclType	char *		374651	0					
ANR	374720	Identifier	next		374651	1					
ANR	374721	AssignmentExpression	"* next = strchr ( token , ',' )"		374651	2		=			
ANR	374722	Identifier	next		374651	0					
ANR	374723	CallExpression	"strchr ( token , ',' )"		374651	1					
ANR	374724	Callee	strchr		374651	0					
ANR	374725	Identifier	strchr		374651	0					
ANR	374726	ArgumentList	token		374651	1					
ANR	374727	Argument	token		374651	0					
ANR	374728	Identifier	token		374651	0					
ANR	374729	Argument	"','"		374651	1					
ANR	374730	PrimaryExpression	"','"		374651	0					
ANR	374731	IfStatement	if ( next )		374651	1					
ANR	374732	Condition	next	773:6:17134:17137	374651	0	True				
ANR	374733	Identifier	next		374651	0					
ANR	374734	CompoundStatement		15:12:233:233	374651	1					
ANR	374735	ExpressionStatement	* next ++ = '\\0'	776:3:17231:17245	374651	0	True				
ANR	374736	AssignmentExpression	* next ++ = '\\0'		374651	0		=			
ANR	374737	UnaryOperationExpression	* next ++		374651	0					
ANR	374738	UnaryOperator	*		374651	0					
ANR	374739	PostIncDecOperationExpression	next ++		374651	1					
ANR	374740	Identifier	next		374651	0					
ANR	374741	IncDec	++		374651	1					
ANR	374742	PrimaryExpression	'\\0'		374651	1					
ANR	374743	WhileStatement	while ( token [ 0 ] == ' ' )		374651	2					
ANR	374744	Condition	token [ 0 ] == ' '	778:9:17260:17274	374651	0	True				
ANR	374745	EqualityExpression	token [ 0 ] == ' '		374651	0		==			
ANR	374746	ArrayIndexing	token [ 0 ]		374651	0					
ANR	374747	Identifier	token		374651	0					
ANR	374748	PrimaryExpression	0		374651	1					
ANR	374749	PrimaryExpression	' '		374651	1					
ANR	374750	CompoundStatement		20:26:370:370	374651	1					
ANR	374751	ExpressionStatement	token ++	779:3:17282:17289	374651	0	True				
ANR	374752	PostIncDecOperationExpression	token ++		374651	0					
ANR	374753	Identifier	token		374651	0					
ANR	374754	IncDec	++		374651	1					
ANR	374755	IfStatement	if ( operand >= MAX_OPERANDS )		374651	3					
ANR	374756	Condition	operand >= MAX_OPERANDS	781:6:17301:17323	374651	0	True				
ANR	374757	RelationalExpression	operand >= MAX_OPERANDS		374651	0		>=			
ANR	374758	Identifier	operand		374651	0					
ANR	374759	Identifier	MAX_OPERANDS		374651	1					
ANR	374760	CompoundStatement		23:31:419:419	374651	1					
ANR	374761	ExpressionStatement	"eprintf ( ""Too many operands\\n"" )"	782:3:17331:17362	374651	0	True				
ANR	374762	CallExpression	"eprintf ( ""Too many operands\\n"" )"		374651	0					
ANR	374763	Callee	eprintf		374651	0					
ANR	374764	Identifier	eprintf		374651	0					
ANR	374765	ArgumentList	"""Too many operands\\n"""		374651	1					
ANR	374766	Argument	"""Too many operands\\n"""		374651	0					
ANR	374767	PrimaryExpression	"""Too many operands\\n"""		374651	0					
ANR	374768	ReturnStatement	return false ;	783:3:17367:17379	374651	1	True				
ANR	374769	Identifier	false		374651	0					
ANR	374770	ExpressionStatement	op -> operands [ operand ] . type = ARM_NOTYPE	785:2:17387:17426	374651	4	True				
ANR	374771	AssignmentExpression	op -> operands [ operand ] . type = ARM_NOTYPE		374651	0		=			
ANR	374772	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	374773	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374774	PtrMemberAccess	op -> operands		374651	0					
ANR	374775	Identifier	op		374651	0					
ANR	374776	Identifier	operands		374651	1					
ANR	374777	Identifier	operand		374651	1					
ANR	374778	Identifier	type		374651	1					
ANR	374779	Identifier	ARM_NOTYPE		374651	1					
ANR	374780	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_UNDEFINED	786:2:17430:17476	374651	5	True				
ANR	374781	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_UNDEFINED		374651	0		=			
ANR	374782	MemberAccess	op -> operands [ operand ] . reg_type		374651	0					
ANR	374783	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374784	PtrMemberAccess	op -> operands		374651	0					
ANR	374785	Identifier	op		374651	0					
ANR	374786	Identifier	operands		374651	1					
ANR	374787	Identifier	operand		374651	1					
ANR	374788	Identifier	reg_type		374651	1					
ANR	374789	Identifier	ARM_UNDEFINED		374651	1					
ANR	374790	ExpressionStatement	op -> operands [ operand ] . shift = ARM_NO_SHIFT	787:2:17480:17522	374651	6	True				
ANR	374791	AssignmentExpression	op -> operands [ operand ] . shift = ARM_NO_SHIFT		374651	0		=			
ANR	374792	MemberAccess	op -> operands [ operand ] . shift		374651	0					
ANR	374793	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374794	PtrMemberAccess	op -> operands		374651	0					
ANR	374795	Identifier	op		374651	0					
ANR	374796	Identifier	operands		374651	1					
ANR	374797	Identifier	operand		374651	1					
ANR	374798	Identifier	shift		374651	1					
ANR	374799	Identifier	ARM_NO_SHIFT		374651	1					
ANR	374800	IfStatement	"if ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 1 )"		374651	7					
ANR	374801	Condition	"strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 1"	790:6:17567:17615	374651	0	True				
ANR	374802	AndExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 1"		374651	0		&&			
ANR	374803	EqualityExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0"		374651	0		==			
ANR	374804	CallExpression	"strcmp ( op -> mnemonic , ""msr"" )"		374651	0					
ANR	374805	Callee	strcmp		374651	0					
ANR	374806	Identifier	strcmp		374651	0					
ANR	374807	ArgumentList	op -> mnemonic		374651	1					
ANR	374808	Argument	op -> mnemonic		374651	0					
ANR	374809	PtrMemberAccess	op -> mnemonic		374651	0					
ANR	374810	Identifier	op		374651	0					
ANR	374811	Identifier	mnemonic		374651	1					
ANR	374812	Argument	"""msr"""		374651	1					
ANR	374813	PrimaryExpression	"""msr"""		374651	0					
ANR	374814	PrimaryExpression	0		374651	1					
ANR	374815	EqualityExpression	operand == 1		374651	1		==			
ANR	374816	Identifier	operand		374651	0					
ANR	374817	PrimaryExpression	1		374651	1					
ANR	374818	CompoundStatement		32:57:711:711	374651	1					
ANR	374819	IfStatement	if ( token [ 0 ] == '#' || ( token [ 0 ] >= '0' && token [ 0 ] <= '9' ) )		374651	0					
ANR	374820	Condition	token [ 0 ] == '#' || ( token [ 0 ] >= '0' && token [ 0 ] <= '9' )	793:8:17664:17718	374651	0	True				
ANR	374821	OrExpression	token [ 0 ] == '#' || ( token [ 0 ] >= '0' && token [ 0 ] <= '9' )		374651	0		||			
ANR	374822	EqualityExpression	token [ 0 ] == '#'		374651	0		==			
ANR	374823	ArrayIndexing	token [ 0 ]		374651	0					
ANR	374824	Identifier	token		374651	0					
ANR	374825	PrimaryExpression	0		374651	1					
ANR	374826	PrimaryExpression	'#'		374651	1					
ANR	374827	AndExpression	token [ 0 ] >= '0' && token [ 0 ] <= '9'		374651	1		&&			
ANR	374828	RelationalExpression	token [ 0 ] >= '0'		374651	0		>=			
ANR	374829	ArrayIndexing	token [ 0 ]		374651	0					
ANR	374830	Identifier	token		374651	0					
ANR	374831	PrimaryExpression	0		374651	1					
ANR	374832	PrimaryExpression	'0'		374651	1					
ANR	374833	RelationalExpression	token [ 0 ] <= '9'		374651	1		<=			
ANR	374834	ArrayIndexing	token [ 0 ]		374651	0					
ANR	374835	Identifier	token		374651	0					
ANR	374836	PrimaryExpression	0		374651	1					
ANR	374837	PrimaryExpression	'9'		374651	1					
ANR	374838	CompoundStatement		35:65:814:814	374651	1					
ANR	374839	ExpressionStatement	op -> operands [ operand ] . sp_val = 0xfffe	795:4:17758:17795	374651	0	True				
ANR	374840	AssignmentExpression	op -> operands [ operand ] . sp_val = 0xfffe		374651	0		=			
ANR	374841	MemberAccess	op -> operands [ operand ] . sp_val		374651	0					
ANR	374842	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374843	PtrMemberAccess	op -> operands		374651	0					
ANR	374844	Identifier	op		374651	0					
ANR	374845	Identifier	operands		374651	1					
ANR	374846	Identifier	operand		374651	1					
ANR	374847	Identifier	sp_val		374651	1					
ANR	374848	PrimaryExpression	0xfffe		374651	1					
ANR	374849	ExpressionStatement	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token [ 0 ] == '#' ? token + 1 : token )"	796:4:17832:17912	374651	1	True				
ANR	374850	AssignmentExpression	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token [ 0 ] == '#' ? token + 1 : token )"		374651	0		=			
ANR	374851	MemberAccess	op -> operands [ operand ] . immediate		374651	0					
ANR	374852	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374853	PtrMemberAccess	op -> operands		374651	0					
ANR	374854	Identifier	op		374651	0					
ANR	374855	Identifier	operands		374651	1					
ANR	374856	Identifier	operand		374651	1					
ANR	374857	Identifier	immediate		374651	1					
ANR	374858	CallExpression	"r_num_math ( NULL , token [ 0 ] == '#' ? token + 1 : token )"		374651	1					
ANR	374859	Callee	r_num_math		374651	0					
ANR	374860	Identifier	r_num_math		374651	0					
ANR	374861	ArgumentList	NULL		374651	1					
ANR	374862	Argument	NULL		374651	0					
ANR	374863	Identifier	NULL		374651	0					
ANR	374864	Argument	token [ 0 ] == '#' ? token + 1 : token		374651	1					
ANR	374865	ConditionalExpression	token [ 0 ] == '#' ? token + 1 : token		374651	0					
ANR	374866	Condition	token [ 0 ] == '#'		374651	0					
ANR	374867	EqualityExpression	token [ 0 ] == '#'		374651	0		==			
ANR	374868	ArrayIndexing	token [ 0 ]		374651	0					
ANR	374869	Identifier	token		374651	0					
ANR	374870	PrimaryExpression	0		374651	1					
ANR	374871	PrimaryExpression	'#'		374651	1					
ANR	374872	AdditiveExpression	token + 1		374651	1		+			
ANR	374873	Identifier	token		374651	0					
ANR	374874	PrimaryExpression	1		374651	1					
ANR	374875	Identifier	token		374651	2					
ANR	374876	ExpressionStatement	operand ++	797:4:17918:17928	374651	2	True				
ANR	374877	PostIncDecOperationExpression	operand ++		374651	0					
ANR	374878	Identifier	operand		374651	0					
ANR	374879	IncDec	++		374651	1					
ANR	374880	ExpressionStatement	token = next	798:4:17934:17946	374651	3	True				
ANR	374881	AssignmentExpression	token = next		374651	0		=			
ANR	374882	Identifier	token		374651	0					
ANR	374883	Identifier	next		374651	1					
ANR	374884	ContinueStatement	continue ;	799:4:17952:17960	374651	4	True				
ANR	374885	IfStatement	"if ( ( strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1 ) || ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0 ) )"		374651	8					
ANR	374886	Condition	"( strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1 ) || ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0 )"	804:6:18005:18110	374651	0	True				
ANR	374887	OrExpression	"( strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1 ) || ( strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0 )"		374651	0		||			
ANR	374888	AndExpression	"strcmp ( op -> mnemonic , ""mrs"" ) == 0 && operand == 1"		374651	0		&&			
ANR	374889	EqualityExpression	"strcmp ( op -> mnemonic , ""mrs"" ) == 0"		374651	0		==			
ANR	374890	CallExpression	"strcmp ( op -> mnemonic , ""mrs"" )"		374651	0					
ANR	374891	Callee	strcmp		374651	0					
ANR	374892	Identifier	strcmp		374651	0					
ANR	374893	ArgumentList	op -> mnemonic		374651	1					
ANR	374894	Argument	op -> mnemonic		374651	0					
ANR	374895	PtrMemberAccess	op -> mnemonic		374651	0					
ANR	374896	Identifier	op		374651	0					
ANR	374897	Identifier	mnemonic		374651	1					
ANR	374898	Argument	"""mrs"""		374651	1					
ANR	374899	PrimaryExpression	"""mrs"""		374651	0					
ANR	374900	PrimaryExpression	0		374651	1					
ANR	374901	EqualityExpression	operand == 1		374651	1		==			
ANR	374902	Identifier	operand		374651	0					
ANR	374903	PrimaryExpression	1		374651	1					
ANR	374904	AndExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0 && operand == 0"		374651	1		&&			
ANR	374905	EqualityExpression	"strcmp ( op -> mnemonic , ""msr"" ) == 0"		374651	0		==			
ANR	374906	CallExpression	"strcmp ( op -> mnemonic , ""msr"" )"		374651	0					
ANR	374907	Callee	strcmp		374651	0					
ANR	374908	Identifier	strcmp		374651	0					
ANR	374909	ArgumentList	op -> mnemonic		374651	1					
ANR	374910	Argument	op -> mnemonic		374651	0					
ANR	374911	PtrMemberAccess	op -> mnemonic		374651	0					
ANR	374912	Identifier	op		374651	0					
ANR	374913	Identifier	mnemonic		374651	1					
ANR	374914	Argument	"""msr"""		374651	1					
ANR	374915	PrimaryExpression	"""msr"""		374651	0					
ANR	374916	PrimaryExpression	0		374651	1					
ANR	374917	EqualityExpression	operand == 0		374651	1		==			
ANR	374918	Identifier	operand		374651	0					
ANR	374919	PrimaryExpression	0		374651	1					
ANR	374920	CompoundStatement		46:114:1206:1206	374651	1					
ANR	374921	ForStatement	for ( msr_op_index = 0 ; msr_const [ msr_op_index ] . name ; msr_op_index ++ )		374651	0					
ANR	374922	ForInit	msr_op_index = 0 ;	805:7:18122:18138	374651	0	True				
ANR	374923	AssignmentExpression	msr_op_index = 0		374651	0		=			
ANR	374924	Identifier	msr_op_index		374651	0					
ANR	374925	PrimaryExpression	0		374651	1					
ANR	374926	Condition	msr_const [ msr_op_index ] . name	805:25:18140:18167	374651	1	True				
ANR	374927	MemberAccess	msr_const [ msr_op_index ] . name		374651	0					
ANR	374928	ArrayIndexing	msr_const [ msr_op_index ]		374651	0					
ANR	374929	Identifier	msr_const		374651	0					
ANR	374930	Identifier	msr_op_index		374651	1					
ANR	374931	Identifier	name		374651	1					
ANR	374932	PostIncDecOperationExpression	msr_op_index ++	805:55:18170:18183	374651	2	True				
ANR	374933	Identifier	msr_op_index		374651	0					
ANR	374934	IncDec	++		374651	1					
ANR	374935	CompoundStatement		47:71:1279:1279	374651	3					
ANR	374936	IfStatement	"if ( strcasecmp ( token , msr_const [ msr_op_index ] . name ) == 0 )"		374651	0					
ANR	374937	Condition	"strcasecmp ( token , msr_const [ msr_op_index ] . name ) == 0"	806:8:18196:18248	374651	0	True				
ANR	374938	EqualityExpression	"strcasecmp ( token , msr_const [ msr_op_index ] . name ) == 0"		374651	0		==			
ANR	374939	CallExpression	"strcasecmp ( token , msr_const [ msr_op_index ] . name )"		374651	0					
ANR	374940	Callee	strcasecmp		374651	0					
ANR	374941	Identifier	strcasecmp		374651	0					
ANR	374942	ArgumentList	token		374651	1					
ANR	374943	Argument	token		374651	0					
ANR	374944	Identifier	token		374651	0					
ANR	374945	Argument	msr_const [ msr_op_index ] . name		374651	1					
ANR	374946	MemberAccess	msr_const [ msr_op_index ] . name		374651	0					
ANR	374947	ArrayIndexing	msr_const [ msr_op_index ]		374651	0					
ANR	374948	Identifier	msr_const		374651	0					
ANR	374949	Identifier	msr_op_index		374651	1					
ANR	374950	Identifier	name		374651	1					
ANR	374951	PrimaryExpression	0		374651	1					
ANR	374952	CompoundStatement		48:63:1344:1344	374651	1					
ANR	374953	ExpressionStatement	op -> operands_count ++	807:5:18258:18279	374651	0	True				
ANR	374954	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	374955	PtrMemberAccess	op -> operands_count		374651	0					
ANR	374956	Identifier	op		374651	0					
ANR	374957	Identifier	operands_count		374651	1					
ANR	374958	IncDec	++		374651	1					
ANR	374959	ExpressionStatement	op -> operands [ operand ] . type = ARM_CONSTANT	808:5:18286:18327	374651	1	True				
ANR	374960	AssignmentExpression	op -> operands [ operand ] . type = ARM_CONSTANT		374651	0		=			
ANR	374961	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	374962	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374963	PtrMemberAccess	op -> operands		374651	0					
ANR	374964	Identifier	op		374651	0					
ANR	374965	Identifier	operands		374651	1					
ANR	374966	Identifier	operand		374651	1					
ANR	374967	Identifier	type		374651	1					
ANR	374968	Identifier	ARM_CONSTANT		374651	1					
ANR	374969	ExpressionStatement	op -> operands [ operand ] . immediate = msr_const [ msr_op_index ] . val	809:5:18334:18395	374651	2	True				
ANR	374970	AssignmentExpression	op -> operands [ operand ] . immediate = msr_const [ msr_op_index ] . val		374651	0		=			
ANR	374971	MemberAccess	op -> operands [ operand ] . immediate		374651	0					
ANR	374972	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	374973	PtrMemberAccess	op -> operands		374651	0					
ANR	374974	Identifier	op		374651	0					
ANR	374975	Identifier	operands		374651	1					
ANR	374976	Identifier	operand		374651	1					
ANR	374977	Identifier	immediate		374651	1					
ANR	374978	MemberAccess	msr_const [ msr_op_index ] . val		374651	1					
ANR	374979	ArrayIndexing	msr_const [ msr_op_index ]		374651	0					
ANR	374980	Identifier	msr_const		374651	0					
ANR	374981	Identifier	msr_op_index		374651	1					
ANR	374982	Identifier	val		374651	1					
ANR	374983	ExpressionStatement	imm_count ++	810:5:18402:18413	374651	3	True				
ANR	374984	PostIncDecOperationExpression	imm_count ++		374651	0					
ANR	374985	Identifier	imm_count		374651	0					
ANR	374986	IncDec	++		374651	1					
ANR	374987	BreakStatement	break ;	811:5:18420:18425	374651	4	True				
ANR	374988	IfStatement	if ( msr_const [ msr_op_index ] . name )		374651	1					
ANR	374989	Condition	msr_const [ msr_op_index ] . name	814:7:18445:18472	374651	0	True				
ANR	374990	MemberAccess	msr_const [ msr_op_index ] . name		374651	0					
ANR	374991	ArrayIndexing	msr_const [ msr_op_index ]		374651	0					
ANR	374992	Identifier	msr_const		374651	0					
ANR	374993	Identifier	msr_op_index		374651	1					
ANR	374994	Identifier	name		374651	1					
ANR	374995	CompoundStatement		56:37:1568:1568	374651	1					
ANR	374996	ExpressionStatement	operand ++	815:4:18481:18491	374651	0	True				
ANR	374997	PostIncDecOperationExpression	operand ++		374651	0					
ANR	374998	Identifier	operand		374651	0					
ANR	374999	IncDec	++		374651	1					
ANR	375000	ExpressionStatement	token = next	816:4:18497:18509	374651	1	True				
ANR	375001	AssignmentExpression	token = next		374651	0		=			
ANR	375002	Identifier	token		374651	0					
ANR	375003	Identifier	next		374651	1					
ANR	375004	ContinueStatement	continue ;	817:4:18515:18523	374651	2	True				
ANR	375005	WhileStatement	while ( token [ 0 ] == ' ' || token [ 0 ] == '[' || token [ 0 ] == ']' )		374651	9					
ANR	375006	Condition	token [ 0 ] == ' ' || token [ 0 ] == '[' || token [ 0 ] == ']'	821:9:18544:18596	374651	0	True				
ANR	375007	OrExpression	token [ 0 ] == ' ' || token [ 0 ] == '[' || token [ 0 ] == ']'		374651	0		||			
ANR	375008	EqualityExpression	token [ 0 ] == ' '		374651	0		==			
ANR	375009	ArrayIndexing	token [ 0 ]		374651	0					
ANR	375010	Identifier	token		374651	0					
ANR	375011	PrimaryExpression	0		374651	1					
ANR	375012	PrimaryExpression	' '		374651	1					
ANR	375013	OrExpression	token [ 0 ] == '[' || token [ 0 ] == ']'		374651	1		||			
ANR	375014	EqualityExpression	token [ 0 ] == '['		374651	0		==			
ANR	375015	ArrayIndexing	token [ 0 ]		374651	0					
ANR	375016	Identifier	token		374651	0					
ANR	375017	PrimaryExpression	0		374651	1					
ANR	375018	PrimaryExpression	'['		374651	1					
ANR	375019	EqualityExpression	token [ 0 ] == ']'		374651	1		==			
ANR	375020	ArrayIndexing	token [ 0 ]		374651	0					
ANR	375021	Identifier	token		374651	0					
ANR	375022	PrimaryExpression	0		374651	1					
ANR	375023	PrimaryExpression	']'		374651	1					
ANR	375024	CompoundStatement		63:64:1692:1692	374651	1					
ANR	375025	ExpressionStatement	token ++	822:3:18604:18612	374651	0	True				
ANR	375026	PostIncDecOperationExpression	token ++		374651	0					
ANR	375027	Identifier	token		374651	0					
ANR	375028	IncDec	++		374651	1					
ANR	375029	IfStatement	"if ( ! strncmp ( token , ""lsl"" , 3 ) )"		374651	10					
ANR	375030	Condition	"! strncmp ( token , ""lsl"" , 3 )"	825:6:18625:18650	374651	0	True				
ANR	375031	UnaryOperationExpression	"! strncmp ( token , ""lsl"" , 3 )"		374651	0					
ANR	375032	UnaryOperator	!		374651	0					
ANR	375033	CallExpression	"strncmp ( token , ""lsl"" , 3 )"		374651	1					
ANR	375034	Callee	strncmp		374651	0					
ANR	375035	Identifier	strncmp		374651	0					
ANR	375036	ArgumentList	token		374651	1					
ANR	375037	Argument	token		374651	0					
ANR	375038	Identifier	token		374651	0					
ANR	375039	Argument	"""lsl"""		374651	1					
ANR	375040	PrimaryExpression	"""lsl"""		374651	0					
ANR	375041	Argument	3		374651	2					
ANR	375042	PrimaryExpression	3		374651	0					
ANR	375043	CompoundStatement		67:34:1746:1746	374651	1					
ANR	375044	ExpressionStatement	op -> operands [ operand ] . shift = ARM_LSL	826:3:18658:18695	374651	0	True				
ANR	375045	AssignmentExpression	op -> operands [ operand ] . shift = ARM_LSL		374651	0		=			
ANR	375046	MemberAccess	op -> operands [ operand ] . shift		374651	0					
ANR	375047	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375048	PtrMemberAccess	op -> operands		374651	0					
ANR	375049	Identifier	op		374651	0					
ANR	375050	Identifier	operands		374651	1					
ANR	375051	Identifier	operand		374651	1					
ANR	375052	Identifier	shift		374651	1					
ANR	375053	Identifier	ARM_LSL		374651	1					
ANR	375054	ElseStatement	else		374651	0					
ANR	375055	IfStatement	"if ( ! strncmp ( token , ""lsr"" , 3 ) )"		374651	0					
ANR	375056	Condition	"! strncmp ( token , ""lsr"" , 3 )"	827:13:18710:18735	374651	0	True				
ANR	375057	UnaryOperationExpression	"! strncmp ( token , ""lsr"" , 3 )"		374651	0					
ANR	375058	UnaryOperator	!		374651	0					
ANR	375059	CallExpression	"strncmp ( token , ""lsr"" , 3 )"		374651	1					
ANR	375060	Callee	strncmp		374651	0					
ANR	375061	Identifier	strncmp		374651	0					
ANR	375062	ArgumentList	token		374651	1					
ANR	375063	Argument	token		374651	0					
ANR	375064	Identifier	token		374651	0					
ANR	375065	Argument	"""lsr"""		374651	1					
ANR	375066	PrimaryExpression	"""lsr"""		374651	0					
ANR	375067	Argument	3		374651	2					
ANR	375068	PrimaryExpression	3		374651	0					
ANR	375069	CompoundStatement		69:41:1831:1831	374651	1					
ANR	375070	ExpressionStatement	op -> operands [ operand ] . shift = ARM_LSR	828:3:18743:18780	374651	0	True				
ANR	375071	AssignmentExpression	op -> operands [ operand ] . shift = ARM_LSR		374651	0		=			
ANR	375072	MemberAccess	op -> operands [ operand ] . shift		374651	0					
ANR	375073	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375074	PtrMemberAccess	op -> operands		374651	0					
ANR	375075	Identifier	op		374651	0					
ANR	375076	Identifier	operands		374651	1					
ANR	375077	Identifier	operand		374651	1					
ANR	375078	Identifier	shift		374651	1					
ANR	375079	Identifier	ARM_LSR		374651	1					
ANR	375080	ElseStatement	else		374651	0					
ANR	375081	IfStatement	"if ( ! strncmp ( token , ""asr"" , 3 ) )"		374651	0					
ANR	375082	Condition	"! strncmp ( token , ""asr"" , 3 )"	829:13:18795:18820	374651	0	True				
ANR	375083	UnaryOperationExpression	"! strncmp ( token , ""asr"" , 3 )"		374651	0					
ANR	375084	UnaryOperator	!		374651	0					
ANR	375085	CallExpression	"strncmp ( token , ""asr"" , 3 )"		374651	1					
ANR	375086	Callee	strncmp		374651	0					
ANR	375087	Identifier	strncmp		374651	0					
ANR	375088	ArgumentList	token		374651	1					
ANR	375089	Argument	token		374651	0					
ANR	375090	Identifier	token		374651	0					
ANR	375091	Argument	"""asr"""		374651	1					
ANR	375092	PrimaryExpression	"""asr"""		374651	0					
ANR	375093	Argument	3		374651	2					
ANR	375094	PrimaryExpression	3		374651	0					
ANR	375095	CompoundStatement		71:41:1916:1916	374651	1					
ANR	375096	ExpressionStatement	op -> operands [ operand ] . shift = ARM_ASR	830:3:18828:18865	374651	0	True				
ANR	375097	AssignmentExpression	op -> operands [ operand ] . shift = ARM_ASR		374651	0		=			
ANR	375098	MemberAccess	op -> operands [ operand ] . shift		374651	0					
ANR	375099	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375100	PtrMemberAccess	op -> operands		374651	0					
ANR	375101	Identifier	op		374651	0					
ANR	375102	Identifier	operands		374651	1					
ANR	375103	Identifier	operand		374651	1					
ANR	375104	Identifier	shift		374651	1					
ANR	375105	Identifier	ARM_ASR		374651	1					
ANR	375106	IfStatement	if ( strlen ( token ) > 4 && op -> operands [ operand ] . shift != ARM_NO_SHIFT )		374651	11					
ANR	375107	Condition	strlen ( token ) > 4 && op -> operands [ operand ] . shift != ARM_NO_SHIFT	832:6:18877:18941	374651	0	True				
ANR	375108	AndExpression	strlen ( token ) > 4 && op -> operands [ operand ] . shift != ARM_NO_SHIFT		374651	0		&&			
ANR	375109	RelationalExpression	strlen ( token ) > 4		374651	0		>			
ANR	375110	CallExpression	strlen ( token )		374651	0					
ANR	375111	Callee	strlen		374651	0					
ANR	375112	Identifier	strlen		374651	0					
ANR	375113	ArgumentList	token		374651	1					
ANR	375114	Argument	token		374651	0					
ANR	375115	Identifier	token		374651	0					
ANR	375116	PrimaryExpression	4		374651	1					
ANR	375117	EqualityExpression	op -> operands [ operand ] . shift != ARM_NO_SHIFT		374651	1		!=			
ANR	375118	MemberAccess	op -> operands [ operand ] . shift		374651	0					
ANR	375119	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375120	PtrMemberAccess	op -> operands		374651	0					
ANR	375121	Identifier	op		374651	0					
ANR	375122	Identifier	operands		374651	1					
ANR	375123	Identifier	operand		374651	1					
ANR	375124	Identifier	shift		374651	1					
ANR	375125	Identifier	ARM_NO_SHIFT		374651	1					
ANR	375126	CompoundStatement		74:73:2037:2037	374651	1					
ANR	375127	ExpressionStatement	op -> operands_count ++	833:3:18949:18970	374651	0	True				
ANR	375128	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375129	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375130	Identifier	op		374651	0					
ANR	375131	Identifier	operands_count		374651	1					
ANR	375132	IncDec	++		374651	1					
ANR	375133	ExpressionStatement	"op -> operands [ operand ] . shift_amount = r_num_math ( NULL , token + 4 )"	834:3:18975:19040	374651	1	True				
ANR	375134	AssignmentExpression	"op -> operands [ operand ] . shift_amount = r_num_math ( NULL , token + 4 )"		374651	0		=			
ANR	375135	MemberAccess	op -> operands [ operand ] . shift_amount		374651	0					
ANR	375136	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375137	PtrMemberAccess	op -> operands		374651	0					
ANR	375138	Identifier	op		374651	0					
ANR	375139	Identifier	operands		374651	1					
ANR	375140	Identifier	operand		374651	1					
ANR	375141	Identifier	shift_amount		374651	1					
ANR	375142	CallExpression	"r_num_math ( NULL , token + 4 )"		374651	1					
ANR	375143	Callee	r_num_math		374651	0					
ANR	375144	Identifier	r_num_math		374651	0					
ANR	375145	ArgumentList	NULL		374651	1					
ANR	375146	Argument	NULL		374651	0					
ANR	375147	Identifier	NULL		374651	0					
ANR	375148	Argument	token + 4		374651	1					
ANR	375149	AdditiveExpression	token + 4		374651	0		+			
ANR	375150	Identifier	token		374651	0					
ANR	375151	PrimaryExpression	4		374651	1					
ANR	375152	IfStatement	if ( op -> operands [ operand ] . shift_amount > 63 )		374651	2					
ANR	375153	Condition	op -> operands [ operand ] . shift_amount > 63	835:7:19049:19087	374651	0	True				
ANR	375154	RelationalExpression	op -> operands [ operand ] . shift_amount > 63		374651	0		>			
ANR	375155	MemberAccess	op -> operands [ operand ] . shift_amount		374651	0					
ANR	375156	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375157	PtrMemberAccess	op -> operands		374651	0					
ANR	375158	Identifier	op		374651	0					
ANR	375159	Identifier	operands		374651	1					
ANR	375160	Identifier	operand		374651	1					
ANR	375161	Identifier	shift_amount		374651	1					
ANR	375162	PrimaryExpression	63		374651	1					
ANR	375163	CompoundStatement		77:48:2183:2183	374651	1					
ANR	375164	ExpressionStatement	free ( t )	836:4:19096:19104	374651	0	True				
ANR	375165	CallExpression	free ( t )		374651	0					
ANR	375166	Callee	free		374651	0					
ANR	375167	Identifier	free		374651	0					
ANR	375168	ArgumentList	t		374651	1					
ANR	375169	Argument	t		374651	0					
ANR	375170	Identifier	t		374651	0					
ANR	375171	ReturnStatement	return false ;	837:4:19110:19122	374651	1	True				
ANR	375172	Identifier	false		374651	0					
ANR	375173	ExpressionStatement	operand ++	839:3:19132:19142	374651	3	True				
ANR	375174	PostIncDecOperationExpression	operand ++		374651	0					
ANR	375175	Identifier	operand		374651	0					
ANR	375176	IncDec	++		374651	1					
ANR	375177	ExpressionStatement	token = next	840:3:19147:19159	374651	4	True				
ANR	375178	AssignmentExpression	token = next		374651	0		=			
ANR	375179	Identifier	token		374651	0					
ANR	375180	Identifier	next		374651	1					
ANR	375181	ContinueStatement	continue ;	841:3:19164:19172	374651	5	True				
ANR	375182	SwitchStatement	switch ( token [ 0 ] )		374651	12					
ANR	375183	Condition	token [ 0 ]	844:10:19189:19196	374651	0	True				
ANR	375184	ArrayIndexing	token [ 0 ]		374651	0					
ANR	375185	Identifier	token		374651	0					
ANR	375186	PrimaryExpression	0		374651	1					
ANR	375187	CompoundStatement		86:20:2292:2292	374651	1					
ANR	375188	Label	case 'x' :	845:2:19203:19211	374651	0	True				
ANR	375189	ExpressionStatement	"x = strchr ( token , ',' )"	846:3:19216:19239	374651	1	True				
ANR	375190	AssignmentExpression	"x = strchr ( token , ',' )"		374651	0		=			
ANR	375191	Identifier	x		374651	0					
ANR	375192	CallExpression	"strchr ( token , ',' )"		374651	1					
ANR	375193	Callee	strchr		374651	0					
ANR	375194	Identifier	strchr		374651	0					
ANR	375195	ArgumentList	token		374651	1					
ANR	375196	Argument	token		374651	0					
ANR	375197	Identifier	token		374651	0					
ANR	375198	Argument	"','"		374651	1					
ANR	375199	PrimaryExpression	"','"		374651	0					
ANR	375200	IfStatement	if ( x )		374651	2					
ANR	375201	Condition	x	847:7:19248:19248	374651	0	True				
ANR	375202	Identifier	x		374651	0					
ANR	375203	CompoundStatement		89:10:2344:2344	374651	1					
ANR	375204	ExpressionStatement	x [ 0 ] = '\\0'	848:4:19257:19268	374651	0	True				
ANR	375205	AssignmentExpression	x [ 0 ] = '\\0'		374651	0		=			
ANR	375206	ArrayIndexing	x [ 0 ]		374651	0					
ANR	375207	Identifier	x		374651	0					
ANR	375208	PrimaryExpression	0		374651	1					
ANR	375209	PrimaryExpression	'\\0'		374651	1					
ANR	375210	ExpressionStatement	op -> operands_count ++	850:3:19278:19299	374651	3	True				
ANR	375211	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375212	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375213	Identifier	op		374651	0					
ANR	375214	Identifier	operands_count		374651	1					
ANR	375215	IncDec	++		374651	1					
ANR	375216	ExpressionStatement	op -> operands [ operand ] . type = ARM_GPR	851:3:19304:19340	374651	4	True				
ANR	375217	AssignmentExpression	op -> operands [ operand ] . type = ARM_GPR		374651	0		=			
ANR	375218	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375219	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375220	PtrMemberAccess	op -> operands		374651	0					
ANR	375221	Identifier	op		374651	0					
ANR	375222	Identifier	operands		374651	1					
ANR	375223	Identifier	operand		374651	1					
ANR	375224	Identifier	type		374651	1					
ANR	375225	Identifier	ARM_GPR		374651	1					
ANR	375226	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_REG64	852:3:19345:19387	374651	5	True				
ANR	375227	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_REG64		374651	0		=			
ANR	375228	MemberAccess	op -> operands [ operand ] . reg_type		374651	0					
ANR	375229	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375230	PtrMemberAccess	op -> operands		374651	0					
ANR	375231	Identifier	op		374651	0					
ANR	375232	Identifier	operands		374651	1					
ANR	375233	Identifier	operand		374651	1					
ANR	375234	Identifier	reg_type		374651	1					
ANR	375235	Identifier	ARM_REG64		374651	1					
ANR	375236	IfStatement	"if ( ! strncmp ( token + 1 , ""zr"" , 2 ) )"		374651	6					
ANR	375237	Condition	"! strncmp ( token + 1 , ""zr"" , 2 )"	854:7:19397:19424	374651	0	True				
ANR	375238	UnaryOperationExpression	"! strncmp ( token + 1 , ""zr"" , 2 )"		374651	0					
ANR	375239	UnaryOperator	!		374651	0					
ANR	375240	CallExpression	"strncmp ( token + 1 , ""zr"" , 2 )"		374651	1					
ANR	375241	Callee	strncmp		374651	0					
ANR	375242	Identifier	strncmp		374651	0					
ANR	375243	ArgumentList	token + 1		374651	1					
ANR	375244	Argument	token + 1		374651	0					
ANR	375245	AdditiveExpression	token + 1		374651	0		+			
ANR	375246	Identifier	token		374651	0					
ANR	375247	PrimaryExpression	1		374651	1					
ANR	375248	Argument	"""zr"""		374651	1					
ANR	375249	PrimaryExpression	"""zr"""		374651	0					
ANR	375250	Argument	2		374651	2					
ANR	375251	PrimaryExpression	2		374651	0					
ANR	375252	CompoundStatement		96:37:2520:2520	374651	1					
ANR	375253	ExpressionStatement	op -> operands [ operand ] . reg = 31	856:4:19444:19474	374651	0	True				
ANR	375254	AssignmentExpression	op -> operands [ operand ] . reg = 31		374651	0		=			
ANR	375255	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375256	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375257	PtrMemberAccess	op -> operands		374651	0					
ANR	375258	Identifier	op		374651	0					
ANR	375259	Identifier	operands		374651	1					
ANR	375260	Identifier	operand		374651	1					
ANR	375261	Identifier	reg		374651	1					
ANR	375262	PrimaryExpression	31		374651	1					
ANR	375263	ElseStatement	else		374651	0					
ANR	375264	CompoundStatement		99:10:2579:2579	374651	0					
ANR	375265	ExpressionStatement	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"	858:4:19492:19548	374651	0	True				
ANR	375266	AssignmentExpression	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"		374651	0		=			
ANR	375267	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375268	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375269	PtrMemberAccess	op -> operands		374651	0					
ANR	375270	Identifier	op		374651	0					
ANR	375271	Identifier	operands		374651	1					
ANR	375272	Identifier	operand		374651	1					
ANR	375273	Identifier	reg		374651	1					
ANR	375274	CallExpression	"r_num_math ( NULL , token + 1 )"		374651	1					
ANR	375275	Callee	r_num_math		374651	0					
ANR	375276	Identifier	r_num_math		374651	0					
ANR	375277	ArgumentList	NULL		374651	1					
ANR	375278	Argument	NULL		374651	0					
ANR	375279	Identifier	NULL		374651	0					
ANR	375280	Argument	token + 1		374651	1					
ANR	375281	AdditiveExpression	token + 1		374651	0		+			
ANR	375282	Identifier	token		374651	0					
ANR	375283	PrimaryExpression	1		374651	1					
ANR	375284	IfStatement	if ( op -> operands [ operand ] . reg > 31 )		374651	7					
ANR	375285	Condition	op -> operands [ operand ] . reg > 31	861:7:19563:19592	374651	0	True				
ANR	375286	RelationalExpression	op -> operands [ operand ] . reg > 31		374651	0		>			
ANR	375287	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375288	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375289	PtrMemberAccess	op -> operands		374651	0					
ANR	375290	Identifier	op		374651	0					
ANR	375291	Identifier	operands		374651	1					
ANR	375292	Identifier	operand		374651	1					
ANR	375293	Identifier	reg		374651	1					
ANR	375294	PrimaryExpression	31		374651	1					
ANR	375295	CompoundStatement		103:39:2688:2688	374651	1					
ANR	375296	ExpressionStatement	free ( t )	862:4:19601:19609	374651	0	True				
ANR	375297	CallExpression	free ( t )		374651	0					
ANR	375298	Callee	free		374651	0					
ANR	375299	Identifier	free		374651	0					
ANR	375300	ArgumentList	t		374651	1					
ANR	375301	Argument	t		374651	0					
ANR	375302	Identifier	t		374651	0					
ANR	375303	ReturnStatement	return false ;	863:4:19615:19627	374651	1	True				
ANR	375304	Identifier	false		374651	0					
ANR	375305	BreakStatement	break ;	865:3:19637:19642	374651	8	True				
ANR	375306	Label	case 'w' :	866:2:19646:19654	374651	9	True				
ANR	375307	ExpressionStatement	op -> operands_count ++	867:3:19659:19680	374651	10	True				
ANR	375308	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375309	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375310	Identifier	op		374651	0					
ANR	375311	Identifier	operands_count		374651	1					
ANR	375312	IncDec	++		374651	1					
ANR	375313	ExpressionStatement	op -> operands [ operand ] . type = ARM_GPR	868:3:19685:19721	374651	11	True				
ANR	375314	AssignmentExpression	op -> operands [ operand ] . type = ARM_GPR		374651	0		=			
ANR	375315	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375316	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375317	PtrMemberAccess	op -> operands		374651	0					
ANR	375318	Identifier	op		374651	0					
ANR	375319	Identifier	operands		374651	1					
ANR	375320	Identifier	operand		374651	1					
ANR	375321	Identifier	type		374651	1					
ANR	375322	Identifier	ARM_GPR		374651	1					
ANR	375323	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_REG32	869:3:19726:19768	374651	12	True				
ANR	375324	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_REG32		374651	0		=			
ANR	375325	MemberAccess	op -> operands [ operand ] . reg_type		374651	0					
ANR	375326	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375327	PtrMemberAccess	op -> operands		374651	0					
ANR	375328	Identifier	op		374651	0					
ANR	375329	Identifier	operands		374651	1					
ANR	375330	Identifier	operand		374651	1					
ANR	375331	Identifier	reg_type		374651	1					
ANR	375332	Identifier	ARM_REG32		374651	1					
ANR	375333	IfStatement	"if ( ! strncmp ( token + 1 , ""zr"" , 2 ) )"		374651	13					
ANR	375334	Condition	"! strncmp ( token + 1 , ""zr"" , 2 )"	871:7:19778:19805	374651	0	True				
ANR	375335	UnaryOperationExpression	"! strncmp ( token + 1 , ""zr"" , 2 )"		374651	0					
ANR	375336	UnaryOperator	!		374651	0					
ANR	375337	CallExpression	"strncmp ( token + 1 , ""zr"" , 2 )"		374651	1					
ANR	375338	Callee	strncmp		374651	0					
ANR	375339	Identifier	strncmp		374651	0					
ANR	375340	ArgumentList	token + 1		374651	1					
ANR	375341	Argument	token + 1		374651	0					
ANR	375342	AdditiveExpression	token + 1		374651	0		+			
ANR	375343	Identifier	token		374651	0					
ANR	375344	PrimaryExpression	1		374651	1					
ANR	375345	Argument	"""zr"""		374651	1					
ANR	375346	PrimaryExpression	"""zr"""		374651	0					
ANR	375347	Argument	2		374651	2					
ANR	375348	PrimaryExpression	2		374651	0					
ANR	375349	CompoundStatement		113:37:2901:2901	374651	1					
ANR	375350	ExpressionStatement	op -> operands [ operand ] . reg = 31	873:4:19825:19855	374651	0	True				
ANR	375351	AssignmentExpression	op -> operands [ operand ] . reg = 31		374651	0		=			
ANR	375352	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375353	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375354	PtrMemberAccess	op -> operands		374651	0					
ANR	375355	Identifier	op		374651	0					
ANR	375356	Identifier	operands		374651	1					
ANR	375357	Identifier	operand		374651	1					
ANR	375358	Identifier	reg		374651	1					
ANR	375359	PrimaryExpression	31		374651	1					
ANR	375360	ElseStatement	else		374651	0					
ANR	375361	IfStatement	"if ( ! strncmp ( token + 1 , ""sp"" , 2 ) )"		374651	0					
ANR	375362	Condition	"! strncmp ( token + 1 , ""sp"" , 2 )"	874:14:19871:19898	374651	0	True				
ANR	375363	UnaryOperationExpression	"! strncmp ( token + 1 , ""sp"" , 2 )"		374651	0					
ANR	375364	UnaryOperator	!		374651	0					
ANR	375365	CallExpression	"strncmp ( token + 1 , ""sp"" , 2 )"		374651	1					
ANR	375366	Callee	strncmp		374651	0					
ANR	375367	Identifier	strncmp		374651	0					
ANR	375368	ArgumentList	token + 1		374651	1					
ANR	375369	Argument	token + 1		374651	0					
ANR	375370	AdditiveExpression	token + 1		374651	0		+			
ANR	375371	Identifier	token		374651	0					
ANR	375372	PrimaryExpression	1		374651	1					
ANR	375373	Argument	"""sp"""		374651	1					
ANR	375374	PrimaryExpression	"""sp"""		374651	0					
ANR	375375	Argument	2		374651	2					
ANR	375376	PrimaryExpression	2		374651	0					
ANR	375377	CompoundStatement		116:44:2994:2994	374651	1					
ANR	375378	ExpressionStatement	op -> operands [ operand ] . reg = 31	876:4:19918:19948	374651	0	True				
ANR	375379	AssignmentExpression	op -> operands [ operand ] . reg = 31		374651	0		=			
ANR	375380	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375381	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375382	PtrMemberAccess	op -> operands		374651	0					
ANR	375383	Identifier	op		374651	0					
ANR	375384	Identifier	operands		374651	1					
ANR	375385	Identifier	operand		374651	1					
ANR	375386	Identifier	reg		374651	1					
ANR	375387	PrimaryExpression	31		374651	1					
ANR	375388	ElseStatement	else		374651	0					
ANR	375389	CompoundStatement		119:10:3053:3053	374651	0					
ANR	375390	ExpressionStatement	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"	878:4:19966:20022	374651	0	True				
ANR	375391	AssignmentExpression	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"		374651	0		=			
ANR	375392	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375393	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375394	PtrMemberAccess	op -> operands		374651	0					
ANR	375395	Identifier	op		374651	0					
ANR	375396	Identifier	operands		374651	1					
ANR	375397	Identifier	operand		374651	1					
ANR	375398	Identifier	reg		374651	1					
ANR	375399	CallExpression	"r_num_math ( NULL , token + 1 )"		374651	1					
ANR	375400	Callee	r_num_math		374651	0					
ANR	375401	Identifier	r_num_math		374651	0					
ANR	375402	ArgumentList	NULL		374651	1					
ANR	375403	Argument	NULL		374651	0					
ANR	375404	Identifier	NULL		374651	0					
ANR	375405	Argument	token + 1		374651	1					
ANR	375406	AdditiveExpression	token + 1		374651	0		+			
ANR	375407	Identifier	token		374651	0					
ANR	375408	PrimaryExpression	1		374651	1					
ANR	375409	IfStatement	if ( op -> operands [ operand ] . reg > 31 )		374651	14					
ANR	375410	Condition	op -> operands [ operand ] . reg > 31	881:7:20037:20066	374651	0	True				
ANR	375411	RelationalExpression	op -> operands [ operand ] . reg > 31		374651	0		>			
ANR	375412	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375413	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375414	PtrMemberAccess	op -> operands		374651	0					
ANR	375415	Identifier	op		374651	0					
ANR	375416	Identifier	operands		374651	1					
ANR	375417	Identifier	operand		374651	1					
ANR	375418	Identifier	reg		374651	1					
ANR	375419	PrimaryExpression	31		374651	1					
ANR	375420	CompoundStatement		123:39:3162:3162	374651	1					
ANR	375421	ExpressionStatement	free ( t )	882:4:20075:20083	374651	0	True				
ANR	375422	CallExpression	free ( t )		374651	0					
ANR	375423	Callee	free		374651	0					
ANR	375424	Identifier	free		374651	0					
ANR	375425	ArgumentList	t		374651	1					
ANR	375426	Argument	t		374651	0					
ANR	375427	Identifier	t		374651	0					
ANR	375428	ReturnStatement	return false ;	883:4:20089:20101	374651	1	True				
ANR	375429	Identifier	false		374651	0					
ANR	375430	BreakStatement	break ;	885:3:20111:20116	374651	15	True				
ANR	375431	Label	case 'v' :	886:2:20120:20128	374651	16	True				
ANR	375432	ExpressionStatement	op -> operands_count ++	887:3:20133:20154	374651	17	True				
ANR	375433	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375434	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375435	Identifier	op		374651	0					
ANR	375436	Identifier	operands_count		374651	1					
ANR	375437	IncDec	++		374651	1					
ANR	375438	ExpressionStatement	op -> operands [ operand ] . type = ARM_FP	888:3:20159:20194	374651	18	True				
ANR	375439	AssignmentExpression	op -> operands [ operand ] . type = ARM_FP		374651	0		=			
ANR	375440	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375441	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375442	PtrMemberAccess	op -> operands		374651	0					
ANR	375443	Identifier	op		374651	0					
ANR	375444	Identifier	operands		374651	1					
ANR	375445	Identifier	operand		374651	1					
ANR	375446	Identifier	type		374651	1					
ANR	375447	Identifier	ARM_FP		374651	1					
ANR	375448	ExpressionStatement	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"	889:3:20199:20255	374651	19	True				
ANR	375449	AssignmentExpression	"op -> operands [ operand ] . reg = r_num_math ( NULL , token + 1 )"		374651	0		=			
ANR	375450	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375451	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375452	PtrMemberAccess	op -> operands		374651	0					
ANR	375453	Identifier	op		374651	0					
ANR	375454	Identifier	operands		374651	1					
ANR	375455	Identifier	operand		374651	1					
ANR	375456	Identifier	reg		374651	1					
ANR	375457	CallExpression	"r_num_math ( NULL , token + 1 )"		374651	1					
ANR	375458	Callee	r_num_math		374651	0					
ANR	375459	Identifier	r_num_math		374651	0					
ANR	375460	ArgumentList	NULL		374651	1					
ANR	375461	Argument	NULL		374651	0					
ANR	375462	Identifier	NULL		374651	0					
ANR	375463	Argument	token + 1		374651	1					
ANR	375464	AdditiveExpression	token + 1		374651	0		+			
ANR	375465	Identifier	token		374651	0					
ANR	375466	PrimaryExpression	1		374651	1					
ANR	375467	BreakStatement	break ;	890:3:20260:20265	374651	20	True				
ANR	375468	Label	case 's' :	891:2:20269:20277	374651	21	True				
ANR	375469	Label	case 'S' :	892:2:20281:20289	374651	22	True				
ANR	375470	IfStatement	if ( token [ 1 ] == 'P' || token [ 1 ] == 'p' )		374651	23					
ANR	375471	Condition	token [ 1 ] == 'P' || token [ 1 ] == 'p'	893:7:20298:20332	374651	0	True				
ANR	375472	OrExpression	token [ 1 ] == 'P' || token [ 1 ] == 'p'		374651	0		||			
ANR	375473	EqualityExpression	token [ 1 ] == 'P'		374651	0		==			
ANR	375474	ArrayIndexing	token [ 1 ]		374651	0					
ANR	375475	Identifier	token		374651	0					
ANR	375476	PrimaryExpression	1		374651	1					
ANR	375477	PrimaryExpression	'P'		374651	1					
ANR	375478	EqualityExpression	token [ 1 ] == 'p'		374651	1		==			
ANR	375479	ArrayIndexing	token [ 1 ]		374651	0					
ANR	375480	Identifier	token		374651	0					
ANR	375481	PrimaryExpression	1		374651	1					
ANR	375482	PrimaryExpression	'p'		374651	1					
ANR	375483	CompoundStatement		136:4:3434:3439	374651	1					
ANR	375484	IdentifierDeclStatement	int i ;	894:4:20341:20346	374651	0	True				
ANR	375485	IdentifierDecl	i		374651	0					
ANR	375486	IdentifierDeclType	int		374651	0					
ANR	375487	Identifier	i		374651	1					
ANR	375488	ForStatement	for ( i = 0 ; msr_const [ i ] . name ; i ++ )		374651	1					
ANR	375489	ForInit	i = 0 ;	895:9:20357:20362	374651	0	True				
ANR	375490	AssignmentExpression	i = 0		374651	0		=			
ANR	375491	Identifier	i		374651	0					
ANR	375492	PrimaryExpression	0		374651	1					
ANR	375493	Condition	msr_const [ i ] . name	895:16:20364:20380	374651	1	True				
ANR	375494	MemberAccess	msr_const [ i ] . name		374651	0					
ANR	375495	ArrayIndexing	msr_const [ i ]		374651	0					
ANR	375496	Identifier	msr_const		374651	0					
ANR	375497	Identifier	i		374651	1					
ANR	375498	Identifier	name		374651	1					
ANR	375499	PostIncDecOperationExpression	i ++	895:35:20383:20385	374651	2	True				
ANR	375500	Identifier	i		374651	0					
ANR	375501	IncDec	++		374651	1					
ANR	375502	CompoundStatement		137:40:3481:3481	374651	3					
ANR	375503	IfStatement	"if ( ! r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) ) )"		374651	0					
ANR	375504	Condition	"! r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) )"	896:9:20399:20468	374651	0	True				
ANR	375505	UnaryOperationExpression	"! r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) )"		374651	0					
ANR	375506	UnaryOperator	!		374651	0					
ANR	375507	CallExpression	"r_str_ncasecmp ( token , msr_const [ i ] . name , strlen ( msr_const [ i ] . name ) )"		374651	1					
ANR	375508	Callee	r_str_ncasecmp		374651	0					
ANR	375509	Identifier	r_str_ncasecmp		374651	0					
ANR	375510	ArgumentList	token		374651	1					
ANR	375511	Argument	token		374651	0					
ANR	375512	Identifier	token		374651	0					
ANR	375513	Argument	msr_const [ i ] . name		374651	1					
ANR	375514	MemberAccess	msr_const [ i ] . name		374651	0					
ANR	375515	ArrayIndexing	msr_const [ i ]		374651	0					
ANR	375516	Identifier	msr_const		374651	0					
ANR	375517	Identifier	i		374651	1					
ANR	375518	Identifier	name		374651	1					
ANR	375519	Argument	strlen ( msr_const [ i ] . name )		374651	2					
ANR	375520	CallExpression	strlen ( msr_const [ i ] . name )		374651	0					
ANR	375521	Callee	strlen		374651	0					
ANR	375522	Identifier	strlen		374651	0					
ANR	375523	ArgumentList	msr_const [ i ] . name		374651	1					
ANR	375524	Argument	msr_const [ i ] . name		374651	0					
ANR	375525	MemberAccess	msr_const [ i ] . name		374651	0					
ANR	375526	ArrayIndexing	msr_const [ i ]		374651	0					
ANR	375527	Identifier	msr_const		374651	0					
ANR	375528	Identifier	i		374651	1					
ANR	375529	Identifier	name		374651	1					
ANR	375530	CompoundStatement		138:81:3564:3564	374651	1					
ANR	375531	ExpressionStatement	op -> operands [ operand ] . sp_val = msr_const [ i ] . val	897:6:20479:20526	374651	0	True				
ANR	375532	AssignmentExpression	op -> operands [ operand ] . sp_val = msr_const [ i ] . val		374651	0		=			
ANR	375533	MemberAccess	op -> operands [ operand ] . sp_val		374651	0					
ANR	375534	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375535	PtrMemberAccess	op -> operands		374651	0					
ANR	375536	Identifier	op		374651	0					
ANR	375537	Identifier	operands		374651	1					
ANR	375538	Identifier	operand		374651	1					
ANR	375539	Identifier	sp_val		374651	1					
ANR	375540	MemberAccess	msr_const [ i ] . val		374651	1					
ANR	375541	ArrayIndexing	msr_const [ i ]		374651	0					
ANR	375542	Identifier	msr_const		374651	0					
ANR	375543	Identifier	i		374651	1					
ANR	375544	Identifier	val		374651	1					
ANR	375545	BreakStatement	break ;	898:6:20534:20539	374651	1	True				
ANR	375546	ExpressionStatement	op -> operands_count ++	901:4:20558:20579	374651	2	True				
ANR	375547	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375548	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375549	Identifier	op		374651	0					
ANR	375550	Identifier	operands_count		374651	1					
ANR	375551	IncDec	++		374651	1					
ANR	375552	ExpressionStatement	op -> operands [ operand ] . type = ARM_GPR	902:4:20585:20621	374651	3	True				
ANR	375553	AssignmentExpression	op -> operands [ operand ] . type = ARM_GPR		374651	0		=			
ANR	375554	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375555	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375556	PtrMemberAccess	op -> operands		374651	0					
ANR	375557	Identifier	op		374651	0					
ANR	375558	Identifier	operands		374651	1					
ANR	375559	Identifier	operand		374651	1					
ANR	375560	Identifier	type		374651	1					
ANR	375561	Identifier	ARM_GPR		374651	1					
ANR	375562	ExpressionStatement	op -> operands [ operand ] . reg_type = ARM_SP | ARM_REG64	903:4:20627:20678	374651	4	True				
ANR	375563	AssignmentExpression	op -> operands [ operand ] . reg_type = ARM_SP | ARM_REG64		374651	0		=			
ANR	375564	MemberAccess	op -> operands [ operand ] . reg_type		374651	0					
ANR	375565	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375566	PtrMemberAccess	op -> operands		374651	0					
ANR	375567	Identifier	op		374651	0					
ANR	375568	Identifier	operands		374651	1					
ANR	375569	Identifier	operand		374651	1					
ANR	375570	Identifier	reg_type		374651	1					
ANR	375571	InclusiveOrExpression	ARM_SP | ARM_REG64		374651	1		|			
ANR	375572	Identifier	ARM_SP		374651	0					
ANR	375573	Identifier	ARM_REG64		374651	1					
ANR	375574	ExpressionStatement	op -> operands [ operand ] . reg = 31	904:4:20684:20714	374651	5	True				
ANR	375575	AssignmentExpression	op -> operands [ operand ] . reg = 31		374651	0		=			
ANR	375576	MemberAccess	op -> operands [ operand ] . reg		374651	0					
ANR	375577	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375578	PtrMemberAccess	op -> operands		374651	0					
ANR	375579	Identifier	op		374651	0					
ANR	375580	Identifier	operands		374651	1					
ANR	375581	Identifier	operand		374651	1					
ANR	375582	Identifier	reg		374651	1					
ANR	375583	PrimaryExpression	31		374651	1					
ANR	375584	BreakStatement	break ;	905:4:20720:20725	374651	6	True				
ANR	375585	ExpressionStatement	mem_opt = get_mem_option ( token )	907:3:20735:20767	374651	24	True				
ANR	375586	AssignmentExpression	mem_opt = get_mem_option ( token )		374651	0		=			
ANR	375587	Identifier	mem_opt		374651	0					
ANR	375588	CallExpression	get_mem_option ( token )		374651	1					
ANR	375589	Callee	get_mem_option		374651	0					
ANR	375590	Identifier	get_mem_option		374651	0					
ANR	375591	ArgumentList	token		374651	1					
ANR	375592	Argument	token		374651	0					
ANR	375593	Identifier	token		374651	0					
ANR	375594	IfStatement	if ( mem_opt != - 1 )		374651	25					
ANR	375595	Condition	mem_opt != - 1	908:7:20776:20788	374651	0	True				
ANR	375596	EqualityExpression	mem_opt != - 1		374651	0		!=			
ANR	375597	Identifier	mem_opt		374651	0					
ANR	375598	UnaryOperationExpression	- 1		374651	1					
ANR	375599	UnaryOperator	-		374651	0					
ANR	375600	PrimaryExpression	1		374651	1					
ANR	375601	CompoundStatement		150:22:3884:3884	374651	1					
ANR	375602	ExpressionStatement	op -> operands_count ++	909:4:20797:20818	374651	0	True				
ANR	375603	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375604	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375605	Identifier	op		374651	0					
ANR	375606	Identifier	operands_count		374651	1					
ANR	375607	IncDec	++		374651	1					
ANR	375608	ExpressionStatement	op -> operands [ operand ] . type = ARM_MEM_OPT	910:4:20824:20864	374651	1	True				
ANR	375609	AssignmentExpression	op -> operands [ operand ] . type = ARM_MEM_OPT		374651	0		=			
ANR	375610	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375611	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375612	PtrMemberAccess	op -> operands		374651	0					
ANR	375613	Identifier	op		374651	0					
ANR	375614	Identifier	operands		374651	1					
ANR	375615	Identifier	operand		374651	1					
ANR	375616	Identifier	type		374651	1					
ANR	375617	Identifier	ARM_MEM_OPT		374651	1					
ANR	375618	ExpressionStatement	op -> operands [ operand ] . mem_option = mem_opt	911:4:20870:20912	374651	2	True				
ANR	375619	AssignmentExpression	op -> operands [ operand ] . mem_option = mem_opt		374651	0		=			
ANR	375620	MemberAccess	op -> operands [ operand ] . mem_option		374651	0					
ANR	375621	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375622	PtrMemberAccess	op -> operands		374651	0					
ANR	375623	Identifier	op		374651	0					
ANR	375624	Identifier	operands		374651	1					
ANR	375625	Identifier	operand		374651	1					
ANR	375626	Identifier	mem_option		374651	1					
ANR	375627	Identifier	mem_opt		374651	1					
ANR	375628	BreakStatement	break ;	913:3:20922:20927	374651	26	True				
ANR	375629	Label	case 'L' :	914:2:20931:20939	374651	27	True				
ANR	375630	Label	case 'l' :	915:2:20943:20951	374651	28	True				
ANR	375631	Label	case 'I' :	916:2:20955:20963	374651	29	True				
ANR	375632	Label	case 'i' :	917:2:20967:20975	374651	30	True				
ANR	375633	Label	case 'N' :	918:2:20979:20987	374651	31	True				
ANR	375634	Label	case 'n' :	919:2:20991:20999	374651	32	True				
ANR	375635	Label	case 'O' :	920:2:21003:21011	374651	33	True				
ANR	375636	Label	case 'o' :	921:2:21015:21023	374651	34	True				
ANR	375637	Label	case 'p' :	922:2:21027:21035	374651	35	True				
ANR	375638	Label	case 'P' :	923:2:21039:21047	374651	36	True				
ANR	375639	ExpressionStatement	mem_opt = get_mem_option ( token )	924:3:21052:21084	374651	37	True				
ANR	375640	AssignmentExpression	mem_opt = get_mem_option ( token )		374651	0		=			
ANR	375641	Identifier	mem_opt		374651	0					
ANR	375642	CallExpression	get_mem_option ( token )		374651	1					
ANR	375643	Callee	get_mem_option		374651	0					
ANR	375644	Identifier	get_mem_option		374651	0					
ANR	375645	ArgumentList	token		374651	1					
ANR	375646	Argument	token		374651	0					
ANR	375647	Identifier	token		374651	0					
ANR	375648	IfStatement	if ( mem_opt != - 1 )		374651	38					
ANR	375649	Condition	mem_opt != - 1	925:7:21093:21105	374651	0	True				
ANR	375650	EqualityExpression	mem_opt != - 1		374651	0		!=			
ANR	375651	Identifier	mem_opt		374651	0					
ANR	375652	UnaryOperationExpression	- 1		374651	1					
ANR	375653	UnaryOperator	-		374651	0					
ANR	375654	PrimaryExpression	1		374651	1					
ANR	375655	CompoundStatement		167:22:4201:4201	374651	1					
ANR	375656	ExpressionStatement	op -> operands_count ++	926:4:21114:21135	374651	0	True				
ANR	375657	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375658	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375659	Identifier	op		374651	0					
ANR	375660	Identifier	operands_count		374651	1					
ANR	375661	IncDec	++		374651	1					
ANR	375662	ExpressionStatement	op -> operands [ operand ] . type = ARM_MEM_OPT	927:4:21141:21181	374651	1	True				
ANR	375663	AssignmentExpression	op -> operands [ operand ] . type = ARM_MEM_OPT		374651	0		=			
ANR	375664	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375665	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375666	PtrMemberAccess	op -> operands		374651	0					
ANR	375667	Identifier	op		374651	0					
ANR	375668	Identifier	operands		374651	1					
ANR	375669	Identifier	operand		374651	1					
ANR	375670	Identifier	type		374651	1					
ANR	375671	Identifier	ARM_MEM_OPT		374651	1					
ANR	375672	ExpressionStatement	op -> operands [ operand ] . mem_option = mem_opt	928:4:21187:21229	374651	2	True				
ANR	375673	AssignmentExpression	op -> operands [ operand ] . mem_option = mem_opt		374651	0		=			
ANR	375674	MemberAccess	op -> operands [ operand ] . mem_option		374651	0					
ANR	375675	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375676	PtrMemberAccess	op -> operands		374651	0					
ANR	375677	Identifier	op		374651	0					
ANR	375678	Identifier	operands		374651	1					
ANR	375679	Identifier	operand		374651	1					
ANR	375680	Identifier	mem_option		374651	1					
ANR	375681	Identifier	mem_opt		374651	1					
ANR	375682	BreakStatement	break ;	930:3:21239:21244	374651	39	True				
ANR	375683	Label	case '-' :	931:2:21248:21256	374651	40	True				
ANR	375684	ExpressionStatement	op -> operands [ operand ] . sign = - 1	932:3:21261:21292	374651	41	True				
ANR	375685	AssignmentExpression	op -> operands [ operand ] . sign = - 1		374651	0		=			
ANR	375686	MemberAccess	op -> operands [ operand ] . sign		374651	0					
ANR	375687	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375688	PtrMemberAccess	op -> operands		374651	0					
ANR	375689	Identifier	op		374651	0					
ANR	375690	Identifier	operands		374651	1					
ANR	375691	Identifier	operand		374651	1					
ANR	375692	Identifier	sign		374651	1					
ANR	375693	UnaryOperationExpression	- 1		374651	1					
ANR	375694	UnaryOperator	-		374651	0					
ANR	375695	PrimaryExpression	1		374651	1					
ANR	375696	Label	default :	934:2:21310:21317	374651	42	True				
ANR	375697	Identifier	default		374651	0					
ANR	375698	ExpressionStatement	op -> operands_count ++	935:3:21322:21343	374651	43	True				
ANR	375699	PostIncDecOperationExpression	op -> operands_count ++		374651	0					
ANR	375700	PtrMemberAccess	op -> operands_count		374651	0					
ANR	375701	Identifier	op		374651	0					
ANR	375702	Identifier	operands_count		374651	1					
ANR	375703	IncDec	++		374651	1					
ANR	375704	ExpressionStatement	op -> operands [ operand ] . type = ARM_CONSTANT	936:3:21348:21389	374651	44	True				
ANR	375705	AssignmentExpression	op -> operands [ operand ] . type = ARM_CONSTANT		374651	0		=			
ANR	375706	MemberAccess	op -> operands [ operand ] . type		374651	0					
ANR	375707	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375708	PtrMemberAccess	op -> operands		374651	0					
ANR	375709	Identifier	op		374651	0					
ANR	375710	Identifier	operands		374651	1					
ANR	375711	Identifier	operand		374651	1					
ANR	375712	Identifier	type		374651	1					
ANR	375713	Identifier	ARM_CONSTANT		374651	1					
ANR	375714	ExpressionStatement	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token )"	937:3:21394:21452	374651	45	True				
ANR	375715	AssignmentExpression	"op -> operands [ operand ] . immediate = r_num_math ( NULL , token )"		374651	0		=			
ANR	375716	MemberAccess	op -> operands [ operand ] . immediate		374651	0					
ANR	375717	ArrayIndexing	op -> operands [ operand ]		374651	0					
ANR	375718	PtrMemberAccess	op -> operands		374651	0					
ANR	375719	Identifier	op		374651	0					
ANR	375720	Identifier	operands		374651	1					
ANR	375721	Identifier	operand		374651	1					
ANR	375722	Identifier	immediate		374651	1					
ANR	375723	CallExpression	"r_num_math ( NULL , token )"		374651	1					
ANR	375724	Callee	r_num_math		374651	0					
ANR	375725	Identifier	r_num_math		374651	0					
ANR	375726	ArgumentList	NULL		374651	1					
ANR	375727	Argument	NULL		374651	0					
ANR	375728	Identifier	NULL		374651	0					
ANR	375729	Argument	token		374651	1					
ANR	375730	Identifier	token		374651	0					
ANR	375731	ExpressionStatement	imm_count ++	938:3:21457:21468	374651	46	True				
ANR	375732	PostIncDecOperationExpression	imm_count ++		374651	0					
ANR	375733	Identifier	imm_count		374651	0					
ANR	375734	IncDec	++		374651	1					
ANR	375735	BreakStatement	break ;	939:3:21473:21478	374651	47	True				
ANR	375736	ExpressionStatement	token = next	941:2:21486:21498	374651	13	True				
ANR	375737	AssignmentExpression	token = next		374651	0		=			
ANR	375738	Identifier	token		374651	0					
ANR	375739	Identifier	next		374651	1					
ANR	375740	ExpressionStatement	operand ++	943:2:21503:21513	374651	14	True				
ANR	375741	PostIncDecOperationExpression	operand ++		374651	0					
ANR	375742	Identifier	operand		374651	0					
ANR	375743	IncDec	++		374651	1					
ANR	375744	IfStatement	if ( operand > MAX_OPERANDS )		374651	15					
ANR	375745	Condition	operand > MAX_OPERANDS	944:6:21521:21542	374651	0	True				
ANR	375746	RelationalExpression	operand > MAX_OPERANDS		374651	0		>			
ANR	375747	Identifier	operand		374651	0					
ANR	375748	Identifier	MAX_OPERANDS		374651	1					
ANR	375749	CompoundStatement		186:30:4638:4638	374651	1					
ANR	375750	ExpressionStatement	free ( t )	945:3:21550:21558	374651	0	True				
ANR	375751	CallExpression	free ( t )		374651	0					
ANR	375752	Callee	free		374651	0					
ANR	375753	Identifier	free		374651	0					
ANR	375754	ArgumentList	t		374651	1					
ANR	375755	Argument	t		374651	0					
ANR	375756	Identifier	t		374651	0					
ANR	375757	ReturnStatement	return false ;	946:3:21563:21575	374651	1	True				
ANR	375758	Identifier	false		374651	0					
ANR	375759	ExpressionStatement	free ( t )	949:1:21585:21593	374651	9	True				
ANR	375760	CallExpression	free ( t )		374651	0					
ANR	375761	Callee	free		374651	0					
ANR	375762	Identifier	free		374651	0					
ANR	375763	ArgumentList	t		374651	1					
ANR	375764	Argument	t		374651	0					
ANR	375765	Identifier	t		374651	0					
ANR	375766	ReturnStatement	return true ;	950:1:21596:21607	374651	10	True				
ANR	375767	Identifier	true		374651	0					
ANR	375768	ReturnType	static bool		374651	1					
ANR	375769	Identifier	parseOperands		374651	2					
ANR	375770	ParameterList	"char * str , ArmOp * op"		374651	3					
ANR	375771	Parameter	char * str	759:26:16884:16892	374651	0	True				
ANR	375772	ParameterType	char *		374651	0					
ANR	375773	Identifier	str		374651	1					
ANR	375774	Parameter	ArmOp * op	759:37:16895:16903	374651	1	True				
ANR	375775	ParameterType	ArmOp *		374651	0					
ANR	375776	Identifier	op		374651	1					
ANR	375777	CFGEntryNode	ENTRY		374651		True				
ANR	375778	CFGExitNode	EXIT		374651		True				
ANR	375779	Symbol	ARM_UNDEFINED		374651						
ANR	375780	Symbol	op -> operands [ operand ] . sp_val		374651						
ANR	375781	Symbol	* x		374651						
ANR	375782	Symbol	get_mem_option		374651						
ANR	375783	Symbol	* op		374651						
ANR	375784	Symbol	op -> mnemonic		374651						
ANR	375785	Symbol	ARM_NOTYPE		374651						
ANR	375786	Symbol	strchr		374651						
ANR	375787	Symbol	msr_const [ i ] . val		374651						
ANR	375788	Symbol	msr_const [ msr_op_index ] . val		374651						
ANR	375789	Symbol	ARM_REG32		374651						
ANR	375790	Symbol	MAX_OPERANDS		374651						
ANR	375791	Symbol	strncmp		374651						
ANR	375792	Symbol	strlen		374651						
ANR	375793	Symbol	* op -> operands		374651						
ANR	375794	Symbol	ARM_ASR		374651						
ANR	375795	Symbol	op -> operands [ operand ] . reg_type		374651						
ANR	375796	Symbol	strcasecmp		374651						
ANR	375797	Symbol	strcmp		374651						
ANR	375798	Symbol	ARM_MEM_OPT		374651						
ANR	375799	Symbol	NULL		374651						
ANR	375800	Symbol	imm_count		374651						
ANR	375801	Symbol	msr_op_index		374651						
ANR	375802	Symbol	str		374651						
ANR	375803	Symbol	op -> operands [ operand ] . immediate		374651						
ANR	375804	Symbol	msr_const [ msr_op_index ] . name		374651						
ANR	375805	Symbol	true		374651						
ANR	375806	Symbol	* msr_const		374651						
ANR	375807	Symbol	ARM_FP		374651						
ANR	375808	Symbol	next		374651						
ANR	375809	Symbol	* next ++		374651						
ANR	375810	Symbol	mem_opt		374651						
ANR	375811	Symbol	* operand		374651						
ANR	375812	Symbol	* msr_op_index		374651						
ANR	375813	Symbol	ARM_GPR		374651						
ANR	375814	Symbol	* * op		374651						
ANR	375815	Symbol	r_num_math		374651						
ANR	375816	Symbol	ARM_SP		374651						
ANR	375817	Symbol	ARM_NO_SHIFT		374651						
ANR	375818	Symbol	msr_const [ i ] . name		374651						
ANR	375819	Symbol	op -> operands [ operand ] . shift		374651						
ANR	375820	Symbol	op -> operands [ operand ] . mem_option		374651						
ANR	375821	Symbol	r_str_ncasecmp		374651						
ANR	375822	Symbol	op -> operands [ operand ] . reg		374651						
ANR	375823	Symbol	op		374651						
ANR	375824	Symbol	ARM_CONSTANT		374651						
ANR	375825	Symbol	ARM_LSR		374651						
ANR	375826	Symbol	msr_const		374651						
ANR	375827	Symbol	false		374651						
ANR	375828	Symbol	op -> operands [ operand ] . sign		374651						
ANR	375829	Symbol	ARM_LSL		374651						
ANR	375830	Symbol	i		374651						
ANR	375831	Symbol	op -> operands [ operand ] . type		374651						
ANR	375832	Symbol	token		374651						
ANR	375833	Symbol	ARM_REG64		374651						
ANR	375834	Symbol	* i		374651						
ANR	375835	Symbol	t		374651						
ANR	375836	Symbol	* token		374651						
ANR	375837	Symbol	op -> operands_count		374651						
ANR	375838	Symbol	x		374651						
ANR	375839	Symbol	strdup		374651						
ANR	375840	Symbol	op -> operands [ operand ] . shift_amount		374651						
ANR	375841	Symbol	op -> operands		374651						
ANR	375842	Symbol	operand		374651						
ANR	375843	Function	parseOpcode	953:0:21612:21901							
ANR	375844	FunctionDef	"parseOpcode (const char * str , ArmOp * op)"		375843	0					
ANR	375845	CompoundStatement		953:52:21664:21901	375843	0					
ANR	375846	IdentifierDeclStatement	char * in = strdup ( str ) ;	954:1:21667:21690	375843	0	True				
ANR	375847	IdentifierDecl	* in = strdup ( str )		375843	0					
ANR	375848	IdentifierDeclType	char *		375843	0					
ANR	375849	Identifier	in		375843	1					
ANR	375850	AssignmentExpression	* in = strdup ( str )		375843	2		=			
ANR	375851	Identifier	in		375843	0					
ANR	375852	CallExpression	strdup ( str )		375843	1					
ANR	375853	Callee	strdup		375843	0					
ANR	375854	Identifier	strdup		375843	0					
ANR	375855	ArgumentList	str		375843	1					
ANR	375856	Argument	str		375843	0					
ANR	375857	Identifier	str		375843	0					
ANR	375858	IdentifierDeclStatement	"char * space = strchr ( in , ' ' ) ;"	955:1:21693:21723	375843	1	True				
ANR	375859	IdentifierDecl	"* space = strchr ( in , ' ' )"		375843	0					
ANR	375860	IdentifierDeclType	char *		375843	0					
ANR	375861	Identifier	space		375843	1					
ANR	375862	AssignmentExpression	"* space = strchr ( in , ' ' )"		375843	2		=			
ANR	375863	Identifier	space		375843	0					
ANR	375864	CallExpression	"strchr ( in , ' ' )"		375843	1					
ANR	375865	Callee	strchr		375843	0					
ANR	375866	Identifier	strchr		375843	0					
ANR	375867	ArgumentList	in		375843	1					
ANR	375868	Argument	in		375843	0					
ANR	375869	Identifier	in		375843	0					
ANR	375870	Argument	' '		375843	1					
ANR	375871	PrimaryExpression	' '		375843	0					
ANR	375872	IfStatement	if ( ! space )		375843	2					
ANR	375873	Condition	! space	956:5:21730:21735	375843	0	True				
ANR	375874	UnaryOperationExpression	! space		375843	0					
ANR	375875	UnaryOperator	!		375843	0					
ANR	375876	Identifier	space		375843	1					
ANR	375877	CompoundStatement		4:13:73:73	375843	1					
ANR	375878	ExpressionStatement	op -> operands [ 0 ] . type = ARM_NOTYPE	957:2:21742:21775	375843	0	True				
ANR	375879	AssignmentExpression	op -> operands [ 0 ] . type = ARM_NOTYPE		375843	0		=			
ANR	375880	MemberAccess	op -> operands [ 0 ] . type		375843	0					
ANR	375881	ArrayIndexing	op -> operands [ 0 ]		375843	0					
ANR	375882	PtrMemberAccess	op -> operands		375843	0					
ANR	375883	Identifier	op		375843	0					
ANR	375884	Identifier	operands		375843	1					
ANR	375885	PrimaryExpression	0		375843	1					
ANR	375886	Identifier	type		375843	1					
ANR	375887	Identifier	ARM_NOTYPE		375843	1					
ANR	375888	ExpressionStatement	op -> mnemonic = in	958:2:21779:21796	375843	1	True				
ANR	375889	AssignmentExpression	op -> mnemonic = in		375843	0		=			
ANR	375890	PtrMemberAccess	op -> mnemonic		375843	0					
ANR	375891	Identifier	op		375843	0					
ANR	375892	Identifier	mnemonic		375843	1					
ANR	375893	Identifier	in		375843	1					
ANR	375894	ReturnStatement	return true ;	959:3:21801:21812	375843	2	True				
ANR	375895	Identifier	true		375843	0					
ANR	375896	ExpressionStatement	space [ 0 ] = '\\0'	961:1:21818:21833	375843	3	True				
ANR	375897	AssignmentExpression	space [ 0 ] = '\\0'		375843	0		=			
ANR	375898	ArrayIndexing	space [ 0 ]		375843	0					
ANR	375899	Identifier	space		375843	0					
ANR	375900	PrimaryExpression	0		375843	1					
ANR	375901	PrimaryExpression	'\\0'		375843	1					
ANR	375902	ExpressionStatement	op -> mnemonic = in	962:1:21836:21853	375843	4	True				
ANR	375903	AssignmentExpression	op -> mnemonic = in		375843	0		=			
ANR	375904	PtrMemberAccess	op -> mnemonic		375843	0					
ANR	375905	Identifier	op		375843	0					
ANR	375906	Identifier	mnemonic		375843	1					
ANR	375907	Identifier	in		375843	1					
ANR	375908	ExpressionStatement	space ++	963:1:21856:21864	375843	5	True				
ANR	375909	PostIncDecOperationExpression	space ++		375843	0					
ANR	375910	Identifier	space		375843	0					
ANR	375911	IncDec	++		375843	1					
ANR	375912	ReturnStatement	"return parseOperands ( space , op ) ;"	964:1:21867:21899	375843	6	True				
ANR	375913	CallExpression	"parseOperands ( space , op )"		375843	0					
ANR	375914	Callee	parseOperands		375843	0					
ANR	375915	Identifier	parseOperands		375843	0					
ANR	375916	ArgumentList	space		375843	1					
ANR	375917	Argument	space		375843	0					
ANR	375918	Identifier	space		375843	0					
ANR	375919	Argument	op		375843	1					
ANR	375920	Identifier	op		375843	0					
ANR	375921	ReturnType	static bool		375843	1					
ANR	375922	Identifier	parseOpcode		375843	2					
ANR	375923	ParameterList	"const char * str , ArmOp * op"		375843	3					
ANR	375924	Parameter	const char * str	953:24:21636:21650	375843	0	True				
ANR	375925	ParameterType	const char *		375843	0					
ANR	375926	Identifier	str		375843	1					
ANR	375927	Parameter	ArmOp * op	953:41:21653:21661	375843	1	True				
ANR	375928	ParameterType	ArmOp *		375843	0					
ANR	375929	Identifier	op		375843	1					
ANR	375930	CFGEntryNode	ENTRY		375843		True				
ANR	375931	CFGExitNode	EXIT		375843		True				
ANR	375932	Symbol	op		375843						
ANR	375933	Symbol	parseOperands		375843						
ANR	375934	Symbol	* op		375843						
ANR	375935	Symbol	in		375843						
ANR	375936	Symbol	op -> mnemonic		375843						
ANR	375937	Symbol	ARM_NOTYPE		375843						
ANR	375938	Symbol	strchr		375843						
ANR	375939	Symbol	space		375843						
ANR	375940	Symbol	* * op		375843						
ANR	375941	Symbol	str		375843						
ANR	375942	Symbol	* op -> operands		375843						
ANR	375943	Symbol	op -> operands [ 0 ] . type		375843						
ANR	375944	Symbol	true		375843						
ANR	375945	Symbol	* space		375843						
ANR	375946	Symbol	strdup		375843						
ANR	375947	Symbol	op -> operands		375843						
ANR	375948	Function	handlePAC	967:0:21904:22603							
ANR	375949	FunctionDef	"handlePAC (ut32 * op , const char * str)"		375948	0					
ANR	375950	CompoundStatement		967:49:21953:22603	375948	0					
ANR	375951	IfStatement	"if ( ! strcmp ( str , ""autiasp"" ) )"		375948	0					
ANR	375952	Condition	"! strcmp ( str , ""autiasp"" )"	968:5:21960:21983	375948	0	True				
ANR	375953	UnaryOperationExpression	"! strcmp ( str , ""autiasp"" )"		375948	0					
ANR	375954	UnaryOperator	!		375948	0					
ANR	375955	CallExpression	"strcmp ( str , ""autiasp"" )"		375948	1					
ANR	375956	Callee	strcmp		375948	0					
ANR	375957	Identifier	strcmp		375948	0					
ANR	375958	ArgumentList	str		375948	1					
ANR	375959	Argument	str		375948	0					
ANR	375960	Identifier	str		375948	0					
ANR	375961	Argument	"""autiasp"""		375948	1					
ANR	375962	PrimaryExpression	"""autiasp"""		375948	0					
ANR	375963	CompoundStatement		2:31:32:32	375948	1					
ANR	375964	ExpressionStatement	* op = 0xbf2303d5	969:2:21990:22006	375948	0	True				
ANR	375965	AssignmentExpression	* op = 0xbf2303d5		375948	0		=			
ANR	375966	UnaryOperationExpression	* op		375948	0					
ANR	375967	UnaryOperator	*		375948	0					
ANR	375968	Identifier	op		375948	1					
ANR	375969	PrimaryExpression	0xbf2303d5		375948	1					
ANR	375970	ReturnStatement	return true ;	970:2:22010:22021	375948	1	True				
ANR	375971	Identifier	true		375948	0					
ANR	375972	IfStatement	"if ( ! strcmp ( str , ""autiaz"" ) )"		375948	1					
ANR	375973	Condition	"! strcmp ( str , ""autiaz"" )"	972:5:22031:22053	375948	0	True				
ANR	375974	UnaryOperationExpression	"! strcmp ( str , ""autiaz"" )"		375948	0					
ANR	375975	UnaryOperator	!		375948	0					
ANR	375976	CallExpression	"strcmp ( str , ""autiaz"" )"		375948	1					
ANR	375977	Callee	strcmp		375948	0					
ANR	375978	Identifier	strcmp		375948	0					
ANR	375979	ArgumentList	str		375948	1					
ANR	375980	Argument	str		375948	0					
ANR	375981	Identifier	str		375948	0					
ANR	375982	Argument	"""autiaz"""		375948	1					
ANR	375983	PrimaryExpression	"""autiaz"""		375948	0					
ANR	375984	CompoundStatement		6:30:102:102	375948	1					
ANR	375985	ExpressionStatement	* op = 0x9f2303d5	973:2:22060:22076	375948	0	True				
ANR	375986	AssignmentExpression	* op = 0x9f2303d5		375948	0		=			
ANR	375987	UnaryOperationExpression	* op		375948	0					
ANR	375988	UnaryOperator	*		375948	0					
ANR	375989	Identifier	op		375948	1					
ANR	375990	PrimaryExpression	0x9f2303d5		375948	1					
ANR	375991	ReturnStatement	return true ;	974:2:22080:22091	375948	1	True				
ANR	375992	Identifier	true		375948	0					
ANR	375993	IfStatement	"if ( ! strcmp ( str , ""autibsp"" ) )"		375948	2					
ANR	375994	Condition	"! strcmp ( str , ""autibsp"" )"	976:5:22101:22124	375948	0	True				
ANR	375995	UnaryOperationExpression	"! strcmp ( str , ""autibsp"" )"		375948	0					
ANR	375996	UnaryOperator	!		375948	0					
ANR	375997	CallExpression	"strcmp ( str , ""autibsp"" )"		375948	1					
ANR	375998	Callee	strcmp		375948	0					
ANR	375999	Identifier	strcmp		375948	0					
ANR	376000	ArgumentList	str		375948	1					
ANR	376001	Argument	str		375948	0					
ANR	376002	Identifier	str		375948	0					
ANR	376003	Argument	"""autibsp"""		375948	1					
ANR	376004	PrimaryExpression	"""autibsp"""		375948	0					
ANR	376005	CompoundStatement		10:31:173:173	375948	1					
ANR	376006	ExpressionStatement	* op = 0xff2303d5	977:2:22131:22147	375948	0	True				
ANR	376007	AssignmentExpression	* op = 0xff2303d5		375948	0		=			
ANR	376008	UnaryOperationExpression	* op		375948	0					
ANR	376009	UnaryOperator	*		375948	0					
ANR	376010	Identifier	op		375948	1					
ANR	376011	PrimaryExpression	0xff2303d5		375948	1					
ANR	376012	ReturnStatement	return true ;	978:2:22151:22162	375948	1	True				
ANR	376013	Identifier	true		375948	0					
ANR	376014	IfStatement	"if ( ! strcmp ( str , ""autibz"" ) )"		375948	3					
ANR	376015	Condition	"! strcmp ( str , ""autibz"" )"	980:5:22172:22194	375948	0	True				
ANR	376016	UnaryOperationExpression	"! strcmp ( str , ""autibz"" )"		375948	0					
ANR	376017	UnaryOperator	!		375948	0					
ANR	376018	CallExpression	"strcmp ( str , ""autibz"" )"		375948	1					
ANR	376019	Callee	strcmp		375948	0					
ANR	376020	Identifier	strcmp		375948	0					
ANR	376021	ArgumentList	str		375948	1					
ANR	376022	Argument	str		375948	0					
ANR	376023	Identifier	str		375948	0					
ANR	376024	Argument	"""autibz"""		375948	1					
ANR	376025	PrimaryExpression	"""autibz"""		375948	0					
ANR	376026	CompoundStatement		14:30:243:243	375948	1					
ANR	376027	ExpressionStatement	* op = 0xdf2303d5	981:2:22201:22217	375948	0	True				
ANR	376028	AssignmentExpression	* op = 0xdf2303d5		375948	0		=			
ANR	376029	UnaryOperationExpression	* op		375948	0					
ANR	376030	UnaryOperator	*		375948	0					
ANR	376031	Identifier	op		375948	1					
ANR	376032	PrimaryExpression	0xdf2303d5		375948	1					
ANR	376033	ReturnStatement	return true ;	982:2:22221:22232	375948	1	True				
ANR	376034	Identifier	true		375948	0					
ANR	376035	IfStatement	"if ( ! strcmp ( str , ""paciaz"" ) )"		375948	4					
ANR	376036	Condition	"! strcmp ( str , ""paciaz"" )"	984:5:22242:22264	375948	0	True				
ANR	376037	UnaryOperationExpression	"! strcmp ( str , ""paciaz"" )"		375948	0					
ANR	376038	UnaryOperator	!		375948	0					
ANR	376039	CallExpression	"strcmp ( str , ""paciaz"" )"		375948	1					
ANR	376040	Callee	strcmp		375948	0					
ANR	376041	Identifier	strcmp		375948	0					
ANR	376042	ArgumentList	str		375948	1					
ANR	376043	Argument	str		375948	0					
ANR	376044	Identifier	str		375948	0					
ANR	376045	Argument	"""paciaz"""		375948	1					
ANR	376046	PrimaryExpression	"""paciaz"""		375948	0					
ANR	376047	CompoundStatement		18:30:313:313	375948	1					
ANR	376048	ExpressionStatement	* op = 0x1f2303d5	985:2:22271:22287	375948	0	True				
ANR	376049	AssignmentExpression	* op = 0x1f2303d5		375948	0		=			
ANR	376050	UnaryOperationExpression	* op		375948	0					
ANR	376051	UnaryOperator	*		375948	0					
ANR	376052	Identifier	op		375948	1					
ANR	376053	PrimaryExpression	0x1f2303d5		375948	1					
ANR	376054	ReturnStatement	return true ;	986:2:22291:22302	375948	1	True				
ANR	376055	Identifier	true		375948	0					
ANR	376056	IfStatement	"if ( ! strcmp ( str , ""pacibz"" ) )"		375948	5					
ANR	376057	Condition	"! strcmp ( str , ""pacibz"" )"	988:5:22312:22334	375948	0	True				
ANR	376058	UnaryOperationExpression	"! strcmp ( str , ""pacibz"" )"		375948	0					
ANR	376059	UnaryOperator	!		375948	0					
ANR	376060	CallExpression	"strcmp ( str , ""pacibz"" )"		375948	1					
ANR	376061	Callee	strcmp		375948	0					
ANR	376062	Identifier	strcmp		375948	0					
ANR	376063	ArgumentList	str		375948	1					
ANR	376064	Argument	str		375948	0					
ANR	376065	Identifier	str		375948	0					
ANR	376066	Argument	"""pacibz"""		375948	1					
ANR	376067	PrimaryExpression	"""pacibz"""		375948	0					
ANR	376068	CompoundStatement		22:30:383:383	375948	1					
ANR	376069	ExpressionStatement	* op = 0x5f2303d5	989:2:22341:22357	375948	0	True				
ANR	376070	AssignmentExpression	* op = 0x5f2303d5		375948	0		=			
ANR	376071	UnaryOperationExpression	* op		375948	0					
ANR	376072	UnaryOperator	*		375948	0					
ANR	376073	Identifier	op		375948	1					
ANR	376074	PrimaryExpression	0x5f2303d5		375948	1					
ANR	376075	ReturnStatement	return true ;	990:2:22361:22372	375948	1	True				
ANR	376076	Identifier	true		375948	0					
ANR	376077	IfStatement	"if ( ! strcmp ( str , ""paciasp"" ) )"		375948	6					
ANR	376078	Condition	"! strcmp ( str , ""paciasp"" )"	992:5:22382:22405	375948	0	True				
ANR	376079	UnaryOperationExpression	"! strcmp ( str , ""paciasp"" )"		375948	0					
ANR	376080	UnaryOperator	!		375948	0					
ANR	376081	CallExpression	"strcmp ( str , ""paciasp"" )"		375948	1					
ANR	376082	Callee	strcmp		375948	0					
ANR	376083	Identifier	strcmp		375948	0					
ANR	376084	ArgumentList	str		375948	1					
ANR	376085	Argument	str		375948	0					
ANR	376086	Identifier	str		375948	0					
ANR	376087	Argument	"""paciasp"""		375948	1					
ANR	376088	PrimaryExpression	"""paciasp"""		375948	0					
ANR	376089	CompoundStatement		26:31:454:454	375948	1					
ANR	376090	ExpressionStatement	* op = 0x3f2303d5	993:2:22412:22428	375948	0	True				
ANR	376091	AssignmentExpression	* op = 0x3f2303d5		375948	0		=			
ANR	376092	UnaryOperationExpression	* op		375948	0					
ANR	376093	UnaryOperator	*		375948	0					
ANR	376094	Identifier	op		375948	1					
ANR	376095	PrimaryExpression	0x3f2303d5		375948	1					
ANR	376096	ReturnStatement	return true ;	994:2:22432:22443	375948	1	True				
ANR	376097	Identifier	true		375948	0					
ANR	376098	IfStatement	"if ( ! strcmp ( str , ""pacibsp"" ) )"		375948	7					
ANR	376099	Condition	"! strcmp ( str , ""pacibsp"" )"	996:5:22453:22476	375948	0	True				
ANR	376100	UnaryOperationExpression	"! strcmp ( str , ""pacibsp"" )"		375948	0					
ANR	376101	UnaryOperator	!		375948	0					
ANR	376102	CallExpression	"strcmp ( str , ""pacibsp"" )"		375948	1					
ANR	376103	Callee	strcmp		375948	0					
ANR	376104	Identifier	strcmp		375948	0					
ANR	376105	ArgumentList	str		375948	1					
ANR	376106	Argument	str		375948	0					
ANR	376107	Identifier	str		375948	0					
ANR	376108	Argument	"""pacibsp"""		375948	1					
ANR	376109	PrimaryExpression	"""pacibsp"""		375948	0					
ANR	376110	CompoundStatement		30:31:525:525	375948	1					
ANR	376111	ExpressionStatement	* op = 0x7f2303d5	997:2:22483:22499	375948	0	True				
ANR	376112	AssignmentExpression	* op = 0x7f2303d5		375948	0		=			
ANR	376113	UnaryOperationExpression	* op		375948	0					
ANR	376114	UnaryOperator	*		375948	0					
ANR	376115	Identifier	op		375948	1					
ANR	376116	PrimaryExpression	0x7f2303d5		375948	1					
ANR	376117	ReturnStatement	return true ;	998:2:22503:22514	375948	1	True				
ANR	376118	Identifier	true		375948	0					
ANR	376119	IfStatement	"if ( ! strcmp ( str , ""retab"" ) )"		375948	8					
ANR	376120	Condition	"! strcmp ( str , ""retab"" )"	1000:5:22524:22545	375948	0	True				
ANR	376121	UnaryOperationExpression	"! strcmp ( str , ""retab"" )"		375948	0					
ANR	376122	UnaryOperator	!		375948	0					
ANR	376123	CallExpression	"strcmp ( str , ""retab"" )"		375948	1					
ANR	376124	Callee	strcmp		375948	0					
ANR	376125	Identifier	strcmp		375948	0					
ANR	376126	ArgumentList	str		375948	1					
ANR	376127	Argument	str		375948	0					
ANR	376128	Identifier	str		375948	0					
ANR	376129	Argument	"""retab"""		375948	1					
ANR	376130	PrimaryExpression	"""retab"""		375948	0					
ANR	376131	CompoundStatement		34:29:594:594	375948	1					
ANR	376132	ExpressionStatement	* op = 0xff0f5fd6	1001:2:22552:22568	375948	0	True				
ANR	376133	AssignmentExpression	* op = 0xff0f5fd6		375948	0		=			
ANR	376134	UnaryOperationExpression	* op		375948	0					
ANR	376135	UnaryOperator	*		375948	0					
ANR	376136	Identifier	op		375948	1					
ANR	376137	PrimaryExpression	0xff0f5fd6		375948	1					
ANR	376138	ReturnStatement	return true ;	1002:2:22572:22583	375948	1	True				
ANR	376139	Identifier	true		375948	0					
ANR	376140	ReturnStatement	return false ;	1004:1:22589:22601	375948	9	True				
ANR	376141	Identifier	false		375948	0					
ANR	376142	ReturnType	static bool		375948	1					
ANR	376143	Identifier	handlePAC		375948	2					
ANR	376144	ParameterList	"ut32 * op , const char * str"		375948	3					
ANR	376145	Parameter	ut32 * op	967:22:21926:21933	375948	0	True				
ANR	376146	ParameterType	ut32 *		375948	0					
ANR	376147	Identifier	op		375948	1					
ANR	376148	Parameter	const char * str	967:32:21936:21950	375948	1	True				
ANR	376149	ParameterType	const char *		375948	0					
ANR	376150	Identifier	str		375948	1					
ANR	376151	CFGEntryNode	ENTRY		375948		True				
ANR	376152	CFGExitNode	EXIT		375948		True				
ANR	376153	Symbol	str		375948						
ANR	376154	Symbol	strcmp		375948						
ANR	376155	Symbol	op		375948						
ANR	376156	Symbol	* op		375948						
ANR	376157	Symbol	true		375948						
ANR	376158	Symbol	false		375948						
ANR	376159	Function	arm64ass	1007:0:22606:26740							
ANR	376160	FunctionDef	"arm64ass (const char * str , ut64 addr , ut32 * op)"		376159	0					
ANR	376161	CompoundStatement		1007:52:22658:26740	376159	0					
ANR	376162	IdentifierDeclStatement	ArmOp ops = { 0 } ;	1008:1:22661:22676	376159	0	True				
ANR	376163	IdentifierDecl	ops = { 0 }		376159	0					
ANR	376164	IdentifierDeclType	ArmOp		376159	0					
ANR	376165	Identifier	ops		376159	1					
ANR	376166	AssignmentExpression	ops = { 0 }		376159	2		=			
ANR	376167	Identifier	ops		376159	0					
ANR	376168	InitializerList	0		376159	1					
ANR	376169	PrimaryExpression	0		376159	0					
ANR	376170	IfStatement	"if ( ! parseOpcode ( str , & ops ) )"		376159	1					
ANR	376171	Condition	"! parseOpcode ( str , & ops )"	1009:5:22683:22706	376159	0	True				
ANR	376172	UnaryOperationExpression	"! parseOpcode ( str , & ops )"		376159	0					
ANR	376173	UnaryOperator	!		376159	0					
ANR	376174	CallExpression	"parseOpcode ( str , & ops )"		376159	1					
ANR	376175	Callee	parseOpcode		376159	0					
ANR	376176	Identifier	parseOpcode		376159	0					
ANR	376177	ArgumentList	str		376159	1					
ANR	376178	Argument	str		376159	0					
ANR	376179	Identifier	str		376159	0					
ANR	376180	Argument	& ops		376159	1					
ANR	376181	UnaryOperationExpression	& ops		376159	0					
ANR	376182	UnaryOperator	&		376159	0					
ANR	376183	Identifier	ops		376159	1					
ANR	376184	CompoundStatement		3:31:50:50	376159	1					
ANR	376185	ReturnStatement	return false ;	1010:2:22713:22725	376159	0	True				
ANR	376186	Identifier	false		376159	0					
ANR	376187	IfStatement	"if ( ! strncmp ( str , ""mov"" , 3 ) )"		376159	2					
ANR	376188	Condition	"! strncmp ( str , ""mov"" , 3 )"	1013:5:22813:22836	376159	0	True				
ANR	376189	UnaryOperationExpression	"! strncmp ( str , ""mov"" , 3 )"		376159	0					
ANR	376190	UnaryOperator	!		376159	0					
ANR	376191	CallExpression	"strncmp ( str , ""mov"" , 3 )"		376159	1					
ANR	376192	Callee	strncmp		376159	0					
ANR	376193	Identifier	strncmp		376159	0					
ANR	376194	ArgumentList	str		376159	1					
ANR	376195	Argument	str		376159	0					
ANR	376196	Identifier	str		376159	0					
ANR	376197	Argument	"""mov"""		376159	1					
ANR	376198	PrimaryExpression	"""mov"""		376159	0					
ANR	376199	Argument	3		376159	2					
ANR	376200	PrimaryExpression	3		376159	0					
ANR	376201	CompoundStatement		7:31:180:180	376159	1					
ANR	376202	ExpressionStatement	* op = mov ( & ops )	1014:2:22843:22859	376159	0	True				
ANR	376203	AssignmentExpression	* op = mov ( & ops )		376159	0		=			
ANR	376204	UnaryOperationExpression	* op		376159	0					
ANR	376205	UnaryOperator	*		376159	0					
ANR	376206	Identifier	op		376159	1					
ANR	376207	CallExpression	mov ( & ops )		376159	1					
ANR	376208	Callee	mov		376159	0					
ANR	376209	Identifier	mov		376159	0					
ANR	376210	ArgumentList	& ops		376159	1					
ANR	376211	Argument	& ops		376159	0					
ANR	376212	UnaryOperationExpression	& ops		376159	0					
ANR	376213	UnaryOperator	&		376159	0					
ANR	376214	Identifier	ops		376159	1					
ANR	376215	ReturnStatement	return * op != - 1 ;	1015:2:22863:22879	376159	1	True				
ANR	376216	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376217	UnaryOperationExpression	* op		376159	0					
ANR	376218	UnaryOperator	*		376159	0					
ANR	376219	Identifier	op		376159	1					
ANR	376220	UnaryOperationExpression	- 1		376159	1					
ANR	376221	UnaryOperator	-		376159	0					
ANR	376222	PrimaryExpression	1		376159	1					
ANR	376223	IfStatement	"if ( ! strncmp ( str , ""cmp"" , 3 ) )"		376159	3					
ANR	376224	Condition	"! strncmp ( str , ""cmp"" , 3 )"	1017:5:22889:22912	376159	0	True				
ANR	376225	UnaryOperationExpression	"! strncmp ( str , ""cmp"" , 3 )"		376159	0					
ANR	376226	UnaryOperator	!		376159	0					
ANR	376227	CallExpression	"strncmp ( str , ""cmp"" , 3 )"		376159	1					
ANR	376228	Callee	strncmp		376159	0					
ANR	376229	Identifier	strncmp		376159	0					
ANR	376230	ArgumentList	str		376159	1					
ANR	376231	Argument	str		376159	0					
ANR	376232	Identifier	str		376159	0					
ANR	376233	Argument	"""cmp"""		376159	1					
ANR	376234	PrimaryExpression	"""cmp"""		376159	0					
ANR	376235	Argument	3		376159	2					
ANR	376236	PrimaryExpression	3		376159	0					
ANR	376237	CompoundStatement		11:31:256:256	376159	1					
ANR	376238	ExpressionStatement	* op = cmp ( & ops )	1018:2:22919:22935	376159	0	True				
ANR	376239	AssignmentExpression	* op = cmp ( & ops )		376159	0		=			
ANR	376240	UnaryOperationExpression	* op		376159	0					
ANR	376241	UnaryOperator	*		376159	0					
ANR	376242	Identifier	op		376159	1					
ANR	376243	CallExpression	cmp ( & ops )		376159	1					
ANR	376244	Callee	cmp		376159	0					
ANR	376245	Identifier	cmp		376159	0					
ANR	376246	ArgumentList	& ops		376159	1					
ANR	376247	Argument	& ops		376159	0					
ANR	376248	UnaryOperationExpression	& ops		376159	0					
ANR	376249	UnaryOperator	&		376159	0					
ANR	376250	Identifier	ops		376159	1					
ANR	376251	ReturnStatement	return * op != - 1 ;	1019:2:22939:22955	376159	1	True				
ANR	376252	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376253	UnaryOperationExpression	* op		376159	0					
ANR	376254	UnaryOperator	*		376159	0					
ANR	376255	Identifier	op		376159	1					
ANR	376256	UnaryOperationExpression	- 1		376159	1					
ANR	376257	UnaryOperator	-		376159	0					
ANR	376258	PrimaryExpression	1		376159	1					
ANR	376259	IfStatement	"if ( ! strncmp ( str , ""ldrb"" , 4 ) )"		376159	4					
ANR	376260	Condition	"! strncmp ( str , ""ldrb"" , 4 )"	1021:5:22965:22989	376159	0	True				
ANR	376261	UnaryOperationExpression	"! strncmp ( str , ""ldrb"" , 4 )"		376159	0					
ANR	376262	UnaryOperator	!		376159	0					
ANR	376263	CallExpression	"strncmp ( str , ""ldrb"" , 4 )"		376159	1					
ANR	376264	Callee	strncmp		376159	0					
ANR	376265	Identifier	strncmp		376159	0					
ANR	376266	ArgumentList	str		376159	1					
ANR	376267	Argument	str		376159	0					
ANR	376268	Identifier	str		376159	0					
ANR	376269	Argument	"""ldrb"""		376159	1					
ANR	376270	PrimaryExpression	"""ldrb"""		376159	0					
ANR	376271	Argument	4		376159	2					
ANR	376272	PrimaryExpression	4		376159	0					
ANR	376273	CompoundStatement		15:32:333:333	376159	1					
ANR	376274	ExpressionStatement	"* op = bytelsop ( & ops , 0x00004039 )"	1022:2:22996:23029	376159	0	True				
ANR	376275	AssignmentExpression	"* op = bytelsop ( & ops , 0x00004039 )"		376159	0		=			
ANR	376276	UnaryOperationExpression	* op		376159	0					
ANR	376277	UnaryOperator	*		376159	0					
ANR	376278	Identifier	op		376159	1					
ANR	376279	CallExpression	"bytelsop ( & ops , 0x00004039 )"		376159	1					
ANR	376280	Callee	bytelsop		376159	0					
ANR	376281	Identifier	bytelsop		376159	0					
ANR	376282	ArgumentList	& ops		376159	1					
ANR	376283	Argument	& ops		376159	0					
ANR	376284	UnaryOperationExpression	& ops		376159	0					
ANR	376285	UnaryOperator	&		376159	0					
ANR	376286	Identifier	ops		376159	1					
ANR	376287	Argument	0x00004039		376159	1					
ANR	376288	PrimaryExpression	0x00004039		376159	0					
ANR	376289	ReturnStatement	return * op != - 1 ;	1023:2:23033:23049	376159	1	True				
ANR	376290	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376291	UnaryOperationExpression	* op		376159	0					
ANR	376292	UnaryOperator	*		376159	0					
ANR	376293	Identifier	op		376159	1					
ANR	376294	UnaryOperationExpression	- 1		376159	1					
ANR	376295	UnaryOperator	-		376159	0					
ANR	376296	PrimaryExpression	1		376159	1					
ANR	376297	IfStatement	"if ( ! strncmp ( str , ""ldrh"" , 4 ) )"		376159	5					
ANR	376298	Condition	"! strncmp ( str , ""ldrh"" , 4 )"	1025:5:23059:23083	376159	0	True				
ANR	376299	UnaryOperationExpression	"! strncmp ( str , ""ldrh"" , 4 )"		376159	0					
ANR	376300	UnaryOperator	!		376159	0					
ANR	376301	CallExpression	"strncmp ( str , ""ldrh"" , 4 )"		376159	1					
ANR	376302	Callee	strncmp		376159	0					
ANR	376303	Identifier	strncmp		376159	0					
ANR	376304	ArgumentList	str		376159	1					
ANR	376305	Argument	str		376159	0					
ANR	376306	Identifier	str		376159	0					
ANR	376307	Argument	"""ldrh"""		376159	1					
ANR	376308	PrimaryExpression	"""ldrh"""		376159	0					
ANR	376309	Argument	4		376159	2					
ANR	376310	PrimaryExpression	4		376159	0					
ANR	376311	CompoundStatement		19:32:427:427	376159	1					
ANR	376312	ExpressionStatement	"* op = bytelsop ( & ops , 0x00004078 )"	1026:2:23090:23123	376159	0	True				
ANR	376313	AssignmentExpression	"* op = bytelsop ( & ops , 0x00004078 )"		376159	0		=			
ANR	376314	UnaryOperationExpression	* op		376159	0					
ANR	376315	UnaryOperator	*		376159	0					
ANR	376316	Identifier	op		376159	1					
ANR	376317	CallExpression	"bytelsop ( & ops , 0x00004078 )"		376159	1					
ANR	376318	Callee	bytelsop		376159	0					
ANR	376319	Identifier	bytelsop		376159	0					
ANR	376320	ArgumentList	& ops		376159	1					
ANR	376321	Argument	& ops		376159	0					
ANR	376322	UnaryOperationExpression	& ops		376159	0					
ANR	376323	UnaryOperator	&		376159	0					
ANR	376324	Identifier	ops		376159	1					
ANR	376325	Argument	0x00004078		376159	1					
ANR	376326	PrimaryExpression	0x00004078		376159	0					
ANR	376327	ReturnStatement	return * op != - 1 ;	1027:2:23127:23143	376159	1	True				
ANR	376328	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376329	UnaryOperationExpression	* op		376159	0					
ANR	376330	UnaryOperator	*		376159	0					
ANR	376331	Identifier	op		376159	1					
ANR	376332	UnaryOperationExpression	- 1		376159	1					
ANR	376333	UnaryOperator	-		376159	0					
ANR	376334	PrimaryExpression	1		376159	1					
ANR	376335	IfStatement	"if ( ! strncmp ( str , ""ldrsh"" , 5 ) )"		376159	6					
ANR	376336	Condition	"! strncmp ( str , ""ldrsh"" , 5 )"	1029:5:23153:23178	376159	0	True				
ANR	376337	UnaryOperationExpression	"! strncmp ( str , ""ldrsh"" , 5 )"		376159	0					
ANR	376338	UnaryOperator	!		376159	0					
ANR	376339	CallExpression	"strncmp ( str , ""ldrsh"" , 5 )"		376159	1					
ANR	376340	Callee	strncmp		376159	0					
ANR	376341	Identifier	strncmp		376159	0					
ANR	376342	ArgumentList	str		376159	1					
ANR	376343	Argument	str		376159	0					
ANR	376344	Identifier	str		376159	0					
ANR	376345	Argument	"""ldrsh"""		376159	1					
ANR	376346	PrimaryExpression	"""ldrsh"""		376159	0					
ANR	376347	Argument	5		376159	2					
ANR	376348	PrimaryExpression	5		376159	0					
ANR	376349	CompoundStatement		23:33:522:522	376159	1					
ANR	376350	ExpressionStatement	"* op = bytelsop ( & ops , 0x0000c078 )"	1030:2:23185:23218	376159	0	True				
ANR	376351	AssignmentExpression	"* op = bytelsop ( & ops , 0x0000c078 )"		376159	0		=			
ANR	376352	UnaryOperationExpression	* op		376159	0					
ANR	376353	UnaryOperator	*		376159	0					
ANR	376354	Identifier	op		376159	1					
ANR	376355	CallExpression	"bytelsop ( & ops , 0x0000c078 )"		376159	1					
ANR	376356	Callee	bytelsop		376159	0					
ANR	376357	Identifier	bytelsop		376159	0					
ANR	376358	ArgumentList	& ops		376159	1					
ANR	376359	Argument	& ops		376159	0					
ANR	376360	UnaryOperationExpression	& ops		376159	0					
ANR	376361	UnaryOperator	&		376159	0					
ANR	376362	Identifier	ops		376159	1					
ANR	376363	Argument	0x0000c078		376159	1					
ANR	376364	PrimaryExpression	0x0000c078		376159	0					
ANR	376365	ReturnStatement	return * op != - 1 ;	1031:2:23222:23238	376159	1	True				
ANR	376366	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376367	UnaryOperationExpression	* op		376159	0					
ANR	376368	UnaryOperator	*		376159	0					
ANR	376369	Identifier	op		376159	1					
ANR	376370	UnaryOperationExpression	- 1		376159	1					
ANR	376371	UnaryOperator	-		376159	0					
ANR	376372	PrimaryExpression	1		376159	1					
ANR	376373	IfStatement	"if ( ! strncmp ( str , ""ldrsw"" , 5 ) )"		376159	7					
ANR	376374	Condition	"! strncmp ( str , ""ldrsw"" , 5 )"	1033:5:23248:23273	376159	0	True				
ANR	376375	UnaryOperationExpression	"! strncmp ( str , ""ldrsw"" , 5 )"		376159	0					
ANR	376376	UnaryOperator	!		376159	0					
ANR	376377	CallExpression	"strncmp ( str , ""ldrsw"" , 5 )"		376159	1					
ANR	376378	Callee	strncmp		376159	0					
ANR	376379	Identifier	strncmp		376159	0					
ANR	376380	ArgumentList	str		376159	1					
ANR	376381	Argument	str		376159	0					
ANR	376382	Identifier	str		376159	0					
ANR	376383	Argument	"""ldrsw"""		376159	1					
ANR	376384	PrimaryExpression	"""ldrsw"""		376159	0					
ANR	376385	Argument	5		376159	2					
ANR	376386	PrimaryExpression	5		376159	0					
ANR	376387	CompoundStatement		27:33:617:617	376159	1					
ANR	376388	ExpressionStatement	"* op = bytelsop ( & ops , 0x000080b8 )"	1034:2:23280:23313	376159	0	True				
ANR	376389	AssignmentExpression	"* op = bytelsop ( & ops , 0x000080b8 )"		376159	0		=			
ANR	376390	UnaryOperationExpression	* op		376159	0					
ANR	376391	UnaryOperator	*		376159	0					
ANR	376392	Identifier	op		376159	1					
ANR	376393	CallExpression	"bytelsop ( & ops , 0x000080b8 )"		376159	1					
ANR	376394	Callee	bytelsop		376159	0					
ANR	376395	Identifier	bytelsop		376159	0					
ANR	376396	ArgumentList	& ops		376159	1					
ANR	376397	Argument	& ops		376159	0					
ANR	376398	UnaryOperationExpression	& ops		376159	0					
ANR	376399	UnaryOperator	&		376159	0					
ANR	376400	Identifier	ops		376159	1					
ANR	376401	Argument	0x000080b8		376159	1					
ANR	376402	PrimaryExpression	0x000080b8		376159	0					
ANR	376403	ReturnStatement	return * op != - 1 ;	1035:2:23317:23333	376159	1	True				
ANR	376404	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376405	UnaryOperationExpression	* op		376159	0					
ANR	376406	UnaryOperator	*		376159	0					
ANR	376407	Identifier	op		376159	1					
ANR	376408	UnaryOperationExpression	- 1		376159	1					
ANR	376409	UnaryOperator	-		376159	0					
ANR	376410	PrimaryExpression	1		376159	1					
ANR	376411	IfStatement	"if ( ! strncmp ( str , ""ldrsb"" , 5 ) )"		376159	8					
ANR	376412	Condition	"! strncmp ( str , ""ldrsb"" , 5 )"	1037:5:23343:23368	376159	0	True				
ANR	376413	UnaryOperationExpression	"! strncmp ( str , ""ldrsb"" , 5 )"		376159	0					
ANR	376414	UnaryOperator	!		376159	0					
ANR	376415	CallExpression	"strncmp ( str , ""ldrsb"" , 5 )"		376159	1					
ANR	376416	Callee	strncmp		376159	0					
ANR	376417	Identifier	strncmp		376159	0					
ANR	376418	ArgumentList	str		376159	1					
ANR	376419	Argument	str		376159	0					
ANR	376420	Identifier	str		376159	0					
ANR	376421	Argument	"""ldrsb"""		376159	1					
ANR	376422	PrimaryExpression	"""ldrsb"""		376159	0					
ANR	376423	Argument	5		376159	2					
ANR	376424	PrimaryExpression	5		376159	0					
ANR	376425	CompoundStatement		31:33:712:712	376159	1					
ANR	376426	ExpressionStatement	"* op = bytelsop ( & ops , 0x0000c039 )"	1038:2:23375:23408	376159	0	True				
ANR	376427	AssignmentExpression	"* op = bytelsop ( & ops , 0x0000c039 )"		376159	0		=			
ANR	376428	UnaryOperationExpression	* op		376159	0					
ANR	376429	UnaryOperator	*		376159	0					
ANR	376430	Identifier	op		376159	1					
ANR	376431	CallExpression	"bytelsop ( & ops , 0x0000c039 )"		376159	1					
ANR	376432	Callee	bytelsop		376159	0					
ANR	376433	Identifier	bytelsop		376159	0					
ANR	376434	ArgumentList	& ops		376159	1					
ANR	376435	Argument	& ops		376159	0					
ANR	376436	UnaryOperationExpression	& ops		376159	0					
ANR	376437	UnaryOperator	&		376159	0					
ANR	376438	Identifier	ops		376159	1					
ANR	376439	Argument	0x0000c039		376159	1					
ANR	376440	PrimaryExpression	0x0000c039		376159	0					
ANR	376441	ReturnStatement	return * op != - 1 ;	1039:2:23412:23428	376159	1	True				
ANR	376442	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376443	UnaryOperationExpression	* op		376159	0					
ANR	376444	UnaryOperator	*		376159	0					
ANR	376445	Identifier	op		376159	1					
ANR	376446	UnaryOperationExpression	- 1		376159	1					
ANR	376447	UnaryOperator	-		376159	0					
ANR	376448	PrimaryExpression	1		376159	1					
ANR	376449	IfStatement	"if ( ! strncmp ( str , ""strb"" , 4 ) )"		376159	9					
ANR	376450	Condition	"! strncmp ( str , ""strb"" , 4 )"	1041:5:23438:23462	376159	0	True				
ANR	376451	UnaryOperationExpression	"! strncmp ( str , ""strb"" , 4 )"		376159	0					
ANR	376452	UnaryOperator	!		376159	0					
ANR	376453	CallExpression	"strncmp ( str , ""strb"" , 4 )"		376159	1					
ANR	376454	Callee	strncmp		376159	0					
ANR	376455	Identifier	strncmp		376159	0					
ANR	376456	ArgumentList	str		376159	1					
ANR	376457	Argument	str		376159	0					
ANR	376458	Identifier	str		376159	0					
ANR	376459	Argument	"""strb"""		376159	1					
ANR	376460	PrimaryExpression	"""strb"""		376159	0					
ANR	376461	Argument	4		376159	2					
ANR	376462	PrimaryExpression	4		376159	0					
ANR	376463	CompoundStatement		35:32:806:806	376159	1					
ANR	376464	ExpressionStatement	"* op = bytelsop ( & ops , 0x00000039 )"	1042:2:23469:23502	376159	0	True				
ANR	376465	AssignmentExpression	"* op = bytelsop ( & ops , 0x00000039 )"		376159	0		=			
ANR	376466	UnaryOperationExpression	* op		376159	0					
ANR	376467	UnaryOperator	*		376159	0					
ANR	376468	Identifier	op		376159	1					
ANR	376469	CallExpression	"bytelsop ( & ops , 0x00000039 )"		376159	1					
ANR	376470	Callee	bytelsop		376159	0					
ANR	376471	Identifier	bytelsop		376159	0					
ANR	376472	ArgumentList	& ops		376159	1					
ANR	376473	Argument	& ops		376159	0					
ANR	376474	UnaryOperationExpression	& ops		376159	0					
ANR	376475	UnaryOperator	&		376159	0					
ANR	376476	Identifier	ops		376159	1					
ANR	376477	Argument	0x00000039		376159	1					
ANR	376478	PrimaryExpression	0x00000039		376159	0					
ANR	376479	ReturnStatement	return * op != - 1 ;	1043:2:23506:23522	376159	1	True				
ANR	376480	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376481	UnaryOperationExpression	* op		376159	0					
ANR	376482	UnaryOperator	*		376159	0					
ANR	376483	Identifier	op		376159	1					
ANR	376484	UnaryOperationExpression	- 1		376159	1					
ANR	376485	UnaryOperator	-		376159	0					
ANR	376486	PrimaryExpression	1		376159	1					
ANR	376487	IfStatement	"if ( ! strncmp ( str , ""strh"" , 4 ) )"		376159	10					
ANR	376488	Condition	"! strncmp ( str , ""strh"" , 4 )"	1045:5:23532:23556	376159	0	True				
ANR	376489	UnaryOperationExpression	"! strncmp ( str , ""strh"" , 4 )"		376159	0					
ANR	376490	UnaryOperator	!		376159	0					
ANR	376491	CallExpression	"strncmp ( str , ""strh"" , 4 )"		376159	1					
ANR	376492	Callee	strncmp		376159	0					
ANR	376493	Identifier	strncmp		376159	0					
ANR	376494	ArgumentList	str		376159	1					
ANR	376495	Argument	str		376159	0					
ANR	376496	Identifier	str		376159	0					
ANR	376497	Argument	"""strh"""		376159	1					
ANR	376498	PrimaryExpression	"""strh"""		376159	0					
ANR	376499	Argument	4		376159	2					
ANR	376500	PrimaryExpression	4		376159	0					
ANR	376501	CompoundStatement		39:32:900:900	376159	1					
ANR	376502	ExpressionStatement	"* op = bytelsop ( & ops , 0x00000078 )"	1046:2:23563:23596	376159	0	True				
ANR	376503	AssignmentExpression	"* op = bytelsop ( & ops , 0x00000078 )"		376159	0		=			
ANR	376504	UnaryOperationExpression	* op		376159	0					
ANR	376505	UnaryOperator	*		376159	0					
ANR	376506	Identifier	op		376159	1					
ANR	376507	CallExpression	"bytelsop ( & ops , 0x00000078 )"		376159	1					
ANR	376508	Callee	bytelsop		376159	0					
ANR	376509	Identifier	bytelsop		376159	0					
ANR	376510	ArgumentList	& ops		376159	1					
ANR	376511	Argument	& ops		376159	0					
ANR	376512	UnaryOperationExpression	& ops		376159	0					
ANR	376513	UnaryOperator	&		376159	0					
ANR	376514	Identifier	ops		376159	1					
ANR	376515	Argument	0x00000078		376159	1					
ANR	376516	PrimaryExpression	0x00000078		376159	0					
ANR	376517	ReturnStatement	return * op != - 1 ;	1047:2:23600:23616	376159	1	True				
ANR	376518	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376519	UnaryOperationExpression	* op		376159	0					
ANR	376520	UnaryOperator	*		376159	0					
ANR	376521	Identifier	op		376159	1					
ANR	376522	UnaryOperationExpression	- 1		376159	1					
ANR	376523	UnaryOperator	-		376159	0					
ANR	376524	PrimaryExpression	1		376159	1					
ANR	376525	IfStatement	"if ( ! strncmp ( str , ""ldr"" , 3 ) )"		376159	11					
ANR	376526	Condition	"! strncmp ( str , ""ldr"" , 3 )"	1049:5:23626:23649	376159	0	True				
ANR	376527	UnaryOperationExpression	"! strncmp ( str , ""ldr"" , 3 )"		376159	0					
ANR	376528	UnaryOperator	!		376159	0					
ANR	376529	CallExpression	"strncmp ( str , ""ldr"" , 3 )"		376159	1					
ANR	376530	Callee	strncmp		376159	0					
ANR	376531	Identifier	strncmp		376159	0					
ANR	376532	ArgumentList	str		376159	1					
ANR	376533	Argument	str		376159	0					
ANR	376534	Identifier	str		376159	0					
ANR	376535	Argument	"""ldr"""		376159	1					
ANR	376536	PrimaryExpression	"""ldr"""		376159	0					
ANR	376537	Argument	3		376159	2					
ANR	376538	PrimaryExpression	3		376159	0					
ANR	376539	CompoundStatement		43:31:993:993	376159	1					
ANR	376540	ExpressionStatement	"* op = reglsop ( & ops , 0x000040f8 )"	1050:2:23656:23688	376159	0	True				
ANR	376541	AssignmentExpression	"* op = reglsop ( & ops , 0x000040f8 )"		376159	0		=			
ANR	376542	UnaryOperationExpression	* op		376159	0					
ANR	376543	UnaryOperator	*		376159	0					
ANR	376544	Identifier	op		376159	1					
ANR	376545	CallExpression	"reglsop ( & ops , 0x000040f8 )"		376159	1					
ANR	376546	Callee	reglsop		376159	0					
ANR	376547	Identifier	reglsop		376159	0					
ANR	376548	ArgumentList	& ops		376159	1					
ANR	376549	Argument	& ops		376159	0					
ANR	376550	UnaryOperationExpression	& ops		376159	0					
ANR	376551	UnaryOperator	&		376159	0					
ANR	376552	Identifier	ops		376159	1					
ANR	376553	Argument	0x000040f8		376159	1					
ANR	376554	PrimaryExpression	0x000040f8		376159	0					
ANR	376555	ReturnStatement	return * op != - 1 ;	1051:2:23692:23708	376159	1	True				
ANR	376556	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376557	UnaryOperationExpression	* op		376159	0					
ANR	376558	UnaryOperator	*		376159	0					
ANR	376559	Identifier	op		376159	1					
ANR	376560	UnaryOperationExpression	- 1		376159	1					
ANR	376561	UnaryOperator	-		376159	0					
ANR	376562	PrimaryExpression	1		376159	1					
ANR	376563	IfStatement	"if ( ! strncmp ( str , ""stur"" , 4 ) )"		376159	12					
ANR	376564	Condition	"! strncmp ( str , ""stur"" , 4 )"	1053:5:23718:23742	376159	0	True				
ANR	376565	UnaryOperationExpression	"! strncmp ( str , ""stur"" , 4 )"		376159	0					
ANR	376566	UnaryOperator	!		376159	0					
ANR	376567	CallExpression	"strncmp ( str , ""stur"" , 4 )"		376159	1					
ANR	376568	Callee	strncmp		376159	0					
ANR	376569	Identifier	strncmp		376159	0					
ANR	376570	ArgumentList	str		376159	1					
ANR	376571	Argument	str		376159	0					
ANR	376572	Identifier	str		376159	0					
ANR	376573	Argument	"""stur"""		376159	1					
ANR	376574	PrimaryExpression	"""stur"""		376159	0					
ANR	376575	Argument	4		376159	2					
ANR	376576	PrimaryExpression	4		376159	0					
ANR	376577	CompoundStatement		47:32:1086:1086	376159	1					
ANR	376578	ExpressionStatement	"* op = regsluop ( & ops , 0x000000f8 )"	1054:2:23749:23782	376159	0	True				
ANR	376579	AssignmentExpression	"* op = regsluop ( & ops , 0x000000f8 )"		376159	0		=			
ANR	376580	UnaryOperationExpression	* op		376159	0					
ANR	376581	UnaryOperator	*		376159	0					
ANR	376582	Identifier	op		376159	1					
ANR	376583	CallExpression	"regsluop ( & ops , 0x000000f8 )"		376159	1					
ANR	376584	Callee	regsluop		376159	0					
ANR	376585	Identifier	regsluop		376159	0					
ANR	376586	ArgumentList	& ops		376159	1					
ANR	376587	Argument	& ops		376159	0					
ANR	376588	UnaryOperationExpression	& ops		376159	0					
ANR	376589	UnaryOperator	&		376159	0					
ANR	376590	Identifier	ops		376159	1					
ANR	376591	Argument	0x000000f8		376159	1					
ANR	376592	PrimaryExpression	0x000000f8		376159	0					
ANR	376593	ReturnStatement	return * op != - 1 ;	1055:2:23786:23802	376159	1	True				
ANR	376594	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376595	UnaryOperationExpression	* op		376159	0					
ANR	376596	UnaryOperator	*		376159	0					
ANR	376597	Identifier	op		376159	1					
ANR	376598	UnaryOperationExpression	- 1		376159	1					
ANR	376599	UnaryOperator	-		376159	0					
ANR	376600	PrimaryExpression	1		376159	1					
ANR	376601	IfStatement	"if ( ! strncmp ( str , ""ldur"" , 4 ) )"		376159	13					
ANR	376602	Condition	"! strncmp ( str , ""ldur"" , 4 )"	1057:5:23812:23836	376159	0	True				
ANR	376603	UnaryOperationExpression	"! strncmp ( str , ""ldur"" , 4 )"		376159	0					
ANR	376604	UnaryOperator	!		376159	0					
ANR	376605	CallExpression	"strncmp ( str , ""ldur"" , 4 )"		376159	1					
ANR	376606	Callee	strncmp		376159	0					
ANR	376607	Identifier	strncmp		376159	0					
ANR	376608	ArgumentList	str		376159	1					
ANR	376609	Argument	str		376159	0					
ANR	376610	Identifier	str		376159	0					
ANR	376611	Argument	"""ldur"""		376159	1					
ANR	376612	PrimaryExpression	"""ldur"""		376159	0					
ANR	376613	Argument	4		376159	2					
ANR	376614	PrimaryExpression	4		376159	0					
ANR	376615	CompoundStatement		51:32:1180:1180	376159	1					
ANR	376616	ExpressionStatement	"* op = regsluop ( & ops , 0x000040f8 )"	1058:2:23843:23876	376159	0	True				
ANR	376617	AssignmentExpression	"* op = regsluop ( & ops , 0x000040f8 )"		376159	0		=			
ANR	376618	UnaryOperationExpression	* op		376159	0					
ANR	376619	UnaryOperator	*		376159	0					
ANR	376620	Identifier	op		376159	1					
ANR	376621	CallExpression	"regsluop ( & ops , 0x000040f8 )"		376159	1					
ANR	376622	Callee	regsluop		376159	0					
ANR	376623	Identifier	regsluop		376159	0					
ANR	376624	ArgumentList	& ops		376159	1					
ANR	376625	Argument	& ops		376159	0					
ANR	376626	UnaryOperationExpression	& ops		376159	0					
ANR	376627	UnaryOperator	&		376159	0					
ANR	376628	Identifier	ops		376159	1					
ANR	376629	Argument	0x000040f8		376159	1					
ANR	376630	PrimaryExpression	0x000040f8		376159	0					
ANR	376631	ReturnStatement	return * op != - 1 ;	1059:2:23880:23896	376159	1	True				
ANR	376632	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376633	UnaryOperationExpression	* op		376159	0					
ANR	376634	UnaryOperator	*		376159	0					
ANR	376635	Identifier	op		376159	1					
ANR	376636	UnaryOperationExpression	- 1		376159	1					
ANR	376637	UnaryOperator	-		376159	0					
ANR	376638	PrimaryExpression	1		376159	1					
ANR	376639	IfStatement	"if ( ! strncmp ( str , ""str"" , 3 ) )"		376159	14					
ANR	376640	Condition	"! strncmp ( str , ""str"" , 3 )"	1061:5:23906:23929	376159	0	True				
ANR	376641	UnaryOperationExpression	"! strncmp ( str , ""str"" , 3 )"		376159	0					
ANR	376642	UnaryOperator	!		376159	0					
ANR	376643	CallExpression	"strncmp ( str , ""str"" , 3 )"		376159	1					
ANR	376644	Callee	strncmp		376159	0					
ANR	376645	Identifier	strncmp		376159	0					
ANR	376646	ArgumentList	str		376159	1					
ANR	376647	Argument	str		376159	0					
ANR	376648	Identifier	str		376159	0					
ANR	376649	Argument	"""str"""		376159	1					
ANR	376650	PrimaryExpression	"""str"""		376159	0					
ANR	376651	Argument	3		376159	2					
ANR	376652	PrimaryExpression	3		376159	0					
ANR	376653	CompoundStatement		55:31:1273:1273	376159	1					
ANR	376654	ExpressionStatement	"* op = reglsop ( & ops , 0x000000f8 )"	1062:2:23936:23968	376159	0	True				
ANR	376655	AssignmentExpression	"* op = reglsop ( & ops , 0x000000f8 )"		376159	0		=			
ANR	376656	UnaryOperationExpression	* op		376159	0					
ANR	376657	UnaryOperator	*		376159	0					
ANR	376658	Identifier	op		376159	1					
ANR	376659	CallExpression	"reglsop ( & ops , 0x000000f8 )"		376159	1					
ANR	376660	Callee	reglsop		376159	0					
ANR	376661	Identifier	reglsop		376159	0					
ANR	376662	ArgumentList	& ops		376159	1					
ANR	376663	Argument	& ops		376159	0					
ANR	376664	UnaryOperationExpression	& ops		376159	0					
ANR	376665	UnaryOperator	&		376159	0					
ANR	376666	Identifier	ops		376159	1					
ANR	376667	Argument	0x000000f8		376159	1					
ANR	376668	PrimaryExpression	0x000000f8		376159	0					
ANR	376669	ReturnStatement	return * op != - 1 ;	1063:2:23972:23988	376159	1	True				
ANR	376670	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376671	UnaryOperationExpression	* op		376159	0					
ANR	376672	UnaryOperator	*		376159	0					
ANR	376673	Identifier	op		376159	1					
ANR	376674	UnaryOperationExpression	- 1		376159	1					
ANR	376675	UnaryOperator	-		376159	0					
ANR	376676	PrimaryExpression	1		376159	1					
ANR	376677	IfStatement	"if ( ! strncmp ( str , ""stp"" , 3 ) )"		376159	15					
ANR	376678	Condition	"! strncmp ( str , ""stp"" , 3 )"	1065:5:23998:24021	376159	0	True				
ANR	376679	UnaryOperationExpression	"! strncmp ( str , ""stp"" , 3 )"		376159	0					
ANR	376680	UnaryOperator	!		376159	0					
ANR	376681	CallExpression	"strncmp ( str , ""stp"" , 3 )"		376159	1					
ANR	376682	Callee	strncmp		376159	0					
ANR	376683	Identifier	strncmp		376159	0					
ANR	376684	ArgumentList	str		376159	1					
ANR	376685	Argument	str		376159	0					
ANR	376686	Identifier	str		376159	0					
ANR	376687	Argument	"""stp"""		376159	1					
ANR	376688	PrimaryExpression	"""stp"""		376159	0					
ANR	376689	Argument	3		376159	2					
ANR	376690	PrimaryExpression	3		376159	0					
ANR	376691	CompoundStatement		59:31:1365:1365	376159	1					
ANR	376692	ExpressionStatement	"* op = stp ( & ops , 0x000000a9 )"	1066:2:24028:24056	376159	0	True				
ANR	376693	AssignmentExpression	"* op = stp ( & ops , 0x000000a9 )"		376159	0		=			
ANR	376694	UnaryOperationExpression	* op		376159	0					
ANR	376695	UnaryOperator	*		376159	0					
ANR	376696	Identifier	op		376159	1					
ANR	376697	CallExpression	"stp ( & ops , 0x000000a9 )"		376159	1					
ANR	376698	Callee	stp		376159	0					
ANR	376699	Identifier	stp		376159	0					
ANR	376700	ArgumentList	& ops		376159	1					
ANR	376701	Argument	& ops		376159	0					
ANR	376702	UnaryOperationExpression	& ops		376159	0					
ANR	376703	UnaryOperator	&		376159	0					
ANR	376704	Identifier	ops		376159	1					
ANR	376705	Argument	0x000000a9		376159	1					
ANR	376706	PrimaryExpression	0x000000a9		376159	0					
ANR	376707	ReturnStatement	return * op != - 1 ;	1067:2:24060:24076	376159	1	True				
ANR	376708	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376709	UnaryOperationExpression	* op		376159	0					
ANR	376710	UnaryOperator	*		376159	0					
ANR	376711	Identifier	op		376159	1					
ANR	376712	UnaryOperationExpression	- 1		376159	1					
ANR	376713	UnaryOperator	-		376159	0					
ANR	376714	PrimaryExpression	1		376159	1					
ANR	376715	IfStatement	"if ( ! strncmp ( str , ""ldp"" , 3 ) )"		376159	16					
ANR	376716	Condition	"! strncmp ( str , ""ldp"" , 3 )"	1069:5:24086:24109	376159	0	True				
ANR	376717	UnaryOperationExpression	"! strncmp ( str , ""ldp"" , 3 )"		376159	0					
ANR	376718	UnaryOperator	!		376159	0					
ANR	376719	CallExpression	"strncmp ( str , ""ldp"" , 3 )"		376159	1					
ANR	376720	Callee	strncmp		376159	0					
ANR	376721	Identifier	strncmp		376159	0					
ANR	376722	ArgumentList	str		376159	1					
ANR	376723	Argument	str		376159	0					
ANR	376724	Identifier	str		376159	0					
ANR	376725	Argument	"""ldp"""		376159	1					
ANR	376726	PrimaryExpression	"""ldp"""		376159	0					
ANR	376727	Argument	3		376159	2					
ANR	376728	PrimaryExpression	3		376159	0					
ANR	376729	CompoundStatement		63:31:1453:1453	376159	1					
ANR	376730	ExpressionStatement	"* op = stp ( & ops , 0x000040a9 )"	1070:2:24116:24144	376159	0	True				
ANR	376731	AssignmentExpression	"* op = stp ( & ops , 0x000040a9 )"		376159	0		=			
ANR	376732	UnaryOperationExpression	* op		376159	0					
ANR	376733	UnaryOperator	*		376159	0					
ANR	376734	Identifier	op		376159	1					
ANR	376735	CallExpression	"stp ( & ops , 0x000040a9 )"		376159	1					
ANR	376736	Callee	stp		376159	0					
ANR	376737	Identifier	stp		376159	0					
ANR	376738	ArgumentList	& ops		376159	1					
ANR	376739	Argument	& ops		376159	0					
ANR	376740	UnaryOperationExpression	& ops		376159	0					
ANR	376741	UnaryOperator	&		376159	0					
ANR	376742	Identifier	ops		376159	1					
ANR	376743	Argument	0x000040a9		376159	1					
ANR	376744	PrimaryExpression	0x000040a9		376159	0					
ANR	376745	ReturnStatement	return * op != - 1 ;	1071:2:24148:24164	376159	1	True				
ANR	376746	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376747	UnaryOperationExpression	* op		376159	0					
ANR	376748	UnaryOperator	*		376159	0					
ANR	376749	Identifier	op		376159	1					
ANR	376750	UnaryOperationExpression	- 1		376159	1					
ANR	376751	UnaryOperator	-		376159	0					
ANR	376752	PrimaryExpression	1		376159	1					
ANR	376753	IfStatement	"if ( ! strncmp ( str , ""sub"" , 3 ) )"		376159	17					
ANR	376754	Condition	"! strncmp ( str , ""sub"" , 3 )"	1073:5:24174:24197	376159	0	True				
ANR	376755	UnaryOperationExpression	"! strncmp ( str , ""sub"" , 3 )"		376159	0					
ANR	376756	UnaryOperator	!		376159	0					
ANR	376757	CallExpression	"strncmp ( str , ""sub"" , 3 )"		376159	1					
ANR	376758	Callee	strncmp		376159	0					
ANR	376759	Identifier	strncmp		376159	0					
ANR	376760	ArgumentList	str		376159	1					
ANR	376761	Argument	str		376159	0					
ANR	376762	Identifier	str		376159	0					
ANR	376763	Argument	"""sub"""		376159	1					
ANR	376764	PrimaryExpression	"""sub"""		376159	0					
ANR	376765	Argument	3		376159	2					
ANR	376766	PrimaryExpression	3		376159	0					
ANR	376767	CompoundStatement		67:31:1541:1541	376159	1					
ANR	376768	ExpressionStatement	"* op = arithmetic ( & ops , 0xd1 )"	1074:2:24209:24238	376159	0	True				
ANR	376769	AssignmentExpression	"* op = arithmetic ( & ops , 0xd1 )"		376159	0		=			
ANR	376770	UnaryOperationExpression	* op		376159	0					
ANR	376771	UnaryOperator	*		376159	0					
ANR	376772	Identifier	op		376159	1					
ANR	376773	CallExpression	"arithmetic ( & ops , 0xd1 )"		376159	1					
ANR	376774	Callee	arithmetic		376159	0					
ANR	376775	Identifier	arithmetic		376159	0					
ANR	376776	ArgumentList	& ops		376159	1					
ANR	376777	Argument	& ops		376159	0					
ANR	376778	UnaryOperationExpression	& ops		376159	0					
ANR	376779	UnaryOperator	&		376159	0					
ANR	376780	Identifier	ops		376159	1					
ANR	376781	Argument	0xd1		376159	1					
ANR	376782	PrimaryExpression	0xd1		376159	0					
ANR	376783	ReturnStatement	return * op != - 1 ;	1075:2:24242:24258	376159	1	True				
ANR	376784	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376785	UnaryOperationExpression	* op		376159	0					
ANR	376786	UnaryOperator	*		376159	0					
ANR	376787	Identifier	op		376159	1					
ANR	376788	UnaryOperationExpression	- 1		376159	1					
ANR	376789	UnaryOperator	-		376159	0					
ANR	376790	PrimaryExpression	1		376159	1					
ANR	376791	IfStatement	"if ( ! strncmp ( str , ""add x"" , 5 ) )"		376159	18					
ANR	376792	Condition	"! strncmp ( str , ""add x"" , 5 )"	1077:5:24268:24293	376159	0	True				
ANR	376793	UnaryOperationExpression	"! strncmp ( str , ""add x"" , 5 )"		376159	0					
ANR	376794	UnaryOperator	!		376159	0					
ANR	376795	CallExpression	"strncmp ( str , ""add x"" , 5 )"		376159	1					
ANR	376796	Callee	strncmp		376159	0					
ANR	376797	Identifier	strncmp		376159	0					
ANR	376798	ArgumentList	str		376159	1					
ANR	376799	Argument	str		376159	0					
ANR	376800	Identifier	str		376159	0					
ANR	376801	Argument	"""add x"""		376159	1					
ANR	376802	PrimaryExpression	"""add x"""		376159	0					
ANR	376803	Argument	5		376159	2					
ANR	376804	PrimaryExpression	5		376159	0					
ANR	376805	CompoundStatement		71:33:1637:1637	376159	1					
ANR	376806	ExpressionStatement	"* op = arithmetic ( & ops , 0x91 )"	1078:2:24300:24329	376159	0	True				
ANR	376807	AssignmentExpression	"* op = arithmetic ( & ops , 0x91 )"		376159	0		=			
ANR	376808	UnaryOperationExpression	* op		376159	0					
ANR	376809	UnaryOperator	*		376159	0					
ANR	376810	Identifier	op		376159	1					
ANR	376811	CallExpression	"arithmetic ( & ops , 0x91 )"		376159	1					
ANR	376812	Callee	arithmetic		376159	0					
ANR	376813	Identifier	arithmetic		376159	0					
ANR	376814	ArgumentList	& ops		376159	1					
ANR	376815	Argument	& ops		376159	0					
ANR	376816	UnaryOperationExpression	& ops		376159	0					
ANR	376817	UnaryOperator	&		376159	0					
ANR	376818	Identifier	ops		376159	1					
ANR	376819	Argument	0x91		376159	1					
ANR	376820	PrimaryExpression	0x91		376159	0					
ANR	376821	ReturnStatement	return * op != - 1 ;	1079:2:24333:24349	376159	1	True				
ANR	376822	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376823	UnaryOperationExpression	* op		376159	0					
ANR	376824	UnaryOperator	*		376159	0					
ANR	376825	Identifier	op		376159	1					
ANR	376826	UnaryOperationExpression	- 1		376159	1					
ANR	376827	UnaryOperator	-		376159	0					
ANR	376828	PrimaryExpression	1		376159	1					
ANR	376829	IfStatement	"if ( ! strncmp ( str , ""add w"" , 5 ) )"		376159	19					
ANR	376830	Condition	"! strncmp ( str , ""add w"" , 5 )"	1081:5:24359:24384	376159	0	True				
ANR	376831	UnaryOperationExpression	"! strncmp ( str , ""add w"" , 5 )"		376159	0					
ANR	376832	UnaryOperator	!		376159	0					
ANR	376833	CallExpression	"strncmp ( str , ""add w"" , 5 )"		376159	1					
ANR	376834	Callee	strncmp		376159	0					
ANR	376835	Identifier	strncmp		376159	0					
ANR	376836	ArgumentList	str		376159	1					
ANR	376837	Argument	str		376159	0					
ANR	376838	Identifier	str		376159	0					
ANR	376839	Argument	"""add w"""		376159	1					
ANR	376840	PrimaryExpression	"""add w"""		376159	0					
ANR	376841	Argument	5		376159	2					
ANR	376842	PrimaryExpression	5		376159	0					
ANR	376843	CompoundStatement		75:33:1728:1728	376159	1					
ANR	376844	ExpressionStatement	"* op = arithmetic ( & ops , 0x11 )"	1082:2:24391:24420	376159	0	True				
ANR	376845	AssignmentExpression	"* op = arithmetic ( & ops , 0x11 )"		376159	0		=			
ANR	376846	UnaryOperationExpression	* op		376159	0					
ANR	376847	UnaryOperator	*		376159	0					
ANR	376848	Identifier	op		376159	1					
ANR	376849	CallExpression	"arithmetic ( & ops , 0x11 )"		376159	1					
ANR	376850	Callee	arithmetic		376159	0					
ANR	376851	Identifier	arithmetic		376159	0					
ANR	376852	ArgumentList	& ops		376159	1					
ANR	376853	Argument	& ops		376159	0					
ANR	376854	UnaryOperationExpression	& ops		376159	0					
ANR	376855	UnaryOperator	&		376159	0					
ANR	376856	Identifier	ops		376159	1					
ANR	376857	Argument	0x11		376159	1					
ANR	376858	PrimaryExpression	0x11		376159	0					
ANR	376859	ReturnStatement	return * op != - 1 ;	1083:2:24424:24440	376159	1	True				
ANR	376860	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376861	UnaryOperationExpression	* op		376159	0					
ANR	376862	UnaryOperator	*		376159	0					
ANR	376863	Identifier	op		376159	1					
ANR	376864	UnaryOperationExpression	- 1		376159	1					
ANR	376865	UnaryOperator	-		376159	0					
ANR	376866	PrimaryExpression	1		376159	1					
ANR	376867	IfStatement	"if ( ! strncmp ( str , ""adr x"" , 5 ) )"		376159	20					
ANR	376868	Condition	"! strncmp ( str , ""adr x"" , 5 )"	1085:5:24450:24475	376159	0	True				
ANR	376869	UnaryOperationExpression	"! strncmp ( str , ""adr x"" , 5 )"		376159	0					
ANR	376870	UnaryOperator	!		376159	0					
ANR	376871	CallExpression	"strncmp ( str , ""adr x"" , 5 )"		376159	1					
ANR	376872	Callee	strncmp		376159	0					
ANR	376873	Identifier	strncmp		376159	0					
ANR	376874	ArgumentList	str		376159	1					
ANR	376875	Argument	str		376159	0					
ANR	376876	Identifier	str		376159	0					
ANR	376877	Argument	"""adr x"""		376159	1					
ANR	376878	PrimaryExpression	"""adr x"""		376159	0					
ANR	376879	Argument	5		376159	2					
ANR	376880	PrimaryExpression	5		376159	0					
ANR	376881	CompoundStatement		79:33:1819:1819	376159	1					
ANR	376882	ExpressionStatement	"* op = adr ( & ops , addr )"	1086:2:24487:24509	376159	0	True				
ANR	376883	AssignmentExpression	"* op = adr ( & ops , addr )"		376159	0		=			
ANR	376884	UnaryOperationExpression	* op		376159	0					
ANR	376885	UnaryOperator	*		376159	0					
ANR	376886	Identifier	op		376159	1					
ANR	376887	CallExpression	"adr ( & ops , addr )"		376159	1					
ANR	376888	Callee	adr		376159	0					
ANR	376889	Identifier	adr		376159	0					
ANR	376890	ArgumentList	& ops		376159	1					
ANR	376891	Argument	& ops		376159	0					
ANR	376892	UnaryOperationExpression	& ops		376159	0					
ANR	376893	UnaryOperator	&		376159	0					
ANR	376894	Identifier	ops		376159	1					
ANR	376895	Argument	addr		376159	1					
ANR	376896	Identifier	addr		376159	0					
ANR	376897	ReturnStatement	return * op != - 1 ;	1087:2:24513:24529	376159	1	True				
ANR	376898	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376899	UnaryOperationExpression	* op		376159	0					
ANR	376900	UnaryOperator	*		376159	0					
ANR	376901	Identifier	op		376159	1					
ANR	376902	UnaryOperationExpression	- 1		376159	1					
ANR	376903	UnaryOperator	-		376159	0					
ANR	376904	PrimaryExpression	1		376159	1					
ANR	376905	IfStatement	"if ( ! strncmp ( str , ""adrp x"" , 6 ) )"		376159	21					
ANR	376906	Condition	"! strncmp ( str , ""adrp x"" , 6 )"	1089:5:24539:24565	376159	0	True				
ANR	376907	UnaryOperationExpression	"! strncmp ( str , ""adrp x"" , 6 )"		376159	0					
ANR	376908	UnaryOperator	!		376159	0					
ANR	376909	CallExpression	"strncmp ( str , ""adrp x"" , 6 )"		376159	1					
ANR	376910	Callee	strncmp		376159	0					
ANR	376911	Identifier	strncmp		376159	0					
ANR	376912	ArgumentList	str		376159	1					
ANR	376913	Argument	str		376159	0					
ANR	376914	Identifier	str		376159	0					
ANR	376915	Argument	"""adrp x"""		376159	1					
ANR	376916	PrimaryExpression	"""adrp x"""		376159	0					
ANR	376917	Argument	6		376159	2					
ANR	376918	PrimaryExpression	6		376159	0					
ANR	376919	CompoundStatement		83:34:1909:1909	376159	1					
ANR	376920	ExpressionStatement	"* op = adrp ( & ops , addr , 0x00000090 )"	1090:2:24572:24607	376159	0	True				
ANR	376921	AssignmentExpression	"* op = adrp ( & ops , addr , 0x00000090 )"		376159	0		=			
ANR	376922	UnaryOperationExpression	* op		376159	0					
ANR	376923	UnaryOperator	*		376159	0					
ANR	376924	Identifier	op		376159	1					
ANR	376925	CallExpression	"adrp ( & ops , addr , 0x00000090 )"		376159	1					
ANR	376926	Callee	adrp		376159	0					
ANR	376927	Identifier	adrp		376159	0					
ANR	376928	ArgumentList	& ops		376159	1					
ANR	376929	Argument	& ops		376159	0					
ANR	376930	UnaryOperationExpression	& ops		376159	0					
ANR	376931	UnaryOperator	&		376159	0					
ANR	376932	Identifier	ops		376159	1					
ANR	376933	Argument	addr		376159	1					
ANR	376934	Identifier	addr		376159	0					
ANR	376935	Argument	0x00000090		376159	2					
ANR	376936	PrimaryExpression	0x00000090		376159	0					
ANR	376937	ReturnStatement	return * op != - 1 ;	1091:2:24611:24627	376159	1	True				
ANR	376938	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376939	UnaryOperationExpression	* op		376159	0					
ANR	376940	UnaryOperator	*		376159	0					
ANR	376941	Identifier	op		376159	1					
ANR	376942	UnaryOperationExpression	- 1		376159	1					
ANR	376943	UnaryOperator	-		376159	0					
ANR	376944	PrimaryExpression	1		376159	1					
ANR	376945	IfStatement	"if ( ! strncmp ( str , ""neg"" , 3 ) )"		376159	22					
ANR	376946	Condition	"! strncmp ( str , ""neg"" , 3 )"	1093:5:24637:24660	376159	0	True				
ANR	376947	UnaryOperationExpression	"! strncmp ( str , ""neg"" , 3 )"		376159	0					
ANR	376948	UnaryOperator	!		376159	0					
ANR	376949	CallExpression	"strncmp ( str , ""neg"" , 3 )"		376159	1					
ANR	376950	Callee	strncmp		376159	0					
ANR	376951	Identifier	strncmp		376159	0					
ANR	376952	ArgumentList	str		376159	1					
ANR	376953	Argument	str		376159	0					
ANR	376954	Identifier	str		376159	0					
ANR	376955	Argument	"""neg"""		376159	1					
ANR	376956	PrimaryExpression	"""neg"""		376159	0					
ANR	376957	Argument	3		376159	2					
ANR	376958	PrimaryExpression	3		376159	0					
ANR	376959	CompoundStatement		87:31:2004:2004	376159	1					
ANR	376960	ExpressionStatement	* op = neg ( & ops )	1094:2:24667:24683	376159	0	True				
ANR	376961	AssignmentExpression	* op = neg ( & ops )		376159	0		=			
ANR	376962	UnaryOperationExpression	* op		376159	0					
ANR	376963	UnaryOperator	*		376159	0					
ANR	376964	Identifier	op		376159	1					
ANR	376965	CallExpression	neg ( & ops )		376159	1					
ANR	376966	Callee	neg		376159	0					
ANR	376967	Identifier	neg		376159	0					
ANR	376968	ArgumentList	& ops		376159	1					
ANR	376969	Argument	& ops		376159	0					
ANR	376970	UnaryOperationExpression	& ops		376159	0					
ANR	376971	UnaryOperator	&		376159	0					
ANR	376972	Identifier	ops		376159	1					
ANR	376973	ReturnStatement	return * op != - 1 ;	1095:2:24687:24703	376159	1	True				
ANR	376974	EqualityExpression	* op != - 1		376159	0		!=			
ANR	376975	UnaryOperationExpression	* op		376159	0					
ANR	376976	UnaryOperator	*		376159	0					
ANR	376977	Identifier	op		376159	1					
ANR	376978	UnaryOperationExpression	- 1		376159	1					
ANR	376979	UnaryOperator	-		376159	0					
ANR	376980	PrimaryExpression	1		376159	1					
ANR	376981	IfStatement	"if ( ! strcmp ( str , ""isb"" ) )"		376159	23					
ANR	376982	Condition	"! strcmp ( str , ""isb"" )"	1097:5:24713:24732	376159	0	True				
ANR	376983	UnaryOperationExpression	"! strcmp ( str , ""isb"" )"		376159	0					
ANR	376984	UnaryOperator	!		376159	0					
ANR	376985	CallExpression	"strcmp ( str , ""isb"" )"		376159	1					
ANR	376986	Callee	strcmp		376159	0					
ANR	376987	Identifier	strcmp		376159	0					
ANR	376988	ArgumentList	str		376159	1					
ANR	376989	Argument	str		376159	0					
ANR	376990	Identifier	str		376159	0					
ANR	376991	Argument	"""isb"""		376159	1					
ANR	376992	PrimaryExpression	"""isb"""		376159	0					
ANR	376993	CompoundStatement		91:27:2076:2076	376159	1					
ANR	376994	ExpressionStatement	* op = 0xdf3f03d5	1098:2:24739:24755	376159	0	True				
ANR	376995	AssignmentExpression	* op = 0xdf3f03d5		376159	0		=			
ANR	376996	UnaryOperationExpression	* op		376159	0					
ANR	376997	UnaryOperator	*		376159	0					
ANR	376998	Identifier	op		376159	1					
ANR	376999	PrimaryExpression	0xdf3f03d5		376159	1					
ANR	377000	ReturnStatement	return * op != - 1 ;	1099:2:24759:24775	376159	1	True				
ANR	377001	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377002	UnaryOperationExpression	* op		376159	0					
ANR	377003	UnaryOperator	*		376159	0					
ANR	377004	Identifier	op		376159	1					
ANR	377005	UnaryOperationExpression	- 1		376159	1					
ANR	377006	UnaryOperator	-		376159	0					
ANR	377007	PrimaryExpression	1		376159	1					
ANR	377008	IfStatement	"if ( handlePAC ( op , str ) )"		376159	24					
ANR	377009	Condition	"handlePAC ( op , str )"	1102:5:24793:24811	376159	0	True				
ANR	377010	CallExpression	"handlePAC ( op , str )"		376159	0					
ANR	377011	Callee	handlePAC		376159	0					
ANR	377012	Identifier	handlePAC		376159	0					
ANR	377013	ArgumentList	op		376159	1					
ANR	377014	Argument	op		376159	0					
ANR	377015	Identifier	op		376159	0					
ANR	377016	Argument	str		376159	1					
ANR	377017	Identifier	str		376159	0					
ANR	377018	CompoundStatement		96:26:2155:2155	376159	1					
ANR	377019	ReturnStatement	return true ;	1103:2:24818:24829	376159	0	True				
ANR	377020	Identifier	true		376159	0					
ANR	377021	IfStatement	"if ( ! strcmp ( str , ""nop"" ) )"		376159	25					
ANR	377022	Condition	"! strcmp ( str , ""nop"" )"	1105:5:24839:24858	376159	0	True				
ANR	377023	UnaryOperationExpression	"! strcmp ( str , ""nop"" )"		376159	0					
ANR	377024	UnaryOperator	!		376159	0					
ANR	377025	CallExpression	"strcmp ( str , ""nop"" )"		376159	1					
ANR	377026	Callee	strcmp		376159	0					
ANR	377027	Identifier	strcmp		376159	0					
ANR	377028	ArgumentList	str		376159	1					
ANR	377029	Argument	str		376159	0					
ANR	377030	Identifier	str		376159	0					
ANR	377031	Argument	"""nop"""		376159	1					
ANR	377032	PrimaryExpression	"""nop"""		376159	0					
ANR	377033	CompoundStatement		99:27:2202:2202	376159	1					
ANR	377034	ExpressionStatement	* op = 0x1f2003d5	1106:2:24865:24881	376159	0	True				
ANR	377035	AssignmentExpression	* op = 0x1f2003d5		376159	0		=			
ANR	377036	UnaryOperationExpression	* op		376159	0					
ANR	377037	UnaryOperator	*		376159	0					
ANR	377038	Identifier	op		376159	1					
ANR	377039	PrimaryExpression	0x1f2003d5		376159	1					
ANR	377040	ReturnStatement	return * op != - 1 ;	1107:2:24885:24901	376159	1	True				
ANR	377041	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377042	UnaryOperationExpression	* op		376159	0					
ANR	377043	UnaryOperator	*		376159	0					
ANR	377044	Identifier	op		376159	1					
ANR	377045	UnaryOperationExpression	- 1		376159	1					
ANR	377046	UnaryOperator	-		376159	0					
ANR	377047	PrimaryExpression	1		376159	1					
ANR	377048	IfStatement	"if ( ! strcmp ( str , ""ret"" ) )"		376159	26					
ANR	377049	Condition	"! strcmp ( str , ""ret"" )"	1109:5:24911:24930	376159	0	True				
ANR	377050	UnaryOperationExpression	"! strcmp ( str , ""ret"" )"		376159	0					
ANR	377051	UnaryOperator	!		376159	0					
ANR	377052	CallExpression	"strcmp ( str , ""ret"" )"		376159	1					
ANR	377053	Callee	strcmp		376159	0					
ANR	377054	Identifier	strcmp		376159	0					
ANR	377055	ArgumentList	str		376159	1					
ANR	377056	Argument	str		376159	0					
ANR	377057	Identifier	str		376159	0					
ANR	377058	Argument	"""ret"""		376159	1					
ANR	377059	PrimaryExpression	"""ret"""		376159	0					
ANR	377060	CompoundStatement		103:27:2274:2274	376159	1					
ANR	377061	ExpressionStatement	* op = 0xc0035fd6	1110:2:24937:24953	376159	0	True				
ANR	377062	AssignmentExpression	* op = 0xc0035fd6		376159	0		=			
ANR	377063	UnaryOperationExpression	* op		376159	0					
ANR	377064	UnaryOperator	*		376159	0					
ANR	377065	Identifier	op		376159	1					
ANR	377066	PrimaryExpression	0xc0035fd6		376159	1					
ANR	377067	ReturnStatement	return true ;	1111:2:24957:24968	376159	1	True				
ANR	377068	Identifier	true		376159	0					
ANR	377069	IfStatement	"if ( ! strncmp ( str , ""msr "" , 4 ) )"		376159	27					
ANR	377070	Condition	"! strncmp ( str , ""msr "" , 4 )"	1113:5:24978:25002	376159	0	True				
ANR	377071	UnaryOperationExpression	"! strncmp ( str , ""msr "" , 4 )"		376159	0					
ANR	377072	UnaryOperator	!		376159	0					
ANR	377073	CallExpression	"strncmp ( str , ""msr "" , 4 )"		376159	1					
ANR	377074	Callee	strncmp		376159	0					
ANR	377075	Identifier	strncmp		376159	0					
ANR	377076	ArgumentList	str		376159	1					
ANR	377077	Argument	str		376159	0					
ANR	377078	Identifier	str		376159	0					
ANR	377079	Argument	"""msr """		376159	1					
ANR	377080	PrimaryExpression	"""msr """		376159	0					
ANR	377081	Argument	4		376159	2					
ANR	377082	PrimaryExpression	4		376159	0					
ANR	377083	CompoundStatement		107:32:2346:2346	376159	1					
ANR	377084	ExpressionStatement	"* op = msr ( & ops , 0 )"	1114:2:25009:25028	376159	0	True				
ANR	377085	AssignmentExpression	"* op = msr ( & ops , 0 )"		376159	0		=			
ANR	377086	UnaryOperationExpression	* op		376159	0					
ANR	377087	UnaryOperator	*		376159	0					
ANR	377088	Identifier	op		376159	1					
ANR	377089	CallExpression	"msr ( & ops , 0 )"		376159	1					
ANR	377090	Callee	msr		376159	0					
ANR	377091	Identifier	msr		376159	0					
ANR	377092	ArgumentList	& ops		376159	1					
ANR	377093	Argument	& ops		376159	0					
ANR	377094	UnaryOperationExpression	& ops		376159	0					
ANR	377095	UnaryOperator	&		376159	0					
ANR	377096	Identifier	ops		376159	1					
ANR	377097	Argument	0		376159	1					
ANR	377098	PrimaryExpression	0		376159	0					
ANR	377099	IfStatement	if ( * op != UT32_MAX )		376159	1					
ANR	377100	Condition	* op != UT32_MAX	1115:6:25036:25050	376159	0	True				
ANR	377101	EqualityExpression	* op != UT32_MAX		376159	0		!=			
ANR	377102	UnaryOperationExpression	* op		376159	0					
ANR	377103	UnaryOperator	*		376159	0					
ANR	377104	Identifier	op		376159	1					
ANR	377105	Identifier	UT32_MAX		376159	1					
ANR	377106	CompoundStatement		109:23:2394:2394	376159	1					
ANR	377107	ReturnStatement	return true ;	1116:3:25058:25069	376159	0	True				
ANR	377108	Identifier	true		376159	0					
ANR	377109	IfStatement	"if ( ! strncmp ( str , ""mrs "" , 4 ) )"		376159	28					
ANR	377110	Condition	"! strncmp ( str , ""mrs "" , 4 )"	1119:5:25083:25107	376159	0	True				
ANR	377111	UnaryOperationExpression	"! strncmp ( str , ""mrs "" , 4 )"		376159	0					
ANR	377112	UnaryOperator	!		376159	0					
ANR	377113	CallExpression	"strncmp ( str , ""mrs "" , 4 )"		376159	1					
ANR	377114	Callee	strncmp		376159	0					
ANR	377115	Identifier	strncmp		376159	0					
ANR	377116	ArgumentList	str		376159	1					
ANR	377117	Argument	str		376159	0					
ANR	377118	Identifier	str		376159	0					
ANR	377119	Argument	"""mrs """		376159	1					
ANR	377120	PrimaryExpression	"""mrs """		376159	0					
ANR	377121	Argument	4		376159	2					
ANR	377122	PrimaryExpression	4		376159	0					
ANR	377123	CompoundStatement		113:32:2451:2451	376159	1					
ANR	377124	ExpressionStatement	"* op = msr ( & ops , 1 )"	1120:2:25114:25133	376159	0	True				
ANR	377125	AssignmentExpression	"* op = msr ( & ops , 1 )"		376159	0		=			
ANR	377126	UnaryOperationExpression	* op		376159	0					
ANR	377127	UnaryOperator	*		376159	0					
ANR	377128	Identifier	op		376159	1					
ANR	377129	CallExpression	"msr ( & ops , 1 )"		376159	1					
ANR	377130	Callee	msr		376159	0					
ANR	377131	Identifier	msr		376159	0					
ANR	377132	ArgumentList	& ops		376159	1					
ANR	377133	Argument	& ops		376159	0					
ANR	377134	UnaryOperationExpression	& ops		376159	0					
ANR	377135	UnaryOperator	&		376159	0					
ANR	377136	Identifier	ops		376159	1					
ANR	377137	Argument	1		376159	1					
ANR	377138	PrimaryExpression	1		376159	0					
ANR	377139	IfStatement	if ( * op != UT32_MAX )		376159	1					
ANR	377140	Condition	* op != UT32_MAX	1121:6:25141:25155	376159	0	True				
ANR	377141	EqualityExpression	* op != UT32_MAX		376159	0		!=			
ANR	377142	UnaryOperationExpression	* op		376159	0					
ANR	377143	UnaryOperator	*		376159	0					
ANR	377144	Identifier	op		376159	1					
ANR	377145	Identifier	UT32_MAX		376159	1					
ANR	377146	CompoundStatement		115:23:2499:2499	376159	1					
ANR	377147	ReturnStatement	return true ;	1122:3:25163:25174	376159	0	True				
ANR	377148	Identifier	true		376159	0					
ANR	377149	IfStatement	"if ( ! strncmp ( str , ""orr "" , 4 ) )"		376159	29					
ANR	377150	Condition	"! strncmp ( str , ""orr "" , 4 )"	1125:5:25188:25212	376159	0	True				
ANR	377151	UnaryOperationExpression	"! strncmp ( str , ""orr "" , 4 )"		376159	0					
ANR	377152	UnaryOperator	!		376159	0					
ANR	377153	CallExpression	"strncmp ( str , ""orr "" , 4 )"		376159	1					
ANR	377154	Callee	strncmp		376159	0					
ANR	377155	Identifier	strncmp		376159	0					
ANR	377156	ArgumentList	str		376159	1					
ANR	377157	Argument	str		376159	0					
ANR	377158	Identifier	str		376159	0					
ANR	377159	Argument	"""orr """		376159	1					
ANR	377160	PrimaryExpression	"""orr """		376159	0					
ANR	377161	Argument	4		376159	2					
ANR	377162	PrimaryExpression	4		376159	0					
ANR	377163	CompoundStatement		119:32:2556:2556	376159	1					
ANR	377164	ExpressionStatement	"* op = orr ( & ops , addr )"	1126:2:25219:25241	376159	0	True				
ANR	377165	AssignmentExpression	"* op = orr ( & ops , addr )"		376159	0		=			
ANR	377166	UnaryOperationExpression	* op		376159	0					
ANR	377167	UnaryOperator	*		376159	0					
ANR	377168	Identifier	op		376159	1					
ANR	377169	CallExpression	"orr ( & ops , addr )"		376159	1					
ANR	377170	Callee	orr		376159	0					
ANR	377171	Identifier	orr		376159	0					
ANR	377172	ArgumentList	& ops		376159	1					
ANR	377173	Argument	& ops		376159	0					
ANR	377174	UnaryOperationExpression	& ops		376159	0					
ANR	377175	UnaryOperator	&		376159	0					
ANR	377176	Identifier	ops		376159	1					
ANR	377177	Argument	addr		376159	1					
ANR	377178	Identifier	addr		376159	0					
ANR	377179	ReturnStatement	return * op != UT32_MAX ;	1127:2:25245:25267	376159	1	True				
ANR	377180	EqualityExpression	* op != UT32_MAX		376159	0		!=			
ANR	377181	UnaryOperationExpression	* op		376159	0					
ANR	377182	UnaryOperator	*		376159	0					
ANR	377183	Identifier	op		376159	1					
ANR	377184	Identifier	UT32_MAX		376159	1					
ANR	377185	IfStatement	"if ( ! strncmp ( str , ""svc "" , 4 ) )"		376159	30					
ANR	377186	Condition	"! strncmp ( str , ""svc "" , 4 )"	1129:5:25277:25301	376159	0	True				
ANR	377187	UnaryOperationExpression	"! strncmp ( str , ""svc "" , 4 )"		376159	0					
ANR	377188	UnaryOperator	!		376159	0					
ANR	377189	CallExpression	"strncmp ( str , ""svc "" , 4 )"		376159	1					
ANR	377190	Callee	strncmp		376159	0					
ANR	377191	Identifier	strncmp		376159	0					
ANR	377192	ArgumentList	str		376159	1					
ANR	377193	Argument	str		376159	0					
ANR	377194	Identifier	str		376159	0					
ANR	377195	Argument	"""svc """		376159	1					
ANR	377196	PrimaryExpression	"""svc """		376159	0					
ANR	377197	Argument	4		376159	2					
ANR	377198	PrimaryExpression	4		376159	0					
ANR	377199	CompoundStatement		123:32:2645:2645	376159	1					
ANR	377200	ExpressionStatement	"* op = exception ( & ops , 0x010000d4 )"	1130:2:25334:25368	376159	0	True				
ANR	377201	AssignmentExpression	"* op = exception ( & ops , 0x010000d4 )"		376159	0		=			
ANR	377202	UnaryOperationExpression	* op		376159	0					
ANR	377203	UnaryOperator	*		376159	0					
ANR	377204	Identifier	op		376159	1					
ANR	377205	CallExpression	"exception ( & ops , 0x010000d4 )"		376159	1					
ANR	377206	Callee	exception		376159	0					
ANR	377207	Identifier	exception		376159	0					
ANR	377208	ArgumentList	& ops		376159	1					
ANR	377209	Argument	& ops		376159	0					
ANR	377210	UnaryOperationExpression	& ops		376159	0					
ANR	377211	UnaryOperator	&		376159	0					
ANR	377212	Identifier	ops		376159	1					
ANR	377213	Argument	0x010000d4		376159	1					
ANR	377214	PrimaryExpression	0x010000d4		376159	0					
ANR	377215	ReturnStatement	return * op != - 1 ;	1131:2:25372:25388	376159	1	True				
ANR	377216	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377217	UnaryOperationExpression	* op		376159	0					
ANR	377218	UnaryOperator	*		376159	0					
ANR	377219	Identifier	op		376159	1					
ANR	377220	UnaryOperationExpression	- 1		376159	1					
ANR	377221	UnaryOperator	-		376159	0					
ANR	377222	PrimaryExpression	1		376159	1					
ANR	377223	IfStatement	"if ( ! strncmp ( str , ""hvc "" , 4 ) )"		376159	31					
ANR	377224	Condition	"! strncmp ( str , ""hvc "" , 4 )"	1133:5:25398:25422	376159	0	True				
ANR	377225	UnaryOperationExpression	"! strncmp ( str , ""hvc "" , 4 )"		376159	0					
ANR	377226	UnaryOperator	!		376159	0					
ANR	377227	CallExpression	"strncmp ( str , ""hvc "" , 4 )"		376159	1					
ANR	377228	Callee	strncmp		376159	0					
ANR	377229	Identifier	strncmp		376159	0					
ANR	377230	ArgumentList	str		376159	1					
ANR	377231	Argument	str		376159	0					
ANR	377232	Identifier	str		376159	0					
ANR	377233	Argument	"""hvc """		376159	1					
ANR	377234	PrimaryExpression	"""hvc """		376159	0					
ANR	377235	Argument	4		376159	2					
ANR	377236	PrimaryExpression	4		376159	0					
ANR	377237	CompoundStatement		127:32:2766:2766	376159	1					
ANR	377238	ExpressionStatement	"* op = exception ( & ops , 0x020000d4 )"	1134:2:25459:25493	376159	0	True				
ANR	377239	AssignmentExpression	"* op = exception ( & ops , 0x020000d4 )"		376159	0		=			
ANR	377240	UnaryOperationExpression	* op		376159	0					
ANR	377241	UnaryOperator	*		376159	0					
ANR	377242	Identifier	op		376159	1					
ANR	377243	CallExpression	"exception ( & ops , 0x020000d4 )"		376159	1					
ANR	377244	Callee	exception		376159	0					
ANR	377245	Identifier	exception		376159	0					
ANR	377246	ArgumentList	& ops		376159	1					
ANR	377247	Argument	& ops		376159	0					
ANR	377248	UnaryOperationExpression	& ops		376159	0					
ANR	377249	UnaryOperator	&		376159	0					
ANR	377250	Identifier	ops		376159	1					
ANR	377251	Argument	0x020000d4		376159	1					
ANR	377252	PrimaryExpression	0x020000d4		376159	0					
ANR	377253	ReturnStatement	return * op != - 1 ;	1135:2:25497:25513	376159	1	True				
ANR	377254	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377255	UnaryOperationExpression	* op		376159	0					
ANR	377256	UnaryOperator	*		376159	0					
ANR	377257	Identifier	op		376159	1					
ANR	377258	UnaryOperationExpression	- 1		376159	1					
ANR	377259	UnaryOperator	-		376159	0					
ANR	377260	PrimaryExpression	1		376159	1					
ANR	377261	IfStatement	"if ( ! strncmp ( str , ""smc "" , 4 ) )"		376159	32					
ANR	377262	Condition	"! strncmp ( str , ""smc "" , 4 )"	1137:5:25523:25547	376159	0	True				
ANR	377263	UnaryOperationExpression	"! strncmp ( str , ""smc "" , 4 )"		376159	0					
ANR	377264	UnaryOperator	!		376159	0					
ANR	377265	CallExpression	"strncmp ( str , ""smc "" , 4 )"		376159	1					
ANR	377266	Callee	strncmp		376159	0					
ANR	377267	Identifier	strncmp		376159	0					
ANR	377268	ArgumentList	str		376159	1					
ANR	377269	Argument	str		376159	0					
ANR	377270	Identifier	str		376159	0					
ANR	377271	Argument	"""smc """		376159	1					
ANR	377272	PrimaryExpression	"""smc """		376159	0					
ANR	377273	Argument	4		376159	2					
ANR	377274	PrimaryExpression	4		376159	0					
ANR	377275	CompoundStatement		131:32:2891:2891	376159	1					
ANR	377276	ExpressionStatement	"* op = exception ( & ops , 0x030000d4 )"	1138:2:25582:25616	376159	0	True				
ANR	377277	AssignmentExpression	"* op = exception ( & ops , 0x030000d4 )"		376159	0		=			
ANR	377278	UnaryOperationExpression	* op		376159	0					
ANR	377279	UnaryOperator	*		376159	0					
ANR	377280	Identifier	op		376159	1					
ANR	377281	CallExpression	"exception ( & ops , 0x030000d4 )"		376159	1					
ANR	377282	Callee	exception		376159	0					
ANR	377283	Identifier	exception		376159	0					
ANR	377284	ArgumentList	& ops		376159	1					
ANR	377285	Argument	& ops		376159	0					
ANR	377286	UnaryOperationExpression	& ops		376159	0					
ANR	377287	UnaryOperator	&		376159	0					
ANR	377288	Identifier	ops		376159	1					
ANR	377289	Argument	0x030000d4		376159	1					
ANR	377290	PrimaryExpression	0x030000d4		376159	0					
ANR	377291	ReturnStatement	return * op != - 1 ;	1139:2:25620:25636	376159	1	True				
ANR	377292	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377293	UnaryOperationExpression	* op		376159	0					
ANR	377294	UnaryOperator	*		376159	0					
ANR	377295	Identifier	op		376159	1					
ANR	377296	UnaryOperationExpression	- 1		376159	1					
ANR	377297	UnaryOperator	-		376159	0					
ANR	377298	PrimaryExpression	1		376159	1					
ANR	377299	IfStatement	"if ( ! strncmp ( str , ""brk "" , 4 ) )"		376159	33					
ANR	377300	Condition	"! strncmp ( str , ""brk "" , 4 )"	1141:5:25646:25670	376159	0	True				
ANR	377301	UnaryOperationExpression	"! strncmp ( str , ""brk "" , 4 )"		376159	0					
ANR	377302	UnaryOperator	!		376159	0					
ANR	377303	CallExpression	"strncmp ( str , ""brk "" , 4 )"		376159	1					
ANR	377304	Callee	strncmp		376159	0					
ANR	377305	Identifier	strncmp		376159	0					
ANR	377306	ArgumentList	str		376159	1					
ANR	377307	Argument	str		376159	0					
ANR	377308	Identifier	str		376159	0					
ANR	377309	Argument	"""brk """		376159	1					
ANR	377310	PrimaryExpression	"""brk """		376159	0					
ANR	377311	Argument	4		376159	2					
ANR	377312	PrimaryExpression	4		376159	0					
ANR	377313	CompoundStatement		135:32:3014:3014	376159	1					
ANR	377314	ExpressionStatement	"* op = exception ( & ops , 0x000020d4 )"	1142:2:25691:25725	376159	0	True				
ANR	377315	AssignmentExpression	"* op = exception ( & ops , 0x000020d4 )"		376159	0		=			
ANR	377316	UnaryOperationExpression	* op		376159	0					
ANR	377317	UnaryOperator	*		376159	0					
ANR	377318	Identifier	op		376159	1					
ANR	377319	CallExpression	"exception ( & ops , 0x000020d4 )"		376159	1					
ANR	377320	Callee	exception		376159	0					
ANR	377321	Identifier	exception		376159	0					
ANR	377322	ArgumentList	& ops		376159	1					
ANR	377323	Argument	& ops		376159	0					
ANR	377324	UnaryOperationExpression	& ops		376159	0					
ANR	377325	UnaryOperator	&		376159	0					
ANR	377326	Identifier	ops		376159	1					
ANR	377327	Argument	0x000020d4		376159	1					
ANR	377328	PrimaryExpression	0x000020d4		376159	0					
ANR	377329	ReturnStatement	return * op != - 1 ;	1143:2:25729:25745	376159	1	True				
ANR	377330	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377331	UnaryOperationExpression	* op		376159	0					
ANR	377332	UnaryOperator	*		376159	0					
ANR	377333	Identifier	op		376159	1					
ANR	377334	UnaryOperationExpression	- 1		376159	1					
ANR	377335	UnaryOperator	-		376159	0					
ANR	377336	PrimaryExpression	1		376159	1					
ANR	377337	IfStatement	"if ( ! strncmp ( str , ""hlt "" , 4 ) )"		376159	34					
ANR	377338	Condition	"! strncmp ( str , ""hlt "" , 4 )"	1145:5:25755:25779	376159	0	True				
ANR	377339	UnaryOperationExpression	"! strncmp ( str , ""hlt "" , 4 )"		376159	0					
ANR	377340	UnaryOperator	!		376159	0					
ANR	377341	CallExpression	"strncmp ( str , ""hlt "" , 4 )"		376159	1					
ANR	377342	Callee	strncmp		376159	0					
ANR	377343	Identifier	strncmp		376159	0					
ANR	377344	ArgumentList	str		376159	1					
ANR	377345	Argument	str		376159	0					
ANR	377346	Identifier	str		376159	0					
ANR	377347	Argument	"""hlt """		376159	1					
ANR	377348	PrimaryExpression	"""hlt """		376159	0					
ANR	377349	Argument	4		376159	2					
ANR	377350	PrimaryExpression	4		376159	0					
ANR	377351	CompoundStatement		139:32:3123:3123	376159	1					
ANR	377352	ExpressionStatement	"* op = exception ( & ops , 0x000040d4 )"	1146:2:25794:25828	376159	0	True				
ANR	377353	AssignmentExpression	"* op = exception ( & ops , 0x000040d4 )"		376159	0		=			
ANR	377354	UnaryOperationExpression	* op		376159	0					
ANR	377355	UnaryOperator	*		376159	0					
ANR	377356	Identifier	op		376159	1					
ANR	377357	CallExpression	"exception ( & ops , 0x000040d4 )"		376159	1					
ANR	377358	Callee	exception		376159	0					
ANR	377359	Identifier	exception		376159	0					
ANR	377360	ArgumentList	& ops		376159	1					
ANR	377361	Argument	& ops		376159	0					
ANR	377362	UnaryOperationExpression	& ops		376159	0					
ANR	377363	UnaryOperator	&		376159	0					
ANR	377364	Identifier	ops		376159	1					
ANR	377365	Argument	0x000040d4		376159	1					
ANR	377366	PrimaryExpression	0x000040d4		376159	0					
ANR	377367	ReturnStatement	return * op != - 1 ;	1147:2:25832:25848	376159	1	True				
ANR	377368	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377369	UnaryOperationExpression	* op		376159	0					
ANR	377370	UnaryOperator	*		376159	0					
ANR	377371	Identifier	op		376159	1					
ANR	377372	UnaryOperationExpression	- 1		376159	1					
ANR	377373	UnaryOperator	-		376159	0					
ANR	377374	PrimaryExpression	1		376159	1					
ANR	377375	IfStatement	"if ( ! strncmp ( str , ""b "" , 2 ) )"		376159	35					
ANR	377376	Condition	"! strncmp ( str , ""b "" , 2 )"	1149:5:25858:25880	376159	0	True				
ANR	377377	UnaryOperationExpression	"! strncmp ( str , ""b "" , 2 )"		376159	0					
ANR	377378	UnaryOperator	!		376159	0					
ANR	377379	CallExpression	"strncmp ( str , ""b "" , 2 )"		376159	1					
ANR	377380	Callee	strncmp		376159	0					
ANR	377381	Identifier	strncmp		376159	0					
ANR	377382	ArgumentList	str		376159	1					
ANR	377383	Argument	str		376159	0					
ANR	377384	Identifier	str		376159	0					
ANR	377385	Argument	"""b """		376159	1					
ANR	377386	PrimaryExpression	"""b """		376159	0					
ANR	377387	Argument	2		376159	2					
ANR	377388	PrimaryExpression	2		376159	0					
ANR	377389	CompoundStatement		143:30:3224:3224	376159	1					
ANR	377390	ExpressionStatement	"* op = branch ( & ops , addr , 0x14 )"	1150:2:25887:25918	376159	0	True				
ANR	377391	AssignmentExpression	"* op = branch ( & ops , addr , 0x14 )"		376159	0		=			
ANR	377392	UnaryOperationExpression	* op		376159	0					
ANR	377393	UnaryOperator	*		376159	0					
ANR	377394	Identifier	op		376159	1					
ANR	377395	CallExpression	"branch ( & ops , addr , 0x14 )"		376159	1					
ANR	377396	Callee	branch		376159	0					
ANR	377397	Identifier	branch		376159	0					
ANR	377398	ArgumentList	& ops		376159	1					
ANR	377399	Argument	& ops		376159	0					
ANR	377400	UnaryOperationExpression	& ops		376159	0					
ANR	377401	UnaryOperator	&		376159	0					
ANR	377402	Identifier	ops		376159	1					
ANR	377403	Argument	addr		376159	1					
ANR	377404	Identifier	addr		376159	0					
ANR	377405	Argument	0x14		376159	2					
ANR	377406	PrimaryExpression	0x14		376159	0					
ANR	377407	ReturnStatement	return * op != - 1 ;	1151:2:25922:25938	376159	1	True				
ANR	377408	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377409	UnaryOperationExpression	* op		376159	0					
ANR	377410	UnaryOperator	*		376159	0					
ANR	377411	Identifier	op		376159	1					
ANR	377412	UnaryOperationExpression	- 1		376159	1					
ANR	377413	UnaryOperator	-		376159	0					
ANR	377414	PrimaryExpression	1		376159	1					
ANR	377415	IfStatement	"if ( ! strncmp ( str , ""b.eq "" , 5 ) )"		376159	36					
ANR	377416	Condition	"! strncmp ( str , ""b.eq "" , 5 )"	1153:5:25948:25973	376159	0	True				
ANR	377417	UnaryOperationExpression	"! strncmp ( str , ""b.eq "" , 5 )"		376159	0					
ANR	377418	UnaryOperator	!		376159	0					
ANR	377419	CallExpression	"strncmp ( str , ""b.eq "" , 5 )"		376159	1					
ANR	377420	Callee	strncmp		376159	0					
ANR	377421	Identifier	strncmp		376159	0					
ANR	377422	ArgumentList	str		376159	1					
ANR	377423	Argument	str		376159	0					
ANR	377424	Identifier	str		376159	0					
ANR	377425	Argument	"""b.eq """		376159	1					
ANR	377426	PrimaryExpression	"""b.eq """		376159	0					
ANR	377427	Argument	5		376159	2					
ANR	377428	PrimaryExpression	5		376159	0					
ANR	377429	CompoundStatement		147:33:3317:3317	376159	1					
ANR	377430	ExpressionStatement	"* op = bdot ( & ops , addr , 0x00000054 )"	1154:2:25980:26015	376159	0	True				
ANR	377431	AssignmentExpression	"* op = bdot ( & ops , addr , 0x00000054 )"		376159	0		=			
ANR	377432	UnaryOperationExpression	* op		376159	0					
ANR	377433	UnaryOperator	*		376159	0					
ANR	377434	Identifier	op		376159	1					
ANR	377435	CallExpression	"bdot ( & ops , addr , 0x00000054 )"		376159	1					
ANR	377436	Callee	bdot		376159	0					
ANR	377437	Identifier	bdot		376159	0					
ANR	377438	ArgumentList	& ops		376159	1					
ANR	377439	Argument	& ops		376159	0					
ANR	377440	UnaryOperationExpression	& ops		376159	0					
ANR	377441	UnaryOperator	&		376159	0					
ANR	377442	Identifier	ops		376159	1					
ANR	377443	Argument	addr		376159	1					
ANR	377444	Identifier	addr		376159	0					
ANR	377445	Argument	0x00000054		376159	2					
ANR	377446	PrimaryExpression	0x00000054		376159	0					
ANR	377447	ReturnStatement	return * op != - 1 ;	1155:2:26019:26035	376159	1	True				
ANR	377448	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377449	UnaryOperationExpression	* op		376159	0					
ANR	377450	UnaryOperator	*		376159	0					
ANR	377451	Identifier	op		376159	1					
ANR	377452	UnaryOperationExpression	- 1		376159	1					
ANR	377453	UnaryOperator	-		376159	0					
ANR	377454	PrimaryExpression	1		376159	1					
ANR	377455	IfStatement	"if ( ! strncmp ( str , ""b.hs "" , 5 ) )"		376159	37					
ANR	377456	Condition	"! strncmp ( str , ""b.hs "" , 5 )"	1157:5:26045:26070	376159	0	True				
ANR	377457	UnaryOperationExpression	"! strncmp ( str , ""b.hs "" , 5 )"		376159	0					
ANR	377458	UnaryOperator	!		376159	0					
ANR	377459	CallExpression	"strncmp ( str , ""b.hs "" , 5 )"		376159	1					
ANR	377460	Callee	strncmp		376159	0					
ANR	377461	Identifier	strncmp		376159	0					
ANR	377462	ArgumentList	str		376159	1					
ANR	377463	Argument	str		376159	0					
ANR	377464	Identifier	str		376159	0					
ANR	377465	Argument	"""b.hs """		376159	1					
ANR	377466	PrimaryExpression	"""b.hs """		376159	0					
ANR	377467	Argument	5		376159	2					
ANR	377468	PrimaryExpression	5		376159	0					
ANR	377469	CompoundStatement		151:33:3414:3414	376159	1					
ANR	377470	ExpressionStatement	"* op = bdot ( & ops , addr , 0x02000054 )"	1158:2:26077:26112	376159	0	True				
ANR	377471	AssignmentExpression	"* op = bdot ( & ops , addr , 0x02000054 )"		376159	0		=			
ANR	377472	UnaryOperationExpression	* op		376159	0					
ANR	377473	UnaryOperator	*		376159	0					
ANR	377474	Identifier	op		376159	1					
ANR	377475	CallExpression	"bdot ( & ops , addr , 0x02000054 )"		376159	1					
ANR	377476	Callee	bdot		376159	0					
ANR	377477	Identifier	bdot		376159	0					
ANR	377478	ArgumentList	& ops		376159	1					
ANR	377479	Argument	& ops		376159	0					
ANR	377480	UnaryOperationExpression	& ops		376159	0					
ANR	377481	UnaryOperator	&		376159	0					
ANR	377482	Identifier	ops		376159	1					
ANR	377483	Argument	addr		376159	1					
ANR	377484	Identifier	addr		376159	0					
ANR	377485	Argument	0x02000054		376159	2					
ANR	377486	PrimaryExpression	0x02000054		376159	0					
ANR	377487	ReturnStatement	return * op != - 1 ;	1159:2:26116:26132	376159	1	True				
ANR	377488	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377489	UnaryOperationExpression	* op		376159	0					
ANR	377490	UnaryOperator	*		376159	0					
ANR	377491	Identifier	op		376159	1					
ANR	377492	UnaryOperationExpression	- 1		376159	1					
ANR	377493	UnaryOperator	-		376159	0					
ANR	377494	PrimaryExpression	1		376159	1					
ANR	377495	IfStatement	"if ( ! strncmp ( str , ""bl "" , 3 ) )"		376159	38					
ANR	377496	Condition	"! strncmp ( str , ""bl "" , 3 )"	1161:5:26142:26165	376159	0	True				
ANR	377497	UnaryOperationExpression	"! strncmp ( str , ""bl "" , 3 )"		376159	0					
ANR	377498	UnaryOperator	!		376159	0					
ANR	377499	CallExpression	"strncmp ( str , ""bl "" , 3 )"		376159	1					
ANR	377500	Callee	strncmp		376159	0					
ANR	377501	Identifier	strncmp		376159	0					
ANR	377502	ArgumentList	str		376159	1					
ANR	377503	Argument	str		376159	0					
ANR	377504	Identifier	str		376159	0					
ANR	377505	Argument	"""bl """		376159	1					
ANR	377506	PrimaryExpression	"""bl """		376159	0					
ANR	377507	Argument	3		376159	2					
ANR	377508	PrimaryExpression	3		376159	0					
ANR	377509	CompoundStatement		155:31:3509:3509	376159	1					
ANR	377510	ExpressionStatement	"* op = branch ( & ops , addr , 0x94 )"	1162:2:26172:26203	376159	0	True				
ANR	377511	AssignmentExpression	"* op = branch ( & ops , addr , 0x94 )"		376159	0		=			
ANR	377512	UnaryOperationExpression	* op		376159	0					
ANR	377513	UnaryOperator	*		376159	0					
ANR	377514	Identifier	op		376159	1					
ANR	377515	CallExpression	"branch ( & ops , addr , 0x94 )"		376159	1					
ANR	377516	Callee	branch		376159	0					
ANR	377517	Identifier	branch		376159	0					
ANR	377518	ArgumentList	& ops		376159	1					
ANR	377519	Argument	& ops		376159	0					
ANR	377520	UnaryOperationExpression	& ops		376159	0					
ANR	377521	UnaryOperator	&		376159	0					
ANR	377522	Identifier	ops		376159	1					
ANR	377523	Argument	addr		376159	1					
ANR	377524	Identifier	addr		376159	0					
ANR	377525	Argument	0x94		376159	2					
ANR	377526	PrimaryExpression	0x94		376159	0					
ANR	377527	ReturnStatement	return * op != - 1 ;	1163:2:26207:26223	376159	1	True				
ANR	377528	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377529	UnaryOperationExpression	* op		376159	0					
ANR	377530	UnaryOperator	*		376159	0					
ANR	377531	Identifier	op		376159	1					
ANR	377532	UnaryOperationExpression	- 1		376159	1					
ANR	377533	UnaryOperator	-		376159	0					
ANR	377534	PrimaryExpression	1		376159	1					
ANR	377535	IfStatement	"if ( ! strncmp ( str , ""br x"" , 4 ) )"		376159	39					
ANR	377536	Condition	"! strncmp ( str , ""br x"" , 4 )"	1165:5:26233:26257	376159	0	True				
ANR	377537	UnaryOperationExpression	"! strncmp ( str , ""br x"" , 4 )"		376159	0					
ANR	377538	UnaryOperator	!		376159	0					
ANR	377539	CallExpression	"strncmp ( str , ""br x"" , 4 )"		376159	1					
ANR	377540	Callee	strncmp		376159	0					
ANR	377541	Identifier	strncmp		376159	0					
ANR	377542	ArgumentList	str		376159	1					
ANR	377543	Argument	str		376159	0					
ANR	377544	Identifier	str		376159	0					
ANR	377545	Argument	"""br x"""		376159	1					
ANR	377546	PrimaryExpression	"""br x"""		376159	0					
ANR	377547	Argument	4		376159	2					
ANR	377548	PrimaryExpression	4		376159	0					
ANR	377549	CompoundStatement		159:32:3601:3601	376159	1					
ANR	377550	ExpressionStatement	"* op = branch ( & ops , addr , 0x1fd6 )"	1166:2:26264:26297	376159	0	True				
ANR	377551	AssignmentExpression	"* op = branch ( & ops , addr , 0x1fd6 )"		376159	0		=			
ANR	377552	UnaryOperationExpression	* op		376159	0					
ANR	377553	UnaryOperator	*		376159	0					
ANR	377554	Identifier	op		376159	1					
ANR	377555	CallExpression	"branch ( & ops , addr , 0x1fd6 )"		376159	1					
ANR	377556	Callee	branch		376159	0					
ANR	377557	Identifier	branch		376159	0					
ANR	377558	ArgumentList	& ops		376159	1					
ANR	377559	Argument	& ops		376159	0					
ANR	377560	UnaryOperationExpression	& ops		376159	0					
ANR	377561	UnaryOperator	&		376159	0					
ANR	377562	Identifier	ops		376159	1					
ANR	377563	Argument	addr		376159	1					
ANR	377564	Identifier	addr		376159	0					
ANR	377565	Argument	0x1fd6		376159	2					
ANR	377566	PrimaryExpression	0x1fd6		376159	0					
ANR	377567	ReturnStatement	return * op != - 1 ;	1167:2:26301:26317	376159	1	True				
ANR	377568	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377569	UnaryOperationExpression	* op		376159	0					
ANR	377570	UnaryOperator	*		376159	0					
ANR	377571	Identifier	op		376159	1					
ANR	377572	UnaryOperationExpression	- 1		376159	1					
ANR	377573	UnaryOperator	-		376159	0					
ANR	377574	PrimaryExpression	1		376159	1					
ANR	377575	IfStatement	"if ( ! strncmp ( str , ""blr x"" , 5 ) )"		376159	40					
ANR	377576	Condition	"! strncmp ( str , ""blr x"" , 5 )"	1169:5:26327:26352	376159	0	True				
ANR	377577	UnaryOperationExpression	"! strncmp ( str , ""blr x"" , 5 )"		376159	0					
ANR	377578	UnaryOperator	!		376159	0					
ANR	377579	CallExpression	"strncmp ( str , ""blr x"" , 5 )"		376159	1					
ANR	377580	Callee	strncmp		376159	0					
ANR	377581	Identifier	strncmp		376159	0					
ANR	377582	ArgumentList	str		376159	1					
ANR	377583	Argument	str		376159	0					
ANR	377584	Identifier	str		376159	0					
ANR	377585	Argument	"""blr x"""		376159	1					
ANR	377586	PrimaryExpression	"""blr x"""		376159	0					
ANR	377587	Argument	5		376159	2					
ANR	377588	PrimaryExpression	5		376159	0					
ANR	377589	CompoundStatement		163:33:3696:3696	376159	1					
ANR	377590	ExpressionStatement	"* op = branch ( & ops , addr , 0x3fd6 )"	1170:2:26359:26392	376159	0	True				
ANR	377591	AssignmentExpression	"* op = branch ( & ops , addr , 0x3fd6 )"		376159	0		=			
ANR	377592	UnaryOperationExpression	* op		376159	0					
ANR	377593	UnaryOperator	*		376159	0					
ANR	377594	Identifier	op		376159	1					
ANR	377595	CallExpression	"branch ( & ops , addr , 0x3fd6 )"		376159	1					
ANR	377596	Callee	branch		376159	0					
ANR	377597	Identifier	branch		376159	0					
ANR	377598	ArgumentList	& ops		376159	1					
ANR	377599	Argument	& ops		376159	0					
ANR	377600	UnaryOperationExpression	& ops		376159	0					
ANR	377601	UnaryOperator	&		376159	0					
ANR	377602	Identifier	ops		376159	1					
ANR	377603	Argument	addr		376159	1					
ANR	377604	Identifier	addr		376159	0					
ANR	377605	Argument	0x3fd6		376159	2					
ANR	377606	PrimaryExpression	0x3fd6		376159	0					
ANR	377607	ReturnStatement	return * op != - 1 ;	1171:2:26396:26412	376159	1	True				
ANR	377608	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377609	UnaryOperationExpression	* op		376159	0					
ANR	377610	UnaryOperator	*		376159	0					
ANR	377611	Identifier	op		376159	1					
ANR	377612	UnaryOperationExpression	- 1		376159	1					
ANR	377613	UnaryOperator	-		376159	0					
ANR	377614	PrimaryExpression	1		376159	1					
ANR	377615	IfStatement	"if ( ! strncmp ( str , ""dmb "" , 4 ) )"		376159	41					
ANR	377616	Condition	"! strncmp ( str , ""dmb "" , 4 )"	1173:5:26422:26446	376159	0	True				
ANR	377617	UnaryOperationExpression	"! strncmp ( str , ""dmb "" , 4 )"		376159	0					
ANR	377618	UnaryOperator	!		376159	0					
ANR	377619	CallExpression	"strncmp ( str , ""dmb "" , 4 )"		376159	1					
ANR	377620	Callee	strncmp		376159	0					
ANR	377621	Identifier	strncmp		376159	0					
ANR	377622	ArgumentList	str		376159	1					
ANR	377623	Argument	str		376159	0					
ANR	377624	Identifier	str		376159	0					
ANR	377625	Argument	"""dmb """		376159	1					
ANR	377626	PrimaryExpression	"""dmb """		376159	0					
ANR	377627	Argument	4		376159	2					
ANR	377628	PrimaryExpression	4		376159	0					
ANR	377629	CompoundStatement		167:32:3790:3790	376159	1					
ANR	377630	ExpressionStatement	"* op = mem_barrier ( & ops , addr , 0xbf3003d5 )"	1174:2:26453:26495	376159	0	True				
ANR	377631	AssignmentExpression	"* op = mem_barrier ( & ops , addr , 0xbf3003d5 )"		376159	0		=			
ANR	377632	UnaryOperationExpression	* op		376159	0					
ANR	377633	UnaryOperator	*		376159	0					
ANR	377634	Identifier	op		376159	1					
ANR	377635	CallExpression	"mem_barrier ( & ops , addr , 0xbf3003d5 )"		376159	1					
ANR	377636	Callee	mem_barrier		376159	0					
ANR	377637	Identifier	mem_barrier		376159	0					
ANR	377638	ArgumentList	& ops		376159	1					
ANR	377639	Argument	& ops		376159	0					
ANR	377640	UnaryOperationExpression	& ops		376159	0					
ANR	377641	UnaryOperator	&		376159	0					
ANR	377642	Identifier	ops		376159	1					
ANR	377643	Argument	addr		376159	1					
ANR	377644	Identifier	addr		376159	0					
ANR	377645	Argument	0xbf3003d5		376159	2					
ANR	377646	PrimaryExpression	0xbf3003d5		376159	0					
ANR	377647	ReturnStatement	return * op != - 1 ;	1175:2:26499:26515	376159	1	True				
ANR	377648	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377649	UnaryOperationExpression	* op		376159	0					
ANR	377650	UnaryOperator	*		376159	0					
ANR	377651	Identifier	op		376159	1					
ANR	377652	UnaryOperationExpression	- 1		376159	1					
ANR	377653	UnaryOperator	-		376159	0					
ANR	377654	PrimaryExpression	1		376159	1					
ANR	377655	IfStatement	"if ( ! strncmp ( str , ""dsb "" , 4 ) )"		376159	42					
ANR	377656	Condition	"! strncmp ( str , ""dsb "" , 4 )"	1177:5:26525:26549	376159	0	True				
ANR	377657	UnaryOperationExpression	"! strncmp ( str , ""dsb "" , 4 )"		376159	0					
ANR	377658	UnaryOperator	!		376159	0					
ANR	377659	CallExpression	"strncmp ( str , ""dsb "" , 4 )"		376159	1					
ANR	377660	Callee	strncmp		376159	0					
ANR	377661	Identifier	strncmp		376159	0					
ANR	377662	ArgumentList	str		376159	1					
ANR	377663	Argument	str		376159	0					
ANR	377664	Identifier	str		376159	0					
ANR	377665	Argument	"""dsb """		376159	1					
ANR	377666	PrimaryExpression	"""dsb """		376159	0					
ANR	377667	Argument	4		376159	2					
ANR	377668	PrimaryExpression	4		376159	0					
ANR	377669	CompoundStatement		171:32:3893:3893	376159	1					
ANR	377670	ExpressionStatement	"* op = mem_barrier ( & ops , addr , 0x9f3003d5 )"	1178:2:26556:26598	376159	0	True				
ANR	377671	AssignmentExpression	"* op = mem_barrier ( & ops , addr , 0x9f3003d5 )"		376159	0		=			
ANR	377672	UnaryOperationExpression	* op		376159	0					
ANR	377673	UnaryOperator	*		376159	0					
ANR	377674	Identifier	op		376159	1					
ANR	377675	CallExpression	"mem_barrier ( & ops , addr , 0x9f3003d5 )"		376159	1					
ANR	377676	Callee	mem_barrier		376159	0					
ANR	377677	Identifier	mem_barrier		376159	0					
ANR	377678	ArgumentList	& ops		376159	1					
ANR	377679	Argument	& ops		376159	0					
ANR	377680	UnaryOperationExpression	& ops		376159	0					
ANR	377681	UnaryOperator	&		376159	0					
ANR	377682	Identifier	ops		376159	1					
ANR	377683	Argument	addr		376159	1					
ANR	377684	Identifier	addr		376159	0					
ANR	377685	Argument	0x9f3003d5		376159	2					
ANR	377686	PrimaryExpression	0x9f3003d5		376159	0					
ANR	377687	ReturnStatement	return * op != - 1 ;	1179:2:26602:26618	376159	1	True				
ANR	377688	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377689	UnaryOperationExpression	* op		376159	0					
ANR	377690	UnaryOperator	*		376159	0					
ANR	377691	Identifier	op		376159	1					
ANR	377692	UnaryOperationExpression	- 1		376159	1					
ANR	377693	UnaryOperator	-		376159	0					
ANR	377694	PrimaryExpression	1		376159	1					
ANR	377695	IfStatement	"if ( ! strncmp ( str , ""isb"" , 3 ) )"		376159	43					
ANR	377696	Condition	"! strncmp ( str , ""isb"" , 3 )"	1181:5:26628:26651	376159	0	True				
ANR	377697	UnaryOperationExpression	"! strncmp ( str , ""isb"" , 3 )"		376159	0					
ANR	377698	UnaryOperator	!		376159	0					
ANR	377699	CallExpression	"strncmp ( str , ""isb"" , 3 )"		376159	1					
ANR	377700	Callee	strncmp		376159	0					
ANR	377701	Identifier	strncmp		376159	0					
ANR	377702	ArgumentList	str		376159	1					
ANR	377703	Argument	str		376159	0					
ANR	377704	Identifier	str		376159	0					
ANR	377705	Argument	"""isb"""		376159	1					
ANR	377706	PrimaryExpression	"""isb"""		376159	0					
ANR	377707	Argument	3		376159	2					
ANR	377708	PrimaryExpression	3		376159	0					
ANR	377709	CompoundStatement		175:31:3995:3995	376159	1					
ANR	377710	ExpressionStatement	"* op = mem_barrier ( & ops , addr , 0xdf3f03d5 )"	1182:2:26658:26700	376159	0	True				
ANR	377711	AssignmentExpression	"* op = mem_barrier ( & ops , addr , 0xdf3f03d5 )"		376159	0		=			
ANR	377712	UnaryOperationExpression	* op		376159	0					
ANR	377713	UnaryOperator	*		376159	0					
ANR	377714	Identifier	op		376159	1					
ANR	377715	CallExpression	"mem_barrier ( & ops , addr , 0xdf3f03d5 )"		376159	1					
ANR	377716	Callee	mem_barrier		376159	0					
ANR	377717	Identifier	mem_barrier		376159	0					
ANR	377718	ArgumentList	& ops		376159	1					
ANR	377719	Argument	& ops		376159	0					
ANR	377720	UnaryOperationExpression	& ops		376159	0					
ANR	377721	UnaryOperator	&		376159	0					
ANR	377722	Identifier	ops		376159	1					
ANR	377723	Argument	addr		376159	1					
ANR	377724	Identifier	addr		376159	0					
ANR	377725	Argument	0xdf3f03d5		376159	2					
ANR	377726	PrimaryExpression	0xdf3f03d5		376159	0					
ANR	377727	ReturnStatement	return * op != - 1 ;	1183:2:26704:26720	376159	1	True				
ANR	377728	EqualityExpression	* op != - 1		376159	0		!=			
ANR	377729	UnaryOperationExpression	* op		376159	0					
ANR	377730	UnaryOperator	*		376159	0					
ANR	377731	Identifier	op		376159	1					
ANR	377732	UnaryOperationExpression	- 1		376159	1					
ANR	377733	UnaryOperator	-		376159	0					
ANR	377734	PrimaryExpression	1		376159	1					
ANR	377735	ReturnStatement	return false ;	1185:1:26726:26738	376159	44	True				
ANR	377736	Identifier	false		376159	0					
ANR	377737	ReturnType	bool		376159	1					
ANR	377738	Identifier	arm64ass		376159	2					
ANR	377739	ParameterList	"const char * str , ut64 addr , ut32 * op"		376159	3					
ANR	377740	Parameter	const char * str	1007:14:22620:22634	376159	0	True				
ANR	377741	ParameterType	const char *		376159	0					
ANR	377742	Identifier	str		376159	1					
ANR	377743	Parameter	ut64 addr	1007:31:22637:22645	376159	1	True				
ANR	377744	ParameterType	ut64		376159	0					
ANR	377745	Identifier	addr		376159	1					
ANR	377746	Parameter	ut32 * op	1007:42:22648:22655	376159	2	True				
ANR	377747	ParameterType	ut32 *		376159	0					
ANR	377748	Identifier	op		376159	1					
ANR	377749	CFGEntryNode	ENTRY		376159		True				
ANR	377750	CFGExitNode	EXIT		376159		True				
ANR	377751	Symbol	UT32_MAX		376159						
ANR	377752	Symbol	exception		376159						
ANR	377753	Symbol	reglsop		376159						
ANR	377754	Symbol	* op		376159						
ANR	377755	Symbol	cmp		376159						
ANR	377756	Symbol	bytelsop		376159						
ANR	377757	Symbol	arithmetic		376159						
ANR	377758	Symbol	bdot		376159						
ANR	377759	Symbol	adrp		376159						
ANR	377760	Symbol	msr		376159						
ANR	377761	Symbol	branch		376159						
ANR	377762	Symbol	strncmp		376159						
ANR	377763	Symbol	neg		376159						
ANR	377764	Symbol	mov		376159						
ANR	377765	Symbol	handlePAC		376159						
ANR	377766	Symbol	addr		376159						
ANR	377767	Symbol	parseOpcode		376159						
ANR	377768	Symbol	& ops		376159						
ANR	377769	Symbol	strcmp		376159						
ANR	377770	Symbol	op		376159						
ANR	377771	Symbol	false		376159						
ANR	377772	Symbol	regsluop		376159						
ANR	377773	Symbol	stp		376159						
ANR	377774	Symbol	adr		376159						
ANR	377775	Symbol	orr		376159						
ANR	377776	Symbol	str		376159						
ANR	377777	Symbol	ops		376159						
ANR	377778	Symbol	true		376159						
ANR	377779	Symbol	mem_barrier		376159						
