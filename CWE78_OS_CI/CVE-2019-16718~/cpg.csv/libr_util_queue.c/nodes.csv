command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5192729	File	data/converged/CVE-2019-16718~_radare2/libr_util_queue.c								
ANR	5192730	Function	r_queue_new	5:0:75:356							
ANR	5192731	FunctionDef	r_queue_new (int n)		5192730	0					
ANR	5192732	CompoundStatement		5:34:109:356	5192730	0					
ANR	5192733	IfStatement	if ( n <= 0 )		5192730	0					
ANR	5192734	Condition	n <= 0	6:5:116:121	5192730	0	True				
ANR	5192735	RelationalExpression	n <= 0		5192730	0		<=			
ANR	5192736	Identifier	n		5192730	0					
ANR	5192737	PrimaryExpression	0		5192730	1					
ANR	5192738	CompoundStatement		2:13:14:14	5192730	1					
ANR	5192739	ReturnStatement	return NULL ;	7:2:128:139	5192730	0	True				
ANR	5192740	Identifier	NULL		5192730	0					
ANR	5192741	IdentifierDeclStatement	RQueue * q = R_NEW0 ( RQueue ) ;	9:1:145:172	5192730	1	True				
ANR	5192742	IdentifierDecl	* q = R_NEW0 ( RQueue )		5192730	0					
ANR	5192743	IdentifierDeclType	RQueue *		5192730	0					
ANR	5192744	Identifier	q		5192730	1					
ANR	5192745	AssignmentExpression	* q = R_NEW0 ( RQueue )		5192730	2		=			
ANR	5192746	Identifier	q		5192730	0					
ANR	5192747	CallExpression	R_NEW0 ( RQueue )		5192730	1					
ANR	5192748	Callee	R_NEW0		5192730	0					
ANR	5192749	Identifier	R_NEW0		5192730	0					
ANR	5192750	ArgumentList	RQueue		5192730	1					
ANR	5192751	Argument	RQueue		5192730	0					
ANR	5192752	Identifier	RQueue		5192730	0					
ANR	5192753	IfStatement	if ( ! q )		5192730	2					
ANR	5192754	Condition	! q	10:5:179:180	5192730	0	True				
ANR	5192755	UnaryOperationExpression	! q		5192730	0					
ANR	5192756	UnaryOperator	!		5192730	0					
ANR	5192757	Identifier	q		5192730	1					
ANR	5192758	CompoundStatement		6:9:73:73	5192730	1					
ANR	5192759	ReturnStatement	return NULL ;	11:2:187:198	5192730	0	True				
ANR	5192760	Identifier	NULL		5192730	0					
ANR	5192761	Statement	q	13:1:204:204	5192730	3	True				
ANR	5192762	Statement	->	13:2:205:206	5192730	4	True				
ANR	5192763	Statement	elems	13:4:207:211	5192730	5	True				
ANR	5192764	Statement	=	13:10:213:213	5192730	6	True				
ANR	5192765	Statement	R_NEWS0	13:12:215:221	5192730	7	True				
ANR	5192766	Statement	(	13:20:223:223	5192730	8	True				
ANR	5192767	Statement	void	13:21:224:227	5192730	9	True				
ANR	5192768	Statement	*	13:26:229:229	5192730	10	True				
ANR	5192769	Statement	","	13:27:230:230	5192730	11	True				
ANR	5192770	Statement	n	13:29:232:232	5192730	12	True				
ANR	5192771	Statement	)	13:30:233:233	5192730	13	True				
ANR	5192772	ExpressionStatement		13:31:234:234	5192730	14	True				
ANR	5192773	IfStatement	if ( ! q -> elems )		5192730	15					
ANR	5192774	Condition	! q -> elems	14:5:241:249	5192730	0	True				
ANR	5192775	UnaryOperationExpression	! q -> elems		5192730	0					
ANR	5192776	UnaryOperator	!		5192730	0					
ANR	5192777	PtrMemberAccess	q -> elems		5192730	1					
ANR	5192778	Identifier	q		5192730	0					
ANR	5192779	Identifier	elems		5192730	1					
ANR	5192780	CompoundStatement		10:15:141:141	5192730	1					
ANR	5192781	ExpressionStatement	free ( q )	15:2:255:263	5192730	0	True				
ANR	5192782	CallExpression	free ( q )		5192730	0					
ANR	5192783	Callee	free		5192730	0					
ANR	5192784	Identifier	free		5192730	0					
ANR	5192785	ArgumentList	q		5192730	1					
ANR	5192786	Argument	q		5192730	0					
ANR	5192787	Identifier	q		5192730	0					
ANR	5192788	ReturnStatement	return NULL ;	16:2:267:278	5192730	1	True				
ANR	5192789	Identifier	NULL		5192730	0					
ANR	5192790	ExpressionStatement	q -> front = 0	18:1:284:296	5192730	16	True				
ANR	5192791	AssignmentExpression	q -> front = 0		5192730	0		=			
ANR	5192792	PtrMemberAccess	q -> front		5192730	0					
ANR	5192793	Identifier	q		5192730	0					
ANR	5192794	Identifier	front		5192730	1					
ANR	5192795	PrimaryExpression	0		5192730	1					
ANR	5192796	ExpressionStatement	q -> rear = - 1	19:1:299:311	5192730	17	True				
ANR	5192797	AssignmentExpression	q -> rear = - 1		5192730	0		=			
ANR	5192798	PtrMemberAccess	q -> rear		5192730	0					
ANR	5192799	Identifier	q		5192730	0					
ANR	5192800	Identifier	rear		5192730	1					
ANR	5192801	UnaryOperationExpression	- 1		5192730	1					
ANR	5192802	UnaryOperator	-		5192730	0					
ANR	5192803	PrimaryExpression	1		5192730	1					
ANR	5192804	ExpressionStatement	q -> size = 0	20:1:314:325	5192730	18	True				
ANR	5192805	AssignmentExpression	q -> size = 0		5192730	0		=			
ANR	5192806	PtrMemberAccess	q -> size		5192730	0					
ANR	5192807	Identifier	q		5192730	0					
ANR	5192808	Identifier	size		5192730	1					
ANR	5192809	PrimaryExpression	0		5192730	1					
ANR	5192810	ExpressionStatement	q -> capacity = n	21:1:328:343	5192730	19	True				
ANR	5192811	AssignmentExpression	q -> capacity = n		5192730	0		=			
ANR	5192812	PtrMemberAccess	q -> capacity		5192730	0					
ANR	5192813	Identifier	q		5192730	0					
ANR	5192814	Identifier	capacity		5192730	1					
ANR	5192815	Identifier	n		5192730	1					
ANR	5192816	ReturnStatement	return q ;	22:1:346:354	5192730	20	True				
ANR	5192817	Identifier	q		5192730	0					
ANR	5192818	ReturnType	R_API RQueue *		5192730	1					
ANR	5192819	Identifier	r_queue_new		5192730	2					
ANR	5192820	ParameterList	int n		5192730	3					
ANR	5192821	Parameter	int n	5:27:102:106	5192730	0	True				
ANR	5192822	ParameterType	int		5192730	0					
ANR	5192823	Identifier	n		5192730	1					
ANR	5192824	CFGEntryNode	ENTRY		5192730		True				
ANR	5192825	CFGExitNode	EXIT		5192730		True				
ANR	5192826	Symbol	q -> capacity		5192730						
ANR	5192827	Symbol	R_NEW0		5192730						
ANR	5192828	Symbol	q		5192730						
ANR	5192829	Symbol	NULL		5192730						
ANR	5192830	Symbol	q -> rear		5192730						
ANR	5192831	Symbol	q -> front		5192730						
ANR	5192832	Symbol	RQueue		5192730						
ANR	5192833	Symbol	q -> elems		5192730						
ANR	5192834	Symbol	q -> size		5192730						
ANR	5192835	Symbol	* q		5192730						
ANR	5192836	Symbol	n		5192730						
ANR	5192837	Function	r_queue_free	25:0:359:425							
ANR	5192838	FunctionDef	r_queue_free (RQueue * q)		5192837	0					
ANR	5192839	CompoundStatement		25:35:394:425	5192837	0					
ANR	5192840	ExpressionStatement	free ( q -> elems )	26:1:397:412	5192837	0	True				
ANR	5192841	CallExpression	free ( q -> elems )		5192837	0					
ANR	5192842	Callee	free		5192837	0					
ANR	5192843	Identifier	free		5192837	0					
ANR	5192844	ArgumentList	q -> elems		5192837	1					
ANR	5192845	Argument	q -> elems		5192837	0					
ANR	5192846	PtrMemberAccess	q -> elems		5192837	0					
ANR	5192847	Identifier	q		5192837	0					
ANR	5192848	Identifier	elems		5192837	1					
ANR	5192849	ExpressionStatement	free ( q )	27:1:415:423	5192837	1	True				
ANR	5192850	CallExpression	free ( q )		5192837	0					
ANR	5192851	Callee	free		5192837	0					
ANR	5192852	Identifier	free		5192837	0					
ANR	5192853	ArgumentList	q		5192837	1					
ANR	5192854	Argument	q		5192837	0					
ANR	5192855	Identifier	q		5192837	0					
ANR	5192856	ReturnType	R_API void		5192837	1					
ANR	5192857	Identifier	r_queue_free		5192837	2					
ANR	5192858	ParameterList	RQueue * q		5192837	3					
ANR	5192859	Parameter	RQueue * q	25:24:383:391	5192837	0	True				
ANR	5192860	ParameterType	RQueue *		5192837	0					
ANR	5192861	Identifier	q		5192837	1					
ANR	5192862	CFGEntryNode	ENTRY		5192837		True				
ANR	5192863	CFGExitNode	EXIT		5192837		True				
ANR	5192864	Symbol	q		5192837						
ANR	5192865	Symbol	q -> elems		5192837						
ANR	5192866	Symbol	* q		5192837						
ANR	5192867	Function	is_full	30:0:428:493							
ANR	5192868	FunctionDef	is_full (RQueue * q)		5192867	0					
ANR	5192869	CompoundStatement		30:30:458:493	5192867	0					
ANR	5192870	ReturnStatement	return q -> size == q -> capacity ;	31:2:462:491	5192867	0	True				
ANR	5192871	EqualityExpression	q -> size == q -> capacity		5192867	0		==			
ANR	5192872	PtrMemberAccess	q -> size		5192867	0					
ANR	5192873	Identifier	q		5192867	0					
ANR	5192874	Identifier	size		5192867	1					
ANR	5192875	PtrMemberAccess	q -> capacity		5192867	1					
ANR	5192876	Identifier	q		5192867	0					
ANR	5192877	Identifier	capacity		5192867	1					
ANR	5192878	ReturnType	static int		5192867	1					
ANR	5192879	Identifier	is_full		5192867	2					
ANR	5192880	ParameterList	RQueue * q		5192867	3					
ANR	5192881	Parameter	RQueue * q	30:19:447:455	5192867	0	True				
ANR	5192882	ParameterType	RQueue *		5192867	0					
ANR	5192883	Identifier	q		5192867	1					
ANR	5192884	CFGEntryNode	ENTRY		5192867		True				
ANR	5192885	CFGExitNode	EXIT		5192867		True				
ANR	5192886	Symbol	q -> capacity		5192867						
ANR	5192887	Symbol	q		5192867						
ANR	5192888	Symbol	q -> size		5192867						
ANR	5192889	Symbol	* q		5192867						
ANR	5192890	Function	increase_capacity	34:0:496:967							
ANR	5192891	FunctionDef	increase_capacity (RQueue * q)		5192890	0					
ANR	5192892	CompoundStatement		34:40:536:967	5192890	0					
ANR	5192893	IdentifierDeclStatement	unsigned int new_capacity = q -> capacity * 2 ;	35:1:539:582	5192890	0	True				
ANR	5192894	IdentifierDecl	new_capacity = q -> capacity * 2		5192890	0					
ANR	5192895	IdentifierDeclType	unsigned int		5192890	0					
ANR	5192896	Identifier	new_capacity		5192890	1					
ANR	5192897	AssignmentExpression	new_capacity = q -> capacity * 2		5192890	2		=			
ANR	5192898	Identifier	new_capacity		5192890	0					
ANR	5192899	MultiplicativeExpression	q -> capacity * 2		5192890	1		*			
ANR	5192900	PtrMemberAccess	q -> capacity		5192890	0					
ANR	5192901	Identifier	q		5192890	0					
ANR	5192902	Identifier	capacity		5192890	1					
ANR	5192903	PrimaryExpression	2		5192890	1					
ANR	5192904	IdentifierDeclStatement	void * * newelems ;	36:1:585:600	5192890	1	True				
ANR	5192905	IdentifierDecl	* * newelems		5192890	0					
ANR	5192906	IdentifierDeclType	void * *		5192890	0					
ANR	5192907	Identifier	newelems		5192890	1					
ANR	5192908	IdentifierDeclStatement	"int i , tmp_front ;"	37:1:603:619	5192890	2	True				
ANR	5192909	IdentifierDecl	i		5192890	0					
ANR	5192910	IdentifierDeclType	int		5192890	0					
ANR	5192911	Identifier	i		5192890	1					
ANR	5192912	IdentifierDecl	tmp_front		5192890	1					
ANR	5192913	IdentifierDeclType	int		5192890	0					
ANR	5192914	Identifier	tmp_front		5192890	1					
ANR	5192915	Statement	newelems	39:1:623:630	5192890	3	True				
ANR	5192916	Statement	=	39:10:632:632	5192890	4	True				
ANR	5192917	Statement	R_NEWS0	39:12:634:640	5192890	5	True				
ANR	5192918	Statement	(	39:19:641:641	5192890	6	True				
ANR	5192919	Statement	void	39:20:642:645	5192890	7	True				
ANR	5192920	Statement	*	39:25:647:647	5192890	8	True				
ANR	5192921	Statement	","	39:26:648:648	5192890	9	True				
ANR	5192922	Statement	new_capacity	39:28:650:661	5192890	10	True				
ANR	5192923	Statement	)	39:40:662:662	5192890	11	True				
ANR	5192924	ExpressionStatement		39:41:663:663	5192890	12	True				
ANR	5192925	IfStatement	if ( ! newelems )		5192890	13					
ANR	5192926	Condition	! newelems	40:5:670:678	5192890	0	True				
ANR	5192927	UnaryOperationExpression	! newelems		5192890	0					
ANR	5192928	UnaryOperator	!		5192890	0					
ANR	5192929	Identifier	newelems		5192890	1					
ANR	5192930	CompoundStatement		7:16:144:144	5192890	1					
ANR	5192931	ReturnStatement	return false ;	41:2:685:697	5192890	0	True				
ANR	5192932	Identifier	false		5192890	0					
ANR	5192933	ExpressionStatement	i = - 1	44:1:704:710	5192890	14	True				
ANR	5192934	AssignmentExpression	i = - 1		5192890	0		=			
ANR	5192935	Identifier	i		5192890	0					
ANR	5192936	UnaryOperationExpression	- 1		5192890	1					
ANR	5192937	UnaryOperator	-		5192890	0					
ANR	5192938	PrimaryExpression	1		5192890	1					
ANR	5192939	ExpressionStatement	tmp_front = q -> front	45:1:713:733	5192890	15	True				
ANR	5192940	AssignmentExpression	tmp_front = q -> front		5192890	0		=			
ANR	5192941	Identifier	tmp_front		5192890	0					
ANR	5192942	PtrMemberAccess	q -> front		5192890	1					
ANR	5192943	Identifier	q		5192890	0					
ANR	5192944	Identifier	front		5192890	1					
ANR	5192945	WhileStatement	while ( i + 1 < q -> size )		5192890	16					
ANR	5192946	Condition	i + 1 < q -> size	46:8:743:757	5192890	0	True				
ANR	5192947	RelationalExpression	i + 1 < q -> size		5192890	0		<			
ANR	5192948	AdditiveExpression	i + 1		5192890	0		+			
ANR	5192949	Identifier	i		5192890	0					
ANR	5192950	PrimaryExpression	1		5192890	1					
ANR	5192951	PtrMemberAccess	q -> size		5192890	1					
ANR	5192952	Identifier	q		5192890	0					
ANR	5192953	Identifier	size		5192890	1					
ANR	5192954	CompoundStatement		13:25:223:223	5192890	1					
ANR	5192955	ExpressionStatement	i ++	47:2:764:767	5192890	0	True				
ANR	5192956	PostIncDecOperationExpression	i ++		5192890	0					
ANR	5192957	Identifier	i		5192890	0					
ANR	5192958	IncDec	++		5192890	1					
ANR	5192959	ExpressionStatement	newelems [ i ] = q -> elems [ tmp_front ]	48:2:771:804	5192890	1	True				
ANR	5192960	AssignmentExpression	newelems [ i ] = q -> elems [ tmp_front ]		5192890	0		=			
ANR	5192961	ArrayIndexing	newelems [ i ]		5192890	0					
ANR	5192962	Identifier	newelems		5192890	0					
ANR	5192963	Identifier	i		5192890	1					
ANR	5192964	ArrayIndexing	q -> elems [ tmp_front ]		5192890	1					
ANR	5192965	PtrMemberAccess	q -> elems		5192890	0					
ANR	5192966	Identifier	q		5192890	0					
ANR	5192967	Identifier	elems		5192890	1					
ANR	5192968	Identifier	tmp_front		5192890	1					
ANR	5192969	ExpressionStatement	tmp_front = ( tmp_front + 1 ) % q -> capacity	49:2:808:849	5192890	2	True				
ANR	5192970	AssignmentExpression	tmp_front = ( tmp_front + 1 ) % q -> capacity		5192890	0		=			
ANR	5192971	Identifier	tmp_front		5192890	0					
ANR	5192972	MultiplicativeExpression	( tmp_front + 1 ) % q -> capacity		5192890	1		%			
ANR	5192973	AdditiveExpression	tmp_front + 1		5192890	0		+			
ANR	5192974	Identifier	tmp_front		5192890	0					
ANR	5192975	PrimaryExpression	1		5192890	1					
ANR	5192976	PtrMemberAccess	q -> capacity		5192890	1					
ANR	5192977	Identifier	q		5192890	0					
ANR	5192978	Identifier	capacity		5192890	1					
ANR	5192979	ExpressionStatement	free ( q -> elems )	52:1:856:871	5192890	17	True				
ANR	5192980	CallExpression	free ( q -> elems )		5192890	0					
ANR	5192981	Callee	free		5192890	0					
ANR	5192982	Identifier	free		5192890	0					
ANR	5192983	ArgumentList	q -> elems		5192890	1					
ANR	5192984	Argument	q -> elems		5192890	0					
ANR	5192985	PtrMemberAccess	q -> elems		5192890	0					
ANR	5192986	Identifier	q		5192890	0					
ANR	5192987	Identifier	elems		5192890	1					
ANR	5192988	ExpressionStatement	q -> elems = newelems	53:1:874:893	5192890	18	True				
ANR	5192989	AssignmentExpression	q -> elems = newelems		5192890	0		=			
ANR	5192990	PtrMemberAccess	q -> elems		5192890	0					
ANR	5192991	Identifier	q		5192890	0					
ANR	5192992	Identifier	elems		5192890	1					
ANR	5192993	Identifier	newelems		5192890	1					
ANR	5192994	ExpressionStatement	q -> front = 0	54:1:896:908	5192890	19	True				
ANR	5192995	AssignmentExpression	q -> front = 0		5192890	0		=			
ANR	5192996	PtrMemberAccess	q -> front		5192890	0					
ANR	5192997	Identifier	q		5192890	0					
ANR	5192998	Identifier	front		5192890	1					
ANR	5192999	PrimaryExpression	0		5192890	1					
ANR	5193000	ExpressionStatement	q -> rear = i	55:1:911:922	5192890	20	True				
ANR	5193001	AssignmentExpression	q -> rear = i		5192890	0		=			
ANR	5193002	PtrMemberAccess	q -> rear		5192890	0					
ANR	5193003	Identifier	q		5192890	0					
ANR	5193004	Identifier	rear		5192890	1					
ANR	5193005	Identifier	i		5192890	1					
ANR	5193006	ExpressionStatement	q -> capacity = new_capacity	56:1:925:951	5192890	21	True				
ANR	5193007	AssignmentExpression	q -> capacity = new_capacity		5192890	0		=			
ANR	5193008	PtrMemberAccess	q -> capacity		5192890	0					
ANR	5193009	Identifier	q		5192890	0					
ANR	5193010	Identifier	capacity		5192890	1					
ANR	5193011	Identifier	new_capacity		5192890	1					
ANR	5193012	ReturnStatement	return true ;	57:1:954:965	5192890	22	True				
ANR	5193013	Identifier	true		5192890	0					
ANR	5193014	ReturnType	static int		5192890	1					
ANR	5193015	Identifier	increase_capacity		5192890	2					
ANR	5193016	ParameterList	RQueue * q		5192890	3					
ANR	5193017	Parameter	RQueue * q	34:29:525:533	5192890	0	True				
ANR	5193018	ParameterType	RQueue *		5192890	0					
ANR	5193019	Identifier	q		5192890	1					
ANR	5193020	CFGEntryNode	ENTRY		5192890		True				
ANR	5193021	CFGExitNode	EXIT		5192890		True				
ANR	5193022	Symbol	false		5192890						
ANR	5193023	Symbol	i		5192890						
ANR	5193024	Symbol	q -> elems		5192890						
ANR	5193025	Symbol	tmp_front		5192890						
ANR	5193026	Symbol	newelems		5192890						
ANR	5193027	Symbol	q -> capacity		5192890						
ANR	5193028	Symbol	q		5192890						
ANR	5193029	Symbol	* q -> elems		5192890						
ANR	5193030	Symbol	* i		5192890						
ANR	5193031	Symbol	q -> rear		5192890						
ANR	5193032	Symbol	new_capacity		5192890						
ANR	5193033	Symbol	q -> front		5192890						
ANR	5193034	Symbol	* tmp_front		5192890						
ANR	5193035	Symbol	true		5192890						
ANR	5193036	Symbol	q -> size		5192890						
ANR	5193037	Symbol	* newelems		5192890						
ANR	5193038	Symbol	* * q		5192890						
ANR	5193039	Symbol	* q		5192890						
ANR	5193040	Function	r_queue_enqueue	60:0:970:1203							
ANR	5193041	FunctionDef	"r_queue_enqueue (RQueue * q , void * el)"		5193040	0					
ANR	5193042	CompoundStatement		60:47:1017:1203	5193040	0					
ANR	5193043	IfStatement	if ( is_full ( q ) )		5193040	0					
ANR	5193044	Condition	is_full ( q )	61:5:1024:1033	5193040	0	True				
ANR	5193045	CallExpression	is_full ( q )		5193040	0					
ANR	5193046	Callee	is_full		5193040	0					
ANR	5193047	Identifier	is_full		5193040	0					
ANR	5193048	ArgumentList	q		5193040	1					
ANR	5193049	Argument	q		5193040	0					
ANR	5193050	Identifier	q		5193040	0					
ANR	5193051	CompoundStatement		3:2:22:53	5193040	1					
ANR	5193052	IdentifierDeclStatement	int res = increase_capacity ( q ) ;	62:2:1040:1071	5193040	0	True				
ANR	5193053	IdentifierDecl	res = increase_capacity ( q )		5193040	0					
ANR	5193054	IdentifierDeclType	int		5193040	0					
ANR	5193055	Identifier	res		5193040	1					
ANR	5193056	AssignmentExpression	res = increase_capacity ( q )		5193040	2		=			
ANR	5193057	Identifier	res		5193040	0					
ANR	5193058	CallExpression	increase_capacity ( q )		5193040	1					
ANR	5193059	Callee	increase_capacity		5193040	0					
ANR	5193060	Identifier	increase_capacity		5193040	0					
ANR	5193061	ArgumentList	q		5193040	1					
ANR	5193062	Argument	q		5193040	0					
ANR	5193063	Identifier	q		5193040	0					
ANR	5193064	IfStatement	if ( ! res )		5193040	1					
ANR	5193065	Condition	! res	63:6:1079:1082	5193040	0	True				
ANR	5193066	UnaryOperationExpression	! res		5193040	0					
ANR	5193067	UnaryOperator	!		5193040	0					
ANR	5193068	Identifier	res		5193040	1					
ANR	5193069	CompoundStatement		4:12:67:67	5193040	1					
ANR	5193070	ReturnStatement	return false ;	64:3:1090:1102	5193040	0	True				
ANR	5193071	Identifier	false		5193040	0					
ANR	5193072	ExpressionStatement	q -> rear = ( q -> rear + 1 ) % q -> capacity	68:1:1113:1150	5193040	1	True				
ANR	5193073	AssignmentExpression	q -> rear = ( q -> rear + 1 ) % q -> capacity		5193040	0		=			
ANR	5193074	PtrMemberAccess	q -> rear		5193040	0					
ANR	5193075	Identifier	q		5193040	0					
ANR	5193076	Identifier	rear		5193040	1					
ANR	5193077	MultiplicativeExpression	( q -> rear + 1 ) % q -> capacity		5193040	1		%			
ANR	5193078	AdditiveExpression	q -> rear + 1		5193040	0		+			
ANR	5193079	PtrMemberAccess	q -> rear		5193040	0					
ANR	5193080	Identifier	q		5193040	0					
ANR	5193081	Identifier	rear		5193040	1					
ANR	5193082	PrimaryExpression	1		5193040	1					
ANR	5193083	PtrMemberAccess	q -> capacity		5193040	1					
ANR	5193084	Identifier	q		5193040	0					
ANR	5193085	Identifier	capacity		5193040	1					
ANR	5193086	ExpressionStatement	q -> elems [ q -> rear ] = el	69:1:1153:1175	5193040	2	True				
ANR	5193087	AssignmentExpression	q -> elems [ q -> rear ] = el		5193040	0		=			
ANR	5193088	ArrayIndexing	q -> elems [ q -> rear ]		5193040	0					
ANR	5193089	PtrMemberAccess	q -> elems		5193040	0					
ANR	5193090	Identifier	q		5193040	0					
ANR	5193091	Identifier	elems		5193040	1					
ANR	5193092	PtrMemberAccess	q -> rear		5193040	1					
ANR	5193093	Identifier	q		5193040	0					
ANR	5193094	Identifier	rear		5193040	1					
ANR	5193095	Identifier	el		5193040	1					
ANR	5193096	ExpressionStatement	q -> size ++	70:1:1178:1187	5193040	3	True				
ANR	5193097	PostIncDecOperationExpression	q -> size ++		5193040	0					
ANR	5193098	PtrMemberAccess	q -> size		5193040	0					
ANR	5193099	Identifier	q		5193040	0					
ANR	5193100	Identifier	size		5193040	1					
ANR	5193101	IncDec	++		5193040	1					
ANR	5193102	ReturnStatement	return true ;	71:1:1190:1201	5193040	4	True				
ANR	5193103	Identifier	true		5193040	0					
ANR	5193104	ReturnType	R_API int		5193040	1					
ANR	5193105	Identifier	r_queue_enqueue		5193040	2					
ANR	5193106	ParameterList	"RQueue * q , void * el"		5193040	3					
ANR	5193107	Parameter	RQueue * q	60:26:996:1004	5193040	0	True				
ANR	5193108	ParameterType	RQueue *		5193040	0					
ANR	5193109	Identifier	q		5193040	1					
ANR	5193110	Parameter	void * el	60:37:1007:1014	5193040	1	True				
ANR	5193111	ParameterType	void *		5193040	0					
ANR	5193112	Identifier	el		5193040	1					
ANR	5193113	CFGEntryNode	ENTRY		5193040		True				
ANR	5193114	CFGExitNode	EXIT		5193040		True				
ANR	5193115	Symbol	res		5193040						
ANR	5193116	Symbol	* q -> rear		5193040						
ANR	5193117	Symbol	el		5193040						
ANR	5193118	Symbol	false		5193040						
ANR	5193119	Symbol	q -> elems		5193040						
ANR	5193120	Symbol	q -> capacity		5193040						
ANR	5193121	Symbol	q		5193040						
ANR	5193122	Symbol	is_full		5193040						
ANR	5193123	Symbol	* q -> elems		5193040						
ANR	5193124	Symbol	q -> rear		5193040						
ANR	5193125	Symbol	true		5193040						
ANR	5193126	Symbol	q -> size		5193040						
ANR	5193127	Symbol	* * q		5193040						
ANR	5193128	Symbol	* q		5193040						
ANR	5193129	Symbol	increase_capacity		5193040						
ANR	5193130	Function	r_queue_dequeue	74:0:1206:1401							
ANR	5193131	FunctionDef	r_queue_dequeue (RQueue * q)		5193130	0					
ANR	5193132	CompoundStatement		74:39:1245:1401	5193130	0					
ANR	5193133	IdentifierDeclStatement	void * res ;	75:1:1248:1257	5193130	0	True				
ANR	5193134	IdentifierDecl	* res		5193130	0					
ANR	5193135	IdentifierDeclType	void *		5193130	0					
ANR	5193136	Identifier	res		5193130	1					
ANR	5193137	IfStatement	if ( r_queue_is_empty ( q ) )		5193130	1					
ANR	5193138	Condition	r_queue_is_empty ( q )	77:5:1265:1284	5193130	0	True				
ANR	5193139	CallExpression	r_queue_is_empty ( q )		5193130	0					
ANR	5193140	Callee	r_queue_is_empty		5193130	0					
ANR	5193141	Identifier	r_queue_is_empty		5193130	0					
ANR	5193142	ArgumentList	q		5193130	1					
ANR	5193143	Argument	q		5193130	0					
ANR	5193144	Identifier	q		5193130	0					
ANR	5193145	CompoundStatement		4:27:41:41	5193130	1					
ANR	5193146	ReturnStatement	return NULL ;	78:2:1291:1302	5193130	0	True				
ANR	5193147	Identifier	NULL		5193130	0					
ANR	5193148	ExpressionStatement	res = q -> elems [ q -> front ]	80:1:1308:1332	5193130	2	True				
ANR	5193149	AssignmentExpression	res = q -> elems [ q -> front ]		5193130	0		=			
ANR	5193150	Identifier	res		5193130	0					
ANR	5193151	ArrayIndexing	q -> elems [ q -> front ]		5193130	1					
ANR	5193152	PtrMemberAccess	q -> elems		5193130	0					
ANR	5193153	Identifier	q		5193130	0					
ANR	5193154	Identifier	elems		5193130	1					
ANR	5193155	PtrMemberAccess	q -> front		5193130	1					
ANR	5193156	Identifier	q		5193130	0					
ANR	5193157	Identifier	front		5193130	1					
ANR	5193158	ExpressionStatement	q -> front = ( q -> front + 1 ) % q -> capacity	81:1:1335:1374	5193130	3	True				
ANR	5193159	AssignmentExpression	q -> front = ( q -> front + 1 ) % q -> capacity		5193130	0		=			
ANR	5193160	PtrMemberAccess	q -> front		5193130	0					
ANR	5193161	Identifier	q		5193130	0					
ANR	5193162	Identifier	front		5193130	1					
ANR	5193163	MultiplicativeExpression	( q -> front + 1 ) % q -> capacity		5193130	1		%			
ANR	5193164	AdditiveExpression	q -> front + 1		5193130	0		+			
ANR	5193165	PtrMemberAccess	q -> front		5193130	0					
ANR	5193166	Identifier	q		5193130	0					
ANR	5193167	Identifier	front		5193130	1					
ANR	5193168	PrimaryExpression	1		5193130	1					
ANR	5193169	PtrMemberAccess	q -> capacity		5193130	1					
ANR	5193170	Identifier	q		5193130	0					
ANR	5193171	Identifier	capacity		5193130	1					
ANR	5193172	ExpressionStatement	q -> size --	82:1:1377:1386	5193130	4	True				
ANR	5193173	PostIncDecOperationExpression	q -> size --		5193130	0					
ANR	5193174	PtrMemberAccess	q -> size		5193130	0					
ANR	5193175	Identifier	q		5193130	0					
ANR	5193176	Identifier	size		5193130	1					
ANR	5193177	IncDec	--		5193130	1					
ANR	5193178	ReturnStatement	return res ;	83:1:1389:1399	5193130	5	True				
ANR	5193179	Identifier	res		5193130	0					
ANR	5193180	ReturnType	R_API void *		5193130	1					
ANR	5193181	Identifier	r_queue_dequeue		5193130	2					
ANR	5193182	ParameterList	RQueue * q		5193130	3					
ANR	5193183	Parameter	RQueue * q	74:28:1234:1242	5193130	0	True				
ANR	5193184	ParameterType	RQueue *		5193130	0					
ANR	5193185	Identifier	q		5193130	1					
ANR	5193186	CFGEntryNode	ENTRY		5193130		True				
ANR	5193187	CFGExitNode	EXIT		5193130		True				
ANR	5193188	Symbol	q -> capacity		5193130						
ANR	5193189	Symbol	q		5193130						
ANR	5193190	Symbol	res		5193130						
ANR	5193191	Symbol	* q -> elems		5193130						
ANR	5193192	Symbol	NULL		5193130						
ANR	5193193	Symbol	q -> front		5193130						
ANR	5193194	Symbol	* q -> front		5193130						
ANR	5193195	Symbol	r_queue_is_empty		5193130						
ANR	5193196	Symbol	q -> elems		5193130						
ANR	5193197	Symbol	q -> size		5193130						
ANR	5193198	Symbol	* * q		5193130						
ANR	5193199	Symbol	* q		5193130						
ANR	5193200	Function	r_queue_is_empty	86:0:1404:1466							
ANR	5193201	FunctionDef	r_queue_is_empty (RQueue * q)		5193200	0					
ANR	5193202	CompoundStatement		86:38:1442:1466	5193200	0					
ANR	5193203	ReturnStatement	return q -> size == 0 ;	87:1:1445:1464	5193200	0	True				
ANR	5193204	EqualityExpression	q -> size == 0		5193200	0		==			
ANR	5193205	PtrMemberAccess	q -> size		5193200	0					
ANR	5193206	Identifier	q		5193200	0					
ANR	5193207	Identifier	size		5193200	1					
ANR	5193208	PrimaryExpression	0		5193200	1					
ANR	5193209	ReturnType	R_API int		5193200	1					
ANR	5193210	Identifier	r_queue_is_empty		5193200	2					
ANR	5193211	ParameterList	RQueue * q		5193200	3					
ANR	5193212	Parameter	RQueue * q	86:27:1431:1439	5193200	0	True				
ANR	5193213	ParameterType	RQueue *		5193200	0					
ANR	5193214	Identifier	q		5193200	1					
ANR	5193215	CFGEntryNode	ENTRY		5193200		True				
ANR	5193216	CFGExitNode	EXIT		5193200		True				
ANR	5193217	Symbol	q		5193200						
ANR	5193218	Symbol	q -> size		5193200						
ANR	5193219	Symbol	* q		5193200						
