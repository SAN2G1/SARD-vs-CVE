command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6618008	File	data/converged/CVE-2019-16718~_radare2/zip_close.c								
ANR	6618009	DeclStmt									
ANR	6618010	Decl							int	"int ( struct zip * , struct zip_source * , struct zip_dirent * , FILE * )"	add_data
ANR	6618011	DeclStmt									
ANR	6618012	Decl							int	"int ( FILE * , zip_uint64_t , FILE * , struct zip_error * )"	copy_data
ANR	6618013	DeclStmt									
ANR	6618014	Decl							int	"int ( struct zip * , struct zip_source * , FILE * )"	copy_source
ANR	6618015	DeclStmt									
ANR	6618016	Decl							int	"int ( struct zip * , const struct zip_filelist * , zip_uint64_t , FILE * )"	write_cdir
ANR	6618017	DeclStmt									
ANR	6618018	Decl							char	"char * ( struct zip * , FILE * * )"	_zip_create_temp_output
ANR	6618019	DeclStmt									
ANR	6618020	Decl							int	"int ( const void * , const void * )"	_zip_torrentzip_cmp
ANR	6618021	Function	zip_close	68:0:2461:7386							
ANR	6618022	FunctionDef	zip_close (struct zip * za)		6618021	0					
ANR	6618023	CompoundStatement		70:0:2502:7386	6618021	0					
ANR	6618024	IdentifierDeclStatement	"zip_uint64_t i , j , survivors ;"	71:4:2508:2536	6618021	0	True				
ANR	6618025	IdentifierDecl	i		6618021	0					
ANR	6618026	IdentifierDeclType	zip_uint64_t		6618021	0					
ANR	6618027	Identifier	i		6618021	1					
ANR	6618028	IdentifierDecl	j		6618021	1					
ANR	6618029	IdentifierDeclType	zip_uint64_t		6618021	0					
ANR	6618030	Identifier	j		6618021	1					
ANR	6618031	IdentifierDecl	survivors		6618021	2					
ANR	6618032	IdentifierDeclType	zip_uint64_t		6618021	0					
ANR	6618033	Identifier	survivors		6618021	1					
ANR	6618034	IdentifierDeclStatement	int error ;	72:4:2542:2551	6618021	1	True				
ANR	6618035	IdentifierDecl	error		6618021	0					
ANR	6618036	IdentifierDeclType	int		6618021	0					
ANR	6618037	Identifier	error		6618021	1					
ANR	6618038	IdentifierDeclStatement	char * temp ;	73:4:2557:2567	6618021	2	True				
ANR	6618039	IdentifierDecl	* temp		6618021	0					
ANR	6618040	IdentifierDeclType	char *		6618021	0					
ANR	6618041	Identifier	temp		6618021	1					
ANR	6618042	IdentifierDeclStatement	FILE * out ;	74:4:2573:2582	6618021	3	True				
ANR	6618043	IdentifierDecl	* out		6618021	0					
ANR	6618044	IdentifierDeclType	FILE *		6618021	0					
ANR	6618045	Identifier	out		6618021	1					
ANR	6618046	IdentifierDeclStatement	mode_t mask ;	76:4:2608:2619	6618021	4	True				
ANR	6618047	IdentifierDecl	mask		6618021	0					
ANR	6618048	IdentifierDeclType	mode_t		6618021	0					
ANR	6618049	Identifier	mask		6618021	1					
ANR	6618050	IdentifierDeclStatement	struct zip_filelist * filelist ;	78:4:2632:2661	6618021	5	True				
ANR	6618051	IdentifierDecl	* filelist		6618021	0					
ANR	6618052	IdentifierDeclType	struct zip_filelist *		6618021	0					
ANR	6618053	Identifier	filelist		6618021	1					
ANR	6618054	IdentifierDeclStatement	int reopen_on_error ;	79:4:2667:2686	6618021	6	True				
ANR	6618055	IdentifierDecl	reopen_on_error		6618021	0					
ANR	6618056	IdentifierDeclType	int		6618021	0					
ANR	6618057	Identifier	reopen_on_error		6618021	1					
ANR	6618058	IdentifierDeclStatement	int new_torrentzip ;	80:4:2692:2710	6618021	7	True				
ANR	6618059	IdentifierDecl	new_torrentzip		6618021	0					
ANR	6618060	IdentifierDeclType	int		6618021	0					
ANR	6618061	Identifier	new_torrentzip		6618021	1					
ANR	6618062	IdentifierDeclStatement	int changed ;	81:4:2716:2727	6618021	8	True				
ANR	6618063	IdentifierDecl	changed		6618021	0					
ANR	6618064	IdentifierDeclType	int		6618021	0					
ANR	6618065	Identifier	changed		6618021	1					
ANR	6618066	ExpressionStatement	reopen_on_error = 0	83:4:2734:2753	6618021	9	True				
ANR	6618067	AssignmentExpression	reopen_on_error = 0		6618021	0		=			
ANR	6618068	Identifier	reopen_on_error		6618021	0					
ANR	6618069	PrimaryExpression	0		6618021	1					
ANR	6618070	IfStatement	if ( za == NULL )		6618021	10					
ANR	6618071	Condition	za == NULL	85:8:2764:2773	6618021	0	True				
ANR	6618072	EqualityExpression	za == NULL		6618021	0		==			
ANR	6618073	Identifier	za		6618021	0					
ANR	6618074	Identifier	NULL		6618021	1					
ANR	6618075	ReturnStatement	return - 1 ;	86:1:2777:2786	6618021	1	True				
ANR	6618076	UnaryOperationExpression	- 1		6618021	0					
ANR	6618077	UnaryOperator	-		6618021	0					
ANR	6618078	PrimaryExpression	1		6618021	1					
ANR	6618079	ExpressionStatement	"changed = _zip_changed ( za , & survivors )"	88:4:2793:2831	6618021	11	True				
ANR	6618080	AssignmentExpression	"changed = _zip_changed ( za , & survivors )"		6618021	0		=			
ANR	6618081	Identifier	changed		6618021	0					
ANR	6618082	CallExpression	"_zip_changed ( za , & survivors )"		6618021	1					
ANR	6618083	Callee	_zip_changed		6618021	0					
ANR	6618084	Identifier	_zip_changed		6618021	0					
ANR	6618085	ArgumentList	za		6618021	1					
ANR	6618086	Argument	za		6618021	0					
ANR	6618087	Identifier	za		6618021	0					
ANR	6618088	Argument	& survivors		6618021	1					
ANR	6618089	UnaryOperationExpression	& survivors		6618021	0					
ANR	6618090	UnaryOperator	&		6618021	0					
ANR	6618091	Identifier	survivors		6618021	1					
ANR	6618092	IfStatement	if ( survivors == 0 )		6618021	12					
ANR	6618093	Condition	survivors == 0	91:8:2891:2904	6618021	0	True				
ANR	6618094	EqualityExpression	survivors == 0		6618021	0		==			
ANR	6618095	Identifier	survivors		6618021	0					
ANR	6618096	PrimaryExpression	0		6618021	1					
ANR	6618097	CompoundStatement		22:24:404:404	6618021	1					
ANR	6618098	IfStatement	if ( za -> zn && ( ( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp ) ) )		6618021	0					
ANR	6618099	Condition	za -> zn && ( ( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp ) )	92:5:2914:2979	6618021	0	True				
ANR	6618100	AndExpression	za -> zn && ( ( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp ) )		6618021	0		&&			
ANR	6618101	PtrMemberAccess	za -> zn		6618021	0					
ANR	6618102	Identifier	za		6618021	0					
ANR	6618103	Identifier	zn		6618021	1					
ANR	6618104	OrExpression	( za -> open_flags & ZIP_TRUNCATE ) || ( changed && za -> zp )		6618021	1		||			
ANR	6618105	BitAndExpression	za -> open_flags & ZIP_TRUNCATE		6618021	0		&			
ANR	6618106	PtrMemberAccess	za -> open_flags		6618021	0					
ANR	6618107	Identifier	za		6618021	0					
ANR	6618108	Identifier	open_flags		6618021	1					
ANR	6618109	Identifier	ZIP_TRUNCATE		6618021	1					
ANR	6618110	AndExpression	changed && za -> zp		6618021	1		&&			
ANR	6618111	Identifier	changed		6618021	0					
ANR	6618112	PtrMemberAccess	za -> zp		6618021	1					
ANR	6618113	Identifier	za		6618021	0					
ANR	6618114	Identifier	zp		6618021	1					
ANR	6618115	CompoundStatement		23:73:479:479	6618021	1					
ANR	6618116	IfStatement	if ( remove ( za -> zn ) != 0 )		6618021	0					
ANR	6618117	Condition	remove ( za -> zn ) != 0	93:9:2993:3011	6618021	0	True				
ANR	6618118	EqualityExpression	remove ( za -> zn ) != 0		6618021	0		!=			
ANR	6618119	CallExpression	remove ( za -> zn )		6618021	0					
ANR	6618120	Callee	remove		6618021	0					
ANR	6618121	Identifier	remove		6618021	0					
ANR	6618122	ArgumentList	za -> zn		6618021	1					
ANR	6618123	Argument	za -> zn		6618021	0					
ANR	6618124	PtrMemberAccess	za -> zn		6618021	0					
ANR	6618125	Identifier	za		6618021	0					
ANR	6618126	Identifier	zn		6618021	1					
ANR	6618127	PrimaryExpression	0		6618021	1					
ANR	6618128	CompoundStatement		24:30:511:511	6618021	1					
ANR	6618129	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_REMOVE , errno )"	94:2:3018:3066	6618021	0	True				
ANR	6618130	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_REMOVE , errno )"		6618021	0					
ANR	6618131	Callee	_zip_error_set		6618021	0					
ANR	6618132	Identifier	_zip_error_set		6618021	0					
ANR	6618133	ArgumentList	& za -> error		6618021	1					
ANR	6618134	Argument	& za -> error		6618021	0					
ANR	6618135	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618136	UnaryOperator	&		6618021	0					
ANR	6618137	PtrMemberAccess	za -> error		6618021	1					
ANR	6618138	Identifier	za		6618021	0					
ANR	6618139	Identifier	error		6618021	1					
ANR	6618140	Argument	ZIP_ER_REMOVE		6618021	1					
ANR	6618141	Identifier	ZIP_ER_REMOVE		6618021	0					
ANR	6618142	Argument	errno		6618021	2					
ANR	6618143	Identifier	errno		6618021	0					
ANR	6618144	ReturnStatement	return - 1 ;	95:2:3070:3079	6618021	1	True				
ANR	6618145	UnaryOperationExpression	- 1		6618021	0					
ANR	6618146	UnaryOperator	-		6618021	0					
ANR	6618147	PrimaryExpression	1		6618021	1					
ANR	6618148	ExpressionStatement	zip_discard ( za )	98:1:3092:3107	6618021	1	True				
ANR	6618149	CallExpression	zip_discard ( za )		6618021	0					
ANR	6618150	Callee	zip_discard		6618021	0					
ANR	6618151	Identifier	zip_discard		6618021	0					
ANR	6618152	ArgumentList	za		6618021	1					
ANR	6618153	Argument	za		6618021	0					
ANR	6618154	Identifier	za		6618021	0					
ANR	6618155	ReturnStatement	return 0 ;	99:1:3110:3118	6618021	2	True				
ANR	6618156	PrimaryExpression	0		6618021	0					
ANR	6618157	IfStatement	if ( ! changed )		6618021	13					
ANR	6618158	Condition	! changed	102:8:3135:3142	6618021	0	True				
ANR	6618159	UnaryOperationExpression	! changed		6618021	0					
ANR	6618160	UnaryOperator	!		6618021	0					
ANR	6618161	Identifier	changed		6618021	1					
ANR	6618162	CompoundStatement		33:18:642:642	6618021	1					
ANR	6618163	ExpressionStatement	zip_discard ( za )	103:1:3148:3163	6618021	0	True				
ANR	6618164	CallExpression	zip_discard ( za )		6618021	0					
ANR	6618165	Callee	zip_discard		6618021	0					
ANR	6618166	Identifier	zip_discard		6618021	0					
ANR	6618167	ArgumentList	za		6618021	1					
ANR	6618168	Argument	za		6618021	0					
ANR	6618169	Identifier	za		6618021	0					
ANR	6618170	ReturnStatement	return 0 ;	104:1:3166:3174	6618021	1	True				
ANR	6618171	PrimaryExpression	0		6618021	0					
ANR	6618172	IfStatement	if ( survivors > za -> nentry )		6618021	14					
ANR	6618173	Condition	survivors > za -> nentry	107:8:3191:3212	6618021	0	True				
ANR	6618174	RelationalExpression	survivors > za -> nentry		6618021	0		>			
ANR	6618175	Identifier	survivors		6618021	0					
ANR	6618176	PtrMemberAccess	za -> nentry		6618021	1					
ANR	6618177	Identifier	za		6618021	0					
ANR	6618178	Identifier	nentry		6618021	1					
ANR	6618179	CompoundStatement		38:32:712:712	6618021	1					
ANR	6618180	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	108:8:3225:3271	6618021	0	True				
ANR	6618181	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6618021	0					
ANR	6618182	Callee	_zip_error_set		6618021	0					
ANR	6618183	Identifier	_zip_error_set		6618021	0					
ANR	6618184	ArgumentList	& za -> error		6618021	1					
ANR	6618185	Argument	& za -> error		6618021	0					
ANR	6618186	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618187	UnaryOperator	&		6618021	0					
ANR	6618188	PtrMemberAccess	za -> error		6618021	1					
ANR	6618189	Identifier	za		6618021	0					
ANR	6618190	Identifier	error		6618021	1					
ANR	6618191	Argument	ZIP_ER_INTERNAL		6618021	1					
ANR	6618192	Identifier	ZIP_ER_INTERNAL		6618021	0					
ANR	6618193	Argument	0		6618021	2					
ANR	6618194	PrimaryExpression	0		6618021	0					
ANR	6618195	ReturnStatement	return - 1 ;	109:8:3281:3290	6618021	1	True				
ANR	6618196	UnaryOperationExpression	- 1		6618021	0					
ANR	6618197	UnaryOperator	-		6618021	0					
ANR	6618198	PrimaryExpression	1		6618021	1					
ANR	6618199	IfStatement	if ( ( filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors ) ) == NULL )		6618021	15					
ANR	6618200	Condition	( filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors ) ) == NULL	112:8:3307:3385	6618021	0	True				
ANR	6618201	EqualityExpression	( filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors ) ) == NULL		6618021	0		==			
ANR	6618202	AssignmentExpression	filelist = ( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors )		6618021	0		=			
ANR	6618203	Identifier	filelist		6618021	0					
ANR	6618204	CastExpression	( struct zip_filelist * ) malloc ( sizeof ( filelist [ 0 ] ) * survivors )		6618021	1					
ANR	6618205	CastTarget	struct zip_filelist *		6618021	0					
ANR	6618206	CallExpression	malloc ( sizeof ( filelist [ 0 ] ) * survivors )		6618021	1					
ANR	6618207	Callee	malloc		6618021	0					
ANR	6618208	Identifier	malloc		6618021	0					
ANR	6618209	ArgumentList	sizeof ( filelist [ 0 ] ) * survivors		6618021	1					
ANR	6618210	Argument	sizeof ( filelist [ 0 ] ) * survivors		6618021	0					
ANR	6618211	MultiplicativeExpression	sizeof ( filelist [ 0 ] ) * survivors		6618021	0		*			
ANR	6618212	SizeofExpression	sizeof ( filelist [ 0 ] )		6618021	0					
ANR	6618213	Sizeof	sizeof		6618021	0					
ANR	6618214	ArrayIndexing	filelist [ 0 ]		6618021	1					
ANR	6618215	Identifier	filelist		6618021	0					
ANR	6618216	PrimaryExpression	0		6618021	1					
ANR	6618217	Identifier	survivors		6618021	1					
ANR	6618218	Identifier	NULL		6618021	1					
ANR	6618219	ReturnStatement	return - 1 ;	113:1:3389:3398	6618021	1	True				
ANR	6618220	UnaryOperationExpression	- 1		6618021	0					
ANR	6618221	UnaryOperator	-		6618021	0					
ANR	6618222	PrimaryExpression	1		6618021	1					
ANR	6618223	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6618021	16					
ANR	6618224	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	116:8:3461:3504	6618021	0	True				
ANR	6618225	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6618021	0					
ANR	6618226	Callee	zip_get_archive_flag		6618021	0					
ANR	6618227	Identifier	zip_get_archive_flag		6618021	0					
ANR	6618228	ArgumentList	za		6618021	1					
ANR	6618229	Argument	za		6618021	0					
ANR	6618230	Identifier	za		6618021	0					
ANR	6618231	Argument	ZIP_AFL_TORRENT		6618021	1					
ANR	6618232	Identifier	ZIP_AFL_TORRENT		6618021	0					
ANR	6618233	Argument	0		6618021	2					
ANR	6618234	PrimaryExpression	0		6618021	0					
ANR	6618235	CompoundStatement		47:54:1004:1004	6618021	1					
ANR	6618236	Statement	if	118:1:3593:3594	6618021	0	True				
ANR	6618237	Statement	(	118:4:3596:3596	6618021	1	True				
ANR	6618238	Statement	zip_set_archive_comment	118:5:3597:3619	6618021	2	True				
ANR	6618239	Statement	(	118:28:3620:3620	6618021	3	True				
ANR	6618240	Statement	za	118:29:3621:3622	6618021	4	True				
ANR	6618241	Statement	","	118:31:3623:3623	6618021	5	True				
ANR	6618242	Statement	TORRENT_SIG	118:33:3625:3635	6618021	6	True				
ANR	6618243	Statement	"""XXXXXXXX"""	118:45:3637:3646	6618021	7	True				
ANR	6618244	Statement	","	118:55:3647:3647	6618021	8	True				
ANR	6618245	Statement	TORRENT_SIG_LEN	118:57:3649:3663	6618021	9	True				
ANR	6618246	Statement	+	118:73:3665:3665	6618021	10	True				
ANR	6618247	Statement	TORRENT_CRC_LEN	118:75:3667:3681	6618021	11	True				
ANR	6618248	Statement	)	118:90:3682:3682	6618021	12	True				
ANR	6618249	Statement	<	118:92:3684:3684	6618021	13	True				
ANR	6618250	Statement	0	118:94:3686:3686	6618021	14	True				
ANR	6618251	Statement	)	118:95:3687:3687	6618021	15	True				
ANR	6618252	CompoundStatement		49:97:1186:1186	6618021	16					
ANR	6618253	ExpressionStatement	free ( filelist )	119:5:3696:3710	6618021	0	True				
ANR	6618254	CallExpression	free ( filelist )		6618021	0					
ANR	6618255	Callee	free		6618021	0					
ANR	6618256	Identifier	free		6618021	0					
ANR	6618257	ArgumentList	filelist		6618021	1					
ANR	6618258	Argument	filelist		6618021	0					
ANR	6618259	Identifier	filelist		6618021	0					
ANR	6618260	ReturnStatement	return - 1 ;	120:5:3717:3726	6618021	1	True				
ANR	6618261	UnaryOperationExpression	- 1		6618021	0					
ANR	6618262	UnaryOperator	-		6618021	0					
ANR	6618263	PrimaryExpression	1		6618021	1					
ANR	6618264	ForStatement	for ( i = j = 0 ; i < za -> nentry ; i ++ )		6618021	17					
ANR	6618265	ForInit	i = j = 0 ;	127:9:3903:3908	6618021	0	True				
ANR	6618266	AssignmentExpression	i = j = 0		6618021	0		=			
ANR	6618267	Identifier	i		6618021	0					
ANR	6618268	AssignmentExpression	j = 0		6618021	1		=			
ANR	6618269	Identifier	j		6618021	0					
ANR	6618270	PrimaryExpression	0		6618021	1					
ANR	6618271	Condition	i < za -> nentry	127:16:3910:3921	6618021	1	True				
ANR	6618272	RelationalExpression	i < za -> nentry		6618021	0		<			
ANR	6618273	Identifier	i		6618021	0					
ANR	6618274	PtrMemberAccess	za -> nentry		6618021	1					
ANR	6618275	Identifier	za		6618021	0					
ANR	6618276	Identifier	nentry		6618021	1					
ANR	6618277	PostIncDecOperationExpression	i ++	127:30:3924:3926	6618021	2	True				
ANR	6618278	Identifier	i		6618021	0					
ANR	6618279	IncDec	++		6618021	1					
ANR	6618280	CompoundStatement		58:35:1426:1426	6618021	3					
ANR	6618281	IfStatement	if ( za -> entry [ i ] . deleted )		6618021	0					
ANR	6618282	Condition	za -> entry [ i ] . deleted	128:5:3936:3955	6618021	0	True				
ANR	6618283	MemberAccess	za -> entry [ i ] . deleted		6618021	0					
ANR	6618284	ArrayIndexing	za -> entry [ i ]		6618021	0					
ANR	6618285	PtrMemberAccess	za -> entry		6618021	0					
ANR	6618286	Identifier	za		6618021	0					
ANR	6618287	Identifier	entry		6618021	1					
ANR	6618288	Identifier	i		6618021	1					
ANR	6618289	Identifier	deleted		6618021	1					
ANR	6618290	ContinueStatement	continue ;	129:5:3963:3971	6618021	1	True				
ANR	6618291	IfStatement	if ( j >= survivors )		6618021	1					
ANR	6618292	Condition	j >= survivors	131:12:3986:3999	6618021	0	True				
ANR	6618293	RelationalExpression	j >= survivors		6618021	0		>=			
ANR	6618294	Identifier	j		6618021	0					
ANR	6618295	Identifier	survivors		6618021	1					
ANR	6618296	CompoundStatement		62:28:1499:1499	6618021	1					
ANR	6618297	ExpressionStatement	free ( filelist )	132:12:4016:4030	6618021	0	True				
ANR	6618298	CallExpression	free ( filelist )		6618021	0					
ANR	6618299	Callee	free		6618021	0					
ANR	6618300	Identifier	free		6618021	0					
ANR	6618301	ArgumentList	filelist		6618021	1					
ANR	6618302	Argument	filelist		6618021	0					
ANR	6618303	Identifier	filelist		6618021	0					
ANR	6618304	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	133:12:4044:4090	6618021	1	True				
ANR	6618305	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6618021	0					
ANR	6618306	Callee	_zip_error_set		6618021	0					
ANR	6618307	Identifier	_zip_error_set		6618021	0					
ANR	6618308	ArgumentList	& za -> error		6618021	1					
ANR	6618309	Argument	& za -> error		6618021	0					
ANR	6618310	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618311	UnaryOperator	&		6618021	0					
ANR	6618312	PtrMemberAccess	za -> error		6618021	1					
ANR	6618313	Identifier	za		6618021	0					
ANR	6618314	Identifier	error		6618021	1					
ANR	6618315	Argument	ZIP_ER_INTERNAL		6618021	1					
ANR	6618316	Identifier	ZIP_ER_INTERNAL		6618021	0					
ANR	6618317	Argument	0		6618021	2					
ANR	6618318	PrimaryExpression	0		6618021	0					
ANR	6618319	ReturnStatement	return - 1 ;	134:12:4104:4113	6618021	2	True				
ANR	6618320	UnaryOperationExpression	- 1		6618021	0					
ANR	6618321	UnaryOperator	-		6618021	0					
ANR	6618322	PrimaryExpression	1		6618021	1					
ANR	6618323	ExpressionStatement	filelist [ j ] . idx = i	136:1:4126:4145	6618021	2	True				
ANR	6618324	AssignmentExpression	filelist [ j ] . idx = i		6618021	0		=			
ANR	6618325	MemberAccess	filelist [ j ] . idx		6618021	0					
ANR	6618326	ArrayIndexing	filelist [ j ]		6618021	0					
ANR	6618327	Identifier	filelist		6618021	0					
ANR	6618328	Identifier	j		6618021	1					
ANR	6618329	Identifier	idx		6618021	1					
ANR	6618330	Identifier	i		6618021	1					
ANR	6618331	ExpressionStatement	"filelist [ j ] . name = zip_get_name ( za , i , 0 )"	137:1:4148:4189	6618021	3	True				
ANR	6618332	AssignmentExpression	"filelist [ j ] . name = zip_get_name ( za , i , 0 )"		6618021	0		=			
ANR	6618333	MemberAccess	filelist [ j ] . name		6618021	0					
ANR	6618334	ArrayIndexing	filelist [ j ]		6618021	0					
ANR	6618335	Identifier	filelist		6618021	0					
ANR	6618336	Identifier	j		6618021	1					
ANR	6618337	Identifier	name		6618021	1					
ANR	6618338	CallExpression	"zip_get_name ( za , i , 0 )"		6618021	1					
ANR	6618339	Callee	zip_get_name		6618021	0					
ANR	6618340	Identifier	zip_get_name		6618021	0					
ANR	6618341	ArgumentList	za		6618021	1					
ANR	6618342	Argument	za		6618021	0					
ANR	6618343	Identifier	za		6618021	0					
ANR	6618344	Argument	i		6618021	1					
ANR	6618345	Identifier	i		6618021	0					
ANR	6618346	Argument	0		6618021	2					
ANR	6618347	PrimaryExpression	0		6618021	0					
ANR	6618348	ExpressionStatement	j ++	138:1:4192:4195	6618021	4	True				
ANR	6618349	PostIncDecOperationExpression	j ++		6618021	0					
ANR	6618350	Identifier	j		6618021	0					
ANR	6618351	IncDec	++		6618021	1					
ANR	6618352	IfStatement	if ( j < survivors )		6618021	18					
ANR	6618353	Condition	j < survivors	140:8:4211:4223	6618021	0	True				
ANR	6618354	RelationalExpression	j < survivors		6618021	0		<			
ANR	6618355	Identifier	j		6618021	0					
ANR	6618356	Identifier	survivors		6618021	1					
ANR	6618357	CompoundStatement		71:23:1723:1723	6618021	1					
ANR	6618358	ExpressionStatement	free ( filelist )	141:8:4236:4250	6618021	0	True				
ANR	6618359	CallExpression	free ( filelist )		6618021	0					
ANR	6618360	Callee	free		6618021	0					
ANR	6618361	Identifier	free		6618021	0					
ANR	6618362	ArgumentList	filelist		6618021	1					
ANR	6618363	Argument	filelist		6618021	0					
ANR	6618364	Identifier	filelist		6618021	0					
ANR	6618365	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	142:8:4260:4306	6618021	1	True				
ANR	6618366	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6618021	0					
ANR	6618367	Callee	_zip_error_set		6618021	0					
ANR	6618368	Identifier	_zip_error_set		6618021	0					
ANR	6618369	ArgumentList	& za -> error		6618021	1					
ANR	6618370	Argument	& za -> error		6618021	0					
ANR	6618371	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618372	UnaryOperator	&		6618021	0					
ANR	6618373	PtrMemberAccess	za -> error		6618021	1					
ANR	6618374	Identifier	za		6618021	0					
ANR	6618375	Identifier	error		6618021	1					
ANR	6618376	Argument	ZIP_ER_INTERNAL		6618021	1					
ANR	6618377	Identifier	ZIP_ER_INTERNAL		6618021	0					
ANR	6618378	Argument	0		6618021	2					
ANR	6618379	PrimaryExpression	0		6618021	0					
ANR	6618380	ReturnStatement	return - 1 ;	143:8:4316:4325	6618021	2	True				
ANR	6618381	UnaryOperationExpression	- 1		6618021	0					
ANR	6618382	UnaryOperator	-		6618021	0					
ANR	6618383	PrimaryExpression	1		6618021	1					
ANR	6618384	IfStatement	"if ( ( temp = _zip_create_temp_output ( za , & out ) ) == NULL )"		6618021	19					
ANR	6618385	Condition	"( temp = _zip_create_temp_output ( za , & out ) ) == NULL"	147:8:4343:4390	6618021	0	True				
ANR	6618386	EqualityExpression	"( temp = _zip_create_temp_output ( za , & out ) ) == NULL"		6618021	0		==			
ANR	6618387	AssignmentExpression	"temp = _zip_create_temp_output ( za , & out )"		6618021	0		=			
ANR	6618388	Identifier	temp		6618021	0					
ANR	6618389	CallExpression	"_zip_create_temp_output ( za , & out )"		6618021	1					
ANR	6618390	Callee	_zip_create_temp_output		6618021	0					
ANR	6618391	Identifier	_zip_create_temp_output		6618021	0					
ANR	6618392	ArgumentList	za		6618021	1					
ANR	6618393	Argument	za		6618021	0					
ANR	6618394	Identifier	za		6618021	0					
ANR	6618395	Argument	& out		6618021	1					
ANR	6618396	UnaryOperationExpression	& out		6618021	0					
ANR	6618397	UnaryOperator	&		6618021	0					
ANR	6618398	Identifier	out		6618021	1					
ANR	6618399	Identifier	NULL		6618021	1					
ANR	6618400	CompoundStatement		78:58:1890:1890	6618021	1					
ANR	6618401	ExpressionStatement	free ( filelist )	148:1:4396:4410	6618021	0	True				
ANR	6618402	CallExpression	free ( filelist )		6618021	0					
ANR	6618403	Callee	free		6618021	0					
ANR	6618404	Identifier	free		6618021	0					
ANR	6618405	ArgumentList	filelist		6618021	1					
ANR	6618406	Argument	filelist		6618021	0					
ANR	6618407	Identifier	filelist		6618021	0					
ANR	6618408	ReturnStatement	return - 1 ;	149:1:4413:4422	6618021	1	True				
ANR	6618409	UnaryOperationExpression	- 1		6618021	0					
ANR	6618410	UnaryOperator	-		6618021	0					
ANR	6618411	PrimaryExpression	1		6618021	1					
ANR	6618412	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6618021	20					
ANR	6618413	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	152:8:4443:4486	6618021	0	True				
ANR	6618414	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6618021	0					
ANR	6618415	Callee	zip_get_archive_flag		6618021	0					
ANR	6618416	Identifier	zip_get_archive_flag		6618021	0					
ANR	6618417	ArgumentList	za		6618021	1					
ANR	6618418	Argument	za		6618021	0					
ANR	6618419	Identifier	za		6618021	0					
ANR	6618420	Argument	ZIP_AFL_TORRENT		6618021	1					
ANR	6618421	Identifier	ZIP_AFL_TORRENT		6618021	0					
ANR	6618422	Argument	0		6618021	2					
ANR	6618423	PrimaryExpression	0		6618021	0					
ANR	6618424	ExpressionStatement	"qsort ( filelist , survivors , sizeof ( filelist [ 0 ] ) , _zip_torrentzip_cmp )"	153:1:4490:4565	6618021	1	True				
ANR	6618425	CallExpression	"qsort ( filelist , survivors , sizeof ( filelist [ 0 ] ) , _zip_torrentzip_cmp )"		6618021	0					
ANR	6618426	Callee	qsort		6618021	0					
ANR	6618427	Identifier	qsort		6618021	0					
ANR	6618428	ArgumentList	filelist		6618021	1					
ANR	6618429	Argument	filelist		6618021	0					
ANR	6618430	Identifier	filelist		6618021	0					
ANR	6618431	Argument	survivors		6618021	1					
ANR	6618432	Identifier	survivors		6618021	0					
ANR	6618433	Argument	sizeof ( filelist [ 0 ] )		6618021	2					
ANR	6618434	SizeofExpression	sizeof ( filelist [ 0 ] )		6618021	0					
ANR	6618435	Sizeof	sizeof		6618021	0					
ANR	6618436	ArrayIndexing	filelist [ 0 ]		6618021	1					
ANR	6618437	Identifier	filelist		6618021	0					
ANR	6618438	PrimaryExpression	0		6618021	1					
ANR	6618439	Argument	_zip_torrentzip_cmp		6618021	3					
ANR	6618440	Identifier	_zip_torrentzip_cmp		6618021	0					
ANR	6618441	ExpressionStatement	"new_torrentzip = ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1 && zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0 )"	156:4:4572:4727	6618021	21	True				
ANR	6618442	AssignmentExpression	"new_torrentzip = ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1 && zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0 )"		6618021	0		=			
ANR	6618443	Identifier	new_torrentzip		6618021	0					
ANR	6618444	AndExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1 && zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0"		6618021	1		&&			
ANR	6618445	EqualityExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 1"		6618021	0		==			
ANR	6618446	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6618021	0					
ANR	6618447	Callee	zip_get_archive_flag		6618021	0					
ANR	6618448	Identifier	zip_get_archive_flag		6618021	0					
ANR	6618449	ArgumentList	za		6618021	1					
ANR	6618450	Argument	za		6618021	0					
ANR	6618451	Identifier	za		6618021	0					
ANR	6618452	Argument	ZIP_AFL_TORRENT		6618021	1					
ANR	6618453	Identifier	ZIP_AFL_TORRENT		6618021	0					
ANR	6618454	Argument	0		6618021	2					
ANR	6618455	PrimaryExpression	0		6618021	0					
ANR	6618456	PrimaryExpression	1		6618021	1					
ANR	6618457	EqualityExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED ) == 0"		6618021	1		==			
ANR	6618458	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , ZIP_FL_UNCHANGED )"		6618021	0					
ANR	6618459	Callee	zip_get_archive_flag		6618021	0					
ANR	6618460	Identifier	zip_get_archive_flag		6618021	0					
ANR	6618461	ArgumentList	za		6618021	1					
ANR	6618462	Argument	za		6618021	0					
ANR	6618463	Identifier	za		6618021	0					
ANR	6618464	Argument	ZIP_AFL_TORRENT		6618021	1					
ANR	6618465	Identifier	ZIP_AFL_TORRENT		6618021	0					
ANR	6618466	Argument	ZIP_FL_UNCHANGED		6618021	2					
ANR	6618467	Identifier	ZIP_FL_UNCHANGED		6618021	0					
ANR	6618468	PrimaryExpression	0		6618021	1					
ANR	6618469	ExpressionStatement	error = 0	159:4:4733:4742	6618021	22	True				
ANR	6618470	AssignmentExpression	error = 0		6618021	0		=			
ANR	6618471	Identifier	error		6618021	0					
ANR	6618472	PrimaryExpression	0		6618021	1					
ANR	6618473	ForStatement	for ( j = 0 ; j < survivors ; j ++ )		6618021	23					
ANR	6618474	ForInit	j = 0 ;	160:9:4753:4756	6618021	0	True				
ANR	6618475	AssignmentExpression	j = 0		6618021	0		=			
ANR	6618476	Identifier	j		6618021	0					
ANR	6618477	PrimaryExpression	0		6618021	1					
ANR	6618478	Condition	j < survivors	160:14:4758:4768	6618021	1	True				
ANR	6618479	RelationalExpression	j < survivors		6618021	0		<			
ANR	6618480	Identifier	j		6618021	0					
ANR	6618481	Identifier	survivors		6618021	1					
ANR	6618482	PostIncDecOperationExpression	j ++	160:27:4771:4773	6618021	2	True				
ANR	6618483	Identifier	j		6618021	0					
ANR	6618484	IncDec	++		6618021	1					
ANR	6618485	CompoundStatement		94:1:2317:2338	6618021	3					
ANR	6618486	IdentifierDeclStatement	int new_data ;	161:1:4779:4791	6618021	0	True				
ANR	6618487	IdentifierDecl	new_data		6618021	0					
ANR	6618488	IdentifierDeclType	int		6618021	0					
ANR	6618489	Identifier	new_data		6618021	1					
ANR	6618490	IdentifierDeclStatement	struct zip_entry * entry ;	162:1:4794:4817	6618021	1	True				
ANR	6618491	IdentifierDecl	* entry		6618021	0					
ANR	6618492	IdentifierDeclType	struct zip_entry *		6618021	0					
ANR	6618493	Identifier	entry		6618021	1					
ANR	6618494	IdentifierDeclStatement	struct zip_dirent * de ;	163:1:4820:4841	6618021	2	True				
ANR	6618495	IdentifierDecl	* de		6618021	0					
ANR	6618496	IdentifierDeclType	struct zip_dirent *		6618021	0					
ANR	6618497	Identifier	de		6618021	1					
ANR	6618498	ExpressionStatement	i = filelist [ j ] . idx	165:1:4845:4864	6618021	3	True				
ANR	6618499	AssignmentExpression	i = filelist [ j ] . idx		6618021	0		=			
ANR	6618500	Identifier	i		6618021	0					
ANR	6618501	MemberAccess	filelist [ j ] . idx		6618021	1					
ANR	6618502	ArrayIndexing	filelist [ j ]		6618021	0					
ANR	6618503	Identifier	filelist		6618021	0					
ANR	6618504	Identifier	j		6618021	1					
ANR	6618505	Identifier	idx		6618021	1					
ANR	6618506	ExpressionStatement	entry = za -> entry + i	166:1:4867:4886	6618021	4	True				
ANR	6618507	AssignmentExpression	entry = za -> entry + i		6618021	0		=			
ANR	6618508	Identifier	entry		6618021	0					
ANR	6618509	AdditiveExpression	za -> entry + i		6618021	1		+			
ANR	6618510	PtrMemberAccess	za -> entry		6618021	0					
ANR	6618511	Identifier	za		6618021	0					
ANR	6618512	Identifier	entry		6618021	1					
ANR	6618513	Identifier	i		6618021	1					
ANR	6618514	ExpressionStatement	"new_data = ( ZIP_ENTRY_DATA_CHANGED ( entry ) || new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD ) )"	168:1:4890:5002	6618021	5	True				
ANR	6618515	AssignmentExpression	"new_data = ( ZIP_ENTRY_DATA_CHANGED ( entry ) || new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD ) )"		6618021	0		=			
ANR	6618516	Identifier	new_data		6618021	0					
ANR	6618517	OrExpression	"ZIP_ENTRY_DATA_CHANGED ( entry ) || new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD )"		6618021	1		||			
ANR	6618518	CallExpression	ZIP_ENTRY_DATA_CHANGED ( entry )		6618021	0					
ANR	6618519	Callee	ZIP_ENTRY_DATA_CHANGED		6618021	0					
ANR	6618520	Identifier	ZIP_ENTRY_DATA_CHANGED		6618021	0					
ANR	6618521	ArgumentList	entry		6618021	1					
ANR	6618522	Argument	entry		6618021	0					
ANR	6618523	Identifier	entry		6618021	0					
ANR	6618524	OrExpression	"new_torrentzip || ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD )"		6618021	1		||			
ANR	6618525	Identifier	new_torrentzip		6618021	0					
ANR	6618526	CallExpression	"ZIP_ENTRY_CHANGED ( entry , ZIP_DIRENT_COMP_METHOD )"		6618021	1					
ANR	6618527	Callee	ZIP_ENTRY_CHANGED		6618021	0					
ANR	6618528	Identifier	ZIP_ENTRY_CHANGED		6618021	0					
ANR	6618529	ArgumentList	entry		6618021	1					
ANR	6618530	Argument	entry		6618021	0					
ANR	6618531	Identifier	entry		6618021	0					
ANR	6618532	Argument	ZIP_DIRENT_COMP_METHOD		6618021	1					
ANR	6618533	Identifier	ZIP_DIRENT_COMP_METHOD		6618021	0					
ANR	6618534	IfStatement	if ( entry -> changes == NULL )		6618021	6					
ANR	6618535	Condition	entry -> changes == NULL	171:5:5050:5071	6618021	0	True				
ANR	6618536	EqualityExpression	entry -> changes == NULL		6618021	0		==			
ANR	6618537	PtrMemberAccess	entry -> changes		6618021	0					
ANR	6618538	Identifier	entry		6618021	0					
ANR	6618539	Identifier	changes		6618021	1					
ANR	6618540	Identifier	NULL		6618021	1					
ANR	6618541	CompoundStatement		102:29:2571:2571	6618021	1					
ANR	6618542	IfStatement	if ( ( entry -> changes = _zip_dirent_clone ( entry -> orig ) ) == NULL )		6618021	0					
ANR	6618543	Condition	( entry -> changes = _zip_dirent_clone ( entry -> orig ) ) == NULL	172:9:5085:5139	6618021	0	True				
ANR	6618544	EqualityExpression	( entry -> changes = _zip_dirent_clone ( entry -> orig ) ) == NULL		6618021	0		==			
ANR	6618545	AssignmentExpression	entry -> changes = _zip_dirent_clone ( entry -> orig )		6618021	0		=			
ANR	6618546	PtrMemberAccess	entry -> changes		6618021	0					
ANR	6618547	Identifier	entry		6618021	0					
ANR	6618548	Identifier	changes		6618021	1					
ANR	6618549	CallExpression	_zip_dirent_clone ( entry -> orig )		6618021	1					
ANR	6618550	Callee	_zip_dirent_clone		6618021	0					
ANR	6618551	Identifier	_zip_dirent_clone		6618021	0					
ANR	6618552	ArgumentList	entry -> orig		6618021	1					
ANR	6618553	Argument	entry -> orig		6618021	0					
ANR	6618554	PtrMemberAccess	entry -> orig		6618021	0					
ANR	6618555	Identifier	entry		6618021	0					
ANR	6618556	Identifier	orig		6618021	1					
ANR	6618557	Identifier	NULL		6618021	1					
ANR	6618558	CompoundStatement		103:66:2639:2639	6618021	1					
ANR	6618559	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	173:16:5160:5204	6618021	0	True				
ANR	6618560	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6618021	0					
ANR	6618561	Callee	_zip_error_set		6618021	0					
ANR	6618562	Identifier	_zip_error_set		6618021	0					
ANR	6618563	ArgumentList	& za -> error		6618021	1					
ANR	6618564	Argument	& za -> error		6618021	0					
ANR	6618565	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618566	UnaryOperator	&		6618021	0					
ANR	6618567	PtrMemberAccess	za -> error		6618021	1					
ANR	6618568	Identifier	za		6618021	0					
ANR	6618569	Identifier	error		6618021	1					
ANR	6618570	Argument	ZIP_ER_MEMORY		6618021	1					
ANR	6618571	Identifier	ZIP_ER_MEMORY		6618021	0					
ANR	6618572	Argument	0		6618021	2					
ANR	6618573	PrimaryExpression	0		6618021	0					
ANR	6618574	ExpressionStatement	error = 1	174:16:5222:5231	6618021	1	True				
ANR	6618575	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618576	Identifier	error		6618021	0					
ANR	6618577	PrimaryExpression	1		6618021	1					
ANR	6618578	BreakStatement	break ;	175:16:5249:5254	6618021	2	True				
ANR	6618579	ExpressionStatement	de = entry -> changes	178:1:5267:5286	6618021	7	True				
ANR	6618580	AssignmentExpression	de = entry -> changes		6618021	0		=			
ANR	6618581	Identifier	de		6618021	0					
ANR	6618582	PtrMemberAccess	entry -> changes		6618021	1					
ANR	6618583	Identifier	entry		6618021	0					
ANR	6618584	Identifier	changes		6618021	1					
ANR	6618585	IfStatement	"if ( _zip_read_local_ef ( za , i ) < 0 )"		6618021	8					
ANR	6618586	Condition	"_zip_read_local_ef ( za , i ) < 0"	180:5:5294:5322	6618021	0	True				
ANR	6618587	RelationalExpression	"_zip_read_local_ef ( za , i ) < 0"		6618021	0		<			
ANR	6618588	CallExpression	"_zip_read_local_ef ( za , i )"		6618021	0					
ANR	6618589	Callee	_zip_read_local_ef		6618021	0					
ANR	6618590	Identifier	_zip_read_local_ef		6618021	0					
ANR	6618591	ArgumentList	za		6618021	1					
ANR	6618592	Argument	za		6618021	0					
ANR	6618593	Identifier	za		6618021	0					
ANR	6618594	Argument	i		6618021	1					
ANR	6618595	Identifier	i		6618021	0					
ANR	6618596	PrimaryExpression	0		6618021	1					
ANR	6618597	CompoundStatement		111:36:2822:2822	6618021	1					
ANR	6618598	ExpressionStatement	error = 1	181:5:5332:5341	6618021	0	True				
ANR	6618599	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618600	Identifier	error		6618021	0					
ANR	6618601	PrimaryExpression	1		6618021	1					
ANR	6618602	BreakStatement	break ;	182:5:5348:5353	6618021	1	True				
ANR	6618603	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6618021	9					
ANR	6618604	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	185:5:5364:5407	6618021	0	True				
ANR	6618605	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6618021	0					
ANR	6618606	Callee	zip_get_archive_flag		6618021	0					
ANR	6618607	Identifier	zip_get_archive_flag		6618021	0					
ANR	6618608	ArgumentList	za		6618021	1					
ANR	6618609	Argument	za		6618021	0					
ANR	6618610	Identifier	za		6618021	0					
ANR	6618611	Argument	ZIP_AFL_TORRENT		6618021	1					
ANR	6618612	Identifier	ZIP_AFL_TORRENT		6618021	0					
ANR	6618613	Argument	0		6618021	2					
ANR	6618614	PrimaryExpression	0		6618021	0					
ANR	6618615	ExpressionStatement	_zip_dirent_torrent_normalize ( entry -> changes )	186:5:5415:5460	6618021	1	True				
ANR	6618616	CallExpression	_zip_dirent_torrent_normalize ( entry -> changes )		6618021	0					
ANR	6618617	Callee	_zip_dirent_torrent_normalize		6618021	0					
ANR	6618618	Identifier	_zip_dirent_torrent_normalize		6618021	0					
ANR	6618619	ArgumentList	entry -> changes		6618021	1					
ANR	6618620	Argument	entry -> changes		6618021	0					
ANR	6618621	PtrMemberAccess	entry -> changes		6618021	0					
ANR	6618622	Identifier	entry		6618021	0					
ANR	6618623	Identifier	changes		6618021	1					
ANR	6618624	ExpressionStatement	de -> offset = ( zip_uint64_t ) ftello ( out )	189:1:5465:5503	6618021	10	True				
ANR	6618625	AssignmentExpression	de -> offset = ( zip_uint64_t ) ftello ( out )		6618021	0		=			
ANR	6618626	PtrMemberAccess	de -> offset		6618021	0					
ANR	6618627	Identifier	de		6618021	0					
ANR	6618628	Identifier	offset		6618021	1					
ANR	6618629	CastExpression	( zip_uint64_t ) ftello ( out )		6618021	1					
ANR	6618630	CastTarget	zip_uint64_t		6618021	0					
ANR	6618631	CallExpression	ftello ( out )		6618021	1					
ANR	6618632	Callee	ftello		6618021	0					
ANR	6618633	Identifier	ftello		6618021	0					
ANR	6618634	ArgumentList	out		6618021	1					
ANR	6618635	Argument	out		6618021	0					
ANR	6618636	Identifier	out		6618021	0					
ANR	6618637	IfStatement	if ( new_data )		6618021	11					
ANR	6618638	Condition	new_data	191:5:5539:5546	6618021	0	True				
ANR	6618639	Identifier	new_data		6618021	0					
ANR	6618640	CompoundStatement		123:5:3053:3074	6618021	1					
ANR	6618641	IdentifierDeclStatement	struct zip_source * zs ;	192:5:5556:5577	6618021	0	True				
ANR	6618642	IdentifierDecl	* zs		6618021	0					
ANR	6618643	IdentifierDeclType	struct zip_source *		6618021	0					
ANR	6618644	Identifier	zs		6618021	1					
ANR	6618645	ExpressionStatement	zs = NULL	194:5:5585:5594	6618021	1	True				
ANR	6618646	AssignmentExpression	zs = NULL		6618021	0		=			
ANR	6618647	Identifier	zs		6618021	0					
ANR	6618648	Identifier	NULL		6618021	1					
ANR	6618649	IfStatement	if ( ! ZIP_ENTRY_DATA_CHANGED ( entry ) )		6618021	2					
ANR	6618650	Condition	! ZIP_ENTRY_DATA_CHANGED ( entry )	195:9:5605:5634	6618021	0	True				
ANR	6618651	UnaryOperationExpression	! ZIP_ENTRY_DATA_CHANGED ( entry )		6618021	0					
ANR	6618652	UnaryOperator	!		6618021	0					
ANR	6618653	CallExpression	ZIP_ENTRY_DATA_CHANGED ( entry )		6618021	1					
ANR	6618654	Callee	ZIP_ENTRY_DATA_CHANGED		6618021	0					
ANR	6618655	Identifier	ZIP_ENTRY_DATA_CHANGED		6618021	0					
ANR	6618656	ArgumentList	entry		6618021	1					
ANR	6618657	Argument	entry		6618021	0					
ANR	6618658	Identifier	entry		6618021	0					
ANR	6618659	CompoundStatement		126:41:3134:3134	6618021	1					
ANR	6618660	IfStatement	"if ( ( zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL ) ) == NULL )"		6618021	0					
ANR	6618661	Condition	"( zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL ) ) == NULL"	196:6:5645:5717	6618021	0	True				
ANR	6618662	EqualityExpression	"( zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL ) ) == NULL"		6618021	0		==			
ANR	6618663	AssignmentExpression	"zs = _zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL )"		6618021	0		=			
ANR	6618664	Identifier	zs		6618021	0					
ANR	6618665	CallExpression	"_zip_source_zip_new ( za , za , i , ZIP_FL_UNCHANGED , 0 , 0 , NULL )"		6618021	1					
ANR	6618666	Callee	_zip_source_zip_new		6618021	0					
ANR	6618667	Identifier	_zip_source_zip_new		6618021	0					
ANR	6618668	ArgumentList	za		6618021	1					
ANR	6618669	Argument	za		6618021	0					
ANR	6618670	Identifier	za		6618021	0					
ANR	6618671	Argument	za		6618021	1					
ANR	6618672	Identifier	za		6618021	0					
ANR	6618673	Argument	i		6618021	2					
ANR	6618674	Identifier	i		6618021	0					
ANR	6618675	Argument	ZIP_FL_UNCHANGED		6618021	3					
ANR	6618676	Identifier	ZIP_FL_UNCHANGED		6618021	0					
ANR	6618677	Argument	0		6618021	4					
ANR	6618678	PrimaryExpression	0		6618021	0					
ANR	6618679	Argument	0		6618021	5					
ANR	6618680	PrimaryExpression	0		6618021	0					
ANR	6618681	Argument	NULL		6618021	6					
ANR	6618682	Identifier	NULL		6618021	0					
ANR	6618683	Identifier	NULL		6618021	1					
ANR	6618684	CompoundStatement		127:81:3217:3217	6618021	1					
ANR	6618685	ExpressionStatement	error = 1	197:6:5728:5737	6618021	0	True				
ANR	6618686	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618687	Identifier	error		6618021	0					
ANR	6618688	PrimaryExpression	1		6618021	1					
ANR	6618689	BreakStatement	break ;	198:6:5745:5750	6618021	1	True				
ANR	6618690	IfStatement	"if ( add_data ( za , zs ? zs : entry -> source , de , out ) < 0 )"		6618021	3					
ANR	6618691	Condition	"add_data ( za , zs ? zs : entry -> source , de , out ) < 0"	203:9:5807:5856	6618021	0	True				
ANR	6618692	RelationalExpression	"add_data ( za , zs ? zs : entry -> source , de , out ) < 0"		6618021	0		<			
ANR	6618693	CallExpression	"add_data ( za , zs ? zs : entry -> source , de , out )"		6618021	0					
ANR	6618694	Callee	add_data		6618021	0					
ANR	6618695	Identifier	add_data		6618021	0					
ANR	6618696	ArgumentList	za		6618021	1					
ANR	6618697	Argument	za		6618021	0					
ANR	6618698	Identifier	za		6618021	0					
ANR	6618699	Argument	zs ? zs : entry -> source		6618021	1					
ANR	6618700	ConditionalExpression	zs ? zs : entry -> source		6618021	0					
ANR	6618701	Condition	zs		6618021	0					
ANR	6618702	Identifier	zs		6618021	0					
ANR	6618703	Identifier	zs		6618021	1					
ANR	6618704	PtrMemberAccess	entry -> source		6618021	2					
ANR	6618705	Identifier	entry		6618021	0					
ANR	6618706	Identifier	source		6618021	1					
ANR	6618707	Argument	de		6618021	2					
ANR	6618708	Identifier	de		6618021	0					
ANR	6618709	Argument	out		6618021	3					
ANR	6618710	Identifier	out		6618021	0					
ANR	6618711	PrimaryExpression	0		6618021	1					
ANR	6618712	CompoundStatement		134:61:3356:3356	6618021	1					
ANR	6618713	ExpressionStatement	error = 1	204:2:5863:5872	6618021	0	True				
ANR	6618714	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618715	Identifier	error		6618021	0					
ANR	6618716	PrimaryExpression	1		6618021	1					
ANR	6618717	IfStatement	if ( zs )		6618021	1					
ANR	6618718	Condition	zs	205:6:5880:5881	6618021	0	True				
ANR	6618719	Identifier	zs		6618021	0					
ANR	6618720	ExpressionStatement	zip_source_free ( zs )	206:6:5890:5909	6618021	1	True				
ANR	6618721	CallExpression	zip_source_free ( zs )		6618021	0					
ANR	6618722	Callee	zip_source_free		6618021	0					
ANR	6618723	Identifier	zip_source_free		6618021	0					
ANR	6618724	ArgumentList	zs		6618021	1					
ANR	6618725	Argument	zs		6618021	0					
ANR	6618726	Identifier	zs		6618021	0					
ANR	6618727	BreakStatement	break ;	207:2:5913:5918	6618021	2	True				
ANR	6618728	IfStatement	if ( zs )		6618021	4					
ANR	6618729	Condition	zs	209:9:5936:5937	6618021	0	True				
ANR	6618730	Identifier	zs		6618021	0					
ANR	6618731	ExpressionStatement	zip_source_free ( zs )	210:2:5942:5961	6618021	1	True				
ANR	6618732	CallExpression	zip_source_free ( zs )		6618021	0					
ANR	6618733	Callee	zip_source_free		6618021	0					
ANR	6618734	Identifier	zip_source_free		6618021	0					
ANR	6618735	ArgumentList	zs		6618021	1					
ANR	6618736	Argument	zs		6618021	0					
ANR	6618737	Identifier	zs		6618021	0					
ANR	6618738	ElseStatement	else		6618021	0					
ANR	6618739	CompoundStatement		144:5:3476:3495	6618021	0					
ANR	6618740	IdentifierDeclStatement	zip_uint64_t offset ;	213:5:5979:5998	6618021	0	True				
ANR	6618741	IdentifierDecl	offset		6618021	0					
ANR	6618742	IdentifierDeclType	zip_uint64_t		6618021	0					
ANR	6618743	Identifier	offset		6618021	1					
ANR	6618744	ExpressionStatement	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR	216:5:6085:6126	6618021	1	True				
ANR	6618745	AssignmentExpression	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR		6618021	0		&=			
ANR	6618746	PtrMemberAccess	de -> bitflags		6618021	0					
ANR	6618747	Identifier	de		6618021	0					
ANR	6618748	Identifier	bitflags		6618021	1					
ANR	6618749	Identifier	~ZIP_GPBF_DATA_DESCRIPTOR		6618021	1					
ANR	6618750	IfStatement	"if ( _zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error ) < 0 )"		6618021	2					
ANR	6618751	Condition	"_zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error ) < 0"	217:9:6137:6192	6618021	0	True				
ANR	6618752	RelationalExpression	"_zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error ) < 0"		6618021	0		<			
ANR	6618753	CallExpression	"_zip_dirent_write ( de , out , ZIP_FL_LOCAL , & za -> error )"		6618021	0					
ANR	6618754	Callee	_zip_dirent_write		6618021	0					
ANR	6618755	Identifier	_zip_dirent_write		6618021	0					
ANR	6618756	ArgumentList	de		6618021	1					
ANR	6618757	Argument	de		6618021	0					
ANR	6618758	Identifier	de		6618021	0					
ANR	6618759	Argument	out		6618021	1					
ANR	6618760	Identifier	out		6618021	0					
ANR	6618761	Argument	ZIP_FL_LOCAL		6618021	2					
ANR	6618762	Identifier	ZIP_FL_LOCAL		6618021	0					
ANR	6618763	Argument	& za -> error		6618021	3					
ANR	6618764	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618765	UnaryOperator	&		6618021	0					
ANR	6618766	PtrMemberAccess	za -> error		6618021	1					
ANR	6618767	Identifier	za		6618021	0					
ANR	6618768	Identifier	error		6618021	1					
ANR	6618769	PrimaryExpression	0		6618021	1					
ANR	6618770	CompoundStatement		148:67:3692:3692	6618021	1					
ANR	6618771	ExpressionStatement	error = 1	218:2:6199:6208	6618021	0	True				
ANR	6618772	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618773	Identifier	error		6618021	0					
ANR	6618774	PrimaryExpression	1		6618021	1					
ANR	6618775	BreakStatement	break ;	219:2:6212:6217	6618021	1	True				
ANR	6618776	IfStatement	"if ( ( offset = _zip_file_get_offset ( za , i , & za -> error ) ) == 0 )"		6618021	3					
ANR	6618777	Condition	"( offset = _zip_file_get_offset ( za , i , & za -> error ) ) == 0"	221:9:6235:6287	6618021	0	True				
ANR	6618778	EqualityExpression	"( offset = _zip_file_get_offset ( za , i , & za -> error ) ) == 0"		6618021	0		==			
ANR	6618779	AssignmentExpression	"offset = _zip_file_get_offset ( za , i , & za -> error )"		6618021	0		=			
ANR	6618780	Identifier	offset		6618021	0					
ANR	6618781	CallExpression	"_zip_file_get_offset ( za , i , & za -> error )"		6618021	1					
ANR	6618782	Callee	_zip_file_get_offset		6618021	0					
ANR	6618783	Identifier	_zip_file_get_offset		6618021	0					
ANR	6618784	ArgumentList	za		6618021	1					
ANR	6618785	Argument	za		6618021	0					
ANR	6618786	Identifier	za		6618021	0					
ANR	6618787	Argument	i		6618021	1					
ANR	6618788	Identifier	i		6618021	0					
ANR	6618789	Argument	& za -> error		6618021	2					
ANR	6618790	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618791	UnaryOperator	&		6618021	0					
ANR	6618792	PtrMemberAccess	za -> error		6618021	1					
ANR	6618793	Identifier	za		6618021	0					
ANR	6618794	Identifier	error		6618021	1					
ANR	6618795	PrimaryExpression	0		6618021	1					
ANR	6618796	CompoundStatement		152:64:3787:3787	6618021	1					
ANR	6618797	ExpressionStatement	error = 1	222:2:6294:6303	6618021	0	True				
ANR	6618798	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618799	Identifier	error		6618021	0					
ANR	6618800	PrimaryExpression	1		6618021	1					
ANR	6618801	BreakStatement	break ;	223:2:6307:6312	6618021	1	True				
ANR	6618802	IfStatement	"if ( ( fseek ( za -> zp , ( off_t ) offset , SEEK_SET ) < 0 ) )"		6618021	4					
ANR	6618803	Condition	"fseek ( za -> zp , ( off_t ) offset , SEEK_SET ) < 0"	225:9:6330:6373	6618021	0	True				
ANR	6618804	RelationalExpression	"fseek ( za -> zp , ( off_t ) offset , SEEK_SET ) < 0"		6618021	0		<			
ANR	6618805	CallExpression	"fseek ( za -> zp , ( off_t ) offset , SEEK_SET )"		6618021	0					
ANR	6618806	Callee	fseek		6618021	0					
ANR	6618807	Identifier	fseek		6618021	0					
ANR	6618808	ArgumentList	za -> zp		6618021	1					
ANR	6618809	Argument	za -> zp		6618021	0					
ANR	6618810	PtrMemberAccess	za -> zp		6618021	0					
ANR	6618811	Identifier	za		6618021	0					
ANR	6618812	Identifier	zp		6618021	1					
ANR	6618813	Argument	( off_t ) offset		6618021	1					
ANR	6618814	CastExpression	( off_t ) offset		6618021	0					
ANR	6618815	CastTarget	off_t		6618021	0					
ANR	6618816	Identifier	offset		6618021	1					
ANR	6618817	Argument	SEEK_SET		6618021	2					
ANR	6618818	Identifier	SEEK_SET		6618021	0					
ANR	6618819	PrimaryExpression	0		6618021	1					
ANR	6618820	CompoundStatement		156:55:3873:3873	6618021	1					
ANR	6618821	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	226:2:6380:6426	6618021	0	True				
ANR	6618822	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6618021	0					
ANR	6618823	Callee	_zip_error_set		6618021	0					
ANR	6618824	Identifier	_zip_error_set		6618021	0					
ANR	6618825	ArgumentList	& za -> error		6618021	1					
ANR	6618826	Argument	& za -> error		6618021	0					
ANR	6618827	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618828	UnaryOperator	&		6618021	0					
ANR	6618829	PtrMemberAccess	za -> error		6618021	1					
ANR	6618830	Identifier	za		6618021	0					
ANR	6618831	Identifier	error		6618021	1					
ANR	6618832	Argument	ZIP_ER_SEEK		6618021	1					
ANR	6618833	Identifier	ZIP_ER_SEEK		6618021	0					
ANR	6618834	Argument	errno		6618021	2					
ANR	6618835	Identifier	errno		6618021	0					
ANR	6618836	ExpressionStatement	error = 1	227:2:6430:6439	6618021	1	True				
ANR	6618837	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618838	Identifier	error		6618021	0					
ANR	6618839	PrimaryExpression	1		6618021	1					
ANR	6618840	BreakStatement	break ;	228:2:6443:6448	6618021	2	True				
ANR	6618841	IfStatement	"if ( copy_data ( za -> zp , de -> comp_size , out , & za -> error ) < 0 )"		6618021	5					
ANR	6618842	Condition	"copy_data ( za -> zp , de -> comp_size , out , & za -> error ) < 0"	230:9:6466:6518	6618021	0	True				
ANR	6618843	RelationalExpression	"copy_data ( za -> zp , de -> comp_size , out , & za -> error ) < 0"		6618021	0		<			
ANR	6618844	CallExpression	"copy_data ( za -> zp , de -> comp_size , out , & za -> error )"		6618021	0					
ANR	6618845	Callee	copy_data		6618021	0					
ANR	6618846	Identifier	copy_data		6618021	0					
ANR	6618847	ArgumentList	za -> zp		6618021	1					
ANR	6618848	Argument	za -> zp		6618021	0					
ANR	6618849	PtrMemberAccess	za -> zp		6618021	0					
ANR	6618850	Identifier	za		6618021	0					
ANR	6618851	Identifier	zp		6618021	1					
ANR	6618852	Argument	de -> comp_size		6618021	1					
ANR	6618853	PtrMemberAccess	de -> comp_size		6618021	0					
ANR	6618854	Identifier	de		6618021	0					
ANR	6618855	Identifier	comp_size		6618021	1					
ANR	6618856	Argument	out		6618021	2					
ANR	6618857	Identifier	out		6618021	0					
ANR	6618858	Argument	& za -> error		6618021	3					
ANR	6618859	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618860	UnaryOperator	&		6618021	0					
ANR	6618861	PtrMemberAccess	za -> error		6618021	1					
ANR	6618862	Identifier	za		6618021	0					
ANR	6618863	Identifier	error		6618021	1					
ANR	6618864	PrimaryExpression	0		6618021	1					
ANR	6618865	CompoundStatement		161:64:4018:4018	6618021	1					
ANR	6618866	ExpressionStatement	error = 1	231:2:6525:6534	6618021	0	True				
ANR	6618867	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618868	Identifier	error		6618021	0					
ANR	6618869	PrimaryExpression	1		6618021	1					
ANR	6618870	BreakStatement	break ;	232:2:6538:6543	6618021	1	True				
ANR	6618871	IfStatement	if ( ! error )		6618021	24					
ANR	6618872	Condition	! error	237:8:6570:6575	6618021	0	True				
ANR	6618873	UnaryOperationExpression	! error		6618021	0					
ANR	6618874	UnaryOperator	!		6618021	0					
ANR	6618875	Identifier	error		6618021	1					
ANR	6618876	CompoundStatement		168:16:4075:4075	6618021	1					
ANR	6618877	IfStatement	"if ( write_cdir ( za , filelist , survivors , out ) < 0 )"		6618021	0					
ANR	6618878	Condition	"write_cdir ( za , filelist , survivors , out ) < 0"	238:5:6585:6628	6618021	0	True				
ANR	6618879	RelationalExpression	"write_cdir ( za , filelist , survivors , out ) < 0"		6618021	0		<			
ANR	6618880	CallExpression	"write_cdir ( za , filelist , survivors , out )"		6618021	0					
ANR	6618881	Callee	write_cdir		6618021	0					
ANR	6618882	Identifier	write_cdir		6618021	0					
ANR	6618883	ArgumentList	za		6618021	1					
ANR	6618884	Argument	za		6618021	0					
ANR	6618885	Identifier	za		6618021	0					
ANR	6618886	Argument	filelist		6618021	1					
ANR	6618887	Identifier	filelist		6618021	0					
ANR	6618888	Argument	survivors		6618021	2					
ANR	6618889	Identifier	survivors		6618021	0					
ANR	6618890	Argument	out		6618021	3					
ANR	6618891	Identifier	out		6618021	0					
ANR	6618892	PrimaryExpression	0		6618021	1					
ANR	6618893	ExpressionStatement	error = 1	239:5:6636:6645	6618021	1	True				
ANR	6618894	AssignmentExpression	error = 1		6618021	0		=			
ANR	6618895	Identifier	error		6618021	0					
ANR	6618896	PrimaryExpression	1		6618021	1					
ANR	6618897	ExpressionStatement	free ( filelist )	242:4:6658:6672	6618021	25	True				
ANR	6618898	CallExpression	free ( filelist )		6618021	0					
ANR	6618899	Callee	free		6618021	0					
ANR	6618900	Identifier	free		6618021	0					
ANR	6618901	ArgumentList	filelist		6618021	1					
ANR	6618902	Argument	filelist		6618021	0					
ANR	6618903	Identifier	filelist		6618021	0					
ANR	6618904	IfStatement	if ( error )		6618021	26					
ANR	6618905	Condition	error	244:8:6683:6687	6618021	0	True				
ANR	6618906	Identifier	error		6618021	0					
ANR	6618907	CompoundStatement		175:15:4187:4187	6618021	1					
ANR	6618908	ExpressionStatement	fclose ( out )	245:1:6693:6704	6618021	0	True				
ANR	6618909	CallExpression	fclose ( out )		6618021	0					
ANR	6618910	Callee	fclose		6618021	0					
ANR	6618911	Identifier	fclose		6618021	0					
ANR	6618912	ArgumentList	out		6618021	1					
ANR	6618913	Argument	out		6618021	0					
ANR	6618914	Identifier	out		6618021	0					
ANR	6618915	ExpressionStatement	( void ) remove ( temp )	246:1:6707:6725	6618021	1	True				
ANR	6618916	CastExpression	( void ) remove ( temp )		6618021	0					
ANR	6618917	CastTarget	void		6618021	0					
ANR	6618918	CallExpression	remove ( temp )		6618021	1					
ANR	6618919	Callee	remove		6618021	0					
ANR	6618920	Identifier	remove		6618021	0					
ANR	6618921	ArgumentList	temp		6618021	1					
ANR	6618922	Argument	temp		6618021	0					
ANR	6618923	Identifier	temp		6618021	0					
ANR	6618924	ExpressionStatement	free ( temp )	247:1:6728:6738	6618021	2	True				
ANR	6618925	CallExpression	free ( temp )		6618021	0					
ANR	6618926	Callee	free		6618021	0					
ANR	6618927	Identifier	free		6618021	0					
ANR	6618928	ArgumentList	temp		6618021	1					
ANR	6618929	Argument	temp		6618021	0					
ANR	6618930	Identifier	temp		6618021	0					
ANR	6618931	ReturnStatement	return - 1 ;	248:1:6741:6750	6618021	3	True				
ANR	6618932	UnaryOperationExpression	- 1		6618021	0					
ANR	6618933	UnaryOperator	-		6618021	0					
ANR	6618934	PrimaryExpression	1		6618021	1					
ANR	6618935	IfStatement	if ( fclose ( out ) != 0 )		6618021	27					
ANR	6618936	Condition	fclose ( out ) != 0	251:8:6767:6782	6618021	0	True				
ANR	6618937	EqualityExpression	fclose ( out ) != 0		6618021	0		!=			
ANR	6618938	CallExpression	fclose ( out )		6618021	0					
ANR	6618939	Callee	fclose		6618021	0					
ANR	6618940	Identifier	fclose		6618021	0					
ANR	6618941	ArgumentList	out		6618021	1					
ANR	6618942	Argument	out		6618021	0					
ANR	6618943	Identifier	out		6618021	0					
ANR	6618944	PrimaryExpression	0		6618021	1					
ANR	6618945	CompoundStatement		182:26:4282:4282	6618021	1					
ANR	6618946	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_CLOSE , errno )"	252:1:6788:6835	6618021	0	True				
ANR	6618947	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_CLOSE , errno )"		6618021	0					
ANR	6618948	Callee	_zip_error_set		6618021	0					
ANR	6618949	Identifier	_zip_error_set		6618021	0					
ANR	6618950	ArgumentList	& za -> error		6618021	1					
ANR	6618951	Argument	& za -> error		6618021	0					
ANR	6618952	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6618953	UnaryOperator	&		6618021	0					
ANR	6618954	PtrMemberAccess	za -> error		6618021	1					
ANR	6618955	Identifier	za		6618021	0					
ANR	6618956	Identifier	error		6618021	1					
ANR	6618957	Argument	ZIP_ER_CLOSE		6618021	1					
ANR	6618958	Identifier	ZIP_ER_CLOSE		6618021	0					
ANR	6618959	Argument	errno		6618021	2					
ANR	6618960	Identifier	errno		6618021	0					
ANR	6618961	ExpressionStatement	( void ) remove ( temp )	253:1:6838:6856	6618021	1	True				
ANR	6618962	CastExpression	( void ) remove ( temp )		6618021	0					
ANR	6618963	CastTarget	void		6618021	0					
ANR	6618964	CallExpression	remove ( temp )		6618021	1					
ANR	6618965	Callee	remove		6618021	0					
ANR	6618966	Identifier	remove		6618021	0					
ANR	6618967	ArgumentList	temp		6618021	1					
ANR	6618968	Argument	temp		6618021	0					
ANR	6618969	Identifier	temp		6618021	0					
ANR	6618970	ExpressionStatement	free ( temp )	254:1:6859:6869	6618021	2	True				
ANR	6618971	CallExpression	free ( temp )		6618021	0					
ANR	6618972	Callee	free		6618021	0					
ANR	6618973	Identifier	free		6618021	0					
ANR	6618974	ArgumentList	temp		6618021	1					
ANR	6618975	Argument	temp		6618021	0					
ANR	6618976	Identifier	temp		6618021	0					
ANR	6618977	ReturnStatement	return - 1 ;	255:1:6872:6881	6618021	3	True				
ANR	6618978	UnaryOperationExpression	- 1		6618021	0					
ANR	6618979	UnaryOperator	-		6618021	0					
ANR	6618980	PrimaryExpression	1		6618021	1					
ANR	6618981	IfStatement	if ( za -> zp )		6618021	28					
ANR	6618982	Condition	za -> zp	257:8:6897:6902	6618021	0	True				
ANR	6618983	PtrMemberAccess	za -> zp		6618021	0					
ANR	6618984	Identifier	za		6618021	0					
ANR	6618985	Identifier	zp		6618021	1					
ANR	6618986	CompoundStatement		188:16:4402:4402	6618021	1					
ANR	6618987	ExpressionStatement	fclose ( za -> zp )	258:1:6908:6922	6618021	0	True				
ANR	6618988	CallExpression	fclose ( za -> zp )		6618021	0					
ANR	6618989	Callee	fclose		6618021	0					
ANR	6618990	Identifier	fclose		6618021	0					
ANR	6618991	ArgumentList	za -> zp		6618021	1					
ANR	6618992	Argument	za -> zp		6618021	0					
ANR	6618993	PtrMemberAccess	za -> zp		6618021	0					
ANR	6618994	Identifier	za		6618021	0					
ANR	6618995	Identifier	zp		6618021	1					
ANR	6618996	ExpressionStatement	za -> zp = NULL	259:1:6925:6938	6618021	1	True				
ANR	6618997	AssignmentExpression	za -> zp = NULL		6618021	0		=			
ANR	6618998	PtrMemberAccess	za -> zp		6618021	0					
ANR	6618999	Identifier	za		6618021	0					
ANR	6619000	Identifier	zp		6618021	1					
ANR	6619001	Identifier	NULL		6618021	1					
ANR	6619002	ExpressionStatement	reopen_on_error = 1	260:1:6941:6960	6618021	2	True				
ANR	6619003	AssignmentExpression	reopen_on_error = 1		6618021	0		=			
ANR	6619004	Identifier	reopen_on_error		6618021	0					
ANR	6619005	PrimaryExpression	1		6618021	1					
ANR	6619006	IfStatement	"if ( _zip_rename ( temp , za -> zn ) != 0 )"		6618021	29					
ANR	6619007	Condition	"_zip_rename ( temp , za -> zn ) != 0"	262:8:6976:7005	6618021	0	True				
ANR	6619008	EqualityExpression	"_zip_rename ( temp , za -> zn ) != 0"		6618021	0		!=			
ANR	6619009	CallExpression	"_zip_rename ( temp , za -> zn )"		6618021	0					
ANR	6619010	Callee	_zip_rename		6618021	0					
ANR	6619011	Identifier	_zip_rename		6618021	0					
ANR	6619012	ArgumentList	temp		6618021	1					
ANR	6619013	Argument	temp		6618021	0					
ANR	6619014	Identifier	temp		6618021	0					
ANR	6619015	Argument	za -> zn		6618021	1					
ANR	6619016	PtrMemberAccess	za -> zn		6618021	0					
ANR	6619017	Identifier	za		6618021	0					
ANR	6619018	Identifier	zn		6618021	1					
ANR	6619019	PrimaryExpression	0		6618021	1					
ANR	6619020	CompoundStatement		193:40:4505:4505	6618021	1					
ANR	6619021	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_RENAME , errno )"	263:1:7011:7059	6618021	0	True				
ANR	6619022	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_RENAME , errno )"		6618021	0					
ANR	6619023	Callee	_zip_error_set		6618021	0					
ANR	6619024	Identifier	_zip_error_set		6618021	0					
ANR	6619025	ArgumentList	& za -> error		6618021	1					
ANR	6619026	Argument	& za -> error		6618021	0					
ANR	6619027	UnaryOperationExpression	& za -> error		6618021	0					
ANR	6619028	UnaryOperator	&		6618021	0					
ANR	6619029	PtrMemberAccess	za -> error		6618021	1					
ANR	6619030	Identifier	za		6618021	0					
ANR	6619031	Identifier	error		6618021	1					
ANR	6619032	Argument	ZIP_ER_RENAME		6618021	1					
ANR	6619033	Identifier	ZIP_ER_RENAME		6618021	0					
ANR	6619034	Argument	errno		6618021	2					
ANR	6619035	Identifier	errno		6618021	0					
ANR	6619036	ExpressionStatement	( void ) remove ( temp )	264:1:7062:7080	6618021	1	True				
ANR	6619037	CastExpression	( void ) remove ( temp )		6618021	0					
ANR	6619038	CastTarget	void		6618021	0					
ANR	6619039	CallExpression	remove ( temp )		6618021	1					
ANR	6619040	Callee	remove		6618021	0					
ANR	6619041	Identifier	remove		6618021	0					
ANR	6619042	ArgumentList	temp		6618021	1					
ANR	6619043	Argument	temp		6618021	0					
ANR	6619044	Identifier	temp		6618021	0					
ANR	6619045	ExpressionStatement	free ( temp )	265:1:7083:7093	6618021	2	True				
ANR	6619046	CallExpression	free ( temp )		6618021	0					
ANR	6619047	Callee	free		6618021	0					
ANR	6619048	Identifier	free		6618021	0					
ANR	6619049	ArgumentList	temp		6618021	1					
ANR	6619050	Argument	temp		6618021	0					
ANR	6619051	Identifier	temp		6618021	0					
ANR	6619052	IfStatement	if ( reopen_on_error )		6618021	3					
ANR	6619053	Condition	reopen_on_error	266:5:7100:7114	6618021	0	True				
ANR	6619054	Identifier	reopen_on_error		6618021	0					
ANR	6619055	CompoundStatement		197:22:4614:4614	6618021	1					
ANR	6619056	ExpressionStatement	"za -> zp = fopen ( za -> zn , ""rb"" )"	268:5:7187:7215	6618021	0	True				
ANR	6619057	AssignmentExpression	"za -> zp = fopen ( za -> zn , ""rb"" )"		6618021	0		=			
ANR	6619058	PtrMemberAccess	za -> zp		6618021	0					
ANR	6619059	Identifier	za		6618021	0					
ANR	6619060	Identifier	zp		6618021	1					
ANR	6619061	CallExpression	"fopen ( za -> zn , ""rb"" )"		6618021	1					
ANR	6619062	Callee	fopen		6618021	0					
ANR	6619063	Identifier	fopen		6618021	0					
ANR	6619064	ArgumentList	za -> zn		6618021	1					
ANR	6619065	Argument	za -> zn		6618021	0					
ANR	6619066	PtrMemberAccess	za -> zn		6618021	0					
ANR	6619067	Identifier	za		6618021	0					
ANR	6619068	Identifier	zn		6618021	1					
ANR	6619069	Argument	"""rb"""		6618021	1					
ANR	6619070	PrimaryExpression	"""rb"""		6618021	0					
ANR	6619071	ReturnStatement	return - 1 ;	270:1:7221:7230	6618021	4	True				
ANR	6619072	UnaryOperationExpression	- 1		6618021	0					
ANR	6619073	UnaryOperator	-		6618021	0					
ANR	6619074	PrimaryExpression	1		6618021	1					
ANR	6619075	ExpressionStatement	mask = umask ( 0 )	273:4:7262:7277	6618021	30	True				
ANR	6619076	AssignmentExpression	mask = umask ( 0 )		6618021	0		=			
ANR	6619077	Identifier	mask		6618021	0					
ANR	6619078	CallExpression	umask ( 0 )		6618021	1					
ANR	6619079	Callee	umask		6618021	0					
ANR	6619080	Identifier	umask		6618021	0					
ANR	6619081	ArgumentList	0		6618021	1					
ANR	6619082	Argument	0		6618021	0					
ANR	6619083	PrimaryExpression	0		6618021	0					
ANR	6619084	ExpressionStatement	umask ( mask )	274:4:7283:7294	6618021	31	True				
ANR	6619085	CallExpression	umask ( mask )		6618021	0					
ANR	6619086	Callee	umask		6618021	0					
ANR	6619087	Identifier	umask		6618021	0					
ANR	6619088	ArgumentList	mask		6618021	1					
ANR	6619089	Argument	mask		6618021	0					
ANR	6619090	Identifier	mask		6618021	0					
ANR	6619091	ExpressionStatement	"chmod ( za -> zn , 0666 & ~mask )"	275:4:7300:7325	6618021	32	True				
ANR	6619092	CallExpression	"chmod ( za -> zn , 0666 & ~mask )"		6618021	0					
ANR	6619093	Callee	chmod		6618021	0					
ANR	6619094	Identifier	chmod		6618021	0					
ANR	6619095	ArgumentList	za -> zn		6618021	1					
ANR	6619096	Argument	za -> zn		6618021	0					
ANR	6619097	PtrMemberAccess	za -> zn		6618021	0					
ANR	6619098	Identifier	za		6618021	0					
ANR	6619099	Identifier	zn		6618021	1					
ANR	6619100	Argument	0666 & ~mask		6618021	1					
ANR	6619101	BitAndExpression	0666 & ~mask		6618021	0		&			
ANR	6619102	PrimaryExpression	0666		6618021	0					
ANR	6619103	Identifier	~mask		6618021	1					
ANR	6619104	ExpressionStatement	zip_discard ( za )	278:4:7339:7354	6618021	33	True				
ANR	6619105	CallExpression	zip_discard ( za )		6618021	0					
ANR	6619106	Callee	zip_discard		6618021	0					
ANR	6619107	Identifier	zip_discard		6618021	0					
ANR	6619108	ArgumentList	za		6618021	1					
ANR	6619109	Argument	za		6618021	0					
ANR	6619110	Identifier	za		6618021	0					
ANR	6619111	ExpressionStatement	free ( temp )	279:4:7360:7370	6618021	34	True				
ANR	6619112	CallExpression	free ( temp )		6618021	0					
ANR	6619113	Callee	free		6618021	0					
ANR	6619114	Identifier	free		6618021	0					
ANR	6619115	ArgumentList	temp		6618021	1					
ANR	6619116	Argument	temp		6618021	0					
ANR	6619117	Identifier	temp		6618021	0					
ANR	6619118	ReturnStatement	return 0 ;	280:4:7376:7384	6618021	35	True				
ANR	6619119	PrimaryExpression	0		6618021	0					
ANR	6619120	ReturnType	ZIP_EXTERN int		6618021	1					
ANR	6619121	Identifier	zip_close		6618021	2					
ANR	6619122	ParameterList	struct zip * za		6618021	3					
ANR	6619123	Parameter	struct zip * za	69:10:2486:2499	6618021	0	True				
ANR	6619124	ParameterType	struct zip *		6618021	0					
ANR	6619125	Identifier	za		6618021	1					
ANR	6619126	CFGEntryNode	ENTRY		6618021		True				
ANR	6619127	CFGExitNode	EXIT		6618021		True				
ANR	6619128	Symbol	_zip_create_temp_output		6618021						
ANR	6619129	Symbol	de		6618021						
ANR	6619130	Symbol	copy_data		6618021						
ANR	6619131	Symbol	ZIP_ER_RENAME		6618021						
ANR	6619132	Symbol	_zip_torrentzip_cmp		6618021						
ANR	6619133	Symbol	& za -> error		6618021						
ANR	6619134	Symbol	za -> entry [ i ] . deleted		6618021						
ANR	6619135	Symbol	_zip_file_get_offset		6618021						
ANR	6619136	Symbol	za -> entry		6618021						
ANR	6619137	Symbol	ZIP_ENTRY_CHANGED		6618021						
ANR	6619138	Symbol	ZIP_FL_UNCHANGED		6618021						
ANR	6619139	Symbol	fseek		6618021						
ANR	6619140	Symbol	_zip_source_zip_new		6618021						
ANR	6619141	Symbol	* * za		6618021						
ANR	6619142	Symbol	za -> nentry		6618021						
ANR	6619143	Symbol	za -> open_flags		6618021						
ANR	6619144	Symbol	_zip_rename		6618021						
ANR	6619145	Symbol	ftello		6618021						
ANR	6619146	Symbol	* filelist		6618021						
ANR	6619147	Symbol	ZIP_ER_CLOSE		6618021						
ANR	6619148	Symbol	errno		6618021						
ANR	6619149	Symbol	NULL		6618021						
ANR	6619150	Symbol	ZIP_ER_INTERNAL		6618021						
ANR	6619151	Symbol	entry -> changes		6618021						
ANR	6619152	Symbol	* de		6618021						
ANR	6619153	Symbol	offset		6618021						
ANR	6619154	Symbol	za		6618021						
ANR	6619155	Symbol	write_cdir		6618021						
ANR	6619156	Symbol	zip_get_archive_flag		6618021						
ANR	6619157	Symbol	filelist		6618021						
ANR	6619158	Symbol	ZIP_ER_SEEK		6618021						
ANR	6619159	Symbol	entry		6618021						
ANR	6619160	Symbol	ZIP_DIRENT_COMP_METHOD		6618021						
ANR	6619161	Symbol	entry -> orig		6618021						
ANR	6619162	Symbol	survivors		6618021						
ANR	6619163	Symbol	_zip_dirent_clone		6618021						
ANR	6619164	Symbol	zs		6618021						
ANR	6619165	Symbol	entry -> source		6618021						
ANR	6619166	Symbol	changed		6618021						
ANR	6619167	Symbol	umask		6618021						
ANR	6619168	Symbol	_zip_changed		6618021						
ANR	6619169	Symbol	add_data		6618021						
ANR	6619170	Symbol	~mask		6618021						
ANR	6619171	Symbol	ZIP_ER_REMOVE		6618021						
ANR	6619172	Symbol	ZIP_ENTRY_DATA_CHANGED		6618021						
ANR	6619173	Symbol	error		6618021						
ANR	6619174	Symbol	* za		6618021						
ANR	6619175	Symbol	remove		6618021						
ANR	6619176	Symbol	_zip_read_local_ef		6618021						
ANR	6619177	Symbol	out		6618021						
ANR	6619178	Symbol	ZIP_FL_LOCAL		6618021						
ANR	6619179	Symbol	de -> comp_size		6618021						
ANR	6619180	Symbol	_zip_dirent_write		6618021						
ANR	6619181	Symbol	ZIP_ER_MEMORY		6618021						
ANR	6619182	Symbol	new_torrentzip		6618021						
ANR	6619183	Symbol	mask		6618021						
ANR	6619184	Symbol	* entry		6618021						
ANR	6619185	Symbol	de -> offset		6618021						
ANR	6619186	Symbol	SEEK_SET		6618021						
ANR	6619187	Symbol	malloc		6618021						
ANR	6619188	Symbol	fopen		6618021						
ANR	6619189	Symbol	temp		6618021						
ANR	6619190	Symbol	fclose		6618021						
ANR	6619191	Symbol	i		6618021						
ANR	6619192	Symbol	j		6618021						
ANR	6619193	Symbol	& survivors		6618021						
ANR	6619194	Symbol	filelist [ j ] . name		6618021						
ANR	6619195	Symbol	* za -> entry		6618021						
ANR	6619196	Symbol	filelist [ j ] . idx		6618021						
ANR	6619197	Symbol	za -> zp		6618021						
ANR	6619198	Symbol	ZIP_AFL_TORRENT		6618021						
ANR	6619199	Symbol	* i		6618021						
ANR	6619200	Symbol	& out		6618021						
ANR	6619201	Symbol	* j		6618021						
ANR	6619202	Symbol	reopen_on_error		6618021						
ANR	6619203	Symbol	za -> zn		6618021						
ANR	6619204	Symbol	new_data		6618021						
ANR	6619205	Symbol	zip_get_name		6618021						
ANR	6619206	Symbol	~ZIP_GPBF_DATA_DESCRIPTOR		6618021						
ANR	6619207	Symbol	de -> bitflags		6618021						
ANR	6619208	Symbol	ZIP_TRUNCATE		6618021						
ANR	6619209	Function	add_data	285:0:7392:11622							
ANR	6619210	FunctionDef	"add_data (struct zip * za , struct zip_source * src , struct zip_dirent * de , FILE * ft)"		6619209	0					
ANR	6619211	CompoundStatement		287:0:7485:11622	6619209	0					
ANR	6619212	IdentifierDeclStatement	"off_t offstart , offdata , offend ;"	288:4:7491:7522	6619209	0	True				
ANR	6619213	IdentifierDecl	offstart		6619209	0					
ANR	6619214	IdentifierDeclType	off_t		6619209	0					
ANR	6619215	Identifier	offstart		6619209	1					
ANR	6619216	IdentifierDecl	offdata		6619209	1					
ANR	6619217	IdentifierDeclType	off_t		6619209	0					
ANR	6619218	Identifier	offdata		6619209	1					
ANR	6619219	IdentifierDecl	offend		6619209	2					
ANR	6619220	IdentifierDeclType	off_t		6619209	0					
ANR	6619221	Identifier	offend		6619209	1					
ANR	6619222	IdentifierDeclStatement	struct zip_stat st ;	289:4:7528:7546	6619209	1	True				
ANR	6619223	IdentifierDecl	st		6619209	0					
ANR	6619224	IdentifierDeclType	struct zip_stat		6619209	0					
ANR	6619225	Identifier	st		6619209	1					
ANR	6619226	IdentifierDeclStatement	struct zip_source * s2 ;	290:4:7552:7573	6619209	2	True				
ANR	6619227	IdentifierDecl	* s2		6619209	0					
ANR	6619228	IdentifierDeclType	struct zip_source *		6619209	0					
ANR	6619229	Identifier	s2		6619209	1					
ANR	6619230	IdentifierDeclStatement	int ret ;	291:4:7579:7586	6619209	3	True				
ANR	6619231	IdentifierDecl	ret		6619209	0					
ANR	6619232	IdentifierDeclType	int		6619209	0					
ANR	6619233	Identifier	ret		6619209	1					
ANR	6619234	IdentifierDeclStatement	int is_zip64 ;	292:4:7592:7604	6619209	4	True				
ANR	6619235	IdentifierDecl	is_zip64		6619209	0					
ANR	6619236	IdentifierDeclType	int		6619209	0					
ANR	6619237	Identifier	is_zip64		6619209	1					
ANR	6619238	IdentifierDeclStatement	zip_flags_t flags ;	293:4:7610:7627	6619209	5	True				
ANR	6619239	IdentifierDecl	flags		6619209	0					
ANR	6619240	IdentifierDeclType	zip_flags_t		6619209	0					
ANR	6619241	Identifier	flags		6619209	1					
ANR	6619242	IfStatement	"if ( zip_source_stat ( src , & st ) < 0 )"		6619209	6					
ANR	6619243	Condition	"zip_source_stat ( src , & st ) < 0"	295:8:7638:7666	6619209	0	True				
ANR	6619244	RelationalExpression	"zip_source_stat ( src , & st ) < 0"		6619209	0		<			
ANR	6619245	CallExpression	"zip_source_stat ( src , & st )"		6619209	0					
ANR	6619246	Callee	zip_source_stat		6619209	0					
ANR	6619247	Identifier	zip_source_stat		6619209	0					
ANR	6619248	ArgumentList	src		6619209	1					
ANR	6619249	Argument	src		6619209	0					
ANR	6619250	Identifier	src		6619209	0					
ANR	6619251	Argument	& st		6619209	1					
ANR	6619252	UnaryOperationExpression	& st		6619209	0					
ANR	6619253	UnaryOperator	&		6619209	0					
ANR	6619254	Identifier	st		6619209	1					
ANR	6619255	PrimaryExpression	0		6619209	1					
ANR	6619256	CompoundStatement		9:39:183:183	6619209	1					
ANR	6619257	ExpressionStatement	"_zip_error_set_from_source ( & za -> error , src )"	296:1:7672:7715	6619209	0	True				
ANR	6619258	CallExpression	"_zip_error_set_from_source ( & za -> error , src )"		6619209	0					
ANR	6619259	Callee	_zip_error_set_from_source		6619209	0					
ANR	6619260	Identifier	_zip_error_set_from_source		6619209	0					
ANR	6619261	ArgumentList	& za -> error		6619209	1					
ANR	6619262	Argument	& za -> error		6619209	0					
ANR	6619263	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6619264	UnaryOperator	&		6619209	0					
ANR	6619265	PtrMemberAccess	za -> error		6619209	1					
ANR	6619266	Identifier	za		6619209	0					
ANR	6619267	Identifier	error		6619209	1					
ANR	6619268	Argument	src		6619209	1					
ANR	6619269	Identifier	src		6619209	0					
ANR	6619270	ReturnStatement	return - 1 ;	297:1:7718:7727	6619209	1	True				
ANR	6619271	UnaryOperationExpression	- 1		6619209	0					
ANR	6619272	UnaryOperator	-		6619209	0					
ANR	6619273	PrimaryExpression	1		6619209	1					
ANR	6619274	IfStatement	if ( ( st . valid & ZIP_STAT_COMP_METHOD ) == 0 )		6619209	7					
ANR	6619275	Condition	( st . valid & ZIP_STAT_COMP_METHOD ) == 0	300:8:7744:7781	6619209	0	True				
ANR	6619276	EqualityExpression	( st . valid & ZIP_STAT_COMP_METHOD ) == 0		6619209	0		==			
ANR	6619277	BitAndExpression	st . valid & ZIP_STAT_COMP_METHOD		6619209	0		&			
ANR	6619278	MemberAccess	st . valid		6619209	0					
ANR	6619279	Identifier	st		6619209	0					
ANR	6619280	Identifier	valid		6619209	1					
ANR	6619281	Identifier	ZIP_STAT_COMP_METHOD		6619209	1					
ANR	6619282	PrimaryExpression	0		6619209	1					
ANR	6619283	CompoundStatement		14:48:298:298	6619209	1					
ANR	6619284	ExpressionStatement	st . valid |= ZIP_STAT_COMP_METHOD	301:1:7787:7819	6619209	0	True				
ANR	6619285	AssignmentExpression	st . valid |= ZIP_STAT_COMP_METHOD		6619209	0		|=			
ANR	6619286	MemberAccess	st . valid		6619209	0					
ANR	6619287	Identifier	st		6619209	0					
ANR	6619288	Identifier	valid		6619209	1					
ANR	6619289	Identifier	ZIP_STAT_COMP_METHOD		6619209	1					
ANR	6619290	ExpressionStatement	st . comp_method = ZIP_CM_STORE	302:1:7822:7851	6619209	1	True				
ANR	6619291	AssignmentExpression	st . comp_method = ZIP_CM_STORE		6619209	0		=			
ANR	6619292	MemberAccess	st . comp_method		6619209	0					
ANR	6619293	Identifier	st		6619209	0					
ANR	6619294	Identifier	comp_method		6619209	1					
ANR	6619295	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619296	IfStatement	if ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != ZIP_CM_STORE )		6619209	8					
ANR	6619297	Condition	ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != ZIP_CM_STORE	305:8:7868:7935	6619209	0	True				
ANR	6619298	AndExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != ZIP_CM_STORE		6619209	0		&&			
ANR	6619299	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	0					
ANR	6619300	Callee	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619301	Identifier	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619302	ArgumentList	de -> comp_method		6619209	1					
ANR	6619303	Argument	de -> comp_method		6619209	0					
ANR	6619304	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619305	Identifier	de		6619209	0					
ANR	6619306	Identifier	comp_method		6619209	1					
ANR	6619307	EqualityExpression	st . comp_method != ZIP_CM_STORE		6619209	1		!=			
ANR	6619308	MemberAccess	st . comp_method		6619209	0					
ANR	6619309	Identifier	st		6619209	0					
ANR	6619310	Identifier	comp_method		6619209	1					
ANR	6619311	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619312	ExpressionStatement	de -> comp_method = st . comp_method	306:1:7939:7971	6619209	1	True				
ANR	6619313	AssignmentExpression	de -> comp_method = st . comp_method		6619209	0		=			
ANR	6619314	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619315	Identifier	de		6619209	0					
ANR	6619316	Identifier	comp_method		6619209	1					
ANR	6619317	MemberAccess	st . comp_method		6619209	1					
ANR	6619318	Identifier	st		6619209	0					
ANR	6619319	Identifier	comp_method		6619209	1					
ANR	6619320	ElseStatement	else		6619209	0					
ANR	6619321	IfStatement	if ( de -> comp_method == ZIP_CM_STORE && ( st . valid & ZIP_STAT_SIZE ) )		6619209	0					
ANR	6619322	Condition	de -> comp_method == ZIP_CM_STORE && ( st . valid & ZIP_STAT_SIZE )	307:13:7986:8046	6619209	0	True				
ANR	6619323	AndExpression	de -> comp_method == ZIP_CM_STORE && ( st . valid & ZIP_STAT_SIZE )		6619209	0		&&			
ANR	6619324	EqualityExpression	de -> comp_method == ZIP_CM_STORE		6619209	0		==			
ANR	6619325	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619326	Identifier	de		6619209	0					
ANR	6619327	Identifier	comp_method		6619209	1					
ANR	6619328	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619329	BitAndExpression	st . valid & ZIP_STAT_SIZE		6619209	1		&			
ANR	6619330	MemberAccess	st . valid		6619209	0					
ANR	6619331	Identifier	st		6619209	0					
ANR	6619332	Identifier	valid		6619209	1					
ANR	6619333	Identifier	ZIP_STAT_SIZE		6619209	1					
ANR	6619334	CompoundStatement		21:76:563:563	6619209	1					
ANR	6619335	ExpressionStatement	st . valid |= ZIP_STAT_COMP_SIZE	308:1:8052:8082	6619209	0	True				
ANR	6619336	AssignmentExpression	st . valid |= ZIP_STAT_COMP_SIZE		6619209	0		|=			
ANR	6619337	MemberAccess	st . valid		6619209	0					
ANR	6619338	Identifier	st		6619209	0					
ANR	6619339	Identifier	valid		6619209	1					
ANR	6619340	Identifier	ZIP_STAT_COMP_SIZE		6619209	1					
ANR	6619341	ExpressionStatement	st . comp_size = st . size	309:1:8085:8107	6619209	1	True				
ANR	6619342	AssignmentExpression	st . comp_size = st . size		6619209	0		=			
ANR	6619343	MemberAccess	st . comp_size		6619209	0					
ANR	6619344	Identifier	st		6619209	0					
ANR	6619345	Identifier	comp_size		6619209	1					
ANR	6619346	MemberAccess	st . size		6619209	1					
ANR	6619347	Identifier	st		6619209	0					
ANR	6619348	Identifier	size		6619209	1					
ANR	6619349	ElseStatement	else		6619209	0					
ANR	6619350	CompoundStatement		25:9:638:638	6619209	0					
ANR	6619351	ExpressionStatement	st . valid &= ~ZIP_STAT_COMP_SIZE	313:1:8151:8182	6619209	0	True				
ANR	6619352	AssignmentExpression	st . valid &= ~ZIP_STAT_COMP_SIZE		6619209	0		&=			
ANR	6619353	MemberAccess	st . valid		6619209	0					
ANR	6619354	Identifier	st		6619209	0					
ANR	6619355	Identifier	valid		6619209	1					
ANR	6619356	Identifier	~ZIP_STAT_COMP_SIZE		6619209	1					
ANR	6619357	ExpressionStatement	flags = ZIP_EF_LOCAL	317:4:8196:8216	6619209	9	True				
ANR	6619358	AssignmentExpression	flags = ZIP_EF_LOCAL		6619209	0		=			
ANR	6619359	Identifier	flags		6619209	0					
ANR	6619360	Identifier	ZIP_EF_LOCAL		6619209	1					
ANR	6619361	IfStatement	if ( ( st . valid & ZIP_STAT_SIZE ) == 0 )		6619209	10					
ANR	6619362	Condition	( st . valid & ZIP_STAT_SIZE ) == 0	319:8:8227:8257	6619209	0	True				
ANR	6619363	EqualityExpression	( st . valid & ZIP_STAT_SIZE ) == 0		6619209	0		==			
ANR	6619364	BitAndExpression	st . valid & ZIP_STAT_SIZE		6619209	0		&			
ANR	6619365	MemberAccess	st . valid		6619209	0					
ANR	6619366	Identifier	st		6619209	0					
ANR	6619367	Identifier	valid		6619209	1					
ANR	6619368	Identifier	ZIP_STAT_SIZE		6619209	1					
ANR	6619369	PrimaryExpression	0		6619209	1					
ANR	6619370	ExpressionStatement	flags |= ZIP_FL_FORCE_ZIP64	320:1:8261:8288	6619209	1	True				
ANR	6619371	AssignmentExpression	flags |= ZIP_FL_FORCE_ZIP64		6619209	0		|=			
ANR	6619372	Identifier	flags		6619209	0					
ANR	6619373	Identifier	ZIP_FL_FORCE_ZIP64		6619209	1					
ANR	6619374	ElseStatement	else		6619209	0					
ANR	6619375	CompoundStatement		35:9:813:813	6619209	0					
ANR	6619376	ExpressionStatement	de -> uncomp_size = st . size	322:1:8302:8327	6619209	0	True				
ANR	6619377	AssignmentExpression	de -> uncomp_size = st . size		6619209	0		=			
ANR	6619378	PtrMemberAccess	de -> uncomp_size		6619209	0					
ANR	6619379	Identifier	de		6619209	0					
ANR	6619380	Identifier	uncomp_size		6619209	1					
ANR	6619381	MemberAccess	st . size		6619209	1					
ANR	6619382	Identifier	st		6619209	0					
ANR	6619383	Identifier	size		6619209	1					
ANR	6619384	IfStatement	if ( ( st . valid & ZIP_STAT_COMP_SIZE ) == 0 )		6619209	1					
ANR	6619385	Condition	( st . valid & ZIP_STAT_COMP_SIZE ) == 0	324:5:8336:8371	6619209	0	True				
ANR	6619386	EqualityExpression	( st . valid & ZIP_STAT_COMP_SIZE ) == 0		6619209	0		==			
ANR	6619387	BitAndExpression	st . valid & ZIP_STAT_COMP_SIZE		6619209	0		&			
ANR	6619388	MemberAccess	st . valid		6619209	0					
ANR	6619389	Identifier	st		6619209	0					
ANR	6619390	Identifier	valid		6619209	1					
ANR	6619391	Identifier	ZIP_STAT_COMP_SIZE		6619209	1					
ANR	6619392	PrimaryExpression	0		6619209	1					
ANR	6619393	CompoundStatement		38:43:888:888	6619209	1					
ANR	6619394	IfStatement	if ( ( ( ( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32 ) || ( de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) ) )		6619209	0					
ANR	6619395	Condition	( ( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32 ) || ( de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method ) )	325:9:8385:8611	6619209	0	True				
ANR	6619396	OrExpression	( ( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32 ) || ( de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method ) )		6619209	0		||			
ANR	6619397	AndExpression	( de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method ) ) && st . size > MAX_DEFLATE_SIZE_32		6619209	0		&&			
ANR	6619398	OrExpression	de -> comp_method == ZIP_CM_DEFLATE || ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	0		||			
ANR	6619399	EqualityExpression	de -> comp_method == ZIP_CM_DEFLATE		6619209	0		==			
ANR	6619400	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619401	Identifier	de		6619209	0					
ANR	6619402	Identifier	comp_method		6619209	1					
ANR	6619403	Identifier	ZIP_CM_DEFLATE		6619209	1					
ANR	6619404	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	1					
ANR	6619405	Callee	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619406	Identifier	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619407	ArgumentList	de -> comp_method		6619209	1					
ANR	6619408	Argument	de -> comp_method		6619209	0					
ANR	6619409	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619410	Identifier	de		6619209	0					
ANR	6619411	Identifier	comp_method		6619209	1					
ANR	6619412	RelationalExpression	st . size > MAX_DEFLATE_SIZE_32		6619209	1		>			
ANR	6619413	MemberAccess	st . size		6619209	0					
ANR	6619414	Identifier	st		6619209	0					
ANR	6619415	Identifier	size		6619209	1					
ANR	6619416	Identifier	MAX_DEFLATE_SIZE_32		6619209	1					
ANR	6619417	AndExpression	de -> comp_method != ZIP_CM_STORE && de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	1		&&			
ANR	6619418	EqualityExpression	de -> comp_method != ZIP_CM_STORE		6619209	0		!=			
ANR	6619419	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619420	Identifier	de		6619209	0					
ANR	6619421	Identifier	comp_method		6619209	1					
ANR	6619422	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619423	AndExpression	de -> comp_method != ZIP_CM_DEFLATE && ! ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	1		&&			
ANR	6619424	EqualityExpression	de -> comp_method != ZIP_CM_DEFLATE		6619209	0		!=			
ANR	6619425	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619426	Identifier	de		6619209	0					
ANR	6619427	Identifier	comp_method		6619209	1					
ANR	6619428	Identifier	ZIP_CM_DEFLATE		6619209	1					
ANR	6619429	UnaryOperationExpression	! ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	1					
ANR	6619430	UnaryOperator	!		6619209	0					
ANR	6619431	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	1					
ANR	6619432	Callee	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619433	Identifier	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619434	ArgumentList	de -> comp_method		6619209	1					
ANR	6619435	Argument	de -> comp_method		6619209	0					
ANR	6619436	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619437	Identifier	de		6619209	0					
ANR	6619438	Identifier	comp_method		6619209	1					
ANR	6619439	ExpressionStatement	flags |= ZIP_FL_FORCE_ZIP64	327:2:8616:8643	6619209	1	True				
ANR	6619440	AssignmentExpression	flags |= ZIP_FL_FORCE_ZIP64		6619209	0		|=			
ANR	6619441	Identifier	flags		6619209	0					
ANR	6619442	Identifier	ZIP_FL_FORCE_ZIP64		6619209	1					
ANR	6619443	ElseStatement	else		6619209	0					
ANR	6619444	ExpressionStatement	de -> comp_size = st . comp_size	330:5:8659:8687	6619209	0	True				
ANR	6619445	AssignmentExpression	de -> comp_size = st . comp_size		6619209	0		=			
ANR	6619446	PtrMemberAccess	de -> comp_size		6619209	0					
ANR	6619447	Identifier	de		6619209	0					
ANR	6619448	Identifier	comp_size		6619209	1					
ANR	6619449	MemberAccess	st . comp_size		6619209	1					
ANR	6619450	Identifier	st		6619209	0					
ANR	6619451	Identifier	comp_size		6619209	1					
ANR	6619452	ExpressionStatement	offstart = ftello ( ft )	334:4:8701:8722	6619209	11	True				
ANR	6619453	AssignmentExpression	offstart = ftello ( ft )		6619209	0		=			
ANR	6619454	Identifier	offstart		6619209	0					
ANR	6619455	CallExpression	ftello ( ft )		6619209	1					
ANR	6619456	Callee	ftello		6619209	0					
ANR	6619457	Identifier	ftello		6619209	0					
ANR	6619458	ArgumentList	ft		6619209	1					
ANR	6619459	Argument	ft		6619209	0					
ANR	6619460	Identifier	ft		6619209	0					
ANR	6619461	ExpressionStatement	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR	337:4:8814:8855	6619209	12	True				
ANR	6619462	AssignmentExpression	de -> bitflags &= ~ZIP_GPBF_DATA_DESCRIPTOR		6619209	0		&=			
ANR	6619463	PtrMemberAccess	de -> bitflags		6619209	0					
ANR	6619464	Identifier	de		6619209	0					
ANR	6619465	Identifier	bitflags		6619209	1					
ANR	6619466	Identifier	~ZIP_GPBF_DATA_DESCRIPTOR		6619209	1					
ANR	6619467	IfStatement	"if ( ( is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0 )"		6619209	13					
ANR	6619468	Condition	"( is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"	338:8:8865:8923	6619209	0	True				
ANR	6619469	RelationalExpression	"( is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"		6619209	0		<			
ANR	6619470	AssignmentExpression	"is_zip64 = _zip_dirent_write ( de , ft , flags , & za -> error )"		6619209	0		=			
ANR	6619471	Identifier	is_zip64		6619209	0					
ANR	6619472	CallExpression	"_zip_dirent_write ( de , ft , flags , & za -> error )"		6619209	1					
ANR	6619473	Callee	_zip_dirent_write		6619209	0					
ANR	6619474	Identifier	_zip_dirent_write		6619209	0					
ANR	6619475	ArgumentList	de		6619209	1					
ANR	6619476	Argument	de		6619209	0					
ANR	6619477	Identifier	de		6619209	0					
ANR	6619478	Argument	ft		6619209	1					
ANR	6619479	Identifier	ft		6619209	0					
ANR	6619480	Argument	flags		6619209	2					
ANR	6619481	Identifier	flags		6619209	0					
ANR	6619482	Argument	& za -> error		6619209	3					
ANR	6619483	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6619484	UnaryOperator	&		6619209	0					
ANR	6619485	PtrMemberAccess	za -> error		6619209	1					
ANR	6619486	Identifier	za		6619209	0					
ANR	6619487	Identifier	error		6619209	1					
ANR	6619488	PrimaryExpression	0		6619209	1					
ANR	6619489	ReturnStatement	return - 1 ;	339:1:8927:8936	6619209	1	True				
ANR	6619490	UnaryOperationExpression	- 1		6619209	0					
ANR	6619491	UnaryOperator	-		6619209	0					
ANR	6619492	PrimaryExpression	1		6619209	1					
ANR	6619493	IfStatement	if ( st . comp_method == ZIP_CM_STORE || ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method ) )		6619209	14					
ANR	6619494	Condition	st . comp_method == ZIP_CM_STORE || ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method )	342:8:8948:9054	6619209	0	True				
ANR	6619495	OrExpression	st . comp_method == ZIP_CM_STORE || ( ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method )		6619209	0		||			
ANR	6619496	EqualityExpression	st . comp_method == ZIP_CM_STORE		6619209	0		==			
ANR	6619497	MemberAccess	st . comp_method		6619209	0					
ANR	6619498	Identifier	st		6619209	0					
ANR	6619499	Identifier	comp_method		6619209	1					
ANR	6619500	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619501	AndExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method ) && st . comp_method != de -> comp_method		6619209	1		&&			
ANR	6619502	CallExpression	ZIP_CM_IS_DEFAULT ( de -> comp_method )		6619209	0					
ANR	6619503	Callee	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619504	Identifier	ZIP_CM_IS_DEFAULT		6619209	0					
ANR	6619505	ArgumentList	de -> comp_method		6619209	1					
ANR	6619506	Argument	de -> comp_method		6619209	0					
ANR	6619507	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619508	Identifier	de		6619209	0					
ANR	6619509	Identifier	comp_method		6619209	1					
ANR	6619510	EqualityExpression	st . comp_method != de -> comp_method		6619209	1		!=			
ANR	6619511	MemberAccess	st . comp_method		6619209	0					
ANR	6619512	Identifier	st		6619209	0					
ANR	6619513	Identifier	comp_method		6619209	1					
ANR	6619514	PtrMemberAccess	de -> comp_method		6619209	1					
ANR	6619515	Identifier	de		6619209	0					
ANR	6619516	Identifier	comp_method		6619209	1					
ANR	6619517	CompoundStatement		58:1:1611:1651	6619209	1					
ANR	6619518	IdentifierDeclStatement	"struct zip_source * s_store , * s_crc ;"	343:1:9060:9094	6619209	0	True				
ANR	6619519	IdentifierDecl	* s_store		6619209	0					
ANR	6619520	IdentifierDeclType	struct zip_source *		6619209	0					
ANR	6619521	Identifier	s_store		6619209	1					
ANR	6619522	IdentifierDecl	* s_crc		6619209	1					
ANR	6619523	IdentifierDeclType	struct zip_source *		6619209	0					
ANR	6619524	Identifier	s_crc		6619209	1					
ANR	6619525	IdentifierDeclStatement	zip_compression_implementation comp_impl ;	344:1:9097:9137	6619209	1	True				
ANR	6619526	IdentifierDecl	comp_impl		6619209	0					
ANR	6619527	IdentifierDeclType	zip_compression_implementation		6619209	0					
ANR	6619528	Identifier	comp_impl		6619209	1					
ANR	6619529	IfStatement	if ( st . comp_method != ZIP_CM_STORE )		6619209	2					
ANR	6619530	Condition	st . comp_method != ZIP_CM_STORE	346:5:9146:9175	6619209	0	True				
ANR	6619531	EqualityExpression	st . comp_method != ZIP_CM_STORE		6619209	0		!=			
ANR	6619532	MemberAccess	st . comp_method		6619209	0					
ANR	6619533	Identifier	st		6619209	0					
ANR	6619534	Identifier	comp_method		6619209	1					
ANR	6619535	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619536	CompoundStatement		60:37:1692:1692	6619209	1					
ANR	6619537	IfStatement	if ( ( comp_impl = _zip_get_compression_implementation ( st . comp_method ) ) == NULL )		6619209	0					
ANR	6619538	Condition	( comp_impl = _zip_get_compression_implementation ( st . comp_method ) ) == NULL	347:9:9189:9259	6619209	0	True				
ANR	6619539	EqualityExpression	( comp_impl = _zip_get_compression_implementation ( st . comp_method ) ) == NULL		6619209	0		==			
ANR	6619540	AssignmentExpression	comp_impl = _zip_get_compression_implementation ( st . comp_method )		6619209	0		=			
ANR	6619541	Identifier	comp_impl		6619209	0					
ANR	6619542	CallExpression	_zip_get_compression_implementation ( st . comp_method )		6619209	1					
ANR	6619543	Callee	_zip_get_compression_implementation		6619209	0					
ANR	6619544	Identifier	_zip_get_compression_implementation		6619209	0					
ANR	6619545	ArgumentList	st . comp_method		6619209	1					
ANR	6619546	Argument	st . comp_method		6619209	0					
ANR	6619547	MemberAccess	st . comp_method		6619209	0					
ANR	6619548	Identifier	st		6619209	0					
ANR	6619549	Identifier	comp_method		6619209	1					
ANR	6619550	Identifier	NULL		6619209	1					
ANR	6619551	CompoundStatement		61:82:1776:1776	6619209	1					
ANR	6619552	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"	348:2:9266:9315	6619209	0	True				
ANR	6619553	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"		6619209	0					
ANR	6619554	Callee	_zip_error_set		6619209	0					
ANR	6619555	Identifier	_zip_error_set		6619209	0					
ANR	6619556	ArgumentList	& za -> error		6619209	1					
ANR	6619557	Argument	& za -> error		6619209	0					
ANR	6619558	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6619559	UnaryOperator	&		6619209	0					
ANR	6619560	PtrMemberAccess	za -> error		6619209	1					
ANR	6619561	Identifier	za		6619209	0					
ANR	6619562	Identifier	error		6619209	1					
ANR	6619563	Argument	ZIP_ER_COMPNOTSUPP		6619209	1					
ANR	6619564	Identifier	ZIP_ER_COMPNOTSUPP		6619209	0					
ANR	6619565	Argument	0		6619209	2					
ANR	6619566	PrimaryExpression	0		6619209	0					
ANR	6619567	ReturnStatement	return - 1 ;	349:2:9319:9328	6619209	1	True				
ANR	6619568	UnaryOperationExpression	- 1		6619209	0					
ANR	6619569	UnaryOperator	-		6619209	0					
ANR	6619570	PrimaryExpression	1		6619209	1					
ANR	6619571	IfStatement	"if ( ( s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE ) ) == NULL )"		6619209	1					
ANR	6619572	Condition	"( s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE ) ) == NULL"	351:9:9346:9415	6619209	0	True				
ANR	6619573	EqualityExpression	"( s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE ) ) == NULL"		6619209	0		==			
ANR	6619574	AssignmentExpression	"s_store = comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE )"		6619209	0		=			
ANR	6619575	Identifier	s_store		6619209	0					
ANR	6619576	CallExpression	"comp_impl ( za , src , st . comp_method , ZIP_CODEC_DECODE )"		6619209	1					
ANR	6619577	Callee	comp_impl		6619209	0					
ANR	6619578	Identifier	comp_impl		6619209	0					
ANR	6619579	ArgumentList	za		6619209	1					
ANR	6619580	Argument	za		6619209	0					
ANR	6619581	Identifier	za		6619209	0					
ANR	6619582	Argument	src		6619209	1					
ANR	6619583	Identifier	src		6619209	0					
ANR	6619584	Argument	st . comp_method		6619209	2					
ANR	6619585	MemberAccess	st . comp_method		6619209	0					
ANR	6619586	Identifier	st		6619209	0					
ANR	6619587	Identifier	comp_method		6619209	1					
ANR	6619588	Argument	ZIP_CODEC_DECODE		6619209	3					
ANR	6619589	Identifier	ZIP_CODEC_DECODE		6619209	0					
ANR	6619590	Identifier	NULL		6619209	1					
ANR	6619591	CompoundStatement		65:81:1932:1932	6619209	1					
ANR	6619592	ReturnStatement	return - 1 ;	353:2:9453:9462	6619209	0	True				
ANR	6619593	UnaryOperationExpression	- 1		6619209	0					
ANR	6619594	UnaryOperator	-		6619209	0					
ANR	6619595	PrimaryExpression	1		6619209	1					
ANR	6619596	ElseStatement	else		6619209	0					
ANR	6619597	ExpressionStatement	s_store = src	357:5:9485:9498	6619209	0	True				
ANR	6619598	AssignmentExpression	s_store = src		6619209	0		=			
ANR	6619599	Identifier	s_store		6619209	0					
ANR	6619600	Identifier	src		6619209	1					
ANR	6619601	IfStatement	"if ( ( s_crc = zip_source_crc ( za , s_store , 0 ) ) == NULL )"		6619209	3					
ANR	6619602	Condition	"( s_crc = zip_source_crc ( za , s_store , 0 ) ) == NULL"	359:5:9506:9551	6619209	0	True				
ANR	6619603	EqualityExpression	"( s_crc = zip_source_crc ( za , s_store , 0 ) ) == NULL"		6619209	0		==			
ANR	6619604	AssignmentExpression	"s_crc = zip_source_crc ( za , s_store , 0 )"		6619209	0		=			
ANR	6619605	Identifier	s_crc		6619209	0					
ANR	6619606	CallExpression	"zip_source_crc ( za , s_store , 0 )"		6619209	1					
ANR	6619607	Callee	zip_source_crc		6619209	0					
ANR	6619608	Identifier	zip_source_crc		6619209	0					
ANR	6619609	ArgumentList	za		6619209	1					
ANR	6619610	Argument	za		6619209	0					
ANR	6619611	Identifier	za		6619209	0					
ANR	6619612	Argument	s_store		6619209	1					
ANR	6619613	Identifier	s_store		6619209	0					
ANR	6619614	Argument	0		6619209	2					
ANR	6619615	PrimaryExpression	0		6619209	0					
ANR	6619616	Identifier	NULL		6619209	1					
ANR	6619617	CompoundStatement		73:53:2068:2068	6619209	1					
ANR	6619618	IfStatement	if ( s_store != src )		6619209	0					
ANR	6619619	Condition	s_store != src	360:9:9565:9578	6619209	0	True				
ANR	6619620	EqualityExpression	s_store != src		6619209	0		!=			
ANR	6619621	Identifier	s_store		6619209	0					
ANR	6619622	Identifier	src		6619209	1					
ANR	6619623	ExpressionStatement	zip_source_pop ( s_store )	361:2:9583:9606	6619209	1	True				
ANR	6619624	CallExpression	zip_source_pop ( s_store )		6619209	0					
ANR	6619625	Callee	zip_source_pop		6619209	0					
ANR	6619626	Identifier	zip_source_pop		6619209	0					
ANR	6619627	ArgumentList	s_store		6619209	1					
ANR	6619628	Argument	s_store		6619209	0					
ANR	6619629	Identifier	s_store		6619209	0					
ANR	6619630	ReturnStatement	return - 1 ;	362:5:9613:9622	6619209	1	True				
ANR	6619631	UnaryOperationExpression	- 1		6619209	0					
ANR	6619632	UnaryOperator	-		6619209	0					
ANR	6619633	PrimaryExpression	1		6619209	1					
ANR	6619634	IfStatement	if ( de -> comp_method != ZIP_CM_STORE && ( ( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0 ) )		6619209	4					
ANR	6619635	Condition	de -> comp_method != ZIP_CM_STORE && ( ( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0 )	366:5:9682:9765	6619209	0	True				
ANR	6619636	AndExpression	de -> comp_method != ZIP_CM_STORE && ( ( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0 )		6619209	0		&&			
ANR	6619637	EqualityExpression	de -> comp_method != ZIP_CM_STORE		6619209	0		!=			
ANR	6619638	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619639	Identifier	de		6619209	0					
ANR	6619640	Identifier	comp_method		6619209	1					
ANR	6619641	Identifier	ZIP_CM_STORE		6619209	1					
ANR	6619642	OrExpression	( st . valid & ZIP_STAT_SIZE ) == 0 || st . size != 0		6619209	1		||			
ANR	6619643	EqualityExpression	( st . valid & ZIP_STAT_SIZE ) == 0		6619209	0		==			
ANR	6619644	BitAndExpression	st . valid & ZIP_STAT_SIZE		6619209	0		&			
ANR	6619645	MemberAccess	st . valid		6619209	0					
ANR	6619646	Identifier	st		6619209	0					
ANR	6619647	Identifier	valid		6619209	1					
ANR	6619648	Identifier	ZIP_STAT_SIZE		6619209	1					
ANR	6619649	PrimaryExpression	0		6619209	1					
ANR	6619650	EqualityExpression	st . size != 0		6619209	1		!=			
ANR	6619651	MemberAccess	st . size		6619209	0					
ANR	6619652	Identifier	st		6619209	0					
ANR	6619653	Identifier	size		6619209	1					
ANR	6619654	PrimaryExpression	0		6619209	1					
ANR	6619655	CompoundStatement		80:91:2282:2282	6619209	1					
ANR	6619656	IfStatement	if ( ( comp_impl = _zip_get_compression_implementation ( de -> comp_method ) ) == NULL )		6619209	0					
ANR	6619657	Condition	( comp_impl = _zip_get_compression_implementation ( de -> comp_method ) ) == NULL	367:9:9779:9850	6619209	0	True				
ANR	6619658	EqualityExpression	( comp_impl = _zip_get_compression_implementation ( de -> comp_method ) ) == NULL		6619209	0		==			
ANR	6619659	AssignmentExpression	comp_impl = _zip_get_compression_implementation ( de -> comp_method )		6619209	0		=			
ANR	6619660	Identifier	comp_impl		6619209	0					
ANR	6619661	CallExpression	_zip_get_compression_implementation ( de -> comp_method )		6619209	1					
ANR	6619662	Callee	_zip_get_compression_implementation		6619209	0					
ANR	6619663	Identifier	_zip_get_compression_implementation		6619209	0					
ANR	6619664	ArgumentList	de -> comp_method		6619209	1					
ANR	6619665	Argument	de -> comp_method		6619209	0					
ANR	6619666	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619667	Identifier	de		6619209	0					
ANR	6619668	Identifier	comp_method		6619209	1					
ANR	6619669	Identifier	NULL		6619209	1					
ANR	6619670	CompoundStatement		81:83:2367:2367	6619209	1					
ANR	6619671	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"	368:2:9857:9906	6619209	0	True				
ANR	6619672	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_COMPNOTSUPP , 0 )"		6619209	0					
ANR	6619673	Callee	_zip_error_set		6619209	0					
ANR	6619674	Identifier	_zip_error_set		6619209	0					
ANR	6619675	ArgumentList	& za -> error		6619209	1					
ANR	6619676	Argument	& za -> error		6619209	0					
ANR	6619677	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6619678	UnaryOperator	&		6619209	0					
ANR	6619679	PtrMemberAccess	za -> error		6619209	1					
ANR	6619680	Identifier	za		6619209	0					
ANR	6619681	Identifier	error		6619209	1					
ANR	6619682	Argument	ZIP_ER_COMPNOTSUPP		6619209	1					
ANR	6619683	Identifier	ZIP_ER_COMPNOTSUPP		6619209	0					
ANR	6619684	Argument	0		6619209	2					
ANR	6619685	PrimaryExpression	0		6619209	0					
ANR	6619686	ExpressionStatement	zip_source_pop ( s_crc )	369:2:9910:9931	6619209	1	True				
ANR	6619687	CallExpression	zip_source_pop ( s_crc )		6619209	0					
ANR	6619688	Callee	zip_source_pop		6619209	0					
ANR	6619689	Identifier	zip_source_pop		6619209	0					
ANR	6619690	ArgumentList	s_crc		6619209	1					
ANR	6619691	Argument	s_crc		6619209	0					
ANR	6619692	Identifier	s_crc		6619209	0					
ANR	6619693	IfStatement	if ( s_store != src )		6619209	2					
ANR	6619694	Condition	s_store != src	370:6:9939:9952	6619209	0	True				
ANR	6619695	EqualityExpression	s_store != src		6619209	0		!=			
ANR	6619696	Identifier	s_store		6619209	0					
ANR	6619697	Identifier	src		6619209	1					
ANR	6619698	ExpressionStatement	zip_source_pop ( s_store )	371:6:9961:9984	6619209	1	True				
ANR	6619699	CallExpression	zip_source_pop ( s_store )		6619209	0					
ANR	6619700	Callee	zip_source_pop		6619209	0					
ANR	6619701	Identifier	zip_source_pop		6619209	0					
ANR	6619702	ArgumentList	s_store		6619209	1					
ANR	6619703	Argument	s_store		6619209	0					
ANR	6619704	Identifier	s_store		6619209	0					
ANR	6619705	ReturnStatement	return - 1 ;	372:2:9988:9997	6619209	3	True				
ANR	6619706	UnaryOperationExpression	- 1		6619209	0					
ANR	6619707	UnaryOperator	-		6619209	0					
ANR	6619708	PrimaryExpression	1		6619209	1					
ANR	6619709	IfStatement	"if ( ( s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE ) ) == NULL )"		6619209	1					
ANR	6619710	Condition	"( s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE ) ) == NULL"	374:9:10015:10082	6619209	0	True				
ANR	6619711	EqualityExpression	"( s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE ) ) == NULL"		6619209	0		==			
ANR	6619712	AssignmentExpression	"s2 = comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE )"		6619209	0		=			
ANR	6619713	Identifier	s2		6619209	0					
ANR	6619714	CallExpression	"comp_impl ( za , s_crc , de -> comp_method , ZIP_CODEC_ENCODE )"		6619209	1					
ANR	6619715	Callee	comp_impl		6619209	0					
ANR	6619716	Identifier	comp_impl		6619209	0					
ANR	6619717	ArgumentList	za		6619209	1					
ANR	6619718	Argument	za		6619209	0					
ANR	6619719	Identifier	za		6619209	0					
ANR	6619720	Argument	s_crc		6619209	1					
ANR	6619721	Identifier	s_crc		6619209	0					
ANR	6619722	Argument	de -> comp_method		6619209	2					
ANR	6619723	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619724	Identifier	de		6619209	0					
ANR	6619725	Identifier	comp_method		6619209	1					
ANR	6619726	Argument	ZIP_CODEC_ENCODE		6619209	3					
ANR	6619727	Identifier	ZIP_CODEC_ENCODE		6619209	0					
ANR	6619728	Identifier	NULL		6619209	1					
ANR	6619729	CompoundStatement		88:79:2599:2599	6619209	1					
ANR	6619730	ExpressionStatement	zip_source_pop ( s_crc )	375:2:10089:10110	6619209	0	True				
ANR	6619731	CallExpression	zip_source_pop ( s_crc )		6619209	0					
ANR	6619732	Callee	zip_source_pop		6619209	0					
ANR	6619733	Identifier	zip_source_pop		6619209	0					
ANR	6619734	ArgumentList	s_crc		6619209	1					
ANR	6619735	Argument	s_crc		6619209	0					
ANR	6619736	Identifier	s_crc		6619209	0					
ANR	6619737	IfStatement	if ( s_store != src )		6619209	1					
ANR	6619738	Condition	s_store != src	376:6:10118:10131	6619209	0	True				
ANR	6619739	EqualityExpression	s_store != src		6619209	0		!=			
ANR	6619740	Identifier	s_store		6619209	0					
ANR	6619741	Identifier	src		6619209	1					
ANR	6619742	ExpressionStatement	zip_source_pop ( s_store )	377:6:10140:10163	6619209	1	True				
ANR	6619743	CallExpression	zip_source_pop ( s_store )		6619209	0					
ANR	6619744	Callee	zip_source_pop		6619209	0					
ANR	6619745	Identifier	zip_source_pop		6619209	0					
ANR	6619746	ArgumentList	s_store		6619209	1					
ANR	6619747	Argument	s_store		6619209	0					
ANR	6619748	Identifier	s_store		6619209	0					
ANR	6619749	ReturnStatement	return - 1 ;	378:2:10167:10176	6619209	2	True				
ANR	6619750	UnaryOperationExpression	- 1		6619209	0					
ANR	6619751	UnaryOperator	-		6619209	0					
ANR	6619752	PrimaryExpression	1		6619209	1					
ANR	6619753	ElseStatement	else		6619209	0					
ANR	6619754	ExpressionStatement	s2 = s_crc	382:5:10199:10209	6619209	0	True				
ANR	6619755	AssignmentExpression	s2 = s_crc		6619209	0		=			
ANR	6619756	Identifier	s2		6619209	0					
ANR	6619757	Identifier	s_crc		6619209	1					
ANR	6619758	ElseStatement	else		6619209	0					
ANR	6619759	ExpressionStatement	s2 = src	385:1:10227:10235	6619209	0	True				
ANR	6619760	AssignmentExpression	s2 = src		6619209	0		=			
ANR	6619761	Identifier	s2		6619209	0					
ANR	6619762	Identifier	src		6619209	1					
ANR	6619763	ExpressionStatement	offdata = ftello ( ft )	387:4:10242:10262	6619209	15	True				
ANR	6619764	AssignmentExpression	offdata = ftello ( ft )		6619209	0		=			
ANR	6619765	Identifier	offdata		6619209	0					
ANR	6619766	CallExpression	ftello ( ft )		6619209	1					
ANR	6619767	Callee	ftello		6619209	0					
ANR	6619768	Identifier	ftello		6619209	0					
ANR	6619769	ArgumentList	ft		6619209	1					
ANR	6619770	Argument	ft		6619209	0					
ANR	6619771	Identifier	ft		6619209	0					
ANR	6619772	ExpressionStatement	"ret = copy_source ( za , s2 , ft )"	389:4:10270:10299	6619209	16	True				
ANR	6619773	AssignmentExpression	"ret = copy_source ( za , s2 , ft )"		6619209	0		=			
ANR	6619774	Identifier	ret		6619209	0					
ANR	6619775	CallExpression	"copy_source ( za , s2 , ft )"		6619209	1					
ANR	6619776	Callee	copy_source		6619209	0					
ANR	6619777	Identifier	copy_source		6619209	0					
ANR	6619778	ArgumentList	za		6619209	1					
ANR	6619779	Argument	za		6619209	0					
ANR	6619780	Identifier	za		6619209	0					
ANR	6619781	Argument	s2		6619209	1					
ANR	6619782	Identifier	s2		6619209	0					
ANR	6619783	Argument	ft		6619209	2					
ANR	6619784	Identifier	ft		6619209	0					
ANR	6619785	IfStatement	"if ( zip_source_stat ( s2 , & st ) < 0 )"		6619209	17					
ANR	6619786	Condition	"zip_source_stat ( s2 , & st ) < 0"	391:8:10311:10338	6619209	0	True				
ANR	6619787	RelationalExpression	"zip_source_stat ( s2 , & st ) < 0"		6619209	0		<			
ANR	6619788	CallExpression	"zip_source_stat ( s2 , & st )"		6619209	0					
ANR	6619789	Callee	zip_source_stat		6619209	0					
ANR	6619790	Identifier	zip_source_stat		6619209	0					
ANR	6619791	ArgumentList	s2		6619209	1					
ANR	6619792	Argument	s2		6619209	0					
ANR	6619793	Identifier	s2		6619209	0					
ANR	6619794	Argument	& st		6619209	1					
ANR	6619795	UnaryOperationExpression	& st		6619209	0					
ANR	6619796	UnaryOperator	&		6619209	0					
ANR	6619797	Identifier	st		6619209	1					
ANR	6619798	PrimaryExpression	0		6619209	1					
ANR	6619799	ExpressionStatement	ret = - 1	392:1:10342:10350	6619209	1	True				
ANR	6619800	AssignmentExpression	ret = - 1		6619209	0		=			
ANR	6619801	Identifier	ret		6619209	0					
ANR	6619802	UnaryOperationExpression	- 1		6619209	1					
ANR	6619803	UnaryOperator	-		6619209	0					
ANR	6619804	PrimaryExpression	1		6619209	1					
ANR	6619805	WhileStatement	while ( s2 != src )		6619209	18					
ANR	6619806	Condition	s2 != src	394:11:10364:10372	6619209	0	True				
ANR	6619807	EqualityExpression	s2 != src		6619209	0		!=			
ANR	6619808	Identifier	s2		6619209	0					
ANR	6619809	Identifier	src		6619209	1					
ANR	6619810	CompoundStatement		108:22:2889:2889	6619209	1					
ANR	6619811	IfStatement	if ( ( s2 = zip_source_pop ( s2 ) ) == NULL )		6619209	0					
ANR	6619812	Condition	( s2 = zip_source_pop ( s2 ) ) == NULL	395:5:10382:10412	6619209	0	True				
ANR	6619813	EqualityExpression	( s2 = zip_source_pop ( s2 ) ) == NULL		6619209	0		==			
ANR	6619814	AssignmentExpression	s2 = zip_source_pop ( s2 )		6619209	0		=			
ANR	6619815	Identifier	s2		6619209	0					
ANR	6619816	CallExpression	zip_source_pop ( s2 )		6619209	1					
ANR	6619817	Callee	zip_source_pop		6619209	0					
ANR	6619818	Identifier	zip_source_pop		6619209	0					
ANR	6619819	ArgumentList	s2		6619209	1					
ANR	6619820	Argument	s2		6619209	0					
ANR	6619821	Identifier	s2		6619209	0					
ANR	6619822	Identifier	NULL		6619209	1					
ANR	6619823	CompoundStatement		109:38:2929:2929	6619209	1					
ANR	6619824	ExpressionStatement	ret = - 1	397:5:10448:10456	6619209	0	True				
ANR	6619825	AssignmentExpression	ret = - 1		6619209	0		=			
ANR	6619826	Identifier	ret		6619209	0					
ANR	6619827	UnaryOperationExpression	- 1		6619209	1					
ANR	6619828	UnaryOperator	-		6619209	0					
ANR	6619829	PrimaryExpression	1		6619209	1					
ANR	6619830	BreakStatement	break ;	398:5:10463:10468	6619209	1	True				
ANR	6619831	IfStatement	if ( ret < 0 )		6619209	19					
ANR	6619832	Condition	ret < 0	402:8:10488:10494	6619209	0	True				
ANR	6619833	RelationalExpression	ret < 0		6619209	0		<			
ANR	6619834	Identifier	ret		6619209	0					
ANR	6619835	PrimaryExpression	0		6619209	1					
ANR	6619836	ReturnStatement	return - 1 ;	403:1:10498:10507	6619209	1	True				
ANR	6619837	UnaryOperationExpression	- 1		6619209	0					
ANR	6619838	UnaryOperator	-		6619209	0					
ANR	6619839	PrimaryExpression	1		6619209	1					
ANR	6619840	ExpressionStatement	offend = ftello ( ft )	405:4:10514:10533	6619209	20	True				
ANR	6619841	AssignmentExpression	offend = ftello ( ft )		6619209	0		=			
ANR	6619842	Identifier	offend		6619209	0					
ANR	6619843	CallExpression	ftello ( ft )		6619209	1					
ANR	6619844	Callee	ftello		6619209	0					
ANR	6619845	Identifier	ftello		6619209	0					
ANR	6619846	ArgumentList	ft		6619209	1					
ANR	6619847	Argument	ft		6619209	0					
ANR	6619848	Identifier	ft		6619209	0					
ANR	6619849	IfStatement	if ( offend < 0 )		6619209	21					
ANR	6619850	Condition	offend < 0	406:5:10540:10549	6619209	0	True				
ANR	6619851	RelationalExpression	offend < 0		6619209	0		<			
ANR	6619852	Identifier	offend		6619209	0					
ANR	6619853	PrimaryExpression	0		6619209	1					
ANR	6619854	ReturnStatement	return - 1 ;	407:2:10554:10563	6619209	1	True				
ANR	6619855	UnaryOperationExpression	- 1		6619209	0					
ANR	6619856	UnaryOperator	-		6619209	0					
ANR	6619857	PrimaryExpression	1		6619209	1					
ANR	6619858	IfStatement	"if ( fseeko ( ft , offstart , SEEK_SET ) < 0 )"		6619209	22					
ANR	6619859	Condition	"fseeko ( ft , offstart , SEEK_SET ) < 0"	409:8:10574:10607	6619209	0	True				
ANR	6619860	RelationalExpression	"fseeko ( ft , offstart , SEEK_SET ) < 0"		6619209	0		<			
ANR	6619861	CallExpression	"fseeko ( ft , offstart , SEEK_SET )"		6619209	0					
ANR	6619862	Callee	fseeko		6619209	0					
ANR	6619863	Identifier	fseeko		6619209	0					
ANR	6619864	ArgumentList	ft		6619209	1					
ANR	6619865	Argument	ft		6619209	0					
ANR	6619866	Identifier	ft		6619209	0					
ANR	6619867	Argument	offstart		6619209	1					
ANR	6619868	Identifier	offstart		6619209	0					
ANR	6619869	Argument	SEEK_SET		6619209	2					
ANR	6619870	Identifier	SEEK_SET		6619209	0					
ANR	6619871	PrimaryExpression	0		6619209	1					
ANR	6619872	CompoundStatement		123:44:3124:3124	6619209	1					
ANR	6619873	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	410:1:10613:10659	6619209	0	True				
ANR	6619874	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6619209	0					
ANR	6619875	Callee	_zip_error_set		6619209	0					
ANR	6619876	Identifier	_zip_error_set		6619209	0					
ANR	6619877	ArgumentList	& za -> error		6619209	1					
ANR	6619878	Argument	& za -> error		6619209	0					
ANR	6619879	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6619880	UnaryOperator	&		6619209	0					
ANR	6619881	PtrMemberAccess	za -> error		6619209	1					
ANR	6619882	Identifier	za		6619209	0					
ANR	6619883	Identifier	error		6619209	1					
ANR	6619884	Argument	ZIP_ER_SEEK		6619209	1					
ANR	6619885	Identifier	ZIP_ER_SEEK		6619209	0					
ANR	6619886	Argument	errno		6619209	2					
ANR	6619887	Identifier	errno		6619209	0					
ANR	6619888	ReturnStatement	return - 1 ;	411:1:10662:10671	6619209	1	True				
ANR	6619889	UnaryOperationExpression	- 1		6619209	0					
ANR	6619890	UnaryOperator	-		6619209	0					
ANR	6619891	PrimaryExpression	1		6619209	1					
ANR	6619892	IfStatement	if ( ( st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) ) != ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) )		6619209	23					
ANR	6619893	Condition	( st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) ) != ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE )	414:8:10688:10802	6619209	0	True				
ANR	6619894	EqualityExpression	( st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE ) ) != ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE )		6619209	0		!=			
ANR	6619895	BitAndExpression	st . valid & ( ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE )		6619209	0		&			
ANR	6619896	MemberAccess	st . valid		6619209	0					
ANR	6619897	Identifier	st		6619209	0					
ANR	6619898	Identifier	valid		6619209	1					
ANR	6619899	InclusiveOrExpression	ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE		6619209	1		|			
ANR	6619900	Identifier	ZIP_STAT_COMP_METHOD		6619209	0					
ANR	6619901	InclusiveOrExpression	ZIP_STAT_CRC | ZIP_STAT_SIZE		6619209	1		|			
ANR	6619902	Identifier	ZIP_STAT_CRC		6619209	0					
ANR	6619903	Identifier	ZIP_STAT_SIZE		6619209	1					
ANR	6619904	InclusiveOrExpression	ZIP_STAT_COMP_METHOD | ZIP_STAT_CRC | ZIP_STAT_SIZE		6619209	1		|			
ANR	6619905	Identifier	ZIP_STAT_COMP_METHOD		6619209	0					
ANR	6619906	InclusiveOrExpression	ZIP_STAT_CRC | ZIP_STAT_SIZE		6619209	1		|			
ANR	6619907	Identifier	ZIP_STAT_CRC		6619209	0					
ANR	6619908	Identifier	ZIP_STAT_SIZE		6619209	1					
ANR	6619909	CompoundStatement		128:125:3319:3319	6619209	1					
ANR	6619910	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	415:1:10808:10854	6619209	0	True				
ANR	6619911	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6619209	0					
ANR	6619912	Callee	_zip_error_set		6619209	0					
ANR	6619913	Identifier	_zip_error_set		6619209	0					
ANR	6619914	ArgumentList	& za -> error		6619209	1					
ANR	6619915	Argument	& za -> error		6619209	0					
ANR	6619916	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6619917	UnaryOperator	&		6619209	0					
ANR	6619918	PtrMemberAccess	za -> error		6619209	1					
ANR	6619919	Identifier	za		6619209	0					
ANR	6619920	Identifier	error		6619209	1					
ANR	6619921	Argument	ZIP_ER_INTERNAL		6619209	1					
ANR	6619922	Identifier	ZIP_ER_INTERNAL		6619209	0					
ANR	6619923	Argument	0		6619209	2					
ANR	6619924	PrimaryExpression	0		6619209	0					
ANR	6619925	ReturnStatement	return - 1 ;	416:1:10857:10866	6619209	1	True				
ANR	6619926	UnaryOperationExpression	- 1		6619209	0					
ANR	6619927	UnaryOperator	-		6619209	0					
ANR	6619928	PrimaryExpression	1		6619209	1					
ANR	6619929	IfStatement	if ( st . valid & ZIP_STAT_MTIME )		6619209	24					
ANR	6619930	Condition	st . valid & ZIP_STAT_MTIME	419:8:10883:10907	6619209	0	True				
ANR	6619931	BitAndExpression	st . valid & ZIP_STAT_MTIME		6619209	0		&			
ANR	6619932	MemberAccess	st . valid		6619209	0					
ANR	6619933	Identifier	st		6619209	0					
ANR	6619934	Identifier	valid		6619209	1					
ANR	6619935	Identifier	ZIP_STAT_MTIME		6619209	1					
ANR	6619936	ExpressionStatement	de -> last_mod = st . mtime	420:1:10911:10934	6619209	1	True				
ANR	6619937	AssignmentExpression	de -> last_mod = st . mtime		6619209	0		=			
ANR	6619938	PtrMemberAccess	de -> last_mod		6619209	0					
ANR	6619939	Identifier	de		6619209	0					
ANR	6619940	Identifier	last_mod		6619209	1					
ANR	6619941	MemberAccess	st . mtime		6619209	1					
ANR	6619942	Identifier	st		6619209	0					
ANR	6619943	Identifier	mtime		6619209	1					
ANR	6619944	ElseStatement	else		6619209	0					
ANR	6619945	ExpressionStatement	time ( & de -> last_mod )	422:1:10946:10965	6619209	0	True				
ANR	6619946	CallExpression	time ( & de -> last_mod )		6619209	0					
ANR	6619947	Callee	time		6619209	0					
ANR	6619948	Identifier	time		6619209	0					
ANR	6619949	ArgumentList	& de -> last_mod		6619209	1					
ANR	6619950	Argument	& de -> last_mod		6619209	0					
ANR	6619951	UnaryOperationExpression	& de -> last_mod		6619209	0					
ANR	6619952	UnaryOperator	&		6619209	0					
ANR	6619953	PtrMemberAccess	de -> last_mod		6619209	1					
ANR	6619954	Identifier	de		6619209	0					
ANR	6619955	Identifier	last_mod		6619209	1					
ANR	6619956	ExpressionStatement	de -> comp_method = st . comp_method	423:4:10971:11003	6619209	25	True				
ANR	6619957	AssignmentExpression	de -> comp_method = st . comp_method		6619209	0		=			
ANR	6619958	PtrMemberAccess	de -> comp_method		6619209	0					
ANR	6619959	Identifier	de		6619209	0					
ANR	6619960	Identifier	comp_method		6619209	1					
ANR	6619961	MemberAccess	st . comp_method		6619209	1					
ANR	6619962	Identifier	st		6619209	0					
ANR	6619963	Identifier	comp_method		6619209	1					
ANR	6619964	ExpressionStatement	de -> crc = st . crc	424:4:11009:11025	6619209	26	True				
ANR	6619965	AssignmentExpression	de -> crc = st . crc		6619209	0		=			
ANR	6619966	PtrMemberAccess	de -> crc		6619209	0					
ANR	6619967	Identifier	de		6619209	0					
ANR	6619968	Identifier	crc		6619209	1					
ANR	6619969	MemberAccess	st . crc		6619209	1					
ANR	6619970	Identifier	st		6619209	0					
ANR	6619971	Identifier	crc		6619209	1					
ANR	6619972	ExpressionStatement	de -> uncomp_size = st . size	425:4:11031:11056	6619209	27	True				
ANR	6619973	AssignmentExpression	de -> uncomp_size = st . size		6619209	0		=			
ANR	6619974	PtrMemberAccess	de -> uncomp_size		6619209	0					
ANR	6619975	Identifier	de		6619209	0					
ANR	6619976	Identifier	uncomp_size		6619209	1					
ANR	6619977	MemberAccess	st . size		6619209	1					
ANR	6619978	Identifier	st		6619209	0					
ANR	6619979	Identifier	size		6619209	1					
ANR	6619980	ExpressionStatement	de -> comp_size = ( zip_uint64_t ) ( offend - offdata )	426:4:11062:11110	6619209	28	True				
ANR	6619981	AssignmentExpression	de -> comp_size = ( zip_uint64_t ) ( offend - offdata )		6619209	0		=			
ANR	6619982	PtrMemberAccess	de -> comp_size		6619209	0					
ANR	6619983	Identifier	de		6619209	0					
ANR	6619984	Identifier	comp_size		6619209	1					
ANR	6619985	CastExpression	( zip_uint64_t ) ( offend - offdata )		6619209	1					
ANR	6619986	CastTarget	zip_uint64_t		6619209	0					
ANR	6619987	AdditiveExpression	offend - offdata		6619209	1		-			
ANR	6619988	Identifier	offend		6619209	0					
ANR	6619989	Identifier	offdata		6619209	1					
ANR	6619990	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) )"		6619209	29					
ANR	6619991	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"	428:8:11121:11164	6619209	0	True				
ANR	6619992	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6619209	0					
ANR	6619993	Callee	zip_get_archive_flag		6619209	0					
ANR	6619994	Identifier	zip_get_archive_flag		6619209	0					
ANR	6619995	ArgumentList	za		6619209	1					
ANR	6619996	Argument	za		6619209	0					
ANR	6619997	Identifier	za		6619209	0					
ANR	6619998	Argument	ZIP_AFL_TORRENT		6619209	1					
ANR	6619999	Identifier	ZIP_AFL_TORRENT		6619209	0					
ANR	6620000	Argument	0		6619209	2					
ANR	6620001	PrimaryExpression	0		6619209	0					
ANR	6620002	ExpressionStatement	_zip_dirent_torrent_normalize ( de )	429:1:11168:11201	6619209	1	True				
ANR	6620003	CallExpression	_zip_dirent_torrent_normalize ( de )		6619209	0					
ANR	6620004	Callee	_zip_dirent_torrent_normalize		6619209	0					
ANR	6620005	Identifier	_zip_dirent_torrent_normalize		6619209	0					
ANR	6620006	ArgumentList	de		6619209	1					
ANR	6620007	Argument	de		6619209	0					
ANR	6620008	Identifier	de		6619209	0					
ANR	6620009	IfStatement	"if ( ( ret = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0 )"		6619209	30					
ANR	6620010	Condition	"( ret = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"	431:8:11212:11265	6619209	0	True				
ANR	6620011	RelationalExpression	"( ret = _zip_dirent_write ( de , ft , flags , & za -> error ) ) < 0"		6619209	0		<			
ANR	6620012	AssignmentExpression	"ret = _zip_dirent_write ( de , ft , flags , & za -> error )"		6619209	0		=			
ANR	6620013	Identifier	ret		6619209	0					
ANR	6620014	CallExpression	"_zip_dirent_write ( de , ft , flags , & za -> error )"		6619209	1					
ANR	6620015	Callee	_zip_dirent_write		6619209	0					
ANR	6620016	Identifier	_zip_dirent_write		6619209	0					
ANR	6620017	ArgumentList	de		6619209	1					
ANR	6620018	Argument	de		6619209	0					
ANR	6620019	Identifier	de		6619209	0					
ANR	6620020	Argument	ft		6619209	1					
ANR	6620021	Identifier	ft		6619209	0					
ANR	6620022	Argument	flags		6619209	2					
ANR	6620023	Identifier	flags		6619209	0					
ANR	6620024	Argument	& za -> error		6619209	3					
ANR	6620025	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6620026	UnaryOperator	&		6619209	0					
ANR	6620027	PtrMemberAccess	za -> error		6619209	1					
ANR	6620028	Identifier	za		6619209	0					
ANR	6620029	Identifier	error		6619209	1					
ANR	6620030	PrimaryExpression	0		6619209	1					
ANR	6620031	ReturnStatement	return - 1 ;	432:1:11269:11278	6619209	1	True				
ANR	6620032	UnaryOperationExpression	- 1		6619209	0					
ANR	6620033	UnaryOperator	-		6619209	0					
ANR	6620034	PrimaryExpression	1		6619209	1					
ANR	6620035	IfStatement	if ( is_zip64 != ret )		6619209	31					
ANR	6620036	Condition	is_zip64 != ret	434:8:11290:11304	6619209	0	True				
ANR	6620037	EqualityExpression	is_zip64 != ret		6619209	0		!=			
ANR	6620038	Identifier	is_zip64		6619209	0					
ANR	6620039	Identifier	ret		6619209	1					
ANR	6620040	CompoundStatement		148:25:3821:3821	6619209	1					
ANR	6620041	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"	436:1:11425:11471	6619209	0	True				
ANR	6620042	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_INTERNAL , 0 )"		6619209	0					
ANR	6620043	Callee	_zip_error_set		6619209	0					
ANR	6620044	Identifier	_zip_error_set		6619209	0					
ANR	6620045	ArgumentList	& za -> error		6619209	1					
ANR	6620046	Argument	& za -> error		6619209	0					
ANR	6620047	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6620048	UnaryOperator	&		6619209	0					
ANR	6620049	PtrMemberAccess	za -> error		6619209	1					
ANR	6620050	Identifier	za		6619209	0					
ANR	6620051	Identifier	error		6619209	1					
ANR	6620052	Argument	ZIP_ER_INTERNAL		6619209	1					
ANR	6620053	Identifier	ZIP_ER_INTERNAL		6619209	0					
ANR	6620054	Argument	0		6619209	2					
ANR	6620055	PrimaryExpression	0		6619209	0					
ANR	6620056	ReturnStatement	return - 1 ;	437:1:11474:11483	6619209	1	True				
ANR	6620057	UnaryOperationExpression	- 1		6619209	0					
ANR	6620058	UnaryOperator	-		6619209	0					
ANR	6620059	PrimaryExpression	1		6619209	1					
ANR	6620060	IfStatement	"if ( fseeko ( ft , offend , SEEK_SET ) < 0 )"		6619209	32					
ANR	6620061	Condition	"fseeko ( ft , offend , SEEK_SET ) < 0"	441:8:11504:11535	6619209	0	True				
ANR	6620062	RelationalExpression	"fseeko ( ft , offend , SEEK_SET ) < 0"		6619209	0		<			
ANR	6620063	CallExpression	"fseeko ( ft , offend , SEEK_SET )"		6619209	0					
ANR	6620064	Callee	fseeko		6619209	0					
ANR	6620065	Identifier	fseeko		6619209	0					
ANR	6620066	ArgumentList	ft		6619209	1					
ANR	6620067	Argument	ft		6619209	0					
ANR	6620068	Identifier	ft		6619209	0					
ANR	6620069	Argument	offend		6619209	1					
ANR	6620070	Identifier	offend		6619209	0					
ANR	6620071	Argument	SEEK_SET		6619209	2					
ANR	6620072	Identifier	SEEK_SET		6619209	0					
ANR	6620073	PrimaryExpression	0		6619209	1					
ANR	6620074	CompoundStatement		155:42:4052:4052	6619209	1					
ANR	6620075	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	442:1:11541:11587	6619209	0	True				
ANR	6620076	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6619209	0					
ANR	6620077	Callee	_zip_error_set		6619209	0					
ANR	6620078	Identifier	_zip_error_set		6619209	0					
ANR	6620079	ArgumentList	& za -> error		6619209	1					
ANR	6620080	Argument	& za -> error		6619209	0					
ANR	6620081	UnaryOperationExpression	& za -> error		6619209	0					
ANR	6620082	UnaryOperator	&		6619209	0					
ANR	6620083	PtrMemberAccess	za -> error		6619209	1					
ANR	6620084	Identifier	za		6619209	0					
ANR	6620085	Identifier	error		6619209	1					
ANR	6620086	Argument	ZIP_ER_SEEK		6619209	1					
ANR	6620087	Identifier	ZIP_ER_SEEK		6619209	0					
ANR	6620088	Argument	errno		6619209	2					
ANR	6620089	Identifier	errno		6619209	0					
ANR	6620090	ReturnStatement	return - 1 ;	443:1:11590:11599	6619209	1	True				
ANR	6620091	UnaryOperationExpression	- 1		6619209	0					
ANR	6620092	UnaryOperator	-		6619209	0					
ANR	6620093	PrimaryExpression	1		6619209	1					
ANR	6620094	ReturnStatement	return 0 ;	446:4:11612:11620	6619209	33	True				
ANR	6620095	PrimaryExpression	0		6619209	0					
ANR	6620096	ReturnType	static int		6619209	1					
ANR	6620097	Identifier	add_data		6619209	2					
ANR	6620098	ParameterList	"struct zip * za , struct zip_source * src , struct zip_dirent * de , FILE * ft"		6619209	3					
ANR	6620099	Parameter	struct zip * za	286:9:7412:7425	6619209	0	True				
ANR	6620100	ParameterType	struct zip *		6619209	0					
ANR	6620101	Identifier	za		6619209	1					
ANR	6620102	Parameter	struct zip_source * src	286:25:7428:7449	6619209	1	True				
ANR	6620103	ParameterType	struct zip_source *		6619209	0					
ANR	6620104	Identifier	src		6619209	1					
ANR	6620105	Parameter	struct zip_dirent * de	286:49:7452:7472	6619209	2	True				
ANR	6620106	ParameterType	struct zip_dirent *		6619209	0					
ANR	6620107	Identifier	de		6619209	1					
ANR	6620108	Parameter	FILE * ft	286:72:7475:7482	6619209	3	True				
ANR	6620109	ParameterType	FILE *		6619209	0					
ANR	6620110	Identifier	ft		6619209	1					
ANR	6620111	CFGEntryNode	ENTRY		6619209		True				
ANR	6620112	CFGExitNode	EXIT		6619209		True				
ANR	6620113	Symbol	ZIP_STAT_CRC		6619209						
ANR	6620114	Symbol	de		6619209						
ANR	6620115	Symbol	& za -> error		6619209						
ANR	6620116	Symbol	s_store		6619209						
ANR	6620117	Symbol	is_zip64		6619209						
ANR	6620118	Symbol	st . valid		6619209						
ANR	6620119	Symbol	s_crc		6619209						
ANR	6620120	Symbol	ZIP_ER_COMPNOTSUPP		6619209						
ANR	6620121	Symbol	& st		6619209						
ANR	6620122	Symbol	copy_source		6619209						
ANR	6620123	Symbol	ZIP_FL_FORCE_ZIP64		6619209						
ANR	6620124	Symbol	ZIP_CM_IS_DEFAULT		6619209						
ANR	6620125	Symbol	ZIP_STAT_COMP_SIZE		6619209						
ANR	6620126	Symbol	ftello		6619209						
ANR	6620127	Symbol	s2		6619209						
ANR	6620128	Symbol	ret		6619209						
ANR	6620129	Symbol	errno		6619209						
ANR	6620130	Symbol	NULL		6619209						
ANR	6620131	Symbol	offstart		6619209						
ANR	6620132	Symbol	* de		6619209						
ANR	6620133	Symbol	ZIP_ER_INTERNAL		6619209						
ANR	6620134	Symbol	za		6619209						
ANR	6620135	Symbol	ZIP_CODEC_ENCODE		6619209						
ANR	6620136	Symbol	zip_get_archive_flag		6619209						
ANR	6620137	Symbol	st . comp_size		6619209						
ANR	6620138	Symbol	ZIP_ER_SEEK		6619209						
ANR	6620139	Symbol	ZIP_CM_STORE		6619209						
ANR	6620140	Symbol	st . comp_method		6619209						
ANR	6620141	Symbol	ZIP_EF_LOCAL		6619209						
ANR	6620142	Symbol	& de -> last_mod		6619209						
ANR	6620143	Symbol	offdata		6619209						
ANR	6620144	Symbol	offend		6619209						
ANR	6620145	Symbol	zip_source_crc		6619209						
ANR	6620146	Symbol	fseeko		6619209						
ANR	6620147	Symbol	ZIP_STAT_COMP_METHOD		6619209						
ANR	6620148	Symbol	de -> comp_method		6619209						
ANR	6620149	Symbol	MAX_DEFLATE_SIZE_32		6619209						
ANR	6620150	Symbol	zip_source_pop		6619209						
ANR	6620151	Symbol	flags		6619209						
ANR	6620152	Symbol	de -> uncomp_size		6619209						
ANR	6620153	Symbol	ZIP_CM_DEFLATE		6619209						
ANR	6620154	Symbol	ft		6619209						
ANR	6620155	Symbol	st . crc		6619209						
ANR	6620156	Symbol	de -> last_mod		6619209						
ANR	6620157	Symbol	de -> comp_size		6619209						
ANR	6620158	Symbol	st . size		6619209						
ANR	6620159	Symbol	_zip_dirent_write		6619209						
ANR	6620160	Symbol	ZIP_STAT_MTIME		6619209						
ANR	6620161	Symbol	st . mtime		6619209						
ANR	6620162	Symbol	SEEK_SET		6619209						
ANR	6620163	Symbol	st		6619209						
ANR	6620164	Symbol	zip_source_stat		6619209						
ANR	6620165	Symbol	src		6619209						
ANR	6620166	Symbol	~ZIP_STAT_COMP_SIZE		6619209						
ANR	6620167	Symbol	_zip_get_compression_implementation		6619209						
ANR	6620168	Symbol	ZIP_AFL_TORRENT		6619209						
ANR	6620169	Symbol	ZIP_CODEC_DECODE		6619209						
ANR	6620170	Symbol	de -> crc		6619209						
ANR	6620171	Symbol	~ZIP_GPBF_DATA_DESCRIPTOR		6619209						
ANR	6620172	Symbol	comp_impl		6619209						
ANR	6620173	Symbol	de -> bitflags		6619209						
ANR	6620174	Symbol	ZIP_STAT_SIZE		6619209						
ANR	6620175	Function	copy_data	451:0:11628:12292							
ANR	6620176	FunctionDef	"copy_data (FILE * fs , zip_uint64_t len , FILE * ft , struct zip_error * error)"		6620175	0					
ANR	6620177	CompoundStatement		453:0:11712:12292	6620175	0					
ANR	6620178	IdentifierDeclStatement	char buf [ BUFSIZE ] ;	454:4:11718:11735	6620175	0	True				
ANR	6620179	IdentifierDecl	buf [ BUFSIZE ]		6620175	0					
ANR	6620180	IdentifierDeclType	char [ BUFSIZE ]		6620175	0					
ANR	6620181	Identifier	buf		6620175	1					
ANR	6620182	Identifier	BUFSIZE		6620175	2					
ANR	6620183	IdentifierDeclStatement	"size_t n , nn ;"	455:4:11741:11753	6620175	1	True				
ANR	6620184	IdentifierDecl	n		6620175	0					
ANR	6620185	IdentifierDeclType	size_t		6620175	0					
ANR	6620186	Identifier	n		6620175	1					
ANR	6620187	IdentifierDecl	nn		6620175	1					
ANR	6620188	IdentifierDeclType	size_t		6620175	0					
ANR	6620189	Identifier	nn		6620175	1					
ANR	6620190	IfStatement	if ( len == 0 )		6620175	2					
ANR	6620191	Condition	len == 0	457:8:11764:11771	6620175	0	True				
ANR	6620192	EqualityExpression	len == 0		6620175	0		==			
ANR	6620193	Identifier	len		6620175	0					
ANR	6620194	PrimaryExpression	0		6620175	1					
ANR	6620195	ReturnStatement	return 0 ;	458:1:11775:11783	6620175	1	True				
ANR	6620196	PrimaryExpression	0		6620175	0					
ANR	6620197	WhileStatement	while ( len > 0 )		6620175	3					
ANR	6620198	Condition	len > 0	460:11:11797:11803	6620175	0	True				
ANR	6620199	RelationalExpression	len > 0		6620175	0		>			
ANR	6620200	Identifier	len		6620175	0					
ANR	6620201	PrimaryExpression	0		6620175	1					
ANR	6620202	CompoundStatement		8:20:93:93	6620175	1					
ANR	6620203	ExpressionStatement	nn = len > sizeof ( buf ) ? sizeof ( buf ) : len	461:1:11809:11851	6620175	0	True				
ANR	6620204	AssignmentExpression	nn = len > sizeof ( buf ) ? sizeof ( buf ) : len		6620175	0		=			
ANR	6620205	Identifier	nn		6620175	0					
ANR	6620206	ConditionalExpression	len > sizeof ( buf ) ? sizeof ( buf ) : len		6620175	1					
ANR	6620207	Condition	len > sizeof ( buf )		6620175	0					
ANR	6620208	RelationalExpression	len > sizeof ( buf )		6620175	0		>			
ANR	6620209	Identifier	len		6620175	0					
ANR	6620210	SizeofExpression	sizeof ( buf )		6620175	1					
ANR	6620211	Sizeof	sizeof		6620175	0					
ANR	6620212	SizeofOperand	buf		6620175	1					
ANR	6620213	SizeofExpression	sizeof ( buf )		6620175	1					
ANR	6620214	Sizeof	sizeof		6620175	0					
ANR	6620215	SizeofOperand	buf		6620175	1					
ANR	6620216	Identifier	len		6620175	2					
ANR	6620217	IfStatement	"if ( ( n = fread ( buf , 1 , nn , fs ) ) == 0 )"		6620175	1					
ANR	6620218	Condition	"( n = fread ( buf , 1 , nn , fs ) ) == 0"	462:5:11858:11887	6620175	0	True				
ANR	6620219	EqualityExpression	"( n = fread ( buf , 1 , nn , fs ) ) == 0"		6620175	0		==			
ANR	6620220	AssignmentExpression	"n = fread ( buf , 1 , nn , fs )"		6620175	0		=			
ANR	6620221	Identifier	n		6620175	0					
ANR	6620222	CallExpression	"fread ( buf , 1 , nn , fs )"		6620175	1					
ANR	6620223	Callee	fread		6620175	0					
ANR	6620224	Identifier	fread		6620175	0					
ANR	6620225	ArgumentList	buf		6620175	1					
ANR	6620226	Argument	buf		6620175	0					
ANR	6620227	Identifier	buf		6620175	0					
ANR	6620228	Argument	1		6620175	1					
ANR	6620229	PrimaryExpression	1		6620175	0					
ANR	6620230	Argument	nn		6620175	2					
ANR	6620231	Identifier	nn		6620175	0					
ANR	6620232	Argument	fs		6620175	3					
ANR	6620233	Identifier	fs		6620175	0					
ANR	6620234	PrimaryExpression	0		6620175	1					
ANR	6620235	CompoundStatement		10:37:177:177	6620175	1					
ANR	6620236	IfStatement	if ( ferror ( fs ) )		6620175	0					
ANR	6620237	Condition	ferror ( fs )	463:16:11908:11917	6620175	0	True				
ANR	6620238	CallExpression	ferror ( fs )		6620175	0					
ANR	6620239	Callee	ferror		6620175	0					
ANR	6620240	Identifier	ferror		6620175	0					
ANR	6620241	ArgumentList	fs		6620175	1					
ANR	6620242	Argument	fs		6620175	0					
ANR	6620243	Identifier	fs		6620175	0					
ANR	6620244	CompoundStatement		11:28:207:207	6620175	1					
ANR	6620245	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_READ , errno )"	464:16:11938:11979	6620175	0	True				
ANR	6620246	CallExpression	"_zip_error_set ( error , ZIP_ER_READ , errno )"		6620175	0					
ANR	6620247	Callee	_zip_error_set		6620175	0					
ANR	6620248	Identifier	_zip_error_set		6620175	0					
ANR	6620249	ArgumentList	error		6620175	1					
ANR	6620250	Argument	error		6620175	0					
ANR	6620251	Identifier	error		6620175	0					
ANR	6620252	Argument	ZIP_ER_READ		6620175	1					
ANR	6620253	Identifier	ZIP_ER_READ		6620175	0					
ANR	6620254	Argument	errno		6620175	2					
ANR	6620255	Identifier	errno		6620175	0					
ANR	6620256	ReturnStatement	return - 1 ;	465:16:11997:12006	6620175	1	True				
ANR	6620257	UnaryOperationExpression	- 1		6620175	0					
ANR	6620258	UnaryOperator	-		6620175	0					
ANR	6620259	PrimaryExpression	1		6620175	1					
ANR	6620260	ElseStatement	else		6620175	0					
ANR	6620261	CompoundStatement		15:17:326:326	6620175	0					
ANR	6620262	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_EOF , 0 )"	468:16:12057:12093	6620175	0	True				
ANR	6620263	CallExpression	"_zip_error_set ( error , ZIP_ER_EOF , 0 )"		6620175	0					
ANR	6620264	Callee	_zip_error_set		6620175	0					
ANR	6620265	Identifier	_zip_error_set		6620175	0					
ANR	6620266	ArgumentList	error		6620175	1					
ANR	6620267	Argument	error		6620175	0					
ANR	6620268	Identifier	error		6620175	0					
ANR	6620269	Argument	ZIP_ER_EOF		6620175	1					
ANR	6620270	Identifier	ZIP_ER_EOF		6620175	0					
ANR	6620271	Argument	0		6620175	2					
ANR	6620272	PrimaryExpression	0		6620175	0					
ANR	6620273	ReturnStatement	return - 1 ;	469:16:12111:12120	6620175	1	True				
ANR	6620274	UnaryOperationExpression	- 1		6620175	0					
ANR	6620275	UnaryOperator	-		6620175	0					
ANR	6620276	PrimaryExpression	1		6620175	1					
ANR	6620277	IfStatement	"if ( fwrite ( buf , 1 , n , ft ) != ( size_t ) n )"		6620175	2					
ANR	6620278	Condition	"fwrite ( buf , 1 , n , ft ) != ( size_t ) n"	473:5:12152:12185	6620175	0	True				
ANR	6620279	EqualityExpression	"fwrite ( buf , 1 , n , ft ) != ( size_t ) n"		6620175	0		!=			
ANR	6620280	CallExpression	"fwrite ( buf , 1 , n , ft )"		6620175	0					
ANR	6620281	Callee	fwrite		6620175	0					
ANR	6620282	Identifier	fwrite		6620175	0					
ANR	6620283	ArgumentList	buf		6620175	1					
ANR	6620284	Argument	buf		6620175	0					
ANR	6620285	Identifier	buf		6620175	0					
ANR	6620286	Argument	1		6620175	1					
ANR	6620287	PrimaryExpression	1		6620175	0					
ANR	6620288	Argument	n		6620175	2					
ANR	6620289	Identifier	n		6620175	0					
ANR	6620290	Argument	ft		6620175	3					
ANR	6620291	Identifier	ft		6620175	0					
ANR	6620292	CastExpression	( size_t ) n		6620175	1					
ANR	6620293	CastTarget	size_t		6620175	0					
ANR	6620294	Identifier	n		6620175	1					
ANR	6620295	CompoundStatement		21:41:475:475	6620175	1					
ANR	6620296	ExpressionStatement	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"	474:5:12195:12237	6620175	0	True				
ANR	6620297	CallExpression	"_zip_error_set ( error , ZIP_ER_WRITE , errno )"		6620175	0					
ANR	6620298	Callee	_zip_error_set		6620175	0					
ANR	6620299	Identifier	_zip_error_set		6620175	0					
ANR	6620300	ArgumentList	error		6620175	1					
ANR	6620301	Argument	error		6620175	0					
ANR	6620302	Identifier	error		6620175	0					
ANR	6620303	Argument	ZIP_ER_WRITE		6620175	1					
ANR	6620304	Identifier	ZIP_ER_WRITE		6620175	0					
ANR	6620305	Argument	errno		6620175	2					
ANR	6620306	Identifier	errno		6620175	0					
ANR	6620307	ReturnStatement	return - 1 ;	475:5:12244:12253	6620175	1	True				
ANR	6620308	UnaryOperationExpression	- 1		6620175	0					
ANR	6620309	UnaryOperator	-		6620175	0					
ANR	6620310	PrimaryExpression	1		6620175	1					
ANR	6620311	ExpressionStatement	len -= n	478:1:12261:12269	6620175	3	True				
ANR	6620312	AssignmentExpression	len -= n		6620175	0		-=			
ANR	6620313	Identifier	len		6620175	0					
ANR	6620314	Identifier	n		6620175	1					
ANR	6620315	ReturnStatement	return 0 ;	481:4:12282:12290	6620175	4	True				
ANR	6620316	PrimaryExpression	0		6620175	0					
ANR	6620317	ReturnType	static int		6620175	1					
ANR	6620318	Identifier	copy_data		6620175	2					
ANR	6620319	ParameterList	"FILE * fs , zip_uint64_t len , FILE * ft , struct zip_error * error"		6620175	3					
ANR	6620320	Parameter	FILE * fs	452:10:11649:11656	6620175	0	True				
ANR	6620321	ParameterType	FILE *		6620175	0					
ANR	6620322	Identifier	fs		6620175	1					
ANR	6620323	Parameter	zip_uint64_t len	452:20:11659:11674	6620175	1	True				
ANR	6620324	ParameterType	zip_uint64_t		6620175	0					
ANR	6620325	Identifier	len		6620175	1					
ANR	6620326	Parameter	FILE * ft	452:38:11677:11684	6620175	2	True				
ANR	6620327	ParameterType	FILE *		6620175	0					
ANR	6620328	Identifier	ft		6620175	1					
ANR	6620329	Parameter	struct zip_error * error	452:48:11687:11709	6620175	3	True				
ANR	6620330	ParameterType	struct zip_error *		6620175	0					
ANR	6620331	Identifier	error		6620175	1					
ANR	6620332	CFGEntryNode	ENTRY		6620175		True				
ANR	6620333	CFGExitNode	EXIT		6620175		True				
ANR	6620334	Symbol	nn		6620175						
ANR	6620335	Symbol	errno		6620175						
ANR	6620336	Symbol	fwrite		6620175						
ANR	6620337	Symbol	ZIP_ER_WRITE		6620175						
ANR	6620338	Symbol	error		6620175						
ANR	6620339	Symbol	ZIP_ER_READ		6620175						
ANR	6620340	Symbol	fs		6620175						
ANR	6620341	Symbol	ft		6620175						
ANR	6620342	Symbol	n		6620175						
ANR	6620343	Symbol	fread		6620175						
ANR	6620344	Symbol	ferror		6620175						
ANR	6620345	Symbol	buf		6620175						
ANR	6620346	Symbol	len		6620175						
ANR	6620347	Symbol	ZIP_ER_EOF		6620175						
ANR	6620348	Function	copy_source	486:0:12298:12891							
ANR	6620349	FunctionDef	"copy_source (struct zip * za , struct zip_source * src , FILE * ft)"		6620348	0					
ANR	6620350	CompoundStatement		488:0:12371:12891	6620348	0					
ANR	6620351	IdentifierDeclStatement	char buf [ BUFSIZE ] ;	489:4:12377:12394	6620348	0	True				
ANR	6620352	IdentifierDecl	buf [ BUFSIZE ]		6620348	0					
ANR	6620353	IdentifierDeclType	char [ BUFSIZE ]		6620348	0					
ANR	6620354	Identifier	buf		6620348	1					
ANR	6620355	Identifier	BUFSIZE		6620348	2					
ANR	6620356	IdentifierDeclStatement	zip_int64_t n ;	490:4:12400:12413	6620348	1	True				
ANR	6620357	IdentifierDecl	n		6620348	0					
ANR	6620358	IdentifierDeclType	zip_int64_t		6620348	0					
ANR	6620359	Identifier	n		6620348	1					
ANR	6620360	IdentifierDeclStatement	int ret ;	491:4:12419:12426	6620348	2	True				
ANR	6620361	IdentifierDecl	ret		6620348	0					
ANR	6620362	IdentifierDeclType	int		6620348	0					
ANR	6620363	Identifier	ret		6620348	1					
ANR	6620364	IfStatement	if ( zip_source_open ( src ) < 0 )		6620348	3					
ANR	6620365	Condition	zip_source_open ( src ) < 0	493:8:12437:12460	6620348	0	True				
ANR	6620366	RelationalExpression	zip_source_open ( src ) < 0		6620348	0		<			
ANR	6620367	CallExpression	zip_source_open ( src )		6620348	0					
ANR	6620368	Callee	zip_source_open		6620348	0					
ANR	6620369	Identifier	zip_source_open		6620348	0					
ANR	6620370	ArgumentList	src		6620348	1					
ANR	6620371	Argument	src		6620348	0					
ANR	6620372	Identifier	src		6620348	0					
ANR	6620373	PrimaryExpression	0		6620348	1					
ANR	6620374	CompoundStatement		6:34:91:91	6620348	1					
ANR	6620375	ExpressionStatement	"_zip_error_set_from_source ( & za -> error , src )"	494:1:12466:12509	6620348	0	True				
ANR	6620376	CallExpression	"_zip_error_set_from_source ( & za -> error , src )"		6620348	0					
ANR	6620377	Callee	_zip_error_set_from_source		6620348	0					
ANR	6620378	Identifier	_zip_error_set_from_source		6620348	0					
ANR	6620379	ArgumentList	& za -> error		6620348	1					
ANR	6620380	Argument	& za -> error		6620348	0					
ANR	6620381	UnaryOperationExpression	& za -> error		6620348	0					
ANR	6620382	UnaryOperator	&		6620348	0					
ANR	6620383	PtrMemberAccess	za -> error		6620348	1					
ANR	6620384	Identifier	za		6620348	0					
ANR	6620385	Identifier	error		6620348	1					
ANR	6620386	Argument	src		6620348	1					
ANR	6620387	Identifier	src		6620348	0					
ANR	6620388	ReturnStatement	return - 1 ;	495:1:12512:12521	6620348	1	True				
ANR	6620389	UnaryOperationExpression	- 1		6620348	0					
ANR	6620390	UnaryOperator	-		6620348	0					
ANR	6620391	PrimaryExpression	1		6620348	1					
ANR	6620392	ExpressionStatement	ret = 0	498:4:12534:12541	6620348	4	True				
ANR	6620393	AssignmentExpression	ret = 0		6620348	0		=			
ANR	6620394	Identifier	ret		6620348	0					
ANR	6620395	PrimaryExpression	0		6620348	1					
ANR	6620396	WhileStatement	"while ( ( n = zip_source_read ( src , buf , sizeof ( buf ) ) ) > 0 )"		6620348	5					
ANR	6620397	Condition	"( n = zip_source_read ( src , buf , sizeof ( buf ) ) ) > 0"	499:11:12554:12599	6620348	0	True				
ANR	6620398	RelationalExpression	"( n = zip_source_read ( src , buf , sizeof ( buf ) ) ) > 0"		6620348	0		>			
ANR	6620399	AssignmentExpression	"n = zip_source_read ( src , buf , sizeof ( buf ) )"		6620348	0		=			
ANR	6620400	Identifier	n		6620348	0					
ANR	6620401	CallExpression	"zip_source_read ( src , buf , sizeof ( buf ) )"		6620348	1					
ANR	6620402	Callee	zip_source_read		6620348	0					
ANR	6620403	Identifier	zip_source_read		6620348	0					
ANR	6620404	ArgumentList	src		6620348	1					
ANR	6620405	Argument	src		6620348	0					
ANR	6620406	Identifier	src		6620348	0					
ANR	6620407	Argument	buf		6620348	1					
ANR	6620408	Identifier	buf		6620348	0					
ANR	6620409	Argument	sizeof ( buf )		6620348	2					
ANR	6620410	SizeofExpression	sizeof ( buf )		6620348	0					
ANR	6620411	Sizeof	sizeof		6620348	0					
ANR	6620412	SizeofOperand	buf		6620348	1					
ANR	6620413	PrimaryExpression	0		6620348	1					
ANR	6620414	CompoundStatement		12:59:230:230	6620348	1					
ANR	6620415	IfStatement	"if ( fwrite ( buf , 1 , ( size_t ) n , ft ) != ( size_t ) n )"		6620348	0					
ANR	6620416	Condition	"fwrite ( buf , 1 , ( size_t ) n , ft ) != ( size_t ) n"	500:5:12609:12650	6620348	0	True				
ANR	6620417	EqualityExpression	"fwrite ( buf , 1 , ( size_t ) n , ft ) != ( size_t ) n"		6620348	0		!=			
ANR	6620418	CallExpression	"fwrite ( buf , 1 , ( size_t ) n , ft )"		6620348	0					
ANR	6620419	Callee	fwrite		6620348	0					
ANR	6620420	Identifier	fwrite		6620348	0					
ANR	6620421	ArgumentList	buf		6620348	1					
ANR	6620422	Argument	buf		6620348	0					
ANR	6620423	Identifier	buf		6620348	0					
ANR	6620424	Argument	1		6620348	1					
ANR	6620425	PrimaryExpression	1		6620348	0					
ANR	6620426	Argument	( size_t ) n		6620348	2					
ANR	6620427	CastExpression	( size_t ) n		6620348	0					
ANR	6620428	CastTarget	size_t		6620348	0					
ANR	6620429	Identifier	n		6620348	1					
ANR	6620430	Argument	ft		6620348	3					
ANR	6620431	Identifier	ft		6620348	0					
ANR	6620432	CastExpression	( size_t ) n		6620348	1					
ANR	6620433	CastTarget	size_t		6620348	0					
ANR	6620434	Identifier	n		6620348	1					
ANR	6620435	CompoundStatement		13:49:281:281	6620348	1					
ANR	6620436	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"	501:5:12660:12707	6620348	0	True				
ANR	6620437	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"		6620348	0					
ANR	6620438	Callee	_zip_error_set		6620348	0					
ANR	6620439	Identifier	_zip_error_set		6620348	0					
ANR	6620440	ArgumentList	& za -> error		6620348	1					
ANR	6620441	Argument	& za -> error		6620348	0					
ANR	6620442	UnaryOperationExpression	& za -> error		6620348	0					
ANR	6620443	UnaryOperator	&		6620348	0					
ANR	6620444	PtrMemberAccess	za -> error		6620348	1					
ANR	6620445	Identifier	za		6620348	0					
ANR	6620446	Identifier	error		6620348	1					
ANR	6620447	Argument	ZIP_ER_WRITE		6620348	1					
ANR	6620448	Identifier	ZIP_ER_WRITE		6620348	0					
ANR	6620449	Argument	errno		6620348	2					
ANR	6620450	Identifier	errno		6620348	0					
ANR	6620451	ExpressionStatement	ret = - 1	502:5:12714:12722	6620348	1	True				
ANR	6620452	AssignmentExpression	ret = - 1		6620348	0		=			
ANR	6620453	Identifier	ret		6620348	0					
ANR	6620454	UnaryOperationExpression	- 1		6620348	1					
ANR	6620455	UnaryOperator	-		6620348	0					
ANR	6620456	PrimaryExpression	1		6620348	1					
ANR	6620457	BreakStatement	break ;	503:5:12729:12734	6620348	2	True				
ANR	6620458	IfStatement	if ( n < 0 )		6620348	6					
ANR	6620459	Condition	n < 0	507:8:12754:12758	6620348	0	True				
ANR	6620460	RelationalExpression	n < 0		6620348	0		<			
ANR	6620461	Identifier	n		6620348	0					
ANR	6620462	PrimaryExpression	0		6620348	1					
ANR	6620463	CompoundStatement		20:15:389:389	6620348	1					
ANR	6620464	IfStatement	if ( ret == 0 )		6620348	0					
ANR	6620465	Condition	ret == 0	508:5:12768:12775	6620348	0	True				
ANR	6620466	EqualityExpression	ret == 0		6620348	0		==			
ANR	6620467	Identifier	ret		6620348	0					
ANR	6620468	PrimaryExpression	0		6620348	1					
ANR	6620469	ExpressionStatement	"_zip_error_set_from_source ( & za -> error , src )"	509:5:12783:12826	6620348	1	True				
ANR	6620470	CallExpression	"_zip_error_set_from_source ( & za -> error , src )"		6620348	0					
ANR	6620471	Callee	_zip_error_set_from_source		6620348	0					
ANR	6620472	Identifier	_zip_error_set_from_source		6620348	0					
ANR	6620473	ArgumentList	& za -> error		6620348	1					
ANR	6620474	Argument	& za -> error		6620348	0					
ANR	6620475	UnaryOperationExpression	& za -> error		6620348	0					
ANR	6620476	UnaryOperator	&		6620348	0					
ANR	6620477	PtrMemberAccess	za -> error		6620348	1					
ANR	6620478	Identifier	za		6620348	0					
ANR	6620479	Identifier	error		6620348	1					
ANR	6620480	Argument	src		6620348	1					
ANR	6620481	Identifier	src		6620348	0					
ANR	6620482	ExpressionStatement	ret = - 1	510:1:12829:12837	6620348	1	True				
ANR	6620483	AssignmentExpression	ret = - 1		6620348	0		=			
ANR	6620484	Identifier	ret		6620348	0					
ANR	6620485	UnaryOperationExpression	- 1		6620348	1					
ANR	6620486	UnaryOperator	-		6620348	0					
ANR	6620487	PrimaryExpression	1		6620348	1					
ANR	6620488	ExpressionStatement	zip_source_close ( src )	513:4:12851:12872	6620348	7	True				
ANR	6620489	CallExpression	zip_source_close ( src )		6620348	0					
ANR	6620490	Callee	zip_source_close		6620348	0					
ANR	6620491	Identifier	zip_source_close		6620348	0					
ANR	6620492	ArgumentList	src		6620348	1					
ANR	6620493	Argument	src		6620348	0					
ANR	6620494	Identifier	src		6620348	0					
ANR	6620495	ReturnStatement	return ret ;	515:4:12879:12889	6620348	8	True				
ANR	6620496	Identifier	ret		6620348	0					
ANR	6620497	ReturnType	static int		6620348	1					
ANR	6620498	Identifier	copy_source		6620348	2					
ANR	6620499	ParameterList	"struct zip * za , struct zip_source * src , FILE * ft"		6620348	3					
ANR	6620500	Parameter	struct zip * za	487:12:12321:12334	6620348	0	True				
ANR	6620501	ParameterType	struct zip *		6620348	0					
ANR	6620502	Identifier	za		6620348	1					
ANR	6620503	Parameter	struct zip_source * src	487:28:12337:12358	6620348	1	True				
ANR	6620504	ParameterType	struct zip_source *		6620348	0					
ANR	6620505	Identifier	src		6620348	1					
ANR	6620506	Parameter	FILE * ft	487:52:12361:12368	6620348	2	True				
ANR	6620507	ParameterType	FILE *		6620348	0					
ANR	6620508	Identifier	ft		6620348	1					
ANR	6620509	CFGEntryNode	ENTRY		6620348		True				
ANR	6620510	CFGExitNode	EXIT		6620348		True				
ANR	6620511	Symbol	ret		6620348						
ANR	6620512	Symbol	buf		6620348						
ANR	6620513	Symbol	errno		6620348						
ANR	6620514	Symbol	src		6620348						
ANR	6620515	Symbol	& za -> error		6620348						
ANR	6620516	Symbol	za		6620348						
ANR	6620517	Symbol	zip_source_read		6620348						
ANR	6620518	Symbol	zip_source_open		6620348						
ANR	6620519	Symbol	fwrite		6620348						
ANR	6620520	Symbol	ZIP_ER_WRITE		6620348						
ANR	6620521	Symbol	ft		6620348						
ANR	6620522	Symbol	n		6620348						
ANR	6620523	Function	write_cdir	520:0:12897:13781							
ANR	6620524	FunctionDef	"write_cdir (struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * out)"		6620523	0					
ANR	6620525	CompoundStatement		522:0:13007:13781	6620523	0					
ANR	6620526	IdentifierDeclStatement	"off_t cd_start , end ;"	523:4:13013:13032	6620523	0	True				
ANR	6620527	IdentifierDecl	cd_start		6620523	0					
ANR	6620528	IdentifierDeclType	off_t		6620523	0					
ANR	6620529	Identifier	cd_start		6620523	1					
ANR	6620530	IdentifierDecl	end		6620523	1					
ANR	6620531	IdentifierDeclType	off_t		6620523	0					
ANR	6620532	Identifier	end		6620523	1					
ANR	6620533	IdentifierDeclStatement	zip_int64_t size ;	524:4:13038:13054	6620523	1	True				
ANR	6620534	IdentifierDecl	size		6620523	0					
ANR	6620535	IdentifierDeclType	zip_int64_t		6620523	0					
ANR	6620536	Identifier	size		6620523	1					
ANR	6620537	IdentifierDeclStatement	uLong crc ;	525:4:13060:13069	6620523	2	True				
ANR	6620538	IdentifierDecl	crc		6620523	0					
ANR	6620539	IdentifierDeclType	uLong		6620523	0					
ANR	6620540	Identifier	crc		6620523	1					
ANR	6620541	IdentifierDeclStatement	char buf [ TORRENT_CRC_LEN + 1 ] ;	526:4:13075:13102	6620523	3	True				
ANR	6620542	IdentifierDecl	buf [ TORRENT_CRC_LEN + 1 ]		6620523	0					
ANR	6620543	IdentifierDeclType	char [ TORRENT_CRC_LEN + 1 ]		6620523	0					
ANR	6620544	Identifier	buf		6620523	1					
ANR	6620545	AdditiveExpression	TORRENT_CRC_LEN + 1		6620523	2		+			
ANR	6620546	Identifier	TORRENT_CRC_LEN		6620523	0					
ANR	6620547	PrimaryExpression	1		6620523	1					
ANR	6620548	ExpressionStatement	cd_start = ftello ( out )	528:4:13109:13131	6620523	4	True				
ANR	6620549	AssignmentExpression	cd_start = ftello ( out )		6620523	0		=			
ANR	6620550	Identifier	cd_start		6620523	0					
ANR	6620551	CallExpression	ftello ( out )		6620523	1					
ANR	6620552	Callee	ftello		6620523	0					
ANR	6620553	Identifier	ftello		6620523	0					
ANR	6620554	ArgumentList	out		6620523	1					
ANR	6620555	Argument	out		6620523	0					
ANR	6620556	Identifier	out		6620523	0					
ANR	6620557	IfStatement	if ( cd_start < 0 )		6620523	5					
ANR	6620558	Condition	cd_start < 0	529:5:13138:13149	6620523	0	True				
ANR	6620559	RelationalExpression	cd_start < 0		6620523	0		<			
ANR	6620560	Identifier	cd_start		6620523	0					
ANR	6620561	PrimaryExpression	0		6620523	1					
ANR	6620562	ReturnStatement	return - 1 ;	530:2:13154:13163	6620523	1	True				
ANR	6620563	UnaryOperationExpression	- 1		6620523	0					
ANR	6620564	UnaryOperator	-		6620523	0					
ANR	6620565	PrimaryExpression	1		6620523	1					
ANR	6620566	IfStatement	"if ( ( size = _zip_cdir_write ( za , filelist , survivors , out ) ) < 0 )"		6620523	6					
ANR	6620567	Condition	"( size = _zip_cdir_write ( za , filelist , survivors , out ) ) < 0"	532:8:13174:13229	6620523	0	True				
ANR	6620568	RelationalExpression	"( size = _zip_cdir_write ( za , filelist , survivors , out ) ) < 0"		6620523	0		<			
ANR	6620569	AssignmentExpression	"size = _zip_cdir_write ( za , filelist , survivors , out )"		6620523	0		=			
ANR	6620570	Identifier	size		6620523	0					
ANR	6620571	CallExpression	"_zip_cdir_write ( za , filelist , survivors , out )"		6620523	1					
ANR	6620572	Callee	_zip_cdir_write		6620523	0					
ANR	6620573	Identifier	_zip_cdir_write		6620523	0					
ANR	6620574	ArgumentList	za		6620523	1					
ANR	6620575	Argument	za		6620523	0					
ANR	6620576	Identifier	za		6620523	0					
ANR	6620577	Argument	filelist		6620523	1					
ANR	6620578	Identifier	filelist		6620523	0					
ANR	6620579	Argument	survivors		6620523	2					
ANR	6620580	Identifier	survivors		6620523	0					
ANR	6620581	Argument	out		6620523	3					
ANR	6620582	Identifier	out		6620523	0					
ANR	6620583	PrimaryExpression	0		6620523	1					
ANR	6620584	ReturnStatement	return - 1 ;	533:1:13233:13242	6620523	1	True				
ANR	6620585	UnaryOperationExpression	- 1		6620523	0					
ANR	6620586	UnaryOperator	-		6620523	0					
ANR	6620587	PrimaryExpression	1		6620523	1					
ANR	6620588	ExpressionStatement	end = ftello ( out )	535:4:13253:13270	6620523	7	True				
ANR	6620589	AssignmentExpression	end = ftello ( out )		6620523	0		=			
ANR	6620590	Identifier	end		6620523	0					
ANR	6620591	CallExpression	ftello ( out )		6620523	1					
ANR	6620592	Callee	ftello		6620523	0					
ANR	6620593	Identifier	ftello		6620523	0					
ANR	6620594	ArgumentList	out		6620523	1					
ANR	6620595	Argument	out		6620523	0					
ANR	6620596	Identifier	out		6620523	0					
ANR	6620597	IfStatement	"if ( zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 0 )"		6620523	8					
ANR	6620598	Condition	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 0"	537:8:13281:13329	6620523	0	True				
ANR	6620599	EqualityExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 ) == 0"		6620523	0		==			
ANR	6620600	CallExpression	"zip_get_archive_flag ( za , ZIP_AFL_TORRENT , 0 )"		6620523	0					
ANR	6620601	Callee	zip_get_archive_flag		6620523	0					
ANR	6620602	Identifier	zip_get_archive_flag		6620523	0					
ANR	6620603	ArgumentList	za		6620523	1					
ANR	6620604	Argument	za		6620523	0					
ANR	6620605	Identifier	za		6620523	0					
ANR	6620606	Argument	ZIP_AFL_TORRENT		6620523	1					
ANR	6620607	Identifier	ZIP_AFL_TORRENT		6620523	0					
ANR	6620608	Argument	0		6620523	2					
ANR	6620609	PrimaryExpression	0		6620523	0					
ANR	6620610	PrimaryExpression	0		6620523	1					
ANR	6620611	ReturnStatement	return 0 ;	538:1:13333:13341	6620523	1	True				
ANR	6620612	PrimaryExpression	0		6620523	0					
ANR	6620613	IfStatement	"if ( _zip_filerange_crc ( out , cd_start , size , & crc , & za -> error ) < 0 )"		6620523	9					
ANR	6620614	Condition	"_zip_filerange_crc ( out , cd_start , size , & crc , & za -> error ) < 0"	543:8:13390:13450	6620523	0	True				
ANR	6620615	RelationalExpression	"_zip_filerange_crc ( out , cd_start , size , & crc , & za -> error ) < 0"		6620523	0		<			
ANR	6620616	CallExpression	"_zip_filerange_crc ( out , cd_start , size , & crc , & za -> error )"		6620523	0					
ANR	6620617	Callee	_zip_filerange_crc		6620523	0					
ANR	6620618	Identifier	_zip_filerange_crc		6620523	0					
ANR	6620619	ArgumentList	out		6620523	1					
ANR	6620620	Argument	out		6620523	0					
ANR	6620621	Identifier	out		6620523	0					
ANR	6620622	Argument	cd_start		6620523	1					
ANR	6620623	Identifier	cd_start		6620523	0					
ANR	6620624	Argument	size		6620523	2					
ANR	6620625	Identifier	size		6620523	0					
ANR	6620626	Argument	& crc		6620523	3					
ANR	6620627	UnaryOperationExpression	& crc		6620523	0					
ANR	6620628	UnaryOperator	&		6620523	0					
ANR	6620629	Identifier	crc		6620523	1					
ANR	6620630	Argument	& za -> error		6620523	4					
ANR	6620631	UnaryOperationExpression	& za -> error		6620523	0					
ANR	6620632	UnaryOperator	&		6620523	0					
ANR	6620633	PtrMemberAccess	za -> error		6620523	1					
ANR	6620634	Identifier	za		6620523	0					
ANR	6620635	Identifier	error		6620523	1					
ANR	6620636	PrimaryExpression	0		6620523	1					
ANR	6620637	ReturnStatement	return - 1 ;	544:1:13454:13463	6620523	1	True				
ANR	6620638	UnaryOperationExpression	- 1		6620523	0					
ANR	6620639	UnaryOperator	-		6620523	0					
ANR	6620640	PrimaryExpression	1		6620523	1					
ANR	6620641	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) , ""%08lX"" , ( long ) crc )"	546:4:13470:13516	6620523	10	True				
ANR	6620642	CallExpression	"snprintf ( buf , sizeof ( buf ) , ""%08lX"" , ( long ) crc )"		6620523	0					
ANR	6620643	Callee	snprintf		6620523	0					
ANR	6620644	Identifier	snprintf		6620523	0					
ANR	6620645	ArgumentList	buf		6620523	1					
ANR	6620646	Argument	buf		6620523	0					
ANR	6620647	Identifier	buf		6620523	0					
ANR	6620648	Argument	sizeof ( buf )		6620523	1					
ANR	6620649	SizeofExpression	sizeof ( buf )		6620523	0					
ANR	6620650	Sizeof	sizeof		6620523	0					
ANR	6620651	SizeofOperand	buf		6620523	1					
ANR	6620652	Argument	"""%08lX"""		6620523	2					
ANR	6620653	PrimaryExpression	"""%08lX"""		6620523	0					
ANR	6620654	Argument	( long ) crc		6620523	3					
ANR	6620655	CastExpression	( long ) crc		6620523	0					
ANR	6620656	CastTarget	long		6620523	0					
ANR	6620657	Identifier	crc		6620523	1					
ANR	6620658	IfStatement	"if ( fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET ) < 0 )"		6620523	11					
ANR	6620659	Condition	"fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET ) < 0"	548:8:13527:13572	6620523	0	True				
ANR	6620660	RelationalExpression	"fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET ) < 0"		6620523	0		<			
ANR	6620661	CallExpression	"fseeko ( out , end - TORRENT_CRC_LEN , SEEK_SET )"		6620523	0					
ANR	6620662	Callee	fseeko		6620523	0					
ANR	6620663	Identifier	fseeko		6620523	0					
ANR	6620664	ArgumentList	out		6620523	1					
ANR	6620665	Argument	out		6620523	0					
ANR	6620666	Identifier	out		6620523	0					
ANR	6620667	Argument	end - TORRENT_CRC_LEN		6620523	1					
ANR	6620668	AdditiveExpression	end - TORRENT_CRC_LEN		6620523	0		-			
ANR	6620669	Identifier	end		6620523	0					
ANR	6620670	Identifier	TORRENT_CRC_LEN		6620523	1					
ANR	6620671	Argument	SEEK_SET		6620523	2					
ANR	6620672	Identifier	SEEK_SET		6620523	0					
ANR	6620673	PrimaryExpression	0		6620523	1					
ANR	6620674	CompoundStatement		27:56:567:567	6620523	1					
ANR	6620675	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"	549:1:13578:13624	6620523	0	True				
ANR	6620676	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_SEEK , errno )"		6620523	0					
ANR	6620677	Callee	_zip_error_set		6620523	0					
ANR	6620678	Identifier	_zip_error_set		6620523	0					
ANR	6620679	ArgumentList	& za -> error		6620523	1					
ANR	6620680	Argument	& za -> error		6620523	0					
ANR	6620681	UnaryOperationExpression	& za -> error		6620523	0					
ANR	6620682	UnaryOperator	&		6620523	0					
ANR	6620683	PtrMemberAccess	za -> error		6620523	1					
ANR	6620684	Identifier	za		6620523	0					
ANR	6620685	Identifier	error		6620523	1					
ANR	6620686	Argument	ZIP_ER_SEEK		6620523	1					
ANR	6620687	Identifier	ZIP_ER_SEEK		6620523	0					
ANR	6620688	Argument	errno		6620523	2					
ANR	6620689	Identifier	errno		6620523	0					
ANR	6620690	ReturnStatement	return - 1 ;	550:1:13627:13636	6620523	1	True				
ANR	6620691	UnaryOperationExpression	- 1		6620523	0					
ANR	6620692	UnaryOperator	-		6620523	0					
ANR	6620693	PrimaryExpression	1		6620523	1					
ANR	6620694	IfStatement	"if ( fwrite ( buf , TORRENT_CRC_LEN , 1 , out ) != 1 )"		6620523	12					
ANR	6620695	Condition	"fwrite ( buf , TORRENT_CRC_LEN , 1 , out ) != 1"	553:8:13653:13693	6620523	0	True				
ANR	6620696	EqualityExpression	"fwrite ( buf , TORRENT_CRC_LEN , 1 , out ) != 1"		6620523	0		!=			
ANR	6620697	CallExpression	"fwrite ( buf , TORRENT_CRC_LEN , 1 , out )"		6620523	0					
ANR	6620698	Callee	fwrite		6620523	0					
ANR	6620699	Identifier	fwrite		6620523	0					
ANR	6620700	ArgumentList	buf		6620523	1					
ANR	6620701	Argument	buf		6620523	0					
ANR	6620702	Identifier	buf		6620523	0					
ANR	6620703	Argument	TORRENT_CRC_LEN		6620523	1					
ANR	6620704	Identifier	TORRENT_CRC_LEN		6620523	0					
ANR	6620705	Argument	1		6620523	2					
ANR	6620706	PrimaryExpression	1		6620523	0					
ANR	6620707	Argument	out		6620523	3					
ANR	6620708	Identifier	out		6620523	0					
ANR	6620709	PrimaryExpression	1		6620523	1					
ANR	6620710	CompoundStatement		32:51:688:688	6620523	1					
ANR	6620711	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"	554:1:13699:13746	6620523	0	True				
ANR	6620712	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_WRITE , errno )"		6620523	0					
ANR	6620713	Callee	_zip_error_set		6620523	0					
ANR	6620714	Identifier	_zip_error_set		6620523	0					
ANR	6620715	ArgumentList	& za -> error		6620523	1					
ANR	6620716	Argument	& za -> error		6620523	0					
ANR	6620717	UnaryOperationExpression	& za -> error		6620523	0					
ANR	6620718	UnaryOperator	&		6620523	0					
ANR	6620719	PtrMemberAccess	za -> error		6620523	1					
ANR	6620720	Identifier	za		6620523	0					
ANR	6620721	Identifier	error		6620523	1					
ANR	6620722	Argument	ZIP_ER_WRITE		6620523	1					
ANR	6620723	Identifier	ZIP_ER_WRITE		6620523	0					
ANR	6620724	Argument	errno		6620523	2					
ANR	6620725	Identifier	errno		6620523	0					
ANR	6620726	ReturnStatement	return - 1 ;	555:1:13749:13758	6620523	1	True				
ANR	6620727	UnaryOperationExpression	- 1		6620523	0					
ANR	6620728	UnaryOperator	-		6620523	0					
ANR	6620729	PrimaryExpression	1		6620523	1					
ANR	6620730	ReturnStatement	return 0 ;	558:4:13771:13779	6620523	13	True				
ANR	6620731	PrimaryExpression	0		6620523	0					
ANR	6620732	ReturnType	static int		6620523	1					
ANR	6620733	Identifier	write_cdir		6620523	2					
ANR	6620734	ParameterList	"struct zip * za , const struct zip_filelist * filelist , zip_uint64_t survivors , FILE * out"		6620523	3					
ANR	6620735	Parameter	struct zip * za	521:11:12919:12932	6620523	0	True				
ANR	6620736	ParameterType	struct zip *		6620523	0					
ANR	6620737	Identifier	za		6620523	1					
ANR	6620738	Parameter	const struct zip_filelist * filelist	521:27:12935:12969	6620523	1	True				
ANR	6620739	ParameterType	const struct zip_filelist *		6620523	0					
ANR	6620740	Identifier	filelist		6620523	1					
ANR	6620741	Parameter	zip_uint64_t survivors	521:64:12972:12993	6620523	2	True				
ANR	6620742	ParameterType	zip_uint64_t		6620523	0					
ANR	6620743	Identifier	survivors		6620523	1					
ANR	6620744	Parameter	FILE * out	521:88:12996:13004	6620523	3	True				
ANR	6620745	ParameterType	FILE *		6620523	0					
ANR	6620746	Identifier	out		6620523	1					
ANR	6620747	CFGEntryNode	ENTRY		6620523		True				
ANR	6620748	CFGExitNode	EXIT		6620523		True				
ANR	6620749	Symbol	SEEK_SET		6620523						
ANR	6620750	Symbol	errno		6620523						
ANR	6620751	Symbol	fseeko		6620523						
ANR	6620752	Symbol	& za -> error		6620523						
ANR	6620753	Symbol	za		6620523						
ANR	6620754	Symbol	zip_get_archive_flag		6620523						
ANR	6620755	Symbol	filelist		6620523						
ANR	6620756	Symbol	fwrite		6620523						
ANR	6620757	Symbol	ZIP_ER_SEEK		6620523						
ANR	6620758	Symbol	ZIP_ER_WRITE		6620523						
ANR	6620759	Symbol	_zip_filerange_crc		6620523						
ANR	6620760	Symbol	cd_start		6620523						
ANR	6620761	Symbol	out		6620523						
ANR	6620762	Symbol	ZIP_AFL_TORRENT		6620523						
ANR	6620763	Symbol	buf		6620523						
ANR	6620764	Symbol	_zip_cdir_write		6620523						
ANR	6620765	Symbol	size		6620523						
ANR	6620766	Symbol	survivors		6620523						
ANR	6620767	Symbol	crc		6620523						
ANR	6620768	Symbol	ftello		6620523						
ANR	6620769	Symbol	TORRENT_CRC_LEN		6620523						
ANR	6620770	Symbol	end		6620523						
ANR	6620771	Symbol	& crc		6620523						
ANR	6620772	Function	_zip_changed	563:0:13787:14300							
ANR	6620773	FunctionDef	"_zip_changed (const struct zip * za , zip_uint64_t * survivorsp)"		6620772	0					
ANR	6620774	CompoundStatement		565:0:13852:14300	6620772	0					
ANR	6620775	IdentifierDeclStatement	int changed ;	566:4:13858:13869	6620772	0	True				
ANR	6620776	IdentifierDecl	changed		6620772	0					
ANR	6620777	IdentifierDeclType	int		6620772	0					
ANR	6620778	Identifier	changed		6620772	1					
ANR	6620779	IdentifierDeclStatement	"zip_uint64_t i , survivors ;"	567:4:13875:13900	6620772	1	True				
ANR	6620780	IdentifierDecl	i		6620772	0					
ANR	6620781	IdentifierDeclType	zip_uint64_t		6620772	0					
ANR	6620782	Identifier	i		6620772	1					
ANR	6620783	IdentifierDecl	survivors		6620772	1					
ANR	6620784	IdentifierDeclType	zip_uint64_t		6620772	0					
ANR	6620785	Identifier	survivors		6620772	1					
ANR	6620786	ExpressionStatement	changed = 0	569:4:13907:13918	6620772	2	True				
ANR	6620787	AssignmentExpression	changed = 0		6620772	0		=			
ANR	6620788	Identifier	changed		6620772	0					
ANR	6620789	PrimaryExpression	0		6620772	1					
ANR	6620790	ExpressionStatement	survivors = 0	570:4:13924:13937	6620772	3	True				
ANR	6620791	AssignmentExpression	survivors = 0		6620772	0		=			
ANR	6620792	Identifier	survivors		6620772	0					
ANR	6620793	PrimaryExpression	0		6620772	1					
ANR	6620794	IfStatement	if ( za -> comment_changed || za -> ch_flags != za -> flags )		6620772	4					
ANR	6620795	Condition	za -> comment_changed || za -> ch_flags != za -> flags	572:8:13948:13995	6620772	0	True				
ANR	6620796	OrExpression	za -> comment_changed || za -> ch_flags != za -> flags		6620772	0		||			
ANR	6620797	PtrMemberAccess	za -> comment_changed		6620772	0					
ANR	6620798	Identifier	za		6620772	0					
ANR	6620799	Identifier	comment_changed		6620772	1					
ANR	6620800	EqualityExpression	za -> ch_flags != za -> flags		6620772	1		!=			
ANR	6620801	PtrMemberAccess	za -> ch_flags		6620772	0					
ANR	6620802	Identifier	za		6620772	0					
ANR	6620803	Identifier	ch_flags		6620772	1					
ANR	6620804	PtrMemberAccess	za -> flags		6620772	1					
ANR	6620805	Identifier	za		6620772	0					
ANR	6620806	Identifier	flags		6620772	1					
ANR	6620807	ExpressionStatement	changed = 1	573:1:13999:14010	6620772	1	True				
ANR	6620808	AssignmentExpression	changed = 1		6620772	0		=			
ANR	6620809	Identifier	changed		6620772	0					
ANR	6620810	PrimaryExpression	1		6620772	1					
ANR	6620811	ForStatement	for ( i = 0 ; i < za -> nentry ; i ++ )		6620772	5					
ANR	6620812	ForInit	i = 0 ;	575:9:14022:14025	6620772	0	True				
ANR	6620813	AssignmentExpression	i = 0		6620772	0		=			
ANR	6620814	Identifier	i		6620772	0					
ANR	6620815	PrimaryExpression	0		6620772	1					
ANR	6620816	Condition	i < za -> nentry	575:14:14027:14038	6620772	1	True				
ANR	6620817	RelationalExpression	i < za -> nentry		6620772	0		<			
ANR	6620818	Identifier	i		6620772	0					
ANR	6620819	PtrMemberAccess	za -> nentry		6620772	1					
ANR	6620820	Identifier	za		6620772	0					
ANR	6620821	Identifier	nentry		6620772	1					
ANR	6620822	PostIncDecOperationExpression	i ++	575:28:14041:14043	6620772	2	True				
ANR	6620823	Identifier	i		6620772	0					
ANR	6620824	IncDec	++		6620772	1					
ANR	6620825	CompoundStatement		11:33:193:193	6620772	3					
ANR	6620826	IfStatement	if ( za -> entry [ i ] . deleted || za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 ) )		6620772	0					
ANR	6620827	Condition	za -> entry [ i ] . deleted || za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 )	576:5:14053:14159	6620772	0	True				
ANR	6620828	OrExpression	za -> entry [ i ] . deleted || za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 )		6620772	0		||			
ANR	6620829	MemberAccess	za -> entry [ i ] . deleted		6620772	0					
ANR	6620830	ArrayIndexing	za -> entry [ i ]		6620772	0					
ANR	6620831	PtrMemberAccess	za -> entry		6620772	0					
ANR	6620832	Identifier	za		6620772	0					
ANR	6620833	Identifier	entry		6620772	1					
ANR	6620834	Identifier	i		6620772	1					
ANR	6620835	Identifier	deleted		6620772	1					
ANR	6620836	OrExpression	za -> entry [ i ] . source || ( za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0 )		6620772	1		||			
ANR	6620837	MemberAccess	za -> entry [ i ] . source		6620772	0					
ANR	6620838	ArrayIndexing	za -> entry [ i ]		6620772	0					
ANR	6620839	PtrMemberAccess	za -> entry		6620772	0					
ANR	6620840	Identifier	za		6620772	0					
ANR	6620841	Identifier	entry		6620772	1					
ANR	6620842	Identifier	i		6620772	1					
ANR	6620843	Identifier	source		6620772	1					
ANR	6620844	AndExpression	za -> entry [ i ] . changes && za -> entry [ i ] . changes -> changed != 0		6620772	1		&&			
ANR	6620845	MemberAccess	za -> entry [ i ] . changes		6620772	0					
ANR	6620846	ArrayIndexing	za -> entry [ i ]		6620772	0					
ANR	6620847	PtrMemberAccess	za -> entry		6620772	0					
ANR	6620848	Identifier	za		6620772	0					
ANR	6620849	Identifier	entry		6620772	1					
ANR	6620850	Identifier	i		6620772	1					
ANR	6620851	Identifier	changes		6620772	1					
ANR	6620852	EqualityExpression	za -> entry [ i ] . changes -> changed != 0		6620772	1		!=			
ANR	6620853	PtrMemberAccess	za -> entry [ i ] . changes -> changed		6620772	0					
ANR	6620854	MemberAccess	za -> entry [ i ] . changes		6620772	0					
ANR	6620855	ArrayIndexing	za -> entry [ i ]		6620772	0					
ANR	6620856	PtrMemberAccess	za -> entry		6620772	0					
ANR	6620857	Identifier	za		6620772	0					
ANR	6620858	Identifier	entry		6620772	1					
ANR	6620859	Identifier	i		6620772	1					
ANR	6620860	Identifier	changes		6620772	1					
ANR	6620861	Identifier	changed		6620772	1					
ANR	6620862	PrimaryExpression	0		6620772	1					
ANR	6620863	ExpressionStatement	changed = 1	577:5:14167:14178	6620772	1	True				
ANR	6620864	AssignmentExpression	changed = 1		6620772	0		=			
ANR	6620865	Identifier	changed		6620772	0					
ANR	6620866	PrimaryExpression	1		6620772	1					
ANR	6620867	IfStatement	if ( ! za -> entry [ i ] . deleted )		6620772	1					
ANR	6620868	Condition	! za -> entry [ i ] . deleted	578:5:14185:14205	6620772	0	True				
ANR	6620869	UnaryOperationExpression	! za -> entry [ i ] . deleted		6620772	0					
ANR	6620870	UnaryOperator	!		6620772	0					
ANR	6620871	MemberAccess	za -> entry [ i ] . deleted		6620772	1					
ANR	6620872	ArrayIndexing	za -> entry [ i ]		6620772	0					
ANR	6620873	PtrMemberAccess	za -> entry		6620772	0					
ANR	6620874	Identifier	za		6620772	0					
ANR	6620875	Identifier	entry		6620772	1					
ANR	6620876	Identifier	i		6620772	1					
ANR	6620877	Identifier	deleted		6620772	1					
ANR	6620878	ExpressionStatement	survivors ++	579:5:14213:14224	6620772	1	True				
ANR	6620879	PostIncDecOperationExpression	survivors ++		6620772	0					
ANR	6620880	Identifier	survivors		6620772	0					
ANR	6620881	IncDec	++		6620772	1					
ANR	6620882	IfStatement	if ( survivorsp )		6620772	6					
ANR	6620883	Condition	survivorsp	582:8:14241:14250	6620772	0	True				
ANR	6620884	Identifier	survivorsp		6620772	0					
ANR	6620885	ExpressionStatement	* survivorsp = survivors	583:1:14254:14277	6620772	1	True				
ANR	6620886	AssignmentExpression	* survivorsp = survivors		6620772	0		=			
ANR	6620887	UnaryOperationExpression	* survivorsp		6620772	0					
ANR	6620888	UnaryOperator	*		6620772	0					
ANR	6620889	Identifier	survivorsp		6620772	1					
ANR	6620890	Identifier	survivors		6620772	1					
ANR	6620891	ReturnStatement	return changed ;	585:4:14284:14298	6620772	7	True				
ANR	6620892	Identifier	changed		6620772	0					
ANR	6620893	ReturnType	int		6620772	1					
ANR	6620894	Identifier	_zip_changed		6620772	2					
ANR	6620895	ParameterList	"const struct zip * za , zip_uint64_t * survivorsp"		6620772	3					
ANR	6620896	Parameter	const struct zip * za	564:13:13804:13823	6620772	0	True				
ANR	6620897	ParameterType	const struct zip *		6620772	0					
ANR	6620898	Identifier	za		6620772	1					
ANR	6620899	Parameter	zip_uint64_t * survivorsp	564:35:13826:13849	6620772	1	True				
ANR	6620900	ParameterType	zip_uint64_t *		6620772	0					
ANR	6620901	Identifier	survivorsp		6620772	1					
ANR	6620902	CFGEntryNode	ENTRY		6620772		True				
ANR	6620903	CFGExitNode	EXIT		6620772		True				
ANR	6620904	Symbol	za -> comment_changed		6620772						
ANR	6620905	Symbol	* * i		6620772						
ANR	6620906	Symbol	za -> entry [ i ] . deleted		6620772						
ANR	6620907	Symbol	za		6620772						
ANR	6620908	Symbol	* za -> entry [ i ] . changes		6620772						
ANR	6620909	Symbol	za -> entry		6620772						
ANR	6620910	Symbol	i		6620772						
ANR	6620911	Symbol	za -> entry [ i ] . changes		6620772						
ANR	6620912	Symbol	za -> entry [ i ] . changes -> changed		6620772						
ANR	6620913	Symbol	* survivorsp		6620772						
ANR	6620914	Symbol	* za		6620772						
ANR	6620915	Symbol	* za -> entry		6620772						
ANR	6620916	Symbol	za -> flags		6620772						
ANR	6620917	Symbol	* * za -> entry		6620772						
ANR	6620918	Symbol	* * za		6620772						
ANR	6620919	Symbol	* i		6620772						
ANR	6620920	Symbol	* * * za		6620772						
ANR	6620921	Symbol	za -> nentry		6620772						
ANR	6620922	Symbol	survivors		6620772						
ANR	6620923	Symbol	survivorsp		6620772						
ANR	6620924	Symbol	za -> ch_flags		6620772						
ANR	6620925	Symbol	za -> entry [ i ] . source		6620772						
ANR	6620926	Symbol	changed		6620772						
ANR	6620927	Function	_zip_create_temp_output	590:0:14306:15659							
ANR	6620928	FunctionDef	"_zip_create_temp_output (struct zip * za , FILE * * outp)"		6620927	0					
ANR	6620929	CompoundStatement		592:0:14373:15659	6620927	0					
ANR	6620930	IdentifierDeclStatement	char * temp ;	593:4:14379:14389	6620927	0	True				
ANR	6620931	IdentifierDecl	* temp		6620927	0					
ANR	6620932	IdentifierDeclType	char *		6620927	0					
ANR	6620933	Identifier	temp		6620927	1					
ANR	6620934	IdentifierDeclStatement	int tfd ;	594:4:14395:14402	6620927	1	True				
ANR	6620935	IdentifierDecl	tfd		6620927	0					
ANR	6620936	IdentifierDeclType	int		6620927	0					
ANR	6620937	Identifier	tfd		6620927	1					
ANR	6620938	IdentifierDeclStatement	FILE * tfp ;	595:4:14408:14417	6620927	2	True				
ANR	6620939	IdentifierDecl	* tfp		6620927	0					
ANR	6620940	IdentifierDeclType	FILE *		6620927	0					
ANR	6620941	Identifier	tfp		6620927	1					
ANR	6620942	IfStatement	if ( za -> tempdir )		6620927	3					
ANR	6620943	Condition	za -> tempdir	597:8:14428:14438	6620927	0	True				
ANR	6620944	PtrMemberAccess	za -> tempdir		6620927	0					
ANR	6620945	Identifier	za		6620927	0					
ANR	6620946	Identifier	tempdir		6620927	1					
ANR	6620947	CompoundStatement		6:21:67:67	6620927	1					
ANR	6620948	IfStatement	if ( ( temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 ) ) == NULL )		6620927	0					
ANR	6620949	Condition	( temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 ) ) == NULL	598:12:14455:14507	6620927	0	True				
ANR	6620950	EqualityExpression	( temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 ) ) == NULL		6620927	0		==			
ANR	6620951	AssignmentExpression	temp = ( char * ) malloc ( strlen ( za -> tempdir ) + 13 )		6620927	0		=			
ANR	6620952	Identifier	temp		6620927	0					
ANR	6620953	CastExpression	( char * ) malloc ( strlen ( za -> tempdir ) + 13 )		6620927	1					
ANR	6620954	CastTarget	char *		6620927	0					
ANR	6620955	CallExpression	malloc ( strlen ( za -> tempdir ) + 13 )		6620927	1					
ANR	6620956	Callee	malloc		6620927	0					
ANR	6620957	Identifier	malloc		6620927	0					
ANR	6620958	ArgumentList	strlen ( za -> tempdir ) + 13		6620927	1					
ANR	6620959	Argument	strlen ( za -> tempdir ) + 13		6620927	0					
ANR	6620960	AdditiveExpression	strlen ( za -> tempdir ) + 13		6620927	0		+			
ANR	6620961	CallExpression	strlen ( za -> tempdir )		6620927	0					
ANR	6620962	Callee	strlen		6620927	0					
ANR	6620963	Identifier	strlen		6620927	0					
ANR	6620964	ArgumentList	za -> tempdir		6620927	1					
ANR	6620965	Argument	za -> tempdir		6620927	0					
ANR	6620966	PtrMemberAccess	za -> tempdir		6620927	0					
ANR	6620967	Identifier	za		6620927	0					
ANR	6620968	Identifier	tempdir		6620927	1					
ANR	6620969	PrimaryExpression	13		6620927	1					
ANR	6620970	Identifier	NULL		6620927	1					
ANR	6620971	CompoundStatement		7:67:136:136	6620927	1					
ANR	6620972	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	599:12:14524:14568	6620927	0	True				
ANR	6620973	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6620927	0					
ANR	6620974	Callee	_zip_error_set		6620927	0					
ANR	6620975	Identifier	_zip_error_set		6620927	0					
ANR	6620976	ArgumentList	& za -> error		6620927	1					
ANR	6620977	Argument	& za -> error		6620927	0					
ANR	6620978	UnaryOperationExpression	& za -> error		6620927	0					
ANR	6620979	UnaryOperator	&		6620927	0					
ANR	6620980	PtrMemberAccess	za -> error		6620927	1					
ANR	6620981	Identifier	za		6620927	0					
ANR	6620982	Identifier	error		6620927	1					
ANR	6620983	Argument	ZIP_ER_MEMORY		6620927	1					
ANR	6620984	Identifier	ZIP_ER_MEMORY		6620927	0					
ANR	6620985	Argument	0		6620927	2					
ANR	6620986	PrimaryExpression	0		6620927	0					
ANR	6620987	ReturnStatement	return NULL ;	600:12:14582:14593	6620927	1	True				
ANR	6620988	Identifier	NULL		6620927	0					
ANR	6620989	ExpressionStatement	"sprintf ( temp , ""%s/.zip.XXXXXX"" , za -> tempdir )"	602:8:14613:14657	6620927	1	True				
ANR	6620990	CallExpression	"sprintf ( temp , ""%s/.zip.XXXXXX"" , za -> tempdir )"		6620927	0					
ANR	6620991	Callee	sprintf		6620927	0					
ANR	6620992	Identifier	sprintf		6620927	0					
ANR	6620993	ArgumentList	temp		6620927	1					
ANR	6620994	Argument	temp		6620927	0					
ANR	6620995	Identifier	temp		6620927	0					
ANR	6620996	Argument	"""%s/.zip.XXXXXX"""		6620927	1					
ANR	6620997	PrimaryExpression	"""%s/.zip.XXXXXX"""		6620927	0					
ANR	6620998	Argument	za -> tempdir		6620927	2					
ANR	6620999	PtrMemberAccess	za -> tempdir		6620927	0					
ANR	6621000	Identifier	za		6620927	0					
ANR	6621001	Identifier	tempdir		6620927	1					
ANR	6621002	ElseStatement	else		6620927	0					
ANR	6621003	CompoundStatement		13:9:300:300	6620927	0					
ANR	6621004	IfStatement	if ( ( temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 ) ) == NULL )		6620927	0					
ANR	6621005	Condition	( temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 ) ) == NULL	605:12:14688:14734	6620927	0	True				
ANR	6621006	EqualityExpression	( temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 ) ) == NULL		6620927	0		==			
ANR	6621007	AssignmentExpression	temp = ( char * ) malloc ( strlen ( za -> zn ) + 8 )		6620927	0		=			
ANR	6621008	Identifier	temp		6620927	0					
ANR	6621009	CastExpression	( char * ) malloc ( strlen ( za -> zn ) + 8 )		6620927	1					
ANR	6621010	CastTarget	char *		6620927	0					
ANR	6621011	CallExpression	malloc ( strlen ( za -> zn ) + 8 )		6620927	1					
ANR	6621012	Callee	malloc		6620927	0					
ANR	6621013	Identifier	malloc		6620927	0					
ANR	6621014	ArgumentList	strlen ( za -> zn ) + 8		6620927	1					
ANR	6621015	Argument	strlen ( za -> zn ) + 8		6620927	0					
ANR	6621016	AdditiveExpression	strlen ( za -> zn ) + 8		6620927	0		+			
ANR	6621017	CallExpression	strlen ( za -> zn )		6620927	0					
ANR	6621018	Callee	strlen		6620927	0					
ANR	6621019	Identifier	strlen		6620927	0					
ANR	6621020	ArgumentList	za -> zn		6620927	1					
ANR	6621021	Argument	za -> zn		6620927	0					
ANR	6621022	PtrMemberAccess	za -> zn		6620927	0					
ANR	6621023	Identifier	za		6620927	0					
ANR	6621024	Identifier	zn		6620927	1					
ANR	6621025	PrimaryExpression	8		6620927	1					
ANR	6621026	Identifier	NULL		6620927	1					
ANR	6621027	CompoundStatement		14:61:363:363	6620927	1					
ANR	6621028	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"	606:12:14751:14795	6620927	0	True				
ANR	6621029	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_MEMORY , 0 )"		6620927	0					
ANR	6621030	Callee	_zip_error_set		6620927	0					
ANR	6621031	Identifier	_zip_error_set		6620927	0					
ANR	6621032	ArgumentList	& za -> error		6620927	1					
ANR	6621033	Argument	& za -> error		6620927	0					
ANR	6621034	UnaryOperationExpression	& za -> error		6620927	0					
ANR	6621035	UnaryOperator	&		6620927	0					
ANR	6621036	PtrMemberAccess	za -> error		6620927	1					
ANR	6621037	Identifier	za		6620927	0					
ANR	6621038	Identifier	error		6620927	1					
ANR	6621039	Argument	ZIP_ER_MEMORY		6620927	1					
ANR	6621040	Identifier	ZIP_ER_MEMORY		6620927	0					
ANR	6621041	Argument	0		6620927	2					
ANR	6621042	PrimaryExpression	0		6620927	0					
ANR	6621043	ReturnStatement	return NULL ;	607:12:14809:14820	6620927	1	True				
ANR	6621044	Identifier	NULL		6620927	0					
ANR	6621045	ExpressionStatement	"sprintf ( temp , ""%s.XXXXXX"" , za -> zn )"	609:8:14840:14874	6620927	1	True				
ANR	6621046	CallExpression	"sprintf ( temp , ""%s.XXXXXX"" , za -> zn )"		6620927	0					
ANR	6621047	Callee	sprintf		6620927	0					
ANR	6621048	Identifier	sprintf		6620927	0					
ANR	6621049	ArgumentList	temp		6620927	1					
ANR	6621050	Argument	temp		6620927	0					
ANR	6621051	Identifier	temp		6620927	0					
ANR	6621052	Argument	"""%s.XXXXXX"""		6620927	1					
ANR	6621053	PrimaryExpression	"""%s.XXXXXX"""		6620927	0					
ANR	6621054	Argument	za -> zn		6620927	2					
ANR	6621055	PtrMemberAccess	za -> zn		6620927	0					
ANR	6621056	Identifier	za		6620927	0					
ANR	6621057	Identifier	zn		6620927	1					
ANR	6621058	IfStatement	"if ( ( tfd = open ( temp , O_RDWR | O_CREAT , 0644 ) ) == - 1 )"		6620927	4					
ANR	6621059	Condition	"( tfd = open ( temp , O_RDWR | O_CREAT , 0644 ) ) == - 1"	612:8:14891:14934	6620927	0	True				
ANR	6621060	EqualityExpression	"( tfd = open ( temp , O_RDWR | O_CREAT , 0644 ) ) == - 1"		6620927	0		==			
ANR	6621061	AssignmentExpression	"tfd = open ( temp , O_RDWR | O_CREAT , 0644 )"		6620927	0		=			
ANR	6621062	Identifier	tfd		6620927	0					
ANR	6621063	CallExpression	"open ( temp , O_RDWR | O_CREAT , 0644 )"		6620927	1					
ANR	6621064	Callee	open		6620927	0					
ANR	6621065	Identifier	open		6620927	0					
ANR	6621066	ArgumentList	temp		6620927	1					
ANR	6621067	Argument	temp		6620927	0					
ANR	6621068	Identifier	temp		6620927	0					
ANR	6621069	Argument	O_RDWR | O_CREAT		6620927	1					
ANR	6621070	InclusiveOrExpression	O_RDWR | O_CREAT		6620927	0		|			
ANR	6621071	Identifier	O_RDWR		6620927	0					
ANR	6621072	Identifier	O_CREAT		6620927	1					
ANR	6621073	Argument	0644		6620927	2					
ANR	6621074	PrimaryExpression	0644		6620927	0					
ANR	6621075	UnaryOperationExpression	- 1		6620927	1					
ANR	6621076	UnaryOperator	-		6620927	0					
ANR	6621077	PrimaryExpression	1		6620927	1					
ANR	6621078	CompoundStatement		21:54:563:563	6620927	1					
ANR	6621079	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"	613:1:14940:14989	6620927	0	True				
ANR	6621080	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"		6620927	0					
ANR	6621081	Callee	_zip_error_set		6620927	0					
ANR	6621082	Identifier	_zip_error_set		6620927	0					
ANR	6621083	ArgumentList	& za -> error		6620927	1					
ANR	6621084	Argument	& za -> error		6620927	0					
ANR	6621085	UnaryOperationExpression	& za -> error		6620927	0					
ANR	6621086	UnaryOperator	&		6620927	0					
ANR	6621087	PtrMemberAccess	za -> error		6620927	1					
ANR	6621088	Identifier	za		6620927	0					
ANR	6621089	Identifier	error		6620927	1					
ANR	6621090	Argument	ZIP_ER_TMPOPEN		6620927	1					
ANR	6621091	Identifier	ZIP_ER_TMPOPEN		6620927	0					
ANR	6621092	Argument	errno		6620927	2					
ANR	6621093	Identifier	errno		6620927	0					
ANR	6621094	ExpressionStatement	free ( temp )	614:1:14992:15002	6620927	1	True				
ANR	6621095	CallExpression	free ( temp )		6620927	0					
ANR	6621096	Callee	free		6620927	0					
ANR	6621097	Identifier	free		6620927	0					
ANR	6621098	ArgumentList	temp		6620927	1					
ANR	6621099	Argument	temp		6620927	0					
ANR	6621100	Identifier	temp		6620927	0					
ANR	6621101	ReturnStatement	return NULL ;	615:1:15005:15016	6620927	2	True				
ANR	6621102	Identifier	NULL		6620927	0					
ANR	6621103	ExpressionStatement	umask ( S_IWGRP | S_IWOTH )	618:1:15031:15056	6620927	5	True				
ANR	6621104	CallExpression	umask ( S_IWGRP | S_IWOTH )		6620927	0					
ANR	6621105	Callee	umask		6620927	0					
ANR	6621106	Identifier	umask		6620927	0					
ANR	6621107	ArgumentList	S_IWGRP | S_IWOTH		6620927	1					
ANR	6621108	Argument	S_IWGRP | S_IWOTH		6620927	0					
ANR	6621109	InclusiveOrExpression	S_IWGRP | S_IWOTH		6620927	0		|			
ANR	6621110	Identifier	S_IWGRP		6620927	0					
ANR	6621111	Identifier	S_IWOTH		6620927	1					
ANR	6621112	IfStatement	if ( ( tfd = mkstemp ( temp ) ) == - 1 )		6620927	6					
ANR	6621113	Condition	( tfd = mkstemp ( temp ) ) == - 1	619:8:15066:15090	6620927	0	True				
ANR	6621114	EqualityExpression	( tfd = mkstemp ( temp ) ) == - 1		6620927	0		==			
ANR	6621115	AssignmentExpression	tfd = mkstemp ( temp )		6620927	0		=			
ANR	6621116	Identifier	tfd		6620927	0					
ANR	6621117	CallExpression	mkstemp ( temp )		6620927	1					
ANR	6621118	Callee	mkstemp		6620927	0					
ANR	6621119	Identifier	mkstemp		6620927	0					
ANR	6621120	ArgumentList	temp		6620927	1					
ANR	6621121	Argument	temp		6620927	0					
ANR	6621122	Identifier	temp		6620927	0					
ANR	6621123	UnaryOperationExpression	- 1		6620927	1					
ANR	6621124	UnaryOperator	-		6620927	0					
ANR	6621125	PrimaryExpression	1		6620927	1					
ANR	6621126	CompoundStatement		28:35:719:719	6620927	1					
ANR	6621127	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"	620:1:15096:15145	6620927	0	True				
ANR	6621128	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"		6620927	0					
ANR	6621129	Callee	_zip_error_set		6620927	0					
ANR	6621130	Identifier	_zip_error_set		6620927	0					
ANR	6621131	ArgumentList	& za -> error		6620927	1					
ANR	6621132	Argument	& za -> error		6620927	0					
ANR	6621133	UnaryOperationExpression	& za -> error		6620927	0					
ANR	6621134	UnaryOperator	&		6620927	0					
ANR	6621135	PtrMemberAccess	za -> error		6620927	1					
ANR	6621136	Identifier	za		6620927	0					
ANR	6621137	Identifier	error		6620927	1					
ANR	6621138	Argument	ZIP_ER_TMPOPEN		6620927	1					
ANR	6621139	Identifier	ZIP_ER_TMPOPEN		6620927	0					
ANR	6621140	Argument	errno		6620927	2					
ANR	6621141	Identifier	errno		6620927	0					
ANR	6621142	ExpressionStatement	free ( temp )	621:1:15148:15158	6620927	1	True				
ANR	6621143	CallExpression	free ( temp )		6620927	0					
ANR	6621144	Callee	free		6620927	0					
ANR	6621145	Identifier	free		6620927	0					
ANR	6621146	ArgumentList	temp		6620927	1					
ANR	6621147	Argument	temp		6620927	0					
ANR	6621148	Identifier	temp		6620927	0					
ANR	6621149	ReturnStatement	return NULL ;	622:1:15161:15172	6620927	2	True				
ANR	6621150	Identifier	NULL		6620927	0					
ANR	6621151	IfStatement	"if ( ( tfp = fdopen ( tfd , ""r+b"" ) ) == NULL )"		6620927	7					
ANR	6621152	Condition	"( tfp = fdopen ( tfd , ""r+b"" ) ) == NULL"	626:8:15196:15227	6620927	0	True				
ANR	6621153	EqualityExpression	"( tfp = fdopen ( tfd , ""r+b"" ) ) == NULL"		6620927	0		==			
ANR	6621154	AssignmentExpression	"tfp = fdopen ( tfd , ""r+b"" )"		6620927	0		=			
ANR	6621155	Identifier	tfp		6620927	0					
ANR	6621156	CallExpression	"fdopen ( tfd , ""r+b"" )"		6620927	1					
ANR	6621157	Callee	fdopen		6620927	0					
ANR	6621158	Identifier	fdopen		6620927	0					
ANR	6621159	ArgumentList	tfd		6620927	1					
ANR	6621160	Argument	tfd		6620927	0					
ANR	6621161	Identifier	tfd		6620927	0					
ANR	6621162	Argument	"""r+b"""		6620927	1					
ANR	6621163	PrimaryExpression	"""r+b"""		6620927	0					
ANR	6621164	Identifier	NULL		6620927	1					
ANR	6621165	CompoundStatement		35:42:856:856	6620927	1					
ANR	6621166	ExpressionStatement	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"	627:1:15233:15282	6620927	0	True				
ANR	6621167	CallExpression	"_zip_error_set ( & za -> error , ZIP_ER_TMPOPEN , errno )"		6620927	0					
ANR	6621168	Callee	_zip_error_set		6620927	0					
ANR	6621169	Identifier	_zip_error_set		6620927	0					
ANR	6621170	ArgumentList	& za -> error		6620927	1					
ANR	6621171	Argument	& za -> error		6620927	0					
ANR	6621172	UnaryOperationExpression	& za -> error		6620927	0					
ANR	6621173	UnaryOperator	&		6620927	0					
ANR	6621174	PtrMemberAccess	za -> error		6620927	1					
ANR	6621175	Identifier	za		6620927	0					
ANR	6621176	Identifier	error		6620927	1					
ANR	6621177	Argument	ZIP_ER_TMPOPEN		6620927	1					
ANR	6621178	Identifier	ZIP_ER_TMPOPEN		6620927	0					
ANR	6621179	Argument	errno		6620927	2					
ANR	6621180	Identifier	errno		6620927	0					
ANR	6621181	ExpressionStatement	close ( tfd )	628:1:15285:15295	6620927	1	True				
ANR	6621182	CallExpression	close ( tfd )		6620927	0					
ANR	6621183	Callee	close		6620927	0					
ANR	6621184	Identifier	close		6620927	0					
ANR	6621185	ArgumentList	tfd		6620927	1					
ANR	6621186	Argument	tfd		6620927	0					
ANR	6621187	Identifier	tfd		6620927	0					
ANR	6621188	ExpressionStatement	( void ) remove ( temp )	629:1:15298:15316	6620927	2	True				
ANR	6621189	CastExpression	( void ) remove ( temp )		6620927	0					
ANR	6621190	CastTarget	void		6620927	0					
ANR	6621191	CallExpression	remove ( temp )		6620927	1					
ANR	6621192	Callee	remove		6620927	0					
ANR	6621193	Identifier	remove		6620927	0					
ANR	6621194	ArgumentList	temp		6620927	1					
ANR	6621195	Argument	temp		6620927	0					
ANR	6621196	Identifier	temp		6620927	0					
ANR	6621197	ExpressionStatement	free ( temp )	630:1:15319:15329	6620927	3	True				
ANR	6621198	CallExpression	free ( temp )		6620927	0					
ANR	6621199	Callee	free		6620927	0					
ANR	6621200	Identifier	free		6620927	0					
ANR	6621201	ArgumentList	temp		6620927	1					
ANR	6621202	Argument	temp		6620927	0					
ANR	6621203	Identifier	temp		6620927	0					
ANR	6621204	ReturnStatement	return NULL ;	631:1:15332:15343	6620927	4	True				
ANR	6621205	Identifier	NULL		6620927	0					
ANR	6621206	Statement	_setmode	640:4:15516:15523	6620927	8	True				
ANR	6621207	Statement	(	640:12:15524:15524	6620927	9	True				
ANR	6621208	Statement	_fileno	640:13:15525:15531	6620927	10	True				
ANR	6621209	Statement	(	640:20:15532:15532	6620927	11	True				
ANR	6621210	Statement	tfp	640:21:15533:15535	6620927	12	True				
ANR	6621211	Statement	)	640:24:15536:15536	6620927	13	True				
ANR	6621212	Statement	","	640:25:15537:15537	6620927	14	True				
ANR	6621213	Statement	O_BINARY	642:1:15553:15560	6620927	15	True				
ANR	6621214	Statement	)	648:1:15606:15606	6620927	16	True				
ANR	6621215	ExpressionStatement		648:2:15607:15607	6620927	17	True				
ANR	6621216	ExpressionStatement	* outp = tfp	652:4:15629:15640	6620927	18	True				
ANR	6621217	AssignmentExpression	* outp = tfp		6620927	0		=			
ANR	6621218	UnaryOperationExpression	* outp		6620927	0					
ANR	6621219	UnaryOperator	*		6620927	0					
ANR	6621220	Identifier	outp		6620927	1					
ANR	6621221	Identifier	tfp		6620927	1					
ANR	6621222	ReturnStatement	return temp ;	653:4:15646:15657	6620927	19	True				
ANR	6621223	Identifier	temp		6620927	0					
ANR	6621224	ReturnType	static char *		6620927	1					
ANR	6621225	Identifier	_zip_create_temp_output		6620927	2					
ANR	6621226	ParameterList	"struct zip * za , FILE * * outp"		6620927	3					
ANR	6621227	Parameter	struct zip * za	591:24:14344:14357	6620927	0	True				
ANR	6621228	ParameterType	struct zip *		6620927	0					
ANR	6621229	Identifier	za		6620927	1					
ANR	6621230	Parameter	FILE * * outp	591:40:14360:14370	6620927	1	True				
ANR	6621231	ParameterType	FILE * *		6620927	0					
ANR	6621232	Identifier	outp		6620927	1					
ANR	6621233	CFGEntryNode	ENTRY		6620927		True				
ANR	6621234	CFGExitNode	EXIT		6620927		True				
ANR	6621235	Symbol	malloc		6620927						
ANR	6621236	Symbol	mkstemp		6620927						
ANR	6621237	Symbol	temp		6620927						
ANR	6621238	Symbol	errno		6620927						
ANR	6621239	Symbol	NULL		6620927						
ANR	6621240	Symbol	& za -> error		6620927						
ANR	6621241	Symbol	S_IWGRP		6620927						
ANR	6621242	Symbol	O_CREAT		6620927						
ANR	6621243	Symbol	S_IWOTH		6620927						
ANR	6621244	Symbol	za		6620927						
ANR	6621245	Symbol	fdopen		6620927						
ANR	6621246	Symbol	* za		6620927						
ANR	6621247	Symbol	strlen		6620927						
ANR	6621248	Symbol	O_RDWR		6620927						
ANR	6621249	Symbol	tfd		6620927						
ANR	6621250	Symbol	outp		6620927						
ANR	6621251	Symbol	ZIP_ER_TMPOPEN		6620927						
ANR	6621252	Symbol	za -> zn		6620927						
ANR	6621253	Symbol	za -> tempdir		6620927						
ANR	6621254	Symbol	* outp		6620927						
ANR	6621255	Symbol	ZIP_ER_MEMORY		6620927						
ANR	6621256	Symbol	open		6620927						
ANR	6621257	Symbol	tfp		6620927						
ANR	6621258	Function	_zip_torrentzip_cmp	658:0:15665:15989							
ANR	6621259	FunctionDef	"_zip_torrentzip_cmp (const void * a , const void * b)"		6621258	0					
ANR	6621260	CompoundStatement		660:0:15726:15989	6621258	0					
ANR	6621261	IdentifierDeclStatement	const char * aname = ( ( const struct zip_filelist * ) a ) -> name ;	661:4:15732:15790	6621258	0	True				
ANR	6621262	IdentifierDecl	* aname = ( ( const struct zip_filelist * ) a ) -> name		6621258	0					
ANR	6621263	IdentifierDeclType	const char *		6621258	0					
ANR	6621264	Identifier	aname		6621258	1					
ANR	6621265	AssignmentExpression	* aname = ( ( const struct zip_filelist * ) a ) -> name		6621258	2		=			
ANR	6621266	Identifier	aname		6621258	0					
ANR	6621267	PtrMemberAccess	( ( const struct zip_filelist * ) a ) -> name		6621258	1					
ANR	6621268	CastExpression	( const struct zip_filelist * ) a		6621258	0					
ANR	6621269	CastTarget	const struct zip_filelist *		6621258	0					
ANR	6621270	Identifier	a		6621258	1					
ANR	6621271	Identifier	name		6621258	1					
ANR	6621272	IdentifierDeclStatement	const char * bname = ( ( const struct zip_filelist * ) b ) -> name ;	662:4:15796:15854	6621258	1	True				
ANR	6621273	IdentifierDecl	* bname = ( ( const struct zip_filelist * ) b ) -> name		6621258	0					
ANR	6621274	IdentifierDeclType	const char *		6621258	0					
ANR	6621275	Identifier	bname		6621258	1					
ANR	6621276	AssignmentExpression	* bname = ( ( const struct zip_filelist * ) b ) -> name		6621258	2		=			
ANR	6621277	Identifier	bname		6621258	0					
ANR	6621278	PtrMemberAccess	( ( const struct zip_filelist * ) b ) -> name		6621258	1					
ANR	6621279	CastExpression	( const struct zip_filelist * ) b		6621258	0					
ANR	6621280	CastTarget	const struct zip_filelist *		6621258	0					
ANR	6621281	Identifier	b		6621258	1					
ANR	6621282	Identifier	name		6621258	1					
ANR	6621283	IfStatement	if ( aname == NULL )		6621258	2					
ANR	6621284	Condition	aname == NULL	664:8:15865:15877	6621258	0	True				
ANR	6621285	EqualityExpression	aname == NULL		6621258	0		==			
ANR	6621286	Identifier	aname		6621258	0					
ANR	6621287	Identifier	NULL		6621258	1					
ANR	6621288	ReturnStatement	return ( bname != NULL ) * - 1 ;	665:1:15881:15908	6621258	1	True				
ANR	6621289	MultiplicativeExpression	( bname != NULL ) * - 1		6621258	0		*			
ANR	6621290	EqualityExpression	bname != NULL		6621258	0		!=			
ANR	6621291	Identifier	bname		6621258	0					
ANR	6621292	Identifier	NULL		6621258	1					
ANR	6621293	UnaryOperationExpression	- 1		6621258	1					
ANR	6621294	UnaryOperator	-		6621258	0					
ANR	6621295	PrimaryExpression	1		6621258	1					
ANR	6621296	ElseStatement	else		6621258	0					
ANR	6621297	IfStatement	if ( bname == NULL )		6621258	0					
ANR	6621298	Condition	bname == NULL	666:13:15923:15935	6621258	0	True				
ANR	6621299	EqualityExpression	bname == NULL		6621258	0		==			
ANR	6621300	Identifier	bname		6621258	0					
ANR	6621301	Identifier	NULL		6621258	1					
ANR	6621302	ReturnStatement	return 1 ;	667:1:15939:15947	6621258	1	True				
ANR	6621303	PrimaryExpression	1		6621258	0					
ANR	6621304	ReturnStatement	"return __strcasecmp ( aname , bname ) ;"	669:4:15954:15987	6621258	3	True				
ANR	6621305	CallExpression	"__strcasecmp ( aname , bname )"		6621258	0					
ANR	6621306	Callee	__strcasecmp		6621258	0					
ANR	6621307	Identifier	__strcasecmp		6621258	0					
ANR	6621308	ArgumentList	aname		6621258	1					
ANR	6621309	Argument	aname		6621258	0					
ANR	6621310	Identifier	aname		6621258	0					
ANR	6621311	Argument	bname		6621258	1					
ANR	6621312	Identifier	bname		6621258	0					
ANR	6621313	ReturnType	static int		6621258	1					
ANR	6621314	Identifier	_zip_torrentzip_cmp		6621258	2					
ANR	6621315	ParameterList	"const void * a , const void * b"		6621258	3					
ANR	6621316	Parameter	const void * a	659:20:15696:15708	6621258	0	True				
ANR	6621317	ParameterType	const void *		6621258	0					
ANR	6621318	Identifier	a		6621258	1					
ANR	6621319	Parameter	const void * b	659:35:15711:15723	6621258	1	True				
ANR	6621320	ParameterType	const void *		6621258	0					
ANR	6621321	Identifier	b		6621258	1					
ANR	6621322	CFGEntryNode	ENTRY		6621258		True				
ANR	6621323	CFGExitNode	EXIT		6621258		True				
ANR	6621324	Symbol	a		6621258						
ANR	6621325	Symbol	b		6621258						
ANR	6621326	Symbol	NULL		6621258						
ANR	6621327	Symbol	bname		6621258						
ANR	6621328	Symbol	( ( const struct zip_filelist * ) b ) -> name		6621258						
ANR	6621329	Symbol	aname		6621258						
ANR	6621330	Symbol	__strcasecmp		6621258						
ANR	6621331	Symbol	( ( const struct zip_filelist * ) a ) -> name		6621258						
ANR	6621332	Symbol	* a		6621258						
ANR	6621333	Symbol	* b		6621258						
