command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5688673	File	data/converged/CVE-2019-16718~_radare2/range.c								
ANR	5688674	Function	r_range_new	14:0:261:490							
ANR	5688675	FunctionDef	r_range_new ()		5688674	0					
ANR	5688676	CompoundStatement		14:28:289:490	5688674	0					
ANR	5688677	IdentifierDeclStatement	RRange * r = R_NEW0 ( RRange ) ;	15:1:292:319	5688674	0	True				
ANR	5688678	IdentifierDecl	* r = R_NEW0 ( RRange )		5688674	0					
ANR	5688679	IdentifierDeclType	RRange *		5688674	0					
ANR	5688680	Identifier	r		5688674	1					
ANR	5688681	AssignmentExpression	* r = R_NEW0 ( RRange )		5688674	2		=			
ANR	5688682	Identifier	r		5688674	0					
ANR	5688683	CallExpression	R_NEW0 ( RRange )		5688674	1					
ANR	5688684	Callee	R_NEW0		5688674	0					
ANR	5688685	Identifier	R_NEW0		5688674	0					
ANR	5688686	ArgumentList	RRange		5688674	1					
ANR	5688687	Argument	RRange		5688674	0					
ANR	5688688	Identifier	RRange		5688674	0					
ANR	5688689	IfStatement	if ( r )		5688674	1					
ANR	5688690	Condition	r	16:5:326:326	5688674	0	True				
ANR	5688691	Identifier	r		5688674	0					
ANR	5688692	CompoundStatement		3:8:39:39	5688674	1					
ANR	5688693	ExpressionStatement	r -> count = r -> changed = 0	17:2:333:358	5688674	0	True				
ANR	5688694	AssignmentExpression	r -> count = r -> changed = 0		5688674	0		=			
ANR	5688695	PtrMemberAccess	r -> count		5688674	0					
ANR	5688696	Identifier	r		5688674	0					
ANR	5688697	Identifier	count		5688674	1					
ANR	5688698	AssignmentExpression	r -> changed = 0		5688674	1		=			
ANR	5688699	PtrMemberAccess	r -> changed		5688674	0					
ANR	5688700	Identifier	r		5688674	0					
ANR	5688701	Identifier	changed		5688674	1					
ANR	5688702	PrimaryExpression	0		5688674	1					
ANR	5688703	ExpressionStatement	r -> ranges = r_list_new ( )	18:2:362:387	5688674	1	True				
ANR	5688704	AssignmentExpression	r -> ranges = r_list_new ( )		5688674	0		=			
ANR	5688705	PtrMemberAccess	r -> ranges		5688674	0					
ANR	5688706	Identifier	r		5688674	0					
ANR	5688707	Identifier	ranges		5688674	1					
ANR	5688708	CallExpression	r_list_new ( )		5688674	1					
ANR	5688709	Callee	r_list_new		5688674	0					
ANR	5688710	Identifier	r_list_new		5688674	0					
ANR	5688711	ArgumentList			5688674	1					
ANR	5688712	IfStatement	if ( ! r -> ranges )		5688674	2					
ANR	5688713	Condition	! r -> ranges	19:6:395:404	5688674	0	True				
ANR	5688714	UnaryOperationExpression	! r -> ranges		5688674	0					
ANR	5688715	UnaryOperator	!		5688674	0					
ANR	5688716	PtrMemberAccess	r -> ranges		5688674	1					
ANR	5688717	Identifier	r		5688674	0					
ANR	5688718	Identifier	ranges		5688674	1					
ANR	5688719	CompoundStatement		6:18:117:117	5688674	1					
ANR	5688720	ExpressionStatement	r_range_free ( r )	20:3:412:428	5688674	0	True				
ANR	5688721	CallExpression	r_range_free ( r )		5688674	0					
ANR	5688722	Callee	r_range_free		5688674	0					
ANR	5688723	Identifier	r_range_free		5688674	0					
ANR	5688724	ArgumentList	r		5688674	1					
ANR	5688725	Argument	r		5688674	0					
ANR	5688726	Identifier	r		5688674	0					
ANR	5688727	ReturnStatement	return NULL ;	21:3:433:444	5688674	1	True				
ANR	5688728	Identifier	NULL		5688674	0					
ANR	5688729	ExpressionStatement	r -> ranges -> free = free	23:2:452:474	5688674	3	True				
ANR	5688730	AssignmentExpression	r -> ranges -> free = free		5688674	0		=			
ANR	5688731	PtrMemberAccess	r -> ranges -> free		5688674	0					
ANR	5688732	PtrMemberAccess	r -> ranges		5688674	0					
ANR	5688733	Identifier	r		5688674	0					
ANR	5688734	Identifier	ranges		5688674	1					
ANR	5688735	Identifier	free		5688674	1					
ANR	5688736	Identifier	free		5688674	1					
ANR	5688737	ReturnStatement	return r ;	25:1:480:488	5688674	2	True				
ANR	5688738	Identifier	r		5688674	0					
ANR	5688739	ReturnType	R_API RRange *		5688674	1					
ANR	5688740	Identifier	r_range_new		5688674	2					
ANR	5688741	ParameterList			5688674	3					
ANR	5688742	CFGEntryNode	ENTRY		5688674		True				
ANR	5688743	CFGExitNode	EXIT		5688674		True				
ANR	5688744	Symbol	r -> ranges -> free		5688674						
ANR	5688745	Symbol	NULL		5688674						
ANR	5688746	Symbol	* r -> ranges		5688674						
ANR	5688747	Symbol	r -> ranges		5688674						
ANR	5688748	Symbol	r -> changed		5688674						
ANR	5688749	Symbol	R_NEW0		5688674						
ANR	5688750	Symbol	r		5688674						
ANR	5688751	Symbol	RRange		5688674						
ANR	5688752	Symbol	r -> count		5688674						
ANR	5688753	Symbol	* * r		5688674						
ANR	5688754	Symbol	* r		5688674						
ANR	5688755	Symbol	free		5688674						
ANR	5688756	Symbol	r_list_new		5688674						
ANR	5688757	Function	r_range_free	28:0:493:585							
ANR	5688758	FunctionDef	r_range_free (RRange * r)		5688757	0					
ANR	5688759	CompoundStatement		28:38:531:585	5688757	0					
ANR	5688760	ExpressionStatement	r_list_purge ( r -> ranges )	29:1:534:558	5688757	0	True				
ANR	5688761	CallExpression	r_list_purge ( r -> ranges )		5688757	0					
ANR	5688762	Callee	r_list_purge		5688757	0					
ANR	5688763	Identifier	r_list_purge		5688757	0					
ANR	5688764	ArgumentList	r -> ranges		5688757	1					
ANR	5688765	Argument	r -> ranges		5688757	0					
ANR	5688766	PtrMemberAccess	r -> ranges		5688757	0					
ANR	5688767	Identifier	r		5688757	0					
ANR	5688768	Identifier	ranges		5688757	1					
ANR	5688769	ExpressionStatement	free ( r )	30:1:561:569	5688757	1	True				
ANR	5688770	CallExpression	free ( r )		5688757	0					
ANR	5688771	Callee	free		5688757	0					
ANR	5688772	Identifier	free		5688757	0					
ANR	5688773	ArgumentList	r		5688757	1					
ANR	5688774	Argument	r		5688757	0					
ANR	5688775	Identifier	r		5688757	0					
ANR	5688776	ReturnStatement	return NULL ;	31:1:572:583	5688757	2	True				
ANR	5688777	Identifier	NULL		5688757	0					
ANR	5688778	ReturnType	R_API RRange *		5688757	1					
ANR	5688779	Identifier	r_range_free		5688757	2					
ANR	5688780	ParameterList	RRange * r		5688757	3					
ANR	5688781	Parameter	RRange * r	28:27:520:528	5688757	0	True				
ANR	5688782	ParameterType	RRange *		5688757	0					
ANR	5688783	Identifier	r		5688757	1					
ANR	5688784	CFGEntryNode	ENTRY		5688757		True				
ANR	5688785	CFGExitNode	EXIT		5688757		True				
ANR	5688786	Symbol	r		5688757						
ANR	5688787	Symbol	NULL		5688757						
ANR	5688788	Symbol	r -> ranges		5688757						
ANR	5688789	Symbol	* r		5688757						
ANR	5688790	Function	r_range_get_data	35:0:658:893							
ANR	5688791	FunctionDef	"r_range_get_data (RRange * rgs , ut64 addr , ut8 * buf , int len)"		5688790	0					
ANR	5688792	CompoundStatement		35:70:728:893	5688790	0					
ANR	5688793	IdentifierDeclStatement	"RRangeItem * r = r_range_item_get ( rgs , addr ) ;"	36:1:731:775	5688790	0	True				
ANR	5688794	IdentifierDecl	"* r = r_range_item_get ( rgs , addr )"		5688790	0					
ANR	5688795	IdentifierDeclType	RRangeItem *		5688790	0					
ANR	5688796	Identifier	r		5688790	1					
ANR	5688797	AssignmentExpression	"* r = r_range_item_get ( rgs , addr )"		5688790	2		=			
ANR	5688798	Identifier	r		5688790	0					
ANR	5688799	CallExpression	"r_range_item_get ( rgs , addr )"		5688790	1					
ANR	5688800	Callee	r_range_item_get		5688790	0					
ANR	5688801	Identifier	r_range_item_get		5688790	0					
ANR	5688802	ArgumentList	rgs		5688790	1					
ANR	5688803	Argument	rgs		5688790	0					
ANR	5688804	Identifier	rgs		5688790	0					
ANR	5688805	Argument	addr		5688790	1					
ANR	5688806	Identifier	addr		5688790	0					
ANR	5688807	IfStatement	if ( ! r )		5688790	1					
ANR	5688808	Condition	! r	37:5:782:783	5688790	0	True				
ANR	5688809	UnaryOperationExpression	! r		5688790	0					
ANR	5688810	UnaryOperator	!		5688790	0					
ANR	5688811	Identifier	r		5688790	1					
ANR	5688812	CompoundStatement		3:9:57:57	5688790	1					
ANR	5688813	ReturnStatement	return 0 ;	38:2:790:798	5688790	0	True				
ANR	5688814	PrimaryExpression	0		5688790	0					
ANR	5688815	IfStatement	if ( r -> datalen < len )		5688790	2					
ANR	5688816	Condition	r -> datalen < len	40:5:808:823	5688790	0	True				
ANR	5688817	RelationalExpression	r -> datalen < len		5688790	0		<			
ANR	5688818	PtrMemberAccess	r -> datalen		5688790	0					
ANR	5688819	Identifier	r		5688790	0					
ANR	5688820	Identifier	datalen		5688790	1					
ANR	5688821	Identifier	len		5688790	1					
ANR	5688822	CompoundStatement		6:23:97:97	5688790	1					
ANR	5688823	ExpressionStatement	len = r -> datalen	41:2:830:846	5688790	0	True				
ANR	5688824	AssignmentExpression	len = r -> datalen		5688790	0		=			
ANR	5688825	Identifier	len		5688790	0					
ANR	5688826	PtrMemberAccess	r -> datalen		5688790	1					
ANR	5688827	Identifier	r		5688790	0					
ANR	5688828	Identifier	datalen		5688790	1					
ANR	5688829	ExpressionStatement	"memcpy ( buf , r -> data , len )"	43:1:852:878	5688790	3	True				
ANR	5688830	CallExpression	"memcpy ( buf , r -> data , len )"		5688790	0					
ANR	5688831	Callee	memcpy		5688790	0					
ANR	5688832	Identifier	memcpy		5688790	0					
ANR	5688833	ArgumentList	buf		5688790	1					
ANR	5688834	Argument	buf		5688790	0					
ANR	5688835	Identifier	buf		5688790	0					
ANR	5688836	Argument	r -> data		5688790	1					
ANR	5688837	PtrMemberAccess	r -> data		5688790	0					
ANR	5688838	Identifier	r		5688790	0					
ANR	5688839	Identifier	data		5688790	1					
ANR	5688840	Argument	len		5688790	2					
ANR	5688841	Identifier	len		5688790	0					
ANR	5688842	ReturnStatement	return len ;	44:1:881:891	5688790	4	True				
ANR	5688843	Identifier	len		5688790	0					
ANR	5688844	ReturnType	R_API int		5688790	1					
ANR	5688845	Identifier	r_range_get_data		5688790	2					
ANR	5688846	ParameterList	"RRange * rgs , ut64 addr , ut8 * buf , int len"		5688790	3					
ANR	5688847	Parameter	RRange * rgs	35:27:685:695	5688790	0	True				
ANR	5688848	ParameterType	RRange *		5688790	0					
ANR	5688849	Identifier	rgs		5688790	1					
ANR	5688850	Parameter	ut64 addr	35:40:698:706	5688790	1	True				
ANR	5688851	ParameterType	ut64		5688790	0					
ANR	5688852	Identifier	addr		5688790	1					
ANR	5688853	Parameter	ut8 * buf	35:51:709:716	5688790	2	True				
ANR	5688854	ParameterType	ut8 *		5688790	0					
ANR	5688855	Identifier	buf		5688790	1					
ANR	5688856	Parameter	int len	35:61:719:725	5688790	3	True				
ANR	5688857	ParameterType	int		5688790	0					
ANR	5688858	Identifier	len		5688790	1					
ANR	5688859	CFGEntryNode	ENTRY		5688790		True				
ANR	5688860	CFGExitNode	EXIT		5688790		True				
ANR	5688861	Symbol	buf		5688790						
ANR	5688862	Symbol	r		5688790						
ANR	5688863	Symbol	r -> datalen		5688790						
ANR	5688864	Symbol	len		5688790						
ANR	5688865	Symbol	addr		5688790						
ANR	5688866	Symbol	* r		5688790						
ANR	5688867	Symbol	r -> data		5688790						
ANR	5688868	Symbol	rgs		5688790						
ANR	5688869	Symbol	r_range_item_get		5688790						
ANR	5688870	Function	r_range_set_data	47:0:896:1169							
ANR	5688871	FunctionDef	"r_range_set_data (RRange * rgs , ut64 addr , const ut8 * buf , int len)"		5688870	0					
ANR	5688872	CompoundStatement		47:76:972:1169	5688870	0					
ANR	5688873	IdentifierDeclStatement	"RRangeItem * r = r_range_item_get ( rgs , addr ) ;"	48:1:975:1019	5688870	0	True				
ANR	5688874	IdentifierDecl	"* r = r_range_item_get ( rgs , addr )"		5688870	0					
ANR	5688875	IdentifierDeclType	RRangeItem *		5688870	0					
ANR	5688876	Identifier	r		5688870	1					
ANR	5688877	AssignmentExpression	"* r = r_range_item_get ( rgs , addr )"		5688870	2		=			
ANR	5688878	Identifier	r		5688870	0					
ANR	5688879	CallExpression	"r_range_item_get ( rgs , addr )"		5688870	1					
ANR	5688880	Callee	r_range_item_get		5688870	0					
ANR	5688881	Identifier	r_range_item_get		5688870	0					
ANR	5688882	ArgumentList	rgs		5688870	1					
ANR	5688883	Argument	rgs		5688870	0					
ANR	5688884	Identifier	rgs		5688870	0					
ANR	5688885	Argument	addr		5688870	1					
ANR	5688886	Identifier	addr		5688870	0					
ANR	5688887	IfStatement	if ( ! r )		5688870	1					
ANR	5688888	Condition	! r	49:5:1026:1027	5688870	0	True				
ANR	5688889	UnaryOperationExpression	! r		5688870	0					
ANR	5688890	UnaryOperator	!		5688870	0					
ANR	5688891	Identifier	r		5688870	1					
ANR	5688892	CompoundStatement		3:9:57:57	5688870	1					
ANR	5688893	ReturnStatement	return 0 ;	50:2:1034:1042	5688870	0	True				
ANR	5688894	PrimaryExpression	0		5688870	0					
ANR	5688895	ExpressionStatement	r -> data = ( ut8 * ) malloc ( len )	52:1:1048:1076	5688870	2	True				
ANR	5688896	AssignmentExpression	r -> data = ( ut8 * ) malloc ( len )		5688870	0		=			
ANR	5688897	PtrMemberAccess	r -> data		5688870	0					
ANR	5688898	Identifier	r		5688870	0					
ANR	5688899	Identifier	data		5688870	1					
ANR	5688900	CastExpression	( ut8 * ) malloc ( len )		5688870	1					
ANR	5688901	CastTarget	ut8 *		5688870	0					
ANR	5688902	CallExpression	malloc ( len )		5688870	1					
ANR	5688903	Callee	malloc		5688870	0					
ANR	5688904	Identifier	malloc		5688870	0					
ANR	5688905	ArgumentList	len		5688870	1					
ANR	5688906	Argument	len		5688870	0					
ANR	5688907	Identifier	len		5688870	0					
ANR	5688908	IfStatement	if ( ! r -> data )		5688870	3					
ANR	5688909	Condition	! r -> data	53:5:1083:1090	5688870	0	True				
ANR	5688910	UnaryOperationExpression	! r -> data		5688870	0					
ANR	5688911	UnaryOperator	!		5688870	0					
ANR	5688912	PtrMemberAccess	r -> data		5688870	1					
ANR	5688913	Identifier	r		5688870	0					
ANR	5688914	Identifier	data		5688870	1					
ANR	5688915	CompoundStatement		7:15:120:120	5688870	1					
ANR	5688916	ReturnStatement	return 0 ;	54:2:1097:1105	5688870	0	True				
ANR	5688917	PrimaryExpression	0		5688870	0					
ANR	5688918	ExpressionStatement	r -> datalen = len	56:1:1111:1127	5688870	4	True				
ANR	5688919	AssignmentExpression	r -> datalen = len		5688870	0		=			
ANR	5688920	PtrMemberAccess	r -> datalen		5688870	0					
ANR	5688921	Identifier	r		5688870	0					
ANR	5688922	Identifier	datalen		5688870	1					
ANR	5688923	Identifier	len		5688870	1					
ANR	5688924	ExpressionStatement	"memcpy ( r -> data , buf , len )"	57:1:1130:1156	5688870	5	True				
ANR	5688925	CallExpression	"memcpy ( r -> data , buf , len )"		5688870	0					
ANR	5688926	Callee	memcpy		5688870	0					
ANR	5688927	Identifier	memcpy		5688870	0					
ANR	5688928	ArgumentList	r -> data		5688870	1					
ANR	5688929	Argument	r -> data		5688870	0					
ANR	5688930	PtrMemberAccess	r -> data		5688870	0					
ANR	5688931	Identifier	r		5688870	0					
ANR	5688932	Identifier	data		5688870	1					
ANR	5688933	Argument	buf		5688870	1					
ANR	5688934	Identifier	buf		5688870	0					
ANR	5688935	Argument	len		5688870	2					
ANR	5688936	Identifier	len		5688870	0					
ANR	5688937	ReturnStatement	return 1 ;	58:1:1159:1167	5688870	6	True				
ANR	5688938	PrimaryExpression	1		5688870	0					
ANR	5688939	ReturnType	R_API int		5688870	1					
ANR	5688940	Identifier	r_range_set_data		5688870	2					
ANR	5688941	ParameterList	"RRange * rgs , ut64 addr , const ut8 * buf , int len"		5688870	3					
ANR	5688942	Parameter	RRange * rgs	47:27:923:933	5688870	0	True				
ANR	5688943	ParameterType	RRange *		5688870	0					
ANR	5688944	Identifier	rgs		5688870	1					
ANR	5688945	Parameter	ut64 addr	47:40:936:944	5688870	1	True				
ANR	5688946	ParameterType	ut64		5688870	0					
ANR	5688947	Identifier	addr		5688870	1					
ANR	5688948	Parameter	const ut8 * buf	47:51:947:960	5688870	2	True				
ANR	5688949	ParameterType	const ut8 *		5688870	0					
ANR	5688950	Identifier	buf		5688870	1					
ANR	5688951	Parameter	int len	47:67:963:969	5688870	3	True				
ANR	5688952	ParameterType	int		5688870	0					
ANR	5688953	Identifier	len		5688870	1					
ANR	5688954	CFGEntryNode	ENTRY		5688870		True				
ANR	5688955	CFGExitNode	EXIT		5688870		True				
ANR	5688956	Symbol	malloc		5688870						
ANR	5688957	Symbol	buf		5688870						
ANR	5688958	Symbol	r		5688870						
ANR	5688959	Symbol	r -> datalen		5688870						
ANR	5688960	Symbol	len		5688870						
ANR	5688961	Symbol	addr		5688870						
ANR	5688962	Symbol	* r		5688870						
ANR	5688963	Symbol	r -> data		5688870						
ANR	5688964	Symbol	rgs		5688870						
ANR	5688965	Symbol	r_range_item_get		5688870						
ANR	5688966	Function	r_range_item_get	61:0:1172:1375							
ANR	5688967	FunctionDef	"r_range_item_get (RRange * rgs , ut64 addr)"		5688966	0					
ANR	5688968	CompoundStatement		61:53:1225:1375	5688966	0					
ANR	5688969	IdentifierDeclStatement	RRangeItem * r ;	62:1:1228:1241	5688966	0	True				
ANR	5688970	IdentifierDecl	* r		5688966	0					
ANR	5688971	IdentifierDeclType	RRangeItem *		5688966	0					
ANR	5688972	Identifier	r		5688966	1					
ANR	5688973	IdentifierDeclStatement	RListIter * iter ;	63:1:1244:1259	5688966	1	True				
ANR	5688974	IdentifierDecl	* iter		5688966	0					
ANR	5688975	IdentifierDeclType	RListIter *		5688966	0					
ANR	5688976	Identifier	iter		5688966	1					
ANR	5688977	Statement	r_list_foreach	64:1:1262:1275	5688966	2	True				
ANR	5688978	Statement	(	64:16:1277:1277	5688966	3	True				
ANR	5688979	Statement	rgs	64:17:1278:1280	5688966	4	True				
ANR	5688980	Statement	->	64:20:1281:1282	5688966	5	True				
ANR	5688981	Statement	ranges	64:22:1283:1288	5688966	6	True				
ANR	5688982	Statement	","	64:28:1289:1289	5688966	7	True				
ANR	5688983	Statement	iter	64:30:1291:1294	5688966	8	True				
ANR	5688984	Statement	","	64:34:1295:1295	5688966	9	True				
ANR	5688985	Statement	r	64:36:1297:1297	5688966	10	True				
ANR	5688986	Statement	)	64:37:1298:1298	5688966	11	True				
ANR	5688987	CompoundStatement		4:39:74:74	5688966	12					
ANR	5688988	IfStatement	if ( addr >= r -> fr && addr < r -> to )		5688966	0					
ANR	5688989	Condition	addr >= r -> fr && addr < r -> to	65:6:1308:1336	5688966	0	True				
ANR	5688990	AndExpression	addr >= r -> fr && addr < r -> to		5688966	0		&&			
ANR	5688991	RelationalExpression	addr >= r -> fr		5688966	0		>=			
ANR	5688992	Identifier	addr		5688966	0					
ANR	5688993	PtrMemberAccess	r -> fr		5688966	1					
ANR	5688994	Identifier	r		5688966	0					
ANR	5688995	Identifier	fr		5688966	1					
ANR	5688996	RelationalExpression	addr < r -> to		5688966	1		<			
ANR	5688997	Identifier	addr		5688966	0					
ANR	5688998	PtrMemberAccess	r -> to		5688966	1					
ANR	5688999	Identifier	r		5688966	0					
ANR	5689000	Identifier	to		5688966	1					
ANR	5689001	CompoundStatement		5:37:113:113	5688966	1					
ANR	5689002	ReturnStatement	return r ;	66:3:1344:1352	5688966	0	True				
ANR	5689003	Identifier	r		5688966	0					
ANR	5689004	ReturnStatement	return NULL ;	69:1:1362:1373	5688966	13	True				
ANR	5689005	Identifier	NULL		5688966	0					
ANR	5689006	ReturnType	RRangeItem *		5688966	1					
ANR	5689007	Identifier	r_range_item_get		5688966	2					
ANR	5689008	ParameterList	"RRange * rgs , ut64 addr"		5688966	3					
ANR	5689009	Parameter	RRange * rgs	61:29:1201:1211	5688966	0	True				
ANR	5689010	ParameterType	RRange *		5688966	0					
ANR	5689011	Identifier	rgs		5688966	1					
ANR	5689012	Parameter	ut64 addr	61:42:1214:1222	5688966	1	True				
ANR	5689013	ParameterType	ut64		5688966	0					
ANR	5689014	Identifier	addr		5688966	1					
ANR	5689015	CFGEntryNode	ENTRY		5688966		True				
ANR	5689016	CFGExitNode	EXIT		5688966		True				
ANR	5689017	Symbol	r		5688966						
ANR	5689018	Symbol	NULL		5688966						
ANR	5689019	Symbol	r -> to		5688966						
ANR	5689020	Symbol	r -> fr		5688966						
ANR	5689021	Symbol	iter		5688966						
ANR	5689022	Symbol	addr		5688966						
ANR	5689023	Symbol	* r		5688966						
ANR	5689024	Symbol	rgs		5688966						
ANR	5689025	Function	r_range_size	74:0:1481:1650							
ANR	5689026	FunctionDef	r_range_size (RRange * rgs)		5689025	0					
ANR	5689027	CompoundStatement		74:37:1518:1650	5689025	0					
ANR	5689028	IdentifierDeclStatement	ut64 sum = 0 ;	75:1:1521:1533	5689025	0	True				
ANR	5689029	IdentifierDecl	sum = 0		5689025	0					
ANR	5689030	IdentifierDeclType	ut64		5689025	0					
ANR	5689031	Identifier	sum		5689025	1					
ANR	5689032	AssignmentExpression	sum = 0		5689025	2		=			
ANR	5689033	Identifier	sum		5689025	0					
ANR	5689034	PrimaryExpression	0		5689025	1					
ANR	5689035	IdentifierDeclStatement	RListIter * iter ;	76:1:1536:1551	5689025	1	True				
ANR	5689036	IdentifierDecl	* iter		5689025	0					
ANR	5689037	IdentifierDeclType	RListIter *		5689025	0					
ANR	5689038	Identifier	iter		5689025	1					
ANR	5689039	IdentifierDeclStatement	RRangeItem * r ;	77:1:1554:1567	5689025	2	True				
ANR	5689040	IdentifierDecl	* r		5689025	0					
ANR	5689041	IdentifierDeclType	RRangeItem *		5689025	0					
ANR	5689042	Identifier	r		5689025	1					
ANR	5689043	Statement	r_list_foreach	78:1:1570:1583	5689025	3	True				
ANR	5689044	Statement	(	78:16:1585:1585	5689025	4	True				
ANR	5689045	Statement	rgs	78:17:1586:1588	5689025	5	True				
ANR	5689046	Statement	->	78:20:1589:1590	5689025	6	True				
ANR	5689047	Statement	ranges	78:22:1591:1596	5689025	7	True				
ANR	5689048	Statement	","	78:28:1597:1597	5689025	8	True				
ANR	5689049	Statement	iter	78:30:1599:1602	5689025	9	True				
ANR	5689050	Statement	","	78:34:1603:1603	5689025	10	True				
ANR	5689051	Statement	r	78:36:1605:1605	5689025	11	True				
ANR	5689052	Statement	)	78:37:1606:1606	5689025	12	True				
ANR	5689053	CompoundStatement		5:39:89:89	5689025	13					
ANR	5689054	ExpressionStatement	sum += r -> to - r -> fr	79:2:1612:1632	5689025	0	True				
ANR	5689055	AssignmentExpression	sum += r -> to - r -> fr		5689025	0		+=			
ANR	5689056	Identifier	sum		5689025	0					
ANR	5689057	AdditiveExpression	r -> to - r -> fr		5689025	1		-			
ANR	5689058	PtrMemberAccess	r -> to		5689025	0					
ANR	5689059	Identifier	r		5689025	0					
ANR	5689060	Identifier	to		5689025	1					
ANR	5689061	PtrMemberAccess	r -> fr		5689025	1					
ANR	5689062	Identifier	r		5689025	0					
ANR	5689063	Identifier	fr		5689025	1					
ANR	5689064	ReturnStatement	return sum ;	81:1:1638:1648	5689025	14	True				
ANR	5689065	Identifier	sum		5689025	0					
ANR	5689066	ReturnType	R_API ut64		5689025	1					
ANR	5689067	Identifier	r_range_size		5689025	2					
ANR	5689068	ParameterList	RRange * rgs		5689025	3					
ANR	5689069	Parameter	RRange * rgs	74:24:1505:1515	5689025	0	True				
ANR	5689070	ParameterType	RRange *		5689025	0					
ANR	5689071	Identifier	rgs		5689025	1					
ANR	5689072	CFGEntryNode	ENTRY		5689025		True				
ANR	5689073	CFGExitNode	EXIT		5689025		True				
ANR	5689074	Symbol	r		5689025						
ANR	5689075	Symbol	r -> to		5689025						
ANR	5689076	Symbol	r -> fr		5689025						
ANR	5689077	Symbol	iter		5689025						
ANR	5689078	Symbol	sum		5689025						
ANR	5689079	Symbol	* r		5689025						
ANR	5689080	Symbol	rgs		5689025						
ANR	5689081	Function	r_range_new_from_string	84:0:1653:1797							
ANR	5689082	FunctionDef	r_range_new_from_string (const char * string)		5689081	0					
ANR	5689083	CompoundStatement		84:58:1711:1797	5689081	0					
ANR	5689084	IdentifierDeclStatement	RRange * rgs = r_range_new ( ) ;	85:1:1714:1742	5689081	0	True				
ANR	5689085	IdentifierDecl	* rgs = r_range_new ( )		5689081	0					
ANR	5689086	IdentifierDeclType	RRange *		5689081	0					
ANR	5689087	Identifier	rgs		5689081	1					
ANR	5689088	AssignmentExpression	* rgs = r_range_new ( )		5689081	2		=			
ANR	5689089	Identifier	rgs		5689081	0					
ANR	5689090	CallExpression	r_range_new ( )		5689081	1					
ANR	5689091	Callee	r_range_new		5689081	0					
ANR	5689092	Identifier	r_range_new		5689081	0					
ANR	5689093	ArgumentList			5689081	1					
ANR	5689094	ExpressionStatement	"r_range_add_from_string ( rgs , string )"	86:1:1745:1782	5689081	1	True				
ANR	5689095	CallExpression	"r_range_add_from_string ( rgs , string )"		5689081	0					
ANR	5689096	Callee	r_range_add_from_string		5689081	0					
ANR	5689097	Identifier	r_range_add_from_string		5689081	0					
ANR	5689098	ArgumentList	rgs		5689081	1					
ANR	5689099	Argument	rgs		5689081	0					
ANR	5689100	Identifier	rgs		5689081	0					
ANR	5689101	Argument	string		5689081	1					
ANR	5689102	Identifier	string		5689081	0					
ANR	5689103	ReturnStatement	return rgs ;	87:1:1785:1795	5689081	2	True				
ANR	5689104	Identifier	rgs		5689081	0					
ANR	5689105	ReturnType	R_API RRange *		5689081	1					
ANR	5689106	Identifier	r_range_new_from_string		5689081	2					
ANR	5689107	ParameterList	const char * string		5689081	3					
ANR	5689108	Parameter	const char * string	84:38:1691:1708	5689081	0	True				
ANR	5689109	ParameterType	const char *		5689081	0					
ANR	5689110	Identifier	string		5689081	1					
ANR	5689111	CFGEntryNode	ENTRY		5689081		True				
ANR	5689112	CFGExitNode	EXIT		5689081		True				
ANR	5689113	Symbol	r_range_new		5689081						
ANR	5689114	Symbol	string		5689081						
ANR	5689115	Symbol	rgs		5689081						
ANR	5689116	Function	r_range_add_from_string	90:0:1800:2728							
ANR	5689117	FunctionDef	"r_range_add_from_string (RRange * rgs , const char * string)"		5689116	0					
ANR	5689118	CompoundStatement		90:67:1867:2728	5689116	0					
ANR	5689119	IdentifierDeclStatement	"ut64 addr , addr2 ;"	91:1:1870:1886	5689116	0	True				
ANR	5689120	IdentifierDecl	addr		5689116	0					
ANR	5689121	IdentifierDeclType	ut64		5689116	0					
ANR	5689122	Identifier	addr		5689116	1					
ANR	5689123	IdentifierDecl	addr2		5689116	1					
ANR	5689124	IdentifierDeclType	ut64		5689116	0					
ANR	5689125	Identifier	addr2		5689116	1					
ANR	5689126	IdentifierDeclStatement	"int i , len = strlen ( string ) + 1 ;"	92:1:1889:1921	5689116	1	True				
ANR	5689127	IdentifierDecl	i		5689116	0					
ANR	5689128	IdentifierDeclType	int		5689116	0					
ANR	5689129	Identifier	i		5689116	1					
ANR	5689130	IdentifierDecl	len = strlen ( string ) + 1		5689116	1					
ANR	5689131	IdentifierDeclType	int		5689116	0					
ANR	5689132	Identifier	len		5689116	1					
ANR	5689133	AssignmentExpression	len = strlen ( string ) + 1		5689116	2		=			
ANR	5689134	Identifier	len		5689116	0					
ANR	5689135	AdditiveExpression	strlen ( string ) + 1		5689116	1		+			
ANR	5689136	CallExpression	strlen ( string )		5689116	0					
ANR	5689137	Callee	strlen		5689116	0					
ANR	5689138	Identifier	strlen		5689116	0					
ANR	5689139	ArgumentList	string		5689116	1					
ANR	5689140	Argument	string		5689116	0					
ANR	5689141	Identifier	string		5689116	0					
ANR	5689142	PrimaryExpression	1		5689116	1					
ANR	5689143	IdentifierDeclStatement	"char * str , * ostr = malloc ( len ) ;"	93:1:1924:1955	5689116	2	True				
ANR	5689144	IdentifierDecl	* str		5689116	0					
ANR	5689145	IdentifierDeclType	char *		5689116	0					
ANR	5689146	Identifier	str		5689116	1					
ANR	5689147	IdentifierDecl	* ostr = malloc ( len )		5689116	1					
ANR	5689148	IdentifierDeclType	char *		5689116	0					
ANR	5689149	Identifier	ostr		5689116	1					
ANR	5689150	AssignmentExpression	* ostr = malloc ( len )		5689116	2		=			
ANR	5689151	Identifier	ostr		5689116	0					
ANR	5689152	CallExpression	malloc ( len )		5689116	1					
ANR	5689153	Callee	malloc		5689116	0					
ANR	5689154	Identifier	malloc		5689116	0					
ANR	5689155	ArgumentList	len		5689116	1					
ANR	5689156	Argument	len		5689116	0					
ANR	5689157	Identifier	len		5689116	0					
ANR	5689158	IfStatement	if ( ! ostr )		5689116	3					
ANR	5689159	Condition	! ostr	94:5:1962:1966	5689116	0	True				
ANR	5689160	UnaryOperationExpression	! ostr		5689116	0					
ANR	5689161	UnaryOperator	!		5689116	0					
ANR	5689162	Identifier	ostr		5689116	1					
ANR	5689163	CompoundStatement		5:12:101:101	5689116	1					
ANR	5689164	ReturnStatement	return 0 ;	95:2:1973:1981	5689116	0	True				
ANR	5689165	PrimaryExpression	0		5689116	0					
ANR	5689166	IdentifierDeclStatement	char * p = str = ostr ;	97:1:1987:2007	5689116	4	True				
ANR	5689167	IdentifierDecl	* p = str = ostr		5689116	0					
ANR	5689168	IdentifierDeclType	char *		5689116	0					
ANR	5689169	Identifier	p		5689116	1					
ANR	5689170	AssignmentExpression	* p = str = ostr		5689116	2		=			
ANR	5689171	Identifier	p		5689116	0					
ANR	5689172	AssignmentExpression	str = ostr		5689116	1		=			
ANR	5689173	Identifier	str		5689116	0					
ANR	5689174	Identifier	ostr		5689116	1					
ANR	5689175	IdentifierDeclStatement	char * p2 = NULL ;	98:1:2010:2025	5689116	5	True				
ANR	5689176	IdentifierDecl	* p2 = NULL		5689116	0					
ANR	5689177	IdentifierDeclType	char *		5689116	0					
ANR	5689178	Identifier	p2		5689116	1					
ANR	5689179	AssignmentExpression	* p2 = NULL		5689116	2		=			
ANR	5689180	Identifier	NULL		5689116	0					
ANR	5689181	Identifier	NULL		5689116	1					
ANR	5689182	ExpressionStatement	"memcpy ( str , string , len )"	100:1:2029:2054	5689116	6	True				
ANR	5689183	CallExpression	"memcpy ( str , string , len )"		5689116	0					
ANR	5689184	Callee	memcpy		5689116	0					
ANR	5689185	Identifier	memcpy		5689116	0					
ANR	5689186	ArgumentList	str		5689116	1					
ANR	5689187	Argument	str		5689116	0					
ANR	5689188	Identifier	str		5689116	0					
ANR	5689189	Argument	string		5689116	1					
ANR	5689190	Identifier	string		5689116	0					
ANR	5689191	Argument	len		5689116	2					
ANR	5689192	Identifier	len		5689116	0					
ANR	5689193	ForStatement	for ( i = 0 ; i < len ; i ++ )		5689116	7					
ANR	5689194	ForInit	i = 0 ;	101:6:2062:2067	5689116	0	True				
ANR	5689195	AssignmentExpression	i = 0		5689116	0		=			
ANR	5689196	Identifier	i		5689116	0					
ANR	5689197	PrimaryExpression	0		5689116	1					
ANR	5689198	Condition	i < len	101:13:2069:2075	5689116	1	True				
ANR	5689199	RelationalExpression	i < len		5689116	0		<			
ANR	5689200	Identifier	i		5689116	0					
ANR	5689201	Identifier	len		5689116	1					
ANR	5689202	PostIncDecOperationExpression	i ++	101:22:2078:2080	5689116	2	True				
ANR	5689203	Identifier	i		5689116	0					
ANR	5689204	IncDec	++		5689116	1					
ANR	5689205	CompoundStatement		12:27:215:215	5689116	3					
ANR	5689206	SwitchStatement	switch ( str [ i ] )		5689116	0					
ANR	5689207	Condition	str [ i ]	102:10:2095:2100	5689116	0	True				
ANR	5689208	ArrayIndexing	str [ i ]		5689116	0					
ANR	5689209	Identifier	str		5689116	0					
ANR	5689210	Identifier	i		5689116	1					
ANR	5689211	CompoundStatement		13:18:235:235	5689116	1					
ANR	5689212	Label	case '-' :	103:2:2107:2115	5689116	0	True				
ANR	5689213	ExpressionStatement	str [ i ] = '\\0'	104:3:2120:2133	5689116	1	True				
ANR	5689214	AssignmentExpression	str [ i ] = '\\0'		5689116	0		=			
ANR	5689215	ArrayIndexing	str [ i ]		5689116	0					
ANR	5689216	Identifier	str		5689116	0					
ANR	5689217	Identifier	i		5689116	1					
ANR	5689218	PrimaryExpression	'\\0'		5689116	1					
ANR	5689219	ExpressionStatement	p2 = p	105:3:2138:2144	5689116	2	True				
ANR	5689220	AssignmentExpression	p2 = p		5689116	0		=			
ANR	5689221	Identifier	p2		5689116	0					
ANR	5689222	Identifier	p		5689116	1					
ANR	5689223	ExpressionStatement	p = str + i + 1	106:3:2149:2164	5689116	3	True				
ANR	5689224	AssignmentExpression	p = str + i + 1		5689116	0		=			
ANR	5689225	Identifier	p		5689116	0					
ANR	5689226	AdditiveExpression	str + i + 1		5689116	1		+			
ANR	5689227	Identifier	str		5689116	0					
ANR	5689228	AdditiveExpression	i + 1		5689116	1		+			
ANR	5689229	Identifier	i		5689116	0					
ANR	5689230	PrimaryExpression	1		5689116	1					
ANR	5689231	BreakStatement	break ;	107:3:2169:2174	5689116	4	True				
ANR	5689232	Label	"case ',' :"	108:2:2178:2186	5689116	5	True				
ANR	5689233	ExpressionStatement	str [ i ] = '\\0'	109:3:2191:2204	5689116	6	True				
ANR	5689234	AssignmentExpression	str [ i ] = '\\0'		5689116	0		=			
ANR	5689235	ArrayIndexing	str [ i ]		5689116	0					
ANR	5689236	Identifier	str		5689116	0					
ANR	5689237	Identifier	i		5689116	1					
ANR	5689238	PrimaryExpression	'\\0'		5689116	1					
ANR	5689239	IfStatement	if ( p2 )		5689116	7					
ANR	5689240	Condition	p2	110:7:2213:2214	5689116	0	True				
ANR	5689241	Identifier	p2		5689116	0					
ANR	5689242	CompoundStatement		21:11:349:349	5689116	1					
ANR	5689243	ExpressionStatement	"addr = r_num_get ( NULL , p )"	111:4:2223:2249	5689116	0	True				
ANR	5689244	AssignmentExpression	"addr = r_num_get ( NULL , p )"		5689116	0		=			
ANR	5689245	Identifier	addr		5689116	0					
ANR	5689246	CallExpression	"r_num_get ( NULL , p )"		5689116	1					
ANR	5689247	Callee	r_num_get		5689116	0					
ANR	5689248	Identifier	r_num_get		5689116	0					
ANR	5689249	ArgumentList	NULL		5689116	1					
ANR	5689250	Argument	NULL		5689116	0					
ANR	5689251	Identifier	NULL		5689116	0					
ANR	5689252	Argument	p		5689116	1					
ANR	5689253	Identifier	p		5689116	0					
ANR	5689254	ExpressionStatement	"addr2 = r_num_get ( NULL , p2 )"	112:4:2255:2283	5689116	1	True				
ANR	5689255	AssignmentExpression	"addr2 = r_num_get ( NULL , p2 )"		5689116	0		=			
ANR	5689256	Identifier	addr2		5689116	0					
ANR	5689257	CallExpression	"r_num_get ( NULL , p2 )"		5689116	1					
ANR	5689258	Callee	r_num_get		5689116	0					
ANR	5689259	Identifier	r_num_get		5689116	0					
ANR	5689260	ArgumentList	NULL		5689116	1					
ANR	5689261	Argument	NULL		5689116	0					
ANR	5689262	Identifier	NULL		5689116	0					
ANR	5689263	Argument	p2		5689116	1					
ANR	5689264	Identifier	p2		5689116	0					
ANR	5689265	ExpressionStatement	"r_range_add ( rgs , addr , addr2 , 1 )"	113:4:2289:2321	5689116	2	True				
ANR	5689266	CallExpression	"r_range_add ( rgs , addr , addr2 , 1 )"		5689116	0					
ANR	5689267	Callee	r_range_add		5689116	0					
ANR	5689268	Identifier	r_range_add		5689116	0					
ANR	5689269	ArgumentList	rgs		5689116	1					
ANR	5689270	Argument	rgs		5689116	0					
ANR	5689271	Identifier	rgs		5689116	0					
ANR	5689272	Argument	addr		5689116	1					
ANR	5689273	Identifier	addr		5689116	0					
ANR	5689274	Argument	addr2		5689116	2					
ANR	5689275	Identifier	addr2		5689116	0					
ANR	5689276	Argument	1		5689116	3					
ANR	5689277	PrimaryExpression	1		5689116	0					
ANR	5689278	ExpressionStatement	p2 = NULL	114:4:2327:2336	5689116	3	True				
ANR	5689279	AssignmentExpression	p2 = NULL		5689116	0		=			
ANR	5689280	Identifier	p2		5689116	0					
ANR	5689281	Identifier	NULL		5689116	1					
ANR	5689282	ElseStatement	else		5689116	0					
ANR	5689283	CompoundStatement		26:10:480:480	5689116	0					
ANR	5689284	ExpressionStatement	"addr = r_num_get ( NULL , p )"	116:4:2354:2380	5689116	0	True				
ANR	5689285	AssignmentExpression	"addr = r_num_get ( NULL , p )"		5689116	0		=			
ANR	5689286	Identifier	addr		5689116	0					
ANR	5689287	CallExpression	"r_num_get ( NULL , p )"		5689116	1					
ANR	5689288	Callee	r_num_get		5689116	0					
ANR	5689289	Identifier	r_num_get		5689116	0					
ANR	5689290	ArgumentList	NULL		5689116	1					
ANR	5689291	Argument	NULL		5689116	0					
ANR	5689292	Identifier	NULL		5689116	0					
ANR	5689293	Argument	p		5689116	1					
ANR	5689294	Identifier	p		5689116	0					
ANR	5689295	ExpressionStatement	"r_range_add ( rgs , addr , addr + 1 , 1 )"	117:4:2386:2422	5689116	1	True				
ANR	5689296	CallExpression	"r_range_add ( rgs , addr , addr + 1 , 1 )"		5689116	0					
ANR	5689297	Callee	r_range_add		5689116	0					
ANR	5689298	Identifier	r_range_add		5689116	0					
ANR	5689299	ArgumentList	rgs		5689116	1					
ANR	5689300	Argument	rgs		5689116	0					
ANR	5689301	Identifier	rgs		5689116	0					
ANR	5689302	Argument	addr		5689116	1					
ANR	5689303	Identifier	addr		5689116	0					
ANR	5689304	Argument	addr + 1		5689116	2					
ANR	5689305	AdditiveExpression	addr + 1		5689116	0		+			
ANR	5689306	Identifier	addr		5689116	0					
ANR	5689307	PrimaryExpression	1		5689116	1					
ANR	5689308	Argument	1		5689116	3					
ANR	5689309	PrimaryExpression	1		5689116	0					
ANR	5689310	ExpressionStatement	p = str + i + 1	119:3:2432:2447	5689116	8	True				
ANR	5689311	AssignmentExpression	p = str + i + 1		5689116	0		=			
ANR	5689312	Identifier	p		5689116	0					
ANR	5689313	AdditiveExpression	str + i + 1		5689116	1		+			
ANR	5689314	Identifier	str		5689116	0					
ANR	5689315	AdditiveExpression	i + 1		5689116	1		+			
ANR	5689316	Identifier	i		5689116	0					
ANR	5689317	PrimaryExpression	1		5689116	1					
ANR	5689318	ExpressionStatement	"str [ i ] = ','"	120:3:2452:2464	5689116	9	True				
ANR	5689319	AssignmentExpression	"str [ i ] = ','"		5689116	0		=			
ANR	5689320	ArrayIndexing	str [ i ]		5689116	0					
ANR	5689321	Identifier	str		5689116	0					
ANR	5689322	Identifier	i		5689116	1					
ANR	5689323	PrimaryExpression	"','"		5689116	1					
ANR	5689324	BreakStatement	break ;	121:3:2469:2474	5689116	10	True				
ANR	5689325	IfStatement	if ( p2 )		5689116	8					
ANR	5689326	Condition	p2	124:5:2488:2489	5689116	0	True				
ANR	5689327	Identifier	p2		5689116	0					
ANR	5689328	CompoundStatement		35:9:624:624	5689116	1					
ANR	5689329	ExpressionStatement	"addr = r_num_get ( NULL , p )"	125:2:2496:2522	5689116	0	True				
ANR	5689330	AssignmentExpression	"addr = r_num_get ( NULL , p )"		5689116	0		=			
ANR	5689331	Identifier	addr		5689116	0					
ANR	5689332	CallExpression	"r_num_get ( NULL , p )"		5689116	1					
ANR	5689333	Callee	r_num_get		5689116	0					
ANR	5689334	Identifier	r_num_get		5689116	0					
ANR	5689335	ArgumentList	NULL		5689116	1					
ANR	5689336	Argument	NULL		5689116	0					
ANR	5689337	Identifier	NULL		5689116	0					
ANR	5689338	Argument	p		5689116	1					
ANR	5689339	Identifier	p		5689116	0					
ANR	5689340	ExpressionStatement	"addr2 = r_num_get ( NULL , p2 )"	126:2:2526:2554	5689116	1	True				
ANR	5689341	AssignmentExpression	"addr2 = r_num_get ( NULL , p2 )"		5689116	0		=			
ANR	5689342	Identifier	addr2		5689116	0					
ANR	5689343	CallExpression	"r_num_get ( NULL , p2 )"		5689116	1					
ANR	5689344	Callee	r_num_get		5689116	0					
ANR	5689345	Identifier	r_num_get		5689116	0					
ANR	5689346	ArgumentList	NULL		5689116	1					
ANR	5689347	Argument	NULL		5689116	0					
ANR	5689348	Identifier	NULL		5689116	0					
ANR	5689349	Argument	p2		5689116	1					
ANR	5689350	Identifier	p2		5689116	0					
ANR	5689351	ExpressionStatement	"r_range_add ( rgs , addr , addr2 , 1 )"	127:2:2558:2591	5689116	2	True				
ANR	5689352	CallExpression	"r_range_add ( rgs , addr , addr2 , 1 )"		5689116	0					
ANR	5689353	Callee	r_range_add		5689116	0					
ANR	5689354	Identifier	r_range_add		5689116	0					
ANR	5689355	ArgumentList	rgs		5689116	1					
ANR	5689356	Argument	rgs		5689116	0					
ANR	5689357	Identifier	rgs		5689116	0					
ANR	5689358	Argument	addr		5689116	1					
ANR	5689359	Identifier	addr		5689116	0					
ANR	5689360	Argument	addr2		5689116	2					
ANR	5689361	Identifier	addr2		5689116	0					
ANR	5689362	Argument	1		5689116	3					
ANR	5689363	PrimaryExpression	1		5689116	0					
ANR	5689364	ElseStatement	else		5689116	0					
ANR	5689365	IfStatement	if ( p )		5689116	0					
ANR	5689366	Condition	p	129:5:2606:2606	5689116	0	True				
ANR	5689367	Identifier	p		5689116	0					
ANR	5689368	CompoundStatement		40:8:741:741	5689116	1					
ANR	5689369	ExpressionStatement	"addr = r_num_get ( NULL , p )"	130:2:2613:2639	5689116	0	True				
ANR	5689370	AssignmentExpression	"addr = r_num_get ( NULL , p )"		5689116	0		=			
ANR	5689371	Identifier	addr		5689116	0					
ANR	5689372	CallExpression	"r_num_get ( NULL , p )"		5689116	1					
ANR	5689373	Callee	r_num_get		5689116	0					
ANR	5689374	Identifier	r_num_get		5689116	0					
ANR	5689375	ArgumentList	NULL		5689116	1					
ANR	5689376	Argument	NULL		5689116	0					
ANR	5689377	Identifier	NULL		5689116	0					
ANR	5689378	Argument	p		5689116	1					
ANR	5689379	Identifier	p		5689116	0					
ANR	5689380	ExpressionStatement	"r_range_add ( rgs , addr , addr + 1 , 1 )"	131:2:2643:2679	5689116	1	True				
ANR	5689381	CallExpression	"r_range_add ( rgs , addr , addr + 1 , 1 )"		5689116	0					
ANR	5689382	Callee	r_range_add		5689116	0					
ANR	5689383	Identifier	r_range_add		5689116	0					
ANR	5689384	ArgumentList	rgs		5689116	1					
ANR	5689385	Argument	rgs		5689116	0					
ANR	5689386	Identifier	rgs		5689116	0					
ANR	5689387	Argument	addr		5689116	1					
ANR	5689388	Identifier	addr		5689116	0					
ANR	5689389	Argument	addr + 1		5689116	2					
ANR	5689390	AdditiveExpression	addr + 1		5689116	0		+			
ANR	5689391	Identifier	addr		5689116	0					
ANR	5689392	PrimaryExpression	1		5689116	1					
ANR	5689393	Argument	1		5689116	3					
ANR	5689394	PrimaryExpression	1		5689116	0					
ANR	5689395	ExpressionStatement	free ( ostr )	133:1:2685:2696	5689116	9	True				
ANR	5689396	CallExpression	free ( ostr )		5689116	0					
ANR	5689397	Callee	free		5689116	0					
ANR	5689398	Identifier	free		5689116	0					
ANR	5689399	ArgumentList	ostr		5689116	1					
ANR	5689400	Argument	ostr		5689116	0					
ANR	5689401	Identifier	ostr		5689116	0					
ANR	5689402	ReturnStatement	return rgs ? rgs -> changed : 0 ;	134:1:2699:2726	5689116	10	True				
ANR	5689403	ConditionalExpression	rgs ? rgs -> changed : 0		5689116	0					
ANR	5689404	Condition	rgs		5689116	0					
ANR	5689405	Identifier	rgs		5689116	0					
ANR	5689406	PtrMemberAccess	rgs -> changed		5689116	1					
ANR	5689407	Identifier	rgs		5689116	0					
ANR	5689408	Identifier	changed		5689116	1					
ANR	5689409	PrimaryExpression	0		5689116	2					
ANR	5689410	ReturnType	R_API int		5689116	1					
ANR	5689411	Identifier	r_range_add_from_string		5689116	2					
ANR	5689412	ParameterList	"RRange * rgs , const char * string"		5689116	3					
ANR	5689413	Parameter	RRange * rgs	90:34:1834:1844	5689116	0	True				
ANR	5689414	ParameterType	RRange *		5689116	0					
ANR	5689415	Identifier	rgs		5689116	1					
ANR	5689416	Parameter	const char * string	90:47:1847:1864	5689116	1	True				
ANR	5689417	ParameterType	const char *		5689116	0					
ANR	5689418	Identifier	string		5689116	1					
ANR	5689419	CFGEntryNode	ENTRY		5689116		True				
ANR	5689420	CFGExitNode	EXIT		5689116		True				
ANR	5689421	Symbol	malloc		5689116						
ANR	5689422	Symbol	p2		5689116						
ANR	5689423	Symbol	NULL		5689116						
ANR	5689424	Symbol	string		5689116						
ANR	5689425	Symbol	addr2		5689116						
ANR	5689426	Symbol	* rgs		5689116						
ANR	5689427	Symbol	i		5689116						
ANR	5689428	Symbol	rgs -> changed		5689116						
ANR	5689429	Symbol	str		5689116						
ANR	5689430	Symbol	p		5689116						
ANR	5689431	Symbol	strlen		5689116						
ANR	5689432	Symbol	* i		5689116						
ANR	5689433	Symbol	len		5689116						
ANR	5689434	Symbol	ostr		5689116						
ANR	5689435	Symbol	r_num_get		5689116						
ANR	5689436	Symbol	* str		5689116						
ANR	5689437	Symbol	addr		5689116						
ANR	5689438	Symbol	rgs		5689116						
ANR	5689439	Function	r_range_add	146:0:3115:4013							
ANR	5689440	FunctionDef	"r_range_add (RRange * rgs , ut64 fr , ut64 to , int rw)"		5689439	0					
ANR	5689441	CompoundStatement		146:63:3178:4013	5689439	0					
ANR	5689442	IdentifierDeclStatement	RListIter * iter ;	147:1:3181:3196	5689439	0	True				
ANR	5689443	IdentifierDecl	* iter		5689439	0					
ANR	5689444	IdentifierDeclType	RListIter *		5689439	0					
ANR	5689445	Identifier	iter		5689439	1					
ANR	5689446	IdentifierDeclStatement	"RRangeItem * r , * ret = NULL ;"	148:1:3199:3225	5689439	1	True				
ANR	5689447	IdentifierDecl	* r		5689439	0					
ANR	5689448	IdentifierDeclType	RRangeItem *		5689439	0					
ANR	5689449	Identifier	r		5689439	1					
ANR	5689450	IdentifierDecl	* ret = NULL		5689439	1					
ANR	5689451	IdentifierDeclType	RRangeItem *		5689439	0					
ANR	5689452	Identifier	ret		5689439	1					
ANR	5689453	AssignmentExpression	* ret = NULL		5689439	2		=			
ANR	5689454	Identifier	NULL		5689439	0					
ANR	5689455	Identifier	NULL		5689439	1					
ANR	5689456	IdentifierDeclStatement	int add = 1 ;	149:1:3228:3239	5689439	2	True				
ANR	5689457	IdentifierDecl	add = 1		5689439	0					
ANR	5689458	IdentifierDeclType	int		5689439	0					
ANR	5689459	Identifier	add		5689439	1					
ANR	5689460	AssignmentExpression	add = 1		5689439	2		=			
ANR	5689461	Identifier	add		5689439	0					
ANR	5689462	PrimaryExpression	1		5689439	1					
ANR	5689463	ExpressionStatement	"r_num_minmax_swap ( & fr , & to )"	151:1:3243:3271	5689439	3	True				
ANR	5689464	CallExpression	"r_num_minmax_swap ( & fr , & to )"		5689439	0					
ANR	5689465	Callee	r_num_minmax_swap		5689439	0					
ANR	5689466	Identifier	r_num_minmax_swap		5689439	0					
ANR	5689467	ArgumentList	& fr		5689439	1					
ANR	5689468	Argument	& fr		5689439	0					
ANR	5689469	UnaryOperationExpression	& fr		5689439	0					
ANR	5689470	UnaryOperator	&		5689439	0					
ANR	5689471	Identifier	fr		5689439	1					
ANR	5689472	Argument	& to		5689439	1					
ANR	5689473	UnaryOperationExpression	& to		5689439	0					
ANR	5689474	UnaryOperator	&		5689439	0					
ANR	5689475	Identifier	to		5689439	1					
ANR	5689476	Statement	r_list_foreach	152:1:3274:3287	5689439	4	True				
ANR	5689477	Statement	(	152:16:3289:3289	5689439	5	True				
ANR	5689478	Statement	rgs	152:17:3290:3292	5689439	6	True				
ANR	5689479	Statement	->	152:20:3293:3294	5689439	7	True				
ANR	5689480	Statement	ranges	152:22:3295:3300	5689439	8	True				
ANR	5689481	Statement	","	152:28:3301:3301	5689439	9	True				
ANR	5689482	Statement	iter	152:30:3303:3306	5689439	10	True				
ANR	5689483	Statement	","	152:34:3307:3307	5689439	11	True				
ANR	5689484	Statement	r	152:36:3309:3309	5689439	12	True				
ANR	5689485	Statement	)	152:37:3310:3310	5689439	13	True				
ANR	5689486	CompoundStatement		7:39:133:133	5689439	14					
ANR	5689487	IfStatement	if ( r -> fr == fr && r -> to == to )		5689439	0					
ANR	5689488	Condition	r -> fr == fr && r -> to == to	153:6:3320:3345	5689439	0	True				
ANR	5689489	AndExpression	r -> fr == fr && r -> to == to		5689439	0		&&			
ANR	5689490	EqualityExpression	r -> fr == fr		5689439	0		==			
ANR	5689491	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689492	Identifier	r		5689439	0					
ANR	5689493	Identifier	fr		5689439	1					
ANR	5689494	Identifier	fr		5689439	1					
ANR	5689495	EqualityExpression	r -> to == to		5689439	1		==			
ANR	5689496	PtrMemberAccess	r -> to		5689439	0					
ANR	5689497	Identifier	r		5689439	0					
ANR	5689498	Identifier	to		5689439	1					
ANR	5689499	Identifier	to		5689439	1					
ANR	5689500	CompoundStatement		8:34:169:169	5689439	1					
ANR	5689501	ExpressionStatement	add = 0	154:3:3353:3360	5689439	0	True				
ANR	5689502	AssignmentExpression	add = 0		5689439	0		=			
ANR	5689503	Identifier	add		5689439	0					
ANR	5689504	PrimaryExpression	0		5689439	1					
ANR	5689505	ElseStatement	else		5689439	0					
ANR	5689506	IfStatement	if ( r -> fr <= fr && r -> fr <= to && r -> to >= fr && r -> to <= to )		5689439	0					
ANR	5689507	Condition	r -> fr <= fr && r -> fr <= to && r -> to >= fr && r -> to <= to	155:13:3375:3430	5689439	0	True				
ANR	5689508	AndExpression	r -> fr <= fr && r -> fr <= to && r -> to >= fr && r -> to <= to		5689439	0		&&			
ANR	5689509	RelationalExpression	r -> fr <= fr		5689439	0		<=			
ANR	5689510	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689511	Identifier	r		5689439	0					
ANR	5689512	Identifier	fr		5689439	1					
ANR	5689513	Identifier	fr		5689439	1					
ANR	5689514	AndExpression	r -> fr <= to && r -> to >= fr && r -> to <= to		5689439	1		&&			
ANR	5689515	RelationalExpression	r -> fr <= to		5689439	0		<=			
ANR	5689516	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689517	Identifier	r		5689439	0					
ANR	5689518	Identifier	fr		5689439	1					
ANR	5689519	Identifier	to		5689439	1					
ANR	5689520	AndExpression	r -> to >= fr && r -> to <= to		5689439	1		&&			
ANR	5689521	RelationalExpression	r -> to >= fr		5689439	0		>=			
ANR	5689522	PtrMemberAccess	r -> to		5689439	0					
ANR	5689523	Identifier	r		5689439	0					
ANR	5689524	Identifier	to		5689439	1					
ANR	5689525	Identifier	fr		5689439	1					
ANR	5689526	RelationalExpression	r -> to <= to		5689439	1		<=			
ANR	5689527	PtrMemberAccess	r -> to		5689439	0					
ANR	5689528	Identifier	r		5689439	0					
ANR	5689529	Identifier	to		5689439	1					
ANR	5689530	Identifier	to		5689439	1					
ANR	5689531	CompoundStatement		10:71:254:254	5689439	1					
ANR	5689532	ExpressionStatement	r -> to = to	156:3:3438:3448	5689439	0	True				
ANR	5689533	AssignmentExpression	r -> to = to		5689439	0		=			
ANR	5689534	PtrMemberAccess	r -> to		5689439	0					
ANR	5689535	Identifier	r		5689439	0					
ANR	5689536	Identifier	to		5689439	1					
ANR	5689537	Identifier	to		5689439	1					
ANR	5689538	ExpressionStatement	ret = r	157:3:3453:3460	5689439	1	True				
ANR	5689539	AssignmentExpression	ret = r		5689439	0		=			
ANR	5689540	Identifier	ret		5689439	0					
ANR	5689541	Identifier	r		5689439	1					
ANR	5689542	ExpressionStatement	add = 0	158:3:3465:3472	5689439	2	True				
ANR	5689543	AssignmentExpression	add = 0		5689439	0		=			
ANR	5689544	Identifier	add		5689439	0					
ANR	5689545	PrimaryExpression	0		5689439	1					
ANR	5689546	ElseStatement	else		5689439	0					
ANR	5689547	IfStatement	if ( r -> fr >= fr && r -> fr <= to && r -> to >= fr && r -> to >= to )		5689439	0					
ANR	5689548	Condition	r -> fr >= fr && r -> fr <= to && r -> to >= fr && r -> to >= to	159:13:3487:3542	5689439	0	True				
ANR	5689549	AndExpression	r -> fr >= fr && r -> fr <= to && r -> to >= fr && r -> to >= to		5689439	0		&&			
ANR	5689550	RelationalExpression	r -> fr >= fr		5689439	0		>=			
ANR	5689551	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689552	Identifier	r		5689439	0					
ANR	5689553	Identifier	fr		5689439	1					
ANR	5689554	Identifier	fr		5689439	1					
ANR	5689555	AndExpression	r -> fr <= to && r -> to >= fr && r -> to >= to		5689439	1		&&			
ANR	5689556	RelationalExpression	r -> fr <= to		5689439	0		<=			
ANR	5689557	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689558	Identifier	r		5689439	0					
ANR	5689559	Identifier	fr		5689439	1					
ANR	5689560	Identifier	to		5689439	1					
ANR	5689561	AndExpression	r -> to >= fr && r -> to >= to		5689439	1		&&			
ANR	5689562	RelationalExpression	r -> to >= fr		5689439	0		>=			
ANR	5689563	PtrMemberAccess	r -> to		5689439	0					
ANR	5689564	Identifier	r		5689439	0					
ANR	5689565	Identifier	to		5689439	1					
ANR	5689566	Identifier	fr		5689439	1					
ANR	5689567	RelationalExpression	r -> to >= to		5689439	1		>=			
ANR	5689568	PtrMemberAccess	r -> to		5689439	0					
ANR	5689569	Identifier	r		5689439	0					
ANR	5689570	Identifier	to		5689439	1					
ANR	5689571	Identifier	to		5689439	1					
ANR	5689572	CompoundStatement		14:71:366:366	5689439	1					
ANR	5689573	ExpressionStatement	r -> fr = fr	160:3:3550:3560	5689439	0	True				
ANR	5689574	AssignmentExpression	r -> fr = fr		5689439	0		=			
ANR	5689575	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689576	Identifier	r		5689439	0					
ANR	5689577	Identifier	fr		5689439	1					
ANR	5689578	Identifier	fr		5689439	1					
ANR	5689579	ExpressionStatement	ret = r	161:3:3565:3572	5689439	1	True				
ANR	5689580	AssignmentExpression	ret = r		5689439	0		=			
ANR	5689581	Identifier	ret		5689439	0					
ANR	5689582	Identifier	r		5689439	1					
ANR	5689583	ExpressionStatement	add = 0	162:3:3577:3584	5689439	2	True				
ANR	5689584	AssignmentExpression	add = 0		5689439	0		=			
ANR	5689585	Identifier	add		5689439	0					
ANR	5689586	PrimaryExpression	0		5689439	1					
ANR	5689587	ElseStatement	else		5689439	0					
ANR	5689588	IfStatement	if ( r -> fr <= fr && r -> fr <= to && r -> to >= fr && r -> to >= to )		5689439	0					
ANR	5689589	Condition	r -> fr <= fr && r -> fr <= to && r -> to >= fr && r -> to >= to	163:13:3599:3654	5689439	0	True				
ANR	5689590	AndExpression	r -> fr <= fr && r -> fr <= to && r -> to >= fr && r -> to >= to		5689439	0		&&			
ANR	5689591	RelationalExpression	r -> fr <= fr		5689439	0		<=			
ANR	5689592	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689593	Identifier	r		5689439	0					
ANR	5689594	Identifier	fr		5689439	1					
ANR	5689595	Identifier	fr		5689439	1					
ANR	5689596	AndExpression	r -> fr <= to && r -> to >= fr && r -> to >= to		5689439	1		&&			
ANR	5689597	RelationalExpression	r -> fr <= to		5689439	0		<=			
ANR	5689598	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689599	Identifier	r		5689439	0					
ANR	5689600	Identifier	fr		5689439	1					
ANR	5689601	Identifier	to		5689439	1					
ANR	5689602	AndExpression	r -> to >= fr && r -> to >= to		5689439	1		&&			
ANR	5689603	RelationalExpression	r -> to >= fr		5689439	0		>=			
ANR	5689604	PtrMemberAccess	r -> to		5689439	0					
ANR	5689605	Identifier	r		5689439	0					
ANR	5689606	Identifier	to		5689439	1					
ANR	5689607	Identifier	fr		5689439	1					
ANR	5689608	RelationalExpression	r -> to >= to		5689439	1		>=			
ANR	5689609	PtrMemberAccess	r -> to		5689439	0					
ANR	5689610	Identifier	r		5689439	0					
ANR	5689611	Identifier	to		5689439	1					
ANR	5689612	Identifier	to		5689439	1					
ANR	5689613	CompoundStatement		18:71:478:478	5689439	1					
ANR	5689614	ExpressionStatement	add = 0	165:3:3678:3685	5689439	0	True				
ANR	5689615	AssignmentExpression	add = 0		5689439	0		=			
ANR	5689616	Identifier	add		5689439	0					
ANR	5689617	PrimaryExpression	0		5689439	1					
ANR	5689618	ElseStatement	else		5689439	0					
ANR	5689619	IfStatement	if ( r -> fr >= fr && r -> fr <= to && r -> to >= fr && r -> to <= to )		5689439	0					
ANR	5689620	Condition	r -> fr >= fr && r -> fr <= to && r -> to >= fr && r -> to <= to	166:13:3700:3755	5689439	0	True				
ANR	5689621	AndExpression	r -> fr >= fr && r -> fr <= to && r -> to >= fr && r -> to <= to		5689439	0		&&			
ANR	5689622	RelationalExpression	r -> fr >= fr		5689439	0		>=			
ANR	5689623	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689624	Identifier	r		5689439	0					
ANR	5689625	Identifier	fr		5689439	1					
ANR	5689626	Identifier	fr		5689439	1					
ANR	5689627	AndExpression	r -> fr <= to && r -> to >= fr && r -> to <= to		5689439	1		&&			
ANR	5689628	RelationalExpression	r -> fr <= to		5689439	0		<=			
ANR	5689629	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689630	Identifier	r		5689439	0					
ANR	5689631	Identifier	fr		5689439	1					
ANR	5689632	Identifier	to		5689439	1					
ANR	5689633	AndExpression	r -> to >= fr && r -> to <= to		5689439	1		&&			
ANR	5689634	RelationalExpression	r -> to >= fr		5689439	0		>=			
ANR	5689635	PtrMemberAccess	r -> to		5689439	0					
ANR	5689636	Identifier	r		5689439	0					
ANR	5689637	Identifier	to		5689439	1					
ANR	5689638	Identifier	fr		5689439	1					
ANR	5689639	RelationalExpression	r -> to <= to		5689439	1		<=			
ANR	5689640	PtrMemberAccess	r -> to		5689439	0					
ANR	5689641	Identifier	r		5689439	0					
ANR	5689642	Identifier	to		5689439	1					
ANR	5689643	Identifier	to		5689439	1					
ANR	5689644	CompoundStatement		21:71:579:579	5689439	1					
ANR	5689645	ExpressionStatement	r -> fr = fr	167:3:3763:3773	5689439	0	True				
ANR	5689646	AssignmentExpression	r -> fr = fr		5689439	0		=			
ANR	5689647	PtrMemberAccess	r -> fr		5689439	0					
ANR	5689648	Identifier	r		5689439	0					
ANR	5689649	Identifier	fr		5689439	1					
ANR	5689650	Identifier	fr		5689439	1					
ANR	5689651	ExpressionStatement	r -> to = to	168:3:3778:3788	5689439	1	True				
ANR	5689652	AssignmentExpression	r -> to = to		5689439	0		=			
ANR	5689653	PtrMemberAccess	r -> to		5689439	0					
ANR	5689654	Identifier	r		5689439	0					
ANR	5689655	Identifier	to		5689439	1					
ANR	5689656	Identifier	to		5689439	1					
ANR	5689657	ExpressionStatement	ret = r	169:3:3793:3800	5689439	2	True				
ANR	5689658	AssignmentExpression	ret = r		5689439	0		=			
ANR	5689659	Identifier	ret		5689439	0					
ANR	5689660	Identifier	r		5689439	1					
ANR	5689661	ExpressionStatement	add = 0	170:3:3805:3812	5689439	3	True				
ANR	5689662	AssignmentExpression	add = 0		5689439	0		=			
ANR	5689663	Identifier	add		5689439	0					
ANR	5689664	PrimaryExpression	0		5689439	1					
ANR	5689665	IfStatement	if ( rw && add )		5689439	15					
ANR	5689666	Condition	rw && add	174:5:3827:3835	5689439	0	True				
ANR	5689667	AndExpression	rw && add		5689439	0		&&			
ANR	5689668	Identifier	rw		5689439	0					
ANR	5689669	Identifier	add		5689439	1					
ANR	5689670	CompoundStatement		29:16:659:659	5689439	1					
ANR	5689671	ExpressionStatement	ret = R_NEW ( RRangeItem )	175:2:3842:3866	5689439	0	True				
ANR	5689672	AssignmentExpression	ret = R_NEW ( RRangeItem )		5689439	0		=			
ANR	5689673	Identifier	ret		5689439	0					
ANR	5689674	CallExpression	R_NEW ( RRangeItem )		5689439	1					
ANR	5689675	Callee	R_NEW		5689439	0					
ANR	5689676	Identifier	R_NEW		5689439	0					
ANR	5689677	ArgumentList	RRangeItem		5689439	1					
ANR	5689678	Argument	RRangeItem		5689439	0					
ANR	5689679	Identifier	RRangeItem		5689439	0					
ANR	5689680	ExpressionStatement	ret -> fr = fr	176:2:3870:3882	5689439	1	True				
ANR	5689681	AssignmentExpression	ret -> fr = fr		5689439	0		=			
ANR	5689682	PtrMemberAccess	ret -> fr		5689439	0					
ANR	5689683	Identifier	ret		5689439	0					
ANR	5689684	Identifier	fr		5689439	1					
ANR	5689685	Identifier	fr		5689439	1					
ANR	5689686	ExpressionStatement	ret -> to = to	177:2:3886:3898	5689439	2	True				
ANR	5689687	AssignmentExpression	ret -> to = to		5689439	0		=			
ANR	5689688	PtrMemberAccess	ret -> to		5689439	0					
ANR	5689689	Identifier	ret		5689439	0					
ANR	5689690	Identifier	to		5689439	1					
ANR	5689691	Identifier	to		5689439	1					
ANR	5689692	ExpressionStatement	ret -> datalen = 0	178:2:3902:3918	5689439	3	True				
ANR	5689693	AssignmentExpression	ret -> datalen = 0		5689439	0		=			
ANR	5689694	PtrMemberAccess	ret -> datalen		5689439	0					
ANR	5689695	Identifier	ret		5689439	0					
ANR	5689696	Identifier	datalen		5689439	1					
ANR	5689697	PrimaryExpression	0		5689439	1					
ANR	5689698	ExpressionStatement	ret -> data = NULL	179:2:3922:3938	5689439	4	True				
ANR	5689699	AssignmentExpression	ret -> data = NULL		5689439	0		=			
ANR	5689700	PtrMemberAccess	ret -> data		5689439	0					
ANR	5689701	Identifier	ret		5689439	0					
ANR	5689702	Identifier	data		5689439	1					
ANR	5689703	Identifier	NULL		5689439	1					
ANR	5689704	ExpressionStatement	"r_list_append ( rgs -> ranges , ret )"	180:2:3942:3974	5689439	5	True				
ANR	5689705	CallExpression	"r_list_append ( rgs -> ranges , ret )"		5689439	0					
ANR	5689706	Callee	r_list_append		5689439	0					
ANR	5689707	Identifier	r_list_append		5689439	0					
ANR	5689708	ArgumentList	rgs -> ranges		5689439	1					
ANR	5689709	Argument	rgs -> ranges		5689439	0					
ANR	5689710	PtrMemberAccess	rgs -> ranges		5689439	0					
ANR	5689711	Identifier	rgs		5689439	0					
ANR	5689712	Identifier	ranges		5689439	1					
ANR	5689713	Argument	ret		5689439	1					
ANR	5689714	Identifier	ret		5689439	0					
ANR	5689715	ExpressionStatement	rgs -> changed = 1	181:2:3978:3994	5689439	6	True				
ANR	5689716	AssignmentExpression	rgs -> changed = 1		5689439	0		=			
ANR	5689717	PtrMemberAccess	rgs -> changed		5689439	0					
ANR	5689718	Identifier	rgs		5689439	0					
ANR	5689719	Identifier	changed		5689439	1					
ANR	5689720	PrimaryExpression	1		5689439	1					
ANR	5689721	ReturnStatement	return ret ;	184:1:4001:4011	5689439	16	True				
ANR	5689722	Identifier	ret		5689439	0					
ANR	5689723	ReturnType	RRangeItem *		5689439	1					
ANR	5689724	Identifier	r_range_add		5689439	2					
ANR	5689725	ParameterList	"RRange * rgs , ut64 fr , ut64 to , int rw"		5689439	3					
ANR	5689726	Parameter	RRange * rgs	146:24:3139:3149	5689439	0	True				
ANR	5689727	ParameterType	RRange *		5689439	0					
ANR	5689728	Identifier	rgs		5689439	1					
ANR	5689729	Parameter	ut64 fr	146:37:3152:3158	5689439	1	True				
ANR	5689730	ParameterType	ut64		5689439	0					
ANR	5689731	Identifier	fr		5689439	1					
ANR	5689732	Parameter	ut64 to	146:46:3161:3167	5689439	2	True				
ANR	5689733	ParameterType	ut64		5689439	0					
ANR	5689734	Identifier	to		5689439	1					
ANR	5689735	Parameter	int rw	146:55:3170:3175	5689439	3	True				
ANR	5689736	ParameterType	int		5689439	0					
ANR	5689737	Identifier	rw		5689439	1					
ANR	5689738	CFGEntryNode	ENTRY		5689439		True				
ANR	5689739	CFGExitNode	EXIT		5689439		True				
ANR	5689740	Symbol	ret		5689439						
ANR	5689741	Symbol	add		5689439						
ANR	5689742	Symbol	NULL		5689439						
ANR	5689743	Symbol	& to		5689439						
ANR	5689744	Symbol	r -> to		5689439						
ANR	5689745	Symbol	rgs -> ranges		5689439						
ANR	5689746	Symbol	rw		5689439						
ANR	5689747	Symbol	ret -> fr		5689439						
ANR	5689748	Symbol	* rgs		5689439						
ANR	5689749	Symbol	iter		5689439						
ANR	5689750	Symbol	ret -> datalen		5689439						
ANR	5689751	Symbol	* ret		5689439						
ANR	5689752	Symbol	fr		5689439						
ANR	5689753	Symbol	rgs -> changed		5689439						
ANR	5689754	Symbol	r		5689439						
ANR	5689755	Symbol	r -> fr		5689439						
ANR	5689756	Symbol	ret -> data		5689439						
ANR	5689757	Symbol	& fr		5689439						
ANR	5689758	Symbol	RRangeItem		5689439						
ANR	5689759	Symbol	to		5689439						
ANR	5689760	Symbol	* r		5689439						
ANR	5689761	Symbol	R_NEW		5689439						
ANR	5689762	Symbol	rgs		5689439						
ANR	5689763	Symbol	ret -> to		5689439						
ANR	5689764	Function	r_range_sub	196:0:4410:5160							
ANR	5689765	FunctionDef	"r_range_sub (RRange * rgs , ut64 fr , ut64 to)"		5689764	0					
ANR	5689766	CompoundStatement		196:53:4463:5160	5689764	0					
ANR	5689767	IdentifierDeclStatement	RRangeItem * r ;	197:1:4466:4479	5689764	0	True				
ANR	5689768	IdentifierDecl	* r		5689764	0					
ANR	5689769	IdentifierDeclType	RRangeItem *		5689764	0					
ANR	5689770	Identifier	r		5689764	1					
ANR	5689771	IdentifierDeclStatement	RListIter * iter ;	198:1:4482:4497	5689764	1	True				
ANR	5689772	IdentifierDecl	* iter		5689764	0					
ANR	5689773	IdentifierDeclType	RListIter *		5689764	0					
ANR	5689774	Identifier	iter		5689764	1					
ANR	5689775	ExpressionStatement	"r_num_minmax_swap ( & fr , & to )"	200:1:4501:4529	5689764	2	True				
ANR	5689776	CallExpression	"r_num_minmax_swap ( & fr , & to )"		5689764	0					
ANR	5689777	Callee	r_num_minmax_swap		5689764	0					
ANR	5689778	Identifier	r_num_minmax_swap		5689764	0					
ANR	5689779	ArgumentList	& fr		5689764	1					
ANR	5689780	Argument	& fr		5689764	0					
ANR	5689781	UnaryOperationExpression	& fr		5689764	0					
ANR	5689782	UnaryOperator	&		5689764	0					
ANR	5689783	Identifier	fr		5689764	1					
ANR	5689784	Argument	& to		5689764	1					
ANR	5689785	UnaryOperationExpression	& to		5689764	0					
ANR	5689786	UnaryOperator	&		5689764	0					
ANR	5689787	Identifier	to		5689764	1					
ANR	5689788	Label	__reloop :	202:1:4533:4541	5689764	3	True				
ANR	5689789	Identifier	__reloop		5689764	0					
ANR	5689790	Statement	r_list_foreach	203:1:4544:4557	5689764	4	True				
ANR	5689791	Statement	(	203:16:4559:4559	5689764	5	True				
ANR	5689792	Statement	rgs	203:17:4560:4562	5689764	6	True				
ANR	5689793	Statement	->	203:20:4563:4564	5689764	7	True				
ANR	5689794	Statement	ranges	203:22:4565:4570	5689764	8	True				
ANR	5689795	Statement	","	203:28:4571:4571	5689764	9	True				
ANR	5689796	Statement	iter	203:30:4573:4576	5689764	10	True				
ANR	5689797	Statement	","	203:34:4577:4577	5689764	11	True				
ANR	5689798	Statement	r	203:36:4579:4579	5689764	12	True				
ANR	5689799	Statement	)	203:37:4580:4580	5689764	13	True				
ANR	5689800	CompoundStatement		8:39:118:118	5689764	14					
ANR	5689801	IfStatement	if ( r -> fr < fr && r -> fr < to && r -> to > fr && r -> to < to )		5689764	0					
ANR	5689802	Condition	r -> fr < fr && r -> fr < to && r -> to > fr && r -> to < to	205:6:4608:4659	5689764	0	True				
ANR	5689803	AndExpression	r -> fr < fr && r -> fr < to && r -> to > fr && r -> to < to		5689764	0		&&			
ANR	5689804	RelationalExpression	r -> fr < fr		5689764	0		<			
ANR	5689805	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689806	Identifier	r		5689764	0					
ANR	5689807	Identifier	fr		5689764	1					
ANR	5689808	Identifier	fr		5689764	1					
ANR	5689809	AndExpression	r -> fr < to && r -> to > fr && r -> to < to		5689764	1		&&			
ANR	5689810	RelationalExpression	r -> fr < to		5689764	0		<			
ANR	5689811	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689812	Identifier	r		5689764	0					
ANR	5689813	Identifier	fr		5689764	1					
ANR	5689814	Identifier	to		5689764	1					
ANR	5689815	AndExpression	r -> to > fr && r -> to < to		5689764	1		&&			
ANR	5689816	RelationalExpression	r -> to > fr		5689764	0		>			
ANR	5689817	PtrMemberAccess	r -> to		5689764	0					
ANR	5689818	Identifier	r		5689764	0					
ANR	5689819	Identifier	to		5689764	1					
ANR	5689820	Identifier	fr		5689764	1					
ANR	5689821	RelationalExpression	r -> to < to		5689764	1		<			
ANR	5689822	PtrMemberAccess	r -> to		5689764	0					
ANR	5689823	Identifier	r		5689764	0					
ANR	5689824	Identifier	to		5689764	1					
ANR	5689825	Identifier	to		5689764	1					
ANR	5689826	CompoundStatement		10:60:198:198	5689764	1					
ANR	5689827	ExpressionStatement	r -> to = fr	206:3:4667:4677	5689764	0	True				
ANR	5689828	AssignmentExpression	r -> to = fr		5689764	0		=			
ANR	5689829	PtrMemberAccess	r -> to		5689764	0					
ANR	5689830	Identifier	r		5689764	0					
ANR	5689831	Identifier	to		5689764	1					
ANR	5689832	Identifier	fr		5689764	1					
ANR	5689833	ElseStatement	else		5689764	0					
ANR	5689834	IfStatement	if ( r -> fr > fr && r -> fr < to && r -> to > fr && r -> to > to )		5689764	0					
ANR	5689835	Condition	r -> fr > fr && r -> fr < to && r -> to > fr && r -> to > to	207:13:4692:4743	5689764	0	True				
ANR	5689836	AndExpression	r -> fr > fr && r -> fr < to && r -> to > fr && r -> to > to		5689764	0		&&			
ANR	5689837	RelationalExpression	r -> fr > fr		5689764	0		>			
ANR	5689838	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689839	Identifier	r		5689764	0					
ANR	5689840	Identifier	fr		5689764	1					
ANR	5689841	Identifier	fr		5689764	1					
ANR	5689842	AndExpression	r -> fr < to && r -> to > fr && r -> to > to		5689764	1		&&			
ANR	5689843	RelationalExpression	r -> fr < to		5689764	0		<			
ANR	5689844	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689845	Identifier	r		5689764	0					
ANR	5689846	Identifier	fr		5689764	1					
ANR	5689847	Identifier	to		5689764	1					
ANR	5689848	AndExpression	r -> to > fr && r -> to > to		5689764	1		&&			
ANR	5689849	RelationalExpression	r -> to > fr		5689764	0		>			
ANR	5689850	PtrMemberAccess	r -> to		5689764	0					
ANR	5689851	Identifier	r		5689764	0					
ANR	5689852	Identifier	to		5689764	1					
ANR	5689853	Identifier	fr		5689764	1					
ANR	5689854	RelationalExpression	r -> to > to		5689764	1		>			
ANR	5689855	PtrMemberAccess	r -> to		5689764	0					
ANR	5689856	Identifier	r		5689764	0					
ANR	5689857	Identifier	to		5689764	1					
ANR	5689858	Identifier	to		5689764	1					
ANR	5689859	CompoundStatement		12:67:282:282	5689764	1					
ANR	5689860	ExpressionStatement	r -> fr = to	209:3:4770:4780	5689764	0	True				
ANR	5689861	AssignmentExpression	r -> fr = to		5689764	0		=			
ANR	5689862	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689863	Identifier	r		5689764	0					
ANR	5689864	Identifier	fr		5689764	1					
ANR	5689865	Identifier	to		5689764	1					
ANR	5689866	IfStatement	if ( r -> fr > fr && r -> fr < to && r -> to > fr && r -> to < to )		5689764	1					
ANR	5689867	Condition	r -> fr > fr && r -> fr < to && r -> to > fr && r -> to < to	212:6:4807:4858	5689764	0	True				
ANR	5689868	AndExpression	r -> fr > fr && r -> fr < to && r -> to > fr && r -> to < to		5689764	0		&&			
ANR	5689869	RelationalExpression	r -> fr > fr		5689764	0		>			
ANR	5689870	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689871	Identifier	r		5689764	0					
ANR	5689872	Identifier	fr		5689764	1					
ANR	5689873	Identifier	fr		5689764	1					
ANR	5689874	AndExpression	r -> fr < to && r -> to > fr && r -> to < to		5689764	1		&&			
ANR	5689875	RelationalExpression	r -> fr < to		5689764	0		<			
ANR	5689876	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689877	Identifier	r		5689764	0					
ANR	5689878	Identifier	fr		5689764	1					
ANR	5689879	Identifier	to		5689764	1					
ANR	5689880	AndExpression	r -> to > fr && r -> to < to		5689764	1		&&			
ANR	5689881	RelationalExpression	r -> to > fr		5689764	0		>			
ANR	5689882	PtrMemberAccess	r -> to		5689764	0					
ANR	5689883	Identifier	r		5689764	0					
ANR	5689884	Identifier	to		5689764	1					
ANR	5689885	Identifier	fr		5689764	1					
ANR	5689886	RelationalExpression	r -> to < to		5689764	1		<			
ANR	5689887	PtrMemberAccess	r -> to		5689764	0					
ANR	5689888	Identifier	r		5689764	0					
ANR	5689889	Identifier	to		5689764	1					
ANR	5689890	Identifier	to		5689764	1					
ANR	5689891	CompoundStatement		17:60:397:397	5689764	1					
ANR	5689892	ExpressionStatement	"r_list_delete ( rgs -> ranges , iter )"	214:3:4882:4915	5689764	0	True				
ANR	5689893	CallExpression	"r_list_delete ( rgs -> ranges , iter )"		5689764	0					
ANR	5689894	Callee	r_list_delete		5689764	0					
ANR	5689895	Identifier	r_list_delete		5689764	0					
ANR	5689896	ArgumentList	rgs -> ranges		5689764	1					
ANR	5689897	Argument	rgs -> ranges		5689764	0					
ANR	5689898	PtrMemberAccess	rgs -> ranges		5689764	0					
ANR	5689899	Identifier	rgs		5689764	0					
ANR	5689900	Identifier	ranges		5689764	1					
ANR	5689901	Argument	iter		5689764	1					
ANR	5689902	Identifier	iter		5689764	0					
ANR	5689903	ExpressionStatement	rgs -> changed = 1	215:3:4920:4936	5689764	1	True				
ANR	5689904	AssignmentExpression	rgs -> changed = 1		5689764	0		=			
ANR	5689905	PtrMemberAccess	rgs -> changed		5689764	0					
ANR	5689906	Identifier	rgs		5689764	0					
ANR	5689907	Identifier	changed		5689764	1					
ANR	5689908	PrimaryExpression	1		5689764	1					
ANR	5689909	GotoStatement	goto __reloop ;	216:3:4941:4954	5689764	2	True				
ANR	5689910	Identifier	__reloop		5689764	0					
ANR	5689911	IfStatement	if ( r -> fr < fr && r -> fr < to && r -> to > fr && r -> to > to )		5689764	2					
ANR	5689912	Condition	r -> fr < fr && r -> fr < to && r -> to > fr && r -> to > to	219:6:4980:5031	5689764	0	True				
ANR	5689913	AndExpression	r -> fr < fr && r -> fr < to && r -> to > fr && r -> to > to		5689764	0		&&			
ANR	5689914	RelationalExpression	r -> fr < fr		5689764	0		<			
ANR	5689915	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689916	Identifier	r		5689764	0					
ANR	5689917	Identifier	fr		5689764	1					
ANR	5689918	Identifier	fr		5689764	1					
ANR	5689919	AndExpression	r -> fr < to && r -> to > fr && r -> to > to		5689764	1		&&			
ANR	5689920	RelationalExpression	r -> fr < to		5689764	0		<			
ANR	5689921	PtrMemberAccess	r -> fr		5689764	0					
ANR	5689922	Identifier	r		5689764	0					
ANR	5689923	Identifier	fr		5689764	1					
ANR	5689924	Identifier	to		5689764	1					
ANR	5689925	AndExpression	r -> to > fr && r -> to > to		5689764	1		&&			
ANR	5689926	RelationalExpression	r -> to > fr		5689764	0		>			
ANR	5689927	PtrMemberAccess	r -> to		5689764	0					
ANR	5689928	Identifier	r		5689764	0					
ANR	5689929	Identifier	to		5689764	1					
ANR	5689930	Identifier	fr		5689764	1					
ANR	5689931	RelationalExpression	r -> to > to		5689764	1		>			
ANR	5689932	PtrMemberAccess	r -> to		5689764	0					
ANR	5689933	Identifier	r		5689764	0					
ANR	5689934	Identifier	to		5689764	1					
ANR	5689935	Identifier	to		5689764	1					
ANR	5689936	CompoundStatement		24:60:570:570	5689764	1					
ANR	5689937	ExpressionStatement	r -> to = fr	220:3:5039:5049	5689764	0	True				
ANR	5689938	AssignmentExpression	r -> to = fr		5689764	0		=			
ANR	5689939	PtrMemberAccess	r -> to		5689764	0					
ANR	5689940	Identifier	r		5689764	0					
ANR	5689941	Identifier	to		5689764	1					
ANR	5689942	Identifier	fr		5689764	1					
ANR	5689943	ExpressionStatement	"r_range_add ( rgs , to , r -> to , 1 )"	221:3:5054:5085	5689764	1	True				
ANR	5689944	CallExpression	"r_range_add ( rgs , to , r -> to , 1 )"		5689764	0					
ANR	5689945	Callee	r_range_add		5689764	0					
ANR	5689946	Identifier	r_range_add		5689764	0					
ANR	5689947	ArgumentList	rgs		5689764	1					
ANR	5689948	Argument	rgs		5689764	0					
ANR	5689949	Identifier	rgs		5689764	0					
ANR	5689950	Argument	to		5689764	1					
ANR	5689951	Identifier	to		5689764	0					
ANR	5689952	Argument	r -> to		5689764	2					
ANR	5689953	PtrMemberAccess	r -> to		5689764	0					
ANR	5689954	Identifier	r		5689764	0					
ANR	5689955	Identifier	to		5689764	1					
ANR	5689956	Argument	1		5689764	3					
ANR	5689957	PrimaryExpression	1		5689764	0					
ANR	5689958	GotoStatement	goto __reloop ;	223:3:5127:5140	5689764	2	True				
ANR	5689959	Identifier	__reloop		5689764	0					
ANR	5689960	ReturnStatement	return 0 ;	226:1:5150:5158	5689764	15	True				
ANR	5689961	PrimaryExpression	0		5689764	0					
ANR	5689962	ReturnType	R_API int		5689764	1					
ANR	5689963	Identifier	r_range_sub		5689764	2					
ANR	5689964	ParameterList	"RRange * rgs , ut64 fr , ut64 to"		5689764	3					
ANR	5689965	Parameter	RRange * rgs	196:22:4432:4442	5689764	0	True				
ANR	5689966	ParameterType	RRange *		5689764	0					
ANR	5689967	Identifier	rgs		5689764	1					
ANR	5689968	Parameter	ut64 fr	196:35:4445:4451	5689764	1	True				
ANR	5689969	ParameterType	ut64		5689764	0					
ANR	5689970	Identifier	fr		5689764	1					
ANR	5689971	Parameter	ut64 to	196:44:4454:4460	5689764	2	True				
ANR	5689972	ParameterType	ut64		5689764	0					
ANR	5689973	Identifier	to		5689764	1					
ANR	5689974	CFGEntryNode	ENTRY		5689764		True				
ANR	5689975	CFGExitNode	EXIT		5689764		True				
ANR	5689976	Symbol	& to		5689764						
ANR	5689977	Symbol	r -> to		5689764						
ANR	5689978	Symbol	rgs -> ranges		5689764						
ANR	5689979	Symbol	* rgs		5689764						
ANR	5689980	Symbol	iter		5689764						
ANR	5689981	Symbol	fr		5689764						
ANR	5689982	Symbol	rgs -> changed		5689764						
ANR	5689983	Symbol	r		5689764						
ANR	5689984	Symbol	r -> fr		5689764						
ANR	5689985	Symbol	& fr		5689764						
ANR	5689986	Symbol	to		5689764						
ANR	5689987	Symbol	* r		5689764						
ANR	5689988	Symbol	rgs		5689764						
ANR	5689989	Function	r_range_merge	231:0:5215:5377							
ANR	5689990	FunctionDef	"r_range_merge (RRange * rgs , RRange * r)"		5689989	0					
ANR	5689991	CompoundStatement		231:49:5264:5377	5689989	0					
ANR	5689992	IdentifierDeclStatement	RListIter * iter ;	232:1:5267:5282	5689989	0	True				
ANR	5689993	IdentifierDecl	* iter		5689989	0					
ANR	5689994	IdentifierDeclType	RListIter *		5689989	0					
ANR	5689995	Identifier	iter		5689989	1					
ANR	5689996	IdentifierDeclStatement	RRangeItem * r ;	233:1:5285:5298	5689989	1	True				
ANR	5689997	IdentifierDecl	* r		5689989	0					
ANR	5689998	IdentifierDeclType	RRangeItem *		5689989	0					
ANR	5689999	Identifier	r		5689989	1					
ANR	5690000	Statement	r_list_foreach	234:1:5301:5314	5689989	2	True				
ANR	5690001	Statement	(	234:16:5316:5316	5689989	3	True				
ANR	5690002	Statement	rgs	234:17:5317:5319	5689989	4	True				
ANR	5690003	Statement	->	234:20:5320:5321	5689989	5	True				
ANR	5690004	Statement	ranges	234:22:5322:5327	5689989	6	True				
ANR	5690005	Statement	","	234:28:5328:5328	5689989	7	True				
ANR	5690006	Statement	iter	234:30:5330:5333	5689989	8	True				
ANR	5690007	Statement	","	234:34:5334:5334	5689989	9	True				
ANR	5690008	Statement	r	234:36:5336:5336	5689989	10	True				
ANR	5690009	Statement	)	234:37:5337:5337	5689989	11	True				
ANR	5690010	ExpressionStatement	"r_range_add ( rgs , r -> fr , r -> to , 0 )"	235:2:5341:5375	5689989	12	True				
ANR	5690011	CallExpression	"r_range_add ( rgs , r -> fr , r -> to , 0 )"		5689989	0					
ANR	5690012	Callee	r_range_add		5689989	0					
ANR	5690013	Identifier	r_range_add		5689989	0					
ANR	5690014	ArgumentList	rgs		5689989	1					
ANR	5690015	Argument	rgs		5689989	0					
ANR	5690016	Identifier	rgs		5689989	0					
ANR	5690017	Argument	r -> fr		5689989	1					
ANR	5690018	PtrMemberAccess	r -> fr		5689989	0					
ANR	5690019	Identifier	r		5689989	0					
ANR	5690020	Identifier	fr		5689989	1					
ANR	5690021	Argument	r -> to		5689989	2					
ANR	5690022	PtrMemberAccess	r -> to		5689989	0					
ANR	5690023	Identifier	r		5689989	0					
ANR	5690024	Identifier	to		5689989	1					
ANR	5690025	Argument	0		5689989	3					
ANR	5690026	PrimaryExpression	0		5689989	0					
ANR	5690027	ReturnType	R_API void		5689989	1					
ANR	5690028	Identifier	r_range_merge		5689989	2					
ANR	5690029	ParameterList	"RRange * rgs , RRange * r"		5689989	3					
ANR	5690030	Parameter	RRange * rgs	231:25:5240:5250	5689989	0	True				
ANR	5690031	ParameterType	RRange *		5689989	0					
ANR	5690032	Identifier	rgs		5689989	1					
ANR	5690033	Parameter	RRange * r	231:38:5253:5261	5689989	1	True				
ANR	5690034	ParameterType	RRange *		5689989	0					
ANR	5690035	Identifier	r		5689989	1					
ANR	5690036	CFGEntryNode	ENTRY		5689989		True				
ANR	5690037	CFGExitNode	EXIT		5689989		True				
ANR	5690038	Symbol	r		5689989						
ANR	5690039	Symbol	r -> to		5689989						
ANR	5690040	Symbol	r -> fr		5689989						
ANR	5690041	Symbol	iter		5689989						
ANR	5690042	Symbol	* r		5689989						
ANR	5690043	Symbol	rgs		5689989						
ANR	5690044	Function	r_range_contains	240:0:5419:5625							
ANR	5690045	FunctionDef	"r_range_contains (RRange * rgs , ut64 addr)"		5690044	0					
ANR	5690046	CompoundStatement		240:51:5470:5625	5690044	0					
ANR	5690047	IdentifierDeclStatement	RRangeItem * r ;	241:1:5473:5486	5690044	0	True				
ANR	5690048	IdentifierDecl	* r		5690044	0					
ANR	5690049	IdentifierDeclType	RRangeItem *		5690044	0					
ANR	5690050	Identifier	r		5690044	1					
ANR	5690051	IdentifierDeclStatement	RListIter * iter ;	242:1:5489:5504	5690044	1	True				
ANR	5690052	IdentifierDecl	* iter		5690044	0					
ANR	5690053	IdentifierDeclType	RListIter *		5690044	0					
ANR	5690054	Identifier	iter		5690044	1					
ANR	5690055	Statement	r_list_foreach	243:1:5507:5520	5690044	2	True				
ANR	5690056	Statement	(	243:16:5522:5522	5690044	3	True				
ANR	5690057	Statement	rgs	243:17:5523:5525	5690044	4	True				
ANR	5690058	Statement	->	243:20:5526:5527	5690044	5	True				
ANR	5690059	Statement	ranges	243:22:5528:5533	5690044	6	True				
ANR	5690060	Statement	","	243:28:5534:5534	5690044	7	True				
ANR	5690061	Statement	iter	243:30:5536:5539	5690044	8	True				
ANR	5690062	Statement	","	243:34:5540:5540	5690044	9	True				
ANR	5690063	Statement	r	243:36:5542:5542	5690044	10	True				
ANR	5690064	Statement	)	243:37:5543:5543	5690044	11	True				
ANR	5690065	CompoundStatement		4:39:74:74	5690044	12					
ANR	5690066	IfStatement	if ( addr >= r -> fr && addr <= r -> to )		5690044	0					
ANR	5690067	Condition	addr >= r -> fr && addr <= r -> to	244:6:5553:5582	5690044	0	True				
ANR	5690068	AndExpression	addr >= r -> fr && addr <= r -> to		5690044	0		&&			
ANR	5690069	RelationalExpression	addr >= r -> fr		5690044	0		>=			
ANR	5690070	Identifier	addr		5690044	0					
ANR	5690071	PtrMemberAccess	r -> fr		5690044	1					
ANR	5690072	Identifier	r		5690044	0					
ANR	5690073	Identifier	fr		5690044	1					
ANR	5690074	RelationalExpression	addr <= r -> to		5690044	1		<=			
ANR	5690075	Identifier	addr		5690044	0					
ANR	5690076	PtrMemberAccess	r -> to		5690044	1					
ANR	5690077	Identifier	r		5690044	0					
ANR	5690078	Identifier	to		5690044	1					
ANR	5690079	CompoundStatement		5:38:114:114	5690044	1					
ANR	5690080	ReturnStatement	return true ;	245:3:5590:5601	5690044	0	True				
ANR	5690081	Identifier	true		5690044	0					
ANR	5690082	ReturnStatement	return false ;	248:1:5611:5623	5690044	13	True				
ANR	5690083	Identifier	false		5690044	0					
ANR	5690084	ReturnType	R_API int		5690044	1					
ANR	5690085	Identifier	r_range_contains		5690044	2					
ANR	5690086	ParameterList	"RRange * rgs , ut64 addr"		5690044	3					
ANR	5690087	Parameter	RRange * rgs	240:27:5446:5456	5690044	0	True				
ANR	5690088	ParameterType	RRange *		5690044	0					
ANR	5690089	Identifier	rgs		5690044	1					
ANR	5690090	Parameter	ut64 addr	240:40:5459:5467	5690044	1	True				
ANR	5690091	ParameterType	ut64		5690044	0					
ANR	5690092	Identifier	addr		5690044	1					
ANR	5690093	CFGEntryNode	ENTRY		5690044		True				
ANR	5690094	CFGExitNode	EXIT		5690044		True				
ANR	5690095	Symbol	r		5690044						
ANR	5690096	Symbol	r -> to		5690044						
ANR	5690097	Symbol	r -> fr		5690044						
ANR	5690098	Symbol	true		5690044						
ANR	5690099	Symbol	false		5690044						
ANR	5690100	Symbol	iter		5690044						
ANR	5690101	Symbol	addr		5690044						
ANR	5690102	Symbol	* r		5690044						
ANR	5690103	Symbol	rgs		5690044						
ANR	5690104	Function	cmp_ranges	251:0:5628:5779							
ANR	5690105	FunctionDef	"cmp_ranges (void * a , void * b)"		5690104	0					
ANR	5690106	CompoundStatement		251:40:5668:5779	5690104	0					
ANR	5690107	IdentifierDeclStatement	RRangeItem * first = ( RRangeItem * ) a ;	252:1:5671:5706	5690104	0	True				
ANR	5690108	IdentifierDecl	* first = ( RRangeItem * ) a		5690104	0					
ANR	5690109	IdentifierDeclType	RRangeItem *		5690104	0					
ANR	5690110	Identifier	first		5690104	1					
ANR	5690111	AssignmentExpression	* first = ( RRangeItem * ) a		5690104	2		=			
ANR	5690112	Identifier	first		5690104	0					
ANR	5690113	CastExpression	( RRangeItem * ) a		5690104	1					
ANR	5690114	CastTarget	RRangeItem *		5690104	0					
ANR	5690115	Identifier	a		5690104	1					
ANR	5690116	IdentifierDeclStatement	RRangeItem * second = ( RRangeItem * ) b ;	253:1:5709:5745	5690104	1	True				
ANR	5690117	IdentifierDecl	* second = ( RRangeItem * ) b		5690104	0					
ANR	5690118	IdentifierDeclType	RRangeItem *		5690104	0					
ANR	5690119	Identifier	second		5690104	1					
ANR	5690120	AssignmentExpression	* second = ( RRangeItem * ) b		5690104	2		=			
ANR	5690121	Identifier	second		5690104	0					
ANR	5690122	CastExpression	( RRangeItem * ) b		5690104	1					
ANR	5690123	CastTarget	RRangeItem *		5690104	0					
ANR	5690124	Identifier	b		5690104	1					
ANR	5690125	ReturnStatement	return first -> fr > second -> fr ;	254:1:5748:5777	5690104	2	True				
ANR	5690126	RelationalExpression	first -> fr > second -> fr		5690104	0		>			
ANR	5690127	PtrMemberAccess	first -> fr		5690104	0					
ANR	5690128	Identifier	first		5690104	0					
ANR	5690129	Identifier	fr		5690104	1					
ANR	5690130	PtrMemberAccess	second -> fr		5690104	1					
ANR	5690131	Identifier	second		5690104	0					
ANR	5690132	Identifier	fr		5690104	1					
ANR	5690133	ReturnType	static int		5690104	1					
ANR	5690134	Identifier	cmp_ranges		5690104	2					
ANR	5690135	ParameterList	"void * a , void * b"		5690104	3					
ANR	5690136	Parameter	void * a	251:22:5650:5656	5690104	0	True				
ANR	5690137	ParameterType	void *		5690104	0					
ANR	5690138	Identifier	a		5690104	1					
ANR	5690139	Parameter	void * b	251:31:5659:5665	5690104	1	True				
ANR	5690140	ParameterType	void *		5690104	0					
ANR	5690141	Identifier	b		5690104	1					
ANR	5690142	CFGEntryNode	ENTRY		5690104		True				
ANR	5690143	CFGExitNode	EXIT		5690104		True				
ANR	5690144	Symbol	a		5690104						
ANR	5690145	Symbol	b		5690104						
ANR	5690146	Symbol	second -> fr		5690104						
ANR	5690147	Symbol	* first		5690104						
ANR	5690148	Symbol	first -> fr		5690104						
ANR	5690149	Symbol	first		5690104						
ANR	5690150	Symbol	* second		5690104						
ANR	5690151	Symbol	second		5690104						
ANR	5690152	Function	r_range_sort	257:0:5782:6055							
ANR	5690153	FunctionDef	r_range_sort (RRange * rgs)		5690152	0					
ANR	5690154	CompoundStatement		257:36:5818:6055	5690152	0					
ANR	5690155	IdentifierDeclStatement	bool ch = rgs -> ranges -> sorted ;	258:1:5821:5850	5690152	0	True				
ANR	5690156	IdentifierDecl	ch = rgs -> ranges -> sorted		5690152	0					
ANR	5690157	IdentifierDeclType	bool		5690152	0					
ANR	5690158	Identifier	ch		5690152	1					
ANR	5690159	AssignmentExpression	ch = rgs -> ranges -> sorted		5690152	2		=			
ANR	5690160	Identifier	ch		5690152	0					
ANR	5690161	PtrMemberAccess	rgs -> ranges -> sorted		5690152	1					
ANR	5690162	PtrMemberAccess	rgs -> ranges		5690152	0					
ANR	5690163	Identifier	rgs		5690152	0					
ANR	5690164	Identifier	ranges		5690152	1					
ANR	5690165	Identifier	sorted		5690152	1					
ANR	5690166	IfStatement	if ( ! rgs -> changed )		5690152	1					
ANR	5690167	Condition	! rgs -> changed	259:5:5857:5869	5690152	0	True				
ANR	5690168	UnaryOperationExpression	! rgs -> changed		5690152	0					
ANR	5690169	UnaryOperator	!		5690152	0					
ANR	5690170	PtrMemberAccess	rgs -> changed		5690152	1					
ANR	5690171	Identifier	rgs		5690152	0					
ANR	5690172	Identifier	changed		5690152	1					
ANR	5690173	CompoundStatement		3:20:53:53	5690152	1					
ANR	5690174	ReturnStatement	return false ;	260:2:5876:5888	5690152	0	True				
ANR	5690175	Identifier	false		5690152	0					
ANR	5690176	ExpressionStatement	rgs -> changed = false	262:1:5894:5914	5690152	2	True				
ANR	5690177	AssignmentExpression	rgs -> changed = false		5690152	0		=			
ANR	5690178	PtrMemberAccess	rgs -> changed		5690152	0					
ANR	5690179	Identifier	rgs		5690152	0					
ANR	5690180	Identifier	changed		5690152	1					
ANR	5690181	Identifier	false		5690152	1					
ANR	5690182	ExpressionStatement	"r_list_sort ( rgs -> ranges , ( RListComparator ) cmp_ranges )"	263:1:5917:5971	5690152	3	True				
ANR	5690183	CallExpression	"r_list_sort ( rgs -> ranges , ( RListComparator ) cmp_ranges )"		5690152	0					
ANR	5690184	Callee	r_list_sort		5690152	0					
ANR	5690185	Identifier	r_list_sort		5690152	0					
ANR	5690186	ArgumentList	rgs -> ranges		5690152	1					
ANR	5690187	Argument	rgs -> ranges		5690152	0					
ANR	5690188	PtrMemberAccess	rgs -> ranges		5690152	0					
ANR	5690189	Identifier	rgs		5690152	0					
ANR	5690190	Identifier	ranges		5690152	1					
ANR	5690191	Argument	( RListComparator ) cmp_ranges		5690152	1					
ANR	5690192	CastExpression	( RListComparator ) cmp_ranges		5690152	0					
ANR	5690193	CastTarget	RListComparator		5690152	0					
ANR	5690194	Identifier	cmp_ranges		5690152	1					
ANR	5690195	IfStatement	if ( ch != rgs -> ranges -> sorted )		5690152	4					
ANR	5690196	Condition	ch != rgs -> ranges -> sorted	264:5:5978:6002	5690152	0	True				
ANR	5690197	EqualityExpression	ch != rgs -> ranges -> sorted		5690152	0		!=			
ANR	5690198	Identifier	ch		5690152	0					
ANR	5690199	PtrMemberAccess	rgs -> ranges -> sorted		5690152	1					
ANR	5690200	PtrMemberAccess	rgs -> ranges		5690152	0					
ANR	5690201	Identifier	rgs		5690152	0					
ANR	5690202	Identifier	ranges		5690152	1					
ANR	5690203	Identifier	sorted		5690152	1					
ANR	5690204	CompoundStatement		8:32:186:186	5690152	1					
ANR	5690205	ExpressionStatement	rgs -> changed = true	265:2:6009:6028	5690152	0	True				
ANR	5690206	AssignmentExpression	rgs -> changed = true		5690152	0		=			
ANR	5690207	PtrMemberAccess	rgs -> changed		5690152	0					
ANR	5690208	Identifier	rgs		5690152	0					
ANR	5690209	Identifier	changed		5690152	1					
ANR	5690210	Identifier	true		5690152	1					
ANR	5690211	ReturnStatement	return rgs -> changed ;	267:1:6034:6053	5690152	5	True				
ANR	5690212	PtrMemberAccess	rgs -> changed		5690152	0					
ANR	5690213	Identifier	rgs		5690152	0					
ANR	5690214	Identifier	changed		5690152	1					
ANR	5690215	ReturnType	R_API int		5690152	1					
ANR	5690216	Identifier	r_range_sort		5690152	2					
ANR	5690217	ParameterList	RRange * rgs		5690152	3					
ANR	5690218	Parameter	RRange * rgs	257:23:5805:5815	5690152	0	True				
ANR	5690219	ParameterType	RRange *		5690152	0					
ANR	5690220	Identifier	rgs		5690152	1					
ANR	5690221	CFGEntryNode	ENTRY		5690152		True				
ANR	5690222	CFGExitNode	EXIT		5690152		True				
ANR	5690223	Symbol	* * rgs		5690152						
ANR	5690224	Symbol	rgs -> ranges -> sorted		5690152						
ANR	5690225	Symbol	rgs -> ranges		5690152						
ANR	5690226	Symbol	ch		5690152						
ANR	5690227	Symbol	* rgs		5690152						
ANR	5690228	Symbol	false		5690152						
ANR	5690229	Symbol	true		5690152						
ANR	5690230	Symbol	rgs -> changed		5690152						
ANR	5690231	Symbol	* rgs -> ranges		5690152						
ANR	5690232	Symbol	rgs		5690152						
ANR	5690233	Symbol	cmp_ranges		5690152						
ANR	5690234	Function	r_range_percent	270:0:6058:6805							
ANR	5690235	FunctionDef	r_range_percent (RRange * rgs)		5690234	0					
ANR	5690236	CompoundStatement		270:40:6098:6805	5690234	0					
ANR	5690237	IdentifierDeclStatement	RListIter * iter ;	271:1:6101:6116	5690234	0	True				
ANR	5690238	IdentifierDecl	* iter		5690234	0					
ANR	5690239	IdentifierDeclType	RListIter *		5690234	0					
ANR	5690240	Identifier	iter		5690234	1					
ANR	5690241	IdentifierDeclStatement	RRangeItem * r ;	272:1:6119:6132	5690234	1	True				
ANR	5690242	IdentifierDecl	* r		5690234	0					
ANR	5690243	IdentifierDeclType	RRangeItem *		5690234	0					
ANR	5690244	Identifier	r		5690234	1					
ANR	5690245	IdentifierDeclStatement	"int w , i ;"	273:1:6135:6143	5690234	2	True				
ANR	5690246	IdentifierDecl	w		5690234	0					
ANR	5690247	IdentifierDeclType	int		5690234	0					
ANR	5690248	Identifier	w		5690234	1					
ANR	5690249	IdentifierDecl	i		5690234	1					
ANR	5690250	IdentifierDeclType	int		5690234	0					
ANR	5690251	Identifier	i		5690234	1					
ANR	5690252	IdentifierDeclStatement	"ut64 seek , step ;"	274:1:6146:6161	5690234	3	True				
ANR	5690253	IdentifierDecl	seek		5690234	0					
ANR	5690254	IdentifierDeclType	ut64		5690234	0					
ANR	5690255	Identifier	seek		5690234	1					
ANR	5690256	IdentifierDecl	step		5690234	1					
ANR	5690257	IdentifierDeclType	ut64		5690234	0					
ANR	5690258	Identifier	step		5690234	1					
ANR	5690259	IdentifierDeclStatement	"ut64 dif , fr = - 1 , to = - 1 ;"	275:1:6164:6190	5690234	4	True				
ANR	5690260	IdentifierDecl	dif		5690234	0					
ANR	5690261	IdentifierDeclType	ut64		5690234	0					
ANR	5690262	Identifier	dif		5690234	1					
ANR	5690263	IdentifierDecl	fr = - 1		5690234	1					
ANR	5690264	IdentifierDeclType	ut64		5690234	0					
ANR	5690265	Identifier	fr		5690234	1					
ANR	5690266	AssignmentExpression	fr = - 1		5690234	2		=			
ANR	5690267	Identifier	fr		5690234	0					
ANR	5690268	UnaryOperationExpression	- 1		5690234	1					
ANR	5690269	UnaryOperator	-		5690234	0					
ANR	5690270	PrimaryExpression	1		5690234	1					
ANR	5690271	IdentifierDecl	to = - 1		5690234	2					
ANR	5690272	IdentifierDeclType	ut64		5690234	0					
ANR	5690273	Identifier	to		5690234	1					
ANR	5690274	AssignmentExpression	to = - 1		5690234	2		=			
ANR	5690275	Identifier	to		5690234	0					
ANR	5690276	UnaryOperationExpression	- 1		5690234	1					
ANR	5690277	UnaryOperator	-		5690234	0					
ANR	5690278	PrimaryExpression	1		5690234	1					
ANR	5690279	Statement	r_list_foreach	277:1:6194:6207	5690234	5	True				
ANR	5690280	Statement	(	277:16:6209:6209	5690234	6	True				
ANR	5690281	Statement	rgs	277:17:6210:6212	5690234	7	True				
ANR	5690282	Statement	->	277:20:6213:6214	5690234	8	True				
ANR	5690283	Statement	ranges	277:22:6215:6220	5690234	9	True				
ANR	5690284	Statement	","	277:28:6221:6221	5690234	10	True				
ANR	5690285	Statement	iter	277:30:6223:6226	5690234	11	True				
ANR	5690286	Statement	","	277:34:6227:6227	5690234	12	True				
ANR	5690287	Statement	r	277:36:6229:6229	5690234	13	True				
ANR	5690288	Statement	)	277:37:6230:6230	5690234	14	True				
ANR	5690289	CompoundStatement		8:39:133:133	5690234	15					
ANR	5690290	IfStatement	if ( fr == - 1 )		5690234	0					
ANR	5690291	Condition	fr == - 1	278:6:6240:6247	5690234	0	True				
ANR	5690292	EqualityExpression	fr == - 1		5690234	0		==			
ANR	5690293	Identifier	fr		5690234	0					
ANR	5690294	UnaryOperationExpression	- 1		5690234	1					
ANR	5690295	UnaryOperator	-		5690234	0					
ANR	5690296	PrimaryExpression	1		5690234	1					
ANR	5690297	CompoundStatement		9:16:151:151	5690234	1					
ANR	5690298	ExpressionStatement	fr = r -> fr	280:3:6269:6279	5690234	0	True				
ANR	5690299	AssignmentExpression	fr = r -> fr		5690234	0		=			
ANR	5690300	Identifier	fr		5690234	0					
ANR	5690301	PtrMemberAccess	r -> fr		5690234	1					
ANR	5690302	Identifier	r		5690234	0					
ANR	5690303	Identifier	fr		5690234	1					
ANR	5690304	ExpressionStatement	to = r -> to	281:3:6284:6294	5690234	1	True				
ANR	5690305	AssignmentExpression	to = r -> to		5690234	0		=			
ANR	5690306	Identifier	to		5690234	0					
ANR	5690307	PtrMemberAccess	r -> to		5690234	1					
ANR	5690308	Identifier	r		5690234	0					
ANR	5690309	Identifier	to		5690234	1					
ANR	5690310	ElseStatement	else		5690234	0					
ANR	5690311	CompoundStatement		13:9:206:206	5690234	0					
ANR	5690312	IfStatement	if ( fr > r -> fr )		5690234	0					
ANR	5690313	Condition	fr > r -> fr	283:7:6314:6323	5690234	0	True				
ANR	5690314	RelationalExpression	fr > r -> fr		5690234	0		>			
ANR	5690315	Identifier	fr		5690234	0					
ANR	5690316	PtrMemberAccess	r -> fr		5690234	1					
ANR	5690317	Identifier	r		5690234	0					
ANR	5690318	Identifier	fr		5690234	1					
ANR	5690319	CompoundStatement		14:19:227:227	5690234	1					
ANR	5690320	ExpressionStatement	fr = r -> fr	284:4:6332:6342	5690234	0	True				
ANR	5690321	AssignmentExpression	fr = r -> fr		5690234	0		=			
ANR	5690322	Identifier	fr		5690234	0					
ANR	5690323	PtrMemberAccess	r -> fr		5690234	1					
ANR	5690324	Identifier	r		5690234	0					
ANR	5690325	Identifier	fr		5690234	1					
ANR	5690326	IfStatement	if ( to < r -> to )		5690234	1					
ANR	5690327	Condition	to < r -> to	286:7:6356:6365	5690234	0	True				
ANR	5690328	RelationalExpression	to < r -> to		5690234	0		<			
ANR	5690329	Identifier	to		5690234	0					
ANR	5690330	PtrMemberAccess	r -> to		5690234	1					
ANR	5690331	Identifier	r		5690234	0					
ANR	5690332	Identifier	to		5690234	1					
ANR	5690333	CompoundStatement		17:19:269:269	5690234	1					
ANR	5690334	ExpressionStatement	to = r -> to	287:4:6374:6384	5690234	0	True				
ANR	5690335	AssignmentExpression	to = r -> to		5690234	0		=			
ANR	5690336	Identifier	to		5690234	0					
ANR	5690337	PtrMemberAccess	r -> to		5690234	1					
ANR	5690338	Identifier	r		5690234	0					
ANR	5690339	Identifier	to		5690234	1					
ANR	5690340	ExpressionStatement	w = 65	291:1:6399:6406	5690234	16	True				
ANR	5690341	AssignmentExpression	w = 65		5690234	0		=			
ANR	5690342	Identifier	w		5690234	0					
ANR	5690343	PrimaryExpression	65		5690234	1					
ANR	5690344	IfStatement	if ( fr != - 1 )		5690234	17					
ANR	5690345	Condition	fr != - 1	292:5:6424:6431	5690234	0	True				
ANR	5690346	EqualityExpression	fr != - 1		5690234	0		!=			
ANR	5690347	Identifier	fr		5690234	0					
ANR	5690348	UnaryOperationExpression	- 1		5690234	1					
ANR	5690349	UnaryOperator	-		5690234	0					
ANR	5690350	PrimaryExpression	1		5690234	1					
ANR	5690351	CompoundStatement		23:15:335:335	5690234	1					
ANR	5690352	ExpressionStatement	dif = to - fr	293:2:6438:6451	5690234	0	True				
ANR	5690353	AssignmentExpression	dif = to - fr		5690234	0		=			
ANR	5690354	Identifier	dif		5690234	0					
ANR	5690355	AdditiveExpression	to - fr		5690234	1		-			
ANR	5690356	Identifier	to		5690234	0					
ANR	5690357	Identifier	fr		5690234	1					
ANR	5690358	IfStatement	if ( dif < w )		5690234	1					
ANR	5690359	Condition	dif < w	294:6:6459:6465	5690234	0	True				
ANR	5690360	RelationalExpression	dif < w		5690234	0		<			
ANR	5690361	Identifier	dif		5690234	0					
ANR	5690362	Identifier	w		5690234	1					
ANR	5690363	CompoundStatement		25:15:369:369	5690234	1					
ANR	5690364	ExpressionStatement	step = 1	295:3:6473:6481	5690234	0	True				
ANR	5690365	AssignmentExpression	step = 1		5690234	0		=			
ANR	5690366	Identifier	step		5690234	0					
ANR	5690367	PrimaryExpression	1		5690234	1					
ANR	5690368	ElseStatement	else		5690234	0					
ANR	5690369	CompoundStatement		27:9:400:400	5690234	0					
ANR	5690370	ExpressionStatement	step = dif / w	297:3:6504:6518	5690234	0	True				
ANR	5690371	AssignmentExpression	step = dif / w		5690234	0		=			
ANR	5690372	Identifier	step		5690234	0					
ANR	5690373	MultiplicativeExpression	dif / w		5690234	1		/			
ANR	5690374	Identifier	dif		5690234	0					
ANR	5690375	Identifier	w		5690234	1					
ANR	5690376	ElseStatement	else		5690234	0					
ANR	5690377	CompoundStatement		30:8:433:433	5690234	0					
ANR	5690378	ExpressionStatement	step = fr = to = 0	300:2:6536:6554	5690234	0	True				
ANR	5690379	AssignmentExpression	step = fr = to = 0		5690234	0		=			
ANR	5690380	Identifier	step		5690234	0					
ANR	5690381	AssignmentExpression	fr = to = 0		5690234	1		=			
ANR	5690382	Identifier	fr		5690234	0					
ANR	5690383	AssignmentExpression	to = 0		5690234	1		=			
ANR	5690384	Identifier	to		5690234	0					
ANR	5690385	PrimaryExpression	0		5690234	1					
ANR	5690386	ExpressionStatement	seek = 0	302:1:6560:6568	5690234	18	True				
ANR	5690387	AssignmentExpression	seek = 0		5690234	0		=			
ANR	5690388	Identifier	seek		5690234	0					
ANR	5690389	PrimaryExpression	0		5690234	1					
ANR	5690390	Statement	printf	304:1:6603:6608	5690234	19	True				
ANR	5690391	Statement	(	304:8:6610:6610	5690234	20	True				
ANR	5690392	Statement	"""0x%08"""	304:9:6611:6617	5690234	21	True				
ANR	5690393	Statement	PFMT64x	304:16:6618:6624	5690234	22	True				
ANR	5690394	Statement	""" ["""	304:23:6625:6628	5690234	23	True				
ANR	5690395	Statement	","	304:27:6629:6629	5690234	24	True				
ANR	5690396	Statement	fr	304:29:6631:6632	5690234	25	True				
ANR	5690397	Statement	)	304:31:6633:6633	5690234	26	True				
ANR	5690398	ExpressionStatement		304:32:6634:6634	5690234	27	True				
ANR	5690399	ForStatement	for ( i = 0 ; i < w ; i ++ )		5690234	28					
ANR	5690400	ForInit	i = 0 ;	305:6:6642:6647	5690234	0	True				
ANR	5690401	AssignmentExpression	i = 0		5690234	0		=			
ANR	5690402	Identifier	i		5690234	0					
ANR	5690403	PrimaryExpression	0		5690234	1					
ANR	5690404	Condition	i < w	305:13:6649:6653	5690234	1	True				
ANR	5690405	RelationalExpression	i < w		5690234	0		<			
ANR	5690406	Identifier	i		5690234	0					
ANR	5690407	Identifier	w		5690234	1					
ANR	5690408	PostIncDecOperationExpression	i ++	305:20:6656:6658	5690234	2	True				
ANR	5690409	Identifier	i		5690234	0					
ANR	5690410	IncDec	++		5690234	1					
ANR	5690411	CompoundStatement		36:25:562:562	5690234	3					
ANR	5690412	IfStatement	"if ( r_range_contains ( rgs , seek ) )"		5690234	0					
ANR	5690413	Condition	"r_range_contains ( rgs , seek )"	306:6:6669:6696	5690234	0	True				
ANR	5690414	CallExpression	"r_range_contains ( rgs , seek )"		5690234	0					
ANR	5690415	Callee	r_range_contains		5690234	0					
ANR	5690416	Identifier	r_range_contains		5690234	0					
ANR	5690417	ArgumentList	rgs		5690234	1					
ANR	5690418	Argument	rgs		5690234	0					
ANR	5690419	Identifier	rgs		5690234	0					
ANR	5690420	Argument	seek		5690234	1					
ANR	5690421	Identifier	seek		5690234	0					
ANR	5690422	CompoundStatement		37:36:600:600	5690234	1					
ANR	5690423	ExpressionStatement	"printf ( ""#"" )"	307:3:6704:6716	5690234	0	True				
ANR	5690424	CallExpression	"printf ( ""#"" )"		5690234	0					
ANR	5690425	Callee	printf		5690234	0					
ANR	5690426	Identifier	printf		5690234	0					
ANR	5690427	ArgumentList	"""#"""		5690234	1					
ANR	5690428	Argument	"""#"""		5690234	0					
ANR	5690429	PrimaryExpression	"""#"""		5690234	0					
ANR	5690430	ElseStatement	else		5690234	0					
ANR	5690431	CompoundStatement		39:9:628:628	5690234	0					
ANR	5690432	ExpressionStatement	"printf ( ""."" )"	309:3:6732:6744	5690234	0	True				
ANR	5690433	CallExpression	"printf ( ""."" )"		5690234	0					
ANR	5690434	Callee	printf		5690234	0					
ANR	5690435	Identifier	printf		5690234	0					
ANR	5690436	ArgumentList	"""."""		5690234	1					
ANR	5690437	Argument	"""."""		5690234	0					
ANR	5690438	PrimaryExpression	"""."""		5690234	0					
ANR	5690439	ExpressionStatement	seek += step	311:2:6752:6764	5690234	1	True				
ANR	5690440	AssignmentExpression	seek += step		5690234	0		+=			
ANR	5690441	Identifier	seek		5690234	0					
ANR	5690442	Identifier	step		5690234	1					
ANR	5690443	Statement	printf	313:1:6770:6775	5690234	29	True				
ANR	5690444	Statement	(	313:8:6777:6777	5690234	30	True				
ANR	5690445	Statement	"""] 0x%08"""	313:9:6778:6786	5690234	31	True				
ANR	5690446	Statement	PFMT64x	313:18:6787:6793	5690234	32	True				
ANR	5690447	Statement	"""\\n"""	313:25:6794:6797	5690234	33	True				
ANR	5690448	Statement	","	313:29:6798:6798	5690234	34	True				
ANR	5690449	Statement	to	313:31:6800:6801	5690234	35	True				
ANR	5690450	Statement	)	313:33:6802:6802	5690234	36	True				
ANR	5690451	ExpressionStatement		313:34:6803:6803	5690234	37	True				
ANR	5690452	ReturnType	R_API void		5690234	1					
ANR	5690453	Identifier	r_range_percent		5690234	2					
ANR	5690454	ParameterList	RRange * rgs		5690234	3					
ANR	5690455	Parameter	RRange * rgs	270:27:6085:6095	5690234	0	True				
ANR	5690456	ParameterType	RRange *		5690234	0					
ANR	5690457	Identifier	rgs		5690234	1					
ANR	5690458	CFGEntryNode	ENTRY		5690234		True				
ANR	5690459	CFGExitNode	EXIT		5690234		True				
ANR	5690460	Symbol	dif		5690234						
ANR	5690461	Symbol	r_range_contains		5690234						
ANR	5690462	Symbol	r -> to		5690234						
ANR	5690463	Symbol	iter		5690234						
ANR	5690464	Symbol	i		5690234						
ANR	5690465	Symbol	fr		5690234						
ANR	5690466	Symbol	seek		5690234						
ANR	5690467	Symbol	r		5690234						
ANR	5690468	Symbol	r -> fr		5690234						
ANR	5690469	Symbol	w		5690234						
ANR	5690470	Symbol	step		5690234						
ANR	5690471	Symbol	to		5690234						
ANR	5690472	Symbol	* r		5690234						
ANR	5690473	Symbol	rgs		5690234						
ANR	5690474	Function	r_range_list	317:0:6846:7271							
ANR	5690475	FunctionDef	"r_range_list (RRange * rgs , int rad)"		5690474	0					
ANR	5690476	CompoundStatement		317:39:6885:7271	5690474	0					
ANR	5690477	IdentifierDeclStatement	ut64 total = 0 ;	318:1:6888:6902	5690474	0	True				
ANR	5690478	IdentifierDecl	total = 0		5690474	0					
ANR	5690479	IdentifierDeclType	ut64		5690474	0					
ANR	5690480	Identifier	total		5690474	1					
ANR	5690481	AssignmentExpression	total = 0		5690474	2		=			
ANR	5690482	Identifier	total		5690474	0					
ANR	5690483	PrimaryExpression	0		5690474	1					
ANR	5690484	IdentifierDeclStatement	RRangeItem * r ;	319:1:6905:6918	5690474	1	True				
ANR	5690485	IdentifierDecl	* r		5690474	0					
ANR	5690486	IdentifierDeclType	RRangeItem *		5690474	0					
ANR	5690487	Identifier	r		5690474	1					
ANR	5690488	IdentifierDeclStatement	RListIter * iter ;	320:1:6921:6936	5690474	2	True				
ANR	5690489	IdentifierDecl	* iter		5690474	0					
ANR	5690490	IdentifierDeclType	RListIter *		5690474	0					
ANR	5690491	Identifier	iter		5690474	1					
ANR	5690492	ExpressionStatement	r_range_sort ( rgs )	321:1:6939:6957	5690474	3	True				
ANR	5690493	CallExpression	r_range_sort ( rgs )		5690474	0					
ANR	5690494	Callee	r_range_sort		5690474	0					
ANR	5690495	Identifier	r_range_sort		5690474	0					
ANR	5690496	ArgumentList	rgs		5690474	1					
ANR	5690497	Argument	rgs		5690474	0					
ANR	5690498	Identifier	rgs		5690474	0					
ANR	5690499	Statement	r_list_foreach	322:1:6960:6973	5690474	4	True				
ANR	5690500	Statement	(	322:16:6975:6975	5690474	5	True				
ANR	5690501	Statement	rgs	322:17:6976:6978	5690474	6	True				
ANR	5690502	Statement	->	322:20:6979:6980	5690474	7	True				
ANR	5690503	Statement	ranges	322:22:6981:6986	5690474	8	True				
ANR	5690504	Statement	","	322:28:6987:6987	5690474	9	True				
ANR	5690505	Statement	iter	322:30:6989:6992	5690474	10	True				
ANR	5690506	Statement	","	322:34:6993:6993	5690474	11	True				
ANR	5690507	Statement	r	322:36:6995:6995	5690474	12	True				
ANR	5690508	Statement	)	322:37:6996:6996	5690474	13	True				
ANR	5690509	CompoundStatement		6:39:112:112	5690474	14					
ANR	5690510	IfStatement	if ( rad )		5690474	0					
ANR	5690511	Condition	rad	323:6:7006:7008	5690474	0	True				
ANR	5690512	Identifier	rad		5690474	0					
ANR	5690513	CompoundStatement		7:11:125:125	5690474	1					
ANR	5690514	Statement	printf	324:3:7016:7021	5690474	0	True				
ANR	5690515	Statement	(	324:10:7023:7023	5690474	1	True				
ANR	5690516	Statement	"""ar+ 0x%08"""	324:11:7024:7034	5690474	2	True				
ANR	5690517	Statement	PFMT64x	324:22:7035:7041	5690474	3	True				
ANR	5690518	Statement	""" 0x%08"""	324:29:7042:7049	5690474	4	True				
ANR	5690519	Statement	PFMT64x	324:37:7050:7056	5690474	5	True				
ANR	5690520	Statement	"""\\n"""	324:44:7057:7060	5690474	6	True				
ANR	5690521	Statement	","	324:48:7061:7061	5690474	7	True				
ANR	5690522	Statement	r	324:50:7063:7063	5690474	8	True				
ANR	5690523	Statement	->	324:51:7064:7065	5690474	9	True				
ANR	5690524	Statement	fr	324:53:7066:7067	5690474	10	True				
ANR	5690525	Statement	","	324:55:7068:7068	5690474	11	True				
ANR	5690526	Statement	r	324:57:7070:7070	5690474	12	True				
ANR	5690527	Statement	->	324:58:7071:7072	5690474	13	True				
ANR	5690528	Statement	to	324:60:7073:7074	5690474	14	True				
ANR	5690529	Statement	)	324:62:7075:7075	5690474	15	True				
ANR	5690530	ExpressionStatement		324:63:7076:7076	5690474	16	True				
ANR	5690531	ElseStatement	else		5690474	0					
ANR	5690532	CompoundStatement		9:9:201:201	5690474	0					
ANR	5690533	Statement	printf	326:3:7092:7097	5690474	0	True				
ANR	5690534	Statement	(	326:10:7099:7099	5690474	1	True				
ANR	5690535	Statement	"""0x%08"""	326:11:7100:7106	5690474	2	True				
ANR	5690536	Statement	PFMT64x	326:18:7107:7113	5690474	3	True				
ANR	5690537	Statement	""" 0x%08"""	326:25:7114:7121	5690474	4	True				
ANR	5690538	Statement	PFMT64x	326:33:7122:7128	5690474	5	True				
ANR	5690539	Statement	""" ; %"""	326:40:7129:7134	5690474	6	True				
ANR	5690540	Statement	PFMT64d	326:46:7135:7141	5690474	7	True				
ANR	5690541	Statement	"""\\n"""	326:53:7142:7145	5690474	8	True				
ANR	5690542	Statement	","	326:57:7146:7146	5690474	9	True				
ANR	5690543	Statement	r	326:59:7148:7148	5690474	10	True				
ANR	5690544	Statement	->	326:60:7149:7150	5690474	11	True				
ANR	5690545	Statement	fr	326:62:7151:7152	5690474	12	True				
ANR	5690546	Statement	","	326:64:7153:7153	5690474	13	True				
ANR	5690547	Statement	r	326:66:7155:7155	5690474	14	True				
ANR	5690548	Statement	->	326:67:7156:7157	5690474	15	True				
ANR	5690549	Statement	to	326:69:7158:7159	5690474	16	True				
ANR	5690550	Statement	","	326:71:7160:7160	5690474	17	True				
ANR	5690551	Statement	r	326:73:7162:7162	5690474	18	True				
ANR	5690552	Statement	->	326:74:7163:7164	5690474	19	True				
ANR	5690553	Statement	to	326:76:7165:7166	5690474	20	True				
ANR	5690554	Statement	-	326:79:7168:7168	5690474	21	True				
ANR	5690555	Statement	r	326:81:7170:7170	5690474	22	True				
ANR	5690556	Statement	->	326:82:7171:7172	5690474	23	True				
ANR	5690557	Statement	fr	326:84:7173:7174	5690474	24	True				
ANR	5690558	Statement	)	326:86:7175:7175	5690474	25	True				
ANR	5690559	ExpressionStatement		326:87:7176:7176	5690474	26	True				
ANR	5690560	ExpressionStatement	total += ( r -> to - r -> fr )	328:2:7184:7208	5690474	1	True				
ANR	5690561	AssignmentExpression	total += ( r -> to - r -> fr )		5690474	0		+=			
ANR	5690562	Identifier	total		5690474	0					
ANR	5690563	AdditiveExpression	r -> to - r -> fr		5690474	1		-			
ANR	5690564	PtrMemberAccess	r -> to		5690474	0					
ANR	5690565	Identifier	r		5690474	0					
ANR	5690566	Identifier	to		5690474	1					
ANR	5690567	PtrMemberAccess	r -> fr		5690474	1					
ANR	5690568	Identifier	r		5690474	0					
ANR	5690569	Identifier	fr		5690474	1					
ANR	5690570	Statement	eprintf	330:1:7214:7220	5690474	15	True				
ANR	5690571	Statement	(	330:9:7222:7222	5690474	16	True				
ANR	5690572	Statement	"""Total bytes: %"""	330:10:7223:7238	5690474	17	True				
ANR	5690573	Statement	PFMT64d	330:26:7239:7245	5690474	18	True				
ANR	5690574	Statement	"""\\n"""	330:33:7246:7249	5690474	19	True				
ANR	5690575	Statement	","	330:37:7250:7250	5690474	20	True				
ANR	5690576	Statement	total	330:39:7252:7256	5690474	21	True				
ANR	5690577	Statement	)	330:44:7257:7257	5690474	22	True				
ANR	5690578	ExpressionStatement		330:45:7258:7258	5690474	23	True				
ANR	5690579	ReturnStatement	return 0 ;	331:1:7261:7269	5690474	24	True				
ANR	5690580	PrimaryExpression	0		5690474	0					
ANR	5690581	ReturnType	int		5690474	1					
ANR	5690582	Identifier	r_range_list		5690474	2					
ANR	5690583	ParameterList	"RRange * rgs , int rad"		5690474	3					
ANR	5690584	Parameter	RRange * rgs	317:17:6863:6873	5690474	0	True				
ANR	5690585	ParameterType	RRange *		5690474	0					
ANR	5690586	Identifier	rgs		5690474	1					
ANR	5690587	Parameter	int rad	317:30:6876:6882	5690474	1	True				
ANR	5690588	ParameterType	int		5690474	0					
ANR	5690589	Identifier	rad		5690474	1					
ANR	5690590	CFGEntryNode	ENTRY		5690474		True				
ANR	5690591	CFGExitNode	EXIT		5690474		True				
ANR	5690592	Symbol	total		5690474						
ANR	5690593	Symbol	r		5690474						
ANR	5690594	Symbol	rad		5690474						
ANR	5690595	Symbol	r -> to		5690474						
ANR	5690596	Symbol	r -> fr		5690474						
ANR	5690597	Symbol	iter		5690474						
ANR	5690598	Symbol	* r		5690474						
ANR	5690599	Symbol	rgs		5690474						
ANR	5690600	Function	r_range_get_n	334:0:7274:7541							
ANR	5690601	FunctionDef	"r_range_get_n (RRange * rgs , int n , ut64 * fr , ut64 * to)"		5690600	0					
ANR	5690602	CompoundStatement		334:58:7332:7541	5690600	0					
ANR	5690603	IdentifierDeclStatement	int count = 0 ;	335:1:7335:7348	5690600	0	True				
ANR	5690604	IdentifierDecl	count = 0		5690600	0					
ANR	5690605	IdentifierDeclType	int		5690600	0					
ANR	5690606	Identifier	count		5690600	1					
ANR	5690607	AssignmentExpression	count = 0		5690600	2		=			
ANR	5690608	Identifier	count		5690600	0					
ANR	5690609	PrimaryExpression	0		5690600	1					
ANR	5690610	IdentifierDeclStatement	RRangeItem * r ;	336:1:7351:7364	5690600	1	True				
ANR	5690611	IdentifierDecl	* r		5690600	0					
ANR	5690612	IdentifierDeclType	RRangeItem *		5690600	0					
ANR	5690613	Identifier	r		5690600	1					
ANR	5690614	IdentifierDeclStatement	RListIter * iter ;	337:1:7367:7382	5690600	2	True				
ANR	5690615	IdentifierDecl	* iter		5690600	0					
ANR	5690616	IdentifierDeclType	RListIter *		5690600	0					
ANR	5690617	Identifier	iter		5690600	1					
ANR	5690618	ExpressionStatement	r_range_sort ( rgs )	338:1:7385:7403	5690600	3	True				
ANR	5690619	CallExpression	r_range_sort ( rgs )		5690600	0					
ANR	5690620	Callee	r_range_sort		5690600	0					
ANR	5690621	Identifier	r_range_sort		5690600	0					
ANR	5690622	ArgumentList	rgs		5690600	1					
ANR	5690623	Argument	rgs		5690600	0					
ANR	5690624	Identifier	rgs		5690600	0					
ANR	5690625	Statement	r_list_foreach	339:1:7406:7419	5690600	4	True				
ANR	5690626	Statement	(	339:16:7421:7421	5690600	5	True				
ANR	5690627	Statement	rgs	339:17:7422:7424	5690600	6	True				
ANR	5690628	Statement	->	339:20:7425:7426	5690600	7	True				
ANR	5690629	Statement	ranges	339:22:7427:7432	5690600	8	True				
ANR	5690630	Statement	","	339:28:7433:7433	5690600	9	True				
ANR	5690631	Statement	iter	339:30:7435:7438	5690600	10	True				
ANR	5690632	Statement	","	339:34:7439:7439	5690600	11	True				
ANR	5690633	Statement	r	339:36:7441:7441	5690600	12	True				
ANR	5690634	Statement	)	339:37:7442:7442	5690600	13	True				
ANR	5690635	CompoundStatement		6:39:111:111	5690600	14					
ANR	5690636	IfStatement	if ( count == n )		5690600	0					
ANR	5690637	Condition	count == n	340:7:7453:7462	5690600	0	True				
ANR	5690638	EqualityExpression	count == n		5690600	0		==			
ANR	5690639	Identifier	count		5690600	0					
ANR	5690640	Identifier	n		5690600	1					
ANR	5690641	CompoundStatement		7:19:132:132	5690600	1					
ANR	5690642	ExpressionStatement	* fr = r -> fr	341:3:7470:7481	5690600	0	True				
ANR	5690643	AssignmentExpression	* fr = r -> fr		5690600	0		=			
ANR	5690644	UnaryOperationExpression	* fr		5690600	0					
ANR	5690645	UnaryOperator	*		5690600	0					
ANR	5690646	Identifier	fr		5690600	1					
ANR	5690647	PtrMemberAccess	r -> fr		5690600	1					
ANR	5690648	Identifier	r		5690600	0					
ANR	5690649	Identifier	fr		5690600	1					
ANR	5690650	ExpressionStatement	* to = r -> to	342:3:7486:7497	5690600	1	True				
ANR	5690651	AssignmentExpression	* to = r -> to		5690600	0		=			
ANR	5690652	UnaryOperationExpression	* to		5690600	0					
ANR	5690653	UnaryOperator	*		5690600	0					
ANR	5690654	Identifier	to		5690600	1					
ANR	5690655	PtrMemberAccess	r -> to		5690600	1					
ANR	5690656	Identifier	r		5690600	0					
ANR	5690657	Identifier	to		5690600	1					
ANR	5690658	ReturnStatement	return 1 ;	343:3:7502:7510	5690600	2	True				
ANR	5690659	PrimaryExpression	1		5690600	0					
ANR	5690660	ExpressionStatement	count ++	345:2:7518:7525	5690600	1	True				
ANR	5690661	PostIncDecOperationExpression	count ++		5690600	0					
ANR	5690662	Identifier	count		5690600	0					
ANR	5690663	IncDec	++		5690600	1					
ANR	5690664	ReturnStatement	return 0 ;	347:1:7531:7539	5690600	15	True				
ANR	5690665	PrimaryExpression	0		5690600	0					
ANR	5690666	ReturnType	int		5690600	1					
ANR	5690667	Identifier	r_range_get_n		5690600	2					
ANR	5690668	ParameterList	"RRange * rgs , int n , ut64 * fr , ut64 * to"		5690600	3					
ANR	5690669	Parameter	RRange * rgs	334:18:7292:7302	5690600	0	True				
ANR	5690670	ParameterType	RRange *		5690600	0					
ANR	5690671	Identifier	rgs		5690600	1					
ANR	5690672	Parameter	int n	334:31:7305:7309	5690600	1	True				
ANR	5690673	ParameterType	int		5690600	0					
ANR	5690674	Identifier	n		5690600	1					
ANR	5690675	Parameter	ut64 * fr	334:38:7312:7319	5690600	2	True				
ANR	5690676	ParameterType	ut64 *		5690600	0					
ANR	5690677	Identifier	fr		5690600	1					
ANR	5690678	Parameter	ut64 * to	334:48:7322:7329	5690600	3	True				
ANR	5690679	ParameterType	ut64 *		5690600	0					
ANR	5690680	Identifier	to		5690600	1					
ANR	5690681	CFGEntryNode	ENTRY		5690600		True				
ANR	5690682	CFGExitNode	EXIT		5690600		True				
ANR	5690683	Symbol	* fr		5690600						
ANR	5690684	Symbol	r		5690600						
ANR	5690685	Symbol	* to		5690600						
ANR	5690686	Symbol	r -> to		5690600						
ANR	5690687	Symbol	r -> fr		5690600						
ANR	5690688	Symbol	count		5690600						
ANR	5690689	Symbol	iter		5690600						
ANR	5690690	Symbol	to		5690600						
ANR	5690691	Symbol	fr		5690600						
ANR	5690692	Symbol	* r		5690600						
ANR	5690693	Symbol	n		5690600						
ANR	5690694	Symbol	rgs		5690600						
ANR	5690695	Function	r_range_inverse	356:0:7701:8307							
ANR	5690696	FunctionDef	"r_range_inverse (RRange * rgs , ut64 fr , ut64 to , int flags)"		5690695	0					
ANR	5690697	CompoundStatement		356:66:7767:8307	5690695	0					
ANR	5690698	IdentifierDeclStatement	ut64 total = 0 ;	357:1:7770:7784	5690695	0	True				
ANR	5690699	IdentifierDecl	total = 0		5690695	0					
ANR	5690700	IdentifierDeclType	ut64		5690695	0					
ANR	5690701	Identifier	total		5690695	1					
ANR	5690702	AssignmentExpression	total = 0		5690695	2		=			
ANR	5690703	Identifier	total		5690695	0					
ANR	5690704	PrimaryExpression	0		5690695	1					
ANR	5690705	IdentifierDeclStatement	RListIter * iter ;	358:1:7787:7802	5690695	1	True				
ANR	5690706	IdentifierDecl	* iter		5690695	0					
ANR	5690707	IdentifierDeclType	RListIter *		5690695	0					
ANR	5690708	Identifier	iter		5690695	1					
ANR	5690709	IdentifierDeclStatement	RRangeItem * r = NULL ;	359:1:7805:7825	5690695	2	True				
ANR	5690710	IdentifierDecl	* r = NULL		5690695	0					
ANR	5690711	IdentifierDeclType	RRangeItem *		5690695	0					
ANR	5690712	Identifier	r		5690695	1					
ANR	5690713	AssignmentExpression	* r = NULL		5690695	2		=			
ANR	5690714	Identifier	NULL		5690695	0					
ANR	5690715	Identifier	NULL		5690695	1					
ANR	5690716	IdentifierDeclStatement	RRange * newrgs = r_range_new ( ) ;	360:1:7828:7858	5690695	3	True				
ANR	5690717	IdentifierDecl	* newrgs = r_range_new ( )		5690695	0					
ANR	5690718	IdentifierDeclType	RRange *		5690695	0					
ANR	5690719	Identifier	newrgs		5690695	1					
ANR	5690720	AssignmentExpression	* newrgs = r_range_new ( )		5690695	2		=			
ANR	5690721	Identifier	newrgs		5690695	0					
ANR	5690722	CallExpression	r_range_new ( )		5690695	1					
ANR	5690723	Callee	r_range_new		5690695	0					
ANR	5690724	Identifier	r_range_new		5690695	0					
ANR	5690725	ArgumentList			5690695	1					
ANR	5690726	ExpressionStatement	r_range_sort ( rgs )	362:1:7862:7879	5690695	4	True				
ANR	5690727	CallExpression	r_range_sort ( rgs )		5690695	0					
ANR	5690728	Callee	r_range_sort		5690695	0					
ANR	5690729	Identifier	r_range_sort		5690695	0					
ANR	5690730	ArgumentList	rgs		5690695	1					
ANR	5690731	Argument	rgs		5690695	0					
ANR	5690732	Identifier	rgs		5690695	0					
ANR	5690733	Statement	r_list_foreach	364:1:7883:7896	5690695	5	True				
ANR	5690734	Statement	(	364:16:7898:7898	5690695	6	True				
ANR	5690735	Statement	rgs	364:17:7899:7901	5690695	7	True				
ANR	5690736	Statement	->	364:20:7902:7903	5690695	8	True				
ANR	5690737	Statement	ranges	364:22:7904:7909	5690695	9	True				
ANR	5690738	Statement	","	364:28:7910:7910	5690695	10	True				
ANR	5690739	Statement	iter	364:30:7912:7915	5690695	11	True				
ANR	5690740	Statement	","	364:34:7916:7916	5690695	12	True				
ANR	5690741	Statement	r	364:36:7918:7918	5690695	13	True				
ANR	5690742	Statement	)	364:37:7919:7919	5690695	14	True				
ANR	5690743	CompoundStatement		9:39:153:153	5690695	15					
ANR	5690744	IfStatement	if ( r -> fr > fr && r -> fr < to )		5690695	0					
ANR	5690745	Condition	r -> fr > fr && r -> fr < to	365:6:7929:7952	5690695	0	True				
ANR	5690746	AndExpression	r -> fr > fr && r -> fr < to		5690695	0		&&			
ANR	5690747	RelationalExpression	r -> fr > fr		5690695	0		>			
ANR	5690748	PtrMemberAccess	r -> fr		5690695	0					
ANR	5690749	Identifier	r		5690695	0					
ANR	5690750	Identifier	fr		5690695	1					
ANR	5690751	Identifier	fr		5690695	1					
ANR	5690752	RelationalExpression	r -> fr < to		5690695	1		<			
ANR	5690753	PtrMemberAccess	r -> fr		5690695	0					
ANR	5690754	Identifier	r		5690695	0					
ANR	5690755	Identifier	fr		5690695	1					
ANR	5690756	Identifier	to		5690695	1					
ANR	5690757	CompoundStatement		10:32:187:187	5690695	1					
ANR	5690758	ExpressionStatement	"r_range_add ( newrgs , fr , r -> fr , 1 )"	366:3:7960:7994	5690695	0	True				
ANR	5690759	CallExpression	"r_range_add ( newrgs , fr , r -> fr , 1 )"		5690695	0					
ANR	5690760	Callee	r_range_add		5690695	0					
ANR	5690761	Identifier	r_range_add		5690695	0					
ANR	5690762	ArgumentList	newrgs		5690695	1					
ANR	5690763	Argument	newrgs		5690695	0					
ANR	5690764	Identifier	newrgs		5690695	0					
ANR	5690765	Argument	fr		5690695	1					
ANR	5690766	Identifier	fr		5690695	0					
ANR	5690767	Argument	r -> fr		5690695	2					
ANR	5690768	PtrMemberAccess	r -> fr		5690695	0					
ANR	5690769	Identifier	r		5690695	0					
ANR	5690770	Identifier	fr		5690695	1					
ANR	5690771	Argument	1		5690695	3					
ANR	5690772	PrimaryExpression	1		5690695	0					
ANR	5690773	ExpressionStatement	total += ( r -> fr - fr )	368:3:8062:8083	5690695	1	True				
ANR	5690774	AssignmentExpression	total += ( r -> fr - fr )		5690695	0		+=			
ANR	5690775	Identifier	total		5690695	0					
ANR	5690776	AdditiveExpression	r -> fr - fr		5690695	1		-			
ANR	5690777	PtrMemberAccess	r -> fr		5690695	0					
ANR	5690778	Identifier	r		5690695	0					
ANR	5690779	Identifier	fr		5690695	1					
ANR	5690780	Identifier	fr		5690695	1					
ANR	5690781	ExpressionStatement	fr = r -> to	369:3:8088:8098	5690695	2	True				
ANR	5690782	AssignmentExpression	fr = r -> to		5690695	0		=			
ANR	5690783	Identifier	fr		5690695	0					
ANR	5690784	PtrMemberAccess	r -> to		5690695	1					
ANR	5690785	Identifier	r		5690695	0					
ANR	5690786	Identifier	to		5690695	1					
ANR	5690787	IfStatement	if ( fr < to )		5690695	16					
ANR	5690788	Condition	fr < to	372:5:8112:8118	5690695	0	True				
ANR	5690789	RelationalExpression	fr < to		5690695	0		<			
ANR	5690790	Identifier	fr		5690695	0					
ANR	5690791	Identifier	to		5690695	1					
ANR	5690792	CompoundStatement		17:14:353:353	5690695	1					
ANR	5690793	ExpressionStatement	"r_range_add ( newrgs , fr , to , 1 )"	374:2:8184:8215	5690695	0	True				
ANR	5690794	CallExpression	"r_range_add ( newrgs , fr , to , 1 )"		5690695	0					
ANR	5690795	Callee	r_range_add		5690695	0					
ANR	5690796	Identifier	r_range_add		5690695	0					
ANR	5690797	ArgumentList	newrgs		5690695	1					
ANR	5690798	Argument	newrgs		5690695	0					
ANR	5690799	Identifier	newrgs		5690695	0					
ANR	5690800	Argument	fr		5690695	1					
ANR	5690801	Identifier	fr		5690695	0					
ANR	5690802	Argument	to		5690695	2					
ANR	5690803	Identifier	to		5690695	0					
ANR	5690804	Argument	1		5690695	3					
ANR	5690805	PrimaryExpression	1		5690695	0					
ANR	5690806	ExpressionStatement	total += ( to - fr )	375:2:8219:8237	5690695	1	True				
ANR	5690807	AssignmentExpression	total += ( to - fr )		5690695	0		+=			
ANR	5690808	Identifier	total		5690695	0					
ANR	5690809	AdditiveExpression	to - fr		5690695	1		-			
ANR	5690810	Identifier	to		5690695	0					
ANR	5690811	Identifier	fr		5690695	1					
ANR	5690812	ReturnStatement	return newrgs ;	378:1:8292:8305	5690695	17	True				
ANR	5690813	Identifier	newrgs		5690695	0					
ANR	5690814	ReturnType	RRange *		5690695	1					
ANR	5690815	Identifier	r_range_inverse		5690695	2					
ANR	5690816	ParameterList	"RRange * rgs , ut64 fr , ut64 to , int flags"		5690695	3					
ANR	5690817	Parameter	RRange * rgs	356:24:7725:7735	5690695	0	True				
ANR	5690818	ParameterType	RRange *		5690695	0					
ANR	5690819	Identifier	rgs		5690695	1					
ANR	5690820	Parameter	ut64 fr	356:37:7738:7744	5690695	1	True				
ANR	5690821	ParameterType	ut64		5690695	0					
ANR	5690822	Identifier	fr		5690695	1					
ANR	5690823	Parameter	ut64 to	356:46:7747:7753	5690695	2	True				
ANR	5690824	ParameterType	ut64		5690695	0					
ANR	5690825	Identifier	to		5690695	1					
ANR	5690826	Parameter	int flags	356:55:7756:7764	5690695	3	True				
ANR	5690827	ParameterType	int		5690695	0					
ANR	5690828	Identifier	flags		5690695	1					
ANR	5690829	CFGEntryNode	ENTRY		5690695		True				
ANR	5690830	CFGExitNode	EXIT		5690695		True				
ANR	5690831	Symbol	r_range_new		5690695						
ANR	5690832	Symbol	newrgs		5690695						
ANR	5690833	Symbol	NULL		5690695						
ANR	5690834	Symbol	r -> to		5690695						
ANR	5690835	Symbol	flags		5690695						
ANR	5690836	Symbol	iter		5690695						
ANR	5690837	Symbol	fr		5690695						
ANR	5690838	Symbol	total		5690695						
ANR	5690839	Symbol	r		5690695						
ANR	5690840	Symbol	r -> fr		5690695						
ANR	5690841	Symbol	to		5690695						
ANR	5690842	Symbol	* r		5690695						
ANR	5690843	Symbol	rgs		5690695						
ANR	5690844	Function	r_range_overlap	387:0:8397:8936							
ANR	5690845	FunctionDef	"r_range_overlap (ut64 a0 , ut64 a1 , ut64 b0 , ut64 b1 , int * d)"		5690844	0					
ANR	5690846	CompoundStatement		387:70:8467:8936	5690844	0					
ANR	5690847	ReturnStatement	"return * d = ( b0 - a0 ) , ! ( a1 < b0 || a0 > b1 ) ;"	391:1:8593:8637	5690844	0	True				
ANR	5690848	Expression	"* d = ( b0 - a0 ) , ! ( a1 < b0 || a0 > b1 )"		5690844	0					
ANR	5690849	AssignmentExpression	* d = ( b0 - a0 )		5690844	0		=			
ANR	5690850	UnaryOperationExpression	* d		5690844	0					
ANR	5690851	UnaryOperator	*		5690844	0					
ANR	5690852	Identifier	d		5690844	1					
ANR	5690853	AdditiveExpression	b0 - a0		5690844	1		-			
ANR	5690854	Identifier	b0		5690844	0					
ANR	5690855	Identifier	a0		5690844	1					
ANR	5690856	UnaryOperationExpression	! ( a1 < b0 || a0 > b1 )		5690844	1					
ANR	5690857	UnaryOperator	!		5690844	0					
ANR	5690858	OrExpression	a1 < b0 || a0 > b1		5690844	1		||			
ANR	5690859	RelationalExpression	a1 < b0		5690844	0		<			
ANR	5690860	Identifier	a1		5690844	0					
ANR	5690861	Identifier	b0		5690844	1					
ANR	5690862	RelationalExpression	a0 > b1		5690844	1		>			
ANR	5690863	Identifier	a0		5690844	0					
ANR	5690864	Identifier	b1		5690844	1					
ANR	5690865	IfStatement	if ( a1 < b0 || a0 > b1 )		5690844	1					
ANR	5690866	Condition	a1 < b0 || a0 > b1	396:5:8721:8734	5690844	0	True				
ANR	5690867	OrExpression	a1 < b0 || a0 > b1		5690844	0		||			
ANR	5690868	RelationalExpression	a1 < b0		5690844	0		<			
ANR	5690869	Identifier	a1		5690844	0					
ANR	5690870	Identifier	b0		5690844	1					
ANR	5690871	RelationalExpression	a0 > b1		5690844	1		>			
ANR	5690872	Identifier	a0		5690844	0					
ANR	5690873	Identifier	b1		5690844	1					
ANR	5690874	ReturnStatement	return 0 ;	397:2:8739:8747	5690844	1	True				
ANR	5690875	PrimaryExpression	0		5690844	0					
ANR	5690876	ReturnStatement	return ( b0 - a0 ) ;	403:1:8913:8927	5690844	2	True				
ANR	5690877	AdditiveExpression	b0 - a0		5690844	0		-			
ANR	5690878	Identifier	b0		5690844	0					
ANR	5690879	Identifier	a0		5690844	1					
ANR	5690880	ReturnType	R_API int		5690844	1					
ANR	5690881	Identifier	r_range_overlap		5690844	2					
ANR	5690882	ParameterList	"ut64 a0 , ut64 a1 , ut64 b0 , ut64 b1 , int * d"		5690844	3					
ANR	5690883	Parameter	ut64 a0	387:26:8423:8429	5690844	0	True				
ANR	5690884	ParameterType	ut64		5690844	0					
ANR	5690885	Identifier	a0		5690844	1					
ANR	5690886	Parameter	ut64 a1	387:35:8432:8438	5690844	1	True				
ANR	5690887	ParameterType	ut64		5690844	0					
ANR	5690888	Identifier	a1		5690844	1					
ANR	5690889	Parameter	ut64 b0	387:44:8441:8447	5690844	2	True				
ANR	5690890	ParameterType	ut64		5690844	0					
ANR	5690891	Identifier	b0		5690844	1					
ANR	5690892	Parameter	ut64 b1	387:53:8450:8456	5690844	3	True				
ANR	5690893	ParameterType	ut64		5690844	0					
ANR	5690894	Identifier	b1		5690844	1					
ANR	5690895	Parameter	int * d	387:62:8459:8464	5690844	4	True				
ANR	5690896	ParameterType	int *		5690844	0					
ANR	5690897	Identifier	d		5690844	1					
ANR	5690898	CFGEntryNode	ENTRY		5690844		True				
ANR	5690899	CFGExitNode	EXIT		5690844		True				
ANR	5690900	Symbol	a1		5690844						
ANR	5690901	Symbol	d		5690844						
ANR	5690902	Symbol	b0		5690844						
ANR	5690903	Symbol	* d		5690844						
ANR	5690904	Symbol	a0		5690844						
ANR	5690905	Symbol	b1		5690844						
