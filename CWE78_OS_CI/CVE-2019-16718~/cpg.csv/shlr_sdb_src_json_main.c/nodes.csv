command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6081055	File	data/converged/CVE-2019-16718~_radare2/shlr_sdb_src_json_main.c								
ANR	6081056	DeclStmt									
ANR	6081057	Decl							Rangstr	"Rangstr ( const char * s , Rangstr * rs )"	json_find
ANR	6081058	Function	test_main	10:0:212:497							
ANR	6081059	FunctionDef	test_main ()		6081058	0					
ANR	6081060	CompoundStatement		10:17:229:497	6081058	0					
ANR	6081061	IdentifierDeclStatement	Rangstr rs ;	11:1:232:243	6081058	0	True				
ANR	6081062	IdentifierDecl	rs		6081058	0					
ANR	6081063	IdentifierDeclType	Rangstr		6081058	0					
ANR	6081064	Identifier	rs		6081058	1					
ANR	6081065	ExpressionStatement	"rs = json_get ( ""{\\""hello\\"":\\""world\\""}"" , ""hello"" )"	13:1:247:295	6081058	1	True				
ANR	6081066	AssignmentExpression	"rs = json_get ( ""{\\""hello\\"":\\""world\\""}"" , ""hello"" )"		6081058	0		=			
ANR	6081067	Identifier	rs		6081058	0					
ANR	6081068	CallExpression	"json_get ( ""{\\""hello\\"":\\""world\\""}"" , ""hello"" )"		6081058	1					
ANR	6081069	Callee	json_get		6081058	0					
ANR	6081070	Identifier	json_get		6081058	0					
ANR	6081071	ArgumentList	"""{\\""hello\\"":\\""world\\""}"""		6081058	1					
ANR	6081072	Argument	"""{\\""hello\\"":\\""world\\""}"""		6081058	0					
ANR	6081073	PrimaryExpression	"""{\\""hello\\"":\\""world\\""}"""		6081058	0					
ANR	6081074	Argument	"""hello"""		6081058	1					
ANR	6081075	PrimaryExpression	"""hello"""		6081058	0					
ANR	6081076	ExpressionStatement	"printf ( ""OUT: "" )"	14:0:297:313	6081058	2	True				
ANR	6081077	CallExpression	"printf ( ""OUT: "" )"		6081058	0					
ANR	6081078	Callee	printf		6081058	0					
ANR	6081079	Identifier	printf		6081058	0					
ANR	6081080	ArgumentList	"""OUT: """		6081058	1					
ANR	6081081	Argument	"""OUT: """		6081058	0					
ANR	6081082	PrimaryExpression	"""OUT: """		6081058	0					
ANR	6081083	ExpressionStatement	rangstr_print ( & rs )	15:0:315:334	6081058	3	True				
ANR	6081084	CallExpression	rangstr_print ( & rs )		6081058	0					
ANR	6081085	Callee	rangstr_print		6081058	0					
ANR	6081086	Identifier	rangstr_print		6081058	0					
ANR	6081087	ArgumentList	& rs		6081058	1					
ANR	6081088	Argument	& rs		6081058	0					
ANR	6081089	UnaryOperationExpression	& rs		6081058	0					
ANR	6081090	UnaryOperator	&		6081058	0					
ANR	6081091	Identifier	rs		6081058	1					
ANR	6081092	ExpressionStatement	"printf ( ""\\n"" )"	16:0:336:349	6081058	4	True				
ANR	6081093	CallExpression	"printf ( ""\\n"" )"		6081058	0					
ANR	6081094	Callee	printf		6081058	0					
ANR	6081095	Identifier	printf		6081058	0					
ANR	6081096	ArgumentList	"""\\n"""		6081058	1					
ANR	6081097	Argument	"""\\n"""		6081058	0					
ANR	6081098	PrimaryExpression	"""\\n"""		6081058	0					
ANR	6081099	ExpressionStatement	"printf ( ""--\\n"" )"	18:0:352:367	6081058	5	True				
ANR	6081100	CallExpression	"printf ( ""--\\n"" )"		6081058	0					
ANR	6081101	Callee	printf		6081058	0					
ANR	6081102	Identifier	printf		6081058	0					
ANR	6081103	ArgumentList	"""--\\n"""		6081058	1					
ANR	6081104	Argument	"""--\\n"""		6081058	0					
ANR	6081105	PrimaryExpression	"""--\\n"""		6081058	0					
ANR	6081106	ExpressionStatement	"rs = json_get ( ""{\\""hello\\"":{\\""world\\"":123}}"" , ""hello.world"" )"	19:1:370:430	6081058	6	True				
ANR	6081107	AssignmentExpression	"rs = json_get ( ""{\\""hello\\"":{\\""world\\"":123}}"" , ""hello.world"" )"		6081058	0		=			
ANR	6081108	Identifier	rs		6081058	0					
ANR	6081109	CallExpression	"json_get ( ""{\\""hello\\"":{\\""world\\"":123}}"" , ""hello.world"" )"		6081058	1					
ANR	6081110	Callee	json_get		6081058	0					
ANR	6081111	Identifier	json_get		6081058	0					
ANR	6081112	ArgumentList	"""{\\""hello\\"":{\\""world\\"":123}}"""		6081058	1					
ANR	6081113	Argument	"""{\\""hello\\"":{\\""world\\"":123}}"""		6081058	0					
ANR	6081114	PrimaryExpression	"""{\\""hello\\"":{\\""world\\"":123}}"""		6081058	0					
ANR	6081115	Argument	"""hello.world"""		6081058	1					
ANR	6081116	PrimaryExpression	"""hello.world"""		6081058	0					
ANR	6081117	ExpressionStatement	"printf ( ""OUT: "" )"	20:0:432:448	6081058	7	True				
ANR	6081118	CallExpression	"printf ( ""OUT: "" )"		6081058	0					
ANR	6081119	Callee	printf		6081058	0					
ANR	6081120	Identifier	printf		6081058	0					
ANR	6081121	ArgumentList	"""OUT: """		6081058	1					
ANR	6081122	Argument	"""OUT: """		6081058	0					
ANR	6081123	PrimaryExpression	"""OUT: """		6081058	0					
ANR	6081124	ExpressionStatement	rangstr_print ( & rs )	21:0:450:469	6081058	8	True				
ANR	6081125	CallExpression	rangstr_print ( & rs )		6081058	0					
ANR	6081126	Callee	rangstr_print		6081058	0					
ANR	6081127	Identifier	rangstr_print		6081058	0					
ANR	6081128	ArgumentList	& rs		6081058	1					
ANR	6081129	Argument	& rs		6081058	0					
ANR	6081130	UnaryOperationExpression	& rs		6081058	0					
ANR	6081131	UnaryOperator	&		6081058	0					
ANR	6081132	Identifier	rs		6081058	1					
ANR	6081133	ExpressionStatement	"printf ( ""\\n"" )"	22:0:471:484	6081058	9	True				
ANR	6081134	CallExpression	"printf ( ""\\n"" )"		6081058	0					
ANR	6081135	Callee	printf		6081058	0					
ANR	6081136	Identifier	printf		6081058	0					
ANR	6081137	ArgumentList	"""\\n"""		6081058	1					
ANR	6081138	Argument	"""\\n"""		6081058	0					
ANR	6081139	PrimaryExpression	"""\\n"""		6081058	0					
ANR	6081140	ReturnStatement	return 0 ;	23:1:487:495	6081058	10	True				
ANR	6081141	PrimaryExpression	0		6081058	0					
ANR	6081142	ReturnType	int		6081058	1					
ANR	6081143	Identifier	test_main		6081058	2					
ANR	6081144	ParameterList			6081058	3					
ANR	6081145	CFGEntryNode	ENTRY		6081058		True				
ANR	6081146	CFGExitNode	EXIT		6081058		True				
ANR	6081147	Symbol	rs		6081058						
ANR	6081148	Symbol	json_get		6081058						
ANR	6081149	Symbol	& rs		6081058						
ANR	6081150	Function	test_glossary	26:0:500:993							
ANR	6081151	FunctionDef	test_glossary (char * buf)		6081150	0					
ANR	6081152	CompoundStatement		26:29:529:993	6081150	0					
ANR	6081153	IdentifierDeclStatement	char * path ;	27:1:532:542	6081150	0	True				
ANR	6081154	IdentifierDecl	* path		6081150	0					
ANR	6081155	IdentifierDeclType	char *		6081150	0					
ANR	6081156	Identifier	path		6081150	1					
ANR	6081157	CompoundStatement		5:1:43:86	6081150	1					
ANR	6081158	ExpressionStatement	"path = ""glossary.title"""	29:1:547:570	6081150	0	True				
ANR	6081159	AssignmentExpression	"path = ""glossary.title"""		6081150	0		=			
ANR	6081160	Identifier	path		6081150	0					
ANR	6081161	PrimaryExpression	"""glossary.title"""		6081150	1					
ANR	6081162	IdentifierDeclStatement	"char * s = api_json_set ( buf , path , ""patata"" ) ;"	30:1:573:616	6081150	1	True				
ANR	6081163	IdentifierDecl	"* s = api_json_set ( buf , path , ""patata"" )"		6081150	0					
ANR	6081164	IdentifierDeclType	char *		6081150	0					
ANR	6081165	Identifier	s		6081150	1					
ANR	6081166	AssignmentExpression	"* s = api_json_set ( buf , path , ""patata"" )"		6081150	2		=			
ANR	6081167	Identifier	s		6081150	0					
ANR	6081168	CallExpression	"api_json_set ( buf , path , ""patata"" )"		6081150	1					
ANR	6081169	Callee	api_json_set		6081150	0					
ANR	6081170	Identifier	api_json_set		6081150	0					
ANR	6081171	ArgumentList	buf		6081150	1					
ANR	6081172	Argument	buf		6081150	0					
ANR	6081173	Identifier	buf		6081150	0					
ANR	6081174	Argument	path		6081150	1					
ANR	6081175	Identifier	path		6081150	0					
ANR	6081176	Argument	"""patata"""		6081150	2					
ANR	6081177	PrimaryExpression	"""patata"""		6081150	0					
ANR	6081178	IfStatement	if ( s )		6081150	2					
ANR	6081179	Condition	s	31:5:623:623	6081150	0	True				
ANR	6081180	Identifier	s		6081150	0					
ANR	6081181	CompoundStatement		6:8:96:96	6081150	1					
ANR	6081182	ExpressionStatement	"printf ( ""%s\\n"" , s )"	32:2:630:648	6081150	0	True				
ANR	6081183	CallExpression	"printf ( ""%s\\n"" , s )"		6081150	0					
ANR	6081184	Callee	printf		6081150	0					
ANR	6081185	Identifier	printf		6081150	0					
ANR	6081186	ArgumentList	"""%s\\n"""		6081150	1					
ANR	6081187	Argument	"""%s\\n"""		6081150	0					
ANR	6081188	PrimaryExpression	"""%s\\n"""		6081150	0					
ANR	6081189	Argument	s		6081150	1					
ANR	6081190	Identifier	s		6081150	0					
ANR	6081191	ExpressionStatement	free ( s )	33:2:652:660	6081150	1	True				
ANR	6081192	CallExpression	free ( s )		6081150	0					
ANR	6081193	Callee	free		6081150	0					
ANR	6081194	Identifier	free		6081150	0					
ANR	6081195	ArgumentList	s		6081150	1					
ANR	6081196	Argument	s		6081150	0					
ANR	6081197	Identifier	s		6081150	0					
ANR	6081198	ElseStatement	else		6081150	0					
ANR	6081199	ExpressionStatement	"printf ( ""set failed\\n"" )"	34:8:670:693	6081150	0	True				
ANR	6081200	CallExpression	"printf ( ""set failed\\n"" )"		6081150	0					
ANR	6081201	Callee	printf		6081150	0					
ANR	6081202	Identifier	printf		6081150	0					
ANR	6081203	ArgumentList	"""set failed\\n"""		6081150	1					
ANR	6081204	Argument	"""set failed\\n"""		6081150	0					
ANR	6081205	PrimaryExpression	"""set failed\\n"""		6081150	0					
ANR	6081206	CompoundStatement		13:1:196:229	6081150	2					
ANR	6081207	ExpressionStatement	"path = ""glossary.title"""	37:1:700:723	6081150	0	True				
ANR	6081208	AssignmentExpression	"path = ""glossary.title"""		6081150	0		=			
ANR	6081209	Identifier	path		6081150	0					
ANR	6081210	PrimaryExpression	"""glossary.title"""		6081150	1					
ANR	6081211	IdentifierDeclStatement	"char * s = api_json_get ( buf , path ) ;"	38:1:726:759	6081150	1	True				
ANR	6081212	IdentifierDecl	"* s = api_json_get ( buf , path )"		6081150	0					
ANR	6081213	IdentifierDeclType	char *		6081150	0					
ANR	6081214	Identifier	s		6081150	1					
ANR	6081215	AssignmentExpression	"* s = api_json_get ( buf , path )"		6081150	2		=			
ANR	6081216	Identifier	s		6081150	0					
ANR	6081217	CallExpression	"api_json_get ( buf , path )"		6081150	1					
ANR	6081218	Callee	api_json_get		6081150	0					
ANR	6081219	Identifier	api_json_get		6081150	0					
ANR	6081220	ArgumentList	buf		6081150	1					
ANR	6081221	Argument	buf		6081150	0					
ANR	6081222	Identifier	buf		6081150	0					
ANR	6081223	Argument	path		6081150	1					
ANR	6081224	Identifier	path		6081150	0					
ANR	6081225	IfStatement	if ( s )		6081150	2					
ANR	6081226	Condition	s	39:5:766:766	6081150	0	True				
ANR	6081227	Identifier	s		6081150	0					
ANR	6081228	CompoundStatement		14:8:239:239	6081150	1					
ANR	6081229	ExpressionStatement	"printf ( ""%s\\n"" , s )"	40:2:773:791	6081150	0	True				
ANR	6081230	CallExpression	"printf ( ""%s\\n"" , s )"		6081150	0					
ANR	6081231	Callee	printf		6081150	0					
ANR	6081232	Identifier	printf		6081150	0					
ANR	6081233	ArgumentList	"""%s\\n"""		6081150	1					
ANR	6081234	Argument	"""%s\\n"""		6081150	0					
ANR	6081235	PrimaryExpression	"""%s\\n"""		6081150	0					
ANR	6081236	Argument	s		6081150	1					
ANR	6081237	Identifier	s		6081150	0					
ANR	6081238	ExpressionStatement	free ( s )	41:2:795:803	6081150	1	True				
ANR	6081239	CallExpression	free ( s )		6081150	0					
ANR	6081240	Callee	free		6081150	0					
ANR	6081241	Identifier	free		6081150	0					
ANR	6081242	ArgumentList	s		6081150	1					
ANR	6081243	Argument	s		6081150	0					
ANR	6081244	Identifier	s		6081150	0					
ANR	6081245	ElseStatement	else		6081150	0					
ANR	6081246	ExpressionStatement	"printf ( ""set failed\\n"" )"	42:8:813:836	6081150	0	True				
ANR	6081247	CallExpression	"printf ( ""set failed\\n"" )"		6081150	0					
ANR	6081248	Callee	printf		6081150	0					
ANR	6081249	Identifier	printf		6081150	0					
ANR	6081250	ArgumentList	"""set failed\\n"""		6081150	1					
ANR	6081251	Argument	"""set failed\\n"""		6081150	0					
ANR	6081252	PrimaryExpression	"""set failed\\n"""		6081150	0					
ANR	6081253	CompoundStatement		21:1:339:372	6081150	3					
ANR	6081254	ExpressionStatement	"path = ""glossary.title"""	45:1:843:866	6081150	0	True				
ANR	6081255	AssignmentExpression	"path = ""glossary.title"""		6081150	0		=			
ANR	6081256	Identifier	path		6081150	0					
ANR	6081257	PrimaryExpression	"""glossary.title"""		6081150	1					
ANR	6081258	IdentifierDeclStatement	"char * s = api_json_get ( buf , path ) ;"	46:1:869:902	6081150	1	True				
ANR	6081259	IdentifierDecl	"* s = api_json_get ( buf , path )"		6081150	0					
ANR	6081260	IdentifierDeclType	char *		6081150	0					
ANR	6081261	Identifier	s		6081150	1					
ANR	6081262	AssignmentExpression	"* s = api_json_get ( buf , path )"		6081150	2		=			
ANR	6081263	Identifier	s		6081150	0					
ANR	6081264	CallExpression	"api_json_get ( buf , path )"		6081150	1					
ANR	6081265	Callee	api_json_get		6081150	0					
ANR	6081266	Identifier	api_json_get		6081150	0					
ANR	6081267	ArgumentList	buf		6081150	1					
ANR	6081268	Argument	buf		6081150	0					
ANR	6081269	Identifier	buf		6081150	0					
ANR	6081270	Argument	path		6081150	1					
ANR	6081271	Identifier	path		6081150	0					
ANR	6081272	IfStatement	if ( s )		6081150	2					
ANR	6081273	Condition	s	47:5:909:909	6081150	0	True				
ANR	6081274	Identifier	s		6081150	0					
ANR	6081275	CompoundStatement		22:8:382:382	6081150	1					
ANR	6081276	ExpressionStatement	"printf ( ""%s\\n"" , s )"	48:2:916:934	6081150	0	True				
ANR	6081277	CallExpression	"printf ( ""%s\\n"" , s )"		6081150	0					
ANR	6081278	Callee	printf		6081150	0					
ANR	6081279	Identifier	printf		6081150	0					
ANR	6081280	ArgumentList	"""%s\\n"""		6081150	1					
ANR	6081281	Argument	"""%s\\n"""		6081150	0					
ANR	6081282	PrimaryExpression	"""%s\\n"""		6081150	0					
ANR	6081283	Argument	s		6081150	1					
ANR	6081284	Identifier	s		6081150	0					
ANR	6081285	ExpressionStatement	free ( s )	49:2:938:946	6081150	1	True				
ANR	6081286	CallExpression	free ( s )		6081150	0					
ANR	6081287	Callee	free		6081150	0					
ANR	6081288	Identifier	free		6081150	0					
ANR	6081289	ArgumentList	s		6081150	1					
ANR	6081290	Argument	s		6081150	0					
ANR	6081291	Identifier	s		6081150	0					
ANR	6081292	ElseStatement	else		6081150	0					
ANR	6081293	ExpressionStatement	"printf ( ""set failed\\n"" )"	50:8:956:979	6081150	0	True				
ANR	6081294	CallExpression	"printf ( ""set failed\\n"" )"		6081150	0					
ANR	6081295	Callee	printf		6081150	0					
ANR	6081296	Identifier	printf		6081150	0					
ANR	6081297	ArgumentList	"""set failed\\n"""		6081150	1					
ANR	6081298	Argument	"""set failed\\n"""		6081150	0					
ANR	6081299	PrimaryExpression	"""set failed\\n"""		6081150	0					
ANR	6081300	ReturnStatement	return 0 ;	52:0:983:991	6081150	4	True				
ANR	6081301	PrimaryExpression	0		6081150	0					
ANR	6081302	ReturnType	int		6081150	1					
ANR	6081303	Identifier	test_glossary		6081150	2					
ANR	6081304	ParameterList	char * buf		6081150	3					
ANR	6081305	Parameter	char * buf	26:18:518:526	6081150	0	True				
ANR	6081306	ParameterType	char *		6081150	0					
ANR	6081307	Identifier	buf		6081150	1					
ANR	6081308	CFGEntryNode	ENTRY		6081150		True				
ANR	6081309	CFGExitNode	EXIT		6081150		True				
ANR	6081310	Symbol	api_json_set		6081150						
ANR	6081311	Symbol	path		6081150						
ANR	6081312	Symbol	buf		6081150						
ANR	6081313	Symbol	s		6081150						
ANR	6081314	Symbol	api_json_get		6081150						
ANR	6081315	Function	main	55:0:996:1837							
ANR	6081316	FunctionDef	"main (int argc , char * * argv)"		6081315	0					
ANR	6081317	CompoundStatement		55:32:1028:1837	6081315	0					
ANR	6081318	IdentifierDeclStatement	Rangstr rs ;	56:1:1031:1041	6081315	0	True				
ANR	6081319	IdentifierDecl	rs		6081315	0					
ANR	6081320	IdentifierDeclType	Rangstr		6081315	0					
ANR	6081321	Identifier	rs		6081315	1					
ANR	6081322	IdentifierDeclStatement	char buf [ 4096 ] ;	57:1:1044:1058	6081315	1	True				
ANR	6081323	IdentifierDecl	buf [ 4096 ]		6081315	0					
ANR	6081324	IdentifierDeclType	char [ 4096 ]		6081315	0					
ANR	6081325	Identifier	buf		6081315	1					
ANR	6081326	PrimaryExpression	4096		6081315	2					
ANR	6081327	IdentifierDeclStatement	"int n = fread ( buf , 1 , sizeof ( buf ) , stdin ) ;"	58:1:1061:1104	6081315	2	True				
ANR	6081328	IdentifierDecl	"n = fread ( buf , 1 , sizeof ( buf ) , stdin )"		6081315	0					
ANR	6081329	IdentifierDeclType	int		6081315	0					
ANR	6081330	Identifier	n		6081315	1					
ANR	6081331	AssignmentExpression	"n = fread ( buf , 1 , sizeof ( buf ) , stdin )"		6081315	2		=			
ANR	6081332	Identifier	n		6081315	0					
ANR	6081333	CallExpression	"fread ( buf , 1 , sizeof ( buf ) , stdin )"		6081315	1					
ANR	6081334	Callee	fread		6081315	0					
ANR	6081335	Identifier	fread		6081315	0					
ANR	6081336	ArgumentList	buf		6081315	1					
ANR	6081337	Argument	buf		6081315	0					
ANR	6081338	Identifier	buf		6081315	0					
ANR	6081339	Argument	1		6081315	1					
ANR	6081340	PrimaryExpression	1		6081315	0					
ANR	6081341	Argument	sizeof ( buf )		6081315	2					
ANR	6081342	SizeofExpression	sizeof ( buf )		6081315	0					
ANR	6081343	Sizeof	sizeof		6081315	0					
ANR	6081344	SizeofOperand	buf		6081315	1					
ANR	6081345	Argument	stdin		6081315	3					
ANR	6081346	Identifier	stdin		6081315	0					
ANR	6081347	ExpressionStatement	buf [ n ] = 0	59:1:1107:1117	6081315	3	True				
ANR	6081348	AssignmentExpression	buf [ n ] = 0		6081315	0		=			
ANR	6081349	ArrayIndexing	buf [ n ]		6081315	0					
ANR	6081350	Identifier	buf		6081315	0					
ANR	6081351	Identifier	n		6081315	1					
ANR	6081352	PrimaryExpression	0		6081315	1					
ANR	6081353	IdentifierDeclStatement	char * path = argv [ 1 ] ;	62:1:1173:1193	6081315	4	True				
ANR	6081354	IdentifierDecl	* path = argv [ 1 ]		6081315	0					
ANR	6081355	IdentifierDeclType	char *		6081315	0					
ANR	6081356	Identifier	path		6081315	1					
ANR	6081357	AssignmentExpression	* path = argv [ 1 ]		6081315	2		=			
ANR	6081358	Identifier	path		6081315	0					
ANR	6081359	ArrayIndexing	argv [ 1 ]		6081315	1					
ANR	6081360	Identifier	argv		6081315	0					
ANR	6081361	PrimaryExpression	1		6081315	1					
ANR	6081362	ExpressionStatement	"printf ( "">>>> %s <<<<\\n"" , sdb_json_unindent ( buf ) )"	65:1:1203:1253	6081315	5	True				
ANR	6081363	CallExpression	"printf ( "">>>> %s <<<<\\n"" , sdb_json_unindent ( buf ) )"		6081315	0					
ANR	6081364	Callee	printf		6081315	0					
ANR	6081365	Identifier	printf		6081315	0					
ANR	6081366	ArgumentList	""">>>> %s <<<<\\n"""		6081315	1					
ANR	6081367	Argument	""">>>> %s <<<<\\n"""		6081315	0					
ANR	6081368	PrimaryExpression	""">>>> %s <<<<\\n"""		6081315	0					
ANR	6081369	Argument	sdb_json_unindent ( buf )		6081315	1					
ANR	6081370	CallExpression	sdb_json_unindent ( buf )		6081315	0					
ANR	6081371	Callee	sdb_json_unindent		6081315	0					
ANR	6081372	Identifier	sdb_json_unindent		6081315	0					
ANR	6081373	ArgumentList	buf		6081315	1					
ANR	6081374	Argument	buf		6081315	0					
ANR	6081375	Identifier	buf		6081315	0					
ANR	6081376	ExpressionStatement	"printf ( "">>>> %s <<<<\\n"" , sdb_json_indent ( buf , ""  "" ) )"	66:1:1256:1310	6081315	6	True				
ANR	6081377	CallExpression	"printf ( "">>>> %s <<<<\\n"" , sdb_json_indent ( buf , ""  "" ) )"		6081315	0					
ANR	6081378	Callee	printf		6081315	0					
ANR	6081379	Identifier	printf		6081315	0					
ANR	6081380	ArgumentList	""">>>> %s <<<<\\n"""		6081315	1					
ANR	6081381	Argument	""">>>> %s <<<<\\n"""		6081315	0					
ANR	6081382	PrimaryExpression	""">>>> %s <<<<\\n"""		6081315	0					
ANR	6081383	Argument	"sdb_json_indent ( buf , ""  "" )"		6081315	1					
ANR	6081384	CallExpression	"sdb_json_indent ( buf , ""  "" )"		6081315	0					
ANR	6081385	Callee	sdb_json_indent		6081315	0					
ANR	6081386	Identifier	sdb_json_indent		6081315	0					
ANR	6081387	ArgumentList	buf		6081315	1					
ANR	6081388	Argument	buf		6081315	0					
ANR	6081389	Identifier	buf		6081315	0					
ANR	6081390	Argument	"""  """		6081315	1					
ANR	6081391	PrimaryExpression	"""  """		6081315	0					
ANR	6081392	ExpressionStatement	"path = ""glossary.title"""	68:1:1329:1352	6081315	7	True				
ANR	6081393	AssignmentExpression	"path = ""glossary.title"""		6081315	0		=			
ANR	6081394	Identifier	path		6081315	0					
ANR	6081395	PrimaryExpression	"""glossary.title"""		6081315	1					
ANR	6081396	IdentifierDeclStatement	"char * s = api_json_set ( buf , path , ""patata"" ) ;"	69:1:1355:1399	6081315	8	True				
ANR	6081397	IdentifierDecl	"* s = api_json_set ( buf , path , ""patata"" )"		6081315	0					
ANR	6081398	IdentifierDeclType	char *		6081315	0					
ANR	6081399	Identifier	s		6081315	1					
ANR	6081400	AssignmentExpression	"* s = api_json_set ( buf , path , ""patata"" )"		6081315	2		=			
ANR	6081401	Identifier	s		6081315	0					
ANR	6081402	CallExpression	"api_json_set ( buf , path , ""patata"" )"		6081315	1					
ANR	6081403	Callee	api_json_set		6081315	0					
ANR	6081404	Identifier	api_json_set		6081315	0					
ANR	6081405	ArgumentList	buf		6081315	1					
ANR	6081406	Argument	buf		6081315	0					
ANR	6081407	Identifier	buf		6081315	0					
ANR	6081408	Argument	path		6081315	1					
ANR	6081409	Identifier	path		6081315	0					
ANR	6081410	Argument	"""patata"""		6081315	2					
ANR	6081411	PrimaryExpression	"""patata"""		6081315	0					
ANR	6081412	IfStatement	if ( s )		6081315	9					
ANR	6081413	Condition	s	70:5:1406:1406	6081315	0	True				
ANR	6081414	Identifier	s		6081315	0					
ANR	6081415	CompoundStatement		16:8:380:380	6081315	1					
ANR	6081416	ExpressionStatement	"printf ( ""%s\\n"" , s )"	71:2:1413:1431	6081315	0	True				
ANR	6081417	CallExpression	"printf ( ""%s\\n"" , s )"		6081315	0					
ANR	6081418	Callee	printf		6081315	0					
ANR	6081419	Identifier	printf		6081315	0					
ANR	6081420	ArgumentList	"""%s\\n"""		6081315	1					
ANR	6081421	Argument	"""%s\\n"""		6081315	0					
ANR	6081422	PrimaryExpression	"""%s\\n"""		6081315	0					
ANR	6081423	Argument	s		6081315	1					
ANR	6081424	Identifier	s		6081315	0					
ANR	6081425	ExpressionStatement	free ( s )	72:2:1435:1443	6081315	1	True				
ANR	6081426	CallExpression	free ( s )		6081315	0					
ANR	6081427	Callee	free		6081315	0					
ANR	6081428	Identifier	free		6081315	0					
ANR	6081429	ArgumentList	s		6081315	1					
ANR	6081430	Argument	s		6081315	0					
ANR	6081431	Identifier	s		6081315	0					
ANR	6081432	ElseStatement	else		6081315	0					
ANR	6081433	ExpressionStatement	"printf ( ""set failed\\n"" )"	73:8:1453:1476	6081315	0	True				
ANR	6081434	CallExpression	"printf ( ""set failed\\n"" )"		6081315	0					
ANR	6081435	Callee	printf		6081315	0					
ANR	6081436	Identifier	printf		6081315	0					
ANR	6081437	ArgumentList	"""set failed\\n"""		6081315	1					
ANR	6081438	Argument	"""set failed\\n"""		6081315	0					
ANR	6081439	PrimaryExpression	"""set failed\\n"""		6081315	0					
ANR	6081440	IdentifierDeclStatement	"char * a = ""{}"" ;"	79:1:1545:1559	6081315	10	True				
ANR	6081441	IdentifierDecl	"* a = ""{}"""		6081315	0					
ANR	6081442	IdentifierDeclType	char *		6081315	0					
ANR	6081443	Identifier	a		6081315	1					
ANR	6081444	AssignmentExpression	"* a = ""{}"""		6081315	2		=			
ANR	6081445	Identifier	a		6081315	0					
ANR	6081446	PrimaryExpression	"""{}"""		6081315	1					
ANR	6081447	ExpressionStatement	"a = json_seti ( a , ""id"" , 123 )"	80:1:1562:1590	6081315	11	True				
ANR	6081448	AssignmentExpression	"a = json_seti ( a , ""id"" , 123 )"		6081315	0		=			
ANR	6081449	Identifier	a		6081315	0					
ANR	6081450	CallExpression	"json_seti ( a , ""id"" , 123 )"		6081315	1					
ANR	6081451	Callee	json_seti		6081315	0					
ANR	6081452	Identifier	json_seti		6081315	0					
ANR	6081453	ArgumentList	a		6081315	1					
ANR	6081454	Argument	a		6081315	0					
ANR	6081455	Identifier	a		6081315	0					
ANR	6081456	Argument	"""id"""		6081315	1					
ANR	6081457	PrimaryExpression	"""id"""		6081315	0					
ANR	6081458	Argument	123		6081315	2					
ANR	6081459	PrimaryExpression	123		6081315	0					
ANR	6081460	ExpressionStatement	"a = json_seti ( a , ""user.name"" , ""blah"" )"	81:1:1593:1631	6081315	12	True				
ANR	6081461	AssignmentExpression	"a = json_seti ( a , ""user.name"" , ""blah"" )"		6081315	0		=			
ANR	6081462	Identifier	a		6081315	0					
ANR	6081463	CallExpression	"json_seti ( a , ""user.name"" , ""blah"" )"		6081315	1					
ANR	6081464	Callee	json_seti		6081315	0					
ANR	6081465	Identifier	json_seti		6081315	0					
ANR	6081466	ArgumentList	a		6081315	1					
ANR	6081467	Argument	a		6081315	0					
ANR	6081468	Identifier	a		6081315	0					
ANR	6081469	Argument	"""user.name"""		6081315	1					
ANR	6081470	PrimaryExpression	"""user.name"""		6081315	0					
ANR	6081471	Argument	"""blah"""		6081315	2					
ANR	6081472	PrimaryExpression	"""blah"""		6081315	0					
ANR	6081473	ExpressionStatement	"printf ( ""id = %d\\n"" , json_geti ( ""{'id':123}"" , ""id"" ) )"	82:1:1634:1686	6081315	13	True				
ANR	6081474	CallExpression	"printf ( ""id = %d\\n"" , json_geti ( ""{'id':123}"" , ""id"" ) )"		6081315	0					
ANR	6081475	Callee	printf		6081315	0					
ANR	6081476	Identifier	printf		6081315	0					
ANR	6081477	ArgumentList	"""id = %d\\n"""		6081315	1					
ANR	6081478	Argument	"""id = %d\\n"""		6081315	0					
ANR	6081479	PrimaryExpression	"""id = %d\\n"""		6081315	0					
ANR	6081480	Argument	"json_geti ( ""{'id':123}"" , ""id"" )"		6081315	1					
ANR	6081481	CallExpression	"json_geti ( ""{'id':123}"" , ""id"" )"		6081315	0					
ANR	6081482	Callee	json_geti		6081315	0					
ANR	6081483	Identifier	json_geti		6081315	0					
ANR	6081484	ArgumentList	"""{'id':123}"""		6081315	1					
ANR	6081485	Argument	"""{'id':123}"""		6081315	0					
ANR	6081486	PrimaryExpression	"""{'id':123}"""		6081315	0					
ANR	6081487	Argument	"""id"""		6081315	1					
ANR	6081488	PrimaryExpression	"""id"""		6081315	0					
ANR	6081489	ExpressionStatement	path = argv [ 1 ]	86:1:1717:1731	6081315	14	True				
ANR	6081490	AssignmentExpression	path = argv [ 1 ]		6081315	0		=			
ANR	6081491	Identifier	path		6081315	0					
ANR	6081492	ArrayIndexing	argv [ 1 ]		6081315	1					
ANR	6081493	Identifier	argv		6081315	0					
ANR	6081494	PrimaryExpression	1		6081315	1					
ANR	6081495	ExpressionStatement	"rs = json_get ( buf , path )"	87:1:1734:1759	6081315	15	True				
ANR	6081496	AssignmentExpression	"rs = json_get ( buf , path )"		6081315	0		=			
ANR	6081497	Identifier	rs		6081315	0					
ANR	6081498	CallExpression	"json_get ( buf , path )"		6081315	1					
ANR	6081499	Callee	json_get		6081315	0					
ANR	6081500	Identifier	json_get		6081315	0					
ANR	6081501	ArgumentList	buf		6081315	1					
ANR	6081502	Argument	buf		6081315	0					
ANR	6081503	Identifier	buf		6081315	0					
ANR	6081504	Argument	path		6081315	1					
ANR	6081505	Identifier	path		6081315	0					
ANR	6081506	ExpressionStatement	"printf ( ""-- output --\\n"" )"	88:1:1762:1787	6081315	16	True				
ANR	6081507	CallExpression	"printf ( ""-- output --\\n"" )"		6081315	0					
ANR	6081508	Callee	printf		6081315	0					
ANR	6081509	Identifier	printf		6081315	0					
ANR	6081510	ArgumentList	"""-- output --\\n"""		6081315	1					
ANR	6081511	Argument	"""-- output --\\n"""		6081315	0					
ANR	6081512	PrimaryExpression	"""-- output --\\n"""		6081315	0					
ANR	6081513	ExpressionStatement	rangstr_print ( & rs )	89:1:1790:1808	6081315	17	True				
ANR	6081514	CallExpression	rangstr_print ( & rs )		6081315	0					
ANR	6081515	Callee	rangstr_print		6081315	0					
ANR	6081516	Identifier	rangstr_print		6081315	0					
ANR	6081517	ArgumentList	& rs		6081315	1					
ANR	6081518	Argument	& rs		6081315	0					
ANR	6081519	UnaryOperationExpression	& rs		6081315	0					
ANR	6081520	UnaryOperator	&		6081315	0					
ANR	6081521	Identifier	rs		6081315	1					
ANR	6081522	ExpressionStatement	"printf ( ""\\n"" )"	90:1:1811:1824	6081315	18	True				
ANR	6081523	CallExpression	"printf ( ""\\n"" )"		6081315	0					
ANR	6081524	Callee	printf		6081315	0					
ANR	6081525	Identifier	printf		6081315	0					
ANR	6081526	ArgumentList	"""\\n"""		6081315	1					
ANR	6081527	Argument	"""\\n"""		6081315	0					
ANR	6081528	PrimaryExpression	"""\\n"""		6081315	0					
ANR	6081529	ReturnStatement	return 0 ;	91:1:1827:1835	6081315	19	True				
ANR	6081530	PrimaryExpression	0		6081315	0					
ANR	6081531	ReturnType	int		6081315	1					
ANR	6081532	Identifier	main		6081315	2					
ANR	6081533	ParameterList	"int argc , char * * argv"		6081315	3					
ANR	6081534	Parameter	int argc	55:9:1005:1012	6081315	0	True				
ANR	6081535	ParameterType	int		6081315	0					
ANR	6081536	Identifier	argc		6081315	1					
ANR	6081537	Parameter	char * * argv	55:19:1015:1025	6081315	1	True				
ANR	6081538	ParameterType	char * *		6081315	0					
ANR	6081539	Identifier	argv		6081315	1					
ANR	6081540	CFGEntryNode	ENTRY		6081315		True				
ANR	6081541	CFGExitNode	EXIT		6081315		True				
ANR	6081542	Symbol	argc		6081315						
ANR	6081543	Symbol	api_json_set		6081315						
ANR	6081544	Symbol	rs		6081315						
ANR	6081545	Symbol	a		6081315						
ANR	6081546	Symbol	stdin		6081315						
ANR	6081547	Symbol	* buf		6081315						
ANR	6081548	Symbol	json_seti		6081315						
ANR	6081549	Symbol	* argv		6081315						
ANR	6081550	Symbol	sdb_json_indent		6081315						
ANR	6081551	Symbol	& rs		6081315						
ANR	6081552	Symbol	sdb_json_unindent		6081315						
ANR	6081553	Symbol	argv		6081315						
ANR	6081554	Symbol	fread		6081315						
ANR	6081555	Symbol	n		6081315						
ANR	6081556	Symbol	path		6081315						
ANR	6081557	Symbol	buf		6081315						
ANR	6081558	Symbol	json_get		6081315						
ANR	6081559	Symbol	s		6081315						
ANR	6081560	Symbol	* n		6081315						
ANR	6081561	Symbol	json_geti		6081315						
