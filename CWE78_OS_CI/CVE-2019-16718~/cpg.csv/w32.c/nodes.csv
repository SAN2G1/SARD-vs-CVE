command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6469109	File	data/converged/CVE-2019-16718~_radare2/w32.c								
ANR	6469110	Function	w32dbg_SeDebugPrivilege	3:0:18:1229							
ANR	6469111	FunctionDef	w32dbg_SeDebugPrivilege ()		6469110	0					
ANR	6469112	CompoundStatement		3:38:56:1229	6469110	0					
ANR	6469113	IdentifierDeclStatement	bool ret = true ;	8:1:284:299	6469110	0	True				
ANR	6469114	IdentifierDecl	ret = true		6469110	0					
ANR	6469115	IdentifierDeclType	bool		6469110	0					
ANR	6469116	Identifier	ret		6469110	1					
ANR	6469117	AssignmentExpression	ret = true		6469110	2		=			
ANR	6469118	Identifier	true		6469110	0					
ANR	6469119	Identifier	true		6469110	1					
ANR	6469120	IdentifierDeclStatement	TOKEN_PRIVILEGES tokenPriv ;	9:1:302:328	6469110	1	True				
ANR	6469121	IdentifierDecl	tokenPriv		6469110	0					
ANR	6469122	IdentifierDeclType	TOKEN_PRIVILEGES		6469110	0					
ANR	6469123	Identifier	tokenPriv		6469110	1					
ANR	6469124	IdentifierDeclStatement	HANDLE hToken = NULL ;	10:1:331:351	6469110	2	True				
ANR	6469125	IdentifierDecl	hToken = NULL		6469110	0					
ANR	6469126	IdentifierDeclType	HANDLE		6469110	0					
ANR	6469127	Identifier	hToken		6469110	1					
ANR	6469128	AssignmentExpression	hToken = NULL		6469110	2		=			
ANR	6469129	Identifier	NULL		6469110	0					
ANR	6469130	Identifier	NULL		6469110	1					
ANR	6469131	IdentifierDeclStatement	LUID luidDebug ;	11:1:354:368	6469110	3	True				
ANR	6469132	IdentifierDecl	luidDebug		6469110	0					
ANR	6469133	IdentifierDeclType	LUID		6469110	0					
ANR	6469134	Identifier	luidDebug		6469110	1					
ANR	6469135	IfStatement	"if ( ! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & hToken ) )"		6469110	4					
ANR	6469136	Condition	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & hToken )"	12:5:375:451	6469110	0	True				
ANR	6469137	UnaryOperationExpression	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & hToken )"		6469110	0					
ANR	6469138	UnaryOperator	!		6469110	0					
ANR	6469139	CallExpression	"OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & hToken )"		6469110	1					
ANR	6469140	Callee	OpenProcessToken		6469110	0					
ANR	6469141	Identifier	OpenProcessToken		6469110	0					
ANR	6469142	ArgumentList	GetCurrentProcess ( )		6469110	1					
ANR	6469143	Argument	GetCurrentProcess ( )		6469110	0					
ANR	6469144	CallExpression	GetCurrentProcess ( )		6469110	0					
ANR	6469145	Callee	GetCurrentProcess		6469110	0					
ANR	6469146	Identifier	GetCurrentProcess		6469110	0					
ANR	6469147	ArgumentList			6469110	1					
ANR	6469148	Argument	TOKEN_ADJUST_PRIVILEGES		6469110	1					
ANR	6469149	Identifier	TOKEN_ADJUST_PRIVILEGES		6469110	0					
ANR	6469150	Argument	& hToken		6469110	2					
ANR	6469151	UnaryOperationExpression	& hToken		6469110	0					
ANR	6469152	UnaryOperator	&		6469110	0					
ANR	6469153	Identifier	hToken		6469110	1					
ANR	6469154	ReturnStatement	return false ;	14:2:456:468	6469110	1	True				
ANR	6469155	Identifier	false		6469110	0					
ANR	6469156	IfStatement	"if ( ! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luidDebug ) )"		6469110	5					
ANR	6469157	Condition	"! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luidDebug )"	16:5:476:530	6469110	0	True				
ANR	6469158	UnaryOperationExpression	"! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luidDebug )"		6469110	0					
ANR	6469159	UnaryOperator	!		6469110	0					
ANR	6469160	CallExpression	"LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & luidDebug )"		6469110	1					
ANR	6469161	Callee	LookupPrivilegeValue		6469110	0					
ANR	6469162	Identifier	LookupPrivilegeValue		6469110	0					
ANR	6469163	ArgumentList	NULL		6469110	1					
ANR	6469164	Argument	NULL		6469110	0					
ANR	6469165	Identifier	NULL		6469110	0					
ANR	6469166	Argument	SE_DEBUG_NAME		6469110	1					
ANR	6469167	Identifier	SE_DEBUG_NAME		6469110	0					
ANR	6469168	Argument	& luidDebug		6469110	2					
ANR	6469169	UnaryOperationExpression	& luidDebug		6469110	0					
ANR	6469170	UnaryOperator	&		6469110	0					
ANR	6469171	Identifier	luidDebug		6469110	1					
ANR	6469172	CompoundStatement		14:62:476:476	6469110	1					
ANR	6469173	ExpressionStatement	CloseHandle ( hToken )	17:2:537:557	6469110	0	True				
ANR	6469174	CallExpression	CloseHandle ( hToken )		6469110	0					
ANR	6469175	Callee	CloseHandle		6469110	0					
ANR	6469176	Identifier	CloseHandle		6469110	0					
ANR	6469177	ArgumentList	hToken		6469110	1					
ANR	6469178	Argument	hToken		6469110	0					
ANR	6469179	Identifier	hToken		6469110	0					
ANR	6469180	ReturnStatement	return false ;	18:2:561:573	6469110	1	True				
ANR	6469181	Identifier	false		6469110	0					
ANR	6469182	ExpressionStatement	tokenPriv . PrivilegeCount = 1	21:1:580:608	6469110	6	True				
ANR	6469183	AssignmentExpression	tokenPriv . PrivilegeCount = 1		6469110	0		=			
ANR	6469184	MemberAccess	tokenPriv . PrivilegeCount		6469110	0					
ANR	6469185	Identifier	tokenPriv		6469110	0					
ANR	6469186	Identifier	PrivilegeCount		6469110	1					
ANR	6469187	PrimaryExpression	1		6469110	1					
ANR	6469188	ExpressionStatement	tokenPriv . Privileges [ 0 ] . Luid = luidDebug	22:1:611:651	6469110	7	True				
ANR	6469189	AssignmentExpression	tokenPriv . Privileges [ 0 ] . Luid = luidDebug		6469110	0		=			
ANR	6469190	MemberAccess	tokenPriv . Privileges [ 0 ] . Luid		6469110	0					
ANR	6469191	ArrayIndexing	tokenPriv . Privileges [ 0 ]		6469110	0					
ANR	6469192	MemberAccess	tokenPriv . Privileges		6469110	0					
ANR	6469193	Identifier	tokenPriv		6469110	0					
ANR	6469194	Identifier	Privileges		6469110	1					
ANR	6469195	PrimaryExpression	0		6469110	1					
ANR	6469196	Identifier	Luid		6469110	1					
ANR	6469197	Identifier	luidDebug		6469110	1					
ANR	6469198	ExpressionStatement	tokenPriv . Privileges [ 0 ] . Attributes = SE_PRIVILEGE_ENABLED	23:1:654:711	6469110	8	True				
ANR	6469199	AssignmentExpression	tokenPriv . Privileges [ 0 ] . Attributes = SE_PRIVILEGE_ENABLED		6469110	0		=			
ANR	6469200	MemberAccess	tokenPriv . Privileges [ 0 ] . Attributes		6469110	0					
ANR	6469201	ArrayIndexing	tokenPriv . Privileges [ 0 ]		6469110	0					
ANR	6469202	MemberAccess	tokenPriv . Privileges		6469110	0					
ANR	6469203	Identifier	tokenPriv		6469110	0					
ANR	6469204	Identifier	Privileges		6469110	1					
ANR	6469205	PrimaryExpression	0		6469110	1					
ANR	6469206	Identifier	Attributes		6469110	1					
ANR	6469207	Identifier	SE_PRIVILEGE_ENABLED		6469110	1					
ANR	6469208	IfStatement	"if ( AdjustTokenPrivileges ( hToken , FALSE , & tokenPriv , 0 , NULL , NULL ) != FALSE )"		6469110	9					
ANR	6469209	Condition	"AdjustTokenPrivileges ( hToken , FALSE , & tokenPriv , 0 , NULL , NULL ) != FALSE"	24:5:718:790	6469110	0	True				
ANR	6469210	EqualityExpression	"AdjustTokenPrivileges ( hToken , FALSE , & tokenPriv , 0 , NULL , NULL ) != FALSE"		6469110	0		!=			
ANR	6469211	CallExpression	"AdjustTokenPrivileges ( hToken , FALSE , & tokenPriv , 0 , NULL , NULL )"		6469110	0					
ANR	6469212	Callee	AdjustTokenPrivileges		6469110	0					
ANR	6469213	Identifier	AdjustTokenPrivileges		6469110	0					
ANR	6469214	ArgumentList	hToken		6469110	1					
ANR	6469215	Argument	hToken		6469110	0					
ANR	6469216	Identifier	hToken		6469110	0					
ANR	6469217	Argument	FALSE		6469110	1					
ANR	6469218	Identifier	FALSE		6469110	0					
ANR	6469219	Argument	& tokenPriv		6469110	2					
ANR	6469220	UnaryOperationExpression	& tokenPriv		6469110	0					
ANR	6469221	UnaryOperator	&		6469110	0					
ANR	6469222	Identifier	tokenPriv		6469110	1					
ANR	6469223	Argument	0		6469110	3					
ANR	6469224	PrimaryExpression	0		6469110	0					
ANR	6469225	Argument	NULL		6469110	4					
ANR	6469226	Identifier	NULL		6469110	0					
ANR	6469227	Argument	NULL		6469110	5					
ANR	6469228	Identifier	NULL		6469110	0					
ANR	6469229	Identifier	FALSE		6469110	1					
ANR	6469230	CompoundStatement		22:80:736:736	6469110	1					
ANR	6469231	IfStatement	if ( tokenPriv . Privileges [ 0 ] . Attributes == SE_PRIVILEGE_ENABLED )		6469110	0					
ANR	6469232	Condition	tokenPriv . Privileges [ 0 ] . Attributes == SE_PRIVILEGE_ENABLED	25:6:801:858	6469110	0	True				
ANR	6469233	EqualityExpression	tokenPriv . Privileges [ 0 ] . Attributes == SE_PRIVILEGE_ENABLED		6469110	0		==			
ANR	6469234	MemberAccess	tokenPriv . Privileges [ 0 ] . Attributes		6469110	0					
ANR	6469235	ArrayIndexing	tokenPriv . Privileges [ 0 ]		6469110	0					
ANR	6469236	MemberAccess	tokenPriv . Privileges		6469110	0					
ANR	6469237	Identifier	tokenPriv		6469110	0					
ANR	6469238	Identifier	Privileges		6469110	1					
ANR	6469239	PrimaryExpression	0		6469110	1					
ANR	6469240	Identifier	Attributes		6469110	1					
ANR	6469241	Identifier	SE_PRIVILEGE_ENABLED		6469110	1					
ANR	6469242	CompoundStatement		23:66:804:804	6469110	1					
ANR	6469243	ElseStatement	else		6469110	0					
ANR	6469244	CompoundStatement		29:8:1039:1039	6469110	0					
ANR	6469245	ExpressionStatement	"eprintf ( ""Failed to change token privileges 0x%x\\n"" , ( int ) GetLastError ( ) )"	32:2:1100:1173	6469110	0	True				
ANR	6469246	CallExpression	"eprintf ( ""Failed to change token privileges 0x%x\\n"" , ( int ) GetLastError ( ) )"		6469110	0					
ANR	6469247	Callee	eprintf		6469110	0					
ANR	6469248	Identifier	eprintf		6469110	0					
ANR	6469249	ArgumentList	"""Failed to change token privileges 0x%x\\n"""		6469110	1					
ANR	6469250	Argument	"""Failed to change token privileges 0x%x\\n"""		6469110	0					
ANR	6469251	PrimaryExpression	"""Failed to change token privileges 0x%x\\n"""		6469110	0					
ANR	6469252	Argument	( int ) GetLastError ( )		6469110	1					
ANR	6469253	CastExpression	( int ) GetLastError ( )		6469110	0					
ANR	6469254	CastTarget	int		6469110	0					
ANR	6469255	CallExpression	GetLastError ( )		6469110	1					
ANR	6469256	Callee	GetLastError		6469110	0					
ANR	6469257	Identifier	GetLastError		6469110	0					
ANR	6469258	ArgumentList			6469110	1					
ANR	6469259	ExpressionStatement	ret = false	33:2:1177:1188	6469110	1	True				
ANR	6469260	AssignmentExpression	ret = false		6469110	0		=			
ANR	6469261	Identifier	ret		6469110	0					
ANR	6469262	Identifier	false		6469110	1					
ANR	6469263	ExpressionStatement	CloseHandle ( hToken )	35:1:1194:1214	6469110	10	True				
ANR	6469264	CallExpression	CloseHandle ( hToken )		6469110	0					
ANR	6469265	Callee	CloseHandle		6469110	0					
ANR	6469266	Identifier	CloseHandle		6469110	0					
ANR	6469267	ArgumentList	hToken		6469110	1					
ANR	6469268	Argument	hToken		6469110	0					
ANR	6469269	Identifier	hToken		6469110	0					
ANR	6469270	ReturnStatement	return ret ;	36:1:1217:1227	6469110	11	True				
ANR	6469271	Identifier	ret		6469110	0					
ANR	6469272	ReturnType	static bool		6469110	1					
ANR	6469273	Identifier	w32dbg_SeDebugPrivilege		6469110	2					
ANR	6469274	ParameterList			6469110	3					
ANR	6469275	CFGEntryNode	ENTRY		6469110		True				
ANR	6469276	CFGExitNode	EXIT		6469110		True				
ANR	6469277	Symbol	& tokenPriv		6469110						
ANR	6469278	Symbol	TOKEN_ADJUST_PRIVILEGES		6469110						
ANR	6469279	Symbol	LookupPrivilegeValue		6469110						
ANR	6469280	Symbol	tokenPriv . Privileges [ 0 ] . Luid		6469110						
ANR	6469281	Symbol	luidDebug		6469110						
ANR	6469282	Symbol	* tokenPriv . Privileges		6469110						
ANR	6469283	Symbol	SE_DEBUG_NAME		6469110						
ANR	6469284	Symbol	tokenPriv . PrivilegeCount		6469110						
ANR	6469285	Symbol	& hToken		6469110						
ANR	6469286	Symbol	OpenProcessToken		6469110						
ANR	6469287	Symbol	tokenPriv . Privileges		6469110						
ANR	6469288	Symbol	ret		6469110						
ANR	6469289	Symbol	NULL		6469110						
ANR	6469290	Symbol	tokenPriv . Privileges [ 0 ] . Attributes		6469110						
ANR	6469291	Symbol	SE_PRIVILEGE_ENABLED		6469110						
ANR	6469292	Symbol	tokenPriv		6469110						
ANR	6469293	Symbol	AdjustTokenPrivileges		6469110						
ANR	6469294	Symbol	false		6469110						
ANR	6469295	Symbol	GetCurrentProcess		6469110						
ANR	6469296	Symbol	* tokenPriv		6469110						
ANR	6469297	Symbol	GetLastError		6469110						
ANR	6469298	Symbol	true		6469110						
ANR	6469299	Symbol	hToken		6469110						
ANR	6469300	Symbol	FALSE		6469110						
ANR	6469301	Symbol	& luidDebug		6469110						
ANR	6469302	Function	w32_dbg_init	39:0:1232:4995							
ANR	6469303	FunctionDef	w32_dbg_init ()		6469302	0					
ANR	6469304	CompoundStatement		39:19:1251:4995	6469302	0					
ANR	6469305	IdentifierDeclStatement	HANDLE lib ;	40:1:1254:1264	6469302	0	True				
ANR	6469306	IdentifierDecl	lib		6469302	0					
ANR	6469307	IdentifierDeclType	HANDLE		6469302	0					
ANR	6469308	Identifier	lib		6469302	1					
ANR	6469309	ExpressionStatement	w32dbg_SeDebugPrivilege ( )	43:1:1313:1339	6469302	1	True				
ANR	6469310	CallExpression	w32dbg_SeDebugPrivilege ( )		6469302	0					
ANR	6469311	Callee	w32dbg_SeDebugPrivilege		6469302	0					
ANR	6469312	Identifier	w32dbg_SeDebugPrivilege		6469302	0					
ANR	6469313	ArgumentList			6469302	1					
ANR	6469314	Statement	w32_DebugActiveProcessStop	45:1:1387:1412	6469302	2	True				
ANR	6469315	Statement	=	45:28:1414:1414	6469302	3	True				
ANR	6469316	Statement	(	45:30:1416:1416	6469302	4	True				
ANR	6469317	Statement	BOOL	45:31:1417:1420	6469302	5	True				
ANR	6469318	Statement	(	45:36:1422:1422	6469302	6	True				
ANR	6469319	Statement	WINAPI	45:37:1423:1428	6469302	7	True				
ANR	6469320	Statement	*	45:44:1430:1430	6469302	8	True				
ANR	6469321	Statement	)	45:45:1431:1431	6469302	9	True				
ANR	6469322	Statement	(	45:46:1432:1432	6469302	10	True				
ANR	6469323	Statement	DWORD	45:47:1433:1437	6469302	11	True				
ANR	6469324	Statement	)	45:52:1438:1438	6469302	12	True				
ANR	6469325	Statement	)	45:53:1439:1439	6469302	13	True				
ANR	6469326	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""DebugActiveProcessStop"" )"	46:2:1443:1525	6469302	14	True				
ANR	6469327	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""DebugActiveProcessStop"" )"		6469302	0					
ANR	6469328	Callee	GetProcAddress		6469302	0					
ANR	6469329	Identifier	GetProcAddress		6469302	0					
ANR	6469330	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469331	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469332	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469333	Callee	GetModuleHandle		6469302	0					
ANR	6469334	Identifier	GetModuleHandle		6469302	0					
ANR	6469335	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469336	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469337	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469338	Callee	TEXT		6469302	0					
ANR	6469339	Identifier	TEXT		6469302	0					
ANR	6469340	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469341	Argument	"""kernel32"""		6469302	0					
ANR	6469342	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469343	Argument	"""DebugActiveProcessStop"""		6469302	1					
ANR	6469344	PrimaryExpression	"""DebugActiveProcessStop"""		6469302	0					
ANR	6469345	Statement	w32_OpenThread	48:1:1528:1541	6469302	15	True				
ANR	6469346	Statement	=	48:16:1543:1543	6469302	16	True				
ANR	6469347	Statement	(	48:18:1545:1545	6469302	17	True				
ANR	6469348	Statement	HANDLE	48:19:1546:1551	6469302	18	True				
ANR	6469349	Statement	(	48:26:1553:1553	6469302	19	True				
ANR	6469350	Statement	WINAPI	48:27:1554:1559	6469302	20	True				
ANR	6469351	Statement	*	48:34:1561:1561	6469302	21	True				
ANR	6469352	Statement	)	48:35:1562:1562	6469302	22	True				
ANR	6469353	Statement	(	48:36:1563:1563	6469302	23	True				
ANR	6469354	Statement	DWORD	48:37:1564:1568	6469302	24	True				
ANR	6469355	Statement	","	48:42:1569:1569	6469302	25	True				
ANR	6469356	Statement	BOOL	48:44:1571:1574	6469302	26	True				
ANR	6469357	Statement	","	48:48:1575:1575	6469302	27	True				
ANR	6469358	Statement	DWORD	48:50:1577:1581	6469302	28	True				
ANR	6469359	Statement	)	48:55:1582:1582	6469302	29	True				
ANR	6469360	Statement	)	48:56:1583:1583	6469302	30	True				
ANR	6469361	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""OpenThread"" )"	49:2:1587:1653	6469302	31	True				
ANR	6469362	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""OpenThread"" )"		6469302	0					
ANR	6469363	Callee	GetProcAddress		6469302	0					
ANR	6469364	Identifier	GetProcAddress		6469302	0					
ANR	6469365	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469366	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469367	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469368	Callee	GetModuleHandle		6469302	0					
ANR	6469369	Identifier	GetModuleHandle		6469302	0					
ANR	6469370	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469371	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469372	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469373	Callee	TEXT		6469302	0					
ANR	6469374	Identifier	TEXT		6469302	0					
ANR	6469375	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469376	Argument	"""kernel32"""		6469302	0					
ANR	6469377	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469378	Argument	"""OpenThread"""		6469302	1					
ANR	6469379	PrimaryExpression	"""OpenThread"""		6469302	0					
ANR	6469380	Statement	w32_OpenProcess	50:1:1656:1670	6469302	32	True				
ANR	6469381	Statement	=	50:17:1672:1672	6469302	33	True				
ANR	6469382	Statement	(	50:19:1674:1674	6469302	34	True				
ANR	6469383	Statement	HANDLE	50:20:1675:1680	6469302	35	True				
ANR	6469384	Statement	(	50:27:1682:1682	6469302	36	True				
ANR	6469385	Statement	WINAPI	50:28:1683:1688	6469302	37	True				
ANR	6469386	Statement	*	50:35:1690:1690	6469302	38	True				
ANR	6469387	Statement	)	50:36:1691:1691	6469302	39	True				
ANR	6469388	Statement	(	50:37:1692:1692	6469302	40	True				
ANR	6469389	Statement	DWORD	50:38:1693:1697	6469302	41	True				
ANR	6469390	Statement	","	50:43:1698:1698	6469302	42	True				
ANR	6469391	Statement	BOOL	50:45:1700:1703	6469302	43	True				
ANR	6469392	Statement	","	50:49:1704:1704	6469302	44	True				
ANR	6469393	Statement	DWORD	50:51:1706:1710	6469302	45	True				
ANR	6469394	Statement	)	50:56:1711:1711	6469302	46	True				
ANR	6469395	Statement	)	50:57:1712:1712	6469302	47	True				
ANR	6469396	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""OpenProcess"" )"	51:2:1716:1783	6469302	48	True				
ANR	6469397	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""OpenProcess"" )"		6469302	0					
ANR	6469398	Callee	GetProcAddress		6469302	0					
ANR	6469399	Identifier	GetProcAddress		6469302	0					
ANR	6469400	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469401	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469402	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469403	Callee	GetModuleHandle		6469302	0					
ANR	6469404	Identifier	GetModuleHandle		6469302	0					
ANR	6469405	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469406	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469407	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469408	Callee	TEXT		6469302	0					
ANR	6469409	Identifier	TEXT		6469302	0					
ANR	6469410	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469411	Argument	"""kernel32"""		6469302	0					
ANR	6469412	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469413	Argument	"""OpenProcess"""		6469302	1					
ANR	6469414	PrimaryExpression	"""OpenProcess"""		6469302	0					
ANR	6469415	Statement	w32_DebugBreakProcess	52:1:1786:1806	6469302	49	True				
ANR	6469416	Statement	=	52:23:1808:1808	6469302	50	True				
ANR	6469417	Statement	(	52:25:1810:1810	6469302	51	True				
ANR	6469418	Statement	BOOL	52:26:1811:1814	6469302	52	True				
ANR	6469419	Statement	(	52:31:1816:1816	6469302	53	True				
ANR	6469420	Statement	WINAPI	52:32:1817:1822	6469302	54	True				
ANR	6469421	Statement	*	52:39:1824:1824	6469302	55	True				
ANR	6469422	Statement	)	52:40:1825:1825	6469302	56	True				
ANR	6469423	Statement	(	52:41:1826:1826	6469302	57	True				
ANR	6469424	Statement	HANDLE	52:42:1827:1832	6469302	58	True				
ANR	6469425	Statement	)	52:48:1833:1833	6469302	59	True				
ANR	6469426	Statement	)	52:49:1834:1834	6469302	60	True				
ANR	6469427	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""DebugBreakProcess"" )"	53:2:1838:1915	6469302	61	True				
ANR	6469428	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""DebugBreakProcess"" )"		6469302	0					
ANR	6469429	Callee	GetProcAddress		6469302	0					
ANR	6469430	Identifier	GetProcAddress		6469302	0					
ANR	6469431	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469432	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469433	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469434	Callee	GetModuleHandle		6469302	0					
ANR	6469435	Identifier	GetModuleHandle		6469302	0					
ANR	6469436	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469437	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469438	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469439	Callee	TEXT		6469302	0					
ANR	6469440	Identifier	TEXT		6469302	0					
ANR	6469441	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469442	Argument	"""kernel32"""		6469302	0					
ANR	6469443	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469444	Argument	"""DebugBreakProcess"""		6469302	1					
ANR	6469445	PrimaryExpression	"""DebugBreakProcess"""		6469302	0					
ANR	6469446	Statement	w32_CreateToolhelp32Snapshot	55:1:1918:1945	6469302	62	True				
ANR	6469447	Statement	=	55:30:1947:1947	6469302	63	True				
ANR	6469448	Statement	(	55:32:1949:1949	6469302	64	True				
ANR	6469449	Statement	HANDLE	55:33:1950:1955	6469302	65	True				
ANR	6469450	Statement	(	55:40:1957:1957	6469302	66	True				
ANR	6469451	Statement	WINAPI	55:41:1958:1963	6469302	67	True				
ANR	6469452	Statement	*	55:48:1965:1965	6469302	68	True				
ANR	6469453	Statement	)	55:49:1966:1966	6469302	69	True				
ANR	6469454	Statement	(	55:50:1967:1967	6469302	70	True				
ANR	6469455	Statement	DWORD	55:51:1968:1972	6469302	71	True				
ANR	6469456	Statement	","	55:56:1973:1973	6469302	72	True				
ANR	6469457	Statement	DWORD	55:58:1975:1979	6469302	73	True				
ANR	6469458	Statement	)	55:63:1980:1980	6469302	74	True				
ANR	6469459	Statement	)	55:64:1981:1981	6469302	75	True				
ANR	6469460	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""CreateToolhelp32Snapshot"" )"	56:2:1985:2075	6469302	76	True				
ANR	6469461	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""CreateToolhelp32Snapshot"" )"		6469302	0					
ANR	6469462	Callee	GetProcAddress		6469302	0					
ANR	6469463	Identifier	GetProcAddress		6469302	0					
ANR	6469464	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469465	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469466	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469467	Callee	GetModuleHandle		6469302	0					
ANR	6469468	Identifier	GetModuleHandle		6469302	0					
ANR	6469469	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469470	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469471	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469472	Callee	TEXT		6469302	0					
ANR	6469473	Identifier	TEXT		6469302	0					
ANR	6469474	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469475	Argument	"""kernel32"""		6469302	0					
ANR	6469476	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469477	Argument	"""CreateToolhelp32Snapshot"""		6469302	1					
ANR	6469478	PrimaryExpression	"""CreateToolhelp32Snapshot"""		6469302	0					
ANR	6469479	Statement	w32_GetThreadId	59:1:2104:2118	6469302	77	True				
ANR	6469480	Statement	=	59:17:2120:2120	6469302	78	True				
ANR	6469481	Statement	(	59:19:2122:2122	6469302	79	True				
ANR	6469482	Statement	DWORD	59:20:2123:2127	6469302	80	True				
ANR	6469483	Statement	(	59:26:2129:2129	6469302	81	True				
ANR	6469484	Statement	WINAPI	59:27:2130:2135	6469302	82	True				
ANR	6469485	Statement	*	59:34:2137:2137	6469302	83	True				
ANR	6469486	Statement	)	59:35:2138:2138	6469302	84	True				
ANR	6469487	Statement	(	59:36:2139:2139	6469302	85	True				
ANR	6469488	Statement	HANDLE	59:37:2140:2145	6469302	86	True				
ANR	6469489	Statement	)	59:43:2146:2146	6469302	87	True				
ANR	6469490	Statement	)	59:44:2147:2147	6469302	88	True				
ANR	6469491	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetThreadId"" )"	60:2:2151:2218	6469302	89	True				
ANR	6469492	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetThreadId"" )"		6469302	0					
ANR	6469493	Callee	GetProcAddress		6469302	0					
ANR	6469494	Identifier	GetProcAddress		6469302	0					
ANR	6469495	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469496	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469497	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469498	Callee	GetModuleHandle		6469302	0					
ANR	6469499	Identifier	GetModuleHandle		6469302	0					
ANR	6469500	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469501	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469502	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469503	Callee	TEXT		6469302	0					
ANR	6469504	Identifier	TEXT		6469302	0					
ANR	6469505	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469506	Argument	"""kernel32"""		6469302	0					
ANR	6469507	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469508	Argument	"""GetThreadId"""		6469302	1					
ANR	6469509	PrimaryExpression	"""GetThreadId"""		6469302	0					
ANR	6469510	Statement	w32_GetProcessId	62:1:2234:2249	6469302	90	True				
ANR	6469511	Statement	=	62:18:2251:2251	6469302	91	True				
ANR	6469512	Statement	(	62:20:2253:2253	6469302	92	True				
ANR	6469513	Statement	DWORD	62:21:2254:2258	6469302	93	True				
ANR	6469514	Statement	(	62:27:2260:2260	6469302	94	True				
ANR	6469515	Statement	WINAPI	62:28:2261:2266	6469302	95	True				
ANR	6469516	Statement	*	62:35:2268:2268	6469302	96	True				
ANR	6469517	Statement	)	62:36:2269:2269	6469302	97	True				
ANR	6469518	Statement	(	62:37:2270:2270	6469302	98	True				
ANR	6469519	Statement	HANDLE	62:38:2271:2276	6469302	99	True				
ANR	6469520	Statement	)	62:44:2277:2277	6469302	100	True				
ANR	6469521	Statement	)	62:45:2278:2278	6469302	101	True				
ANR	6469522	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetProcessId"" )"	63:2:2282:2350	6469302	102	True				
ANR	6469523	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetProcessId"" )"		6469302	0					
ANR	6469524	Callee	GetProcAddress		6469302	0					
ANR	6469525	Identifier	GetProcAddress		6469302	0					
ANR	6469526	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469527	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469528	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469529	Callee	GetModuleHandle		6469302	0					
ANR	6469530	Identifier	GetModuleHandle		6469302	0					
ANR	6469531	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469532	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469533	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469534	Callee	TEXT		6469302	0					
ANR	6469535	Identifier	TEXT		6469302	0					
ANR	6469536	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469537	Argument	"""kernel32"""		6469302	0					
ANR	6469538	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469539	Argument	"""GetProcessId"""		6469302	1					
ANR	6469540	PrimaryExpression	"""GetProcessId"""		6469302	0					
ANR	6469541	Statement	w32_QueryFullProcessImageName	64:1:2353:2381	6469302	103	True				
ANR	6469542	Statement	=	64:31:2383:2383	6469302	104	True				
ANR	6469543	Statement	(	64:33:2385:2385	6469302	105	True				
ANR	6469544	Statement	BOOL	64:34:2386:2389	6469302	106	True				
ANR	6469545	Statement	(	64:39:2391:2391	6469302	107	True				
ANR	6469546	Statement	WINAPI	64:40:2392:2397	6469302	108	True				
ANR	6469547	Statement	*	64:47:2399:2399	6469302	109	True				
ANR	6469548	Statement	)	64:48:2400:2400	6469302	110	True				
ANR	6469549	Statement	(	64:49:2401:2401	6469302	111	True				
ANR	6469550	Statement	HANDLE	64:50:2402:2407	6469302	112	True				
ANR	6469551	Statement	","	64:56:2408:2408	6469302	113	True				
ANR	6469552	Statement	DWORD	64:58:2410:2414	6469302	114	True				
ANR	6469553	Statement	","	64:63:2415:2415	6469302	115	True				
ANR	6469554	Statement	LPTSTR	64:65:2417:2422	6469302	116	True				
ANR	6469555	Statement	","	64:71:2423:2423	6469302	117	True				
ANR	6469556	Statement	PDWORD	64:73:2425:2430	6469302	118	True				
ANR	6469557	Statement	)	64:79:2431:2431	6469302	119	True				
ANR	6469558	Statement	)	64:80:2432:2432	6469302	120	True				
ANR	6469559	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , W32_TCALL ( ""QueryFullProcessImageName"" ) )"	65:2:2436:2529	6469302	121	True				
ANR	6469560	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , W32_TCALL ( ""QueryFullProcessImageName"" ) )"		6469302	0					
ANR	6469561	Callee	GetProcAddress		6469302	0					
ANR	6469562	Identifier	GetProcAddress		6469302	0					
ANR	6469563	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469564	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469565	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469566	Callee	GetModuleHandle		6469302	0					
ANR	6469567	Identifier	GetModuleHandle		6469302	0					
ANR	6469568	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469569	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469570	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469571	Callee	TEXT		6469302	0					
ANR	6469572	Identifier	TEXT		6469302	0					
ANR	6469573	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469574	Argument	"""kernel32"""		6469302	0					
ANR	6469575	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469576	Argument	"W32_TCALL ( ""QueryFullProcessImageName"" )"		6469302	1					
ANR	6469577	CallExpression	"W32_TCALL ( ""QueryFullProcessImageName"" )"		6469302	0					
ANR	6469578	Callee	W32_TCALL		6469302	0					
ANR	6469579	Identifier	W32_TCALL		6469302	0					
ANR	6469580	ArgumentList	"""QueryFullProcessImageName"""		6469302	1					
ANR	6469581	Argument	"""QueryFullProcessImageName"""		6469302	0					
ANR	6469582	PrimaryExpression	"""QueryFullProcessImageName"""		6469302	0					
ANR	6469583	Statement	w32_GetEnabledXStateFeatures	67:1:2568:2595	6469302	122	True				
ANR	6469584	Statement	=	67:30:2597:2597	6469302	123	True				
ANR	6469585	Statement	(	67:32:2599:2599	6469302	124	True				
ANR	6469586	Statement	ut64	67:33:2600:2603	6469302	125	True				
ANR	6469587	Statement	(	67:38:2605:2605	6469302	126	True				
ANR	6469588	Statement	WINAPI	67:39:2606:2611	6469302	127	True				
ANR	6469589	Statement	*	67:46:2613:2613	6469302	128	True				
ANR	6469590	Statement	)	67:47:2614:2614	6469302	129	True				
ANR	6469591	Statement	(	67:49:2616:2616	6469302	130	True				
ANR	6469592	Statement	)	67:50:2617:2617	6469302	131	True				
ANR	6469593	Statement	)	67:51:2618:2618	6469302	132	True				
ANR	6469594	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetEnabledXStateFeatures"" )"	68:2:2622:2701	6469302	133	True				
ANR	6469595	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetEnabledXStateFeatures"" )"		6469302	0					
ANR	6469596	Callee	GetProcAddress		6469302	0					
ANR	6469597	Identifier	GetProcAddress		6469302	0					
ANR	6469598	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469599	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469600	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469601	Callee	GetModuleHandle		6469302	0					
ANR	6469602	Identifier	GetModuleHandle		6469302	0					
ANR	6469603	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469604	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469605	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469606	Callee	TEXT		6469302	0					
ANR	6469607	Identifier	TEXT		6469302	0					
ANR	6469608	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469609	Argument	"""kernel32"""		6469302	0					
ANR	6469610	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469611	Argument	"""GetEnabledXStateFeatures"""		6469302	1					
ANR	6469612	PrimaryExpression	"""GetEnabledXStateFeatures"""		6469302	0					
ANR	6469613	Statement	w32_InitializeContext	69:1:2704:2724	6469302	134	True				
ANR	6469614	Statement	=	69:23:2726:2726	6469302	135	True				
ANR	6469615	Statement	(	69:25:2728:2728	6469302	136	True				
ANR	6469616	Statement	BOOL	69:26:2729:2732	6469302	137	True				
ANR	6469617	Statement	(	69:31:2734:2734	6469302	138	True				
ANR	6469618	Statement	WINAPI	69:32:2735:2740	6469302	139	True				
ANR	6469619	Statement	*	69:39:2742:2742	6469302	140	True				
ANR	6469620	Statement	)	69:40:2743:2743	6469302	141	True				
ANR	6469621	Statement	(	69:42:2745:2745	6469302	142	True				
ANR	6469622	Statement	PVOID	69:43:2746:2750	6469302	143	True				
ANR	6469623	Statement	","	69:48:2751:2751	6469302	144	True				
ANR	6469624	Statement	DWORD	69:50:2753:2757	6469302	145	True				
ANR	6469625	Statement	","	69:55:2758:2758	6469302	146	True				
ANR	6469626	Statement	PCONTEXT	69:57:2760:2767	6469302	147	True				
ANR	6469627	Statement	*	69:65:2768:2768	6469302	148	True				
ANR	6469628	Statement	","	69:66:2769:2769	6469302	149	True				
ANR	6469629	Statement	PDWORD	69:68:2771:2776	6469302	150	True				
ANR	6469630	Statement	)	69:74:2777:2777	6469302	151	True				
ANR	6469631	Statement	)	69:75:2778:2778	6469302	152	True				
ANR	6469632	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""InitializeContext"" )"	70:2:2782:2854	6469302	153	True				
ANR	6469633	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""InitializeContext"" )"		6469302	0					
ANR	6469634	Callee	GetProcAddress		6469302	0					
ANR	6469635	Identifier	GetProcAddress		6469302	0					
ANR	6469636	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469637	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469638	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469639	Callee	GetModuleHandle		6469302	0					
ANR	6469640	Identifier	GetModuleHandle		6469302	0					
ANR	6469641	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469642	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469643	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469644	Callee	TEXT		6469302	0					
ANR	6469645	Identifier	TEXT		6469302	0					
ANR	6469646	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469647	Argument	"""kernel32"""		6469302	0					
ANR	6469648	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469649	Argument	"""InitializeContext"""		6469302	1					
ANR	6469650	PrimaryExpression	"""InitializeContext"""		6469302	0					
ANR	6469651	Statement	w32_GetXStateFeaturesMask	71:1:2857:2881	6469302	154	True				
ANR	6469652	Statement	=	71:27:2883:2883	6469302	155	True				
ANR	6469653	Statement	(	71:29:2885:2885	6469302	156	True				
ANR	6469654	Statement	BOOL	71:30:2886:2889	6469302	157	True				
ANR	6469655	Statement	(	71:35:2891:2891	6469302	158	True				
ANR	6469656	Statement	WINAPI	71:36:2892:2897	6469302	159	True				
ANR	6469657	Statement	*	71:43:2899:2899	6469302	160	True				
ANR	6469658	Statement	)	71:44:2900:2900	6469302	161	True				
ANR	6469659	Statement	(	71:46:2902:2902	6469302	162	True				
ANR	6469660	Statement	PCONTEXT	71:47:2903:2910	6469302	163	True				
ANR	6469661	Statement	Context	71:56:2912:2918	6469302	164	True				
ANR	6469662	Statement	","	71:63:2919:2919	6469302	165	True				
ANR	6469663	Statement	PDWORD64	71:65:2921:2928	6469302	166	True				
ANR	6469664	Statement	)	71:73:2929:2929	6469302	167	True				
ANR	6469665	Statement	)	71:74:2930:2930	6469302	168	True				
ANR	6469666	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetXStateFeaturesMask"" )"	72:2:2934:3010	6469302	169	True				
ANR	6469667	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""GetXStateFeaturesMask"" )"		6469302	0					
ANR	6469668	Callee	GetProcAddress		6469302	0					
ANR	6469669	Identifier	GetProcAddress		6469302	0					
ANR	6469670	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469671	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469672	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469673	Callee	GetModuleHandle		6469302	0					
ANR	6469674	Identifier	GetModuleHandle		6469302	0					
ANR	6469675	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469676	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469677	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469678	Callee	TEXT		6469302	0					
ANR	6469679	Identifier	TEXT		6469302	0					
ANR	6469680	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469681	Argument	"""kernel32"""		6469302	0					
ANR	6469682	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469683	Argument	"""GetXStateFeaturesMask"""		6469302	1					
ANR	6469684	PrimaryExpression	"""GetXStateFeaturesMask"""		6469302	0					
ANR	6469685	Statement	w32_LocateXStateFeature	73:1:3013:3035	6469302	170	True				
ANR	6469686	Statement	=	73:25:3037:3037	6469302	171	True				
ANR	6469687	Statement	(	73:27:3039:3039	6469302	172	True				
ANR	6469688	Statement	PVOID	73:28:3040:3044	6469302	173	True				
ANR	6469689	Statement	(	73:34:3046:3046	6469302	174	True				
ANR	6469690	Statement	WINAPI	73:35:3047:3052	6469302	175	True				
ANR	6469691	Statement	*	73:42:3054:3054	6469302	176	True				
ANR	6469692	Statement	)	73:43:3055:3055	6469302	177	True				
ANR	6469693	Statement	(	73:45:3057:3057	6469302	178	True				
ANR	6469694	Statement	PCONTEXT	73:46:3058:3065	6469302	179	True				
ANR	6469695	Statement	Context	73:55:3067:3073	6469302	180	True				
ANR	6469696	Statement	","	73:62:3074:3074	6469302	181	True				
ANR	6469697	Statement	DWORD	73:64:3076:3080	6469302	182	True				
ANR	6469698	Statement	","	73:70:3082:3082	6469302	183	True				
ANR	6469699	Statement	PDWORD	73:71:3083:3088	6469302	184	True				
ANR	6469700	Statement	)	73:77:3089:3089	6469302	185	True				
ANR	6469701	Statement	)	73:78:3090:3090	6469302	186	True				
ANR	6469702	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""LocateXStateFeature"" )"	74:2:3094:3168	6469302	187	True				
ANR	6469703	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""LocateXStateFeature"" )"		6469302	0					
ANR	6469704	Callee	GetProcAddress		6469302	0					
ANR	6469705	Identifier	GetProcAddress		6469302	0					
ANR	6469706	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469707	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469708	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469709	Callee	GetModuleHandle		6469302	0					
ANR	6469710	Identifier	GetModuleHandle		6469302	0					
ANR	6469711	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469712	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469713	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469714	Callee	TEXT		6469302	0					
ANR	6469715	Identifier	TEXT		6469302	0					
ANR	6469716	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469717	Argument	"""kernel32"""		6469302	0					
ANR	6469718	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469719	Argument	"""LocateXStateFeature"""		6469302	1					
ANR	6469720	PrimaryExpression	"""LocateXStateFeature"""		6469302	0					
ANR	6469721	Statement	w32_SetXStateFeaturesMask	75:1:3171:3195	6469302	188	True				
ANR	6469722	Statement	=	75:27:3197:3197	6469302	189	True				
ANR	6469723	Statement	(	75:29:3199:3199	6469302	190	True				
ANR	6469724	Statement	BOOL	75:30:3200:3203	6469302	191	True				
ANR	6469725	Statement	(	75:35:3205:3205	6469302	192	True				
ANR	6469726	Statement	WINAPI	75:36:3206:3211	6469302	193	True				
ANR	6469727	Statement	*	75:43:3213:3213	6469302	194	True				
ANR	6469728	Statement	)	75:44:3214:3214	6469302	195	True				
ANR	6469729	Statement	(	75:46:3216:3216	6469302	196	True				
ANR	6469730	Statement	PCONTEXT	75:47:3217:3224	6469302	197	True				
ANR	6469731	Statement	Context	75:56:3226:3232	6469302	198	True				
ANR	6469732	Statement	","	75:63:3233:3233	6469302	199	True				
ANR	6469733	Statement	DWORD64	75:65:3235:3241	6469302	200	True				
ANR	6469734	Statement	)	75:72:3242:3242	6469302	201	True				
ANR	6469735	Statement	)	75:73:3243:3243	6469302	202	True				
ANR	6469736	ExpressionStatement	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""SetXStateFeaturesMask"" )"	76:2:3247:3323	6469302	203	True				
ANR	6469737	CallExpression	"GetProcAddress ( GetModuleHandle ( TEXT ( ""kernel32"" ) ) , ""SetXStateFeaturesMask"" )"		6469302	0					
ANR	6469738	Callee	GetProcAddress		6469302	0					
ANR	6469739	Identifier	GetProcAddress		6469302	0					
ANR	6469740	ArgumentList	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	1					
ANR	6469741	Argument	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469742	CallExpression	"GetModuleHandle ( TEXT ( ""kernel32"" ) )"		6469302	0					
ANR	6469743	Callee	GetModuleHandle		6469302	0					
ANR	6469744	Identifier	GetModuleHandle		6469302	0					
ANR	6469745	ArgumentList	"TEXT ( ""kernel32"" )"		6469302	1					
ANR	6469746	Argument	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469747	CallExpression	"TEXT ( ""kernel32"" )"		6469302	0					
ANR	6469748	Callee	TEXT		6469302	0					
ANR	6469749	Identifier	TEXT		6469302	0					
ANR	6469750	ArgumentList	"""kernel32"""		6469302	1					
ANR	6469751	Argument	"""kernel32"""		6469302	0					
ANR	6469752	PrimaryExpression	"""kernel32"""		6469302	0					
ANR	6469753	Argument	"""SetXStateFeaturesMask"""		6469302	1					
ANR	6469754	PrimaryExpression	"""SetXStateFeaturesMask"""		6469302	0					
ANR	6469755	ExpressionStatement	"lib = LoadLibrary ( TEXT ( ""psapi.dll"" ) )"	77:1:3326:3363	6469302	204	True				
ANR	6469756	AssignmentExpression	"lib = LoadLibrary ( TEXT ( ""psapi.dll"" ) )"		6469302	0		=			
ANR	6469757	Identifier	lib		6469302	0					
ANR	6469758	CallExpression	"LoadLibrary ( TEXT ( ""psapi.dll"" ) )"		6469302	1					
ANR	6469759	Callee	LoadLibrary		6469302	0					
ANR	6469760	Identifier	LoadLibrary		6469302	0					
ANR	6469761	ArgumentList	"TEXT ( ""psapi.dll"" )"		6469302	1					
ANR	6469762	Argument	"TEXT ( ""psapi.dll"" )"		6469302	0					
ANR	6469763	CallExpression	"TEXT ( ""psapi.dll"" )"		6469302	0					
ANR	6469764	Callee	TEXT		6469302	0					
ANR	6469765	Identifier	TEXT		6469302	0					
ANR	6469766	ArgumentList	"""psapi.dll"""		6469302	1					
ANR	6469767	Argument	"""psapi.dll"""		6469302	0					
ANR	6469768	PrimaryExpression	"""psapi.dll"""		6469302	0					
ANR	6469769	IfStatement	if ( ! lib )		6469302	205					
ANR	6469770	Condition	! lib	78:4:3369:3372	6469302	0	True				
ANR	6469771	UnaryOperationExpression	! lib		6469302	0					
ANR	6469772	UnaryOperator	!		6469302	0					
ANR	6469773	Identifier	lib		6469302	1					
ANR	6469774	CompoundStatement		40:10:2123:2123	6469302	1					
ANR	6469775	ExpressionStatement	"eprintf ( ""Cannot load psapi.dll. Aborting\\n"" )"	79:2:3379:3424	6469302	0	True				
ANR	6469776	CallExpression	"eprintf ( ""Cannot load psapi.dll. Aborting\\n"" )"		6469302	0					
ANR	6469777	Callee	eprintf		6469302	0					
ANR	6469778	Identifier	eprintf		6469302	0					
ANR	6469779	ArgumentList	"""Cannot load psapi.dll. Aborting\\n"""		6469302	1					
ANR	6469780	Argument	"""Cannot load psapi.dll. Aborting\\n"""		6469302	0					
ANR	6469781	PrimaryExpression	"""Cannot load psapi.dll. Aborting\\n"""		6469302	0					
ANR	6469782	ReturnStatement	return false ;	80:2:3428:3440	6469302	1	True				
ANR	6469783	Identifier	false		6469302	0					
ANR	6469784	Statement	w32_GetMappedFileName	82:1:3446:3466	6469302	206	True				
ANR	6469785	Statement	=	82:23:3468:3468	6469302	207	True				
ANR	6469786	Statement	(	82:25:3470:3470	6469302	208	True				
ANR	6469787	Statement	DWORD	82:26:3471:3475	6469302	209	True				
ANR	6469788	Statement	(	82:32:3477:3477	6469302	210	True				
ANR	6469789	Statement	WINAPI	82:33:3478:3483	6469302	211	True				
ANR	6469790	Statement	*	82:40:3485:3485	6469302	212	True				
ANR	6469791	Statement	)	82:41:3486:3486	6469302	213	True				
ANR	6469792	Statement	(	82:42:3487:3487	6469302	214	True				
ANR	6469793	Statement	HANDLE	82:43:3488:3493	6469302	215	True				
ANR	6469794	Statement	","	82:49:3494:3494	6469302	216	True				
ANR	6469795	Statement	LPVOID	82:51:3496:3501	6469302	217	True				
ANR	6469796	Statement	","	82:57:3502:3502	6469302	218	True				
ANR	6469797	Statement	LPTSTR	82:59:3504:3509	6469302	219	True				
ANR	6469798	Statement	","	82:65:3510:3510	6469302	220	True				
ANR	6469799	Statement	DWORD	82:67:3512:3516	6469302	221	True				
ANR	6469800	Statement	)	82:72:3517:3517	6469302	222	True				
ANR	6469801	Statement	)	82:73:3518:3518	6469302	223	True				
ANR	6469802	ExpressionStatement	"GetProcAddress ( lib , W32_TCALL ( ""GetMappedFileName"" ) )"	83:2:3522:3575	6469302	224	True				
ANR	6469803	CallExpression	"GetProcAddress ( lib , W32_TCALL ( ""GetMappedFileName"" ) )"		6469302	0					
ANR	6469804	Callee	GetProcAddress		6469302	0					
ANR	6469805	Identifier	GetProcAddress		6469302	0					
ANR	6469806	ArgumentList	lib		6469302	1					
ANR	6469807	Argument	lib		6469302	0					
ANR	6469808	Identifier	lib		6469302	0					
ANR	6469809	Argument	"W32_TCALL ( ""GetMappedFileName"" )"		6469302	1					
ANR	6469810	CallExpression	"W32_TCALL ( ""GetMappedFileName"" )"		6469302	0					
ANR	6469811	Callee	W32_TCALL		6469302	0					
ANR	6469812	Identifier	W32_TCALL		6469302	0					
ANR	6469813	ArgumentList	"""GetMappedFileName"""		6469302	1					
ANR	6469814	Argument	"""GetMappedFileName"""		6469302	0					
ANR	6469815	PrimaryExpression	"""GetMappedFileName"""		6469302	0					
ANR	6469816	Statement	w32_GetModuleBaseName	84:1:3578:3598	6469302	225	True				
ANR	6469817	Statement	=	84:23:3600:3600	6469302	226	True				
ANR	6469818	Statement	(	84:25:3602:3602	6469302	227	True				
ANR	6469819	Statement	DWORD	84:26:3603:3607	6469302	228	True				
ANR	6469820	Statement	(	84:32:3609:3609	6469302	229	True				
ANR	6469821	Statement	WINAPI	84:33:3610:3615	6469302	230	True				
ANR	6469822	Statement	*	84:40:3617:3617	6469302	231	True				
ANR	6469823	Statement	)	84:41:3618:3618	6469302	232	True				
ANR	6469824	Statement	(	84:42:3619:3619	6469302	233	True				
ANR	6469825	Statement	HANDLE	84:43:3620:3625	6469302	234	True				
ANR	6469826	Statement	","	84:49:3626:3626	6469302	235	True				
ANR	6469827	Statement	HMODULE	84:51:3628:3634	6469302	236	True				
ANR	6469828	Statement	","	84:58:3635:3635	6469302	237	True				
ANR	6469829	Statement	LPTSTR	84:60:3637:3642	6469302	238	True				
ANR	6469830	Statement	","	84:66:3643:3643	6469302	239	True				
ANR	6469831	Statement	DWORD	84:68:3645:3649	6469302	240	True				
ANR	6469832	Statement	)	84:73:3650:3650	6469302	241	True				
ANR	6469833	Statement	)	84:74:3651:3651	6469302	242	True				
ANR	6469834	ExpressionStatement	"GetProcAddress ( lib , W32_TCALL ( ""GetModuleBaseName"" ) )"	85:2:3655:3708	6469302	243	True				
ANR	6469835	CallExpression	"GetProcAddress ( lib , W32_TCALL ( ""GetModuleBaseName"" ) )"		6469302	0					
ANR	6469836	Callee	GetProcAddress		6469302	0					
ANR	6469837	Identifier	GetProcAddress		6469302	0					
ANR	6469838	ArgumentList	lib		6469302	1					
ANR	6469839	Argument	lib		6469302	0					
ANR	6469840	Identifier	lib		6469302	0					
ANR	6469841	Argument	"W32_TCALL ( ""GetModuleBaseName"" )"		6469302	1					
ANR	6469842	CallExpression	"W32_TCALL ( ""GetModuleBaseName"" )"		6469302	0					
ANR	6469843	Callee	W32_TCALL		6469302	0					
ANR	6469844	Identifier	W32_TCALL		6469302	0					
ANR	6469845	ArgumentList	"""GetModuleBaseName"""		6469302	1					
ANR	6469846	Argument	"""GetModuleBaseName"""		6469302	0					
ANR	6469847	PrimaryExpression	"""GetModuleBaseName"""		6469302	0					
ANR	6469848	Statement	w32_GetModuleInformation	86:1:3711:3734	6469302	244	True				
ANR	6469849	Statement	=	86:26:3736:3736	6469302	245	True				
ANR	6469850	Statement	(	86:28:3738:3738	6469302	246	True				
ANR	6469851	Statement	BOOL	86:29:3739:3742	6469302	247	True				
ANR	6469852	Statement	(	86:34:3744:3744	6469302	248	True				
ANR	6469853	Statement	WINAPI	86:35:3745:3750	6469302	249	True				
ANR	6469854	Statement	*	86:42:3752:3752	6469302	250	True				
ANR	6469855	Statement	)	86:43:3753:3753	6469302	251	True				
ANR	6469856	Statement	(	86:44:3754:3754	6469302	252	True				
ANR	6469857	Statement	HANDLE	86:45:3755:3760	6469302	253	True				
ANR	6469858	Statement	","	86:51:3761:3761	6469302	254	True				
ANR	6469859	Statement	HMODULE	86:53:3763:3769	6469302	255	True				
ANR	6469860	Statement	","	86:60:3770:3770	6469302	256	True				
ANR	6469861	Statement	LPMODULEINFO	86:62:3772:3783	6469302	257	True				
ANR	6469862	Statement	","	86:74:3784:3784	6469302	258	True				
ANR	6469863	Statement	DWORD	86:76:3786:3790	6469302	259	True				
ANR	6469864	Statement	)	86:81:3791:3791	6469302	260	True				
ANR	6469865	Statement	)	86:82:3792:3792	6469302	261	True				
ANR	6469866	ExpressionStatement	"GetProcAddress ( lib , ""GetModuleInformation"" )"	87:2:3796:3840	6469302	262	True				
ANR	6469867	CallExpression	"GetProcAddress ( lib , ""GetModuleInformation"" )"		6469302	0					
ANR	6469868	Callee	GetProcAddress		6469302	0					
ANR	6469869	Identifier	GetProcAddress		6469302	0					
ANR	6469870	ArgumentList	lib		6469302	1					
ANR	6469871	Argument	lib		6469302	0					
ANR	6469872	Identifier	lib		6469302	0					
ANR	6469873	Argument	"""GetModuleInformation"""		6469302	1					
ANR	6469874	PrimaryExpression	"""GetModuleInformation"""		6469302	0					
ANR	6469875	Statement	w32_GetModuleFileNameEx	88:1:3843:3865	6469302	263	True				
ANR	6469876	Statement	=	88:25:3867:3867	6469302	264	True				
ANR	6469877	Statement	(	88:27:3869:3869	6469302	265	True				
ANR	6469878	Statement	DWORD	88:28:3870:3874	6469302	266	True				
ANR	6469879	Statement	(	88:34:3876:3876	6469302	267	True				
ANR	6469880	Statement	WINAPI	88:35:3877:3882	6469302	268	True				
ANR	6469881	Statement	*	88:42:3884:3884	6469302	269	True				
ANR	6469882	Statement	)	88:43:3885:3885	6469302	270	True				
ANR	6469883	Statement	(	88:44:3886:3886	6469302	271	True				
ANR	6469884	Statement	HANDLE	88:45:3887:3892	6469302	272	True				
ANR	6469885	Statement	","	88:51:3893:3893	6469302	273	True				
ANR	6469886	Statement	HMODULE	88:53:3895:3901	6469302	274	True				
ANR	6469887	Statement	","	88:60:3902:3902	6469302	275	True				
ANR	6469888	Statement	LPTSTR	88:62:3904:3909	6469302	276	True				
ANR	6469889	Statement	","	88:68:3910:3910	6469302	277	True				
ANR	6469890	Statement	DWORD	88:70:3912:3916	6469302	278	True				
ANR	6469891	Statement	)	88:75:3917:3917	6469302	279	True				
ANR	6469892	Statement	)	88:76:3918:3918	6469302	280	True				
ANR	6469893	ExpressionStatement	"GetProcAddress ( lib , W32_TCALL ( ""GetModuleFileNameEx"" ) )"	89:2:3922:3977	6469302	281	True				
ANR	6469894	CallExpression	"GetProcAddress ( lib , W32_TCALL ( ""GetModuleFileNameEx"" ) )"		6469302	0					
ANR	6469895	Callee	GetProcAddress		6469302	0					
ANR	6469896	Identifier	GetProcAddress		6469302	0					
ANR	6469897	ArgumentList	lib		6469302	1					
ANR	6469898	Argument	lib		6469302	0					
ANR	6469899	Identifier	lib		6469302	0					
ANR	6469900	Argument	"W32_TCALL ( ""GetModuleFileNameEx"" )"		6469302	1					
ANR	6469901	CallExpression	"W32_TCALL ( ""GetModuleFileNameEx"" )"		6469302	0					
ANR	6469902	Callee	W32_TCALL		6469302	0					
ANR	6469903	Identifier	W32_TCALL		6469302	0					
ANR	6469904	ArgumentList	"""GetModuleFileNameEx"""		6469302	1					
ANR	6469905	Argument	"""GetModuleFileNameEx"""		6469302	0					
ANR	6469906	PrimaryExpression	"""GetModuleFileNameEx"""		6469302	0					
ANR	6469907	ExpressionStatement	"lib = LoadLibrary ( TEXT ( ""ntdll.dll"" ) )"	90:1:3980:4017	6469302	282	True				
ANR	6469908	AssignmentExpression	"lib = LoadLibrary ( TEXT ( ""ntdll.dll"" ) )"		6469302	0		=			
ANR	6469909	Identifier	lib		6469302	0					
ANR	6469910	CallExpression	"LoadLibrary ( TEXT ( ""ntdll.dll"" ) )"		6469302	1					
ANR	6469911	Callee	LoadLibrary		6469302	0					
ANR	6469912	Identifier	LoadLibrary		6469302	0					
ANR	6469913	ArgumentList	"TEXT ( ""ntdll.dll"" )"		6469302	1					
ANR	6469914	Argument	"TEXT ( ""ntdll.dll"" )"		6469302	0					
ANR	6469915	CallExpression	"TEXT ( ""ntdll.dll"" )"		6469302	0					
ANR	6469916	Callee	TEXT		6469302	0					
ANR	6469917	Identifier	TEXT		6469302	0					
ANR	6469918	ArgumentList	"""ntdll.dll"""		6469302	1					
ANR	6469919	Argument	"""ntdll.dll"""		6469302	0					
ANR	6469920	PrimaryExpression	"""ntdll.dll"""		6469302	0					
ANR	6469921	Statement	w32_NtQuerySystemInformation	91:1:4020:4047	6469302	283	True				
ANR	6469922	Statement	=	91:30:4049:4049	6469302	284	True				
ANR	6469923	Statement	(	91:32:4051:4051	6469302	285	True				
ANR	6469924	Statement	NTSTATUS	91:33:4052:4059	6469302	286	True				
ANR	6469925	Statement	(	91:43:4062:4062	6469302	287	True				
ANR	6469926	Statement	WINAPI	91:44:4063:4068	6469302	288	True				
ANR	6469927	Statement	*	91:51:4070:4070	6469302	289	True				
ANR	6469928	Statement	)	91:52:4071:4071	6469302	290	True				
ANR	6469929	Statement	(	91:53:4072:4072	6469302	291	True				
ANR	6469930	Statement	ULONG	91:54:4073:4077	6469302	292	True				
ANR	6469931	Statement	","	91:59:4078:4078	6469302	293	True				
ANR	6469932	Statement	PVOID	91:61:4080:4084	6469302	294	True				
ANR	6469933	Statement	","	91:66:4085:4085	6469302	295	True				
ANR	6469934	Statement	ULONG	91:68:4087:4091	6469302	296	True				
ANR	6469935	Statement	","	91:73:4092:4092	6469302	297	True				
ANR	6469936	Statement	PULONG	91:75:4094:4099	6469302	298	True				
ANR	6469937	Statement	)	91:81:4100:4100	6469302	299	True				
ANR	6469938	Statement	)	91:82:4101:4101	6469302	300	True				
ANR	6469939	ExpressionStatement	"GetProcAddress ( lib , ""NtQuerySystemInformation"" )"	92:2:4105:4153	6469302	301	True				
ANR	6469940	CallExpression	"GetProcAddress ( lib , ""NtQuerySystemInformation"" )"		6469302	0					
ANR	6469941	Callee	GetProcAddress		6469302	0					
ANR	6469942	Identifier	GetProcAddress		6469302	0					
ANR	6469943	ArgumentList	lib		6469302	1					
ANR	6469944	Argument	lib		6469302	0					
ANR	6469945	Identifier	lib		6469302	0					
ANR	6469946	Argument	"""NtQuerySystemInformation"""		6469302	1					
ANR	6469947	PrimaryExpression	"""NtQuerySystemInformation"""		6469302	0					
ANR	6469948	Statement	w32_NtDuplicateObject	93:1:4156:4176	6469302	302	True				
ANR	6469949	Statement	=	93:23:4178:4178	6469302	303	True				
ANR	6469950	Statement	(	93:25:4180:4180	6469302	304	True				
ANR	6469951	Statement	NTSTATUS	93:26:4181:4188	6469302	305	True				
ANR	6469952	Statement	(	93:36:4191:4191	6469302	306	True				
ANR	6469953	Statement	WINAPI	93:37:4192:4197	6469302	307	True				
ANR	6469954	Statement	*	93:44:4199:4199	6469302	308	True				
ANR	6469955	Statement	)	93:45:4200:4200	6469302	309	True				
ANR	6469956	Statement	(	93:46:4201:4201	6469302	310	True				
ANR	6469957	Statement	HANDLE	93:47:4202:4207	6469302	311	True				
ANR	6469958	Statement	","	93:53:4208:4208	6469302	312	True				
ANR	6469959	Statement	HANDLE	93:55:4210:4215	6469302	313	True				
ANR	6469960	Statement	","	93:61:4216:4216	6469302	314	True				
ANR	6469961	Statement	HANDLE	93:63:4218:4223	6469302	315	True				
ANR	6469962	Statement	","	93:69:4224:4224	6469302	316	True				
ANR	6469963	Statement	PHANDLE	93:71:4226:4232	6469302	317	True				
ANR	6469964	Statement	","	93:78:4233:4233	6469302	318	True				
ANR	6469965	Statement	ACCESS_MASK	93:80:4235:4245	6469302	319	True				
ANR	6469966	Statement	","	93:91:4246:4246	6469302	320	True				
ANR	6469967	Statement	ULONG	93:93:4248:4252	6469302	321	True				
ANR	6469968	Statement	","	93:98:4253:4253	6469302	322	True				
ANR	6469969	Statement	ULONG	93:100:4255:4259	6469302	323	True				
ANR	6469970	Statement	)	93:105:4260:4260	6469302	324	True				
ANR	6469971	Statement	)	93:106:4261:4261	6469302	325	True				
ANR	6469972	ExpressionStatement	"GetProcAddress ( lib , ""NtDuplicateObject"" )"	94:2:4265:4306	6469302	326	True				
ANR	6469973	CallExpression	"GetProcAddress ( lib , ""NtDuplicateObject"" )"		6469302	0					
ANR	6469974	Callee	GetProcAddress		6469302	0					
ANR	6469975	Identifier	GetProcAddress		6469302	0					
ANR	6469976	ArgumentList	lib		6469302	1					
ANR	6469977	Argument	lib		6469302	0					
ANR	6469978	Identifier	lib		6469302	0					
ANR	6469979	Argument	"""NtDuplicateObject"""		6469302	1					
ANR	6469980	PrimaryExpression	"""NtDuplicateObject"""		6469302	0					
ANR	6469981	Statement	w32_NtQueryObject	95:1:4309:4325	6469302	327	True				
ANR	6469982	Statement	=	95:19:4327:4327	6469302	328	True				
ANR	6469983	Statement	(	95:21:4329:4329	6469302	329	True				
ANR	6469984	Statement	NTSTATUS	95:22:4330:4337	6469302	330	True				
ANR	6469985	Statement	(	95:32:4340:4340	6469302	331	True				
ANR	6469986	Statement	WINAPI	95:33:4341:4346	6469302	332	True				
ANR	6469987	Statement	*	95:40:4348:4348	6469302	333	True				
ANR	6469988	Statement	)	95:41:4349:4349	6469302	334	True				
ANR	6469989	Statement	(	95:42:4350:4350	6469302	335	True				
ANR	6469990	Statement	HANDLE	95:43:4351:4356	6469302	336	True				
ANR	6469991	Statement	","	95:49:4357:4357	6469302	337	True				
ANR	6469992	Statement	ULONG	95:51:4359:4363	6469302	338	True				
ANR	6469993	Statement	","	95:56:4364:4364	6469302	339	True				
ANR	6469994	Statement	PVOID	95:58:4366:4370	6469302	340	True				
ANR	6469995	Statement	","	95:63:4371:4371	6469302	341	True				
ANR	6469996	Statement	ULONG	95:65:4373:4377	6469302	342	True				
ANR	6469997	Statement	","	95:70:4378:4378	6469302	343	True				
ANR	6469998	Statement	PULONG	95:72:4380:4385	6469302	344	True				
ANR	6469999	Statement	)	95:78:4386:4386	6469302	345	True				
ANR	6470000	Statement	)	95:79:4387:4387	6469302	346	True				
ANR	6470001	ExpressionStatement	"GetProcAddress ( lib , ""NtQueryObject"" )"	96:2:4391:4426	6469302	347	True				
ANR	6470002	CallExpression	"GetProcAddress ( lib , ""NtQueryObject"" )"		6469302	0					
ANR	6470003	Callee	GetProcAddress		6469302	0					
ANR	6470004	Identifier	GetProcAddress		6469302	0					
ANR	6470005	ArgumentList	lib		6469302	1					
ANR	6470006	Argument	lib		6469302	0					
ANR	6470007	Identifier	lib		6469302	0					
ANR	6470008	Argument	"""NtQueryObject"""		6469302	1					
ANR	6470009	PrimaryExpression	"""NtQueryObject"""		6469302	0					
ANR	6470010	Statement	w32_NtQueryInformationThread	97:1:4429:4456	6469302	348	True				
ANR	6470011	Statement	=	97:30:4458:4458	6469302	349	True				
ANR	6470012	Statement	(	97:32:4460:4460	6469302	350	True				
ANR	6470013	Statement	NTSTATUS	97:33:4461:4468	6469302	351	True				
ANR	6470014	Statement	(	97:43:4471:4471	6469302	352	True				
ANR	6470015	Statement	WINAPI	97:44:4472:4477	6469302	353	True				
ANR	6470016	Statement	*	97:51:4479:4479	6469302	354	True				
ANR	6470017	Statement	)	97:52:4480:4480	6469302	355	True				
ANR	6470018	Statement	(	97:53:4481:4481	6469302	356	True				
ANR	6470019	Statement	HANDLE	97:54:4482:4487	6469302	357	True				
ANR	6470020	Statement	","	97:60:4488:4488	6469302	358	True				
ANR	6470021	Statement	ULONG	97:62:4490:4494	6469302	359	True				
ANR	6470022	Statement	","	97:67:4495:4495	6469302	360	True				
ANR	6470023	Statement	PVOID	97:69:4497:4501	6469302	361	True				
ANR	6470024	Statement	","	97:74:4502:4502	6469302	362	True				
ANR	6470025	Statement	ULONG	97:76:4504:4508	6469302	363	True				
ANR	6470026	Statement	","	97:81:4509:4509	6469302	364	True				
ANR	6470027	Statement	PULONG	97:83:4511:4516	6469302	365	True				
ANR	6470028	Statement	)	97:89:4517:4517	6469302	366	True				
ANR	6470029	Statement	)	97:90:4518:4518	6469302	367	True				
ANR	6470030	ExpressionStatement	"GetProcAddress ( lib , ""NtQueryInformationThread"" )"	98:2:4522:4570	6469302	368	True				
ANR	6470031	CallExpression	"GetProcAddress ( lib , ""NtQueryInformationThread"" )"		6469302	0					
ANR	6470032	Callee	GetProcAddress		6469302	0					
ANR	6470033	Identifier	GetProcAddress		6469302	0					
ANR	6470034	ArgumentList	lib		6469302	1					
ANR	6470035	Argument	lib		6469302	0					
ANR	6470036	Identifier	lib		6469302	0					
ANR	6470037	Argument	"""NtQueryInformationThread"""		6469302	1					
ANR	6470038	PrimaryExpression	"""NtQueryInformationThread"""		6469302	0					
ANR	6470039	IfStatement	if ( ! w32_DebugActiveProcessStop || ! w32_OpenThread || ! w32_DebugBreakProcess || ! w32_GetModuleBaseName || ! w32_GetModuleInformation )		6469302	369					
ANR	6470040	Condition	! w32_DebugActiveProcessStop || ! w32_OpenThread || ! w32_DebugBreakProcess || ! w32_GetModuleBaseName || ! w32_GetModuleInformation	99:5:4577:4708	6469302	0	True				
ANR	6470041	OrExpression	! w32_DebugActiveProcessStop || ! w32_OpenThread || ! w32_DebugBreakProcess || ! w32_GetModuleBaseName || ! w32_GetModuleInformation		6469302	0		||			
ANR	6470042	UnaryOperationExpression	! w32_DebugActiveProcessStop		6469302	0					
ANR	6470043	UnaryOperator	!		6469302	0					
ANR	6470044	Identifier	w32_DebugActiveProcessStop		6469302	1					
ANR	6470045	OrExpression	! w32_OpenThread || ! w32_DebugBreakProcess || ! w32_GetModuleBaseName || ! w32_GetModuleInformation		6469302	1		||			
ANR	6470046	UnaryOperationExpression	! w32_OpenThread		6469302	0					
ANR	6470047	UnaryOperator	!		6469302	0					
ANR	6470048	Identifier	w32_OpenThread		6469302	1					
ANR	6470049	OrExpression	! w32_DebugBreakProcess || ! w32_GetModuleBaseName || ! w32_GetModuleInformation		6469302	1		||			
ANR	6470050	UnaryOperationExpression	! w32_DebugBreakProcess		6469302	0					
ANR	6470051	UnaryOperator	!		6469302	0					
ANR	6470052	Identifier	w32_DebugBreakProcess		6469302	1					
ANR	6470053	OrExpression	! w32_GetModuleBaseName || ! w32_GetModuleInformation		6469302	1		||			
ANR	6470054	UnaryOperationExpression	! w32_GetModuleBaseName		6469302	0					
ANR	6470055	UnaryOperator	!		6469302	0					
ANR	6470056	Identifier	w32_GetModuleBaseName		6469302	1					
ANR	6470057	UnaryOperationExpression	! w32_GetModuleInformation		6469302	1					
ANR	6470058	UnaryOperator	!		6469302	0					
ANR	6470059	Identifier	w32_GetModuleInformation		6469302	1					
ANR	6470060	CompoundStatement		62:58:3459:3459	6469302	1					
ANR	6470061	Statement	eprintf	102:2:4726:4732	6469302	0	True				
ANR	6470062	Statement	(	102:10:4734:4734	6469302	1	True				
ANR	6470063	Statement	"""debug_init_calls:\\n"""	102:11:4735:4755	6469302	2	True				
ANR	6470064	Statement	"""DebugActiveProcessStop: 0x%p\\n"""	103:3:4760:4791	6469302	3	True				
ANR	6470065	Statement	"""OpenThread: 0x%p\\n"""	104:3:4796:4815	6469302	4	True				
ANR	6470066	Statement	"""DebugBreakProcess: 0x%p\\n"""	105:3:4820:4846	6469302	5	True				
ANR	6470067	Statement	"""GetThreadId: 0x%p\\n"""	106:3:4851:4871	6469302	6	True				
ANR	6470068	Statement	","	106:24:4872:4872	6469302	7	True				
ANR	6470069	Statement	w32_DebugActiveProcessStop	107:3:4877:4902	6469302	8	True				
ANR	6470070	Statement	","	107:29:4903:4903	6469302	9	True				
ANR	6470071	Statement	w32_OpenThread	107:31:4905:4918	6469302	10	True				
ANR	6470072	Statement	","	107:45:4919:4919	6469302	11	True				
ANR	6470073	Statement	w32_DebugBreakProcess	107:47:4921:4941	6469302	12	True				
ANR	6470074	Statement	","	107:68:4942:4942	6469302	13	True				
ANR	6470075	Statement	w32_GetThreadId	107:70:4944:4958	6469302	14	True				
ANR	6470076	Statement	)	107:85:4959:4959	6469302	15	True				
ANR	6470077	ExpressionStatement		107:86:4960:4960	6469302	16	True				
ANR	6470078	ReturnStatement	return false ;	108:2:4964:4976	6469302	17	True				
ANR	6470079	Identifier	false		6469302	0					
ANR	6470080	ReturnStatement	return true ;	110:1:4982:4993	6469302	370	True				
ANR	6470081	Identifier	true		6469302	0					
ANR	6470082	ReturnType	int		6469302	1					
ANR	6470083	Identifier	w32_dbg_init		6469302	2					
ANR	6470084	ParameterList			6469302	3					
ANR	6470085	CFGEntryNode	ENTRY		6469302		True				
ANR	6470086	CFGExitNode	EXIT		6469302		True				
ANR	6470087	Symbol	w32_DebugActiveProcessStop		6469302						
ANR	6470088	Symbol	lib		6469302						
ANR	6470089	Symbol	LoadLibrary		6469302						
ANR	6470090	Symbol	w32_OpenThread		6469302						
ANR	6470091	Symbol	false		6469302						
ANR	6470092	Symbol	w32_GetModuleBaseName		6469302						
ANR	6470093	Symbol	true		6469302						
ANR	6470094	Symbol	W32_TCALL		6469302						
ANR	6470095	Symbol	TEXT		6469302						
ANR	6470096	Symbol	w32_DebugBreakProcess		6469302						
ANR	6470097	Symbol	w32_GetModuleInformation		6469302						
ANR	6470098	Symbol	GetModuleHandle		6469302						
ANR	6470099	Function	w32_t2h	114:0:5004:5224							
ANR	6470100	FunctionDef	w32_t2h (pid_t tid)		6470099	0					
ANR	6470101	CompoundStatement		114:33:5037:5224	6470099	0					
ANR	6470102	IdentifierDeclStatement	TH_INFO * th = get_th ( tid ) ;	115:1:5040:5066	6470099	0	True				
ANR	6470103	IdentifierDecl	* th = get_th ( tid )		6470099	0					
ANR	6470104	IdentifierDeclType	TH_INFO *		6470099	0					
ANR	6470105	Identifier	th		6470099	1					
ANR	6470106	AssignmentExpression	* th = get_th ( tid )		6470099	2		=			
ANR	6470107	Identifier	th		6470099	0					
ANR	6470108	CallExpression	get_th ( tid )		6470099	1					
ANR	6470109	Callee	get_th		6470099	0					
ANR	6470110	Identifier	get_th		6470099	0					
ANR	6470111	ArgumentList	tid		6470099	1					
ANR	6470112	Argument	tid		6470099	0					
ANR	6470113	Identifier	tid		6470099	0					
ANR	6470114	IfStatement	if ( ! th )		6470099	1					
ANR	6470115	Condition	! th	116:4:5072:5074	6470099	0	True				
ANR	6470116	UnaryOperationExpression	! th		6470099	0					
ANR	6470117	UnaryOperator	!		6470099	0					
ANR	6470118	Identifier	th		6470099	1					
ANR	6470119	CompoundStatement		3:9:39:39	6470099	1					
ANR	6470120	ExpressionStatement	w32_dbg_threads ( tid )	118:2:5109:5130	6470099	0	True				
ANR	6470121	CallExpression	w32_dbg_threads ( tid )		6470099	0					
ANR	6470122	Callee	w32_dbg_threads		6470099	0					
ANR	6470123	Identifier	w32_dbg_threads		6470099	0					
ANR	6470124	ArgumentList	tid		6470099	1					
ANR	6470125	Argument	tid		6470099	0					
ANR	6470126	Identifier	tid		6470099	0					
ANR	6470127	IfStatement	if ( ! ( th = get_th ( tid ) ) )		6470099	1					
ANR	6470128	Condition	! ( th = get_th ( tid ) )	121:5:5167:5186	6470099	0	True				
ANR	6470129	UnaryOperationExpression	! ( th = get_th ( tid ) )		6470099	0					
ANR	6470130	UnaryOperator	!		6470099	0					
ANR	6470131	AssignmentExpression	th = get_th ( tid )		6470099	1		=			
ANR	6470132	Identifier	th		6470099	0					
ANR	6470133	CallExpression	get_th ( tid )		6470099	1					
ANR	6470134	Callee	get_th		6470099	0					
ANR	6470135	Identifier	get_th		6470099	0					
ANR	6470136	ArgumentList	tid		6470099	1					
ANR	6470137	Argument	tid		6470099	0					
ANR	6470138	Identifier	tid		6470099	0					
ANR	6470139	ReturnStatement	return NULL ;	122:3:5192:5203	6470099	1	True				
ANR	6470140	Identifier	NULL		6470099	0					
ANR	6470141	ReturnStatement	return th -> ht ;	124:1:5209:5222	6470099	2	True				
ANR	6470142	PtrMemberAccess	th -> ht		6470099	0					
ANR	6470143	Identifier	th		6470099	0					
ANR	6470144	Identifier	ht		6470099	1					
ANR	6470145	ReturnType	static HANDLE		6470099	1					
ANR	6470146	Identifier	w32_t2h		6470099	2					
ANR	6470147	ParameterList	pid_t tid		6470099	3					
ANR	6470148	Parameter	pid_t tid	114:22:5026:5034	6470099	0	True				
ANR	6470149	ParameterType	pid_t		6470099	0					
ANR	6470150	Identifier	tid		6470099	1					
ANR	6470151	CFGEntryNode	ENTRY		6470099		True				
ANR	6470152	CFGExitNode	EXIT		6470099		True				
ANR	6470153	Symbol	NULL		6470099						
ANR	6470154	Symbol	th		6470099						
ANR	6470155	Symbol	get_th		6470099						
ANR	6470156	Symbol	* th		6470099						
ANR	6470157	Symbol	th -> ht		6470099						
ANR	6470158	Symbol	tid		6470099						
ANR	6470159	Function	w32_h2t	128:0:5234:5470							
ANR	6470160	FunctionDef	w32_h2t (HANDLE h)		6470159	0					
ANR	6470161	CompoundStatement		128:36:5270:5470	6470159	0					
ANR	6470162	IfStatement	if ( w32_GetThreadId != NULL )		6470159	0					
ANR	6470163	Condition	w32_GetThreadId != NULL	129:5:5277:5299	6470159	0	True				
ANR	6470164	EqualityExpression	w32_GetThreadId != NULL		6470159	0		!=			
ANR	6470165	Identifier	w32_GetThreadId		6470159	0					
ANR	6470166	Identifier	NULL		6470159	1					
ANR	6470167	ReturnStatement	return w32_GetThreadId ( h ) ;	130:2:5324:5350	6470159	1	True				
ANR	6470168	CallExpression	w32_GetThreadId ( h )		6470159	0					
ANR	6470169	Callee	w32_GetThreadId		6470159	0					
ANR	6470170	Identifier	w32_GetThreadId		6470159	0					
ANR	6470171	ArgumentList	h		6470159	1					
ANR	6470172	Argument	h		6470159	0					
ANR	6470173	Identifier	h		6470159	0					
ANR	6470174	IfStatement	if ( w32_GetProcessId != NULL )		6470159	1					
ANR	6470175	Condition	w32_GetProcessId != NULL	131:5:5357:5380	6470159	0	True				
ANR	6470176	EqualityExpression	w32_GetProcessId != NULL		6470159	0		!=			
ANR	6470177	Identifier	w32_GetProcessId		6470159	0					
ANR	6470178	Identifier	NULL		6470159	1					
ANR	6470179	ReturnStatement	return w32_GetProcessId ( h ) ;	132:2:5403:5430	6470159	1	True				
ANR	6470180	CallExpression	w32_GetProcessId ( h )		6470159	0					
ANR	6470181	Callee	w32_GetProcessId		6470159	0					
ANR	6470182	Identifier	w32_GetProcessId		6470159	0					
ANR	6470183	ArgumentList	h		6470159	1					
ANR	6470184	Argument	h		6470159	0					
ANR	6470185	Identifier	h		6470159	0					
ANR	6470186	ReturnStatement	return ( int ) ( size_t ) h ;	133:1:5433:5454	6470159	2	True				
ANR	6470187	CastExpression	( int ) ( size_t ) h		6470159	0					
ANR	6470188	CastTarget	int		6470159	0					
ANR	6470189	CastExpression	( size_t ) h		6470159	1					
ANR	6470190	CastTarget	size_t		6470159	0					
ANR	6470191	Identifier	h		6470159	1					
ANR	6470192	ReturnType	inline static int		6470159	1					
ANR	6470193	Identifier	w32_h2t		6470159	2					
ANR	6470194	ParameterList	HANDLE h		6470159	3					
ANR	6470195	Parameter	HANDLE h	128:26:5260:5267	6470159	0	True				
ANR	6470196	ParameterType	HANDLE		6470159	0					
ANR	6470197	Identifier	h		6470159	1					
ANR	6470198	CFGEntryNode	ENTRY		6470159		True				
ANR	6470199	CFGExitNode	EXIT		6470159		True				
ANR	6470200	Symbol	w32_GetProcessId		6470159						
ANR	6470201	Symbol	NULL		6470159						
ANR	6470202	Symbol	h		6470159						
ANR	6470203	Symbol	w32_GetThreadId		6470159						
ANR	6470204	Function	w32_h2p	136:0:5473:5541							
ANR	6470205	FunctionDef	w32_h2p (HANDLE h)		6470204	0					
ANR	6470206	CompoundStatement		136:36:5509:5541	6470204	0					
ANR	6470207	ReturnStatement	return w32_GetProcessId ( h ) ;	137:1:5512:5539	6470204	0	True				
ANR	6470208	CallExpression	w32_GetProcessId ( h )		6470204	0					
ANR	6470209	Callee	w32_GetProcessId		6470204	0					
ANR	6470210	Identifier	w32_GetProcessId		6470204	0					
ANR	6470211	ArgumentList	h		6470204	1					
ANR	6470212	Argument	h		6470204	0					
ANR	6470213	Identifier	h		6470204	0					
ANR	6470214	ReturnType	static inline int		6470204	1					
ANR	6470215	Identifier	w32_h2p		6470204	2					
ANR	6470216	ParameterList	HANDLE h		6470204	3					
ANR	6470217	Parameter	HANDLE h	136:26:5499:5506	6470204	0	True				
ANR	6470218	ParameterType	HANDLE		6470204	0					
ANR	6470219	Identifier	h		6470204	1					
ANR	6470220	CFGEntryNode	ENTRY		6470204		True				
ANR	6470221	CFGExitNode	EXIT		6470204		True				
ANR	6470222	Symbol	w32_GetProcessId		6470204						
ANR	6470223	Symbol	h		6470204						
ANR	6470224	Function	w32_first_thread	140:0:5544:6475							
ANR	6470225	FunctionDef	w32_first_thread (int pid)		6470224	0					
ANR	6470226	CompoundStatement		140:30:5574:6475	6470224	0					
ANR	6470227	IdentifierDeclStatement	HANDLE th ;	141:1:5577:5586	6470224	0	True				
ANR	6470228	IdentifierDecl	th		6470224	0					
ANR	6470229	IdentifierDeclType	HANDLE		6470224	0					
ANR	6470230	Identifier	th		6470224	1					
ANR	6470231	IdentifierDeclStatement	HANDLE thid ;	142:1:5589:5600	6470224	1	True				
ANR	6470232	IdentifierDecl	thid		6470224	0					
ANR	6470233	IdentifierDeclType	HANDLE		6470224	0					
ANR	6470234	Identifier	thid		6470224	1					
ANR	6470235	IdentifierDeclStatement	THREADENTRY32 te32 ;	143:1:5603:5621	6470224	2	True				
ANR	6470236	IdentifierDecl	te32		6470224	0					
ANR	6470237	IdentifierDeclType	THREADENTRY32		6470224	0					
ANR	6470238	Identifier	te32		6470224	1					
ANR	6470239	ExpressionStatement	te32 . dwSize = sizeof ( THREADENTRY32 )	144:1:5624:5660	6470224	3	True				
ANR	6470240	AssignmentExpression	te32 . dwSize = sizeof ( THREADENTRY32 )		6470224	0		=			
ANR	6470241	MemberAccess	te32 . dwSize		6470224	0					
ANR	6470242	Identifier	te32		6470224	0					
ANR	6470243	Identifier	dwSize		6470224	1					
ANR	6470244	SizeofExpression	sizeof ( THREADENTRY32 )		6470224	1					
ANR	6470245	Sizeof	sizeof		6470224	0					
ANR	6470246	SizeofOperand	THREADENTRY32		6470224	1					
ANR	6470247	IfStatement	if ( ! w32_OpenThread )		6470224	4					
ANR	6470248	Condition	! w32_OpenThread	146:5:5668:5682	6470224	0	True				
ANR	6470249	UnaryOperationExpression	! w32_OpenThread		6470224	0					
ANR	6470250	UnaryOperator	!		6470224	0					
ANR	6470251	Identifier	w32_OpenThread		6470224	1					
ANR	6470252	CompoundStatement		7:22:110:110	6470224	1					
ANR	6470253	ExpressionStatement	"eprintf ( ""w32_thread_list: no w32_OpenThread?\\n"" )"	147:2:5689:5737	6470224	0	True				
ANR	6470254	CallExpression	"eprintf ( ""w32_thread_list: no w32_OpenThread?\\n"" )"		6470224	0					
ANR	6470255	Callee	eprintf		6470224	0					
ANR	6470256	Identifier	eprintf		6470224	0					
ANR	6470257	ArgumentList	"""w32_thread_list: no w32_OpenThread?\\n"""		6470224	1					
ANR	6470258	Argument	"""w32_thread_list: no w32_OpenThread?\\n"""		6470224	0					
ANR	6470259	PrimaryExpression	"""w32_thread_list: no w32_OpenThread?\\n"""		6470224	0					
ANR	6470260	ReturnStatement	return - 1 ;	148:2:5741:5750	6470224	1	True				
ANR	6470261	UnaryOperationExpression	- 1		6470224	0					
ANR	6470262	UnaryOperator	-		6470224	0					
ANR	6470263	PrimaryExpression	1		6470224	1					
ANR	6470264	ExpressionStatement	"th = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , pid )"	150:1:5756:5810	6470224	5	True				
ANR	6470265	AssignmentExpression	"th = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , pid )"		6470224	0		=			
ANR	6470266	Identifier	th		6470224	0					
ANR	6470267	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , pid )"		6470224	1					
ANR	6470268	Callee	CreateToolhelp32Snapshot		6470224	0					
ANR	6470269	Identifier	CreateToolhelp32Snapshot		6470224	0					
ANR	6470270	ArgumentList	TH32CS_SNAPTHREAD		6470224	1					
ANR	6470271	Argument	TH32CS_SNAPTHREAD		6470224	0					
ANR	6470272	Identifier	TH32CS_SNAPTHREAD		6470224	0					
ANR	6470273	Argument	pid		6470224	1					
ANR	6470274	Identifier	pid		6470224	0					
ANR	6470275	IfStatement	if ( th == INVALID_HANDLE_VALUE )		6470224	6					
ANR	6470276	Condition	th == INVALID_HANDLE_VALUE	151:5:5817:5842	6470224	0	True				
ANR	6470277	EqualityExpression	th == INVALID_HANDLE_VALUE		6470224	0		==			
ANR	6470278	Identifier	th		6470224	0					
ANR	6470279	Identifier	INVALID_HANDLE_VALUE		6470224	1					
ANR	6470280	CompoundStatement		12:33:270:270	6470224	1					
ANR	6470281	ExpressionStatement	"eprintf ( ""w32_thread_list: invalid handle\\n"" )"	152:2:5849:5894	6470224	0	True				
ANR	6470282	CallExpression	"eprintf ( ""w32_thread_list: invalid handle\\n"" )"		6470224	0					
ANR	6470283	Callee	eprintf		6470224	0					
ANR	6470284	Identifier	eprintf		6470224	0					
ANR	6470285	ArgumentList	"""w32_thread_list: invalid handle\\n"""		6470224	1					
ANR	6470286	Argument	"""w32_thread_list: invalid handle\\n"""		6470224	0					
ANR	6470287	PrimaryExpression	"""w32_thread_list: invalid handle\\n"""		6470224	0					
ANR	6470288	ReturnStatement	return - 1 ;	153:2:5898:5907	6470224	1	True				
ANR	6470289	UnaryOperationExpression	- 1		6470224	0					
ANR	6470290	UnaryOperator	-		6470224	0					
ANR	6470291	PrimaryExpression	1		6470224	1					
ANR	6470292	IfStatement	"if ( ! Thread32First ( th , & te32 ) )"		6470224	7					
ANR	6470293	Condition	"! Thread32First ( th , & te32 )"	155:5:5917:5942	6470224	0	True				
ANR	6470294	UnaryOperationExpression	"! Thread32First ( th , & te32 )"		6470224	0					
ANR	6470295	UnaryOperator	!		6470224	0					
ANR	6470296	CallExpression	"Thread32First ( th , & te32 )"		6470224	1					
ANR	6470297	Callee	Thread32First		6470224	0					
ANR	6470298	Identifier	Thread32First		6470224	0					
ANR	6470299	ArgumentList	th		6470224	1					
ANR	6470300	Argument	th		6470224	0					
ANR	6470301	Identifier	th		6470224	0					
ANR	6470302	Argument	& te32		6470224	1					
ANR	6470303	UnaryOperationExpression	& te32		6470224	0					
ANR	6470304	UnaryOperator	&		6470224	0					
ANR	6470305	Identifier	te32		6470224	1					
ANR	6470306	CompoundStatement		16:33:370:370	6470224	1					
ANR	6470307	ExpressionStatement	CloseHandle ( th )	156:2:5949:5965	6470224	0	True				
ANR	6470308	CallExpression	CloseHandle ( th )		6470224	0					
ANR	6470309	Callee	CloseHandle		6470224	0					
ANR	6470310	Identifier	CloseHandle		6470224	0					
ANR	6470311	ArgumentList	th		6470224	1					
ANR	6470312	Argument	th		6470224	0					
ANR	6470313	Identifier	th		6470224	0					
ANR	6470314	ExpressionStatement	"eprintf ( ""w32_thread_list: no thread first\\n"" )"	157:2:5969:6015	6470224	1	True				
ANR	6470315	CallExpression	"eprintf ( ""w32_thread_list: no thread first\\n"" )"		6470224	0					
ANR	6470316	Callee	eprintf		6470224	0					
ANR	6470317	Identifier	eprintf		6470224	0					
ANR	6470318	ArgumentList	"""w32_thread_list: no thread first\\n"""		6470224	1					
ANR	6470319	Argument	"""w32_thread_list: no thread first\\n"""		6470224	0					
ANR	6470320	PrimaryExpression	"""w32_thread_list: no thread first\\n"""		6470224	0					
ANR	6470321	ReturnStatement	return - 1 ;	158:2:6019:6028	6470224	2	True				
ANR	6470322	UnaryOperationExpression	- 1		6470224	0					
ANR	6470323	UnaryOperator	-		6470224	0					
ANR	6470324	PrimaryExpression	1		6470224	1					
ANR	6470325	DoStatement	do		6470224	8					
ANR	6470326	CompoundStatement		21:4:462:462	6470224	0					
ANR	6470327	IfStatement	if ( te32 . th32OwnerProcessID == pid )		6470224	0					
ANR	6470328	Condition	te32 . th32OwnerProcessID == pid	162:6:6080:6109	6470224	0	True				
ANR	6470329	EqualityExpression	te32 . th32OwnerProcessID == pid		6470224	0		==			
ANR	6470330	MemberAccess	te32 . th32OwnerProcessID		6470224	0					
ANR	6470331	Identifier	te32		6470224	0					
ANR	6470332	Identifier	th32OwnerProcessID		6470224	1					
ANR	6470333	Identifier	pid		6470224	1					
ANR	6470334	CompoundStatement		23:38:537:537	6470224	1					
ANR	6470335	ExpressionStatement	"thid = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , te32 . th32ThreadID )"	163:3:6117:6180	6470224	0	True				
ANR	6470336	AssignmentExpression	"thid = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , te32 . th32ThreadID )"		6470224	0		=			
ANR	6470337	Identifier	thid		6470224	0					
ANR	6470338	CallExpression	"w32_OpenThread ( THREAD_ALL_ACCESS , 0 , te32 . th32ThreadID )"		6470224	1					
ANR	6470339	Callee	w32_OpenThread		6470224	0					
ANR	6470340	Identifier	w32_OpenThread		6470224	0					
ANR	6470341	ArgumentList	THREAD_ALL_ACCESS		6470224	1					
ANR	6470342	Argument	THREAD_ALL_ACCESS		6470224	0					
ANR	6470343	Identifier	THREAD_ALL_ACCESS		6470224	0					
ANR	6470344	Argument	0		6470224	1					
ANR	6470345	PrimaryExpression	0		6470224	0					
ANR	6470346	Argument	te32 . th32ThreadID		6470224	2					
ANR	6470347	MemberAccess	te32 . th32ThreadID		6470224	0					
ANR	6470348	Identifier	te32		6470224	0					
ANR	6470349	Identifier	th32ThreadID		6470224	1					
ANR	6470350	IfStatement	if ( ! thid )		6470224	1					
ANR	6470351	Condition	! thid	164:7:6189:6193	6470224	0	True				
ANR	6470352	UnaryOperationExpression	! thid		6470224	0					
ANR	6470353	UnaryOperator	!		6470224	0					
ANR	6470354	Identifier	thid		6470224	1					
ANR	6470355	CompoundStatement		25:14:621:621	6470224	1					
ANR	6470356	ExpressionStatement	"r_sys_perror ( ""w32_first_thread/OpenThread"" )"	165:4:6202:6246	6470224	0	True				
ANR	6470357	CallExpression	"r_sys_perror ( ""w32_first_thread/OpenThread"" )"		6470224	0					
ANR	6470358	Callee	r_sys_perror		6470224	0					
ANR	6470359	Identifier	r_sys_perror		6470224	0					
ANR	6470360	ArgumentList	"""w32_first_thread/OpenThread"""		6470224	1					
ANR	6470361	Argument	"""w32_first_thread/OpenThread"""		6470224	0					
ANR	6470362	PrimaryExpression	"""w32_first_thread/OpenThread"""		6470224	0					
ANR	6470363	GotoStatement	goto err_load_th ;	166:4:6252:6268	6470224	1	True				
ANR	6470364	Identifier	err_load_th		6470224	0					
ANR	6470365	ExpressionStatement	CloseHandle ( th )	168:3:6278:6294	6470224	2	True				
ANR	6470366	CallExpression	CloseHandle ( th )		6470224	0					
ANR	6470367	Callee	CloseHandle		6470224	0					
ANR	6470368	Identifier	CloseHandle		6470224	0					
ANR	6470369	ArgumentList	th		6470224	1					
ANR	6470370	Argument	th		6470224	0					
ANR	6470371	Identifier	th		6470224	0					
ANR	6470372	ReturnStatement	return te32 . th32ThreadID ;	169:3:6299:6323	6470224	3	True				
ANR	6470373	MemberAccess	te32 . th32ThreadID		6470224	0					
ANR	6470374	Identifier	te32		6470224	0					
ANR	6470375	Identifier	th32ThreadID		6470224	1					
ANR	6470376	Condition	"Thread32Next ( th , & te32 )"	171:10:6339:6362	6470224	1	True				
ANR	6470377	CallExpression	"Thread32Next ( th , & te32 )"		6470224	0					
ANR	6470378	Callee	Thread32Next		6470224	0					
ANR	6470379	Identifier	Thread32Next		6470224	0					
ANR	6470380	ArgumentList	th		6470224	1					
ANR	6470381	Argument	th		6470224	0					
ANR	6470382	Identifier	th		6470224	0					
ANR	6470383	Argument	& te32		6470224	1					
ANR	6470384	UnaryOperationExpression	& te32		6470224	0					
ANR	6470385	UnaryOperator	&		6470224	0					
ANR	6470386	Identifier	te32		6470224	1					
ANR	6470387	Label	err_load_th :	172:0:6366:6377	6470224	9	True				
ANR	6470388	Identifier	err_load_th		6470224	0					
ANR	6470389	ExpressionStatement	"eprintf ( ""Could not find an active thread for pid %d\\n"" , pid )"	173:1:6380:6441	6470224	10	True				
ANR	6470390	CallExpression	"eprintf ( ""Could not find an active thread for pid %d\\n"" , pid )"		6470224	0					
ANR	6470391	Callee	eprintf		6470224	0					
ANR	6470392	Identifier	eprintf		6470224	0					
ANR	6470393	ArgumentList	"""Could not find an active thread for pid %d\\n"""		6470224	1					
ANR	6470394	Argument	"""Could not find an active thread for pid %d\\n"""		6470224	0					
ANR	6470395	PrimaryExpression	"""Could not find an active thread for pid %d\\n"""		6470224	0					
ANR	6470396	Argument	pid		6470224	1					
ANR	6470397	Identifier	pid		6470224	0					
ANR	6470398	ExpressionStatement	CloseHandle ( th )	174:1:6444:6460	6470224	11	True				
ANR	6470399	CallExpression	CloseHandle ( th )		6470224	0					
ANR	6470400	Callee	CloseHandle		6470224	0					
ANR	6470401	Identifier	CloseHandle		6470224	0					
ANR	6470402	ArgumentList	th		6470224	1					
ANR	6470403	Argument	th		6470224	0					
ANR	6470404	Identifier	th		6470224	0					
ANR	6470405	ReturnStatement	return pid ;	175:1:6463:6473	6470224	12	True				
ANR	6470406	Identifier	pid		6470224	0					
ANR	6470407	ReturnType	int		6470224	1					
ANR	6470408	Identifier	w32_first_thread		6470224	2					
ANR	6470409	ParameterList	int pid		6470224	3					
ANR	6470410	Parameter	int pid	140:21:5565:5571	6470224	0	True				
ANR	6470411	ParameterType	int		6470224	0					
ANR	6470412	Identifier	pid		6470224	1					
ANR	6470413	CFGEntryNode	ENTRY		6470224		True				
ANR	6470414	CFGExitNode	EXIT		6470224		True				
ANR	6470415	Symbol	CreateToolhelp32Snapshot		6470224						
ANR	6470416	Symbol	te32		6470224						
ANR	6470417	Symbol	Thread32Next		6470224						
ANR	6470418	Symbol	pid		6470224						
ANR	6470419	Symbol	te32 . th32ThreadID		6470224						
ANR	6470420	Symbol	INVALID_HANDLE_VALUE		6470224						
ANR	6470421	Symbol	th		6470224						
ANR	6470422	Symbol	w32_OpenThread		6470224						
ANR	6470423	Symbol	te32 . dwSize		6470224						
ANR	6470424	Symbol	THREAD_ALL_ACCESS		6470224						
ANR	6470425	Symbol	TH32CS_SNAPTHREAD		6470224						
ANR	6470426	Symbol	te32 . th32OwnerProcessID		6470224						
ANR	6470427	Symbol	thid		6470224						
ANR	6470428	Symbol	& te32		6470224						
ANR	6470429	Symbol	Thread32First		6470224						
ANR	6470430	Function	get_w32_excep_name	178:0:6478:7006							
ANR	6470431	FunctionDef	get_w32_excep_name (unsigned long code)		6470430	0					
ANR	6470432	CompoundStatement		178:52:6530:7006	6470430	0					
ANR	6470433	IdentifierDeclStatement	char * desc ;	179:1:6533:6543	6470430	0	True				
ANR	6470434	IdentifierDecl	* desc		6470430	0					
ANR	6470435	IdentifierDeclType	char *		6470430	0					
ANR	6470436	Identifier	desc		6470430	1					
ANR	6470437	SwitchStatement	switch ( code )		6470430	1					
ANR	6470438	Condition	code	180:9:6554:6557	6470430	0	True				
ANR	6470439	Identifier	code		6470430	0					
ANR	6470440	CompoundStatement		3:15:29:29	6470430	1					
ANR	6470441	Label	case EXCEPTION_ACCESS_VIOLATION :	182:1:6587:6618	6470430	0	True				
ANR	6470442	Identifier	EXCEPTION_ACCESS_VIOLATION		6470430	0					
ANR	6470443	ExpressionStatement	"desc = ""access violation"""	183:2:6622:6647	6470430	1	True				
ANR	6470444	AssignmentExpression	"desc = ""access violation"""		6470430	0		=			
ANR	6470445	Identifier	desc		6470430	0					
ANR	6470446	PrimaryExpression	"""access violation"""		6470430	1					
ANR	6470447	BreakStatement	break ;	184:2:6651:6656	6470430	2	True				
ANR	6470448	Label	case EXCEPTION_ARRAY_BOUNDS_EXCEEDED :	185:1:6659:6695	6470430	3	True				
ANR	6470449	Identifier	EXCEPTION_ARRAY_BOUNDS_EXCEEDED		6470430	0					
ANR	6470450	ExpressionStatement	"desc = ""array bounds exceeded"""	186:2:6699:6729	6470430	4	True				
ANR	6470451	AssignmentExpression	"desc = ""array bounds exceeded"""		6470430	0		=			
ANR	6470452	Identifier	desc		6470430	0					
ANR	6470453	PrimaryExpression	"""array bounds exceeded"""		6470430	1					
ANR	6470454	BreakStatement	break ;	187:2:6733:6738	6470430	5	True				
ANR	6470455	Label	case EXCEPTION_ILLEGAL_INSTRUCTION :	188:1:6741:6775	6470430	6	True				
ANR	6470456	Identifier	EXCEPTION_ILLEGAL_INSTRUCTION		6470430	0					
ANR	6470457	ExpressionStatement	"desc = ""illegal instruction"""	189:2:6779:6807	6470430	7	True				
ANR	6470458	AssignmentExpression	"desc = ""illegal instruction"""		6470430	0		=			
ANR	6470459	Identifier	desc		6470430	0					
ANR	6470460	PrimaryExpression	"""illegal instruction"""		6470430	1					
ANR	6470461	BreakStatement	break ;	190:2:6811:6816	6470430	8	True				
ANR	6470462	Label	case EXCEPTION_INT_DIVIDE_BY_ZERO :	191:1:6819:6852	6470430	9	True				
ANR	6470463	Identifier	EXCEPTION_INT_DIVIDE_BY_ZERO		6470430	0					
ANR	6470464	ExpressionStatement	"desc = ""divide by zero"""	192:2:6856:6879	6470430	10	True				
ANR	6470465	AssignmentExpression	"desc = ""divide by zero"""		6470430	0		=			
ANR	6470466	Identifier	desc		6470430	0					
ANR	6470467	PrimaryExpression	"""divide by zero"""		6470430	1					
ANR	6470468	BreakStatement	break ;	193:2:6883:6888	6470430	11	True				
ANR	6470469	Label	case EXCEPTION_STACK_OVERFLOW :	194:1:6891:6920	6470430	12	True				
ANR	6470470	Identifier	EXCEPTION_STACK_OVERFLOW		6470430	0					
ANR	6470471	ExpressionStatement	"desc = ""stack overflow"""	195:2:6924:6947	6470430	13	True				
ANR	6470472	AssignmentExpression	"desc = ""stack overflow"""		6470430	0		=			
ANR	6470473	Identifier	desc		6470430	0					
ANR	6470474	PrimaryExpression	"""stack overflow"""		6470430	1					
ANR	6470475	BreakStatement	break ;	196:2:6951:6956	6470430	14	True				
ANR	6470476	Label	default :	197:1:6959:6966	6470430	15	True				
ANR	6470477	Identifier	default		6470430	0					
ANR	6470478	ExpressionStatement	"desc = ""unknown"""	198:2:6970:6986	6470430	16	True				
ANR	6470479	AssignmentExpression	"desc = ""unknown"""		6470430	0		=			
ANR	6470480	Identifier	desc		6470430	0					
ANR	6470481	PrimaryExpression	"""unknown"""		6470430	1					
ANR	6470482	ReturnStatement	return desc ;	201:1:6993:7004	6470430	2	True				
ANR	6470483	Identifier	desc		6470430	0					
ANR	6470484	ReturnType	static char *		6470430	1					
ANR	6470485	Identifier	get_w32_excep_name		6470430	2					
ANR	6470486	ParameterList	unsigned long code		6470430	3					
ANR	6470487	Parameter	unsigned long code	178:32:6510:6527	6470430	0	True				
ANR	6470488	ParameterType	unsigned long		6470430	0					
ANR	6470489	Identifier	code		6470430	1					
ANR	6470490	CFGEntryNode	ENTRY		6470430		True				
ANR	6470491	CFGExitNode	EXIT		6470430		True				
ANR	6470492	Symbol	code		6470430						
ANR	6470493	Symbol	desc		6470430						
ANR	6470494	Function	debug_exception_event	204:0:7009:7805							
ANR	6470495	FunctionDef	debug_exception_event (DEBUG_EVENT * de)		6470494	0					
ANR	6470496	CompoundStatement		204:51:7060:7805	6470494	0					
ANR	6470497	IdentifierDeclStatement	unsigned long code = de -> u . Exception . ExceptionRecord . ExceptionCode ;	205:1:7063:7129	6470494	0	True				
ANR	6470498	IdentifierDecl	code = de -> u . Exception . ExceptionRecord . ExceptionCode		6470494	0					
ANR	6470499	IdentifierDeclType	unsigned long		6470494	0					
ANR	6470500	Identifier	code		6470494	1					
ANR	6470501	AssignmentExpression	code = de -> u . Exception . ExceptionRecord . ExceptionCode		6470494	2		=			
ANR	6470502	Identifier	code		6470494	0					
ANR	6470503	MemberAccess	de -> u . Exception . ExceptionRecord . ExceptionCode		6470494	1					
ANR	6470504	MemberAccess	de -> u . Exception . ExceptionRecord		6470494	0					
ANR	6470505	MemberAccess	de -> u . Exception		6470494	0					
ANR	6470506	PtrMemberAccess	de -> u		6470494	0					
ANR	6470507	Identifier	de		6470494	0					
ANR	6470508	Identifier	u		6470494	1					
ANR	6470509	Identifier	Exception		6470494	1					
ANR	6470510	Identifier	ExceptionRecord		6470494	1					
ANR	6470511	Identifier	ExceptionCode		6470494	1					
ANR	6470512	SwitchStatement	switch ( code )		6470494	1					
ANR	6470513	Condition	code	206:9:7140:7143	6470494	0	True				
ANR	6470514	Identifier	code		6470494	0					
ANR	6470515	CompoundStatement		3:15:85:85	6470494	1					
ANR	6470516	Label	case EXCEPTION_ACCESS_VIOLATION :	208:1:7173:7204	6470494	0	True				
ANR	6470517	Identifier	EXCEPTION_ACCESS_VIOLATION		6470494	0					
ANR	6470518	Label	case EXCEPTION_ARRAY_BOUNDS_EXCEEDED :	209:1:7207:7243	6470494	1	True				
ANR	6470519	Identifier	EXCEPTION_ARRAY_BOUNDS_EXCEEDED		6470494	0					
ANR	6470520	Label	case EXCEPTION_ILLEGAL_INSTRUCTION :	210:1:7246:7280	6470494	2	True				
ANR	6470521	Identifier	EXCEPTION_ILLEGAL_INSTRUCTION		6470494	0					
ANR	6470522	Label	case EXCEPTION_INT_DIVIDE_BY_ZERO :	211:1:7283:7316	6470494	3	True				
ANR	6470523	Identifier	EXCEPTION_INT_DIVIDE_BY_ZERO		6470494	0					
ANR	6470524	Label	case EXCEPTION_STACK_OVERFLOW :	212:1:7319:7348	6470494	4	True				
ANR	6470525	Identifier	EXCEPTION_STACK_OVERFLOW		6470494	0					
ANR	6470526	ExpressionStatement	"eprintf ( ""(%d) Fatal exception (%s) in thread %d\\n"" , ( int ) de -> dwProcessId , get_w32_excep_name ( code ) , ( int ) de -> dwThreadId )"	213:2:7352:7482	6470494	5	True				
ANR	6470527	CallExpression	"eprintf ( ""(%d) Fatal exception (%s) in thread %d\\n"" , ( int ) de -> dwProcessId , get_w32_excep_name ( code ) , ( int ) de -> dwThreadId )"		6470494	0					
ANR	6470528	Callee	eprintf		6470494	0					
ANR	6470529	Identifier	eprintf		6470494	0					
ANR	6470530	ArgumentList	"""(%d) Fatal exception (%s) in thread %d\\n"""		6470494	1					
ANR	6470531	Argument	"""(%d) Fatal exception (%s) in thread %d\\n"""		6470494	0					
ANR	6470532	PrimaryExpression	"""(%d) Fatal exception (%s) in thread %d\\n"""		6470494	0					
ANR	6470533	Argument	( int ) de -> dwProcessId		6470494	1					
ANR	6470534	CastExpression	( int ) de -> dwProcessId		6470494	0					
ANR	6470535	CastTarget	int		6470494	0					
ANR	6470536	PtrMemberAccess	de -> dwProcessId		6470494	1					
ANR	6470537	Identifier	de		6470494	0					
ANR	6470538	Identifier	dwProcessId		6470494	1					
ANR	6470539	Argument	get_w32_excep_name ( code )		6470494	2					
ANR	6470540	CallExpression	get_w32_excep_name ( code )		6470494	0					
ANR	6470541	Callee	get_w32_excep_name		6470494	0					
ANR	6470542	Identifier	get_w32_excep_name		6470494	0					
ANR	6470543	ArgumentList	code		6470494	1					
ANR	6470544	Argument	code		6470494	0					
ANR	6470545	Identifier	code		6470494	0					
ANR	6470546	Argument	( int ) de -> dwThreadId		6470494	3					
ANR	6470547	CastExpression	( int ) de -> dwThreadId		6470494	0					
ANR	6470548	CastTarget	int		6470494	0					
ANR	6470549	PtrMemberAccess	de -> dwThreadId		6470494	1					
ANR	6470550	Identifier	de		6470494	0					
ANR	6470551	Identifier	dwThreadId		6470494	1					
ANR	6470552	BreakStatement	break ;	217:2:7486:7491	6470494	6	True				
ANR	6470553	Label	case 0x406D1388 :	219:1:7517:7532	6470494	7	True				
ANR	6470554	ExpressionStatement	"eprintf ( ""(%d) MS_VC_EXCEPTION (%x) in thread %d\\n"" , ( int ) de -> dwProcessId , ( int ) code , ( int ) de -> dwThreadId )"	220:2:7536:7645	6470494	8	True				
ANR	6470555	CallExpression	"eprintf ( ""(%d) MS_VC_EXCEPTION (%x) in thread %d\\n"" , ( int ) de -> dwProcessId , ( int ) code , ( int ) de -> dwThreadId )"		6470494	0					
ANR	6470556	Callee	eprintf		6470494	0					
ANR	6470557	Identifier	eprintf		6470494	0					
ANR	6470558	ArgumentList	"""(%d) MS_VC_EXCEPTION (%x) in thread %d\\n"""		6470494	1					
ANR	6470559	Argument	"""(%d) MS_VC_EXCEPTION (%x) in thread %d\\n"""		6470494	0					
ANR	6470560	PrimaryExpression	"""(%d) MS_VC_EXCEPTION (%x) in thread %d\\n"""		6470494	0					
ANR	6470561	Argument	( int ) de -> dwProcessId		6470494	1					
ANR	6470562	CastExpression	( int ) de -> dwProcessId		6470494	0					
ANR	6470563	CastTarget	int		6470494	0					
ANR	6470564	PtrMemberAccess	de -> dwProcessId		6470494	1					
ANR	6470565	Identifier	de		6470494	0					
ANR	6470566	Identifier	dwProcessId		6470494	1					
ANR	6470567	Argument	( int ) code		6470494	2					
ANR	6470568	CastExpression	( int ) code		6470494	0					
ANR	6470569	CastTarget	int		6470494	0					
ANR	6470570	Identifier	code		6470494	1					
ANR	6470571	Argument	( int ) de -> dwThreadId		6470494	3					
ANR	6470572	CastExpression	( int ) de -> dwThreadId		6470494	0					
ANR	6470573	CastTarget	int		6470494	0					
ANR	6470574	PtrMemberAccess	de -> dwThreadId		6470494	1					
ANR	6470575	Identifier	de		6470494	0					
ANR	6470576	Identifier	dwThreadId		6470494	1					
ANR	6470577	ReturnStatement	return 1 ;	222:2:7649:7657	6470494	9	True				
ANR	6470578	PrimaryExpression	1		6470494	0					
ANR	6470579	Label	default :	223:1:7660:7667	6470494	10	True				
ANR	6470580	Identifier	default		6470494	0					
ANR	6470581	ExpressionStatement	"eprintf ( ""(%d) Unknown exception %x in thread %d\\n"" , ( int ) de -> dwProcessId , ( int ) code , ( int ) de -> dwThreadId )"	224:2:7671:7780	6470494	11	True				
ANR	6470582	CallExpression	"eprintf ( ""(%d) Unknown exception %x in thread %d\\n"" , ( int ) de -> dwProcessId , ( int ) code , ( int ) de -> dwThreadId )"		6470494	0					
ANR	6470583	Callee	eprintf		6470494	0					
ANR	6470584	Identifier	eprintf		6470494	0					
ANR	6470585	ArgumentList	"""(%d) Unknown exception %x in thread %d\\n"""		6470494	1					
ANR	6470586	Argument	"""(%d) Unknown exception %x in thread %d\\n"""		6470494	0					
ANR	6470587	PrimaryExpression	"""(%d) Unknown exception %x in thread %d\\n"""		6470494	0					
ANR	6470588	Argument	( int ) de -> dwProcessId		6470494	1					
ANR	6470589	CastExpression	( int ) de -> dwProcessId		6470494	0					
ANR	6470590	CastTarget	int		6470494	0					
ANR	6470591	PtrMemberAccess	de -> dwProcessId		6470494	1					
ANR	6470592	Identifier	de		6470494	0					
ANR	6470593	Identifier	dwProcessId		6470494	1					
ANR	6470594	Argument	( int ) code		6470494	2					
ANR	6470595	CastExpression	( int ) code		6470494	0					
ANR	6470596	CastTarget	int		6470494	0					
ANR	6470597	Identifier	code		6470494	1					
ANR	6470598	Argument	( int ) de -> dwThreadId		6470494	3					
ANR	6470599	CastExpression	( int ) de -> dwThreadId		6470494	0					
ANR	6470600	CastTarget	int		6470494	0					
ANR	6470601	PtrMemberAccess	de -> dwThreadId		6470494	1					
ANR	6470602	Identifier	de		6470494	0					
ANR	6470603	Identifier	dwThreadId		6470494	1					
ANR	6470604	BreakStatement	break ;	226:2:7784:7789	6470494	12	True				
ANR	6470605	ReturnStatement	return 0 ;	228:1:7795:7803	6470494	2	True				
ANR	6470606	PrimaryExpression	0		6470494	0					
ANR	6470607	ReturnType	static int		6470494	1					
ANR	6470608	Identifier	debug_exception_event		6470494	2					
ANR	6470609	ParameterList	DEBUG_EVENT * de		6470494	3					
ANR	6470610	Parameter	DEBUG_EVENT * de	204:34:7043:7057	6470494	0	True				
ANR	6470611	ParameterType	DEBUG_EVENT *		6470494	0					
ANR	6470612	Identifier	de		6470494	1					
ANR	6470613	CFGEntryNode	ENTRY		6470494		True				
ANR	6470614	CFGExitNode	EXIT		6470494		True				
ANR	6470615	Symbol	de		6470494						
ANR	6470616	Symbol	de -> dwThreadId		6470494						
ANR	6470617	Symbol	get_w32_excep_name		6470494						
ANR	6470618	Symbol	code		6470494						
ANR	6470619	Symbol	de -> u . Exception . ExceptionRecord		6470494						
ANR	6470620	Symbol	* de		6470494						
ANR	6470621	Symbol	de -> u . Exception		6470494						
ANR	6470622	Symbol	de -> u		6470494						
ANR	6470623	Symbol	de -> u . Exception . ExceptionRecord . ExceptionCode		6470494						
ANR	6470624	Symbol	de -> dwProcessId		6470494						
ANR	6470625	Function	get_file_name_from_handle	231:0:7808:9716							
ANR	6470626	FunctionDef	get_file_name_from_handle (HANDLE handle_file)		6470625	0					
ANR	6470627	CompoundStatement		231:60:7868:9716	6470625	0					
ANR	6470628	IdentifierDeclStatement	HANDLE handle_file_map = NULL ;	232:1:7871:7900	6470625	0	True				
ANR	6470629	IdentifierDecl	handle_file_map = NULL		6470625	0					
ANR	6470630	IdentifierDeclType	HANDLE		6470625	0					
ANR	6470631	Identifier	handle_file_map		6470625	1					
ANR	6470632	AssignmentExpression	handle_file_map = NULL		6470625	2		=			
ANR	6470633	Identifier	NULL		6470625	0					
ANR	6470634	Identifier	NULL		6470625	1					
ANR	6470635	IdentifierDeclStatement	LPTSTR filename = NULL ;	233:1:7903:7925	6470625	1	True				
ANR	6470636	IdentifierDecl	filename = NULL		6470625	0					
ANR	6470637	IdentifierDeclType	LPTSTR		6470625	0					
ANR	6470638	Identifier	filename		6470625	1					
ANR	6470639	AssignmentExpression	filename = NULL		6470625	2		=			
ANR	6470640	Identifier	NULL		6470625	0					
ANR	6470641	Identifier	NULL		6470625	1					
ANR	6470642	IdentifierDeclStatement	DWORD file_size_high = 0 ;	234:1:7928:7952	6470625	2	True				
ANR	6470643	IdentifierDecl	file_size_high = 0		6470625	0					
ANR	6470644	IdentifierDeclType	DWORD		6470625	0					
ANR	6470645	Identifier	file_size_high		6470625	1					
ANR	6470646	AssignmentExpression	file_size_high = 0		6470625	2		=			
ANR	6470647	Identifier	file_size_high		6470625	0					
ANR	6470648	PrimaryExpression	0		6470625	1					
ANR	6470649	IdentifierDeclStatement	LPVOID map = NULL ;	235:1:7955:7972	6470625	3	True				
ANR	6470650	IdentifierDecl	map = NULL		6470625	0					
ANR	6470651	IdentifierDeclType	LPVOID		6470625	0					
ANR	6470652	Identifier	map		6470625	1					
ANR	6470653	AssignmentExpression	map = NULL		6470625	2		=			
ANR	6470654	Identifier	NULL		6470625	0					
ANR	6470655	Identifier	NULL		6470625	1					
ANR	6470656	IdentifierDeclStatement	"DWORD file_size_low = GetFileSize ( handle_file , & file_size_high ) ;"	236:1:7975:8039	6470625	4	True				
ANR	6470657	IdentifierDecl	"file_size_low = GetFileSize ( handle_file , & file_size_high )"		6470625	0					
ANR	6470658	IdentifierDeclType	DWORD		6470625	0					
ANR	6470659	Identifier	file_size_low		6470625	1					
ANR	6470660	AssignmentExpression	"file_size_low = GetFileSize ( handle_file , & file_size_high )"		6470625	2		=			
ANR	6470661	Identifier	file_size_low		6470625	0					
ANR	6470662	CallExpression	"GetFileSize ( handle_file , & file_size_high )"		6470625	1					
ANR	6470663	Callee	GetFileSize		6470625	0					
ANR	6470664	Identifier	GetFileSize		6470625	0					
ANR	6470665	ArgumentList	handle_file		6470625	1					
ANR	6470666	Argument	handle_file		6470625	0					
ANR	6470667	Identifier	handle_file		6470625	0					
ANR	6470668	Argument	& file_size_high		6470625	1					
ANR	6470669	UnaryOperationExpression	& file_size_high		6470625	0					
ANR	6470670	UnaryOperator	&		6470625	0					
ANR	6470671	Identifier	file_size_high		6470625	1					
ANR	6470672	IfStatement	if ( file_size_low == 0 && file_size_high == 0 )		6470625	5					
ANR	6470673	Condition	file_size_low == 0 && file_size_high == 0	238:5:8047:8087	6470625	0	True				
ANR	6470674	AndExpression	file_size_low == 0 && file_size_high == 0		6470625	0		&&			
ANR	6470675	EqualityExpression	file_size_low == 0		6470625	0		==			
ANR	6470676	Identifier	file_size_low		6470625	0					
ANR	6470677	PrimaryExpression	0		6470625	1					
ANR	6470678	EqualityExpression	file_size_high == 0		6470625	1		==			
ANR	6470679	Identifier	file_size_high		6470625	0					
ANR	6470680	PrimaryExpression	0		6470625	1					
ANR	6470681	CompoundStatement		8:48:221:221	6470625	1					
ANR	6470682	ReturnStatement	return NULL ;	239:2:8094:8105	6470625	0	True				
ANR	6470683	Identifier	NULL		6470625	0					
ANR	6470684	ExpressionStatement	"handle_file_map = CreateFileMapping ( handle_file , NULL , PAGE_READONLY , 0 , 1 , NULL )"	241:1:8111:8193	6470625	6	True				
ANR	6470685	AssignmentExpression	"handle_file_map = CreateFileMapping ( handle_file , NULL , PAGE_READONLY , 0 , 1 , NULL )"		6470625	0		=			
ANR	6470686	Identifier	handle_file_map		6470625	0					
ANR	6470687	CallExpression	"CreateFileMapping ( handle_file , NULL , PAGE_READONLY , 0 , 1 , NULL )"		6470625	1					
ANR	6470688	Callee	CreateFileMapping		6470625	0					
ANR	6470689	Identifier	CreateFileMapping		6470625	0					
ANR	6470690	ArgumentList	handle_file		6470625	1					
ANR	6470691	Argument	handle_file		6470625	0					
ANR	6470692	Identifier	handle_file		6470625	0					
ANR	6470693	Argument	NULL		6470625	1					
ANR	6470694	Identifier	NULL		6470625	0					
ANR	6470695	Argument	PAGE_READONLY		6470625	2					
ANR	6470696	Identifier	PAGE_READONLY		6470625	0					
ANR	6470697	Argument	0		6470625	3					
ANR	6470698	PrimaryExpression	0		6470625	0					
ANR	6470699	Argument	1		6470625	4					
ANR	6470700	PrimaryExpression	1		6470625	0					
ANR	6470701	Argument	NULL		6470625	5					
ANR	6470702	Identifier	NULL		6470625	0					
ANR	6470703	IfStatement	if ( ! handle_file_map )		6470625	7					
ANR	6470704	Condition	! handle_file_map	242:5:8200:8215	6470625	0	True				
ANR	6470705	UnaryOperationExpression	! handle_file_map		6470625	0					
ANR	6470706	UnaryOperator	!		6470625	0					
ANR	6470707	Identifier	handle_file_map		6470625	1					
ANR	6470708	CompoundStatement		12:23:349:349	6470625	1					
ANR	6470709	GotoStatement	goto err_get_file_name_from_handle ;	243:2:8222:8256	6470625	0	True				
ANR	6470710	Identifier	err_get_file_name_from_handle		6470625	0					
ANR	6470711	ExpressionStatement	filename = malloc ( ( MAX_PATH + 1 ) * sizeof ( TCHAR ) )	245:1:8262:8313	6470625	8	True				
ANR	6470712	AssignmentExpression	filename = malloc ( ( MAX_PATH + 1 ) * sizeof ( TCHAR ) )		6470625	0		=			
ANR	6470713	Identifier	filename		6470625	0					
ANR	6470714	CallExpression	malloc ( ( MAX_PATH + 1 ) * sizeof ( TCHAR ) )		6470625	1					
ANR	6470715	Callee	malloc		6470625	0					
ANR	6470716	Identifier	malloc		6470625	0					
ANR	6470717	ArgumentList	( MAX_PATH + 1 ) * sizeof ( TCHAR )		6470625	1					
ANR	6470718	Argument	( MAX_PATH + 1 ) * sizeof ( TCHAR )		6470625	0					
ANR	6470719	MultiplicativeExpression	( MAX_PATH + 1 ) * sizeof ( TCHAR )		6470625	0		*			
ANR	6470720	AdditiveExpression	MAX_PATH + 1		6470625	0		+			
ANR	6470721	Identifier	MAX_PATH		6470625	0					
ANR	6470722	PrimaryExpression	1		6470625	1					
ANR	6470723	SizeofExpression	sizeof ( TCHAR )		6470625	1					
ANR	6470724	Sizeof	sizeof		6470625	0					
ANR	6470725	SizeofOperand	TCHAR		6470625	1					
ANR	6470726	IfStatement	if ( ! filename )		6470625	9					
ANR	6470727	Condition	! filename	246:5:8320:8328	6470625	0	True				
ANR	6470728	UnaryOperationExpression	! filename		6470625	0					
ANR	6470729	UnaryOperator	!		6470625	0					
ANR	6470730	Identifier	filename		6470625	1					
ANR	6470731	CompoundStatement		16:16:462:462	6470625	1					
ANR	6470732	GotoStatement	goto err_get_file_name_from_handle ;	247:2:8335:8369	6470625	0	True				
ANR	6470733	Identifier	err_get_file_name_from_handle		6470625	0					
ANR	6470734	ExpressionStatement	"map = MapViewOfFile ( handle_file_map , FILE_MAP_READ , 0 , 0 , 1 )"	250:1:8426:8487	6470625	10	True				
ANR	6470735	AssignmentExpression	"map = MapViewOfFile ( handle_file_map , FILE_MAP_READ , 0 , 0 , 1 )"		6470625	0		=			
ANR	6470736	Identifier	map		6470625	0					
ANR	6470737	CallExpression	"MapViewOfFile ( handle_file_map , FILE_MAP_READ , 0 , 0 , 1 )"		6470625	1					
ANR	6470738	Callee	MapViewOfFile		6470625	0					
ANR	6470739	Identifier	MapViewOfFile		6470625	0					
ANR	6470740	ArgumentList	handle_file_map		6470625	1					
ANR	6470741	Argument	handle_file_map		6470625	0					
ANR	6470742	Identifier	handle_file_map		6470625	0					
ANR	6470743	Argument	FILE_MAP_READ		6470625	1					
ANR	6470744	Identifier	FILE_MAP_READ		6470625	0					
ANR	6470745	Argument	0		6470625	2					
ANR	6470746	PrimaryExpression	0		6470625	0					
ANR	6470747	Argument	0		6470625	3					
ANR	6470748	PrimaryExpression	0		6470625	0					
ANR	6470749	Argument	1		6470625	4					
ANR	6470750	PrimaryExpression	1		6470625	0					
ANR	6470751	IfStatement	"if ( ! map || ! w32_GetMappedFileName ( GetCurrentProcess ( ) , map , filename , MAX_PATH ) )"		6470625	11					
ANR	6470752	Condition	"! map || ! w32_GetMappedFileName ( GetCurrentProcess ( ) , map , filename , MAX_PATH )"	251:5:8494:8571	6470625	0	True				
ANR	6470753	OrExpression	"! map || ! w32_GetMappedFileName ( GetCurrentProcess ( ) , map , filename , MAX_PATH )"		6470625	0		||			
ANR	6470754	UnaryOperationExpression	! map		6470625	0					
ANR	6470755	UnaryOperator	!		6470625	0					
ANR	6470756	Identifier	map		6470625	1					
ANR	6470757	UnaryOperationExpression	"! w32_GetMappedFileName ( GetCurrentProcess ( ) , map , filename , MAX_PATH )"		6470625	1					
ANR	6470758	UnaryOperator	!		6470625	0					
ANR	6470759	CallExpression	"w32_GetMappedFileName ( GetCurrentProcess ( ) , map , filename , MAX_PATH )"		6470625	1					
ANR	6470760	Callee	w32_GetMappedFileName		6470625	0					
ANR	6470761	Identifier	w32_GetMappedFileName		6470625	0					
ANR	6470762	ArgumentList	GetCurrentProcess ( )		6470625	1					
ANR	6470763	Argument	GetCurrentProcess ( )		6470625	0					
ANR	6470764	CallExpression	GetCurrentProcess ( )		6470625	0					
ANR	6470765	Callee	GetCurrentProcess		6470625	0					
ANR	6470766	Identifier	GetCurrentProcess		6470625	0					
ANR	6470767	ArgumentList			6470625	1					
ANR	6470768	Argument	map		6470625	1					
ANR	6470769	Identifier	map		6470625	0					
ANR	6470770	Argument	filename		6470625	2					
ANR	6470771	Identifier	filename		6470625	0					
ANR	6470772	Argument	MAX_PATH		6470625	3					
ANR	6470773	Identifier	MAX_PATH		6470625	0					
ANR	6470774	CompoundStatement		21:85:705:705	6470625	1					
ANR	6470775	GotoStatement	goto err_get_file_name_from_handle ;	252:2:8578:8612	6470625	0	True				
ANR	6470776	Identifier	err_get_file_name_from_handle		6470625	0					
ANR	6470777	IdentifierDeclStatement	TCHAR temp_buffer [ 512 ] ;	254:1:8618:8640	6470625	12	True				
ANR	6470778	IdentifierDecl	temp_buffer [ 512 ]		6470625	0					
ANR	6470779	IdentifierDeclType	TCHAR [ 512 ]		6470625	0					
ANR	6470780	Identifier	temp_buffer		6470625	1					
ANR	6470781	PrimaryExpression	512		6470625	2					
ANR	6470782	IfStatement	"if ( ! GetLogicalDriveStrings ( sizeof ( temp_buffer ) - 1 , temp_buffer ) )"		6470625	13					
ANR	6470783	Condition	"! GetLogicalDriveStrings ( sizeof ( temp_buffer ) - 1 , temp_buffer )"	256:5:8704:8766	6470625	0	True				
ANR	6470784	UnaryOperationExpression	"! GetLogicalDriveStrings ( sizeof ( temp_buffer ) - 1 , temp_buffer )"		6470625	0					
ANR	6470785	UnaryOperator	!		6470625	0					
ANR	6470786	CallExpression	"GetLogicalDriveStrings ( sizeof ( temp_buffer ) - 1 , temp_buffer )"		6470625	1					
ANR	6470787	Callee	GetLogicalDriveStrings		6470625	0					
ANR	6470788	Identifier	GetLogicalDriveStrings		6470625	0					
ANR	6470789	ArgumentList	sizeof ( temp_buffer ) - 1		6470625	1					
ANR	6470790	Argument	sizeof ( temp_buffer ) - 1		6470625	0					
ANR	6470791	AdditiveExpression	sizeof ( temp_buffer ) - 1		6470625	0		-			
ANR	6470792	SizeofExpression	sizeof ( temp_buffer )		6470625	0					
ANR	6470793	Sizeof	sizeof		6470625	0					
ANR	6470794	SizeofOperand	temp_buffer		6470625	1					
ANR	6470795	PrimaryExpression	1		6470625	1					
ANR	6470796	Argument	temp_buffer		6470625	1					
ANR	6470797	Identifier	temp_buffer		6470625	0					
ANR	6470798	CompoundStatement		26:70:900:900	6470625	1					
ANR	6470799	GotoStatement	goto err_get_file_name_from_handle ;	257:2:8773:8807	6470625	0	True				
ANR	6470800	Identifier	err_get_file_name_from_handle		6470625	0					
ANR	6470801	IdentifierDeclStatement	TCHAR name [ MAX_PATH ] ;	259:1:8813:8833	6470625	14	True				
ANR	6470802	IdentifierDecl	name [ MAX_PATH ]		6470625	0					
ANR	6470803	IdentifierDeclType	TCHAR [ MAX_PATH ]		6470625	0					
ANR	6470804	Identifier	name		6470625	1					
ANR	6470805	Identifier	MAX_PATH		6470625	2					
ANR	6470806	IdentifierDeclStatement	"TCHAR drive [ 3 ] = TEXT ( "" :"" ) ;"	260:1:8836:8865	6470625	15	True				
ANR	6470807	IdentifierDecl	"drive [ 3 ] = TEXT ( "" :"" )"		6470625	0					
ANR	6470808	IdentifierDeclType	TCHAR [ 3 ]		6470625	0					
ANR	6470809	Identifier	drive		6470625	1					
ANR	6470810	PrimaryExpression	3		6470625	2					
ANR	6470811	AssignmentExpression	"drive [ 3 ] = TEXT ( "" :"" )"		6470625	3		=			
ANR	6470812	Identifier	drive		6470625	0					
ANR	6470813	CallExpression	"TEXT ( "" :"" )"		6470625	1					
ANR	6470814	Callee	TEXT		6470625	0					
ANR	6470815	Identifier	TEXT		6470625	0					
ANR	6470816	ArgumentList	""" :"""		6470625	1					
ANR	6470817	Argument	""" :"""		6470625	0					
ANR	6470818	PrimaryExpression	""" :"""		6470625	0					
ANR	6470819	IdentifierDeclStatement	LPTSTR cur_drive = temp_buffer ;	261:1:8868:8898	6470625	16	True				
ANR	6470820	IdentifierDecl	cur_drive = temp_buffer		6470625	0					
ANR	6470821	IdentifierDeclType	LPTSTR		6470625	0					
ANR	6470822	Identifier	cur_drive		6470625	1					
ANR	6470823	AssignmentExpression	cur_drive = temp_buffer		6470625	2		=			
ANR	6470824	Identifier	temp_buffer		6470625	0					
ANR	6470825	Identifier	temp_buffer		6470625	1					
ANR	6470826	WhileStatement	while ( * cur_drive )		6470625	17					
ANR	6470827	Condition	* cur_drive	262:8:8908:8917	6470625	0	True				
ANR	6470828	UnaryOperationExpression	* cur_drive		6470625	0					
ANR	6470829	UnaryOperator	*		6470625	0					
ANR	6470830	Identifier	cur_drive		6470625	1					
ANR	6470831	CompoundStatement		32:20:1051:1051	6470625	1					
ANR	6470832	ExpressionStatement	* drive = * cur_drive	264:2:8957:8976	6470625	0	True				
ANR	6470833	AssignmentExpression	* drive = * cur_drive		6470625	0		=			
ANR	6470834	UnaryOperationExpression	* drive		6470625	0					
ANR	6470835	UnaryOperator	*		6470625	0					
ANR	6470836	Identifier	drive		6470625	1					
ANR	6470837	UnaryOperationExpression	* cur_drive		6470625	1					
ANR	6470838	UnaryOperator	*		6470625	0					
ANR	6470839	Identifier	cur_drive		6470625	1					
ANR	6470840	IfStatement	"if ( QueryDosDevice ( drive , name , MAX_PATH ) )"		6470625	1					
ANR	6470841	Condition	"QueryDosDevice ( drive , name , MAX_PATH )"	265:6:8984:9021	6470625	0	True				
ANR	6470842	CallExpression	"QueryDosDevice ( drive , name , MAX_PATH )"		6470625	0					
ANR	6470843	Callee	QueryDosDevice		6470625	0					
ANR	6470844	Identifier	QueryDosDevice		6470625	0					
ANR	6470845	ArgumentList	drive		6470625	1					
ANR	6470846	Argument	drive		6470625	0					
ANR	6470847	Identifier	drive		6470625	0					
ANR	6470848	Argument	name		6470625	1					
ANR	6470849	Identifier	name		6470625	0					
ANR	6470850	Argument	MAX_PATH		6470625	2					
ANR	6470851	Identifier	MAX_PATH		6470625	0					
ANR	6470852	CompoundStatement		36:3:1160:1195	6470625	1					
ANR	6470853	IdentifierDeclStatement	size_t name_length = _tcslen ( name ) ;	266:3:9029:9064	6470625	0	True				
ANR	6470854	IdentifierDecl	name_length = _tcslen ( name )		6470625	0					
ANR	6470855	IdentifierDeclType	size_t		6470625	0					
ANR	6470856	Identifier	name_length		6470625	1					
ANR	6470857	AssignmentExpression	name_length = _tcslen ( name )		6470625	2		=			
ANR	6470858	Identifier	name_length		6470625	0					
ANR	6470859	CallExpression	_tcslen ( name )		6470625	1					
ANR	6470860	Callee	_tcslen		6470625	0					
ANR	6470861	Identifier	_tcslen		6470625	0					
ANR	6470862	ArgumentList	name		6470625	1					
ANR	6470863	Argument	name		6470625	0					
ANR	6470864	Identifier	name		6470625	0					
ANR	6470865	IfStatement	if ( name_length < MAX_PATH )		6470625	1					
ANR	6470866	Condition	name_length < MAX_PATH	268:7:9074:9095	6470625	0	True				
ANR	6470867	RelationalExpression	name_length < MAX_PATH		6470625	0		<			
ANR	6470868	Identifier	name_length		6470625	0					
ANR	6470869	Identifier	MAX_PATH		6470625	1					
ANR	6470870	CompoundStatement		38:31:1229:1229	6470625	1					
ANR	6470871	IfStatement	"if ( _tcsnicmp ( filename , name , name_length ) == 0 && * ( filename + name_length ) == TEXT ( '\\\\' ) )"		6470625	0					
ANR	6470872	Condition	"_tcsnicmp ( filename , name , name_length ) == 0 && * ( filename + name_length ) == TEXT ( '\\\\' )"	269:8:9108:9200	6470625	0	True				
ANR	6470873	AndExpression	"_tcsnicmp ( filename , name , name_length ) == 0 && * ( filename + name_length ) == TEXT ( '\\\\' )"		6470625	0		&&			
ANR	6470874	EqualityExpression	"_tcsnicmp ( filename , name , name_length ) == 0"		6470625	0		==			
ANR	6470875	CallExpression	"_tcsnicmp ( filename , name , name_length )"		6470625	0					
ANR	6470876	Callee	_tcsnicmp		6470625	0					
ANR	6470877	Identifier	_tcsnicmp		6470625	0					
ANR	6470878	ArgumentList	filename		6470625	1					
ANR	6470879	Argument	filename		6470625	0					
ANR	6470880	Identifier	filename		6470625	0					
ANR	6470881	Argument	name		6470625	1					
ANR	6470882	Identifier	name		6470625	0					
ANR	6470883	Argument	name_length		6470625	2					
ANR	6470884	Identifier	name_length		6470625	0					
ANR	6470885	PrimaryExpression	0		6470625	1					
ANR	6470886	EqualityExpression	* ( filename + name_length ) == TEXT ( '\\\\' )		6470625	1		==			
ANR	6470887	UnaryOperationExpression	* ( filename + name_length )		6470625	0					
ANR	6470888	UnaryOperator	*		6470625	0					
ANR	6470889	AdditiveExpression	filename + name_length		6470625	1		+			
ANR	6470890	Identifier	filename		6470625	0					
ANR	6470891	Identifier	name_length		6470625	1					
ANR	6470892	CallExpression	TEXT ( '\\\\' )		6470625	1					
ANR	6470893	Callee	TEXT		6470625	0					
ANR	6470894	Identifier	TEXT		6470625	0					
ANR	6470895	ArgumentList	'\\\\'		6470625	1					
ANR	6470896	Argument	'\\\\'		6470625	0					
ANR	6470897	PrimaryExpression	'\\\\'		6470625	0					
ANR	6470898	CompoundStatement		41:5:1341:1370	6470625	1					
ANR	6470899	IdentifierDeclStatement	TCHAR temp_filename [ MAX_PATH ] ;	271:5:9210:9239	6470625	0	True				
ANR	6470900	IdentifierDecl	temp_filename [ MAX_PATH ]		6470625	0					
ANR	6470901	IdentifierDeclType	TCHAR [ MAX_PATH ]		6470625	0					
ANR	6470902	Identifier	temp_filename		6470625	1					
ANR	6470903	Identifier	MAX_PATH		6470625	2					
ANR	6470904	ExpressionStatement	"_sntprintf ( temp_filename , MAX_PATH , TEXT ( ""%s%s"" ) , drive , filename + name_length )"	272:5:9246:9334	6470625	1	True				
ANR	6470905	CallExpression	"_sntprintf ( temp_filename , MAX_PATH , TEXT ( ""%s%s"" ) , drive , filename + name_length )"		6470625	0					
ANR	6470906	Callee	_sntprintf		6470625	0					
ANR	6470907	Identifier	_sntprintf		6470625	0					
ANR	6470908	ArgumentList	temp_filename		6470625	1					
ANR	6470909	Argument	temp_filename		6470625	0					
ANR	6470910	Identifier	temp_filename		6470625	0					
ANR	6470911	Argument	MAX_PATH		6470625	1					
ANR	6470912	Identifier	MAX_PATH		6470625	0					
ANR	6470913	Argument	"TEXT ( ""%s%s"" )"		6470625	2					
ANR	6470914	CallExpression	"TEXT ( ""%s%s"" )"		6470625	0					
ANR	6470915	Callee	TEXT		6470625	0					
ANR	6470916	Identifier	TEXT		6470625	0					
ANR	6470917	ArgumentList	"""%s%s"""		6470625	1					
ANR	6470918	Argument	"""%s%s"""		6470625	0					
ANR	6470919	PrimaryExpression	"""%s%s"""		6470625	0					
ANR	6470920	Argument	drive		6470625	3					
ANR	6470921	Identifier	drive		6470625	0					
ANR	6470922	Argument	filename + name_length		6470625	4					
ANR	6470923	AdditiveExpression	filename + name_length		6470625	0		+			
ANR	6470924	Identifier	filename		6470625	0					
ANR	6470925	Identifier	name_length		6470625	1					
ANR	6470926	ExpressionStatement	"_tcsncpy ( filename , temp_filename , _tcslen ( temp_filename ) + 1 )"	274:5:9341:9410	6470625	2	True				
ANR	6470927	CallExpression	"_tcsncpy ( filename , temp_filename , _tcslen ( temp_filename ) + 1 )"		6470625	0					
ANR	6470928	Callee	_tcsncpy		6470625	0					
ANR	6470929	Identifier	_tcsncpy		6470625	0					
ANR	6470930	ArgumentList	filename		6470625	1					
ANR	6470931	Argument	filename		6470625	0					
ANR	6470932	Identifier	filename		6470625	0					
ANR	6470933	Argument	temp_filename		6470625	1					
ANR	6470934	Identifier	temp_filename		6470625	0					
ANR	6470935	Argument	_tcslen ( temp_filename ) + 1		6470625	2					
ANR	6470936	AdditiveExpression	_tcslen ( temp_filename ) + 1		6470625	0		+			
ANR	6470937	CallExpression	_tcslen ( temp_filename )		6470625	0					
ANR	6470938	Callee	_tcslen		6470625	0					
ANR	6470939	Identifier	_tcslen		6470625	0					
ANR	6470940	ArgumentList	temp_filename		6470625	1					
ANR	6470941	Argument	temp_filename		6470625	0					
ANR	6470942	Identifier	temp_filename		6470625	0					
ANR	6470943	PrimaryExpression	1		6470625	1					
ANR	6470944	BreakStatement	break ;	276:5:9417:9422	6470625	3	True				
ANR	6470945	ExpressionStatement	cur_drive ++	280:2:9441:9452	6470625	2	True				
ANR	6470946	PostIncDecOperationExpression	cur_drive ++		6470625	0					
ANR	6470947	Identifier	cur_drive		6470625	0					
ANR	6470948	IncDec	++		6470625	1					
ANR	6470949	Label	err_get_file_name_from_handle :	282:0:9457:9486	6470625	18	True				
ANR	6470950	Identifier	err_get_file_name_from_handle		6470625	0					
ANR	6470951	IfStatement	if ( map )		6470625	19					
ANR	6470952	Condition	map	283:5:9493:9495	6470625	0	True				
ANR	6470953	Identifier	map		6470625	0					
ANR	6470954	CompoundStatement		53:10:1629:1629	6470625	1					
ANR	6470955	ExpressionStatement	UnmapViewOfFile ( map )	284:2:9502:9523	6470625	0	True				
ANR	6470956	CallExpression	UnmapViewOfFile ( map )		6470625	0					
ANR	6470957	Callee	UnmapViewOfFile		6470625	0					
ANR	6470958	Identifier	UnmapViewOfFile		6470625	0					
ANR	6470959	ArgumentList	map		6470625	1					
ANR	6470960	Argument	map		6470625	0					
ANR	6470961	Identifier	map		6470625	0					
ANR	6470962	IfStatement	if ( handle_file_map )		6470625	20					
ANR	6470963	Condition	handle_file_map	286:5:9533:9547	6470625	0	True				
ANR	6470964	Identifier	handle_file_map		6470625	0					
ANR	6470965	CompoundStatement		56:22:1681:1681	6470625	1					
ANR	6470966	ExpressionStatement	CloseHandle ( handle_file_map )	287:2:9554:9583	6470625	0	True				
ANR	6470967	CallExpression	CloseHandle ( handle_file_map )		6470625	0					
ANR	6470968	Callee	CloseHandle		6470625	0					
ANR	6470969	Identifier	CloseHandle		6470625	0					
ANR	6470970	ArgumentList	handle_file_map		6470625	1					
ANR	6470971	Argument	handle_file_map		6470625	0					
ANR	6470972	Identifier	handle_file_map		6470625	0					
ANR	6470973	IfStatement	if ( filename )		6470625	21					
ANR	6470974	Condition	filename	289:5:9593:9600	6470625	0	True				
ANR	6470975	Identifier	filename		6470625	0					
ANR	6470976	CompoundStatement		60:2:1738:1788	6470625	1					
ANR	6470977	IdentifierDeclStatement	char * filename_ = r_sys_conv_win_to_utf8 ( filename ) ;	290:2:9607:9657	6470625	0	True				
ANR	6470978	IdentifierDecl	* filename_ = r_sys_conv_win_to_utf8 ( filename )		6470625	0					
ANR	6470979	IdentifierDeclType	char *		6470625	0					
ANR	6470980	Identifier	filename_		6470625	1					
ANR	6470981	AssignmentExpression	* filename_ = r_sys_conv_win_to_utf8 ( filename )		6470625	2		=			
ANR	6470982	Identifier	filename_		6470625	0					
ANR	6470983	CallExpression	r_sys_conv_win_to_utf8 ( filename )		6470625	1					
ANR	6470984	Callee	r_sys_conv_win_to_utf8		6470625	0					
ANR	6470985	Identifier	r_sys_conv_win_to_utf8		6470625	0					
ANR	6470986	ArgumentList	filename		6470625	1					
ANR	6470987	Argument	filename		6470625	0					
ANR	6470988	Identifier	filename		6470625	0					
ANR	6470989	ExpressionStatement	free ( filename )	291:2:9661:9676	6470625	1	True				
ANR	6470990	CallExpression	free ( filename )		6470625	0					
ANR	6470991	Callee	free		6470625	0					
ANR	6470992	Identifier	free		6470625	0					
ANR	6470993	ArgumentList	filename		6470625	1					
ANR	6470994	Argument	filename		6470625	0					
ANR	6470995	Identifier	filename		6470625	0					
ANR	6470996	ReturnStatement	return filename_ ;	292:2:9680:9696	6470625	2	True				
ANR	6470997	Identifier	filename_		6470625	0					
ANR	6470998	ReturnStatement	return NULL ;	295:1:9703:9714	6470625	22	True				
ANR	6470999	Identifier	NULL		6470625	0					
ANR	6471000	ReturnType	static char *		6470625	1					
ANR	6471001	Identifier	get_file_name_from_handle		6470625	2					
ANR	6471002	ParameterList	HANDLE handle_file		6470625	3					
ANR	6471003	Parameter	HANDLE handle_file	231:40:7848:7865	6470625	0	True				
ANR	6471004	ParameterType	HANDLE		6470625	0					
ANR	6471005	Identifier	handle_file		6470625	1					
ANR	6471006	CFGEntryNode	ENTRY		6470625		True				
ANR	6471007	CFGExitNode	EXIT		6470625		True				
ANR	6471008	Symbol	file_size_high		6470625						
ANR	6471009	Symbol	temp_filename		6470625						
ANR	6471010	Symbol	* drive		6470625						
ANR	6471011	Symbol	temp_buffer		6470625						
ANR	6471012	Symbol	QueryDosDevice		6470625						
ANR	6471013	Symbol	w32_GetMappedFileName		6470625						
ANR	6471014	Symbol	TEXT		6470625						
ANR	6471015	Symbol	name_length		6470625						
ANR	6471016	Symbol	handle_file		6470625						
ANR	6471017	Symbol	CreateFileMapping		6470625						
ANR	6471018	Symbol	file_size_low		6470625						
ANR	6471019	Symbol	PAGE_READONLY		6470625						
ANR	6471020	Symbol	_tcsnicmp		6470625						
ANR	6471021	Symbol	_tcslen		6470625						
ANR	6471022	Symbol	map		6470625						
ANR	6471023	Symbol	GetFileSize		6470625						
ANR	6471024	Symbol	* name_length		6470625						
ANR	6471025	Symbol	malloc		6470625						
ANR	6471026	Symbol	GetLogicalDriveStrings		6470625						
ANR	6471027	Symbol	NULL		6470625						
ANR	6471028	Symbol	& file_size_high		6470625						
ANR	6471029	Symbol	GetCurrentProcess		6470625						
ANR	6471030	Symbol	filename_		6470625						
ANR	6471031	Symbol	cur_drive		6470625						
ANR	6471032	Symbol	filename		6470625						
ANR	6471033	Symbol	* filename		6470625						
ANR	6471034	Symbol	* ( filename + name_length )		6470625						
ANR	6471035	Symbol	handle_file_map		6470625						
ANR	6471036	Symbol	name		6470625						
ANR	6471037	Symbol	* cur_drive		6470625						
ANR	6471038	Symbol	FILE_MAP_READ		6470625						
ANR	6471039	Symbol	MAX_PATH		6470625						
ANR	6471040	Symbol	MapViewOfFile		6470625						
ANR	6471041	Symbol	drive		6470625						
ANR	6471042	Symbol	r_sys_conv_win_to_utf8		6470625						
ANR	6471043	DeclStmt									
ANR	6471044	Decl							LPVOID	LPVOID	lstLib
ANR	6471045	DeclStmt									
ANR	6471046	Decl							PLIB_ITEM	PLIB_ITEM	lstLibPtr
ANR	6471047	Function	r_debug_get_lib_item	304:0:9829:9892							
ANR	6471048	FunctionDef	r_debug_get_lib_item ()		6471047	0					
ANR	6471049	CompoundStatement		304:42:9871:9892	6471047	0					
ANR	6471050	ReturnStatement	return lstLibPtr ;	305:1:9874:9890	6471047	0	True				
ANR	6471051	Identifier	lstLibPtr		6471047	0					
ANR	6471052	ReturnType	static PLIB_ITEM		6471047	1					
ANR	6471053	Identifier	r_debug_get_lib_item		6471047	2					
ANR	6471054	ParameterList			6471047	3					
ANR	6471055	CFGEntryNode	ENTRY		6471047		True				
ANR	6471056	CFGExitNode	EXIT		6471047		True				
ANR	6471057	Symbol	lstLibPtr		6471047						
ANR	6471058	Function	r_debug_lstLibAdd	308:0:9915:10754							
ANR	6471059	FunctionDef	"r_debug_lstLibAdd (DWORD pid , LPVOID lpBaseOfDll , HANDLE hFile , char * dllname)"		6471058	0					
ANR	6471060	CompoundStatement		308:89:10004:10754	6471058	0					
ANR	6471061	IdentifierDeclStatement	int x ;	309:1:10007:10012	6471058	0	True				
ANR	6471062	IdentifierDecl	x		6471058	0					
ANR	6471063	IdentifierDeclType	int		6471058	0					
ANR	6471064	Identifier	x		6471058	1					
ANR	6471065	IfStatement	if ( lstLib == 0 )		6471058	1					
ANR	6471066	Condition	lstLib == 0	310:5:10019:10029	6471058	0	True				
ANR	6471067	EqualityExpression	lstLib == 0		6471058	0		==			
ANR	6471068	Identifier	lstLib		6471058	0					
ANR	6471069	PrimaryExpression	0		6471058	1					
ANR	6471070	ExpressionStatement	"lstLib = VirtualAlloc ( 0 , PLIB_MAX * sizeof ( LIB_ITEM ) , MEM_COMMIT , PAGE_READWRITE )"	311:2:10034:10117	6471058	1	True				
ANR	6471071	AssignmentExpression	"lstLib = VirtualAlloc ( 0 , PLIB_MAX * sizeof ( LIB_ITEM ) , MEM_COMMIT , PAGE_READWRITE )"		6471058	0		=			
ANR	6471072	Identifier	lstLib		6471058	0					
ANR	6471073	CallExpression	"VirtualAlloc ( 0 , PLIB_MAX * sizeof ( LIB_ITEM ) , MEM_COMMIT , PAGE_READWRITE )"		6471058	1					
ANR	6471074	Callee	VirtualAlloc		6471058	0					
ANR	6471075	Identifier	VirtualAlloc		6471058	0					
ANR	6471076	ArgumentList	0		6471058	1					
ANR	6471077	Argument	0		6471058	0					
ANR	6471078	PrimaryExpression	0		6471058	0					
ANR	6471079	Argument	PLIB_MAX * sizeof ( LIB_ITEM )		6471058	1					
ANR	6471080	MultiplicativeExpression	PLIB_MAX * sizeof ( LIB_ITEM )		6471058	0		*			
ANR	6471081	Identifier	PLIB_MAX		6471058	0					
ANR	6471082	SizeofExpression	sizeof ( LIB_ITEM )		6471058	1					
ANR	6471083	Sizeof	sizeof		6471058	0					
ANR	6471084	SizeofOperand	LIB_ITEM		6471058	1					
ANR	6471085	Argument	MEM_COMMIT		6471058	2					
ANR	6471086	Identifier	MEM_COMMIT		6471058	0					
ANR	6471087	Argument	PAGE_READWRITE		6471058	3					
ANR	6471088	Identifier	PAGE_READWRITE		6471058	0					
ANR	6471089	ExpressionStatement	lstLibPtr = ( PLIB_ITEM ) lstLib	312:1:10120:10149	6471058	2	True				
ANR	6471090	AssignmentExpression	lstLibPtr = ( PLIB_ITEM ) lstLib		6471058	0		=			
ANR	6471091	Identifier	lstLibPtr		6471058	0					
ANR	6471092	CastExpression	( PLIB_ITEM ) lstLib		6471058	1					
ANR	6471093	CastTarget	PLIB_ITEM		6471058	0					
ANR	6471094	Identifier	lstLib		6471058	1					
ANR	6471095	ForStatement	for ( x = 0 ; x < PLIB_MAX ; x ++ )		6471058	3					
ANR	6471096	ForInit	x = 0 ;	313:6:10157:10160	6471058	0	True				
ANR	6471097	AssignmentExpression	x = 0		6471058	0		=			
ANR	6471098	Identifier	x		6471058	0					
ANR	6471099	PrimaryExpression	0		6471058	1					
ANR	6471100	Condition	x < PLIB_MAX	313:11:10162:10171	6471058	1	True				
ANR	6471101	RelationalExpression	x < PLIB_MAX		6471058	0		<			
ANR	6471102	Identifier	x		6471058	0					
ANR	6471103	Identifier	PLIB_MAX		6471058	1					
ANR	6471104	PostIncDecOperationExpression	x ++	313:23:10174:10176	6471058	2	True				
ANR	6471105	Identifier	x		6471058	0					
ANR	6471106	IncDec	++		6471058	1					
ANR	6471107	CompoundStatement		6:28:174:174	6471058	3					
ANR	6471108	IfStatement	if ( ! lstLibPtr -> hFile )		6471058	0					
ANR	6471109	Condition	! lstLibPtr -> hFile	314:6:10187:10203	6471058	0	True				
ANR	6471110	UnaryOperationExpression	! lstLibPtr -> hFile		6471058	0					
ANR	6471111	UnaryOperator	!		6471058	0					
ANR	6471112	PtrMemberAccess	lstLibPtr -> hFile		6471058	1					
ANR	6471113	Identifier	lstLibPtr		6471058	0					
ANR	6471114	Identifier	hFile		6471058	1					
ANR	6471115	CompoundStatement		13:24:461:470	6471058	1					
ANR	6471116	ExpressionStatement	lstLibPtr -> pid = pid	315:3:10211:10231	6471058	0	True				
ANR	6471117	AssignmentExpression	lstLibPtr -> pid = pid		6471058	0		=			
ANR	6471118	PtrMemberAccess	lstLibPtr -> pid		6471058	0					
ANR	6471119	Identifier	lstLibPtr		6471058	0					
ANR	6471120	Identifier	pid		6471058	1					
ANR	6471121	Identifier	pid		6471058	1					
ANR	6471122	ExpressionStatement	lstLibPtr -> hFile = hFile	316:3:10236:10260	6471058	1	True				
ANR	6471123	AssignmentExpression	lstLibPtr -> hFile = hFile		6471058	0		=			
ANR	6471124	PtrMemberAccess	lstLibPtr -> hFile		6471058	0					
ANR	6471125	Identifier	lstLibPtr		6471058	0					
ANR	6471126	Identifier	hFile		6471058	1					
ANR	6471127	Identifier	hFile		6471058	1					
ANR	6471128	ExpressionStatement	lstLibPtr -> BaseOfDll = lpBaseOfDll	317:3:10294:10328	6471058	2	True				
ANR	6471129	AssignmentExpression	lstLibPtr -> BaseOfDll = lpBaseOfDll		6471058	0		=			
ANR	6471130	PtrMemberAccess	lstLibPtr -> BaseOfDll		6471058	0					
ANR	6471131	Identifier	lstLibPtr		6471058	0					
ANR	6471132	Identifier	BaseOfDll		6471058	1					
ANR	6471133	Identifier	lpBaseOfDll		6471058	1					
ANR	6471134	ExpressionStatement	"strncpy ( lstLibPtr -> Path , dllname , MAX_PATH - 1 )"	318:3:10367:10411	6471058	3	True				
ANR	6471135	CallExpression	"strncpy ( lstLibPtr -> Path , dllname , MAX_PATH - 1 )"		6471058	0					
ANR	6471136	Callee	strncpy		6471058	0					
ANR	6471137	Identifier	strncpy		6471058	0					
ANR	6471138	ArgumentList	lstLibPtr -> Path		6471058	1					
ANR	6471139	Argument	lstLibPtr -> Path		6471058	0					
ANR	6471140	PtrMemberAccess	lstLibPtr -> Path		6471058	0					
ANR	6471141	Identifier	lstLibPtr		6471058	0					
ANR	6471142	Identifier	Path		6471058	1					
ANR	6471143	Argument	dllname		6471058	1					
ANR	6471144	Identifier	dllname		6471058	0					
ANR	6471145	Argument	MAX_PATH - 1		6471058	2					
ANR	6471146	AdditiveExpression	MAX_PATH - 1		6471058	0		-			
ANR	6471147	Identifier	MAX_PATH		6471058	0					
ANR	6471148	PrimaryExpression	1		6471058	1					
ANR	6471149	IdentifierDeclStatement	int i = strlen ( dllname ) ;	319:3:10416:10440	6471058	4	True				
ANR	6471150	IdentifierDecl	i = strlen ( dllname )		6471058	0					
ANR	6471151	IdentifierDeclType	int		6471058	0					
ANR	6471152	Identifier	i		6471058	1					
ANR	6471153	AssignmentExpression	i = strlen ( dllname )		6471058	2		=			
ANR	6471154	Identifier	i		6471058	0					
ANR	6471155	CallExpression	strlen ( dllname )		6471058	1					
ANR	6471156	Callee	strlen		6471058	0					
ANR	6471157	Identifier	strlen		6471058	0					
ANR	6471158	ArgumentList	dllname		6471058	1					
ANR	6471159	Argument	dllname		6471058	0					
ANR	6471160	Identifier	dllname		6471058	0					
ANR	6471161	IdentifierDeclStatement	int n = i ;	320:24:10466:10475	6471058	5	True				
ANR	6471162	IdentifierDecl	n = i		6471058	0					
ANR	6471163	IdentifierDeclType	int		6471058	0					
ANR	6471164	Identifier	n		6471058	1					
ANR	6471165	AssignmentExpression	n = i		6471058	2		=			
ANR	6471166	Identifier	i		6471058	0					
ANR	6471167	Identifier	i		6471058	1					
ANR	6471168	WhileStatement	while ( dllname [ i ] != '\\\\' && i >= 0 )		6471058	6					
ANR	6471169	Condition	dllname [ i ] != '\\\\' && i >= 0	321:30:10507:10534	6471058	0	True				
ANR	6471170	AndExpression	dllname [ i ] != '\\\\' && i >= 0		6471058	0		&&			
ANR	6471171	EqualityExpression	dllname [ i ] != '\\\\'		6471058	0		!=			
ANR	6471172	ArrayIndexing	dllname [ i ]		6471058	0					
ANR	6471173	Identifier	dllname		6471058	0					
ANR	6471174	Identifier	i		6471058	1					
ANR	6471175	PrimaryExpression	'\\\\'		6471058	1					
ANR	6471176	RelationalExpression	i >= 0		6471058	1		>=			
ANR	6471177	Identifier	i		6471058	0					
ANR	6471178	PrimaryExpression	0		6471058	1					
ANR	6471179	CompoundStatement		14:60:532:532	6471058	1					
ANR	6471180	ExpressionStatement	i --	322:29:10568:10571	6471058	0	True				
ANR	6471181	PostIncDecOperationExpression	i --		6471058	0					
ANR	6471182	Identifier	i		6471058	0					
ANR	6471183	IncDec	--		6471058	1					
ANR	6471184	ExpressionStatement	"strncpy ( lstLibPtr -> Name , & dllname [ i + 1 ] , n - i )"	324:24:10623:10668	6471058	7	True				
ANR	6471185	CallExpression	"strncpy ( lstLibPtr -> Name , & dllname [ i + 1 ] , n - i )"		6471058	0					
ANR	6471186	Callee	strncpy		6471058	0					
ANR	6471187	Identifier	strncpy		6471058	0					
ANR	6471188	ArgumentList	lstLibPtr -> Name		6471058	1					
ANR	6471189	Argument	lstLibPtr -> Name		6471058	0					
ANR	6471190	PtrMemberAccess	lstLibPtr -> Name		6471058	0					
ANR	6471191	Identifier	lstLibPtr		6471058	0					
ANR	6471192	Identifier	Name		6471058	1					
ANR	6471193	Argument	& dllname [ i + 1 ]		6471058	1					
ANR	6471194	UnaryOperationExpression	& dllname [ i + 1 ]		6471058	0					
ANR	6471195	UnaryOperator	&		6471058	0					
ANR	6471196	ArrayIndexing	dllname [ i + 1 ]		6471058	1					
ANR	6471197	Identifier	dllname		6471058	0					
ANR	6471198	AdditiveExpression	i + 1		6471058	1		+			
ANR	6471199	Identifier	i		6471058	0					
ANR	6471200	PrimaryExpression	1		6471058	1					
ANR	6471201	Argument	n - i		6471058	2					
ANR	6471202	AdditiveExpression	n - i		6471058	0		-			
ANR	6471203	Identifier	n		6471058	0					
ANR	6471204	Identifier	i		6471058	1					
ANR	6471205	ReturnStatement	return ;	325:3:10673:10679	6471058	8	True				
ANR	6471206	ExpressionStatement	lstLibPtr ++	327:2:10687:10698	6471058	1	True				
ANR	6471207	PostIncDecOperationExpression	lstLibPtr ++		6471058	0					
ANR	6471208	Identifier	lstLibPtr		6471058	0					
ANR	6471209	IncDec	++		6471058	1					
ANR	6471210	ExpressionStatement	"eprintf ( ""r_debug_lstLibAdd: Cannot find slot\\n"" )"	329:1:10704:10752	6471058	4	True				
ANR	6471211	CallExpression	"eprintf ( ""r_debug_lstLibAdd: Cannot find slot\\n"" )"		6471058	0					
ANR	6471212	Callee	eprintf		6471058	0					
ANR	6471213	Identifier	eprintf		6471058	0					
ANR	6471214	ArgumentList	"""r_debug_lstLibAdd: Cannot find slot\\n"""		6471058	1					
ANR	6471215	Argument	"""r_debug_lstLibAdd: Cannot find slot\\n"""		6471058	0					
ANR	6471216	PrimaryExpression	"""r_debug_lstLibAdd: Cannot find slot\\n"""		6471058	0					
ANR	6471217	ReturnType	static void		6471058	1					
ANR	6471218	Identifier	r_debug_lstLibAdd		6471058	2					
ANR	6471219	ParameterList	"DWORD pid , LPVOID lpBaseOfDll , HANDLE hFile , char * dllname"		6471058	3					
ANR	6471220	Parameter	DWORD pid	308:30:9945:9953	6471058	0	True				
ANR	6471221	ParameterType	DWORD		6471058	0					
ANR	6471222	Identifier	pid		6471058	1					
ANR	6471223	Parameter	LPVOID lpBaseOfDll	308:40:9955:9972	6471058	1	True				
ANR	6471224	ParameterType	LPVOID		6471058	0					
ANR	6471225	Identifier	lpBaseOfDll		6471058	1					
ANR	6471226	Parameter	HANDLE hFile	308:60:9975:9986	6471058	2	True				
ANR	6471227	ParameterType	HANDLE		6471058	0					
ANR	6471228	Identifier	hFile		6471058	1					
ANR	6471229	Parameter	char * dllname	308:73:9988:10001	6471058	3	True				
ANR	6471230	ParameterType	char *		6471058	0					
ANR	6471231	Identifier	dllname		6471058	1					
ANR	6471232	CFGEntryNode	ENTRY		6471058		True				
ANR	6471233	CFGExitNode	EXIT		6471058		True				
ANR	6471234	Symbol	VirtualAlloc		6471058						
ANR	6471235	Symbol	MEM_COMMIT		6471058						
ANR	6471236	Symbol	* dllname		6471058						
ANR	6471237	Symbol	lstLibPtr		6471058						
ANR	6471238	Symbol	lstLibPtr -> pid		6471058						
ANR	6471239	Symbol	lstLibPtr -> BaseOfDll		6471058						
ANR	6471240	Symbol	i		6471058						
ANR	6471241	Symbol	pid		6471058						
ANR	6471242	Symbol	lstLib		6471058						
ANR	6471243	Symbol	PLIB_MAX		6471058						
ANR	6471244	Symbol	n		6471058						
ANR	6471245	Symbol	lstLibPtr -> Name		6471058						
ANR	6471246	Symbol	dllname		6471058						
ANR	6471247	Symbol	PAGE_READWRITE		6471058						
ANR	6471248	Symbol	strlen		6471058						
ANR	6471249	Symbol	* lstLibPtr		6471058						
ANR	6471250	Symbol	* i		6471058						
ANR	6471251	Symbol	lstLibPtr -> hFile		6471058						
ANR	6471252	Symbol	lstLibPtr -> Path		6471058						
ANR	6471253	Symbol	x		6471058						
ANR	6471254	Symbol	lpBaseOfDll		6471058						
ANR	6471255	Symbol	MAX_PATH		6471058						
ANR	6471256	Symbol	hFile		6471058						
ANR	6471257	Function	r_debug_findlib	331:0:10756:11102							
ANR	6471258	FunctionDef	r_debug_findlib (void * BaseOfDll)		6471257	0					
ANR	6471259	CompoundStatement		331:49:10805:11102	6471257	0					
ANR	6471260	IdentifierDeclStatement	PLIB_ITEM libPtr = NULL ;	332:1:10808:10831	6471257	0	True				
ANR	6471261	IdentifierDecl	libPtr = NULL		6471257	0					
ANR	6471262	IdentifierDeclType	PLIB_ITEM		6471257	0					
ANR	6471263	Identifier	libPtr		6471257	1					
ANR	6471264	AssignmentExpression	libPtr = NULL		6471257	2		=			
ANR	6471265	Identifier	NULL		6471257	0					
ANR	6471266	Identifier	NULL		6471257	1					
ANR	6471267	IfStatement	if ( lstLib )		6471257	1					
ANR	6471268	Condition	lstLib	333:5:10838:10843	6471257	0	True				
ANR	6471269	Identifier	lstLib		6471257	0					
ANR	6471270	CompoundStatement		3:13:40:40	6471257	1					
ANR	6471271	ExpressionStatement	libPtr = ( PLIB_ITEM ) lstLib	334:2:10850:10876	6471257	0	True				
ANR	6471272	AssignmentExpression	libPtr = ( PLIB_ITEM ) lstLib		6471257	0		=			
ANR	6471273	Identifier	libPtr		6471257	0					
ANR	6471274	CastExpression	( PLIB_ITEM ) lstLib		6471257	1					
ANR	6471275	CastTarget	PLIB_ITEM		6471257	0					
ANR	6471276	Identifier	lstLib		6471257	1					
ANR	6471277	WhileStatement	while ( libPtr -> hFile != NULL )		6471257	1					
ANR	6471278	Condition	libPtr -> hFile != NULL	335:9:10887:10907	6471257	0	True				
ANR	6471279	EqualityExpression	libPtr -> hFile != NULL		6471257	0		!=			
ANR	6471280	PtrMemberAccess	libPtr -> hFile		6471257	0					
ANR	6471281	Identifier	libPtr		6471257	0					
ANR	6471282	Identifier	hFile		6471257	1					
ANR	6471283	Identifier	NULL		6471257	1					
ANR	6471284	CompoundStatement		5:32:104:104	6471257	1					
ANR	6471285	IfStatement	if ( libPtr -> hFile != ( HANDLE ) - 1 )		6471257	0					
ANR	6471286	Condition	libPtr -> hFile != ( HANDLE ) - 1	336:7:10919:10945	6471257	0	True				
ANR	6471287	EqualityExpression	libPtr -> hFile != ( HANDLE ) - 1		6471257	0		!=			
ANR	6471288	PtrMemberAccess	libPtr -> hFile		6471257	0					
ANR	6471289	Identifier	libPtr		6471257	0					
ANR	6471290	Identifier	hFile		6471257	1					
ANR	6471291	CastExpression	( HANDLE ) - 1		6471257	1					
ANR	6471292	CastTarget	HANDLE		6471257	0					
ANR	6471293	UnaryOperationExpression	- 1		6471257	1					
ANR	6471294	UnaryOperator	-		6471257	0					
ANR	6471295	PrimaryExpression	1		6471257	1					
ANR	6471296	IfStatement	if ( libPtr -> BaseOfDll == BaseOfDll )		6471257	1					
ANR	6471297	Condition	libPtr -> BaseOfDll == BaseOfDll	337:8:10956:10985	6471257	0	True				
ANR	6471298	EqualityExpression	libPtr -> BaseOfDll == BaseOfDll		6471257	0		==			
ANR	6471299	PtrMemberAccess	libPtr -> BaseOfDll		6471257	0					
ANR	6471300	Identifier	libPtr		6471257	0					
ANR	6471301	Identifier	BaseOfDll		6471257	1					
ANR	6471302	Identifier	BaseOfDll		6471257	1					
ANR	6471303	ReturnStatement	return ( ( void * ) libPtr ) ;	338:5:10993:11015	6471257	1	True				
ANR	6471304	CastExpression	( void * ) libPtr		6471257	0					
ANR	6471305	CastTarget	void *		6471257	0					
ANR	6471306	Identifier	libPtr		6471257	1					
ANR	6471307	ExpressionStatement	libPtr = ( PLIB_ITEM ) ( ( ULONG_PTR ) libPtr + sizeof ( LIB_ITEM ) )	339:3:11020:11079	6471257	1	True				
ANR	6471308	AssignmentExpression	libPtr = ( PLIB_ITEM ) ( ( ULONG_PTR ) libPtr + sizeof ( LIB_ITEM ) )		6471257	0		=			
ANR	6471309	Identifier	libPtr		6471257	0					
ANR	6471310	CastExpression	( PLIB_ITEM ) ( ( ULONG_PTR ) libPtr + sizeof ( LIB_ITEM ) )		6471257	1					
ANR	6471311	CastTarget	PLIB_ITEM		6471257	0					
ANR	6471312	AdditiveExpression	( ULONG_PTR ) libPtr + sizeof ( LIB_ITEM )		6471257	1		+			
ANR	6471313	CastExpression	( ULONG_PTR ) libPtr		6471257	0					
ANR	6471314	CastTarget	ULONG_PTR		6471257	0					
ANR	6471315	Identifier	libPtr		6471257	1					
ANR	6471316	SizeofExpression	sizeof ( LIB_ITEM )		6471257	1					
ANR	6471317	Sizeof	sizeof		6471257	0					
ANR	6471318	SizeofOperand	LIB_ITEM		6471257	1					
ANR	6471319	ReturnStatement	return NULL ;	342:1:11089:11100	6471257	2	True				
ANR	6471320	Identifier	NULL		6471257	0					
ANR	6471321	ReturnType	static void *		6471257	1					
ANR	6471322	Identifier	r_debug_findlib		6471257	2					
ANR	6471323	ParameterList	void * BaseOfDll		6471257	3					
ANR	6471324	Parameter	void * BaseOfDll	331:31:10787:10802	6471257	0	True				
ANR	6471325	ParameterType	void *		6471257	0					
ANR	6471326	Identifier	BaseOfDll		6471257	1					
ANR	6471327	CFGEntryNode	ENTRY		6471257		True				
ANR	6471328	CFGExitNode	EXIT		6471257		True				
ANR	6471329	Symbol	libPtr -> BaseOfDll		6471257						
ANR	6471330	Symbol	NULL		6471257						
ANR	6471331	Symbol	* libPtr		6471257						
ANR	6471332	Symbol	BaseOfDll		6471257						
ANR	6471333	Symbol	libPtr		6471257						
ANR	6471334	Symbol	libPtr -> hFile		6471257						
ANR	6471335	Symbol	lstLib		6471257						
ANR	6471336	DeclStmt									
ANR	6471337	Decl							LPVOID	LPVOID	lstThread
ANR	6471338	DeclStmt									
ANR	6471339	Decl							PTHREAD_ITEM	PTHREAD_ITEM	lstThreadPtr
ANR	6471340	Function	r_debug_get_thread_item	347:0:11158:11231							
ANR	6471341	FunctionDef	r_debug_get_thread_item ()		6471340	0					
ANR	6471342	CompoundStatement		347:49:11207:11231	6471340	0					
ANR	6471343	ReturnStatement	return lstThreadPtr ;	348:1:11210:11229	6471340	0	True				
ANR	6471344	Identifier	lstThreadPtr		6471340	0					
ANR	6471345	ReturnType	static PTHREAD_ITEM		6471340	1					
ANR	6471346	Identifier	r_debug_get_thread_item		6471340	2					
ANR	6471347	ParameterList			6471340	3					
ANR	6471348	CFGEntryNode	ENTRY		6471340		True				
ANR	6471349	CFGExitNode	EXIT		6471340		True				
ANR	6471350	Symbol	lstThreadPtr		6471340						
ANR	6471351	Function	r_debug_lstThreadAdd	351:0:11258:12173							
ANR	6471352	FunctionDef	"r_debug_lstThreadAdd (DWORD pid , DWORD tid , HANDLE hThread , LPVOID lpThreadLocalBase , LPVOID lpStartAddress , BOOL bFinished)"		6471351	0					
ANR	6471353	CompoundStatement		351:138:11396:12173	6471351	0					
ANR	6471354	IdentifierDeclStatement	int x ;	352:1:11399:11404	6471351	0	True				
ANR	6471355	IdentifierDecl	x		6471351	0					
ANR	6471356	IdentifierDeclType	int		6471351	0					
ANR	6471357	Identifier	x		6471351	1					
ANR	6471358	IdentifierDeclStatement	PVOID startAddress = 0 ;	353:1:11407:11429	6471351	1	True				
ANR	6471359	IdentifierDecl	startAddress = 0		6471351	0					
ANR	6471360	IdentifierDeclType	PVOID		6471351	0					
ANR	6471361	Identifier	startAddress		6471351	1					
ANR	6471362	AssignmentExpression	startAddress = 0		6471351	2		=			
ANR	6471363	Identifier	startAddress		6471351	0					
ANR	6471364	PrimaryExpression	0		6471351	1					
ANR	6471365	IfStatement	if ( lstThread == 0 )		6471351	2					
ANR	6471366	Condition	lstThread == 0	354:5:11436:11449	6471351	0	True				
ANR	6471367	EqualityExpression	lstThread == 0		6471351	0		==			
ANR	6471368	Identifier	lstThread		6471351	0					
ANR	6471369	PrimaryExpression	0		6471351	1					
ANR	6471370	ExpressionStatement	"lstThread = VirtualAlloc ( 0 , PTHREAD_MAX * sizeof ( THREAD_ITEM ) , MEM_COMMIT , PAGE_READWRITE )"	355:2:11454:11546	6471351	1	True				
ANR	6471371	AssignmentExpression	"lstThread = VirtualAlloc ( 0 , PTHREAD_MAX * sizeof ( THREAD_ITEM ) , MEM_COMMIT , PAGE_READWRITE )"		6471351	0		=			
ANR	6471372	Identifier	lstThread		6471351	0					
ANR	6471373	CallExpression	"VirtualAlloc ( 0 , PTHREAD_MAX * sizeof ( THREAD_ITEM ) , MEM_COMMIT , PAGE_READWRITE )"		6471351	1					
ANR	6471374	Callee	VirtualAlloc		6471351	0					
ANR	6471375	Identifier	VirtualAlloc		6471351	0					
ANR	6471376	ArgumentList	0		6471351	1					
ANR	6471377	Argument	0		6471351	0					
ANR	6471378	PrimaryExpression	0		6471351	0					
ANR	6471379	Argument	PTHREAD_MAX * sizeof ( THREAD_ITEM )		6471351	1					
ANR	6471380	MultiplicativeExpression	PTHREAD_MAX * sizeof ( THREAD_ITEM )		6471351	0		*			
ANR	6471381	Identifier	PTHREAD_MAX		6471351	0					
ANR	6471382	SizeofExpression	sizeof ( THREAD_ITEM )		6471351	1					
ANR	6471383	Sizeof	sizeof		6471351	0					
ANR	6471384	SizeofOperand	THREAD_ITEM		6471351	1					
ANR	6471385	Argument	MEM_COMMIT		6471351	2					
ANR	6471386	Identifier	MEM_COMMIT		6471351	0					
ANR	6471387	Argument	PAGE_READWRITE		6471351	3					
ANR	6471388	Identifier	PAGE_READWRITE		6471351	0					
ANR	6471389	ExpressionStatement	lstThreadPtr = ( PTHREAD_ITEM ) lstThread	356:1:11549:11587	6471351	3	True				
ANR	6471390	AssignmentExpression	lstThreadPtr = ( PTHREAD_ITEM ) lstThread		6471351	0		=			
ANR	6471391	Identifier	lstThreadPtr		6471351	0					
ANR	6471392	CastExpression	( PTHREAD_ITEM ) lstThread		6471351	1					
ANR	6471393	CastTarget	PTHREAD_ITEM		6471351	0					
ANR	6471394	Identifier	lstThread		6471351	1					
ANR	6471395	ForStatement	for ( x = 0 ; x < PTHREAD_MAX ; x ++ )		6471351	4					
ANR	6471396	ForInit	x = 0 ;	357:6:11595:11600	6471351	0	True				
ANR	6471397	AssignmentExpression	x = 0		6471351	0		=			
ANR	6471398	Identifier	x		6471351	0					
ANR	6471399	PrimaryExpression	0		6471351	1					
ANR	6471400	Condition	x < PTHREAD_MAX	357:13:11602:11616	6471351	1	True				
ANR	6471401	RelationalExpression	x < PTHREAD_MAX		6471351	0		<			
ANR	6471402	Identifier	x		6471351	0					
ANR	6471403	Identifier	PTHREAD_MAX		6471351	1					
ANR	6471404	PostIncDecOperationExpression	x ++	357:30:11619:11621	6471351	2	True				
ANR	6471405	Identifier	x		6471351	0					
ANR	6471406	IncDec	++		6471351	1					
ANR	6471407	CompoundStatement		7:35:227:227	6471351	3					
ANR	6471408	IfStatement	if ( ! lstThreadPtr -> tid )		6471351	0					
ANR	6471409	Condition	! lstThreadPtr -> tid	358:6:11632:11649	6471351	0	True				
ANR	6471410	UnaryOperationExpression	! lstThreadPtr -> tid		6471351	0					
ANR	6471411	UnaryOperator	!		6471351	0					
ANR	6471412	PtrMemberAccess	lstThreadPtr -> tid		6471351	1					
ANR	6471413	Identifier	lstThreadPtr		6471351	0					
ANR	6471414	Identifier	tid		6471351	1					
ANR	6471415	CompoundStatement		8:26:255:255	6471351	1					
ANR	6471416	ExpressionStatement	lstThreadPtr -> pid = pid	359:3:11657:11680	6471351	0	True				
ANR	6471417	AssignmentExpression	lstThreadPtr -> pid = pid		6471351	0		=			
ANR	6471418	PtrMemberAccess	lstThreadPtr -> pid		6471351	0					
ANR	6471419	Identifier	lstThreadPtr		6471351	0					
ANR	6471420	Identifier	pid		6471351	1					
ANR	6471421	Identifier	pid		6471351	1					
ANR	6471422	ExpressionStatement	lstThreadPtr -> tid = tid	360:3:11685:11708	6471351	1	True				
ANR	6471423	AssignmentExpression	lstThreadPtr -> tid = tid		6471351	0		=			
ANR	6471424	PtrMemberAccess	lstThreadPtr -> tid		6471351	0					
ANR	6471425	Identifier	lstThreadPtr		6471351	0					
ANR	6471426	Identifier	tid		6471351	1					
ANR	6471427	Identifier	tid		6471351	1					
ANR	6471428	ExpressionStatement	lstThreadPtr -> bFinished = bFinished	361:3:11713:11748	6471351	2	True				
ANR	6471429	AssignmentExpression	lstThreadPtr -> bFinished = bFinished		6471351	0		=			
ANR	6471430	PtrMemberAccess	lstThreadPtr -> bFinished		6471351	0					
ANR	6471431	Identifier	lstThreadPtr		6471351	0					
ANR	6471432	Identifier	bFinished		6471351	1					
ANR	6471433	Identifier	bFinished		6471351	1					
ANR	6471434	ExpressionStatement	lstThreadPtr -> hThread = hThread	362:3:11753:11784	6471351	3	True				
ANR	6471435	AssignmentExpression	lstThreadPtr -> hThread = hThread		6471351	0		=			
ANR	6471436	PtrMemberAccess	lstThreadPtr -> hThread		6471351	0					
ANR	6471437	Identifier	lstThreadPtr		6471351	0					
ANR	6471438	Identifier	hThread		6471351	1					
ANR	6471439	Identifier	hThread		6471351	1					
ANR	6471440	ExpressionStatement	lstThreadPtr -> lpThreadLocalBase = lpThreadLocalBase	363:3:11789:11840	6471351	4	True				
ANR	6471441	AssignmentExpression	lstThreadPtr -> lpThreadLocalBase = lpThreadLocalBase		6471351	0		=			
ANR	6471442	PtrMemberAccess	lstThreadPtr -> lpThreadLocalBase		6471351	0					
ANR	6471443	Identifier	lstThreadPtr		6471351	0					
ANR	6471444	Identifier	lpThreadLocalBase		6471351	1					
ANR	6471445	Identifier	lpThreadLocalBase		6471351	1					
ANR	6471446	ExpressionStatement	lstThreadPtr -> lpStartAddress = lpStartAddress	364:3:11845:11890	6471351	5	True				
ANR	6471447	AssignmentExpression	lstThreadPtr -> lpStartAddress = lpStartAddress		6471351	0		=			
ANR	6471448	PtrMemberAccess	lstThreadPtr -> lpStartAddress		6471351	0					
ANR	6471449	Identifier	lstThreadPtr		6471351	0					
ANR	6471450	Identifier	lpStartAddress		6471351	1					
ANR	6471451	Identifier	lpStartAddress		6471351	1					
ANR	6471452	IfStatement	"if ( w32_NtQueryInformationThread ( hThread , 0x9 , & startAddress , sizeof ( PVOID ) , NULL ) == 0 )"		6471351	6					
ANR	6471453	Condition	"w32_NtQueryInformationThread ( hThread , 0x9 , & startAddress , sizeof ( PVOID ) , NULL ) == 0"	365:7:11899:12019	6471351	0	True				
ANR	6471454	EqualityExpression	"w32_NtQueryInformationThread ( hThread , 0x9 , & startAddress , sizeof ( PVOID ) , NULL ) == 0"		6471351	0		==			
ANR	6471455	CallExpression	"w32_NtQueryInformationThread ( hThread , 0x9 , & startAddress , sizeof ( PVOID ) , NULL )"		6471351	0					
ANR	6471456	Callee	w32_NtQueryInformationThread		6471351	0					
ANR	6471457	Identifier	w32_NtQueryInformationThread		6471351	0					
ANR	6471458	ArgumentList	hThread		6471351	1					
ANR	6471459	Argument	hThread		6471351	0					
ANR	6471460	Identifier	hThread		6471351	0					
ANR	6471461	Argument	0x9		6471351	1					
ANR	6471462	PrimaryExpression	0x9		6471351	0					
ANR	6471463	Argument	& startAddress		6471351	2					
ANR	6471464	UnaryOperationExpression	& startAddress		6471351	0					
ANR	6471465	UnaryOperator	&		6471351	0					
ANR	6471466	Identifier	startAddress		6471351	1					
ANR	6471467	Argument	sizeof ( PVOID )		6471351	3					
ANR	6471468	SizeofExpression	sizeof ( PVOID )		6471351	0					
ANR	6471469	Sizeof	sizeof		6471351	0					
ANR	6471470	SizeofOperand	PVOID		6471351	1					
ANR	6471471	Argument	NULL		6471351	4					
ANR	6471472	Identifier	NULL		6471351	0					
ANR	6471473	PrimaryExpression	0		6471351	1					
ANR	6471474	CompoundStatement		15:130:625:625	6471351	1					
ANR	6471475	ExpressionStatement	lstThreadPtr -> lpThreadEntryPoint = startAddress	366:4:12028:12075	6471351	0	True				
ANR	6471476	AssignmentExpression	lstThreadPtr -> lpThreadEntryPoint = startAddress		6471351	0		=			
ANR	6471477	PtrMemberAccess	lstThreadPtr -> lpThreadEntryPoint		6471351	0					
ANR	6471478	Identifier	lstThreadPtr		6471351	0					
ANR	6471479	Identifier	lpThreadEntryPoint		6471351	1					
ANR	6471480	Identifier	startAddress		6471351	1					
ANR	6471481	ReturnStatement	return ;	368:3:12085:12091	6471351	7	True				
ANR	6471482	ExpressionStatement	lstThreadPtr ++	370:2:12099:12113	6471351	1	True				
ANR	6471483	PostIncDecOperationExpression	lstThreadPtr ++		6471351	0					
ANR	6471484	Identifier	lstThreadPtr		6471351	0					
ANR	6471485	IncDec	++		6471351	1					
ANR	6471486	ExpressionStatement	"eprintf ( ""r_debug_lstThreadAdd: Cannot find slot\\n"" )"	372:1:12119:12171	6471351	5	True				
ANR	6471487	CallExpression	"eprintf ( ""r_debug_lstThreadAdd: Cannot find slot\\n"" )"		6471351	0					
ANR	6471488	Callee	eprintf		6471351	0					
ANR	6471489	Identifier	eprintf		6471351	0					
ANR	6471490	ArgumentList	"""r_debug_lstThreadAdd: Cannot find slot\\n"""		6471351	1					
ANR	6471491	Argument	"""r_debug_lstThreadAdd: Cannot find slot\\n"""		6471351	0					
ANR	6471492	PrimaryExpression	"""r_debug_lstThreadAdd: Cannot find slot\\n"""		6471351	0					
ANR	6471493	ReturnType	static void		6471351	1					
ANR	6471494	Identifier	r_debug_lstThreadAdd		6471351	2					
ANR	6471495	ParameterList	"DWORD pid , DWORD tid , HANDLE hThread , LPVOID lpThreadLocalBase , LPVOID lpStartAddress , BOOL bFinished"		6471351	3					
ANR	6471496	Parameter	DWORD pid	351:34:11292:11300	6471351	0	True				
ANR	6471497	ParameterType	DWORD		6471351	0					
ANR	6471498	Identifier	pid		6471351	1					
ANR	6471499	Parameter	DWORD tid	351:45:11303:11311	6471351	1	True				
ANR	6471500	ParameterType	DWORD		6471351	0					
ANR	6471501	Identifier	tid		6471351	1					
ANR	6471502	Parameter	HANDLE hThread	351:56:11314:11327	6471351	2	True				
ANR	6471503	ParameterType	HANDLE		6471351	0					
ANR	6471504	Identifier	hThread		6471351	1					
ANR	6471505	Parameter	LPVOID lpThreadLocalBase	351:72:11330:11354	6471351	3	True				
ANR	6471506	ParameterType	LPVOID		6471351	0					
ANR	6471507	Identifier	lpThreadLocalBase		6471351	1					
ANR	6471508	Parameter	LPVOID lpStartAddress	351:99:11357:11377	6471351	4	True				
ANR	6471509	ParameterType	LPVOID		6471351	0					
ANR	6471510	Identifier	lpStartAddress		6471351	1					
ANR	6471511	Parameter	BOOL bFinished	351:122:11380:11393	6471351	5	True				
ANR	6471512	ParameterType	BOOL		6471351	0					
ANR	6471513	Identifier	bFinished		6471351	1					
ANR	6471514	CFGEntryNode	ENTRY		6471351		True				
ANR	6471515	CFGExitNode	EXIT		6471351		True				
ANR	6471516	Symbol	MEM_COMMIT		6471351						
ANR	6471517	Symbol	pid		6471351						
ANR	6471518	Symbol	lstThreadPtr -> hThread		6471351						
ANR	6471519	Symbol	PTHREAD_MAX		6471351						
ANR	6471520	Symbol	& startAddress		6471351						
ANR	6471521	Symbol	tid		6471351						
ANR	6471522	Symbol	bFinished		6471351						
ANR	6471523	Symbol	lstThreadPtr -> lpThreadEntryPoint		6471351						
ANR	6471524	Symbol	lpStartAddress		6471351						
ANR	6471525	Symbol	lstThreadPtr -> bFinished		6471351						
ANR	6471526	Symbol	hThread		6471351						
ANR	6471527	Symbol	lpThreadLocalBase		6471351						
ANR	6471528	Symbol	* lstThreadPtr		6471351						
ANR	6471529	Symbol	lstThreadPtr -> lpStartAddress		6471351						
ANR	6471530	Symbol	lstThreadPtr -> pid		6471351						
ANR	6471531	Symbol	VirtualAlloc		6471351						
ANR	6471532	Symbol	NULL		6471351						
ANR	6471533	Symbol	startAddress		6471351						
ANR	6471534	Symbol	lstThread		6471351						
ANR	6471535	Symbol	lstThreadPtr -> tid		6471351						
ANR	6471536	Symbol	PAGE_READWRITE		6471351						
ANR	6471537	Symbol	w32_NtQueryInformationThread		6471351						
ANR	6471538	Symbol	x		6471351						
ANR	6471539	Symbol	lstThreadPtr -> lpThreadLocalBase		6471351						
ANR	6471540	Symbol	lstThreadPtr		6471351						
ANR	6471541	Function	r_debug_findthread	375:0:12176:12556							
ANR	6471542	FunctionDef	"r_debug_findthread (int pid , int tid)"		6471541	0					
ANR	6471543	CompoundStatement		375:52:12228:12556	6471541	0					
ANR	6471544	IdentifierDeclStatement	PTHREAD_ITEM threadPtr = NULL ;	376:1:12231:12260	6471541	0	True				
ANR	6471545	IdentifierDecl	threadPtr = NULL		6471541	0					
ANR	6471546	IdentifierDeclType	PTHREAD_ITEM		6471541	0					
ANR	6471547	Identifier	threadPtr		6471541	1					
ANR	6471548	AssignmentExpression	threadPtr = NULL		6471541	2		=			
ANR	6471549	Identifier	NULL		6471541	0					
ANR	6471550	Identifier	NULL		6471541	1					
ANR	6471551	IfStatement	if ( lstThread )		6471541	1					
ANR	6471552	Condition	lstThread	377:5:12267:12275	6471541	0	True				
ANR	6471553	Identifier	lstThread		6471541	0					
ANR	6471554	CompoundStatement		3:16:49:49	6471541	1					
ANR	6471555	ExpressionStatement	threadPtr = ( PTHREAD_ITEM ) lstThread	378:2:12282:12317	6471541	0	True				
ANR	6471556	AssignmentExpression	threadPtr = ( PTHREAD_ITEM ) lstThread		6471541	0		=			
ANR	6471557	Identifier	threadPtr		6471541	0					
ANR	6471558	CastExpression	( PTHREAD_ITEM ) lstThread		6471541	1					
ANR	6471559	CastTarget	PTHREAD_ITEM		6471541	0					
ANR	6471560	Identifier	lstThread		6471541	1					
ANR	6471561	WhileStatement	while ( threadPtr -> tid != 0 )		6471541	1					
ANR	6471562	Condition	threadPtr -> tid != 0	379:9:12328:12346	6471541	0	True				
ANR	6471563	EqualityExpression	threadPtr -> tid != 0		6471541	0		!=			
ANR	6471564	PtrMemberAccess	threadPtr -> tid		6471541	0					
ANR	6471565	Identifier	threadPtr		6471541	0					
ANR	6471566	Identifier	tid		6471541	1					
ANR	6471567	PrimaryExpression	0		6471541	1					
ANR	6471568	CompoundStatement		5:30:120:120	6471541	1					
ANR	6471569	IfStatement	if ( threadPtr -> pid == pid )		6471541	0					
ANR	6471570	Condition	threadPtr -> pid == pid	380:7:12358:12378	6471541	0	True				
ANR	6471571	EqualityExpression	threadPtr -> pid == pid		6471541	0		==			
ANR	6471572	PtrMemberAccess	threadPtr -> pid		6471541	0					
ANR	6471573	Identifier	threadPtr		6471541	0					
ANR	6471574	Identifier	pid		6471541	1					
ANR	6471575	Identifier	pid		6471541	1					
ANR	6471576	CompoundStatement		6:30:152:152	6471541	1					
ANR	6471577	IfStatement	if ( threadPtr -> tid == tid )		6471541	0					
ANR	6471578	Condition	threadPtr -> tid == tid	381:8:12391:12411	6471541	0	True				
ANR	6471579	EqualityExpression	threadPtr -> tid == tid		6471541	0		==			
ANR	6471580	PtrMemberAccess	threadPtr -> tid		6471541	0					
ANR	6471581	Identifier	threadPtr		6471541	0					
ANR	6471582	Identifier	tid		6471541	1					
ANR	6471583	Identifier	tid		6471541	1					
ANR	6471584	CompoundStatement		7:31:185:185	6471541	1					
ANR	6471585	ReturnStatement	return ( ( void * ) threadPtr ) ;	382:5:12421:12446	6471541	0	True				
ANR	6471586	CastExpression	( void * ) threadPtr		6471541	0					
ANR	6471587	CastTarget	void *		6471541	0					
ANR	6471588	Identifier	threadPtr		6471541	1					
ANR	6471589	ExpressionStatement	threadPtr = ( PTHREAD_ITEM ) ( ( ULONG_PTR ) threadPtr + sizeof ( THREAD_ITEM ) )	385:3:12462:12533	6471541	1	True				
ANR	6471590	AssignmentExpression	threadPtr = ( PTHREAD_ITEM ) ( ( ULONG_PTR ) threadPtr + sizeof ( THREAD_ITEM ) )		6471541	0		=			
ANR	6471591	Identifier	threadPtr		6471541	0					
ANR	6471592	CastExpression	( PTHREAD_ITEM ) ( ( ULONG_PTR ) threadPtr + sizeof ( THREAD_ITEM ) )		6471541	1					
ANR	6471593	CastTarget	PTHREAD_ITEM		6471541	0					
ANR	6471594	AdditiveExpression	( ULONG_PTR ) threadPtr + sizeof ( THREAD_ITEM )		6471541	1		+			
ANR	6471595	CastExpression	( ULONG_PTR ) threadPtr		6471541	0					
ANR	6471596	CastTarget	ULONG_PTR		6471541	0					
ANR	6471597	Identifier	threadPtr		6471541	1					
ANR	6471598	SizeofExpression	sizeof ( THREAD_ITEM )		6471541	1					
ANR	6471599	Sizeof	sizeof		6471541	0					
ANR	6471600	SizeofOperand	THREAD_ITEM		6471541	1					
ANR	6471601	ReturnStatement	return NULL ;	388:1:12543:12554	6471541	2	True				
ANR	6471602	Identifier	NULL		6471541	0					
ANR	6471603	ReturnType	static void *		6471541	1					
ANR	6471604	Identifier	r_debug_findthread		6471541	2					
ANR	6471605	ParameterList	"int pid , int tid"		6471541	3					
ANR	6471606	Parameter	int pid	375:34:12210:12216	6471541	0	True				
ANR	6471607	ParameterType	int		6471541	0					
ANR	6471608	Identifier	pid		6471541	1					
ANR	6471609	Parameter	int tid	375:43:12219:12225	6471541	1	True				
ANR	6471610	ParameterType	int		6471541	0					
ANR	6471611	Identifier	tid		6471541	1					
ANR	6471612	CFGEntryNode	ENTRY		6471541		True				
ANR	6471613	CFGExitNode	EXIT		6471541		True				
ANR	6471614	Symbol	threadPtr -> tid		6471541						
ANR	6471615	Symbol	NULL		6471541						
ANR	6471616	Symbol	threadPtr		6471541						
ANR	6471617	Symbol	threadPtr -> pid		6471541						
ANR	6471618	Symbol	lstThread		6471541						
ANR	6471619	Symbol	pid		6471541						
ANR	6471620	Symbol	* threadPtr		6471541						
ANR	6471621	Symbol	tid		6471541						
ANR	6471622	Function	w32_dbg_wait	391:0:12559:16942							
ANR	6471623	FunctionDef	"w32_dbg_wait (RDebug * dbg , int pid)"		6471622	0					
ANR	6471624	CompoundStatement		391:39:12598:16942	6471622	0					
ANR	6471625	IdentifierDeclStatement	DEBUG_EVENT de ;	392:1:12601:12615	6471622	0	True				
ANR	6471626	IdentifierDecl	de		6471622	0					
ANR	6471627	IdentifierDeclType	DEBUG_EVENT		6471622	0					
ANR	6471628	Identifier	de		6471622	1					
ANR	6471629	IdentifierDeclStatement	"int tid , next_event = 0 ;"	393:1:12618:12641	6471622	1	True				
ANR	6471630	IdentifierDecl	tid		6471622	0					
ANR	6471631	IdentifierDeclType	int		6471622	0					
ANR	6471632	Identifier	tid		6471622	1					
ANR	6471633	IdentifierDecl	next_event = 0		6471622	1					
ANR	6471634	IdentifierDeclType	int		6471622	0					
ANR	6471635	Identifier	next_event		6471622	1					
ANR	6471636	AssignmentExpression	next_event = 0		6471622	2		=			
ANR	6471637	Identifier	next_event		6471622	0					
ANR	6471638	PrimaryExpression	0		6471622	1					
ANR	6471639	IdentifierDeclStatement	unsigned int code ;	394:1:12644:12661	6471622	2	True				
ANR	6471640	IdentifierDecl	code		6471622	0					
ANR	6471641	IdentifierDeclType	unsigned int		6471622	0					
ANR	6471642	Identifier	code		6471622	1					
ANR	6471643	IdentifierDeclStatement	char * dllname = NULL ;	395:1:12664:12684	6471622	3	True				
ANR	6471644	IdentifierDecl	* dllname = NULL		6471622	0					
ANR	6471645	IdentifierDeclType	char *		6471622	0					
ANR	6471646	Identifier	dllname		6471622	1					
ANR	6471647	AssignmentExpression	* dllname = NULL		6471622	2		=			
ANR	6471648	Identifier	NULL		6471622	0					
ANR	6471649	Identifier	NULL		6471622	1					
ANR	6471650	IdentifierDeclStatement	int ret = R_DEBUG_REASON_UNKNOWN ;	396:1:12687:12719	6471622	4	True				
ANR	6471651	IdentifierDecl	ret = R_DEBUG_REASON_UNKNOWN		6471622	0					
ANR	6471652	IdentifierDeclType	int		6471622	0					
ANR	6471653	Identifier	ret		6471622	1					
ANR	6471654	AssignmentExpression	ret = R_DEBUG_REASON_UNKNOWN		6471622	2		=			
ANR	6471655	Identifier	R_DEBUG_REASON_UNKNOWN		6471622	0					
ANR	6471656	Identifier	R_DEBUG_REASON_UNKNOWN		6471622	1					
ANR	6471657	Statement	static	397:1:12722:12727	6471622	5	True				
ANR	6471658	IdentifierDeclStatement	int exited_already = 0 ;	397:8:12729:12751	6471622	6	True				
ANR	6471659	IdentifierDecl	exited_already = 0		6471622	0					
ANR	6471660	IdentifierDeclType	int		6471622	0					
ANR	6471661	Identifier	exited_already		6471622	1					
ANR	6471662	AssignmentExpression	exited_already = 0		6471622	2		=			
ANR	6471663	Identifier	exited_already		6471622	0					
ANR	6471664	PrimaryExpression	0		6471622	1					
ANR	6471665	DoStatement	do		6471622	7					
ANR	6471666	CompoundStatement		9:4:185:185	6471622	0					
ANR	6471667	IfStatement	if ( exited_already == pid )		6471622	0					
ANR	6471668	Condition	exited_already == pid	401:6:12867:12887	6471622	0	True				
ANR	6471669	EqualityExpression	exited_already == pid		6471622	0		==			
ANR	6471670	Identifier	exited_already		6471622	0					
ANR	6471671	Identifier	pid		6471622	1					
ANR	6471672	CompoundStatement		11:29:291:291	6471622	1					
ANR	6471673	ReturnStatement	return - 1 ;	402:3:12895:12904	6471622	0	True				
ANR	6471674	UnaryOperationExpression	- 1		6471622	0					
ANR	6471675	UnaryOperator	-		6471622	0					
ANR	6471676	PrimaryExpression	1		6471622	1					
ANR	6471677	ExpressionStatement	"memset ( & de , 0 , sizeof ( DEBUG_EVENT ) )"	404:2:12912:12949	6471622	1	True				
ANR	6471678	CallExpression	"memset ( & de , 0 , sizeof ( DEBUG_EVENT ) )"		6471622	0					
ANR	6471679	Callee	memset		6471622	0					
ANR	6471680	Identifier	memset		6471622	0					
ANR	6471681	ArgumentList	& de		6471622	1					
ANR	6471682	Argument	& de		6471622	0					
ANR	6471683	UnaryOperationExpression	& de		6471622	0					
ANR	6471684	UnaryOperator	&		6471622	0					
ANR	6471685	Identifier	de		6471622	1					
ANR	6471686	Argument	0		6471622	1					
ANR	6471687	PrimaryExpression	0		6471622	0					
ANR	6471688	Argument	sizeof ( DEBUG_EVENT )		6471622	2					
ANR	6471689	SizeofExpression	sizeof ( DEBUG_EVENT )		6471622	0					
ANR	6471690	Sizeof	sizeof		6471622	0					
ANR	6471691	SizeofOperand	DEBUG_EVENT		6471622	1					
ANR	6471692	IfStatement	"if ( WaitForDebugEvent ( & de , INFINITE ) == 0 )"		6471622	2					
ANR	6471693	Condition	"WaitForDebugEvent ( & de , INFINITE ) == 0"	405:6:12957:12994	6471622	0	True				
ANR	6471694	EqualityExpression	"WaitForDebugEvent ( & de , INFINITE ) == 0"		6471622	0		==			
ANR	6471695	CallExpression	"WaitForDebugEvent ( & de , INFINITE )"		6471622	0					
ANR	6471696	Callee	WaitForDebugEvent		6471622	0					
ANR	6471697	Identifier	WaitForDebugEvent		6471622	0					
ANR	6471698	ArgumentList	& de		6471622	1					
ANR	6471699	Argument	& de		6471622	0					
ANR	6471700	UnaryOperationExpression	& de		6471622	0					
ANR	6471701	UnaryOperator	&		6471622	0					
ANR	6471702	Identifier	de		6471622	1					
ANR	6471703	Argument	INFINITE		6471622	1					
ANR	6471704	Identifier	INFINITE		6471622	0					
ANR	6471705	PrimaryExpression	0		6471622	1					
ANR	6471706	CompoundStatement		15:46:398:398	6471622	1					
ANR	6471707	ExpressionStatement	"r_sys_perror ( ""w32_dbg_wait/WaitForDebugEvent"" )"	406:3:13002:13049	6471622	0	True				
ANR	6471708	CallExpression	"r_sys_perror ( ""w32_dbg_wait/WaitForDebugEvent"" )"		6471622	0					
ANR	6471709	Callee	r_sys_perror		6471622	0					
ANR	6471710	Identifier	r_sys_perror		6471622	0					
ANR	6471711	ArgumentList	"""w32_dbg_wait/WaitForDebugEvent"""		6471622	1					
ANR	6471712	Argument	"""w32_dbg_wait/WaitForDebugEvent"""		6471622	0					
ANR	6471713	PrimaryExpression	"""w32_dbg_wait/WaitForDebugEvent"""		6471622	0					
ANR	6471714	ReturnStatement	return - 1 ;	407:3:13054:13063	6471622	1	True				
ANR	6471715	UnaryOperationExpression	- 1		6471622	0					
ANR	6471716	UnaryOperator	-		6471622	0					
ANR	6471717	PrimaryExpression	1		6471622	1					
ANR	6471718	ExpressionStatement	code = de . dwDebugEventCode	409:2:13071:13097	6471622	3	True				
ANR	6471719	AssignmentExpression	code = de . dwDebugEventCode		6471622	0		=			
ANR	6471720	Identifier	code		6471622	0					
ANR	6471721	MemberAccess	de . dwDebugEventCode		6471622	1					
ANR	6471722	Identifier	de		6471622	0					
ANR	6471723	Identifier	dwDebugEventCode		6471622	1					
ANR	6471724	ExpressionStatement	tid = de . dwThreadId	410:2:13101:13120	6471622	4	True				
ANR	6471725	AssignmentExpression	tid = de . dwThreadId		6471622	0		=			
ANR	6471726	Identifier	tid		6471622	0					
ANR	6471727	MemberAccess	de . dwThreadId		6471622	1					
ANR	6471728	Identifier	de		6471622	0					
ANR	6471729	Identifier	dwThreadId		6471622	1					
ANR	6471730	ExpressionStatement	pid = de . dwProcessId	411:2:13124:13144	6471622	5	True				
ANR	6471731	AssignmentExpression	pid = de . dwProcessId		6471622	0		=			
ANR	6471732	Identifier	pid		6471622	0					
ANR	6471733	MemberAccess	de . dwProcessId		6471622	1					
ANR	6471734	Identifier	de		6471622	0					
ANR	6471735	Identifier	dwProcessId		6471622	1					
ANR	6471736	ExpressionStatement	dbg -> tid = tid	412:2:13148:13162	6471622	6	True				
ANR	6471737	AssignmentExpression	dbg -> tid = tid		6471622	0		=			
ANR	6471738	PtrMemberAccess	dbg -> tid		6471622	0					
ANR	6471739	Identifier	dbg		6471622	0					
ANR	6471740	Identifier	tid		6471622	1					
ANR	6471741	Identifier	tid		6471622	1					
ANR	6471742	ExpressionStatement	dbg -> pid = pid	413:2:13166:13180	6471622	7	True				
ANR	6471743	AssignmentExpression	dbg -> pid = pid		6471622	0		=			
ANR	6471744	PtrMemberAccess	dbg -> pid		6471622	0					
ANR	6471745	Identifier	dbg		6471622	0					
ANR	6471746	Identifier	pid		6471622	1					
ANR	6471747	Identifier	pid		6471622	1					
ANR	6471748	SwitchStatement	switch ( code )		6471622	8					
ANR	6471749	Condition	code	415:10:13222:13225	6471622	0	True				
ANR	6471750	Identifier	code		6471622	0					
ANR	6471751	CompoundStatement		25:16:629:629	6471622	1					
ANR	6471752	Label	case CREATE_PROCESS_DEBUG_EVENT :	416:2:13232:13263	6471622	0	True				
ANR	6471753	Identifier	CREATE_PROCESS_DEBUG_EVENT		6471622	0					
ANR	6471754	ExpressionStatement	"eprintf ( ""(%d) created process (%d:%p)\\n"" , pid , w32_h2t ( de . u . CreateProcessInfo . hProcess ) , de . u . CreateProcessInfo . lpStartAddress )"	417:3:13268:13405	6471622	1	True				
ANR	6471755	CallExpression	"eprintf ( ""(%d) created process (%d:%p)\\n"" , pid , w32_h2t ( de . u . CreateProcessInfo . hProcess ) , de . u . CreateProcessInfo . lpStartAddress )"		6471622	0					
ANR	6471756	Callee	eprintf		6471622	0					
ANR	6471757	Identifier	eprintf		6471622	0					
ANR	6471758	ArgumentList	"""(%d) created process (%d:%p)\\n"""		6471622	1					
ANR	6471759	Argument	"""(%d) created process (%d:%p)\\n"""		6471622	0					
ANR	6471760	PrimaryExpression	"""(%d) created process (%d:%p)\\n"""		6471622	0					
ANR	6471761	Argument	pid		6471622	1					
ANR	6471762	Identifier	pid		6471622	0					
ANR	6471763	Argument	w32_h2t ( de . u . CreateProcessInfo . hProcess )		6471622	2					
ANR	6471764	CallExpression	w32_h2t ( de . u . CreateProcessInfo . hProcess )		6471622	0					
ANR	6471765	Callee	w32_h2t		6471622	0					
ANR	6471766	Identifier	w32_h2t		6471622	0					
ANR	6471767	ArgumentList	de . u . CreateProcessInfo . hProcess		6471622	1					
ANR	6471768	Argument	de . u . CreateProcessInfo . hProcess		6471622	0					
ANR	6471769	MemberAccess	de . u . CreateProcessInfo . hProcess		6471622	0					
ANR	6471770	MemberAccess	de . u . CreateProcessInfo		6471622	0					
ANR	6471771	MemberAccess	de . u		6471622	0					
ANR	6471772	Identifier	de		6471622	0					
ANR	6471773	Identifier	u		6471622	1					
ANR	6471774	Identifier	CreateProcessInfo		6471622	1					
ANR	6471775	Identifier	hProcess		6471622	1					
ANR	6471776	Argument	de . u . CreateProcessInfo . lpStartAddress		6471622	3					
ANR	6471777	MemberAccess	de . u . CreateProcessInfo . lpStartAddress		6471622	0					
ANR	6471778	MemberAccess	de . u . CreateProcessInfo		6471622	0					
ANR	6471779	MemberAccess	de . u		6471622	0					
ANR	6471780	Identifier	de		6471622	0					
ANR	6471781	Identifier	u		6471622	1					
ANR	6471782	Identifier	CreateProcessInfo		6471622	1					
ANR	6471783	Identifier	lpStartAddress		6471622	1					
ANR	6471784	ExpressionStatement	"r_debug_native_continue ( dbg , pid , tid , - 1 )"	420:3:13410:13453	6471622	2	True				
ANR	6471785	CallExpression	"r_debug_native_continue ( dbg , pid , tid , - 1 )"		6471622	0					
ANR	6471786	Callee	r_debug_native_continue		6471622	0					
ANR	6471787	Identifier	r_debug_native_continue		6471622	0					
ANR	6471788	ArgumentList	dbg		6471622	1					
ANR	6471789	Argument	dbg		6471622	0					
ANR	6471790	Identifier	dbg		6471622	0					
ANR	6471791	Argument	pid		6471622	1					
ANR	6471792	Identifier	pid		6471622	0					
ANR	6471793	Argument	tid		6471622	2					
ANR	6471794	Identifier	tid		6471622	0					
ANR	6471795	Argument	- 1		6471622	3					
ANR	6471796	UnaryOperationExpression	- 1		6471622	0					
ANR	6471797	UnaryOperator	-		6471622	0					
ANR	6471798	PrimaryExpression	1		6471622	1					
ANR	6471799	ExpressionStatement	next_event = 1	421:3:13458:13472	6471622	3	True				
ANR	6471800	AssignmentExpression	next_event = 1		6471622	0		=			
ANR	6471801	Identifier	next_event		6471622	0					
ANR	6471802	PrimaryExpression	1		6471622	1					
ANR	6471803	ExpressionStatement	ret = R_DEBUG_REASON_NEW_PID	422:3:13477:13505	6471622	4	True				
ANR	6471804	AssignmentExpression	ret = R_DEBUG_REASON_NEW_PID		6471622	0		=			
ANR	6471805	Identifier	ret		6471622	0					
ANR	6471806	Identifier	R_DEBUG_REASON_NEW_PID		6471622	1					
ANR	6471807	BreakStatement	break ;	423:3:13510:13515	6471622	5	True				
ANR	6471808	Label	case EXIT_PROCESS_DEBUG_EVENT :	424:2:13519:13548	6471622	6	True				
ANR	6471809	Identifier	EXIT_PROCESS_DEBUG_EVENT		6471622	0					
ANR	6471810	ExpressionStatement	"r_cons_printf ( ""(%d) Process %d exited with exit code %d\\n"" , ( int ) de . dwProcessId , ( int ) de . dwProcessId , ( int ) de . u . ExitProcess . dwExitCode )"	427:3:13696:13836	6471622	7	True				
ANR	6471811	CallExpression	"r_cons_printf ( ""(%d) Process %d exited with exit code %d\\n"" , ( int ) de . dwProcessId , ( int ) de . dwProcessId , ( int ) de . u . ExitProcess . dwExitCode )"		6471622	0					
ANR	6471812	Callee	r_cons_printf		6471622	0					
ANR	6471813	Identifier	r_cons_printf		6471622	0					
ANR	6471814	ArgumentList	"""(%d) Process %d exited with exit code %d\\n"""		6471622	1					
ANR	6471815	Argument	"""(%d) Process %d exited with exit code %d\\n"""		6471622	0					
ANR	6471816	PrimaryExpression	"""(%d) Process %d exited with exit code %d\\n"""		6471622	0					
ANR	6471817	Argument	( int ) de . dwProcessId		6471622	1					
ANR	6471818	CastExpression	( int ) de . dwProcessId		6471622	0					
ANR	6471819	CastTarget	int		6471622	0					
ANR	6471820	MemberAccess	de . dwProcessId		6471622	1					
ANR	6471821	Identifier	de		6471622	0					
ANR	6471822	Identifier	dwProcessId		6471622	1					
ANR	6471823	Argument	( int ) de . dwProcessId		6471622	2					
ANR	6471824	CastExpression	( int ) de . dwProcessId		6471622	0					
ANR	6471825	CastTarget	int		6471622	0					
ANR	6471826	MemberAccess	de . dwProcessId		6471622	1					
ANR	6471827	Identifier	de		6471622	0					
ANR	6471828	Identifier	dwProcessId		6471622	1					
ANR	6471829	Argument	( int ) de . u . ExitProcess . dwExitCode		6471622	3					
ANR	6471830	CastExpression	( int ) de . u . ExitProcess . dwExitCode		6471622	0					
ANR	6471831	CastTarget	int		6471622	0					
ANR	6471832	MemberAccess	de . u . ExitProcess . dwExitCode		6471622	1					
ANR	6471833	MemberAccess	de . u . ExitProcess		6471622	0					
ANR	6471834	MemberAccess	de . u		6471622	0					
ANR	6471835	Identifier	de		6471622	0					
ANR	6471836	Identifier	u		6471622	1					
ANR	6471837	Identifier	ExitProcess		6471622	1					
ANR	6471838	Identifier	dwExitCode		6471622	1					
ANR	6471839	ExpressionStatement	r_cons_flush ( )	429:3:13841:13856	6471622	8	True				
ANR	6471840	CallExpression	r_cons_flush ( )		6471622	0					
ANR	6471841	Callee	r_cons_flush		6471622	0					
ANR	6471842	Identifier	r_cons_flush		6471622	0					
ANR	6471843	ArgumentList			6471622	1					
ANR	6471844	ExpressionStatement	next_event = 0	431:3:13880:13894	6471622	9	True				
ANR	6471845	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6471846	Identifier	next_event		6471622	0					
ANR	6471847	PrimaryExpression	0		6471622	1					
ANR	6471848	ExpressionStatement	exited_already = pid	432:3:13899:13919	6471622	10	True				
ANR	6471849	AssignmentExpression	exited_already = pid		6471622	0		=			
ANR	6471850	Identifier	exited_already		6471622	0					
ANR	6471851	Identifier	pid		6471622	1					
ANR	6471852	ExpressionStatement	ret = R_DEBUG_REASON_EXIT_PID	433:3:13924:13953	6471622	11	True				
ANR	6471853	AssignmentExpression	ret = R_DEBUG_REASON_EXIT_PID		6471622	0		=			
ANR	6471854	Identifier	ret		6471622	0					
ANR	6471855	Identifier	R_DEBUG_REASON_EXIT_PID		6471622	1					
ANR	6471856	BreakStatement	break ;	434:3:13958:13963	6471622	12	True				
ANR	6471857	Label	case CREATE_THREAD_DEBUG_EVENT :	435:2:13967:13997	6471622	13	True				
ANR	6471858	Identifier	CREATE_THREAD_DEBUG_EVENT		6471622	0					
ANR	6471859	ExpressionStatement	"r_debug_lstThreadAdd ( pid , tid , de . u . CreateThread . hThread , de . u . CreateThread . lpThreadLocalBase , de . u . CreateThread . lpStartAddress , FALSE )"	437:3:14102:14238	6471622	14	True				
ANR	6471860	CallExpression	"r_debug_lstThreadAdd ( pid , tid , de . u . CreateThread . hThread , de . u . CreateThread . lpThreadLocalBase , de . u . CreateThread . lpStartAddress , FALSE )"		6471622	0					
ANR	6471861	Callee	r_debug_lstThreadAdd		6471622	0					
ANR	6471862	Identifier	r_debug_lstThreadAdd		6471622	0					
ANR	6471863	ArgumentList	pid		6471622	1					
ANR	6471864	Argument	pid		6471622	0					
ANR	6471865	Identifier	pid		6471622	0					
ANR	6471866	Argument	tid		6471622	1					
ANR	6471867	Identifier	tid		6471622	0					
ANR	6471868	Argument	de . u . CreateThread . hThread		6471622	2					
ANR	6471869	MemberAccess	de . u . CreateThread . hThread		6471622	0					
ANR	6471870	MemberAccess	de . u . CreateThread		6471622	0					
ANR	6471871	MemberAccess	de . u		6471622	0					
ANR	6471872	Identifier	de		6471622	0					
ANR	6471873	Identifier	u		6471622	1					
ANR	6471874	Identifier	CreateThread		6471622	1					
ANR	6471875	Identifier	hThread		6471622	1					
ANR	6471876	Argument	de . u . CreateThread . lpThreadLocalBase		6471622	3					
ANR	6471877	MemberAccess	de . u . CreateThread . lpThreadLocalBase		6471622	0					
ANR	6471878	MemberAccess	de . u . CreateThread		6471622	0					
ANR	6471879	MemberAccess	de . u		6471622	0					
ANR	6471880	Identifier	de		6471622	0					
ANR	6471881	Identifier	u		6471622	1					
ANR	6471882	Identifier	CreateThread		6471622	1					
ANR	6471883	Identifier	lpThreadLocalBase		6471622	1					
ANR	6471884	Argument	de . u . CreateThread . lpStartAddress		6471622	4					
ANR	6471885	MemberAccess	de . u . CreateThread . lpStartAddress		6471622	0					
ANR	6471886	MemberAccess	de . u . CreateThread		6471622	0					
ANR	6471887	MemberAccess	de . u		6471622	0					
ANR	6471888	Identifier	de		6471622	0					
ANR	6471889	Identifier	u		6471622	1					
ANR	6471890	Identifier	CreateThread		6471622	1					
ANR	6471891	Identifier	lpStartAddress		6471622	1					
ANR	6471892	Argument	FALSE		6471622	5					
ANR	6471893	Identifier	FALSE		6471622	0					
ANR	6471894	ExpressionStatement	ret = R_DEBUG_REASON_NEW_TID	439:3:14293:14321	6471622	15	True				
ANR	6471895	AssignmentExpression	ret = R_DEBUG_REASON_NEW_TID		6471622	0		=			
ANR	6471896	Identifier	ret		6471622	0					
ANR	6471897	Identifier	R_DEBUG_REASON_NEW_TID		6471622	1					
ANR	6471898	ExpressionStatement	next_event = 0	440:3:14326:14340	6471622	16	True				
ANR	6471899	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6471900	Identifier	next_event		6471622	0					
ANR	6471901	PrimaryExpression	0		6471622	1					
ANR	6471902	BreakStatement	break ;	441:3:14345:14350	6471622	17	True				
ANR	6471903	Label	case EXIT_THREAD_DEBUG_EVENT :	442:2:14354:14382	6471622	18	True				
ANR	6471904	Identifier	EXIT_THREAD_DEBUG_EVENT		6471622	0					
ANR	6471905	ExpressionStatement	"lstThreadPtr = ( PTHREAD_ITEM ) r_debug_findthread ( pid , tid )"	444:3:14441:14499	6471622	19	True				
ANR	6471906	AssignmentExpression	"lstThreadPtr = ( PTHREAD_ITEM ) r_debug_findthread ( pid , tid )"		6471622	0		=			
ANR	6471907	Identifier	lstThreadPtr		6471622	0					
ANR	6471908	CastExpression	"( PTHREAD_ITEM ) r_debug_findthread ( pid , tid )"		6471622	1					
ANR	6471909	CastTarget	PTHREAD_ITEM		6471622	0					
ANR	6471910	CallExpression	"r_debug_findthread ( pid , tid )"		6471622	1					
ANR	6471911	Callee	r_debug_findthread		6471622	0					
ANR	6471912	Identifier	r_debug_findthread		6471622	0					
ANR	6471913	ArgumentList	pid		6471622	1					
ANR	6471914	Argument	pid		6471622	0					
ANR	6471915	Identifier	pid		6471622	0					
ANR	6471916	Argument	tid		6471622	1					
ANR	6471917	Identifier	tid		6471622	0					
ANR	6471918	IfStatement	if ( lstThreadPtr )		6471622	20					
ANR	6471919	Condition	lstThreadPtr	445:7:14508:14519	6471622	0	True				
ANR	6471920	Identifier	lstThreadPtr		6471622	0					
ANR	6471921	CompoundStatement		55:21:1923:1923	6471622	1					
ANR	6471922	ExpressionStatement	lstThreadPtr -> bFinished = TRUE	446:4:14528:14558	6471622	0	True				
ANR	6471923	AssignmentExpression	lstThreadPtr -> bFinished = TRUE		6471622	0		=			
ANR	6471924	PtrMemberAccess	lstThreadPtr -> bFinished		6471622	0					
ANR	6471925	Identifier	lstThreadPtr		6471622	0					
ANR	6471926	Identifier	bFinished		6471622	1					
ANR	6471927	Identifier	TRUE		6471622	1					
ANR	6471928	ExpressionStatement	lstThreadPtr -> dwExitCode = de . u . ExitThread . dwExitCode	447:4:14564:14617	6471622	1	True				
ANR	6471929	AssignmentExpression	lstThreadPtr -> dwExitCode = de . u . ExitThread . dwExitCode		6471622	0		=			
ANR	6471930	PtrMemberAccess	lstThreadPtr -> dwExitCode		6471622	0					
ANR	6471931	Identifier	lstThreadPtr		6471622	0					
ANR	6471932	Identifier	dwExitCode		6471622	1					
ANR	6471933	MemberAccess	de . u . ExitThread . dwExitCode		6471622	1					
ANR	6471934	MemberAccess	de . u . ExitThread		6471622	0					
ANR	6471935	MemberAccess	de . u		6471622	0					
ANR	6471936	Identifier	de		6471622	0					
ANR	6471937	Identifier	u		6471622	1					
ANR	6471938	Identifier	ExitThread		6471622	1					
ANR	6471939	Identifier	dwExitCode		6471622	1					
ANR	6471940	ElseStatement	else		6471622	0					
ANR	6471941	CompoundStatement		58:10:2030:2030	6471622	0					
ANR	6471942	ExpressionStatement	"r_debug_lstThreadAdd ( pid , tid , de . u . CreateThread . hThread , de . u . CreateThread . lpThreadLocalBase , de . u . CreateThread . lpStartAddress , TRUE )"	449:4:14635:14770	6471622	0	True				
ANR	6471943	CallExpression	"r_debug_lstThreadAdd ( pid , tid , de . u . CreateThread . hThread , de . u . CreateThread . lpThreadLocalBase , de . u . CreateThread . lpStartAddress , TRUE )"		6471622	0					
ANR	6471944	Callee	r_debug_lstThreadAdd		6471622	0					
ANR	6471945	Identifier	r_debug_lstThreadAdd		6471622	0					
ANR	6471946	ArgumentList	pid		6471622	1					
ANR	6471947	Argument	pid		6471622	0					
ANR	6471948	Identifier	pid		6471622	0					
ANR	6471949	Argument	tid		6471622	1					
ANR	6471950	Identifier	tid		6471622	0					
ANR	6471951	Argument	de . u . CreateThread . hThread		6471622	2					
ANR	6471952	MemberAccess	de . u . CreateThread . hThread		6471622	0					
ANR	6471953	MemberAccess	de . u . CreateThread		6471622	0					
ANR	6471954	MemberAccess	de . u		6471622	0					
ANR	6471955	Identifier	de		6471622	0					
ANR	6471956	Identifier	u		6471622	1					
ANR	6471957	Identifier	CreateThread		6471622	1					
ANR	6471958	Identifier	hThread		6471622	1					
ANR	6471959	Argument	de . u . CreateThread . lpThreadLocalBase		6471622	3					
ANR	6471960	MemberAccess	de . u . CreateThread . lpThreadLocalBase		6471622	0					
ANR	6471961	MemberAccess	de . u . CreateThread		6471622	0					
ANR	6471962	MemberAccess	de . u		6471622	0					
ANR	6471963	Identifier	de		6471622	0					
ANR	6471964	Identifier	u		6471622	1					
ANR	6471965	Identifier	CreateThread		6471622	1					
ANR	6471966	Identifier	lpThreadLocalBase		6471622	1					
ANR	6471967	Argument	de . u . CreateThread . lpStartAddress		6471622	4					
ANR	6471968	MemberAccess	de . u . CreateThread . lpStartAddress		6471622	0					
ANR	6471969	MemberAccess	de . u . CreateThread		6471622	0					
ANR	6471970	MemberAccess	de . u		6471622	0					
ANR	6471971	Identifier	de		6471622	0					
ANR	6471972	Identifier	u		6471622	1					
ANR	6471973	Identifier	CreateThread		6471622	1					
ANR	6471974	Identifier	lpStartAddress		6471622	1					
ANR	6471975	Argument	TRUE		6471622	5					
ANR	6471976	Identifier	TRUE		6471622	0					
ANR	6471977	ExpressionStatement	next_event = 0	452:3:14830:14844	6471622	21	True				
ANR	6471978	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6471979	Identifier	next_event		6471622	0					
ANR	6471980	PrimaryExpression	0		6471622	1					
ANR	6471981	ExpressionStatement	ret = R_DEBUG_REASON_EXIT_TID	453:3:14849:14878	6471622	22	True				
ANR	6471982	AssignmentExpression	ret = R_DEBUG_REASON_EXIT_TID		6471622	0		=			
ANR	6471983	Identifier	ret		6471622	0					
ANR	6471984	Identifier	R_DEBUG_REASON_EXIT_TID		6471622	1					
ANR	6471985	BreakStatement	break ;	454:3:14883:14888	6471622	23	True				
ANR	6471986	Label	case LOAD_DLL_DEBUG_EVENT :	455:2:14892:14917	6471622	24	True				
ANR	6471987	Identifier	LOAD_DLL_DEBUG_EVENT		6471622	0					
ANR	6471988	ExpressionStatement	dllname = get_file_name_from_handle ( de . u . LoadDll . hFile )	456:3:14922:14978	6471622	25	True				
ANR	6471989	AssignmentExpression	dllname = get_file_name_from_handle ( de . u . LoadDll . hFile )		6471622	0		=			
ANR	6471990	Identifier	dllname		6471622	0					
ANR	6471991	CallExpression	get_file_name_from_handle ( de . u . LoadDll . hFile )		6471622	1					
ANR	6471992	Callee	get_file_name_from_handle		6471622	0					
ANR	6471993	Identifier	get_file_name_from_handle		6471622	0					
ANR	6471994	ArgumentList	de . u . LoadDll . hFile		6471622	1					
ANR	6471995	Argument	de . u . LoadDll . hFile		6471622	0					
ANR	6471996	MemberAccess	de . u . LoadDll . hFile		6471622	0					
ANR	6471997	MemberAccess	de . u . LoadDll		6471622	0					
ANR	6471998	MemberAccess	de . u		6471622	0					
ANR	6471999	Identifier	de		6471622	0					
ANR	6472000	Identifier	u		6471622	1					
ANR	6472001	Identifier	LoadDll		6471622	1					
ANR	6472002	Identifier	hFile		6471622	1					
ANR	6472003	ExpressionStatement	"r_debug_lstLibAdd ( pid , de . u . LoadDll . lpBaseOfDll , de . u . LoadDll . hFile , dllname )"	458:3:15096:15173	6471622	26	True				
ANR	6472004	CallExpression	"r_debug_lstLibAdd ( pid , de . u . LoadDll . lpBaseOfDll , de . u . LoadDll . hFile , dllname )"		6471622	0					
ANR	6472005	Callee	r_debug_lstLibAdd		6471622	0					
ANR	6472006	Identifier	r_debug_lstLibAdd		6471622	0					
ANR	6472007	ArgumentList	pid		6471622	1					
ANR	6472008	Argument	pid		6471622	0					
ANR	6472009	Identifier	pid		6471622	0					
ANR	6472010	Argument	de . u . LoadDll . lpBaseOfDll		6471622	1					
ANR	6472011	MemberAccess	de . u . LoadDll . lpBaseOfDll		6471622	0					
ANR	6472012	MemberAccess	de . u . LoadDll		6471622	0					
ANR	6472013	MemberAccess	de . u		6471622	0					
ANR	6472014	Identifier	de		6471622	0					
ANR	6472015	Identifier	u		6471622	1					
ANR	6472016	Identifier	LoadDll		6471622	1					
ANR	6472017	Identifier	lpBaseOfDll		6471622	1					
ANR	6472018	Argument	de . u . LoadDll . hFile		6471622	2					
ANR	6472019	MemberAccess	de . u . LoadDll . hFile		6471622	0					
ANR	6472020	MemberAccess	de . u . LoadDll		6471622	0					
ANR	6472021	MemberAccess	de . u		6471622	0					
ANR	6472022	Identifier	de		6471622	0					
ANR	6472023	Identifier	u		6471622	1					
ANR	6472024	Identifier	LoadDll		6471622	1					
ANR	6472025	Identifier	hFile		6471622	1					
ANR	6472026	Argument	dllname		6471622	3					
ANR	6472027	Identifier	dllname		6471622	0					
ANR	6472028	IfStatement	if ( dllname )		6471622	27					
ANR	6472029	Condition	dllname	459:7:15182:15188	6471622	0	True				
ANR	6472030	Identifier	dllname		6471622	0					
ANR	6472031	CompoundStatement		69:16:2592:2592	6471622	1					
ANR	6472032	ExpressionStatement	free ( dllname )	460:4:15197:15211	6471622	0	True				
ANR	6472033	CallExpression	free ( dllname )		6471622	0					
ANR	6472034	Callee	free		6471622	0					
ANR	6472035	Identifier	free		6471622	0					
ANR	6472036	ArgumentList	dllname		6471622	1					
ANR	6472037	Argument	dllname		6471622	0					
ANR	6472038	Identifier	dllname		6471622	0					
ANR	6472039	ExpressionStatement	next_event = 0	462:3:15221:15235	6471622	28	True				
ANR	6472040	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6472041	Identifier	next_event		6471622	0					
ANR	6472042	PrimaryExpression	0		6471622	1					
ANR	6472043	ExpressionStatement	ret = R_DEBUG_REASON_NEW_LIB	463:3:15240:15268	6471622	29	True				
ANR	6472044	AssignmentExpression	ret = R_DEBUG_REASON_NEW_LIB		6471622	0		=			
ANR	6472045	Identifier	ret		6471622	0					
ANR	6472046	Identifier	R_DEBUG_REASON_NEW_LIB		6471622	1					
ANR	6472047	BreakStatement	break ;	464:3:15273:15278	6471622	30	True				
ANR	6472048	Label	case UNLOAD_DLL_DEBUG_EVENT :	465:2:15282:15309	6471622	31	True				
ANR	6472049	Identifier	UNLOAD_DLL_DEBUG_EVENT		6471622	0					
ANR	6472050	ExpressionStatement	lstLibPtr = ( PLIB_ITEM ) r_debug_findlib ( de . u . UnloadDll . lpBaseOfDll )	467:3:15396:15463	6471622	32	True				
ANR	6472051	AssignmentExpression	lstLibPtr = ( PLIB_ITEM ) r_debug_findlib ( de . u . UnloadDll . lpBaseOfDll )		6471622	0		=			
ANR	6472052	Identifier	lstLibPtr		6471622	0					
ANR	6472053	CastExpression	( PLIB_ITEM ) r_debug_findlib ( de . u . UnloadDll . lpBaseOfDll )		6471622	1					
ANR	6472054	CastTarget	PLIB_ITEM		6471622	0					
ANR	6472055	CallExpression	r_debug_findlib ( de . u . UnloadDll . lpBaseOfDll )		6471622	1					
ANR	6472056	Callee	r_debug_findlib		6471622	0					
ANR	6472057	Identifier	r_debug_findlib		6471622	0					
ANR	6472058	ArgumentList	de . u . UnloadDll . lpBaseOfDll		6471622	1					
ANR	6472059	Argument	de . u . UnloadDll . lpBaseOfDll		6471622	0					
ANR	6472060	MemberAccess	de . u . UnloadDll . lpBaseOfDll		6471622	0					
ANR	6472061	MemberAccess	de . u . UnloadDll		6471622	0					
ANR	6472062	MemberAccess	de . u		6471622	0					
ANR	6472063	Identifier	de		6471622	0					
ANR	6472064	Identifier	u		6471622	1					
ANR	6472065	Identifier	UnloadDll		6471622	1					
ANR	6472066	Identifier	lpBaseOfDll		6471622	1					
ANR	6472067	IfStatement	if ( lstLibPtr != NULL )		6471622	33					
ANR	6472068	Condition	lstLibPtr != NULL	468:7:15472:15488	6471622	0	True				
ANR	6472069	EqualityExpression	lstLibPtr != NULL		6471622	0		!=			
ANR	6472070	Identifier	lstLibPtr		6471622	0					
ANR	6472071	Identifier	NULL		6471622	1					
ANR	6472072	CompoundStatement		78:26:2892:2892	6471622	1					
ANR	6472073	ExpressionStatement	lstLibPtr -> hFile = ( HANDLE ) - 1	469:4:15497:15526	6471622	0	True				
ANR	6472074	AssignmentExpression	lstLibPtr -> hFile = ( HANDLE ) - 1		6471622	0		=			
ANR	6472075	PtrMemberAccess	lstLibPtr -> hFile		6471622	0					
ANR	6472076	Identifier	lstLibPtr		6471622	0					
ANR	6472077	Identifier	hFile		6471622	1					
ANR	6472078	CastExpression	( HANDLE ) - 1		6471622	1					
ANR	6472079	CastTarget	HANDLE		6471622	0					
ANR	6472080	UnaryOperationExpression	- 1		6471622	1					
ANR	6472081	UnaryOperator	-		6471622	0					
ANR	6472082	PrimaryExpression	1		6471622	1					
ANR	6472083	ElseStatement	else		6471622	0					
ANR	6472084	CompoundStatement		80:10:2939:2939	6471622	0					
ANR	6472085	ExpressionStatement	"r_debug_lstLibAdd ( pid , de . u . UnloadDll . lpBaseOfDll , ( HANDLE ) - 1 , ""not cached"" )"	471:4:15544:15621	6471622	0	True				
ANR	6472086	CallExpression	"r_debug_lstLibAdd ( pid , de . u . UnloadDll . lpBaseOfDll , ( HANDLE ) - 1 , ""not cached"" )"		6471622	0					
ANR	6472087	Callee	r_debug_lstLibAdd		6471622	0					
ANR	6472088	Identifier	r_debug_lstLibAdd		6471622	0					
ANR	6472089	ArgumentList	pid		6471622	1					
ANR	6472090	Argument	pid		6471622	0					
ANR	6472091	Identifier	pid		6471622	0					
ANR	6472092	Argument	de . u . UnloadDll . lpBaseOfDll		6471622	1					
ANR	6472093	MemberAccess	de . u . UnloadDll . lpBaseOfDll		6471622	0					
ANR	6472094	MemberAccess	de . u . UnloadDll		6471622	0					
ANR	6472095	MemberAccess	de . u		6471622	0					
ANR	6472096	Identifier	de		6471622	0					
ANR	6472097	Identifier	u		6471622	1					
ANR	6472098	Identifier	UnloadDll		6471622	1					
ANR	6472099	Identifier	lpBaseOfDll		6471622	1					
ANR	6472100	Argument	( HANDLE ) - 1		6471622	2					
ANR	6472101	CastExpression	( HANDLE ) - 1		6471622	0					
ANR	6472102	CastTarget	HANDLE		6471622	0					
ANR	6472103	UnaryOperationExpression	- 1		6471622	1					
ANR	6472104	UnaryOperator	-		6471622	0					
ANR	6472105	PrimaryExpression	1		6471622	1					
ANR	6472106	Argument	"""not cached"""		6471622	3					
ANR	6472107	PrimaryExpression	"""not cached"""		6471622	0					
ANR	6472108	IfStatement	if ( dllname )		6471622	1					
ANR	6472109	Condition	dllname	472:8:15631:15637	6471622	0	True				
ANR	6472110	Identifier	dllname		6471622	0					
ANR	6472111	ExpressionStatement	free ( dllname )	473:5:15645:15659	6471622	1	True				
ANR	6472112	CallExpression	free ( dllname )		6471622	0					
ANR	6472113	Callee	free		6471622	0					
ANR	6472114	Identifier	free		6471622	0					
ANR	6472115	ArgumentList	dllname		6471622	1					
ANR	6472116	Argument	dllname		6471622	0					
ANR	6472117	Identifier	dllname		6471622	0					
ANR	6472118	ExpressionStatement	next_event = 0	475:3:15669:15683	6471622	34	True				
ANR	6472119	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6472120	Identifier	next_event		6471622	0					
ANR	6472121	PrimaryExpression	0		6471622	1					
ANR	6472122	ExpressionStatement	ret = R_DEBUG_REASON_EXIT_LIB	476:3:15688:15717	6471622	35	True				
ANR	6472123	AssignmentExpression	ret = R_DEBUG_REASON_EXIT_LIB		6471622	0		=			
ANR	6472124	Identifier	ret		6471622	0					
ANR	6472125	Identifier	R_DEBUG_REASON_EXIT_LIB		6471622	1					
ANR	6472126	BreakStatement	break ;	477:3:15722:15727	6471622	36	True				
ANR	6472127	Label	case OUTPUT_DEBUG_STRING_EVENT :	478:2:15731:15761	6471622	37	True				
ANR	6472128	Identifier	OUTPUT_DEBUG_STRING_EVENT		6471622	0					
ANR	6472129	ExpressionStatement	"r_cons_printf ( ""(%d) Debug string\\n"" , pid )"	480:3:15809:15851	6471622	38	True				
ANR	6472130	CallExpression	"r_cons_printf ( ""(%d) Debug string\\n"" , pid )"		6471622	0					
ANR	6472131	Callee	r_cons_printf		6471622	0					
ANR	6472132	Identifier	r_cons_printf		6471622	0					
ANR	6472133	ArgumentList	"""(%d) Debug string\\n"""		6471622	1					
ANR	6472134	Argument	"""(%d) Debug string\\n"""		6471622	0					
ANR	6472135	PrimaryExpression	"""(%d) Debug string\\n"""		6471622	0					
ANR	6472136	Argument	pid		6471622	1					
ANR	6472137	Identifier	pid		6471622	0					
ANR	6472138	ExpressionStatement	r_cons_flush ( )	481:3:15856:15871	6471622	39	True				
ANR	6472139	CallExpression	r_cons_flush ( )		6471622	0					
ANR	6472140	Callee	r_cons_flush		6471622	0					
ANR	6472141	Identifier	r_cons_flush		6471622	0					
ANR	6472142	ArgumentList			6471622	1					
ANR	6472143	ExpressionStatement	"r_debug_native_continue ( dbg , pid , tid , - 1 )"	483:3:15877:15920	6471622	40	True				
ANR	6472144	CallExpression	"r_debug_native_continue ( dbg , pid , tid , - 1 )"		6471622	0					
ANR	6472145	Callee	r_debug_native_continue		6471622	0					
ANR	6472146	Identifier	r_debug_native_continue		6471622	0					
ANR	6472147	ArgumentList	dbg		6471622	1					
ANR	6472148	Argument	dbg		6471622	0					
ANR	6472149	Identifier	dbg		6471622	0					
ANR	6472150	Argument	pid		6471622	1					
ANR	6472151	Identifier	pid		6471622	0					
ANR	6472152	Argument	tid		6471622	2					
ANR	6472153	Identifier	tid		6471622	0					
ANR	6472154	Argument	- 1		6471622	3					
ANR	6472155	UnaryOperationExpression	- 1		6471622	0					
ANR	6472156	UnaryOperator	-		6471622	0					
ANR	6472157	PrimaryExpression	1		6471622	1					
ANR	6472158	ExpressionStatement	next_event = 1	484:3:15925:15939	6471622	41	True				
ANR	6472159	AssignmentExpression	next_event = 1		6471622	0		=			
ANR	6472160	Identifier	next_event		6471622	0					
ANR	6472161	PrimaryExpression	1		6471622	1					
ANR	6472162	BreakStatement	break ;	485:3:15944:15949	6471622	42	True				
ANR	6472163	Label	case RIP_EVENT :	486:2:15953:15967	6471622	43	True				
ANR	6472164	Identifier	RIP_EVENT		6471622	0					
ANR	6472165	ExpressionStatement	"r_cons_printf ( ""(%d) RIP event\\n"" , pid )"	488:3:16012:16051	6471622	44	True				
ANR	6472166	CallExpression	"r_cons_printf ( ""(%d) RIP event\\n"" , pid )"		6471622	0					
ANR	6472167	Callee	r_cons_printf		6471622	0					
ANR	6472168	Identifier	r_cons_printf		6471622	0					
ANR	6472169	ArgumentList	"""(%d) RIP event\\n"""		6471622	1					
ANR	6472170	Argument	"""(%d) RIP event\\n"""		6471622	0					
ANR	6472171	PrimaryExpression	"""(%d) RIP event\\n"""		6471622	0					
ANR	6472172	Argument	pid		6471622	1					
ANR	6472173	Identifier	pid		6471622	0					
ANR	6472174	ExpressionStatement	r_cons_flush ( )	489:3:16056:16071	6471622	45	True				
ANR	6472175	CallExpression	r_cons_flush ( )		6471622	0					
ANR	6472176	Callee	r_cons_flush		6471622	0					
ANR	6472177	Identifier	r_cons_flush		6471622	0					
ANR	6472178	ArgumentList			6471622	1					
ANR	6472179	ExpressionStatement	"r_debug_native_continue ( dbg , pid , tid , - 1 )"	490:3:16076:16119	6471622	46	True				
ANR	6472180	CallExpression	"r_debug_native_continue ( dbg , pid , tid , - 1 )"		6471622	0					
ANR	6472181	Callee	r_debug_native_continue		6471622	0					
ANR	6472182	Identifier	r_debug_native_continue		6471622	0					
ANR	6472183	ArgumentList	dbg		6471622	1					
ANR	6472184	Argument	dbg		6471622	0					
ANR	6472185	Identifier	dbg		6471622	0					
ANR	6472186	Argument	pid		6471622	1					
ANR	6472187	Identifier	pid		6471622	0					
ANR	6472188	Argument	tid		6471622	2					
ANR	6472189	Identifier	tid		6471622	0					
ANR	6472190	Argument	- 1		6471622	3					
ANR	6472191	UnaryOperationExpression	- 1		6471622	0					
ANR	6472192	UnaryOperator	-		6471622	0					
ANR	6472193	PrimaryExpression	1		6471622	1					
ANR	6472194	ExpressionStatement	next_event = 1	491:3:16124:16138	6471622	47	True				
ANR	6472195	AssignmentExpression	next_event = 1		6471622	0		=			
ANR	6472196	Identifier	next_event		6471622	0					
ANR	6472197	PrimaryExpression	1		6471622	1					
ANR	6472198	BreakStatement	break ;	493:3:16188:16193	6471622	48	True				
ANR	6472199	Label	case EXCEPTION_DEBUG_EVENT :	494:2:16197:16223	6471622	49	True				
ANR	6472200	Identifier	EXCEPTION_DEBUG_EVENT		6471622	0					
ANR	6472201	SwitchStatement	switch ( de . u . Exception . ExceptionRecord . ExceptionCode )		6471622	50					
ANR	6472202	Condition	de . u . Exception . ExceptionRecord . ExceptionCode	495:11:16236:16279	6471622	0	True				
ANR	6472203	MemberAccess	de . u . Exception . ExceptionRecord . ExceptionCode		6471622	0					
ANR	6472204	MemberAccess	de . u . Exception . ExceptionRecord		6471622	0					
ANR	6472205	MemberAccess	de . u . Exception		6471622	0					
ANR	6472206	MemberAccess	de . u		6471622	0					
ANR	6472207	Identifier	de		6471622	0					
ANR	6472208	Identifier	u		6471622	1					
ANR	6472209	Identifier	Exception		6471622	1					
ANR	6472210	Identifier	ExceptionRecord		6471622	1					
ANR	6472211	Identifier	ExceptionCode		6471622	1					
ANR	6472212	CompoundStatement		105:57:3683:3683	6471622	1					
ANR	6472213	Label	case 0x4000001f :	497:3:16298:16313	6471622	0	True				
ANR	6472214	Label	case EXCEPTION_BREAKPOINT :	499:3:16354:16379	6471622	1	True				
ANR	6472215	Identifier	EXCEPTION_BREAKPOINT		6471622	0					
ANR	6472216	ExpressionStatement	ret = R_DEBUG_REASON_BREAKPOINT	500:4:16385:16416	6471622	2	True				
ANR	6472217	AssignmentExpression	ret = R_DEBUG_REASON_BREAKPOINT		6471622	0		=			
ANR	6472218	Identifier	ret		6471622	0					
ANR	6472219	Identifier	R_DEBUG_REASON_BREAKPOINT		6471622	1					
ANR	6472220	ExpressionStatement	next_event = 0	501:4:16422:16436	6471622	3	True				
ANR	6472221	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6472222	Identifier	next_event		6471622	0					
ANR	6472223	PrimaryExpression	0		6471622	1					
ANR	6472224	BreakStatement	break ;	502:4:16442:16447	6471622	4	True				
ANR	6472225	Label	case 0x4000001e :	504:3:16463:16478	6471622	5	True				
ANR	6472226	Label	case EXCEPTION_SINGLE_STEP :	506:3:16520:16546	6471622	6	True				
ANR	6472227	Identifier	EXCEPTION_SINGLE_STEP		6471622	0					
ANR	6472228	ExpressionStatement	ret = R_DEBUG_REASON_STEP	507:4:16552:16577	6471622	7	True				
ANR	6472229	AssignmentExpression	ret = R_DEBUG_REASON_STEP		6471622	0		=			
ANR	6472230	Identifier	ret		6471622	0					
ANR	6472231	Identifier	R_DEBUG_REASON_STEP		6471622	1					
ANR	6472232	ExpressionStatement	next_event = 0	508:4:16583:16597	6471622	8	True				
ANR	6472233	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6472234	Identifier	next_event		6471622	0					
ANR	6472235	PrimaryExpression	0		6471622	1					
ANR	6472236	BreakStatement	break ;	509:4:16603:16608	6471622	9	True				
ANR	6472237	Label	default :	510:3:16613:16620	6471622	10	True				
ANR	6472238	Identifier	default		6471622	0					
ANR	6472239	IfStatement	if ( ! debug_exception_event ( & de ) )		6471622	11					
ANR	6472240	Condition	! debug_exception_event ( & de )	511:8:16630:16657	6471622	0	True				
ANR	6472241	UnaryOperationExpression	! debug_exception_event ( & de )		6471622	0					
ANR	6472242	UnaryOperator	!		6471622	0					
ANR	6472243	CallExpression	debug_exception_event ( & de )		6471622	1					
ANR	6472244	Callee	debug_exception_event		6471622	0					
ANR	6472245	Identifier	debug_exception_event		6471622	0					
ANR	6472246	ArgumentList	& de		6471622	1					
ANR	6472247	Argument	& de		6471622	0					
ANR	6472248	UnaryOperationExpression	& de		6471622	0					
ANR	6472249	UnaryOperator	&		6471622	0					
ANR	6472250	Identifier	de		6471622	1					
ANR	6472251	CompoundStatement		121:38:4061:4061	6471622	1					
ANR	6472252	ExpressionStatement	ret = R_DEBUG_REASON_TRAP	512:5:16667:16692	6471622	0	True				
ANR	6472253	AssignmentExpression	ret = R_DEBUG_REASON_TRAP		6471622	0		=			
ANR	6472254	Identifier	ret		6471622	0					
ANR	6472255	Identifier	R_DEBUG_REASON_TRAP		6471622	1					
ANR	6472256	ExpressionStatement	next_event = 0	513:5:16699:16713	6471622	1	True				
ANR	6472257	AssignmentExpression	next_event = 0		6471622	0		=			
ANR	6472258	Identifier	next_event		6471622	0					
ANR	6472259	PrimaryExpression	0		6471622	1					
ANR	6472260	ElseStatement	else		6471622	0					
ANR	6472261	CompoundStatement		125:9:4131:4131	6471622	0					
ANR	6472262	ExpressionStatement	next_event = 1	516:5:16737:16751	6471622	0	True				
ANR	6472263	AssignmentExpression	next_event = 1		6471622	0		=			
ANR	6472264	Identifier	next_event		6471622	0					
ANR	6472265	PrimaryExpression	1		6471622	1					
ANR	6472266	ExpressionStatement	"r_debug_native_continue ( dbg , pid , tid , - 1 )"	517:5:16758:16801	6471622	1	True				
ANR	6472267	CallExpression	"r_debug_native_continue ( dbg , pid , tid , - 1 )"		6471622	0					
ANR	6472268	Callee	r_debug_native_continue		6471622	0					
ANR	6472269	Identifier	r_debug_native_continue		6471622	0					
ANR	6472270	ArgumentList	dbg		6471622	1					
ANR	6472271	Argument	dbg		6471622	0					
ANR	6472272	Identifier	dbg		6471622	0					
ANR	6472273	Argument	pid		6471622	1					
ANR	6472274	Identifier	pid		6471622	0					
ANR	6472275	Argument	tid		6471622	2					
ANR	6472276	Identifier	tid		6471622	0					
ANR	6472277	Argument	- 1		6471622	3					
ANR	6472278	UnaryOperationExpression	- 1		6471622	0					
ANR	6472279	UnaryOperator	-		6471622	0					
ANR	6472280	PrimaryExpression	1		6471622	1					
ANR	6472281	BreakStatement	break ;	521:3:16818:16823	6471622	51	True				
ANR	6472282	Label	default :	522:2:16827:16834	6471622	52	True				
ANR	6472283	Identifier	default		6471622	0					
ANR	6472284	ExpressionStatement	"eprintf ( ""(%d) unknown event: %d\\n"" , pid , code )"	523:3:16839:16886	6471622	53	True				
ANR	6472285	CallExpression	"eprintf ( ""(%d) unknown event: %d\\n"" , pid , code )"		6471622	0					
ANR	6472286	Callee	eprintf		6471622	0					
ANR	6472287	Identifier	eprintf		6471622	0					
ANR	6472288	ArgumentList	"""(%d) unknown event: %d\\n"""		6471622	1					
ANR	6472289	Argument	"""(%d) unknown event: %d\\n"""		6471622	0					
ANR	6472290	PrimaryExpression	"""(%d) unknown event: %d\\n"""		6471622	0					
ANR	6472291	Argument	pid		6471622	1					
ANR	6472292	Identifier	pid		6471622	0					
ANR	6472293	Argument	code		6471622	2					
ANR	6472294	Identifier	code		6471622	0					
ANR	6472295	ReturnStatement	return - 1 ;	524:3:16891:16900	6471622	54	True				
ANR	6472296	UnaryOperationExpression	- 1		6471622	0					
ANR	6472297	UnaryOperator	-		6471622	0					
ANR	6472298	PrimaryExpression	1		6471622	1					
ANR	6472299	Condition	next_event	526:10:16916:16925	6471622	1	True				
ANR	6472300	Identifier	next_event		6471622	0					
ANR	6472301	ReturnStatement	return ret ;	527:1:16930:16940	6471622	8	True				
ANR	6472302	Identifier	ret		6471622	0					
ANR	6472303	ReturnType	int		6471622	1					
ANR	6472304	Identifier	w32_dbg_wait		6471622	2					
ANR	6472305	ParameterList	"RDebug * dbg , int pid"		6471622	3					
ANR	6472306	Parameter	RDebug * dbg	391:17:12576:12586	6471622	0	True				
ANR	6472307	ParameterType	RDebug *		6471622	0					
ANR	6472308	Identifier	dbg		6471622	1					
ANR	6472309	Parameter	int pid	391:30:12589:12595	6471622	1	True				
ANR	6472310	ParameterType	int		6471622	0					
ANR	6472311	Identifier	pid		6471622	1					
ANR	6472312	CFGEntryNode	ENTRY		6471622		True				
ANR	6472313	CFGExitNode	EXIT		6471622		True				
ANR	6472314	Symbol	de . u . Exception		6471622						
ANR	6472315	Symbol	de		6471622						
ANR	6472316	Symbol	pid		6471622						
ANR	6472317	Symbol	tid		6471622						
ANR	6472318	Symbol	de . u . CreateThread . lpThreadLocalBase		6471622						
ANR	6472319	Symbol	r_debug_findthread		6471622						
ANR	6472320	Symbol	r_debug_findlib		6471622						
ANR	6472321	Symbol	R_DEBUG_REASON_TRAP		6471622						
ANR	6472322	Symbol	de . u . CreateThread . lpStartAddress		6471622						
ANR	6472323	Symbol	de . u . CreateProcessInfo . hProcess		6471622						
ANR	6472324	Symbol	next_event		6471622						
ANR	6472325	Symbol	ret		6471622						
ANR	6472326	Symbol	de . dwThreadId		6471622						
ANR	6472327	Symbol	de . u . LoadDll		6471622						
ANR	6472328	Symbol	NULL		6471622						
ANR	6472329	Symbol	debug_exception_event		6471622						
ANR	6472330	Symbol	de . u . LoadDll . hFile		6471622						
ANR	6472331	Symbol	de . u		6471622						
ANR	6472332	Symbol	dbg		6471622						
ANR	6472333	Symbol	lstLibPtr		6471622						
ANR	6472334	Symbol	TRUE		6471622						
ANR	6472335	Symbol	& de		6471622						
ANR	6472336	Symbol	dllname		6471622						
ANR	6472337	Symbol	lstLibPtr -> hFile		6471622						
ANR	6472338	Symbol	de . u . CreateThread		6471622						
ANR	6472339	Symbol	de . u . LoadDll . lpBaseOfDll		6471622						
ANR	6472340	Symbol	R_DEBUG_REASON_STEP		6471622						
ANR	6472341	Symbol	w32_h2t		6471622						
ANR	6472342	Symbol	de . u . ExitProcess		6471622						
ANR	6472343	Symbol	de . u . ExitProcess . dwExitCode		6471622						
ANR	6472344	Symbol	get_file_name_from_handle		6471622						
ANR	6472345	Symbol	code		6471622						
ANR	6472346	Symbol	lstThreadPtr -> dwExitCode		6471622						
ANR	6472347	Symbol	de . u . UnloadDll . lpBaseOfDll		6471622						
ANR	6472348	Symbol	de . u . ExitThread . dwExitCode		6471622						
ANR	6472349	Symbol	* lstLibPtr		6471622						
ANR	6472350	Symbol	de . u . Exception . ExceptionRecord . ExceptionCode		6471622						
ANR	6472351	Symbol	de . u . Exception . ExceptionRecord		6471622						
ANR	6472352	Symbol	de . u . ExitThread		6471622						
ANR	6472353	Symbol	lstThreadPtr -> bFinished		6471622						
ANR	6472354	Symbol	de . u . UnloadDll		6471622						
ANR	6472355	Symbol	* lstThreadPtr		6471622						
ANR	6472356	Symbol	de . u . CreateProcessInfo		6471622						
ANR	6472357	Symbol	R_DEBUG_REASON_EXIT_TID		6471622						
ANR	6472358	Symbol	de . dwProcessId		6471622						
ANR	6472359	Symbol	INFINITE		6471622						
ANR	6472360	Symbol	* dbg		6471622						
ANR	6472361	Symbol	R_DEBUG_REASON_UNKNOWN		6471622						
ANR	6472362	Symbol	dbg -> tid		6471622						
ANR	6472363	Symbol	de . dwDebugEventCode		6471622						
ANR	6472364	Symbol	R_DEBUG_REASON_EXIT_LIB		6471622						
ANR	6472365	Symbol	R_DEBUG_REASON_BREAKPOINT		6471622						
ANR	6472366	Symbol	dbg -> pid		6471622						
ANR	6472367	Symbol	de . u . CreateThread . hThread		6471622						
ANR	6472368	Symbol	R_DEBUG_REASON_NEW_LIB		6471622						
ANR	6472369	Symbol	de . u . CreateProcessInfo . lpStartAddress		6471622						
ANR	6472370	Symbol	R_DEBUG_REASON_NEW_PID		6471622						
ANR	6472371	Symbol	FALSE		6471622						
ANR	6472372	Symbol	R_DEBUG_REASON_EXIT_PID		6471622						
ANR	6472373	Symbol	exited_already		6471622						
ANR	6472374	Symbol	R_DEBUG_REASON_NEW_TID		6471622						
ANR	6472375	Symbol	lstThreadPtr		6471622						
ANR	6472376	Symbol	WaitForDebugEvent		6471622						
ANR	6472377	Function	is_pe_hdr	530:0:16945:17355							
ANR	6472378	FunctionDef	is_pe_hdr (unsigned char * pe_hdr)		6472377	0					
ANR	6472379	CompoundStatement		530:38:16983:17355	6472377	0					
ANR	6472380	IdentifierDeclStatement	IMAGE_DOS_HEADER * dos_header = ( IMAGE_DOS_HEADER * ) pe_hdr ;	531:1:16986:17043	6472377	0	True				
ANR	6472381	IdentifierDecl	* dos_header = ( IMAGE_DOS_HEADER * ) pe_hdr		6472377	0					
ANR	6472382	IdentifierDeclType	IMAGE_DOS_HEADER *		6472377	0					
ANR	6472383	Identifier	dos_header		6472377	1					
ANR	6472384	AssignmentExpression	* dos_header = ( IMAGE_DOS_HEADER * ) pe_hdr		6472377	2		=			
ANR	6472385	Identifier	dos_header		6472377	0					
ANR	6472386	CastExpression	( IMAGE_DOS_HEADER * ) pe_hdr		6472377	1					
ANR	6472387	CastTarget	IMAGE_DOS_HEADER *		6472377	0					
ANR	6472388	Identifier	pe_hdr		6472377	1					
ANR	6472389	IdentifierDeclStatement	IMAGE_NT_HEADERS * nt_headers ;	532:1:17046:17074	6472377	1	True				
ANR	6472390	IdentifierDecl	* nt_headers		6472377	0					
ANR	6472391	IdentifierDeclType	IMAGE_NT_HEADERS *		6472377	0					
ANR	6472392	Identifier	nt_headers		6472377	1					
ANR	6472393	IfStatement	if ( dos_header -> e_magic == IMAGE_DOS_SIGNATURE )		6472377	2					
ANR	6472394	Condition	dos_header -> e_magic == IMAGE_DOS_SIGNATURE	534:5:17082:17123	6472377	0	True				
ANR	6472395	EqualityExpression	dos_header -> e_magic == IMAGE_DOS_SIGNATURE		6472377	0		==			
ANR	6472396	PtrMemberAccess	dos_header -> e_magic		6472377	0					
ANR	6472397	Identifier	dos_header		6472377	0					
ANR	6472398	Identifier	e_magic		6472377	1					
ANR	6472399	Identifier	IMAGE_DOS_SIGNATURE		6472377	1					
ANR	6472400	CompoundStatement		5:49:142:142	6472377	1					
ANR	6472401	ExpressionStatement	nt_headers = ( IMAGE_NT_HEADERS * ) ( ( char * ) dos_header + dos_header -> e_lfanew )	535:2:17130:17210	6472377	0	True				
ANR	6472402	AssignmentExpression	nt_headers = ( IMAGE_NT_HEADERS * ) ( ( char * ) dos_header + dos_header -> e_lfanew )		6472377	0		=			
ANR	6472403	Identifier	nt_headers		6472377	0					
ANR	6472404	CastExpression	( IMAGE_NT_HEADERS * ) ( ( char * ) dos_header + dos_header -> e_lfanew )		6472377	1					
ANR	6472405	CastTarget	IMAGE_NT_HEADERS *		6472377	0					
ANR	6472406	AdditiveExpression	( char * ) dos_header + dos_header -> e_lfanew		6472377	1		+			
ANR	6472407	CastExpression	( char * ) dos_header		6472377	0					
ANR	6472408	CastTarget	char *		6472377	0					
ANR	6472409	Identifier	dos_header		6472377	1					
ANR	6472410	PtrMemberAccess	dos_header -> e_lfanew		6472377	1					
ANR	6472411	Identifier	dos_header		6472377	0					
ANR	6472412	Identifier	e_lfanew		6472377	1					
ANR	6472413	IfStatement	if ( nt_headers -> Signature == IMAGE_NT_SIGNATURE )		6472377	1					
ANR	6472414	Condition	nt_headers -> Signature == IMAGE_NT_SIGNATURE	538:6:17276:17318	6472377	0	True				
ANR	6472415	EqualityExpression	nt_headers -> Signature == IMAGE_NT_SIGNATURE		6472377	0		==			
ANR	6472416	PtrMemberAccess	nt_headers -> Signature		6472377	0					
ANR	6472417	Identifier	nt_headers		6472377	0					
ANR	6472418	Identifier	Signature		6472377	1					
ANR	6472419	Identifier	IMAGE_NT_SIGNATURE		6472377	1					
ANR	6472420	ReturnStatement	return true ;	539:3:17324:17335	6472377	1	True				
ANR	6472421	Identifier	true		6472377	0					
ANR	6472422	ReturnStatement	return false ;	541:1:17341:17353	6472377	3	True				
ANR	6472423	Identifier	false		6472377	0					
ANR	6472424	ReturnType	bool		6472377	1					
ANR	6472425	Identifier	is_pe_hdr		6472377	2					
ANR	6472426	ParameterList	unsigned char * pe_hdr		6472377	3					
ANR	6472427	Parameter	unsigned char * pe_hdr	530:15:16960:16980	6472377	0	True				
ANR	6472428	ParameterType	unsigned char *		6472377	0					
ANR	6472429	Identifier	pe_hdr		6472377	1					
ANR	6472430	CFGEntryNode	ENTRY		6472377		True				
ANR	6472431	CFGExitNode	EXIT		6472377		True				
ANR	6472432	Symbol	* nt_headers		6472377						
ANR	6472433	Symbol	dos_header -> e_magic		6472377						
ANR	6472434	Symbol	dos_header -> e_lfanew		6472377						
ANR	6472435	Symbol	pe_hdr		6472377						
ANR	6472436	Symbol	IMAGE_DOS_SIGNATURE		6472377						
ANR	6472437	Symbol	nt_headers -> Signature		6472377						
ANR	6472438	Symbol	true		6472377						
ANR	6472439	Symbol	false		6472377						
ANR	6472440	Symbol	* dos_header		6472377						
ANR	6472441	Symbol	nt_headers		6472377						
ANR	6472442	Symbol	dos_header		6472377						
ANR	6472443	Symbol	IMAGE_NT_SIGNATURE		6472377						
ANR	6472444	Function	w32_open_thread	544:0:17358:17574							
ANR	6472445	FunctionDef	"w32_open_thread (int pid , int tid)"		6472444	0					
ANR	6472446	CompoundStatement		544:48:17406:17574	6472444	0					
ANR	6472447	IdentifierDeclStatement	"HANDLE thread = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , tid ) ;"	545:1:17409:17467	6472444	0	True				
ANR	6472448	IdentifierDecl	"thread = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , tid )"		6472444	0					
ANR	6472449	IdentifierDeclType	HANDLE		6472444	0					
ANR	6472450	Identifier	thread		6472444	1					
ANR	6472451	AssignmentExpression	"thread = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , tid )"		6472444	2		=			
ANR	6472452	Identifier	thread		6472444	0					
ANR	6472453	CallExpression	"w32_OpenThread ( THREAD_ALL_ACCESS , 0 , tid )"		6472444	1					
ANR	6472454	Callee	w32_OpenThread		6472444	0					
ANR	6472455	Identifier	w32_OpenThread		6472444	0					
ANR	6472456	ArgumentList	THREAD_ALL_ACCESS		6472444	1					
ANR	6472457	Argument	THREAD_ALL_ACCESS		6472444	0					
ANR	6472458	Identifier	THREAD_ALL_ACCESS		6472444	0					
ANR	6472459	Argument	0		6472444	1					
ANR	6472460	PrimaryExpression	0		6472444	0					
ANR	6472461	Argument	tid		6472444	2					
ANR	6472462	Identifier	tid		6472444	0					
ANR	6472463	IfStatement	if ( thread == INVALID_HANDLE_VALUE )		6472444	1					
ANR	6472464	Condition	thread == INVALID_HANDLE_VALUE	546:5:17474:17503	6472444	0	True				
ANR	6472465	EqualityExpression	thread == INVALID_HANDLE_VALUE		6472444	0		==			
ANR	6472466	Identifier	thread		6472444	0					
ANR	6472467	Identifier	INVALID_HANDLE_VALUE		6472444	1					
ANR	6472468	CompoundStatement		3:37:99:99	6472444	1					
ANR	6472469	ExpressionStatement	"r_sys_perror ( ""w32_open_thread/OpenThread"" )"	547:2:17510:17553	6472444	0	True				
ANR	6472470	CallExpression	"r_sys_perror ( ""w32_open_thread/OpenThread"" )"		6472444	0					
ANR	6472471	Callee	r_sys_perror		6472444	0					
ANR	6472472	Identifier	r_sys_perror		6472444	0					
ANR	6472473	ArgumentList	"""w32_open_thread/OpenThread"""		6472444	1					
ANR	6472474	Argument	"""w32_open_thread/OpenThread"""		6472444	0					
ANR	6472475	PrimaryExpression	"""w32_open_thread/OpenThread"""		6472444	0					
ANR	6472476	ReturnStatement	return thread ;	549:1:17559:17572	6472444	2	True				
ANR	6472477	Identifier	thread		6472444	0					
ANR	6472478	ReturnType	static HANDLE		6472444	1					
ANR	6472479	Identifier	w32_open_thread		6472444	2					
ANR	6472480	ParameterList	"int pid , int tid"		6472444	3					
ANR	6472481	Parameter	int pid	544:30:17388:17394	6472444	0	True				
ANR	6472482	ParameterType	int		6472444	0					
ANR	6472483	Identifier	pid		6472444	1					
ANR	6472484	Parameter	int tid	544:39:17397:17403	6472444	1	True				
ANR	6472485	ParameterType	int		6472444	0					
ANR	6472486	Identifier	tid		6472444	1					
ANR	6472487	CFGEntryNode	ENTRY		6472444		True				
ANR	6472488	CFGExitNode	EXIT		6472444		True				
ANR	6472489	Symbol	w32_OpenThread		6472444						
ANR	6472490	Symbol	THREAD_ALL_ACCESS		6472444						
ANR	6472491	Symbol	pid		6472444						
ANR	6472492	Symbol	thread		6472444						
ANR	6472493	Symbol	INVALID_HANDLE_VALUE		6472444						
ANR	6472494	Symbol	tid		6472444						
ANR	6472495	Function	w32_thread_list	552:0:17577:18848							
ANR	6472496	FunctionDef	"w32_thread_list (int pid , RList * list)"		6472495	0					
ANR	6472497	CompoundStatement		552:45:17622:18848	6472495	0					
ANR	6472498	IdentifierDeclStatement	HANDLE th ;	553:8:17632:17641	6472495	0	True				
ANR	6472499	IdentifierDecl	th		6472495	0					
ANR	6472500	IdentifierDeclType	HANDLE		6472495	0					
ANR	6472501	Identifier	th		6472495	1					
ANR	6472502	IdentifierDeclStatement	HANDLE thid ;	554:8:17651:17662	6472495	1	True				
ANR	6472503	IdentifierDecl	thid		6472495	0					
ANR	6472504	IdentifierDeclType	HANDLE		6472495	0					
ANR	6472505	Identifier	thid		6472495	1					
ANR	6472506	IdentifierDeclStatement	THREADENTRY32 te32 ;	555:8:17672:17690	6472495	2	True				
ANR	6472507	IdentifierDecl	te32		6472495	0					
ANR	6472508	IdentifierDeclType	THREADENTRY32		6472495	0					
ANR	6472509	Identifier	te32		6472495	1					
ANR	6472510	ExpressionStatement	te32 . dwSize = sizeof ( THREADENTRY32 )	557:8:17701:17736	6472495	3	True				
ANR	6472511	AssignmentExpression	te32 . dwSize = sizeof ( THREADENTRY32 )		6472495	0		=			
ANR	6472512	MemberAccess	te32 . dwSize		6472495	0					
ANR	6472513	Identifier	te32		6472495	0					
ANR	6472514	Identifier	dwSize		6472495	1					
ANR	6472515	SizeofExpression	sizeof ( THREADENTRY32 )		6472495	1					
ANR	6472516	Sizeof	sizeof		6472495	0					
ANR	6472517	SizeofOperand	THREADENTRY32		6472495	1					
ANR	6472518	IfStatement	if ( ! w32_OpenThread )		6472495	4					
ANR	6472519	Condition	! w32_OpenThread	559:6:17745:17759	6472495	0	True				
ANR	6472520	UnaryOperationExpression	! w32_OpenThread		6472495	0					
ANR	6472521	UnaryOperator	!		6472495	0					
ANR	6472522	Identifier	w32_OpenThread		6472495	1					
ANR	6472523	CompoundStatement		8:23:139:139	6472495	1					
ANR	6472524	ExpressionStatement	"eprintf ( ""w32_thread_list: no w32_OpenThread?\\n"" )"	560:3:17767:17815	6472495	0	True				
ANR	6472525	CallExpression	"eprintf ( ""w32_thread_list: no w32_OpenThread?\\n"" )"		6472495	0					
ANR	6472526	Callee	eprintf		6472495	0					
ANR	6472527	Identifier	eprintf		6472495	0					
ANR	6472528	ArgumentList	"""w32_thread_list: no w32_OpenThread?\\n"""		6472495	1					
ANR	6472529	Argument	"""w32_thread_list: no w32_OpenThread?\\n"""		6472495	0					
ANR	6472530	PrimaryExpression	"""w32_thread_list: no w32_OpenThread?\\n"""		6472495	0					
ANR	6472531	ReturnStatement	return list ;	561:3:17820:17831	6472495	1	True				
ANR	6472532	Identifier	list		6472495	0					
ANR	6472533	ExpressionStatement	"th = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , pid )"	563:8:17845:17898	6472495	5	True				
ANR	6472534	AssignmentExpression	"th = CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , pid )"		6472495	0		=			
ANR	6472535	Identifier	th		6472495	0					
ANR	6472536	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPTHREAD , pid )"		6472495	1					
ANR	6472537	Callee	CreateToolhelp32Snapshot		6472495	0					
ANR	6472538	Identifier	CreateToolhelp32Snapshot		6472495	0					
ANR	6472539	ArgumentList	TH32CS_SNAPTHREAD		6472495	1					
ANR	6472540	Argument	TH32CS_SNAPTHREAD		6472495	0					
ANR	6472541	Identifier	TH32CS_SNAPTHREAD		6472495	0					
ANR	6472542	Argument	pid		6472495	1					
ANR	6472543	Identifier	pid		6472495	0					
ANR	6472544	IfStatement	"if ( th == INVALID_HANDLE_VALUE || ! Thread32First ( th , & te32 ) )"		6472495	6					
ANR	6472545	Condition	"th == INVALID_HANDLE_VALUE || ! Thread32First ( th , & te32 )"	564:11:17911:17966	6472495	0	True				
ANR	6472546	OrExpression	"th == INVALID_HANDLE_VALUE || ! Thread32First ( th , & te32 )"		6472495	0		||			
ANR	6472547	EqualityExpression	th == INVALID_HANDLE_VALUE		6472495	0		==			
ANR	6472548	Identifier	th		6472495	0					
ANR	6472549	Identifier	INVALID_HANDLE_VALUE		6472495	1					
ANR	6472550	UnaryOperationExpression	"! Thread32First ( th , & te32 )"		6472495	1					
ANR	6472551	UnaryOperator	!		6472495	0					
ANR	6472552	CallExpression	"Thread32First ( th , & te32 )"		6472495	1					
ANR	6472553	Callee	Thread32First		6472495	0					
ANR	6472554	Identifier	Thread32First		6472495	0					
ANR	6472555	ArgumentList	th		6472495	1					
ANR	6472556	Argument	th		6472495	0					
ANR	6472557	Identifier	th		6472495	0					
ANR	6472558	Argument	& te32		6472495	1					
ANR	6472559	UnaryOperationExpression	& te32		6472495	0					
ANR	6472560	UnaryOperator	&		6472495	0					
ANR	6472561	Identifier	te32		6472495	1					
ANR	6472562	GotoStatement	goto err_load_th ;	565:16:17985:18001	6472495	1	True				
ANR	6472563	Identifier	err_load_th		6472495	0					
ANR	6472564	DoStatement	do		6472495	7					
ANR	6472565	CompoundStatement		15:11:391:391	6472495	0					
ANR	6472566	IfStatement	if ( te32 . th32OwnerProcessID == pid )		6472495	0					
ANR	6472567	Condition	te32 . th32OwnerProcessID == pid	568:16:18065:18094	6472495	0	True				
ANR	6472568	EqualityExpression	te32 . th32OwnerProcessID == pid		6472495	0		==			
ANR	6472569	MemberAccess	te32 . th32OwnerProcessID		6472495	0					
ANR	6472570	Identifier	te32		6472495	0					
ANR	6472571	Identifier	th32OwnerProcessID		6472495	1					
ANR	6472572	Identifier	pid		6472495	1					
ANR	6472573	CompoundStatement		21:8:537:815	6472495	1					
ANR	6472574	Statement	75	572:5:18157:18158	6472495	0	True				
ANR	6472575	ClassDefStatement	struct tagTHREADENTRY32 { 76 DWORD dwSize ; 77 DWORD cntUsage ; 78 DWORD th32ThreadID ; 79 DWORD th32OwnerProcessID ; 80 LONG tpBasePri ; 81 LONG tpDeltaPri ; 82 DWORD dwFlags ; 83 }	572:16:18168:18438	6472495	1	True				
ANR	6472576	Identifier	tagTHREADENTRY32		6472495	0					
ANR	6472577	ExpressionStatement		580:9:18439:18439	6472495	2	True				
ANR	6472578	ExpressionStatement	"thid = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , te32 . th32ThreadID )"	582:4:18452:18515	6472495	3	True				
ANR	6472579	AssignmentExpression	"thid = w32_OpenThread ( THREAD_ALL_ACCESS , 0 , te32 . th32ThreadID )"		6472495	0		=			
ANR	6472580	Identifier	thid		6472495	0					
ANR	6472581	CallExpression	"w32_OpenThread ( THREAD_ALL_ACCESS , 0 , te32 . th32ThreadID )"		6472495	1					
ANR	6472582	Callee	w32_OpenThread		6472495	0					
ANR	6472583	Identifier	w32_OpenThread		6472495	0					
ANR	6472584	ArgumentList	THREAD_ALL_ACCESS		6472495	1					
ANR	6472585	Argument	THREAD_ALL_ACCESS		6472495	0					
ANR	6472586	Identifier	THREAD_ALL_ACCESS		6472495	0					
ANR	6472587	Argument	0		6472495	1					
ANR	6472588	PrimaryExpression	0		6472495	0					
ANR	6472589	Argument	te32 . th32ThreadID		6472495	2					
ANR	6472590	MemberAccess	te32 . th32ThreadID		6472495	0					
ANR	6472591	Identifier	te32		6472495	0					
ANR	6472592	Identifier	th32ThreadID		6472495	1					
ANR	6472593	IfStatement	if ( ! thid )		6472495	4					
ANR	6472594	Condition	! thid	583:8:18525:18529	6472495	0	True				
ANR	6472595	UnaryOperationExpression	! thid		6472495	0					
ANR	6472596	UnaryOperator	!		6472495	0					
ANR	6472597	Identifier	thid		6472495	1					
ANR	6472598	CompoundStatement		32:15:909:909	6472495	1					
ANR	6472599	ExpressionStatement	"r_sys_perror ( ""w32_thread_list/OpenThread"" )"	584:5:18539:18582	6472495	0	True				
ANR	6472600	CallExpression	"r_sys_perror ( ""w32_thread_list/OpenThread"" )"		6472495	0					
ANR	6472601	Callee	r_sys_perror		6472495	0					
ANR	6472602	Identifier	r_sys_perror		6472495	0					
ANR	6472603	ArgumentList	"""w32_thread_list/OpenThread"""		6472495	1					
ANR	6472604	Argument	"""w32_thread_list/OpenThread"""		6472495	0					
ANR	6472605	PrimaryExpression	"""w32_thread_list/OpenThread"""		6472495	0					
ANR	6472606	GotoStatement	goto err_load_th ;	585:5:18589:18605	6472495	1	True				
ANR	6472607	Identifier	err_load_th		6472495	0					
ANR	6472608	ExpressionStatement	"r_list_append ( list , r_debug_pid_new ( ""???"" , te32 . th32ThreadID , 0 , 's' , 0 ) )"	587:4:18617:18692	6472495	5	True				
ANR	6472609	CallExpression	"r_list_append ( list , r_debug_pid_new ( ""???"" , te32 . th32ThreadID , 0 , 's' , 0 ) )"		6472495	0					
ANR	6472610	Callee	r_list_append		6472495	0					
ANR	6472611	Identifier	r_list_append		6472495	0					
ANR	6472612	ArgumentList	list		6472495	1					
ANR	6472613	Argument	list		6472495	0					
ANR	6472614	Identifier	list		6472495	0					
ANR	6472615	Argument	"r_debug_pid_new ( ""???"" , te32 . th32ThreadID , 0 , 's' , 0 )"		6472495	1					
ANR	6472616	CallExpression	"r_debug_pid_new ( ""???"" , te32 . th32ThreadID , 0 , 's' , 0 )"		6472495	0					
ANR	6472617	Callee	r_debug_pid_new		6472495	0					
ANR	6472618	Identifier	r_debug_pid_new		6472495	0					
ANR	6472619	ArgumentList	"""???"""		6472495	1					
ANR	6472620	Argument	"""???"""		6472495	0					
ANR	6472621	PrimaryExpression	"""???"""		6472495	0					
ANR	6472622	Argument	te32 . th32ThreadID		6472495	1					
ANR	6472623	MemberAccess	te32 . th32ThreadID		6472495	0					
ANR	6472624	Identifier	te32		6472495	0					
ANR	6472625	Identifier	th32ThreadID		6472495	1					
ANR	6472626	Argument	0		6472495	2					
ANR	6472627	PrimaryExpression	0		6472495	0					
ANR	6472628	Argument	's'		6472495	3					
ANR	6472629	PrimaryExpression	's'		6472495	0					
ANR	6472630	Argument	0		6472495	4					
ANR	6472631	PrimaryExpression	0		6472495	0					
ANR	6472632	Condition	"Thread32Next ( th , & te32 )"	589:17:18725:18748	6472495	1	True				
ANR	6472633	CallExpression	"Thread32Next ( th , & te32 )"		6472495	0					
ANR	6472634	Callee	Thread32Next		6472495	0					
ANR	6472635	Identifier	Thread32Next		6472495	0					
ANR	6472636	ArgumentList	th		6472495	1					
ANR	6472637	Argument	th		6472495	0					
ANR	6472638	Identifier	th		6472495	0					
ANR	6472639	Argument	& te32		6472495	1					
ANR	6472640	UnaryOperationExpression	& te32		6472495	0					
ANR	6472641	UnaryOperator	&		6472495	0					
ANR	6472642	Identifier	te32		6472495	1					
ANR	6472643	Label	err_load_th :	590:0:18752:18763	6472495	8	True				
ANR	6472644	Identifier	err_load_th		6472495	0					
ANR	6472645	IfStatement	if ( th != INVALID_HANDLE_VALUE )		6472495	9					
ANR	6472646	Condition	th != INVALID_HANDLE_VALUE	591:11:18776:18801	6472495	0	True				
ANR	6472647	EqualityExpression	th != INVALID_HANDLE_VALUE		6472495	0		!=			
ANR	6472648	Identifier	th		6472495	0					
ANR	6472649	Identifier	INVALID_HANDLE_VALUE		6472495	1					
ANR	6472650	ExpressionStatement	CloseHandle ( th )	592:12:18816:18832	6472495	1	True				
ANR	6472651	CallExpression	CloseHandle ( th )		6472495	0					
ANR	6472652	Callee	CloseHandle		6472495	0					
ANR	6472653	Identifier	CloseHandle		6472495	0					
ANR	6472654	ArgumentList	th		6472495	1					
ANR	6472655	Argument	th		6472495	0					
ANR	6472656	Identifier	th		6472495	0					
ANR	6472657	ReturnStatement	return list ;	593:1:18835:18846	6472495	10	True				
ANR	6472658	Identifier	list		6472495	0					
ANR	6472659	ReturnType	RList *		6472495	1					
ANR	6472660	Identifier	w32_thread_list		6472495	2					
ANR	6472661	ParameterList	"int pid , RList * list"		6472495	3					
ANR	6472662	Parameter	int pid	552:23:17600:17606	6472495	0	True				
ANR	6472663	ParameterType	int		6472495	0					
ANR	6472664	Identifier	pid		6472495	1					
ANR	6472665	Parameter	RList * list	552:32:17609:17619	6472495	1	True				
ANR	6472666	ParameterType	RList *		6472495	0					
ANR	6472667	Identifier	list		6472495	1					
ANR	6472668	CFGEntryNode	ENTRY		6472495		True				
ANR	6472669	CFGExitNode	EXIT		6472495		True				
ANR	6472670	Symbol	CreateToolhelp32Snapshot		6472495						
ANR	6472671	Symbol	r_debug_pid_new		6472495						
ANR	6472672	Symbol	te32		6472495						
ANR	6472673	Symbol	Thread32Next		6472495						
ANR	6472674	Symbol	pid		6472495						
ANR	6472675	Symbol	list		6472495						
ANR	6472676	Symbol	te32 . th32ThreadID		6472495						
ANR	6472677	Symbol	INVALID_HANDLE_VALUE		6472495						
ANR	6472678	Symbol	th		6472495						
ANR	6472679	Symbol	w32_OpenThread		6472495						
ANR	6472680	Symbol	te32 . dwSize		6472495						
ANR	6472681	Symbol	THREAD_ALL_ACCESS		6472495						
ANR	6472682	Symbol	TH32CS_SNAPTHREAD		6472495						
ANR	6472683	Symbol	te32 . th32OwnerProcessID		6472495						
ANR	6472684	Symbol	thid		6472495						
ANR	6472685	Symbol	& te32		6472495						
ANR	6472686	Symbol	Thread32First		6472495						
ANR	6472687	Function	build_debug_pid	596:0:18851:19497							
ANR	6472688	FunctionDef	build_debug_pid (PROCESSENTRY32 * pe)		6472687	0					
ANR	6472689	CompoundStatement		596:54:18905:19497	6472687	0					
ANR	6472690	IdentifierDeclStatement	TCHAR image_name [ MAX_PATH + 1 ] ;	597:1:18908:18938	6472687	0	True				
ANR	6472691	IdentifierDecl	image_name [ MAX_PATH + 1 ]		6472687	0					
ANR	6472692	IdentifierDeclType	TCHAR [ MAX_PATH + 1 ]		6472687	0					
ANR	6472693	Identifier	image_name		6472687	1					
ANR	6472694	AdditiveExpression	MAX_PATH + 1		6472687	2		+			
ANR	6472695	Identifier	MAX_PATH		6472687	0					
ANR	6472696	PrimaryExpression	1		6472687	1					
ANR	6472697	IdentifierDeclStatement	DWORD length = MAX_PATH ;	598:1:18941:18964	6472687	1	True				
ANR	6472698	IdentifierDecl	length = MAX_PATH		6472687	0					
ANR	6472699	IdentifierDeclType	DWORD		6472687	0					
ANR	6472700	Identifier	length		6472687	1					
ANR	6472701	AssignmentExpression	length = MAX_PATH		6472687	2		=			
ANR	6472702	Identifier	MAX_PATH		6472687	0					
ANR	6472703	Identifier	MAX_PATH		6472687	1					
ANR	6472704	IdentifierDeclStatement	RDebugPid * ret ;	599:1:18967:18981	6472687	2	True				
ANR	6472705	IdentifierDecl	* ret		6472687	0					
ANR	6472706	IdentifierDeclType	RDebugPid *		6472687	0					
ANR	6472707	Identifier	ret		6472687	1					
ANR	6472708	IdentifierDeclStatement	char * name ;	600:1:18984:18994	6472687	3	True				
ANR	6472709	IdentifierDecl	* name		6472687	0					
ANR	6472710	IdentifierDeclType	char *		6472687	0					
ANR	6472711	Identifier	name		6472687	1					
ANR	6472712	IdentifierDeclStatement	"HANDLE process = w32_OpenProcess ( 0x1000 , FALSE , pe -> th32ProcessID ) ;"	601:1:18997:19103	6472687	4	True				
ANR	6472713	IdentifierDecl	"process = w32_OpenProcess ( 0x1000 , FALSE , pe -> th32ProcessID )"		6472687	0					
ANR	6472714	IdentifierDeclType	HANDLE		6472687	0					
ANR	6472715	Identifier	process		6472687	1					
ANR	6472716	AssignmentExpression	"process = w32_OpenProcess ( 0x1000 , FALSE , pe -> th32ProcessID )"		6472687	2		=			
ANR	6472717	Identifier	process		6472687	0					
ANR	6472718	CallExpression	"w32_OpenProcess ( 0x1000 , FALSE , pe -> th32ProcessID )"		6472687	1					
ANR	6472719	Callee	w32_OpenProcess		6472687	0					
ANR	6472720	Identifier	w32_OpenProcess		6472687	0					
ANR	6472721	ArgumentList	0x1000		6472687	1					
ANR	6472722	Argument	0x1000		6472687	0					
ANR	6472723	PrimaryExpression	0x1000		6472687	0					
ANR	6472724	Argument	FALSE		6472687	1					
ANR	6472725	Identifier	FALSE		6472687	0					
ANR	6472726	Argument	pe -> th32ProcessID		6472687	2					
ANR	6472727	PtrMemberAccess	pe -> th32ProcessID		6472687	0					
ANR	6472728	Identifier	pe		6472687	0					
ANR	6472729	Identifier	th32ProcessID		6472687	1					
ANR	6472730	ExpressionStatement	* image_name = '\\0'	604:1:19107:19125	6472687	5	True				
ANR	6472731	AssignmentExpression	* image_name = '\\0'		6472687	0		=			
ANR	6472732	UnaryOperationExpression	* image_name		6472687	0					
ANR	6472733	UnaryOperator	*		6472687	0					
ANR	6472734	Identifier	image_name		6472687	1					
ANR	6472735	PrimaryExpression	'\\0'		6472687	1					
ANR	6472736	IfStatement	if ( process )		6472687	6					
ANR	6472737	Condition	process	605:5:19132:19138	6472687	0	True				
ANR	6472738	Identifier	process		6472687	0					
ANR	6472739	CompoundStatement		10:14:235:235	6472687	1					
ANR	6472740	IfStatement	if ( w32_QueryFullProcessImageName )		6472687	0					
ANR	6472741	Condition	w32_QueryFullProcessImageName	606:6:19149:19177	6472687	0	True				
ANR	6472742	Identifier	w32_QueryFullProcessImageName		6472687	0					
ANR	6472743	CompoundStatement		11:37:274:274	6472687	1					
ANR	6472744	ExpressionStatement	"w32_QueryFullProcessImageName ( process , 0 , image_name , & length )"	607:3:19185:19248	6472687	0	True				
ANR	6472745	CallExpression	"w32_QueryFullProcessImageName ( process , 0 , image_name , & length )"		6472687	0					
ANR	6472746	Callee	w32_QueryFullProcessImageName		6472687	0					
ANR	6472747	Identifier	w32_QueryFullProcessImageName		6472687	0					
ANR	6472748	ArgumentList	process		6472687	1					
ANR	6472749	Argument	process		6472687	0					
ANR	6472750	Identifier	process		6472687	0					
ANR	6472751	Argument	0		6472687	1					
ANR	6472752	PrimaryExpression	0		6472687	0					
ANR	6472753	Argument	image_name		6472687	2					
ANR	6472754	Identifier	image_name		6472687	0					
ANR	6472755	Argument	& length		6472687	3					
ANR	6472756	UnaryOperationExpression	& length		6472687	0					
ANR	6472757	UnaryOperator	&		6472687	0					
ANR	6472758	Identifier	length		6472687	1					
ANR	6472759	ExpressionStatement	CloseHandle ( process )	609:2:19256:19276	6472687	1	True				
ANR	6472760	CallExpression	CloseHandle ( process )		6472687	0					
ANR	6472761	Callee	CloseHandle		6472687	0					
ANR	6472762	Identifier	CloseHandle		6472687	0					
ANR	6472763	ArgumentList	process		6472687	1					
ANR	6472764	Argument	process		6472687	0					
ANR	6472765	Identifier	process		6472687	0					
ANR	6472766	IfStatement	if ( * image_name )		6472687	7					
ANR	6472767	Condition	* image_name	611:5:19286:19296	6472687	0	True				
ANR	6472768	UnaryOperationExpression	* image_name		6472687	0					
ANR	6472769	UnaryOperator	*		6472687	0					
ANR	6472770	Identifier	image_name		6472687	1					
ANR	6472771	CompoundStatement		16:18:393:393	6472687	1					
ANR	6472772	ExpressionStatement	name = r_sys_conv_win_to_utf8 ( image_name )	612:2:19303:19345	6472687	0	True				
ANR	6472773	AssignmentExpression	name = r_sys_conv_win_to_utf8 ( image_name )		6472687	0		=			
ANR	6472774	Identifier	name		6472687	0					
ANR	6472775	CallExpression	r_sys_conv_win_to_utf8 ( image_name )		6472687	1					
ANR	6472776	Callee	r_sys_conv_win_to_utf8		6472687	0					
ANR	6472777	Identifier	r_sys_conv_win_to_utf8		6472687	0					
ANR	6472778	ArgumentList	image_name		6472687	1					
ANR	6472779	Argument	image_name		6472687	0					
ANR	6472780	Identifier	image_name		6472687	0					
ANR	6472781	ElseStatement	else		6472687	0					
ANR	6472782	CompoundStatement		18:8:449:449	6472687	0					
ANR	6472783	ExpressionStatement	name = r_sys_conv_win_to_utf8 ( pe -> szExeFile )	614:2:19359:19404	6472687	0	True				
ANR	6472784	AssignmentExpression	name = r_sys_conv_win_to_utf8 ( pe -> szExeFile )		6472687	0		=			
ANR	6472785	Identifier	name		6472687	0					
ANR	6472786	CallExpression	r_sys_conv_win_to_utf8 ( pe -> szExeFile )		6472687	1					
ANR	6472787	Callee	r_sys_conv_win_to_utf8		6472687	0					
ANR	6472788	Identifier	r_sys_conv_win_to_utf8		6472687	0					
ANR	6472789	ArgumentList	pe -> szExeFile		6472687	1					
ANR	6472790	Argument	pe -> szExeFile		6472687	0					
ANR	6472791	PtrMemberAccess	pe -> szExeFile		6472687	0					
ANR	6472792	Identifier	pe		6472687	0					
ANR	6472793	Identifier	szExeFile		6472687	1					
ANR	6472794	ExpressionStatement	"ret = r_debug_pid_new ( name , pe -> th32ProcessID , 0 , 's' , 0 )"	616:1:19410:19468	6472687	8	True				
ANR	6472795	AssignmentExpression	"ret = r_debug_pid_new ( name , pe -> th32ProcessID , 0 , 's' , 0 )"		6472687	0		=			
ANR	6472796	Identifier	ret		6472687	0					
ANR	6472797	CallExpression	"r_debug_pid_new ( name , pe -> th32ProcessID , 0 , 's' , 0 )"		6472687	1					
ANR	6472798	Callee	r_debug_pid_new		6472687	0					
ANR	6472799	Identifier	r_debug_pid_new		6472687	0					
ANR	6472800	ArgumentList	name		6472687	1					
ANR	6472801	Argument	name		6472687	0					
ANR	6472802	Identifier	name		6472687	0					
ANR	6472803	Argument	pe -> th32ProcessID		6472687	1					
ANR	6472804	PtrMemberAccess	pe -> th32ProcessID		6472687	0					
ANR	6472805	Identifier	pe		6472687	0					
ANR	6472806	Identifier	th32ProcessID		6472687	1					
ANR	6472807	Argument	0		6472687	2					
ANR	6472808	PrimaryExpression	0		6472687	0					
ANR	6472809	Argument	's'		6472687	3					
ANR	6472810	PrimaryExpression	's'		6472687	0					
ANR	6472811	Argument	0		6472687	4					
ANR	6472812	PrimaryExpression	0		6472687	0					
ANR	6472813	ExpressionStatement	free ( name )	617:1:19471:19482	6472687	9	True				
ANR	6472814	CallExpression	free ( name )		6472687	0					
ANR	6472815	Callee	free		6472687	0					
ANR	6472816	Identifier	free		6472687	0					
ANR	6472817	ArgumentList	name		6472687	1					
ANR	6472818	Argument	name		6472687	0					
ANR	6472819	Identifier	name		6472687	0					
ANR	6472820	ReturnStatement	return ret ;	618:1:19485:19495	6472687	10	True				
ANR	6472821	Identifier	ret		6472687	0					
ANR	6472822	ReturnType	static RDebugPid *		6472687	1					
ANR	6472823	Identifier	build_debug_pid		6472687	2					
ANR	6472824	ParameterList	PROCESSENTRY32 * pe		6472687	3					
ANR	6472825	Parameter	PROCESSENTRY32 * pe	596:34:18885:18902	6472687	0	True				
ANR	6472826	ParameterType	PROCESSENTRY32 *		6472687	0					
ANR	6472827	Identifier	pe		6472687	1					
ANR	6472828	CFGEntryNode	ENTRY		6472687		True				
ANR	6472829	CFGExitNode	EXIT		6472687		True				
ANR	6472830	Symbol	ret		6472687						
ANR	6472831	Symbol	r_debug_pid_new		6472687						
ANR	6472832	Symbol	process		6472687						
ANR	6472833	Symbol	& length		6472687						
ANR	6472834	Symbol	length		6472687						
ANR	6472835	Symbol	pe -> th32ProcessID		6472687						
ANR	6472836	Symbol	w32_QueryFullProcessImageName		6472687						
ANR	6472837	Symbol	w32_OpenProcess		6472687						
ANR	6472838	Symbol	image_name		6472687						
ANR	6472839	Symbol	pe		6472687						
ANR	6472840	Symbol	name		6472687						
ANR	6472841	Symbol	* pe		6472687						
ANR	6472842	Symbol	MAX_PATH		6472687						
ANR	6472843	Symbol	FALSE		6472687						
ANR	6472844	Symbol	* image_name		6472687						
ANR	6472845	Symbol	r_sys_conv_win_to_utf8		6472687						
ANR	6472846	Symbol	pe -> szExeFile		6472687						
ANR	6472847	Function	w32_pids	621:0:19500:20303							
ANR	6472848	FunctionDef	"w32_pids (int pid , RList * list)"		6472847	0					
ANR	6472849	CompoundStatement		621:38:19538:20303	6472847	0					
ANR	6472850	IdentifierDeclStatement	HANDLE process_snapshot ;	622:1:19541:19564	6472847	0	True				
ANR	6472851	IdentifierDecl	process_snapshot		6472847	0					
ANR	6472852	IdentifierDeclType	HANDLE		6472847	0					
ANR	6472853	Identifier	process_snapshot		6472847	1					
ANR	6472854	IdentifierDeclStatement	PROCESSENTRY32 pe ;	623:1:19567:19584	6472847	1	True				
ANR	6472855	IdentifierDecl	pe		6472847	0					
ANR	6472856	IdentifierDeclType	PROCESSENTRY32		6472847	0					
ANR	6472857	Identifier	pe		6472847	1					
ANR	6472858	ExpressionStatement	pe . dwSize = sizeof ( PROCESSENTRY32 )	624:1:19587:19622	6472847	2	True				
ANR	6472859	AssignmentExpression	pe . dwSize = sizeof ( PROCESSENTRY32 )		6472847	0		=			
ANR	6472860	MemberAccess	pe . dwSize		6472847	0					
ANR	6472861	Identifier	pe		6472847	0					
ANR	6472862	Identifier	dwSize		6472847	1					
ANR	6472863	SizeofExpression	sizeof ( PROCESSENTRY32 )		6472847	1					
ANR	6472864	Sizeof	sizeof		6472847	0					
ANR	6472865	SizeofOperand	PROCESSENTRY32		6472847	1					
ANR	6472866	IdentifierDeclStatement	bool show_all_pids = pid == 0 ;	625:1:19625:19654	6472847	3	True				
ANR	6472867	IdentifierDecl	show_all_pids = pid == 0		6472847	0					
ANR	6472868	IdentifierDeclType	bool		6472847	0					
ANR	6472869	Identifier	show_all_pids		6472847	1					
ANR	6472870	AssignmentExpression	show_all_pids = pid == 0		6472847	2		=			
ANR	6472871	Identifier	show_all_pids		6472847	0					
ANR	6472872	EqualityExpression	pid == 0		6472847	1		==			
ANR	6472873	Identifier	pid		6472847	0					
ANR	6472874	PrimaryExpression	0		6472847	1					
ANR	6472875	ExpressionStatement	"process_snapshot = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , pid )"	627:1:19658:19727	6472847	4	True				
ANR	6472876	AssignmentExpression	"process_snapshot = CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , pid )"		6472847	0		=			
ANR	6472877	Identifier	process_snapshot		6472847	0					
ANR	6472878	CallExpression	"CreateToolhelp32Snapshot ( TH32CS_SNAPPROCESS , pid )"		6472847	1					
ANR	6472879	Callee	CreateToolhelp32Snapshot		6472847	0					
ANR	6472880	Identifier	CreateToolhelp32Snapshot		6472847	0					
ANR	6472881	ArgumentList	TH32CS_SNAPPROCESS		6472847	1					
ANR	6472882	Argument	TH32CS_SNAPPROCESS		6472847	0					
ANR	6472883	Identifier	TH32CS_SNAPPROCESS		6472847	0					
ANR	6472884	Argument	pid		6472847	1					
ANR	6472885	Identifier	pid		6472847	0					
ANR	6472886	IfStatement	if ( process_snapshot == INVALID_HANDLE_VALUE )		6472847	5					
ANR	6472887	Condition	process_snapshot == INVALID_HANDLE_VALUE	628:5:19734:19773	6472847	0	True				
ANR	6472888	EqualityExpression	process_snapshot == INVALID_HANDLE_VALUE		6472847	0		==			
ANR	6472889	Identifier	process_snapshot		6472847	0					
ANR	6472890	Identifier	INVALID_HANDLE_VALUE		6472847	1					
ANR	6472891	CompoundStatement		8:47:237:237	6472847	1					
ANR	6472892	ExpressionStatement	"r_sys_perror ( ""w32_pids/CreateToolhelp32Snapshot"" )"	629:2:19780:19830	6472847	0	True				
ANR	6472893	CallExpression	"r_sys_perror ( ""w32_pids/CreateToolhelp32Snapshot"" )"		6472847	0					
ANR	6472894	Callee	r_sys_perror		6472847	0					
ANR	6472895	Identifier	r_sys_perror		6472847	0					
ANR	6472896	ArgumentList	"""w32_pids/CreateToolhelp32Snapshot"""		6472847	1					
ANR	6472897	Argument	"""w32_pids/CreateToolhelp32Snapshot"""		6472847	0					
ANR	6472898	PrimaryExpression	"""w32_pids/CreateToolhelp32Snapshot"""		6472847	0					
ANR	6472899	ReturnStatement	return list ;	630:2:19834:19845	6472847	1	True				
ANR	6472900	Identifier	list		6472847	0					
ANR	6472901	IfStatement	"if ( ! Process32First ( process_snapshot , & pe ) )"		6472847	6					
ANR	6472902	Condition	"! Process32First ( process_snapshot , & pe )"	632:5:19855:19893	6472847	0	True				
ANR	6472903	UnaryOperationExpression	"! Process32First ( process_snapshot , & pe )"		6472847	0					
ANR	6472904	UnaryOperator	!		6472847	0					
ANR	6472905	CallExpression	"Process32First ( process_snapshot , & pe )"		6472847	1					
ANR	6472906	Callee	Process32First		6472847	0					
ANR	6472907	Identifier	Process32First		6472847	0					
ANR	6472908	ArgumentList	process_snapshot		6472847	1					
ANR	6472909	Argument	process_snapshot		6472847	0					
ANR	6472910	Identifier	process_snapshot		6472847	0					
ANR	6472911	Argument	& pe		6472847	1					
ANR	6472912	UnaryOperationExpression	& pe		6472847	0					
ANR	6472913	UnaryOperator	&		6472847	0					
ANR	6472914	Identifier	pe		6472847	1					
ANR	6472915	CompoundStatement		12:46:357:357	6472847	1					
ANR	6472916	ExpressionStatement	"r_sys_perror ( ""w32_pids/Process32First"" )"	633:2:19900:19940	6472847	0	True				
ANR	6472917	CallExpression	"r_sys_perror ( ""w32_pids/Process32First"" )"		6472847	0					
ANR	6472918	Callee	r_sys_perror		6472847	0					
ANR	6472919	Identifier	r_sys_perror		6472847	0					
ANR	6472920	ArgumentList	"""w32_pids/Process32First"""		6472847	1					
ANR	6472921	Argument	"""w32_pids/Process32First"""		6472847	0					
ANR	6472922	PrimaryExpression	"""w32_pids/Process32First"""		6472847	0					
ANR	6472923	ExpressionStatement	CloseHandle ( process_snapshot )	634:2:19944:19974	6472847	1	True				
ANR	6472924	CallExpression	CloseHandle ( process_snapshot )		6472847	0					
ANR	6472925	Callee	CloseHandle		6472847	0					
ANR	6472926	Identifier	CloseHandle		6472847	0					
ANR	6472927	ArgumentList	process_snapshot		6472847	1					
ANR	6472928	Argument	process_snapshot		6472847	0					
ANR	6472929	Identifier	process_snapshot		6472847	0					
ANR	6472930	ReturnStatement	return list ;	635:2:19978:19989	6472847	2	True				
ANR	6472931	Identifier	list		6472847	0					
ANR	6472932	DoStatement	do		6472847	7					
ANR	6472933	CompoundStatement		17:4:459:459	6472847	0					
ANR	6472934	IfStatement	if ( show_all_pids || pe . th32ProcessID == pid || pe . th32ParentProcessID == pid )		6472847	0					
ANR	6472935	Condition	show_all_pids || pe . th32ProcessID == pid || pe . th32ParentProcessID == pid	638:6:20006:20084	6472847	0	True				
ANR	6472936	OrExpression	show_all_pids || pe . th32ProcessID == pid || pe . th32ParentProcessID == pid		6472847	0		||			
ANR	6472937	Identifier	show_all_pids		6472847	0					
ANR	6472938	OrExpression	pe . th32ProcessID == pid || pe . th32ParentProcessID == pid		6472847	1		||			
ANR	6472939	EqualityExpression	pe . th32ProcessID == pid		6472847	0		==			
ANR	6472940	MemberAccess	pe . th32ProcessID		6472847	0					
ANR	6472941	Identifier	pe		6472847	0					
ANR	6472942	Identifier	th32ProcessID		6472847	1					
ANR	6472943	Identifier	pid		6472847	1					
ANR	6472944	EqualityExpression	pe . th32ParentProcessID == pid		6472847	1		==			
ANR	6472945	MemberAccess	pe . th32ParentProcessID		6472847	0					
ANR	6472946	Identifier	pe		6472847	0					
ANR	6472947	Identifier	th32ParentProcessID		6472847	1					
ANR	6472948	Identifier	pid		6472847	1					
ANR	6472949	CompoundStatement		22:3:554:598	6472847	1					
ANR	6472950	IdentifierDeclStatement	RDebugPid * debug_pid = build_debug_pid ( & pe ) ;	642:3:20093:20137	6472847	0	True				
ANR	6472951	IdentifierDecl	* debug_pid = build_debug_pid ( & pe )		6472847	0					
ANR	6472952	IdentifierDeclType	RDebugPid *		6472847	0					
ANR	6472953	Identifier	debug_pid		6472847	1					
ANR	6472954	AssignmentExpression	* debug_pid = build_debug_pid ( & pe )		6472847	2		=			
ANR	6472955	Identifier	debug_pid		6472847	0					
ANR	6472956	CallExpression	build_debug_pid ( & pe )		6472847	1					
ANR	6472957	Callee	build_debug_pid		6472847	0					
ANR	6472958	Identifier	build_debug_pid		6472847	0					
ANR	6472959	ArgumentList	& pe		6472847	1					
ANR	6472960	Argument	& pe		6472847	0					
ANR	6472961	UnaryOperationExpression	& pe		6472847	0					
ANR	6472962	UnaryOperator	&		6472847	0					
ANR	6472963	Identifier	pe		6472847	1					
ANR	6472964	IfStatement	if ( debug_pid )		6472847	1					
ANR	6472965	Condition	debug_pid	643:7:20146:20154	6472847	0	True				
ANR	6472966	Identifier	debug_pid		6472847	0					
ANR	6472967	CompoundStatement		23:18:618:618	6472847	1					
ANR	6472968	ExpressionStatement	"r_list_append ( list , debug_pid )"	644:4:20163:20194	6472847	0	True				
ANR	6472969	CallExpression	"r_list_append ( list , debug_pid )"		6472847	0					
ANR	6472970	Callee	r_list_append		6472847	0					
ANR	6472971	Identifier	r_list_append		6472847	0					
ANR	6472972	ArgumentList	list		6472847	1					
ANR	6472973	Argument	list		6472847	0					
ANR	6472974	Identifier	list		6472847	0					
ANR	6472975	Argument	debug_pid		6472847	1					
ANR	6472976	Identifier	debug_pid		6472847	0					
ANR	6472977	Condition	"Process32Next ( process_snapshot , & pe )"	647:10:20215:20251	6472847	1	True				
ANR	6472978	CallExpression	"Process32Next ( process_snapshot , & pe )"		6472847	0					
ANR	6472979	Callee	Process32Next		6472847	0					
ANR	6472980	Identifier	Process32Next		6472847	0					
ANR	6472981	ArgumentList	process_snapshot		6472847	1					
ANR	6472982	Argument	process_snapshot		6472847	0					
ANR	6472983	Identifier	process_snapshot		6472847	0					
ANR	6472984	Argument	& pe		6472847	1					
ANR	6472985	UnaryOperationExpression	& pe		6472847	0					
ANR	6472986	UnaryOperator	&		6472847	0					
ANR	6472987	Identifier	pe		6472847	1					
ANR	6472988	ExpressionStatement	CloseHandle ( process_snapshot )	649:1:20257:20287	6472847	8	True				
ANR	6472989	CallExpression	CloseHandle ( process_snapshot )		6472847	0					
ANR	6472990	Callee	CloseHandle		6472847	0					
ANR	6472991	Identifier	CloseHandle		6472847	0					
ANR	6472992	ArgumentList	process_snapshot		6472847	1					
ANR	6472993	Argument	process_snapshot		6472847	0					
ANR	6472994	Identifier	process_snapshot		6472847	0					
ANR	6472995	ReturnStatement	return list ;	650:1:20290:20301	6472847	9	True				
ANR	6472996	Identifier	list		6472847	0					
ANR	6472997	ReturnType	RList *		6472847	1					
ANR	6472998	Identifier	w32_pids		6472847	2					
ANR	6472999	ParameterList	"int pid , RList * list"		6472847	3					
ANR	6473000	Parameter	int pid	621:16:19516:19522	6472847	0	True				
ANR	6473001	ParameterType	int		6472847	0					
ANR	6473002	Identifier	pid		6472847	1					
ANR	6473003	Parameter	RList * list	621:25:19525:19535	6472847	1	True				
ANR	6473004	ParameterType	RList *		6472847	0					
ANR	6473005	Identifier	list		6472847	1					
ANR	6473006	CFGEntryNode	ENTRY		6472847		True				
ANR	6473007	CFGExitNode	EXIT		6472847		True				
ANR	6473008	Symbol	CreateToolhelp32Snapshot		6472847						
ANR	6473009	Symbol	pe . th32ProcessID		6472847						
ANR	6473010	Symbol	pid		6472847						
ANR	6473011	Symbol	debug_pid		6472847						
ANR	6473012	Symbol	list		6472847						
ANR	6473013	Symbol	INVALID_HANDLE_VALUE		6472847						
ANR	6473014	Symbol	show_all_pids		6472847						
ANR	6473015	Symbol	pe . th32ParentProcessID		6472847						
ANR	6473016	Symbol	pe		6472847						
ANR	6473017	Symbol	TH32CS_SNAPPROCESS		6472847						
ANR	6473018	Symbol	process_snapshot		6472847						
ANR	6473019	Symbol	Process32First		6472847						
ANR	6473020	Symbol	build_debug_pid		6472847						
ANR	6473021	Symbol	pe . dwSize		6472847						
ANR	6473022	Symbol	& pe		6472847						
ANR	6473023	Symbol	Process32Next		6472847						
ANR	6473024	Function	w32_terminate_process	653:0:20306:21343							
ANR	6473025	FunctionDef	"w32_terminate_process (RDebug * dbg , int pid)"		6473024	0					
ANR	6473026	CompoundStatement		653:49:20355:21343	6473024	0					
ANR	6473027	IdentifierDeclStatement	"HANDLE h_proc = w32_OpenProcess ( PROCESS_TERMINATE | SYNCHRONIZE , FALSE , pid ) ;"	654:1:20358:20435	6473024	0	True				
ANR	6473028	IdentifierDecl	"h_proc = w32_OpenProcess ( PROCESS_TERMINATE | SYNCHRONIZE , FALSE , pid )"		6473024	0					
ANR	6473029	IdentifierDeclType	HANDLE		6473024	0					
ANR	6473030	Identifier	h_proc		6473024	1					
ANR	6473031	AssignmentExpression	"h_proc = w32_OpenProcess ( PROCESS_TERMINATE | SYNCHRONIZE , FALSE , pid )"		6473024	2		=			
ANR	6473032	Identifier	h_proc		6473024	0					
ANR	6473033	CallExpression	"w32_OpenProcess ( PROCESS_TERMINATE | SYNCHRONIZE , FALSE , pid )"		6473024	1					
ANR	6473034	Callee	w32_OpenProcess		6473024	0					
ANR	6473035	Identifier	w32_OpenProcess		6473024	0					
ANR	6473036	ArgumentList	PROCESS_TERMINATE | SYNCHRONIZE		6473024	1					
ANR	6473037	Argument	PROCESS_TERMINATE | SYNCHRONIZE		6473024	0					
ANR	6473038	InclusiveOrExpression	PROCESS_TERMINATE | SYNCHRONIZE		6473024	0		|			
ANR	6473039	Identifier	PROCESS_TERMINATE		6473024	0					
ANR	6473040	Identifier	SYNCHRONIZE		6473024	1					
ANR	6473041	Argument	FALSE		6473024	1					
ANR	6473042	Identifier	FALSE		6473024	0					
ANR	6473043	Argument	pid		6473024	2					
ANR	6473044	Identifier	pid		6473024	0					
ANR	6473045	IdentifierDeclStatement	bool ret = false ;	655:1:20438:20454	6473024	1	True				
ANR	6473046	IdentifierDecl	ret = false		6473024	0					
ANR	6473047	IdentifierDeclType	bool		6473024	0					
ANR	6473048	Identifier	ret		6473024	1					
ANR	6473049	AssignmentExpression	ret = false		6473024	2		=			
ANR	6473050	Identifier	false		6473024	0					
ANR	6473051	Identifier	false		6473024	1					
ANR	6473052	IfStatement	if ( ! h_proc )		6473024	2					
ANR	6473053	Condition	! h_proc	656:5:20461:20467	6473024	0	True				
ANR	6473054	UnaryOperationExpression	! h_proc		6473024	0					
ANR	6473055	UnaryOperator	!		6473024	0					
ANR	6473056	Identifier	h_proc		6473024	1					
ANR	6473057	CompoundStatement		4:14:114:114	6473024	1					
ANR	6473058	ExpressionStatement	"r_sys_perror ( ""w32_terminate_process/OpenProcess"" )"	657:2:20474:20524	6473024	0	True				
ANR	6473059	CallExpression	"r_sys_perror ( ""w32_terminate_process/OpenProcess"" )"		6473024	0					
ANR	6473060	Callee	r_sys_perror		6473024	0					
ANR	6473061	Identifier	r_sys_perror		6473024	0					
ANR	6473062	ArgumentList	"""w32_terminate_process/OpenProcess"""		6473024	1					
ANR	6473063	Argument	"""w32_terminate_process/OpenProcess"""		6473024	0					
ANR	6473064	PrimaryExpression	"""w32_terminate_process/OpenProcess"""		6473024	0					
ANR	6473065	GotoStatement	goto err_w32_terminate_process ;	658:2:20528:20558	6473024	1	True				
ANR	6473066	Identifier	err_w32_terminate_process		6473024	0					
ANR	6473067	IfStatement	if ( w32_DebugActiveProcessStop )		6473024	3					
ANR	6473068	Condition	w32_DebugActiveProcessStop	661:5:20615:20640	6473024	0	True				
ANR	6473069	Identifier	w32_DebugActiveProcessStop		6473024	0					
ANR	6473070	CompoundStatement		9:33:287:287	6473024	1					
ANR	6473071	ExpressionStatement	w32_DebugActiveProcessStop ( pid )	662:2:20647:20679	6473024	0	True				
ANR	6473072	CallExpression	w32_DebugActiveProcessStop ( pid )		6473024	0					
ANR	6473073	Callee	w32_DebugActiveProcessStop		6473024	0					
ANR	6473074	Identifier	w32_DebugActiveProcessStop		6473024	0					
ANR	6473075	ArgumentList	pid		6473024	1					
ANR	6473076	Argument	pid		6473024	0					
ANR	6473077	Identifier	pid		6473024	0					
ANR	6473078	IfStatement	"if ( TerminateProcess ( h_proc , 1 ) == 0 )"		6473024	4					
ANR	6473079	Condition	"TerminateProcess ( h_proc , 1 ) == 0"	664:5:20721:20753	6473024	0	True				
ANR	6473080	EqualityExpression	"TerminateProcess ( h_proc , 1 ) == 0"		6473024	0		==			
ANR	6473081	CallExpression	"TerminateProcess ( h_proc , 1 )"		6473024	0					
ANR	6473082	Callee	TerminateProcess		6473024	0					
ANR	6473083	Identifier	TerminateProcess		6473024	0					
ANR	6473084	ArgumentList	h_proc		6473024	1					
ANR	6473085	Argument	h_proc		6473024	0					
ANR	6473086	Identifier	h_proc		6473024	0					
ANR	6473087	Argument	1		6473024	1					
ANR	6473088	PrimaryExpression	1		6473024	0					
ANR	6473089	PrimaryExpression	0		6473024	1					
ANR	6473090	CompoundStatement		12:40:400:400	6473024	1					
ANR	6473091	ExpressionStatement	"r_sys_perror ( ""e32_terminate_process/TerminateProcess"" )"	665:2:20760:20815	6473024	0	True				
ANR	6473092	CallExpression	"r_sys_perror ( ""e32_terminate_process/TerminateProcess"" )"		6473024	0					
ANR	6473093	Callee	r_sys_perror		6473024	0					
ANR	6473094	Identifier	r_sys_perror		6473024	0					
ANR	6473095	ArgumentList	"""e32_terminate_process/TerminateProcess"""		6473024	1					
ANR	6473096	Argument	"""e32_terminate_process/TerminateProcess"""		6473024	0					
ANR	6473097	PrimaryExpression	"""e32_terminate_process/TerminateProcess"""		6473024	0					
ANR	6473098	GotoStatement	goto err_w32_terminate_process ;	666:2:20819:20849	6473024	1	True				
ANR	6473099	Identifier	err_w32_terminate_process		6473024	0					
ANR	6473100	IdentifierDeclStatement	"DWORD ret_wait = WaitForSingleObject ( h_proc , 1000 ) ;"	670:1:20923:20974	6473024	5	True				
ANR	6473101	IdentifierDecl	"ret_wait = WaitForSingleObject ( h_proc , 1000 )"		6473024	0					
ANR	6473102	IdentifierDeclType	DWORD		6473024	0					
ANR	6473103	Identifier	ret_wait		6473024	1					
ANR	6473104	AssignmentExpression	"ret_wait = WaitForSingleObject ( h_proc , 1000 )"		6473024	2		=			
ANR	6473105	Identifier	ret_wait		6473024	0					
ANR	6473106	CallExpression	"WaitForSingleObject ( h_proc , 1000 )"		6473024	1					
ANR	6473107	Callee	WaitForSingleObject		6473024	0					
ANR	6473108	Identifier	WaitForSingleObject		6473024	0					
ANR	6473109	ArgumentList	h_proc		6473024	1					
ANR	6473110	Argument	h_proc		6473024	0					
ANR	6473111	Identifier	h_proc		6473024	0					
ANR	6473112	Argument	1000		6473024	1					
ANR	6473113	PrimaryExpression	1000		6473024	0					
ANR	6473114	IfStatement	if ( ret_wait == WAIT_FAILED )		6473024	6					
ANR	6473115	Condition	ret_wait == WAIT_FAILED	671:5:20981:21003	6473024	0	True				
ANR	6473116	EqualityExpression	ret_wait == WAIT_FAILED		6473024	0		==			
ANR	6473117	Identifier	ret_wait		6473024	0					
ANR	6473118	Identifier	WAIT_FAILED		6473024	1					
ANR	6473119	CompoundStatement		19:30:650:650	6473024	1					
ANR	6473120	ExpressionStatement	"r_sys_perror ( ""w32_terminate_process/WaitForSingleObject"" )"	672:2:21010:21068	6473024	0	True				
ANR	6473121	CallExpression	"r_sys_perror ( ""w32_terminate_process/WaitForSingleObject"" )"		6473024	0					
ANR	6473122	Callee	r_sys_perror		6473024	0					
ANR	6473123	Identifier	r_sys_perror		6473024	0					
ANR	6473124	ArgumentList	"""w32_terminate_process/WaitForSingleObject"""		6473024	1					
ANR	6473125	Argument	"""w32_terminate_process/WaitForSingleObject"""		6473024	0					
ANR	6473126	PrimaryExpression	"""w32_terminate_process/WaitForSingleObject"""		6473024	0					
ANR	6473127	GotoStatement	goto err_w32_terminate_process ;	673:2:21072:21102	6473024	1	True				
ANR	6473128	Identifier	err_w32_terminate_process		6473024	0					
ANR	6473129	IfStatement	if ( ret_wait == WAIT_TIMEOUT )		6473024	7					
ANR	6473130	Condition	ret_wait == WAIT_TIMEOUT	675:5:21112:21135	6473024	0	True				
ANR	6473131	EqualityExpression	ret_wait == WAIT_TIMEOUT		6473024	0		==			
ANR	6473132	Identifier	ret_wait		6473024	0					
ANR	6473133	Identifier	WAIT_TIMEOUT		6473024	1					
ANR	6473134	CompoundStatement		23:31:782:782	6473024	1					
ANR	6473135	ExpressionStatement	"eprintf ( ""(%d) Waiting for process to terminate timed out.\\n"" , pid )"	676:2:21142:21209	6473024	0	True				
ANR	6473136	CallExpression	"eprintf ( ""(%d) Waiting for process to terminate timed out.\\n"" , pid )"		6473024	0					
ANR	6473137	Callee	eprintf		6473024	0					
ANR	6473138	Identifier	eprintf		6473024	0					
ANR	6473139	ArgumentList	"""(%d) Waiting for process to terminate timed out.\\n"""		6473024	1					
ANR	6473140	Argument	"""(%d) Waiting for process to terminate timed out.\\n"""		6473024	0					
ANR	6473141	PrimaryExpression	"""(%d) Waiting for process to terminate timed out.\\n"""		6473024	0					
ANR	6473142	Argument	pid		6473024	1					
ANR	6473143	Identifier	pid		6473024	0					
ANR	6473144	GotoStatement	goto err_w32_terminate_process ;	677:2:21213:21243	6473024	1	True				
ANR	6473145	Identifier	err_w32_terminate_process		6473024	0					
ANR	6473146	ExpressionStatement	ret = true	679:1:21249:21259	6473024	8	True				
ANR	6473147	AssignmentExpression	ret = true		6473024	0		=			
ANR	6473148	Identifier	ret		6473024	0					
ANR	6473149	Identifier	true		6473024	1					
ANR	6473150	Label	err_w32_terminate_process :	680:0:21261:21286	6473024	9	True				
ANR	6473151	Identifier	err_w32_terminate_process		6473024	0					
ANR	6473152	IfStatement	if ( h_proc )		6473024	10					
ANR	6473153	Condition	h_proc	681:5:21293:21298	6473024	0	True				
ANR	6473154	Identifier	h_proc		6473024	0					
ANR	6473155	CompoundStatement		29:13:945:945	6473024	1					
ANR	6473156	ExpressionStatement	CloseHandle ( h_proc )	682:2:21305:21325	6473024	0	True				
ANR	6473157	CallExpression	CloseHandle ( h_proc )		6473024	0					
ANR	6473158	Callee	CloseHandle		6473024	0					
ANR	6473159	Identifier	CloseHandle		6473024	0					
ANR	6473160	ArgumentList	h_proc		6473024	1					
ANR	6473161	Argument	h_proc		6473024	0					
ANR	6473162	Identifier	h_proc		6473024	0					
ANR	6473163	ReturnStatement	return ret ;	684:1:21331:21341	6473024	11	True				
ANR	6473164	Identifier	ret		6473024	0					
ANR	6473165	ReturnType	bool		6473024	1					
ANR	6473166	Identifier	w32_terminate_process		6473024	2					
ANR	6473167	ParameterList	"RDebug * dbg , int pid"		6473024	3					
ANR	6473168	Parameter	RDebug * dbg	653:27:20333:20343	6473024	0	True				
ANR	6473169	ParameterType	RDebug *		6473024	0					
ANR	6473170	Identifier	dbg		6473024	1					
ANR	6473171	Parameter	int pid	653:40:20346:20352	6473024	1	True				
ANR	6473172	ParameterType	int		6473024	0					
ANR	6473173	Identifier	pid		6473024	1					
ANR	6473174	CFGEntryNode	ENTRY		6473024		True				
ANR	6473175	CFGExitNode	EXIT		6473024		True				
ANR	6473176	Symbol	ret		6473024						
ANR	6473177	Symbol	TerminateProcess		6473024						
ANR	6473178	Symbol	PROCESS_TERMINATE		6473024						
ANR	6473179	Symbol	w32_DebugActiveProcessStop		6473024						
ANR	6473180	Symbol	dbg		6473024						
ANR	6473181	Symbol	false		6473024						
ANR	6473182	Symbol	pid		6473024						
ANR	6473183	Symbol	h_proc		6473024						
ANR	6473184	Symbol	ret_wait		6473024						
ANR	6473185	Symbol	w32_OpenProcess		6473024						
ANR	6473186	Symbol	WaitForSingleObject		6473024						
ANR	6473187	Symbol	SYNCHRONIZE		6473024						
ANR	6473188	Symbol	WAIT_TIMEOUT		6473024						
ANR	6473189	Symbol	true		6473024						
ANR	6473190	Symbol	WAIT_FAILED		6473024						
ANR	6473191	Symbol	FALSE		6473024						
ANR	6473192	Function	w32_break_process	687:0:21346:21781							
ANR	6473193	FunctionDef	w32_break_process (void * d)		6473192	0					
ANR	6473194	CompoundStatement		687:32:21378:21781	6473192	0					
ANR	6473195	IdentifierDeclStatement	RDebug * dbg = ( RDebug * ) d ;	688:1:21381:21406	6473192	0	True				
ANR	6473196	IdentifierDecl	* dbg = ( RDebug * ) d		6473192	0					
ANR	6473197	IdentifierDeclType	RDebug *		6473192	0					
ANR	6473198	Identifier	dbg		6473192	1					
ANR	6473199	AssignmentExpression	* dbg = ( RDebug * ) d		6473192	2		=			
ANR	6473200	Identifier	dbg		6473192	0					
ANR	6473201	CastExpression	( RDebug * ) d		6473192	1					
ANR	6473202	CastTarget	RDebug *		6473192	0					
ANR	6473203	Identifier	d		6473192	1					
ANR	6473204	IdentifierDeclStatement	"HANDLE h_proc = w32_OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dbg -> pid ) ;"	689:1:21409:21478	6473192	1	True				
ANR	6473205	IdentifierDecl	"h_proc = w32_OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dbg -> pid )"		6473192	0					
ANR	6473206	IdentifierDeclType	HANDLE		6473192	0					
ANR	6473207	Identifier	h_proc		6473192	1					
ANR	6473208	AssignmentExpression	"h_proc = w32_OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dbg -> pid )"		6473192	2		=			
ANR	6473209	Identifier	h_proc		6473192	0					
ANR	6473210	CallExpression	"w32_OpenProcess ( PROCESS_ALL_ACCESS , FALSE , dbg -> pid )"		6473192	1					
ANR	6473211	Callee	w32_OpenProcess		6473192	0					
ANR	6473212	Identifier	w32_OpenProcess		6473192	0					
ANR	6473213	ArgumentList	PROCESS_ALL_ACCESS		6473192	1					
ANR	6473214	Argument	PROCESS_ALL_ACCESS		6473192	0					
ANR	6473215	Identifier	PROCESS_ALL_ACCESS		6473192	0					
ANR	6473216	Argument	FALSE		6473192	1					
ANR	6473217	Identifier	FALSE		6473192	0					
ANR	6473218	Argument	dbg -> pid		6473192	2					
ANR	6473219	PtrMemberAccess	dbg -> pid		6473192	0					
ANR	6473220	Identifier	dbg		6473192	0					
ANR	6473221	Identifier	pid		6473192	1					
ANR	6473222	IfStatement	if ( ! h_proc )		6473192	2					
ANR	6473223	Condition	! h_proc	690:5:21485:21491	6473192	0	True				
ANR	6473224	UnaryOperationExpression	! h_proc		6473192	0					
ANR	6473225	UnaryOperator	!		6473192	0					
ANR	6473226	Identifier	h_proc		6473192	1					
ANR	6473227	CompoundStatement		4:14:115:115	6473192	1					
ANR	6473228	ExpressionStatement	"r_sys_perror ( ""w32_break_process/w32_OpenProcess"" )"	691:2:21498:21548	6473192	0	True				
ANR	6473229	CallExpression	"r_sys_perror ( ""w32_break_process/w32_OpenProcess"" )"		6473192	0					
ANR	6473230	Callee	r_sys_perror		6473192	0					
ANR	6473231	Identifier	r_sys_perror		6473192	0					
ANR	6473232	ArgumentList	"""w32_break_process/w32_OpenProcess"""		6473192	1					
ANR	6473233	Argument	"""w32_break_process/w32_OpenProcess"""		6473192	0					
ANR	6473234	PrimaryExpression	"""w32_break_process/w32_OpenProcess"""		6473192	0					
ANR	6473235	GotoStatement	goto err_w32_break_process ;	692:2:21552:21578	6473192	1	True				
ANR	6473236	Identifier	err_w32_break_process		6473192	0					
ANR	6473237	IfStatement	if ( ! w32_DebugBreakProcess ( h_proc ) )		6473192	3					
ANR	6473238	Condition	! w32_DebugBreakProcess ( h_proc )	694:5:21588:21618	6473192	0	True				
ANR	6473239	UnaryOperationExpression	! w32_DebugBreakProcess ( h_proc )		6473192	0					
ANR	6473240	UnaryOperator	!		6473192	0					
ANR	6473241	CallExpression	w32_DebugBreakProcess ( h_proc )		6473192	1					
ANR	6473242	Callee	w32_DebugBreakProcess		6473192	0					
ANR	6473243	Identifier	w32_DebugBreakProcess		6473192	0					
ANR	6473244	ArgumentList	h_proc		6473192	1					
ANR	6473245	Argument	h_proc		6473192	0					
ANR	6473246	Identifier	h_proc		6473192	0					
ANR	6473247	CompoundStatement		8:38:242:242	6473192	1					
ANR	6473248	ExpressionStatement	"r_sys_perror ( ""w32_break_process/w32_DebugBreakProcess"" )"	695:2:21625:21681	6473192	0	True				
ANR	6473249	CallExpression	"r_sys_perror ( ""w32_break_process/w32_DebugBreakProcess"" )"		6473192	0					
ANR	6473250	Callee	r_sys_perror		6473192	0					
ANR	6473251	Identifier	r_sys_perror		6473192	0					
ANR	6473252	ArgumentList	"""w32_break_process/w32_DebugBreakProcess"""		6473192	1					
ANR	6473253	Argument	"""w32_break_process/w32_DebugBreakProcess"""		6473192	0					
ANR	6473254	PrimaryExpression	"""w32_break_process/w32_DebugBreakProcess"""		6473192	0					
ANR	6473255	GotoStatement	goto err_w32_break_process ;	696:2:21685:21711	6473192	1	True				
ANR	6473256	Identifier	err_w32_break_process		6473192	0					
ANR	6473257	Label	err_w32_break_process :	698:0:21716:21737	6473192	4	True				
ANR	6473258	Identifier	err_w32_break_process		6473192	0					
ANR	6473259	IfStatement	if ( h_proc )		6473192	5					
ANR	6473260	Condition	h_proc	699:5:21744:21749	6473192	0	True				
ANR	6473261	Identifier	h_proc		6473192	0					
ANR	6473262	CompoundStatement		13:13:373:373	6473192	1					
ANR	6473263	ExpressionStatement	CloseHandle ( h_proc )	700:2:21756:21776	6473192	0	True				
ANR	6473264	CallExpression	CloseHandle ( h_proc )		6473192	0					
ANR	6473265	Callee	CloseHandle		6473192	0					
ANR	6473266	Identifier	CloseHandle		6473192	0					
ANR	6473267	ArgumentList	h_proc		6473192	1					
ANR	6473268	Argument	h_proc		6473192	0					
ANR	6473269	Identifier	h_proc		6473192	0					
ANR	6473270	ReturnType	void		6473192	1					
ANR	6473271	Identifier	w32_break_process		6473192	2					
ANR	6473272	ParameterList	void * d		6473192	3					
ANR	6473273	Parameter	void * d	687:23:21369:21375	6473192	0	True				
ANR	6473274	ParameterType	void *		6473192	0					
ANR	6473275	Identifier	d		6473192	1					
ANR	6473276	CFGEntryNode	ENTRY		6473192		True				
ANR	6473277	CFGExitNode	EXIT		6473192		True				
ANR	6473278	Symbol	w32_OpenProcess		6473192						
ANR	6473279	Symbol	d		6473192						
ANR	6473280	Symbol	dbg -> pid		6473192						
ANR	6473281	Symbol	PROCESS_ALL_ACCESS		6473192						
ANR	6473282	Symbol	dbg		6473192						
ANR	6473283	Symbol	FALSE		6473192						
ANR	6473284	Symbol	h_proc		6473192						
ANR	6473285	Symbol	w32_DebugBreakProcess		6473192						
ANR	6473286	Symbol	* dbg		6473192						
ANR	6473287	Function	GetAVX	704:0:21784:23739							
ANR	6473288	FunctionDef	"GetAVX (HANDLE hThread , ut128 xmm [ 16 ] , ut128 ymm [ 16 ])"		6473287	0					
ANR	6473289	CompoundStatement		704:64:21848:23739	6473287	0					
ANR	6473290	IdentifierDeclStatement	BOOL Success ;	705:1:21851:21863	6473287	0	True				
ANR	6473291	IdentifierDecl	Success		6473287	0					
ANR	6473292	IdentifierDeclType	BOOL		6473287	0					
ANR	6473293	Identifier	Success		6473287	1					
ANR	6473294	IdentifierDeclStatement	"int nRegs = 0 , Index = 0 ;"	706:1:21866:21890	6473287	1	True				
ANR	6473295	IdentifierDecl	nRegs = 0		6473287	0					
ANR	6473296	IdentifierDeclType	int		6473287	0					
ANR	6473297	Identifier	nRegs		6473287	1					
ANR	6473298	AssignmentExpression	nRegs = 0		6473287	2		=			
ANR	6473299	Identifier	nRegs		6473287	0					
ANR	6473300	PrimaryExpression	0		6473287	1					
ANR	6473301	IdentifierDecl	Index = 0		6473287	1					
ANR	6473302	IdentifierDeclType	int		6473287	0					
ANR	6473303	Identifier	Index		6473287	1					
ANR	6473304	AssignmentExpression	Index = 0		6473287	2		=			
ANR	6473305	Identifier	Index		6473287	0					
ANR	6473306	PrimaryExpression	0		6473287	1					
ANR	6473307	IdentifierDeclStatement	DWORD ContextSize = 0 ;	707:1:21893:21914	6473287	2	True				
ANR	6473308	IdentifierDecl	ContextSize = 0		6473287	0					
ANR	6473309	IdentifierDeclType	DWORD		6473287	0					
ANR	6473310	Identifier	ContextSize		6473287	1					
ANR	6473311	AssignmentExpression	ContextSize = 0		6473287	2		=			
ANR	6473312	Identifier	ContextSize		6473287	0					
ANR	6473313	PrimaryExpression	0		6473287	1					
ANR	6473314	IdentifierDeclStatement	DWORD FeatureLength = 0 ;	708:1:21917:21940	6473287	3	True				
ANR	6473315	IdentifierDecl	FeatureLength = 0		6473287	0					
ANR	6473316	IdentifierDeclType	DWORD		6473287	0					
ANR	6473317	Identifier	FeatureLength		6473287	1					
ANR	6473318	AssignmentExpression	FeatureLength = 0		6473287	2		=			
ANR	6473319	Identifier	FeatureLength		6473287	0					
ANR	6473320	PrimaryExpression	0		6473287	1					
ANR	6473321	IdentifierDeclStatement	ut64 FeatureMask = 0 ;	709:1:21943:21963	6473287	4	True				
ANR	6473322	IdentifierDecl	FeatureMask = 0		6473287	0					
ANR	6473323	IdentifierDeclType	ut64		6473287	0					
ANR	6473324	Identifier	FeatureMask		6473287	1					
ANR	6473325	AssignmentExpression	FeatureMask = 0		6473287	2		=			
ANR	6473326	Identifier	FeatureMask		6473287	0					
ANR	6473327	PrimaryExpression	0		6473287	1					
ANR	6473328	IdentifierDeclStatement	ut128 * Xmm = NULL ;	710:1:21966:21984	6473287	5	True				
ANR	6473329	IdentifierDecl	* Xmm = NULL		6473287	0					
ANR	6473330	IdentifierDeclType	ut128 *		6473287	0					
ANR	6473331	Identifier	Xmm		6473287	1					
ANR	6473332	AssignmentExpression	* Xmm = NULL		6473287	2		=			
ANR	6473333	Identifier	NULL		6473287	0					
ANR	6473334	Identifier	NULL		6473287	1					
ANR	6473335	IdentifierDeclStatement	ut128 * Ymm = NULL ;	711:1:21987:22005	6473287	6	True				
ANR	6473336	IdentifierDecl	* Ymm = NULL		6473287	0					
ANR	6473337	IdentifierDeclType	ut128 *		6473287	0					
ANR	6473338	Identifier	Ymm		6473287	1					
ANR	6473339	AssignmentExpression	* Ymm = NULL		6473287	2		=			
ANR	6473340	Identifier	NULL		6473287	0					
ANR	6473341	Identifier	NULL		6473287	1					
ANR	6473342	IdentifierDeclStatement	void * buffer = NULL ;	712:1:22008:22028	6473287	7	True				
ANR	6473343	IdentifierDecl	* buffer = NULL		6473287	0					
ANR	6473344	IdentifierDeclType	void *		6473287	0					
ANR	6473345	Identifier	buffer		6473287	1					
ANR	6473346	AssignmentExpression	* buffer = NULL		6473287	2		=			
ANR	6473347	Identifier	NULL		6473287	0					
ANR	6473348	Identifier	NULL		6473287	1					
ANR	6473349	IdentifierDeclStatement	PCONTEXT Context ;	713:1:22031:22047	6473287	8	True				
ANR	6473350	IdentifierDecl	Context		6473287	0					
ANR	6473351	IdentifierDeclType	PCONTEXT		6473287	0					
ANR	6473352	Identifier	Context		6473287	1					
ANR	6473353	Statement	if	714:1:22050:22051	6473287	9	True				
ANR	6473354	Statement	(	714:4:22053:22053	6473287	10	True				
ANR	6473355	Statement	w32_GetEnabledXStateFeatures	714:5:22054:22081	6473287	11	True				
ANR	6473356	Statement	==	714:34:22083:22084	6473287	12	True				
ANR	6473357	Statement	(	714:37:22086:22086	6473287	13	True				
ANR	6473358	Statement	ut64	714:38:22087:22090	6473287	14	True				
ANR	6473359	Statement	(	714:43:22092:22092	6473287	15	True				
ANR	6473360	Statement	WINAPI	714:44:22093:22098	6473287	16	True				
ANR	6473361	Statement	*	714:51:22100:22100	6473287	17	True				
ANR	6473362	Statement	)	714:52:22101:22101	6473287	18	True				
ANR	6473363	Statement	(	714:54:22103:22103	6473287	19	True				
ANR	6473364	Statement	)	714:55:22104:22104	6473287	20	True				
ANR	6473365	Statement	)	714:56:22105:22105	6473287	21	True				
ANR	6473366	Statement	-	714:57:22106:22106	6473287	22	True				
ANR	6473367	Statement	1	714:58:22107:22107	6473287	23	True				
ANR	6473368	Statement	)	714:59:22108:22108	6473287	24	True				
ANR	6473369	CompoundStatement		11:61:261:261	6473287	25					
ANR	6473370	ReturnStatement	return 0 ;	715:2:22114:22122	6473287	0	True				
ANR	6473371	PrimaryExpression	0		6473287	0					
ANR	6473372	ExpressionStatement	FeatureMask = w32_GetEnabledXStateFeatures ( )	718:1:22156:22200	6473287	26	True				
ANR	6473373	AssignmentExpression	FeatureMask = w32_GetEnabledXStateFeatures ( )		6473287	0		=			
ANR	6473374	Identifier	FeatureMask		6473287	0					
ANR	6473375	CallExpression	w32_GetEnabledXStateFeatures ( )		6473287	1					
ANR	6473376	Callee	w32_GetEnabledXStateFeatures		6473287	0					
ANR	6473377	Identifier	w32_GetEnabledXStateFeatures		6473287	0					
ANR	6473378	ArgumentList			6473287	1					
ANR	6473379	IfStatement	if ( ( FeatureMask & XSTATE_MASK_AVX ) == 0 )		6473287	27					
ANR	6473380	Condition	( FeatureMask & XSTATE_MASK_AVX ) == 0	719:5:22207:22242	6473287	0	True				
ANR	6473381	EqualityExpression	( FeatureMask & XSTATE_MASK_AVX ) == 0		6473287	0		==			
ANR	6473382	BitAndExpression	FeatureMask & XSTATE_MASK_AVX		6473287	0		&			
ANR	6473383	Identifier	FeatureMask		6473287	0					
ANR	6473384	Identifier	XSTATE_MASK_AVX		6473287	1					
ANR	6473385	PrimaryExpression	0		6473287	1					
ANR	6473386	CompoundStatement		16:43:396:396	6473287	1					
ANR	6473387	ReturnStatement	return 0 ;	720:2:22249:22257	6473287	0	True				
ANR	6473388	PrimaryExpression	0		6473287	0					
ANR	6473389	ExpressionStatement	"Success = w32_InitializeContext ( NULL , CONTEXT_ALL | CONTEXT_XSTATE , NULL , & ContextSize )"	722:1:22263:22350	6473287	28	True				
ANR	6473390	AssignmentExpression	"Success = w32_InitializeContext ( NULL , CONTEXT_ALL | CONTEXT_XSTATE , NULL , & ContextSize )"		6473287	0		=			
ANR	6473391	Identifier	Success		6473287	0					
ANR	6473392	CallExpression	"w32_InitializeContext ( NULL , CONTEXT_ALL | CONTEXT_XSTATE , NULL , & ContextSize )"		6473287	1					
ANR	6473393	Callee	w32_InitializeContext		6473287	0					
ANR	6473394	Identifier	w32_InitializeContext		6473287	0					
ANR	6473395	ArgumentList	NULL		6473287	1					
ANR	6473396	Argument	NULL		6473287	0					
ANR	6473397	Identifier	NULL		6473287	0					
ANR	6473398	Argument	CONTEXT_ALL | CONTEXT_XSTATE		6473287	1					
ANR	6473399	InclusiveOrExpression	CONTEXT_ALL | CONTEXT_XSTATE		6473287	0		|			
ANR	6473400	Identifier	CONTEXT_ALL		6473287	0					
ANR	6473401	Identifier	CONTEXT_XSTATE		6473287	1					
ANR	6473402	Argument	NULL		6473287	2					
ANR	6473403	Identifier	NULL		6473287	0					
ANR	6473404	Argument	& ContextSize		6473287	3					
ANR	6473405	UnaryOperationExpression	& ContextSize		6473287	0					
ANR	6473406	UnaryOperator	&		6473287	0					
ANR	6473407	Identifier	ContextSize		6473287	1					
ANR	6473408	IfStatement	if ( ( Success == TRUE ) || ( GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER ) )		6473287	29					
ANR	6473409	Condition	( Success == TRUE ) || ( GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER )	723:5:22357:22422	6473287	0	True				
ANR	6473410	OrExpression	( Success == TRUE ) || ( GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER )		6473287	0		||			
ANR	6473411	EqualityExpression	Success == TRUE		6473287	0		==			
ANR	6473412	Identifier	Success		6473287	0					
ANR	6473413	Identifier	TRUE		6473287	1					
ANR	6473414	EqualityExpression	GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER		6473287	1		!=			
ANR	6473415	CallExpression	GetLastError ( )		6473287	0					
ANR	6473416	Callee	GetLastError		6473287	0					
ANR	6473417	Identifier	GetLastError		6473287	0					
ANR	6473418	ArgumentList			6473287	1					
ANR	6473419	Identifier	ERROR_INSUFFICIENT_BUFFER		6473287	1					
ANR	6473420	CompoundStatement		20:73:576:576	6473287	1					
ANR	6473421	ReturnStatement	return 0 ;	724:2:22429:22437	6473287	0	True				
ANR	6473422	PrimaryExpression	0		6473287	0					
ANR	6473423	ExpressionStatement	buffer = malloc ( ContextSize )	726:1:22443:22471	6473287	30	True				
ANR	6473424	AssignmentExpression	buffer = malloc ( ContextSize )		6473287	0		=			
ANR	6473425	Identifier	buffer		6473287	0					
ANR	6473426	CallExpression	malloc ( ContextSize )		6473287	1					
ANR	6473427	Callee	malloc		6473287	0					
ANR	6473428	Identifier	malloc		6473287	0					
ANR	6473429	ArgumentList	ContextSize		6473287	1					
ANR	6473430	Argument	ContextSize		6473287	0					
ANR	6473431	Identifier	ContextSize		6473287	0					
ANR	6473432	IfStatement	if ( buffer == NULL )		6473287	31					
ANR	6473433	Condition	buffer == NULL	727:5:22478:22491	6473287	0	True				
ANR	6473434	EqualityExpression	buffer == NULL		6473287	0		==			
ANR	6473435	Identifier	buffer		6473287	0					
ANR	6473436	Identifier	NULL		6473287	1					
ANR	6473437	CompoundStatement		24:21:645:645	6473287	1					
ANR	6473438	ReturnStatement	return 0 ;	728:2:22498:22506	6473287	0	True				
ANR	6473439	PrimaryExpression	0		6473287	0					
ANR	6473440	ExpressionStatement	"Success = w32_InitializeContext ( buffer , CONTEXT_ALL | CONTEXT_XSTATE , & Context , & ContextSize )"	730:1:22512:22605	6473287	32	True				
ANR	6473441	AssignmentExpression	"Success = w32_InitializeContext ( buffer , CONTEXT_ALL | CONTEXT_XSTATE , & Context , & ContextSize )"		6473287	0		=			
ANR	6473442	Identifier	Success		6473287	0					
ANR	6473443	CallExpression	"w32_InitializeContext ( buffer , CONTEXT_ALL | CONTEXT_XSTATE , & Context , & ContextSize )"		6473287	1					
ANR	6473444	Callee	w32_InitializeContext		6473287	0					
ANR	6473445	Identifier	w32_InitializeContext		6473287	0					
ANR	6473446	ArgumentList	buffer		6473287	1					
ANR	6473447	Argument	buffer		6473287	0					
ANR	6473448	Identifier	buffer		6473287	0					
ANR	6473449	Argument	CONTEXT_ALL | CONTEXT_XSTATE		6473287	1					
ANR	6473450	InclusiveOrExpression	CONTEXT_ALL | CONTEXT_XSTATE		6473287	0		|			
ANR	6473451	Identifier	CONTEXT_ALL		6473287	0					
ANR	6473452	Identifier	CONTEXT_XSTATE		6473287	1					
ANR	6473453	Argument	& Context		6473287	2					
ANR	6473454	UnaryOperationExpression	& Context		6473287	0					
ANR	6473455	UnaryOperator	&		6473287	0					
ANR	6473456	Identifier	Context		6473287	1					
ANR	6473457	Argument	& ContextSize		6473287	3					
ANR	6473458	UnaryOperationExpression	& ContextSize		6473287	0					
ANR	6473459	UnaryOperator	&		6473287	0					
ANR	6473460	Identifier	ContextSize		6473287	1					
ANR	6473461	IfStatement	if ( Success == FALSE )		6473287	33					
ANR	6473462	Condition	Success == FALSE	731:5:22612:22627	6473287	0	True				
ANR	6473463	EqualityExpression	Success == FALSE		6473287	0		==			
ANR	6473464	Identifier	Success		6473287	0					
ANR	6473465	Identifier	FALSE		6473287	1					
ANR	6473466	CompoundStatement		28:23:781:781	6473287	1					
ANR	6473467	ExpressionStatement	free ( buffer )	732:2:22634:22646	6473287	0	True				
ANR	6473468	CallExpression	free ( buffer )		6473287	0					
ANR	6473469	Callee	free		6473287	0					
ANR	6473470	Identifier	free		6473287	0					
ANR	6473471	ArgumentList	buffer		6473287	1					
ANR	6473472	Argument	buffer		6473287	0					
ANR	6473473	Identifier	buffer		6473287	0					
ANR	6473474	ReturnStatement	return 0 ;	733:2:22650:22658	6473287	1	True				
ANR	6473475	PrimaryExpression	0		6473287	0					
ANR	6473476	ExpressionStatement	"Success = w32_SetXStateFeaturesMask ( Context , XSTATE_MASK_AVX )"	735:1:22664:22725	6473287	34	True				
ANR	6473477	AssignmentExpression	"Success = w32_SetXStateFeaturesMask ( Context , XSTATE_MASK_AVX )"		6473287	0		=			
ANR	6473478	Identifier	Success		6473287	0					
ANR	6473479	CallExpression	"w32_SetXStateFeaturesMask ( Context , XSTATE_MASK_AVX )"		6473287	1					
ANR	6473480	Callee	w32_SetXStateFeaturesMask		6473287	0					
ANR	6473481	Identifier	w32_SetXStateFeaturesMask		6473287	0					
ANR	6473482	ArgumentList	Context		6473287	1					
ANR	6473483	Argument	Context		6473287	0					
ANR	6473484	Identifier	Context		6473287	0					
ANR	6473485	Argument	XSTATE_MASK_AVX		6473287	1					
ANR	6473486	Identifier	XSTATE_MASK_AVX		6473287	0					
ANR	6473487	IfStatement	if ( Success == FALSE )		6473287	35					
ANR	6473488	Condition	Success == FALSE	736:5:22732:22747	6473287	0	True				
ANR	6473489	EqualityExpression	Success == FALSE		6473287	0		==			
ANR	6473490	Identifier	Success		6473287	0					
ANR	6473491	Identifier	FALSE		6473287	1					
ANR	6473492	CompoundStatement		33:23:901:901	6473287	1					
ANR	6473493	ExpressionStatement	free ( buffer )	737:2:22754:22766	6473287	0	True				
ANR	6473494	CallExpression	free ( buffer )		6473287	0					
ANR	6473495	Callee	free		6473287	0					
ANR	6473496	Identifier	free		6473287	0					
ANR	6473497	ArgumentList	buffer		6473287	1					
ANR	6473498	Argument	buffer		6473287	0					
ANR	6473499	Identifier	buffer		6473287	0					
ANR	6473500	ReturnStatement	return 0 ;	738:2:22770:22778	6473287	1	True				
ANR	6473501	PrimaryExpression	0		6473287	0					
ANR	6473502	ExpressionStatement	"Success = GetThreadContext ( hThread , Context )"	740:1:22784:22828	6473287	36	True				
ANR	6473503	AssignmentExpression	"Success = GetThreadContext ( hThread , Context )"		6473287	0		=			
ANR	6473504	Identifier	Success		6473287	0					
ANR	6473505	CallExpression	"GetThreadContext ( hThread , Context )"		6473287	1					
ANR	6473506	Callee	GetThreadContext		6473287	0					
ANR	6473507	Identifier	GetThreadContext		6473287	0					
ANR	6473508	ArgumentList	hThread		6473287	1					
ANR	6473509	Argument	hThread		6473287	0					
ANR	6473510	Identifier	hThread		6473287	0					
ANR	6473511	Argument	Context		6473287	1					
ANR	6473512	Identifier	Context		6473287	0					
ANR	6473513	IfStatement	if ( Success == FALSE )		6473287	37					
ANR	6473514	Condition	Success == FALSE	741:5:22835:22850	6473287	0	True				
ANR	6473515	EqualityExpression	Success == FALSE		6473287	0		==			
ANR	6473516	Identifier	Success		6473287	0					
ANR	6473517	Identifier	FALSE		6473287	1					
ANR	6473518	CompoundStatement		38:23:1004:1004	6473287	1					
ANR	6473519	ExpressionStatement	free ( buffer )	742:2:22857:22869	6473287	0	True				
ANR	6473520	CallExpression	free ( buffer )		6473287	0					
ANR	6473521	Callee	free		6473287	0					
ANR	6473522	Identifier	free		6473287	0					
ANR	6473523	ArgumentList	buffer		6473287	1					
ANR	6473524	Argument	buffer		6473287	0					
ANR	6473525	Identifier	buffer		6473287	0					
ANR	6473526	ReturnStatement	return 0 ;	743:2:22873:22881	6473287	1	True				
ANR	6473527	PrimaryExpression	0		6473287	0					
ANR	6473528	ExpressionStatement	"Success = w32_GetXStateFeaturesMask ( Context , & FeatureMask )"	745:1:22887:22945	6473287	38	True				
ANR	6473529	AssignmentExpression	"Success = w32_GetXStateFeaturesMask ( Context , & FeatureMask )"		6473287	0		=			
ANR	6473530	Identifier	Success		6473287	0					
ANR	6473531	CallExpression	"w32_GetXStateFeaturesMask ( Context , & FeatureMask )"		6473287	1					
ANR	6473532	Callee	w32_GetXStateFeaturesMask		6473287	0					
ANR	6473533	Identifier	w32_GetXStateFeaturesMask		6473287	0					
ANR	6473534	ArgumentList	Context		6473287	1					
ANR	6473535	Argument	Context		6473287	0					
ANR	6473536	Identifier	Context		6473287	0					
ANR	6473537	Argument	& FeatureMask		6473287	1					
ANR	6473538	UnaryOperationExpression	& FeatureMask		6473287	0					
ANR	6473539	UnaryOperator	&		6473287	0					
ANR	6473540	Identifier	FeatureMask		6473287	1					
ANR	6473541	IfStatement	if ( Success == FALSE )		6473287	39					
ANR	6473542	Condition	Success == FALSE	746:5:22952:22967	6473287	0	True				
ANR	6473543	EqualityExpression	Success == FALSE		6473287	0		==			
ANR	6473544	Identifier	Success		6473287	0					
ANR	6473545	Identifier	FALSE		6473287	1					
ANR	6473546	CompoundStatement		43:23:1121:1121	6473287	1					
ANR	6473547	ExpressionStatement	free ( buffer )	747:2:22974:22986	6473287	0	True				
ANR	6473548	CallExpression	free ( buffer )		6473287	0					
ANR	6473549	Callee	free		6473287	0					
ANR	6473550	Identifier	free		6473287	0					
ANR	6473551	ArgumentList	buffer		6473287	1					
ANR	6473552	Argument	buffer		6473287	0					
ANR	6473553	Identifier	buffer		6473287	0					
ANR	6473554	ReturnStatement	return 0 ;	748:2:22990:22998	6473287	1	True				
ANR	6473555	PrimaryExpression	0		6473287	0					
ANR	6473556	ExpressionStatement	"Xmm = ( ut128 * ) w32_LocateXStateFeature ( Context , XSTATE_LEGACY_SSE , & FeatureLength )"	750:1:23004:23086	6473287	40	True				
ANR	6473557	AssignmentExpression	"Xmm = ( ut128 * ) w32_LocateXStateFeature ( Context , XSTATE_LEGACY_SSE , & FeatureLength )"		6473287	0		=			
ANR	6473558	Identifier	Xmm		6473287	0					
ANR	6473559	CastExpression	"( ut128 * ) w32_LocateXStateFeature ( Context , XSTATE_LEGACY_SSE , & FeatureLength )"		6473287	1					
ANR	6473560	CastTarget	ut128 *		6473287	0					
ANR	6473561	CallExpression	"w32_LocateXStateFeature ( Context , XSTATE_LEGACY_SSE , & FeatureLength )"		6473287	1					
ANR	6473562	Callee	w32_LocateXStateFeature		6473287	0					
ANR	6473563	Identifier	w32_LocateXStateFeature		6473287	0					
ANR	6473564	ArgumentList	Context		6473287	1					
ANR	6473565	Argument	Context		6473287	0					
ANR	6473566	Identifier	Context		6473287	0					
ANR	6473567	Argument	XSTATE_LEGACY_SSE		6473287	1					
ANR	6473568	Identifier	XSTATE_LEGACY_SSE		6473287	0					
ANR	6473569	Argument	& FeatureLength		6473287	2					
ANR	6473570	UnaryOperationExpression	& FeatureLength		6473287	0					
ANR	6473571	UnaryOperator	&		6473287	0					
ANR	6473572	Identifier	FeatureLength		6473287	1					
ANR	6473573	ExpressionStatement	nRegs = FeatureLength / sizeof ( * Xmm )	751:8:23096:23132	6473287	41	True				
ANR	6473574	AssignmentExpression	nRegs = FeatureLength / sizeof ( * Xmm )		6473287	0		=			
ANR	6473575	Identifier	nRegs		6473287	0					
ANR	6473576	MultiplicativeExpression	FeatureLength / sizeof ( * Xmm )		6473287	1		/			
ANR	6473577	Identifier	FeatureLength		6473287	0					
ANR	6473578	SizeofExpression	sizeof ( * Xmm )		6473287	1					
ANR	6473579	Sizeof	sizeof		6473287	0					
ANR	6473580	UnaryOperationExpression	* Xmm		6473287	1					
ANR	6473581	UnaryOperator	*		6473287	0					
ANR	6473582	Identifier	Xmm		6473287	1					
ANR	6473583	ForStatement	for ( Index = 0 ; Index < nRegs ; Index ++ )		6473287	42					
ANR	6473584	ForInit	Index = 0 ;	752:6:23140:23149	6473287	0	True				
ANR	6473585	AssignmentExpression	Index = 0		6473287	0		=			
ANR	6473586	Identifier	Index		6473287	0					
ANR	6473587	PrimaryExpression	0		6473287	1					
ANR	6473588	Condition	Index < nRegs	752:17:23151:23163	6473287	1	True				
ANR	6473589	RelationalExpression	Index < nRegs		6473287	0		<			
ANR	6473590	Identifier	Index		6473287	0					
ANR	6473591	Identifier	nRegs		6473287	1					
ANR	6473592	PostIncDecOperationExpression	Index ++	752:32:23166:23172	6473287	2	True				
ANR	6473593	Identifier	Index		6473287	0					
ANR	6473594	IncDec	++		6473287	1					
ANR	6473595	CompoundStatement		49:41:1326:1326	6473287	3					
ANR	6473596	ExpressionStatement	ymm [ Index ] . High = 0	753:2:23179:23198	6473287	0	True				
ANR	6473597	AssignmentExpression	ymm [ Index ] . High = 0		6473287	0		=			
ANR	6473598	MemberAccess	ymm [ Index ] . High		6473287	0					
ANR	6473599	ArrayIndexing	ymm [ Index ]		6473287	0					
ANR	6473600	Identifier	ymm		6473287	0					
ANR	6473601	Identifier	Index		6473287	1					
ANR	6473602	Identifier	High		6473287	1					
ANR	6473603	PrimaryExpression	0		6473287	1					
ANR	6473604	ExpressionStatement	xmm [ Index ] . High = 0	754:2:23202:23221	6473287	1	True				
ANR	6473605	AssignmentExpression	xmm [ Index ] . High = 0		6473287	0		=			
ANR	6473606	MemberAccess	xmm [ Index ] . High		6473287	0					
ANR	6473607	ArrayIndexing	xmm [ Index ]		6473287	0					
ANR	6473608	Identifier	xmm		6473287	0					
ANR	6473609	Identifier	Index		6473287	1					
ANR	6473610	Identifier	High		6473287	1					
ANR	6473611	PrimaryExpression	0		6473287	1					
ANR	6473612	ExpressionStatement	ymm [ Index ] . Low = 0	755:2:23225:23243	6473287	2	True				
ANR	6473613	AssignmentExpression	ymm [ Index ] . Low = 0		6473287	0		=			
ANR	6473614	MemberAccess	ymm [ Index ] . Low		6473287	0					
ANR	6473615	ArrayIndexing	ymm [ Index ]		6473287	0					
ANR	6473616	Identifier	ymm		6473287	0					
ANR	6473617	Identifier	Index		6473287	1					
ANR	6473618	Identifier	Low		6473287	1					
ANR	6473619	PrimaryExpression	0		6473287	1					
ANR	6473620	ExpressionStatement	xmm [ Index ] . Low = 0	756:2:23247:23265	6473287	3	True				
ANR	6473621	AssignmentExpression	xmm [ Index ] . Low = 0		6473287	0		=			
ANR	6473622	MemberAccess	xmm [ Index ] . Low		6473287	0					
ANR	6473623	ArrayIndexing	xmm [ Index ]		6473287	0					
ANR	6473624	Identifier	xmm		6473287	0					
ANR	6473625	Identifier	Index		6473287	1					
ANR	6473626	Identifier	Low		6473287	1					
ANR	6473627	PrimaryExpression	0		6473287	1					
ANR	6473628	IfStatement	if ( Xmm != NULL )		6473287	43					
ANR	6473629	Condition	Xmm != NULL	758:5:23275:23285	6473287	0	True				
ANR	6473630	EqualityExpression	Xmm != NULL		6473287	0		!=			
ANR	6473631	Identifier	Xmm		6473287	0					
ANR	6473632	Identifier	NULL		6473287	1					
ANR	6473633	CompoundStatement		55:18:1439:1439	6473287	1					
ANR	6473634	ForStatement	for ( Index = 0 ; Index < nRegs ; Index ++ )		6473287	0					
ANR	6473635	ForInit	Index = 0 ;	759:7:23297:23306	6473287	0	True				
ANR	6473636	AssignmentExpression	Index = 0		6473287	0		=			
ANR	6473637	Identifier	Index		6473287	0					
ANR	6473638	PrimaryExpression	0		6473287	1					
ANR	6473639	Condition	Index < nRegs	759:18:23308:23320	6473287	1	True				
ANR	6473640	RelationalExpression	Index < nRegs		6473287	0		<			
ANR	6473641	Identifier	Index		6473287	0					
ANR	6473642	Identifier	nRegs		6473287	1					
ANR	6473643	PostIncDecOperationExpression	Index ++	759:33:23323:23329	6473287	2	True				
ANR	6473644	Identifier	Index		6473287	0					
ANR	6473645	IncDec	++		6473287	1					
ANR	6473646	CompoundStatement		56:42:1483:1483	6473287	3					
ANR	6473647	ExpressionStatement	xmm [ Index ] . High = Xmm [ Index ] . High	760:3:23337:23370	6473287	0	True				
ANR	6473648	AssignmentExpression	xmm [ Index ] . High = Xmm [ Index ] . High		6473287	0		=			
ANR	6473649	MemberAccess	xmm [ Index ] . High		6473287	0					
ANR	6473650	ArrayIndexing	xmm [ Index ]		6473287	0					
ANR	6473651	Identifier	xmm		6473287	0					
ANR	6473652	Identifier	Index		6473287	1					
ANR	6473653	Identifier	High		6473287	1					
ANR	6473654	MemberAccess	Xmm [ Index ] . High		6473287	1					
ANR	6473655	ArrayIndexing	Xmm [ Index ]		6473287	0					
ANR	6473656	Identifier	Xmm		6473287	0					
ANR	6473657	Identifier	Index		6473287	1					
ANR	6473658	Identifier	High		6473287	1					
ANR	6473659	ExpressionStatement	xmm [ Index ] . Low = Xmm [ Index ] . Low	761:3:23375:23406	6473287	1	True				
ANR	6473660	AssignmentExpression	xmm [ Index ] . Low = Xmm [ Index ] . Low		6473287	0		=			
ANR	6473661	MemberAccess	xmm [ Index ] . Low		6473287	0					
ANR	6473662	ArrayIndexing	xmm [ Index ]		6473287	0					
ANR	6473663	Identifier	xmm		6473287	0					
ANR	6473664	Identifier	Index		6473287	1					
ANR	6473665	Identifier	Low		6473287	1					
ANR	6473666	MemberAccess	Xmm [ Index ] . Low		6473287	1					
ANR	6473667	ArrayIndexing	Xmm [ Index ]		6473287	0					
ANR	6473668	Identifier	Xmm		6473287	0					
ANR	6473669	Identifier	Index		6473287	1					
ANR	6473670	Identifier	Low		6473287	1					
ANR	6473671	IfStatement	if ( ( FeatureMask & XSTATE_MASK_AVX ) != 0 )		6473287	44					
ANR	6473672	Condition	( FeatureMask & XSTATE_MASK_AVX ) != 0	764:5:23420:23455	6473287	0	True				
ANR	6473673	EqualityExpression	( FeatureMask & XSTATE_MASK_AVX ) != 0		6473287	0		!=			
ANR	6473674	BitAndExpression	FeatureMask & XSTATE_MASK_AVX		6473287	0		&			
ANR	6473675	Identifier	FeatureMask		6473287	0					
ANR	6473676	Identifier	XSTATE_MASK_AVX		6473287	1					
ANR	6473677	PrimaryExpression	0		6473287	1					
ANR	6473678	CompoundStatement		61:43:1609:1609	6473287	1					
ANR	6473679	ExpressionStatement	"Ymm = ( ut128 * ) w32_LocateXStateFeature ( Context , XSTATE_AVX , NULL )"	766:2:23517:23582	6473287	0	True				
ANR	6473680	AssignmentExpression	"Ymm = ( ut128 * ) w32_LocateXStateFeature ( Context , XSTATE_AVX , NULL )"		6473287	0		=			
ANR	6473681	Identifier	Ymm		6473287	0					
ANR	6473682	CastExpression	"( ut128 * ) w32_LocateXStateFeature ( Context , XSTATE_AVX , NULL )"		6473287	1					
ANR	6473683	CastTarget	ut128 *		6473287	0					
ANR	6473684	CallExpression	"w32_LocateXStateFeature ( Context , XSTATE_AVX , NULL )"		6473287	1					
ANR	6473685	Callee	w32_LocateXStateFeature		6473287	0					
ANR	6473686	Identifier	w32_LocateXStateFeature		6473287	0					
ANR	6473687	ArgumentList	Context		6473287	1					
ANR	6473688	Argument	Context		6473287	0					
ANR	6473689	Identifier	Context		6473287	0					
ANR	6473690	Argument	XSTATE_AVX		6473287	1					
ANR	6473691	Identifier	XSTATE_AVX		6473287	0					
ANR	6473692	Argument	NULL		6473287	2					
ANR	6473693	Identifier	NULL		6473287	0					
ANR	6473694	ForStatement	for ( Index = 0 ; Index < nRegs ; Index ++ )		6473287	1					
ANR	6473695	ForInit	Index = 0 ;	767:7:23591:23600	6473287	0	True				
ANR	6473696	AssignmentExpression	Index = 0		6473287	0		=			
ANR	6473697	Identifier	Index		6473287	0					
ANR	6473698	PrimaryExpression	0		6473287	1					
ANR	6473699	Condition	Index < nRegs	767:18:23602:23614	6473287	1	True				
ANR	6473700	RelationalExpression	Index < nRegs		6473287	0		<			
ANR	6473701	Identifier	Index		6473287	0					
ANR	6473702	Identifier	nRegs		6473287	1					
ANR	6473703	PostIncDecOperationExpression	Index ++	767:33:23617:23623	6473287	2	True				
ANR	6473704	Identifier	Index		6473287	0					
ANR	6473705	IncDec	++		6473287	1					
ANR	6473706	CompoundStatement		64:42:1777:1777	6473287	3					
ANR	6473707	ExpressionStatement	ymm [ Index ] . High = Ymm [ Index ] . High	768:3:23631:23664	6473287	0	True				
ANR	6473708	AssignmentExpression	ymm [ Index ] . High = Ymm [ Index ] . High		6473287	0		=			
ANR	6473709	MemberAccess	ymm [ Index ] . High		6473287	0					
ANR	6473710	ArrayIndexing	ymm [ Index ]		6473287	0					
ANR	6473711	Identifier	ymm		6473287	0					
ANR	6473712	Identifier	Index		6473287	1					
ANR	6473713	Identifier	High		6473287	1					
ANR	6473714	MemberAccess	Ymm [ Index ] . High		6473287	1					
ANR	6473715	ArrayIndexing	Ymm [ Index ]		6473287	0					
ANR	6473716	Identifier	Ymm		6473287	0					
ANR	6473717	Identifier	Index		6473287	1					
ANR	6473718	Identifier	High		6473287	1					
ANR	6473719	ExpressionStatement	ymm [ Index ] . Low = Ymm [ Index ] . Low	769:3:23669:23700	6473287	1	True				
ANR	6473720	AssignmentExpression	ymm [ Index ] . Low = Ymm [ Index ] . Low		6473287	0		=			
ANR	6473721	MemberAccess	ymm [ Index ] . Low		6473287	0					
ANR	6473722	ArrayIndexing	ymm [ Index ]		6473287	0					
ANR	6473723	Identifier	ymm		6473287	0					
ANR	6473724	Identifier	Index		6473287	1					
ANR	6473725	Identifier	Low		6473287	1					
ANR	6473726	MemberAccess	Ymm [ Index ] . Low		6473287	1					
ANR	6473727	ArrayIndexing	Ymm [ Index ]		6473287	0					
ANR	6473728	Identifier	Ymm		6473287	0					
ANR	6473729	Identifier	Index		6473287	1					
ANR	6473730	Identifier	Low		6473287	1					
ANR	6473731	ExpressionStatement	free ( buffer )	772:1:23710:23722	6473287	45	True				
ANR	6473732	CallExpression	free ( buffer )		6473287	0					
ANR	6473733	Callee	free		6473287	0					
ANR	6473734	Identifier	free		6473287	0					
ANR	6473735	ArgumentList	buffer		6473287	1					
ANR	6473736	Argument	buffer		6473287	0					
ANR	6473737	Identifier	buffer		6473287	0					
ANR	6473738	ReturnStatement	return nRegs ;	773:1:23725:23737	6473287	46	True				
ANR	6473739	Identifier	nRegs		6473287	0					
ANR	6473740	ReturnType	static int		6473287	1					
ANR	6473741	Identifier	GetAVX		6473287	2					
ANR	6473742	ParameterList	"HANDLE hThread , ut128 xmm [ 16 ] , ut128 ymm [ 16 ]"		6473287	3					
ANR	6473743	Parameter	HANDLE hThread	704:18:21802:21815	6473287	0	True				
ANR	6473744	ParameterType	HANDLE		6473287	0					
ANR	6473745	Identifier	hThread		6473287	1					
ANR	6473746	Parameter	ut128 xmm [ 16 ]	704:34:21818:21830	6473287	1	True				
ANR	6473747	ParameterType	ut128 [ 16 ]		6473287	0					
ANR	6473748	Identifier	xmm		6473287	1					
ANR	6473749	Parameter	ut128 ymm [ 16 ]	704:49:21833:21845	6473287	2	True				
ANR	6473750	ParameterType	ut128 [ 16 ]		6473287	0					
ANR	6473751	Identifier	ymm		6473287	1					
ANR	6473752	CFGEntryNode	ENTRY		6473287		True				
ANR	6473753	CFGExitNode	EXIT		6473287		True				
ANR	6473754	Symbol	* xmm		6473287						
ANR	6473755	Symbol	* ymm		6473287						
ANR	6473756	Symbol	ERROR_INSUFFICIENT_BUFFER		6473287						
ANR	6473757	Symbol	Index		6473287						
ANR	6473758	Symbol	XSTATE_AVX		6473287						
ANR	6473759	Symbol	FeatureMask		6473287						
ANR	6473760	Symbol	Success		6473287						
ANR	6473761	Symbol	CONTEXT_ALL		6473287						
ANR	6473762	Symbol	xmm [ Index ] . High		6473287						
ANR	6473763	Symbol	w32_GetXStateFeaturesMask		6473287						
ANR	6473764	Symbol	xmm [ Index ] . Low		6473287						
ANR	6473765	Symbol	Ymm [ Index ] . Low		6473287						
ANR	6473766	Symbol	ymm		6473287						
ANR	6473767	Symbol	xmm		6473287						
ANR	6473768	Symbol	nRegs		6473287						
ANR	6473769	Symbol	& ContextSize		6473287						
ANR	6473770	Symbol	ymm [ Index ] . High		6473287						
ANR	6473771	Symbol	buffer		6473287						
ANR	6473772	Symbol	& FeatureLength		6473287						
ANR	6473773	Symbol	hThread		6473287						
ANR	6473774	Symbol	* Ymm		6473287						
ANR	6473775	Symbol	* Xmm		6473287						
ANR	6473776	Symbol	XSTATE_MASK_AVX		6473287						
ANR	6473777	Symbol	w32_InitializeContext		6473287						
ANR	6473778	Symbol	XSTATE_LEGACY_SSE		6473287						
ANR	6473779	Symbol	w32_SetXStateFeaturesMask		6473287						
ANR	6473780	Symbol	Context		6473287						
ANR	6473781	Symbol	malloc		6473287						
ANR	6473782	Symbol	NULL		6473287						
ANR	6473783	Symbol	Xmm [ Index ] . Low		6473287						
ANR	6473784	Symbol	CONTEXT_XSTATE		6473287						
ANR	6473785	Symbol	* Index		6473287						
ANR	6473786	Symbol	w32_GetEnabledXStateFeatures		6473287						
ANR	6473787	Symbol	w32_LocateXStateFeature		6473287						
ANR	6473788	Symbol	& Context		6473287						
ANR	6473789	Symbol	TRUE		6473287						
ANR	6473790	Symbol	FeatureLength		6473287						
ANR	6473791	Symbol	GetLastError		6473287						
ANR	6473792	Symbol	ContextSize		6473287						
ANR	6473793	Symbol	Ymm		6473287						
ANR	6473794	Symbol	Xmm		6473287						
ANR	6473795	Symbol	Xmm [ Index ] . High		6473287						
ANR	6473796	Symbol	FALSE		6473287						
ANR	6473797	Symbol	ymm [ Index ] . Low		6473287						
ANR	6473798	Symbol	Ymm [ Index ] . High		6473287						
ANR	6473799	Symbol	GetThreadContext		6473287						
ANR	6473800	Symbol	& FeatureMask		6473287						
ANR	6473801	Function	printwincontext	776:0:23742:26682							
ANR	6473802	FunctionDef	"printwincontext (HANDLE hThread , CONTEXT * ctx)"		6473801	0					
ANR	6473803	CompoundStatement		776:59:23801:26682	6473801	0					
ANR	6473804	IdentifierDeclStatement	ut128 xmm [ 16 ] ;	777:1:23804:23817	6473801	0	True				
ANR	6473805	IdentifierDecl	xmm [ 16 ]		6473801	0					
ANR	6473806	IdentifierDeclType	ut128 [ 16 ]		6473801	0					
ANR	6473807	Identifier	xmm		6473801	1					
ANR	6473808	PrimaryExpression	16		6473801	2					
ANR	6473809	IdentifierDeclStatement	ut128 ymm [ 16 ] ;	778:1:23820:23833	6473801	1	True				
ANR	6473810	IdentifierDecl	ymm [ 16 ]		6473801	0					
ANR	6473811	IdentifierDeclType	ut128 [ 16 ]		6473801	0					
ANR	6473812	Identifier	ymm		6473801	1					
ANR	6473813	PrimaryExpression	16		6473801	2					
ANR	6473814	IdentifierDeclStatement	ut80 st [ 8 ] ;	779:1:23836:23846	6473801	2	True				
ANR	6473815	IdentifierDecl	st [ 8 ]		6473801	0					
ANR	6473816	IdentifierDeclType	ut80 [ 8 ]		6473801	0					
ANR	6473817	Identifier	st		6473801	1					
ANR	6473818	PrimaryExpression	8		6473801	2					
ANR	6473819	IdentifierDeclStatement	ut64 mm [ 8 ] ;	780:1:23849:23859	6473801	3	True				
ANR	6473820	IdentifierDecl	mm [ 8 ]		6473801	0					
ANR	6473821	IdentifierDeclType	ut64 [ 8 ]		6473801	0					
ANR	6473822	Identifier	mm		6473801	1					
ANR	6473823	PrimaryExpression	8		6473801	2					
ANR	6473824	IdentifierDeclStatement	ut16 top = 0 ;	781:1:23862:23874	6473801	4	True				
ANR	6473825	IdentifierDecl	top = 0		6473801	0					
ANR	6473826	IdentifierDeclType	ut16		6473801	0					
ANR	6473827	Identifier	top		6473801	1					
ANR	6473828	AssignmentExpression	top = 0		6473801	2		=			
ANR	6473829	Identifier	top		6473801	0					
ANR	6473830	PrimaryExpression	0		6473801	1					
ANR	6473831	IdentifierDeclStatement	"int x = 0 , nxmm = 0 , nymm = 0 ;"	782:1:23877:23906	6473801	5	True				
ANR	6473832	IdentifierDecl	x = 0		6473801	0					
ANR	6473833	IdentifierDeclType	int		6473801	0					
ANR	6473834	Identifier	x		6473801	1					
ANR	6473835	AssignmentExpression	x = 0		6473801	2		=			
ANR	6473836	Identifier	x		6473801	0					
ANR	6473837	PrimaryExpression	0		6473801	1					
ANR	6473838	IdentifierDecl	nxmm = 0		6473801	1					
ANR	6473839	IdentifierDeclType	int		6473801	0					
ANR	6473840	Identifier	nxmm		6473801	1					
ANR	6473841	AssignmentExpression	nxmm = 0		6473801	2		=			
ANR	6473842	Identifier	nxmm		6473801	0					
ANR	6473843	PrimaryExpression	0		6473801	1					
ANR	6473844	IdentifierDecl	nymm = 0		6473801	2					
ANR	6473845	IdentifierDeclType	int		6473801	0					
ANR	6473846	Identifier	nymm		6473801	1					
ANR	6473847	AssignmentExpression	nymm = 0		6473801	2		=			
ANR	6473848	Identifier	nymm		6473801	0					
ANR	6473849	PrimaryExpression	0		6473801	1					
ANR	6473850	ExpressionStatement	"eprintf ( ""ControlWord   = %08x StatusWord   = %08x\\n"" , ctx -> FltSave . ControlWord , ctx -> FltSave . StatusWord )"	784:1:23920:24025	6473801	6	True				
ANR	6473851	CallExpression	"eprintf ( ""ControlWord   = %08x StatusWord   = %08x\\n"" , ctx -> FltSave . ControlWord , ctx -> FltSave . StatusWord )"		6473801	0					
ANR	6473852	Callee	eprintf		6473801	0					
ANR	6473853	Identifier	eprintf		6473801	0					
ANR	6473854	ArgumentList	"""ControlWord   = %08x StatusWord   = %08x\\n"""		6473801	1					
ANR	6473855	Argument	"""ControlWord   = %08x StatusWord   = %08x\\n"""		6473801	0					
ANR	6473856	PrimaryExpression	"""ControlWord   = %08x StatusWord   = %08x\\n"""		6473801	0					
ANR	6473857	Argument	ctx -> FltSave . ControlWord		6473801	1					
ANR	6473858	MemberAccess	ctx -> FltSave . ControlWord		6473801	0					
ANR	6473859	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473860	Identifier	ctx		6473801	0					
ANR	6473861	Identifier	FltSave		6473801	1					
ANR	6473862	Identifier	ControlWord		6473801	1					
ANR	6473863	Argument	ctx -> FltSave . StatusWord		6473801	2					
ANR	6473864	MemberAccess	ctx -> FltSave . StatusWord		6473801	0					
ANR	6473865	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473866	Identifier	ctx		6473801	0					
ANR	6473867	Identifier	FltSave		6473801	1					
ANR	6473868	Identifier	StatusWord		6473801	1					
ANR	6473869	ExpressionStatement	"eprintf ( ""MxCsr         = %08x TagWord      = %08x\\n"" , ctx -> MxCsr , ctx -> FltSave . TagWord )"	785:1:24028:24116	6473801	7	True				
ANR	6473870	CallExpression	"eprintf ( ""MxCsr         = %08x TagWord      = %08x\\n"" , ctx -> MxCsr , ctx -> FltSave . TagWord )"		6473801	0					
ANR	6473871	Callee	eprintf		6473801	0					
ANR	6473872	Identifier	eprintf		6473801	0					
ANR	6473873	ArgumentList	"""MxCsr         = %08x TagWord      = %08x\\n"""		6473801	1					
ANR	6473874	Argument	"""MxCsr         = %08x TagWord      = %08x\\n"""		6473801	0					
ANR	6473875	PrimaryExpression	"""MxCsr         = %08x TagWord      = %08x\\n"""		6473801	0					
ANR	6473876	Argument	ctx -> MxCsr		6473801	1					
ANR	6473877	PtrMemberAccess	ctx -> MxCsr		6473801	0					
ANR	6473878	Identifier	ctx		6473801	0					
ANR	6473879	Identifier	MxCsr		6473801	1					
ANR	6473880	Argument	ctx -> FltSave . TagWord		6473801	2					
ANR	6473881	MemberAccess	ctx -> FltSave . TagWord		6473801	0					
ANR	6473882	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473883	Identifier	ctx		6473801	0					
ANR	6473884	Identifier	FltSave		6473801	1					
ANR	6473885	Identifier	TagWord		6473801	1					
ANR	6473886	ExpressionStatement	"eprintf ( ""ErrorOffset   = %08x DataOffset   = %08x\\n"" , ctx -> FltSave . ErrorOffset , ctx -> FltSave . DataOffset )"	786:1:24119:24224	6473801	8	True				
ANR	6473887	CallExpression	"eprintf ( ""ErrorOffset   = %08x DataOffset   = %08x\\n"" , ctx -> FltSave . ErrorOffset , ctx -> FltSave . DataOffset )"		6473801	0					
ANR	6473888	Callee	eprintf		6473801	0					
ANR	6473889	Identifier	eprintf		6473801	0					
ANR	6473890	ArgumentList	"""ErrorOffset   = %08x DataOffset   = %08x\\n"""		6473801	1					
ANR	6473891	Argument	"""ErrorOffset   = %08x DataOffset   = %08x\\n"""		6473801	0					
ANR	6473892	PrimaryExpression	"""ErrorOffset   = %08x DataOffset   = %08x\\n"""		6473801	0					
ANR	6473893	Argument	ctx -> FltSave . ErrorOffset		6473801	1					
ANR	6473894	MemberAccess	ctx -> FltSave . ErrorOffset		6473801	0					
ANR	6473895	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473896	Identifier	ctx		6473801	0					
ANR	6473897	Identifier	FltSave		6473801	1					
ANR	6473898	Identifier	ErrorOffset		6473801	1					
ANR	6473899	Argument	ctx -> FltSave . DataOffset		6473801	2					
ANR	6473900	MemberAccess	ctx -> FltSave . DataOffset		6473801	0					
ANR	6473901	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473902	Identifier	ctx		6473801	0					
ANR	6473903	Identifier	FltSave		6473801	1					
ANR	6473904	Identifier	DataOffset		6473801	1					
ANR	6473905	ExpressionStatement	"eprintf ( ""ErrorSelector = %08x DataSelector = %08x\\n"" , ctx -> FltSave . ErrorSelector , ctx -> FltSave . DataSelector )"	787:1:24227:24336	6473801	9	True				
ANR	6473906	CallExpression	"eprintf ( ""ErrorSelector = %08x DataSelector = %08x\\n"" , ctx -> FltSave . ErrorSelector , ctx -> FltSave . DataSelector )"		6473801	0					
ANR	6473907	Callee	eprintf		6473801	0					
ANR	6473908	Identifier	eprintf		6473801	0					
ANR	6473909	ArgumentList	"""ErrorSelector = %08x DataSelector = %08x\\n"""		6473801	1					
ANR	6473910	Argument	"""ErrorSelector = %08x DataSelector = %08x\\n"""		6473801	0					
ANR	6473911	PrimaryExpression	"""ErrorSelector = %08x DataSelector = %08x\\n"""		6473801	0					
ANR	6473912	Argument	ctx -> FltSave . ErrorSelector		6473801	1					
ANR	6473913	MemberAccess	ctx -> FltSave . ErrorSelector		6473801	0					
ANR	6473914	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473915	Identifier	ctx		6473801	0					
ANR	6473916	Identifier	FltSave		6473801	1					
ANR	6473917	Identifier	ErrorSelector		6473801	1					
ANR	6473918	Argument	ctx -> FltSave . DataSelector		6473801	2					
ANR	6473919	MemberAccess	ctx -> FltSave . DataSelector		6473801	0					
ANR	6473920	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473921	Identifier	ctx		6473801	0					
ANR	6473922	Identifier	FltSave		6473801	1					
ANR	6473923	Identifier	DataSelector		6473801	1					
ANR	6473924	ForStatement	for ( x = 0 ; x < 8 ; x ++ )		6473801	10					
ANR	6473925	ForInit	x = 0 ;	788:6:24344:24349	6473801	0	True				
ANR	6473926	AssignmentExpression	x = 0		6473801	0		=			
ANR	6473927	Identifier	x		6473801	0					
ANR	6473928	PrimaryExpression	0		6473801	1					
ANR	6473929	Condition	x < 8	788:13:24351:24355	6473801	1	True				
ANR	6473930	RelationalExpression	x < 8		6473801	0		<			
ANR	6473931	Identifier	x		6473801	0					
ANR	6473932	PrimaryExpression	8		6473801	1					
ANR	6473933	PostIncDecOperationExpression	x ++	788:20:24358:24360	6473801	2	True				
ANR	6473934	Identifier	x		6473801	0					
ANR	6473935	IncDec	++		6473801	1					
ANR	6473936	CompoundStatement		13:25:561:561	6473801	3					
ANR	6473937	ExpressionStatement	st [ x ] . Low = ctx -> FltSave . FloatRegisters [ x ] . Low	789:2:24367:24413	6473801	0	True				
ANR	6473938	AssignmentExpression	st [ x ] . Low = ctx -> FltSave . FloatRegisters [ x ] . Low		6473801	0		=			
ANR	6473939	MemberAccess	st [ x ] . Low		6473801	0					
ANR	6473940	ArrayIndexing	st [ x ]		6473801	0					
ANR	6473941	Identifier	st		6473801	0					
ANR	6473942	Identifier	x		6473801	1					
ANR	6473943	Identifier	Low		6473801	1					
ANR	6473944	MemberAccess	ctx -> FltSave . FloatRegisters [ x ] . Low		6473801	1					
ANR	6473945	ArrayIndexing	ctx -> FltSave . FloatRegisters [ x ]		6473801	0					
ANR	6473946	MemberAccess	ctx -> FltSave . FloatRegisters		6473801	0					
ANR	6473947	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473948	Identifier	ctx		6473801	0					
ANR	6473949	Identifier	FltSave		6473801	1					
ANR	6473950	Identifier	FloatRegisters		6473801	1					
ANR	6473951	Identifier	x		6473801	1					
ANR	6473952	Identifier	Low		6473801	1					
ANR	6473953	ExpressionStatement	st [ x ] . High = ( ut16 ) ctx -> FltSave . FloatRegisters [ x ] . High	790:2:24417:24471	6473801	1	True				
ANR	6473954	AssignmentExpression	st [ x ] . High = ( ut16 ) ctx -> FltSave . FloatRegisters [ x ] . High		6473801	0		=			
ANR	6473955	MemberAccess	st [ x ] . High		6473801	0					
ANR	6473956	ArrayIndexing	st [ x ]		6473801	0					
ANR	6473957	Identifier	st		6473801	0					
ANR	6473958	Identifier	x		6473801	1					
ANR	6473959	Identifier	High		6473801	1					
ANR	6473960	CastExpression	( ut16 ) ctx -> FltSave . FloatRegisters [ x ] . High		6473801	1					
ANR	6473961	CastTarget	ut16		6473801	0					
ANR	6473962	MemberAccess	ctx -> FltSave . FloatRegisters [ x ] . High		6473801	1					
ANR	6473963	ArrayIndexing	ctx -> FltSave . FloatRegisters [ x ]		6473801	0					
ANR	6473964	MemberAccess	ctx -> FltSave . FloatRegisters		6473801	0					
ANR	6473965	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473966	Identifier	ctx		6473801	0					
ANR	6473967	Identifier	FltSave		6473801	1					
ANR	6473968	Identifier	FloatRegisters		6473801	1					
ANR	6473969	Identifier	x		6473801	1					
ANR	6473970	Identifier	High		6473801	1					
ANR	6473971	ExpressionStatement	top = ( ctx -> FltSave . StatusWord & 0x3fff ) >> 11	792:1:24477:24523	6473801	11	True				
ANR	6473972	AssignmentExpression	top = ( ctx -> FltSave . StatusWord & 0x3fff ) >> 11		6473801	0		=			
ANR	6473973	Identifier	top		6473801	0					
ANR	6473974	ShiftExpression	( ctx -> FltSave . StatusWord & 0x3fff ) >> 11		6473801	1		>>			
ANR	6473975	BitAndExpression	ctx -> FltSave . StatusWord & 0x3fff		6473801	0		&			
ANR	6473976	MemberAccess	ctx -> FltSave . StatusWord		6473801	0					
ANR	6473977	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6473978	Identifier	ctx		6473801	0					
ANR	6473979	Identifier	FltSave		6473801	1					
ANR	6473980	Identifier	StatusWord		6473801	1					
ANR	6473981	PrimaryExpression	0x3fff		6473801	1					
ANR	6473982	PrimaryExpression	11		6473801	1					
ANR	6473983	ExpressionStatement	x = 0	793:1:24526:24531	6473801	12	True				
ANR	6473984	AssignmentExpression	x = 0		6473801	0		=			
ANR	6473985	Identifier	x		6473801	0					
ANR	6473986	PrimaryExpression	0		6473801	1					
ANR	6473987	ForStatement	for ( x = 0 ; x < 8 ; x ++ )		6473801	13					
ANR	6473988	ForInit	x = 0 ;	794:6:24539:24544	6473801	0	True				
ANR	6473989	AssignmentExpression	x = 0		6473801	0		=			
ANR	6473990	Identifier	x		6473801	0					
ANR	6473991	PrimaryExpression	0		6473801	1					
ANR	6473992	Condition	x < 8	794:13:24546:24550	6473801	1	True				
ANR	6473993	RelationalExpression	x < 8		6473801	0		<			
ANR	6473994	Identifier	x		6473801	0					
ANR	6473995	PrimaryExpression	8		6473801	1					
ANR	6473996	PostIncDecOperationExpression	x ++	794:20:24553:24555	6473801	2	True				
ANR	6473997	Identifier	x		6473801	0					
ANR	6473998	IncDec	++		6473801	1					
ANR	6473999	CompoundStatement		19:25:756:756	6473801	3					
ANR	6474000	ExpressionStatement	mm [ top ] = ctx -> FltSave . FloatRegisters [ x ] . Low	795:2:24562:24606	6473801	0	True				
ANR	6474001	AssignmentExpression	mm [ top ] = ctx -> FltSave . FloatRegisters [ x ] . Low		6473801	0		=			
ANR	6474002	ArrayIndexing	mm [ top ]		6473801	0					
ANR	6474003	Identifier	mm		6473801	0					
ANR	6474004	Identifier	top		6473801	1					
ANR	6474005	MemberAccess	ctx -> FltSave . FloatRegisters [ x ] . Low		6473801	1					
ANR	6474006	ArrayIndexing	ctx -> FltSave . FloatRegisters [ x ]		6473801	0					
ANR	6474007	MemberAccess	ctx -> FltSave . FloatRegisters		6473801	0					
ANR	6474008	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6474009	Identifier	ctx		6473801	0					
ANR	6474010	Identifier	FltSave		6473801	1					
ANR	6474011	Identifier	FloatRegisters		6473801	1					
ANR	6474012	Identifier	x		6473801	1					
ANR	6474013	Identifier	Low		6473801	1					
ANR	6474014	ExpressionStatement	top ++	796:2:24610:24615	6473801	1	True				
ANR	6474015	PostIncDecOperationExpression	top ++		6473801	0					
ANR	6474016	Identifier	top		6473801	0					
ANR	6474017	IncDec	++		6473801	1					
ANR	6474018	IfStatement	if ( top > 7 )		6473801	2					
ANR	6474019	Condition	top > 7	797:6:24623:24629	6473801	0	True				
ANR	6474020	RelationalExpression	top > 7		6473801	0		>			
ANR	6474021	Identifier	top		6473801	0					
ANR	6474022	PrimaryExpression	7		6473801	1					
ANR	6474023	CompoundStatement		22:15:830:830	6473801	1					
ANR	6474024	ExpressionStatement	top = 0	798:3:24637:24644	6473801	0	True				
ANR	6474025	AssignmentExpression	top = 0		6473801	0		=			
ANR	6474026	Identifier	top		6473801	0					
ANR	6474027	PrimaryExpression	0		6473801	1					
ANR	6474028	ForStatement	for ( x = 0 ; x < 16 ; x ++ )		6473801	14					
ANR	6474029	ForInit	x = 0 ;	801:6:24659:24664	6473801	0	True				
ANR	6474030	AssignmentExpression	x = 0		6473801	0		=			
ANR	6474031	Identifier	x		6473801	0					
ANR	6474032	PrimaryExpression	0		6473801	1					
ANR	6474033	Condition	x < 16	801:13:24666:24671	6473801	1	True				
ANR	6474034	RelationalExpression	x < 16		6473801	0		<			
ANR	6474035	Identifier	x		6473801	0					
ANR	6474036	PrimaryExpression	16		6473801	1					
ANR	6474037	PostIncDecOperationExpression	x ++	801:21:24674:24676	6473801	2	True				
ANR	6474038	Identifier	x		6473801	0					
ANR	6474039	IncDec	++		6473801	1					
ANR	6474040	CompoundStatement		26:26:877:877	6473801	3					
ANR	6474041	ExpressionStatement	xmm [ x ] . High = ctx -> FltSave . XmmRegisters [ x ] . High	802:2:24683:24730	6473801	0	True				
ANR	6474042	AssignmentExpression	xmm [ x ] . High = ctx -> FltSave . XmmRegisters [ x ] . High		6473801	0		=			
ANR	6474043	MemberAccess	xmm [ x ] . High		6473801	0					
ANR	6474044	ArrayIndexing	xmm [ x ]		6473801	0					
ANR	6474045	Identifier	xmm		6473801	0					
ANR	6474046	Identifier	x		6473801	1					
ANR	6474047	Identifier	High		6473801	1					
ANR	6474048	MemberAccess	ctx -> FltSave . XmmRegisters [ x ] . High		6473801	1					
ANR	6474049	ArrayIndexing	ctx -> FltSave . XmmRegisters [ x ]		6473801	0					
ANR	6474050	MemberAccess	ctx -> FltSave . XmmRegisters		6473801	0					
ANR	6474051	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6474052	Identifier	ctx		6473801	0					
ANR	6474053	Identifier	FltSave		6473801	1					
ANR	6474054	Identifier	XmmRegisters		6473801	1					
ANR	6474055	Identifier	x		6473801	1					
ANR	6474056	Identifier	High		6473801	1					
ANR	6474057	ExpressionStatement	xmm [ x ] . Low = ctx -> FltSave . XmmRegisters [ x ] . Low	803:2:24734:24779	6473801	1	True				
ANR	6474058	AssignmentExpression	xmm [ x ] . Low = ctx -> FltSave . XmmRegisters [ x ] . Low		6473801	0		=			
ANR	6474059	MemberAccess	xmm [ x ] . Low		6473801	0					
ANR	6474060	ArrayIndexing	xmm [ x ]		6473801	0					
ANR	6474061	Identifier	xmm		6473801	0					
ANR	6474062	Identifier	x		6473801	1					
ANR	6474063	Identifier	Low		6473801	1					
ANR	6474064	MemberAccess	ctx -> FltSave . XmmRegisters [ x ] . Low		6473801	1					
ANR	6474065	ArrayIndexing	ctx -> FltSave . XmmRegisters [ x ]		6473801	0					
ANR	6474066	MemberAccess	ctx -> FltSave . XmmRegisters		6473801	0					
ANR	6474067	PtrMemberAccess	ctx -> FltSave		6473801	0					
ANR	6474068	Identifier	ctx		6473801	0					
ANR	6474069	Identifier	FltSave		6473801	1					
ANR	6474070	Identifier	XmmRegisters		6473801	1					
ANR	6474071	Identifier	x		6473801	1					
ANR	6474072	Identifier	Low		6473801	1					
ANR	6474073	ExpressionStatement	nxmm = 16	805:1:24785:24794	6473801	15	True				
ANR	6474074	AssignmentExpression	nxmm = 16		6473801	0		=			
ANR	6474075	Identifier	nxmm		6473801	0					
ANR	6474076	PrimaryExpression	16		6473801	1					
ANR	6474077	ForStatement	for ( x = 0 ; x < 8 ; x ++ )		6473801	16					
ANR	6474078	ForInit	x = 0 ;	829:6:25808:25813	6473801	0	True				
ANR	6474079	AssignmentExpression	x = 0		6473801	0		=			
ANR	6474080	Identifier	x		6473801	0					
ANR	6474081	PrimaryExpression	0		6473801	1					
ANR	6474082	Condition	x < 8	829:13:25815:25819	6473801	1	True				
ANR	6474083	RelationalExpression	x < 8		6473801	0		<			
ANR	6474084	Identifier	x		6473801	0					
ANR	6474085	PrimaryExpression	8		6473801	1					
ANR	6474086	PostIncDecOperationExpression	x ++	829:20:25822:25824	6473801	2	True				
ANR	6474087	Identifier	x		6473801	0					
ANR	6474088	IncDec	++		6473801	1					
ANR	6474089	CompoundStatement		54:25:2025:2025	6473801	3					
ANR	6474090	Statement	eprintf	835:2:26145:26151	6473801	0	True				
ANR	6474091	Statement	(	835:10:26153:26153	6473801	1	True				
ANR	6474092	Statement	"""ST%i %04x %016"""	835:11:26154:26169	6473801	2	True				
ANR	6474093	Statement	PFMT64x	835:27:26170:26176	6473801	3	True				
ANR	6474094	Statement	""" (%f)\\n"""	835:34:26177:26185	6473801	4	True				
ANR	6474095	Statement	","	835:43:26186:26186	6473801	5	True				
ANR	6474096	Statement	x	835:45:26188:26188	6473801	6	True				
ANR	6474097	Statement	","	835:46:26189:26189	6473801	7	True				
ANR	6474098	Statement	st	835:48:26191:26192	6473801	8	True				
ANR	6474099	Statement	[	835:50:26193:26193	6473801	9	True				
ANR	6474100	Statement	x	835:51:26194:26194	6473801	10	True				
ANR	6474101	Statement	]	835:52:26195:26195	6473801	11	True				
ANR	6474102	Statement	.	835:53:26196:26196	6473801	12	True				
ANR	6474103	Statement	High	835:54:26197:26200	6473801	13	True				
ANR	6474104	Statement	","	835:58:26201:26201	6473801	14	True				
ANR	6474105	Statement	st	835:60:26203:26204	6473801	15	True				
ANR	6474106	Statement	[	835:62:26205:26205	6473801	16	True				
ANR	6474107	Statement	x	835:63:26206:26206	6473801	17	True				
ANR	6474108	Statement	]	835:64:26207:26207	6473801	18	True				
ANR	6474109	Statement	.	835:65:26208:26208	6473801	19	True				
ANR	6474110	Statement	Low	835:66:26209:26211	6473801	20	True				
ANR	6474111	Statement	","	835:69:26212:26212	6473801	21	True				
ANR	6474112	Statement	(	835:71:26214:26214	6473801	22	True				
ANR	6474113	Statement	double	835:72:26215:26220	6473801	23	True				
ANR	6474114	Statement	)	835:78:26221:26221	6473801	24	True				
ANR	6474115	Statement	(	835:79:26222:26222	6473801	25	True				
ANR	6474116	Statement	*	835:80:26223:26223	6473801	26	True				
ANR	6474117	Statement	(	835:81:26224:26224	6473801	27	True				
ANR	6474118	Statement	(	835:82:26225:26225	6473801	28	True				
ANR	6474119	Statement	long	835:83:26226:26229	6473801	29	True				
ANR	6474120	Statement	double	835:88:26231:26236	6473801	30	True				
ANR	6474121	Statement	*	835:95:26238:26238	6473801	31	True				
ANR	6474122	Statement	)	835:96:26239:26239	6473801	32	True				
ANR	6474123	Statement	&	835:97:26240:26240	6473801	33	True				
ANR	6474124	Statement	st	835:98:26241:26242	6473801	34	True				
ANR	6474125	Statement	[	835:100:26243:26243	6473801	35	True				
ANR	6474126	Statement	x	835:101:26244:26244	6473801	36	True				
ANR	6474127	Statement	]	835:102:26245:26245	6473801	37	True				
ANR	6474128	Statement	)	835:103:26246:26246	6473801	38	True				
ANR	6474129	Statement	)	835:104:26247:26247	6473801	39	True				
ANR	6474130	Statement	)	835:105:26248:26248	6473801	40	True				
ANR	6474131	ExpressionStatement		835:106:26249:26249	6473801	41	True				
ANR	6474132	ForStatement	for ( x = 0 ; x < 8 ; x ++ )		6473801	17					
ANR	6474133	ForInit	x = 0 ;	837:6:26260:26265	6473801	0	True				
ANR	6474134	AssignmentExpression	x = 0		6473801	0		=			
ANR	6474135	Identifier	x		6473801	0					
ANR	6474136	PrimaryExpression	0		6473801	1					
ANR	6474137	Condition	x < 8	837:13:26267:26271	6473801	1	True				
ANR	6474138	RelationalExpression	x < 8		6473801	0		<			
ANR	6474139	Identifier	x		6473801	0					
ANR	6474140	PrimaryExpression	8		6473801	1					
ANR	6474141	PostIncDecOperationExpression	x ++	837:20:26274:26276	6473801	2	True				
ANR	6474142	Identifier	x		6473801	0					
ANR	6474143	IncDec	++		6473801	1					
ANR	6474144	CompoundStatement		62:25:2477:2477	6473801	3					
ANR	6474145	Statement	eprintf	838:2:26283:26289	6473801	0	True				
ANR	6474146	Statement	(	838:10:26291:26291	6473801	1	True				
ANR	6474147	Statement	"""MM%i %016"""	838:11:26292:26302	6473801	2	True				
ANR	6474148	Statement	PFMT64x	838:22:26303:26309	6473801	3	True				
ANR	6474149	Statement	"""\\n"""	838:29:26310:26313	6473801	4	True				
ANR	6474150	Statement	","	838:33:26314:26314	6473801	5	True				
ANR	6474151	Statement	x	838:35:26316:26316	6473801	6	True				
ANR	6474152	Statement	","	838:36:26317:26317	6473801	7	True				
ANR	6474153	Statement	mm	838:38:26319:26320	6473801	8	True				
ANR	6474154	Statement	[	838:40:26321:26321	6473801	9	True				
ANR	6474155	Statement	x	838:41:26322:26322	6473801	10	True				
ANR	6474156	Statement	]	838:42:26323:26323	6473801	11	True				
ANR	6474157	Statement	)	838:43:26324:26324	6473801	12	True				
ANR	6474158	ExpressionStatement		838:44:26325:26325	6473801	13	True				
ANR	6474159	ForStatement	for ( x = 0 ; x < nxmm ; x ++ )		6473801	18					
ANR	6474160	ForInit	x = 0 ;	840:6:26336:26341	6473801	0	True				
ANR	6474161	AssignmentExpression	x = 0		6473801	0		=			
ANR	6474162	Identifier	x		6473801	0					
ANR	6474163	PrimaryExpression	0		6473801	1					
ANR	6474164	Condition	x < nxmm	840:13:26343:26350	6473801	1	True				
ANR	6474165	RelationalExpression	x < nxmm		6473801	0		<			
ANR	6474166	Identifier	x		6473801	0					
ANR	6474167	Identifier	nxmm		6473801	1					
ANR	6474168	PostIncDecOperationExpression	x ++	840:23:26353:26355	6473801	2	True				
ANR	6474169	Identifier	x		6473801	0					
ANR	6474170	IncDec	++		6473801	1					
ANR	6474171	CompoundStatement		65:28:2556:2556	6473801	3					
ANR	6474172	Statement	eprintf	841:2:26362:26368	6473801	0	True				
ANR	6474173	Statement	(	841:10:26370:26370	6473801	1	True				
ANR	6474174	Statement	"""XMM%i %016"""	841:11:26371:26382	6473801	2	True				
ANR	6474175	Statement	PFMT64x	841:23:26383:26389	6473801	3	True				
ANR	6474176	Statement	""" %016"""	841:30:26390:26396	6473801	4	True				
ANR	6474177	Statement	PFMT64x	841:37:26397:26403	6473801	5	True				
ANR	6474178	Statement	"""\\n"""	841:44:26404:26407	6473801	6	True				
ANR	6474179	Statement	","	841:48:26408:26408	6473801	7	True				
ANR	6474180	Statement	x	841:50:26410:26410	6473801	8	True				
ANR	6474181	Statement	","	841:51:26411:26411	6473801	9	True				
ANR	6474182	Statement	xmm	841:53:26413:26415	6473801	10	True				
ANR	6474183	Statement	[	841:56:26416:26416	6473801	11	True				
ANR	6474184	Statement	x	841:57:26417:26417	6473801	12	True				
ANR	6474185	Statement	]	841:58:26418:26418	6473801	13	True				
ANR	6474186	Statement	.	841:59:26419:26419	6473801	14	True				
ANR	6474187	Statement	High	841:60:26420:26423	6473801	15	True				
ANR	6474188	Statement	","	841:64:26424:26424	6473801	16	True				
ANR	6474189	Statement	xmm	841:66:26426:26428	6473801	17	True				
ANR	6474190	Statement	[	841:69:26429:26429	6473801	18	True				
ANR	6474191	Statement	x	841:70:26430:26430	6473801	19	True				
ANR	6474192	Statement	]	841:71:26431:26431	6473801	20	True				
ANR	6474193	Statement	.	841:72:26432:26432	6473801	21	True				
ANR	6474194	Statement	Low	841:73:26433:26435	6473801	22	True				
ANR	6474195	Statement	)	841:76:26436:26436	6473801	23	True				
ANR	6474196	ExpressionStatement		841:77:26437:26437	6473801	24	True				
ANR	6474197	ExpressionStatement	"nymm = GetAVX ( hThread , xmm , ymm )"	844:1:26461:26494	6473801	19	True				
ANR	6474198	AssignmentExpression	"nymm = GetAVX ( hThread , xmm , ymm )"		6473801	0		=			
ANR	6474199	Identifier	nymm		6473801	0					
ANR	6474200	CallExpression	"GetAVX ( hThread , xmm , ymm )"		6473801	1					
ANR	6474201	Callee	GetAVX		6473801	0					
ANR	6474202	Identifier	GetAVX		6473801	0					
ANR	6474203	ArgumentList	hThread		6473801	1					
ANR	6474204	Argument	hThread		6473801	0					
ANR	6474205	Identifier	hThread		6473801	0					
ANR	6474206	Argument	xmm		6473801	1					
ANR	6474207	Identifier	xmm		6473801	0					
ANR	6474208	Argument	ymm		6473801	2					
ANR	6474209	Identifier	ymm		6473801	0					
ANR	6474210	IfStatement	if ( nymm )		6473801	20					
ANR	6474211	Condition	nymm	845:5:26501:26504	6473801	0	True				
ANR	6474212	Identifier	nymm		6473801	0					
ANR	6474213	CompoundStatement		70:11:2705:2705	6473801	1					
ANR	6474214	ForStatement	for ( x = 0 ; x < nymm ; x ++ )		6473801	0					
ANR	6474215	ForInit	x = 0 ;	846:7:26516:26521	6473801	0	True				
ANR	6474216	AssignmentExpression	x = 0		6473801	0		=			
ANR	6474217	Identifier	x		6473801	0					
ANR	6474218	PrimaryExpression	0		6473801	1					
ANR	6474219	Condition	x < nymm	846:14:26523:26530	6473801	1	True				
ANR	6474220	RelationalExpression	x < nymm		6473801	0		<			
ANR	6474221	Identifier	x		6473801	0					
ANR	6474222	Identifier	nymm		6473801	1					
ANR	6474223	PostIncDecOperationExpression	x ++	846:24:26533:26535	6473801	2	True				
ANR	6474224	Identifier	x		6473801	0					
ANR	6474225	IncDec	++		6473801	1					
ANR	6474226	CompoundStatement		71:29:2736:2736	6473801	3					
ANR	6474227	Statement	eprintf	847:3:26543:26549	6473801	0	True				
ANR	6474228	Statement	(	847:11:26551:26551	6473801	1	True				
ANR	6474229	Statement	"""Ymm%d: %016"""	847:12:26552:26564	6473801	2	True				
ANR	6474230	Statement	PFMT64x	847:25:26565:26571	6473801	3	True				
ANR	6474231	Statement	""" %016"""	847:32:26572:26578	6473801	4	True				
ANR	6474232	Statement	PFMT64x	847:39:26579:26585	6473801	5	True				
ANR	6474233	Statement	""" %016"""	847:46:26586:26592	6473801	6	True				
ANR	6474234	Statement	PFMT64x	847:53:26593:26599	6473801	7	True				
ANR	6474235	Statement	""" %016"""	847:60:26600:26606	6473801	8	True				
ANR	6474236	Statement	PFMT64x	847:67:26607:26613	6473801	9	True				
ANR	6474237	Statement	"""\\n"""	847:74:26614:26617	6473801	10	True				
ANR	6474238	Statement	","	847:78:26618:26618	6473801	11	True				
ANR	6474239	Statement	x	847:80:26620:26620	6473801	12	True				
ANR	6474240	Statement	","	847:81:26621:26621	6473801	13	True				
ANR	6474241	Statement	ymm	847:83:26623:26625	6473801	14	True				
ANR	6474242	Statement	[	847:86:26626:26626	6473801	15	True				
ANR	6474243	Statement	x	847:87:26627:26627	6473801	16	True				
ANR	6474244	Statement	]	847:88:26628:26628	6473801	17	True				
ANR	6474245	Statement	.	847:89:26629:26629	6473801	18	True				
ANR	6474246	Statement	High	847:90:26630:26633	6473801	19	True				
ANR	6474247	Statement	","	847:94:26634:26634	6473801	20	True				
ANR	6474248	Statement	ymm	847:96:26636:26638	6473801	21	True				
ANR	6474249	Statement	[	847:99:26639:26639	6473801	22	True				
ANR	6474250	Statement	x	847:100:26640:26640	6473801	23	True				
ANR	6474251	Statement	]	847:101:26641:26641	6473801	24	True				
ANR	6474252	Statement	.	847:102:26642:26642	6473801	25	True				
ANR	6474253	Statement	Low	847:103:26643:26645	6473801	26	True				
ANR	6474254	Statement	","	847:106:26646:26646	6473801	27	True				
ANR	6474255	Statement	xmm	847:108:26648:26650	6473801	28	True				
ANR	6474256	Statement	[	847:111:26651:26651	6473801	29	True				
ANR	6474257	Statement	x	847:112:26652:26652	6473801	30	True				
ANR	6474258	Statement	]	847:113:26653:26653	6473801	31	True				
ANR	6474259	Statement	.	847:114:26654:26654	6473801	32	True				
ANR	6474260	Statement	High	847:115:26655:26658	6473801	33	True				
ANR	6474261	Statement	","	847:119:26659:26659	6473801	34	True				
ANR	6474262	Statement	xmm	847:121:26661:26663	6473801	35	True				
ANR	6474263	Statement	[	847:124:26664:26664	6473801	36	True				
ANR	6474264	Statement	x	847:125:26665:26665	6473801	37	True				
ANR	6474265	Statement	]	847:126:26666:26666	6473801	38	True				
ANR	6474266	Statement	.	847:127:26667:26667	6473801	39	True				
ANR	6474267	Statement	Low	847:128:26668:26670	6473801	40	True				
ANR	6474268	Statement	)	847:132:26672:26672	6473801	41	True				
ANR	6474269	ExpressionStatement		847:133:26673:26673	6473801	42	True				
ANR	6474270	ReturnType	static void		6473801	1					
ANR	6474271	Identifier	printwincontext		6473801	2					
ANR	6474272	ParameterList	"HANDLE hThread , CONTEXT * ctx"		6473801	3					
ANR	6474273	Parameter	HANDLE hThread	776:28:23770:23783	6473801	0	True				
ANR	6474274	ParameterType	HANDLE		6473801	0					
ANR	6474275	Identifier	hThread		6473801	1					
ANR	6474276	Parameter	CONTEXT * ctx	776:44:23786:23798	6473801	1	True				
ANR	6474277	ParameterType	CONTEXT *		6473801	0					
ANR	6474278	Identifier	ctx		6473801	1					
ANR	6474279	CFGEntryNode	ENTRY		6473801		True				
ANR	6474280	CFGExitNode	EXIT		6473801		True				
ANR	6474281	Symbol	ctx -> FltSave . StatusWord		6473801						
ANR	6474282	Symbol	* x		6473801						
ANR	6474283	Symbol	* xmm		6473801						
ANR	6474284	Symbol	* ctx -> FltSave . FloatRegisters		6473801						
ANR	6474285	Symbol	* st		6473801						
ANR	6474286	Symbol	* mm		6473801						
ANR	6474287	Symbol	ctx -> FltSave . TagWord		6473801						
ANR	6474288	Symbol	ctx -> FltSave . ControlWord		6473801						
ANR	6474289	Symbol	* ctx -> FltSave		6473801						
ANR	6474290	Symbol	ctx -> FltSave . ErrorOffset		6473801						
ANR	6474291	Symbol	top		6473801						
ANR	6474292	Symbol	ctx -> MxCsr		6473801						
ANR	6474293	Symbol	ctx -> FltSave . DataOffset		6473801						
ANR	6474294	Symbol	ymm		6473801						
ANR	6474295	Symbol	nymm		6473801						
ANR	6474296	Symbol	xmm		6473801						
ANR	6474297	Symbol	nxmm		6473801						
ANR	6474298	Symbol	xmm [ x ] . Low		6473801						
ANR	6474299	Symbol	ctx -> FltSave . XmmRegisters [ x ] . High		6473801						
ANR	6474300	Symbol	hThread		6473801						
ANR	6474301	Symbol	* ctx -> FltSave . XmmRegisters		6473801						
ANR	6474302	Symbol	ctx -> FltSave . DataSelector		6473801						
ANR	6474303	Symbol	mm		6473801						
ANR	6474304	Symbol	GetAVX		6473801						
ANR	6474305	Symbol	st		6473801						
ANR	6474306	Symbol	ctx -> FltSave . FloatRegisters [ x ] . High		6473801						
ANR	6474307	Symbol	ctx -> FltSave . FloatRegisters		6473801						
ANR	6474308	Symbol	st [ x ] . High		6473801						
ANR	6474309	Symbol	ctx -> FltSave . FloatRegisters [ x ] . Low		6473801						
ANR	6474310	Symbol	ctx		6473801						
ANR	6474311	Symbol	xmm [ x ] . High		6473801						
ANR	6474312	Symbol	ctx -> FltSave . XmmRegisters		6473801						
ANR	6474313	Symbol	st [ x ] . Low		6473801						
ANR	6474314	Symbol	* ctx		6473801						
ANR	6474315	Symbol	ctx -> FltSave . ErrorSelector		6473801						
ANR	6474316	Symbol	ctx -> FltSave . XmmRegisters [ x ] . Low		6473801						
ANR	6474317	Symbol	x		6473801						
ANR	6474318	Symbol	* * ctx		6473801						
ANR	6474319	Symbol	ctx -> FltSave		6473801						
ANR	6474320	Symbol	* top		6473801						
ANR	6474321	Function	w32_reg_read	852:0:26685:27564							
ANR	6474322	FunctionDef	"w32_reg_read (RDebug * dbg , int type , ut8 * buf , int size)"		6474321	0					
ANR	6474323	CompoundStatement		852:67:26752:27564	6474321	0					
ANR	6474324	IdentifierDeclStatement	CONTEXT ctx ;	854:1:26771:26782	6474321	0	True				
ANR	6474325	IdentifierDecl	ctx		6474321	0					
ANR	6474326	IdentifierDeclType	CONTEXT		6474321	0					
ANR	6474327	Identifier	ctx		6474321	1					
ANR	6474328	IdentifierDeclStatement	int showfpu = false ;	858:1:26843:26862	6474321	1	True				
ANR	6474329	IdentifierDecl	showfpu = false		6474321	0					
ANR	6474330	IdentifierDeclType	int		6474321	0					
ANR	6474331	Identifier	showfpu		6474321	1					
ANR	6474332	AssignmentExpression	showfpu = false		6474321	2		=			
ANR	6474333	Identifier	false		6474321	0					
ANR	6474334	Identifier	false		6474321	1					
ANR	6474335	IdentifierDeclStatement	int pid = dbg -> pid ;	859:1:26865:26883	6474321	2	True				
ANR	6474336	IdentifierDecl	pid = dbg -> pid		6474321	0					
ANR	6474337	IdentifierDeclType	int		6474321	0					
ANR	6474338	Identifier	pid		6474321	1					
ANR	6474339	AssignmentExpression	pid = dbg -> pid		6474321	2		=			
ANR	6474340	Identifier	pid		6474321	0					
ANR	6474341	PtrMemberAccess	dbg -> pid		6474321	1					
ANR	6474342	Identifier	dbg		6474321	0					
ANR	6474343	Identifier	pid		6474321	1					
ANR	6474344	IdentifierDeclStatement	int tid = dbg -> tid ;	860:1:26886:26904	6474321	3	True				
ANR	6474345	IdentifierDecl	tid = dbg -> tid		6474321	0					
ANR	6474346	IdentifierDeclType	int		6474321	0					
ANR	6474347	Identifier	tid		6474321	1					
ANR	6474348	AssignmentExpression	tid = dbg -> tid		6474321	2		=			
ANR	6474349	Identifier	tid		6474321	0					
ANR	6474350	PtrMemberAccess	dbg -> tid		6474321	1					
ANR	6474351	Identifier	dbg		6474321	0					
ANR	6474352	Identifier	tid		6474321	1					
ANR	6474353	IdentifierDeclStatement	HANDLE hThread = NULL ;	861:1:26907:26928	6474321	4	True				
ANR	6474354	IdentifierDecl	hThread = NULL		6474321	0					
ANR	6474355	IdentifierDeclType	HANDLE		6474321	0					
ANR	6474356	Identifier	hThread		6474321	1					
ANR	6474357	AssignmentExpression	hThread = NULL		6474321	2		=			
ANR	6474358	Identifier	NULL		6474321	0					
ANR	6474359	Identifier	NULL		6474321	1					
ANR	6474360	IfStatement	if ( type < - 1 )		6474321	5					
ANR	6474361	Condition	type < - 1	862:5:26935:26943	6474321	0	True				
ANR	6474362	RelationalExpression	type < - 1		6474321	0		<			
ANR	6474363	Identifier	type		6474321	0					
ANR	6474364	UnaryOperationExpression	- 1		6474321	1					
ANR	6474365	UnaryOperator	-		6474321	0					
ANR	6474366	PrimaryExpression	1		6474321	1					
ANR	6474367	CompoundStatement		11:16:193:193	6474321	1					
ANR	6474368	ExpressionStatement	showfpu = true	863:2:26950:26964	6474321	0	True				
ANR	6474369	AssignmentExpression	showfpu = true		6474321	0		=			
ANR	6474370	Identifier	showfpu		6474321	0					
ANR	6474371	Identifier	true		6474321	1					
ANR	6474372	ExpressionStatement	type = - type	864:2:26990:27002	6474321	1	True				
ANR	6474373	AssignmentExpression	type = - type		6474321	0		=			
ANR	6474374	Identifier	type		6474321	0					
ANR	6474375	UnaryOperationExpression	- type		6474321	1					
ANR	6474376	UnaryOperator	-		6474321	0					
ANR	6474377	Identifier	type		6474321	1					
ANR	6474378	ExpressionStatement	"hThread = w32_open_thread ( pid , tid )"	866:1:27008:27044	6474321	6	True				
ANR	6474379	AssignmentExpression	"hThread = w32_open_thread ( pid , tid )"		6474321	0		=			
ANR	6474380	Identifier	hThread		6474321	0					
ANR	6474381	CallExpression	"w32_open_thread ( pid , tid )"		6474321	1					
ANR	6474382	Callee	w32_open_thread		6474321	0					
ANR	6474383	Identifier	w32_open_thread		6474321	0					
ANR	6474384	ArgumentList	pid		6474321	1					
ANR	6474385	Argument	pid		6474321	0					
ANR	6474386	Identifier	pid		6474321	0					
ANR	6474387	Argument	tid		6474321	1					
ANR	6474388	Identifier	tid		6474321	0					
ANR	6474389	ExpressionStatement	"memset ( & ctx , 0 , sizeof ( CONTEXT ) )"	867:1:27047:27080	6474321	7	True				
ANR	6474390	CallExpression	"memset ( & ctx , 0 , sizeof ( CONTEXT ) )"		6474321	0					
ANR	6474391	Callee	memset		6474321	0					
ANR	6474392	Identifier	memset		6474321	0					
ANR	6474393	ArgumentList	& ctx		6474321	1					
ANR	6474394	Argument	& ctx		6474321	0					
ANR	6474395	UnaryOperationExpression	& ctx		6474321	0					
ANR	6474396	UnaryOperator	&		6474321	0					
ANR	6474397	Identifier	ctx		6474321	1					
ANR	6474398	Argument	0		6474321	1					
ANR	6474399	PrimaryExpression	0		6474321	0					
ANR	6474400	Argument	sizeof ( CONTEXT )		6474321	2					
ANR	6474401	SizeofExpression	sizeof ( CONTEXT )		6474321	0					
ANR	6474402	Sizeof	sizeof		6474321	0					
ANR	6474403	SizeofOperand	CONTEXT		6474321	1					
ANR	6474404	ExpressionStatement	ctx . ContextFlags = CONTEXT_ALL	868:1:27083:27114	6474321	8	True				
ANR	6474405	AssignmentExpression	ctx . ContextFlags = CONTEXT_ALL		6474321	0		=			
ANR	6474406	MemberAccess	ctx . ContextFlags		6474321	0					
ANR	6474407	Identifier	ctx		6474321	0					
ANR	6474408	Identifier	ContextFlags		6474321	1					
ANR	6474409	Identifier	CONTEXT_ALL		6474321	1					
ANR	6474410	IfStatement	"if ( GetThreadContext ( hThread , & ctx ) == TRUE )"		6474321	9					
ANR	6474411	Condition	"GetThreadContext ( hThread , & ctx ) == TRUE"	869:5:27121:27160	6474321	0	True				
ANR	6474412	EqualityExpression	"GetThreadContext ( hThread , & ctx ) == TRUE"		6474321	0		==			
ANR	6474413	CallExpression	"GetThreadContext ( hThread , & ctx )"		6474321	0					
ANR	6474414	Callee	GetThreadContext		6474321	0					
ANR	6474415	Identifier	GetThreadContext		6474321	0					
ANR	6474416	ArgumentList	hThread		6474321	1					
ANR	6474417	Argument	hThread		6474321	0					
ANR	6474418	Identifier	hThread		6474321	0					
ANR	6474419	Argument	& ctx		6474321	1					
ANR	6474420	UnaryOperationExpression	& ctx		6474321	0					
ANR	6474421	UnaryOperator	&		6474321	0					
ANR	6474422	Identifier	ctx		6474321	1					
ANR	6474423	Identifier	TRUE		6474321	1					
ANR	6474424	CompoundStatement		18:47:410:410	6474321	1					
ANR	6474425	IfStatement	if ( size > sizeof ( CONTEXT ) )		6474321	0					
ANR	6474426	Condition	size > sizeof ( CONTEXT )	872:7:27274:27296	6474321	0	True				
ANR	6474427	RelationalExpression	size > sizeof ( CONTEXT )		6474321	0		>			
ANR	6474428	Identifier	size		6474321	0					
ANR	6474429	SizeofExpression	sizeof ( CONTEXT )		6474321	1					
ANR	6474430	Sizeof	sizeof		6474321	0					
ANR	6474431	SizeofOperand	CONTEXT		6474321	1					
ANR	6474432	CompoundStatement		21:32:546:546	6474321	1					
ANR	6474433	ExpressionStatement	size = sizeof ( CONTEXT )	873:4:27305:27328	6474321	0	True				
ANR	6474434	AssignmentExpression	size = sizeof ( CONTEXT )		6474321	0		=			
ANR	6474435	Identifier	size		6474321	0					
ANR	6474436	SizeofExpression	sizeof ( CONTEXT )		6474321	1					
ANR	6474437	Sizeof	sizeof		6474321	0					
ANR	6474438	SizeofOperand	CONTEXT		6474321	1					
ANR	6474439	ExpressionStatement	"memcpy ( buf , & ctx , size )"	875:3:27338:27362	6474321	1	True				
ANR	6474440	CallExpression	"memcpy ( buf , & ctx , size )"		6474321	0					
ANR	6474441	Callee	memcpy		6474321	0					
ANR	6474442	Identifier	memcpy		6474321	0					
ANR	6474443	ArgumentList	buf		6474321	1					
ANR	6474444	Argument	buf		6474321	0					
ANR	6474445	Identifier	buf		6474321	0					
ANR	6474446	Argument	& ctx		6474321	1					
ANR	6474447	UnaryOperationExpression	& ctx		6474321	0					
ANR	6474448	UnaryOperator	&		6474321	0					
ANR	6474449	Identifier	ctx		6474321	1					
ANR	6474450	Argument	size		6474321	2					
ANR	6474451	Identifier	size		6474321	0					
ANR	6474452	ElseStatement	else		6474321	0					
ANR	6474453	CompoundStatement		28:8:653:653	6474321	0					
ANR	6474454	ExpressionStatement	"r_sys_perror ( ""w32_reg_read/GetThreadContext"" )"	880:2:27410:27456	6474321	0	True				
ANR	6474455	CallExpression	"r_sys_perror ( ""w32_reg_read/GetThreadContext"" )"		6474321	0					
ANR	6474456	Callee	r_sys_perror		6474321	0					
ANR	6474457	Identifier	r_sys_perror		6474321	0					
ANR	6474458	ArgumentList	"""w32_reg_read/GetThreadContext"""		6474321	1					
ANR	6474459	Argument	"""w32_reg_read/GetThreadContext"""		6474321	0					
ANR	6474460	PrimaryExpression	"""w32_reg_read/GetThreadContext"""		6474321	0					
ANR	6474461	ExpressionStatement	size = 0	881:2:27460:27468	6474321	1	True				
ANR	6474462	AssignmentExpression	size = 0		6474321	0		=			
ANR	6474463	Identifier	size		6474321	0					
ANR	6474464	PrimaryExpression	0		6474321	1					
ANR	6474465	IfStatement	if ( showfpu )		6474321	10					
ANR	6474466	Condition	showfpu	883:5:27478:27484	6474321	0	True				
ANR	6474467	Identifier	showfpu		6474321	0					
ANR	6474468	CompoundStatement		32:14:734:734	6474321	1					
ANR	6474469	ExpressionStatement	"printwincontext ( hThread , & ctx )"	884:2:27491:27522	6474321	0	True				
ANR	6474470	CallExpression	"printwincontext ( hThread , & ctx )"		6474321	0					
ANR	6474471	Callee	printwincontext		6474321	0					
ANR	6474472	Identifier	printwincontext		6474321	0					
ANR	6474473	ArgumentList	hThread		6474321	1					
ANR	6474474	Argument	hThread		6474321	0					
ANR	6474475	Identifier	hThread		6474321	0					
ANR	6474476	Argument	& ctx		6474321	1					
ANR	6474477	UnaryOperationExpression	& ctx		6474321	0					
ANR	6474478	UnaryOperator	&		6474321	0					
ANR	6474479	Identifier	ctx		6474321	1					
ANR	6474480	ExpressionStatement	CloseHandle ( hThread )	886:1:27528:27548	6474321	11	True				
ANR	6474481	CallExpression	CloseHandle ( hThread )		6474321	0					
ANR	6474482	Callee	CloseHandle		6474321	0					
ANR	6474483	Identifier	CloseHandle		6474321	0					
ANR	6474484	ArgumentList	hThread		6474321	1					
ANR	6474485	Argument	hThread		6474321	0					
ANR	6474486	Identifier	hThread		6474321	0					
ANR	6474487	ReturnStatement	return size ;	887:1:27551:27562	6474321	12	True				
ANR	6474488	Identifier	size		6474321	0					
ANR	6474489	ReturnType	static int		6474321	1					
ANR	6474490	Identifier	w32_reg_read		6474321	2					
ANR	6474491	ParameterList	"RDebug * dbg , int type , ut8 * buf , int size"		6474321	3					
ANR	6474492	Parameter	RDebug * dbg	852:24:26709:26719	6474321	0	True				
ANR	6474493	ParameterType	RDebug *		6474321	0					
ANR	6474494	Identifier	dbg		6474321	1					
ANR	6474495	Parameter	int type	852:37:26722:26729	6474321	1	True				
ANR	6474496	ParameterType	int		6474321	0					
ANR	6474497	Identifier	type		6474321	1					
ANR	6474498	Parameter	ut8 * buf	852:47:26732:26739	6474321	2	True				
ANR	6474499	ParameterType	ut8 *		6474321	0					
ANR	6474500	Identifier	buf		6474321	1					
ANR	6474501	Parameter	int size	852:57:26742:26749	6474321	3	True				
ANR	6474502	ParameterType	int		6474321	0					
ANR	6474503	Identifier	size		6474321	1					
ANR	6474504	CFGEntryNode	ENTRY		6474321		True				
ANR	6474505	CFGExitNode	EXIT		6474321		True				
ANR	6474506	Symbol	NULL		6474321						
ANR	6474507	Symbol	ctx		6474321						
ANR	6474508	Symbol	ctx . ContextFlags		6474321						
ANR	6474509	Symbol	dbg		6474321						
ANR	6474510	Symbol	false		6474321						
ANR	6474511	Symbol	TRUE		6474321						
ANR	6474512	Symbol	pid		6474321						
ANR	6474513	Symbol	& ctx		6474321						
ANR	6474514	Symbol	type		6474321						
ANR	6474515	Symbol	* dbg		6474321						
ANR	6474516	Symbol	tid		6474321						
ANR	6474517	Symbol	dbg -> tid		6474321						
ANR	6474518	Symbol	buf		6474321						
ANR	6474519	Symbol	size		6474321						
ANR	6474520	Symbol	dbg -> pid		6474321						
ANR	6474521	Symbol	CONTEXT_ALL		6474321						
ANR	6474522	Symbol	showfpu		6474321						
ANR	6474523	Symbol	true		6474321						
ANR	6474524	Symbol	w32_open_thread		6474321						
ANR	6474525	Symbol	hThread		6474321						
ANR	6474526	Symbol	GetThreadContext		6474321						
ANR	6474527	Function	w32_reg_write	890:0:27567:28165							
ANR	6474528	FunctionDef	"w32_reg_write (RDebug * dbg , int type , const ut8 * buf , int size)"		6474527	0					
ANR	6474529	CompoundStatement		890:74:27641:28165	6474527	0					
ANR	6474530	IdentifierDeclStatement	BOOL ret = false ;	891:1:27644:27660	6474527	0	True				
ANR	6474531	IdentifierDecl	ret = false		6474527	0					
ANR	6474532	IdentifierDeclType	BOOL		6474527	0					
ANR	6474533	Identifier	ret		6474527	1					
ANR	6474534	AssignmentExpression	ret = false		6474527	2		=			
ANR	6474535	Identifier	false		6474527	0					
ANR	6474536	Identifier	false		6474527	1					
ANR	6474537	IdentifierDeclStatement	HANDLE thread ;	892:1:27663:27676	6474527	1	True				
ANR	6474538	IdentifierDecl	thread		6474527	0					
ANR	6474539	IdentifierDeclType	HANDLE		6474527	0					
ANR	6474540	Identifier	thread		6474527	1					
ANR	6474541	IdentifierDeclStatement	CONTEXT ctx ;	894:1:27692:27703	6474527	2	True				
ANR	6474542	IdentifierDecl	ctx		6474527	0					
ANR	6474543	IdentifierDeclType	CONTEXT		6474527	0					
ANR	6474544	Identifier	ctx		6474527	1					
ANR	6474545	ExpressionStatement	"thread = w32_open_thread ( dbg -> pid , dbg -> tid )"	898:1:27763:27808	6474527	3	True				
ANR	6474546	AssignmentExpression	"thread = w32_open_thread ( dbg -> pid , dbg -> tid )"		6474527	0		=			
ANR	6474547	Identifier	thread		6474527	0					
ANR	6474548	CallExpression	"w32_open_thread ( dbg -> pid , dbg -> tid )"		6474527	1					
ANR	6474549	Callee	w32_open_thread		6474527	0					
ANR	6474550	Identifier	w32_open_thread		6474527	0					
ANR	6474551	ArgumentList	dbg -> pid		6474527	1					
ANR	6474552	Argument	dbg -> pid		6474527	0					
ANR	6474553	PtrMemberAccess	dbg -> pid		6474527	0					
ANR	6474554	Identifier	dbg		6474527	0					
ANR	6474555	Identifier	pid		6474527	1					
ANR	6474556	Argument	dbg -> tid		6474527	1					
ANR	6474557	PtrMemberAccess	dbg -> tid		6474527	0					
ANR	6474558	Identifier	dbg		6474527	0					
ANR	6474559	Identifier	tid		6474527	1					
ANR	6474560	ExpressionStatement	ctx . ContextFlags = CONTEXT_ALL	899:1:27811:27841	6474527	4	True				
ANR	6474561	AssignmentExpression	ctx . ContextFlags = CONTEXT_ALL		6474527	0		=			
ANR	6474562	MemberAccess	ctx . ContextFlags		6474527	0					
ANR	6474563	Identifier	ctx		6474527	0					
ANR	6474564	Identifier	ContextFlags		6474527	1					
ANR	6474565	Identifier	CONTEXT_ALL		6474527	1					
ANR	6474566	ExpressionStatement	"GetThreadContext ( thread , & ctx )"	900:1:27844:27875	6474527	5	True				
ANR	6474567	CallExpression	"GetThreadContext ( thread , & ctx )"		6474527	0					
ANR	6474568	Callee	GetThreadContext		6474527	0					
ANR	6474569	Identifier	GetThreadContext		6474527	0					
ANR	6474570	ArgumentList	thread		6474527	1					
ANR	6474571	Argument	thread		6474527	0					
ANR	6474572	Identifier	thread		6474527	0					
ANR	6474573	Argument	& ctx		6474527	1					
ANR	6474574	UnaryOperationExpression	& ctx		6474527	0					
ANR	6474575	UnaryOperator	&		6474527	0					
ANR	6474576	Identifier	ctx		6474527	1					
ANR	6474577	IfStatement	if ( size > sizeof ( CONTEXT ) )		6474527	6					
ANR	6474578	Condition	size > sizeof ( CONTEXT )	903:6:27983:28005	6474527	0	True				
ANR	6474579	RelationalExpression	size > sizeof ( CONTEXT )		6474527	0		>			
ANR	6474580	Identifier	size		6474527	0					
ANR	6474581	SizeofExpression	sizeof ( CONTEXT )		6474527	1					
ANR	6474582	Sizeof	sizeof		6474527	0					
ANR	6474583	SizeofOperand	CONTEXT		6474527	1					
ANR	6474584	CompoundStatement		14:31:366:366	6474527	1					
ANR	6474585	ExpressionStatement	size = sizeof ( CONTEXT )	904:3:28013:28036	6474527	0	True				
ANR	6474586	AssignmentExpression	size = sizeof ( CONTEXT )		6474527	0		=			
ANR	6474587	Identifier	size		6474527	0					
ANR	6474588	SizeofExpression	sizeof ( CONTEXT )		6474527	1					
ANR	6474589	Sizeof	sizeof		6474527	0					
ANR	6474590	SizeofOperand	CONTEXT		6474527	1					
ANR	6474591	ExpressionStatement	"memcpy ( & ctx , buf , size )"	906:2:28044:28068	6474527	7	True				
ANR	6474592	CallExpression	"memcpy ( & ctx , buf , size )"		6474527	0					
ANR	6474593	Callee	memcpy		6474527	0					
ANR	6474594	Identifier	memcpy		6474527	0					
ANR	6474595	ArgumentList	& ctx		6474527	1					
ANR	6474596	Argument	& ctx		6474527	0					
ANR	6474597	UnaryOperationExpression	& ctx		6474527	0					
ANR	6474598	UnaryOperator	&		6474527	0					
ANR	6474599	Identifier	ctx		6474527	1					
ANR	6474600	Argument	buf		6474527	1					
ANR	6474601	Identifier	buf		6474527	0					
ANR	6474602	Argument	size		6474527	2					
ANR	6474603	Identifier	size		6474527	0					
ANR	6474604	ExpressionStatement	"ret = SetThreadContext ( thread , & ctx ) ? true : false"	907:2:28072:28122	6474527	8	True				
ANR	6474605	AssignmentExpression	"ret = SetThreadContext ( thread , & ctx ) ? true : false"		6474527	0		=			
ANR	6474606	Identifier	ret		6474527	0					
ANR	6474607	ConditionalExpression	"SetThreadContext ( thread , & ctx ) ? true : false"		6474527	1					
ANR	6474608	Condition	"SetThreadContext ( thread , & ctx )"		6474527	0					
ANR	6474609	CallExpression	"SetThreadContext ( thread , & ctx )"		6474527	0					
ANR	6474610	Callee	SetThreadContext		6474527	0					
ANR	6474611	Identifier	SetThreadContext		6474527	0					
ANR	6474612	ArgumentList	thread		6474527	1					
ANR	6474613	Argument	thread		6474527	0					
ANR	6474614	Identifier	thread		6474527	0					
ANR	6474615	Argument	& ctx		6474527	1					
ANR	6474616	UnaryOperationExpression	& ctx		6474527	0					
ANR	6474617	UnaryOperator	&		6474527	0					
ANR	6474618	Identifier	ctx		6474527	1					
ANR	6474619	Identifier	true		6474527	1					
ANR	6474620	Identifier	false		6474527	2					
ANR	6474621	ExpressionStatement	CloseHandle ( thread )	909:1:28130:28150	6474527	9	True				
ANR	6474622	CallExpression	CloseHandle ( thread )		6474527	0					
ANR	6474623	Callee	CloseHandle		6474527	0					
ANR	6474624	Identifier	CloseHandle		6474527	0					
ANR	6474625	ArgumentList	thread		6474527	1					
ANR	6474626	Argument	thread		6474527	0					
ANR	6474627	Identifier	thread		6474527	0					
ANR	6474628	ReturnStatement	return ret ;	910:1:28153:28163	6474527	10	True				
ANR	6474629	Identifier	ret		6474527	0					
ANR	6474630	ReturnType	static int		6474527	1					
ANR	6474631	Identifier	w32_reg_write		6474527	2					
ANR	6474632	ParameterList	"RDebug * dbg , int type , const ut8 * buf , int size"		6474527	3					
ANR	6474633	Parameter	RDebug * dbg	890:25:27592:27602	6474527	0	True				
ANR	6474634	ParameterType	RDebug *		6474527	0					
ANR	6474635	Identifier	dbg		6474527	1					
ANR	6474636	Parameter	int type	890:38:27605:27612	6474527	1	True				
ANR	6474637	ParameterType	int		6474527	0					
ANR	6474638	Identifier	type		6474527	1					
ANR	6474639	Parameter	const ut8 * buf	890:48:27615:27628	6474527	2	True				
ANR	6474640	ParameterType	const ut8 *		6474527	0					
ANR	6474641	Identifier	buf		6474527	1					
ANR	6474642	Parameter	int size	890:64:27631:27638	6474527	3	True				
ANR	6474643	ParameterType	int		6474527	0					
ANR	6474644	Identifier	size		6474527	1					
ANR	6474645	CFGEntryNode	ENTRY		6474527		True				
ANR	6474646	CFGExitNode	EXIT		6474527		True				
ANR	6474647	Symbol	ret		6474527						
ANR	6474648	Symbol	ctx		6474527						
ANR	6474649	Symbol	ctx . ContextFlags		6474527						
ANR	6474650	Symbol	dbg		6474527						
ANR	6474651	Symbol	false		6474527						
ANR	6474652	Symbol	& ctx		6474527						
ANR	6474653	Symbol	SetThreadContext		6474527						
ANR	6474654	Symbol	thread		6474527						
ANR	6474655	Symbol	type		6474527						
ANR	6474656	Symbol	* dbg		6474527						
ANR	6474657	Symbol	dbg -> tid		6474527						
ANR	6474658	Symbol	buf		6474527						
ANR	6474659	Symbol	size		6474527						
ANR	6474660	Symbol	dbg -> pid		6474527						
ANR	6474661	Symbol	CONTEXT_ALL		6474527						
ANR	6474662	Symbol	w32_open_thread		6474527						
ANR	6474663	Symbol	true		6474527						
ANR	6474664	Function	w32_info_user	913:0:28168:29983							
ANR	6474665	FunctionDef	"w32_info_user (RDebug * dbg , RDebugInfo * rdi)"		6474664	0					
ANR	6474666	CompoundStatement		913:56:28224:29983	6474664	0					
ANR	6474667	IdentifierDeclStatement	HANDLE h_tok = NULL ;	914:1:28227:28246	6474664	0	True				
ANR	6474668	IdentifierDecl	h_tok = NULL		6474664	0					
ANR	6474669	IdentifierDeclType	HANDLE		6474664	0					
ANR	6474670	Identifier	h_tok		6474664	1					
ANR	6474671	AssignmentExpression	h_tok = NULL		6474664	2		=			
ANR	6474672	Identifier	NULL		6474664	0					
ANR	6474673	Identifier	NULL		6474664	1					
ANR	6474674	IdentifierDeclStatement	DWORD tok_len = 0 ;	915:1:28249:28266	6474664	1	True				
ANR	6474675	IdentifierDecl	tok_len = 0		6474664	0					
ANR	6474676	IdentifierDeclType	DWORD		6474664	0					
ANR	6474677	Identifier	tok_len		6474664	1					
ANR	6474678	AssignmentExpression	tok_len = 0		6474664	2		=			
ANR	6474679	Identifier	tok_len		6474664	0					
ANR	6474680	PrimaryExpression	0		6474664	1					
ANR	6474681	IdentifierDeclStatement	PTOKEN_USER tok_usr = NULL ;	916:1:28269:28295	6474664	2	True				
ANR	6474682	IdentifierDecl	tok_usr = NULL		6474664	0					
ANR	6474683	IdentifierDeclType	PTOKEN_USER		6474664	0					
ANR	6474684	Identifier	tok_usr		6474664	1					
ANR	6474685	AssignmentExpression	tok_usr = NULL		6474664	2		=			
ANR	6474686	Identifier	NULL		6474664	0					
ANR	6474687	Identifier	NULL		6474664	1					
ANR	6474688	IdentifierDeclStatement	"LPTSTR usr = NULL , usr_dom = NULL ;"	917:1:28298:28331	6474664	3	True				
ANR	6474689	IdentifierDecl	usr = NULL		6474664	0					
ANR	6474690	IdentifierDeclType	LPTSTR		6474664	0					
ANR	6474691	Identifier	usr		6474664	1					
ANR	6474692	AssignmentExpression	usr = NULL		6474664	2		=			
ANR	6474693	Identifier	NULL		6474664	0					
ANR	6474694	Identifier	NULL		6474664	1					
ANR	6474695	IdentifierDecl	usr_dom = NULL		6474664	1					
ANR	6474696	IdentifierDeclType	LPTSTR		6474664	0					
ANR	6474697	Identifier	usr_dom		6474664	1					
ANR	6474698	AssignmentExpression	usr_dom = NULL		6474664	2		=			
ANR	6474699	Identifier	NULL		6474664	0					
ANR	6474700	Identifier	NULL		6474664	1					
ANR	6474701	IdentifierDeclStatement	DWORD usr_len = 512 ;	918:1:28334:28353	6474664	4	True				
ANR	6474702	IdentifierDecl	usr_len = 512		6474664	0					
ANR	6474703	IdentifierDeclType	DWORD		6474664	0					
ANR	6474704	Identifier	usr_len		6474664	1					
ANR	6474705	AssignmentExpression	usr_len = 512		6474664	2		=			
ANR	6474706	Identifier	usr_len		6474664	0					
ANR	6474707	PrimaryExpression	512		6474664	1					
ANR	6474708	IdentifierDeclStatement	DWORD usr_dom_len = 512 ;	919:1:28356:28379	6474664	5	True				
ANR	6474709	IdentifierDecl	usr_dom_len = 512		6474664	0					
ANR	6474710	IdentifierDeclType	DWORD		6474664	0					
ANR	6474711	Identifier	usr_dom_len		6474664	1					
ANR	6474712	AssignmentExpression	usr_dom_len = 512		6474664	2		=			
ANR	6474713	Identifier	usr_dom_len		6474664	0					
ANR	6474714	PrimaryExpression	512		6474664	1					
ANR	6474715	IdentifierDeclStatement	SID_NAME_USE snu = { 0 } ;	920:1:28382:28404	6474664	6	True				
ANR	6474716	IdentifierDecl	snu = { 0 }		6474664	0					
ANR	6474717	IdentifierDeclType	SID_NAME_USE		6474664	0					
ANR	6474718	Identifier	snu		6474664	1					
ANR	6474719	AssignmentExpression	snu = { 0 }		6474664	2		=			
ANR	6474720	Identifier	snu		6474664	0					
ANR	6474721	InitializerList	0		6474664	1					
ANR	6474722	PrimaryExpression	0		6474664	0					
ANR	6474723	IdentifierDeclStatement	"HANDLE h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid ) ;"	921:1:28407:28479	6474664	7	True				
ANR	6474724	IdentifierDecl	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid )"		6474664	0					
ANR	6474725	IdentifierDeclType	HANDLE		6474664	0					
ANR	6474726	Identifier	h_proc		6474664	1					
ANR	6474727	AssignmentExpression	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid )"		6474664	2		=			
ANR	6474728	Identifier	h_proc		6474664	0					
ANR	6474729	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid )"		6474664	1					
ANR	6474730	Callee	OpenProcess		6474664	0					
ANR	6474731	Identifier	OpenProcess		6474664	0					
ANR	6474732	ArgumentList	PROCESS_QUERY_INFORMATION		6474664	1					
ANR	6474733	Argument	PROCESS_QUERY_INFORMATION		6474664	0					
ANR	6474734	Identifier	PROCESS_QUERY_INFORMATION		6474664	0					
ANR	6474735	Argument	FALSE		6474664	1					
ANR	6474736	Identifier	FALSE		6474664	0					
ANR	6474737	Argument	dbg -> pid		6474664	2					
ANR	6474738	PtrMemberAccess	dbg -> pid		6474664	0					
ANR	6474739	Identifier	dbg		6474664	0					
ANR	6474740	Identifier	pid		6474664	1					
ANR	6474741	IfStatement	if ( ! h_proc )		6474664	8					
ANR	6474742	Condition	! h_proc	923:5:28487:28493	6474664	0	True				
ANR	6474743	UnaryOperationExpression	! h_proc		6474664	0					
ANR	6474744	UnaryOperator	!		6474664	0					
ANR	6474745	Identifier	h_proc		6474664	1					
ANR	6474746	CompoundStatement		11:14:271:271	6474664	1					
ANR	6474747	ExpressionStatement	"r_sys_perror ( ""w32_info_user/OpenProcess"" )"	924:2:28500:28542	6474664	0	True				
ANR	6474748	CallExpression	"r_sys_perror ( ""w32_info_user/OpenProcess"" )"		6474664	0					
ANR	6474749	Callee	r_sys_perror		6474664	0					
ANR	6474750	Identifier	r_sys_perror		6474664	0					
ANR	6474751	ArgumentList	"""w32_info_user/OpenProcess"""		6474664	1					
ANR	6474752	Argument	"""w32_info_user/OpenProcess"""		6474664	0					
ANR	6474753	PrimaryExpression	"""w32_info_user/OpenProcess"""		6474664	0					
ANR	6474754	GotoStatement	goto err_w32_info_user ;	925:2:28546:28568	6474664	1	True				
ANR	6474755	Identifier	err_w32_info_user		6474664	0					
ANR	6474756	IfStatement	"if ( ! OpenProcessToken ( h_proc , TOKEN_QUERY , & h_tok ) )"		6474664	9					
ANR	6474757	Condition	"! OpenProcessToken ( h_proc , TOKEN_QUERY , & h_tok )"	927:5:28578:28624	6474664	0	True				
ANR	6474758	UnaryOperationExpression	"! OpenProcessToken ( h_proc , TOKEN_QUERY , & h_tok )"		6474664	0					
ANR	6474759	UnaryOperator	!		6474664	0					
ANR	6474760	CallExpression	"OpenProcessToken ( h_proc , TOKEN_QUERY , & h_tok )"		6474664	1					
ANR	6474761	Callee	OpenProcessToken		6474664	0					
ANR	6474762	Identifier	OpenProcessToken		6474664	0					
ANR	6474763	ArgumentList	h_proc		6474664	1					
ANR	6474764	Argument	h_proc		6474664	0					
ANR	6474765	Identifier	h_proc		6474664	0					
ANR	6474766	Argument	TOKEN_QUERY		6474664	1					
ANR	6474767	Identifier	TOKEN_QUERY		6474664	0					
ANR	6474768	Argument	& h_tok		6474664	2					
ANR	6474769	UnaryOperationExpression	& h_tok		6474664	0					
ANR	6474770	UnaryOperator	&		6474664	0					
ANR	6474771	Identifier	h_tok		6474664	1					
ANR	6474772	CompoundStatement		15:54:402:402	6474664	1					
ANR	6474773	ExpressionStatement	"r_sys_perror ( ""w32_info_user/OpenProcessToken"" )"	928:2:28631:28678	6474664	0	True				
ANR	6474774	CallExpression	"r_sys_perror ( ""w32_info_user/OpenProcessToken"" )"		6474664	0					
ANR	6474775	Callee	r_sys_perror		6474664	0					
ANR	6474776	Identifier	r_sys_perror		6474664	0					
ANR	6474777	ArgumentList	"""w32_info_user/OpenProcessToken"""		6474664	1					
ANR	6474778	Argument	"""w32_info_user/OpenProcessToken"""		6474664	0					
ANR	6474779	PrimaryExpression	"""w32_info_user/OpenProcessToken"""		6474664	0					
ANR	6474780	GotoStatement	goto err_w32_info_user ;	929:2:28682:28704	6474664	1	True				
ANR	6474781	Identifier	err_w32_info_user		6474664	0					
ANR	6474782	IfStatement	"if ( ! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) & tok_usr , 0 , & tok_len ) && GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER )"		6474664	10					
ANR	6474783	Condition	"! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) & tok_usr , 0 , & tok_len ) && GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER"	931:5:28714:28831	6474664	0	True				
ANR	6474784	AndExpression	"! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) & tok_usr , 0 , & tok_len ) && GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER"		6474664	0		&&			
ANR	6474785	UnaryOperationExpression	"! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) & tok_usr , 0 , & tok_len )"		6474664	0					
ANR	6474786	UnaryOperator	!		6474664	0					
ANR	6474787	CallExpression	"GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) & tok_usr , 0 , & tok_len )"		6474664	1					
ANR	6474788	Callee	GetTokenInformation		6474664	0					
ANR	6474789	Identifier	GetTokenInformation		6474664	0					
ANR	6474790	ArgumentList	h_tok		6474664	1					
ANR	6474791	Argument	h_tok		6474664	0					
ANR	6474792	Identifier	h_tok		6474664	0					
ANR	6474793	Argument	TokenUser		6474664	1					
ANR	6474794	Identifier	TokenUser		6474664	0					
ANR	6474795	Argument	( LPVOID ) & tok_usr		6474664	2					
ANR	6474796	CastExpression	( LPVOID ) & tok_usr		6474664	0					
ANR	6474797	CastTarget	LPVOID		6474664	0					
ANR	6474798	UnaryOperationExpression	& tok_usr		6474664	1					
ANR	6474799	UnaryOperator	&		6474664	0					
ANR	6474800	Identifier	tok_usr		6474664	1					
ANR	6474801	Argument	0		6474664	3					
ANR	6474802	PrimaryExpression	0		6474664	0					
ANR	6474803	Argument	& tok_len		6474664	4					
ANR	6474804	UnaryOperationExpression	& tok_len		6474664	0					
ANR	6474805	UnaryOperator	&		6474664	0					
ANR	6474806	Identifier	tok_len		6474664	1					
ANR	6474807	EqualityExpression	GetLastError ( ) != ERROR_INSUFFICIENT_BUFFER		6474664	1		!=			
ANR	6474808	CallExpression	GetLastError ( )		6474664	0					
ANR	6474809	Callee	GetLastError		6474664	0					
ANR	6474810	Identifier	GetLastError		6474664	0					
ANR	6474811	ArgumentList			6474664	1					
ANR	6474812	Identifier	ERROR_INSUFFICIENT_BUFFER		6474664	1					
ANR	6474813	CompoundStatement		19:125:609:609	6474664	1					
ANR	6474814	ExpressionStatement	"r_sys_perror ( ""w32_info_user/GetTokenInformation"" )"	932:2:28838:28888	6474664	0	True				
ANR	6474815	CallExpression	"r_sys_perror ( ""w32_info_user/GetTokenInformation"" )"		6474664	0					
ANR	6474816	Callee	r_sys_perror		6474664	0					
ANR	6474817	Identifier	r_sys_perror		6474664	0					
ANR	6474818	ArgumentList	"""w32_info_user/GetTokenInformation"""		6474664	1					
ANR	6474819	Argument	"""w32_info_user/GetTokenInformation"""		6474664	0					
ANR	6474820	PrimaryExpression	"""w32_info_user/GetTokenInformation"""		6474664	0					
ANR	6474821	GotoStatement	goto err_w32_info_user ;	933:2:28892:28914	6474664	1	True				
ANR	6474822	Identifier	err_w32_info_user		6474664	0					
ANR	6474823	ExpressionStatement	tok_usr = ( PTOKEN_USER ) malloc ( tok_len )	935:1:28920:28959	6474664	11	True				
ANR	6474824	AssignmentExpression	tok_usr = ( PTOKEN_USER ) malloc ( tok_len )		6474664	0		=			
ANR	6474825	Identifier	tok_usr		6474664	0					
ANR	6474826	CastExpression	( PTOKEN_USER ) malloc ( tok_len )		6474664	1					
ANR	6474827	CastTarget	PTOKEN_USER		6474664	0					
ANR	6474828	CallExpression	malloc ( tok_len )		6474664	1					
ANR	6474829	Callee	malloc		6474664	0					
ANR	6474830	Identifier	malloc		6474664	0					
ANR	6474831	ArgumentList	tok_len		6474664	1					
ANR	6474832	Argument	tok_len		6474664	0					
ANR	6474833	Identifier	tok_len		6474664	0					
ANR	6474834	IfStatement	if ( ! tok_usr )		6474664	12					
ANR	6474835	Condition	! tok_usr	936:5:28966:28973	6474664	0	True				
ANR	6474836	UnaryOperationExpression	! tok_usr		6474664	0					
ANR	6474837	UnaryOperator	!		6474664	0					
ANR	6474838	Identifier	tok_usr		6474664	1					
ANR	6474839	CompoundStatement		24:15:751:751	6474664	1					
ANR	6474840	ExpressionStatement	"perror ( ""w32_info_user/malloc tok_usr"" )"	937:2:28980:29019	6474664	0	True				
ANR	6474841	CallExpression	"perror ( ""w32_info_user/malloc tok_usr"" )"		6474664	0					
ANR	6474842	Callee	perror		6474664	0					
ANR	6474843	Identifier	perror		6474664	0					
ANR	6474844	ArgumentList	"""w32_info_user/malloc tok_usr"""		6474664	1					
ANR	6474845	Argument	"""w32_info_user/malloc tok_usr"""		6474664	0					
ANR	6474846	PrimaryExpression	"""w32_info_user/malloc tok_usr"""		6474664	0					
ANR	6474847	GotoStatement	goto err_w32_info_user ;	938:2:29023:29045	6474664	1	True				
ANR	6474848	Identifier	err_w32_info_user		6474664	0					
ANR	6474849	IfStatement	"if ( ! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) tok_usr , tok_len , & tok_len ) )"		6474664	13					
ANR	6474850	Condition	"! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) tok_usr , tok_len , & tok_len )"	940:5:29055:29129	6474664	0	True				
ANR	6474851	UnaryOperationExpression	"! GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) tok_usr , tok_len , & tok_len )"		6474664	0					
ANR	6474852	UnaryOperator	!		6474664	0					
ANR	6474853	CallExpression	"GetTokenInformation ( h_tok , TokenUser , ( LPVOID ) tok_usr , tok_len , & tok_len )"		6474664	1					
ANR	6474854	Callee	GetTokenInformation		6474664	0					
ANR	6474855	Identifier	GetTokenInformation		6474664	0					
ANR	6474856	ArgumentList	h_tok		6474664	1					
ANR	6474857	Argument	h_tok		6474664	0					
ANR	6474858	Identifier	h_tok		6474664	0					
ANR	6474859	Argument	TokenUser		6474664	1					
ANR	6474860	Identifier	TokenUser		6474664	0					
ANR	6474861	Argument	( LPVOID ) tok_usr		6474664	2					
ANR	6474862	CastExpression	( LPVOID ) tok_usr		6474664	0					
ANR	6474863	CastTarget	LPVOID		6474664	0					
ANR	6474864	Identifier	tok_usr		6474664	1					
ANR	6474865	Argument	tok_len		6474664	3					
ANR	6474866	Identifier	tok_len		6474664	0					
ANR	6474867	Argument	& tok_len		6474664	4					
ANR	6474868	UnaryOperationExpression	& tok_len		6474664	0					
ANR	6474869	UnaryOperator	&		6474664	0					
ANR	6474870	Identifier	tok_len		6474664	1					
ANR	6474871	CompoundStatement		28:82:907:907	6474664	1					
ANR	6474872	ExpressionStatement	"r_sys_perror ( ""w32_info_user/GetTokenInformation"" )"	941:2:29136:29186	6474664	0	True				
ANR	6474873	CallExpression	"r_sys_perror ( ""w32_info_user/GetTokenInformation"" )"		6474664	0					
ANR	6474874	Callee	r_sys_perror		6474664	0					
ANR	6474875	Identifier	r_sys_perror		6474664	0					
ANR	6474876	ArgumentList	"""w32_info_user/GetTokenInformation"""		6474664	1					
ANR	6474877	Argument	"""w32_info_user/GetTokenInformation"""		6474664	0					
ANR	6474878	PrimaryExpression	"""w32_info_user/GetTokenInformation"""		6474664	0					
ANR	6474879	GotoStatement	goto err_w32_info_user ;	942:2:29190:29212	6474664	1	True				
ANR	6474880	Identifier	err_w32_info_user		6474664	0					
ANR	6474881	ExpressionStatement	usr = ( LPTSTR ) malloc ( usr_len )	944:1:29218:29248	6474664	14	True				
ANR	6474882	AssignmentExpression	usr = ( LPTSTR ) malloc ( usr_len )		6474664	0		=			
ANR	6474883	Identifier	usr		6474664	0					
ANR	6474884	CastExpression	( LPTSTR ) malloc ( usr_len )		6474664	1					
ANR	6474885	CastTarget	LPTSTR		6474664	0					
ANR	6474886	CallExpression	malloc ( usr_len )		6474664	1					
ANR	6474887	Callee	malloc		6474664	0					
ANR	6474888	Identifier	malloc		6474664	0					
ANR	6474889	ArgumentList	usr_len		6474664	1					
ANR	6474890	Argument	usr_len		6474664	0					
ANR	6474891	Identifier	usr_len		6474664	0					
ANR	6474892	IfStatement	if ( ! usr )		6474664	15					
ANR	6474893	Condition	! usr	945:5:29255:29258	6474664	0	True				
ANR	6474894	UnaryOperationExpression	! usr		6474664	0					
ANR	6474895	UnaryOperator	!		6474664	0					
ANR	6474896	Identifier	usr		6474664	1					
ANR	6474897	CompoundStatement		33:11:1036:1036	6474664	1					
ANR	6474898	ExpressionStatement	"perror ( ""w32_info_user/malloc usr"" )"	946:2:29265:29300	6474664	0	True				
ANR	6474899	CallExpression	"perror ( ""w32_info_user/malloc usr"" )"		6474664	0					
ANR	6474900	Callee	perror		6474664	0					
ANR	6474901	Identifier	perror		6474664	0					
ANR	6474902	ArgumentList	"""w32_info_user/malloc usr"""		6474664	1					
ANR	6474903	Argument	"""w32_info_user/malloc usr"""		6474664	0					
ANR	6474904	PrimaryExpression	"""w32_info_user/malloc usr"""		6474664	0					
ANR	6474905	GotoStatement	goto err_w32_info_user ;	947:2:29304:29326	6474664	1	True				
ANR	6474906	Identifier	err_w32_info_user		6474664	0					
ANR	6474907	ExpressionStatement	* usr = '\\0'	949:1:29332:29343	6474664	16	True				
ANR	6474908	AssignmentExpression	* usr = '\\0'		6474664	0		=			
ANR	6474909	UnaryOperationExpression	* usr		6474664	0					
ANR	6474910	UnaryOperator	*		6474664	0					
ANR	6474911	Identifier	usr		6474664	1					
ANR	6474912	PrimaryExpression	'\\0'		6474664	1					
ANR	6474913	ExpressionStatement	usr_dom = ( LPTSTR ) malloc ( usr_dom_len )	950:1:29346:29384	6474664	17	True				
ANR	6474914	AssignmentExpression	usr_dom = ( LPTSTR ) malloc ( usr_dom_len )		6474664	0		=			
ANR	6474915	Identifier	usr_dom		6474664	0					
ANR	6474916	CastExpression	( LPTSTR ) malloc ( usr_dom_len )		6474664	1					
ANR	6474917	CastTarget	LPTSTR		6474664	0					
ANR	6474918	CallExpression	malloc ( usr_dom_len )		6474664	1					
ANR	6474919	Callee	malloc		6474664	0					
ANR	6474920	Identifier	malloc		6474664	0					
ANR	6474921	ArgumentList	usr_dom_len		6474664	1					
ANR	6474922	Argument	usr_dom_len		6474664	0					
ANR	6474923	Identifier	usr_dom_len		6474664	0					
ANR	6474924	IfStatement	if ( ! usr_dom )		6474664	18					
ANR	6474925	Condition	! usr_dom	951:5:29391:29398	6474664	0	True				
ANR	6474926	UnaryOperationExpression	! usr_dom		6474664	0					
ANR	6474927	UnaryOperator	!		6474664	0					
ANR	6474928	Identifier	usr_dom		6474664	1					
ANR	6474929	CompoundStatement		39:15:1176:1176	6474664	1					
ANR	6474930	ExpressionStatement	"perror ( ""w32_info_user/malloc usr_dom"" )"	952:2:29405:29444	6474664	0	True				
ANR	6474931	CallExpression	"perror ( ""w32_info_user/malloc usr_dom"" )"		6474664	0					
ANR	6474932	Callee	perror		6474664	0					
ANR	6474933	Identifier	perror		6474664	0					
ANR	6474934	ArgumentList	"""w32_info_user/malloc usr_dom"""		6474664	1					
ANR	6474935	Argument	"""w32_info_user/malloc usr_dom"""		6474664	0					
ANR	6474936	PrimaryExpression	"""w32_info_user/malloc usr_dom"""		6474664	0					
ANR	6474937	GotoStatement	goto err_w32_info_user ;	953:2:29448:29470	6474664	1	True				
ANR	6474938	Identifier	err_w32_info_user		6474664	0					
ANR	6474939	ExpressionStatement	* usr_dom = '\\0'	955:1:29476:29491	6474664	19	True				
ANR	6474940	AssignmentExpression	* usr_dom = '\\0'		6474664	0		=			
ANR	6474941	UnaryOperationExpression	* usr_dom		6474664	0					
ANR	6474942	UnaryOperator	*		6474664	0					
ANR	6474943	Identifier	usr_dom		6474664	1					
ANR	6474944	PrimaryExpression	'\\0'		6474664	1					
ANR	6474945	IfStatement	"if ( ! LookupAccountSid ( NULL , tok_usr -> User . Sid , usr , & usr_len , usr_dom , & usr_dom_len , & snu ) )"		6474664	20					
ANR	6474946	Condition	"! LookupAccountSid ( NULL , tok_usr -> User . Sid , usr , & usr_len , usr_dom , & usr_dom_len , & snu )"	956:5:29498:29584	6474664	0	True				
ANR	6474947	UnaryOperationExpression	"! LookupAccountSid ( NULL , tok_usr -> User . Sid , usr , & usr_len , usr_dom , & usr_dom_len , & snu )"		6474664	0					
ANR	6474948	UnaryOperator	!		6474664	0					
ANR	6474949	CallExpression	"LookupAccountSid ( NULL , tok_usr -> User . Sid , usr , & usr_len , usr_dom , & usr_dom_len , & snu )"		6474664	1					
ANR	6474950	Callee	LookupAccountSid		6474664	0					
ANR	6474951	Identifier	LookupAccountSid		6474664	0					
ANR	6474952	ArgumentList	NULL		6474664	1					
ANR	6474953	Argument	NULL		6474664	0					
ANR	6474954	Identifier	NULL		6474664	0					
ANR	6474955	Argument	tok_usr -> User . Sid		6474664	1					
ANR	6474956	MemberAccess	tok_usr -> User . Sid		6474664	0					
ANR	6474957	PtrMemberAccess	tok_usr -> User		6474664	0					
ANR	6474958	Identifier	tok_usr		6474664	0					
ANR	6474959	Identifier	User		6474664	1					
ANR	6474960	Identifier	Sid		6474664	1					
ANR	6474961	Argument	usr		6474664	2					
ANR	6474962	Identifier	usr		6474664	0					
ANR	6474963	Argument	& usr_len		6474664	3					
ANR	6474964	UnaryOperationExpression	& usr_len		6474664	0					
ANR	6474965	UnaryOperator	&		6474664	0					
ANR	6474966	Identifier	usr_len		6474664	1					
ANR	6474967	Argument	usr_dom		6474664	4					
ANR	6474968	Identifier	usr_dom		6474664	0					
ANR	6474969	Argument	& usr_dom_len		6474664	5					
ANR	6474970	UnaryOperationExpression	& usr_dom_len		6474664	0					
ANR	6474971	UnaryOperator	&		6474664	0					
ANR	6474972	Identifier	usr_dom_len		6474664	1					
ANR	6474973	Argument	& snu		6474664	6					
ANR	6474974	UnaryOperationExpression	& snu		6474664	0					
ANR	6474975	UnaryOperator	&		6474664	0					
ANR	6474976	Identifier	snu		6474664	1					
ANR	6474977	CompoundStatement		44:94:1362:1362	6474664	1					
ANR	6474978	ExpressionStatement	"r_sys_perror ( ""w32_info_user/LookupAccountSid"" )"	957:2:29591:29638	6474664	0	True				
ANR	6474979	CallExpression	"r_sys_perror ( ""w32_info_user/LookupAccountSid"" )"		6474664	0					
ANR	6474980	Callee	r_sys_perror		6474664	0					
ANR	6474981	Identifier	r_sys_perror		6474664	0					
ANR	6474982	ArgumentList	"""w32_info_user/LookupAccountSid"""		6474664	1					
ANR	6474983	Argument	"""w32_info_user/LookupAccountSid"""		6474664	0					
ANR	6474984	PrimaryExpression	"""w32_info_user/LookupAccountSid"""		6474664	0					
ANR	6474985	GotoStatement	goto err_w32_info_user ;	958:2:29642:29664	6474664	1	True				
ANR	6474986	Identifier	err_w32_info_user		6474664	0					
ANR	6474987	IfStatement	if ( * usr_dom )		6474664	21					
ANR	6474988	Condition	* usr_dom	960:5:29674:29681	6474664	0	True				
ANR	6474989	UnaryOperationExpression	* usr_dom		6474664	0					
ANR	6474990	UnaryOperator	*		6474664	0					
ANR	6474991	Identifier	usr_dom		6474664	1					
ANR	6474992	CompoundStatement		48:15:1459:1459	6474664	1					
ANR	6474993	Statement	rdi	961:2:29688:29690	6474664	0	True				
ANR	6474994	Statement	->	961:5:29691:29692	6474664	1	True				
ANR	6474995	Statement	usr	961:7:29693:29695	6474664	2	True				
ANR	6474996	Statement	=	961:11:29697:29697	6474664	3	True				
ANR	6474997	Statement	r_str_newf	961:13:29699:29708	6474664	4	True				
ANR	6474998	Statement	(	961:24:29710:29710	6474664	5	True				
ANR	6474999	Statement	W32_TCHAR_FSTR	961:25:29711:29724	6474664	6	True				
ANR	6475000	Statement	"""\\\\"""	961:39:29725:29728	6474664	7	True				
ANR	6475001	Statement	W32_TCHAR_FSTR	961:43:29729:29742	6474664	8	True				
ANR	6475002	Statement	","	961:57:29743:29743	6474664	9	True				
ANR	6475003	Statement	usr_dom	961:59:29745:29751	6474664	10	True				
ANR	6475004	Statement	","	961:66:29752:29752	6474664	11	True				
ANR	6475005	Statement	usr	961:68:29754:29756	6474664	12	True				
ANR	6475006	Statement	)	961:71:29757:29757	6474664	13	True				
ANR	6475007	ExpressionStatement		961:72:29758:29758	6474664	14	True				
ANR	6475008	ElseStatement	else		6474664	0					
ANR	6475009	CompoundStatement		50:8:1543:1543	6474664	0					
ANR	6475010	ExpressionStatement	rdi -> usr = r_sys_conv_win_to_utf8 ( usr )	963:2:29772:29811	6474664	0	True				
ANR	6475011	AssignmentExpression	rdi -> usr = r_sys_conv_win_to_utf8 ( usr )		6474664	0		=			
ANR	6475012	PtrMemberAccess	rdi -> usr		6474664	0					
ANR	6475013	Identifier	rdi		6474664	0					
ANR	6475014	Identifier	usr		6474664	1					
ANR	6475015	CallExpression	r_sys_conv_win_to_utf8 ( usr )		6474664	1					
ANR	6475016	Callee	r_sys_conv_win_to_utf8		6474664	0					
ANR	6475017	Identifier	r_sys_conv_win_to_utf8		6474664	0					
ANR	6475018	ArgumentList	usr		6474664	1					
ANR	6475019	Argument	usr		6474664	0					
ANR	6475020	Identifier	usr		6474664	0					
ANR	6475021	Label	err_w32_info_user :	965:0:29816:29833	6474664	22	True				
ANR	6475022	Identifier	err_w32_info_user		6474664	0					
ANR	6475023	IfStatement	if ( h_proc )		6474664	23					
ANR	6475024	Condition	h_proc	966:8:29843:29848	6474664	0	True				
ANR	6475025	Identifier	h_proc		6474664	0					
ANR	6475026	CompoundStatement		54:16:1626:1626	6474664	1					
ANR	6475027	ExpressionStatement	CloseHandle ( h_proc )	967:1:29854:29874	6474664	0	True				
ANR	6475028	CallExpression	CloseHandle ( h_proc )		6474664	0					
ANR	6475029	Callee	CloseHandle		6474664	0					
ANR	6475030	Identifier	CloseHandle		6474664	0					
ANR	6475031	ArgumentList	h_proc		6474664	1					
ANR	6475032	Argument	h_proc		6474664	0					
ANR	6475033	Identifier	h_proc		6474664	0					
ANR	6475034	IfStatement	if ( h_tok )		6474664	24					
ANR	6475035	Condition	h_tok	969:8:29890:29894	6474664	0	True				
ANR	6475036	Identifier	h_tok		6474664	0					
ANR	6475037	CompoundStatement		57:15:1672:1672	6474664	1					
ANR	6475038	ExpressionStatement	CloseHandle ( h_tok )	970:1:29900:29919	6474664	0	True				
ANR	6475039	CallExpression	CloseHandle ( h_tok )		6474664	0					
ANR	6475040	Callee	CloseHandle		6474664	0					
ANR	6475041	Identifier	CloseHandle		6474664	0					
ANR	6475042	ArgumentList	h_tok		6474664	1					
ANR	6475043	Argument	h_tok		6474664	0					
ANR	6475044	Identifier	h_tok		6474664	0					
ANR	6475045	ExpressionStatement	free ( usr )	972:4:29931:29941	6474664	25	True				
ANR	6475046	CallExpression	free ( usr )		6474664	0					
ANR	6475047	Callee	free		6474664	0					
ANR	6475048	Identifier	free		6474664	0					
ANR	6475049	ArgumentList	usr		6474664	1					
ANR	6475050	Argument	usr		6474664	0					
ANR	6475051	Identifier	usr		6474664	0					
ANR	6475052	ExpressionStatement	free ( usr_dom )	973:4:29947:29961	6474664	26	True				
ANR	6475053	CallExpression	free ( usr_dom )		6474664	0					
ANR	6475054	Callee	free		6474664	0					
ANR	6475055	Identifier	free		6474664	0					
ANR	6475056	ArgumentList	usr_dom		6474664	1					
ANR	6475057	Argument	usr_dom		6474664	0					
ANR	6475058	Identifier	usr_dom		6474664	0					
ANR	6475059	ExpressionStatement	free ( tok_usr )	974:4:29967:29981	6474664	27	True				
ANR	6475060	CallExpression	free ( tok_usr )		6474664	0					
ANR	6475061	Callee	free		6474664	0					
ANR	6475062	Identifier	free		6474664	0					
ANR	6475063	ArgumentList	tok_usr		6474664	1					
ANR	6475064	Argument	tok_usr		6474664	0					
ANR	6475065	Identifier	tok_usr		6474664	0					
ANR	6475066	ReturnType	static void		6474664	1					
ANR	6475067	Identifier	w32_info_user		6474664	2					
ANR	6475068	ParameterList	"RDebug * dbg , RDebugInfo * rdi"		6474664	3					
ANR	6475069	Parameter	RDebug * dbg	913:26:28194:28204	6474664	0	True				
ANR	6475070	ParameterType	RDebug *		6474664	0					
ANR	6475071	Identifier	dbg		6474664	1					
ANR	6475072	Parameter	RDebugInfo * rdi	913:39:28207:28221	6474664	1	True				
ANR	6475073	ParameterType	RDebugInfo *		6474664	0					
ANR	6475074	Identifier	rdi		6474664	1					
ANR	6475075	CFGEntryNode	ENTRY		6474664		True				
ANR	6475076	CFGExitNode	EXIT		6474664		True				
ANR	6475077	Symbol	* tok_usr		6474664						
ANR	6475078	Symbol	usr_len		6474664						
ANR	6475079	Symbol	ERROR_INSUFFICIENT_BUFFER		6474664						
ANR	6475080	Symbol	& usr_len		6474664						
ANR	6475081	Symbol	GetTokenInformation		6474664						
ANR	6475082	Symbol	& usr_dom_len		6474664						
ANR	6475083	Symbol	& h_tok		6474664						
ANR	6475084	Symbol	TOKEN_QUERY		6474664						
ANR	6475085	Symbol	usr		6474664						
ANR	6475086	Symbol	LookupAccountSid		6474664						
ANR	6475087	Symbol	OpenProcessToken		6474664						
ANR	6475088	Symbol	tok_usr -> User . Sid		6474664						
ANR	6475089	Symbol	OpenProcess		6474664						
ANR	6475090	Symbol	h_tok		6474664						
ANR	6475091	Symbol	malloc		6474664						
ANR	6475092	Symbol	* rdi		6474664						
ANR	6475093	Symbol	NULL		6474664						
ANR	6475094	Symbol	TokenUser		6474664						
ANR	6475095	Symbol	tok_usr -> User		6474664						
ANR	6475096	Symbol	& snu		6474664						
ANR	6475097	Symbol	dbg		6474664						
ANR	6475098	Symbol	tok_usr		6474664						
ANR	6475099	Symbol	* usr_dom		6474664						
ANR	6475100	Symbol	h_proc		6474664						
ANR	6475101	Symbol	tok_len		6474664						
ANR	6475102	Symbol	* dbg		6474664						
ANR	6475103	Symbol	& tok_usr		6474664						
ANR	6475104	Symbol	dbg -> pid		6474664						
ANR	6475105	Symbol	rdi		6474664						
ANR	6475106	Symbol	GetLastError		6474664						
ANR	6475107	Symbol	& tok_len		6474664						
ANR	6475108	Symbol	rdi -> usr		6474664						
ANR	6475109	Symbol	FALSE		6474664						
ANR	6475110	Symbol	snu		6474664						
ANR	6475111	Symbol	PROCESS_QUERY_INFORMATION		6474664						
ANR	6475112	Symbol	r_sys_conv_win_to_utf8		6474664						
ANR	6475113	Symbol	usr_dom		6474664						
ANR	6475114	Symbol	* usr		6474664						
ANR	6475115	Symbol	usr_dom_len		6474664						
ANR	6475116	Function	w32_info_exe	977:0:29986:30711							
ANR	6475117	FunctionDef	"w32_info_exe (RDebug * dbg , RDebugInfo * rdi)"		6475116	0					
ANR	6475118	CompoundStatement		977:55:30041:30711	6475116	0					
ANR	6475119	IdentifierDeclStatement	LPTSTR path = NULL ;	978:1:30044:30062	6475116	0	True				
ANR	6475120	IdentifierDecl	path = NULL		6475116	0					
ANR	6475121	IdentifierDeclType	LPTSTR		6475116	0					
ANR	6475122	Identifier	path		6475116	1					
ANR	6475123	AssignmentExpression	path = NULL		6475116	2		=			
ANR	6475124	Identifier	NULL		6475116	0					
ANR	6475125	Identifier	NULL		6475116	1					
ANR	6475126	IdentifierDeclStatement	HANDLE h_proc ;	979:1:30065:30078	6475116	1	True				
ANR	6475127	IdentifierDecl	h_proc		6475116	0					
ANR	6475128	IdentifierDeclType	HANDLE		6475116	0					
ANR	6475129	Identifier	h_proc		6475116	1					
ANR	6475130	IdentifierDeclStatement	DWORD len ;	980:1:30081:30090	6475116	2	True				
ANR	6475131	IdentifierDecl	len		6475116	0					
ANR	6475132	IdentifierDeclType	DWORD		6475116	0					
ANR	6475133	Identifier	len		6475116	1					
ANR	6475134	IfStatement	if ( ! w32_QueryFullProcessImageName )		6475116	3					
ANR	6475135	Condition	! w32_QueryFullProcessImageName	982:5:30098:30127	6475116	0	True				
ANR	6475136	UnaryOperationExpression	! w32_QueryFullProcessImageName		6475116	0					
ANR	6475137	UnaryOperator	!		6475116	0					
ANR	6475138	Identifier	w32_QueryFullProcessImageName		6475116	1					
ANR	6475139	CompoundStatement		6:37:88:88	6475116	1					
ANR	6475140	ReturnStatement	return ;	983:2:30134:30140	6475116	0	True				
ANR	6475141	ExpressionStatement	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid )"	985:1:30146:30211	6475116	4	True				
ANR	6475142	AssignmentExpression	"h_proc = OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid )"		6475116	0		=			
ANR	6475143	Identifier	h_proc		6475116	0					
ANR	6475144	CallExpression	"OpenProcess ( PROCESS_QUERY_INFORMATION , FALSE , dbg -> pid )"		6475116	1					
ANR	6475145	Callee	OpenProcess		6475116	0					
ANR	6475146	Identifier	OpenProcess		6475116	0					
ANR	6475147	ArgumentList	PROCESS_QUERY_INFORMATION		6475116	1					
ANR	6475148	Argument	PROCESS_QUERY_INFORMATION		6475116	0					
ANR	6475149	Identifier	PROCESS_QUERY_INFORMATION		6475116	0					
ANR	6475150	Argument	FALSE		6475116	1					
ANR	6475151	Identifier	FALSE		6475116	0					
ANR	6475152	Argument	dbg -> pid		6475116	2					
ANR	6475153	PtrMemberAccess	dbg -> pid		6475116	0					
ANR	6475154	Identifier	dbg		6475116	0					
ANR	6475155	Identifier	pid		6475116	1					
ANR	6475156	IfStatement	if ( ! h_proc )		6475116	5					
ANR	6475157	Condition	! h_proc	986:5:30218:30224	6475116	0	True				
ANR	6475158	UnaryOperationExpression	! h_proc		6475116	0					
ANR	6475159	UnaryOperator	!		6475116	0					
ANR	6475160	Identifier	h_proc		6475116	1					
ANR	6475161	CompoundStatement		10:14:185:185	6475116	1					
ANR	6475162	ExpressionStatement	"r_sys_perror ( ""w32_info_exe/OpenProcess"" )"	987:2:30231:30272	6475116	0	True				
ANR	6475163	CallExpression	"r_sys_perror ( ""w32_info_exe/OpenProcess"" )"		6475116	0					
ANR	6475164	Callee	r_sys_perror		6475116	0					
ANR	6475165	Identifier	r_sys_perror		6475116	0					
ANR	6475166	ArgumentList	"""w32_info_exe/OpenProcess"""		6475116	1					
ANR	6475167	Argument	"""w32_info_exe/OpenProcess"""		6475116	0					
ANR	6475168	PrimaryExpression	"""w32_info_exe/OpenProcess"""		6475116	0					
ANR	6475169	GotoStatement	goto err_w32_info_exe ;	988:2:30276:30297	6475116	1	True				
ANR	6475170	Identifier	err_w32_info_exe		6475116	0					
ANR	6475171	ExpressionStatement	path = ( LPTSTR ) malloc ( MAX_PATH + 1 )	990:1:30303:30339	6475116	6	True				
ANR	6475172	AssignmentExpression	path = ( LPTSTR ) malloc ( MAX_PATH + 1 )		6475116	0		=			
ANR	6475173	Identifier	path		6475116	0					
ANR	6475174	CastExpression	( LPTSTR ) malloc ( MAX_PATH + 1 )		6475116	1					
ANR	6475175	CastTarget	LPTSTR		6475116	0					
ANR	6475176	CallExpression	malloc ( MAX_PATH + 1 )		6475116	1					
ANR	6475177	Callee	malloc		6475116	0					
ANR	6475178	Identifier	malloc		6475116	0					
ANR	6475179	ArgumentList	MAX_PATH + 1		6475116	1					
ANR	6475180	Argument	MAX_PATH + 1		6475116	0					
ANR	6475181	AdditiveExpression	MAX_PATH + 1		6475116	0		+			
ANR	6475182	Identifier	MAX_PATH		6475116	0					
ANR	6475183	PrimaryExpression	1		6475116	1					
ANR	6475184	IfStatement	if ( ! path )		6475116	7					
ANR	6475185	Condition	! path	991:5:30346:30350	6475116	0	True				
ANR	6475186	UnaryOperationExpression	! path		6475116	0					
ANR	6475187	UnaryOperator	!		6475116	0					
ANR	6475188	Identifier	path		6475116	1					
ANR	6475189	CompoundStatement		15:12:311:311	6475116	1					
ANR	6475190	ExpressionStatement	"perror ( ""w32_info_exe/malloc path"" )"	992:2:30357:30392	6475116	0	True				
ANR	6475191	CallExpression	"perror ( ""w32_info_exe/malloc path"" )"		6475116	0					
ANR	6475192	Callee	perror		6475116	0					
ANR	6475193	Identifier	perror		6475116	0					
ANR	6475194	ArgumentList	"""w32_info_exe/malloc path"""		6475116	1					
ANR	6475195	Argument	"""w32_info_exe/malloc path"""		6475116	0					
ANR	6475196	PrimaryExpression	"""w32_info_exe/malloc path"""		6475116	0					
ANR	6475197	GotoStatement	goto err_w32_info_exe ;	993:2:30396:30417	6475116	1	True				
ANR	6475198	Identifier	err_w32_info_exe		6475116	0					
ANR	6475199	ExpressionStatement	len = MAX_PATH	995:1:30423:30437	6475116	8	True				
ANR	6475200	AssignmentExpression	len = MAX_PATH		6475116	0		=			
ANR	6475201	Identifier	len		6475116	0					
ANR	6475202	Identifier	MAX_PATH		6475116	1					
ANR	6475203	IfStatement	"if ( w32_QueryFullProcessImageName ( h_proc , 0 , path , & len ) )"		6475116	9					
ANR	6475204	Condition	"w32_QueryFullProcessImageName ( h_proc , 0 , path , & len )"	996:5:30444:30496	6475116	0	True				
ANR	6475205	CallExpression	"w32_QueryFullProcessImageName ( h_proc , 0 , path , & len )"		6475116	0					
ANR	6475206	Callee	w32_QueryFullProcessImageName		6475116	0					
ANR	6475207	Identifier	w32_QueryFullProcessImageName		6475116	0					
ANR	6475208	ArgumentList	h_proc		6475116	1					
ANR	6475209	Argument	h_proc		6475116	0					
ANR	6475210	Identifier	h_proc		6475116	0					
ANR	6475211	Argument	0		6475116	1					
ANR	6475212	PrimaryExpression	0		6475116	0					
ANR	6475213	Argument	path		6475116	2					
ANR	6475214	Identifier	path		6475116	0					
ANR	6475215	Argument	& len		6475116	3					
ANR	6475216	UnaryOperationExpression	& len		6475116	0					
ANR	6475217	UnaryOperator	&		6475116	0					
ANR	6475218	Identifier	len		6475116	1					
ANR	6475219	CompoundStatement		20:60:457:457	6475116	1					
ANR	6475220	ExpressionStatement	path [ len ] = '\\0'	997:2:30503:30519	6475116	0	True				
ANR	6475221	AssignmentExpression	path [ len ] = '\\0'		6475116	0		=			
ANR	6475222	ArrayIndexing	path [ len ]		6475116	0					
ANR	6475223	Identifier	path		6475116	0					
ANR	6475224	Identifier	len		6475116	1					
ANR	6475225	PrimaryExpression	'\\0'		6475116	1					
ANR	6475226	ExpressionStatement	rdi -> exe = r_sys_conv_win_to_utf8 ( path )	998:2:30523:30563	6475116	1	True				
ANR	6475227	AssignmentExpression	rdi -> exe = r_sys_conv_win_to_utf8 ( path )		6475116	0		=			
ANR	6475228	PtrMemberAccess	rdi -> exe		6475116	0					
ANR	6475229	Identifier	rdi		6475116	0					
ANR	6475230	Identifier	exe		6475116	1					
ANR	6475231	CallExpression	r_sys_conv_win_to_utf8 ( path )		6475116	1					
ANR	6475232	Callee	r_sys_conv_win_to_utf8		6475116	0					
ANR	6475233	Identifier	r_sys_conv_win_to_utf8		6475116	0					
ANR	6475234	ArgumentList	path		6475116	1					
ANR	6475235	Argument	path		6475116	0					
ANR	6475236	Identifier	path		6475116	0					
ANR	6475237	ElseStatement	else		6475116	0					
ANR	6475238	CompoundStatement		23:8:531:531	6475116	0					
ANR	6475239	ExpressionStatement	"r_sys_perror ( ""w32_info_exe/QueryFullProcessImageName"" )"	1000:2:30577:30632	6475116	0	True				
ANR	6475240	CallExpression	"r_sys_perror ( ""w32_info_exe/QueryFullProcessImageName"" )"		6475116	0					
ANR	6475241	Callee	r_sys_perror		6475116	0					
ANR	6475242	Identifier	r_sys_perror		6475116	0					
ANR	6475243	ArgumentList	"""w32_info_exe/QueryFullProcessImageName"""		6475116	1					
ANR	6475244	Argument	"""w32_info_exe/QueryFullProcessImageName"""		6475116	0					
ANR	6475245	PrimaryExpression	"""w32_info_exe/QueryFullProcessImageName"""		6475116	0					
ANR	6475246	Label	err_w32_info_exe :	1002:0:30637:30653	6475116	10	True				
ANR	6475247	Identifier	err_w32_info_exe		6475116	0					
ANR	6475248	IfStatement	if ( h_proc )		6475116	11					
ANR	6475249	Condition	h_proc	1003:5:30660:30665	6475116	0	True				
ANR	6475250	Identifier	h_proc		6475116	0					
ANR	6475251	CompoundStatement		27:13:626:626	6475116	1					
ANR	6475252	ExpressionStatement	CloseHandle ( h_proc )	1004:2:30672:30692	6475116	0	True				
ANR	6475253	CallExpression	CloseHandle ( h_proc )		6475116	0					
ANR	6475254	Callee	CloseHandle		6475116	0					
ANR	6475255	Identifier	CloseHandle		6475116	0					
ANR	6475256	ArgumentList	h_proc		6475116	1					
ANR	6475257	Argument	h_proc		6475116	0					
ANR	6475258	Identifier	h_proc		6475116	0					
ANR	6475259	ExpressionStatement	free ( path )	1006:1:30698:30709	6475116	12	True				
ANR	6475260	CallExpression	free ( path )		6475116	0					
ANR	6475261	Callee	free		6475116	0					
ANR	6475262	Identifier	free		6475116	0					
ANR	6475263	ArgumentList	path		6475116	1					
ANR	6475264	Argument	path		6475116	0					
ANR	6475265	Identifier	path		6475116	0					
ANR	6475266	ReturnType	static void		6475116	1					
ANR	6475267	Identifier	w32_info_exe		6475116	2					
ANR	6475268	ParameterList	"RDebug * dbg , RDebugInfo * rdi"		6475116	3					
ANR	6475269	Parameter	RDebug * dbg	977:25:30011:30021	6475116	0	True				
ANR	6475270	ParameterType	RDebug *		6475116	0					
ANR	6475271	Identifier	dbg		6475116	1					
ANR	6475272	Parameter	RDebugInfo * rdi	977:38:30024:30038	6475116	1	True				
ANR	6475273	ParameterType	RDebugInfo *		6475116	0					
ANR	6475274	Identifier	rdi		6475116	1					
ANR	6475275	CFGEntryNode	ENTRY		6475116		True				
ANR	6475276	CFGExitNode	EXIT		6475116		True				
ANR	6475277	Symbol	malloc		6475116						
ANR	6475278	Symbol	* rdi		6475116						
ANR	6475279	Symbol	NULL		6475116						
ANR	6475280	Symbol	dbg		6475116						
ANR	6475281	Symbol	h_proc		6475116						
ANR	6475282	Symbol	* dbg		6475116						
ANR	6475283	Symbol	w32_QueryFullProcessImageName		6475116						
ANR	6475284	Symbol	path		6475116						
ANR	6475285	Symbol	len		6475116						
ANR	6475286	Symbol	dbg -> pid		6475116						
ANR	6475287	Symbol	rdi		6475116						
ANR	6475288	Symbol	* path		6475116						
ANR	6475289	Symbol	FALSE		6475116						
ANR	6475290	Symbol	MAX_PATH		6475116						
ANR	6475291	Symbol	rdi -> exe		6475116						
ANR	6475292	Symbol	PROCESS_QUERY_INFORMATION		6475116						
ANR	6475293	Symbol	& len		6475116						
ANR	6475294	Symbol	r_sys_conv_win_to_utf8		6475116						
ANR	6475295	Symbol	OpenProcess		6475116						
ANR	6475296	Symbol	* len		6475116						
ANR	6475297	Function	w32_info	1009:0:30714:31176							
ANR	6475298	FunctionDef	"w32_info (RDebug * dbg , const char * arg)"		6475297	0					
ANR	6475299	CompoundStatement		1009:51:30765:31176	6475297	0					
ANR	6475300	IdentifierDeclStatement	RDebugInfo * rdi = R_NEW0 ( RDebugInfo ) ;	1010:1:30768:30805	6475297	0	True				
ANR	6475301	IdentifierDecl	* rdi = R_NEW0 ( RDebugInfo )		6475297	0					
ANR	6475302	IdentifierDeclType	RDebugInfo *		6475297	0					
ANR	6475303	Identifier	rdi		6475297	1					
ANR	6475304	AssignmentExpression	* rdi = R_NEW0 ( RDebugInfo )		6475297	2		=			
ANR	6475305	Identifier	rdi		6475297	0					
ANR	6475306	CallExpression	R_NEW0 ( RDebugInfo )		6475297	1					
ANR	6475307	Callee	R_NEW0		6475297	0					
ANR	6475308	Identifier	R_NEW0		6475297	0					
ANR	6475309	ArgumentList	RDebugInfo		6475297	1					
ANR	6475310	Argument	RDebugInfo		6475297	0					
ANR	6475311	Identifier	RDebugInfo		6475297	0					
ANR	6475312	ExpressionStatement	rdi -> status = R_DBG_PROC_SLEEP	1011:1:30808:30838	6475297	1	True				
ANR	6475313	AssignmentExpression	rdi -> status = R_DBG_PROC_SLEEP		6475297	0		=			
ANR	6475314	PtrMemberAccess	rdi -> status		6475297	0					
ANR	6475315	Identifier	rdi		6475297	0					
ANR	6475316	Identifier	status		6475297	1					
ANR	6475317	Identifier	R_DBG_PROC_SLEEP		6475297	1					
ANR	6475318	ExpressionStatement	rdi -> pid = dbg -> pid	1012:1:30859:30878	6475297	2	True				
ANR	6475319	AssignmentExpression	rdi -> pid = dbg -> pid		6475297	0		=			
ANR	6475320	PtrMemberAccess	rdi -> pid		6475297	0					
ANR	6475321	Identifier	rdi		6475297	0					
ANR	6475322	Identifier	pid		6475297	1					
ANR	6475323	PtrMemberAccess	dbg -> pid		6475297	1					
ANR	6475324	Identifier	dbg		6475297	0					
ANR	6475325	Identifier	pid		6475297	1					
ANR	6475326	ExpressionStatement	rdi -> tid = dbg -> tid	1013:1:30881:30900	6475297	3	True				
ANR	6475327	AssignmentExpression	rdi -> tid = dbg -> tid		6475297	0		=			
ANR	6475328	PtrMemberAccess	rdi -> tid		6475297	0					
ANR	6475329	Identifier	rdi		6475297	0					
ANR	6475330	Identifier	tid		6475297	1					
ANR	6475331	PtrMemberAccess	dbg -> tid		6475297	1					
ANR	6475332	Identifier	dbg		6475297	0					
ANR	6475333	Identifier	tid		6475297	1					
ANR	6475334	ExpressionStatement	rdi -> lib = ( void * ) r_debug_get_lib_item ( )	1014:1:30903:30945	6475297	4	True				
ANR	6475335	AssignmentExpression	rdi -> lib = ( void * ) r_debug_get_lib_item ( )		6475297	0		=			
ANR	6475336	PtrMemberAccess	rdi -> lib		6475297	0					
ANR	6475337	Identifier	rdi		6475297	0					
ANR	6475338	Identifier	lib		6475297	1					
ANR	6475339	CastExpression	( void * ) r_debug_get_lib_item ( )		6475297	1					
ANR	6475340	CastTarget	void *		6475297	0					
ANR	6475341	CallExpression	r_debug_get_lib_item ( )		6475297	1					
ANR	6475342	Callee	r_debug_get_lib_item		6475297	0					
ANR	6475343	Identifier	r_debug_get_lib_item		6475297	0					
ANR	6475344	ArgumentList			6475297	1					
ANR	6475345	ExpressionStatement	rdi -> thread = ( void * ) r_debug_get_thread_item ( )	1015:1:30948:30996	6475297	5	True				
ANR	6475346	AssignmentExpression	rdi -> thread = ( void * ) r_debug_get_thread_item ( )		6475297	0		=			
ANR	6475347	PtrMemberAccess	rdi -> thread		6475297	0					
ANR	6475348	Identifier	rdi		6475297	0					
ANR	6475349	Identifier	thread		6475297	1					
ANR	6475350	CastExpression	( void * ) r_debug_get_thread_item ( )		6475297	1					
ANR	6475351	CastTarget	void *		6475297	0					
ANR	6475352	CallExpression	r_debug_get_thread_item ( )		6475297	1					
ANR	6475353	Callee	r_debug_get_thread_item		6475297	0					
ANR	6475354	Identifier	r_debug_get_thread_item		6475297	0					
ANR	6475355	ArgumentList			6475297	1					
ANR	6475356	ExpressionStatement	rdi -> uid = - 1	1016:1:30999:31012	6475297	6	True				
ANR	6475357	AssignmentExpression	rdi -> uid = - 1		6475297	0		=			
ANR	6475358	PtrMemberAccess	rdi -> uid		6475297	0					
ANR	6475359	Identifier	rdi		6475297	0					
ANR	6475360	Identifier	uid		6475297	1					
ANR	6475361	UnaryOperationExpression	- 1		6475297	1					
ANR	6475362	UnaryOperator	-		6475297	0					
ANR	6475363	PrimaryExpression	1		6475297	1					
ANR	6475364	ExpressionStatement	rdi -> gid = - 1	1017:1:31015:31028	6475297	7	True				
ANR	6475365	AssignmentExpression	rdi -> gid = - 1		6475297	0		=			
ANR	6475366	PtrMemberAccess	rdi -> gid		6475297	0					
ANR	6475367	Identifier	rdi		6475297	0					
ANR	6475368	Identifier	gid		6475297	1					
ANR	6475369	UnaryOperationExpression	- 1		6475297	1					
ANR	6475370	UnaryOperator	-		6475297	0					
ANR	6475371	PrimaryExpression	1		6475297	1					
ANR	6475372	ExpressionStatement	rdi -> cwd = NULL	1018:1:31031:31046	6475297	8	True				
ANR	6475373	AssignmentExpression	rdi -> cwd = NULL		6475297	0		=			
ANR	6475374	PtrMemberAccess	rdi -> cwd		6475297	0					
ANR	6475375	Identifier	rdi		6475297	0					
ANR	6475376	Identifier	cwd		6475297	1					
ANR	6475377	Identifier	NULL		6475297	1					
ANR	6475378	ExpressionStatement	rdi -> exe = NULL	1019:1:31049:31064	6475297	9	True				
ANR	6475379	AssignmentExpression	rdi -> exe = NULL		6475297	0		=			
ANR	6475380	PtrMemberAccess	rdi -> exe		6475297	0					
ANR	6475381	Identifier	rdi		6475297	0					
ANR	6475382	Identifier	exe		6475297	1					
ANR	6475383	Identifier	NULL		6475297	1					
ANR	6475384	ExpressionStatement	rdi -> cmdline = NULL	1020:1:31067:31086	6475297	10	True				
ANR	6475385	AssignmentExpression	rdi -> cmdline = NULL		6475297	0		=			
ANR	6475386	PtrMemberAccess	rdi -> cmdline		6475297	0					
ANR	6475387	Identifier	rdi		6475297	0					
ANR	6475388	Identifier	cmdline		6475297	1					
ANR	6475389	Identifier	NULL		6475297	1					
ANR	6475390	ExpressionStatement	rdi -> libname = NULL	1021:1:31089:31108	6475297	11	True				
ANR	6475391	AssignmentExpression	rdi -> libname = NULL		6475297	0		=			
ANR	6475392	PtrMemberAccess	rdi -> libname		6475297	0					
ANR	6475393	Identifier	rdi		6475297	0					
ANR	6475394	Identifier	libname		6475297	1					
ANR	6475395	Identifier	NULL		6475297	1					
ANR	6475396	ExpressionStatement	"w32_info_user ( dbg , rdi )"	1022:1:31111:31135	6475297	12	True				
ANR	6475397	CallExpression	"w32_info_user ( dbg , rdi )"		6475297	0					
ANR	6475398	Callee	w32_info_user		6475297	0					
ANR	6475399	Identifier	w32_info_user		6475297	0					
ANR	6475400	ArgumentList	dbg		6475297	1					
ANR	6475401	Argument	dbg		6475297	0					
ANR	6475402	Identifier	dbg		6475297	0					
ANR	6475403	Argument	rdi		6475297	1					
ANR	6475404	Identifier	rdi		6475297	0					
ANR	6475405	ExpressionStatement	"w32_info_exe ( dbg , rdi )"	1023:1:31138:31161	6475297	13	True				
ANR	6475406	CallExpression	"w32_info_exe ( dbg , rdi )"		6475297	0					
ANR	6475407	Callee	w32_info_exe		6475297	0					
ANR	6475408	Identifier	w32_info_exe		6475297	0					
ANR	6475409	ArgumentList	dbg		6475297	1					
ANR	6475410	Argument	dbg		6475297	0					
ANR	6475411	Identifier	dbg		6475297	0					
ANR	6475412	Argument	rdi		6475297	1					
ANR	6475413	Identifier	rdi		6475297	0					
ANR	6475414	ReturnStatement	return rdi ;	1024:1:31164:31174	6475297	14	True				
ANR	6475415	Identifier	rdi		6475297	0					
ANR	6475416	ReturnType	RDebugInfo *		6475297	1					
ANR	6475417	Identifier	w32_info		6475297	2					
ANR	6475418	ParameterList	"RDebug * dbg , const char * arg"		6475297	3					
ANR	6475419	Parameter	RDebug * dbg	1009:21:30735:30745	6475297	0	True				
ANR	6475420	ParameterType	RDebug *		6475297	0					
ANR	6475421	Identifier	dbg		6475297	1					
ANR	6475422	Parameter	const char * arg	1009:34:30748:30762	6475297	1	True				
ANR	6475423	ParameterType	const char *		6475297	0					
ANR	6475424	Identifier	arg		6475297	1					
ANR	6475425	CFGEntryNode	ENTRY		6475297		True				
ANR	6475426	CFGExitNode	EXIT		6475297		True				
ANR	6475427	Symbol	* rdi		6475297						
ANR	6475428	Symbol	rdi -> thread		6475297						
ANR	6475429	Symbol	NULL		6475297						
ANR	6475430	Symbol	rdi -> status		6475297						
ANR	6475431	Symbol	rdi -> libname		6475297						
ANR	6475432	Symbol	dbg		6475297						
ANR	6475433	Symbol	rdi -> lib		6475297						
ANR	6475434	Symbol	rdi -> gid		6475297						
ANR	6475435	Symbol	rdi -> cmdline		6475297						
ANR	6475436	Symbol	* dbg		6475297						
ANR	6475437	Symbol	RDebugInfo		6475297						
ANR	6475438	Symbol	dbg -> tid		6475297						
ANR	6475439	Symbol	R_NEW0		6475297						
ANR	6475440	Symbol	r_debug_get_thread_item		6475297						
ANR	6475441	Symbol	rdi -> pid		6475297						
ANR	6475442	Symbol	dbg -> pid		6475297						
ANR	6475443	Symbol	r_debug_get_lib_item		6475297						
ANR	6475444	Symbol	rdi		6475297						
ANR	6475445	Symbol	arg		6475297						
ANR	6475446	Symbol	R_DBG_PROC_SLEEP		6475297						
ANR	6475447	Symbol	rdi -> exe		6475297						
ANR	6475448	Symbol	rdi -> uid		6475297						
ANR	6475449	Symbol	rdi -> cwd		6475297						
ANR	6475450	Symbol	rdi -> tid		6475297						
