command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1003277	File	data/converged/CVE-2019-16718~_radare2/cmd_project.c								
ANR	1003278	DeclStmt									
ANR	1003279	Decl							const char	const char * [ ]	help_msg_P
ANR	1003280	DeclStmt									
ANR	1003281	Decl							const char	const char * [ ]	help_msg_Pn
ANR	1003282	Function	cmd_project_init	38:0:1196:1309							
ANR	1003283	FunctionDef	cmd_project_init (RCore * core)		1003282	0					
ANR	1003284	CompoundStatement		38:42:1238:1309	1003282	0					
ANR	1003285	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , P )"	39:1:1241:1272	1003282	0	True				
ANR	1003286	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , P )"		1003282	0					
ANR	1003287	Callee	DEFINE_CMD_DESCRIPTOR		1003282	0					
ANR	1003288	Identifier	DEFINE_CMD_DESCRIPTOR		1003282	0					
ANR	1003289	ArgumentList	core		1003282	1					
ANR	1003290	Argument	core		1003282	0					
ANR	1003291	Identifier	core		1003282	0					
ANR	1003292	Argument	P		1003282	1					
ANR	1003293	Identifier	P		1003282	0					
ANR	1003294	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , Pn )"	40:1:1275:1307	1003282	1	True				
ANR	1003295	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , Pn )"		1003282	0					
ANR	1003296	Callee	DEFINE_CMD_DESCRIPTOR		1003282	0					
ANR	1003297	Identifier	DEFINE_CMD_DESCRIPTOR		1003282	0					
ANR	1003298	ArgumentList	core		1003282	1					
ANR	1003299	Argument	core		1003282	0					
ANR	1003300	Identifier	core		1003282	0					
ANR	1003301	Argument	Pn		1003282	1					
ANR	1003302	Identifier	Pn		1003282	0					
ANR	1003303	ReturnType	static void		1003282	1					
ANR	1003304	Identifier	cmd_project_init		1003282	2					
ANR	1003305	ParameterList	RCore * core		1003282	3					
ANR	1003306	Parameter	RCore * core	38:29:1225:1235	1003282	0	True				
ANR	1003307	ParameterType	RCore *		1003282	0					
ANR	1003308	Identifier	core		1003282	1					
ANR	1003309	CFGEntryNode	ENTRY		1003282		True				
ANR	1003310	CFGExitNode	EXIT		1003282		True				
ANR	1003311	Symbol	P		1003282						
ANR	1003312	Symbol	core		1003282						
ANR	1003313	Symbol	Pn		1003282						
ANR	1003314	Function	cmd_project	43:0:1312:6050							
ANR	1003315	FunctionDef	"cmd_project (void * data , const char * input)"		1003314	0					
ANR	1003316	CompoundStatement		43:54:1366:6050	1003314	0					
ANR	1003317	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	44:1:1369:1397	1003314	0	True				
ANR	1003318	IdentifierDecl	* core = ( RCore * ) data		1003314	0					
ANR	1003319	IdentifierDeclType	RCore *		1003314	0					
ANR	1003320	Identifier	core		1003314	1					
ANR	1003321	AssignmentExpression	* core = ( RCore * ) data		1003314	2		=			
ANR	1003322	Identifier	core		1003314	0					
ANR	1003323	CastExpression	( RCore * ) data		1003314	1					
ANR	1003324	CastTarget	RCore *		1003314	0					
ANR	1003325	Identifier	data		1003314	1					
ANR	1003326	IdentifierDeclStatement	"const char * file , * arg ;"	45:1:1400:1422	1003314	1	True				
ANR	1003327	IdentifierDecl	* file		1003314	0					
ANR	1003328	IdentifierDeclType	const char *		1003314	0					
ANR	1003329	Identifier	file		1003314	1					
ANR	1003330	IdentifierDecl	* arg		1003314	1					
ANR	1003331	IdentifierDeclType	const char *		1003314	0					
ANR	1003332	Identifier	arg		1003314	1					
ANR	1003333	IdentifierDeclStatement	"const char * fileproject = r_config_get ( core -> config , ""prj.name"" ) ;"	46:1:1425:1490	1003314	2	True				
ANR	1003334	IdentifierDecl	"* fileproject = r_config_get ( core -> config , ""prj.name"" )"		1003314	0					
ANR	1003335	IdentifierDeclType	const char *		1003314	0					
ANR	1003336	Identifier	fileproject		1003314	1					
ANR	1003337	AssignmentExpression	"* fileproject = r_config_get ( core -> config , ""prj.name"" )"		1003314	2		=			
ANR	1003338	Identifier	fileproject		1003314	0					
ANR	1003339	CallExpression	"r_config_get ( core -> config , ""prj.name"" )"		1003314	1					
ANR	1003340	Callee	r_config_get		1003314	0					
ANR	1003341	Identifier	r_config_get		1003314	0					
ANR	1003342	ArgumentList	core -> config		1003314	1					
ANR	1003343	Argument	core -> config		1003314	0					
ANR	1003344	PtrMemberAccess	core -> config		1003314	0					
ANR	1003345	Identifier	core		1003314	0					
ANR	1003346	Identifier	config		1003314	1					
ANR	1003347	Argument	"""prj.name"""		1003314	1					
ANR	1003348	PrimaryExpression	"""prj.name"""		1003314	0					
ANR	1003349	IdentifierDeclStatement	char * str = NULL ;	47:1:1493:1509	1003314	3	True				
ANR	1003350	IdentifierDecl	* str = NULL		1003314	0					
ANR	1003351	IdentifierDeclType	char *		1003314	0					
ANR	1003352	Identifier	str		1003314	1					
ANR	1003353	AssignmentExpression	* str = NULL		1003314	2		=			
ANR	1003354	Identifier	NULL		1003314	0					
ANR	1003355	Identifier	NULL		1003314	1					
ANR	1003356	IfStatement	if ( ! input )		1003314	4					
ANR	1003357	Condition	! input	49:5:1517:1522	1003314	0	True				
ANR	1003358	UnaryOperationExpression	! input		1003314	0					
ANR	1003359	UnaryOperator	!		1003314	0					
ANR	1003360	Identifier	input		1003314	1					
ANR	1003361	CompoundStatement		7:13:158:158	1003314	1					
ANR	1003362	ReturnStatement	return false ;	50:2:1529:1541	1003314	0	True				
ANR	1003363	Identifier	false		1003314	0					
ANR	1003364	ExpressionStatement	str = strdup ( fileproject )	52:1:1547:1573	1003314	5	True				
ANR	1003365	AssignmentExpression	str = strdup ( fileproject )		1003314	0		=			
ANR	1003366	Identifier	str		1003314	0					
ANR	1003367	CallExpression	strdup ( fileproject )		1003314	1					
ANR	1003368	Callee	strdup		1003314	0					
ANR	1003369	Identifier	strdup		1003314	0					
ANR	1003370	ArgumentList	fileproject		1003314	1					
ANR	1003371	Argument	fileproject		1003314	0					
ANR	1003372	Identifier	fileproject		1003314	0					
ANR	1003373	ExpressionStatement	"arg = strchr ( input , ' ' )"	53:1:1576:1601	1003314	6	True				
ANR	1003374	AssignmentExpression	"arg = strchr ( input , ' ' )"		1003314	0		=			
ANR	1003375	Identifier	arg		1003314	0					
ANR	1003376	CallExpression	"strchr ( input , ' ' )"		1003314	1					
ANR	1003377	Callee	strchr		1003314	0					
ANR	1003378	Identifier	strchr		1003314	0					
ANR	1003379	ArgumentList	input		1003314	1					
ANR	1003380	Argument	input		1003314	0					
ANR	1003381	Identifier	input		1003314	0					
ANR	1003382	Argument	' '		1003314	1					
ANR	1003383	PrimaryExpression	' '		1003314	0					
ANR	1003384	IfStatement	if ( arg )		1003314	7					
ANR	1003385	Condition	arg	54:5:1608:1610	1003314	0	True				
ANR	1003386	Identifier	arg		1003314	0					
ANR	1003387	CompoundStatement		12:10:246:246	1003314	1					
ANR	1003388	ExpressionStatement	arg ++	55:2:1617:1622	1003314	0	True				
ANR	1003389	PostIncDecOperationExpression	arg ++		1003314	0					
ANR	1003390	Identifier	arg		1003314	0					
ANR	1003391	IncDec	++		1003314	1					
ANR	1003392	ElseStatement	else		1003314	0					
ANR	1003393	CompoundStatement		14:8:265:265	1003314	0					
ANR	1003394	IfStatement	if ( * input )		1003314	0					
ANR	1003395	Condition	* input	57:6:1640:1645	1003314	0	True				
ANR	1003396	UnaryOperationExpression	* input		1003314	0					
ANR	1003397	UnaryOperator	*		1003314	0					
ANR	1003398	Identifier	input		1003314	1					
ANR	1003399	CompoundStatement		15:14:281:281	1003314	1					
ANR	1003400	ExpressionStatement	arg = input + 1	58:3:1653:1668	1003314	0	True				
ANR	1003401	AssignmentExpression	arg = input + 1		1003314	0		=			
ANR	1003402	Identifier	arg		1003314	0					
ANR	1003403	AdditiveExpression	input + 1		1003314	1		+			
ANR	1003404	Identifier	input		1003314	0					
ANR	1003405	PrimaryExpression	1		1003314	1					
ANR	1003406	IfStatement	if ( * arg == '&' )		1003314	1					
ANR	1003407	Condition	* arg == '&'	59:7:1677:1687	1003314	0	True				
ANR	1003408	EqualityExpression	* arg == '&'		1003314	0		==			
ANR	1003409	UnaryOperationExpression	* arg		1003314	0					
ANR	1003410	UnaryOperator	*		1003314	0					
ANR	1003411	Identifier	arg		1003314	1					
ANR	1003412	PrimaryExpression	'&'		1003314	1					
ANR	1003413	CompoundStatement		17:20:323:323	1003314	1					
ANR	1003414	ExpressionStatement	arg ++	60:4:1696:1701	1003314	0	True				
ANR	1003415	PostIncDecOperationExpression	arg ++		1003314	0					
ANR	1003416	Identifier	arg		1003314	0					
ANR	1003417	IncDec	++		1003314	1					
ANR	1003418	ExpressionStatement	file = arg	64:1:1716:1726	1003314	8	True				
ANR	1003419	AssignmentExpression	file = arg		1003314	0		=			
ANR	1003420	Identifier	file		1003314	0					
ANR	1003421	Identifier	arg		1003314	1					
ANR	1003422	SwitchStatement	switch ( input [ 0 ] )		1003314	9					
ANR	1003423	Condition	input [ 0 ]	65:9:1737:1744	1003314	0	True				
ANR	1003424	ArrayIndexing	input [ 0 ]		1003314	0					
ANR	1003425	Identifier	input		1003314	0					
ANR	1003426	PrimaryExpression	0		1003314	1					
ANR	1003427	CompoundStatement		23:19:380:380	1003314	1					
ANR	1003428	Label	case 'c' :	66:1:1750:1758	1003314	0	True				
ANR	1003429	IfStatement	if ( input [ 1 ] == ' ' )		1003314	1					
ANR	1003430	Condition	input [ 1 ] == ' '	67:6:1766:1780	1003314	0	True				
ANR	1003431	EqualityExpression	input [ 1 ] == ' '		1003314	0		==			
ANR	1003432	ArrayIndexing	input [ 1 ]		1003314	0					
ANR	1003433	Identifier	input		1003314	0					
ANR	1003434	PrimaryExpression	1		1003314	1					
ANR	1003435	PrimaryExpression	' '		1003314	1					
ANR	1003436	CompoundStatement		25:23:416:416	1003314	1					
ANR	1003437	ExpressionStatement	"r_core_project_cat ( core , input + 2 )"	68:3:1788:1824	1003314	0	True				
ANR	1003438	CallExpression	"r_core_project_cat ( core , input + 2 )"		1003314	0					
ANR	1003439	Callee	r_core_project_cat		1003314	0					
ANR	1003440	Identifier	r_core_project_cat		1003314	0					
ANR	1003441	ArgumentList	core		1003314	1					
ANR	1003442	Argument	core		1003314	0					
ANR	1003443	Identifier	core		1003314	0					
ANR	1003444	Argument	input + 2		1003314	1					
ANR	1003445	AdditiveExpression	input + 2		1003314	0		+			
ANR	1003446	Identifier	input		1003314	0					
ANR	1003447	PrimaryExpression	2		1003314	1					
ANR	1003448	ElseStatement	else		1003314	0					
ANR	1003449	CompoundStatement		27:9:468:468	1003314	0					
ANR	1003450	ExpressionStatement	"eprintf ( ""Usage: Pc [prjname]\\n"" )"	70:3:1840:1873	1003314	0	True				
ANR	1003451	CallExpression	"eprintf ( ""Usage: Pc [prjname]\\n"" )"		1003314	0					
ANR	1003452	Callee	eprintf		1003314	0					
ANR	1003453	Identifier	eprintf		1003314	0					
ANR	1003454	ArgumentList	"""Usage: Pc [prjname]\\n"""		1003314	1					
ANR	1003455	Argument	"""Usage: Pc [prjname]\\n"""		1003314	0					
ANR	1003456	PrimaryExpression	"""Usage: Pc [prjname]\\n"""		1003314	0					
ANR	1003457	BreakStatement	break ;	72:2:1881:1886	1003314	2	True				
ANR	1003458	Label	case 'o' :	73:1:1889:1897	1003314	3	True				
ANR	1003459	IfStatement	if ( input [ 1 ] == '&' )		1003314	4					
ANR	1003460	Condition	input [ 1 ] == '&'	75:6:1940:1954	1003314	0	True				
ANR	1003461	EqualityExpression	input [ 1 ] == '&'		1003314	0		==			
ANR	1003462	ArrayIndexing	input [ 1 ]		1003314	0					
ANR	1003463	Identifier	input		1003314	0					
ANR	1003464	PrimaryExpression	1		1003314	1					
ANR	1003465	PrimaryExpression	'&'		1003314	1					
ANR	1003466	CompoundStatement		33:23:590:590	1003314	1					
ANR	1003467	ExpressionStatement	"r_core_cmdf ( core , ""& Po %s"" , file )"	76:3:1962:1997	1003314	0	True				
ANR	1003468	CallExpression	"r_core_cmdf ( core , ""& Po %s"" , file )"		1003314	0					
ANR	1003469	Callee	r_core_cmdf		1003314	0					
ANR	1003470	Identifier	r_core_cmdf		1003314	0					
ANR	1003471	ArgumentList	core		1003314	1					
ANR	1003472	Argument	core		1003314	0					
ANR	1003473	Identifier	core		1003314	0					
ANR	1003474	Argument	"""& Po %s"""		1003314	1					
ANR	1003475	PrimaryExpression	"""& Po %s"""		1003314	0					
ANR	1003476	Argument	file		1003314	2					
ANR	1003477	Identifier	file		1003314	0					
ANR	1003478	ElseStatement	else		1003314	0					
ANR	1003479	IfStatement	if ( input [ 1 ] )		1003314	0					
ANR	1003480	Condition	input [ 1 ]	77:13:2012:2019	1003314	0	True				
ANR	1003481	ArrayIndexing	input [ 1 ]		1003314	0					
ANR	1003482	Identifier	input		1003314	0					
ANR	1003483	PrimaryExpression	1		1003314	1					
ANR	1003484	CompoundStatement		35:23:655:655	1003314	1					
ANR	1003485	ExpressionStatement	"r_core_project_open ( core , file , false )"	78:3:2027:2066	1003314	0	True				
ANR	1003486	CallExpression	"r_core_project_open ( core , file , false )"		1003314	0					
ANR	1003487	Callee	r_core_project_open		1003314	0					
ANR	1003488	Identifier	r_core_project_open		1003314	0					
ANR	1003489	ArgumentList	core		1003314	1					
ANR	1003490	Argument	core		1003314	0					
ANR	1003491	Identifier	core		1003314	0					
ANR	1003492	Argument	file		1003314	1					
ANR	1003493	Identifier	file		1003314	0					
ANR	1003494	Argument	false		1003314	2					
ANR	1003495	Identifier	false		1003314	0					
ANR	1003496	ElseStatement	else		1003314	0					
ANR	1003497	CompoundStatement		37:9:710:710	1003314	0					
ANR	1003498	IfStatement	if ( file && * file )		1003314	0					
ANR	1003499	Condition	file && * file	80:7:2086:2098	1003314	0	True				
ANR	1003500	AndExpression	file && * file		1003314	0		&&			
ANR	1003501	Identifier	file		1003314	0					
ANR	1003502	UnaryOperationExpression	* file		1003314	1					
ANR	1003503	UnaryOperator	*		1003314	0					
ANR	1003504	Identifier	file		1003314	1					
ANR	1003505	CompoundStatement		38:22:734:734	1003314	1					
ANR	1003506	ExpressionStatement	r_cons_println ( file )	81:4:2107:2128	1003314	0	True				
ANR	1003507	CallExpression	r_cons_println ( file )		1003314	0					
ANR	1003508	Callee	r_cons_println		1003314	0					
ANR	1003509	Identifier	r_cons_println		1003314	0					
ANR	1003510	ArgumentList	file		1003314	1					
ANR	1003511	Argument	file		1003314	0					
ANR	1003512	Identifier	file		1003314	0					
ANR	1003513	BreakStatement	break ;	84:2:2141:2146	1003314	5	True				
ANR	1003514	Label	case 'd' :	85:1:2149:2157	1003314	6	True				
ANR	1003515	Label	case '-' :	86:1:2160:2168	1003314	7	True				
ANR	1003516	ExpressionStatement	"r_core_project_delete ( core , file )"	87:2:2172:2206	1003314	8	True				
ANR	1003517	CallExpression	"r_core_project_delete ( core , file )"		1003314	0					
ANR	1003518	Callee	r_core_project_delete		1003314	0					
ANR	1003519	Identifier	r_core_project_delete		1003314	0					
ANR	1003520	ArgumentList	core		1003314	1					
ANR	1003521	Argument	core		1003314	0					
ANR	1003522	Identifier	core		1003314	0					
ANR	1003523	Argument	file		1003314	1					
ANR	1003524	Identifier	file		1003314	0					
ANR	1003525	BreakStatement	break ;	88:2:2210:2215	1003314	9	True				
ANR	1003526	Label	case 's' :	89:1:2218:2226	1003314	10	True				
ANR	1003527	IfStatement	if ( ! file || ! file [ 0 ] )		1003314	11					
ANR	1003528	Condition	! file || ! file [ 0 ]	90:6:2234:2250	1003314	0	True				
ANR	1003529	OrExpression	! file || ! file [ 0 ]		1003314	0		||			
ANR	1003530	UnaryOperationExpression	! file		1003314	0					
ANR	1003531	UnaryOperator	!		1003314	0					
ANR	1003532	Identifier	file		1003314	1					
ANR	1003533	UnaryOperationExpression	! file [ 0 ]		1003314	1					
ANR	1003534	UnaryOperator	!		1003314	0					
ANR	1003535	ArrayIndexing	file [ 0 ]		1003314	1					
ANR	1003536	Identifier	file		1003314	0					
ANR	1003537	PrimaryExpression	0		1003314	1					
ANR	1003538	CompoundStatement		48:25:886:886	1003314	1					
ANR	1003539	ExpressionStatement	file = str	91:3:2309:2319	1003314	0	True				
ANR	1003540	AssignmentExpression	file = str		1003314	0		=			
ANR	1003541	Identifier	file		1003314	0					
ANR	1003542	Identifier	str		1003314	1					
ANR	1003543	IfStatement	"if ( r_core_project_save ( core , file ) )"		1003314	12					
ANR	1003544	Condition	"r_core_project_save ( core , file )"	93:6:2331:2362	1003314	0	True				
ANR	1003545	CallExpression	"r_core_project_save ( core , file )"		1003314	0					
ANR	1003546	Callee	r_core_project_save		1003314	0					
ANR	1003547	Identifier	r_core_project_save		1003314	0					
ANR	1003548	ArgumentList	core		1003314	1					
ANR	1003549	Argument	core		1003314	0					
ANR	1003550	Identifier	core		1003314	0					
ANR	1003551	Argument	file		1003314	1					
ANR	1003552	Identifier	file		1003314	0					
ANR	1003553	CompoundStatement		51:40:998:998	1003314	1					
ANR	1003554	ExpressionStatement	r_cons_println ( file )	94:3:2370:2391	1003314	0	True				
ANR	1003555	CallExpression	r_cons_println ( file )		1003314	0					
ANR	1003556	Callee	r_cons_println		1003314	0					
ANR	1003557	Identifier	r_cons_println		1003314	0					
ANR	1003558	ArgumentList	file		1003314	1					
ANR	1003559	Argument	file		1003314	0					
ANR	1003560	Identifier	file		1003314	0					
ANR	1003561	BreakStatement	break ;	96:2:2399:2404	1003314	13	True				
ANR	1003562	Label	case 'S' :	97:1:2407:2415	1003314	14	True				
ANR	1003563	IfStatement	if ( input [ 1 ] == ' ' )		1003314	15					
ANR	1003564	Condition	input [ 1 ] == ' '	98:6:2423:2437	1003314	0	True				
ANR	1003565	EqualityExpression	input [ 1 ] == ' '		1003314	0		==			
ANR	1003566	ArrayIndexing	input [ 1 ]		1003314	0					
ANR	1003567	Identifier	input		1003314	0					
ANR	1003568	PrimaryExpression	1		1003314	1					
ANR	1003569	PrimaryExpression	' '		1003314	1					
ANR	1003570	CompoundStatement		56:23:1073:1073	1003314	1					
ANR	1003571	ExpressionStatement	"r_core_project_save_rdb ( core , input + 2 , R_CORE_PRJ_ALL )"	99:3:2445:2502	1003314	0	True				
ANR	1003572	CallExpression	"r_core_project_save_rdb ( core , input + 2 , R_CORE_PRJ_ALL )"		1003314	0					
ANR	1003573	Callee	r_core_project_save_rdb		1003314	0					
ANR	1003574	Identifier	r_core_project_save_rdb		1003314	0					
ANR	1003575	ArgumentList	core		1003314	1					
ANR	1003576	Argument	core		1003314	0					
ANR	1003577	Identifier	core		1003314	0					
ANR	1003578	Argument	input + 2		1003314	1					
ANR	1003579	AdditiveExpression	input + 2		1003314	0		+			
ANR	1003580	Identifier	input		1003314	0					
ANR	1003581	PrimaryExpression	2		1003314	1					
ANR	1003582	Argument	R_CORE_PRJ_ALL		1003314	2					
ANR	1003583	Identifier	R_CORE_PRJ_ALL		1003314	0					
ANR	1003584	ElseStatement	else		1003314	0					
ANR	1003585	CompoundStatement		58:9:1146:1146	1003314	0					
ANR	1003586	ExpressionStatement	"eprintf ( ""Usage: PS [file]\\n"" )"	101:3:2518:2548	1003314	0	True				
ANR	1003587	CallExpression	"eprintf ( ""Usage: PS [file]\\n"" )"		1003314	0					
ANR	1003588	Callee	eprintf		1003314	0					
ANR	1003589	Identifier	eprintf		1003314	0					
ANR	1003590	ArgumentList	"""Usage: PS [file]\\n"""		1003314	1					
ANR	1003591	Argument	"""Usage: PS [file]\\n"""		1003314	0					
ANR	1003592	PrimaryExpression	"""Usage: PS [file]\\n"""		1003314	0					
ANR	1003593	BreakStatement	break ;	103:2:2556:2561	1003314	16	True				
ANR	1003594	Label	case 'n' :	104:1:2564:2572	1003314	17	True				
ANR	1003595	IfStatement	if ( input [ 1 ] == '?' )		1003314	18					
ANR	1003596	Condition	input [ 1 ] == '?'	105:6:2588:2602	1003314	0	True				
ANR	1003597	EqualityExpression	input [ 1 ] == '?'		1003314	0		==			
ANR	1003598	ArrayIndexing	input [ 1 ]		1003314	0					
ANR	1003599	Identifier	input		1003314	0					
ANR	1003600	PrimaryExpression	1		1003314	1					
ANR	1003601	PrimaryExpression	'?'		1003314	1					
ANR	1003602	CompoundStatement		63:23:1238:1238	1003314	1					
ANR	1003603	ExpressionStatement	"r_core_cmd_help ( core , help_msg_Pn )"	106:3:2610:2645	1003314	0	True				
ANR	1003604	CallExpression	"r_core_cmd_help ( core , help_msg_Pn )"		1003314	0					
ANR	1003605	Callee	r_core_cmd_help		1003314	0					
ANR	1003606	Identifier	r_core_cmd_help		1003314	0					
ANR	1003607	ArgumentList	core		1003314	1					
ANR	1003608	Argument	core		1003314	0					
ANR	1003609	Identifier	core		1003314	0					
ANR	1003610	Argument	help_msg_Pn		1003314	1					
ANR	1003611	Identifier	help_msg_Pn		1003314	0					
ANR	1003612	ElseStatement	else		1003314	0					
ANR	1003613	IfStatement	if ( ! fileproject || ! * fileproject )		1003314	0					
ANR	1003614	Condition	! fileproject || ! * fileproject	107:13:2660:2688	1003314	0	True				
ANR	1003615	OrExpression	! fileproject || ! * fileproject		1003314	0		||			
ANR	1003616	UnaryOperationExpression	! fileproject		1003314	0					
ANR	1003617	UnaryOperator	!		1003314	0					
ANR	1003618	Identifier	fileproject		1003314	1					
ANR	1003619	UnaryOperationExpression	! * fileproject		1003314	1					
ANR	1003620	UnaryOperator	!		1003314	0					
ANR	1003621	UnaryOperationExpression	* fileproject		1003314	1					
ANR	1003622	UnaryOperator	*		1003314	0					
ANR	1003623	Identifier	fileproject		1003314	1					
ANR	1003624	CompoundStatement		65:44:1324:1324	1003314	1					
ANR	1003625	ExpressionStatement	"eprintf ( ""No project\\n"" )"	108:3:2696:2720	1003314	0	True				
ANR	1003626	CallExpression	"eprintf ( ""No project\\n"" )"		1003314	0					
ANR	1003627	Callee	eprintf		1003314	0					
ANR	1003628	Identifier	eprintf		1003314	0					
ANR	1003629	ArgumentList	"""No project\\n"""		1003314	1					
ANR	1003630	Argument	"""No project\\n"""		1003314	0					
ANR	1003631	PrimaryExpression	"""No project\\n"""		1003314	0					
ANR	1003632	ElseStatement	else		1003314	0					
ANR	1003633	CompoundStatement		67:9:1364:1364	1003314	0					
ANR	1003634	SwitchStatement	switch ( input [ 1 ] )		1003314	0					
ANR	1003635	Condition	input [ 1 ]	110:11:2744:2751	1003314	0	True				
ANR	1003636	ArrayIndexing	input [ 1 ]		1003314	0					
ANR	1003637	Identifier	input		1003314	0					
ANR	1003638	PrimaryExpression	1		1003314	1					
ANR	1003639	CompoundStatement		68:21:1387:1387	1003314	1					
ANR	1003640	Label	case '-' :	111:3:2759:2767	1003314	0	True				
ANR	1003641	CompoundStatement		72:4:1469:1506	1003314	1					
ANR	1003642	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( str , ""w"" ) ;"	114:4:2836:2873	1003314	0	True				
ANR	1003643	IdentifierDecl	"* fd = r_sandbox_fopen ( str , ""w"" )"		1003314	0					
ANR	1003644	IdentifierDeclType	FILE *		1003314	0					
ANR	1003645	Identifier	fd		1003314	1					
ANR	1003646	AssignmentExpression	"* fd = r_sandbox_fopen ( str , ""w"" )"		1003314	2		=			
ANR	1003647	Identifier	fd		1003314	0					
ANR	1003648	CallExpression	"r_sandbox_fopen ( str , ""w"" )"		1003314	1					
ANR	1003649	Callee	r_sandbox_fopen		1003314	0					
ANR	1003650	Identifier	r_sandbox_fopen		1003314	0					
ANR	1003651	ArgumentList	str		1003314	1					
ANR	1003652	Argument	str		1003314	0					
ANR	1003653	Identifier	str		1003314	0					
ANR	1003654	Argument	"""w"""		1003314	1					
ANR	1003655	PrimaryExpression	"""w"""		1003314	0					
ANR	1003656	IfStatement	if ( ! fd )		1003314	1					
ANR	1003657	Condition	! fd	115:8:2883:2885	1003314	0	True				
ANR	1003658	UnaryOperationExpression	! fd		1003314	0					
ANR	1003659	UnaryOperator	!		1003314	0					
ANR	1003660	Identifier	fd		1003314	1					
ANR	1003661	CompoundStatement		73:13:1521:1521	1003314	1					
ANR	1003662	ExpressionStatement	"eprintf ( ""Cannot open %s\\n"" , str )"	116:5:2895:2928	1003314	0	True				
ANR	1003663	CallExpression	"eprintf ( ""Cannot open %s\\n"" , str )"		1003314	0					
ANR	1003664	Callee	eprintf		1003314	0					
ANR	1003665	Identifier	eprintf		1003314	0					
ANR	1003666	ArgumentList	"""Cannot open %s\\n"""		1003314	1					
ANR	1003667	Argument	"""Cannot open %s\\n"""		1003314	0					
ANR	1003668	PrimaryExpression	"""Cannot open %s\\n"""		1003314	0					
ANR	1003669	Argument	str		1003314	1					
ANR	1003670	Identifier	str		1003314	0					
ANR	1003671	ElseStatement	else		1003314	0					
ANR	1003672	CompoundStatement		78:5:1689:1700	1003314	0					
ANR	1003673	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	118:5:2948:3005	1003314	0	True				
ANR	1003674	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1003675	IdentifierDeclType	char *		1003314	0					
ANR	1003676	Identifier	str		1003314	1					
ANR	1003677	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1003678	Identifier	str		1003314	0					
ANR	1003679	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1003680	Callee	r_core_project_notes_file		1003314	0					
ANR	1003681	Identifier	r_core_project_notes_file		1003314	0					
ANR	1003682	ArgumentList	core		1003314	1					
ANR	1003683	Argument	core		1003314	0					
ANR	1003684	Identifier	core		1003314	0					
ANR	1003685	Argument	fileproject		1003314	1					
ANR	1003686	Identifier	fileproject		1003314	0					
ANR	1003687	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	119:5:3012:3049	1003314	1	True				
ANR	1003688	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		1003314	0					
ANR	1003689	IdentifierDeclType	char *		1003314	0					
ANR	1003690	Identifier	data		1003314	1					
ANR	1003691	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		1003314	2		=			
ANR	1003692	Identifier	data		1003314	0					
ANR	1003693	CallExpression	"r_file_slurp ( str , NULL )"		1003314	1					
ANR	1003694	Callee	r_file_slurp		1003314	0					
ANR	1003695	Identifier	r_file_slurp		1003314	0					
ANR	1003696	ArgumentList	str		1003314	1					
ANR	1003697	Argument	str		1003314	0					
ANR	1003698	Identifier	str		1003314	0					
ANR	1003699	Argument	NULL		1003314	1					
ANR	1003700	Identifier	NULL		1003314	0					
ANR	1003701	IdentifierDeclStatement	int del = 0 ;	120:5:3056:3067	1003314	2	True				
ANR	1003702	IdentifierDecl	del = 0		1003314	0					
ANR	1003703	IdentifierDeclType	int		1003314	0					
ANR	1003704	Identifier	del		1003314	1					
ANR	1003705	AssignmentExpression	del = 0		1003314	2		=			
ANR	1003706	Identifier	del		1003314	0					
ANR	1003707	PrimaryExpression	0		1003314	1					
ANR	1003708	IfStatement	if ( data )		1003314	3					
ANR	1003709	Condition	data	121:9:3078:3081	1003314	0	True				
ANR	1003710	Identifier	data		1003314	0					
ANR	1003711	CompoundStatement		80:6:1725:1739	1003314	1					
ANR	1003712	IdentifierDeclStatement	"char * ptr , * nl ;"	122:6:3092:3106	1003314	0	True				
ANR	1003713	IdentifierDecl	* ptr		1003314	0					
ANR	1003714	IdentifierDeclType	char *		1003314	0					
ANR	1003715	Identifier	ptr		1003314	1					
ANR	1003716	IdentifierDecl	* nl		1003314	1					
ANR	1003717	IdentifierDeclType	char *		1003314	0					
ANR	1003718	Identifier	nl		1003314	1					
ANR	1003719	ForStatement	for ( ptr = data ; ptr ; ptr = nl )		1003314	1					
ANR	1003720	ForInit	ptr = data ;	123:11:3119:3129	1003314	0	True				
ANR	1003721	AssignmentExpression	ptr = data		1003314	0		=			
ANR	1003722	Identifier	ptr		1003314	0					
ANR	1003723	Identifier	data		1003314	1					
ANR	1003724	Condition	ptr	123:23:3131:3133	1003314	1	True				
ANR	1003725	Identifier	ptr		1003314	0					
ANR	1003726	AssignmentExpression	ptr = nl	123:28:3136:3143	1003314	2	True	=			
ANR	1003727	Identifier	ptr		1003314	0					
ANR	1003728	Identifier	nl		1003314	1					
ANR	1003729	CompoundStatement		81:38:1779:1779	1003314	3					
ANR	1003730	ExpressionStatement	"nl = strchr ( ptr , '\\n' )"	124:7:3155:3178	1003314	0	True				
ANR	1003731	AssignmentExpression	"nl = strchr ( ptr , '\\n' )"		1003314	0		=			
ANR	1003732	Identifier	nl		1003314	0					
ANR	1003733	CallExpression	"strchr ( ptr , '\\n' )"		1003314	1					
ANR	1003734	Callee	strchr		1003314	0					
ANR	1003735	Identifier	strchr		1003314	0					
ANR	1003736	ArgumentList	ptr		1003314	1					
ANR	1003737	Argument	ptr		1003314	0					
ANR	1003738	Identifier	ptr		1003314	0					
ANR	1003739	Argument	'\\n'		1003314	1					
ANR	1003740	PrimaryExpression	'\\n'		1003314	0					
ANR	1003741	IfStatement	if ( nl )		1003314	1					
ANR	1003742	Condition	nl	125:11:3191:3192	1003314	0	True				
ANR	1003743	Identifier	nl		1003314	0					
ANR	1003744	CompoundStatement		83:15:1828:1828	1003314	1					
ANR	1003745	ExpressionStatement	* nl ++ = 0	126:8:3205:3214	1003314	0	True				
ANR	1003746	AssignmentExpression	* nl ++ = 0		1003314	0		=			
ANR	1003747	UnaryOperationExpression	* nl ++		1003314	0					
ANR	1003748	UnaryOperator	*		1003314	0					
ANR	1003749	PostIncDecOperationExpression	nl ++		1003314	1					
ANR	1003750	Identifier	nl		1003314	0					
ANR	1003751	IncDec	++		1003314	1					
ANR	1003752	PrimaryExpression	0		1003314	1					
ANR	1003753	IfStatement	"if ( strstr ( ptr , input + 2 ) )"		1003314	1					
ANR	1003754	Condition	"strstr ( ptr , input + 2 )"	127:12:3228:3250	1003314	0	True				
ANR	1003755	CallExpression	"strstr ( ptr , input + 2 )"		1003314	0					
ANR	1003756	Callee	strstr		1003314	0					
ANR	1003757	Identifier	strstr		1003314	0					
ANR	1003758	ArgumentList	ptr		1003314	1					
ANR	1003759	Argument	ptr		1003314	0					
ANR	1003760	Identifier	ptr		1003314	0					
ANR	1003761	Argument	input + 2		1003314	1					
ANR	1003762	AdditiveExpression	input + 2		1003314	0		+			
ANR	1003763	Identifier	input		1003314	0					
ANR	1003764	PrimaryExpression	2		1003314	1					
ANR	1003765	CompoundStatement		85:37:1886:1886	1003314	1					
ANR	1003766	ExpressionStatement	del ++	128:9:3264:3269	1003314	0	True				
ANR	1003767	PostIncDecOperationExpression	del ++		1003314	0					
ANR	1003768	Identifier	del		1003314	0					
ANR	1003769	IncDec	++		1003314	1					
ANR	1003770	ElseStatement	else		1003314	0					
ANR	1003771	CompoundStatement		87:15:1919:1919	1003314	0					
ANR	1003772	ExpressionStatement	"fprintf ( fd , ""%s\\n"" , ptr )"	130:9:3297:3322	1003314	0	True				
ANR	1003773	CallExpression	"fprintf ( fd , ""%s\\n"" , ptr )"		1003314	0					
ANR	1003774	Callee	fprintf		1003314	0					
ANR	1003775	Identifier	fprintf		1003314	0					
ANR	1003776	ArgumentList	fd		1003314	1					
ANR	1003777	Argument	fd		1003314	0					
ANR	1003778	Identifier	fd		1003314	0					
ANR	1003779	Argument	"""%s\\n"""		1003314	1					
ANR	1003780	PrimaryExpression	"""%s\\n"""		1003314	0					
ANR	1003781	Argument	ptr		1003314	2					
ANR	1003782	Identifier	ptr		1003314	0					
ANR	1003783	ExpressionStatement	free ( data )	134:6:3357:3368	1003314	2	True				
ANR	1003784	CallExpression	free ( data )		1003314	0					
ANR	1003785	Callee	free		1003314	0					
ANR	1003786	Identifier	free		1003314	0					
ANR	1003787	ArgumentList	data		1003314	1					
ANR	1003788	Argument	data		1003314	0					
ANR	1003789	Identifier	data		1003314	0					
ANR	1003790	IfStatement	if ( del > 0 )		1003314	4					
ANR	1003791	Condition	del > 0	136:9:3386:3392	1003314	0	True				
ANR	1003792	RelationalExpression	del > 0		1003314	0		>			
ANR	1003793	Identifier	del		1003314	0					
ANR	1003794	PrimaryExpression	0		1003314	1					
ANR	1003795	CompoundStatement		94:18:2028:2028	1003314	1					
ANR	1003796	ExpressionStatement	"eprintf ( ""Deleted %d lines\\n"" , del )"	137:6:3403:3438	1003314	0	True				
ANR	1003797	CallExpression	"eprintf ( ""Deleted %d lines\\n"" , del )"		1003314	0					
ANR	1003798	Callee	eprintf		1003314	0					
ANR	1003799	Identifier	eprintf		1003314	0					
ANR	1003800	ArgumentList	"""Deleted %d lines\\n"""		1003314	1					
ANR	1003801	Argument	"""Deleted %d lines\\n"""		1003314	0					
ANR	1003802	PrimaryExpression	"""Deleted %d lines\\n"""		1003314	0					
ANR	1003803	Argument	del		1003314	1					
ANR	1003804	Identifier	del		1003314	0					
ANR	1003805	ExpressionStatement	free ( str )	139:5:3452:3462	1003314	5	True				
ANR	1003806	CallExpression	free ( str )		1003314	0					
ANR	1003807	Callee	free		1003314	0					
ANR	1003808	Identifier	free		1003314	0					
ANR	1003809	ArgumentList	str		1003314	1					
ANR	1003810	Argument	str		1003314	0					
ANR	1003811	Identifier	str		1003314	0					
ANR	1003812	ExpressionStatement	fclose ( fd )	140:5:3469:3480	1003314	6	True				
ANR	1003813	CallExpression	fclose ( fd )		1003314	0					
ANR	1003814	Callee	fclose		1003314	0					
ANR	1003815	Identifier	fclose		1003314	0					
ANR	1003816	ArgumentList	fd		1003314	1					
ANR	1003817	Argument	fd		1003314	0					
ANR	1003818	Identifier	fd		1003314	0					
ANR	1003819	BreakStatement	break ;	143:3:3496:3501	1003314	2	True				
ANR	1003820	Label	case ' ' :	144:3:3506:3514	1003314	3	True				
ANR	1003821	IfStatement	if ( input [ 2 ] == '-' )		1003314	4					
ANR	1003822	Condition	input [ 2 ] == '-'	145:8:3533:3547	1003314	0	True				
ANR	1003823	EqualityExpression	input [ 2 ] == '-'		1003314	0		==			
ANR	1003824	ArrayIndexing	input [ 2 ]		1003314	0					
ANR	1003825	Identifier	input		1003314	0					
ANR	1003826	PrimaryExpression	2		1003314	1					
ANR	1003827	PrimaryExpression	'-'		1003314	1					
ANR	1003828	CompoundStatement		106:5:2283:2345	1003314	1					
ANR	1003829	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	146:5:3557:3614	1003314	0	True				
ANR	1003830	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1003831	IdentifierDeclType	char *		1003314	0					
ANR	1003832	Identifier	str		1003314	1					
ANR	1003833	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1003834	Identifier	str		1003314	0					
ANR	1003835	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1003836	Callee	r_core_project_notes_file		1003314	0					
ANR	1003837	Identifier	r_core_project_notes_file		1003314	0					
ANR	1003838	ArgumentList	core		1003314	1					
ANR	1003839	Argument	core		1003314	0					
ANR	1003840	Identifier	core		1003314	0					
ANR	1003841	Argument	fileproject		1003314	1					
ANR	1003842	Identifier	fileproject		1003314	0					
ANR	1003843	IdentifierDeclStatement	"const char * editor = r_config_get ( core -> config , ""cfg.editor"" ) ;"	148:5:3650:3712	1003314	1	True				
ANR	1003844	IdentifierDecl	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		1003314	0					
ANR	1003845	IdentifierDeclType	const char *		1003314	0					
ANR	1003846	Identifier	editor		1003314	1					
ANR	1003847	AssignmentExpression	"* editor = r_config_get ( core -> config , ""cfg.editor"" )"		1003314	2		=			
ANR	1003848	Identifier	editor		1003314	0					
ANR	1003849	CallExpression	"r_config_get ( core -> config , ""cfg.editor"" )"		1003314	1					
ANR	1003850	Callee	r_config_get		1003314	0					
ANR	1003851	Identifier	r_config_get		1003314	0					
ANR	1003852	ArgumentList	core -> config		1003314	1					
ANR	1003853	Argument	core -> config		1003314	0					
ANR	1003854	PtrMemberAccess	core -> config		1003314	0					
ANR	1003855	Identifier	core		1003314	0					
ANR	1003856	Identifier	config		1003314	1					
ANR	1003857	Argument	"""cfg.editor"""		1003314	1					
ANR	1003858	PrimaryExpression	"""cfg.editor"""		1003314	0					
ANR	1003859	IfStatement	if ( str && * str && editor && * editor )		1003314	2					
ANR	1003860	Condition	str && * str && editor && * editor	149:9:3723:3754	1003314	0	True				
ANR	1003861	AndExpression	str && * str && editor && * editor		1003314	0		&&			
ANR	1003862	Identifier	str		1003314	0					
ANR	1003863	AndExpression	* str && editor && * editor		1003314	1		&&			
ANR	1003864	UnaryOperationExpression	* str		1003314	0					
ANR	1003865	UnaryOperator	*		1003314	0					
ANR	1003866	Identifier	str		1003314	1					
ANR	1003867	AndExpression	editor && * editor		1003314	1		&&			
ANR	1003868	Identifier	editor		1003314	0					
ANR	1003869	UnaryOperationExpression	* editor		1003314	1					
ANR	1003870	UnaryOperator	*		1003314	0					
ANR	1003871	Identifier	editor		1003314	1					
ANR	1003872	CompoundStatement		107:43:2390:2390	1003314	1					
ANR	1003873	ExpressionStatement	"r_sys_cmdf ( ""%s %s"" , editor , str )"	150:6:3765:3798	1003314	0	True				
ANR	1003874	CallExpression	"r_sys_cmdf ( ""%s %s"" , editor , str )"		1003314	0					
ANR	1003875	Callee	r_sys_cmdf		1003314	0					
ANR	1003876	Identifier	r_sys_cmdf		1003314	0					
ANR	1003877	ArgumentList	"""%s %s"""		1003314	1					
ANR	1003878	Argument	"""%s %s"""		1003314	0					
ANR	1003879	PrimaryExpression	"""%s %s"""		1003314	0					
ANR	1003880	Argument	editor		1003314	1					
ANR	1003881	Identifier	editor		1003314	0					
ANR	1003882	Argument	str		1003314	2					
ANR	1003883	Identifier	str		1003314	0					
ANR	1003884	ElseStatement	else		1003314	0					
ANR	1003885	CompoundStatement		109:12:2445:2445	1003314	0					
ANR	1003886	ExpressionStatement	"eprintf ( ""No cfg.editor configured\\n"" )"	152:6:3820:3858	1003314	0	True				
ANR	1003887	CallExpression	"eprintf ( ""No cfg.editor configured\\n"" )"		1003314	0					
ANR	1003888	Callee	eprintf		1003314	0					
ANR	1003889	Identifier	eprintf		1003314	0					
ANR	1003890	ArgumentList	"""No cfg.editor configured\\n"""		1003314	1					
ANR	1003891	Argument	"""No cfg.editor configured\\n"""		1003314	0					
ANR	1003892	PrimaryExpression	"""No cfg.editor configured\\n"""		1003314	0					
ANR	1003893	ExpressionStatement	free ( str )	154:5:3872:3882	1003314	3	True				
ANR	1003894	CallExpression	free ( str )		1003314	0					
ANR	1003895	Callee	free		1003314	0					
ANR	1003896	Identifier	free		1003314	0					
ANR	1003897	ArgumentList	str		1003314	1					
ANR	1003898	Argument	str		1003314	0					
ANR	1003899	Identifier	str		1003314	0					
ANR	1003900	ElseStatement	else		1003314	0					
ANR	1003901	CompoundStatement		118:5:2747:2784	1003314	0					
ANR	1003902	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	158:5:4006:4063	1003314	0	True				
ANR	1003903	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1003904	IdentifierDeclType	char *		1003314	0					
ANR	1003905	Identifier	str		1003314	1					
ANR	1003906	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1003907	Identifier	str		1003314	0					
ANR	1003908	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1003909	Callee	r_core_project_notes_file		1003314	0					
ANR	1003910	Identifier	r_core_project_notes_file		1003314	0					
ANR	1003911	ArgumentList	core		1003314	1					
ANR	1003912	Argument	core		1003314	0					
ANR	1003913	Identifier	core		1003314	0					
ANR	1003914	Argument	fileproject		1003314	1					
ANR	1003915	Identifier	fileproject		1003314	0					
ANR	1003916	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	159:5:4070:4107	1003314	1	True				
ANR	1003917	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		1003314	0					
ANR	1003918	IdentifierDeclType	char *		1003314	0					
ANR	1003919	Identifier	data		1003314	1					
ANR	1003920	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		1003314	2		=			
ANR	1003921	Identifier	data		1003314	0					
ANR	1003922	CallExpression	"r_file_slurp ( str , NULL )"		1003314	1					
ANR	1003923	Callee	r_file_slurp		1003314	0					
ANR	1003924	Identifier	r_file_slurp		1003314	0					
ANR	1003925	ArgumentList	str		1003314	1					
ANR	1003926	Argument	str		1003314	0					
ANR	1003927	Identifier	str		1003314	0					
ANR	1003928	Argument	NULL		1003314	1					
ANR	1003929	Identifier	NULL		1003314	0					
ANR	1003930	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( str , ""a"" ) ;"	160:5:4114:4151	1003314	2	True				
ANR	1003931	IdentifierDecl	"* fd = r_sandbox_fopen ( str , ""a"" )"		1003314	0					
ANR	1003932	IdentifierDeclType	FILE *		1003314	0					
ANR	1003933	Identifier	fd		1003314	1					
ANR	1003934	AssignmentExpression	"* fd = r_sandbox_fopen ( str , ""a"" )"		1003314	2		=			
ANR	1003935	Identifier	fd		1003314	0					
ANR	1003936	CallExpression	"r_sandbox_fopen ( str , ""a"" )"		1003314	1					
ANR	1003937	Callee	r_sandbox_fopen		1003314	0					
ANR	1003938	Identifier	r_sandbox_fopen		1003314	0					
ANR	1003939	ArgumentList	str		1003314	1					
ANR	1003940	Argument	str		1003314	0					
ANR	1003941	Identifier	str		1003314	0					
ANR	1003942	Argument	"""a"""		1003314	1					
ANR	1003943	PrimaryExpression	"""a"""		1003314	0					
ANR	1003944	IfStatement	if ( fd )		1003314	3					
ANR	1003945	Condition	fd	161:9:4162:4163	1003314	0	True				
ANR	1003946	Identifier	fd		1003314	0					
ANR	1003947	CompoundStatement		119:13:2799:2799	1003314	1					
ANR	1003948	ExpressionStatement	"fprintf ( fd , ""%s\\n"" , input + 2 )"	162:6:4174:4205	1003314	0	True				
ANR	1003949	CallExpression	"fprintf ( fd , ""%s\\n"" , input + 2 )"		1003314	0					
ANR	1003950	Callee	fprintf		1003314	0					
ANR	1003951	Identifier	fprintf		1003314	0					
ANR	1003952	ArgumentList	fd		1003314	1					
ANR	1003953	Argument	fd		1003314	0					
ANR	1003954	Identifier	fd		1003314	0					
ANR	1003955	Argument	"""%s\\n"""		1003314	1					
ANR	1003956	PrimaryExpression	"""%s\\n"""		1003314	0					
ANR	1003957	Argument	input + 2		1003314	2					
ANR	1003958	AdditiveExpression	input + 2		1003314	0		+			
ANR	1003959	Identifier	input		1003314	0					
ANR	1003960	PrimaryExpression	2		1003314	1					
ANR	1003961	ExpressionStatement	fclose ( fd )	163:6:4213:4224	1003314	1	True				
ANR	1003962	CallExpression	fclose ( fd )		1003314	0					
ANR	1003963	Callee	fclose		1003314	0					
ANR	1003964	Identifier	fclose		1003314	0					
ANR	1003965	ArgumentList	fd		1003314	1					
ANR	1003966	Argument	fd		1003314	0					
ANR	1003967	Identifier	fd		1003314	0					
ANR	1003968	ExpressionStatement	free ( str )	165:5:4238:4248	1003314	4	True				
ANR	1003969	CallExpression	free ( str )		1003314	0					
ANR	1003970	Callee	free		1003314	0					
ANR	1003971	Identifier	free		1003314	0					
ANR	1003972	ArgumentList	str		1003314	1					
ANR	1003973	Argument	str		1003314	0					
ANR	1003974	Identifier	str		1003314	0					
ANR	1003975	ExpressionStatement	free ( data )	166:5:4255:4266	1003314	5	True				
ANR	1003976	CallExpression	free ( data )		1003314	0					
ANR	1003977	Callee	free		1003314	0					
ANR	1003978	Identifier	free		1003314	0					
ANR	1003979	ArgumentList	data		1003314	1					
ANR	1003980	Argument	data		1003314	0					
ANR	1003981	Identifier	data		1003314	0					
ANR	1003982	BreakStatement	break ;	168:4:4278:4283	1003314	5	True				
ANR	1003983	Label	case '+' :	169:3:4288:4296	1003314	6	True				
ANR	1003984	CompoundStatement		130:5:3015:3052	1003314	7					
ANR	1003985	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	171:5:4318:4375	1003314	0	True				
ANR	1003986	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1003987	IdentifierDeclType	char *		1003314	0					
ANR	1003988	Identifier	str		1003314	1					
ANR	1003989	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1003990	Identifier	str		1003314	0					
ANR	1003991	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1003992	Callee	r_core_project_notes_file		1003314	0					
ANR	1003993	Identifier	r_core_project_notes_file		1003314	0					
ANR	1003994	ArgumentList	core		1003314	1					
ANR	1003995	Argument	core		1003314	0					
ANR	1003996	Identifier	core		1003314	0					
ANR	1003997	Argument	fileproject		1003314	1					
ANR	1003998	Identifier	fileproject		1003314	0					
ANR	1003999	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	172:5:4382:4419	1003314	1	True				
ANR	1004000	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		1003314	0					
ANR	1004001	IdentifierDeclType	char *		1003314	0					
ANR	1004002	Identifier	data		1003314	1					
ANR	1004003	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		1003314	2		=			
ANR	1004004	Identifier	data		1003314	0					
ANR	1004005	CallExpression	"r_file_slurp ( str , NULL )"		1003314	1					
ANR	1004006	Callee	r_file_slurp		1003314	0					
ANR	1004007	Identifier	r_file_slurp		1003314	0					
ANR	1004008	ArgumentList	str		1003314	1					
ANR	1004009	Argument	str		1003314	0					
ANR	1004010	Identifier	str		1003314	0					
ANR	1004011	Argument	NULL		1003314	1					
ANR	1004012	Identifier	NULL		1003314	0					
ANR	1004013	ExpressionStatement	"data = r_str_append ( data , input + 2 )"	173:5:4426:4463	1003314	2	True				
ANR	1004014	AssignmentExpression	"data = r_str_append ( data , input + 2 )"		1003314	0		=			
ANR	1004015	Identifier	data		1003314	0					
ANR	1004016	CallExpression	"r_str_append ( data , input + 2 )"		1003314	1					
ANR	1004017	Callee	r_str_append		1003314	0					
ANR	1004018	Identifier	r_str_append		1003314	0					
ANR	1004019	ArgumentList	data		1003314	1					
ANR	1004020	Argument	data		1003314	0					
ANR	1004021	Identifier	data		1003314	0					
ANR	1004022	Argument	input + 2		1003314	1					
ANR	1004023	AdditiveExpression	input + 2		1003314	0		+			
ANR	1004024	Identifier	input		1003314	0					
ANR	1004025	PrimaryExpression	2		1003314	1					
ANR	1004026	ExpressionStatement	"data = r_str_append ( data , ""\\n"" )"	174:5:4470:4502	1003314	3	True				
ANR	1004027	AssignmentExpression	"data = r_str_append ( data , ""\\n"" )"		1003314	0		=			
ANR	1004028	Identifier	data		1003314	0					
ANR	1004029	CallExpression	"r_str_append ( data , ""\\n"" )"		1003314	1					
ANR	1004030	Callee	r_str_append		1003314	0					
ANR	1004031	Identifier	r_str_append		1003314	0					
ANR	1004032	ArgumentList	data		1003314	1					
ANR	1004033	Argument	data		1003314	0					
ANR	1004034	Identifier	data		1003314	0					
ANR	1004035	Argument	"""\\n"""		1003314	1					
ANR	1004036	PrimaryExpression	"""\\n"""		1003314	0					
ANR	1004037	ExpressionStatement	"r_file_dump ( str , ( const ut8 * ) data , strlen ( data ) , false )"	175:5:4509:4566	1003314	4	True				
ANR	1004038	CallExpression	"r_file_dump ( str , ( const ut8 * ) data , strlen ( data ) , false )"		1003314	0					
ANR	1004039	Callee	r_file_dump		1003314	0					
ANR	1004040	Identifier	r_file_dump		1003314	0					
ANR	1004041	ArgumentList	str		1003314	1					
ANR	1004042	Argument	str		1003314	0					
ANR	1004043	Identifier	str		1003314	0					
ANR	1004044	Argument	( const ut8 * ) data		1003314	1					
ANR	1004045	CastExpression	( const ut8 * ) data		1003314	0					
ANR	1004046	CastTarget	const ut8 *		1003314	0					
ANR	1004047	Identifier	data		1003314	1					
ANR	1004048	Argument	strlen ( data )		1003314	2					
ANR	1004049	CallExpression	strlen ( data )		1003314	0					
ANR	1004050	Callee	strlen		1003314	0					
ANR	1004051	Identifier	strlen		1003314	0					
ANR	1004052	ArgumentList	data		1003314	1					
ANR	1004053	Argument	data		1003314	0					
ANR	1004054	Identifier	data		1003314	0					
ANR	1004055	Argument	false		1003314	3					
ANR	1004056	Identifier	false		1003314	0					
ANR	1004057	ExpressionStatement	free ( data )	176:5:4573:4584	1003314	5	True				
ANR	1004058	CallExpression	free ( data )		1003314	0					
ANR	1004059	Callee	free		1003314	0					
ANR	1004060	Identifier	free		1003314	0					
ANR	1004061	ArgumentList	data		1003314	1					
ANR	1004062	Argument	data		1003314	0					
ANR	1004063	Identifier	data		1003314	0					
ANR	1004064	ExpressionStatement	free ( str )	177:5:4591:4601	1003314	6	True				
ANR	1004065	CallExpression	free ( str )		1003314	0					
ANR	1004066	Callee	free		1003314	0					
ANR	1004067	Identifier	free		1003314	0					
ANR	1004068	ArgumentList	str		1003314	1					
ANR	1004069	Argument	str		1003314	0					
ANR	1004070	Identifier	str		1003314	0					
ANR	1004071	BreakStatement	break ;	179:4:4613:4618	1003314	8	True				
ANR	1004072	Label	case 'j' :	180:3:4623:4631	1003314	9	True				
ANR	1004073	IfStatement	if ( ! input [ 2 ] )		1003314	10					
ANR	1004074	Condition	! input [ 2 ]	181:8:4650:4658	1003314	0	True				
ANR	1004075	UnaryOperationExpression	! input [ 2 ]		1003314	0					
ANR	1004076	UnaryOperator	!		1003314	0					
ANR	1004077	ArrayIndexing	input [ 2 ]		1003314	1					
ANR	1004078	Identifier	input		1003314	0					
ANR	1004079	PrimaryExpression	2		1003314	1					
ANR	1004080	CompoundStatement		142:5:3348:3405	1003314	1					
ANR	1004081	IdentifierDeclStatement	int len = 0 ;	182:5:4668:4679	1003314	0	True				
ANR	1004082	IdentifierDecl	len = 0		1003314	0					
ANR	1004083	IdentifierDeclType	int		1003314	0					
ANR	1004084	Identifier	len		1003314	1					
ANR	1004085	AssignmentExpression	len = 0		1003314	2		=			
ANR	1004086	Identifier	len		1003314	0					
ANR	1004087	PrimaryExpression	0		1003314	1					
ANR	1004088	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	184:5:4715:4772	1003314	1	True				
ANR	1004089	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1004090	IdentifierDeclType	char *		1003314	0					
ANR	1004091	Identifier	str		1003314	1					
ANR	1004092	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1004093	Identifier	str		1003314	0					
ANR	1004094	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1004095	Callee	r_core_project_notes_file		1003314	0					
ANR	1004096	Identifier	r_core_project_notes_file		1003314	0					
ANR	1004097	ArgumentList	core		1003314	1					
ANR	1004098	Argument	core		1003314	0					
ANR	1004099	Identifier	core		1003314	0					
ANR	1004100	Argument	fileproject		1003314	1					
ANR	1004101	Identifier	fileproject		1003314	0					
ANR	1004102	IfStatement	if ( str )		1003314	2					
ANR	1004103	Condition	str	185:9:4783:4785	1003314	0	True				
ANR	1004104	Identifier	str		1003314	0					
ANR	1004105	CompoundStatement		145:6:3474:3517	1003314	1					
ANR	1004106	IdentifierDeclStatement	"char * data = r_file_slurp ( str , & len ) ;"	186:6:4796:4833	1003314	0	True				
ANR	1004107	IdentifierDecl	"* data = r_file_slurp ( str , & len )"		1003314	0					
ANR	1004108	IdentifierDeclType	char *		1003314	0					
ANR	1004109	Identifier	data		1003314	1					
ANR	1004110	AssignmentExpression	"* data = r_file_slurp ( str , & len )"		1003314	2		=			
ANR	1004111	Identifier	data		1003314	0					
ANR	1004112	CallExpression	"r_file_slurp ( str , & len )"		1003314	1					
ANR	1004113	Callee	r_file_slurp		1003314	0					
ANR	1004114	Identifier	r_file_slurp		1003314	0					
ANR	1004115	ArgumentList	str		1003314	1					
ANR	1004116	Argument	str		1003314	0					
ANR	1004117	Identifier	str		1003314	0					
ANR	1004118	Argument	& len		1003314	1					
ANR	1004119	UnaryOperationExpression	& len		1003314	0					
ANR	1004120	UnaryOperator	&		1003314	0					
ANR	1004121	Identifier	len		1003314	1					
ANR	1004122	IdentifierDeclStatement	"char * res = r_base64_encode_dyn ( data , len ) ;"	187:6:4841:4884	1003314	1	True				
ANR	1004123	IdentifierDecl	"* res = r_base64_encode_dyn ( data , len )"		1003314	0					
ANR	1004124	IdentifierDeclType	char *		1003314	0					
ANR	1004125	Identifier	res		1003314	1					
ANR	1004126	AssignmentExpression	"* res = r_base64_encode_dyn ( data , len )"		1003314	2		=			
ANR	1004127	Identifier	res		1003314	0					
ANR	1004128	CallExpression	"r_base64_encode_dyn ( data , len )"		1003314	1					
ANR	1004129	Callee	r_base64_encode_dyn		1003314	0					
ANR	1004130	Identifier	r_base64_encode_dyn		1003314	0					
ANR	1004131	ArgumentList	data		1003314	1					
ANR	1004132	Argument	data		1003314	0					
ANR	1004133	Identifier	data		1003314	0					
ANR	1004134	Argument	len		1003314	1					
ANR	1004135	Identifier	len		1003314	0					
ANR	1004136	IfStatement	if ( res )		1003314	2					
ANR	1004137	Condition	res	188:10:4896:4898	1003314	0	True				
ANR	1004138	Identifier	res		1003314	0					
ANR	1004139	CompoundStatement		146:15:3534:3534	1003314	1					
ANR	1004140	ExpressionStatement	r_cons_println ( res )	189:7:4910:4930	1003314	0	True				
ANR	1004141	CallExpression	r_cons_println ( res )		1003314	0					
ANR	1004142	Callee	r_cons_println		1003314	0					
ANR	1004143	Identifier	r_cons_println		1003314	0					
ANR	1004144	ArgumentList	res		1003314	1					
ANR	1004145	Argument	res		1003314	0					
ANR	1004146	Identifier	res		1003314	0					
ANR	1004147	ExpressionStatement	free ( res )	190:7:4939:4949	1003314	1	True				
ANR	1004148	CallExpression	free ( res )		1003314	0					
ANR	1004149	Callee	free		1003314	0					
ANR	1004150	Identifier	free		1003314	0					
ANR	1004151	ArgumentList	res		1003314	1					
ANR	1004152	Argument	res		1003314	0					
ANR	1004153	Identifier	res		1003314	0					
ANR	1004154	ExpressionStatement	free ( data )	192:6:4965:4976	1003314	3	True				
ANR	1004155	CallExpression	free ( data )		1003314	0					
ANR	1004156	Callee	free		1003314	0					
ANR	1004157	Identifier	free		1003314	0					
ANR	1004158	ArgumentList	data		1003314	1					
ANR	1004159	Argument	data		1003314	0					
ANR	1004160	Identifier	data		1003314	0					
ANR	1004161	ExpressionStatement	free ( str )	193:6:4984:4994	1003314	4	True				
ANR	1004162	CallExpression	free ( str )		1003314	0					
ANR	1004163	Callee	free		1003314	0					
ANR	1004164	Identifier	free		1003314	0					
ANR	1004165	ArgumentList	str		1003314	1					
ANR	1004166	Argument	str		1003314	0					
ANR	1004167	Identifier	str		1003314	0					
ANR	1004168	ElseStatement	else		1003314	0					
ANR	1004169	IfStatement	if ( input [ 2 ] == ' ' )		1003314	0					
ANR	1004170	Condition	input [ 2 ] == ' '	195:15:5018:5032	1003314	0	True				
ANR	1004171	EqualityExpression	input [ 2 ] == ' '		1003314	0		==			
ANR	1004172	ArrayIndexing	input [ 2 ]		1003314	0					
ANR	1004173	Identifier	input		1003314	0					
ANR	1004174	PrimaryExpression	2		1003314	1					
ANR	1004175	PrimaryExpression	' '		1003314	1					
ANR	1004176	CompoundStatement		155:5:3704:3751	1003314	1					
ANR	1004177	IdentifierDeclStatement	"ut8 * data = r_base64_decode_dyn ( input + 3 , - 1 ) ;"	197:5:5071:5118	1003314	0	True				
ANR	1004178	IdentifierDecl	"* data = r_base64_decode_dyn ( input + 3 , - 1 )"		1003314	0					
ANR	1004179	IdentifierDeclType	ut8 *		1003314	0					
ANR	1004180	Identifier	data		1003314	1					
ANR	1004181	AssignmentExpression	"* data = r_base64_decode_dyn ( input + 3 , - 1 )"		1003314	2		=			
ANR	1004182	Identifier	data		1003314	0					
ANR	1004183	CallExpression	"r_base64_decode_dyn ( input + 3 , - 1 )"		1003314	1					
ANR	1004184	Callee	r_base64_decode_dyn		1003314	0					
ANR	1004185	Identifier	r_base64_decode_dyn		1003314	0					
ANR	1004186	ArgumentList	input + 3		1003314	1					
ANR	1004187	Argument	input + 3		1003314	0					
ANR	1004188	AdditiveExpression	input + 3		1003314	0		+			
ANR	1004189	Identifier	input		1003314	0					
ANR	1004190	PrimaryExpression	3		1003314	1					
ANR	1004191	Argument	- 1		1003314	1					
ANR	1004192	UnaryOperationExpression	- 1		1003314	0					
ANR	1004193	UnaryOperator	-		1003314	0					
ANR	1004194	PrimaryExpression	1		1003314	1					
ANR	1004195	IfStatement	if ( data )		1003314	1					
ANR	1004196	Condition	data	198:9:5129:5132	1003314	0	True				
ANR	1004197	Identifier	data		1003314	0					
ANR	1004198	CompoundStatement		157:6:3776:3833	1003314	1					
ANR	1004199	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	199:6:5143:5200	1003314	0	True				
ANR	1004200	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1004201	IdentifierDeclType	char *		1003314	0					
ANR	1004202	Identifier	str		1003314	1					
ANR	1004203	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1004204	Identifier	str		1003314	0					
ANR	1004205	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1004206	Callee	r_core_project_notes_file		1003314	0					
ANR	1004207	Identifier	r_core_project_notes_file		1003314	0					
ANR	1004208	ArgumentList	core		1003314	1					
ANR	1004209	Argument	core		1003314	0					
ANR	1004210	Identifier	core		1003314	0					
ANR	1004211	Argument	fileproject		1003314	1					
ANR	1004212	Identifier	fileproject		1003314	0					
ANR	1004213	IfStatement	if ( str )		1003314	1					
ANR	1004214	Condition	str	200:10:5212:5214	1003314	0	True				
ANR	1004215	Identifier	str		1003314	0					
ANR	1004216	CompoundStatement		158:15:3850:3850	1003314	1					
ANR	1004217	ExpressionStatement	"r_file_dump ( str , data , strlen ( ( const char * ) data ) , 0 )"	201:7:5226:5282	1003314	0	True				
ANR	1004218	CallExpression	"r_file_dump ( str , data , strlen ( ( const char * ) data ) , 0 )"		1003314	0					
ANR	1004219	Callee	r_file_dump		1003314	0					
ANR	1004220	Identifier	r_file_dump		1003314	0					
ANR	1004221	ArgumentList	str		1003314	1					
ANR	1004222	Argument	str		1003314	0					
ANR	1004223	Identifier	str		1003314	0					
ANR	1004224	Argument	data		1003314	1					
ANR	1004225	Identifier	data		1003314	0					
ANR	1004226	Argument	strlen ( ( const char * ) data )		1003314	2					
ANR	1004227	CallExpression	strlen ( ( const char * ) data )		1003314	0					
ANR	1004228	Callee	strlen		1003314	0					
ANR	1004229	Identifier	strlen		1003314	0					
ANR	1004230	ArgumentList	( const char * ) data		1003314	1					
ANR	1004231	Argument	( const char * ) data		1003314	0					
ANR	1004232	CastExpression	( const char * ) data		1003314	0					
ANR	1004233	CastTarget	const char *		1003314	0					
ANR	1004234	Identifier	data		1003314	1					
ANR	1004235	Argument	0		1003314	3					
ANR	1004236	PrimaryExpression	0		1003314	0					
ANR	1004237	ExpressionStatement	free ( str )	202:7:5291:5301	1003314	1	True				
ANR	1004238	CallExpression	free ( str )		1003314	0					
ANR	1004239	Callee	free		1003314	0					
ANR	1004240	Identifier	free		1003314	0					
ANR	1004241	ArgumentList	str		1003314	1					
ANR	1004242	Argument	str		1003314	0					
ANR	1004243	Identifier	str		1003314	0					
ANR	1004244	ExpressionStatement	free ( data )	204:6:5317:5328	1003314	2	True				
ANR	1004245	CallExpression	free ( data )		1003314	0					
ANR	1004246	Callee	free		1003314	0					
ANR	1004247	Identifier	free		1003314	0					
ANR	1004248	ArgumentList	data		1003314	1					
ANR	1004249	Argument	data		1003314	0					
ANR	1004250	Identifier	data		1003314	0					
ANR	1004251	ElseStatement	else		1003314	0					
ANR	1004252	CompoundStatement		164:11:3981:3981	1003314	0					
ANR	1004253	ExpressionStatement	"eprintf ( ""Usage: `Pnj` or `Pnj ...`\\n"" )"	207:5:5355:5394	1003314	0	True				
ANR	1004254	CallExpression	"eprintf ( ""Usage: `Pnj` or `Pnj ...`\\n"" )"		1003314	0					
ANR	1004255	Callee	eprintf		1003314	0					
ANR	1004256	Identifier	eprintf		1003314	0					
ANR	1004257	ArgumentList	"""Usage: `Pnj` or `Pnj ...`\\n"""		1003314	1					
ANR	1004258	Argument	"""Usage: `Pnj` or `Pnj ...`\\n"""		1003314	0					
ANR	1004259	PrimaryExpression	"""Usage: `Pnj` or `Pnj ...`\\n"""		1003314	0					
ANR	1004260	BreakStatement	break ;	209:4:5406:5411	1003314	11	True				
ANR	1004261	Label	case 'x' :	210:3:5416:5424	1003314	12	True				
ANR	1004262	ExpressionStatement	"r_core_project_execute_cmds ( core , fileproject )"	211:4:5439:5486	1003314	13	True				
ANR	1004263	CallExpression	"r_core_project_execute_cmds ( core , fileproject )"		1003314	0					
ANR	1004264	Callee	r_core_project_execute_cmds		1003314	0					
ANR	1004265	Identifier	r_core_project_execute_cmds		1003314	0					
ANR	1004266	ArgumentList	core		1003314	1					
ANR	1004267	Argument	core		1003314	0					
ANR	1004268	Identifier	core		1003314	0					
ANR	1004269	Argument	fileproject		1003314	1					
ANR	1004270	Identifier	fileproject		1003314	0					
ANR	1004271	BreakStatement	break ;	212:4:5492:5497	1003314	14	True				
ANR	1004272	Label	case 0 :	213:3:5502:5508	1003314	15	True				
ANR	1004273	CompoundStatement		174:4:4223:4260	1003314	16					
ANR	1004274	IdentifierDeclStatement	"char * str = r_core_project_notes_file ( core , fileproject ) ;"	215:4:5527:5584	1003314	0	True				
ANR	1004275	IdentifierDecl	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	0					
ANR	1004276	IdentifierDeclType	char *		1003314	0					
ANR	1004277	Identifier	str		1003314	1					
ANR	1004278	AssignmentExpression	"* str = r_core_project_notes_file ( core , fileproject )"		1003314	2		=			
ANR	1004279	Identifier	str		1003314	0					
ANR	1004280	CallExpression	"r_core_project_notes_file ( core , fileproject )"		1003314	1					
ANR	1004281	Callee	r_core_project_notes_file		1003314	0					
ANR	1004282	Identifier	r_core_project_notes_file		1003314	0					
ANR	1004283	ArgumentList	core		1003314	1					
ANR	1004284	Argument	core		1003314	0					
ANR	1004285	Identifier	core		1003314	0					
ANR	1004286	Argument	fileproject		1003314	1					
ANR	1004287	Identifier	fileproject		1003314	0					
ANR	1004288	IdentifierDeclStatement	"char * data = r_file_slurp ( str , NULL ) ;"	216:4:5590:5627	1003314	1	True				
ANR	1004289	IdentifierDecl	"* data = r_file_slurp ( str , NULL )"		1003314	0					
ANR	1004290	IdentifierDeclType	char *		1003314	0					
ANR	1004291	Identifier	data		1003314	1					
ANR	1004292	AssignmentExpression	"* data = r_file_slurp ( str , NULL )"		1003314	2		=			
ANR	1004293	Identifier	data		1003314	0					
ANR	1004294	CallExpression	"r_file_slurp ( str , NULL )"		1003314	1					
ANR	1004295	Callee	r_file_slurp		1003314	0					
ANR	1004296	Identifier	r_file_slurp		1003314	0					
ANR	1004297	ArgumentList	str		1003314	1					
ANR	1004298	Argument	str		1003314	0					
ANR	1004299	Identifier	str		1003314	0					
ANR	1004300	Argument	NULL		1003314	1					
ANR	1004301	Identifier	NULL		1003314	0					
ANR	1004302	IfStatement	if ( data )		1003314	2					
ANR	1004303	Condition	data	217:8:5637:5640	1003314	0	True				
ANR	1004304	Identifier	data		1003314	0					
ANR	1004305	CompoundStatement		175:14:4276:4276	1003314	1					
ANR	1004306	ExpressionStatement	r_cons_println ( data )	218:5:5650:5671	1003314	0	True				
ANR	1004307	CallExpression	r_cons_println ( data )		1003314	0					
ANR	1004308	Callee	r_cons_println		1003314	0					
ANR	1004309	Identifier	r_cons_println		1003314	0					
ANR	1004310	ArgumentList	data		1003314	1					
ANR	1004311	Argument	data		1003314	0					
ANR	1004312	Identifier	data		1003314	0					
ANR	1004313	ExpressionStatement	free ( data )	219:5:5678:5689	1003314	1	True				
ANR	1004314	CallExpression	free ( data )		1003314	0					
ANR	1004315	Callee	free		1003314	0					
ANR	1004316	Identifier	free		1003314	0					
ANR	1004317	ArgumentList	data		1003314	1					
ANR	1004318	Argument	data		1003314	0					
ANR	1004319	Identifier	data		1003314	0					
ANR	1004320	ExpressionStatement	free ( str )	221:4:5701:5711	1003314	3	True				
ANR	1004321	CallExpression	free ( str )		1003314	0					
ANR	1004322	Callee	free		1003314	0					
ANR	1004323	Identifier	free		1003314	0					
ANR	1004324	ArgumentList	str		1003314	1					
ANR	1004325	Argument	str		1003314	0					
ANR	1004326	Identifier	str		1003314	0					
ANR	1004327	BreakStatement	break ;	223:3:5721:5726	1003314	17	True				
ANR	1004328	BreakStatement	break ;	226:2:5739:5744	1003314	19	True				
ANR	1004329	Label	case 'i' :	227:1:5747:5755	1003314	20	True				
ANR	1004330	IfStatement	if ( file && * file )		1003314	21					
ANR	1004331	Condition	file && * file	228:6:5763:5775	1003314	0	True				
ANR	1004332	AndExpression	file && * file		1003314	0		&&			
ANR	1004333	Identifier	file		1003314	0					
ANR	1004334	UnaryOperationExpression	* file		1003314	1					
ANR	1004335	UnaryOperator	*		1003314	0					
ANR	1004336	Identifier	file		1003314	1					
ANR	1004337	CompoundStatement		187:3:4416:4464	1003314	1					
ANR	1004338	IdentifierDeclStatement	"char * prjName = r_core_project_info ( core , file ) ;"	229:3:5783:5831	1003314	0	True				
ANR	1004339	IdentifierDecl	"* prjName = r_core_project_info ( core , file )"		1003314	0					
ANR	1004340	IdentifierDeclType	char *		1003314	0					
ANR	1004341	Identifier	prjName		1003314	1					
ANR	1004342	AssignmentExpression	"* prjName = r_core_project_info ( core , file )"		1003314	2		=			
ANR	1004343	Identifier	prjName		1003314	0					
ANR	1004344	CallExpression	"r_core_project_info ( core , file )"		1003314	1					
ANR	1004345	Callee	r_core_project_info		1003314	0					
ANR	1004346	Identifier	r_core_project_info		1003314	0					
ANR	1004347	ArgumentList	core		1003314	1					
ANR	1004348	Argument	core		1003314	0					
ANR	1004349	Identifier	core		1003314	0					
ANR	1004350	Argument	file		1003314	1					
ANR	1004351	Identifier	file		1003314	0					
ANR	1004352	ExpressionStatement	r_cons_println ( prjName )	230:3:5836:5860	1003314	1	True				
ANR	1004353	CallExpression	r_cons_println ( prjName )		1003314	0					
ANR	1004354	Callee	r_cons_println		1003314	0					
ANR	1004355	Identifier	r_cons_println		1003314	0					
ANR	1004356	ArgumentList	prjName		1003314	1					
ANR	1004357	Argument	prjName		1003314	0					
ANR	1004358	Identifier	prjName		1003314	0					
ANR	1004359	ExpressionStatement	free ( prjName )	231:3:5865:5879	1003314	2	True				
ANR	1004360	CallExpression	free ( prjName )		1003314	0					
ANR	1004361	Callee	free		1003314	0					
ANR	1004362	Identifier	free		1003314	0					
ANR	1004363	ArgumentList	prjName		1003314	1					
ANR	1004364	Argument	prjName		1003314	0					
ANR	1004365	Identifier	prjName		1003314	0					
ANR	1004366	BreakStatement	break ;	233:2:5887:5892	1003314	22	True				
ANR	1004367	Label	case 0 :	234:1:5895:5901	1003314	23	True				
ANR	1004368	Label	case 'j' :	235:1:5904:5912	1003314	24	True				
ANR	1004369	ExpressionStatement	"r_core_project_list ( core , input [ 0 ] )"	236:2:5916:5952	1003314	25	True				
ANR	1004370	CallExpression	"r_core_project_list ( core , input [ 0 ] )"		1003314	0					
ANR	1004371	Callee	r_core_project_list		1003314	0					
ANR	1004372	Identifier	r_core_project_list		1003314	0					
ANR	1004373	ArgumentList	core		1003314	1					
ANR	1004374	Argument	core		1003314	0					
ANR	1004375	Identifier	core		1003314	0					
ANR	1004376	Argument	input [ 0 ]		1003314	1					
ANR	1004377	ArrayIndexing	input [ 0 ]		1003314	0					
ANR	1004378	Identifier	input		1003314	0					
ANR	1004379	PrimaryExpression	0		1003314	1					
ANR	1004380	BreakStatement	break ;	237:2:5956:5961	1003314	26	True				
ANR	1004381	Label	default :	238:1:5964:5971	1003314	27	True				
ANR	1004382	Identifier	default		1003314	0					
ANR	1004383	ExpressionStatement	"r_core_cmd_help ( core , help_msg_P )"	239:2:5975:6009	1003314	28	True				
ANR	1004384	CallExpression	"r_core_cmd_help ( core , help_msg_P )"		1003314	0					
ANR	1004385	Callee	r_core_cmd_help		1003314	0					
ANR	1004386	Identifier	r_core_cmd_help		1003314	0					
ANR	1004387	ArgumentList	core		1003314	1					
ANR	1004388	Argument	core		1003314	0					
ANR	1004389	Identifier	core		1003314	0					
ANR	1004390	Argument	help_msg_P		1003314	1					
ANR	1004391	Identifier	help_msg_P		1003314	0					
ANR	1004392	BreakStatement	break ;	240:2:6013:6018	1003314	29	True				
ANR	1004393	ExpressionStatement	free ( str )	242:1:6024:6034	1003314	10	True				
ANR	1004394	CallExpression	free ( str )		1003314	0					
ANR	1004395	Callee	free		1003314	0					
ANR	1004396	Identifier	free		1003314	0					
ANR	1004397	ArgumentList	str		1003314	1					
ANR	1004398	Argument	str		1003314	0					
ANR	1004399	Identifier	str		1003314	0					
ANR	1004400	ReturnStatement	return true ;	243:1:6037:6048	1003314	11	True				
ANR	1004401	Identifier	true		1003314	0					
ANR	1004402	ReturnType	static int		1003314	1					
ANR	1004403	Identifier	cmd_project		1003314	2					
ANR	1004404	ParameterList	"void * data , const char * input"		1003314	3					
ANR	1004405	Parameter	void * data	43:23:1335:1344	1003314	0	True				
ANR	1004406	ParameterType	void *		1003314	0					
ANR	1004407	Identifier	data		1003314	1					
ANR	1004408	Parameter	const char * input	43:35:1347:1363	1003314	1	True				
ANR	1004409	ParameterType	const char *		1003314	0					
ANR	1004410	Identifier	input		1003314	1					
ANR	1004411	CFGEntryNode	ENTRY		1003314		True				
ANR	1004412	CFGExitNode	EXIT		1003314		True				
ANR	1004413	Symbol	r_str_append		1003314						
ANR	1004414	Symbol	data		1003314						
ANR	1004415	Symbol	r_config_get		1003314						
ANR	1004416	Symbol	* core		1003314						
ANR	1004417	Symbol	* input		1003314						
ANR	1004418	Symbol	strchr		1003314						
ANR	1004419	Symbol	del		1003314						
ANR	1004420	Symbol	strlen		1003314						
ANR	1004421	Symbol	r_base64_encode_dyn		1003314						
ANR	1004422	Symbol	file		1003314						
ANR	1004423	Symbol	len		1003314						
ANR	1004424	Symbol	R_CORE_PRJ_ALL		1003314						
ANR	1004425	Symbol	arg		1003314						
ANR	1004426	Symbol	fileproject		1003314						
ANR	1004427	Symbol	* str		1003314						
ANR	1004428	Symbol	* fileproject		1003314						
ANR	1004429	Symbol	core -> config		1003314						
ANR	1004430	Symbol	editor		1003314						
ANR	1004431	Symbol	res		1003314						
ANR	1004432	Symbol	r_file_slurp		1003314						
ANR	1004433	Symbol	NULL		1003314						
ANR	1004434	Symbol	help_msg_Pn		1003314						
ANR	1004435	Symbol	r_base64_decode_dyn		1003314						
ANR	1004436	Symbol	r_core_project_info		1003314						
ANR	1004437	Symbol	* editor		1003314						
ANR	1004438	Symbol	false		1003314						
ANR	1004439	Symbol	* file		1003314						
ANR	1004440	Symbol	* nl ++		1003314						
ANR	1004441	Symbol	prjName		1003314						
ANR	1004442	Symbol	ptr		1003314						
ANR	1004443	Symbol	str		1003314						
ANR	1004444	Symbol	input		1003314						
ANR	1004445	Symbol	core		1003314						
ANR	1004446	Symbol	r_core_project_save		1003314						
ANR	1004447	Symbol	help_msg_P		1003314						
ANR	1004448	Symbol	strstr		1003314						
ANR	1004449	Symbol	true		1003314						
ANR	1004450	Symbol	r_sandbox_fopen		1003314						
ANR	1004451	Symbol	strdup		1003314						
ANR	1004452	Symbol	& len		1003314						
ANR	1004453	Symbol	fd		1003314						
ANR	1004454	Symbol	nl		1003314						
ANR	1004455	Symbol	* arg		1003314						
ANR	1004456	Symbol	r_core_project_notes_file		1003314						
