command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	6288098	File	data/converged/CVE-2019-16718~_radare2/task.c								
ANR	6288099	Function	tasks_lock_block_signals	7:0:135:346							
ANR	6288100	FunctionDef	tasks_lock_block_signals (sigset_t * old_sigset)		6288099	0					
ANR	6288101	CompoundStatement		7:59:194:346	6288099	0					
ANR	6288102	IdentifierDeclStatement	sigset_t block_sigset ;	8:1:197:218	6288099	0	True				
ANR	6288103	IdentifierDecl	block_sigset		6288099	0					
ANR	6288104	IdentifierDeclType	sigset_t		6288099	0					
ANR	6288105	Identifier	block_sigset		6288099	1					
ANR	6288106	ExpressionStatement	sigemptyset ( & block_sigset )	9:1:221:248	6288099	1	True				
ANR	6288107	CallExpression	sigemptyset ( & block_sigset )		6288099	0					
ANR	6288108	Callee	sigemptyset		6288099	0					
ANR	6288109	Identifier	sigemptyset		6288099	0					
ANR	6288110	ArgumentList	& block_sigset		6288099	1					
ANR	6288111	Argument	& block_sigset		6288099	0					
ANR	6288112	UnaryOperationExpression	& block_sigset		6288099	0					
ANR	6288113	UnaryOperator	&		6288099	0					
ANR	6288114	Identifier	block_sigset		6288099	1					
ANR	6288115	ExpressionStatement	"sigaddset ( & block_sigset , SIGWINCH )"	10:1:251:286	6288099	2	True				
ANR	6288116	CallExpression	"sigaddset ( & block_sigset , SIGWINCH )"		6288099	0					
ANR	6288117	Callee	sigaddset		6288099	0					
ANR	6288118	Identifier	sigaddset		6288099	0					
ANR	6288119	ArgumentList	& block_sigset		6288099	1					
ANR	6288120	Argument	& block_sigset		6288099	0					
ANR	6288121	UnaryOperationExpression	& block_sigset		6288099	0					
ANR	6288122	UnaryOperator	&		6288099	0					
ANR	6288123	Identifier	block_sigset		6288099	1					
ANR	6288124	Argument	SIGWINCH		6288099	1					
ANR	6288125	Identifier	SIGWINCH		6288099	0					
ANR	6288126	ExpressionStatement	"r_signal_sigmask ( SIG_BLOCK , & block_sigset , old_sigset )"	11:1:289:344	6288099	3	True				
ANR	6288127	CallExpression	"r_signal_sigmask ( SIG_BLOCK , & block_sigset , old_sigset )"		6288099	0					
ANR	6288128	Callee	r_signal_sigmask		6288099	0					
ANR	6288129	Identifier	r_signal_sigmask		6288099	0					
ANR	6288130	ArgumentList	SIG_BLOCK		6288099	1					
ANR	6288131	Argument	SIG_BLOCK		6288099	0					
ANR	6288132	Identifier	SIG_BLOCK		6288099	0					
ANR	6288133	Argument	& block_sigset		6288099	1					
ANR	6288134	UnaryOperationExpression	& block_sigset		6288099	0					
ANR	6288135	UnaryOperator	&		6288099	0					
ANR	6288136	Identifier	block_sigset		6288099	1					
ANR	6288137	Argument	old_sigset		6288099	2					
ANR	6288138	Identifier	old_sigset		6288099	0					
ANR	6288139	ReturnType	static void		6288099	1					
ANR	6288140	Identifier	tasks_lock_block_signals		6288099	2					
ANR	6288141	ParameterList	sigset_t * old_sigset		6288099	3					
ANR	6288142	Parameter	sigset_t * old_sigset	7:37:172:191	6288099	0	True				
ANR	6288143	ParameterType	sigset_t *		6288099	0					
ANR	6288144	Identifier	old_sigset		6288099	1					
ANR	6288145	CFGEntryNode	ENTRY		6288099		True				
ANR	6288146	CFGExitNode	EXIT		6288099		True				
ANR	6288147	Symbol	& block_sigset		6288099						
ANR	6288148	Symbol	old_sigset		6288099						
ANR	6288149	Symbol	SIGWINCH		6288099						
ANR	6288150	Symbol	block_sigset		6288099						
ANR	6288151	Symbol	SIG_BLOCK		6288099						
ANR	6288152	Function	tasks_lock_block_signals_reset	14:0:349:467							
ANR	6288153	FunctionDef	tasks_lock_block_signals_reset (sigset_t * old_sigset)		6288152	0					
ANR	6288154	CompoundStatement		14:65:414:467	6288152	0					
ANR	6288155	ExpressionStatement	"r_signal_sigmask ( SIG_SETMASK , old_sigset , NULL )"	15:1:417:465	6288152	0	True				
ANR	6288156	CallExpression	"r_signal_sigmask ( SIG_SETMASK , old_sigset , NULL )"		6288152	0					
ANR	6288157	Callee	r_signal_sigmask		6288152	0					
ANR	6288158	Identifier	r_signal_sigmask		6288152	0					
ANR	6288159	ArgumentList	SIG_SETMASK		6288152	1					
ANR	6288160	Argument	SIG_SETMASK		6288152	0					
ANR	6288161	Identifier	SIG_SETMASK		6288152	0					
ANR	6288162	Argument	old_sigset		6288152	1					
ANR	6288163	Identifier	old_sigset		6288152	0					
ANR	6288164	Argument	NULL		6288152	2					
ANR	6288165	Identifier	NULL		6288152	0					
ANR	6288166	ReturnType	static void		6288152	1					
ANR	6288167	Identifier	tasks_lock_block_signals_reset		6288152	2					
ANR	6288168	ParameterList	sigset_t * old_sigset		6288152	3					
ANR	6288169	Parameter	sigset_t * old_sigset	14:43:392:411	6288152	0	True				
ANR	6288170	ParameterType	sigset_t *		6288152	0					
ANR	6288171	Identifier	old_sigset		6288152	1					
ANR	6288172	CFGEntryNode	ENTRY		6288152		True				
ANR	6288173	CFGExitNode	EXIT		6288152		True				
ANR	6288174	Symbol	NULL		6288152						
ANR	6288175	Symbol	old_sigset		6288152						
ANR	6288176	Symbol	SIG_SETMASK		6288152						
ANR	6288177	Function	tasks_lock_block_signals	19:0:504:588							
ANR	6288178	FunctionDef	tasks_lock_block_signals (TASK_SIGSET_T * old_sigset)		6288177	0					
ANR	6288179	CompoundStatement		19:64:568:588	6288177	0					
ANR	6288180	ExpressionStatement	( void ) old_sigset	19:1:570:586	6288177	0	True				
ANR	6288181	CastExpression	( void ) old_sigset		6288177	0					
ANR	6288182	CastTarget	void		6288177	0					
ANR	6288183	Identifier	old_sigset		6288177	1					
ANR	6288184	ReturnType	static void		6288177	1					
ANR	6288185	Identifier	tasks_lock_block_signals		6288177	2					
ANR	6288186	ParameterList	TASK_SIGSET_T * old_sigset		6288177	3					
ANR	6288187	Parameter	TASK_SIGSET_T * old_sigset	19:37:541:565	6288177	0	True				
ANR	6288188	ParameterType	TASK_SIGSET_T *		6288177	0					
ANR	6288189	Identifier	old_sigset		6288177	1					
ANR	6288190	CFGEntryNode	ENTRY		6288177		True				
ANR	6288191	CFGExitNode	EXIT		6288177		True				
ANR	6288192	Symbol	old_sigset		6288177						
ANR	6288193	Function	tasks_lock_block_signals_reset	20:0:590:680							
ANR	6288194	FunctionDef	tasks_lock_block_signals_reset (TASK_SIGSET_T * old_sigset)		6288193	0					
ANR	6288195	CompoundStatement		20:70:660:680	6288193	0					
ANR	6288196	ExpressionStatement	( void ) old_sigset	20:1:662:678	6288193	0	True				
ANR	6288197	CastExpression	( void ) old_sigset		6288193	0					
ANR	6288198	CastTarget	void		6288193	0					
ANR	6288199	Identifier	old_sigset		6288193	1					
ANR	6288200	ReturnType	static void		6288193	1					
ANR	6288201	Identifier	tasks_lock_block_signals_reset		6288193	2					
ANR	6288202	ParameterList	TASK_SIGSET_T * old_sigset		6288193	3					
ANR	6288203	Parameter	TASK_SIGSET_T * old_sigset	20:43:633:657	6288193	0	True				
ANR	6288204	ParameterType	TASK_SIGSET_T *		6288193	0					
ANR	6288205	Identifier	old_sigset		6288193	1					
ANR	6288206	CFGEntryNode	ENTRY		6288193		True				
ANR	6288207	CFGExitNode	EXIT		6288193		True				
ANR	6288208	Symbol	old_sigset		6288193						
ANR	6288209	Function	tasks_lock_enter	23:0:690:838							
ANR	6288210	FunctionDef	"tasks_lock_enter (RCore * core , TASK_SIGSET_T * old_sigset)"		6288209	0					
ANR	6288211	CompoundStatement		23:69:759:838	6288209	0					
ANR	6288212	ExpressionStatement	tasks_lock_block_signals ( old_sigset )	24:1:762:799	6288209	0	True				
ANR	6288213	CallExpression	tasks_lock_block_signals ( old_sigset )		6288209	0					
ANR	6288214	Callee	tasks_lock_block_signals		6288209	0					
ANR	6288215	Identifier	tasks_lock_block_signals		6288209	0					
ANR	6288216	ArgumentList	old_sigset		6288209	1					
ANR	6288217	Argument	old_sigset		6288209	0					
ANR	6288218	Identifier	old_sigset		6288209	0					
ANR	6288219	ExpressionStatement	r_th_lock_enter ( core -> tasks_lock )	25:1:802:836	6288209	1	True				
ANR	6288220	CallExpression	r_th_lock_enter ( core -> tasks_lock )		6288209	0					
ANR	6288221	Callee	r_th_lock_enter		6288209	0					
ANR	6288222	Identifier	r_th_lock_enter		6288209	0					
ANR	6288223	ArgumentList	core -> tasks_lock		6288209	1					
ANR	6288224	Argument	core -> tasks_lock		6288209	0					
ANR	6288225	PtrMemberAccess	core -> tasks_lock		6288209	0					
ANR	6288226	Identifier	core		6288209	0					
ANR	6288227	Identifier	tasks_lock		6288209	1					
ANR	6288228	ReturnType	static void		6288209	1					
ANR	6288229	Identifier	tasks_lock_enter		6288209	2					
ANR	6288230	ParameterList	"RCore * core , TASK_SIGSET_T * old_sigset"		6288209	3					
ANR	6288231	Parameter	RCore * core	23:29:719:729	6288209	0	True				
ANR	6288232	ParameterType	RCore *		6288209	0					
ANR	6288233	Identifier	core		6288209	1					
ANR	6288234	Parameter	TASK_SIGSET_T * old_sigset	23:42:732:756	6288209	1	True				
ANR	6288235	ParameterType	TASK_SIGSET_T *		6288209	0					
ANR	6288236	Identifier	old_sigset		6288209	1					
ANR	6288237	CFGEntryNode	ENTRY		6288209		True				
ANR	6288238	CFGExitNode	EXIT		6288209		True				
ANR	6288239	Symbol	core		6288209						
ANR	6288240	Symbol	old_sigset		6288209						
ANR	6288241	Symbol	* core		6288209						
ANR	6288242	Symbol	core -> tasks_lock		6288209						
ANR	6288243	Function	tasks_lock_leave	28:0:841:995							
ANR	6288244	FunctionDef	"tasks_lock_leave (RCore * core , TASK_SIGSET_T * old_sigset)"		6288243	0					
ANR	6288245	CompoundStatement		28:69:910:995	6288243	0					
ANR	6288246	ExpressionStatement	r_th_lock_leave ( core -> tasks_lock )	29:1:913:947	6288243	0	True				
ANR	6288247	CallExpression	r_th_lock_leave ( core -> tasks_lock )		6288243	0					
ANR	6288248	Callee	r_th_lock_leave		6288243	0					
ANR	6288249	Identifier	r_th_lock_leave		6288243	0					
ANR	6288250	ArgumentList	core -> tasks_lock		6288243	1					
ANR	6288251	Argument	core -> tasks_lock		6288243	0					
ANR	6288252	PtrMemberAccess	core -> tasks_lock		6288243	0					
ANR	6288253	Identifier	core		6288243	0					
ANR	6288254	Identifier	tasks_lock		6288243	1					
ANR	6288255	ExpressionStatement	tasks_lock_block_signals_reset ( old_sigset )	30:1:950:993	6288243	1	True				
ANR	6288256	CallExpression	tasks_lock_block_signals_reset ( old_sigset )		6288243	0					
ANR	6288257	Callee	tasks_lock_block_signals_reset		6288243	0					
ANR	6288258	Identifier	tasks_lock_block_signals_reset		6288243	0					
ANR	6288259	ArgumentList	old_sigset		6288243	1					
ANR	6288260	Argument	old_sigset		6288243	0					
ANR	6288261	Identifier	old_sigset		6288243	0					
ANR	6288262	ReturnType	static void		6288243	1					
ANR	6288263	Identifier	tasks_lock_leave		6288243	2					
ANR	6288264	ParameterList	"RCore * core , TASK_SIGSET_T * old_sigset"		6288243	3					
ANR	6288265	Parameter	RCore * core	28:29:870:880	6288243	0	True				
ANR	6288266	ParameterType	RCore *		6288243	0					
ANR	6288267	Identifier	core		6288243	1					
ANR	6288268	Parameter	TASK_SIGSET_T * old_sigset	28:42:883:907	6288243	1	True				
ANR	6288269	ParameterType	TASK_SIGSET_T *		6288243	0					
ANR	6288270	Identifier	old_sigset		6288243	1					
ANR	6288271	CFGEntryNode	ENTRY		6288243		True				
ANR	6288272	CFGExitNode	EXIT		6288243		True				
ANR	6288273	Symbol	core		6288243						
ANR	6288274	Symbol	old_sigset		6288243						
ANR	6288275	Symbol	* core		6288243						
ANR	6288276	Symbol	core -> tasks_lock		6288243						
ANR	6288277	ClassDef	oneshot_t	33:8:1006:1071							
ANR	6288278	DeclStmt									
ANR	6288279	Decl							RCoreTaskOneShot	RCoreTaskOneShot	func
ANR	6288280	DeclStmt									
ANR	6288281	Decl							void	void *	user
ANR	6288282	DeclStmt									
ANR	6288283	Decl							oneshot_t	oneshot_t	OneShot
ANR	6288284	Function	r_core_task_print	38:0:1074:2045							
ANR	6288285	FunctionDef	"r_core_task_print (RCore * core , RCoreTask * task , int mode)"		6288284	0					
ANR	6288286	CompoundStatement		38:70:1144:2045	6288284	0					
ANR	6288287	SwitchStatement	switch ( mode )		6288284	0					
ANR	6288288	Condition	mode	39:9:1155:1158	6288284	0	True				
ANR	6288289	Identifier	mode		6288284	0					
ANR	6288290	CompoundStatement		2:15:16:16	6288284	1					
ANR	6288291	Label	case 'j' :	40:1:1164:1172	6288284	0	True				
ANR	6288292	CompoundStatement		4:2:31:31	6288284	1					
ANR	6288293	ExpressionStatement	"r_cons_printf ( ""{\\""id\\"":%d,\\""state\\"":\\"""" , task -> id )"	42:2:1180:1231	6288284	0	True				
ANR	6288294	CallExpression	"r_cons_printf ( ""{\\""id\\"":%d,\\""state\\"":\\"""" , task -> id )"		6288284	0					
ANR	6288295	Callee	r_cons_printf		6288284	0					
ANR	6288296	Identifier	r_cons_printf		6288284	0					
ANR	6288297	ArgumentList	"""{\\""id\\"":%d,\\""state\\"":\\"""""		6288284	1					
ANR	6288298	Argument	"""{\\""id\\"":%d,\\""state\\"":\\"""""		6288284	0					
ANR	6288299	PrimaryExpression	"""{\\""id\\"":%d,\\""state\\"":\\"""""		6288284	0					
ANR	6288300	Argument	task -> id		6288284	1					
ANR	6288301	PtrMemberAccess	task -> id		6288284	0					
ANR	6288302	Identifier	task		6288284	0					
ANR	6288303	Identifier	id		6288284	1					
ANR	6288304	SwitchStatement	switch ( task -> state )		6288284	1					
ANR	6288305	Condition	task -> state	43:10:1243:1253	6288284	0	True				
ANR	6288306	PtrMemberAccess	task -> state		6288284	0					
ANR	6288307	Identifier	task		6288284	0					
ANR	6288308	Identifier	state		6288284	1					
ANR	6288309	CompoundStatement		6:23:111:111	6288284	1					
ANR	6288310	Label	case R_CORE_TASK_STATE_BEFORE_START :	44:2:1260:1295	6288284	0	True				
ANR	6288311	Identifier	R_CORE_TASK_STATE_BEFORE_START		6288284	0					
ANR	6288312	ExpressionStatement	"r_cons_print ( ""before_start"" )"	45:3:1300:1329	6288284	1	True				
ANR	6288313	CallExpression	"r_cons_print ( ""before_start"" )"		6288284	0					
ANR	6288314	Callee	r_cons_print		6288284	0					
ANR	6288315	Identifier	r_cons_print		6288284	0					
ANR	6288316	ArgumentList	"""before_start"""		6288284	1					
ANR	6288317	Argument	"""before_start"""		6288284	0					
ANR	6288318	PrimaryExpression	"""before_start"""		6288284	0					
ANR	6288319	BreakStatement	break ;	46:3:1334:1339	6288284	2	True				
ANR	6288320	Label	case R_CORE_TASK_STATE_RUNNING :	47:2:1343:1373	6288284	3	True				
ANR	6288321	Identifier	R_CORE_TASK_STATE_RUNNING		6288284	0					
ANR	6288322	ExpressionStatement	"r_cons_print ( ""running"" )"	48:3:1378:1402	6288284	4	True				
ANR	6288323	CallExpression	"r_cons_print ( ""running"" )"		6288284	0					
ANR	6288324	Callee	r_cons_print		6288284	0					
ANR	6288325	Identifier	r_cons_print		6288284	0					
ANR	6288326	ArgumentList	"""running"""		6288284	1					
ANR	6288327	Argument	"""running"""		6288284	0					
ANR	6288328	PrimaryExpression	"""running"""		6288284	0					
ANR	6288329	BreakStatement	break ;	49:3:1407:1412	6288284	5	True				
ANR	6288330	Label	case R_CORE_TASK_STATE_SLEEPING :	50:2:1416:1447	6288284	6	True				
ANR	6288331	Identifier	R_CORE_TASK_STATE_SLEEPING		6288284	0					
ANR	6288332	ExpressionStatement	"r_cons_print ( ""sleeping"" )"	51:3:1452:1477	6288284	7	True				
ANR	6288333	CallExpression	"r_cons_print ( ""sleeping"" )"		6288284	0					
ANR	6288334	Callee	r_cons_print		6288284	0					
ANR	6288335	Identifier	r_cons_print		6288284	0					
ANR	6288336	ArgumentList	"""sleeping"""		6288284	1					
ANR	6288337	Argument	"""sleeping"""		6288284	0					
ANR	6288338	PrimaryExpression	"""sleeping"""		6288284	0					
ANR	6288339	BreakStatement	break ;	52:3:1482:1487	6288284	8	True				
ANR	6288340	Label	case R_CORE_TASK_STATE_DONE :	53:2:1491:1518	6288284	9	True				
ANR	6288341	Identifier	R_CORE_TASK_STATE_DONE		6288284	0					
ANR	6288342	ExpressionStatement	"r_cons_print ( ""done"" )"	54:3:1523:1544	6288284	10	True				
ANR	6288343	CallExpression	"r_cons_print ( ""done"" )"		6288284	0					
ANR	6288344	Callee	r_cons_print		6288284	0					
ANR	6288345	Identifier	r_cons_print		6288284	0					
ANR	6288346	ArgumentList	"""done"""		6288284	1					
ANR	6288347	Argument	"""done"""		6288284	0					
ANR	6288348	PrimaryExpression	"""done"""		6288284	0					
ANR	6288349	BreakStatement	break ;	55:3:1549:1554	6288284	11	True				
ANR	6288350	ExpressionStatement	"r_cons_printf ( ""\\"",\\""transient\\"":%s,\\""cmd\\"":"" , task -> transient ? ""true"" : ""false"" )"	57:2:1562:1644	6288284	2	True				
ANR	6288351	CallExpression	"r_cons_printf ( ""\\"",\\""transient\\"":%s,\\""cmd\\"":"" , task -> transient ? ""true"" : ""false"" )"		6288284	0					
ANR	6288352	Callee	r_cons_printf		6288284	0					
ANR	6288353	Identifier	r_cons_printf		6288284	0					
ANR	6288354	ArgumentList	"""\\"",\\""transient\\"":%s,\\""cmd\\"":"""		6288284	1					
ANR	6288355	Argument	"""\\"",\\""transient\\"":%s,\\""cmd\\"":"""		6288284	0					
ANR	6288356	PrimaryExpression	"""\\"",\\""transient\\"":%s,\\""cmd\\"":"""		6288284	0					
ANR	6288357	Argument	"task -> transient ? ""true"" : ""false"""		6288284	1					
ANR	6288358	ConditionalExpression	"task -> transient ? ""true"" : ""false"""		6288284	0					
ANR	6288359	Condition	task -> transient		6288284	0					
ANR	6288360	PtrMemberAccess	task -> transient		6288284	0					
ANR	6288361	Identifier	task		6288284	0					
ANR	6288362	Identifier	transient		6288284	1					
ANR	6288363	PrimaryExpression	"""true"""		6288284	1					
ANR	6288364	PrimaryExpression	"""false"""		6288284	2					
ANR	6288365	IfStatement	if ( task -> cmd )		6288284	3					
ANR	6288366	Condition	task -> cmd	58:6:1652:1660	6288284	0	True				
ANR	6288367	PtrMemberAccess	task -> cmd		6288284	0					
ANR	6288368	Identifier	task		6288284	0					
ANR	6288369	Identifier	cmd		6288284	1					
ANR	6288370	CompoundStatement		21:17:518:518	6288284	1					
ANR	6288371	ExpressionStatement	"r_cons_printf ( ""\\""%s\\""}"" , task -> cmd )"	59:3:1668:1704	6288284	0	True				
ANR	6288372	CallExpression	"r_cons_printf ( ""\\""%s\\""}"" , task -> cmd )"		6288284	0					
ANR	6288373	Callee	r_cons_printf		6288284	0					
ANR	6288374	Identifier	r_cons_printf		6288284	0					
ANR	6288375	ArgumentList	"""\\""%s\\""}"""		6288284	1					
ANR	6288376	Argument	"""\\""%s\\""}"""		6288284	0					
ANR	6288377	PrimaryExpression	"""\\""%s\\""}"""		6288284	0					
ANR	6288378	Argument	task -> cmd		6288284	1					
ANR	6288379	PtrMemberAccess	task -> cmd		6288284	0					
ANR	6288380	Identifier	task		6288284	0					
ANR	6288381	Identifier	cmd		6288284	1					
ANR	6288382	ElseStatement	else		6288284	0					
ANR	6288383	CompoundStatement		23:9:570:570	6288284	0					
ANR	6288384	ExpressionStatement	"r_cons_printf ( ""null}"" )"	61:3:1720:1743	6288284	0	True				
ANR	6288385	CallExpression	"r_cons_printf ( ""null}"" )"		6288284	0					
ANR	6288386	Callee	r_cons_printf		6288284	0					
ANR	6288387	Identifier	r_cons_printf		6288284	0					
ANR	6288388	ArgumentList	"""null}"""		6288284	1					
ANR	6288389	Argument	"""null}"""		6288284	0					
ANR	6288390	PrimaryExpression	"""null}"""		6288284	0					
ANR	6288391	BreakStatement	break ;	64:2:1755:1760	6288284	2	True				
ANR	6288392	Label	default :	65:1:1763:1770	6288284	3	True				
ANR	6288393	Identifier	default		6288284	0					
ANR	6288394	CompoundStatement		29:2:631:659	6288284	4					
ANR	6288395	IdentifierDeclStatement	const char * info = task -> cmd ;	66:2:1776:1804	6288284	0	True				
ANR	6288396	IdentifierDecl	* info = task -> cmd		6288284	0					
ANR	6288397	IdentifierDeclType	const char *		6288284	0					
ANR	6288398	Identifier	info		6288284	1					
ANR	6288399	AssignmentExpression	* info = task -> cmd		6288284	2		=			
ANR	6288400	Identifier	info		6288284	0					
ANR	6288401	PtrMemberAccess	task -> cmd		6288284	1					
ANR	6288402	Identifier	task		6288284	0					
ANR	6288403	Identifier	cmd		6288284	1					
ANR	6288404	IfStatement	if ( task == core -> main_task )		6288284	1					
ANR	6288405	Condition	task == core -> main_task	67:6:1812:1834	6288284	0	True				
ANR	6288406	EqualityExpression	task == core -> main_task		6288284	0		==			
ANR	6288407	Identifier	task		6288284	0					
ANR	6288408	PtrMemberAccess	core -> main_task		6288284	1					
ANR	6288409	Identifier	core		6288284	0					
ANR	6288410	Identifier	main_task		6288284	1					
ANR	6288411	CompoundStatement		30:31:692:692	6288284	1					
ANR	6288412	ExpressionStatement	"info = ""-- MAIN TASK --"""	68:3:1842:1866	6288284	0	True				
ANR	6288413	AssignmentExpression	"info = ""-- MAIN TASK --"""		6288284	0		=			
ANR	6288414	Identifier	info		6288284	0					
ANR	6288415	PrimaryExpression	"""-- MAIN TASK --"""		6288284	1					
ANR	6288416	ExpressionStatement	"r_cons_printf ( ""%3d %3s %12s  %s\\n"" , task -> id , task -> transient ? ""(t)"" : """" , r_core_task_status ( task ) , info ? info : """" )"	70:2:1874:2027	6288284	2	True				
ANR	6288417	CallExpression	"r_cons_printf ( ""%3d %3s %12s  %s\\n"" , task -> id , task -> transient ? ""(t)"" : """" , r_core_task_status ( task ) , info ? info : """" )"		6288284	0					
ANR	6288418	Callee	r_cons_printf		6288284	0					
ANR	6288419	Identifier	r_cons_printf		6288284	0					
ANR	6288420	ArgumentList	"""%3d %3s %12s  %s\\n"""		6288284	1					
ANR	6288421	Argument	"""%3d %3s %12s  %s\\n"""		6288284	0					
ANR	6288422	PrimaryExpression	"""%3d %3s %12s  %s\\n"""		6288284	0					
ANR	6288423	Argument	task -> id		6288284	1					
ANR	6288424	PtrMemberAccess	task -> id		6288284	0					
ANR	6288425	Identifier	task		6288284	0					
ANR	6288426	Identifier	id		6288284	1					
ANR	6288427	Argument	"task -> transient ? ""(t)"" : """""		6288284	2					
ANR	6288428	ConditionalExpression	"task -> transient ? ""(t)"" : """""		6288284	0					
ANR	6288429	Condition	task -> transient		6288284	0					
ANR	6288430	PtrMemberAccess	task -> transient		6288284	0					
ANR	6288431	Identifier	task		6288284	0					
ANR	6288432	Identifier	transient		6288284	1					
ANR	6288433	PrimaryExpression	"""(t)"""		6288284	1					
ANR	6288434	PrimaryExpression	""""""		6288284	2					
ANR	6288435	Argument	r_core_task_status ( task )		6288284	3					
ANR	6288436	CallExpression	r_core_task_status ( task )		6288284	0					
ANR	6288437	Callee	r_core_task_status		6288284	0					
ANR	6288438	Identifier	r_core_task_status		6288284	0					
ANR	6288439	ArgumentList	task		6288284	1					
ANR	6288440	Argument	task		6288284	0					
ANR	6288441	Identifier	task		6288284	0					
ANR	6288442	Argument	"info ? info : """""		6288284	4					
ANR	6288443	ConditionalExpression	"info ? info : """""		6288284	0					
ANR	6288444	Condition	info		6288284	0					
ANR	6288445	Identifier	info		6288284	0					
ANR	6288446	Identifier	info		6288284	1					
ANR	6288447	PrimaryExpression	""""""		6288284	2					
ANR	6288448	BreakStatement	break ;	76:2:2035:2040	6288284	5	True				
ANR	6288449	ReturnType	R_API void		6288284	1					
ANR	6288450	Identifier	r_core_task_print		6288284	2					
ANR	6288451	ParameterList	"RCore * core , RCoreTask * task , int mode"		6288284	3					
ANR	6288452	Parameter	RCore * core	38:30:1104:1114	6288284	0	True				
ANR	6288453	ParameterType	RCore *		6288284	0					
ANR	6288454	Identifier	core		6288284	1					
ANR	6288455	Parameter	RCoreTask * task	38:43:1117:1131	6288284	1	True				
ANR	6288456	ParameterType	RCoreTask *		6288284	0					
ANR	6288457	Identifier	task		6288284	1					
ANR	6288458	Parameter	int mode	38:60:1134:1141	6288284	2	True				
ANR	6288459	ParameterType	int		6288284	0					
ANR	6288460	Identifier	mode		6288284	1					
ANR	6288461	CFGEntryNode	ENTRY		6288284		True				
ANR	6288462	CFGExitNode	EXIT		6288284		True				
ANR	6288463	Symbol	mode		6288284						
ANR	6288464	Symbol	core		6288284						
ANR	6288465	Symbol	r_core_task_status		6288284						
ANR	6288466	Symbol	task		6288284						
ANR	6288467	Symbol	task -> state		6288284						
ANR	6288468	Symbol	task -> id		6288284						
ANR	6288469	Symbol	core -> main_task		6288284						
ANR	6288470	Symbol	* core		6288284						
ANR	6288471	Symbol	task -> transient		6288284						
ANR	6288472	Symbol	task -> cmd		6288284						
ANR	6288473	Symbol	* task		6288284						
ANR	6288474	Symbol	info		6288284						
ANR	6288475	Function	r_core_task_list	80:0:2048:2559							
ANR	6288476	FunctionDef	"r_core_task_list (RCore * core , int mode)"		6288475	0					
ANR	6288477	CompoundStatement		80:51:2099:2559	6288475	0					
ANR	6288478	IdentifierDeclStatement	RListIter * iter ;	81:1:2102:2117	6288475	0	True				
ANR	6288479	IdentifierDecl	* iter		6288475	0					
ANR	6288480	IdentifierDeclType	RListIter *		6288475	0					
ANR	6288481	Identifier	iter		6288475	1					
ANR	6288482	IdentifierDeclStatement	RCoreTask * task ;	82:1:2120:2135	6288475	1	True				
ANR	6288483	IdentifierDecl	* task		6288475	0					
ANR	6288484	IdentifierDeclType	RCoreTask *		6288475	0					
ANR	6288485	Identifier	task		6288475	1					
ANR	6288486	IfStatement	if ( mode == 'j' )		6288475	2					
ANR	6288487	Condition	mode == 'j'	83:5:2142:2152	6288475	0	True				
ANR	6288488	EqualityExpression	mode == 'j'		6288475	0		==			
ANR	6288489	Identifier	mode		6288475	0					
ANR	6288490	PrimaryExpression	'j'		6288475	1					
ANR	6288491	CompoundStatement		4:18:55:55	6288475	1					
ANR	6288492	ExpressionStatement	"r_cons_printf ( ""["" )"	84:2:2159:2178	6288475	0	True				
ANR	6288493	CallExpression	"r_cons_printf ( ""["" )"		6288475	0					
ANR	6288494	Callee	r_cons_printf		6288475	0					
ANR	6288495	Identifier	r_cons_printf		6288475	0					
ANR	6288496	ArgumentList	"""["""		6288475	1					
ANR	6288497	Argument	"""["""		6288475	0					
ANR	6288498	PrimaryExpression	"""["""		6288475	0					
ANR	6288499	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	86:1:2184:2208	6288475	3	True				
ANR	6288500	IdentifierDecl	old_sigset		6288475	0					
ANR	6288501	IdentifierDeclType	TASK_SIGSET_T		6288475	0					
ANR	6288502	Identifier	old_sigset		6288475	1					
ANR	6288503	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	87:1:2211:2247	6288475	4	True				
ANR	6288504	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6288475	0					
ANR	6288505	Callee	tasks_lock_enter		6288475	0					
ANR	6288506	Identifier	tasks_lock_enter		6288475	0					
ANR	6288507	ArgumentList	core		6288475	1					
ANR	6288508	Argument	core		6288475	0					
ANR	6288509	Identifier	core		6288475	0					
ANR	6288510	Argument	& old_sigset		6288475	1					
ANR	6288511	UnaryOperationExpression	& old_sigset		6288475	0					
ANR	6288512	UnaryOperator	&		6288475	0					
ANR	6288513	Identifier	old_sigset		6288475	1					
ANR	6288514	Statement	r_list_foreach	88:1:2250:2263	6288475	5	True				
ANR	6288515	Statement	(	88:16:2265:2265	6288475	6	True				
ANR	6288516	Statement	core	88:17:2266:2269	6288475	7	True				
ANR	6288517	Statement	->	88:21:2270:2271	6288475	8	True				
ANR	6288518	Statement	tasks	88:23:2272:2276	6288475	9	True				
ANR	6288519	Statement	","	88:28:2277:2277	6288475	10	True				
ANR	6288520	Statement	iter	88:30:2279:2282	6288475	11	True				
ANR	6288521	Statement	","	88:34:2283:2283	6288475	12	True				
ANR	6288522	Statement	task	88:36:2285:2288	6288475	13	True				
ANR	6288523	Statement	)	88:40:2289:2289	6288475	14	True				
ANR	6288524	CompoundStatement		9:42:191:191	6288475	15					
ANR	6288525	ExpressionStatement	"r_core_task_print ( core , task , mode )"	89:2:2295:2331	6288475	0	True				
ANR	6288526	CallExpression	"r_core_task_print ( core , task , mode )"		6288475	0					
ANR	6288527	Callee	r_core_task_print		6288475	0					
ANR	6288528	Identifier	r_core_task_print		6288475	0					
ANR	6288529	ArgumentList	core		6288475	1					
ANR	6288530	Argument	core		6288475	0					
ANR	6288531	Identifier	core		6288475	0					
ANR	6288532	Argument	task		6288475	1					
ANR	6288533	Identifier	task		6288475	0					
ANR	6288534	Argument	mode		6288475	2					
ANR	6288535	Identifier	mode		6288475	0					
ANR	6288536	IfStatement	if ( mode == 'j' && iter -> n )		6288475	1					
ANR	6288537	Condition	mode == 'j' && iter -> n	90:6:2339:2360	6288475	0	True				
ANR	6288538	AndExpression	mode == 'j' && iter -> n		6288475	0		&&			
ANR	6288539	EqualityExpression	mode == 'j'		6288475	0		==			
ANR	6288540	Identifier	mode		6288475	0					
ANR	6288541	PrimaryExpression	'j'		6288475	1					
ANR	6288542	PtrMemberAccess	iter -> n		6288475	1					
ANR	6288543	Identifier	iter		6288475	0					
ANR	6288544	Identifier	n		6288475	1					
ANR	6288545	CompoundStatement		11:30:263:263	6288475	1					
ANR	6288546	ExpressionStatement	"r_cons_printf ( "","" )"	91:3:2368:2387	6288475	0	True				
ANR	6288547	CallExpression	"r_cons_printf ( "","" )"		6288475	0					
ANR	6288548	Callee	r_cons_printf		6288475	0					
ANR	6288549	Identifier	r_cons_printf		6288475	0					
ANR	6288550	ArgumentList	""","""		6288475	1					
ANR	6288551	Argument	""","""		6288475	0					
ANR	6288552	PrimaryExpression	""","""		6288475	0					
ANR	6288553	IfStatement	if ( mode == 'j' )		6288475	16					
ANR	6288554	Condition	mode == 'j'	94:5:2401:2411	6288475	0	True				
ANR	6288555	EqualityExpression	mode == 'j'		6288475	0		==			
ANR	6288556	Identifier	mode		6288475	0					
ANR	6288557	PrimaryExpression	'j'		6288475	1					
ANR	6288558	CompoundStatement		15:18:314:314	6288475	1					
ANR	6288559	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	95:2:2418:2439	6288475	0	True				
ANR	6288560	CallExpression	"r_cons_printf ( ""]\\n"" )"		6288475	0					
ANR	6288561	Callee	r_cons_printf		6288475	0					
ANR	6288562	Identifier	r_cons_printf		6288475	0					
ANR	6288563	ArgumentList	"""]\\n"""		6288475	1					
ANR	6288564	Argument	"""]\\n"""		6288475	0					
ANR	6288565	PrimaryExpression	"""]\\n"""		6288475	0					
ANR	6288566	ElseStatement	else		6288475	0					
ANR	6288567	CompoundStatement		17:8:349:349	6288475	0					
ANR	6288568	ExpressionStatement	"r_cons_printf ( ""--\\ntotal running: %d\\n"" , core -> tasks_running )"	97:2:2453:2515	6288475	0	True				
ANR	6288569	CallExpression	"r_cons_printf ( ""--\\ntotal running: %d\\n"" , core -> tasks_running )"		6288475	0					
ANR	6288570	Callee	r_cons_printf		6288475	0					
ANR	6288571	Identifier	r_cons_printf		6288475	0					
ANR	6288572	ArgumentList	"""--\\ntotal running: %d\\n"""		6288475	1					
ANR	6288573	Argument	"""--\\ntotal running: %d\\n"""		6288475	0					
ANR	6288574	PrimaryExpression	"""--\\ntotal running: %d\\n"""		6288475	0					
ANR	6288575	Argument	core -> tasks_running		6288475	1					
ANR	6288576	PtrMemberAccess	core -> tasks_running		6288475	0					
ANR	6288577	Identifier	core		6288475	0					
ANR	6288578	Identifier	tasks_running		6288475	1					
ANR	6288579	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	99:1:2521:2557	6288475	17	True				
ANR	6288580	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6288475	0					
ANR	6288581	Callee	tasks_lock_leave		6288475	0					
ANR	6288582	Identifier	tasks_lock_leave		6288475	0					
ANR	6288583	ArgumentList	core		6288475	1					
ANR	6288584	Argument	core		6288475	0					
ANR	6288585	Identifier	core		6288475	0					
ANR	6288586	Argument	& old_sigset		6288475	1					
ANR	6288587	UnaryOperationExpression	& old_sigset		6288475	0					
ANR	6288588	UnaryOperator	&		6288475	0					
ANR	6288589	Identifier	old_sigset		6288475	1					
ANR	6288590	ReturnType	R_API void		6288475	1					
ANR	6288591	Identifier	r_core_task_list		6288475	2					
ANR	6288592	ParameterList	"RCore * core , int mode"		6288475	3					
ANR	6288593	Parameter	RCore * core	80:28:2076:2086	6288475	0	True				
ANR	6288594	ParameterType	RCore *		6288475	0					
ANR	6288595	Identifier	core		6288475	1					
ANR	6288596	Parameter	int mode	80:41:2089:2096	6288475	1	True				
ANR	6288597	ParameterType	int		6288475	0					
ANR	6288598	Identifier	mode		6288475	1					
ANR	6288599	CFGEntryNode	ENTRY		6288475		True				
ANR	6288600	CFGExitNode	EXIT		6288475		True				
ANR	6288601	Symbol	mode		6288475						
ANR	6288602	Symbol	core		6288475						
ANR	6288603	Symbol	* iter		6288475						
ANR	6288604	Symbol	task		6288475						
ANR	6288605	Symbol	& old_sigset		6288475						
ANR	6288606	Symbol	iter -> n		6288475						
ANR	6288607	Symbol	core -> tasks_running		6288475						
ANR	6288608	Symbol	old_sigset		6288475						
ANR	6288609	Symbol	* core		6288475						
ANR	6288610	Symbol	iter		6288475						
ANR	6288611	Function	r_core_task_running_tasks_count	102:0:2562:2928							
ANR	6288612	FunctionDef	r_core_task_running_tasks_count (RCore * core)		6288611	0					
ANR	6288613	CompoundStatement		102:55:2617:2928	6288611	0					
ANR	6288614	IdentifierDeclStatement	RListIter * iter ;	103:1:2620:2635	6288611	0	True				
ANR	6288615	IdentifierDecl	* iter		6288611	0					
ANR	6288616	IdentifierDeclType	RListIter *		6288611	0					
ANR	6288617	Identifier	iter		6288611	1					
ANR	6288618	IdentifierDeclStatement	RCoreTask * task ;	104:1:2638:2653	6288611	1	True				
ANR	6288619	IdentifierDecl	* task		6288611	0					
ANR	6288620	IdentifierDeclType	RCoreTask *		6288611	0					
ANR	6288621	Identifier	task		6288611	1					
ANR	6288622	IdentifierDeclStatement	int count = 0 ;	105:1:2656:2669	6288611	2	True				
ANR	6288623	IdentifierDecl	count = 0		6288611	0					
ANR	6288624	IdentifierDeclType	int		6288611	0					
ANR	6288625	Identifier	count		6288611	1					
ANR	6288626	AssignmentExpression	count = 0		6288611	2		=			
ANR	6288627	Identifier	count		6288611	0					
ANR	6288628	PrimaryExpression	0		6288611	1					
ANR	6288629	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	106:1:2672:2696	6288611	3	True				
ANR	6288630	IdentifierDecl	old_sigset		6288611	0					
ANR	6288631	IdentifierDeclType	TASK_SIGSET_T		6288611	0					
ANR	6288632	Identifier	old_sigset		6288611	1					
ANR	6288633	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	107:1:2699:2735	6288611	4	True				
ANR	6288634	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6288611	0					
ANR	6288635	Callee	tasks_lock_enter		6288611	0					
ANR	6288636	Identifier	tasks_lock_enter		6288611	0					
ANR	6288637	ArgumentList	core		6288611	1					
ANR	6288638	Argument	core		6288611	0					
ANR	6288639	Identifier	core		6288611	0					
ANR	6288640	Argument	& old_sigset		6288611	1					
ANR	6288641	UnaryOperationExpression	& old_sigset		6288611	0					
ANR	6288642	UnaryOperator	&		6288611	0					
ANR	6288643	Identifier	old_sigset		6288611	1					
ANR	6288644	Statement	r_list_foreach	108:1:2738:2751	6288611	5	True				
ANR	6288645	Statement	(	108:16:2753:2753	6288611	6	True				
ANR	6288646	Statement	core	108:17:2754:2757	6288611	7	True				
ANR	6288647	Statement	->	108:21:2758:2759	6288611	8	True				
ANR	6288648	Statement	tasks	108:23:2760:2764	6288611	9	True				
ANR	6288649	Statement	","	108:28:2765:2765	6288611	10	True				
ANR	6288650	Statement	iter	108:30:2767:2770	6288611	11	True				
ANR	6288651	Statement	","	108:34:2771:2771	6288611	12	True				
ANR	6288652	Statement	task	108:36:2773:2776	6288611	13	True				
ANR	6288653	Statement	)	108:40:2777:2777	6288611	14	True				
ANR	6288654	CompoundStatement		7:42:161:161	6288611	15					
ANR	6288655	IfStatement	if ( task != core -> main_task && task -> state != R_CORE_TASK_STATE_DONE )		6288611	0					
ANR	6288656	Condition	task != core -> main_task && task -> state != R_CORE_TASK_STATE_DONE	109:6:2787:2850	6288611	0	True				
ANR	6288657	AndExpression	task != core -> main_task && task -> state != R_CORE_TASK_STATE_DONE		6288611	0		&&			
ANR	6288658	EqualityExpression	task != core -> main_task		6288611	0		!=			
ANR	6288659	Identifier	task		6288611	0					
ANR	6288660	PtrMemberAccess	core -> main_task		6288611	1					
ANR	6288661	Identifier	core		6288611	0					
ANR	6288662	Identifier	main_task		6288611	1					
ANR	6288663	EqualityExpression	task -> state != R_CORE_TASK_STATE_DONE		6288611	1		!=			
ANR	6288664	PtrMemberAccess	task -> state		6288611	0					
ANR	6288665	Identifier	task		6288611	0					
ANR	6288666	Identifier	state		6288611	1					
ANR	6288667	Identifier	R_CORE_TASK_STATE_DONE		6288611	1					
ANR	6288668	CompoundStatement		8:72:235:235	6288611	1					
ANR	6288669	ExpressionStatement	count ++	110:3:2858:2865	6288611	0	True				
ANR	6288670	PostIncDecOperationExpression	count ++		6288611	0					
ANR	6288671	Identifier	count		6288611	0					
ANR	6288672	IncDec	++		6288611	1					
ANR	6288673	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	113:1:2875:2911	6288611	16	True				
ANR	6288674	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6288611	0					
ANR	6288675	Callee	tasks_lock_leave		6288611	0					
ANR	6288676	Identifier	tasks_lock_leave		6288611	0					
ANR	6288677	ArgumentList	core		6288611	1					
ANR	6288678	Argument	core		6288611	0					
ANR	6288679	Identifier	core		6288611	0					
ANR	6288680	Argument	& old_sigset		6288611	1					
ANR	6288681	UnaryOperationExpression	& old_sigset		6288611	0					
ANR	6288682	UnaryOperator	&		6288611	0					
ANR	6288683	Identifier	old_sigset		6288611	1					
ANR	6288684	ReturnStatement	return count ;	114:1:2914:2926	6288611	17	True				
ANR	6288685	Identifier	count		6288611	0					
ANR	6288686	ReturnType	R_API int		6288611	1					
ANR	6288687	Identifier	r_core_task_running_tasks_count		6288611	2					
ANR	6288688	ParameterList	RCore * core		6288611	3					
ANR	6288689	Parameter	RCore * core	102:42:2604:2614	6288611	0	True				
ANR	6288690	ParameterType	RCore *		6288611	0					
ANR	6288691	Identifier	core		6288611	1					
ANR	6288692	CFGEntryNode	ENTRY		6288611		True				
ANR	6288693	CFGExitNode	EXIT		6288611		True				
ANR	6288694	Symbol	core		6288611						
ANR	6288695	Symbol	R_CORE_TASK_STATE_DONE		6288611						
ANR	6288696	Symbol	task		6288611						
ANR	6288697	Symbol	& old_sigset		6288611						
ANR	6288698	Symbol	task -> state		6288611						
ANR	6288699	Symbol	core -> main_task		6288611						
ANR	6288700	Symbol	count		6288611						
ANR	6288701	Symbol	old_sigset		6288611						
ANR	6288702	Symbol	* core		6288611						
ANR	6288703	Symbol	iter		6288611						
ANR	6288704	Symbol	* task		6288611						
ANR	6288705	Function	task_join	117:0:2931:3087							
ANR	6288706	FunctionDef	task_join (RCoreTask * task)		6288705	0					
ANR	6288707	CompoundStatement		117:39:2970:3087	6288705	0					
ANR	6288708	IdentifierDeclStatement	RThreadSemaphore * sem = task -> running_sem ;	118:1:2973:3014	6288705	0	True				
ANR	6288709	IdentifierDecl	* sem = task -> running_sem		6288705	0					
ANR	6288710	IdentifierDeclType	RThreadSemaphore *		6288705	0					
ANR	6288711	Identifier	sem		6288705	1					
ANR	6288712	AssignmentExpression	* sem = task -> running_sem		6288705	2		=			
ANR	6288713	Identifier	sem		6288705	0					
ANR	6288714	PtrMemberAccess	task -> running_sem		6288705	1					
ANR	6288715	Identifier	task		6288705	0					
ANR	6288716	Identifier	running_sem		6288705	1					
ANR	6288717	IfStatement	if ( ! sem )		6288705	1					
ANR	6288718	Condition	! sem	119:5:3021:3024	6288705	0	True				
ANR	6288719	UnaryOperationExpression	! sem		6288705	0					
ANR	6288720	UnaryOperator	!		6288705	0					
ANR	6288721	Identifier	sem		6288705	1					
ANR	6288722	CompoundStatement		3:11:56:56	6288705	1					
ANR	6288723	ReturnStatement	return ;	120:2:3031:3037	6288705	0	True				
ANR	6288724	ExpressionStatement	r_th_sem_wait ( sem )	123:1:3044:3063	6288705	2	True				
ANR	6288725	CallExpression	r_th_sem_wait ( sem )		6288705	0					
ANR	6288726	Callee	r_th_sem_wait		6288705	0					
ANR	6288727	Identifier	r_th_sem_wait		6288705	0					
ANR	6288728	ArgumentList	sem		6288705	1					
ANR	6288729	Argument	sem		6288705	0					
ANR	6288730	Identifier	sem		6288705	0					
ANR	6288731	ExpressionStatement	r_th_sem_post ( sem )	124:1:3066:3085	6288705	3	True				
ANR	6288732	CallExpression	r_th_sem_post ( sem )		6288705	0					
ANR	6288733	Callee	r_th_sem_post		6288705	0					
ANR	6288734	Identifier	r_th_sem_post		6288705	0					
ANR	6288735	ArgumentList	sem		6288705	1					
ANR	6288736	Argument	sem		6288705	0					
ANR	6288737	Identifier	sem		6288705	0					
ANR	6288738	ReturnType	static void		6288705	1					
ANR	6288739	Identifier	task_join		6288705	2					
ANR	6288740	ParameterList	RCoreTask * task		6288705	3					
ANR	6288741	Parameter	RCoreTask * task	117:22:2953:2967	6288705	0	True				
ANR	6288742	ParameterType	RCoreTask *		6288705	0					
ANR	6288743	Identifier	task		6288705	1					
ANR	6288744	CFGEntryNode	ENTRY		6288705		True				
ANR	6288745	CFGExitNode	EXIT		6288705		True				
ANR	6288746	Symbol	task		6288705						
ANR	6288747	Symbol	sem		6288705						
ANR	6288748	Symbol	task -> running_sem		6288705						
ANR	6288749	Symbol	* task		6288705						
ANR	6288750	Function	r_core_task_join	127:0:3090:4084							
ANR	6288751	FunctionDef	"r_core_task_join (RCore * core , RCoreTask * current , int id)"		6288750	0					
ANR	6288752	CompoundStatement		127:69:3159:4084	6288750	0					
ANR	6288753	IfStatement	if ( current && id == current -> id )		6288750	0					
ANR	6288754	Condition	current && id == current -> id	128:5:3166:3193	6288750	0	True				
ANR	6288755	AndExpression	current && id == current -> id		6288750	0		&&			
ANR	6288756	Identifier	current		6288750	0					
ANR	6288757	EqualityExpression	id == current -> id		6288750	1		==			
ANR	6288758	Identifier	id		6288750	0					
ANR	6288759	PtrMemberAccess	current -> id		6288750	1					
ANR	6288760	Identifier	current		6288750	0					
ANR	6288761	Identifier	id		6288750	1					
ANR	6288762	CompoundStatement		2:35:36:36	6288750	1					
ANR	6288763	ReturnStatement	return ;	129:2:3200:3206	6288750	0	True				
ANR	6288764	IfStatement	if ( id >= 0 )		6288750	1					
ANR	6288765	Condition	id >= 0	131:5:3216:3222	6288750	0	True				
ANR	6288766	RelationalExpression	id >= 0		6288750	0		>=			
ANR	6288767	Identifier	id		6288750	0					
ANR	6288768	PrimaryExpression	0		6288750	1					
ANR	6288769	CompoundStatement		6:2:69:120	6288750	1					
ANR	6288770	IdentifierDeclStatement	"RCoreTask * task = r_core_task_get_incref ( core , id ) ;"	132:2:3229:3280	6288750	0	True				
ANR	6288771	IdentifierDecl	"* task = r_core_task_get_incref ( core , id )"		6288750	0					
ANR	6288772	IdentifierDeclType	RCoreTask *		6288750	0					
ANR	6288773	Identifier	task		6288750	1					
ANR	6288774	AssignmentExpression	"* task = r_core_task_get_incref ( core , id )"		6288750	2		=			
ANR	6288775	Identifier	task		6288750	0					
ANR	6288776	CallExpression	"r_core_task_get_incref ( core , id )"		6288750	1					
ANR	6288777	Callee	r_core_task_get_incref		6288750	0					
ANR	6288778	Identifier	r_core_task_get_incref		6288750	0					
ANR	6288779	ArgumentList	core		6288750	1					
ANR	6288780	Argument	core		6288750	0					
ANR	6288781	Identifier	core		6288750	0					
ANR	6288782	Argument	id		6288750	1					
ANR	6288783	Identifier	id		6288750	0					
ANR	6288784	IfStatement	if ( ! task )		6288750	1					
ANR	6288785	Condition	! task	133:6:3288:3292	6288750	0	True				
ANR	6288786	UnaryOperationExpression	! task		6288750	0					
ANR	6288787	UnaryOperator	!		6288750	0					
ANR	6288788	Identifier	task		6288750	1					
ANR	6288789	CompoundStatement		7:13:135:135	6288750	1					
ANR	6288790	ReturnStatement	return ;	134:3:3300:3306	6288750	0	True				
ANR	6288791	IfStatement	if ( current )		6288750	2					
ANR	6288792	Condition	current	136:6:3318:3324	6288750	0	True				
ANR	6288793	Identifier	current		6288750	0					
ANR	6288794	CompoundStatement		10:15:167:167	6288750	1					
ANR	6288795	ExpressionStatement	r_core_task_sleep_begin ( current )	137:3:3332:3365	6288750	0	True				
ANR	6288796	CallExpression	r_core_task_sleep_begin ( current )		6288750	0					
ANR	6288797	Callee	r_core_task_sleep_begin		6288750	0					
ANR	6288798	Identifier	r_core_task_sleep_begin		6288750	0					
ANR	6288799	ArgumentList	current		6288750	1					
ANR	6288800	Argument	current		6288750	0					
ANR	6288801	Identifier	current		6288750	0					
ANR	6288802	ExpressionStatement	task_join ( task )	139:2:3373:3389	6288750	3	True				
ANR	6288803	CallExpression	task_join ( task )		6288750	0					
ANR	6288804	Callee	task_join		6288750	0					
ANR	6288805	Identifier	task_join		6288750	0					
ANR	6288806	ArgumentList	task		6288750	1					
ANR	6288807	Argument	task		6288750	0					
ANR	6288808	Identifier	task		6288750	0					
ANR	6288809	IfStatement	if ( current )		6288750	4					
ANR	6288810	Condition	current	140:6:3397:3403	6288750	0	True				
ANR	6288811	Identifier	current		6288750	0					
ANR	6288812	CompoundStatement		14:15:246:246	6288750	1					
ANR	6288813	ExpressionStatement	r_core_task_sleep_end ( current )	141:3:3411:3442	6288750	0	True				
ANR	6288814	CallExpression	r_core_task_sleep_end ( current )		6288750	0					
ANR	6288815	Callee	r_core_task_sleep_end		6288750	0					
ANR	6288816	Identifier	r_core_task_sleep_end		6288750	0					
ANR	6288817	ArgumentList	current		6288750	1					
ANR	6288818	Argument	current		6288750	0					
ANR	6288819	Identifier	current		6288750	0					
ANR	6288820	ExpressionStatement	r_core_task_decref ( task )	143:2:3450:3475	6288750	5	True				
ANR	6288821	CallExpression	r_core_task_decref ( task )		6288750	0					
ANR	6288822	Callee	r_core_task_decref		6288750	0					
ANR	6288823	Identifier	r_core_task_decref		6288750	0					
ANR	6288824	ArgumentList	task		6288750	1					
ANR	6288825	Argument	task		6288750	0					
ANR	6288826	Identifier	task		6288750	0					
ANR	6288827	ElseStatement	else		6288750	0					
ANR	6288828	CompoundStatement		23:2:461:476	6288750	0					
ANR	6288829	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	145:2:3489:3513	6288750	0	True				
ANR	6288830	IdentifierDecl	old_sigset		6288750	0					
ANR	6288831	IdentifierDeclType	TASK_SIGSET_T		6288750	0					
ANR	6288832	Identifier	old_sigset		6288750	1					
ANR	6288833	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	146:2:3517:3553	6288750	1	True				
ANR	6288834	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6288750	0					
ANR	6288835	Callee	tasks_lock_enter		6288750	0					
ANR	6288836	Identifier	tasks_lock_enter		6288750	0					
ANR	6288837	ArgumentList	core		6288750	1					
ANR	6288838	Argument	core		6288750	0					
ANR	6288839	Identifier	core		6288750	0					
ANR	6288840	Argument	& old_sigset		6288750	1					
ANR	6288841	UnaryOperationExpression	& old_sigset		6288750	0					
ANR	6288842	UnaryOperator	&		6288750	0					
ANR	6288843	Identifier	old_sigset		6288750	1					
ANR	6288844	IdentifierDeclStatement	RList * tasks = r_list_clone ( core -> tasks ) ;	147:2:3557:3598	6288750	2	True				
ANR	6288845	IdentifierDecl	* tasks = r_list_clone ( core -> tasks )		6288750	0					
ANR	6288846	IdentifierDeclType	RList *		6288750	0					
ANR	6288847	Identifier	tasks		6288750	1					
ANR	6288848	AssignmentExpression	* tasks = r_list_clone ( core -> tasks )		6288750	2		=			
ANR	6288849	Identifier	tasks		6288750	0					
ANR	6288850	CallExpression	r_list_clone ( core -> tasks )		6288750	1					
ANR	6288851	Callee	r_list_clone		6288750	0					
ANR	6288852	Identifier	r_list_clone		6288750	0					
ANR	6288853	ArgumentList	core -> tasks		6288750	1					
ANR	6288854	Argument	core -> tasks		6288750	0					
ANR	6288855	PtrMemberAccess	core -> tasks		6288750	0					
ANR	6288856	Identifier	core		6288750	0					
ANR	6288857	Identifier	tasks		6288750	1					
ANR	6288858	IdentifierDeclStatement	RListIter * iter ;	148:2:3602:3617	6288750	3	True				
ANR	6288859	IdentifierDecl	* iter		6288750	0					
ANR	6288860	IdentifierDeclType	RListIter *		6288750	0					
ANR	6288861	Identifier	iter		6288750	1					
ANR	6288862	IdentifierDeclStatement	RCoreTask * task ;	149:2:3621:3636	6288750	4	True				
ANR	6288863	IdentifierDecl	* task		6288750	0					
ANR	6288864	IdentifierDeclType	RCoreTask *		6288750	0					
ANR	6288865	Identifier	task		6288750	1					
ANR	6288866	Statement	r_list_foreach	150:2:3640:3653	6288750	5	True				
ANR	6288867	Statement	(	150:17:3655:3655	6288750	6	True				
ANR	6288868	Statement	tasks	150:18:3656:3660	6288750	7	True				
ANR	6288869	Statement	","	150:23:3661:3661	6288750	8	True				
ANR	6288870	Statement	iter	150:25:3663:3666	6288750	9	True				
ANR	6288871	Statement	","	150:29:3667:3667	6288750	10	True				
ANR	6288872	Statement	task	150:31:3669:3672	6288750	11	True				
ANR	6288873	Statement	)	150:35:3673:3673	6288750	12	True				
ANR	6288874	CompoundStatement		24:37:515:515	6288750	13					
ANR	6288875	IfStatement	if ( current == task )		6288750	0					
ANR	6288876	Condition	current == task	151:7:3684:3698	6288750	0	True				
ANR	6288877	EqualityExpression	current == task		6288750	0		==			
ANR	6288878	Identifier	current		6288750	0					
ANR	6288879	Identifier	task		6288750	1					
ANR	6288880	CompoundStatement		25:24:541:541	6288750	1					
ANR	6288881	ContinueStatement	continue ;	152:4:3707:3715	6288750	0	True				
ANR	6288882	ExpressionStatement	r_core_task_incref ( task )	154:3:3725:3750	6288750	1	True				
ANR	6288883	CallExpression	r_core_task_incref ( task )		6288750	0					
ANR	6288884	Callee	r_core_task_incref		6288750	0					
ANR	6288885	Identifier	r_core_task_incref		6288750	0					
ANR	6288886	ArgumentList	task		6288750	1					
ANR	6288887	Argument	task		6288750	0					
ANR	6288888	Identifier	task		6288750	0					
ANR	6288889	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	156:2:3758:3794	6288750	14	True				
ANR	6288890	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6288750	0					
ANR	6288891	Callee	tasks_lock_leave		6288750	0					
ANR	6288892	Identifier	tasks_lock_leave		6288750	0					
ANR	6288893	ArgumentList	core		6288750	1					
ANR	6288894	Argument	core		6288750	0					
ANR	6288895	Identifier	core		6288750	0					
ANR	6288896	Argument	& old_sigset		6288750	1					
ANR	6288897	UnaryOperationExpression	& old_sigset		6288750	0					
ANR	6288898	UnaryOperator	&		6288750	0					
ANR	6288899	Identifier	old_sigset		6288750	1					
ANR	6288900	Statement	r_list_foreach	158:2:3799:3812	6288750	15	True				
ANR	6288901	Statement	(	158:17:3814:3814	6288750	16	True				
ANR	6288902	Statement	tasks	158:18:3815:3819	6288750	17	True				
ANR	6288903	Statement	","	158:23:3820:3820	6288750	18	True				
ANR	6288904	Statement	iter	158:25:3822:3825	6288750	19	True				
ANR	6288905	Statement	","	158:29:3826:3826	6288750	20	True				
ANR	6288906	Statement	task	158:31:3828:3831	6288750	21	True				
ANR	6288907	Statement	)	158:35:3832:3832	6288750	22	True				
ANR	6288908	CompoundStatement		32:37:674:674	6288750	23					
ANR	6288909	IfStatement	if ( current == task )		6288750	0					
ANR	6288910	Condition	current == task	159:7:3843:3857	6288750	0	True				
ANR	6288911	EqualityExpression	current == task		6288750	0		==			
ANR	6288912	Identifier	current		6288750	0					
ANR	6288913	Identifier	task		6288750	1					
ANR	6288914	CompoundStatement		33:24:700:700	6288750	1					
ANR	6288915	ContinueStatement	continue ;	160:4:3866:3874	6288750	0	True				
ANR	6288916	IfStatement	if ( current )		6288750	1					
ANR	6288917	Condition	current	162:7:3888:3894	6288750	0	True				
ANR	6288918	Identifier	current		6288750	0					
ANR	6288919	CompoundStatement		36:16:737:737	6288750	1					
ANR	6288920	ExpressionStatement	r_core_task_sleep_begin ( current )	163:4:3903:3936	6288750	0	True				
ANR	6288921	CallExpression	r_core_task_sleep_begin ( current )		6288750	0					
ANR	6288922	Callee	r_core_task_sleep_begin		6288750	0					
ANR	6288923	Identifier	r_core_task_sleep_begin		6288750	0					
ANR	6288924	ArgumentList	current		6288750	1					
ANR	6288925	Argument	current		6288750	0					
ANR	6288926	Identifier	current		6288750	0					
ANR	6288927	ExpressionStatement	task_join ( task )	165:3:3946:3962	6288750	2	True				
ANR	6288928	CallExpression	task_join ( task )		6288750	0					
ANR	6288929	Callee	task_join		6288750	0					
ANR	6288930	Identifier	task_join		6288750	0					
ANR	6288931	ArgumentList	task		6288750	1					
ANR	6288932	Argument	task		6288750	0					
ANR	6288933	Identifier	task		6288750	0					
ANR	6288934	IfStatement	if ( current )		6288750	3					
ANR	6288935	Condition	current	166:7:3971:3977	6288750	0	True				
ANR	6288936	Identifier	current		6288750	0					
ANR	6288937	CompoundStatement		40:16:820:820	6288750	1					
ANR	6288938	ExpressionStatement	r_core_task_sleep_end ( current )	167:4:3986:4017	6288750	0	True				
ANR	6288939	CallExpression	r_core_task_sleep_end ( current )		6288750	0					
ANR	6288940	Callee	r_core_task_sleep_end		6288750	0					
ANR	6288941	Identifier	r_core_task_sleep_end		6288750	0					
ANR	6288942	ArgumentList	current		6288750	1					
ANR	6288943	Argument	current		6288750	0					
ANR	6288944	Identifier	current		6288750	0					
ANR	6288945	ExpressionStatement	r_core_task_decref ( task )	169:3:4027:4052	6288750	4	True				
ANR	6288946	CallExpression	r_core_task_decref ( task )		6288750	0					
ANR	6288947	Callee	r_core_task_decref		6288750	0					
ANR	6288948	Identifier	r_core_task_decref		6288750	0					
ANR	6288949	ArgumentList	task		6288750	1					
ANR	6288950	Argument	task		6288750	0					
ANR	6288951	Identifier	task		6288750	0					
ANR	6288952	ExpressionStatement	r_list_free ( tasks )	171:2:4060:4079	6288750	24	True				
ANR	6288953	CallExpression	r_list_free ( tasks )		6288750	0					
ANR	6288954	Callee	r_list_free		6288750	0					
ANR	6288955	Identifier	r_list_free		6288750	0					
ANR	6288956	ArgumentList	tasks		6288750	1					
ANR	6288957	Argument	tasks		6288750	0					
ANR	6288958	Identifier	tasks		6288750	0					
ANR	6288959	ReturnType	R_API void		6288750	1					
ANR	6288960	Identifier	r_core_task_join		6288750	2					
ANR	6288961	ParameterList	"RCore * core , RCoreTask * current , int id"		6288750	3					
ANR	6288962	Parameter	RCore * core	127:28:3118:3128	6288750	0	True				
ANR	6288963	ParameterType	RCore *		6288750	0					
ANR	6288964	Identifier	core		6288750	1					
ANR	6288965	Parameter	RCoreTask * current	127:41:3131:3148	6288750	1	True				
ANR	6288966	ParameterType	RCoreTask *		6288750	0					
ANR	6288967	Identifier	current		6288750	1					
ANR	6288968	Parameter	int id	127:61:3151:3156	6288750	2	True				
ANR	6288969	ParameterType	int		6288750	0					
ANR	6288970	Identifier	id		6288750	1					
ANR	6288971	CFGEntryNode	ENTRY		6288750		True				
ANR	6288972	CFGExitNode	EXIT		6288750		True				
ANR	6288973	CFGErrorNode	ERROR		6288750		True				
ANR	6288974	Symbol	r_core_task_get_incref		6288750						
ANR	6288975	Symbol	& old_sigset		6288750						
ANR	6288976	Symbol	* current		6288750						
ANR	6288977	Symbol	* core		6288750						
ANR	6288978	Symbol	iter		6288750						
ANR	6288979	Symbol	r_list_clone		6288750						
ANR	6288980	Symbol	current -> id		6288750						
ANR	6288981	Symbol	core		6288750						
ANR	6288982	Symbol	current		6288750						
ANR	6288983	Symbol	task		6288750						
ANR	6288984	Symbol	core -> tasks		6288750						
ANR	6288985	Symbol	old_sigset		6288750						
ANR	6288986	Symbol	id		6288750						
ANR	6288987	Symbol	tasks		6288750						
ANR	6288988	Function	task_free	175:0:4087:4392							
ANR	6288989	FunctionDef	task_free (RCoreTask * task)		6288988	0					
ANR	6288990	CompoundStatement		175:40:4127:4392	6288988	0					
ANR	6288991	IfStatement	if ( ! task )		6288988	0					
ANR	6288992	Condition	! task	176:5:4134:4138	6288988	0	True				
ANR	6288993	UnaryOperationExpression	! task		6288988	0					
ANR	6288994	UnaryOperator	!		6288988	0					
ANR	6288995	Identifier	task		6288988	1					
ANR	6288996	CompoundStatement		2:12:13:13	6288988	1					
ANR	6288997	ReturnStatement	return ;	177:2:4145:4151	6288988	0	True				
ANR	6288998	ExpressionStatement	free ( task -> cmd )	179:1:4157:4173	6288988	1	True				
ANR	6288999	CallExpression	free ( task -> cmd )		6288988	0					
ANR	6289000	Callee	free		6288988	0					
ANR	6289001	Identifier	free		6288988	0					
ANR	6289002	ArgumentList	task -> cmd		6288988	1					
ANR	6289003	Argument	task -> cmd		6288988	0					
ANR	6289004	PtrMemberAccess	task -> cmd		6288988	0					
ANR	6289005	Identifier	task		6288988	0					
ANR	6289006	Identifier	cmd		6288988	1					
ANR	6289007	ExpressionStatement	free ( task -> res )	180:1:4176:4192	6288988	2	True				
ANR	6289008	CallExpression	free ( task -> res )		6288988	0					
ANR	6289009	Callee	free		6288988	0					
ANR	6289010	Identifier	free		6288988	0					
ANR	6289011	ArgumentList	task -> res		6288988	1					
ANR	6289012	Argument	task -> res		6288988	0					
ANR	6289013	PtrMemberAccess	task -> res		6288988	0					
ANR	6289014	Identifier	task		6288988	0					
ANR	6289015	Identifier	res		6288988	1					
ANR	6289016	ExpressionStatement	r_th_free ( task -> thread )	181:1:4195:4219	6288988	3	True				
ANR	6289017	CallExpression	r_th_free ( task -> thread )		6288988	0					
ANR	6289018	Callee	r_th_free		6288988	0					
ANR	6289019	Identifier	r_th_free		6288988	0					
ANR	6289020	ArgumentList	task -> thread		6288988	1					
ANR	6289021	Argument	task -> thread		6288988	0					
ANR	6289022	PtrMemberAccess	task -> thread		6288988	0					
ANR	6289023	Identifier	task		6288988	0					
ANR	6289024	Identifier	thread		6288988	1					
ANR	6289025	ExpressionStatement	r_th_sem_free ( task -> running_sem )	182:1:4222:4255	6288988	4	True				
ANR	6289026	CallExpression	r_th_sem_free ( task -> running_sem )		6288988	0					
ANR	6289027	Callee	r_th_sem_free		6288988	0					
ANR	6289028	Identifier	r_th_sem_free		6288988	0					
ANR	6289029	ArgumentList	task -> running_sem		6288988	1					
ANR	6289030	Argument	task -> running_sem		6288988	0					
ANR	6289031	PtrMemberAccess	task -> running_sem		6288988	0					
ANR	6289032	Identifier	task		6288988	0					
ANR	6289033	Identifier	running_sem		6288988	1					
ANR	6289034	ExpressionStatement	r_th_cond_free ( task -> dispatch_cond )	183:1:4258:4294	6288988	5	True				
ANR	6289035	CallExpression	r_th_cond_free ( task -> dispatch_cond )		6288988	0					
ANR	6289036	Callee	r_th_cond_free		6288988	0					
ANR	6289037	Identifier	r_th_cond_free		6288988	0					
ANR	6289038	ArgumentList	task -> dispatch_cond		6288988	1					
ANR	6289039	Argument	task -> dispatch_cond		6288988	0					
ANR	6289040	PtrMemberAccess	task -> dispatch_cond		6288988	0					
ANR	6289041	Identifier	task		6288988	0					
ANR	6289042	Identifier	dispatch_cond		6288988	1					
ANR	6289043	ExpressionStatement	r_th_lock_free ( task -> dispatch_lock )	184:1:4297:4333	6288988	6	True				
ANR	6289044	CallExpression	r_th_lock_free ( task -> dispatch_lock )		6288988	0					
ANR	6289045	Callee	r_th_lock_free		6288988	0					
ANR	6289046	Identifier	r_th_lock_free		6288988	0					
ANR	6289047	ArgumentList	task -> dispatch_lock		6288988	1					
ANR	6289048	Argument	task -> dispatch_lock		6288988	0					
ANR	6289049	PtrMemberAccess	task -> dispatch_lock		6288988	0					
ANR	6289050	Identifier	task		6288988	0					
ANR	6289051	Identifier	dispatch_lock		6288988	1					
ANR	6289052	ExpressionStatement	r_cons_context_free ( task -> cons_context )	185:1:4336:4376	6288988	7	True				
ANR	6289053	CallExpression	r_cons_context_free ( task -> cons_context )		6288988	0					
ANR	6289054	Callee	r_cons_context_free		6288988	0					
ANR	6289055	Identifier	r_cons_context_free		6288988	0					
ANR	6289056	ArgumentList	task -> cons_context		6288988	1					
ANR	6289057	Argument	task -> cons_context		6288988	0					
ANR	6289058	PtrMemberAccess	task -> cons_context		6288988	0					
ANR	6289059	Identifier	task		6288988	0					
ANR	6289060	Identifier	cons_context		6288988	1					
ANR	6289061	ExpressionStatement	free ( task )	186:1:4379:4390	6288988	8	True				
ANR	6289062	CallExpression	free ( task )		6288988	0					
ANR	6289063	Callee	free		6288988	0					
ANR	6289064	Identifier	free		6288988	0					
ANR	6289065	ArgumentList	task		6288988	1					
ANR	6289066	Argument	task		6288988	0					
ANR	6289067	Identifier	task		6288988	0					
ANR	6289068	ReturnType	static void		6288988	1					
ANR	6289069	Identifier	task_free		6288988	2					
ANR	6289070	ParameterList	RCoreTask * task		6288988	3					
ANR	6289071	Parameter	RCoreTask * task	175:23:4110:4124	6288988	0	True				
ANR	6289072	ParameterType	RCoreTask *		6288988	0					
ANR	6289073	Identifier	task		6288988	1					
ANR	6289074	CFGEntryNode	ENTRY		6288988		True				
ANR	6289075	CFGExitNode	EXIT		6288988		True				
ANR	6289076	Symbol	task -> thread		6288988						
ANR	6289077	Symbol	task		6288988						
ANR	6289078	Symbol	task -> dispatch_lock		6288988						
ANR	6289079	Symbol	task -> cons_context		6288988						
ANR	6289080	Symbol	task -> res		6288988						
ANR	6289081	Symbol	task -> dispatch_cond		6288988						
ANR	6289082	Symbol	task -> cmd		6288988						
ANR	6289083	Symbol	* task		6288988						
ANR	6289084	Symbol	task -> running_sem		6288988						
ANR	6289085	Function	r_core_task_new	189:0:4395:5337							
ANR	6289086	FunctionDef	"r_core_task_new (RCore * core , bool create_cons , const char * cmd , RCoreTaskCallback cb , void * user)"		6289085	0					
ANR	6289087	CompoundStatement		189:115:4510:5337	6289085	0					
ANR	6289088	IdentifierDeclStatement	RCoreTask * task = R_NEW0 ( RCoreTask ) ;	190:1:4513:4549	6289085	0	True				
ANR	6289089	IdentifierDecl	* task = R_NEW0 ( RCoreTask )		6289085	0					
ANR	6289090	IdentifierDeclType	RCoreTask *		6289085	0					
ANR	6289091	Identifier	task		6289085	1					
ANR	6289092	AssignmentExpression	* task = R_NEW0 ( RCoreTask )		6289085	2		=			
ANR	6289093	Identifier	task		6289085	0					
ANR	6289094	CallExpression	R_NEW0 ( RCoreTask )		6289085	1					
ANR	6289095	Callee	R_NEW0		6289085	0					
ANR	6289096	Identifier	R_NEW0		6289085	0					
ANR	6289097	ArgumentList	RCoreTask		6289085	1					
ANR	6289098	Argument	RCoreTask		6289085	0					
ANR	6289099	Identifier	RCoreTask		6289085	0					
ANR	6289100	IfStatement	if ( ! task )		6289085	1					
ANR	6289101	Condition	! task	191:5:4556:4560	6289085	0	True				
ANR	6289102	UnaryOperationExpression	! task		6289085	0					
ANR	6289103	UnaryOperator	!		6289085	0					
ANR	6289104	Identifier	task		6289085	1					
ANR	6289105	CompoundStatement		3:12:52:52	6289085	1					
ANR	6289106	GotoStatement	goto hell ;	192:2:4567:4576	6289085	0	True				
ANR	6289107	Identifier	hell		6289085	0					
ANR	6289108	ExpressionStatement	task -> thread = NULL	195:1:4583:4602	6289085	2	True				
ANR	6289109	AssignmentExpression	task -> thread = NULL		6289085	0		=			
ANR	6289110	PtrMemberAccess	task -> thread		6289085	0					
ANR	6289111	Identifier	task		6289085	0					
ANR	6289112	Identifier	thread		6289085	1					
ANR	6289113	Identifier	NULL		6289085	1					
ANR	6289114	ExpressionStatement	task -> cmd = cmd ? strdup ( cmd ) : NULL	196:1:4605:4642	6289085	3	True				
ANR	6289115	AssignmentExpression	task -> cmd = cmd ? strdup ( cmd ) : NULL		6289085	0		=			
ANR	6289116	PtrMemberAccess	task -> cmd		6289085	0					
ANR	6289117	Identifier	task		6289085	0					
ANR	6289118	Identifier	cmd		6289085	1					
ANR	6289119	ConditionalExpression	cmd ? strdup ( cmd ) : NULL		6289085	1					
ANR	6289120	Condition	cmd		6289085	0					
ANR	6289121	Identifier	cmd		6289085	0					
ANR	6289122	CallExpression	strdup ( cmd )		6289085	1					
ANR	6289123	Callee	strdup		6289085	0					
ANR	6289124	Identifier	strdup		6289085	0					
ANR	6289125	ArgumentList	cmd		6289085	1					
ANR	6289126	Argument	cmd		6289085	0					
ANR	6289127	Identifier	cmd		6289085	0					
ANR	6289128	Identifier	NULL		6289085	2					
ANR	6289129	ExpressionStatement	task -> cmd_log = false	197:1:4645:4666	6289085	4	True				
ANR	6289130	AssignmentExpression	task -> cmd_log = false		6289085	0		=			
ANR	6289131	PtrMemberAccess	task -> cmd_log		6289085	0					
ANR	6289132	Identifier	task		6289085	0					
ANR	6289133	Identifier	cmd_log		6289085	1					
ANR	6289134	Identifier	false		6289085	1					
ANR	6289135	ExpressionStatement	task -> res = NULL	198:1:4669:4685	6289085	5	True				
ANR	6289136	AssignmentExpression	task -> res = NULL		6289085	0		=			
ANR	6289137	PtrMemberAccess	task -> res		6289085	0					
ANR	6289138	Identifier	task		6289085	0					
ANR	6289139	Identifier	res		6289085	1					
ANR	6289140	Identifier	NULL		6289085	1					
ANR	6289141	ExpressionStatement	task -> running_sem = NULL	199:1:4688:4712	6289085	6	True				
ANR	6289142	AssignmentExpression	task -> running_sem = NULL		6289085	0		=			
ANR	6289143	PtrMemberAccess	task -> running_sem		6289085	0					
ANR	6289144	Identifier	task		6289085	0					
ANR	6289145	Identifier	running_sem		6289085	1					
ANR	6289146	Identifier	NULL		6289085	1					
ANR	6289147	ExpressionStatement	task -> dispatched = false	200:1:4715:4739	6289085	7	True				
ANR	6289148	AssignmentExpression	task -> dispatched = false		6289085	0		=			
ANR	6289149	PtrMemberAccess	task -> dispatched		6289085	0					
ANR	6289150	Identifier	task		6289085	0					
ANR	6289151	Identifier	dispatched		6289085	1					
ANR	6289152	Identifier	false		6289085	1					
ANR	6289153	ExpressionStatement	task -> dispatch_cond = r_th_cond_new ( )	201:1:4742:4780	6289085	8	True				
ANR	6289154	AssignmentExpression	task -> dispatch_cond = r_th_cond_new ( )		6289085	0		=			
ANR	6289155	PtrMemberAccess	task -> dispatch_cond		6289085	0					
ANR	6289156	Identifier	task		6289085	0					
ANR	6289157	Identifier	dispatch_cond		6289085	1					
ANR	6289158	CallExpression	r_th_cond_new ( )		6289085	1					
ANR	6289159	Callee	r_th_cond_new		6289085	0					
ANR	6289160	Identifier	r_th_cond_new		6289085	0					
ANR	6289161	ArgumentList			6289085	1					
ANR	6289162	ExpressionStatement	task -> dispatch_lock = r_th_lock_new ( false )	202:1:4783:4826	6289085	9	True				
ANR	6289163	AssignmentExpression	task -> dispatch_lock = r_th_lock_new ( false )		6289085	0		=			
ANR	6289164	PtrMemberAccess	task -> dispatch_lock		6289085	0					
ANR	6289165	Identifier	task		6289085	0					
ANR	6289166	Identifier	dispatch_lock		6289085	1					
ANR	6289167	CallExpression	r_th_lock_new ( false )		6289085	1					
ANR	6289168	Callee	r_th_lock_new		6289085	0					
ANR	6289169	Identifier	r_th_lock_new		6289085	0					
ANR	6289170	ArgumentList	false		6289085	1					
ANR	6289171	Argument	false		6289085	0					
ANR	6289172	Identifier	false		6289085	0					
ANR	6289173	IfStatement	if ( ! task -> dispatch_cond || ! task -> dispatch_lock )		6289085	10					
ANR	6289174	Condition	! task -> dispatch_cond || ! task -> dispatch_lock	203:5:4833:4876	6289085	0	True				
ANR	6289175	OrExpression	! task -> dispatch_cond || ! task -> dispatch_lock		6289085	0		||			
ANR	6289176	UnaryOperationExpression	! task -> dispatch_cond		6289085	0					
ANR	6289177	UnaryOperator	!		6289085	0					
ANR	6289178	PtrMemberAccess	task -> dispatch_cond		6289085	1					
ANR	6289179	Identifier	task		6289085	0					
ANR	6289180	Identifier	dispatch_cond		6289085	1					
ANR	6289181	UnaryOperationExpression	! task -> dispatch_lock		6289085	1					
ANR	6289182	UnaryOperator	!		6289085	0					
ANR	6289183	PtrMemberAccess	task -> dispatch_lock		6289085	1					
ANR	6289184	Identifier	task		6289085	0					
ANR	6289185	Identifier	dispatch_lock		6289085	1					
ANR	6289186	CompoundStatement		15:51:368:368	6289085	1					
ANR	6289187	GotoStatement	goto hell ;	204:2:4883:4892	6289085	0	True				
ANR	6289188	Identifier	hell		6289085	0					
ANR	6289189	IfStatement	if ( create_cons )		6289085	11					
ANR	6289190	Condition	create_cons	207:5:4903:4913	6289085	0	True				
ANR	6289191	Identifier	create_cons		6289085	0					
ANR	6289192	CompoundStatement		19:18:405:405	6289085	1					
ANR	6289193	ExpressionStatement	task -> cons_context = r_cons_context_new ( r_cons_singleton ( ) -> context )	208:2:4920:4990	6289085	0	True				
ANR	6289194	AssignmentExpression	task -> cons_context = r_cons_context_new ( r_cons_singleton ( ) -> context )		6289085	0		=			
ANR	6289195	PtrMemberAccess	task -> cons_context		6289085	0					
ANR	6289196	Identifier	task		6289085	0					
ANR	6289197	Identifier	cons_context		6289085	1					
ANR	6289198	CallExpression	r_cons_context_new ( r_cons_singleton ( ) -> context )		6289085	1					
ANR	6289199	Callee	r_cons_context_new		6289085	0					
ANR	6289200	Identifier	r_cons_context_new		6289085	0					
ANR	6289201	ArgumentList	r_cons_singleton ( ) -> context		6289085	1					
ANR	6289202	Argument	r_cons_singleton ( ) -> context		6289085	0					
ANR	6289203	PtrMemberAccess	r_cons_singleton ( ) -> context		6289085	0					
ANR	6289204	CallExpression	r_cons_singleton ( )		6289085	0					
ANR	6289205	Callee	r_cons_singleton		6289085	0					
ANR	6289206	Identifier	r_cons_singleton		6289085	0					
ANR	6289207	ArgumentList			6289085	1					
ANR	6289208	Identifier	context		6289085	1					
ANR	6289209	IfStatement	if ( ! task -> cons_context )		6289085	1					
ANR	6289210	Condition	! task -> cons_context	209:6:4998:5016	6289085	0	True				
ANR	6289211	UnaryOperationExpression	! task -> cons_context		6289085	0					
ANR	6289212	UnaryOperator	!		6289085	0					
ANR	6289213	PtrMemberAccess	task -> cons_context		6289085	1					
ANR	6289214	Identifier	task		6289085	0					
ANR	6289215	Identifier	cons_context		6289085	1					
ANR	6289216	CompoundStatement		21:27:508:508	6289085	1					
ANR	6289217	GotoStatement	goto hell ;	210:3:5024:5033	6289085	0	True				
ANR	6289218	Identifier	hell		6289085	0					
ANR	6289219	ExpressionStatement	task -> cons_context -> cmd_depth = core -> max_cmd_depth	212:2:5041:5092	6289085	2	True				
ANR	6289220	AssignmentExpression	task -> cons_context -> cmd_depth = core -> max_cmd_depth		6289085	0		=			
ANR	6289221	PtrMemberAccess	task -> cons_context -> cmd_depth		6289085	0					
ANR	6289222	PtrMemberAccess	task -> cons_context		6289085	0					
ANR	6289223	Identifier	task		6289085	0					
ANR	6289224	Identifier	cons_context		6289085	1					
ANR	6289225	Identifier	cmd_depth		6289085	1					
ANR	6289226	PtrMemberAccess	core -> max_cmd_depth		6289085	1					
ANR	6289227	Identifier	core		6289085	0					
ANR	6289228	Identifier	max_cmd_depth		6289085	1					
ANR	6289229	ExpressionStatement	task -> id = core -> task_id_next ++	215:1:5099:5130	6289085	12	True				
ANR	6289230	AssignmentExpression	task -> id = core -> task_id_next ++		6289085	0		=			
ANR	6289231	PtrMemberAccess	task -> id		6289085	0					
ANR	6289232	Identifier	task		6289085	0					
ANR	6289233	Identifier	id		6289085	1					
ANR	6289234	PostIncDecOperationExpression	core -> task_id_next ++		6289085	1					
ANR	6289235	PtrMemberAccess	core -> task_id_next		6289085	0					
ANR	6289236	Identifier	core		6289085	0					
ANR	6289237	Identifier	task_id_next		6289085	1					
ANR	6289238	IncDec	++		6289085	1					
ANR	6289239	ExpressionStatement	task -> state = R_CORE_TASK_STATE_BEFORE_START	216:1:5133:5177	6289085	13	True				
ANR	6289240	AssignmentExpression	task -> state = R_CORE_TASK_STATE_BEFORE_START		6289085	0		=			
ANR	6289241	PtrMemberAccess	task -> state		6289085	0					
ANR	6289242	Identifier	task		6289085	0					
ANR	6289243	Identifier	state		6289085	1					
ANR	6289244	Identifier	R_CORE_TASK_STATE_BEFORE_START		6289085	1					
ANR	6289245	ExpressionStatement	task -> refcount = 1	217:1:5180:5198	6289085	14	True				
ANR	6289246	AssignmentExpression	task -> refcount = 1		6289085	0		=			
ANR	6289247	PtrMemberAccess	task -> refcount		6289085	0					
ANR	6289248	Identifier	task		6289085	0					
ANR	6289249	Identifier	refcount		6289085	1					
ANR	6289250	PrimaryExpression	1		6289085	1					
ANR	6289251	ExpressionStatement	task -> transient = false	218:1:5201:5224	6289085	15	True				
ANR	6289252	AssignmentExpression	task -> transient = false		6289085	0		=			
ANR	6289253	PtrMemberAccess	task -> transient		6289085	0					
ANR	6289254	Identifier	task		6289085	0					
ANR	6289255	Identifier	transient		6289085	1					
ANR	6289256	Identifier	false		6289085	1					
ANR	6289257	ExpressionStatement	task -> core = core	219:1:5227:5244	6289085	16	True				
ANR	6289258	AssignmentExpression	task -> core = core		6289085	0		=			
ANR	6289259	PtrMemberAccess	task -> core		6289085	0					
ANR	6289260	Identifier	task		6289085	0					
ANR	6289261	Identifier	core		6289085	1					
ANR	6289262	Identifier	core		6289085	1					
ANR	6289263	ExpressionStatement	task -> user = user	220:1:5247:5264	6289085	17	True				
ANR	6289264	AssignmentExpression	task -> user = user		6289085	0		=			
ANR	6289265	PtrMemberAccess	task -> user		6289085	0					
ANR	6289266	Identifier	task		6289085	0					
ANR	6289267	Identifier	user		6289085	1					
ANR	6289268	Identifier	user		6289085	1					
ANR	6289269	ExpressionStatement	task -> cb = cb	221:1:5267:5280	6289085	18	True				
ANR	6289270	AssignmentExpression	task -> cb = cb		6289085	0		=			
ANR	6289271	PtrMemberAccess	task -> cb		6289085	0					
ANR	6289272	Identifier	task		6289085	0					
ANR	6289273	Identifier	cb		6289085	1					
ANR	6289274	Identifier	cb		6289085	1					
ANR	6289275	ReturnStatement	return task ;	223:1:5284:5295	6289085	19	True				
ANR	6289276	Identifier	task		6289085	0					
ANR	6289277	Label	hell :	225:0:5298:5302	6289085	20	True				
ANR	6289278	Identifier	hell		6289085	0					
ANR	6289279	ExpressionStatement	task_free ( task )	226:1:5305:5321	6289085	21	True				
ANR	6289280	CallExpression	task_free ( task )		6289085	0					
ANR	6289281	Callee	task_free		6289085	0					
ANR	6289282	Identifier	task_free		6289085	0					
ANR	6289283	ArgumentList	task		6289085	1					
ANR	6289284	Argument	task		6289085	0					
ANR	6289285	Identifier	task		6289085	0					
ANR	6289286	ReturnStatement	return NULL ;	227:1:5324:5335	6289085	22	True				
ANR	6289287	Identifier	NULL		6289085	0					
ANR	6289288	ReturnType	R_API RCoreTask *		6289085	1					
ANR	6289289	Identifier	r_core_task_new		6289085	2					
ANR	6289290	ParameterList	"RCore * core , bool create_cons , const char * cmd , RCoreTaskCallback cb , void * user"		6289085	3					
ANR	6289291	Parameter	RCore * core	189:33:4428:4438	6289085	0	True				
ANR	6289292	ParameterType	RCore *		6289085	0					
ANR	6289293	Identifier	core		6289085	1					
ANR	6289294	Parameter	bool create_cons	189:46:4441:4456	6289085	1	True				
ANR	6289295	ParameterType	bool		6289085	0					
ANR	6289296	Identifier	create_cons		6289085	1					
ANR	6289297	Parameter	const char * cmd	189:64:4459:4473	6289085	2	True				
ANR	6289298	ParameterType	const char *		6289085	0					
ANR	6289299	Identifier	cmd		6289085	1					
ANR	6289300	Parameter	RCoreTaskCallback cb	189:81:4476:4495	6289085	3	True				
ANR	6289301	ParameterType	RCoreTaskCallback		6289085	0					
ANR	6289302	Identifier	cb		6289085	1					
ANR	6289303	Parameter	void * user	189:103:4498:4507	6289085	4	True				
ANR	6289304	ParameterType	void *		6289085	0					
ANR	6289305	Identifier	user		6289085	1					
ANR	6289306	CFGEntryNode	ENTRY		6289085		True				
ANR	6289307	CFGExitNode	EXIT		6289085		True				
ANR	6289308	Symbol	task -> dispatched		6289085						
ANR	6289309	Symbol	task -> id		6289085						
ANR	6289310	Symbol	* core		6289085						
ANR	6289311	Symbol	task -> core		6289085						
ANR	6289312	Symbol	task -> cmd_log		6289085						
ANR	6289313	Symbol	core -> max_cmd_depth		6289085						
ANR	6289314	Symbol	r_th_cond_new		6289085						
ANR	6289315	Symbol	core -> task_id_next		6289085						
ANR	6289316	Symbol	R_CORE_TASK_STATE_BEFORE_START		6289085						
ANR	6289317	Symbol	task -> running_sem		6289085						
ANR	6289318	Symbol	task -> thread		6289085						
ANR	6289319	Symbol	task -> cons_context		6289085						
ANR	6289320	Symbol	create_cons		6289085						
ANR	6289321	Symbol	r_cons_singleton		6289085						
ANR	6289322	Symbol	task -> cb		6289085						
ANR	6289323	Symbol	RCoreTask		6289085						
ANR	6289324	Symbol	* task -> cons_context		6289085						
ANR	6289325	Symbol	task -> user		6289085						
ANR	6289326	Symbol	task -> cmd		6289085						
ANR	6289327	Symbol	r_th_lock_new		6289085						
ANR	6289328	Symbol	cb		6289085						
ANR	6289329	Symbol	* task		6289085						
ANR	6289330	Symbol	task -> refcount		6289085						
ANR	6289331	Symbol	NULL		6289085						
ANR	6289332	Symbol	false		6289085						
ANR	6289333	Symbol	task -> cons_context -> cmd_depth		6289085						
ANR	6289334	Symbol	r_cons_context_new		6289085						
ANR	6289335	Symbol	* * task		6289085						
ANR	6289336	Symbol	core		6289085						
ANR	6289337	Symbol	R_NEW0		6289085						
ANR	6289338	Symbol	task		6289085						
ANR	6289339	Symbol	task -> dispatch_lock		6289085						
ANR	6289340	Symbol	task -> state		6289085						
ANR	6289341	Symbol	task -> res		6289085						
ANR	6289342	Symbol	task -> dispatch_cond		6289085						
ANR	6289343	Symbol	cmd		6289085						
ANR	6289344	Symbol	strdup		6289085						
ANR	6289345	Symbol	task -> transient		6289085						
ANR	6289346	Symbol	user		6289085						
ANR	6289347	Symbol	r_cons_singleton ( ) -> context		6289085						
ANR	6289348	Symbol	* r_cons_singleton		6289085						
ANR	6289349	Function	r_core_task_incref	230:0:5340:5553							
ANR	6289350	FunctionDef	r_core_task_incref (RCoreTask * task)		6289349	0					
ANR	6289351	CompoundStatement		230:48:5388:5553	6289349	0					
ANR	6289352	IfStatement	if ( ! task )		6289349	0					
ANR	6289353	Condition	! task	231:5:5395:5399	6289349	0	True				
ANR	6289354	UnaryOperationExpression	! task		6289349	0					
ANR	6289355	UnaryOperator	!		6289349	0					
ANR	6289356	Identifier	task		6289349	1					
ANR	6289357	CompoundStatement		2:12:13:13	6289349	1					
ANR	6289358	ReturnStatement	return ;	232:2:5406:5412	6289349	0	True				
ANR	6289359	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	234:1:5418:5442	6289349	1	True				
ANR	6289360	IdentifierDecl	old_sigset		6289349	0					
ANR	6289361	IdentifierDeclType	TASK_SIGSET_T		6289349	0					
ANR	6289362	Identifier	old_sigset		6289349	1					
ANR	6289363	ExpressionStatement	"tasks_lock_enter ( task -> core , & old_sigset )"	235:1:5445:5487	6289349	2	True				
ANR	6289364	CallExpression	"tasks_lock_enter ( task -> core , & old_sigset )"		6289349	0					
ANR	6289365	Callee	tasks_lock_enter		6289349	0					
ANR	6289366	Identifier	tasks_lock_enter		6289349	0					
ANR	6289367	ArgumentList	task -> core		6289349	1					
ANR	6289368	Argument	task -> core		6289349	0					
ANR	6289369	PtrMemberAccess	task -> core		6289349	0					
ANR	6289370	Identifier	task		6289349	0					
ANR	6289371	Identifier	core		6289349	1					
ANR	6289372	Argument	& old_sigset		6289349	1					
ANR	6289373	UnaryOperationExpression	& old_sigset		6289349	0					
ANR	6289374	UnaryOperator	&		6289349	0					
ANR	6289375	Identifier	old_sigset		6289349	1					
ANR	6289376	ExpressionStatement	task -> refcount ++	236:1:5490:5506	6289349	3	True				
ANR	6289377	PostIncDecOperationExpression	task -> refcount ++		6289349	0					
ANR	6289378	PtrMemberAccess	task -> refcount		6289349	0					
ANR	6289379	Identifier	task		6289349	0					
ANR	6289380	Identifier	refcount		6289349	1					
ANR	6289381	IncDec	++		6289349	1					
ANR	6289382	ExpressionStatement	"tasks_lock_leave ( task -> core , & old_sigset )"	237:1:5509:5551	6289349	4	True				
ANR	6289383	CallExpression	"tasks_lock_leave ( task -> core , & old_sigset )"		6289349	0					
ANR	6289384	Callee	tasks_lock_leave		6289349	0					
ANR	6289385	Identifier	tasks_lock_leave		6289349	0					
ANR	6289386	ArgumentList	task -> core		6289349	1					
ANR	6289387	Argument	task -> core		6289349	0					
ANR	6289388	PtrMemberAccess	task -> core		6289349	0					
ANR	6289389	Identifier	task		6289349	0					
ANR	6289390	Identifier	core		6289349	1					
ANR	6289391	Argument	& old_sigset		6289349	1					
ANR	6289392	UnaryOperationExpression	& old_sigset		6289349	0					
ANR	6289393	UnaryOperator	&		6289349	0					
ANR	6289394	Identifier	old_sigset		6289349	1					
ANR	6289395	ReturnType	R_API void		6289349	1					
ANR	6289396	Identifier	r_core_task_incref		6289349	2					
ANR	6289397	ParameterList	RCoreTask * task		6289349	3					
ANR	6289398	Parameter	RCoreTask * task	230:31:5371:5385	6289349	0	True				
ANR	6289399	ParameterType	RCoreTask *		6289349	0					
ANR	6289400	Identifier	task		6289349	1					
ANR	6289401	CFGEntryNode	ENTRY		6289349		True				
ANR	6289402	CFGExitNode	EXIT		6289349		True				
ANR	6289403	Symbol	task -> refcount		6289349						
ANR	6289404	Symbol	task		6289349						
ANR	6289405	Symbol	& old_sigset		6289349						
ANR	6289406	Symbol	old_sigset		6289349						
ANR	6289407	Symbol	task -> core		6289349						
ANR	6289408	Symbol	* task		6289349						
ANR	6289409	Function	r_core_task_decref	240:0:5556:5835							
ANR	6289410	FunctionDef	r_core_task_decref (RCoreTask * task)		6289409	0					
ANR	6289411	CompoundStatement		240:48:5604:5835	6289409	0					
ANR	6289412	IfStatement	if ( ! task )		6289409	0					
ANR	6289413	Condition	! task	241:5:5611:5615	6289409	0	True				
ANR	6289414	UnaryOperationExpression	! task		6289409	0					
ANR	6289415	UnaryOperator	!		6289409	0					
ANR	6289416	Identifier	task		6289409	1					
ANR	6289417	CompoundStatement		2:12:13:13	6289409	1					
ANR	6289418	ReturnStatement	return ;	242:2:5622:5628	6289409	0	True				
ANR	6289419	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	244:1:5634:5658	6289409	1	True				
ANR	6289420	IdentifierDecl	old_sigset		6289409	0					
ANR	6289421	IdentifierDeclType	TASK_SIGSET_T		6289409	0					
ANR	6289422	Identifier	old_sigset		6289409	1					
ANR	6289423	IdentifierDeclStatement	RCore * core = task -> core ;	245:1:5661:5685	6289409	2	True				
ANR	6289424	IdentifierDecl	* core = task -> core		6289409	0					
ANR	6289425	IdentifierDeclType	RCore *		6289409	0					
ANR	6289426	Identifier	core		6289409	1					
ANR	6289427	AssignmentExpression	* core = task -> core		6289409	2		=			
ANR	6289428	Identifier	core		6289409	0					
ANR	6289429	PtrMemberAccess	task -> core		6289409	1					
ANR	6289430	Identifier	task		6289409	0					
ANR	6289431	Identifier	core		6289409	1					
ANR	6289432	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	246:1:5688:5724	6289409	3	True				
ANR	6289433	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6289409	0					
ANR	6289434	Callee	tasks_lock_enter		6289409	0					
ANR	6289435	Identifier	tasks_lock_enter		6289409	0					
ANR	6289436	ArgumentList	core		6289409	1					
ANR	6289437	Argument	core		6289409	0					
ANR	6289438	Identifier	core		6289409	0					
ANR	6289439	Argument	& old_sigset		6289409	1					
ANR	6289440	UnaryOperationExpression	& old_sigset		6289409	0					
ANR	6289441	UnaryOperator	&		6289409	0					
ANR	6289442	Identifier	old_sigset		6289409	1					
ANR	6289443	ExpressionStatement	task -> refcount --	247:1:5727:5743	6289409	4	True				
ANR	6289444	PostIncDecOperationExpression	task -> refcount --		6289409	0					
ANR	6289445	PtrMemberAccess	task -> refcount		6289409	0					
ANR	6289446	Identifier	task		6289409	0					
ANR	6289447	Identifier	refcount		6289409	1					
ANR	6289448	IncDec	--		6289409	1					
ANR	6289449	IfStatement	if ( task -> refcount <= 0 )		6289409	5					
ANR	6289450	Condition	task -> refcount <= 0	248:5:5750:5768	6289409	0	True				
ANR	6289451	RelationalExpression	task -> refcount <= 0		6289409	0		<=			
ANR	6289452	PtrMemberAccess	task -> refcount		6289409	0					
ANR	6289453	Identifier	task		6289409	0					
ANR	6289454	Identifier	refcount		6289409	1					
ANR	6289455	PrimaryExpression	0		6289409	1					
ANR	6289456	CompoundStatement		9:26:166:166	6289409	1					
ANR	6289457	ExpressionStatement	task_free ( task )	249:2:5775:5791	6289409	0	True				
ANR	6289458	CallExpression	task_free ( task )		6289409	0					
ANR	6289459	Callee	task_free		6289409	0					
ANR	6289460	Identifier	task_free		6289409	0					
ANR	6289461	ArgumentList	task		6289409	1					
ANR	6289462	Argument	task		6289409	0					
ANR	6289463	Identifier	task		6289409	0					
ANR	6289464	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	251:1:5797:5833	6289409	6	True				
ANR	6289465	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6289409	0					
ANR	6289466	Callee	tasks_lock_leave		6289409	0					
ANR	6289467	Identifier	tasks_lock_leave		6289409	0					
ANR	6289468	ArgumentList	core		6289409	1					
ANR	6289469	Argument	core		6289409	0					
ANR	6289470	Identifier	core		6289409	0					
ANR	6289471	Argument	& old_sigset		6289409	1					
ANR	6289472	UnaryOperationExpression	& old_sigset		6289409	0					
ANR	6289473	UnaryOperator	&		6289409	0					
ANR	6289474	Identifier	old_sigset		6289409	1					
ANR	6289475	ReturnType	R_API void		6289409	1					
ANR	6289476	Identifier	r_core_task_decref		6289409	2					
ANR	6289477	ParameterList	RCoreTask * task		6289409	3					
ANR	6289478	Parameter	RCoreTask * task	240:31:5587:5601	6289409	0	True				
ANR	6289479	ParameterType	RCoreTask *		6289409	0					
ANR	6289480	Identifier	task		6289409	1					
ANR	6289481	CFGEntryNode	ENTRY		6289409		True				
ANR	6289482	CFGExitNode	EXIT		6289409		True				
ANR	6289483	Symbol	core		6289409						
ANR	6289484	Symbol	task -> refcount		6289409						
ANR	6289485	Symbol	task		6289409						
ANR	6289486	Symbol	& old_sigset		6289409						
ANR	6289487	Symbol	old_sigset		6289409						
ANR	6289488	Symbol	task -> core		6289409						
ANR	6289489	Symbol	* task		6289409						
ANR	6289490	Function	r_core_task_schedule	254:0:5838:7374							
ANR	6289491	FunctionDef	"r_core_task_schedule (RCoreTask * current , RTaskState next_state)"		6289490	0					
ANR	6289492	CompoundStatement		254:75:5913:7374	6289490	0					
ANR	6289493	IdentifierDeclStatement	RCore * core = current -> core ;	255:1:5916:5943	6289490	0	True				
ANR	6289494	IdentifierDecl	* core = current -> core		6289490	0					
ANR	6289495	IdentifierDeclType	RCore *		6289490	0					
ANR	6289496	Identifier	core		6289490	1					
ANR	6289497	AssignmentExpression	* core = current -> core		6289490	2		=			
ANR	6289498	Identifier	core		6289490	0					
ANR	6289499	PtrMemberAccess	current -> core		6289490	1					
ANR	6289500	Identifier	current		6289490	0					
ANR	6289501	Identifier	core		6289490	1					
ANR	6289502	IdentifierDeclStatement	bool stop = next_state != R_CORE_TASK_STATE_RUNNING ;	256:1:5946:5997	6289490	1	True				
ANR	6289503	IdentifierDecl	stop = next_state != R_CORE_TASK_STATE_RUNNING		6289490	0					
ANR	6289504	IdentifierDeclType	bool		6289490	0					
ANR	6289505	Identifier	stop		6289490	1					
ANR	6289506	AssignmentExpression	stop = next_state != R_CORE_TASK_STATE_RUNNING		6289490	2		=			
ANR	6289507	Identifier	stop		6289490	0					
ANR	6289508	EqualityExpression	next_state != R_CORE_TASK_STATE_RUNNING		6289490	1		!=			
ANR	6289509	Identifier	next_state		6289490	0					
ANR	6289510	Identifier	R_CORE_TASK_STATE_RUNNING		6289490	1					
ANR	6289511	IfStatement	if ( core -> oneshot_running || ( ! stop && core -> tasks_running == 1 && core -> oneshots_enqueued == 0 ) )		6289490	2					
ANR	6289512	Condition	core -> oneshot_running || ( ! stop && core -> tasks_running == 1 && core -> oneshots_enqueued == 0 )	258:5:6005:6096	6289490	0	True				
ANR	6289513	OrExpression	core -> oneshot_running || ( ! stop && core -> tasks_running == 1 && core -> oneshots_enqueued == 0 )		6289490	0		||			
ANR	6289514	PtrMemberAccess	core -> oneshot_running		6289490	0					
ANR	6289515	Identifier	core		6289490	0					
ANR	6289516	Identifier	oneshot_running		6289490	1					
ANR	6289517	AndExpression	! stop && core -> tasks_running == 1 && core -> oneshots_enqueued == 0		6289490	1		&&			
ANR	6289518	UnaryOperationExpression	! stop		6289490	0					
ANR	6289519	UnaryOperator	!		6289490	0					
ANR	6289520	Identifier	stop		6289490	1					
ANR	6289521	AndExpression	core -> tasks_running == 1 && core -> oneshots_enqueued == 0		6289490	1		&&			
ANR	6289522	EqualityExpression	core -> tasks_running == 1		6289490	0		==			
ANR	6289523	PtrMemberAccess	core -> tasks_running		6289490	0					
ANR	6289524	Identifier	core		6289490	0					
ANR	6289525	Identifier	tasks_running		6289490	1					
ANR	6289526	PrimaryExpression	1		6289490	1					
ANR	6289527	EqualityExpression	core -> oneshots_enqueued == 0		6289490	1		==			
ANR	6289528	PtrMemberAccess	core -> oneshots_enqueued		6289490	0					
ANR	6289529	Identifier	core		6289490	0					
ANR	6289530	Identifier	oneshots_enqueued		6289490	1					
ANR	6289531	PrimaryExpression	0		6289490	1					
ANR	6289532	CompoundStatement		5:99:185:185	6289490	1					
ANR	6289533	ReturnStatement	return ;	259:2:6103:6109	6289490	0	True				
ANR	6289534	ExpressionStatement	core -> current_task = NULL	262:1:6116:6141	6289490	3	True				
ANR	6289535	AssignmentExpression	core -> current_task = NULL		6289490	0		=			
ANR	6289536	PtrMemberAccess	core -> current_task		6289490	0					
ANR	6289537	Identifier	core		6289490	0					
ANR	6289538	Identifier	current_task		6289490	1					
ANR	6289539	Identifier	NULL		6289490	1					
ANR	6289540	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	264:1:6145:6169	6289490	4	True				
ANR	6289541	IdentifierDecl	old_sigset		6289490	0					
ANR	6289542	IdentifierDeclType	TASK_SIGSET_T		6289490	0					
ANR	6289543	Identifier	old_sigset		6289490	1					
ANR	6289544	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	265:1:6172:6208	6289490	5	True				
ANR	6289545	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6289490	0					
ANR	6289546	Callee	tasks_lock_enter		6289490	0					
ANR	6289547	Identifier	tasks_lock_enter		6289490	0					
ANR	6289548	ArgumentList	core		6289490	1					
ANR	6289549	Argument	core		6289490	0					
ANR	6289550	Identifier	core		6289490	0					
ANR	6289551	Argument	& old_sigset		6289490	1					
ANR	6289552	UnaryOperationExpression	& old_sigset		6289490	0					
ANR	6289553	UnaryOperator	&		6289490	0					
ANR	6289554	Identifier	old_sigset		6289490	1					
ANR	6289555	ExpressionStatement	current -> state = next_state	267:1:6212:6239	6289490	6	True				
ANR	6289556	AssignmentExpression	current -> state = next_state		6289490	0		=			
ANR	6289557	PtrMemberAccess	current -> state		6289490	0					
ANR	6289558	Identifier	current		6289490	0					
ANR	6289559	Identifier	state		6289490	1					
ANR	6289560	Identifier	next_state		6289490	1					
ANR	6289561	IfStatement	if ( stop )		6289490	7					
ANR	6289562	Condition	stop	269:5:6247:6250	6289490	0	True				
ANR	6289563	Identifier	stop		6289490	0					
ANR	6289564	CompoundStatement		16:11:339:339	6289490	1					
ANR	6289565	ExpressionStatement	core -> tasks_running --	270:2:6257:6278	6289490	0	True				
ANR	6289566	PostIncDecOperationExpression	core -> tasks_running --		6289490	0					
ANR	6289567	PtrMemberAccess	core -> tasks_running		6289490	0					
ANR	6289568	Identifier	core		6289490	0					
ANR	6289569	Identifier	tasks_running		6289490	1					
ANR	6289570	IncDec	--		6289490	1					
ANR	6289571	ExpressionStatement	r_th_lock_leave ( current -> dispatch_lock )	271:2:6282:6322	6289490	1	True				
ANR	6289572	CallExpression	r_th_lock_leave ( current -> dispatch_lock )		6289490	0					
ANR	6289573	Callee	r_th_lock_leave		6289490	0					
ANR	6289574	Identifier	r_th_lock_leave		6289490	0					
ANR	6289575	ArgumentList	current -> dispatch_lock		6289490	1					
ANR	6289576	Argument	current -> dispatch_lock		6289490	0					
ANR	6289577	PtrMemberAccess	current -> dispatch_lock		6289490	0					
ANR	6289578	Identifier	current		6289490	0					
ANR	6289579	Identifier	dispatch_lock		6289490	1					
ANR	6289580	IdentifierDeclStatement	OneShot * oneshot ;	276:1:6415:6431	6289490	8	True				
ANR	6289581	IdentifierDecl	* oneshot		6289490	0					
ANR	6289582	IdentifierDeclType	OneShot *		6289490	0					
ANR	6289583	Identifier	oneshot		6289490	1					
ANR	6289584	WhileStatement	while ( ( oneshot = r_list_pop_head ( core -> oneshot_queue ) ) )		6289490	9					
ANR	6289585	Condition	oneshot = r_list_pop_head ( core -> oneshot_queue )	277:8:6441:6489	6289490	0	True				
ANR	6289586	AssignmentExpression	oneshot = r_list_pop_head ( core -> oneshot_queue )		6289490	0		=			
ANR	6289587	Identifier	oneshot		6289490	0					
ANR	6289588	CallExpression	r_list_pop_head ( core -> oneshot_queue )		6289490	1					
ANR	6289589	Callee	r_list_pop_head		6289490	0					
ANR	6289590	Identifier	r_list_pop_head		6289490	0					
ANR	6289591	ArgumentList	core -> oneshot_queue		6289490	1					
ANR	6289592	Argument	core -> oneshot_queue		6289490	0					
ANR	6289593	PtrMemberAccess	core -> oneshot_queue		6289490	0					
ANR	6289594	Identifier	core		6289490	0					
ANR	6289595	Identifier	oneshot_queue		6289490	1					
ANR	6289596	CompoundStatement		24:59:578:578	6289490	1					
ANR	6289597	ExpressionStatement	core -> oneshots_enqueued --	278:2:6496:6521	6289490	0	True				
ANR	6289598	PostIncDecOperationExpression	core -> oneshots_enqueued --		6289490	0					
ANR	6289599	PtrMemberAccess	core -> oneshots_enqueued		6289490	0					
ANR	6289600	Identifier	core		6289490	0					
ANR	6289601	Identifier	oneshots_enqueued		6289490	1					
ANR	6289602	IncDec	--		6289490	1					
ANR	6289603	ExpressionStatement	core -> oneshot_running = true	279:2:6525:6553	6289490	1	True				
ANR	6289604	AssignmentExpression	core -> oneshot_running = true		6289490	0		=			
ANR	6289605	PtrMemberAccess	core -> oneshot_running		6289490	0					
ANR	6289606	Identifier	core		6289490	0					
ANR	6289607	Identifier	oneshot_running		6289490	1					
ANR	6289608	Identifier	true		6289490	1					
ANR	6289609	ExpressionStatement	oneshot -> func ( oneshot -> user )	280:2:6557:6586	6289490	2	True				
ANR	6289610	CallExpression	oneshot -> func ( oneshot -> user )		6289490	0					
ANR	6289611	Callee	oneshot -> func		6289490	0					
ANR	6289612	PtrMemberAccess	oneshot -> func		6289490	0					
ANR	6289613	Identifier	oneshot		6289490	0					
ANR	6289614	Identifier	func		6289490	1					
ANR	6289615	ArgumentList	oneshot -> user		6289490	1					
ANR	6289616	Argument	oneshot -> user		6289490	0					
ANR	6289617	PtrMemberAccess	oneshot -> user		6289490	0					
ANR	6289618	Identifier	oneshot		6289490	0					
ANR	6289619	Identifier	user		6289490	1					
ANR	6289620	ExpressionStatement	core -> oneshot_running = false	281:2:6590:6619	6289490	3	True				
ANR	6289621	AssignmentExpression	core -> oneshot_running = false		6289490	0		=			
ANR	6289622	PtrMemberAccess	core -> oneshot_running		6289490	0					
ANR	6289623	Identifier	core		6289490	0					
ANR	6289624	Identifier	oneshot_running		6289490	1					
ANR	6289625	Identifier	false		6289490	1					
ANR	6289626	ExpressionStatement	free ( oneshot )	282:2:6623:6637	6289490	4	True				
ANR	6289627	CallExpression	free ( oneshot )		6289490	0					
ANR	6289628	Callee	free		6289490	0					
ANR	6289629	Identifier	free		6289490	0					
ANR	6289630	ArgumentList	oneshot		6289490	1					
ANR	6289631	Argument	oneshot		6289490	0					
ANR	6289632	Identifier	oneshot		6289490	0					
ANR	6289633	IdentifierDeclStatement	RCoreTask * next = r_list_pop_head ( core -> tasks_queue ) ;	285:1:6644:6697	6289490	10	True				
ANR	6289634	IdentifierDecl	* next = r_list_pop_head ( core -> tasks_queue )		6289490	0					
ANR	6289635	IdentifierDeclType	RCoreTask *		6289490	0					
ANR	6289636	Identifier	next		6289490	1					
ANR	6289637	AssignmentExpression	* next = r_list_pop_head ( core -> tasks_queue )		6289490	2		=			
ANR	6289638	Identifier	next		6289490	0					
ANR	6289639	CallExpression	r_list_pop_head ( core -> tasks_queue )		6289490	1					
ANR	6289640	Callee	r_list_pop_head		6289490	0					
ANR	6289641	Identifier	r_list_pop_head		6289490	0					
ANR	6289642	ArgumentList	core -> tasks_queue		6289490	1					
ANR	6289643	Argument	core -> tasks_queue		6289490	0					
ANR	6289644	PtrMemberAccess	core -> tasks_queue		6289490	0					
ANR	6289645	Identifier	core		6289490	0					
ANR	6289646	Identifier	tasks_queue		6289490	1					
ANR	6289647	IfStatement	if ( next && ! stop )		6289490	11					
ANR	6289648	Condition	next && ! stop	287:5:6705:6717	6289490	0	True				
ANR	6289649	AndExpression	next && ! stop		6289490	0		&&			
ANR	6289650	Identifier	next		6289490	0					
ANR	6289651	UnaryOperationExpression	! stop		6289490	1					
ANR	6289652	UnaryOperator	!		6289490	0					
ANR	6289653	Identifier	stop		6289490	1					
ANR	6289654	CompoundStatement		34:20:806:806	6289490	1					
ANR	6289655	ExpressionStatement	"r_list_append ( core -> tasks_queue , current )"	288:2:6724:6766	6289490	0	True				
ANR	6289656	CallExpression	"r_list_append ( core -> tasks_queue , current )"		6289490	0					
ANR	6289657	Callee	r_list_append		6289490	0					
ANR	6289658	Identifier	r_list_append		6289490	0					
ANR	6289659	ArgumentList	core -> tasks_queue		6289490	1					
ANR	6289660	Argument	core -> tasks_queue		6289490	0					
ANR	6289661	PtrMemberAccess	core -> tasks_queue		6289490	0					
ANR	6289662	Identifier	core		6289490	0					
ANR	6289663	Identifier	tasks_queue		6289490	1					
ANR	6289664	Argument	current		6289490	1					
ANR	6289665	Identifier	current		6289490	0					
ANR	6289666	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	291:1:6773:6809	6289490	12	True				
ANR	6289667	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6289490	0					
ANR	6289668	Callee	tasks_lock_leave		6289490	0					
ANR	6289669	Identifier	tasks_lock_leave		6289490	0					
ANR	6289670	ArgumentList	core		6289490	1					
ANR	6289671	Argument	core		6289490	0					
ANR	6289672	Identifier	core		6289490	0					
ANR	6289673	Argument	& old_sigset		6289490	1					
ANR	6289674	UnaryOperationExpression	& old_sigset		6289490	0					
ANR	6289675	UnaryOperator	&		6289490	0					
ANR	6289676	Identifier	old_sigset		6289490	1					
ANR	6289677	IfStatement	if ( next )		6289490	13					
ANR	6289678	Condition	next	293:5:6817:6820	6289490	0	True				
ANR	6289679	Identifier	next		6289490	0					
ANR	6289680	CompoundStatement		40:11:909:909	6289490	1					
ANR	6289681	ExpressionStatement	r_cons_context_reset ( )	294:2:6827:6850	6289490	0	True				
ANR	6289682	CallExpression	r_cons_context_reset ( )		6289490	0					
ANR	6289683	Callee	r_cons_context_reset		6289490	0					
ANR	6289684	Identifier	r_cons_context_reset		6289490	0					
ANR	6289685	ArgumentList			6289490	1					
ANR	6289686	ExpressionStatement	r_th_lock_enter ( next -> dispatch_lock )	295:2:6854:6891	6289490	1	True				
ANR	6289687	CallExpression	r_th_lock_enter ( next -> dispatch_lock )		6289490	0					
ANR	6289688	Callee	r_th_lock_enter		6289490	0					
ANR	6289689	Identifier	r_th_lock_enter		6289490	0					
ANR	6289690	ArgumentList	next -> dispatch_lock		6289490	1					
ANR	6289691	Argument	next -> dispatch_lock		6289490	0					
ANR	6289692	PtrMemberAccess	next -> dispatch_lock		6289490	0					
ANR	6289693	Identifier	next		6289490	0					
ANR	6289694	Identifier	dispatch_lock		6289490	1					
ANR	6289695	ExpressionStatement	next -> dispatched = true	296:2:6895:6918	6289490	2	True				
ANR	6289696	AssignmentExpression	next -> dispatched = true		6289490	0		=			
ANR	6289697	PtrMemberAccess	next -> dispatched		6289490	0					
ANR	6289698	Identifier	next		6289490	0					
ANR	6289699	Identifier	dispatched		6289490	1					
ANR	6289700	Identifier	true		6289490	1					
ANR	6289701	ExpressionStatement	r_th_lock_leave ( next -> dispatch_lock )	297:2:6922:6959	6289490	3	True				
ANR	6289702	CallExpression	r_th_lock_leave ( next -> dispatch_lock )		6289490	0					
ANR	6289703	Callee	r_th_lock_leave		6289490	0					
ANR	6289704	Identifier	r_th_lock_leave		6289490	0					
ANR	6289705	ArgumentList	next -> dispatch_lock		6289490	1					
ANR	6289706	Argument	next -> dispatch_lock		6289490	0					
ANR	6289707	PtrMemberAccess	next -> dispatch_lock		6289490	0					
ANR	6289708	Identifier	next		6289490	0					
ANR	6289709	Identifier	dispatch_lock		6289490	1					
ANR	6289710	ExpressionStatement	r_th_cond_signal ( next -> dispatch_cond )	298:2:6963:7001	6289490	4	True				
ANR	6289711	CallExpression	r_th_cond_signal ( next -> dispatch_cond )		6289490	0					
ANR	6289712	Callee	r_th_cond_signal		6289490	0					
ANR	6289713	Identifier	r_th_cond_signal		6289490	0					
ANR	6289714	ArgumentList	next -> dispatch_cond		6289490	1					
ANR	6289715	Argument	next -> dispatch_cond		6289490	0					
ANR	6289716	PtrMemberAccess	next -> dispatch_cond		6289490	0					
ANR	6289717	Identifier	next		6289490	0					
ANR	6289718	Identifier	dispatch_cond		6289490	1					
ANR	6289719	IfStatement	if ( ! stop )		6289490	5					
ANR	6289720	Condition	! stop	299:6:7009:7013	6289490	0	True				
ANR	6289721	UnaryOperationExpression	! stop		6289490	0					
ANR	6289722	UnaryOperator	!		6289490	0					
ANR	6289723	Identifier	stop		6289490	1					
ANR	6289724	CompoundStatement		46:13:1102:1102	6289490	1					
ANR	6289725	WhileStatement	while ( ! current -> dispatched )		6289490	0					
ANR	6289726	Condition	! current -> dispatched	300:10:7028:7047	6289490	0	True				
ANR	6289727	UnaryOperationExpression	! current -> dispatched		6289490	0					
ANR	6289728	UnaryOperator	!		6289490	0					
ANR	6289729	PtrMemberAccess	current -> dispatched		6289490	1					
ANR	6289730	Identifier	current		6289490	0					
ANR	6289731	Identifier	dispatched		6289490	1					
ANR	6289732	CompoundStatement		47:32:1136:1136	6289490	1					
ANR	6289733	ExpressionStatement	"r_th_cond_wait ( current -> dispatch_cond , current -> dispatch_lock )"	301:4:7056:7119	6289490	0	True				
ANR	6289734	CallExpression	"r_th_cond_wait ( current -> dispatch_cond , current -> dispatch_lock )"		6289490	0					
ANR	6289735	Callee	r_th_cond_wait		6289490	0					
ANR	6289736	Identifier	r_th_cond_wait		6289490	0					
ANR	6289737	ArgumentList	current -> dispatch_cond		6289490	1					
ANR	6289738	Argument	current -> dispatch_cond		6289490	0					
ANR	6289739	PtrMemberAccess	current -> dispatch_cond		6289490	0					
ANR	6289740	Identifier	current		6289490	0					
ANR	6289741	Identifier	dispatch_cond		6289490	1					
ANR	6289742	Argument	current -> dispatch_lock		6289490	1					
ANR	6289743	PtrMemberAccess	current -> dispatch_lock		6289490	0					
ANR	6289744	Identifier	current		6289490	0					
ANR	6289745	Identifier	dispatch_lock		6289490	1					
ANR	6289746	ExpressionStatement	current -> dispatched = false	303:3:7129:7156	6289490	1	True				
ANR	6289747	AssignmentExpression	current -> dispatched = false		6289490	0		=			
ANR	6289748	PtrMemberAccess	current -> dispatched		6289490	0					
ANR	6289749	Identifier	current		6289490	0					
ANR	6289750	Identifier	dispatched		6289490	1					
ANR	6289751	Identifier	false		6289490	1					
ANR	6289752	IfStatement	if ( ! stop )		6289490	14					
ANR	6289753	Condition	! stop	307:5:7171:7175	6289490	0	True				
ANR	6289754	UnaryOperationExpression	! stop		6289490	0					
ANR	6289755	UnaryOperator	!		6289490	0					
ANR	6289756	Identifier	stop		6289490	1					
ANR	6289757	CompoundStatement		54:12:1264:1264	6289490	1					
ANR	6289758	ExpressionStatement	core -> current_task = current	308:2:7182:7210	6289490	0	True				
ANR	6289759	AssignmentExpression	core -> current_task = current		6289490	0		=			
ANR	6289760	PtrMemberAccess	core -> current_task		6289490	0					
ANR	6289761	Identifier	core		6289490	0					
ANR	6289762	Identifier	current_task		6289490	1					
ANR	6289763	Identifier	current		6289490	1					
ANR	6289764	IfStatement	if ( current -> cons_context )		6289490	1					
ANR	6289765	Condition	current -> cons_context	309:6:7218:7238	6289490	0	True				
ANR	6289766	PtrMemberAccess	current -> cons_context		6289490	0					
ANR	6289767	Identifier	current		6289490	0					
ANR	6289768	Identifier	cons_context		6289490	1					
ANR	6289769	CompoundStatement		56:29:1327:1327	6289490	1					
ANR	6289770	ExpressionStatement	r_cons_context_load ( current -> cons_context )	310:3:7246:7289	6289490	0	True				
ANR	6289771	CallExpression	r_cons_context_load ( current -> cons_context )		6289490	0					
ANR	6289772	Callee	r_cons_context_load		6289490	0					
ANR	6289773	Identifier	r_cons_context_load		6289490	0					
ANR	6289774	ArgumentList	current -> cons_context		6289490	1					
ANR	6289775	Argument	current -> cons_context		6289490	0					
ANR	6289776	PtrMemberAccess	current -> cons_context		6289490	0					
ANR	6289777	Identifier	current		6289490	0					
ANR	6289778	Identifier	cons_context		6289490	1					
ANR	6289779	ElseStatement	else		6289490	0					
ANR	6289780	CompoundStatement		58:9:1386:1386	6289490	0					
ANR	6289781	ExpressionStatement	r_cons_context_reset ( )	312:3:7305:7328	6289490	0	True				
ANR	6289782	CallExpression	r_cons_context_reset ( )		6289490	0					
ANR	6289783	Callee	r_cons_context_reset		6289490	0					
ANR	6289784	Identifier	r_cons_context_reset		6289490	0					
ANR	6289785	ArgumentList			6289490	1					
ANR	6289786	ElseStatement	else		6289490	0					
ANR	6289787	CompoundStatement		61:8:1428:1428	6289490	0					
ANR	6289788	ExpressionStatement	r_cons_context_reset ( )	315:2:7346:7369	6289490	0	True				
ANR	6289789	CallExpression	r_cons_context_reset ( )		6289490	0					
ANR	6289790	Callee	r_cons_context_reset		6289490	0					
ANR	6289791	Identifier	r_cons_context_reset		6289490	0					
ANR	6289792	ArgumentList			6289490	1					
ANR	6289793	ReturnType	R_API void		6289490	1					
ANR	6289794	Identifier	r_core_task_schedule		6289490	2					
ANR	6289795	ParameterList	"RCoreTask * current , RTaskState next_state"		6289490	3					
ANR	6289796	Parameter	RCoreTask * current	254:32:5870:5887	6289490	0	True				
ANR	6289797	ParameterType	RCoreTask *		6289490	0					
ANR	6289798	Identifier	current		6289490	1					
ANR	6289799	Parameter	RTaskState next_state	254:52:5890:5910	6289490	1	True				
ANR	6289800	ParameterType	RTaskState		6289490	0					
ANR	6289801	Identifier	next_state		6289490	1					
ANR	6289802	CFGEntryNode	ENTRY		6289490		True				
ANR	6289803	CFGExitNode	EXIT		6289490		True				
ANR	6289804	Symbol	next		6289490						
ANR	6289805	Symbol	& old_sigset		6289490						
ANR	6289806	Symbol	* oneshot		6289490						
ANR	6289807	Symbol	* current		6289490						
ANR	6289808	Symbol	* core		6289490						
ANR	6289809	Symbol	* next		6289490						
ANR	6289810	Symbol	current -> dispatch_lock		6289490						
ANR	6289811	Symbol	core -> oneshot_queue		6289490						
ANR	6289812	Symbol	oneshot -> user		6289490						
ANR	6289813	Symbol	next_state		6289490						
ANR	6289814	Symbol	current		6289490						
ANR	6289815	Symbol	current -> state		6289490						
ANR	6289816	Symbol	current -> core		6289490						
ANR	6289817	Symbol	core -> tasks_running		6289490						
ANR	6289818	Symbol	old_sigset		6289490						
ANR	6289819	Symbol	NULL		6289490						
ANR	6289820	Symbol	false		6289490						
ANR	6289821	Symbol	core -> tasks_queue		6289490						
ANR	6289822	Symbol	current -> dispatched		6289490						
ANR	6289823	Symbol	next -> dispatched		6289490						
ANR	6289824	Symbol	oneshot		6289490						
ANR	6289825	Symbol	core		6289490						
ANR	6289826	Symbol	core -> oneshots_enqueued		6289490						
ANR	6289827	Symbol	core -> oneshot_running		6289490						
ANR	6289828	Symbol	r_list_pop_head		6289490						
ANR	6289829	Symbol	stop		6289490						
ANR	6289830	Symbol	next -> dispatch_cond		6289490						
ANR	6289831	Symbol	true		6289490						
ANR	6289832	Symbol	current -> cons_context		6289490						
ANR	6289833	Symbol	R_CORE_TASK_STATE_RUNNING		6289490						
ANR	6289834	Symbol	next -> dispatch_lock		6289490						
ANR	6289835	Symbol	core -> current_task		6289490						
ANR	6289836	Symbol	current -> dispatch_cond		6289490						
ANR	6289837	Function	task_wakeup	319:0:7377:8246							
ANR	6289838	FunctionDef	task_wakeup (RCoreTask * current)		6289837	0					
ANR	6289839	CompoundStatement		319:44:7421:8246	6289837	0					
ANR	6289840	IdentifierDeclStatement	RCore * core = current -> core ;	320:1:7424:7451	6289837	0	True				
ANR	6289841	IdentifierDecl	* core = current -> core		6289837	0					
ANR	6289842	IdentifierDeclType	RCore *		6289837	0					
ANR	6289843	Identifier	core		6289837	1					
ANR	6289844	AssignmentExpression	* core = current -> core		6289837	2		=			
ANR	6289845	Identifier	core		6289837	0					
ANR	6289846	PtrMemberAccess	current -> core		6289837	1					
ANR	6289847	Identifier	current		6289837	0					
ANR	6289848	Identifier	core		6289837	1					
ANR	6289849	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	322:1:7455:7479	6289837	1	True				
ANR	6289850	IdentifierDecl	old_sigset		6289837	0					
ANR	6289851	IdentifierDeclType	TASK_SIGSET_T		6289837	0					
ANR	6289852	Identifier	old_sigset		6289837	1					
ANR	6289853	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	323:1:7482:7518	6289837	2	True				
ANR	6289854	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6289837	0					
ANR	6289855	Callee	tasks_lock_enter		6289837	0					
ANR	6289856	Identifier	tasks_lock_enter		6289837	0					
ANR	6289857	ArgumentList	core		6289837	1					
ANR	6289858	Argument	core		6289837	0					
ANR	6289859	Identifier	core		6289837	0					
ANR	6289860	Argument	& old_sigset		6289837	1					
ANR	6289861	UnaryOperationExpression	& old_sigset		6289837	0					
ANR	6289862	UnaryOperator	&		6289837	0					
ANR	6289863	Identifier	old_sigset		6289837	1					
ANR	6289864	ExpressionStatement	core -> tasks_running ++	325:1:7522:7543	6289837	3	True				
ANR	6289865	PostIncDecOperationExpression	core -> tasks_running ++		6289837	0					
ANR	6289866	PtrMemberAccess	core -> tasks_running		6289837	0					
ANR	6289867	Identifier	core		6289837	0					
ANR	6289868	Identifier	tasks_running		6289837	1					
ANR	6289869	IncDec	++		6289837	1					
ANR	6289870	ExpressionStatement	current -> state = R_CORE_TASK_STATE_RUNNING	326:1:7546:7588	6289837	4	True				
ANR	6289871	AssignmentExpression	current -> state = R_CORE_TASK_STATE_RUNNING		6289837	0		=			
ANR	6289872	PtrMemberAccess	current -> state		6289837	0					
ANR	6289873	Identifier	current		6289837	0					
ANR	6289874	Identifier	state		6289837	1					
ANR	6289875	Identifier	R_CORE_TASK_STATE_RUNNING		6289837	1					
ANR	6289876	IdentifierDeclStatement	bool single = core -> tasks_running == 1 || core -> tasks_running == 0 ;	329:1:7635:7701	6289837	5	True				
ANR	6289877	IdentifierDecl	single = core -> tasks_running == 1 || core -> tasks_running == 0		6289837	0					
ANR	6289878	IdentifierDeclType	bool		6289837	0					
ANR	6289879	Identifier	single		6289837	1					
ANR	6289880	AssignmentExpression	single = core -> tasks_running == 1 || core -> tasks_running == 0		6289837	2		=			
ANR	6289881	Identifier	single		6289837	0					
ANR	6289882	OrExpression	core -> tasks_running == 1 || core -> tasks_running == 0		6289837	1		||			
ANR	6289883	EqualityExpression	core -> tasks_running == 1		6289837	0		==			
ANR	6289884	PtrMemberAccess	core -> tasks_running		6289837	0					
ANR	6289885	Identifier	core		6289837	0					
ANR	6289886	Identifier	tasks_running		6289837	1					
ANR	6289887	PrimaryExpression	1		6289837	1					
ANR	6289888	EqualityExpression	core -> tasks_running == 0		6289837	1		==			
ANR	6289889	PtrMemberAccess	core -> tasks_running		6289837	0					
ANR	6289890	Identifier	core		6289837	0					
ANR	6289891	Identifier	tasks_running		6289837	1					
ANR	6289892	PrimaryExpression	0		6289837	1					
ANR	6289893	ExpressionStatement	r_th_lock_enter ( current -> dispatch_lock )	331:1:7705:7745	6289837	6	True				
ANR	6289894	CallExpression	r_th_lock_enter ( current -> dispatch_lock )		6289837	0					
ANR	6289895	Callee	r_th_lock_enter		6289837	0					
ANR	6289896	Identifier	r_th_lock_enter		6289837	0					
ANR	6289897	ArgumentList	current -> dispatch_lock		6289837	1					
ANR	6289898	Argument	current -> dispatch_lock		6289837	0					
ANR	6289899	PtrMemberAccess	current -> dispatch_lock		6289837	0					
ANR	6289900	Identifier	current		6289837	0					
ANR	6289901	Identifier	dispatch_lock		6289837	1					
ANR	6289902	IfStatement	if ( ! single )		6289837	7					
ANR	6289903	Condition	! single	335:5:7831:7837	6289837	0	True				
ANR	6289904	UnaryOperationExpression	! single		6289837	0					
ANR	6289905	UnaryOperator	!		6289837	0					
ANR	6289906	Identifier	single		6289837	1					
ANR	6289907	CompoundStatement		17:14:418:418	6289837	1					
ANR	6289908	ExpressionStatement	"r_list_append ( current -> core -> tasks_queue , current )"	336:2:7844:7895	6289837	0	True				
ANR	6289909	CallExpression	"r_list_append ( current -> core -> tasks_queue , current )"		6289837	0					
ANR	6289910	Callee	r_list_append		6289837	0					
ANR	6289911	Identifier	r_list_append		6289837	0					
ANR	6289912	ArgumentList	current -> core -> tasks_queue		6289837	1					
ANR	6289913	Argument	current -> core -> tasks_queue		6289837	0					
ANR	6289914	PtrMemberAccess	current -> core -> tasks_queue		6289837	0					
ANR	6289915	PtrMemberAccess	current -> core		6289837	0					
ANR	6289916	Identifier	current		6289837	0					
ANR	6289917	Identifier	core		6289837	1					
ANR	6289918	Identifier	tasks_queue		6289837	1					
ANR	6289919	Argument	current		6289837	1					
ANR	6289920	Identifier	current		6289837	0					
ANR	6289921	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	339:1:7902:7938	6289837	8	True				
ANR	6289922	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6289837	0					
ANR	6289923	Callee	tasks_lock_leave		6289837	0					
ANR	6289924	Identifier	tasks_lock_leave		6289837	0					
ANR	6289925	ArgumentList	core		6289837	1					
ANR	6289926	Argument	core		6289837	0					
ANR	6289927	Identifier	core		6289837	0					
ANR	6289928	Argument	& old_sigset		6289837	1					
ANR	6289929	UnaryOperationExpression	& old_sigset		6289837	0					
ANR	6289930	UnaryOperator	&		6289837	0					
ANR	6289931	Identifier	old_sigset		6289837	1					
ANR	6289932	IfStatement	if ( ! single )		6289837	9					
ANR	6289933	Condition	! single	341:5:7946:7952	6289837	0	True				
ANR	6289934	UnaryOperationExpression	! single		6289837	0					
ANR	6289935	UnaryOperator	!		6289837	0					
ANR	6289936	Identifier	single		6289837	1					
ANR	6289937	CompoundStatement		23:14:533:533	6289837	1					
ANR	6289938	WhileStatement	while ( ! current -> dispatched )		6289837	0					
ANR	6289939	Condition	! current -> dispatched	342:9:7966:7985	6289837	0	True				
ANR	6289940	UnaryOperationExpression	! current -> dispatched		6289837	0					
ANR	6289941	UnaryOperator	!		6289837	0					
ANR	6289942	PtrMemberAccess	current -> dispatched		6289837	1					
ANR	6289943	Identifier	current		6289837	0					
ANR	6289944	Identifier	dispatched		6289837	1					
ANR	6289945	CompoundStatement		24:31:566:566	6289837	1					
ANR	6289946	ExpressionStatement	"r_th_cond_wait ( current -> dispatch_cond , current -> dispatch_lock )"	343:3:7993:8056	6289837	0	True				
ANR	6289947	CallExpression	"r_th_cond_wait ( current -> dispatch_cond , current -> dispatch_lock )"		6289837	0					
ANR	6289948	Callee	r_th_cond_wait		6289837	0					
ANR	6289949	Identifier	r_th_cond_wait		6289837	0					
ANR	6289950	ArgumentList	current -> dispatch_cond		6289837	1					
ANR	6289951	Argument	current -> dispatch_cond		6289837	0					
ANR	6289952	PtrMemberAccess	current -> dispatch_cond		6289837	0					
ANR	6289953	Identifier	current		6289837	0					
ANR	6289954	Identifier	dispatch_cond		6289837	1					
ANR	6289955	Argument	current -> dispatch_lock		6289837	1					
ANR	6289956	PtrMemberAccess	current -> dispatch_lock		6289837	0					
ANR	6289957	Identifier	current		6289837	0					
ANR	6289958	Identifier	dispatch_lock		6289837	1					
ANR	6289959	ExpressionStatement	current -> dispatched = false	345:2:8064:8091	6289837	1	True				
ANR	6289960	AssignmentExpression	current -> dispatched = false		6289837	0		=			
ANR	6289961	PtrMemberAccess	current -> dispatched		6289837	0					
ANR	6289962	Identifier	current		6289837	0					
ANR	6289963	Identifier	dispatched		6289837	1					
ANR	6289964	Identifier	false		6289837	1					
ANR	6289965	ExpressionStatement	core -> current_task = current	348:1:8098:8126	6289837	10	True				
ANR	6289966	AssignmentExpression	core -> current_task = current		6289837	0		=			
ANR	6289967	PtrMemberAccess	core -> current_task		6289837	0					
ANR	6289968	Identifier	core		6289837	0					
ANR	6289969	Identifier	current_task		6289837	1					
ANR	6289970	Identifier	current		6289837	1					
ANR	6289971	IfStatement	if ( current -> cons_context )		6289837	11					
ANR	6289972	Condition	current -> cons_context	350:5:8134:8154	6289837	0	True				
ANR	6289973	PtrMemberAccess	current -> cons_context		6289837	0					
ANR	6289974	Identifier	current		6289837	0					
ANR	6289975	Identifier	cons_context		6289837	1					
ANR	6289976	CompoundStatement		32:28:735:735	6289837	1					
ANR	6289977	ExpressionStatement	r_cons_context_load ( current -> cons_context )	351:2:8161:8204	6289837	0	True				
ANR	6289978	CallExpression	r_cons_context_load ( current -> cons_context )		6289837	0					
ANR	6289979	Callee	r_cons_context_load		6289837	0					
ANR	6289980	Identifier	r_cons_context_load		6289837	0					
ANR	6289981	ArgumentList	current -> cons_context		6289837	1					
ANR	6289982	Argument	current -> cons_context		6289837	0					
ANR	6289983	PtrMemberAccess	current -> cons_context		6289837	0					
ANR	6289984	Identifier	current		6289837	0					
ANR	6289985	Identifier	cons_context		6289837	1					
ANR	6289986	ElseStatement	else		6289837	0					
ANR	6289987	CompoundStatement		34:8:792:792	6289837	0					
ANR	6289988	ExpressionStatement	r_cons_context_reset ( )	353:2:8218:8241	6289837	0	True				
ANR	6289989	CallExpression	r_cons_context_reset ( )		6289837	0					
ANR	6289990	Callee	r_cons_context_reset		6289837	0					
ANR	6289991	Identifier	r_cons_context_reset		6289837	0					
ANR	6289992	ArgumentList			6289837	1					
ANR	6289993	ReturnType	static void		6289837	1					
ANR	6289994	Identifier	task_wakeup		6289837	2					
ANR	6289995	ParameterList	RCoreTask * current		6289837	3					
ANR	6289996	Parameter	RCoreTask * current	319:24:7401:7418	6289837	0	True				
ANR	6289997	ParameterType	RCoreTask *		6289837	0					
ANR	6289998	Identifier	current		6289837	1					
ANR	6289999	CFGEntryNode	ENTRY		6289837		True				
ANR	6290000	CFGExitNode	EXIT		6289837		True				
ANR	6290001	Symbol	& old_sigset		6289837						
ANR	6290002	Symbol	* current		6289837						
ANR	6290003	Symbol	* core		6289837						
ANR	6290004	Symbol	false		6289837						
ANR	6290005	Symbol	current -> core -> tasks_queue		6289837						
ANR	6290006	Symbol	current -> dispatched		6289837						
ANR	6290007	Symbol	current -> dispatch_lock		6289837						
ANR	6290008	Symbol	single		6289837						
ANR	6290009	Symbol	core		6289837						
ANR	6290010	Symbol	current		6289837						
ANR	6290011	Symbol	* * current		6289837						
ANR	6290012	Symbol	current -> state		6289837						
ANR	6290013	Symbol	current -> core		6289837						
ANR	6290014	Symbol	core -> tasks_running		6289837						
ANR	6290015	Symbol	old_sigset		6289837						
ANR	6290016	Symbol	current -> cons_context		6289837						
ANR	6290017	Symbol	R_CORE_TASK_STATE_RUNNING		6289837						
ANR	6290018	Symbol	* current -> core		6289837						
ANR	6290019	Symbol	core -> current_task		6289837						
ANR	6290020	Symbol	current -> dispatch_cond		6289837						
ANR	6290021	Function	r_core_task_continue	357:0:8249:8351							
ANR	6290022	FunctionDef	r_core_task_continue (RCoreTask * t)		6290021	0					
ANR	6290023	CompoundStatement		357:46:8295:8351	6290021	0					
ANR	6290024	ExpressionStatement	"r_core_task_schedule ( t , R_CORE_TASK_STATE_RUNNING )"	358:1:8298:8349	6290021	0	True				
ANR	6290025	CallExpression	"r_core_task_schedule ( t , R_CORE_TASK_STATE_RUNNING )"		6290021	0					
ANR	6290026	Callee	r_core_task_schedule		6290021	0					
ANR	6290027	Identifier	r_core_task_schedule		6290021	0					
ANR	6290028	ArgumentList	t		6290021	1					
ANR	6290029	Argument	t		6290021	0					
ANR	6290030	Identifier	t		6290021	0					
ANR	6290031	Argument	R_CORE_TASK_STATE_RUNNING		6290021	1					
ANR	6290032	Identifier	R_CORE_TASK_STATE_RUNNING		6290021	0					
ANR	6290033	ReturnType	R_API void		6290021	1					
ANR	6290034	Identifier	r_core_task_continue		6290021	2					
ANR	6290035	ParameterList	RCoreTask * t		6290021	3					
ANR	6290036	Parameter	RCoreTask * t	357:32:8281:8292	6290021	0	True				
ANR	6290037	ParameterType	RCoreTask *		6290021	0					
ANR	6290038	Identifier	t		6290021	1					
ANR	6290039	CFGEntryNode	ENTRY		6290021		True				
ANR	6290040	CFGExitNode	EXIT		6290021		True				
ANR	6290041	Symbol	t		6290021						
ANR	6290042	Symbol	R_CORE_TASK_STATE_RUNNING		6290021						
ANR	6290043	Function	task_end	361:0:8354:8442							
ANR	6290044	FunctionDef	task_end (RCoreTask * t)		6290043	0					
ANR	6290045	CompoundStatement		361:35:8389:8442	6290043	0					
ANR	6290046	ExpressionStatement	"r_core_task_schedule ( t , R_CORE_TASK_STATE_DONE )"	362:1:8392:8440	6290043	0	True				
ANR	6290047	CallExpression	"r_core_task_schedule ( t , R_CORE_TASK_STATE_DONE )"		6290043	0					
ANR	6290048	Callee	r_core_task_schedule		6290043	0					
ANR	6290049	Identifier	r_core_task_schedule		6290043	0					
ANR	6290050	ArgumentList	t		6290043	1					
ANR	6290051	Argument	t		6290043	0					
ANR	6290052	Identifier	t		6290043	0					
ANR	6290053	Argument	R_CORE_TASK_STATE_DONE		6290043	1					
ANR	6290054	Identifier	R_CORE_TASK_STATE_DONE		6290043	0					
ANR	6290055	ReturnType	static void		6290043	1					
ANR	6290056	Identifier	task_end		6290043	2					
ANR	6290057	ParameterList	RCoreTask * t		6290043	3					
ANR	6290058	Parameter	RCoreTask * t	361:21:8375:8386	6290043	0	True				
ANR	6290059	ParameterType	RCoreTask *		6290043	0					
ANR	6290060	Identifier	t		6290043	1					
ANR	6290061	CFGEntryNode	ENTRY		6290043		True				
ANR	6290062	CFGExitNode	EXIT		6290043		True				
ANR	6290063	Symbol	R_CORE_TASK_STATE_DONE		6290043						
ANR	6290064	Symbol	t		6290043						
ANR	6290065	Function	task_run	365:0:8445:9660							
ANR	6290066	FunctionDef	task_run (RCoreTask * task)		6290065	0					
ANR	6290067	CompoundStatement		365:52:8497:9660	6290065	0					
ANR	6290068	IdentifierDeclStatement	RCore * core = task -> core ;	366:1:8500:8524	6290065	0	True				
ANR	6290069	IdentifierDecl	* core = task -> core		6290065	0					
ANR	6290070	IdentifierDeclType	RCore *		6290065	0					
ANR	6290071	Identifier	core		6290065	1					
ANR	6290072	AssignmentExpression	* core = task -> core		6290065	2		=			
ANR	6290073	Identifier	core		6290065	0					
ANR	6290074	PtrMemberAccess	task -> core		6290065	1					
ANR	6290075	Identifier	task		6290065	0					
ANR	6290076	Identifier	core		6290065	1					
ANR	6290077	ExpressionStatement	task_wakeup ( task )	368:1:8528:8546	6290065	1	True				
ANR	6290078	CallExpression	task_wakeup ( task )		6290065	0					
ANR	6290079	Callee	task_wakeup		6290065	0					
ANR	6290080	Identifier	task_wakeup		6290065	0					
ANR	6290081	ArgumentList	task		6290065	1					
ANR	6290082	Argument	task		6290065	0					
ANR	6290083	Identifier	task		6290065	0					
ANR	6290084	IfStatement	if ( task -> cons_context && task -> cons_context -> breaked )		6290065	2					
ANR	6290085	Condition	task -> cons_context && task -> cons_context -> breaked	370:5:8554:8602	6290065	0	True				
ANR	6290086	AndExpression	task -> cons_context && task -> cons_context -> breaked		6290065	0		&&			
ANR	6290087	PtrMemberAccess	task -> cons_context		6290065	0					
ANR	6290088	Identifier	task		6290065	0					
ANR	6290089	Identifier	cons_context		6290065	1					
ANR	6290090	PtrMemberAccess	task -> cons_context -> breaked		6290065	1					
ANR	6290091	PtrMemberAccess	task -> cons_context		6290065	0					
ANR	6290092	Identifier	task		6290065	0					
ANR	6290093	Identifier	cons_context		6290065	1					
ANR	6290094	Identifier	breaked		6290065	1					
ANR	6290095	CompoundStatement		6:56:107:107	6290065	1					
ANR	6290096	GotoStatement	goto stillbirth ;	372:2:8656:8671	6290065	0	True				
ANR	6290097	Identifier	stillbirth		6290065	0					
ANR	6290098	IdentifierDeclStatement	char * res_str ;	375:1:8678:8691	6290065	3	True				
ANR	6290099	IdentifierDecl	* res_str		6290065	0					
ANR	6290100	IdentifierDeclType	char *		6290065	0					
ANR	6290101	Identifier	res_str		6290065	1					
ANR	6290102	IfStatement	if ( task == task -> core -> main_task )		6290065	4					
ANR	6290103	Condition	task == task -> core -> main_task	376:5:8698:8726	6290065	0	True				
ANR	6290104	EqualityExpression	task == task -> core -> main_task		6290065	0		==			
ANR	6290105	Identifier	task		6290065	0					
ANR	6290106	PtrMemberAccess	task -> core -> main_task		6290065	1					
ANR	6290107	PtrMemberAccess	task -> core		6290065	0					
ANR	6290108	Identifier	task		6290065	0					
ANR	6290109	Identifier	core		6290065	1					
ANR	6290110	Identifier	main_task		6290065	1					
ANR	6290111	CompoundStatement		12:36:231:231	6290065	1					
ANR	6290112	ExpressionStatement	"r_core_cmd ( core , task -> cmd , task -> cmd_log )"	377:2:8733:8776	6290065	0	True				
ANR	6290113	CallExpression	"r_core_cmd ( core , task -> cmd , task -> cmd_log )"		6290065	0					
ANR	6290114	Callee	r_core_cmd		6290065	0					
ANR	6290115	Identifier	r_core_cmd		6290065	0					
ANR	6290116	ArgumentList	core		6290065	1					
ANR	6290117	Argument	core		6290065	0					
ANR	6290118	Identifier	core		6290065	0					
ANR	6290119	Argument	task -> cmd		6290065	1					
ANR	6290120	PtrMemberAccess	task -> cmd		6290065	0					
ANR	6290121	Identifier	task		6290065	0					
ANR	6290122	Identifier	cmd		6290065	1					
ANR	6290123	Argument	task -> cmd_log		6290065	2					
ANR	6290124	PtrMemberAccess	task -> cmd_log		6290065	0					
ANR	6290125	Identifier	task		6290065	0					
ANR	6290126	Identifier	cmd_log		6290065	1					
ANR	6290127	ExpressionStatement	res_str = NULL	378:2:8780:8794	6290065	1	True				
ANR	6290128	AssignmentExpression	res_str = NULL		6290065	0		=			
ANR	6290129	Identifier	res_str		6290065	0					
ANR	6290130	Identifier	NULL		6290065	1					
ANR	6290131	ElseStatement	else		6290065	0					
ANR	6290132	CompoundStatement		15:8:306:306	6290065	0					
ANR	6290133	ExpressionStatement	"res_str = r_core_cmd_str ( core , task -> cmd )"	380:2:8808:8850	6290065	0	True				
ANR	6290134	AssignmentExpression	"res_str = r_core_cmd_str ( core , task -> cmd )"		6290065	0		=			
ANR	6290135	Identifier	res_str		6290065	0					
ANR	6290136	CallExpression	"r_core_cmd_str ( core , task -> cmd )"		6290065	1					
ANR	6290137	Callee	r_core_cmd_str		6290065	0					
ANR	6290138	Identifier	r_core_cmd_str		6290065	0					
ANR	6290139	ArgumentList	core		6290065	1					
ANR	6290140	Argument	core		6290065	0					
ANR	6290141	Identifier	core		6290065	0					
ANR	6290142	Argument	task -> cmd		6290065	1					
ANR	6290143	PtrMemberAccess	task -> cmd		6290065	0					
ANR	6290144	Identifier	task		6290065	0					
ANR	6290145	Identifier	cmd		6290065	1					
ANR	6290146	ExpressionStatement	free ( task -> res )	383:1:8857:8873	6290065	5	True				
ANR	6290147	CallExpression	free ( task -> res )		6290065	0					
ANR	6290148	Callee	free		6290065	0					
ANR	6290149	Identifier	free		6290065	0					
ANR	6290150	ArgumentList	task -> res		6290065	1					
ANR	6290151	Argument	task -> res		6290065	0					
ANR	6290152	PtrMemberAccess	task -> res		6290065	0					
ANR	6290153	Identifier	task		6290065	0					
ANR	6290154	Identifier	res		6290065	1					
ANR	6290155	ExpressionStatement	task -> res = res_str	384:1:8876:8895	6290065	6	True				
ANR	6290156	AssignmentExpression	task -> res = res_str		6290065	0		=			
ANR	6290157	PtrMemberAccess	task -> res		6290065	0					
ANR	6290158	Identifier	task		6290065	0					
ANR	6290159	Identifier	res		6290065	1					
ANR	6290160	Identifier	res_str		6290065	1					
ANR	6290161	IfStatement	if ( task != core -> main_task && r_cons_default_context_is_interactive ( ) )		6290065	7					
ANR	6290162	Condition	task != core -> main_task && r_cons_default_context_is_interactive ( )	386:5:8903:8969	6290065	0	True				
ANR	6290163	AndExpression	task != core -> main_task && r_cons_default_context_is_interactive ( )		6290065	0		&&			
ANR	6290164	EqualityExpression	task != core -> main_task		6290065	0		!=			
ANR	6290165	Identifier	task		6290065	0					
ANR	6290166	PtrMemberAccess	core -> main_task		6290065	1					
ANR	6290167	Identifier	core		6290065	0					
ANR	6290168	Identifier	main_task		6290065	1					
ANR	6290169	CallExpression	r_cons_default_context_is_interactive ( )		6290065	1					
ANR	6290170	Callee	r_cons_default_context_is_interactive		6290065	0					
ANR	6290171	Identifier	r_cons_default_context_is_interactive		6290065	0					
ANR	6290172	ArgumentList			6290065	1					
ANR	6290173	CompoundStatement		22:74:474:474	6290065	1					
ANR	6290174	ExpressionStatement	"eprintf ( ""\\nTask %d finished\\n"" , task -> id )"	387:2:8976:9018	6290065	0	True				
ANR	6290175	CallExpression	"eprintf ( ""\\nTask %d finished\\n"" , task -> id )"		6290065	0					
ANR	6290176	Callee	eprintf		6290065	0					
ANR	6290177	Identifier	eprintf		6290065	0					
ANR	6290178	ArgumentList	"""\\nTask %d finished\\n"""		6290065	1					
ANR	6290179	Argument	"""\\nTask %d finished\\n"""		6290065	0					
ANR	6290180	PrimaryExpression	"""\\nTask %d finished\\n"""		6290065	0					
ANR	6290181	Argument	task -> id		6290065	1					
ANR	6290182	PtrMemberAccess	task -> id		6290065	0					
ANR	6290183	Identifier	task		6290065	0					
ANR	6290184	Identifier	id		6290065	1					
ANR	6290185	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	390:1:9025:9049	6290065	8	True				
ANR	6290186	IdentifierDecl	old_sigset		6290065	0					
ANR	6290187	IdentifierDeclType	TASK_SIGSET_T		6290065	0					
ANR	6290188	Identifier	old_sigset		6290065	1					
ANR	6290189	Label	stillbirth :	391:0:9051:9061	6290065	9	True				
ANR	6290190	Identifier	stillbirth		6290065	0					
ANR	6290191	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	392:1:9064:9100	6290065	10	True				
ANR	6290192	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6290065	0					
ANR	6290193	Callee	tasks_lock_enter		6290065	0					
ANR	6290194	Identifier	tasks_lock_enter		6290065	0					
ANR	6290195	ArgumentList	core		6290065	1					
ANR	6290196	Argument	core		6290065	0					
ANR	6290197	Identifier	core		6290065	0					
ANR	6290198	Argument	& old_sigset		6290065	1					
ANR	6290199	UnaryOperationExpression	& old_sigset		6290065	0					
ANR	6290200	UnaryOperator	&		6290065	0					
ANR	6290201	Identifier	old_sigset		6290065	1					
ANR	6290202	ExpressionStatement	task_end ( task )	394:1:9104:9119	6290065	11	True				
ANR	6290203	CallExpression	task_end ( task )		6290065	0					
ANR	6290204	Callee	task_end		6290065	0					
ANR	6290205	Identifier	task_end		6290065	0					
ANR	6290206	ArgumentList	task		6290065	1					
ANR	6290207	Argument	task		6290065	0					
ANR	6290208	Identifier	task		6290065	0					
ANR	6290209	IfStatement	if ( task -> cb )		6290065	12					
ANR	6290210	Condition	task -> cb	396:5:9127:9134	6290065	0	True				
ANR	6290211	PtrMemberAccess	task -> cb		6290065	0					
ANR	6290212	Identifier	task		6290065	0					
ANR	6290213	Identifier	cb		6290065	1					
ANR	6290214	CompoundStatement		32:15:639:639	6290065	1					
ANR	6290215	ExpressionStatement	"task -> cb ( task -> user , task -> res )"	397:2:9141:9173	6290065	0	True				
ANR	6290216	CallExpression	"task -> cb ( task -> user , task -> res )"		6290065	0					
ANR	6290217	Callee	task -> cb		6290065	0					
ANR	6290218	PtrMemberAccess	task -> cb		6290065	0					
ANR	6290219	Identifier	task		6290065	0					
ANR	6290220	Identifier	cb		6290065	1					
ANR	6290221	ArgumentList	task -> user		6290065	1					
ANR	6290222	Argument	task -> user		6290065	0					
ANR	6290223	PtrMemberAccess	task -> user		6290065	0					
ANR	6290224	Identifier	task		6290065	0					
ANR	6290225	Identifier	user		6290065	1					
ANR	6290226	Argument	task -> res		6290065	1					
ANR	6290227	PtrMemberAccess	task -> res		6290065	0					
ANR	6290228	Identifier	task		6290065	0					
ANR	6290229	Identifier	res		6290065	1					
ANR	6290230	IfStatement	if ( task -> running_sem )		6290065	13					
ANR	6290231	Condition	task -> running_sem	400:5:9184:9200	6290065	0	True				
ANR	6290232	PtrMemberAccess	task -> running_sem		6290065	0					
ANR	6290233	Identifier	task		6290065	0					
ANR	6290234	Identifier	running_sem		6290065	1					
ANR	6290235	CompoundStatement		36:24:705:705	6290065	1					
ANR	6290236	ExpressionStatement	r_th_sem_post ( task -> running_sem )	401:2:9207:9240	6290065	0	True				
ANR	6290237	CallExpression	r_th_sem_post ( task -> running_sem )		6290065	0					
ANR	6290238	Callee	r_th_sem_post		6290065	0					
ANR	6290239	Identifier	r_th_sem_post		6290065	0					
ANR	6290240	ArgumentList	task -> running_sem		6290065	1					
ANR	6290241	Argument	task -> running_sem		6290065	0					
ANR	6290242	PtrMemberAccess	task -> running_sem		6290065	0					
ANR	6290243	Identifier	task		6290065	0					
ANR	6290244	Identifier	running_sem		6290065	1					
ANR	6290245	IfStatement	if ( task -> cons_context && task -> cons_context -> break_stack )		6290065	14					
ANR	6290246	Condition	task -> cons_context && task -> cons_context -> break_stack	404:5:9251:9303	6290065	0	True				
ANR	6290247	AndExpression	task -> cons_context && task -> cons_context -> break_stack		6290065	0		&&			
ANR	6290248	PtrMemberAccess	task -> cons_context		6290065	0					
ANR	6290249	Identifier	task		6290065	0					
ANR	6290250	Identifier	cons_context		6290065	1					
ANR	6290251	PtrMemberAccess	task -> cons_context -> break_stack		6290065	1					
ANR	6290252	PtrMemberAccess	task -> cons_context		6290065	0					
ANR	6290253	Identifier	task		6290065	0					
ANR	6290254	Identifier	cons_context		6290065	1					
ANR	6290255	Identifier	break_stack		6290065	1					
ANR	6290256	CompoundStatement		40:60:808:808	6290065	1					
ANR	6290257	ExpressionStatement	"r_cons_context_break_pop ( task -> cons_context , false )"	405:2:9310:9362	6290065	0	True				
ANR	6290258	CallExpression	"r_cons_context_break_pop ( task -> cons_context , false )"		6290065	0					
ANR	6290259	Callee	r_cons_context_break_pop		6290065	0					
ANR	6290260	Identifier	r_cons_context_break_pop		6290065	0					
ANR	6290261	ArgumentList	task -> cons_context		6290065	1					
ANR	6290262	Argument	task -> cons_context		6290065	0					
ANR	6290263	PtrMemberAccess	task -> cons_context		6290065	0					
ANR	6290264	Identifier	task		6290065	0					
ANR	6290265	Identifier	cons_context		6290065	1					
ANR	6290266	Argument	false		6290065	1					
ANR	6290267	Identifier	false		6290065	0					
ANR	6290268	IdentifierDeclStatement	int ret = R_TH_STOP ;	408:1:9369:9388	6290065	15	True				
ANR	6290269	IdentifierDecl	ret = R_TH_STOP		6290065	0					
ANR	6290270	IdentifierDeclType	int		6290065	0					
ANR	6290271	Identifier	ret		6290065	1					
ANR	6290272	AssignmentExpression	ret = R_TH_STOP		6290065	2		=			
ANR	6290273	Identifier	R_TH_STOP		6290065	0					
ANR	6290274	Identifier	R_TH_STOP		6290065	1					
ANR	6290275	IfStatement	if ( task -> transient )		6290065	16					
ANR	6290276	Condition	task -> transient	409:5:9395:9409	6290065	0	True				
ANR	6290277	PtrMemberAccess	task -> transient		6290065	0					
ANR	6290278	Identifier	task		6290065	0					
ANR	6290279	Identifier	transient		6290065	1					
ANR	6290280	CompoundStatement		47:2:938:953	6290065	1					
ANR	6290281	IdentifierDeclStatement	RCoreTask * ltask ;	410:2:9416:9432	6290065	0	True				
ANR	6290282	IdentifierDecl	* ltask		6290065	0					
ANR	6290283	IdentifierDeclType	RCoreTask *		6290065	0					
ANR	6290284	Identifier	ltask		6290065	1					
ANR	6290285	IdentifierDeclStatement	RListIter * iter ;	411:2:9436:9451	6290065	1	True				
ANR	6290286	IdentifierDecl	* iter		6290065	0					
ANR	6290287	IdentifierDeclType	RListIter *		6290065	0					
ANR	6290288	Identifier	iter		6290065	1					
ANR	6290289	Statement	r_list_foreach	412:2:9455:9468	6290065	2	True				
ANR	6290290	Statement	(	412:17:9470:9470	6290065	3	True				
ANR	6290291	Statement	core	412:18:9471:9474	6290065	4	True				
ANR	6290292	Statement	->	412:22:9475:9476	6290065	5	True				
ANR	6290293	Statement	tasks	412:24:9477:9481	6290065	6	True				
ANR	6290294	Statement	","	412:29:9482:9482	6290065	7	True				
ANR	6290295	Statement	iter	412:31:9484:9487	6290065	8	True				
ANR	6290296	Statement	","	412:35:9488:9488	6290065	9	True				
ANR	6290297	Statement	ltask	412:37:9490:9494	6290065	10	True				
ANR	6290298	Statement	)	412:42:9495:9495	6290065	11	True				
ANR	6290299	CompoundStatement		48:44:999:999	6290065	12					
ANR	6290300	IfStatement	if ( ltask == task )		6290065	0					
ANR	6290301	Condition	ltask == task	413:7:9506:9518	6290065	0	True				
ANR	6290302	EqualityExpression	ltask == task		6290065	0		==			
ANR	6290303	Identifier	ltask		6290065	0					
ANR	6290304	Identifier	task		6290065	1					
ANR	6290305	CompoundStatement		49:22:1023:1023	6290065	1					
ANR	6290306	ExpressionStatement	"r_list_delete ( core -> tasks , iter )"	414:4:9527:9560	6290065	0	True				
ANR	6290307	CallExpression	"r_list_delete ( core -> tasks , iter )"		6290065	0					
ANR	6290308	Callee	r_list_delete		6290065	0					
ANR	6290309	Identifier	r_list_delete		6290065	0					
ANR	6290310	ArgumentList	core -> tasks		6290065	1					
ANR	6290311	Argument	core -> tasks		6290065	0					
ANR	6290312	PtrMemberAccess	core -> tasks		6290065	0					
ANR	6290313	Identifier	core		6290065	0					
ANR	6290314	Identifier	tasks		6290065	1					
ANR	6290315	Argument	iter		6290065	1					
ANR	6290316	Identifier	iter		6290065	0					
ANR	6290317	ExpressionStatement	ret = R_TH_FREED	415:4:9566:9582	6290065	1	True				
ANR	6290318	AssignmentExpression	ret = R_TH_FREED		6290065	0		=			
ANR	6290319	Identifier	ret		6290065	0					
ANR	6290320	Identifier	R_TH_FREED		6290065	1					
ANR	6290321	BreakStatement	break ;	416:4:9588:9593	6290065	2	True				
ANR	6290322	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	421:1:9609:9645	6290065	17	True				
ANR	6290323	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6290065	0					
ANR	6290324	Callee	tasks_lock_leave		6290065	0					
ANR	6290325	Identifier	tasks_lock_leave		6290065	0					
ANR	6290326	ArgumentList	core		6290065	1					
ANR	6290327	Argument	core		6290065	0					
ANR	6290328	Identifier	core		6290065	0					
ANR	6290329	Argument	& old_sigset		6290065	1					
ANR	6290330	UnaryOperationExpression	& old_sigset		6290065	0					
ANR	6290331	UnaryOperator	&		6290065	0					
ANR	6290332	Identifier	old_sigset		6290065	1					
ANR	6290333	ReturnStatement	return ret ;	422:1:9648:9658	6290065	18	True				
ANR	6290334	Identifier	ret		6290065	0					
ANR	6290335	ReturnType	static RThreadFunctionRet		6290065	1					
ANR	6290336	Identifier	task_run		6290065	2					
ANR	6290337	ParameterList	RCoreTask * task		6290065	3					
ANR	6290338	Parameter	RCoreTask * task	365:35:8480:8494	6290065	0	True				
ANR	6290339	ParameterType	RCoreTask *		6290065	0					
ANR	6290340	Identifier	task		6290065	1					
ANR	6290341	CFGEntryNode	ENTRY		6290065		True				
ANR	6290342	CFGExitNode	EXIT		6290065		True				
ANR	6290343	CFGErrorNode	ERROR		6290065		True				
ANR	6290344	Symbol	r_core_cmd_str		6290065						
ANR	6290345	Symbol	& old_sigset		6290065						
ANR	6290346	Symbol	R_TH_STOP		6290065						
ANR	6290347	Symbol	task -> id		6290065						
ANR	6290348	Symbol	* core		6290065						
ANR	6290349	Symbol	task -> core		6290065						
ANR	6290350	Symbol	task -> cmd_log		6290065						
ANR	6290351	Symbol	task -> cons_context -> break_stack		6290065						
ANR	6290352	Symbol	task -> running_sem		6290065						
ANR	6290353	Symbol	task -> cons_context		6290065						
ANR	6290354	Symbol	core -> tasks		6290065						
ANR	6290355	Symbol	* task -> core		6290065						
ANR	6290356	Symbol	old_sigset		6290065						
ANR	6290357	Symbol	ltask		6290065						
ANR	6290358	Symbol	task -> core -> main_task		6290065						
ANR	6290359	Symbol	task -> cb		6290065						
ANR	6290360	Symbol	* task -> cons_context		6290065						
ANR	6290361	Symbol	task -> user		6290065						
ANR	6290362	Symbol	task -> cmd		6290065						
ANR	6290363	Symbol	* task		6290065						
ANR	6290364	Symbol	ret		6290065						
ANR	6290365	Symbol	NULL		6290065						
ANR	6290366	Symbol	core -> main_task		6290065						
ANR	6290367	Symbol	r_cons_default_context_is_interactive		6290065						
ANR	6290368	Symbol	false		6290065						
ANR	6290369	Symbol	iter		6290065						
ANR	6290370	Symbol	* * task		6290065						
ANR	6290371	Symbol	task -> cons_context -> breaked		6290065						
ANR	6290372	Symbol	core		6290065						
ANR	6290373	Symbol	R_TH_FREED		6290065						
ANR	6290374	Symbol	task		6290065						
ANR	6290375	Symbol	res_str		6290065						
ANR	6290376	Symbol	task -> res		6290065						
ANR	6290377	Symbol	task -> transient		6290065						
ANR	6290378	Function	task_run_thread	425:0:9663:9787							
ANR	6290379	FunctionDef	task_run_thread (RThread * th)		6290378	0					
ANR	6290380	CompoundStatement		425:55:9718:9787	6290378	0					
ANR	6290381	IdentifierDeclStatement	RCoreTask * task = ( RCoreTask * ) th -> user ;	426:1:9721:9760	6290378	0	True				
ANR	6290382	IdentifierDecl	* task = ( RCoreTask * ) th -> user		6290378	0					
ANR	6290383	IdentifierDeclType	RCoreTask *		6290378	0					
ANR	6290384	Identifier	task		6290378	1					
ANR	6290385	AssignmentExpression	* task = ( RCoreTask * ) th -> user		6290378	2		=			
ANR	6290386	Identifier	task		6290378	0					
ANR	6290387	CastExpression	( RCoreTask * ) th -> user		6290378	1					
ANR	6290388	CastTarget	RCoreTask *		6290378	0					
ANR	6290389	PtrMemberAccess	th -> user		6290378	1					
ANR	6290390	Identifier	th		6290378	0					
ANR	6290391	Identifier	user		6290378	1					
ANR	6290392	ReturnStatement	return task_run ( task ) ;	427:1:9763:9785	6290378	1	True				
ANR	6290393	CallExpression	task_run ( task )		6290378	0					
ANR	6290394	Callee	task_run		6290378	0					
ANR	6290395	Identifier	task_run		6290378	0					
ANR	6290396	ArgumentList	task		6290378	1					
ANR	6290397	Argument	task		6290378	0					
ANR	6290398	Identifier	task		6290378	0					
ANR	6290399	ReturnType	static RThreadFunctionRet		6290378	1					
ANR	6290400	Identifier	task_run_thread		6290378	2					
ANR	6290401	ParameterList	RThread * th		6290378	3					
ANR	6290402	Parameter	RThread * th	425:42:9705:9715	6290378	0	True				
ANR	6290403	ParameterType	RThread *		6290378	0					
ANR	6290404	Identifier	th		6290378	1					
ANR	6290405	CFGEntryNode	ENTRY		6290378		True				
ANR	6290406	CFGExitNode	EXIT		6290378		True				
ANR	6290407	Symbol	task		6290378						
ANR	6290408	Symbol	task_run		6290378						
ANR	6290409	Symbol	th		6290378						
ANR	6290410	Symbol	th -> user		6290378						
ANR	6290411	Symbol	* th		6290378						
ANR	6290412	Function	r_core_task_enqueue	430:0:9790:10318							
ANR	6290413	FunctionDef	"r_core_task_enqueue (RCore * core , RCoreTask * task)"		6290412	0					
ANR	6290414	CompoundStatement		430:61:9851:10318	6290412	0					
ANR	6290415	IfStatement	if ( ! core || ! task )		6290412	0					
ANR	6290416	Condition	! core || ! task	431:5:9858:9871	6290412	0	True				
ANR	6290417	OrExpression	! core || ! task		6290412	0		||			
ANR	6290418	UnaryOperationExpression	! core		6290412	0					
ANR	6290419	UnaryOperator	!		6290412	0					
ANR	6290420	Identifier	core		6290412	1					
ANR	6290421	UnaryOperationExpression	! task		6290412	1					
ANR	6290422	UnaryOperator	!		6290412	0					
ANR	6290423	Identifier	task		6290412	1					
ANR	6290424	CompoundStatement		2:21:22:22	6290412	1					
ANR	6290425	ReturnStatement	return ;	432:2:9878:9884	6290412	0	True				
ANR	6290426	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	434:1:9890:9914	6290412	1	True				
ANR	6290427	IdentifierDecl	old_sigset		6290412	0					
ANR	6290428	IdentifierDeclType	TASK_SIGSET_T		6290412	0					
ANR	6290429	Identifier	old_sigset		6290412	1					
ANR	6290430	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	435:1:9917:9953	6290412	2	True				
ANR	6290431	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6290412	0					
ANR	6290432	Callee	tasks_lock_enter		6290412	0					
ANR	6290433	Identifier	tasks_lock_enter		6290412	0					
ANR	6290434	ArgumentList	core		6290412	1					
ANR	6290435	Argument	core		6290412	0					
ANR	6290436	Identifier	core		6290412	0					
ANR	6290437	Argument	& old_sigset		6290412	1					
ANR	6290438	UnaryOperationExpression	& old_sigset		6290412	0					
ANR	6290439	UnaryOperator	&		6290412	0					
ANR	6290440	Identifier	old_sigset		6290412	1					
ANR	6290441	IfStatement	if ( ! task -> running_sem )		6290412	3					
ANR	6290442	Condition	! task -> running_sem	436:5:9960:9977	6290412	0	True				
ANR	6290443	UnaryOperationExpression	! task -> running_sem		6290412	0					
ANR	6290444	UnaryOperator	!		6290412	0					
ANR	6290445	PtrMemberAccess	task -> running_sem		6290412	1					
ANR	6290446	Identifier	task		6290412	0					
ANR	6290447	Identifier	running_sem		6290412	1					
ANR	6290448	CompoundStatement		7:25:128:128	6290412	1					
ANR	6290449	ExpressionStatement	task -> running_sem = r_th_sem_new ( 1 )	437:2:9984:10020	6290412	0	True				
ANR	6290450	AssignmentExpression	task -> running_sem = r_th_sem_new ( 1 )		6290412	0		=			
ANR	6290451	PtrMemberAccess	task -> running_sem		6290412	0					
ANR	6290452	Identifier	task		6290412	0					
ANR	6290453	Identifier	running_sem		6290412	1					
ANR	6290454	CallExpression	r_th_sem_new ( 1 )		6290412	1					
ANR	6290455	Callee	r_th_sem_new		6290412	0					
ANR	6290456	Identifier	r_th_sem_new		6290412	0					
ANR	6290457	ArgumentList	1		6290412	1					
ANR	6290458	Argument	1		6290412	0					
ANR	6290459	PrimaryExpression	1		6290412	0					
ANR	6290460	IfStatement	if ( task -> running_sem )		6290412	4					
ANR	6290461	Condition	task -> running_sem	439:5:10030:10046	6290412	0	True				
ANR	6290462	PtrMemberAccess	task -> running_sem		6290412	0					
ANR	6290463	Identifier	task		6290412	0					
ANR	6290464	Identifier	running_sem		6290412	1					
ANR	6290465	CompoundStatement		10:24:197:197	6290412	1					
ANR	6290466	ExpressionStatement	r_th_sem_wait ( task -> running_sem )	440:2:10053:10086	6290412	0	True				
ANR	6290467	CallExpression	r_th_sem_wait ( task -> running_sem )		6290412	0					
ANR	6290468	Callee	r_th_sem_wait		6290412	0					
ANR	6290469	Identifier	r_th_sem_wait		6290412	0					
ANR	6290470	ArgumentList	task -> running_sem		6290412	1					
ANR	6290471	Argument	task -> running_sem		6290412	0					
ANR	6290472	PtrMemberAccess	task -> running_sem		6290412	0					
ANR	6290473	Identifier	task		6290412	0					
ANR	6290474	Identifier	running_sem		6290412	1					
ANR	6290475	IfStatement	if ( task -> cons_context )		6290412	5					
ANR	6290476	Condition	task -> cons_context	442:5:10096:10113	6290412	0	True				
ANR	6290477	PtrMemberAccess	task -> cons_context		6290412	0					
ANR	6290478	Identifier	task		6290412	0					
ANR	6290479	Identifier	cons_context		6290412	1					
ANR	6290480	CompoundStatement		13:25:264:264	6290412	1					
ANR	6290481	ExpressionStatement	"r_cons_context_break_push ( task -> cons_context , NULL , NULL , false )"	443:2:10120:10185	6290412	0	True				
ANR	6290482	CallExpression	"r_cons_context_break_push ( task -> cons_context , NULL , NULL , false )"		6290412	0					
ANR	6290483	Callee	r_cons_context_break_push		6290412	0					
ANR	6290484	Identifier	r_cons_context_break_push		6290412	0					
ANR	6290485	ArgumentList	task -> cons_context		6290412	1					
ANR	6290486	Argument	task -> cons_context		6290412	0					
ANR	6290487	PtrMemberAccess	task -> cons_context		6290412	0					
ANR	6290488	Identifier	task		6290412	0					
ANR	6290489	Identifier	cons_context		6290412	1					
ANR	6290490	Argument	NULL		6290412	1					
ANR	6290491	Identifier	NULL		6290412	0					
ANR	6290492	Argument	NULL		6290412	2					
ANR	6290493	Identifier	NULL		6290412	0					
ANR	6290494	Argument	false		6290412	3					
ANR	6290495	Identifier	false		6290412	0					
ANR	6290496	ExpressionStatement	"r_list_append ( core -> tasks , task )"	445:1:10191:10224	6290412	6	True				
ANR	6290497	CallExpression	"r_list_append ( core -> tasks , task )"		6290412	0					
ANR	6290498	Callee	r_list_append		6290412	0					
ANR	6290499	Identifier	r_list_append		6290412	0					
ANR	6290500	ArgumentList	core -> tasks		6290412	1					
ANR	6290501	Argument	core -> tasks		6290412	0					
ANR	6290502	PtrMemberAccess	core -> tasks		6290412	0					
ANR	6290503	Identifier	core		6290412	0					
ANR	6290504	Identifier	tasks		6290412	1					
ANR	6290505	Argument	task		6290412	1					
ANR	6290506	Identifier	task		6290412	0					
ANR	6290507	ExpressionStatement	"task -> thread = r_th_new ( task_run_thread , task , 0 )"	446:1:10227:10277	6290412	7	True				
ANR	6290508	AssignmentExpression	"task -> thread = r_th_new ( task_run_thread , task , 0 )"		6290412	0		=			
ANR	6290509	PtrMemberAccess	task -> thread		6290412	0					
ANR	6290510	Identifier	task		6290412	0					
ANR	6290511	Identifier	thread		6290412	1					
ANR	6290512	CallExpression	"r_th_new ( task_run_thread , task , 0 )"		6290412	1					
ANR	6290513	Callee	r_th_new		6290412	0					
ANR	6290514	Identifier	r_th_new		6290412	0					
ANR	6290515	ArgumentList	task_run_thread		6290412	1					
ANR	6290516	Argument	task_run_thread		6290412	0					
ANR	6290517	Identifier	task_run_thread		6290412	0					
ANR	6290518	Argument	task		6290412	1					
ANR	6290519	Identifier	task		6290412	0					
ANR	6290520	Argument	0		6290412	2					
ANR	6290521	PrimaryExpression	0		6290412	0					
ANR	6290522	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	447:1:10280:10316	6290412	8	True				
ANR	6290523	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6290412	0					
ANR	6290524	Callee	tasks_lock_leave		6290412	0					
ANR	6290525	Identifier	tasks_lock_leave		6290412	0					
ANR	6290526	ArgumentList	core		6290412	1					
ANR	6290527	Argument	core		6290412	0					
ANR	6290528	Identifier	core		6290412	0					
ANR	6290529	Argument	& old_sigset		6290412	1					
ANR	6290530	UnaryOperationExpression	& old_sigset		6290412	0					
ANR	6290531	UnaryOperator	&		6290412	0					
ANR	6290532	Identifier	old_sigset		6290412	1					
ANR	6290533	ReturnType	R_API void		6290412	1					
ANR	6290534	Identifier	r_core_task_enqueue		6290412	2					
ANR	6290535	ParameterList	"RCore * core , RCoreTask * task"		6290412	3					
ANR	6290536	Parameter	RCore * core	430:31:9821:9831	6290412	0	True				
ANR	6290537	ParameterType	RCore *		6290412	0					
ANR	6290538	Identifier	core		6290412	1					
ANR	6290539	Parameter	RCoreTask * task	430:44:9834:9848	6290412	1	True				
ANR	6290540	ParameterType	RCoreTask *		6290412	0					
ANR	6290541	Identifier	task		6290412	1					
ANR	6290542	CFGEntryNode	ENTRY		6290412		True				
ANR	6290543	CFGExitNode	EXIT		6290412		True				
ANR	6290544	Symbol	NULL		6290412						
ANR	6290545	Symbol	& old_sigset		6290412						
ANR	6290546	Symbol	task_run_thread		6290412						
ANR	6290547	Symbol	false		6290412						
ANR	6290548	Symbol	* core		6290412						
ANR	6290549	Symbol	r_th_new		6290412						
ANR	6290550	Symbol	r_th_sem_new		6290412						
ANR	6290551	Symbol	task -> running_sem		6290412						
ANR	6290552	Symbol	core		6290412						
ANR	6290553	Symbol	task -> thread		6290412						
ANR	6290554	Symbol	task		6290412						
ANR	6290555	Symbol	task -> cons_context		6290412						
ANR	6290556	Symbol	core -> tasks		6290412						
ANR	6290557	Symbol	old_sigset		6290412						
ANR	6290558	Symbol	* task		6290412						
ANR	6290559	Function	r_core_task_enqueue_oneshot	450:0:10321:10987							
ANR	6290560	FunctionDef	"r_core_task_enqueue_oneshot (RCore * core , RCoreTaskOneShot func , void * user)"		6290559	0					
ANR	6290561	CompoundStatement		450:87:10408:10987	6290559	0					
ANR	6290562	IfStatement	if ( ! core || ! func )		6290559	0					
ANR	6290563	Condition	! core || ! func	451:5:10415:10428	6290559	0	True				
ANR	6290564	OrExpression	! core || ! func		6290559	0		||			
ANR	6290565	UnaryOperationExpression	! core		6290559	0					
ANR	6290566	UnaryOperator	!		6290559	0					
ANR	6290567	Identifier	core		6290559	1					
ANR	6290568	UnaryOperationExpression	! func		6290559	1					
ANR	6290569	UnaryOperator	!		6290559	0					
ANR	6290570	Identifier	func		6290559	1					
ANR	6290571	CompoundStatement		2:21:22:22	6290559	1					
ANR	6290572	ReturnStatement	return ;	452:2:10435:10441	6290559	0	True				
ANR	6290573	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	454:1:10447:10471	6290559	1	True				
ANR	6290574	IdentifierDecl	old_sigset		6290559	0					
ANR	6290575	IdentifierDeclType	TASK_SIGSET_T		6290559	0					
ANR	6290576	Identifier	old_sigset		6290559	1					
ANR	6290577	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	455:1:10474:10510	6290559	2	True				
ANR	6290578	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6290559	0					
ANR	6290579	Callee	tasks_lock_enter		6290559	0					
ANR	6290580	Identifier	tasks_lock_enter		6290559	0					
ANR	6290581	ArgumentList	core		6290559	1					
ANR	6290582	Argument	core		6290559	0					
ANR	6290583	Identifier	core		6290559	0					
ANR	6290584	Argument	& old_sigset		6290559	1					
ANR	6290585	UnaryOperationExpression	& old_sigset		6290559	0					
ANR	6290586	UnaryOperator	&		6290559	0					
ANR	6290587	Identifier	old_sigset		6290559	1					
ANR	6290588	IfStatement	if ( core -> tasks_running == 0 )		6290559	3					
ANR	6290589	Condition	core -> tasks_running == 0	456:5:10517:10540	6290559	0	True				
ANR	6290590	EqualityExpression	core -> tasks_running == 0		6290559	0		==			
ANR	6290591	PtrMemberAccess	core -> tasks_running		6290559	0					
ANR	6290592	Identifier	core		6290559	0					
ANR	6290593	Identifier	tasks_running		6290559	1					
ANR	6290594	PrimaryExpression	0		6290559	1					
ANR	6290595	CompoundStatement		7:31:134:134	6290559	1					
ANR	6290596	ExpressionStatement	core -> oneshot_running = true	459:2:10669:10697	6290559	0	True				
ANR	6290597	AssignmentExpression	core -> oneshot_running = true		6290559	0		=			
ANR	6290598	PtrMemberAccess	core -> oneshot_running		6290559	0					
ANR	6290599	Identifier	core		6290559	0					
ANR	6290600	Identifier	oneshot_running		6290559	1					
ANR	6290601	Identifier	true		6290559	1					
ANR	6290602	ExpressionStatement	func ( user )	460:2:10701:10712	6290559	1	True				
ANR	6290603	CallExpression	func ( user )		6290559	0					
ANR	6290604	Callee	func		6290559	0					
ANR	6290605	Identifier	func		6290559	0					
ANR	6290606	ArgumentList	user		6290559	1					
ANR	6290607	Argument	user		6290559	0					
ANR	6290608	Identifier	user		6290559	0					
ANR	6290609	ExpressionStatement	core -> oneshot_running = false	461:2:10716:10745	6290559	2	True				
ANR	6290610	AssignmentExpression	core -> oneshot_running = false		6290559	0		=			
ANR	6290611	PtrMemberAccess	core -> oneshot_running		6290559	0					
ANR	6290612	Identifier	core		6290559	0					
ANR	6290613	Identifier	oneshot_running		6290559	1					
ANR	6290614	Identifier	false		6290559	1					
ANR	6290615	ElseStatement	else		6290559	0					
ANR	6290616	CompoundStatement		14:2:350:384	6290559	0					
ANR	6290617	IdentifierDeclStatement	OneShot * oneshot = R_NEW ( OneShot ) ;	463:2:10759:10793	6290559	0	True				
ANR	6290618	IdentifierDecl	* oneshot = R_NEW ( OneShot )		6290559	0					
ANR	6290619	IdentifierDeclType	OneShot *		6290559	0					
ANR	6290620	Identifier	oneshot		6290559	1					
ANR	6290621	AssignmentExpression	* oneshot = R_NEW ( OneShot )		6290559	2		=			
ANR	6290622	Identifier	oneshot		6290559	0					
ANR	6290623	CallExpression	R_NEW ( OneShot )		6290559	1					
ANR	6290624	Callee	R_NEW		6290559	0					
ANR	6290625	Identifier	R_NEW		6290559	0					
ANR	6290626	ArgumentList	OneShot		6290559	1					
ANR	6290627	Argument	OneShot		6290559	0					
ANR	6290628	Identifier	OneShot		6290559	0					
ANR	6290629	IfStatement	if ( oneshot )		6290559	1					
ANR	6290630	Condition	oneshot	464:6:10801:10807	6290559	0	True				
ANR	6290631	Identifier	oneshot		6290559	0					
ANR	6290632	CompoundStatement		15:15:401:401	6290559	1					
ANR	6290633	ExpressionStatement	oneshot -> func = func	465:3:10815:10835	6290559	0	True				
ANR	6290634	AssignmentExpression	oneshot -> func = func		6290559	0		=			
ANR	6290635	PtrMemberAccess	oneshot -> func		6290559	0					
ANR	6290636	Identifier	oneshot		6290559	0					
ANR	6290637	Identifier	func		6290559	1					
ANR	6290638	Identifier	func		6290559	1					
ANR	6290639	ExpressionStatement	oneshot -> user = user	466:3:10840:10860	6290559	1	True				
ANR	6290640	AssignmentExpression	oneshot -> user = user		6290559	0		=			
ANR	6290641	PtrMemberAccess	oneshot -> user		6290559	0					
ANR	6290642	Identifier	oneshot		6290559	0					
ANR	6290643	Identifier	user		6290559	1					
ANR	6290644	Identifier	user		6290559	1					
ANR	6290645	ExpressionStatement	"r_list_append ( core -> oneshot_queue , oneshot )"	467:3:10865:10909	6290559	2	True				
ANR	6290646	CallExpression	"r_list_append ( core -> oneshot_queue , oneshot )"		6290559	0					
ANR	6290647	Callee	r_list_append		6290559	0					
ANR	6290648	Identifier	r_list_append		6290559	0					
ANR	6290649	ArgumentList	core -> oneshot_queue		6290559	1					
ANR	6290650	Argument	core -> oneshot_queue		6290559	0					
ANR	6290651	PtrMemberAccess	core -> oneshot_queue		6290559	0					
ANR	6290652	Identifier	core		6290559	0					
ANR	6290653	Identifier	oneshot_queue		6290559	1					
ANR	6290654	Argument	oneshot		6290559	1					
ANR	6290655	Identifier	oneshot		6290559	0					
ANR	6290656	ExpressionStatement	core -> oneshots_enqueued ++	468:3:10914:10939	6290559	3	True				
ANR	6290657	PostIncDecOperationExpression	core -> oneshots_enqueued ++		6290559	0					
ANR	6290658	PtrMemberAccess	core -> oneshots_enqueued		6290559	0					
ANR	6290659	Identifier	core		6290559	0					
ANR	6290660	Identifier	oneshots_enqueued		6290559	1					
ANR	6290661	IncDec	++		6290559	1					
ANR	6290662	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	471:1:10949:10985	6290559	4	True				
ANR	6290663	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6290559	0					
ANR	6290664	Callee	tasks_lock_leave		6290559	0					
ANR	6290665	Identifier	tasks_lock_leave		6290559	0					
ANR	6290666	ArgumentList	core		6290559	1					
ANR	6290667	Argument	core		6290559	0					
ANR	6290668	Identifier	core		6290559	0					
ANR	6290669	Argument	& old_sigset		6290559	1					
ANR	6290670	UnaryOperationExpression	& old_sigset		6290559	0					
ANR	6290671	UnaryOperator	&		6290559	0					
ANR	6290672	Identifier	old_sigset		6290559	1					
ANR	6290673	ReturnType	R_API void		6290559	1					
ANR	6290674	Identifier	r_core_task_enqueue_oneshot		6290559	2					
ANR	6290675	ParameterList	"RCore * core , RCoreTaskOneShot func , void * user"		6290559	3					
ANR	6290676	Parameter	RCore * core	450:39:10360:10370	6290559	0	True				
ANR	6290677	ParameterType	RCore *		6290559	0					
ANR	6290678	Identifier	core		6290559	1					
ANR	6290679	Parameter	RCoreTaskOneShot func	450:52:10373:10393	6290559	1	True				
ANR	6290680	ParameterType	RCoreTaskOneShot		6290559	0					
ANR	6290681	Identifier	func		6290559	1					
ANR	6290682	Parameter	void * user	450:75:10396:10405	6290559	2	True				
ANR	6290683	ParameterType	void *		6290559	0					
ANR	6290684	Identifier	user		6290559	1					
ANR	6290685	CFGEntryNode	ENTRY		6290559		True				
ANR	6290686	CFGExitNode	EXIT		6290559		True				
ANR	6290687	Symbol	& old_sigset		6290559						
ANR	6290688	Symbol	* oneshot		6290559						
ANR	6290689	Symbol	* core		6290559						
ANR	6290690	Symbol	false		6290559						
ANR	6290691	Symbol	core -> oneshot_queue		6290559						
ANR	6290692	Symbol	oneshot		6290559						
ANR	6290693	Symbol	oneshot -> user		6290559						
ANR	6290694	Symbol	core		6290559						
ANR	6290695	Symbol	core -> oneshot_running		6290559						
ANR	6290696	Symbol	core -> oneshots_enqueued		6290559						
ANR	6290697	Symbol	func		6290559						
ANR	6290698	Symbol	core -> tasks_running		6290559						
ANR	6290699	Symbol	OneShot		6290559						
ANR	6290700	Symbol	old_sigset		6290559						
ANR	6290701	Symbol	true		6290559						
ANR	6290702	Symbol	R_NEW		6290559						
ANR	6290703	Symbol	oneshot -> func		6290559						
ANR	6290704	Symbol	user		6290559						
ANR	6290705	Function	r_core_task_run_sync	474:0:10990:11100							
ANR	6290706	FunctionDef	"r_core_task_run_sync (RCore * core , RCoreTask * task)"		6290705	0					
ANR	6290707	CompoundStatement		474:61:11051:11100	6290705	0					
ANR	6290708	ExpressionStatement	task -> thread = NULL	475:1:11054:11073	6290705	0	True				
ANR	6290709	AssignmentExpression	task -> thread = NULL		6290705	0		=			
ANR	6290710	PtrMemberAccess	task -> thread		6290705	0					
ANR	6290711	Identifier	task		6290705	0					
ANR	6290712	Identifier	thread		6290705	1					
ANR	6290713	Identifier	NULL		6290705	1					
ANR	6290714	ReturnStatement	return task_run ( task ) ;	476:1:11076:11098	6290705	1	True				
ANR	6290715	CallExpression	task_run ( task )		6290705	0					
ANR	6290716	Callee	task_run		6290705	0					
ANR	6290717	Identifier	task_run		6290705	0					
ANR	6290718	ArgumentList	task		6290705	1					
ANR	6290719	Argument	task		6290705	0					
ANR	6290720	Identifier	task		6290705	0					
ANR	6290721	ReturnType	R_API int		6290705	1					
ANR	6290722	Identifier	r_core_task_run_sync		6290705	2					
ANR	6290723	ParameterList	"RCore * core , RCoreTask * task"		6290705	3					
ANR	6290724	Parameter	RCore * core	474:31:11021:11031	6290705	0	True				
ANR	6290725	ParameterType	RCore *		6290705	0					
ANR	6290726	Identifier	core		6290705	1					
ANR	6290727	Parameter	RCoreTask * task	474:44:11034:11048	6290705	1	True				
ANR	6290728	ParameterType	RCoreTask *		6290705	0					
ANR	6290729	Identifier	task		6290705	1					
ANR	6290730	CFGEntryNode	ENTRY		6290705		True				
ANR	6290731	CFGExitNode	EXIT		6290705		True				
ANR	6290732	Symbol	core		6290705						
ANR	6290733	Symbol	task -> thread		6290705						
ANR	6290734	Symbol	task		6290705						
ANR	6290735	Symbol	NULL		6290705						
ANR	6290736	Symbol	task_run		6290705						
ANR	6290737	Symbol	* task		6290705						
ANR	6290738	Function	r_core_task_sync_begin	480:0:11160:11483							
ANR	6290739	FunctionDef	r_core_task_sync_begin (RCore * core)		6290738	0					
ANR	6290740	CompoundStatement		480:47:11207:11483	6290738	0					
ANR	6290741	IdentifierDeclStatement	RCoreTask * task = core -> main_task ;	481:1:11210:11243	6290738	0	True				
ANR	6290742	IdentifierDecl	* task = core -> main_task		6290738	0					
ANR	6290743	IdentifierDeclType	RCoreTask *		6290738	0					
ANR	6290744	Identifier	task		6290738	1					
ANR	6290745	AssignmentExpression	* task = core -> main_task		6290738	2		=			
ANR	6290746	Identifier	task		6290738	0					
ANR	6290747	PtrMemberAccess	core -> main_task		6290738	1					
ANR	6290748	Identifier	core		6290738	0					
ANR	6290749	Identifier	main_task		6290738	1					
ANR	6290750	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	482:1:11246:11270	6290738	1	True				
ANR	6290751	IdentifierDecl	old_sigset		6290738	0					
ANR	6290752	IdentifierDeclType	TASK_SIGSET_T		6290738	0					
ANR	6290753	Identifier	old_sigset		6290738	1					
ANR	6290754	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	483:1:11273:11309	6290738	2	True				
ANR	6290755	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6290738	0					
ANR	6290756	Callee	tasks_lock_enter		6290738	0					
ANR	6290757	Identifier	tasks_lock_enter		6290738	0					
ANR	6290758	ArgumentList	core		6290738	1					
ANR	6290759	Argument	core		6290738	0					
ANR	6290760	Identifier	core		6290738	0					
ANR	6290761	Argument	& old_sigset		6290738	1					
ANR	6290762	UnaryOperationExpression	& old_sigset		6290738	0					
ANR	6290763	UnaryOperator	&		6290738	0					
ANR	6290764	Identifier	old_sigset		6290738	1					
ANR	6290765	ExpressionStatement	task -> thread = NULL	484:1:11312:11331	6290738	3	True				
ANR	6290766	AssignmentExpression	task -> thread = NULL		6290738	0		=			
ANR	6290767	PtrMemberAccess	task -> thread		6290738	0					
ANR	6290768	Identifier	task		6290738	0					
ANR	6290769	Identifier	thread		6290738	1					
ANR	6290770	Identifier	NULL		6290738	1					
ANR	6290771	ExpressionStatement	task -> cmd = NULL	485:1:11334:11350	6290738	4	True				
ANR	6290772	AssignmentExpression	task -> cmd = NULL		6290738	0		=			
ANR	6290773	PtrMemberAccess	task -> cmd		6290738	0					
ANR	6290774	Identifier	task		6290738	0					
ANR	6290775	Identifier	cmd		6290738	1					
ANR	6290776	Identifier	NULL		6290738	1					
ANR	6290777	ExpressionStatement	task -> cmd_log = false	486:1:11353:11374	6290738	5	True				
ANR	6290778	AssignmentExpression	task -> cmd_log = false		6290738	0		=			
ANR	6290779	PtrMemberAccess	task -> cmd_log		6290738	0					
ANR	6290780	Identifier	task		6290738	0					
ANR	6290781	Identifier	cmd_log		6290738	1					
ANR	6290782	Identifier	false		6290738	1					
ANR	6290783	ExpressionStatement	task -> state = R_CORE_TASK_STATE_BEFORE_START	487:1:11377:11421	6290738	6	True				
ANR	6290784	AssignmentExpression	task -> state = R_CORE_TASK_STATE_BEFORE_START		6290738	0		=			
ANR	6290785	PtrMemberAccess	task -> state		6290738	0					
ANR	6290786	Identifier	task		6290738	0					
ANR	6290787	Identifier	state		6290738	1					
ANR	6290788	Identifier	R_CORE_TASK_STATE_BEFORE_START		6290738	1					
ANR	6290789	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	488:1:11424:11460	6290738	7	True				
ANR	6290790	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6290738	0					
ANR	6290791	Callee	tasks_lock_leave		6290738	0					
ANR	6290792	Identifier	tasks_lock_leave		6290738	0					
ANR	6290793	ArgumentList	core		6290738	1					
ANR	6290794	Argument	core		6290738	0					
ANR	6290795	Identifier	core		6290738	0					
ANR	6290796	Argument	& old_sigset		6290738	1					
ANR	6290797	UnaryOperationExpression	& old_sigset		6290738	0					
ANR	6290798	UnaryOperator	&		6290738	0					
ANR	6290799	Identifier	old_sigset		6290738	1					
ANR	6290800	ExpressionStatement	task_wakeup ( task )	489:1:11463:11481	6290738	8	True				
ANR	6290801	CallExpression	task_wakeup ( task )		6290738	0					
ANR	6290802	Callee	task_wakeup		6290738	0					
ANR	6290803	Identifier	task_wakeup		6290738	0					
ANR	6290804	ArgumentList	task		6290738	1					
ANR	6290805	Argument	task		6290738	0					
ANR	6290806	Identifier	task		6290738	0					
ANR	6290807	ReturnType	R_API void		6290738	1					
ANR	6290808	Identifier	r_core_task_sync_begin		6290738	2					
ANR	6290809	ParameterList	RCore * core		6290738	3					
ANR	6290810	Parameter	RCore * core	480:34:11194:11204	6290738	0	True				
ANR	6290811	ParameterType	RCore *		6290738	0					
ANR	6290812	Identifier	core		6290738	1					
ANR	6290813	CFGEntryNode	ENTRY		6290738		True				
ANR	6290814	CFGExitNode	EXIT		6290738		True				
ANR	6290815	Symbol	NULL		6290738						
ANR	6290816	Symbol	& old_sigset		6290738						
ANR	6290817	Symbol	core -> main_task		6290738						
ANR	6290818	Symbol	* core		6290738						
ANR	6290819	Symbol	false		6290738						
ANR	6290820	Symbol	task -> cmd_log		6290738						
ANR	6290821	Symbol	R_CORE_TASK_STATE_BEFORE_START		6290738						
ANR	6290822	Symbol	core		6290738						
ANR	6290823	Symbol	task -> thread		6290738						
ANR	6290824	Symbol	task		6290738						
ANR	6290825	Symbol	task -> state		6290738						
ANR	6290826	Symbol	old_sigset		6290738						
ANR	6290827	Symbol	task -> cmd		6290738						
ANR	6290828	Symbol	* task		6290738						
ANR	6290829	Function	r_core_task_sync_end	493:0:11573:11649							
ANR	6290830	FunctionDef	r_core_task_sync_end (RCore * core)		6290829	0					
ANR	6290831	CompoundStatement		493:45:11618:11649	6290829	0					
ANR	6290832	ExpressionStatement	task_end ( core -> main_task )	494:1:11621:11647	6290829	0	True				
ANR	6290833	CallExpression	task_end ( core -> main_task )		6290829	0					
ANR	6290834	Callee	task_end		6290829	0					
ANR	6290835	Identifier	task_end		6290829	0					
ANR	6290836	ArgumentList	core -> main_task		6290829	1					
ANR	6290837	Argument	core -> main_task		6290829	0					
ANR	6290838	PtrMemberAccess	core -> main_task		6290829	0					
ANR	6290839	Identifier	core		6290829	0					
ANR	6290840	Identifier	main_task		6290829	1					
ANR	6290841	ReturnType	R_API void		6290829	1					
ANR	6290842	Identifier	r_core_task_sync_end		6290829	2					
ANR	6290843	ParameterList	RCore * core		6290829	3					
ANR	6290844	Parameter	RCore * core	493:32:11605:11615	6290829	0	True				
ANR	6290845	ParameterType	RCore *		6290829	0					
ANR	6290846	Identifier	core		6290829	1					
ANR	6290847	CFGEntryNode	ENTRY		6290829		True				
ANR	6290848	CFGExitNode	EXIT		6290829		True				
ANR	6290849	Symbol	core		6290829						
ANR	6290850	Symbol	core -> main_task		6290829						
ANR	6290851	Symbol	* core		6290829						
ANR	6290852	Function	r_core_task_sleep_begin	499:0:11775:11887							
ANR	6290853	FunctionDef	r_core_task_sleep_begin (RCoreTask * task)		6290852	0					
ANR	6290854	CompoundStatement		499:52:11827:11887	6290852	0					
ANR	6290855	ExpressionStatement	"r_core_task_schedule ( task , R_CORE_TASK_STATE_SLEEPING )"	500:1:11830:11885	6290852	0	True				
ANR	6290856	CallExpression	"r_core_task_schedule ( task , R_CORE_TASK_STATE_SLEEPING )"		6290852	0					
ANR	6290857	Callee	r_core_task_schedule		6290852	0					
ANR	6290858	Identifier	r_core_task_schedule		6290852	0					
ANR	6290859	ArgumentList	task		6290852	1					
ANR	6290860	Argument	task		6290852	0					
ANR	6290861	Identifier	task		6290852	0					
ANR	6290862	Argument	R_CORE_TASK_STATE_SLEEPING		6290852	1					
ANR	6290863	Identifier	R_CORE_TASK_STATE_SLEEPING		6290852	0					
ANR	6290864	ReturnType	R_API void		6290852	1					
ANR	6290865	Identifier	r_core_task_sleep_begin		6290852	2					
ANR	6290866	ParameterList	RCoreTask * task		6290852	3					
ANR	6290867	Parameter	RCoreTask * task	499:35:11810:11824	6290852	0	True				
ANR	6290868	ParameterType	RCoreTask *		6290852	0					
ANR	6290869	Identifier	task		6290852	1					
ANR	6290870	CFGEntryNode	ENTRY		6290852		True				
ANR	6290871	CFGExitNode	EXIT		6290852		True				
ANR	6290872	Symbol	task		6290852						
ANR	6290873	Symbol	R_CORE_TASK_STATE_SLEEPING		6290852						
ANR	6290874	Function	r_core_task_sleep_end	503:0:11890:11963							
ANR	6290875	FunctionDef	r_core_task_sleep_end (RCoreTask * task)		6290874	0					
ANR	6290876	CompoundStatement		503:50:11940:11963	6290874	0					
ANR	6290877	ExpressionStatement	task_wakeup ( task )	504:1:11943:11961	6290874	0	True				
ANR	6290878	CallExpression	task_wakeup ( task )		6290874	0					
ANR	6290879	Callee	task_wakeup		6290874	0					
ANR	6290880	Identifier	task_wakeup		6290874	0					
ANR	6290881	ArgumentList	task		6290874	1					
ANR	6290882	Argument	task		6290874	0					
ANR	6290883	Identifier	task		6290874	0					
ANR	6290884	ReturnType	R_API void		6290874	1					
ANR	6290885	Identifier	r_core_task_sleep_end		6290874	2					
ANR	6290886	ParameterList	RCoreTask * task		6290874	3					
ANR	6290887	Parameter	RCoreTask * task	503:33:11923:11937	6290874	0	True				
ANR	6290888	ParameterType	RCoreTask *		6290874	0					
ANR	6290889	Identifier	task		6290874	1					
ANR	6290890	CFGEntryNode	ENTRY		6290874		True				
ANR	6290891	CFGExitNode	EXIT		6290874		True				
ANR	6290892	Symbol	task		6290874						
ANR	6290893	Function	r_core_task_status	507:6:11972:12298							
ANR	6290894	FunctionDef	r_core_task_status (RCoreTask * task)		6290893	0					
ANR	6290895	CompoundStatement		507:55:12021:12298	6290893	0					
ANR	6290896	SwitchStatement	switch ( task -> state )		6290893	0					
ANR	6290897	Condition	task -> state	508:9:12032:12042	6290893	0	True				
ANR	6290898	PtrMemberAccess	task -> state		6290893	0					
ANR	6290899	Identifier	task		6290893	0					
ANR	6290900	Identifier	state		6290893	1					
ANR	6290901	CompoundStatement		2:22:23:23	6290893	1					
ANR	6290902	Label	case R_CORE_TASK_STATE_RUNNING :	509:1:12048:12078	6290893	0	True				
ANR	6290903	Identifier	R_CORE_TASK_STATE_RUNNING		6290893	0					
ANR	6290904	ReturnStatement	"return ""running"" ;"	510:2:12082:12098	6290893	1	True				
ANR	6290905	PrimaryExpression	"""running"""		6290893	0					
ANR	6290906	Label	case R_CORE_TASK_STATE_SLEEPING :	511:1:12101:12132	6290893	2	True				
ANR	6290907	Identifier	R_CORE_TASK_STATE_SLEEPING		6290893	0					
ANR	6290908	ReturnStatement	"return ""sleeping"" ;"	512:2:12136:12153	6290893	3	True				
ANR	6290909	PrimaryExpression	"""sleeping"""		6290893	0					
ANR	6290910	Label	case R_CORE_TASK_STATE_DONE :	513:1:12156:12183	6290893	4	True				
ANR	6290911	Identifier	R_CORE_TASK_STATE_DONE		6290893	0					
ANR	6290912	ReturnStatement	"return ""done"" ;"	514:2:12187:12200	6290893	5	True				
ANR	6290913	PrimaryExpression	"""done"""		6290893	0					
ANR	6290914	Label	case R_CORE_TASK_STATE_BEFORE_START :	515:1:12203:12238	6290893	6	True				
ANR	6290915	Identifier	R_CORE_TASK_STATE_BEFORE_START		6290893	0					
ANR	6290916	ReturnStatement	"return ""before start"" ;"	516:2:12242:12263	6290893	7	True				
ANR	6290917	PrimaryExpression	"""before start"""		6290893	0					
ANR	6290918	Label	default :	517:1:12266:12273	6290893	8	True				
ANR	6290919	Identifier	default		6290893	0					
ANR	6290920	ReturnStatement	"return ""unknown"" ;"	518:2:12277:12293	6290893	9	True				
ANR	6290921	PrimaryExpression	"""unknown"""		6290893	0					
ANR	6290922	ReturnType	const char *		6290893	1					
ANR	6290923	Identifier	r_core_task_status		6290893	2					
ANR	6290924	ParameterList	RCoreTask * task		6290893	3					
ANR	6290925	Parameter	RCoreTask * task	507:38:12004:12018	6290893	0	True				
ANR	6290926	ParameterType	RCoreTask *		6290893	0					
ANR	6290927	Identifier	task		6290893	1					
ANR	6290928	CFGEntryNode	ENTRY		6290893		True				
ANR	6290929	CFGExitNode	EXIT		6290893		True				
ANR	6290930	Symbol	task		6290893						
ANR	6290931	Symbol	task -> state		6290893						
ANR	6290932	Symbol	* task		6290893						
ANR	6290933	Function	r_core_task_self	522:0:12301:12418							
ANR	6290934	FunctionDef	r_core_task_self (RCore * core)		6290933	0					
ANR	6290935	CompoundStatement		522:48:12349:12418	6290933	0					
ANR	6290936	ReturnStatement	return core -> current_task ? core -> current_task : core -> main_task ;	523:1:12352:12416	6290933	0	True				
ANR	6290937	ConditionalExpression	core -> current_task ? core -> current_task : core -> main_task		6290933	0					
ANR	6290938	Condition	core -> current_task		6290933	0					
ANR	6290939	PtrMemberAccess	core -> current_task		6290933	0					
ANR	6290940	Identifier	core		6290933	0					
ANR	6290941	Identifier	current_task		6290933	1					
ANR	6290942	PtrMemberAccess	core -> current_task		6290933	1					
ANR	6290943	Identifier	core		6290933	0					
ANR	6290944	Identifier	current_task		6290933	1					
ANR	6290945	PtrMemberAccess	core -> main_task		6290933	2					
ANR	6290946	Identifier	core		6290933	0					
ANR	6290947	Identifier	main_task		6290933	1					
ANR	6290948	ReturnType	R_API RCoreTask *		6290933	1					
ANR	6290949	Identifier	r_core_task_self		6290933	2					
ANR	6290950	ParameterList	RCore * core		6290933	3					
ANR	6290951	Parameter	RCore * core	522:35:12336:12346	6290933	0	True				
ANR	6290952	ParameterType	RCore *		6290933	0					
ANR	6290953	Identifier	core		6290933	1					
ANR	6290954	CFGEntryNode	ENTRY		6290933		True				
ANR	6290955	CFGExitNode	EXIT		6290933		True				
ANR	6290956	Symbol	core		6290933						
ANR	6290957	Symbol	core -> main_task		6290933						
ANR	6290958	Symbol	* core		6290933						
ANR	6290959	Symbol	core -> current_task		6290933						
ANR	6290960	Function	task_get	526:0:12421:12613							
ANR	6290961	FunctionDef	"task_get (RCore * core , int id)"		6290960	0					
ANR	6290962	CompoundStatement		526:49:12470:12613	6290960	0					
ANR	6290963	IdentifierDeclStatement	RCoreTask * task ;	527:1:12473:12488	6290960	0	True				
ANR	6290964	IdentifierDecl	* task		6290960	0					
ANR	6290965	IdentifierDeclType	RCoreTask *		6290960	0					
ANR	6290966	Identifier	task		6290960	1					
ANR	6290967	IdentifierDeclStatement	RListIter * iter ;	528:1:12491:12506	6290960	1	True				
ANR	6290968	IdentifierDecl	* iter		6290960	0					
ANR	6290969	IdentifierDeclType	RListIter *		6290960	0					
ANR	6290970	Identifier	iter		6290960	1					
ANR	6290971	Statement	r_list_foreach	529:1:12509:12522	6290960	2	True				
ANR	6290972	Statement	(	529:16:12524:12524	6290960	3	True				
ANR	6290973	Statement	core	529:17:12525:12528	6290960	4	True				
ANR	6290974	Statement	->	529:21:12529:12530	6290960	5	True				
ANR	6290975	Statement	tasks	529:23:12531:12535	6290960	6	True				
ANR	6290976	Statement	","	529:28:12536:12536	6290960	7	True				
ANR	6290977	Statement	iter	529:30:12538:12541	6290960	8	True				
ANR	6290978	Statement	","	529:34:12542:12542	6290960	9	True				
ANR	6290979	Statement	task	529:36:12544:12547	6290960	10	True				
ANR	6290980	Statement	)	529:40:12548:12548	6290960	11	True				
ANR	6290981	CompoundStatement		4:42:79:79	6290960	12					
ANR	6290982	IfStatement	if ( task -> id == id )		6290960	0					
ANR	6290983	Condition	task -> id == id	530:6:12558:12571	6290960	0	True				
ANR	6290984	EqualityExpression	task -> id == id		6290960	0		==			
ANR	6290985	PtrMemberAccess	task -> id		6290960	0					
ANR	6290986	Identifier	task		6290960	0					
ANR	6290987	Identifier	id		6290960	1					
ANR	6290988	Identifier	id		6290960	1					
ANR	6290989	CompoundStatement		5:22:103:103	6290960	1					
ANR	6290990	ReturnStatement	return task ;	531:3:12579:12590	6290960	0	True				
ANR	6290991	Identifier	task		6290960	0					
ANR	6290992	ReturnStatement	return NULL ;	534:1:12600:12611	6290960	13	True				
ANR	6290993	Identifier	NULL		6290960	0					
ANR	6290994	ReturnType	static RCoreTask *		6290960	1					
ANR	6290995	Identifier	task_get		6290960	2					
ANR	6290996	ParameterList	"RCore * core , int id"		6290960	3					
ANR	6290997	Parameter	RCore * core	526:28:12449:12459	6290960	0	True				
ANR	6290998	ParameterType	RCore *		6290960	0					
ANR	6290999	Identifier	core		6290960	1					
ANR	6291000	Parameter	int id	526:41:12462:12467	6290960	1	True				
ANR	6291001	ParameterType	int		6290960	0					
ANR	6291002	Identifier	id		6290960	1					
ANR	6291003	CFGEntryNode	ENTRY		6290960		True				
ANR	6291004	CFGExitNode	EXIT		6290960		True				
ANR	6291005	Symbol	core		6290960						
ANR	6291006	Symbol	task		6290960						
ANR	6291007	Symbol	NULL		6290960						
ANR	6291008	Symbol	task -> id		6290960						
ANR	6291009	Symbol	iter		6290960						
ANR	6291010	Symbol	id		6290960						
ANR	6291011	Symbol	* task		6290960						
ANR	6291012	Function	r_core_task_get_incref	537:0:12616:12883							
ANR	6291013	FunctionDef	"r_core_task_get_incref (RCore * core , int id)"		6291012	0					
ANR	6291014	CompoundStatement		537:61:12677:12883	6291012	0					
ANR	6291015	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	538:1:12680:12704	6291012	0	True				
ANR	6291016	IdentifierDecl	old_sigset		6291012	0					
ANR	6291017	IdentifierDeclType	TASK_SIGSET_T		6291012	0					
ANR	6291018	Identifier	old_sigset		6291012	1					
ANR	6291019	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	539:1:12707:12743	6291012	1	True				
ANR	6291020	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6291012	0					
ANR	6291021	Callee	tasks_lock_enter		6291012	0					
ANR	6291022	Identifier	tasks_lock_enter		6291012	0					
ANR	6291023	ArgumentList	core		6291012	1					
ANR	6291024	Argument	core		6291012	0					
ANR	6291025	Identifier	core		6291012	0					
ANR	6291026	Argument	& old_sigset		6291012	1					
ANR	6291027	UnaryOperationExpression	& old_sigset		6291012	0					
ANR	6291028	UnaryOperator	&		6291012	0					
ANR	6291029	Identifier	old_sigset		6291012	1					
ANR	6291030	IdentifierDeclStatement	"RCoreTask * task = task_get ( core , id ) ;"	540:1:12746:12783	6291012	2	True				
ANR	6291031	IdentifierDecl	"* task = task_get ( core , id )"		6291012	0					
ANR	6291032	IdentifierDeclType	RCoreTask *		6291012	0					
ANR	6291033	Identifier	task		6291012	1					
ANR	6291034	AssignmentExpression	"* task = task_get ( core , id )"		6291012	2		=			
ANR	6291035	Identifier	task		6291012	0					
ANR	6291036	CallExpression	"task_get ( core , id )"		6291012	1					
ANR	6291037	Callee	task_get		6291012	0					
ANR	6291038	Identifier	task_get		6291012	0					
ANR	6291039	ArgumentList	core		6291012	1					
ANR	6291040	Argument	core		6291012	0					
ANR	6291041	Identifier	core		6291012	0					
ANR	6291042	Argument	id		6291012	1					
ANR	6291043	Identifier	id		6291012	0					
ANR	6291044	IfStatement	if ( task )		6291012	3					
ANR	6291045	Condition	task	541:5:12790:12793	6291012	0	True				
ANR	6291046	Identifier	task		6291012	0					
ANR	6291047	CompoundStatement		5:11:118:118	6291012	1					
ANR	6291048	ExpressionStatement	r_core_task_incref ( task )	542:2:12800:12825	6291012	0	True				
ANR	6291049	CallExpression	r_core_task_incref ( task )		6291012	0					
ANR	6291050	Callee	r_core_task_incref		6291012	0					
ANR	6291051	Identifier	r_core_task_incref		6291012	0					
ANR	6291052	ArgumentList	task		6291012	1					
ANR	6291053	Argument	task		6291012	0					
ANR	6291054	Identifier	task		6291012	0					
ANR	6291055	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	544:1:12831:12867	6291012	4	True				
ANR	6291056	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6291012	0					
ANR	6291057	Callee	tasks_lock_leave		6291012	0					
ANR	6291058	Identifier	tasks_lock_leave		6291012	0					
ANR	6291059	ArgumentList	core		6291012	1					
ANR	6291060	Argument	core		6291012	0					
ANR	6291061	Identifier	core		6291012	0					
ANR	6291062	Argument	& old_sigset		6291012	1					
ANR	6291063	UnaryOperationExpression	& old_sigset		6291012	0					
ANR	6291064	UnaryOperator	&		6291012	0					
ANR	6291065	Identifier	old_sigset		6291012	1					
ANR	6291066	ReturnStatement	return task ;	545:1:12870:12881	6291012	5	True				
ANR	6291067	Identifier	task		6291012	0					
ANR	6291068	ReturnType	R_API RCoreTask *		6291012	1					
ANR	6291069	Identifier	r_core_task_get_incref		6291012	2					
ANR	6291070	ParameterList	"RCore * core , int id"		6291012	3					
ANR	6291071	Parameter	RCore * core	537:40:12656:12666	6291012	0	True				
ANR	6291072	ParameterType	RCore *		6291012	0					
ANR	6291073	Identifier	core		6291012	1					
ANR	6291074	Parameter	int id	537:53:12669:12674	6291012	1	True				
ANR	6291075	ParameterType	int		6291012	0					
ANR	6291076	Identifier	id		6291012	1					
ANR	6291077	CFGEntryNode	ENTRY		6291012		True				
ANR	6291078	CFGExitNode	EXIT		6291012		True				
ANR	6291079	Symbol	core		6291012						
ANR	6291080	Symbol	task		6291012						
ANR	6291081	Symbol	& old_sigset		6291012						
ANR	6291082	Symbol	old_sigset		6291012						
ANR	6291083	Symbol	id		6291012						
ANR	6291084	Symbol	task_get		6291012						
ANR	6291085	Function	r_core_task_break	548:0:12886:13266							
ANR	6291086	FunctionDef	"r_core_task_break (RCore * core , int id)"		6291085	0					
ANR	6291087	CompoundStatement		548:50:12936:13266	6291085	0					
ANR	6291088	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	549:1:12939:12963	6291085	0	True				
ANR	6291089	IdentifierDecl	old_sigset		6291085	0					
ANR	6291090	IdentifierDeclType	TASK_SIGSET_T		6291085	0					
ANR	6291091	Identifier	old_sigset		6291085	1					
ANR	6291092	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	550:1:12966:13002	6291085	1	True				
ANR	6291093	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6291085	0					
ANR	6291094	Callee	tasks_lock_enter		6291085	0					
ANR	6291095	Identifier	tasks_lock_enter		6291085	0					
ANR	6291096	ArgumentList	core		6291085	1					
ANR	6291097	Argument	core		6291085	0					
ANR	6291098	Identifier	core		6291085	0					
ANR	6291099	Argument	& old_sigset		6291085	1					
ANR	6291100	UnaryOperationExpression	& old_sigset		6291085	0					
ANR	6291101	UnaryOperator	&		6291085	0					
ANR	6291102	Identifier	old_sigset		6291085	1					
ANR	6291103	IdentifierDeclStatement	"RCoreTask * task = task_get ( core , id ) ;"	551:1:13005:13042	6291085	2	True				
ANR	6291104	IdentifierDecl	"* task = task_get ( core , id )"		6291085	0					
ANR	6291105	IdentifierDeclType	RCoreTask *		6291085	0					
ANR	6291106	Identifier	task		6291085	1					
ANR	6291107	AssignmentExpression	"* task = task_get ( core , id )"		6291085	2		=			
ANR	6291108	Identifier	task		6291085	0					
ANR	6291109	CallExpression	"task_get ( core , id )"		6291085	1					
ANR	6291110	Callee	task_get		6291085	0					
ANR	6291111	Identifier	task_get		6291085	0					
ANR	6291112	ArgumentList	core		6291085	1					
ANR	6291113	Argument	core		6291085	0					
ANR	6291114	Identifier	core		6291085	0					
ANR	6291115	Argument	id		6291085	1					
ANR	6291116	Identifier	id		6291085	0					
ANR	6291117	IfStatement	if ( ! task || task -> state == R_CORE_TASK_STATE_DONE )		6291085	3					
ANR	6291118	Condition	! task || task -> state == R_CORE_TASK_STATE_DONE	552:5:13049:13094	6291085	0	True				
ANR	6291119	OrExpression	! task || task -> state == R_CORE_TASK_STATE_DONE		6291085	0		||			
ANR	6291120	UnaryOperationExpression	! task		6291085	0					
ANR	6291121	UnaryOperator	!		6291085	0					
ANR	6291122	Identifier	task		6291085	1					
ANR	6291123	EqualityExpression	task -> state == R_CORE_TASK_STATE_DONE		6291085	1		==			
ANR	6291124	PtrMemberAccess	task -> state		6291085	0					
ANR	6291125	Identifier	task		6291085	0					
ANR	6291126	Identifier	state		6291085	1					
ANR	6291127	Identifier	R_CORE_TASK_STATE_DONE		6291085	1					
ANR	6291128	CompoundStatement		5:53:160:160	6291085	1					
ANR	6291129	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	553:2:13101:13137	6291085	0	True				
ANR	6291130	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6291085	0					
ANR	6291131	Callee	tasks_lock_leave		6291085	0					
ANR	6291132	Identifier	tasks_lock_leave		6291085	0					
ANR	6291133	ArgumentList	core		6291085	1					
ANR	6291134	Argument	core		6291085	0					
ANR	6291135	Identifier	core		6291085	0					
ANR	6291136	Argument	& old_sigset		6291085	1					
ANR	6291137	UnaryOperationExpression	& old_sigset		6291085	0					
ANR	6291138	UnaryOperator	&		6291085	0					
ANR	6291139	Identifier	old_sigset		6291085	1					
ANR	6291140	ReturnStatement	return ;	554:2:13141:13147	6291085	1	True				
ANR	6291141	IfStatement	if ( task -> cons_context )		6291085	4					
ANR	6291142	Condition	task -> cons_context	556:5:13157:13174	6291085	0	True				
ANR	6291143	PtrMemberAccess	task -> cons_context		6291085	0					
ANR	6291144	Identifier	task		6291085	0					
ANR	6291145	Identifier	cons_context		6291085	1					
ANR	6291146	CompoundStatement		9:25:240:240	6291085	1					
ANR	6291147	ExpressionStatement	r_cons_context_break ( task -> cons_context )	557:2:13181:13222	6291085	0	True				
ANR	6291148	CallExpression	r_cons_context_break ( task -> cons_context )		6291085	0					
ANR	6291149	Callee	r_cons_context_break		6291085	0					
ANR	6291150	Identifier	r_cons_context_break		6291085	0					
ANR	6291151	ArgumentList	task -> cons_context		6291085	1					
ANR	6291152	Argument	task -> cons_context		6291085	0					
ANR	6291153	PtrMemberAccess	task -> cons_context		6291085	0					
ANR	6291154	Identifier	task		6291085	0					
ANR	6291155	Identifier	cons_context		6291085	1					
ANR	6291156	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	559:1:13228:13264	6291085	5	True				
ANR	6291157	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6291085	0					
ANR	6291158	Callee	tasks_lock_leave		6291085	0					
ANR	6291159	Identifier	tasks_lock_leave		6291085	0					
ANR	6291160	ArgumentList	core		6291085	1					
ANR	6291161	Argument	core		6291085	0					
ANR	6291162	Identifier	core		6291085	0					
ANR	6291163	Argument	& old_sigset		6291085	1					
ANR	6291164	UnaryOperationExpression	& old_sigset		6291085	0					
ANR	6291165	UnaryOperator	&		6291085	0					
ANR	6291166	Identifier	old_sigset		6291085	1					
ANR	6291167	ReturnType	R_API void		6291085	1					
ANR	6291168	Identifier	r_core_task_break		6291085	2					
ANR	6291169	ParameterList	"RCore * core , int id"		6291085	3					
ANR	6291170	Parameter	RCore * core	548:29:12915:12925	6291085	0	True				
ANR	6291171	ParameterType	RCore *		6291085	0					
ANR	6291172	Identifier	core		6291085	1					
ANR	6291173	Parameter	int id	548:42:12928:12933	6291085	1	True				
ANR	6291174	ParameterType	int		6291085	0					
ANR	6291175	Identifier	id		6291085	1					
ANR	6291176	CFGEntryNode	ENTRY		6291085		True				
ANR	6291177	CFGExitNode	EXIT		6291085		True				
ANR	6291178	Symbol	core		6291085						
ANR	6291179	Symbol	R_CORE_TASK_STATE_DONE		6291085						
ANR	6291180	Symbol	task		6291085						
ANR	6291181	Symbol	task -> cons_context		6291085						
ANR	6291182	Symbol	& old_sigset		6291085						
ANR	6291183	Symbol	task -> state		6291085						
ANR	6291184	Symbol	old_sigset		6291085						
ANR	6291185	Symbol	id		6291085						
ANR	6291186	Symbol	task_get		6291085						
ANR	6291187	Symbol	* task		6291085						
ANR	6291188	Function	r_core_task_break_all	562:0:13269:13602							
ANR	6291189	FunctionDef	r_core_task_break_all (RCore * core)		6291188	0					
ANR	6291190	CompoundStatement		562:46:13315:13602	6291188	0					
ANR	6291191	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	563:1:13318:13342	6291188	0	True				
ANR	6291192	IdentifierDecl	old_sigset		6291188	0					
ANR	6291193	IdentifierDeclType	TASK_SIGSET_T		6291188	0					
ANR	6291194	Identifier	old_sigset		6291188	1					
ANR	6291195	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	564:1:13345:13381	6291188	1	True				
ANR	6291196	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6291188	0					
ANR	6291197	Callee	tasks_lock_enter		6291188	0					
ANR	6291198	Identifier	tasks_lock_enter		6291188	0					
ANR	6291199	ArgumentList	core		6291188	1					
ANR	6291200	Argument	core		6291188	0					
ANR	6291201	Identifier	core		6291188	0					
ANR	6291202	Argument	& old_sigset		6291188	1					
ANR	6291203	UnaryOperationExpression	& old_sigset		6291188	0					
ANR	6291204	UnaryOperator	&		6291188	0					
ANR	6291205	Identifier	old_sigset		6291188	1					
ANR	6291206	IdentifierDeclStatement	RCoreTask * task ;	565:1:13384:13399	6291188	2	True				
ANR	6291207	IdentifierDecl	* task		6291188	0					
ANR	6291208	IdentifierDeclType	RCoreTask *		6291188	0					
ANR	6291209	Identifier	task		6291188	1					
ANR	6291210	IdentifierDeclStatement	RListIter * iter ;	566:1:13402:13417	6291188	3	True				
ANR	6291211	IdentifierDecl	* iter		6291188	0					
ANR	6291212	IdentifierDeclType	RListIter *		6291188	0					
ANR	6291213	Identifier	iter		6291188	1					
ANR	6291214	Statement	r_list_foreach	567:1:13420:13433	6291188	4	True				
ANR	6291215	Statement	(	567:16:13435:13435	6291188	5	True				
ANR	6291216	Statement	core	567:17:13436:13439	6291188	6	True				
ANR	6291217	Statement	->	567:21:13440:13441	6291188	7	True				
ANR	6291218	Statement	tasks	567:23:13442:13446	6291188	8	True				
ANR	6291219	Statement	","	567:28:13447:13447	6291188	9	True				
ANR	6291220	Statement	iter	567:30:13449:13452	6291188	10	True				
ANR	6291221	Statement	","	567:34:13453:13453	6291188	11	True				
ANR	6291222	Statement	task	567:36:13455:13458	6291188	12	True				
ANR	6291223	Statement	)	567:40:13459:13459	6291188	13	True				
ANR	6291224	CompoundStatement		6:42:145:145	6291188	14					
ANR	6291225	IfStatement	if ( task -> state != R_CORE_TASK_STATE_DONE )		6291188	0					
ANR	6291226	Condition	task -> state != R_CORE_TASK_STATE_DONE	568:6:13469:13505	6291188	0	True				
ANR	6291227	EqualityExpression	task -> state != R_CORE_TASK_STATE_DONE		6291188	0		!=			
ANR	6291228	PtrMemberAccess	task -> state		6291188	0					
ANR	6291229	Identifier	task		6291188	0					
ANR	6291230	Identifier	state		6291188	1					
ANR	6291231	Identifier	R_CORE_TASK_STATE_DONE		6291188	1					
ANR	6291232	CompoundStatement		7:45:192:192	6291188	1					
ANR	6291233	ExpressionStatement	r_cons_context_break ( task -> cons_context )	569:3:13513:13554	6291188	0	True				
ANR	6291234	CallExpression	r_cons_context_break ( task -> cons_context )		6291188	0					
ANR	6291235	Callee	r_cons_context_break		6291188	0					
ANR	6291236	Identifier	r_cons_context_break		6291188	0					
ANR	6291237	ArgumentList	task -> cons_context		6291188	1					
ANR	6291238	Argument	task -> cons_context		6291188	0					
ANR	6291239	PtrMemberAccess	task -> cons_context		6291188	0					
ANR	6291240	Identifier	task		6291188	0					
ANR	6291241	Identifier	cons_context		6291188	1					
ANR	6291242	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	572:1:13564:13600	6291188	15	True				
ANR	6291243	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6291188	0					
ANR	6291244	Callee	tasks_lock_leave		6291188	0					
ANR	6291245	Identifier	tasks_lock_leave		6291188	0					
ANR	6291246	ArgumentList	core		6291188	1					
ANR	6291247	Argument	core		6291188	0					
ANR	6291248	Identifier	core		6291188	0					
ANR	6291249	Argument	& old_sigset		6291188	1					
ANR	6291250	UnaryOperationExpression	& old_sigset		6291188	0					
ANR	6291251	UnaryOperator	&		6291188	0					
ANR	6291252	Identifier	old_sigset		6291188	1					
ANR	6291253	ReturnType	R_API void		6291188	1					
ANR	6291254	Identifier	r_core_task_break_all		6291188	2					
ANR	6291255	ParameterList	RCore * core		6291188	3					
ANR	6291256	Parameter	RCore * core	562:33:13302:13312	6291188	0	True				
ANR	6291257	ParameterType	RCore *		6291188	0					
ANR	6291258	Identifier	core		6291188	1					
ANR	6291259	CFGEntryNode	ENTRY		6291188		True				
ANR	6291260	CFGExitNode	EXIT		6291188		True				
ANR	6291261	Symbol	core		6291188						
ANR	6291262	Symbol	R_CORE_TASK_STATE_DONE		6291188						
ANR	6291263	Symbol	task		6291188						
ANR	6291264	Symbol	task -> cons_context		6291188						
ANR	6291265	Symbol	& old_sigset		6291188						
ANR	6291266	Symbol	task -> state		6291188						
ANR	6291267	Symbol	old_sigset		6291188						
ANR	6291268	Symbol	iter		6291188						
ANR	6291269	Symbol	* task		6291188						
ANR	6291270	Function	r_core_task_del	575:0:13605:14110							
ANR	6291271	FunctionDef	"r_core_task_del (RCore * core , int id)"		6291270	0					
ANR	6291272	CompoundStatement		575:48:13653:14110	6291270	0					
ANR	6291273	IdentifierDeclStatement	RCoreTask * task ;	576:1:13656:13671	6291270	0	True				
ANR	6291274	IdentifierDecl	* task		6291270	0					
ANR	6291275	IdentifierDeclType	RCoreTask *		6291270	0					
ANR	6291276	Identifier	task		6291270	1					
ANR	6291277	IdentifierDeclStatement	RListIter * iter ;	577:1:13674:13689	6291270	1	True				
ANR	6291278	IdentifierDecl	* iter		6291270	0					
ANR	6291279	IdentifierDeclType	RListIter *		6291270	0					
ANR	6291280	Identifier	iter		6291270	1					
ANR	6291281	IdentifierDeclStatement	bool ret = false ;	578:1:13692:13708	6291270	2	True				
ANR	6291282	IdentifierDecl	ret = false		6291270	0					
ANR	6291283	IdentifierDeclType	bool		6291270	0					
ANR	6291284	Identifier	ret		6291270	1					
ANR	6291285	AssignmentExpression	ret = false		6291270	2		=			
ANR	6291286	Identifier	false		6291270	0					
ANR	6291287	Identifier	false		6291270	1					
ANR	6291288	IdentifierDeclStatement	TASK_SIGSET_T old_sigset ;	579:1:13711:13735	6291270	3	True				
ANR	6291289	IdentifierDecl	old_sigset		6291270	0					
ANR	6291290	IdentifierDeclType	TASK_SIGSET_T		6291270	0					
ANR	6291291	Identifier	old_sigset		6291270	1					
ANR	6291292	ExpressionStatement	"tasks_lock_enter ( core , & old_sigset )"	580:1:13738:13774	6291270	4	True				
ANR	6291293	CallExpression	"tasks_lock_enter ( core , & old_sigset )"		6291270	0					
ANR	6291294	Callee	tasks_lock_enter		6291270	0					
ANR	6291295	Identifier	tasks_lock_enter		6291270	0					
ANR	6291296	ArgumentList	core		6291270	1					
ANR	6291297	Argument	core		6291270	0					
ANR	6291298	Identifier	core		6291270	0					
ANR	6291299	Argument	& old_sigset		6291270	1					
ANR	6291300	UnaryOperationExpression	& old_sigset		6291270	0					
ANR	6291301	UnaryOperator	&		6291270	0					
ANR	6291302	Identifier	old_sigset		6291270	1					
ANR	6291303	Statement	r_list_foreach	581:1:13777:13790	6291270	5	True				
ANR	6291304	Statement	(	581:16:13792:13792	6291270	6	True				
ANR	6291305	Statement	core	581:17:13793:13796	6291270	7	True				
ANR	6291306	Statement	->	581:21:13797:13798	6291270	8	True				
ANR	6291307	Statement	tasks	581:23:13799:13803	6291270	9	True				
ANR	6291308	Statement	","	581:28:13804:13804	6291270	10	True				
ANR	6291309	Statement	iter	581:30:13806:13809	6291270	11	True				
ANR	6291310	Statement	","	581:34:13810:13810	6291270	12	True				
ANR	6291311	Statement	task	581:36:13812:13815	6291270	13	True				
ANR	6291312	Statement	)	581:40:13816:13816	6291270	14	True				
ANR	6291313	CompoundStatement		7:42:164:164	6291270	15					
ANR	6291314	IfStatement	if ( task -> id == id )		6291270	0					
ANR	6291315	Condition	task -> id == id	582:6:13826:13839	6291270	0	True				
ANR	6291316	EqualityExpression	task -> id == id		6291270	0		==			
ANR	6291317	PtrMemberAccess	task -> id		6291270	0					
ANR	6291318	Identifier	task		6291270	0					
ANR	6291319	Identifier	id		6291270	1					
ANR	6291320	Identifier	id		6291270	1					
ANR	6291321	CompoundStatement		8:22:188:188	6291270	1					
ANR	6291322	IfStatement	if ( task == core -> main_task )		6291270	0					
ANR	6291323	Condition	task == core -> main_task	583:7:13851:13873	6291270	0	True				
ANR	6291324	EqualityExpression	task == core -> main_task		6291270	0		==			
ANR	6291325	Identifier	task		6291270	0					
ANR	6291326	PtrMemberAccess	core -> main_task		6291270	1					
ANR	6291327	Identifier	core		6291270	0					
ANR	6291328	Identifier	main_task		6291270	1					
ANR	6291329	CompoundStatement		9:32:222:222	6291270	1					
ANR	6291330	BreakStatement	break ;	584:4:13882:13887	6291270	0	True				
ANR	6291331	IfStatement	if ( task -> state == R_CORE_TASK_STATE_DONE )		6291270	1					
ANR	6291332	Condition	task -> state == R_CORE_TASK_STATE_DONE	586:7:13901:13937	6291270	0	True				
ANR	6291333	EqualityExpression	task -> state == R_CORE_TASK_STATE_DONE		6291270	0		==			
ANR	6291334	PtrMemberAccess	task -> state		6291270	0					
ANR	6291335	Identifier	task		6291270	0					
ANR	6291336	Identifier	state		6291270	1					
ANR	6291337	Identifier	R_CORE_TASK_STATE_DONE		6291270	1					
ANR	6291338	CompoundStatement		12:46:286:286	6291270	1					
ANR	6291339	ExpressionStatement	"r_list_delete ( core -> tasks , iter )"	587:4:13946:13979	6291270	0	True				
ANR	6291340	CallExpression	"r_list_delete ( core -> tasks , iter )"		6291270	0					
ANR	6291341	Callee	r_list_delete		6291270	0					
ANR	6291342	Identifier	r_list_delete		6291270	0					
ANR	6291343	ArgumentList	core -> tasks		6291270	1					
ANR	6291344	Argument	core -> tasks		6291270	0					
ANR	6291345	PtrMemberAccess	core -> tasks		6291270	0					
ANR	6291346	Identifier	core		6291270	0					
ANR	6291347	Identifier	tasks		6291270	1					
ANR	6291348	Argument	iter		6291270	1					
ANR	6291349	Identifier	iter		6291270	0					
ANR	6291350	ElseStatement	else		6291270	0					
ANR	6291351	CompoundStatement		14:10:337:337	6291270	0					
ANR	6291352	ExpressionStatement	task -> transient = true	589:4:13997:14019	6291270	0	True				
ANR	6291353	AssignmentExpression	task -> transient = true		6291270	0		=			
ANR	6291354	PtrMemberAccess	task -> transient		6291270	0					
ANR	6291355	Identifier	task		6291270	0					
ANR	6291356	Identifier	transient		6291270	1					
ANR	6291357	Identifier	true		6291270	1					
ANR	6291358	ExpressionStatement	ret = true	591:3:14029:14039	6291270	2	True				
ANR	6291359	AssignmentExpression	ret = true		6291270	0		=			
ANR	6291360	Identifier	ret		6291270	0					
ANR	6291361	Identifier	true		6291270	1					
ANR	6291362	BreakStatement	break ;	592:3:14044:14049	6291270	3	True				
ANR	6291363	ExpressionStatement	"tasks_lock_leave ( core , & old_sigset )"	595:1:14059:14095	6291270	16	True				
ANR	6291364	CallExpression	"tasks_lock_leave ( core , & old_sigset )"		6291270	0					
ANR	6291365	Callee	tasks_lock_leave		6291270	0					
ANR	6291366	Identifier	tasks_lock_leave		6291270	0					
ANR	6291367	ArgumentList	core		6291270	1					
ANR	6291368	Argument	core		6291270	0					
ANR	6291369	Identifier	core		6291270	0					
ANR	6291370	Argument	& old_sigset		6291270	1					
ANR	6291371	UnaryOperationExpression	& old_sigset		6291270	0					
ANR	6291372	UnaryOperator	&		6291270	0					
ANR	6291373	Identifier	old_sigset		6291270	1					
ANR	6291374	ReturnStatement	return ret ;	596:1:14098:14108	6291270	17	True				
ANR	6291375	Identifier	ret		6291270	0					
ANR	6291376	ReturnType	R_API int		6291270	1					
ANR	6291377	Identifier	r_core_task_del		6291270	2					
ANR	6291378	ParameterList	"RCore * core , int id"		6291270	3					
ANR	6291379	Parameter	RCore * core	575:27:13632:13642	6291270	0	True				
ANR	6291380	ParameterType	RCore *		6291270	0					
ANR	6291381	Identifier	core		6291270	1					
ANR	6291382	Parameter	int id	575:40:13645:13650	6291270	1	True				
ANR	6291383	ParameterType	int		6291270	0					
ANR	6291384	Identifier	id		6291270	1					
ANR	6291385	CFGEntryNode	ENTRY		6291270		True				
ANR	6291386	CFGExitNode	EXIT		6291270		True				
ANR	6291387	CFGErrorNode	ERROR		6291270		True				
ANR	6291388	Symbol	ret		6291270						
ANR	6291389	Symbol	R_CORE_TASK_STATE_DONE		6291270						
ANR	6291390	Symbol	& old_sigset		6291270						
ANR	6291391	Symbol	task -> id		6291270						
ANR	6291392	Symbol	core -> main_task		6291270						
ANR	6291393	Symbol	false		6291270						
ANR	6291394	Symbol	* core		6291270						
ANR	6291395	Symbol	iter		6291270						
ANR	6291396	Symbol	core		6291270						
ANR	6291397	Symbol	task		6291270						
ANR	6291398	Symbol	core -> tasks		6291270						
ANR	6291399	Symbol	task -> state		6291270						
ANR	6291400	Symbol	old_sigset		6291270						
ANR	6291401	Symbol	true		6291270						
ANR	6291402	Symbol	id		6291270						
ANR	6291403	Symbol	task -> transient		6291270						
ANR	6291404	Symbol	* task		6291270						
ANR	6291405	Function	r_core_task_del_all_done	599:0:14113:14384							
ANR	6291406	FunctionDef	r_core_task_del_all_done (RCore * core)		6291405	0					
ANR	6291407	CompoundStatement		599:50:14163:14384	6291405	0					
ANR	6291408	IdentifierDeclStatement	RCoreTask * task ;	600:1:14166:14181	6291405	0	True				
ANR	6291409	IdentifierDecl	* task		6291405	0					
ANR	6291410	IdentifierDeclType	RCoreTask *		6291405	0					
ANR	6291411	Identifier	task		6291405	1					
ANR	6291412	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	601:1:14184:14207	6291405	1	True				
ANR	6291413	IdentifierDecl	* iter		6291405	0					
ANR	6291414	IdentifierDeclType	RListIter *		6291405	0					
ANR	6291415	Identifier	iter		6291405	1					
ANR	6291416	IdentifierDecl	* iter2		6291405	1					
ANR	6291417	IdentifierDeclType	RListIter *		6291405	0					
ANR	6291418	Identifier	iter2		6291405	1					
ANR	6291419	Statement	r_list_foreach_safe	602:1:14210:14228	6291405	2	True				
ANR	6291420	Statement	(	602:21:14230:14230	6291405	3	True				
ANR	6291421	Statement	core	602:22:14231:14234	6291405	4	True				
ANR	6291422	Statement	->	602:26:14235:14236	6291405	5	True				
ANR	6291423	Statement	tasks	602:28:14237:14241	6291405	6	True				
ANR	6291424	Statement	","	602:33:14242:14242	6291405	7	True				
ANR	6291425	Statement	iter	602:35:14244:14247	6291405	8	True				
ANR	6291426	Statement	","	602:39:14248:14248	6291405	9	True				
ANR	6291427	Statement	iter2	602:41:14250:14254	6291405	10	True				
ANR	6291428	Statement	","	602:46:14255:14255	6291405	11	True				
ANR	6291429	Statement	task	602:48:14257:14260	6291405	12	True				
ANR	6291430	Statement	)	602:52:14261:14261	6291405	13	True				
ANR	6291431	CompoundStatement		4:54:99:99	6291405	14					
ANR	6291432	IfStatement	if ( task != core -> main_task && task -> state == R_CORE_TASK_STATE_DONE )		6291405	0					
ANR	6291433	Condition	task != core -> main_task && task -> state == R_CORE_TASK_STATE_DONE	603:6:14271:14334	6291405	0	True				
ANR	6291434	AndExpression	task != core -> main_task && task -> state == R_CORE_TASK_STATE_DONE		6291405	0		&&			
ANR	6291435	EqualityExpression	task != core -> main_task		6291405	0		!=			
ANR	6291436	Identifier	task		6291405	0					
ANR	6291437	PtrMemberAccess	core -> main_task		6291405	1					
ANR	6291438	Identifier	core		6291405	0					
ANR	6291439	Identifier	main_task		6291405	1					
ANR	6291440	EqualityExpression	task -> state == R_CORE_TASK_STATE_DONE		6291405	1		==			
ANR	6291441	PtrMemberAccess	task -> state		6291405	0					
ANR	6291442	Identifier	task		6291405	0					
ANR	6291443	Identifier	state		6291405	1					
ANR	6291444	Identifier	R_CORE_TASK_STATE_DONE		6291405	1					
ANR	6291445	CompoundStatement		5:72:173:173	6291405	1					
ANR	6291446	ExpressionStatement	"r_list_delete ( core -> tasks , iter )"	604:3:14342:14375	6291405	0	True				
ANR	6291447	CallExpression	"r_list_delete ( core -> tasks , iter )"		6291405	0					
ANR	6291448	Callee	r_list_delete		6291405	0					
ANR	6291449	Identifier	r_list_delete		6291405	0					
ANR	6291450	ArgumentList	core -> tasks		6291405	1					
ANR	6291451	Argument	core -> tasks		6291405	0					
ANR	6291452	PtrMemberAccess	core -> tasks		6291405	0					
ANR	6291453	Identifier	core		6291405	0					
ANR	6291454	Identifier	tasks		6291405	1					
ANR	6291455	Argument	iter		6291405	1					
ANR	6291456	Identifier	iter		6291405	0					
ANR	6291457	ReturnType	R_API void		6291405	1					
ANR	6291458	Identifier	r_core_task_del_all_done		6291405	2					
ANR	6291459	ParameterList	RCore * core		6291405	3					
ANR	6291460	Parameter	RCore * core	599:37:14150:14160	6291405	0	True				
ANR	6291461	ParameterType	RCore *		6291405	0					
ANR	6291462	Identifier	core		6291405	1					
ANR	6291463	CFGEntryNode	ENTRY		6291405		True				
ANR	6291464	CFGExitNode	EXIT		6291405		True				
ANR	6291465	Symbol	core		6291405						
ANR	6291466	Symbol	R_CORE_TASK_STATE_DONE		6291405						
ANR	6291467	Symbol	task		6291405						
ANR	6291468	Symbol	core -> tasks		6291405						
ANR	6291469	Symbol	task -> state		6291405						
ANR	6291470	Symbol	core -> main_task		6291405						
ANR	6291471	Symbol	iter2		6291405						
ANR	6291472	Symbol	* core		6291405						
ANR	6291473	Symbol	iter		6291405						
ANR	6291474	Symbol	* task		6291405						
