command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4265277	File	data/converged/CVE-2019-16718~_radare2/libr_core_cmd_mount.c								
ANR	4265278	DeclStmt									
ANR	4265279	Decl							const char	const char * [ ]	help_msg_m
ANR	4265280	Function	cmd_mount_init	27:0:1248:1324							
ANR	4265281	FunctionDef	cmd_mount_init (RCore * core)		4265280	0					
ANR	4265282	CompoundStatement		27:40:1288:1324	4265280	0					
ANR	4265283	ExpressionStatement	"DEFINE_CMD_DESCRIPTOR ( core , m )"	28:1:1291:1322	4265280	0	True				
ANR	4265284	CallExpression	"DEFINE_CMD_DESCRIPTOR ( core , m )"		4265280	0					
ANR	4265285	Callee	DEFINE_CMD_DESCRIPTOR		4265280	0					
ANR	4265286	Identifier	DEFINE_CMD_DESCRIPTOR		4265280	0					
ANR	4265287	ArgumentList	core		4265280	1					
ANR	4265288	Argument	core		4265280	0					
ANR	4265289	Identifier	core		4265280	0					
ANR	4265290	Argument	m		4265280	1					
ANR	4265291	Identifier	m		4265280	0					
ANR	4265292	ReturnType	static void		4265280	1					
ANR	4265293	Identifier	cmd_mount_init		4265280	2					
ANR	4265294	ParameterList	RCore * core		4265280	3					
ANR	4265295	Parameter	RCore * core	27:27:1275:1285	4265280	0	True				
ANR	4265296	ParameterType	RCore *		4265280	0					
ANR	4265297	Identifier	core		4265280	1					
ANR	4265298	CFGEntryNode	ENTRY		4265280		True				
ANR	4265299	CFGExitNode	EXIT		4265280		True				
ANR	4265300	Symbol	core		4265280						
ANR	4265301	Symbol	m		4265280						
ANR	4265302	Function	cmd_mkdir	31:0:1327:1480							
ANR	4265303	FunctionDef	"cmd_mkdir (void * data , const char * input)"		4265302	0					
ANR	4265304	CompoundStatement		31:52:1379:1480	4265302	0					
ANR	4265305	IdentifierDeclStatement	char * res = r_syscmd_mkdir ( input ) ;	32:1:1382:1416	4265302	0	True				
ANR	4265306	IdentifierDecl	* res = r_syscmd_mkdir ( input )		4265302	0					
ANR	4265307	IdentifierDeclType	char *		4265302	0					
ANR	4265308	Identifier	res		4265302	1					
ANR	4265309	AssignmentExpression	* res = r_syscmd_mkdir ( input )		4265302	2		=			
ANR	4265310	Identifier	res		4265302	0					
ANR	4265311	CallExpression	r_syscmd_mkdir ( input )		4265302	1					
ANR	4265312	Callee	r_syscmd_mkdir		4265302	0					
ANR	4265313	Identifier	r_syscmd_mkdir		4265302	0					
ANR	4265314	ArgumentList	input		4265302	1					
ANR	4265315	Argument	input		4265302	0					
ANR	4265316	Identifier	input		4265302	0					
ANR	4265317	IfStatement	if ( res )		4265302	1					
ANR	4265318	Condition	res	33:5:1423:1425	4265302	0	True				
ANR	4265319	Identifier	res		4265302	0					
ANR	4265320	CompoundStatement		3:10:48:48	4265302	1					
ANR	4265321	ExpressionStatement	r_cons_print ( res )	34:2:1432:1450	4265302	0	True				
ANR	4265322	CallExpression	r_cons_print ( res )		4265302	0					
ANR	4265323	Callee	r_cons_print		4265302	0					
ANR	4265324	Identifier	r_cons_print		4265302	0					
ANR	4265325	ArgumentList	res		4265302	1					
ANR	4265326	Argument	res		4265302	0					
ANR	4265327	Identifier	res		4265302	0					
ANR	4265328	ExpressionStatement	free ( res )	35:2:1454:1464	4265302	1	True				
ANR	4265329	CallExpression	free ( res )		4265302	0					
ANR	4265330	Callee	free		4265302	0					
ANR	4265331	Identifier	free		4265302	0					
ANR	4265332	ArgumentList	res		4265302	1					
ANR	4265333	Argument	res		4265302	0					
ANR	4265334	Identifier	res		4265302	0					
ANR	4265335	ReturnStatement	return 0 ;	37:1:1470:1478	4265302	2	True				
ANR	4265336	PrimaryExpression	0		4265302	0					
ANR	4265337	ReturnType	static int		4265302	1					
ANR	4265338	Identifier	cmd_mkdir		4265302	2					
ANR	4265339	ParameterList	"void * data , const char * input"		4265302	3					
ANR	4265340	Parameter	void * data	31:21:1348:1357	4265302	0	True				
ANR	4265341	ParameterType	void *		4265302	0					
ANR	4265342	Identifier	data		4265302	1					
ANR	4265343	Parameter	const char * input	31:33:1360:1376	4265302	1	True				
ANR	4265344	ParameterType	const char *		4265302	0					
ANR	4265345	Identifier	input		4265302	1					
ANR	4265346	CFGEntryNode	ENTRY		4265302		True				
ANR	4265347	CFGExitNode	EXIT		4265302		True				
ANR	4265348	Symbol	input		4265302						
ANR	4265349	Symbol	res		4265302						
ANR	4265350	Symbol	r_syscmd_mkdir		4265302						
ANR	4265351	Symbol	data		4265302						
ANR	4265352	Function	cmd_mv	40:0:1483:1569							
ANR	4265353	FunctionDef	"cmd_mv (void * data , const char * input)"		4265352	0					
ANR	4265354	CompoundStatement		40:49:1532:1569	4265352	0					
ANR	4265355	ReturnStatement	return r_syscmd_mv ( input ) ? 1 : 0 ;	41:1:1535:1567	4265352	0	True				
ANR	4265356	ConditionalExpression	r_syscmd_mv ( input ) ? 1 : 0		4265352	0					
ANR	4265357	Condition	r_syscmd_mv ( input )		4265352	0					
ANR	4265358	CallExpression	r_syscmd_mv ( input )		4265352	0					
ANR	4265359	Callee	r_syscmd_mv		4265352	0					
ANR	4265360	Identifier	r_syscmd_mv		4265352	0					
ANR	4265361	ArgumentList	input		4265352	1					
ANR	4265362	Argument	input		4265352	0					
ANR	4265363	Identifier	input		4265352	0					
ANR	4265364	PrimaryExpression	1		4265352	1					
ANR	4265365	PrimaryExpression	0		4265352	2					
ANR	4265366	ReturnType	static int		4265352	1					
ANR	4265367	Identifier	cmd_mv		4265352	2					
ANR	4265368	ParameterList	"void * data , const char * input"		4265352	3					
ANR	4265369	Parameter	void * data	40:18:1501:1510	4265352	0	True				
ANR	4265370	ParameterType	void *		4265352	0					
ANR	4265371	Identifier	data		4265352	1					
ANR	4265372	Parameter	const char * input	40:30:1513:1529	4265352	1	True				
ANR	4265373	ParameterType	const char *		4265352	0					
ANR	4265374	Identifier	input		4265352	1					
ANR	4265375	CFGEntryNode	ENTRY		4265352		True				
ANR	4265376	CFGExitNode	EXIT		4265352		True				
ANR	4265377	Symbol	input		4265352						
ANR	4265378	Symbol	r_syscmd_mv		4265352						
ANR	4265379	Symbol	data		4265352						
ANR	4265380	DeclStmt									
ANR	4265381	Decl							char	char *	cwd
ANR	4265382	Function	t2s	47:0:1618:1784							
ANR	4265383	FunctionDef	t2s (const char ch)		4265382	0					
ANR	4265384	CompoundStatement		47:38:1656:1784	4265382	0					
ANR	4265385	SwitchStatement	switch ( ch )		4265382	0					
ANR	4265386	Condition	ch	48:9:1667:1668	4265382	0	True				
ANR	4265387	Identifier	ch		4265382	0					
ANR	4265388	CompoundStatement		2:13:14:14	4265382	1					
ANR	4265389	Label	case 'f' :	49:1:1674:1682	4265382	0	True				
ANR	4265390	ReturnStatement	"return ""file"" ;"	49:11:1684:1697	4265382	1	True				
ANR	4265391	PrimaryExpression	"""file"""		4265382	0					
ANR	4265392	Label	case 'd' :	50:1:1700:1708	4265382	2	True				
ANR	4265393	ReturnStatement	"return ""directory"" ;"	50:11:1710:1728	4265382	3	True				
ANR	4265394	PrimaryExpression	"""directory"""		4265382	0					
ANR	4265395	Label	case 'm' :	51:1:1731:1739	4265382	4	True				
ANR	4265396	ReturnStatement	"return ""mountpoint"" ;"	51:11:1741:1760	4265382	5	True				
ANR	4265397	PrimaryExpression	"""mountpoint"""		4265382	0					
ANR	4265398	ReturnStatement	"return ""unknown"" ;"	53:1:1766:1782	4265382	1	True				
ANR	4265399	PrimaryExpression	"""unknown"""		4265382	0					
ANR	4265400	ReturnType	static const char *		4265382	1					
ANR	4265401	Identifier	t2s		4265382	2					
ANR	4265402	ParameterList	const char ch		4265382	3					
ANR	4265403	Parameter	const char ch	47:23:1641:1653	4265382	0	True				
ANR	4265404	ParameterType	const char		4265382	0					
ANR	4265405	Identifier	ch		4265382	1					
ANR	4265406	CFGEntryNode	ENTRY		4265382		True				
ANR	4265407	CFGExitNode	EXIT		4265382		True				
ANR	4265408	Symbol	ch		4265382						
ANR	4265409	Function	cmd_mount_ls	56:0:1787:3092							
ANR	4265410	FunctionDef	"cmd_mount_ls (RCore * core , const char * input)"		4265409	0					
ANR	4265411	CompoundStatement		56:58:1845:3092	4265409	0					
ANR	4265412	IdentifierDeclStatement	bool isJSON = * input == 'j' ;	57:1:1848:1875	4265409	0	True				
ANR	4265413	IdentifierDecl	isJSON = * input == 'j'		4265409	0					
ANR	4265414	IdentifierDeclType	bool		4265409	0					
ANR	4265415	Identifier	isJSON		4265409	1					
ANR	4265416	AssignmentExpression	isJSON = * input == 'j'		4265409	2		=			
ANR	4265417	Identifier	isJSON		4265409	0					
ANR	4265418	EqualityExpression	* input == 'j'		4265409	1		==			
ANR	4265419	UnaryOperationExpression	* input		4265409	0					
ANR	4265420	UnaryOperator	*		4265409	0					
ANR	4265421	Identifier	input		4265409	1					
ANR	4265422	PrimaryExpression	'j'		4265409	1					
ANR	4265423	IdentifierDeclStatement	RListIter * iter ;	58:1:1878:1893	4265409	1	True				
ANR	4265424	IdentifierDecl	* iter		4265409	0					
ANR	4265425	IdentifierDeclType	RListIter *		4265409	0					
ANR	4265426	Identifier	iter		4265409	1					
ANR	4265427	IdentifierDeclStatement	RFSFile * file ;	59:1:1896:1909	4265409	2	True				
ANR	4265428	IdentifierDecl	* file		4265409	0					
ANR	4265429	IdentifierDeclType	RFSFile *		4265409	0					
ANR	4265430	Identifier	file		4265409	1					
ANR	4265431	IdentifierDeclStatement	RFSRoot * root ;	60:1:1912:1925	4265409	3	True				
ANR	4265432	IdentifierDecl	* root		4265409	0					
ANR	4265433	IdentifierDeclType	RFSRoot *		4265409	0					
ANR	4265434	Identifier	root		4265409	1					
ANR	4265435	ExpressionStatement	input = r_str_trim_ro ( input + isJSON )	61:1:1928:1966	4265409	4	True				
ANR	4265436	AssignmentExpression	input = r_str_trim_ro ( input + isJSON )		4265409	0		=			
ANR	4265437	Identifier	input		4265409	0					
ANR	4265438	CallExpression	r_str_trim_ro ( input + isJSON )		4265409	1					
ANR	4265439	Callee	r_str_trim_ro		4265409	0					
ANR	4265440	Identifier	r_str_trim_ro		4265409	0					
ANR	4265441	ArgumentList	input + isJSON		4265409	1					
ANR	4265442	Argument	input + isJSON		4265409	0					
ANR	4265443	AdditiveExpression	input + isJSON		4265409	0		+			
ANR	4265444	Identifier	input		4265409	0					
ANR	4265445	Identifier	isJSON		4265409	1					
ANR	4265446	IdentifierDeclStatement	"RList * list = r_fs_dir ( core -> fs , input ) ;"	62:1:1969:2009	4265409	5	True				
ANR	4265447	IdentifierDecl	"* list = r_fs_dir ( core -> fs , input )"		4265409	0					
ANR	4265448	IdentifierDeclType	RList *		4265409	0					
ANR	4265449	Identifier	list		4265409	1					
ANR	4265450	AssignmentExpression	"* list = r_fs_dir ( core -> fs , input )"		4265409	2		=			
ANR	4265451	Identifier	list		4265409	0					
ANR	4265452	CallExpression	"r_fs_dir ( core -> fs , input )"		4265409	1					
ANR	4265453	Callee	r_fs_dir		4265409	0					
ANR	4265454	Identifier	r_fs_dir		4265409	0					
ANR	4265455	ArgumentList	core -> fs		4265409	1					
ANR	4265456	Argument	core -> fs		4265409	0					
ANR	4265457	PtrMemberAccess	core -> fs		4265409	0					
ANR	4265458	Identifier	core		4265409	0					
ANR	4265459	Identifier	fs		4265409	1					
ANR	4265460	Argument	input		4265409	1					
ANR	4265461	Identifier	input		4265409	0					
ANR	4265462	IdentifierDeclStatement	PJ * pj = NULL ;	63:1:2012:2025	4265409	6	True				
ANR	4265463	IdentifierDecl	* pj = NULL		4265409	0					
ANR	4265464	IdentifierDeclType	PJ *		4265409	0					
ANR	4265465	Identifier	pj		4265409	1					
ANR	4265466	AssignmentExpression	* pj = NULL		4265409	2		=			
ANR	4265467	Identifier	NULL		4265409	0					
ANR	4265468	Identifier	NULL		4265409	1					
ANR	4265469	IfStatement	if ( isJSON )		4265409	7					
ANR	4265470	Condition	isJSON	64:5:2032:2037	4265409	0	True				
ANR	4265471	Identifier	isJSON		4265409	0					
ANR	4265472	CompoundStatement		9:13:194:194	4265409	1					
ANR	4265473	ExpressionStatement	pj = pj_new ( )	65:2:2044:2058	4265409	0	True				
ANR	4265474	AssignmentExpression	pj = pj_new ( )		4265409	0		=			
ANR	4265475	Identifier	pj		4265409	0					
ANR	4265476	CallExpression	pj_new ( )		4265409	1					
ANR	4265477	Callee	pj_new		4265409	0					
ANR	4265478	Identifier	pj_new		4265409	0					
ANR	4265479	ArgumentList			4265409	1					
ANR	4265480	ExpressionStatement	pj_a ( pj )	66:2:2062:2071	4265409	1	True				
ANR	4265481	CallExpression	pj_a ( pj )		4265409	0					
ANR	4265482	Callee	pj_a		4265409	0					
ANR	4265483	Identifier	pj_a		4265409	0					
ANR	4265484	ArgumentList	pj		4265409	1					
ANR	4265485	Argument	pj		4265409	0					
ANR	4265486	Identifier	pj		4265409	0					
ANR	4265487	IfStatement	if ( list )		4265409	8					
ANR	4265488	Condition	list	68:5:2081:2084	4265409	0	True				
ANR	4265489	Identifier	list		4265409	0					
ANR	4265490	CompoundStatement		13:11:241:241	4265409	1					
ANR	4265491	Statement	r_list_foreach	69:2:2091:2104	4265409	0	True				
ANR	4265492	Statement	(	69:17:2106:2106	4265409	1	True				
ANR	4265493	Statement	list	69:18:2107:2110	4265409	2	True				
ANR	4265494	Statement	","	69:22:2111:2111	4265409	3	True				
ANR	4265495	Statement	iter	69:24:2113:2116	4265409	4	True				
ANR	4265496	Statement	","	69:28:2117:2117	4265409	5	True				
ANR	4265497	Statement	file	69:30:2119:2122	4265409	6	True				
ANR	4265498	Statement	)	69:34:2123:2123	4265409	7	True				
ANR	4265499	CompoundStatement		14:36:279:279	4265409	8					
ANR	4265500	IfStatement	if ( isJSON )		4265409	0					
ANR	4265501	Condition	isJSON	70:7:2134:2139	4265409	0	True				
ANR	4265502	Identifier	isJSON		4265409	0					
ANR	4265503	CompoundStatement		15:15:296:296	4265409	1					
ANR	4265504	ExpressionStatement	pj_o ( pj )	71:4:2148:2157	4265409	0	True				
ANR	4265505	CallExpression	pj_o ( pj )		4265409	0					
ANR	4265506	Callee	pj_o		4265409	0					
ANR	4265507	Identifier	pj_o		4265409	0					
ANR	4265508	ArgumentList	pj		4265409	1					
ANR	4265509	Argument	pj		4265409	0					
ANR	4265510	Identifier	pj		4265409	0					
ANR	4265511	ExpressionStatement	"pj_ks ( pj , ""type"" , t2s ( file -> type ) )"	72:4:2163:2198	4265409	1	True				
ANR	4265512	CallExpression	"pj_ks ( pj , ""type"" , t2s ( file -> type ) )"		4265409	0					
ANR	4265513	Callee	pj_ks		4265409	0					
ANR	4265514	Identifier	pj_ks		4265409	0					
ANR	4265515	ArgumentList	pj		4265409	1					
ANR	4265516	Argument	pj		4265409	0					
ANR	4265517	Identifier	pj		4265409	0					
ANR	4265518	Argument	"""type"""		4265409	1					
ANR	4265519	PrimaryExpression	"""type"""		4265409	0					
ANR	4265520	Argument	t2s ( file -> type )		4265409	2					
ANR	4265521	CallExpression	t2s ( file -> type )		4265409	0					
ANR	4265522	Callee	t2s		4265409	0					
ANR	4265523	Identifier	t2s		4265409	0					
ANR	4265524	ArgumentList	file -> type		4265409	1					
ANR	4265525	Argument	file -> type		4265409	0					
ANR	4265526	PtrMemberAccess	file -> type		4265409	0					
ANR	4265527	Identifier	file		4265409	0					
ANR	4265528	Identifier	type		4265409	1					
ANR	4265529	ExpressionStatement	"pj_ks ( pj , ""name"" , file -> name )"	73:4:2204:2234	4265409	2	True				
ANR	4265530	CallExpression	"pj_ks ( pj , ""name"" , file -> name )"		4265409	0					
ANR	4265531	Callee	pj_ks		4265409	0					
ANR	4265532	Identifier	pj_ks		4265409	0					
ANR	4265533	ArgumentList	pj		4265409	1					
ANR	4265534	Argument	pj		4265409	0					
ANR	4265535	Identifier	pj		4265409	0					
ANR	4265536	Argument	"""name"""		4265409	1					
ANR	4265537	PrimaryExpression	"""name"""		4265409	0					
ANR	4265538	Argument	file -> name		4265409	2					
ANR	4265539	PtrMemberAccess	file -> name		4265409	0					
ANR	4265540	Identifier	file		4265409	0					
ANR	4265541	Identifier	name		4265409	1					
ANR	4265542	ExpressionStatement	pj_end ( pj )	74:4:2240:2251	4265409	3	True				
ANR	4265543	CallExpression	pj_end ( pj )		4265409	0					
ANR	4265544	Callee	pj_end		4265409	0					
ANR	4265545	Identifier	pj_end		4265409	0					
ANR	4265546	ArgumentList	pj		4265409	1					
ANR	4265547	Argument	pj		4265409	0					
ANR	4265548	Identifier	pj		4265409	0					
ANR	4265549	ElseStatement	else		4265409	0					
ANR	4265550	CompoundStatement		20:10:417:417	4265409	0					
ANR	4265551	ExpressionStatement	"r_cons_printf ( ""%c %s\\n"" , file -> type , file -> name )"	76:4:2269:2318	4265409	0	True				
ANR	4265552	CallExpression	"r_cons_printf ( ""%c %s\\n"" , file -> type , file -> name )"		4265409	0					
ANR	4265553	Callee	r_cons_printf		4265409	0					
ANR	4265554	Identifier	r_cons_printf		4265409	0					
ANR	4265555	ArgumentList	"""%c %s\\n"""		4265409	1					
ANR	4265556	Argument	"""%c %s\\n"""		4265409	0					
ANR	4265557	PrimaryExpression	"""%c %s\\n"""		4265409	0					
ANR	4265558	Argument	file -> type		4265409	1					
ANR	4265559	PtrMemberAccess	file -> type		4265409	0					
ANR	4265560	Identifier	file		4265409	0					
ANR	4265561	Identifier	type		4265409	1					
ANR	4265562	Argument	file -> name		4265409	2					
ANR	4265563	PtrMemberAccess	file -> name		4265409	0					
ANR	4265564	Identifier	file		4265409	0					
ANR	4265565	Identifier	name		4265409	1					
ANR	4265566	ExpressionStatement	r_list_free ( list )	79:2:2331:2349	4265409	9	True				
ANR	4265567	CallExpression	r_list_free ( list )		4265409	0					
ANR	4265568	Callee	r_list_free		4265409	0					
ANR	4265569	Identifier	r_list_free		4265409	0					
ANR	4265570	ArgumentList	list		4265409	1					
ANR	4265571	Argument	list		4265409	0					
ANR	4265572	Identifier	list		4265409	0					
ANR	4265573	IdentifierDeclStatement	"const char * path = * input ? input : ""/"" ;"	81:1:2355:2392	4265409	9	True				
ANR	4265574	IdentifierDecl	"* path = * input ? input : ""/"""		4265409	0					
ANR	4265575	IdentifierDeclType	const char *		4265409	0					
ANR	4265576	Identifier	path		4265409	1					
ANR	4265577	AssignmentExpression	"* path = * input ? input : ""/"""		4265409	2		=			
ANR	4265578	Identifier	path		4265409	0					
ANR	4265579	ConditionalExpression	"* input ? input : ""/"""		4265409	1					
ANR	4265580	Condition	* input		4265409	0					
ANR	4265581	UnaryOperationExpression	* input		4265409	0					
ANR	4265582	UnaryOperator	*		4265409	0					
ANR	4265583	Identifier	input		4265409	1					
ANR	4265584	Identifier	input		4265409	1					
ANR	4265585	PrimaryExpression	"""/"""		4265409	2					
ANR	4265586	Statement	r_list_foreach	82:1:2395:2408	4265409	10	True				
ANR	4265587	Statement	(	82:16:2410:2410	4265409	11	True				
ANR	4265588	Statement	core	82:17:2411:2414	4265409	12	True				
ANR	4265589	Statement	->	82:21:2415:2416	4265409	13	True				
ANR	4265590	Statement	fs	82:23:2417:2418	4265409	14	True				
ANR	4265591	Statement	->	82:25:2419:2420	4265409	15	True				
ANR	4265592	Statement	roots	82:27:2421:2425	4265409	16	True				
ANR	4265593	Statement	","	82:32:2426:2426	4265409	17	True				
ANR	4265594	Statement	iter	82:34:2428:2431	4265409	18	True				
ANR	4265595	Statement	","	82:38:2432:2432	4265409	19	True				
ANR	4265596	Statement	root	82:40:2434:2437	4265409	20	True				
ANR	4265597	Statement	)	82:44:2438:2438	4265409	21	True				
ANR	4265598	CompoundStatement		27:46:594:594	4265409	22					
ANR	4265599	IfStatement	"if ( ! strncmp ( path , root -> path , strlen ( path ) ) )"		4265409	0					
ANR	4265600	Condition	"! strncmp ( path , root -> path , strlen ( path ) )"	84:6:2486:2527	4265409	0	True				
ANR	4265601	UnaryOperationExpression	"! strncmp ( path , root -> path , strlen ( path ) )"		4265409	0					
ANR	4265602	UnaryOperator	!		4265409	0					
ANR	4265603	CallExpression	"strncmp ( path , root -> path , strlen ( path ) )"		4265409	1					
ANR	4265604	Callee	strncmp		4265409	0					
ANR	4265605	Identifier	strncmp		4265409	0					
ANR	4265606	ArgumentList	path		4265409	1					
ANR	4265607	Argument	path		4265409	0					
ANR	4265608	Identifier	path		4265409	0					
ANR	4265609	Argument	root -> path		4265409	1					
ANR	4265610	PtrMemberAccess	root -> path		4265409	0					
ANR	4265611	Identifier	root		4265409	0					
ANR	4265612	Identifier	path		4265409	1					
ANR	4265613	Argument	strlen ( path )		4265409	2					
ANR	4265614	CallExpression	strlen ( path )		4265409	0					
ANR	4265615	Callee	strlen		4265409	0					
ANR	4265616	Identifier	strlen		4265409	0					
ANR	4265617	ArgumentList	path		4265409	1					
ANR	4265618	Argument	path		4265409	0					
ANR	4265619	Identifier	path		4265409	0					
ANR	4265620	CompoundStatement		31:3:726:767	4265409	1					
ANR	4265621	IdentifierDeclStatement	char * base = strdup ( root -> path ) ;	85:3:2535:2567	4265409	0	True				
ANR	4265622	IdentifierDecl	* base = strdup ( root -> path )		4265409	0					
ANR	4265623	IdentifierDeclType	char *		4265409	0					
ANR	4265624	Identifier	base		4265409	1					
ANR	4265625	AssignmentExpression	* base = strdup ( root -> path )		4265409	2		=			
ANR	4265626	Identifier	base		4265409	0					
ANR	4265627	CallExpression	strdup ( root -> path )		4265409	1					
ANR	4265628	Callee	strdup		4265409	0					
ANR	4265629	Identifier	strdup		4265409	0					
ANR	4265630	ArgumentList	root -> path		4265409	1					
ANR	4265631	Argument	root -> path		4265409	0					
ANR	4265632	PtrMemberAccess	root -> path		4265409	0					
ANR	4265633	Identifier	root		4265409	0					
ANR	4265634	Identifier	path		4265409	1					
ANR	4265635	IdentifierDeclStatement	"char * ls = ( char * ) r_str_lchr ( base , '/' ) ;"	86:3:2572:2613	4265409	1	True				
ANR	4265636	IdentifierDecl	"* ls = ( char * ) r_str_lchr ( base , '/' )"		4265409	0					
ANR	4265637	IdentifierDeclType	char *		4265409	0					
ANR	4265638	Identifier	ls		4265409	1					
ANR	4265639	AssignmentExpression	"* ls = ( char * ) r_str_lchr ( base , '/' )"		4265409	2		=			
ANR	4265640	Identifier	ls		4265409	0					
ANR	4265641	CastExpression	"( char * ) r_str_lchr ( base , '/' )"		4265409	1					
ANR	4265642	CastTarget	char *		4265409	0					
ANR	4265643	CallExpression	"r_str_lchr ( base , '/' )"		4265409	1					
ANR	4265644	Callee	r_str_lchr		4265409	0					
ANR	4265645	Identifier	r_str_lchr		4265409	0					
ANR	4265646	ArgumentList	base		4265409	1					
ANR	4265647	Argument	base		4265409	0					
ANR	4265648	Identifier	base		4265409	0					
ANR	4265649	Argument	'/'		4265409	1					
ANR	4265650	PrimaryExpression	'/'		4265409	0					
ANR	4265651	IfStatement	if ( ls )		4265409	2					
ANR	4265652	Condition	ls	87:7:2622:2623	4265409	0	True				
ANR	4265653	Identifier	ls		4265409	0					
ANR	4265654	CompoundStatement		32:11:780:780	4265409	1					
ANR	4265655	ExpressionStatement	ls ++	88:4:2632:2636	4265409	0	True				
ANR	4265656	PostIncDecOperationExpression	ls ++		4265409	0					
ANR	4265657	Identifier	ls		4265409	0					
ANR	4265658	IncDec	++		4265409	1					
ANR	4265659	ExpressionStatement	* ls = 0	89:4:2642:2649	4265409	1	True				
ANR	4265660	AssignmentExpression	* ls = 0		4265409	0		=			
ANR	4265661	UnaryOperationExpression	* ls		4265409	0					
ANR	4265662	UnaryOperator	*		4265409	0					
ANR	4265663	Identifier	ls		4265409	1					
ANR	4265664	PrimaryExpression	0		4265409	1					
ANR	4265665	IfStatement	"if ( ! strcmp ( path , base ) )"		4265409	3					
ANR	4265666	Condition	"! strcmp ( path , base )"	92:7:2702:2721	4265409	0	True				
ANR	4265667	UnaryOperationExpression	"! strcmp ( path , base )"		4265409	0					
ANR	4265668	UnaryOperator	!		4265409	0					
ANR	4265669	CallExpression	"strcmp ( path , base )"		4265409	1					
ANR	4265670	Callee	strcmp		4265409	0					
ANR	4265671	Identifier	strcmp		4265409	0					
ANR	4265672	ArgumentList	path		4265409	1					
ANR	4265673	Argument	path		4265409	0					
ANR	4265674	Identifier	path		4265409	0					
ANR	4265675	Argument	base		4265409	1					
ANR	4265676	Identifier	base		4265409	0					
ANR	4265677	CompoundStatement		37:29:878:878	4265409	1					
ANR	4265678	IfStatement	if ( isJSON )		4265409	0					
ANR	4265679	Condition	isJSON	93:8:2734:2739	4265409	0	True				
ANR	4265680	Identifier	isJSON		4265409	0					
ANR	4265681	CompoundStatement		38:16:896:896	4265409	1					
ANR	4265682	ExpressionStatement	pj_o ( pj )	94:5:2749:2758	4265409	0	True				
ANR	4265683	CallExpression	pj_o ( pj )		4265409	0					
ANR	4265684	Callee	pj_o		4265409	0					
ANR	4265685	Identifier	pj_o		4265409	0					
ANR	4265686	ArgumentList	pj		4265409	1					
ANR	4265687	Argument	pj		4265409	0					
ANR	4265688	Identifier	pj		4265409	0					
ANR	4265689	ExpressionStatement	"pj_ks ( pj , ""path"" , root -> path )"	95:5:2765:2795	4265409	1	True				
ANR	4265690	CallExpression	"pj_ks ( pj , ""path"" , root -> path )"		4265409	0					
ANR	4265691	Callee	pj_ks		4265409	0					
ANR	4265692	Identifier	pj_ks		4265409	0					
ANR	4265693	ArgumentList	pj		4265409	1					
ANR	4265694	Argument	pj		4265409	0					
ANR	4265695	Identifier	pj		4265409	0					
ANR	4265696	Argument	"""path"""		4265409	1					
ANR	4265697	PrimaryExpression	"""path"""		4265409	0					
ANR	4265698	Argument	root -> path		4265409	2					
ANR	4265699	PtrMemberAccess	root -> path		4265409	0					
ANR	4265700	Identifier	root		4265409	0					
ANR	4265701	Identifier	path		4265409	1					
ANR	4265702	ExpressionStatement	"pj_ks ( pj , ""type"" , ""mountpoint"" )"	96:5:2802:2834	4265409	2	True				
ANR	4265703	CallExpression	"pj_ks ( pj , ""type"" , ""mountpoint"" )"		4265409	0					
ANR	4265704	Callee	pj_ks		4265409	0					
ANR	4265705	Identifier	pj_ks		4265409	0					
ANR	4265706	ArgumentList	pj		4265409	1					
ANR	4265707	Argument	pj		4265409	0					
ANR	4265708	Identifier	pj		4265409	0					
ANR	4265709	Argument	"""type"""		4265409	1					
ANR	4265710	PrimaryExpression	"""type"""		4265409	0					
ANR	4265711	Argument	"""mountpoint"""		4265409	2					
ANR	4265712	PrimaryExpression	"""mountpoint"""		4265409	0					
ANR	4265713	ExpressionStatement	pj_end ( pj )	97:5:2841:2852	4265409	3	True				
ANR	4265714	CallExpression	pj_end ( pj )		4265409	0					
ANR	4265715	Callee	pj_end		4265409	0					
ANR	4265716	Identifier	pj_end		4265409	0					
ANR	4265717	ArgumentList	pj		4265409	1					
ANR	4265718	Argument	pj		4265409	0					
ANR	4265719	Identifier	pj		4265409	0					
ANR	4265720	ElseStatement	else		4265409	0					
ANR	4265721	CompoundStatement		43:11:1019:1019	4265409	0					
ANR	4265722	ExpressionStatement	"r_cons_printf ( ""m %s\\n"" , root -> path )"	99:5:2872:2908	4265409	0	True				
ANR	4265723	CallExpression	"r_cons_printf ( ""m %s\\n"" , root -> path )"		4265409	0					
ANR	4265724	Callee	r_cons_printf		4265409	0					
ANR	4265725	Identifier	r_cons_printf		4265409	0					
ANR	4265726	ArgumentList	"""m %s\\n"""		4265409	1					
ANR	4265727	Argument	"""m %s\\n"""		4265409	0					
ANR	4265728	PrimaryExpression	"""m %s\\n"""		4265409	0					
ANR	4265729	Argument	root -> path		4265409	1					
ANR	4265730	PtrMemberAccess	root -> path		4265409	0					
ANR	4265731	Identifier	root		4265409	0					
ANR	4265732	Identifier	path		4265409	1					
ANR	4265733	ExpressionStatement	free ( base )	102:3:2981:2992	4265409	4	True				
ANR	4265734	CallExpression	free ( base )		4265409	0					
ANR	4265735	Callee	free		4265409	0					
ANR	4265736	Identifier	free		4265409	0					
ANR	4265737	ArgumentList	base		4265409	1					
ANR	4265738	Argument	base		4265409	0					
ANR	4265739	Identifier	base		4265409	0					
ANR	4265740	IfStatement	if ( isJSON )		4265409	23					
ANR	4265741	Condition	isJSON	105:5:3006:3011	4265409	0	True				
ANR	4265742	Identifier	isJSON		4265409	0					
ANR	4265743	CompoundStatement		50:13:1168:1168	4265409	1					
ANR	4265744	ExpressionStatement	pj_end ( pj )	106:2:3018:3029	4265409	0	True				
ANR	4265745	CallExpression	pj_end ( pj )		4265409	0					
ANR	4265746	Callee	pj_end		4265409	0					
ANR	4265747	Identifier	pj_end		4265409	0					
ANR	4265748	ArgumentList	pj		4265409	1					
ANR	4265749	Argument	pj		4265409	0					
ANR	4265750	Identifier	pj		4265409	0					
ANR	4265751	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	107:2:3033:3071	4265409	1	True				
ANR	4265752	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4265409	0					
ANR	4265753	Callee	r_cons_printf		4265409	0					
ANR	4265754	Identifier	r_cons_printf		4265409	0					
ANR	4265755	ArgumentList	"""%s\\n"""		4265409	1					
ANR	4265756	Argument	"""%s\\n"""		4265409	0					
ANR	4265757	PrimaryExpression	"""%s\\n"""		4265409	0					
ANR	4265758	Argument	pj_string ( pj )		4265409	1					
ANR	4265759	CallExpression	pj_string ( pj )		4265409	0					
ANR	4265760	Callee	pj_string		4265409	0					
ANR	4265761	Identifier	pj_string		4265409	0					
ANR	4265762	ArgumentList	pj		4265409	1					
ANR	4265763	Argument	pj		4265409	0					
ANR	4265764	Identifier	pj		4265409	0					
ANR	4265765	ExpressionStatement	pj_free ( pj )	108:2:3075:3087	4265409	2	True				
ANR	4265766	CallExpression	pj_free ( pj )		4265409	0					
ANR	4265767	Callee	pj_free		4265409	0					
ANR	4265768	Identifier	pj_free		4265409	0					
ANR	4265769	ArgumentList	pj		4265409	1					
ANR	4265770	Argument	pj		4265409	0					
ANR	4265771	Identifier	pj		4265409	0					
ANR	4265772	ReturnType	static void		4265409	1					
ANR	4265773	Identifier	cmd_mount_ls		4265409	2					
ANR	4265774	ParameterList	"RCore * core , const char * input"		4265409	3					
ANR	4265775	Parameter	RCore * core	56:26:1813:1823	4265409	0	True				
ANR	4265776	ParameterType	RCore *		4265409	0					
ANR	4265777	Identifier	core		4265409	1					
ANR	4265778	Parameter	const char * input	56:39:1826:1842	4265409	1	True				
ANR	4265779	ParameterType	const char *		4265409	0					
ANR	4265780	Identifier	input		4265409	1					
ANR	4265781	CFGEntryNode	ENTRY		4265409		True				
ANR	4265782	CFGExitNode	EXIT		4265409		True				
ANR	4265783	Symbol	pj_string		4265409						
ANR	4265784	Symbol	file -> name		4265409						
ANR	4265785	Symbol	ls		4265409						
ANR	4265786	Symbol	* input		4265409						
ANR	4265787	Symbol	* core		4265409						
ANR	4265788	Symbol	r_fs_dir		4265409						
ANR	4265789	Symbol	file -> type		4265409						
ANR	4265790	Symbol	path		4265409						
ANR	4265791	Symbol	strncmp		4265409						
ANR	4265792	Symbol	strlen		4265409						
ANR	4265793	Symbol	file		4265409						
ANR	4265794	Symbol	root		4265409						
ANR	4265795	Symbol	strcmp		4265409						
ANR	4265796	Symbol	NULL		4265409						
ANR	4265797	Symbol	iter		4265409						
ANR	4265798	Symbol	list		4265409						
ANR	4265799	Symbol	* file		4265409						
ANR	4265800	Symbol	* ls		4265409						
ANR	4265801	Symbol	core		4265409						
ANR	4265802	Symbol	input		4265409						
ANR	4265803	Symbol	t2s		4265409						
ANR	4265804	Symbol	r_str_lchr		4265409						
ANR	4265805	Symbol	isJSON		4265409						
ANR	4265806	Symbol	root -> path		4265409						
ANR	4265807	Symbol	r_str_trim_ro		4265409						
ANR	4265808	Symbol	pj		4265409						
ANR	4265809	Symbol	pj_new		4265409						
ANR	4265810	Symbol	core -> fs		4265409						
ANR	4265811	Symbol	* root		4265409						
ANR	4265812	Symbol	strdup		4265409						
ANR	4265813	Symbol	base		4265409						
ANR	4265814	Function	cmd_mount	112:0:3095:10333							
ANR	4265815	FunctionDef	"cmd_mount (void * data , const char * _input)"		4265814	0					
ANR	4265816	CompoundStatement		112:53:3148:10333	4265814	0					
ANR	4265817	IdentifierDeclStatement	ut64 off = 0 ;	113:1:3151:3163	4265814	0	True				
ANR	4265818	IdentifierDecl	off = 0		4265814	0					
ANR	4265819	IdentifierDeclType	ut64		4265814	0					
ANR	4265820	Identifier	off		4265814	1					
ANR	4265821	AssignmentExpression	off = 0		4265814	2		=			
ANR	4265822	Identifier	off		4265814	0					
ANR	4265823	PrimaryExpression	0		4265814	1					
ANR	4265824	IdentifierDeclStatement	"char * input , * oinput , * ptr , * ptr2 ;"	114:1:3166:3199	4265814	1	True				
ANR	4265825	IdentifierDecl	* input		4265814	0					
ANR	4265826	IdentifierDeclType	char *		4265814	0					
ANR	4265827	Identifier	input		4265814	1					
ANR	4265828	IdentifierDecl	* oinput		4265814	1					
ANR	4265829	IdentifierDeclType	char *		4265814	0					
ANR	4265830	Identifier	oinput		4265814	1					
ANR	4265831	IdentifierDecl	* ptr		4265814	2					
ANR	4265832	IdentifierDeclType	char *		4265814	0					
ANR	4265833	Identifier	ptr		4265814	1					
ANR	4265834	IdentifierDecl	* ptr2		4265814	3					
ANR	4265835	IdentifierDeclType	char *		4265814	0					
ANR	4265836	Identifier	ptr2		4265814	1					
ANR	4265837	IdentifierDeclStatement	RList * list ;	115:1:3202:3213	4265814	2	True				
ANR	4265838	IdentifierDecl	* list		4265814	0					
ANR	4265839	IdentifierDeclType	RList *		4265814	0					
ANR	4265840	Identifier	list		4265814	1					
ANR	4265841	IdentifierDeclStatement	RListIter * iter ;	116:1:3216:3231	4265814	3	True				
ANR	4265842	IdentifierDecl	* iter		4265814	0					
ANR	4265843	IdentifierDeclType	RListIter *		4265814	0					
ANR	4265844	Identifier	iter		4265814	1					
ANR	4265845	IdentifierDeclStatement	RFSFile * file ;	117:1:3234:3247	4265814	4	True				
ANR	4265846	IdentifierDecl	* file		4265814	0					
ANR	4265847	IdentifierDeclType	RFSFile *		4265814	0					
ANR	4265848	Identifier	file		4265814	1					
ANR	4265849	IdentifierDeclStatement	RFSRoot * root ;	118:1:3250:3263	4265814	5	True				
ANR	4265850	IdentifierDecl	* root		4265814	0					
ANR	4265851	IdentifierDeclType	RFSRoot *		4265814	0					
ANR	4265852	Identifier	root		4265814	1					
ANR	4265853	IdentifierDeclStatement	RFSPlugin * plug ;	119:1:3266:3281	4265814	6	True				
ANR	4265854	IdentifierDecl	* plug		4265814	0					
ANR	4265855	IdentifierDeclType	RFSPlugin *		4265814	0					
ANR	4265856	Identifier	plug		4265814	1					
ANR	4265857	IdentifierDeclStatement	RFSPartition * part ;	120:1:3284:3302	4265814	7	True				
ANR	4265858	IdentifierDecl	* part		4265814	0					
ANR	4265859	IdentifierDeclType	RFSPartition *		4265814	0					
ANR	4265860	Identifier	part		4265814	1					
ANR	4265861	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	121:1:3305:3332	4265814	8	True				
ANR	4265862	IdentifierDecl	* core = ( RCore * ) data		4265814	0					
ANR	4265863	IdentifierDeclType	RCore *		4265814	0					
ANR	4265864	Identifier	core		4265814	1					
ANR	4265865	AssignmentExpression	* core = ( RCore * ) data		4265814	2		=			
ANR	4265866	Identifier	core		4265814	0					
ANR	4265867	CastExpression	( RCore * ) data		4265814	1					
ANR	4265868	CastTarget	RCore *		4265814	0					
ANR	4265869	Identifier	data		4265814	1					
ANR	4265870	IfStatement	"if ( ! strncmp ( ""kdir"" , _input , 4 ) )"		4265814	9					
ANR	4265871	Condition	"! strncmp ( ""kdir"" , _input , 4 )"	123:5:3340:3367	4265814	0	True				
ANR	4265872	UnaryOperationExpression	"! strncmp ( ""kdir"" , _input , 4 )"		4265814	0					
ANR	4265873	UnaryOperator	!		4265814	0					
ANR	4265874	CallExpression	"strncmp ( ""kdir"" , _input , 4 )"		4265814	1					
ANR	4265875	Callee	strncmp		4265814	0					
ANR	4265876	Identifier	strncmp		4265814	0					
ANR	4265877	ArgumentList	"""kdir"""		4265814	1					
ANR	4265878	Argument	"""kdir"""		4265814	0					
ANR	4265879	PrimaryExpression	"""kdir"""		4265814	0					
ANR	4265880	Argument	_input		4265814	1					
ANR	4265881	Identifier	_input		4265814	0					
ANR	4265882	Argument	4		4265814	2					
ANR	4265883	PrimaryExpression	4		4265814	0					
ANR	4265884	CompoundStatement		12:35:221:221	4265814	1					
ANR	4265885	ReturnStatement	"return cmd_mkdir ( data , _input ) ;"	124:2:3374:3405	4265814	0	True				
ANR	4265886	CallExpression	"cmd_mkdir ( data , _input )"		4265814	0					
ANR	4265887	Callee	cmd_mkdir		4265814	0					
ANR	4265888	Identifier	cmd_mkdir		4265814	0					
ANR	4265889	ArgumentList	data		4265814	1					
ANR	4265890	Argument	data		4265814	0					
ANR	4265891	Identifier	data		4265814	0					
ANR	4265892	Argument	_input		4265814	1					
ANR	4265893	Identifier	_input		4265814	0					
ANR	4265894	IfStatement	"if ( ! strncmp ( ""v"" , _input , 1 ) )"		4265814	10					
ANR	4265895	Condition	"! strncmp ( ""v"" , _input , 1 )"	126:5:3415:3439	4265814	0	True				
ANR	4265896	UnaryOperationExpression	"! strncmp ( ""v"" , _input , 1 )"		4265814	0					
ANR	4265897	UnaryOperator	!		4265814	0					
ANR	4265898	CallExpression	"strncmp ( ""v"" , _input , 1 )"		4265814	1					
ANR	4265899	Callee	strncmp		4265814	0					
ANR	4265900	Identifier	strncmp		4265814	0					
ANR	4265901	ArgumentList	"""v"""		4265814	1					
ANR	4265902	Argument	"""v"""		4265814	0					
ANR	4265903	PrimaryExpression	"""v"""		4265814	0					
ANR	4265904	Argument	_input		4265814	1					
ANR	4265905	Identifier	_input		4265814	0					
ANR	4265906	Argument	1		4265814	2					
ANR	4265907	PrimaryExpression	1		4265814	0					
ANR	4265908	CompoundStatement		15:32:293:293	4265814	1					
ANR	4265909	ReturnStatement	"return cmd_mv ( data , _input ) ;"	127:2:3446:3474	4265814	0	True				
ANR	4265910	CallExpression	"cmd_mv ( data , _input )"		4265814	0					
ANR	4265911	Callee	cmd_mv		4265814	0					
ANR	4265912	Identifier	cmd_mv		4265814	0					
ANR	4265913	ArgumentList	data		4265814	1					
ANR	4265914	Argument	data		4265814	0					
ANR	4265915	Identifier	data		4265814	0					
ANR	4265916	Argument	_input		4265814	1					
ANR	4265917	Identifier	_input		4265814	0					
ANR	4265918	ExpressionStatement	input = oinput = strdup ( _input )	129:1:3480:3512	4265814	11	True				
ANR	4265919	AssignmentExpression	input = oinput = strdup ( _input )		4265814	0		=			
ANR	4265920	Identifier	input		4265814	0					
ANR	4265921	AssignmentExpression	oinput = strdup ( _input )		4265814	1		=			
ANR	4265922	Identifier	oinput		4265814	0					
ANR	4265923	CallExpression	strdup ( _input )		4265814	1					
ANR	4265924	Callee	strdup		4265814	0					
ANR	4265925	Identifier	strdup		4265814	0					
ANR	4265926	ArgumentList	_input		4265814	1					
ANR	4265927	Argument	_input		4265814	0					
ANR	4265928	Identifier	_input		4265814	0					
ANR	4265929	SwitchStatement	switch ( * input )		4265814	12					
ANR	4265930	Condition	* input	131:9:3524:3529	4265814	0	True				
ANR	4265931	UnaryOperationExpression	* input		4265814	0					
ANR	4265932	UnaryOperator	*		4265814	0					
ANR	4265933	Identifier	input		4265814	1					
ANR	4265934	CompoundStatement		20:17:383:383	4265814	1					
ANR	4265935	Label	case ' ' :	132:1:3535:3543	4265814	0	True				
ANR	4265936	ExpressionStatement	input = ( char * ) r_str_trim_ro ( input + 1 )	133:2:3547:3588	4265814	1	True				
ANR	4265937	AssignmentExpression	input = ( char * ) r_str_trim_ro ( input + 1 )		4265814	0		=			
ANR	4265938	Identifier	input		4265814	0					
ANR	4265939	CastExpression	( char * ) r_str_trim_ro ( input + 1 )		4265814	1					
ANR	4265940	CastTarget	char *		4265814	0					
ANR	4265941	CallExpression	r_str_trim_ro ( input + 1 )		4265814	1					
ANR	4265942	Callee	r_str_trim_ro		4265814	0					
ANR	4265943	Identifier	r_str_trim_ro		4265814	0					
ANR	4265944	ArgumentList	input + 1		4265814	1					
ANR	4265945	Argument	input + 1		4265814	0					
ANR	4265946	AdditiveExpression	input + 1		4265814	0		+			
ANR	4265947	Identifier	input		4265814	0					
ANR	4265948	PrimaryExpression	1		4265814	1					
ANR	4265949	ExpressionStatement	"ptr = strchr ( input , ' ' )"	134:2:3592:3617	4265814	2	True				
ANR	4265950	AssignmentExpression	"ptr = strchr ( input , ' ' )"		4265814	0		=			
ANR	4265951	Identifier	ptr		4265814	0					
ANR	4265952	CallExpression	"strchr ( input , ' ' )"		4265814	1					
ANR	4265953	Callee	strchr		4265814	0					
ANR	4265954	Identifier	strchr		4265814	0					
ANR	4265955	ArgumentList	input		4265814	1					
ANR	4265956	Argument	input		4265814	0					
ANR	4265957	Identifier	input		4265814	0					
ANR	4265958	Argument	' '		4265814	1					
ANR	4265959	PrimaryExpression	' '		4265814	0					
ANR	4265960	IfStatement	if ( ptr )		4265814	3					
ANR	4265961	Condition	ptr	135:6:3625:3627	4265814	0	True				
ANR	4265962	Identifier	ptr		4265814	0					
ANR	4265963	CompoundStatement		36:3:758:782	4265814	1					
ANR	4265964	ExpressionStatement	* ptr = 0	136:3:3635:3643	4265814	0	True				
ANR	4265965	AssignmentExpression	* ptr = 0		4265814	0		=			
ANR	4265966	UnaryOperationExpression	* ptr		4265814	0					
ANR	4265967	UnaryOperator	*		4265814	0					
ANR	4265968	Identifier	ptr		4265814	1					
ANR	4265969	PrimaryExpression	0		4265814	1					
ANR	4265970	ExpressionStatement	ptr = ( char * ) r_str_trim_ro ( ptr + 1 )	137:3:3648:3685	4265814	1	True				
ANR	4265971	AssignmentExpression	ptr = ( char * ) r_str_trim_ro ( ptr + 1 )		4265814	0		=			
ANR	4265972	Identifier	ptr		4265814	0					
ANR	4265973	CastExpression	( char * ) r_str_trim_ro ( ptr + 1 )		4265814	1					
ANR	4265974	CastTarget	char *		4265814	0					
ANR	4265975	CallExpression	r_str_trim_ro ( ptr + 1 )		4265814	1					
ANR	4265976	Callee	r_str_trim_ro		4265814	0					
ANR	4265977	Identifier	r_str_trim_ro		4265814	0					
ANR	4265978	ArgumentList	ptr + 1		4265814	1					
ANR	4265979	Argument	ptr + 1		4265814	0					
ANR	4265980	AdditiveExpression	ptr + 1		4265814	0		+			
ANR	4265981	Identifier	ptr		4265814	0					
ANR	4265982	PrimaryExpression	1		4265814	1					
ANR	4265983	ExpressionStatement	"ptr2 = strchr ( ptr , ' ' )"	138:3:3690:3714	4265814	2	True				
ANR	4265984	AssignmentExpression	"ptr2 = strchr ( ptr , ' ' )"		4265814	0		=			
ANR	4265985	Identifier	ptr2		4265814	0					
ANR	4265986	CallExpression	"strchr ( ptr , ' ' )"		4265814	1					
ANR	4265987	Callee	strchr		4265814	0					
ANR	4265988	Identifier	strchr		4265814	0					
ANR	4265989	ArgumentList	ptr		4265814	1					
ANR	4265990	Argument	ptr		4265814	0					
ANR	4265991	Identifier	ptr		4265814	0					
ANR	4265992	Argument	' '		4265814	1					
ANR	4265993	PrimaryExpression	' '		4265814	0					
ANR	4265994	IfStatement	if ( ptr2 )		4265814	3					
ANR	4265995	Condition	ptr2	139:7:3723:3726	4265814	0	True				
ANR	4265996	Identifier	ptr2		4265814	0					
ANR	4265997	CompoundStatement		28:13:580:580	4265814	1					
ANR	4265998	ExpressionStatement	* ptr2 = 0	140:4:3735:3744	4265814	0	True				
ANR	4265999	AssignmentExpression	* ptr2 = 0		4265814	0		=			
ANR	4266000	UnaryOperationExpression	* ptr2		4265814	0					
ANR	4266001	UnaryOperator	*		4265814	0					
ANR	4266002	Identifier	ptr2		4265814	1					
ANR	4266003	PrimaryExpression	0		4265814	1					
ANR	4266004	ExpressionStatement	"off = r_num_math ( core -> num , ptr2 + 1 )"	141:4:3750:3786	4265814	1	True				
ANR	4266005	AssignmentExpression	"off = r_num_math ( core -> num , ptr2 + 1 )"		4265814	0		=			
ANR	4266006	Identifier	off		4265814	0					
ANR	4266007	CallExpression	"r_num_math ( core -> num , ptr2 + 1 )"		4265814	1					
ANR	4266008	Callee	r_num_math		4265814	0					
ANR	4266009	Identifier	r_num_math		4265814	0					
ANR	4266010	ArgumentList	core -> num		4265814	1					
ANR	4266011	Argument	core -> num		4265814	0					
ANR	4266012	PtrMemberAccess	core -> num		4265814	0					
ANR	4266013	Identifier	core		4265814	0					
ANR	4266014	Identifier	num		4265814	1					
ANR	4266015	Argument	ptr2 + 1		4265814	1					
ANR	4266016	AdditiveExpression	ptr2 + 1		4265814	0		+			
ANR	4266017	Identifier	ptr2		4265814	0					
ANR	4266018	PrimaryExpression	1		4265814	1					
ANR	4266019	ExpressionStatement	input = ( char * ) r_str_trim_ro ( input )	143:3:3796:3833	4265814	4	True				
ANR	4266020	AssignmentExpression	input = ( char * ) r_str_trim_ro ( input )		4265814	0		=			
ANR	4266021	Identifier	input		4265814	0					
ANR	4266022	CastExpression	( char * ) r_str_trim_ro ( input )		4265814	1					
ANR	4266023	CastTarget	char *		4265814	0					
ANR	4266024	CallExpression	r_str_trim_ro ( input )		4265814	1					
ANR	4266025	Callee	r_str_trim_ro		4265814	0					
ANR	4266026	Identifier	r_str_trim_ro		4265814	0					
ANR	4266027	ArgumentList	input		4265814	1					
ANR	4266028	Argument	input		4265814	0					
ANR	4266029	Identifier	input		4265814	0					
ANR	4266030	ExpressionStatement	ptr = ( char * ) r_str_trim_ro ( ptr )	144:3:3838:3870	4265814	5	True				
ANR	4266031	AssignmentExpression	ptr = ( char * ) r_str_trim_ro ( ptr )		4265814	0		=			
ANR	4266032	Identifier	ptr		4265814	0					
ANR	4266033	CastExpression	( char * ) r_str_trim_ro ( ptr )		4265814	1					
ANR	4266034	CastTarget	char *		4265814	0					
ANR	4266035	CallExpression	r_str_trim_ro ( ptr )		4265814	1					
ANR	4266036	Callee	r_str_trim_ro		4265814	0					
ANR	4266037	Identifier	r_str_trim_ro		4265814	0					
ANR	4266038	ArgumentList	ptr		4265814	1					
ANR	4266039	Argument	ptr		4265814	0					
ANR	4266040	Identifier	ptr		4265814	0					
ANR	4266041	IdentifierDeclStatement	const char * mountp = input ;	146:3:3876:3902	4265814	6	True				
ANR	4266042	IdentifierDecl	* mountp = input		4265814	0					
ANR	4266043	IdentifierDeclType	const char *		4265814	0					
ANR	4266044	Identifier	mountp		4265814	1					
ANR	4266045	AssignmentExpression	* mountp = input		4265814	2		=			
ANR	4266046	Identifier	input		4265814	0					
ANR	4266047	Identifier	input		4265814	1					
ANR	4266048	IdentifierDeclStatement	const char * fstype = ptr ;	147:3:3907:3931	4265814	7	True				
ANR	4266049	IdentifierDecl	* fstype = ptr		4265814	0					
ANR	4266050	IdentifierDeclType	const char *		4265814	0					
ANR	4266051	Identifier	fstype		4265814	1					
ANR	4266052	AssignmentExpression	* fstype = ptr		4265814	2		=			
ANR	4266053	Identifier	ptr		4265814	0					
ANR	4266054	Identifier	ptr		4265814	1					
ANR	4266055	IfStatement	if ( * mountp != '/' )		4265814	8					
ANR	4266056	Condition	* mountp != '/'	148:7:3940:3953	4265814	0	True				
ANR	4266057	EqualityExpression	* mountp != '/'		4265814	0		!=			
ANR	4266058	UnaryOperationExpression	* mountp		4265814	0					
ANR	4266059	UnaryOperator	*		4265814	0					
ANR	4266060	Identifier	mountp		4265814	1					
ANR	4266061	PrimaryExpression	'/'		4265814	1					
ANR	4266062	CompoundStatement		37:23:807:807	4265814	1					
ANR	4266063	IfStatement	if ( * fstype != '/' )		4265814	0					
ANR	4266064	Condition	* fstype != '/'	149:8:3966:3979	4265814	0	True				
ANR	4266065	EqualityExpression	* fstype != '/'		4265814	0		!=			
ANR	4266066	UnaryOperationExpression	* fstype		4265814	0					
ANR	4266067	UnaryOperator	*		4265814	0					
ANR	4266068	Identifier	fstype		4265814	1					
ANR	4266069	PrimaryExpression	'/'		4265814	1					
ANR	4266070	CompoundStatement		38:24:833:833	4265814	1					
ANR	4266071	ExpressionStatement	"eprintf ( ""Invalid mountpoint\\n"" )"	150:5:3989:4021	4265814	0	True				
ANR	4266072	CallExpression	"eprintf ( ""Invalid mountpoint\\n"" )"		4265814	0					
ANR	4266073	Callee	eprintf		4265814	0					
ANR	4266074	Identifier	eprintf		4265814	0					
ANR	4266075	ArgumentList	"""Invalid mountpoint\\n"""		4265814	1					
ANR	4266076	Argument	"""Invalid mountpoint\\n"""		4265814	0					
ANR	4266077	PrimaryExpression	"""Invalid mountpoint\\n"""		4265814	0					
ANR	4266078	ReturnStatement	return 0 ;	151:5:4028:4036	4265814	1	True				
ANR	4266079	PrimaryExpression	0		4265814	0					
ANR	4266080	ExpressionStatement	mountp = ptr	153:4:4048:4060	4265814	1	True				
ANR	4266081	AssignmentExpression	mountp = ptr		4265814	0		=			
ANR	4266082	Identifier	mountp		4265814	0					
ANR	4266083	Identifier	ptr		4265814	1					
ANR	4266084	ExpressionStatement	fstype = input	154:4:4066:4080	4265814	2	True				
ANR	4266085	AssignmentExpression	fstype = input		4265814	0		=			
ANR	4266086	Identifier	fstype		4265814	0					
ANR	4266087	Identifier	input		4265814	1					
ANR	4266088	IfStatement	"if ( ! r_fs_mount ( core -> fs , fstype , mountp , off ) )"		4265814	9					
ANR	4266089	Condition	"! r_fs_mount ( core -> fs , fstype , mountp , off )"	157:7:4095:4137	4265814	0	True				
ANR	4266090	UnaryOperationExpression	"! r_fs_mount ( core -> fs , fstype , mountp , off )"		4265814	0					
ANR	4266091	UnaryOperator	!		4265814	0					
ANR	4266092	CallExpression	"r_fs_mount ( core -> fs , fstype , mountp , off )"		4265814	1					
ANR	4266093	Callee	r_fs_mount		4265814	0					
ANR	4266094	Identifier	r_fs_mount		4265814	0					
ANR	4266095	ArgumentList	core -> fs		4265814	1					
ANR	4266096	Argument	core -> fs		4265814	0					
ANR	4266097	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266098	Identifier	core		4265814	0					
ANR	4266099	Identifier	fs		4265814	1					
ANR	4266100	Argument	fstype		4265814	1					
ANR	4266101	Identifier	fstype		4265814	0					
ANR	4266102	Argument	mountp		4265814	2					
ANR	4266103	Identifier	mountp		4265814	0					
ANR	4266104	Argument	off		4265814	3					
ANR	4266105	Identifier	off		4265814	0					
ANR	4266106	CompoundStatement		46:52:991:991	4265814	1					
ANR	4266107	ExpressionStatement	"eprintf ( ""Cannot mount %s\\n"" , input )"	158:4:4146:4182	4265814	0	True				
ANR	4266108	CallExpression	"eprintf ( ""Cannot mount %s\\n"" , input )"		4265814	0					
ANR	4266109	Callee	eprintf		4265814	0					
ANR	4266110	Identifier	eprintf		4265814	0					
ANR	4266111	ArgumentList	"""Cannot mount %s\\n"""		4265814	1					
ANR	4266112	Argument	"""Cannot mount %s\\n"""		4265814	0					
ANR	4266113	PrimaryExpression	"""Cannot mount %s\\n"""		4265814	0					
ANR	4266114	Argument	input		4265814	1					
ANR	4266115	Identifier	input		4265814	0					
ANR	4266116	ElseStatement	else		4265814	0					
ANR	4266117	CompoundStatement		49:9:1049:1049	4265814	0					
ANR	4266118	IfStatement	"if ( ! ( ptr = r_fs_name ( core -> fs , core -> offset ) ) )"		4265814	0					
ANR	4266119	Condition	"! ( ptr = r_fs_name ( core -> fs , core -> offset ) )"	161:7:4207:4249	4265814	0	True				
ANR	4266120	UnaryOperationExpression	"! ( ptr = r_fs_name ( core -> fs , core -> offset ) )"		4265814	0					
ANR	4266121	UnaryOperator	!		4265814	0					
ANR	4266122	AssignmentExpression	"ptr = r_fs_name ( core -> fs , core -> offset )"		4265814	1		=			
ANR	4266123	Identifier	ptr		4265814	0					
ANR	4266124	CallExpression	"r_fs_name ( core -> fs , core -> offset )"		4265814	1					
ANR	4266125	Callee	r_fs_name		4265814	0					
ANR	4266126	Identifier	r_fs_name		4265814	0					
ANR	4266127	ArgumentList	core -> fs		4265814	1					
ANR	4266128	Argument	core -> fs		4265814	0					
ANR	4266129	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266130	Identifier	core		4265814	0					
ANR	4266131	Identifier	fs		4265814	1					
ANR	4266132	Argument	core -> offset		4265814	1					
ANR	4266133	PtrMemberAccess	core -> offset		4265814	0					
ANR	4266134	Identifier	core		4265814	0					
ANR	4266135	Identifier	offset		4265814	1					
ANR	4266136	CompoundStatement		50:52:1103:1103	4265814	1					
ANR	4266137	ExpressionStatement	"eprintf ( ""Unknown filesystem type\\n"" )"	162:4:4258:4295	4265814	0	True				
ANR	4266138	CallExpression	"eprintf ( ""Unknown filesystem type\\n"" )"		4265814	0					
ANR	4266139	Callee	eprintf		4265814	0					
ANR	4266140	Identifier	eprintf		4265814	0					
ANR	4266141	ArgumentList	"""Unknown filesystem type\\n"""		4265814	1					
ANR	4266142	Argument	"""Unknown filesystem type\\n"""		4265814	0					
ANR	4266143	PrimaryExpression	"""Unknown filesystem type\\n"""		4265814	0					
ANR	4266144	IfStatement	"if ( ! r_fs_mount ( core -> fs , ptr , input , core -> offset ) )"		4265814	1					
ANR	4266145	Condition	"! r_fs_mount ( core -> fs , ptr , input , core -> offset )"	164:7:4309:4356	4265814	0	True				
ANR	4266146	UnaryOperationExpression	"! r_fs_mount ( core -> fs , ptr , input , core -> offset )"		4265814	0					
ANR	4266147	UnaryOperator	!		4265814	0					
ANR	4266148	CallExpression	"r_fs_mount ( core -> fs , ptr , input , core -> offset )"		4265814	1					
ANR	4266149	Callee	r_fs_mount		4265814	0					
ANR	4266150	Identifier	r_fs_mount		4265814	0					
ANR	4266151	ArgumentList	core -> fs		4265814	1					
ANR	4266152	Argument	core -> fs		4265814	0					
ANR	4266153	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266154	Identifier	core		4265814	0					
ANR	4266155	Identifier	fs		4265814	1					
ANR	4266156	Argument	ptr		4265814	1					
ANR	4266157	Identifier	ptr		4265814	0					
ANR	4266158	Argument	input		4265814	2					
ANR	4266159	Identifier	input		4265814	0					
ANR	4266160	Argument	core -> offset		4265814	3					
ANR	4266161	PtrMemberAccess	core -> offset		4265814	0					
ANR	4266162	Identifier	core		4265814	0					
ANR	4266163	Identifier	offset		4265814	1					
ANR	4266164	CompoundStatement		53:57:1210:1210	4265814	1					
ANR	4266165	ExpressionStatement	"eprintf ( ""Cannot mount %s\\n"" , input )"	165:4:4365:4401	4265814	0	True				
ANR	4266166	CallExpression	"eprintf ( ""Cannot mount %s\\n"" , input )"		4265814	0					
ANR	4266167	Callee	eprintf		4265814	0					
ANR	4266168	Identifier	eprintf		4265814	0					
ANR	4266169	ArgumentList	"""Cannot mount %s\\n"""		4265814	1					
ANR	4266170	Argument	"""Cannot mount %s\\n"""		4265814	0					
ANR	4266171	PrimaryExpression	"""Cannot mount %s\\n"""		4265814	0					
ANR	4266172	Argument	input		4265814	1					
ANR	4266173	Identifier	input		4265814	0					
ANR	4266174	ExpressionStatement	free ( ptr )	167:3:4411:4421	4265814	2	True				
ANR	4266175	CallExpression	free ( ptr )		4265814	0					
ANR	4266176	Callee	free		4265814	0					
ANR	4266177	Identifier	free		4265814	0					
ANR	4266178	ArgumentList	ptr		4265814	1					
ANR	4266179	Argument	ptr		4265814	0					
ANR	4266180	Identifier	ptr		4265814	0					
ANR	4266181	BreakStatement	break ;	169:2:4429:4434	4265814	4	True				
ANR	4266182	Label	case '-' :	170:1:4437:4445	4265814	5	True				
ANR	4266183	ExpressionStatement	"r_fs_umount ( core -> fs , input + 1 )"	171:2:4449:4480	4265814	6	True				
ANR	4266184	CallExpression	"r_fs_umount ( core -> fs , input + 1 )"		4265814	0					
ANR	4266185	Callee	r_fs_umount		4265814	0					
ANR	4266186	Identifier	r_fs_umount		4265814	0					
ANR	4266187	ArgumentList	core -> fs		4265814	1					
ANR	4266188	Argument	core -> fs		4265814	0					
ANR	4266189	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266190	Identifier	core		4265814	0					
ANR	4266191	Identifier	fs		4265814	1					
ANR	4266192	Argument	input + 1		4265814	1					
ANR	4266193	AdditiveExpression	input + 1		4265814	0		+			
ANR	4266194	Identifier	input		4265814	0					
ANR	4266195	PrimaryExpression	1		4265814	1					
ANR	4266196	BreakStatement	break ;	172:2:4484:4489	4265814	7	True				
ANR	4266197	Label	case 'j' :	173:1:4492:4500	4265814	8	True				
ANR	4266198	CompoundStatement		64:3:1360:1378	4265814	9					
ANR	4266199	IdentifierDeclStatement	PJ * pj = pj_new ( ) ;	175:3:4509:4527	4265814	0	True				
ANR	4266200	IdentifierDecl	* pj = pj_new ( )		4265814	0					
ANR	4266201	IdentifierDeclType	PJ *		4265814	0					
ANR	4266202	Identifier	pj		4265814	1					
ANR	4266203	AssignmentExpression	* pj = pj_new ( )		4265814	2		=			
ANR	4266204	Identifier	pj		4265814	0					
ANR	4266205	CallExpression	pj_new ( )		4265814	1					
ANR	4266206	Callee	pj_new		4265814	0					
ANR	4266207	Identifier	pj_new		4265814	0					
ANR	4266208	ArgumentList			4265814	1					
ANR	4266209	ExpressionStatement	pj_o ( pj )	176:3:4532:4541	4265814	1	True				
ANR	4266210	CallExpression	pj_o ( pj )		4265814	0					
ANR	4266211	Callee	pj_o		4265814	0					
ANR	4266212	Identifier	pj_o		4265814	0					
ANR	4266213	ArgumentList	pj		4265814	1					
ANR	4266214	Argument	pj		4265814	0					
ANR	4266215	Identifier	pj		4265814	0					
ANR	4266216	ExpressionStatement	"pj_k ( pj , ""mountpoints"" )"	177:3:4546:4570	4265814	2	True				
ANR	4266217	CallExpression	"pj_k ( pj , ""mountpoints"" )"		4265814	0					
ANR	4266218	Callee	pj_k		4265814	0					
ANR	4266219	Identifier	pj_k		4265814	0					
ANR	4266220	ArgumentList	pj		4265814	1					
ANR	4266221	Argument	pj		4265814	0					
ANR	4266222	Identifier	pj		4265814	0					
ANR	4266223	Argument	"""mountpoints"""		4265814	1					
ANR	4266224	PrimaryExpression	"""mountpoints"""		4265814	0					
ANR	4266225	ExpressionStatement	pj_a ( pj )	178:3:4575:4584	4265814	3	True				
ANR	4266226	CallExpression	pj_a ( pj )		4265814	0					
ANR	4266227	Callee	pj_a		4265814	0					
ANR	4266228	Identifier	pj_a		4265814	0					
ANR	4266229	ArgumentList	pj		4265814	1					
ANR	4266230	Argument	pj		4265814	0					
ANR	4266231	Identifier	pj		4265814	0					
ANR	4266232	Statement	r_list_foreach	179:3:4589:4602	4265814	4	True				
ANR	4266233	Statement	(	179:18:4604:4604	4265814	5	True				
ANR	4266234	Statement	core	179:19:4605:4608	4265814	6	True				
ANR	4266235	Statement	->	179:23:4609:4610	4265814	7	True				
ANR	4266236	Statement	fs	179:25:4611:4612	4265814	8	True				
ANR	4266237	Statement	->	179:27:4613:4614	4265814	9	True				
ANR	4266238	Statement	roots	179:29:4615:4619	4265814	10	True				
ANR	4266239	Statement	","	179:34:4620:4620	4265814	11	True				
ANR	4266240	Statement	iter	179:36:4622:4625	4265814	12	True				
ANR	4266241	Statement	","	179:40:4626:4626	4265814	13	True				
ANR	4266242	Statement	root	179:42:4628:4631	4265814	14	True				
ANR	4266243	Statement	)	179:46:4632:4632	4265814	15	True				
ANR	4266244	CompoundStatement		68:48:1485:1485	4265814	16					
ANR	4266245	ExpressionStatement	pj_o ( pj )	180:4:4640:4649	4265814	0	True				
ANR	4266246	CallExpression	pj_o ( pj )		4265814	0					
ANR	4266247	Callee	pj_o		4265814	0					
ANR	4266248	Identifier	pj_o		4265814	0					
ANR	4266249	ArgumentList	pj		4265814	1					
ANR	4266250	Argument	pj		4265814	0					
ANR	4266251	Identifier	pj		4265814	0					
ANR	4266252	ExpressionStatement	"pj_ks ( pj , ""path"" , root -> path )"	181:4:4655:4685	4265814	1	True				
ANR	4266253	CallExpression	"pj_ks ( pj , ""path"" , root -> path )"		4265814	0					
ANR	4266254	Callee	pj_ks		4265814	0					
ANR	4266255	Identifier	pj_ks		4265814	0					
ANR	4266256	ArgumentList	pj		4265814	1					
ANR	4266257	Argument	pj		4265814	0					
ANR	4266258	Identifier	pj		4265814	0					
ANR	4266259	Argument	"""path"""		4265814	1					
ANR	4266260	PrimaryExpression	"""path"""		4265814	0					
ANR	4266261	Argument	root -> path		4265814	2					
ANR	4266262	PtrMemberAccess	root -> path		4265814	0					
ANR	4266263	Identifier	root		4265814	0					
ANR	4266264	Identifier	path		4265814	1					
ANR	4266265	ExpressionStatement	"pj_ks ( pj , ""plugin"" , root -> p -> name )"	182:4:4691:4726	4265814	2	True				
ANR	4266266	CallExpression	"pj_ks ( pj , ""plugin"" , root -> p -> name )"		4265814	0					
ANR	4266267	Callee	pj_ks		4265814	0					
ANR	4266268	Identifier	pj_ks		4265814	0					
ANR	4266269	ArgumentList	pj		4265814	1					
ANR	4266270	Argument	pj		4265814	0					
ANR	4266271	Identifier	pj		4265814	0					
ANR	4266272	Argument	"""plugin"""		4265814	1					
ANR	4266273	PrimaryExpression	"""plugin"""		4265814	0					
ANR	4266274	Argument	root -> p -> name		4265814	2					
ANR	4266275	PtrMemberAccess	root -> p -> name		4265814	0					
ANR	4266276	PtrMemberAccess	root -> p		4265814	0					
ANR	4266277	Identifier	root		4265814	0					
ANR	4266278	Identifier	p		4265814	1					
ANR	4266279	Identifier	name		4265814	1					
ANR	4266280	ExpressionStatement	"pj_kn ( pj , ""offset"" , root -> delta )"	183:4:4732:4765	4265814	3	True				
ANR	4266281	CallExpression	"pj_kn ( pj , ""offset"" , root -> delta )"		4265814	0					
ANR	4266282	Callee	pj_kn		4265814	0					
ANR	4266283	Identifier	pj_kn		4265814	0					
ANR	4266284	ArgumentList	pj		4265814	1					
ANR	4266285	Argument	pj		4265814	0					
ANR	4266286	Identifier	pj		4265814	0					
ANR	4266287	Argument	"""offset"""		4265814	1					
ANR	4266288	PrimaryExpression	"""offset"""		4265814	0					
ANR	4266289	Argument	root -> delta		4265814	2					
ANR	4266290	PtrMemberAccess	root -> delta		4265814	0					
ANR	4266291	Identifier	root		4265814	0					
ANR	4266292	Identifier	delta		4265814	1					
ANR	4266293	ExpressionStatement	pj_end ( pj )	184:4:4771:4782	4265814	4	True				
ANR	4266294	CallExpression	pj_end ( pj )		4265814	0					
ANR	4266295	Callee	pj_end		4265814	0					
ANR	4266296	Identifier	pj_end		4265814	0					
ANR	4266297	ArgumentList	pj		4265814	1					
ANR	4266298	Argument	pj		4265814	0					
ANR	4266299	Identifier	pj		4265814	0					
ANR	4266300	ExpressionStatement	pj_end ( pj )	186:3:4792:4803	4265814	17	True				
ANR	4266301	CallExpression	pj_end ( pj )		4265814	0					
ANR	4266302	Callee	pj_end		4265814	0					
ANR	4266303	Identifier	pj_end		4265814	0					
ANR	4266304	ArgumentList	pj		4265814	1					
ANR	4266305	Argument	pj		4265814	0					
ANR	4266306	Identifier	pj		4265814	0					
ANR	4266307	ExpressionStatement	"pj_k ( pj , ""plugins"" )"	187:3:4808:4828	4265814	18	True				
ANR	4266308	CallExpression	"pj_k ( pj , ""plugins"" )"		4265814	0					
ANR	4266309	Callee	pj_k		4265814	0					
ANR	4266310	Identifier	pj_k		4265814	0					
ANR	4266311	ArgumentList	pj		4265814	1					
ANR	4266312	Argument	pj		4265814	0					
ANR	4266313	Identifier	pj		4265814	0					
ANR	4266314	Argument	"""plugins"""		4265814	1					
ANR	4266315	PrimaryExpression	"""plugins"""		4265814	0					
ANR	4266316	ExpressionStatement	pj_a ( pj )	188:3:4833:4842	4265814	19	True				
ANR	4266317	CallExpression	pj_a ( pj )		4265814	0					
ANR	4266318	Callee	pj_a		4265814	0					
ANR	4266319	Identifier	pj_a		4265814	0					
ANR	4266320	ArgumentList	pj		4265814	1					
ANR	4266321	Argument	pj		4265814	0					
ANR	4266322	Identifier	pj		4265814	0					
ANR	4266323	Statement	r_list_foreach	189:3:4847:4860	4265814	20	True				
ANR	4266324	Statement	(	189:18:4862:4862	4265814	21	True				
ANR	4266325	Statement	core	189:19:4863:4866	4265814	22	True				
ANR	4266326	Statement	->	189:23:4867:4868	4265814	23	True				
ANR	4266327	Statement	fs	189:25:4869:4870	4265814	24	True				
ANR	4266328	Statement	->	189:27:4871:4872	4265814	25	True				
ANR	4266329	Statement	plugins	189:29:4873:4879	4265814	26	True				
ANR	4266330	Statement	","	189:36:4880:4880	4265814	27	True				
ANR	4266331	Statement	iter	189:38:4882:4885	4265814	28	True				
ANR	4266332	Statement	","	189:42:4886:4886	4265814	29	True				
ANR	4266333	Statement	plug	189:44:4888:4891	4265814	30	True				
ANR	4266334	Statement	)	189:48:4892:4892	4265814	31	True				
ANR	4266335	CompoundStatement		78:50:1745:1745	4265814	32					
ANR	4266336	ExpressionStatement	pj_o ( pj )	190:4:4900:4909	4265814	0	True				
ANR	4266337	CallExpression	pj_o ( pj )		4265814	0					
ANR	4266338	Callee	pj_o		4265814	0					
ANR	4266339	Identifier	pj_o		4265814	0					
ANR	4266340	ArgumentList	pj		4265814	1					
ANR	4266341	Argument	pj		4265814	0					
ANR	4266342	Identifier	pj		4265814	0					
ANR	4266343	ExpressionStatement	"pj_ks ( pj , ""name"" , plug -> name )"	191:4:4915:4945	4265814	1	True				
ANR	4266344	CallExpression	"pj_ks ( pj , ""name"" , plug -> name )"		4265814	0					
ANR	4266345	Callee	pj_ks		4265814	0					
ANR	4266346	Identifier	pj_ks		4265814	0					
ANR	4266347	ArgumentList	pj		4265814	1					
ANR	4266348	Argument	pj		4265814	0					
ANR	4266349	Identifier	pj		4265814	0					
ANR	4266350	Argument	"""name"""		4265814	1					
ANR	4266351	PrimaryExpression	"""name"""		4265814	0					
ANR	4266352	Argument	plug -> name		4265814	2					
ANR	4266353	PtrMemberAccess	plug -> name		4265814	0					
ANR	4266354	Identifier	plug		4265814	0					
ANR	4266355	Identifier	name		4265814	1					
ANR	4266356	ExpressionStatement	"pj_ks ( pj , ""description"" , plug -> desc )"	192:4:4951:4988	4265814	2	True				
ANR	4266357	CallExpression	"pj_ks ( pj , ""description"" , plug -> desc )"		4265814	0					
ANR	4266358	Callee	pj_ks		4265814	0					
ANR	4266359	Identifier	pj_ks		4265814	0					
ANR	4266360	ArgumentList	pj		4265814	1					
ANR	4266361	Argument	pj		4265814	0					
ANR	4266362	Identifier	pj		4265814	0					
ANR	4266363	Argument	"""description"""		4265814	1					
ANR	4266364	PrimaryExpression	"""description"""		4265814	0					
ANR	4266365	Argument	plug -> desc		4265814	2					
ANR	4266366	PtrMemberAccess	plug -> desc		4265814	0					
ANR	4266367	Identifier	plug		4265814	0					
ANR	4266368	Identifier	desc		4265814	1					
ANR	4266369	ExpressionStatement	pj_end ( pj )	193:4:4994:5005	4265814	3	True				
ANR	4266370	CallExpression	pj_end ( pj )		4265814	0					
ANR	4266371	Callee	pj_end		4265814	0					
ANR	4266372	Identifier	pj_end		4265814	0					
ANR	4266373	ArgumentList	pj		4265814	1					
ANR	4266374	Argument	pj		4265814	0					
ANR	4266375	Identifier	pj		4265814	0					
ANR	4266376	ExpressionStatement	pj_end ( pj )	196:3:5016:5027	4265814	33	True				
ANR	4266377	CallExpression	pj_end ( pj )		4265814	0					
ANR	4266378	Callee	pj_end		4265814	0					
ANR	4266379	Identifier	pj_end		4265814	0					
ANR	4266380	ArgumentList	pj		4265814	1					
ANR	4266381	Argument	pj		4265814	0					
ANR	4266382	Identifier	pj		4265814	0					
ANR	4266383	ExpressionStatement	pj_end ( pj )	197:3:5032:5043	4265814	34	True				
ANR	4266384	CallExpression	pj_end ( pj )		4265814	0					
ANR	4266385	Callee	pj_end		4265814	0					
ANR	4266386	Identifier	pj_end		4265814	0					
ANR	4266387	ArgumentList	pj		4265814	1					
ANR	4266388	Argument	pj		4265814	0					
ANR	4266389	Identifier	pj		4265814	0					
ANR	4266390	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"	198:3:5048:5086	4265814	35	True				
ANR	4266391	CallExpression	"r_cons_printf ( ""%s\\n"" , pj_string ( pj ) )"		4265814	0					
ANR	4266392	Callee	r_cons_printf		4265814	0					
ANR	4266393	Identifier	r_cons_printf		4265814	0					
ANR	4266394	ArgumentList	"""%s\\n"""		4265814	1					
ANR	4266395	Argument	"""%s\\n"""		4265814	0					
ANR	4266396	PrimaryExpression	"""%s\\n"""		4265814	0					
ANR	4266397	Argument	pj_string ( pj )		4265814	1					
ANR	4266398	CallExpression	pj_string ( pj )		4265814	0					
ANR	4266399	Callee	pj_string		4265814	0					
ANR	4266400	Identifier	pj_string		4265814	0					
ANR	4266401	ArgumentList	pj		4265814	1					
ANR	4266402	Argument	pj		4265814	0					
ANR	4266403	Identifier	pj		4265814	0					
ANR	4266404	ExpressionStatement	pj_free ( pj )	199:3:5091:5103	4265814	36	True				
ANR	4266405	CallExpression	pj_free ( pj )		4265814	0					
ANR	4266406	Callee	pj_free		4265814	0					
ANR	4266407	Identifier	pj_free		4265814	0					
ANR	4266408	ArgumentList	pj		4265814	1					
ANR	4266409	Argument	pj		4265814	0					
ANR	4266410	Identifier	pj		4265814	0					
ANR	4266411	BreakStatement	break ;	201:2:5111:5116	4265814	10	True				
ANR	4266412	Label	case '*' :	202:1:5119:5127	4265814	11	True				
ANR	4266413	Statement	r_list_foreach	203:2:5131:5144	4265814	12	True				
ANR	4266414	Statement	(	203:17:5146:5146	4265814	13	True				
ANR	4266415	Statement	core	203:18:5147:5150	4265814	14	True				
ANR	4266416	Statement	->	203:22:5151:5152	4265814	15	True				
ANR	4266417	Statement	fs	203:24:5153:5154	4265814	16	True				
ANR	4266418	Statement	->	203:26:5155:5156	4265814	17	True				
ANR	4266419	Statement	roots	203:28:5157:5161	4265814	18	True				
ANR	4266420	Statement	","	203:33:5162:5162	4265814	19	True				
ANR	4266421	Statement	iter	203:35:5164:5167	4265814	20	True				
ANR	4266422	Statement	","	203:39:5168:5168	4265814	21	True				
ANR	4266423	Statement	root	203:41:5170:5173	4265814	22	True				
ANR	4266424	Statement	)	203:45:5174:5174	4265814	23	True				
ANR	4266425	CompoundStatement		92:47:2027:2027	4265814	24					
ANR	4266426	Statement	r_cons_printf	204:3:5181:5193	4265814	0	True				
ANR	4266427	Statement	(	204:17:5195:5195	4265814	1	True				
ANR	4266428	Statement	"""m %s %s 0x%"""	204:18:5196:5208	4265814	2	True				
ANR	4266429	Statement	PFMT64x	204:31:5209:5215	4265814	3	True				
ANR	4266430	Statement	"""\\n"""	204:38:5216:5219	4265814	4	True				
ANR	4266431	Statement	","	204:42:5220:5220	4265814	5	True				
ANR	4266432	Statement	root	205:4:5226:5229	4265814	6	True				
ANR	4266433	Statement	->	205:8:5230:5231	4265814	7	True				
ANR	4266434	Statement	path	205:11:5233:5236	4265814	8	True				
ANR	4266435	Statement	","	205:15:5237:5237	4265814	9	True				
ANR	4266436	Statement	root	205:17:5239:5242	4265814	10	True				
ANR	4266437	Statement	->	205:21:5243:5244	4265814	11	True				
ANR	4266438	Statement	p	205:23:5245:5245	4265814	12	True				
ANR	4266439	Statement	->	205:24:5246:5247	4265814	13	True				
ANR	4266440	Statement	name	205:26:5248:5251	4265814	14	True				
ANR	4266441	Statement	","	205:30:5252:5252	4265814	15	True				
ANR	4266442	Statement	root	205:32:5254:5257	4265814	16	True				
ANR	4266443	Statement	->	205:36:5258:5259	4265814	17	True				
ANR	4266444	Statement	delta	205:38:5260:5264	4265814	18	True				
ANR	4266445	Statement	)	205:43:5265:5265	4265814	19	True				
ANR	4266446	ExpressionStatement		205:44:5266:5266	4265814	20	True				
ANR	4266447	BreakStatement	break ;	207:2:5274:5279	4265814	25	True				
ANR	4266448	Label	case '\\0' :	208:1:5282:5291	4265814	26	True				
ANR	4266449	Statement	r_list_foreach	209:2:5295:5308	4265814	27	True				
ANR	4266450	Statement	(	209:17:5310:5310	4265814	28	True				
ANR	4266451	Statement	core	209:18:5311:5314	4265814	29	True				
ANR	4266452	Statement	->	209:22:5315:5316	4265814	30	True				
ANR	4266453	Statement	fs	209:24:5317:5318	4265814	31	True				
ANR	4266454	Statement	->	209:26:5319:5320	4265814	32	True				
ANR	4266455	Statement	roots	209:28:5321:5325	4265814	33	True				
ANR	4266456	Statement	","	209:33:5326:5326	4265814	34	True				
ANR	4266457	Statement	iter	209:35:5328:5331	4265814	35	True				
ANR	4266458	Statement	","	209:39:5332:5332	4265814	36	True				
ANR	4266459	Statement	root	209:41:5334:5337	4265814	37	True				
ANR	4266460	Statement	)	209:45:5338:5338	4265814	38	True				
ANR	4266461	CompoundStatement		98:47:2191:2191	4265814	39					
ANR	4266462	Statement	r_cons_printf	210:3:5345:5357	4265814	0	True				
ANR	4266463	Statement	(	210:17:5359:5359	4265814	1	True				
ANR	4266464	Statement	"""%s\\t0x%"""	210:18:5360:5368	4265814	2	True				
ANR	4266465	Statement	PFMT64x	210:27:5369:5375	4265814	3	True				
ANR	4266466	Statement	"""\\t%s\\n"""	210:34:5376:5383	4265814	4	True				
ANR	4266467	Statement	","	210:42:5384:5384	4265814	5	True				
ANR	4266468	Statement	root	211:4:5390:5393	4265814	6	True				
ANR	4266469	Statement	->	211:8:5394:5395	4265814	7	True				
ANR	4266470	Statement	p	211:10:5396:5396	4265814	8	True				
ANR	4266471	Statement	->	211:11:5397:5398	4265814	9	True				
ANR	4266472	Statement	name	211:13:5399:5402	4265814	10	True				
ANR	4266473	Statement	","	211:17:5403:5403	4265814	11	True				
ANR	4266474	Statement	root	211:19:5405:5408	4265814	12	True				
ANR	4266475	Statement	->	211:23:5409:5410	4265814	13	True				
ANR	4266476	Statement	delta	211:25:5411:5415	4265814	14	True				
ANR	4266477	Statement	","	211:30:5416:5416	4265814	15	True				
ANR	4266478	Statement	root	211:32:5418:5421	4265814	16	True				
ANR	4266479	Statement	->	211:36:5422:5423	4265814	17	True				
ANR	4266480	Statement	path	211:38:5424:5427	4265814	18	True				
ANR	4266481	Statement	)	211:42:5428:5428	4265814	19	True				
ANR	4266482	ExpressionStatement		211:43:5429:5429	4265814	20	True				
ANR	4266483	BreakStatement	break ;	213:2:5437:5442	4265814	40	True				
ANR	4266484	Label	case 'L' :	214:1:5445:5453	4265814	41	True				
ANR	4266485	Statement	r_list_foreach	215:2:5481:5494	4265814	42	True				
ANR	4266486	Statement	(	215:17:5496:5496	4265814	43	True				
ANR	4266487	Statement	core	215:18:5497:5500	4265814	44	True				
ANR	4266488	Statement	->	215:22:5501:5502	4265814	45	True				
ANR	4266489	Statement	fs	215:24:5503:5504	4265814	46	True				
ANR	4266490	Statement	->	215:26:5505:5506	4265814	47	True				
ANR	4266491	Statement	plugins	215:28:5507:5513	4265814	48	True				
ANR	4266492	Statement	","	215:35:5514:5514	4265814	49	True				
ANR	4266493	Statement	iter	215:37:5516:5519	4265814	50	True				
ANR	4266494	Statement	","	215:41:5520:5520	4265814	51	True				
ANR	4266495	Statement	plug	215:43:5522:5525	4265814	52	True				
ANR	4266496	Statement	)	215:47:5526:5526	4265814	53	True				
ANR	4266497	CompoundStatement		104:49:2379:2379	4265814	54					
ANR	4266498	ExpressionStatement	"r_cons_printf ( ""%10s  %s\\n"" , plug -> name , plug -> desc )"	216:3:5533:5585	4265814	0	True				
ANR	4266499	CallExpression	"r_cons_printf ( ""%10s  %s\\n"" , plug -> name , plug -> desc )"		4265814	0					
ANR	4266500	Callee	r_cons_printf		4265814	0					
ANR	4266501	Identifier	r_cons_printf		4265814	0					
ANR	4266502	ArgumentList	"""%10s  %s\\n"""		4265814	1					
ANR	4266503	Argument	"""%10s  %s\\n"""		4265814	0					
ANR	4266504	PrimaryExpression	"""%10s  %s\\n"""		4265814	0					
ANR	4266505	Argument	plug -> name		4265814	1					
ANR	4266506	PtrMemberAccess	plug -> name		4265814	0					
ANR	4266507	Identifier	plug		4265814	0					
ANR	4266508	Identifier	name		4265814	1					
ANR	4266509	Argument	plug -> desc		4265814	2					
ANR	4266510	PtrMemberAccess	plug -> desc		4265814	0					
ANR	4266511	Identifier	plug		4265814	0					
ANR	4266512	Identifier	desc		4265814	1					
ANR	4266513	BreakStatement	break ;	218:2:5593:5598	4265814	55	True				
ANR	4266514	Label	case 'l' :	219:1:5601:5609	4265814	56	True				
ANR	4266515	Label	case 'd' :	220:1:5620:5628	4265814	57	True				
ANR	4266516	ExpressionStatement	"cmd_mount_ls ( core , input + 1 )"	221:2:5641:5671	4265814	58	True				
ANR	4266517	CallExpression	"cmd_mount_ls ( core , input + 1 )"		4265814	0					
ANR	4266518	Callee	cmd_mount_ls		4265814	0					
ANR	4266519	Identifier	cmd_mount_ls		4265814	0					
ANR	4266520	ArgumentList	core		4265814	1					
ANR	4266521	Argument	core		4265814	0					
ANR	4266522	Identifier	core		4265814	0					
ANR	4266523	Argument	input + 1		4265814	1					
ANR	4266524	AdditiveExpression	input + 1		4265814	0		+			
ANR	4266525	Identifier	input		4265814	0					
ANR	4266526	PrimaryExpression	1		4265814	1					
ANR	4266527	BreakStatement	break ;	222:2:5675:5680	4265814	59	True				
ANR	4266528	Label	case 'p' :	223:1:5683:5691	4265814	60	True				
ANR	4266529	ExpressionStatement	input ++	224:2:5695:5702	4265814	61	True				
ANR	4266530	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266531	Identifier	input		4265814	0					
ANR	4266532	IncDec	++		4265814	1					
ANR	4266533	IfStatement	if ( * input == ' ' )		4265814	62					
ANR	4266534	Condition	* input == ' '	225:6:5710:5722	4265814	0	True				
ANR	4266535	EqualityExpression	* input == ' '		4265814	0		==			
ANR	4266536	UnaryOperationExpression	* input		4265814	0					
ANR	4266537	UnaryOperator	*		4265814	0					
ANR	4266538	Identifier	input		4265814	1					
ANR	4266539	PrimaryExpression	' '		4265814	1					
ANR	4266540	CompoundStatement		114:21:2576:2576	4265814	1					
ANR	4266541	ExpressionStatement	input ++	226:3:5730:5737	4265814	0	True				
ANR	4266542	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266543	Identifier	input		4265814	0					
ANR	4266544	IncDec	++		4265814	1					
ANR	4266545	ExpressionStatement	"ptr = strchr ( input , ' ' )"	228:2:5745:5770	4265814	63	True				
ANR	4266546	AssignmentExpression	"ptr = strchr ( input , ' ' )"		4265814	0		=			
ANR	4266547	Identifier	ptr		4265814	0					
ANR	4266548	CallExpression	"strchr ( input , ' ' )"		4265814	1					
ANR	4266549	Callee	strchr		4265814	0					
ANR	4266550	Identifier	strchr		4265814	0					
ANR	4266551	ArgumentList	input		4265814	1					
ANR	4266552	Argument	input		4265814	0					
ANR	4266553	Identifier	input		4265814	0					
ANR	4266554	Argument	' '		4265814	1					
ANR	4266555	PrimaryExpression	' '		4265814	0					
ANR	4266556	IfStatement	if ( ptr )		4265814	64					
ANR	4266557	Condition	ptr	229:6:5778:5780	4265814	0	True				
ANR	4266558	Identifier	ptr		4265814	0					
ANR	4266559	CompoundStatement		118:11:2634:2634	4265814	1					
ANR	4266560	ExpressionStatement	* ptr = 0	230:3:5788:5796	4265814	0	True				
ANR	4266561	AssignmentExpression	* ptr = 0		4265814	0		=			
ANR	4266562	UnaryOperationExpression	* ptr		4265814	0					
ANR	4266563	UnaryOperator	*		4265814	0					
ANR	4266564	Identifier	ptr		4265814	1					
ANR	4266565	PrimaryExpression	0		4265814	1					
ANR	4266566	ExpressionStatement	"off = r_num_math ( core -> num , ptr + 1 )"	231:3:5801:5836	4265814	1	True				
ANR	4266567	AssignmentExpression	"off = r_num_math ( core -> num , ptr + 1 )"		4265814	0		=			
ANR	4266568	Identifier	off		4265814	0					
ANR	4266569	CallExpression	"r_num_math ( core -> num , ptr + 1 )"		4265814	1					
ANR	4266570	Callee	r_num_math		4265814	0					
ANR	4266571	Identifier	r_num_math		4265814	0					
ANR	4266572	ArgumentList	core -> num		4265814	1					
ANR	4266573	Argument	core -> num		4265814	0					
ANR	4266574	PtrMemberAccess	core -> num		4265814	0					
ANR	4266575	Identifier	core		4265814	0					
ANR	4266576	Identifier	num		4265814	1					
ANR	4266577	Argument	ptr + 1		4265814	1					
ANR	4266578	AdditiveExpression	ptr + 1		4265814	0		+			
ANR	4266579	Identifier	ptr		4265814	0					
ANR	4266580	PrimaryExpression	1		4265814	1					
ANR	4266581	ExpressionStatement	"list = r_fs_partitions ( core -> fs , input , off )"	233:2:5844:5889	4265814	65	True				
ANR	4266582	AssignmentExpression	"list = r_fs_partitions ( core -> fs , input , off )"		4265814	0		=			
ANR	4266583	Identifier	list		4265814	0					
ANR	4266584	CallExpression	"r_fs_partitions ( core -> fs , input , off )"		4265814	1					
ANR	4266585	Callee	r_fs_partitions		4265814	0					
ANR	4266586	Identifier	r_fs_partitions		4265814	0					
ANR	4266587	ArgumentList	core -> fs		4265814	1					
ANR	4266588	Argument	core -> fs		4265814	0					
ANR	4266589	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266590	Identifier	core		4265814	0					
ANR	4266591	Identifier	fs		4265814	1					
ANR	4266592	Argument	input		4265814	1					
ANR	4266593	Identifier	input		4265814	0					
ANR	4266594	Argument	off		4265814	2					
ANR	4266595	Identifier	off		4265814	0					
ANR	4266596	IfStatement	if ( list )		4265814	66					
ANR	4266597	Condition	list	234:6:5897:5900	4265814	0	True				
ANR	4266598	Identifier	list		4265814	0					
ANR	4266599	CompoundStatement		123:12:2754:2754	4265814	1					
ANR	4266600	Statement	r_list_foreach	235:3:5908:5921	4265814	0	True				
ANR	4266601	Statement	(	235:18:5923:5923	4265814	1	True				
ANR	4266602	Statement	list	235:19:5924:5927	4265814	2	True				
ANR	4266603	Statement	","	235:23:5928:5928	4265814	3	True				
ANR	4266604	Statement	iter	235:25:5930:5933	4265814	4	True				
ANR	4266605	Statement	","	235:29:5934:5934	4265814	5	True				
ANR	4266606	Statement	part	235:31:5936:5939	4265814	6	True				
ANR	4266607	Statement	)	235:35:5940:5940	4265814	7	True				
ANR	4266608	CompoundStatement		124:37:2793:2793	4265814	8					
ANR	4266609	Statement	r_cons_printf	236:4:5948:5960	4265814	0	True				
ANR	4266610	Statement	(	236:18:5962:5962	4265814	1	True				
ANR	4266611	Statement	"""%d %02x 0x%010"""	236:19:5963:5978	4265814	2	True				
ANR	4266612	Statement	PFMT64x	236:35:5979:5985	4265814	3	True				
ANR	4266613	Statement	""" 0x%010"""	236:42:5986:5994	4265814	4	True				
ANR	4266614	Statement	PFMT64x	236:51:5995:6001	4265814	5	True				
ANR	4266615	Statement	"""\\n"""	236:58:6002:6005	4265814	6	True				
ANR	4266616	Statement	","	236:62:6006:6006	4265814	7	True				
ANR	4266617	Statement	part	237:5:6013:6016	4265814	8	True				
ANR	4266618	Statement	->	237:9:6017:6018	4265814	9	True				
ANR	4266619	Statement	number	237:11:6019:6024	4265814	10	True				
ANR	4266620	Statement	","	237:17:6025:6025	4265814	11	True				
ANR	4266621	Statement	part	237:19:6027:6030	4265814	12	True				
ANR	4266622	Statement	->	237:23:6031:6032	4265814	13	True				
ANR	4266623	Statement	type	237:25:6033:6036	4265814	14	True				
ANR	4266624	Statement	","	237:29:6037:6037	4265814	15	True				
ANR	4266625	Statement	part	238:5:6044:6047	4265814	16	True				
ANR	4266626	Statement	->	238:9:6048:6049	4265814	17	True				
ANR	4266627	Statement	start	238:11:6050:6054	4265814	18	True				
ANR	4266628	Statement	","	238:16:6055:6055	4265814	19	True				
ANR	4266629	Statement	part	238:18:6057:6060	4265814	20	True				
ANR	4266630	Statement	->	238:22:6061:6062	4265814	21	True				
ANR	4266631	Statement	start	238:24:6063:6067	4265814	22	True				
ANR	4266632	Statement	+	238:29:6068:6068	4265814	23	True				
ANR	4266633	Statement	part	238:30:6069:6072	4265814	24	True				
ANR	4266634	Statement	->	238:34:6073:6074	4265814	25	True				
ANR	4266635	Statement	length	238:36:6075:6080	4265814	26	True				
ANR	4266636	Statement	)	238:42:6081:6081	4265814	27	True				
ANR	4266637	ExpressionStatement		238:43:6082:6082	4265814	28	True				
ANR	4266638	ExpressionStatement	r_list_free ( list )	240:3:6092:6110	4265814	9	True				
ANR	4266639	CallExpression	r_list_free ( list )		4265814	0					
ANR	4266640	Callee	r_list_free		4265814	0					
ANR	4266641	Identifier	r_list_free		4265814	0					
ANR	4266642	ArgumentList	list		4265814	1					
ANR	4266643	Argument	list		4265814	0					
ANR	4266644	Identifier	list		4265814	0					
ANR	4266645	ElseStatement	else		4265814	0					
ANR	4266646	CompoundStatement		130:9:2972:2972	4265814	0					
ANR	4266647	ExpressionStatement	"eprintf ( ""Cannot read partition\\n"" )"	242:3:6126:6161	4265814	0	True				
ANR	4266648	CallExpression	"eprintf ( ""Cannot read partition\\n"" )"		4265814	0					
ANR	4266649	Callee	eprintf		4265814	0					
ANR	4266650	Identifier	eprintf		4265814	0					
ANR	4266651	ArgumentList	"""Cannot read partition\\n"""		4265814	1					
ANR	4266652	Argument	"""Cannot read partition\\n"""		4265814	0					
ANR	4266653	PrimaryExpression	"""Cannot read partition\\n"""		4265814	0					
ANR	4266654	BreakStatement	break ;	244:2:6169:6174	4265814	67	True				
ANR	4266655	Label	case 'o' :	245:1:6177:6185	4265814	68	True				
ANR	4266656	ExpressionStatement	input ++	246:2:6196:6203	4265814	69	True				
ANR	4266657	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266658	Identifier	input		4265814	0					
ANR	4266659	IncDec	++		4265814	1					
ANR	4266660	IfStatement	if ( input [ 0 ] == ' ' )		4265814	70					
ANR	4266661	Condition	input [ 0 ] == ' '	247:6:6211:6223	4265814	0	True				
ANR	4266662	EqualityExpression	input [ 0 ] == ' '		4265814	0		==			
ANR	4266663	ArrayIndexing	input [ 0 ]		4265814	0					
ANR	4266664	Identifier	input		4265814	0					
ANR	4266665	PrimaryExpression	0		4265814	1					
ANR	4266666	PrimaryExpression	' '		4265814	1					
ANR	4266667	CompoundStatement		136:21:3077:3077	4265814	1					
ANR	4266668	ExpressionStatement	input ++	248:3:6231:6238	4265814	0	True				
ANR	4266669	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266670	Identifier	input		4265814	0					
ANR	4266671	IncDec	++		4265814	1					
ANR	4266672	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	250:2:6246:6287	4265814	71	True				
ANR	4266673	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		4265814	0		=			
ANR	4266674	Identifier	file		4265814	0					
ANR	4266675	CallExpression	"r_fs_open ( core -> fs , input , false )"		4265814	1					
ANR	4266676	Callee	r_fs_open		4265814	0					
ANR	4266677	Identifier	r_fs_open		4265814	0					
ANR	4266678	ArgumentList	core -> fs		4265814	1					
ANR	4266679	Argument	core -> fs		4265814	0					
ANR	4266680	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266681	Identifier	core		4265814	0					
ANR	4266682	Identifier	fs		4265814	1					
ANR	4266683	Argument	input		4265814	1					
ANR	4266684	Identifier	input		4265814	0					
ANR	4266685	Argument	false		4265814	2					
ANR	4266686	Identifier	false		4265814	0					
ANR	4266687	IfStatement	if ( file )		4265814	72					
ANR	4266688	Condition	file	251:6:6295:6298	4265814	0	True				
ANR	4266689	Identifier	file		4265814	0					
ANR	4266690	CompoundStatement		143:3:3258:3311	4265814	1					
ANR	4266691	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	252:3:6306:6347	4265814	0	True				
ANR	4266692	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		4265814	0					
ANR	4266693	Callee	r_fs_read		4265814	0					
ANR	4266694	Identifier	r_fs_read		4265814	0					
ANR	4266695	ArgumentList	core -> fs		4265814	1					
ANR	4266696	Argument	core -> fs		4265814	0					
ANR	4266697	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266698	Identifier	core		4265814	0					
ANR	4266699	Identifier	fs		4265814	1					
ANR	4266700	Argument	file		4265814	1					
ANR	4266701	Identifier	file		4265814	0					
ANR	4266702	Argument	0		4265814	2					
ANR	4266703	PrimaryExpression	0		4265814	0					
ANR	4266704	Argument	file -> size		4265814	3					
ANR	4266705	PtrMemberAccess	file -> size		4265814	0					
ANR	4266706	Identifier	file		4265814	0					
ANR	4266707	Identifier	size		4265814	1					
ANR	4266708	IdentifierDeclStatement	"char * uri = r_str_newf ( ""malloc://%d"" , file -> size ) ;"	253:3:6352:6402	4265814	1	True				
ANR	4266709	IdentifierDecl	"* uri = r_str_newf ( ""malloc://%d"" , file -> size )"		4265814	0					
ANR	4266710	IdentifierDeclType	char *		4265814	0					
ANR	4266711	Identifier	uri		4265814	1					
ANR	4266712	AssignmentExpression	"* uri = r_str_newf ( ""malloc://%d"" , file -> size )"		4265814	2		=			
ANR	4266713	Identifier	uri		4265814	0					
ANR	4266714	CallExpression	"r_str_newf ( ""malloc://%d"" , file -> size )"		4265814	1					
ANR	4266715	Callee	r_str_newf		4265814	0					
ANR	4266716	Identifier	r_str_newf		4265814	0					
ANR	4266717	ArgumentList	"""malloc://%d"""		4265814	1					
ANR	4266718	Argument	"""malloc://%d"""		4265814	0					
ANR	4266719	PrimaryExpression	"""malloc://%d"""		4265814	0					
ANR	4266720	Argument	file -> size		4265814	1					
ANR	4266721	PtrMemberAccess	file -> size		4265814	0					
ANR	4266722	Identifier	file		4265814	0					
ANR	4266723	Identifier	size		4265814	1					
ANR	4266724	IdentifierDeclStatement	"RIODesc * fd = r_io_open ( core -> io , uri , R_PERM_RW , 0 ) ;"	254:3:6407:6460	4265814	2	True				
ANR	4266725	IdentifierDecl	"* fd = r_io_open ( core -> io , uri , R_PERM_RW , 0 )"		4265814	0					
ANR	4266726	IdentifierDeclType	RIODesc *		4265814	0					
ANR	4266727	Identifier	fd		4265814	1					
ANR	4266728	AssignmentExpression	"* fd = r_io_open ( core -> io , uri , R_PERM_RW , 0 )"		4265814	2		=			
ANR	4266729	Identifier	fd		4265814	0					
ANR	4266730	CallExpression	"r_io_open ( core -> io , uri , R_PERM_RW , 0 )"		4265814	1					
ANR	4266731	Callee	r_io_open		4265814	0					
ANR	4266732	Identifier	r_io_open		4265814	0					
ANR	4266733	ArgumentList	core -> io		4265814	1					
ANR	4266734	Argument	core -> io		4265814	0					
ANR	4266735	PtrMemberAccess	core -> io		4265814	0					
ANR	4266736	Identifier	core		4265814	0					
ANR	4266737	Identifier	io		4265814	1					
ANR	4266738	Argument	uri		4265814	1					
ANR	4266739	Identifier	uri		4265814	0					
ANR	4266740	Argument	R_PERM_RW		4265814	2					
ANR	4266741	Identifier	R_PERM_RW		4265814	0					
ANR	4266742	Argument	0		4265814	3					
ANR	4266743	PrimaryExpression	0		4265814	0					
ANR	4266744	IfStatement	if ( fd )		4265814	3					
ANR	4266745	Condition	fd	255:7:6469:6470	4265814	0	True				
ANR	4266746	Identifier	fd		4265814	0					
ANR	4266747	CompoundStatement		144:11:3324:3324	4265814	1					
ANR	4266748	ExpressionStatement	"r_io_desc_write ( fd , file -> data , file -> size )"	256:4:6479:6523	4265814	0	True				
ANR	4266749	CallExpression	"r_io_desc_write ( fd , file -> data , file -> size )"		4265814	0					
ANR	4266750	Callee	r_io_desc_write		4265814	0					
ANR	4266751	Identifier	r_io_desc_write		4265814	0					
ANR	4266752	ArgumentList	fd		4265814	1					
ANR	4266753	Argument	fd		4265814	0					
ANR	4266754	Identifier	fd		4265814	0					
ANR	4266755	Argument	file -> data		4265814	1					
ANR	4266756	PtrMemberAccess	file -> data		4265814	0					
ANR	4266757	Identifier	file		4265814	0					
ANR	4266758	Identifier	data		4265814	1					
ANR	4266759	Argument	file -> size		4265814	2					
ANR	4266760	PtrMemberAccess	file -> size		4265814	0					
ANR	4266761	Identifier	file		4265814	0					
ANR	4266762	Identifier	size		4265814	1					
ANR	4266763	ElseStatement	else		4265814	0					
ANR	4266764	CompoundStatement		147:9:3390:3390	4265814	0					
ANR	4266765	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	259:3:6544:6574	4265814	0	True				
ANR	4266766	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		4265814	0					
ANR	4266767	Callee	eprintf		4265814	0					
ANR	4266768	Identifier	eprintf		4265814	0					
ANR	4266769	ArgumentList	"""Cannot open file\\n"""		4265814	1					
ANR	4266770	Argument	"""Cannot open file\\n"""		4265814	0					
ANR	4266771	PrimaryExpression	"""Cannot open file\\n"""		4265814	0					
ANR	4266772	BreakStatement	break ;	261:2:6582:6587	4265814	73	True				
ANR	4266773	Label	case 'i' :	262:1:6590:6598	4265814	74	True				
ANR	4266774	ExpressionStatement	input ++	263:2:6602:6609	4265814	75	True				
ANR	4266775	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266776	Identifier	input		4265814	0					
ANR	4266777	IncDec	++		4265814	1					
ANR	4266778	IfStatement	if ( input [ 0 ] == ' ' )		4265814	76					
ANR	4266779	Condition	input [ 0 ] == ' '	264:6:6617:6629	4265814	0	True				
ANR	4266780	EqualityExpression	input [ 0 ] == ' '		4265814	0		==			
ANR	4266781	ArrayIndexing	input [ 0 ]		4265814	0					
ANR	4266782	Identifier	input		4265814	0					
ANR	4266783	PrimaryExpression	0		4265814	1					
ANR	4266784	PrimaryExpression	' '		4265814	1					
ANR	4266785	CompoundStatement		153:21:3483:3483	4265814	1					
ANR	4266786	ExpressionStatement	input ++	265:3:6637:6644	4265814	0	True				
ANR	4266787	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266788	Identifier	input		4265814	0					
ANR	4266789	IncDec	++		4265814	1					
ANR	4266790	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	267:2:6652:6693	4265814	77	True				
ANR	4266791	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		4265814	0		=			
ANR	4266792	Identifier	file		4265814	0					
ANR	4266793	CallExpression	"r_fs_open ( core -> fs , input , false )"		4265814	1					
ANR	4266794	Callee	r_fs_open		4265814	0					
ANR	4266795	Identifier	r_fs_open		4265814	0					
ANR	4266796	ArgumentList	core -> fs		4265814	1					
ANR	4266797	Argument	core -> fs		4265814	0					
ANR	4266798	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266799	Identifier	core		4265814	0					
ANR	4266800	Identifier	fs		4265814	1					
ANR	4266801	Argument	input		4265814	1					
ANR	4266802	Identifier	input		4265814	0					
ANR	4266803	Argument	false		4265814	2					
ANR	4266804	Identifier	false		4265814	0					
ANR	4266805	IfStatement	if ( file )		4265814	78					
ANR	4266806	Condition	file	268:6:6701:6704	4265814	0	True				
ANR	4266807	Identifier	file		4265814	0					
ANR	4266808	CompoundStatement		157:12:3558:3558	4265814	1					
ANR	4266809	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	270:3:6750:6791	4265814	0	True				
ANR	4266810	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		4265814	0					
ANR	4266811	Callee	r_fs_read		4265814	0					
ANR	4266812	Identifier	r_fs_read		4265814	0					
ANR	4266813	ArgumentList	core -> fs		4265814	1					
ANR	4266814	Argument	core -> fs		4265814	0					
ANR	4266815	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266816	Identifier	core		4265814	0					
ANR	4266817	Identifier	fs		4265814	1					
ANR	4266818	Argument	file		4265814	1					
ANR	4266819	Identifier	file		4265814	0					
ANR	4266820	Argument	0		4265814	2					
ANR	4266821	PrimaryExpression	0		4265814	0					
ANR	4266822	Argument	file -> size		4265814	3					
ANR	4266823	PtrMemberAccess	file -> size		4265814	0					
ANR	4266824	Identifier	file		4265814	0					
ANR	4266825	Identifier	size		4265814	1					
ANR	4266826	Statement	r_cons_printf	271:3:6796:6808	4265814	1	True				
ANR	4266827	Statement	(	271:17:6810:6810	4265814	2	True				
ANR	4266828	Statement	"""f file %d 0x%08"""	271:18:6811:6827	4265814	3	True				
ANR	4266829	Statement	PFMT64x	271:35:6828:6834	4265814	4	True				
ANR	4266830	Statement	"""\\n"""	271:42:6835:6838	4265814	5	True				
ANR	4266831	Statement	","	271:46:6839:6839	4265814	6	True				
ANR	4266832	Statement	file	271:48:6841:6844	4265814	7	True				
ANR	4266833	Statement	->	271:52:6845:6846	4265814	8	True				
ANR	4266834	Statement	size	271:54:6847:6850	4265814	9	True				
ANR	4266835	Statement	","	271:58:6851:6851	4265814	10	True				
ANR	4266836	Statement	file	271:60:6853:6856	4265814	11	True				
ANR	4266837	Statement	->	271:64:6857:6858	4265814	12	True				
ANR	4266838	Statement	off	271:66:6859:6861	4265814	13	True				
ANR	4266839	Statement	)	271:69:6862:6862	4265814	14	True				
ANR	4266840	ExpressionStatement		271:70:6863:6863	4265814	15	True				
ANR	4266841	ExpressionStatement	"r_fs_close ( core -> fs , file )"	272:3:6868:6895	4265814	16	True				
ANR	4266842	CallExpression	"r_fs_close ( core -> fs , file )"		4265814	0					
ANR	4266843	Callee	r_fs_close		4265814	0					
ANR	4266844	Identifier	r_fs_close		4265814	0					
ANR	4266845	ArgumentList	core -> fs		4265814	1					
ANR	4266846	Argument	core -> fs		4265814	0					
ANR	4266847	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266848	Identifier	core		4265814	0					
ANR	4266849	Identifier	fs		4265814	1					
ANR	4266850	Argument	file		4265814	1					
ANR	4266851	Identifier	file		4265814	0					
ANR	4266852	ElseStatement	else		4265814	0					
ANR	4266853	CompoundStatement		162:9:3757:3757	4265814	0					
ANR	4266854	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	274:3:6911:6941	4265814	0	True				
ANR	4266855	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		4265814	0					
ANR	4266856	Callee	eprintf		4265814	0					
ANR	4266857	Identifier	eprintf		4265814	0					
ANR	4266858	ArgumentList	"""Cannot open file\\n"""		4265814	1					
ANR	4266859	Argument	"""Cannot open file\\n"""		4265814	0					
ANR	4266860	PrimaryExpression	"""Cannot open file\\n"""		4265814	0					
ANR	4266861	BreakStatement	break ;	276:2:6949:6954	4265814	79	True				
ANR	4266862	Label	case 'c' :	277:1:6957:6965	4265814	80	True				
ANR	4266863	ExpressionStatement	input ++	278:2:6977:6984	4265814	81	True				
ANR	4266864	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266865	Identifier	input		4265814	0					
ANR	4266866	IncDec	++		4265814	1					
ANR	4266867	IfStatement	if ( * input == ' ' )		4265814	82					
ANR	4266868	Condition	* input == ' '	279:6:6992:7004	4265814	0	True				
ANR	4266869	EqualityExpression	* input == ' '		4265814	0		==			
ANR	4266870	UnaryOperationExpression	* input		4265814	0					
ANR	4266871	UnaryOperator	*		4265814	0					
ANR	4266872	Identifier	input		4265814	1					
ANR	4266873	PrimaryExpression	' '		4265814	1					
ANR	4266874	CompoundStatement		168:21:3858:3858	4265814	1					
ANR	4266875	ExpressionStatement	input ++	280:3:7012:7019	4265814	0	True				
ANR	4266876	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4266877	Identifier	input		4265814	0					
ANR	4266878	IncDec	++		4265814	1					
ANR	4266879	ExpressionStatement	"ptr = strchr ( input , ' ' )"	282:2:7027:7052	4265814	83	True				
ANR	4266880	AssignmentExpression	"ptr = strchr ( input , ' ' )"		4265814	0		=			
ANR	4266881	Identifier	ptr		4265814	0					
ANR	4266882	CallExpression	"strchr ( input , ' ' )"		4265814	1					
ANR	4266883	Callee	strchr		4265814	0					
ANR	4266884	Identifier	strchr		4265814	0					
ANR	4266885	ArgumentList	input		4265814	1					
ANR	4266886	Argument	input		4265814	0					
ANR	4266887	Identifier	input		4265814	0					
ANR	4266888	Argument	' '		4265814	1					
ANR	4266889	PrimaryExpression	' '		4265814	0					
ANR	4266890	IfStatement	if ( ptr )		4265814	84					
ANR	4266891	Condition	ptr	283:6:7060:7062	4265814	0	True				
ANR	4266892	Identifier	ptr		4265814	0					
ANR	4266893	CompoundStatement		172:11:3916:3916	4265814	1					
ANR	4266894	ExpressionStatement	* ptr ++ = 0	284:3:7070:7080	4265814	0	True				
ANR	4266895	AssignmentExpression	* ptr ++ = 0		4265814	0		=			
ANR	4266896	UnaryOperationExpression	* ptr ++		4265814	0					
ANR	4266897	UnaryOperator	*		4265814	0					
ANR	4266898	PostIncDecOperationExpression	ptr ++		4265814	1					
ANR	4266899	Identifier	ptr		4265814	0					
ANR	4266900	IncDec	++		4265814	1					
ANR	4266901	PrimaryExpression	0		4265814	1					
ANR	4266902	ElseStatement	else		4265814	0					
ANR	4266903	CompoundStatement		174:9:3942:3942	4265814	0					
ANR	4266904	ExpressionStatement	"ptr = ""./"""	286:3:7096:7106	4265814	0	True				
ANR	4266905	AssignmentExpression	"ptr = ""./"""		4265814	0		=			
ANR	4266906	Identifier	ptr		4265814	0					
ANR	4266907	PrimaryExpression	"""./"""		4265814	1					
ANR	4266908	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	288:2:7114:7155	4265814	85	True				
ANR	4266909	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		4265814	0		=			
ANR	4266910	Identifier	file		4265814	0					
ANR	4266911	CallExpression	"r_fs_open ( core -> fs , input , false )"		4265814	1					
ANR	4266912	Callee	r_fs_open		4265814	0					
ANR	4266913	Identifier	r_fs_open		4265814	0					
ANR	4266914	ArgumentList	core -> fs		4265814	1					
ANR	4266915	Argument	core -> fs		4265814	0					
ANR	4266916	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266917	Identifier	core		4265814	0					
ANR	4266918	Identifier	fs		4265814	1					
ANR	4266919	Argument	input		4265814	1					
ANR	4266920	Identifier	input		4265814	0					
ANR	4266921	Argument	false		4265814	2					
ANR	4266922	Identifier	false		4265814	0					
ANR	4266923	IfStatement	if ( file )		4265814	86					
ANR	4266924	Condition	file	289:6:7163:7166	4265814	0	True				
ANR	4266925	Identifier	file		4265814	0					
ANR	4266926	CompoundStatement		178:12:4020:4020	4265814	1					
ANR	4266927	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	290:3:7174:7215	4265814	0	True				
ANR	4266928	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		4265814	0					
ANR	4266929	Callee	r_fs_read		4265814	0					
ANR	4266930	Identifier	r_fs_read		4265814	0					
ANR	4266931	ArgumentList	core -> fs		4265814	1					
ANR	4266932	Argument	core -> fs		4265814	0					
ANR	4266933	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266934	Identifier	core		4265814	0					
ANR	4266935	Identifier	fs		4265814	1					
ANR	4266936	Argument	file		4265814	1					
ANR	4266937	Identifier	file		4265814	0					
ANR	4266938	Argument	0		4265814	2					
ANR	4266939	PrimaryExpression	0		4265814	0					
ANR	4266940	Argument	file -> size		4265814	3					
ANR	4266941	PtrMemberAccess	file -> size		4265814	0					
ANR	4266942	Identifier	file		4265814	0					
ANR	4266943	Identifier	size		4265814	1					
ANR	4266944	ExpressionStatement	"r_cons_memcat ( ( const char * ) file -> data , file -> size )"	291:3:7220:7272	4265814	1	True				
ANR	4266945	CallExpression	"r_cons_memcat ( ( const char * ) file -> data , file -> size )"		4265814	0					
ANR	4266946	Callee	r_cons_memcat		4265814	0					
ANR	4266947	Identifier	r_cons_memcat		4265814	0					
ANR	4266948	ArgumentList	( const char * ) file -> data		4265814	1					
ANR	4266949	Argument	( const char * ) file -> data		4265814	0					
ANR	4266950	CastExpression	( const char * ) file -> data		4265814	0					
ANR	4266951	CastTarget	const char *		4265814	0					
ANR	4266952	PtrMemberAccess	file -> data		4265814	1					
ANR	4266953	Identifier	file		4265814	0					
ANR	4266954	Identifier	data		4265814	1					
ANR	4266955	Argument	file -> size		4265814	1					
ANR	4266956	PtrMemberAccess	file -> size		4265814	0					
ANR	4266957	Identifier	file		4265814	0					
ANR	4266958	Identifier	size		4265814	1					
ANR	4266959	ExpressionStatement	"r_fs_close ( core -> fs , file )"	292:3:7277:7304	4265814	2	True				
ANR	4266960	CallExpression	"r_fs_close ( core -> fs , file )"		4265814	0					
ANR	4266961	Callee	r_fs_close		4265814	0					
ANR	4266962	Identifier	r_fs_close		4265814	0					
ANR	4266963	ArgumentList	core -> fs		4265814	1					
ANR	4266964	Argument	core -> fs		4265814	0					
ANR	4266965	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266966	Identifier	core		4265814	0					
ANR	4266967	Identifier	fs		4265814	1					
ANR	4266968	Argument	file		4265814	1					
ANR	4266969	Identifier	file		4265814	0					
ANR	4266970	ExpressionStatement	"r_cons_memcat ( ""\\n"" , 1 )"	293:3:7309:7332	4265814	3	True				
ANR	4266971	CallExpression	"r_cons_memcat ( ""\\n"" , 1 )"		4265814	0					
ANR	4266972	Callee	r_cons_memcat		4265814	0					
ANR	4266973	Identifier	r_cons_memcat		4265814	0					
ANR	4266974	ArgumentList	"""\\n"""		4265814	1					
ANR	4266975	Argument	"""\\n"""		4265814	0					
ANR	4266976	PrimaryExpression	"""\\n"""		4265814	0					
ANR	4266977	Argument	1		4265814	1					
ANR	4266978	PrimaryExpression	1		4265814	0					
ANR	4266979	ElseStatement	else		4265814	0					
ANR	4266980	IfStatement	"if ( ! r_fs_dir_dump ( core -> fs , input , ptr ) )"		4265814	0					
ANR	4266981	Condition	"! r_fs_dir_dump ( core -> fs , input , ptr )"	294:13:7347:7383	4265814	0	True				
ANR	4266982	UnaryOperationExpression	"! r_fs_dir_dump ( core -> fs , input , ptr )"		4265814	0					
ANR	4266983	UnaryOperator	!		4265814	0					
ANR	4266984	CallExpression	"r_fs_dir_dump ( core -> fs , input , ptr )"		4265814	1					
ANR	4266985	Callee	r_fs_dir_dump		4265814	0					
ANR	4266986	Identifier	r_fs_dir_dump		4265814	0					
ANR	4266987	ArgumentList	core -> fs		4265814	1					
ANR	4266988	Argument	core -> fs		4265814	0					
ANR	4266989	PtrMemberAccess	core -> fs		4265814	0					
ANR	4266990	Identifier	core		4265814	0					
ANR	4266991	Identifier	fs		4265814	1					
ANR	4266992	Argument	input		4265814	1					
ANR	4266993	Identifier	input		4265814	0					
ANR	4266994	Argument	ptr		4265814	2					
ANR	4266995	Identifier	ptr		4265814	0					
ANR	4266996	CompoundStatement		183:52:4237:4237	4265814	1					
ANR	4266997	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	295:3:7391:7421	4265814	0	True				
ANR	4266998	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		4265814	0					
ANR	4266999	Callee	eprintf		4265814	0					
ANR	4267000	Identifier	eprintf		4265814	0					
ANR	4267001	ArgumentList	"""Cannot open file\\n"""		4265814	1					
ANR	4267002	Argument	"""Cannot open file\\n"""		4265814	0					
ANR	4267003	PrimaryExpression	"""Cannot open file\\n"""		4265814	0					
ANR	4267004	BreakStatement	break ;	297:2:7429:7434	4265814	87	True				
ANR	4267005	Label	case 'g' :	298:1:7437:7445	4265814	88	True				
ANR	4267006	ExpressionStatement	input ++	299:2:7457:7464	4265814	89	True				
ANR	4267007	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267008	Identifier	input		4265814	0					
ANR	4267009	IncDec	++		4265814	1					
ANR	4267010	IfStatement	if ( * input == ' ' )		4265814	90					
ANR	4267011	Condition	* input == ' '	300:6:7472:7484	4265814	0	True				
ANR	4267012	EqualityExpression	* input == ' '		4265814	0		==			
ANR	4267013	UnaryOperationExpression	* input		4265814	0					
ANR	4267014	UnaryOperator	*		4265814	0					
ANR	4267015	Identifier	input		4265814	1					
ANR	4267016	PrimaryExpression	' '		4265814	1					
ANR	4267017	CompoundStatement		189:21:4338:4338	4265814	1					
ANR	4267018	ExpressionStatement	input ++	301:3:7492:7499	4265814	0	True				
ANR	4267019	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267020	Identifier	input		4265814	0					
ANR	4267021	IncDec	++		4265814	1					
ANR	4267022	ExpressionStatement	"ptr = strchr ( input , ' ' )"	303:2:7507:7532	4265814	91	True				
ANR	4267023	AssignmentExpression	"ptr = strchr ( input , ' ' )"		4265814	0		=			
ANR	4267024	Identifier	ptr		4265814	0					
ANR	4267025	CallExpression	"strchr ( input , ' ' )"		4265814	1					
ANR	4267026	Callee	strchr		4265814	0					
ANR	4267027	Identifier	strchr		4265814	0					
ANR	4267028	ArgumentList	input		4265814	1					
ANR	4267029	Argument	input		4265814	0					
ANR	4267030	Identifier	input		4265814	0					
ANR	4267031	Argument	' '		4265814	1					
ANR	4267032	PrimaryExpression	' '		4265814	0					
ANR	4267033	IfStatement	if ( ptr )		4265814	92					
ANR	4267034	Condition	ptr	304:6:7540:7542	4265814	0	True				
ANR	4267035	Identifier	ptr		4265814	0					
ANR	4267036	CompoundStatement		193:11:4396:4396	4265814	1					
ANR	4267037	ExpressionStatement	* ptr ++ = 0	305:3:7550:7560	4265814	0	True				
ANR	4267038	AssignmentExpression	* ptr ++ = 0		4265814	0		=			
ANR	4267039	UnaryOperationExpression	* ptr ++		4265814	0					
ANR	4267040	UnaryOperator	*		4265814	0					
ANR	4267041	PostIncDecOperationExpression	ptr ++		4265814	1					
ANR	4267042	Identifier	ptr		4265814	0					
ANR	4267043	IncDec	++		4265814	1					
ANR	4267044	PrimaryExpression	0		4265814	1					
ANR	4267045	ElseStatement	else		4265814	0					
ANR	4267046	CompoundStatement		195:9:4422:4422	4265814	0					
ANR	4267047	ExpressionStatement	"ptr = ""./"""	307:3:7576:7586	4265814	0	True				
ANR	4267048	AssignmentExpression	"ptr = ""./"""		4265814	0		=			
ANR	4267049	Identifier	ptr		4265814	0					
ANR	4267050	PrimaryExpression	"""./"""		4265814	1					
ANR	4267051	ExpressionStatement	"file = r_fs_open ( core -> fs , input , false )"	309:2:7594:7635	4265814	93	True				
ANR	4267052	AssignmentExpression	"file = r_fs_open ( core -> fs , input , false )"		4265814	0		=			
ANR	4267053	Identifier	file		4265814	0					
ANR	4267054	CallExpression	"r_fs_open ( core -> fs , input , false )"		4265814	1					
ANR	4267055	Callee	r_fs_open		4265814	0					
ANR	4267056	Identifier	r_fs_open		4265814	0					
ANR	4267057	ArgumentList	core -> fs		4265814	1					
ANR	4267058	Argument	core -> fs		4265814	0					
ANR	4267059	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267060	Identifier	core		4265814	0					
ANR	4267061	Identifier	fs		4265814	1					
ANR	4267062	Argument	input		4265814	1					
ANR	4267063	Identifier	input		4265814	0					
ANR	4267064	Argument	false		4265814	2					
ANR	4267065	Identifier	false		4265814	0					
ANR	4267066	IfStatement	if ( file )		4265814	94					
ANR	4267067	Condition	file	310:6:7643:7646	4265814	0	True				
ANR	4267068	Identifier	file		4265814	0					
ANR	4267069	CompoundStatement		201:3:4542:4597	4265814	1					
ANR	4267070	IdentifierDeclStatement	char * localFile = strdup ( input ) ;	311:3:7654:7686	4265814	0	True				
ANR	4267071	IdentifierDecl	* localFile = strdup ( input )		4265814	0					
ANR	4267072	IdentifierDeclType	char *		4265814	0					
ANR	4267073	Identifier	localFile		4265814	1					
ANR	4267074	AssignmentExpression	* localFile = strdup ( input )		4265814	2		=			
ANR	4267075	Identifier	localFile		4265814	0					
ANR	4267076	CallExpression	strdup ( input )		4265814	1					
ANR	4267077	Callee	strdup		4265814	0					
ANR	4267078	Identifier	strdup		4265814	0					
ANR	4267079	ArgumentList	input		4265814	1					
ANR	4267080	Argument	input		4265814	0					
ANR	4267081	Identifier	input		4265814	0					
ANR	4267082	IdentifierDeclStatement	"char * slash = ( char * ) r_str_rchr ( localFile , NULL , '/' ) ;"	312:3:7691:7746	4265814	1	True				
ANR	4267083	IdentifierDecl	"* slash = ( char * ) r_str_rchr ( localFile , NULL , '/' )"		4265814	0					
ANR	4267084	IdentifierDeclType	char *		4265814	0					
ANR	4267085	Identifier	slash		4265814	1					
ANR	4267086	AssignmentExpression	"* slash = ( char * ) r_str_rchr ( localFile , NULL , '/' )"		4265814	2		=			
ANR	4267087	Identifier	slash		4265814	0					
ANR	4267088	CastExpression	"( char * ) r_str_rchr ( localFile , NULL , '/' )"		4265814	1					
ANR	4267089	CastTarget	char *		4265814	0					
ANR	4267090	CallExpression	"r_str_rchr ( localFile , NULL , '/' )"		4265814	1					
ANR	4267091	Callee	r_str_rchr		4265814	0					
ANR	4267092	Identifier	r_str_rchr		4265814	0					
ANR	4267093	ArgumentList	localFile		4265814	1					
ANR	4267094	Argument	localFile		4265814	0					
ANR	4267095	Identifier	localFile		4265814	0					
ANR	4267096	Argument	NULL		4265814	1					
ANR	4267097	Identifier	NULL		4265814	0					
ANR	4267098	Argument	'/'		4265814	2					
ANR	4267099	PrimaryExpression	'/'		4265814	0					
ANR	4267100	IfStatement	if ( slash )		4265814	2					
ANR	4267101	Condition	slash	313:7:7755:7759	4265814	0	True				
ANR	4267102	Identifier	slash		4265814	0					
ANR	4267103	CompoundStatement		202:14:4613:4613	4265814	1					
ANR	4267104	ExpressionStatement	"memmove ( localFile , slash + 1 , strlen ( slash ) )"	314:4:7768:7814	4265814	0	True				
ANR	4267105	CallExpression	"memmove ( localFile , slash + 1 , strlen ( slash ) )"		4265814	0					
ANR	4267106	Callee	memmove		4265814	0					
ANR	4267107	Identifier	memmove		4265814	0					
ANR	4267108	ArgumentList	localFile		4265814	1					
ANR	4267109	Argument	localFile		4265814	0					
ANR	4267110	Identifier	localFile		4265814	0					
ANR	4267111	Argument	slash + 1		4265814	1					
ANR	4267112	AdditiveExpression	slash + 1		4265814	0		+			
ANR	4267113	Identifier	slash		4265814	0					
ANR	4267114	PrimaryExpression	1		4265814	1					
ANR	4267115	Argument	strlen ( slash )		4265814	2					
ANR	4267116	CallExpression	strlen ( slash )		4265814	0					
ANR	4267117	Callee	strlen		4265814	0					
ANR	4267118	Identifier	strlen		4265814	0					
ANR	4267119	ArgumentList	slash		4265814	1					
ANR	4267120	Argument	slash		4265814	0					
ANR	4267121	Identifier	slash		4265814	0					
ANR	4267122	ExpressionStatement	"r_fs_read ( core -> fs , file , 0 , file -> size )"	316:3:7824:7865	4265814	3	True				
ANR	4267123	CallExpression	"r_fs_read ( core -> fs , file , 0 , file -> size )"		4265814	0					
ANR	4267124	Callee	r_fs_read		4265814	0					
ANR	4267125	Identifier	r_fs_read		4265814	0					
ANR	4267126	ArgumentList	core -> fs		4265814	1					
ANR	4267127	Argument	core -> fs		4265814	0					
ANR	4267128	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267129	Identifier	core		4265814	0					
ANR	4267130	Identifier	fs		4265814	1					
ANR	4267131	Argument	file		4265814	1					
ANR	4267132	Identifier	file		4265814	0					
ANR	4267133	Argument	0		4265814	2					
ANR	4267134	PrimaryExpression	0		4265814	0					
ANR	4267135	Argument	file -> size		4265814	3					
ANR	4267136	PtrMemberAccess	file -> size		4265814	0					
ANR	4267137	Identifier	file		4265814	0					
ANR	4267138	Identifier	size		4265814	1					
ANR	4267139	ExpressionStatement	"r_file_dump ( localFile , file -> data , file -> size , false )"	317:3:7870:7924	4265814	4	True				
ANR	4267140	CallExpression	"r_file_dump ( localFile , file -> data , file -> size , false )"		4265814	0					
ANR	4267141	Callee	r_file_dump		4265814	0					
ANR	4267142	Identifier	r_file_dump		4265814	0					
ANR	4267143	ArgumentList	localFile		4265814	1					
ANR	4267144	Argument	localFile		4265814	0					
ANR	4267145	Identifier	localFile		4265814	0					
ANR	4267146	Argument	file -> data		4265814	1					
ANR	4267147	PtrMemberAccess	file -> data		4265814	0					
ANR	4267148	Identifier	file		4265814	0					
ANR	4267149	Identifier	data		4265814	1					
ANR	4267150	Argument	file -> size		4265814	2					
ANR	4267151	PtrMemberAccess	file -> size		4265814	0					
ANR	4267152	Identifier	file		4265814	0					
ANR	4267153	Identifier	size		4265814	1					
ANR	4267154	Argument	false		4265814	3					
ANR	4267155	Identifier	false		4265814	0					
ANR	4267156	ExpressionStatement	"r_fs_close ( core -> fs , file )"	318:3:7929:7956	4265814	5	True				
ANR	4267157	CallExpression	"r_fs_close ( core -> fs , file )"		4265814	0					
ANR	4267158	Callee	r_fs_close		4265814	0					
ANR	4267159	Identifier	r_fs_close		4265814	0					
ANR	4267160	ArgumentList	core -> fs		4265814	1					
ANR	4267161	Argument	core -> fs		4265814	0					
ANR	4267162	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267163	Identifier	core		4265814	0					
ANR	4267164	Identifier	fs		4265814	1					
ANR	4267165	Argument	file		4265814	1					
ANR	4267166	Identifier	file		4265814	0					
ANR	4267167	ExpressionStatement	"eprintf ( ""File '%s' created.\\n"" , localFile )"	319:3:7961:8004	4265814	6	True				
ANR	4267168	CallExpression	"eprintf ( ""File '%s' created.\\n"" , localFile )"		4265814	0					
ANR	4267169	Callee	eprintf		4265814	0					
ANR	4267170	Identifier	eprintf		4265814	0					
ANR	4267171	ArgumentList	"""File '%s' created.\\n"""		4265814	1					
ANR	4267172	Argument	"""File '%s' created.\\n"""		4265814	0					
ANR	4267173	PrimaryExpression	"""File '%s' created.\\n"""		4265814	0					
ANR	4267174	Argument	localFile		4265814	1					
ANR	4267175	Identifier	localFile		4265814	0					
ANR	4267176	ExpressionStatement	free ( localFile )	320:3:8009:8025	4265814	7	True				
ANR	4267177	CallExpression	free ( localFile )		4265814	0					
ANR	4267178	Callee	free		4265814	0					
ANR	4267179	Identifier	free		4265814	0					
ANR	4267180	ArgumentList	localFile		4265814	1					
ANR	4267181	Argument	localFile		4265814	0					
ANR	4267182	Identifier	localFile		4265814	0					
ANR	4267183	ElseStatement	else		4265814	0					
ANR	4267184	IfStatement	"if ( ! r_fs_dir_dump ( core -> fs , input , ptr ) )"		4265814	0					
ANR	4267185	Condition	"! r_fs_dir_dump ( core -> fs , input , ptr )"	321:13:8040:8076	4265814	0	True				
ANR	4267186	UnaryOperationExpression	"! r_fs_dir_dump ( core -> fs , input , ptr )"		4265814	0					
ANR	4267187	UnaryOperator	!		4265814	0					
ANR	4267188	CallExpression	"r_fs_dir_dump ( core -> fs , input , ptr )"		4265814	1					
ANR	4267189	Callee	r_fs_dir_dump		4265814	0					
ANR	4267190	Identifier	r_fs_dir_dump		4265814	0					
ANR	4267191	ArgumentList	core -> fs		4265814	1					
ANR	4267192	Argument	core -> fs		4265814	0					
ANR	4267193	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267194	Identifier	core		4265814	0					
ANR	4267195	Identifier	fs		4265814	1					
ANR	4267196	Argument	input		4265814	1					
ANR	4267197	Identifier	input		4265814	0					
ANR	4267198	Argument	ptr		4265814	2					
ANR	4267199	Identifier	ptr		4265814	0					
ANR	4267200	CompoundStatement		210:52:4930:4930	4265814	1					
ANR	4267201	ExpressionStatement	"eprintf ( ""Cannot open file\\n"" )"	322:3:8084:8114	4265814	0	True				
ANR	4267202	CallExpression	"eprintf ( ""Cannot open file\\n"" )"		4265814	0					
ANR	4267203	Callee	eprintf		4265814	0					
ANR	4267204	Identifier	eprintf		4265814	0					
ANR	4267205	ArgumentList	"""Cannot open file\\n"""		4265814	1					
ANR	4267206	Argument	"""Cannot open file\\n"""		4265814	0					
ANR	4267207	PrimaryExpression	"""Cannot open file\\n"""		4265814	0					
ANR	4267208	BreakStatement	break ;	324:2:8122:8127	4265814	95	True				
ANR	4267209	Label	case 'f' :	325:1:8130:8138	4265814	96	True				
ANR	4267210	ExpressionStatement	input ++	326:2:8142:8149	4265814	97	True				
ANR	4267211	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267212	Identifier	input		4265814	0					
ANR	4267213	IncDec	++		4265814	1					
ANR	4267214	SwitchStatement	switch ( * input )		4265814	98					
ANR	4267215	Condition	* input	327:10:8161:8166	4265814	0	True				
ANR	4267216	UnaryOperationExpression	* input		4265814	0					
ANR	4267217	UnaryOperator	*		4265814	0					
ANR	4267218	Identifier	input		4265814	1					
ANR	4267219	CompoundStatement		216:18:5020:5020	4265814	1					
ANR	4267220	Label	case '?' :	328:2:8173:8181	4265814	0	True				
ANR	4267221	Statement	r_cons_printf	329:3:8186:8198	4265814	1	True				
ANR	4267222	Statement	(	329:17:8200:8200	4265814	2	True				
ANR	4267223	Statement	"""Usage: mf[no] [...]\\n"""	330:3:8205:8227	4265814	3	True				
ANR	4267224	Statement	""" mfn /foo *.c       ; search files by name in /foo path\\n"""	331:3:8232:8290	4265814	4	True				
ANR	4267225	Statement	""" mfo /foo 0x5e91    ; search files by offset in /foo path\\n"""	332:3:8295:8355	4265814	5	True				
ANR	4267226	Statement	)	333:3:8360:8360	4265814	6	True				
ANR	4267227	ExpressionStatement		333:4:8361:8361	4265814	7	True				
ANR	4267228	BreakStatement	break ;	334:3:8366:8371	4265814	8	True				
ANR	4267229	Label	case 'n' :	335:2:8375:8383	4265814	9	True				
ANR	4267230	ExpressionStatement	input ++	336:3:8388:8395	4265814	10	True				
ANR	4267231	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267232	Identifier	input		4265814	0					
ANR	4267233	IncDec	++		4265814	1					
ANR	4267234	IfStatement	if ( * input == ' ' )		4265814	11					
ANR	4267235	Condition	* input == ' '	337:7:8404:8416	4265814	0	True				
ANR	4267236	EqualityExpression	* input == ' '		4265814	0		==			
ANR	4267237	UnaryOperationExpression	* input		4265814	0					
ANR	4267238	UnaryOperator	*		4265814	0					
ANR	4267239	Identifier	input		4265814	1					
ANR	4267240	PrimaryExpression	' '		4265814	1					
ANR	4267241	ExpressionStatement	input ++	338:4:8423:8430	4265814	1	True				
ANR	4267242	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267243	Identifier	input		4265814	0					
ANR	4267244	IncDec	++		4265814	1					
ANR	4267245	ExpressionStatement	"ptr = strchr ( input , ' ' )"	339:3:8435:8460	4265814	12	True				
ANR	4267246	AssignmentExpression	"ptr = strchr ( input , ' ' )"		4265814	0		=			
ANR	4267247	Identifier	ptr		4265814	0					
ANR	4267248	CallExpression	"strchr ( input , ' ' )"		4265814	1					
ANR	4267249	Callee	strchr		4265814	0					
ANR	4267250	Identifier	strchr		4265814	0					
ANR	4267251	ArgumentList	input		4265814	1					
ANR	4267252	Argument	input		4265814	0					
ANR	4267253	Identifier	input		4265814	0					
ANR	4267254	Argument	' '		4265814	1					
ANR	4267255	PrimaryExpression	' '		4265814	0					
ANR	4267256	IfStatement	if ( ptr )		4265814	13					
ANR	4267257	Condition	ptr	340:7:8469:8471	4265814	0	True				
ANR	4267258	Identifier	ptr		4265814	0					
ANR	4267259	CompoundStatement		229:12:5325:5325	4265814	1					
ANR	4267260	ExpressionStatement	* ptr ++ = 0	341:4:8480:8490	4265814	0	True				
ANR	4267261	AssignmentExpression	* ptr ++ = 0		4265814	0		=			
ANR	4267262	UnaryOperationExpression	* ptr ++		4265814	0					
ANR	4267263	UnaryOperator	*		4265814	0					
ANR	4267264	PostIncDecOperationExpression	ptr ++		4265814	1					
ANR	4267265	Identifier	ptr		4265814	0					
ANR	4267266	IncDec	++		4265814	1					
ANR	4267267	PrimaryExpression	0		4265814	1					
ANR	4267268	ExpressionStatement	"list = r_fs_find_name ( core -> fs , input , ptr )"	342:4:8496:8540	4265814	1	True				
ANR	4267269	AssignmentExpression	"list = r_fs_find_name ( core -> fs , input , ptr )"		4265814	0		=			
ANR	4267270	Identifier	list		4265814	0					
ANR	4267271	CallExpression	"r_fs_find_name ( core -> fs , input , ptr )"		4265814	1					
ANR	4267272	Callee	r_fs_find_name		4265814	0					
ANR	4267273	Identifier	r_fs_find_name		4265814	0					
ANR	4267274	ArgumentList	core -> fs		4265814	1					
ANR	4267275	Argument	core -> fs		4265814	0					
ANR	4267276	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267277	Identifier	core		4265814	0					
ANR	4267278	Identifier	fs		4265814	1					
ANR	4267279	Argument	input		4265814	1					
ANR	4267280	Identifier	input		4265814	0					
ANR	4267281	Argument	ptr		4265814	2					
ANR	4267282	Identifier	ptr		4265814	0					
ANR	4267283	Statement	r_list_foreach	343:4:8546:8559	4265814	2	True				
ANR	4267284	Statement	(	343:19:8561:8561	4265814	3	True				
ANR	4267285	Statement	list	343:20:8562:8565	4265814	4	True				
ANR	4267286	Statement	","	343:24:8566:8566	4265814	5	True				
ANR	4267287	Statement	iter	343:26:8568:8571	4265814	6	True				
ANR	4267288	Statement	","	343:30:8572:8572	4265814	7	True				
ANR	4267289	Statement	ptr	343:32:8574:8576	4265814	8	True				
ANR	4267290	Statement	)	343:35:8577:8577	4265814	9	True				
ANR	4267291	CompoundStatement		232:37:5430:5430	4265814	10					
ANR	4267292	ExpressionStatement	r_str_trim_path ( ptr )	344:5:8586:8607	4265814	0	True				
ANR	4267293	CallExpression	r_str_trim_path ( ptr )		4265814	0					
ANR	4267294	Callee	r_str_trim_path		4265814	0					
ANR	4267295	Identifier	r_str_trim_path		4265814	0					
ANR	4267296	ArgumentList	ptr		4265814	1					
ANR	4267297	Argument	ptr		4265814	0					
ANR	4267298	Identifier	ptr		4265814	0					
ANR	4267299	ExpressionStatement	"printf ( ""%s\\n"" , ptr )"	345:5:8614:8634	4265814	1	True				
ANR	4267300	CallExpression	"printf ( ""%s\\n"" , ptr )"		4265814	0					
ANR	4267301	Callee	printf		4265814	0					
ANR	4267302	Identifier	printf		4265814	0					
ANR	4267303	ArgumentList	"""%s\\n"""		4265814	1					
ANR	4267304	Argument	"""%s\\n"""		4265814	0					
ANR	4267305	PrimaryExpression	"""%s\\n"""		4265814	0					
ANR	4267306	Argument	ptr		4265814	1					
ANR	4267307	Identifier	ptr		4265814	0					
ANR	4267308	ElseStatement	else		4265814	0					
ANR	4267309	ExpressionStatement	"eprintf ( ""Unknown store path\\n"" )"	348:10:8684:8716	4265814	0	True				
ANR	4267310	CallExpression	"eprintf ( ""Unknown store path\\n"" )"		4265814	0					
ANR	4267311	Callee	eprintf		4265814	0					
ANR	4267312	Identifier	eprintf		4265814	0					
ANR	4267313	ArgumentList	"""Unknown store path\\n"""		4265814	1					
ANR	4267314	Argument	"""Unknown store path\\n"""		4265814	0					
ANR	4267315	PrimaryExpression	"""Unknown store path\\n"""		4265814	0					
ANR	4267316	BreakStatement	break ;	349:3:8721:8726	4265814	14	True				
ANR	4267317	Label	case 'o' :	350:2:8730:8738	4265814	15	True				
ANR	4267318	ExpressionStatement	input ++	351:3:8743:8750	4265814	16	True				
ANR	4267319	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267320	Identifier	input		4265814	0					
ANR	4267321	IncDec	++		4265814	1					
ANR	4267322	IfStatement	if ( * input == ' ' )		4265814	17					
ANR	4267323	Condition	* input == ' '	352:7:8759:8771	4265814	0	True				
ANR	4267324	EqualityExpression	* input == ' '		4265814	0		==			
ANR	4267325	UnaryOperationExpression	* input		4265814	0					
ANR	4267326	UnaryOperator	*		4265814	0					
ANR	4267327	Identifier	input		4265814	1					
ANR	4267328	PrimaryExpression	' '		4265814	1					
ANR	4267329	ExpressionStatement	input ++	353:4:8778:8785	4265814	1	True				
ANR	4267330	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267331	Identifier	input		4265814	0					
ANR	4267332	IncDec	++		4265814	1					
ANR	4267333	ExpressionStatement	"ptr = strchr ( input , ' ' )"	354:3:8790:8815	4265814	18	True				
ANR	4267334	AssignmentExpression	"ptr = strchr ( input , ' ' )"		4265814	0		=			
ANR	4267335	Identifier	ptr		4265814	0					
ANR	4267336	CallExpression	"strchr ( input , ' ' )"		4265814	1					
ANR	4267337	Callee	strchr		4265814	0					
ANR	4267338	Identifier	strchr		4265814	0					
ANR	4267339	ArgumentList	input		4265814	1					
ANR	4267340	Argument	input		4265814	0					
ANR	4267341	Identifier	input		4265814	0					
ANR	4267342	Argument	' '		4265814	1					
ANR	4267343	PrimaryExpression	' '		4265814	0					
ANR	4267344	IfStatement	if ( ptr )		4265814	19					
ANR	4267345	Condition	ptr	355:7:8824:8826	4265814	0	True				
ANR	4267346	Identifier	ptr		4265814	0					
ANR	4267347	CompoundStatement		246:4:5702:5740	4265814	1					
ANR	4267348	ExpressionStatement	* ptr ++ = 0	356:4:8835:8845	4265814	0	True				
ANR	4267349	AssignmentExpression	* ptr ++ = 0		4265814	0		=			
ANR	4267350	UnaryOperationExpression	* ptr ++		4265814	0					
ANR	4267351	UnaryOperator	*		4265814	0					
ANR	4267352	PostIncDecOperationExpression	ptr ++		4265814	1					
ANR	4267353	Identifier	ptr		4265814	0					
ANR	4267354	IncDec	++		4265814	1					
ANR	4267355	PrimaryExpression	0		4265814	1					
ANR	4267356	IdentifierDeclStatement	"ut64 off = r_num_math ( core -> num , ptr ) ;"	357:4:8851:8889	4265814	1	True				
ANR	4267357	IdentifierDecl	"off = r_num_math ( core -> num , ptr )"		4265814	0					
ANR	4267358	IdentifierDeclType	ut64		4265814	0					
ANR	4267359	Identifier	off		4265814	1					
ANR	4267360	AssignmentExpression	"off = r_num_math ( core -> num , ptr )"		4265814	2		=			
ANR	4267361	Identifier	off		4265814	0					
ANR	4267362	CallExpression	"r_num_math ( core -> num , ptr )"		4265814	1					
ANR	4267363	Callee	r_num_math		4265814	0					
ANR	4267364	Identifier	r_num_math		4265814	0					
ANR	4267365	ArgumentList	core -> num		4265814	1					
ANR	4267366	Argument	core -> num		4265814	0					
ANR	4267367	PtrMemberAccess	core -> num		4265814	0					
ANR	4267368	Identifier	core		4265814	0					
ANR	4267369	Identifier	num		4265814	1					
ANR	4267370	Argument	ptr		4265814	1					
ANR	4267371	Identifier	ptr		4265814	0					
ANR	4267372	ExpressionStatement	"list = r_fs_find_off ( core -> fs , input , off )"	358:4:8895:8938	4265814	2	True				
ANR	4267373	AssignmentExpression	"list = r_fs_find_off ( core -> fs , input , off )"		4265814	0		=			
ANR	4267374	Identifier	list		4265814	0					
ANR	4267375	CallExpression	"r_fs_find_off ( core -> fs , input , off )"		4265814	1					
ANR	4267376	Callee	r_fs_find_off		4265814	0					
ANR	4267377	Identifier	r_fs_find_off		4265814	0					
ANR	4267378	ArgumentList	core -> fs		4265814	1					
ANR	4267379	Argument	core -> fs		4265814	0					
ANR	4267380	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267381	Identifier	core		4265814	0					
ANR	4267382	Identifier	fs		4265814	1					
ANR	4267383	Argument	input		4265814	1					
ANR	4267384	Identifier	input		4265814	0					
ANR	4267385	Argument	off		4265814	2					
ANR	4267386	Identifier	off		4265814	0					
ANR	4267387	Statement	r_list_foreach	359:4:8944:8957	4265814	3	True				
ANR	4267388	Statement	(	359:19:8959:8959	4265814	4	True				
ANR	4267389	Statement	list	359:20:8960:8963	4265814	5	True				
ANR	4267390	Statement	","	359:24:8964:8964	4265814	6	True				
ANR	4267391	Statement	iter	359:26:8966:8969	4265814	7	True				
ANR	4267392	Statement	","	359:30:8970:8970	4265814	8	True				
ANR	4267393	Statement	ptr	359:32:8972:8974	4265814	9	True				
ANR	4267394	Statement	)	359:35:8975:8975	4265814	10	True				
ANR	4267395	CompoundStatement		248:37:5828:5828	4265814	11					
ANR	4267396	ExpressionStatement	r_str_trim_path ( ptr )	360:5:8984:9005	4265814	0	True				
ANR	4267397	CallExpression	r_str_trim_path ( ptr )		4265814	0					
ANR	4267398	Callee	r_str_trim_path		4265814	0					
ANR	4267399	Identifier	r_str_trim_path		4265814	0					
ANR	4267400	ArgumentList	ptr		4265814	1					
ANR	4267401	Argument	ptr		4265814	0					
ANR	4267402	Identifier	ptr		4265814	0					
ANR	4267403	ExpressionStatement	"printf ( ""%s\\n"" , ptr )"	361:5:9012:9032	4265814	1	True				
ANR	4267404	CallExpression	"printf ( ""%s\\n"" , ptr )"		4265814	0					
ANR	4267405	Callee	printf		4265814	0					
ANR	4267406	Identifier	printf		4265814	0					
ANR	4267407	ArgumentList	"""%s\\n"""		4265814	1					
ANR	4267408	Argument	"""%s\\n"""		4265814	0					
ANR	4267409	PrimaryExpression	"""%s\\n"""		4265814	0					
ANR	4267410	Argument	ptr		4265814	1					
ANR	4267411	Identifier	ptr		4265814	0					
ANR	4267412	ElseStatement	else		4265814	0					
ANR	4267413	ExpressionStatement	"eprintf ( ""Unknown store path\\n"" )"	364:10:9082:9114	4265814	0	True				
ANR	4267414	CallExpression	"eprintf ( ""Unknown store path\\n"" )"		4265814	0					
ANR	4267415	Callee	eprintf		4265814	0					
ANR	4267416	Identifier	eprintf		4265814	0					
ANR	4267417	ArgumentList	"""Unknown store path\\n"""		4265814	1					
ANR	4267418	Argument	"""Unknown store path\\n"""		4265814	0					
ANR	4267419	PrimaryExpression	"""Unknown store path\\n"""		4265814	0					
ANR	4267420	BreakStatement	break ;	365:3:9119:9124	4265814	20	True				
ANR	4267421	BreakStatement	break ;	367:2:9132:9137	4265814	99	True				
ANR	4267422	Label	case 's' :	368:1:9140:9148	4265814	100	True				
ANR	4267423	IfStatement	if ( core -> http_up )		4265814	101					
ANR	4267424	Condition	core -> http_up	369:6:9164:9176	4265814	0	True				
ANR	4267425	PtrMemberAccess	core -> http_up		4265814	0					
ANR	4267426	Identifier	core		4265814	0					
ANR	4267427	Identifier	http_up		4265814	1					
ANR	4267428	CompoundStatement		258:21:6030:6030	4265814	1					
ANR	4267429	ExpressionStatement	free ( oinput )	370:3:9184:9197	4265814	0	True				
ANR	4267430	CallExpression	free ( oinput )		4265814	0					
ANR	4267431	Callee	free		4265814	0					
ANR	4267432	Identifier	free		4265814	0					
ANR	4267433	ArgumentList	oinput		4265814	1					
ANR	4267434	Argument	oinput		4265814	0					
ANR	4267435	Identifier	oinput		4265814	0					
ANR	4267436	ReturnStatement	return false ;	371:3:9202:9214	4265814	1	True				
ANR	4267437	Identifier	false		4265814	0					
ANR	4267438	ExpressionStatement	input ++	373:2:9222:9229	4265814	102	True				
ANR	4267439	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267440	Identifier	input		4265814	0					
ANR	4267441	IncDec	++		4265814	1					
ANR	4267442	IfStatement	if ( input [ 0 ] == ' ' )		4265814	103					
ANR	4267443	Condition	input [ 0 ] == ' '	374:6:9237:9251	4265814	0	True				
ANR	4267444	EqualityExpression	input [ 0 ] == ' '		4265814	0		==			
ANR	4267445	ArrayIndexing	input [ 0 ]		4265814	0					
ANR	4267446	Identifier	input		4265814	0					
ANR	4267447	PrimaryExpression	0		4265814	1					
ANR	4267448	PrimaryExpression	' '		4265814	1					
ANR	4267449	CompoundStatement		263:23:6105:6105	4265814	1					
ANR	4267450	ExpressionStatement	input ++	375:3:9259:9266	4265814	0	True				
ANR	4267451	PostIncDecOperationExpression	input ++		4265814	0					
ANR	4267452	Identifier	input		4265814	0					
ANR	4267453	IncDec	++		4265814	1					
ANR	4267454	ExpressionStatement	r_cons_set_raw ( false )	377:2:9274:9296	4265814	104	True				
ANR	4267455	CallExpression	r_cons_set_raw ( false )		4265814	0					
ANR	4267456	Callee	r_cons_set_raw		4265814	0					
ANR	4267457	Identifier	r_cons_set_raw		4265814	0					
ANR	4267458	ArgumentList	false		4265814	1					
ANR	4267459	Argument	false		4265814	0					
ANR	4267460	Identifier	false		4265814	0					
ANR	4267461	CompoundStatement		267:2:6151:6151	4265814	105					
ANR	4267462	Statement	RFSShell	379:3:9305:9312	4265814	0	True				
ANR	4267463	Statement	shell	379:12:9314:9318	4265814	1	True				
ANR	4267464	Statement	=	379:18:9320:9320	4265814	2	True				
ANR	4267465	CompoundStatement		268:20:6173:6173	4265814	3					
ANR	4267466	Statement	.	380:4:9328:9328	4265814	0	True				
ANR	4267467	Statement	cwd	380:5:9329:9331	4265814	1	True				
ANR	4267468	Statement	=	380:9:9333:9333	4265814	2	True				
ANR	4267469	Statement	&	380:11:9335:9335	4265814	3	True				
ANR	4267470	Statement	cwd	380:12:9336:9338	4265814	4	True				
ANR	4267471	Statement	","	380:15:9339:9339	4265814	5	True				
ANR	4267472	Statement	.	381:4:9345:9345	4265814	6	True				
ANR	4267473	Statement	set_prompt	381:5:9346:9355	4265814	7	True				
ANR	4267474	Statement	=	381:16:9357:9357	4265814	8	True				
ANR	4267475	Statement	r_line_set_prompt	381:18:9359:9375	4265814	9	True				
ANR	4267476	Statement	","	381:35:9376:9376	4265814	10	True				
ANR	4267477	Statement	.	382:4:9382:9382	4265814	11	True				
ANR	4267478	Statement	readline	382:5:9383:9390	4265814	12	True				
ANR	4267479	Statement	=	382:14:9392:9392	4265814	13	True				
ANR	4267480	Statement	r_line_readline	382:16:9394:9408	4265814	14	True				
ANR	4267481	Statement	","	382:31:9409:9409	4265814	15	True				
ANR	4267482	Statement	.	383:4:9415:9415	4265814	16	True				
ANR	4267483	Statement	hist_add	383:5:9416:9423	4265814	17	True				
ANR	4267484	Statement	=	383:14:9425:9425	4265814	18	True				
ANR	4267485	Statement	r_line_hist_add	383:16:9427:9441	4265814	19	True				
ANR	4267486	ExpressionStatement		384:4:9447:9447	4265814	4	True				
ANR	4267487	ExpressionStatement	core -> rfs = & shell	385:3:9452:9470	4265814	5	True				
ANR	4267488	AssignmentExpression	core -> rfs = & shell		4265814	0		=			
ANR	4267489	PtrMemberAccess	core -> rfs		4265814	0					
ANR	4267490	Identifier	core		4265814	0					
ANR	4267491	Identifier	rfs		4265814	1					
ANR	4267492	UnaryOperationExpression	& shell		4265814	1					
ANR	4267493	UnaryOperator	&		4265814	0					
ANR	4267494	Identifier	shell		4265814	1					
ANR	4267495	ExpressionStatement	core -> autocomplete_type = AUTOCOMPLETE_MS	386:3:9475:9516	4265814	6	True				
ANR	4267496	AssignmentExpression	core -> autocomplete_type = AUTOCOMPLETE_MS		4265814	0		=			
ANR	4267497	PtrMemberAccess	core -> autocomplete_type		4265814	0					
ANR	4267498	Identifier	core		4265814	0					
ANR	4267499	Identifier	autocomplete_type		4265814	1					
ANR	4267500	Identifier	AUTOCOMPLETE_MS		4265814	1					
ANR	4267501	ExpressionStatement	r_core_autocomplete_reload ( core )	387:3:9521:9554	4265814	7	True				
ANR	4267502	CallExpression	r_core_autocomplete_reload ( core )		4265814	0					
ANR	4267503	Callee	r_core_autocomplete_reload		4265814	0					
ANR	4267504	Identifier	r_core_autocomplete_reload		4265814	0					
ANR	4267505	ArgumentList	core		4265814	1					
ANR	4267506	Argument	core		4265814	0					
ANR	4267507	Identifier	core		4265814	0					
ANR	4267508	ExpressionStatement	"r_fs_shell_prompt ( & shell , core -> fs , input )"	388:3:9559:9602	4265814	8	True				
ANR	4267509	CallExpression	"r_fs_shell_prompt ( & shell , core -> fs , input )"		4265814	0					
ANR	4267510	Callee	r_fs_shell_prompt		4265814	0					
ANR	4267511	Identifier	r_fs_shell_prompt		4265814	0					
ANR	4267512	ArgumentList	& shell		4265814	1					
ANR	4267513	Argument	& shell		4265814	0					
ANR	4267514	UnaryOperationExpression	& shell		4265814	0					
ANR	4267515	UnaryOperator	&		4265814	0					
ANR	4267516	Identifier	shell		4265814	1					
ANR	4267517	Argument	core -> fs		4265814	1					
ANR	4267518	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267519	Identifier	core		4265814	0					
ANR	4267520	Identifier	fs		4265814	1					
ANR	4267521	Argument	input		4265814	2					
ANR	4267522	Identifier	input		4265814	0					
ANR	4267523	ExpressionStatement	core -> autocomplete_type = AUTOCOMPLETE_DEFAULT	389:3:9607:9653	4265814	9	True				
ANR	4267524	AssignmentExpression	core -> autocomplete_type = AUTOCOMPLETE_DEFAULT		4265814	0		=			
ANR	4267525	PtrMemberAccess	core -> autocomplete_type		4265814	0					
ANR	4267526	Identifier	core		4265814	0					
ANR	4267527	Identifier	autocomplete_type		4265814	1					
ANR	4267528	Identifier	AUTOCOMPLETE_DEFAULT		4265814	1					
ANR	4267529	ExpressionStatement	r_core_autocomplete_reload ( core )	390:3:9658:9691	4265814	10	True				
ANR	4267530	CallExpression	r_core_autocomplete_reload ( core )		4265814	0					
ANR	4267531	Callee	r_core_autocomplete_reload		4265814	0					
ANR	4267532	Identifier	r_core_autocomplete_reload		4265814	0					
ANR	4267533	ArgumentList	core		4265814	1					
ANR	4267534	Argument	core		4265814	0					
ANR	4267535	Identifier	core		4265814	0					
ANR	4267536	ExpressionStatement	R_FREE ( cwd )	391:3:9696:9708	4265814	11	True				
ANR	4267537	CallExpression	R_FREE ( cwd )		4265814	0					
ANR	4267538	Callee	R_FREE		4265814	0					
ANR	4267539	Identifier	R_FREE		4265814	0					
ANR	4267540	ArgumentList	cwd		4265814	1					
ANR	4267541	Argument	cwd		4265814	0					
ANR	4267542	Identifier	cwd		4265814	0					
ANR	4267543	BreakStatement	break ;	393:2:9716:9721	4265814	106	True				
ANR	4267544	Label	case 'w' :	394:1:9724:9732	4265814	107	True				
ANR	4267545	IfStatement	if ( input [ 1 ] == ' ' )		4265814	108					
ANR	4267546	Condition	input [ 1 ] == ' '	395:6:9740:9754	4265814	0	True				
ANR	4267547	EqualityExpression	input [ 1 ] == ' '		4265814	0		==			
ANR	4267548	ArrayIndexing	input [ 1 ]		4265814	0					
ANR	4267549	Identifier	input		4265814	0					
ANR	4267550	PrimaryExpression	1		4265814	1					
ANR	4267551	PrimaryExpression	' '		4265814	1					
ANR	4267552	CompoundStatement		293:3:6784:6829	4265814	1					
ANR	4267553	IdentifierDeclStatement	char * args = r_str_trim_dup ( input + 1 ) ;	396:3:9762:9801	4265814	0	True				
ANR	4267554	IdentifierDecl	* args = r_str_trim_dup ( input + 1 )		4265814	0					
ANR	4267555	IdentifierDeclType	char *		4265814	0					
ANR	4267556	Identifier	args		4265814	1					
ANR	4267557	AssignmentExpression	* args = r_str_trim_dup ( input + 1 )		4265814	2		=			
ANR	4267558	Identifier	args		4265814	0					
ANR	4267559	CallExpression	r_str_trim_dup ( input + 1 )		4265814	1					
ANR	4267560	Callee	r_str_trim_dup		4265814	0					
ANR	4267561	Identifier	r_str_trim_dup		4265814	0					
ANR	4267562	ArgumentList	input + 1		4265814	1					
ANR	4267563	Argument	input + 1		4265814	0					
ANR	4267564	AdditiveExpression	input + 1		4265814	0		+			
ANR	4267565	Identifier	input		4265814	0					
ANR	4267566	PrimaryExpression	1		4265814	1					
ANR	4267567	IdentifierDeclStatement	"char * arg = strchr ( args , ' ' ) ;"	397:3:9806:9836	4265814	1	True				
ANR	4267568	IdentifierDecl	"* arg = strchr ( args , ' ' )"		4265814	0					
ANR	4267569	IdentifierDeclType	char *		4265814	0					
ANR	4267570	Identifier	arg		4265814	1					
ANR	4267571	AssignmentExpression	"* arg = strchr ( args , ' ' )"		4265814	2		=			
ANR	4267572	Identifier	arg		4265814	0					
ANR	4267573	CallExpression	"strchr ( args , ' ' )"		4265814	1					
ANR	4267574	Callee	strchr		4265814	0					
ANR	4267575	Identifier	strchr		4265814	0					
ANR	4267576	ArgumentList	args		4265814	1					
ANR	4267577	Argument	args		4265814	0					
ANR	4267578	Identifier	args		4265814	0					
ANR	4267579	Argument	' '		4265814	1					
ANR	4267580	PrimaryExpression	' '		4265814	0					
ANR	4267581	IfStatement	if ( arg )		4265814	2					
ANR	4267582	Condition	arg	398:7:9845:9847	4265814	0	True				
ANR	4267583	Identifier	arg		4265814	0					
ANR	4267584	CompoundStatement		287:12:6701:6701	4265814	1					
ANR	4267585	ExpressionStatement	data = arg + 1	399:4:9856:9870	4265814	0	True				
ANR	4267586	AssignmentExpression	data = arg + 1		4265814	0		=			
ANR	4267587	Identifier	data		4265814	0					
ANR	4267588	AdditiveExpression	arg + 1		4265814	1		+			
ANR	4267589	Identifier	arg		4265814	0					
ANR	4267590	PrimaryExpression	1		4265814	1					
ANR	4267591	ElseStatement	else		4265814	0					
ANR	4267592	CompoundStatement		289:10:6733:6733	4265814	0					
ANR	4267593	ExpressionStatement	"data = """""	401:4:9888:9897	4265814	0	True				
ANR	4267594	AssignmentExpression	"data = """""		4265814	0		=			
ANR	4267595	Identifier	data		4265814	0					
ANR	4267596	PrimaryExpression	""""""		4265814	1					
ANR	4267597	IdentifierDeclStatement	"RFSFile * f = r_fs_open ( core -> fs , args , true ) ;"	404:3:9933:9978	4265814	3	True				
ANR	4267598	IdentifierDecl	"* f = r_fs_open ( core -> fs , args , true )"		4265814	0					
ANR	4267599	IdentifierDeclType	RFSFile *		4265814	0					
ANR	4267600	Identifier	f		4265814	1					
ANR	4267601	AssignmentExpression	"* f = r_fs_open ( core -> fs , args , true )"		4265814	2		=			
ANR	4267602	Identifier	f		4265814	0					
ANR	4267603	CallExpression	"r_fs_open ( core -> fs , args , true )"		4265814	1					
ANR	4267604	Callee	r_fs_open		4265814	0					
ANR	4267605	Identifier	r_fs_open		4265814	0					
ANR	4267606	ArgumentList	core -> fs		4265814	1					
ANR	4267607	Argument	core -> fs		4265814	0					
ANR	4267608	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267609	Identifier	core		4265814	0					
ANR	4267610	Identifier	fs		4265814	1					
ANR	4267611	Argument	args		4265814	1					
ANR	4267612	Identifier	args		4265814	0					
ANR	4267613	Argument	true		4265814	2					
ANR	4267614	Identifier	true		4265814	0					
ANR	4267615	IfStatement	if ( f )		4265814	4					
ANR	4267616	Condition	f	405:7:9987:9987	4265814	0	True				
ANR	4267617	Identifier	f		4265814	0					
ANR	4267618	CompoundStatement		294:10:6841:6841	4265814	1					
ANR	4267619	ExpressionStatement	"r_fs_write ( core -> fs , f , 0 , ( const ut8 * ) data , strlen ( data ) )"	406:4:9996:10057	4265814	0	True				
ANR	4267620	CallExpression	"r_fs_write ( core -> fs , f , 0 , ( const ut8 * ) data , strlen ( data ) )"		4265814	0					
ANR	4267621	Callee	r_fs_write		4265814	0					
ANR	4267622	Identifier	r_fs_write		4265814	0					
ANR	4267623	ArgumentList	core -> fs		4265814	1					
ANR	4267624	Argument	core -> fs		4265814	0					
ANR	4267625	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267626	Identifier	core		4265814	0					
ANR	4267627	Identifier	fs		4265814	1					
ANR	4267628	Argument	f		4265814	1					
ANR	4267629	Identifier	f		4265814	0					
ANR	4267630	Argument	0		4265814	2					
ANR	4267631	PrimaryExpression	0		4265814	0					
ANR	4267632	Argument	( const ut8 * ) data		4265814	3					
ANR	4267633	CastExpression	( const ut8 * ) data		4265814	0					
ANR	4267634	CastTarget	const ut8 *		4265814	0					
ANR	4267635	Identifier	data		4265814	1					
ANR	4267636	Argument	strlen ( data )		4265814	4					
ANR	4267637	CallExpression	strlen ( data )		4265814	0					
ANR	4267638	Callee	strlen		4265814	0					
ANR	4267639	Identifier	strlen		4265814	0					
ANR	4267640	ArgumentList	data		4265814	1					
ANR	4267641	Argument	data		4265814	0					
ANR	4267642	Identifier	data		4265814	0					
ANR	4267643	ExpressionStatement	"r_fs_close ( core -> fs , f )"	407:4:10063:10087	4265814	1	True				
ANR	4267644	CallExpression	"r_fs_close ( core -> fs , f )"		4265814	0					
ANR	4267645	Callee	r_fs_close		4265814	0					
ANR	4267646	Identifier	r_fs_close		4265814	0					
ANR	4267647	ArgumentList	core -> fs		4265814	1					
ANR	4267648	Argument	core -> fs		4265814	0					
ANR	4267649	PtrMemberAccess	core -> fs		4265814	0					
ANR	4267650	Identifier	core		4265814	0					
ANR	4267651	Identifier	fs		4265814	1					
ANR	4267652	Argument	f		4265814	1					
ANR	4267653	Identifier	f		4265814	0					
ANR	4267654	ExpressionStatement	r_fs_file_free ( f )	408:4:10093:10111	4265814	2	True				
ANR	4267655	CallExpression	r_fs_file_free ( f )		4265814	0					
ANR	4267656	Callee	r_fs_file_free		4265814	0					
ANR	4267657	Identifier	r_fs_file_free		4265814	0					
ANR	4267658	ArgumentList	f		4265814	1					
ANR	4267659	Argument	f		4265814	0					
ANR	4267660	Identifier	f		4265814	0					
ANR	4267661	ExpressionStatement	free ( args )	409:4:10117:10128	4265814	3	True				
ANR	4267662	CallExpression	free ( args )		4265814	0					
ANR	4267663	Callee	free		4265814	0					
ANR	4267664	Identifier	free		4265814	0					
ANR	4267665	ArgumentList	args		4265814	1					
ANR	4267666	Argument	args		4265814	0					
ANR	4267667	Identifier	args		4265814	0					
ANR	4267668	ElseStatement	else		4265814	0					
ANR	4267669	CompoundStatement		300:9:6995:6995	4265814	0					
ANR	4267670	ExpressionStatement	"eprintf ( ""Usage: mw [file] ([data])\\n"" )"	412:3:10149:10188	4265814	0	True				
ANR	4267671	CallExpression	"eprintf ( ""Usage: mw [file] ([data])\\n"" )"		4265814	0					
ANR	4267672	Callee	eprintf		4265814	0					
ANR	4267673	Identifier	eprintf		4265814	0					
ANR	4267674	ArgumentList	"""Usage: mw [file] ([data])\\n"""		4265814	1					
ANR	4267675	Argument	"""Usage: mw [file] ([data])\\n"""		4265814	0					
ANR	4267676	PrimaryExpression	"""Usage: mw [file] ([data])\\n"""		4265814	0					
ANR	4267677	BreakStatement	break ;	414:2:10196:10201	4265814	109	True				
ANR	4267678	Label	case 'y' :	415:1:10204:10212	4265814	110	True				
ANR	4267679	ExpressionStatement	"eprintf ( ""TODO\\n"" )"	416:2:10216:10234	4265814	111	True				
ANR	4267680	CallExpression	"eprintf ( ""TODO\\n"" )"		4265814	0					
ANR	4267681	Callee	eprintf		4265814	0					
ANR	4267682	Identifier	eprintf		4265814	0					
ANR	4267683	ArgumentList	"""TODO\\n"""		4265814	1					
ANR	4267684	Argument	"""TODO\\n"""		4265814	0					
ANR	4267685	PrimaryExpression	"""TODO\\n"""		4265814	0					
ANR	4267686	BreakStatement	break ;	417:2:10238:10243	4265814	112	True				
ANR	4267687	Label	case '?' :	418:1:10246:10254	4265814	113	True				
ANR	4267688	ExpressionStatement	"r_core_cmd_help ( core , help_msg_m )"	419:2:10258:10292	4265814	114	True				
ANR	4267689	CallExpression	"r_core_cmd_help ( core , help_msg_m )"		4265814	0					
ANR	4267690	Callee	r_core_cmd_help		4265814	0					
ANR	4267691	Identifier	r_core_cmd_help		4265814	0					
ANR	4267692	ArgumentList	core		4265814	1					
ANR	4267693	Argument	core		4265814	0					
ANR	4267694	Identifier	core		4265814	0					
ANR	4267695	Argument	help_msg_m		4265814	1					
ANR	4267696	Identifier	help_msg_m		4265814	0					
ANR	4267697	BreakStatement	break ;	420:2:10296:10301	4265814	115	True				
ANR	4267698	ExpressionStatement	free ( oinput )	422:1:10307:10320	4265814	13	True				
ANR	4267699	CallExpression	free ( oinput )		4265814	0					
ANR	4267700	Callee	free		4265814	0					
ANR	4267701	Identifier	free		4265814	0					
ANR	4267702	ArgumentList	oinput		4265814	1					
ANR	4267703	Argument	oinput		4265814	0					
ANR	4267704	Identifier	oinput		4265814	0					
ANR	4267705	ReturnStatement	return 0 ;	423:1:10323:10331	4265814	14	True				
ANR	4267706	PrimaryExpression	0		4265814	0					
ANR	4267707	ReturnType	static int		4265814	1					
ANR	4267708	Identifier	cmd_mount		4265814	2					
ANR	4267709	ParameterList	"void * data , const char * _input"		4265814	3					
ANR	4267710	Parameter	void * data	112:21:3116:3125	4265814	0	True				
ANR	4267711	ParameterType	void *		4265814	0					
ANR	4267712	Identifier	data		4265814	1					
ANR	4267713	Parameter	const char * _input	112:33:3128:3145	4265814	1	True				
ANR	4267714	ParameterType	const char *		4265814	0					
ANR	4267715	Identifier	_input		4265814	1					
ANR	4267716	CFGEntryNode	ENTRY		4265814		True				
ANR	4267717	CFGExitNode	EXIT		4265814		True				
ANR	4267718	Symbol	r_fs_name		4265814						
ANR	4267719	Symbol	data		4265814						
ANR	4267720	Symbol	pj_string		4265814						
ANR	4267721	Symbol	root -> p		4265814						
ANR	4267722	Symbol	root -> delta		4265814						
ANR	4267723	Symbol	* input		4265814						
ANR	4267724	Symbol	strchr		4265814						
ANR	4267725	Symbol	core -> offset		4265814						
ANR	4267726	Symbol	core -> autocomplete_type		4265814						
ANR	4267727	Symbol	r_str_trim_dup		4265814						
ANR	4267728	Symbol	strncmp		4265814						
ANR	4267729	Symbol	strlen		4265814						
ANR	4267730	Symbol	* * root		4265814						
ANR	4267731	Symbol	AUTOCOMPLETE_DEFAULT		4265814						
ANR	4267732	Symbol	* ptr		4265814						
ANR	4267733	Symbol	file -> size		4265814						
ANR	4267734	Symbol	* ptr2		4265814						
ANR	4267735	Symbol	core -> num		4265814						
ANR	4267736	Symbol	fstype		4265814						
ANR	4267737	Symbol	r_fs_find_off		4265814						
ANR	4267738	Symbol	* mountp		4265814						
ANR	4267739	Symbol	r_fs_partitions		4265814						
ANR	4267740	Symbol	NULL		4265814						
ANR	4267741	Symbol	mountp		4265814						
ANR	4267742	Symbol	* root -> p		4265814						
ANR	4267743	Symbol	localFile		4265814						
ANR	4267744	Symbol	plug -> name		4265814						
ANR	4267745	Symbol	r_io_open		4265814						
ANR	4267746	Symbol	plug -> desc		4265814						
ANR	4267747	Symbol	AUTOCOMPLETE_MS		4265814						
ANR	4267748	Symbol	iter		4265814						
ANR	4267749	Symbol	list		4265814						
ANR	4267750	Symbol	* file		4265814						
ANR	4267751	Symbol	ptr2		4265814						
ANR	4267752	Symbol	input		4265814						
ANR	4267753	Symbol	core		4265814						
ANR	4267754	Symbol	r_str_trim_ro		4265814						
ANR	4267755	Symbol	true		4265814						
ANR	4267756	Symbol	plug		4265814						
ANR	4267757	Symbol	core -> fs		4265814						
ANR	4267758	Symbol	* root		4265814						
ANR	4267759	Symbol	root -> p -> name		4265814						
ANR	4267760	Symbol	fd		4265814						
ANR	4267761	Symbol	r_fs_find_name		4265814						
ANR	4267762	Symbol	part		4265814						
ANR	4267763	Symbol	* core		4265814						
ANR	4267764	Symbol	r_str_newf		4265814						
ANR	4267765	Symbol	r_num_math		4265814						
ANR	4267766	Symbol	cmd_mv		4265814						
ANR	4267767	Symbol	help_msg_m		4265814						
ANR	4267768	Symbol	file		4265814						
ANR	4267769	Symbol	R_PERM_RW		4265814						
ANR	4267770	Symbol	core -> io		4265814						
ANR	4267771	Symbol	core -> rfs		4265814						
ANR	4267772	Symbol	r_fs_dir_dump		4265814						
ANR	4267773	Symbol	root		4265814						
ANR	4267774	Symbol	arg		4265814						
ANR	4267775	Symbol	core -> http_up		4265814						
ANR	4267776	Symbol	r_fs_mount		4265814						
ANR	4267777	Symbol	_input		4265814						
ANR	4267778	Symbol	oinput		4265814						
ANR	4267779	Symbol	r_fs_open		4265814						
ANR	4267780	Symbol	* ptr ++		4265814						
ANR	4267781	Symbol	f		4265814						
ANR	4267782	Symbol	* plug		4265814						
ANR	4267783	Symbol	false		4265814						
ANR	4267784	Symbol	uri		4265814						
ANR	4267785	Symbol	off		4265814						
ANR	4267786	Symbol	ptr		4265814						
ANR	4267787	Symbol	* fstype		4265814						
ANR	4267788	Symbol	args		4265814						
ANR	4267789	Symbol	cwd		4265814						
ANR	4267790	Symbol	root -> path		4265814						
ANR	4267791	Symbol	file -> data		4265814						
ANR	4267792	Symbol	pj		4265814						
ANR	4267793	Symbol	pj_new		4265814						
ANR	4267794	Symbol	r_str_rchr		4265814						
ANR	4267795	Symbol	slash		4265814						
ANR	4267796	Symbol	strdup		4265814						
ANR	4267797	Symbol	& shell		4265814						
ANR	4267798	Symbol	cmd_mkdir		4265814						
