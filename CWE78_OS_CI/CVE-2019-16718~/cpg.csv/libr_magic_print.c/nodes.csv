command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4954816	File	data/converged/CVE-2019-16718~_radare2/libr_magic_print.c								
ANR	4954817	Function	file_mdump	47:0:1870:5123							
ANR	4954818	FunctionDef	file_mdump (struct r_magic * m)		4954817	0					
ANR	4954819	CompoundStatement		47:35:1905:5123	4954817	0					
ANR	4954820	Statement	static	48:1:1908:1913	4954817	0	True				
ANR	4954821	IdentifierDeclStatement	const char optyp [ ] = { FILE_OPS } ;	48:8:1915:1948	4954817	1	True				
ANR	4954822	IdentifierDecl	optyp [ ] = { FILE_OPS }		4954817	0					
ANR	4954823	IdentifierDeclType	const char [ ]		4954817	0					
ANR	4954824	Identifier	optyp		4954817	1					
ANR	4954825	AssignmentExpression	optyp [ ] = { FILE_OPS }		4954817	2		=			
ANR	4954826	Identifier	optyp		4954817	0					
ANR	4954827	InitializerList	FILE_OPS		4954817	1					
ANR	4954828	Identifier	FILE_OPS		4954817	0					
ANR	4954829	ExpressionStatement	"( void ) eprintf ( ""[%u"" , m -> lineno )"	50:1:1952:1985	4954817	2	True				
ANR	4954830	CastExpression	"( void ) eprintf ( ""[%u"" , m -> lineno )"		4954817	0					
ANR	4954831	CastTarget	void		4954817	0					
ANR	4954832	CallExpression	"eprintf ( ""[%u"" , m -> lineno )"		4954817	1					
ANR	4954833	Callee	eprintf		4954817	0					
ANR	4954834	Identifier	eprintf		4954817	0					
ANR	4954835	ArgumentList	"""[%u"""		4954817	1					
ANR	4954836	Argument	"""[%u"""		4954817	0					
ANR	4954837	PrimaryExpression	"""[%u"""		4954817	0					
ANR	4954838	Argument	m -> lineno		4954817	1					
ANR	4954839	PtrMemberAccess	m -> lineno		4954817	0					
ANR	4954840	Identifier	m		4954817	0					
ANR	4954841	Identifier	lineno		4954817	1					
ANR	4954842	ExpressionStatement	"( void ) eprintf ( ""%.*s %u"" , m -> cont_level & 7 , "">>>>>>>>"" , m -> offset )"	51:1:1988:2056	4954817	3	True				
ANR	4954843	CastExpression	"( void ) eprintf ( ""%.*s %u"" , m -> cont_level & 7 , "">>>>>>>>"" , m -> offset )"		4954817	0					
ANR	4954844	CastTarget	void		4954817	0					
ANR	4954845	CallExpression	"eprintf ( ""%.*s %u"" , m -> cont_level & 7 , "">>>>>>>>"" , m -> offset )"		4954817	1					
ANR	4954846	Callee	eprintf		4954817	0					
ANR	4954847	Identifier	eprintf		4954817	0					
ANR	4954848	ArgumentList	"""%.*s %u"""		4954817	1					
ANR	4954849	Argument	"""%.*s %u"""		4954817	0					
ANR	4954850	PrimaryExpression	"""%.*s %u"""		4954817	0					
ANR	4954851	Argument	m -> cont_level & 7		4954817	1					
ANR	4954852	BitAndExpression	m -> cont_level & 7		4954817	0		&			
ANR	4954853	PtrMemberAccess	m -> cont_level		4954817	0					
ANR	4954854	Identifier	m		4954817	0					
ANR	4954855	Identifier	cont_level		4954817	1					
ANR	4954856	PrimaryExpression	7		4954817	1					
ANR	4954857	Argument	""">>>>>>>>"""		4954817	2					
ANR	4954858	PrimaryExpression	""">>>>>>>>"""		4954817	0					
ANR	4954859	Argument	m -> offset		4954817	3					
ANR	4954860	PtrMemberAccess	m -> offset		4954817	0					
ANR	4954861	Identifier	m		4954817	0					
ANR	4954862	Identifier	offset		4954817	1					
ANR	4954863	IfStatement	if ( m -> flag & INDIR )		4954817	4					
ANR	4954864	Condition	m -> flag & INDIR	53:5:2064:2078	4954817	0	True				
ANR	4954865	BitAndExpression	m -> flag & INDIR		4954817	0		&			
ANR	4954866	PtrMemberAccess	m -> flag		4954817	0					
ANR	4954867	Identifier	m		4954817	0					
ANR	4954868	Identifier	flag		4954817	1					
ANR	4954869	Identifier	INDIR		4954817	1					
ANR	4954870	CompoundStatement		7:22:175:175	4954817	1					
ANR	4954871	ExpressionStatement	"( void ) eprintf ( ""(%s,"" , ( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"" )"	54:2:2085:2231	4954817	0	True				
ANR	4954872	CastExpression	"( void ) eprintf ( ""(%s,"" , ( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"" )"		4954817	0					
ANR	4954873	CastTarget	void		4954817	0					
ANR	4954874	CallExpression	"eprintf ( ""(%s,"" , ( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"" )"		4954817	1					
ANR	4954875	Callee	eprintf		4954817	0					
ANR	4954876	Identifier	eprintf		4954817	0					
ANR	4954877	ArgumentList	"""(%s,"""		4954817	1					
ANR	4954878	Argument	"""(%s,"""		4954817	0					
ANR	4954879	PrimaryExpression	"""(%s,"""		4954817	0					
ANR	4954880	Argument	"( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"""		4954817	1					
ANR	4954881	ConditionalExpression	"( m -> in_type < file_nnames ) ? magic_file_names [ m -> in_type ] : ""*bad*"""		4954817	0					
ANR	4954882	Condition	m -> in_type < file_nnames		4954817	0					
ANR	4954883	RelationalExpression	m -> in_type < file_nnames		4954817	0		<			
ANR	4954884	PtrMemberAccess	m -> in_type		4954817	0					
ANR	4954885	Identifier	m		4954817	0					
ANR	4954886	Identifier	in_type		4954817	1					
ANR	4954887	Identifier	file_nnames		4954817	1					
ANR	4954888	ArrayIndexing	magic_file_names [ m -> in_type ]		4954817	1					
ANR	4954889	Identifier	magic_file_names		4954817	0					
ANR	4954890	PtrMemberAccess	m -> in_type		4954817	1					
ANR	4954891	Identifier	m		4954817	0					
ANR	4954892	Identifier	in_type		4954817	1					
ANR	4954893	PrimaryExpression	"""*bad*"""		4954817	2					
ANR	4954894	IfStatement	if ( m -> in_op & FILE_OPINVERSE )		4954817	1					
ANR	4954895	Condition	m -> in_op & FILE_OPINVERSE	58:6:2239:2263	4954817	0	True				
ANR	4954896	BitAndExpression	m -> in_op & FILE_OPINVERSE		4954817	0		&			
ANR	4954897	PtrMemberAccess	m -> in_op		4954817	0					
ANR	4954898	Identifier	m		4954817	0					
ANR	4954899	Identifier	in_op		4954817	1					
ANR	4954900	Identifier	FILE_OPINVERSE		4954817	1					
ANR	4954901	ExpressionStatement	"( void ) fputc ( '~' , stderr )"	59:3:2269:2294	4954817	1	True				
ANR	4954902	CastExpression	"( void ) fputc ( '~' , stderr )"		4954817	0					
ANR	4954903	CastTarget	void		4954817	0					
ANR	4954904	CallExpression	"fputc ( '~' , stderr )"		4954817	1					
ANR	4954905	Callee	fputc		4954817	0					
ANR	4954906	Identifier	fputc		4954817	0					
ANR	4954907	ArgumentList	'~'		4954817	1					
ANR	4954908	Argument	'~'		4954817	0					
ANR	4954909	PrimaryExpression	'~'		4954817	0					
ANR	4954910	Argument	stderr		4954817	1					
ANR	4954911	Identifier	stderr		4954817	0					
ANR	4954912	ExpressionStatement	"( void ) eprintf ( ""%c%u),"" , ( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?' , m -> in_offset )"	60:2:2298:2440	4954817	2	True				
ANR	4954913	CastExpression	"( void ) eprintf ( ""%c%u),"" , ( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?' , m -> in_offset )"		4954817	0					
ANR	4954914	CastTarget	void		4954817	0					
ANR	4954915	CallExpression	"eprintf ( ""%c%u),"" , ( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?' , m -> in_offset )"		4954817	1					
ANR	4954916	Callee	eprintf		4954817	0					
ANR	4954917	Identifier	eprintf		4954817	0					
ANR	4954918	ArgumentList	"""%c%u),"""		4954817	1					
ANR	4954919	Argument	"""%c%u),"""		4954817	0					
ANR	4954920	PrimaryExpression	"""%c%u),"""		4954817	0					
ANR	4954921	Argument	( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?'		4954817	1					
ANR	4954922	ConditionalExpression	( ( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp ) ) ? optyp [ m -> in_op & FILE_OPS_MASK ] : '?'		4954817	0					
ANR	4954923	Condition	( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp )		4954817	0					
ANR	4954924	RelationalExpression	( m -> in_op & FILE_OPS_MASK ) < SZOF ( optyp )		4954817	0		<			
ANR	4954925	BitAndExpression	m -> in_op & FILE_OPS_MASK		4954817	0		&			
ANR	4954926	PtrMemberAccess	m -> in_op		4954817	0					
ANR	4954927	Identifier	m		4954817	0					
ANR	4954928	Identifier	in_op		4954817	1					
ANR	4954929	Identifier	FILE_OPS_MASK		4954817	1					
ANR	4954930	CallExpression	SZOF ( optyp )		4954817	1					
ANR	4954931	Callee	SZOF		4954817	0					
ANR	4954932	Identifier	SZOF		4954817	0					
ANR	4954933	ArgumentList	optyp		4954817	1					
ANR	4954934	Argument	optyp		4954817	0					
ANR	4954935	Identifier	optyp		4954817	0					
ANR	4954936	ArrayIndexing	optyp [ m -> in_op & FILE_OPS_MASK ]		4954817	1					
ANR	4954937	Identifier	optyp		4954817	0					
ANR	4954938	BitAndExpression	m -> in_op & FILE_OPS_MASK		4954817	1		&			
ANR	4954939	PtrMemberAccess	m -> in_op		4954817	0					
ANR	4954940	Identifier	m		4954817	0					
ANR	4954941	Identifier	in_op		4954817	1					
ANR	4954942	Identifier	FILE_OPS_MASK		4954817	1					
ANR	4954943	PrimaryExpression	'?'		4954817	2					
ANR	4954944	Argument	m -> in_offset		4954817	2					
ANR	4954945	PtrMemberAccess	m -> in_offset		4954817	0					
ANR	4954946	Identifier	m		4954817	0					
ANR	4954947	Identifier	in_offset		4954817	1					
ANR	4954948	ExpressionStatement	"( void ) eprintf ( "" %s%s"" , ( m -> flag & UNSIGNED ) ? ""u"" : """" , ( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"" )"	65:1:2446:2613	4954817	5	True				
ANR	4954949	CastExpression	"( void ) eprintf ( "" %s%s"" , ( m -> flag & UNSIGNED ) ? ""u"" : """" , ( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"" )"		4954817	0					
ANR	4954950	CastTarget	void		4954817	0					
ANR	4954951	CallExpression	"eprintf ( "" %s%s"" , ( m -> flag & UNSIGNED ) ? ""u"" : """" , ( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"" )"		4954817	1					
ANR	4954952	Callee	eprintf		4954817	0					
ANR	4954953	Identifier	eprintf		4954817	0					
ANR	4954954	ArgumentList	""" %s%s"""		4954817	1					
ANR	4954955	Argument	""" %s%s"""		4954817	0					
ANR	4954956	PrimaryExpression	""" %s%s"""		4954817	0					
ANR	4954957	Argument	"( m -> flag & UNSIGNED ) ? ""u"" : """""		4954817	1					
ANR	4954958	ConditionalExpression	"( m -> flag & UNSIGNED ) ? ""u"" : """""		4954817	0					
ANR	4954959	Condition	m -> flag & UNSIGNED		4954817	0					
ANR	4954960	BitAndExpression	m -> flag & UNSIGNED		4954817	0		&			
ANR	4954961	PtrMemberAccess	m -> flag		4954817	0					
ANR	4954962	Identifier	m		4954817	0					
ANR	4954963	Identifier	flag		4954817	1					
ANR	4954964	Identifier	UNSIGNED		4954817	1					
ANR	4954965	PrimaryExpression	"""u"""		4954817	1					
ANR	4954966	PrimaryExpression	""""""		4954817	2					
ANR	4954967	Argument	"( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"""		4954817	2					
ANR	4954968	ConditionalExpression	"( m -> type < file_nnames ) ? magic_file_names [ m -> type ] : ""*bad*"""		4954817	0					
ANR	4954969	Condition	m -> type < file_nnames		4954817	0					
ANR	4954970	RelationalExpression	m -> type < file_nnames		4954817	0		<			
ANR	4954971	PtrMemberAccess	m -> type		4954817	0					
ANR	4954972	Identifier	m		4954817	0					
ANR	4954973	Identifier	type		4954817	1					
ANR	4954974	Identifier	file_nnames		4954817	1					
ANR	4954975	ArrayIndexing	magic_file_names [ m -> type ]		4954817	1					
ANR	4954976	Identifier	magic_file_names		4954817	0					
ANR	4954977	PtrMemberAccess	m -> type		4954817	1					
ANR	4954978	Identifier	m		4954817	0					
ANR	4954979	Identifier	type		4954817	1					
ANR	4954980	PrimaryExpression	"""*bad*"""		4954817	2					
ANR	4954981	IfStatement	if ( m -> mask_op & FILE_OPINVERSE )		4954817	6					
ANR	4954982	Condition	m -> mask_op & FILE_OPINVERSE	68:5:2620:2646	4954817	0	True				
ANR	4954983	BitAndExpression	m -> mask_op & FILE_OPINVERSE		4954817	0		&			
ANR	4954984	PtrMemberAccess	m -> mask_op		4954817	0					
ANR	4954985	Identifier	m		4954817	0					
ANR	4954986	Identifier	mask_op		4954817	1					
ANR	4954987	Identifier	FILE_OPINVERSE		4954817	1					
ANR	4954988	ExpressionStatement	"( void ) fputc ( '~' , stderr )"	69:2:2651:2676	4954817	1	True				
ANR	4954989	CastExpression	"( void ) fputc ( '~' , stderr )"		4954817	0					
ANR	4954990	CastTarget	void		4954817	0					
ANR	4954991	CallExpression	"fputc ( '~' , stderr )"		4954817	1					
ANR	4954992	Callee	fputc		4954817	0					
ANR	4954993	Identifier	fputc		4954817	0					
ANR	4954994	ArgumentList	'~'		4954817	1					
ANR	4954995	Argument	'~'		4954817	0					
ANR	4954996	PrimaryExpression	'~'		4954817	0					
ANR	4954997	Argument	stderr		4954817	1					
ANR	4954998	Identifier	stderr		4954817	0					
ANR	4954999	IfStatement	if ( MAGIC_IS_STRING ( m -> type ) )		4954817	7					
ANR	4955000	Condition	MAGIC_IS_STRING ( m -> type )	71:5:2684:2707	4954817	0	True				
ANR	4955001	CallExpression	MAGIC_IS_STRING ( m -> type )		4954817	0					
ANR	4955002	Callee	MAGIC_IS_STRING		4954817	0					
ANR	4955003	Identifier	MAGIC_IS_STRING		4954817	0					
ANR	4955004	ArgumentList	m -> type		4954817	1					
ANR	4955005	Argument	m -> type		4954817	0					
ANR	4955006	PtrMemberAccess	m -> type		4954817	0					
ANR	4955007	Identifier	m		4954817	0					
ANR	4955008	Identifier	type		4954817	1					
ANR	4955009	CompoundStatement		25:31:804:804	4954817	1					
ANR	4955010	IfStatement	if ( m -> str_flags )		4954817	0					
ANR	4955011	Condition	m -> str_flags	72:6:2718:2729	4954817	0	True				
ANR	4955012	PtrMemberAccess	m -> str_flags		4954817	0					
ANR	4955013	Identifier	m		4954817	0					
ANR	4955014	Identifier	str_flags		4954817	1					
ANR	4955015	CompoundStatement		26:20:826:826	4954817	1					
ANR	4955016	ExpressionStatement	"( void ) fputc ( '/' , stderr )"	73:3:2737:2762	4954817	0	True				
ANR	4955017	CastExpression	"( void ) fputc ( '/' , stderr )"		4954817	0					
ANR	4955018	CastTarget	void		4954817	0					
ANR	4955019	CallExpression	"fputc ( '/' , stderr )"		4954817	1					
ANR	4955020	Callee	fputc		4954817	0					
ANR	4955021	Identifier	fputc		4954817	0					
ANR	4955022	ArgumentList	'/'		4954817	1					
ANR	4955023	Argument	'/'		4954817	0					
ANR	4955024	PrimaryExpression	'/'		4954817	0					
ANR	4955025	Argument	stderr		4954817	1					
ANR	4955026	Identifier	stderr		4954817	0					
ANR	4955027	IfStatement	if ( m -> str_flags & STRING_COMPACT_BLANK )		4954817	1					
ANR	4955028	Condition	m -> str_flags & STRING_COMPACT_BLANK	74:7:2771:2805	4954817	0	True				
ANR	4955029	BitAndExpression	m -> str_flags & STRING_COMPACT_BLANK		4954817	0		&			
ANR	4955030	PtrMemberAccess	m -> str_flags		4954817	0					
ANR	4955031	Identifier	m		4954817	0					
ANR	4955032	Identifier	str_flags		4954817	1					
ANR	4955033	Identifier	STRING_COMPACT_BLANK		4954817	1					
ANR	4955034	ExpressionStatement	"( void ) fputc ( CHAR_COMPACT_BLANK , stderr )"	75:4:2812:2852	4954817	1	True				
ANR	4955035	CastExpression	"( void ) fputc ( CHAR_COMPACT_BLANK , stderr )"		4954817	0					
ANR	4955036	CastTarget	void		4954817	0					
ANR	4955037	CallExpression	"fputc ( CHAR_COMPACT_BLANK , stderr )"		4954817	1					
ANR	4955038	Callee	fputc		4954817	0					
ANR	4955039	Identifier	fputc		4954817	0					
ANR	4955040	ArgumentList	CHAR_COMPACT_BLANK		4954817	1					
ANR	4955041	Argument	CHAR_COMPACT_BLANK		4954817	0					
ANR	4955042	Identifier	CHAR_COMPACT_BLANK		4954817	0					
ANR	4955043	Argument	stderr		4954817	1					
ANR	4955044	Identifier	stderr		4954817	0					
ANR	4955045	IfStatement	if ( m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK )		4954817	2					
ANR	4955046	Condition	m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK	76:7:2861:2904	4954817	0	True				
ANR	4955047	BitAndExpression	m -> str_flags & STRING_COMPACT_OPTIONAL_BLANK		4954817	0		&			
ANR	4955048	PtrMemberAccess	m -> str_flags		4954817	0					
ANR	4955049	Identifier	m		4954817	0					
ANR	4955050	Identifier	str_flags		4954817	1					
ANR	4955051	Identifier	STRING_COMPACT_OPTIONAL_BLANK		4954817	1					
ANR	4955052	ExpressionStatement	"( void ) fputc ( CHAR_COMPACT_OPTIONAL_BLANK , stderr )"	77:4:2911:2968	4954817	1	True				
ANR	4955053	CastExpression	"( void ) fputc ( CHAR_COMPACT_OPTIONAL_BLANK , stderr )"		4954817	0					
ANR	4955054	CastTarget	void		4954817	0					
ANR	4955055	CallExpression	"fputc ( CHAR_COMPACT_OPTIONAL_BLANK , stderr )"		4954817	1					
ANR	4955056	Callee	fputc		4954817	0					
ANR	4955057	Identifier	fputc		4954817	0					
ANR	4955058	ArgumentList	CHAR_COMPACT_OPTIONAL_BLANK		4954817	1					
ANR	4955059	Argument	CHAR_COMPACT_OPTIONAL_BLANK		4954817	0					
ANR	4955060	Identifier	CHAR_COMPACT_OPTIONAL_BLANK		4954817	0					
ANR	4955061	Argument	stderr		4954817	1					
ANR	4955062	Identifier	stderr		4954817	0					
ANR	4955063	IfStatement	if ( m -> str_flags & STRING_IGNORE_LOWERCASE )		4954817	3					
ANR	4955064	Condition	m -> str_flags & STRING_IGNORE_LOWERCASE	79:7:2977:3014	4954817	0	True				
ANR	4955065	BitAndExpression	m -> str_flags & STRING_IGNORE_LOWERCASE		4954817	0		&			
ANR	4955066	PtrMemberAccess	m -> str_flags		4954817	0					
ANR	4955067	Identifier	m		4954817	0					
ANR	4955068	Identifier	str_flags		4954817	1					
ANR	4955069	Identifier	STRING_IGNORE_LOWERCASE		4954817	1					
ANR	4955070	ExpressionStatement	"( void ) fputc ( CHAR_IGNORE_LOWERCASE , stderr )"	80:4:3021:3064	4954817	1	True				
ANR	4955071	CastExpression	"( void ) fputc ( CHAR_IGNORE_LOWERCASE , stderr )"		4954817	0					
ANR	4955072	CastTarget	void		4954817	0					
ANR	4955073	CallExpression	"fputc ( CHAR_IGNORE_LOWERCASE , stderr )"		4954817	1					
ANR	4955074	Callee	fputc		4954817	0					
ANR	4955075	Identifier	fputc		4954817	0					
ANR	4955076	ArgumentList	CHAR_IGNORE_LOWERCASE		4954817	1					
ANR	4955077	Argument	CHAR_IGNORE_LOWERCASE		4954817	0					
ANR	4955078	Identifier	CHAR_IGNORE_LOWERCASE		4954817	0					
ANR	4955079	Argument	stderr		4954817	1					
ANR	4955080	Identifier	stderr		4954817	0					
ANR	4955081	IfStatement	if ( m -> str_flags & STRING_IGNORE_UPPERCASE )		4954817	4					
ANR	4955082	Condition	m -> str_flags & STRING_IGNORE_UPPERCASE	81:7:3073:3110	4954817	0	True				
ANR	4955083	BitAndExpression	m -> str_flags & STRING_IGNORE_UPPERCASE		4954817	0		&			
ANR	4955084	PtrMemberAccess	m -> str_flags		4954817	0					
ANR	4955085	Identifier	m		4954817	0					
ANR	4955086	Identifier	str_flags		4954817	1					
ANR	4955087	Identifier	STRING_IGNORE_UPPERCASE		4954817	1					
ANR	4955088	ExpressionStatement	"( void ) fputc ( CHAR_IGNORE_UPPERCASE , stderr )"	82:4:3117:3160	4954817	1	True				
ANR	4955089	CastExpression	"( void ) fputc ( CHAR_IGNORE_UPPERCASE , stderr )"		4954817	0					
ANR	4955090	CastTarget	void		4954817	0					
ANR	4955091	CallExpression	"fputc ( CHAR_IGNORE_UPPERCASE , stderr )"		4954817	1					
ANR	4955092	Callee	fputc		4954817	0					
ANR	4955093	Identifier	fputc		4954817	0					
ANR	4955094	ArgumentList	CHAR_IGNORE_UPPERCASE		4954817	1					
ANR	4955095	Argument	CHAR_IGNORE_UPPERCASE		4954817	0					
ANR	4955096	Identifier	CHAR_IGNORE_UPPERCASE		4954817	0					
ANR	4955097	Argument	stderr		4954817	1					
ANR	4955098	Identifier	stderr		4954817	0					
ANR	4955099	IfStatement	if ( m -> str_flags & REGEX_OFFSET_START )		4954817	5					
ANR	4955100	Condition	m -> str_flags & REGEX_OFFSET_START	83:7:3169:3201	4954817	0	True				
ANR	4955101	BitAndExpression	m -> str_flags & REGEX_OFFSET_START		4954817	0		&			
ANR	4955102	PtrMemberAccess	m -> str_flags		4954817	0					
ANR	4955103	Identifier	m		4954817	0					
ANR	4955104	Identifier	str_flags		4954817	1					
ANR	4955105	Identifier	REGEX_OFFSET_START		4954817	1					
ANR	4955106	ExpressionStatement	"( void ) fputc ( CHAR_REGEX_OFFSET_START , stderr )"	84:4:3208:3253	4954817	1	True				
ANR	4955107	CastExpression	"( void ) fputc ( CHAR_REGEX_OFFSET_START , stderr )"		4954817	0					
ANR	4955108	CastTarget	void		4954817	0					
ANR	4955109	CallExpression	"fputc ( CHAR_REGEX_OFFSET_START , stderr )"		4954817	1					
ANR	4955110	Callee	fputc		4954817	0					
ANR	4955111	Identifier	fputc		4954817	0					
ANR	4955112	ArgumentList	CHAR_REGEX_OFFSET_START		4954817	1					
ANR	4955113	Argument	CHAR_REGEX_OFFSET_START		4954817	0					
ANR	4955114	Identifier	CHAR_REGEX_OFFSET_START		4954817	0					
ANR	4955115	Argument	stderr		4954817	1					
ANR	4955116	Identifier	stderr		4954817	0					
ANR	4955117	IfStatement	if ( m -> str_range )		4954817	1					
ANR	4955118	Condition	m -> str_range	86:6:3265:3276	4954817	0	True				
ANR	4955119	PtrMemberAccess	m -> str_range		4954817	0					
ANR	4955120	Identifier	m		4954817	0					
ANR	4955121	Identifier	str_range		4954817	1					
ANR	4955122	ExpressionStatement	"( void ) eprintf ( ""/%u"" , m -> str_range )"	87:3:3282:3318	4954817	1	True				
ANR	4955123	CastExpression	"( void ) eprintf ( ""/%u"" , m -> str_range )"		4954817	0					
ANR	4955124	CastTarget	void		4954817	0					
ANR	4955125	CallExpression	"eprintf ( ""/%u"" , m -> str_range )"		4954817	1					
ANR	4955126	Callee	eprintf		4954817	0					
ANR	4955127	Identifier	eprintf		4954817	0					
ANR	4955128	ArgumentList	"""/%u"""		4954817	1					
ANR	4955129	Argument	"""/%u"""		4954817	0					
ANR	4955130	PrimaryExpression	"""/%u"""		4954817	0					
ANR	4955131	Argument	m -> str_range		4954817	1					
ANR	4955132	PtrMemberAccess	m -> str_range		4954817	0					
ANR	4955133	Identifier	m		4954817	0					
ANR	4955134	Identifier	str_range		4954817	1					
ANR	4955135	ElseStatement	else		4954817	0					
ANR	4955136	CompoundStatement		43:6:1423:1423	4954817	0					
ANR	4955137	IfStatement	if ( ( m -> mask_op & FILE_OPS_MASK ) < SZOF ( optyp ) )		4954817	0					
ANR	4955138	Condition	( m -> mask_op & FILE_OPS_MASK ) < SZOF ( optyp )	90:6:3337:3378	4954817	0	True				
ANR	4955139	RelationalExpression	( m -> mask_op & FILE_OPS_MASK ) < SZOF ( optyp )		4954817	0		<			
ANR	4955140	BitAndExpression	m -> mask_op & FILE_OPS_MASK		4954817	0		&			
ANR	4955141	PtrMemberAccess	m -> mask_op		4954817	0					
ANR	4955142	Identifier	m		4954817	0					
ANR	4955143	Identifier	mask_op		4954817	1					
ANR	4955144	Identifier	FILE_OPS_MASK		4954817	1					
ANR	4955145	CallExpression	SZOF ( optyp )		4954817	1					
ANR	4955146	Callee	SZOF		4954817	0					
ANR	4955147	Identifier	SZOF		4954817	0					
ANR	4955148	ArgumentList	optyp		4954817	1					
ANR	4955149	Argument	optyp		4954817	0					
ANR	4955150	Identifier	optyp		4954817	0					
ANR	4955151	ExpressionStatement	"( void ) fputc ( optyp [ m -> mask_op & FILE_OPS_MASK ] , stderr )"	91:3:3384:3439	4954817	1	True				
ANR	4955152	CastExpression	"( void ) fputc ( optyp [ m -> mask_op & FILE_OPS_MASK ] , stderr )"		4954817	0					
ANR	4955153	CastTarget	void		4954817	0					
ANR	4955154	CallExpression	"fputc ( optyp [ m -> mask_op & FILE_OPS_MASK ] , stderr )"		4954817	1					
ANR	4955155	Callee	fputc		4954817	0					
ANR	4955156	Identifier	fputc		4954817	0					
ANR	4955157	ArgumentList	optyp [ m -> mask_op & FILE_OPS_MASK ]		4954817	1					
ANR	4955158	Argument	optyp [ m -> mask_op & FILE_OPS_MASK ]		4954817	0					
ANR	4955159	ArrayIndexing	optyp [ m -> mask_op & FILE_OPS_MASK ]		4954817	0					
ANR	4955160	Identifier	optyp		4954817	0					
ANR	4955161	BitAndExpression	m -> mask_op & FILE_OPS_MASK		4954817	1		&			
ANR	4955162	PtrMemberAccess	m -> mask_op		4954817	0					
ANR	4955163	Identifier	m		4954817	0					
ANR	4955164	Identifier	mask_op		4954817	1					
ANR	4955165	Identifier	FILE_OPS_MASK		4954817	1					
ANR	4955166	Argument	stderr		4954817	1					
ANR	4955167	Identifier	stderr		4954817	0					
ANR	4955168	ElseStatement	else		4954817	0					
ANR	4955169	ExpressionStatement	"( void ) fputc ( '?' , stderr )"	93:3:3451:3476	4954817	0	True				
ANR	4955170	CastExpression	"( void ) fputc ( '?' , stderr )"		4954817	0					
ANR	4955171	CastTarget	void		4954817	0					
ANR	4955172	CallExpression	"fputc ( '?' , stderr )"		4954817	1					
ANR	4955173	Callee	fputc		4954817	0					
ANR	4955174	Identifier	fputc		4954817	0					
ANR	4955175	ArgumentList	'?'		4954817	1					
ANR	4955176	Argument	'?'		4954817	0					
ANR	4955177	PrimaryExpression	'?'		4954817	0					
ANR	4955178	Argument	stderr		4954817	1					
ANR	4955179	Identifier	stderr		4954817	0					
ANR	4955180	IfStatement	if ( m -> num_mask )		4954817	1					
ANR	4955181	Condition	m -> num_mask	95:6:3485:3495	4954817	0	True				
ANR	4955182	PtrMemberAccess	m -> num_mask		4954817	0					
ANR	4955183	Identifier	m		4954817	0					
ANR	4955184	Identifier	num_mask		4954817	1					
ANR	4955185	Statement	(	96:3:3501:3501	4954817	1	True				
ANR	4955186	Statement	void	96:4:3502:3505	4954817	2	True				
ANR	4955187	Statement	)	96:8:3506:3506	4954817	3	True				
ANR	4955188	Statement	eprintf	96:10:3508:3514	4954817	4	True				
ANR	4955189	Statement	(	96:18:3516:3516	4954817	5	True				
ANR	4955190	Statement	"""%08"""	96:19:3517:3521	4954817	6	True				
ANR	4955191	Statement	PFMT64x	96:24:3522:3528	4954817	7	True				
ANR	4955192	Statement	","	96:31:3529:3529	4954817	8	True				
ANR	4955193	Statement	(	96:33:3531:3531	4954817	9	True				
ANR	4955194	Statement	ut64	96:34:3532:3535	4954817	10	True				
ANR	4955195	Statement	)	96:38:3536:3536	4954817	11	True				
ANR	4955196	Statement	m	96:39:3537:3537	4954817	12	True				
ANR	4955197	Statement	->	96:40:3538:3539	4954817	13	True				
ANR	4955198	Statement	num_mask	96:42:3540:3547	4954817	14	True				
ANR	4955199	Statement	)	96:50:3548:3548	4954817	15	True				
ANR	4955200	ExpressionStatement		96:51:3549:3549	4954817	16	True				
ANR	4955201	ExpressionStatement	"( void ) eprintf ( "",%c"" , m -> reln )"	98:1:3555:3586	4954817	8	True				
ANR	4955202	CastExpression	"( void ) eprintf ( "",%c"" , m -> reln )"		4954817	0					
ANR	4955203	CastTarget	void		4954817	0					
ANR	4955204	CallExpression	"eprintf ( "",%c"" , m -> reln )"		4954817	1					
ANR	4955205	Callee	eprintf		4954817	0					
ANR	4955206	Identifier	eprintf		4954817	0					
ANR	4955207	ArgumentList	""",%c"""		4954817	1					
ANR	4955208	Argument	""",%c"""		4954817	0					
ANR	4955209	PrimaryExpression	""",%c"""		4954817	0					
ANR	4955210	Argument	m -> reln		4954817	1					
ANR	4955211	PtrMemberAccess	m -> reln		4954817	0					
ANR	4955212	Identifier	m		4954817	0					
ANR	4955213	Identifier	reln		4954817	1					
ANR	4955214	IfStatement	if ( m -> reln != 'x' )		4954817	9					
ANR	4955215	Condition	m -> reln != 'x'	100:5:3594:3607	4954817	0	True				
ANR	4955216	EqualityExpression	m -> reln != 'x'		4954817	0		!=			
ANR	4955217	PtrMemberAccess	m -> reln		4954817	0					
ANR	4955218	Identifier	m		4954817	0					
ANR	4955219	Identifier	reln		4954817	1					
ANR	4955220	PrimaryExpression	'x'		4954817	1					
ANR	4955221	CompoundStatement		54:21:1704:1704	4954817	1					
ANR	4955222	SwitchStatement	switch ( m -> type )		4954817	0					
ANR	4955223	Condition	m -> type	101:10:3622:3628	4954817	0	True				
ANR	4955224	PtrMemberAccess	m -> type		4954817	0					
ANR	4955225	Identifier	m		4954817	0					
ANR	4955226	Identifier	type		4954817	1					
ANR	4955227	CompoundStatement		55:19:1725:1725	4954817	1					
ANR	4955228	Label	case FILE_BYTE :	102:2:3635:3649	4954817	0	True				
ANR	4955229	Identifier	FILE_BYTE		4954817	0					
ANR	4955230	Label	case FILE_SHORT :	103:2:3653:3668	4954817	1	True				
ANR	4955231	Identifier	FILE_SHORT		4954817	0					
ANR	4955232	Label	case FILE_LONG :	104:2:3672:3686	4954817	2	True				
ANR	4955233	Identifier	FILE_LONG		4954817	0					
ANR	4955234	Label	case FILE_LESHORT :	105:2:3690:3707	4954817	3	True				
ANR	4955235	Identifier	FILE_LESHORT		4954817	0					
ANR	4955236	Label	case FILE_LELONG :	106:2:3711:3727	4954817	4	True				
ANR	4955237	Identifier	FILE_LELONG		4954817	0					
ANR	4955238	Label	case FILE_MELONG :	107:2:3731:3747	4954817	5	True				
ANR	4955239	Identifier	FILE_MELONG		4954817	0					
ANR	4955240	Label	case FILE_BESHORT :	108:2:3751:3768	4954817	6	True				
ANR	4955241	Identifier	FILE_BESHORT		4954817	0					
ANR	4955242	Label	case FILE_BELONG :	109:2:3772:3788	4954817	7	True				
ANR	4955243	Identifier	FILE_BELONG		4954817	0					
ANR	4955244	ExpressionStatement	"( void ) eprintf ( ""%d"" , m -> value . l )"	110:3:3793:3826	4954817	8	True				
ANR	4955245	CastExpression	"( void ) eprintf ( ""%d"" , m -> value . l )"		4954817	0					
ANR	4955246	CastTarget	void		4954817	0					
ANR	4955247	CallExpression	"eprintf ( ""%d"" , m -> value . l )"		4954817	1					
ANR	4955248	Callee	eprintf		4954817	0					
ANR	4955249	Identifier	eprintf		4954817	0					
ANR	4955250	ArgumentList	"""%d"""		4954817	1					
ANR	4955251	Argument	"""%d"""		4954817	0					
ANR	4955252	PrimaryExpression	"""%d"""		4954817	0					
ANR	4955253	Argument	m -> value . l		4954817	1					
ANR	4955254	MemberAccess	m -> value . l		4954817	0					
ANR	4955255	PtrMemberAccess	m -> value		4954817	0					
ANR	4955256	Identifier	m		4954817	0					
ANR	4955257	Identifier	value		4954817	1					
ANR	4955258	Identifier	l		4954817	1					
ANR	4955259	BreakStatement	break ;	111:3:3831:3836	4954817	9	True				
ANR	4955260	Label	case FILE_BEQUAD :	112:2:3840:3856	4954817	10	True				
ANR	4955261	Identifier	FILE_BEQUAD		4954817	0					
ANR	4955262	Label	case FILE_LEQUAD :	113:2:3860:3876	4954817	11	True				
ANR	4955263	Identifier	FILE_LEQUAD		4954817	0					
ANR	4955264	Label	case FILE_QUAD :	114:2:3880:3894	4954817	12	True				
ANR	4955265	Identifier	FILE_QUAD		4954817	0					
ANR	4955266	Statement	(	115:3:3899:3899	4954817	13	True				
ANR	4955267	Statement	void	115:4:3900:3903	4954817	14	True				
ANR	4955268	Statement	)	115:8:3904:3904	4954817	15	True				
ANR	4955269	Statement	eprintf	115:10:3906:3912	4954817	16	True				
ANR	4955270	Statement	(	115:18:3914:3914	4954817	17	True				
ANR	4955271	Statement	"""%"""	115:19:3915:3917	4954817	18	True				
ANR	4955272	Statement	PFMT64d	115:22:3918:3924	4954817	19	True				
ANR	4955273	Statement	","	115:29:3925:3925	4954817	20	True				
ANR	4955274	Statement	(	115:31:3927:3927	4954817	21	True				
ANR	4955275	Statement	ut64	115:32:3928:3931	4954817	22	True				
ANR	4955276	Statement	)	115:36:3932:3932	4954817	23	True				
ANR	4955277	Statement	m	115:37:3933:3933	4954817	24	True				
ANR	4955278	Statement	->	115:38:3934:3935	4954817	25	True				
ANR	4955279	Statement	value	115:40:3936:3940	4954817	26	True				
ANR	4955280	Statement	.	115:45:3941:3941	4954817	27	True				
ANR	4955281	Statement	q	115:46:3942:3942	4954817	28	True				
ANR	4955282	Statement	)	115:47:3943:3943	4954817	29	True				
ANR	4955283	ExpressionStatement		115:48:3944:3944	4954817	30	True				
ANR	4955284	BreakStatement	break ;	116:3:3949:3954	4954817	31	True				
ANR	4955285	Label	case FILE_PSTRING :	117:2:3958:3975	4954817	32	True				
ANR	4955286	Identifier	FILE_PSTRING		4954817	0					
ANR	4955287	Label	case FILE_STRING :	118:2:3979:3995	4954817	33	True				
ANR	4955288	Identifier	FILE_STRING		4954817	0					
ANR	4955289	Label	case FILE_REGEX :	119:2:3999:4014	4954817	34	True				
ANR	4955290	Identifier	FILE_REGEX		4954817	0					
ANR	4955291	Label	case FILE_BESTRING16 :	120:2:4018:4038	4954817	35	True				
ANR	4955292	Identifier	FILE_BESTRING16		4954817	0					
ANR	4955293	Label	case FILE_LESTRING16 :	121:2:4042:4062	4954817	36	True				
ANR	4955294	Identifier	FILE_LESTRING16		4954817	0					
ANR	4955295	Label	case FILE_SEARCH :	122:2:4066:4082	4954817	37	True				
ANR	4955296	Identifier	FILE_SEARCH		4954817	0					
ANR	4955297	ExpressionStatement	"file_showstr ( stderr , m -> value . s , ( size_t ) m -> vallen )"	123:3:4087:4138	4954817	38	True				
ANR	4955298	CallExpression	"file_showstr ( stderr , m -> value . s , ( size_t ) m -> vallen )"		4954817	0					
ANR	4955299	Callee	file_showstr		4954817	0					
ANR	4955300	Identifier	file_showstr		4954817	0					
ANR	4955301	ArgumentList	stderr		4954817	1					
ANR	4955302	Argument	stderr		4954817	0					
ANR	4955303	Identifier	stderr		4954817	0					
ANR	4955304	Argument	m -> value . s		4954817	1					
ANR	4955305	MemberAccess	m -> value . s		4954817	0					
ANR	4955306	PtrMemberAccess	m -> value		4954817	0					
ANR	4955307	Identifier	m		4954817	0					
ANR	4955308	Identifier	value		4954817	1					
ANR	4955309	Identifier	s		4954817	1					
ANR	4955310	Argument	( size_t ) m -> vallen		4954817	2					
ANR	4955311	CastExpression	( size_t ) m -> vallen		4954817	0					
ANR	4955312	CastTarget	size_t		4954817	0					
ANR	4955313	PtrMemberAccess	m -> vallen		4954817	1					
ANR	4955314	Identifier	m		4954817	0					
ANR	4955315	Identifier	vallen		4954817	1					
ANR	4955316	BreakStatement	break ;	124:3:4143:4148	4954817	39	True				
ANR	4955317	Label	case FILE_DATE :	125:2:4152:4166	4954817	40	True				
ANR	4955318	Identifier	FILE_DATE		4954817	0					
ANR	4955319	Label	case FILE_LEDATE :	126:2:4170:4186	4954817	41	True				
ANR	4955320	Identifier	FILE_LEDATE		4954817	0					
ANR	4955321	Label	case FILE_BEDATE :	127:2:4190:4206	4954817	42	True				
ANR	4955322	Identifier	FILE_BEDATE		4954817	0					
ANR	4955323	Label	case FILE_MEDATE :	128:2:4210:4226	4954817	43	True				
ANR	4955324	Identifier	FILE_MEDATE		4954817	0					
ANR	4955325	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 1 ) )"	129:3:4231:4288	4954817	44	True				
ANR	4955326	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 1 ) )"		4954817	0					
ANR	4955327	CastTarget	void		4954817	0					
ANR	4955328	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 1 ) )"		4954817	1					
ANR	4955329	Callee	eprintf		4954817	0					
ANR	4955330	Identifier	eprintf		4954817	0					
ANR	4955331	ArgumentList	"""%s,"""		4954817	1					
ANR	4955332	Argument	"""%s,"""		4954817	0					
ANR	4955333	PrimaryExpression	"""%s,"""		4954817	0					
ANR	4955334	Argument	"file_fmttime ( m -> value . l , 1 )"		4954817	1					
ANR	4955335	CallExpression	"file_fmttime ( m -> value . l , 1 )"		4954817	0					
ANR	4955336	Callee	file_fmttime		4954817	0					
ANR	4955337	Identifier	file_fmttime		4954817	0					
ANR	4955338	ArgumentList	m -> value . l		4954817	1					
ANR	4955339	Argument	m -> value . l		4954817	0					
ANR	4955340	MemberAccess	m -> value . l		4954817	0					
ANR	4955341	PtrMemberAccess	m -> value		4954817	0					
ANR	4955342	Identifier	m		4954817	0					
ANR	4955343	Identifier	value		4954817	1					
ANR	4955344	Identifier	l		4954817	1					
ANR	4955345	Argument	1		4954817	1					
ANR	4955346	PrimaryExpression	1		4954817	0					
ANR	4955347	BreakStatement	break ;	131:3:4293:4298	4954817	45	True				
ANR	4955348	Label	case FILE_LDATE :	132:2:4302:4317	4954817	46	True				
ANR	4955349	Identifier	FILE_LDATE		4954817	0					
ANR	4955350	Label	case FILE_LELDATE :	133:2:4321:4338	4954817	47	True				
ANR	4955351	Identifier	FILE_LELDATE		4954817	0					
ANR	4955352	Label	case FILE_BELDATE :	134:2:4342:4359	4954817	48	True				
ANR	4955353	Identifier	FILE_BELDATE		4954817	0					
ANR	4955354	Label	case FILE_MELDATE :	135:2:4363:4380	4954817	49	True				
ANR	4955355	Identifier	FILE_MELDATE		4954817	0					
ANR	4955356	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 0 ) )"	136:3:4385:4442	4954817	50	True				
ANR	4955357	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 0 ) )"		4954817	0					
ANR	4955358	CastTarget	void		4954817	0					
ANR	4955359	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( m -> value . l , 0 ) )"		4954817	1					
ANR	4955360	Callee	eprintf		4954817	0					
ANR	4955361	Identifier	eprintf		4954817	0					
ANR	4955362	ArgumentList	"""%s,"""		4954817	1					
ANR	4955363	Argument	"""%s,"""		4954817	0					
ANR	4955364	PrimaryExpression	"""%s,"""		4954817	0					
ANR	4955365	Argument	"file_fmttime ( m -> value . l , 0 )"		4954817	1					
ANR	4955366	CallExpression	"file_fmttime ( m -> value . l , 0 )"		4954817	0					
ANR	4955367	Callee	file_fmttime		4954817	0					
ANR	4955368	Identifier	file_fmttime		4954817	0					
ANR	4955369	ArgumentList	m -> value . l		4954817	1					
ANR	4955370	Argument	m -> value . l		4954817	0					
ANR	4955371	MemberAccess	m -> value . l		4954817	0					
ANR	4955372	PtrMemberAccess	m -> value		4954817	0					
ANR	4955373	Identifier	m		4954817	0					
ANR	4955374	Identifier	value		4954817	1					
ANR	4955375	Identifier	l		4954817	1					
ANR	4955376	Argument	0		4954817	1					
ANR	4955377	PrimaryExpression	0		4954817	0					
ANR	4955378	BreakStatement	break ;	138:3:4447:4452	4954817	51	True				
ANR	4955379	Label	case FILE_QDATE :	139:2:4456:4471	4954817	52	True				
ANR	4955380	Identifier	FILE_QDATE		4954817	0					
ANR	4955381	Label	case FILE_LEQDATE :	140:2:4475:4492	4954817	53	True				
ANR	4955382	Identifier	FILE_LEQDATE		4954817	0					
ANR	4955383	Label	case FILE_BEQDATE :	141:2:4496:4513	4954817	54	True				
ANR	4955384	Identifier	FILE_BEQDATE		4954817	0					
ANR	4955385	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 1 ) )"	142:3:4518:4581	4954817	55	True				
ANR	4955386	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 1 ) )"		4954817	0					
ANR	4955387	CastTarget	void		4954817	0					
ANR	4955388	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 1 ) )"		4954817	1					
ANR	4955389	Callee	eprintf		4954817	0					
ANR	4955390	Identifier	eprintf		4954817	0					
ANR	4955391	ArgumentList	"""%s,"""		4954817	1					
ANR	4955392	Argument	"""%s,"""		4954817	0					
ANR	4955393	PrimaryExpression	"""%s,"""		4954817	0					
ANR	4955394	Argument	"file_fmttime ( ( ut32 ) m -> value . q , 1 )"		4954817	1					
ANR	4955395	CallExpression	"file_fmttime ( ( ut32 ) m -> value . q , 1 )"		4954817	0					
ANR	4955396	Callee	file_fmttime		4954817	0					
ANR	4955397	Identifier	file_fmttime		4954817	0					
ANR	4955398	ArgumentList	( ut32 ) m -> value . q		4954817	1					
ANR	4955399	Argument	( ut32 ) m -> value . q		4954817	0					
ANR	4955400	CastExpression	( ut32 ) m -> value . q		4954817	0					
ANR	4955401	CastTarget	ut32		4954817	0					
ANR	4955402	MemberAccess	m -> value . q		4954817	1					
ANR	4955403	PtrMemberAccess	m -> value		4954817	0					
ANR	4955404	Identifier	m		4954817	0					
ANR	4955405	Identifier	value		4954817	1					
ANR	4955406	Identifier	q		4954817	1					
ANR	4955407	Argument	1		4954817	1					
ANR	4955408	PrimaryExpression	1		4954817	0					
ANR	4955409	BreakStatement	break ;	144:3:4586:4591	4954817	56	True				
ANR	4955410	Label	case FILE_QLDATE :	145:2:4595:4611	4954817	57	True				
ANR	4955411	Identifier	FILE_QLDATE		4954817	0					
ANR	4955412	Label	case FILE_LEQLDATE :	146:2:4615:4633	4954817	58	True				
ANR	4955413	Identifier	FILE_LEQLDATE		4954817	0					
ANR	4955414	Label	case FILE_BEQLDATE :	147:2:4637:4655	4954817	59	True				
ANR	4955415	Identifier	FILE_BEQLDATE		4954817	0					
ANR	4955416	ExpressionStatement	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 0 ) )"	148:3:4660:4723	4954817	60	True				
ANR	4955417	CastExpression	"( void ) eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 0 ) )"		4954817	0					
ANR	4955418	CastTarget	void		4954817	0					
ANR	4955419	CallExpression	"eprintf ( ""%s,"" , file_fmttime ( ( ut32 ) m -> value . q , 0 ) )"		4954817	1					
ANR	4955420	Callee	eprintf		4954817	0					
ANR	4955421	Identifier	eprintf		4954817	0					
ANR	4955422	ArgumentList	"""%s,"""		4954817	1					
ANR	4955423	Argument	"""%s,"""		4954817	0					
ANR	4955424	PrimaryExpression	"""%s,"""		4954817	0					
ANR	4955425	Argument	"file_fmttime ( ( ut32 ) m -> value . q , 0 )"		4954817	1					
ANR	4955426	CallExpression	"file_fmttime ( ( ut32 ) m -> value . q , 0 )"		4954817	0					
ANR	4955427	Callee	file_fmttime		4954817	0					
ANR	4955428	Identifier	file_fmttime		4954817	0					
ANR	4955429	ArgumentList	( ut32 ) m -> value . q		4954817	1					
ANR	4955430	Argument	( ut32 ) m -> value . q		4954817	0					
ANR	4955431	CastExpression	( ut32 ) m -> value . q		4954817	0					
ANR	4955432	CastTarget	ut32		4954817	0					
ANR	4955433	MemberAccess	m -> value . q		4954817	1					
ANR	4955434	PtrMemberAccess	m -> value		4954817	0					
ANR	4955435	Identifier	m		4954817	0					
ANR	4955436	Identifier	value		4954817	1					
ANR	4955437	Identifier	q		4954817	1					
ANR	4955438	Argument	0		4954817	1					
ANR	4955439	PrimaryExpression	0		4954817	0					
ANR	4955440	BreakStatement	break ;	150:3:4728:4733	4954817	61	True				
ANR	4955441	Label	case FILE_FLOAT :	151:2:4737:4752	4954817	62	True				
ANR	4955442	Identifier	FILE_FLOAT		4954817	0					
ANR	4955443	Label	case FILE_BEFLOAT :	152:2:4756:4773	4954817	63	True				
ANR	4955444	Identifier	FILE_BEFLOAT		4954817	0					
ANR	4955445	Label	case FILE_LEFLOAT :	153:2:4777:4794	4954817	64	True				
ANR	4955446	Identifier	FILE_LEFLOAT		4954817	0					
ANR	4955447	ExpressionStatement	"( void ) eprintf ( ""%G"" , m -> value . f )"	154:3:4799:4832	4954817	65	True				
ANR	4955448	CastExpression	"( void ) eprintf ( ""%G"" , m -> value . f )"		4954817	0					
ANR	4955449	CastTarget	void		4954817	0					
ANR	4955450	CallExpression	"eprintf ( ""%G"" , m -> value . f )"		4954817	1					
ANR	4955451	Callee	eprintf		4954817	0					
ANR	4955452	Identifier	eprintf		4954817	0					
ANR	4955453	ArgumentList	"""%G"""		4954817	1					
ANR	4955454	Argument	"""%G"""		4954817	0					
ANR	4955455	PrimaryExpression	"""%G"""		4954817	0					
ANR	4955456	Argument	m -> value . f		4954817	1					
ANR	4955457	MemberAccess	m -> value . f		4954817	0					
ANR	4955458	PtrMemberAccess	m -> value		4954817	0					
ANR	4955459	Identifier	m		4954817	0					
ANR	4955460	Identifier	value		4954817	1					
ANR	4955461	Identifier	f		4954817	1					
ANR	4955462	BreakStatement	break ;	155:3:4837:4842	4954817	66	True				
ANR	4955463	Label	case FILE_DOUBLE :	156:2:4846:4862	4954817	67	True				
ANR	4955464	Identifier	FILE_DOUBLE		4954817	0					
ANR	4955465	Label	case FILE_BEDOUBLE :	157:2:4866:4884	4954817	68	True				
ANR	4955466	Identifier	FILE_BEDOUBLE		4954817	0					
ANR	4955467	Label	case FILE_LEDOUBLE :	158:2:4888:4906	4954817	69	True				
ANR	4955468	Identifier	FILE_LEDOUBLE		4954817	0					
ANR	4955469	ExpressionStatement	"( void ) eprintf ( ""%G"" , m -> value . d )"	159:3:4911:4944	4954817	70	True				
ANR	4955470	CastExpression	"( void ) eprintf ( ""%G"" , m -> value . d )"		4954817	0					
ANR	4955471	CastTarget	void		4954817	0					
ANR	4955472	CallExpression	"eprintf ( ""%G"" , m -> value . d )"		4954817	1					
ANR	4955473	Callee	eprintf		4954817	0					
ANR	4955474	Identifier	eprintf		4954817	0					
ANR	4955475	ArgumentList	"""%G"""		4954817	1					
ANR	4955476	Argument	"""%G"""		4954817	0					
ANR	4955477	PrimaryExpression	"""%G"""		4954817	0					
ANR	4955478	Argument	m -> value . d		4954817	1					
ANR	4955479	MemberAccess	m -> value . d		4954817	0					
ANR	4955480	PtrMemberAccess	m -> value		4954817	0					
ANR	4955481	Identifier	m		4954817	0					
ANR	4955482	Identifier	value		4954817	1					
ANR	4955483	Identifier	d		4954817	1					
ANR	4955484	BreakStatement	break ;	160:3:4949:4954	4954817	71	True				
ANR	4955485	Label	case FILE_DEFAULT :	161:2:4958:4975	4954817	72	True				
ANR	4955486	Identifier	FILE_DEFAULT		4954817	0					
ANR	4955487	BreakStatement	break ;	163:3:5013:5018	4954817	73	True				
ANR	4955488	Label	default :	164:2:5022:5029	4954817	74	True				
ANR	4955489	Identifier	default		4954817	0					
ANR	4955490	ExpressionStatement	"( void ) fputs ( ""*bad*"" , stderr )"	165:3:5034:5063	4954817	75	True				
ANR	4955491	CastExpression	"( void ) fputs ( ""*bad*"" , stderr )"		4954817	0					
ANR	4955492	CastTarget	void		4954817	0					
ANR	4955493	CallExpression	"fputs ( ""*bad*"" , stderr )"		4954817	1					
ANR	4955494	Callee	fputs		4954817	0					
ANR	4955495	Identifier	fputs		4954817	0					
ANR	4955496	ArgumentList	"""*bad*"""		4954817	1					
ANR	4955497	Argument	"""*bad*"""		4954817	0					
ANR	4955498	PrimaryExpression	"""*bad*"""		4954817	0					
ANR	4955499	Argument	stderr		4954817	1					
ANR	4955500	Identifier	stderr		4954817	0					
ANR	4955501	BreakStatement	break ;	166:3:5068:5073	4954817	76	True				
ANR	4955502	ExpressionStatement	"( void ) eprintf ( "",\\""%s\\""]\\n"" , m -> desc )"	169:1:5083:5121	4954817	10	True				
ANR	4955503	CastExpression	"( void ) eprintf ( "",\\""%s\\""]\\n"" , m -> desc )"		4954817	0					
ANR	4955504	CastTarget	void		4954817	0					
ANR	4955505	CallExpression	"eprintf ( "",\\""%s\\""]\\n"" , m -> desc )"		4954817	1					
ANR	4955506	Callee	eprintf		4954817	0					
ANR	4955507	Identifier	eprintf		4954817	0					
ANR	4955508	ArgumentList	""",\\""%s\\""]\\n"""		4954817	1					
ANR	4955509	Argument	""",\\""%s\\""]\\n"""		4954817	0					
ANR	4955510	PrimaryExpression	""",\\""%s\\""]\\n"""		4954817	0					
ANR	4955511	Argument	m -> desc		4954817	1					
ANR	4955512	PtrMemberAccess	m -> desc		4954817	0					
ANR	4955513	Identifier	m		4954817	0					
ANR	4955514	Identifier	desc		4954817	1					
ANR	4955515	ReturnType	void		4954817	1					
ANR	4955516	Identifier	file_mdump		4954817	2					
ANR	4955517	ParameterList	struct r_magic * m		4954817	3					
ANR	4955518	Parameter	struct r_magic * m	47:16:1886:1902	4954817	0	True				
ANR	4955519	ParameterType	struct r_magic *		4954817	0					
ANR	4955520	Identifier	m		4954817	1					
ANR	4955521	CFGEntryNode	ENTRY		4954817		True				
ANR	4955522	CFGExitNode	EXIT		4954817		True				
ANR	4955523	Symbol	INDIR		4954817						
ANR	4955524	Symbol	m -> in_offset		4954817						
ANR	4955525	Symbol	REGEX_OFFSET_START		4954817						
ANR	4955526	Symbol	STRING_COMPACT_OPTIONAL_BLANK		4954817						
ANR	4955527	Symbol	m -> num_mask		4954817						
ANR	4955528	Symbol	m -> type		4954817						
ANR	4955529	Symbol	m -> desc		4954817						
ANR	4955530	Symbol	* m -> type		4954817						
ANR	4955531	Symbol	m -> in_op		4954817						
ANR	4955532	Symbol	CHAR_REGEX_OFFSET_START		4954817						
ANR	4955533	Symbol	* optyp		4954817						
ANR	4955534	Symbol	m -> value . s		4954817						
ANR	4955535	Symbol	m -> value . q		4954817						
ANR	4955536	Symbol	m -> str_range		4954817						
ANR	4955537	Symbol	stderr		4954817						
ANR	4955538	Symbol	FILE_OPS		4954817						
ANR	4955539	Symbol	FILE_OPINVERSE		4954817						
ANR	4955540	Symbol	m -> value . l		4954817						
ANR	4955541	Symbol	m -> value . f		4954817						
ANR	4955542	Symbol	* magic_file_names		4954817						
ANR	4955543	Symbol	m -> value . d		4954817						
ANR	4955544	Symbol	m -> lineno		4954817						
ANR	4955545	Symbol	m -> cont_level		4954817						
ANR	4955546	Symbol	UNSIGNED		4954817						
ANR	4955547	Symbol	m -> flag		4954817						
ANR	4955548	Symbol	m -> str_flags		4954817						
ANR	4955549	Symbol	MAGIC_IS_STRING		4954817						
ANR	4955550	Symbol	m -> in_type		4954817						
ANR	4955551	Symbol	m -> mask_op		4954817						
ANR	4955552	Symbol	m -> reln		4954817						
ANR	4955553	Symbol	SZOF		4954817						
ANR	4955554	Symbol	optyp		4954817						
ANR	4955555	Symbol	* FILE_OPS_MASK		4954817						
ANR	4955556	Symbol	STRING_IGNORE_UPPERCASE		4954817						
ANR	4955557	Symbol	* m -> mask_op		4954817						
ANR	4955558	Symbol	* m -> in_type		4954817						
ANR	4955559	Symbol	magic_file_names		4954817						
ANR	4955560	Symbol	FILE_OPS_MASK		4954817						
ANR	4955561	Symbol	* * m		4954817						
ANR	4955562	Symbol	CHAR_COMPACT_OPTIONAL_BLANK		4954817						
ANR	4955563	Symbol	STRING_IGNORE_LOWERCASE		4954817						
ANR	4955564	Symbol	file_fmttime		4954817						
ANR	4955565	Symbol	m -> value		4954817						
ANR	4955566	Symbol	CHAR_COMPACT_BLANK		4954817						
ANR	4955567	Symbol	file_nnames		4954817						
ANR	4955568	Symbol	CHAR_IGNORE_LOWERCASE		4954817						
ANR	4955569	Symbol	m		4954817						
ANR	4955570	Symbol	* m -> in_op		4954817						
ANR	4955571	Symbol	STRING_COMPACT_BLANK		4954817						
ANR	4955572	Symbol	CHAR_IGNORE_UPPERCASE		4954817						
ANR	4955573	Symbol	m -> offset		4954817						
ANR	4955574	Symbol	* m		4954817						
ANR	4955575	Symbol	m -> vallen		4954817						
ANR	4955576	Function	file_magwarn	174:0:5145:5508							
ANR	4955577	FunctionDef	"file_magwarn (struct r_magic_set * ms , const char * f)"		4955576	0					
ANR	4955578	CompoundStatement		174:62:5207:5508	4955576	0					
ANR	4955579	IdentifierDeclStatement	va_list va ;	175:1:5210:5220	4955576	0	True				
ANR	4955580	IdentifierDecl	va		4955576	0					
ANR	4955581	IdentifierDeclType	va_list		4955576	0					
ANR	4955582	Identifier	va		4955576	1					
ANR	4955583	ExpressionStatement	( void ) fflush ( stdout )	178:1:5271:5292	4955576	1	True				
ANR	4955584	CastExpression	( void ) fflush ( stdout )		4955576	0					
ANR	4955585	CastTarget	void		4955576	0					
ANR	4955586	CallExpression	fflush ( stdout )		4955576	1					
ANR	4955587	Callee	fflush		4955576	0					
ANR	4955588	Identifier	fflush		4955576	0					
ANR	4955589	ArgumentList	stdout		4955576	1					
ANR	4955590	Argument	stdout		4955576	0					
ANR	4955591	Identifier	stdout		4955576	0					
ANR	4955592	IfStatement	if ( ms -> file )		4955576	2					
ANR	4955593	Condition	ms -> file	180:5:5300:5307	4955576	0	True				
ANR	4955594	PtrMemberAccess	ms -> file		4955576	0					
ANR	4955595	Identifier	ms		4955576	0					
ANR	4955596	Identifier	file		4955576	1					
ANR	4955597	ExpressionStatement	"( void ) eprintf ( ""%s, %lu: "" , ms -> file , ( unsigned long ) ms -> line )"	181:2:5312:5381	4955576	1	True				
ANR	4955598	CastExpression	"( void ) eprintf ( ""%s, %lu: "" , ms -> file , ( unsigned long ) ms -> line )"		4955576	0					
ANR	4955599	CastTarget	void		4955576	0					
ANR	4955600	CallExpression	"eprintf ( ""%s, %lu: "" , ms -> file , ( unsigned long ) ms -> line )"		4955576	1					
ANR	4955601	Callee	eprintf		4955576	0					
ANR	4955602	Identifier	eprintf		4955576	0					
ANR	4955603	ArgumentList	"""%s, %lu: """		4955576	1					
ANR	4955604	Argument	"""%s, %lu: """		4955576	0					
ANR	4955605	PrimaryExpression	"""%s, %lu: """		4955576	0					
ANR	4955606	Argument	ms -> file		4955576	1					
ANR	4955607	PtrMemberAccess	ms -> file		4955576	0					
ANR	4955608	Identifier	ms		4955576	0					
ANR	4955609	Identifier	file		4955576	1					
ANR	4955610	Argument	( unsigned long ) ms -> line		4955576	2					
ANR	4955611	CastExpression	( unsigned long ) ms -> line		4955576	0					
ANR	4955612	CastTarget	unsigned long		4955576	0					
ANR	4955613	PtrMemberAccess	ms -> line		4955576	1					
ANR	4955614	Identifier	ms		4955576	0					
ANR	4955615	Identifier	line		4955576	1					
ANR	4955616	ExpressionStatement	"( void ) eprintf ( ""Warning: "" )"	183:1:5384:5412	4955576	3	True				
ANR	4955617	CastExpression	"( void ) eprintf ( ""Warning: "" )"		4955576	0					
ANR	4955618	CastTarget	void		4955576	0					
ANR	4955619	CallExpression	"eprintf ( ""Warning: "" )"		4955576	1					
ANR	4955620	Callee	eprintf		4955576	0					
ANR	4955621	Identifier	eprintf		4955576	0					
ANR	4955622	ArgumentList	"""Warning: """		4955576	1					
ANR	4955623	Argument	"""Warning: """		4955576	0					
ANR	4955624	PrimaryExpression	"""Warning: """		4955576	0					
ANR	4955625	ExpressionStatement	"va_start ( va , f )"	184:1:5415:5430	4955576	4	True				
ANR	4955626	CallExpression	"va_start ( va , f )"		4955576	0					
ANR	4955627	Callee	va_start		4955576	0					
ANR	4955628	Identifier	va_start		4955576	0					
ANR	4955629	ArgumentList	va		4955576	1					
ANR	4955630	Argument	va		4955576	0					
ANR	4955631	Identifier	va		4955576	0					
ANR	4955632	Argument	f		4955576	1					
ANR	4955633	Identifier	f		4955576	0					
ANR	4955634	ExpressionStatement	"( void ) vfprintf ( stderr , f , va )"	185:1:5433:5464	4955576	5	True				
ANR	4955635	CastExpression	"( void ) vfprintf ( stderr , f , va )"		4955576	0					
ANR	4955636	CastTarget	void		4955576	0					
ANR	4955637	CallExpression	"vfprintf ( stderr , f , va )"		4955576	1					
ANR	4955638	Callee	vfprintf		4955576	0					
ANR	4955639	Identifier	vfprintf		4955576	0					
ANR	4955640	ArgumentList	stderr		4955576	1					
ANR	4955641	Argument	stderr		4955576	0					
ANR	4955642	Identifier	stderr		4955576	0					
ANR	4955643	Argument	f		4955576	1					
ANR	4955644	Identifier	f		4955576	0					
ANR	4955645	Argument	va		4955576	2					
ANR	4955646	Identifier	va		4955576	0					
ANR	4955647	ExpressionStatement	va_end ( va )	186:1:5467:5477	4955576	6	True				
ANR	4955648	CallExpression	va_end ( va )		4955576	0					
ANR	4955649	Callee	va_end		4955576	0					
ANR	4955650	Identifier	va_end		4955576	0					
ANR	4955651	ArgumentList	va		4955576	1					
ANR	4955652	Argument	va		4955576	0					
ANR	4955653	Identifier	va		4955576	0					
ANR	4955654	ExpressionStatement	"( void ) fputc ( '\\n' , stderr )"	187:1:5480:5506	4955576	7	True				
ANR	4955655	CastExpression	"( void ) fputc ( '\\n' , stderr )"		4955576	0					
ANR	4955656	CastTarget	void		4955576	0					
ANR	4955657	CallExpression	"fputc ( '\\n' , stderr )"		4955576	1					
ANR	4955658	Callee	fputc		4955576	0					
ANR	4955659	Identifier	fputc		4955576	0					
ANR	4955660	ArgumentList	'\\n'		4955576	1					
ANR	4955661	Argument	'\\n'		4955576	0					
ANR	4955662	PrimaryExpression	'\\n'		4955576	0					
ANR	4955663	Argument	stderr		4955576	1					
ANR	4955664	Identifier	stderr		4955576	0					
ANR	4955665	ReturnType	void		4955576	1					
ANR	4955666	Identifier	file_magwarn		4955576	2					
ANR	4955667	ParameterList	"struct r_magic_set * ms , const char * f"		4955576	3					
ANR	4955668	Parameter	struct r_magic_set * ms	174:18:5163:5184	4955576	0	True				
ANR	4955669	ParameterType	struct r_magic_set *		4955576	0					
ANR	4955670	Identifier	ms		4955576	1					
ANR	4955671	Parameter	const char * f	174:42:5187:5199	4955576	1	True				
ANR	4955672	ParameterType	const char *		4955576	0					
ANR	4955673	Identifier	f		4955576	1					
ANR	4955674	CFGEntryNode	ENTRY		4955576		True				
ANR	4955675	CFGExitNode	EXIT		4955576		True				
ANR	4955676	Symbol	ms -> file		4955576						
ANR	4955677	Symbol	stdout		4955576						
ANR	4955678	Symbol	ms		4955576						
ANR	4955679	Symbol	f		4955576						
ANR	4955680	Symbol	ms -> line		4955576						
ANR	4955681	Symbol	va		4955576						
ANR	4955682	Symbol	stderr		4955576						
ANR	4955683	Symbol	* ms		4955576						
ANR	4955684	Function	file_fmttime	190:0:5511:6170							
ANR	4955685	FunctionDef	"file_fmttime (ut32 v , int local)"		4955684	0					
ANR	4955686	CompoundStatement		190:44:5555:6170	4955684	0					
ANR	4955687	IdentifierDeclStatement	char * pp ;	191:1:5558:5566	4955684	0	True				
ANR	4955688	IdentifierDecl	* pp		4955684	0					
ANR	4955689	IdentifierDeclType	char *		4955684	0					
ANR	4955690	Identifier	pp		4955684	1					
ANR	4955691	IdentifierDeclStatement	time_t t = ( time_t ) v ;	192:1:5569:5589	4955684	1	True				
ANR	4955692	IdentifierDecl	t = ( time_t ) v		4955684	0					
ANR	4955693	IdentifierDeclType	time_t		4955684	0					
ANR	4955694	Identifier	t		4955684	1					
ANR	4955695	AssignmentExpression	t = ( time_t ) v		4955684	2		=			
ANR	4955696	Identifier	t		4955684	0					
ANR	4955697	CastExpression	( time_t ) v		4955684	1					
ANR	4955698	CastTarget	time_t		4955684	0					
ANR	4955699	Identifier	v		4955684	1					
ANR	4955700	IdentifierDeclStatement	struct tm * tm ;	193:1:5592:5605	4955684	2	True				
ANR	4955701	IdentifierDecl	* tm		4955684	0					
ANR	4955702	IdentifierDeclType	struct tm *		4955684	0					
ANR	4955703	Identifier	tm		4955684	1					
ANR	4955704	IdentifierDeclStatement	struct tm timestruct ;	194:1:5608:5628	4955684	3	True				
ANR	4955705	IdentifierDecl	timestruct		4955684	0					
ANR	4955706	IdentifierDeclType	struct tm		4955684	0					
ANR	4955707	Identifier	timestruct		4955684	1					
ANR	4955708	IfStatement	if ( local )		4955684	4					
ANR	4955709	Condition	local	196:5:5636:5640	4955684	0	True				
ANR	4955710	Identifier	local		4955684	0					
ANR	4955711	CompoundStatement		7:12:87:87	4955684	1					
ANR	4955712	ExpressionStatement	pp = ctime ( & t )	197:2:5647:5661	4955684	0	True				
ANR	4955713	AssignmentExpression	pp = ctime ( & t )		4955684	0		=			
ANR	4955714	Identifier	pp		4955684	0					
ANR	4955715	CallExpression	ctime ( & t )		4955684	1					
ANR	4955716	Callee	ctime		4955684	0					
ANR	4955717	Identifier	ctime		4955684	0					
ANR	4955718	ArgumentList	& t		4955684	1					
ANR	4955719	Argument	& t		4955684	0					
ANR	4955720	UnaryOperationExpression	& t		4955684	0					
ANR	4955721	UnaryOperator	&		4955684	0					
ANR	4955722	Identifier	t		4955684	1					
ANR	4955723	ElseStatement	else		4955684	0					
ANR	4955724	CompoundStatement		13:9:196:218	4955684	0					
ANR	4955725	Statement	static	200:2:5697:5702	4955684	0	True				
ANR	4955726	IdentifierDeclStatement	int daylight = 0 ;	200:9:5704:5720	4955684	1	True				
ANR	4955727	IdentifierDecl	daylight = 0		4955684	0					
ANR	4955728	IdentifierDeclType	int		4955684	0					
ANR	4955729	Identifier	daylight		4955684	1					
ANR	4955730	AssignmentExpression	daylight = 0		4955684	2		=			
ANR	4955731	Identifier	daylight		4955684	0					
ANR	4955732	PrimaryExpression	0		4955684	1					
ANR	4955733	Statement	static	202:2:5745:5750	4955684	2	True				
ANR	4955734	IdentifierDeclStatement	time_t now = ( time_t ) 0 ;	202:9:5752:5774	4955684	3	True				
ANR	4955735	IdentifierDecl	now = ( time_t ) 0		4955684	0					
ANR	4955736	IdentifierDeclType	time_t		4955684	0					
ANR	4955737	Identifier	now		4955684	1					
ANR	4955738	AssignmentExpression	now = ( time_t ) 0		4955684	2		=			
ANR	4955739	Identifier	now		4955684	0					
ANR	4955740	CastExpression	( time_t ) 0		4955684	1					
ANR	4955741	CastTarget	time_t		4955684	0					
ANR	4955742	PrimaryExpression	0		4955684	1					
ANR	4955743	IfStatement	if ( now == ( time_t ) 0 )		4955684	4					
ANR	4955744	Condition	now == ( time_t ) 0	204:6:5783:5798	4955684	0	True				
ANR	4955745	EqualityExpression	now == ( time_t ) 0		4955684	0		==			
ANR	4955746	Identifier	now		4955684	0					
ANR	4955747	CastExpression	( time_t ) 0		4955684	1					
ANR	4955748	CastTarget	time_t		4955684	0					
ANR	4955749	PrimaryExpression	0		4955684	1					
ANR	4955750	CompoundStatement		16:3:250:264	4955684	1					
ANR	4955751	IdentifierDeclStatement	struct tm * tm1 ;	205:3:5806:5820	4955684	0	True				
ANR	4955752	IdentifierDecl	* tm1		4955684	0					
ANR	4955753	IdentifierDeclType	struct tm *		4955684	0					
ANR	4955754	Identifier	tm1		4955684	1					
ANR	4955755	ExpressionStatement	( void ) time ( & now )	206:3:5825:5841	4955684	1	True				
ANR	4955756	CastExpression	( void ) time ( & now )		4955684	0					
ANR	4955757	CastTarget	void		4955684	0					
ANR	4955758	CallExpression	time ( & now )		4955684	1					
ANR	4955759	Callee	time		4955684	0					
ANR	4955760	Identifier	time		4955684	0					
ANR	4955761	ArgumentList	& now		4955684	1					
ANR	4955762	Argument	& now		4955684	0					
ANR	4955763	UnaryOperationExpression	& now		4955684	0					
ANR	4955764	UnaryOperator	&		4955684	0					
ANR	4955765	Identifier	now		4955684	1					
ANR	4955766	ExpressionStatement	tm1 = localtime ( & now )	207:3:5846:5867	4955684	2	True				
ANR	4955767	AssignmentExpression	tm1 = localtime ( & now )		4955684	0		=			
ANR	4955768	Identifier	tm1		4955684	0					
ANR	4955769	CallExpression	localtime ( & now )		4955684	1					
ANR	4955770	Callee	localtime		4955684	0					
ANR	4955771	Identifier	localtime		4955684	0					
ANR	4955772	ArgumentList	& now		4955684	1					
ANR	4955773	Argument	& now		4955684	0					
ANR	4955774	UnaryOperationExpression	& now		4955684	0					
ANR	4955775	UnaryOperator	&		4955684	0					
ANR	4955776	Identifier	now		4955684	1					
ANR	4955777	IfStatement	if ( ! tm1 )		4955684	3					
ANR	4955778	Condition	! tm1	208:7:5876:5879	4955684	0	True				
ANR	4955779	UnaryOperationExpression	! tm1		4955684	0					
ANR	4955780	UnaryOperator	!		4955684	0					
ANR	4955781	Identifier	tm1		4955684	1					
ANR	4955782	ReturnStatement	"return ""*Invalid time*"" ;"	209:4:5886:5909	4955684	1	True				
ANR	4955783	PrimaryExpression	"""*Invalid time*"""		4955684	0					
ANR	4955784	ExpressionStatement	daylight = tm1 -> tm_isdst	210:3:5914:5938	4955684	4	True				
ANR	4955785	AssignmentExpression	daylight = tm1 -> tm_isdst		4955684	0		=			
ANR	4955786	Identifier	daylight		4955684	0					
ANR	4955787	PtrMemberAccess	tm1 -> tm_isdst		4955684	1					
ANR	4955788	Identifier	tm1		4955684	0					
ANR	4955789	Identifier	tm_isdst		4955684	1					
ANR	4955790	IfStatement	if ( daylight )		4955684	5					
ANR	4955791	Condition	daylight	214:6:6004:6011	4955684	0	True				
ANR	4955792	Identifier	daylight		4955684	0					
ANR	4955793	ExpressionStatement	t += 3600	215:3:6017:6026	4955684	1	True				
ANR	4955794	AssignmentExpression	t += 3600		4955684	0		+=			
ANR	4955795	Identifier	t		4955684	0					
ANR	4955796	PrimaryExpression	3600		4955684	1					
ANR	4955797	ExpressionStatement	"tm = gmtime_r ( & t , & timestruct )"	216:2:6030:6060	4955684	6	True				
ANR	4955798	AssignmentExpression	"tm = gmtime_r ( & t , & timestruct )"		4955684	0		=			
ANR	4955799	Identifier	tm		4955684	0					
ANR	4955800	CallExpression	"gmtime_r ( & t , & timestruct )"		4955684	1					
ANR	4955801	Callee	gmtime_r		4955684	0					
ANR	4955802	Identifier	gmtime_r		4955684	0					
ANR	4955803	ArgumentList	& t		4955684	1					
ANR	4955804	Argument	& t		4955684	0					
ANR	4955805	UnaryOperationExpression	& t		4955684	0					
ANR	4955806	UnaryOperator	&		4955684	0					
ANR	4955807	Identifier	t		4955684	1					
ANR	4955808	Argument	& timestruct		4955684	1					
ANR	4955809	UnaryOperationExpression	& timestruct		4955684	0					
ANR	4955810	UnaryOperator	&		4955684	0					
ANR	4955811	Identifier	timestruct		4955684	1					
ANR	4955812	IfStatement	if ( ! tm )		4955684	7					
ANR	4955813	Condition	! tm	217:6:6068:6070	4955684	0	True				
ANR	4955814	UnaryOperationExpression	! tm		4955684	0					
ANR	4955815	UnaryOperator	!		4955684	0					
ANR	4955816	Identifier	tm		4955684	1					
ANR	4955817	ReturnStatement	"return ""*Invalid time*"" ;"	218:3:6076:6099	4955684	1	True				
ANR	4955818	PrimaryExpression	"""*Invalid time*"""		4955684	0					
ANR	4955819	ExpressionStatement	pp = asctime ( tm )	219:2:6103:6120	4955684	8	True				
ANR	4955820	AssignmentExpression	pp = asctime ( tm )		4955684	0		=			
ANR	4955821	Identifier	pp		4955684	0					
ANR	4955822	CallExpression	asctime ( tm )		4955684	1					
ANR	4955823	Callee	asctime		4955684	0					
ANR	4955824	Identifier	asctime		4955684	0					
ANR	4955825	ArgumentList	tm		4955684	1					
ANR	4955826	Argument	tm		4955684	0					
ANR	4955827	Identifier	tm		4955684	0					
ANR	4955828	ExpressionStatement	"pp [ strcspn ( pp , ""\\n"" ) ] = '\\0'"	222:1:6127:6156	4955684	5	True				
ANR	4955829	AssignmentExpression	"pp [ strcspn ( pp , ""\\n"" ) ] = '\\0'"		4955684	0		=			
ANR	4955830	ArrayIndexing	"pp [ strcspn ( pp , ""\\n"" ) ]"		4955684	0					
ANR	4955831	Identifier	pp		4955684	0					
ANR	4955832	CallExpression	"strcspn ( pp , ""\\n"" )"		4955684	1					
ANR	4955833	Callee	strcspn		4955684	0					
ANR	4955834	Identifier	strcspn		4955684	0					
ANR	4955835	ArgumentList	pp		4955684	1					
ANR	4955836	Argument	pp		4955684	0					
ANR	4955837	Identifier	pp		4955684	0					
ANR	4955838	Argument	"""\\n"""		4955684	1					
ANR	4955839	PrimaryExpression	"""\\n"""		4955684	0					
ANR	4955840	PrimaryExpression	'\\0'		4955684	1					
ANR	4955841	ReturnStatement	return pp ;	223:1:6159:6168	4955684	6	True				
ANR	4955842	Identifier	pp		4955684	0					
ANR	4955843	ReturnType	const char *		4955684	1					
ANR	4955844	Identifier	file_fmttime		4955684	2					
ANR	4955845	ParameterList	"ut32 v , int local"		4955684	3					
ANR	4955846	Parameter	ut32 v	190:25:5536:5541	4955684	0	True				
ANR	4955847	ParameterType	ut32		4955684	0					
ANR	4955848	Identifier	v		4955684	1					
ANR	4955849	Parameter	int local	190:33:5544:5552	4955684	1	True				
ANR	4955850	ParameterType	int		4955684	0					
ANR	4955851	Identifier	local		4955684	1					
ANR	4955852	CFGEntryNode	ENTRY		4955684		True				
ANR	4955853	CFGExitNode	EXIT		4955684		True				
ANR	4955854	Symbol	pp		4955684						
ANR	4955855	Symbol	localtime		4955684						
ANR	4955856	Symbol	timestruct		4955684						
ANR	4955857	Symbol	* tm1		4955684						
ANR	4955858	Symbol	& timestruct		4955684						
ANR	4955859	Symbol	* pp		4955684						
ANR	4955860	Symbol	tm1 -> tm_isdst		4955684						
ANR	4955861	Symbol	gmtime_r		4955684						
ANR	4955862	Symbol	strcspn		4955684						
ANR	4955863	Symbol	local		4955684						
ANR	4955864	Symbol	t		4955684						
ANR	4955865	Symbol	daylight		4955684						
ANR	4955866	Symbol	v		4955684						
ANR	4955867	Symbol	now		4955684						
ANR	4955868	Symbol	tm		4955684						
ANR	4955869	Symbol	ctime		4955684						
ANR	4955870	Symbol	tm1		4955684						
ANR	4955871	Symbol	& t		4955684						
ANR	4955872	Symbol	* strcspn		4955684						
ANR	4955873	Symbol	& now		4955684						
ANR	4955874	Symbol	asctime		4955684						
