command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4665394	File	data/converged/CVE-2019-16718~_radare2/libr_crypto_p_crypto_rot.c								
ANR	4665395	Function	mod	6:0:95:221							
ANR	4665396	FunctionDef	"mod (int a , int b)"		4665395	0					
ANR	4665397	CompoundStatement		6:22:117:221	4665395	0					
ANR	4665398	IfStatement	if ( b < 0 )		4665395	0					
ANR	4665399	Condition	b < 0	7:5:124:128	4665395	0	True				
ANR	4665400	RelationalExpression	b < 0		4665395	0		<			
ANR	4665401	Identifier	b		4665395	0					
ANR	4665402	PrimaryExpression	0		4665395	1					
ANR	4665403	CompoundStatement		2:12:13:13	4665395	1					
ANR	4665404	ReturnStatement	"return mod ( - a , - b ) ;"	8:2:135:154	4665395	0	True				
ANR	4665405	CallExpression	"mod ( - a , - b )"		4665395	0					
ANR	4665406	Callee	mod		4665395	0					
ANR	4665407	Identifier	mod		4665395	0					
ANR	4665408	ArgumentList	- a		4665395	1					
ANR	4665409	Argument	- a		4665395	0					
ANR	4665410	UnaryOperationExpression	- a		4665395	0					
ANR	4665411	UnaryOperator	-		4665395	0					
ANR	4665412	Identifier	a		4665395	1					
ANR	4665413	Argument	- b		4665395	1					
ANR	4665414	UnaryOperationExpression	- b		4665395	0					
ANR	4665415	UnaryOperator	-		4665395	0					
ANR	4665416	Identifier	b		4665395	1					
ANR	4665417	IdentifierDeclStatement	int ret = a % b ;	10:1:160:175	4665395	1	True				
ANR	4665418	IdentifierDecl	ret = a % b		4665395	0					
ANR	4665419	IdentifierDeclType	int		4665395	0					
ANR	4665420	Identifier	ret		4665395	1					
ANR	4665421	AssignmentExpression	ret = a % b		4665395	2		=			
ANR	4665422	Identifier	ret		4665395	0					
ANR	4665423	MultiplicativeExpression	a % b		4665395	1		%			
ANR	4665424	Identifier	a		4665395	0					
ANR	4665425	Identifier	b		4665395	1					
ANR	4665426	IfStatement	if ( ret < 0 )		4665395	2					
ANR	4665427	Condition	ret < 0	11:5:182:188	4665395	0	True				
ANR	4665428	RelationalExpression	ret < 0		4665395	0		<			
ANR	4665429	Identifier	ret		4665395	0					
ANR	4665430	PrimaryExpression	0		4665395	1					
ANR	4665431	CompoundStatement		6:14:73:73	4665395	1					
ANR	4665432	ExpressionStatement	ret += b	12:2:195:203	4665395	0	True				
ANR	4665433	AssignmentExpression	ret += b		4665395	0		+=			
ANR	4665434	Identifier	ret		4665395	0					
ANR	4665435	Identifier	b		4665395	1					
ANR	4665436	ReturnStatement	return ret ;	14:1:209:219	4665395	3	True				
ANR	4665437	Identifier	ret		4665395	0					
ANR	4665438	ReturnType	int		4665395	1					
ANR	4665439	Identifier	mod		4665395	2					
ANR	4665440	ParameterList	"int a , int b"		4665395	3					
ANR	4665441	Parameter	int a	6:8:103:107	4665395	0	True				
ANR	4665442	ParameterType	int		4665395	0					
ANR	4665443	Identifier	a		4665395	1					
ANR	4665444	Parameter	int b	6:15:110:114	4665395	1	True				
ANR	4665445	ParameterType	int		4665395	0					
ANR	4665446	Identifier	b		4665395	1					
ANR	4665447	CFGEntryNode	ENTRY		4665395		True				
ANR	4665448	CFGExitNode	EXIT		4665395		True				
ANR	4665449	Symbol	ret		4665395						
ANR	4665450	Symbol	a		4665395						
ANR	4665451	Symbol	b		4665395						
ANR	4665452	Symbol	mod		4665395						
ANR	4665453	Function	rot_init	17:0:224:423							
ANR	4665454	FunctionDef	"rot_init (ut8 * rotkey , const ut8 * key , int keylen)"		4665453	0					
ANR	4665455	CompoundStatement		17:62:286:423	4665453	0					
ANR	4665456	IfStatement	if ( rotkey && key && keylen > 0 )		4665453	0					
ANR	4665457	Condition	rotkey && key && keylen > 0	18:5:293:319	4665453	0	True				
ANR	4665458	AndExpression	rotkey && key && keylen > 0		4665453	0		&&			
ANR	4665459	Identifier	rotkey		4665453	0					
ANR	4665460	AndExpression	key && keylen > 0		4665453	1		&&			
ANR	4665461	Identifier	key		4665453	0					
ANR	4665462	RelationalExpression	keylen > 0		4665453	1		>			
ANR	4665463	Identifier	keylen		4665453	0					
ANR	4665464	PrimaryExpression	0		4665453	1					
ANR	4665465	CompoundStatement		3:2:39:71	4665453	1					
ANR	4665466	IdentifierDeclStatement	int i = atoi ( ( const char * ) key ) ;	19:2:326:358	4665453	0	True				
ANR	4665467	IdentifierDecl	i = atoi ( ( const char * ) key )		4665453	0					
ANR	4665468	IdentifierDeclType	int		4665453	0					
ANR	4665469	Identifier	i		4665453	1					
ANR	4665470	AssignmentExpression	i = atoi ( ( const char * ) key )		4665453	2		=			
ANR	4665471	Identifier	i		4665453	0					
ANR	4665472	CallExpression	atoi ( ( const char * ) key )		4665453	1					
ANR	4665473	Callee	atoi		4665453	0					
ANR	4665474	Identifier	atoi		4665453	0					
ANR	4665475	ArgumentList	( const char * ) key		4665453	1					
ANR	4665476	Argument	( const char * ) key		4665453	0					
ANR	4665477	CastExpression	( const char * ) key		4665453	0					
ANR	4665478	CastTarget	const char *		4665453	0					
ANR	4665479	Identifier	key		4665453	1					
ANR	4665480	ExpressionStatement	"* rotkey = ( ut8 ) mod ( i , 26 )"	20:2:362:388	4665453	1	True				
ANR	4665481	AssignmentExpression	"* rotkey = ( ut8 ) mod ( i , 26 )"		4665453	0		=			
ANR	4665482	UnaryOperationExpression	* rotkey		4665453	0					
ANR	4665483	UnaryOperator	*		4665453	0					
ANR	4665484	Identifier	rotkey		4665453	1					
ANR	4665485	CastExpression	"( ut8 ) mod ( i , 26 )"		4665453	1					
ANR	4665486	CastTarget	ut8		4665453	0					
ANR	4665487	CallExpression	"mod ( i , 26 )"		4665453	1					
ANR	4665488	Callee	mod		4665453	0					
ANR	4665489	Identifier	mod		4665453	0					
ANR	4665490	ArgumentList	i		4665453	1					
ANR	4665491	Argument	i		4665453	0					
ANR	4665492	Identifier	i		4665453	0					
ANR	4665493	Argument	26		4665453	1					
ANR	4665494	PrimaryExpression	26		4665453	0					
ANR	4665495	ReturnStatement	return true ;	21:2:392:403	4665453	2	True				
ANR	4665496	Identifier	true		4665453	0					
ANR	4665497	ReturnStatement	return false ;	23:1:409:421	4665453	1	True				
ANR	4665498	Identifier	false		4665453	0					
ANR	4665499	ReturnType	static bool		4665453	1					
ANR	4665500	Identifier	rot_init		4665453	2					
ANR	4665501	ParameterList	"ut8 * rotkey , const ut8 * key , int keylen"		4665453	3					
ANR	4665502	Parameter	ut8 * rotkey	17:21:245:255	4665453	0	True				
ANR	4665503	ParameterType	ut8 *		4665453	0					
ANR	4665504	Identifier	rotkey		4665453	1					
ANR	4665505	Parameter	const ut8 * key	17:34:258:271	4665453	1	True				
ANR	4665506	ParameterType	const ut8 *		4665453	0					
ANR	4665507	Identifier	key		4665453	1					
ANR	4665508	Parameter	int keylen	17:50:274:283	4665453	2	True				
ANR	4665509	ParameterType	int		4665453	0					
ANR	4665510	Identifier	keylen		4665453	1					
ANR	4665511	CFGEntryNode	ENTRY		4665453		True				
ANR	4665512	CFGExitNode	EXIT		4665453		True				
ANR	4665513	Symbol	atoi		4665453						
ANR	4665514	Symbol	rotkey		4665453						
ANR	4665515	Symbol	mod		4665453						
ANR	4665516	Symbol	keylen		4665453						
ANR	4665517	Symbol	true		4665453						
ANR	4665518	Symbol	false		4665453						
ANR	4665519	Symbol	i		4665453						
ANR	4665520	Symbol	* rotkey		4665453						
ANR	4665521	Symbol	key		4665453						
ANR	4665522	Function	rot_crypt	26:0:426:853							
ANR	4665523	FunctionDef	"rot_crypt (ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen)"		4665522	0					
ANR	4665524	CompoundStatement		26:74:500:853	4665522	0					
ANR	4665525	IdentifierDeclStatement	int i ;	27:1:503:508	4665522	0	True				
ANR	4665526	IdentifierDecl	i		4665522	0					
ANR	4665527	IdentifierDeclType	int		4665522	0					
ANR	4665528	Identifier	i		4665522	1					
ANR	4665529	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		4665522	1					
ANR	4665530	ForInit	i = 0 ;	28:6:516:521	4665522	0	True				
ANR	4665531	AssignmentExpression	i = 0		4665522	0		=			
ANR	4665532	Identifier	i		4665522	0					
ANR	4665533	PrimaryExpression	0		4665522	1					
ANR	4665534	Condition	i < buflen	28:13:523:532	4665522	1	True				
ANR	4665535	RelationalExpression	i < buflen		4665522	0		<			
ANR	4665536	Identifier	i		4665522	0					
ANR	4665537	Identifier	buflen		4665522	1					
ANR	4665538	PostIncDecOperationExpression	i ++	28:25:535:537	4665522	2	True				
ANR	4665539	Identifier	i		4665522	0					
ANR	4665540	IncDec	++		4665522	1					
ANR	4665541	CompoundStatement		3:30:39:39	4665522	3					
ANR	4665542	ExpressionStatement	outbuf [ i ] = inbuf [ i ]	29:2:544:564	4665522	0	True				
ANR	4665543	AssignmentExpression	outbuf [ i ] = inbuf [ i ]		4665522	0		=			
ANR	4665544	ArrayIndexing	outbuf [ i ]		4665522	0					
ANR	4665545	Identifier	outbuf		4665522	0					
ANR	4665546	Identifier	i		4665522	1					
ANR	4665547	ArrayIndexing	inbuf [ i ]		4665522	1					
ANR	4665548	Identifier	inbuf		4665522	0					
ANR	4665549	Identifier	i		4665522	1					
ANR	4665550	IfStatement	if ( ( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' ) )		4665522	1					
ANR	4665551	Condition	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )	30:6:572:643	4665522	0	True				
ANR	4665552	AndExpression	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )		4665522	0		&&			
ANR	4665553	OrExpression	inbuf [ i ] < 'a' || inbuf [ i ] > 'z'		4665522	0		||			
ANR	4665554	RelationalExpression	inbuf [ i ] < 'a'		4665522	0		<			
ANR	4665555	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665556	Identifier	inbuf		4665522	0					
ANR	4665557	Identifier	i		4665522	1					
ANR	4665558	PrimaryExpression	'a'		4665522	1					
ANR	4665559	RelationalExpression	inbuf [ i ] > 'z'		4665522	1		>			
ANR	4665560	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665561	Identifier	inbuf		4665522	0					
ANR	4665562	Identifier	i		4665522	1					
ANR	4665563	PrimaryExpression	'z'		4665522	1					
ANR	4665564	OrExpression	inbuf [ i ] < 'A' || inbuf [ i ] > 'Z'		4665522	1		||			
ANR	4665565	RelationalExpression	inbuf [ i ] < 'A'		4665522	0		<			
ANR	4665566	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665567	Identifier	inbuf		4665522	0					
ANR	4665568	Identifier	i		4665522	1					
ANR	4665569	PrimaryExpression	'A'		4665522	1					
ANR	4665570	RelationalExpression	inbuf [ i ] > 'Z'		4665522	1		>			
ANR	4665571	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665572	Identifier	inbuf		4665522	0					
ANR	4665573	Identifier	i		4665522	1					
ANR	4665574	PrimaryExpression	'Z'		4665522	1					
ANR	4665575	CompoundStatement		5:80:145:145	4665522	1					
ANR	4665576	ContinueStatement	continue ;	31:3:651:659	4665522	0	True				
ANR	4665577	ExpressionStatement	outbuf [ i ] += key	33:2:667:683	4665522	2	True				
ANR	4665578	AssignmentExpression	outbuf [ i ] += key		4665522	0		+=			
ANR	4665579	ArrayIndexing	outbuf [ i ]		4665522	0					
ANR	4665580	Identifier	outbuf		4665522	0					
ANR	4665581	Identifier	i		4665522	1					
ANR	4665582	Identifier	key		4665522	1					
ANR	4665583	ExpressionStatement	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	34:2:687:748	4665522	3	True				
ANR	4665584	AssignmentExpression	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665522	0		-=			
ANR	4665585	ArrayIndexing	outbuf [ i ]		4665522	0					
ANR	4665586	Identifier	outbuf		4665522	0					
ANR	4665587	Identifier	i		4665522	1					
ANR	4665588	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665522	1					
ANR	4665589	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665522	0					
ANR	4665590	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665522	0		&&			
ANR	4665591	RelationalExpression	inbuf [ i ] >= 'a'		4665522	0		>=			
ANR	4665592	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665593	Identifier	inbuf		4665522	0					
ANR	4665594	Identifier	i		4665522	1					
ANR	4665595	PrimaryExpression	'a'		4665522	1					
ANR	4665596	RelationalExpression	inbuf [ i ] <= 'z'		4665522	1		<=			
ANR	4665597	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665598	Identifier	inbuf		4665522	0					
ANR	4665599	Identifier	i		4665522	1					
ANR	4665600	PrimaryExpression	'z'		4665522	1					
ANR	4665601	PrimaryExpression	'a'		4665522	1					
ANR	4665602	PrimaryExpression	'A'		4665522	2					
ANR	4665603	ExpressionStatement	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"	35:2:752:783	4665522	4	True				
ANR	4665604	AssignmentExpression	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"		4665522	0		=			
ANR	4665605	ArrayIndexing	outbuf [ i ]		4665522	0					
ANR	4665606	Identifier	outbuf		4665522	0					
ANR	4665607	Identifier	i		4665522	1					
ANR	4665608	CallExpression	"mod ( outbuf [ i ] , 26 )"		4665522	1					
ANR	4665609	Callee	mod		4665522	0					
ANR	4665610	Identifier	mod		4665522	0					
ANR	4665611	ArgumentList	outbuf [ i ]		4665522	1					
ANR	4665612	Argument	outbuf [ i ]		4665522	0					
ANR	4665613	ArrayIndexing	outbuf [ i ]		4665522	0					
ANR	4665614	Identifier	outbuf		4665522	0					
ANR	4665615	Identifier	i		4665522	1					
ANR	4665616	Argument	26		4665522	1					
ANR	4665617	PrimaryExpression	26		4665522	0					
ANR	4665618	ExpressionStatement	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	36:2:787:848	4665522	5	True				
ANR	4665619	AssignmentExpression	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665522	0		+=			
ANR	4665620	ArrayIndexing	outbuf [ i ]		4665522	0					
ANR	4665621	Identifier	outbuf		4665522	0					
ANR	4665622	Identifier	i		4665522	1					
ANR	4665623	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665522	1					
ANR	4665624	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665522	0					
ANR	4665625	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665522	0		&&			
ANR	4665626	RelationalExpression	inbuf [ i ] >= 'a'		4665522	0		>=			
ANR	4665627	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665628	Identifier	inbuf		4665522	0					
ANR	4665629	Identifier	i		4665522	1					
ANR	4665630	PrimaryExpression	'a'		4665522	1					
ANR	4665631	RelationalExpression	inbuf [ i ] <= 'z'		4665522	1		<=			
ANR	4665632	ArrayIndexing	inbuf [ i ]		4665522	0					
ANR	4665633	Identifier	inbuf		4665522	0					
ANR	4665634	Identifier	i		4665522	1					
ANR	4665635	PrimaryExpression	'z'		4665522	1					
ANR	4665636	PrimaryExpression	'a'		4665522	1					
ANR	4665637	PrimaryExpression	'A'		4665522	2					
ANR	4665638	ReturnType	static void		4665522	1					
ANR	4665639	Identifier	rot_crypt		4665522	2					
ANR	4665640	ParameterList	"ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen"		4665522	3					
ANR	4665641	Parameter	ut8 key	26:22:448:454	4665522	0	True				
ANR	4665642	ParameterType	ut8		4665522	0					
ANR	4665643	Identifier	key		4665522	1					
ANR	4665644	Parameter	const ut8 * inbuf	26:31:457:472	4665522	1	True				
ANR	4665645	ParameterType	const ut8 *		4665522	0					
ANR	4665646	Identifier	inbuf		4665522	1					
ANR	4665647	Parameter	ut8 * outbuf	26:49:475:485	4665522	2	True				
ANR	4665648	ParameterType	ut8 *		4665522	0					
ANR	4665649	Identifier	outbuf		4665522	1					
ANR	4665650	Parameter	int buflen	26:62:488:497	4665522	3	True				
ANR	4665651	ParameterType	int		4665522	0					
ANR	4665652	Identifier	buflen		4665522	1					
ANR	4665653	CFGEntryNode	ENTRY		4665522		True				
ANR	4665654	CFGExitNode	EXIT		4665522		True				
ANR	4665655	Symbol	* outbuf		4665522						
ANR	4665656	Symbol	* inbuf		4665522						
ANR	4665657	Symbol	* i		4665522						
ANR	4665658	Symbol	mod		4665522						
ANR	4665659	Symbol	inbuf		4665522						
ANR	4665660	Symbol	outbuf		4665522						
ANR	4665661	Symbol	buflen		4665522						
ANR	4665662	Symbol	i		4665522						
ANR	4665663	Symbol	key		4665522						
ANR	4665664	Function	rot_decrypt	40:0:856:1359							
ANR	4665665	FunctionDef	"rot_decrypt (ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen)"		4665664	0					
ANR	4665666	CompoundStatement		40:76:932:1359	4665664	0					
ANR	4665667	IdentifierDeclStatement	int i ;	41:1:935:940	4665664	0	True				
ANR	4665668	IdentifierDecl	i		4665664	0					
ANR	4665669	IdentifierDeclType	int		4665664	0					
ANR	4665670	Identifier	i		4665664	1					
ANR	4665671	ForStatement	for ( i = 0 ; i < buflen ; i ++ )		4665664	1					
ANR	4665672	ForInit	i = 0 ;	42:6:948:953	4665664	0	True				
ANR	4665673	AssignmentExpression	i = 0		4665664	0		=			
ANR	4665674	Identifier	i		4665664	0					
ANR	4665675	PrimaryExpression	0		4665664	1					
ANR	4665676	Condition	i < buflen	42:13:955:964	4665664	1	True				
ANR	4665677	RelationalExpression	i < buflen		4665664	0		<			
ANR	4665678	Identifier	i		4665664	0					
ANR	4665679	Identifier	buflen		4665664	1					
ANR	4665680	PostIncDecOperationExpression	i ++	42:25:967:969	4665664	2	True				
ANR	4665681	Identifier	i		4665664	0					
ANR	4665682	IncDec	++		4665664	1					
ANR	4665683	CompoundStatement		3:30:39:39	4665664	3					
ANR	4665684	ExpressionStatement	outbuf [ i ] = inbuf [ i ]	43:2:976:996	4665664	0	True				
ANR	4665685	AssignmentExpression	outbuf [ i ] = inbuf [ i ]		4665664	0		=			
ANR	4665686	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665687	Identifier	outbuf		4665664	0					
ANR	4665688	Identifier	i		4665664	1					
ANR	4665689	ArrayIndexing	inbuf [ i ]		4665664	1					
ANR	4665690	Identifier	inbuf		4665664	0					
ANR	4665691	Identifier	i		4665664	1					
ANR	4665692	IfStatement	if ( ( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' ) )		4665664	1					
ANR	4665693	Condition	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )	44:6:1004:1075	4665664	0	True				
ANR	4665694	AndExpression	( inbuf [ i ] < 'a' || inbuf [ i ] > 'z' ) && ( inbuf [ i ] < 'A' || inbuf [ i ] > 'Z' )		4665664	0		&&			
ANR	4665695	OrExpression	inbuf [ i ] < 'a' || inbuf [ i ] > 'z'		4665664	0		||			
ANR	4665696	RelationalExpression	inbuf [ i ] < 'a'		4665664	0		<			
ANR	4665697	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665698	Identifier	inbuf		4665664	0					
ANR	4665699	Identifier	i		4665664	1					
ANR	4665700	PrimaryExpression	'a'		4665664	1					
ANR	4665701	RelationalExpression	inbuf [ i ] > 'z'		4665664	1		>			
ANR	4665702	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665703	Identifier	inbuf		4665664	0					
ANR	4665704	Identifier	i		4665664	1					
ANR	4665705	PrimaryExpression	'z'		4665664	1					
ANR	4665706	OrExpression	inbuf [ i ] < 'A' || inbuf [ i ] > 'Z'		4665664	1		||			
ANR	4665707	RelationalExpression	inbuf [ i ] < 'A'		4665664	0		<			
ANR	4665708	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665709	Identifier	inbuf		4665664	0					
ANR	4665710	Identifier	i		4665664	1					
ANR	4665711	PrimaryExpression	'A'		4665664	1					
ANR	4665712	RelationalExpression	inbuf [ i ] > 'Z'		4665664	1		>			
ANR	4665713	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665714	Identifier	inbuf		4665664	0					
ANR	4665715	Identifier	i		4665664	1					
ANR	4665716	PrimaryExpression	'Z'		4665664	1					
ANR	4665717	CompoundStatement		5:80:145:145	4665664	1					
ANR	4665718	ContinueStatement	continue ;	45:3:1083:1091	4665664	0	True				
ANR	4665719	ExpressionStatement	outbuf [ i ] += 26	47:2:1099:1114	4665664	2	True				
ANR	4665720	AssignmentExpression	outbuf [ i ] += 26		4665664	0		+=			
ANR	4665721	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665722	Identifier	outbuf		4665664	0					
ANR	4665723	Identifier	i		4665664	1					
ANR	4665724	PrimaryExpression	26		4665664	1					
ANR	4665725	ExpressionStatement	outbuf [ i ] -= key	48:2:1173:1189	4665664	3	True				
ANR	4665726	AssignmentExpression	outbuf [ i ] -= key		4665664	0		-=			
ANR	4665727	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665728	Identifier	outbuf		4665664	0					
ANR	4665729	Identifier	i		4665664	1					
ANR	4665730	Identifier	key		4665664	1					
ANR	4665731	ExpressionStatement	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	49:2:1193:1254	4665664	4	True				
ANR	4665732	AssignmentExpression	outbuf [ i ] -= ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665664	0		-=			
ANR	4665733	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665734	Identifier	outbuf		4665664	0					
ANR	4665735	Identifier	i		4665664	1					
ANR	4665736	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665664	1					
ANR	4665737	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665664	0					
ANR	4665738	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665664	0		&&			
ANR	4665739	RelationalExpression	inbuf [ i ] >= 'a'		4665664	0		>=			
ANR	4665740	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665741	Identifier	inbuf		4665664	0					
ANR	4665742	Identifier	i		4665664	1					
ANR	4665743	PrimaryExpression	'a'		4665664	1					
ANR	4665744	RelationalExpression	inbuf [ i ] <= 'z'		4665664	1		<=			
ANR	4665745	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665746	Identifier	inbuf		4665664	0					
ANR	4665747	Identifier	i		4665664	1					
ANR	4665748	PrimaryExpression	'z'		4665664	1					
ANR	4665749	PrimaryExpression	'a'		4665664	1					
ANR	4665750	PrimaryExpression	'A'		4665664	2					
ANR	4665751	ExpressionStatement	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"	50:2:1258:1289	4665664	5	True				
ANR	4665752	AssignmentExpression	"outbuf [ i ] = mod ( outbuf [ i ] , 26 )"		4665664	0		=			
ANR	4665753	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665754	Identifier	outbuf		4665664	0					
ANR	4665755	Identifier	i		4665664	1					
ANR	4665756	CallExpression	"mod ( outbuf [ i ] , 26 )"		4665664	1					
ANR	4665757	Callee	mod		4665664	0					
ANR	4665758	Identifier	mod		4665664	0					
ANR	4665759	ArgumentList	outbuf [ i ]		4665664	1					
ANR	4665760	Argument	outbuf [ i ]		4665664	0					
ANR	4665761	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665762	Identifier	outbuf		4665664	0					
ANR	4665763	Identifier	i		4665664	1					
ANR	4665764	Argument	26		4665664	1					
ANR	4665765	PrimaryExpression	26		4665664	0					
ANR	4665766	ExpressionStatement	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'	51:2:1293:1354	4665664	6	True				
ANR	4665767	AssignmentExpression	outbuf [ i ] += ( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665664	0		+=			
ANR	4665768	ArrayIndexing	outbuf [ i ]		4665664	0					
ANR	4665769	Identifier	outbuf		4665664	0					
ANR	4665770	Identifier	i		4665664	1					
ANR	4665771	ConditionalExpression	( inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z' ) ? 'a' : 'A'		4665664	1					
ANR	4665772	Condition	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665664	0					
ANR	4665773	AndExpression	inbuf [ i ] >= 'a' && inbuf [ i ] <= 'z'		4665664	0		&&			
ANR	4665774	RelationalExpression	inbuf [ i ] >= 'a'		4665664	0		>=			
ANR	4665775	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665776	Identifier	inbuf		4665664	0					
ANR	4665777	Identifier	i		4665664	1					
ANR	4665778	PrimaryExpression	'a'		4665664	1					
ANR	4665779	RelationalExpression	inbuf [ i ] <= 'z'		4665664	1		<=			
ANR	4665780	ArrayIndexing	inbuf [ i ]		4665664	0					
ANR	4665781	Identifier	inbuf		4665664	0					
ANR	4665782	Identifier	i		4665664	1					
ANR	4665783	PrimaryExpression	'z'		4665664	1					
ANR	4665784	PrimaryExpression	'a'		4665664	1					
ANR	4665785	PrimaryExpression	'A'		4665664	2					
ANR	4665786	ReturnType	static void		4665664	1					
ANR	4665787	Identifier	rot_decrypt		4665664	2					
ANR	4665788	ParameterList	"ut8 key , const ut8 * inbuf , ut8 * outbuf , int buflen"		4665664	3					
ANR	4665789	Parameter	ut8 key	40:24:880:886	4665664	0	True				
ANR	4665790	ParameterType	ut8		4665664	0					
ANR	4665791	Identifier	key		4665664	1					
ANR	4665792	Parameter	const ut8 * inbuf	40:33:889:904	4665664	1	True				
ANR	4665793	ParameterType	const ut8 *		4665664	0					
ANR	4665794	Identifier	inbuf		4665664	1					
ANR	4665795	Parameter	ut8 * outbuf	40:51:907:917	4665664	2	True				
ANR	4665796	ParameterType	ut8 *		4665664	0					
ANR	4665797	Identifier	outbuf		4665664	1					
ANR	4665798	Parameter	int buflen	40:64:920:929	4665664	3	True				
ANR	4665799	ParameterType	int		4665664	0					
ANR	4665800	Identifier	buflen		4665664	1					
ANR	4665801	CFGEntryNode	ENTRY		4665664		True				
ANR	4665802	CFGExitNode	EXIT		4665664		True				
ANR	4665803	Symbol	* outbuf		4665664						
ANR	4665804	Symbol	* inbuf		4665664						
ANR	4665805	Symbol	* i		4665664						
ANR	4665806	Symbol	mod		4665664						
ANR	4665807	Symbol	inbuf		4665664						
ANR	4665808	Symbol	outbuf		4665664						
ANR	4665809	Symbol	buflen		4665664						
ANR	4665810	Symbol	i		4665664						
ANR	4665811	Symbol	key		4665664						
ANR	4665812	DeclStmt									
ANR	4665813	Decl							ut8	ut8	rot_key
ANR	4665814	DeclStmt									
ANR	4665815	Decl							int	int	flag
ANR	4665816	Function	rot_set_key	58:0:1404:1558							
ANR	4665817	FunctionDef	"rot_set_key (RCrypto * cry , const ut8 * key , int keylen , int mode , int direction)"		4665816	0					
ANR	4665818	CompoundStatement		58:91:1495:1558	4665816	0					
ANR	4665819	ExpressionStatement	flag = direction	59:1:1498:1514	4665816	0	True				
ANR	4665820	AssignmentExpression	flag = direction		4665816	0		=			
ANR	4665821	Identifier	flag		4665816	0					
ANR	4665822	Identifier	direction		4665816	1					
ANR	4665823	ReturnStatement	"return rot_init ( & rot_key , key , keylen ) ;"	60:1:1517:1556	4665816	1	True				
ANR	4665824	CallExpression	"rot_init ( & rot_key , key , keylen )"		4665816	0					
ANR	4665825	Callee	rot_init		4665816	0					
ANR	4665826	Identifier	rot_init		4665816	0					
ANR	4665827	ArgumentList	& rot_key		4665816	1					
ANR	4665828	Argument	& rot_key		4665816	0					
ANR	4665829	UnaryOperationExpression	& rot_key		4665816	0					
ANR	4665830	UnaryOperator	&		4665816	0					
ANR	4665831	Identifier	rot_key		4665816	1					
ANR	4665832	Argument	key		4665816	1					
ANR	4665833	Identifier	key		4665816	0					
ANR	4665834	Argument	keylen		4665816	2					
ANR	4665835	Identifier	keylen		4665816	0					
ANR	4665836	ReturnType	static bool		4665816	1					
ANR	4665837	Identifier	rot_set_key		4665816	2					
ANR	4665838	ParameterList	"RCrypto * cry , const ut8 * key , int keylen , int mode , int direction"		4665816	3					
ANR	4665839	Parameter	RCrypto * cry	58:24:1428:1439	4665816	0	True				
ANR	4665840	ParameterType	RCrypto *		4665816	0					
ANR	4665841	Identifier	cry		4665816	1					
ANR	4665842	Parameter	const ut8 * key	58:38:1442:1455	4665816	1	True				
ANR	4665843	ParameterType	const ut8 *		4665816	0					
ANR	4665844	Identifier	key		4665816	1					
ANR	4665845	Parameter	int keylen	58:54:1458:1467	4665816	2	True				
ANR	4665846	ParameterType	int		4665816	0					
ANR	4665847	Identifier	keylen		4665816	1					
ANR	4665848	Parameter	int mode	58:66:1470:1477	4665816	3	True				
ANR	4665849	ParameterType	int		4665816	0					
ANR	4665850	Identifier	mode		4665816	1					
ANR	4665851	Parameter	int direction	58:76:1480:1492	4665816	4	True				
ANR	4665852	ParameterType	int		4665816	0					
ANR	4665853	Identifier	direction		4665816	1					
ANR	4665854	CFGEntryNode	ENTRY		4665816		True				
ANR	4665855	CFGExitNode	EXIT		4665816		True				
ANR	4665856	Symbol	mode		4665816						
ANR	4665857	Symbol	& rot_key		4665816						
ANR	4665858	Symbol	flag		4665816						
ANR	4665859	Symbol	keylen		4665816						
ANR	4665860	Symbol	cry		4665816						
ANR	4665861	Symbol	key		4665816						
ANR	4665862	Symbol	direction		4665816						
ANR	4665863	Symbol	rot_init		4665816						
ANR	4665864	Function	rot_get_key_size	63:0:1561:1661							
ANR	4665865	FunctionDef	rot_get_key_size (RCrypto * cry)		4665864	0					
ANR	4665866	CompoundStatement		63:42:1603:1661	4665864	0					
ANR	4665867	ReturnStatement	return 1 ;	65:1:1651:1659	4665864	0	True				
ANR	4665868	PrimaryExpression	1		4665864	0					
ANR	4665869	ReturnType	static int		4665864	1					
ANR	4665870	Identifier	rot_get_key_size		4665864	2					
ANR	4665871	ParameterList	RCrypto * cry		4665864	3					
ANR	4665872	Parameter	RCrypto * cry	63:28:1589:1600	4665864	0	True				
ANR	4665873	ParameterType	RCrypto *		4665864	0					
ANR	4665874	Identifier	cry		4665864	1					
ANR	4665875	CFGEntryNode	ENTRY		4665864		True				
ANR	4665876	CFGExitNode	EXIT		4665864		True				
ANR	4665877	Symbol	cry		4665864						
ANR	4665878	Function	rot_use	68:0:1664:1735							
ANR	4665879	FunctionDef	rot_use (const char * algo)		4665878	0					
ANR	4665880	CompoundStatement		68:38:1702:1735	4665878	0					
ANR	4665881	ReturnStatement	"return ! strcmp ( algo , ""rot"" ) ;"	69:1:1705:1733	4665878	0	True				
ANR	4665882	UnaryOperationExpression	"! strcmp ( algo , ""rot"" )"		4665878	0					
ANR	4665883	UnaryOperator	!		4665878	0					
ANR	4665884	CallExpression	"strcmp ( algo , ""rot"" )"		4665878	1					
ANR	4665885	Callee	strcmp		4665878	0					
ANR	4665886	Identifier	strcmp		4665878	0					
ANR	4665887	ArgumentList	algo		4665878	1					
ANR	4665888	Argument	algo		4665878	0					
ANR	4665889	Identifier	algo		4665878	0					
ANR	4665890	Argument	"""rot"""		4665878	1					
ANR	4665891	PrimaryExpression	"""rot"""		4665878	0					
ANR	4665892	ReturnType	static bool		4665878	1					
ANR	4665893	Identifier	rot_use		4665878	2					
ANR	4665894	ParameterList	const char * algo		4665878	3					
ANR	4665895	Parameter	const char * algo	68:20:1684:1699	4665878	0	True				
ANR	4665896	ParameterType	const char *		4665878	0					
ANR	4665897	Identifier	algo		4665878	1					
ANR	4665898	CFGEntryNode	ENTRY		4665878		True				
ANR	4665899	CFGExitNode	EXIT		4665878		True				
ANR	4665900	Symbol	strcmp		4665878						
ANR	4665901	Symbol	algo		4665878						
ANR	4665902	Function	update	72:0:1738:2050							
ANR	4665903	FunctionDef	"update (RCrypto * cry , const ut8 * buf , int len)"		4665902	0					
ANR	4665904	CompoundStatement		72:58:1796:2050	4665902	0					
ANR	4665905	IdentifierDeclStatement	"ut8 * obuf = calloc ( 1 , len ) ;"	73:1:1799:1826	4665902	0	True				
ANR	4665906	IdentifierDecl	"* obuf = calloc ( 1 , len )"		4665902	0					
ANR	4665907	IdentifierDeclType	ut8 *		4665902	0					
ANR	4665908	Identifier	obuf		4665902	1					
ANR	4665909	AssignmentExpression	"* obuf = calloc ( 1 , len )"		4665902	2		=			
ANR	4665910	Identifier	obuf		4665902	0					
ANR	4665911	CallExpression	"calloc ( 1 , len )"		4665902	1					
ANR	4665912	Callee	calloc		4665902	0					
ANR	4665913	Identifier	calloc		4665902	0					
ANR	4665914	ArgumentList	1		4665902	1					
ANR	4665915	Argument	1		4665902	0					
ANR	4665916	PrimaryExpression	1		4665902	0					
ANR	4665917	Argument	len		4665902	1					
ANR	4665918	Identifier	len		4665902	0					
ANR	4665919	IfStatement	if ( ! obuf )		4665902	1					
ANR	4665920	Condition	! obuf	74:5:1833:1837	4665902	0	True				
ANR	4665921	UnaryOperationExpression	! obuf		4665902	0					
ANR	4665922	UnaryOperator	!		4665902	0					
ANR	4665923	Identifier	obuf		4665902	1					
ANR	4665924	CompoundStatement		3:12:43:43	4665902	1					
ANR	4665925	ReturnStatement	return false ;	75:2:1844:1856	4665902	0	True				
ANR	4665926	Identifier	false		4665902	0					
ANR	4665927	IfStatement	if ( flag == 0 )		4665902	2					
ANR	4665928	Condition	flag == 0	77:5:1866:1874	4665902	0	True				
ANR	4665929	EqualityExpression	flag == 0		4665902	0		==			
ANR	4665930	Identifier	flag		4665902	0					
ANR	4665931	PrimaryExpression	0		4665902	1					
ANR	4665932	CompoundStatement		6:16:80:80	4665902	1					
ANR	4665933	ExpressionStatement	"rot_crypt ( rot_key , buf , obuf , len )"	78:2:1881:1916	4665902	0	True				
ANR	4665934	CallExpression	"rot_crypt ( rot_key , buf , obuf , len )"		4665902	0					
ANR	4665935	Callee	rot_crypt		4665902	0					
ANR	4665936	Identifier	rot_crypt		4665902	0					
ANR	4665937	ArgumentList	rot_key		4665902	1					
ANR	4665938	Argument	rot_key		4665902	0					
ANR	4665939	Identifier	rot_key		4665902	0					
ANR	4665940	Argument	buf		4665902	1					
ANR	4665941	Identifier	buf		4665902	0					
ANR	4665942	Argument	obuf		4665902	2					
ANR	4665943	Identifier	obuf		4665902	0					
ANR	4665944	Argument	len		4665902	3					
ANR	4665945	Identifier	len		4665902	0					
ANR	4665946	ElseStatement	else		4665902	0					
ANR	4665947	IfStatement	if ( flag == 1 )		4665902	0					
ANR	4665948	Condition	flag == 1	79:12:1930:1938	4665902	0	True				
ANR	4665949	EqualityExpression	flag == 1		4665902	0		==			
ANR	4665950	Identifier	flag		4665902	0					
ANR	4665951	PrimaryExpression	1		4665902	1					
ANR	4665952	CompoundStatement		8:23:144:144	4665902	1					
ANR	4665953	ExpressionStatement	"rot_decrypt ( rot_key , buf , obuf , len )"	80:2:1945:1982	4665902	0	True				
ANR	4665954	CallExpression	"rot_decrypt ( rot_key , buf , obuf , len )"		4665902	0					
ANR	4665955	Callee	rot_decrypt		4665902	0					
ANR	4665956	Identifier	rot_decrypt		4665902	0					
ANR	4665957	ArgumentList	rot_key		4665902	1					
ANR	4665958	Argument	rot_key		4665902	0					
ANR	4665959	Identifier	rot_key		4665902	0					
ANR	4665960	Argument	buf		4665902	1					
ANR	4665961	Identifier	buf		4665902	0					
ANR	4665962	Argument	obuf		4665902	2					
ANR	4665963	Identifier	obuf		4665902	0					
ANR	4665964	Argument	len		4665902	3					
ANR	4665965	Identifier	len		4665902	0					
ANR	4665966	ExpressionStatement	"r_crypto_append ( cry , obuf , len )"	82:1:1988:2020	4665902	3	True				
ANR	4665967	CallExpression	"r_crypto_append ( cry , obuf , len )"		4665902	0					
ANR	4665968	Callee	r_crypto_append		4665902	0					
ANR	4665969	Identifier	r_crypto_append		4665902	0					
ANR	4665970	ArgumentList	cry		4665902	1					
ANR	4665971	Argument	cry		4665902	0					
ANR	4665972	Identifier	cry		4665902	0					
ANR	4665973	Argument	obuf		4665902	1					
ANR	4665974	Identifier	obuf		4665902	0					
ANR	4665975	Argument	len		4665902	2					
ANR	4665976	Identifier	len		4665902	0					
ANR	4665977	ExpressionStatement	free ( obuf )	83:1:2023:2034	4665902	4	True				
ANR	4665978	CallExpression	free ( obuf )		4665902	0					
ANR	4665979	Callee	free		4665902	0					
ANR	4665980	Identifier	free		4665902	0					
ANR	4665981	ArgumentList	obuf		4665902	1					
ANR	4665982	Argument	obuf		4665902	0					
ANR	4665983	Identifier	obuf		4665902	0					
ANR	4665984	ReturnStatement	return true ;	84:1:2037:2048	4665902	5	True				
ANR	4665985	Identifier	true		4665902	0					
ANR	4665986	ReturnType	static bool		4665902	1					
ANR	4665987	Identifier	update		4665902	2					
ANR	4665988	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		4665902	3					
ANR	4665989	Parameter	RCrypto * cry	72:19:1757:1768	4665902	0	True				
ANR	4665990	ParameterType	RCrypto *		4665902	0					
ANR	4665991	Identifier	cry		4665902	1					
ANR	4665992	Parameter	const ut8 * buf	72:33:1771:1784	4665902	1	True				
ANR	4665993	ParameterType	const ut8 *		4665902	0					
ANR	4665994	Identifier	buf		4665902	1					
ANR	4665995	Parameter	int len	72:49:1787:1793	4665902	2	True				
ANR	4665996	ParameterType	int		4665902	0					
ANR	4665997	Identifier	len		4665902	1					
ANR	4665998	CFGEntryNode	ENTRY		4665902		True				
ANR	4665999	CFGExitNode	EXIT		4665902		True				
ANR	4666000	Symbol	buf		4665902						
ANR	4666001	Symbol	flag		4665902						
ANR	4666002	Symbol	len		4665902						
ANR	4666003	Symbol	obuf		4665902						
ANR	4666004	Symbol	false		4665902						
ANR	4666005	Symbol	rot_key		4665902						
ANR	4666006	Symbol	true		4665902						
ANR	4666007	Symbol	cry		4665902						
ANR	4666008	Symbol	calloc		4665902						
ANR	4666009	Function	final	87:0:2053:2144							
ANR	4666010	FunctionDef	"final (RCrypto * cry , const ut8 * buf , int len)"		4666009	0					
ANR	4666011	CompoundStatement		87:57:2110:2144	4666009	0					
ANR	4666012	ReturnStatement	"return update ( cry , buf , len ) ;"	88:1:2113:2142	4666009	0	True				
ANR	4666013	CallExpression	"update ( cry , buf , len )"		4666009	0					
ANR	4666014	Callee	update		4666009	0					
ANR	4666015	Identifier	update		4666009	0					
ANR	4666016	ArgumentList	cry		4666009	1					
ANR	4666017	Argument	cry		4666009	0					
ANR	4666018	Identifier	cry		4666009	0					
ANR	4666019	Argument	buf		4666009	1					
ANR	4666020	Identifier	buf		4666009	0					
ANR	4666021	Argument	len		4666009	2					
ANR	4666022	Identifier	len		4666009	0					
ANR	4666023	ReturnType	static bool		4666009	1					
ANR	4666024	Identifier	final		4666009	2					
ANR	4666025	ParameterList	"RCrypto * cry , const ut8 * buf , int len"		4666009	3					
ANR	4666026	Parameter	RCrypto * cry	87:18:2071:2082	4666009	0	True				
ANR	4666027	ParameterType	RCrypto *		4666009	0					
ANR	4666028	Identifier	cry		4666009	1					
ANR	4666029	Parameter	const ut8 * buf	87:32:2085:2098	4666009	1	True				
ANR	4666030	ParameterType	const ut8 *		4666009	0					
ANR	4666031	Identifier	buf		4666009	1					
ANR	4666032	Parameter	int len	87:48:2101:2107	4666009	2	True				
ANR	4666033	ParameterType	int		4666009	0					
ANR	4666034	Identifier	len		4666009	1					
ANR	4666035	CFGEntryNode	ENTRY		4666009		True				
ANR	4666036	CFGExitNode	EXIT		4666009		True				
ANR	4666037	Symbol	buf		4666009						
ANR	4666038	Symbol	len		4666009						
ANR	4666039	Symbol	update		4666009						
ANR	4666040	Symbol	cry		4666009						
ANR	4666041	DeclStmt									
ANR	4666042	Decl							RCryptoPlugin	RCryptoPlugin	r_crypto_plugin_rot
ANR	4666043	DeclStmt									
ANR	4666044	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
