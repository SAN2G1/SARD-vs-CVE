command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2686598	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_arm_winedbg_be_arm.c								
ANR	2686599	Function	db_get_inst	57:0:1344:1536							
ANR	2686600	FunctionDef	"db_get_inst (const ut8 * buf , int size)"		2686599	0					
ANR	2686601	CompoundStatement		57:50:1394:1536	2686599	0					
ANR	2686602	IdentifierDeclStatement	ut32 result = 0 ;	58:2:1398:1413	2686599	0	True				
ANR	2686603	IdentifierDecl	result = 0		2686599	0					
ANR	2686604	IdentifierDeclType	ut32		2686599	0					
ANR	2686605	Identifier	result		2686599	1					
ANR	2686606	AssignmentExpression	result = 0		2686599	2		=			
ANR	2686607	Identifier	result		2686599	0					
ANR	2686608	PrimaryExpression	0		2686599	1					
ANR	2686609	SwitchStatement	switch ( size )		2686599	1					
ANR	2686610	Condition	size	60:9:1425:1428	2686599	0	True				
ANR	2686611	Identifier	size		2686599	0					
ANR	2686612	CompoundStatement		4:15:36:36	2686599	1					
ANR	2686613	Label	case 4 :	61:1:1434:1440	2686599	0	True				
ANR	2686614	ExpressionStatement	result = * ( ut32 * ) buf	62:2:1444:1464	2686599	1	True				
ANR	2686615	AssignmentExpression	result = * ( ut32 * ) buf		2686599	0		=			
ANR	2686616	Identifier	result		2686599	0					
ANR	2686617	UnaryOperationExpression	* ( ut32 * ) buf		2686599	1					
ANR	2686618	UnaryOperator	*		2686599	0					
ANR	2686619	CastExpression	( ut32 * ) buf		2686599	1					
ANR	2686620	CastTarget	ut32 *		2686599	0					
ANR	2686621	Identifier	buf		2686599	1					
ANR	2686622	BreakStatement	break ;	63:2:1468:1473	2686599	2	True				
ANR	2686623	Label	case 2 :	64:1:1476:1482	2686599	3	True				
ANR	2686624	ExpressionStatement	result = * ( ut16 * ) buf	65:2:1486:1506	2686599	4	True				
ANR	2686625	AssignmentExpression	result = * ( ut16 * ) buf		2686599	0		=			
ANR	2686626	Identifier	result		2686599	0					
ANR	2686627	UnaryOperationExpression	* ( ut16 * ) buf		2686599	1					
ANR	2686628	UnaryOperator	*		2686599	0					
ANR	2686629	CastExpression	( ut16 * ) buf		2686599	1					
ANR	2686630	CastTarget	ut16 *		2686599	0					
ANR	2686631	Identifier	buf		2686599	1					
ANR	2686632	BreakStatement	break ;	66:2:1510:1515	2686599	5	True				
ANR	2686633	ReturnStatement	return result ;	68:1:1521:1534	2686599	2	True				
ANR	2686634	Identifier	result		2686599	0					
ANR	2686635	ReturnType	static ut32		2686599	1					
ANR	2686636	Identifier	db_get_inst		2686599	2					
ANR	2686637	ParameterList	"const ut8 * buf , int size"		2686599	3					
ANR	2686638	Parameter	const ut8 * buf	57:24:1368:1381	2686599	0	True				
ANR	2686639	ParameterType	const ut8 *		2686599	0					
ANR	2686640	Identifier	buf		2686599	1					
ANR	2686641	Parameter	int size	57:40:1384:1391	2686599	1	True				
ANR	2686642	ParameterType	int		2686599	0					
ANR	2686643	Identifier	size		2686599	1					
ANR	2686644	CFGEntryNode	ENTRY		2686599		True				
ANR	2686645	CFGExitNode	EXIT		2686599		True				
ANR	2686646	Symbol	result		2686599						
ANR	2686647	Symbol	buf		2686599						
ANR	2686648	Symbol	* buf		2686599						
ANR	2686649	Symbol	* ( ut16 * ) buf		2686599						
ANR	2686650	Symbol	size		2686599						
ANR	2686651	Symbol	* ( ut32 * ) buf		2686599						
ANR	2686652	Function	arm_disasm_branch	71:0:1539:1968							
ANR	2686653	FunctionDef	"arm_disasm_branch (struct winedbg_arm_insn * arminsn , ut32 inst)"		2686652	0					
ANR	2686654	CompoundStatement		71:75:1614:1968	2686652	0					
ANR	2686655	IdentifierDeclStatement	short link = ( inst >> 24 ) & 0x01 ;	72:1:1617:1649	2686652	0	True				
ANR	2686656	IdentifierDecl	link = ( inst >> 24 ) & 0x01		2686652	0					
ANR	2686657	IdentifierDeclType	short		2686652	0					
ANR	2686658	Identifier	link		2686652	1					
ANR	2686659	AssignmentExpression	link = ( inst >> 24 ) & 0x01		2686652	2		=			
ANR	2686660	Identifier	link		2686652	0					
ANR	2686661	BitAndExpression	( inst >> 24 ) & 0x01		2686652	1		&			
ANR	2686662	ShiftExpression	inst >> 24		2686652	0		>>			
ANR	2686663	Identifier	inst		2686652	0					
ANR	2686664	PrimaryExpression	24		2686652	1					
ANR	2686665	PrimaryExpression	0x01		2686652	1					
ANR	2686666	IdentifierDeclStatement	int offset = ( inst << 2 ) & 0x03ffffff ;	73:1:1652:1689	2686652	1	True				
ANR	2686667	IdentifierDecl	offset = ( inst << 2 ) & 0x03ffffff		2686652	0					
ANR	2686668	IdentifierDeclType	int		2686652	0					
ANR	2686669	Identifier	offset		2686652	1					
ANR	2686670	AssignmentExpression	offset = ( inst << 2 ) & 0x03ffffff		2686652	2		=			
ANR	2686671	Identifier	offset		2686652	0					
ANR	2686672	BitAndExpression	( inst << 2 ) & 0x03ffffff		2686652	1		&			
ANR	2686673	ShiftExpression	inst << 2		2686652	0		<<			
ANR	2686674	Identifier	inst		2686652	0					
ANR	2686675	PrimaryExpression	2		2686652	1					
ANR	2686676	PrimaryExpression	0x03ffffff		2686652	1					
ANR	2686677	IfStatement	if ( offset & 0x02000000 )		2686652	2					
ANR	2686678	Condition	offset & 0x02000000	75:5:1697:1715	2686652	0	True				
ANR	2686679	BitAndExpression	offset & 0x02000000		2686652	0		&			
ANR	2686680	Identifier	offset		2686652	0					
ANR	2686681	PrimaryExpression	0x02000000		2686652	1					
ANR	2686682	CompoundStatement		5:25:102:102	2686652	1					
ANR	2686683	ExpressionStatement	offset |= 0xfc000000	76:2:1721:1741	2686652	0	True				
ANR	2686684	AssignmentExpression	offset |= 0xfc000000		2686652	0		|=			
ANR	2686685	Identifier	offset		2686652	0					
ANR	2686686	PrimaryExpression	0xfc000000		2686652	1					
ANR	2686687	ExpressionStatement	offset += 8	78:1:1747:1758	2686652	3	True				
ANR	2686688	AssignmentExpression	offset += 8		2686652	0		+=			
ANR	2686689	Identifier	offset		2686652	0					
ANR	2686690	PrimaryExpression	8		2686652	1					
ANR	2686691	Statement	arminsn	79:1:1761:1767	2686652	4	True				
ANR	2686692	Statement	->	79:8:1768:1769	2686652	5	True				
ANR	2686693	Statement	str_asm	79:10:1770:1776	2686652	6	True				
ANR	2686694	Statement	=	79:18:1778:1778	2686652	7	True				
ANR	2686695	Statement	r_str_appendf	79:20:1780:1792	2686652	8	True				
ANR	2686696	Statement	(	79:34:1794:1794	2686652	9	True				
ANR	2686697	Statement	arminsn	79:35:1795:1801	2686652	10	True				
ANR	2686698	Statement	->	79:42:1802:1803	2686652	11	True				
ANR	2686699	Statement	str_asm	79:44:1804:1810	2686652	12	True				
ANR	2686700	Statement	","	79:51:1811:1811	2686652	13	True				
ANR	2686701	Statement	"""b%s%s 0x%"""	79:53:1813:1823	2686652	14	True				
ANR	2686702	Statement	PFMT64x	79:64:1824:1830	2686652	15	True				
ANR	2686703	Statement	","	79:71:1831:1831	2686652	16	True				
ANR	2686704	Statement	link	79:73:1833:1836	2686652	17	True				
ANR	2686705	Statement	?	79:78:1838:1838	2686652	18	True				
ANR	2686706	Statement	"""l"""	79:80:1840:1842	2686652	19	True				
ANR	2686707	Statement	:	79:84:1844:1844	2686652	20	True				
ANR	2686708	Statement	""""""	79:86:1846:1847	2686652	21	True				
ANR	2686709	Statement	","	79:88:1848:1848	2686652	22	True				
ANR	2686710	Statement	get_cond	79:90:1850:1857	2686652	23	True				
ANR	2686711	Statement	(	79:99:1859:1859	2686652	24	True				
ANR	2686712	Statement	inst	79:100:1860:1863	2686652	25	True				
ANR	2686713	Statement	)	79:104:1864:1864	2686652	26	True				
ANR	2686714	Statement	","	79:105:1865:1865	2686652	27	True				
ANR	2686715	Statement	arminsn	79:107:1867:1873	2686652	28	True				
ANR	2686716	Statement	->	79:114:1874:1875	2686652	29	True				
ANR	2686717	Statement	pc	79:116:1876:1877	2686652	30	True				
ANR	2686718	Statement	+	79:118:1878:1878	2686652	31	True				
ANR	2686719	Statement	offset	79:119:1879:1884	2686652	32	True				
ANR	2686720	Statement	)	79:125:1885:1885	2686652	33	True				
ANR	2686721	ExpressionStatement		79:126:1886:1886	2686652	34	True				
ANR	2686722	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	81:1:1890:1923	2686652	35	True				
ANR	2686723	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		2686652	0		=			
ANR	2686724	PtrMemberAccess	arminsn -> jmp		2686652	0					
ANR	2686725	Identifier	arminsn		2686652	0					
ANR	2686726	Identifier	jmp		2686652	1					
ANR	2686727	AdditiveExpression	arminsn -> pc + offset		2686652	1		+			
ANR	2686728	PtrMemberAccess	arminsn -> pc		2686652	0					
ANR	2686729	Identifier	arminsn		2686652	0					
ANR	2686730	Identifier	pc		2686652	1					
ANR	2686731	Identifier	offset		2686652	1					
ANR	2686732	ExpressionStatement	arminsn -> fail = arminsn -> pc + 4	82:1:1926:1955	2686652	36	True				
ANR	2686733	AssignmentExpression	arminsn -> fail = arminsn -> pc + 4		2686652	0		=			
ANR	2686734	PtrMemberAccess	arminsn -> fail		2686652	0					
ANR	2686735	Identifier	arminsn		2686652	0					
ANR	2686736	Identifier	fail		2686652	1					
ANR	2686737	AdditiveExpression	arminsn -> pc + 4		2686652	1		+			
ANR	2686738	PtrMemberAccess	arminsn -> pc		2686652	0					
ANR	2686739	Identifier	arminsn		2686652	0					
ANR	2686740	Identifier	pc		2686652	1					
ANR	2686741	PrimaryExpression	4		2686652	1					
ANR	2686742	ReturnStatement	return 0 ;	83:1:1958:1966	2686652	37	True				
ANR	2686743	PrimaryExpression	0		2686652	0					
ANR	2686744	ReturnType	static ut32		2686652	1					
ANR	2686745	Identifier	arm_disasm_branch		2686652	2					
ANR	2686746	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2686652	3					
ANR	2686747	Parameter	struct winedbg_arm_insn * arminsn	71:30:1569:1600	2686652	0	True				
ANR	2686748	ParameterType	struct winedbg_arm_insn *		2686652	0					
ANR	2686749	Identifier	arminsn		2686652	1					
ANR	2686750	Parameter	ut32 inst	71:64:1603:1611	2686652	1	True				
ANR	2686751	ParameterType	ut32		2686652	0					
ANR	2686752	Identifier	inst		2686652	1					
ANR	2686753	CFGEntryNode	ENTRY		2686652		True				
ANR	2686754	CFGExitNode	EXIT		2686652		True				
ANR	2686755	Symbol	* arminsn		2686652						
ANR	2686756	Symbol	arminsn -> pc		2686652						
ANR	2686757	Symbol	offset		2686652						
ANR	2686758	Symbol	inst		2686652						
ANR	2686759	Symbol	link		2686652						
ANR	2686760	Symbol	arminsn		2686652						
ANR	2686761	Symbol	arminsn -> fail		2686652						
ANR	2686762	Symbol	arminsn -> jmp		2686652						
ANR	2686763	Function	arm_disasm_mul	86:0:1971:2635							
ANR	2686764	FunctionDef	"arm_disasm_mul (struct winedbg_arm_insn * arminsn , ut32 inst)"		2686763	0					
ANR	2686765	CompoundStatement		86:72:2043:2635	2686763	0					
ANR	2686766	IdentifierDeclStatement	short accu = ( inst >> 21 ) & 0x01 ;	87:1:2046:2078	2686763	0	True				
ANR	2686767	IdentifierDecl	accu = ( inst >> 21 ) & 0x01		2686763	0					
ANR	2686768	IdentifierDeclType	short		2686763	0					
ANR	2686769	Identifier	accu		2686763	1					
ANR	2686770	AssignmentExpression	accu = ( inst >> 21 ) & 0x01		2686763	2		=			
ANR	2686771	Identifier	accu		2686763	0					
ANR	2686772	BitAndExpression	( inst >> 21 ) & 0x01		2686763	1		&			
ANR	2686773	ShiftExpression	inst >> 21		2686763	0		>>			
ANR	2686774	Identifier	inst		2686763	0					
ANR	2686775	PrimaryExpression	21		2686763	1					
ANR	2686776	PrimaryExpression	0x01		2686763	1					
ANR	2686777	IdentifierDeclStatement	short condcodes = ( inst >> 20 ) & 0x01 ;	88:1:2081:2118	2686763	1	True				
ANR	2686778	IdentifierDecl	condcodes = ( inst >> 20 ) & 0x01		2686763	0					
ANR	2686779	IdentifierDeclType	short		2686763	0					
ANR	2686780	Identifier	condcodes		2686763	1					
ANR	2686781	AssignmentExpression	condcodes = ( inst >> 20 ) & 0x01		2686763	2		=			
ANR	2686782	Identifier	condcodes		2686763	0					
ANR	2686783	BitAndExpression	( inst >> 20 ) & 0x01		2686763	1		&			
ANR	2686784	ShiftExpression	inst >> 20		2686763	0		>>			
ANR	2686785	Identifier	inst		2686763	0					
ANR	2686786	PrimaryExpression	20		2686763	1					
ANR	2686787	PrimaryExpression	0x01		2686763	1					
ANR	2686788	IfStatement	if ( accu )		2686763	2					
ANR	2686789	Condition	accu	90:5:2126:2129	2686763	0	True				
ANR	2686790	Identifier	accu		2686763	0					
ANR	2686791	CompoundStatement		5:11:88:88	2686763	1					
ANR	2686792	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla%s%s %s, %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"	91:2:2136:2388	2686763	0	True				
ANR	2686793	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla%s%s %s, %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2686763	0		=			
ANR	2686794	PtrMemberAccess	arminsn -> str_asm		2686763	0					
ANR	2686795	Identifier	arminsn		2686763	0					
ANR	2686796	Identifier	str_asm		2686763	1					
ANR	2686797	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mla%s%s %s, %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2686763	1					
ANR	2686798	Callee	r_str_appendf		2686763	0					
ANR	2686799	Identifier	r_str_appendf		2686763	0					
ANR	2686800	ArgumentList	arminsn -> str_asm		2686763	1					
ANR	2686801	Argument	arminsn -> str_asm		2686763	0					
ANR	2686802	PtrMemberAccess	arminsn -> str_asm		2686763	0					
ANR	2686803	Identifier	arminsn		2686763	0					
ANR	2686804	Identifier	str_asm		2686763	1					
ANR	2686805	Argument	"""mla%s%s %s, %s, %s, %s"""		2686763	1					
ANR	2686806	PrimaryExpression	"""mla%s%s %s, %s, %s, %s"""		2686763	0					
ANR	2686807	Argument	get_cond ( inst )		2686763	2					
ANR	2686808	CallExpression	get_cond ( inst )		2686763	0					
ANR	2686809	Callee	get_cond		2686763	0					
ANR	2686810	Identifier	get_cond		2686763	0					
ANR	2686811	ArgumentList	inst		2686763	1					
ANR	2686812	Argument	inst		2686763	0					
ANR	2686813	Identifier	inst		2686763	0					
ANR	2686814	Argument	"condcodes ? ""s"" : """""		2686763	3					
ANR	2686815	ConditionalExpression	"condcodes ? ""s"" : """""		2686763	0					
ANR	2686816	Condition	condcodes		2686763	0					
ANR	2686817	Identifier	condcodes		2686763	0					
ANR	2686818	PrimaryExpression	"""s"""		2686763	1					
ANR	2686819	PrimaryExpression	""""""		2686763	2					
ANR	2686820	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2686763	4					
ANR	2686821	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2686763	0					
ANR	2686822	Identifier	tbl_regs		2686763	0					
ANR	2686823	CallExpression	"get_nibble ( inst , 4 )"		2686763	1					
ANR	2686824	Callee	get_nibble		2686763	0					
ANR	2686825	Identifier	get_nibble		2686763	0					
ANR	2686826	ArgumentList	inst		2686763	1					
ANR	2686827	Argument	inst		2686763	0					
ANR	2686828	Identifier	inst		2686763	0					
ANR	2686829	Argument	4		2686763	1					
ANR	2686830	PrimaryExpression	4		2686763	0					
ANR	2686831	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2686763	5					
ANR	2686832	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2686763	0					
ANR	2686833	Identifier	tbl_regs		2686763	0					
ANR	2686834	CallExpression	"get_nibble ( inst , 0 )"		2686763	1					
ANR	2686835	Callee	get_nibble		2686763	0					
ANR	2686836	Identifier	get_nibble		2686763	0					
ANR	2686837	ArgumentList	inst		2686763	1					
ANR	2686838	Argument	inst		2686763	0					
ANR	2686839	Identifier	inst		2686763	0					
ANR	2686840	Argument	0		2686763	1					
ANR	2686841	PrimaryExpression	0		2686763	0					
ANR	2686842	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2686763	6					
ANR	2686843	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2686763	0					
ANR	2686844	Identifier	tbl_regs		2686763	0					
ANR	2686845	CallExpression	"get_nibble ( inst , 2 )"		2686763	1					
ANR	2686846	Callee	get_nibble		2686763	0					
ANR	2686847	Identifier	get_nibble		2686763	0					
ANR	2686848	ArgumentList	inst		2686763	1					
ANR	2686849	Argument	inst		2686763	0					
ANR	2686850	Identifier	inst		2686763	0					
ANR	2686851	Argument	2		2686763	1					
ANR	2686852	PrimaryExpression	2		2686763	0					
ANR	2686853	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2686763	7					
ANR	2686854	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2686763	0					
ANR	2686855	Identifier	tbl_regs		2686763	0					
ANR	2686856	CallExpression	"get_nibble ( inst , 3 )"		2686763	1					
ANR	2686857	Callee	get_nibble		2686763	0					
ANR	2686858	Identifier	get_nibble		2686763	0					
ANR	2686859	ArgumentList	inst		2686763	1					
ANR	2686860	Argument	inst		2686763	0					
ANR	2686861	Identifier	inst		2686763	0					
ANR	2686862	Argument	3		2686763	1					
ANR	2686863	PrimaryExpression	3		2686763	0					
ANR	2686864	ElseStatement	else		2686763	0					
ANR	2686865	CompoundStatement		10:6:355:355	2686763	0					
ANR	2686866	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul%s%s %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"	96:2:2403:2619	2686763	0	True				
ANR	2686867	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul%s%s %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		2686763	0		=			
ANR	2686868	PtrMemberAccess	arminsn -> str_asm		2686763	0					
ANR	2686869	Identifier	arminsn		2686763	0					
ANR	2686870	Identifier	str_asm		2686763	1					
ANR	2686871	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mul%s%s %s, %s, %s"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		2686763	1					
ANR	2686872	Callee	r_str_appendf		2686763	0					
ANR	2686873	Identifier	r_str_appendf		2686763	0					
ANR	2686874	ArgumentList	arminsn -> str_asm		2686763	1					
ANR	2686875	Argument	arminsn -> str_asm		2686763	0					
ANR	2686876	PtrMemberAccess	arminsn -> str_asm		2686763	0					
ANR	2686877	Identifier	arminsn		2686763	0					
ANR	2686878	Identifier	str_asm		2686763	1					
ANR	2686879	Argument	"""mul%s%s %s, %s, %s"""		2686763	1					
ANR	2686880	PrimaryExpression	"""mul%s%s %s, %s, %s"""		2686763	0					
ANR	2686881	Argument	get_cond ( inst )		2686763	2					
ANR	2686882	CallExpression	get_cond ( inst )		2686763	0					
ANR	2686883	Callee	get_cond		2686763	0					
ANR	2686884	Identifier	get_cond		2686763	0					
ANR	2686885	ArgumentList	inst		2686763	1					
ANR	2686886	Argument	inst		2686763	0					
ANR	2686887	Identifier	inst		2686763	0					
ANR	2686888	Argument	"condcodes ? ""s"" : """""		2686763	3					
ANR	2686889	ConditionalExpression	"condcodes ? ""s"" : """""		2686763	0					
ANR	2686890	Condition	condcodes		2686763	0					
ANR	2686891	Identifier	condcodes		2686763	0					
ANR	2686892	PrimaryExpression	"""s"""		2686763	1					
ANR	2686893	PrimaryExpression	""""""		2686763	2					
ANR	2686894	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2686763	4					
ANR	2686895	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2686763	0					
ANR	2686896	Identifier	tbl_regs		2686763	0					
ANR	2686897	CallExpression	"get_nibble ( inst , 4 )"		2686763	1					
ANR	2686898	Callee	get_nibble		2686763	0					
ANR	2686899	Identifier	get_nibble		2686763	0					
ANR	2686900	ArgumentList	inst		2686763	1					
ANR	2686901	Argument	inst		2686763	0					
ANR	2686902	Identifier	inst		2686763	0					
ANR	2686903	Argument	4		2686763	1					
ANR	2686904	PrimaryExpression	4		2686763	0					
ANR	2686905	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2686763	5					
ANR	2686906	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2686763	0					
ANR	2686907	Identifier	tbl_regs		2686763	0					
ANR	2686908	CallExpression	"get_nibble ( inst , 0 )"		2686763	1					
ANR	2686909	Callee	get_nibble		2686763	0					
ANR	2686910	Identifier	get_nibble		2686763	0					
ANR	2686911	ArgumentList	inst		2686763	1					
ANR	2686912	Argument	inst		2686763	0					
ANR	2686913	Identifier	inst		2686763	0					
ANR	2686914	Argument	0		2686763	1					
ANR	2686915	PrimaryExpression	0		2686763	0					
ANR	2686916	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2686763	6					
ANR	2686917	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2686763	0					
ANR	2686918	Identifier	tbl_regs		2686763	0					
ANR	2686919	CallExpression	"get_nibble ( inst , 2 )"		2686763	1					
ANR	2686920	Callee	get_nibble		2686763	0					
ANR	2686921	Identifier	get_nibble		2686763	0					
ANR	2686922	ArgumentList	inst		2686763	1					
ANR	2686923	Argument	inst		2686763	0					
ANR	2686924	Identifier	inst		2686763	0					
ANR	2686925	Argument	2		2686763	1					
ANR	2686926	PrimaryExpression	2		2686763	0					
ANR	2686927	ReturnStatement	return 0 ;	100:1:2625:2633	2686763	3	True				
ANR	2686928	PrimaryExpression	0		2686763	0					
ANR	2686929	ReturnType	static ut32		2686763	1					
ANR	2686930	Identifier	arm_disasm_mul		2686763	2					
ANR	2686931	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2686763	3					
ANR	2686932	Parameter	struct winedbg_arm_insn * arminsn	86:27:1998:2029	2686763	0	True				
ANR	2686933	ParameterType	struct winedbg_arm_insn *		2686763	0					
ANR	2686934	Identifier	arminsn		2686763	1					
ANR	2686935	Parameter	ut32 inst	86:61:2032:2040	2686763	1	True				
ANR	2686936	ParameterType	ut32		2686763	0					
ANR	2686937	Identifier	inst		2686763	1					
ANR	2686938	CFGEntryNode	ENTRY		2686763		True				
ANR	2686939	CFGExitNode	EXIT		2686763		True				
ANR	2686940	Symbol	* arminsn		2686763						
ANR	2686941	Symbol	get_cond		2686763						
ANR	2686942	Symbol	get_nibble		2686763						
ANR	2686943	Symbol	condcodes		2686763						
ANR	2686944	Symbol	tbl_regs		2686763						
ANR	2686945	Symbol	* tbl_regs		2686763						
ANR	2686946	Symbol	inst		2686763						
ANR	2686947	Symbol	r_str_appendf		2686763						
ANR	2686948	Symbol	accu		2686763						
ANR	2686949	Symbol	* get_nibble		2686763						
ANR	2686950	Symbol	arminsn		2686763						
ANR	2686951	Symbol	arminsn -> str_asm		2686763						
ANR	2686952	Function	arm_disasm_longmul	103:0:2638:3137							
ANR	2686953	FunctionDef	"arm_disasm_longmul (struct winedbg_arm_insn * arminsn , ut32 inst)"		2686952	0					
ANR	2686954	CompoundStatement		103:76:2714:3137	2686952	0					
ANR	2686955	IdentifierDeclStatement	short sign = ( inst >> 22 ) & 0x01 ;	104:1:2717:2749	2686952	0	True				
ANR	2686956	IdentifierDecl	sign = ( inst >> 22 ) & 0x01		2686952	0					
ANR	2686957	IdentifierDeclType	short		2686952	0					
ANR	2686958	Identifier	sign		2686952	1					
ANR	2686959	AssignmentExpression	sign = ( inst >> 22 ) & 0x01		2686952	2		=			
ANR	2686960	Identifier	sign		2686952	0					
ANR	2686961	BitAndExpression	( inst >> 22 ) & 0x01		2686952	1		&			
ANR	2686962	ShiftExpression	inst >> 22		2686952	0		>>			
ANR	2686963	Identifier	inst		2686952	0					
ANR	2686964	PrimaryExpression	22		2686952	1					
ANR	2686965	PrimaryExpression	0x01		2686952	1					
ANR	2686966	IdentifierDeclStatement	short accu = ( inst >> 21 ) & 0x01 ;	105:1:2752:2784	2686952	1	True				
ANR	2686967	IdentifierDecl	accu = ( inst >> 21 ) & 0x01		2686952	0					
ANR	2686968	IdentifierDeclType	short		2686952	0					
ANR	2686969	Identifier	accu		2686952	1					
ANR	2686970	AssignmentExpression	accu = ( inst >> 21 ) & 0x01		2686952	2		=			
ANR	2686971	Identifier	accu		2686952	0					
ANR	2686972	BitAndExpression	( inst >> 21 ) & 0x01		2686952	1		&			
ANR	2686973	ShiftExpression	inst >> 21		2686952	0		>>			
ANR	2686974	Identifier	inst		2686952	0					
ANR	2686975	PrimaryExpression	21		2686952	1					
ANR	2686976	PrimaryExpression	0x01		2686952	1					
ANR	2686977	IdentifierDeclStatement	short condcodes = ( inst >> 20 ) & 0x01 ;	106:1:2787:2824	2686952	2	True				
ANR	2686978	IdentifierDecl	condcodes = ( inst >> 20 ) & 0x01		2686952	0					
ANR	2686979	IdentifierDeclType	short		2686952	0					
ANR	2686980	Identifier	condcodes		2686952	1					
ANR	2686981	AssignmentExpression	condcodes = ( inst >> 20 ) & 0x01		2686952	2		=			
ANR	2686982	Identifier	condcodes		2686952	0					
ANR	2686983	BitAndExpression	( inst >> 20 ) & 0x01		2686952	1		&			
ANR	2686984	ShiftExpression	inst >> 20		2686952	0		>>			
ANR	2686985	Identifier	inst		2686952	0					
ANR	2686986	PrimaryExpression	20		2686952	1					
ANR	2686987	PrimaryExpression	0x01		2686952	1					
ANR	2686988	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s %s, %s, %s, %s"" , sign ? ""s"" : ""u"" , accu ? ""mlal"" : ""mull"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"	108:1:2828:3124	2686952	3	True				
ANR	2686989	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s %s, %s, %s, %s"" , sign ? ""s"" : ""u"" , accu ? ""mlal"" : ""mull"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		2686952	0		=			
ANR	2686990	PtrMemberAccess	arminsn -> str_asm		2686952	0					
ANR	2686991	Identifier	arminsn		2686952	0					
ANR	2686992	Identifier	str_asm		2686952	1					
ANR	2686993	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s %s, %s, %s, %s"" , sign ? ""s"" : ""u"" , accu ? ""mlal"" : ""mull"" , get_cond ( inst ) , condcodes ? ""s"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] )"		2686952	1					
ANR	2686994	Callee	r_str_appendf		2686952	0					
ANR	2686995	Identifier	r_str_appendf		2686952	0					
ANR	2686996	ArgumentList	arminsn -> str_asm		2686952	1					
ANR	2686997	Argument	arminsn -> str_asm		2686952	0					
ANR	2686998	PtrMemberAccess	arminsn -> str_asm		2686952	0					
ANR	2686999	Identifier	arminsn		2686952	0					
ANR	2687000	Identifier	str_asm		2686952	1					
ANR	2687001	Argument	"""%s%s%s%s %s, %s, %s, %s"""		2686952	1					
ANR	2687002	PrimaryExpression	"""%s%s%s%s %s, %s, %s, %s"""		2686952	0					
ANR	2687003	Argument	"sign ? ""s"" : ""u"""		2686952	2					
ANR	2687004	ConditionalExpression	"sign ? ""s"" : ""u"""		2686952	0					
ANR	2687005	Condition	sign		2686952	0					
ANR	2687006	Identifier	sign		2686952	0					
ANR	2687007	PrimaryExpression	"""s"""		2686952	1					
ANR	2687008	PrimaryExpression	"""u"""		2686952	2					
ANR	2687009	Argument	"accu ? ""mlal"" : ""mull"""		2686952	3					
ANR	2687010	ConditionalExpression	"accu ? ""mlal"" : ""mull"""		2686952	0					
ANR	2687011	Condition	accu		2686952	0					
ANR	2687012	Identifier	accu		2686952	0					
ANR	2687013	PrimaryExpression	"""mlal"""		2686952	1					
ANR	2687014	PrimaryExpression	"""mull"""		2686952	2					
ANR	2687015	Argument	get_cond ( inst )		2686952	4					
ANR	2687016	CallExpression	get_cond ( inst )		2686952	0					
ANR	2687017	Callee	get_cond		2686952	0					
ANR	2687018	Identifier	get_cond		2686952	0					
ANR	2687019	ArgumentList	inst		2686952	1					
ANR	2687020	Argument	inst		2686952	0					
ANR	2687021	Identifier	inst		2686952	0					
ANR	2687022	Argument	"condcodes ? ""s"" : """""		2686952	5					
ANR	2687023	ConditionalExpression	"condcodes ? ""s"" : """""		2686952	0					
ANR	2687024	Condition	condcodes		2686952	0					
ANR	2687025	Identifier	condcodes		2686952	0					
ANR	2687026	PrimaryExpression	"""s"""		2686952	1					
ANR	2687027	PrimaryExpression	""""""		2686952	2					
ANR	2687028	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2686952	6					
ANR	2687029	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2686952	0					
ANR	2687030	Identifier	tbl_regs		2686952	0					
ANR	2687031	CallExpression	"get_nibble ( inst , 3 )"		2686952	1					
ANR	2687032	Callee	get_nibble		2686952	0					
ANR	2687033	Identifier	get_nibble		2686952	0					
ANR	2687034	ArgumentList	inst		2686952	1					
ANR	2687035	Argument	inst		2686952	0					
ANR	2687036	Identifier	inst		2686952	0					
ANR	2687037	Argument	3		2686952	1					
ANR	2687038	PrimaryExpression	3		2686952	0					
ANR	2687039	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2686952	7					
ANR	2687040	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2686952	0					
ANR	2687041	Identifier	tbl_regs		2686952	0					
ANR	2687042	CallExpression	"get_nibble ( inst , 4 )"		2686952	1					
ANR	2687043	Callee	get_nibble		2686952	0					
ANR	2687044	Identifier	get_nibble		2686952	0					
ANR	2687045	ArgumentList	inst		2686952	1					
ANR	2687046	Argument	inst		2686952	0					
ANR	2687047	Identifier	inst		2686952	0					
ANR	2687048	Argument	4		2686952	1					
ANR	2687049	PrimaryExpression	4		2686952	0					
ANR	2687050	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2686952	8					
ANR	2687051	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2686952	0					
ANR	2687052	Identifier	tbl_regs		2686952	0					
ANR	2687053	CallExpression	"get_nibble ( inst , 0 )"		2686952	1					
ANR	2687054	Callee	get_nibble		2686952	0					
ANR	2687055	Identifier	get_nibble		2686952	0					
ANR	2687056	ArgumentList	inst		2686952	1					
ANR	2687057	Argument	inst		2686952	0					
ANR	2687058	Identifier	inst		2686952	0					
ANR	2687059	Argument	0		2686952	1					
ANR	2687060	PrimaryExpression	0		2686952	0					
ANR	2687061	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2686952	9					
ANR	2687062	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2686952	0					
ANR	2687063	Identifier	tbl_regs		2686952	0					
ANR	2687064	CallExpression	"get_nibble ( inst , 2 )"		2686952	1					
ANR	2687065	Callee	get_nibble		2686952	0					
ANR	2687066	Identifier	get_nibble		2686952	0					
ANR	2687067	ArgumentList	inst		2686952	1					
ANR	2687068	Argument	inst		2686952	0					
ANR	2687069	Identifier	inst		2686952	0					
ANR	2687070	Argument	2		2686952	1					
ANR	2687071	PrimaryExpression	2		2686952	0					
ANR	2687072	ReturnStatement	return 0 ;	112:1:3127:3135	2686952	4	True				
ANR	2687073	PrimaryExpression	0		2686952	0					
ANR	2687074	ReturnType	static ut32		2686952	1					
ANR	2687075	Identifier	arm_disasm_longmul		2686952	2					
ANR	2687076	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2686952	3					
ANR	2687077	Parameter	struct winedbg_arm_insn * arminsn	103:31:2669:2700	2686952	0	True				
ANR	2687078	ParameterType	struct winedbg_arm_insn *		2686952	0					
ANR	2687079	Identifier	arminsn		2686952	1					
ANR	2687080	Parameter	ut32 inst	103:65:2703:2711	2686952	1	True				
ANR	2687081	ParameterType	ut32		2686952	0					
ANR	2687082	Identifier	inst		2686952	1					
ANR	2687083	CFGEntryNode	ENTRY		2686952		True				
ANR	2687084	CFGExitNode	EXIT		2686952		True				
ANR	2687085	Symbol	get_cond		2686952						
ANR	2687086	Symbol	tbl_regs		2686952						
ANR	2687087	Symbol	sign		2686952						
ANR	2687088	Symbol	arminsn		2686952						
ANR	2687089	Symbol	arminsn -> str_asm		2686952						
ANR	2687090	Symbol	* arminsn		2686952						
ANR	2687091	Symbol	get_nibble		2686952						
ANR	2687092	Symbol	condcodes		2686952						
ANR	2687093	Symbol	* tbl_regs		2686952						
ANR	2687094	Symbol	inst		2686952						
ANR	2687095	Symbol	r_str_appendf		2686952						
ANR	2687096	Symbol	accu		2686952						
ANR	2687097	Symbol	* get_nibble		2686952						
ANR	2687098	Function	arm_disasm_swp	115:0:3140:3475							
ANR	2687099	FunctionDef	"arm_disasm_swp (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687098	0					
ANR	2687100	CompoundStatement		115:72:3212:3475	2687098	0					
ANR	2687101	IdentifierDeclStatement	short byte = ( inst >> 22 ) & 0x01 ;	116:1:3215:3247	2687098	0	True				
ANR	2687102	IdentifierDecl	byte = ( inst >> 22 ) & 0x01		2687098	0					
ANR	2687103	IdentifierDeclType	short		2687098	0					
ANR	2687104	Identifier	byte		2687098	1					
ANR	2687105	AssignmentExpression	byte = ( inst >> 22 ) & 0x01		2687098	2		=			
ANR	2687106	Identifier	byte		2687098	0					
ANR	2687107	BitAndExpression	( inst >> 22 ) & 0x01		2687098	1		&			
ANR	2687108	ShiftExpression	inst >> 22		2687098	0		>>			
ANR	2687109	Identifier	inst		2687098	0					
ANR	2687110	PrimaryExpression	22		2687098	1					
ANR	2687111	PrimaryExpression	0x01		2687098	1					
ANR	2687112	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swp%s%s %s, %s, [%s]"" , get_cond ( inst ) , byte ? ""b"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] )"	118:1:3251:3462	2687098	1	True				
ANR	2687113	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swp%s%s %s, %s, [%s]"" , get_cond ( inst ) , byte ? ""b"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] )"		2687098	0		=			
ANR	2687114	PtrMemberAccess	arminsn -> str_asm		2687098	0					
ANR	2687115	Identifier	arminsn		2687098	0					
ANR	2687116	Identifier	str_asm		2687098	1					
ANR	2687117	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""swp%s%s %s, %s, [%s]"" , get_cond ( inst ) , byte ? ""b"" : """" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] )"		2687098	1					
ANR	2687118	Callee	r_str_appendf		2687098	0					
ANR	2687119	Identifier	r_str_appendf		2687098	0					
ANR	2687120	ArgumentList	arminsn -> str_asm		2687098	1					
ANR	2687121	Argument	arminsn -> str_asm		2687098	0					
ANR	2687122	PtrMemberAccess	arminsn -> str_asm		2687098	0					
ANR	2687123	Identifier	arminsn		2687098	0					
ANR	2687124	Identifier	str_asm		2687098	1					
ANR	2687125	Argument	"""swp%s%s %s, %s, [%s]"""		2687098	1					
ANR	2687126	PrimaryExpression	"""swp%s%s %s, %s, [%s]"""		2687098	0					
ANR	2687127	Argument	get_cond ( inst )		2687098	2					
ANR	2687128	CallExpression	get_cond ( inst )		2687098	0					
ANR	2687129	Callee	get_cond		2687098	0					
ANR	2687130	Identifier	get_cond		2687098	0					
ANR	2687131	ArgumentList	inst		2687098	1					
ANR	2687132	Argument	inst		2687098	0					
ANR	2687133	Identifier	inst		2687098	0					
ANR	2687134	Argument	"byte ? ""b"" : """""		2687098	3					
ANR	2687135	ConditionalExpression	"byte ? ""b"" : """""		2687098	0					
ANR	2687136	Condition	byte		2687098	0					
ANR	2687137	Identifier	byte		2687098	0					
ANR	2687138	PrimaryExpression	"""b"""		2687098	1					
ANR	2687139	PrimaryExpression	""""""		2687098	2					
ANR	2687140	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687098	4					
ANR	2687141	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687098	0					
ANR	2687142	Identifier	tbl_regs		2687098	0					
ANR	2687143	CallExpression	"get_nibble ( inst , 3 )"		2687098	1					
ANR	2687144	Callee	get_nibble		2687098	0					
ANR	2687145	Identifier	get_nibble		2687098	0					
ANR	2687146	ArgumentList	inst		2687098	1					
ANR	2687147	Argument	inst		2687098	0					
ANR	2687148	Identifier	inst		2687098	0					
ANR	2687149	Argument	3		2687098	1					
ANR	2687150	PrimaryExpression	3		2687098	0					
ANR	2687151	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687098	5					
ANR	2687152	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687098	0					
ANR	2687153	Identifier	tbl_regs		2687098	0					
ANR	2687154	CallExpression	"get_nibble ( inst , 0 )"		2687098	1					
ANR	2687155	Callee	get_nibble		2687098	0					
ANR	2687156	Identifier	get_nibble		2687098	0					
ANR	2687157	ArgumentList	inst		2687098	1					
ANR	2687158	Argument	inst		2687098	0					
ANR	2687159	Identifier	inst		2687098	0					
ANR	2687160	Argument	0		2687098	1					
ANR	2687161	PrimaryExpression	0		2687098	0					
ANR	2687162	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687098	6					
ANR	2687163	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687098	0					
ANR	2687164	Identifier	tbl_regs		2687098	0					
ANR	2687165	CallExpression	"get_nibble ( inst , 4 )"		2687098	1					
ANR	2687166	Callee	get_nibble		2687098	0					
ANR	2687167	Identifier	get_nibble		2687098	0					
ANR	2687168	ArgumentList	inst		2687098	1					
ANR	2687169	Argument	inst		2687098	0					
ANR	2687170	Identifier	inst		2687098	0					
ANR	2687171	Argument	4		2687098	1					
ANR	2687172	PrimaryExpression	4		2687098	0					
ANR	2687173	ReturnStatement	return 0 ;	121:1:3465:3473	2687098	2	True				
ANR	2687174	PrimaryExpression	0		2687098	0					
ANR	2687175	ReturnType	static ut32		2687098	1					
ANR	2687176	Identifier	arm_disasm_swp		2687098	2					
ANR	2687177	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687098	3					
ANR	2687178	Parameter	struct winedbg_arm_insn * arminsn	115:27:3167:3198	2687098	0	True				
ANR	2687179	ParameterType	struct winedbg_arm_insn *		2687098	0					
ANR	2687180	Identifier	arminsn		2687098	1					
ANR	2687181	Parameter	ut32 inst	115:61:3201:3209	2687098	1	True				
ANR	2687182	ParameterType	ut32		2687098	0					
ANR	2687183	Identifier	inst		2687098	1					
ANR	2687184	CFGEntryNode	ENTRY		2687098		True				
ANR	2687185	CFGExitNode	EXIT		2687098		True				
ANR	2687186	Symbol	* arminsn		2687098						
ANR	2687187	Symbol	get_nibble		2687098						
ANR	2687188	Symbol	get_cond		2687098						
ANR	2687189	Symbol	byte		2687098						
ANR	2687190	Symbol	* tbl_regs		2687098						
ANR	2687191	Symbol	tbl_regs		2687098						
ANR	2687192	Symbol	inst		2687098						
ANR	2687193	Symbol	r_str_appendf		2687098						
ANR	2687194	Symbol	* get_nibble		2687098						
ANR	2687195	Symbol	arminsn		2687098						
ANR	2687196	Symbol	arminsn -> str_asm		2687098						
ANR	2687197	Function	arm_disasm_branchreg	124:0:3478:3682							
ANR	2687198	FunctionDef	"arm_disasm_branchreg (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687197	0					
ANR	2687199	CompoundStatement		124:78:3556:3682	2687197	0					
ANR	2687200	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"	125:1:3559:3669	2687197	0	True				
ANR	2687201	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687197	0		=			
ANR	2687202	PtrMemberAccess	arminsn -> str_asm		2687197	0					
ANR	2687203	Identifier	arminsn		2687197	0					
ANR	2687204	Identifier	str_asm		2687197	1					
ANR	2687205	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""b%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687197	1					
ANR	2687206	Callee	r_str_appendf		2687197	0					
ANR	2687207	Identifier	r_str_appendf		2687197	0					
ANR	2687208	ArgumentList	arminsn -> str_asm		2687197	1					
ANR	2687209	Argument	arminsn -> str_asm		2687197	0					
ANR	2687210	PtrMemberAccess	arminsn -> str_asm		2687197	0					
ANR	2687211	Identifier	arminsn		2687197	0					
ANR	2687212	Identifier	str_asm		2687197	1					
ANR	2687213	Argument	"""b%s %s"""		2687197	1					
ANR	2687214	PrimaryExpression	"""b%s %s"""		2687197	0					
ANR	2687215	Argument	get_cond ( inst )		2687197	2					
ANR	2687216	CallExpression	get_cond ( inst )		2687197	0					
ANR	2687217	Callee	get_cond		2687197	0					
ANR	2687218	Identifier	get_cond		2687197	0					
ANR	2687219	ArgumentList	inst		2687197	1					
ANR	2687220	Argument	inst		2687197	0					
ANR	2687221	Identifier	inst		2687197	0					
ANR	2687222	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687197	3					
ANR	2687223	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687197	0					
ANR	2687224	Identifier	tbl_regs		2687197	0					
ANR	2687225	CallExpression	"get_nibble ( inst , 0 )"		2687197	1					
ANR	2687226	Callee	get_nibble		2687197	0					
ANR	2687227	Identifier	get_nibble		2687197	0					
ANR	2687228	ArgumentList	inst		2687197	1					
ANR	2687229	Argument	inst		2687197	0					
ANR	2687230	Identifier	inst		2687197	0					
ANR	2687231	Argument	0		2687197	1					
ANR	2687232	PrimaryExpression	0		2687197	0					
ANR	2687233	ReturnStatement	return 0 ;	126:1:3672:3680	2687197	1	True				
ANR	2687234	PrimaryExpression	0		2687197	0					
ANR	2687235	ReturnType	static ut32		2687197	1					
ANR	2687236	Identifier	arm_disasm_branchreg		2687197	2					
ANR	2687237	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687197	3					
ANR	2687238	Parameter	struct winedbg_arm_insn * arminsn	124:33:3511:3542	2687197	0	True				
ANR	2687239	ParameterType	struct winedbg_arm_insn *		2687197	0					
ANR	2687240	Identifier	arminsn		2687197	1					
ANR	2687241	Parameter	ut32 inst	124:67:3545:3553	2687197	1	True				
ANR	2687242	ParameterType	ut32		2687197	0					
ANR	2687243	Identifier	inst		2687197	1					
ANR	2687244	CFGEntryNode	ENTRY		2687197		True				
ANR	2687245	CFGExitNode	EXIT		2687197		True				
ANR	2687246	Symbol	* arminsn		2687197						
ANR	2687247	Symbol	get_cond		2687197						
ANR	2687248	Symbol	get_nibble		2687197						
ANR	2687249	Symbol	tbl_regs		2687197						
ANR	2687250	Symbol	* tbl_regs		2687197						
ANR	2687251	Symbol	inst		2687197						
ANR	2687252	Symbol	r_str_appendf		2687197						
ANR	2687253	Symbol	* get_nibble		2687197						
ANR	2687254	Symbol	arminsn		2687197						
ANR	2687255	Symbol	arminsn -> str_asm		2687197						
ANR	2687256	Function	arm_disasm_branchxchg	129:0:3685:3891							
ANR	2687257	FunctionDef	"arm_disasm_branchxchg (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687256	0					
ANR	2687258	CompoundStatement		129:79:3764:3891	2687256	0					
ANR	2687259	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""bx%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"	130:1:3767:3878	2687256	0	True				
ANR	2687260	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""bx%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687256	0		=			
ANR	2687261	PtrMemberAccess	arminsn -> str_asm		2687256	0					
ANR	2687262	Identifier	arminsn		2687256	0					
ANR	2687263	Identifier	str_asm		2687256	1					
ANR	2687264	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""bx%s %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687256	1					
ANR	2687265	Callee	r_str_appendf		2687256	0					
ANR	2687266	Identifier	r_str_appendf		2687256	0					
ANR	2687267	ArgumentList	arminsn -> str_asm		2687256	1					
ANR	2687268	Argument	arminsn -> str_asm		2687256	0					
ANR	2687269	PtrMemberAccess	arminsn -> str_asm		2687256	0					
ANR	2687270	Identifier	arminsn		2687256	0					
ANR	2687271	Identifier	str_asm		2687256	1					
ANR	2687272	Argument	"""bx%s %s"""		2687256	1					
ANR	2687273	PrimaryExpression	"""bx%s %s"""		2687256	0					
ANR	2687274	Argument	get_cond ( inst )		2687256	2					
ANR	2687275	CallExpression	get_cond ( inst )		2687256	0					
ANR	2687276	Callee	get_cond		2687256	0					
ANR	2687277	Identifier	get_cond		2687256	0					
ANR	2687278	ArgumentList	inst		2687256	1					
ANR	2687279	Argument	inst		2687256	0					
ANR	2687280	Identifier	inst		2687256	0					
ANR	2687281	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687256	3					
ANR	2687282	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687256	0					
ANR	2687283	Identifier	tbl_regs		2687256	0					
ANR	2687284	CallExpression	"get_nibble ( inst , 0 )"		2687256	1					
ANR	2687285	Callee	get_nibble		2687256	0					
ANR	2687286	Identifier	get_nibble		2687256	0					
ANR	2687287	ArgumentList	inst		2687256	1					
ANR	2687288	Argument	inst		2687256	0					
ANR	2687289	Identifier	inst		2687256	0					
ANR	2687290	Argument	0		2687256	1					
ANR	2687291	PrimaryExpression	0		2687256	0					
ANR	2687292	ReturnStatement	return 0 ;	131:1:3881:3889	2687256	1	True				
ANR	2687293	PrimaryExpression	0		2687256	0					
ANR	2687294	ReturnType	static ut32		2687256	1					
ANR	2687295	Identifier	arm_disasm_branchxchg		2687256	2					
ANR	2687296	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687256	3					
ANR	2687297	Parameter	struct winedbg_arm_insn * arminsn	129:34:3719:3750	2687256	0	True				
ANR	2687298	ParameterType	struct winedbg_arm_insn *		2687256	0					
ANR	2687299	Identifier	arminsn		2687256	1					
ANR	2687300	Parameter	ut32 inst	129:68:3753:3761	2687256	1	True				
ANR	2687301	ParameterType	ut32		2687256	0					
ANR	2687302	Identifier	inst		2687256	1					
ANR	2687303	CFGEntryNode	ENTRY		2687256		True				
ANR	2687304	CFGExitNode	EXIT		2687256		True				
ANR	2687305	Symbol	* arminsn		2687256						
ANR	2687306	Symbol	get_nibble		2687256						
ANR	2687307	Symbol	get_cond		2687256						
ANR	2687308	Symbol	tbl_regs		2687256						
ANR	2687309	Symbol	* tbl_regs		2687256						
ANR	2687310	Symbol	inst		2687256						
ANR	2687311	Symbol	r_str_appendf		2687256						
ANR	2687312	Symbol	* get_nibble		2687256						
ANR	2687313	Symbol	arminsn		2687256						
ANR	2687314	Symbol	arminsn -> str_asm		2687256						
ANR	2687315	Function	arm_disasm_mrstrans	134:0:3894:4164							
ANR	2687316	FunctionDef	"arm_disasm_mrstrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687315	0					
ANR	2687317	CompoundStatement		134:77:3971:4164	2687315	0					
ANR	2687318	IdentifierDeclStatement	short src = ( inst >> 22 ) & 0x01 ;	135:1:3974:4005	2687315	0	True				
ANR	2687319	IdentifierDecl	src = ( inst >> 22 ) & 0x01		2687315	0					
ANR	2687320	IdentifierDeclType	short		2687315	0					
ANR	2687321	Identifier	src		2687315	1					
ANR	2687322	AssignmentExpression	src = ( inst >> 22 ) & 0x01		2687315	2		=			
ANR	2687323	Identifier	src		2687315	0					
ANR	2687324	BitAndExpression	( inst >> 22 ) & 0x01		2687315	1		&			
ANR	2687325	ShiftExpression	inst >> 22		2687315	0		>>			
ANR	2687326	Identifier	inst		2687315	0					
ANR	2687327	PrimaryExpression	22		2687315	1					
ANR	2687328	PrimaryExpression	0x01		2687315	1					
ANR	2687329	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mrs%s %s, %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , src ? ""spsr"" : ""cpsr"" )"	137:1:4009:4151	2687315	1	True				
ANR	2687330	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mrs%s %s, %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , src ? ""spsr"" : ""cpsr"" )"		2687315	0		=			
ANR	2687331	PtrMemberAccess	arminsn -> str_asm		2687315	0					
ANR	2687332	Identifier	arminsn		2687315	0					
ANR	2687333	Identifier	str_asm		2687315	1					
ANR	2687334	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mrs%s %s, %s"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , src ? ""spsr"" : ""cpsr"" )"		2687315	1					
ANR	2687335	Callee	r_str_appendf		2687315	0					
ANR	2687336	Identifier	r_str_appendf		2687315	0					
ANR	2687337	ArgumentList	arminsn -> str_asm		2687315	1					
ANR	2687338	Argument	arminsn -> str_asm		2687315	0					
ANR	2687339	PtrMemberAccess	arminsn -> str_asm		2687315	0					
ANR	2687340	Identifier	arminsn		2687315	0					
ANR	2687341	Identifier	str_asm		2687315	1					
ANR	2687342	Argument	"""mrs%s %s, %s"""		2687315	1					
ANR	2687343	PrimaryExpression	"""mrs%s %s, %s"""		2687315	0					
ANR	2687344	Argument	get_cond ( inst )		2687315	2					
ANR	2687345	CallExpression	get_cond ( inst )		2687315	0					
ANR	2687346	Callee	get_cond		2687315	0					
ANR	2687347	Identifier	get_cond		2687315	0					
ANR	2687348	ArgumentList	inst		2687315	1					
ANR	2687349	Argument	inst		2687315	0					
ANR	2687350	Identifier	inst		2687315	0					
ANR	2687351	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687315	3					
ANR	2687352	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687315	0					
ANR	2687353	Identifier	tbl_regs		2687315	0					
ANR	2687354	CallExpression	"get_nibble ( inst , 3 )"		2687315	1					
ANR	2687355	Callee	get_nibble		2687315	0					
ANR	2687356	Identifier	get_nibble		2687315	0					
ANR	2687357	ArgumentList	inst		2687315	1					
ANR	2687358	Argument	inst		2687315	0					
ANR	2687359	Identifier	inst		2687315	0					
ANR	2687360	Argument	3		2687315	1					
ANR	2687361	PrimaryExpression	3		2687315	0					
ANR	2687362	Argument	"src ? ""spsr"" : ""cpsr"""		2687315	4					
ANR	2687363	ConditionalExpression	"src ? ""spsr"" : ""cpsr"""		2687315	0					
ANR	2687364	Condition	src		2687315	0					
ANR	2687365	Identifier	src		2687315	0					
ANR	2687366	PrimaryExpression	"""spsr"""		2687315	1					
ANR	2687367	PrimaryExpression	"""cpsr"""		2687315	2					
ANR	2687368	ReturnStatement	return 0 ;	139:1:4154:4162	2687315	2	True				
ANR	2687369	PrimaryExpression	0		2687315	0					
ANR	2687370	ReturnType	static ut32		2687315	1					
ANR	2687371	Identifier	arm_disasm_mrstrans		2687315	2					
ANR	2687372	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687315	3					
ANR	2687373	Parameter	struct winedbg_arm_insn * arminsn	134:32:3926:3957	2687315	0	True				
ANR	2687374	ParameterType	struct winedbg_arm_insn *		2687315	0					
ANR	2687375	Identifier	arminsn		2687315	1					
ANR	2687376	Parameter	ut32 inst	134:66:3960:3968	2687315	1	True				
ANR	2687377	ParameterType	ut32		2687315	0					
ANR	2687378	Identifier	inst		2687315	1					
ANR	2687379	CFGEntryNode	ENTRY		2687315		True				
ANR	2687380	CFGExitNode	EXIT		2687315		True				
ANR	2687381	Symbol	* arminsn		2687315						
ANR	2687382	Symbol	get_nibble		2687315						
ANR	2687383	Symbol	get_cond		2687315						
ANR	2687384	Symbol	src		2687315						
ANR	2687385	Symbol	* tbl_regs		2687315						
ANR	2687386	Symbol	tbl_regs		2687315						
ANR	2687387	Symbol	inst		2687315						
ANR	2687388	Symbol	r_str_appendf		2687315						
ANR	2687389	Symbol	* get_nibble		2687315						
ANR	2687390	Symbol	arminsn		2687315						
ANR	2687391	Symbol	arminsn -> str_asm		2687315						
ANR	2687392	Function	arm_disasm_msrtrans	142:0:4167:4721							
ANR	2687393	FunctionDef	"arm_disasm_msrtrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687392	0					
ANR	2687394	CompoundStatement		142:77:4244:4721	2687392	0					
ANR	2687395	IdentifierDeclStatement	short immediate = ( inst >> 25 ) & 0x01 ;	143:1:4247:4284	2687392	0	True				
ANR	2687396	IdentifierDecl	immediate = ( inst >> 25 ) & 0x01		2687392	0					
ANR	2687397	IdentifierDeclType	short		2687392	0					
ANR	2687398	Identifier	immediate		2687392	1					
ANR	2687399	AssignmentExpression	immediate = ( inst >> 25 ) & 0x01		2687392	2		=			
ANR	2687400	Identifier	immediate		2687392	0					
ANR	2687401	BitAndExpression	( inst >> 25 ) & 0x01		2687392	1		&			
ANR	2687402	ShiftExpression	inst >> 25		2687392	0		>>			
ANR	2687403	Identifier	inst		2687392	0					
ANR	2687404	PrimaryExpression	25		2687392	1					
ANR	2687405	PrimaryExpression	0x01		2687392	1					
ANR	2687406	IdentifierDeclStatement	short dst = ( inst >> 22 ) & 0x01 ;	144:1:4287:4318	2687392	1	True				
ANR	2687407	IdentifierDecl	dst = ( inst >> 22 ) & 0x01		2687392	0					
ANR	2687408	IdentifierDeclType	short		2687392	0					
ANR	2687409	Identifier	dst		2687392	1					
ANR	2687410	AssignmentExpression	dst = ( inst >> 22 ) & 0x01		2687392	2		=			
ANR	2687411	Identifier	dst		2687392	0					
ANR	2687412	BitAndExpression	( inst >> 22 ) & 0x01		2687392	1		&			
ANR	2687413	ShiftExpression	inst >> 22		2687392	0		>>			
ANR	2687414	Identifier	inst		2687392	0					
ANR	2687415	PrimaryExpression	22		2687392	1					
ANR	2687416	PrimaryExpression	0x01		2687392	1					
ANR	2687417	IdentifierDeclStatement	short simple = ( inst >> 16 ) & 0x01 ;	145:1:4321:4355	2687392	2	True				
ANR	2687418	IdentifierDecl	simple = ( inst >> 16 ) & 0x01		2687392	0					
ANR	2687419	IdentifierDeclType	short		2687392	0					
ANR	2687420	Identifier	simple		2687392	1					
ANR	2687421	AssignmentExpression	simple = ( inst >> 16 ) & 0x01		2687392	2		=			
ANR	2687422	Identifier	simple		2687392	0					
ANR	2687423	BitAndExpression	( inst >> 16 ) & 0x01		2687392	1		&			
ANR	2687424	ShiftExpression	inst >> 16		2687392	0		>>			
ANR	2687425	Identifier	inst		2687392	0					
ANR	2687426	PrimaryExpression	16		2687392	1					
ANR	2687427	PrimaryExpression	0x01		2687392	1					
ANR	2687428	IfStatement	if ( simple || ! immediate )		2687392	3					
ANR	2687429	Condition	simple || ! immediate	147:5:4363:4382	2687392	0	True				
ANR	2687430	OrExpression	simple || ! immediate		2687392	0		||			
ANR	2687431	Identifier	simple		2687392	0					
ANR	2687432	UnaryOperationExpression	! immediate		2687392	1					
ANR	2687433	UnaryOperator	!		2687392	0					
ANR	2687434	Identifier	immediate		2687392	1					
ANR	2687435	CompoundStatement		6:27:140:140	2687392	1					
ANR	2687436	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, %s"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"	148:2:4389:4532	2687392	0	True				
ANR	2687437	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, %s"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687392	0		=			
ANR	2687438	PtrMemberAccess	arminsn -> str_asm		2687392	0					
ANR	2687439	Identifier	arminsn		2687392	0					
ANR	2687440	Identifier	str_asm		2687392	1					
ANR	2687441	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""msr%s %s, %s"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687392	1					
ANR	2687442	Callee	r_str_appendf		2687392	0					
ANR	2687443	Identifier	r_str_appendf		2687392	0					
ANR	2687444	ArgumentList	arminsn -> str_asm		2687392	1					
ANR	2687445	Argument	arminsn -> str_asm		2687392	0					
ANR	2687446	PtrMemberAccess	arminsn -> str_asm		2687392	0					
ANR	2687447	Identifier	arminsn		2687392	0					
ANR	2687448	Identifier	str_asm		2687392	1					
ANR	2687449	Argument	"""msr%s %s, %s"""		2687392	1					
ANR	2687450	PrimaryExpression	"""msr%s %s, %s"""		2687392	0					
ANR	2687451	Argument	get_cond ( inst )		2687392	2					
ANR	2687452	CallExpression	get_cond ( inst )		2687392	0					
ANR	2687453	Callee	get_cond		2687392	0					
ANR	2687454	Identifier	get_cond		2687392	0					
ANR	2687455	ArgumentList	inst		2687392	1					
ANR	2687456	Argument	inst		2687392	0					
ANR	2687457	Identifier	inst		2687392	0					
ANR	2687458	Argument	"dst ? ""spsr"" : ""cpsr"""		2687392	3					
ANR	2687459	ConditionalExpression	"dst ? ""spsr"" : ""cpsr"""		2687392	0					
ANR	2687460	Condition	dst		2687392	0					
ANR	2687461	Identifier	dst		2687392	0					
ANR	2687462	PrimaryExpression	"""spsr"""		2687392	1					
ANR	2687463	PrimaryExpression	"""cpsr"""		2687392	2					
ANR	2687464	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687392	4					
ANR	2687465	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687392	0					
ANR	2687466	Identifier	tbl_regs		2687392	0					
ANR	2687467	CallExpression	"get_nibble ( inst , 0 )"		2687392	1					
ANR	2687468	Callee	get_nibble		2687392	0					
ANR	2687469	Identifier	get_nibble		2687392	0					
ANR	2687470	ArgumentList	inst		2687392	1					
ANR	2687471	Argument	inst		2687392	0					
ANR	2687472	Identifier	inst		2687392	0					
ANR	2687473	Argument	0		2687392	1					
ANR	2687474	PrimaryExpression	0		2687392	0					
ANR	2687475	ReturnStatement	return 0 ;	150:2:4536:4544	2687392	1	True				
ANR	2687476	PrimaryExpression	0		2687392	0					
ANR	2687477	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, #%u"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"	152:1:4550:4708	2687392	4	True				
ANR	2687478	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""msr%s %s, #%u"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		2687392	0		=			
ANR	2687479	PtrMemberAccess	arminsn -> str_asm		2687392	0					
ANR	2687480	Identifier	arminsn		2687392	0					
ANR	2687481	Identifier	str_asm		2687392	1					
ANR	2687482	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""msr%s %s, #%u"" , get_cond ( inst ) , dst ? ""spsr"" : ""cpsr"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		2687392	1					
ANR	2687483	Callee	r_str_appendf		2687392	0					
ANR	2687484	Identifier	r_str_appendf		2687392	0					
ANR	2687485	ArgumentList	arminsn -> str_asm		2687392	1					
ANR	2687486	Argument	arminsn -> str_asm		2687392	0					
ANR	2687487	PtrMemberAccess	arminsn -> str_asm		2687392	0					
ANR	2687488	Identifier	arminsn		2687392	0					
ANR	2687489	Identifier	str_asm		2687392	1					
ANR	2687490	Argument	"""msr%s %s, #%u"""		2687392	1					
ANR	2687491	PrimaryExpression	"""msr%s %s, #%u"""		2687392	0					
ANR	2687492	Argument	get_cond ( inst )		2687392	2					
ANR	2687493	CallExpression	get_cond ( inst )		2687392	0					
ANR	2687494	Callee	get_cond		2687392	0					
ANR	2687495	Identifier	get_cond		2687392	0					
ANR	2687496	ArgumentList	inst		2687392	1					
ANR	2687497	Argument	inst		2687392	0					
ANR	2687498	Identifier	inst		2687392	0					
ANR	2687499	Argument	"dst ? ""spsr"" : ""cpsr"""		2687392	3					
ANR	2687500	ConditionalExpression	"dst ? ""spsr"" : ""cpsr"""		2687392	0					
ANR	2687501	Condition	dst		2687392	0					
ANR	2687502	Identifier	dst		2687392	0					
ANR	2687503	PrimaryExpression	"""spsr"""		2687392	1					
ANR	2687504	PrimaryExpression	"""cpsr"""		2687392	2					
ANR	2687505	Argument	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		2687392	4					
ANR	2687506	CallExpression	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		2687392	0					
ANR	2687507	Callee	ROR32		2687392	0					
ANR	2687508	Identifier	ROR32		2687392	0					
ANR	2687509	ArgumentList	inst & 0xff		2687392	1					
ANR	2687510	Argument	inst & 0xff		2687392	0					
ANR	2687511	BitAndExpression	inst & 0xff		2687392	0		&			
ANR	2687512	Identifier	inst		2687392	0					
ANR	2687513	PrimaryExpression	0xff		2687392	1					
ANR	2687514	Argument	"2 * get_nibble ( inst , 2 )"		2687392	1					
ANR	2687515	MultiplicativeExpression	"2 * get_nibble ( inst , 2 )"		2687392	0		*			
ANR	2687516	PrimaryExpression	2		2687392	0					
ANR	2687517	CallExpression	"get_nibble ( inst , 2 )"		2687392	1					
ANR	2687518	Callee	get_nibble		2687392	0					
ANR	2687519	Identifier	get_nibble		2687392	0					
ANR	2687520	ArgumentList	inst		2687392	1					
ANR	2687521	Argument	inst		2687392	0					
ANR	2687522	Identifier	inst		2687392	0					
ANR	2687523	Argument	2		2687392	1					
ANR	2687524	PrimaryExpression	2		2687392	0					
ANR	2687525	ReturnStatement	return 0 ;	154:1:4711:4719	2687392	5	True				
ANR	2687526	PrimaryExpression	0		2687392	0					
ANR	2687527	ReturnType	static ut32		2687392	1					
ANR	2687528	Identifier	arm_disasm_msrtrans		2687392	2					
ANR	2687529	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687392	3					
ANR	2687530	Parameter	struct winedbg_arm_insn * arminsn	142:32:4199:4230	2687392	0	True				
ANR	2687531	ParameterType	struct winedbg_arm_insn *		2687392	0					
ANR	2687532	Identifier	arminsn		2687392	1					
ANR	2687533	Parameter	ut32 inst	142:66:4233:4241	2687392	1	True				
ANR	2687534	ParameterType	ut32		2687392	0					
ANR	2687535	Identifier	inst		2687392	1					
ANR	2687536	CFGEntryNode	ENTRY		2687392		True				
ANR	2687537	CFGExitNode	EXIT		2687392		True				
ANR	2687538	Symbol	get_cond		2687392						
ANR	2687539	Symbol	dst		2687392						
ANR	2687540	Symbol	tbl_regs		2687392						
ANR	2687541	Symbol	arminsn		2687392						
ANR	2687542	Symbol	simple		2687392						
ANR	2687543	Symbol	arminsn -> str_asm		2687392						
ANR	2687544	Symbol	* arminsn		2687392						
ANR	2687545	Symbol	get_nibble		2687392						
ANR	2687546	Symbol	immediate		2687392						
ANR	2687547	Symbol	* tbl_regs		2687392						
ANR	2687548	Symbol	inst		2687392						
ANR	2687549	Symbol	r_str_appendf		2687392						
ANR	2687550	Symbol	* get_nibble		2687392						
ANR	2687551	Symbol	ROR32		2687392						
ANR	2687552	Function	arm_disasm_wordmov	157:0:4724:5041							
ANR	2687553	FunctionDef	"arm_disasm_wordmov (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687552	0					
ANR	2687554	CompoundStatement		157:76:4800:5041	2687552	0					
ANR	2687555	IdentifierDeclStatement	short top = ( inst >> 22 ) & 0x01 ;	158:1:4803:4834	2687552	0	True				
ANR	2687556	IdentifierDecl	top = ( inst >> 22 ) & 0x01		2687552	0					
ANR	2687557	IdentifierDeclType	short		2687552	0					
ANR	2687558	Identifier	top		2687552	1					
ANR	2687559	AssignmentExpression	top = ( inst >> 22 ) & 0x01		2687552	2		=			
ANR	2687560	Identifier	top		2687552	0					
ANR	2687561	BitAndExpression	( inst >> 22 ) & 0x01		2687552	1		&			
ANR	2687562	ShiftExpression	inst >> 22		2687552	0		>>			
ANR	2687563	Identifier	inst		2687552	0					
ANR	2687564	PrimaryExpression	22		2687552	1					
ANR	2687565	PrimaryExpression	0x01		2687552	1					
ANR	2687566	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mov%s%s %s, #%u"" , top ? ""t"" : ""w"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , ( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff ) )"	160:1:4838:5028	2687552	1	True				
ANR	2687567	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mov%s%s %s, #%u"" , top ? ""t"" : ""w"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , ( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff ) )"		2687552	0		=			
ANR	2687568	PtrMemberAccess	arminsn -> str_asm		2687552	0					
ANR	2687569	Identifier	arminsn		2687552	0					
ANR	2687570	Identifier	str_asm		2687552	1					
ANR	2687571	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mov%s%s %s, #%u"" , top ? ""t"" : ""w"" , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 3 ) ] , ( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff ) )"		2687552	1					
ANR	2687572	Callee	r_str_appendf		2687552	0					
ANR	2687573	Identifier	r_str_appendf		2687552	0					
ANR	2687574	ArgumentList	arminsn -> str_asm		2687552	1					
ANR	2687575	Argument	arminsn -> str_asm		2687552	0					
ANR	2687576	PtrMemberAccess	arminsn -> str_asm		2687552	0					
ANR	2687577	Identifier	arminsn		2687552	0					
ANR	2687578	Identifier	str_asm		2687552	1					
ANR	2687579	Argument	"""mov%s%s %s, #%u"""		2687552	1					
ANR	2687580	PrimaryExpression	"""mov%s%s %s, #%u"""		2687552	0					
ANR	2687581	Argument	"top ? ""t"" : ""w"""		2687552	2					
ANR	2687582	ConditionalExpression	"top ? ""t"" : ""w"""		2687552	0					
ANR	2687583	Condition	top		2687552	0					
ANR	2687584	Identifier	top		2687552	0					
ANR	2687585	PrimaryExpression	"""t"""		2687552	1					
ANR	2687586	PrimaryExpression	"""w"""		2687552	2					
ANR	2687587	Argument	get_cond ( inst )		2687552	3					
ANR	2687588	CallExpression	get_cond ( inst )		2687552	0					
ANR	2687589	Callee	get_cond		2687552	0					
ANR	2687590	Identifier	get_cond		2687552	0					
ANR	2687591	ArgumentList	inst		2687552	1					
ANR	2687592	Argument	inst		2687552	0					
ANR	2687593	Identifier	inst		2687552	0					
ANR	2687594	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687552	4					
ANR	2687595	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687552	0					
ANR	2687596	Identifier	tbl_regs		2687552	0					
ANR	2687597	CallExpression	"get_nibble ( inst , 3 )"		2687552	1					
ANR	2687598	Callee	get_nibble		2687552	0					
ANR	2687599	Identifier	get_nibble		2687552	0					
ANR	2687600	ArgumentList	inst		2687552	1					
ANR	2687601	Argument	inst		2687552	0					
ANR	2687602	Identifier	inst		2687552	0					
ANR	2687603	Argument	3		2687552	1					
ANR	2687604	PrimaryExpression	3		2687552	0					
ANR	2687605	Argument	"( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff )"		2687552	5					
ANR	2687606	InclusiveOrExpression	"( get_nibble ( inst , 4 ) << 12 ) | ( inst & 0x0fff )"		2687552	0		|			
ANR	2687607	ShiftExpression	"get_nibble ( inst , 4 ) << 12"		2687552	0		<<			
ANR	2687608	CallExpression	"get_nibble ( inst , 4 )"		2687552	0					
ANR	2687609	Callee	get_nibble		2687552	0					
ANR	2687610	Identifier	get_nibble		2687552	0					
ANR	2687611	ArgumentList	inst		2687552	1					
ANR	2687612	Argument	inst		2687552	0					
ANR	2687613	Identifier	inst		2687552	0					
ANR	2687614	Argument	4		2687552	1					
ANR	2687615	PrimaryExpression	4		2687552	0					
ANR	2687616	PrimaryExpression	12		2687552	1					
ANR	2687617	BitAndExpression	inst & 0x0fff		2687552	1		&			
ANR	2687618	Identifier	inst		2687552	0					
ANR	2687619	PrimaryExpression	0x0fff		2687552	1					
ANR	2687620	ReturnStatement	return 0 ;	163:1:5031:5039	2687552	2	True				
ANR	2687621	PrimaryExpression	0		2687552	0					
ANR	2687622	ReturnType	static ut32		2687552	1					
ANR	2687623	Identifier	arm_disasm_wordmov		2687552	2					
ANR	2687624	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687552	3					
ANR	2687625	Parameter	struct winedbg_arm_insn * arminsn	157:31:4755:4786	2687552	0	True				
ANR	2687626	ParameterType	struct winedbg_arm_insn *		2687552	0					
ANR	2687627	Identifier	arminsn		2687552	1					
ANR	2687628	Parameter	ut32 inst	157:65:4789:4797	2687552	1	True				
ANR	2687629	ParameterType	ut32		2687552	0					
ANR	2687630	Identifier	inst		2687552	1					
ANR	2687631	CFGEntryNode	ENTRY		2687552		True				
ANR	2687632	CFGExitNode	EXIT		2687552		True				
ANR	2687633	Symbol	* arminsn		2687552						
ANR	2687634	Symbol	get_cond		2687552						
ANR	2687635	Symbol	get_nibble		2687552						
ANR	2687636	Symbol	top		2687552						
ANR	2687637	Symbol	tbl_regs		2687552						
ANR	2687638	Symbol	* tbl_regs		2687552						
ANR	2687639	Symbol	inst		2687552						
ANR	2687640	Symbol	r_str_appendf		2687552						
ANR	2687641	Symbol	* get_nibble		2687552						
ANR	2687642	Symbol	arminsn		2687552						
ANR	2687643	Symbol	arminsn -> str_asm		2687552						
ANR	2687644	Function	arm_disasm_nop	166:0:5044:5209							
ANR	2687645	FunctionDef	"arm_disasm_nop (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687644	0					
ANR	2687646	CompoundStatement		166:72:5116:5209	2687644	0					
ANR	2687647	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop%s"" , get_cond ( inst ) )"	167:1:5119:5196	2687644	0	True				
ANR	2687648	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop%s"" , get_cond ( inst ) )"		2687644	0		=			
ANR	2687649	PtrMemberAccess	arminsn -> str_asm		2687644	0					
ANR	2687650	Identifier	arminsn		2687644	0					
ANR	2687651	Identifier	str_asm		2687644	1					
ANR	2687652	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""nop%s"" , get_cond ( inst ) )"		2687644	1					
ANR	2687653	Callee	r_str_appendf		2687644	0					
ANR	2687654	Identifier	r_str_appendf		2687644	0					
ANR	2687655	ArgumentList	arminsn -> str_asm		2687644	1					
ANR	2687656	Argument	arminsn -> str_asm		2687644	0					
ANR	2687657	PtrMemberAccess	arminsn -> str_asm		2687644	0					
ANR	2687658	Identifier	arminsn		2687644	0					
ANR	2687659	Identifier	str_asm		2687644	1					
ANR	2687660	Argument	"""nop%s"""		2687644	1					
ANR	2687661	PrimaryExpression	"""nop%s"""		2687644	0					
ANR	2687662	Argument	get_cond ( inst )		2687644	2					
ANR	2687663	CallExpression	get_cond ( inst )		2687644	0					
ANR	2687664	Callee	get_cond		2687644	0					
ANR	2687665	Identifier	get_cond		2687644	0					
ANR	2687666	ArgumentList	inst		2687644	1					
ANR	2687667	Argument	inst		2687644	0					
ANR	2687668	Identifier	inst		2687644	0					
ANR	2687669	ReturnStatement	return 0 ;	168:1:5199:5207	2687644	1	True				
ANR	2687670	PrimaryExpression	0		2687644	0					
ANR	2687671	ReturnType	static ut32		2687644	1					
ANR	2687672	Identifier	arm_disasm_nop		2687644	2					
ANR	2687673	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687644	3					
ANR	2687674	Parameter	struct winedbg_arm_insn * arminsn	166:27:5071:5102	2687644	0	True				
ANR	2687675	ParameterType	struct winedbg_arm_insn *		2687644	0					
ANR	2687676	Identifier	arminsn		2687644	1					
ANR	2687677	Parameter	ut32 inst	166:61:5105:5113	2687644	1	True				
ANR	2687678	ParameterType	ut32		2687644	0					
ANR	2687679	Identifier	inst		2687644	1					
ANR	2687680	CFGEntryNode	ENTRY		2687644		True				
ANR	2687681	CFGExitNode	EXIT		2687644		True				
ANR	2687682	Symbol	* arminsn		2687644						
ANR	2687683	Symbol	get_cond		2687644						
ANR	2687684	Symbol	inst		2687644						
ANR	2687685	Symbol	r_str_appendf		2687644						
ANR	2687686	Symbol	arminsn		2687644						
ANR	2687687	Symbol	arminsn -> str_asm		2687644						
ANR	2687688	Function	arm_disasm_dataprocessing	171:0:5212:7042							
ANR	2687689	FunctionDef	"arm_disasm_dataprocessing (struct winedbg_arm_insn * arminsn , ut32 inst)"		2687688	0					
ANR	2687690	CompoundStatement		171:83:5295:7042	2687688	0					
ANR	2687691	IdentifierDeclStatement	short condcodes = ( inst >> 20 ) & 0x01 ;	172:1:5298:5335	2687688	0	True				
ANR	2687692	IdentifierDecl	condcodes = ( inst >> 20 ) & 0x01		2687688	0					
ANR	2687693	IdentifierDeclType	short		2687688	0					
ANR	2687694	Identifier	condcodes		2687688	1					
ANR	2687695	AssignmentExpression	condcodes = ( inst >> 20 ) & 0x01		2687688	2		=			
ANR	2687696	Identifier	condcodes		2687688	0					
ANR	2687697	BitAndExpression	( inst >> 20 ) & 0x01		2687688	1		&			
ANR	2687698	ShiftExpression	inst >> 20		2687688	0		>>			
ANR	2687699	Identifier	inst		2687688	0					
ANR	2687700	PrimaryExpression	20		2687688	1					
ANR	2687701	PrimaryExpression	0x01		2687688	1					
ANR	2687702	IdentifierDeclStatement	short opcode = ( inst >> 21 ) & 0x0f ;	173:1:5338:5375	2687688	1	True				
ANR	2687703	IdentifierDecl	opcode = ( inst >> 21 ) & 0x0f		2687688	0					
ANR	2687704	IdentifierDeclType	short		2687688	0					
ANR	2687705	Identifier	opcode		2687688	1					
ANR	2687706	AssignmentExpression	opcode = ( inst >> 21 ) & 0x0f		2687688	2		=			
ANR	2687707	Identifier	opcode		2687688	0					
ANR	2687708	BitAndExpression	( inst >> 21 ) & 0x0f		2687688	1		&			
ANR	2687709	ShiftExpression	inst >> 21		2687688	0		>>			
ANR	2687710	Identifier	inst		2687688	0					
ANR	2687711	PrimaryExpression	21		2687688	1					
ANR	2687712	PrimaryExpression	0x0f		2687688	1					
ANR	2687713	IdentifierDeclStatement	short immediate = ( inst >> 25 ) & 0x01 ;	174:1:5378:5415	2687688	2	True				
ANR	2687714	IdentifierDecl	immediate = ( inst >> 25 ) & 0x01		2687688	0					
ANR	2687715	IdentifierDeclType	short		2687688	0					
ANR	2687716	Identifier	immediate		2687688	1					
ANR	2687717	AssignmentExpression	immediate = ( inst >> 25 ) & 0x01		2687688	2		=			
ANR	2687718	Identifier	immediate		2687688	0					
ANR	2687719	BitAndExpression	( inst >> 25 ) & 0x01		2687688	1		&			
ANR	2687720	ShiftExpression	inst >> 25		2687688	0		>>			
ANR	2687721	Identifier	inst		2687688	0					
ANR	2687722	PrimaryExpression	25		2687688	1					
ANR	2687723	PrimaryExpression	0x01		2687688	1					
ANR	2687724	IdentifierDeclStatement	short no_op1 = ( opcode & 0x0d ) == 0x0d ;	175:1:5418:5459	2687688	3	True				
ANR	2687725	IdentifierDecl	no_op1 = ( opcode & 0x0d ) == 0x0d		2687688	0					
ANR	2687726	IdentifierDeclType	short		2687688	0					
ANR	2687727	Identifier	no_op1		2687688	1					
ANR	2687728	AssignmentExpression	no_op1 = ( opcode & 0x0d ) == 0x0d		2687688	2		=			
ANR	2687729	Identifier	no_op1		2687688	0					
ANR	2687730	EqualityExpression	( opcode & 0x0d ) == 0x0d		2687688	1		==			
ANR	2687731	BitAndExpression	opcode & 0x0d		2687688	0		&			
ANR	2687732	Identifier	opcode		2687688	0					
ANR	2687733	PrimaryExpression	0x0d		2687688	1					
ANR	2687734	PrimaryExpression	0x0d		2687688	1					
ANR	2687735	IdentifierDeclStatement	short no_dst = ( opcode & 0x0c ) == 0x08 ;	176:1:5462:5503	2687688	4	True				
ANR	2687736	IdentifierDecl	no_dst = ( opcode & 0x0c ) == 0x08		2687688	0					
ANR	2687737	IdentifierDeclType	short		2687688	0					
ANR	2687738	Identifier	no_dst		2687688	1					
ANR	2687739	AssignmentExpression	no_dst = ( opcode & 0x0c ) == 0x08		2687688	2		=			
ANR	2687740	Identifier	no_dst		2687688	0					
ANR	2687741	EqualityExpression	( opcode & 0x0c ) == 0x08		2687688	1		==			
ANR	2687742	BitAndExpression	opcode & 0x0c		2687688	0		&			
ANR	2687743	Identifier	opcode		2687688	0					
ANR	2687744	PrimaryExpression	0x0c		2687688	1					
ANR	2687745	PrimaryExpression	0x08		2687688	1					
ANR	2687746	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , tbl_dataops [ opcode ] , condcodes ? ""s"" : """" , get_cond ( inst ) )"	178:1:5507:5628	2687688	5	True				
ANR	2687747	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , tbl_dataops [ opcode ] , condcodes ? ""s"" : """" , get_cond ( inst ) )"		2687688	0		=			
ANR	2687748	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687749	Identifier	arminsn		2687688	0					
ANR	2687750	Identifier	str_asm		2687688	1					
ANR	2687751	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , tbl_dataops [ opcode ] , condcodes ? ""s"" : """" , get_cond ( inst ) )"		2687688	1					
ANR	2687752	Callee	r_str_appendf		2687688	0					
ANR	2687753	Identifier	r_str_appendf		2687688	0					
ANR	2687754	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687755	Argument	arminsn -> str_asm		2687688	0					
ANR	2687756	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687757	Identifier	arminsn		2687688	0					
ANR	2687758	Identifier	str_asm		2687688	1					
ANR	2687759	Argument	"""%s%s%s"""		2687688	1					
ANR	2687760	PrimaryExpression	"""%s%s%s"""		2687688	0					
ANR	2687761	Argument	tbl_dataops [ opcode ]		2687688	2					
ANR	2687762	ArrayIndexing	tbl_dataops [ opcode ]		2687688	0					
ANR	2687763	Identifier	tbl_dataops		2687688	0					
ANR	2687764	Identifier	opcode		2687688	1					
ANR	2687765	Argument	"condcodes ? ""s"" : """""		2687688	3					
ANR	2687766	ConditionalExpression	"condcodes ? ""s"" : """""		2687688	0					
ANR	2687767	Condition	condcodes		2687688	0					
ANR	2687768	Identifier	condcodes		2687688	0					
ANR	2687769	PrimaryExpression	"""s"""		2687688	1					
ANR	2687770	PrimaryExpression	""""""		2687688	2					
ANR	2687771	Argument	get_cond ( inst )		2687688	4					
ANR	2687772	CallExpression	get_cond ( inst )		2687688	0					
ANR	2687773	Callee	get_cond		2687688	0					
ANR	2687774	Identifier	get_cond		2687688	0					
ANR	2687775	ArgumentList	inst		2687688	1					
ANR	2687776	Argument	inst		2687688	0					
ANR	2687777	Identifier	inst		2687688	0					
ANR	2687778	IfStatement	if ( ! no_dst )		2687688	6					
ANR	2687779	Condition	! no_dst	179:5:5635:5641	2687688	0	True				
ANR	2687780	UnaryOperationExpression	! no_dst		2687688	0					
ANR	2687781	UnaryOperator	!		2687688	0					
ANR	2687782	Identifier	no_dst		2687688	1					
ANR	2687783	CompoundStatement		9:14:348:348	2687688	1					
ANR	2687784	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"	180:2:5648:5740	2687688	0	True				
ANR	2687785	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2687688	0		=			
ANR	2687786	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687787	Identifier	arminsn		2687688	0					
ANR	2687788	Identifier	str_asm		2687688	1					
ANR	2687789	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2687688	1					
ANR	2687790	Callee	r_str_appendf		2687688	0					
ANR	2687791	Identifier	r_str_appendf		2687688	0					
ANR	2687792	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687793	Argument	arminsn -> str_asm		2687688	0					
ANR	2687794	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687795	Identifier	arminsn		2687688	0					
ANR	2687796	Identifier	str_asm		2687688	1					
ANR	2687797	Argument	""" %s, """		2687688	1					
ANR	2687798	PrimaryExpression	""" %s, """		2687688	0					
ANR	2687799	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687688	2					
ANR	2687800	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2687688	0					
ANR	2687801	Identifier	tbl_regs		2687688	0					
ANR	2687802	CallExpression	"get_nibble ( inst , 3 )"		2687688	1					
ANR	2687803	Callee	get_nibble		2687688	0					
ANR	2687804	Identifier	get_nibble		2687688	0					
ANR	2687805	ArgumentList	inst		2687688	1					
ANR	2687806	Argument	inst		2687688	0					
ANR	2687807	Identifier	inst		2687688	0					
ANR	2687808	Argument	3		2687688	1					
ANR	2687809	PrimaryExpression	3		2687688	0					
ANR	2687810	ElseStatement	else		2687688	0					
ANR	2687811	CompoundStatement		12:6:455:455	2687688	0					
ANR	2687812	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" "" )"	183:2:5755:5811	2687688	0	True				
ANR	2687813	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" "" )"		2687688	0		=			
ANR	2687814	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687815	Identifier	arminsn		2687688	0					
ANR	2687816	Identifier	str_asm		2687688	1					
ANR	2687817	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" "" )"		2687688	1					
ANR	2687818	Callee	r_str_appendf		2687688	0					
ANR	2687819	Identifier	r_str_appendf		2687688	0					
ANR	2687820	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687821	Argument	arminsn -> str_asm		2687688	0					
ANR	2687822	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687823	Identifier	arminsn		2687688	0					
ANR	2687824	Identifier	str_asm		2687688	1					
ANR	2687825	Argument	""" """		2687688	1					
ANR	2687826	PrimaryExpression	""" """		2687688	0					
ANR	2687827	IfStatement	if ( no_op1 )		2687688	7					
ANR	2687828	Condition	no_op1	185:5:5822:5827	2687688	0	True				
ANR	2687829	Identifier	no_op1		2687688	0					
ANR	2687830	CompoundStatement		15:13:534:534	2687688	1					
ANR	2687831	IfStatement	if ( immediate )		2687688	0					
ANR	2687832	Condition	immediate	186:6:5838:5846	2687688	0	True				
ANR	2687833	Identifier	immediate		2687688	0					
ANR	2687834	CompoundStatement		16:17:553:553	2687688	1					
ANR	2687835	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%u"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"	187:3:5854:5959	2687688	0	True				
ANR	2687836	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%u"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		2687688	0		=			
ANR	2687837	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687838	Identifier	arminsn		2687688	0					
ANR	2687839	Identifier	str_asm		2687688	1					
ANR	2687840	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""#%u"" , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		2687688	1					
ANR	2687841	Callee	r_str_appendf		2687688	0					
ANR	2687842	Identifier	r_str_appendf		2687688	0					
ANR	2687843	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687844	Argument	arminsn -> str_asm		2687688	0					
ANR	2687845	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687846	Identifier	arminsn		2687688	0					
ANR	2687847	Identifier	str_asm		2687688	1					
ANR	2687848	Argument	"""#%u"""		2687688	1					
ANR	2687849	PrimaryExpression	"""#%u"""		2687688	0					
ANR	2687850	Argument	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		2687688	2					
ANR	2687851	CallExpression	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		2687688	0					
ANR	2687852	Callee	ROR32		2687688	0					
ANR	2687853	Identifier	ROR32		2687688	0					
ANR	2687854	ArgumentList	inst & 0xff		2687688	1					
ANR	2687855	Argument	inst & 0xff		2687688	0					
ANR	2687856	BitAndExpression	inst & 0xff		2687688	0		&			
ANR	2687857	Identifier	inst		2687688	0					
ANR	2687858	PrimaryExpression	0xff		2687688	1					
ANR	2687859	Argument	"2 * get_nibble ( inst , 2 )"		2687688	1					
ANR	2687860	MultiplicativeExpression	"2 * get_nibble ( inst , 2 )"		2687688	0		*			
ANR	2687861	PrimaryExpression	2		2687688	0					
ANR	2687862	CallExpression	"get_nibble ( inst , 2 )"		2687688	1					
ANR	2687863	Callee	get_nibble		2687688	0					
ANR	2687864	Identifier	get_nibble		2687688	0					
ANR	2687865	ArgumentList	inst		2687688	1					
ANR	2687866	Argument	inst		2687688	0					
ANR	2687867	Identifier	inst		2687688	0					
ANR	2687868	Argument	2		2687688	1					
ANR	2687869	PrimaryExpression	2		2687688	0					
ANR	2687870	ElseStatement	else		2687688	0					
ANR	2687871	CompoundStatement		19:7:676:676	2687688	0					
ANR	2687872	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"	190:3:5977:6066	2687688	0	True				
ANR	2687873	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687688	0		=			
ANR	2687874	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687875	Identifier	arminsn		2687688	0					
ANR	2687876	Identifier	str_asm		2687688	1					
ANR	2687877	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687688	1					
ANR	2687878	Callee	r_str_appendf		2687688	0					
ANR	2687879	Identifier	r_str_appendf		2687688	0					
ANR	2687880	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687881	Argument	arminsn -> str_asm		2687688	0					
ANR	2687882	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687883	Identifier	arminsn		2687688	0					
ANR	2687884	Identifier	str_asm		2687688	1					
ANR	2687885	Argument	"""%s"""		2687688	1					
ANR	2687886	PrimaryExpression	"""%s"""		2687688	0					
ANR	2687887	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	2					
ANR	2687888	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	0					
ANR	2687889	Identifier	tbl_regs		2687688	0					
ANR	2687890	CallExpression	"get_nibble ( inst , 0 )"		2687688	1					
ANR	2687891	Callee	get_nibble		2687688	0					
ANR	2687892	Identifier	get_nibble		2687688	0					
ANR	2687893	ArgumentList	inst		2687688	1					
ANR	2687894	Argument	inst		2687688	0					
ANR	2687895	Identifier	inst		2687688	0					
ANR	2687896	Argument	0		2687688	1					
ANR	2687897	PrimaryExpression	0		2687688	0					
ANR	2687898	ElseStatement	else		2687688	0					
ANR	2687899	CompoundStatement		22:8:784:784	2687688	0					
ANR	2687900	IfStatement	if ( immediate )		2687688	0					
ANR	2687901	Condition	immediate	193:6:6088:6096	2687688	0	True				
ANR	2687902	Identifier	immediate		2687688	0					
ANR	2687903	CompoundStatement		23:17:803:803	2687688	1					
ANR	2687904	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, #%u"" , tbl_regs [ get_nibble ( inst , 4 ) ] , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"	194:3:6104:6250	2687688	0	True				
ANR	2687905	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, #%u"" , tbl_regs [ get_nibble ( inst , 4 ) ] , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		2687688	0		=			
ANR	2687906	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687907	Identifier	arminsn		2687688	0					
ANR	2687908	Identifier	str_asm		2687688	1					
ANR	2687909	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, #%u"" , tbl_regs [ get_nibble ( inst , 4 ) ] , ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) ) )"		2687688	1					
ANR	2687910	Callee	r_str_appendf		2687688	0					
ANR	2687911	Identifier	r_str_appendf		2687688	0					
ANR	2687912	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687913	Argument	arminsn -> str_asm		2687688	0					
ANR	2687914	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687915	Identifier	arminsn		2687688	0					
ANR	2687916	Identifier	str_asm		2687688	1					
ANR	2687917	Argument	"""%s, #%u"""		2687688	1					
ANR	2687918	PrimaryExpression	"""%s, #%u"""		2687688	0					
ANR	2687919	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	2					
ANR	2687920	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	0					
ANR	2687921	Identifier	tbl_regs		2687688	0					
ANR	2687922	CallExpression	"get_nibble ( inst , 4 )"		2687688	1					
ANR	2687923	Callee	get_nibble		2687688	0					
ANR	2687924	Identifier	get_nibble		2687688	0					
ANR	2687925	ArgumentList	inst		2687688	1					
ANR	2687926	Argument	inst		2687688	0					
ANR	2687927	Identifier	inst		2687688	0					
ANR	2687928	Argument	4		2687688	1					
ANR	2687929	PrimaryExpression	4		2687688	0					
ANR	2687930	Argument	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		2687688	3					
ANR	2687931	CallExpression	"ROR32 ( inst & 0xff , 2 * get_nibble ( inst , 2 ) )"		2687688	0					
ANR	2687932	Callee	ROR32		2687688	0					
ANR	2687933	Identifier	ROR32		2687688	0					
ANR	2687934	ArgumentList	inst & 0xff		2687688	1					
ANR	2687935	Argument	inst & 0xff		2687688	0					
ANR	2687936	BitAndExpression	inst & 0xff		2687688	0		&			
ANR	2687937	Identifier	inst		2687688	0					
ANR	2687938	PrimaryExpression	0xff		2687688	1					
ANR	2687939	Argument	"2 * get_nibble ( inst , 2 )"		2687688	1					
ANR	2687940	MultiplicativeExpression	"2 * get_nibble ( inst , 2 )"		2687688	0		*			
ANR	2687941	PrimaryExpression	2		2687688	0					
ANR	2687942	CallExpression	"get_nibble ( inst , 2 )"		2687688	1					
ANR	2687943	Callee	get_nibble		2687688	0					
ANR	2687944	Identifier	get_nibble		2687688	0					
ANR	2687945	ArgumentList	inst		2687688	1					
ANR	2687946	Argument	inst		2687688	0					
ANR	2687947	Identifier	inst		2687688	0					
ANR	2687948	Argument	2		2687688	1					
ANR	2687949	PrimaryExpression	2		2687688	0					
ANR	2687950	ElseStatement	else		2687688	0					
ANR	2687951	IfStatement	if ( ( ( inst >> 4 ) & 0xff ) == 0x00 )		2687688	0					
ANR	2687952	Condition	( ( inst >> 4 ) & 0xff ) == 0x00	197:11:6267:6294	2687688	0	True				
ANR	2687953	EqualityExpression	( ( inst >> 4 ) & 0xff ) == 0x00		2687688	0		==			
ANR	2687954	BitAndExpression	( inst >> 4 ) & 0xff		2687688	0		&			
ANR	2687955	ShiftExpression	inst >> 4		2687688	0		>>			
ANR	2687956	Identifier	inst		2687688	0					
ANR	2687957	PrimaryExpression	4		2687688	1					
ANR	2687958	PrimaryExpression	0xff		2687688	1					
ANR	2687959	PrimaryExpression	0x00		2687688	1					
ANR	2687960	CompoundStatement		27:41:1001:1001	2687688	1					
ANR	2687961	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	198:3:6317:6447	2687688	0	True				
ANR	2687962	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687688	0		=			
ANR	2687963	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687964	Identifier	arminsn		2687688	0					
ANR	2687965	Identifier	str_asm		2687688	1					
ANR	2687966	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2687688	1					
ANR	2687967	Callee	r_str_appendf		2687688	0					
ANR	2687968	Identifier	r_str_appendf		2687688	0					
ANR	2687969	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2687970	Argument	arminsn -> str_asm		2687688	0					
ANR	2687971	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2687972	Identifier	arminsn		2687688	0					
ANR	2687973	Identifier	str_asm		2687688	1					
ANR	2687974	Argument	"""%s, %s"""		2687688	1					
ANR	2687975	PrimaryExpression	"""%s, %s"""		2687688	0					
ANR	2687976	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	2					
ANR	2687977	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	0					
ANR	2687978	Identifier	tbl_regs		2687688	0					
ANR	2687979	CallExpression	"get_nibble ( inst , 4 )"		2687688	1					
ANR	2687980	Callee	get_nibble		2687688	0					
ANR	2687981	Identifier	get_nibble		2687688	0					
ANR	2687982	ArgumentList	inst		2687688	1					
ANR	2687983	Argument	inst		2687688	0					
ANR	2687984	Identifier	inst		2687688	0					
ANR	2687985	Argument	4		2687688	1					
ANR	2687986	PrimaryExpression	4		2687688	0					
ANR	2687987	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	3					
ANR	2687988	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	0					
ANR	2687989	Identifier	tbl_regs		2687688	0					
ANR	2687990	CallExpression	"get_nibble ( inst , 0 )"		2687688	1					
ANR	2687991	Callee	get_nibble		2687688	0					
ANR	2687992	Identifier	get_nibble		2687688	0					
ANR	2687993	ArgumentList	inst		2687688	1					
ANR	2687994	Argument	inst		2687688	0					
ANR	2687995	Identifier	inst		2687688	0					
ANR	2687996	Argument	0		2687688	1					
ANR	2687997	PrimaryExpression	0		2687688	0					
ANR	2687998	ElseStatement	else		2687688	0					
ANR	2687999	IfStatement	if ( ( ( inst >> 4 ) & 0x09 ) == 0x01 )		2687688	0					
ANR	2688000	Condition	( ( inst >> 4 ) & 0x09 ) == 0x01	201:11:6464:6491	2687688	0	True				
ANR	2688001	EqualityExpression	( ( inst >> 4 ) & 0x09 ) == 0x01		2687688	0		==			
ANR	2688002	BitAndExpression	( inst >> 4 ) & 0x09		2687688	0		&			
ANR	2688003	ShiftExpression	inst >> 4		2687688	0		>>			
ANR	2688004	Identifier	inst		2687688	0					
ANR	2688005	PrimaryExpression	4		2687688	1					
ANR	2688006	PrimaryExpression	0x09		2687688	1					
ANR	2688007	PrimaryExpression	0x01		2687688	1					
ANR	2688008	CompoundStatement		31:41:1198:1198	2687688	1					
ANR	2688009	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , tbl_regs [ ( inst >> 8 ) & 0x0f ] )"	202:3:6520:6724	2687688	0	True				
ANR	2688010	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , tbl_regs [ ( inst >> 8 ) & 0x0f ] )"		2687688	0		=			
ANR	2688011	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2688012	Identifier	arminsn		2687688	0					
ANR	2688013	Identifier	str_asm		2687688	1					
ANR	2688014	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , tbl_regs [ ( inst >> 8 ) & 0x0f ] )"		2687688	1					
ANR	2688015	Callee	r_str_appendf		2687688	0					
ANR	2688016	Identifier	r_str_appendf		2687688	0					
ANR	2688017	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2688018	Argument	arminsn -> str_asm		2687688	0					
ANR	2688019	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2688020	Identifier	arminsn		2687688	0					
ANR	2688021	Identifier	str_asm		2687688	1					
ANR	2688022	Argument	"""%s, %s, %s %s"""		2687688	1					
ANR	2688023	PrimaryExpression	"""%s, %s, %s %s"""		2687688	0					
ANR	2688024	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	2					
ANR	2688025	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	0					
ANR	2688026	Identifier	tbl_regs		2687688	0					
ANR	2688027	CallExpression	"get_nibble ( inst , 4 )"		2687688	1					
ANR	2688028	Callee	get_nibble		2687688	0					
ANR	2688029	Identifier	get_nibble		2687688	0					
ANR	2688030	ArgumentList	inst		2687688	1					
ANR	2688031	Argument	inst		2687688	0					
ANR	2688032	Identifier	inst		2687688	0					
ANR	2688033	Argument	4		2687688	1					
ANR	2688034	PrimaryExpression	4		2687688	0					
ANR	2688035	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	3					
ANR	2688036	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	0					
ANR	2688037	Identifier	tbl_regs		2687688	0					
ANR	2688038	CallExpression	"get_nibble ( inst , 0 )"		2687688	1					
ANR	2688039	Callee	get_nibble		2687688	0					
ANR	2688040	Identifier	get_nibble		2687688	0					
ANR	2688041	ArgumentList	inst		2687688	1					
ANR	2688042	Argument	inst		2687688	0					
ANR	2688043	Identifier	inst		2687688	0					
ANR	2688044	Argument	0		2687688	1					
ANR	2688045	PrimaryExpression	0		2687688	0					
ANR	2688046	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2687688	4					
ANR	2688047	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2687688	0					
ANR	2688048	Identifier	tbl_shifts		2687688	0					
ANR	2688049	BitAndExpression	( inst >> 5 ) & 0x03		2687688	1		&			
ANR	2688050	ShiftExpression	inst >> 5		2687688	0		>>			
ANR	2688051	Identifier	inst		2687688	0					
ANR	2688052	PrimaryExpression	5		2687688	1					
ANR	2688053	PrimaryExpression	0x03		2687688	1					
ANR	2688054	Argument	tbl_regs [ ( inst >> 8 ) & 0x0f ]		2687688	5					
ANR	2688055	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x0f ]		2687688	0					
ANR	2688056	Identifier	tbl_regs		2687688	0					
ANR	2688057	BitAndExpression	( inst >> 8 ) & 0x0f		2687688	1		&			
ANR	2688058	ShiftExpression	inst >> 8		2687688	0		>>			
ANR	2688059	Identifier	inst		2687688	0					
ANR	2688060	PrimaryExpression	8		2687688	1					
ANR	2688061	PrimaryExpression	0x0f		2687688	1					
ANR	2688062	ElseStatement	else		2687688	0					
ANR	2688063	IfStatement	if ( ( ( inst >> 4 ) & 0x01 ) == 0x00 )		2687688	0					
ANR	2688064	Condition	( ( inst >> 4 ) & 0x01 ) == 0x00	206:11:6741:6768	2687688	0	True				
ANR	2688065	EqualityExpression	( ( inst >> 4 ) & 0x01 ) == 0x00		2687688	0		==			
ANR	2688066	BitAndExpression	( inst >> 4 ) & 0x01		2687688	0		&			
ANR	2688067	ShiftExpression	inst >> 4		2687688	0		>>			
ANR	2688068	Identifier	inst		2687688	0					
ANR	2688069	PrimaryExpression	4		2687688	1					
ANR	2688070	PrimaryExpression	0x01		2687688	1					
ANR	2688071	PrimaryExpression	0x00		2687688	1					
ANR	2688072	CompoundStatement		36:41:1475:1475	2687688	1					
ANR	2688073	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"	207:3:6798:6993	2687688	0	True				
ANR	2688074	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		2687688	0		=			
ANR	2688075	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2688076	Identifier	arminsn		2687688	0					
ANR	2688077	Identifier	str_asm		2687688	1					
ANR	2688078	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		2687688	1					
ANR	2688079	Callee	r_str_appendf		2687688	0					
ANR	2688080	Identifier	r_str_appendf		2687688	0					
ANR	2688081	ArgumentList	arminsn -> str_asm		2687688	1					
ANR	2688082	Argument	arminsn -> str_asm		2687688	0					
ANR	2688083	PtrMemberAccess	arminsn -> str_asm		2687688	0					
ANR	2688084	Identifier	arminsn		2687688	0					
ANR	2688085	Identifier	str_asm		2687688	1					
ANR	2688086	Argument	"""%s, %s, %s #%d"""		2687688	1					
ANR	2688087	PrimaryExpression	"""%s, %s, %s #%d"""		2687688	0					
ANR	2688088	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	2					
ANR	2688089	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2687688	0					
ANR	2688090	Identifier	tbl_regs		2687688	0					
ANR	2688091	CallExpression	"get_nibble ( inst , 4 )"		2687688	1					
ANR	2688092	Callee	get_nibble		2687688	0					
ANR	2688093	Identifier	get_nibble		2687688	0					
ANR	2688094	ArgumentList	inst		2687688	1					
ANR	2688095	Argument	inst		2687688	0					
ANR	2688096	Identifier	inst		2687688	0					
ANR	2688097	Argument	4		2687688	1					
ANR	2688098	PrimaryExpression	4		2687688	0					
ANR	2688099	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	3					
ANR	2688100	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2687688	0					
ANR	2688101	Identifier	tbl_regs		2687688	0					
ANR	2688102	CallExpression	"get_nibble ( inst , 0 )"		2687688	1					
ANR	2688103	Callee	get_nibble		2687688	0					
ANR	2688104	Identifier	get_nibble		2687688	0					
ANR	2688105	ArgumentList	inst		2687688	1					
ANR	2688106	Argument	inst		2687688	0					
ANR	2688107	Identifier	inst		2687688	0					
ANR	2688108	Argument	0		2687688	1					
ANR	2688109	PrimaryExpression	0		2687688	0					
ANR	2688110	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2687688	4					
ANR	2688111	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2687688	0					
ANR	2688112	Identifier	tbl_shifts		2687688	0					
ANR	2688113	BitAndExpression	( inst >> 5 ) & 0x03		2687688	1		&			
ANR	2688114	ShiftExpression	inst >> 5		2687688	0		>>			
ANR	2688115	Identifier	inst		2687688	0					
ANR	2688116	PrimaryExpression	5		2687688	1					
ANR	2688117	PrimaryExpression	0x03		2687688	1					
ANR	2688118	Argument	( inst >> 7 ) & 0x1f		2687688	5					
ANR	2688119	BitAndExpression	( inst >> 7 ) & 0x1f		2687688	0		&			
ANR	2688120	ShiftExpression	inst >> 7		2687688	0		>>			
ANR	2688121	Identifier	inst		2687688	0					
ANR	2688122	PrimaryExpression	7		2687688	1					
ANR	2688123	PrimaryExpression	0x1f		2687688	1					
ANR	2688124	ElseStatement	else		2687688	0					
ANR	2688125	CompoundStatement		41:7:1710:1710	2687688	0					
ANR	2688126	ReturnStatement	return inst ;	212:3:7011:7022	2687688	0	True				
ANR	2688127	Identifier	inst		2687688	0					
ANR	2688128	ReturnStatement	return 0 ;	215:1:7032:7040	2687688	8	True				
ANR	2688129	PrimaryExpression	0		2687688	0					
ANR	2688130	ReturnType	static ut32		2687688	1					
ANR	2688131	Identifier	arm_disasm_dataprocessing		2687688	2					
ANR	2688132	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2687688	3					
ANR	2688133	Parameter	struct winedbg_arm_insn * arminsn	171:38:5250:5281	2687688	0	True				
ANR	2688134	ParameterType	struct winedbg_arm_insn *		2687688	0					
ANR	2688135	Identifier	arminsn		2687688	1					
ANR	2688136	Parameter	ut32 inst	171:72:5284:5292	2687688	1	True				
ANR	2688137	ParameterType	ut32		2687688	0					
ANR	2688138	Identifier	inst		2687688	1					
ANR	2688139	CFGEntryNode	ENTRY		2687688		True				
ANR	2688140	CFGExitNode	EXIT		2687688		True				
ANR	2688141	Symbol	get_cond		2687688						
ANR	2688142	Symbol	tbl_shifts		2687688						
ANR	2688143	Symbol	* inst		2687688						
ANR	2688144	Symbol	* tbl_shifts		2687688						
ANR	2688145	Symbol	tbl_regs		2687688						
ANR	2688146	Symbol	arminsn		2687688						
ANR	2688147	Symbol	opcode		2687688						
ANR	2688148	Symbol	no_op1		2687688						
ANR	2688149	Symbol	arminsn -> str_asm		2687688						
ANR	2688150	Symbol	* arminsn		2687688						
ANR	2688151	Symbol	get_nibble		2687688						
ANR	2688152	Symbol	immediate		2687688						
ANR	2688153	Symbol	tbl_dataops		2687688						
ANR	2688154	Symbol	condcodes		2687688						
ANR	2688155	Symbol	* tbl_regs		2687688						
ANR	2688156	Symbol	inst		2687688						
ANR	2688157	Symbol	r_str_appendf		2687688						
ANR	2688158	Symbol	* tbl_dataops		2687688						
ANR	2688159	Symbol	* get_nibble		2687688						
ANR	2688160	Symbol	no_dst		2687688						
ANR	2688161	Symbol	ROR32		2687688						
ANR	2688162	Symbol	* opcode		2687688						
ANR	2688163	Function	arm_disasm_singletrans	218:0:7045:9044							
ANR	2688164	FunctionDef	"arm_disasm_singletrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2688163	0					
ANR	2688165	CompoundStatement		218:80:7125:9044	2688163	0					
ANR	2688166	IdentifierDeclStatement	short load = ( inst >> 20 ) & 0x01 ;	219:1:7128:7165	2688163	0	True				
ANR	2688167	IdentifierDecl	load = ( inst >> 20 ) & 0x01		2688163	0					
ANR	2688168	IdentifierDeclType	short		2688163	0					
ANR	2688169	Identifier	load		2688163	1					
ANR	2688170	AssignmentExpression	load = ( inst >> 20 ) & 0x01		2688163	2		=			
ANR	2688171	Identifier	load		2688163	0					
ANR	2688172	BitAndExpression	( inst >> 20 ) & 0x01		2688163	1		&			
ANR	2688173	ShiftExpression	inst >> 20		2688163	0		>>			
ANR	2688174	Identifier	inst		2688163	0					
ANR	2688175	PrimaryExpression	20		2688163	1					
ANR	2688176	PrimaryExpression	0x01		2688163	1					
ANR	2688177	IdentifierDeclStatement	short writeback = ( inst >> 21 ) & 0x01 ;	220:1:7168:7205	2688163	1	True				
ANR	2688178	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		2688163	0					
ANR	2688179	IdentifierDeclType	short		2688163	0					
ANR	2688180	Identifier	writeback		2688163	1					
ANR	2688181	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		2688163	2		=			
ANR	2688182	Identifier	writeback		2688163	0					
ANR	2688183	BitAndExpression	( inst >> 21 ) & 0x01		2688163	1		&			
ANR	2688184	ShiftExpression	inst >> 21		2688163	0		>>			
ANR	2688185	Identifier	inst		2688163	0					
ANR	2688186	PrimaryExpression	21		2688163	1					
ANR	2688187	PrimaryExpression	0x01		2688163	1					
ANR	2688188	IdentifierDeclStatement	short byte = ( inst >> 22 ) & 0x01 ;	221:1:7208:7245	2688163	2	True				
ANR	2688189	IdentifierDecl	byte = ( inst >> 22 ) & 0x01		2688163	0					
ANR	2688190	IdentifierDeclType	short		2688163	0					
ANR	2688191	Identifier	byte		2688163	1					
ANR	2688192	AssignmentExpression	byte = ( inst >> 22 ) & 0x01		2688163	2		=			
ANR	2688193	Identifier	byte		2688163	0					
ANR	2688194	BitAndExpression	( inst >> 22 ) & 0x01		2688163	1		&			
ANR	2688195	ShiftExpression	inst >> 22		2688163	0		>>			
ANR	2688196	Identifier	inst		2688163	0					
ANR	2688197	PrimaryExpression	22		2688163	1					
ANR	2688198	PrimaryExpression	0x01		2688163	1					
ANR	2688199	IdentifierDeclStatement	short direction = ( inst >> 23 ) & 0x01 ;	222:1:7248:7285	2688163	3	True				
ANR	2688200	IdentifierDecl	direction = ( inst >> 23 ) & 0x01		2688163	0					
ANR	2688201	IdentifierDeclType	short		2688163	0					
ANR	2688202	Identifier	direction		2688163	1					
ANR	2688203	AssignmentExpression	direction = ( inst >> 23 ) & 0x01		2688163	2		=			
ANR	2688204	Identifier	direction		2688163	0					
ANR	2688205	BitAndExpression	( inst >> 23 ) & 0x01		2688163	1		&			
ANR	2688206	ShiftExpression	inst >> 23		2688163	0		>>			
ANR	2688207	Identifier	inst		2688163	0					
ANR	2688208	PrimaryExpression	23		2688163	1					
ANR	2688209	PrimaryExpression	0x01		2688163	1					
ANR	2688210	IdentifierDeclStatement	short indexing = ( inst >> 24 ) & 0x01 ;	223:1:7288:7325	2688163	4	True				
ANR	2688211	IdentifierDecl	indexing = ( inst >> 24 ) & 0x01		2688163	0					
ANR	2688212	IdentifierDeclType	short		2688163	0					
ANR	2688213	Identifier	indexing		2688163	1					
ANR	2688214	AssignmentExpression	indexing = ( inst >> 24 ) & 0x01		2688163	2		=			
ANR	2688215	Identifier	indexing		2688163	0					
ANR	2688216	BitAndExpression	( inst >> 24 ) & 0x01		2688163	1		&			
ANR	2688217	ShiftExpression	inst >> 24		2688163	0		>>			
ANR	2688218	Identifier	inst		2688163	0					
ANR	2688219	PrimaryExpression	24		2688163	1					
ANR	2688220	PrimaryExpression	0x01		2688163	1					
ANR	2688221	IdentifierDeclStatement	short immediate = ! ( ( inst >> 25 ) & 0x01 ) ;	224:1:7328:7368	2688163	5	True				
ANR	2688222	IdentifierDecl	immediate = ! ( ( inst >> 25 ) & 0x01 )		2688163	0					
ANR	2688223	IdentifierDeclType	short		2688163	0					
ANR	2688224	Identifier	immediate		2688163	1					
ANR	2688225	AssignmentExpression	immediate = ! ( ( inst >> 25 ) & 0x01 )		2688163	2		=			
ANR	2688226	Identifier	immediate		2688163	0					
ANR	2688227	UnaryOperationExpression	! ( ( inst >> 25 ) & 0x01 )		2688163	1					
ANR	2688228	UnaryOperator	!		2688163	0					
ANR	2688229	BitAndExpression	( inst >> 25 ) & 0x01		2688163	1		&			
ANR	2688230	ShiftExpression	inst >> 25		2688163	0		>>			
ANR	2688231	Identifier	inst		2688163	0					
ANR	2688232	PrimaryExpression	25		2688163	1					
ANR	2688233	PrimaryExpression	0x01		2688163	1					
ANR	2688234	IdentifierDeclStatement	short offset = inst & 0x0fff ;	225:1:7371:7402	2688163	6	True				
ANR	2688235	IdentifierDecl	offset = inst & 0x0fff		2688163	0					
ANR	2688236	IdentifierDeclType	short		2688163	0					
ANR	2688237	Identifier	offset		2688163	1					
ANR	2688238	AssignmentExpression	offset = inst & 0x0fff		2688163	2		=			
ANR	2688239	Identifier	offset		2688163	0					
ANR	2688240	BitAndExpression	inst & 0x0fff		2688163	1		&			
ANR	2688241	Identifier	inst		2688163	0					
ANR	2688242	PrimaryExpression	0x0fff		2688163	1					
ANR	2688243	IfStatement	if ( ! direction )		2688163	7					
ANR	2688244	Condition	! direction	227:5:7410:7419	2688163	0	True				
ANR	2688245	UnaryOperationExpression	! direction		2688163	0					
ANR	2688246	UnaryOperator	!		2688163	0					
ANR	2688247	Identifier	direction		2688163	1					
ANR	2688248	CompoundStatement		10:17:296:296	2688163	1					
ANR	2688249	ExpressionStatement	offset *= - 1	228:2:7426:7438	2688163	0	True				
ANR	2688250	AssignmentExpression	offset *= - 1		2688163	0		*=			
ANR	2688251	Identifier	offset		2688163	0					
ANR	2688252	UnaryOperationExpression	- 1		2688163	1					
ANR	2688253	UnaryOperator	-		2688163	0					
ANR	2688254	PrimaryExpression	1		2688163	1					
ANR	2688255	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s"" , load ? ""ldr"" : ""str"" , byte ? ""b"" : """" , writeback ? ""t"" : """" , get_cond ( inst ) )"	231:1:7445:7589	2688163	8	True				
ANR	2688256	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s"" , load ? ""ldr"" : ""str"" , byte ? ""b"" : """" , writeback ? ""t"" : """" , get_cond ( inst ) )"		2688163	0		=			
ANR	2688257	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688258	Identifier	arminsn		2688163	0					
ANR	2688259	Identifier	str_asm		2688163	1					
ANR	2688260	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s"" , load ? ""ldr"" : ""str"" , byte ? ""b"" : """" , writeback ? ""t"" : """" , get_cond ( inst ) )"		2688163	1					
ANR	2688261	Callee	r_str_appendf		2688163	0					
ANR	2688262	Identifier	r_str_appendf		2688163	0					
ANR	2688263	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688264	Argument	arminsn -> str_asm		2688163	0					
ANR	2688265	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688266	Identifier	arminsn		2688163	0					
ANR	2688267	Identifier	str_asm		2688163	1					
ANR	2688268	Argument	"""%s%s%s%s"""		2688163	1					
ANR	2688269	PrimaryExpression	"""%s%s%s%s"""		2688163	0					
ANR	2688270	Argument	"load ? ""ldr"" : ""str"""		2688163	2					
ANR	2688271	ConditionalExpression	"load ? ""ldr"" : ""str"""		2688163	0					
ANR	2688272	Condition	load		2688163	0					
ANR	2688273	Identifier	load		2688163	0					
ANR	2688274	PrimaryExpression	"""ldr"""		2688163	1					
ANR	2688275	PrimaryExpression	"""str"""		2688163	2					
ANR	2688276	Argument	"byte ? ""b"" : """""		2688163	3					
ANR	2688277	ConditionalExpression	"byte ? ""b"" : """""		2688163	0					
ANR	2688278	Condition	byte		2688163	0					
ANR	2688279	Identifier	byte		2688163	0					
ANR	2688280	PrimaryExpression	"""b"""		2688163	1					
ANR	2688281	PrimaryExpression	""""""		2688163	2					
ANR	2688282	Argument	"writeback ? ""t"" : """""		2688163	4					
ANR	2688283	ConditionalExpression	"writeback ? ""t"" : """""		2688163	0					
ANR	2688284	Condition	writeback		2688163	0					
ANR	2688285	Identifier	writeback		2688163	0					
ANR	2688286	PrimaryExpression	"""t"""		2688163	1					
ANR	2688287	PrimaryExpression	""""""		2688163	2					
ANR	2688288	Argument	get_cond ( inst )		2688163	5					
ANR	2688289	CallExpression	get_cond ( inst )		2688163	0					
ANR	2688290	Callee	get_cond		2688163	0					
ANR	2688291	Identifier	get_cond		2688163	0					
ANR	2688292	ArgumentList	inst		2688163	1					
ANR	2688293	Argument	inst		2688163	0					
ANR	2688294	Identifier	inst		2688163	0					
ANR	2688295	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"	233:1:7592:7684	2688163	9	True				
ANR	2688296	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2688163	0		=			
ANR	2688297	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688298	Identifier	arminsn		2688163	0					
ANR	2688299	Identifier	str_asm		2688163	1					
ANR	2688300	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2688163	1					
ANR	2688301	Callee	r_str_appendf		2688163	0					
ANR	2688302	Identifier	r_str_appendf		2688163	0					
ANR	2688303	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688304	Argument	arminsn -> str_asm		2688163	0					
ANR	2688305	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688306	Identifier	arminsn		2688163	0					
ANR	2688307	Identifier	str_asm		2688163	1					
ANR	2688308	Argument	""" %s, """		2688163	1					
ANR	2688309	PrimaryExpression	""" %s, """		2688163	0					
ANR	2688310	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2688163	2					
ANR	2688311	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2688163	0					
ANR	2688312	Identifier	tbl_regs		2688163	0					
ANR	2688313	CallExpression	"get_nibble ( inst , 3 )"		2688163	1					
ANR	2688314	Callee	get_nibble		2688163	0					
ANR	2688315	Identifier	get_nibble		2688163	0					
ANR	2688316	ArgumentList	inst		2688163	1					
ANR	2688317	Argument	inst		2688163	0					
ANR	2688318	Identifier	inst		2688163	0					
ANR	2688319	Argument	3		2688163	1					
ANR	2688320	PrimaryExpression	3		2688163	0					
ANR	2688321	IfStatement	if ( indexing )		2688163	10					
ANR	2688322	Condition	indexing	234:5:7691:7698	2688163	0	True				
ANR	2688323	Identifier	indexing		2688163	0					
ANR	2688324	CompoundStatement		17:15:575:575	2688163	1					
ANR	2688325	IfStatement	if ( immediate )		2688163	0					
ANR	2688326	Condition	immediate	235:6:7709:7717	2688163	0	True				
ANR	2688327	Identifier	immediate		2688163	0					
ANR	2688328	CompoundStatement		18:17:594:594	2688163	1					
ANR	2688329	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	236:3:7725:7829	2688163	0	True				
ANR	2688330	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688163	0		=			
ANR	2688331	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688332	Identifier	arminsn		2688163	0					
ANR	2688333	Identifier	str_asm		2688163	1					
ANR	2688334	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688163	1					
ANR	2688335	Callee	r_str_appendf		2688163	0					
ANR	2688336	Identifier	r_str_appendf		2688163	0					
ANR	2688337	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688338	Argument	arminsn -> str_asm		2688163	0					
ANR	2688339	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688340	Identifier	arminsn		2688163	0					
ANR	2688341	Identifier	str_asm		2688163	1					
ANR	2688342	Argument	"""[%s, #%d]"""		2688163	1					
ANR	2688343	PrimaryExpression	"""[%s, #%d]"""		2688163	0					
ANR	2688344	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	2					
ANR	2688345	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	0					
ANR	2688346	Identifier	tbl_regs		2688163	0					
ANR	2688347	CallExpression	"get_nibble ( inst , 4 )"		2688163	1					
ANR	2688348	Callee	get_nibble		2688163	0					
ANR	2688349	Identifier	get_nibble		2688163	0					
ANR	2688350	ArgumentList	inst		2688163	1					
ANR	2688351	Argument	inst		2688163	0					
ANR	2688352	Identifier	inst		2688163	0					
ANR	2688353	Argument	4		2688163	1					
ANR	2688354	PrimaryExpression	4		2688163	0					
ANR	2688355	Argument	offset		2688163	3					
ANR	2688356	Identifier	offset		2688163	0					
ANR	2688357	ElseStatement	else		2688163	0					
ANR	2688358	IfStatement	if ( ( ( inst >> 4 ) & 0xff ) == 0x00 )		2688163	0					
ANR	2688359	Condition	( ( inst >> 4 ) & 0xff ) == 0x00	238:11:7846:7873	2688163	0	True				
ANR	2688360	EqualityExpression	( ( inst >> 4 ) & 0xff ) == 0x00		2688163	0		==			
ANR	2688361	BitAndExpression	( inst >> 4 ) & 0xff		2688163	0		&			
ANR	2688362	ShiftExpression	inst >> 4		2688163	0		>>			
ANR	2688363	Identifier	inst		2688163	0					
ANR	2688364	PrimaryExpression	4		2688163	1					
ANR	2688365	PrimaryExpression	0xff		2688163	1					
ANR	2688366	PrimaryExpression	0x00		2688163	1					
ANR	2688367	CompoundStatement		21:41:750:750	2688163	1					
ANR	2688368	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	239:3:7896:8028	2688163	0	True				
ANR	2688369	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688163	0		=			
ANR	2688370	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688371	Identifier	arminsn		2688163	0					
ANR	2688372	Identifier	str_asm		2688163	1					
ANR	2688373	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688163	1					
ANR	2688374	Callee	r_str_appendf		2688163	0					
ANR	2688375	Identifier	r_str_appendf		2688163	0					
ANR	2688376	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688377	Argument	arminsn -> str_asm		2688163	0					
ANR	2688378	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688379	Identifier	arminsn		2688163	0					
ANR	2688380	Identifier	str_asm		2688163	1					
ANR	2688381	Argument	"""[%s, %s]"""		2688163	1					
ANR	2688382	PrimaryExpression	"""[%s, %s]"""		2688163	0					
ANR	2688383	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	2					
ANR	2688384	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	0					
ANR	2688385	Identifier	tbl_regs		2688163	0					
ANR	2688386	CallExpression	"get_nibble ( inst , 4 )"		2688163	1					
ANR	2688387	Callee	get_nibble		2688163	0					
ANR	2688388	Identifier	get_nibble		2688163	0					
ANR	2688389	ArgumentList	inst		2688163	1					
ANR	2688390	Argument	inst		2688163	0					
ANR	2688391	Identifier	inst		2688163	0					
ANR	2688392	Argument	4		2688163	1					
ANR	2688393	PrimaryExpression	4		2688163	0					
ANR	2688394	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	3					
ANR	2688395	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	0					
ANR	2688396	Identifier	tbl_regs		2688163	0					
ANR	2688397	CallExpression	"get_nibble ( inst , 0 )"		2688163	1					
ANR	2688398	Callee	get_nibble		2688163	0					
ANR	2688399	Identifier	get_nibble		2688163	0					
ANR	2688400	ArgumentList	inst		2688163	1					
ANR	2688401	Argument	inst		2688163	0					
ANR	2688402	Identifier	inst		2688163	0					
ANR	2688403	Argument	0		2688163	1					
ANR	2688404	PrimaryExpression	0		2688163	0					
ANR	2688405	ElseStatement	else		2688163	0					
ANR	2688406	IfStatement	if ( ( ( inst >> 4 ) & 0x01 ) == 0x00 )		2688163	0					
ANR	2688407	Condition	( ( inst >> 4 ) & 0x01 ) == 0x00	242:11:8045:8072	2688163	0	True				
ANR	2688408	EqualityExpression	( ( inst >> 4 ) & 0x01 ) == 0x00		2688163	0		==			
ANR	2688409	BitAndExpression	( inst >> 4 ) & 0x01		2688163	0		&			
ANR	2688410	ShiftExpression	inst >> 4		2688163	0		>>			
ANR	2688411	Identifier	inst		2688163	0					
ANR	2688412	PrimaryExpression	4		2688163	1					
ANR	2688413	PrimaryExpression	0x01		2688163	1					
ANR	2688414	PrimaryExpression	0x00		2688163	1					
ANR	2688415	CompoundStatement		25:41:949:949	2688163	1					
ANR	2688416	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s, %s #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"	243:3:8129:8326	2688163	0	True				
ANR	2688417	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s, %s #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		2688163	0		=			
ANR	2688418	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688419	Identifier	arminsn		2688163	0					
ANR	2688420	Identifier	str_asm		2688163	1					
ANR	2688421	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, %s, %s #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		2688163	1					
ANR	2688422	Callee	r_str_appendf		2688163	0					
ANR	2688423	Identifier	r_str_appendf		2688163	0					
ANR	2688424	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688425	Argument	arminsn -> str_asm		2688163	0					
ANR	2688426	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688427	Identifier	arminsn		2688163	0					
ANR	2688428	Identifier	str_asm		2688163	1					
ANR	2688429	Argument	"""[%s, %s, %s #%d]"""		2688163	1					
ANR	2688430	PrimaryExpression	"""[%s, %s, %s #%d]"""		2688163	0					
ANR	2688431	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	2					
ANR	2688432	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	0					
ANR	2688433	Identifier	tbl_regs		2688163	0					
ANR	2688434	CallExpression	"get_nibble ( inst , 4 )"		2688163	1					
ANR	2688435	Callee	get_nibble		2688163	0					
ANR	2688436	Identifier	get_nibble		2688163	0					
ANR	2688437	ArgumentList	inst		2688163	1					
ANR	2688438	Argument	inst		2688163	0					
ANR	2688439	Identifier	inst		2688163	0					
ANR	2688440	Argument	4		2688163	1					
ANR	2688441	PrimaryExpression	4		2688163	0					
ANR	2688442	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	3					
ANR	2688443	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	0					
ANR	2688444	Identifier	tbl_regs		2688163	0					
ANR	2688445	CallExpression	"get_nibble ( inst , 0 )"		2688163	1					
ANR	2688446	Callee	get_nibble		2688163	0					
ANR	2688447	Identifier	get_nibble		2688163	0					
ANR	2688448	ArgumentList	inst		2688163	1					
ANR	2688449	Argument	inst		2688163	0					
ANR	2688450	Identifier	inst		2688163	0					
ANR	2688451	Argument	0		2688163	1					
ANR	2688452	PrimaryExpression	0		2688163	0					
ANR	2688453	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2688163	4					
ANR	2688454	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2688163	0					
ANR	2688455	Identifier	tbl_shifts		2688163	0					
ANR	2688456	BitAndExpression	( inst >> 5 ) & 0x03		2688163	1		&			
ANR	2688457	ShiftExpression	inst >> 5		2688163	0		>>			
ANR	2688458	Identifier	inst		2688163	0					
ANR	2688459	PrimaryExpression	5		2688163	1					
ANR	2688460	PrimaryExpression	0x03		2688163	1					
ANR	2688461	Argument	( inst >> 7 ) & 0x1f		2688163	5					
ANR	2688462	BitAndExpression	( inst >> 7 ) & 0x1f		2688163	0		&			
ANR	2688463	ShiftExpression	inst >> 7		2688163	0		>>			
ANR	2688464	Identifier	inst		2688163	0					
ANR	2688465	PrimaryExpression	7		2688163	1					
ANR	2688466	PrimaryExpression	0x1f		2688163	1					
ANR	2688467	ElseStatement	else		2688163	0					
ANR	2688468	CompoundStatement		30:7:1213:1213	2688163	0					
ANR	2688469	ReturnStatement	return inst ;	248:3:8344:8355	2688163	0	True				
ANR	2688470	Identifier	inst		2688163	0					
ANR	2688471	ElseStatement	else		2688163	0					
ANR	2688472	CompoundStatement		33:8:1243:1243	2688163	0					
ANR	2688473	IfStatement	if ( immediate )		2688163	0					
ANR	2688474	Condition	immediate	251:6:8377:8385	2688163	0	True				
ANR	2688475	Identifier	immediate		2688163	0					
ANR	2688476	CompoundStatement		34:17:1262:1262	2688163	1					
ANR	2688477	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	252:3:8393:8497	2688163	0	True				
ANR	2688478	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688163	0		=			
ANR	2688479	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688480	Identifier	arminsn		2688163	0					
ANR	2688481	Identifier	str_asm		2688163	1					
ANR	2688482	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688163	1					
ANR	2688483	Callee	r_str_appendf		2688163	0					
ANR	2688484	Identifier	r_str_appendf		2688163	0					
ANR	2688485	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688486	Argument	arminsn -> str_asm		2688163	0					
ANR	2688487	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688488	Identifier	arminsn		2688163	0					
ANR	2688489	Identifier	str_asm		2688163	1					
ANR	2688490	Argument	"""[%s], #%d"""		2688163	1					
ANR	2688491	PrimaryExpression	"""[%s], #%d"""		2688163	0					
ANR	2688492	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	2					
ANR	2688493	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	0					
ANR	2688494	Identifier	tbl_regs		2688163	0					
ANR	2688495	CallExpression	"get_nibble ( inst , 4 )"		2688163	1					
ANR	2688496	Callee	get_nibble		2688163	0					
ANR	2688497	Identifier	get_nibble		2688163	0					
ANR	2688498	ArgumentList	inst		2688163	1					
ANR	2688499	Argument	inst		2688163	0					
ANR	2688500	Identifier	inst		2688163	0					
ANR	2688501	Argument	4		2688163	1					
ANR	2688502	PrimaryExpression	4		2688163	0					
ANR	2688503	Argument	offset		2688163	3					
ANR	2688504	Identifier	offset		2688163	0					
ANR	2688505	ElseStatement	else		2688163	0					
ANR	2688506	IfStatement	if ( ( ( inst >> 4 ) & 0xff ) == 0x00 )		2688163	0					
ANR	2688507	Condition	( ( inst >> 4 ) & 0xff ) == 0x00	254:11:8514:8541	2688163	0	True				
ANR	2688508	EqualityExpression	( ( inst >> 4 ) & 0xff ) == 0x00		2688163	0		==			
ANR	2688509	BitAndExpression	( inst >> 4 ) & 0xff		2688163	0		&			
ANR	2688510	ShiftExpression	inst >> 4		2688163	0		>>			
ANR	2688511	Identifier	inst		2688163	0					
ANR	2688512	PrimaryExpression	4		2688163	1					
ANR	2688513	PrimaryExpression	0xff		2688163	1					
ANR	2688514	PrimaryExpression	0x00		2688163	1					
ANR	2688515	CompoundStatement		37:41:1418:1418	2688163	1					
ANR	2688516	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	255:3:8564:8696	2688163	0	True				
ANR	2688517	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688163	0		=			
ANR	2688518	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688519	Identifier	arminsn		2688163	0					
ANR	2688520	Identifier	str_asm		2688163	1					
ANR	2688521	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688163	1					
ANR	2688522	Callee	r_str_appendf		2688163	0					
ANR	2688523	Identifier	r_str_appendf		2688163	0					
ANR	2688524	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688525	Argument	arminsn -> str_asm		2688163	0					
ANR	2688526	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688527	Identifier	arminsn		2688163	0					
ANR	2688528	Identifier	str_asm		2688163	1					
ANR	2688529	Argument	"""[%s], %s"""		2688163	1					
ANR	2688530	PrimaryExpression	"""[%s], %s"""		2688163	0					
ANR	2688531	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	2					
ANR	2688532	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	0					
ANR	2688533	Identifier	tbl_regs		2688163	0					
ANR	2688534	CallExpression	"get_nibble ( inst , 4 )"		2688163	1					
ANR	2688535	Callee	get_nibble		2688163	0					
ANR	2688536	Identifier	get_nibble		2688163	0					
ANR	2688537	ArgumentList	inst		2688163	1					
ANR	2688538	Argument	inst		2688163	0					
ANR	2688539	Identifier	inst		2688163	0					
ANR	2688540	Argument	4		2688163	1					
ANR	2688541	PrimaryExpression	4		2688163	0					
ANR	2688542	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	3					
ANR	2688543	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	0					
ANR	2688544	Identifier	tbl_regs		2688163	0					
ANR	2688545	CallExpression	"get_nibble ( inst , 0 )"		2688163	1					
ANR	2688546	Callee	get_nibble		2688163	0					
ANR	2688547	Identifier	get_nibble		2688163	0					
ANR	2688548	ArgumentList	inst		2688163	1					
ANR	2688549	Argument	inst		2688163	0					
ANR	2688550	Identifier	inst		2688163	0					
ANR	2688551	Argument	0		2688163	1					
ANR	2688552	PrimaryExpression	0		2688163	0					
ANR	2688553	ElseStatement	else		2688163	0					
ANR	2688554	IfStatement	if ( ( ( inst >> 4 ) & 0x01 ) == 0x00 )		2688163	0					
ANR	2688555	Condition	( ( inst >> 4 ) & 0x01 ) == 0x00	258:11:8713:8740	2688163	0	True				
ANR	2688556	EqualityExpression	( ( inst >> 4 ) & 0x01 ) == 0x00		2688163	0		==			
ANR	2688557	BitAndExpression	( inst >> 4 ) & 0x01		2688163	0		&			
ANR	2688558	ShiftExpression	inst >> 4		2688163	0		>>			
ANR	2688559	Identifier	inst		2688163	0					
ANR	2688560	PrimaryExpression	4		2688163	1					
ANR	2688561	PrimaryExpression	0x01		2688163	1					
ANR	2688562	PrimaryExpression	0x00		2688163	1					
ANR	2688563	CompoundStatement		41:41:1617:1617	2688163	1					
ANR	2688564	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"	259:3:8798:8995	2688163	0	True				
ANR	2688565	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		2688163	0		=			
ANR	2688566	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688567	Identifier	arminsn		2688163	0					
ANR	2688568	Identifier	str_asm		2688163	1					
ANR	2688569	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], %s, %s #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_shifts [ ( inst >> 5 ) & 0x03 ] , ( inst >> 7 ) & 0x1f )"		2688163	1					
ANR	2688570	Callee	r_str_appendf		2688163	0					
ANR	2688571	Identifier	r_str_appendf		2688163	0					
ANR	2688572	ArgumentList	arminsn -> str_asm		2688163	1					
ANR	2688573	Argument	arminsn -> str_asm		2688163	0					
ANR	2688574	PtrMemberAccess	arminsn -> str_asm		2688163	0					
ANR	2688575	Identifier	arminsn		2688163	0					
ANR	2688576	Identifier	str_asm		2688163	1					
ANR	2688577	Argument	"""[%s], %s, %s #%d"""		2688163	1					
ANR	2688578	PrimaryExpression	"""[%s], %s, %s #%d"""		2688163	0					
ANR	2688579	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	2					
ANR	2688580	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688163	0					
ANR	2688581	Identifier	tbl_regs		2688163	0					
ANR	2688582	CallExpression	"get_nibble ( inst , 4 )"		2688163	1					
ANR	2688583	Callee	get_nibble		2688163	0					
ANR	2688584	Identifier	get_nibble		2688163	0					
ANR	2688585	ArgumentList	inst		2688163	1					
ANR	2688586	Argument	inst		2688163	0					
ANR	2688587	Identifier	inst		2688163	0					
ANR	2688588	Argument	4		2688163	1					
ANR	2688589	PrimaryExpression	4		2688163	0					
ANR	2688590	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	3					
ANR	2688591	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688163	0					
ANR	2688592	Identifier	tbl_regs		2688163	0					
ANR	2688593	CallExpression	"get_nibble ( inst , 0 )"		2688163	1					
ANR	2688594	Callee	get_nibble		2688163	0					
ANR	2688595	Identifier	get_nibble		2688163	0					
ANR	2688596	ArgumentList	inst		2688163	1					
ANR	2688597	Argument	inst		2688163	0					
ANR	2688598	Identifier	inst		2688163	0					
ANR	2688599	Argument	0		2688163	1					
ANR	2688600	PrimaryExpression	0		2688163	0					
ANR	2688601	Argument	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2688163	4					
ANR	2688602	ArrayIndexing	tbl_shifts [ ( inst >> 5 ) & 0x03 ]		2688163	0					
ANR	2688603	Identifier	tbl_shifts		2688163	0					
ANR	2688604	BitAndExpression	( inst >> 5 ) & 0x03		2688163	1		&			
ANR	2688605	ShiftExpression	inst >> 5		2688163	0		>>			
ANR	2688606	Identifier	inst		2688163	0					
ANR	2688607	PrimaryExpression	5		2688163	1					
ANR	2688608	PrimaryExpression	0x03		2688163	1					
ANR	2688609	Argument	( inst >> 7 ) & 0x1f		2688163	5					
ANR	2688610	BitAndExpression	( inst >> 7 ) & 0x1f		2688163	0		&			
ANR	2688611	ShiftExpression	inst >> 7		2688163	0		>>			
ANR	2688612	Identifier	inst		2688163	0					
ANR	2688613	PrimaryExpression	7		2688163	1					
ANR	2688614	PrimaryExpression	0x1f		2688163	1					
ANR	2688615	ElseStatement	else		2688163	0					
ANR	2688616	CompoundStatement		46:7:1882:1882	2688163	0					
ANR	2688617	ReturnStatement	return inst ;	264:3:9013:9024	2688163	0	True				
ANR	2688618	Identifier	inst		2688163	0					
ANR	2688619	ReturnStatement	return 0 ;	267:1:9034:9042	2688163	11	True				
ANR	2688620	PrimaryExpression	0		2688163	0					
ANR	2688621	ReturnType	static ut32		2688163	1					
ANR	2688622	Identifier	arm_disasm_singletrans		2688163	2					
ANR	2688623	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2688163	3					
ANR	2688624	Parameter	struct winedbg_arm_insn * arminsn	218:35:7080:7111	2688163	0	True				
ANR	2688625	ParameterType	struct winedbg_arm_insn *		2688163	0					
ANR	2688626	Identifier	arminsn		2688163	1					
ANR	2688627	Parameter	ut32 inst	218:69:7114:7122	2688163	1	True				
ANR	2688628	ParameterType	ut32		2688163	0					
ANR	2688629	Identifier	inst		2688163	1					
ANR	2688630	CFGEntryNode	ENTRY		2688163		True				
ANR	2688631	CFGExitNode	EXIT		2688163		True				
ANR	2688632	Symbol	get_cond		2688163						
ANR	2688633	Symbol	tbl_shifts		2688163						
ANR	2688634	Symbol	* inst		2688163						
ANR	2688635	Symbol	indexing		2688163						
ANR	2688636	Symbol	offset		2688163						
ANR	2688637	Symbol	* tbl_shifts		2688163						
ANR	2688638	Symbol	byte		2688163						
ANR	2688639	Symbol	tbl_regs		2688163						
ANR	2688640	Symbol	arminsn		2688163						
ANR	2688641	Symbol	arminsn -> str_asm		2688163						
ANR	2688642	Symbol	* arminsn		2688163						
ANR	2688643	Symbol	get_nibble		2688163						
ANR	2688644	Symbol	load		2688163						
ANR	2688645	Symbol	writeback		2688163						
ANR	2688646	Symbol	immediate		2688163						
ANR	2688647	Symbol	* tbl_regs		2688163						
ANR	2688648	Symbol	inst		2688163						
ANR	2688649	Symbol	r_str_appendf		2688163						
ANR	2688650	Symbol	* get_nibble		2688163						
ANR	2688651	Symbol	direction		2688163						
ANR	2688652	Function	arm_disasm_halfwordtrans	270:0:9047:10392							
ANR	2688653	FunctionDef	"arm_disasm_halfwordtrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2688652	0					
ANR	2688654	CompoundStatement		270:82:9129:10392	2688652	0					
ANR	2688655	IdentifierDeclStatement	short halfword = ( inst >> 5 ) & 0x01 ;	271:1:9132:9169	2688652	0	True				
ANR	2688656	IdentifierDecl	halfword = ( inst >> 5 ) & 0x01		2688652	0					
ANR	2688657	IdentifierDeclType	short		2688652	0					
ANR	2688658	Identifier	halfword		2688652	1					
ANR	2688659	AssignmentExpression	halfword = ( inst >> 5 ) & 0x01		2688652	2		=			
ANR	2688660	Identifier	halfword		2688652	0					
ANR	2688661	BitAndExpression	( inst >> 5 ) & 0x01		2688652	1		&			
ANR	2688662	ShiftExpression	inst >> 5		2688652	0		>>			
ANR	2688663	Identifier	inst		2688652	0					
ANR	2688664	PrimaryExpression	5		2688652	1					
ANR	2688665	PrimaryExpression	0x01		2688652	1					
ANR	2688666	IdentifierDeclStatement	short sign = ( inst >> 6 ) & 0x01 ;	272:1:9172:9209	2688652	1	True				
ANR	2688667	IdentifierDecl	sign = ( inst >> 6 ) & 0x01		2688652	0					
ANR	2688668	IdentifierDeclType	short		2688652	0					
ANR	2688669	Identifier	sign		2688652	1					
ANR	2688670	AssignmentExpression	sign = ( inst >> 6 ) & 0x01		2688652	2		=			
ANR	2688671	Identifier	sign		2688652	0					
ANR	2688672	BitAndExpression	( inst >> 6 ) & 0x01		2688652	1		&			
ANR	2688673	ShiftExpression	inst >> 6		2688652	0		>>			
ANR	2688674	Identifier	inst		2688652	0					
ANR	2688675	PrimaryExpression	6		2688652	1					
ANR	2688676	PrimaryExpression	0x01		2688652	1					
ANR	2688677	IdentifierDeclStatement	short load = ( inst >> 20 ) & 0x01 ;	273:1:9212:9249	2688652	2	True				
ANR	2688678	IdentifierDecl	load = ( inst >> 20 ) & 0x01		2688652	0					
ANR	2688679	IdentifierDeclType	short		2688652	0					
ANR	2688680	Identifier	load		2688652	1					
ANR	2688681	AssignmentExpression	load = ( inst >> 20 ) & 0x01		2688652	2		=			
ANR	2688682	Identifier	load		2688652	0					
ANR	2688683	BitAndExpression	( inst >> 20 ) & 0x01		2688652	1		&			
ANR	2688684	ShiftExpression	inst >> 20		2688652	0		>>			
ANR	2688685	Identifier	inst		2688652	0					
ANR	2688686	PrimaryExpression	20		2688652	1					
ANR	2688687	PrimaryExpression	0x01		2688652	1					
ANR	2688688	IdentifierDeclStatement	short writeback = ( inst >> 21 ) & 0x01 ;	274:1:9252:9289	2688652	3	True				
ANR	2688689	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		2688652	0					
ANR	2688690	IdentifierDeclType	short		2688652	0					
ANR	2688691	Identifier	writeback		2688652	1					
ANR	2688692	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		2688652	2		=			
ANR	2688693	Identifier	writeback		2688652	0					
ANR	2688694	BitAndExpression	( inst >> 21 ) & 0x01		2688652	1		&			
ANR	2688695	ShiftExpression	inst >> 21		2688652	0		>>			
ANR	2688696	Identifier	inst		2688652	0					
ANR	2688697	PrimaryExpression	21		2688652	1					
ANR	2688698	PrimaryExpression	0x01		2688652	1					
ANR	2688699	IdentifierDeclStatement	short immediate = ( inst >> 22 ) & 0x01 ;	275:1:9292:9329	2688652	4	True				
ANR	2688700	IdentifierDecl	immediate = ( inst >> 22 ) & 0x01		2688652	0					
ANR	2688701	IdentifierDeclType	short		2688652	0					
ANR	2688702	Identifier	immediate		2688652	1					
ANR	2688703	AssignmentExpression	immediate = ( inst >> 22 ) & 0x01		2688652	2		=			
ANR	2688704	Identifier	immediate		2688652	0					
ANR	2688705	BitAndExpression	( inst >> 22 ) & 0x01		2688652	1		&			
ANR	2688706	ShiftExpression	inst >> 22		2688652	0		>>			
ANR	2688707	Identifier	inst		2688652	0					
ANR	2688708	PrimaryExpression	22		2688652	1					
ANR	2688709	PrimaryExpression	0x01		2688652	1					
ANR	2688710	IdentifierDeclStatement	short direction = ( inst >> 23 ) & 0x01 ;	276:1:9332:9369	2688652	5	True				
ANR	2688711	IdentifierDecl	direction = ( inst >> 23 ) & 0x01		2688652	0					
ANR	2688712	IdentifierDeclType	short		2688652	0					
ANR	2688713	Identifier	direction		2688652	1					
ANR	2688714	AssignmentExpression	direction = ( inst >> 23 ) & 0x01		2688652	2		=			
ANR	2688715	Identifier	direction		2688652	0					
ANR	2688716	BitAndExpression	( inst >> 23 ) & 0x01		2688652	1		&			
ANR	2688717	ShiftExpression	inst >> 23		2688652	0		>>			
ANR	2688718	Identifier	inst		2688652	0					
ANR	2688719	PrimaryExpression	23		2688652	1					
ANR	2688720	PrimaryExpression	0x01		2688652	1					
ANR	2688721	IdentifierDeclStatement	short indexing = ( inst >> 24 ) & 0x01 ;	277:1:9372:9409	2688652	6	True				
ANR	2688722	IdentifierDecl	indexing = ( inst >> 24 ) & 0x01		2688652	0					
ANR	2688723	IdentifierDeclType	short		2688652	0					
ANR	2688724	Identifier	indexing		2688652	1					
ANR	2688725	AssignmentExpression	indexing = ( inst >> 24 ) & 0x01		2688652	2		=			
ANR	2688726	Identifier	indexing		2688652	0					
ANR	2688727	BitAndExpression	( inst >> 24 ) & 0x01		2688652	1		&			
ANR	2688728	ShiftExpression	inst >> 24		2688652	0		>>			
ANR	2688729	Identifier	inst		2688652	0					
ANR	2688730	PrimaryExpression	24		2688652	1					
ANR	2688731	PrimaryExpression	0x01		2688652	1					
ANR	2688732	IdentifierDeclStatement	short offset = ( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f ) ;	278:1:9412:9466	2688652	7	True				
ANR	2688733	IdentifierDecl	offset = ( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f )		2688652	0					
ANR	2688734	IdentifierDeclType	short		2688652	0					
ANR	2688735	Identifier	offset		2688652	1					
ANR	2688736	AssignmentExpression	offset = ( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f )		2688652	2		=			
ANR	2688737	Identifier	offset		2688652	0					
ANR	2688738	AdditiveExpression	( ( inst >> 4 ) & 0xf0 ) + ( inst & 0x0f )		2688652	1		+			
ANR	2688739	BitAndExpression	( inst >> 4 ) & 0xf0		2688652	0		&			
ANR	2688740	ShiftExpression	inst >> 4		2688652	0		>>			
ANR	2688741	Identifier	inst		2688652	0					
ANR	2688742	PrimaryExpression	4		2688652	1					
ANR	2688743	PrimaryExpression	0xf0		2688652	1					
ANR	2688744	BitAndExpression	inst & 0x0f		2688652	1		&			
ANR	2688745	Identifier	inst		2688652	0					
ANR	2688746	PrimaryExpression	0x0f		2688652	1					
ANR	2688747	IfStatement	if ( ! direction )		2688652	8					
ANR	2688748	Condition	! direction	280:5:9474:9483	2688652	0	True				
ANR	2688749	UnaryOperationExpression	! direction		2688652	0					
ANR	2688750	UnaryOperator	!		2688652	0					
ANR	2688751	Identifier	direction		2688652	1					
ANR	2688752	CompoundStatement		11:16:355:355	2688652	1					
ANR	2688753	ExpressionStatement	offset *= - 1	281:2:9489:9501	2688652	0	True				
ANR	2688754	AssignmentExpression	offset *= - 1		2688652	0		*=			
ANR	2688755	Identifier	offset		2688652	0					
ANR	2688756	UnaryOperationExpression	- 1		2688652	1					
ANR	2688757	UnaryOperator	-		2688652	0					
ANR	2688758	PrimaryExpression	1		2688652	1					
ANR	2688759	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s%s"" , load ? ""ldr"" : ""str"" , sign ? ""s"" : """" , halfword ? ""h"" : ( sign ? ""b"" : """" ) , writeback ? ""t"" : """" , get_cond ( inst ) )"	284:1:9508:9690	2688652	9	True				
ANR	2688760	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s%s"" , load ? ""ldr"" : ""str"" , sign ? ""s"" : """" , halfword ? ""h"" : ( sign ? ""b"" : """" ) , writeback ? ""t"" : """" , get_cond ( inst ) )"		2688652	0		=			
ANR	2688761	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688762	Identifier	arminsn		2688652	0					
ANR	2688763	Identifier	str_asm		2688652	1					
ANR	2688764	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s%s%s"" , load ? ""ldr"" : ""str"" , sign ? ""s"" : """" , halfword ? ""h"" : ( sign ? ""b"" : """" ) , writeback ? ""t"" : """" , get_cond ( inst ) )"		2688652	1					
ANR	2688765	Callee	r_str_appendf		2688652	0					
ANR	2688766	Identifier	r_str_appendf		2688652	0					
ANR	2688767	ArgumentList	arminsn -> str_asm		2688652	1					
ANR	2688768	Argument	arminsn -> str_asm		2688652	0					
ANR	2688769	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688770	Identifier	arminsn		2688652	0					
ANR	2688771	Identifier	str_asm		2688652	1					
ANR	2688772	Argument	"""%s%s%s%s%s"""		2688652	1					
ANR	2688773	PrimaryExpression	"""%s%s%s%s%s"""		2688652	0					
ANR	2688774	Argument	"load ? ""ldr"" : ""str"""		2688652	2					
ANR	2688775	ConditionalExpression	"load ? ""ldr"" : ""str"""		2688652	0					
ANR	2688776	Condition	load		2688652	0					
ANR	2688777	Identifier	load		2688652	0					
ANR	2688778	PrimaryExpression	"""ldr"""		2688652	1					
ANR	2688779	PrimaryExpression	"""str"""		2688652	2					
ANR	2688780	Argument	"sign ? ""s"" : """""		2688652	3					
ANR	2688781	ConditionalExpression	"sign ? ""s"" : """""		2688652	0					
ANR	2688782	Condition	sign		2688652	0					
ANR	2688783	Identifier	sign		2688652	0					
ANR	2688784	PrimaryExpression	"""s"""		2688652	1					
ANR	2688785	PrimaryExpression	""""""		2688652	2					
ANR	2688786	Argument	"halfword ? ""h"" : ( sign ? ""b"" : """" )"		2688652	4					
ANR	2688787	ConditionalExpression	"halfword ? ""h"" : ( sign ? ""b"" : """" )"		2688652	0					
ANR	2688788	Condition	halfword		2688652	0					
ANR	2688789	Identifier	halfword		2688652	0					
ANR	2688790	PrimaryExpression	"""h"""		2688652	1					
ANR	2688791	ConditionalExpression	"sign ? ""b"" : """""		2688652	2					
ANR	2688792	Condition	sign		2688652	0					
ANR	2688793	Identifier	sign		2688652	0					
ANR	2688794	PrimaryExpression	"""b"""		2688652	1					
ANR	2688795	PrimaryExpression	""""""		2688652	2					
ANR	2688796	Argument	"writeback ? ""t"" : """""		2688652	5					
ANR	2688797	ConditionalExpression	"writeback ? ""t"" : """""		2688652	0					
ANR	2688798	Condition	writeback		2688652	0					
ANR	2688799	Identifier	writeback		2688652	0					
ANR	2688800	PrimaryExpression	"""t"""		2688652	1					
ANR	2688801	PrimaryExpression	""""""		2688652	2					
ANR	2688802	Argument	get_cond ( inst )		2688652	6					
ANR	2688803	CallExpression	get_cond ( inst )		2688652	0					
ANR	2688804	Callee	get_cond		2688652	0					
ANR	2688805	Identifier	get_cond		2688652	0					
ANR	2688806	ArgumentList	inst		2688652	1					
ANR	2688807	Argument	inst		2688652	0					
ANR	2688808	Identifier	inst		2688652	0					
ANR	2688809	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"	286:1:9693:9785	2688652	10	True				
ANR	2688810	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2688652	0		=			
ANR	2688811	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688812	Identifier	arminsn		2688652	0					
ANR	2688813	Identifier	str_asm		2688652	1					
ANR	2688814	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %s, "" , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2688652	1					
ANR	2688815	Callee	r_str_appendf		2688652	0					
ANR	2688816	Identifier	r_str_appendf		2688652	0					
ANR	2688817	ArgumentList	arminsn -> str_asm		2688652	1					
ANR	2688818	Argument	arminsn -> str_asm		2688652	0					
ANR	2688819	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688820	Identifier	arminsn		2688652	0					
ANR	2688821	Identifier	str_asm		2688652	1					
ANR	2688822	Argument	""" %s, """		2688652	1					
ANR	2688823	PrimaryExpression	""" %s, """		2688652	0					
ANR	2688824	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2688652	2					
ANR	2688825	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2688652	0					
ANR	2688826	Identifier	tbl_regs		2688652	0					
ANR	2688827	CallExpression	"get_nibble ( inst , 3 )"		2688652	1					
ANR	2688828	Callee	get_nibble		2688652	0					
ANR	2688829	Identifier	get_nibble		2688652	0					
ANR	2688830	ArgumentList	inst		2688652	1					
ANR	2688831	Argument	inst		2688652	0					
ANR	2688832	Identifier	inst		2688652	0					
ANR	2688833	Argument	3		2688652	1					
ANR	2688834	PrimaryExpression	3		2688652	0					
ANR	2688835	IfStatement	if ( indexing )		2688652	11					
ANR	2688836	Condition	indexing	287:5:9792:9799	2688652	0	True				
ANR	2688837	Identifier	indexing		2688652	0					
ANR	2688838	CompoundStatement		18:15:672:672	2688652	1					
ANR	2688839	IfStatement	if ( immediate )		2688652	0					
ANR	2688840	Condition	immediate	288:6:9810:9818	2688652	0	True				
ANR	2688841	Identifier	immediate		2688652	0					
ANR	2688842	CompoundStatement		19:17:691:691	2688652	1					
ANR	2688843	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	289:3:9826:9930	2688652	0	True				
ANR	2688844	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688652	0		=			
ANR	2688845	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688846	Identifier	arminsn		2688652	0					
ANR	2688847	Identifier	str_asm		2688652	1					
ANR	2688848	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, #%d]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688652	1					
ANR	2688849	Callee	r_str_appendf		2688652	0					
ANR	2688850	Identifier	r_str_appendf		2688652	0					
ANR	2688851	ArgumentList	arminsn -> str_asm		2688652	1					
ANR	2688852	Argument	arminsn -> str_asm		2688652	0					
ANR	2688853	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688854	Identifier	arminsn		2688652	0					
ANR	2688855	Identifier	str_asm		2688652	1					
ANR	2688856	Argument	"""[%s, #%d]"""		2688652	1					
ANR	2688857	PrimaryExpression	"""[%s, #%d]"""		2688652	0					
ANR	2688858	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	2					
ANR	2688859	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	0					
ANR	2688860	Identifier	tbl_regs		2688652	0					
ANR	2688861	CallExpression	"get_nibble ( inst , 4 )"		2688652	1					
ANR	2688862	Callee	get_nibble		2688652	0					
ANR	2688863	Identifier	get_nibble		2688652	0					
ANR	2688864	ArgumentList	inst		2688652	1					
ANR	2688865	Argument	inst		2688652	0					
ANR	2688866	Identifier	inst		2688652	0					
ANR	2688867	Argument	4		2688652	1					
ANR	2688868	PrimaryExpression	4		2688652	0					
ANR	2688869	Argument	offset		2688652	3					
ANR	2688870	Identifier	offset		2688652	0					
ANR	2688871	ElseStatement	else		2688652	0					
ANR	2688872	CompoundStatement		22:7:813:813	2688652	0					
ANR	2688873	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	292:3:9948:10080	2688652	0	True				
ANR	2688874	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688652	0		=			
ANR	2688875	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688876	Identifier	arminsn		2688652	0					
ANR	2688877	Identifier	str_asm		2688652	1					
ANR	2688878	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s, %s]"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688652	1					
ANR	2688879	Callee	r_str_appendf		2688652	0					
ANR	2688880	Identifier	r_str_appendf		2688652	0					
ANR	2688881	ArgumentList	arminsn -> str_asm		2688652	1					
ANR	2688882	Argument	arminsn -> str_asm		2688652	0					
ANR	2688883	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688884	Identifier	arminsn		2688652	0					
ANR	2688885	Identifier	str_asm		2688652	1					
ANR	2688886	Argument	"""[%s, %s]"""		2688652	1					
ANR	2688887	PrimaryExpression	"""[%s, %s]"""		2688652	0					
ANR	2688888	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	2					
ANR	2688889	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	0					
ANR	2688890	Identifier	tbl_regs		2688652	0					
ANR	2688891	CallExpression	"get_nibble ( inst , 4 )"		2688652	1					
ANR	2688892	Callee	get_nibble		2688652	0					
ANR	2688893	Identifier	get_nibble		2688652	0					
ANR	2688894	ArgumentList	inst		2688652	1					
ANR	2688895	Argument	inst		2688652	0					
ANR	2688896	Identifier	inst		2688652	0					
ANR	2688897	Argument	4		2688652	1					
ANR	2688898	PrimaryExpression	4		2688652	0					
ANR	2688899	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688652	3					
ANR	2688900	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688652	0					
ANR	2688901	Identifier	tbl_regs		2688652	0					
ANR	2688902	CallExpression	"get_nibble ( inst , 0 )"		2688652	1					
ANR	2688903	Callee	get_nibble		2688652	0					
ANR	2688904	Identifier	get_nibble		2688652	0					
ANR	2688905	ArgumentList	inst		2688652	1					
ANR	2688906	Argument	inst		2688652	0					
ANR	2688907	Identifier	inst		2688652	0					
ANR	2688908	Argument	0		2688652	1					
ANR	2688909	PrimaryExpression	0		2688652	0					
ANR	2688910	ElseStatement	else		2688652	0					
ANR	2688911	CompoundStatement		26:8:964:964	2688652	0					
ANR	2688912	IfStatement	if ( immediate )		2688652	0					
ANR	2688913	Condition	immediate	296:6:10102:10110	2688652	0	True				
ANR	2688914	Identifier	immediate		2688652	0					
ANR	2688915	CompoundStatement		27:17:983:983	2688652	1					
ANR	2688916	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	297:3:10118:10222	2688652	0	True				
ANR	2688917	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688652	0		=			
ANR	2688918	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688919	Identifier	arminsn		2688652	0					
ANR	2688920	Identifier	str_asm		2688652	1					
ANR	2688921	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], #%d"" , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2688652	1					
ANR	2688922	Callee	r_str_appendf		2688652	0					
ANR	2688923	Identifier	r_str_appendf		2688652	0					
ANR	2688924	ArgumentList	arminsn -> str_asm		2688652	1					
ANR	2688925	Argument	arminsn -> str_asm		2688652	0					
ANR	2688926	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688927	Identifier	arminsn		2688652	0					
ANR	2688928	Identifier	str_asm		2688652	1					
ANR	2688929	Argument	"""[%s], #%d"""		2688652	1					
ANR	2688930	PrimaryExpression	"""[%s], #%d"""		2688652	0					
ANR	2688931	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	2					
ANR	2688932	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	0					
ANR	2688933	Identifier	tbl_regs		2688652	0					
ANR	2688934	CallExpression	"get_nibble ( inst , 4 )"		2688652	1					
ANR	2688935	Callee	get_nibble		2688652	0					
ANR	2688936	Identifier	get_nibble		2688652	0					
ANR	2688937	ArgumentList	inst		2688652	1					
ANR	2688938	Argument	inst		2688652	0					
ANR	2688939	Identifier	inst		2688652	0					
ANR	2688940	Argument	4		2688652	1					
ANR	2688941	PrimaryExpression	4		2688652	0					
ANR	2688942	Argument	offset		2688652	3					
ANR	2688943	Identifier	offset		2688652	0					
ANR	2688944	ElseStatement	else		2688652	0					
ANR	2688945	CompoundStatement		30:7:1105:1105	2688652	0					
ANR	2688946	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	300:3:10240:10372	2688652	0	True				
ANR	2688947	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688652	0		=			
ANR	2688948	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688949	Identifier	arminsn		2688652	0					
ANR	2688950	Identifier	str_asm		2688652	1					
ANR	2688951	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""[%s], %s"" , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2688652	1					
ANR	2688952	Callee	r_str_appendf		2688652	0					
ANR	2688953	Identifier	r_str_appendf		2688652	0					
ANR	2688954	ArgumentList	arminsn -> str_asm		2688652	1					
ANR	2688955	Argument	arminsn -> str_asm		2688652	0					
ANR	2688956	PtrMemberAccess	arminsn -> str_asm		2688652	0					
ANR	2688957	Identifier	arminsn		2688652	0					
ANR	2688958	Identifier	str_asm		2688652	1					
ANR	2688959	Argument	"""[%s], %s"""		2688652	1					
ANR	2688960	PrimaryExpression	"""[%s], %s"""		2688652	0					
ANR	2688961	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	2					
ANR	2688962	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2688652	0					
ANR	2688963	Identifier	tbl_regs		2688652	0					
ANR	2688964	CallExpression	"get_nibble ( inst , 4 )"		2688652	1					
ANR	2688965	Callee	get_nibble		2688652	0					
ANR	2688966	Identifier	get_nibble		2688652	0					
ANR	2688967	ArgumentList	inst		2688652	1					
ANR	2688968	Argument	inst		2688652	0					
ANR	2688969	Identifier	inst		2688652	0					
ANR	2688970	Argument	4		2688652	1					
ANR	2688971	PrimaryExpression	4		2688652	0					
ANR	2688972	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688652	3					
ANR	2688973	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2688652	0					
ANR	2688974	Identifier	tbl_regs		2688652	0					
ANR	2688975	CallExpression	"get_nibble ( inst , 0 )"		2688652	1					
ANR	2688976	Callee	get_nibble		2688652	0					
ANR	2688977	Identifier	get_nibble		2688652	0					
ANR	2688978	ArgumentList	inst		2688652	1					
ANR	2688979	Argument	inst		2688652	0					
ANR	2688980	Identifier	inst		2688652	0					
ANR	2688981	Argument	0		2688652	1					
ANR	2688982	PrimaryExpression	0		2688652	0					
ANR	2688983	ReturnStatement	return 0 ;	304:1:10382:10390	2688652	12	True				
ANR	2688984	PrimaryExpression	0		2688652	0					
ANR	2688985	ReturnType	static ut32		2688652	1					
ANR	2688986	Identifier	arm_disasm_halfwordtrans		2688652	2					
ANR	2688987	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2688652	3					
ANR	2688988	Parameter	struct winedbg_arm_insn * arminsn	270:37:9084:9115	2688652	0	True				
ANR	2688989	ParameterType	struct winedbg_arm_insn *		2688652	0					
ANR	2688990	Identifier	arminsn		2688652	1					
ANR	2688991	Parameter	ut32 inst	270:71:9118:9126	2688652	1	True				
ANR	2688992	ParameterType	ut32		2688652	0					
ANR	2688993	Identifier	inst		2688652	1					
ANR	2688994	CFGEntryNode	ENTRY		2688652		True				
ANR	2688995	CFGExitNode	EXIT		2688652		True				
ANR	2688996	Symbol	get_cond		2688652						
ANR	2688997	Symbol	indexing		2688652						
ANR	2688998	Symbol	offset		2688652						
ANR	2688999	Symbol	tbl_regs		2688652						
ANR	2689000	Symbol	sign		2688652						
ANR	2689001	Symbol	arminsn		2688652						
ANR	2689002	Symbol	halfword		2688652						
ANR	2689003	Symbol	arminsn -> str_asm		2688652						
ANR	2689004	Symbol	* arminsn		2688652						
ANR	2689005	Symbol	get_nibble		2688652						
ANR	2689006	Symbol	load		2688652						
ANR	2689007	Symbol	writeback		2688652						
ANR	2689008	Symbol	immediate		2688652						
ANR	2689009	Symbol	* tbl_regs		2688652						
ANR	2689010	Symbol	inst		2688652						
ANR	2689011	Symbol	r_str_appendf		2688652						
ANR	2689012	Symbol	* get_nibble		2688652						
ANR	2689013	Symbol	direction		2688652						
ANR	2689014	Function	arm_disasm_blocktrans	307:0:10395:11264							
ANR	2689015	FunctionDef	"arm_disasm_blocktrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2689014	0					
ANR	2689016	CompoundStatement		307:79:10474:11264	2689014	0					
ANR	2689017	IdentifierDeclStatement	short load = ( inst >> 20 ) & 0x01 ;	308:1:10477:10514	2689014	0	True				
ANR	2689018	IdentifierDecl	load = ( inst >> 20 ) & 0x01		2689014	0					
ANR	2689019	IdentifierDeclType	short		2689014	0					
ANR	2689020	Identifier	load		2689014	1					
ANR	2689021	AssignmentExpression	load = ( inst >> 20 ) & 0x01		2689014	2		=			
ANR	2689022	Identifier	load		2689014	0					
ANR	2689023	BitAndExpression	( inst >> 20 ) & 0x01		2689014	1		&			
ANR	2689024	ShiftExpression	inst >> 20		2689014	0		>>			
ANR	2689025	Identifier	inst		2689014	0					
ANR	2689026	PrimaryExpression	20		2689014	1					
ANR	2689027	PrimaryExpression	0x01		2689014	1					
ANR	2689028	IdentifierDeclStatement	short writeback = ( inst >> 21 ) & 0x01 ;	309:1:10517:10554	2689014	1	True				
ANR	2689029	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		2689014	0					
ANR	2689030	IdentifierDeclType	short		2689014	0					
ANR	2689031	Identifier	writeback		2689014	1					
ANR	2689032	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		2689014	2		=			
ANR	2689033	Identifier	writeback		2689014	0					
ANR	2689034	BitAndExpression	( inst >> 21 ) & 0x01		2689014	1		&			
ANR	2689035	ShiftExpression	inst >> 21		2689014	0		>>			
ANR	2689036	Identifier	inst		2689014	0					
ANR	2689037	PrimaryExpression	21		2689014	1					
ANR	2689038	PrimaryExpression	0x01		2689014	1					
ANR	2689039	IdentifierDeclStatement	short psr = ( inst >> 22 ) & 0x01 ;	310:1:10557:10594	2689014	2	True				
ANR	2689040	IdentifierDecl	psr = ( inst >> 22 ) & 0x01		2689014	0					
ANR	2689041	IdentifierDeclType	short		2689014	0					
ANR	2689042	Identifier	psr		2689014	1					
ANR	2689043	AssignmentExpression	psr = ( inst >> 22 ) & 0x01		2689014	2		=			
ANR	2689044	Identifier	psr		2689014	0					
ANR	2689045	BitAndExpression	( inst >> 22 ) & 0x01		2689014	1		&			
ANR	2689046	ShiftExpression	inst >> 22		2689014	0		>>			
ANR	2689047	Identifier	inst		2689014	0					
ANR	2689048	PrimaryExpression	22		2689014	1					
ANR	2689049	PrimaryExpression	0x01		2689014	1					
ANR	2689050	IdentifierDeclStatement	short addrmode = ( inst >> 23 ) & 0x03 ;	311:1:10597:10634	2689014	3	True				
ANR	2689051	IdentifierDecl	addrmode = ( inst >> 23 ) & 0x03		2689014	0					
ANR	2689052	IdentifierDeclType	short		2689014	0					
ANR	2689053	Identifier	addrmode		2689014	1					
ANR	2689054	AssignmentExpression	addrmode = ( inst >> 23 ) & 0x03		2689014	2		=			
ANR	2689055	Identifier	addrmode		2689014	0					
ANR	2689056	BitAndExpression	( inst >> 23 ) & 0x03		2689014	1		&			
ANR	2689057	ShiftExpression	inst >> 23		2689014	0		>>			
ANR	2689058	Identifier	inst		2689014	0					
ANR	2689059	PrimaryExpression	23		2689014	1					
ANR	2689060	PrimaryExpression	0x03		2689014	1					
ANR	2689061	IdentifierDeclStatement	short i ;	312:1:10637:10644	2689014	4	True				
ANR	2689062	IdentifierDecl	i		2689014	0					
ANR	2689063	IdentifierDeclType	short		2689014	0					
ANR	2689064	Identifier	i		2689014	1					
ANR	2689065	IdentifierDeclStatement	short last = 15 ;	313:1:10647:10660	2689014	5	True				
ANR	2689066	IdentifierDecl	last = 15		2689014	0					
ANR	2689067	IdentifierDeclType	short		2689014	0					
ANR	2689068	Identifier	last		2689014	1					
ANR	2689069	AssignmentExpression	last = 15		2689014	2		=			
ANR	2689070	Identifier	last		2689014	0					
ANR	2689071	PrimaryExpression	15		2689014	1					
ANR	2689072	ForStatement	for ( i = 15 ; i >= 0 ; i -- )		2689014	6					
ANR	2689073	ForInit	i = 15 ;	315:6:10669:10673	2689014	0	True				
ANR	2689074	AssignmentExpression	i = 15		2689014	0		=			
ANR	2689075	Identifier	i		2689014	0					
ANR	2689076	PrimaryExpression	15		2689014	1					
ANR	2689077	Condition	i >= 0	315:11:10674:10677	2689014	1	True				
ANR	2689078	RelationalExpression	i >= 0		2689014	0		>=			
ANR	2689079	Identifier	i		2689014	0					
ANR	2689080	PrimaryExpression	0		2689014	1					
ANR	2689081	PostIncDecOperationExpression	i --	315:16:10679:10681	2689014	2	True				
ANR	2689082	Identifier	i		2689014	0					
ANR	2689083	IncDec	--		2689014	1					
ANR	2689084	CompoundStatement		9:21:209:209	2689014	3					
ANR	2689085	IfStatement	if ( ( inst >> i ) & 1 )		2689014	0					
ANR	2689086	Condition	( inst >> i ) & 1	316:6:10692:10704	2689014	0	True				
ANR	2689087	BitAndExpression	( inst >> i ) & 1		2689014	0		&			
ANR	2689088	ShiftExpression	inst >> i		2689014	0		>>			
ANR	2689089	Identifier	inst		2689014	0					
ANR	2689090	Identifier	i		2689014	1					
ANR	2689091	PrimaryExpression	1		2689014	1					
ANR	2689092	CompoundStatement		10:21:232:232	2689014	1					
ANR	2689093	ExpressionStatement	last = i	317:3:10712:10720	2689014	0	True				
ANR	2689094	AssignmentExpression	last = i		2689014	0		=			
ANR	2689095	Identifier	last		2689014	0					
ANR	2689096	Identifier	i		2689014	1					
ANR	2689097	BreakStatement	break ;	318:3:10725:10730	2689014	1	True				
ANR	2689098	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s %s%s, {"" , load ? ""ldm"" : ""stm"" , tbl_addrmode [ addrmode ] , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 4 ) ] , writeback ? ""!"" : """" )"	322:1:10741:10930	2689014	7	True				
ANR	2689099	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s %s%s, {"" , load ? ""ldm"" : ""stm"" , tbl_addrmode [ addrmode ] , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 4 ) ] , writeback ? ""!"" : """" )"		2689014	0		=			
ANR	2689100	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689101	Identifier	arminsn		2689014	0					
ANR	2689102	Identifier	str_asm		2689014	1					
ANR	2689103	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s %s%s, {"" , load ? ""ldm"" : ""stm"" , tbl_addrmode [ addrmode ] , get_cond ( inst ) , tbl_regs [ get_nibble ( inst , 4 ) ] , writeback ? ""!"" : """" )"		2689014	1					
ANR	2689104	Callee	r_str_appendf		2689014	0					
ANR	2689105	Identifier	r_str_appendf		2689014	0					
ANR	2689106	ArgumentList	arminsn -> str_asm		2689014	1					
ANR	2689107	Argument	arminsn -> str_asm		2689014	0					
ANR	2689108	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689109	Identifier	arminsn		2689014	0					
ANR	2689110	Identifier	str_asm		2689014	1					
ANR	2689111	Argument	"""%s%s%s %s%s, {"""		2689014	1					
ANR	2689112	PrimaryExpression	"""%s%s%s %s%s, {"""		2689014	0					
ANR	2689113	Argument	"load ? ""ldm"" : ""stm"""		2689014	2					
ANR	2689114	ConditionalExpression	"load ? ""ldm"" : ""stm"""		2689014	0					
ANR	2689115	Condition	load		2689014	0					
ANR	2689116	Identifier	load		2689014	0					
ANR	2689117	PrimaryExpression	"""ldm"""		2689014	1					
ANR	2689118	PrimaryExpression	"""stm"""		2689014	2					
ANR	2689119	Argument	tbl_addrmode [ addrmode ]		2689014	3					
ANR	2689120	ArrayIndexing	tbl_addrmode [ addrmode ]		2689014	0					
ANR	2689121	Identifier	tbl_addrmode		2689014	0					
ANR	2689122	Identifier	addrmode		2689014	1					
ANR	2689123	Argument	get_cond ( inst )		2689014	4					
ANR	2689124	CallExpression	get_cond ( inst )		2689014	0					
ANR	2689125	Callee	get_cond		2689014	0					
ANR	2689126	Identifier	get_cond		2689014	0					
ANR	2689127	ArgumentList	inst		2689014	1					
ANR	2689128	Argument	inst		2689014	0					
ANR	2689129	Identifier	inst		2689014	0					
ANR	2689130	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2689014	5					
ANR	2689131	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2689014	0					
ANR	2689132	Identifier	tbl_regs		2689014	0					
ANR	2689133	CallExpression	"get_nibble ( inst , 4 )"		2689014	1					
ANR	2689134	Callee	get_nibble		2689014	0					
ANR	2689135	Identifier	get_nibble		2689014	0					
ANR	2689136	ArgumentList	inst		2689014	1					
ANR	2689137	Argument	inst		2689014	0					
ANR	2689138	Identifier	inst		2689014	0					
ANR	2689139	Argument	4		2689014	1					
ANR	2689140	PrimaryExpression	4		2689014	0					
ANR	2689141	Argument	"writeback ? ""!"" : """""		2689014	6					
ANR	2689142	ConditionalExpression	"writeback ? ""!"" : """""		2689014	0					
ANR	2689143	Condition	writeback		2689014	0					
ANR	2689144	Identifier	writeback		2689014	0					
ANR	2689145	PrimaryExpression	"""!"""		2689014	1					
ANR	2689146	PrimaryExpression	""""""		2689014	2					
ANR	2689147	ForStatement	for ( i = 0 ; i <= 15 ; i ++ )		2689014	8					
ANR	2689148	ForInit	i = 0 ;	324:6:10938:10941	2689014	0	True				
ANR	2689149	AssignmentExpression	i = 0		2689014	0		=			
ANR	2689150	Identifier	i		2689014	0					
ANR	2689151	PrimaryExpression	0		2689014	1					
ANR	2689152	Condition	i <= 15	324:10:10942:10946	2689014	1	True				
ANR	2689153	RelationalExpression	i <= 15		2689014	0		<=			
ANR	2689154	Identifier	i		2689014	0					
ANR	2689155	PrimaryExpression	15		2689014	1					
ANR	2689156	PostIncDecOperationExpression	i ++	324:16:10948:10950	2689014	2	True				
ANR	2689157	Identifier	i		2689014	0					
ANR	2689158	IncDec	++		2689014	1					
ANR	2689159	CompoundStatement		18:21:478:478	2689014	3					
ANR	2689160	IfStatement	if ( ( inst >> i ) & 1 )		2689014	0					
ANR	2689161	Condition	( inst >> i ) & 1	325:6:10961:10973	2689014	0	True				
ANR	2689162	BitAndExpression	( inst >> i ) & 1		2689014	0		&			
ANR	2689163	ShiftExpression	inst >> i		2689014	0		>>			
ANR	2689164	Identifier	inst		2689014	0					
ANR	2689165	Identifier	i		2689014	1					
ANR	2689166	PrimaryExpression	1		2689014	1					
ANR	2689167	CompoundStatement		19:21:501:501	2689014	1					
ANR	2689168	IfStatement	if ( i == last )		2689014	0					
ANR	2689169	Condition	i == last	326:7:10985:10993	2689014	0	True				
ANR	2689170	EqualityExpression	i == last		2689014	0		==			
ANR	2689171	Identifier	i		2689014	0					
ANR	2689172	Identifier	last		2689014	1					
ANR	2689173	CompoundStatement		20:18:521:521	2689014	1					
ANR	2689174	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"	327:4:11002:11072	2689014	0	True				
ANR	2689175	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		2689014	0		=			
ANR	2689176	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689177	Identifier	arminsn		2689014	0					
ANR	2689178	Identifier	str_asm		2689014	1					
ANR	2689179	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		2689014	1					
ANR	2689180	Callee	r_str_appendf		2689014	0					
ANR	2689181	Identifier	r_str_appendf		2689014	0					
ANR	2689182	ArgumentList	arminsn -> str_asm		2689014	1					
ANR	2689183	Argument	arminsn -> str_asm		2689014	0					
ANR	2689184	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689185	Identifier	arminsn		2689014	0					
ANR	2689186	Identifier	str_asm		2689014	1					
ANR	2689187	Argument	"""%s"""		2689014	1					
ANR	2689188	PrimaryExpression	"""%s"""		2689014	0					
ANR	2689189	Argument	tbl_regs [ i ]		2689014	2					
ANR	2689190	ArrayIndexing	tbl_regs [ i ]		2689014	0					
ANR	2689191	Identifier	tbl_regs		2689014	0					
ANR	2689192	Identifier	i		2689014	1					
ANR	2689193	ElseStatement	else		2689014	0					
ANR	2689194	CompoundStatement		22:10:609:609	2689014	0					
ANR	2689195	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"	329:4:11090:11162	2689014	0	True				
ANR	2689196	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		2689014	0		=			
ANR	2689197	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689198	Identifier	arminsn		2689014	0					
ANR	2689199	Identifier	str_asm		2689014	1					
ANR	2689200	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		2689014	1					
ANR	2689201	Callee	r_str_appendf		2689014	0					
ANR	2689202	Identifier	r_str_appendf		2689014	0					
ANR	2689203	ArgumentList	arminsn -> str_asm		2689014	1					
ANR	2689204	Argument	arminsn -> str_asm		2689014	0					
ANR	2689205	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689206	Identifier	arminsn		2689014	0					
ANR	2689207	Identifier	str_asm		2689014	1					
ANR	2689208	Argument	"""%s, """		2689014	1					
ANR	2689209	PrimaryExpression	"""%s, """		2689014	0					
ANR	2689210	Argument	tbl_regs [ i ]		2689014	2					
ANR	2689211	ArrayIndexing	tbl_regs [ i ]		2689014	0					
ANR	2689212	Identifier	tbl_regs		2689014	0					
ANR	2689213	Identifier	i		2689014	1					
ANR	2689214	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}%s"" , psr ? ""^"" : """" )"	333:1:11177:11251	2689014	9	True				
ANR	2689215	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}%s"" , psr ? ""^"" : """" )"		2689014	0		=			
ANR	2689216	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689217	Identifier	arminsn		2689014	0					
ANR	2689218	Identifier	str_asm		2689014	1					
ANR	2689219	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""}%s"" , psr ? ""^"" : """" )"		2689014	1					
ANR	2689220	Callee	r_str_appendf		2689014	0					
ANR	2689221	Identifier	r_str_appendf		2689014	0					
ANR	2689222	ArgumentList	arminsn -> str_asm		2689014	1					
ANR	2689223	Argument	arminsn -> str_asm		2689014	0					
ANR	2689224	PtrMemberAccess	arminsn -> str_asm		2689014	0					
ANR	2689225	Identifier	arminsn		2689014	0					
ANR	2689226	Identifier	str_asm		2689014	1					
ANR	2689227	Argument	"""}%s"""		2689014	1					
ANR	2689228	PrimaryExpression	"""}%s"""		2689014	0					
ANR	2689229	Argument	"psr ? ""^"" : """""		2689014	2					
ANR	2689230	ConditionalExpression	"psr ? ""^"" : """""		2689014	0					
ANR	2689231	Condition	psr		2689014	0					
ANR	2689232	Identifier	psr		2689014	0					
ANR	2689233	PrimaryExpression	"""^"""		2689014	1					
ANR	2689234	PrimaryExpression	""""""		2689014	2					
ANR	2689235	ReturnStatement	return 0 ;	334:1:11254:11262	2689014	10	True				
ANR	2689236	PrimaryExpression	0		2689014	0					
ANR	2689237	ReturnType	static ut32		2689014	1					
ANR	2689238	Identifier	arm_disasm_blocktrans		2689014	2					
ANR	2689239	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2689014	3					
ANR	2689240	Parameter	struct winedbg_arm_insn * arminsn	307:34:10429:10460	2689014	0	True				
ANR	2689241	ParameterType	struct winedbg_arm_insn *		2689014	0					
ANR	2689242	Identifier	arminsn		2689014	1					
ANR	2689243	Parameter	ut32 inst	307:68:10463:10471	2689014	1	True				
ANR	2689244	ParameterType	ut32		2689014	0					
ANR	2689245	Identifier	inst		2689014	1					
ANR	2689246	CFGEntryNode	ENTRY		2689014		True				
ANR	2689247	CFGExitNode	EXIT		2689014		True				
ANR	2689248	Symbol	get_cond		2689014						
ANR	2689249	Symbol	last		2689014						
ANR	2689250	Symbol	* tbl_addrmode		2689014						
ANR	2689251	Symbol	tbl_regs		2689014						
ANR	2689252	Symbol	i		2689014						
ANR	2689253	Symbol	arminsn		2689014						
ANR	2689254	Symbol	addrmode		2689014						
ANR	2689255	Symbol	psr		2689014						
ANR	2689256	Symbol	arminsn -> str_asm		2689014						
ANR	2689257	Symbol	* arminsn		2689014						
ANR	2689258	Symbol	get_nibble		2689014						
ANR	2689259	Symbol	* addrmode		2689014						
ANR	2689260	Symbol	* i		2689014						
ANR	2689261	Symbol	load		2689014						
ANR	2689262	Symbol	writeback		2689014						
ANR	2689263	Symbol	* tbl_regs		2689014						
ANR	2689264	Symbol	inst		2689014						
ANR	2689265	Symbol	r_str_appendf		2689014						
ANR	2689266	Symbol	* get_nibble		2689014						
ANR	2689267	Symbol	tbl_addrmode		2689014						
ANR	2689268	Function	arm_disasm_swi	337:0:11267:11480							
ANR	2689269	FunctionDef	"arm_disasm_swi (struct winedbg_arm_insn * arminsn , ut32 inst)"		2689268	0					
ANR	2689270	CompoundStatement		337:72:11339:11480	2689268	0					
ANR	2689271	IdentifierDeclStatement	ut32 comment = inst & 0x00ffffff ;	338:1:11342:11374	2689268	0	True				
ANR	2689272	IdentifierDecl	comment = inst & 0x00ffffff		2689268	0					
ANR	2689273	IdentifierDeclType	ut32		2689268	0					
ANR	2689274	Identifier	comment		2689268	1					
ANR	2689275	AssignmentExpression	comment = inst & 0x00ffffff		2689268	2		=			
ANR	2689276	Identifier	comment		2689268	0					
ANR	2689277	BitAndExpression	inst & 0x00ffffff		2689268	1		&			
ANR	2689278	Identifier	inst		2689268	0					
ANR	2689279	PrimaryExpression	0x00ffffff		2689268	1					
ANR	2689280	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi%s #%d"" , get_cond ( inst ) , comment )"	339:1:11377:11467	2689268	1	True				
ANR	2689281	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi%s #%d"" , get_cond ( inst ) , comment )"		2689268	0		=			
ANR	2689282	PtrMemberAccess	arminsn -> str_asm		2689268	0					
ANR	2689283	Identifier	arminsn		2689268	0					
ANR	2689284	Identifier	str_asm		2689268	1					
ANR	2689285	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""swi%s #%d"" , get_cond ( inst ) , comment )"		2689268	1					
ANR	2689286	Callee	r_str_appendf		2689268	0					
ANR	2689287	Identifier	r_str_appendf		2689268	0					
ANR	2689288	ArgumentList	arminsn -> str_asm		2689268	1					
ANR	2689289	Argument	arminsn -> str_asm		2689268	0					
ANR	2689290	PtrMemberAccess	arminsn -> str_asm		2689268	0					
ANR	2689291	Identifier	arminsn		2689268	0					
ANR	2689292	Identifier	str_asm		2689268	1					
ANR	2689293	Argument	"""swi%s #%d"""		2689268	1					
ANR	2689294	PrimaryExpression	"""swi%s #%d"""		2689268	0					
ANR	2689295	Argument	get_cond ( inst )		2689268	2					
ANR	2689296	CallExpression	get_cond ( inst )		2689268	0					
ANR	2689297	Callee	get_cond		2689268	0					
ANR	2689298	Identifier	get_cond		2689268	0					
ANR	2689299	ArgumentList	inst		2689268	1					
ANR	2689300	Argument	inst		2689268	0					
ANR	2689301	Identifier	inst		2689268	0					
ANR	2689302	Argument	comment		2689268	3					
ANR	2689303	Identifier	comment		2689268	0					
ANR	2689304	ReturnStatement	return 0 ;	340:1:11470:11478	2689268	2	True				
ANR	2689305	PrimaryExpression	0		2689268	0					
ANR	2689306	ReturnType	static ut32		2689268	1					
ANR	2689307	Identifier	arm_disasm_swi		2689268	2					
ANR	2689308	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2689268	3					
ANR	2689309	Parameter	struct winedbg_arm_insn * arminsn	337:27:11294:11325	2689268	0	True				
ANR	2689310	ParameterType	struct winedbg_arm_insn *		2689268	0					
ANR	2689311	Identifier	arminsn		2689268	1					
ANR	2689312	Parameter	ut32 inst	337:61:11328:11336	2689268	1	True				
ANR	2689313	ParameterType	ut32		2689268	0					
ANR	2689314	Identifier	inst		2689268	1					
ANR	2689315	CFGEntryNode	ENTRY		2689268		True				
ANR	2689316	CFGExitNode	EXIT		2689268		True				
ANR	2689317	Symbol	* arminsn		2689268						
ANR	2689318	Symbol	get_cond		2689268						
ANR	2689319	Symbol	inst		2689268						
ANR	2689320	Symbol	r_str_appendf		2689268						
ANR	2689321	Symbol	arminsn		2689268						
ANR	2689322	Symbol	comment		2689268						
ANR	2689323	Symbol	arminsn -> str_asm		2689268						
ANR	2689324	Function	arm_disasm_coproctrans	343:0:11483:11979							
ANR	2689325	FunctionDef	"arm_disasm_coproctrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2689324	0					
ANR	2689326	CompoundStatement		343:80:11563:11979	2689324	0					
ANR	2689327	IdentifierDeclStatement	ut16 CRm = inst & 0x0f ;	344:1:11566:11591	2689324	0	True				
ANR	2689328	IdentifierDecl	CRm = inst & 0x0f		2689324	0					
ANR	2689329	IdentifierDeclType	ut16		2689324	0					
ANR	2689330	Identifier	CRm		2689324	1					
ANR	2689331	AssignmentExpression	CRm = inst & 0x0f		2689324	2		=			
ANR	2689332	Identifier	CRm		2689324	0					
ANR	2689333	BitAndExpression	inst & 0x0f		2689324	1		&			
ANR	2689334	Identifier	inst		2689324	0					
ANR	2689335	PrimaryExpression	0x0f		2689324	1					
ANR	2689336	IdentifierDeclStatement	ut16 CP = ( inst >> 5 ) & 0x07 ;	345:1:11594:11627	2689324	1	True				
ANR	2689337	IdentifierDecl	CP = ( inst >> 5 ) & 0x07		2689324	0					
ANR	2689338	IdentifierDeclType	ut16		2689324	0					
ANR	2689339	Identifier	CP		2689324	1					
ANR	2689340	AssignmentExpression	CP = ( inst >> 5 ) & 0x07		2689324	2		=			
ANR	2689341	Identifier	CP		2689324	0					
ANR	2689342	BitAndExpression	( inst >> 5 ) & 0x07		2689324	1		&			
ANR	2689343	ShiftExpression	inst >> 5		2689324	0		>>			
ANR	2689344	Identifier	inst		2689324	0					
ANR	2689345	PrimaryExpression	5		2689324	1					
ANR	2689346	PrimaryExpression	0x07		2689324	1					
ANR	2689347	IdentifierDeclStatement	ut16 CPnum = ( inst >> 8 ) & 0x0f ;	346:1:11630:11663	2689324	2	True				
ANR	2689348	IdentifierDecl	CPnum = ( inst >> 8 ) & 0x0f		2689324	0					
ANR	2689349	IdentifierDeclType	ut16		2689324	0					
ANR	2689350	Identifier	CPnum		2689324	1					
ANR	2689351	AssignmentExpression	CPnum = ( inst >> 8 ) & 0x0f		2689324	2		=			
ANR	2689352	Identifier	CPnum		2689324	0					
ANR	2689353	BitAndExpression	( inst >> 8 ) & 0x0f		2689324	1		&			
ANR	2689354	ShiftExpression	inst >> 8		2689324	0		>>			
ANR	2689355	Identifier	inst		2689324	0					
ANR	2689356	PrimaryExpression	8		2689324	1					
ANR	2689357	PrimaryExpression	0x0f		2689324	1					
ANR	2689358	IdentifierDeclStatement	ut16 CRn = ( inst >> 16 ) & 0x0f ;	347:1:11666:11699	2689324	3	True				
ANR	2689359	IdentifierDecl	CRn = ( inst >> 16 ) & 0x0f		2689324	0					
ANR	2689360	IdentifierDeclType	ut16		2689324	0					
ANR	2689361	Identifier	CRn		2689324	1					
ANR	2689362	AssignmentExpression	CRn = ( inst >> 16 ) & 0x0f		2689324	2		=			
ANR	2689363	Identifier	CRn		2689324	0					
ANR	2689364	BitAndExpression	( inst >> 16 ) & 0x0f		2689324	1		&			
ANR	2689365	ShiftExpression	inst >> 16		2689324	0		>>			
ANR	2689366	Identifier	inst		2689324	0					
ANR	2689367	PrimaryExpression	16		2689324	1					
ANR	2689368	PrimaryExpression	0x0f		2689324	1					
ANR	2689369	IdentifierDeclStatement	ut16 load = ( inst >> 20 ) & 0x01 ;	348:1:11702:11735	2689324	4	True				
ANR	2689370	IdentifierDecl	load = ( inst >> 20 ) & 0x01		2689324	0					
ANR	2689371	IdentifierDeclType	ut16		2689324	0					
ANR	2689372	Identifier	load		2689324	1					
ANR	2689373	AssignmentExpression	load = ( inst >> 20 ) & 0x01		2689324	2		=			
ANR	2689374	Identifier	load		2689324	0					
ANR	2689375	BitAndExpression	( inst >> 20 ) & 0x01		2689324	1		&			
ANR	2689376	ShiftExpression	inst >> 20		2689324	0		>>			
ANR	2689377	Identifier	inst		2689324	0					
ANR	2689378	PrimaryExpression	20		2689324	1					
ANR	2689379	PrimaryExpression	0x01		2689324	1					
ANR	2689380	IdentifierDeclStatement	ut16 CP_Opc = ( inst >> 21 ) & 0x07 ;	349:1:11738:11771	2689324	5	True				
ANR	2689381	IdentifierDecl	CP_Opc = ( inst >> 21 ) & 0x07		2689324	0					
ANR	2689382	IdentifierDeclType	ut16		2689324	0					
ANR	2689383	Identifier	CP_Opc		2689324	1					
ANR	2689384	AssignmentExpression	CP_Opc = ( inst >> 21 ) & 0x07		2689324	2		=			
ANR	2689385	Identifier	CP_Opc		2689324	0					
ANR	2689386	BitAndExpression	( inst >> 21 ) & 0x07		2689324	1		&			
ANR	2689387	ShiftExpression	inst >> 21		2689324	0		>>			
ANR	2689388	Identifier	inst		2689324	0					
ANR	2689389	PrimaryExpression	21		2689324	1					
ANR	2689390	PrimaryExpression	0x07		2689324	1					
ANR	2689391	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %u, %u, %s, cr%u, cr%u, {%u}"" , load ? ""mrc"" : ""mcr"" , get_cond ( inst ) , CPnum , CP , tbl_regs [ get_nibble ( inst , 3 ) ] , CRn , CRm , CP_Opc )"	351:1:11775:11966	2689324	6	True				
ANR	2689392	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %u, %u, %s, cr%u, cr%u, {%u}"" , load ? ""mrc"" : ""mcr"" , get_cond ( inst ) , CPnum , CP , tbl_regs [ get_nibble ( inst , 3 ) ] , CRn , CRm , CP_Opc )"		2689324	0		=			
ANR	2689393	PtrMemberAccess	arminsn -> str_asm		2689324	0					
ANR	2689394	Identifier	arminsn		2689324	0					
ANR	2689395	Identifier	str_asm		2689324	1					
ANR	2689396	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s %u, %u, %s, cr%u, cr%u, {%u}"" , load ? ""mrc"" : ""mcr"" , get_cond ( inst ) , CPnum , CP , tbl_regs [ get_nibble ( inst , 3 ) ] , CRn , CRm , CP_Opc )"		2689324	1					
ANR	2689397	Callee	r_str_appendf		2689324	0					
ANR	2689398	Identifier	r_str_appendf		2689324	0					
ANR	2689399	ArgumentList	arminsn -> str_asm		2689324	1					
ANR	2689400	Argument	arminsn -> str_asm		2689324	0					
ANR	2689401	PtrMemberAccess	arminsn -> str_asm		2689324	0					
ANR	2689402	Identifier	arminsn		2689324	0					
ANR	2689403	Identifier	str_asm		2689324	1					
ANR	2689404	Argument	"""%s%s %u, %u, %s, cr%u, cr%u, {%u}"""		2689324	1					
ANR	2689405	PrimaryExpression	"""%s%s %u, %u, %s, cr%u, cr%u, {%u}"""		2689324	0					
ANR	2689406	Argument	"load ? ""mrc"" : ""mcr"""		2689324	2					
ANR	2689407	ConditionalExpression	"load ? ""mrc"" : ""mcr"""		2689324	0					
ANR	2689408	Condition	load		2689324	0					
ANR	2689409	Identifier	load		2689324	0					
ANR	2689410	PrimaryExpression	"""mrc"""		2689324	1					
ANR	2689411	PrimaryExpression	"""mcr"""		2689324	2					
ANR	2689412	Argument	get_cond ( inst )		2689324	3					
ANR	2689413	CallExpression	get_cond ( inst )		2689324	0					
ANR	2689414	Callee	get_cond		2689324	0					
ANR	2689415	Identifier	get_cond		2689324	0					
ANR	2689416	ArgumentList	inst		2689324	1					
ANR	2689417	Argument	inst		2689324	0					
ANR	2689418	Identifier	inst		2689324	0					
ANR	2689419	Argument	CPnum		2689324	4					
ANR	2689420	Identifier	CPnum		2689324	0					
ANR	2689421	Argument	CP		2689324	5					
ANR	2689422	Identifier	CP		2689324	0					
ANR	2689423	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2689324	6					
ANR	2689424	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2689324	0					
ANR	2689425	Identifier	tbl_regs		2689324	0					
ANR	2689426	CallExpression	"get_nibble ( inst , 3 )"		2689324	1					
ANR	2689427	Callee	get_nibble		2689324	0					
ANR	2689428	Identifier	get_nibble		2689324	0					
ANR	2689429	ArgumentList	inst		2689324	1					
ANR	2689430	Argument	inst		2689324	0					
ANR	2689431	Identifier	inst		2689324	0					
ANR	2689432	Argument	3		2689324	1					
ANR	2689433	PrimaryExpression	3		2689324	0					
ANR	2689434	Argument	CRn		2689324	7					
ANR	2689435	Identifier	CRn		2689324	0					
ANR	2689436	Argument	CRm		2689324	8					
ANR	2689437	Identifier	CRm		2689324	0					
ANR	2689438	Argument	CP_Opc		2689324	9					
ANR	2689439	Identifier	CP_Opc		2689324	0					
ANR	2689440	ReturnStatement	return 0 ;	353:1:11969:11977	2689324	7	True				
ANR	2689441	PrimaryExpression	0		2689324	0					
ANR	2689442	ReturnType	static ut32		2689324	1					
ANR	2689443	Identifier	arm_disasm_coproctrans		2689324	2					
ANR	2689444	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2689324	3					
ANR	2689445	Parameter	struct winedbg_arm_insn * arminsn	343:35:11518:11549	2689324	0	True				
ANR	2689446	ParameterType	struct winedbg_arm_insn *		2689324	0					
ANR	2689447	Identifier	arminsn		2689324	1					
ANR	2689448	Parameter	ut32 inst	343:69:11552:11560	2689324	1	True				
ANR	2689449	ParameterType	ut32		2689324	0					
ANR	2689450	Identifier	inst		2689324	1					
ANR	2689451	CFGEntryNode	ENTRY		2689324		True				
ANR	2689452	CFGExitNode	EXIT		2689324		True				
ANR	2689453	Symbol	get_cond		2689324						
ANR	2689454	Symbol	tbl_regs		2689324						
ANR	2689455	Symbol	arminsn		2689324						
ANR	2689456	Symbol	CP		2689324						
ANR	2689457	Symbol	arminsn -> str_asm		2689324						
ANR	2689458	Symbol	CPnum		2689324						
ANR	2689459	Symbol	* arminsn		2689324						
ANR	2689460	Symbol	get_nibble		2689324						
ANR	2689461	Symbol	load		2689324						
ANR	2689462	Symbol	* tbl_regs		2689324						
ANR	2689463	Symbol	inst		2689324						
ANR	2689464	Symbol	r_str_appendf		2689324						
ANR	2689465	Symbol	CP_Opc		2689324						
ANR	2689466	Symbol	* get_nibble		2689324						
ANR	2689467	Symbol	CRn		2689324						
ANR	2689468	Symbol	CRm		2689324						
ANR	2689469	Function	arm_disasm_coprocdataop	356:0:11982:12433							
ANR	2689470	FunctionDef	"arm_disasm_coprocdataop (struct winedbg_arm_insn * arminsn , ut32 inst)"		2689469	0					
ANR	2689471	CompoundStatement		356:81:12063:12433	2689469	0					
ANR	2689472	IdentifierDeclStatement	ut16 CRm = inst & 0x0f ;	357:1:12066:12091	2689469	0	True				
ANR	2689473	IdentifierDecl	CRm = inst & 0x0f		2689469	0					
ANR	2689474	IdentifierDeclType	ut16		2689469	0					
ANR	2689475	Identifier	CRm		2689469	1					
ANR	2689476	AssignmentExpression	CRm = inst & 0x0f		2689469	2		=			
ANR	2689477	Identifier	CRm		2689469	0					
ANR	2689478	BitAndExpression	inst & 0x0f		2689469	1		&			
ANR	2689479	Identifier	inst		2689469	0					
ANR	2689480	PrimaryExpression	0x0f		2689469	1					
ANR	2689481	IdentifierDeclStatement	ut16 CP = ( inst >> 5 ) & 0x07 ;	358:1:12094:12127	2689469	1	True				
ANR	2689482	IdentifierDecl	CP = ( inst >> 5 ) & 0x07		2689469	0					
ANR	2689483	IdentifierDeclType	ut16		2689469	0					
ANR	2689484	Identifier	CP		2689469	1					
ANR	2689485	AssignmentExpression	CP = ( inst >> 5 ) & 0x07		2689469	2		=			
ANR	2689486	Identifier	CP		2689469	0					
ANR	2689487	BitAndExpression	( inst >> 5 ) & 0x07		2689469	1		&			
ANR	2689488	ShiftExpression	inst >> 5		2689469	0		>>			
ANR	2689489	Identifier	inst		2689469	0					
ANR	2689490	PrimaryExpression	5		2689469	1					
ANR	2689491	PrimaryExpression	0x07		2689469	1					
ANR	2689492	IdentifierDeclStatement	ut16 CPnum = ( inst >> 8 ) & 0x0f ;	359:1:12130:12163	2689469	2	True				
ANR	2689493	IdentifierDecl	CPnum = ( inst >> 8 ) & 0x0f		2689469	0					
ANR	2689494	IdentifierDeclType	ut16		2689469	0					
ANR	2689495	Identifier	CPnum		2689469	1					
ANR	2689496	AssignmentExpression	CPnum = ( inst >> 8 ) & 0x0f		2689469	2		=			
ANR	2689497	Identifier	CPnum		2689469	0					
ANR	2689498	BitAndExpression	( inst >> 8 ) & 0x0f		2689469	1		&			
ANR	2689499	ShiftExpression	inst >> 8		2689469	0		>>			
ANR	2689500	Identifier	inst		2689469	0					
ANR	2689501	PrimaryExpression	8		2689469	1					
ANR	2689502	PrimaryExpression	0x0f		2689469	1					
ANR	2689503	IdentifierDeclStatement	ut16 CRd = ( inst >> 12 ) & 0x0f ;	360:1:12166:12199	2689469	3	True				
ANR	2689504	IdentifierDecl	CRd = ( inst >> 12 ) & 0x0f		2689469	0					
ANR	2689505	IdentifierDeclType	ut16		2689469	0					
ANR	2689506	Identifier	CRd		2689469	1					
ANR	2689507	AssignmentExpression	CRd = ( inst >> 12 ) & 0x0f		2689469	2		=			
ANR	2689508	Identifier	CRd		2689469	0					
ANR	2689509	BitAndExpression	( inst >> 12 ) & 0x0f		2689469	1		&			
ANR	2689510	ShiftExpression	inst >> 12		2689469	0		>>			
ANR	2689511	Identifier	inst		2689469	0					
ANR	2689512	PrimaryExpression	12		2689469	1					
ANR	2689513	PrimaryExpression	0x0f		2689469	1					
ANR	2689514	IdentifierDeclStatement	ut16 CRn = ( inst >> 16 ) & 0x0f ;	361:1:12202:12235	2689469	4	True				
ANR	2689515	IdentifierDecl	CRn = ( inst >> 16 ) & 0x0f		2689469	0					
ANR	2689516	IdentifierDeclType	ut16		2689469	0					
ANR	2689517	Identifier	CRn		2689469	1					
ANR	2689518	AssignmentExpression	CRn = ( inst >> 16 ) & 0x0f		2689469	2		=			
ANR	2689519	Identifier	CRn		2689469	0					
ANR	2689520	BitAndExpression	( inst >> 16 ) & 0x0f		2689469	1		&			
ANR	2689521	ShiftExpression	inst >> 16		2689469	0		>>			
ANR	2689522	Identifier	inst		2689469	0					
ANR	2689523	PrimaryExpression	16		2689469	1					
ANR	2689524	PrimaryExpression	0x0f		2689469	1					
ANR	2689525	IdentifierDeclStatement	ut16 CP_Opc = ( inst >> 20 ) & 0x0f ;	362:1:12238:12271	2689469	5	True				
ANR	2689526	IdentifierDecl	CP_Opc = ( inst >> 20 ) & 0x0f		2689469	0					
ANR	2689527	IdentifierDeclType	ut16		2689469	0					
ANR	2689528	Identifier	CP_Opc		2689469	1					
ANR	2689529	AssignmentExpression	CP_Opc = ( inst >> 20 ) & 0x0f		2689469	2		=			
ANR	2689530	Identifier	CP_Opc		2689469	0					
ANR	2689531	BitAndExpression	( inst >> 20 ) & 0x0f		2689469	1		&			
ANR	2689532	ShiftExpression	inst >> 20		2689469	0		>>			
ANR	2689533	Identifier	inst		2689469	0					
ANR	2689534	PrimaryExpression	20		2689469	1					
ANR	2689535	PrimaryExpression	0x0f		2689469	1					
ANR	2689536	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"" , get_cond ( inst ) , CPnum , CP , CRd , CRn , CRm , CP_Opc )"	364:1:12275:12420	2689469	6	True				
ANR	2689537	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"" , get_cond ( inst ) , CPnum , CP , CRd , CRn , CRm , CP_Opc )"		2689469	0		=			
ANR	2689538	PtrMemberAccess	arminsn -> str_asm		2689469	0					
ANR	2689539	Identifier	arminsn		2689469	0					
ANR	2689540	Identifier	str_asm		2689469	1					
ANR	2689541	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"" , get_cond ( inst ) , CPnum , CP , CRd , CRn , CRm , CP_Opc )"		2689469	1					
ANR	2689542	Callee	r_str_appendf		2689469	0					
ANR	2689543	Identifier	r_str_appendf		2689469	0					
ANR	2689544	ArgumentList	arminsn -> str_asm		2689469	1					
ANR	2689545	Argument	arminsn -> str_asm		2689469	0					
ANR	2689546	PtrMemberAccess	arminsn -> str_asm		2689469	0					
ANR	2689547	Identifier	arminsn		2689469	0					
ANR	2689548	Identifier	str_asm		2689469	1					
ANR	2689549	Argument	"""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"""		2689469	1					
ANR	2689550	PrimaryExpression	"""cdp%s %u, %u, cr%u, cr%u, cr%u, {%u}"""		2689469	0					
ANR	2689551	Argument	get_cond ( inst )		2689469	2					
ANR	2689552	CallExpression	get_cond ( inst )		2689469	0					
ANR	2689553	Callee	get_cond		2689469	0					
ANR	2689554	Identifier	get_cond		2689469	0					
ANR	2689555	ArgumentList	inst		2689469	1					
ANR	2689556	Argument	inst		2689469	0					
ANR	2689557	Identifier	inst		2689469	0					
ANR	2689558	Argument	CPnum		2689469	3					
ANR	2689559	Identifier	CPnum		2689469	0					
ANR	2689560	Argument	CP		2689469	4					
ANR	2689561	Identifier	CP		2689469	0					
ANR	2689562	Argument	CRd		2689469	5					
ANR	2689563	Identifier	CRd		2689469	0					
ANR	2689564	Argument	CRn		2689469	6					
ANR	2689565	Identifier	CRn		2689469	0					
ANR	2689566	Argument	CRm		2689469	7					
ANR	2689567	Identifier	CRm		2689469	0					
ANR	2689568	Argument	CP_Opc		2689469	8					
ANR	2689569	Identifier	CP_Opc		2689469	0					
ANR	2689570	ReturnStatement	return 0 ;	366:1:12423:12431	2689469	7	True				
ANR	2689571	PrimaryExpression	0		2689469	0					
ANR	2689572	ReturnType	static ut32		2689469	1					
ANR	2689573	Identifier	arm_disasm_coprocdataop		2689469	2					
ANR	2689574	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2689469	3					
ANR	2689575	Parameter	struct winedbg_arm_insn * arminsn	356:36:12018:12049	2689469	0	True				
ANR	2689576	ParameterType	struct winedbg_arm_insn *		2689469	0					
ANR	2689577	Identifier	arminsn		2689469	1					
ANR	2689578	Parameter	ut32 inst	356:70:12052:12060	2689469	1	True				
ANR	2689579	ParameterType	ut32		2689469	0					
ANR	2689580	Identifier	inst		2689469	1					
ANR	2689581	CFGEntryNode	ENTRY		2689469		True				
ANR	2689582	CFGExitNode	EXIT		2689469		True				
ANR	2689583	Symbol	* arminsn		2689469						
ANR	2689584	Symbol	get_cond		2689469						
ANR	2689585	Symbol	CRd		2689469						
ANR	2689586	Symbol	inst		2689469						
ANR	2689587	Symbol	r_str_appendf		2689469						
ANR	2689588	Symbol	CP_Opc		2689469						
ANR	2689589	Symbol	arminsn		2689469						
ANR	2689590	Symbol	CP		2689469						
ANR	2689591	Symbol	CRn		2689469						
ANR	2689592	Symbol	arminsn -> str_asm		2689469						
ANR	2689593	Symbol	CRm		2689469						
ANR	2689594	Symbol	CPnum		2689469						
ANR	2689595	Function	arm_disasm_coprocdatatrans	369:0:12436:13325							
ANR	2689596	FunctionDef	"arm_disasm_coprocdatatrans (struct winedbg_arm_insn * arminsn , ut32 inst)"		2689595	0					
ANR	2689597	CompoundStatement		369:84:12520:13325	2689595	0					
ANR	2689598	IdentifierDeclStatement	ut16 CPnum = ( inst >> 8 ) & 0x0f ;	370:1:12523:12556	2689595	0	True				
ANR	2689599	IdentifierDecl	CPnum = ( inst >> 8 ) & 0x0f		2689595	0					
ANR	2689600	IdentifierDeclType	ut16		2689595	0					
ANR	2689601	Identifier	CPnum		2689595	1					
ANR	2689602	AssignmentExpression	CPnum = ( inst >> 8 ) & 0x0f		2689595	2		=			
ANR	2689603	Identifier	CPnum		2689595	0					
ANR	2689604	BitAndExpression	( inst >> 8 ) & 0x0f		2689595	1		&			
ANR	2689605	ShiftExpression	inst >> 8		2689595	0		>>			
ANR	2689606	Identifier	inst		2689595	0					
ANR	2689607	PrimaryExpression	8		2689595	1					
ANR	2689608	PrimaryExpression	0x0f		2689595	1					
ANR	2689609	IdentifierDeclStatement	ut16 CRd = ( inst >> 12 ) & 0x0f ;	371:1:12559:12592	2689595	1	True				
ANR	2689610	IdentifierDecl	CRd = ( inst >> 12 ) & 0x0f		2689595	0					
ANR	2689611	IdentifierDeclType	ut16		2689595	0					
ANR	2689612	Identifier	CRd		2689595	1					
ANR	2689613	AssignmentExpression	CRd = ( inst >> 12 ) & 0x0f		2689595	2		=			
ANR	2689614	Identifier	CRd		2689595	0					
ANR	2689615	BitAndExpression	( inst >> 12 ) & 0x0f		2689595	1		&			
ANR	2689616	ShiftExpression	inst >> 12		2689595	0		>>			
ANR	2689617	Identifier	inst		2689595	0					
ANR	2689618	PrimaryExpression	12		2689595	1					
ANR	2689619	PrimaryExpression	0x0f		2689595	1					
ANR	2689620	IdentifierDeclStatement	ut16 load = ( inst >> 20 ) & 0x01 ;	372:1:12595:12631	2689595	2	True				
ANR	2689621	IdentifierDecl	load = ( inst >> 20 ) & 0x01		2689595	0					
ANR	2689622	IdentifierDeclType	ut16		2689595	0					
ANR	2689623	Identifier	load		2689595	1					
ANR	2689624	AssignmentExpression	load = ( inst >> 20 ) & 0x01		2689595	2		=			
ANR	2689625	Identifier	load		2689595	0					
ANR	2689626	BitAndExpression	( inst >> 20 ) & 0x01		2689595	1		&			
ANR	2689627	ShiftExpression	inst >> 20		2689595	0		>>			
ANR	2689628	Identifier	inst		2689595	0					
ANR	2689629	PrimaryExpression	20		2689595	1					
ANR	2689630	PrimaryExpression	0x01		2689595	1					
ANR	2689631	IdentifierDeclStatement	ut16 writeback = ( inst >> 21 ) & 0x01 ;	373:1:12634:12670	2689595	3	True				
ANR	2689632	IdentifierDecl	writeback = ( inst >> 21 ) & 0x01		2689595	0					
ANR	2689633	IdentifierDeclType	ut16		2689595	0					
ANR	2689634	Identifier	writeback		2689595	1					
ANR	2689635	AssignmentExpression	writeback = ( inst >> 21 ) & 0x01		2689595	2		=			
ANR	2689636	Identifier	writeback		2689595	0					
ANR	2689637	BitAndExpression	( inst >> 21 ) & 0x01		2689595	1		&			
ANR	2689638	ShiftExpression	inst >> 21		2689595	0		>>			
ANR	2689639	Identifier	inst		2689595	0					
ANR	2689640	PrimaryExpression	21		2689595	1					
ANR	2689641	PrimaryExpression	0x01		2689595	1					
ANR	2689642	IdentifierDeclStatement	ut16 translen = ( inst >> 22 ) & 0x01 ;	374:1:12673:12709	2689595	4	True				
ANR	2689643	IdentifierDecl	translen = ( inst >> 22 ) & 0x01		2689595	0					
ANR	2689644	IdentifierDeclType	ut16		2689595	0					
ANR	2689645	Identifier	translen		2689595	1					
ANR	2689646	AssignmentExpression	translen = ( inst >> 22 ) & 0x01		2689595	2		=			
ANR	2689647	Identifier	translen		2689595	0					
ANR	2689648	BitAndExpression	( inst >> 22 ) & 0x01		2689595	1		&			
ANR	2689649	ShiftExpression	inst >> 22		2689595	0		>>			
ANR	2689650	Identifier	inst		2689595	0					
ANR	2689651	PrimaryExpression	22		2689595	1					
ANR	2689652	PrimaryExpression	0x01		2689595	1					
ANR	2689653	IdentifierDeclStatement	ut16 direction = ( inst >> 23 ) & 0x01 ;	375:1:12712:12748	2689595	5	True				
ANR	2689654	IdentifierDecl	direction = ( inst >> 23 ) & 0x01		2689595	0					
ANR	2689655	IdentifierDeclType	ut16		2689595	0					
ANR	2689656	Identifier	direction		2689595	1					
ANR	2689657	AssignmentExpression	direction = ( inst >> 23 ) & 0x01		2689595	2		=			
ANR	2689658	Identifier	direction		2689595	0					
ANR	2689659	BitAndExpression	( inst >> 23 ) & 0x01		2689595	1		&			
ANR	2689660	ShiftExpression	inst >> 23		2689595	0		>>			
ANR	2689661	Identifier	inst		2689595	0					
ANR	2689662	PrimaryExpression	23		2689595	1					
ANR	2689663	PrimaryExpression	0x01		2689595	1					
ANR	2689664	IdentifierDeclStatement	ut16 indexing = ( inst >> 24 ) & 0x01 ;	376:1:12751:12787	2689595	6	True				
ANR	2689665	IdentifierDecl	indexing = ( inst >> 24 ) & 0x01		2689595	0					
ANR	2689666	IdentifierDeclType	ut16		2689595	0					
ANR	2689667	Identifier	indexing		2689595	1					
ANR	2689668	AssignmentExpression	indexing = ( inst >> 24 ) & 0x01		2689595	2		=			
ANR	2689669	Identifier	indexing		2689595	0					
ANR	2689670	BitAndExpression	( inst >> 24 ) & 0x01		2689595	1		&			
ANR	2689671	ShiftExpression	inst >> 24		2689595	0		>>			
ANR	2689672	Identifier	inst		2689595	0					
ANR	2689673	PrimaryExpression	24		2689595	1					
ANR	2689674	PrimaryExpression	0x01		2689595	1					
ANR	2689675	IdentifierDeclStatement	short offset = ( inst & 0xff ) << 2 ;	377:1:12790:12826	2689595	7	True				
ANR	2689676	IdentifierDecl	offset = ( inst & 0xff ) << 2		2689595	0					
ANR	2689677	IdentifierDeclType	short		2689595	0					
ANR	2689678	Identifier	offset		2689595	1					
ANR	2689679	AssignmentExpression	offset = ( inst & 0xff ) << 2		2689595	2		=			
ANR	2689680	Identifier	offset		2689595	0					
ANR	2689681	ShiftExpression	( inst & 0xff ) << 2		2689595	1		<<			
ANR	2689682	BitAndExpression	inst & 0xff		2689595	0		&			
ANR	2689683	Identifier	inst		2689595	0					
ANR	2689684	PrimaryExpression	0xff		2689595	1					
ANR	2689685	PrimaryExpression	2		2689595	1					
ANR	2689686	IfStatement	if ( ! direction )		2689595	8					
ANR	2689687	Condition	! direction	379:5:12834:12843	2689595	0	True				
ANR	2689688	UnaryOperationExpression	! direction		2689595	0					
ANR	2689689	UnaryOperator	!		2689595	0					
ANR	2689690	Identifier	direction		2689595	1					
ANR	2689691	CompoundStatement		11:17:325:325	2689595	1					
ANR	2689692	ExpressionStatement	offset *= - 1	380:2:12850:12862	2689595	0	True				
ANR	2689693	AssignmentExpression	offset *= - 1		2689595	0		*=			
ANR	2689694	Identifier	offset		2689595	0					
ANR	2689695	UnaryOperationExpression	- 1		2689595	1					
ANR	2689696	UnaryOperator	-		2689595	0					
ANR	2689697	PrimaryExpression	1		2689595	1					
ANR	2689698	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , load ? ""ldc"" : ""stc"" , translen ? ""l"" : """" , get_cond ( inst ) )"	383:1:12869:12990	2689595	9	True				
ANR	2689699	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , load ? ""ldc"" : ""stc"" , translen ? ""l"" : """" , get_cond ( inst ) )"		2689595	0		=			
ANR	2689700	PtrMemberAccess	arminsn -> str_asm		2689595	0					
ANR	2689701	Identifier	arminsn		2689595	0					
ANR	2689702	Identifier	str_asm		2689595	1					
ANR	2689703	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s%s"" , load ? ""ldc"" : ""stc"" , translen ? ""l"" : """" , get_cond ( inst ) )"		2689595	1					
ANR	2689704	Callee	r_str_appendf		2689595	0					
ANR	2689705	Identifier	r_str_appendf		2689595	0					
ANR	2689706	ArgumentList	arminsn -> str_asm		2689595	1					
ANR	2689707	Argument	arminsn -> str_asm		2689595	0					
ANR	2689708	PtrMemberAccess	arminsn -> str_asm		2689595	0					
ANR	2689709	Identifier	arminsn		2689595	0					
ANR	2689710	Identifier	str_asm		2689595	1					
ANR	2689711	Argument	"""%s%s%s"""		2689595	1					
ANR	2689712	PrimaryExpression	"""%s%s%s"""		2689595	0					
ANR	2689713	Argument	"load ? ""ldc"" : ""stc"""		2689595	2					
ANR	2689714	ConditionalExpression	"load ? ""ldc"" : ""stc"""		2689595	0					
ANR	2689715	Condition	load		2689595	0					
ANR	2689716	Identifier	load		2689595	0					
ANR	2689717	PrimaryExpression	"""ldc"""		2689595	1					
ANR	2689718	PrimaryExpression	"""stc"""		2689595	2					
ANR	2689719	Argument	"translen ? ""l"" : """""		2689595	3					
ANR	2689720	ConditionalExpression	"translen ? ""l"" : """""		2689595	0					
ANR	2689721	Condition	translen		2689595	0					
ANR	2689722	Identifier	translen		2689595	0					
ANR	2689723	PrimaryExpression	"""l"""		2689595	1					
ANR	2689724	PrimaryExpression	""""""		2689595	2					
ANR	2689725	Argument	get_cond ( inst )		2689595	4					
ANR	2689726	CallExpression	get_cond ( inst )		2689595	0					
ANR	2689727	Callee	get_cond		2689595	0					
ANR	2689728	Identifier	get_cond		2689595	0					
ANR	2689729	ArgumentList	inst		2689595	1					
ANR	2689730	Argument	inst		2689595	0					
ANR	2689731	Identifier	inst		2689595	0					
ANR	2689732	IfStatement	if ( indexing )		2689595	10					
ANR	2689733	Condition	indexing	384:5:12997:13004	2689595	0	True				
ANR	2689734	Identifier	indexing		2689595	0					
ANR	2689735	CompoundStatement		16:15:486:486	2689595	1					
ANR	2689736	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s, #%d]%s"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset , writeback ? ""!"" : """" )"	385:2:13011:13165	2689595	0	True				
ANR	2689737	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s, #%d]%s"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset , writeback ? ""!"" : """" )"		2689595	0		=			
ANR	2689738	PtrMemberAccess	arminsn -> str_asm		2689595	0					
ANR	2689739	Identifier	arminsn		2689595	0					
ANR	2689740	Identifier	str_asm		2689595	1					
ANR	2689741	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s, #%d]%s"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset , writeback ? ""!"" : """" )"		2689595	1					
ANR	2689742	Callee	r_str_appendf		2689595	0					
ANR	2689743	Identifier	r_str_appendf		2689595	0					
ANR	2689744	ArgumentList	arminsn -> str_asm		2689595	1					
ANR	2689745	Argument	arminsn -> str_asm		2689595	0					
ANR	2689746	PtrMemberAccess	arminsn -> str_asm		2689595	0					
ANR	2689747	Identifier	arminsn		2689595	0					
ANR	2689748	Identifier	str_asm		2689595	1					
ANR	2689749	Argument	""" %u, cr%u, [%s, #%d]%s"""		2689595	1					
ANR	2689750	PrimaryExpression	""" %u, cr%u, [%s, #%d]%s"""		2689595	0					
ANR	2689751	Argument	CPnum		2689595	2					
ANR	2689752	Identifier	CPnum		2689595	0					
ANR	2689753	Argument	CRd		2689595	3					
ANR	2689754	Identifier	CRd		2689595	0					
ANR	2689755	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2689595	4					
ANR	2689756	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2689595	0					
ANR	2689757	Identifier	tbl_regs		2689595	0					
ANR	2689758	CallExpression	"get_nibble ( inst , 4 )"		2689595	1					
ANR	2689759	Callee	get_nibble		2689595	0					
ANR	2689760	Identifier	get_nibble		2689595	0					
ANR	2689761	ArgumentList	inst		2689595	1					
ANR	2689762	Argument	inst		2689595	0					
ANR	2689763	Identifier	inst		2689595	0					
ANR	2689764	Argument	4		2689595	1					
ANR	2689765	PrimaryExpression	4		2689595	0					
ANR	2689766	Argument	offset		2689595	5					
ANR	2689767	Identifier	offset		2689595	0					
ANR	2689768	Argument	"writeback ? ""!"" : """""		2689595	6					
ANR	2689769	ConditionalExpression	"writeback ? ""!"" : """""		2689595	0					
ANR	2689770	Condition	writeback		2689595	0					
ANR	2689771	Identifier	writeback		2689595	0					
ANR	2689772	PrimaryExpression	"""!"""		2689595	1					
ANR	2689773	PrimaryExpression	""""""		2689595	2					
ANR	2689774	ElseStatement	else		2689595	0					
ANR	2689775	CompoundStatement		19:8:654:654	2689595	0					
ANR	2689776	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s], #%d"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"	388:2:13179:13309	2689595	0	True				
ANR	2689777	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s], #%d"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2689595	0		=			
ANR	2689778	PtrMemberAccess	arminsn -> str_asm		2689595	0					
ANR	2689779	Identifier	arminsn		2689595	0					
ANR	2689780	Identifier	str_asm		2689595	1					
ANR	2689781	CallExpression	"r_str_appendf ( arminsn -> str_asm , "" %u, cr%u, [%s], #%d"" , CPnum , CRd , tbl_regs [ get_nibble ( inst , 4 ) ] , offset )"		2689595	1					
ANR	2689782	Callee	r_str_appendf		2689595	0					
ANR	2689783	Identifier	r_str_appendf		2689595	0					
ANR	2689784	ArgumentList	arminsn -> str_asm		2689595	1					
ANR	2689785	Argument	arminsn -> str_asm		2689595	0					
ANR	2689786	PtrMemberAccess	arminsn -> str_asm		2689595	0					
ANR	2689787	Identifier	arminsn		2689595	0					
ANR	2689788	Identifier	str_asm		2689595	1					
ANR	2689789	Argument	""" %u, cr%u, [%s], #%d"""		2689595	1					
ANR	2689790	PrimaryExpression	""" %u, cr%u, [%s], #%d"""		2689595	0					
ANR	2689791	Argument	CPnum		2689595	2					
ANR	2689792	Identifier	CPnum		2689595	0					
ANR	2689793	Argument	CRd		2689595	3					
ANR	2689794	Identifier	CRd		2689595	0					
ANR	2689795	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2689595	4					
ANR	2689796	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2689595	0					
ANR	2689797	Identifier	tbl_regs		2689595	0					
ANR	2689798	CallExpression	"get_nibble ( inst , 4 )"		2689595	1					
ANR	2689799	Callee	get_nibble		2689595	0					
ANR	2689800	Identifier	get_nibble		2689595	0					
ANR	2689801	ArgumentList	inst		2689595	1					
ANR	2689802	Argument	inst		2689595	0					
ANR	2689803	Identifier	inst		2689595	0					
ANR	2689804	Argument	4		2689595	1					
ANR	2689805	PrimaryExpression	4		2689595	0					
ANR	2689806	Argument	offset		2689595	5					
ANR	2689807	Identifier	offset		2689595	0					
ANR	2689808	ReturnStatement	return 0 ;	391:1:13315:13323	2689595	11	True				
ANR	2689809	PrimaryExpression	0		2689595	0					
ANR	2689810	ReturnType	static ut32		2689595	1					
ANR	2689811	Identifier	arm_disasm_coprocdatatrans		2689595	2					
ANR	2689812	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2689595	3					
ANR	2689813	Parameter	struct winedbg_arm_insn * arminsn	369:39:12475:12506	2689595	0	True				
ANR	2689814	ParameterType	struct winedbg_arm_insn *		2689595	0					
ANR	2689815	Identifier	arminsn		2689595	1					
ANR	2689816	Parameter	ut32 inst	369:73:12509:12517	2689595	1	True				
ANR	2689817	ParameterType	ut32		2689595	0					
ANR	2689818	Identifier	inst		2689595	1					
ANR	2689819	CFGEntryNode	ENTRY		2689595		True				
ANR	2689820	CFGExitNode	EXIT		2689595		True				
ANR	2689821	Symbol	get_cond		2689595						
ANR	2689822	Symbol	indexing		2689595						
ANR	2689823	Symbol	offset		2689595						
ANR	2689824	Symbol	tbl_regs		2689595						
ANR	2689825	Symbol	arminsn		2689595						
ANR	2689826	Symbol	arminsn -> str_asm		2689595						
ANR	2689827	Symbol	CPnum		2689595						
ANR	2689828	Symbol	* arminsn		2689595						
ANR	2689829	Symbol	get_nibble		2689595						
ANR	2689830	Symbol	CRd		2689595						
ANR	2689831	Symbol	load		2689595						
ANR	2689832	Symbol	writeback		2689595						
ANR	2689833	Symbol	translen		2689595						
ANR	2689834	Symbol	* tbl_regs		2689595						
ANR	2689835	Symbol	inst		2689595						
ANR	2689836	Symbol	r_str_appendf		2689595						
ANR	2689837	Symbol	* get_nibble		2689595						
ANR	2689838	Symbol	direction		2689595						
ANR	2689839	Function	thumb_disasm_hireg	394:0:13328:13991							
ANR	2689840	FunctionDef	"thumb_disasm_hireg (struct winedbg_arm_insn * arminsn , ut16 inst)"		2689839	0					
ANR	2689841	CompoundStatement		394:76:13404:13991	2689839	0					
ANR	2689842	IdentifierDeclStatement	short dst = inst & 0x07 ;	395:1:13407:13430	2689839	0	True				
ANR	2689843	IdentifierDecl	dst = inst & 0x07		2689839	0					
ANR	2689844	IdentifierDeclType	short		2689839	0					
ANR	2689845	Identifier	dst		2689839	1					
ANR	2689846	AssignmentExpression	dst = inst & 0x07		2689839	2		=			
ANR	2689847	Identifier	dst		2689839	0					
ANR	2689848	BitAndExpression	inst & 0x07		2689839	1		&			
ANR	2689849	Identifier	inst		2689839	0					
ANR	2689850	PrimaryExpression	0x07		2689839	1					
ANR	2689851	IdentifierDeclStatement	short src = ( inst >> 3 ) & 0x07 ;	396:1:13433:13463	2689839	1	True				
ANR	2689852	IdentifierDecl	src = ( inst >> 3 ) & 0x07		2689839	0					
ANR	2689853	IdentifierDeclType	short		2689839	0					
ANR	2689854	Identifier	src		2689839	1					
ANR	2689855	AssignmentExpression	src = ( inst >> 3 ) & 0x07		2689839	2		=			
ANR	2689856	Identifier	src		2689839	0					
ANR	2689857	BitAndExpression	( inst >> 3 ) & 0x07		2689839	1		&			
ANR	2689858	ShiftExpression	inst >> 3		2689839	0		>>			
ANR	2689859	Identifier	inst		2689839	0					
ANR	2689860	PrimaryExpression	3		2689839	1					
ANR	2689861	PrimaryExpression	0x07		2689839	1					
ANR	2689862	IdentifierDeclStatement	short h2 = ( inst >> 6 ) & 0x01 ;	397:1:13466:13496	2689839	2	True				
ANR	2689863	IdentifierDecl	h2 = ( inst >> 6 ) & 0x01		2689839	0					
ANR	2689864	IdentifierDeclType	short		2689839	0					
ANR	2689865	Identifier	h2		2689839	1					
ANR	2689866	AssignmentExpression	h2 = ( inst >> 6 ) & 0x01		2689839	2		=			
ANR	2689867	Identifier	h2		2689839	0					
ANR	2689868	BitAndExpression	( inst >> 6 ) & 0x01		2689839	1		&			
ANR	2689869	ShiftExpression	inst >> 6		2689839	0		>>			
ANR	2689870	Identifier	inst		2689839	0					
ANR	2689871	PrimaryExpression	6		2689839	1					
ANR	2689872	PrimaryExpression	0x01		2689839	1					
ANR	2689873	IdentifierDeclStatement	short h1 = ( inst >> 7 ) & 0x01 ;	398:1:13499:13529	2689839	3	True				
ANR	2689874	IdentifierDecl	h1 = ( inst >> 7 ) & 0x01		2689839	0					
ANR	2689875	IdentifierDeclType	short		2689839	0					
ANR	2689876	Identifier	h1		2689839	1					
ANR	2689877	AssignmentExpression	h1 = ( inst >> 7 ) & 0x01		2689839	2		=			
ANR	2689878	Identifier	h1		2689839	0					
ANR	2689879	BitAndExpression	( inst >> 7 ) & 0x01		2689839	1		&			
ANR	2689880	ShiftExpression	inst >> 7		2689839	0		>>			
ANR	2689881	Identifier	inst		2689839	0					
ANR	2689882	PrimaryExpression	7		2689839	1					
ANR	2689883	PrimaryExpression	0x01		2689839	1					
ANR	2689884	IdentifierDeclStatement	short op = ( inst >> 8 ) & 0x03 ;	399:1:13532:13562	2689839	4	True				
ANR	2689885	IdentifierDecl	op = ( inst >> 8 ) & 0x03		2689839	0					
ANR	2689886	IdentifierDeclType	short		2689839	0					
ANR	2689887	Identifier	op		2689839	1					
ANR	2689888	AssignmentExpression	op = ( inst >> 8 ) & 0x03		2689839	2		=			
ANR	2689889	Identifier	op		2689839	0					
ANR	2689890	BitAndExpression	( inst >> 8 ) & 0x03		2689839	1		&			
ANR	2689891	ShiftExpression	inst >> 8		2689839	0		>>			
ANR	2689892	Identifier	inst		2689839	0					
ANR	2689893	PrimaryExpression	8		2689839	1					
ANR	2689894	PrimaryExpression	0x03		2689839	1					
ANR	2689895	IfStatement	if ( h1 )		2689839	5					
ANR	2689896	Condition	h1	401:5:13570:13571	2689839	0	True				
ANR	2689897	Identifier	h1		2689839	0					
ANR	2689898	CompoundStatement		8:9:169:169	2689839	1					
ANR	2689899	ExpressionStatement	dst += 8	402:2:13578:13586	2689839	0	True				
ANR	2689900	AssignmentExpression	dst += 8		2689839	0		+=			
ANR	2689901	Identifier	dst		2689839	0					
ANR	2689902	PrimaryExpression	8		2689839	1					
ANR	2689903	IfStatement	if ( h2 )		2689839	6					
ANR	2689904	Condition	h2	404:5:13596:13597	2689839	0	True				
ANR	2689905	Identifier	h2		2689839	0					
ANR	2689906	CompoundStatement		11:9:195:195	2689839	1					
ANR	2689907	ExpressionStatement	src += 8	405:2:13604:13612	2689839	0	True				
ANR	2689908	AssignmentExpression	src += 8		2689839	0		+=			
ANR	2689909	Identifier	src		2689839	0					
ANR	2689910	PrimaryExpression	8		2689839	1					
ANR	2689911	IfStatement	if ( op == 2 && dst == src )		2689839	7					
ANR	2689912	Condition	op == 2 && dst == src	408:5:13623:13643	2689839	0	True				
ANR	2689913	AndExpression	op == 2 && dst == src		2689839	0		&&			
ANR	2689914	EqualityExpression	op == 2		2689839	0		==			
ANR	2689915	Identifier	op		2689839	0					
ANR	2689916	PrimaryExpression	2		2689839	1					
ANR	2689917	EqualityExpression	dst == src		2689839	1		==			
ANR	2689918	Identifier	dst		2689839	0					
ANR	2689919	Identifier	src		2689839	1					
ANR	2689920	CompoundStatement		15:28:241:241	2689839	1					
ANR	2689921	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"	409:2:13667:13725	2689839	0	True				
ANR	2689922	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"		2689839	0		=			
ANR	2689923	PtrMemberAccess	arminsn -> str_asm		2689839	0					
ANR	2689924	Identifier	arminsn		2689839	0					
ANR	2689925	Identifier	str_asm		2689839	1					
ANR	2689926	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""nop"" )"		2689839	1					
ANR	2689927	Callee	r_str_appendf		2689839	0					
ANR	2689928	Identifier	r_str_appendf		2689839	0					
ANR	2689929	ArgumentList	arminsn -> str_asm		2689839	1					
ANR	2689930	Argument	arminsn -> str_asm		2689839	0					
ANR	2689931	PtrMemberAccess	arminsn -> str_asm		2689839	0					
ANR	2689932	Identifier	arminsn		2689839	0					
ANR	2689933	Identifier	str_asm		2689839	1					
ANR	2689934	Argument	"""nop"""		2689839	1					
ANR	2689935	PrimaryExpression	"""nop"""		2689839	0					
ANR	2689936	ReturnStatement	return 0 ;	410:2:13729:13737	2689839	1	True				
ANR	2689937	PrimaryExpression	0		2689839	0					
ANR	2689938	IfStatement	if ( op == 3 )		2689839	8					
ANR	2689939	Condition	op == 3	413:5:13748:13754	2689839	0	True				
ANR	2689940	EqualityExpression	op == 3		2689839	0		==			
ANR	2689941	Identifier	op		2689839	0					
ANR	2689942	PrimaryExpression	3		2689839	1					
ANR	2689943	CompoundStatement		20:14:352:352	2689839	1					
ANR	2689944	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%sx %s"" , h1 ? ""l"" : """" , tbl_regs [ src ] )"	414:2:13761:13849	2689839	0	True				
ANR	2689945	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""b%sx %s"" , h1 ? ""l"" : """" , tbl_regs [ src ] )"		2689839	0		=			
ANR	2689946	PtrMemberAccess	arminsn -> str_asm		2689839	0					
ANR	2689947	Identifier	arminsn		2689839	0					
ANR	2689948	Identifier	str_asm		2689839	1					
ANR	2689949	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""b%sx %s"" , h1 ? ""l"" : """" , tbl_regs [ src ] )"		2689839	1					
ANR	2689950	Callee	r_str_appendf		2689839	0					
ANR	2689951	Identifier	r_str_appendf		2689839	0					
ANR	2689952	ArgumentList	arminsn -> str_asm		2689839	1					
ANR	2689953	Argument	arminsn -> str_asm		2689839	0					
ANR	2689954	PtrMemberAccess	arminsn -> str_asm		2689839	0					
ANR	2689955	Identifier	arminsn		2689839	0					
ANR	2689956	Identifier	str_asm		2689839	1					
ANR	2689957	Argument	"""b%sx %s"""		2689839	1					
ANR	2689958	PrimaryExpression	"""b%sx %s"""		2689839	0					
ANR	2689959	Argument	"h1 ? ""l"" : """""		2689839	2					
ANR	2689960	ConditionalExpression	"h1 ? ""l"" : """""		2689839	0					
ANR	2689961	Condition	h1		2689839	0					
ANR	2689962	Identifier	h1		2689839	0					
ANR	2689963	PrimaryExpression	"""l"""		2689839	1					
ANR	2689964	PrimaryExpression	""""""		2689839	2					
ANR	2689965	Argument	tbl_regs [ src ]		2689839	3					
ANR	2689966	ArrayIndexing	tbl_regs [ src ]		2689839	0					
ANR	2689967	Identifier	tbl_regs		2689839	0					
ANR	2689968	Identifier	src		2689839	1					
ANR	2689969	ElseStatement	else		2689839	0					
ANR	2689970	CompoundStatement		23:6:455:455	2689839	0					
ANR	2689971	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_hiops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"	417:2:13864:13975	2689839	0	True				
ANR	2689972	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_hiops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		2689839	0		=			
ANR	2689973	PtrMemberAccess	arminsn -> str_asm		2689839	0					
ANR	2689974	Identifier	arminsn		2689839	0					
ANR	2689975	Identifier	str_asm		2689839	1					
ANR	2689976	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_hiops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		2689839	1					
ANR	2689977	Callee	r_str_appendf		2689839	0					
ANR	2689978	Identifier	r_str_appendf		2689839	0					
ANR	2689979	ArgumentList	arminsn -> str_asm		2689839	1					
ANR	2689980	Argument	arminsn -> str_asm		2689839	0					
ANR	2689981	PtrMemberAccess	arminsn -> str_asm		2689839	0					
ANR	2689982	Identifier	arminsn		2689839	0					
ANR	2689983	Identifier	str_asm		2689839	1					
ANR	2689984	Argument	"""%s %s, %s"""		2689839	1					
ANR	2689985	PrimaryExpression	"""%s %s, %s"""		2689839	0					
ANR	2689986	Argument	tbl_hiops_t [ op ]		2689839	2					
ANR	2689987	ArrayIndexing	tbl_hiops_t [ op ]		2689839	0					
ANR	2689988	Identifier	tbl_hiops_t		2689839	0					
ANR	2689989	Identifier	op		2689839	1					
ANR	2689990	Argument	tbl_regs [ dst ]		2689839	3					
ANR	2689991	ArrayIndexing	tbl_regs [ dst ]		2689839	0					
ANR	2689992	Identifier	tbl_regs		2689839	0					
ANR	2689993	Identifier	dst		2689839	1					
ANR	2689994	Argument	tbl_regs [ src ]		2689839	4					
ANR	2689995	ArrayIndexing	tbl_regs [ src ]		2689839	0					
ANR	2689996	Identifier	tbl_regs		2689839	0					
ANR	2689997	Identifier	src		2689839	1					
ANR	2689998	ReturnStatement	return 0 ;	419:1:13981:13989	2689839	9	True				
ANR	2689999	PrimaryExpression	0		2689839	0					
ANR	2690000	ReturnType	static ut16		2689839	1					
ANR	2690001	Identifier	thumb_disasm_hireg		2689839	2					
ANR	2690002	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2689839	3					
ANR	2690003	Parameter	struct winedbg_arm_insn * arminsn	394:31:13359:13390	2689839	0	True				
ANR	2690004	ParameterType	struct winedbg_arm_insn *		2689839	0					
ANR	2690005	Identifier	arminsn		2689839	1					
ANR	2690006	Parameter	ut16 inst	394:65:13393:13401	2689839	1	True				
ANR	2690007	ParameterType	ut16		2689839	0					
ANR	2690008	Identifier	inst		2689839	1					
ANR	2690009	CFGEntryNode	ENTRY		2689839		True				
ANR	2690010	CFGExitNode	EXIT		2689839		True				
ANR	2690011	Symbol	op		2689839						
ANR	2690012	Symbol	dst		2689839						
ANR	2690013	Symbol	* op		2689839						
ANR	2690014	Symbol	src		2689839						
ANR	2690015	Symbol	tbl_regs		2689839						
ANR	2690016	Symbol	h1		2689839						
ANR	2690017	Symbol	* tbl_hiops_t		2689839						
ANR	2690018	Symbol	arminsn		2689839						
ANR	2690019	Symbol	h2		2689839						
ANR	2690020	Symbol	arminsn -> str_asm		2689839						
ANR	2690021	Symbol	* src		2689839						
ANR	2690022	Symbol	* arminsn		2689839						
ANR	2690023	Symbol	* dst		2689839						
ANR	2690024	Symbol	* tbl_regs		2689839						
ANR	2690025	Symbol	inst		2689839						
ANR	2690026	Symbol	r_str_appendf		2689839						
ANR	2690027	Symbol	tbl_hiops_t		2689839						
ANR	2690028	Function	thumb_disasm_aluop	422:0:13994:14291							
ANR	2690029	FunctionDef	"thumb_disasm_aluop (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690028	0					
ANR	2690030	CompoundStatement		422:76:14070:14291	2690028	0					
ANR	2690031	IdentifierDeclStatement	short dst = inst & 0x07 ;	423:1:14073:14096	2690028	0	True				
ANR	2690032	IdentifierDecl	dst = inst & 0x07		2690028	0					
ANR	2690033	IdentifierDeclType	short		2690028	0					
ANR	2690034	Identifier	dst		2690028	1					
ANR	2690035	AssignmentExpression	dst = inst & 0x07		2690028	2		=			
ANR	2690036	Identifier	dst		2690028	0					
ANR	2690037	BitAndExpression	inst & 0x07		2690028	1		&			
ANR	2690038	Identifier	inst		2690028	0					
ANR	2690039	PrimaryExpression	0x07		2690028	1					
ANR	2690040	IdentifierDeclStatement	short src = ( inst >> 3 ) & 0x07 ;	424:1:14099:14129	2690028	1	True				
ANR	2690041	IdentifierDecl	src = ( inst >> 3 ) & 0x07		2690028	0					
ANR	2690042	IdentifierDeclType	short		2690028	0					
ANR	2690043	Identifier	src		2690028	1					
ANR	2690044	AssignmentExpression	src = ( inst >> 3 ) & 0x07		2690028	2		=			
ANR	2690045	Identifier	src		2690028	0					
ANR	2690046	BitAndExpression	( inst >> 3 ) & 0x07		2690028	1		&			
ANR	2690047	ShiftExpression	inst >> 3		2690028	0		>>			
ANR	2690048	Identifier	inst		2690028	0					
ANR	2690049	PrimaryExpression	3		2690028	1					
ANR	2690050	PrimaryExpression	0x07		2690028	1					
ANR	2690051	IdentifierDeclStatement	short op = ( inst >> 6 ) & 0x0f ;	425:1:14132:14162	2690028	2	True				
ANR	2690052	IdentifierDecl	op = ( inst >> 6 ) & 0x0f		2690028	0					
ANR	2690053	IdentifierDeclType	short		2690028	0					
ANR	2690054	Identifier	op		2690028	1					
ANR	2690055	AssignmentExpression	op = ( inst >> 6 ) & 0x0f		2690028	2		=			
ANR	2690056	Identifier	op		2690028	0					
ANR	2690057	BitAndExpression	( inst >> 6 ) & 0x0f		2690028	1		&			
ANR	2690058	ShiftExpression	inst >> 6		2690028	0		>>			
ANR	2690059	Identifier	inst		2690028	0					
ANR	2690060	PrimaryExpression	6		2690028	1					
ANR	2690061	PrimaryExpression	0x0f		2690028	1					
ANR	2690062	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_aluops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"	427:1:14166:14278	2690028	3	True				
ANR	2690063	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_aluops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		2690028	0		=			
ANR	2690064	PtrMemberAccess	arminsn -> str_asm		2690028	0					
ANR	2690065	Identifier	arminsn		2690028	0					
ANR	2690066	Identifier	str_asm		2690028	1					
ANR	2690067	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s"" , tbl_aluops_t [ op ] , tbl_regs [ dst ] , tbl_regs [ src ] )"		2690028	1					
ANR	2690068	Callee	r_str_appendf		2690028	0					
ANR	2690069	Identifier	r_str_appendf		2690028	0					
ANR	2690070	ArgumentList	arminsn -> str_asm		2690028	1					
ANR	2690071	Argument	arminsn -> str_asm		2690028	0					
ANR	2690072	PtrMemberAccess	arminsn -> str_asm		2690028	0					
ANR	2690073	Identifier	arminsn		2690028	0					
ANR	2690074	Identifier	str_asm		2690028	1					
ANR	2690075	Argument	"""%s %s, %s"""		2690028	1					
ANR	2690076	PrimaryExpression	"""%s %s, %s"""		2690028	0					
ANR	2690077	Argument	tbl_aluops_t [ op ]		2690028	2					
ANR	2690078	ArrayIndexing	tbl_aluops_t [ op ]		2690028	0					
ANR	2690079	Identifier	tbl_aluops_t		2690028	0					
ANR	2690080	Identifier	op		2690028	1					
ANR	2690081	Argument	tbl_regs [ dst ]		2690028	3					
ANR	2690082	ArrayIndexing	tbl_regs [ dst ]		2690028	0					
ANR	2690083	Identifier	tbl_regs		2690028	0					
ANR	2690084	Identifier	dst		2690028	1					
ANR	2690085	Argument	tbl_regs [ src ]		2690028	4					
ANR	2690086	ArrayIndexing	tbl_regs [ src ]		2690028	0					
ANR	2690087	Identifier	tbl_regs		2690028	0					
ANR	2690088	Identifier	src		2690028	1					
ANR	2690089	ReturnStatement	return 0 ;	428:1:14281:14289	2690028	4	True				
ANR	2690090	PrimaryExpression	0		2690028	0					
ANR	2690091	ReturnType	static ut16		2690028	1					
ANR	2690092	Identifier	thumb_disasm_aluop		2690028	2					
ANR	2690093	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690028	3					
ANR	2690094	Parameter	struct winedbg_arm_insn * arminsn	422:31:14025:14056	2690028	0	True				
ANR	2690095	ParameterType	struct winedbg_arm_insn *		2690028	0					
ANR	2690096	Identifier	arminsn		2690028	1					
ANR	2690097	Parameter	ut16 inst	422:65:14059:14067	2690028	1	True				
ANR	2690098	ParameterType	ut16		2690028	0					
ANR	2690099	Identifier	inst		2690028	1					
ANR	2690100	CFGEntryNode	ENTRY		2690028		True				
ANR	2690101	CFGExitNode	EXIT		2690028		True				
ANR	2690102	Symbol	op		2690028						
ANR	2690103	Symbol	dst		2690028						
ANR	2690104	Symbol	* op		2690028						
ANR	2690105	Symbol	src		2690028						
ANR	2690106	Symbol	tbl_regs		2690028						
ANR	2690107	Symbol	tbl_aluops_t		2690028						
ANR	2690108	Symbol	arminsn		2690028						
ANR	2690109	Symbol	arminsn -> str_asm		2690028						
ANR	2690110	Symbol	* src		2690028						
ANR	2690111	Symbol	* tbl_aluops_t		2690028						
ANR	2690112	Symbol	* arminsn		2690028						
ANR	2690113	Symbol	* dst		2690028						
ANR	2690114	Symbol	* tbl_regs		2690028						
ANR	2690115	Symbol	inst		2690028						
ANR	2690116	Symbol	r_str_appendf		2690028						
ANR	2690117	Function	thumb_disasm_pushpop	431:0:14294:15062							
ANR	2690118	FunctionDef	"thumb_disasm_pushpop (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690117	0					
ANR	2690119	CompoundStatement		431:78:14372:15062	2690117	0					
ANR	2690120	IdentifierDeclStatement	short lrpc = ( inst >> 8 ) & 0x01 ;	432:1:14375:14407	2690117	0	True				
ANR	2690121	IdentifierDecl	lrpc = ( inst >> 8 ) & 0x01		2690117	0					
ANR	2690122	IdentifierDeclType	short		2690117	0					
ANR	2690123	Identifier	lrpc		2690117	1					
ANR	2690124	AssignmentExpression	lrpc = ( inst >> 8 ) & 0x01		2690117	2		=			
ANR	2690125	Identifier	lrpc		2690117	0					
ANR	2690126	BitAndExpression	( inst >> 8 ) & 0x01		2690117	1		&			
ANR	2690127	ShiftExpression	inst >> 8		2690117	0		>>			
ANR	2690128	Identifier	inst		2690117	0					
ANR	2690129	PrimaryExpression	8		2690117	1					
ANR	2690130	PrimaryExpression	0x01		2690117	1					
ANR	2690131	IdentifierDeclStatement	short load = ( inst >> 11 ) & 0x01 ;	433:1:14410:14442	2690117	1	True				
ANR	2690132	IdentifierDecl	load = ( inst >> 11 ) & 0x01		2690117	0					
ANR	2690133	IdentifierDeclType	short		2690117	0					
ANR	2690134	Identifier	load		2690117	1					
ANR	2690135	AssignmentExpression	load = ( inst >> 11 ) & 0x01		2690117	2		=			
ANR	2690136	Identifier	load		2690117	0					
ANR	2690137	BitAndExpression	( inst >> 11 ) & 0x01		2690117	1		&			
ANR	2690138	ShiftExpression	inst >> 11		2690117	0		>>			
ANR	2690139	Identifier	inst		2690117	0					
ANR	2690140	PrimaryExpression	11		2690117	1					
ANR	2690141	PrimaryExpression	0x01		2690117	1					
ANR	2690142	IdentifierDeclStatement	short i ;	434:1:14445:14452	2690117	2	True				
ANR	2690143	IdentifierDecl	i		2690117	0					
ANR	2690144	IdentifierDeclType	short		2690117	0					
ANR	2690145	Identifier	i		2690117	1					
ANR	2690146	IdentifierDeclStatement	short last ;	435:1:14455:14465	2690117	3	True				
ANR	2690147	IdentifierDecl	last		2690117	0					
ANR	2690148	IdentifierDeclType	short		2690117	0					
ANR	2690149	Identifier	last		2690117	1					
ANR	2690150	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		2690117	4					
ANR	2690151	ForInit	i = 7 ;	437:6:14474:14477	2690117	0	True				
ANR	2690152	AssignmentExpression	i = 7		2690117	0		=			
ANR	2690153	Identifier	i		2690117	0					
ANR	2690154	PrimaryExpression	7		2690117	1					
ANR	2690155	Condition	i >= 0	437:10:14478:14481	2690117	1	True				
ANR	2690156	RelationalExpression	i >= 0		2690117	0		>=			
ANR	2690157	Identifier	i		2690117	0					
ANR	2690158	PrimaryExpression	0		2690117	1					
ANR	2690159	PostIncDecOperationExpression	i --	437:15:14483:14485	2690117	2	True				
ANR	2690160	Identifier	i		2690117	0					
ANR	2690161	IncDec	--		2690117	1					
ANR	2690162	CompoundStatement		7:20:115:115	2690117	3					
ANR	2690163	IfStatement	if ( ( inst >> i ) & 1 )		2690117	0					
ANR	2690164	Condition	( inst >> i ) & 1	438:6:14496:14508	2690117	0	True				
ANR	2690165	BitAndExpression	( inst >> i ) & 1		2690117	0		&			
ANR	2690166	ShiftExpression	inst >> i		2690117	0		>>			
ANR	2690167	Identifier	inst		2690117	0					
ANR	2690168	Identifier	i		2690117	1					
ANR	2690169	PrimaryExpression	1		2690117	1					
ANR	2690170	CompoundStatement		8:21:138:138	2690117	1					
ANR	2690171	BreakStatement	break ;	439:3:14516:14521	2690117	0	True				
ANR	2690172	ExpressionStatement	last = i	442:1:14531:14539	2690117	5	True				
ANR	2690173	AssignmentExpression	last = i		2690117	0		=			
ANR	2690174	Identifier	last		2690117	0					
ANR	2690175	Identifier	i		2690117	1					
ANR	2690176	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s {"" , load ? ""pop"" : ""push"" )"	444:1:14543:14625	2690117	6	True				
ANR	2690177	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s {"" , load ? ""pop"" : ""push"" )"		2690117	0		=			
ANR	2690178	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690179	Identifier	arminsn		2690117	0					
ANR	2690180	Identifier	str_asm		2690117	1					
ANR	2690181	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s {"" , load ? ""pop"" : ""push"" )"		2690117	1					
ANR	2690182	Callee	r_str_appendf		2690117	0					
ANR	2690183	Identifier	r_str_appendf		2690117	0					
ANR	2690184	ArgumentList	arminsn -> str_asm		2690117	1					
ANR	2690185	Argument	arminsn -> str_asm		2690117	0					
ANR	2690186	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690187	Identifier	arminsn		2690117	0					
ANR	2690188	Identifier	str_asm		2690117	1					
ANR	2690189	Argument	"""%s {"""		2690117	1					
ANR	2690190	PrimaryExpression	"""%s {"""		2690117	0					
ANR	2690191	Argument	"load ? ""pop"" : ""push"""		2690117	2					
ANR	2690192	ConditionalExpression	"load ? ""pop"" : ""push"""		2690117	0					
ANR	2690193	Condition	load		2690117	0					
ANR	2690194	Identifier	load		2690117	0					
ANR	2690195	PrimaryExpression	"""pop"""		2690117	1					
ANR	2690196	PrimaryExpression	"""push"""		2690117	2					
ANR	2690197	ForStatement	for ( i = 0 ; i <= 7 ; i ++ )		2690117	7					
ANR	2690198	ForInit	i = 0 ;	446:6:14634:14637	2690117	0	True				
ANR	2690199	AssignmentExpression	i = 0		2690117	0		=			
ANR	2690200	Identifier	i		2690117	0					
ANR	2690201	PrimaryExpression	0		2690117	1					
ANR	2690202	Condition	i <= 7	446:10:14638:14641	2690117	1	True				
ANR	2690203	RelationalExpression	i <= 7		2690117	0		<=			
ANR	2690204	Identifier	i		2690117	0					
ANR	2690205	PrimaryExpression	7		2690117	1					
ANR	2690206	PostIncDecOperationExpression	i ++	446:15:14643:14645	2690117	2	True				
ANR	2690207	Identifier	i		2690117	0					
ANR	2690208	IncDec	++		2690117	1					
ANR	2690209	CompoundStatement		16:20:275:275	2690117	3					
ANR	2690210	IfStatement	if ( ( inst >> i ) & 1 )		2690117	0					
ANR	2690211	Condition	( inst >> i ) & 1	447:6:14656:14668	2690117	0	True				
ANR	2690212	BitAndExpression	( inst >> i ) & 1		2690117	0		&			
ANR	2690213	ShiftExpression	inst >> i		2690117	0		>>			
ANR	2690214	Identifier	inst		2690117	0					
ANR	2690215	Identifier	i		2690117	1					
ANR	2690216	PrimaryExpression	1		2690117	1					
ANR	2690217	CompoundStatement		17:21:298:298	2690117	1					
ANR	2690218	IfStatement	if ( i == last )		2690117	0					
ANR	2690219	Condition	i == last	448:7:14680:14688	2690117	0	True				
ANR	2690220	EqualityExpression	i == last		2690117	0		==			
ANR	2690221	Identifier	i		2690117	0					
ANR	2690222	Identifier	last		2690117	1					
ANR	2690223	CompoundStatement		18:18:318:318	2690117	1					
ANR	2690224	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"	449:4:14697:14767	2690117	0	True				
ANR	2690225	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		2690117	0		=			
ANR	2690226	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690227	Identifier	arminsn		2690117	0					
ANR	2690228	Identifier	str_asm		2690117	1					
ANR	2690229	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		2690117	1					
ANR	2690230	Callee	r_str_appendf		2690117	0					
ANR	2690231	Identifier	r_str_appendf		2690117	0					
ANR	2690232	ArgumentList	arminsn -> str_asm		2690117	1					
ANR	2690233	Argument	arminsn -> str_asm		2690117	0					
ANR	2690234	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690235	Identifier	arminsn		2690117	0					
ANR	2690236	Identifier	str_asm		2690117	1					
ANR	2690237	Argument	"""%s"""		2690117	1					
ANR	2690238	PrimaryExpression	"""%s"""		2690117	0					
ANR	2690239	Argument	tbl_regs [ i ]		2690117	2					
ANR	2690240	ArrayIndexing	tbl_regs [ i ]		2690117	0					
ANR	2690241	Identifier	tbl_regs		2690117	0					
ANR	2690242	Identifier	i		2690117	1					
ANR	2690243	ElseStatement	else		2690117	0					
ANR	2690244	CompoundStatement		21:8:409:409	2690117	0					
ANR	2690245	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"	452:4:14788:14860	2690117	0	True				
ANR	2690246	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		2690117	0		=			
ANR	2690247	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690248	Identifier	arminsn		2690117	0					
ANR	2690249	Identifier	str_asm		2690117	1					
ANR	2690250	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		2690117	1					
ANR	2690251	Callee	r_str_appendf		2690117	0					
ANR	2690252	Identifier	r_str_appendf		2690117	0					
ANR	2690253	ArgumentList	arminsn -> str_asm		2690117	1					
ANR	2690254	Argument	arminsn -> str_asm		2690117	0					
ANR	2690255	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690256	Identifier	arminsn		2690117	0					
ANR	2690257	Identifier	str_asm		2690117	1					
ANR	2690258	Argument	"""%s, """		2690117	1					
ANR	2690259	PrimaryExpression	"""%s, """		2690117	0					
ANR	2690260	Argument	tbl_regs [ i ]		2690117	2					
ANR	2690261	ArrayIndexing	tbl_regs [ i ]		2690117	0					
ANR	2690262	Identifier	tbl_regs		2690117	0					
ANR	2690263	Identifier	i		2690117	1					
ANR	2690264	IfStatement	if ( lrpc )		2690117	8					
ANR	2690265	Condition	lrpc	456:5:14879:14882	2690117	0	True				
ANR	2690266	Identifier	lrpc		2690117	0					
ANR	2690267	CompoundStatement		26:11:512:512	2690117	1					
ANR	2690268	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s"" , last ? "", "" : """" , load ? ""pc"" : ""lr"" )"	457:2:14889:14986	2690117	0	True				
ANR	2690269	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s"" , last ? "", "" : """" , load ? ""pc"" : ""lr"" )"		2690117	0		=			
ANR	2690270	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690271	Identifier	arminsn		2690117	0					
ANR	2690272	Identifier	str_asm		2690117	1					
ANR	2690273	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s"" , last ? "", "" : """" , load ? ""pc"" : ""lr"" )"		2690117	1					
ANR	2690274	Callee	r_str_appendf		2690117	0					
ANR	2690275	Identifier	r_str_appendf		2690117	0					
ANR	2690276	ArgumentList	arminsn -> str_asm		2690117	1					
ANR	2690277	Argument	arminsn -> str_asm		2690117	0					
ANR	2690278	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690279	Identifier	arminsn		2690117	0					
ANR	2690280	Identifier	str_asm		2690117	1					
ANR	2690281	Argument	"""%s%s"""		2690117	1					
ANR	2690282	PrimaryExpression	"""%s%s"""		2690117	0					
ANR	2690283	Argument	"last ? "", "" : """""		2690117	2					
ANR	2690284	ConditionalExpression	"last ? "", "" : """""		2690117	0					
ANR	2690285	Condition	last		2690117	0					
ANR	2690286	Identifier	last		2690117	0					
ANR	2690287	PrimaryExpression	""", """		2690117	1					
ANR	2690288	PrimaryExpression	""""""		2690117	2					
ANR	2690289	Argument	"load ? ""pc"" : ""lr"""		2690117	3					
ANR	2690290	ConditionalExpression	"load ? ""pc"" : ""lr"""		2690117	0					
ANR	2690291	Condition	load		2690117	0					
ANR	2690292	Identifier	load		2690117	0					
ANR	2690293	PrimaryExpression	"""pc"""		2690117	1					
ANR	2690294	PrimaryExpression	"""lr"""		2690117	2					
ANR	2690295	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"	460:1:14993:15049	2690117	9	True				
ANR	2690296	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"		2690117	0		=			
ANR	2690297	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690298	Identifier	arminsn		2690117	0					
ANR	2690299	Identifier	str_asm		2690117	1					
ANR	2690300	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""}"" )"		2690117	1					
ANR	2690301	Callee	r_str_appendf		2690117	0					
ANR	2690302	Identifier	r_str_appendf		2690117	0					
ANR	2690303	ArgumentList	arminsn -> str_asm		2690117	1					
ANR	2690304	Argument	arminsn -> str_asm		2690117	0					
ANR	2690305	PtrMemberAccess	arminsn -> str_asm		2690117	0					
ANR	2690306	Identifier	arminsn		2690117	0					
ANR	2690307	Identifier	str_asm		2690117	1					
ANR	2690308	Argument	"""}"""		2690117	1					
ANR	2690309	PrimaryExpression	"""}"""		2690117	0					
ANR	2690310	ReturnStatement	return 0 ;	461:1:15052:15060	2690117	10	True				
ANR	2690311	PrimaryExpression	0		2690117	0					
ANR	2690312	ReturnType	static ut16		2690117	1					
ANR	2690313	Identifier	thumb_disasm_pushpop		2690117	2					
ANR	2690314	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690117	3					
ANR	2690315	Parameter	struct winedbg_arm_insn * arminsn	431:33:14327:14358	2690117	0	True				
ANR	2690316	ParameterType	struct winedbg_arm_insn *		2690117	0					
ANR	2690317	Identifier	arminsn		2690117	1					
ANR	2690318	Parameter	ut16 inst	431:67:14361:14369	2690117	1	True				
ANR	2690319	ParameterType	ut16		2690117	0					
ANR	2690320	Identifier	inst		2690117	1					
ANR	2690321	CFGEntryNode	ENTRY		2690117		True				
ANR	2690322	CFGExitNode	EXIT		2690117		True				
ANR	2690323	Symbol	* arminsn		2690117						
ANR	2690324	Symbol	* i		2690117						
ANR	2690325	Symbol	load		2690117						
ANR	2690326	Symbol	last		2690117						
ANR	2690327	Symbol	tbl_regs		2690117						
ANR	2690328	Symbol	* tbl_regs		2690117						
ANR	2690329	Symbol	inst		2690117						
ANR	2690330	Symbol	r_str_appendf		2690117						
ANR	2690331	Symbol	i		2690117						
ANR	2690332	Symbol	arminsn		2690117						
ANR	2690333	Symbol	lrpc		2690117						
ANR	2690334	Symbol	arminsn -> str_asm		2690117						
ANR	2690335	Function	thumb_disasm_blocktrans	464:0:15065:15722							
ANR	2690336	FunctionDef	"thumb_disasm_blocktrans (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690335	0					
ANR	2690337	CompoundStatement		464:81:15146:15722	2690335	0					
ANR	2690338	IdentifierDeclStatement	short load = ( inst >> 11 ) & 0x01 ;	465:1:15149:15181	2690335	0	True				
ANR	2690339	IdentifierDecl	load = ( inst >> 11 ) & 0x01		2690335	0					
ANR	2690340	IdentifierDeclType	short		2690335	0					
ANR	2690341	Identifier	load		2690335	1					
ANR	2690342	AssignmentExpression	load = ( inst >> 11 ) & 0x01		2690335	2		=			
ANR	2690343	Identifier	load		2690335	0					
ANR	2690344	BitAndExpression	( inst >> 11 ) & 0x01		2690335	1		&			
ANR	2690345	ShiftExpression	inst >> 11		2690335	0		>>			
ANR	2690346	Identifier	inst		2690335	0					
ANR	2690347	PrimaryExpression	11		2690335	1					
ANR	2690348	PrimaryExpression	0x01		2690335	1					
ANR	2690349	IdentifierDeclStatement	short i ;	466:1:15184:15191	2690335	1	True				
ANR	2690350	IdentifierDecl	i		2690335	0					
ANR	2690351	IdentifierDeclType	short		2690335	0					
ANR	2690352	Identifier	i		2690335	1					
ANR	2690353	IdentifierDeclStatement	short last ;	467:1:15194:15204	2690335	2	True				
ANR	2690354	IdentifierDecl	last		2690335	0					
ANR	2690355	IdentifierDeclType	short		2690335	0					
ANR	2690356	Identifier	last		2690335	1					
ANR	2690357	ForStatement	for ( i = 7 ; i >= 0 ; i -- )		2690335	3					
ANR	2690358	ForInit	i = 7 ;	469:6:15213:15216	2690335	0	True				
ANR	2690359	AssignmentExpression	i = 7		2690335	0		=			
ANR	2690360	Identifier	i		2690335	0					
ANR	2690361	PrimaryExpression	7		2690335	1					
ANR	2690362	Condition	i >= 0	469:10:15217:15220	2690335	1	True				
ANR	2690363	RelationalExpression	i >= 0		2690335	0		>=			
ANR	2690364	Identifier	i		2690335	0					
ANR	2690365	PrimaryExpression	0		2690335	1					
ANR	2690366	PostIncDecOperationExpression	i --	469:15:15222:15224	2690335	2	True				
ANR	2690367	Identifier	i		2690335	0					
ANR	2690368	IncDec	--		2690335	1					
ANR	2690369	CompoundStatement		6:20:80:80	2690335	3					
ANR	2690370	IfStatement	if ( ( inst >> i ) & 1 )		2690335	0					
ANR	2690371	Condition	( inst >> i ) & 1	470:6:15235:15247	2690335	0	True				
ANR	2690372	BitAndExpression	( inst >> i ) & 1		2690335	0		&			
ANR	2690373	ShiftExpression	inst >> i		2690335	0		>>			
ANR	2690374	Identifier	inst		2690335	0					
ANR	2690375	Identifier	i		2690335	1					
ANR	2690376	PrimaryExpression	1		2690335	1					
ANR	2690377	CompoundStatement		7:21:103:103	2690335	1					
ANR	2690378	BreakStatement	break ;	471:3:15255:15260	2690335	0	True				
ANR	2690379	ExpressionStatement	last = i	474:1:15270:15278	2690335	4	True				
ANR	2690380	AssignmentExpression	last = i		2690335	0		=			
ANR	2690381	Identifier	last		2690335	0					
ANR	2690382	Identifier	i		2690335	1					
ANR	2690383	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s!, {"" , load ? ""ldmia"" : ""stmia"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] )"	476:1:15282:15402	2690335	5	True				
ANR	2690384	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s!, {"" , load ? ""ldmia"" : ""stmia"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] )"		2690335	0		=			
ANR	2690385	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690386	Identifier	arminsn		2690335	0					
ANR	2690387	Identifier	str_asm		2690335	1					
ANR	2690388	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s!, {"" , load ? ""ldmia"" : ""stmia"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] )"		2690335	1					
ANR	2690389	Callee	r_str_appendf		2690335	0					
ANR	2690390	Identifier	r_str_appendf		2690335	0					
ANR	2690391	ArgumentList	arminsn -> str_asm		2690335	1					
ANR	2690392	Argument	arminsn -> str_asm		2690335	0					
ANR	2690393	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690394	Identifier	arminsn		2690335	0					
ANR	2690395	Identifier	str_asm		2690335	1					
ANR	2690396	Argument	"""%s %s!, {"""		2690335	1					
ANR	2690397	PrimaryExpression	"""%s %s!, {"""		2690335	0					
ANR	2690398	Argument	"load ? ""ldmia"" : ""stmia"""		2690335	2					
ANR	2690399	ConditionalExpression	"load ? ""ldmia"" : ""stmia"""		2690335	0					
ANR	2690400	Condition	load		2690335	0					
ANR	2690401	Identifier	load		2690335	0					
ANR	2690402	PrimaryExpression	"""ldmia"""		2690335	1					
ANR	2690403	PrimaryExpression	"""stmia"""		2690335	2					
ANR	2690404	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690335	3					
ANR	2690405	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690335	0					
ANR	2690406	Identifier	tbl_regs		2690335	0					
ANR	2690407	BitAndExpression	( inst >> 8 ) & 0x07		2690335	1		&			
ANR	2690408	ShiftExpression	inst >> 8		2690335	0		>>			
ANR	2690409	Identifier	inst		2690335	0					
ANR	2690410	PrimaryExpression	8		2690335	1					
ANR	2690411	PrimaryExpression	0x07		2690335	1					
ANR	2690412	ForStatement	for ( i = 0 ; i <= 7 ; i ++ )		2690335	6					
ANR	2690413	ForInit	i = 0 ;	478:6:15411:15414	2690335	0	True				
ANR	2690414	AssignmentExpression	i = 0		2690335	0		=			
ANR	2690415	Identifier	i		2690335	0					
ANR	2690416	PrimaryExpression	0		2690335	1					
ANR	2690417	Condition	i <= 7	478:10:15415:15418	2690335	1	True				
ANR	2690418	RelationalExpression	i <= 7		2690335	0		<=			
ANR	2690419	Identifier	i		2690335	0					
ANR	2690420	PrimaryExpression	7		2690335	1					
ANR	2690421	PostIncDecOperationExpression	i ++	478:15:15420:15422	2690335	2	True				
ANR	2690422	Identifier	i		2690335	0					
ANR	2690423	IncDec	++		2690335	1					
ANR	2690424	CompoundStatement		15:20:278:278	2690335	3					
ANR	2690425	IfStatement	if ( ( inst >> i ) & 1 )		2690335	0					
ANR	2690426	Condition	( inst >> i ) & 1	479:6:15433:15445	2690335	0	True				
ANR	2690427	BitAndExpression	( inst >> i ) & 1		2690335	0		&			
ANR	2690428	ShiftExpression	inst >> i		2690335	0		>>			
ANR	2690429	Identifier	inst		2690335	0					
ANR	2690430	Identifier	i		2690335	1					
ANR	2690431	PrimaryExpression	1		2690335	1					
ANR	2690432	CompoundStatement		16:21:301:301	2690335	1					
ANR	2690433	IfStatement	if ( i == last )		2690335	0					
ANR	2690434	Condition	i == last	480:7:15457:15465	2690335	0	True				
ANR	2690435	EqualityExpression	i == last		2690335	0		==			
ANR	2690436	Identifier	i		2690335	0					
ANR	2690437	Identifier	last		2690335	1					
ANR	2690438	CompoundStatement		17:18:321:321	2690335	1					
ANR	2690439	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"	481:4:15474:15544	2690335	0	True				
ANR	2690440	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		2690335	0		=			
ANR	2690441	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690442	Identifier	arminsn		2690335	0					
ANR	2690443	Identifier	str_asm		2690335	1					
ANR	2690444	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ i ] )"		2690335	1					
ANR	2690445	Callee	r_str_appendf		2690335	0					
ANR	2690446	Identifier	r_str_appendf		2690335	0					
ANR	2690447	ArgumentList	arminsn -> str_asm		2690335	1					
ANR	2690448	Argument	arminsn -> str_asm		2690335	0					
ANR	2690449	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690450	Identifier	arminsn		2690335	0					
ANR	2690451	Identifier	str_asm		2690335	1					
ANR	2690452	Argument	"""%s"""		2690335	1					
ANR	2690453	PrimaryExpression	"""%s"""		2690335	0					
ANR	2690454	Argument	tbl_regs [ i ]		2690335	2					
ANR	2690455	ArrayIndexing	tbl_regs [ i ]		2690335	0					
ANR	2690456	Identifier	tbl_regs		2690335	0					
ANR	2690457	Identifier	i		2690335	1					
ANR	2690458	ElseStatement	else		2690335	0					
ANR	2690459	CompoundStatement		20:8:412:412	2690335	0					
ANR	2690460	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"	484:4:15565:15637	2690335	0	True				
ANR	2690461	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		2690335	0		=			
ANR	2690462	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690463	Identifier	arminsn		2690335	0					
ANR	2690464	Identifier	str_asm		2690335	1					
ANR	2690465	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, "" , tbl_regs [ i ] )"		2690335	1					
ANR	2690466	Callee	r_str_appendf		2690335	0					
ANR	2690467	Identifier	r_str_appendf		2690335	0					
ANR	2690468	ArgumentList	arminsn -> str_asm		2690335	1					
ANR	2690469	Argument	arminsn -> str_asm		2690335	0					
ANR	2690470	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690471	Identifier	arminsn		2690335	0					
ANR	2690472	Identifier	str_asm		2690335	1					
ANR	2690473	Argument	"""%s, """		2690335	1					
ANR	2690474	PrimaryExpression	"""%s, """		2690335	0					
ANR	2690475	Argument	tbl_regs [ i ]		2690335	2					
ANR	2690476	ArrayIndexing	tbl_regs [ i ]		2690335	0					
ANR	2690477	Identifier	tbl_regs		2690335	0					
ANR	2690478	Identifier	i		2690335	1					
ANR	2690479	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"	489:1:15653:15709	2690335	7	True				
ANR	2690480	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""}"" )"		2690335	0		=			
ANR	2690481	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690482	Identifier	arminsn		2690335	0					
ANR	2690483	Identifier	str_asm		2690335	1					
ANR	2690484	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""}"" )"		2690335	1					
ANR	2690485	Callee	r_str_appendf		2690335	0					
ANR	2690486	Identifier	r_str_appendf		2690335	0					
ANR	2690487	ArgumentList	arminsn -> str_asm		2690335	1					
ANR	2690488	Argument	arminsn -> str_asm		2690335	0					
ANR	2690489	PtrMemberAccess	arminsn -> str_asm		2690335	0					
ANR	2690490	Identifier	arminsn		2690335	0					
ANR	2690491	Identifier	str_asm		2690335	1					
ANR	2690492	Argument	"""}"""		2690335	1					
ANR	2690493	PrimaryExpression	"""}"""		2690335	0					
ANR	2690494	ReturnStatement	return 0 ;	490:1:15712:15720	2690335	8	True				
ANR	2690495	PrimaryExpression	0		2690335	0					
ANR	2690496	ReturnType	static ut16		2690335	1					
ANR	2690497	Identifier	thumb_disasm_blocktrans		2690335	2					
ANR	2690498	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690335	3					
ANR	2690499	Parameter	struct winedbg_arm_insn * arminsn	464:36:15101:15132	2690335	0	True				
ANR	2690500	ParameterType	struct winedbg_arm_insn *		2690335	0					
ANR	2690501	Identifier	arminsn		2690335	1					
ANR	2690502	Parameter	ut16 inst	464:70:15135:15143	2690335	1	True				
ANR	2690503	ParameterType	ut16		2690335	0					
ANR	2690504	Identifier	inst		2690335	1					
ANR	2690505	CFGEntryNode	ENTRY		2690335		True				
ANR	2690506	CFGExitNode	EXIT		2690335		True				
ANR	2690507	Symbol	* arminsn		2690335						
ANR	2690508	Symbol	* inst		2690335						
ANR	2690509	Symbol	* i		2690335						
ANR	2690510	Symbol	load		2690335						
ANR	2690511	Symbol	last		2690335						
ANR	2690512	Symbol	tbl_regs		2690335						
ANR	2690513	Symbol	* tbl_regs		2690335						
ANR	2690514	Symbol	inst		2690335						
ANR	2690515	Symbol	r_str_appendf		2690335						
ANR	2690516	Symbol	i		2690335						
ANR	2690517	Symbol	arminsn		2690335						
ANR	2690518	Symbol	arminsn -> str_asm		2690335						
ANR	2690519	Function	thumb_disasm_condbranch	493:0:15725:16040							
ANR	2690520	FunctionDef	"thumb_disasm_condbranch (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690519	0					
ANR	2690521	CompoundStatement		493:81:15806:16040	2690519	0					
ANR	2690522	IdentifierDeclStatement	ut16 offset = inst & 0x00ff ;	494:1:15809:15836	2690519	0	True				
ANR	2690523	IdentifierDecl	offset = inst & 0x00ff		2690519	0					
ANR	2690524	IdentifierDeclType	ut16		2690519	0					
ANR	2690525	Identifier	offset		2690519	1					
ANR	2690526	AssignmentExpression	offset = inst & 0x00ff		2690519	2		=			
ANR	2690527	Identifier	offset		2690519	0					
ANR	2690528	BitAndExpression	inst & 0x00ff		2690519	1		&			
ANR	2690529	Identifier	inst		2690519	0					
ANR	2690530	PrimaryExpression	0x00ff		2690519	1					
ANR	2690531	Statement	arminsn	495:1:15839:15845	2690519	1	True				
ANR	2690532	Statement	->	495:8:15846:15847	2690519	2	True				
ANR	2690533	Statement	str_asm	495:10:15848:15854	2690519	3	True				
ANR	2690534	Statement	=	495:18:15856:15856	2690519	4	True				
ANR	2690535	Statement	r_str_appendf	495:20:15858:15870	2690519	5	True				
ANR	2690536	Statement	(	495:34:15872:15872	2690519	6	True				
ANR	2690537	Statement	arminsn	495:35:15873:15879	2690519	7	True				
ANR	2690538	Statement	->	495:42:15880:15881	2690519	8	True				
ANR	2690539	Statement	str_asm	495:44:15882:15888	2690519	9	True				
ANR	2690540	Statement	","	495:51:15889:15889	2690519	10	True				
ANR	2690541	Statement	"""b%s 0x%"""	495:53:15891:15899	2690519	11	True				
ANR	2690542	Statement	PFMT64x	495:62:15900:15906	2690519	12	True				
ANR	2690543	Statement	","	495:69:15907:15907	2690519	13	True				
ANR	2690544	Statement	tbl_cond	495:71:15909:15916	2690519	14	True				
ANR	2690545	Statement	[	495:79:15917:15917	2690519	15	True				
ANR	2690546	Statement	(	495:80:15918:15918	2690519	16	True				
ANR	2690547	Statement	inst	495:81:15919:15922	2690519	17	True				
ANR	2690548	Statement	>>	495:86:15924:15925	2690519	18	True				
ANR	2690549	Statement	8	495:89:15927:15927	2690519	19	True				
ANR	2690550	Statement	)	495:90:15928:15928	2690519	20	True				
ANR	2690551	Statement	&	495:92:15930:15930	2690519	21	True				
ANR	2690552	Statement	0x0f	495:94:15932:15935	2690519	22	True				
ANR	2690553	Statement	]	495:98:15936:15936	2690519	23	True				
ANR	2690554	Statement	","	495:99:15937:15937	2690519	24	True				
ANR	2690555	Statement	arminsn	495:101:15939:15945	2690519	25	True				
ANR	2690556	Statement	->	495:108:15946:15947	2690519	26	True				
ANR	2690557	Statement	pc	495:110:15948:15949	2690519	27	True				
ANR	2690558	Statement	+	495:112:15950:15950	2690519	28	True				
ANR	2690559	Statement	offset	495:113:15951:15956	2690519	29	True				
ANR	2690560	Statement	)	495:119:15957:15957	2690519	30	True				
ANR	2690561	ExpressionStatement		495:120:15958:15958	2690519	31	True				
ANR	2690562	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	497:1:15962:15995	2690519	32	True				
ANR	2690563	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		2690519	0		=			
ANR	2690564	PtrMemberAccess	arminsn -> jmp		2690519	0					
ANR	2690565	Identifier	arminsn		2690519	0					
ANR	2690566	Identifier	jmp		2690519	1					
ANR	2690567	AdditiveExpression	arminsn -> pc + offset		2690519	1		+			
ANR	2690568	PtrMemberAccess	arminsn -> pc		2690519	0					
ANR	2690569	Identifier	arminsn		2690519	0					
ANR	2690570	Identifier	pc		2690519	1					
ANR	2690571	Identifier	offset		2690519	1					
ANR	2690572	ExpressionStatement	arminsn -> fail = arminsn -> pc + 4	498:1:15998:16027	2690519	33	True				
ANR	2690573	AssignmentExpression	arminsn -> fail = arminsn -> pc + 4		2690519	0		=			
ANR	2690574	PtrMemberAccess	arminsn -> fail		2690519	0					
ANR	2690575	Identifier	arminsn		2690519	0					
ANR	2690576	Identifier	fail		2690519	1					
ANR	2690577	AdditiveExpression	arminsn -> pc + 4		2690519	1		+			
ANR	2690578	PtrMemberAccess	arminsn -> pc		2690519	0					
ANR	2690579	Identifier	arminsn		2690519	0					
ANR	2690580	Identifier	pc		2690519	1					
ANR	2690581	PrimaryExpression	4		2690519	1					
ANR	2690582	ReturnStatement	return 0 ;	499:1:16030:16038	2690519	34	True				
ANR	2690583	PrimaryExpression	0		2690519	0					
ANR	2690584	ReturnType	static ut16		2690519	1					
ANR	2690585	Identifier	thumb_disasm_condbranch		2690519	2					
ANR	2690586	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690519	3					
ANR	2690587	Parameter	struct winedbg_arm_insn * arminsn	493:36:15761:15792	2690519	0	True				
ANR	2690588	ParameterType	struct winedbg_arm_insn *		2690519	0					
ANR	2690589	Identifier	arminsn		2690519	1					
ANR	2690590	Parameter	ut16 inst	493:70:15795:15803	2690519	1	True				
ANR	2690591	ParameterType	ut16		2690519	0					
ANR	2690592	Identifier	inst		2690519	1					
ANR	2690593	CFGEntryNode	ENTRY		2690519		True				
ANR	2690594	CFGExitNode	EXIT		2690519		True				
ANR	2690595	Symbol	arminsn -> pc		2690519						
ANR	2690596	Symbol	* arminsn		2690519						
ANR	2690597	Symbol	offset		2690519						
ANR	2690598	Symbol	inst		2690519						
ANR	2690599	Symbol	arminsn		2690519						
ANR	2690600	Symbol	arminsn -> fail		2690519						
ANR	2690601	Symbol	arminsn -> jmp		2690519						
ANR	2690602	Function	thumb_disasm_uncondbranch	502:0:16043:16366							
ANR	2690603	FunctionDef	"thumb_disasm_uncondbranch (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690602	0					
ANR	2690604	CompoundStatement		502:83:16126:16366	2690602	0					
ANR	2690605	IdentifierDeclStatement	short offset = ( inst & 0x07ff ) << 1 ;	503:1:16129:16164	2690602	0	True				
ANR	2690606	IdentifierDecl	offset = ( inst & 0x07ff ) << 1		2690602	0					
ANR	2690607	IdentifierDeclType	short		2690602	0					
ANR	2690608	Identifier	offset		2690602	1					
ANR	2690609	AssignmentExpression	offset = ( inst & 0x07ff ) << 1		2690602	2		=			
ANR	2690610	Identifier	offset		2690602	0					
ANR	2690611	ShiftExpression	( inst & 0x07ff ) << 1		2690602	1		<<			
ANR	2690612	BitAndExpression	inst & 0x07ff		2690602	0		&			
ANR	2690613	Identifier	inst		2690602	0					
ANR	2690614	PrimaryExpression	0x07ff		2690602	1					
ANR	2690615	PrimaryExpression	1		2690602	1					
ANR	2690616	IfStatement	if ( offset & 0x0800 )		2690602	1					
ANR	2690617	Condition	offset & 0x0800	505:5:16172:16186	2690602	0	True				
ANR	2690618	BitAndExpression	offset & 0x0800		2690602	0		&			
ANR	2690619	Identifier	offset		2690602	0					
ANR	2690620	PrimaryExpression	0x0800		2690602	1					
ANR	2690621	CompoundStatement		4:22:62:62	2690602	1					
ANR	2690622	ExpressionStatement	offset |= 0xf000	506:2:16193:16209	2690602	0	True				
ANR	2690623	AssignmentExpression	offset |= 0xf000		2690602	0		|=			
ANR	2690624	Identifier	offset		2690602	0					
ANR	2690625	PrimaryExpression	0xf000		2690602	1					
ANR	2690626	ExpressionStatement	offset += 4	508:1:16215:16226	2690602	2	True				
ANR	2690627	AssignmentExpression	offset += 4		2690602	0		+=			
ANR	2690628	Identifier	offset		2690602	0					
ANR	2690629	PrimaryExpression	4		2690602	1					
ANR	2690630	Statement	arminsn	509:1:16229:16235	2690602	3	True				
ANR	2690631	Statement	->	509:8:16236:16237	2690602	4	True				
ANR	2690632	Statement	str_asm	509:10:16238:16244	2690602	5	True				
ANR	2690633	Statement	=	509:18:16246:16246	2690602	6	True				
ANR	2690634	Statement	r_str_appendf	509:20:16248:16260	2690602	7	True				
ANR	2690635	Statement	(	509:34:16262:16262	2690602	8	True				
ANR	2690636	Statement	arminsn	509:35:16263:16269	2690602	9	True				
ANR	2690637	Statement	->	509:42:16270:16271	2690602	10	True				
ANR	2690638	Statement	str_asm	509:44:16272:16278	2690602	11	True				
ANR	2690639	Statement	","	509:51:16279:16279	2690602	12	True				
ANR	2690640	Statement	"""b 0x%"""	509:53:16281:16287	2690602	13	True				
ANR	2690641	Statement	PFMT64x	509:60:16288:16294	2690602	14	True				
ANR	2690642	Statement	","	509:67:16295:16295	2690602	15	True				
ANR	2690643	Statement	arminsn	509:69:16297:16303	2690602	16	True				
ANR	2690644	Statement	->	509:76:16304:16305	2690602	17	True				
ANR	2690645	Statement	pc	509:78:16306:16307	2690602	18	True				
ANR	2690646	Statement	+	509:80:16308:16308	2690602	19	True				
ANR	2690647	Statement	offset	509:81:16309:16314	2690602	20	True				
ANR	2690648	Statement	)	509:87:16315:16315	2690602	21	True				
ANR	2690649	ExpressionStatement		509:88:16316:16316	2690602	22	True				
ANR	2690650	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	511:1:16320:16353	2690602	23	True				
ANR	2690651	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		2690602	0		=			
ANR	2690652	PtrMemberAccess	arminsn -> jmp		2690602	0					
ANR	2690653	Identifier	arminsn		2690602	0					
ANR	2690654	Identifier	jmp		2690602	1					
ANR	2690655	AdditiveExpression	arminsn -> pc + offset		2690602	1		+			
ANR	2690656	PtrMemberAccess	arminsn -> pc		2690602	0					
ANR	2690657	Identifier	arminsn		2690602	0					
ANR	2690658	Identifier	pc		2690602	1					
ANR	2690659	Identifier	offset		2690602	1					
ANR	2690660	ReturnStatement	return 0 ;	512:1:16356:16364	2690602	24	True				
ANR	2690661	PrimaryExpression	0		2690602	0					
ANR	2690662	ReturnType	static ut16		2690602	1					
ANR	2690663	Identifier	thumb_disasm_uncondbranch		2690602	2					
ANR	2690664	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690602	3					
ANR	2690665	Parameter	struct winedbg_arm_insn * arminsn	502:38:16081:16112	2690602	0	True				
ANR	2690666	ParameterType	struct winedbg_arm_insn *		2690602	0					
ANR	2690667	Identifier	arminsn		2690602	1					
ANR	2690668	Parameter	ut16 inst	502:72:16115:16123	2690602	1	True				
ANR	2690669	ParameterType	ut16		2690602	0					
ANR	2690670	Identifier	inst		2690602	1					
ANR	2690671	CFGEntryNode	ENTRY		2690602		True				
ANR	2690672	CFGExitNode	EXIT		2690602		True				
ANR	2690673	Symbol	arminsn -> pc		2690602						
ANR	2690674	Symbol	* arminsn		2690602						
ANR	2690675	Symbol	offset		2690602						
ANR	2690676	Symbol	inst		2690602						
ANR	2690677	Symbol	arminsn		2690602						
ANR	2690678	Symbol	arminsn -> jmp		2690602						
ANR	2690679	Function	thumb_disasm_loadadr	515:0:16369:16662							
ANR	2690680	FunctionDef	"thumb_disasm_loadadr (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690679	0					
ANR	2690681	CompoundStatement		515:78:16447:16662	2690679	0					
ANR	2690682	IdentifierDeclStatement	ut16 src = ( inst >> 11 ) & 0x01 ;	516:1:16450:16480	2690679	0	True				
ANR	2690683	IdentifierDecl	src = ( inst >> 11 ) & 0x01		2690679	0					
ANR	2690684	IdentifierDeclType	ut16		2690679	0					
ANR	2690685	Identifier	src		2690679	1					
ANR	2690686	AssignmentExpression	src = ( inst >> 11 ) & 0x01		2690679	2		=			
ANR	2690687	Identifier	src		2690679	0					
ANR	2690688	BitAndExpression	( inst >> 11 ) & 0x01		2690679	1		&			
ANR	2690689	ShiftExpression	inst >> 11		2690679	0		>>			
ANR	2690690	Identifier	inst		2690679	0					
ANR	2690691	PrimaryExpression	11		2690679	1					
ANR	2690692	PrimaryExpression	0x01		2690679	1					
ANR	2690693	IdentifierDeclStatement	ut16 offset = ( inst & 0xff ) << 2 ;	517:1:16483:16515	2690679	1	True				
ANR	2690694	IdentifierDecl	offset = ( inst & 0xff ) << 2		2690679	0					
ANR	2690695	IdentifierDeclType	ut16		2690679	0					
ANR	2690696	Identifier	offset		2690679	1					
ANR	2690697	AssignmentExpression	offset = ( inst & 0xff ) << 2		2690679	2		=			
ANR	2690698	Identifier	offset		2690679	0					
ANR	2690699	ShiftExpression	( inst & 0xff ) << 2		2690679	1		<<			
ANR	2690700	BitAndExpression	inst & 0xff		2690679	0		&			
ANR	2690701	Identifier	inst		2690679	0					
ANR	2690702	PrimaryExpression	0xff		2690679	1					
ANR	2690703	PrimaryExpression	2		2690679	1					
ANR	2690704	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add %s, %s, #%d"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , src ? ""sp"" : ""pc"" , offset )"	519:1:16519:16649	2690679	2	True				
ANR	2690705	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add %s, %s, #%d"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , src ? ""sp"" : ""pc"" , offset )"		2690679	0		=			
ANR	2690706	PtrMemberAccess	arminsn -> str_asm		2690679	0					
ANR	2690707	Identifier	arminsn		2690679	0					
ANR	2690708	Identifier	str_asm		2690679	1					
ANR	2690709	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""add %s, %s, #%d"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , src ? ""sp"" : ""pc"" , offset )"		2690679	1					
ANR	2690710	Callee	r_str_appendf		2690679	0					
ANR	2690711	Identifier	r_str_appendf		2690679	0					
ANR	2690712	ArgumentList	arminsn -> str_asm		2690679	1					
ANR	2690713	Argument	arminsn -> str_asm		2690679	0					
ANR	2690714	PtrMemberAccess	arminsn -> str_asm		2690679	0					
ANR	2690715	Identifier	arminsn		2690679	0					
ANR	2690716	Identifier	str_asm		2690679	1					
ANR	2690717	Argument	"""add %s, %s, #%d"""		2690679	1					
ANR	2690718	PrimaryExpression	"""add %s, %s, #%d"""		2690679	0					
ANR	2690719	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690679	2					
ANR	2690720	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690679	0					
ANR	2690721	Identifier	tbl_regs		2690679	0					
ANR	2690722	BitAndExpression	( inst >> 8 ) & 0x07		2690679	1		&			
ANR	2690723	ShiftExpression	inst >> 8		2690679	0		>>			
ANR	2690724	Identifier	inst		2690679	0					
ANR	2690725	PrimaryExpression	8		2690679	1					
ANR	2690726	PrimaryExpression	0x07		2690679	1					
ANR	2690727	Argument	"src ? ""sp"" : ""pc"""		2690679	3					
ANR	2690728	ConditionalExpression	"src ? ""sp"" : ""pc"""		2690679	0					
ANR	2690729	Condition	src		2690679	0					
ANR	2690730	Identifier	src		2690679	0					
ANR	2690731	PrimaryExpression	"""sp"""		2690679	1					
ANR	2690732	PrimaryExpression	"""pc"""		2690679	2					
ANR	2690733	Argument	offset		2690679	4					
ANR	2690734	Identifier	offset		2690679	0					
ANR	2690735	ReturnStatement	return 0 ;	521:1:16652:16660	2690679	3	True				
ANR	2690736	PrimaryExpression	0		2690679	0					
ANR	2690737	ReturnType	static ut16		2690679	1					
ANR	2690738	Identifier	thumb_disasm_loadadr		2690679	2					
ANR	2690739	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690679	3					
ANR	2690740	Parameter	struct winedbg_arm_insn * arminsn	515:33:16402:16433	2690679	0	True				
ANR	2690741	ParameterType	struct winedbg_arm_insn *		2690679	0					
ANR	2690742	Identifier	arminsn		2690679	1					
ANR	2690743	Parameter	ut16 inst	515:67:16436:16444	2690679	1	True				
ANR	2690744	ParameterType	ut16		2690679	0					
ANR	2690745	Identifier	inst		2690679	1					
ANR	2690746	CFGEntryNode	ENTRY		2690679		True				
ANR	2690747	CFGExitNode	EXIT		2690679		True				
ANR	2690748	Symbol	* arminsn		2690679						
ANR	2690749	Symbol	* inst		2690679						
ANR	2690750	Symbol	offset		2690679						
ANR	2690751	Symbol	src		2690679						
ANR	2690752	Symbol	tbl_regs		2690679						
ANR	2690753	Symbol	* tbl_regs		2690679						
ANR	2690754	Symbol	inst		2690679						
ANR	2690755	Symbol	r_str_appendf		2690679						
ANR	2690756	Symbol	arminsn		2690679						
ANR	2690757	Symbol	arminsn -> str_asm		2690679						
ANR	2690758	Function	thumb_disasm_swi	524:0:16665:16857							
ANR	2690759	FunctionDef	"thumb_disasm_swi (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690758	0					
ANR	2690760	CompoundStatement		524:74:16739:16857	2690758	0					
ANR	2690761	IdentifierDeclStatement	ut16 comment = inst & 0x00ff ;	525:1:16742:16770	2690758	0	True				
ANR	2690762	IdentifierDecl	comment = inst & 0x00ff		2690758	0					
ANR	2690763	IdentifierDeclType	ut16		2690758	0					
ANR	2690764	Identifier	comment		2690758	1					
ANR	2690765	AssignmentExpression	comment = inst & 0x00ff		2690758	2		=			
ANR	2690766	Identifier	comment		2690758	0					
ANR	2690767	BitAndExpression	inst & 0x00ff		2690758	1		&			
ANR	2690768	Identifier	inst		2690758	0					
ANR	2690769	PrimaryExpression	0x00ff		2690758	1					
ANR	2690770	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi #%d"" , comment )"	526:1:16773:16844	2690758	1	True				
ANR	2690771	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""swi #%d"" , comment )"		2690758	0		=			
ANR	2690772	PtrMemberAccess	arminsn -> str_asm		2690758	0					
ANR	2690773	Identifier	arminsn		2690758	0					
ANR	2690774	Identifier	str_asm		2690758	1					
ANR	2690775	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""swi #%d"" , comment )"		2690758	1					
ANR	2690776	Callee	r_str_appendf		2690758	0					
ANR	2690777	Identifier	r_str_appendf		2690758	0					
ANR	2690778	ArgumentList	arminsn -> str_asm		2690758	1					
ANR	2690779	Argument	arminsn -> str_asm		2690758	0					
ANR	2690780	PtrMemberAccess	arminsn -> str_asm		2690758	0					
ANR	2690781	Identifier	arminsn		2690758	0					
ANR	2690782	Identifier	str_asm		2690758	1					
ANR	2690783	Argument	"""swi #%d"""		2690758	1					
ANR	2690784	PrimaryExpression	"""swi #%d"""		2690758	0					
ANR	2690785	Argument	comment		2690758	2					
ANR	2690786	Identifier	comment		2690758	0					
ANR	2690787	ReturnStatement	return 0 ;	527:1:16847:16855	2690758	2	True				
ANR	2690788	PrimaryExpression	0		2690758	0					
ANR	2690789	ReturnType	static ut16		2690758	1					
ANR	2690790	Identifier	thumb_disasm_swi		2690758	2					
ANR	2690791	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690758	3					
ANR	2690792	Parameter	struct winedbg_arm_insn * arminsn	524:29:16694:16725	2690758	0	True				
ANR	2690793	ParameterType	struct winedbg_arm_insn *		2690758	0					
ANR	2690794	Identifier	arminsn		2690758	1					
ANR	2690795	Parameter	ut16 inst	524:63:16728:16736	2690758	1	True				
ANR	2690796	ParameterType	ut16		2690758	0					
ANR	2690797	Identifier	inst		2690758	1					
ANR	2690798	CFGEntryNode	ENTRY		2690758		True				
ANR	2690799	CFGExitNode	EXIT		2690758		True				
ANR	2690800	Symbol	* arminsn		2690758						
ANR	2690801	Symbol	inst		2690758						
ANR	2690802	Symbol	r_str_appendf		2690758						
ANR	2690803	Symbol	arminsn		2690758						
ANR	2690804	Symbol	comment		2690758						
ANR	2690805	Symbol	arminsn -> str_asm		2690758						
ANR	2690806	Function	thumb_disasm_nop	530:0:16860:17008							
ANR	2690807	FunctionDef	"thumb_disasm_nop (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690806	0					
ANR	2690808	CompoundStatement		530:74:16934:17008	2690806	0					
ANR	2690809	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"	531:1:16937:16995	2690806	0	True				
ANR	2690810	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""nop"" )"		2690806	0		=			
ANR	2690811	PtrMemberAccess	arminsn -> str_asm		2690806	0					
ANR	2690812	Identifier	arminsn		2690806	0					
ANR	2690813	Identifier	str_asm		2690806	1					
ANR	2690814	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""nop"" )"		2690806	1					
ANR	2690815	Callee	r_str_appendf		2690806	0					
ANR	2690816	Identifier	r_str_appendf		2690806	0					
ANR	2690817	ArgumentList	arminsn -> str_asm		2690806	1					
ANR	2690818	Argument	arminsn -> str_asm		2690806	0					
ANR	2690819	PtrMemberAccess	arminsn -> str_asm		2690806	0					
ANR	2690820	Identifier	arminsn		2690806	0					
ANR	2690821	Identifier	str_asm		2690806	1					
ANR	2690822	Argument	"""nop"""		2690806	1					
ANR	2690823	PrimaryExpression	"""nop"""		2690806	0					
ANR	2690824	ReturnStatement	return 0 ;	532:1:16998:17006	2690806	1	True				
ANR	2690825	PrimaryExpression	0		2690806	0					
ANR	2690826	ReturnType	static ut16		2690806	1					
ANR	2690827	Identifier	thumb_disasm_nop		2690806	2					
ANR	2690828	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690806	3					
ANR	2690829	Parameter	struct winedbg_arm_insn * arminsn	530:29:16889:16920	2690806	0	True				
ANR	2690830	ParameterType	struct winedbg_arm_insn *		2690806	0					
ANR	2690831	Identifier	arminsn		2690806	1					
ANR	2690832	Parameter	ut16 inst	530:63:16923:16931	2690806	1	True				
ANR	2690833	ParameterType	ut16		2690806	0					
ANR	2690834	Identifier	inst		2690806	1					
ANR	2690835	CFGEntryNode	ENTRY		2690806		True				
ANR	2690836	CFGExitNode	EXIT		2690806		True				
ANR	2690837	Symbol	* arminsn		2690806						
ANR	2690838	Symbol	inst		2690806						
ANR	2690839	Symbol	r_str_appendf		2690806						
ANR	2690840	Symbol	arminsn		2690806						
ANR	2690841	Symbol	arminsn -> str_asm		2690806						
ANR	2690842	Function	thumb_disasm_ldrpcrel	535:0:17011:17251							
ANR	2690843	FunctionDef	"thumb_disasm_ldrpcrel (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690842	0					
ANR	2690844	CompoundStatement		535:79:17090:17251	2690842	0					
ANR	2690845	IdentifierDeclStatement	ut16 offset = ( inst & 0xff ) << 2 ;	536:1:17093:17125	2690842	0	True				
ANR	2690846	IdentifierDecl	offset = ( inst & 0xff ) << 2		2690842	0					
ANR	2690847	IdentifierDeclType	ut16		2690842	0					
ANR	2690848	Identifier	offset		2690842	1					
ANR	2690849	AssignmentExpression	offset = ( inst & 0xff ) << 2		2690842	2		=			
ANR	2690850	Identifier	offset		2690842	0					
ANR	2690851	ShiftExpression	( inst & 0xff ) << 2		2690842	1		<<			
ANR	2690852	BitAndExpression	inst & 0xff		2690842	0		&			
ANR	2690853	Identifier	inst		2690842	0					
ANR	2690854	PrimaryExpression	0xff		2690842	1					
ANR	2690855	PrimaryExpression	2		2690842	1					
ANR	2690856	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""ldr %s, [pc, #%u]"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"	537:1:17128:17238	2690842	1	True				
ANR	2690857	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""ldr %s, [pc, #%u]"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		2690842	0		=			
ANR	2690858	PtrMemberAccess	arminsn -> str_asm		2690842	0					
ANR	2690859	Identifier	arminsn		2690842	0					
ANR	2690860	Identifier	str_asm		2690842	1					
ANR	2690861	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""ldr %s, [pc, #%u]"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		2690842	1					
ANR	2690862	Callee	r_str_appendf		2690842	0					
ANR	2690863	Identifier	r_str_appendf		2690842	0					
ANR	2690864	ArgumentList	arminsn -> str_asm		2690842	1					
ANR	2690865	Argument	arminsn -> str_asm		2690842	0					
ANR	2690866	PtrMemberAccess	arminsn -> str_asm		2690842	0					
ANR	2690867	Identifier	arminsn		2690842	0					
ANR	2690868	Identifier	str_asm		2690842	1					
ANR	2690869	Argument	"""ldr %s, [pc, #%u]"""		2690842	1					
ANR	2690870	PrimaryExpression	"""ldr %s, [pc, #%u]"""		2690842	0					
ANR	2690871	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690842	2					
ANR	2690872	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690842	0					
ANR	2690873	Identifier	tbl_regs		2690842	0					
ANR	2690874	BitAndExpression	( inst >> 8 ) & 0x07		2690842	1		&			
ANR	2690875	ShiftExpression	inst >> 8		2690842	0		>>			
ANR	2690876	Identifier	inst		2690842	0					
ANR	2690877	PrimaryExpression	8		2690842	1					
ANR	2690878	PrimaryExpression	0x07		2690842	1					
ANR	2690879	Argument	offset		2690842	3					
ANR	2690880	Identifier	offset		2690842	0					
ANR	2690881	ReturnStatement	return 0 ;	538:1:17241:17249	2690842	2	True				
ANR	2690882	PrimaryExpression	0		2690842	0					
ANR	2690883	ReturnType	static ut16		2690842	1					
ANR	2690884	Identifier	thumb_disasm_ldrpcrel		2690842	2					
ANR	2690885	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690842	3					
ANR	2690886	Parameter	struct winedbg_arm_insn * arminsn	535:34:17045:17076	2690842	0	True				
ANR	2690887	ParameterType	struct winedbg_arm_insn *		2690842	0					
ANR	2690888	Identifier	arminsn		2690842	1					
ANR	2690889	Parameter	ut16 inst	535:68:17079:17087	2690842	1	True				
ANR	2690890	ParameterType	ut16		2690842	0					
ANR	2690891	Identifier	inst		2690842	1					
ANR	2690892	CFGEntryNode	ENTRY		2690842		True				
ANR	2690893	CFGExitNode	EXIT		2690842		True				
ANR	2690894	Symbol	* arminsn		2690842						
ANR	2690895	Symbol	* inst		2690842						
ANR	2690896	Symbol	offset		2690842						
ANR	2690897	Symbol	* tbl_regs		2690842						
ANR	2690898	Symbol	tbl_regs		2690842						
ANR	2690899	Symbol	inst		2690842						
ANR	2690900	Symbol	r_str_appendf		2690842						
ANR	2690901	Symbol	arminsn		2690842						
ANR	2690902	Symbol	arminsn -> str_asm		2690842						
ANR	2690903	Function	thumb_disasm_ldrsprel	541:0:17254:17525							
ANR	2690904	FunctionDef	"thumb_disasm_ldrsprel (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690903	0					
ANR	2690905	CompoundStatement		541:79:17333:17525	2690903	0					
ANR	2690906	IdentifierDeclStatement	ut16 offset = ( inst & 0xff ) << 2 ;	542:1:17336:17368	2690903	0	True				
ANR	2690907	IdentifierDecl	offset = ( inst & 0xff ) << 2		2690903	0					
ANR	2690908	IdentifierDeclType	ut16		2690903	0					
ANR	2690909	Identifier	offset		2690903	1					
ANR	2690910	AssignmentExpression	offset = ( inst & 0xff ) << 2		2690903	2		=			
ANR	2690911	Identifier	offset		2690903	0					
ANR	2690912	ShiftExpression	( inst & 0xff ) << 2		2690903	1		<<			
ANR	2690913	BitAndExpression	inst & 0xff		2690903	0		&			
ANR	2690914	Identifier	inst		2690903	0					
ANR	2690915	PrimaryExpression	0xff		2690903	1					
ANR	2690916	PrimaryExpression	2		2690903	1					
ANR	2690917	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [sp, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"	543:1:17371:17512	2690903	1	True				
ANR	2690918	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [sp, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		2690903	0		=			
ANR	2690919	PtrMemberAccess	arminsn -> str_asm		2690903	0					
ANR	2690920	Identifier	arminsn		2690903	0					
ANR	2690921	Identifier	str_asm		2690903	1					
ANR	2690922	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, [sp, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , tbl_regs [ ( inst >> 8 ) & 0x07 ] , offset )"		2690903	1					
ANR	2690923	Callee	r_str_appendf		2690903	0					
ANR	2690924	Identifier	r_str_appendf		2690903	0					
ANR	2690925	ArgumentList	arminsn -> str_asm		2690903	1					
ANR	2690926	Argument	arminsn -> str_asm		2690903	0					
ANR	2690927	PtrMemberAccess	arminsn -> str_asm		2690903	0					
ANR	2690928	Identifier	arminsn		2690903	0					
ANR	2690929	Identifier	str_asm		2690903	1					
ANR	2690930	Argument	"""%s %s, [sp, #%u]"""		2690903	1					
ANR	2690931	PrimaryExpression	"""%s %s, [sp, #%u]"""		2690903	0					
ANR	2690932	Argument	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		2690903	2					
ANR	2690933	ConditionalExpression	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		2690903	0					
ANR	2690934	Condition	inst & 0x0800		2690903	0					
ANR	2690935	BitAndExpression	inst & 0x0800		2690903	0		&			
ANR	2690936	Identifier	inst		2690903	0					
ANR	2690937	PrimaryExpression	0x0800		2690903	1					
ANR	2690938	PrimaryExpression	"""ldr"""		2690903	1					
ANR	2690939	PrimaryExpression	"""str"""		2690903	2					
ANR	2690940	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690903	3					
ANR	2690941	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2690903	0					
ANR	2690942	Identifier	tbl_regs		2690903	0					
ANR	2690943	BitAndExpression	( inst >> 8 ) & 0x07		2690903	1		&			
ANR	2690944	ShiftExpression	inst >> 8		2690903	0		>>			
ANR	2690945	Identifier	inst		2690903	0					
ANR	2690946	PrimaryExpression	8		2690903	1					
ANR	2690947	PrimaryExpression	0x07		2690903	1					
ANR	2690948	Argument	offset		2690903	4					
ANR	2690949	Identifier	offset		2690903	0					
ANR	2690950	ReturnStatement	return 0 ;	545:1:17515:17523	2690903	2	True				
ANR	2690951	PrimaryExpression	0		2690903	0					
ANR	2690952	ReturnType	static ut16		2690903	1					
ANR	2690953	Identifier	thumb_disasm_ldrsprel		2690903	2					
ANR	2690954	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690903	3					
ANR	2690955	Parameter	struct winedbg_arm_insn * arminsn	541:34:17288:17319	2690903	0	True				
ANR	2690956	ParameterType	struct winedbg_arm_insn *		2690903	0					
ANR	2690957	Identifier	arminsn		2690903	1					
ANR	2690958	Parameter	ut16 inst	541:68:17322:17330	2690903	1	True				
ANR	2690959	ParameterType	ut16		2690903	0					
ANR	2690960	Identifier	inst		2690903	1					
ANR	2690961	CFGEntryNode	ENTRY		2690903		True				
ANR	2690962	CFGExitNode	EXIT		2690903		True				
ANR	2690963	Symbol	* arminsn		2690903						
ANR	2690964	Symbol	* inst		2690903						
ANR	2690965	Symbol	offset		2690903						
ANR	2690966	Symbol	tbl_regs		2690903						
ANR	2690967	Symbol	* tbl_regs		2690903						
ANR	2690968	Symbol	inst		2690903						
ANR	2690969	Symbol	r_str_appendf		2690903						
ANR	2690970	Symbol	arminsn		2690903						
ANR	2690971	Symbol	arminsn -> str_asm		2690903						
ANR	2690972	Function	thumb_disasm_addsprel	548:0:17528:17860							
ANR	2690973	FunctionDef	"thumb_disasm_addsprel (struct winedbg_arm_insn * arminsn , ut16 inst)"		2690972	0					
ANR	2690974	CompoundStatement		548:79:17607:17860	2690972	0					
ANR	2690975	IdentifierDeclStatement	ut16 offset = ( inst & 0x7f ) << 2 ;	549:1:17610:17642	2690972	0	True				
ANR	2690976	IdentifierDecl	offset = ( inst & 0x7f ) << 2		2690972	0					
ANR	2690977	IdentifierDeclType	ut16		2690972	0					
ANR	2690978	Identifier	offset		2690972	1					
ANR	2690979	AssignmentExpression	offset = ( inst & 0x7f ) << 2		2690972	2		=			
ANR	2690980	Identifier	offset		2690972	0					
ANR	2690981	ShiftExpression	( inst & 0x7f ) << 2		2690972	1		<<			
ANR	2690982	BitAndExpression	inst & 0x7f		2690972	0		&			
ANR	2690983	Identifier	inst		2690972	0					
ANR	2690984	PrimaryExpression	0x7f		2690972	1					
ANR	2690985	PrimaryExpression	2		2690972	1					
ANR	2690986	IfStatement	if ( ( inst >> 7 ) & 0x01 )		2690972	1					
ANR	2690987	Condition	( inst >> 7 ) & 0x01	550:5:17649:17666	2690972	0	True				
ANR	2690988	BitAndExpression	( inst >> 7 ) & 0x01		2690972	0		&			
ANR	2690989	ShiftExpression	inst >> 7		2690972	0		>>			
ANR	2690990	Identifier	inst		2690972	0					
ANR	2690991	PrimaryExpression	7		2690972	1					
ANR	2690992	PrimaryExpression	0x01		2690972	1					
ANR	2690993	CompoundStatement		3:25:61:61	2690972	1					
ANR	2690994	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sub sp, sp, #%u"" , offset )"	551:2:17673:17751	2690972	0	True				
ANR	2690995	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sub sp, sp, #%u"" , offset )"		2690972	0		=			
ANR	2690996	PtrMemberAccess	arminsn -> str_asm		2690972	0					
ANR	2690997	Identifier	arminsn		2690972	0					
ANR	2690998	Identifier	str_asm		2690972	1					
ANR	2690999	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""sub sp, sp, #%u"" , offset )"		2690972	1					
ANR	2691000	Callee	r_str_appendf		2690972	0					
ANR	2691001	Identifier	r_str_appendf		2690972	0					
ANR	2691002	ArgumentList	arminsn -> str_asm		2690972	1					
ANR	2691003	Argument	arminsn -> str_asm		2690972	0					
ANR	2691004	PtrMemberAccess	arminsn -> str_asm		2690972	0					
ANR	2691005	Identifier	arminsn		2690972	0					
ANR	2691006	Identifier	str_asm		2690972	1					
ANR	2691007	Argument	"""sub sp, sp, #%u"""		2690972	1					
ANR	2691008	PrimaryExpression	"""sub sp, sp, #%u"""		2690972	0					
ANR	2691009	Argument	offset		2690972	2					
ANR	2691010	Identifier	offset		2690972	0					
ANR	2691011	ElseStatement	else		2690972	0					
ANR	2691012	CompoundStatement		6:6:154:154	2690972	0					
ANR	2691013	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add sp, sp, #%u"" , offset )"	554:2:17766:17844	2690972	0	True				
ANR	2691014	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""add sp, sp, #%u"" , offset )"		2690972	0		=			
ANR	2691015	PtrMemberAccess	arminsn -> str_asm		2690972	0					
ANR	2691016	Identifier	arminsn		2690972	0					
ANR	2691017	Identifier	str_asm		2690972	1					
ANR	2691018	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""add sp, sp, #%u"" , offset )"		2690972	1					
ANR	2691019	Callee	r_str_appendf		2690972	0					
ANR	2691020	Identifier	r_str_appendf		2690972	0					
ANR	2691021	ArgumentList	arminsn -> str_asm		2690972	1					
ANR	2691022	Argument	arminsn -> str_asm		2690972	0					
ANR	2691023	PtrMemberAccess	arminsn -> str_asm		2690972	0					
ANR	2691024	Identifier	arminsn		2690972	0					
ANR	2691025	Identifier	str_asm		2690972	1					
ANR	2691026	Argument	"""add sp, sp, #%u"""		2690972	1					
ANR	2691027	PrimaryExpression	"""add sp, sp, #%u"""		2690972	0					
ANR	2691028	Argument	offset		2690972	2					
ANR	2691029	Identifier	offset		2690972	0					
ANR	2691030	ReturnStatement	return 0 ;	556:1:17850:17858	2690972	2	True				
ANR	2691031	PrimaryExpression	0		2690972	0					
ANR	2691032	ReturnType	static ut16		2690972	1					
ANR	2691033	Identifier	thumb_disasm_addsprel		2690972	2					
ANR	2691034	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2690972	3					
ANR	2691035	Parameter	struct winedbg_arm_insn * arminsn	548:34:17562:17593	2690972	0	True				
ANR	2691036	ParameterType	struct winedbg_arm_insn *		2690972	0					
ANR	2691037	Identifier	arminsn		2690972	1					
ANR	2691038	Parameter	ut16 inst	548:68:17596:17604	2690972	1	True				
ANR	2691039	ParameterType	ut16		2690972	0					
ANR	2691040	Identifier	inst		2690972	1					
ANR	2691041	CFGEntryNode	ENTRY		2690972		True				
ANR	2691042	CFGExitNode	EXIT		2690972		True				
ANR	2691043	Symbol	* arminsn		2690972						
ANR	2691044	Symbol	offset		2690972						
ANR	2691045	Symbol	inst		2690972						
ANR	2691046	Symbol	r_str_appendf		2690972						
ANR	2691047	Symbol	arminsn		2690972						
ANR	2691048	Symbol	arminsn -> str_asm		2690972						
ANR	2691049	Function	thumb_disasm_ldrimm	559:0:17863:18219							
ANR	2691050	FunctionDef	"thumb_disasm_ldrimm (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691049	0					
ANR	2691051	CompoundStatement		559:77:17940:18219	2691049	0					
ANR	2691052	IdentifierDeclStatement	ut16 offset = ( inst & 0x07c0 ) >> 6 ;	560:1:17943:17977	2691049	0	True				
ANR	2691053	IdentifierDecl	offset = ( inst & 0x07c0 ) >> 6		2691049	0					
ANR	2691054	IdentifierDeclType	ut16		2691049	0					
ANR	2691055	Identifier	offset		2691049	1					
ANR	2691056	AssignmentExpression	offset = ( inst & 0x07c0 ) >> 6		2691049	2		=			
ANR	2691057	Identifier	offset		2691049	0					
ANR	2691058	ShiftExpression	( inst & 0x07c0 ) >> 6		2691049	1		>>			
ANR	2691059	BitAndExpression	inst & 0x07c0		2691049	0		&			
ANR	2691060	Identifier	inst		2691049	0					
ANR	2691061	PrimaryExpression	0x07c0		2691049	1					
ANR	2691062	PrimaryExpression	6		2691049	1					
ANR	2691063	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x1000 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst & 0x1000 ) ? offset : ( offset << 2 ) )"	561:1:17980:18206	2691049	1	True				
ANR	2691064	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x1000 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst & 0x1000 ) ? offset : ( offset << 2 ) )"		2691049	0		=			
ANR	2691065	PtrMemberAccess	arminsn -> str_asm		2691049	0					
ANR	2691066	Identifier	arminsn		2691049	0					
ANR	2691067	Identifier	str_asm		2691049	1					
ANR	2691068	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x1000 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst & 0x1000 ) ? offset : ( offset << 2 ) )"		2691049	1					
ANR	2691069	Callee	r_str_appendf		2691049	0					
ANR	2691070	Identifier	r_str_appendf		2691049	0					
ANR	2691071	ArgumentList	arminsn -> str_asm		2691049	1					
ANR	2691072	Argument	arminsn -> str_asm		2691049	0					
ANR	2691073	PtrMemberAccess	arminsn -> str_asm		2691049	0					
ANR	2691074	Identifier	arminsn		2691049	0					
ANR	2691075	Identifier	str_asm		2691049	1					
ANR	2691076	Argument	"""%s%s %s, [%s, #%u]"""		2691049	1					
ANR	2691077	PrimaryExpression	"""%s%s %s, [%s, #%u]"""		2691049	0					
ANR	2691078	Argument	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		2691049	2					
ANR	2691079	ConditionalExpression	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		2691049	0					
ANR	2691080	Condition	inst & 0x0800		2691049	0					
ANR	2691081	BitAndExpression	inst & 0x0800		2691049	0		&			
ANR	2691082	Identifier	inst		2691049	0					
ANR	2691083	PrimaryExpression	0x0800		2691049	1					
ANR	2691084	PrimaryExpression	"""ldr"""		2691049	1					
ANR	2691085	PrimaryExpression	"""str"""		2691049	2					
ANR	2691086	Argument	"( inst & 0x1000 ) ? ""b"" : """""		2691049	3					
ANR	2691087	ConditionalExpression	"( inst & 0x1000 ) ? ""b"" : """""		2691049	0					
ANR	2691088	Condition	inst & 0x1000		2691049	0					
ANR	2691089	BitAndExpression	inst & 0x1000		2691049	0		&			
ANR	2691090	Identifier	inst		2691049	0					
ANR	2691091	PrimaryExpression	0x1000		2691049	1					
ANR	2691092	PrimaryExpression	"""b"""		2691049	1					
ANR	2691093	PrimaryExpression	""""""		2691049	2					
ANR	2691094	Argument	tbl_regs [ inst & 0x07 ]		2691049	4					
ANR	2691095	ArrayIndexing	tbl_regs [ inst & 0x07 ]		2691049	0					
ANR	2691096	Identifier	tbl_regs		2691049	0					
ANR	2691097	BitAndExpression	inst & 0x07		2691049	1		&			
ANR	2691098	Identifier	inst		2691049	0					
ANR	2691099	PrimaryExpression	0x07		2691049	1					
ANR	2691100	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691049	5					
ANR	2691101	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691049	0					
ANR	2691102	Identifier	tbl_regs		2691049	0					
ANR	2691103	BitAndExpression	( inst >> 3 ) & 0x07		2691049	1		&			
ANR	2691104	ShiftExpression	inst >> 3		2691049	0		>>			
ANR	2691105	Identifier	inst		2691049	0					
ANR	2691106	PrimaryExpression	3		2691049	1					
ANR	2691107	PrimaryExpression	0x07		2691049	1					
ANR	2691108	Argument	( inst & 0x1000 ) ? offset : ( offset << 2 )		2691049	6					
ANR	2691109	ConditionalExpression	( inst & 0x1000 ) ? offset : ( offset << 2 )		2691049	0					
ANR	2691110	Condition	inst & 0x1000		2691049	0					
ANR	2691111	BitAndExpression	inst & 0x1000		2691049	0		&			
ANR	2691112	Identifier	inst		2691049	0					
ANR	2691113	PrimaryExpression	0x1000		2691049	1					
ANR	2691114	Identifier	offset		2691049	1					
ANR	2691115	ShiftExpression	offset << 2		2691049	2		<<			
ANR	2691116	Identifier	offset		2691049	0					
ANR	2691117	PrimaryExpression	2		2691049	1					
ANR	2691118	ReturnStatement	return 0 ;	565:1:18209:18217	2691049	2	True				
ANR	2691119	PrimaryExpression	0		2691049	0					
ANR	2691120	ReturnType	static ut16		2691049	1					
ANR	2691121	Identifier	thumb_disasm_ldrimm		2691049	2					
ANR	2691122	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691049	3					
ANR	2691123	Parameter	struct winedbg_arm_insn * arminsn	559:32:17895:17926	2691049	0	True				
ANR	2691124	ParameterType	struct winedbg_arm_insn *		2691049	0					
ANR	2691125	Identifier	arminsn		2691049	1					
ANR	2691126	Parameter	ut16 inst	559:66:17929:17937	2691049	1	True				
ANR	2691127	ParameterType	ut16		2691049	0					
ANR	2691128	Identifier	inst		2691049	1					
ANR	2691129	CFGEntryNode	ENTRY		2691049		True				
ANR	2691130	CFGExitNode	EXIT		2691049		True				
ANR	2691131	Symbol	* arminsn		2691049						
ANR	2691132	Symbol	* inst		2691049						
ANR	2691133	Symbol	offset		2691049						
ANR	2691134	Symbol	* tbl_regs		2691049						
ANR	2691135	Symbol	tbl_regs		2691049						
ANR	2691136	Symbol	inst		2691049						
ANR	2691137	Symbol	r_str_appendf		2691049						
ANR	2691138	Symbol	arminsn		2691049						
ANR	2691139	Symbol	arminsn -> str_asm		2691049						
ANR	2691140	Function	thumb_disasm_ldrhimm	568:0:18222:18519							
ANR	2691141	FunctionDef	"thumb_disasm_ldrhimm (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691140	0					
ANR	2691142	CompoundStatement		568:78:18300:18519	2691140	0					
ANR	2691143	IdentifierDeclStatement	ut16 offset = ( inst & 0x07c0 ) >> 5 ;	569:1:18303:18337	2691140	0	True				
ANR	2691144	IdentifierDecl	offset = ( inst & 0x07c0 ) >> 5		2691140	0					
ANR	2691145	IdentifierDeclType	ut16		2691140	0					
ANR	2691146	Identifier	offset		2691140	1					
ANR	2691147	AssignmentExpression	offset = ( inst & 0x07c0 ) >> 5		2691140	2		=			
ANR	2691148	Identifier	offset		2691140	0					
ANR	2691149	ShiftExpression	( inst & 0x07c0 ) >> 5		2691140	1		>>			
ANR	2691150	BitAndExpression	inst & 0x07c0		2691140	0		&			
ANR	2691151	Identifier	inst		2691140	0					
ANR	2691152	PrimaryExpression	0x07c0		2691140	1					
ANR	2691153	PrimaryExpression	5		2691140	1					
ANR	2691154	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldrh"" : ""strh"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , offset )"	570:1:18340:18506	2691140	1	True				
ANR	2691155	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldrh"" : ""strh"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , offset )"		2691140	0		=			
ANR	2691156	PtrMemberAccess	arminsn -> str_asm		2691140	0					
ANR	2691157	Identifier	arminsn		2691140	0					
ANR	2691158	Identifier	str_asm		2691140	1					
ANR	2691159	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, #%u]"" , ( inst & 0x0800 ) ? ""ldrh"" : ""strh"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , offset )"		2691140	1					
ANR	2691160	Callee	r_str_appendf		2691140	0					
ANR	2691161	Identifier	r_str_appendf		2691140	0					
ANR	2691162	ArgumentList	arminsn -> str_asm		2691140	1					
ANR	2691163	Argument	arminsn -> str_asm		2691140	0					
ANR	2691164	PtrMemberAccess	arminsn -> str_asm		2691140	0					
ANR	2691165	Identifier	arminsn		2691140	0					
ANR	2691166	Identifier	str_asm		2691140	1					
ANR	2691167	Argument	"""%s %s, [%s, #%u]"""		2691140	1					
ANR	2691168	PrimaryExpression	"""%s %s, [%s, #%u]"""		2691140	0					
ANR	2691169	Argument	"( inst & 0x0800 ) ? ""ldrh"" : ""strh"""		2691140	2					
ANR	2691170	ConditionalExpression	"( inst & 0x0800 ) ? ""ldrh"" : ""strh"""		2691140	0					
ANR	2691171	Condition	inst & 0x0800		2691140	0					
ANR	2691172	BitAndExpression	inst & 0x0800		2691140	0		&			
ANR	2691173	Identifier	inst		2691140	0					
ANR	2691174	PrimaryExpression	0x0800		2691140	1					
ANR	2691175	PrimaryExpression	"""ldrh"""		2691140	1					
ANR	2691176	PrimaryExpression	"""strh"""		2691140	2					
ANR	2691177	Argument	tbl_regs [ inst & 0x07 ]		2691140	3					
ANR	2691178	ArrayIndexing	tbl_regs [ inst & 0x07 ]		2691140	0					
ANR	2691179	Identifier	tbl_regs		2691140	0					
ANR	2691180	BitAndExpression	inst & 0x07		2691140	1		&			
ANR	2691181	Identifier	inst		2691140	0					
ANR	2691182	PrimaryExpression	0x07		2691140	1					
ANR	2691183	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691140	4					
ANR	2691184	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691140	0					
ANR	2691185	Identifier	tbl_regs		2691140	0					
ANR	2691186	BitAndExpression	( inst >> 3 ) & 0x07		2691140	1		&			
ANR	2691187	ShiftExpression	inst >> 3		2691140	0		>>			
ANR	2691188	Identifier	inst		2691140	0					
ANR	2691189	PrimaryExpression	3		2691140	1					
ANR	2691190	PrimaryExpression	0x07		2691140	1					
ANR	2691191	Argument	offset		2691140	5					
ANR	2691192	Identifier	offset		2691140	0					
ANR	2691193	ReturnStatement	return 0 ;	572:1:18509:18517	2691140	2	True				
ANR	2691194	PrimaryExpression	0		2691140	0					
ANR	2691195	ReturnType	static ut16		2691140	1					
ANR	2691196	Identifier	thumb_disasm_ldrhimm		2691140	2					
ANR	2691197	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691140	3					
ANR	2691198	Parameter	struct winedbg_arm_insn * arminsn	568:33:18255:18286	2691140	0	True				
ANR	2691199	ParameterType	struct winedbg_arm_insn *		2691140	0					
ANR	2691200	Identifier	arminsn		2691140	1					
ANR	2691201	Parameter	ut16 inst	568:67:18289:18297	2691140	1	True				
ANR	2691202	ParameterType	ut16		2691140	0					
ANR	2691203	Identifier	inst		2691140	1					
ANR	2691204	CFGEntryNode	ENTRY		2691140		True				
ANR	2691205	CFGExitNode	EXIT		2691140		True				
ANR	2691206	Symbol	* arminsn		2691140						
ANR	2691207	Symbol	* inst		2691140						
ANR	2691208	Symbol	offset		2691140						
ANR	2691209	Symbol	tbl_regs		2691140						
ANR	2691210	Symbol	* tbl_regs		2691140						
ANR	2691211	Symbol	inst		2691140						
ANR	2691212	Symbol	r_str_appendf		2691140						
ANR	2691213	Symbol	arminsn		2691140						
ANR	2691214	Symbol	arminsn -> str_asm		2691140						
ANR	2691215	Function	thumb_disasm_ldrreg	575:0:18522:18832							
ANR	2691216	FunctionDef	"thumb_disasm_ldrreg (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691215	0					
ANR	2691217	CompoundStatement		575:77:18599:18832	2691215	0					
ANR	2691218	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, %s]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x0400 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"	576:1:18602:18819	2691215	0	True				
ANR	2691219	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, %s]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x0400 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		2691215	0		=			
ANR	2691220	PtrMemberAccess	arminsn -> str_asm		2691215	0					
ANR	2691221	Identifier	arminsn		2691215	0					
ANR	2691222	Identifier	str_asm		2691215	1					
ANR	2691223	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s %s, [%s, %s]"" , ( inst & 0x0800 ) ? ""ldr"" : ""str"" , ( inst & 0x0400 ) ? ""b"" : """" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		2691215	1					
ANR	2691224	Callee	r_str_appendf		2691215	0					
ANR	2691225	Identifier	r_str_appendf		2691215	0					
ANR	2691226	ArgumentList	arminsn -> str_asm		2691215	1					
ANR	2691227	Argument	arminsn -> str_asm		2691215	0					
ANR	2691228	PtrMemberAccess	arminsn -> str_asm		2691215	0					
ANR	2691229	Identifier	arminsn		2691215	0					
ANR	2691230	Identifier	str_asm		2691215	1					
ANR	2691231	Argument	"""%s%s %s, [%s, %s]"""		2691215	1					
ANR	2691232	PrimaryExpression	"""%s%s %s, [%s, %s]"""		2691215	0					
ANR	2691233	Argument	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		2691215	2					
ANR	2691234	ConditionalExpression	"( inst & 0x0800 ) ? ""ldr"" : ""str"""		2691215	0					
ANR	2691235	Condition	inst & 0x0800		2691215	0					
ANR	2691236	BitAndExpression	inst & 0x0800		2691215	0		&			
ANR	2691237	Identifier	inst		2691215	0					
ANR	2691238	PrimaryExpression	0x0800		2691215	1					
ANR	2691239	PrimaryExpression	"""ldr"""		2691215	1					
ANR	2691240	PrimaryExpression	"""str"""		2691215	2					
ANR	2691241	Argument	"( inst & 0x0400 ) ? ""b"" : """""		2691215	3					
ANR	2691242	ConditionalExpression	"( inst & 0x0400 ) ? ""b"" : """""		2691215	0					
ANR	2691243	Condition	inst & 0x0400		2691215	0					
ANR	2691244	BitAndExpression	inst & 0x0400		2691215	0		&			
ANR	2691245	Identifier	inst		2691215	0					
ANR	2691246	PrimaryExpression	0x0400		2691215	1					
ANR	2691247	PrimaryExpression	"""b"""		2691215	1					
ANR	2691248	PrimaryExpression	""""""		2691215	2					
ANR	2691249	Argument	tbl_regs [ inst & 0x07 ]		2691215	4					
ANR	2691250	ArrayIndexing	tbl_regs [ inst & 0x07 ]		2691215	0					
ANR	2691251	Identifier	tbl_regs		2691215	0					
ANR	2691252	BitAndExpression	inst & 0x07		2691215	1		&			
ANR	2691253	Identifier	inst		2691215	0					
ANR	2691254	PrimaryExpression	0x07		2691215	1					
ANR	2691255	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691215	5					
ANR	2691256	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691215	0					
ANR	2691257	Identifier	tbl_regs		2691215	0					
ANR	2691258	BitAndExpression	( inst >> 3 ) & 0x07		2691215	1		&			
ANR	2691259	ShiftExpression	inst >> 3		2691215	0		>>			
ANR	2691260	Identifier	inst		2691215	0					
ANR	2691261	PrimaryExpression	3		2691215	1					
ANR	2691262	PrimaryExpression	0x07		2691215	1					
ANR	2691263	Argument	tbl_regs [ ( inst >> 6 ) & 0x07 ]		2691215	6					
ANR	2691264	ArrayIndexing	tbl_regs [ ( inst >> 6 ) & 0x07 ]		2691215	0					
ANR	2691265	Identifier	tbl_regs		2691215	0					
ANR	2691266	BitAndExpression	( inst >> 6 ) & 0x07		2691215	1		&			
ANR	2691267	ShiftExpression	inst >> 6		2691215	0		>>			
ANR	2691268	Identifier	inst		2691215	0					
ANR	2691269	PrimaryExpression	6		2691215	1					
ANR	2691270	PrimaryExpression	0x07		2691215	1					
ANR	2691271	ReturnStatement	return 0 ;	580:1:18822:18830	2691215	1	True				
ANR	2691272	PrimaryExpression	0		2691215	0					
ANR	2691273	ReturnType	static ut16		2691215	1					
ANR	2691274	Identifier	thumb_disasm_ldrreg		2691215	2					
ANR	2691275	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691215	3					
ANR	2691276	Parameter	struct winedbg_arm_insn * arminsn	575:32:18554:18585	2691215	0	True				
ANR	2691277	ParameterType	struct winedbg_arm_insn *		2691215	0					
ANR	2691278	Identifier	arminsn		2691215	1					
ANR	2691279	Parameter	ut16 inst	575:66:18588:18596	2691215	1	True				
ANR	2691280	ParameterType	ut16		2691215	0					
ANR	2691281	Identifier	inst		2691215	1					
ANR	2691282	CFGEntryNode	ENTRY		2691215		True				
ANR	2691283	CFGExitNode	EXIT		2691215		True				
ANR	2691284	Symbol	* arminsn		2691215						
ANR	2691285	Symbol	* inst		2691215						
ANR	2691286	Symbol	tbl_regs		2691215						
ANR	2691287	Symbol	* tbl_regs		2691215						
ANR	2691288	Symbol	inst		2691215						
ANR	2691289	Symbol	r_str_appendf		2691215						
ANR	2691290	Symbol	arminsn		2691215						
ANR	2691291	Symbol	arminsn -> str_asm		2691215						
ANR	2691292	Function	thumb_disasm_ldrsreg	583:0:18835:19124							
ANR	2691293	FunctionDef	"thumb_disasm_ldrsreg (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691292	0					
ANR	2691294	CompoundStatement		583:78:18913:19124	2691292	0					
ANR	2691295	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, %s]"" , tbl_sregops_t [ ( inst >> 10 ) & 0x03 ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"	584:1:18916:19111	2691292	0	True				
ANR	2691296	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, %s]"" , tbl_sregops_t [ ( inst >> 10 ) & 0x03 ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		2691292	0		=			
ANR	2691297	PtrMemberAccess	arminsn -> str_asm		2691292	0					
ANR	2691298	Identifier	arminsn		2691292	0					
ANR	2691299	Identifier	str_asm		2691292	1					
ANR	2691300	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, [%s, %s]"" , tbl_sregops_t [ ( inst >> 10 ) & 0x03 ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		2691292	1					
ANR	2691301	Callee	r_str_appendf		2691292	0					
ANR	2691302	Identifier	r_str_appendf		2691292	0					
ANR	2691303	ArgumentList	arminsn -> str_asm		2691292	1					
ANR	2691304	Argument	arminsn -> str_asm		2691292	0					
ANR	2691305	PtrMemberAccess	arminsn -> str_asm		2691292	0					
ANR	2691306	Identifier	arminsn		2691292	0					
ANR	2691307	Identifier	str_asm		2691292	1					
ANR	2691308	Argument	"""%s %s, [%s, %s]"""		2691292	1					
ANR	2691309	PrimaryExpression	"""%s %s, [%s, %s]"""		2691292	0					
ANR	2691310	Argument	tbl_sregops_t [ ( inst >> 10 ) & 0x03 ]		2691292	2					
ANR	2691311	ArrayIndexing	tbl_sregops_t [ ( inst >> 10 ) & 0x03 ]		2691292	0					
ANR	2691312	Identifier	tbl_sregops_t		2691292	0					
ANR	2691313	BitAndExpression	( inst >> 10 ) & 0x03		2691292	1		&			
ANR	2691314	ShiftExpression	inst >> 10		2691292	0		>>			
ANR	2691315	Identifier	inst		2691292	0					
ANR	2691316	PrimaryExpression	10		2691292	1					
ANR	2691317	PrimaryExpression	0x03		2691292	1					
ANR	2691318	Argument	tbl_regs [ inst & 0x07 ]		2691292	3					
ANR	2691319	ArrayIndexing	tbl_regs [ inst & 0x07 ]		2691292	0					
ANR	2691320	Identifier	tbl_regs		2691292	0					
ANR	2691321	BitAndExpression	inst & 0x07		2691292	1		&			
ANR	2691322	Identifier	inst		2691292	0					
ANR	2691323	PrimaryExpression	0x07		2691292	1					
ANR	2691324	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691292	4					
ANR	2691325	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691292	0					
ANR	2691326	Identifier	tbl_regs		2691292	0					
ANR	2691327	BitAndExpression	( inst >> 3 ) & 0x07		2691292	1		&			
ANR	2691328	ShiftExpression	inst >> 3		2691292	0		>>			
ANR	2691329	Identifier	inst		2691292	0					
ANR	2691330	PrimaryExpression	3		2691292	1					
ANR	2691331	PrimaryExpression	0x07		2691292	1					
ANR	2691332	Argument	tbl_regs [ ( inst >> 6 ) & 0x07 ]		2691292	5					
ANR	2691333	ArrayIndexing	tbl_regs [ ( inst >> 6 ) & 0x07 ]		2691292	0					
ANR	2691334	Identifier	tbl_regs		2691292	0					
ANR	2691335	BitAndExpression	( inst >> 6 ) & 0x07		2691292	1		&			
ANR	2691336	ShiftExpression	inst >> 6		2691292	0		>>			
ANR	2691337	Identifier	inst		2691292	0					
ANR	2691338	PrimaryExpression	6		2691292	1					
ANR	2691339	PrimaryExpression	0x07		2691292	1					
ANR	2691340	ReturnStatement	return 0 ;	587:1:19114:19122	2691292	1	True				
ANR	2691341	PrimaryExpression	0		2691292	0					
ANR	2691342	ReturnType	static ut16		2691292	1					
ANR	2691343	Identifier	thumb_disasm_ldrsreg		2691292	2					
ANR	2691344	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691292	3					
ANR	2691345	Parameter	struct winedbg_arm_insn * arminsn	583:33:18868:18899	2691292	0	True				
ANR	2691346	ParameterType	struct winedbg_arm_insn *		2691292	0					
ANR	2691347	Identifier	arminsn		2691292	1					
ANR	2691348	Parameter	ut16 inst	583:67:18902:18910	2691292	1	True				
ANR	2691349	ParameterType	ut16		2691292	0					
ANR	2691350	Identifier	inst		2691292	1					
ANR	2691351	CFGEntryNode	ENTRY		2691292		True				
ANR	2691352	CFGExitNode	EXIT		2691292		True				
ANR	2691353	Symbol	* arminsn		2691292						
ANR	2691354	Symbol	* inst		2691292						
ANR	2691355	Symbol	tbl_regs		2691292						
ANR	2691356	Symbol	* tbl_regs		2691292						
ANR	2691357	Symbol	inst		2691292						
ANR	2691358	Symbol	r_str_appendf		2691292						
ANR	2691359	Symbol	arminsn		2691292						
ANR	2691360	Symbol	tbl_sregops_t		2691292						
ANR	2691361	Symbol	* tbl_sregops_t		2691292						
ANR	2691362	Symbol	arminsn -> str_asm		2691292						
ANR	2691363	Function	thumb_disasm_immop	590:0:19127:19380							
ANR	2691364	FunctionDef	"thumb_disasm_immop (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691363	0					
ANR	2691365	CompoundStatement		590:76:19203:19380	2691363	0					
ANR	2691366	IdentifierDeclStatement	ut16 op = ( inst >> 11 ) & 0x03 ;	591:1:19206:19235	2691363	0	True				
ANR	2691367	IdentifierDecl	op = ( inst >> 11 ) & 0x03		2691363	0					
ANR	2691368	IdentifierDeclType	ut16		2691363	0					
ANR	2691369	Identifier	op		2691363	1					
ANR	2691370	AssignmentExpression	op = ( inst >> 11 ) & 0x03		2691363	2		=			
ANR	2691371	Identifier	op		2691363	0					
ANR	2691372	BitAndExpression	( inst >> 11 ) & 0x03		2691363	1		&			
ANR	2691373	ShiftExpression	inst >> 11		2691363	0		>>			
ANR	2691374	Identifier	inst		2691363	0					
ANR	2691375	PrimaryExpression	11		2691363	1					
ANR	2691376	PrimaryExpression	0x03		2691363	1					
ANR	2691377	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, #%u"" , tbl_immops_t [ op ] , tbl_regs [ ( inst >> 8 ) & 0x07 ] , inst & 0xff )"	592:1:19238:19367	2691363	1	True				
ANR	2691378	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, #%u"" , tbl_immops_t [ op ] , tbl_regs [ ( inst >> 8 ) & 0x07 ] , inst & 0xff )"		2691363	0		=			
ANR	2691379	PtrMemberAccess	arminsn -> str_asm		2691363	0					
ANR	2691380	Identifier	arminsn		2691363	0					
ANR	2691381	Identifier	str_asm		2691363	1					
ANR	2691382	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, #%u"" , tbl_immops_t [ op ] , tbl_regs [ ( inst >> 8 ) & 0x07 ] , inst & 0xff )"		2691363	1					
ANR	2691383	Callee	r_str_appendf		2691363	0					
ANR	2691384	Identifier	r_str_appendf		2691363	0					
ANR	2691385	ArgumentList	arminsn -> str_asm		2691363	1					
ANR	2691386	Argument	arminsn -> str_asm		2691363	0					
ANR	2691387	PtrMemberAccess	arminsn -> str_asm		2691363	0					
ANR	2691388	Identifier	arminsn		2691363	0					
ANR	2691389	Identifier	str_asm		2691363	1					
ANR	2691390	Argument	"""%s %s, #%u"""		2691363	1					
ANR	2691391	PrimaryExpression	"""%s %s, #%u"""		2691363	0					
ANR	2691392	Argument	tbl_immops_t [ op ]		2691363	2					
ANR	2691393	ArrayIndexing	tbl_immops_t [ op ]		2691363	0					
ANR	2691394	Identifier	tbl_immops_t		2691363	0					
ANR	2691395	Identifier	op		2691363	1					
ANR	2691396	Argument	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2691363	3					
ANR	2691397	ArrayIndexing	tbl_regs [ ( inst >> 8 ) & 0x07 ]		2691363	0					
ANR	2691398	Identifier	tbl_regs		2691363	0					
ANR	2691399	BitAndExpression	( inst >> 8 ) & 0x07		2691363	1		&			
ANR	2691400	ShiftExpression	inst >> 8		2691363	0		>>			
ANR	2691401	Identifier	inst		2691363	0					
ANR	2691402	PrimaryExpression	8		2691363	1					
ANR	2691403	PrimaryExpression	0x07		2691363	1					
ANR	2691404	Argument	inst & 0xff		2691363	4					
ANR	2691405	BitAndExpression	inst & 0xff		2691363	0		&			
ANR	2691406	Identifier	inst		2691363	0					
ANR	2691407	PrimaryExpression	0xff		2691363	1					
ANR	2691408	ReturnStatement	return 0 ;	594:1:19370:19378	2691363	2	True				
ANR	2691409	PrimaryExpression	0		2691363	0					
ANR	2691410	ReturnType	static ut16		2691363	1					
ANR	2691411	Identifier	thumb_disasm_immop		2691363	2					
ANR	2691412	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691363	3					
ANR	2691413	Parameter	struct winedbg_arm_insn * arminsn	590:31:19158:19189	2691363	0	True				
ANR	2691414	ParameterType	struct winedbg_arm_insn *		2691363	0					
ANR	2691415	Identifier	arminsn		2691363	1					
ANR	2691416	Parameter	ut16 inst	590:65:19192:19200	2691363	1	True				
ANR	2691417	ParameterType	ut16		2691363	0					
ANR	2691418	Identifier	inst		2691363	1					
ANR	2691419	CFGEntryNode	ENTRY		2691363		True				
ANR	2691420	CFGExitNode	EXIT		2691363		True				
ANR	2691421	Symbol	tbl_immops_t		2691363						
ANR	2691422	Symbol	* arminsn		2691363						
ANR	2691423	Symbol	op		2691363						
ANR	2691424	Symbol	* inst		2691363						
ANR	2691425	Symbol	* op		2691363						
ANR	2691426	Symbol	tbl_regs		2691363						
ANR	2691427	Symbol	* tbl_regs		2691363						
ANR	2691428	Symbol	* tbl_immops_t		2691363						
ANR	2691429	Symbol	inst		2691363						
ANR	2691430	Symbol	r_str_appendf		2691363						
ANR	2691431	Symbol	arminsn		2691363						
ANR	2691432	Symbol	arminsn -> str_asm		2691363						
ANR	2691433	Function	thumb_disasm_addsub	597:0:19383:19894							
ANR	2691434	FunctionDef	"thumb_disasm_addsub (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691433	0					
ANR	2691435	CompoundStatement		597:77:19460:19894	2691433	0					
ANR	2691436	IdentifierDeclStatement	ut16 op = ( inst >> 9 ) & 0x01 ;	598:1:19463:19491	2691433	0	True				
ANR	2691437	IdentifierDecl	op = ( inst >> 9 ) & 0x01		2691433	0					
ANR	2691438	IdentifierDeclType	ut16		2691433	0					
ANR	2691439	Identifier	op		2691433	1					
ANR	2691440	AssignmentExpression	op = ( inst >> 9 ) & 0x01		2691433	2		=			
ANR	2691441	Identifier	op		2691433	0					
ANR	2691442	BitAndExpression	( inst >> 9 ) & 0x01		2691433	1		&			
ANR	2691443	ShiftExpression	inst >> 9		2691433	0		>>			
ANR	2691444	Identifier	inst		2691433	0					
ANR	2691445	PrimaryExpression	9		2691433	1					
ANR	2691446	PrimaryExpression	0x01		2691433	1					
ANR	2691447	IdentifierDeclStatement	ut16 immediate = ( inst >> 10 ) & 0x01 ;	599:1:19494:19530	2691433	1	True				
ANR	2691448	IdentifierDecl	immediate = ( inst >> 10 ) & 0x01		2691433	0					
ANR	2691449	IdentifierDeclType	ut16		2691433	0					
ANR	2691450	Identifier	immediate		2691433	1					
ANR	2691451	AssignmentExpression	immediate = ( inst >> 10 ) & 0x01		2691433	2		=			
ANR	2691452	Identifier	immediate		2691433	0					
ANR	2691453	BitAndExpression	( inst >> 10 ) & 0x01		2691433	1		&			
ANR	2691454	ShiftExpression	inst >> 10		2691433	0		>>			
ANR	2691455	Identifier	inst		2691433	0					
ANR	2691456	PrimaryExpression	10		2691433	1					
ANR	2691457	PrimaryExpression	0x01		2691433	1					
ANR	2691458	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, "" , op ? ""sub"" : ""add"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] )"	601:1:19534:19676	2691433	2	True				
ANR	2691459	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, "" , op ? ""sub"" : ""add"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] )"		2691433	0		=			
ANR	2691460	PtrMemberAccess	arminsn -> str_asm		2691433	0					
ANR	2691461	Identifier	arminsn		2691433	0					
ANR	2691462	Identifier	str_asm		2691433	1					
ANR	2691463	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, "" , op ? ""sub"" : ""add"" , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] )"		2691433	1					
ANR	2691464	Callee	r_str_appendf		2691433	0					
ANR	2691465	Identifier	r_str_appendf		2691433	0					
ANR	2691466	ArgumentList	arminsn -> str_asm		2691433	1					
ANR	2691467	Argument	arminsn -> str_asm		2691433	0					
ANR	2691468	PtrMemberAccess	arminsn -> str_asm		2691433	0					
ANR	2691469	Identifier	arminsn		2691433	0					
ANR	2691470	Identifier	str_asm		2691433	1					
ANR	2691471	Argument	"""%s %s, %s, """		2691433	1					
ANR	2691472	PrimaryExpression	"""%s %s, %s, """		2691433	0					
ANR	2691473	Argument	"op ? ""sub"" : ""add"""		2691433	2					
ANR	2691474	ConditionalExpression	"op ? ""sub"" : ""add"""		2691433	0					
ANR	2691475	Condition	op		2691433	0					
ANR	2691476	Identifier	op		2691433	0					
ANR	2691477	PrimaryExpression	"""sub"""		2691433	1					
ANR	2691478	PrimaryExpression	"""add"""		2691433	2					
ANR	2691479	Argument	tbl_regs [ inst & 0x07 ]		2691433	3					
ANR	2691480	ArrayIndexing	tbl_regs [ inst & 0x07 ]		2691433	0					
ANR	2691481	Identifier	tbl_regs		2691433	0					
ANR	2691482	BitAndExpression	inst & 0x07		2691433	1		&			
ANR	2691483	Identifier	inst		2691433	0					
ANR	2691484	PrimaryExpression	0x07		2691433	1					
ANR	2691485	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691433	4					
ANR	2691486	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691433	0					
ANR	2691487	Identifier	tbl_regs		2691433	0					
ANR	2691488	BitAndExpression	( inst >> 3 ) & 0x07		2691433	1		&			
ANR	2691489	ShiftExpression	inst >> 3		2691433	0		>>			
ANR	2691490	Identifier	inst		2691433	0					
ANR	2691491	PrimaryExpression	3		2691433	1					
ANR	2691492	PrimaryExpression	0x07		2691433	1					
ANR	2691493	IfStatement	if ( immediate )		2691433	3					
ANR	2691494	Condition	immediate	603:5:19683:19691	2691433	0	True				
ANR	2691495	Identifier	immediate		2691433	0					
ANR	2691496	CompoundStatement		7:16:233:233	2691433	1					
ANR	2691497	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%d"" , ( inst >> 6 ) & 0x07 )"	604:2:19698:19776	2691433	0	True				
ANR	2691498	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""#%d"" , ( inst >> 6 ) & 0x07 )"		2691433	0		=			
ANR	2691499	PtrMemberAccess	arminsn -> str_asm		2691433	0					
ANR	2691500	Identifier	arminsn		2691433	0					
ANR	2691501	Identifier	str_asm		2691433	1					
ANR	2691502	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""#%d"" , ( inst >> 6 ) & 0x07 )"		2691433	1					
ANR	2691503	Callee	r_str_appendf		2691433	0					
ANR	2691504	Identifier	r_str_appendf		2691433	0					
ANR	2691505	ArgumentList	arminsn -> str_asm		2691433	1					
ANR	2691506	Argument	arminsn -> str_asm		2691433	0					
ANR	2691507	PtrMemberAccess	arminsn -> str_asm		2691433	0					
ANR	2691508	Identifier	arminsn		2691433	0					
ANR	2691509	Identifier	str_asm		2691433	1					
ANR	2691510	Argument	"""#%d"""		2691433	1					
ANR	2691511	PrimaryExpression	"""#%d"""		2691433	0					
ANR	2691512	Argument	( inst >> 6 ) & 0x07		2691433	2					
ANR	2691513	BitAndExpression	( inst >> 6 ) & 0x07		2691433	0		&			
ANR	2691514	ShiftExpression	inst >> 6		2691433	0		>>			
ANR	2691515	Identifier	inst		2691433	0					
ANR	2691516	PrimaryExpression	6		2691433	1					
ANR	2691517	PrimaryExpression	0x07		2691433	1					
ANR	2691518	ElseStatement	else		2691433	0					
ANR	2691519	CompoundStatement		10:6:326:326	2691433	0					
ANR	2691520	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"	607:2:19791:19878	2691433	0	True				
ANR	2691521	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		2691433	0		=			
ANR	2691522	PtrMemberAccess	arminsn -> str_asm		2691433	0					
ANR	2691523	Identifier	arminsn		2691433	0					
ANR	2691524	Identifier	str_asm		2691433	1					
ANR	2691525	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s"" , tbl_regs [ ( inst >> 6 ) & 0x07 ] )"		2691433	1					
ANR	2691526	Callee	r_str_appendf		2691433	0					
ANR	2691527	Identifier	r_str_appendf		2691433	0					
ANR	2691528	ArgumentList	arminsn -> str_asm		2691433	1					
ANR	2691529	Argument	arminsn -> str_asm		2691433	0					
ANR	2691530	PtrMemberAccess	arminsn -> str_asm		2691433	0					
ANR	2691531	Identifier	arminsn		2691433	0					
ANR	2691532	Identifier	str_asm		2691433	1					
ANR	2691533	Argument	"""%s"""		2691433	1					
ANR	2691534	PrimaryExpression	"""%s"""		2691433	0					
ANR	2691535	Argument	tbl_regs [ ( inst >> 6 ) & 0x07 ]		2691433	2					
ANR	2691536	ArrayIndexing	tbl_regs [ ( inst >> 6 ) & 0x07 ]		2691433	0					
ANR	2691537	Identifier	tbl_regs		2691433	0					
ANR	2691538	BitAndExpression	( inst >> 6 ) & 0x07		2691433	1		&			
ANR	2691539	ShiftExpression	inst >> 6		2691433	0		>>			
ANR	2691540	Identifier	inst		2691433	0					
ANR	2691541	PrimaryExpression	6		2691433	1					
ANR	2691542	PrimaryExpression	0x07		2691433	1					
ANR	2691543	ReturnStatement	return 0 ;	609:1:19884:19892	2691433	4	True				
ANR	2691544	PrimaryExpression	0		2691433	0					
ANR	2691545	ReturnType	static ut16		2691433	1					
ANR	2691546	Identifier	thumb_disasm_addsub		2691433	2					
ANR	2691547	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691433	3					
ANR	2691548	Parameter	struct winedbg_arm_insn * arminsn	597:32:19415:19446	2691433	0	True				
ANR	2691549	ParameterType	struct winedbg_arm_insn *		2691433	0					
ANR	2691550	Identifier	arminsn		2691433	1					
ANR	2691551	Parameter	ut16 inst	597:66:19449:19457	2691433	1	True				
ANR	2691552	ParameterType	ut16		2691433	0					
ANR	2691553	Identifier	inst		2691433	1					
ANR	2691554	CFGEntryNode	ENTRY		2691433		True				
ANR	2691555	CFGExitNode	EXIT		2691433		True				
ANR	2691556	Symbol	* arminsn		2691433						
ANR	2691557	Symbol	op		2691433						
ANR	2691558	Symbol	* inst		2691433						
ANR	2691559	Symbol	immediate		2691433						
ANR	2691560	Symbol	tbl_regs		2691433						
ANR	2691561	Symbol	* tbl_regs		2691433						
ANR	2691562	Symbol	inst		2691433						
ANR	2691563	Symbol	r_str_appendf		2691433						
ANR	2691564	Symbol	arminsn		2691433						
ANR	2691565	Symbol	arminsn -> str_asm		2691433						
ANR	2691566	Function	thumb_disasm_movshift	612:0:19897:20185							
ANR	2691567	FunctionDef	"thumb_disasm_movshift (struct winedbg_arm_insn * arminsn , ut16 inst)"		2691566	0					
ANR	2691568	CompoundStatement		612:79:19976:20185	2691566	0					
ANR	2691569	IdentifierDeclStatement	ut16 op = ( inst >> 11 ) & 0x03 ;	613:1:19979:20008	2691566	0	True				
ANR	2691570	IdentifierDecl	op = ( inst >> 11 ) & 0x03		2691566	0					
ANR	2691571	IdentifierDeclType	ut16		2691566	0					
ANR	2691572	Identifier	op		2691566	1					
ANR	2691573	AssignmentExpression	op = ( inst >> 11 ) & 0x03		2691566	2		=			
ANR	2691574	Identifier	op		2691566	0					
ANR	2691575	BitAndExpression	( inst >> 11 ) & 0x03		2691566	1		&			
ANR	2691576	ShiftExpression	inst >> 11		2691566	0		>>			
ANR	2691577	Identifier	inst		2691566	0					
ANR	2691578	PrimaryExpression	11		2691566	1					
ANR	2691579	PrimaryExpression	0x03		2691566	1					
ANR	2691580	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, #%u"" , tbl_shifts [ op ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst >> 6 ) & 0x1f )"	614:1:20011:20172	2691566	1	True				
ANR	2691581	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, #%u"" , tbl_shifts [ op ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst >> 6 ) & 0x1f )"		2691566	0		=			
ANR	2691582	PtrMemberAccess	arminsn -> str_asm		2691566	0					
ANR	2691583	Identifier	arminsn		2691566	0					
ANR	2691584	Identifier	str_asm		2691566	1					
ANR	2691585	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s %s, %s, #%u"" , tbl_shifts [ op ] , tbl_regs [ inst & 0x07 ] , tbl_regs [ ( inst >> 3 ) & 0x07 ] , ( inst >> 6 ) & 0x1f )"		2691566	1					
ANR	2691586	Callee	r_str_appendf		2691566	0					
ANR	2691587	Identifier	r_str_appendf		2691566	0					
ANR	2691588	ArgumentList	arminsn -> str_asm		2691566	1					
ANR	2691589	Argument	arminsn -> str_asm		2691566	0					
ANR	2691590	PtrMemberAccess	arminsn -> str_asm		2691566	0					
ANR	2691591	Identifier	arminsn		2691566	0					
ANR	2691592	Identifier	str_asm		2691566	1					
ANR	2691593	Argument	"""%s %s, %s, #%u"""		2691566	1					
ANR	2691594	PrimaryExpression	"""%s %s, %s, #%u"""		2691566	0					
ANR	2691595	Argument	tbl_shifts [ op ]		2691566	2					
ANR	2691596	ArrayIndexing	tbl_shifts [ op ]		2691566	0					
ANR	2691597	Identifier	tbl_shifts		2691566	0					
ANR	2691598	Identifier	op		2691566	1					
ANR	2691599	Argument	tbl_regs [ inst & 0x07 ]		2691566	3					
ANR	2691600	ArrayIndexing	tbl_regs [ inst & 0x07 ]		2691566	0					
ANR	2691601	Identifier	tbl_regs		2691566	0					
ANR	2691602	BitAndExpression	inst & 0x07		2691566	1		&			
ANR	2691603	Identifier	inst		2691566	0					
ANR	2691604	PrimaryExpression	0x07		2691566	1					
ANR	2691605	Argument	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691566	4					
ANR	2691606	ArrayIndexing	tbl_regs [ ( inst >> 3 ) & 0x07 ]		2691566	0					
ANR	2691607	Identifier	tbl_regs		2691566	0					
ANR	2691608	BitAndExpression	( inst >> 3 ) & 0x07		2691566	1		&			
ANR	2691609	ShiftExpression	inst >> 3		2691566	0		>>			
ANR	2691610	Identifier	inst		2691566	0					
ANR	2691611	PrimaryExpression	3		2691566	1					
ANR	2691612	PrimaryExpression	0x07		2691566	1					
ANR	2691613	Argument	( inst >> 6 ) & 0x1f		2691566	5					
ANR	2691614	BitAndExpression	( inst >> 6 ) & 0x1f		2691566	0		&			
ANR	2691615	ShiftExpression	inst >> 6		2691566	0		>>			
ANR	2691616	Identifier	inst		2691566	0					
ANR	2691617	PrimaryExpression	6		2691566	1					
ANR	2691618	PrimaryExpression	0x1f		2691566	1					
ANR	2691619	ReturnStatement	return 0 ;	616:1:20175:20183	2691566	2	True				
ANR	2691620	PrimaryExpression	0		2691566	0					
ANR	2691621	ReturnType	static ut16		2691566	1					
ANR	2691622	Identifier	thumb_disasm_movshift		2691566	2					
ANR	2691623	ParameterList	"struct winedbg_arm_insn * arminsn , ut16 inst"		2691566	3					
ANR	2691624	Parameter	struct winedbg_arm_insn * arminsn	612:34:19931:19962	2691566	0	True				
ANR	2691625	ParameterType	struct winedbg_arm_insn *		2691566	0					
ANR	2691626	Identifier	arminsn		2691566	1					
ANR	2691627	Parameter	ut16 inst	612:68:19965:19973	2691566	1	True				
ANR	2691628	ParameterType	ut16		2691566	0					
ANR	2691629	Identifier	inst		2691566	1					
ANR	2691630	CFGEntryNode	ENTRY		2691566		True				
ANR	2691631	CFGExitNode	EXIT		2691566		True				
ANR	2691632	Symbol	* arminsn		2691566						
ANR	2691633	Symbol	op		2691566						
ANR	2691634	Symbol	tbl_shifts		2691566						
ANR	2691635	Symbol	* inst		2691566						
ANR	2691636	Symbol	* op		2691566						
ANR	2691637	Symbol	* tbl_shifts		2691566						
ANR	2691638	Symbol	tbl_regs		2691566						
ANR	2691639	Symbol	* tbl_regs		2691566						
ANR	2691640	Symbol	inst		2691566						
ANR	2691641	Symbol	r_str_appendf		2691566						
ANR	2691642	Symbol	arminsn		2691566						
ANR	2691643	Symbol	arminsn -> str_asm		2691566						
ANR	2691644	Function	thumb2_disasm_branchlinked	619:0:20188:20491							
ANR	2691645	FunctionDef	"thumb2_disasm_branchlinked (struct winedbg_arm_insn * arminsn , ut32 inst)"		2691644	0					
ANR	2691646	CompoundStatement		619:84:20272:20491	2691644	0					
ANR	2691647	IdentifierDeclStatement	ut32 offset = ( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4 ;	620:1:20275:20350	2691644	0	True				
ANR	2691648	IdentifierDecl	offset = ( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4		2691644	0					
ANR	2691649	IdentifierDeclType	ut32		2691644	0					
ANR	2691650	Identifier	offset		2691644	1					
ANR	2691651	AssignmentExpression	offset = ( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4		2691644	2		=			
ANR	2691652	Identifier	offset		2691644	0					
ANR	2691653	AdditiveExpression	( ( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 ) ) + 4		2691644	1		+			
ANR	2691654	InclusiveOrExpression	( ( inst & 0x07ff0000 ) >> 4 ) | ( ( inst & 0x000007ff ) << 1 )		2691644	0		|			
ANR	2691655	ShiftExpression	( inst & 0x07ff0000 ) >> 4		2691644	0		>>			
ANR	2691656	BitAndExpression	inst & 0x07ff0000		2691644	0		&			
ANR	2691657	Identifier	inst		2691644	0					
ANR	2691658	PrimaryExpression	0x07ff0000		2691644	1					
ANR	2691659	PrimaryExpression	4		2691644	1					
ANR	2691660	ShiftExpression	( inst & 0x000007ff ) << 1		2691644	1		<<			
ANR	2691661	BitAndExpression	inst & 0x000007ff		2691644	0		&			
ANR	2691662	Identifier	inst		2691644	0					
ANR	2691663	PrimaryExpression	0x000007ff		2691644	1					
ANR	2691664	PrimaryExpression	1		2691644	1					
ANR	2691665	PrimaryExpression	4		2691644	1					
ANR	2691666	Statement	arminsn	621:1:20353:20359	2691644	1	True				
ANR	2691667	Statement	->	621:8:20360:20361	2691644	2	True				
ANR	2691668	Statement	str_asm	621:10:20362:20368	2691644	3	True				
ANR	2691669	Statement	=	621:18:20370:20370	2691644	4	True				
ANR	2691670	Statement	r_str_appendf	621:20:20372:20384	2691644	5	True				
ANR	2691671	Statement	(	621:34:20386:20386	2691644	6	True				
ANR	2691672	Statement	arminsn	621:35:20387:20393	2691644	7	True				
ANR	2691673	Statement	->	621:42:20394:20395	2691644	8	True				
ANR	2691674	Statement	str_asm	621:44:20396:20402	2691644	9	True				
ANR	2691675	Statement	","	621:51:20403:20403	2691644	10	True				
ANR	2691676	Statement	"""bl 0x%"""	621:53:20405:20412	2691644	11	True				
ANR	2691677	Statement	PFMT64x	621:61:20413:20419	2691644	12	True				
ANR	2691678	Statement	","	621:68:20420:20420	2691644	13	True				
ANR	2691679	Statement	arminsn	621:70:20422:20428	2691644	14	True				
ANR	2691680	Statement	->	621:77:20429:20430	2691644	15	True				
ANR	2691681	Statement	pc	621:79:20431:20432	2691644	16	True				
ANR	2691682	Statement	+	621:81:20433:20433	2691644	17	True				
ANR	2691683	Statement	offset	621:82:20434:20439	2691644	18	True				
ANR	2691684	Statement	)	621:88:20440:20440	2691644	19	True				
ANR	2691685	ExpressionStatement		621:89:20441:20441	2691644	20	True				
ANR	2691686	ExpressionStatement	arminsn -> jmp = arminsn -> pc + offset	623:1:20445:20478	2691644	21	True				
ANR	2691687	AssignmentExpression	arminsn -> jmp = arminsn -> pc + offset		2691644	0		=			
ANR	2691688	PtrMemberAccess	arminsn -> jmp		2691644	0					
ANR	2691689	Identifier	arminsn		2691644	0					
ANR	2691690	Identifier	jmp		2691644	1					
ANR	2691691	AdditiveExpression	arminsn -> pc + offset		2691644	1		+			
ANR	2691692	PtrMemberAccess	arminsn -> pc		2691644	0					
ANR	2691693	Identifier	arminsn		2691644	0					
ANR	2691694	Identifier	pc		2691644	1					
ANR	2691695	Identifier	offset		2691644	1					
ANR	2691696	ReturnStatement	return 0 ;	624:1:20481:20489	2691644	22	True				
ANR	2691697	PrimaryExpression	0		2691644	0					
ANR	2691698	ReturnType	static ut32		2691644	1					
ANR	2691699	Identifier	thumb2_disasm_branchlinked		2691644	2					
ANR	2691700	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2691644	3					
ANR	2691701	Parameter	struct winedbg_arm_insn * arminsn	619:39:20227:20258	2691644	0	True				
ANR	2691702	ParameterType	struct winedbg_arm_insn *		2691644	0					
ANR	2691703	Identifier	arminsn		2691644	1					
ANR	2691704	Parameter	ut32 inst	619:73:20261:20269	2691644	1	True				
ANR	2691705	ParameterType	ut32		2691644	0					
ANR	2691706	Identifier	inst		2691644	1					
ANR	2691707	CFGEntryNode	ENTRY		2691644		True				
ANR	2691708	CFGExitNode	EXIT		2691644		True				
ANR	2691709	Symbol	arminsn -> pc		2691644						
ANR	2691710	Symbol	* arminsn		2691644						
ANR	2691711	Symbol	offset		2691644						
ANR	2691712	Symbol	inst		2691644						
ANR	2691713	Symbol	arminsn		2691644						
ANR	2691714	Symbol	arminsn -> jmp		2691644						
ANR	2691715	Function	thumb2_disasm_misc	627:0:20494:21432							
ANR	2691716	FunctionDef	"thumb2_disasm_misc (struct winedbg_arm_insn * arminsn , ut32 inst)"		2691715	0					
ANR	2691717	CompoundStatement		627:76:20570:21432	2691715	0					
ANR	2691718	IdentifierDeclStatement	ut16 op1 = ( inst >> 20 ) & 0x03 ;	628:1:20573:20603	2691715	0	True				
ANR	2691719	IdentifierDecl	op1 = ( inst >> 20 ) & 0x03		2691715	0					
ANR	2691720	IdentifierDeclType	ut16		2691715	0					
ANR	2691721	Identifier	op1		2691715	1					
ANR	2691722	AssignmentExpression	op1 = ( inst >> 20 ) & 0x03		2691715	2		=			
ANR	2691723	Identifier	op1		2691715	0					
ANR	2691724	BitAndExpression	( inst >> 20 ) & 0x03		2691715	1		&			
ANR	2691725	ShiftExpression	inst >> 20		2691715	0		>>			
ANR	2691726	Identifier	inst		2691715	0					
ANR	2691727	PrimaryExpression	20		2691715	1					
ANR	2691728	PrimaryExpression	0x03		2691715	1					
ANR	2691729	IdentifierDeclStatement	ut16 op2 = ( inst >> 4 ) & 0x03 ;	629:1:20606:20635	2691715	1	True				
ANR	2691730	IdentifierDecl	op2 = ( inst >> 4 ) & 0x03		2691715	0					
ANR	2691731	IdentifierDeclType	ut16		2691715	0					
ANR	2691732	Identifier	op2		2691715	1					
ANR	2691733	AssignmentExpression	op2 = ( inst >> 4 ) & 0x03		2691715	2		=			
ANR	2691734	Identifier	op2		2691715	0					
ANR	2691735	BitAndExpression	( inst >> 4 ) & 0x03		2691715	1		&			
ANR	2691736	ShiftExpression	inst >> 4		2691715	0		>>			
ANR	2691737	Identifier	inst		2691715	0					
ANR	2691738	PrimaryExpression	4		2691715	1					
ANR	2691739	PrimaryExpression	0x03		2691715	1					
ANR	2691740	IfStatement	"if ( get_nibble ( inst , 4 ) != get_nibble ( inst , 0 ) )"		2691715	2					
ANR	2691741	Condition	"get_nibble ( inst , 4 ) != get_nibble ( inst , 0 )"	631:5:20643:20686	2691715	0	True				
ANR	2691742	EqualityExpression	"get_nibble ( inst , 4 ) != get_nibble ( inst , 0 )"		2691715	0		!=			
ANR	2691743	CallExpression	"get_nibble ( inst , 4 )"		2691715	0					
ANR	2691744	Callee	get_nibble		2691715	0					
ANR	2691745	Identifier	get_nibble		2691715	0					
ANR	2691746	ArgumentList	inst		2691715	1					
ANR	2691747	Argument	inst		2691715	0					
ANR	2691748	Identifier	inst		2691715	0					
ANR	2691749	Argument	4		2691715	1					
ANR	2691750	PrimaryExpression	4		2691715	0					
ANR	2691751	CallExpression	"get_nibble ( inst , 0 )"		2691715	1					
ANR	2691752	Callee	get_nibble		2691715	0					
ANR	2691753	Identifier	get_nibble		2691715	0					
ANR	2691754	ArgumentList	inst		2691715	1					
ANR	2691755	Argument	inst		2691715	0					
ANR	2691756	Identifier	inst		2691715	0					
ANR	2691757	Argument	0		2691715	1					
ANR	2691758	PrimaryExpression	0		2691715	0					
ANR	2691759	CompoundStatement		5:51:118:118	2691715	1					
ANR	2691760	ReturnStatement	return inst ;	632:2:20693:20704	2691715	0	True				
ANR	2691761	Identifier	inst		2691715	0					
ANR	2691762	IfStatement	if ( op1 == 3 && op2 == 0 )		2691715	3					
ANR	2691763	Condition	op1 == 3 && op2 == 0	635:5:20715:20734	2691715	0	True				
ANR	2691764	AndExpression	op1 == 3 && op2 == 0		2691715	0		&&			
ANR	2691765	EqualityExpression	op1 == 3		2691715	0		==			
ANR	2691766	Identifier	op1		2691715	0					
ANR	2691767	PrimaryExpression	3		2691715	1					
ANR	2691768	EqualityExpression	op2 == 0		2691715	1		==			
ANR	2691769	Identifier	op2		2691715	0					
ANR	2691770	PrimaryExpression	0		2691715	1					
ANR	2691771	CompoundStatement		9:27:166:166	2691715	1					
ANR	2691772	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""clz %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	636:2:20741:20875	2691715	0	True				
ANR	2691773	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""clz %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2691715	0		=			
ANR	2691774	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691775	Identifier	arminsn		2691715	0					
ANR	2691776	Identifier	str_asm		2691715	1					
ANR	2691777	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""clz %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2691715	1					
ANR	2691778	Callee	r_str_appendf		2691715	0					
ANR	2691779	Identifier	r_str_appendf		2691715	0					
ANR	2691780	ArgumentList	arminsn -> str_asm		2691715	1					
ANR	2691781	Argument	arminsn -> str_asm		2691715	0					
ANR	2691782	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691783	Identifier	arminsn		2691715	0					
ANR	2691784	Identifier	str_asm		2691715	1					
ANR	2691785	Argument	"""clz %s, %s """		2691715	1					
ANR	2691786	PrimaryExpression	"""clz %s, %s """		2691715	0					
ANR	2691787	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691715	2					
ANR	2691788	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691715	0					
ANR	2691789	Identifier	tbl_regs		2691715	0					
ANR	2691790	CallExpression	"get_nibble ( inst , 2 )"		2691715	1					
ANR	2691791	Callee	get_nibble		2691715	0					
ANR	2691792	Identifier	get_nibble		2691715	0					
ANR	2691793	ArgumentList	inst		2691715	1					
ANR	2691794	Argument	inst		2691715	0					
ANR	2691795	Identifier	inst		2691715	0					
ANR	2691796	Argument	2		2691715	1					
ANR	2691797	PrimaryExpression	2		2691715	0					
ANR	2691798	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691715	3					
ANR	2691799	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691715	0					
ANR	2691800	Identifier	tbl_regs		2691715	0					
ANR	2691801	CallExpression	"get_nibble ( inst , 0 )"		2691715	1					
ANR	2691802	Callee	get_nibble		2691715	0					
ANR	2691803	Identifier	get_nibble		2691715	0					
ANR	2691804	ArgumentList	inst		2691715	1					
ANR	2691805	Argument	inst		2691715	0					
ANR	2691806	Identifier	inst		2691715	0					
ANR	2691807	Argument	0		2691715	1					
ANR	2691808	PrimaryExpression	0		2691715	0					
ANR	2691809	ReturnStatement	return 0 ;	638:2:20879:20887	2691715	1	True				
ANR	2691810	PrimaryExpression	0		2691715	0					
ANR	2691811	IfStatement	if ( op1 == 1 )		2691715	4					
ANR	2691812	Condition	op1 == 1	641:5:20898:20905	2691715	0	True				
ANR	2691813	EqualityExpression	op1 == 1		2691715	0		==			
ANR	2691814	Identifier	op1		2691715	0					
ANR	2691815	PrimaryExpression	1		2691715	1					
ANR	2691816	CompoundStatement		15:15:337:337	2691715	1					
ANR	2691817	SwitchStatement	switch ( op2 )		2691715	0					
ANR	2691818	Condition	op2	642:10:20920:20922	2691715	0	True				
ANR	2691819	Identifier	op2		2691715	0					
ANR	2691820	CompoundStatement		16:15:354:354	2691715	1					
ANR	2691821	Label	case 0 :	643:2:20929:20935	2691715	0	True				
ANR	2691822	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev "" )"	644:3:20940:20999	2691715	1	True				
ANR	2691823	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev "" )"		2691715	0		=			
ANR	2691824	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691825	Identifier	arminsn		2691715	0					
ANR	2691826	Identifier	str_asm		2691715	1					
ANR	2691827	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""rev "" )"		2691715	1					
ANR	2691828	Callee	r_str_appendf		2691715	0					
ANR	2691829	Identifier	r_str_appendf		2691715	0					
ANR	2691830	ArgumentList	arminsn -> str_asm		2691715	1					
ANR	2691831	Argument	arminsn -> str_asm		2691715	0					
ANR	2691832	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691833	Identifier	arminsn		2691715	0					
ANR	2691834	Identifier	str_asm		2691715	1					
ANR	2691835	Argument	"""rev """		2691715	1					
ANR	2691836	PrimaryExpression	"""rev """		2691715	0					
ANR	2691837	BreakStatement	break ;	645:3:21004:21009	2691715	2	True				
ANR	2691838	Label	case 1 :	646:2:21013:21019	2691715	3	True				
ANR	2691839	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev16 "" )"	647:3:21024:21085	2691715	4	True				
ANR	2691840	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rev16 "" )"		2691715	0		=			
ANR	2691841	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691842	Identifier	arminsn		2691715	0					
ANR	2691843	Identifier	str_asm		2691715	1					
ANR	2691844	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""rev16 "" )"		2691715	1					
ANR	2691845	Callee	r_str_appendf		2691715	0					
ANR	2691846	Identifier	r_str_appendf		2691715	0					
ANR	2691847	ArgumentList	arminsn -> str_asm		2691715	1					
ANR	2691848	Argument	arminsn -> str_asm		2691715	0					
ANR	2691849	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691850	Identifier	arminsn		2691715	0					
ANR	2691851	Identifier	str_asm		2691715	1					
ANR	2691852	Argument	"""rev16 """		2691715	1					
ANR	2691853	PrimaryExpression	"""rev16 """		2691715	0					
ANR	2691854	BreakStatement	break ;	648:3:21090:21095	2691715	5	True				
ANR	2691855	Label	case 2 :	649:2:21099:21105	2691715	6	True				
ANR	2691856	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rbit "" )"	650:3:21110:21170	2691715	7	True				
ANR	2691857	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""rbit "" )"		2691715	0		=			
ANR	2691858	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691859	Identifier	arminsn		2691715	0					
ANR	2691860	Identifier	str_asm		2691715	1					
ANR	2691861	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""rbit "" )"		2691715	1					
ANR	2691862	Callee	r_str_appendf		2691715	0					
ANR	2691863	Identifier	r_str_appendf		2691715	0					
ANR	2691864	ArgumentList	arminsn -> str_asm		2691715	1					
ANR	2691865	Argument	arminsn -> str_asm		2691715	0					
ANR	2691866	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691867	Identifier	arminsn		2691715	0					
ANR	2691868	Identifier	str_asm		2691715	1					
ANR	2691869	Argument	"""rbit """		2691715	1					
ANR	2691870	PrimaryExpression	"""rbit """		2691715	0					
ANR	2691871	BreakStatement	break ;	651:3:21175:21180	2691715	8	True				
ANR	2691872	Label	case 3 :	652:2:21184:21190	2691715	9	True				
ANR	2691873	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""revsh "" )"	653:3:21195:21256	2691715	10	True				
ANR	2691874	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""revsh "" )"		2691715	0		=			
ANR	2691875	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691876	Identifier	arminsn		2691715	0					
ANR	2691877	Identifier	str_asm		2691715	1					
ANR	2691878	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""revsh "" )"		2691715	1					
ANR	2691879	Callee	r_str_appendf		2691715	0					
ANR	2691880	Identifier	r_str_appendf		2691715	0					
ANR	2691881	ArgumentList	arminsn -> str_asm		2691715	1					
ANR	2691882	Argument	arminsn -> str_asm		2691715	0					
ANR	2691883	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691884	Identifier	arminsn		2691715	0					
ANR	2691885	Identifier	str_asm		2691715	1					
ANR	2691886	Argument	"""revsh """		2691715	1					
ANR	2691887	PrimaryExpression	"""revsh """		2691715	0					
ANR	2691888	BreakStatement	break ;	654:3:21261:21266	2691715	11	True				
ANR	2691889	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	656:2:21274:21400	2691715	1	True				
ANR	2691890	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2691715	0		=			
ANR	2691891	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691892	Identifier	arminsn		2691715	0					
ANR	2691893	Identifier	str_asm		2691715	1					
ANR	2691894	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2691715	1					
ANR	2691895	Callee	r_str_appendf		2691715	0					
ANR	2691896	Identifier	r_str_appendf		2691715	0					
ANR	2691897	ArgumentList	arminsn -> str_asm		2691715	1					
ANR	2691898	Argument	arminsn -> str_asm		2691715	0					
ANR	2691899	PtrMemberAccess	arminsn -> str_asm		2691715	0					
ANR	2691900	Identifier	arminsn		2691715	0					
ANR	2691901	Identifier	str_asm		2691715	1					
ANR	2691902	Argument	"""%s, %s """		2691715	1					
ANR	2691903	PrimaryExpression	"""%s, %s """		2691715	0					
ANR	2691904	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691715	2					
ANR	2691905	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691715	0					
ANR	2691906	Identifier	tbl_regs		2691715	0					
ANR	2691907	CallExpression	"get_nibble ( inst , 2 )"		2691715	1					
ANR	2691908	Callee	get_nibble		2691715	0					
ANR	2691909	Identifier	get_nibble		2691715	0					
ANR	2691910	ArgumentList	inst		2691715	1					
ANR	2691911	Argument	inst		2691715	0					
ANR	2691912	Identifier	inst		2691715	0					
ANR	2691913	Argument	2		2691715	1					
ANR	2691914	PrimaryExpression	2		2691715	0					
ANR	2691915	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691715	3					
ANR	2691916	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691715	0					
ANR	2691917	Identifier	tbl_regs		2691715	0					
ANR	2691918	CallExpression	"get_nibble ( inst , 0 )"		2691715	1					
ANR	2691919	Callee	get_nibble		2691715	0					
ANR	2691920	Identifier	get_nibble		2691715	0					
ANR	2691921	ArgumentList	inst		2691715	1					
ANR	2691922	Argument	inst		2691715	0					
ANR	2691923	Identifier	inst		2691715	0					
ANR	2691924	Argument	0		2691715	1					
ANR	2691925	PrimaryExpression	0		2691715	0					
ANR	2691926	ReturnStatement	return 0 ;	657:2:21404:21412	2691715	2	True				
ANR	2691927	PrimaryExpression	0		2691715	0					
ANR	2691928	ReturnStatement	return inst ;	660:1:21419:21430	2691715	5	True				
ANR	2691929	Identifier	inst		2691715	0					
ANR	2691930	ReturnType	static ut32		2691715	1					
ANR	2691931	Identifier	thumb2_disasm_misc		2691715	2					
ANR	2691932	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2691715	3					
ANR	2691933	Parameter	struct winedbg_arm_insn * arminsn	627:31:20525:20556	2691715	0	True				
ANR	2691934	ParameterType	struct winedbg_arm_insn *		2691715	0					
ANR	2691935	Identifier	arminsn		2691715	1					
ANR	2691936	Parameter	ut32 inst	627:65:20559:20567	2691715	1	True				
ANR	2691937	ParameterType	ut32		2691715	0					
ANR	2691938	Identifier	inst		2691715	1					
ANR	2691939	CFGEntryNode	ENTRY		2691715		True				
ANR	2691940	CFGExitNode	EXIT		2691715		True				
ANR	2691941	Symbol	op2		2691715						
ANR	2691942	Symbol	* arminsn		2691715						
ANR	2691943	Symbol	op1		2691715						
ANR	2691944	Symbol	get_nibble		2691715						
ANR	2691945	Symbol	tbl_regs		2691715						
ANR	2691946	Symbol	* tbl_regs		2691715						
ANR	2691947	Symbol	inst		2691715						
ANR	2691948	Symbol	r_str_appendf		2691715						
ANR	2691949	Symbol	* get_nibble		2691715						
ANR	2691950	Symbol	arminsn		2691715						
ANR	2691951	Symbol	arminsn -> str_asm		2691715						
ANR	2691952	Function	thumb2_disasm_mul	663:0:21435:22398							
ANR	2691953	FunctionDef	"thumb2_disasm_mul (struct winedbg_arm_insn * arminsn , ut32 inst)"		2691952	0					
ANR	2691954	CompoundStatement		663:75:21510:22398	2691952	0					
ANR	2691955	IdentifierDeclStatement	ut16 op1 = ( inst >> 20 ) & 0x07 ;	664:1:21513:21543	2691952	0	True				
ANR	2691956	IdentifierDecl	op1 = ( inst >> 20 ) & 0x07		2691952	0					
ANR	2691957	IdentifierDeclType	ut16		2691952	0					
ANR	2691958	Identifier	op1		2691952	1					
ANR	2691959	AssignmentExpression	op1 = ( inst >> 20 ) & 0x07		2691952	2		=			
ANR	2691960	Identifier	op1		2691952	0					
ANR	2691961	BitAndExpression	( inst >> 20 ) & 0x07		2691952	1		&			
ANR	2691962	ShiftExpression	inst >> 20		2691952	0		>>			
ANR	2691963	Identifier	inst		2691952	0					
ANR	2691964	PrimaryExpression	20		2691952	1					
ANR	2691965	PrimaryExpression	0x07		2691952	1					
ANR	2691966	IdentifierDeclStatement	ut16 op2 = ( inst >> 4 ) & 0x03 ;	665:1:21546:21575	2691952	1	True				
ANR	2691967	IdentifierDecl	op2 = ( inst >> 4 ) & 0x03		2691952	0					
ANR	2691968	IdentifierDeclType	ut16		2691952	0					
ANR	2691969	Identifier	op2		2691952	1					
ANR	2691970	AssignmentExpression	op2 = ( inst >> 4 ) & 0x03		2691952	2		=			
ANR	2691971	Identifier	op2		2691952	0					
ANR	2691972	BitAndExpression	( inst >> 4 ) & 0x03		2691952	1		&			
ANR	2691973	ShiftExpression	inst >> 4		2691952	0		>>			
ANR	2691974	Identifier	inst		2691952	0					
ANR	2691975	PrimaryExpression	4		2691952	1					
ANR	2691976	PrimaryExpression	0x03		2691952	1					
ANR	2691977	IfStatement	if ( op1 )		2691952	2					
ANR	2691978	Condition	op1	667:5:21583:21585	2691952	0	True				
ANR	2691979	Identifier	op1		2691952	0					
ANR	2691980	CompoundStatement		5:10:77:77	2691952	1					
ANR	2691981	ReturnStatement	return inst ;	668:2:21592:21603	2691952	0	True				
ANR	2691982	Identifier	inst		2691952	0					
ANR	2691983	IfStatement	"if ( op2 == 0 && get_nibble ( inst , 3 ) != 0xf )"		2691952	3					
ANR	2691984	Condition	"op2 == 0 && get_nibble ( inst , 3 ) != 0xf"	671:5:21614:21652	2691952	0	True				
ANR	2691985	AndExpression	"op2 == 0 && get_nibble ( inst , 3 ) != 0xf"		2691952	0		&&			
ANR	2691986	EqualityExpression	op2 == 0		2691952	0		==			
ANR	2691987	Identifier	op2		2691952	0					
ANR	2691988	PrimaryExpression	0		2691952	1					
ANR	2691989	EqualityExpression	"get_nibble ( inst , 3 ) != 0xf"		2691952	1		!=			
ANR	2691990	CallExpression	"get_nibble ( inst , 3 )"		2691952	0					
ANR	2691991	Callee	get_nibble		2691952	0					
ANR	2691992	Identifier	get_nibble		2691952	0					
ANR	2691993	ArgumentList	inst		2691952	1					
ANR	2691994	Argument	inst		2691952	0					
ANR	2691995	Identifier	inst		2691952	0					
ANR	2691996	Argument	3		2691952	1					
ANR	2691997	PrimaryExpression	3		2691952	0					
ANR	2691998	PrimaryExpression	0xf		2691952	1					
ANR	2691999	CompoundStatement		9:46:144:144	2691952	1					
ANR	2692000	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"	672:2:21659:21873	2691952	0	True				
ANR	2692001	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mla %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2691952	0		=			
ANR	2692002	PtrMemberAccess	arminsn -> str_asm		2691952	0					
ANR	2692003	Identifier	arminsn		2691952	0					
ANR	2692004	Identifier	str_asm		2691952	1					
ANR	2692005	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mla %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2691952	1					
ANR	2692006	Callee	r_str_appendf		2691952	0					
ANR	2692007	Identifier	r_str_appendf		2691952	0					
ANR	2692008	ArgumentList	arminsn -> str_asm		2691952	1					
ANR	2692009	Argument	arminsn -> str_asm		2691952	0					
ANR	2692010	PtrMemberAccess	arminsn -> str_asm		2691952	0					
ANR	2692011	Identifier	arminsn		2691952	0					
ANR	2692012	Identifier	str_asm		2691952	1					
ANR	2692013	Argument	"""mla %s, %s, %s, %s """		2691952	1					
ANR	2692014	PrimaryExpression	"""mla %s, %s, %s, %s """		2691952	0					
ANR	2692015	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691952	2					
ANR	2692016	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691952	0					
ANR	2692017	Identifier	tbl_regs		2691952	0					
ANR	2692018	CallExpression	"get_nibble ( inst , 2 )"		2691952	1					
ANR	2692019	Callee	get_nibble		2691952	0					
ANR	2692020	Identifier	get_nibble		2691952	0					
ANR	2692021	ArgumentList	inst		2691952	1					
ANR	2692022	Argument	inst		2691952	0					
ANR	2692023	Identifier	inst		2691952	0					
ANR	2692024	Argument	2		2691952	1					
ANR	2692025	PrimaryExpression	2		2691952	0					
ANR	2692026	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2691952	3					
ANR	2692027	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2691952	0					
ANR	2692028	Identifier	tbl_regs		2691952	0					
ANR	2692029	CallExpression	"get_nibble ( inst , 4 )"		2691952	1					
ANR	2692030	Callee	get_nibble		2691952	0					
ANR	2692031	Identifier	get_nibble		2691952	0					
ANR	2692032	ArgumentList	inst		2691952	1					
ANR	2692033	Argument	inst		2691952	0					
ANR	2692034	Identifier	inst		2691952	0					
ANR	2692035	Argument	4		2691952	1					
ANR	2692036	PrimaryExpression	4		2691952	0					
ANR	2692037	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691952	4					
ANR	2692038	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691952	0					
ANR	2692039	Identifier	tbl_regs		2691952	0					
ANR	2692040	CallExpression	"get_nibble ( inst , 0 )"		2691952	1					
ANR	2692041	Callee	get_nibble		2691952	0					
ANR	2692042	Identifier	get_nibble		2691952	0					
ANR	2692043	ArgumentList	inst		2691952	1					
ANR	2692044	Argument	inst		2691952	0					
ANR	2692045	Identifier	inst		2691952	0					
ANR	2692046	Argument	0		2691952	1					
ANR	2692047	PrimaryExpression	0		2691952	0					
ANR	2692048	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2691952	5					
ANR	2692049	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2691952	0					
ANR	2692050	Identifier	tbl_regs		2691952	0					
ANR	2692051	CallExpression	"get_nibble ( inst , 3 )"		2691952	1					
ANR	2692052	Callee	get_nibble		2691952	0					
ANR	2692053	Identifier	get_nibble		2691952	0					
ANR	2692054	ArgumentList	inst		2691952	1					
ANR	2692055	Argument	inst		2691952	0					
ANR	2692056	Identifier	inst		2691952	0					
ANR	2692057	Argument	3		2691952	1					
ANR	2692058	PrimaryExpression	3		2691952	0					
ANR	2692059	ReturnStatement	return 0 ;	676:2:21877:21885	2691952	1	True				
ANR	2692060	PrimaryExpression	0		2691952	0					
ANR	2692061	IfStatement	"if ( op2 == 0 && get_nibble ( inst , 3 ) == 0xf )"		2691952	4					
ANR	2692062	Condition	"op2 == 0 && get_nibble ( inst , 3 ) == 0xf"	679:5:21896:21934	2691952	0	True				
ANR	2692063	AndExpression	"op2 == 0 && get_nibble ( inst , 3 ) == 0xf"		2691952	0		&&			
ANR	2692064	EqualityExpression	op2 == 0		2691952	0		==			
ANR	2692065	Identifier	op2		2691952	0					
ANR	2692066	PrimaryExpression	0		2691952	1					
ANR	2692067	EqualityExpression	"get_nibble ( inst , 3 ) == 0xf"		2691952	1		==			
ANR	2692068	CallExpression	"get_nibble ( inst , 3 )"		2691952	0					
ANR	2692069	Callee	get_nibble		2691952	0					
ANR	2692070	Identifier	get_nibble		2691952	0					
ANR	2692071	ArgumentList	inst		2691952	1					
ANR	2692072	Argument	inst		2691952	0					
ANR	2692073	Identifier	inst		2691952	0					
ANR	2692074	Argument	3		2691952	1					
ANR	2692075	PrimaryExpression	3		2691952	0					
ANR	2692076	PrimaryExpression	0xf		2691952	1					
ANR	2692077	CompoundStatement		17:46:426:426	2691952	1					
ANR	2692078	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	680:2:21941:22115	2691952	0	True				
ANR	2692079	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mul %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2691952	0		=			
ANR	2692080	PtrMemberAccess	arminsn -> str_asm		2691952	0					
ANR	2692081	Identifier	arminsn		2691952	0					
ANR	2692082	Identifier	str_asm		2691952	1					
ANR	2692083	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mul %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2691952	1					
ANR	2692084	Callee	r_str_appendf		2691952	0					
ANR	2692085	Identifier	r_str_appendf		2691952	0					
ANR	2692086	ArgumentList	arminsn -> str_asm		2691952	1					
ANR	2692087	Argument	arminsn -> str_asm		2691952	0					
ANR	2692088	PtrMemberAccess	arminsn -> str_asm		2691952	0					
ANR	2692089	Identifier	arminsn		2691952	0					
ANR	2692090	Identifier	str_asm		2691952	1					
ANR	2692091	Argument	"""mul %s, %s, %s """		2691952	1					
ANR	2692092	PrimaryExpression	"""mul %s, %s, %s """		2691952	0					
ANR	2692093	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691952	2					
ANR	2692094	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691952	0					
ANR	2692095	Identifier	tbl_regs		2691952	0					
ANR	2692096	CallExpression	"get_nibble ( inst , 2 )"		2691952	1					
ANR	2692097	Callee	get_nibble		2691952	0					
ANR	2692098	Identifier	get_nibble		2691952	0					
ANR	2692099	ArgumentList	inst		2691952	1					
ANR	2692100	Argument	inst		2691952	0					
ANR	2692101	Identifier	inst		2691952	0					
ANR	2692102	Argument	2		2691952	1					
ANR	2692103	PrimaryExpression	2		2691952	0					
ANR	2692104	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2691952	3					
ANR	2692105	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2691952	0					
ANR	2692106	Identifier	tbl_regs		2691952	0					
ANR	2692107	CallExpression	"get_nibble ( inst , 4 )"		2691952	1					
ANR	2692108	Callee	get_nibble		2691952	0					
ANR	2692109	Identifier	get_nibble		2691952	0					
ANR	2692110	ArgumentList	inst		2691952	1					
ANR	2692111	Argument	inst		2691952	0					
ANR	2692112	Identifier	inst		2691952	0					
ANR	2692113	Argument	4		2691952	1					
ANR	2692114	PrimaryExpression	4		2691952	0					
ANR	2692115	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691952	4					
ANR	2692116	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691952	0					
ANR	2692117	Identifier	tbl_regs		2691952	0					
ANR	2692118	CallExpression	"get_nibble ( inst , 0 )"		2691952	1					
ANR	2692119	Callee	get_nibble		2691952	0					
ANR	2692120	Identifier	get_nibble		2691952	0					
ANR	2692121	ArgumentList	inst		2691952	1					
ANR	2692122	Argument	inst		2691952	0					
ANR	2692123	Identifier	inst		2691952	0					
ANR	2692124	Argument	0		2691952	1					
ANR	2692125	PrimaryExpression	0		2691952	0					
ANR	2692126	ReturnStatement	return 0 ;	683:2:22119:22127	2691952	1	True				
ANR	2692127	PrimaryExpression	0		2691952	0					
ANR	2692128	IfStatement	if ( op2 == 1 )		2691952	5					
ANR	2692129	Condition	op2 == 1	686:5:22138:22145	2691952	0	True				
ANR	2692130	EqualityExpression	op2 == 1		2691952	0		==			
ANR	2692131	Identifier	op2		2691952	0					
ANR	2692132	PrimaryExpression	1		2691952	1					
ANR	2692133	CompoundStatement		24:15:637:637	2691952	1					
ANR	2692134	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mls %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"	687:2:22152:22366	2691952	0	True				
ANR	2692135	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""mls %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2691952	0		=			
ANR	2692136	PtrMemberAccess	arminsn -> str_asm		2691952	0					
ANR	2692137	Identifier	arminsn		2691952	0					
ANR	2692138	Identifier	str_asm		2691952	1					
ANR	2692139	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""mls %s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] , tbl_regs [ get_nibble ( inst , 3 ) ] )"		2691952	1					
ANR	2692140	Callee	r_str_appendf		2691952	0					
ANR	2692141	Identifier	r_str_appendf		2691952	0					
ANR	2692142	ArgumentList	arminsn -> str_asm		2691952	1					
ANR	2692143	Argument	arminsn -> str_asm		2691952	0					
ANR	2692144	PtrMemberAccess	arminsn -> str_asm		2691952	0					
ANR	2692145	Identifier	arminsn		2691952	0					
ANR	2692146	Identifier	str_asm		2691952	1					
ANR	2692147	Argument	"""mls %s, %s, %s, %s """		2691952	1					
ANR	2692148	PrimaryExpression	"""mls %s, %s, %s, %s """		2691952	0					
ANR	2692149	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691952	2					
ANR	2692150	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2691952	0					
ANR	2692151	Identifier	tbl_regs		2691952	0					
ANR	2692152	CallExpression	"get_nibble ( inst , 2 )"		2691952	1					
ANR	2692153	Callee	get_nibble		2691952	0					
ANR	2692154	Identifier	get_nibble		2691952	0					
ANR	2692155	ArgumentList	inst		2691952	1					
ANR	2692156	Argument	inst		2691952	0					
ANR	2692157	Identifier	inst		2691952	0					
ANR	2692158	Argument	2		2691952	1					
ANR	2692159	PrimaryExpression	2		2691952	0					
ANR	2692160	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2691952	3					
ANR	2692161	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2691952	0					
ANR	2692162	Identifier	tbl_regs		2691952	0					
ANR	2692163	CallExpression	"get_nibble ( inst , 4 )"		2691952	1					
ANR	2692164	Callee	get_nibble		2691952	0					
ANR	2692165	Identifier	get_nibble		2691952	0					
ANR	2692166	ArgumentList	inst		2691952	1					
ANR	2692167	Argument	inst		2691952	0					
ANR	2692168	Identifier	inst		2691952	0					
ANR	2692169	Argument	4		2691952	1					
ANR	2692170	PrimaryExpression	4		2691952	0					
ANR	2692171	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691952	4					
ANR	2692172	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2691952	0					
ANR	2692173	Identifier	tbl_regs		2691952	0					
ANR	2692174	CallExpression	"get_nibble ( inst , 0 )"		2691952	1					
ANR	2692175	Callee	get_nibble		2691952	0					
ANR	2692176	Identifier	get_nibble		2691952	0					
ANR	2692177	ArgumentList	inst		2691952	1					
ANR	2692178	Argument	inst		2691952	0					
ANR	2692179	Identifier	inst		2691952	0					
ANR	2692180	Argument	0		2691952	1					
ANR	2692181	PrimaryExpression	0		2691952	0					
ANR	2692182	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2691952	5					
ANR	2692183	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2691952	0					
ANR	2692184	Identifier	tbl_regs		2691952	0					
ANR	2692185	CallExpression	"get_nibble ( inst , 3 )"		2691952	1					
ANR	2692186	Callee	get_nibble		2691952	0					
ANR	2692187	Identifier	get_nibble		2691952	0					
ANR	2692188	ArgumentList	inst		2691952	1					
ANR	2692189	Argument	inst		2691952	0					
ANR	2692190	Identifier	inst		2691952	0					
ANR	2692191	Argument	3		2691952	1					
ANR	2692192	PrimaryExpression	3		2691952	0					
ANR	2692193	ReturnStatement	return 0 ;	691:2:22370:22378	2691952	1	True				
ANR	2692194	PrimaryExpression	0		2691952	0					
ANR	2692195	ReturnStatement	return inst ;	694:1:22385:22396	2691952	6	True				
ANR	2692196	Identifier	inst		2691952	0					
ANR	2692197	ReturnType	static ut32		2691952	1					
ANR	2692198	Identifier	thumb2_disasm_mul		2691952	2					
ANR	2692199	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2691952	3					
ANR	2692200	Parameter	struct winedbg_arm_insn * arminsn	663:30:21465:21496	2691952	0	True				
ANR	2692201	ParameterType	struct winedbg_arm_insn *		2691952	0					
ANR	2692202	Identifier	arminsn		2691952	1					
ANR	2692203	Parameter	ut32 inst	663:64:21499:21507	2691952	1	True				
ANR	2692204	ParameterType	ut32		2691952	0					
ANR	2692205	Identifier	inst		2691952	1					
ANR	2692206	CFGEntryNode	ENTRY		2691952		True				
ANR	2692207	CFGExitNode	EXIT		2691952		True				
ANR	2692208	Symbol	op2		2691952						
ANR	2692209	Symbol	* arminsn		2691952						
ANR	2692210	Symbol	op1		2691952						
ANR	2692211	Symbol	get_nibble		2691952						
ANR	2692212	Symbol	tbl_regs		2691952						
ANR	2692213	Symbol	* tbl_regs		2691952						
ANR	2692214	Symbol	inst		2691952						
ANR	2692215	Symbol	r_str_appendf		2691952						
ANR	2692216	Symbol	* get_nibble		2691952						
ANR	2692217	Symbol	arminsn		2691952						
ANR	2692218	Symbol	arminsn -> str_asm		2691952						
ANR	2692219	Function	thumb2_disasm_longmuldiv	697:0:22401:23626							
ANR	2692220	FunctionDef	"thumb2_disasm_longmuldiv (struct winedbg_arm_insn * arminsn , ut32 inst)"		2692219	0					
ANR	2692221	CompoundStatement		697:82:22483:23626	2692219	0					
ANR	2692222	IdentifierDeclStatement	ut16 op1 = ( inst >> 20 ) & 0x07 ;	698:1:22486:22516	2692219	0	True				
ANR	2692223	IdentifierDecl	op1 = ( inst >> 20 ) & 0x07		2692219	0					
ANR	2692224	IdentifierDeclType	ut16		2692219	0					
ANR	2692225	Identifier	op1		2692219	1					
ANR	2692226	AssignmentExpression	op1 = ( inst >> 20 ) & 0x07		2692219	2		=			
ANR	2692227	Identifier	op1		2692219	0					
ANR	2692228	BitAndExpression	( inst >> 20 ) & 0x07		2692219	1		&			
ANR	2692229	ShiftExpression	inst >> 20		2692219	0		>>			
ANR	2692230	Identifier	inst		2692219	0					
ANR	2692231	PrimaryExpression	20		2692219	1					
ANR	2692232	PrimaryExpression	0x07		2692219	1					
ANR	2692233	IdentifierDeclStatement	ut16 op2 = ( inst >> 4 ) & 0x0f ;	699:1:22519:22548	2692219	1	True				
ANR	2692234	IdentifierDecl	op2 = ( inst >> 4 ) & 0x0f		2692219	0					
ANR	2692235	IdentifierDeclType	ut16		2692219	0					
ANR	2692236	Identifier	op2		2692219	1					
ANR	2692237	AssignmentExpression	op2 = ( inst >> 4 ) & 0x0f		2692219	2		=			
ANR	2692238	Identifier	op2		2692219	0					
ANR	2692239	BitAndExpression	( inst >> 4 ) & 0x0f		2692219	1		&			
ANR	2692240	ShiftExpression	inst >> 4		2692219	0		>>			
ANR	2692241	Identifier	inst		2692219	0					
ANR	2692242	PrimaryExpression	4		2692219	1					
ANR	2692243	PrimaryExpression	0x0f		2692219	1					
ANR	2692244	IfStatement	if ( op2 == 0 )		2692219	2					
ANR	2692245	Condition	op2 == 0	701:5:22556:22563	2692219	0	True				
ANR	2692246	EqualityExpression	op2 == 0		2692219	0		==			
ANR	2692247	Identifier	op2		2692219	0					
ANR	2692248	PrimaryExpression	0		2692219	1					
ANR	2692249	CompoundStatement		5:15:82:82	2692219	1					
ANR	2692250	SwitchStatement	switch ( op1 )		2692219	0					
ANR	2692251	Condition	op1	702:10:22578:22580	2692219	0	True				
ANR	2692252	Identifier	op1		2692219	0					
ANR	2692253	CompoundStatement		6:15:99:99	2692219	1					
ANR	2692254	Label	case 0 :	703:2:22587:22593	2692219	0	True				
ANR	2692255	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smull "" )"	704:3:22598:22659	2692219	1	True				
ANR	2692256	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smull "" )"		2692219	0		=			
ANR	2692257	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692258	Identifier	arminsn		2692219	0					
ANR	2692259	Identifier	str_asm		2692219	1					
ANR	2692260	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""smull "" )"		2692219	1					
ANR	2692261	Callee	r_str_appendf		2692219	0					
ANR	2692262	Identifier	r_str_appendf		2692219	0					
ANR	2692263	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692264	Argument	arminsn -> str_asm		2692219	0					
ANR	2692265	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692266	Identifier	arminsn		2692219	0					
ANR	2692267	Identifier	str_asm		2692219	1					
ANR	2692268	Argument	"""smull """		2692219	1					
ANR	2692269	PrimaryExpression	"""smull """		2692219	0					
ANR	2692270	BreakStatement	break ;	705:3:22664:22669	2692219	2	True				
ANR	2692271	Label	case 2 :	706:2:22673:22679	2692219	3	True				
ANR	2692272	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umull "" )"	707:3:22684:22745	2692219	4	True				
ANR	2692273	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umull "" )"		2692219	0		=			
ANR	2692274	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692275	Identifier	arminsn		2692219	0					
ANR	2692276	Identifier	str_asm		2692219	1					
ANR	2692277	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""umull "" )"		2692219	1					
ANR	2692278	Callee	r_str_appendf		2692219	0					
ANR	2692279	Identifier	r_str_appendf		2692219	0					
ANR	2692280	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692281	Argument	arminsn -> str_asm		2692219	0					
ANR	2692282	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692283	Identifier	arminsn		2692219	0					
ANR	2692284	Identifier	str_asm		2692219	1					
ANR	2692285	Argument	"""umull """		2692219	1					
ANR	2692286	PrimaryExpression	"""umull """		2692219	0					
ANR	2692287	BreakStatement	break ;	708:3:22750:22755	2692219	5	True				
ANR	2692288	Label	case 4 :	709:2:22759:22765	2692219	6	True				
ANR	2692289	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smlal "" )"	710:3:22770:22831	2692219	7	True				
ANR	2692290	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""smlal "" )"		2692219	0		=			
ANR	2692291	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692292	Identifier	arminsn		2692219	0					
ANR	2692293	Identifier	str_asm		2692219	1					
ANR	2692294	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""smlal "" )"		2692219	1					
ANR	2692295	Callee	r_str_appendf		2692219	0					
ANR	2692296	Identifier	r_str_appendf		2692219	0					
ANR	2692297	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692298	Argument	arminsn -> str_asm		2692219	0					
ANR	2692299	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692300	Identifier	arminsn		2692219	0					
ANR	2692301	Identifier	str_asm		2692219	1					
ANR	2692302	Argument	"""smlal """		2692219	1					
ANR	2692303	PrimaryExpression	"""smlal """		2692219	0					
ANR	2692304	BreakStatement	break ;	711:3:22836:22841	2692219	8	True				
ANR	2692305	Label	case 6 :	712:2:22845:22851	2692219	9	True				
ANR	2692306	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umlal "" )"	713:3:22856:22917	2692219	10	True				
ANR	2692307	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""umlal "" )"		2692219	0		=			
ANR	2692308	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692309	Identifier	arminsn		2692219	0					
ANR	2692310	Identifier	str_asm		2692219	1					
ANR	2692311	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""umlal "" )"		2692219	1					
ANR	2692312	Callee	r_str_appendf		2692219	0					
ANR	2692313	Identifier	r_str_appendf		2692219	0					
ANR	2692314	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692315	Argument	arminsn -> str_asm		2692219	0					
ANR	2692316	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692317	Identifier	arminsn		2692219	0					
ANR	2692318	Identifier	str_asm		2692219	1					
ANR	2692319	Argument	"""umlal """		2692219	1					
ANR	2692320	PrimaryExpression	"""umlal """		2692219	0					
ANR	2692321	BreakStatement	break ;	714:3:22922:22927	2692219	11	True				
ANR	2692322	Label	default :	715:2:22931:22938	2692219	12	True				
ANR	2692323	Identifier	default		2692219	0					
ANR	2692324	ReturnStatement	return inst ;	716:3:22943:22954	2692219	13	True				
ANR	2692325	Identifier	inst		2692219	0					
ANR	2692326	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	718:2:22962:23168	2692219	1	True				
ANR	2692327	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2692219	0		=			
ANR	2692328	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692329	Identifier	arminsn		2692219	0					
ANR	2692330	Identifier	str_asm		2692219	1					
ANR	2692331	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s, %s "" , tbl_regs [ get_nibble ( inst , 3 ) ] , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2692219	1					
ANR	2692332	Callee	r_str_appendf		2692219	0					
ANR	2692333	Identifier	r_str_appendf		2692219	0					
ANR	2692334	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692335	Argument	arminsn -> str_asm		2692219	0					
ANR	2692336	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692337	Identifier	arminsn		2692219	0					
ANR	2692338	Identifier	str_asm		2692219	1					
ANR	2692339	Argument	"""%s, %s, %s, %s """		2692219	1					
ANR	2692340	PrimaryExpression	"""%s, %s, %s, %s """		2692219	0					
ANR	2692341	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2692219	2					
ANR	2692342	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2692219	0					
ANR	2692343	Identifier	tbl_regs		2692219	0					
ANR	2692344	CallExpression	"get_nibble ( inst , 3 )"		2692219	1					
ANR	2692345	Callee	get_nibble		2692219	0					
ANR	2692346	Identifier	get_nibble		2692219	0					
ANR	2692347	ArgumentList	inst		2692219	1					
ANR	2692348	Argument	inst		2692219	0					
ANR	2692349	Identifier	inst		2692219	0					
ANR	2692350	Argument	3		2692219	1					
ANR	2692351	PrimaryExpression	3		2692219	0					
ANR	2692352	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2692219	3					
ANR	2692353	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2692219	0					
ANR	2692354	Identifier	tbl_regs		2692219	0					
ANR	2692355	CallExpression	"get_nibble ( inst , 2 )"		2692219	1					
ANR	2692356	Callee	get_nibble		2692219	0					
ANR	2692357	Identifier	get_nibble		2692219	0					
ANR	2692358	ArgumentList	inst		2692219	1					
ANR	2692359	Argument	inst		2692219	0					
ANR	2692360	Identifier	inst		2692219	0					
ANR	2692361	Argument	2		2692219	1					
ANR	2692362	PrimaryExpression	2		2692219	0					
ANR	2692363	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2692219	4					
ANR	2692364	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2692219	0					
ANR	2692365	Identifier	tbl_regs		2692219	0					
ANR	2692366	CallExpression	"get_nibble ( inst , 4 )"		2692219	1					
ANR	2692367	Callee	get_nibble		2692219	0					
ANR	2692368	Identifier	get_nibble		2692219	0					
ANR	2692369	ArgumentList	inst		2692219	1					
ANR	2692370	Argument	inst		2692219	0					
ANR	2692371	Identifier	inst		2692219	0					
ANR	2692372	Argument	4		2692219	1					
ANR	2692373	PrimaryExpression	4		2692219	0					
ANR	2692374	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2692219	5					
ANR	2692375	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2692219	0					
ANR	2692376	Identifier	tbl_regs		2692219	0					
ANR	2692377	CallExpression	"get_nibble ( inst , 0 )"		2692219	1					
ANR	2692378	Callee	get_nibble		2692219	0					
ANR	2692379	Identifier	get_nibble		2692219	0					
ANR	2692380	ArgumentList	inst		2692219	1					
ANR	2692381	Argument	inst		2692219	0					
ANR	2692382	Identifier	inst		2692219	0					
ANR	2692383	Argument	0		2692219	1					
ANR	2692384	PrimaryExpression	0		2692219	0					
ANR	2692385	ReturnStatement	return 0 ;	721:2:23172:23180	2692219	2	True				
ANR	2692386	PrimaryExpression	0		2692219	0					
ANR	2692387	IfStatement	if ( op2 == 0xffff )		2692219	3					
ANR	2692388	Condition	op2 == 0xffff	724:5:23191:23203	2692219	0	True				
ANR	2692389	EqualityExpression	op2 == 0xffff		2692219	0		==			
ANR	2692390	Identifier	op2		2692219	0					
ANR	2692391	PrimaryExpression	0xffff		2692219	1					
ANR	2692392	CompoundStatement		28:20:722:722	2692219	1					
ANR	2692393	SwitchStatement	switch ( op1 )		2692219	0					
ANR	2692394	Condition	op1	725:10:23218:23220	2692219	0	True				
ANR	2692395	Identifier	op1		2692219	0					
ANR	2692396	CompoundStatement		29:15:739:739	2692219	1					
ANR	2692397	Label	case 1 :	726:2:23227:23233	2692219	0	True				
ANR	2692398	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sdiv "" )"	727:3:23238:23298	2692219	1	True				
ANR	2692399	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""sdiv "" )"		2692219	0		=			
ANR	2692400	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692401	Identifier	arminsn		2692219	0					
ANR	2692402	Identifier	str_asm		2692219	1					
ANR	2692403	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""sdiv "" )"		2692219	1					
ANR	2692404	Callee	r_str_appendf		2692219	0					
ANR	2692405	Identifier	r_str_appendf		2692219	0					
ANR	2692406	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692407	Argument	arminsn -> str_asm		2692219	0					
ANR	2692408	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692409	Identifier	arminsn		2692219	0					
ANR	2692410	Identifier	str_asm		2692219	1					
ANR	2692411	Argument	"""sdiv """		2692219	1					
ANR	2692412	PrimaryExpression	"""sdiv """		2692219	0					
ANR	2692413	BreakStatement	break ;	728:3:23303:23308	2692219	2	True				
ANR	2692414	Label	case 3 :	729:2:23312:23318	2692219	3	True				
ANR	2692415	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""udiv "" )"	730:3:23323:23383	2692219	4	True				
ANR	2692416	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""udiv "" )"		2692219	0		=			
ANR	2692417	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692418	Identifier	arminsn		2692219	0					
ANR	2692419	Identifier	str_asm		2692219	1					
ANR	2692420	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""udiv "" )"		2692219	1					
ANR	2692421	Callee	r_str_appendf		2692219	0					
ANR	2692422	Identifier	r_str_appendf		2692219	0					
ANR	2692423	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692424	Argument	arminsn -> str_asm		2692219	0					
ANR	2692425	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692426	Identifier	arminsn		2692219	0					
ANR	2692427	Identifier	str_asm		2692219	1					
ANR	2692428	Argument	"""udiv """		2692219	1					
ANR	2692429	PrimaryExpression	"""udiv """		2692219	0					
ANR	2692430	BreakStatement	break ;	731:3:23388:23393	2692219	5	True				
ANR	2692431	Label	default :	732:2:23397:23404	2692219	6	True				
ANR	2692432	Identifier	default		2692219	0					
ANR	2692433	ReturnStatement	return inst ;	733:3:23409:23420	2692219	7	True				
ANR	2692434	Identifier	inst		2692219	0					
ANR	2692435	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"	735:2:23428:23594	2692219	1	True				
ANR	2692436	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2692219	0		=			
ANR	2692437	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692438	Identifier	arminsn		2692219	0					
ANR	2692439	Identifier	str_asm		2692219	1					
ANR	2692440	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s, %s, %s "" , tbl_regs [ get_nibble ( inst , 2 ) ] , tbl_regs [ get_nibble ( inst , 4 ) ] , tbl_regs [ get_nibble ( inst , 0 ) ] )"		2692219	1					
ANR	2692441	Callee	r_str_appendf		2692219	0					
ANR	2692442	Identifier	r_str_appendf		2692219	0					
ANR	2692443	ArgumentList	arminsn -> str_asm		2692219	1					
ANR	2692444	Argument	arminsn -> str_asm		2692219	0					
ANR	2692445	PtrMemberAccess	arminsn -> str_asm		2692219	0					
ANR	2692446	Identifier	arminsn		2692219	0					
ANR	2692447	Identifier	str_asm		2692219	1					
ANR	2692448	Argument	"""%s, %s, %s """		2692219	1					
ANR	2692449	PrimaryExpression	"""%s, %s, %s """		2692219	0					
ANR	2692450	Argument	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2692219	2					
ANR	2692451	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 2 ) ]"		2692219	0					
ANR	2692452	Identifier	tbl_regs		2692219	0					
ANR	2692453	CallExpression	"get_nibble ( inst , 2 )"		2692219	1					
ANR	2692454	Callee	get_nibble		2692219	0					
ANR	2692455	Identifier	get_nibble		2692219	0					
ANR	2692456	ArgumentList	inst		2692219	1					
ANR	2692457	Argument	inst		2692219	0					
ANR	2692458	Identifier	inst		2692219	0					
ANR	2692459	Argument	2		2692219	1					
ANR	2692460	PrimaryExpression	2		2692219	0					
ANR	2692461	Argument	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2692219	3					
ANR	2692462	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 4 ) ]"		2692219	0					
ANR	2692463	Identifier	tbl_regs		2692219	0					
ANR	2692464	CallExpression	"get_nibble ( inst , 4 )"		2692219	1					
ANR	2692465	Callee	get_nibble		2692219	0					
ANR	2692466	Identifier	get_nibble		2692219	0					
ANR	2692467	ArgumentList	inst		2692219	1					
ANR	2692468	Argument	inst		2692219	0					
ANR	2692469	Identifier	inst		2692219	0					
ANR	2692470	Argument	4		2692219	1					
ANR	2692471	PrimaryExpression	4		2692219	0					
ANR	2692472	Argument	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2692219	4					
ANR	2692473	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 0 ) ]"		2692219	0					
ANR	2692474	Identifier	tbl_regs		2692219	0					
ANR	2692475	CallExpression	"get_nibble ( inst , 0 )"		2692219	1					
ANR	2692476	Callee	get_nibble		2692219	0					
ANR	2692477	Identifier	get_nibble		2692219	0					
ANR	2692478	ArgumentList	inst		2692219	1					
ANR	2692479	Argument	inst		2692219	0					
ANR	2692480	Identifier	inst		2692219	0					
ANR	2692481	Argument	0		2692219	1					
ANR	2692482	PrimaryExpression	0		2692219	0					
ANR	2692483	ReturnStatement	return 0 ;	737:2:23598:23606	2692219	2	True				
ANR	2692484	PrimaryExpression	0		2692219	0					
ANR	2692485	ReturnStatement	return inst ;	740:1:23613:23624	2692219	4	True				
ANR	2692486	Identifier	inst		2692219	0					
ANR	2692487	ReturnType	static ut32		2692219	1					
ANR	2692488	Identifier	thumb2_disasm_longmuldiv		2692219	2					
ANR	2692489	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2692219	3					
ANR	2692490	Parameter	struct winedbg_arm_insn * arminsn	697:37:22438:22469	2692219	0	True				
ANR	2692491	ParameterType	struct winedbg_arm_insn *		2692219	0					
ANR	2692492	Identifier	arminsn		2692219	1					
ANR	2692493	Parameter	ut32 inst	697:71:22472:22480	2692219	1	True				
ANR	2692494	ParameterType	ut32		2692219	0					
ANR	2692495	Identifier	inst		2692219	1					
ANR	2692496	CFGEntryNode	ENTRY		2692219		True				
ANR	2692497	CFGExitNode	EXIT		2692219		True				
ANR	2692498	Symbol	op2		2692219						
ANR	2692499	Symbol	* arminsn		2692219						
ANR	2692500	Symbol	op1		2692219						
ANR	2692501	Symbol	get_nibble		2692219						
ANR	2692502	Symbol	tbl_regs		2692219						
ANR	2692503	Symbol	* tbl_regs		2692219						
ANR	2692504	Symbol	inst		2692219						
ANR	2692505	Symbol	r_str_appendf		2692219						
ANR	2692506	Symbol	* get_nibble		2692219						
ANR	2692507	Symbol	arminsn		2692219						
ANR	2692508	Symbol	arminsn -> str_asm		2692219						
ANR	2692509	Function	thumb2_disasm_coprocmov1	743:0:23629:24362							
ANR	2692510	FunctionDef	"thumb2_disasm_coprocmov1 (struct winedbg_arm_insn * arminsn , ut32 inst)"		2692509	0					
ANR	2692511	CompoundStatement		743:82:23711:24362	2692509	0					
ANR	2692512	IdentifierDeclStatement	ut16 opc1 = ( inst >> 21 ) & 0x07 ;	744:1:23714:23745	2692509	0	True				
ANR	2692513	IdentifierDecl	opc1 = ( inst >> 21 ) & 0x07		2692509	0					
ANR	2692514	IdentifierDeclType	ut16		2692509	0					
ANR	2692515	Identifier	opc1		2692509	1					
ANR	2692516	AssignmentExpression	opc1 = ( inst >> 21 ) & 0x07		2692509	2		=			
ANR	2692517	Identifier	opc1		2692509	0					
ANR	2692518	BitAndExpression	( inst >> 21 ) & 0x07		2692509	1		&			
ANR	2692519	ShiftExpression	inst >> 21		2692509	0		>>			
ANR	2692520	Identifier	inst		2692509	0					
ANR	2692521	PrimaryExpression	21		2692509	1					
ANR	2692522	PrimaryExpression	0x07		2692509	1					
ANR	2692523	IdentifierDeclStatement	ut16 opc2 = ( inst >> 5 ) & 0x07 ;	745:1:23748:23778	2692509	1	True				
ANR	2692524	IdentifierDecl	opc2 = ( inst >> 5 ) & 0x07		2692509	0					
ANR	2692525	IdentifierDeclType	ut16		2692509	0					
ANR	2692526	Identifier	opc2		2692509	1					
ANR	2692527	AssignmentExpression	opc2 = ( inst >> 5 ) & 0x07		2692509	2		=			
ANR	2692528	Identifier	opc2		2692509	0					
ANR	2692529	BitAndExpression	( inst >> 5 ) & 0x07		2692509	1		&			
ANR	2692530	ShiftExpression	inst >> 5		2692509	0		>>			
ANR	2692531	Identifier	inst		2692509	0					
ANR	2692532	PrimaryExpression	5		2692509	1					
ANR	2692533	PrimaryExpression	0x07		2692509	1					
ANR	2692534	IfStatement	if ( opc2 )		2692509	2					
ANR	2692535	Condition	opc2	747:5:23786:23789	2692509	0	True				
ANR	2692536	Identifier	opc2		2692509	0					
ANR	2692537	CompoundStatement		5:11:80:80	2692509	1					
ANR	2692538	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) , opc2 )"	748:2:23796:24069	2692509	0	True				
ANR	2692539	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) , opc2 )"		2692509	0		=			
ANR	2692540	PtrMemberAccess	arminsn -> str_asm		2692509	0					
ANR	2692541	Identifier	arminsn		2692509	0					
ANR	2692542	Identifier	str_asm		2692509	1					
ANR	2692543	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) , opc2 )"		2692509	1					
ANR	2692544	Callee	r_str_appendf		2692509	0					
ANR	2692545	Identifier	r_str_appendf		2692509	0					
ANR	2692546	ArgumentList	arminsn -> str_asm		2692509	1					
ANR	2692547	Argument	arminsn -> str_asm		2692509	0					
ANR	2692548	PtrMemberAccess	arminsn -> str_asm		2692509	0					
ANR	2692549	Identifier	arminsn		2692509	0					
ANR	2692550	Identifier	str_asm		2692509	1					
ANR	2692551	Argument	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"""		2692509	1					
ANR	2692552	PrimaryExpression	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u, #%u"""		2692509	0					
ANR	2692553	Argument	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		2692509	2					
ANR	2692554	ConditionalExpression	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		2692509	0					
ANR	2692555	Condition	inst & 0x00100000		2692509	0					
ANR	2692556	BitAndExpression	inst & 0x00100000		2692509	0		&			
ANR	2692557	Identifier	inst		2692509	0					
ANR	2692558	PrimaryExpression	0x00100000		2692509	1					
ANR	2692559	PrimaryExpression	"""mrc"""		2692509	1					
ANR	2692560	PrimaryExpression	"""mcr"""		2692509	2					
ANR	2692561	Argument	"( inst & 0x10000000 ) ? ""2"" : """""		2692509	3					
ANR	2692562	ConditionalExpression	"( inst & 0x10000000 ) ? ""2"" : """""		2692509	0					
ANR	2692563	Condition	inst & 0x10000000		2692509	0					
ANR	2692564	BitAndExpression	inst & 0x10000000		2692509	0		&			
ANR	2692565	Identifier	inst		2692509	0					
ANR	2692566	PrimaryExpression	0x10000000		2692509	1					
ANR	2692567	PrimaryExpression	"""2"""		2692509	1					
ANR	2692568	PrimaryExpression	""""""		2692509	2					
ANR	2692569	Argument	"get_nibble ( inst , 2 )"		2692509	4					
ANR	2692570	CallExpression	"get_nibble ( inst , 2 )"		2692509	0					
ANR	2692571	Callee	get_nibble		2692509	0					
ANR	2692572	Identifier	get_nibble		2692509	0					
ANR	2692573	ArgumentList	inst		2692509	1					
ANR	2692574	Argument	inst		2692509	0					
ANR	2692575	Identifier	inst		2692509	0					
ANR	2692576	Argument	2		2692509	1					
ANR	2692577	PrimaryExpression	2		2692509	0					
ANR	2692578	Argument	opc1		2692509	5					
ANR	2692579	Identifier	opc1		2692509	0					
ANR	2692580	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2692509	6					
ANR	2692581	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2692509	0					
ANR	2692582	Identifier	tbl_regs		2692509	0					
ANR	2692583	CallExpression	"get_nibble ( inst , 3 )"		2692509	1					
ANR	2692584	Callee	get_nibble		2692509	0					
ANR	2692585	Identifier	get_nibble		2692509	0					
ANR	2692586	ArgumentList	inst		2692509	1					
ANR	2692587	Argument	inst		2692509	0					
ANR	2692588	Identifier	inst		2692509	0					
ANR	2692589	Argument	3		2692509	1					
ANR	2692590	PrimaryExpression	3		2692509	0					
ANR	2692591	Argument	"get_nibble ( inst , 4 )"		2692509	7					
ANR	2692592	CallExpression	"get_nibble ( inst , 4 )"		2692509	0					
ANR	2692593	Callee	get_nibble		2692509	0					
ANR	2692594	Identifier	get_nibble		2692509	0					
ANR	2692595	ArgumentList	inst		2692509	1					
ANR	2692596	Argument	inst		2692509	0					
ANR	2692597	Identifier	inst		2692509	0					
ANR	2692598	Argument	4		2692509	1					
ANR	2692599	PrimaryExpression	4		2692509	0					
ANR	2692600	Argument	"get_nibble ( inst , 0 )"		2692509	8					
ANR	2692601	CallExpression	"get_nibble ( inst , 0 )"		2692509	0					
ANR	2692602	Callee	get_nibble		2692509	0					
ANR	2692603	Identifier	get_nibble		2692509	0					
ANR	2692604	ArgumentList	inst		2692509	1					
ANR	2692605	Argument	inst		2692509	0					
ANR	2692606	Identifier	inst		2692509	0					
ANR	2692607	Argument	0		2692509	1					
ANR	2692608	PrimaryExpression	0		2692509	0					
ANR	2692609	Argument	opc2		2692509	9					
ANR	2692610	Identifier	opc2		2692509	0					
ANR	2692611	ElseStatement	else		2692509	0					
ANR	2692612	CompoundStatement		11:6:368:368	2692509	0					
ANR	2692613	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) )"	754:2:24084:24346	2692509	0	True				
ANR	2692614	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) )"		2692509	0		=			
ANR	2692615	PtrMemberAccess	arminsn -> str_asm		2692509	0					
ANR	2692616	Identifier	arminsn		2692509	0					
ANR	2692617	Identifier	str_asm		2692509	1					
ANR	2692618	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""%s%s\\tp%u, #%u, %s, cr%u, cr%u"" , ( inst & 0x00100000 ) ? ""mrc"" : ""mcr"" , ( inst & 0x10000000 ) ? ""2"" : """" , get_nibble ( inst , 2 ) , opc1 , tbl_regs [ get_nibble ( inst , 3 ) ] , get_nibble ( inst , 4 ) , get_nibble ( inst , 0 ) )"		2692509	1					
ANR	2692619	Callee	r_str_appendf		2692509	0					
ANR	2692620	Identifier	r_str_appendf		2692509	0					
ANR	2692621	ArgumentList	arminsn -> str_asm		2692509	1					
ANR	2692622	Argument	arminsn -> str_asm		2692509	0					
ANR	2692623	PtrMemberAccess	arminsn -> str_asm		2692509	0					
ANR	2692624	Identifier	arminsn		2692509	0					
ANR	2692625	Identifier	str_asm		2692509	1					
ANR	2692626	Argument	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u"""		2692509	1					
ANR	2692627	PrimaryExpression	"""%s%s\\tp%u, #%u, %s, cr%u, cr%u"""		2692509	0					
ANR	2692628	Argument	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		2692509	2					
ANR	2692629	ConditionalExpression	"( inst & 0x00100000 ) ? ""mrc"" : ""mcr"""		2692509	0					
ANR	2692630	Condition	inst & 0x00100000		2692509	0					
ANR	2692631	BitAndExpression	inst & 0x00100000		2692509	0		&			
ANR	2692632	Identifier	inst		2692509	0					
ANR	2692633	PrimaryExpression	0x00100000		2692509	1					
ANR	2692634	PrimaryExpression	"""mrc"""		2692509	1					
ANR	2692635	PrimaryExpression	"""mcr"""		2692509	2					
ANR	2692636	Argument	"( inst & 0x10000000 ) ? ""2"" : """""		2692509	3					
ANR	2692637	ConditionalExpression	"( inst & 0x10000000 ) ? ""2"" : """""		2692509	0					
ANR	2692638	Condition	inst & 0x10000000		2692509	0					
ANR	2692639	BitAndExpression	inst & 0x10000000		2692509	0		&			
ANR	2692640	Identifier	inst		2692509	0					
ANR	2692641	PrimaryExpression	0x10000000		2692509	1					
ANR	2692642	PrimaryExpression	"""2"""		2692509	1					
ANR	2692643	PrimaryExpression	""""""		2692509	2					
ANR	2692644	Argument	"get_nibble ( inst , 2 )"		2692509	4					
ANR	2692645	CallExpression	"get_nibble ( inst , 2 )"		2692509	0					
ANR	2692646	Callee	get_nibble		2692509	0					
ANR	2692647	Identifier	get_nibble		2692509	0					
ANR	2692648	ArgumentList	inst		2692509	1					
ANR	2692649	Argument	inst		2692509	0					
ANR	2692650	Identifier	inst		2692509	0					
ANR	2692651	Argument	2		2692509	1					
ANR	2692652	PrimaryExpression	2		2692509	0					
ANR	2692653	Argument	opc1		2692509	5					
ANR	2692654	Identifier	opc1		2692509	0					
ANR	2692655	Argument	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2692509	6					
ANR	2692656	ArrayIndexing	"tbl_regs [ get_nibble ( inst , 3 ) ]"		2692509	0					
ANR	2692657	Identifier	tbl_regs		2692509	0					
ANR	2692658	CallExpression	"get_nibble ( inst , 3 )"		2692509	1					
ANR	2692659	Callee	get_nibble		2692509	0					
ANR	2692660	Identifier	get_nibble		2692509	0					
ANR	2692661	ArgumentList	inst		2692509	1					
ANR	2692662	Argument	inst		2692509	0					
ANR	2692663	Identifier	inst		2692509	0					
ANR	2692664	Argument	3		2692509	1					
ANR	2692665	PrimaryExpression	3		2692509	0					
ANR	2692666	Argument	"get_nibble ( inst , 4 )"		2692509	7					
ANR	2692667	CallExpression	"get_nibble ( inst , 4 )"		2692509	0					
ANR	2692668	Callee	get_nibble		2692509	0					
ANR	2692669	Identifier	get_nibble		2692509	0					
ANR	2692670	ArgumentList	inst		2692509	1					
ANR	2692671	Argument	inst		2692509	0					
ANR	2692672	Identifier	inst		2692509	0					
ANR	2692673	Argument	4		2692509	1					
ANR	2692674	PrimaryExpression	4		2692509	0					
ANR	2692675	Argument	"get_nibble ( inst , 0 )"		2692509	8					
ANR	2692676	CallExpression	"get_nibble ( inst , 0 )"		2692509	0					
ANR	2692677	Callee	get_nibble		2692509	0					
ANR	2692678	Identifier	get_nibble		2692509	0					
ANR	2692679	ArgumentList	inst		2692509	1					
ANR	2692680	Argument	inst		2692509	0					
ANR	2692681	Identifier	inst		2692509	0					
ANR	2692682	Argument	0		2692509	1					
ANR	2692683	PrimaryExpression	0		2692509	0					
ANR	2692684	ReturnStatement	return 0 ;	759:1:24352:24360	2692509	3	True				
ANR	2692685	PrimaryExpression	0		2692509	0					
ANR	2692686	ReturnType	static ut32		2692509	1					
ANR	2692687	Identifier	thumb2_disasm_coprocmov1		2692509	2					
ANR	2692688	ParameterList	"struct winedbg_arm_insn * arminsn , ut32 inst"		2692509	3					
ANR	2692689	Parameter	struct winedbg_arm_insn * arminsn	743:37:23666:23697	2692509	0	True				
ANR	2692690	ParameterType	struct winedbg_arm_insn *		2692509	0					
ANR	2692691	Identifier	arminsn		2692509	1					
ANR	2692692	Parameter	ut32 inst	743:71:23700:23708	2692509	1	True				
ANR	2692693	ParameterType	ut32		2692509	0					
ANR	2692694	Identifier	inst		2692509	1					
ANR	2692695	CFGEntryNode	ENTRY		2692509		True				
ANR	2692696	CFGExitNode	EXIT		2692509		True				
ANR	2692697	Symbol	* arminsn		2692509						
ANR	2692698	Symbol	get_nibble		2692509						
ANR	2692699	Symbol	opc2		2692509						
ANR	2692700	Symbol	tbl_regs		2692509						
ANR	2692701	Symbol	* tbl_regs		2692509						
ANR	2692702	Symbol	inst		2692509						
ANR	2692703	Symbol	r_str_appendf		2692509						
ANR	2692704	Symbol	* get_nibble		2692509						
ANR	2692705	Symbol	arminsn		2692509						
ANR	2692706	Symbol	opc1		2692509						
ANR	2692707	Symbol	arminsn -> str_asm		2692509						
ANR	2692708	ClassDef	inst_arm	762:0:24365:24457							
ANR	2692709	DeclStmt									
ANR	2692710	Decl							ut32	ut32	mask
ANR	2692711	DeclStmt									
ANR	2692712	Decl							ut32	ut32	pattern
ANR	2692713	DeclStmt									
ANR	2692714	Decl							"ut32 ( * ) ( struct winedbg_arm_insn * , ut32 )"	"ut32 ( * ) ( struct winedbg_arm_insn * , ut32 )"	func
ANR	2692715	DeclStmt									
ANR	2692716	Decl							const struct inst_arm	const struct inst_arm [ ]	tbl_arm
ANR	2692717	ClassDef	inst_thumb16	790:0:25451:25547							
ANR	2692718	DeclStmt									
ANR	2692719	Decl							ut16	ut16	mask
ANR	2692720	DeclStmt									
ANR	2692721	Decl							ut16	ut16	pattern
ANR	2692722	DeclStmt									
ANR	2692723	Decl							"ut16 ( * ) ( struct winedbg_arm_insn * , ut16 )"	"ut16 ( * ) ( struct winedbg_arm_insn * , ut16 )"	func
ANR	2692724	DeclStmt									
ANR	2692725	Decl							const struct inst_thumb16	const struct inst_thumb16 [ ]	tbl_thumb16
ANR	2692726	DeclStmt									
ANR	2692727	Decl							const struct inst_arm	const struct inst_arm [ ]	tbl_thumb32
ANR	2692728	Function	arm_set_pc	830:0:26906:26986							
ANR	2692729	FunctionDef	"arm_set_pc (struct winedbg_arm_insn * arminsn , ut64 pc)"		2692728	0					
ANR	2692730	CompoundStatement		830:59:26965:26986	2692728	0					
ANR	2692731	ExpressionStatement	arminsn -> pc = pc	831:1:26968:26984	2692728	0	True				
ANR	2692732	AssignmentExpression	arminsn -> pc = pc		2692728	0		=			
ANR	2692733	PtrMemberAccess	arminsn -> pc		2692728	0					
ANR	2692734	Identifier	arminsn		2692728	0					
ANR	2692735	Identifier	pc		2692728	1					
ANR	2692736	Identifier	pc		2692728	1					
ANR	2692737	ReturnType	void		2692728	1					
ANR	2692738	Identifier	arm_set_pc		2692728	2					
ANR	2692739	ParameterList	"struct winedbg_arm_insn * arminsn , ut64 pc"		2692728	3					
ANR	2692740	Parameter	struct winedbg_arm_insn * arminsn	830:16:26922:26953	2692728	0	True				
ANR	2692741	ParameterType	struct winedbg_arm_insn *		2692728	0					
ANR	2692742	Identifier	arminsn		2692728	1					
ANR	2692743	Parameter	ut64 pc	830:50:26956:26962	2692728	1	True				
ANR	2692744	ParameterType	ut64		2692728	0					
ANR	2692745	Identifier	pc		2692728	1					
ANR	2692746	CFGEntryNode	ENTRY		2692728		True				
ANR	2692747	CFGExitNode	EXIT		2692728		True				
ANR	2692748	Symbol	arminsn -> pc		2692728						
ANR	2692749	Symbol	* arminsn		2692728						
ANR	2692750	Symbol	pc		2692728						
ANR	2692751	Symbol	arminsn		2692728						
ANR	2692752	Function	arm_set_input_buffer	834:0:26989:27088							
ANR	2692753	FunctionDef	"arm_set_input_buffer (struct winedbg_arm_insn * arminsn , const ut8 * buf)"		2692752	0					
ANR	2692754	CompoundStatement		834:76:27065:27088	2692752	0					
ANR	2692755	ExpressionStatement	arminsn -> buf = buf	835:1:27068:27086	2692752	0	True				
ANR	2692756	AssignmentExpression	arminsn -> buf = buf		2692752	0		=			
ANR	2692757	PtrMemberAccess	arminsn -> buf		2692752	0					
ANR	2692758	Identifier	arminsn		2692752	0					
ANR	2692759	Identifier	buf		2692752	1					
ANR	2692760	Identifier	buf		2692752	1					
ANR	2692761	ReturnType	void		2692752	1					
ANR	2692762	Identifier	arm_set_input_buffer		2692752	2					
ANR	2692763	ParameterList	"struct winedbg_arm_insn * arminsn , const ut8 * buf"		2692752	3					
ANR	2692764	Parameter	struct winedbg_arm_insn * arminsn	834:26:27015:27046	2692752	0	True				
ANR	2692765	ParameterType	struct winedbg_arm_insn *		2692752	0					
ANR	2692766	Identifier	arminsn		2692752	1					
ANR	2692767	Parameter	const ut8 * buf	834:60:27049:27062	2692752	1	True				
ANR	2692768	ParameterType	const ut8 *		2692752	0					
ANR	2692769	Identifier	buf		2692752	1					
ANR	2692770	CFGEntryNode	ENTRY		2692752		True				
ANR	2692771	CFGExitNode	EXIT		2692752		True				
ANR	2692772	Symbol	* arminsn		2692752						
ANR	2692773	Symbol	buf		2692752						
ANR	2692774	Symbol	arminsn -> buf		2692752						
ANR	2692775	Symbol	arminsn		2692752						
ANR	2692776	Function	arm_set_thumb	838:0:27091:27182							
ANR	2692777	FunctionDef	"arm_set_thumb (struct winedbg_arm_insn * arminsn , int thumb)"		2692776	0					
ANR	2692778	CompoundStatement		838:64:27155:27182	2692776	0					
ANR	2692779	ExpressionStatement	arminsn -> thumb = thumb	839:1:27158:27180	2692776	0	True				
ANR	2692780	AssignmentExpression	arminsn -> thumb = thumb		2692776	0		=			
ANR	2692781	PtrMemberAccess	arminsn -> thumb		2692776	0					
ANR	2692782	Identifier	arminsn		2692776	0					
ANR	2692783	Identifier	thumb		2692776	1					
ANR	2692784	Identifier	thumb		2692776	1					
ANR	2692785	ReturnType	void		2692776	1					
ANR	2692786	Identifier	arm_set_thumb		2692776	2					
ANR	2692787	ParameterList	"struct winedbg_arm_insn * arminsn , int thumb"		2692776	3					
ANR	2692788	Parameter	struct winedbg_arm_insn * arminsn	838:19:27110:27141	2692776	0	True				
ANR	2692789	ParameterType	struct winedbg_arm_insn *		2692776	0					
ANR	2692790	Identifier	arminsn		2692776	1					
ANR	2692791	Parameter	int thumb	838:53:27144:27152	2692776	1	True				
ANR	2692792	ParameterType	int		2692776	0					
ANR	2692793	Identifier	thumb		2692776	1					
ANR	2692794	CFGEntryNode	ENTRY		2692776		True				
ANR	2692795	CFGExitNode	EXIT		2692776		True				
ANR	2692796	Symbol	* arminsn		2692776						
ANR	2692797	Symbol	arminsn -> thumb		2692776						
ANR	2692798	Symbol	thumb		2692776						
ANR	2692799	Symbol	arminsn		2692776						
ANR	2692800	Function	winedbg_arm_insn_asm	842:0:27185:27274							
ANR	2692801	FunctionDef	winedbg_arm_insn_asm (struct winedbg_arm_insn * arminsn)		2692800	0					
ANR	2692802	CompoundStatement		842:61:27246:27274	2692800	0					
ANR	2692803	ReturnStatement	return arminsn -> str_asm ;	843:1:27249:27272	2692800	0	True				
ANR	2692804	PtrMemberAccess	arminsn -> str_asm		2692800	0					
ANR	2692805	Identifier	arminsn		2692800	0					
ANR	2692806	Identifier	str_asm		2692800	1					
ANR	2692807	ReturnType	char *		2692800	1					
ANR	2692808	Identifier	winedbg_arm_insn_asm		2692800	2					
ANR	2692809	ParameterList	struct winedbg_arm_insn * arminsn		2692800	3					
ANR	2692810	Parameter	struct winedbg_arm_insn * arminsn	842:27:27212:27243	2692800	0	True				
ANR	2692811	ParameterType	struct winedbg_arm_insn *		2692800	0					
ANR	2692812	Identifier	arminsn		2692800	1					
ANR	2692813	CFGEntryNode	ENTRY		2692800		True				
ANR	2692814	CFGExitNode	EXIT		2692800		True				
ANR	2692815	Symbol	* arminsn		2692800						
ANR	2692816	Symbol	arminsn		2692800						
ANR	2692817	Symbol	arminsn -> str_asm		2692800						
ANR	2692818	Function	winedbg_arm_insn_hex	846:0:27277:27366							
ANR	2692819	FunctionDef	winedbg_arm_insn_hex (struct winedbg_arm_insn * arminsn)		2692818	0					
ANR	2692820	CompoundStatement		846:61:27338:27366	2692818	0					
ANR	2692821	ReturnStatement	return arminsn -> str_hex ;	847:1:27341:27364	2692818	0	True				
ANR	2692822	PtrMemberAccess	arminsn -> str_hex		2692818	0					
ANR	2692823	Identifier	arminsn		2692818	0					
ANR	2692824	Identifier	str_hex		2692818	1					
ANR	2692825	ReturnType	char *		2692818	1					
ANR	2692826	Identifier	winedbg_arm_insn_hex		2692818	2					
ANR	2692827	ParameterList	struct winedbg_arm_insn * arminsn		2692818	3					
ANR	2692828	Parameter	struct winedbg_arm_insn * arminsn	846:27:27304:27335	2692818	0	True				
ANR	2692829	ParameterType	struct winedbg_arm_insn *		2692818	0					
ANR	2692830	Identifier	arminsn		2692818	1					
ANR	2692831	CFGEntryNode	ENTRY		2692818		True				
ANR	2692832	CFGExitNode	EXIT		2692818		True				
ANR	2692833	Symbol	* arminsn		2692818						
ANR	2692834	Symbol	arminsn		2692818						
ANR	2692835	Symbol	arminsn -> str_hex		2692818						
ANR	2692836	Function	arm_free	850:0:27369:27500							
ANR	2692837	FunctionDef	arm_free (struct winedbg_arm_insn * arminsn)		2692836	0					
ANR	2692838	CompoundStatement		850:49:27418:27500	2692836	0					
ANR	2692839	ExpressionStatement	free ( arminsn -> str_hex )	851:1:27421:27443	2692836	0	True				
ANR	2692840	CallExpression	free ( arminsn -> str_hex )		2692836	0					
ANR	2692841	Callee	free		2692836	0					
ANR	2692842	Identifier	free		2692836	0					
ANR	2692843	ArgumentList	arminsn -> str_hex		2692836	1					
ANR	2692844	Argument	arminsn -> str_hex		2692836	0					
ANR	2692845	PtrMemberAccess	arminsn -> str_hex		2692836	0					
ANR	2692846	Identifier	arminsn		2692836	0					
ANR	2692847	Identifier	str_hex		2692836	1					
ANR	2692848	ExpressionStatement	free ( arminsn -> str_asm )	852:1:27446:27468	2692836	1	True				
ANR	2692849	CallExpression	free ( arminsn -> str_asm )		2692836	0					
ANR	2692850	Callee	free		2692836	0					
ANR	2692851	Identifier	free		2692836	0					
ANR	2692852	ArgumentList	arminsn -> str_asm		2692836	1					
ANR	2692853	Argument	arminsn -> str_asm		2692836	0					
ANR	2692854	PtrMemberAccess	arminsn -> str_asm		2692836	0					
ANR	2692855	Identifier	arminsn		2692836	0					
ANR	2692856	Identifier	str_asm		2692836	1					
ANR	2692857	ExpressionStatement	free ( arminsn )	853:1:27471:27484	2692836	2	True				
ANR	2692858	CallExpression	free ( arminsn )		2692836	0					
ANR	2692859	Callee	free		2692836	0					
ANR	2692860	Identifier	free		2692836	0					
ANR	2692861	ArgumentList	arminsn		2692836	1					
ANR	2692862	Argument	arminsn		2692836	0					
ANR	2692863	Identifier	arminsn		2692836	0					
ANR	2692864	ReturnStatement	return NULL ;	854:1:27487:27498	2692836	3	True				
ANR	2692865	Identifier	NULL		2692836	0					
ANR	2692866	ReturnType	void *		2692836	1					
ANR	2692867	Identifier	arm_free		2692836	2					
ANR	2692868	ParameterList	struct winedbg_arm_insn * arminsn		2692836	3					
ANR	2692869	Parameter	struct winedbg_arm_insn * arminsn	850:15:27384:27415	2692836	0	True				
ANR	2692870	ParameterType	struct winedbg_arm_insn *		2692836	0					
ANR	2692871	Identifier	arminsn		2692836	1					
ANR	2692872	CFGEntryNode	ENTRY		2692836		True				
ANR	2692873	CFGExitNode	EXIT		2692836		True				
ANR	2692874	Symbol	* arminsn		2692836						
ANR	2692875	Symbol	NULL		2692836						
ANR	2692876	Symbol	arminsn		2692836						
ANR	2692877	Symbol	arminsn -> str_hex		2692836						
ANR	2692878	Symbol	arminsn -> str_asm		2692836						
ANR	2692879	Function	arm_new	857:0:27503:27711							
ANR	2692880	FunctionDef	arm_new ()		2692879	0					
ANR	2692881	CompoundStatement		857:35:27538:27711	2692879	0					
ANR	2692882	IdentifierDeclStatement	struct winedbg_arm_insn * ret ;	858:1:27541:27569	2692879	0	True				
ANR	2692883	IdentifierDecl	* ret		2692879	0					
ANR	2692884	IdentifierDeclType	struct winedbg_arm_insn *		2692879	0					
ANR	2692885	Identifier	ret		2692879	1					
ANR	2692886	ExpressionStatement	ret = malloc ( sizeof ( struct winedbg_arm_insn ) )	859:1:27572:27617	2692879	1	True				
ANR	2692887	AssignmentExpression	ret = malloc ( sizeof ( struct winedbg_arm_insn ) )		2692879	0		=			
ANR	2692888	Identifier	ret		2692879	0					
ANR	2692889	CallExpression	malloc ( sizeof ( struct winedbg_arm_insn ) )		2692879	1					
ANR	2692890	Callee	malloc		2692879	0					
ANR	2692891	Identifier	malloc		2692879	0					
ANR	2692892	ArgumentList	sizeof ( struct winedbg_arm_insn )		2692879	1					
ANR	2692893	Argument	sizeof ( struct winedbg_arm_insn )		2692879	0					
ANR	2692894	SizeofExpression	sizeof ( struct winedbg_arm_insn )		2692879	0					
ANR	2692895	Sizeof	sizeof		2692879	0					
ANR	2692896	SizeofOperand	struct winedbg_arm_insn		2692879	1					
ANR	2692897	ExpressionStatement	ret -> pc = 0	860:1:27620:27631	2692879	2	True				
ANR	2692898	AssignmentExpression	ret -> pc = 0		2692879	0		=			
ANR	2692899	PtrMemberAccess	ret -> pc		2692879	0					
ANR	2692900	Identifier	ret		2692879	0					
ANR	2692901	Identifier	pc		2692879	1					
ANR	2692902	PrimaryExpression	0		2692879	1					
ANR	2692903	ExpressionStatement	ret -> thumb = false	861:1:27634:27652	2692879	3	True				
ANR	2692904	AssignmentExpression	ret -> thumb = false		2692879	0		=			
ANR	2692905	PtrMemberAccess	ret -> thumb		2692879	0					
ANR	2692906	Identifier	ret		2692879	0					
ANR	2692907	Identifier	thumb		2692879	1					
ANR	2692908	Identifier	false		2692879	1					
ANR	2692909	ExpressionStatement	ret -> str_hex = NULL	862:1:27655:27674	2692879	4	True				
ANR	2692910	AssignmentExpression	ret -> str_hex = NULL		2692879	0		=			
ANR	2692911	PtrMemberAccess	ret -> str_hex		2692879	0					
ANR	2692912	Identifier	ret		2692879	0					
ANR	2692913	Identifier	str_hex		2692879	1					
ANR	2692914	Identifier	NULL		2692879	1					
ANR	2692915	ExpressionStatement	ret -> str_asm = NULL	863:1:27677:27696	2692879	5	True				
ANR	2692916	AssignmentExpression	ret -> str_asm = NULL		2692879	0		=			
ANR	2692917	PtrMemberAccess	ret -> str_asm		2692879	0					
ANR	2692918	Identifier	ret		2692879	0					
ANR	2692919	Identifier	str_asm		2692879	1					
ANR	2692920	Identifier	NULL		2692879	1					
ANR	2692921	ReturnStatement	return ret ;	864:1:27699:27709	2692879	6	True				
ANR	2692922	Identifier	ret		2692879	0					
ANR	2692923	ReturnType	struct winedbg_arm_insn *		2692879	1					
ANR	2692924	Identifier	arm_new		2692879	2					
ANR	2692925	ParameterList			2692879	3					
ANR	2692926	CFGEntryNode	ENTRY		2692879		True				
ANR	2692927	CFGExitNode	EXIT		2692879		True				
ANR	2692928	Symbol	ret		2692879						
ANR	2692929	Symbol	ret -> str_asm		2692879						
ANR	2692930	Symbol	malloc		2692879						
ANR	2692931	Symbol	NULL		2692879						
ANR	2692932	Symbol	ret -> str_hex		2692879						
ANR	2692933	Symbol	ret -> pc		2692879						
ANR	2692934	Symbol	ret -> thumb		2692879						
ANR	2692935	Symbol	false		2692879						
ANR	2692936	Symbol	* ret		2692879						
ANR	2692937	Function	arm_disasm_one_insn	867:0:27714:29811							
ANR	2692938	FunctionDef	arm_disasm_one_insn (struct winedbg_arm_insn * arminsn)		2692937	0					
ANR	2692939	CompoundStatement		867:58:27772:29811	2692937	0					
ANR	2692940	IdentifierDeclStatement	struct inst_arm * a_ptr = ( struct inst_arm * ) & tbl_arm ;	868:1:27775:27827	2692937	0	True				
ANR	2692941	IdentifierDecl	* a_ptr = ( struct inst_arm * ) & tbl_arm		2692937	0					
ANR	2692942	IdentifierDeclType	struct inst_arm *		2692937	0					
ANR	2692943	Identifier	a_ptr		2692937	1					
ANR	2692944	AssignmentExpression	* a_ptr = ( struct inst_arm * ) & tbl_arm		2692937	2		=			
ANR	2692945	Identifier	a_ptr		2692937	0					
ANR	2692946	CastExpression	( struct inst_arm * ) & tbl_arm		2692937	1					
ANR	2692947	CastTarget	struct inst_arm *		2692937	0					
ANR	2692948	UnaryOperationExpression	& tbl_arm		2692937	1					
ANR	2692949	UnaryOperator	&		2692937	0					
ANR	2692950	Identifier	tbl_arm		2692937	1					
ANR	2692951	IdentifierDeclStatement	struct inst_thumb16 * t_ptr = ( struct inst_thumb16 * ) & tbl_thumb16 ;	869:1:27830:27894	2692937	1	True				
ANR	2692952	IdentifierDecl	* t_ptr = ( struct inst_thumb16 * ) & tbl_thumb16		2692937	0					
ANR	2692953	IdentifierDeclType	struct inst_thumb16 *		2692937	0					
ANR	2692954	Identifier	t_ptr		2692937	1					
ANR	2692955	AssignmentExpression	* t_ptr = ( struct inst_thumb16 * ) & tbl_thumb16		2692937	2		=			
ANR	2692956	Identifier	t_ptr		2692937	0					
ANR	2692957	CastExpression	( struct inst_thumb16 * ) & tbl_thumb16		2692937	1					
ANR	2692958	CastTarget	struct inst_thumb16 *		2692937	0					
ANR	2692959	UnaryOperationExpression	& tbl_thumb16		2692937	1					
ANR	2692960	UnaryOperator	&		2692937	0					
ANR	2692961	Identifier	tbl_thumb16		2692937	1					
ANR	2692962	IdentifierDeclStatement	struct inst_arm * t2_ptr = ( struct inst_arm * ) & tbl_thumb32 ;	870:1:27897:27954	2692937	2	True				
ANR	2692963	IdentifierDecl	* t2_ptr = ( struct inst_arm * ) & tbl_thumb32		2692937	0					
ANR	2692964	IdentifierDeclType	struct inst_arm *		2692937	0					
ANR	2692965	Identifier	t2_ptr		2692937	1					
ANR	2692966	AssignmentExpression	* t2_ptr = ( struct inst_arm * ) & tbl_thumb32		2692937	2		=			
ANR	2692967	Identifier	t2_ptr		2692937	0					
ANR	2692968	CastExpression	( struct inst_arm * ) & tbl_thumb32		2692937	1					
ANR	2692969	CastTarget	struct inst_arm *		2692937	0					
ANR	2692970	UnaryOperationExpression	& tbl_thumb32		2692937	1					
ANR	2692971	UnaryOperator	&		2692937	0					
ANR	2692972	Identifier	tbl_thumb32		2692937	1					
ANR	2692973	IdentifierDeclStatement	ut32 inst ;	871:1:27957:27966	2692937	3	True				
ANR	2692974	IdentifierDecl	inst		2692937	0					
ANR	2692975	IdentifierDeclType	ut32		2692937	0					
ANR	2692976	Identifier	inst		2692937	1					
ANR	2692977	IdentifierDeclStatement	ut16 tinst ;	872:1:27969:27979	2692937	4	True				
ANR	2692978	IdentifierDecl	tinst		2692937	0					
ANR	2692979	IdentifierDeclType	ut16		2692937	0					
ANR	2692980	Identifier	tinst		2692937	1					
ANR	2692981	IdentifierDeclStatement	int size ;	873:1:27982:27990	2692937	5	True				
ANR	2692982	IdentifierDecl	size		2692937	0					
ANR	2692983	IdentifierDeclType	int		2692937	0					
ANR	2692984	Identifier	size		2692937	1					
ANR	2692985	IdentifierDeclStatement	int matched = 0 ;	874:1:27993:28008	2692937	6	True				
ANR	2692986	IdentifierDecl	matched = 0		2692937	0					
ANR	2692987	IdentifierDeclType	int		2692937	0					
ANR	2692988	Identifier	matched		2692937	1					
ANR	2692989	AssignmentExpression	matched = 0		2692937	2		=			
ANR	2692990	Identifier	matched		2692937	0					
ANR	2692991	PrimaryExpression	0		2692937	1					
ANR	2692992	Statement	arminsn	876:1:28012:28018	2692937	7	True				
ANR	2692993	Statement	->	876:8:28019:28020	2692937	8	True				
ANR	2692994	Statement	jmp	876:10:28021:28023	2692937	9	True				
ANR	2692995	Statement	=	876:14:28025:28025	2692937	10	True				
ANR	2692996	Statement	arminsn	876:16:28027:28033	2692937	11	True				
ANR	2692997	Statement	->	876:23:28034:28035	2692937	12	True				
ANR	2692998	Statement	fail	876:25:28036:28039	2692937	13	True				
ANR	2692999	Statement	=	876:30:28041:28041	2692937	14	True				
ANR	2693000	Statement	-	876:32:28043:28043	2692937	15	True				
ANR	2693001	Statement	1L	876:33:28044:28045	2692937	16	True				
ANR	2693002	ExpressionStatement	L	876:35:28046:28047	2692937	17	True				
ANR	2693003	Identifier	L		2692937	0					
ANR	2693004	IfStatement	if ( ! arminsn -> thumb )		2692937	18					
ANR	2693005	Condition	! arminsn -> thumb	877:5:28054:28068	2692937	0	True				
ANR	2693006	UnaryOperationExpression	! arminsn -> thumb		2692937	0					
ANR	2693007	UnaryOperator	!		2692937	0					
ANR	2693008	PtrMemberAccess	arminsn -> thumb		2692937	1					
ANR	2693009	Identifier	arminsn		2692937	0					
ANR	2693010	Identifier	thumb		2692937	1					
ANR	2693011	CompoundStatement		11:22:298:298	2692937	1					
ANR	2693012	ExpressionStatement	size = ARM_INSN_SIZE	878:2:28075:28095	2692937	0	True				
ANR	2693013	AssignmentExpression	size = ARM_INSN_SIZE		2692937	0		=			
ANR	2693014	Identifier	size		2692937	0					
ANR	2693015	Identifier	ARM_INSN_SIZE		2692937	1					
ANR	2693016	ExpressionStatement	"inst = db_get_inst ( arminsn -> buf , size )"	879:2:28099:28137	2692937	1	True				
ANR	2693017	AssignmentExpression	"inst = db_get_inst ( arminsn -> buf , size )"		2692937	0		=			
ANR	2693018	Identifier	inst		2692937	0					
ANR	2693019	CallExpression	"db_get_inst ( arminsn -> buf , size )"		2692937	1					
ANR	2693020	Callee	db_get_inst		2692937	0					
ANR	2693021	Identifier	db_get_inst		2692937	0					
ANR	2693022	ArgumentList	arminsn -> buf		2692937	1					
ANR	2693023	Argument	arminsn -> buf		2692937	0					
ANR	2693024	PtrMemberAccess	arminsn -> buf		2692937	0					
ANR	2693025	Identifier	arminsn		2692937	0					
ANR	2693026	Identifier	buf		2692937	1					
ANR	2693027	Argument	size		2692937	1					
ANR	2693028	Identifier	size		2692937	0					
ANR	2693029	WhileStatement	while ( a_ptr -> func )		2692937	2					
ANR	2693030	Condition	a_ptr -> func	880:9:28148:28158	2692937	0	True				
ANR	2693031	PtrMemberAccess	a_ptr -> func		2692937	0					
ANR	2693032	Identifier	a_ptr		2692937	0					
ANR	2693033	Identifier	func		2692937	1					
ANR	2693034	CompoundStatement		14:22:388:388	2692937	1					
ANR	2693035	IfStatement	if ( ( inst & a_ptr -> mask ) == a_ptr -> pattern )		2692937	0					
ANR	2693036	Condition	( inst & a_ptr -> mask ) == a_ptr -> pattern	881:7:28170:28208	2692937	0	True				
ANR	2693037	EqualityExpression	( inst & a_ptr -> mask ) == a_ptr -> pattern		2692937	0		==			
ANR	2693038	BitAndExpression	inst & a_ptr -> mask		2692937	0		&			
ANR	2693039	Identifier	inst		2692937	0					
ANR	2693040	PtrMemberAccess	a_ptr -> mask		2692937	1					
ANR	2693041	Identifier	a_ptr		2692937	0					
ANR	2693042	Identifier	mask		2692937	1					
ANR	2693043	PtrMemberAccess	a_ptr -> pattern		2692937	1					
ANR	2693044	Identifier	a_ptr		2692937	0					
ANR	2693045	Identifier	pattern		2692937	1					
ANR	2693046	CompoundStatement		15:48:438:438	2692937	1					
ANR	2693047	ExpressionStatement	matched = 1	882:4:28217:28228	2692937	0	True				
ANR	2693048	AssignmentExpression	matched = 1		2692937	0		=			
ANR	2693049	Identifier	matched		2692937	0					
ANR	2693050	PrimaryExpression	1		2692937	1					
ANR	2693051	BreakStatement	break ;	883:4:28234:28239	2692937	1	True				
ANR	2693052	ExpressionStatement	a_ptr ++	885:3:28249:28256	2692937	1	True				
ANR	2693053	PostIncDecOperationExpression	a_ptr ++		2692937	0					
ANR	2693054	Identifier	a_ptr		2692937	0					
ANR	2693055	IncDec	++		2692937	1					
ANR	2693056	IfStatement	if ( ! matched )		2692937	3					
ANR	2693057	Condition	! matched	888:6:28269:28276	2692937	0	True				
ANR	2693058	UnaryOperationExpression	! matched		2692937	0					
ANR	2693059	UnaryOperator	!		2692937	0					
ANR	2693060	Identifier	matched		2692937	1					
ANR	2693061	CompoundStatement		22:16:506:506	2692937	1					
ANR	2693062	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown ARM Instruction: %08x"" , inst )"	889:3:28284:28374	2692937	0	True				
ANR	2693063	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown ARM Instruction: %08x"" , inst )"		2692937	0		=			
ANR	2693064	PtrMemberAccess	arminsn -> str_asm		2692937	0					
ANR	2693065	Identifier	arminsn		2692937	0					
ANR	2693066	Identifier	str_asm		2692937	1					
ANR	2693067	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""Unknown ARM Instruction: %08x"" , inst )"		2692937	1					
ANR	2693068	Callee	r_str_appendf		2692937	0					
ANR	2693069	Identifier	r_str_appendf		2692937	0					
ANR	2693070	ArgumentList	arminsn -> str_asm		2692937	1					
ANR	2693071	Argument	arminsn -> str_asm		2692937	0					
ANR	2693072	PtrMemberAccess	arminsn -> str_asm		2692937	0					
ANR	2693073	Identifier	arminsn		2692937	0					
ANR	2693074	Identifier	str_asm		2692937	1					
ANR	2693075	Argument	"""Unknown ARM Instruction: %08x"""		2692937	1					
ANR	2693076	PrimaryExpression	"""Unknown ARM Instruction: %08x"""		2692937	0					
ANR	2693077	Argument	inst		2692937	2					
ANR	2693078	Identifier	inst		2692937	0					
ANR	2693079	ElseStatement	else		2692937	0					
ANR	2693080	CompoundStatement		25:7:614:614	2692937	0					
ANR	2693081	ExpressionStatement	"a_ptr -> func ( arminsn , inst )"	892:3:28392:28418	2692937	0	True				
ANR	2693082	CallExpression	"a_ptr -> func ( arminsn , inst )"		2692937	0					
ANR	2693083	Callee	a_ptr -> func		2692937	0					
ANR	2693084	PtrMemberAccess	a_ptr -> func		2692937	0					
ANR	2693085	Identifier	a_ptr		2692937	0					
ANR	2693086	Identifier	func		2692937	1					
ANR	2693087	ArgumentList	arminsn		2692937	1					
ANR	2693088	Argument	arminsn		2692937	0					
ANR	2693089	Identifier	arminsn		2692937	0					
ANR	2693090	Argument	inst		2692937	1					
ANR	2693091	Identifier	inst		2692937	0					
ANR	2693092	ExpressionStatement	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"	894:2:28426:28581	2692937	4	True				
ANR	2693093	AssignmentExpression	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		2692937	0		=			
ANR	2693094	PtrMemberAccess	arminsn -> str_hex		2692937	0					
ANR	2693095	Identifier	arminsn		2692937	0					
ANR	2693096	Identifier	str_hex		2692937	1					
ANR	2693097	CallExpression	"r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		2692937	1					
ANR	2693098	Callee	r_str_appendf		2692937	0					
ANR	2693099	Identifier	r_str_appendf		2692937	0					
ANR	2693100	ArgumentList	arminsn -> str_hex		2692937	1					
ANR	2693101	Argument	arminsn -> str_hex		2692937	0					
ANR	2693102	PtrMemberAccess	arminsn -> str_hex		2692937	0					
ANR	2693103	Identifier	arminsn		2692937	0					
ANR	2693104	Identifier	str_hex		2692937	1					
ANR	2693105	Argument	"""%02x%02x%02x%02x"""		2692937	1					
ANR	2693106	PrimaryExpression	"""%02x%02x%02x%02x"""		2692937	0					
ANR	2693107	Argument	* ( ( ut8 * ) ( & inst ) )		2692937	2					
ANR	2693108	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) )		2692937	0					
ANR	2693109	UnaryOperator	*		2692937	0					
ANR	2693110	CastExpression	( ut8 * ) ( & inst )		2692937	1					
ANR	2693111	CastTarget	ut8 *		2692937	0					
ANR	2693112	UnaryOperationExpression	& inst		2692937	1					
ANR	2693113	UnaryOperator	&		2692937	0					
ANR	2693114	Identifier	inst		2692937	1					
ANR	2693115	Argument	* ( ( ut8 * ) ( & inst ) + 1 )		2692937	3					
ANR	2693116	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 1 )		2692937	0					
ANR	2693117	UnaryOperator	*		2692937	0					
ANR	2693118	AdditiveExpression	( ut8 * ) ( & inst ) + 1		2692937	1		+			
ANR	2693119	CastExpression	( ut8 * ) ( & inst )		2692937	0					
ANR	2693120	CastTarget	ut8 *		2692937	0					
ANR	2693121	UnaryOperationExpression	& inst		2692937	1					
ANR	2693122	UnaryOperator	&		2692937	0					
ANR	2693123	Identifier	inst		2692937	1					
ANR	2693124	PrimaryExpression	1		2692937	1					
ANR	2693125	Argument	* ( ( ut8 * ) ( & inst ) + 2 )		2692937	4					
ANR	2693126	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 2 )		2692937	0					
ANR	2693127	UnaryOperator	*		2692937	0					
ANR	2693128	AdditiveExpression	( ut8 * ) ( & inst ) + 2		2692937	1		+			
ANR	2693129	CastExpression	( ut8 * ) ( & inst )		2692937	0					
ANR	2693130	CastTarget	ut8 *		2692937	0					
ANR	2693131	UnaryOperationExpression	& inst		2692937	1					
ANR	2693132	UnaryOperator	&		2692937	0					
ANR	2693133	Identifier	inst		2692937	1					
ANR	2693134	PrimaryExpression	2		2692937	1					
ANR	2693135	Argument	* ( ( ut8 * ) ( & inst ) + 3 )		2692937	5					
ANR	2693136	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 3 )		2692937	0					
ANR	2693137	UnaryOperator	*		2692937	0					
ANR	2693138	AdditiveExpression	( ut8 * ) ( & inst ) + 3		2692937	1		+			
ANR	2693139	CastExpression	( ut8 * ) ( & inst )		2692937	0					
ANR	2693140	CastTarget	ut8 *		2692937	0					
ANR	2693141	UnaryOperationExpression	& inst		2692937	1					
ANR	2693142	UnaryOperator	&		2692937	0					
ANR	2693143	Identifier	inst		2692937	1					
ANR	2693144	PrimaryExpression	3		2692937	1					
ANR	2693145	ReturnStatement	return size ;	896:2:28585:28596	2692937	5	True				
ANR	2693146	Identifier	size		2692937	0					
ANR	2693147	ElseStatement	else		2692937	0					
ANR	2693148	CompoundStatement		31:8:833:833	2692937	0					
ANR	2693149	ExpressionStatement	"tinst = db_get_inst ( arminsn -> buf , THUMB_INSN_SIZE )"	898:2:28610:28660	2692937	0	True				
ANR	2693150	AssignmentExpression	"tinst = db_get_inst ( arminsn -> buf , THUMB_INSN_SIZE )"		2692937	0		=			
ANR	2693151	Identifier	tinst		2692937	0					
ANR	2693152	CallExpression	"db_get_inst ( arminsn -> buf , THUMB_INSN_SIZE )"		2692937	1					
ANR	2693153	Callee	db_get_inst		2692937	0					
ANR	2693154	Identifier	db_get_inst		2692937	0					
ANR	2693155	ArgumentList	arminsn -> buf		2692937	1					
ANR	2693156	Argument	arminsn -> buf		2692937	0					
ANR	2693157	PtrMemberAccess	arminsn -> buf		2692937	0					
ANR	2693158	Identifier	arminsn		2692937	0					
ANR	2693159	Identifier	buf		2692937	1					
ANR	2693160	Argument	THUMB_INSN_SIZE		2692937	1					
ANR	2693161	Identifier	THUMB_INSN_SIZE		2692937	0					
ANR	2693162	SwitchStatement	switch ( tinst & 0xf800 )		2692937	1					
ANR	2693163	Condition	tinst & 0xf800	899:10:28672:28685	2692937	0	True				
ANR	2693164	BitAndExpression	tinst & 0xf800		2692937	0		&			
ANR	2693165	Identifier	tinst		2692937	0					
ANR	2693166	PrimaryExpression	0xf800		2692937	1					
ANR	2693167	CompoundStatement		33:26:915:915	2692937	1					
ANR	2693168	Label	case 0xe800 :	900:2:28692:28703	2692937	0	True				
ANR	2693169	Label	case 0xf000 :	901:2:28707:28718	2692937	1	True				
ANR	2693170	Label	case 0xf800 :	902:2:28722:28733	2692937	2	True				
ANR	2693171	ExpressionStatement	size = THUMB2_INSN_SIZE	903:3:28738:28761	2692937	3	True				
ANR	2693172	AssignmentExpression	size = THUMB2_INSN_SIZE		2692937	0		=			
ANR	2693173	Identifier	size		2692937	0					
ANR	2693174	Identifier	THUMB2_INSN_SIZE		2692937	1					
ANR	2693175	ExpressionStatement	"inst = db_get_inst ( arminsn -> buf + 1 , THUMB_INSN_SIZE )"	904:3:28766:28817	2692937	4	True				
ANR	2693176	AssignmentExpression	"inst = db_get_inst ( arminsn -> buf + 1 , THUMB_INSN_SIZE )"		2692937	0		=			
ANR	2693177	Identifier	inst		2692937	0					
ANR	2693178	CallExpression	"db_get_inst ( arminsn -> buf + 1 , THUMB_INSN_SIZE )"		2692937	1					
ANR	2693179	Callee	db_get_inst		2692937	0					
ANR	2693180	Identifier	db_get_inst		2692937	0					
ANR	2693181	ArgumentList	arminsn -> buf + 1		2692937	1					
ANR	2693182	Argument	arminsn -> buf + 1		2692937	0					
ANR	2693183	AdditiveExpression	arminsn -> buf + 1		2692937	0		+			
ANR	2693184	PtrMemberAccess	arminsn -> buf		2692937	0					
ANR	2693185	Identifier	arminsn		2692937	0					
ANR	2693186	Identifier	buf		2692937	1					
ANR	2693187	PrimaryExpression	1		2692937	1					
ANR	2693188	Argument	THUMB_INSN_SIZE		2692937	1					
ANR	2693189	Identifier	THUMB_INSN_SIZE		2692937	0					
ANR	2693190	ExpressionStatement	inst |= ( tinst << 16 )	905:3:28822:28843	2692937	5	True				
ANR	2693191	AssignmentExpression	inst |= ( tinst << 16 )		2692937	0		|=			
ANR	2693192	Identifier	inst		2692937	0					
ANR	2693193	ShiftExpression	tinst << 16		2692937	1		<<			
ANR	2693194	Identifier	tinst		2692937	0					
ANR	2693195	PrimaryExpression	16		2692937	1					
ANR	2693196	WhileStatement	while ( t2_ptr -> func )		2692937	6					
ANR	2693197	Condition	t2_ptr -> func	907:10:28856:28867	2692937	0	True				
ANR	2693198	PtrMemberAccess	t2_ptr -> func		2692937	0					
ANR	2693199	Identifier	t2_ptr		2692937	0					
ANR	2693200	Identifier	func		2692937	1					
ANR	2693201	CompoundStatement		41:24:1097:1097	2692937	1					
ANR	2693202	IfStatement	if ( ( inst & t2_ptr -> mask ) == t2_ptr -> pattern )		2692937	0					
ANR	2693203	Condition	( inst & t2_ptr -> mask ) == t2_ptr -> pattern	908:8:28880:28920	2692937	0	True				
ANR	2693204	EqualityExpression	( inst & t2_ptr -> mask ) == t2_ptr -> pattern		2692937	0		==			
ANR	2693205	BitAndExpression	inst & t2_ptr -> mask		2692937	0		&			
ANR	2693206	Identifier	inst		2692937	0					
ANR	2693207	PtrMemberAccess	t2_ptr -> mask		2692937	1					
ANR	2693208	Identifier	t2_ptr		2692937	0					
ANR	2693209	Identifier	mask		2692937	1					
ANR	2693210	PtrMemberAccess	t2_ptr -> pattern		2692937	1					
ANR	2693211	Identifier	t2_ptr		2692937	0					
ANR	2693212	Identifier	pattern		2692937	1					
ANR	2693213	CompoundStatement		42:51:1150:1150	2692937	1					
ANR	2693214	ExpressionStatement	matched = 1	909:5:28930:28941	2692937	0	True				
ANR	2693215	AssignmentExpression	matched = 1		2692937	0		=			
ANR	2693216	Identifier	matched		2692937	0					
ANR	2693217	PrimaryExpression	1		2692937	1					
ANR	2693218	BreakStatement	break ;	910:5:28948:28953	2692937	1	True				
ANR	2693219	ExpressionStatement	t2_ptr ++	912:4:28965:28973	2692937	1	True				
ANR	2693220	PostIncDecOperationExpression	t2_ptr ++		2692937	0					
ANR	2693221	Identifier	t2_ptr		2692937	0					
ANR	2693222	IncDec	++		2692937	1					
ANR	2693223	IfStatement	if ( ! matched )		2692937	7					
ANR	2693224	Condition	! matched	915:7:28988:28995	2692937	0	True				
ANR	2693225	UnaryOperationExpression	! matched		2692937	0					
ANR	2693226	UnaryOperator	!		2692937	0					
ANR	2693227	Identifier	matched		2692937	1					
ANR	2693228	CompoundStatement		49:17:1225:1225	2692937	1					
ANR	2693229	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb2 Instruction: %08x"" , inst )"	916:4:29004:29097	2692937	0	True				
ANR	2693230	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb2 Instruction: %08x"" , inst )"		2692937	0		=			
ANR	2693231	PtrMemberAccess	arminsn -> str_asm		2692937	0					
ANR	2693232	Identifier	arminsn		2692937	0					
ANR	2693233	Identifier	str_asm		2692937	1					
ANR	2693234	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb2 Instruction: %08x"" , inst )"		2692937	1					
ANR	2693235	Callee	r_str_appendf		2692937	0					
ANR	2693236	Identifier	r_str_appendf		2692937	0					
ANR	2693237	ArgumentList	arminsn -> str_asm		2692937	1					
ANR	2693238	Argument	arminsn -> str_asm		2692937	0					
ANR	2693239	PtrMemberAccess	arminsn -> str_asm		2692937	0					
ANR	2693240	Identifier	arminsn		2692937	0					
ANR	2693241	Identifier	str_asm		2692937	1					
ANR	2693242	Argument	"""Unknown Thumb2 Instruction: %08x"""		2692937	1					
ANR	2693243	PrimaryExpression	"""Unknown Thumb2 Instruction: %08x"""		2692937	0					
ANR	2693244	Argument	inst		2692937	2					
ANR	2693245	Identifier	inst		2692937	0					
ANR	2693246	ElseStatement	else		2692937	0					
ANR	2693247	CompoundStatement		52:8:1339:1339	2692937	0					
ANR	2693248	ExpressionStatement	"t2_ptr -> func ( arminsn , inst )"	919:4:29118:29145	2692937	0	True				
ANR	2693249	CallExpression	"t2_ptr -> func ( arminsn , inst )"		2692937	0					
ANR	2693250	Callee	t2_ptr -> func		2692937	0					
ANR	2693251	PtrMemberAccess	t2_ptr -> func		2692937	0					
ANR	2693252	Identifier	t2_ptr		2692937	0					
ANR	2693253	Identifier	func		2692937	1					
ANR	2693254	ArgumentList	arminsn		2692937	1					
ANR	2693255	Argument	arminsn		2692937	0					
ANR	2693256	Identifier	arminsn		2692937	0					
ANR	2693257	Argument	inst		2692937	1					
ANR	2693258	Identifier	inst		2692937	0					
ANR	2693259	ExpressionStatement	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"	921:3:29156:29312	2692937	8	True				
ANR	2693260	AssignmentExpression	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		2692937	0		=			
ANR	2693261	PtrMemberAccess	arminsn -> str_hex		2692937	0					
ANR	2693262	Identifier	arminsn		2692937	0					
ANR	2693263	Identifier	str_hex		2692937	1					
ANR	2693264	CallExpression	"r_str_appendf ( arminsn -> str_hex , ""%02x%02x%02x%02x"" , * ( ( ut8 * ) ( & inst ) ) , * ( ( ut8 * ) ( & inst ) + 1 ) , * ( ( ut8 * ) ( & inst ) + 2 ) , * ( ( ut8 * ) ( & inst ) + 3 ) )"		2692937	1					
ANR	2693265	Callee	r_str_appendf		2692937	0					
ANR	2693266	Identifier	r_str_appendf		2692937	0					
ANR	2693267	ArgumentList	arminsn -> str_hex		2692937	1					
ANR	2693268	Argument	arminsn -> str_hex		2692937	0					
ANR	2693269	PtrMemberAccess	arminsn -> str_hex		2692937	0					
ANR	2693270	Identifier	arminsn		2692937	0					
ANR	2693271	Identifier	str_hex		2692937	1					
ANR	2693272	Argument	"""%02x%02x%02x%02x"""		2692937	1					
ANR	2693273	PrimaryExpression	"""%02x%02x%02x%02x"""		2692937	0					
ANR	2693274	Argument	* ( ( ut8 * ) ( & inst ) )		2692937	2					
ANR	2693275	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) )		2692937	0					
ANR	2693276	UnaryOperator	*		2692937	0					
ANR	2693277	CastExpression	( ut8 * ) ( & inst )		2692937	1					
ANR	2693278	CastTarget	ut8 *		2692937	0					
ANR	2693279	UnaryOperationExpression	& inst		2692937	1					
ANR	2693280	UnaryOperator	&		2692937	0					
ANR	2693281	Identifier	inst		2692937	1					
ANR	2693282	Argument	* ( ( ut8 * ) ( & inst ) + 1 )		2692937	3					
ANR	2693283	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 1 )		2692937	0					
ANR	2693284	UnaryOperator	*		2692937	0					
ANR	2693285	AdditiveExpression	( ut8 * ) ( & inst ) + 1		2692937	1		+			
ANR	2693286	CastExpression	( ut8 * ) ( & inst )		2692937	0					
ANR	2693287	CastTarget	ut8 *		2692937	0					
ANR	2693288	UnaryOperationExpression	& inst		2692937	1					
ANR	2693289	UnaryOperator	&		2692937	0					
ANR	2693290	Identifier	inst		2692937	1					
ANR	2693291	PrimaryExpression	1		2692937	1					
ANR	2693292	Argument	* ( ( ut8 * ) ( & inst ) + 2 )		2692937	4					
ANR	2693293	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 2 )		2692937	0					
ANR	2693294	UnaryOperator	*		2692937	0					
ANR	2693295	AdditiveExpression	( ut8 * ) ( & inst ) + 2		2692937	1		+			
ANR	2693296	CastExpression	( ut8 * ) ( & inst )		2692937	0					
ANR	2693297	CastTarget	ut8 *		2692937	0					
ANR	2693298	UnaryOperationExpression	& inst		2692937	1					
ANR	2693299	UnaryOperator	&		2692937	0					
ANR	2693300	Identifier	inst		2692937	1					
ANR	2693301	PrimaryExpression	2		2692937	1					
ANR	2693302	Argument	* ( ( ut8 * ) ( & inst ) + 3 )		2692937	5					
ANR	2693303	UnaryOperationExpression	* ( ( ut8 * ) ( & inst ) + 3 )		2692937	0					
ANR	2693304	UnaryOperator	*		2692937	0					
ANR	2693305	AdditiveExpression	( ut8 * ) ( & inst ) + 3		2692937	1		+			
ANR	2693306	CastExpression	( ut8 * ) ( & inst )		2692937	0					
ANR	2693307	CastTarget	ut8 *		2692937	0					
ANR	2693308	UnaryOperationExpression	& inst		2692937	1					
ANR	2693309	UnaryOperator	&		2692937	0					
ANR	2693310	Identifier	inst		2692937	1					
ANR	2693311	PrimaryExpression	3		2692937	1					
ANR	2693312	ReturnStatement	return size ;	923:3:29317:29328	2692937	9	True				
ANR	2693313	Identifier	size		2692937	0					
ANR	2693314	Label	default :	924:2:29332:29339	2692937	10	True				
ANR	2693315	Identifier	default		2692937	0					
ANR	2693316	BreakStatement	break ;	925:3:29344:29349	2692937	11	True				
ANR	2693317	ExpressionStatement	size = THUMB_INSN_SIZE	928:2:29358:29380	2692937	2	True				
ANR	2693318	AssignmentExpression	size = THUMB_INSN_SIZE		2692937	0		=			
ANR	2693319	Identifier	size		2692937	0					
ANR	2693320	Identifier	THUMB_INSN_SIZE		2692937	1					
ANR	2693321	WhileStatement	while ( t_ptr -> func )		2692937	3					
ANR	2693322	Condition	t_ptr -> func	929:9:29391:29401	2692937	0	True				
ANR	2693323	PtrMemberAccess	t_ptr -> func		2692937	0					
ANR	2693324	Identifier	t_ptr		2692937	0					
ANR	2693325	Identifier	func		2692937	1					
ANR	2693326	CompoundStatement		63:22:1631:1631	2692937	1					
ANR	2693327	IfStatement	if ( ( tinst & t_ptr -> mask ) == t_ptr -> pattern )		2692937	0					
ANR	2693328	Condition	( tinst & t_ptr -> mask ) == t_ptr -> pattern	930:7:29413:29452	2692937	0	True				
ANR	2693329	EqualityExpression	( tinst & t_ptr -> mask ) == t_ptr -> pattern		2692937	0		==			
ANR	2693330	BitAndExpression	tinst & t_ptr -> mask		2692937	0		&			
ANR	2693331	Identifier	tinst		2692937	0					
ANR	2693332	PtrMemberAccess	t_ptr -> mask		2692937	1					
ANR	2693333	Identifier	t_ptr		2692937	0					
ANR	2693334	Identifier	mask		2692937	1					
ANR	2693335	PtrMemberAccess	t_ptr -> pattern		2692937	1					
ANR	2693336	Identifier	t_ptr		2692937	0					
ANR	2693337	Identifier	pattern		2692937	1					
ANR	2693338	CompoundStatement		64:49:1682:1682	2692937	1					
ANR	2693339	ExpressionStatement	matched = 1	931:4:29461:29472	2692937	0	True				
ANR	2693340	AssignmentExpression	matched = 1		2692937	0		=			
ANR	2693341	Identifier	matched		2692937	0					
ANR	2693342	PrimaryExpression	1		2692937	1					
ANR	2693343	BreakStatement	break ;	932:4:29478:29483	2692937	1	True				
ANR	2693344	ExpressionStatement	t_ptr ++	934:3:29493:29500	2692937	1	True				
ANR	2693345	PostIncDecOperationExpression	t_ptr ++		2692937	0					
ANR	2693346	Identifier	t_ptr		2692937	0					
ANR	2693347	IncDec	++		2692937	1					
ANR	2693348	IfStatement	if ( ! matched )		2692937	4					
ANR	2693349	Condition	! matched	937:6:29513:29520	2692937	0	True				
ANR	2693350	UnaryOperationExpression	! matched		2692937	0					
ANR	2693351	UnaryOperator	!		2692937	0					
ANR	2693352	Identifier	matched		2692937	1					
ANR	2693353	CompoundStatement		71:16:1750:1750	2692937	1					
ANR	2693354	ExpressionStatement	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb Instruction: %04x"" , tinst )"	938:3:29528:29621	2692937	0	True				
ANR	2693355	AssignmentExpression	"arminsn -> str_asm = r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb Instruction: %04x"" , tinst )"		2692937	0		=			
ANR	2693356	PtrMemberAccess	arminsn -> str_asm		2692937	0					
ANR	2693357	Identifier	arminsn		2692937	0					
ANR	2693358	Identifier	str_asm		2692937	1					
ANR	2693359	CallExpression	"r_str_appendf ( arminsn -> str_asm , ""Unknown Thumb Instruction: %04x"" , tinst )"		2692937	1					
ANR	2693360	Callee	r_str_appendf		2692937	0					
ANR	2693361	Identifier	r_str_appendf		2692937	0					
ANR	2693362	ArgumentList	arminsn -> str_asm		2692937	1					
ANR	2693363	Argument	arminsn -> str_asm		2692937	0					
ANR	2693364	PtrMemberAccess	arminsn -> str_asm		2692937	0					
ANR	2693365	Identifier	arminsn		2692937	0					
ANR	2693366	Identifier	str_asm		2692937	1					
ANR	2693367	Argument	"""Unknown Thumb Instruction: %04x"""		2692937	1					
ANR	2693368	PrimaryExpression	"""Unknown Thumb Instruction: %04x"""		2692937	0					
ANR	2693369	Argument	tinst		2692937	2					
ANR	2693370	Identifier	tinst		2692937	0					
ANR	2693371	ElseStatement	else		2692937	0					
ANR	2693372	CompoundStatement		74:7:1861:1861	2692937	0					
ANR	2693373	ExpressionStatement	"t_ptr -> func ( arminsn , tinst )"	941:3:29639:29666	2692937	0	True				
ANR	2693374	CallExpression	"t_ptr -> func ( arminsn , tinst )"		2692937	0					
ANR	2693375	Callee	t_ptr -> func		2692937	0					
ANR	2693376	PtrMemberAccess	t_ptr -> func		2692937	0					
ANR	2693377	Identifier	t_ptr		2692937	0					
ANR	2693378	Identifier	func		2692937	1					
ANR	2693379	ArgumentList	arminsn		2692937	1					
ANR	2693380	Argument	arminsn		2692937	0					
ANR	2693381	Identifier	arminsn		2692937	0					
ANR	2693382	Argument	tinst		2692937	1					
ANR	2693383	Identifier	tinst		2692937	0					
ANR	2693384	ExpressionStatement	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x"" , * ( ( ut8 * ) ( & tinst ) ) , * ( ( ut8 * ) ( & tinst ) + 1 ) )"	943:2:29674:29777	2692937	5	True				
ANR	2693385	AssignmentExpression	"arminsn -> str_hex = r_str_appendf ( arminsn -> str_hex , ""%02x%02x"" , * ( ( ut8 * ) ( & tinst ) ) , * ( ( ut8 * ) ( & tinst ) + 1 ) )"		2692937	0		=			
ANR	2693386	PtrMemberAccess	arminsn -> str_hex		2692937	0					
ANR	2693387	Identifier	arminsn		2692937	0					
ANR	2693388	Identifier	str_hex		2692937	1					
ANR	2693389	CallExpression	"r_str_appendf ( arminsn -> str_hex , ""%02x%02x"" , * ( ( ut8 * ) ( & tinst ) ) , * ( ( ut8 * ) ( & tinst ) + 1 ) )"		2692937	1					
ANR	2693390	Callee	r_str_appendf		2692937	0					
ANR	2693391	Identifier	r_str_appendf		2692937	0					
ANR	2693392	ArgumentList	arminsn -> str_hex		2692937	1					
ANR	2693393	Argument	arminsn -> str_hex		2692937	0					
ANR	2693394	PtrMemberAccess	arminsn -> str_hex		2692937	0					
ANR	2693395	Identifier	arminsn		2692937	0					
ANR	2693396	Identifier	str_hex		2692937	1					
ANR	2693397	Argument	"""%02x%02x"""		2692937	1					
ANR	2693398	PrimaryExpression	"""%02x%02x"""		2692937	0					
ANR	2693399	Argument	* ( ( ut8 * ) ( & tinst ) )		2692937	2					
ANR	2693400	UnaryOperationExpression	* ( ( ut8 * ) ( & tinst ) )		2692937	0					
ANR	2693401	UnaryOperator	*		2692937	0					
ANR	2693402	CastExpression	( ut8 * ) ( & tinst )		2692937	1					
ANR	2693403	CastTarget	ut8 *		2692937	0					
ANR	2693404	UnaryOperationExpression	& tinst		2692937	1					
ANR	2693405	UnaryOperator	&		2692937	0					
ANR	2693406	Identifier	tinst		2692937	1					
ANR	2693407	Argument	* ( ( ut8 * ) ( & tinst ) + 1 )		2692937	3					
ANR	2693408	UnaryOperationExpression	* ( ( ut8 * ) ( & tinst ) + 1 )		2692937	0					
ANR	2693409	UnaryOperator	*		2692937	0					
ANR	2693410	AdditiveExpression	( ut8 * ) ( & tinst ) + 1		2692937	1		+			
ANR	2693411	CastExpression	( ut8 * ) ( & tinst )		2692937	0					
ANR	2693412	CastTarget	ut8 *		2692937	0					
ANR	2693413	UnaryOperationExpression	& tinst		2692937	1					
ANR	2693414	UnaryOperator	&		2692937	0					
ANR	2693415	Identifier	tinst		2692937	1					
ANR	2693416	PrimaryExpression	1		2692937	1					
ANR	2693417	ReturnStatement	return size ;	944:2:29781:29792	2692937	6	True				
ANR	2693418	Identifier	size		2692937	0					
ANR	2693419	ReturnStatement	return size ;	946:1:29798:29809	2692937	19	True				
ANR	2693420	Identifier	size		2692937	0					
ANR	2693421	ReturnType	int		2692937	1					
ANR	2693422	Identifier	arm_disasm_one_insn		2692937	2					
ANR	2693423	ParameterList	struct winedbg_arm_insn * arminsn		2692937	3					
ANR	2693424	Parameter	struct winedbg_arm_insn * arminsn	867:24:27738:27769	2692937	0	True				
ANR	2693425	ParameterType	struct winedbg_arm_insn *		2692937	0					
ANR	2693426	Identifier	arminsn		2692937	1					
ANR	2693427	CFGEntryNode	ENTRY		2692937		True				
ANR	2693428	CFGExitNode	EXIT		2692937		True				
ANR	2693429	Symbol	t2_ptr -> pattern		2692937						
ANR	2693430	Symbol	& tbl_thumb16		2692937						
ANR	2693431	Symbol	t_ptr -> mask		2692937						
ANR	2693432	Symbol	THUMB2_INSN_SIZE		2692937						
ANR	2693433	Symbol	* ( ( ut8 * ) ( & tinst ) )		2692937						
ANR	2693434	Symbol	& inst		2692937						
ANR	2693435	Symbol	arminsn -> str_asm		2692937						
ANR	2693436	Symbol	t2_ptr -> func		2692937						
ANR	2693437	Symbol	THUMB_INSN_SIZE		2692937						
ANR	2693438	Symbol	a_ptr		2692937						
ANR	2693439	Symbol	db_get_inst		2692937						
ANR	2693440	Symbol	& tbl_arm		2692937						
ANR	2693441	Symbol	& tinst		2692937						
ANR	2693442	Symbol	* t_ptr		2692937						
ANR	2693443	Symbol	t_ptr -> func		2692937						
ANR	2693444	Symbol	arminsn -> buf		2692937						
ANR	2693445	Symbol	t_ptr -> pattern		2692937						
ANR	2693446	Symbol	arminsn		2692937						
ANR	2693447	Symbol	a_ptr -> mask		2692937						
ANR	2693448	Symbol	ARM_INSN_SIZE		2692937						
ANR	2693449	Symbol	t_ptr		2692937						
ANR	2693450	Symbol	tinst		2692937						
ANR	2693451	Symbol	arminsn -> str_hex		2692937						
ANR	2693452	Symbol	* arminsn		2692937						
ANR	2693453	Symbol	* ( ( ut8 * ) ( & inst ) + 1 )		2692937						
ANR	2693454	Symbol	arminsn -> thumb		2692937						
ANR	2693455	Symbol	* ( ( ut8 * ) ( & inst ) + 2 )		2692937						
ANR	2693456	Symbol	t2_ptr		2692937						
ANR	2693457	Symbol	* ( ( ut8 * ) ( & inst ) + 3 )		2692937						
ANR	2693458	Symbol	size		2692937						
ANR	2693459	Symbol	a_ptr -> pattern		2692937						
ANR	2693460	Symbol	* ( ( ut8 * ) ( & tinst ) + 1 )		2692937						
ANR	2693461	Symbol	inst		2692937						
ANR	2693462	Symbol	r_str_appendf		2692937						
ANR	2693463	Symbol	& tbl_thumb32		2692937						
ANR	2693464	Symbol	* ( ( ut8 * ) ( & inst ) )		2692937						
ANR	2693465	Symbol	matched		2692937						
ANR	2693466	Symbol	t2_ptr -> mask		2692937						
ANR	2693467	Symbol	* t2_ptr		2692937						
ANR	2693468	Symbol	a_ptr -> func		2692937						
ANR	2693469	Symbol	* a_ptr		2692937						
