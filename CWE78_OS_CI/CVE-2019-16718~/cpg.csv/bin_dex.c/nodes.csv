command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	505518	File	data/converged/CVE-2019-16718~_radare2/bin_dex.c								
ANR	505519	DeclStmt									
ANR	505520	Decl							struct r_bin_dbginfo_t	struct r_bin_dbginfo_t	r_bin_dbginfo_dex
ANR	505521	DeclStmt									
ANR	505522	Decl							bool	bool	dexdump
ANR	505523	DeclStmt									
ANR	505524	Decl							Sdb	Sdb *	mdb
ANR	505525	DeclStmt									
ANR	505526	Decl							const char	const char *	dexSubsystem
ANR	505527	DeclStmt									
ANR	505528	Decl							bool	bool	simplifiedDemangling
ANR	505529	Function	get_method_flags	22:0:529:1633							
ANR	505530	FunctionDef	get_method_flags (ut64 MA)		505529	0					
ANR	505531	CompoundStatement		22:38:567:1633	505529	0					
ANR	505532	IdentifierDeclStatement	ut64 flags = 0 ;	23:1:570:584	505529	0	True				
ANR	505533	IdentifierDecl	flags = 0		505529	0					
ANR	505534	IdentifierDeclType	ut64		505529	0					
ANR	505535	Identifier	flags		505529	1					
ANR	505536	AssignmentExpression	flags = 0		505529	2		=			
ANR	505537	Identifier	flags		505529	0					
ANR	505538	PrimaryExpression	0		505529	1					
ANR	505539	IfStatement	if ( MA & R_DEX_METH_PUBLIC )		505529	1					
ANR	505540	Condition	MA & R_DEX_METH_PUBLIC	24:5:591:612	505529	0	True				
ANR	505541	BitAndExpression	MA & R_DEX_METH_PUBLIC		505529	0		&			
ANR	505542	Identifier	MA		505529	0					
ANR	505543	Identifier	R_DEX_METH_PUBLIC		505529	1					
ANR	505544	CompoundStatement		3:29:47:47	505529	1					
ANR	505545	ExpressionStatement	flags |= R_BIN_METH_PUBLIC	25:2:619:645	505529	0	True				
ANR	505546	AssignmentExpression	flags |= R_BIN_METH_PUBLIC		505529	0		|=			
ANR	505547	Identifier	flags		505529	0					
ANR	505548	Identifier	R_BIN_METH_PUBLIC		505529	1					
ANR	505549	IfStatement	if ( MA & R_DEX_METH_PRIVATE )		505529	2					
ANR	505550	Condition	MA & R_DEX_METH_PRIVATE	27:5:655:677	505529	0	True				
ANR	505551	BitAndExpression	MA & R_DEX_METH_PRIVATE		505529	0		&			
ANR	505552	Identifier	MA		505529	0					
ANR	505553	Identifier	R_DEX_METH_PRIVATE		505529	1					
ANR	505554	CompoundStatement		6:30:112:112	505529	1					
ANR	505555	ExpressionStatement	flags |= R_BIN_METH_PRIVATE	28:2:684:711	505529	0	True				
ANR	505556	AssignmentExpression	flags |= R_BIN_METH_PRIVATE		505529	0		|=			
ANR	505557	Identifier	flags		505529	0					
ANR	505558	Identifier	R_BIN_METH_PRIVATE		505529	1					
ANR	505559	IfStatement	if ( MA & R_DEX_METH_PROTECTED )		505529	3					
ANR	505560	Condition	MA & R_DEX_METH_PROTECTED	30:5:721:745	505529	0	True				
ANR	505561	BitAndExpression	MA & R_DEX_METH_PROTECTED		505529	0		&			
ANR	505562	Identifier	MA		505529	0					
ANR	505563	Identifier	R_DEX_METH_PROTECTED		505529	1					
ANR	505564	CompoundStatement		9:32:180:180	505529	1					
ANR	505565	ExpressionStatement	flags |= R_BIN_METH_PROTECTED	31:2:752:781	505529	0	True				
ANR	505566	AssignmentExpression	flags |= R_BIN_METH_PROTECTED		505529	0		|=			
ANR	505567	Identifier	flags		505529	0					
ANR	505568	Identifier	R_BIN_METH_PROTECTED		505529	1					
ANR	505569	IfStatement	if ( MA & R_DEX_METH_STATIC )		505529	4					
ANR	505570	Condition	MA & R_DEX_METH_STATIC	33:5:791:812	505529	0	True				
ANR	505571	BitAndExpression	MA & R_DEX_METH_STATIC		505529	0		&			
ANR	505572	Identifier	MA		505529	0					
ANR	505573	Identifier	R_DEX_METH_STATIC		505529	1					
ANR	505574	CompoundStatement		12:29:247:247	505529	1					
ANR	505575	ExpressionStatement	flags |= R_BIN_METH_STATIC	34:2:819:845	505529	0	True				
ANR	505576	AssignmentExpression	flags |= R_BIN_METH_STATIC		505529	0		|=			
ANR	505577	Identifier	flags		505529	0					
ANR	505578	Identifier	R_BIN_METH_STATIC		505529	1					
ANR	505579	IfStatement	if ( MA & R_DEX_METH_FINAL )		505529	5					
ANR	505580	Condition	MA & R_DEX_METH_FINAL	36:5:855:875	505529	0	True				
ANR	505581	BitAndExpression	MA & R_DEX_METH_FINAL		505529	0		&			
ANR	505582	Identifier	MA		505529	0					
ANR	505583	Identifier	R_DEX_METH_FINAL		505529	1					
ANR	505584	CompoundStatement		15:28:310:310	505529	1					
ANR	505585	ExpressionStatement	flags |= R_BIN_METH_FINAL	37:2:882:907	505529	0	True				
ANR	505586	AssignmentExpression	flags |= R_BIN_METH_FINAL		505529	0		|=			
ANR	505587	Identifier	flags		505529	0					
ANR	505588	Identifier	R_BIN_METH_FINAL		505529	1					
ANR	505589	IfStatement	if ( MA & R_DEX_METH_SYNCHRONIZED )		505529	6					
ANR	505590	Condition	MA & R_DEX_METH_SYNCHRONIZED	39:5:917:944	505529	0	True				
ANR	505591	BitAndExpression	MA & R_DEX_METH_SYNCHRONIZED		505529	0		&			
ANR	505592	Identifier	MA		505529	0					
ANR	505593	Identifier	R_DEX_METH_SYNCHRONIZED		505529	1					
ANR	505594	CompoundStatement		18:35:379:379	505529	1					
ANR	505595	ExpressionStatement	flags |= R_BIN_METH_SYNCHRONIZED	40:2:951:983	505529	0	True				
ANR	505596	AssignmentExpression	flags |= R_BIN_METH_SYNCHRONIZED		505529	0		|=			
ANR	505597	Identifier	flags		505529	0					
ANR	505598	Identifier	R_BIN_METH_SYNCHRONIZED		505529	1					
ANR	505599	IfStatement	if ( MA & R_DEX_METH_BRIDGE )		505529	7					
ANR	505600	Condition	MA & R_DEX_METH_BRIDGE	42:5:993:1014	505529	0	True				
ANR	505601	BitAndExpression	MA & R_DEX_METH_BRIDGE		505529	0		&			
ANR	505602	Identifier	MA		505529	0					
ANR	505603	Identifier	R_DEX_METH_BRIDGE		505529	1					
ANR	505604	CompoundStatement		21:29:449:449	505529	1					
ANR	505605	ExpressionStatement	flags |= R_BIN_METH_BRIDGE	43:2:1021:1047	505529	0	True				
ANR	505606	AssignmentExpression	flags |= R_BIN_METH_BRIDGE		505529	0		|=			
ANR	505607	Identifier	flags		505529	0					
ANR	505608	Identifier	R_BIN_METH_BRIDGE		505529	1					
ANR	505609	IfStatement	if ( MA & R_DEX_METH_VARARGS )		505529	8					
ANR	505610	Condition	MA & R_DEX_METH_VARARGS	45:5:1057:1079	505529	0	True				
ANR	505611	BitAndExpression	MA & R_DEX_METH_VARARGS		505529	0		&			
ANR	505612	Identifier	MA		505529	0					
ANR	505613	Identifier	R_DEX_METH_VARARGS		505529	1					
ANR	505614	CompoundStatement		24:30:514:514	505529	1					
ANR	505615	ExpressionStatement	flags |= R_BIN_METH_VARARGS	46:2:1086:1113	505529	0	True				
ANR	505616	AssignmentExpression	flags |= R_BIN_METH_VARARGS		505529	0		|=			
ANR	505617	Identifier	flags		505529	0					
ANR	505618	Identifier	R_BIN_METH_VARARGS		505529	1					
ANR	505619	IfStatement	if ( MA & R_DEX_METH_NATIVE )		505529	9					
ANR	505620	Condition	MA & R_DEX_METH_NATIVE	48:5:1123:1144	505529	0	True				
ANR	505621	BitAndExpression	MA & R_DEX_METH_NATIVE		505529	0		&			
ANR	505622	Identifier	MA		505529	0					
ANR	505623	Identifier	R_DEX_METH_NATIVE		505529	1					
ANR	505624	CompoundStatement		27:29:579:579	505529	1					
ANR	505625	ExpressionStatement	flags |= R_BIN_METH_NATIVE	49:2:1151:1177	505529	0	True				
ANR	505626	AssignmentExpression	flags |= R_BIN_METH_NATIVE		505529	0		|=			
ANR	505627	Identifier	flags		505529	0					
ANR	505628	Identifier	R_BIN_METH_NATIVE		505529	1					
ANR	505629	IfStatement	if ( MA & R_DEX_METH_ABSTRACT )		505529	10					
ANR	505630	Condition	MA & R_DEX_METH_ABSTRACT	51:5:1187:1210	505529	0	True				
ANR	505631	BitAndExpression	MA & R_DEX_METH_ABSTRACT		505529	0		&			
ANR	505632	Identifier	MA		505529	0					
ANR	505633	Identifier	R_DEX_METH_ABSTRACT		505529	1					
ANR	505634	CompoundStatement		30:31:645:645	505529	1					
ANR	505635	ExpressionStatement	flags |= R_BIN_METH_ABSTRACT	52:2:1217:1245	505529	0	True				
ANR	505636	AssignmentExpression	flags |= R_BIN_METH_ABSTRACT		505529	0		|=			
ANR	505637	Identifier	flags		505529	0					
ANR	505638	Identifier	R_BIN_METH_ABSTRACT		505529	1					
ANR	505639	IfStatement	if ( MA & R_DEX_METH_STRICT )		505529	11					
ANR	505640	Condition	MA & R_DEX_METH_STRICT	54:5:1255:1276	505529	0	True				
ANR	505641	BitAndExpression	MA & R_DEX_METH_STRICT		505529	0		&			
ANR	505642	Identifier	MA		505529	0					
ANR	505643	Identifier	R_DEX_METH_STRICT		505529	1					
ANR	505644	CompoundStatement		33:29:711:711	505529	1					
ANR	505645	ExpressionStatement	flags |= R_BIN_METH_STRICT	55:2:1283:1309	505529	0	True				
ANR	505646	AssignmentExpression	flags |= R_BIN_METH_STRICT		505529	0		|=			
ANR	505647	Identifier	flags		505529	0					
ANR	505648	Identifier	R_BIN_METH_STRICT		505529	1					
ANR	505649	IfStatement	if ( MA & R_DEX_METH_SYNTHETIC )		505529	12					
ANR	505650	Condition	MA & R_DEX_METH_SYNTHETIC	57:5:1319:1343	505529	0	True				
ANR	505651	BitAndExpression	MA & R_DEX_METH_SYNTHETIC		505529	0		&			
ANR	505652	Identifier	MA		505529	0					
ANR	505653	Identifier	R_DEX_METH_SYNTHETIC		505529	1					
ANR	505654	CompoundStatement		36:32:778:778	505529	1					
ANR	505655	ExpressionStatement	flags |= R_BIN_METH_SYNTHETIC	58:2:1350:1379	505529	0	True				
ANR	505656	AssignmentExpression	flags |= R_BIN_METH_SYNTHETIC		505529	0		|=			
ANR	505657	Identifier	flags		505529	0					
ANR	505658	Identifier	R_BIN_METH_SYNTHETIC		505529	1					
ANR	505659	IfStatement	if ( MA & R_DEX_METH_MIRANDA )		505529	13					
ANR	505660	Condition	MA & R_DEX_METH_MIRANDA	60:5:1389:1411	505529	0	True				
ANR	505661	BitAndExpression	MA & R_DEX_METH_MIRANDA		505529	0		&			
ANR	505662	Identifier	MA		505529	0					
ANR	505663	Identifier	R_DEX_METH_MIRANDA		505529	1					
ANR	505664	CompoundStatement		39:30:846:846	505529	1					
ANR	505665	ExpressionStatement	flags |= R_BIN_METH_MIRANDA	61:2:1418:1445	505529	0	True				
ANR	505666	AssignmentExpression	flags |= R_BIN_METH_MIRANDA		505529	0		|=			
ANR	505667	Identifier	flags		505529	0					
ANR	505668	Identifier	R_BIN_METH_MIRANDA		505529	1					
ANR	505669	IfStatement	if ( MA & R_DEX_METH_CONSTRUCTOR )		505529	14					
ANR	505670	Condition	MA & R_DEX_METH_CONSTRUCTOR	63:5:1455:1481	505529	0	True				
ANR	505671	BitAndExpression	MA & R_DEX_METH_CONSTRUCTOR		505529	0		&			
ANR	505672	Identifier	MA		505529	0					
ANR	505673	Identifier	R_DEX_METH_CONSTRUCTOR		505529	1					
ANR	505674	CompoundStatement		42:34:916:916	505529	1					
ANR	505675	ExpressionStatement	flags |= R_BIN_METH_CONSTRUCTOR	64:2:1488:1519	505529	0	True				
ANR	505676	AssignmentExpression	flags |= R_BIN_METH_CONSTRUCTOR		505529	0		|=			
ANR	505677	Identifier	flags		505529	0					
ANR	505678	Identifier	R_BIN_METH_CONSTRUCTOR		505529	1					
ANR	505679	IfStatement	if ( MA & R_DEX_METH_DECLARED_SYNCHRONIZED )		505529	15					
ANR	505680	Condition	MA & R_DEX_METH_DECLARED_SYNCHRONIZED	66:5:1529:1565	505529	0	True				
ANR	505681	BitAndExpression	MA & R_DEX_METH_DECLARED_SYNCHRONIZED		505529	0		&			
ANR	505682	Identifier	MA		505529	0					
ANR	505683	Identifier	R_DEX_METH_DECLARED_SYNCHRONIZED		505529	1					
ANR	505684	CompoundStatement		45:44:1000:1000	505529	1					
ANR	505685	ExpressionStatement	flags |= R_BIN_METH_DECLARED_SYNCHRONIZED	67:2:1572:1613	505529	0	True				
ANR	505686	AssignmentExpression	flags |= R_BIN_METH_DECLARED_SYNCHRONIZED		505529	0		|=			
ANR	505687	Identifier	flags		505529	0					
ANR	505688	Identifier	R_BIN_METH_DECLARED_SYNCHRONIZED		505529	1					
ANR	505689	ReturnStatement	return flags ;	69:1:1619:1631	505529	16	True				
ANR	505690	Identifier	flags		505529	0					
ANR	505691	ReturnType	static ut64		505529	1					
ANR	505692	Identifier	get_method_flags		505529	2					
ANR	505693	ParameterList	ut64 MA		505529	3					
ANR	505694	Parameter	ut64 MA	22:29:558:564	505529	0	True				
ANR	505695	ParameterType	ut64		505529	0					
ANR	505696	Identifier	MA		505529	1					
ANR	505697	CFGEntryNode	ENTRY		505529		True				
ANR	505698	CFGExitNode	EXIT		505529		True				
ANR	505699	Symbol	R_DEX_METH_NATIVE		505529						
ANR	505700	Symbol	R_DEX_METH_BRIDGE		505529						
ANR	505701	Symbol	R_BIN_METH_MIRANDA		505529						
ANR	505702	Symbol	flags		505529						
ANR	505703	Symbol	R_DEX_METH_PRIVATE		505529						
ANR	505704	Symbol	R_DEX_METH_PROTECTED		505529						
ANR	505705	Symbol	R_BIN_METH_BRIDGE		505529						
ANR	505706	Symbol	MA		505529						
ANR	505707	Symbol	R_BIN_METH_VARARGS		505529						
ANR	505708	Symbol	R_BIN_METH_CONSTRUCTOR		505529						
ANR	505709	Symbol	R_DEX_METH_CONSTRUCTOR		505529						
ANR	505710	Symbol	R_DEX_METH_SYNTHETIC		505529						
ANR	505711	Symbol	R_DEX_METH_DECLARED_SYNCHRONIZED		505529						
ANR	505712	Symbol	R_BIN_METH_STATIC		505529						
ANR	505713	Symbol	R_DEX_METH_STRICT		505529						
ANR	505714	Symbol	R_DEX_METH_SYNCHRONIZED		505529						
ANR	505715	Symbol	R_BIN_METH_SYNCHRONIZED		505529						
ANR	505716	Symbol	R_BIN_METH_ABSTRACT		505529						
ANR	505717	Symbol	R_DEX_METH_VARARGS		505529						
ANR	505718	Symbol	R_BIN_METH_PUBLIC		505529						
ANR	505719	Symbol	R_DEX_METH_PUBLIC		505529						
ANR	505720	Symbol	R_BIN_METH_DECLARED_SYNCHRONIZED		505529						
ANR	505721	Symbol	R_DEX_METH_FINAL		505529						
ANR	505722	Symbol	R_BIN_METH_PROTECTED		505529						
ANR	505723	Symbol	R_DEX_METH_ABSTRACT		505529						
ANR	505724	Symbol	R_DEX_METH_STATIC		505529						
ANR	505725	Symbol	R_BIN_METH_NATIVE		505529						
ANR	505726	Symbol	R_DEX_METH_MIRANDA		505529						
ANR	505727	Symbol	R_BIN_METH_SYNTHETIC		505529						
ANR	505728	Symbol	R_BIN_METH_FINAL		505529						
ANR	505729	Symbol	R_BIN_METH_STRICT		505529						
ANR	505730	Symbol	R_BIN_METH_PRIVATE		505529						
ANR	505731	Function	offset_of_method_idx	72:0:1636:1829							
ANR	505732	FunctionDef	"offset_of_method_idx (RBinFile * bf , struct r_bin_dex_obj_t * dex , int idx)"		505731	0					
ANR	505733	CompoundStatement		72:85:1721:1829	505731	0					
ANR	505734	ReturnStatement	"return sdb_num_get ( mdb , sdb_fmt ( ""method.%d"" , idx ) , 0 ) ;"	74:1:1772:1827	505731	0	True				
ANR	505735	CallExpression	"sdb_num_get ( mdb , sdb_fmt ( ""method.%d"" , idx ) , 0 )"		505731	0					
ANR	505736	Callee	sdb_num_get		505731	0					
ANR	505737	Identifier	sdb_num_get		505731	0					
ANR	505738	ArgumentList	mdb		505731	1					
ANR	505739	Argument	mdb		505731	0					
ANR	505740	Identifier	mdb		505731	0					
ANR	505741	Argument	"sdb_fmt ( ""method.%d"" , idx )"		505731	1					
ANR	505742	CallExpression	"sdb_fmt ( ""method.%d"" , idx )"		505731	0					
ANR	505743	Callee	sdb_fmt		505731	0					
ANR	505744	Identifier	sdb_fmt		505731	0					
ANR	505745	ArgumentList	"""method.%d"""		505731	1					
ANR	505746	Argument	"""method.%d"""		505731	0					
ANR	505747	PrimaryExpression	"""method.%d"""		505731	0					
ANR	505748	Argument	idx		505731	1					
ANR	505749	Identifier	idx		505731	0					
ANR	505750	Argument	0		505731	2					
ANR	505751	PrimaryExpression	0		505731	0					
ANR	505752	ReturnType	static ut64		505731	1					
ANR	505753	Identifier	offset_of_method_idx		505731	2					
ANR	505754	ParameterList	"RBinFile * bf , struct r_bin_dex_obj_t * dex , int idx"		505731	3					
ANR	505755	Parameter	RBinFile * bf	72:33:1669:1680	505731	0	True				
ANR	505756	ParameterType	RBinFile *		505731	0					
ANR	505757	Identifier	bf		505731	1					
ANR	505758	Parameter	struct r_bin_dex_obj_t * dex	72:47:1683:1709	505731	1	True				
ANR	505759	ParameterType	struct r_bin_dex_obj_t *		505731	0					
ANR	505760	Identifier	dex		505731	1					
ANR	505761	Parameter	int idx	72:76:1712:1718	505731	2	True				
ANR	505762	ParameterType	int		505731	0					
ANR	505763	Identifier	idx		505731	1					
ANR	505764	CFGEntryNode	ENTRY		505731		True				
ANR	505765	CFGExitNode	EXIT		505731		True				
ANR	505766	Symbol	sdb_num_get		505731						
ANR	505767	Symbol	bf		505731						
ANR	505768	Symbol	dex		505731						
ANR	505769	Symbol	mdb		505731						
ANR	505770	Symbol	idx		505731						
ANR	505771	Symbol	sdb_fmt		505731						
ANR	505772	Function	dex_field_offset	77:0:1832:1966							
ANR	505773	FunctionDef	"dex_field_offset (RBinDexObj * bin , int fid)"		505772	0					
ANR	505774	CompoundStatement		77:55:1887:1966	505772	0					
ANR	505775	ReturnStatement	return bin -> header . fields_offset + ( fid * 8 ) ;	78:1:1890:1934	505772	0	True				
ANR	505776	AdditiveExpression	bin -> header . fields_offset + ( fid * 8 )		505772	0		+			
ANR	505777	MemberAccess	bin -> header . fields_offset		505772	0					
ANR	505778	PtrMemberAccess	bin -> header		505772	0					
ANR	505779	Identifier	bin		505772	0					
ANR	505780	Identifier	header		505772	1					
ANR	505781	Identifier	fields_offset		505772	1					
ANR	505782	MultiplicativeExpression	fid * 8		505772	1		*			
ANR	505783	Identifier	fid		505772	0					
ANR	505784	PrimaryExpression	8		505772	1					
ANR	505785	ReturnType	static ut64		505772	1					
ANR	505786	Identifier	dex_field_offset		505772	2					
ANR	505787	ParameterList	"RBinDexObj * bin , int fid"		505772	3					
ANR	505788	Parameter	RBinDexObj * bin	77:29:1861:1875	505772	0	True				
ANR	505789	ParameterType	RBinDexObj *		505772	0					
ANR	505790	Identifier	bin		505772	1					
ANR	505791	Parameter	int fid	77:46:1878:1884	505772	1	True				
ANR	505792	ParameterType	int		505772	0					
ANR	505793	Identifier	fid		505772	1					
ANR	505794	CFGEntryNode	ENTRY		505772		True				
ANR	505795	CFGExitNode	EXIT		505772		True				
ANR	505796	Symbol	fid		505772						
ANR	505797	Symbol	bin		505772						
ANR	505798	Symbol	bin -> header		505772						
ANR	505799	Symbol	bin -> header . fields_offset		505772						
ANR	505800	Symbol	* bin		505772						
ANR	505801	Function	getstr	81:0:1969:2948							
ANR	505802	FunctionDef	"getstr (RBinDexObj * dex , int idx)"		505801	0					
ANR	505803	CompoundStatement		81:46:2015:2948	505801	0					
ANR	505804	IdentifierDeclStatement	ut8 buf [ 6 ] ;	82:1:2018:2028	505801	0	True				
ANR	505805	IdentifierDecl	buf [ 6 ]		505801	0					
ANR	505806	IdentifierDeclType	ut8 [ 6 ]		505801	0					
ANR	505807	Identifier	buf		505801	1					
ANR	505808	PrimaryExpression	6		505801	2					
ANR	505809	IdentifierDeclStatement	ut64 len ;	83:1:2031:2039	505801	1	True				
ANR	505810	IdentifierDecl	len		505801	0					
ANR	505811	IdentifierDeclType	ut64		505801	0					
ANR	505812	Identifier	len		505801	1					
ANR	505813	IdentifierDeclStatement	int uleblen ;	84:1:2042:2053	505801	2	True				
ANR	505814	IdentifierDecl	uleblen		505801	0					
ANR	505815	IdentifierDeclType	int		505801	0					
ANR	505816	Identifier	uleblen		505801	1					
ANR	505817	IfStatement	if ( ! dex || idx < 0 || idx >= dex -> header . strings_size || ! dex -> strings )		505801	3					
ANR	505818	Condition	! dex || idx < 0 || idx >= dex -> header . strings_size || ! dex -> strings	86:5:2091:2157	505801	0	True				
ANR	505819	OrExpression	! dex || idx < 0 || idx >= dex -> header . strings_size || ! dex -> strings		505801	0		||			
ANR	505820	UnaryOperationExpression	! dex		505801	0					
ANR	505821	UnaryOperator	!		505801	0					
ANR	505822	Identifier	dex		505801	1					
ANR	505823	OrExpression	idx < 0 || idx >= dex -> header . strings_size || ! dex -> strings		505801	1		||			
ANR	505824	RelationalExpression	idx < 0		505801	0		<			
ANR	505825	Identifier	idx		505801	0					
ANR	505826	PrimaryExpression	0		505801	1					
ANR	505827	OrExpression	idx >= dex -> header . strings_size || ! dex -> strings		505801	1		||			
ANR	505828	RelationalExpression	idx >= dex -> header . strings_size		505801	0		>=			
ANR	505829	Identifier	idx		505801	0					
ANR	505830	MemberAccess	dex -> header . strings_size		505801	1					
ANR	505831	PtrMemberAccess	dex -> header		505801	0					
ANR	505832	Identifier	dex		505801	0					
ANR	505833	Identifier	header		505801	1					
ANR	505834	Identifier	strings_size		505801	1					
ANR	505835	UnaryOperationExpression	! dex -> strings		505801	1					
ANR	505836	UnaryOperator	!		505801	0					
ANR	505837	PtrMemberAccess	dex -> strings		505801	1					
ANR	505838	Identifier	dex		505801	0					
ANR	505839	Identifier	strings		505801	1					
ANR	505840	CompoundStatement		6:74:144:144	505801	1					
ANR	505841	ReturnStatement	return NULL ;	87:2:2164:2175	505801	0	True				
ANR	505842	Identifier	NULL		505801	0					
ANR	505843	IfStatement	if ( dex -> strings [ idx ] >= dex -> size )		505801	4					
ANR	505844	Condition	dex -> strings [ idx ] >= dex -> size	89:5:2185:2214	505801	0	True				
ANR	505845	RelationalExpression	dex -> strings [ idx ] >= dex -> size		505801	0		>=			
ANR	505846	ArrayIndexing	dex -> strings [ idx ]		505801	0					
ANR	505847	PtrMemberAccess	dex -> strings		505801	0					
ANR	505848	Identifier	dex		505801	0					
ANR	505849	Identifier	strings		505801	1					
ANR	505850	Identifier	idx		505801	1					
ANR	505851	PtrMemberAccess	dex -> size		505801	1					
ANR	505852	Identifier	dex		505801	0					
ANR	505853	Identifier	size		505801	1					
ANR	505854	CompoundStatement		9:37:201:201	505801	1					
ANR	505855	ReturnStatement	return NULL ;	90:2:2221:2232	505801	0	True				
ANR	505856	Identifier	NULL		505801	0					
ANR	505857	IfStatement	"if ( r_buf_read_at ( dex -> b , dex -> strings [ idx ] , buf , sizeof ( buf ) ) < 1 )"		505801	5					
ANR	505858	Condition	"r_buf_read_at ( dex -> b , dex -> strings [ idx ] , buf , sizeof ( buf ) ) < 1"	92:5:2242:2305	505801	0	True				
ANR	505859	RelationalExpression	"r_buf_read_at ( dex -> b , dex -> strings [ idx ] , buf , sizeof ( buf ) ) < 1"		505801	0		<			
ANR	505860	CallExpression	"r_buf_read_at ( dex -> b , dex -> strings [ idx ] , buf , sizeof ( buf ) )"		505801	0					
ANR	505861	Callee	r_buf_read_at		505801	0					
ANR	505862	Identifier	r_buf_read_at		505801	0					
ANR	505863	ArgumentList	dex -> b		505801	1					
ANR	505864	Argument	dex -> b		505801	0					
ANR	505865	PtrMemberAccess	dex -> b		505801	0					
ANR	505866	Identifier	dex		505801	0					
ANR	505867	Identifier	b		505801	1					
ANR	505868	Argument	dex -> strings [ idx ]		505801	1					
ANR	505869	ArrayIndexing	dex -> strings [ idx ]		505801	0					
ANR	505870	PtrMemberAccess	dex -> strings		505801	0					
ANR	505871	Identifier	dex		505801	0					
ANR	505872	Identifier	strings		505801	1					
ANR	505873	Identifier	idx		505801	1					
ANR	505874	Argument	buf		505801	2					
ANR	505875	Identifier	buf		505801	0					
ANR	505876	Argument	sizeof ( buf )		505801	3					
ANR	505877	SizeofExpression	sizeof ( buf )		505801	0					
ANR	505878	Sizeof	sizeof		505801	0					
ANR	505879	SizeofOperand	buf		505801	1					
ANR	505880	PrimaryExpression	1		505801	1					
ANR	505881	CompoundStatement		12:71:292:292	505801	1					
ANR	505882	ReturnStatement	return NULL ;	93:2:2312:2323	505801	0	True				
ANR	505883	Identifier	NULL		505801	0					
ANR	505884	ExpressionStatement	"r_buf_write_at ( dex -> b , r_buf_size ( dex -> b ) - 1 , ( ut8 * ) ""\\x00"" , 1 )"	95:1:2329:2395	505801	6	True				
ANR	505885	CallExpression	"r_buf_write_at ( dex -> b , r_buf_size ( dex -> b ) - 1 , ( ut8 * ) ""\\x00"" , 1 )"		505801	0					
ANR	505886	Callee	r_buf_write_at		505801	0					
ANR	505887	Identifier	r_buf_write_at		505801	0					
ANR	505888	ArgumentList	dex -> b		505801	1					
ANR	505889	Argument	dex -> b		505801	0					
ANR	505890	PtrMemberAccess	dex -> b		505801	0					
ANR	505891	Identifier	dex		505801	0					
ANR	505892	Identifier	b		505801	1					
ANR	505893	Argument	r_buf_size ( dex -> b ) - 1		505801	1					
ANR	505894	AdditiveExpression	r_buf_size ( dex -> b ) - 1		505801	0		-			
ANR	505895	CallExpression	r_buf_size ( dex -> b )		505801	0					
ANR	505896	Callee	r_buf_size		505801	0					
ANR	505897	Identifier	r_buf_size		505801	0					
ANR	505898	ArgumentList	dex -> b		505801	1					
ANR	505899	Argument	dex -> b		505801	0					
ANR	505900	PtrMemberAccess	dex -> b		505801	0					
ANR	505901	Identifier	dex		505801	0					
ANR	505902	Identifier	b		505801	1					
ANR	505903	PrimaryExpression	1		505801	1					
ANR	505904	Argument	"( ut8 * ) ""\\x00"""		505801	2					
ANR	505905	CastExpression	"( ut8 * ) ""\\x00"""		505801	0					
ANR	505906	CastTarget	ut8 *		505801	0					
ANR	505907	PrimaryExpression	"""\\x00"""		505801	1					
ANR	505908	Argument	1		505801	3					
ANR	505909	PrimaryExpression	1		505801	0					
ANR	505910	ExpressionStatement	"uleblen = r_uleb128 ( buf , sizeof ( buf ) , & len ) - buf"	96:1:2398:2449	505801	7	True				
ANR	505911	AssignmentExpression	"uleblen = r_uleb128 ( buf , sizeof ( buf ) , & len ) - buf"		505801	0		=			
ANR	505912	Identifier	uleblen		505801	0					
ANR	505913	AdditiveExpression	"r_uleb128 ( buf , sizeof ( buf ) , & len ) - buf"		505801	1		-			
ANR	505914	CallExpression	"r_uleb128 ( buf , sizeof ( buf ) , & len )"		505801	0					
ANR	505915	Callee	r_uleb128		505801	0					
ANR	505916	Identifier	r_uleb128		505801	0					
ANR	505917	ArgumentList	buf		505801	1					
ANR	505918	Argument	buf		505801	0					
ANR	505919	Identifier	buf		505801	0					
ANR	505920	Argument	sizeof ( buf )		505801	1					
ANR	505921	SizeofExpression	sizeof ( buf )		505801	0					
ANR	505922	Sizeof	sizeof		505801	0					
ANR	505923	SizeofOperand	buf		505801	1					
ANR	505924	Argument	& len		505801	2					
ANR	505925	UnaryOperationExpression	& len		505801	0					
ANR	505926	UnaryOperator	&		505801	0					
ANR	505927	Identifier	len		505801	1					
ANR	505928	Identifier	buf		505801	1					
ANR	505929	IfStatement	if ( ! uleblen || uleblen >= dex -> size )		505801	8					
ANR	505930	Condition	! uleblen || uleblen >= dex -> size	97:5:2456:2487	505801	0	True				
ANR	505931	OrExpression	! uleblen || uleblen >= dex -> size		505801	0		||			
ANR	505932	UnaryOperationExpression	! uleblen		505801	0					
ANR	505933	UnaryOperator	!		505801	0					
ANR	505934	Identifier	uleblen		505801	1					
ANR	505935	RelationalExpression	uleblen >= dex -> size		505801	1		>=			
ANR	505936	Identifier	uleblen		505801	0					
ANR	505937	PtrMemberAccess	dex -> size		505801	1					
ANR	505938	Identifier	dex		505801	0					
ANR	505939	Identifier	size		505801	1					
ANR	505940	CompoundStatement		17:39:474:474	505801	1					
ANR	505941	ReturnStatement	return NULL ;	98:2:2494:2505	505801	0	True				
ANR	505942	Identifier	NULL		505801	0					
ANR	505943	IfStatement	if ( ! len || len >= dex -> size )		505801	9					
ANR	505944	Condition	! len || len >= dex -> size	100:5:2515:2538	505801	0	True				
ANR	505945	OrExpression	! len || len >= dex -> size		505801	0		||			
ANR	505946	UnaryOperationExpression	! len		505801	0					
ANR	505947	UnaryOperator	!		505801	0					
ANR	505948	Identifier	len		505801	1					
ANR	505949	RelationalExpression	len >= dex -> size		505801	1		>=			
ANR	505950	Identifier	len		505801	0					
ANR	505951	PtrMemberAccess	dex -> size		505801	1					
ANR	505952	Identifier	dex		505801	0					
ANR	505953	Identifier	size		505801	1					
ANR	505954	CompoundStatement		20:31:525:525	505801	1					
ANR	505955	ReturnStatement	return NULL ;	101:2:2545:2556	505801	0	True				
ANR	505956	Identifier	NULL		505801	0					
ANR	505957	IfStatement	if ( dex -> strings [ idx ] + uleblen >= dex -> strings [ idx ] + dex -> header . strings_size )		505801	10					
ANR	505958	Condition	dex -> strings [ idx ] + uleblen >= dex -> strings [ idx ] + dex -> header . strings_size	103:5:2566:2640	505801	0	True				
ANR	505959	RelationalExpression	dex -> strings [ idx ] + uleblen >= dex -> strings [ idx ] + dex -> header . strings_size		505801	0		>=			
ANR	505960	AdditiveExpression	dex -> strings [ idx ] + uleblen		505801	0		+			
ANR	505961	ArrayIndexing	dex -> strings [ idx ]		505801	0					
ANR	505962	PtrMemberAccess	dex -> strings		505801	0					
ANR	505963	Identifier	dex		505801	0					
ANR	505964	Identifier	strings		505801	1					
ANR	505965	Identifier	idx		505801	1					
ANR	505966	Identifier	uleblen		505801	1					
ANR	505967	AdditiveExpression	dex -> strings [ idx ] + dex -> header . strings_size		505801	1		+			
ANR	505968	ArrayIndexing	dex -> strings [ idx ]		505801	0					
ANR	505969	PtrMemberAccess	dex -> strings		505801	0					
ANR	505970	Identifier	dex		505801	0					
ANR	505971	Identifier	strings		505801	1					
ANR	505972	Identifier	idx		505801	1					
ANR	505973	MemberAccess	dex -> header . strings_size		505801	1					
ANR	505974	PtrMemberAccess	dex -> header		505801	0					
ANR	505975	Identifier	dex		505801	0					
ANR	505976	Identifier	header		505801	1					
ANR	505977	Identifier	strings_size		505801	1					
ANR	505978	CompoundStatement		23:82:627:627	505801	1					
ANR	505979	ReturnStatement	return NULL ;	104:2:2647:2658	505801	0	True				
ANR	505980	Identifier	NULL		505801	0					
ANR	505981	IdentifierDeclStatement	"ut8 * ptr = R_NEWS ( ut8 , len + 1 ) ;"	106:1:2664:2696	505801	11	True				
ANR	505982	IdentifierDecl	"* ptr = R_NEWS ( ut8 , len + 1 )"		505801	0					
ANR	505983	IdentifierDeclType	ut8 *		505801	0					
ANR	505984	Identifier	ptr		505801	1					
ANR	505985	AssignmentExpression	"* ptr = R_NEWS ( ut8 , len + 1 )"		505801	2		=			
ANR	505986	Identifier	ptr		505801	0					
ANR	505987	CallExpression	"R_NEWS ( ut8 , len + 1 )"		505801	1					
ANR	505988	Callee	R_NEWS		505801	0					
ANR	505989	Identifier	R_NEWS		505801	0					
ANR	505990	ArgumentList	ut8		505801	1					
ANR	505991	Argument	ut8		505801	0					
ANR	505992	Identifier	ut8		505801	0					
ANR	505993	Argument	len + 1		505801	1					
ANR	505994	AdditiveExpression	len + 1		505801	0		+			
ANR	505995	Identifier	len		505801	0					
ANR	505996	PrimaryExpression	1		505801	1					
ANR	505997	IfStatement	if ( ! ptr )		505801	12					
ANR	505998	Condition	! ptr	107:5:2703:2706	505801	0	True				
ANR	505999	UnaryOperationExpression	! ptr		505801	0					
ANR	506000	UnaryOperator	!		505801	0					
ANR	506001	Identifier	ptr		505801	1					
ANR	506002	CompoundStatement		27:11:693:693	505801	1					
ANR	506003	ReturnStatement	return NULL ;	108:2:2713:2724	505801	0	True				
ANR	506004	Identifier	NULL		505801	0					
ANR	506005	ExpressionStatement	"r_buf_read_at ( dex -> b , dex -> strings [ idx ] + uleblen , ptr , len + 1 )"	110:1:2730:2795	505801	13	True				
ANR	506006	CallExpression	"r_buf_read_at ( dex -> b , dex -> strings [ idx ] + uleblen , ptr , len + 1 )"		505801	0					
ANR	506007	Callee	r_buf_read_at		505801	0					
ANR	506008	Identifier	r_buf_read_at		505801	0					
ANR	506009	ArgumentList	dex -> b		505801	1					
ANR	506010	Argument	dex -> b		505801	0					
ANR	506011	PtrMemberAccess	dex -> b		505801	0					
ANR	506012	Identifier	dex		505801	0					
ANR	506013	Identifier	b		505801	1					
ANR	506014	Argument	dex -> strings [ idx ] + uleblen		505801	1					
ANR	506015	AdditiveExpression	dex -> strings [ idx ] + uleblen		505801	0		+			
ANR	506016	ArrayIndexing	dex -> strings [ idx ]		505801	0					
ANR	506017	PtrMemberAccess	dex -> strings		505801	0					
ANR	506018	Identifier	dex		505801	0					
ANR	506019	Identifier	strings		505801	1					
ANR	506020	Identifier	idx		505801	1					
ANR	506021	Identifier	uleblen		505801	1					
ANR	506022	Argument	ptr		505801	2					
ANR	506023	Identifier	ptr		505801	0					
ANR	506024	Argument	len + 1		505801	3					
ANR	506025	AdditiveExpression	len + 1		505801	0		+			
ANR	506026	Identifier	len		505801	0					
ANR	506027	PrimaryExpression	1		505801	1					
ANR	506028	ExpressionStatement	ptr [ len ] = 0	111:1:2798:2810	505801	14	True				
ANR	506029	AssignmentExpression	ptr [ len ] = 0		505801	0		=			
ANR	506030	ArrayIndexing	ptr [ len ]		505801	0					
ANR	506031	Identifier	ptr		505801	0					
ANR	506032	Identifier	len		505801	1					
ANR	506033	PrimaryExpression	0		505801	1					
ANR	506034	IfStatement	if ( len != r_utf8_strlen ( ptr ) )		505801	15					
ANR	506035	Condition	len != r_utf8_strlen ( ptr )	112:5:2817:2842	505801	0	True				
ANR	506036	EqualityExpression	len != r_utf8_strlen ( ptr )		505801	0		!=			
ANR	506037	Identifier	len		505801	0					
ANR	506038	CallExpression	r_utf8_strlen ( ptr )		505801	1					
ANR	506039	Callee	r_utf8_strlen		505801	0					
ANR	506040	Identifier	r_utf8_strlen		505801	0					
ANR	506041	ArgumentList	ptr		505801	1					
ANR	506042	Argument	ptr		505801	0					
ANR	506043	Identifier	ptr		505801	0					
ANR	506044	CompoundStatement		32:33:829:829	505801	1					
ANR	506045	ReturnStatement	return NULL ;	114:2:2911:2922	505801	0	True				
ANR	506046	Identifier	NULL		505801	0					
ANR	506047	ReturnStatement	return ( char * ) ptr ;	116:1:2928:2946	505801	16	True				
ANR	506048	CastExpression	( char * ) ptr		505801	0					
ANR	506049	CastTarget	char *		505801	0					
ANR	506050	Identifier	ptr		505801	1					
ANR	506051	ReturnType	static char *		505801	1					
ANR	506052	Identifier	getstr		505801	2					
ANR	506053	ParameterList	"RBinDexObj * dex , int idx"		505801	3					
ANR	506054	Parameter	RBinDexObj * dex	81:20:1989:2003	505801	0	True				
ANR	506055	ParameterType	RBinDexObj *		505801	0					
ANR	506056	Identifier	dex		505801	1					
ANR	506057	Parameter	int idx	81:37:2006:2012	505801	1	True				
ANR	506058	ParameterType	int		505801	0					
ANR	506059	Identifier	idx		505801	1					
ANR	506060	CFGEntryNode	ENTRY		505801		True				
ANR	506061	CFGExitNode	EXIT		505801		True				
ANR	506062	Symbol	dex -> size		505801						
ANR	506063	Symbol	dex -> header . strings_size		505801						
ANR	506064	Symbol	len		505801						
ANR	506065	Symbol	dex -> strings		505801						
ANR	506066	Symbol	dex		505801						
ANR	506067	Symbol	* idx		505801						
ANR	506068	Symbol	* ptr		505801						
ANR	506069	Symbol	r_utf8_strlen		505801						
ANR	506070	Symbol	uleblen		505801						
ANR	506071	Symbol	dex -> header		505801						
ANR	506072	Symbol	NULL		505801						
ANR	506073	Symbol	* * dex		505801						
ANR	506074	Symbol	R_NEWS		505801						
ANR	506075	Symbol	ptr		505801						
ANR	506076	Symbol	* dex -> strings		505801						
ANR	506077	Symbol	buf		505801						
ANR	506078	Symbol	dex -> b		505801						
ANR	506079	Symbol	r_buf_read_at		505801						
ANR	506080	Symbol	ut8		505801						
ANR	506081	Symbol	idx		505801						
ANR	506082	Symbol	r_uleb128		505801						
ANR	506083	Symbol	& len		505801						
ANR	506084	Symbol	* dex		505801						
ANR	506085	Symbol	r_buf_size		505801						
ANR	506086	Symbol	* len		505801						
ANR	506087	Function	countOnes	119:0:2951:3311							
ANR	506088	FunctionDef	countOnes (ut32 val)		506087	0					
ANR	506089	CompoundStatement		119:31:2982:3311	506087	0					
ANR	506090	IfStatement	if ( ! val )		506087	0					
ANR	506091	Condition	! val	120:5:2989:2992	506087	0	True				
ANR	506092	UnaryOperationExpression	! val		506087	0					
ANR	506093	UnaryOperator	!		506087	0					
ANR	506094	Identifier	val		506087	1					
ANR	506095	CompoundStatement		2:11:12:12	506087	1					
ANR	506096	ReturnStatement	return 0 ;	121:2:2999:3007	506087	0	True				
ANR	506097	PrimaryExpression	0		506087	0					
ANR	506098	IdentifierDeclStatement	int count = 0 ;	125:1:3079:3092	506087	1	True				
ANR	506099	IdentifierDecl	count = 0		506087	0					
ANR	506100	IdentifierDeclType	int		506087	0					
ANR	506101	Identifier	count		506087	1					
ANR	506102	AssignmentExpression	count = 0		506087	2		=			
ANR	506103	Identifier	count		506087	0					
ANR	506104	PrimaryExpression	0		506087	1					
ANR	506105	ExpressionStatement	val = val - ( ( val >> 1 ) & 0x55555555 )	126:1:3095:3132	506087	2	True				
ANR	506106	AssignmentExpression	val = val - ( ( val >> 1 ) & 0x55555555 )		506087	0		=			
ANR	506107	Identifier	val		506087	0					
ANR	506108	AdditiveExpression	val - ( ( val >> 1 ) & 0x55555555 )		506087	1		-			
ANR	506109	Identifier	val		506087	0					
ANR	506110	BitAndExpression	( val >> 1 ) & 0x55555555		506087	1		&			
ANR	506111	ShiftExpression	val >> 1		506087	0		>>			
ANR	506112	Identifier	val		506087	0					
ANR	506113	PrimaryExpression	1		506087	1					
ANR	506114	PrimaryExpression	0x55555555		506087	1					
ANR	506115	ExpressionStatement	val = ( val & 0x33333333 ) + ( ( val >> 2 ) & 0x33333333 )	127:1:3135:3187	506087	3	True				
ANR	506116	AssignmentExpression	val = ( val & 0x33333333 ) + ( ( val >> 2 ) & 0x33333333 )		506087	0		=			
ANR	506117	Identifier	val		506087	0					
ANR	506118	AdditiveExpression	( val & 0x33333333 ) + ( ( val >> 2 ) & 0x33333333 )		506087	1		+			
ANR	506119	BitAndExpression	val & 0x33333333		506087	0		&			
ANR	506120	Identifier	val		506087	0					
ANR	506121	PrimaryExpression	0x33333333		506087	1					
ANR	506122	BitAndExpression	( val >> 2 ) & 0x33333333		506087	1		&			
ANR	506123	ShiftExpression	val >> 2		506087	0		>>			
ANR	506124	Identifier	val		506087	0					
ANR	506125	PrimaryExpression	2		506087	1					
ANR	506126	PrimaryExpression	0x33333333		506087	1					
ANR	506127	ExpressionStatement	count = ( ( ( val + ( val >> 4 ) ) & 0x0F0F0F0F ) * 0x01010101 ) >> 24	128:1:3190:3252	506087	4	True				
ANR	506128	AssignmentExpression	count = ( ( ( val + ( val >> 4 ) ) & 0x0F0F0F0F ) * 0x01010101 ) >> 24		506087	0		=			
ANR	506129	Identifier	count		506087	0					
ANR	506130	ShiftExpression	( ( ( val + ( val >> 4 ) ) & 0x0F0F0F0F ) * 0x01010101 ) >> 24		506087	1		>>			
ANR	506131	MultiplicativeExpression	( ( val + ( val >> 4 ) ) & 0x0F0F0F0F ) * 0x01010101		506087	0		*			
ANR	506132	BitAndExpression	( val + ( val >> 4 ) ) & 0x0F0F0F0F		506087	0		&			
ANR	506133	AdditiveExpression	val + ( val >> 4 )		506087	0		+			
ANR	506134	Identifier	val		506087	0					
ANR	506135	ShiftExpression	val >> 4		506087	1		>>			
ANR	506136	Identifier	val		506087	0					
ANR	506137	PrimaryExpression	4		506087	1					
ANR	506138	PrimaryExpression	0x0F0F0F0F		506087	1					
ANR	506139	PrimaryExpression	0x01010101		506087	1					
ANR	506140	PrimaryExpression	24		506087	1					
ANR	506141	ReturnStatement	return count ;	129:1:3255:3267	506087	5	True				
ANR	506142	Identifier	count		506087	0					
ANR	506143	ReturnType	static int		506087	1					
ANR	506144	Identifier	countOnes		506087	2					
ANR	506145	ParameterList	ut32 val		506087	3					
ANR	506146	Parameter	ut32 val	119:21:2972:2979	506087	0	True				
ANR	506147	ParameterType	ut32		506087	0					
ANR	506148	Identifier	val		506087	1					
ANR	506149	CFGEntryNode	ENTRY		506087		True				
ANR	506150	CFGExitNode	EXIT		506087		True				
ANR	506151	Symbol	val		506087						
ANR	506152	Symbol	count		506087						
ANR	506153	ClassDef	<unnamed>	135:8:3322:3422							
ANR	506154	DeclStmt									
ANR	506155	Decl									AccessFor
ANR	506156	Function	createAccessFlagStr	142:0:3425:5723							
ANR	506157	FunctionDef	"createAccessFlagStr (ut32 flags , AccessFor forWhat)"		506156	0					
ANR	506158	CompoundStatement		142:64:3489:5723	506156	0					
ANR	506159	Statement	define	143:2:3493:3498	506156	0	True				
ANR	506160	Statement	NUM_FLAGS	143:9:3500:3508	506156	1	True				
ANR	506161	Statement	18	143:19:3510:3511	506156	2	True				
ANR	506162	Statement	static	144:1:3514:3519	506156	3	True				
ANR	506163	Statement	const	144:8:3521:3525	506156	4	True				
ANR	506164	Statement	char	144:14:3527:3530	506156	5	True				
ANR	506165	Statement	*	144:19:3532:3532	506156	6	True				
ANR	506166	Statement	kAccessStrings	144:20:3533:3546	506156	7	True				
ANR	506167	Statement	[	144:34:3547:3547	506156	8	True				
ANR	506168	Statement	kAccessForMAX	144:35:3548:3560	506156	9	True				
ANR	506169	Statement	]	144:48:3561:3561	506156	10	True				
ANR	506170	Statement	[	144:49:3562:3562	506156	11	True				
ANR	506171	Statement	NUM_FLAGS	144:50:3563:3571	506156	12	True				
ANR	506172	Statement	]	144:59:3572:3572	506156	13	True				
ANR	506173	Statement	=	144:61:3574:3574	506156	14	True				
ANR	506174	CompoundStatement		3:63:86:86	506156	15					
ANR	506175	CompoundStatement		4:2:90:90	506156	0					
ANR	506176	Statement	"""PUBLIC"""	147:3:3613:3620	506156	0	True				
ANR	506177	Statement	","	147:11:3621:3621	506156	1	True				
ANR	506178	Statement	"""PRIVATE"""	148:3:3639:3647	506156	2	True				
ANR	506179	Statement	","	148:12:3648:3648	506156	3	True				
ANR	506180	Statement	"""PROTECTED"""	149:3:3666:3676	506156	4	True				
ANR	506181	Statement	","	149:14:3677:3677	506156	5	True				
ANR	506182	Statement	"""STATIC"""	150:3:3695:3702	506156	6	True				
ANR	506183	Statement	","	150:11:3703:3703	506156	7	True				
ANR	506184	Statement	"""FINAL"""	151:3:3721:3727	506156	8	True				
ANR	506185	Statement	","	151:10:3728:3728	506156	9	True				
ANR	506186	Statement	"""?"""	152:3:3746:3748	506156	10	True				
ANR	506187	Statement	","	152:6:3749:3749	506156	11	True				
ANR	506188	Statement	"""?"""	153:3:3767:3769	506156	12	True				
ANR	506189	Statement	","	153:6:3770:3770	506156	13	True				
ANR	506190	Statement	"""?"""	154:3:3788:3790	506156	14	True				
ANR	506191	Statement	","	154:6:3791:3791	506156	15	True				
ANR	506192	Statement	"""?"""	155:3:3809:3811	506156	16	True				
ANR	506193	Statement	","	155:6:3812:3812	506156	17	True				
ANR	506194	Statement	"""INTERFACE"""	156:3:3830:3840	506156	18	True				
ANR	506195	Statement	","	156:14:3841:3841	506156	19	True				
ANR	506196	Statement	"""ABSTRACT"""	157:3:3859:3868	506156	20	True				
ANR	506197	Statement	","	157:13:3869:3869	506156	21	True				
ANR	506198	Statement	"""?"""	158:3:3887:3889	506156	22	True				
ANR	506199	Statement	","	158:6:3890:3890	506156	23	True				
ANR	506200	Statement	"""SYNTHETIC"""	159:3:3908:3918	506156	24	True				
ANR	506201	Statement	","	159:14:3919:3919	506156	25	True				
ANR	506202	Statement	"""ANNOTATION"""	160:3:3937:3948	506156	26	True				
ANR	506203	Statement	","	160:15:3949:3949	506156	27	True				
ANR	506204	Statement	"""ENUM"""	161:3:3967:3972	506156	28	True				
ANR	506205	Statement	","	161:9:3973:3973	506156	29	True				
ANR	506206	Statement	"""?"""	162:3:3991:3993	506156	30	True				
ANR	506207	Statement	","	162:6:3994:3994	506156	31	True				
ANR	506208	Statement	"""VERIFIED"""	163:3:4012:4021	506156	32	True				
ANR	506209	Statement	","	163:13:4022:4022	506156	33	True				
ANR	506210	Statement	"""OPTIMIZED"""	164:3:4041:4051	506156	34	True				
ANR	506211	Statement	","	164:14:4052:4052	506156	35	True				
ANR	506212	Statement	","	165:3:4071:4071	506156	1	True				
ANR	506213	CompoundStatement		25:2:585:585	506156	2					
ANR	506214	Statement	"""PUBLIC"""	168:3:4096:4103	506156	0	True				
ANR	506215	Statement	","	168:11:4104:4104	506156	1	True				
ANR	506216	Statement	"""PRIVATE"""	169:3:4122:4130	506156	2	True				
ANR	506217	Statement	","	169:12:4131:4131	506156	3	True				
ANR	506218	Statement	"""PROTECTED"""	170:3:4149:4159	506156	4	True				
ANR	506219	Statement	","	170:14:4160:4160	506156	5	True				
ANR	506220	Statement	"""STATIC"""	171:3:4178:4185	506156	6	True				
ANR	506221	Statement	","	171:11:4186:4186	506156	7	True				
ANR	506222	Statement	"""FINAL"""	172:3:4204:4210	506156	8	True				
ANR	506223	Statement	","	172:10:4211:4211	506156	9	True				
ANR	506224	Statement	"""SYNCHRONIZED"""	173:3:4229:4242	506156	10	True				
ANR	506225	Statement	","	173:17:4243:4243	506156	11	True				
ANR	506226	Statement	"""BRIDGE"""	174:3:4261:4268	506156	12	True				
ANR	506227	Statement	","	174:11:4269:4269	506156	13	True				
ANR	506228	Statement	"""VARARGS"""	175:3:4287:4295	506156	14	True				
ANR	506229	Statement	","	175:12:4296:4296	506156	15	True				
ANR	506230	Statement	"""NATIVE"""	176:3:4314:4321	506156	16	True				
ANR	506231	Statement	","	176:11:4322:4322	506156	17	True				
ANR	506232	Statement	"""?"""	177:3:4340:4342	506156	18	True				
ANR	506233	Statement	","	177:6:4343:4343	506156	19	True				
ANR	506234	Statement	"""ABSTRACT"""	178:3:4361:4370	506156	20	True				
ANR	506235	Statement	","	178:13:4371:4371	506156	21	True				
ANR	506236	Statement	"""STRICT"""	179:3:4389:4396	506156	22	True				
ANR	506237	Statement	","	179:11:4397:4397	506156	23	True				
ANR	506238	Statement	"""SYNTHETIC"""	180:3:4415:4425	506156	24	True				
ANR	506239	Statement	","	180:14:4426:4426	506156	25	True				
ANR	506240	Statement	"""?"""	181:3:4444:4446	506156	26	True				
ANR	506241	Statement	","	181:6:4447:4447	506156	27	True				
ANR	506242	Statement	"""?"""	182:3:4465:4467	506156	28	True				
ANR	506243	Statement	","	182:6:4468:4468	506156	29	True				
ANR	506244	Statement	"""MIRANDA"""	183:3:4486:4494	506156	30	True				
ANR	506245	Statement	","	183:12:4495:4495	506156	31	True				
ANR	506246	Statement	"""CONSTRUCTOR"""	184:3:4513:4525	506156	32	True				
ANR	506247	Statement	","	184:16:4526:4526	506156	33	True				
ANR	506248	Statement	"""DECLARED_SYNCHRONIZED"""	185:3:4545:4567	506156	34	True				
ANR	506249	Statement	","	185:26:4568:4568	506156	35	True				
ANR	506250	Statement	","	186:3:4587:4587	506156	3	True				
ANR	506251	CompoundStatement		46:2:1101:1101	506156	4					
ANR	506252	Statement	"""PUBLIC"""	189:3:4611:4618	506156	0	True				
ANR	506253	Statement	","	189:11:4619:4619	506156	1	True				
ANR	506254	Statement	"""PRIVATE"""	190:3:4637:4645	506156	2	True				
ANR	506255	Statement	","	190:12:4646:4646	506156	3	True				
ANR	506256	Statement	"""PROTECTED"""	191:3:4664:4674	506156	4	True				
ANR	506257	Statement	","	191:14:4675:4675	506156	5	True				
ANR	506258	Statement	"""STATIC"""	192:3:4693:4700	506156	6	True				
ANR	506259	Statement	","	192:11:4701:4701	506156	7	True				
ANR	506260	Statement	"""FINAL"""	193:3:4719:4725	506156	8	True				
ANR	506261	Statement	","	193:10:4726:4726	506156	9	True				
ANR	506262	Statement	"""?"""	194:3:4744:4746	506156	10	True				
ANR	506263	Statement	","	194:6:4747:4747	506156	11	True				
ANR	506264	Statement	"""VOLATILE"""	195:3:4765:4774	506156	12	True				
ANR	506265	Statement	","	195:13:4775:4775	506156	13	True				
ANR	506266	Statement	"""TRANSIENT"""	196:3:4793:4803	506156	14	True				
ANR	506267	Statement	","	196:14:4804:4804	506156	15	True				
ANR	506268	Statement	"""?"""	197:3:4822:4824	506156	16	True				
ANR	506269	Statement	","	197:6:4825:4825	506156	17	True				
ANR	506270	Statement	"""?"""	198:3:4843:4845	506156	18	True				
ANR	506271	Statement	","	198:6:4846:4846	506156	19	True				
ANR	506272	Statement	"""?"""	199:3:4864:4866	506156	20	True				
ANR	506273	Statement	","	199:6:4867:4867	506156	21	True				
ANR	506274	Statement	"""?"""	200:3:4885:4887	506156	22	True				
ANR	506275	Statement	","	200:6:4888:4888	506156	23	True				
ANR	506276	Statement	"""SYNTHETIC"""	201:3:4906:4916	506156	24	True				
ANR	506277	Statement	","	201:14:4917:4917	506156	25	True				
ANR	506278	Statement	"""?"""	202:3:4935:4937	506156	26	True				
ANR	506279	Statement	","	202:6:4938:4938	506156	27	True				
ANR	506280	Statement	"""ENUM"""	203:3:4956:4961	506156	28	True				
ANR	506281	Statement	","	203:9:4962:4962	506156	29	True				
ANR	506282	Statement	"""?"""	204:3:4980:4982	506156	30	True				
ANR	506283	Statement	","	204:6:4983:4983	506156	31	True				
ANR	506284	Statement	"""?"""	205:3:5001:5003	506156	32	True				
ANR	506285	Statement	","	205:6:5004:5004	506156	33	True				
ANR	506286	Statement	"""?"""	206:3:5023:5025	506156	34	True				
ANR	506287	Statement	","	206:6:5026:5026	506156	35	True				
ANR	506288	Statement	","	207:3:5045:5045	506156	5	True				
ANR	506289	ExpressionStatement		208:2:5049:5049	506156	16	True				
ANR	506290	IdentifierDeclStatement	"int i , count = countOnes ( flags ) ;"	209:1:5052:5084	506156	17	True				
ANR	506291	IdentifierDecl	i		506156	0					
ANR	506292	IdentifierDeclType	int		506156	0					
ANR	506293	Identifier	i		506156	1					
ANR	506294	IdentifierDecl	count = countOnes ( flags )		506156	1					
ANR	506295	IdentifierDeclType	int		506156	0					
ANR	506296	Identifier	count		506156	1					
ANR	506297	AssignmentExpression	count = countOnes ( flags )		506156	2		=			
ANR	506298	Identifier	count		506156	0					
ANR	506299	CallExpression	countOnes ( flags )		506156	1					
ANR	506300	Callee	countOnes		506156	0					
ANR	506301	Identifier	countOnes		506156	0					
ANR	506302	ArgumentList	flags		506156	1					
ANR	506303	Argument	flags		506156	0					
ANR	506304	Identifier	flags		506156	0					
ANR	506305	IdentifierDeclStatement	const int kLongest = 21 ;	210:1:5087:5110	506156	18	True				
ANR	506306	IdentifierDecl	kLongest = 21		506156	0					
ANR	506307	IdentifierDeclType	const int		506156	0					
ANR	506308	Identifier	kLongest		506156	1					
ANR	506309	AssignmentExpression	kLongest = 21		506156	2		=			
ANR	506310	Identifier	kLongest		506156	0					
ANR	506311	PrimaryExpression	21		506156	1					
ANR	506312	IdentifierDeclStatement	const int maxSize = ( count + 1 ) * ( kLongest + 1 ) ;	211:1:5113:5161	506156	19	True				
ANR	506313	IdentifierDecl	maxSize = ( count + 1 ) * ( kLongest + 1 )		506156	0					
ANR	506314	IdentifierDeclType	const int		506156	0					
ANR	506315	Identifier	maxSize		506156	1					
ANR	506316	AssignmentExpression	maxSize = ( count + 1 ) * ( kLongest + 1 )		506156	2		=			
ANR	506317	Identifier	maxSize		506156	0					
ANR	506318	MultiplicativeExpression	( count + 1 ) * ( kLongest + 1 )		506156	1		*			
ANR	506319	AdditiveExpression	count + 1		506156	0		+			
ANR	506320	Identifier	count		506156	0					
ANR	506321	PrimaryExpression	1		506156	1					
ANR	506322	AdditiveExpression	kLongest + 1		506156	1		+			
ANR	506323	Identifier	kLongest		506156	0					
ANR	506324	PrimaryExpression	1		506156	1					
ANR	506325	IdentifierDeclStatement	"char * str , * cp ;"	212:1:5164:5178	506156	20	True				
ANR	506326	IdentifierDecl	* str		506156	0					
ANR	506327	IdentifierDeclType	char *		506156	0					
ANR	506328	Identifier	str		506156	1					
ANR	506329	IdentifierDecl	* cp		506156	1					
ANR	506330	IdentifierDeclType	char *		506156	0					
ANR	506331	Identifier	cp		506156	1					
ANR	506332	IfStatement	if ( count < 1 || ( count * ( kLongest + 1 ) ) < 1 )		506156	21					
ANR	506333	Condition	count < 1 || ( count * ( kLongest + 1 ) ) < 1	214:5:5216:5254	506156	0	True				
ANR	506334	OrExpression	count < 1 || ( count * ( kLongest + 1 ) ) < 1		506156	0		||			
ANR	506335	RelationalExpression	count < 1		506156	0		<			
ANR	506336	Identifier	count		506156	0					
ANR	506337	PrimaryExpression	1		506156	1					
ANR	506338	RelationalExpression	( count * ( kLongest + 1 ) ) < 1		506156	1		<			
ANR	506339	MultiplicativeExpression	count * ( kLongest + 1 )		506156	0		*			
ANR	506340	Identifier	count		506156	0					
ANR	506341	AdditiveExpression	kLongest + 1		506156	1		+			
ANR	506342	Identifier	kLongest		506156	0					
ANR	506343	PrimaryExpression	1		506156	1					
ANR	506344	PrimaryExpression	1		506156	1					
ANR	506345	CompoundStatement		73:46:1767:1767	506156	1					
ANR	506346	ReturnStatement	return NULL ;	215:2:5261:5272	506156	0	True				
ANR	506347	Identifier	NULL		506156	0					
ANR	506348	ExpressionStatement	"cp = str = ( char * ) calloc ( count + 1 , ( kLongest + 1 ) )"	217:1:5278:5331	506156	22	True				
ANR	506349	AssignmentExpression	"cp = str = ( char * ) calloc ( count + 1 , ( kLongest + 1 ) )"		506156	0		=			
ANR	506350	Identifier	cp		506156	0					
ANR	506351	AssignmentExpression	"str = ( char * ) calloc ( count + 1 , ( kLongest + 1 ) )"		506156	1		=			
ANR	506352	Identifier	str		506156	0					
ANR	506353	CastExpression	"( char * ) calloc ( count + 1 , ( kLongest + 1 ) )"		506156	1					
ANR	506354	CastTarget	char *		506156	0					
ANR	506355	CallExpression	"calloc ( count + 1 , ( kLongest + 1 ) )"		506156	1					
ANR	506356	Callee	calloc		506156	0					
ANR	506357	Identifier	calloc		506156	0					
ANR	506358	ArgumentList	count + 1		506156	1					
ANR	506359	Argument	count + 1		506156	0					
ANR	506360	AdditiveExpression	count + 1		506156	0		+			
ANR	506361	Identifier	count		506156	0					
ANR	506362	PrimaryExpression	1		506156	1					
ANR	506363	Argument	kLongest + 1		506156	1					
ANR	506364	AdditiveExpression	kLongest + 1		506156	0		+			
ANR	506365	Identifier	kLongest		506156	0					
ANR	506366	PrimaryExpression	1		506156	1					
ANR	506367	IfStatement	if ( ! str )		506156	23					
ANR	506368	Condition	! str	218:5:5338:5341	506156	0	True				
ANR	506369	UnaryOperationExpression	! str		506156	0					
ANR	506370	UnaryOperator	!		506156	0					
ANR	506371	Identifier	str		506156	1					
ANR	506372	CompoundStatement		77:11:1854:1854	506156	1					
ANR	506373	ReturnStatement	return NULL ;	219:2:5348:5359	506156	0	True				
ANR	506374	Identifier	NULL		506156	0					
ANR	506375	ForStatement	for ( i = 0 ; i < NUM_FLAGS ; i ++ )		506156	24					
ANR	506376	ForInit	i = 0 ;	221:6:5370:5375	506156	0	True				
ANR	506377	AssignmentExpression	i = 0		506156	0		=			
ANR	506378	Identifier	i		506156	0					
ANR	506379	PrimaryExpression	0		506156	1					
ANR	506380	Condition	i < NUM_FLAGS	221:13:5377:5389	506156	1	True				
ANR	506381	RelationalExpression	i < NUM_FLAGS		506156	0		<			
ANR	506382	Identifier	i		506156	0					
ANR	506383	Identifier	NUM_FLAGS		506156	1					
ANR	506384	PostIncDecOperationExpression	i ++	221:28:5392:5394	506156	2	True				
ANR	506385	Identifier	i		506156	0					
ANR	506386	IncDec	++		506156	1					
ANR	506387	CompoundStatement		80:33:1907:1907	506156	3					
ANR	506388	IfStatement	if ( flags & 0x01 )		506156	0					
ANR	506389	Condition	flags & 0x01	222:6:5405:5416	506156	0	True				
ANR	506390	BitAndExpression	flags & 0x01		506156	0		&			
ANR	506391	Identifier	flags		506156	0					
ANR	506392	PrimaryExpression	0x01		506156	1					
ANR	506393	CompoundStatement		83:3:1989:2017	506156	1					
ANR	506394	IdentifierDeclStatement	const char * accessStr = kAccessStrings [ forWhat ] [ i ] ;	223:3:5424:5474	506156	0	True				
ANR	506395	IdentifierDecl	* accessStr = kAccessStrings [ forWhat ] [ i ]		506156	0					
ANR	506396	IdentifierDeclType	const char *		506156	0					
ANR	506397	Identifier	accessStr		506156	1					
ANR	506398	AssignmentExpression	* accessStr = kAccessStrings [ forWhat ] [ i ]		506156	2		=			
ANR	506399	Identifier	accessStr		506156	0					
ANR	506400	ArrayIndexing	kAccessStrings [ forWhat ] [ i ]		506156	1					
ANR	506401	ArrayIndexing	kAccessStrings [ forWhat ]		506156	0					
ANR	506402	Identifier	kAccessStrings		506156	0					
ANR	506403	Identifier	forWhat		506156	1					
ANR	506404	Identifier	i		506156	1					
ANR	506405	IdentifierDeclStatement	int len = strlen ( accessStr ) ;	224:3:5479:5507	506156	1	True				
ANR	506406	IdentifierDecl	len = strlen ( accessStr )		506156	0					
ANR	506407	IdentifierDeclType	int		506156	0					
ANR	506408	Identifier	len		506156	1					
ANR	506409	AssignmentExpression	len = strlen ( accessStr )		506156	2		=			
ANR	506410	Identifier	len		506156	0					
ANR	506411	CallExpression	strlen ( accessStr )		506156	1					
ANR	506412	Callee	strlen		506156	0					
ANR	506413	Identifier	strlen		506156	0					
ANR	506414	ArgumentList	accessStr		506156	1					
ANR	506415	Argument	accessStr		506156	0					
ANR	506416	Identifier	accessStr		506156	0					
ANR	506417	IfStatement	if ( cp != str )		506156	2					
ANR	506418	Condition	cp != str	225:7:5516:5524	506156	0	True				
ANR	506419	EqualityExpression	cp != str		506156	0		!=			
ANR	506420	Identifier	cp		506156	0					
ANR	506421	Identifier	str		506156	1					
ANR	506422	CompoundStatement		84:18:2037:2037	506156	1					
ANR	506423	ExpressionStatement	* cp ++ = ' '	226:4:5533:5544	506156	0	True				
ANR	506424	AssignmentExpression	* cp ++ = ' '		506156	0		=			
ANR	506425	UnaryOperationExpression	* cp ++		506156	0					
ANR	506426	UnaryOperator	*		506156	0					
ANR	506427	PostIncDecOperationExpression	cp ++		506156	1					
ANR	506428	Identifier	cp		506156	0					
ANR	506429	IncDec	++		506156	1					
ANR	506430	PrimaryExpression	' '		506156	1					
ANR	506431	IfStatement	if ( ( ( cp - str ) + len ) >= maxSize )		506156	3					
ANR	506432	Condition	( ( cp - str ) + len ) >= maxSize	228:7:5558:5586	506156	0	True				
ANR	506433	RelationalExpression	( ( cp - str ) + len ) >= maxSize		506156	0		>=			
ANR	506434	AdditiveExpression	( cp - str ) + len		506156	0		+			
ANR	506435	AdditiveExpression	cp - str		506156	0		-			
ANR	506436	Identifier	cp		506156	0					
ANR	506437	Identifier	str		506156	1					
ANR	506438	Identifier	len		506156	1					
ANR	506439	Identifier	maxSize		506156	1					
ANR	506440	CompoundStatement		87:38:2099:2099	506156	1					
ANR	506441	ExpressionStatement	free ( str )	229:4:5595:5605	506156	0	True				
ANR	506442	CallExpression	free ( str )		506156	0					
ANR	506443	Callee	free		506156	0					
ANR	506444	Identifier	free		506156	0					
ANR	506445	ArgumentList	str		506156	1					
ANR	506446	Argument	str		506156	0					
ANR	506447	Identifier	str		506156	0					
ANR	506448	ReturnStatement	return NULL ;	230:4:5611:5622	506156	1	True				
ANR	506449	Identifier	NULL		506156	0					
ANR	506450	ExpressionStatement	"memcpy ( cp , accessStr , len )"	232:3:5632:5659	506156	4	True				
ANR	506451	CallExpression	"memcpy ( cp , accessStr , len )"		506156	0					
ANR	506452	Callee	memcpy		506156	0					
ANR	506453	Identifier	memcpy		506156	0					
ANR	506454	ArgumentList	cp		506156	1					
ANR	506455	Argument	cp		506156	0					
ANR	506456	Identifier	cp		506156	0					
ANR	506457	Argument	accessStr		506156	1					
ANR	506458	Identifier	accessStr		506156	0					
ANR	506459	Argument	len		506156	2					
ANR	506460	Identifier	len		506156	0					
ANR	506461	ExpressionStatement	cp += len	233:3:5664:5673	506156	5	True				
ANR	506462	AssignmentExpression	cp += len		506156	0		+=			
ANR	506463	Identifier	cp		506156	0					
ANR	506464	Identifier	len		506156	1					
ANR	506465	ExpressionStatement	flags >>= 1	235:2:5681:5692	506156	1	True				
ANR	506466	AssignmentExpression	flags >>= 1		506156	0		>>=			
ANR	506467	Identifier	flags		506156	0					
ANR	506468	PrimaryExpression	1		506156	1					
ANR	506469	ExpressionStatement	* cp = '\\0'	237:1:5698:5708	506156	25	True				
ANR	506470	AssignmentExpression	* cp = '\\0'		506156	0		=			
ANR	506471	UnaryOperationExpression	* cp		506156	0					
ANR	506472	UnaryOperator	*		506156	0					
ANR	506473	Identifier	cp		506156	1					
ANR	506474	PrimaryExpression	'\\0'		506156	1					
ANR	506475	ReturnStatement	return str ;	238:1:5711:5721	506156	26	True				
ANR	506476	Identifier	str		506156	0					
ANR	506477	ReturnType	static char *		506156	1					
ANR	506478	Identifier	createAccessFlagStr		506156	2					
ANR	506479	ParameterList	"ut32 flags , AccessFor forWhat"		506156	3					
ANR	506480	Parameter	ut32 flags	142:33:3458:3467	506156	0	True				
ANR	506481	ParameterType	ut32		506156	0					
ANR	506482	Identifier	flags		506156	1					
ANR	506483	Parameter	AccessFor forWhat	142:45:3470:3486	506156	1	True				
ANR	506484	ParameterType	AccessFor		506156	0					
ANR	506485	Identifier	forWhat		506156	1					
ANR	506486	CFGEntryNode	ENTRY		506156		True				
ANR	506487	CFGExitNode	EXIT		506156		True				
ANR	506488	Symbol	kLongest		506156						
ANR	506489	Symbol	NULL		506156						
ANR	506490	Symbol	* forWhat		506156						
ANR	506491	Symbol	accessStr		506156						
ANR	506492	Symbol	flags		506156						
ANR	506493	Symbol	count		506156						
ANR	506494	Symbol	i		506156						
ANR	506495	Symbol	* * forWhat		506156						
ANR	506496	Symbol	maxSize		506156						
ANR	506497	Symbol	calloc		506156						
ANR	506498	Symbol	* kAccessStrings		506156						
ANR	506499	Symbol	cp		506156						
ANR	506500	Symbol	* * kAccessStrings		506156						
ANR	506501	Symbol	str		506156						
ANR	506502	Symbol	* cp		506156						
ANR	506503	Symbol	strlen		506156						
ANR	506504	Symbol	countOnes		506156						
ANR	506505	Symbol	* i		506156						
ANR	506506	Symbol	len		506156						
ANR	506507	Symbol	forWhat		506156						
ANR	506508	Symbol	NUM_FLAGS		506156						
ANR	506509	Symbol	kAccessStrings		506156						
ANR	506510	Symbol	* cp ++		506156						
ANR	506511	Function	dex_type_descriptor	241:0:5726:5927							
ANR	506512	FunctionDef	"dex_type_descriptor (RBinDexObj * bin , int type_idx)"		506511	0					
ANR	506513	CompoundStatement		241:64:5790:5927	506511	0					
ANR	506514	IfStatement	if ( type_idx < 0 || type_idx >= bin -> header . types_size )		506511	0					
ANR	506515	Condition	type_idx < 0 || type_idx >= bin -> header . types_size	242:5:5797:5846	506511	0	True				
ANR	506516	OrExpression	type_idx < 0 || type_idx >= bin -> header . types_size		506511	0		||			
ANR	506517	RelationalExpression	type_idx < 0		506511	0		<			
ANR	506518	Identifier	type_idx		506511	0					
ANR	506519	PrimaryExpression	0		506511	1					
ANR	506520	RelationalExpression	type_idx >= bin -> header . types_size		506511	1		>=			
ANR	506521	Identifier	type_idx		506511	0					
ANR	506522	MemberAccess	bin -> header . types_size		506511	1					
ANR	506523	PtrMemberAccess	bin -> header		506511	0					
ANR	506524	Identifier	bin		506511	0					
ANR	506525	Identifier	header		506511	1					
ANR	506526	Identifier	types_size		506511	1					
ANR	506527	CompoundStatement		2:57:58:58	506511	1					
ANR	506528	ReturnStatement	return NULL ;	243:2:5853:5864	506511	0	True				
ANR	506529	Identifier	NULL		506511	0					
ANR	506530	ReturnStatement	"return getstr ( bin , bin -> types [ type_idx ] . descriptor_id ) ;"	245:1:5870:5925	506511	1	True				
ANR	506531	CallExpression	"getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"		506511	0					
ANR	506532	Callee	getstr		506511	0					
ANR	506533	Identifier	getstr		506511	0					
ANR	506534	ArgumentList	bin		506511	1					
ANR	506535	Argument	bin		506511	0					
ANR	506536	Identifier	bin		506511	0					
ANR	506537	Argument	bin -> types [ type_idx ] . descriptor_id		506511	1					
ANR	506538	MemberAccess	bin -> types [ type_idx ] . descriptor_id		506511	0					
ANR	506539	ArrayIndexing	bin -> types [ type_idx ]		506511	0					
ANR	506540	PtrMemberAccess	bin -> types		506511	0					
ANR	506541	Identifier	bin		506511	0					
ANR	506542	Identifier	types		506511	1					
ANR	506543	Identifier	type_idx		506511	1					
ANR	506544	Identifier	descriptor_id		506511	1					
ANR	506545	ReturnType	static char *		506511	1					
ANR	506546	Identifier	dex_type_descriptor		506511	2					
ANR	506547	ParameterList	"RBinDexObj * bin , int type_idx"		506511	3					
ANR	506548	Parameter	RBinDexObj * bin	241:33:5759:5773	506511	0	True				
ANR	506549	ParameterType	RBinDexObj *		506511	0					
ANR	506550	Identifier	bin		506511	1					
ANR	506551	Parameter	int type_idx	241:50:5776:5787	506511	1	True				
ANR	506552	ParameterType	int		506511	0					
ANR	506553	Identifier	type_idx		506511	1					
ANR	506554	CFGEntryNode	ENTRY		506511		True				
ANR	506555	CFGExitNode	EXIT		506511		True				
ANR	506556	Symbol	* type_idx		506511						
ANR	506557	Symbol	NULL		506511						
ANR	506558	Symbol	getstr		506511						
ANR	506559	Symbol	bin -> header . types_size		506511						
ANR	506560	Symbol	* bin -> types		506511						
ANR	506561	Symbol	bin		506511						
ANR	506562	Symbol	bin -> header		506511						
ANR	506563	Symbol	bin -> types [ type_idx ] . descriptor_id		506511						
ANR	506564	Symbol	bin -> types		506511						
ANR	506565	Symbol	* * bin		506511						
ANR	506566	Symbol	type_idx		506511						
ANR	506567	Symbol	* bin		506511						
ANR	506568	Function	dex_get_proto	248:0:5930:7701							
ANR	506569	FunctionDef	"dex_get_proto (RBinDexObj * bin , int proto_id)"		506568	0					
ANR	506570	CompoundStatement		248:58:5988:7701	506568	0					
ANR	506571	IdentifierDeclStatement	"ut32 params_off , type_id , list_size ;"	249:1:5991:6026	506568	0	True				
ANR	506572	IdentifierDecl	params_off		506568	0					
ANR	506573	IdentifierDeclType	ut32		506568	0					
ANR	506574	Identifier	params_off		506568	1					
ANR	506575	IdentifierDecl	type_id		506568	1					
ANR	506576	IdentifierDeclType	ut32		506568	0					
ANR	506577	Identifier	type_id		506568	1					
ANR	506578	IdentifierDecl	list_size		506568	2					
ANR	506579	IdentifierDeclType	ut32		506568	0					
ANR	506580	Identifier	list_size		506568	1					
ANR	506581	IdentifierDeclStatement	"char * r = NULL , * return_type = NULL , * signature = NULL , * buff = NULL ;"	250:1:6029:6097	506568	1	True				
ANR	506582	IdentifierDecl	* r = NULL		506568	0					
ANR	506583	IdentifierDeclType	char *		506568	0					
ANR	506584	Identifier	r		506568	1					
ANR	506585	AssignmentExpression	* r = NULL		506568	2		=			
ANR	506586	Identifier	NULL		506568	0					
ANR	506587	Identifier	NULL		506568	1					
ANR	506588	IdentifierDecl	* return_type = NULL		506568	1					
ANR	506589	IdentifierDeclType	char *		506568	0					
ANR	506590	Identifier	return_type		506568	1					
ANR	506591	AssignmentExpression	* return_type = NULL		506568	2		=			
ANR	506592	Identifier	NULL		506568	0					
ANR	506593	Identifier	NULL		506568	1					
ANR	506594	IdentifierDecl	* signature = NULL		506568	2					
ANR	506595	IdentifierDeclType	char *		506568	0					
ANR	506596	Identifier	signature		506568	1					
ANR	506597	AssignmentExpression	* signature = NULL		506568	2		=			
ANR	506598	Identifier	NULL		506568	0					
ANR	506599	Identifier	NULL		506568	1					
ANR	506600	IdentifierDecl	* buff = NULL		506568	3					
ANR	506601	IdentifierDeclType	char *		506568	0					
ANR	506602	Identifier	buff		506568	1					
ANR	506603	AssignmentExpression	* buff = NULL		506568	2		=			
ANR	506604	Identifier	NULL		506568	0					
ANR	506605	Identifier	NULL		506568	1					
ANR	506606	IdentifierDeclStatement	ut16 type_idx ;	251:1:6100:6113	506568	2	True				
ANR	506607	IdentifierDecl	type_idx		506568	0					
ANR	506608	IdentifierDeclType	ut16		506568	0					
ANR	506609	Identifier	type_idx		506568	1					
ANR	506610	IdentifierDeclStatement	"int pos = 0 , i , size = 1 ;"	252:1:6116:6140	506568	3	True				
ANR	506611	IdentifierDecl	pos = 0		506568	0					
ANR	506612	IdentifierDeclType	int		506568	0					
ANR	506613	Identifier	pos		506568	1					
ANR	506614	AssignmentExpression	pos = 0		506568	2		=			
ANR	506615	Identifier	pos		506568	0					
ANR	506616	PrimaryExpression	0		506568	1					
ANR	506617	IdentifierDecl	i		506568	1					
ANR	506618	IdentifierDeclType	int		506568	0					
ANR	506619	Identifier	i		506568	1					
ANR	506620	IdentifierDecl	size = 1		506568	2					
ANR	506621	IdentifierDeclType	int		506568	0					
ANR	506622	Identifier	size		506568	1					
ANR	506623	AssignmentExpression	size = 1		506568	2		=			
ANR	506624	Identifier	size		506568	0					
ANR	506625	PrimaryExpression	1		506568	1					
ANR	506626	IfStatement	if ( proto_id >= bin -> header . prototypes_size )		506568	4					
ANR	506627	Condition	proto_id >= bin -> header . prototypes_size	254:5:6148:6186	506568	0	True				
ANR	506628	RelationalExpression	proto_id >= bin -> header . prototypes_size		506568	0		>=			
ANR	506629	Identifier	proto_id		506568	0					
ANR	506630	MemberAccess	bin -> header . prototypes_size		506568	1					
ANR	506631	PtrMemberAccess	bin -> header		506568	0					
ANR	506632	Identifier	bin		506568	0					
ANR	506633	Identifier	header		506568	1					
ANR	506634	Identifier	prototypes_size		506568	1					
ANR	506635	CompoundStatement		7:46:200:200	506568	1					
ANR	506636	ReturnStatement	return NULL ;	255:2:6193:6204	506568	0	True				
ANR	506637	Identifier	NULL		506568	0					
ANR	506638	ExpressionStatement	params_off = bin -> protos [ proto_id ] . parameters_off	257:1:6210:6259	506568	5	True				
ANR	506639	AssignmentExpression	params_off = bin -> protos [ proto_id ] . parameters_off		506568	0		=			
ANR	506640	Identifier	params_off		506568	0					
ANR	506641	MemberAccess	bin -> protos [ proto_id ] . parameters_off		506568	1					
ANR	506642	ArrayIndexing	bin -> protos [ proto_id ]		506568	0					
ANR	506643	PtrMemberAccess	bin -> protos		506568	0					
ANR	506644	Identifier	bin		506568	0					
ANR	506645	Identifier	protos		506568	1					
ANR	506646	Identifier	proto_id		506568	1					
ANR	506647	Identifier	parameters_off		506568	1					
ANR	506648	IfStatement	if ( params_off >= bin -> size )		506568	6					
ANR	506649	Condition	params_off >= bin -> size	258:5:6266:6288	506568	0	True				
ANR	506650	RelationalExpression	params_off >= bin -> size		506568	0		>=			
ANR	506651	Identifier	params_off		506568	0					
ANR	506652	PtrMemberAccess	bin -> size		506568	1					
ANR	506653	Identifier	bin		506568	0					
ANR	506654	Identifier	size		506568	1					
ANR	506655	CompoundStatement		11:30:302:302	506568	1					
ANR	506656	ReturnStatement	return NULL ;	259:2:6295:6306	506568	0	True				
ANR	506657	Identifier	NULL		506568	0					
ANR	506658	ExpressionStatement	type_id = bin -> protos [ proto_id ] . return_type_id	261:1:6312:6358	506568	7	True				
ANR	506659	AssignmentExpression	type_id = bin -> protos [ proto_id ] . return_type_id		506568	0		=			
ANR	506660	Identifier	type_id		506568	0					
ANR	506661	MemberAccess	bin -> protos [ proto_id ] . return_type_id		506568	1					
ANR	506662	ArrayIndexing	bin -> protos [ proto_id ]		506568	0					
ANR	506663	PtrMemberAccess	bin -> protos		506568	0					
ANR	506664	Identifier	bin		506568	0					
ANR	506665	Identifier	protos		506568	1					
ANR	506666	Identifier	proto_id		506568	1					
ANR	506667	Identifier	return_type_id		506568	1					
ANR	506668	IfStatement	if ( type_id >= bin -> header . types_size )		506568	8					
ANR	506669	Condition	type_id >= bin -> header . types_size	262:5:6365:6397	506568	0	True				
ANR	506670	RelationalExpression	type_id >= bin -> header . types_size		506568	0		>=			
ANR	506671	Identifier	type_id		506568	0					
ANR	506672	MemberAccess	bin -> header . types_size		506568	1					
ANR	506673	PtrMemberAccess	bin -> header		506568	0					
ANR	506674	Identifier	bin		506568	0					
ANR	506675	Identifier	header		506568	1					
ANR	506676	Identifier	types_size		506568	1					
ANR	506677	CompoundStatement		15:41:412:412	506568	1					
ANR	506678	ReturnStatement	return NULL ;	263:2:6405:6416	506568	0	True				
ANR	506679	Identifier	NULL		506568	0					
ANR	506680	ExpressionStatement	"return_type = getstr ( bin , bin -> types [ type_id ] . descriptor_id )"	265:1:6422:6483	506568	9	True				
ANR	506681	AssignmentExpression	"return_type = getstr ( bin , bin -> types [ type_id ] . descriptor_id )"		506568	0		=			
ANR	506682	Identifier	return_type		506568	0					
ANR	506683	CallExpression	"getstr ( bin , bin -> types [ type_id ] . descriptor_id )"		506568	1					
ANR	506684	Callee	getstr		506568	0					
ANR	506685	Identifier	getstr		506568	0					
ANR	506686	ArgumentList	bin		506568	1					
ANR	506687	Argument	bin		506568	0					
ANR	506688	Identifier	bin		506568	0					
ANR	506689	Argument	bin -> types [ type_id ] . descriptor_id		506568	1					
ANR	506690	MemberAccess	bin -> types [ type_id ] . descriptor_id		506568	0					
ANR	506691	ArrayIndexing	bin -> types [ type_id ]		506568	0					
ANR	506692	PtrMemberAccess	bin -> types		506568	0					
ANR	506693	Identifier	bin		506568	0					
ANR	506694	Identifier	types		506568	1					
ANR	506695	Identifier	type_id		506568	1					
ANR	506696	Identifier	descriptor_id		506568	1					
ANR	506697	IfStatement	if ( ! return_type )		506568	10					
ANR	506698	Condition	! return_type	266:5:6490:6501	506568	0	True				
ANR	506699	UnaryOperationExpression	! return_type		506568	0					
ANR	506700	UnaryOperator	!		506568	0					
ANR	506701	Identifier	return_type		506568	1					
ANR	506702	CompoundStatement		19:19:515:515	506568	1					
ANR	506703	ReturnStatement	return NULL ;	267:2:6508:6519	506568	0	True				
ANR	506704	Identifier	NULL		506568	0					
ANR	506705	IfStatement	if ( ! params_off )		506568	11					
ANR	506706	Condition	! params_off	269:5:6529:6539	506568	0	True				
ANR	506707	UnaryOperationExpression	! params_off		506568	0					
ANR	506708	UnaryOperator	!		506568	0					
ANR	506709	Identifier	params_off		506568	1					
ANR	506710	CompoundStatement		22:18:553:553	506568	1					
ANR	506711	ReturnStatement	"return r_str_newf ( ""()%s"" , return_type ) ;"	270:2:6546:6585	506568	0	True				
ANR	506712	CallExpression	"r_str_newf ( ""()%s"" , return_type )"		506568	0					
ANR	506713	Callee	r_str_newf		506568	0					
ANR	506714	Identifier	r_str_newf		506568	0					
ANR	506715	ArgumentList	"""()%s"""		506568	1					
ANR	506716	Argument	"""()%s"""		506568	0					
ANR	506717	PrimaryExpression	"""()%s"""		506568	0					
ANR	506718	Argument	return_type		506568	1					
ANR	506719	Identifier	return_type		506568	0					
ANR	506720	ExpressionStatement		270:42:6586:6586	506568	1	True				
ANR	506721	IdentifierDeclStatement	ut8 params_buf [ sizeof ( ut32 ) ] ;	272:1:6592:6621	506568	12	True				
ANR	506722	IdentifierDecl	params_buf [ sizeof ( ut32 ) ]		506568	0					
ANR	506723	IdentifierDeclType	ut8 [ sizeof ( ut32 ) ]		506568	0					
ANR	506724	Identifier	params_buf		506568	1					
ANR	506725	SizeofExpression	sizeof ( ut32 )		506568	2					
ANR	506726	Sizeof	sizeof		506568	0					
ANR	506727	SizeofOperand	ut32		506568	1					
ANR	506728	IfStatement	"if ( ! r_buf_read_at ( bin -> b , params_off , params_buf , sizeof ( params_buf ) ) )"		506568	13					
ANR	506729	Condition	"! r_buf_read_at ( bin -> b , params_off , params_buf , sizeof ( params_buf ) )"	273:5:6628:6695	506568	0	True				
ANR	506730	UnaryOperationExpression	"! r_buf_read_at ( bin -> b , params_off , params_buf , sizeof ( params_buf ) )"		506568	0					
ANR	506731	UnaryOperator	!		506568	0					
ANR	506732	CallExpression	"r_buf_read_at ( bin -> b , params_off , params_buf , sizeof ( params_buf ) )"		506568	1					
ANR	506733	Callee	r_buf_read_at		506568	0					
ANR	506734	Identifier	r_buf_read_at		506568	0					
ANR	506735	ArgumentList	bin -> b		506568	1					
ANR	506736	Argument	bin -> b		506568	0					
ANR	506737	PtrMemberAccess	bin -> b		506568	0					
ANR	506738	Identifier	bin		506568	0					
ANR	506739	Identifier	b		506568	1					
ANR	506740	Argument	params_off		506568	1					
ANR	506741	Identifier	params_off		506568	0					
ANR	506742	Argument	params_buf		506568	2					
ANR	506743	Identifier	params_buf		506568	0					
ANR	506744	Argument	sizeof ( params_buf )		506568	3					
ANR	506745	SizeofExpression	sizeof ( params_buf )		506568	0					
ANR	506746	Sizeof	sizeof		506568	0					
ANR	506747	SizeofOperand	params_buf		506568	1					
ANR	506748	CompoundStatement		26:75:709:709	506568	1					
ANR	506749	ReturnStatement	return NULL ;	274:2:6702:6713	506568	0	True				
ANR	506750	Identifier	NULL		506568	0					
ANR	506751	ExpressionStatement	list_size = r_read_le32 ( params_buf )	277:1:6752:6788	506568	14	True				
ANR	506752	AssignmentExpression	list_size = r_read_le32 ( params_buf )		506568	0		=			
ANR	506753	Identifier	list_size		506568	0					
ANR	506754	CallExpression	r_read_le32 ( params_buf )		506568	1					
ANR	506755	Callee	r_read_le32		506568	0					
ANR	506756	Identifier	r_read_le32		506568	0					
ANR	506757	ArgumentList	params_buf		506568	1					
ANR	506758	Argument	params_buf		506568	0					
ANR	506759	Identifier	params_buf		506568	0					
ANR	506760	IfStatement	if ( list_size * sizeof ( ut16 ) >= bin -> size )		506568	15					
ANR	506761	Condition	list_size * sizeof ( ut16 ) >= bin -> size	278:5:6795:6832	506568	0	True				
ANR	506762	RelationalExpression	list_size * sizeof ( ut16 ) >= bin -> size		506568	0		>=			
ANR	506763	MultiplicativeExpression	list_size * sizeof ( ut16 )		506568	0		*			
ANR	506764	Identifier	list_size		506568	0					
ANR	506765	SizeofExpression	sizeof ( ut16 )		506568	1					
ANR	506766	Sizeof	sizeof		506568	0					
ANR	506767	SizeofOperand	ut16		506568	1					
ANR	506768	PtrMemberAccess	bin -> size		506568	1					
ANR	506769	Identifier	bin		506568	0					
ANR	506770	Identifier	size		506568	1					
ANR	506771	CompoundStatement		31:45:846:846	506568	1					
ANR	506772	ReturnStatement	return NULL ;	279:2:6839:6850	506568	0	True				
ANR	506773	Identifier	NULL		506568	0					
ANR	506774	ForStatement	for ( i = 0 ; i < list_size ; i ++ )		506568	16					
ANR	506775	ForInit	i = 0 ;	282:6:6862:6867	506568	0	True				
ANR	506776	AssignmentExpression	i = 0		506568	0		=			
ANR	506777	Identifier	i		506568	0					
ANR	506778	PrimaryExpression	0		506568	1					
ANR	506779	Condition	i < list_size	282:13:6869:6881	506568	1	True				
ANR	506780	RelationalExpression	i < list_size		506568	0		<			
ANR	506781	Identifier	i		506568	0					
ANR	506782	Identifier	list_size		506568	1					
ANR	506783	PostIncDecOperationExpression	i ++	282:28:6884:6886	506568	2	True				
ANR	506784	Identifier	i		506568	0					
ANR	506785	IncDec	++		506568	1					
ANR	506786	CompoundStatement		55:2:1386:1426	506568	3					
ANR	506787	IdentifierDeclStatement	int buff_len = 0 ;	283:2:6893:6909	506568	0	True				
ANR	506788	IdentifierDecl	buff_len = 0		506568	0					
ANR	506789	IdentifierDeclType	int		506568	0					
ANR	506790	Identifier	buff_len		506568	1					
ANR	506791	AssignmentExpression	buff_len = 0		506568	2		=			
ANR	506792	Identifier	buff_len		506568	0					
ANR	506793	PrimaryExpression	0		506568	1					
ANR	506794	IdentifierDeclStatement	int off = params_off + 4 + ( i * 2 ) ;	284:2:6913:6947	506568	1	True				
ANR	506795	IdentifierDecl	off = params_off + 4 + ( i * 2 )		506568	0					
ANR	506796	IdentifierDeclType	int		506568	0					
ANR	506797	Identifier	off		506568	1					
ANR	506798	AssignmentExpression	off = params_off + 4 + ( i * 2 )		506568	2		=			
ANR	506799	Identifier	off		506568	0					
ANR	506800	AdditiveExpression	params_off + 4 + ( i * 2 )		506568	1		+			
ANR	506801	Identifier	params_off		506568	0					
ANR	506802	AdditiveExpression	4 + ( i * 2 )		506568	1		+			
ANR	506803	PrimaryExpression	4		506568	0					
ANR	506804	MultiplicativeExpression	i * 2		506568	1		*			
ANR	506805	Identifier	i		506568	0					
ANR	506806	PrimaryExpression	2		506568	1					
ANR	506807	IfStatement	if ( off >= bin -> size )		506568	2					
ANR	506808	Condition	off >= bin -> size	285:6:6955:6970	506568	0	True				
ANR	506809	RelationalExpression	off >= bin -> size		506568	0		>=			
ANR	506810	Identifier	off		506568	0					
ANR	506811	PtrMemberAccess	bin -> size		506568	1					
ANR	506812	Identifier	bin		506568	0					
ANR	506813	Identifier	size		506568	1					
ANR	506814	CompoundStatement		38:24:984:984	506568	1					
ANR	506815	BreakStatement	break ;	286:3:6978:6983	506568	0	True				
ANR	506816	IdentifierDeclStatement	ut8 typeidx_buf [ sizeof ( ut16 ) ] ;	288:2:6991:7021	506568	3	True				
ANR	506817	IdentifierDecl	typeidx_buf [ sizeof ( ut16 ) ]		506568	0					
ANR	506818	IdentifierDeclType	ut8 [ sizeof ( ut16 ) ]		506568	0					
ANR	506819	Identifier	typeidx_buf		506568	1					
ANR	506820	SizeofExpression	sizeof ( ut16 )		506568	2					
ANR	506821	Sizeof	sizeof		506568	0					
ANR	506822	SizeofOperand	ut16		506568	1					
ANR	506823	IfStatement	"if ( ! r_buf_read_at ( bin -> b , off , typeidx_buf , sizeof ( typeidx_buf ) ) )"		506568	4					
ANR	506824	Condition	"! r_buf_read_at ( bin -> b , off , typeidx_buf , sizeof ( typeidx_buf ) )"	289:6:7029:7091	506568	0	True				
ANR	506825	UnaryOperationExpression	"! r_buf_read_at ( bin -> b , off , typeidx_buf , sizeof ( typeidx_buf ) )"		506568	0					
ANR	506826	UnaryOperator	!		506568	0					
ANR	506827	CallExpression	"r_buf_read_at ( bin -> b , off , typeidx_buf , sizeof ( typeidx_buf ) )"		506568	1					
ANR	506828	Callee	r_buf_read_at		506568	0					
ANR	506829	Identifier	r_buf_read_at		506568	0					
ANR	506830	ArgumentList	bin -> b		506568	1					
ANR	506831	Argument	bin -> b		506568	0					
ANR	506832	PtrMemberAccess	bin -> b		506568	0					
ANR	506833	Identifier	bin		506568	0					
ANR	506834	Identifier	b		506568	1					
ANR	506835	Argument	off		506568	1					
ANR	506836	Identifier	off		506568	0					
ANR	506837	Argument	typeidx_buf		506568	2					
ANR	506838	Identifier	typeidx_buf		506568	0					
ANR	506839	Argument	sizeof ( typeidx_buf )		506568	3					
ANR	506840	SizeofExpression	sizeof ( typeidx_buf )		506568	0					
ANR	506841	Sizeof	sizeof		506568	0					
ANR	506842	SizeofOperand	typeidx_buf		506568	1					
ANR	506843	CompoundStatement		42:71:1105:1105	506568	1					
ANR	506844	BreakStatement	break ;	290:3:7099:7104	506568	0	True				
ANR	506845	ExpressionStatement	type_idx = r_read_le16 ( typeidx_buf )	292:2:7112:7148	506568	5	True				
ANR	506846	AssignmentExpression	type_idx = r_read_le16 ( typeidx_buf )		506568	0		=			
ANR	506847	Identifier	type_idx		506568	0					
ANR	506848	CallExpression	r_read_le16 ( typeidx_buf )		506568	1					
ANR	506849	Callee	r_read_le16		506568	0					
ANR	506850	Identifier	r_read_le16		506568	0					
ANR	506851	ArgumentList	typeidx_buf		506568	1					
ANR	506852	Argument	typeidx_buf		506568	0					
ANR	506853	Identifier	typeidx_buf		506568	0					
ANR	506854	IfStatement	if ( type_idx >= bin -> header . types_size || type_idx >= bin -> size )		506568	6					
ANR	506855	Condition	type_idx >= bin -> header . types_size || type_idx >= bin -> size	293:6:7156:7214	506568	0	True				
ANR	506856	OrExpression	type_idx >= bin -> header . types_size || type_idx >= bin -> size		506568	0		||			
ANR	506857	RelationalExpression	type_idx >= bin -> header . types_size		506568	0		>=			
ANR	506858	Identifier	type_idx		506568	0					
ANR	506859	MemberAccess	bin -> header . types_size		506568	1					
ANR	506860	PtrMemberAccess	bin -> header		506568	0					
ANR	506861	Identifier	bin		506568	0					
ANR	506862	Identifier	header		506568	1					
ANR	506863	Identifier	types_size		506568	1					
ANR	506864	RelationalExpression	type_idx >= bin -> size		506568	1		>=			
ANR	506865	Identifier	type_idx		506568	0					
ANR	506866	PtrMemberAccess	bin -> size		506568	1					
ANR	506867	Identifier	bin		506568	0					
ANR	506868	Identifier	size		506568	1					
ANR	506869	CompoundStatement		46:67:1228:1228	506568	1					
ANR	506870	BreakStatement	break ;	294:3:7222:7227	506568	0	True				
ANR	506871	ExpressionStatement	"buff = getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"	296:2:7235:7290	506568	7	True				
ANR	506872	AssignmentExpression	"buff = getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"		506568	0		=			
ANR	506873	Identifier	buff		506568	0					
ANR	506874	CallExpression	"getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"		506568	1					
ANR	506875	Callee	getstr		506568	0					
ANR	506876	Identifier	getstr		506568	0					
ANR	506877	ArgumentList	bin		506568	1					
ANR	506878	Argument	bin		506568	0					
ANR	506879	Identifier	bin		506568	0					
ANR	506880	Argument	bin -> types [ type_idx ] . descriptor_id		506568	1					
ANR	506881	MemberAccess	bin -> types [ type_idx ] . descriptor_id		506568	0					
ANR	506882	ArrayIndexing	bin -> types [ type_idx ]		506568	0					
ANR	506883	PtrMemberAccess	bin -> types		506568	0					
ANR	506884	Identifier	bin		506568	0					
ANR	506885	Identifier	types		506568	1					
ANR	506886	Identifier	type_idx		506568	1					
ANR	506887	Identifier	descriptor_id		506568	1					
ANR	506888	IfStatement	if ( ! buff )		506568	8					
ANR	506889	Condition	! buff	297:6:7298:7302	506568	0	True				
ANR	506890	UnaryOperationExpression	! buff		506568	0					
ANR	506891	UnaryOperator	!		506568	0					
ANR	506892	Identifier	buff		506568	1					
ANR	506893	CompoundStatement		50:13:1316:1316	506568	1					
ANR	506894	BreakStatement	break ;	298:3:7310:7315	506568	0	True				
ANR	506895	ExpressionStatement	buff_len = strlen ( buff )	300:2:7323:7347	506568	9	True				
ANR	506896	AssignmentExpression	buff_len = strlen ( buff )		506568	0		=			
ANR	506897	Identifier	buff_len		506568	0					
ANR	506898	CallExpression	strlen ( buff )		506568	1					
ANR	506899	Callee	strlen		506568	0					
ANR	506900	Identifier	strlen		506568	0					
ANR	506901	ArgumentList	buff		506568	1					
ANR	506902	Argument	buff		506568	0					
ANR	506903	Identifier	buff		506568	0					
ANR	506904	ExpressionStatement	size += buff_len + 1	301:2:7351:7371	506568	10	True				
ANR	506905	AssignmentExpression	size += buff_len + 1		506568	0		+=			
ANR	506906	Identifier	size		506568	0					
ANR	506907	AdditiveExpression	buff_len + 1		506568	1		+			
ANR	506908	Identifier	buff_len		506568	0					
ANR	506909	PrimaryExpression	1		506568	1					
ANR	506910	IdentifierDeclStatement	"char * newsig = realloc ( signature , size ) ;"	302:2:7375:7415	506568	11	True				
ANR	506911	IdentifierDecl	"* newsig = realloc ( signature , size )"		506568	0					
ANR	506912	IdentifierDeclType	char *		506568	0					
ANR	506913	Identifier	newsig		506568	1					
ANR	506914	AssignmentExpression	"* newsig = realloc ( signature , size )"		506568	2		=			
ANR	506915	Identifier	newsig		506568	0					
ANR	506916	CallExpression	"realloc ( signature , size )"		506568	1					
ANR	506917	Callee	realloc		506568	0					
ANR	506918	Identifier	realloc		506568	0					
ANR	506919	ArgumentList	signature		506568	1					
ANR	506920	Argument	signature		506568	0					
ANR	506921	Identifier	signature		506568	0					
ANR	506922	Argument	size		506568	1					
ANR	506923	Identifier	size		506568	0					
ANR	506924	IfStatement	if ( ! newsig )		506568	12					
ANR	506925	Condition	! newsig	303:6:7423:7429	506568	0	True				
ANR	506926	UnaryOperationExpression	! newsig		506568	0					
ANR	506927	UnaryOperator	!		506568	0					
ANR	506928	Identifier	newsig		506568	1					
ANR	506929	CompoundStatement		56:15:1443:1443	506568	1					
ANR	506930	ExpressionStatement	"eprintf ( ""Cannot realloc to %d\\n"" , size )"	304:3:7437:7477	506568	0	True				
ANR	506931	CallExpression	"eprintf ( ""Cannot realloc to %d\\n"" , size )"		506568	0					
ANR	506932	Callee	eprintf		506568	0					
ANR	506933	Identifier	eprintf		506568	0					
ANR	506934	ArgumentList	"""Cannot realloc to %d\\n"""		506568	1					
ANR	506935	Argument	"""Cannot realloc to %d\\n"""		506568	0					
ANR	506936	PrimaryExpression	"""Cannot realloc to %d\\n"""		506568	0					
ANR	506937	Argument	size		506568	1					
ANR	506938	Identifier	size		506568	0					
ANR	506939	BreakStatement	break ;	305:3:7482:7487	506568	1	True				
ANR	506940	ExpressionStatement	signature = newsig	307:2:7495:7513	506568	13	True				
ANR	506941	AssignmentExpression	signature = newsig		506568	0		=			
ANR	506942	Identifier	signature		506568	0					
ANR	506943	Identifier	newsig		506568	1					
ANR	506944	ExpressionStatement	"strcpy ( signature + pos , buff )"	308:2:7517:7547	506568	14	True				
ANR	506945	CallExpression	"strcpy ( signature + pos , buff )"		506568	0					
ANR	506946	Callee	strcpy		506568	0					
ANR	506947	Identifier	strcpy		506568	0					
ANR	506948	ArgumentList	signature + pos		506568	1					
ANR	506949	Argument	signature + pos		506568	0					
ANR	506950	AdditiveExpression	signature + pos		506568	0		+			
ANR	506951	Identifier	signature		506568	0					
ANR	506952	Identifier	pos		506568	1					
ANR	506953	Argument	buff		506568	1					
ANR	506954	Identifier	buff		506568	0					
ANR	506955	ExpressionStatement	pos += buff_len	309:2:7551:7566	506568	15	True				
ANR	506956	AssignmentExpression	pos += buff_len		506568	0		+=			
ANR	506957	Identifier	pos		506568	0					
ANR	506958	Identifier	buff_len		506568	1					
ANR	506959	ExpressionStatement	signature [ pos ] = '\\0'	310:2:7570:7591	506568	16	True				
ANR	506960	AssignmentExpression	signature [ pos ] = '\\0'		506568	0		=			
ANR	506961	ArrayIndexing	signature [ pos ]		506568	0					
ANR	506962	Identifier	signature		506568	0					
ANR	506963	Identifier	pos		506568	1					
ANR	506964	PrimaryExpression	'\\0'		506568	1					
ANR	506965	IfStatement	if ( signature )		506568	17					
ANR	506966	Condition	signature	312:5:7601:7609	506568	0	True				
ANR	506967	Identifier	signature		506568	0					
ANR	506968	CompoundStatement		65:16:1623:1623	506568	1					
ANR	506969	ExpressionStatement	"r = r_str_newf ( ""(%s)%s"" , signature , return_type )"	313:2:7616:7665	506568	0	True				
ANR	506970	AssignmentExpression	"r = r_str_newf ( ""(%s)%s"" , signature , return_type )"		506568	0		=			
ANR	506971	Identifier	r		506568	0					
ANR	506972	CallExpression	"r_str_newf ( ""(%s)%s"" , signature , return_type )"		506568	1					
ANR	506973	Callee	r_str_newf		506568	0					
ANR	506974	Identifier	r_str_newf		506568	0					
ANR	506975	ArgumentList	"""(%s)%s"""		506568	1					
ANR	506976	Argument	"""(%s)%s"""		506568	0					
ANR	506977	PrimaryExpression	"""(%s)%s"""		506568	0					
ANR	506978	Argument	signature		506568	1					
ANR	506979	Identifier	signature		506568	0					
ANR	506980	Argument	return_type		506568	2					
ANR	506981	Identifier	return_type		506568	0					
ANR	506982	ExpressionStatement	free ( signature )	314:2:7669:7685	506568	1	True				
ANR	506983	CallExpression	free ( signature )		506568	0					
ANR	506984	Callee	free		506568	0					
ANR	506985	Identifier	free		506568	0					
ANR	506986	ArgumentList	signature		506568	1					
ANR	506987	Argument	signature		506568	0					
ANR	506988	Identifier	signature		506568	0					
ANR	506989	ReturnStatement	return r ;	316:1:7691:7699	506568	18	True				
ANR	506990	Identifier	r		506568	0					
ANR	506991	ReturnType	static char *		506568	1					
ANR	506992	Identifier	dex_get_proto		506568	2					
ANR	506993	ParameterList	"RBinDexObj * bin , int proto_id"		506568	3					
ANR	506994	Parameter	RBinDexObj * bin	248:27:5957:5971	506568	0	True				
ANR	506995	ParameterType	RBinDexObj *		506568	0					
ANR	506996	Identifier	bin		506568	1					
ANR	506997	Parameter	int proto_id	248:44:5974:5985	506568	1	True				
ANR	506998	ParameterType	int		506568	0					
ANR	506999	Identifier	proto_id		506568	1					
ANR	507000	CFGEntryNode	ENTRY		506568		True				
ANR	507001	CFGExitNode	EXIT		506568		True				
ANR	507002	Symbol	return_type		506568						
ANR	507003	Symbol	bin -> protos [ proto_id ] . parameters_off		506568						
ANR	507004	Symbol	bin -> size		506568						
ANR	507005	Symbol	bin -> b		506568						
ANR	507006	Symbol	signature		506568						
ANR	507007	Symbol	* bin -> types		506568						
ANR	507008	Symbol	bin		506568						
ANR	507009	Symbol	bin -> header		506568						
ANR	507010	Symbol	list_size		506568						
ANR	507011	Symbol	r_str_newf		506568						
ANR	507012	Symbol	realloc		506568						
ANR	507013	Symbol	* type_id		506568						
ANR	507014	Symbol	type_idx		506568						
ANR	507015	Symbol	newsig		506568						
ANR	507016	Symbol	* bin		506568						
ANR	507017	Symbol	typeidx_buf		506568						
ANR	507018	Symbol	strlen		506568						
ANR	507019	Symbol	getstr		506568						
ANR	507020	Symbol	pos		506568						
ANR	507021	Symbol	bin -> header . types_size		506568						
ANR	507022	Symbol	proto_id		506568						
ANR	507023	Symbol	* * bin		506568						
ANR	507024	Symbol	* type_idx		506568						
ANR	507025	Symbol	NULL		506568						
ANR	507026	Symbol	r_read_le32		506568						
ANR	507027	Symbol	params_off		506568						
ANR	507028	Symbol	type_id		506568						
ANR	507029	Symbol	bin -> header . prototypes_size		506568						
ANR	507030	Symbol	bin -> protos		506568						
ANR	507031	Symbol	i		506568						
ANR	507032	Symbol	* bin -> protos		506568						
ANR	507033	Symbol	params_buf		506568						
ANR	507034	Symbol	bin -> types [ type_idx ] . descriptor_id		506568						
ANR	507035	Symbol	* proto_id		506568						
ANR	507036	Symbol	buff_len		506568						
ANR	507037	Symbol	r_read_le16		506568						
ANR	507038	Symbol	off		506568						
ANR	507039	Symbol	bin -> types [ type_id ] . descriptor_id		506568						
ANR	507040	Symbol	r		506568						
ANR	507041	Symbol	* signature		506568						
ANR	507042	Symbol	size		506568						
ANR	507043	Symbol	bin -> protos [ proto_id ] . return_type_id		506568						
ANR	507044	Symbol	r_buf_read_at		506568						
ANR	507045	Symbol	bin -> types		506568						
ANR	507046	Symbol	buff		506568						
ANR	507047	Symbol	* pos		506568						
ANR	507048	Function	dex_method_signature	319:0:7704:7919							
ANR	507049	FunctionDef	"dex_method_signature (RBinDexObj * bin , int method_idx)"		507048	0					
ANR	507050	CompoundStatement		319:67:7771:7919	507048	0					
ANR	507051	IfStatement	if ( method_idx < 0 || method_idx >= bin -> header . method_size )		507048	0					
ANR	507052	Condition	method_idx < 0 || method_idx >= bin -> header . method_size	320:5:7778:7832	507048	0	True				
ANR	507053	OrExpression	method_idx < 0 || method_idx >= bin -> header . method_size		507048	0		||			
ANR	507054	RelationalExpression	method_idx < 0		507048	0		<			
ANR	507055	Identifier	method_idx		507048	0					
ANR	507056	PrimaryExpression	0		507048	1					
ANR	507057	RelationalExpression	method_idx >= bin -> header . method_size		507048	1		>=			
ANR	507058	Identifier	method_idx		507048	0					
ANR	507059	MemberAccess	bin -> header . method_size		507048	1					
ANR	507060	PtrMemberAccess	bin -> header		507048	0					
ANR	507061	Identifier	bin		507048	0					
ANR	507062	Identifier	header		507048	1					
ANR	507063	Identifier	method_size		507048	1					
ANR	507064	CompoundStatement		2:62:63:63	507048	1					
ANR	507065	ReturnStatement	return NULL ;	321:2:7839:7850	507048	0	True				
ANR	507066	Identifier	NULL		507048	0					
ANR	507067	ReturnStatement	"return dex_get_proto ( bin , bin -> methods [ method_idx ] . proto_id ) ;"	323:1:7856:7917	507048	1	True				
ANR	507068	CallExpression	"dex_get_proto ( bin , bin -> methods [ method_idx ] . proto_id )"		507048	0					
ANR	507069	Callee	dex_get_proto		507048	0					
ANR	507070	Identifier	dex_get_proto		507048	0					
ANR	507071	ArgumentList	bin		507048	1					
ANR	507072	Argument	bin		507048	0					
ANR	507073	Identifier	bin		507048	0					
ANR	507074	Argument	bin -> methods [ method_idx ] . proto_id		507048	1					
ANR	507075	MemberAccess	bin -> methods [ method_idx ] . proto_id		507048	0					
ANR	507076	ArrayIndexing	bin -> methods [ method_idx ]		507048	0					
ANR	507077	PtrMemberAccess	bin -> methods		507048	0					
ANR	507078	Identifier	bin		507048	0					
ANR	507079	Identifier	methods		507048	1					
ANR	507080	Identifier	method_idx		507048	1					
ANR	507081	Identifier	proto_id		507048	1					
ANR	507082	ReturnType	static char *		507048	1					
ANR	507083	Identifier	dex_method_signature		507048	2					
ANR	507084	ParameterList	"RBinDexObj * bin , int method_idx"		507048	3					
ANR	507085	Parameter	RBinDexObj * bin	319:34:7738:7752	507048	0	True				
ANR	507086	ParameterType	RBinDexObj *		507048	0					
ANR	507087	Identifier	bin		507048	1					
ANR	507088	Parameter	int method_idx	319:51:7755:7768	507048	1	True				
ANR	507089	ParameterType	int		507048	0					
ANR	507090	Identifier	method_idx		507048	1					
ANR	507091	CFGEntryNode	ENTRY		507048		True				
ANR	507092	CFGExitNode	EXIT		507048		True				
ANR	507093	Symbol	dex_get_proto		507048						
ANR	507094	Symbol	method_idx		507048						
ANR	507095	Symbol	NULL		507048						
ANR	507096	Symbol	* bin -> methods		507048						
ANR	507097	Symbol	bin -> methods [ method_idx ] . proto_id		507048						
ANR	507098	Symbol	bin		507048						
ANR	507099	Symbol	bin -> header		507048						
ANR	507100	Symbol	bin -> methods		507048						
ANR	507101	Symbol	bin -> header . method_size		507048						
ANR	507102	Symbol	* * bin		507048						
ANR	507103	Symbol	* method_idx		507048						
ANR	507104	Symbol	* bin		507048						
ANR	507105	Function	read32	326:0:7922:8053							
ANR	507106	FunctionDef	"read32 (RBuffer * b , ut64 addr)"		507105	0					
ANR	507107	CompoundStatement		326:42:7964:8053	507105	0					
ANR	507108	IdentifierDeclStatement	ut32 n = 0 ;	327:1:7967:7977	507105	0	True				
ANR	507109	IdentifierDecl	n = 0		507105	0					
ANR	507110	IdentifierDeclType	ut32		507105	0					
ANR	507111	Identifier	n		507105	1					
ANR	507112	AssignmentExpression	n = 0		507105	2		=			
ANR	507113	Identifier	n		507105	0					
ANR	507114	PrimaryExpression	0		507105	1					
ANR	507115	ExpressionStatement	"r_buf_read_at ( b , addr , ( ut8 * ) & n , sizeof ( n ) )"	328:1:7980:8025	507105	1	True				
ANR	507116	CallExpression	"r_buf_read_at ( b , addr , ( ut8 * ) & n , sizeof ( n ) )"		507105	0					
ANR	507117	Callee	r_buf_read_at		507105	0					
ANR	507118	Identifier	r_buf_read_at		507105	0					
ANR	507119	ArgumentList	b		507105	1					
ANR	507120	Argument	b		507105	0					
ANR	507121	Identifier	b		507105	0					
ANR	507122	Argument	addr		507105	1					
ANR	507123	Identifier	addr		507105	0					
ANR	507124	Argument	( ut8 * ) & n		507105	2					
ANR	507125	CastExpression	( ut8 * ) & n		507105	0					
ANR	507126	CastTarget	ut8 *		507105	0					
ANR	507127	UnaryOperationExpression	& n		507105	1					
ANR	507128	UnaryOperator	&		507105	0					
ANR	507129	Identifier	n		507105	1					
ANR	507130	Argument	sizeof ( n )		507105	3					
ANR	507131	SizeofExpression	sizeof ( n )		507105	0					
ANR	507132	Sizeof	sizeof		507105	0					
ANR	507133	SizeofOperand	n		507105	1					
ANR	507134	ReturnStatement	return r_read_le32 ( & n ) ;	329:1:8028:8051	507105	2	True				
ANR	507135	CallExpression	r_read_le32 ( & n )		507105	0					
ANR	507136	Callee	r_read_le32		507105	0					
ANR	507137	Identifier	r_read_le32		507105	0					
ANR	507138	ArgumentList	& n		507105	1					
ANR	507139	Argument	& n		507105	0					
ANR	507140	UnaryOperationExpression	& n		507105	0					
ANR	507141	UnaryOperator	&		507105	0					
ANR	507142	Identifier	n		507105	1					
ANR	507143	ReturnType	static ut32		507105	1					
ANR	507144	Identifier	read32		507105	2					
ANR	507145	ParameterList	"RBuffer * b , ut64 addr"		507105	3					
ANR	507146	Parameter	RBuffer * b	326:19:7941:7950	507105	0	True				
ANR	507147	ParameterType	RBuffer *		507105	0					
ANR	507148	Identifier	b		507105	1					
ANR	507149	Parameter	ut64 addr	326:31:7953:7961	507105	1	True				
ANR	507150	ParameterType	ut64		507105	0					
ANR	507151	Identifier	addr		507105	1					
ANR	507152	CFGEntryNode	ENTRY		507105		True				
ANR	507153	CFGExitNode	EXIT		507105		True				
ANR	507154	Symbol	b		507105						
ANR	507155	Symbol	r_read_le32		507105						
ANR	507156	Symbol	& n		507105						
ANR	507157	Symbol	addr		507105						
ANR	507158	Symbol	n		507105						
ANR	507159	Function	read16	332:0:8056:8187							
ANR	507160	FunctionDef	"read16 (RBuffer * b , ut64 addr)"		507159	0					
ANR	507161	CompoundStatement		332:42:8098:8187	507159	0					
ANR	507162	IdentifierDeclStatement	ut16 n = 0 ;	333:1:8101:8111	507159	0	True				
ANR	507163	IdentifierDecl	n = 0		507159	0					
ANR	507164	IdentifierDeclType	ut16		507159	0					
ANR	507165	Identifier	n		507159	1					
ANR	507166	AssignmentExpression	n = 0		507159	2		=			
ANR	507167	Identifier	n		507159	0					
ANR	507168	PrimaryExpression	0		507159	1					
ANR	507169	ExpressionStatement	"r_buf_read_at ( b , addr , ( ut8 * ) & n , sizeof ( n ) )"	334:1:8114:8159	507159	1	True				
ANR	507170	CallExpression	"r_buf_read_at ( b , addr , ( ut8 * ) & n , sizeof ( n ) )"		507159	0					
ANR	507171	Callee	r_buf_read_at		507159	0					
ANR	507172	Identifier	r_buf_read_at		507159	0					
ANR	507173	ArgumentList	b		507159	1					
ANR	507174	Argument	b		507159	0					
ANR	507175	Identifier	b		507159	0					
ANR	507176	Argument	addr		507159	1					
ANR	507177	Identifier	addr		507159	0					
ANR	507178	Argument	( ut8 * ) & n		507159	2					
ANR	507179	CastExpression	( ut8 * ) & n		507159	0					
ANR	507180	CastTarget	ut8 *		507159	0					
ANR	507181	UnaryOperationExpression	& n		507159	1					
ANR	507182	UnaryOperator	&		507159	0					
ANR	507183	Identifier	n		507159	1					
ANR	507184	Argument	sizeof ( n )		507159	3					
ANR	507185	SizeofExpression	sizeof ( n )		507159	0					
ANR	507186	Sizeof	sizeof		507159	0					
ANR	507187	SizeofOperand	n		507159	1					
ANR	507188	ReturnStatement	return r_read_le16 ( & n ) ;	335:1:8162:8185	507159	2	True				
ANR	507189	CallExpression	r_read_le16 ( & n )		507159	0					
ANR	507190	Callee	r_read_le16		507159	0					
ANR	507191	Identifier	r_read_le16		507159	0					
ANR	507192	ArgumentList	& n		507159	1					
ANR	507193	Argument	& n		507159	0					
ANR	507194	UnaryOperationExpression	& n		507159	0					
ANR	507195	UnaryOperator	&		507159	0					
ANR	507196	Identifier	n		507159	1					
ANR	507197	ReturnType	static ut16		507159	1					
ANR	507198	Identifier	read16		507159	2					
ANR	507199	ParameterList	"RBuffer * b , ut64 addr"		507159	3					
ANR	507200	Parameter	RBuffer * b	332:19:8075:8084	507159	0	True				
ANR	507201	ParameterType	RBuffer *		507159	0					
ANR	507202	Identifier	b		507159	1					
ANR	507203	Parameter	ut64 addr	332:31:8087:8095	507159	1	True				
ANR	507204	ParameterType	ut64		507159	0					
ANR	507205	Identifier	addr		507159	1					
ANR	507206	CFGEntryNode	ENTRY		507159		True				
ANR	507207	CFGExitNode	EXIT		507159		True				
ANR	507208	Symbol	b		507159						
ANR	507209	Symbol	& n		507159						
ANR	507210	Symbol	addr		507159						
ANR	507211	Symbol	r_read_le16		507159						
ANR	507212	Symbol	n		507159						
ANR	507213	Function	dex_method_signature2	338:0:8190:9225							
ANR	507214	FunctionDef	"dex_method_signature2 (RBinDexObj * bin , int method_idx)"		507213	0					
ANR	507215	CompoundStatement		338:69:8259:9225	507213	0					
ANR	507216	IdentifierDeclStatement	"ut32 proto_id , params_off , list_size ;"	339:1:8262:8298	507213	0	True				
ANR	507217	IdentifierDecl	proto_id		507213	0					
ANR	507218	IdentifierDeclType	ut32		507213	0					
ANR	507219	Identifier	proto_id		507213	1					
ANR	507220	IdentifierDecl	params_off		507213	1					
ANR	507221	IdentifierDeclType	ut32		507213	0					
ANR	507222	Identifier	params_off		507213	1					
ANR	507223	IdentifierDecl	list_size		507213	2					
ANR	507224	IdentifierDeclType	ut32		507213	0					
ANR	507225	Identifier	list_size		507213	1					
ANR	507226	IdentifierDeclStatement	ut16 type_idx ;	340:1:8301:8314	507213	1	True				
ANR	507227	IdentifierDecl	type_idx		507213	0					
ANR	507228	IdentifierDeclType	ut16		507213	0					
ANR	507229	Identifier	type_idx		507213	1					
ANR	507230	IdentifierDeclStatement	int i ;	341:1:8317:8322	507213	2	True				
ANR	507231	IdentifierDecl	i		507213	0					
ANR	507232	IdentifierDeclType	int		507213	0					
ANR	507233	Identifier	i		507213	1					
ANR	507234	IdentifierDeclStatement	RList * params = r_list_newf ( free ) ;	343:1:8326:8360	507213	3	True				
ANR	507235	IdentifierDecl	* params = r_list_newf ( free )		507213	0					
ANR	507236	IdentifierDeclType	RList *		507213	0					
ANR	507237	Identifier	params		507213	1					
ANR	507238	AssignmentExpression	* params = r_list_newf ( free )		507213	2		=			
ANR	507239	Identifier	params		507213	0					
ANR	507240	CallExpression	r_list_newf ( free )		507213	1					
ANR	507241	Callee	r_list_newf		507213	0					
ANR	507242	Identifier	r_list_newf		507213	0					
ANR	507243	ArgumentList	free		507213	1					
ANR	507244	Argument	free		507213	0					
ANR	507245	Identifier	free		507213	0					
ANR	507246	IfStatement	if ( ! params )		507213	4					
ANR	507247	Condition	! params	344:5:8367:8373	507213	0	True				
ANR	507248	UnaryOperationExpression	! params		507213	0					
ANR	507249	UnaryOperator	!		507213	0					
ANR	507250	Identifier	params		507213	1					
ANR	507251	CompoundStatement		7:14:116:116	507213	1					
ANR	507252	ReturnStatement	return NULL ;	345:2:8380:8391	507213	0	True				
ANR	507253	Identifier	NULL		507213	0					
ANR	507254	IfStatement	if ( method_idx < 0 || method_idx >= bin -> header . method_size )		507213	5					
ANR	507255	Condition	method_idx < 0 || method_idx >= bin -> header . method_size	347:5:8401:8455	507213	0	True				
ANR	507256	OrExpression	method_idx < 0 || method_idx >= bin -> header . method_size		507213	0		||			
ANR	507257	RelationalExpression	method_idx < 0		507213	0		<			
ANR	507258	Identifier	method_idx		507213	0					
ANR	507259	PrimaryExpression	0		507213	1					
ANR	507260	RelationalExpression	method_idx >= bin -> header . method_size		507213	1		>=			
ANR	507261	Identifier	method_idx		507213	0					
ANR	507262	MemberAccess	bin -> header . method_size		507213	1					
ANR	507263	PtrMemberAccess	bin -> header		507213	0					
ANR	507264	Identifier	bin		507213	0					
ANR	507265	Identifier	header		507213	1					
ANR	507266	Identifier	method_size		507213	1					
ANR	507267	CompoundStatement		10:62:198:198	507213	1					
ANR	507268	GotoStatement	goto out_error ;	348:2:8462:8476	507213	0	True				
ANR	507269	Identifier	out_error		507213	0					
ANR	507270	ExpressionStatement	proto_id = bin -> methods [ method_idx ] . proto_id	350:1:8482:8526	507213	6	True				
ANR	507271	AssignmentExpression	proto_id = bin -> methods [ method_idx ] . proto_id		507213	0		=			
ANR	507272	Identifier	proto_id		507213	0					
ANR	507273	MemberAccess	bin -> methods [ method_idx ] . proto_id		507213	1					
ANR	507274	ArrayIndexing	bin -> methods [ method_idx ]		507213	0					
ANR	507275	PtrMemberAccess	bin -> methods		507213	0					
ANR	507276	Identifier	bin		507213	0					
ANR	507277	Identifier	methods		507213	1					
ANR	507278	Identifier	method_idx		507213	1					
ANR	507279	Identifier	proto_id		507213	1					
ANR	507280	IfStatement	if ( proto_id >= bin -> header . prototypes_size )		507213	7					
ANR	507281	Condition	proto_id >= bin -> header . prototypes_size	351:5:8533:8571	507213	0	True				
ANR	507282	RelationalExpression	proto_id >= bin -> header . prototypes_size		507213	0		>=			
ANR	507283	Identifier	proto_id		507213	0					
ANR	507284	MemberAccess	bin -> header . prototypes_size		507213	1					
ANR	507285	PtrMemberAccess	bin -> header		507213	0					
ANR	507286	Identifier	bin		507213	0					
ANR	507287	Identifier	header		507213	1					
ANR	507288	Identifier	prototypes_size		507213	1					
ANR	507289	CompoundStatement		14:46:314:314	507213	1					
ANR	507290	GotoStatement	goto out_error ;	352:2:8578:8592	507213	0	True				
ANR	507291	Identifier	out_error		507213	0					
ANR	507292	ExpressionStatement	params_off = bin -> protos [ proto_id ] . parameters_off	354:1:8598:8647	507213	8	True				
ANR	507293	AssignmentExpression	params_off = bin -> protos [ proto_id ] . parameters_off		507213	0		=			
ANR	507294	Identifier	params_off		507213	0					
ANR	507295	MemberAccess	bin -> protos [ proto_id ] . parameters_off		507213	1					
ANR	507296	ArrayIndexing	bin -> protos [ proto_id ]		507213	0					
ANR	507297	PtrMemberAccess	bin -> protos		507213	0					
ANR	507298	Identifier	bin		507213	0					
ANR	507299	Identifier	protos		507213	1					
ANR	507300	Identifier	proto_id		507213	1					
ANR	507301	Identifier	parameters_off		507213	1					
ANR	507302	IfStatement	if ( params_off >= bin -> size )		507213	9					
ANR	507303	Condition	params_off >= bin -> size	355:5:8654:8677	507213	0	True				
ANR	507304	RelationalExpression	params_off >= bin -> size		507213	0		>=			
ANR	507305	Identifier	params_off		507213	0					
ANR	507306	PtrMemberAccess	bin -> size		507213	1					
ANR	507307	Identifier	bin		507213	0					
ANR	507308	Identifier	size		507213	1					
ANR	507309	CompoundStatement		18:31:420:420	507213	1					
ANR	507310	GotoStatement	goto out_error ;	356:2:8684:8698	507213	0	True				
ANR	507311	Identifier	out_error		507213	0					
ANR	507312	IfStatement	if ( ! params_off )		507213	10					
ANR	507313	Condition	! params_off	358:5:8708:8718	507213	0	True				
ANR	507314	UnaryOperationExpression	! params_off		507213	0					
ANR	507315	UnaryOperator	!		507213	0					
ANR	507316	Identifier	params_off		507213	1					
ANR	507317	CompoundStatement		21:18:461:461	507213	1					
ANR	507318	ReturnStatement	return params ;	359:2:8725:8738	507213	0	True				
ANR	507319	Identifier	params		507213	0					
ANR	507320	ExpressionStatement	"list_size = read32 ( bin -> b , params_off )"	361:1:8744:8783	507213	11	True				
ANR	507321	AssignmentExpression	"list_size = read32 ( bin -> b , params_off )"		507213	0		=			
ANR	507322	Identifier	list_size		507213	0					
ANR	507323	CallExpression	"read32 ( bin -> b , params_off )"		507213	1					
ANR	507324	Callee	read32		507213	0					
ANR	507325	Identifier	read32		507213	0					
ANR	507326	ArgumentList	bin -> b		507213	1					
ANR	507327	Argument	bin -> b		507213	0					
ANR	507328	PtrMemberAccess	bin -> b		507213	0					
ANR	507329	Identifier	bin		507213	0					
ANR	507330	Identifier	b		507213	1					
ANR	507331	Argument	params_off		507213	1					
ANR	507332	Identifier	params_off		507213	0					
ANR	507333	ForStatement	for ( i = 0 ; i < list_size ; i ++ )		507213	12					
ANR	507334	ForInit	i = 0 ;	362:6:8791:8796	507213	0	True				
ANR	507335	AssignmentExpression	i = 0		507213	0		=			
ANR	507336	Identifier	i		507213	0					
ANR	507337	PrimaryExpression	0		507213	1					
ANR	507338	Condition	i < list_size	362:13:8798:8810	507213	1	True				
ANR	507339	RelationalExpression	i < list_size		507213	0		<			
ANR	507340	Identifier	i		507213	0					
ANR	507341	Identifier	list_size		507213	1					
ANR	507342	PostIncDecOperationExpression	i ++	362:28:8813:8815	507213	2	True				
ANR	507343	Identifier	i		507213	0					
ANR	507344	IncDec	++		507213	1					
ANR	507345	CompoundStatement		34:2:774:835	507213	3					
ANR	507346	IdentifierDeclStatement	ut64 of = params_off + 4 + ( i * 2 ) ;	363:2:8822:8856	507213	0	True				
ANR	507347	IdentifierDecl	of = params_off + 4 + ( i * 2 )		507213	0					
ANR	507348	IdentifierDeclType	ut64		507213	0					
ANR	507349	Identifier	of		507213	1					
ANR	507350	AssignmentExpression	of = params_off + 4 + ( i * 2 )		507213	2		=			
ANR	507351	Identifier	of		507213	0					
ANR	507352	AdditiveExpression	params_off + 4 + ( i * 2 )		507213	1		+			
ANR	507353	Identifier	params_off		507213	0					
ANR	507354	AdditiveExpression	4 + ( i * 2 )		507213	1		+			
ANR	507355	PrimaryExpression	4		507213	0					
ANR	507356	MultiplicativeExpression	i * 2		507213	1		*			
ANR	507357	Identifier	i		507213	0					
ANR	507358	PrimaryExpression	2		507213	1					
ANR	507359	IfStatement	if ( of >= bin -> size || of < params_off )		507213	1					
ANR	507360	Condition	of >= bin -> size || of < params_off	364:6:8864:8897	507213	0	True				
ANR	507361	OrExpression	of >= bin -> size || of < params_off		507213	0		||			
ANR	507362	RelationalExpression	of >= bin -> size		507213	0		>=			
ANR	507363	Identifier	of		507213	0					
ANR	507364	PtrMemberAccess	bin -> size		507213	1					
ANR	507365	Identifier	bin		507213	0					
ANR	507366	Identifier	size		507213	1					
ANR	507367	RelationalExpression	of < params_off		507213	1		<			
ANR	507368	Identifier	of		507213	0					
ANR	507369	Identifier	params_off		507213	1					
ANR	507370	CompoundStatement		27:42:640:640	507213	1					
ANR	507371	BreakStatement	break ;	365:3:8905:8910	507213	0	True				
ANR	507372	ExpressionStatement	"type_idx = read16 ( bin -> b , of )"	367:2:8918:8948	507213	2	True				
ANR	507373	AssignmentExpression	"type_idx = read16 ( bin -> b , of )"		507213	0		=			
ANR	507374	Identifier	type_idx		507213	0					
ANR	507375	CallExpression	"read16 ( bin -> b , of )"		507213	1					
ANR	507376	Callee	read16		507213	0					
ANR	507377	Identifier	read16		507213	0					
ANR	507378	ArgumentList	bin -> b		507213	1					
ANR	507379	Argument	bin -> b		507213	0					
ANR	507380	PtrMemberAccess	bin -> b		507213	0					
ANR	507381	Identifier	bin		507213	0					
ANR	507382	Identifier	b		507213	1					
ANR	507383	Argument	of		507213	1					
ANR	507384	Identifier	of		507213	0					
ANR	507385	IfStatement	if ( type_idx >= bin -> header . types_size || type_idx > bin -> size )		507213	3					
ANR	507386	Condition	type_idx >= bin -> header . types_size || type_idx > bin -> size	368:6:8956:9013	507213	0	True				
ANR	507387	OrExpression	type_idx >= bin -> header . types_size || type_idx > bin -> size		507213	0		||			
ANR	507388	RelationalExpression	type_idx >= bin -> header . types_size		507213	0		>=			
ANR	507389	Identifier	type_idx		507213	0					
ANR	507390	MemberAccess	bin -> header . types_size		507213	1					
ANR	507391	PtrMemberAccess	bin -> header		507213	0					
ANR	507392	Identifier	bin		507213	0					
ANR	507393	Identifier	header		507213	1					
ANR	507394	Identifier	types_size		507213	1					
ANR	507395	RelationalExpression	type_idx > bin -> size		507213	1		>			
ANR	507396	Identifier	type_idx		507213	0					
ANR	507397	PtrMemberAccess	bin -> size		507213	1					
ANR	507398	Identifier	bin		507213	0					
ANR	507399	Identifier	size		507213	1					
ANR	507400	CompoundStatement		31:66:756:756	507213	1					
ANR	507401	BreakStatement	break ;	369:3:9021:9026	507213	0	True				
ANR	507402	IdentifierDeclStatement	"char * buff = getstr ( bin , bin -> types [ type_idx ] . descriptor_id ) ;"	371:2:9034:9095	507213	4	True				
ANR	507403	IdentifierDecl	"* buff = getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"		507213	0					
ANR	507404	IdentifierDeclType	char *		507213	0					
ANR	507405	Identifier	buff		507213	1					
ANR	507406	AssignmentExpression	"* buff = getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"		507213	2		=			
ANR	507407	Identifier	buff		507213	0					
ANR	507408	CallExpression	"getstr ( bin , bin -> types [ type_idx ] . descriptor_id )"		507213	1					
ANR	507409	Callee	getstr		507213	0					
ANR	507410	Identifier	getstr		507213	0					
ANR	507411	ArgumentList	bin		507213	1					
ANR	507412	Argument	bin		507213	0					
ANR	507413	Identifier	bin		507213	0					
ANR	507414	Argument	bin -> types [ type_idx ] . descriptor_id		507213	1					
ANR	507415	MemberAccess	bin -> types [ type_idx ] . descriptor_id		507213	0					
ANR	507416	ArrayIndexing	bin -> types [ type_idx ]		507213	0					
ANR	507417	PtrMemberAccess	bin -> types		507213	0					
ANR	507418	Identifier	bin		507213	0					
ANR	507419	Identifier	types		507213	1					
ANR	507420	Identifier	type_idx		507213	1					
ANR	507421	Identifier	descriptor_id		507213	1					
ANR	507422	IfStatement	if ( ! buff )		507213	5					
ANR	507423	Condition	! buff	372:6:9103:9107	507213	0	True				
ANR	507424	UnaryOperationExpression	! buff		507213	0					
ANR	507425	UnaryOperator	!		507213	0					
ANR	507426	Identifier	buff		507213	1					
ANR	507427	CompoundStatement		35:13:850:850	507213	1					
ANR	507428	BreakStatement	break ;	373:3:9115:9120	507213	0	True				
ANR	507429	ExpressionStatement	"r_list_append ( params , buff )"	375:2:9128:9156	507213	6	True				
ANR	507430	CallExpression	"r_list_append ( params , buff )"		507213	0					
ANR	507431	Callee	r_list_append		507213	0					
ANR	507432	Identifier	r_list_append		507213	0					
ANR	507433	ArgumentList	params		507213	1					
ANR	507434	Argument	params		507213	0					
ANR	507435	Identifier	params		507213	0					
ANR	507436	Argument	buff		507213	1					
ANR	507437	Identifier	buff		507213	0					
ANR	507438	ReturnStatement	return params ;	377:1:9162:9175	507213	13	True				
ANR	507439	Identifier	params		507213	0					
ANR	507440	Label	out_error :	378:0:9177:9186	507213	14	True				
ANR	507441	Identifier	out_error		507213	0					
ANR	507442	ExpressionStatement	r_list_free ( params )	379:1:9189:9209	507213	15	True				
ANR	507443	CallExpression	r_list_free ( params )		507213	0					
ANR	507444	Callee	r_list_free		507213	0					
ANR	507445	Identifier	r_list_free		507213	0					
ANR	507446	ArgumentList	params		507213	1					
ANR	507447	Argument	params		507213	0					
ANR	507448	Identifier	params		507213	0					
ANR	507449	ReturnStatement	return NULL ;	380:1:9212:9223	507213	16	True				
ANR	507450	Identifier	NULL		507213	0					
ANR	507451	ReturnType	static RList *		507213	1					
ANR	507452	Identifier	dex_method_signature2		507213	2					
ANR	507453	ParameterList	"RBinDexObj * bin , int method_idx"		507213	3					
ANR	507454	Parameter	RBinDexObj * bin	338:36:8226:8240	507213	0	True				
ANR	507455	ParameterType	RBinDexObj *		507213	0					
ANR	507456	Identifier	bin		507213	1					
ANR	507457	Parameter	int method_idx	338:53:8243:8256	507213	1	True				
ANR	507458	ParameterType	int		507213	0					
ANR	507459	Identifier	method_idx		507213	1					
ANR	507460	CFGEntryNode	ENTRY		507213		True				
ANR	507461	CFGExitNode	EXIT		507213		True				
ANR	507462	Symbol	bin -> protos [ proto_id ] . parameters_off		507213						
ANR	507463	Symbol	bin -> size		507213						
ANR	507464	Symbol	bin -> b		507213						
ANR	507465	Symbol	* bin -> types		507213						
ANR	507466	Symbol	bin		507213						
ANR	507467	Symbol	bin -> header		507213						
ANR	507468	Symbol	list_size		507213						
ANR	507469	Symbol	type_idx		507213						
ANR	507470	Symbol	* bin		507213						
ANR	507471	Symbol	getstr		507213						
ANR	507472	Symbol	bin -> methods [ method_idx ] . proto_id		507213						
ANR	507473	Symbol	bin -> header . types_size		507213						
ANR	507474	Symbol	of		507213						
ANR	507475	Symbol	proto_id		507213						
ANR	507476	Symbol	bin -> methods		507213						
ANR	507477	Symbol	* * bin		507213						
ANR	507478	Symbol	free		507213						
ANR	507479	Symbol	* type_idx		507213						
ANR	507480	Symbol	NULL		507213						
ANR	507481	Symbol	params_off		507213						
ANR	507482	Symbol	r_list_newf		507213						
ANR	507483	Symbol	bin -> header . prototypes_size		507213						
ANR	507484	Symbol	bin -> protos		507213						
ANR	507485	Symbol	i		507213						
ANR	507486	Symbol	* bin -> protos		507213						
ANR	507487	Symbol	bin -> types [ type_idx ] . descriptor_id		507213						
ANR	507488	Symbol	params		507213						
ANR	507489	Symbol	* proto_id		507213						
ANR	507490	Symbol	read32		507213						
ANR	507491	Symbol	method_idx		507213						
ANR	507492	Symbol	* bin -> methods		507213						
ANR	507493	Symbol	bin -> header . method_size		507213						
ANR	507494	Symbol	bin -> types		507213						
ANR	507495	Symbol	* method_idx		507213						
ANR	507496	Symbol	buff		507213						
ANR	507497	Symbol	read16		507213						
ANR	507498	Function	dex_parse_debug_item	387:0:9574:20388							
ANR	507499	FunctionDef	"dex_parse_debug_item (RBinFile * bf , RBinDexObj * bin , RBinDexClass * c , int MI , int MA , int paddr , int ins_size , int insns_size , char * class_name , int regsz , int debug_info_off)"		507498	0					
ANR	507500	CompoundStatement		390:26:9779:20388	507498	0					
ANR	507501	IdentifierDeclStatement	struct r_bin_t * rbin = bf -> rbin ;	391:1:9782:9813	507498	0	True				
ANR	507502	IdentifierDecl	* rbin = bf -> rbin		507498	0					
ANR	507503	IdentifierDeclType	struct r_bin_t *		507498	0					
ANR	507504	Identifier	rbin		507498	1					
ANR	507505	AssignmentExpression	* rbin = bf -> rbin		507498	2		=			
ANR	507506	Identifier	rbin		507498	0					
ANR	507507	PtrMemberAccess	bf -> rbin		507498	1					
ANR	507508	Identifier	bf		507498	0					
ANR	507509	Identifier	rbin		507498	1					
ANR	507510	IdentifierDeclStatement	struct r_bin_dex_obj_t * dex = bf -> o -> bin_obj ;	392:1:9816:9860	507498	1	True				
ANR	507511	IdentifierDecl	* dex = bf -> o -> bin_obj		507498	0					
ANR	507512	IdentifierDeclType	struct r_bin_dex_obj_t *		507498	0					
ANR	507513	Identifier	dex		507498	1					
ANR	507514	AssignmentExpression	* dex = bf -> o -> bin_obj		507498	2		=			
ANR	507515	Identifier	dex		507498	0					
ANR	507516	PtrMemberAccess	bf -> o -> bin_obj		507498	1					
ANR	507517	PtrMemberAccess	bf -> o		507498	0					
ANR	507518	Identifier	bf		507498	0					
ANR	507519	Identifier	o		507498	1					
ANR	507520	Identifier	bin_obj		507498	1					
ANR	507521	IfStatement	if ( debug_info_off >= r_buf_size ( bf -> buf ) )		507498	2					
ANR	507522	Condition	debug_info_off >= r_buf_size ( bf -> buf )	394:5:9969:10006	507498	0	True				
ANR	507523	RelationalExpression	debug_info_off >= r_buf_size ( bf -> buf )		507498	0		>=			
ANR	507524	Identifier	debug_info_off		507498	0					
ANR	507525	CallExpression	r_buf_size ( bf -> buf )		507498	1					
ANR	507526	Callee	r_buf_size		507498	0					
ANR	507527	Identifier	r_buf_size		507498	0					
ANR	507528	ArgumentList	bf -> buf		507498	1					
ANR	507529	Argument	bf -> buf		507498	0					
ANR	507530	PtrMemberAccess	bf -> buf		507498	0					
ANR	507531	Identifier	bf		507498	0					
ANR	507532	Identifier	buf		507498	1					
ANR	507533	CompoundStatement		5:45:229:229	507498	1					
ANR	507534	ReturnStatement	return ;	395:2:10013:10019	507498	0	True				
ANR	507535	IdentifierDeclStatement	int buf_size = r_buf_size ( bf -> buf ) - debug_info_off ;	397:1:10025:10077	507498	3	True				
ANR	507536	IdentifierDecl	buf_size = r_buf_size ( bf -> buf ) - debug_info_off		507498	0					
ANR	507537	IdentifierDeclType	int		507498	0					
ANR	507538	Identifier	buf_size		507498	1					
ANR	507539	AssignmentExpression	buf_size = r_buf_size ( bf -> buf ) - debug_info_off		507498	2		=			
ANR	507540	Identifier	buf_size		507498	0					
ANR	507541	AdditiveExpression	r_buf_size ( bf -> buf ) - debug_info_off		507498	1		-			
ANR	507542	CallExpression	r_buf_size ( bf -> buf )		507498	0					
ANR	507543	Callee	r_buf_size		507498	0					
ANR	507544	Identifier	r_buf_size		507498	0					
ANR	507545	ArgumentList	bf -> buf		507498	1					
ANR	507546	Argument	bf -> buf		507498	0					
ANR	507547	PtrMemberAccess	bf -> buf		507498	0					
ANR	507548	Identifier	bf		507498	0					
ANR	507549	Identifier	buf		507498	1					
ANR	507550	Identifier	debug_info_off		507498	1					
ANR	507551	IdentifierDeclStatement	ut8 * buf = malloc ( buf_size ) ;	398:1:10080:10108	507498	4	True				
ANR	507552	IdentifierDecl	* buf = malloc ( buf_size )		507498	0					
ANR	507553	IdentifierDeclType	ut8 *		507498	0					
ANR	507554	Identifier	buf		507498	1					
ANR	507555	AssignmentExpression	* buf = malloc ( buf_size )		507498	2		=			
ANR	507556	Identifier	buf		507498	0					
ANR	507557	CallExpression	malloc ( buf_size )		507498	1					
ANR	507558	Callee	malloc		507498	0					
ANR	507559	Identifier	malloc		507498	0					
ANR	507560	ArgumentList	buf_size		507498	1					
ANR	507561	Argument	buf_size		507498	0					
ANR	507562	Identifier	buf_size		507498	0					
ANR	507563	IfStatement	if ( ! buf )		507498	5					
ANR	507564	Condition	! buf	399:5:10115:10118	507498	0	True				
ANR	507565	UnaryOperationExpression	! buf		507498	0					
ANR	507566	UnaryOperator	!		507498	0					
ANR	507567	Identifier	buf		507498	1					
ANR	507568	CompoundStatement		10:11:341:341	507498	1					
ANR	507569	ReturnStatement	return ;	400:2:10125:10131	507498	0	True				
ANR	507570	ExpressionStatement	"r_buf_read_at ( bf -> buf , debug_info_off , buf , buf_size )"	402:1:10137:10191	507498	6	True				
ANR	507571	CallExpression	"r_buf_read_at ( bf -> buf , debug_info_off , buf , buf_size )"		507498	0					
ANR	507572	Callee	r_buf_read_at		507498	0					
ANR	507573	Identifier	r_buf_read_at		507498	0					
ANR	507574	ArgumentList	bf -> buf		507498	1					
ANR	507575	Argument	bf -> buf		507498	0					
ANR	507576	PtrMemberAccess	bf -> buf		507498	0					
ANR	507577	Identifier	bf		507498	0					
ANR	507578	Identifier	buf		507498	1					
ANR	507579	Argument	debug_info_off		507498	1					
ANR	507580	Identifier	debug_info_off		507498	0					
ANR	507581	Argument	buf		507498	2					
ANR	507582	Identifier	buf		507498	0					
ANR	507583	Argument	buf_size		507498	3					
ANR	507584	Identifier	buf_size		507498	0					
ANR	507585	IdentifierDeclStatement	const ut8 * p4 = buf ;	403:1:10194:10213	507498	7	True				
ANR	507586	IdentifierDecl	* p4 = buf		507498	0					
ANR	507587	IdentifierDeclType	const ut8 *		507498	0					
ANR	507588	Identifier	p4		507498	1					
ANR	507589	AssignmentExpression	* p4 = buf		507498	2		=			
ANR	507590	Identifier	buf		507498	0					
ANR	507591	Identifier	buf		507498	1					
ANR	507592	IdentifierDeclStatement	const ut8 * p4_end = buf + buf_size ;	404:1:10216:10250	507498	8	True				
ANR	507593	IdentifierDecl	* p4_end = buf + buf_size		507498	0					
ANR	507594	IdentifierDeclType	const ut8 *		507498	0					
ANR	507595	Identifier	p4_end		507498	1					
ANR	507596	AssignmentExpression	* p4_end = buf + buf_size		507498	2		=			
ANR	507597	Identifier	p4_end		507498	0					
ANR	507598	AdditiveExpression	buf + buf_size		507498	1		+			
ANR	507599	Identifier	buf		507498	0					
ANR	507600	Identifier	buf_size		507498	1					
ANR	507601	IdentifierDeclStatement	ut64 line_start ;	405:1:10253:10268	507498	9	True				
ANR	507602	IdentifierDecl	line_start		507498	0					
ANR	507603	IdentifierDeclType	ut64		507498	0					
ANR	507604	Identifier	line_start		507498	1					
ANR	507605	IdentifierDeclStatement	ut64 parameters_size ;	406:1:10271:10291	507498	10	True				
ANR	507606	IdentifierDecl	parameters_size		507498	0					
ANR	507607	IdentifierDeclType	ut64		507498	0					
ANR	507608	Identifier	parameters_size		507498	1					
ANR	507609	IdentifierDeclStatement	ut64 param_type_idx ;	407:1:10294:10313	507498	11	True				
ANR	507610	IdentifierDecl	param_type_idx		507498	0					
ANR	507611	IdentifierDeclType	ut64		507498	0					
ANR	507612	Identifier	param_type_idx		507498	1					
ANR	507613	IdentifierDeclStatement	ut16 argReg = regsz - ins_size ;	408:1:10316:10346	507498	12	True				
ANR	507614	IdentifierDecl	argReg = regsz - ins_size		507498	0					
ANR	507615	IdentifierDeclType	ut16		507498	0					
ANR	507616	Identifier	argReg		507498	1					
ANR	507617	AssignmentExpression	argReg = regsz - ins_size		507498	2		=			
ANR	507618	Identifier	argReg		507498	0					
ANR	507619	AdditiveExpression	regsz - ins_size		507498	1		-			
ANR	507620	Identifier	regsz		507498	0					
ANR	507621	Identifier	ins_size		507498	1					
ANR	507622	IdentifierDeclStatement	ut64 source_file_idx = c -> source_file ;	409:1:10349:10386	507498	13	True				
ANR	507623	IdentifierDecl	source_file_idx = c -> source_file		507498	0					
ANR	507624	IdentifierDeclType	ut64		507498	0					
ANR	507625	Identifier	source_file_idx		507498	1					
ANR	507626	AssignmentExpression	source_file_idx = c -> source_file		507498	2		=			
ANR	507627	Identifier	source_file_idx		507498	0					
ANR	507628	PtrMemberAccess	c -> source_file		507498	1					
ANR	507629	Identifier	c		507498	0					
ANR	507630	Identifier	source_file		507498	1					
ANR	507631	IdentifierDeclStatement	"RList * params , * debug_positions , * emitted_debug_locals = NULL ;"	410:1:10389:10450	507498	14	True				
ANR	507632	IdentifierDecl	* params		507498	0					
ANR	507633	IdentifierDeclType	RList *		507498	0					
ANR	507634	Identifier	params		507498	1					
ANR	507635	IdentifierDecl	* debug_positions		507498	1					
ANR	507636	IdentifierDeclType	RList *		507498	0					
ANR	507637	Identifier	debug_positions		507498	1					
ANR	507638	IdentifierDecl	* emitted_debug_locals = NULL		507498	2					
ANR	507639	IdentifierDeclType	RList *		507498	0					
ANR	507640	Identifier	emitted_debug_locals		507498	1					
ANR	507641	AssignmentExpression	* emitted_debug_locals = NULL		507498	2		=			
ANR	507642	Identifier	NULL		507498	0					
ANR	507643	Identifier	NULL		507498	1					
ANR	507644	IdentifierDeclStatement	bool keep = true ;	411:1:10453:10469	507498	15	True				
ANR	507645	IdentifierDecl	keep = true		507498	0					
ANR	507646	IdentifierDeclType	bool		507498	0					
ANR	507647	Identifier	keep		507498	1					
ANR	507648	AssignmentExpression	keep = true		507498	2		=			
ANR	507649	Identifier	true		507498	0					
ANR	507650	Identifier	true		507498	1					
ANR	507651	IfStatement	if ( argReg > regsz )		507498	16					
ANR	507652	Condition	argReg > regsz	412:5:10476:10489	507498	0	True				
ANR	507653	RelationalExpression	argReg > regsz		507498	0		>			
ANR	507654	Identifier	argReg		507498	0					
ANR	507655	Identifier	regsz		507498	1					
ANR	507656	CompoundStatement		23:21:712:712	507498	1					
ANR	507657	ExpressionStatement	free ( buf )	413:2:10496:10506	507498	0	True				
ANR	507658	CallExpression	free ( buf )		507498	0					
ANR	507659	Callee	free		507498	0					
ANR	507660	Identifier	free		507498	0					
ANR	507661	ArgumentList	buf		507498	1					
ANR	507662	Argument	buf		507498	0					
ANR	507663	Identifier	buf		507498	0					
ANR	507664	ReturnStatement	return ;	414:2:10510:10516	507498	1	True				
ANR	507665	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & line_start )"	416:1:10550:10595	507498	17	True				
ANR	507666	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & line_start )"		507498	0		=			
ANR	507667	Identifier	p4		507498	0					
ANR	507668	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & line_start )"		507498	1					
ANR	507669	Callee	r_uleb128		507498	0					
ANR	507670	Identifier	r_uleb128		507498	0					
ANR	507671	ArgumentList	p4		507498	1					
ANR	507672	Argument	p4		507498	0					
ANR	507673	Identifier	p4		507498	0					
ANR	507674	Argument	p4_end - p4		507498	1					
ANR	507675	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	507676	Identifier	p4_end		507498	0					
ANR	507677	Identifier	p4		507498	1					
ANR	507678	Argument	& line_start		507498	2					
ANR	507679	UnaryOperationExpression	& line_start		507498	0					
ANR	507680	UnaryOperator	&		507498	0					
ANR	507681	Identifier	line_start		507498	1					
ANR	507682	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & parameters_size )"	417:1:10598:10648	507498	18	True				
ANR	507683	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & parameters_size )"		507498	0		=			
ANR	507684	Identifier	p4		507498	0					
ANR	507685	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & parameters_size )"		507498	1					
ANR	507686	Callee	r_uleb128		507498	0					
ANR	507687	Identifier	r_uleb128		507498	0					
ANR	507688	ArgumentList	p4		507498	1					
ANR	507689	Argument	p4		507498	0					
ANR	507690	Identifier	p4		507498	0					
ANR	507691	Argument	p4_end - p4		507498	1					
ANR	507692	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	507693	Identifier	p4_end		507498	0					
ANR	507694	Identifier	p4		507498	1					
ANR	507695	Argument	& parameters_size		507498	2					
ANR	507696	UnaryOperationExpression	& parameters_size		507498	0					
ANR	507697	UnaryOperator	&		507498	0					
ANR	507698	Identifier	parameters_size		507498	1					
ANR	507699	IdentifierDeclStatement	ut32 address = 0 ;	420:1:10747:10763	507498	19	True				
ANR	507700	IdentifierDecl	address = 0		507498	0					
ANR	507701	IdentifierDeclType	ut32		507498	0					
ANR	507702	Identifier	address		507498	1					
ANR	507703	AssignmentExpression	address = 0		507498	2		=			
ANR	507704	Identifier	address		507498	0					
ANR	507705	PrimaryExpression	0		507498	1					
ANR	507706	IdentifierDeclStatement	ut32 line = line_start ;	421:1:10766:10788	507498	20	True				
ANR	507707	IdentifierDecl	line = line_start		507498	0					
ANR	507708	IdentifierDeclType	ut32		507498	0					
ANR	507709	Identifier	line		507498	1					
ANR	507710	AssignmentExpression	line = line_start		507498	2		=			
ANR	507711	Identifier	line_start		507498	0					
ANR	507712	Identifier	line_start		507498	1					
ANR	507713	IfStatement	if ( ! ( debug_positions = r_list_newf ( ( RListFree ) free ) ) )		507498	21					
ANR	507714	Condition	! ( debug_positions = r_list_newf ( ( RListFree ) free ) )	422:5:10795:10844	507498	0	True				
ANR	507715	UnaryOperationExpression	! ( debug_positions = r_list_newf ( ( RListFree ) free ) )		507498	0					
ANR	507716	UnaryOperator	!		507498	0					
ANR	507717	AssignmentExpression	debug_positions = r_list_newf ( ( RListFree ) free )		507498	1		=			
ANR	507718	Identifier	debug_positions		507498	0					
ANR	507719	CallExpression	r_list_newf ( ( RListFree ) free )		507498	1					
ANR	507720	Callee	r_list_newf		507498	0					
ANR	507721	Identifier	r_list_newf		507498	0					
ANR	507722	ArgumentList	( RListFree ) free		507498	1					
ANR	507723	Argument	( RListFree ) free		507498	0					
ANR	507724	CastExpression	( RListFree ) free		507498	0					
ANR	507725	CastTarget	RListFree		507498	0					
ANR	507726	Identifier	free		507498	1					
ANR	507727	CompoundStatement		33:57:1067:1067	507498	1					
ANR	507728	ExpressionStatement	free ( buf )	423:2:10851:10861	507498	0	True				
ANR	507729	CallExpression	free ( buf )		507498	0					
ANR	507730	Callee	free		507498	0					
ANR	507731	Identifier	free		507498	0					
ANR	507732	ArgumentList	buf		507498	1					
ANR	507733	Argument	buf		507498	0					
ANR	507734	Identifier	buf		507498	0					
ANR	507735	ReturnStatement	return ;	424:2:10865:10871	507498	1	True				
ANR	507736	IfStatement	if ( ! ( emitted_debug_locals = r_list_newf ( ( RListFree ) free ) ) )		507498	22					
ANR	507737	Condition	! ( emitted_debug_locals = r_list_newf ( ( RListFree ) free ) )	426:5:10881:10935	507498	0	True				
ANR	507738	UnaryOperationExpression	! ( emitted_debug_locals = r_list_newf ( ( RListFree ) free ) )		507498	0					
ANR	507739	UnaryOperator	!		507498	0					
ANR	507740	AssignmentExpression	emitted_debug_locals = r_list_newf ( ( RListFree ) free )		507498	1		=			
ANR	507741	Identifier	emitted_debug_locals		507498	0					
ANR	507742	CallExpression	r_list_newf ( ( RListFree ) free )		507498	1					
ANR	507743	Callee	r_list_newf		507498	0					
ANR	507744	Identifier	r_list_newf		507498	0					
ANR	507745	ArgumentList	( RListFree ) free		507498	1					
ANR	507746	Argument	( RListFree ) free		507498	0					
ANR	507747	CastExpression	( RListFree ) free		507498	0					
ANR	507748	CastTarget	RListFree		507498	0					
ANR	507749	Identifier	free		507498	1					
ANR	507750	CompoundStatement		37:62:1158:1158	507498	1					
ANR	507751	ExpressionStatement	free ( debug_positions )	427:2:10942:10964	507498	0	True				
ANR	507752	CallExpression	free ( debug_positions )		507498	0					
ANR	507753	Callee	free		507498	0					
ANR	507754	Identifier	free		507498	0					
ANR	507755	ArgumentList	debug_positions		507498	1					
ANR	507756	Argument	debug_positions		507498	0					
ANR	507757	Identifier	debug_positions		507498	0					
ANR	507758	ExpressionStatement	free ( buf )	428:2:10968:10978	507498	1	True				
ANR	507759	CallExpression	free ( buf )		507498	0					
ANR	507760	Callee	free		507498	0					
ANR	507761	Identifier	free		507498	0					
ANR	507762	ArgumentList	buf		507498	1					
ANR	507763	Argument	buf		507498	0					
ANR	507764	Identifier	buf		507498	0					
ANR	507765	ReturnStatement	return ;	429:2:10982:10988	507498	2	True				
ANR	507766	IdentifierDeclStatement	"struct dex_debug_local_t * debug_locals = calloc ( sizeof ( struct dex_debug_local_t ) , regsz + 1 ) ;"	432:1:10995:11089	507498	23	True				
ANR	507767	IdentifierDecl	"* debug_locals = calloc ( sizeof ( struct dex_debug_local_t ) , regsz + 1 )"		507498	0					
ANR	507768	IdentifierDeclType	struct dex_debug_local_t *		507498	0					
ANR	507769	Identifier	debug_locals		507498	1					
ANR	507770	AssignmentExpression	"* debug_locals = calloc ( sizeof ( struct dex_debug_local_t ) , regsz + 1 )"		507498	2		=			
ANR	507771	Identifier	debug_locals		507498	0					
ANR	507772	CallExpression	"calloc ( sizeof ( struct dex_debug_local_t ) , regsz + 1 )"		507498	1					
ANR	507773	Callee	calloc		507498	0					
ANR	507774	Identifier	calloc		507498	0					
ANR	507775	ArgumentList	sizeof ( struct dex_debug_local_t )		507498	1					
ANR	507776	Argument	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	507777	SizeofExpression	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	507778	Sizeof	sizeof		507498	0					
ANR	507779	SizeofOperand	struct dex_debug_local_t		507498	1					
ANR	507780	Argument	regsz + 1		507498	1					
ANR	507781	AdditiveExpression	regsz + 1		507498	0		+			
ANR	507782	Identifier	regsz		507498	0					
ANR	507783	PrimaryExpression	1		507498	1					
ANR	507784	IfStatement	if ( ! ( MA & 0x0008 ) )		507498	24					
ANR	507785	Condition	! ( MA & 0x0008 )	433:5:11096:11109	507498	0	True				
ANR	507786	UnaryOperationExpression	! ( MA & 0x0008 )		507498	0					
ANR	507787	UnaryOperator	!		507498	0					
ANR	507788	BitAndExpression	MA & 0x0008		507498	1		&			
ANR	507789	Identifier	MA		507498	0					
ANR	507790	PrimaryExpression	0x0008		507498	1					
ANR	507791	CompoundStatement		44:21:1332:1332	507498	1					
ANR	507792	ExpressionStatement	"debug_locals [ argReg ] . name = ""this"""	434:2:11116:11150	507498	0	True				
ANR	507793	AssignmentExpression	"debug_locals [ argReg ] . name = ""this"""		507498	0		=			
ANR	507794	MemberAccess	debug_locals [ argReg ] . name		507498	0					
ANR	507795	ArrayIndexing	debug_locals [ argReg ]		507498	0					
ANR	507796	Identifier	debug_locals		507498	0					
ANR	507797	Identifier	argReg		507498	1					
ANR	507798	Identifier	name		507498	1					
ANR	507799	PrimaryExpression	"""this"""		507498	1					
ANR	507800	ExpressionStatement	"debug_locals [ argReg ] . descriptor = r_str_newf ( ""%s;"" , class_name )"	435:2:11154:11218	507498	1	True				
ANR	507801	AssignmentExpression	"debug_locals [ argReg ] . descriptor = r_str_newf ( ""%s;"" , class_name )"		507498	0		=			
ANR	507802	MemberAccess	debug_locals [ argReg ] . descriptor		507498	0					
ANR	507803	ArrayIndexing	debug_locals [ argReg ]		507498	0					
ANR	507804	Identifier	debug_locals		507498	0					
ANR	507805	Identifier	argReg		507498	1					
ANR	507806	Identifier	descriptor		507498	1					
ANR	507807	CallExpression	"r_str_newf ( ""%s;"" , class_name )"		507498	1					
ANR	507808	Callee	r_str_newf		507498	0					
ANR	507809	Identifier	r_str_newf		507498	0					
ANR	507810	ArgumentList	"""%s;"""		507498	1					
ANR	507811	Argument	"""%s;"""		507498	0					
ANR	507812	PrimaryExpression	"""%s;"""		507498	0					
ANR	507813	Argument	class_name		507498	1					
ANR	507814	Identifier	class_name		507498	0					
ANR	507815	ExpressionStatement	debug_locals [ argReg ] . startAddress = 0	436:2:11222:11259	507498	2	True				
ANR	507816	AssignmentExpression	debug_locals [ argReg ] . startAddress = 0		507498	0		=			
ANR	507817	MemberAccess	debug_locals [ argReg ] . startAddress		507498	0					
ANR	507818	ArrayIndexing	debug_locals [ argReg ]		507498	0					
ANR	507819	Identifier	debug_locals		507498	0					
ANR	507820	Identifier	argReg		507498	1					
ANR	507821	Identifier	startAddress		507498	1					
ANR	507822	PrimaryExpression	0		507498	1					
ANR	507823	ExpressionStatement	debug_locals [ argReg ] . signature = NULL	437:2:11263:11300	507498	3	True				
ANR	507824	AssignmentExpression	debug_locals [ argReg ] . signature = NULL		507498	0		=			
ANR	507825	MemberAccess	debug_locals [ argReg ] . signature		507498	0					
ANR	507826	ArrayIndexing	debug_locals [ argReg ]		507498	0					
ANR	507827	Identifier	debug_locals		507498	0					
ANR	507828	Identifier	argReg		507498	1					
ANR	507829	Identifier	signature		507498	1					
ANR	507830	Identifier	NULL		507498	1					
ANR	507831	ExpressionStatement	debug_locals [ argReg ] . live = true	438:2:11304:11336	507498	4	True				
ANR	507832	AssignmentExpression	debug_locals [ argReg ] . live = true		507498	0		=			
ANR	507833	MemberAccess	debug_locals [ argReg ] . live		507498	0					
ANR	507834	ArrayIndexing	debug_locals [ argReg ]		507498	0					
ANR	507835	Identifier	debug_locals		507498	0					
ANR	507836	Identifier	argReg		507498	1					
ANR	507837	Identifier	live		507498	1					
ANR	507838	Identifier	true		507498	1					
ANR	507839	ExpressionStatement	argReg ++	439:2:11340:11348	507498	5	True				
ANR	507840	PostIncDecOperationExpression	argReg ++		507498	0					
ANR	507841	Identifier	argReg		507498	0					
ANR	507842	IncDec	++		507498	1					
ANR	507843	IfStatement	"if ( ! ( params = dex_method_signature2 ( bin , MI ) ) )"		507498	25					
ANR	507844	Condition	"! ( params = dex_method_signature2 ( bin , MI ) )"	441:5:11358:11400	507498	0	True				
ANR	507845	UnaryOperationExpression	"! ( params = dex_method_signature2 ( bin , MI ) )"		507498	0					
ANR	507846	UnaryOperator	!		507498	0					
ANR	507847	AssignmentExpression	"params = dex_method_signature2 ( bin , MI )"		507498	1		=			
ANR	507848	Identifier	params		507498	0					
ANR	507849	CallExpression	"dex_method_signature2 ( bin , MI )"		507498	1					
ANR	507850	Callee	dex_method_signature2		507498	0					
ANR	507851	Identifier	dex_method_signature2		507498	0					
ANR	507852	ArgumentList	bin		507498	1					
ANR	507853	Argument	bin		507498	0					
ANR	507854	Identifier	bin		507498	0					
ANR	507855	Argument	MI		507498	1					
ANR	507856	Identifier	MI		507498	0					
ANR	507857	CompoundStatement		52:50:1623:1623	507498	1					
ANR	507858	ExpressionStatement	free ( debug_positions )	442:2:11407:11429	507498	0	True				
ANR	507859	CallExpression	free ( debug_positions )		507498	0					
ANR	507860	Callee	free		507498	0					
ANR	507861	Identifier	free		507498	0					
ANR	507862	ArgumentList	debug_positions		507498	1					
ANR	507863	Argument	debug_positions		507498	0					
ANR	507864	Identifier	debug_positions		507498	0					
ANR	507865	ExpressionStatement	free ( emitted_debug_locals )	443:2:11433:11460	507498	1	True				
ANR	507866	CallExpression	free ( emitted_debug_locals )		507498	0					
ANR	507867	Callee	free		507498	0					
ANR	507868	Identifier	free		507498	0					
ANR	507869	ArgumentList	emitted_debug_locals		507498	1					
ANR	507870	Argument	emitted_debug_locals		507498	0					
ANR	507871	Identifier	emitted_debug_locals		507498	0					
ANR	507872	ExpressionStatement	free ( debug_locals )	444:2:11464:11483	507498	2	True				
ANR	507873	CallExpression	free ( debug_locals )		507498	0					
ANR	507874	Callee	free		507498	0					
ANR	507875	Identifier	free		507498	0					
ANR	507876	ArgumentList	debug_locals		507498	1					
ANR	507877	Argument	debug_locals		507498	0					
ANR	507878	Identifier	debug_locals		507498	0					
ANR	507879	ExpressionStatement	free ( buf )	445:2:11487:11497	507498	3	True				
ANR	507880	CallExpression	free ( buf )		507498	0					
ANR	507881	Callee	free		507498	0					
ANR	507882	Identifier	free		507498	0					
ANR	507883	ArgumentList	buf		507498	1					
ANR	507884	Argument	buf		507498	0					
ANR	507885	Identifier	buf		507498	0					
ANR	507886	ReturnStatement	return ;	446:2:11501:11507	507498	4	True				
ANR	507887	IdentifierDeclStatement	RListIter * iter ;	449:1:11514:11529	507498	26	True				
ANR	507888	IdentifierDecl	* iter		507498	0					
ANR	507889	IdentifierDeclType	RListIter *		507498	0					
ANR	507890	Identifier	iter		507498	1					
ANR	507891	IdentifierDeclStatement	char * name ;	450:1:11532:11542	507498	27	True				
ANR	507892	IdentifierDecl	* name		507498	0					
ANR	507893	IdentifierDeclType	char *		507498	0					
ANR	507894	Identifier	name		507498	1					
ANR	507895	IdentifierDeclStatement	char * type ;	451:1:11545:11555	507498	28	True				
ANR	507896	IdentifierDecl	* type		507498	0					
ANR	507897	IdentifierDeclType	char *		507498	0					
ANR	507898	Identifier	type		507498	1					
ANR	507899	IdentifierDeclStatement	int reg ;	452:1:11558:11565	507498	29	True				
ANR	507900	IdentifierDecl	reg		507498	0					
ANR	507901	IdentifierDeclType	int		507498	0					
ANR	507902	Identifier	reg		507498	1					
ANR	507903	Statement	r_list_foreach	454:1:11569:11582	507498	30	True				
ANR	507904	Statement	(	454:16:11584:11584	507498	31	True				
ANR	507905	Statement	params	454:17:11585:11590	507498	32	True				
ANR	507906	Statement	","	454:23:11591:11591	507498	33	True				
ANR	507907	Statement	iter	454:25:11593:11596	507498	34	True				
ANR	507908	Statement	","	454:29:11597:11597	507498	35	True				
ANR	507909	Statement	type	454:31:11599:11602	507498	36	True				
ANR	507910	Statement	)	454:35:11603:11603	507498	37	True				
ANR	507911	CompoundStatement		65:37:1825:1825	507498	38					
ANR	507912	IfStatement	if ( ( argReg >= regsz ) || ! type || parameters_size <= 0 )		507498	0					
ANR	507913	Condition	( argReg >= regsz ) || ! type || parameters_size <= 0	455:6:11613:11662	507498	0	True				
ANR	507914	OrExpression	( argReg >= regsz ) || ! type || parameters_size <= 0		507498	0		||			
ANR	507915	RelationalExpression	argReg >= regsz		507498	0		>=			
ANR	507916	Identifier	argReg		507498	0					
ANR	507917	Identifier	regsz		507498	1					
ANR	507918	OrExpression	! type || parameters_size <= 0		507498	1		||			
ANR	507919	UnaryOperationExpression	! type		507498	0					
ANR	507920	UnaryOperator	!		507498	0					
ANR	507921	Identifier	type		507498	1					
ANR	507922	RelationalExpression	parameters_size <= 0		507498	1		<=			
ANR	507923	Identifier	parameters_size		507498	0					
ANR	507924	PrimaryExpression	0		507498	1					
ANR	507925	CompoundStatement		66:58:1885:1885	507498	1					
ANR	507926	ExpressionStatement	free ( debug_positions )	456:3:11670:11692	507498	0	True				
ANR	507927	CallExpression	free ( debug_positions )		507498	0					
ANR	507928	Callee	free		507498	0					
ANR	507929	Identifier	free		507498	0					
ANR	507930	ArgumentList	debug_positions		507498	1					
ANR	507931	Argument	debug_positions		507498	0					
ANR	507932	Identifier	debug_positions		507498	0					
ANR	507933	ExpressionStatement	free ( params )	457:3:11697:11710	507498	1	True				
ANR	507934	CallExpression	free ( params )		507498	0					
ANR	507935	Callee	free		507498	0					
ANR	507936	Identifier	free		507498	0					
ANR	507937	ArgumentList	params		507498	1					
ANR	507938	Argument	params		507498	0					
ANR	507939	Identifier	params		507498	0					
ANR	507940	ExpressionStatement	free ( debug_locals )	458:3:11715:11734	507498	2	True				
ANR	507941	CallExpression	free ( debug_locals )		507498	0					
ANR	507942	Callee	free		507498	0					
ANR	507943	Identifier	free		507498	0					
ANR	507944	ArgumentList	debug_locals		507498	1					
ANR	507945	Argument	debug_locals		507498	0					
ANR	507946	Identifier	debug_locals		507498	0					
ANR	507947	ExpressionStatement	free ( emitted_debug_locals )	459:3:11739:11766	507498	3	True				
ANR	507948	CallExpression	free ( emitted_debug_locals )		507498	0					
ANR	507949	Callee	free		507498	0					
ANR	507950	Identifier	free		507498	0					
ANR	507951	ArgumentList	emitted_debug_locals		507498	1					
ANR	507952	Argument	emitted_debug_locals		507498	0					
ANR	507953	Identifier	emitted_debug_locals		507498	0					
ANR	507954	ExpressionStatement	free ( buf )	460:3:11771:11781	507498	4	True				
ANR	507955	CallExpression	free ( buf )		507498	0					
ANR	507956	Callee	free		507498	0					
ANR	507957	Identifier	free		507498	0					
ANR	507958	ArgumentList	buf		507498	1					
ANR	507959	Argument	buf		507498	0					
ANR	507960	Identifier	buf		507498	0					
ANR	507961	ReturnStatement	return ;	461:3:11786:11792	507498	5	True				
ANR	507962	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & param_type_idx )"	463:2:11800:11849	507498	1	True				
ANR	507963	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & param_type_idx )"		507498	0		=			
ANR	507964	Identifier	p4		507498	0					
ANR	507965	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & param_type_idx )"		507498	1					
ANR	507966	Callee	r_uleb128		507498	0					
ANR	507967	Identifier	r_uleb128		507498	0					
ANR	507968	ArgumentList	p4		507498	1					
ANR	507969	Argument	p4		507498	0					
ANR	507970	Identifier	p4		507498	0					
ANR	507971	Argument	p4_end - p4		507498	1					
ANR	507972	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	507973	Identifier	p4_end		507498	0					
ANR	507974	Identifier	p4		507498	1					
ANR	507975	Argument	& param_type_idx		507498	2					
ANR	507976	UnaryOperationExpression	& param_type_idx		507498	0					
ANR	507977	UnaryOperator	&		507498	0					
ANR	507978	Identifier	param_type_idx		507498	1					
ANR	507979	ExpressionStatement	param_type_idx -= 1	464:2:11871:11890	507498	2	True				
ANR	507980	AssignmentExpression	param_type_idx -= 1		507498	0		-=			
ANR	507981	Identifier	param_type_idx		507498	0					
ANR	507982	PrimaryExpression	1		507498	1					
ANR	507983	ExpressionStatement	"name = getstr ( bin , param_type_idx )"	465:2:11894:11929	507498	3	True				
ANR	507984	AssignmentExpression	"name = getstr ( bin , param_type_idx )"		507498	0		=			
ANR	507985	Identifier	name		507498	0					
ANR	507986	CallExpression	"getstr ( bin , param_type_idx )"		507498	1					
ANR	507987	Callee	getstr		507498	0					
ANR	507988	Identifier	getstr		507498	0					
ANR	507989	ArgumentList	bin		507498	1					
ANR	507990	Argument	bin		507498	0					
ANR	507991	Identifier	bin		507498	0					
ANR	507992	Argument	param_type_idx		507498	1					
ANR	507993	Identifier	param_type_idx		507498	0					
ANR	507994	ExpressionStatement	reg = argReg	466:2:11933:11945	507498	4	True				
ANR	507995	AssignmentExpression	reg = argReg		507498	0		=			
ANR	507996	Identifier	reg		507498	0					
ANR	507997	Identifier	argReg		507498	1					
ANR	507998	SwitchStatement	switch ( type [ 0 ] )		507498	5					
ANR	507999	Condition	type [ 0 ]	467:10:11957:11963	507498	0	True				
ANR	508000	ArrayIndexing	type [ 0 ]		507498	0					
ANR	508001	Identifier	type		507498	0					
ANR	508002	PrimaryExpression	0		507498	1					
ANR	508003	CompoundStatement		78:19:2186:2186	507498	1					
ANR	508004	Label	case 'D' :	468:2:11970:11978	507498	0	True				
ANR	508005	Label	case 'J' :	469:2:11982:11990	507498	1	True				
ANR	508006	ExpressionStatement	argReg += 2	470:3:11995:12006	507498	2	True				
ANR	508007	AssignmentExpression	argReg += 2		507498	0		+=			
ANR	508008	Identifier	argReg		507498	0					
ANR	508009	PrimaryExpression	2		507498	1					
ANR	508010	BreakStatement	break ;	471:3:12011:12016	507498	3	True				
ANR	508011	Label	default :	472:2:12020:12027	507498	4	True				
ANR	508012	Identifier	default		507498	0					
ANR	508013	ExpressionStatement	argReg += 1	473:3:12032:12043	507498	5	True				
ANR	508014	AssignmentExpression	argReg += 1		507498	0		+=			
ANR	508015	Identifier	argReg		507498	0					
ANR	508016	PrimaryExpression	1		507498	1					
ANR	508017	BreakStatement	break ;	474:3:12048:12053	507498	6	True				
ANR	508018	IfStatement	if ( ! name || ! * name )		507498	6					
ANR	508019	Condition	! name || ! * name	476:6:12065:12079	507498	0	True				
ANR	508020	OrExpression	! name || ! * name		507498	0		||			
ANR	508021	UnaryOperationExpression	! name		507498	0					
ANR	508022	UnaryOperator	!		507498	0					
ANR	508023	Identifier	name		507498	1					
ANR	508024	UnaryOperationExpression	! * name		507498	1					
ANR	508025	UnaryOperator	!		507498	0					
ANR	508026	UnaryOperationExpression	* name		507498	1					
ANR	508027	UnaryOperator	*		507498	0					
ANR	508028	Identifier	name		507498	1					
ANR	508029	CompoundStatement		87:23:2302:2302	507498	1					
ANR	508030	ExpressionStatement	debug_locals [ reg ] . name = name	477:3:12087:12116	507498	0	True				
ANR	508031	AssignmentExpression	debug_locals [ reg ] . name = name		507498	0		=			
ANR	508032	MemberAccess	debug_locals [ reg ] . name		507498	0					
ANR	508033	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	508034	Identifier	debug_locals		507498	0					
ANR	508035	Identifier	reg		507498	1					
ANR	508036	Identifier	name		507498	1					
ANR	508037	Identifier	name		507498	1					
ANR	508038	ExpressionStatement	debug_locals [ reg ] . descriptor = type	478:3:12121:12156	507498	1	True				
ANR	508039	AssignmentExpression	debug_locals [ reg ] . descriptor = type		507498	0		=			
ANR	508040	MemberAccess	debug_locals [ reg ] . descriptor		507498	0					
ANR	508041	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	508042	Identifier	debug_locals		507498	0					
ANR	508043	Identifier	reg		507498	1					
ANR	508044	Identifier	descriptor		507498	1					
ANR	508045	Identifier	type		507498	1					
ANR	508046	ExpressionStatement	debug_locals [ reg ] . signature = NULL	479:3:12161:12195	507498	2	True				
ANR	508047	AssignmentExpression	debug_locals [ reg ] . signature = NULL		507498	0		=			
ANR	508048	MemberAccess	debug_locals [ reg ] . signature		507498	0					
ANR	508049	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	508050	Identifier	debug_locals		507498	0					
ANR	508051	Identifier	reg		507498	1					
ANR	508052	Identifier	signature		507498	1					
ANR	508053	Identifier	NULL		507498	1					
ANR	508054	ExpressionStatement	debug_locals [ reg ] . startAddress = address	480:3:12200:12240	507498	3	True				
ANR	508055	AssignmentExpression	debug_locals [ reg ] . startAddress = address		507498	0		=			
ANR	508056	MemberAccess	debug_locals [ reg ] . startAddress		507498	0					
ANR	508057	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	508058	Identifier	debug_locals		507498	0					
ANR	508059	Identifier	reg		507498	1					
ANR	508060	Identifier	startAddress		507498	1					
ANR	508061	Identifier	address		507498	1					
ANR	508062	ExpressionStatement	debug_locals [ reg ] . live = true	481:3:12245:12274	507498	4	True				
ANR	508063	AssignmentExpression	debug_locals [ reg ] . live = true		507498	0		=			
ANR	508064	MemberAccess	debug_locals [ reg ] . live		507498	0					
ANR	508065	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	508066	Identifier	debug_locals		507498	0					
ANR	508067	Identifier	reg		507498	1					
ANR	508068	Identifier	live		507498	1					
ANR	508069	Identifier	true		507498	1					
ANR	508070	ExpressionStatement	parameters_size --	483:2:12282:12299	507498	7	True				
ANR	508071	PostIncDecOperationExpression	parameters_size --		507498	0					
ANR	508072	Identifier	parameters_size		507498	0					
ANR	508073	IncDec	--		507498	1					
ANR	508074	IfStatement	if ( ! p4 || p4 >= p4_end )		507498	39					
ANR	508075	Condition	! p4 || p4 >= p4_end	486:5:12310:12328	507498	0	True				
ANR	508076	OrExpression	! p4 || p4 >= p4_end		507498	0		||			
ANR	508077	UnaryOperationExpression	! p4		507498	0					
ANR	508078	UnaryOperator	!		507498	0					
ANR	508079	Identifier	p4		507498	1					
ANR	508080	RelationalExpression	p4 >= p4_end		507498	1		>=			
ANR	508081	Identifier	p4		507498	0					
ANR	508082	Identifier	p4_end		507498	1					
ANR	508083	CompoundStatement		97:26:2551:2551	507498	1					
ANR	508084	ExpressionStatement	free ( debug_positions )	487:2:12335:12357	507498	0	True				
ANR	508085	CallExpression	free ( debug_positions )		507498	0					
ANR	508086	Callee	free		507498	0					
ANR	508087	Identifier	free		507498	0					
ANR	508088	ArgumentList	debug_positions		507498	1					
ANR	508089	Argument	debug_positions		507498	0					
ANR	508090	Identifier	debug_positions		507498	0					
ANR	508091	ExpressionStatement	free ( params )	488:2:12361:12374	507498	1	True				
ANR	508092	CallExpression	free ( params )		507498	0					
ANR	508093	Callee	free		507498	0					
ANR	508094	Identifier	free		507498	0					
ANR	508095	ArgumentList	params		507498	1					
ANR	508096	Argument	params		507498	0					
ANR	508097	Identifier	params		507498	0					
ANR	508098	ExpressionStatement	free ( debug_locals )	489:2:12378:12397	507498	2	True				
ANR	508099	CallExpression	free ( debug_locals )		507498	0					
ANR	508100	Callee	free		507498	0					
ANR	508101	Identifier	free		507498	0					
ANR	508102	ArgumentList	debug_locals		507498	1					
ANR	508103	Argument	debug_locals		507498	0					
ANR	508104	Identifier	debug_locals		507498	0					
ANR	508105	ExpressionStatement	free ( emitted_debug_locals )	490:2:12401:12428	507498	3	True				
ANR	508106	CallExpression	free ( emitted_debug_locals )		507498	0					
ANR	508107	Callee	free		507498	0					
ANR	508108	Identifier	free		507498	0					
ANR	508109	ArgumentList	emitted_debug_locals		507498	1					
ANR	508110	Argument	emitted_debug_locals		507498	0					
ANR	508111	Identifier	emitted_debug_locals		507498	0					
ANR	508112	ExpressionStatement	free ( buf )	491:2:12432:12442	507498	4	True				
ANR	508113	CallExpression	free ( buf )		507498	0					
ANR	508114	Callee	free		507498	0					
ANR	508115	Identifier	free		507498	0					
ANR	508116	ArgumentList	buf		507498	1					
ANR	508117	Argument	buf		507498	0					
ANR	508118	Identifier	buf		507498	0					
ANR	508119	ReturnStatement	return ;	492:2:12446:12452	507498	5	True				
ANR	508120	IdentifierDeclStatement	ut8 opcode = * ( p4 ++ ) & 0xff ;	494:1:12458:12485	507498	40	True				
ANR	508121	IdentifierDecl	opcode = * ( p4 ++ ) & 0xff		507498	0					
ANR	508122	IdentifierDeclType	ut8		507498	0					
ANR	508123	Identifier	opcode		507498	1					
ANR	508124	AssignmentExpression	opcode = * ( p4 ++ ) & 0xff		507498	2		=			
ANR	508125	Identifier	opcode		507498	0					
ANR	508126	BitAndExpression	* ( p4 ++ ) & 0xff		507498	1		&			
ANR	508127	UnaryOperationExpression	* ( p4 ++ )		507498	0					
ANR	508128	UnaryOperator	*		507498	0					
ANR	508129	PostIncDecOperationExpression	p4 ++		507498	1					
ANR	508130	Identifier	p4		507498	0					
ANR	508131	IncDec	++		507498	1					
ANR	508132	PrimaryExpression	0xff		507498	1					
ANR	508133	WhileStatement	while ( keep && p4 + 1 < p4_end )		507498	41					
ANR	508134	Condition	keep && p4 + 1 < p4_end	495:8:12495:12517	507498	0	True				
ANR	508135	AndExpression	keep && p4 + 1 < p4_end		507498	0		&&			
ANR	508136	Identifier	keep		507498	0					
ANR	508137	RelationalExpression	p4 + 1 < p4_end		507498	1		<			
ANR	508138	AdditiveExpression	p4 + 1		507498	0		+			
ANR	508139	Identifier	p4		507498	0					
ANR	508140	PrimaryExpression	1		507498	1					
ANR	508141	Identifier	p4_end		507498	1					
ANR	508142	CompoundStatement		106:33:2740:2740	507498	1					
ANR	508143	SwitchStatement	switch ( opcode )		507498	0					
ANR	508144	Condition	opcode	496:10:12532:12537	507498	0	True				
ANR	508145	Identifier	opcode		507498	0					
ANR	508146	CompoundStatement		107:18:2760:2760	507498	1					
ANR	508147	Label	case 0x0 :	497:2:12544:12552	507498	0	True				
ANR	508148	ExpressionStatement	keep = false	498:3:12577:12589	507498	1	True				
ANR	508149	AssignmentExpression	keep = false		507498	0		=			
ANR	508150	Identifier	keep		507498	0					
ANR	508151	Identifier	false		507498	1					
ANR	508152	BreakStatement	break ;	499:3:12594:12599	507498	2	True				
ANR	508153	Label	case 0x1 :	500:2:12603:12611	507498	3	True				
ANR	508154	CompoundStatement		113:3:2859:2873	507498	4					
ANR	508155	IdentifierDeclStatement	ut64 addr_diff ;	502:3:12639:12653	507498	0	True				
ANR	508156	IdentifierDecl	addr_diff		507498	0					
ANR	508157	IdentifierDeclType	ut64		507498	0					
ANR	508158	Identifier	addr_diff		507498	1					
ANR	508159	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & addr_diff )"	503:3:12658:12702	507498	1	True				
ANR	508160	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & addr_diff )"		507498	0		=			
ANR	508161	Identifier	p4		507498	0					
ANR	508162	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & addr_diff )"		507498	1					
ANR	508163	Callee	r_uleb128		507498	0					
ANR	508164	Identifier	r_uleb128		507498	0					
ANR	508165	ArgumentList	p4		507498	1					
ANR	508166	Argument	p4		507498	0					
ANR	508167	Identifier	p4		507498	0					
ANR	508168	Argument	p4_end - p4		507498	1					
ANR	508169	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508170	Identifier	p4_end		507498	0					
ANR	508171	Identifier	p4		507498	1					
ANR	508172	Argument	& addr_diff		507498	2					
ANR	508173	UnaryOperationExpression	& addr_diff		507498	0					
ANR	508174	UnaryOperator	&		507498	0					
ANR	508175	Identifier	addr_diff		507498	1					
ANR	508176	ExpressionStatement	address += addr_diff	504:3:12707:12727	507498	2	True				
ANR	508177	AssignmentExpression	address += addr_diff		507498	0		+=			
ANR	508178	Identifier	address		507498	0					
ANR	508179	Identifier	addr_diff		507498	1					
ANR	508180	BreakStatement	break ;	506:3:12737:12742	507498	5	True				
ANR	508181	Label	case 0x2 :	507:2:12746:12754	507498	6	True				
ANR	508182	CompoundStatement		120:3:3004:3044	507498	7					
ANR	508183	IdentifierDeclStatement	"st64 line_diff = r_sleb128 ( & p4 , p4_end ) ;"	509:3:12784:12824	507498	0	True				
ANR	508184	IdentifierDecl	"line_diff = r_sleb128 ( & p4 , p4_end )"		507498	0					
ANR	508185	IdentifierDeclType	st64		507498	0					
ANR	508186	Identifier	line_diff		507498	1					
ANR	508187	AssignmentExpression	"line_diff = r_sleb128 ( & p4 , p4_end )"		507498	2		=			
ANR	508188	Identifier	line_diff		507498	0					
ANR	508189	CallExpression	"r_sleb128 ( & p4 , p4_end )"		507498	1					
ANR	508190	Callee	r_sleb128		507498	0					
ANR	508191	Identifier	r_sleb128		507498	0					
ANR	508192	ArgumentList	& p4		507498	1					
ANR	508193	Argument	& p4		507498	0					
ANR	508194	UnaryOperationExpression	& p4		507498	0					
ANR	508195	UnaryOperator	&		507498	0					
ANR	508196	Identifier	p4		507498	1					
ANR	508197	Argument	p4_end		507498	1					
ANR	508198	Identifier	p4_end		507498	0					
ANR	508199	ExpressionStatement	line += line_diff	510:3:12829:12846	507498	1	True				
ANR	508200	AssignmentExpression	line += line_diff		507498	0		+=			
ANR	508201	Identifier	line		507498	0					
ANR	508202	Identifier	line_diff		507498	1					
ANR	508203	BreakStatement	break ;	512:3:12856:12861	507498	8	True				
ANR	508204	Label	case 0x3 :	513:2:12865:12873	507498	9	True				
ANR	508205	CompoundStatement		128:3:3162:3175	507498	10					
ANR	508206	IdentifierDeclStatement	ut64 register_num ;	515:3:12902:12919	507498	0	True				
ANR	508207	IdentifierDecl	register_num		507498	0					
ANR	508208	IdentifierDeclType	ut64		507498	0					
ANR	508209	Identifier	register_num		507498	1					
ANR	508210	IdentifierDeclStatement	ut64 name_idx ;	516:3:12924:12937	507498	1	True				
ANR	508211	IdentifierDecl	name_idx		507498	0					
ANR	508212	IdentifierDeclType	ut64		507498	0					
ANR	508213	Identifier	name_idx		507498	1					
ANR	508214	IdentifierDeclStatement	ut64 type_idx ;	517:3:12942:12955	507498	2	True				
ANR	508215	IdentifierDecl	type_idx		507498	0					
ANR	508216	IdentifierDeclType	ut64		507498	0					
ANR	508217	Identifier	type_idx		507498	1					
ANR	508218	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"	518:3:12960:13007	507498	3	True				
ANR	508219	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	0		=			
ANR	508220	Identifier	p4		507498	0					
ANR	508221	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	1					
ANR	508222	Callee	r_uleb128		507498	0					
ANR	508223	Identifier	r_uleb128		507498	0					
ANR	508224	ArgumentList	p4		507498	1					
ANR	508225	Argument	p4		507498	0					
ANR	508226	Identifier	p4		507498	0					
ANR	508227	Argument	p4_end - p4		507498	1					
ANR	508228	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508229	Identifier	p4_end		507498	0					
ANR	508230	Identifier	p4		507498	1					
ANR	508231	Argument	& register_num		507498	2					
ANR	508232	UnaryOperationExpression	& register_num		507498	0					
ANR	508233	UnaryOperator	&		507498	0					
ANR	508234	Identifier	register_num		507498	1					
ANR	508235	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & name_idx )"	519:3:13012:13055	507498	4	True				
ANR	508236	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & name_idx )"		507498	0		=			
ANR	508237	Identifier	p4		507498	0					
ANR	508238	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & name_idx )"		507498	1					
ANR	508239	Callee	r_uleb128		507498	0					
ANR	508240	Identifier	r_uleb128		507498	0					
ANR	508241	ArgumentList	p4		507498	1					
ANR	508242	Argument	p4		507498	0					
ANR	508243	Identifier	p4		507498	0					
ANR	508244	Argument	p4_end - p4		507498	1					
ANR	508245	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508246	Identifier	p4_end		507498	0					
ANR	508247	Identifier	p4		507498	1					
ANR	508248	Argument	& name_idx		507498	2					
ANR	508249	UnaryOperationExpression	& name_idx		507498	0					
ANR	508250	UnaryOperator	&		507498	0					
ANR	508251	Identifier	name_idx		507498	1					
ANR	508252	ExpressionStatement	name_idx -= 1	520:3:13060:13073	507498	5	True				
ANR	508253	AssignmentExpression	name_idx -= 1		507498	0		-=			
ANR	508254	Identifier	name_idx		507498	0					
ANR	508255	PrimaryExpression	1		507498	1					
ANR	508256	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & type_idx )"	521:3:13078:13121	507498	6	True				
ANR	508257	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & type_idx )"		507498	0		=			
ANR	508258	Identifier	p4		507498	0					
ANR	508259	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & type_idx )"		507498	1					
ANR	508260	Callee	r_uleb128		507498	0					
ANR	508261	Identifier	r_uleb128		507498	0					
ANR	508262	ArgumentList	p4		507498	1					
ANR	508263	Argument	p4		507498	0					
ANR	508264	Identifier	p4		507498	0					
ANR	508265	Argument	p4_end - p4		507498	1					
ANR	508266	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508267	Identifier	p4_end		507498	0					
ANR	508268	Identifier	p4		507498	1					
ANR	508269	Argument	& type_idx		507498	2					
ANR	508270	UnaryOperationExpression	& type_idx		507498	0					
ANR	508271	UnaryOperator	&		507498	0					
ANR	508272	Identifier	type_idx		507498	1					
ANR	508273	ExpressionStatement	type_idx -= 1	522:3:13126:13139	507498	7	True				
ANR	508274	AssignmentExpression	type_idx -= 1		507498	0		-=			
ANR	508275	Identifier	type_idx		507498	0					
ANR	508276	PrimaryExpression	1		507498	1					
ANR	508277	IfStatement	if ( register_num >= regsz )		507498	8					
ANR	508278	Condition	register_num >= regsz	523:7:13148:13168	507498	0	True				
ANR	508279	RelationalExpression	register_num >= regsz		507498	0		>=			
ANR	508280	Identifier	register_num		507498	0					
ANR	508281	Identifier	regsz		507498	1					
ANR	508282	CompoundStatement		134:30:3391:3391	507498	1					
ANR	508283	ExpressionStatement	r_list_free ( debug_positions )	524:4:13177:13206	507498	0	True				
ANR	508284	CallExpression	r_list_free ( debug_positions )		507498	0					
ANR	508285	Callee	r_list_free		507498	0					
ANR	508286	Identifier	r_list_free		507498	0					
ANR	508287	ArgumentList	debug_positions		507498	1					
ANR	508288	Argument	debug_positions		507498	0					
ANR	508289	Identifier	debug_positions		507498	0					
ANR	508290	ExpressionStatement	free ( params )	525:4:13212:13225	507498	1	True				
ANR	508291	CallExpression	free ( params )		507498	0					
ANR	508292	Callee	free		507498	0					
ANR	508293	Identifier	free		507498	0					
ANR	508294	ArgumentList	params		507498	1					
ANR	508295	Argument	params		507498	0					
ANR	508296	Identifier	params		507498	0					
ANR	508297	ExpressionStatement	free ( debug_locals )	526:4:13231:13250	507498	2	True				
ANR	508298	CallExpression	free ( debug_locals )		507498	0					
ANR	508299	Callee	free		507498	0					
ANR	508300	Identifier	free		507498	0					
ANR	508301	ArgumentList	debug_locals		507498	1					
ANR	508302	Argument	debug_locals		507498	0					
ANR	508303	Identifier	debug_locals		507498	0					
ANR	508304	ExpressionStatement	free ( emitted_debug_locals )	527:4:13256:13283	507498	3	True				
ANR	508305	CallExpression	free ( emitted_debug_locals )		507498	0					
ANR	508306	Callee	free		507498	0					
ANR	508307	Identifier	free		507498	0					
ANR	508308	ArgumentList	emitted_debug_locals		507498	1					
ANR	508309	Argument	emitted_debug_locals		507498	0					
ANR	508310	Identifier	emitted_debug_locals		507498	0					
ANR	508311	ReturnStatement	return ;	528:4:13289:13295	507498	4	True				
ANR	508312	IfStatement	if ( debug_locals [ register_num ] . live )		507498	9					
ANR	508313	Condition	debug_locals [ register_num ] . live	532:7:13383:13413	507498	0	True				
ANR	508314	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508315	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508316	Identifier	debug_locals		507498	0					
ANR	508317	Identifier	register_num		507498	1					
ANR	508318	Identifier	live		507498	1					
ANR	508319	CompoundStatement		144:4:3642:3724	507498	1					
ANR	508320	IdentifierDeclStatement	struct dex_debug_local_t * local = malloc ( sizeof ( struct dex_debug_local_t ) ) ;	533:4:13422:13504	507498	0	True				
ANR	508321	IdentifierDecl	* local = malloc ( sizeof ( struct dex_debug_local_t ) )		507498	0					
ANR	508322	IdentifierDeclType	struct dex_debug_local_t *		507498	0					
ANR	508323	Identifier	local		507498	1					
ANR	508324	AssignmentExpression	* local = malloc ( sizeof ( struct dex_debug_local_t ) )		507498	2		=			
ANR	508325	Identifier	local		507498	0					
ANR	508326	CallExpression	malloc ( sizeof ( struct dex_debug_local_t ) )		507498	1					
ANR	508327	Callee	malloc		507498	0					
ANR	508328	Identifier	malloc		507498	0					
ANR	508329	ArgumentList	sizeof ( struct dex_debug_local_t )		507498	1					
ANR	508330	Argument	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	508331	SizeofExpression	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	508332	Sizeof	sizeof		507498	0					
ANR	508333	SizeofOperand	struct dex_debug_local_t		507498	1					
ANR	508334	IfStatement	if ( ! local )		507498	1					
ANR	508335	Condition	! local	535:8:13514:13519	507498	0	True				
ANR	508336	UnaryOperationExpression	! local		507498	0					
ANR	508337	UnaryOperator	!		507498	0					
ANR	508338	Identifier	local		507498	1					
ANR	508339	CompoundStatement		146:16:3742:3742	507498	1					
ANR	508340	ExpressionStatement	keep = false	536:5:13529:13541	507498	0	True				
ANR	508341	AssignmentExpression	keep = false		507498	0		=			
ANR	508342	Identifier	keep		507498	0					
ANR	508343	Identifier	false		507498	1					
ANR	508344	BreakStatement	break ;	537:5:13548:13553	507498	1	True				
ANR	508345	ExpressionStatement	local -> name = debug_locals [ register_num ] . name	539:4:13565:13610	507498	2	True				
ANR	508346	AssignmentExpression	local -> name = debug_locals [ register_num ] . name		507498	0		=			
ANR	508347	PtrMemberAccess	local -> name		507498	0					
ANR	508348	Identifier	local		507498	0					
ANR	508349	Identifier	name		507498	1					
ANR	508350	MemberAccess	debug_locals [ register_num ] . name		507498	1					
ANR	508351	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508352	Identifier	debug_locals		507498	0					
ANR	508353	Identifier	register_num		507498	1					
ANR	508354	Identifier	name		507498	1					
ANR	508355	ExpressionStatement	local -> descriptor = debug_locals [ register_num ] . descriptor	540:4:13616:13673	507498	3	True				
ANR	508356	AssignmentExpression	local -> descriptor = debug_locals [ register_num ] . descriptor		507498	0		=			
ANR	508357	PtrMemberAccess	local -> descriptor		507498	0					
ANR	508358	Identifier	local		507498	0					
ANR	508359	Identifier	descriptor		507498	1					
ANR	508360	MemberAccess	debug_locals [ register_num ] . descriptor		507498	1					
ANR	508361	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508362	Identifier	debug_locals		507498	0					
ANR	508363	Identifier	register_num		507498	1					
ANR	508364	Identifier	descriptor		507498	1					
ANR	508365	ExpressionStatement	local -> startAddress = debug_locals [ register_num ] . startAddress	541:4:13679:13740	507498	4	True				
ANR	508366	AssignmentExpression	local -> startAddress = debug_locals [ register_num ] . startAddress		507498	0		=			
ANR	508367	PtrMemberAccess	local -> startAddress		507498	0					
ANR	508368	Identifier	local		507498	0					
ANR	508369	Identifier	startAddress		507498	1					
ANR	508370	MemberAccess	debug_locals [ register_num ] . startAddress		507498	1					
ANR	508371	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508372	Identifier	debug_locals		507498	0					
ANR	508373	Identifier	register_num		507498	1					
ANR	508374	Identifier	startAddress		507498	1					
ANR	508375	ExpressionStatement	local -> signature = debug_locals [ register_num ] . signature	542:4:13746:13801	507498	5	True				
ANR	508376	AssignmentExpression	local -> signature = debug_locals [ register_num ] . signature		507498	0		=			
ANR	508377	PtrMemberAccess	local -> signature		507498	0					
ANR	508378	Identifier	local		507498	0					
ANR	508379	Identifier	signature		507498	1					
ANR	508380	MemberAccess	debug_locals [ register_num ] . signature		507498	1					
ANR	508381	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508382	Identifier	debug_locals		507498	0					
ANR	508383	Identifier	register_num		507498	1					
ANR	508384	Identifier	signature		507498	1					
ANR	508385	ExpressionStatement	local -> live = true	543:4:13807:13825	507498	6	True				
ANR	508386	AssignmentExpression	local -> live = true		507498	0		=			
ANR	508387	PtrMemberAccess	local -> live		507498	0					
ANR	508388	Identifier	local		507498	0					
ANR	508389	Identifier	live		507498	1					
ANR	508390	Identifier	true		507498	1					
ANR	508391	ExpressionStatement	local -> reg = register_num	544:4:13831:13856	507498	7	True				
ANR	508392	AssignmentExpression	local -> reg = register_num		507498	0		=			
ANR	508393	PtrMemberAccess	local -> reg		507498	0					
ANR	508394	Identifier	local		507498	0					
ANR	508395	Identifier	reg		507498	1					
ANR	508396	Identifier	register_num		507498	1					
ANR	508397	ExpressionStatement	local -> endAddress = address	545:4:13862:13889	507498	8	True				
ANR	508398	AssignmentExpression	local -> endAddress = address		507498	0		=			
ANR	508399	PtrMemberAccess	local -> endAddress		507498	0					
ANR	508400	Identifier	local		507498	0					
ANR	508401	Identifier	endAddress		507498	1					
ANR	508402	Identifier	address		507498	1					
ANR	508403	ExpressionStatement	"r_list_append ( emitted_debug_locals , local )"	546:4:13895:13938	507498	9	True				
ANR	508404	CallExpression	"r_list_append ( emitted_debug_locals , local )"		507498	0					
ANR	508405	Callee	r_list_append		507498	0					
ANR	508406	Identifier	r_list_append		507498	0					
ANR	508407	ArgumentList	emitted_debug_locals		507498	1					
ANR	508408	Argument	emitted_debug_locals		507498	0					
ANR	508409	Identifier	emitted_debug_locals		507498	0					
ANR	508410	Argument	local		507498	1					
ANR	508411	Identifier	local		507498	0					
ANR	508412	ExpressionStatement	"debug_locals [ register_num ] . name = getstr ( bin , name_idx )"	548:3:13948:14004	507498	10	True				
ANR	508413	AssignmentExpression	"debug_locals [ register_num ] . name = getstr ( bin , name_idx )"		507498	0		=			
ANR	508414	MemberAccess	debug_locals [ register_num ] . name		507498	0					
ANR	508415	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508416	Identifier	debug_locals		507498	0					
ANR	508417	Identifier	register_num		507498	1					
ANR	508418	Identifier	name		507498	1					
ANR	508419	CallExpression	"getstr ( bin , name_idx )"		507498	1					
ANR	508420	Callee	getstr		507498	0					
ANR	508421	Identifier	getstr		507498	0					
ANR	508422	ArgumentList	bin		507498	1					
ANR	508423	Argument	bin		507498	0					
ANR	508424	Identifier	bin		507498	0					
ANR	508425	Argument	name_idx		507498	1					
ANR	508426	Identifier	name_idx		507498	0					
ANR	508427	ExpressionStatement	"debug_locals [ register_num ] . descriptor = dex_type_descriptor ( bin , type_idx )"	549:3:14009:14084	507498	11	True				
ANR	508428	AssignmentExpression	"debug_locals [ register_num ] . descriptor = dex_type_descriptor ( bin , type_idx )"		507498	0		=			
ANR	508429	MemberAccess	debug_locals [ register_num ] . descriptor		507498	0					
ANR	508430	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508431	Identifier	debug_locals		507498	0					
ANR	508432	Identifier	register_num		507498	1					
ANR	508433	Identifier	descriptor		507498	1					
ANR	508434	CallExpression	"dex_type_descriptor ( bin , type_idx )"		507498	1					
ANR	508435	Callee	dex_type_descriptor		507498	0					
ANR	508436	Identifier	dex_type_descriptor		507498	0					
ANR	508437	ArgumentList	bin		507498	1					
ANR	508438	Argument	bin		507498	0					
ANR	508439	Identifier	bin		507498	0					
ANR	508440	Argument	type_idx		507498	1					
ANR	508441	Identifier	type_idx		507498	0					
ANR	508442	ExpressionStatement	debug_locals [ register_num ] . startAddress = address	550:3:14089:14138	507498	12	True				
ANR	508443	AssignmentExpression	debug_locals [ register_num ] . startAddress = address		507498	0		=			
ANR	508444	MemberAccess	debug_locals [ register_num ] . startAddress		507498	0					
ANR	508445	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508446	Identifier	debug_locals		507498	0					
ANR	508447	Identifier	register_num		507498	1					
ANR	508448	Identifier	startAddress		507498	1					
ANR	508449	Identifier	address		507498	1					
ANR	508450	ExpressionStatement	debug_locals [ register_num ] . signature = NULL	551:3:14143:14186	507498	13	True				
ANR	508451	AssignmentExpression	debug_locals [ register_num ] . signature = NULL		507498	0		=			
ANR	508452	MemberAccess	debug_locals [ register_num ] . signature		507498	0					
ANR	508453	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508454	Identifier	debug_locals		507498	0					
ANR	508455	Identifier	register_num		507498	1					
ANR	508456	Identifier	signature		507498	1					
ANR	508457	Identifier	NULL		507498	1					
ANR	508458	ExpressionStatement	debug_locals [ register_num ] . live = true	552:3:14191:14229	507498	14	True				
ANR	508459	AssignmentExpression	debug_locals [ register_num ] . live = true		507498	0		=			
ANR	508460	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508461	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508462	Identifier	debug_locals		507498	0					
ANR	508463	Identifier	register_num		507498	1					
ANR	508464	Identifier	live		507498	1					
ANR	508465	Identifier	true		507498	1					
ANR	508466	BreakStatement	break ;	555:3:14317:14322	507498	11	True				
ANR	508467	Label	case 0x4 :	556:2:14326:14334	507498	12	True				
ANR	508468	CompoundStatement		169:3:4591:4637	507498	13					
ANR	508469	IdentifierDeclStatement	"ut64 register_num , name_idx , type_idx , sig_idx ;"	558:3:14371:14417	507498	0	True				
ANR	508470	IdentifierDecl	register_num		507498	0					
ANR	508471	IdentifierDeclType	ut64		507498	0					
ANR	508472	Identifier	register_num		507498	1					
ANR	508473	IdentifierDecl	name_idx		507498	1					
ANR	508474	IdentifierDeclType	ut64		507498	0					
ANR	508475	Identifier	name_idx		507498	1					
ANR	508476	IdentifierDecl	type_idx		507498	2					
ANR	508477	IdentifierDeclType	ut64		507498	0					
ANR	508478	Identifier	type_idx		507498	1					
ANR	508479	IdentifierDecl	sig_idx		507498	3					
ANR	508480	IdentifierDeclType	ut64		507498	0					
ANR	508481	Identifier	sig_idx		507498	1					
ANR	508482	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"	559:3:14422:14469	507498	1	True				
ANR	508483	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	0		=			
ANR	508484	Identifier	p4		507498	0					
ANR	508485	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	1					
ANR	508486	Callee	r_uleb128		507498	0					
ANR	508487	Identifier	r_uleb128		507498	0					
ANR	508488	ArgumentList	p4		507498	1					
ANR	508489	Argument	p4		507498	0					
ANR	508490	Identifier	p4		507498	0					
ANR	508491	Argument	p4_end - p4		507498	1					
ANR	508492	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508493	Identifier	p4_end		507498	0					
ANR	508494	Identifier	p4		507498	1					
ANR	508495	Argument	& register_num		507498	2					
ANR	508496	UnaryOperationExpression	& register_num		507498	0					
ANR	508497	UnaryOperator	&		507498	0					
ANR	508498	Identifier	register_num		507498	1					
ANR	508499	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & name_idx )"	560:3:14474:14517	507498	2	True				
ANR	508500	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & name_idx )"		507498	0		=			
ANR	508501	Identifier	p4		507498	0					
ANR	508502	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & name_idx )"		507498	1					
ANR	508503	Callee	r_uleb128		507498	0					
ANR	508504	Identifier	r_uleb128		507498	0					
ANR	508505	ArgumentList	p4		507498	1					
ANR	508506	Argument	p4		507498	0					
ANR	508507	Identifier	p4		507498	0					
ANR	508508	Argument	p4_end - p4		507498	1					
ANR	508509	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508510	Identifier	p4_end		507498	0					
ANR	508511	Identifier	p4		507498	1					
ANR	508512	Argument	& name_idx		507498	2					
ANR	508513	UnaryOperationExpression	& name_idx		507498	0					
ANR	508514	UnaryOperator	&		507498	0					
ANR	508515	Identifier	name_idx		507498	1					
ANR	508516	ExpressionStatement	name_idx -= 1	561:3:14522:14535	507498	3	True				
ANR	508517	AssignmentExpression	name_idx -= 1		507498	0		-=			
ANR	508518	Identifier	name_idx		507498	0					
ANR	508519	PrimaryExpression	1		507498	1					
ANR	508520	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & type_idx )"	562:3:14540:14583	507498	4	True				
ANR	508521	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & type_idx )"		507498	0		=			
ANR	508522	Identifier	p4		507498	0					
ANR	508523	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & type_idx )"		507498	1					
ANR	508524	Callee	r_uleb128		507498	0					
ANR	508525	Identifier	r_uleb128		507498	0					
ANR	508526	ArgumentList	p4		507498	1					
ANR	508527	Argument	p4		507498	0					
ANR	508528	Identifier	p4		507498	0					
ANR	508529	Argument	p4_end - p4		507498	1					
ANR	508530	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508531	Identifier	p4_end		507498	0					
ANR	508532	Identifier	p4		507498	1					
ANR	508533	Argument	& type_idx		507498	2					
ANR	508534	UnaryOperationExpression	& type_idx		507498	0					
ANR	508535	UnaryOperator	&		507498	0					
ANR	508536	Identifier	type_idx		507498	1					
ANR	508537	ExpressionStatement	type_idx -= 1	563:3:14588:14601	507498	5	True				
ANR	508538	AssignmentExpression	type_idx -= 1		507498	0		-=			
ANR	508539	Identifier	type_idx		507498	0					
ANR	508540	PrimaryExpression	1		507498	1					
ANR	508541	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & sig_idx )"	564:3:14606:14648	507498	6	True				
ANR	508542	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & sig_idx )"		507498	0		=			
ANR	508543	Identifier	p4		507498	0					
ANR	508544	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & sig_idx )"		507498	1					
ANR	508545	Callee	r_uleb128		507498	0					
ANR	508546	Identifier	r_uleb128		507498	0					
ANR	508547	ArgumentList	p4		507498	1					
ANR	508548	Argument	p4		507498	0					
ANR	508549	Identifier	p4		507498	0					
ANR	508550	Argument	p4_end - p4		507498	1					
ANR	508551	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508552	Identifier	p4_end		507498	0					
ANR	508553	Identifier	p4		507498	1					
ANR	508554	Argument	& sig_idx		507498	2					
ANR	508555	UnaryOperationExpression	& sig_idx		507498	0					
ANR	508556	UnaryOperator	&		507498	0					
ANR	508557	Identifier	sig_idx		507498	1					
ANR	508558	ExpressionStatement	sig_idx -= 1	565:3:14653:14665	507498	7	True				
ANR	508559	AssignmentExpression	sig_idx -= 1		507498	0		-=			
ANR	508560	Identifier	sig_idx		507498	0					
ANR	508561	PrimaryExpression	1		507498	1					
ANR	508562	IfStatement	if ( register_num >= regsz )		507498	8					
ANR	508563	Condition	register_num >= regsz	566:7:14674:14694	507498	0	True				
ANR	508564	RelationalExpression	register_num >= regsz		507498	0		>=			
ANR	508565	Identifier	register_num		507498	0					
ANR	508566	Identifier	regsz		507498	1					
ANR	508567	CompoundStatement		177:30:4917:4917	507498	1					
ANR	508568	ExpressionStatement	r_list_free ( debug_positions )	567:4:14703:14732	507498	0	True				
ANR	508569	CallExpression	r_list_free ( debug_positions )		507498	0					
ANR	508570	Callee	r_list_free		507498	0					
ANR	508571	Identifier	r_list_free		507498	0					
ANR	508572	ArgumentList	debug_positions		507498	1					
ANR	508573	Argument	debug_positions		507498	0					
ANR	508574	Identifier	debug_positions		507498	0					
ANR	508575	ExpressionStatement	free ( params )	568:4:14738:14751	507498	1	True				
ANR	508576	CallExpression	free ( params )		507498	0					
ANR	508577	Callee	free		507498	0					
ANR	508578	Identifier	free		507498	0					
ANR	508579	ArgumentList	params		507498	1					
ANR	508580	Argument	params		507498	0					
ANR	508581	Identifier	params		507498	0					
ANR	508582	ExpressionStatement	free ( debug_locals )	569:4:14757:14776	507498	2	True				
ANR	508583	CallExpression	free ( debug_locals )		507498	0					
ANR	508584	Callee	free		507498	0					
ANR	508585	Identifier	free		507498	0					
ANR	508586	ArgumentList	debug_locals		507498	1					
ANR	508587	Argument	debug_locals		507498	0					
ANR	508588	Identifier	debug_locals		507498	0					
ANR	508589	ReturnStatement	return ;	570:4:14782:14788	507498	3	True				
ANR	508590	IfStatement	if ( debug_locals [ register_num ] . live )		507498	9					
ANR	508591	Condition	debug_locals [ register_num ] . live	575:7:14877:14907	507498	0	True				
ANR	508592	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508593	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508594	Identifier	debug_locals		507498	0					
ANR	508595	Identifier	register_num		507498	1					
ANR	508596	Identifier	live		507498	1					
ANR	508597	CompoundStatement		187:4:5136:5218	507498	1					
ANR	508598	IdentifierDeclStatement	struct dex_debug_local_t * local = malloc ( sizeof ( struct dex_debug_local_t ) ) ;	576:4:14916:14998	507498	0	True				
ANR	508599	IdentifierDecl	* local = malloc ( sizeof ( struct dex_debug_local_t ) )		507498	0					
ANR	508600	IdentifierDeclType	struct dex_debug_local_t *		507498	0					
ANR	508601	Identifier	local		507498	1					
ANR	508602	AssignmentExpression	* local = malloc ( sizeof ( struct dex_debug_local_t ) )		507498	2		=			
ANR	508603	Identifier	local		507498	0					
ANR	508604	CallExpression	malloc ( sizeof ( struct dex_debug_local_t ) )		507498	1					
ANR	508605	Callee	malloc		507498	0					
ANR	508606	Identifier	malloc		507498	0					
ANR	508607	ArgumentList	sizeof ( struct dex_debug_local_t )		507498	1					
ANR	508608	Argument	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	508609	SizeofExpression	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	508610	Sizeof	sizeof		507498	0					
ANR	508611	SizeofOperand	struct dex_debug_local_t		507498	1					
ANR	508612	IfStatement	if ( ! local )		507498	1					
ANR	508613	Condition	! local	578:8:15008:15013	507498	0	True				
ANR	508614	UnaryOperationExpression	! local		507498	0					
ANR	508615	UnaryOperator	!		507498	0					
ANR	508616	Identifier	local		507498	1					
ANR	508617	CompoundStatement		189:16:5236:5236	507498	1					
ANR	508618	ExpressionStatement	keep = false	579:5:15023:15035	507498	0	True				
ANR	508619	AssignmentExpression	keep = false		507498	0		=			
ANR	508620	Identifier	keep		507498	0					
ANR	508621	Identifier	false		507498	1					
ANR	508622	BreakStatement	break ;	580:5:15042:15047	507498	1	True				
ANR	508623	ExpressionStatement	local -> name = debug_locals [ register_num ] . name	582:4:15059:15104	507498	2	True				
ANR	508624	AssignmentExpression	local -> name = debug_locals [ register_num ] . name		507498	0		=			
ANR	508625	PtrMemberAccess	local -> name		507498	0					
ANR	508626	Identifier	local		507498	0					
ANR	508627	Identifier	name		507498	1					
ANR	508628	MemberAccess	debug_locals [ register_num ] . name		507498	1					
ANR	508629	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508630	Identifier	debug_locals		507498	0					
ANR	508631	Identifier	register_num		507498	1					
ANR	508632	Identifier	name		507498	1					
ANR	508633	ExpressionStatement	local -> descriptor = debug_locals [ register_num ] . descriptor	583:4:15110:15167	507498	3	True				
ANR	508634	AssignmentExpression	local -> descriptor = debug_locals [ register_num ] . descriptor		507498	0		=			
ANR	508635	PtrMemberAccess	local -> descriptor		507498	0					
ANR	508636	Identifier	local		507498	0					
ANR	508637	Identifier	descriptor		507498	1					
ANR	508638	MemberAccess	debug_locals [ register_num ] . descriptor		507498	1					
ANR	508639	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508640	Identifier	debug_locals		507498	0					
ANR	508641	Identifier	register_num		507498	1					
ANR	508642	Identifier	descriptor		507498	1					
ANR	508643	ExpressionStatement	local -> startAddress = debug_locals [ register_num ] . startAddress	584:4:15173:15234	507498	4	True				
ANR	508644	AssignmentExpression	local -> startAddress = debug_locals [ register_num ] . startAddress		507498	0		=			
ANR	508645	PtrMemberAccess	local -> startAddress		507498	0					
ANR	508646	Identifier	local		507498	0					
ANR	508647	Identifier	startAddress		507498	1					
ANR	508648	MemberAccess	debug_locals [ register_num ] . startAddress		507498	1					
ANR	508649	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508650	Identifier	debug_locals		507498	0					
ANR	508651	Identifier	register_num		507498	1					
ANR	508652	Identifier	startAddress		507498	1					
ANR	508653	ExpressionStatement	local -> signature = debug_locals [ register_num ] . signature	585:4:15240:15295	507498	5	True				
ANR	508654	AssignmentExpression	local -> signature = debug_locals [ register_num ] . signature		507498	0		=			
ANR	508655	PtrMemberAccess	local -> signature		507498	0					
ANR	508656	Identifier	local		507498	0					
ANR	508657	Identifier	signature		507498	1					
ANR	508658	MemberAccess	debug_locals [ register_num ] . signature		507498	1					
ANR	508659	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508660	Identifier	debug_locals		507498	0					
ANR	508661	Identifier	register_num		507498	1					
ANR	508662	Identifier	signature		507498	1					
ANR	508663	ExpressionStatement	local -> live = true	586:4:15301:15319	507498	6	True				
ANR	508664	AssignmentExpression	local -> live = true		507498	0		=			
ANR	508665	PtrMemberAccess	local -> live		507498	0					
ANR	508666	Identifier	local		507498	0					
ANR	508667	Identifier	live		507498	1					
ANR	508668	Identifier	true		507498	1					
ANR	508669	ExpressionStatement	local -> reg = register_num	587:4:15325:15350	507498	7	True				
ANR	508670	AssignmentExpression	local -> reg = register_num		507498	0		=			
ANR	508671	PtrMemberAccess	local -> reg		507498	0					
ANR	508672	Identifier	local		507498	0					
ANR	508673	Identifier	reg		507498	1					
ANR	508674	Identifier	register_num		507498	1					
ANR	508675	ExpressionStatement	local -> endAddress = address	588:4:15356:15383	507498	8	True				
ANR	508676	AssignmentExpression	local -> endAddress = address		507498	0		=			
ANR	508677	PtrMemberAccess	local -> endAddress		507498	0					
ANR	508678	Identifier	local		507498	0					
ANR	508679	Identifier	endAddress		507498	1					
ANR	508680	Identifier	address		507498	1					
ANR	508681	ExpressionStatement	"r_list_append ( emitted_debug_locals , local )"	589:4:15389:15432	507498	9	True				
ANR	508682	CallExpression	"r_list_append ( emitted_debug_locals , local )"		507498	0					
ANR	508683	Callee	r_list_append		507498	0					
ANR	508684	Identifier	r_list_append		507498	0					
ANR	508685	ArgumentList	emitted_debug_locals		507498	1					
ANR	508686	Argument	emitted_debug_locals		507498	0					
ANR	508687	Identifier	emitted_debug_locals		507498	0					
ANR	508688	Argument	local		507498	1					
ANR	508689	Identifier	local		507498	0					
ANR	508690	ExpressionStatement	"debug_locals [ register_num ] . name = getstr ( bin , name_idx )"	592:3:15443:15499	507498	10	True				
ANR	508691	AssignmentExpression	"debug_locals [ register_num ] . name = getstr ( bin , name_idx )"		507498	0		=			
ANR	508692	MemberAccess	debug_locals [ register_num ] . name		507498	0					
ANR	508693	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508694	Identifier	debug_locals		507498	0					
ANR	508695	Identifier	register_num		507498	1					
ANR	508696	Identifier	name		507498	1					
ANR	508697	CallExpression	"getstr ( bin , name_idx )"		507498	1					
ANR	508698	Callee	getstr		507498	0					
ANR	508699	Identifier	getstr		507498	0					
ANR	508700	ArgumentList	bin		507498	1					
ANR	508701	Argument	bin		507498	0					
ANR	508702	Identifier	bin		507498	0					
ANR	508703	Argument	name_idx		507498	1					
ANR	508704	Identifier	name_idx		507498	0					
ANR	508705	ExpressionStatement	"debug_locals [ register_num ] . descriptor = dex_type_descriptor ( bin , type_idx )"	593:3:15504:15579	507498	11	True				
ANR	508706	AssignmentExpression	"debug_locals [ register_num ] . descriptor = dex_type_descriptor ( bin , type_idx )"		507498	0		=			
ANR	508707	MemberAccess	debug_locals [ register_num ] . descriptor		507498	0					
ANR	508708	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508709	Identifier	debug_locals		507498	0					
ANR	508710	Identifier	register_num		507498	1					
ANR	508711	Identifier	descriptor		507498	1					
ANR	508712	CallExpression	"dex_type_descriptor ( bin , type_idx )"		507498	1					
ANR	508713	Callee	dex_type_descriptor		507498	0					
ANR	508714	Identifier	dex_type_descriptor		507498	0					
ANR	508715	ArgumentList	bin		507498	1					
ANR	508716	Argument	bin		507498	0					
ANR	508717	Identifier	bin		507498	0					
ANR	508718	Argument	type_idx		507498	1					
ANR	508719	Identifier	type_idx		507498	0					
ANR	508720	ExpressionStatement	debug_locals [ register_num ] . startAddress = address	594:3:15584:15633	507498	12	True				
ANR	508721	AssignmentExpression	debug_locals [ register_num ] . startAddress = address		507498	0		=			
ANR	508722	MemberAccess	debug_locals [ register_num ] . startAddress		507498	0					
ANR	508723	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508724	Identifier	debug_locals		507498	0					
ANR	508725	Identifier	register_num		507498	1					
ANR	508726	Identifier	startAddress		507498	1					
ANR	508727	Identifier	address		507498	1					
ANR	508728	ExpressionStatement	"debug_locals [ register_num ] . signature = getstr ( bin , sig_idx )"	595:3:15638:15698	507498	13	True				
ANR	508729	AssignmentExpression	"debug_locals [ register_num ] . signature = getstr ( bin , sig_idx )"		507498	0		=			
ANR	508730	MemberAccess	debug_locals [ register_num ] . signature		507498	0					
ANR	508731	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508732	Identifier	debug_locals		507498	0					
ANR	508733	Identifier	register_num		507498	1					
ANR	508734	Identifier	signature		507498	1					
ANR	508735	CallExpression	"getstr ( bin , sig_idx )"		507498	1					
ANR	508736	Callee	getstr		507498	0					
ANR	508737	Identifier	getstr		507498	0					
ANR	508738	ArgumentList	bin		507498	1					
ANR	508739	Argument	bin		507498	0					
ANR	508740	Identifier	bin		507498	0					
ANR	508741	Argument	sig_idx		507498	1					
ANR	508742	Identifier	sig_idx		507498	0					
ANR	508743	ExpressionStatement	debug_locals [ register_num ] . live = true	596:3:15703:15741	507498	14	True				
ANR	508744	AssignmentExpression	debug_locals [ register_num ] . live = true		507498	0		=			
ANR	508745	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508746	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508747	Identifier	debug_locals		507498	0					
ANR	508748	Identifier	register_num		507498	1					
ANR	508749	Identifier	live		507498	1					
ANR	508750	Identifier	true		507498	1					
ANR	508751	BreakStatement	break ;	598:3:15751:15756	507498	14	True				
ANR	508752	Label	case 0x5 :	599:2:15760:15768	507498	15	True				
ANR	508753	CompoundStatement		212:3:6015:6032	507498	16					
ANR	508754	IdentifierDeclStatement	ut64 register_num ;	601:3:15795:15812	507498	0	True				
ANR	508755	IdentifierDecl	register_num		507498	0					
ANR	508756	IdentifierDeclType	ut64		507498	0					
ANR	508757	Identifier	register_num		507498	1					
ANR	508758	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"	602:3:15817:15864	507498	1	True				
ANR	508759	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	0		=			
ANR	508760	Identifier	p4		507498	0					
ANR	508761	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	1					
ANR	508762	Callee	r_uleb128		507498	0					
ANR	508763	Identifier	r_uleb128		507498	0					
ANR	508764	ArgumentList	p4		507498	1					
ANR	508765	Argument	p4		507498	0					
ANR	508766	Identifier	p4		507498	0					
ANR	508767	Argument	p4_end - p4		507498	1					
ANR	508768	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508769	Identifier	p4_end		507498	0					
ANR	508770	Identifier	p4		507498	1					
ANR	508771	Argument	& register_num		507498	2					
ANR	508772	UnaryOperationExpression	& register_num		507498	0					
ANR	508773	UnaryOperator	&		507498	0					
ANR	508774	Identifier	register_num		507498	1					
ANR	508775	IfStatement	if ( register_num >= regsz )		507498	2					
ANR	508776	Condition	register_num >= regsz	604:7:15897:15917	507498	0	True				
ANR	508777	RelationalExpression	register_num >= regsz		507498	0		>=			
ANR	508778	Identifier	register_num		507498	0					
ANR	508779	Identifier	regsz		507498	1					
ANR	508780	CompoundStatement		215:30:6140:6140	507498	1					
ANR	508781	ExpressionStatement	r_list_free ( debug_positions )	605:4:15926:15955	507498	0	True				
ANR	508782	CallExpression	r_list_free ( debug_positions )		507498	0					
ANR	508783	Callee	r_list_free		507498	0					
ANR	508784	Identifier	r_list_free		507498	0					
ANR	508785	ArgumentList	debug_positions		507498	1					
ANR	508786	Argument	debug_positions		507498	0					
ANR	508787	Identifier	debug_positions		507498	0					
ANR	508788	ExpressionStatement	free ( params )	606:4:15961:15974	507498	1	True				
ANR	508789	CallExpression	free ( params )		507498	0					
ANR	508790	Callee	free		507498	0					
ANR	508791	Identifier	free		507498	0					
ANR	508792	ArgumentList	params		507498	1					
ANR	508793	Argument	params		507498	0					
ANR	508794	Identifier	params		507498	0					
ANR	508795	ExpressionStatement	free ( debug_locals )	607:4:15980:15999	507498	2	True				
ANR	508796	CallExpression	free ( debug_locals )		507498	0					
ANR	508797	Callee	free		507498	0					
ANR	508798	Identifier	free		507498	0					
ANR	508799	ArgumentList	debug_locals		507498	1					
ANR	508800	Argument	debug_locals		507498	0					
ANR	508801	Identifier	debug_locals		507498	0					
ANR	508802	ReturnStatement	return ;	608:4:16005:16011	507498	3	True				
ANR	508803	IfStatement	if ( debug_locals [ register_num ] . live )		507498	3					
ANR	508804	Condition	debug_locals [ register_num ] . live	610:7:16025:16055	507498	0	True				
ANR	508805	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508806	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508807	Identifier	debug_locals		507498	0					
ANR	508808	Identifier	register_num		507498	1					
ANR	508809	Identifier	live		507498	1					
ANR	508810	CompoundStatement		222:4:6284:6366	507498	1					
ANR	508811	IdentifierDeclStatement	struct dex_debug_local_t * local = malloc ( sizeof ( struct dex_debug_local_t ) ) ;	611:4:16064:16146	507498	0	True				
ANR	508812	IdentifierDecl	* local = malloc ( sizeof ( struct dex_debug_local_t ) )		507498	0					
ANR	508813	IdentifierDeclType	struct dex_debug_local_t *		507498	0					
ANR	508814	Identifier	local		507498	1					
ANR	508815	AssignmentExpression	* local = malloc ( sizeof ( struct dex_debug_local_t ) )		507498	2		=			
ANR	508816	Identifier	local		507498	0					
ANR	508817	CallExpression	malloc ( sizeof ( struct dex_debug_local_t ) )		507498	1					
ANR	508818	Callee	malloc		507498	0					
ANR	508819	Identifier	malloc		507498	0					
ANR	508820	ArgumentList	sizeof ( struct dex_debug_local_t )		507498	1					
ANR	508821	Argument	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	508822	SizeofExpression	sizeof ( struct dex_debug_local_t )		507498	0					
ANR	508823	Sizeof	sizeof		507498	0					
ANR	508824	SizeofOperand	struct dex_debug_local_t		507498	1					
ANR	508825	IfStatement	if ( ! local )		507498	1					
ANR	508826	Condition	! local	613:8:16156:16161	507498	0	True				
ANR	508827	UnaryOperationExpression	! local		507498	0					
ANR	508828	UnaryOperator	!		507498	0					
ANR	508829	Identifier	local		507498	1					
ANR	508830	CompoundStatement		224:16:6384:6384	507498	1					
ANR	508831	ExpressionStatement	keep = false	614:5:16171:16183	507498	0	True				
ANR	508832	AssignmentExpression	keep = false		507498	0		=			
ANR	508833	Identifier	keep		507498	0					
ANR	508834	Identifier	false		507498	1					
ANR	508835	BreakStatement	break ;	615:5:16190:16195	507498	1	True				
ANR	508836	ExpressionStatement	local -> name = debug_locals [ register_num ] . name	617:4:16207:16252	507498	2	True				
ANR	508837	AssignmentExpression	local -> name = debug_locals [ register_num ] . name		507498	0		=			
ANR	508838	PtrMemberAccess	local -> name		507498	0					
ANR	508839	Identifier	local		507498	0					
ANR	508840	Identifier	name		507498	1					
ANR	508841	MemberAccess	debug_locals [ register_num ] . name		507498	1					
ANR	508842	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508843	Identifier	debug_locals		507498	0					
ANR	508844	Identifier	register_num		507498	1					
ANR	508845	Identifier	name		507498	1					
ANR	508846	ExpressionStatement	local -> descriptor = debug_locals [ register_num ] . descriptor	618:4:16258:16315	507498	3	True				
ANR	508847	AssignmentExpression	local -> descriptor = debug_locals [ register_num ] . descriptor		507498	0		=			
ANR	508848	PtrMemberAccess	local -> descriptor		507498	0					
ANR	508849	Identifier	local		507498	0					
ANR	508850	Identifier	descriptor		507498	1					
ANR	508851	MemberAccess	debug_locals [ register_num ] . descriptor		507498	1					
ANR	508852	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508853	Identifier	debug_locals		507498	0					
ANR	508854	Identifier	register_num		507498	1					
ANR	508855	Identifier	descriptor		507498	1					
ANR	508856	ExpressionStatement	local -> startAddress = debug_locals [ register_num ] . startAddress	619:4:16321:16382	507498	4	True				
ANR	508857	AssignmentExpression	local -> startAddress = debug_locals [ register_num ] . startAddress		507498	0		=			
ANR	508858	PtrMemberAccess	local -> startAddress		507498	0					
ANR	508859	Identifier	local		507498	0					
ANR	508860	Identifier	startAddress		507498	1					
ANR	508861	MemberAccess	debug_locals [ register_num ] . startAddress		507498	1					
ANR	508862	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508863	Identifier	debug_locals		507498	0					
ANR	508864	Identifier	register_num		507498	1					
ANR	508865	Identifier	startAddress		507498	1					
ANR	508866	ExpressionStatement	local -> signature = debug_locals [ register_num ] . signature	620:4:16388:16443	507498	5	True				
ANR	508867	AssignmentExpression	local -> signature = debug_locals [ register_num ] . signature		507498	0		=			
ANR	508868	PtrMemberAccess	local -> signature		507498	0					
ANR	508869	Identifier	local		507498	0					
ANR	508870	Identifier	signature		507498	1					
ANR	508871	MemberAccess	debug_locals [ register_num ] . signature		507498	1					
ANR	508872	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508873	Identifier	debug_locals		507498	0					
ANR	508874	Identifier	register_num		507498	1					
ANR	508875	Identifier	signature		507498	1					
ANR	508876	ExpressionStatement	local -> live = true	621:4:16449:16467	507498	6	True				
ANR	508877	AssignmentExpression	local -> live = true		507498	0		=			
ANR	508878	PtrMemberAccess	local -> live		507498	0					
ANR	508879	Identifier	local		507498	0					
ANR	508880	Identifier	live		507498	1					
ANR	508881	Identifier	true		507498	1					
ANR	508882	ExpressionStatement	local -> reg = register_num	622:4:16473:16498	507498	7	True				
ANR	508883	AssignmentExpression	local -> reg = register_num		507498	0		=			
ANR	508884	PtrMemberAccess	local -> reg		507498	0					
ANR	508885	Identifier	local		507498	0					
ANR	508886	Identifier	reg		507498	1					
ANR	508887	Identifier	register_num		507498	1					
ANR	508888	ExpressionStatement	local -> endAddress = address	623:4:16504:16531	507498	8	True				
ANR	508889	AssignmentExpression	local -> endAddress = address		507498	0		=			
ANR	508890	PtrMemberAccess	local -> endAddress		507498	0					
ANR	508891	Identifier	local		507498	0					
ANR	508892	Identifier	endAddress		507498	1					
ANR	508893	Identifier	address		507498	1					
ANR	508894	ExpressionStatement	"r_list_append ( emitted_debug_locals , local )"	624:4:16537:16580	507498	9	True				
ANR	508895	CallExpression	"r_list_append ( emitted_debug_locals , local )"		507498	0					
ANR	508896	Callee	r_list_append		507498	0					
ANR	508897	Identifier	r_list_append		507498	0					
ANR	508898	ArgumentList	emitted_debug_locals		507498	1					
ANR	508899	Argument	emitted_debug_locals		507498	0					
ANR	508900	Identifier	emitted_debug_locals		507498	0					
ANR	508901	Argument	local		507498	1					
ANR	508902	Identifier	local		507498	0					
ANR	508903	ExpressionStatement	debug_locals [ register_num ] . live = false	626:3:16590:16629	507498	4	True				
ANR	508904	AssignmentExpression	debug_locals [ register_num ] . live = false		507498	0		=			
ANR	508905	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508906	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508907	Identifier	debug_locals		507498	0					
ANR	508908	Identifier	register_num		507498	1					
ANR	508909	Identifier	live		507498	1					
ANR	508910	Identifier	false		507498	1					
ANR	508911	BreakStatement	break ;	628:3:16639:16644	507498	17	True				
ANR	508912	Label	case 0x6 :	629:2:16648:16656	507498	18	True				
ANR	508913	CompoundStatement		242:3:6907:6924	507498	19					
ANR	508914	IdentifierDeclStatement	ut64 register_num ;	631:3:16687:16704	507498	0	True				
ANR	508915	IdentifierDecl	register_num		507498	0					
ANR	508916	IdentifierDeclType	ut64		507498	0					
ANR	508917	Identifier	register_num		507498	1					
ANR	508918	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"	632:3:16709:16756	507498	1	True				
ANR	508919	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	0		=			
ANR	508920	Identifier	p4		507498	0					
ANR	508921	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & register_num )"		507498	1					
ANR	508922	Callee	r_uleb128		507498	0					
ANR	508923	Identifier	r_uleb128		507498	0					
ANR	508924	ArgumentList	p4		507498	1					
ANR	508925	Argument	p4		507498	0					
ANR	508926	Identifier	p4		507498	0					
ANR	508927	Argument	p4_end - p4		507498	1					
ANR	508928	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	508929	Identifier	p4_end		507498	0					
ANR	508930	Identifier	p4		507498	1					
ANR	508931	Argument	& register_num		507498	2					
ANR	508932	UnaryOperationExpression	& register_num		507498	0					
ANR	508933	UnaryOperator	&		507498	0					
ANR	508934	Identifier	register_num		507498	1					
ANR	508935	IfStatement	if ( register_num >= regsz )		507498	2					
ANR	508936	Condition	register_num >= regsz	633:7:16765:16785	507498	0	True				
ANR	508937	RelationalExpression	register_num >= regsz		507498	0		>=			
ANR	508938	Identifier	register_num		507498	0					
ANR	508939	Identifier	regsz		507498	1					
ANR	508940	CompoundStatement		244:30:7008:7008	507498	1					
ANR	508941	ExpressionStatement	r_list_free ( debug_positions )	634:4:16794:16823	507498	0	True				
ANR	508942	CallExpression	r_list_free ( debug_positions )		507498	0					
ANR	508943	Callee	r_list_free		507498	0					
ANR	508944	Identifier	r_list_free		507498	0					
ANR	508945	ArgumentList	debug_positions		507498	1					
ANR	508946	Argument	debug_positions		507498	0					
ANR	508947	Identifier	debug_positions		507498	0					
ANR	508948	ExpressionStatement	free ( buf )	635:4:16829:16839	507498	1	True				
ANR	508949	CallExpression	free ( buf )		507498	0					
ANR	508950	Callee	free		507498	0					
ANR	508951	Identifier	free		507498	0					
ANR	508952	ArgumentList	buf		507498	1					
ANR	508953	Argument	buf		507498	0					
ANR	508954	Identifier	buf		507498	0					
ANR	508955	ExpressionStatement	free ( params )	636:4:16845:16858	507498	2	True				
ANR	508956	CallExpression	free ( params )		507498	0					
ANR	508957	Callee	free		507498	0					
ANR	508958	Identifier	free		507498	0					
ANR	508959	ArgumentList	params		507498	1					
ANR	508960	Argument	params		507498	0					
ANR	508961	Identifier	params		507498	0					
ANR	508962	ExpressionStatement	free ( debug_locals )	637:4:16864:16883	507498	3	True				
ANR	508963	CallExpression	free ( debug_locals )		507498	0					
ANR	508964	Callee	free		507498	0					
ANR	508965	Identifier	free		507498	0					
ANR	508966	ArgumentList	debug_locals		507498	1					
ANR	508967	Argument	debug_locals		507498	0					
ANR	508968	Identifier	debug_locals		507498	0					
ANR	508969	ReturnStatement	return ;	638:4:16889:16895	507498	4	True				
ANR	508970	IfStatement	if ( ! debug_locals [ register_num ] . live )		507498	3					
ANR	508971	Condition	! debug_locals [ register_num ] . live	640:7:16909:16940	507498	0	True				
ANR	508972	UnaryOperationExpression	! debug_locals [ register_num ] . live		507498	0					
ANR	508973	UnaryOperator	!		507498	0					
ANR	508974	MemberAccess	debug_locals [ register_num ] . live		507498	1					
ANR	508975	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508976	Identifier	debug_locals		507498	0					
ANR	508977	Identifier	register_num		507498	1					
ANR	508978	Identifier	live		507498	1					
ANR	508979	CompoundStatement		251:41:7163:7163	507498	1					
ANR	508980	ExpressionStatement	debug_locals [ register_num ] . startAddress = address	641:4:16949:16998	507498	0	True				
ANR	508981	AssignmentExpression	debug_locals [ register_num ] . startAddress = address		507498	0		=			
ANR	508982	MemberAccess	debug_locals [ register_num ] . startAddress		507498	0					
ANR	508983	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508984	Identifier	debug_locals		507498	0					
ANR	508985	Identifier	register_num		507498	1					
ANR	508986	Identifier	startAddress		507498	1					
ANR	508987	Identifier	address		507498	1					
ANR	508988	ExpressionStatement	debug_locals [ register_num ] . live = true	642:4:17004:17042	507498	1	True				
ANR	508989	AssignmentExpression	debug_locals [ register_num ] . live = true		507498	0		=			
ANR	508990	MemberAccess	debug_locals [ register_num ] . live		507498	0					
ANR	508991	ArrayIndexing	debug_locals [ register_num ]		507498	0					
ANR	508992	Identifier	debug_locals		507498	0					
ANR	508993	Identifier	register_num		507498	1					
ANR	508994	Identifier	live		507498	1					
ANR	508995	Identifier	true		507498	1					
ANR	508996	BreakStatement	break ;	645:3:17057:17062	507498	20	True				
ANR	508997	Label	case 0x7 :	646:2:17066:17074	507498	21	True				
ANR	508998	BreakStatement	break ;	647:3:17102:17107	507498	22	True				
ANR	508999	Label	case 0x8 :	648:2:17111:17119	507498	23	True				
ANR	509000	BreakStatement	break ;	649:3:17149:17154	507498	24	True				
ANR	509001	Label	case 0x9 :	650:2:17158:17166	507498	25	True				
ANR	509002	CompoundStatement		262:3:7391:7391	507498	26					
ANR	509003	ExpressionStatement	"p4 = r_uleb128 ( p4 , p4_end - p4 , & source_file_idx )"	652:3:17176:17226	507498	0	True				
ANR	509004	AssignmentExpression	"p4 = r_uleb128 ( p4 , p4_end - p4 , & source_file_idx )"		507498	0		=			
ANR	509005	Identifier	p4		507498	0					
ANR	509006	CallExpression	"r_uleb128 ( p4 , p4_end - p4 , & source_file_idx )"		507498	1					
ANR	509007	Callee	r_uleb128		507498	0					
ANR	509008	Identifier	r_uleb128		507498	0					
ANR	509009	ArgumentList	p4		507498	1					
ANR	509010	Argument	p4		507498	0					
ANR	509011	Identifier	p4		507498	0					
ANR	509012	Argument	p4_end - p4		507498	1					
ANR	509013	AdditiveExpression	p4_end - p4		507498	0		-			
ANR	509014	Identifier	p4_end		507498	0					
ANR	509015	Identifier	p4		507498	1					
ANR	509016	Argument	& source_file_idx		507498	2					
ANR	509017	UnaryOperationExpression	& source_file_idx		507498	0					
ANR	509018	UnaryOperator	&		507498	0					
ANR	509019	Identifier	source_file_idx		507498	1					
ANR	509020	ExpressionStatement	source_file_idx --	653:3:17231:17248	507498	1	True				
ANR	509021	PostIncDecOperationExpression	source_file_idx --		507498	0					
ANR	509022	Identifier	source_file_idx		507498	0					
ANR	509023	IncDec	--		507498	1					
ANR	509024	BreakStatement	break ;	655:3:17258:17263	507498	27	True				
ANR	509025	Label	default :	656:2:17267:17274	507498	28	True				
ANR	509026	Identifier	default		507498	0					
ANR	509027	CompoundStatement		269:3:7504:7537	507498	29					
ANR	509028	IdentifierDeclStatement	int adjusted_opcode = opcode - 10 ;	658:3:17284:17317	507498	0	True				
ANR	509029	IdentifierDecl	adjusted_opcode = opcode - 10		507498	0					
ANR	509030	IdentifierDeclType	int		507498	0					
ANR	509031	Identifier	adjusted_opcode		507498	1					
ANR	509032	AssignmentExpression	adjusted_opcode = opcode - 10		507498	2		=			
ANR	509033	Identifier	adjusted_opcode		507498	0					
ANR	509034	AdditiveExpression	opcode - 10		507498	1		-			
ANR	509035	Identifier	opcode		507498	0					
ANR	509036	PrimaryExpression	10		507498	1					
ANR	509037	ExpressionStatement	address += ( adjusted_opcode / 15 )	659:3:17322:17355	507498	1	True				
ANR	509038	AssignmentExpression	address += ( adjusted_opcode / 15 )		507498	0		+=			
ANR	509039	Identifier	address		507498	0					
ANR	509040	MultiplicativeExpression	adjusted_opcode / 15		507498	1		/			
ANR	509041	Identifier	adjusted_opcode		507498	0					
ANR	509042	PrimaryExpression	15		507498	1					
ANR	509043	ExpressionStatement	line += - 4 + ( adjusted_opcode % 15 )	660:3:17360:17395	507498	2	True				
ANR	509044	AssignmentExpression	line += - 4 + ( adjusted_opcode % 15 )		507498	0		+=			
ANR	509045	Identifier	line		507498	0					
ANR	509046	AdditiveExpression	- 4 + ( adjusted_opcode % 15 )		507498	1		+			
ANR	509047	UnaryOperationExpression	- 4		507498	0					
ANR	509048	UnaryOperator	-		507498	0					
ANR	509049	PrimaryExpression	4		507498	1					
ANR	509050	MultiplicativeExpression	adjusted_opcode % 15		507498	1		%			
ANR	509051	Identifier	adjusted_opcode		507498	0					
ANR	509052	PrimaryExpression	15		507498	1					
ANR	509053	Statement	struct	661:3:17400:17405	507498	3	True				
ANR	509054	Statement	dex_debug_position_t	661:10:17407:17426	507498	4	True				
ANR	509055	Statement	*	661:31:17428:17428	507498	5	True				
ANR	509056	Statement	position	661:32:17429:17436	507498	6	True				
ANR	509057	Statement	=	661:41:17438:17438	507498	7	True				
ANR	509058	Statement	R_NEW0	662:4:17444:17449	507498	8	True				
ANR	509059	Statement	(	662:11:17451:17451	507498	9	True				
ANR	509060	Statement	struct	662:12:17452:17457	507498	10	True				
ANR	509061	Statement	dex_debug_position_t	662:19:17459:17478	507498	11	True				
ANR	509062	Statement	)	662:39:17479:17479	507498	12	True				
ANR	509063	ExpressionStatement		662:40:17480:17480	507498	13	True				
ANR	509064	IfStatement	if ( ! position )		507498	14					
ANR	509065	Condition	! position	663:7:17489:17497	507498	0	True				
ANR	509066	UnaryOperationExpression	! position		507498	0					
ANR	509067	UnaryOperator	!		507498	0					
ANR	509068	Identifier	position		507498	1					
ANR	509069	CompoundStatement		274:18:7720:7720	507498	1					
ANR	509070	ExpressionStatement	keep = false	664:4:17506:17518	507498	0	True				
ANR	509071	AssignmentExpression	keep = false		507498	0		=			
ANR	509072	Identifier	keep		507498	0					
ANR	509073	Identifier	false		507498	1					
ANR	509074	BreakStatement	break ;	665:4:17524:17529	507498	1	True				
ANR	509075	ExpressionStatement	position -> source_file_idx = source_file_idx	667:3:17539:17582	507498	15	True				
ANR	509076	AssignmentExpression	position -> source_file_idx = source_file_idx		507498	0		=			
ANR	509077	PtrMemberAccess	position -> source_file_idx		507498	0					
ANR	509078	Identifier	position		507498	0					
ANR	509079	Identifier	source_file_idx		507498	1					
ANR	509080	Identifier	source_file_idx		507498	1					
ANR	509081	ExpressionStatement	position -> address = address	668:3:17587:17614	507498	16	True				
ANR	509082	AssignmentExpression	position -> address = address		507498	0		=			
ANR	509083	PtrMemberAccess	position -> address		507498	0					
ANR	509084	Identifier	position		507498	0					
ANR	509085	Identifier	address		507498	1					
ANR	509086	Identifier	address		507498	1					
ANR	509087	ExpressionStatement	position -> line = line	669:3:17619:17640	507498	17	True				
ANR	509088	AssignmentExpression	position -> line = line		507498	0		=			
ANR	509089	PtrMemberAccess	position -> line		507498	0					
ANR	509090	Identifier	position		507498	0					
ANR	509091	Identifier	line		507498	1					
ANR	509092	Identifier	line		507498	1					
ANR	509093	ExpressionStatement	"r_list_append ( debug_positions , position )"	670:3:17645:17686	507498	18	True				
ANR	509094	CallExpression	"r_list_append ( debug_positions , position )"		507498	0					
ANR	509095	Callee	r_list_append		507498	0					
ANR	509096	Identifier	r_list_append		507498	0					
ANR	509097	ArgumentList	debug_positions		507498	1					
ANR	509098	Argument	debug_positions		507498	0					
ANR	509099	Identifier	debug_positions		507498	0					
ANR	509100	Argument	position		507498	1					
ANR	509101	Identifier	position		507498	0					
ANR	509102	BreakStatement	break ;	672:3:17696:17701	507498	30	True				
ANR	509103	IfStatement	if ( p4 + 1 >= p4_end )		507498	1					
ANR	509104	Condition	p4 + 1 >= p4_end	674:6:17713:17728	507498	0	True				
ANR	509105	RelationalExpression	p4 + 1 >= p4_end		507498	0		>=			
ANR	509106	AdditiveExpression	p4 + 1		507498	0		+			
ANR	509107	Identifier	p4		507498	0					
ANR	509108	PrimaryExpression	1		507498	1					
ANR	509109	Identifier	p4_end		507498	1					
ANR	509110	CompoundStatement		285:24:7951:7951	507498	1					
ANR	509111	BreakStatement	break ;	675:3:17736:17741	507498	0	True				
ANR	509112	ExpressionStatement	opcode = * ( p4 ++ ) & 0xff	677:2:17749:17772	507498	2	True				
ANR	509113	AssignmentExpression	opcode = * ( p4 ++ ) & 0xff		507498	0		=			
ANR	509114	Identifier	opcode		507498	0					
ANR	509115	BitAndExpression	* ( p4 ++ ) & 0xff		507498	1		&			
ANR	509116	UnaryOperationExpression	* ( p4 ++ )		507498	0					
ANR	509117	UnaryOperator	*		507498	0					
ANR	509118	PostIncDecOperationExpression	p4 ++		507498	1					
ANR	509119	Identifier	p4		507498	0					
ANR	509120	IncDec	++		507498	1					
ANR	509121	PrimaryExpression	0xff		507498	1					
ANR	509122	IfStatement	if ( ! bf -> sdb_addrinfo )		507498	42					
ANR	509123	Condition	! bf -> sdb_addrinfo	680:5:17783:17799	507498	0	True				
ANR	509124	UnaryOperationExpression	! bf -> sdb_addrinfo		507498	0					
ANR	509125	UnaryOperator	!		507498	0					
ANR	509126	PtrMemberAccess	bf -> sdb_addrinfo		507498	1					
ANR	509127	Identifier	bf		507498	0					
ANR	509128	Identifier	sdb_addrinfo		507498	1					
ANR	509129	CompoundStatement		291:24:8022:8022	507498	1					
ANR	509130	ExpressionStatement	bf -> sdb_addrinfo = sdb_new0 ( )	681:2:17806:17836	507498	0	True				
ANR	509131	AssignmentExpression	bf -> sdb_addrinfo = sdb_new0 ( )		507498	0		=			
ANR	509132	PtrMemberAccess	bf -> sdb_addrinfo		507498	0					
ANR	509133	Identifier	bf		507498	0					
ANR	509134	Identifier	sdb_addrinfo		507498	1					
ANR	509135	CallExpression	sdb_new0 ( )		507498	1					
ANR	509136	Callee	sdb_new0		507498	0					
ANR	509137	Identifier	sdb_new0		507498	0					
ANR	509138	ArgumentList			507498	1					
ANR	509139	IdentifierDeclStatement	RListIter * iter1 ;	684:1:17843:17859	507498	43	True				
ANR	509140	IdentifierDecl	* iter1		507498	0					
ANR	509141	IdentifierDeclType	RListIter *		507498	0					
ANR	509142	Identifier	iter1		507498	1					
ANR	509143	IdentifierDeclStatement	struct dex_debug_position_t * pos ;	685:1:17862:17894	507498	44	True				
ANR	509144	IdentifierDecl	* pos		507498	0					
ANR	509145	IdentifierDeclType	struct dex_debug_position_t *		507498	0					
ANR	509146	Identifier	pos		507498	1					
ANR	509147	Statement	r_list_foreach	688:1:17976:17989	507498	45	True				
ANR	509148	Statement	(	688:16:17991:17991	507498	46	True				
ANR	509149	Statement	debug_positions	688:17:17992:18006	507498	47	True				
ANR	509150	Statement	","	688:32:18007:18007	507498	48	True				
ANR	509151	Statement	iter1	688:34:18009:18013	507498	49	True				
ANR	509152	Statement	","	688:39:18014:18014	507498	50	True				
ANR	509153	Statement	pos	688:41:18016:18018	507498	51	True				
ANR	509154	Statement	)	688:44:18019:18019	507498	52	True				
ANR	509155	CompoundStatement		312:2:8641:8691	507498	53					
ANR	509156	IdentifierDeclStatement	"const char * line = getstr ( bin , pos -> source_file_idx ) ;"	689:2:18025:18078	507498	0	True				
ANR	509157	IdentifierDecl	"* line = getstr ( bin , pos -> source_file_idx )"		507498	0					
ANR	509158	IdentifierDeclType	const char *		507498	0					
ANR	509159	Identifier	line		507498	1					
ANR	509160	AssignmentExpression	"* line = getstr ( bin , pos -> source_file_idx )"		507498	2		=			
ANR	509161	Identifier	line		507498	0					
ANR	509162	CallExpression	"getstr ( bin , pos -> source_file_idx )"		507498	1					
ANR	509163	Callee	getstr		507498	0					
ANR	509164	Identifier	getstr		507498	0					
ANR	509165	ArgumentList	bin		507498	1					
ANR	509166	Argument	bin		507498	0					
ANR	509167	Identifier	bin		507498	0					
ANR	509168	Argument	pos -> source_file_idx		507498	1					
ANR	509169	PtrMemberAccess	pos -> source_file_idx		507498	0					
ANR	509170	Identifier	pos		507498	0					
ANR	509171	Identifier	source_file_idx		507498	1					
ANR	509172	IdentifierDeclStatement	char offset [ 64 ] = { 0 } ;	691:2:18088:18109	507498	1	True				
ANR	509173	IdentifierDecl	offset [ 64 ] = { 0 }		507498	0					
ANR	509174	IdentifierDeclType	char [ 64 ]		507498	0					
ANR	509175	Identifier	offset		507498	1					
ANR	509176	PrimaryExpression	64		507498	2					
ANR	509177	AssignmentExpression	offset [ 64 ] = { 0 }		507498	3		=			
ANR	509178	Identifier	offset		507498	0					
ANR	509179	InitializerList	0		507498	1					
ANR	509180	PrimaryExpression	0		507498	0					
ANR	509181	IfStatement	if ( ! line || ! * line )		507498	2					
ANR	509182	Condition	! line || ! * line	692:6:18117:18131	507498	0	True				
ANR	509183	OrExpression	! line || ! * line		507498	0		||			
ANR	509184	UnaryOperationExpression	! line		507498	0					
ANR	509185	UnaryOperator	!		507498	0					
ANR	509186	Identifier	line		507498	1					
ANR	509187	UnaryOperationExpression	! * line		507498	1					
ANR	509188	UnaryOperator	!		507498	0					
ANR	509189	UnaryOperationExpression	* line		507498	1					
ANR	509190	UnaryOperator	*		507498	0					
ANR	509191	Identifier	line		507498	1					
ANR	509192	CompoundStatement		303:23:8354:8354	507498	1					
ANR	509193	ContinueStatement	continue ;	693:3:18139:18147	507498	0	True				
ANR	509194	Statement	char	695:2:18155:18158	507498	3	True				
ANR	509195	Statement	*	695:7:18160:18160	507498	4	True				
ANR	509196	Statement	fileline	695:8:18161:18168	507498	5	True				
ANR	509197	Statement	=	695:17:18170:18170	507498	6	True				
ANR	509198	Statement	r_str_newf	695:19:18172:18181	507498	7	True				
ANR	509199	Statement	(	695:30:18183:18183	507498	8	True				
ANR	509200	Statement	"""%s|%"""	695:31:18184:18189	507498	9	True				
ANR	509201	Statement	PFMT64d	695:37:18190:18196	507498	10	True				
ANR	509202	Statement	","	695:44:18197:18197	507498	11	True				
ANR	509203	Statement	line	695:46:18199:18202	507498	12	True				
ANR	509204	Statement	","	695:50:18203:18203	507498	13	True				
ANR	509205	Statement	pos	695:52:18205:18207	507498	14	True				
ANR	509206	Statement	->	695:55:18208:18209	507498	15	True				
ANR	509207	Statement	line	695:57:18210:18213	507498	16	True				
ANR	509208	Statement	)	695:61:18214:18214	507498	17	True				
ANR	509209	ExpressionStatement		695:62:18215:18215	507498	18	True				
ANR	509210	IdentifierDeclStatement	"char * offset_ptr = sdb_itoa ( pos -> address + paddr , offset , 16 ) ;"	696:2:18219:18281	507498	19	True				
ANR	509211	IdentifierDecl	"* offset_ptr = sdb_itoa ( pos -> address + paddr , offset , 16 )"		507498	0					
ANR	509212	IdentifierDeclType	char *		507498	0					
ANR	509213	Identifier	offset_ptr		507498	1					
ANR	509214	AssignmentExpression	"* offset_ptr = sdb_itoa ( pos -> address + paddr , offset , 16 )"		507498	2		=			
ANR	509215	Identifier	offset_ptr		507498	0					
ANR	509216	CallExpression	"sdb_itoa ( pos -> address + paddr , offset , 16 )"		507498	1					
ANR	509217	Callee	sdb_itoa		507498	0					
ANR	509218	Identifier	sdb_itoa		507498	0					
ANR	509219	ArgumentList	pos -> address + paddr		507498	1					
ANR	509220	Argument	pos -> address + paddr		507498	0					
ANR	509221	AdditiveExpression	pos -> address + paddr		507498	0		+			
ANR	509222	PtrMemberAccess	pos -> address		507498	0					
ANR	509223	Identifier	pos		507498	0					
ANR	509224	Identifier	address		507498	1					
ANR	509225	Identifier	paddr		507498	1					
ANR	509226	Argument	offset		507498	1					
ANR	509227	Identifier	offset		507498	0					
ANR	509228	Argument	16		507498	2					
ANR	509229	PrimaryExpression	16		507498	0					
ANR	509230	ExpressionStatement	"sdb_set ( bf -> sdb_addrinfo , offset_ptr , fileline , 0 )"	697:2:18285:18336	507498	20	True				
ANR	509231	CallExpression	"sdb_set ( bf -> sdb_addrinfo , offset_ptr , fileline , 0 )"		507498	0					
ANR	509232	Callee	sdb_set		507498	0					
ANR	509233	Identifier	sdb_set		507498	0					
ANR	509234	ArgumentList	bf -> sdb_addrinfo		507498	1					
ANR	509235	Argument	bf -> sdb_addrinfo		507498	0					
ANR	509236	PtrMemberAccess	bf -> sdb_addrinfo		507498	0					
ANR	509237	Identifier	bf		507498	0					
ANR	509238	Identifier	sdb_addrinfo		507498	1					
ANR	509239	Argument	offset_ptr		507498	1					
ANR	509240	Identifier	offset_ptr		507498	0					
ANR	509241	Argument	fileline		507498	2					
ANR	509242	Identifier	fileline		507498	0					
ANR	509243	Argument	0		507498	3					
ANR	509244	PrimaryExpression	0		507498	0					
ANR	509245	ExpressionStatement	"sdb_set ( bf -> sdb_addrinfo , fileline , offset_ptr , 0 )"	698:2:18340:18391	507498	21	True				
ANR	509246	CallExpression	"sdb_set ( bf -> sdb_addrinfo , fileline , offset_ptr , 0 )"		507498	0					
ANR	509247	Callee	sdb_set		507498	0					
ANR	509248	Identifier	sdb_set		507498	0					
ANR	509249	ArgumentList	bf -> sdb_addrinfo		507498	1					
ANR	509250	Argument	bf -> sdb_addrinfo		507498	0					
ANR	509251	PtrMemberAccess	bf -> sdb_addrinfo		507498	0					
ANR	509252	Identifier	bf		507498	0					
ANR	509253	Identifier	sdb_addrinfo		507498	1					
ANR	509254	Argument	fileline		507498	1					
ANR	509255	Identifier	fileline		507498	0					
ANR	509256	Argument	offset_ptr		507498	2					
ANR	509257	Identifier	offset_ptr		507498	0					
ANR	509258	Argument	0		507498	3					
ANR	509259	PrimaryExpression	0		507498	0					
ANR	509260	ExpressionStatement	free ( fileline )	699:2:18395:18410	507498	22	True				
ANR	509261	CallExpression	free ( fileline )		507498	0					
ANR	509262	Callee	free		507498	0					
ANR	509263	Identifier	free		507498	0					
ANR	509264	ArgumentList	fileline		507498	1					
ANR	509265	Argument	fileline		507498	0					
ANR	509266	Identifier	fileline		507498	0					
ANR	509267	IdentifierDeclStatement	RBinDwarfRow * rbindwardrow = R_NEW0 ( RBinDwarfRow ) ;	701:2:18421:18471	507498	23	True				
ANR	509268	IdentifierDecl	* rbindwardrow = R_NEW0 ( RBinDwarfRow )		507498	0					
ANR	509269	IdentifierDeclType	RBinDwarfRow *		507498	0					
ANR	509270	Identifier	rbindwardrow		507498	1					
ANR	509271	AssignmentExpression	* rbindwardrow = R_NEW0 ( RBinDwarfRow )		507498	2		=			
ANR	509272	Identifier	rbindwardrow		507498	0					
ANR	509273	CallExpression	R_NEW0 ( RBinDwarfRow )		507498	1					
ANR	509274	Callee	R_NEW0		507498	0					
ANR	509275	Identifier	R_NEW0		507498	0					
ANR	509276	ArgumentList	RBinDwarfRow		507498	1					
ANR	509277	Argument	RBinDwarfRow		507498	0					
ANR	509278	Identifier	RBinDwarfRow		507498	0					
ANR	509279	IfStatement	if ( ! rbindwardrow )		507498	24					
ANR	509280	Condition	! rbindwardrow	702:6:18479:18491	507498	0	True				
ANR	509281	UnaryOperationExpression	! rbindwardrow		507498	0					
ANR	509282	UnaryOperator	!		507498	0					
ANR	509283	Identifier	rbindwardrow		507498	1					
ANR	509284	CompoundStatement		313:21:8714:8714	507498	1					
ANR	509285	ExpressionStatement	dexdump = false	703:3:18499:18514	507498	0	True				
ANR	509286	AssignmentExpression	dexdump = false		507498	0		=			
ANR	509287	Identifier	dexdump		507498	0					
ANR	509288	Identifier	false		507498	1					
ANR	509289	BreakStatement	break ;	704:3:18519:18524	507498	1	True				
ANR	509290	IfStatement	if ( line )		507498	25					
ANR	509291	Condition	line	706:6:18536:18539	507498	0	True				
ANR	509292	Identifier	line		507498	0					
ANR	509293	CompoundStatement		317:12:8762:8762	507498	1					
ANR	509294	ExpressionStatement	rbindwardrow -> file = strdup ( line )	707:3:18547:18581	507498	0	True				
ANR	509295	AssignmentExpression	rbindwardrow -> file = strdup ( line )		507498	0		=			
ANR	509296	PtrMemberAccess	rbindwardrow -> file		507498	0					
ANR	509297	Identifier	rbindwardrow		507498	0					
ANR	509298	Identifier	file		507498	1					
ANR	509299	CallExpression	strdup ( line )		507498	1					
ANR	509300	Callee	strdup		507498	0					
ANR	509301	Identifier	strdup		507498	0					
ANR	509302	ArgumentList	line		507498	1					
ANR	509303	Argument	line		507498	0					
ANR	509304	Identifier	line		507498	0					
ANR	509305	ExpressionStatement	rbindwardrow -> address = pos -> address	708:3:18586:18622	507498	1	True				
ANR	509306	AssignmentExpression	rbindwardrow -> address = pos -> address		507498	0		=			
ANR	509307	PtrMemberAccess	rbindwardrow -> address		507498	0					
ANR	509308	Identifier	rbindwardrow		507498	0					
ANR	509309	Identifier	address		507498	1					
ANR	509310	PtrMemberAccess	pos -> address		507498	1					
ANR	509311	Identifier	pos		507498	0					
ANR	509312	Identifier	address		507498	1					
ANR	509313	ExpressionStatement	rbindwardrow -> line = pos -> line	709:3:18627:18657	507498	2	True				
ANR	509314	AssignmentExpression	rbindwardrow -> line = pos -> line		507498	0		=			
ANR	509315	PtrMemberAccess	rbindwardrow -> line		507498	0					
ANR	509316	Identifier	rbindwardrow		507498	0					
ANR	509317	Identifier	line		507498	1					
ANR	509318	PtrMemberAccess	pos -> line		507498	1					
ANR	509319	Identifier	pos		507498	0					
ANR	509320	Identifier	line		507498	1					
ANR	509321	ExpressionStatement	"r_list_append ( dex -> lines_list , rbindwardrow )"	710:3:18662:18707	507498	3	True				
ANR	509322	CallExpression	"r_list_append ( dex -> lines_list , rbindwardrow )"		507498	0					
ANR	509323	Callee	r_list_append		507498	0					
ANR	509324	Identifier	r_list_append		507498	0					
ANR	509325	ArgumentList	dex -> lines_list		507498	1					
ANR	509326	Argument	dex -> lines_list		507498	0					
ANR	509327	PtrMemberAccess	dex -> lines_list		507498	0					
ANR	509328	Identifier	dex		507498	0					
ANR	509329	Identifier	lines_list		507498	1					
ANR	509330	Argument	rbindwardrow		507498	1					
ANR	509331	Identifier	rbindwardrow		507498	0					
ANR	509332	IfStatement	if ( ! dexdump )		507498	54					
ANR	509333	Condition	! dexdump	715:5:18729:18736	507498	0	True				
ANR	509334	UnaryOperationExpression	! dexdump		507498	0					
ANR	509335	UnaryOperator	!		507498	0					
ANR	509336	Identifier	dexdump		507498	1					
ANR	509337	CompoundStatement		326:15:8959:8959	507498	1					
ANR	509338	ExpressionStatement	free ( debug_positions )	716:2:18743:18765	507498	0	True				
ANR	509339	CallExpression	free ( debug_positions )		507498	0					
ANR	509340	Callee	free		507498	0					
ANR	509341	Identifier	free		507498	0					
ANR	509342	ArgumentList	debug_positions		507498	1					
ANR	509343	Argument	debug_positions		507498	0					
ANR	509344	Identifier	debug_positions		507498	0					
ANR	509345	ExpressionStatement	free ( emitted_debug_locals )	717:2:18769:18796	507498	1	True				
ANR	509346	CallExpression	free ( emitted_debug_locals )		507498	0					
ANR	509347	Callee	free		507498	0					
ANR	509348	Identifier	free		507498	0					
ANR	509349	ArgumentList	emitted_debug_locals		507498	1					
ANR	509350	Argument	emitted_debug_locals		507498	0					
ANR	509351	Identifier	emitted_debug_locals		507498	0					
ANR	509352	ExpressionStatement	free ( debug_locals )	718:2:18800:18819	507498	2	True				
ANR	509353	CallExpression	free ( debug_locals )		507498	0					
ANR	509354	Callee	free		507498	0					
ANR	509355	Identifier	free		507498	0					
ANR	509356	ArgumentList	debug_locals		507498	1					
ANR	509357	Argument	debug_locals		507498	0					
ANR	509358	Identifier	debug_locals		507498	0					
ANR	509359	ExpressionStatement	free ( params )	719:2:18823:18836	507498	3	True				
ANR	509360	CallExpression	free ( params )		507498	0					
ANR	509361	Callee	free		507498	0					
ANR	509362	Identifier	free		507498	0					
ANR	509363	ArgumentList	params		507498	1					
ANR	509364	Argument	params		507498	0					
ANR	509365	Identifier	params		507498	0					
ANR	509366	ExpressionStatement	free ( buf )	720:2:18840:18850	507498	4	True				
ANR	509367	CallExpression	free ( buf )		507498	0					
ANR	509368	Callee	free		507498	0					
ANR	509369	Identifier	free		507498	0					
ANR	509370	ArgumentList	buf		507498	1					
ANR	509371	Argument	buf		507498	0					
ANR	509372	Identifier	buf		507498	0					
ANR	509373	ReturnStatement	return ;	721:2:18854:18860	507498	5	True				
ANR	509374	IdentifierDeclStatement	RListIter * iter2 ;	724:1:18867:18883	507498	55	True				
ANR	509375	IdentifierDecl	* iter2		507498	0					
ANR	509376	IdentifierDeclType	RListIter *		507498	0					
ANR	509377	Identifier	iter2		507498	1					
ANR	509378	IdentifierDeclStatement	struct dex_debug_position_t * position ;	725:1:18886:18923	507498	56	True				
ANR	509379	IdentifierDecl	* position		507498	0					
ANR	509380	IdentifierDeclType	struct dex_debug_position_t *		507498	0					
ANR	509381	Identifier	position		507498	1					
ANR	509382	ExpressionStatement	"rbin -> cb_printf ( ""      positions     :\\n"" )"	727:1:18927:18970	507498	57	True				
ANR	509383	CallExpression	"rbin -> cb_printf ( ""      positions     :\\n"" )"		507498	0					
ANR	509384	Callee	rbin -> cb_printf		507498	0					
ANR	509385	PtrMemberAccess	rbin -> cb_printf		507498	0					
ANR	509386	Identifier	rbin		507498	0					
ANR	509387	Identifier	cb_printf		507498	1					
ANR	509388	ArgumentList	"""      positions     :\\n"""		507498	1					
ANR	509389	Argument	"""      positions     :\\n"""		507498	0					
ANR	509390	PrimaryExpression	"""      positions     :\\n"""		507498	0					
ANR	509391	Statement	r_list_foreach	728:1:18973:18986	507498	58	True				
ANR	509392	Statement	(	728:16:18988:18988	507498	59	True				
ANR	509393	Statement	debug_positions	728:17:18989:19003	507498	60	True				
ANR	509394	Statement	","	728:32:19004:19004	507498	61	True				
ANR	509395	Statement	iter2	728:34:19006:19010	507498	62	True				
ANR	509396	Statement	","	728:39:19011:19011	507498	63	True				
ANR	509397	Statement	position	728:41:19013:19020	507498	64	True				
ANR	509398	Statement	)	728:49:19021:19021	507498	65	True				
ANR	509399	CompoundStatement		339:51:9243:9243	507498	66					
ANR	509400	Statement	rbin	729:2:19027:19030	507498	0	True				
ANR	509401	Statement	->	729:6:19031:19032	507498	1	True				
ANR	509402	Statement	cb_printf	729:8:19033:19041	507498	2	True				
ANR	509403	Statement	(	729:18:19043:19043	507498	3	True				
ANR	509404	Statement	"""        0x%04"""	729:19:19044:19058	507498	4	True				
ANR	509405	Statement	PFMT64x	729:34:19059:19065	507498	5	True				
ANR	509406	Statement	""" line=%llu\\n"""	729:41:19066:19079	507498	6	True				
ANR	509407	Statement	","	729:55:19080:19080	507498	7	True				
ANR	509408	Statement	position	730:5:19087:19094	507498	8	True				
ANR	509409	Statement	->	730:13:19095:19096	507498	9	True				
ANR	509410	Statement	address	730:15:19097:19103	507498	10	True				
ANR	509411	Statement	","	730:22:19104:19104	507498	11	True				
ANR	509412	Statement	position	730:24:19106:19113	507498	12	True				
ANR	509413	Statement	->	730:32:19114:19115	507498	13	True				
ANR	509414	Statement	line	730:34:19116:19119	507498	14	True				
ANR	509415	Statement	)	730:38:19120:19120	507498	15	True				
ANR	509416	ExpressionStatement		730:39:19121:19121	507498	16	True				
ANR	509417	ExpressionStatement	"rbin -> cb_printf ( ""      locals        :\\n"" )"	733:1:19128:19171	507498	67	True				
ANR	509418	CallExpression	"rbin -> cb_printf ( ""      locals        :\\n"" )"		507498	0					
ANR	509419	Callee	rbin -> cb_printf		507498	0					
ANR	509420	PtrMemberAccess	rbin -> cb_printf		507498	0					
ANR	509421	Identifier	rbin		507498	0					
ANR	509422	Identifier	cb_printf		507498	1					
ANR	509423	ArgumentList	"""      locals        :\\n"""		507498	1					
ANR	509424	Argument	"""      locals        :\\n"""		507498	0					
ANR	509425	PrimaryExpression	"""      locals        :\\n"""		507498	0					
ANR	509426	IdentifierDeclStatement	RListIter * iter3 ;	735:1:19175:19191	507498	68	True				
ANR	509427	IdentifierDecl	* iter3		507498	0					
ANR	509428	IdentifierDeclType	RListIter *		507498	0					
ANR	509429	Identifier	iter3		507498	1					
ANR	509430	IdentifierDeclStatement	struct dex_debug_local_t * local ;	736:1:19194:19225	507498	69	True				
ANR	509431	IdentifierDecl	* local		507498	0					
ANR	509432	IdentifierDeclType	struct dex_debug_local_t *		507498	0					
ANR	509433	Identifier	local		507498	1					
ANR	509434	Statement	r_list_foreach	737:1:19228:19241	507498	70	True				
ANR	509435	Statement	(	737:16:19243:19243	507498	71	True				
ANR	509436	Statement	emitted_debug_locals	737:17:19244:19263	507498	72	True				
ANR	509437	Statement	","	737:37:19264:19264	507498	73	True				
ANR	509438	Statement	iter3	737:39:19266:19270	507498	74	True				
ANR	509439	Statement	","	737:44:19271:19271	507498	75	True				
ANR	509440	Statement	local	737:46:19273:19277	507498	76	True				
ANR	509441	Statement	)	737:51:19278:19278	507498	77	True				
ANR	509442	CompoundStatement		348:53:9500:9500	507498	78					
ANR	509443	IfStatement	if ( local -> signature )		507498	0					
ANR	509444	Condition	local -> signature	738:6:19288:19303	507498	0	True				
ANR	509445	PtrMemberAccess	local -> signature		507498	0					
ANR	509446	Identifier	local		507498	0					
ANR	509447	Identifier	signature		507498	1					
ANR	509448	CompoundStatement		349:24:9526:9526	507498	1					
ANR	509449	ExpressionStatement	"rbin -> cb_printf ( ""        0x%04x - 0x%04x reg=%d %s %s %s\\n"" , local -> startAddress , local -> endAddress , local -> reg , local -> name , local -> descriptor , local -> signature )"	739:3:19311:19491	507498	0	True				
ANR	509450	CallExpression	"rbin -> cb_printf ( ""        0x%04x - 0x%04x reg=%d %s %s %s\\n"" , local -> startAddress , local -> endAddress , local -> reg , local -> name , local -> descriptor , local -> signature )"		507498	0					
ANR	509451	Callee	rbin -> cb_printf		507498	0					
ANR	509452	PtrMemberAccess	rbin -> cb_printf		507498	0					
ANR	509453	Identifier	rbin		507498	0					
ANR	509454	Identifier	cb_printf		507498	1					
ANR	509455	ArgumentList	"""        0x%04x - 0x%04x reg=%d %s %s %s\\n"""		507498	1					
ANR	509456	Argument	"""        0x%04x - 0x%04x reg=%d %s %s %s\\n"""		507498	0					
ANR	509457	PrimaryExpression	"""        0x%04x - 0x%04x reg=%d %s %s %s\\n"""		507498	0					
ANR	509458	Argument	local -> startAddress		507498	1					
ANR	509459	PtrMemberAccess	local -> startAddress		507498	0					
ANR	509460	Identifier	local		507498	0					
ANR	509461	Identifier	startAddress		507498	1					
ANR	509462	Argument	local -> endAddress		507498	2					
ANR	509463	PtrMemberAccess	local -> endAddress		507498	0					
ANR	509464	Identifier	local		507498	0					
ANR	509465	Identifier	endAddress		507498	1					
ANR	509466	Argument	local -> reg		507498	3					
ANR	509467	PtrMemberAccess	local -> reg		507498	0					
ANR	509468	Identifier	local		507498	0					
ANR	509469	Identifier	reg		507498	1					
ANR	509470	Argument	local -> name		507498	4					
ANR	509471	PtrMemberAccess	local -> name		507498	0					
ANR	509472	Identifier	local		507498	0					
ANR	509473	Identifier	name		507498	1					
ANR	509474	Argument	local -> descriptor		507498	5					
ANR	509475	PtrMemberAccess	local -> descriptor		507498	0					
ANR	509476	Identifier	local		507498	0					
ANR	509477	Identifier	descriptor		507498	1					
ANR	509478	Argument	local -> signature		507498	6					
ANR	509479	PtrMemberAccess	local -> signature		507498	0					
ANR	509480	Identifier	local		507498	0					
ANR	509481	Identifier	signature		507498	1					
ANR	509482	ElseStatement	else		507498	0					
ANR	509483	CompoundStatement		355:9:9722:9722	507498	0					
ANR	509484	ExpressionStatement	"rbin -> cb_printf ( ""        0x%04x - 0x%04x reg=%d %s %s\\n"" , local -> startAddress , local -> endAddress , local -> reg , local -> name , local -> descriptor )"	745:3:19507:19662	507498	0	True				
ANR	509485	CallExpression	"rbin -> cb_printf ( ""        0x%04x - 0x%04x reg=%d %s %s\\n"" , local -> startAddress , local -> endAddress , local -> reg , local -> name , local -> descriptor )"		507498	0					
ANR	509486	Callee	rbin -> cb_printf		507498	0					
ANR	509487	PtrMemberAccess	rbin -> cb_printf		507498	0					
ANR	509488	Identifier	rbin		507498	0					
ANR	509489	Identifier	cb_printf		507498	1					
ANR	509490	ArgumentList	"""        0x%04x - 0x%04x reg=%d %s %s\\n"""		507498	1					
ANR	509491	Argument	"""        0x%04x - 0x%04x reg=%d %s %s\\n"""		507498	0					
ANR	509492	PrimaryExpression	"""        0x%04x - 0x%04x reg=%d %s %s\\n"""		507498	0					
ANR	509493	Argument	local -> startAddress		507498	1					
ANR	509494	PtrMemberAccess	local -> startAddress		507498	0					
ANR	509495	Identifier	local		507498	0					
ANR	509496	Identifier	startAddress		507498	1					
ANR	509497	Argument	local -> endAddress		507498	2					
ANR	509498	PtrMemberAccess	local -> endAddress		507498	0					
ANR	509499	Identifier	local		507498	0					
ANR	509500	Identifier	endAddress		507498	1					
ANR	509501	Argument	local -> reg		507498	3					
ANR	509502	PtrMemberAccess	local -> reg		507498	0					
ANR	509503	Identifier	local		507498	0					
ANR	509504	Identifier	reg		507498	1					
ANR	509505	Argument	local -> name		507498	4					
ANR	509506	PtrMemberAccess	local -> name		507498	0					
ANR	509507	Identifier	local		507498	0					
ANR	509508	Identifier	name		507498	1					
ANR	509509	Argument	local -> descriptor		507498	5					
ANR	509510	PtrMemberAccess	local -> descriptor		507498	0					
ANR	509511	Identifier	local		507498	0					
ANR	509512	Identifier	descriptor		507498	1					
ANR	509513	ForStatement	for ( reg = 0 ; reg < regsz ; reg ++ )		507498	79					
ANR	509514	ForInit	reg = 0 ;	752:6:19678:19685	507498	0	True				
ANR	509515	AssignmentExpression	reg = 0		507498	0		=			
ANR	509516	Identifier	reg		507498	0					
ANR	509517	PrimaryExpression	0		507498	1					
ANR	509518	Condition	reg < regsz	752:15:19687:19697	507498	1	True				
ANR	509519	RelationalExpression	reg < regsz		507498	0		<			
ANR	509520	Identifier	reg		507498	0					
ANR	509521	Identifier	regsz		507498	1					
ANR	509522	PostIncDecOperationExpression	reg ++	752:28:19700:19704	507498	2	True				
ANR	509523	Identifier	reg		507498	0					
ANR	509524	IncDec	++		507498	1					
ANR	509525	CompoundStatement		363:35:9927:9927	507498	3					
ANR	509526	IfStatement	if ( ! debug_locals [ reg ] . name )		507498	0					
ANR	509527	Condition	! debug_locals [ reg ] . name	753:6:19715:19737	507498	0	True				
ANR	509528	UnaryOperationExpression	! debug_locals [ reg ] . name		507498	0					
ANR	509529	UnaryOperator	!		507498	0					
ANR	509530	MemberAccess	debug_locals [ reg ] . name		507498	1					
ANR	509531	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	509532	Identifier	debug_locals		507498	0					
ANR	509533	Identifier	reg		507498	1					
ANR	509534	Identifier	name		507498	1					
ANR	509535	CompoundStatement		364:31:9960:9960	507498	1					
ANR	509536	ContinueStatement	continue ;	754:3:19745:19753	507498	0	True				
ANR	509537	IfStatement	if ( debug_locals [ reg ] . live )		507498	1					
ANR	509538	Condition	debug_locals [ reg ] . live	756:6:19765:19786	507498	0	True				
ANR	509539	MemberAccess	debug_locals [ reg ] . live		507498	0					
ANR	509540	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	509541	Identifier	debug_locals		507498	0					
ANR	509542	Identifier	reg		507498	1					
ANR	509543	Identifier	live		507498	1					
ANR	509544	CompoundStatement		367:30:10009:10009	507498	1					
ANR	509545	IfStatement	if ( debug_locals [ reg ] . signature )		507498	0					
ANR	509546	Condition	debug_locals [ reg ] . signature	757:7:19798:19824	507498	0	True				
ANR	509547	MemberAccess	debug_locals [ reg ] . signature		507498	0					
ANR	509548	ArrayIndexing	debug_locals [ reg ]		507498	0					
ANR	509549	Identifier	debug_locals		507498	0					
ANR	509550	Identifier	reg		507498	1					
ANR	509551	Identifier	signature		507498	1					
ANR	509552	CompoundStatement		368:36:10047:10047	507498	1					
ANR	509553	Statement	rbin	758:4:19833:19836	507498	0	True				
ANR	509554	Statement	->	758:8:19837:19838	507498	1	True				
ANR	509555	Statement	cb_printf	758:10:19839:19847	507498	2	True				
ANR	509556	Statement	(	758:20:19849:19849	507498	3	True				
ANR	509557	Statement	"""        0x%04x - 0x%04x reg=%d %s %s """	759:5:19856:19894	507498	4	True				
ANR	509558	Statement	"""%s\\n"""	760:5:19901:19906	507498	5	True				
ANR	509559	Statement	","	760:11:19907:19907	507498	6	True				
ANR	509560	Statement	debug_locals	761:5:19914:19925	507498	7	True				
ANR	509561	Statement	[	761:17:19926:19926	507498	8	True				
ANR	509562	Statement	reg	761:18:19927:19929	507498	9	True				
ANR	509563	Statement	]	761:21:19930:19930	507498	10	True				
ANR	509564	Statement	.	761:22:19931:19931	507498	11	True				
ANR	509565	Statement	startAddress	761:23:19932:19943	507498	12	True				
ANR	509566	Statement	","	761:35:19944:19944	507498	13	True				
ANR	509567	Statement	insns_size	762:5:19951:19960	507498	14	True				
ANR	509568	Statement	","	762:15:19961:19961	507498	15	True				
ANR	509569	Statement	reg	762:17:19963:19965	507498	16	True				
ANR	509570	Statement	","	762:20:19966:19966	507498	17	True				
ANR	509571	Statement	debug_locals	762:22:19968:19979	507498	18	True				
ANR	509572	Statement	[	762:34:19980:19980	507498	19	True				
ANR	509573	Statement	reg	762:35:19981:19983	507498	20	True				
ANR	509574	Statement	]	762:38:19984:19984	507498	21	True				
ANR	509575	Statement	.	762:39:19985:19985	507498	22	True				
ANR	509576	Statement	name	762:40:19986:19989	507498	23	True				
ANR	509577	Statement	","	762:44:19990:19990	507498	24	True				
ANR	509578	Statement	debug_locals	763:5:19997:20008	507498	25	True				
ANR	509579	Statement	[	763:17:20009:20009	507498	26	True				
ANR	509580	Statement	reg	763:18:20010:20012	507498	27	True				
ANR	509581	Statement	]	763:21:20013:20013	507498	28	True				
ANR	509582	Statement	.	763:22:20014:20014	507498	29	True				
ANR	509583	Statement	descriptor	763:23:20015:20024	507498	30	True				
ANR	509584	Statement	","	763:33:20025:20025	507498	31	True				
ANR	509585	Statement	debug_locals	764:5:20032:20043	507498	32	True				
ANR	509586	Statement	[	764:17:20044:20044	507498	33	True				
ANR	509587	Statement	reg	764:18:20045:20047	507498	34	True				
ANR	509588	Statement	]	764:21:20048:20048	507498	35	True				
ANR	509589	Statement	.	764:22:20049:20049	507498	36	True				
ANR	509590	Statement	signature	764:23:20050:20058	507498	37	True				
ANR	509591	Statement	)	764:32:20059:20059	507498	38	True				
ANR	509592	ExpressionStatement		764:33:20060:20060	507498	39	True				
ANR	509593	ElseStatement	else		507498	0					
ANR	509594	CompoundStatement		376:10:10292:10292	507498	0					
ANR	509595	Statement	rbin	766:4:20078:20081	507498	0	True				
ANR	509596	Statement	->	766:8:20082:20083	507498	1	True				
ANR	509597	Statement	cb_printf	766:10:20084:20092	507498	2	True				
ANR	509598	Statement	(	766:20:20094:20094	507498	3	True				
ANR	509599	Statement	"""        0x%04x - 0x%04x reg=%d %s %s"""	767:5:20101:20138	507498	4	True				
ANR	509600	Statement	"""\\n"""	768:5:20145:20148	507498	5	True				
ANR	509601	Statement	","	768:9:20149:20149	507498	6	True				
ANR	509602	Statement	debug_locals	769:5:20156:20167	507498	7	True				
ANR	509603	Statement	[	769:17:20168:20168	507498	8	True				
ANR	509604	Statement	reg	769:18:20169:20171	507498	9	True				
ANR	509605	Statement	]	769:21:20172:20172	507498	10	True				
ANR	509606	Statement	.	769:22:20173:20173	507498	11	True				
ANR	509607	Statement	startAddress	769:23:20174:20185	507498	12	True				
ANR	509608	Statement	","	769:35:20186:20186	507498	13	True				
ANR	509609	Statement	insns_size	770:5:20193:20202	507498	14	True				
ANR	509610	Statement	","	770:15:20203:20203	507498	15	True				
ANR	509611	Statement	reg	770:17:20205:20207	507498	16	True				
ANR	509612	Statement	","	770:20:20208:20208	507498	17	True				
ANR	509613	Statement	debug_locals	770:22:20210:20221	507498	18	True				
ANR	509614	Statement	[	770:34:20222:20222	507498	19	True				
ANR	509615	Statement	reg	770:35:20223:20225	507498	20	True				
ANR	509616	Statement	]	770:38:20226:20226	507498	21	True				
ANR	509617	Statement	.	770:39:20227:20227	507498	22	True				
ANR	509618	Statement	name	770:40:20228:20231	507498	23	True				
ANR	509619	Statement	","	770:44:20232:20232	507498	24	True				
ANR	509620	Statement	debug_locals	771:5:20239:20250	507498	25	True				
ANR	509621	Statement	[	771:17:20251:20251	507498	26	True				
ANR	509622	Statement	reg	771:18:20252:20254	507498	27	True				
ANR	509623	Statement	]	771:21:20255:20255	507498	28	True				
ANR	509624	Statement	.	771:22:20256:20256	507498	29	True				
ANR	509625	Statement	descriptor	771:23:20257:20266	507498	30	True				
ANR	509626	Statement	)	771:33:20267:20267	507498	31	True				
ANR	509627	ExpressionStatement		771:34:20268:20268	507498	32	True				
ANR	509628	ExpressionStatement	free ( debug_positions )	775:1:20283:20305	507498	80	True				
ANR	509629	CallExpression	free ( debug_positions )		507498	0					
ANR	509630	Callee	free		507498	0					
ANR	509631	Identifier	free		507498	0					
ANR	509632	ArgumentList	debug_positions		507498	1					
ANR	509633	Argument	debug_positions		507498	0					
ANR	509634	Identifier	debug_positions		507498	0					
ANR	509635	ExpressionStatement	free ( debug_locals )	776:1:20308:20327	507498	81	True				
ANR	509636	CallExpression	free ( debug_locals )		507498	0					
ANR	509637	Callee	free		507498	0					
ANR	509638	Identifier	free		507498	0					
ANR	509639	ArgumentList	debug_locals		507498	1					
ANR	509640	Argument	debug_locals		507498	0					
ANR	509641	Identifier	debug_locals		507498	0					
ANR	509642	ExpressionStatement	free ( emitted_debug_locals )	777:1:20330:20357	507498	82	True				
ANR	509643	CallExpression	free ( emitted_debug_locals )		507498	0					
ANR	509644	Callee	free		507498	0					
ANR	509645	Identifier	free		507498	0					
ANR	509646	ArgumentList	emitted_debug_locals		507498	1					
ANR	509647	Argument	emitted_debug_locals		507498	0					
ANR	509648	Identifier	emitted_debug_locals		507498	0					
ANR	509649	ExpressionStatement	free ( params )	778:1:20360:20373	507498	83	True				
ANR	509650	CallExpression	free ( params )		507498	0					
ANR	509651	Callee	free		507498	0					
ANR	509652	Identifier	free		507498	0					
ANR	509653	ArgumentList	params		507498	1					
ANR	509654	Argument	params		507498	0					
ANR	509655	Identifier	params		507498	0					
ANR	509656	ExpressionStatement	free ( buf )	779:1:20376:20386	507498	84	True				
ANR	509657	CallExpression	free ( buf )		507498	0					
ANR	509658	Callee	free		507498	0					
ANR	509659	Identifier	free		507498	0					
ANR	509660	ArgumentList	buf		507498	1					
ANR	509661	Argument	buf		507498	0					
ANR	509662	Identifier	buf		507498	0					
ANR	509663	ReturnType	static void		507498	1					
ANR	509664	Identifier	dex_parse_debug_item		507498	2					
ANR	509665	ParameterList	"RBinFile * bf , RBinDexObj * bin , RBinDexClass * c , int MI , int MA , int paddr , int ins_size , int insns_size , char * class_name , int regsz , int debug_info_off"		507498	3					
ANR	509666	Parameter	RBinFile * bf	387:33:9607:9618	507498	0	True				
ANR	509667	ParameterType	RBinFile *		507498	0					
ANR	509668	Identifier	bf		507498	1					
ANR	509669	Parameter	RBinDexObj * bin	387:47:9621:9635	507498	1	True				
ANR	509670	ParameterType	RBinDexObj *		507498	0					
ANR	509671	Identifier	bin		507498	1					
ANR	509672	Parameter	RBinDexClass * c	388:6:9644:9658	507498	2	True				
ANR	509673	ParameterType	RBinDexClass *		507498	0					
ANR	509674	Identifier	c		507498	1					
ANR	509675	Parameter	int MI	388:23:9661:9666	507498	3	True				
ANR	509676	ParameterType	int		507498	0					
ANR	509677	Identifier	MI		507498	1					
ANR	509678	Parameter	int MA	388:31:9669:9674	507498	4	True				
ANR	509679	ParameterType	int		507498	0					
ANR	509680	Identifier	MA		507498	1					
ANR	509681	Parameter	int paddr	388:39:9677:9685	507498	5	True				
ANR	509682	ParameterType	int		507498	0					
ANR	509683	Identifier	paddr		507498	1					
ANR	509684	Parameter	int ins_size	388:50:9688:9699	507498	6	True				
ANR	509685	ParameterType	int		507498	0					
ANR	509686	Identifier	ins_size		507498	1					
ANR	509687	Parameter	int insns_size	389:6:9708:9721	507498	7	True				
ANR	509688	ParameterType	int		507498	0					
ANR	509689	Identifier	insns_size		507498	1					
ANR	509690	Parameter	char * class_name	389:22:9724:9739	507498	8	True				
ANR	509691	ParameterType	char *		507498	0					
ANR	509692	Identifier	class_name		507498	1					
ANR	509693	Parameter	int regsz	389:40:9742:9750	507498	9	True				
ANR	509694	ParameterType	int		507498	0					
ANR	509695	Identifier	regsz		507498	1					
ANR	509696	Parameter	int debug_info_off	390:6:9759:9776	507498	10	True				
ANR	509697	ParameterType	int		507498	0					
ANR	509698	Identifier	debug_info_off		507498	1					
ANR	509699	CFGEntryNode	ENTRY		507498		True				
ANR	509700	CFGExitNode	EXIT		507498		True				
ANR	509701	CFGErrorNode	ERROR		507498		True				
ANR	509702	Symbol	& param_type_idx		507498						
ANR	509703	Symbol	* ( p4 ++ )		507498						
ANR	509704	Symbol	rbindwardrow -> file		507498						
ANR	509705	Symbol	bin		507498						
ANR	509706	Symbol	dex -> lines_list		507498						
ANR	509707	Symbol	type		507498						
ANR	509708	Symbol	& source_file_idx		507498						
ANR	509709	Symbol	bf -> o		507498						
ANR	509710	Symbol	bf -> buf		507498						
ANR	509711	Symbol	dex		507498						
ANR	509712	Symbol	debug_locals [ argReg ] . name		507498						
ANR	509713	Symbol	line_start		507498						
ANR	509714	Symbol	rbindwardrow -> address		507498						
ANR	509715	Symbol	parameters_size		507498						
ANR	509716	Symbol	local -> descriptor		507498						
ANR	509717	Symbol	& register_num		507498						
ANR	509718	Symbol	r_list_newf		507498						
ANR	509719	Symbol	iter		507498						
ANR	509720	Symbol	params		507498						
ANR	509721	Symbol	debug_locals [ argReg ] . descriptor		507498						
ANR	509722	Symbol	R_NEW0		507498						
ANR	509723	Symbol	position -> line		507498						
ANR	509724	Symbol	pos -> line		507498						
ANR	509725	Symbol	paddr		507498						
ANR	509726	Symbol	sdb_itoa		507498						
ANR	509727	Symbol	local -> name		507498						
ANR	509728	Symbol	position -> source_file_idx		507498						
ANR	509729	Symbol	RBinDwarfRow		507498						
ANR	509730	Symbol	r_uleb128		507498						
ANR	509731	Symbol	c -> source_file		507498						
ANR	509732	Symbol	sig_idx		507498						
ANR	509733	Symbol	* pos		507498						
ANR	509734	Symbol	fileline		507498						
ANR	509735	Symbol	bf		507498						
ANR	509736	Symbol	ins_size		507498						
ANR	509737	Symbol	debug_locals [ argReg ] . signature		507498						
ANR	509738	Symbol	debug_locals [ reg ] . signature		507498						
ANR	509739	Symbol	bf -> rbin		507498						
ANR	509740	Symbol	local		507498						
ANR	509741	Symbol	* bf -> o		507498						
ANR	509742	Symbol	pos		507498						
ANR	509743	Symbol	addr_diff		507498						
ANR	509744	Symbol	free		507498						
ANR	509745	Symbol	adjusted_opcode		507498						
ANR	509746	Symbol	class_name		507498						
ANR	509747	Symbol	debug_locals [ argReg ] . startAddress		507498						
ANR	509748	Symbol	local -> endAddress		507498						
ANR	509749	Symbol	debug_locals [ register_num ] . startAddress		507498						
ANR	509750	Symbol	rbin		507498						
ANR	509751	Symbol	* name		507498						
ANR	509752	Symbol	malloc		507498						
ANR	509753	Symbol	sdb_new0		507498						
ANR	509754	Symbol	c		507498						
ANR	509755	Symbol	address		507498						
ANR	509756	Symbol	debug_locals [ reg ] . live		507498						
ANR	509757	Symbol	rbindwardrow		507498						
ANR	509758	Symbol	offset_ptr		507498						
ANR	509759	Symbol	* debug_locals		507498						
ANR	509760	Symbol	* rbindwardrow		507498						
ANR	509761	Symbol	buf		507498						
ANR	509762	Symbol	* position		507498						
ANR	509763	Symbol	* local		507498						
ANR	509764	Symbol	pos -> source_file_idx		507498						
ANR	509765	Symbol	debug_locals		507498						
ANR	509766	Symbol	debug_locals [ register_num ] . signature		507498						
ANR	509767	Symbol	param_type_idx		507498						
ANR	509768	Symbol	r_buf_size		507498						
ANR	509769	Symbol	* dex		507498						
ANR	509770	Symbol	debug_locals [ reg ] . startAddress		507498						
ANR	509771	Symbol	local -> reg		507498						
ANR	509772	Symbol	debug_locals [ reg ] . name		507498						
ANR	509773	Symbol	r_sleb128		507498						
ANR	509774	Symbol	* line		507498						
ANR	509775	Symbol	opcode		507498						
ANR	509776	Symbol	local -> startAddress		507498						
ANR	509777	Symbol	type_idx		507498						
ANR	509778	Symbol	regsz		507498						
ANR	509779	Symbol	rbindwardrow -> line		507498						
ANR	509780	Symbol	emitted_debug_locals		507498						
ANR	509781	Symbol	getstr		507498						
ANR	509782	Symbol	MA		507498						
ANR	509783	Symbol	reg		507498						
ANR	509784	Symbol	local -> live		507498						
ANR	509785	Symbol	dexdump		507498						
ANR	509786	Symbol	line_diff		507498						
ANR	509787	Symbol	position -> address		507498						
ANR	509788	Symbol	MI		507498						
ANR	509789	Symbol	* argReg		507498						
ANR	509790	Symbol	argReg		507498						
ANR	509791	Symbol	NULL		507498						
ANR	509792	Symbol	debug_locals [ register_num ] . name		507498						
ANR	509793	Symbol	offset		507498						
ANR	509794	Symbol	pos -> address		507498						
ANR	509795	Symbol	buf_size		507498						
ANR	509796	Symbol	dex_type_descriptor		507498						
ANR	509797	Symbol	debug_info_off		507498						
ANR	509798	Symbol	source_file_idx		507498						
ANR	509799	Symbol	& line_start		507498						
ANR	509800	Symbol	* * bf		507498						
ANR	509801	Symbol	name_idx		507498						
ANR	509802	Symbol	& parameters_size		507498						
ANR	509803	Symbol	keep		507498						
ANR	509804	Symbol	true		507498						
ANR	509805	Symbol	dex_method_signature2		507498						
ANR	509806	Symbol	name		507498						
ANR	509807	Symbol	position		507498						
ANR	509808	Symbol	debug_locals [ register_num ] . live		507498						
ANR	509809	Symbol	insns_size		507498						
ANR	509810	Symbol	p4		507498						
ANR	509811	Symbol	line		507498						
ANR	509812	Symbol	p4_end		507498						
ANR	509813	Symbol	calloc		507498						
ANR	509814	Symbol	r_str_newf		507498						
ANR	509815	Symbol	bf -> sdb_addrinfo		507498						
ANR	509816	Symbol	register_num		507498						
ANR	509817	Symbol	* type		507498						
ANR	509818	Symbol	& type_idx		507498						
ANR	509819	Symbol	* register_num		507498						
ANR	509820	Symbol	bf -> o -> bin_obj		507498						
ANR	509821	Symbol	debug_locals [ reg ] . descriptor		507498						
ANR	509822	Symbol	iter1		507498						
ANR	509823	Symbol	iter3		507498						
ANR	509824	Symbol	local -> signature		507498						
ANR	509825	Symbol	iter2		507498						
ANR	509826	Symbol	false		507498						
ANR	509827	Symbol	* bf		507498						
ANR	509828	Symbol	debug_locals [ register_num ] . descriptor		507498						
ANR	509829	Symbol	debug_positions		507498						
ANR	509830	Symbol	& sig_idx		507498						
ANR	509831	Symbol	* c		507498						
ANR	509832	Symbol	& name_idx		507498						
ANR	509833	Symbol	& p4		507498						
ANR	509834	Symbol	debug_locals [ argReg ] . live		507498						
ANR	509835	Symbol	strdup		507498						
ANR	509836	Symbol	& addr_diff		507498						
ANR	509837	Symbol	* reg		507498						
ANR	509838	Function	get_sdb	782:0:20391:20583							
ANR	509839	FunctionDef	get_sdb (RBinFile * bf)		509838	0					
ANR	509840	CompoundStatement		782:35:20426:20583	509838	0					
ANR	509841	IdentifierDeclStatement	RBinObject * o = bf -> o ;	783:1:20429:20450	509838	0	True				
ANR	509842	IdentifierDecl	* o = bf -> o		509838	0					
ANR	509843	IdentifierDeclType	RBinObject *		509838	0					
ANR	509844	Identifier	o		509838	1					
ANR	509845	AssignmentExpression	* o = bf -> o		509838	2		=			
ANR	509846	Identifier	o		509838	0					
ANR	509847	PtrMemberAccess	bf -> o		509838	1					
ANR	509848	Identifier	bf		509838	0					
ANR	509849	Identifier	o		509838	1					
ANR	509850	IfStatement	if ( ! o || ! o -> bin_obj )		509838	1					
ANR	509851	Condition	! o || ! o -> bin_obj	784:5:20457:20473	509838	0	True				
ANR	509852	OrExpression	! o || ! o -> bin_obj		509838	0		||			
ANR	509853	UnaryOperationExpression	! o		509838	0					
ANR	509854	UnaryOperator	!		509838	0					
ANR	509855	Identifier	o		509838	1					
ANR	509856	UnaryOperationExpression	! o -> bin_obj		509838	1					
ANR	509857	UnaryOperator	!		509838	0					
ANR	509858	PtrMemberAccess	o -> bin_obj		509838	1					
ANR	509859	Identifier	o		509838	0					
ANR	509860	Identifier	bin_obj		509838	1					
ANR	509861	CompoundStatement		3:24:49:49	509838	1					
ANR	509862	ReturnStatement	return NULL ;	785:2:20480:20491	509838	0	True				
ANR	509863	Identifier	NULL		509838	0					
ANR	509864	IdentifierDeclStatement	struct r_bin_dex_obj_t * bin = ( struct r_bin_dex_obj_t * ) o -> bin_obj ;	787:1:20497:20564	509838	2	True				
ANR	509865	IdentifierDecl	* bin = ( struct r_bin_dex_obj_t * ) o -> bin_obj		509838	0					
ANR	509866	IdentifierDeclType	struct r_bin_dex_obj_t *		509838	0					
ANR	509867	Identifier	bin		509838	1					
ANR	509868	AssignmentExpression	* bin = ( struct r_bin_dex_obj_t * ) o -> bin_obj		509838	2		=			
ANR	509869	Identifier	bin		509838	0					
ANR	509870	CastExpression	( struct r_bin_dex_obj_t * ) o -> bin_obj		509838	1					
ANR	509871	CastTarget	struct r_bin_dex_obj_t *		509838	0					
ANR	509872	PtrMemberAccess	o -> bin_obj		509838	1					
ANR	509873	Identifier	o		509838	0					
ANR	509874	Identifier	bin_obj		509838	1					
ANR	509875	ReturnStatement	return bin -> kv ;	788:1:20567:20581	509838	3	True				
ANR	509876	PtrMemberAccess	bin -> kv		509838	0					
ANR	509877	Identifier	bin		509838	0					
ANR	509878	Identifier	kv		509838	1					
ANR	509879	ReturnType	static Sdb *		509838	1					
ANR	509880	Identifier	get_sdb		509838	2					
ANR	509881	ParameterList	RBinFile * bf		509838	3					
ANR	509882	Parameter	RBinFile * bf	782:21:20412:20423	509838	0	True				
ANR	509883	ParameterType	RBinFile *		509838	0					
ANR	509884	Identifier	bf		509838	1					
ANR	509885	CFGEntryNode	ENTRY		509838		True				
ANR	509886	CFGExitNode	EXIT		509838		True				
ANR	509887	Symbol	NULL		509838						
ANR	509888	Symbol	bf		509838						
ANR	509889	Symbol	bf -> o		509838						
ANR	509890	Symbol	bin		509838						
ANR	509891	Symbol	* bf		509838						
ANR	509892	Symbol	* o		509838						
ANR	509893	Symbol	o -> bin_obj		509838						
ANR	509894	Symbol	bin -> kv		509838						
ANR	509895	Symbol	* bin		509838						
ANR	509896	Symbol	o		509838						
ANR	509897	Function	load_buffer	791:0:20586:20744							
ANR	509898	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb)"		509897	0					
ANR	509899	CompoundStatement		791:93:20679:20744	509897	0					
ANR	509900	ExpressionStatement	* bin_obj = r_bin_dex_new_buf ( buf )	792:1:20682:20716	509897	0	True				
ANR	509901	AssignmentExpression	* bin_obj = r_bin_dex_new_buf ( buf )		509897	0		=			
ANR	509902	UnaryOperationExpression	* bin_obj		509897	0					
ANR	509903	UnaryOperator	*		509897	0					
ANR	509904	Identifier	bin_obj		509897	1					
ANR	509905	CallExpression	r_bin_dex_new_buf ( buf )		509897	1					
ANR	509906	Callee	r_bin_dex_new_buf		509897	0					
ANR	509907	Identifier	r_bin_dex_new_buf		509897	0					
ANR	509908	ArgumentList	buf		509897	1					
ANR	509909	Argument	buf		509897	0					
ANR	509910	Identifier	buf		509897	0					
ANR	509911	ReturnStatement	return * bin_obj != NULL ;	793:1:20719:20742	509897	1	True				
ANR	509912	EqualityExpression	* bin_obj != NULL		509897	0		!=			
ANR	509913	UnaryOperationExpression	* bin_obj		509897	0					
ANR	509914	UnaryOperator	*		509897	0					
ANR	509915	Identifier	bin_obj		509897	1					
ANR	509916	Identifier	NULL		509897	1					
ANR	509917	ReturnType	static bool		509897	1					
ANR	509918	Identifier	load_buffer		509897	2					
ANR	509919	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb"		509897	3					
ANR	509920	Parameter	RBinFile * bf	791:24:20610:20621	509897	0	True				
ANR	509921	ParameterType	RBinFile *		509897	0					
ANR	509922	Identifier	bf		509897	1					
ANR	509923	Parameter	void * * bin_obj	791:38:20624:20637	509897	1	True				
ANR	509924	ParameterType	void * *		509897	0					
ANR	509925	Identifier	bin_obj		509897	1					
ANR	509926	Parameter	RBuffer * buf	791:54:20640:20651	509897	2	True				
ANR	509927	ParameterType	RBuffer *		509897	0					
ANR	509928	Identifier	buf		509897	1					
ANR	509929	Parameter	ut64 loadaddr	791:68:20654:20666	509897	3	True				
ANR	509930	ParameterType	ut64		509897	0					
ANR	509931	Identifier	loadaddr		509897	1					
ANR	509932	Parameter	Sdb * sdb	791:83:20669:20676	509897	4	True				
ANR	509933	ParameterType	Sdb *		509897	0					
ANR	509934	Identifier	sdb		509897	1					
ANR	509935	CFGEntryNode	ENTRY		509897		True				
ANR	509936	CFGExitNode	EXIT		509897		True				
ANR	509937	Symbol	loadaddr		509897						
ANR	509938	Symbol	sdb		509897						
ANR	509939	Symbol	buf		509897						
ANR	509940	Symbol	* bin_obj		509897						
ANR	509941	Symbol	NULL		509897						
ANR	509942	Symbol	bf		509897						
ANR	509943	Symbol	bin_obj		509897						
ANR	509944	Symbol	r_bin_dex_new_buf		509897						
ANR	509945	Function	baddr	796:0:20747:20792							
ANR	509946	FunctionDef	baddr (RBinFile * bf)		509945	0					
ANR	509947	CompoundStatement		796:32:20779:20792	509945	0					
ANR	509948	ReturnStatement	return 0 ;	797:1:20782:20790	509945	0	True				
ANR	509949	PrimaryExpression	0		509945	0					
ANR	509950	ReturnType	static ut64		509945	1					
ANR	509951	Identifier	baddr		509945	2					
ANR	509952	ParameterList	RBinFile * bf		509945	3					
ANR	509953	Parameter	RBinFile * bf	796:18:20765:20776	509945	0	True				
ANR	509954	ParameterType	RBinFile *		509945	0					
ANR	509955	Identifier	bf		509945	1					
ANR	509956	CFGEntryNode	ENTRY		509945		True				
ANR	509957	CFGExitNode	EXIT		509945		True				
ANR	509958	Symbol	bf		509945						
ANR	509959	Function	check_buffer	800:0:20795:21562							
ANR	509960	FunctionDef	check_buffer (RBuffer * buf)		509959	0					
ANR	509961	CompoundStatement		800:39:20834:21562	509959	0					
ANR	509962	IdentifierDeclStatement	ut8 tmp [ 8 ] ;	801:1:20837:20847	509959	0	True				
ANR	509963	IdentifierDecl	tmp [ 8 ]		509959	0					
ANR	509964	IdentifierDeclType	ut8 [ 8 ]		509959	0					
ANR	509965	Identifier	tmp		509959	1					
ANR	509966	PrimaryExpression	8		509959	2					
ANR	509967	IdentifierDeclStatement	"int r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) ) ;"	802:1:20850:20899	509959	1	True				
ANR	509968	IdentifierDecl	"r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		509959	0					
ANR	509969	IdentifierDeclType	int		509959	0					
ANR	509970	Identifier	r		509959	1					
ANR	509971	AssignmentExpression	"r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		509959	2		=			
ANR	509972	Identifier	r		509959	0					
ANR	509973	CallExpression	"r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		509959	1					
ANR	509974	Callee	r_buf_read_at		509959	0					
ANR	509975	Identifier	r_buf_read_at		509959	0					
ANR	509976	ArgumentList	buf		509959	1					
ANR	509977	Argument	buf		509959	0					
ANR	509978	Identifier	buf		509959	0					
ANR	509979	Argument	0		509959	1					
ANR	509980	PrimaryExpression	0		509959	0					
ANR	509981	Argument	tmp		509959	2					
ANR	509982	Identifier	tmp		509959	0					
ANR	509983	Argument	sizeof ( tmp )		509959	3					
ANR	509984	SizeofExpression	sizeof ( tmp )		509959	0					
ANR	509985	Sizeof	sizeof		509959	0					
ANR	509986	SizeofOperand	tmp		509959	1					
ANR	509987	IfStatement	if ( r < sizeof ( tmp ) )		509959	2					
ANR	509988	Condition	r < sizeof ( tmp )	803:5:20906:20921	509959	0	True				
ANR	509989	RelationalExpression	r < sizeof ( tmp )		509959	0		<			
ANR	509990	Identifier	r		509959	0					
ANR	509991	SizeofExpression	sizeof ( tmp )		509959	1					
ANR	509992	Sizeof	sizeof		509959	0					
ANR	509993	SizeofOperand	tmp		509959	1					
ANR	509994	CompoundStatement		4:23:89:89	509959	1					
ANR	509995	ReturnStatement	return false ;	804:2:20928:20940	509959	0	True				
ANR	509996	Identifier	false		509959	0					
ANR	509997	IfStatement	"if ( ! memcmp ( tmp , ""dex\\n035\\0"" , 8 ) )"		509959	3					
ANR	509998	Condition	"! memcmp ( tmp , ""dex\\n035\\0"" , 8 )"	807:5:20983:21012	509959	0	True				
ANR	509999	UnaryOperationExpression	"! memcmp ( tmp , ""dex\\n035\\0"" , 8 )"		509959	0					
ANR	510000	UnaryOperator	!		509959	0					
ANR	510001	CallExpression	"memcmp ( tmp , ""dex\\n035\\0"" , 8 )"		509959	1					
ANR	510002	Callee	memcmp		509959	0					
ANR	510003	Identifier	memcmp		509959	0					
ANR	510004	ArgumentList	tmp		509959	1					
ANR	510005	Argument	tmp		509959	0					
ANR	510006	Identifier	tmp		509959	0					
ANR	510007	Argument	"""dex\\n035\\0"""		509959	1					
ANR	510008	PrimaryExpression	"""dex\\n035\\0"""		509959	0					
ANR	510009	Argument	8		509959	2					
ANR	510010	PrimaryExpression	8		509959	0					
ANR	510011	CompoundStatement		8:37:180:180	509959	1					
ANR	510012	ReturnStatement	return true ;	808:2:21019:21030	509959	0	True				
ANR	510013	Identifier	true		509959	0					
ANR	510014	IfStatement	"if ( ! memcmp ( tmp , ""dex\\n036\\0"" , 8 ) )"		509959	4					
ANR	510015	Condition	"! memcmp ( tmp , ""dex\\n036\\0"" , 8 )"	811:5:21105:21134	509959	0	True				
ANR	510016	UnaryOperationExpression	"! memcmp ( tmp , ""dex\\n036\\0"" , 8 )"		509959	0					
ANR	510017	UnaryOperator	!		509959	0					
ANR	510018	CallExpression	"memcmp ( tmp , ""dex\\n036\\0"" , 8 )"		509959	1					
ANR	510019	Callee	memcmp		509959	0					
ANR	510020	Identifier	memcmp		509959	0					
ANR	510021	ArgumentList	tmp		509959	1					
ANR	510022	Argument	tmp		509959	0					
ANR	510023	Identifier	tmp		509959	0					
ANR	510024	Argument	"""dex\\n036\\0"""		509959	1					
ANR	510025	PrimaryExpression	"""dex\\n036\\0"""		509959	0					
ANR	510026	Argument	8		509959	2					
ANR	510027	PrimaryExpression	8		509959	0					
ANR	510028	CompoundStatement		12:37:302:302	509959	1					
ANR	510029	ReturnStatement	return true ;	812:2:21141:21152	509959	0	True				
ANR	510030	Identifier	true		509959	0					
ANR	510031	IfStatement	"if ( ! memcmp ( tmp , ""dex\\n038\\0"" , 8 ) )"		509959	5					
ANR	510032	Condition	"! memcmp ( tmp , ""dex\\n038\\0"" , 8 )"	815:5:21236:21265	509959	0	True				
ANR	510033	UnaryOperationExpression	"! memcmp ( tmp , ""dex\\n038\\0"" , 8 )"		509959	0					
ANR	510034	UnaryOperator	!		509959	0					
ANR	510035	CallExpression	"memcmp ( tmp , ""dex\\n038\\0"" , 8 )"		509959	1					
ANR	510036	Callee	memcmp		509959	0					
ANR	510037	Identifier	memcmp		509959	0					
ANR	510038	ArgumentList	tmp		509959	1					
ANR	510039	Argument	tmp		509959	0					
ANR	510040	Identifier	tmp		509959	0					
ANR	510041	Argument	"""dex\\n038\\0"""		509959	1					
ANR	510042	PrimaryExpression	"""dex\\n038\\0"""		509959	0					
ANR	510043	Argument	8		509959	2					
ANR	510044	PrimaryExpression	8		509959	0					
ANR	510045	CompoundStatement		16:37:433:433	509959	1					
ANR	510046	ReturnStatement	return true ;	816:2:21272:21283	509959	0	True				
ANR	510047	Identifier	true		509959	0					
ANR	510048	IfStatement	"if ( ! memcmp ( tmp , ""dex\\n009\\0"" , 8 ) )"		509959	6					
ANR	510049	Condition	"! memcmp ( tmp , ""dex\\n009\\0"" , 8 )"	819:5:21313:21342	509959	0	True				
ANR	510050	UnaryOperationExpression	"! memcmp ( tmp , ""dex\\n009\\0"" , 8 )"		509959	0					
ANR	510051	UnaryOperator	!		509959	0					
ANR	510052	CallExpression	"memcmp ( tmp , ""dex\\n009\\0"" , 8 )"		509959	1					
ANR	510053	Callee	memcmp		509959	0					
ANR	510054	Identifier	memcmp		509959	0					
ANR	510055	ArgumentList	tmp		509959	1					
ANR	510056	Argument	tmp		509959	0					
ANR	510057	Identifier	tmp		509959	0					
ANR	510058	Argument	"""dex\\n009\\0"""		509959	1					
ANR	510059	PrimaryExpression	"""dex\\n009\\0"""		509959	0					
ANR	510060	Argument	8		509959	2					
ANR	510061	PrimaryExpression	8		509959	0					
ANR	510062	CompoundStatement		20:37:510:510	509959	1					
ANR	510063	ReturnStatement	return true ;	820:2:21349:21360	509959	0	True				
ANR	510064	Identifier	true		509959	0					
ANR	510065	IfStatement	"if ( ! memcmp ( tmp , ""dex\\n009\\0"" , 8 ) )"		509959	7					
ANR	510066	Condition	"! memcmp ( tmp , ""dex\\n009\\0"" , 8 )"	823:5:21390:21419	509959	0	True				
ANR	510067	UnaryOperationExpression	"! memcmp ( tmp , ""dex\\n009\\0"" , 8 )"		509959	0					
ANR	510068	UnaryOperator	!		509959	0					
ANR	510069	CallExpression	"memcmp ( tmp , ""dex\\n009\\0"" , 8 )"		509959	1					
ANR	510070	Callee	memcmp		509959	0					
ANR	510071	Identifier	memcmp		509959	0					
ANR	510072	ArgumentList	tmp		509959	1					
ANR	510073	Argument	tmp		509959	0					
ANR	510074	Identifier	tmp		509959	0					
ANR	510075	Argument	"""dex\\n009\\0"""		509959	1					
ANR	510076	PrimaryExpression	"""dex\\n009\\0"""		509959	0					
ANR	510077	Argument	8		509959	2					
ANR	510078	PrimaryExpression	8		509959	0					
ANR	510079	CompoundStatement		24:37:587:587	509959	1					
ANR	510080	ReturnStatement	return true ;	824:2:21426:21437	509959	0	True				
ANR	510081	Identifier	true		509959	0					
ANR	510082	IfStatement	"if ( ! memcmp ( tmp , ""dex\\n"" , 4 ) )"		509959	8					
ANR	510083	Condition	"! memcmp ( tmp , ""dex\\n"" , 4 )"	827:5:21500:21524	509959	0	True				
ANR	510084	UnaryOperationExpression	"! memcmp ( tmp , ""dex\\n"" , 4 )"		509959	0					
ANR	510085	UnaryOperator	!		509959	0					
ANR	510086	CallExpression	"memcmp ( tmp , ""dex\\n"" , 4 )"		509959	1					
ANR	510087	Callee	memcmp		509959	0					
ANR	510088	Identifier	memcmp		509959	0					
ANR	510089	ArgumentList	tmp		509959	1					
ANR	510090	Argument	tmp		509959	0					
ANR	510091	Identifier	tmp		509959	0					
ANR	510092	Argument	"""dex\\n"""		509959	1					
ANR	510093	PrimaryExpression	"""dex\\n"""		509959	0					
ANR	510094	Argument	4		509959	2					
ANR	510095	PrimaryExpression	4		509959	0					
ANR	510096	CompoundStatement		28:32:692:692	509959	1					
ANR	510097	ReturnStatement	return true ;	828:2:21531:21542	509959	0	True				
ANR	510098	Identifier	true		509959	0					
ANR	510099	ReturnStatement	return false ;	830:1:21548:21560	509959	9	True				
ANR	510100	Identifier	false		509959	0					
ANR	510101	ReturnType	static bool		509959	1					
ANR	510102	Identifier	check_buffer		509959	2					
ANR	510103	ParameterList	RBuffer * buf		509959	3					
ANR	510104	Parameter	RBuffer * buf	800:25:20820:20831	509959	0	True				
ANR	510105	ParameterType	RBuffer *		509959	0					
ANR	510106	Identifier	buf		509959	1					
ANR	510107	CFGEntryNode	ENTRY		509959		True				
ANR	510108	CFGExitNode	EXIT		509959		True				
ANR	510109	Symbol	buf		509959						
ANR	510110	Symbol	r		509959						
ANR	510111	Symbol	memcmp		509959						
ANR	510112	Symbol	tmp		509959						
ANR	510113	Symbol	r_buf_read_at		509959						
ANR	510114	Symbol	false		509959						
ANR	510115	Symbol	true		509959						
ANR	510116	Function	info	833:0:21565:22891							
ANR	510117	FunctionDef	info (RBinFile * bf)		510116	0					
ANR	510118	CompoundStatement		833:36:21601:22891	510116	0					
ANR	510119	IdentifierDeclStatement	RBinHash * h ;	834:1:21604:21615	510116	0	True				
ANR	510120	IdentifierDecl	* h		510116	0					
ANR	510121	IdentifierDeclType	RBinHash *		510116	0					
ANR	510122	Identifier	h		510116	1					
ANR	510123	IdentifierDeclStatement	RBinInfo * ret = R_NEW0 ( RBinInfo ) ;	835:1:21618:21651	510116	1	True				
ANR	510124	IdentifierDecl	* ret = R_NEW0 ( RBinInfo )		510116	0					
ANR	510125	IdentifierDeclType	RBinInfo *		510116	0					
ANR	510126	Identifier	ret		510116	1					
ANR	510127	AssignmentExpression	* ret = R_NEW0 ( RBinInfo )		510116	2		=			
ANR	510128	Identifier	ret		510116	0					
ANR	510129	CallExpression	R_NEW0 ( RBinInfo )		510116	1					
ANR	510130	Callee	R_NEW0		510116	0					
ANR	510131	Identifier	R_NEW0		510116	0					
ANR	510132	ArgumentList	RBinInfo		510116	1					
ANR	510133	Argument	RBinInfo		510116	0					
ANR	510134	Identifier	RBinInfo		510116	0					
ANR	510135	IfStatement	if ( ! ret )		510116	2					
ANR	510136	Condition	! ret	836:5:21658:21661	510116	0	True				
ANR	510137	UnaryOperationExpression	! ret		510116	0					
ANR	510138	UnaryOperator	!		510116	0					
ANR	510139	Identifier	ret		510116	1					
ANR	510140	CompoundStatement		4:11:62:62	510116	1					
ANR	510141	ReturnStatement	return NULL ;	837:2:21668:21679	510116	0	True				
ANR	510142	Identifier	NULL		510116	0					
ANR	510143	ExpressionStatement	ret -> file = bf -> file ? strdup ( bf -> file ) : NULL	839:1:21685:21730	510116	3	True				
ANR	510144	AssignmentExpression	ret -> file = bf -> file ? strdup ( bf -> file ) : NULL		510116	0		=			
ANR	510145	PtrMemberAccess	ret -> file		510116	0					
ANR	510146	Identifier	ret		510116	0					
ANR	510147	Identifier	file		510116	1					
ANR	510148	ConditionalExpression	bf -> file ? strdup ( bf -> file ) : NULL		510116	1					
ANR	510149	Condition	bf -> file		510116	0					
ANR	510150	PtrMemberAccess	bf -> file		510116	0					
ANR	510151	Identifier	bf		510116	0					
ANR	510152	Identifier	file		510116	1					
ANR	510153	CallExpression	strdup ( bf -> file )		510116	1					
ANR	510154	Callee	strdup		510116	0					
ANR	510155	Identifier	strdup		510116	0					
ANR	510156	ArgumentList	bf -> file		510116	1					
ANR	510157	Argument	bf -> file		510116	0					
ANR	510158	PtrMemberAccess	bf -> file		510116	0					
ANR	510159	Identifier	bf		510116	0					
ANR	510160	Identifier	file		510116	1					
ANR	510161	Identifier	NULL		510116	2					
ANR	510162	ExpressionStatement	"ret -> type = strdup ( ""DEX CLASS"" )"	840:1:21733:21765	510116	4	True				
ANR	510163	AssignmentExpression	"ret -> type = strdup ( ""DEX CLASS"" )"		510116	0		=			
ANR	510164	PtrMemberAccess	ret -> type		510116	0					
ANR	510165	Identifier	ret		510116	0					
ANR	510166	Identifier	type		510116	1					
ANR	510167	CallExpression	"strdup ( ""DEX CLASS"" )"		510116	1					
ANR	510168	Callee	strdup		510116	0					
ANR	510169	Identifier	strdup		510116	0					
ANR	510170	ArgumentList	"""DEX CLASS"""		510116	1					
ANR	510171	Argument	"""DEX CLASS"""		510116	0					
ANR	510172	PrimaryExpression	"""DEX CLASS"""		510116	0					
ANR	510173	ExpressionStatement	ret -> has_va = true	841:1:21768:21786	510116	5	True				
ANR	510174	AssignmentExpression	ret -> has_va = true		510116	0		=			
ANR	510175	PtrMemberAccess	ret -> has_va		510116	0					
ANR	510176	Identifier	ret		510116	0					
ANR	510177	Identifier	has_va		510116	1					
ANR	510178	Identifier	true		510116	1					
ANR	510179	ExpressionStatement	ret -> has_lit = true	842:1:21789:21808	510116	6	True				
ANR	510180	AssignmentExpression	ret -> has_lit = true		510116	0		=			
ANR	510181	PtrMemberAccess	ret -> has_lit		510116	0					
ANR	510182	Identifier	ret		510116	0					
ANR	510183	Identifier	has_lit		510116	1					
ANR	510184	Identifier	true		510116	1					
ANR	510185	ExpressionStatement	ret -> bclass = r_bin_dex_get_version ( bf -> o -> bin_obj )	843:1:21811:21863	510116	7	True				
ANR	510186	AssignmentExpression	ret -> bclass = r_bin_dex_get_version ( bf -> o -> bin_obj )		510116	0		=			
ANR	510187	PtrMemberAccess	ret -> bclass		510116	0					
ANR	510188	Identifier	ret		510116	0					
ANR	510189	Identifier	bclass		510116	1					
ANR	510190	CallExpression	r_bin_dex_get_version ( bf -> o -> bin_obj )		510116	1					
ANR	510191	Callee	r_bin_dex_get_version		510116	0					
ANR	510192	Identifier	r_bin_dex_get_version		510116	0					
ANR	510193	ArgumentList	bf -> o -> bin_obj		510116	1					
ANR	510194	Argument	bf -> o -> bin_obj		510116	0					
ANR	510195	PtrMemberAccess	bf -> o -> bin_obj		510116	0					
ANR	510196	PtrMemberAccess	bf -> o		510116	0					
ANR	510197	Identifier	bf		510116	0					
ANR	510198	Identifier	o		510116	1					
ANR	510199	Identifier	bin_obj		510116	1					
ANR	510200	ExpressionStatement	"ret -> rclass = strdup ( ""class"" )"	844:1:21866:21896	510116	8	True				
ANR	510201	AssignmentExpression	"ret -> rclass = strdup ( ""class"" )"		510116	0		=			
ANR	510202	PtrMemberAccess	ret -> rclass		510116	0					
ANR	510203	Identifier	ret		510116	0					
ANR	510204	Identifier	rclass		510116	1					
ANR	510205	CallExpression	"strdup ( ""class"" )"		510116	1					
ANR	510206	Callee	strdup		510116	0					
ANR	510207	Identifier	strdup		510116	0					
ANR	510208	ArgumentList	"""class"""		510116	1					
ANR	510209	Argument	"""class"""		510116	0					
ANR	510210	PrimaryExpression	"""class"""		510116	0					
ANR	510211	ExpressionStatement	"ret -> os = strdup ( ""linux"" )"	845:1:21899:21925	510116	9	True				
ANR	510212	AssignmentExpression	"ret -> os = strdup ( ""linux"" )"		510116	0		=			
ANR	510213	PtrMemberAccess	ret -> os		510116	0					
ANR	510214	Identifier	ret		510116	0					
ANR	510215	Identifier	os		510116	1					
ANR	510216	CallExpression	"strdup ( ""linux"" )"		510116	1					
ANR	510217	Callee	strdup		510116	0					
ANR	510218	Identifier	strdup		510116	0					
ANR	510219	ArgumentList	"""linux"""		510116	1					
ANR	510220	Argument	"""linux"""		510116	0					
ANR	510221	PrimaryExpression	"""linux"""		510116	0					
ANR	510222	ExpressionStatement	"ret -> subsystem = strdup ( dexSubsystem ? dexSubsystem : ""java"" )"	846:1:21928:21988	510116	10	True				
ANR	510223	AssignmentExpression	"ret -> subsystem = strdup ( dexSubsystem ? dexSubsystem : ""java"" )"		510116	0		=			
ANR	510224	PtrMemberAccess	ret -> subsystem		510116	0					
ANR	510225	Identifier	ret		510116	0					
ANR	510226	Identifier	subsystem		510116	1					
ANR	510227	CallExpression	"strdup ( dexSubsystem ? dexSubsystem : ""java"" )"		510116	1					
ANR	510228	Callee	strdup		510116	0					
ANR	510229	Identifier	strdup		510116	0					
ANR	510230	ArgumentList	"dexSubsystem ? dexSubsystem : ""java"""		510116	1					
ANR	510231	Argument	"dexSubsystem ? dexSubsystem : ""java"""		510116	0					
ANR	510232	ConditionalExpression	"dexSubsystem ? dexSubsystem : ""java"""		510116	0					
ANR	510233	Condition	dexSubsystem		510116	0					
ANR	510234	Identifier	dexSubsystem		510116	0					
ANR	510235	Identifier	dexSubsystem		510116	1					
ANR	510236	PrimaryExpression	"""java"""		510116	2					
ANR	510237	ExpressionStatement	"ret -> machine = strdup ( ""Dalvik VM"" )"	847:1:21991:22026	510116	11	True				
ANR	510238	AssignmentExpression	"ret -> machine = strdup ( ""Dalvik VM"" )"		510116	0		=			
ANR	510239	PtrMemberAccess	ret -> machine		510116	0					
ANR	510240	Identifier	ret		510116	0					
ANR	510241	Identifier	machine		510116	1					
ANR	510242	CallExpression	"strdup ( ""Dalvik VM"" )"		510116	1					
ANR	510243	Callee	strdup		510116	0					
ANR	510244	Identifier	strdup		510116	0					
ANR	510245	ArgumentList	"""Dalvik VM"""		510116	1					
ANR	510246	Argument	"""Dalvik VM"""		510116	0					
ANR	510247	PrimaryExpression	"""Dalvik VM"""		510116	0					
ANR	510248	ExpressionStatement	h = & ret -> sum [ 0 ]	848:1:22029:22045	510116	12	True				
ANR	510249	AssignmentExpression	h = & ret -> sum [ 0 ]		510116	0		=			
ANR	510250	Identifier	h		510116	0					
ANR	510251	UnaryOperationExpression	& ret -> sum [ 0 ]		510116	1					
ANR	510252	UnaryOperator	&		510116	0					
ANR	510253	ArrayIndexing	ret -> sum [ 0 ]		510116	1					
ANR	510254	PtrMemberAccess	ret -> sum		510116	0					
ANR	510255	Identifier	ret		510116	0					
ANR	510256	Identifier	sum		510116	1					
ANR	510257	PrimaryExpression	0		510116	1					
ANR	510258	ExpressionStatement	"h -> type = ""sha1"""	849:1:22048:22064	510116	13	True				
ANR	510259	AssignmentExpression	"h -> type = ""sha1"""		510116	0		=			
ANR	510260	PtrMemberAccess	h -> type		510116	0					
ANR	510261	Identifier	h		510116	0					
ANR	510262	Identifier	type		510116	1					
ANR	510263	PrimaryExpression	"""sha1"""		510116	1					
ANR	510264	ExpressionStatement	h -> len = 20	850:1:22067:22078	510116	14	True				
ANR	510265	AssignmentExpression	h -> len = 20		510116	0		=			
ANR	510266	PtrMemberAccess	h -> len		510116	0					
ANR	510267	Identifier	h		510116	0					
ANR	510268	Identifier	len		510116	1					
ANR	510269	PrimaryExpression	20		510116	1					
ANR	510270	ExpressionStatement	h -> addr = 12	851:1:22081:22093	510116	15	True				
ANR	510271	AssignmentExpression	h -> addr = 12		510116	0		=			
ANR	510272	PtrMemberAccess	h -> addr		510116	0					
ANR	510273	Identifier	h		510116	0					
ANR	510274	Identifier	addr		510116	1					
ANR	510275	PrimaryExpression	12		510116	1					
ANR	510276	ExpressionStatement	h -> from = 12	852:1:22096:22108	510116	16	True				
ANR	510277	AssignmentExpression	h -> from = 12		510116	0		=			
ANR	510278	PtrMemberAccess	h -> from		510116	0					
ANR	510279	Identifier	h		510116	0					
ANR	510280	Identifier	from		510116	1					
ANR	510281	PrimaryExpression	12		510116	1					
ANR	510282	ExpressionStatement	h -> to = r_buf_size ( bf -> buf ) - 32	853:1:22111:22144	510116	17	True				
ANR	510283	AssignmentExpression	h -> to = r_buf_size ( bf -> buf ) - 32		510116	0		=			
ANR	510284	PtrMemberAccess	h -> to		510116	0					
ANR	510285	Identifier	h		510116	0					
ANR	510286	Identifier	to		510116	1					
ANR	510287	AdditiveExpression	r_buf_size ( bf -> buf ) - 32		510116	1		-			
ANR	510288	CallExpression	r_buf_size ( bf -> buf )		510116	0					
ANR	510289	Callee	r_buf_size		510116	0					
ANR	510290	Identifier	r_buf_size		510116	0					
ANR	510291	ArgumentList	bf -> buf		510116	1					
ANR	510292	Argument	bf -> buf		510116	0					
ANR	510293	PtrMemberAccess	bf -> buf		510116	0					
ANR	510294	Identifier	bf		510116	0					
ANR	510295	Identifier	buf		510116	1					
ANR	510296	PrimaryExpression	32		510116	1					
ANR	510297	ExpressionStatement	"r_buf_read_at ( bf -> buf , 12 , h -> buf , 20 )"	854:1:22147:22186	510116	18	True				
ANR	510298	CallExpression	"r_buf_read_at ( bf -> buf , 12 , h -> buf , 20 )"		510116	0					
ANR	510299	Callee	r_buf_read_at		510116	0					
ANR	510300	Identifier	r_buf_read_at		510116	0					
ANR	510301	ArgumentList	bf -> buf		510116	1					
ANR	510302	Argument	bf -> buf		510116	0					
ANR	510303	PtrMemberAccess	bf -> buf		510116	0					
ANR	510304	Identifier	bf		510116	0					
ANR	510305	Identifier	buf		510116	1					
ANR	510306	Argument	12		510116	1					
ANR	510307	PrimaryExpression	12		510116	0					
ANR	510308	Argument	h -> buf		510116	2					
ANR	510309	PtrMemberAccess	h -> buf		510116	0					
ANR	510310	Identifier	h		510116	0					
ANR	510311	Identifier	buf		510116	1					
ANR	510312	Argument	20		510116	3					
ANR	510313	PrimaryExpression	20		510116	0					
ANR	510314	ExpressionStatement	h = & ret -> sum [ 1 ]	855:1:22189:22205	510116	19	True				
ANR	510315	AssignmentExpression	h = & ret -> sum [ 1 ]		510116	0		=			
ANR	510316	Identifier	h		510116	0					
ANR	510317	UnaryOperationExpression	& ret -> sum [ 1 ]		510116	1					
ANR	510318	UnaryOperator	&		510116	0					
ANR	510319	ArrayIndexing	ret -> sum [ 1 ]		510116	1					
ANR	510320	PtrMemberAccess	ret -> sum		510116	0					
ANR	510321	Identifier	ret		510116	0					
ANR	510322	Identifier	sum		510116	1					
ANR	510323	PrimaryExpression	1		510116	1					
ANR	510324	ExpressionStatement	"h -> type = ""adler32"""	856:1:22208:22227	510116	20	True				
ANR	510325	AssignmentExpression	"h -> type = ""adler32"""		510116	0		=			
ANR	510326	PtrMemberAccess	h -> type		510116	0					
ANR	510327	Identifier	h		510116	0					
ANR	510328	Identifier	type		510116	1					
ANR	510329	PrimaryExpression	"""adler32"""		510116	1					
ANR	510330	ExpressionStatement	h -> len = 4	857:1:22230:22240	510116	21	True				
ANR	510331	AssignmentExpression	h -> len = 4		510116	0		=			
ANR	510332	PtrMemberAccess	h -> len		510116	0					
ANR	510333	Identifier	h		510116	0					
ANR	510334	Identifier	len		510116	1					
ANR	510335	PrimaryExpression	4		510116	1					
ANR	510336	ExpressionStatement	h -> addr = 0x8	858:1:22243:22256	510116	22	True				
ANR	510337	AssignmentExpression	h -> addr = 0x8		510116	0		=			
ANR	510338	PtrMemberAccess	h -> addr		510116	0					
ANR	510339	Identifier	h		510116	0					
ANR	510340	Identifier	addr		510116	1					
ANR	510341	PrimaryExpression	0x8		510116	1					
ANR	510342	ExpressionStatement	h -> from = 12	859:1:22259:22271	510116	23	True				
ANR	510343	AssignmentExpression	h -> from = 12		510116	0		=			
ANR	510344	PtrMemberAccess	h -> from		510116	0					
ANR	510345	Identifier	h		510116	0					
ANR	510346	Identifier	from		510116	1					
ANR	510347	PrimaryExpression	12		510116	1					
ANR	510348	ExpressionStatement	h -> to = r_buf_size ( bf -> buf ) - h -> from	860:1:22274:22312	510116	24	True				
ANR	510349	AssignmentExpression	h -> to = r_buf_size ( bf -> buf ) - h -> from		510116	0		=			
ANR	510350	PtrMemberAccess	h -> to		510116	0					
ANR	510351	Identifier	h		510116	0					
ANR	510352	Identifier	to		510116	1					
ANR	510353	AdditiveExpression	r_buf_size ( bf -> buf ) - h -> from		510116	1		-			
ANR	510354	CallExpression	r_buf_size ( bf -> buf )		510116	0					
ANR	510355	Callee	r_buf_size		510116	0					
ANR	510356	Identifier	r_buf_size		510116	0					
ANR	510357	ArgumentList	bf -> buf		510116	1					
ANR	510358	Argument	bf -> buf		510116	0					
ANR	510359	PtrMemberAccess	bf -> buf		510116	0					
ANR	510360	Identifier	bf		510116	0					
ANR	510361	Identifier	buf		510116	1					
ANR	510362	PtrMemberAccess	h -> from		510116	1					
ANR	510363	Identifier	h		510116	0					
ANR	510364	Identifier	from		510116	1					
ANR	510365	ExpressionStatement	h = & ret -> sum [ 2 ]	861:1:22315:22331	510116	25	True				
ANR	510366	AssignmentExpression	h = & ret -> sum [ 2 ]		510116	0		=			
ANR	510367	Identifier	h		510116	0					
ANR	510368	UnaryOperationExpression	& ret -> sum [ 2 ]		510116	1					
ANR	510369	UnaryOperator	&		510116	0					
ANR	510370	ArrayIndexing	ret -> sum [ 2 ]		510116	1					
ANR	510371	PtrMemberAccess	ret -> sum		510116	0					
ANR	510372	Identifier	ret		510116	0					
ANR	510373	Identifier	sum		510116	1					
ANR	510374	PrimaryExpression	2		510116	1					
ANR	510375	ExpressionStatement	h -> type = 0	862:1:22334:22345	510116	26	True				
ANR	510376	AssignmentExpression	h -> type = 0		510116	0		=			
ANR	510377	PtrMemberAccess	h -> type		510116	0					
ANR	510378	Identifier	h		510116	0					
ANR	510379	Identifier	type		510116	1					
ANR	510380	PrimaryExpression	0		510116	1					
ANR	510381	ExpressionStatement	"r_buf_read_at ( bf -> buf , 8 , h -> buf , 4 )"	863:1:22348:22385	510116	27	True				
ANR	510382	CallExpression	"r_buf_read_at ( bf -> buf , 8 , h -> buf , 4 )"		510116	0					
ANR	510383	Callee	r_buf_read_at		510116	0					
ANR	510384	Identifier	r_buf_read_at		510116	0					
ANR	510385	ArgumentList	bf -> buf		510116	1					
ANR	510386	Argument	bf -> buf		510116	0					
ANR	510387	PtrMemberAccess	bf -> buf		510116	0					
ANR	510388	Identifier	bf		510116	0					
ANR	510389	Identifier	buf		510116	1					
ANR	510390	Argument	8		510116	1					
ANR	510391	PrimaryExpression	8		510116	0					
ANR	510392	Argument	h -> buf		510116	2					
ANR	510393	PtrMemberAccess	h -> buf		510116	0					
ANR	510394	Identifier	h		510116	0					
ANR	510395	Identifier	buf		510116	1					
ANR	510396	Argument	4		510116	3					
ANR	510397	PrimaryExpression	4		510116	0					
ANR	510398	CompoundStatement		36:2:898:940	510116	28					
ANR	510399	IdentifierDeclStatement	"ut32 fc = r_buf_read_le32_at ( bf -> buf , 8 ) ;"	865:2:22392:22433	510116	0	True				
ANR	510400	IdentifierDecl	"fc = r_buf_read_le32_at ( bf -> buf , 8 )"		510116	0					
ANR	510401	IdentifierDeclType	ut32		510116	0					
ANR	510402	Identifier	fc		510116	1					
ANR	510403	AssignmentExpression	"fc = r_buf_read_le32_at ( bf -> buf , 8 )"		510116	2		=			
ANR	510404	Identifier	fc		510116	0					
ANR	510405	CallExpression	"r_buf_read_le32_at ( bf -> buf , 8 )"		510116	1					
ANR	510406	Callee	r_buf_read_le32_at		510116	0					
ANR	510407	Identifier	r_buf_read_le32_at		510116	0					
ANR	510408	ArgumentList	bf -> buf		510116	1					
ANR	510409	Argument	bf -> buf		510116	0					
ANR	510410	PtrMemberAccess	bf -> buf		510116	0					
ANR	510411	Identifier	bf		510116	0					
ANR	510412	Identifier	buf		510116	1					
ANR	510413	Argument	8		510116	1					
ANR	510414	PrimaryExpression	8		510116	0					
ANR	510415	IdentifierDeclStatement	ut64 tmpsz ;	866:2:22437:22447	510116	1	True				
ANR	510416	IdentifierDecl	tmpsz		510116	0					
ANR	510417	IdentifierDeclType	ut64		510116	0					
ANR	510418	Identifier	tmpsz		510116	1					
ANR	510419	IdentifierDeclStatement	"const ut8 * tmp = r_buf_data ( bf -> buf , & tmpsz ) ;"	867:2:22451:22496	510116	2	True				
ANR	510420	IdentifierDecl	"* tmp = r_buf_data ( bf -> buf , & tmpsz )"		510116	0					
ANR	510421	IdentifierDeclType	const ut8 *		510116	0					
ANR	510422	Identifier	tmp		510116	1					
ANR	510423	AssignmentExpression	"* tmp = r_buf_data ( bf -> buf , & tmpsz )"		510116	2		=			
ANR	510424	Identifier	tmp		510116	0					
ANR	510425	CallExpression	"r_buf_data ( bf -> buf , & tmpsz )"		510116	1					
ANR	510426	Callee	r_buf_data		510116	0					
ANR	510427	Identifier	r_buf_data		510116	0					
ANR	510428	ArgumentList	bf -> buf		510116	1					
ANR	510429	Argument	bf -> buf		510116	0					
ANR	510430	PtrMemberAccess	bf -> buf		510116	0					
ANR	510431	Identifier	bf		510116	0					
ANR	510432	Identifier	buf		510116	1					
ANR	510433	Argument	& tmpsz		510116	1					
ANR	510434	UnaryOperationExpression	& tmpsz		510116	0					
ANR	510435	UnaryOperator	&		510116	0					
ANR	510436	Identifier	tmpsz		510116	1					
ANR	510437	IdentifierDeclStatement	"ut32 cc = __adler32 ( tmp + 12 , tmpsz - 12 ) ;"	868:2:22500:22542	510116	3	True				
ANR	510438	IdentifierDecl	"cc = __adler32 ( tmp + 12 , tmpsz - 12 )"		510116	0					
ANR	510439	IdentifierDeclType	ut32		510116	0					
ANR	510440	Identifier	cc		510116	1					
ANR	510441	AssignmentExpression	"cc = __adler32 ( tmp + 12 , tmpsz - 12 )"		510116	2		=			
ANR	510442	Identifier	cc		510116	0					
ANR	510443	CallExpression	"__adler32 ( tmp + 12 , tmpsz - 12 )"		510116	1					
ANR	510444	Callee	__adler32		510116	0					
ANR	510445	Identifier	__adler32		510116	0					
ANR	510446	ArgumentList	tmp + 12		510116	1					
ANR	510447	Argument	tmp + 12		510116	0					
ANR	510448	AdditiveExpression	tmp + 12		510116	0		+			
ANR	510449	Identifier	tmp		510116	0					
ANR	510450	PrimaryExpression	12		510116	1					
ANR	510451	Argument	tmpsz - 12		510116	1					
ANR	510452	AdditiveExpression	tmpsz - 12		510116	0		-			
ANR	510453	Identifier	tmpsz		510116	0					
ANR	510454	PrimaryExpression	12		510116	1					
ANR	510455	IfStatement	if ( fc != cc )		510116	4					
ANR	510456	Condition	fc != cc	869:6:22550:22557	510116	0	True				
ANR	510457	EqualityExpression	fc != cc		510116	0		!=			
ANR	510458	Identifier	fc		510116	0					
ANR	510459	Identifier	cc		510116	1					
ANR	510460	CompoundStatement		37:16:958:958	510116	1					
ANR	510461	ExpressionStatement	"eprintf ( ""# adler32 checksum doesn't match. Type this to fix it:\\n"" )"	870:3:22565:22633	510116	0	True				
ANR	510462	CallExpression	"eprintf ( ""# adler32 checksum doesn't match. Type this to fix it:\\n"" )"		510116	0					
ANR	510463	Callee	eprintf		510116	0					
ANR	510464	Identifier	eprintf		510116	0					
ANR	510465	ArgumentList	"""# adler32 checksum doesn't match. Type this to fix it:\\n"""		510116	1					
ANR	510466	Argument	"""# adler32 checksum doesn't match. Type this to fix it:\\n"""		510116	0					
ANR	510467	PrimaryExpression	"""# adler32 checksum doesn't match. Type this to fix it:\\n"""		510116	0					
ANR	510468	ExpressionStatement	"eprintf ( ""wx `ph sha1 $s-32 @32` @12 ; wx `ph adler32 $s-12 @12` @8\\n"" )"	871:3:22638:22709	510116	1	True				
ANR	510469	CallExpression	"eprintf ( ""wx `ph sha1 $s-32 @32` @12 ; wx `ph adler32 $s-12 @12` @8\\n"" )"		510116	0					
ANR	510470	Callee	eprintf		510116	0					
ANR	510471	Identifier	eprintf		510116	0					
ANR	510472	ArgumentList	"""wx `ph sha1 $s-32 @32` @12 ; wx `ph adler32 $s-12 @12` @8\\n"""		510116	1					
ANR	510473	Argument	"""wx `ph sha1 $s-32 @32` @12 ; wx `ph adler32 $s-12 @12` @8\\n"""		510116	0					
ANR	510474	PrimaryExpression	"""wx `ph sha1 $s-32 @32` @12 ; wx `ph adler32 $s-12 @12` @8\\n"""		510116	0					
ANR	510475	ExpressionStatement	"ret -> arch = strdup ( ""dalvik"" )"	874:1:22719:22748	510116	29	True				
ANR	510476	AssignmentExpression	"ret -> arch = strdup ( ""dalvik"" )"		510116	0		=			
ANR	510477	PtrMemberAccess	ret -> arch		510116	0					
ANR	510478	Identifier	ret		510116	0					
ANR	510479	Identifier	arch		510116	1					
ANR	510480	CallExpression	"strdup ( ""dalvik"" )"		510116	1					
ANR	510481	Callee	strdup		510116	0					
ANR	510482	Identifier	strdup		510116	0					
ANR	510483	ArgumentList	"""dalvik"""		510116	1					
ANR	510484	Argument	"""dalvik"""		510116	0					
ANR	510485	PrimaryExpression	"""dalvik"""		510116	0					
ANR	510486	ExpressionStatement	"ret -> lang = ""dalvik"""	875:1:22751:22771	510116	30	True				
ANR	510487	AssignmentExpression	"ret -> lang = ""dalvik"""		510116	0		=			
ANR	510488	PtrMemberAccess	ret -> lang		510116	0					
ANR	510489	Identifier	ret		510116	0					
ANR	510490	Identifier	lang		510116	1					
ANR	510491	PrimaryExpression	"""dalvik"""		510116	1					
ANR	510492	ExpressionStatement	ret -> bits = 32	876:1:22774:22788	510116	31	True				
ANR	510493	AssignmentExpression	ret -> bits = 32		510116	0		=			
ANR	510494	PtrMemberAccess	ret -> bits		510116	0					
ANR	510495	Identifier	ret		510116	0					
ANR	510496	Identifier	bits		510116	1					
ANR	510497	PrimaryExpression	32		510116	1					
ANR	510498	ExpressionStatement	ret -> big_endian = 0	877:1:22791:22810	510116	32	True				
ANR	510499	AssignmentExpression	ret -> big_endian = 0		510116	0		=			
ANR	510500	PtrMemberAccess	ret -> big_endian		510116	0					
ANR	510501	Identifier	ret		510116	0					
ANR	510502	Identifier	big_endian		510116	1					
ANR	510503	PrimaryExpression	0		510116	1					
ANR	510504	ExpressionStatement	ret -> dbg_info = 0	878:1:22813:22830	510116	33	True				
ANR	510505	AssignmentExpression	ret -> dbg_info = 0		510116	0		=			
ANR	510506	PtrMemberAccess	ret -> dbg_info		510116	0					
ANR	510507	Identifier	ret		510116	0					
ANR	510508	Identifier	dbg_info		510116	1					
ANR	510509	PrimaryExpression	0		510116	1					
ANR	510510	ReturnStatement	return ret ;	879:1:22879:22889	510116	34	True				
ANR	510511	Identifier	ret		510116	0					
ANR	510512	ReturnType	static RBinInfo *		510116	1					
ANR	510513	Identifier	info		510116	2					
ANR	510514	ParameterList	RBinFile * bf		510116	3					
ANR	510515	Parameter	RBinFile * bf	833:22:21587:21598	510116	0	True				
ANR	510516	ParameterType	RBinFile *		510116	0					
ANR	510517	Identifier	bf		510116	1					
ANR	510518	CFGEntryNode	ENTRY		510116		True				
ANR	510519	CFGExitNode	EXIT		510116		True				
ANR	510520	Symbol	ret -> big_endian		510116						
ANR	510521	Symbol	ret -> dbg_info		510116						
ANR	510522	Symbol	ret -> bclass		510116						
ANR	510523	Symbol	bf -> file		510116						
ANR	510524	Symbol	ret -> rclass		510116						
ANR	510525	Symbol	bf -> o		510116						
ANR	510526	Symbol	bf -> buf		510116						
ANR	510527	Symbol	tmp		510116						
ANR	510528	Symbol	& tmpsz		510116						
ANR	510529	Symbol	ret -> has_va		510116						
ANR	510530	Symbol	ret		510116						
ANR	510531	Symbol	ret -> os		510116						
ANR	510532	Symbol	h -> type		510116						
ANR	510533	Symbol	NULL		510116						
ANR	510534	Symbol	r_bin_dex_get_version		510116						
ANR	510535	Symbol	h -> from		510116						
ANR	510536	Symbol	h -> to		510116						
ANR	510537	Symbol	tmpsz		510116						
ANR	510538	Symbol	R_NEW0		510116						
ANR	510539	Symbol	* * bf		510116						
ANR	510540	Symbol	true		510116						
ANR	510541	Symbol	h -> buf		510116						
ANR	510542	Symbol	ret -> bits		510116						
ANR	510543	Symbol	ret -> file		510116						
ANR	510544	Symbol	fc		510116						
ANR	510545	Symbol	bf		510116						
ANR	510546	Symbol	ret -> subsystem		510116						
ANR	510547	Symbol	ret -> arch		510116						
ANR	510548	Symbol	* ret		510116						
ANR	510549	Symbol	ret -> lang		510116						
ANR	510550	Symbol	* bf -> o		510116						
ANR	510551	Symbol	ret -> has_lit		510116						
ANR	510552	Symbol	h -> len		510116						
ANR	510553	Symbol	r_buf_data		510116						
ANR	510554	Symbol	bf -> o -> bin_obj		510116						
ANR	510555	Symbol	h -> addr		510116						
ANR	510556	Symbol	cc		510116						
ANR	510557	Symbol	__adler32		510116						
ANR	510558	Symbol	h		510116						
ANR	510559	Symbol	* bf		510116						
ANR	510560	Symbol	ret -> machine		510116						
ANR	510561	Symbol	* h		510116						
ANR	510562	Symbol	r_buf_read_le32_at		510116						
ANR	510563	Symbol	RBinInfo		510116						
ANR	510564	Symbol	strdup		510116						
ANR	510565	Symbol	dexSubsystem		510116						
ANR	510566	Symbol	ret -> sum		510116						
ANR	510567	Symbol	ret -> type		510116						
ANR	510568	Symbol	r_buf_size		510116						
ANR	510569	Function	strings	882:0:22894:24397							
ANR	510570	FunctionDef	strings (RBinFile * bf)		510569	0					
ANR	510571	CompoundStatement		882:36:22930:24397	510569	0					
ANR	510572	ExpressionStatement	"r_return_val_if_fail ( bf && bf -> o , NULL )"	883:1:22933:22973	510569	0	True				
ANR	510573	CallExpression	"r_return_val_if_fail ( bf && bf -> o , NULL )"		510569	0					
ANR	510574	Callee	r_return_val_if_fail		510569	0					
ANR	510575	Identifier	r_return_val_if_fail		510569	0					
ANR	510576	ArgumentList	bf && bf -> o		510569	1					
ANR	510577	Argument	bf && bf -> o		510569	0					
ANR	510578	AndExpression	bf && bf -> o		510569	0		&&			
ANR	510579	Identifier	bf		510569	0					
ANR	510580	PtrMemberAccess	bf -> o		510569	1					
ANR	510581	Identifier	bf		510569	0					
ANR	510582	Identifier	o		510569	1					
ANR	510583	Argument	NULL		510569	1					
ANR	510584	Identifier	NULL		510569	0					
ANR	510585	IdentifierDeclStatement	RBinString * ptr = NULL ;	884:1:22976:22998	510569	1	True				
ANR	510586	IdentifierDecl	* ptr = NULL		510569	0					
ANR	510587	IdentifierDeclType	RBinString *		510569	0					
ANR	510588	Identifier	ptr		510569	1					
ANR	510589	AssignmentExpression	* ptr = NULL		510569	2		=			
ANR	510590	Identifier	NULL		510569	0					
ANR	510591	Identifier	NULL		510569	1					
ANR	510592	IdentifierDeclStatement	RList * ret = NULL ;	885:1:23001:23018	510569	2	True				
ANR	510593	IdentifierDecl	* ret = NULL		510569	0					
ANR	510594	IdentifierDeclType	RList *		510569	0					
ANR	510595	Identifier	ret		510569	1					
ANR	510596	AssignmentExpression	* ret = NULL		510569	2		=			
ANR	510597	Identifier	NULL		510569	0					
ANR	510598	Identifier	NULL		510569	1					
ANR	510599	IdentifierDeclStatement	"int i , len ;"	886:1:23021:23031	510569	3	True				
ANR	510600	IdentifierDecl	i		510569	0					
ANR	510601	IdentifierDeclType	int		510569	0					
ANR	510602	Identifier	i		510569	1					
ANR	510603	IdentifierDecl	len		510569	1					
ANR	510604	IdentifierDeclType	int		510569	0					
ANR	510605	Identifier	len		510569	1					
ANR	510606	IdentifierDeclStatement	ut8 buf [ 6 ] ;	887:1:23034:23044	510569	4	True				
ANR	510607	IdentifierDecl	buf [ 6 ]		510569	0					
ANR	510608	IdentifierDeclType	ut8 [ 6 ]		510569	0					
ANR	510609	Identifier	buf		510569	1					
ANR	510610	PrimaryExpression	6		510569	2					
ANR	510611	IdentifierDeclStatement	ut64 off ;	888:1:23047:23055	510569	5	True				
ANR	510612	IdentifierDecl	off		510569	0					
ANR	510613	IdentifierDeclType	ut64		510569	0					
ANR	510614	Identifier	off		510569	1					
ANR	510615	IdentifierDeclStatement	struct r_bin_dex_obj_t * bin = ( struct r_bin_dex_obj_t * ) bf -> o -> bin_obj ;	889:1:23058:23128	510569	6	True				
ANR	510616	IdentifierDecl	* bin = ( struct r_bin_dex_obj_t * ) bf -> o -> bin_obj		510569	0					
ANR	510617	IdentifierDeclType	struct r_bin_dex_obj_t *		510569	0					
ANR	510618	Identifier	bin		510569	1					
ANR	510619	AssignmentExpression	* bin = ( struct r_bin_dex_obj_t * ) bf -> o -> bin_obj		510569	2		=			
ANR	510620	Identifier	bin		510569	0					
ANR	510621	CastExpression	( struct r_bin_dex_obj_t * ) bf -> o -> bin_obj		510569	1					
ANR	510622	CastTarget	struct r_bin_dex_obj_t *		510569	0					
ANR	510623	PtrMemberAccess	bf -> o -> bin_obj		510569	1					
ANR	510624	PtrMemberAccess	bf -> o		510569	0					
ANR	510625	Identifier	bf		510569	0					
ANR	510626	Identifier	o		510569	1					
ANR	510627	Identifier	bin_obj		510569	1					
ANR	510628	IfStatement	if ( ! bin || ! bin -> strings )		510569	7					
ANR	510629	Condition	! bin || ! bin -> strings	890:5:23135:23155	510569	0	True				
ANR	510630	OrExpression	! bin || ! bin -> strings		510569	0		||			
ANR	510631	UnaryOperationExpression	! bin		510569	0					
ANR	510632	UnaryOperator	!		510569	0					
ANR	510633	Identifier	bin		510569	1					
ANR	510634	UnaryOperationExpression	! bin -> strings		510569	1					
ANR	510635	UnaryOperator	!		510569	0					
ANR	510636	PtrMemberAccess	bin -> strings		510569	1					
ANR	510637	Identifier	bin		510569	0					
ANR	510638	Identifier	strings		510569	1					
ANR	510639	CompoundStatement		9:28:227:227	510569	1					
ANR	510640	ReturnStatement	return NULL ;	891:2:23162:23173	510569	0	True				
ANR	510641	Identifier	NULL		510569	0					
ANR	510642	IfStatement	if ( bin -> header . strings_size > bin -> size )		510569	8					
ANR	510643	Condition	bin -> header . strings_size > bin -> size	893:5:23183:23218	510569	0	True				
ANR	510644	RelationalExpression	bin -> header . strings_size > bin -> size		510569	0		>			
ANR	510645	MemberAccess	bin -> header . strings_size		510569	0					
ANR	510646	PtrMemberAccess	bin -> header		510569	0					
ANR	510647	Identifier	bin		510569	0					
ANR	510648	Identifier	header		510569	1					
ANR	510649	Identifier	strings_size		510569	1					
ANR	510650	PtrMemberAccess	bin -> size		510569	1					
ANR	510651	Identifier	bin		510569	0					
ANR	510652	Identifier	size		510569	1					
ANR	510653	CompoundStatement		12:43:290:290	510569	1					
ANR	510654	ExpressionStatement	bin -> strings = NULL	894:2:23225:23244	510569	0	True				
ANR	510655	AssignmentExpression	bin -> strings = NULL		510569	0		=			
ANR	510656	PtrMemberAccess	bin -> strings		510569	0					
ANR	510657	Identifier	bin		510569	0					
ANR	510658	Identifier	strings		510569	1					
ANR	510659	Identifier	NULL		510569	1					
ANR	510660	ReturnStatement	return NULL ;	895:2:23248:23259	510569	1	True				
ANR	510661	Identifier	NULL		510569	0					
ANR	510662	IfStatement	if ( ! ( ret = r_list_newf ( free ) ) )		510569	9					
ANR	510663	Condition	! ( ret = r_list_newf ( free ) )	897:5:23269:23295	510569	0	True				
ANR	510664	UnaryOperationExpression	! ( ret = r_list_newf ( free ) )		510569	0					
ANR	510665	UnaryOperator	!		510569	0					
ANR	510666	AssignmentExpression	ret = r_list_newf ( free )		510569	1		=			
ANR	510667	Identifier	ret		510569	0					
ANR	510668	CallExpression	r_list_newf ( free )		510569	1					
ANR	510669	Callee	r_list_newf		510569	0					
ANR	510670	Identifier	r_list_newf		510569	0					
ANR	510671	ArgumentList	free		510569	1					
ANR	510672	Argument	free		510569	0					
ANR	510673	Identifier	free		510569	0					
ANR	510674	CompoundStatement		16:34:367:367	510569	1					
ANR	510675	ReturnStatement	return NULL ;	898:2:23302:23313	510569	0	True				
ANR	510676	Identifier	NULL		510569	0					
ANR	510677	ForStatement	for ( i = 0 ; i < bin -> header . strings_size ; i ++ )		510569	10					
ANR	510678	ForInit	i = 0 ;	900:6:23324:23329	510569	0	True				
ANR	510679	AssignmentExpression	i = 0		510569	0		=			
ANR	510680	Identifier	i		510569	0					
ANR	510681	PrimaryExpression	0		510569	1					
ANR	510682	Condition	i < bin -> header . strings_size	900:13:23331:23358	510569	1	True				
ANR	510683	RelationalExpression	i < bin -> header . strings_size		510569	0		<			
ANR	510684	Identifier	i		510569	0					
ANR	510685	MemberAccess	bin -> header . strings_size		510569	1					
ANR	510686	PtrMemberAccess	bin -> header		510569	0					
ANR	510687	Identifier	bin		510569	0					
ANR	510688	Identifier	header		510569	1					
ANR	510689	Identifier	strings_size		510569	1					
ANR	510690	PostIncDecOperationExpression	i ++	900:43:23361:23363	510569	2	True				
ANR	510691	Identifier	i		510569	0					
ANR	510692	IncDec	++		510569	1					
ANR	510693	CompoundStatement		19:48:435:435	510569	3					
ANR	510694	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinString ) ) )		510569	0					
ANR	510695	Condition	! ( ptr = R_NEW0 ( RBinString ) )	901:6:23374:23401	510569	0	True				
ANR	510696	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinString ) )		510569	0					
ANR	510697	UnaryOperator	!		510569	0					
ANR	510698	AssignmentExpression	ptr = R_NEW0 ( RBinString )		510569	1		=			
ANR	510699	Identifier	ptr		510569	0					
ANR	510700	CallExpression	R_NEW0 ( RBinString )		510569	1					
ANR	510701	Callee	R_NEW0		510569	0					
ANR	510702	Identifier	R_NEW0		510569	0					
ANR	510703	ArgumentList	RBinString		510569	1					
ANR	510704	Argument	RBinString		510569	0					
ANR	510705	Identifier	RBinString		510569	0					
ANR	510706	CompoundStatement		20:36:473:473	510569	1					
ANR	510707	BreakStatement	break ;	902:3:23409:23414	510569	0	True				
ANR	510708	IfStatement	if ( bin -> strings [ i ] > bin -> size || bin -> strings [ i ] + 6 > bin -> size )		510569	1					
ANR	510709	Condition	bin -> strings [ i ] > bin -> size || bin -> strings [ i ] + 6 > bin -> size	904:6:23426:23487	510569	0	True				
ANR	510710	OrExpression	bin -> strings [ i ] > bin -> size || bin -> strings [ i ] + 6 > bin -> size		510569	0		||			
ANR	510711	RelationalExpression	bin -> strings [ i ] > bin -> size		510569	0		>			
ANR	510712	ArrayIndexing	bin -> strings [ i ]		510569	0					
ANR	510713	PtrMemberAccess	bin -> strings		510569	0					
ANR	510714	Identifier	bin		510569	0					
ANR	510715	Identifier	strings		510569	1					
ANR	510716	Identifier	i		510569	1					
ANR	510717	PtrMemberAccess	bin -> size		510569	1					
ANR	510718	Identifier	bin		510569	0					
ANR	510719	Identifier	size		510569	1					
ANR	510720	RelationalExpression	bin -> strings [ i ] + 6 > bin -> size		510569	1		>			
ANR	510721	AdditiveExpression	bin -> strings [ i ] + 6		510569	0		+			
ANR	510722	ArrayIndexing	bin -> strings [ i ]		510569	0					
ANR	510723	PtrMemberAccess	bin -> strings		510569	0					
ANR	510724	Identifier	bin		510569	0					
ANR	510725	Identifier	strings		510569	1					
ANR	510726	Identifier	i		510569	1					
ANR	510727	PrimaryExpression	6		510569	1					
ANR	510728	PtrMemberAccess	bin -> size		510569	1					
ANR	510729	Identifier	bin		510569	0					
ANR	510730	Identifier	size		510569	1					
ANR	510731	CompoundStatement		23:70:559:559	510569	1					
ANR	510732	GotoStatement	goto out_error ;	905:3:23495:23509	510569	0	True				
ANR	510733	Identifier	out_error		510569	0					
ANR	510734	ExpressionStatement	"r_buf_read_at ( bin -> b , bin -> strings [ i ] , ( ut8 * ) & buf , 6 )"	907:2:23517:23571	510569	2	True				
ANR	510735	CallExpression	"r_buf_read_at ( bin -> b , bin -> strings [ i ] , ( ut8 * ) & buf , 6 )"		510569	0					
ANR	510736	Callee	r_buf_read_at		510569	0					
ANR	510737	Identifier	r_buf_read_at		510569	0					
ANR	510738	ArgumentList	bin -> b		510569	1					
ANR	510739	Argument	bin -> b		510569	0					
ANR	510740	PtrMemberAccess	bin -> b		510569	0					
ANR	510741	Identifier	bin		510569	0					
ANR	510742	Identifier	b		510569	1					
ANR	510743	Argument	bin -> strings [ i ]		510569	1					
ANR	510744	ArrayIndexing	bin -> strings [ i ]		510569	0					
ANR	510745	PtrMemberAccess	bin -> strings		510569	0					
ANR	510746	Identifier	bin		510569	0					
ANR	510747	Identifier	strings		510569	1					
ANR	510748	Identifier	i		510569	1					
ANR	510749	Argument	( ut8 * ) & buf		510569	2					
ANR	510750	CastExpression	( ut8 * ) & buf		510569	0					
ANR	510751	CastTarget	ut8 *		510569	0					
ANR	510752	UnaryOperationExpression	& buf		510569	1					
ANR	510753	UnaryOperator	&		510569	0					
ANR	510754	Identifier	buf		510569	1					
ANR	510755	Argument	6		510569	3					
ANR	510756	PrimaryExpression	6		510569	0					
ANR	510757	ExpressionStatement	"len = dex_read_uleb128 ( buf , sizeof ( buf ) )"	908:2:23575:23617	510569	3	True				
ANR	510758	AssignmentExpression	"len = dex_read_uleb128 ( buf , sizeof ( buf ) )"		510569	0		=			
ANR	510759	Identifier	len		510569	0					
ANR	510760	CallExpression	"dex_read_uleb128 ( buf , sizeof ( buf ) )"		510569	1					
ANR	510761	Callee	dex_read_uleb128		510569	0					
ANR	510762	Identifier	dex_read_uleb128		510569	0					
ANR	510763	ArgumentList	buf		510569	1					
ANR	510764	Argument	buf		510569	0					
ANR	510765	Identifier	buf		510569	0					
ANR	510766	Argument	sizeof ( buf )		510569	1					
ANR	510767	SizeofExpression	sizeof ( buf )		510569	0					
ANR	510768	Sizeof	sizeof		510569	0					
ANR	510769	SizeofOperand	buf		510569	1					
ANR	510770	IfStatement	if ( len > 5 && len < R_BIN_SIZEOF_STRINGS )		510569	4					
ANR	510771	Condition	len > 5 && len < R_BIN_SIZEOF_STRINGS	910:6:23626:23662	510569	0	True				
ANR	510772	AndExpression	len > 5 && len < R_BIN_SIZEOF_STRINGS		510569	0		&&			
ANR	510773	RelationalExpression	len > 5		510569	0		>			
ANR	510774	Identifier	len		510569	0					
ANR	510775	PrimaryExpression	5		510569	1					
ANR	510776	RelationalExpression	len < R_BIN_SIZEOF_STRINGS		510569	1		<			
ANR	510777	Identifier	len		510569	0					
ANR	510778	Identifier	R_BIN_SIZEOF_STRINGS		510569	1					
ANR	510779	CompoundStatement		29:45:734:734	510569	1					
ANR	510780	ExpressionStatement	ptr -> string = malloc ( len + 1 )	911:3:23670:23700	510569	0	True				
ANR	510781	AssignmentExpression	ptr -> string = malloc ( len + 1 )		510569	0		=			
ANR	510782	PtrMemberAccess	ptr -> string		510569	0					
ANR	510783	Identifier	ptr		510569	0					
ANR	510784	Identifier	string		510569	1					
ANR	510785	CallExpression	malloc ( len + 1 )		510569	1					
ANR	510786	Callee	malloc		510569	0					
ANR	510787	Identifier	malloc		510569	0					
ANR	510788	ArgumentList	len + 1		510569	1					
ANR	510789	Argument	len + 1		510569	0					
ANR	510790	AdditiveExpression	len + 1		510569	0		+			
ANR	510791	Identifier	len		510569	0					
ANR	510792	PrimaryExpression	1		510569	1					
ANR	510793	IfStatement	if ( ! ptr -> string )		510569	1					
ANR	510794	Condition	! ptr -> string	912:7:23709:23720	510569	0	True				
ANR	510795	UnaryOperationExpression	! ptr -> string		510569	0					
ANR	510796	UnaryOperator	!		510569	0					
ANR	510797	PtrMemberAccess	ptr -> string		510569	1					
ANR	510798	Identifier	ptr		510569	0					
ANR	510799	Identifier	string		510569	1					
ANR	510800	CompoundStatement		31:21:792:792	510569	1					
ANR	510801	GotoStatement	goto out_error ;	913:4:23729:23743	510569	0	True				
ANR	510802	Identifier	out_error		510569	0					
ANR	510803	ExpressionStatement	"off = bin -> strings [ i ] + dex_uleb128_len ( buf , sizeof ( buf ) )"	915:3:23753:23812	510569	2	True				
ANR	510804	AssignmentExpression	"off = bin -> strings [ i ] + dex_uleb128_len ( buf , sizeof ( buf ) )"		510569	0		=			
ANR	510805	Identifier	off		510569	0					
ANR	510806	AdditiveExpression	"bin -> strings [ i ] + dex_uleb128_len ( buf , sizeof ( buf ) )"		510569	1		+			
ANR	510807	ArrayIndexing	bin -> strings [ i ]		510569	0					
ANR	510808	PtrMemberAccess	bin -> strings		510569	0					
ANR	510809	Identifier	bin		510569	0					
ANR	510810	Identifier	strings		510569	1					
ANR	510811	Identifier	i		510569	1					
ANR	510812	CallExpression	"dex_uleb128_len ( buf , sizeof ( buf ) )"		510569	1					
ANR	510813	Callee	dex_uleb128_len		510569	0					
ANR	510814	Identifier	dex_uleb128_len		510569	0					
ANR	510815	ArgumentList	buf		510569	1					
ANR	510816	Argument	buf		510569	0					
ANR	510817	Identifier	buf		510569	0					
ANR	510818	Argument	sizeof ( buf )		510569	1					
ANR	510819	SizeofExpression	sizeof ( buf )		510569	0					
ANR	510820	Sizeof	sizeof		510569	0					
ANR	510821	SizeofOperand	buf		510569	1					
ANR	510822	IfStatement	if ( off + len >= bin -> size || off + len < len )		510569	3					
ANR	510823	Condition	off + len >= bin -> size || off + len < len	916:7:23821:23861	510569	0	True				
ANR	510824	OrExpression	off + len >= bin -> size || off + len < len		510569	0		||			
ANR	510825	RelationalExpression	off + len >= bin -> size		510569	0		>=			
ANR	510826	AdditiveExpression	off + len		510569	0		+			
ANR	510827	Identifier	off		510569	0					
ANR	510828	Identifier	len		510569	1					
ANR	510829	PtrMemberAccess	bin -> size		510569	1					
ANR	510830	Identifier	bin		510569	0					
ANR	510831	Identifier	size		510569	1					
ANR	510832	RelationalExpression	off + len < len		510569	1		<			
ANR	510833	AdditiveExpression	off + len		510569	0		+			
ANR	510834	Identifier	off		510569	0					
ANR	510835	Identifier	len		510569	1					
ANR	510836	Identifier	len		510569	1					
ANR	510837	CompoundStatement		35:50:933:933	510569	1					
ANR	510838	ExpressionStatement	free ( ptr -> string )	917:4:23870:23888	510569	0	True				
ANR	510839	CallExpression	free ( ptr -> string )		510569	0					
ANR	510840	Callee	free		510569	0					
ANR	510841	Identifier	free		510569	0					
ANR	510842	ArgumentList	ptr -> string		510569	1					
ANR	510843	Argument	ptr -> string		510569	0					
ANR	510844	PtrMemberAccess	ptr -> string		510569	0					
ANR	510845	Identifier	ptr		510569	0					
ANR	510846	Identifier	string		510569	1					
ANR	510847	GotoStatement	goto out_error ;	918:4:23894:23908	510569	1	True				
ANR	510848	Identifier	out_error		510569	0					
ANR	510849	ExpressionStatement	"r_buf_read_at ( bin -> b , off , ( ut8 * ) ptr -> string , len )"	920:3:23918:23969	510569	4	True				
ANR	510850	CallExpression	"r_buf_read_at ( bin -> b , off , ( ut8 * ) ptr -> string , len )"		510569	0					
ANR	510851	Callee	r_buf_read_at		510569	0					
ANR	510852	Identifier	r_buf_read_at		510569	0					
ANR	510853	ArgumentList	bin -> b		510569	1					
ANR	510854	Argument	bin -> b		510569	0					
ANR	510855	PtrMemberAccess	bin -> b		510569	0					
ANR	510856	Identifier	bin		510569	0					
ANR	510857	Identifier	b		510569	1					
ANR	510858	Argument	off		510569	1					
ANR	510859	Identifier	off		510569	0					
ANR	510860	Argument	( ut8 * ) ptr -> string		510569	2					
ANR	510861	CastExpression	( ut8 * ) ptr -> string		510569	0					
ANR	510862	CastTarget	ut8 *		510569	0					
ANR	510863	PtrMemberAccess	ptr -> string		510569	1					
ANR	510864	Identifier	ptr		510569	0					
ANR	510865	Identifier	string		510569	1					
ANR	510866	Argument	len		510569	3					
ANR	510867	Identifier	len		510569	0					
ANR	510868	ExpressionStatement	ptr -> string [ len ] = 0	921:3:23974:23994	510569	5	True				
ANR	510869	AssignmentExpression	ptr -> string [ len ] = 0		510569	0		=			
ANR	510870	ArrayIndexing	ptr -> string [ len ]		510569	0					
ANR	510871	PtrMemberAccess	ptr -> string		510569	0					
ANR	510872	Identifier	ptr		510569	0					
ANR	510873	Identifier	string		510569	1					
ANR	510874	Identifier	len		510569	1					
ANR	510875	PrimaryExpression	0		510569	1					
ANR	510876	IfStatement	"if ( ( ptr -> string [ 0 ] == 'L' && strchr ( ptr -> string , '/' ) ) || ! strncmp ( ptr -> string , ""[L"" , 2 ) )"		510569	6					
ANR	510877	Condition	"( ptr -> string [ 0 ] == 'L' && strchr ( ptr -> string , '/' ) ) || ! strncmp ( ptr -> string , ""[L"" , 2 )"	922:7:24003:24089	510569	0	True				
ANR	510878	OrExpression	"( ptr -> string [ 0 ] == 'L' && strchr ( ptr -> string , '/' ) ) || ! strncmp ( ptr -> string , ""[L"" , 2 )"		510569	0		||			
ANR	510879	AndExpression	"ptr -> string [ 0 ] == 'L' && strchr ( ptr -> string , '/' )"		510569	0		&&			
ANR	510880	EqualityExpression	ptr -> string [ 0 ] == 'L'		510569	0		==			
ANR	510881	ArrayIndexing	ptr -> string [ 0 ]		510569	0					
ANR	510882	PtrMemberAccess	ptr -> string		510569	0					
ANR	510883	Identifier	ptr		510569	0					
ANR	510884	Identifier	string		510569	1					
ANR	510885	PrimaryExpression	0		510569	1					
ANR	510886	PrimaryExpression	'L'		510569	1					
ANR	510887	CallExpression	"strchr ( ptr -> string , '/' )"		510569	1					
ANR	510888	Callee	strchr		510569	0					
ANR	510889	Identifier	strchr		510569	0					
ANR	510890	ArgumentList	ptr -> string		510569	1					
ANR	510891	Argument	ptr -> string		510569	0					
ANR	510892	PtrMemberAccess	ptr -> string		510569	0					
ANR	510893	Identifier	ptr		510569	0					
ANR	510894	Identifier	string		510569	1					
ANR	510895	Argument	'/'		510569	1					
ANR	510896	PrimaryExpression	'/'		510569	0					
ANR	510897	UnaryOperationExpression	"! strncmp ( ptr -> string , ""[L"" , 2 )"		510569	1					
ANR	510898	UnaryOperator	!		510569	0					
ANR	510899	CallExpression	"strncmp ( ptr -> string , ""[L"" , 2 )"		510569	1					
ANR	510900	Callee	strncmp		510569	0					
ANR	510901	Identifier	strncmp		510569	0					
ANR	510902	ArgumentList	ptr -> string		510569	1					
ANR	510903	Argument	ptr -> string		510569	0					
ANR	510904	PtrMemberAccess	ptr -> string		510569	0					
ANR	510905	Identifier	ptr		510569	0					
ANR	510906	Identifier	string		510569	1					
ANR	510907	Argument	"""[L"""		510569	1					
ANR	510908	PrimaryExpression	"""[L"""		510569	0					
ANR	510909	Argument	2		510569	2					
ANR	510910	PrimaryExpression	2		510569	0					
ANR	510911	CompoundStatement		41:96:1161:1161	510569	1					
ANR	510912	ExpressionStatement	free ( ptr -> string )	923:4:24098:24116	510569	0	True				
ANR	510913	CallExpression	free ( ptr -> string )		510569	0					
ANR	510914	Callee	free		510569	0					
ANR	510915	Identifier	free		510569	0					
ANR	510916	ArgumentList	ptr -> string		510569	1					
ANR	510917	Argument	ptr -> string		510569	0					
ANR	510918	PtrMemberAccess	ptr -> string		510569	0					
ANR	510919	Identifier	ptr		510569	0					
ANR	510920	Identifier	string		510569	1					
ANR	510921	ExpressionStatement	free ( ptr )	924:4:24122:24132	510569	1	True				
ANR	510922	CallExpression	free ( ptr )		510569	0					
ANR	510923	Callee	free		510569	0					
ANR	510924	Identifier	free		510569	0					
ANR	510925	ArgumentList	ptr		510569	1					
ANR	510926	Argument	ptr		510569	0					
ANR	510927	Identifier	ptr		510569	0					
ANR	510928	ContinueStatement	continue ;	925:4:24138:24146	510569	2	True				
ANR	510929	ExpressionStatement	ptr -> vaddr = ptr -> paddr = bin -> strings [ i ]	927:3:24156:24197	510569	7	True				
ANR	510930	AssignmentExpression	ptr -> vaddr = ptr -> paddr = bin -> strings [ i ]		510569	0		=			
ANR	510931	PtrMemberAccess	ptr -> vaddr		510569	0					
ANR	510932	Identifier	ptr		510569	0					
ANR	510933	Identifier	vaddr		510569	1					
ANR	510934	AssignmentExpression	ptr -> paddr = bin -> strings [ i ]		510569	1		=			
ANR	510935	PtrMemberAccess	ptr -> paddr		510569	0					
ANR	510936	Identifier	ptr		510569	0					
ANR	510937	Identifier	paddr		510569	1					
ANR	510938	ArrayIndexing	bin -> strings [ i ]		510569	1					
ANR	510939	PtrMemberAccess	bin -> strings		510569	0					
ANR	510940	Identifier	bin		510569	0					
ANR	510941	Identifier	strings		510569	1					
ANR	510942	Identifier	i		510569	1					
ANR	510943	ExpressionStatement	ptr -> size = len	928:3:24202:24217	510569	8	True				
ANR	510944	AssignmentExpression	ptr -> size = len		510569	0		=			
ANR	510945	PtrMemberAccess	ptr -> size		510569	0					
ANR	510946	Identifier	ptr		510569	0					
ANR	510947	Identifier	size		510569	1					
ANR	510948	Identifier	len		510569	1					
ANR	510949	ExpressionStatement	ptr -> length = len	929:3:24222:24239	510569	9	True				
ANR	510950	AssignmentExpression	ptr -> length = len		510569	0		=			
ANR	510951	PtrMemberAccess	ptr -> length		510569	0					
ANR	510952	Identifier	ptr		510569	0					
ANR	510953	Identifier	length		510569	1					
ANR	510954	Identifier	len		510569	1					
ANR	510955	ExpressionStatement	ptr -> ordinal = i + 1	930:3:24244:24262	510569	10	True				
ANR	510956	AssignmentExpression	ptr -> ordinal = i + 1		510569	0		=			
ANR	510957	PtrMemberAccess	ptr -> ordinal		510569	0					
ANR	510958	Identifier	ptr		510569	0					
ANR	510959	Identifier	ordinal		510569	1					
ANR	510960	AdditiveExpression	i + 1		510569	1		+			
ANR	510961	Identifier	i		510569	0					
ANR	510962	PrimaryExpression	1		510569	1					
ANR	510963	ExpressionStatement	"r_list_append ( ret , ptr )"	931:3:24267:24291	510569	11	True				
ANR	510964	CallExpression	"r_list_append ( ret , ptr )"		510569	0					
ANR	510965	Callee	r_list_append		510569	0					
ANR	510966	Identifier	r_list_append		510569	0					
ANR	510967	ArgumentList	ret		510569	1					
ANR	510968	Argument	ret		510569	0					
ANR	510969	Identifier	ret		510569	0					
ANR	510970	Argument	ptr		510569	1					
ANR	510971	Identifier	ptr		510569	0					
ANR	510972	ElseStatement	else		510569	0					
ANR	510973	CompoundStatement		51:9:1371:1371	510569	0					
ANR	510974	ExpressionStatement	free ( ptr )	933:3:24307:24317	510569	0	True				
ANR	510975	CallExpression	free ( ptr )		510569	0					
ANR	510976	Callee	free		510569	0					
ANR	510977	Identifier	free		510569	0					
ANR	510978	ArgumentList	ptr		510569	1					
ANR	510979	Argument	ptr		510569	0					
ANR	510980	Identifier	ptr		510569	0					
ANR	510981	ReturnStatement	return ret ;	936:1:24327:24337	510569	11	True				
ANR	510982	Identifier	ret		510569	0					
ANR	510983	Label	out_error :	937:0:24339:24348	510569	12	True				
ANR	510984	Identifier	out_error		510569	0					
ANR	510985	ExpressionStatement	r_list_free ( ret )	938:1:24351:24368	510569	13	True				
ANR	510986	CallExpression	r_list_free ( ret )		510569	0					
ANR	510987	Callee	r_list_free		510569	0					
ANR	510988	Identifier	r_list_free		510569	0					
ANR	510989	ArgumentList	ret		510569	1					
ANR	510990	Argument	ret		510569	0					
ANR	510991	Identifier	ret		510569	0					
ANR	510992	ExpressionStatement	free ( ptr )	939:1:24371:24381	510569	14	True				
ANR	510993	CallExpression	free ( ptr )		510569	0					
ANR	510994	Callee	free		510569	0					
ANR	510995	Identifier	free		510569	0					
ANR	510996	ArgumentList	ptr		510569	1					
ANR	510997	Argument	ptr		510569	0					
ANR	510998	Identifier	ptr		510569	0					
ANR	510999	ReturnStatement	return NULL ;	940:1:24384:24395	510569	15	True				
ANR	511000	Identifier	NULL		510569	0					
ANR	511001	ReturnType	static RList *		510569	1					
ANR	511002	Identifier	strings		510569	2					
ANR	511003	ParameterList	RBinFile * bf		510569	3					
ANR	511004	Parameter	RBinFile * bf	882:22:22916:22927	510569	0	True				
ANR	511005	ParameterType	RBinFile *		510569	0					
ANR	511006	Identifier	bf		510569	1					
ANR	511007	CFGEntryNode	ENTRY		510569		True				
ANR	511008	CFGExitNode	EXIT		510569		True				
ANR	511009	Symbol	bin -> size		510569						
ANR	511010	Symbol	ptr -> paddr		510569						
ANR	511011	Symbol	bin -> b		510569						
ANR	511012	Symbol	* * ptr		510569						
ANR	511013	Symbol	bf		510569						
ANR	511014	Symbol	bin -> strings		510569						
ANR	511015	Symbol	* ptr -> string		510569						
ANR	511016	Symbol	bin		510569						
ANR	511017	Symbol	bin -> header		510569						
ANR	511018	Symbol	strchr		510569						
ANR	511019	Symbol	R_BIN_SIZEOF_STRINGS		510569						
ANR	511020	Symbol	* bin		510569						
ANR	511021	Symbol	* bf -> o		510569						
ANR	511022	Symbol	ptr -> vaddr		510569						
ANR	511023	Symbol	strncmp		510569						
ANR	511024	Symbol	len		510569						
ANR	511025	Symbol	bf -> o		510569						
ANR	511026	Symbol	dex_read_uleb128		510569						
ANR	511027	Symbol	dex_uleb128_len		510569						
ANR	511028	Symbol	* ptr		510569						
ANR	511029	Symbol	* * bin		510569						
ANR	511030	Symbol	free		510569						
ANR	511031	Symbol	& buf		510569						
ANR	511032	Symbol	ret		510569						
ANR	511033	Symbol	bf -> o -> bin_obj		510569						
ANR	511034	Symbol	* bin -> strings		510569						
ANR	511035	Symbol	malloc		510569						
ANR	511036	Symbol	NULL		510569						
ANR	511037	Symbol	r_list_newf		510569						
ANR	511038	Symbol	RBinString		510569						
ANR	511039	Symbol	* bf		510569						
ANR	511040	Symbol	i		510569						
ANR	511041	Symbol	ptr -> string		510569						
ANR	511042	Symbol	ptr -> size		510569						
ANR	511043	Symbol	bin -> header . strings_size		510569						
ANR	511044	Symbol	off		510569						
ANR	511045	Symbol	ptr		510569						
ANR	511046	Symbol	R_NEW0		510569						
ANR	511047	Symbol	buf		510569						
ANR	511048	Symbol	* * bf		510569						
ANR	511049	Symbol	* i		510569						
ANR	511050	Symbol	ptr -> ordinal		510569						
ANR	511051	Symbol	ptr -> length		510569						
ANR	511052	Symbol	* len		510569						
ANR	511053	Function	dex_method_name	943:0:24400:24767							
ANR	511054	FunctionDef	"dex_method_name (RBinDexObj * bin , int idx)"		511053	0					
ANR	511055	CompoundStatement		943:55:24455:24767	511053	0					
ANR	511056	IfStatement	if ( idx < 0 || idx >= bin -> header . method_size )		511053	0					
ANR	511057	Condition	idx < 0 || idx >= bin -> header . method_size	944:5:24462:24502	511053	0	True				
ANR	511058	OrExpression	idx < 0 || idx >= bin -> header . method_size		511053	0		||			
ANR	511059	RelationalExpression	idx < 0		511053	0		<			
ANR	511060	Identifier	idx		511053	0					
ANR	511061	PrimaryExpression	0		511053	1					
ANR	511062	RelationalExpression	idx >= bin -> header . method_size		511053	1		>=			
ANR	511063	Identifier	idx		511053	0					
ANR	511064	MemberAccess	bin -> header . method_size		511053	1					
ANR	511065	PtrMemberAccess	bin -> header		511053	0					
ANR	511066	Identifier	bin		511053	0					
ANR	511067	Identifier	header		511053	1					
ANR	511068	Identifier	method_size		511053	1					
ANR	511069	CompoundStatement		2:48:49:49	511053	1					
ANR	511070	ReturnStatement	return NULL ;	945:2:24509:24520	511053	0	True				
ANR	511071	Identifier	NULL		511053	0					
ANR	511072	IdentifierDeclStatement	int cid = bin -> methods [ idx ] . class_id ;	947:1:24526:24562	511053	1	True				
ANR	511073	IdentifierDecl	cid = bin -> methods [ idx ] . class_id		511053	0					
ANR	511074	IdentifierDeclType	int		511053	0					
ANR	511075	Identifier	cid		511053	1					
ANR	511076	AssignmentExpression	cid = bin -> methods [ idx ] . class_id		511053	2		=			
ANR	511077	Identifier	cid		511053	0					
ANR	511078	MemberAccess	bin -> methods [ idx ] . class_id		511053	1					
ANR	511079	ArrayIndexing	bin -> methods [ idx ]		511053	0					
ANR	511080	PtrMemberAccess	bin -> methods		511053	0					
ANR	511081	Identifier	bin		511053	0					
ANR	511082	Identifier	methods		511053	1					
ANR	511083	Identifier	idx		511053	1					
ANR	511084	Identifier	class_id		511053	1					
ANR	511085	IfStatement	if ( cid < 0 || cid >= bin -> header . strings_size )		511053	2					
ANR	511086	Condition	cid < 0 || cid >= bin -> header . strings_size	948:5:24569:24610	511053	0	True				
ANR	511087	OrExpression	cid < 0 || cid >= bin -> header . strings_size		511053	0		||			
ANR	511088	RelationalExpression	cid < 0		511053	0		<			
ANR	511089	Identifier	cid		511053	0					
ANR	511090	PrimaryExpression	0		511053	1					
ANR	511091	RelationalExpression	cid >= bin -> header . strings_size		511053	1		>=			
ANR	511092	Identifier	cid		511053	0					
ANR	511093	MemberAccess	bin -> header . strings_size		511053	1					
ANR	511094	PtrMemberAccess	bin -> header		511053	0					
ANR	511095	Identifier	bin		511053	0					
ANR	511096	Identifier	header		511053	1					
ANR	511097	Identifier	strings_size		511053	1					
ANR	511098	CompoundStatement		6:49:157:157	511053	1					
ANR	511099	ReturnStatement	return NULL ;	949:2:24617:24628	511053	0	True				
ANR	511100	Identifier	NULL		511053	0					
ANR	511101	IdentifierDeclStatement	int tid = bin -> methods [ idx ] . name_id ;	951:1:24634:24669	511053	3	True				
ANR	511102	IdentifierDecl	tid = bin -> methods [ idx ] . name_id		511053	0					
ANR	511103	IdentifierDeclType	int		511053	0					
ANR	511104	Identifier	tid		511053	1					
ANR	511105	AssignmentExpression	tid = bin -> methods [ idx ] . name_id		511053	2		=			
ANR	511106	Identifier	tid		511053	0					
ANR	511107	MemberAccess	bin -> methods [ idx ] . name_id		511053	1					
ANR	511108	ArrayIndexing	bin -> methods [ idx ]		511053	0					
ANR	511109	PtrMemberAccess	bin -> methods		511053	0					
ANR	511110	Identifier	bin		511053	0					
ANR	511111	Identifier	methods		511053	1					
ANR	511112	Identifier	idx		511053	1					
ANR	511113	Identifier	name_id		511053	1					
ANR	511114	IfStatement	if ( tid < 0 || tid >= bin -> header . strings_size )		511053	4					
ANR	511115	Condition	tid < 0 || tid >= bin -> header . strings_size	952:5:24676:24717	511053	0	True				
ANR	511116	OrExpression	tid < 0 || tid >= bin -> header . strings_size		511053	0		||			
ANR	511117	RelationalExpression	tid < 0		511053	0		<			
ANR	511118	Identifier	tid		511053	0					
ANR	511119	PrimaryExpression	0		511053	1					
ANR	511120	RelationalExpression	tid >= bin -> header . strings_size		511053	1		>=			
ANR	511121	Identifier	tid		511053	0					
ANR	511122	MemberAccess	bin -> header . strings_size		511053	1					
ANR	511123	PtrMemberAccess	bin -> header		511053	0					
ANR	511124	Identifier	bin		511053	0					
ANR	511125	Identifier	header		511053	1					
ANR	511126	Identifier	strings_size		511053	1					
ANR	511127	CompoundStatement		10:49:264:264	511053	1					
ANR	511128	ReturnStatement	return NULL ;	953:2:24724:24735	511053	0	True				
ANR	511129	Identifier	NULL		511053	0					
ANR	511130	ReturnStatement	"return getstr ( bin , tid ) ;"	955:1:24741:24765	511053	5	True				
ANR	511131	CallExpression	"getstr ( bin , tid )"		511053	0					
ANR	511132	Callee	getstr		511053	0					
ANR	511133	Identifier	getstr		511053	0					
ANR	511134	ArgumentList	bin		511053	1					
ANR	511135	Argument	bin		511053	0					
ANR	511136	Identifier	bin		511053	0					
ANR	511137	Argument	tid		511053	1					
ANR	511138	Identifier	tid		511053	0					
ANR	511139	ReturnType	static char *		511053	1					
ANR	511140	Identifier	dex_method_name		511053	2					
ANR	511141	ParameterList	"RBinDexObj * bin , int idx"		511053	3					
ANR	511142	Parameter	RBinDexObj * bin	943:29:24429:24443	511053	0	True				
ANR	511143	ParameterType	RBinDexObj *		511053	0					
ANR	511144	Identifier	bin		511053	1					
ANR	511145	Parameter	int idx	943:46:24446:24452	511053	1	True				
ANR	511146	ParameterType	int		511053	0					
ANR	511147	Identifier	idx		511053	1					
ANR	511148	CFGEntryNode	ENTRY		511053		True				
ANR	511149	CFGExitNode	EXIT		511053		True				
ANR	511150	Symbol	NULL		511053						
ANR	511151	Symbol	bin -> methods [ idx ] . name_id		511053						
ANR	511152	Symbol	bin		511053						
ANR	511153	Symbol	bin -> header		511053						
ANR	511154	Symbol	bin -> header . strings_size		511053						
ANR	511155	Symbol	* bin		511053						
ANR	511156	Symbol	tid		511053						
ANR	511157	Symbol	bin -> methods [ idx ] . class_id		511053						
ANR	511158	Symbol	* bin -> methods		511053						
ANR	511159	Symbol	getstr		511053						
ANR	511160	Symbol	* idx		511053						
ANR	511161	Symbol	bin -> methods		511053						
ANR	511162	Symbol	bin -> header . method_size		511053						
ANR	511163	Symbol	* * bin		511053						
ANR	511164	Symbol	idx		511053						
ANR	511165	Symbol	cid		511053						
ANR	511166	Function	simplify	958:0:24770:24932							
ANR	511167	FunctionDef	simplify (char * s)		511166	0					
ANR	511168	CompoundStatement		958:31:24801:24932	511166	0					
ANR	511169	IdentifierDeclStatement	"char * p = ( char * ) r_str_rchr ( s , NULL , '/' ) ;"	959:1:24804:24847	511166	0	True				
ANR	511170	IdentifierDecl	"* p = ( char * ) r_str_rchr ( s , NULL , '/' )"		511166	0					
ANR	511171	IdentifierDeclType	char *		511166	0					
ANR	511172	Identifier	p		511166	1					
ANR	511173	AssignmentExpression	"* p = ( char * ) r_str_rchr ( s , NULL , '/' )"		511166	2		=			
ANR	511174	Identifier	p		511166	0					
ANR	511175	CastExpression	"( char * ) r_str_rchr ( s , NULL , '/' )"		511166	1					
ANR	511176	CastTarget	char *		511166	0					
ANR	511177	CallExpression	"r_str_rchr ( s , NULL , '/' )"		511166	1					
ANR	511178	Callee	r_str_rchr		511166	0					
ANR	511179	Identifier	r_str_rchr		511166	0					
ANR	511180	ArgumentList	s		511166	1					
ANR	511181	Argument	s		511166	0					
ANR	511182	Identifier	s		511166	0					
ANR	511183	Argument	NULL		511166	1					
ANR	511184	Identifier	NULL		511166	0					
ANR	511185	Argument	'/'		511166	2					
ANR	511186	PrimaryExpression	'/'		511166	0					
ANR	511187	IfStatement	if ( p )		511166	1					
ANR	511188	Condition	p	960:5:24854:24854	511166	0	True				
ANR	511189	Identifier	p		511166	0					
ANR	511190	CompoundStatement		3:8:55:55	511166	1					
ANR	511191	ExpressionStatement	"r_str_cpy ( s , p + 1 )"	961:2:24861:24881	511166	0	True				
ANR	511192	CallExpression	"r_str_cpy ( s , p + 1 )"		511166	0					
ANR	511193	Callee	r_str_cpy		511166	0					
ANR	511194	Identifier	r_str_cpy		511166	0					
ANR	511195	ArgumentList	s		511166	1					
ANR	511196	Argument	s		511166	0					
ANR	511197	Identifier	s		511166	0					
ANR	511198	Argument	p + 1		511166	1					
ANR	511199	AdditiveExpression	p + 1		511166	0		+			
ANR	511200	Identifier	p		511166	0					
ANR	511201	PrimaryExpression	1		511166	1					
ANR	511202	ExpressionStatement	"r_str_replace_char ( s , '/' , '.' )"	963:1:24887:24919	511166	2	True				
ANR	511203	CallExpression	"r_str_replace_char ( s , '/' , '.' )"		511166	0					
ANR	511204	Callee	r_str_replace_char		511166	0					
ANR	511205	Identifier	r_str_replace_char		511166	0					
ANR	511206	ArgumentList	s		511166	1					
ANR	511207	Argument	s		511166	0					
ANR	511208	Identifier	s		511166	0					
ANR	511209	Argument	'/'		511166	1					
ANR	511210	PrimaryExpression	'/'		511166	0					
ANR	511211	Argument	'.'		511166	2					
ANR	511212	PrimaryExpression	'.'		511166	0					
ANR	511213	ReturnStatement	return s ;	964:1:24922:24930	511166	3	True				
ANR	511214	Identifier	s		511166	0					
ANR	511215	ReturnType	static char *		511166	1					
ANR	511216	Identifier	simplify		511166	2					
ANR	511217	ParameterList	char * s		511166	3					
ANR	511218	Parameter	char * s	958:22:24792:24798	511166	0	True				
ANR	511219	ParameterType	char *		511166	0					
ANR	511220	Identifier	s		511166	1					
ANR	511221	CFGEntryNode	ENTRY		511166		True				
ANR	511222	CFGExitNode	EXIT		511166		True				
ANR	511223	Symbol	p		511166						
ANR	511224	Symbol	s		511166						
ANR	511225	Symbol	NULL		511166						
ANR	511226	Symbol	r_str_rchr		511166						
ANR	511227	Function	dex_class_name_byid	967:0:24935:25246							
ANR	511228	FunctionDef	"dex_class_name_byid (RBinDexObj * bin , int cid)"		511227	0					
ANR	511229	CompoundStatement		967:59:24994:25246	511227	0					
ANR	511230	IdentifierDeclStatement	int tid ;	968:1:24997:25004	511227	0	True				
ANR	511231	IdentifierDecl	tid		511227	0					
ANR	511232	IdentifierDeclType	int		511227	0					
ANR	511233	Identifier	tid		511227	1					
ANR	511234	IfStatement	if ( ! bin || ! bin -> types )		511227	1					
ANR	511235	Condition	! bin || ! bin -> types	969:5:25011:25029	511227	0	True				
ANR	511236	OrExpression	! bin || ! bin -> types		511227	0		||			
ANR	511237	UnaryOperationExpression	! bin		511227	0					
ANR	511238	UnaryOperator	!		511227	0					
ANR	511239	Identifier	bin		511227	1					
ANR	511240	UnaryOperationExpression	! bin -> types		511227	1					
ANR	511241	UnaryOperator	!		511227	0					
ANR	511242	PtrMemberAccess	bin -> types		511227	1					
ANR	511243	Identifier	bin		511227	0					
ANR	511244	Identifier	types		511227	1					
ANR	511245	CompoundStatement		3:26:37:37	511227	1					
ANR	511246	ReturnStatement	return NULL ;	970:2:25036:25047	511227	0	True				
ANR	511247	Identifier	NULL		511227	0					
ANR	511248	IfStatement	if ( cid < 0 || cid >= bin -> header . types_size )		511227	2					
ANR	511249	Condition	cid < 0 || cid >= bin -> header . types_size	972:5:25057:25096	511227	0	True				
ANR	511250	OrExpression	cid < 0 || cid >= bin -> header . types_size		511227	0		||			
ANR	511251	RelationalExpression	cid < 0		511227	0		<			
ANR	511252	Identifier	cid		511227	0					
ANR	511253	PrimaryExpression	0		511227	1					
ANR	511254	RelationalExpression	cid >= bin -> header . types_size		511227	1		>=			
ANR	511255	Identifier	cid		511227	0					
ANR	511256	MemberAccess	bin -> header . types_size		511227	1					
ANR	511257	PtrMemberAccess	bin -> header		511227	0					
ANR	511258	Identifier	bin		511227	0					
ANR	511259	Identifier	header		511227	1					
ANR	511260	Identifier	types_size		511227	1					
ANR	511261	CompoundStatement		6:47:104:104	511227	1					
ANR	511262	ReturnStatement	return NULL ;	973:2:25103:25114	511227	0	True				
ANR	511263	Identifier	NULL		511227	0					
ANR	511264	ExpressionStatement	tid = bin -> types [ cid ] . descriptor_id	975:1:25120:25155	511227	3	True				
ANR	511265	AssignmentExpression	tid = bin -> types [ cid ] . descriptor_id		511227	0		=			
ANR	511266	Identifier	tid		511227	0					
ANR	511267	MemberAccess	bin -> types [ cid ] . descriptor_id		511227	1					
ANR	511268	ArrayIndexing	bin -> types [ cid ]		511227	0					
ANR	511269	PtrMemberAccess	bin -> types		511227	0					
ANR	511270	Identifier	bin		511227	0					
ANR	511271	Identifier	types		511227	1					
ANR	511272	Identifier	cid		511227	1					
ANR	511273	Identifier	descriptor_id		511227	1					
ANR	511274	IdentifierDeclStatement	"char * s = getstr ( bin , tid ) ;"	976:1:25158:25185	511227	4	True				
ANR	511275	IdentifierDecl	"* s = getstr ( bin , tid )"		511227	0					
ANR	511276	IdentifierDeclType	char *		511227	0					
ANR	511277	Identifier	s		511227	1					
ANR	511278	AssignmentExpression	"* s = getstr ( bin , tid )"		511227	2		=			
ANR	511279	Identifier	s		511227	0					
ANR	511280	CallExpression	"getstr ( bin , tid )"		511227	1					
ANR	511281	Callee	getstr		511227	0					
ANR	511282	Identifier	getstr		511227	0					
ANR	511283	ArgumentList	bin		511227	1					
ANR	511284	Argument	bin		511227	0					
ANR	511285	Identifier	bin		511227	0					
ANR	511286	Argument	tid		511227	1					
ANR	511287	Identifier	tid		511227	0					
ANR	511288	IfStatement	if ( simplifiedDemangling )		511227	5					
ANR	511289	Condition	simplifiedDemangling	977:5:25192:25211	511227	0	True				
ANR	511290	Identifier	simplifiedDemangling		511227	0					
ANR	511291	CompoundStatement		11:27:219:219	511227	1					
ANR	511292	ExpressionStatement	simplify ( s )	978:2:25218:25230	511227	0	True				
ANR	511293	CallExpression	simplify ( s )		511227	0					
ANR	511294	Callee	simplify		511227	0					
ANR	511295	Identifier	simplify		511227	0					
ANR	511296	ArgumentList	s		511227	1					
ANR	511297	Argument	s		511227	0					
ANR	511298	Identifier	s		511227	0					
ANR	511299	ReturnStatement	return s ;	980:1:25236:25244	511227	6	True				
ANR	511300	Identifier	s		511227	0					
ANR	511301	ReturnType	static char *		511227	1					
ANR	511302	Identifier	dex_class_name_byid		511227	2					
ANR	511303	ParameterList	"RBinDexObj * bin , int cid"		511227	3					
ANR	511304	Parameter	RBinDexObj * bin	967:33:24968:24982	511227	0	True				
ANR	511305	ParameterType	RBinDexObj *		511227	0					
ANR	511306	Identifier	bin		511227	1					
ANR	511307	Parameter	int cid	967:50:24985:24991	511227	1	True				
ANR	511308	ParameterType	int		511227	0					
ANR	511309	Identifier	cid		511227	1					
ANR	511310	CFGEntryNode	ENTRY		511227		True				
ANR	511311	CFGExitNode	EXIT		511227		True				
ANR	511312	Symbol	NULL		511227						
ANR	511313	Symbol	* bin -> types		511227						
ANR	511314	Symbol	bin		511227						
ANR	511315	Symbol	bin -> header		511227						
ANR	511316	Symbol	bin -> types [ cid ] . descriptor_id		511227						
ANR	511317	Symbol	tid		511227						
ANR	511318	Symbol	* bin		511227						
ANR	511319	Symbol	s		511227						
ANR	511320	Symbol	getstr		511227						
ANR	511321	Symbol	bin -> header . types_size		511227						
ANR	511322	Symbol	* cid		511227						
ANR	511323	Symbol	simplifiedDemangling		511227						
ANR	511324	Symbol	bin -> types		511227						
ANR	511325	Symbol	* * bin		511227						
ANR	511326	Symbol	cid		511227						
ANR	511327	Function	dex_class_name	983:0:25249:25471							
ANR	511328	FunctionDef	"dex_class_name (RBinDexObj * bin , RBinDexClass * c)"		511327	0					
ANR	511329	CompoundStatement		983:62:25311:25471	511327	0					
ANR	511330	IdentifierDeclStatement	"char * s = dex_class_name_byid ( bin , c -> class_id ) ;"	984:1:25314:25362	511327	0	True				
ANR	511331	IdentifierDecl	"* s = dex_class_name_byid ( bin , c -> class_id )"		511327	0					
ANR	511332	IdentifierDeclType	char *		511327	0					
ANR	511333	Identifier	s		511327	1					
ANR	511334	AssignmentExpression	"* s = dex_class_name_byid ( bin , c -> class_id )"		511327	2		=			
ANR	511335	Identifier	s		511327	0					
ANR	511336	CallExpression	"dex_class_name_byid ( bin , c -> class_id )"		511327	1					
ANR	511337	Callee	dex_class_name_byid		511327	0					
ANR	511338	Identifier	dex_class_name_byid		511327	0					
ANR	511339	ArgumentList	bin		511327	1					
ANR	511340	Argument	bin		511327	0					
ANR	511341	Identifier	bin		511327	0					
ANR	511342	Argument	c -> class_id		511327	1					
ANR	511343	PtrMemberAccess	c -> class_id		511327	0					
ANR	511344	Identifier	c		511327	0					
ANR	511345	Identifier	class_id		511327	1					
ANR	511346	IfStatement	if ( simplifiedDemangling )		511327	1					
ANR	511347	Condition	simplifiedDemangling	985:5:25369:25388	511327	0	True				
ANR	511348	Identifier	simplifiedDemangling		511327	0					
ANR	511349	CompoundStatement		3:27:79:79	511327	1					
ANR	511350	ExpressionStatement	simplify ( s )	986:2:25395:25407	511327	0	True				
ANR	511351	CallExpression	simplify ( s )		511327	0					
ANR	511352	Callee	simplify		511327	0					
ANR	511353	Identifier	simplify		511327	0					
ANR	511354	ArgumentList	s		511327	1					
ANR	511355	Argument	s		511327	0					
ANR	511356	Identifier	s		511327	0					
ANR	511357	IfStatement	if ( * s == 'L' )		511327	1					
ANR	511358	Condition	* s == 'L'	987:6:25415:25423	511327	0	True				
ANR	511359	EqualityExpression	* s == 'L'		511327	0		==			
ANR	511360	UnaryOperationExpression	* s		511327	0					
ANR	511361	UnaryOperator	*		511327	0					
ANR	511362	Identifier	s		511327	1					
ANR	511363	PrimaryExpression	'L'		511327	1					
ANR	511364	CompoundStatement		5:17:114:114	511327	1					
ANR	511365	ExpressionStatement	"r_str_cpy ( s , s + 1 )"	988:3:25431:25451	511327	0	True				
ANR	511366	CallExpression	"r_str_cpy ( s , s + 1 )"		511327	0					
ANR	511367	Callee	r_str_cpy		511327	0					
ANR	511368	Identifier	r_str_cpy		511327	0					
ANR	511369	ArgumentList	s		511327	1					
ANR	511370	Argument	s		511327	0					
ANR	511371	Identifier	s		511327	0					
ANR	511372	Argument	s + 1		511327	1					
ANR	511373	AdditiveExpression	s + 1		511327	0		+			
ANR	511374	Identifier	s		511327	0					
ANR	511375	PrimaryExpression	1		511327	1					
ANR	511376	ReturnStatement	return s ;	991:1:25461:25469	511327	2	True				
ANR	511377	Identifier	s		511327	0					
ANR	511378	ReturnType	static char *		511327	1					
ANR	511379	Identifier	dex_class_name		511327	2					
ANR	511380	ParameterList	"RBinDexObj * bin , RBinDexClass * c"		511327	3					
ANR	511381	Parameter	RBinDexObj * bin	983:28:25277:25291	511327	0	True				
ANR	511382	ParameterType	RBinDexObj *		511327	0					
ANR	511383	Identifier	bin		511327	1					
ANR	511384	Parameter	RBinDexClass * c	983:45:25294:25308	511327	1	True				
ANR	511385	ParameterType	RBinDexClass *		511327	0					
ANR	511386	Identifier	c		511327	1					
ANR	511387	CFGEntryNode	ENTRY		511327		True				
ANR	511388	CFGExitNode	EXIT		511327		True				
ANR	511389	Symbol	c		511327						
ANR	511390	Symbol	s		511327						
ANR	511391	Symbol	c -> class_id		511327						
ANR	511392	Symbol	bin		511327						
ANR	511393	Symbol	simplifiedDemangling		511327						
ANR	511394	Symbol	dex_class_name_byid		511327						
ANR	511395	Symbol	* c		511327						
ANR	511396	Symbol	* s		511327						
ANR	511397	Function	dex_field_name	994:0:25474:26650							
ANR	511398	FunctionDef	"dex_field_name (RBinDexObj * bin , int fid)"		511397	0					
ANR	511399	CompoundStatement		994:54:25528:26650	511397	0					
ANR	511400	IdentifierDeclStatement	"int cid , tid , type_id ;"	995:1:25531:25552	511397	0	True				
ANR	511401	IdentifierDecl	cid		511397	0					
ANR	511402	IdentifierDeclType	int		511397	0					
ANR	511403	Identifier	cid		511397	1					
ANR	511404	IdentifierDecl	tid		511397	1					
ANR	511405	IdentifierDeclType	int		511397	0					
ANR	511406	Identifier	tid		511397	1					
ANR	511407	IdentifierDecl	type_id		511397	2					
ANR	511408	IdentifierDeclType	int		511397	0					
ANR	511409	Identifier	type_id		511397	1					
ANR	511410	ExpressionStatement	"r_return_val_if_fail ( bin && bin -> fields , NULL )"	996:1:25555:25602	511397	1	True				
ANR	511411	CallExpression	"r_return_val_if_fail ( bin && bin -> fields , NULL )"		511397	0					
ANR	511412	Callee	r_return_val_if_fail		511397	0					
ANR	511413	Identifier	r_return_val_if_fail		511397	0					
ANR	511414	ArgumentList	bin && bin -> fields		511397	1					
ANR	511415	Argument	bin && bin -> fields		511397	0					
ANR	511416	AndExpression	bin && bin -> fields		511397	0		&&			
ANR	511417	Identifier	bin		511397	0					
ANR	511418	PtrMemberAccess	bin -> fields		511397	1					
ANR	511419	Identifier	bin		511397	0					
ANR	511420	Identifier	fields		511397	1					
ANR	511421	Argument	NULL		511397	1					
ANR	511422	Identifier	NULL		511397	0					
ANR	511423	IfStatement	if ( fid < 0 || fid >= bin -> header . fields_size )		511397	2					
ANR	511424	Condition	fid < 0 || fid >= bin -> header . fields_size	998:5:25610:25650	511397	0	True				
ANR	511425	OrExpression	fid < 0 || fid >= bin -> header . fields_size		511397	0		||			
ANR	511426	RelationalExpression	fid < 0		511397	0		<			
ANR	511427	Identifier	fid		511397	0					
ANR	511428	PrimaryExpression	0		511397	1					
ANR	511429	RelationalExpression	fid >= bin -> header . fields_size		511397	1		>=			
ANR	511430	Identifier	fid		511397	0					
ANR	511431	MemberAccess	bin -> header . fields_size		511397	1					
ANR	511432	PtrMemberAccess	bin -> header		511397	0					
ANR	511433	Identifier	bin		511397	0					
ANR	511434	Identifier	header		511397	1					
ANR	511435	Identifier	fields_size		511397	1					
ANR	511436	CompoundStatement		5:48:124:124	511397	1					
ANR	511437	ReturnStatement	return NULL ;	999:2:25657:25668	511397	0	True				
ANR	511438	Identifier	NULL		511397	0					
ANR	511439	ExpressionStatement	cid = bin -> fields [ fid ] . class_id	1001:1:25674:25705	511397	3	True				
ANR	511440	AssignmentExpression	cid = bin -> fields [ fid ] . class_id		511397	0		=			
ANR	511441	Identifier	cid		511397	0					
ANR	511442	MemberAccess	bin -> fields [ fid ] . class_id		511397	1					
ANR	511443	ArrayIndexing	bin -> fields [ fid ]		511397	0					
ANR	511444	PtrMemberAccess	bin -> fields		511397	0					
ANR	511445	Identifier	bin		511397	0					
ANR	511446	Identifier	fields		511397	1					
ANR	511447	Identifier	fid		511397	1					
ANR	511448	Identifier	class_id		511397	1					
ANR	511449	IfStatement	if ( cid < 0 || cid >= bin -> header . types_size )		511397	4					
ANR	511450	Condition	cid < 0 || cid >= bin -> header . types_size	1002:5:25712:25751	511397	0	True				
ANR	511451	OrExpression	cid < 0 || cid >= bin -> header . types_size		511397	0		||			
ANR	511452	RelationalExpression	cid < 0		511397	0		<			
ANR	511453	Identifier	cid		511397	0					
ANR	511454	PrimaryExpression	0		511397	1					
ANR	511455	RelationalExpression	cid >= bin -> header . types_size		511397	1		>=			
ANR	511456	Identifier	cid		511397	0					
ANR	511457	MemberAccess	bin -> header . types_size		511397	1					
ANR	511458	PtrMemberAccess	bin -> header		511397	0					
ANR	511459	Identifier	bin		511397	0					
ANR	511460	Identifier	header		511397	1					
ANR	511461	Identifier	types_size		511397	1					
ANR	511462	CompoundStatement		9:47:225:225	511397	1					
ANR	511463	ReturnStatement	return NULL ;	1003:2:25758:25769	511397	0	True				
ANR	511464	Identifier	NULL		511397	0					
ANR	511465	ExpressionStatement	type_id = bin -> fields [ fid ] . type_id	1005:1:25775:25809	511397	5	True				
ANR	511466	AssignmentExpression	type_id = bin -> fields [ fid ] . type_id		511397	0		=			
ANR	511467	Identifier	type_id		511397	0					
ANR	511468	MemberAccess	bin -> fields [ fid ] . type_id		511397	1					
ANR	511469	ArrayIndexing	bin -> fields [ fid ]		511397	0					
ANR	511470	PtrMemberAccess	bin -> fields		511397	0					
ANR	511471	Identifier	bin		511397	0					
ANR	511472	Identifier	fields		511397	1					
ANR	511473	Identifier	fid		511397	1					
ANR	511474	Identifier	type_id		511397	1					
ANR	511475	IfStatement	if ( type_id < 0 || type_id >= bin -> header . types_size )		511397	6					
ANR	511476	Condition	type_id < 0 || type_id >= bin -> header . types_size	1006:5:25816:25863	511397	0	True				
ANR	511477	OrExpression	type_id < 0 || type_id >= bin -> header . types_size		511397	0		||			
ANR	511478	RelationalExpression	type_id < 0		511397	0		<			
ANR	511479	Identifier	type_id		511397	0					
ANR	511480	PrimaryExpression	0		511397	1					
ANR	511481	RelationalExpression	type_id >= bin -> header . types_size		511397	1		>=			
ANR	511482	Identifier	type_id		511397	0					
ANR	511483	MemberAccess	bin -> header . types_size		511397	1					
ANR	511484	PtrMemberAccess	bin -> header		511397	0					
ANR	511485	Identifier	bin		511397	0					
ANR	511486	Identifier	header		511397	1					
ANR	511487	Identifier	types_size		511397	1					
ANR	511488	CompoundStatement		13:55:337:337	511397	1					
ANR	511489	ReturnStatement	return NULL ;	1007:2:25870:25881	511397	0	True				
ANR	511490	Identifier	NULL		511397	0					
ANR	511491	ExpressionStatement	tid = bin -> fields [ fid ] . name_id	1009:1:25887:25917	511397	7	True				
ANR	511492	AssignmentExpression	tid = bin -> fields [ fid ] . name_id		511397	0		=			
ANR	511493	Identifier	tid		511397	0					
ANR	511494	MemberAccess	bin -> fields [ fid ] . name_id		511397	1					
ANR	511495	ArrayIndexing	bin -> fields [ fid ]		511397	0					
ANR	511496	PtrMemberAccess	bin -> fields		511397	0					
ANR	511497	Identifier	bin		511397	0					
ANR	511498	Identifier	fields		511397	1					
ANR	511499	Identifier	fid		511397	1					
ANR	511500	Identifier	name_id		511397	1					
ANR	511501	IdentifierDeclStatement	"const char * a = getstr ( bin , bin -> types [ cid ] . descriptor_id ) ;"	1010:1:25920:25979	511397	8	True				
ANR	511502	IdentifierDecl	"* a = getstr ( bin , bin -> types [ cid ] . descriptor_id )"		511397	0					
ANR	511503	IdentifierDeclType	const char *		511397	0					
ANR	511504	Identifier	a		511397	1					
ANR	511505	AssignmentExpression	"* a = getstr ( bin , bin -> types [ cid ] . descriptor_id )"		511397	2		=			
ANR	511506	Identifier	a		511397	0					
ANR	511507	CallExpression	"getstr ( bin , bin -> types [ cid ] . descriptor_id )"		511397	1					
ANR	511508	Callee	getstr		511397	0					
ANR	511509	Identifier	getstr		511397	0					
ANR	511510	ArgumentList	bin		511397	1					
ANR	511511	Argument	bin		511397	0					
ANR	511512	Identifier	bin		511397	0					
ANR	511513	Argument	bin -> types [ cid ] . descriptor_id		511397	1					
ANR	511514	MemberAccess	bin -> types [ cid ] . descriptor_id		511397	0					
ANR	511515	ArrayIndexing	bin -> types [ cid ]		511397	0					
ANR	511516	PtrMemberAccess	bin -> types		511397	0					
ANR	511517	Identifier	bin		511397	0					
ANR	511518	Identifier	types		511397	1					
ANR	511519	Identifier	cid		511397	1					
ANR	511520	Identifier	descriptor_id		511397	1					
ANR	511521	IdentifierDeclStatement	"const char * b = getstr ( bin , tid ) ;"	1011:1:25982:26015	511397	9	True				
ANR	511522	IdentifierDecl	"* b = getstr ( bin , tid )"		511397	0					
ANR	511523	IdentifierDeclType	const char *		511397	0					
ANR	511524	Identifier	b		511397	1					
ANR	511525	AssignmentExpression	"* b = getstr ( bin , tid )"		511397	2		=			
ANR	511526	Identifier	b		511397	0					
ANR	511527	CallExpression	"getstr ( bin , tid )"		511397	1					
ANR	511528	Callee	getstr		511397	0					
ANR	511529	Identifier	getstr		511397	0					
ANR	511530	ArgumentList	bin		511397	1					
ANR	511531	Argument	bin		511397	0					
ANR	511532	Identifier	bin		511397	0					
ANR	511533	Argument	tid		511397	1					
ANR	511534	Identifier	tid		511397	0					
ANR	511535	IdentifierDeclStatement	"const char * c = getstr ( bin , bin -> types [ type_id ] . descriptor_id ) ;"	1012:1:26018:26081	511397	10	True				
ANR	511536	IdentifierDecl	"* c = getstr ( bin , bin -> types [ type_id ] . descriptor_id )"		511397	0					
ANR	511537	IdentifierDeclType	const char *		511397	0					
ANR	511538	Identifier	c		511397	1					
ANR	511539	AssignmentExpression	"* c = getstr ( bin , bin -> types [ type_id ] . descriptor_id )"		511397	2		=			
ANR	511540	Identifier	c		511397	0					
ANR	511541	CallExpression	"getstr ( bin , bin -> types [ type_id ] . descriptor_id )"		511397	1					
ANR	511542	Callee	getstr		511397	0					
ANR	511543	Identifier	getstr		511397	0					
ANR	511544	ArgumentList	bin		511397	1					
ANR	511545	Argument	bin		511397	0					
ANR	511546	Identifier	bin		511397	0					
ANR	511547	Argument	bin -> types [ type_id ] . descriptor_id		511397	1					
ANR	511548	MemberAccess	bin -> types [ type_id ] . descriptor_id		511397	0					
ANR	511549	ArrayIndexing	bin -> types [ type_id ]		511397	0					
ANR	511550	PtrMemberAccess	bin -> types		511397	0					
ANR	511551	Identifier	bin		511397	0					
ANR	511552	Identifier	types		511397	1					
ANR	511553	Identifier	type_id		511397	1					
ANR	511554	Identifier	descriptor_id		511397	1					
ANR	511555	IfStatement	if ( simplifiedDemangling )		511397	11					
ANR	511556	Condition	simplifiedDemangling	1013:5:26088:26107	511397	0	True				
ANR	511557	Identifier	simplifiedDemangling		511397	0					
ANR	511558	CompoundStatement		20:27:581:581	511397	1					
ANR	511559	IfStatement	if ( a && b && c )		511397	0					
ANR	511560	Condition	a && b && c	1014:6:26118:26128	511397	0	True				
ANR	511561	AndExpression	a && b && c		511397	0		&&			
ANR	511562	Identifier	a		511397	0					
ANR	511563	AndExpression	b && c		511397	1		&&			
ANR	511564	Identifier	b		511397	0					
ANR	511565	Identifier	c		511397	1					
ANR	511566	CompoundStatement		25:3:715:765	511397	1					
ANR	511567	IdentifierDeclStatement	char * _a = simplify ( strdup ( a ) ) ;	1015:3:26136:26167	511397	0	True				
ANR	511568	IdentifierDecl	* _a = simplify ( strdup ( a ) )		511397	0					
ANR	511569	IdentifierDeclType	char *		511397	0					
ANR	511570	Identifier	_a		511397	1					
ANR	511571	AssignmentExpression	* _a = simplify ( strdup ( a ) )		511397	2		=			
ANR	511572	Identifier	_a		511397	0					
ANR	511573	CallExpression	simplify ( strdup ( a ) )		511397	1					
ANR	511574	Callee	simplify		511397	0					
ANR	511575	Identifier	simplify		511397	0					
ANR	511576	ArgumentList	strdup ( a )		511397	1					
ANR	511577	Argument	strdup ( a )		511397	0					
ANR	511578	CallExpression	strdup ( a )		511397	0					
ANR	511579	Callee	strdup		511397	0					
ANR	511580	Identifier	strdup		511397	0					
ANR	511581	ArgumentList	a		511397	1					
ANR	511582	Argument	a		511397	0					
ANR	511583	Identifier	a		511397	0					
ANR	511584	IdentifierDeclStatement	char * _b = simplify ( strdup ( b ) ) ;	1016:3:26172:26203	511397	1	True				
ANR	511585	IdentifierDecl	* _b = simplify ( strdup ( b ) )		511397	0					
ANR	511586	IdentifierDeclType	char *		511397	0					
ANR	511587	Identifier	_b		511397	1					
ANR	511588	AssignmentExpression	* _b = simplify ( strdup ( b ) )		511397	2		=			
ANR	511589	Identifier	_b		511397	0					
ANR	511590	CallExpression	simplify ( strdup ( b ) )		511397	1					
ANR	511591	Callee	simplify		511397	0					
ANR	511592	Identifier	simplify		511397	0					
ANR	511593	ArgumentList	strdup ( b )		511397	1					
ANR	511594	Argument	strdup ( b )		511397	0					
ANR	511595	CallExpression	strdup ( b )		511397	0					
ANR	511596	Callee	strdup		511397	0					
ANR	511597	Identifier	strdup		511397	0					
ANR	511598	ArgumentList	b		511397	1					
ANR	511599	Argument	b		511397	0					
ANR	511600	Identifier	b		511397	0					
ANR	511601	IdentifierDeclStatement	char * _c = simplify ( strdup ( c ) ) ;	1017:3:26208:26239	511397	2	True				
ANR	511602	IdentifierDecl	* _c = simplify ( strdup ( c ) )		511397	0					
ANR	511603	IdentifierDeclType	char *		511397	0					
ANR	511604	Identifier	_c		511397	1					
ANR	511605	AssignmentExpression	* _c = simplify ( strdup ( c ) )		511397	2		=			
ANR	511606	Identifier	_c		511397	0					
ANR	511607	CallExpression	simplify ( strdup ( c ) )		511397	1					
ANR	511608	Callee	simplify		511397	0					
ANR	511609	Identifier	simplify		511397	0					
ANR	511610	ArgumentList	strdup ( c )		511397	1					
ANR	511611	Argument	strdup ( c )		511397	0					
ANR	511612	CallExpression	strdup ( c )		511397	0					
ANR	511613	Callee	strdup		511397	0					
ANR	511614	Identifier	strdup		511397	0					
ANR	511615	ArgumentList	c		511397	1					
ANR	511616	Argument	c		511397	0					
ANR	511617	Identifier	c		511397	0					
ANR	511618	IdentifierDeclStatement	"char * str = r_str_newf ( ""(%s) %s.%s"" , _c , _a , _b ) ;"	1018:3:26244:26294	511397	3	True				
ANR	511619	IdentifierDecl	"* str = r_str_newf ( ""(%s) %s.%s"" , _c , _a , _b )"		511397	0					
ANR	511620	IdentifierDeclType	char *		511397	0					
ANR	511621	Identifier	str		511397	1					
ANR	511622	AssignmentExpression	"* str = r_str_newf ( ""(%s) %s.%s"" , _c , _a , _b )"		511397	2		=			
ANR	511623	Identifier	str		511397	0					
ANR	511624	CallExpression	"r_str_newf ( ""(%s) %s.%s"" , _c , _a , _b )"		511397	1					
ANR	511625	Callee	r_str_newf		511397	0					
ANR	511626	Identifier	r_str_newf		511397	0					
ANR	511627	ArgumentList	"""(%s) %s.%s"""		511397	1					
ANR	511628	Argument	"""(%s) %s.%s"""		511397	0					
ANR	511629	PrimaryExpression	"""(%s) %s.%s"""		511397	0					
ANR	511630	Argument	_c		511397	1					
ANR	511631	Identifier	_c		511397	0					
ANR	511632	Argument	_a		511397	2					
ANR	511633	Identifier	_a		511397	0					
ANR	511634	Argument	_b		511397	3					
ANR	511635	Identifier	_b		511397	0					
ANR	511636	ExpressionStatement	free ( _a )	1019:3:26299:26308	511397	4	True				
ANR	511637	CallExpression	free ( _a )		511397	0					
ANR	511638	Callee	free		511397	0					
ANR	511639	Identifier	free		511397	0					
ANR	511640	ArgumentList	_a		511397	1					
ANR	511641	Argument	_a		511397	0					
ANR	511642	Identifier	_a		511397	0					
ANR	511643	ExpressionStatement	free ( _b )	1020:3:26313:26322	511397	5	True				
ANR	511644	CallExpression	free ( _b )		511397	0					
ANR	511645	Callee	free		511397	0					
ANR	511646	Identifier	free		511397	0					
ANR	511647	ArgumentList	_b		511397	1					
ANR	511648	Argument	_b		511397	0					
ANR	511649	Identifier	_b		511397	0					
ANR	511650	ExpressionStatement	free ( _c )	1021:3:26327:26336	511397	6	True				
ANR	511651	CallExpression	free ( _c )		511397	0					
ANR	511652	Callee	free		511397	0					
ANR	511653	Identifier	free		511397	0					
ANR	511654	ArgumentList	_c		511397	1					
ANR	511655	Argument	_c		511397	0					
ANR	511656	Identifier	_c		511397	0					
ANR	511657	ReturnStatement	return str ;	1022:3:26341:26351	511397	7	True				
ANR	511658	Identifier	str		511397	0					
ANR	511659	ReturnStatement	"return r_str_newf ( ""(%d) %d.%d"" , bin -> types [ type_id ] . descriptor_id , tid , bin -> types [ cid ] . descriptor_id ) ;"	1024:2:26359:26483	511397	1	True				
ANR	511660	CallExpression	"r_str_newf ( ""(%d) %d.%d"" , bin -> types [ type_id ] . descriptor_id , tid , bin -> types [ cid ] . descriptor_id )"		511397	0					
ANR	511661	Callee	r_str_newf		511397	0					
ANR	511662	Identifier	r_str_newf		511397	0					
ANR	511663	ArgumentList	"""(%d) %d.%d"""		511397	1					
ANR	511664	Argument	"""(%d) %d.%d"""		511397	0					
ANR	511665	PrimaryExpression	"""(%d) %d.%d"""		511397	0					
ANR	511666	Argument	bin -> types [ type_id ] . descriptor_id		511397	1					
ANR	511667	MemberAccess	bin -> types [ type_id ] . descriptor_id		511397	0					
ANR	511668	ArrayIndexing	bin -> types [ type_id ]		511397	0					
ANR	511669	PtrMemberAccess	bin -> types		511397	0					
ANR	511670	Identifier	bin		511397	0					
ANR	511671	Identifier	types		511397	1					
ANR	511672	Identifier	type_id		511397	1					
ANR	511673	Identifier	descriptor_id		511397	1					
ANR	511674	Argument	tid		511397	2					
ANR	511675	Identifier	tid		511397	0					
ANR	511676	Argument	bin -> types [ cid ] . descriptor_id		511397	3					
ANR	511677	MemberAccess	bin -> types [ cid ] . descriptor_id		511397	0					
ANR	511678	ArrayIndexing	bin -> types [ cid ]		511397	0					
ANR	511679	PtrMemberAccess	bin -> types		511397	0					
ANR	511680	Identifier	bin		511397	0					
ANR	511681	Identifier	types		511397	1					
ANR	511682	Identifier	cid		511397	1					
ANR	511683	Identifier	descriptor_id		511397	1					
ANR	511684	ReturnStatement	"return ( a && b && c ) ? r_str_newf ( ""%s->%s %s"" , a , b , c ) : r_str_newf ( ""%d->%d %d"" , bin -> types [ cid ] . descriptor_id , tid , bin -> types [ type_id ] . descriptor_id ) ;"	1030:1:26489:26648	511397	12	True				
ANR	511685	ConditionalExpression	"( a && b && c ) ? r_str_newf ( ""%s->%s %s"" , a , b , c ) : r_str_newf ( ""%d->%d %d"" , bin -> types [ cid ] . descriptor_id , tid , bin -> types [ type_id ] . descriptor_id )"		511397	0					
ANR	511686	Condition	a && b && c		511397	0					
ANR	511687	AndExpression	a && b && c		511397	0		&&			
ANR	511688	Identifier	a		511397	0					
ANR	511689	AndExpression	b && c		511397	1		&&			
ANR	511690	Identifier	b		511397	0					
ANR	511691	Identifier	c		511397	1					
ANR	511692	CallExpression	"r_str_newf ( ""%s->%s %s"" , a , b , c )"		511397	1					
ANR	511693	Callee	r_str_newf		511397	0					
ANR	511694	Identifier	r_str_newf		511397	0					
ANR	511695	ArgumentList	"""%s->%s %s"""		511397	1					
ANR	511696	Argument	"""%s->%s %s"""		511397	0					
ANR	511697	PrimaryExpression	"""%s->%s %s"""		511397	0					
ANR	511698	Argument	a		511397	1					
ANR	511699	Identifier	a		511397	0					
ANR	511700	Argument	b		511397	2					
ANR	511701	Identifier	b		511397	0					
ANR	511702	Argument	c		511397	3					
ANR	511703	Identifier	c		511397	0					
ANR	511704	CallExpression	"r_str_newf ( ""%d->%d %d"" , bin -> types [ cid ] . descriptor_id , tid , bin -> types [ type_id ] . descriptor_id )"		511397	2					
ANR	511705	Callee	r_str_newf		511397	0					
ANR	511706	Identifier	r_str_newf		511397	0					
ANR	511707	ArgumentList	"""%d->%d %d"""		511397	1					
ANR	511708	Argument	"""%d->%d %d"""		511397	0					
ANR	511709	PrimaryExpression	"""%d->%d %d"""		511397	0					
ANR	511710	Argument	bin -> types [ cid ] . descriptor_id		511397	1					
ANR	511711	MemberAccess	bin -> types [ cid ] . descriptor_id		511397	0					
ANR	511712	ArrayIndexing	bin -> types [ cid ]		511397	0					
ANR	511713	PtrMemberAccess	bin -> types		511397	0					
ANR	511714	Identifier	bin		511397	0					
ANR	511715	Identifier	types		511397	1					
ANR	511716	Identifier	cid		511397	1					
ANR	511717	Identifier	descriptor_id		511397	1					
ANR	511718	Argument	tid		511397	2					
ANR	511719	Identifier	tid		511397	0					
ANR	511720	Argument	bin -> types [ type_id ] . descriptor_id		511397	3					
ANR	511721	MemberAccess	bin -> types [ type_id ] . descriptor_id		511397	0					
ANR	511722	ArrayIndexing	bin -> types [ type_id ]		511397	0					
ANR	511723	PtrMemberAccess	bin -> types		511397	0					
ANR	511724	Identifier	bin		511397	0					
ANR	511725	Identifier	types		511397	1					
ANR	511726	Identifier	type_id		511397	1					
ANR	511727	Identifier	descriptor_id		511397	1					
ANR	511728	ReturnType	static char *		511397	1					
ANR	511729	Identifier	dex_field_name		511397	2					
ANR	511730	ParameterList	"RBinDexObj * bin , int fid"		511397	3					
ANR	511731	Parameter	RBinDexObj * bin	994:28:25502:25516	511397	0	True				
ANR	511732	ParameterType	RBinDexObj *		511397	0					
ANR	511733	Identifier	bin		511397	1					
ANR	511734	Parameter	int fid	994:45:25519:25525	511397	1	True				
ANR	511735	ParameterType	int		511397	0					
ANR	511736	Identifier	fid		511397	1					
ANR	511737	CFGEntryNode	ENTRY		511397		True				
ANR	511738	CFGExitNode	EXIT		511397		True				
ANR	511739	Symbol	fid		511397						
ANR	511740	Symbol	* bin -> types		511397						
ANR	511741	Symbol	bin		511397						
ANR	511742	Symbol	bin -> header		511397						
ANR	511743	Symbol	r_str_newf		511397						
ANR	511744	Symbol	* type_id		511397						
ANR	511745	Symbol	bin -> types [ cid ] . descriptor_id		511397						
ANR	511746	Symbol	tid		511397						
ANR	511747	Symbol	* bin		511397						
ANR	511748	Symbol	bin -> fields [ fid ] . name_id		511397						
ANR	511749	Symbol	getstr		511397						
ANR	511750	Symbol	* fid		511397						
ANR	511751	Symbol	bin -> header . types_size		511397						
ANR	511752	Symbol	* cid		511397						
ANR	511753	Symbol	* * bin		511397						
ANR	511754	Symbol	a		511397						
ANR	511755	Symbol	b		511397						
ANR	511756	Symbol	_a		511397						
ANR	511757	Symbol	NULL		511397						
ANR	511758	Symbol	c		511397						
ANR	511759	Symbol	_b		511397						
ANR	511760	Symbol	_c		511397						
ANR	511761	Symbol	type_id		511397						
ANR	511762	Symbol	bin -> fields [ fid ] . class_id		511397						
ANR	511763	Symbol	str		511397						
ANR	511764	Symbol	bin -> types [ type_id ] . descriptor_id		511397						
ANR	511765	Symbol	* bin -> fields		511397						
ANR	511766	Symbol	bin -> fields [ fid ] . type_id		511397						
ANR	511767	Symbol	simplifiedDemangling		511397						
ANR	511768	Symbol	bin -> fields		511397						
ANR	511769	Symbol	bin -> types		511397						
ANR	511770	Symbol	simplify		511397						
ANR	511771	Symbol	strdup		511397						
ANR	511772	Symbol	bin -> header . fields_size		511397						
ANR	511773	Symbol	cid		511397						
ANR	511774	Function	dex_method_fullname	1035:0:26653:28019							
ANR	511775	FunctionDef	"dex_method_fullname (RBinDexObj * bin , int method_idx)"		511774	0					
ANR	511776	CompoundStatement		1035:66:26719:28019	511774	0					
ANR	511777	ExpressionStatement	"r_return_val_if_fail ( bin && bin -> types , NULL )"	1036:1:26722:26768	511774	0	True				
ANR	511778	CallExpression	"r_return_val_if_fail ( bin && bin -> types , NULL )"		511774	0					
ANR	511779	Callee	r_return_val_if_fail		511774	0					
ANR	511780	Identifier	r_return_val_if_fail		511774	0					
ANR	511781	ArgumentList	bin && bin -> types		511774	1					
ANR	511782	Argument	bin && bin -> types		511774	0					
ANR	511783	AndExpression	bin && bin -> types		511774	0		&&			
ANR	511784	Identifier	bin		511774	0					
ANR	511785	PtrMemberAccess	bin -> types		511774	1					
ANR	511786	Identifier	bin		511774	0					
ANR	511787	Identifier	types		511774	1					
ANR	511788	Argument	NULL		511774	1					
ANR	511789	Identifier	NULL		511774	0					
ANR	511790	IfStatement	if ( method_idx < 0 || method_idx >= bin -> header . method_size )		511774	1					
ANR	511791	Condition	method_idx < 0 || method_idx >= bin -> header . method_size	1037:5:26775:26829	511774	0	True				
ANR	511792	OrExpression	method_idx < 0 || method_idx >= bin -> header . method_size		511774	0		||			
ANR	511793	RelationalExpression	method_idx < 0		511774	0		<			
ANR	511794	Identifier	method_idx		511774	0					
ANR	511795	PrimaryExpression	0		511774	1					
ANR	511796	RelationalExpression	method_idx >= bin -> header . method_size		511774	1		>=			
ANR	511797	Identifier	method_idx		511774	0					
ANR	511798	MemberAccess	bin -> header . method_size		511774	1					
ANR	511799	PtrMemberAccess	bin -> header		511774	0					
ANR	511800	Identifier	bin		511774	0					
ANR	511801	Identifier	header		511774	1					
ANR	511802	Identifier	method_size		511774	1					
ANR	511803	CompoundStatement		3:62:112:112	511774	1					
ANR	511804	ReturnStatement	return NULL ;	1038:2:26836:26847	511774	0	True				
ANR	511805	Identifier	NULL		511774	0					
ANR	511806	IdentifierDeclStatement	int cid = bin -> methods [ method_idx ] . class_id ;	1040:1:26853:26896	511774	2	True				
ANR	511807	IdentifierDecl	cid = bin -> methods [ method_idx ] . class_id		511774	0					
ANR	511808	IdentifierDeclType	int		511774	0					
ANR	511809	Identifier	cid		511774	1					
ANR	511810	AssignmentExpression	cid = bin -> methods [ method_idx ] . class_id		511774	2		=			
ANR	511811	Identifier	cid		511774	0					
ANR	511812	MemberAccess	bin -> methods [ method_idx ] . class_id		511774	1					
ANR	511813	ArrayIndexing	bin -> methods [ method_idx ]		511774	0					
ANR	511814	PtrMemberAccess	bin -> methods		511774	0					
ANR	511815	Identifier	bin		511774	0					
ANR	511816	Identifier	methods		511774	1					
ANR	511817	Identifier	method_idx		511774	1					
ANR	511818	Identifier	class_id		511774	1					
ANR	511819	IfStatement	if ( cid < 0 || cid >= bin -> header . types_size )		511774	3					
ANR	511820	Condition	cid < 0 || cid >= bin -> header . types_size	1041:5:26903:26942	511774	0	True				
ANR	511821	OrExpression	cid < 0 || cid >= bin -> header . types_size		511774	0		||			
ANR	511822	RelationalExpression	cid < 0		511774	0		<			
ANR	511823	Identifier	cid		511774	0					
ANR	511824	PrimaryExpression	0		511774	1					
ANR	511825	RelationalExpression	cid >= bin -> header . types_size		511774	1		>=			
ANR	511826	Identifier	cid		511774	0					
ANR	511827	MemberAccess	bin -> header . types_size		511774	1					
ANR	511828	PtrMemberAccess	bin -> header		511774	0					
ANR	511829	Identifier	bin		511774	0					
ANR	511830	Identifier	header		511774	1					
ANR	511831	Identifier	types_size		511774	1					
ANR	511832	CompoundStatement		7:47:225:225	511774	1					
ANR	511833	ReturnStatement	return NULL ;	1042:2:26949:26960	511774	0	True				
ANR	511834	Identifier	NULL		511774	0					
ANR	511835	IdentifierDeclStatement	"const char * name = dex_method_name ( bin , method_idx ) ;"	1044:1:26966:27018	511774	4	True				
ANR	511836	IdentifierDecl	"* name = dex_method_name ( bin , method_idx )"		511774	0					
ANR	511837	IdentifierDeclType	const char *		511774	0					
ANR	511838	Identifier	name		511774	1					
ANR	511839	AssignmentExpression	"* name = dex_method_name ( bin , method_idx )"		511774	2		=			
ANR	511840	Identifier	name		511774	0					
ANR	511841	CallExpression	"dex_method_name ( bin , method_idx )"		511774	1					
ANR	511842	Callee	dex_method_name		511774	0					
ANR	511843	Identifier	dex_method_name		511774	0					
ANR	511844	ArgumentList	bin		511774	1					
ANR	511845	Argument	bin		511774	0					
ANR	511846	Identifier	bin		511774	0					
ANR	511847	Argument	method_idx		511774	1					
ANR	511848	Identifier	method_idx		511774	0					
ANR	511849	IfStatement	if ( ! name )		511774	5					
ANR	511850	Condition	! name	1045:5:27025:27029	511774	0	True				
ANR	511851	UnaryOperationExpression	! name		511774	0					
ANR	511852	UnaryOperator	!		511774	0					
ANR	511853	Identifier	name		511774	1					
ANR	511854	CompoundStatement		11:12:312:312	511774	1					
ANR	511855	ReturnStatement	return NULL ;	1046:2:27036:27047	511774	0	True				
ANR	511856	Identifier	NULL		511774	0					
ANR	511857	IdentifierDeclStatement	"const char * className = dex_class_name_byid ( bin , cid ) ;"	1048:1:27053:27107	511774	6	True				
ANR	511858	IdentifierDecl	"* className = dex_class_name_byid ( bin , cid )"		511774	0					
ANR	511859	IdentifierDeclType	const char *		511774	0					
ANR	511860	Identifier	className		511774	1					
ANR	511861	AssignmentExpression	"* className = dex_class_name_byid ( bin , cid )"		511774	2		=			
ANR	511862	Identifier	className		511774	0					
ANR	511863	CallExpression	"dex_class_name_byid ( bin , cid )"		511774	1					
ANR	511864	Callee	dex_class_name_byid		511774	0					
ANR	511865	Identifier	dex_class_name_byid		511774	0					
ANR	511866	ArgumentList	bin		511774	1					
ANR	511867	Argument	bin		511774	0					
ANR	511868	Identifier	bin		511774	0					
ANR	511869	Argument	cid		511774	1					
ANR	511870	Identifier	cid		511774	0					
ANR	511871	IdentifierDeclStatement	char * flagname = NULL ;	1049:1:27110:27131	511774	7	True				
ANR	511872	IdentifierDecl	* flagname = NULL		511774	0					
ANR	511873	IdentifierDeclType	char *		511774	0					
ANR	511874	Identifier	flagname		511774	1					
ANR	511875	AssignmentExpression	* flagname = NULL		511774	2		=			
ANR	511876	Identifier	NULL		511774	0					
ANR	511877	Identifier	NULL		511774	1					
ANR	511878	IfStatement	if ( className )		511774	8					
ANR	511879	Condition	className	1050:5:27138:27146	511774	0	True				
ANR	511880	Identifier	className		511774	0					
ANR	511881	CompoundStatement		19:2:517:573	511774	1					
ANR	511882	IdentifierDeclStatement	char * class_name = strdup ( className ) ;	1051:2:27153:27190	511774	0	True				
ANR	511883	IdentifierDecl	* class_name = strdup ( className )		511774	0					
ANR	511884	IdentifierDeclType	char *		511774	0					
ANR	511885	Identifier	class_name		511774	1					
ANR	511886	AssignmentExpression	* class_name = strdup ( className )		511774	2		=			
ANR	511887	Identifier	class_name		511774	0					
ANR	511888	CallExpression	strdup ( className )		511774	1					
ANR	511889	Callee	strdup		511774	0					
ANR	511890	Identifier	strdup		511774	0					
ANR	511891	ArgumentList	className		511774	1					
ANR	511892	Argument	className		511774	0					
ANR	511893	Identifier	className		511774	0					
ANR	511894	ExpressionStatement	"r_str_replace_char ( class_name , ';' , 0 )"	1052:2:27194:27233	511774	1	True				
ANR	511895	CallExpression	"r_str_replace_char ( class_name , ';' , 0 )"		511774	0					
ANR	511896	Callee	r_str_replace_char		511774	0					
ANR	511897	Identifier	r_str_replace_char		511774	0					
ANR	511898	ArgumentList	class_name		511774	1					
ANR	511899	Argument	class_name		511774	0					
ANR	511900	Identifier	class_name		511774	0					
ANR	511901	Argument	';'		511774	1					
ANR	511902	PrimaryExpression	';'		511774	0					
ANR	511903	Argument	0		511774	2					
ANR	511904	PrimaryExpression	0		511774	0					
ANR	511905	IdentifierDeclStatement	"char * signature = dex_method_signature ( bin , method_idx ) ;"	1053:2:27237:27293	511774	2	True				
ANR	511906	IdentifierDecl	"* signature = dex_method_signature ( bin , method_idx )"		511774	0					
ANR	511907	IdentifierDeclType	char *		511774	0					
ANR	511908	Identifier	signature		511774	1					
ANR	511909	AssignmentExpression	"* signature = dex_method_signature ( bin , method_idx )"		511774	2		=			
ANR	511910	Identifier	signature		511774	0					
ANR	511911	CallExpression	"dex_method_signature ( bin , method_idx )"		511774	1					
ANR	511912	Callee	dex_method_signature		511774	0					
ANR	511913	Identifier	dex_method_signature		511774	0					
ANR	511914	ArgumentList	bin		511774	1					
ANR	511915	Argument	bin		511774	0					
ANR	511916	Identifier	bin		511774	0					
ANR	511917	Argument	method_idx		511774	1					
ANR	511918	Identifier	method_idx		511774	0					
ANR	511919	IfStatement	if ( signature )		511774	3					
ANR	511920	Condition	signature	1054:6:27301:27309	511774	0	True				
ANR	511921	Identifier	signature		511774	0					
ANR	511922	CompoundStatement		20:17:592:592	511774	1					
ANR	511923	ExpressionStatement	"flagname = r_str_newf ( ""%s.%s%s"" , class_name , name , signature )"	1055:3:27317:27379	511774	0	True				
ANR	511924	AssignmentExpression	"flagname = r_str_newf ( ""%s.%s%s"" , class_name , name , signature )"		511774	0		=			
ANR	511925	Identifier	flagname		511774	0					
ANR	511926	CallExpression	"r_str_newf ( ""%s.%s%s"" , class_name , name , signature )"		511774	1					
ANR	511927	Callee	r_str_newf		511774	0					
ANR	511928	Identifier	r_str_newf		511774	0					
ANR	511929	ArgumentList	"""%s.%s%s"""		511774	1					
ANR	511930	Argument	"""%s.%s%s"""		511774	0					
ANR	511931	PrimaryExpression	"""%s.%s%s"""		511774	0					
ANR	511932	Argument	class_name		511774	1					
ANR	511933	Identifier	class_name		511774	0					
ANR	511934	Argument	name		511774	2					
ANR	511935	Identifier	name		511774	0					
ANR	511936	Argument	signature		511774	3					
ANR	511937	Identifier	signature		511774	0					
ANR	511938	ExpressionStatement	free ( signature )	1056:3:27384:27400	511774	1	True				
ANR	511939	CallExpression	free ( signature )		511774	0					
ANR	511940	Callee	free		511774	0					
ANR	511941	Identifier	free		511774	0					
ANR	511942	ArgumentList	signature		511774	1					
ANR	511943	Argument	signature		511774	0					
ANR	511944	Identifier	signature		511774	0					
ANR	511945	ElseStatement	else		511774	0					
ANR	511946	CompoundStatement		23:9:691:691	511774	0					
ANR	511947	ExpressionStatement	"flagname = r_str_newf ( ""%s.%s%s"" , class_name , name , ""???"" )"	1058:3:27416:27474	511774	0	True				
ANR	511948	AssignmentExpression	"flagname = r_str_newf ( ""%s.%s%s"" , class_name , name , ""???"" )"		511774	0		=			
ANR	511949	Identifier	flagname		511774	0					
ANR	511950	CallExpression	"r_str_newf ( ""%s.%s%s"" , class_name , name , ""???"" )"		511774	1					
ANR	511951	Callee	r_str_newf		511774	0					
ANR	511952	Identifier	r_str_newf		511774	0					
ANR	511953	ArgumentList	"""%s.%s%s"""		511774	1					
ANR	511954	Argument	"""%s.%s%s"""		511774	0					
ANR	511955	PrimaryExpression	"""%s.%s%s"""		511774	0					
ANR	511956	Argument	class_name		511774	1					
ANR	511957	Identifier	class_name		511774	0					
ANR	511958	Argument	name		511774	2					
ANR	511959	Identifier	name		511774	0					
ANR	511960	Argument	"""???"""		511774	3					
ANR	511961	PrimaryExpression	"""???"""		511774	0					
ANR	511962	ExpressionStatement	free ( class_name )	1060:2:27482:27499	511774	4	True				
ANR	511963	CallExpression	free ( class_name )		511774	0					
ANR	511964	Callee	free		511774	0					
ANR	511965	Identifier	free		511774	0					
ANR	511966	ArgumentList	class_name		511774	1					
ANR	511967	Argument	class_name		511774	0					
ANR	511968	Identifier	class_name		511774	0					
ANR	511969	ElseStatement	else		511774	0					
ANR	511970	CompoundStatement		28:2:793:849	511774	0					
ANR	511971	IdentifierDeclStatement	"char * signature = dex_method_signature ( bin , method_idx ) ;"	1062:2:27513:27569	511774	0	True				
ANR	511972	IdentifierDecl	"* signature = dex_method_signature ( bin , method_idx )"		511774	0					
ANR	511973	IdentifierDeclType	char *		511774	0					
ANR	511974	Identifier	signature		511774	1					
ANR	511975	AssignmentExpression	"* signature = dex_method_signature ( bin , method_idx )"		511774	2		=			
ANR	511976	Identifier	signature		511774	0					
ANR	511977	CallExpression	"dex_method_signature ( bin , method_idx )"		511774	1					
ANR	511978	Callee	dex_method_signature		511774	0					
ANR	511979	Identifier	dex_method_signature		511774	0					
ANR	511980	ArgumentList	bin		511774	1					
ANR	511981	Argument	bin		511774	0					
ANR	511982	Identifier	bin		511774	0					
ANR	511983	Argument	method_idx		511774	1					
ANR	511984	Identifier	method_idx		511774	0					
ANR	511985	IfStatement	if ( signature )		511774	1					
ANR	511986	Condition	signature	1063:6:27577:27585	511774	0	True				
ANR	511987	Identifier	signature		511774	0					
ANR	511988	CompoundStatement		29:17:868:868	511774	1					
ANR	511989	ExpressionStatement	"flagname = r_str_newf ( ""%s.%s%s"" , ""???"" , name , signature )"	1064:3:27593:27650	511774	0	True				
ANR	511990	AssignmentExpression	"flagname = r_str_newf ( ""%s.%s%s"" , ""???"" , name , signature )"		511774	0		=			
ANR	511991	Identifier	flagname		511774	0					
ANR	511992	CallExpression	"r_str_newf ( ""%s.%s%s"" , ""???"" , name , signature )"		511774	1					
ANR	511993	Callee	r_str_newf		511774	0					
ANR	511994	Identifier	r_str_newf		511774	0					
ANR	511995	ArgumentList	"""%s.%s%s"""		511774	1					
ANR	511996	Argument	"""%s.%s%s"""		511774	0					
ANR	511997	PrimaryExpression	"""%s.%s%s"""		511774	0					
ANR	511998	Argument	"""???"""		511774	1					
ANR	511999	PrimaryExpression	"""???"""		511774	0					
ANR	512000	Argument	name		511774	2					
ANR	512001	Identifier	name		511774	0					
ANR	512002	Argument	signature		511774	3					
ANR	512003	Identifier	signature		511774	0					
ANR	512004	ExpressionStatement	free ( signature )	1065:3:27655:27671	511774	1	True				
ANR	512005	CallExpression	free ( signature )		511774	0					
ANR	512006	Callee	free		511774	0					
ANR	512007	Identifier	free		511774	0					
ANR	512008	ArgumentList	signature		511774	1					
ANR	512009	Argument	signature		511774	0					
ANR	512010	Identifier	signature		511774	0					
ANR	512011	ElseStatement	else		511774	0					
ANR	512012	CompoundStatement		32:9:962:962	511774	0					
ANR	512013	ExpressionStatement	"flagname = r_str_newf ( ""%s.%s%s"" , ""???"" , name , ""???"" )"	1067:3:27687:27740	511774	0	True				
ANR	512014	AssignmentExpression	"flagname = r_str_newf ( ""%s.%s%s"" , ""???"" , name , ""???"" )"		511774	0		=			
ANR	512015	Identifier	flagname		511774	0					
ANR	512016	CallExpression	"r_str_newf ( ""%s.%s%s"" , ""???"" , name , ""???"" )"		511774	1					
ANR	512017	Callee	r_str_newf		511774	0					
ANR	512018	Identifier	r_str_newf		511774	0					
ANR	512019	ArgumentList	"""%s.%s%s"""		511774	1					
ANR	512020	Argument	"""%s.%s%s"""		511774	0					
ANR	512021	PrimaryExpression	"""%s.%s%s"""		511774	0					
ANR	512022	Argument	"""???"""		511774	1					
ANR	512023	PrimaryExpression	"""???"""		511774	0					
ANR	512024	Argument	name		511774	2					
ANR	512025	Identifier	name		511774	0					
ANR	512026	Argument	"""???"""		511774	3					
ANR	512027	PrimaryExpression	"""???"""		511774	0					
ANR	512028	ExpressionStatement	free ( signature )	1068:3:27745:27761	511774	1	True				
ANR	512029	CallExpression	free ( signature )		511774	0					
ANR	512030	Callee	free		511774	0					
ANR	512031	Identifier	free		511774	0					
ANR	512032	ArgumentList	signature		511774	1					
ANR	512033	Argument	signature		511774	0					
ANR	512034	Identifier	signature		511774	0					
ANR	512035	IfStatement	if ( flagname && simplifiedDemangling )		511774	9					
ANR	512036	Condition	flagname && simplifiedDemangling	1071:5:27775:27806	511774	0	True				
ANR	512037	AndExpression	flagname && simplifiedDemangling		511774	0		&&			
ANR	512038	Identifier	flagname		511774	0					
ANR	512039	Identifier	simplifiedDemangling		511774	1					
ANR	512040	CompoundStatement		38:2:1093:1125	511774	1					
ANR	512041	IdentifierDeclStatement	"char * p = strchr ( flagname , '(' ) ;"	1072:2:27813:27845	511774	0	True				
ANR	512042	IdentifierDecl	"* p = strchr ( flagname , '(' )"		511774	0					
ANR	512043	IdentifierDeclType	char *		511774	0					
ANR	512044	Identifier	p		511774	1					
ANR	512045	AssignmentExpression	"* p = strchr ( flagname , '(' )"		511774	2		=			
ANR	512046	Identifier	p		511774	0					
ANR	512047	CallExpression	"strchr ( flagname , '(' )"		511774	1					
ANR	512048	Callee	strchr		511774	0					
ANR	512049	Identifier	strchr		511774	0					
ANR	512050	ArgumentList	flagname		511774	1					
ANR	512051	Argument	flagname		511774	0					
ANR	512052	Identifier	flagname		511774	0					
ANR	512053	Argument	'('		511774	1					
ANR	512054	PrimaryExpression	'('		511774	0					
ANR	512055	IfStatement	if ( p )		511774	1					
ANR	512056	Condition	p	1073:6:27853:27853	511774	0	True				
ANR	512057	Identifier	p		511774	0					
ANR	512058	CompoundStatement		41:3:1152:1181	511774	1					
ANR	512059	ExpressionStatement	* p = 0	1074:3:27861:27867	511774	0	True				
ANR	512060	AssignmentExpression	* p = 0		511774	0		=			
ANR	512061	UnaryOperationExpression	* p		511774	0					
ANR	512062	UnaryOperator	*		511774	0					
ANR	512063	Identifier	p		511774	1					
ANR	512064	PrimaryExpression	0		511774	1					
ANR	512065	IdentifierDeclStatement	"char * q = strchr ( p + 1 , ')' ) ;"	1075:3:27872:27901	511774	1	True				
ANR	512066	IdentifierDecl	"* q = strchr ( p + 1 , ')' )"		511774	0					
ANR	512067	IdentifierDeclType	char *		511774	0					
ANR	512068	Identifier	q		511774	1					
ANR	512069	AssignmentExpression	"* q = strchr ( p + 1 , ')' )"		511774	2		=			
ANR	512070	Identifier	q		511774	0					
ANR	512071	CallExpression	"strchr ( p + 1 , ')' )"		511774	1					
ANR	512072	Callee	strchr		511774	0					
ANR	512073	Identifier	strchr		511774	0					
ANR	512074	ArgumentList	p + 1		511774	1					
ANR	512075	Argument	p + 1		511774	0					
ANR	512076	AdditiveExpression	p + 1		511774	0		+			
ANR	512077	Identifier	p		511774	0					
ANR	512078	PrimaryExpression	1		511774	1					
ANR	512079	Argument	')'		511774	1					
ANR	512080	PrimaryExpression	')'		511774	0					
ANR	512081	IfStatement	if ( q )		511774	2					
ANR	512082	Condition	q	1076:7:27910:27910	511774	0	True				
ANR	512083	Identifier	q		511774	0					
ANR	512084	CompoundStatement		42:10:1193:1193	511774	1					
ANR	512085	ExpressionStatement	simplify ( q + 1 )	1077:4:27919:27935	511774	0	True				
ANR	512086	CallExpression	simplify ( q + 1 )		511774	0					
ANR	512087	Callee	simplify		511774	0					
ANR	512088	Identifier	simplify		511774	0					
ANR	512089	ArgumentList	q + 1		511774	1					
ANR	512090	Argument	q + 1		511774	0					
ANR	512091	AdditiveExpression	q + 1		511774	0		+			
ANR	512092	Identifier	q		511774	0					
ANR	512093	PrimaryExpression	1		511774	1					
ANR	512094	ExpressionStatement	"r_str_cpy ( p , q + 1 )"	1078:4:27941:27961	511774	1	True				
ANR	512095	CallExpression	"r_str_cpy ( p , q + 1 )"		511774	0					
ANR	512096	Callee	r_str_cpy		511774	0					
ANR	512097	Identifier	r_str_cpy		511774	0					
ANR	512098	ArgumentList	p		511774	1					
ANR	512099	Argument	p		511774	0					
ANR	512100	Identifier	p		511774	0					
ANR	512101	Argument	q + 1		511774	1					
ANR	512102	AdditiveExpression	q + 1		511774	0		+			
ANR	512103	Identifier	q		511774	0					
ANR	512104	PrimaryExpression	1		511774	1					
ANR	512105	ExpressionStatement	simplify ( flagname )	1080:3:27971:27990	511774	3	True				
ANR	512106	CallExpression	simplify ( flagname )		511774	0					
ANR	512107	Callee	simplify		511774	0					
ANR	512108	Identifier	simplify		511774	0					
ANR	512109	ArgumentList	flagname		511774	1					
ANR	512110	Argument	flagname		511774	0					
ANR	512111	Identifier	flagname		511774	0					
ANR	512112	ReturnStatement	return flagname ;	1084:1:28002:28017	511774	10	True				
ANR	512113	Identifier	flagname		511774	0					
ANR	512114	ReturnType	static char *		511774	1					
ANR	512115	Identifier	dex_method_fullname		511774	2					
ANR	512116	ParameterList	"RBinDexObj * bin , int method_idx"		511774	3					
ANR	512117	Parameter	RBinDexObj * bin	1035:33:26686:26700	511774	0	True				
ANR	512118	ParameterType	RBinDexObj *		511774	0					
ANR	512119	Identifier	bin		511774	1					
ANR	512120	Parameter	int method_idx	1035:50:26703:26716	511774	1	True				
ANR	512121	ParameterType	int		511774	0					
ANR	512122	Identifier	method_idx		511774	1					
ANR	512123	CFGEntryNode	ENTRY		511774		True				
ANR	512124	CFGExitNode	EXIT		511774		True				
ANR	512125	Symbol	signature		511774						
ANR	512126	Symbol	bin		511774						
ANR	512127	Symbol	bin -> header		511774						
ANR	512128	Symbol	bin -> methods [ method_idx ] . class_id		511774						
ANR	512129	Symbol	strchr		511774						
ANR	512130	Symbol	className		511774						
ANR	512131	Symbol	flagname		511774						
ANR	512132	Symbol	dex_method_name		511774						
ANR	512133	Symbol	dex_class_name_byid		511774						
ANR	512134	Symbol	r_str_newf		511774						
ANR	512135	Symbol	* bin		511774						
ANR	512136	Symbol	bin -> header . types_size		511774						
ANR	512137	Symbol	bin -> methods		511774						
ANR	512138	Symbol	* * bin		511774						
ANR	512139	Symbol	class_name		511774						
ANR	512140	Symbol	dex_method_signature		511774						
ANR	512141	Symbol	NULL		511774						
ANR	512142	Symbol	p		511774						
ANR	512143	Symbol	q		511774						
ANR	512144	Symbol	method_idx		511774						
ANR	512145	Symbol	* bin -> methods		511774						
ANR	512146	Symbol	name		511774						
ANR	512147	Symbol	simplifiedDemangling		511774						
ANR	512148	Symbol	* p		511774						
ANR	512149	Symbol	bin -> types		511774						
ANR	512150	Symbol	bin -> header . method_size		511774						
ANR	512151	Symbol	strdup		511774						
ANR	512152	Symbol	* method_idx		511774						
ANR	512153	Symbol	cid		511774						
ANR	512154	Function	dex_get_type_offset	1087:0:28022:28327							
ANR	512155	FunctionDef	"dex_get_type_offset (RBinFile * bf , int type_idx)"		512154	0					
ANR	512156	CompoundStatement		1087:60:28082:28327	512154	0					
ANR	512157	IdentifierDeclStatement	RBinDexObj * bin = ( RBinDexObj * ) bf -> o -> bin_obj ;	1088:1:28085:28131	512154	0	True				
ANR	512158	IdentifierDecl	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		512154	0					
ANR	512159	IdentifierDeclType	RBinDexObj *		512154	0					
ANR	512160	Identifier	bin		512154	1					
ANR	512161	AssignmentExpression	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		512154	2		=			
ANR	512162	Identifier	bin		512154	0					
ANR	512163	CastExpression	( RBinDexObj * ) bf -> o -> bin_obj		512154	1					
ANR	512164	CastTarget	RBinDexObj *		512154	0					
ANR	512165	PtrMemberAccess	bf -> o -> bin_obj		512154	1					
ANR	512166	PtrMemberAccess	bf -> o		512154	0					
ANR	512167	Identifier	bf		512154	0					
ANR	512168	Identifier	o		512154	1					
ANR	512169	Identifier	bin_obj		512154	1					
ANR	512170	IfStatement	if ( ! bin || ! bin -> types )		512154	1					
ANR	512171	Condition	! bin || ! bin -> types	1089:5:28138:28156	512154	0	True				
ANR	512172	OrExpression	! bin || ! bin -> types		512154	0		||			
ANR	512173	UnaryOperationExpression	! bin		512154	0					
ANR	512174	UnaryOperator	!		512154	0					
ANR	512175	Identifier	bin		512154	1					
ANR	512176	UnaryOperationExpression	! bin -> types		512154	1					
ANR	512177	UnaryOperator	!		512154	0					
ANR	512178	PtrMemberAccess	bin -> types		512154	1					
ANR	512179	Identifier	bin		512154	0					
ANR	512180	Identifier	types		512154	1					
ANR	512181	CompoundStatement		3:26:76:76	512154	1					
ANR	512182	ReturnStatement	return 0 ;	1090:2:28163:28171	512154	0	True				
ANR	512183	PrimaryExpression	0		512154	0					
ANR	512184	IfStatement	if ( type_idx < 0 || type_idx >= bin -> header . types_size )		512154	2					
ANR	512185	Condition	type_idx < 0 || type_idx >= bin -> header . types_size	1092:5:28181:28230	512154	0	True				
ANR	512186	OrExpression	type_idx < 0 || type_idx >= bin -> header . types_size		512154	0		||			
ANR	512187	RelationalExpression	type_idx < 0		512154	0		<			
ANR	512188	Identifier	type_idx		512154	0					
ANR	512189	PrimaryExpression	0		512154	1					
ANR	512190	RelationalExpression	type_idx >= bin -> header . types_size		512154	1		>=			
ANR	512191	Identifier	type_idx		512154	0					
ANR	512192	MemberAccess	bin -> header . types_size		512154	1					
ANR	512193	PtrMemberAccess	bin -> header		512154	0					
ANR	512194	Identifier	bin		512154	0					
ANR	512195	Identifier	header		512154	1					
ANR	512196	Identifier	types_size		512154	1					
ANR	512197	CompoundStatement		6:57:150:150	512154	1					
ANR	512198	ReturnStatement	return 0 ;	1093:2:28237:28245	512154	0	True				
ANR	512199	PrimaryExpression	0		512154	0					
ANR	512200	ReturnStatement	return bin -> header . types_offset + type_idx * 0x04 ;	1095:1:28251:28300	512154	3	True				
ANR	512201	AdditiveExpression	bin -> header . types_offset + type_idx * 0x04		512154	0		+			
ANR	512202	MemberAccess	bin -> header . types_offset		512154	0					
ANR	512203	PtrMemberAccess	bin -> header		512154	0					
ANR	512204	Identifier	bin		512154	0					
ANR	512205	Identifier	header		512154	1					
ANR	512206	Identifier	types_offset		512154	1					
ANR	512207	MultiplicativeExpression	type_idx * 0x04		512154	1		*			
ANR	512208	Identifier	type_idx		512154	0					
ANR	512209	PrimaryExpression	0x04		512154	1					
ANR	512210	ReturnType	static ut64		512154	1					
ANR	512211	Identifier	dex_get_type_offset		512154	2					
ANR	512212	ParameterList	"RBinFile * bf , int type_idx"		512154	3					
ANR	512213	Parameter	RBinFile * bf	1087:32:28054:28065	512154	0	True				
ANR	512214	ParameterType	RBinFile *		512154	0					
ANR	512215	Identifier	bf		512154	1					
ANR	512216	Parameter	int type_idx	1087:46:28068:28079	512154	1	True				
ANR	512217	ParameterType	int		512154	0					
ANR	512218	Identifier	type_idx		512154	1					
ANR	512219	CFGEntryNode	ENTRY		512154		True				
ANR	512220	CFGExitNode	EXIT		512154		True				
ANR	512221	Symbol	bf -> o -> bin_obj		512154						
ANR	512222	Symbol	bf		512154						
ANR	512223	Symbol	bin		512154						
ANR	512224	Symbol	bin -> header		512154						
ANR	512225	Symbol	* bf		512154						
ANR	512226	Symbol	bin -> header . types_offset		512154						
ANR	512227	Symbol	type_idx		512154						
ANR	512228	Symbol	* bin		512154						
ANR	512229	Symbol	* bf -> o		512154						
ANR	512230	Symbol	* * bf		512154						
ANR	512231	Symbol	bf -> o		512154						
ANR	512232	Symbol	bin -> header . types_size		512154						
ANR	512233	Symbol	bin -> types		512154						
ANR	512234	Function	dex_class_super_name	1098:0:28330:28624							
ANR	512235	FunctionDef	"dex_class_super_name (RBinDexObj * bin , RBinDexClass * c)"		512234	0					
ANR	512236	CompoundStatement		1098:74:28404:28624	512234	0					
ANR	512237	ExpressionStatement	"r_return_val_if_fail ( bin && bin -> types && c , NULL )"	1099:1:28407:28458	512234	0	True				
ANR	512238	CallExpression	"r_return_val_if_fail ( bin && bin -> types && c , NULL )"		512234	0					
ANR	512239	Callee	r_return_val_if_fail		512234	0					
ANR	512240	Identifier	r_return_val_if_fail		512234	0					
ANR	512241	ArgumentList	bin && bin -> types && c		512234	1					
ANR	512242	Argument	bin && bin -> types && c		512234	0					
ANR	512243	AndExpression	bin && bin -> types && c		512234	0		&&			
ANR	512244	Identifier	bin		512234	0					
ANR	512245	AndExpression	bin -> types && c		512234	1		&&			
ANR	512246	PtrMemberAccess	bin -> types		512234	0					
ANR	512247	Identifier	bin		512234	0					
ANR	512248	Identifier	types		512234	1					
ANR	512249	Identifier	c		512234	1					
ANR	512250	Argument	NULL		512234	1					
ANR	512251	Identifier	NULL		512234	0					
ANR	512252	IdentifierDeclStatement	int cid = c -> super_class ;	1101:1:28462:28486	512234	1	True				
ANR	512253	IdentifierDecl	cid = c -> super_class		512234	0					
ANR	512254	IdentifierDeclType	int		512234	0					
ANR	512255	Identifier	cid		512234	1					
ANR	512256	AssignmentExpression	cid = c -> super_class		512234	2		=			
ANR	512257	Identifier	cid		512234	0					
ANR	512258	PtrMemberAccess	c -> super_class		512234	1					
ANR	512259	Identifier	c		512234	0					
ANR	512260	Identifier	super_class		512234	1					
ANR	512261	IfStatement	if ( cid < 0 || cid >= bin -> header . types_size )		512234	2					
ANR	512262	Condition	cid < 0 || cid >= bin -> header . types_size	1102:5:28493:28532	512234	0	True				
ANR	512263	OrExpression	cid < 0 || cid >= bin -> header . types_size		512234	0		||			
ANR	512264	RelationalExpression	cid < 0		512234	0		<			
ANR	512265	Identifier	cid		512234	0					
ANR	512266	PrimaryExpression	0		512234	1					
ANR	512267	RelationalExpression	cid >= bin -> header . types_size		512234	1		>=			
ANR	512268	Identifier	cid		512234	0					
ANR	512269	MemberAccess	bin -> header . types_size		512234	1					
ANR	512270	PtrMemberAccess	bin -> header		512234	0					
ANR	512271	Identifier	bin		512234	0					
ANR	512272	Identifier	header		512234	1					
ANR	512273	Identifier	types_size		512234	1					
ANR	512274	CompoundStatement		5:47:130:130	512234	1					
ANR	512275	ReturnStatement	return NULL ;	1103:2:28539:28550	512234	0	True				
ANR	512276	Identifier	NULL		512234	0					
ANR	512277	IdentifierDeclStatement	int tid = bin -> types [ cid ] . descriptor_id ;	1105:1:28556:28595	512234	3	True				
ANR	512278	IdentifierDecl	tid = bin -> types [ cid ] . descriptor_id		512234	0					
ANR	512279	IdentifierDeclType	int		512234	0					
ANR	512280	Identifier	tid		512234	1					
ANR	512281	AssignmentExpression	tid = bin -> types [ cid ] . descriptor_id		512234	2		=			
ANR	512282	Identifier	tid		512234	0					
ANR	512283	MemberAccess	bin -> types [ cid ] . descriptor_id		512234	1					
ANR	512284	ArrayIndexing	bin -> types [ cid ]		512234	0					
ANR	512285	PtrMemberAccess	bin -> types		512234	0					
ANR	512286	Identifier	bin		512234	0					
ANR	512287	Identifier	types		512234	1					
ANR	512288	Identifier	cid		512234	1					
ANR	512289	Identifier	descriptor_id		512234	1					
ANR	512290	ReturnStatement	"return getstr ( bin , tid ) ;"	1106:1:28598:28622	512234	4	True				
ANR	512291	CallExpression	"getstr ( bin , tid )"		512234	0					
ANR	512292	Callee	getstr		512234	0					
ANR	512293	Identifier	getstr		512234	0					
ANR	512294	ArgumentList	bin		512234	1					
ANR	512295	Argument	bin		512234	0					
ANR	512296	Identifier	bin		512234	0					
ANR	512297	Argument	tid		512234	1					
ANR	512298	Identifier	tid		512234	0					
ANR	512299	ReturnType	static const char *		512234	1					
ANR	512300	Identifier	dex_class_super_name		512234	2					
ANR	512301	ParameterList	"RBinDexObj * bin , RBinDexClass * c"		512234	3					
ANR	512302	Parameter	RBinDexObj * bin	1098:40:28370:28384	512234	0	True				
ANR	512303	ParameterType	RBinDexObj *		512234	0					
ANR	512304	Identifier	bin		512234	1					
ANR	512305	Parameter	RBinDexClass * c	1098:57:28387:28401	512234	1	True				
ANR	512306	ParameterType	RBinDexClass *		512234	0					
ANR	512307	Identifier	c		512234	1					
ANR	512308	CFGEntryNode	ENTRY		512234		True				
ANR	512309	CFGExitNode	EXIT		512234		True				
ANR	512310	Symbol	c		512234						
ANR	512311	Symbol	NULL		512234						
ANR	512312	Symbol	* bin -> types		512234						
ANR	512313	Symbol	bin		512234						
ANR	512314	Symbol	bin -> header		512234						
ANR	512315	Symbol	* c		512234						
ANR	512316	Symbol	bin -> types [ cid ] . descriptor_id		512234						
ANR	512317	Symbol	* bin		512234						
ANR	512318	Symbol	tid		512234						
ANR	512319	Symbol	getstr		512234						
ANR	512320	Symbol	bin -> header . types_size		512234						
ANR	512321	Symbol	* cid		512234						
ANR	512322	Symbol	bin -> types		512234						
ANR	512323	Symbol	* * bin		512234						
ANR	512324	Symbol	c -> super_class		512234						
ANR	512325	Symbol	cid		512234						
ANR	512326	Function	parse_dex_class_fields	1109:0:28627:31003							
ANR	512327	FunctionDef	"parse_dex_class_fields (RBinFile * bf , RBinDexClass * c , RBinClass * cls , const ut8 * p , const ut8 * p_end , int * sym_count , ut64 fields_count , bool is_sfield)"		512326	0					
ANR	512328	CompoundStatement		1110:85:28800:31003	512326	0					
ANR	512329	IdentifierDeclStatement	RBinDexObj * dex = bf -> o -> bin_obj ;	1111:1:28803:28835	512326	0	True				
ANR	512330	IdentifierDecl	* dex = bf -> o -> bin_obj		512326	0					
ANR	512331	IdentifierDeclType	RBinDexObj *		512326	0					
ANR	512332	Identifier	dex		512326	1					
ANR	512333	AssignmentExpression	* dex = bf -> o -> bin_obj		512326	2		=			
ANR	512334	Identifier	dex		512326	0					
ANR	512335	PtrMemberAccess	bf -> o -> bin_obj		512326	1					
ANR	512336	PtrMemberAccess	bf -> o		512326	0					
ANR	512337	Identifier	bf		512326	0					
ANR	512338	Identifier	o		512326	1					
ANR	512339	Identifier	bin_obj		512326	1					
ANR	512340	IdentifierDeclStatement	RBin * bin = bf -> rbin ;	1112:1:28838:28858	512326	1	True				
ANR	512341	IdentifierDecl	* bin = bf -> rbin		512326	0					
ANR	512342	IdentifierDeclType	RBin *		512326	0					
ANR	512343	Identifier	bin		512326	1					
ANR	512344	AssignmentExpression	* bin = bf -> rbin		512326	2		=			
ANR	512345	Identifier	bin		512326	0					
ANR	512346	PtrMemberAccess	bf -> rbin		512326	1					
ANR	512347	Identifier	bf		512326	0					
ANR	512348	Identifier	rbin		512326	1					
ANR	512349	IdentifierDeclStatement	ut64 lastIndex = 0 ;	1113:1:28861:28879	512326	2	True				
ANR	512350	IdentifierDecl	lastIndex = 0		512326	0					
ANR	512351	IdentifierDeclType	ut64		512326	0					
ANR	512352	Identifier	lastIndex		512326	1					
ANR	512353	AssignmentExpression	lastIndex = 0		512326	2		=			
ANR	512354	Identifier	lastIndex		512326	0					
ANR	512355	PrimaryExpression	0		512326	1					
ANR	512356	IdentifierDeclStatement	ut8 ff [ sizeof ( DexField ) ] = { 0 } ;	1114:1:28882:28913	512326	3	True				
ANR	512357	IdentifierDecl	ff [ sizeof ( DexField ) ] = { 0 }		512326	0					
ANR	512358	IdentifierDeclType	ut8 [ sizeof ( DexField ) ]		512326	0					
ANR	512359	Identifier	ff		512326	1					
ANR	512360	SizeofExpression	sizeof ( DexField )		512326	2					
ANR	512361	Sizeof	sizeof		512326	0					
ANR	512362	SizeofOperand	DexField		512326	1					
ANR	512363	AssignmentExpression	ff [ sizeof ( DexField ) ] = { 0 }		512326	3		=			
ANR	512364	Identifier	ff		512326	0					
ANR	512365	InitializerList	0		512326	1					
ANR	512366	PrimaryExpression	0		512326	0					
ANR	512367	IdentifierDeclStatement	"int total , i , tid ;"	1115:1:28916:28933	512326	4	True				
ANR	512368	IdentifierDecl	total		512326	0					
ANR	512369	IdentifierDeclType	int		512326	0					
ANR	512370	Identifier	total		512326	1					
ANR	512371	IdentifierDecl	i		512326	1					
ANR	512372	IdentifierDeclType	int		512326	0					
ANR	512373	Identifier	i		512326	1					
ANR	512374	IdentifierDecl	tid		512326	2					
ANR	512375	IdentifierDeclType	int		512326	0					
ANR	512376	Identifier	tid		512326	1					
ANR	512377	IdentifierDeclStatement	DexField field ;	1116:1:28936:28950	512326	5	True				
ANR	512378	IdentifierDecl	field		512326	0					
ANR	512379	IdentifierDeclType	DexField		512326	0					
ANR	512380	Identifier	field		512326	1					
ANR	512381	IdentifierDeclStatement	const char * type_str ;	1117:1:28953:28973	512326	6	True				
ANR	512382	IdentifierDecl	* type_str		512326	0					
ANR	512383	IdentifierDeclType	const char *		512326	0					
ANR	512384	Identifier	type_str		512326	1					
ANR	512385	ForStatement	for ( i = 0 ; i < fields_count ; i ++ )		512326	7					
ANR	512386	ForInit	i = 0 ;	1118:6:28981:28986	512326	0	True				
ANR	512387	AssignmentExpression	i = 0		512326	0		=			
ANR	512388	Identifier	i		512326	0					
ANR	512389	PrimaryExpression	0		512326	1					
ANR	512390	Condition	i < fields_count	1118:13:28988:29003	512326	1	True				
ANR	512391	RelationalExpression	i < fields_count		512326	0		<			
ANR	512392	Identifier	i		512326	0					
ANR	512393	Identifier	fields_count		512326	1					
ANR	512394	PostIncDecOperationExpression	i ++	1118:31:29006:29008	512326	2	True				
ANR	512395	Identifier	i		512326	0					
ANR	512396	IncDec	++		512326	1					
ANR	512397	CompoundStatement		60:2:1933:1970	512326	3					
ANR	512398	IdentifierDeclStatement	"ut64 fieldIndex , accessFlags ;"	1119:2:29015:29043	512326	0	True				
ANR	512399	IdentifierDecl	fieldIndex		512326	0					
ANR	512400	IdentifierDeclType	ut64		512326	0					
ANR	512401	Identifier	fieldIndex		512326	1					
ANR	512402	IdentifierDecl	accessFlags		512326	1					
ANR	512403	IdentifierDeclType	ut64		512326	0					
ANR	512404	Identifier	accessFlags		512326	1					
ANR	512405	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & fieldIndex )"	1121:2:29048:29089	512326	1	True				
ANR	512406	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & fieldIndex )"		512326	0		=			
ANR	512407	Identifier	p		512326	0					
ANR	512408	CallExpression	"r_uleb128 ( p , p_end - p , & fieldIndex )"		512326	1					
ANR	512409	Callee	r_uleb128		512326	0					
ANR	512410	Identifier	r_uleb128		512326	0					
ANR	512411	ArgumentList	p		512326	1					
ANR	512412	Argument	p		512326	0					
ANR	512413	Identifier	p		512326	0					
ANR	512414	Argument	p_end - p		512326	1					
ANR	512415	AdditiveExpression	p_end - p		512326	0		-			
ANR	512416	Identifier	p_end		512326	0					
ANR	512417	Identifier	p		512326	1					
ANR	512418	Argument	& fieldIndex		512326	2					
ANR	512419	UnaryOperationExpression	& fieldIndex		512326	0					
ANR	512420	UnaryOperator	&		512326	0					
ANR	512421	Identifier	fieldIndex		512326	1					
ANR	512422	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & accessFlags )"	1122:2:29107:29149	512326	2	True				
ANR	512423	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & accessFlags )"		512326	0		=			
ANR	512424	Identifier	p		512326	0					
ANR	512425	CallExpression	"r_uleb128 ( p , p_end - p , & accessFlags )"		512326	1					
ANR	512426	Callee	r_uleb128		512326	0					
ANR	512427	Identifier	r_uleb128		512326	0					
ANR	512428	ArgumentList	p		512326	1					
ANR	512429	Argument	p		512326	0					
ANR	512430	Identifier	p		512326	0					
ANR	512431	Argument	p_end - p		512326	1					
ANR	512432	AdditiveExpression	p_end - p		512326	0		-			
ANR	512433	Identifier	p_end		512326	0					
ANR	512434	Identifier	p		512326	1					
ANR	512435	Argument	& accessFlags		512326	2					
ANR	512436	UnaryOperationExpression	& accessFlags		512326	0					
ANR	512437	UnaryOperator	&		512326	0					
ANR	512438	Identifier	accessFlags		512326	1					
ANR	512439	ExpressionStatement	fieldIndex += lastIndex	1123:2:29168:29191	512326	3	True				
ANR	512440	AssignmentExpression	fieldIndex += lastIndex		512326	0		+=			
ANR	512441	Identifier	fieldIndex		512326	0					
ANR	512442	Identifier	lastIndex		512326	1					
ANR	512443	ExpressionStatement	total = dex -> header . fields_offset + ( sizeof ( DexField ) * fieldIndex )	1124:2:29195:29263	512326	4	True				
ANR	512444	AssignmentExpression	total = dex -> header . fields_offset + ( sizeof ( DexField ) * fieldIndex )		512326	0		=			
ANR	512445	Identifier	total		512326	0					
ANR	512446	AdditiveExpression	dex -> header . fields_offset + ( sizeof ( DexField ) * fieldIndex )		512326	1		+			
ANR	512447	MemberAccess	dex -> header . fields_offset		512326	0					
ANR	512448	PtrMemberAccess	dex -> header		512326	0					
ANR	512449	Identifier	dex		512326	0					
ANR	512450	Identifier	header		512326	1					
ANR	512451	Identifier	fields_offset		512326	1					
ANR	512452	MultiplicativeExpression	sizeof ( DexField ) * fieldIndex		512326	1		*			
ANR	512453	SizeofExpression	sizeof ( DexField )		512326	0					
ANR	512454	Sizeof	sizeof		512326	0					
ANR	512455	SizeofOperand	DexField		512326	1					
ANR	512456	Identifier	fieldIndex		512326	1					
ANR	512457	IfStatement	if ( total >= dex -> size || total < dex -> header . fields_offset )		512326	5					
ANR	512458	Condition	total >= dex -> size || total < dex -> header . fields_offset	1125:6:29271:29325	512326	0	True				
ANR	512459	OrExpression	total >= dex -> size || total < dex -> header . fields_offset		512326	0		||			
ANR	512460	RelationalExpression	total >= dex -> size		512326	0		>=			
ANR	512461	Identifier	total		512326	0					
ANR	512462	PtrMemberAccess	dex -> size		512326	1					
ANR	512463	Identifier	dex		512326	0					
ANR	512464	Identifier	size		512326	1					
ANR	512465	RelationalExpression	total < dex -> header . fields_offset		512326	1		<			
ANR	512466	Identifier	total		512326	0					
ANR	512467	MemberAccess	dex -> header . fields_offset		512326	1					
ANR	512468	PtrMemberAccess	dex -> header		512326	0					
ANR	512469	Identifier	dex		512326	0					
ANR	512470	Identifier	header		512326	1					
ANR	512471	Identifier	fields_offset		512326	1					
ANR	512472	CompoundStatement		16:63:527:527	512326	1					
ANR	512473	BreakStatement	break ;	1126:3:29333:29338	512326	0	True				
ANR	512474	IfStatement	"if ( r_buf_read_at ( bf -> buf , total , ff , sizeof ( DexField ) ) != sizeof ( DexField ) )"		512326	6					
ANR	512475	Condition	"r_buf_read_at ( bf -> buf , total , ff , sizeof ( DexField ) ) != sizeof ( DexField )"	1128:6:29350:29427	512326	0	True				
ANR	512476	EqualityExpression	"r_buf_read_at ( bf -> buf , total , ff , sizeof ( DexField ) ) != sizeof ( DexField )"		512326	0		!=			
ANR	512477	CallExpression	"r_buf_read_at ( bf -> buf , total , ff , sizeof ( DexField ) )"		512326	0					
ANR	512478	Callee	r_buf_read_at		512326	0					
ANR	512479	Identifier	r_buf_read_at		512326	0					
ANR	512480	ArgumentList	bf -> buf		512326	1					
ANR	512481	Argument	bf -> buf		512326	0					
ANR	512482	PtrMemberAccess	bf -> buf		512326	0					
ANR	512483	Identifier	bf		512326	0					
ANR	512484	Identifier	buf		512326	1					
ANR	512485	Argument	total		512326	1					
ANR	512486	Identifier	total		512326	0					
ANR	512487	Argument	ff		512326	2					
ANR	512488	Identifier	ff		512326	0					
ANR	512489	Argument	sizeof ( DexField )		512326	3					
ANR	512490	SizeofExpression	sizeof ( DexField )		512326	0					
ANR	512491	Sizeof	sizeof		512326	0					
ANR	512492	SizeofOperand	DexField		512326	1					
ANR	512493	SizeofExpression	sizeof ( DexField )		512326	1					
ANR	512494	Sizeof	sizeof		512326	0					
ANR	512495	SizeofOperand	DexField		512326	1					
ANR	512496	CompoundStatement		20:45:629:629	512326	1					
ANR	512497	BreakStatement	break ;	1130:3:29435:29440	512326	0	True				
ANR	512498	ExpressionStatement	field . class_id = r_read_le16 ( ff )	1132:2:29448:29481	512326	7	True				
ANR	512499	AssignmentExpression	field . class_id = r_read_le16 ( ff )		512326	0		=			
ANR	512500	MemberAccess	field . class_id		512326	0					
ANR	512501	Identifier	field		512326	0					
ANR	512502	Identifier	class_id		512326	1					
ANR	512503	CallExpression	r_read_le16 ( ff )		512326	1					
ANR	512504	Callee	r_read_le16		512326	0					
ANR	512505	Identifier	r_read_le16		512326	0					
ANR	512506	ArgumentList	ff		512326	1					
ANR	512507	Argument	ff		512326	0					
ANR	512508	Identifier	ff		512326	0					
ANR	512509	ExpressionStatement	field . type_id = r_read_le16 ( ff + 2 )	1133:2:29485:29521	512326	8	True				
ANR	512510	AssignmentExpression	field . type_id = r_read_le16 ( ff + 2 )		512326	0		=			
ANR	512511	MemberAccess	field . type_id		512326	0					
ANR	512512	Identifier	field		512326	0					
ANR	512513	Identifier	type_id		512326	1					
ANR	512514	CallExpression	r_read_le16 ( ff + 2 )		512326	1					
ANR	512515	Callee	r_read_le16		512326	0					
ANR	512516	Identifier	r_read_le16		512326	0					
ANR	512517	ArgumentList	ff + 2		512326	1					
ANR	512518	Argument	ff + 2		512326	0					
ANR	512519	AdditiveExpression	ff + 2		512326	0		+			
ANR	512520	Identifier	ff		512326	0					
ANR	512521	PrimaryExpression	2		512326	1					
ANR	512522	ExpressionStatement	field . name_id = r_read_le32 ( ff + 4 )	1134:2:29525:29561	512326	9	True				
ANR	512523	AssignmentExpression	field . name_id = r_read_le32 ( ff + 4 )		512326	0		=			
ANR	512524	MemberAccess	field . name_id		512326	0					
ANR	512525	Identifier	field		512326	0					
ANR	512526	Identifier	name_id		512326	1					
ANR	512527	CallExpression	r_read_le32 ( ff + 4 )		512326	1					
ANR	512528	Callee	r_read_le32		512326	0					
ANR	512529	Identifier	r_read_le32		512326	0					
ANR	512530	ArgumentList	ff + 4		512326	1					
ANR	512531	Argument	ff + 4		512326	0					
ANR	512532	AdditiveExpression	ff + 4		512326	0		+			
ANR	512533	Identifier	ff		512326	0					
ANR	512534	PrimaryExpression	4		512326	1					
ANR	512535	IdentifierDeclStatement	"char * fieldName = getstr ( dex , field . name_id ) ;"	1135:2:29565:29610	512326	10	True				
ANR	512536	IdentifierDecl	"* fieldName = getstr ( dex , field . name_id )"		512326	0					
ANR	512537	IdentifierDeclType	char *		512326	0					
ANR	512538	Identifier	fieldName		512326	1					
ANR	512539	AssignmentExpression	"* fieldName = getstr ( dex , field . name_id )"		512326	2		=			
ANR	512540	Identifier	fieldName		512326	0					
ANR	512541	CallExpression	"getstr ( dex , field . name_id )"		512326	1					
ANR	512542	Callee	getstr		512326	0					
ANR	512543	Identifier	getstr		512326	0					
ANR	512544	ArgumentList	dex		512326	1					
ANR	512545	Argument	dex		512326	0					
ANR	512546	Identifier	dex		512326	0					
ANR	512547	Argument	field . name_id		512326	1					
ANR	512548	MemberAccess	field . name_id		512326	0					
ANR	512549	Identifier	field		512326	0					
ANR	512550	Identifier	name_id		512326	1					
ANR	512551	IfStatement	if ( field . type_id >= dex -> header . types_size )		512326	11					
ANR	512552	Condition	field . type_id >= dex -> header . types_size	1136:6:29618:29656	512326	0	True				
ANR	512553	RelationalExpression	field . type_id >= dex -> header . types_size		512326	0		>=			
ANR	512554	MemberAccess	field . type_id		512326	0					
ANR	512555	Identifier	field		512326	0					
ANR	512556	Identifier	type_id		512326	1					
ANR	512557	MemberAccess	dex -> header . types_size		512326	1					
ANR	512558	PtrMemberAccess	dex -> header		512326	0					
ANR	512559	Identifier	dex		512326	0					
ANR	512560	Identifier	header		512326	1					
ANR	512561	Identifier	types_size		512326	1					
ANR	512562	CompoundStatement		27:47:858:858	512326	1					
ANR	512563	BreakStatement	break ;	1137:3:29664:29669	512326	0	True				
ANR	512564	ExpressionStatement	tid = dex -> types [ field . type_id ] . descriptor_id	1139:2:29677:29722	512326	12	True				
ANR	512565	AssignmentExpression	tid = dex -> types [ field . type_id ] . descriptor_id		512326	0		=			
ANR	512566	Identifier	tid		512326	0					
ANR	512567	MemberAccess	dex -> types [ field . type_id ] . descriptor_id		512326	1					
ANR	512568	ArrayIndexing	dex -> types [ field . type_id ]		512326	0					
ANR	512569	PtrMemberAccess	dex -> types		512326	0					
ANR	512570	Identifier	dex		512326	0					
ANR	512571	Identifier	types		512326	1					
ANR	512572	MemberAccess	field . type_id		512326	1					
ANR	512573	Identifier	field		512326	0					
ANR	512574	Identifier	type_id		512326	1					
ANR	512575	Identifier	descriptor_id		512326	1					
ANR	512576	ExpressionStatement	"type_str = getstr ( dex , tid )"	1140:2:29726:29754	512326	13	True				
ANR	512577	AssignmentExpression	"type_str = getstr ( dex , tid )"		512326	0		=			
ANR	512578	Identifier	type_str		512326	0					
ANR	512579	CallExpression	"getstr ( dex , tid )"		512326	1					
ANR	512580	Callee	getstr		512326	0					
ANR	512581	Identifier	getstr		512326	0					
ANR	512582	ArgumentList	dex		512326	1					
ANR	512583	Argument	dex		512326	0					
ANR	512584	Identifier	dex		512326	0					
ANR	512585	Argument	tid		512326	1					
ANR	512586	Identifier	tid		512326	0					
ANR	512587	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1141:2:29758:29795	512326	14	True				
ANR	512588	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		512326	0					
ANR	512589	IdentifierDeclType	RBinSymbol *		512326	0					
ANR	512590	Identifier	sym		512326	1					
ANR	512591	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		512326	2		=			
ANR	512592	Identifier	sym		512326	0					
ANR	512593	CallExpression	R_NEW0 ( RBinSymbol )		512326	1					
ANR	512594	Callee	R_NEW0		512326	0					
ANR	512595	Identifier	R_NEW0		512326	0					
ANR	512596	ArgumentList	RBinSymbol		512326	1					
ANR	512597	Argument	RBinSymbol		512326	0					
ANR	512598	Identifier	RBinSymbol		512326	0					
ANR	512599	IfStatement	if ( ! sym )		512326	15					
ANR	512600	Condition	! sym	1142:6:29803:29806	512326	0	True				
ANR	512601	UnaryOperationExpression	! sym		512326	0					
ANR	512602	UnaryOperator	!		512326	0					
ANR	512603	Identifier	sym		512326	1					
ANR	512604	CompoundStatement		33:12:1008:1008	512326	1					
ANR	512605	BreakStatement	break ;	1143:3:29814:29819	512326	0	True				
ANR	512606	IfStatement	if ( is_sfield )		512326	16					
ANR	512607	Condition	is_sfield	1145:6:29831:29839	512326	0	True				
ANR	512608	Identifier	is_sfield		512326	0					
ANR	512609	CompoundStatement		36:17:1041:1041	512326	1					
ANR	512610	ExpressionStatement	"sym -> name = r_str_newf ( ""%s.sfield_%s:%s"" , cls -> name , fieldName , type_str )"	1146:3:29847:29921	512326	0	True				
ANR	512611	AssignmentExpression	"sym -> name = r_str_newf ( ""%s.sfield_%s:%s"" , cls -> name , fieldName , type_str )"		512326	0		=			
ANR	512612	PtrMemberAccess	sym -> name		512326	0					
ANR	512613	Identifier	sym		512326	0					
ANR	512614	Identifier	name		512326	1					
ANR	512615	CallExpression	"r_str_newf ( ""%s.sfield_%s:%s"" , cls -> name , fieldName , type_str )"		512326	1					
ANR	512616	Callee	r_str_newf		512326	0					
ANR	512617	Identifier	r_str_newf		512326	0					
ANR	512618	ArgumentList	"""%s.sfield_%s:%s"""		512326	1					
ANR	512619	Argument	"""%s.sfield_%s:%s"""		512326	0					
ANR	512620	PrimaryExpression	"""%s.sfield_%s:%s"""		512326	0					
ANR	512621	Argument	cls -> name		512326	1					
ANR	512622	PtrMemberAccess	cls -> name		512326	0					
ANR	512623	Identifier	cls		512326	0					
ANR	512624	Identifier	name		512326	1					
ANR	512625	Argument	fieldName		512326	2					
ANR	512626	Identifier	fieldName		512326	0					
ANR	512627	Argument	type_str		512326	3					
ANR	512628	Identifier	type_str		512326	0					
ANR	512629	ExpressionStatement	"sym -> type = r_str_const ( ""STATIC"" )"	1147:3:29926:29960	512326	1	True				
ANR	512630	AssignmentExpression	"sym -> type = r_str_const ( ""STATIC"" )"		512326	0		=			
ANR	512631	PtrMemberAccess	sym -> type		512326	0					
ANR	512632	Identifier	sym		512326	0					
ANR	512633	Identifier	type		512326	1					
ANR	512634	CallExpression	"r_str_const ( ""STATIC"" )"		512326	1					
ANR	512635	Callee	r_str_const		512326	0					
ANR	512636	Identifier	r_str_const		512326	0					
ANR	512637	ArgumentList	"""STATIC"""		512326	1					
ANR	512638	Argument	"""STATIC"""		512326	0					
ANR	512639	PrimaryExpression	"""STATIC"""		512326	0					
ANR	512640	ElseStatement	else		512326	0					
ANR	512641	CompoundStatement		39:9:1170:1170	512326	0					
ANR	512642	ExpressionStatement	"sym -> name = r_str_newf ( ""%s.ifield_%s:%s"" , cls -> name , fieldName , type_str )"	1149:3:29976:30050	512326	0	True				
ANR	512643	AssignmentExpression	"sym -> name = r_str_newf ( ""%s.ifield_%s:%s"" , cls -> name , fieldName , type_str )"		512326	0		=			
ANR	512644	PtrMemberAccess	sym -> name		512326	0					
ANR	512645	Identifier	sym		512326	0					
ANR	512646	Identifier	name		512326	1					
ANR	512647	CallExpression	"r_str_newf ( ""%s.ifield_%s:%s"" , cls -> name , fieldName , type_str )"		512326	1					
ANR	512648	Callee	r_str_newf		512326	0					
ANR	512649	Identifier	r_str_newf		512326	0					
ANR	512650	ArgumentList	"""%s.ifield_%s:%s"""		512326	1					
ANR	512651	Argument	"""%s.ifield_%s:%s"""		512326	0					
ANR	512652	PrimaryExpression	"""%s.ifield_%s:%s"""		512326	0					
ANR	512653	Argument	cls -> name		512326	1					
ANR	512654	PtrMemberAccess	cls -> name		512326	0					
ANR	512655	Identifier	cls		512326	0					
ANR	512656	Identifier	name		512326	1					
ANR	512657	Argument	fieldName		512326	2					
ANR	512658	Identifier	fieldName		512326	0					
ANR	512659	Argument	type_str		512326	3					
ANR	512660	Identifier	type_str		512326	0					
ANR	512661	ExpressionStatement	"sym -> type = r_str_const ( ""FIELD"" )"	1150:3:30055:30088	512326	1	True				
ANR	512662	AssignmentExpression	"sym -> type = r_str_const ( ""FIELD"" )"		512326	0		=			
ANR	512663	PtrMemberAccess	sym -> type		512326	0					
ANR	512664	Identifier	sym		512326	0					
ANR	512665	Identifier	type		512326	1					
ANR	512666	CallExpression	"r_str_const ( ""FIELD"" )"		512326	1					
ANR	512667	Callee	r_str_const		512326	0					
ANR	512668	Identifier	r_str_const		512326	0					
ANR	512669	ArgumentList	"""FIELD"""		512326	1					
ANR	512670	Argument	"""FIELD"""		512326	0					
ANR	512671	PrimaryExpression	"""FIELD"""		512326	0					
ANR	512672	ExpressionStatement	"sym -> name = r_str_replace ( sym -> name , ""method."" , """" , 0 )"	1152:2:30096:30151	512326	17	True				
ANR	512673	AssignmentExpression	"sym -> name = r_str_replace ( sym -> name , ""method."" , """" , 0 )"		512326	0		=			
ANR	512674	PtrMemberAccess	sym -> name		512326	0					
ANR	512675	Identifier	sym		512326	0					
ANR	512676	Identifier	name		512326	1					
ANR	512677	CallExpression	"r_str_replace ( sym -> name , ""method."" , """" , 0 )"		512326	1					
ANR	512678	Callee	r_str_replace		512326	0					
ANR	512679	Identifier	r_str_replace		512326	0					
ANR	512680	ArgumentList	sym -> name		512326	1					
ANR	512681	Argument	sym -> name		512326	0					
ANR	512682	PtrMemberAccess	sym -> name		512326	0					
ANR	512683	Identifier	sym		512326	0					
ANR	512684	Identifier	name		512326	1					
ANR	512685	Argument	"""method."""		512326	1					
ANR	512686	PrimaryExpression	"""method."""		512326	0					
ANR	512687	Argument	""""""		512326	2					
ANR	512688	PrimaryExpression	""""""		512326	0					
ANR	512689	Argument	0		512326	3					
ANR	512690	PrimaryExpression	0		512326	0					
ANR	512691	ExpressionStatement	"r_str_replace_char ( sym -> name , ';' , 0 )"	1153:2:30155:30193	512326	18	True				
ANR	512692	CallExpression	"r_str_replace_char ( sym -> name , ';' , 0 )"		512326	0					
ANR	512693	Callee	r_str_replace_char		512326	0					
ANR	512694	Identifier	r_str_replace_char		512326	0					
ANR	512695	ArgumentList	sym -> name		512326	1					
ANR	512696	Argument	sym -> name		512326	0					
ANR	512697	PtrMemberAccess	sym -> name		512326	0					
ANR	512698	Identifier	sym		512326	0					
ANR	512699	Identifier	name		512326	1					
ANR	512700	Argument	';'		512326	1					
ANR	512701	PrimaryExpression	';'		512326	0					
ANR	512702	Argument	0		512326	2					
ANR	512703	PrimaryExpression	0		512326	0					
ANR	512704	ExpressionStatement	sym -> paddr = sym -> vaddr = total	1154:2:30197:30228	512326	19	True				
ANR	512705	AssignmentExpression	sym -> paddr = sym -> vaddr = total		512326	0		=			
ANR	512706	PtrMemberAccess	sym -> paddr		512326	0					
ANR	512707	Identifier	sym		512326	0					
ANR	512708	Identifier	paddr		512326	1					
ANR	512709	AssignmentExpression	sym -> vaddr = total		512326	1		=			
ANR	512710	PtrMemberAccess	sym -> vaddr		512326	0					
ANR	512711	Identifier	sym		512326	0					
ANR	512712	Identifier	vaddr		512326	1					
ANR	512713	Identifier	total		512326	1					
ANR	512714	ExpressionStatement	sym -> ordinal = ( * sym_count ) ++	1155:2:30232:30261	512326	20	True				
ANR	512715	AssignmentExpression	sym -> ordinal = ( * sym_count ) ++		512326	0		=			
ANR	512716	PtrMemberAccess	sym -> ordinal		512326	0					
ANR	512717	Identifier	sym		512326	0					
ANR	512718	Identifier	ordinal		512326	1					
ANR	512719	PostIncDecOperationExpression	( * sym_count ) ++		512326	1					
ANR	512720	UnaryOperationExpression	* sym_count		512326	0					
ANR	512721	UnaryOperator	*		512326	0					
ANR	512722	Identifier	sym_count		512326	1					
ANR	512723	IncDec	++		512326	1					
ANR	512724	IfStatement	if ( dexdump )		512326	21					
ANR	512725	Condition	dexdump	1157:6:30270:30276	512326	0	True				
ANR	512726	Identifier	dexdump		512326	0					
ANR	512727	CompoundStatement		49:3:1483:1562	512326	1					
ANR	512728	IdentifierDeclStatement	"const char * accessStr = createAccessFlagStr ( accessFlags , kAccessForField ) ;"	1158:3:30284:30363	512326	0	True				
ANR	512729	IdentifierDecl	"* accessStr = createAccessFlagStr ( accessFlags , kAccessForField )"		512326	0					
ANR	512730	IdentifierDeclType	const char *		512326	0					
ANR	512731	Identifier	accessStr		512326	1					
ANR	512732	AssignmentExpression	"* accessStr = createAccessFlagStr ( accessFlags , kAccessForField )"		512326	2		=			
ANR	512733	Identifier	accessStr		512326	0					
ANR	512734	CallExpression	"createAccessFlagStr ( accessFlags , kAccessForField )"		512326	1					
ANR	512735	Callee	createAccessFlagStr		512326	0					
ANR	512736	Identifier	createAccessFlagStr		512326	0					
ANR	512737	ArgumentList	accessFlags		512326	1					
ANR	512738	Argument	accessFlags		512326	0					
ANR	512739	Identifier	accessFlags		512326	0					
ANR	512740	Argument	kAccessForField		512326	1					
ANR	512741	Identifier	kAccessForField		512326	0					
ANR	512742	ExpressionStatement	"bin -> cb_printf ( ""    #%d              : (in %s;)\\n"" , i , cls -> name )"	1160:3:30368:30440	512326	1	True				
ANR	512743	CallExpression	"bin -> cb_printf ( ""    #%d              : (in %s;)\\n"" , i , cls -> name )"		512326	0					
ANR	512744	Callee	bin -> cb_printf		512326	0					
ANR	512745	PtrMemberAccess	bin -> cb_printf		512326	0					
ANR	512746	Identifier	bin		512326	0					
ANR	512747	Identifier	cb_printf		512326	1					
ANR	512748	ArgumentList	"""    #%d              : (in %s;)\\n"""		512326	1					
ANR	512749	Argument	"""    #%d              : (in %s;)\\n"""		512326	0					
ANR	512750	PrimaryExpression	"""    #%d              : (in %s;)\\n"""		512326	0					
ANR	512751	Argument	i		512326	1					
ANR	512752	Identifier	i		512326	0					
ANR	512753	Argument	cls -> name		512326	2					
ANR	512754	PtrMemberAccess	cls -> name		512326	0					
ANR	512755	Identifier	cls		512326	0					
ANR	512756	Identifier	name		512326	1					
ANR	512757	ExpressionStatement	"bin -> cb_printf ( ""      name          : '%s'\\n"" , fieldName )"	1162:3:30445:30503	512326	2	True				
ANR	512758	CallExpression	"bin -> cb_printf ( ""      name          : '%s'\\n"" , fieldName )"		512326	0					
ANR	512759	Callee	bin -> cb_printf		512326	0					
ANR	512760	PtrMemberAccess	bin -> cb_printf		512326	0					
ANR	512761	Identifier	bin		512326	0					
ANR	512762	Identifier	cb_printf		512326	1					
ANR	512763	ArgumentList	"""      name          : '%s'\\n"""		512326	1					
ANR	512764	Argument	"""      name          : '%s'\\n"""		512326	0					
ANR	512765	PrimaryExpression	"""      name          : '%s'\\n"""		512326	0					
ANR	512766	Argument	fieldName		512326	1					
ANR	512767	Identifier	fieldName		512326	0					
ANR	512768	ExpressionStatement	"bin -> cb_printf ( ""      type          : '%s'\\n"" , type_str )"	1163:3:30508:30565	512326	3	True				
ANR	512769	CallExpression	"bin -> cb_printf ( ""      type          : '%s'\\n"" , type_str )"		512326	0					
ANR	512770	Callee	bin -> cb_printf		512326	0					
ANR	512771	PtrMemberAccess	bin -> cb_printf		512326	0					
ANR	512772	Identifier	bin		512326	0					
ANR	512773	Identifier	cb_printf		512326	1					
ANR	512774	ArgumentList	"""      type          : '%s'\\n"""		512326	1					
ANR	512775	Argument	"""      type          : '%s'\\n"""		512326	0					
ANR	512776	PrimaryExpression	"""      type          : '%s'\\n"""		512326	0					
ANR	512777	Argument	type_str		512326	1					
ANR	512778	Identifier	type_str		512326	0					
ANR	512779	ExpressionStatement	"bin -> cb_printf ( ""      access        : 0x%04x (%s)\\n"" , ( unsigned int ) accessFlags , accessStr ? accessStr : """" )"	1164:3:30570:30683	512326	4	True				
ANR	512780	CallExpression	"bin -> cb_printf ( ""      access        : 0x%04x (%s)\\n"" , ( unsigned int ) accessFlags , accessStr ? accessStr : """" )"		512326	0					
ANR	512781	Callee	bin -> cb_printf		512326	0					
ANR	512782	PtrMemberAccess	bin -> cb_printf		512326	0					
ANR	512783	Identifier	bin		512326	0					
ANR	512784	Identifier	cb_printf		512326	1					
ANR	512785	ArgumentList	"""      access        : 0x%04x (%s)\\n"""		512326	1					
ANR	512786	Argument	"""      access        : 0x%04x (%s)\\n"""		512326	0					
ANR	512787	PrimaryExpression	"""      access        : 0x%04x (%s)\\n"""		512326	0					
ANR	512788	Argument	( unsigned int ) accessFlags		512326	1					
ANR	512789	CastExpression	( unsigned int ) accessFlags		512326	0					
ANR	512790	CastTarget	unsigned int		512326	0					
ANR	512791	Identifier	accessFlags		512326	1					
ANR	512792	Argument	"accessStr ? accessStr : """""		512326	2					
ANR	512793	ConditionalExpression	"accessStr ? accessStr : """""		512326	0					
ANR	512794	Condition	accessStr		512326	0					
ANR	512795	Identifier	accessStr		512326	0					
ANR	512796	Identifier	accessStr		512326	1					
ANR	512797	PrimaryExpression	""""""		512326	2					
ANR	512798	ExpressionStatement	"r_list_append ( dex -> methods_list , sym )"	1167:2:30691:30729	512326	22	True				
ANR	512799	CallExpression	"r_list_append ( dex -> methods_list , sym )"		512326	0					
ANR	512800	Callee	r_list_append		512326	0					
ANR	512801	Identifier	r_list_append		512326	0					
ANR	512802	ArgumentList	dex -> methods_list		512326	1					
ANR	512803	Argument	dex -> methods_list		512326	0					
ANR	512804	PtrMemberAccess	dex -> methods_list		512326	0					
ANR	512805	Identifier	dex		512326	0					
ANR	512806	Identifier	methods_list		512326	1					
ANR	512807	Argument	sym		512326	1					
ANR	512808	Identifier	sym		512326	0					
ANR	512809	IdentifierDeclStatement	RBinField * field = R_NEW0 ( RBinField ) ;	1169:2:30734:30771	512326	23	True				
ANR	512810	IdentifierDecl	* field = R_NEW0 ( RBinField )		512326	0					
ANR	512811	IdentifierDeclType	RBinField *		512326	0					
ANR	512812	Identifier	field		512326	1					
ANR	512813	AssignmentExpression	* field = R_NEW0 ( RBinField )		512326	2		=			
ANR	512814	Identifier	field		512326	0					
ANR	512815	CallExpression	R_NEW0 ( RBinField )		512326	1					
ANR	512816	Callee	R_NEW0		512326	0					
ANR	512817	Identifier	R_NEW0		512326	0					
ANR	512818	ArgumentList	RBinField		512326	1					
ANR	512819	Argument	RBinField		512326	0					
ANR	512820	Identifier	RBinField		512326	0					
ANR	512821	IfStatement	if ( field )		512326	24					
ANR	512822	Condition	field	1170:6:30779:30783	512326	0	True				
ANR	512823	Identifier	field		512326	0					
ANR	512824	CompoundStatement		61:13:1985:1985	512326	1					
ANR	512825	ExpressionStatement	field -> vaddr = field -> paddr = sym -> paddr	1171:3:30791:30831	512326	0	True				
ANR	512826	AssignmentExpression	field -> vaddr = field -> paddr = sym -> paddr		512326	0		=			
ANR	512827	PtrMemberAccess	field -> vaddr		512326	0					
ANR	512828	Identifier	field		512326	0					
ANR	512829	Identifier	vaddr		512326	1					
ANR	512830	AssignmentExpression	field -> paddr = sym -> paddr		512326	1		=			
ANR	512831	PtrMemberAccess	field -> paddr		512326	0					
ANR	512832	Identifier	field		512326	0					
ANR	512833	Identifier	paddr		512326	1					
ANR	512834	PtrMemberAccess	sym -> paddr		512326	1					
ANR	512835	Identifier	sym		512326	0					
ANR	512836	Identifier	paddr		512326	1					
ANR	512837	ExpressionStatement	field -> name = strdup ( sym -> name )	1172:3:30836:30868	512326	1	True				
ANR	512838	AssignmentExpression	field -> name = strdup ( sym -> name )		512326	0		=			
ANR	512839	PtrMemberAccess	field -> name		512326	0					
ANR	512840	Identifier	field		512326	0					
ANR	512841	Identifier	name		512326	1					
ANR	512842	CallExpression	strdup ( sym -> name )		512326	1					
ANR	512843	Callee	strdup		512326	0					
ANR	512844	Identifier	strdup		512326	0					
ANR	512845	ArgumentList	sym -> name		512326	1					
ANR	512846	Argument	sym -> name		512326	0					
ANR	512847	PtrMemberAccess	sym -> name		512326	0					
ANR	512848	Identifier	sym		512326	0					
ANR	512849	Identifier	name		512326	1					
ANR	512850	ExpressionStatement	field -> flags = get_method_flags ( accessFlags )	1173:3:30873:30918	512326	2	True				
ANR	512851	AssignmentExpression	field -> flags = get_method_flags ( accessFlags )		512326	0		=			
ANR	512852	PtrMemberAccess	field -> flags		512326	0					
ANR	512853	Identifier	field		512326	0					
ANR	512854	Identifier	flags		512326	1					
ANR	512855	CallExpression	get_method_flags ( accessFlags )		512326	1					
ANR	512856	Callee	get_method_flags		512326	0					
ANR	512857	Identifier	get_method_flags		512326	0					
ANR	512858	ArgumentList	accessFlags		512326	1					
ANR	512859	Argument	accessFlags		512326	0					
ANR	512860	Identifier	accessFlags		512326	0					
ANR	512861	ExpressionStatement	"r_list_append ( cls -> fields , field )"	1174:3:30923:30957	512326	3	True				
ANR	512862	CallExpression	"r_list_append ( cls -> fields , field )"		512326	0					
ANR	512863	Callee	r_list_append		512326	0					
ANR	512864	Identifier	r_list_append		512326	0					
ANR	512865	ArgumentList	cls -> fields		512326	1					
ANR	512866	Argument	cls -> fields		512326	0					
ANR	512867	PtrMemberAccess	cls -> fields		512326	0					
ANR	512868	Identifier	cls		512326	0					
ANR	512869	Identifier	fields		512326	1					
ANR	512870	Argument	field		512326	1					
ANR	512871	Identifier	field		512326	0					
ANR	512872	ExpressionStatement	lastIndex = fieldIndex	1176:2:30965:30987	512326	25	True				
ANR	512873	AssignmentExpression	lastIndex = fieldIndex		512326	0		=			
ANR	512874	Identifier	lastIndex		512326	0					
ANR	512875	Identifier	fieldIndex		512326	1					
ANR	512876	ReturnStatement	return p ;	1178:1:30993:31001	512326	8	True				
ANR	512877	Identifier	p		512326	0					
ANR	512878	ReturnType	static const ut8 *		512326	1					
ANR	512879	Identifier	parse_dex_class_fields		512326	2					
ANR	512880	ParameterList	"RBinFile * bf , RBinDexClass * c , RBinClass * cls , const ut8 * p , const ut8 * p_end , int * sym_count , ut64 fields_count , bool is_sfield"		512326	3					
ANR	512881	Parameter	RBinFile * bf	1109:41:28668:28679	512326	0	True				
ANR	512882	ParameterType	RBinFile *		512326	0					
ANR	512883	Identifier	bf		512326	1					
ANR	512884	Parameter	RBinDexClass * c	1109:55:28682:28696	512326	1	True				
ANR	512885	ParameterType	RBinDexClass *		512326	0					
ANR	512886	Identifier	c		512326	1					
ANR	512887	Parameter	RBinClass * cls	1109:72:28699:28712	512326	2	True				
ANR	512888	ParameterType	RBinClass *		512326	0					
ANR	512889	Identifier	cls		512326	1					
ANR	512890	Parameter	const ut8 * p	1110:2:28717:28728	512326	3	True				
ANR	512891	ParameterType	const ut8 *		512326	0					
ANR	512892	Identifier	p		512326	1					
ANR	512893	Parameter	const ut8 * p_end	1110:16:28731:28746	512326	4	True				
ANR	512894	ParameterType	const ut8 *		512326	0					
ANR	512895	Identifier	p_end		512326	1					
ANR	512896	Parameter	int * sym_count	1110:34:28749:28762	512326	5	True				
ANR	512897	ParameterType	int *		512326	0					
ANR	512898	Identifier	sym_count		512326	1					
ANR	512899	Parameter	ut64 fields_count	1110:50:28765:28781	512326	6	True				
ANR	512900	ParameterType	ut64		512326	0					
ANR	512901	Identifier	fields_count		512326	1					
ANR	512902	Parameter	bool is_sfield	1110:69:28784:28797	512326	7	True				
ANR	512903	ParameterType	bool		512326	0					
ANR	512904	Identifier	is_sfield		512326	1					
ANR	512905	CFGEntryNode	ENTRY		512326		True				
ANR	512906	CFGExitNode	EXIT		512326		True				
ANR	512907	Symbol	dex -> header . types_size		512326						
ANR	512908	Symbol	* dex -> types		512326						
ANR	512909	Symbol	sym -> ordinal		512326						
ANR	512910	Symbol	bin		512326						
ANR	512911	Symbol	dex -> header . fields_offset		512326						
ANR	512912	Symbol	sym -> type		512326						
ANR	512913	Symbol	field . type_id		512326						
ANR	512914	Symbol	* sym_count		512326						
ANR	512915	Symbol	RBinField		512326						
ANR	512916	Symbol	tid		512326						
ANR	512917	Symbol	* field . type_id		512326						
ANR	512918	Symbol	accessFlags		512326						
ANR	512919	Symbol	getstr		512326						
ANR	512920	Symbol	field -> flags		512326						
ANR	512921	Symbol	dex -> types		512326						
ANR	512922	Symbol	field -> vaddr		512326						
ANR	512923	Symbol	bf -> o		512326						
ANR	512924	Symbol	bf -> buf		512326						
ANR	512925	Symbol	dex		512326						
ANR	512926	Symbol	field -> name		512326						
ANR	512927	Symbol	type_str		512326						
ANR	512928	Symbol	dexdump		512326						
ANR	512929	Symbol	fields_count		512326						
ANR	512930	Symbol	lastIndex		512326						
ANR	512931	Symbol	createAccessFlagStr		512326						
ANR	512932	Symbol	dex -> header		512326						
ANR	512933	Symbol	dex -> types [ field . type_id ] . descriptor_id		512326						
ANR	512934	Symbol	get_method_flags		512326						
ANR	512935	Symbol	r_read_le32		512326						
ANR	512936	Symbol	sym -> vaddr		512326						
ANR	512937	Symbol	is_sfield		512326						
ANR	512938	Symbol	field . name_id		512326						
ANR	512939	Symbol	cls		512326						
ANR	512940	Symbol	* field		512326						
ANR	512941	Symbol	& fieldIndex		512326						
ANR	512942	Symbol	field -> paddr		512326						
ANR	512943	Symbol	cls -> name		512326						
ANR	512944	Symbol	R_NEW0		512326						
ANR	512945	Symbol	* sym		512326						
ANR	512946	Symbol	* * bf		512326						
ANR	512947	Symbol	& accessFlags		512326						
ANR	512948	Symbol	field		512326						
ANR	512949	Symbol	sym -> name		512326						
ANR	512950	Symbol	r_uleb128		512326						
ANR	512951	Symbol	field . class_id		512326						
ANR	512952	Symbol	RBinSymbol		512326						
ANR	512953	Symbol	ff		512326						
ANR	512954	Symbol	dex -> size		512326						
ANR	512955	Symbol	dex -> methods_list		512326						
ANR	512956	Symbol	fieldName		512326						
ANR	512957	Symbol	accessStr		512326						
ANR	512958	Symbol	bf		512326						
ANR	512959	Symbol	sym		512326						
ANR	512960	Symbol	r_str_newf		512326						
ANR	512961	Symbol	bf -> rbin		512326						
ANR	512962	Symbol	* bf -> o		512326						
ANR	512963	Symbol	fieldIndex		512326						
ANR	512964	Symbol	total		512326						
ANR	512965	Symbol	kAccessForField		512326						
ANR	512966	Symbol	r_str_replace		512326						
ANR	512967	Symbol	p_end		512326						
ANR	512968	Symbol	sym_count		512326						
ANR	512969	Symbol	bf -> o -> bin_obj		512326						
ANR	512970	Symbol	r_str_const		512326						
ANR	512971	Symbol	c		512326						
ANR	512972	Symbol	sym -> paddr		512326						
ANR	512973	Symbol	* bf		512326						
ANR	512974	Symbol	i		512326						
ANR	512975	Symbol	* * dex		512326						
ANR	512976	Symbol	* cls		512326						
ANR	512977	Symbol	r_read_le16		512326						
ANR	512978	Symbol	p		512326						
ANR	512979	Symbol	cls -> fields		512326						
ANR	512980	Symbol	r_buf_read_at		512326						
ANR	512981	Symbol	strdup		512326						
ANR	512982	Symbol	* dex		512326						
ANR	512983	Function	parse_dex_class_method	1183:0:31069:40495							
ANR	512984	FunctionDef	"parse_dex_class_method (RBinFile * bf , RBinDexClass * c , RBinClass * cls , const ut8 * p , const ut8 * p_end , int * sym_count , ut64 DM , int * methods , bool is_direct , const ut8 * bufbuf)"		512983	0					
ANR	512985	CompoundStatement		1184:76:31265:40495	512983	0					
ANR	512986	IdentifierDeclStatement	RBin * rbin = bf -> rbin ;	1185:1:31268:31289	512983	0	True				
ANR	512987	IdentifierDecl	* rbin = bf -> rbin		512983	0					
ANR	512988	IdentifierDeclType	RBin *		512983	0					
ANR	512989	Identifier	rbin		512983	1					
ANR	512990	AssignmentExpression	* rbin = bf -> rbin		512983	2		=			
ANR	512991	Identifier	rbin		512983	0					
ANR	512992	PtrMemberAccess	bf -> rbin		512983	1					
ANR	512993	Identifier	bf		512983	0					
ANR	512994	Identifier	rbin		512983	1					
ANR	512995	IdentifierDeclStatement	PrintfCallback cb_printf = bf -> rbin -> cb_printf ;	1186:1:31292:31338	512983	1	True				
ANR	512996	IdentifierDecl	cb_printf = bf -> rbin -> cb_printf		512983	0					
ANR	512997	IdentifierDeclType	PrintfCallback		512983	0					
ANR	512998	Identifier	cb_printf		512983	1					
ANR	512999	AssignmentExpression	cb_printf = bf -> rbin -> cb_printf		512983	2		=			
ANR	513000	Identifier	cb_printf		512983	0					
ANR	513001	PtrMemberAccess	bf -> rbin -> cb_printf		512983	1					
ANR	513002	PtrMemberAccess	bf -> rbin		512983	0					
ANR	513003	Identifier	bf		512983	0					
ANR	513004	Identifier	rbin		512983	1					
ANR	513005	Identifier	cb_printf		512983	1					
ANR	513006	IdentifierDeclStatement	RBinDexObj * bin = bf -> o -> bin_obj ;	1187:1:31341:31373	512983	2	True				
ANR	513007	IdentifierDecl	* bin = bf -> o -> bin_obj		512983	0					
ANR	513008	IdentifierDeclType	RBinDexObj *		512983	0					
ANR	513009	Identifier	bin		512983	1					
ANR	513010	AssignmentExpression	* bin = bf -> o -> bin_obj		512983	2		=			
ANR	513011	Identifier	bin		512983	0					
ANR	513012	PtrMemberAccess	bf -> o -> bin_obj		512983	1					
ANR	513013	PtrMemberAccess	bf -> o		512983	0					
ANR	513014	Identifier	bf		512983	0					
ANR	513015	Identifier	o		512983	1					
ANR	513016	Identifier	bin_obj		512983	1					
ANR	513017	IdentifierDeclStatement	bool bin_dbginfo = rbin -> want_dbginfo ;	1188:1:31376:31413	512983	3	True				
ANR	513018	IdentifierDecl	bin_dbginfo = rbin -> want_dbginfo		512983	0					
ANR	513019	IdentifierDeclType	bool		512983	0					
ANR	513020	Identifier	bin_dbginfo		512983	1					
ANR	513021	AssignmentExpression	bin_dbginfo = rbin -> want_dbginfo		512983	2		=			
ANR	513022	Identifier	bin_dbginfo		512983	0					
ANR	513023	PtrMemberAccess	rbin -> want_dbginfo		512983	1					
ANR	513024	Identifier	rbin		512983	0					
ANR	513025	Identifier	want_dbginfo		512983	1					
ANR	513026	IdentifierDeclStatement	int i ;	1189:1:31416:31421	512983	4	True				
ANR	513027	IdentifierDecl	i		512983	0					
ANR	513028	IdentifierDeclType	int		512983	0					
ANR	513029	Identifier	i		512983	1					
ANR	513030	IdentifierDeclStatement	ut64 omi = 0 ;	1190:1:31424:31436	512983	5	True				
ANR	513031	IdentifierDecl	omi = 0		512983	0					
ANR	513032	IdentifierDeclType	ut64		512983	0					
ANR	513033	Identifier	omi		512983	1					
ANR	513034	AssignmentExpression	omi = 0		512983	2		=			
ANR	513035	Identifier	omi		512983	0					
ANR	513036	PrimaryExpression	0		512983	1					
ANR	513037	IdentifierDeclStatement	bool catchAll ;	1191:1:31439:31452	512983	6	True				
ANR	513038	IdentifierDecl	catchAll		512983	0					
ANR	513039	IdentifierDeclType	bool		512983	0					
ANR	513040	Identifier	catchAll		512983	1					
ANR	513041	IdentifierDeclStatement	"ut16 regsz = 0 , ins_size = 0 , outs_size = 0 , tries_size = 0 ;"	1192:1:31455:31514	512983	7	True				
ANR	513042	IdentifierDecl	regsz = 0		512983	0					
ANR	513043	IdentifierDeclType	ut16		512983	0					
ANR	513044	Identifier	regsz		512983	1					
ANR	513045	AssignmentExpression	regsz = 0		512983	2		=			
ANR	513046	Identifier	regsz		512983	0					
ANR	513047	PrimaryExpression	0		512983	1					
ANR	513048	IdentifierDecl	ins_size = 0		512983	1					
ANR	513049	IdentifierDeclType	ut16		512983	0					
ANR	513050	Identifier	ins_size		512983	1					
ANR	513051	AssignmentExpression	ins_size = 0		512983	2		=			
ANR	513052	Identifier	ins_size		512983	0					
ANR	513053	PrimaryExpression	0		512983	1					
ANR	513054	IdentifierDecl	outs_size = 0		512983	2					
ANR	513055	IdentifierDeclType	ut16		512983	0					
ANR	513056	Identifier	outs_size		512983	1					
ANR	513057	AssignmentExpression	outs_size = 0		512983	2		=			
ANR	513058	Identifier	outs_size		512983	0					
ANR	513059	PrimaryExpression	0		512983	1					
ANR	513060	IdentifierDecl	tries_size = 0		512983	3					
ANR	513061	IdentifierDeclType	ut16		512983	0					
ANR	513062	Identifier	tries_size		512983	1					
ANR	513063	AssignmentExpression	tries_size = 0		512983	2		=			
ANR	513064	Identifier	tries_size		512983	0					
ANR	513065	PrimaryExpression	0		512983	1					
ANR	513066	IdentifierDeclStatement	"ut16 start_addr , insn_count = 0 ;"	1193:1:31517:31548	512983	8	True				
ANR	513067	IdentifierDecl	start_addr		512983	0					
ANR	513068	IdentifierDeclType	ut16		512983	0					
ANR	513069	Identifier	start_addr		512983	1					
ANR	513070	IdentifierDecl	insn_count = 0		512983	1					
ANR	513071	IdentifierDeclType	ut16		512983	0					
ANR	513072	Identifier	insn_count		512983	1					
ANR	513073	AssignmentExpression	insn_count = 0		512983	2		=			
ANR	513074	Identifier	insn_count		512983	0					
ANR	513075	PrimaryExpression	0		512983	1					
ANR	513076	IdentifierDeclStatement	"ut32 debug_info_off = 0 , insns_size = 0 ;"	1194:1:31551:31590	512983	9	True				
ANR	513077	IdentifierDecl	debug_info_off = 0		512983	0					
ANR	513078	IdentifierDeclType	ut32		512983	0					
ANR	513079	Identifier	debug_info_off		512983	1					
ANR	513080	AssignmentExpression	debug_info_off = 0		512983	2		=			
ANR	513081	Identifier	debug_info_off		512983	0					
ANR	513082	PrimaryExpression	0		512983	1					
ANR	513083	IdentifierDecl	insns_size = 0		512983	1					
ANR	513084	IdentifierDeclType	ut32		512983	0					
ANR	513085	Identifier	insns_size		512983	1					
ANR	513086	AssignmentExpression	insns_size = 0		512983	2		=			
ANR	513087	Identifier	insns_size		512983	0					
ANR	513088	PrimaryExpression	0		512983	1					
ANR	513089	IdentifierDeclStatement	const ut8 * encoded_method_addr = NULL ;	1195:1:31593:31630	512983	10	True				
ANR	513090	IdentifierDecl	* encoded_method_addr = NULL		512983	0					
ANR	513091	IdentifierDeclType	const ut8 *		512983	0					
ANR	513092	Identifier	encoded_method_addr		512983	1					
ANR	513093	AssignmentExpression	* encoded_method_addr = NULL		512983	2		=			
ANR	513094	Identifier	NULL		512983	0					
ANR	513095	Identifier	NULL		512983	1					
ANR	513096	IfStatement	if ( ! bin -> trycatch_list )		512983	11					
ANR	513097	Condition	! bin -> trycatch_list	1197:5:31638:31656	512983	0	True				
ANR	513098	UnaryOperationExpression	! bin -> trycatch_list		512983	0					
ANR	513099	UnaryOperator	!		512983	0					
ANR	513100	PtrMemberAccess	bin -> trycatch_list		512983	1					
ANR	513101	Identifier	bin		512983	0					
ANR	513102	Identifier	trycatch_list		512983	1					
ANR	513103	CompoundStatement		14:26:393:393	512983	1					
ANR	513104	ExpressionStatement	bin -> trycatch_list = r_list_newf ( ( RListFree ) r_bin_trycatch_free )	1198:2:31663:31728	512983	0	True				
ANR	513105	AssignmentExpression	bin -> trycatch_list = r_list_newf ( ( RListFree ) r_bin_trycatch_free )		512983	0		=			
ANR	513106	PtrMemberAccess	bin -> trycatch_list		512983	0					
ANR	513107	Identifier	bin		512983	0					
ANR	513108	Identifier	trycatch_list		512983	1					
ANR	513109	CallExpression	r_list_newf ( ( RListFree ) r_bin_trycatch_free )		512983	1					
ANR	513110	Callee	r_list_newf		512983	0					
ANR	513111	Identifier	r_list_newf		512983	0					
ANR	513112	ArgumentList	( RListFree ) r_bin_trycatch_free		512983	1					
ANR	513113	Argument	( RListFree ) r_bin_trycatch_free		512983	0					
ANR	513114	CastExpression	( RListFree ) r_bin_trycatch_free		512983	0					
ANR	513115	CastTarget	RListFree		512983	0					
ANR	513116	Identifier	r_bin_trycatch_free		512983	1					
ANR	513117	IfStatement	if ( DM > 4096 )		512983	12					
ANR	513118	Condition	DM > 4096	1200:5:31738:31746	512983	0	True				
ANR	513119	RelationalExpression	DM > 4096		512983	0		>			
ANR	513120	Identifier	DM		512983	0					
ANR	513121	PrimaryExpression	4096		512983	1					
ANR	513122	CompoundStatement		17:16:483:483	512983	1					
ANR	513123	ExpressionStatement	"eprintf ( ""This DEX is probably corrupted. Chopping DM from %d to 4KB\\n"" , ( int ) DM )"	1201:2:31753:31834	512983	0	True				
ANR	513124	CallExpression	"eprintf ( ""This DEX is probably corrupted. Chopping DM from %d to 4KB\\n"" , ( int ) DM )"		512983	0					
ANR	513125	Callee	eprintf		512983	0					
ANR	513126	Identifier	eprintf		512983	0					
ANR	513127	ArgumentList	"""This DEX is probably corrupted. Chopping DM from %d to 4KB\\n"""		512983	1					
ANR	513128	Argument	"""This DEX is probably corrupted. Chopping DM from %d to 4KB\\n"""		512983	0					
ANR	513129	PrimaryExpression	"""This DEX is probably corrupted. Chopping DM from %d to 4KB\\n"""		512983	0					
ANR	513130	Argument	( int ) DM		512983	1					
ANR	513131	CastExpression	( int ) DM		512983	0					
ANR	513132	CastTarget	int		512983	0					
ANR	513133	Identifier	DM		512983	1					
ANR	513134	ExpressionStatement	DM = 4096	1202:2:31838:31847	512983	1	True				
ANR	513135	AssignmentExpression	DM = 4096		512983	0		=			
ANR	513136	Identifier	DM		512983	0					
ANR	513137	PrimaryExpression	4096		512983	1					
ANR	513138	ForStatement	for ( i = 0 ; i < DM ; i ++ )		512983	13					
ANR	513139	ForInit	i = 0 ;	1204:6:31858:31863	512983	0	True				
ANR	513140	AssignmentExpression	i = 0		512983	0		=			
ANR	513141	Identifier	i		512983	0					
ANR	513142	PrimaryExpression	0		512983	1					
ANR	513143	Condition	i < DM	1204:13:31865:31870	512983	1	True				
ANR	513144	RelationalExpression	i < DM		512983	0		<			
ANR	513145	Identifier	i		512983	0					
ANR	513146	Identifier	DM		512983	1					
ANR	513147	PostIncDecOperationExpression	i ++	1204:21:31873:31875	512983	2	True				
ANR	513148	Identifier	i		512983	0					
ANR	513149	IncDec	++		512983	1					
ANR	513150	CompoundStatement		50:2:1390:1399	512983	3					
ANR	513151	ExpressionStatement	encoded_method_addr = p	1205:2:31882:31905	512983	0	True				
ANR	513152	AssignmentExpression	encoded_method_addr = p		512983	0		=			
ANR	513153	Identifier	encoded_method_addr		512983	0					
ANR	513154	Identifier	p		512983	1					
ANR	513155	IdentifierDeclStatement	"ut64 MI , MA , MC ;"	1206:2:31909:31924	512983	1	True				
ANR	513156	IdentifierDecl	MI		512983	0					
ANR	513157	IdentifierDeclType	ut64		512983	0					
ANR	513158	Identifier	MI		512983	1					
ANR	513159	IdentifierDecl	MA		512983	1					
ANR	513160	IdentifierDeclType	ut64		512983	0					
ANR	513161	Identifier	MA		512983	1					
ANR	513162	IdentifierDecl	MC		512983	2					
ANR	513163	IdentifierDeclType	ut64		512983	0					
ANR	513164	Identifier	MC		512983	1					
ANR	513165	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & MI )"	1207:2:31928:31961	512983	2	True				
ANR	513166	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & MI )"		512983	0		=			
ANR	513167	Identifier	p		512983	0					
ANR	513168	CallExpression	"r_uleb128 ( p , p_end - p , & MI )"		512983	1					
ANR	513169	Callee	r_uleb128		512983	0					
ANR	513170	Identifier	r_uleb128		512983	0					
ANR	513171	ArgumentList	p		512983	1					
ANR	513172	Argument	p		512983	0					
ANR	513173	Identifier	p		512983	0					
ANR	513174	Argument	p_end - p		512983	1					
ANR	513175	AdditiveExpression	p_end - p		512983	0		-			
ANR	513176	Identifier	p_end		512983	0					
ANR	513177	Identifier	p		512983	1					
ANR	513178	Argument	& MI		512983	2					
ANR	513179	UnaryOperationExpression	& MI		512983	0					
ANR	513180	UnaryOperator	&		512983	0					
ANR	513181	Identifier	MI		512983	1					
ANR	513182	ExpressionStatement	MI += omi	1208:2:31965:31974	512983	3	True				
ANR	513183	AssignmentExpression	MI += omi		512983	0		+=			
ANR	513184	Identifier	MI		512983	0					
ANR	513185	Identifier	omi		512983	1					
ANR	513186	ExpressionStatement	omi = MI	1209:2:31978:31986	512983	4	True				
ANR	513187	AssignmentExpression	omi = MI		512983	0		=			
ANR	513188	Identifier	omi		512983	0					
ANR	513189	Identifier	MI		512983	1					
ANR	513190	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & MA )"	1210:2:31990:32023	512983	5	True				
ANR	513191	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & MA )"		512983	0		=			
ANR	513192	Identifier	p		512983	0					
ANR	513193	CallExpression	"r_uleb128 ( p , p_end - p , & MA )"		512983	1					
ANR	513194	Callee	r_uleb128		512983	0					
ANR	513195	Identifier	r_uleb128		512983	0					
ANR	513196	ArgumentList	p		512983	1					
ANR	513197	Argument	p		512983	0					
ANR	513198	Identifier	p		512983	0					
ANR	513199	Argument	p_end - p		512983	1					
ANR	513200	AdditiveExpression	p_end - p		512983	0		-			
ANR	513201	Identifier	p_end		512983	0					
ANR	513202	Identifier	p		512983	1					
ANR	513203	Argument	& MA		512983	2					
ANR	513204	UnaryOperationExpression	& MA		512983	0					
ANR	513205	UnaryOperator	&		512983	0					
ANR	513206	Identifier	MA		512983	1					
ANR	513207	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & MC )"	1211:2:32027:32060	512983	6	True				
ANR	513208	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & MC )"		512983	0		=			
ANR	513209	Identifier	p		512983	0					
ANR	513210	CallExpression	"r_uleb128 ( p , p_end - p , & MC )"		512983	1					
ANR	513211	Callee	r_uleb128		512983	0					
ANR	513212	Identifier	r_uleb128		512983	0					
ANR	513213	ArgumentList	p		512983	1					
ANR	513214	Argument	p		512983	0					
ANR	513215	Identifier	p		512983	0					
ANR	513216	Argument	p_end - p		512983	1					
ANR	513217	AdditiveExpression	p_end - p		512983	0		-			
ANR	513218	Identifier	p_end		512983	0					
ANR	513219	Identifier	p		512983	1					
ANR	513220	Argument	& MC		512983	2					
ANR	513221	UnaryOperationExpression	& MC		512983	0					
ANR	513222	UnaryOperator	&		512983	0					
ANR	513223	Identifier	MC		512983	1					
ANR	513224	IfStatement	if ( MI < bin -> header . method_size )		512983	7					
ANR	513225	Condition	MI < bin -> header . method_size	1213:6:32100:32127	512983	0	True				
ANR	513226	RelationalExpression	MI < bin -> header . method_size		512983	0		<			
ANR	513227	Identifier	MI		512983	0					
ANR	513228	MemberAccess	bin -> header . method_size		512983	1					
ANR	513229	PtrMemberAccess	bin -> header		512983	0					
ANR	513230	Identifier	bin		512983	0					
ANR	513231	Identifier	header		512983	1					
ANR	513232	Identifier	method_size		512983	1					
ANR	513233	CompoundStatement		30:36:864:864	512983	1					
ANR	513234	IfStatement	if ( methods )		512983	0					
ANR	513235	Condition	methods	1214:7:32139:32145	512983	0	True				
ANR	513236	Identifier	methods		512983	0					
ANR	513237	CompoundStatement		31:16:882:882	512983	1					
ANR	513238	ExpressionStatement	methods [ MI ] = 1	1215:4:32154:32169	512983	0	True				
ANR	513239	AssignmentExpression	methods [ MI ] = 1		512983	0		=			
ANR	513240	ArrayIndexing	methods [ MI ]		512983	0					
ANR	513241	Identifier	methods		512983	0					
ANR	513242	Identifier	MI		512983	1					
ANR	513243	PrimaryExpression	1		512983	1					
ANR	513244	IdentifierDeclStatement	"char * method_name = dex_method_name ( bin , MI ) ;"	1218:2:32182:32227	512983	8	True				
ANR	513245	IdentifierDecl	"* method_name = dex_method_name ( bin , MI )"		512983	0					
ANR	513246	IdentifierDeclType	char *		512983	0					
ANR	513247	Identifier	method_name		512983	1					
ANR	513248	AssignmentExpression	"* method_name = dex_method_name ( bin , MI )"		512983	2		=			
ANR	513249	Identifier	method_name		512983	0					
ANR	513250	CallExpression	"dex_method_name ( bin , MI )"		512983	1					
ANR	513251	Callee	dex_method_name		512983	0					
ANR	513252	Identifier	dex_method_name		512983	0					
ANR	513253	ArgumentList	bin		512983	1					
ANR	513254	Argument	bin		512983	0					
ANR	513255	Identifier	bin		512983	0					
ANR	513256	Argument	MI		512983	1					
ANR	513257	Identifier	MI		512983	0					
ANR	513258	IdentifierDeclStatement	"char * signature = dex_method_signature ( bin , MI ) ;"	1219:2:32231:32279	512983	9	True				
ANR	513259	IdentifierDecl	"* signature = dex_method_signature ( bin , MI )"		512983	0					
ANR	513260	IdentifierDeclType	char *		512983	0					
ANR	513261	Identifier	signature		512983	1					
ANR	513262	AssignmentExpression	"* signature = dex_method_signature ( bin , MI )"		512983	2		=			
ANR	513263	Identifier	signature		512983	0					
ANR	513264	CallExpression	"dex_method_signature ( bin , MI )"		512983	1					
ANR	513265	Callee	dex_method_signature		512983	0					
ANR	513266	Identifier	dex_method_signature		512983	0					
ANR	513267	ArgumentList	bin		512983	1					
ANR	513268	Argument	bin		512983	0					
ANR	513269	Identifier	bin		512983	0					
ANR	513270	Argument	MI		512983	1					
ANR	513271	Identifier	MI		512983	0					
ANR	513272	IfStatement	if ( ! method_name )		512983	10					
ANR	513273	Condition	! method_name	1220:6:32287:32298	512983	0	True				
ANR	513274	UnaryOperationExpression	! method_name		512983	0					
ANR	513275	UnaryOperator	!		512983	0					
ANR	513276	Identifier	method_name		512983	1					
ANR	513277	CompoundStatement		37:20:1035:1035	512983	1					
ANR	513278	ExpressionStatement	"method_name = ""unknown"""	1221:3:32306:32329	512983	0	True				
ANR	513279	AssignmentExpression	"method_name = ""unknown"""		512983	0		=			
ANR	513280	Identifier	method_name		512983	0					
ANR	513281	PrimaryExpression	"""unknown"""		512983	1					
ANR	513282	IdentifierDeclStatement	"char * flag_name = r_str_newf ( ""%s.method.%s%s"" , cls -> name , method_name , signature ) ;"	1223:2:32337:32419	512983	11	True				
ANR	513283	IdentifierDecl	"* flag_name = r_str_newf ( ""%s.method.%s%s"" , cls -> name , method_name , signature )"		512983	0					
ANR	513284	IdentifierDeclType	char *		512983	0					
ANR	513285	Identifier	flag_name		512983	1					
ANR	513286	AssignmentExpression	"* flag_name = r_str_newf ( ""%s.method.%s%s"" , cls -> name , method_name , signature )"		512983	2		=			
ANR	513287	Identifier	flag_name		512983	0					
ANR	513288	CallExpression	"r_str_newf ( ""%s.method.%s%s"" , cls -> name , method_name , signature )"		512983	1					
ANR	513289	Callee	r_str_newf		512983	0					
ANR	513290	Identifier	r_str_newf		512983	0					
ANR	513291	ArgumentList	"""%s.method.%s%s"""		512983	1					
ANR	513292	Argument	"""%s.method.%s%s"""		512983	0					
ANR	513293	PrimaryExpression	"""%s.method.%s%s"""		512983	0					
ANR	513294	Argument	cls -> name		512983	1					
ANR	513295	PtrMemberAccess	cls -> name		512983	0					
ANR	513296	Identifier	cls		512983	0					
ANR	513297	Identifier	name		512983	1					
ANR	513298	Argument	method_name		512983	2					
ANR	513299	Identifier	method_name		512983	0					
ANR	513300	Argument	signature		512983	3					
ANR	513301	Identifier	signature		512983	0					
ANR	513302	IfStatement	if ( ! flag_name || ! * flag_name )		512983	12					
ANR	513303	Condition	! flag_name || ! * flag_name	1224:6:32427:32451	512983	0	True				
ANR	513304	OrExpression	! flag_name || ! * flag_name		512983	0		||			
ANR	513305	UnaryOperationExpression	! flag_name		512983	0					
ANR	513306	UnaryOperator	!		512983	0					
ANR	513307	Identifier	flag_name		512983	1					
ANR	513308	UnaryOperationExpression	! * flag_name		512983	1					
ANR	513309	UnaryOperator	!		512983	0					
ANR	513310	UnaryOperationExpression	* flag_name		512983	1					
ANR	513311	UnaryOperator	*		512983	0					
ANR	513312	Identifier	flag_name		512983	1					
ANR	513313	CompoundStatement		41:33:1188:1188	512983	1					
ANR	513314	ExpressionStatement	R_FREE ( flag_name )	1226:3:32486:32504	512983	0	True				
ANR	513315	CallExpression	R_FREE ( flag_name )		512983	0					
ANR	513316	Callee	R_FREE		512983	0					
ANR	513317	Identifier	R_FREE		512983	0					
ANR	513318	ArgumentList	flag_name		512983	1					
ANR	513319	Argument	flag_name		512983	0					
ANR	513320	Identifier	flag_name		512983	0					
ANR	513321	ExpressionStatement	R_FREE ( signature )	1227:3:32509:32527	512983	1	True				
ANR	513322	CallExpression	R_FREE ( signature )		512983	0					
ANR	513323	Callee	R_FREE		512983	0					
ANR	513324	Identifier	R_FREE		512983	0					
ANR	513325	ArgumentList	signature		512983	1					
ANR	513326	Argument	signature		512983	0					
ANR	513327	Identifier	signature		512983	0					
ANR	513328	ContinueStatement	continue ;	1228:3:32532:32540	512983	2	True				
ANR	513329	IdentifierDeclStatement	"ut64 v2 , handler_type , handler_addr ;"	1232:2:32617:32652	512983	13	True				
ANR	513330	IdentifierDecl	v2		512983	0					
ANR	513331	IdentifierDeclType	ut64		512983	0					
ANR	513332	Identifier	v2		512983	1					
ANR	513333	IdentifierDecl	handler_type		512983	1					
ANR	513334	IdentifierDeclType	ut64		512983	0					
ANR	513335	Identifier	handler_type		512983	1					
ANR	513336	IdentifierDecl	handler_addr		512983	2					
ANR	513337	IdentifierDeclType	ut64		512983	0					
ANR	513338	Identifier	handler_addr		512983	1					
ANR	513339	IdentifierDeclStatement	int t = 0 ;	1233:2:32656:32665	512983	14	True				
ANR	513340	IdentifierDecl	t = 0		512983	0					
ANR	513341	IdentifierDeclType	int		512983	0					
ANR	513342	Identifier	t		512983	1					
ANR	513343	AssignmentExpression	t = 0		512983	2		=			
ANR	513344	Identifier	t		512983	0					
ANR	513345	PrimaryExpression	0		512983	1					
ANR	513346	IfStatement	if ( MC > 0 )		512983	15					
ANR	513347	Condition	MC > 0	1234:6:32673:32678	512983	0	True				
ANR	513348	RelationalExpression	MC > 0		512983	0		>			
ANR	513349	Identifier	MC		512983	0					
ANR	513350	PrimaryExpression	0		512983	1					
ANR	513351	CompoundStatement		73:3:2112:2124	512983	1					
ANR	513352	IfStatement	if ( MC + 16 >= bin -> size || MC + 16 < MC )		512983	0					
ANR	513353	Condition	MC + 16 >= bin -> size || MC + 16 < MC	1237:7:32750:32785	512983	0	True				
ANR	513354	OrExpression	MC + 16 >= bin -> size || MC + 16 < MC		512983	0		||			
ANR	513355	RelationalExpression	MC + 16 >= bin -> size		512983	0		>=			
ANR	513356	AdditiveExpression	MC + 16		512983	0		+			
ANR	513357	Identifier	MC		512983	0					
ANR	513358	PrimaryExpression	16		512983	1					
ANR	513359	PtrMemberAccess	bin -> size		512983	1					
ANR	513360	Identifier	bin		512983	0					
ANR	513361	Identifier	size		512983	1					
ANR	513362	RelationalExpression	MC + 16 < MC		512983	1		<			
ANR	513363	AdditiveExpression	MC + 16		512983	0		+			
ANR	513364	Identifier	MC		512983	0					
ANR	513365	PrimaryExpression	16		512983	1					
ANR	513366	Identifier	MC		512983	1					
ANR	513367	CompoundStatement		54:45:1522:1522	512983	1					
ANR	513368	ExpressionStatement	R_FREE ( flag_name )	1239:4:32822:32840	512983	0	True				
ANR	513369	CallExpression	R_FREE ( flag_name )		512983	0					
ANR	513370	Callee	R_FREE		512983	0					
ANR	513371	Identifier	R_FREE		512983	0					
ANR	513372	ArgumentList	flag_name		512983	1					
ANR	513373	Argument	flag_name		512983	0					
ANR	513374	Identifier	flag_name		512983	0					
ANR	513375	ExpressionStatement	R_FREE ( signature )	1240:4:32846:32864	512983	1	True				
ANR	513376	CallExpression	R_FREE ( signature )		512983	0					
ANR	513377	Callee	R_FREE		512983	0					
ANR	513378	Identifier	R_FREE		512983	0					
ANR	513379	ArgumentList	signature		512983	1					
ANR	513380	Argument	signature		512983	0					
ANR	513381	Identifier	signature		512983	0					
ANR	513382	ContinueStatement	continue ;	1241:4:32870:32878	512983	2	True				
ANR	513383	IdentifierDeclStatement	ut64 bufsz = r_buf_size ( bf -> buf ) ;	1243:3:32888:32921	512983	1	True				
ANR	513384	IdentifierDecl	bufsz = r_buf_size ( bf -> buf )		512983	0					
ANR	513385	IdentifierDeclType	ut64		512983	0					
ANR	513386	Identifier	bufsz		512983	1					
ANR	513387	AssignmentExpression	bufsz = r_buf_size ( bf -> buf )		512983	2		=			
ANR	513388	Identifier	bufsz		512983	0					
ANR	513389	CallExpression	r_buf_size ( bf -> buf )		512983	1					
ANR	513390	Callee	r_buf_size		512983	0					
ANR	513391	Identifier	r_buf_size		512983	0					
ANR	513392	ArgumentList	bf -> buf		512983	1					
ANR	513393	Argument	bf -> buf		512983	0					
ANR	513394	PtrMemberAccess	bf -> buf		512983	0					
ANR	513395	Identifier	bf		512983	0					
ANR	513396	Identifier	buf		512983	1					
ANR	513397	IfStatement	if ( bufsz < MC || bufsz < MC + 16 )		512983	2					
ANR	513398	Condition	bufsz < MC || bufsz < MC + 16	1244:7:32930:32958	512983	0	True				
ANR	513399	OrExpression	bufsz < MC || bufsz < MC + 16		512983	0		||			
ANR	513400	RelationalExpression	bufsz < MC		512983	0		<			
ANR	513401	Identifier	bufsz		512983	0					
ANR	513402	Identifier	MC		512983	1					
ANR	513403	RelationalExpression	bufsz < MC + 16		512983	1		<			
ANR	513404	Identifier	bufsz		512983	0					
ANR	513405	AdditiveExpression	MC + 16		512983	1		+			
ANR	513406	Identifier	MC		512983	0					
ANR	513407	PrimaryExpression	16		512983	1					
ANR	513408	CompoundStatement		61:38:1695:1695	512983	1					
ANR	513409	ExpressionStatement	R_FREE ( flag_name )	1246:4:32995:33013	512983	0	True				
ANR	513410	CallExpression	R_FREE ( flag_name )		512983	0					
ANR	513411	Callee	R_FREE		512983	0					
ANR	513412	Identifier	R_FREE		512983	0					
ANR	513413	ArgumentList	flag_name		512983	1					
ANR	513414	Argument	flag_name		512983	0					
ANR	513415	Identifier	flag_name		512983	0					
ANR	513416	ExpressionStatement	R_FREE ( signature )	1247:4:33019:33037	512983	1	True				
ANR	513417	CallExpression	R_FREE ( signature )		512983	0					
ANR	513418	Callee	R_FREE		512983	0					
ANR	513419	Identifier	R_FREE		512983	0					
ANR	513420	ArgumentList	signature		512983	1					
ANR	513421	Argument	signature		512983	0					
ANR	513422	Identifier	signature		512983	0					
ANR	513423	ContinueStatement	continue ;	1248:4:33043:33051	512983	2	True				
ANR	513424	ExpressionStatement	"regsz = r_buf_read_le16_at ( bf -> buf , MC )"	1250:3:33061:33101	512983	3	True				
ANR	513425	AssignmentExpression	"regsz = r_buf_read_le16_at ( bf -> buf , MC )"		512983	0		=			
ANR	513426	Identifier	regsz		512983	0					
ANR	513427	CallExpression	"r_buf_read_le16_at ( bf -> buf , MC )"		512983	1					
ANR	513428	Callee	r_buf_read_le16_at		512983	0					
ANR	513429	Identifier	r_buf_read_le16_at		512983	0					
ANR	513430	ArgumentList	bf -> buf		512983	1					
ANR	513431	Argument	bf -> buf		512983	0					
ANR	513432	PtrMemberAccess	bf -> buf		512983	0					
ANR	513433	Identifier	bf		512983	0					
ANR	513434	Identifier	buf		512983	1					
ANR	513435	Argument	MC		512983	1					
ANR	513436	Identifier	MC		512983	0					
ANR	513437	ExpressionStatement	"ins_size = r_buf_read_le16_at ( bf -> buf , MC + 2 )"	1251:3:33106:33153	512983	4	True				
ANR	513438	AssignmentExpression	"ins_size = r_buf_read_le16_at ( bf -> buf , MC + 2 )"		512983	0		=			
ANR	513439	Identifier	ins_size		512983	0					
ANR	513440	CallExpression	"r_buf_read_le16_at ( bf -> buf , MC + 2 )"		512983	1					
ANR	513441	Callee	r_buf_read_le16_at		512983	0					
ANR	513442	Identifier	r_buf_read_le16_at		512983	0					
ANR	513443	ArgumentList	bf -> buf		512983	1					
ANR	513444	Argument	bf -> buf		512983	0					
ANR	513445	PtrMemberAccess	bf -> buf		512983	0					
ANR	513446	Identifier	bf		512983	0					
ANR	513447	Identifier	buf		512983	1					
ANR	513448	Argument	MC + 2		512983	1					
ANR	513449	AdditiveExpression	MC + 2		512983	0		+			
ANR	513450	Identifier	MC		512983	0					
ANR	513451	PrimaryExpression	2		512983	1					
ANR	513452	ExpressionStatement	"outs_size = r_buf_read_le16_at ( bf -> buf , MC + 4 )"	1252:3:33158:33206	512983	5	True				
ANR	513453	AssignmentExpression	"outs_size = r_buf_read_le16_at ( bf -> buf , MC + 4 )"		512983	0		=			
ANR	513454	Identifier	outs_size		512983	0					
ANR	513455	CallExpression	"r_buf_read_le16_at ( bf -> buf , MC + 4 )"		512983	1					
ANR	513456	Callee	r_buf_read_le16_at		512983	0					
ANR	513457	Identifier	r_buf_read_le16_at		512983	0					
ANR	513458	ArgumentList	bf -> buf		512983	1					
ANR	513459	Argument	bf -> buf		512983	0					
ANR	513460	PtrMemberAccess	bf -> buf		512983	0					
ANR	513461	Identifier	bf		512983	0					
ANR	513462	Identifier	buf		512983	1					
ANR	513463	Argument	MC + 4		512983	1					
ANR	513464	AdditiveExpression	MC + 4		512983	0		+			
ANR	513465	Identifier	MC		512983	0					
ANR	513466	PrimaryExpression	4		512983	1					
ANR	513467	ExpressionStatement	"tries_size = r_buf_read_le16_at ( bf -> buf , MC + 6 )"	1253:3:33211:33260	512983	6	True				
ANR	513468	AssignmentExpression	"tries_size = r_buf_read_le16_at ( bf -> buf , MC + 6 )"		512983	0		=			
ANR	513469	Identifier	tries_size		512983	0					
ANR	513470	CallExpression	"r_buf_read_le16_at ( bf -> buf , MC + 6 )"		512983	1					
ANR	513471	Callee	r_buf_read_le16_at		512983	0					
ANR	513472	Identifier	r_buf_read_le16_at		512983	0					
ANR	513473	ArgumentList	bf -> buf		512983	1					
ANR	513474	Argument	bf -> buf		512983	0					
ANR	513475	PtrMemberAccess	bf -> buf		512983	0					
ANR	513476	Identifier	bf		512983	0					
ANR	513477	Identifier	buf		512983	1					
ANR	513478	Argument	MC + 6		512983	1					
ANR	513479	AdditiveExpression	MC + 6		512983	0		+			
ANR	513480	Identifier	MC		512983	0					
ANR	513481	PrimaryExpression	6		512983	1					
ANR	513482	ExpressionStatement	"debug_info_off = r_buf_read_le32_at ( bf -> buf , MC + 8 )"	1254:3:33265:33318	512983	7	True				
ANR	513483	AssignmentExpression	"debug_info_off = r_buf_read_le32_at ( bf -> buf , MC + 8 )"		512983	0		=			
ANR	513484	Identifier	debug_info_off		512983	0					
ANR	513485	CallExpression	"r_buf_read_le32_at ( bf -> buf , MC + 8 )"		512983	1					
ANR	513486	Callee	r_buf_read_le32_at		512983	0					
ANR	513487	Identifier	r_buf_read_le32_at		512983	0					
ANR	513488	ArgumentList	bf -> buf		512983	1					
ANR	513489	Argument	bf -> buf		512983	0					
ANR	513490	PtrMemberAccess	bf -> buf		512983	0					
ANR	513491	Identifier	bf		512983	0					
ANR	513492	Identifier	buf		512983	1					
ANR	513493	Argument	MC + 8		512983	1					
ANR	513494	AdditiveExpression	MC + 8		512983	0		+			
ANR	513495	Identifier	MC		512983	0					
ANR	513496	PrimaryExpression	8		512983	1					
ANR	513497	ExpressionStatement	"insns_size = r_buf_read_le32_at ( bf -> buf , MC + 12 )"	1255:3:33323:33373	512983	8	True				
ANR	513498	AssignmentExpression	"insns_size = r_buf_read_le32_at ( bf -> buf , MC + 12 )"		512983	0		=			
ANR	513499	Identifier	insns_size		512983	0					
ANR	513500	CallExpression	"r_buf_read_le32_at ( bf -> buf , MC + 12 )"		512983	1					
ANR	513501	Callee	r_buf_read_le32_at		512983	0					
ANR	513502	Identifier	r_buf_read_le32_at		512983	0					
ANR	513503	ArgumentList	bf -> buf		512983	1					
ANR	513504	Argument	bf -> buf		512983	0					
ANR	513505	PtrMemberAccess	bf -> buf		512983	0					
ANR	513506	Identifier	bf		512983	0					
ANR	513507	Identifier	buf		512983	1					
ANR	513508	Argument	MC + 12		512983	1					
ANR	513509	AdditiveExpression	MC + 12		512983	0		+			
ANR	513510	Identifier	MC		512983	0					
ANR	513511	PrimaryExpression	12		512983	1					
ANR	513512	IdentifierDeclStatement	int padd = 0 ;	1256:3:33378:33390	512983	9	True				
ANR	513513	IdentifierDecl	padd = 0		512983	0					
ANR	513514	IdentifierDeclType	int		512983	0					
ANR	513515	Identifier	padd		512983	1					
ANR	513516	AssignmentExpression	padd = 0		512983	2		=			
ANR	513517	Identifier	padd		512983	0					
ANR	513518	PrimaryExpression	0		512983	1					
ANR	513519	IfStatement	if ( tries_size > 0 && insns_size % 2 )		512983	10					
ANR	513520	Condition	tries_size > 0 && insns_size % 2	1257:7:33399:33430	512983	0	True				
ANR	513521	AndExpression	tries_size > 0 && insns_size % 2		512983	0		&&			
ANR	513522	RelationalExpression	tries_size > 0		512983	0		>			
ANR	513523	Identifier	tries_size		512983	0					
ANR	513524	PrimaryExpression	0		512983	1					
ANR	513525	MultiplicativeExpression	insns_size % 2		512983	1		%			
ANR	513526	Identifier	insns_size		512983	0					
ANR	513527	PrimaryExpression	2		512983	1					
ANR	513528	CompoundStatement		74:41:2167:2167	512983	1					
ANR	513529	ExpressionStatement	padd = 2	1258:4:33439:33447	512983	0	True				
ANR	513530	AssignmentExpression	padd = 2		512983	0		=			
ANR	513531	Identifier	padd		512983	0					
ANR	513532	PrimaryExpression	2		512983	1					
ANR	513533	ExpressionStatement	t = 16 + 2 * insns_size + padd	1260:3:33457:33487	512983	11	True				
ANR	513534	AssignmentExpression	t = 16 + 2 * insns_size + padd		512983	0		=			
ANR	513535	Identifier	t		512983	0					
ANR	513536	AdditiveExpression	16 + 2 * insns_size + padd		512983	1		+			
ANR	513537	PrimaryExpression	16		512983	0					
ANR	513538	AdditiveExpression	2 * insns_size + padd		512983	1		+			
ANR	513539	MultiplicativeExpression	2 * insns_size		512983	0		*			
ANR	513540	PrimaryExpression	2		512983	0					
ANR	513541	Identifier	insns_size		512983	1					
ANR	513542	Identifier	padd		512983	1					
ANR	513543	IfStatement	if ( dexdump )		512983	16					
ANR	513544	Condition	dexdump	1262:6:33499:33505	512983	0	True				
ANR	513545	Identifier	dexdump		512983	0					
ANR	513546	CompoundStatement		80:3:2247:2313	512983	1					
ANR	513547	IdentifierDeclStatement	"const char * accessStr = createAccessFlagStr ( MA , kAccessForMethod ) ;"	1263:3:33513:33579	512983	0	True				
ANR	513548	IdentifierDecl	"* accessStr = createAccessFlagStr ( MA , kAccessForMethod )"		512983	0					
ANR	513549	IdentifierDeclType	const char *		512983	0					
ANR	513550	Identifier	accessStr		512983	1					
ANR	513551	AssignmentExpression	"* accessStr = createAccessFlagStr ( MA , kAccessForMethod )"		512983	2		=			
ANR	513552	Identifier	accessStr		512983	0					
ANR	513553	CallExpression	"createAccessFlagStr ( MA , kAccessForMethod )"		512983	1					
ANR	513554	Callee	createAccessFlagStr		512983	0					
ANR	513555	Identifier	createAccessFlagStr		512983	0					
ANR	513556	ArgumentList	MA		512983	1					
ANR	513557	Argument	MA		512983	0					
ANR	513558	Identifier	MA		512983	0					
ANR	513559	Argument	kAccessForMethod		512983	1					
ANR	513560	Identifier	kAccessForMethod		512983	0					
ANR	513561	ExpressionStatement	"cb_printf ( ""    #%d              : (in %s;)\\n"" , i , cls -> name )"	1264:3:33584:33645	512983	1	True				
ANR	513562	CallExpression	"cb_printf ( ""    #%d              : (in %s;)\\n"" , i , cls -> name )"		512983	0					
ANR	513563	Callee	cb_printf		512983	0					
ANR	513564	Identifier	cb_printf		512983	0					
ANR	513565	ArgumentList	"""    #%d              : (in %s;)\\n"""		512983	1					
ANR	513566	Argument	"""    #%d              : (in %s;)\\n"""		512983	0					
ANR	513567	PrimaryExpression	"""    #%d              : (in %s;)\\n"""		512983	0					
ANR	513568	Argument	i		512983	1					
ANR	513569	Identifier	i		512983	0					
ANR	513570	Argument	cls -> name		512983	2					
ANR	513571	PtrMemberAccess	cls -> name		512983	0					
ANR	513572	Identifier	cls		512983	0					
ANR	513573	Identifier	name		512983	1					
ANR	513574	ExpressionStatement	"cb_printf ( ""      name          : '%s'\\n"" , method_name )"	1265:3:33650:33705	512983	2	True				
ANR	513575	CallExpression	"cb_printf ( ""      name          : '%s'\\n"" , method_name )"		512983	0					
ANR	513576	Callee	cb_printf		512983	0					
ANR	513577	Identifier	cb_printf		512983	0					
ANR	513578	ArgumentList	"""      name          : '%s'\\n"""		512983	1					
ANR	513579	Argument	"""      name          : '%s'\\n"""		512983	0					
ANR	513580	PrimaryExpression	"""      name          : '%s'\\n"""		512983	0					
ANR	513581	Argument	method_name		512983	1					
ANR	513582	Identifier	method_name		512983	0					
ANR	513583	ExpressionStatement	"cb_printf ( ""      type          : '%s'\\n"" , signature )"	1266:3:33710:33763	512983	3	True				
ANR	513584	CallExpression	"cb_printf ( ""      type          : '%s'\\n"" , signature )"		512983	0					
ANR	513585	Callee	cb_printf		512983	0					
ANR	513586	Identifier	cb_printf		512983	0					
ANR	513587	ArgumentList	"""      type          : '%s'\\n"""		512983	1					
ANR	513588	Argument	"""      type          : '%s'\\n"""		512983	0					
ANR	513589	PrimaryExpression	"""      type          : '%s'\\n"""		512983	0					
ANR	513590	Argument	signature		512983	1					
ANR	513591	Identifier	signature		512983	0					
ANR	513592	ExpressionStatement	"cb_printf ( ""      access        : 0x%04x (%s)\\n"" , ( ut32 ) MA , accessStr )"	1267:3:33768:33838	512983	4	True				
ANR	513593	CallExpression	"cb_printf ( ""      access        : 0x%04x (%s)\\n"" , ( ut32 ) MA , accessStr )"		512983	0					
ANR	513594	Callee	cb_printf		512983	0					
ANR	513595	Identifier	cb_printf		512983	0					
ANR	513596	ArgumentList	"""      access        : 0x%04x (%s)\\n"""		512983	1					
ANR	513597	Argument	"""      access        : 0x%04x (%s)\\n"""		512983	0					
ANR	513598	PrimaryExpression	"""      access        : 0x%04x (%s)\\n"""		512983	0					
ANR	513599	Argument	( ut32 ) MA		512983	1					
ANR	513600	CastExpression	( ut32 ) MA		512983	0					
ANR	513601	CastTarget	ut32		512983	0					
ANR	513602	Identifier	MA		512983	1					
ANR	513603	Argument	accessStr		512983	2					
ANR	513604	Identifier	accessStr		512983	0					
ANR	513605	IfStatement	if ( MC > 0 )		512983	17					
ANR	513606	Condition	MC > 0	1270:6:33851:33856	512983	0	True				
ANR	513607	RelationalExpression	MC > 0		512983	0		>			
ANR	513608	Identifier	MC		512983	0					
ANR	513609	PrimaryExpression	0		512983	1					
ANR	513610	CompoundStatement		87:14:2593:2593	512983	1					
ANR	513611	IfStatement	if ( dexdump )		512983	0					
ANR	513612	Condition	dexdump	1271:7:33868:33874	512983	0	True				
ANR	513613	Identifier	dexdump		512983	0					
ANR	513614	CompoundStatement		88:16:2611:2611	512983	1					
ANR	513615	ExpressionStatement	"cb_printf ( ""      code          -\\n"" )"	1272:4:33883:33920	512983	0	True				
ANR	513616	CallExpression	"cb_printf ( ""      code          -\\n"" )"		512983	0					
ANR	513617	Callee	cb_printf		512983	0					
ANR	513618	Identifier	cb_printf		512983	0					
ANR	513619	ArgumentList	"""      code          -\\n"""		512983	1					
ANR	513620	Argument	"""      code          -\\n"""		512983	0					
ANR	513621	PrimaryExpression	"""      code          -\\n"""		512983	0					
ANR	513622	ExpressionStatement	"cb_printf ( ""      registers     : %d\\n"" , regsz )"	1273:4:33926:33973	512983	1	True				
ANR	513623	CallExpression	"cb_printf ( ""      registers     : %d\\n"" , regsz )"		512983	0					
ANR	513624	Callee	cb_printf		512983	0					
ANR	513625	Identifier	cb_printf		512983	0					
ANR	513626	ArgumentList	"""      registers     : %d\\n"""		512983	1					
ANR	513627	Argument	"""      registers     : %d\\n"""		512983	0					
ANR	513628	PrimaryExpression	"""      registers     : %d\\n"""		512983	0					
ANR	513629	Argument	regsz		512983	1					
ANR	513630	Identifier	regsz		512983	0					
ANR	513631	ExpressionStatement	"cb_printf ( ""      ins           : %d\\n"" , ins_size )"	1274:4:33979:34029	512983	2	True				
ANR	513632	CallExpression	"cb_printf ( ""      ins           : %d\\n"" , ins_size )"		512983	0					
ANR	513633	Callee	cb_printf		512983	0					
ANR	513634	Identifier	cb_printf		512983	0					
ANR	513635	ArgumentList	"""      ins           : %d\\n"""		512983	1					
ANR	513636	Argument	"""      ins           : %d\\n"""		512983	0					
ANR	513637	PrimaryExpression	"""      ins           : %d\\n"""		512983	0					
ANR	513638	Argument	ins_size		512983	1					
ANR	513639	Identifier	ins_size		512983	0					
ANR	513640	ExpressionStatement	"cb_printf ( ""      outs          : %d\\n"" , outs_size )"	1275:4:34035:34086	512983	3	True				
ANR	513641	CallExpression	"cb_printf ( ""      outs          : %d\\n"" , outs_size )"		512983	0					
ANR	513642	Callee	cb_printf		512983	0					
ANR	513643	Identifier	cb_printf		512983	0					
ANR	513644	ArgumentList	"""      outs          : %d\\n"""		512983	1					
ANR	513645	Argument	"""      outs          : %d\\n"""		512983	0					
ANR	513646	PrimaryExpression	"""      outs          : %d\\n"""		512983	0					
ANR	513647	Argument	outs_size		512983	1					
ANR	513648	Identifier	outs_size		512983	0					
ANR	513649	Statement	cb_printf	1276:4:34092:34100	512983	4	True				
ANR	513650	Statement	(	1276:14:34102:34102	512983	5	True				
ANR	513651	Statement	"""      insns size    : %d 16-bit code """	1277:5:34109:34147	512983	6	True				
ANR	513652	Statement	"""units\\n"""	1278:5:34154:34162	512983	7	True				
ANR	513653	Statement	","	1278:14:34163:34163	512983	8	True				
ANR	513654	Statement	insns_size	1279:5:34170:34179	512983	9	True				
ANR	513655	Statement	)	1279:15:34180:34180	512983	10	True				
ANR	513656	ExpressionStatement		1279:16:34181:34181	512983	11	True				
ANR	513657	IfStatement	if ( tries_size > 0 )		512983	1					
ANR	513658	Condition	tries_size > 0	1281:7:34195:34208	512983	0	True				
ANR	513659	RelationalExpression	tries_size > 0		512983	0		>			
ANR	513660	Identifier	tries_size		512983	0					
ANR	513661	PrimaryExpression	0		512983	1					
ANR	513662	CompoundStatement		102:4:3035:3047	512983	1					
ANR	513663	IfStatement	if ( dexdump )		512983	0					
ANR	513664	Condition	dexdump	1282:8:34221:34227	512983	0	True				
ANR	513665	Identifier	dexdump		512983	0					
ANR	513666	CompoundStatement		99:17:2964:2964	512983	1					
ANR	513667	ExpressionStatement	"cb_printf ( ""      catches       : %d\\n"" , tries_size )"	1283:5:34237:34289	512983	0	True				
ANR	513668	CallExpression	"cb_printf ( ""      catches       : %d\\n"" , tries_size )"		512983	0					
ANR	513669	Callee	cb_printf		512983	0					
ANR	513670	Identifier	cb_printf		512983	0					
ANR	513671	ArgumentList	"""      catches       : %d\\n"""		512983	1					
ANR	513672	Argument	"""      catches       : %d\\n"""		512983	0					
ANR	513673	PrimaryExpression	"""      catches       : %d\\n"""		512983	0					
ANR	513674	Argument	tries_size		512983	1					
ANR	513675	Identifier	tries_size		512983	0					
ANR	513676	IdentifierDeclStatement	"int j , m = 0 ;"	1285:4:34301:34313	512983	1	True				
ANR	513677	IdentifierDecl	j		512983	0					
ANR	513678	IdentifierDeclType	int		512983	0					
ANR	513679	Identifier	j		512983	1					
ANR	513680	IdentifierDecl	m = 0		512983	1					
ANR	513681	IdentifierDeclType	int		512983	0					
ANR	513682	Identifier	m		512983	1					
ANR	513683	AssignmentExpression	m = 0		512983	2		=			
ANR	513684	Identifier	m		512983	0					
ANR	513685	PrimaryExpression	0		512983	1					
ANR	513686	ForStatement	for ( j = 0 ; j < tries_size ; j ++ )		512983	2					
ANR	513687	ForInit	j = 0 ;	1287:9:34399:34404	512983	0	True				
ANR	513688	AssignmentExpression	j = 0		512983	0		=			
ANR	513689	Identifier	j		512983	0					
ANR	513690	PrimaryExpression	0		512983	1					
ANR	513691	Condition	j < tries_size	1287:16:34406:34419	512983	1	True				
ANR	513692	RelationalExpression	j < tries_size		512983	0		<			
ANR	513693	Identifier	j		512983	0					
ANR	513694	Identifier	tries_size		512983	1					
ANR	513695	PostIncDecOperationExpression	j ++	1287:32:34422:34424	512983	2	True				
ANR	513696	Identifier	j		512983	0					
ANR	513697	IncDec	++		512983	1					
ANR	513698	CompoundStatement		146:5:4905:4943	512983	3					
ANR	513699	IdentifierDeclStatement	ut64 offset = MC + t + j * 8 ;	1288:5:34434:34462	512983	0	True				
ANR	513700	IdentifierDecl	offset = MC + t + j * 8		512983	0					
ANR	513701	IdentifierDeclType	ut64		512983	0					
ANR	513702	Identifier	offset		512983	1					
ANR	513703	AssignmentExpression	offset = MC + t + j * 8		512983	2		=			
ANR	513704	Identifier	offset		512983	0					
ANR	513705	AdditiveExpression	MC + t + j * 8		512983	1		+			
ANR	513706	Identifier	MC		512983	0					
ANR	513707	AdditiveExpression	t + j * 8		512983	1		+			
ANR	513708	Identifier	t		512983	0					
ANR	513709	MultiplicativeExpression	j * 8		512983	1		*			
ANR	513710	Identifier	j		512983	0					
ANR	513711	PrimaryExpression	8		512983	1					
ANR	513712	IfStatement	if ( offset >= bin -> size || offset < MC )		512983	1					
ANR	513713	Condition	offset >= bin -> size || offset < MC	1289:9:34473:34506	512983	0	True				
ANR	513714	OrExpression	offset >= bin -> size || offset < MC		512983	0		||			
ANR	513715	RelationalExpression	offset >= bin -> size		512983	0		>=			
ANR	513716	Identifier	offset		512983	0					
ANR	513717	PtrMemberAccess	bin -> size		512983	1					
ANR	513718	Identifier	bin		512983	0					
ANR	513719	Identifier	size		512983	1					
ANR	513720	RelationalExpression	offset < MC		512983	1		<			
ANR	513721	Identifier	offset		512983	0					
ANR	513722	Identifier	MC		512983	1					
ANR	513723	CompoundStatement		106:45:3243:3243	512983	1					
ANR	513724	ExpressionStatement	R_FREE ( signature )	1290:6:34517:34535	512983	0	True				
ANR	513725	CallExpression	R_FREE ( signature )		512983	0					
ANR	513726	Callee	R_FREE		512983	0					
ANR	513727	Identifier	R_FREE		512983	0					
ANR	513728	ArgumentList	signature		512983	1					
ANR	513729	Argument	signature		512983	0					
ANR	513730	Identifier	signature		512983	0					
ANR	513731	BreakStatement	break ;	1291:6:34543:34548	512983	1	True				
ANR	513732	IdentifierDeclStatement	ut64 bufsz = r_buf_size ( bf -> buf ) ;	1293:5:34562:34595	512983	2	True				
ANR	513733	IdentifierDecl	bufsz = r_buf_size ( bf -> buf )		512983	0					
ANR	513734	IdentifierDeclType	ut64		512983	0					
ANR	513735	Identifier	bufsz		512983	1					
ANR	513736	AssignmentExpression	bufsz = r_buf_size ( bf -> buf )		512983	2		=			
ANR	513737	Identifier	bufsz		512983	0					
ANR	513738	CallExpression	r_buf_size ( bf -> buf )		512983	1					
ANR	513739	Callee	r_buf_size		512983	0					
ANR	513740	Identifier	r_buf_size		512983	0					
ANR	513741	ArgumentList	bf -> buf		512983	1					
ANR	513742	Argument	bf -> buf		512983	0					
ANR	513743	PtrMemberAccess	bf -> buf		512983	0					
ANR	513744	Identifier	bf		512983	0					
ANR	513745	Identifier	buf		512983	1					
ANR	513746	IfStatement	if ( bufsz < offset || bufsz < offset + 8 )		512983	3					
ANR	513747	Condition	bufsz < offset || bufsz < offset + 8	1294:9:34606:34641	512983	0	True				
ANR	513748	OrExpression	bufsz < offset || bufsz < offset + 8		512983	0		||			
ANR	513749	RelationalExpression	bufsz < offset		512983	0		<			
ANR	513750	Identifier	bufsz		512983	0					
ANR	513751	Identifier	offset		512983	1					
ANR	513752	RelationalExpression	bufsz < offset + 8		512983	1		<			
ANR	513753	Identifier	bufsz		512983	0					
ANR	513754	AdditiveExpression	offset + 8		512983	1		+			
ANR	513755	Identifier	offset		512983	0					
ANR	513756	PrimaryExpression	8		512983	1					
ANR	513757	CompoundStatement		111:47:3378:3378	512983	1					
ANR	513758	ExpressionStatement	R_FREE ( signature )	1295:6:34652:34670	512983	0	True				
ANR	513759	CallExpression	R_FREE ( signature )		512983	0					
ANR	513760	Callee	R_FREE		512983	0					
ANR	513761	Identifier	R_FREE		512983	0					
ANR	513762	ArgumentList	signature		512983	1					
ANR	513763	Argument	signature		512983	0					
ANR	513764	Identifier	signature		512983	0					
ANR	513765	BreakStatement	break ;	1296:6:34678:34683	512983	1	True				
ANR	513766	ExpressionStatement	"start_addr = r_buf_read_le32_at ( bf -> buf , offset )"	1300:5:34862:34911	512983	4	True				
ANR	513767	AssignmentExpression	"start_addr = r_buf_read_le32_at ( bf -> buf , offset )"		512983	0		=			
ANR	513768	Identifier	start_addr		512983	0					
ANR	513769	CallExpression	"r_buf_read_le32_at ( bf -> buf , offset )"		512983	1					
ANR	513770	Callee	r_buf_read_le32_at		512983	0					
ANR	513771	Identifier	r_buf_read_le32_at		512983	0					
ANR	513772	ArgumentList	bf -> buf		512983	1					
ANR	513773	Argument	bf -> buf		512983	0					
ANR	513774	PtrMemberAccess	bf -> buf		512983	0					
ANR	513775	Identifier	bf		512983	0					
ANR	513776	Identifier	buf		512983	1					
ANR	513777	Argument	offset		512983	1					
ANR	513778	Identifier	offset		512983	0					
ANR	513779	ExpressionStatement	"insn_count = r_buf_read_le16_at ( bf -> buf , offset + 4 )"	1303:5:35056:35109	512983	5	True				
ANR	513780	AssignmentExpression	"insn_count = r_buf_read_le16_at ( bf -> buf , offset + 4 )"		512983	0		=			
ANR	513781	Identifier	insn_count		512983	0					
ANR	513782	CallExpression	"r_buf_read_le16_at ( bf -> buf , offset + 4 )"		512983	1					
ANR	513783	Callee	r_buf_read_le16_at		512983	0					
ANR	513784	Identifier	r_buf_read_le16_at		512983	0					
ANR	513785	ArgumentList	bf -> buf		512983	1					
ANR	513786	Argument	bf -> buf		512983	0					
ANR	513787	PtrMemberAccess	bf -> buf		512983	0					
ANR	513788	Identifier	bf		512983	0					
ANR	513789	Identifier	buf		512983	1					
ANR	513790	Argument	offset + 4		512983	1					
ANR	513791	AdditiveExpression	offset + 4		512983	0		+			
ANR	513792	Identifier	offset		512983	0					
ANR	513793	PrimaryExpression	4		512983	1					
ANR	513794	IdentifierDeclStatement	"ut64 handler_off = r_buf_read_le16_at ( bf -> buf , offset + 6 ) ;"	1307:5:35326:35385	512983	6	True				
ANR	513795	IdentifierDecl	"handler_off = r_buf_read_le16_at ( bf -> buf , offset + 6 )"		512983	0					
ANR	513796	IdentifierDeclType	ut64		512983	0					
ANR	513797	Identifier	handler_off		512983	1					
ANR	513798	AssignmentExpression	"handler_off = r_buf_read_le16_at ( bf -> buf , offset + 6 )"		512983	2		=			
ANR	513799	Identifier	handler_off		512983	0					
ANR	513800	CallExpression	"r_buf_read_le16_at ( bf -> buf , offset + 6 )"		512983	1					
ANR	513801	Callee	r_buf_read_le16_at		512983	0					
ANR	513802	Identifier	r_buf_read_le16_at		512983	0					
ANR	513803	ArgumentList	bf -> buf		512983	1					
ANR	513804	Argument	bf -> buf		512983	0					
ANR	513805	PtrMemberAccess	bf -> buf		512983	0					
ANR	513806	Identifier	bf		512983	0					
ANR	513807	Identifier	buf		512983	1					
ANR	513808	Argument	offset + 6		512983	1					
ANR	513809	AdditiveExpression	offset + 6		512983	0		+			
ANR	513810	Identifier	offset		512983	0					
ANR	513811	PrimaryExpression	6		512983	1					
ANR	513812	IdentifierDeclStatement	ut64 method_offset = MC + 16 ;	1309:5:35393:35421	512983	7	True				
ANR	513813	IdentifierDecl	method_offset = MC + 16		512983	0					
ANR	513814	IdentifierDeclType	ut64		512983	0					
ANR	513815	Identifier	method_offset		512983	1					
ANR	513816	AssignmentExpression	method_offset = MC + 16		512983	2		=			
ANR	513817	Identifier	method_offset		512983	0					
ANR	513818	AdditiveExpression	MC + 16		512983	1		+			
ANR	513819	Identifier	MC		512983	0					
ANR	513820	PrimaryExpression	16		512983	1					
ANR	513821	IdentifierDeclStatement	ut64 try_from = ( start_addr * 2 ) + method_offset ;	1310:5:35428:35476	512983	8	True				
ANR	513822	IdentifierDecl	try_from = ( start_addr * 2 ) + method_offset		512983	0					
ANR	513823	IdentifierDeclType	ut64		512983	0					
ANR	513824	Identifier	try_from		512983	1					
ANR	513825	AssignmentExpression	try_from = ( start_addr * 2 ) + method_offset		512983	2		=			
ANR	513826	Identifier	try_from		512983	0					
ANR	513827	AdditiveExpression	( start_addr * 2 ) + method_offset		512983	1		+			
ANR	513828	MultiplicativeExpression	start_addr * 2		512983	0		*			
ANR	513829	Identifier	start_addr		512983	0					
ANR	513830	PrimaryExpression	2		512983	1					
ANR	513831	Identifier	method_offset		512983	1					
ANR	513832	IdentifierDeclStatement	ut64 try_to = ( start_addr * 2 ) + ( insn_count * 2 ) + method_offset + 2 ;	1311:5:35483:35552	512983	9	True				
ANR	513833	IdentifierDecl	try_to = ( start_addr * 2 ) + ( insn_count * 2 ) + method_offset + 2		512983	0					
ANR	513834	IdentifierDeclType	ut64		512983	0					
ANR	513835	Identifier	try_to		512983	1					
ANR	513836	AssignmentExpression	try_to = ( start_addr * 2 ) + ( insn_count * 2 ) + method_offset + 2		512983	2		=			
ANR	513837	Identifier	try_to		512983	0					
ANR	513838	AdditiveExpression	( start_addr * 2 ) + ( insn_count * 2 ) + method_offset + 2		512983	1		+			
ANR	513839	MultiplicativeExpression	start_addr * 2		512983	0		*			
ANR	513840	Identifier	start_addr		512983	0					
ANR	513841	PrimaryExpression	2		512983	1					
ANR	513842	AdditiveExpression	( insn_count * 2 ) + method_offset + 2		512983	1		+			
ANR	513843	MultiplicativeExpression	insn_count * 2		512983	0		*			
ANR	513844	Identifier	insn_count		512983	0					
ANR	513845	PrimaryExpression	2		512983	1					
ANR	513846	AdditiveExpression	method_offset + 2		512983	1		+			
ANR	513847	Identifier	method_offset		512983	0					
ANR	513848	PrimaryExpression	2		512983	1					
ANR	513849	IdentifierDeclStatement	ut64 try_catch = try_to + handler_off - 1 ;	1312:5:35559:35600	512983	10	True				
ANR	513850	IdentifierDecl	try_catch = try_to + handler_off - 1		512983	0					
ANR	513851	IdentifierDeclType	ut64		512983	0					
ANR	513852	Identifier	try_catch		512983	1					
ANR	513853	AssignmentExpression	try_catch = try_to + handler_off - 1		512983	2		=			
ANR	513854	Identifier	try_catch		512983	0					
ANR	513855	AdditiveExpression	try_to + handler_off - 1		512983	1		+			
ANR	513856	Identifier	try_to		512983	0					
ANR	513857	AdditiveExpression	handler_off - 1		512983	1		-			
ANR	513858	Identifier	handler_off		512983	0					
ANR	513859	PrimaryExpression	1		512983	1					
ANR	513860	IdentifierDeclStatement	char * s = NULL ;	1313:5:35607:35621	512983	11	True				
ANR	513861	IdentifierDecl	* s = NULL		512983	0					
ANR	513862	IdentifierDeclType	char *		512983	0					
ANR	513863	Identifier	s		512983	1					
ANR	513864	AssignmentExpression	* s = NULL		512983	2		=			
ANR	513865	Identifier	NULL		512983	0					
ANR	513866	Identifier	NULL		512983	1					
ANR	513867	IfStatement	if ( dexdump )		512983	12					
ANR	513868	Condition	dexdump	1314:9:35632:35638	512983	0	True				
ANR	513869	Identifier	dexdump		512983	0					
ANR	513870	CompoundStatement		131:18:4375:4375	512983	1					
ANR	513871	ExpressionStatement	"cb_printf ( ""        0x%04x - 0x%04x\\n"" , start_addr , ( start_addr + insn_count ) )"	1315:6:35649:35727	512983	0	True				
ANR	513872	CallExpression	"cb_printf ( ""        0x%04x - 0x%04x\\n"" , start_addr , ( start_addr + insn_count ) )"		512983	0					
ANR	513873	Callee	cb_printf		512983	0					
ANR	513874	Identifier	cb_printf		512983	0					
ANR	513875	ArgumentList	"""        0x%04x - 0x%04x\\n"""		512983	1					
ANR	513876	Argument	"""        0x%04x - 0x%04x\\n"""		512983	0					
ANR	513877	PrimaryExpression	"""        0x%04x - 0x%04x\\n"""		512983	0					
ANR	513878	Argument	start_addr		512983	1					
ANR	513879	Identifier	start_addr		512983	0					
ANR	513880	Argument	start_addr + insn_count		512983	2					
ANR	513881	AdditiveExpression	start_addr + insn_count		512983	0		+			
ANR	513882	Identifier	start_addr		512983	0					
ANR	513883	Identifier	insn_count		512983	1					
ANR	513884	IdentifierDeclStatement	"RBinTrycatch * tc = r_bin_trycatch_new ( method_offset , try_from , try_to , try_catch ) ;"	1317:5:35741:35823	512983	13	True				
ANR	513885	IdentifierDecl	"* tc = r_bin_trycatch_new ( method_offset , try_from , try_to , try_catch )"		512983	0					
ANR	513886	IdentifierDeclType	RBinTrycatch *		512983	0					
ANR	513887	Identifier	tc		512983	1					
ANR	513888	AssignmentExpression	"* tc = r_bin_trycatch_new ( method_offset , try_from , try_to , try_catch )"		512983	2		=			
ANR	513889	Identifier	tc		512983	0					
ANR	513890	CallExpression	"r_bin_trycatch_new ( method_offset , try_from , try_to , try_catch )"		512983	1					
ANR	513891	Callee	r_bin_trycatch_new		512983	0					
ANR	513892	Identifier	r_bin_trycatch_new		512983	0					
ANR	513893	ArgumentList	method_offset		512983	1					
ANR	513894	Argument	method_offset		512983	0					
ANR	513895	Identifier	method_offset		512983	0					
ANR	513896	Argument	try_from		512983	1					
ANR	513897	Identifier	try_from		512983	0					
ANR	513898	Argument	try_to		512983	2					
ANR	513899	Identifier	try_to		512983	0					
ANR	513900	Argument	try_catch		512983	3					
ANR	513901	Identifier	try_catch		512983	0					
ANR	513902	ExpressionStatement	"r_list_append ( bin -> trycatch_list , tc )"	1318:5:35830:35868	512983	14	True				
ANR	513903	CallExpression	"r_list_append ( bin -> trycatch_list , tc )"		512983	0					
ANR	513904	Callee	r_list_append		512983	0					
ANR	513905	Identifier	r_list_append		512983	0					
ANR	513906	ArgumentList	bin -> trycatch_list		512983	1					
ANR	513907	Argument	bin -> trycatch_list		512983	0					
ANR	513908	PtrMemberAccess	bin -> trycatch_list		512983	0					
ANR	513909	Identifier	bin		512983	0					
ANR	513910	Identifier	trycatch_list		512983	1					
ANR	513911	Argument	tc		512983	1					
ANR	513912	Identifier	tc		512983	0					
ANR	513913	IdentifierDeclStatement	int off = MC + t + tries_size * 8 + handler_off ;	1321:5:35922:35969	512983	15	True				
ANR	513914	IdentifierDecl	off = MC + t + tries_size * 8 + handler_off		512983	0					
ANR	513915	IdentifierDeclType	int		512983	0					
ANR	513916	Identifier	off		512983	1					
ANR	513917	AssignmentExpression	off = MC + t + tries_size * 8 + handler_off		512983	2		=			
ANR	513918	Identifier	off		512983	0					
ANR	513919	AdditiveExpression	MC + t + tries_size * 8 + handler_off		512983	1		+			
ANR	513920	Identifier	MC		512983	0					
ANR	513921	AdditiveExpression	t + tries_size * 8 + handler_off		512983	1		+			
ANR	513922	Identifier	t		512983	0					
ANR	513923	AdditiveExpression	tries_size * 8 + handler_off		512983	1		+			
ANR	513924	MultiplicativeExpression	tries_size * 8		512983	0		*			
ANR	513925	Identifier	tries_size		512983	0					
ANR	513926	PrimaryExpression	8		512983	1					
ANR	513927	Identifier	handler_off		512983	1					
ANR	513928	IfStatement	if ( off >= bin -> size || off < tries_size )		512983	16					
ANR	513929	Condition	off >= bin -> size || off < tries_size	1322:9:35980:36015	512983	0	True				
ANR	513930	OrExpression	off >= bin -> size || off < tries_size		512983	0		||			
ANR	513931	RelationalExpression	off >= bin -> size		512983	0		>=			
ANR	513932	Identifier	off		512983	0					
ANR	513933	PtrMemberAccess	bin -> size		512983	1					
ANR	513934	Identifier	bin		512983	0					
ANR	513935	Identifier	size		512983	1					
ANR	513936	RelationalExpression	off < tries_size		512983	1		<			
ANR	513937	Identifier	off		512983	0					
ANR	513938	Identifier	tries_size		512983	1					
ANR	513939	CompoundStatement		139:47:4752:4752	512983	1					
ANR	513940	ExpressionStatement	R_FREE ( signature )	1323:6:36026:36044	512983	0	True				
ANR	513941	CallExpression	R_FREE ( signature )		512983	0					
ANR	513942	Callee	R_FREE		512983	0					
ANR	513943	Identifier	R_FREE		512983	0					
ANR	513944	ArgumentList	signature		512983	1					
ANR	513945	Argument	signature		512983	0					
ANR	513946	Identifier	signature		512983	0					
ANR	513947	BreakStatement	break ;	1324:6:36052:36057	512983	1	True				
ANR	513948	IdentifierDeclStatement	st64 size ;	1327:5:36112:36121	512983	17	True				
ANR	513949	IdentifierDecl	size		512983	0					
ANR	513950	IdentifierDeclType	st64		512983	0					
ANR	513951	Identifier	size		512983	1					
ANR	513952	ExpressionStatement	"r_buf_seek ( bf -> buf , off , R_BUF_SET )"	1328:5:36128:36164	512983	18	True				
ANR	513953	CallExpression	"r_buf_seek ( bf -> buf , off , R_BUF_SET )"		512983	0					
ANR	513954	Callee	r_buf_seek		512983	0					
ANR	513955	Identifier	r_buf_seek		512983	0					
ANR	513956	ArgumentList	bf -> buf		512983	1					
ANR	513957	Argument	bf -> buf		512983	0					
ANR	513958	PtrMemberAccess	bf -> buf		512983	0					
ANR	513959	Identifier	bf		512983	0					
ANR	513960	Identifier	buf		512983	1					
ANR	513961	Argument	off		512983	1					
ANR	513962	Identifier	off		512983	0					
ANR	513963	Argument	R_BUF_SET		512983	2					
ANR	513964	Identifier	R_BUF_SET		512983	0					
ANR	513965	IdentifierDeclStatement	"int r = r_buf_sleb128 ( bf -> buf , & size ) ;"	1329:5:36171:36209	512983	19	True				
ANR	513966	IdentifierDecl	"r = r_buf_sleb128 ( bf -> buf , & size )"		512983	0					
ANR	513967	IdentifierDeclType	int		512983	0					
ANR	513968	Identifier	r		512983	1					
ANR	513969	AssignmentExpression	"r = r_buf_sleb128 ( bf -> buf , & size )"		512983	2		=			
ANR	513970	Identifier	r		512983	0					
ANR	513971	CallExpression	"r_buf_sleb128 ( bf -> buf , & size )"		512983	1					
ANR	513972	Callee	r_buf_sleb128		512983	0					
ANR	513973	Identifier	r_buf_sleb128		512983	0					
ANR	513974	ArgumentList	bf -> buf		512983	1					
ANR	513975	Argument	bf -> buf		512983	0					
ANR	513976	PtrMemberAccess	bf -> buf		512983	0					
ANR	513977	Identifier	bf		512983	0					
ANR	513978	Identifier	buf		512983	1					
ANR	513979	Argument	& size		512983	1					
ANR	513980	UnaryOperationExpression	& size		512983	0					
ANR	513981	UnaryOperator	&		512983	0					
ANR	513982	Identifier	size		512983	1					
ANR	513983	IfStatement	if ( r <= 0 )		512983	20					
ANR	513984	Condition	r <= 0	1330:9:36220:36225	512983	0	True				
ANR	513985	RelationalExpression	r <= 0		512983	0		<=			
ANR	513986	Identifier	r		512983	0					
ANR	513987	PrimaryExpression	0		512983	1					
ANR	513988	CompoundStatement		147:17:4962:4962	512983	1					
ANR	513989	BreakStatement	break ;	1331:6:36236:36241	512983	0	True				
ANR	513990	IfStatement	if ( size <= 0 )		512983	21					
ANR	513991	Condition	size <= 0	1333:9:36259:36267	512983	0	True				
ANR	513992	RelationalExpression	size <= 0		512983	0		<=			
ANR	513993	Identifier	size		512983	0					
ANR	513994	PrimaryExpression	0		512983	1					
ANR	513995	CompoundStatement		150:20:5004:5004	512983	1					
ANR	513996	ExpressionStatement	catchAll = true	1334:6:36278:36293	512983	0	True				
ANR	513997	AssignmentExpression	catchAll = true		512983	0		=			
ANR	513998	Identifier	catchAll		512983	0					
ANR	513999	Identifier	true		512983	1					
ANR	514000	ExpressionStatement	size = - size	1335:6:36301:36313	512983	1	True				
ANR	514001	AssignmentExpression	size = - size		512983	0		=			
ANR	514002	Identifier	size		512983	0					
ANR	514003	UnaryOperationExpression	- size		512983	1					
ANR	514004	UnaryOperator	-		512983	0					
ANR	514005	Identifier	size		512983	1					
ANR	514006	ElseStatement	else		512983	0					
ANR	514007	CompoundStatement		154:12:5097:5097	512983	0					
ANR	514008	ExpressionStatement	catchAll = false	1338:6:36371:36387	512983	0	True				
ANR	514009	AssignmentExpression	catchAll = false		512983	0		=			
ANR	514010	Identifier	catchAll		512983	0					
ANR	514011	Identifier	false		512983	1					
ANR	514012	ForStatement	for ( m = 0 ; m < size ; m ++ )		512983	22					
ANR	514013	ForInit	m = 0 ;	1341:10:36407:36412	512983	0	True				
ANR	514014	AssignmentExpression	m = 0		512983	0		=			
ANR	514015	Identifier	m		512983	0					
ANR	514016	PrimaryExpression	0		512983	1					
ANR	514017	Condition	m < size	1341:17:36414:36421	512983	1	True				
ANR	514018	RelationalExpression	m < size		512983	0		<			
ANR	514019	Identifier	m		512983	0					
ANR	514020	Identifier	size		512983	1					
ANR	514021	PostIncDecOperationExpression	m ++	1341:27:36424:36426	512983	2	True				
ANR	514022	Identifier	m		512983	0					
ANR	514023	IncDec	++		512983	1					
ANR	514024	CompoundStatement		158:32:5163:5163	512983	3					
ANR	514025	ExpressionStatement	"r = r_buf_uleb128 ( bf -> buf , & handler_type )"	1342:6:36437:36479	512983	0	True				
ANR	514026	AssignmentExpression	"r = r_buf_uleb128 ( bf -> buf , & handler_type )"		512983	0		=			
ANR	514027	Identifier	r		512983	0					
ANR	514028	CallExpression	"r_buf_uleb128 ( bf -> buf , & handler_type )"		512983	1					
ANR	514029	Callee	r_buf_uleb128		512983	0					
ANR	514030	Identifier	r_buf_uleb128		512983	0					
ANR	514031	ArgumentList	bf -> buf		512983	1					
ANR	514032	Argument	bf -> buf		512983	0					
ANR	514033	PtrMemberAccess	bf -> buf		512983	0					
ANR	514034	Identifier	bf		512983	0					
ANR	514035	Identifier	buf		512983	1					
ANR	514036	Argument	& handler_type		512983	1					
ANR	514037	UnaryOperationExpression	& handler_type		512983	0					
ANR	514038	UnaryOperator	&		512983	0					
ANR	514039	Identifier	handler_type		512983	1					
ANR	514040	IfStatement	if ( r <= 0 )		512983	1					
ANR	514041	Condition	r <= 0	1343:10:36491:36496	512983	0	True				
ANR	514042	RelationalExpression	r <= 0		512983	0		<=			
ANR	514043	Identifier	r		512983	0					
ANR	514044	PrimaryExpression	0		512983	1					
ANR	514045	CompoundStatement		160:18:5233:5233	512983	1					
ANR	514046	BreakStatement	break ;	1344:7:36508:36513	512983	0	True				
ANR	514047	ExpressionStatement	"r = r_buf_uleb128 ( bf -> buf , & handler_addr )"	1346:6:36529:36571	512983	2	True				
ANR	514048	AssignmentExpression	"r = r_buf_uleb128 ( bf -> buf , & handler_addr )"		512983	0		=			
ANR	514049	Identifier	r		512983	0					
ANR	514050	CallExpression	"r_buf_uleb128 ( bf -> buf , & handler_addr )"		512983	1					
ANR	514051	Callee	r_buf_uleb128		512983	0					
ANR	514052	Identifier	r_buf_uleb128		512983	0					
ANR	514053	ArgumentList	bf -> buf		512983	1					
ANR	514054	Argument	bf -> buf		512983	0					
ANR	514055	PtrMemberAccess	bf -> buf		512983	0					
ANR	514056	Identifier	bf		512983	0					
ANR	514057	Identifier	buf		512983	1					
ANR	514058	Argument	& handler_addr		512983	1					
ANR	514059	UnaryOperationExpression	& handler_addr		512983	0					
ANR	514060	UnaryOperator	&		512983	0					
ANR	514061	Identifier	handler_addr		512983	1					
ANR	514062	IfStatement	if ( r <= 0 )		512983	3					
ANR	514063	Condition	r <= 0	1347:10:36583:36588	512983	0	True				
ANR	514064	RelationalExpression	r <= 0		512983	0		<=			
ANR	514065	Identifier	r		512983	0					
ANR	514066	PrimaryExpression	0		512983	1					
ANR	514067	CompoundStatement		164:18:5325:5325	512983	1					
ANR	514068	BreakStatement	break ;	1348:7:36600:36605	512983	0	True				
ANR	514069	IfStatement	if ( handler_type > 0 && handler_type < bin -> header . types_size )		512983	4					
ANR	514070	Condition	handler_type > 0 && handler_type < bin -> header . types_size	1351:10:36626:36682	512983	0	True				
ANR	514071	AndExpression	handler_type > 0 && handler_type < bin -> header . types_size		512983	0		&&			
ANR	514072	RelationalExpression	handler_type > 0		512983	0		>			
ANR	514073	Identifier	handler_type		512983	0					
ANR	514074	PrimaryExpression	0		512983	1					
ANR	514075	RelationalExpression	handler_type < bin -> header . types_size		512983	1		<			
ANR	514076	Identifier	handler_type		512983	0					
ANR	514077	MemberAccess	bin -> header . types_size		512983	1					
ANR	514078	PtrMemberAccess	bin -> header		512983	0					
ANR	514079	Identifier	bin		512983	0					
ANR	514080	Identifier	header		512983	1					
ANR	514081	Identifier	types_size		512983	1					
ANR	514082	CompoundStatement		168:69:5419:5419	512983	1					
ANR	514083	ExpressionStatement	"s = getstr ( bin , bin -> types [ handler_type ] . descriptor_id )"	1352:7:36694:36750	512983	0	True				
ANR	514084	AssignmentExpression	"s = getstr ( bin , bin -> types [ handler_type ] . descriptor_id )"		512983	0		=			
ANR	514085	Identifier	s		512983	0					
ANR	514086	CallExpression	"getstr ( bin , bin -> types [ handler_type ] . descriptor_id )"		512983	1					
ANR	514087	Callee	getstr		512983	0					
ANR	514088	Identifier	getstr		512983	0					
ANR	514089	ArgumentList	bin		512983	1					
ANR	514090	Argument	bin		512983	0					
ANR	514091	Identifier	bin		512983	0					
ANR	514092	Argument	bin -> types [ handler_type ] . descriptor_id		512983	1					
ANR	514093	MemberAccess	bin -> types [ handler_type ] . descriptor_id		512983	0					
ANR	514094	ArrayIndexing	bin -> types [ handler_type ]		512983	0					
ANR	514095	PtrMemberAccess	bin -> types		512983	0					
ANR	514096	Identifier	bin		512983	0					
ANR	514097	Identifier	types		512983	1					
ANR	514098	Identifier	handler_type		512983	1					
ANR	514099	Identifier	descriptor_id		512983	1					
ANR	514100	IfStatement	if ( dexdump )		512983	1					
ANR	514101	Condition	dexdump	1353:11:36763:36769	512983	0	True				
ANR	514102	Identifier	dexdump		512983	0					
ANR	514103	CompoundStatement		170:20:5506:5506	512983	1					
ANR	514104	Statement	cb_printf	1354:8:36782:36790	512983	0	True				
ANR	514105	Statement	(	1354:18:36792:36792	512983	1	True				
ANR	514106	Statement	"""          %s """	1355:9:36803:36817	512983	2	True				
ANR	514107	Statement	"""-> 0x%04"""	1356:9:36828:36837	512983	3	True				
ANR	514108	Statement	PFMT64x	1356:19:36838:36844	512983	4	True				
ANR	514109	Statement	"""\\n"""	1356:26:36845:36848	512983	5	True				
ANR	514110	Statement	","	1356:30:36849:36849	512983	6	True				
ANR	514111	Statement	s	1357:9:36860:36860	512983	7	True				
ANR	514112	Statement	","	1357:10:36861:36861	512983	8	True				
ANR	514113	Statement	handler_addr	1358:9:36872:36883	512983	9	True				
ANR	514114	Statement	)	1358:21:36884:36884	512983	10	True				
ANR	514115	ExpressionStatement		1358:22:36885:36885	512983	11	True				
ANR	514116	ExpressionStatement	free ( s )	1360:7:36903:36911	512983	2	True				
ANR	514117	CallExpression	free ( s )		512983	0					
ANR	514118	Callee	free		512983	0					
ANR	514119	Identifier	free		512983	0					
ANR	514120	ArgumentList	s		512983	1					
ANR	514121	Argument	s		512983	0					
ANR	514122	Identifier	s		512983	0					
ANR	514123	ElseStatement	else		512983	0					
ANR	514124	CompoundStatement		178:13:5660:5660	512983	0					
ANR	514125	IfStatement	if ( dexdump )		512983	0					
ANR	514126	Condition	dexdump	1362:11:36939:36945	512983	0	True				
ANR	514127	Identifier	dexdump		512983	0					
ANR	514128	CompoundStatement		179:20:5682:5682	512983	1					
ANR	514129	Statement	cb_printf	1363:8:36958:36966	512983	0	True				
ANR	514130	Statement	(	1363:18:36968:36968	512983	1	True				
ANR	514131	Statement	"""          (error) -> 0x%04"""	1363:19:36969:36996	512983	2	True				
ANR	514132	Statement	PFMT64x	1363:47:36997:37003	512983	3	True				
ANR	514133	Statement	"""\\n"""	1363:54:37004:37007	512983	4	True				
ANR	514134	Statement	","	1363:58:37008:37008	512983	5	True				
ANR	514135	Statement	handler_addr	1363:60:37010:37021	512983	6	True				
ANR	514136	Statement	)	1363:72:37022:37022	512983	7	True				
ANR	514137	ExpressionStatement		1363:73:37023:37023	512983	8	True				
ANR	514138	IfStatement	if ( catchAll )		512983	23					
ANR	514139	Condition	catchAll	1367:9:37058:37065	512983	0	True				
ANR	514140	Identifier	catchAll		512983	0					
ANR	514141	CompoundStatement		184:19:5802:5802	512983	1					
ANR	514142	ExpressionStatement	"r = r_buf_uleb128 ( bf -> buf , & v2 )"	1368:6:37076:37108	512983	0	True				
ANR	514143	AssignmentExpression	"r = r_buf_uleb128 ( bf -> buf , & v2 )"		512983	0		=			
ANR	514144	Identifier	r		512983	0					
ANR	514145	CallExpression	"r_buf_uleb128 ( bf -> buf , & v2 )"		512983	1					
ANR	514146	Callee	r_buf_uleb128		512983	0					
ANR	514147	Identifier	r_buf_uleb128		512983	0					
ANR	514148	ArgumentList	bf -> buf		512983	1					
ANR	514149	Argument	bf -> buf		512983	0					
ANR	514150	PtrMemberAccess	bf -> buf		512983	0					
ANR	514151	Identifier	bf		512983	0					
ANR	514152	Identifier	buf		512983	1					
ANR	514153	Argument	& v2		512983	1					
ANR	514154	UnaryOperationExpression	& v2		512983	0					
ANR	514155	UnaryOperator	&		512983	0					
ANR	514156	Identifier	v2		512983	1					
ANR	514157	IfStatement	if ( r <= 0 )		512983	1					
ANR	514158	Condition	r <= 0	1369:10:37120:37125	512983	0	True				
ANR	514159	RelationalExpression	r <= 0		512983	0		<=			
ANR	514160	Identifier	r		512983	0					
ANR	514161	PrimaryExpression	0		512983	1					
ANR	514162	CompoundStatement		186:18:5862:5862	512983	1					
ANR	514163	BreakStatement	break ;	1370:7:37137:37142	512983	0	True				
ANR	514164	IfStatement	if ( dexdump )		512983	2					
ANR	514165	Condition	dexdump	1372:10:37162:37168	512983	0	True				
ANR	514166	Identifier	dexdump		512983	0					
ANR	514167	CompoundStatement		189:19:5905:5905	512983	1					
ANR	514168	Statement	cb_printf	1373:7:37180:37188	512983	0	True				
ANR	514169	Statement	(	1373:17:37190:37190	512983	1	True				
ANR	514170	Statement	"""          <any> -> 0x%04"""	1373:18:37191:37216	512983	2	True				
ANR	514171	Statement	PFMT64x	1373:44:37217:37223	512983	3	True				
ANR	514172	Statement	"""\\n"""	1373:51:37224:37227	512983	4	True				
ANR	514173	Statement	","	1373:55:37228:37228	512983	5	True				
ANR	514174	Statement	v2	1373:57:37230:37231	512983	6	True				
ANR	514175	Statement	)	1373:59:37232:37232	512983	7	True				
ANR	514176	ExpressionStatement		1373:60:37233:37233	512983	8	True				
ANR	514177	ElseStatement	else		512983	0					
ANR	514178	CompoundStatement		194:10:6000:6000	512983	0					
ANR	514179	IfStatement	if ( dexdump )		512983	0					
ANR	514180	Condition	dexdump	1378:8:37276:37282	512983	0	True				
ANR	514181	Identifier	dexdump		512983	0					
ANR	514182	CompoundStatement		195:17:6019:6019	512983	1					
ANR	514183	Statement	cb_printf	1379:5:37292:37300	512983	0	True				
ANR	514184	Statement	(	1379:15:37302:37302	512983	1	True				
ANR	514185	Statement	"""      catches       : """	1380:6:37310:37333	512983	2	True				
ANR	514186	Statement	"""(none)\\n"""	1381:6:37341:37350	512983	3	True				
ANR	514187	Statement	)	1381:16:37351:37351	512983	4	True				
ANR	514188	ExpressionStatement		1381:17:37352:37352	512983	5	True				
ANR	514189	ElseStatement	else		512983	0					
ANR	514190	CompoundStatement		201:9:6108:6108	512983	0					
ANR	514191	IfStatement	if ( dexdump )		512983	0					
ANR	514192	Condition	dexdump	1385:7:37383:37389	512983	0	True				
ANR	514193	Identifier	dexdump		512983	0					
ANR	514194	CompoundStatement		202:16:6126:6126	512983	1					
ANR	514195	ExpressionStatement	"cb_printf ( ""      code          : (none)\\n"" )"	1386:4:37398:37448	512983	0	True				
ANR	514196	CallExpression	"cb_printf ( ""      code          : (none)\\n"" )"		512983	0					
ANR	514197	Callee	cb_printf		512983	0					
ANR	514198	Identifier	cb_printf		512983	0					
ANR	514199	ArgumentList	"""      code          : (none)\\n"""		512983	1					
ANR	514200	Argument	"""      code          : (none)\\n"""		512983	0					
ANR	514201	PrimaryExpression	"""      code          : (none)\\n"""		512983	0					
ANR	514202	IfStatement	if ( * flag_name )		512983	18					
ANR	514203	Condition	* flag_name	1390:6:37465:37474	512983	0	True				
ANR	514204	UnaryOperationExpression	* flag_name		512983	0					
ANR	514205	UnaryOperator	*		512983	0					
ANR	514206	Identifier	flag_name		512983	1					
ANR	514207	CompoundStatement		208:3:6216:6253	512983	1					
ANR	514208	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1391:3:37482:37519	512983	0	True				
ANR	514209	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		512983	0					
ANR	514210	IdentifierDeclType	RBinSymbol *		512983	0					
ANR	514211	Identifier	sym		512983	1					
ANR	514212	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		512983	2		=			
ANR	514213	Identifier	sym		512983	0					
ANR	514214	CallExpression	R_NEW0 ( RBinSymbol )		512983	1					
ANR	514215	Callee	R_NEW0		512983	0					
ANR	514216	Identifier	R_NEW0		512983	0					
ANR	514217	ArgumentList	RBinSymbol		512983	1					
ANR	514218	Argument	RBinSymbol		512983	0					
ANR	514219	Identifier	RBinSymbol		512983	0					
ANR	514220	IfStatement	if ( ! sym )		512983	1					
ANR	514221	Condition	! sym	1392:7:37528:37531	512983	0	True				
ANR	514222	UnaryOperationExpression	! sym		512983	0					
ANR	514223	UnaryOperator	!		512983	0					
ANR	514224	Identifier	sym		512983	1					
ANR	514225	CompoundStatement		209:13:6268:6268	512983	1					
ANR	514226	ExpressionStatement	R_FREE ( flag_name )	1393:4:37540:37558	512983	0	True				
ANR	514227	CallExpression	R_FREE ( flag_name )		512983	0					
ANR	514228	Callee	R_FREE		512983	0					
ANR	514229	Identifier	R_FREE		512983	0					
ANR	514230	ArgumentList	flag_name		512983	1					
ANR	514231	Argument	flag_name		512983	0					
ANR	514232	Identifier	flag_name		512983	0					
ANR	514233	ReturnStatement	return NULL ;	1394:4:37564:37575	512983	1	True				
ANR	514234	Identifier	NULL		512983	0					
ANR	514235	ExpressionStatement	sym -> name = flag_name	1396:3:37585:37606	512983	2	True				
ANR	514236	AssignmentExpression	sym -> name = flag_name		512983	0		=			
ANR	514237	PtrMemberAccess	sym -> name		512983	0					
ANR	514238	Identifier	sym		512983	0					
ANR	514239	Identifier	name		512983	1					
ANR	514240	Identifier	flag_name		512983	1					
ANR	514241	IfStatement	if ( MC > 0 )		512983	3					
ANR	514242	Condition	MC > 0	1400:7:37743:37748	512983	0	True				
ANR	514243	RelationalExpression	MC > 0		512983	0		>			
ANR	514244	Identifier	MC		512983	0					
ANR	514245	PrimaryExpression	0		512983	1					
ANR	514246	CompoundStatement		217:15:6485:6485	512983	1					
ANR	514247	ExpressionStatement	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )	1401:4:37757:37802	512983	0	True				
ANR	514248	AssignmentExpression	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )		512983	0		=			
ANR	514249	PtrMemberAccess	sym -> type		512983	0					
ANR	514250	Identifier	sym		512983	0					
ANR	514251	Identifier	type		512983	1					
ANR	514252	CallExpression	r_str_const ( R_BIN_TYPE_FUNC_STR )		512983	1					
ANR	514253	Callee	r_str_const		512983	0					
ANR	514254	Identifier	r_str_const		512983	0					
ANR	514255	ArgumentList	R_BIN_TYPE_FUNC_STR		512983	1					
ANR	514256	Argument	R_BIN_TYPE_FUNC_STR		512983	0					
ANR	514257	Identifier	R_BIN_TYPE_FUNC_STR		512983	0					
ANR	514258	ExpressionStatement	sym -> paddr = MC	1402:4:37808:37823	512983	1	True				
ANR	514259	AssignmentExpression	sym -> paddr = MC		512983	0		=			
ANR	514260	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514261	Identifier	sym		512983	0					
ANR	514262	Identifier	paddr		512983	1					
ANR	514263	Identifier	MC		512983	1					
ANR	514264	ExpressionStatement	sym -> vaddr = MC	1403:4:37839:37854	512983	2	True				
ANR	514265	AssignmentExpression	sym -> vaddr = MC		512983	0		=			
ANR	514266	PtrMemberAccess	sym -> vaddr		512983	0					
ANR	514267	Identifier	sym		512983	0					
ANR	514268	Identifier	vaddr		512983	1					
ANR	514269	Identifier	MC		512983	1					
ANR	514270	ElseStatement	else		512983	0					
ANR	514271	CompoundStatement		221:10:6610:6610	512983	0					
ANR	514272	ExpressionStatement	sym -> type = r_str_const ( R_BIN_TYPE_METH_STR )	1405:4:37882:37927	512983	0	True				
ANR	514273	AssignmentExpression	sym -> type = r_str_const ( R_BIN_TYPE_METH_STR )		512983	0		=			
ANR	514274	PtrMemberAccess	sym -> type		512983	0					
ANR	514275	Identifier	sym		512983	0					
ANR	514276	Identifier	type		512983	1					
ANR	514277	CallExpression	r_str_const ( R_BIN_TYPE_METH_STR )		512983	1					
ANR	514278	Callee	r_str_const		512983	0					
ANR	514279	Identifier	r_str_const		512983	0					
ANR	514280	ArgumentList	R_BIN_TYPE_METH_STR		512983	1					
ANR	514281	Argument	R_BIN_TYPE_METH_STR		512983	0					
ANR	514282	Identifier	R_BIN_TYPE_METH_STR		512983	0					
ANR	514283	ExpressionStatement	sym -> paddr = encoded_method_addr - bufbuf	1406:4:37933:37974	512983	1	True				
ANR	514284	AssignmentExpression	sym -> paddr = encoded_method_addr - bufbuf		512983	0		=			
ANR	514285	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514286	Identifier	sym		512983	0					
ANR	514287	Identifier	paddr		512983	1					
ANR	514288	AdditiveExpression	encoded_method_addr - bufbuf		512983	1		-			
ANR	514289	Identifier	encoded_method_addr		512983	0					
ANR	514290	Identifier	bufbuf		512983	1					
ANR	514291	ExpressionStatement	sym -> vaddr = encoded_method_addr - bufbuf	1407:4:37980:38021	512983	2	True				
ANR	514292	AssignmentExpression	sym -> vaddr = encoded_method_addr - bufbuf		512983	0		=			
ANR	514293	PtrMemberAccess	sym -> vaddr		512983	0					
ANR	514294	Identifier	sym		512983	0					
ANR	514295	Identifier	vaddr		512983	1					
ANR	514296	AdditiveExpression	encoded_method_addr - bufbuf		512983	1		-			
ANR	514297	Identifier	encoded_method_addr		512983	0					
ANR	514298	Identifier	bufbuf		512983	1					
ANR	514299	ExpressionStatement	"bin -> code_from = R_MIN ( bin -> code_from , sym -> paddr )"	1409:3:38031:38082	512983	4	True				
ANR	514300	AssignmentExpression	"bin -> code_from = R_MIN ( bin -> code_from , sym -> paddr )"		512983	0		=			
ANR	514301	PtrMemberAccess	bin -> code_from		512983	0					
ANR	514302	Identifier	bin		512983	0					
ANR	514303	Identifier	code_from		512983	1					
ANR	514304	CallExpression	"R_MIN ( bin -> code_from , sym -> paddr )"		512983	1					
ANR	514305	Callee	R_MIN		512983	0					
ANR	514306	Identifier	R_MIN		512983	0					
ANR	514307	ArgumentList	bin -> code_from		512983	1					
ANR	514308	Argument	bin -> code_from		512983	0					
ANR	514309	PtrMemberAccess	bin -> code_from		512983	0					
ANR	514310	Identifier	bin		512983	0					
ANR	514311	Identifier	code_from		512983	1					
ANR	514312	Argument	sym -> paddr		512983	1					
ANR	514313	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514314	Identifier	sym		512983	0					
ANR	514315	Identifier	paddr		512983	1					
ANR	514316	IfStatement	if ( ( MA & 1 ) == 1 )		512983	5					
ANR	514317	Condition	( MA & 1 ) == 1	1410:7:38091:38103	512983	0	True				
ANR	514318	EqualityExpression	( MA & 1 ) == 1		512983	0		==			
ANR	514319	BitAndExpression	MA & 1		512983	0		&			
ANR	514320	Identifier	MA		512983	0					
ANR	514321	PrimaryExpression	1		512983	1					
ANR	514322	PrimaryExpression	1		512983	1					
ANR	514323	CompoundStatement		227:22:6840:6840	512983	1					
ANR	514324	ExpressionStatement	sym -> bind = r_str_const ( R_BIN_BIND_GLOBAL_STR )	1411:4:38112:38159	512983	0	True				
ANR	514325	AssignmentExpression	sym -> bind = r_str_const ( R_BIN_BIND_GLOBAL_STR )		512983	0		=			
ANR	514326	PtrMemberAccess	sym -> bind		512983	0					
ANR	514327	Identifier	sym		512983	0					
ANR	514328	Identifier	bind		512983	1					
ANR	514329	CallExpression	r_str_const ( R_BIN_BIND_GLOBAL_STR )		512983	1					
ANR	514330	Callee	r_str_const		512983	0					
ANR	514331	Identifier	r_str_const		512983	0					
ANR	514332	ArgumentList	R_BIN_BIND_GLOBAL_STR		512983	1					
ANR	514333	Argument	R_BIN_BIND_GLOBAL_STR		512983	0					
ANR	514334	Identifier	R_BIN_BIND_GLOBAL_STR		512983	0					
ANR	514335	ElseStatement	else		512983	0					
ANR	514336	CompoundStatement		229:10:6905:6905	512983	0					
ANR	514337	ExpressionStatement	sym -> bind = r_str_const ( R_BIN_BIND_LOCAL_STR )	1413:4:38177:38223	512983	0	True				
ANR	514338	AssignmentExpression	sym -> bind = r_str_const ( R_BIN_BIND_LOCAL_STR )		512983	0		=			
ANR	514339	PtrMemberAccess	sym -> bind		512983	0					
ANR	514340	Identifier	sym		512983	0					
ANR	514341	Identifier	bind		512983	1					
ANR	514342	CallExpression	r_str_const ( R_BIN_BIND_LOCAL_STR )		512983	1					
ANR	514343	Callee	r_str_const		512983	0					
ANR	514344	Identifier	r_str_const		512983	0					
ANR	514345	ArgumentList	R_BIN_BIND_LOCAL_STR		512983	1					
ANR	514346	Argument	R_BIN_BIND_LOCAL_STR		512983	0					
ANR	514347	Identifier	R_BIN_BIND_LOCAL_STR		512983	0					
ANR	514348	ExpressionStatement	sym -> method_flags = get_method_flags ( MA )	1416:3:38234:38275	512983	6	True				
ANR	514349	AssignmentExpression	sym -> method_flags = get_method_flags ( MA )		512983	0		=			
ANR	514350	PtrMemberAccess	sym -> method_flags		512983	0					
ANR	514351	Identifier	sym		512983	0					
ANR	514352	Identifier	method_flags		512983	1					
ANR	514353	CallExpression	get_method_flags ( MA )		512983	1					
ANR	514354	Callee	get_method_flags		512983	0					
ANR	514355	Identifier	get_method_flags		512983	0					
ANR	514356	ArgumentList	MA		512983	1					
ANR	514357	Argument	MA		512983	0					
ANR	514358	Identifier	MA		512983	0					
ANR	514359	ExpressionStatement	sym -> ordinal = ( * sym_count ) ++	1418:3:38281:38310	512983	7	True				
ANR	514360	AssignmentExpression	sym -> ordinal = ( * sym_count ) ++		512983	0		=			
ANR	514361	PtrMemberAccess	sym -> ordinal		512983	0					
ANR	514362	Identifier	sym		512983	0					
ANR	514363	Identifier	ordinal		512983	1					
ANR	514364	PostIncDecOperationExpression	( * sym_count ) ++		512983	1					
ANR	514365	UnaryOperationExpression	* sym_count		512983	0					
ANR	514366	UnaryOperator	*		512983	0					
ANR	514367	Identifier	sym_count		512983	1					
ANR	514368	IncDec	++		512983	1					
ANR	514369	IfStatement	if ( MC > 0 )		512983	8					
ANR	514370	Condition	MC > 0	1419:7:38319:38324	512983	0	True				
ANR	514371	RelationalExpression	MC > 0		512983	0		>			
ANR	514372	Identifier	MC		512983	0					
ANR	514373	PrimaryExpression	0		512983	1					
ANR	514374	CompoundStatement		245:4:7333:7373	512983	1					
ANR	514375	IdentifierDeclStatement	ut64 bufsz = r_buf_size ( bf -> buf ) ;	1420:4:38333:38366	512983	0	True				
ANR	514376	IdentifierDecl	bufsz = r_buf_size ( bf -> buf )		512983	0					
ANR	514377	IdentifierDeclType	ut64		512983	0					
ANR	514378	Identifier	bufsz		512983	1					
ANR	514379	AssignmentExpression	bufsz = r_buf_size ( bf -> buf )		512983	2		=			
ANR	514380	Identifier	bufsz		512983	0					
ANR	514381	CallExpression	r_buf_size ( bf -> buf )		512983	1					
ANR	514382	Callee	r_buf_size		512983	0					
ANR	514383	Identifier	r_buf_size		512983	0					
ANR	514384	ArgumentList	bf -> buf		512983	1					
ANR	514385	Argument	bf -> buf		512983	0					
ANR	514386	PtrMemberAccess	bf -> buf		512983	0					
ANR	514387	Identifier	bf		512983	0					
ANR	514388	Identifier	buf		512983	1					
ANR	514389	IfStatement	if ( bufsz < MC || bufsz < MC + 16 )		512983	1					
ANR	514390	Condition	bufsz < MC || bufsz < MC + 16	1421:8:38376:38404	512983	0	True				
ANR	514391	OrExpression	bufsz < MC || bufsz < MC + 16		512983	0		||			
ANR	514392	RelationalExpression	bufsz < MC		512983	0		<			
ANR	514393	Identifier	bufsz		512983	0					
ANR	514394	Identifier	MC		512983	1					
ANR	514395	RelationalExpression	bufsz < MC + 16		512983	1		<			
ANR	514396	Identifier	bufsz		512983	0					
ANR	514397	AdditiveExpression	MC + 16		512983	1		+			
ANR	514398	Identifier	MC		512983	0					
ANR	514399	PrimaryExpression	16		512983	1					
ANR	514400	CompoundStatement		238:39:7141:7141	512983	1					
ANR	514401	ExpressionStatement	R_FREE ( sym )	1422:5:38414:38426	512983	0	True				
ANR	514402	CallExpression	R_FREE ( sym )		512983	0					
ANR	514403	Callee	R_FREE		512983	0					
ANR	514404	Identifier	R_FREE		512983	0					
ANR	514405	ArgumentList	sym		512983	1					
ANR	514406	Argument	sym		512983	0					
ANR	514407	Identifier	sym		512983	0					
ANR	514408	ExpressionStatement	R_FREE ( signature )	1423:5:38433:38451	512983	1	True				
ANR	514409	CallExpression	R_FREE ( signature )		512983	0					
ANR	514410	Callee	R_FREE		512983	0					
ANR	514411	Identifier	R_FREE		512983	0					
ANR	514412	ArgumentList	signature		512983	1					
ANR	514413	Argument	signature		512983	0					
ANR	514414	Identifier	signature		512983	0					
ANR	514415	ContinueStatement	continue ;	1424:5:38458:38466	512983	2	True				
ANR	514416	IdentifierDeclStatement	"ut16 tries_size = r_buf_read_le16_at ( bf -> buf , MC + 6 ) ;"	1426:4:38478:38532	512983	2	True				
ANR	514417	IdentifierDecl	"tries_size = r_buf_read_le16_at ( bf -> buf , MC + 6 )"		512983	0					
ANR	514418	IdentifierDeclType	ut16		512983	0					
ANR	514419	Identifier	tries_size		512983	1					
ANR	514420	AssignmentExpression	"tries_size = r_buf_read_le16_at ( bf -> buf , MC + 6 )"		512983	2		=			
ANR	514421	Identifier	tries_size		512983	0					
ANR	514422	CallExpression	"r_buf_read_le16_at ( bf -> buf , MC + 6 )"		512983	1					
ANR	514423	Callee	r_buf_read_le16_at		512983	0					
ANR	514424	Identifier	r_buf_read_le16_at		512983	0					
ANR	514425	ArgumentList	bf -> buf		512983	1					
ANR	514426	Argument	bf -> buf		512983	0					
ANR	514427	PtrMemberAccess	bf -> buf		512983	0					
ANR	514428	Identifier	bf		512983	0					
ANR	514429	Identifier	buf		512983	1					
ANR	514430	Argument	MC + 6		512983	1					
ANR	514431	AdditiveExpression	MC + 6		512983	0		+			
ANR	514432	Identifier	MC		512983	0					
ANR	514433	PrimaryExpression	6		512983	1					
ANR	514434	IdentifierDeclStatement	"ut32 insns_size = r_buf_read_le32_at ( bf -> buf , MC + 12 ) ;"	1427:4:38538:38593	512983	3	True				
ANR	514435	IdentifierDecl	"insns_size = r_buf_read_le32_at ( bf -> buf , MC + 12 )"		512983	0					
ANR	514436	IdentifierDeclType	ut32		512983	0					
ANR	514437	Identifier	insns_size		512983	1					
ANR	514438	AssignmentExpression	"insns_size = r_buf_read_le32_at ( bf -> buf , MC + 12 )"		512983	2		=			
ANR	514439	Identifier	insns_size		512983	0					
ANR	514440	CallExpression	"r_buf_read_le32_at ( bf -> buf , MC + 12 )"		512983	1					
ANR	514441	Callee	r_buf_read_le32_at		512983	0					
ANR	514442	Identifier	r_buf_read_le32_at		512983	0					
ANR	514443	ArgumentList	bf -> buf		512983	1					
ANR	514444	Argument	bf -> buf		512983	0					
ANR	514445	PtrMemberAccess	bf -> buf		512983	0					
ANR	514446	Identifier	bf		512983	0					
ANR	514447	Identifier	buf		512983	1					
ANR	514448	Argument	MC + 12		512983	1					
ANR	514449	AdditiveExpression	MC + 12		512983	0		+			
ANR	514450	Identifier	MC		512983	0					
ANR	514451	PrimaryExpression	12		512983	1					
ANR	514452	IdentifierDeclStatement	ut64 prolog_size = 2 + 2 + 2 + 2 + 4 + 4 ;	1428:4:38599:38639	512983	4	True				
ANR	514453	IdentifierDecl	prolog_size = 2 + 2 + 2 + 2 + 4 + 4		512983	0					
ANR	514454	IdentifierDeclType	ut64		512983	0					
ANR	514455	Identifier	prolog_size		512983	1					
ANR	514456	AssignmentExpression	prolog_size = 2 + 2 + 2 + 2 + 4 + 4		512983	2		=			
ANR	514457	Identifier	prolog_size		512983	0					
ANR	514458	AdditiveExpression	2 + 2 + 2 + 2 + 4 + 4		512983	1		+			
ANR	514459	PrimaryExpression	2		512983	0					
ANR	514460	AdditiveExpression	2 + 2 + 2 + 4 + 4		512983	1		+			
ANR	514461	PrimaryExpression	2		512983	0					
ANR	514462	AdditiveExpression	2 + 2 + 4 + 4		512983	1		+			
ANR	514463	PrimaryExpression	2		512983	0					
ANR	514464	AdditiveExpression	2 + 4 + 4		512983	1		+			
ANR	514465	PrimaryExpression	2		512983	0					
ANR	514466	AdditiveExpression	4 + 4		512983	1		+			
ANR	514467	PrimaryExpression	4		512983	0					
ANR	514468	PrimaryExpression	4		512983	1					
ANR	514469	IfStatement	if ( tries_size > 0 )		512983	5					
ANR	514470	Condition	tries_size > 0	1429:8:38649:38662	512983	0	True				
ANR	514471	RelationalExpression	tries_size > 0		512983	0		>			
ANR	514472	Identifier	tries_size		512983	0					
ANR	514473	PrimaryExpression	0		512983	1					
ANR	514474	CompoundStatement		246:24:7399:7399	512983	1					
ANR	514475	ExpressionStatement	sym -> paddr = MC + prolog_size	1433:4:38787:38816	512983	6	True				
ANR	514476	AssignmentExpression	sym -> paddr = MC + prolog_size		512983	0		=			
ANR	514477	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514478	Identifier	sym		512983	0					
ANR	514479	Identifier	paddr		512983	1					
ANR	514480	AdditiveExpression	MC + prolog_size		512983	1		+			
ANR	514481	Identifier	MC		512983	0					
ANR	514482	Identifier	prolog_size		512983	1					
ANR	514483	ExpressionStatement	sym -> vaddr = MC + prolog_size	1434:4:38832:38861	512983	7	True				
ANR	514484	AssignmentExpression	sym -> vaddr = MC + prolog_size		512983	0		=			
ANR	514485	PtrMemberAccess	sym -> vaddr		512983	0					
ANR	514486	Identifier	sym		512983	0					
ANR	514487	Identifier	vaddr		512983	1					
ANR	514488	AdditiveExpression	MC + prolog_size		512983	1		+			
ANR	514489	Identifier	MC		512983	0					
ANR	514490	Identifier	prolog_size		512983	1					
ANR	514491	ExpressionStatement	sym -> size = insns_size * 2	1436:4:38900:38926	512983	8	True				
ANR	514492	AssignmentExpression	sym -> size = insns_size * 2		512983	0		=			
ANR	514493	PtrMemberAccess	sym -> size		512983	0					
ANR	514494	Identifier	sym		512983	0					
ANR	514495	Identifier	size		512983	1					
ANR	514496	MultiplicativeExpression	insns_size * 2		512983	1		*			
ANR	514497	Identifier	insns_size		512983	0					
ANR	514498	PrimaryExpression	2		512983	1					
ANR	514499	ExpressionStatement	"r_list_append ( bin -> methods_list , sym )"	1439:4:39162:39200	512983	9	True				
ANR	514500	CallExpression	"r_list_append ( bin -> methods_list , sym )"		512983	0					
ANR	514501	Callee	r_list_append		512983	0					
ANR	514502	Identifier	r_list_append		512983	0					
ANR	514503	ArgumentList	bin -> methods_list		512983	1					
ANR	514504	Argument	bin -> methods_list		512983	0					
ANR	514505	PtrMemberAccess	bin -> methods_list		512983	0					
ANR	514506	Identifier	bin		512983	0					
ANR	514507	Identifier	methods_list		512983	1					
ANR	514508	Argument	sym		512983	1					
ANR	514509	Identifier	sym		512983	0					
ANR	514510	ExpressionStatement	"r_list_append ( cls -> methods , sym )"	1440:4:39206:39239	512983	10	True				
ANR	514511	CallExpression	"r_list_append ( cls -> methods , sym )"		512983	0					
ANR	514512	Callee	r_list_append		512983	0					
ANR	514513	Identifier	r_list_append		512983	0					
ANR	514514	ArgumentList	cls -> methods		512983	1					
ANR	514515	Argument	cls -> methods		512983	0					
ANR	514516	PtrMemberAccess	cls -> methods		512983	0					
ANR	514517	Identifier	cls		512983	0					
ANR	514518	Identifier	methods		512983	1					
ANR	514519	Argument	sym		512983	1					
ANR	514520	Identifier	sym		512983	0					
ANR	514521	IfStatement	if ( bin -> code_from == UT64_MAX || bin -> code_from > sym -> paddr )		512983	11					
ANR	514522	Condition	bin -> code_from == UT64_MAX || bin -> code_from > sym -> paddr	1442:8:39250:39306	512983	0	True				
ANR	514523	OrExpression	bin -> code_from == UT64_MAX || bin -> code_from > sym -> paddr		512983	0		||			
ANR	514524	EqualityExpression	bin -> code_from == UT64_MAX		512983	0		==			
ANR	514525	PtrMemberAccess	bin -> code_from		512983	0					
ANR	514526	Identifier	bin		512983	0					
ANR	514527	Identifier	code_from		512983	1					
ANR	514528	Identifier	UT64_MAX		512983	1					
ANR	514529	RelationalExpression	bin -> code_from > sym -> paddr		512983	1		>			
ANR	514530	PtrMemberAccess	bin -> code_from		512983	0					
ANR	514531	Identifier	bin		512983	0					
ANR	514532	Identifier	code_from		512983	1					
ANR	514533	PtrMemberAccess	sym -> paddr		512983	1					
ANR	514534	Identifier	sym		512983	0					
ANR	514535	Identifier	paddr		512983	1					
ANR	514536	CompoundStatement		259:67:8043:8043	512983	1					
ANR	514537	ExpressionStatement	bin -> code_from = sym -> paddr	1443:5:39316:39343	512983	0	True				
ANR	514538	AssignmentExpression	bin -> code_from = sym -> paddr		512983	0		=			
ANR	514539	PtrMemberAccess	bin -> code_from		512983	0					
ANR	514540	Identifier	bin		512983	0					
ANR	514541	Identifier	code_from		512983	1					
ANR	514542	PtrMemberAccess	sym -> paddr		512983	1					
ANR	514543	Identifier	sym		512983	0					
ANR	514544	Identifier	paddr		512983	1					
ANR	514545	IfStatement	if ( bin -> code_to < sym -> paddr )		512983	12					
ANR	514546	Condition	bin -> code_to < sym -> paddr	1445:8:39359:39383	512983	0	True				
ANR	514547	RelationalExpression	bin -> code_to < sym -> paddr		512983	0		<			
ANR	514548	PtrMemberAccess	bin -> code_to		512983	0					
ANR	514549	Identifier	bin		512983	0					
ANR	514550	Identifier	code_to		512983	1					
ANR	514551	PtrMemberAccess	sym -> paddr		512983	1					
ANR	514552	Identifier	sym		512983	0					
ANR	514553	Identifier	paddr		512983	1					
ANR	514554	CompoundStatement		262:35:8120:8120	512983	1					
ANR	514555	ExpressionStatement	bin -> code_to = sym -> paddr + sym -> size	1446:5:39393:39430	512983	0	True				
ANR	514556	AssignmentExpression	bin -> code_to = sym -> paddr + sym -> size		512983	0		=			
ANR	514557	PtrMemberAccess	bin -> code_to		512983	0					
ANR	514558	Identifier	bin		512983	0					
ANR	514559	Identifier	code_to		512983	1					
ANR	514560	AdditiveExpression	sym -> paddr + sym -> size		512983	1		+			
ANR	514561	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514562	Identifier	sym		512983	0					
ANR	514563	Identifier	paddr		512983	1					
ANR	514564	PtrMemberAccess	sym -> size		512983	1					
ANR	514565	Identifier	sym		512983	0					
ANR	514566	Identifier	size		512983	1					
ANR	514567	IfStatement	if ( ! mdb )		512983	13					
ANR	514568	Condition	! mdb	1449:8:39447:39450	512983	0	True				
ANR	514569	UnaryOperationExpression	! mdb		512983	0					
ANR	514570	UnaryOperator	!		512983	0					
ANR	514571	Identifier	mdb		512983	1					
ANR	514572	CompoundStatement		266:14:8187:8187	512983	1					
ANR	514573	ExpressionStatement	mdb = sdb_new0 ( )	1450:5:39460:39477	512983	0	True				
ANR	514574	AssignmentExpression	mdb = sdb_new0 ( )		512983	0		=			
ANR	514575	Identifier	mdb		512983	0					
ANR	514576	CallExpression	sdb_new0 ( )		512983	1					
ANR	514577	Callee	sdb_new0		512983	0					
ANR	514578	Identifier	sdb_new0		512983	0					
ANR	514579	ArgumentList			512983	1					
ANR	514580	ExpressionStatement	"sdb_num_set ( mdb , sdb_fmt ( ""method.%d"" , MI ) , sym -> paddr , 0 )"	1452:4:39489:39548	512983	14	True				
ANR	514581	CallExpression	"sdb_num_set ( mdb , sdb_fmt ( ""method.%d"" , MI ) , sym -> paddr , 0 )"		512983	0					
ANR	514582	Callee	sdb_num_set		512983	0					
ANR	514583	Identifier	sdb_num_set		512983	0					
ANR	514584	ArgumentList	mdb		512983	1					
ANR	514585	Argument	mdb		512983	0					
ANR	514586	Identifier	mdb		512983	0					
ANR	514587	Argument	"sdb_fmt ( ""method.%d"" , MI )"		512983	1					
ANR	514588	CallExpression	"sdb_fmt ( ""method.%d"" , MI )"		512983	0					
ANR	514589	Callee	sdb_fmt		512983	0					
ANR	514590	Identifier	sdb_fmt		512983	0					
ANR	514591	ArgumentList	"""method.%d"""		512983	1					
ANR	514592	Argument	"""method.%d"""		512983	0					
ANR	514593	PrimaryExpression	"""method.%d"""		512983	0					
ANR	514594	Argument	MI		512983	1					
ANR	514595	Identifier	MI		512983	0					
ANR	514596	Argument	sym -> paddr		512983	2					
ANR	514597	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514598	Identifier	sym		512983	0					
ANR	514599	Identifier	paddr		512983	1					
ANR	514600	Argument	0		512983	3					
ANR	514601	PrimaryExpression	0		512983	0					
ANR	514602	IfStatement	if ( 0 )		512983	15					
ANR	514603	Condition	0	1457:8:39638:39638	512983	0	True				
ANR	514604	PrimaryExpression	0		512983	0					
ANR	514605	CompoundStatement		274:11:8375:8375	512983	1					
ANR	514606	IfStatement	if ( MA & 0x10000 )		512983	0					
ANR	514607	Condition	MA & 0x10000	1458:9:39652:39663	512983	0	True				
ANR	514608	BitAndExpression	MA & 0x10000		512983	0		&			
ANR	514609	Identifier	MA		512983	0					
ANR	514610	PrimaryExpression	0x10000		512983	1					
ANR	514611	CompoundStatement		275:23:8400:8400	512983	1					
ANR	514612	IfStatement	if ( ! cdb )		512983	0					
ANR	514613	Condition	! cdb	1459:10:39696:39699	512983	0	True				
ANR	514614	UnaryOperationExpression	! cdb		512983	0					
ANR	514615	UnaryOperator	!		512983	0					
ANR	514616	Identifier	cdb		512983	1					
ANR	514617	CompoundStatement		276:16:8436:8436	512983	1					
ANR	514618	ExpressionStatement	cdb = sdb_new0 ( )	1460:7:39711:39728	512983	0	True				
ANR	514619	AssignmentExpression	cdb = sdb_new0 ( )		512983	0		=			
ANR	514620	Identifier	cdb		512983	0					
ANR	514621	CallExpression	sdb_new0 ( )		512983	1					
ANR	514622	Callee	sdb_new0		512983	0					
ANR	514623	Identifier	sdb_new0		512983	0					
ANR	514624	ArgumentList			512983	1					
ANR	514625	ExpressionStatement	"sdb_num_set ( cdb , sdb_fmt ( ""%d"" , c -> class_id ) , sym -> paddr , 0 )"	1462:6:39744:39805	512983	1	True				
ANR	514626	CallExpression	"sdb_num_set ( cdb , sdb_fmt ( ""%d"" , c -> class_id ) , sym -> paddr , 0 )"		512983	0					
ANR	514627	Callee	sdb_num_set		512983	0					
ANR	514628	Identifier	sdb_num_set		512983	0					
ANR	514629	ArgumentList	cdb		512983	1					
ANR	514630	Argument	cdb		512983	0					
ANR	514631	Identifier	cdb		512983	0					
ANR	514632	Argument	"sdb_fmt ( ""%d"" , c -> class_id )"		512983	1					
ANR	514633	CallExpression	"sdb_fmt ( ""%d"" , c -> class_id )"		512983	0					
ANR	514634	Callee	sdb_fmt		512983	0					
ANR	514635	Identifier	sdb_fmt		512983	0					
ANR	514636	ArgumentList	"""%d"""		512983	1					
ANR	514637	Argument	"""%d"""		512983	0					
ANR	514638	PrimaryExpression	"""%d"""		512983	0					
ANR	514639	Argument	c -> class_id		512983	1					
ANR	514640	PtrMemberAccess	c -> class_id		512983	0					
ANR	514641	Identifier	c		512983	0					
ANR	514642	Identifier	class_id		512983	1					
ANR	514643	Argument	sym -> paddr		512983	2					
ANR	514644	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514645	Identifier	sym		512983	0					
ANR	514646	Identifier	paddr		512983	1					
ANR	514647	Argument	0		512983	3					
ANR	514648	PrimaryExpression	0		512983	0					
ANR	514649	ElseStatement	else		512983	0					
ANR	514650	CompoundStatement		283:10:8571:8571	512983	0					
ANR	514651	ExpressionStatement	sym -> size = 0	1467:4:39843:39856	512983	0	True				
ANR	514652	AssignmentExpression	sym -> size = 0		512983	0		=			
ANR	514653	PtrMemberAccess	sym -> size		512983	0					
ANR	514654	Identifier	sym		512983	0					
ANR	514655	Identifier	size		512983	1					
ANR	514656	PrimaryExpression	0		512983	1					
ANR	514657	ExpressionStatement	"r_list_append ( bin -> methods_list , sym )"	1468:4:39862:39900	512983	1	True				
ANR	514658	CallExpression	"r_list_append ( bin -> methods_list , sym )"		512983	0					
ANR	514659	Callee	r_list_append		512983	0					
ANR	514660	Identifier	r_list_append		512983	0					
ANR	514661	ArgumentList	bin -> methods_list		512983	1					
ANR	514662	Argument	bin -> methods_list		512983	0					
ANR	514663	PtrMemberAccess	bin -> methods_list		512983	0					
ANR	514664	Identifier	bin		512983	0					
ANR	514665	Identifier	methods_list		512983	1					
ANR	514666	Argument	sym		512983	1					
ANR	514667	Identifier	sym		512983	0					
ANR	514668	ExpressionStatement	"r_list_append ( cls -> methods , sym )"	1469:4:39906:39939	512983	2	True				
ANR	514669	CallExpression	"r_list_append ( cls -> methods , sym )"		512983	0					
ANR	514670	Callee	r_list_append		512983	0					
ANR	514671	Identifier	r_list_append		512983	0					
ANR	514672	ArgumentList	cls -> methods		512983	1					
ANR	514673	Argument	cls -> methods		512983	0					
ANR	514674	PtrMemberAccess	cls -> methods		512983	0					
ANR	514675	Identifier	cls		512983	0					
ANR	514676	Identifier	methods		512983	1					
ANR	514677	Argument	sym		512983	1					
ANR	514678	Identifier	sym		512983	0					
ANR	514679	IfStatement	if ( MC > 0 && debug_info_off > 0 && bin -> header . data_offset < debug_info_off && debug_info_off < bin -> header . data_offset + bin -> header . data_size )		512983	9					
ANR	514680	Condition	MC > 0 && debug_info_off > 0 && bin -> header . data_offset < debug_info_off && debug_info_off < bin -> header . data_offset + bin -> header . data_size	1471:7:39953:40096	512983	0	True				
ANR	514681	AndExpression	MC > 0 && debug_info_off > 0 && bin -> header . data_offset < debug_info_off && debug_info_off < bin -> header . data_offset + bin -> header . data_size		512983	0		&&			
ANR	514682	RelationalExpression	MC > 0		512983	0		>			
ANR	514683	Identifier	MC		512983	0					
ANR	514684	PrimaryExpression	0		512983	1					
ANR	514685	AndExpression	debug_info_off > 0 && bin -> header . data_offset < debug_info_off && debug_info_off < bin -> header . data_offset + bin -> header . data_size		512983	1		&&			
ANR	514686	RelationalExpression	debug_info_off > 0		512983	0		>			
ANR	514687	Identifier	debug_info_off		512983	0					
ANR	514688	PrimaryExpression	0		512983	1					
ANR	514689	AndExpression	bin -> header . data_offset < debug_info_off && debug_info_off < bin -> header . data_offset + bin -> header . data_size		512983	1		&&			
ANR	514690	RelationalExpression	bin -> header . data_offset < debug_info_off		512983	0		<			
ANR	514691	MemberAccess	bin -> header . data_offset		512983	0					
ANR	514692	PtrMemberAccess	bin -> header		512983	0					
ANR	514693	Identifier	bin		512983	0					
ANR	514694	Identifier	header		512983	1					
ANR	514695	Identifier	data_offset		512983	1					
ANR	514696	Identifier	debug_info_off		512983	1					
ANR	514697	RelationalExpression	debug_info_off < bin -> header . data_offset + bin -> header . data_size		512983	1		<			
ANR	514698	Identifier	debug_info_off		512983	0					
ANR	514699	AdditiveExpression	bin -> header . data_offset + bin -> header . data_size		512983	1		+			
ANR	514700	MemberAccess	bin -> header . data_offset		512983	0					
ANR	514701	PtrMemberAccess	bin -> header		512983	0					
ANR	514702	Identifier	bin		512983	0					
ANR	514703	Identifier	header		512983	1					
ANR	514704	Identifier	data_offset		512983	1					
ANR	514705	MemberAccess	bin -> header . data_size		512983	1					
ANR	514706	PtrMemberAccess	bin -> header		512983	0					
ANR	514707	Identifier	bin		512983	0					
ANR	514708	Identifier	header		512983	1					
ANR	514709	Identifier	data_size		512983	1					
ANR	514710	CompoundStatement		289:70:8833:8833	512983	1					
ANR	514711	IfStatement	if ( bin_dbginfo )		512983	0					
ANR	514712	Condition	bin_dbginfo	1473:8:40109:40119	512983	0	True				
ANR	514713	Identifier	bin_dbginfo		512983	0					
ANR	514714	CompoundStatement		290:21:8856:8856	512983	1					
ANR	514715	ExpressionStatement	"dex_parse_debug_item ( bf , bin , c , MI , MA , sym -> paddr , ins_size , insns_size , cls -> name , regsz , debug_info_off )"	1474:5:40129:40245	512983	0	True				
ANR	514716	CallExpression	"dex_parse_debug_item ( bf , bin , c , MI , MA , sym -> paddr , ins_size , insns_size , cls -> name , regsz , debug_info_off )"		512983	0					
ANR	514717	Callee	dex_parse_debug_item		512983	0					
ANR	514718	Identifier	dex_parse_debug_item		512983	0					
ANR	514719	ArgumentList	bf		512983	1					
ANR	514720	Argument	bf		512983	0					
ANR	514721	Identifier	bf		512983	0					
ANR	514722	Argument	bin		512983	1					
ANR	514723	Identifier	bin		512983	0					
ANR	514724	Argument	c		512983	2					
ANR	514725	Identifier	c		512983	0					
ANR	514726	Argument	MI		512983	3					
ANR	514727	Identifier	MI		512983	0					
ANR	514728	Argument	MA		512983	4					
ANR	514729	Identifier	MA		512983	0					
ANR	514730	Argument	sym -> paddr		512983	5					
ANR	514731	PtrMemberAccess	sym -> paddr		512983	0					
ANR	514732	Identifier	sym		512983	0					
ANR	514733	Identifier	paddr		512983	1					
ANR	514734	Argument	ins_size		512983	6					
ANR	514735	Identifier	ins_size		512983	0					
ANR	514736	Argument	insns_size		512983	7					
ANR	514737	Identifier	insns_size		512983	0					
ANR	514738	Argument	cls -> name		512983	8					
ANR	514739	PtrMemberAccess	cls -> name		512983	0					
ANR	514740	Identifier	cls		512983	0					
ANR	514741	Identifier	name		512983	1					
ANR	514742	Argument	regsz		512983	9					
ANR	514743	Identifier	regsz		512983	0					
ANR	514744	Argument	debug_info_off		512983	10					
ANR	514745	Identifier	debug_info_off		512983	0					
ANR	514746	ElseStatement	else		512983	0					
ANR	514747	IfStatement	if ( MC > 0 )		512983	0					
ANR	514748	Condition	MC > 0	1477:14:40267:40272	512983	0	True				
ANR	514749	RelationalExpression	MC > 0		512983	0		>			
ANR	514750	Identifier	MC		512983	0					
ANR	514751	PrimaryExpression	0		512983	1					
ANR	514752	CompoundStatement		294:22:9009:9009	512983	1					
ANR	514753	IfStatement	if ( dexdump )		512983	0					
ANR	514754	Condition	dexdump	1478:8:40285:40291	512983	0	True				
ANR	514755	Identifier	dexdump		512983	0					
ANR	514756	CompoundStatement		295:17:9028:9028	512983	1					
ANR	514757	ExpressionStatement	"cb_printf ( ""      positions     :\\n"" )"	1479:5:40301:40338	512983	0	True				
ANR	514758	CallExpression	"cb_printf ( ""      positions     :\\n"" )"		512983	0					
ANR	514759	Callee	cb_printf		512983	0					
ANR	514760	Identifier	cb_printf		512983	0					
ANR	514761	ArgumentList	"""      positions     :\\n"""		512983	1					
ANR	514762	Argument	"""      positions     :\\n"""		512983	0					
ANR	514763	PrimaryExpression	"""      positions     :\\n"""		512983	0					
ANR	514764	ExpressionStatement	"cb_printf ( ""      locals        :\\n"" )"	1480:5:40345:40382	512983	1	True				
ANR	514765	CallExpression	"cb_printf ( ""      locals        :\\n"" )"		512983	0					
ANR	514766	Callee	cb_printf		512983	0					
ANR	514767	Identifier	cb_printf		512983	0					
ANR	514768	ArgumentList	"""      locals        :\\n"""		512983	1					
ANR	514769	Argument	"""      locals        :\\n"""		512983	0					
ANR	514770	PrimaryExpression	"""      locals        :\\n"""		512983	0					
ANR	514771	ElseStatement	else		512983	0					
ANR	514772	CompoundStatement		300:9:9138:9138	512983	0					
ANR	514773	ExpressionStatement	R_FREE ( flag_name )	1484:3:40409:40427	512983	0	True				
ANR	514774	CallExpression	R_FREE ( flag_name )		512983	0					
ANR	514775	Callee	R_FREE		512983	0					
ANR	514776	Identifier	R_FREE		512983	0					
ANR	514777	ArgumentList	flag_name		512983	1					
ANR	514778	Argument	flag_name		512983	0					
ANR	514779	Identifier	flag_name		512983	0					
ANR	514780	ExpressionStatement	R_FREE ( signature )	1486:2:40435:40453	512983	19	True				
ANR	514781	CallExpression	R_FREE ( signature )		512983	0					
ANR	514782	Callee	R_FREE		512983	0					
ANR	514783	Identifier	R_FREE		512983	0					
ANR	514784	ArgumentList	signature		512983	1					
ANR	514785	Argument	signature		512983	0					
ANR	514786	Identifier	signature		512983	0					
ANR	514787	ReturnStatement	return p ;	1489:1:40485:40493	512983	14	True				
ANR	514788	Identifier	p		512983	0					
ANR	514789	ReturnType	static const ut8 *		512983	1					
ANR	514790	Identifier	parse_dex_class_method		512983	2					
ANR	514791	ParameterList	"RBinFile * bf , RBinDexClass * c , RBinClass * cls , const ut8 * p , const ut8 * p_end , int * sym_count , ut64 DM , int * methods , bool is_direct , const ut8 * bufbuf"		512983	3					
ANR	514792	Parameter	RBinFile * bf	1183:41:31110:31121	512983	0	True				
ANR	514793	ParameterType	RBinFile *		512983	0					
ANR	514794	Identifier	bf		512983	1					
ANR	514795	Parameter	RBinDexClass * c	1183:55:31124:31138	512983	1	True				
ANR	514796	ParameterType	RBinDexClass *		512983	0					
ANR	514797	Identifier	c		512983	1					
ANR	514798	Parameter	RBinClass * cls	1183:72:31141:31154	512983	2	True				
ANR	514799	ParameterType	RBinClass *		512983	0					
ANR	514800	Identifier	cls		512983	1					
ANR	514801	Parameter	const ut8 * p	1183:88:31157:31168	512983	3	True				
ANR	514802	ParameterType	const ut8 *		512983	0					
ANR	514803	Identifier	p		512983	1					
ANR	514804	Parameter	const ut8 * p_end	1183:102:31171:31186	512983	4	True				
ANR	514805	ParameterType	const ut8 *		512983	0					
ANR	514806	Identifier	p_end		512983	1					
ANR	514807	Parameter	int * sym_count	1184:2:31191:31204	512983	5	True				
ANR	514808	ParameterType	int *		512983	0					
ANR	514809	Identifier	sym_count		512983	1					
ANR	514810	Parameter	ut64 DM	1184:18:31207:31213	512983	6	True				
ANR	514811	ParameterType	ut64		512983	0					
ANR	514812	Identifier	DM		512983	1					
ANR	514813	Parameter	int * methods	1184:27:31216:31227	512983	7	True				
ANR	514814	ParameterType	int *		512983	0					
ANR	514815	Identifier	methods		512983	1					
ANR	514816	Parameter	bool is_direct	1184:41:31230:31243	512983	8	True				
ANR	514817	ParameterType	bool		512983	0					
ANR	514818	Identifier	is_direct		512983	1					
ANR	514819	Parameter	const ut8 * bufbuf	1184:57:31246:31262	512983	9	True				
ANR	514820	ParameterType	const ut8 *		512983	0					
ANR	514821	Identifier	bufbuf		512983	1					
ANR	514822	CFGEntryNode	ENTRY		512983		True				
ANR	514823	CFGExitNode	EXIT		512983		True				
ANR	514824	Symbol	catchAll		512983						
ANR	514825	Symbol	encoded_method_addr		512983						
ANR	514826	Symbol	r_buf_sleb128		512983						
ANR	514827	Symbol	sym -> bind		512983						
ANR	514828	Symbol	bin -> code_to		512983						
ANR	514829	Symbol	padd		512983						
ANR	514830	Symbol	bin		512983						
ANR	514831	Symbol	bin -> header		512983						
ANR	514832	Symbol	sym -> type		512983						
ANR	514833	Symbol	try_to		512983						
ANR	514834	Symbol	insn_count		512983						
ANR	514835	Symbol	bin -> header . data_size		512983						
ANR	514836	Symbol	method_offset		512983						
ANR	514837	Symbol	bf -> o		512983						
ANR	514838	Symbol	bf -> buf		512983						
ANR	514839	Symbol	cdb		512983						
ANR	514840	Symbol	bin -> methods_list		512983						
ANR	514841	Symbol	get_method_flags		512983						
ANR	514842	Symbol	c -> class_id		512983						
ANR	514843	Symbol	r_list_newf		512983						
ANR	514844	Symbol	sym -> vaddr		512983						
ANR	514845	Symbol	handler_addr		512983						
ANR	514846	Symbol	* rbin		512983						
ANR	514847	Symbol	cls		512983						
ANR	514848	Symbol	cls -> name		512983						
ANR	514849	Symbol	R_NEW0		512983						
ANR	514850	Symbol	size		512983						
ANR	514851	Symbol	bin_dbginfo		512983						
ANR	514852	Symbol	bin -> header . method_size		512983						
ANR	514853	Symbol	bin -> types		512983						
ANR	514854	Symbol	r_uleb128		512983						
ANR	514855	Symbol	* bf -> rbin		512983						
ANR	514856	Symbol	* MI		512983						
ANR	514857	Symbol	bf		512983						
ANR	514858	Symbol	ins_size		512983						
ANR	514859	Symbol	signature		512983						
ANR	514860	Symbol	* bin -> types		512983						
ANR	514861	Symbol	methods		512983						
ANR	514862	Symbol	bin -> trycatch_list		512983						
ANR	514863	Symbol	omi		512983						
ANR	514864	Symbol	dex_method_name		512983						
ANR	514865	Symbol	bf -> rbin		512983						
ANR	514866	Symbol	* bin		512983						
ANR	514867	Symbol	sym -> size		512983						
ANR	514868	Symbol	* bf -> o		512983						
ANR	514869	Symbol	R_BIN_TYPE_METH_STR		512983						
ANR	514870	Symbol	* * bin		512983						
ANR	514871	Symbol	r_buf_read_le16_at		512983						
ANR	514872	Symbol	r_buf_uleb128		512983						
ANR	514873	Symbol	sym_count		512983						
ANR	514874	Symbol	rbin		512983						
ANR	514875	Symbol	r_str_const		512983						
ANR	514876	Symbol	sdb_new0		512983						
ANR	514877	Symbol	c		512983						
ANR	514878	Symbol	sym -> paddr		512983						
ANR	514879	Symbol	i		512983						
ANR	514880	Symbol	j		512983						
ANR	514881	Symbol	R_MIN		512983						
ANR	514882	Symbol	* cls		512983						
ANR	514883	Symbol	& size		512983						
ANR	514884	Symbol	* flag_name		512983						
ANR	514885	Symbol	m		512983						
ANR	514886	Symbol	off		512983						
ANR	514887	Symbol	tc		512983						
ANR	514888	Symbol	p		512983						
ANR	514889	Symbol	r		512983						
ANR	514890	Symbol	s		512983						
ANR	514891	Symbol	t		512983						
ANR	514892	Symbol	tries_size		512983						
ANR	514893	Symbol	sym -> method_flags		512983						
ANR	514894	Symbol	v2		512983						
ANR	514895	Symbol	r_buf_size		512983						
ANR	514896	Symbol	R_BUF_SET		512983						
ANR	514897	Symbol	bin -> size		512983						
ANR	514898	Symbol	bufsz		512983						
ANR	514899	Symbol	sym -> ordinal		512983						
ANR	514900	Symbol	DM		512983						
ANR	514901	Symbol	cb_printf		512983						
ANR	514902	Symbol	rbin -> want_dbginfo		512983						
ANR	514903	Symbol	* sym_count		512983						
ANR	514904	Symbol	outs_size		512983						
ANR	514905	Symbol	regsz		512983						
ANR	514906	Symbol	getstr		512983						
ANR	514907	Symbol	MA		512983						
ANR	514908	Symbol	method_name		512983						
ANR	514909	Symbol	bin -> header . types_size		512983						
ANR	514910	Symbol	MC		512983						
ANR	514911	Symbol	dexdump		512983						
ANR	514912	Symbol	createAccessFlagStr		512983						
ANR	514913	Symbol	start_addr		512983						
ANR	514914	Symbol	MI		512983						
ANR	514915	Symbol	bin -> code_from		512983						
ANR	514916	Symbol	NULL		512983						
ANR	514917	Symbol	offset		512983						
ANR	514918	Symbol	debug_info_off		512983						
ANR	514919	Symbol	& v2		512983						
ANR	514920	Symbol	bin -> header . data_offset		512983						
ANR	514921	Symbol	mdb		512983						
ANR	514922	Symbol	& handler_addr		512983						
ANR	514923	Symbol	* sym		512983						
ANR	514924	Symbol	* * bf		512983						
ANR	514925	Symbol	sym -> name		512983						
ANR	514926	Symbol	true		512983						
ANR	514927	Symbol	prolog_size		512983						
ANR	514928	Symbol	RBinSymbol		512983						
ANR	514929	Symbol	& MC		512983						
ANR	514930	Symbol	accessStr		512983						
ANR	514931	Symbol	insns_size		512983						
ANR	514932	Symbol	sym		512983						
ANR	514933	Symbol	& MI		512983						
ANR	514934	Symbol	r_str_newf		512983						
ANR	514935	Symbol	flag_name		512983						
ANR	514936	Symbol	R_BIN_TYPE_FUNC_STR		512983						
ANR	514937	Symbol	is_direct		512983						
ANR	514938	Symbol	bf -> rbin -> cb_printf		512983						
ANR	514939	Symbol	p_end		512983						
ANR	514940	Symbol	UT64_MAX		512983						
ANR	514941	Symbol	try_from		512983						
ANR	514942	Symbol	sdb_fmt		512983						
ANR	514943	Symbol	& MA		512983						
ANR	514944	Symbol	dex_method_signature		512983						
ANR	514945	Symbol	bf -> o -> bin_obj		512983						
ANR	514946	Symbol	try_catch		512983						
ANR	514947	Symbol	kAccessForMethod		512983						
ANR	514948	Symbol	handler_type		512983						
ANR	514949	Symbol	r_bin_trycatch_new		512983						
ANR	514950	Symbol	r_bin_trycatch_free		512983						
ANR	514951	Symbol	* methods		512983						
ANR	514952	Symbol	false		512983						
ANR	514953	Symbol	* bf		512983						
ANR	514954	Symbol	bin -> types [ handler_type ] . descriptor_id		512983						
ANR	514955	Symbol	* handler_type		512983						
ANR	514956	Symbol	* c		512983						
ANR	514957	Symbol	r_buf_read_le32_at		512983						
ANR	514958	Symbol	bufbuf		512983						
ANR	514959	Symbol	R_BIN_BIND_GLOBAL_STR		512983						
ANR	514960	Symbol	R_BIN_BIND_LOCAL_STR		512983						
ANR	514961	Symbol	cls -> methods		512983						
ANR	514962	Symbol	handler_off		512983						
ANR	514963	Symbol	& handler_type		512983						
ANR	514964	Function	parse_class	1492:0:40498:45524							
ANR	514965	FunctionDef	"parse_class (RBinFile * bf , RBinDexClass * c , int class_index , int * methods , int * sym_count)"		514964	0					
ANR	514966	CompoundStatement		1492:102:40600:45524	514964	0					
ANR	514967	IdentifierDeclStatement	struct r_bin_dex_obj_t * dex = bf -> o -> bin_obj ;	1493:1:40603:40647	514964	0	True				
ANR	514968	IdentifierDecl	* dex = bf -> o -> bin_obj		514964	0					
ANR	514969	IdentifierDeclType	struct r_bin_dex_obj_t *		514964	0					
ANR	514970	Identifier	dex		514964	1					
ANR	514971	AssignmentExpression	* dex = bf -> o -> bin_obj		514964	2		=			
ANR	514972	Identifier	dex		514964	0					
ANR	514973	PtrMemberAccess	bf -> o -> bin_obj		514964	1					
ANR	514974	PtrMemberAccess	bf -> o		514964	0					
ANR	514975	Identifier	bf		514964	0					
ANR	514976	Identifier	o		514964	1					
ANR	514977	Identifier	bin_obj		514964	1					
ANR	514978	IdentifierDeclStatement	RBin * rbin = bf -> rbin ;	1494:1:40650:40671	514964	1	True				
ANR	514979	IdentifierDecl	* rbin = bf -> rbin		514964	0					
ANR	514980	IdentifierDeclType	RBin *		514964	0					
ANR	514981	Identifier	rbin		514964	1					
ANR	514982	AssignmentExpression	* rbin = bf -> rbin		514964	2		=			
ANR	514983	Identifier	rbin		514964	0					
ANR	514984	PtrMemberAccess	bf -> rbin		514964	1					
ANR	514985	Identifier	bf		514964	0					
ANR	514986	Identifier	rbin		514964	1					
ANR	514987	IdentifierDeclStatement	int z ;	1495:1:40674:40679	514964	2	True				
ANR	514988	IdentifierDecl	z		514964	0					
ANR	514989	IdentifierDeclType	int		514964	0					
ANR	514990	Identifier	z		514964	1					
ANR	514991	IdentifierDeclStatement	"const ut8 * p , * p_end ;"	1496:1:40682:40702	514964	3	True				
ANR	514992	IdentifierDecl	* p		514964	0					
ANR	514993	IdentifierDeclType	const ut8 *		514964	0					
ANR	514994	Identifier	p		514964	1					
ANR	514995	IdentifierDecl	* p_end		514964	1					
ANR	514996	IdentifierDeclType	const ut8 *		514964	0					
ANR	514997	Identifier	p_end		514964	1					
ANR	514998	ExpressionStatement	r_return_if_fail ( bf && c )	1498:1:40706:40732	514964	4	True				
ANR	514999	CallExpression	r_return_if_fail ( bf && c )		514964	0					
ANR	515000	Callee	r_return_if_fail		514964	0					
ANR	515001	Identifier	r_return_if_fail		514964	0					
ANR	515002	ArgumentList	bf && c		514964	1					
ANR	515003	Argument	bf && c		514964	0					
ANR	515004	AndExpression	bf && c		514964	0		&&			
ANR	515005	Identifier	bf		514964	0					
ANR	515006	Identifier	c		514964	1					
ANR	515007	IfStatement	if ( ! c )		514964	5					
ANR	515008	Condition	! c	1499:5:40739:40740	514964	0	True				
ANR	515009	UnaryOperationExpression	! c		514964	0					
ANR	515010	UnaryOperator	!		514964	0					
ANR	515011	Identifier	c		514964	1					
ANR	515012	CompoundStatement		8:9:142:142	514964	1					
ANR	515013	ReturnStatement	return ;	1500:2:40747:40753	514964	0	True				
ANR	515014	IdentifierDeclStatement	"char * class_name = dex_class_name ( dex , c ) ;"	1502:1:40759:40801	514964	6	True				
ANR	515015	IdentifierDecl	"* class_name = dex_class_name ( dex , c )"		514964	0					
ANR	515016	IdentifierDeclType	char *		514964	0					
ANR	515017	Identifier	class_name		514964	1					
ANR	515018	AssignmentExpression	"* class_name = dex_class_name ( dex , c )"		514964	2		=			
ANR	515019	Identifier	class_name		514964	0					
ANR	515020	CallExpression	"dex_class_name ( dex , c )"		514964	1					
ANR	515021	Callee	dex_class_name		514964	0					
ANR	515022	Identifier	dex_class_name		514964	0					
ANR	515023	ArgumentList	dex		514964	1					
ANR	515024	Argument	dex		514964	0					
ANR	515025	Identifier	dex		514964	0					
ANR	515026	Argument	c		514964	1					
ANR	515027	Identifier	c		514964	0					
ANR	515028	IfStatement	if ( ! class_name || ! * class_name )		514964	7					
ANR	515029	Condition	! class_name || ! * class_name	1503:5:40808:40834	514964	0	True				
ANR	515030	OrExpression	! class_name || ! * class_name		514964	0		||			
ANR	515031	UnaryOperationExpression	! class_name		514964	0					
ANR	515032	UnaryOperator	!		514964	0					
ANR	515033	Identifier	class_name		514964	1					
ANR	515034	UnaryOperationExpression	! * class_name		514964	1					
ANR	515035	UnaryOperator	!		514964	0					
ANR	515036	UnaryOperationExpression	* class_name		514964	1					
ANR	515037	UnaryOperator	*		514964	0					
ANR	515038	Identifier	class_name		514964	1					
ANR	515039	CompoundStatement		12:34:236:236	514964	1					
ANR	515040	ReturnStatement	return ;	1504:2:40841:40847	514964	0	True				
ANR	515041	IdentifierDeclStatement	"const char * superClass = dex_class_super_name ( dex , c ) ;"	1506:1:40853:40907	514964	8	True				
ANR	515042	IdentifierDecl	"* superClass = dex_class_super_name ( dex , c )"		514964	0					
ANR	515043	IdentifierDeclType	const char *		514964	0					
ANR	515044	Identifier	superClass		514964	1					
ANR	515045	AssignmentExpression	"* superClass = dex_class_super_name ( dex , c )"		514964	2		=			
ANR	515046	Identifier	superClass		514964	0					
ANR	515047	CallExpression	"dex_class_super_name ( dex , c )"		514964	1					
ANR	515048	Callee	dex_class_super_name		514964	0					
ANR	515049	Identifier	dex_class_super_name		514964	0					
ANR	515050	ArgumentList	dex		514964	1					
ANR	515051	Argument	dex		514964	0					
ANR	515052	Identifier	dex		514964	0					
ANR	515053	Argument	c		514964	1					
ANR	515054	Identifier	c		514964	0					
ANR	515055	IfStatement	if ( ! superClass )		514964	9					
ANR	515056	Condition	! superClass	1507:5:40914:40924	514964	0	True				
ANR	515057	UnaryOperationExpression	! superClass		514964	0					
ANR	515058	UnaryOperator	!		514964	0					
ANR	515059	Identifier	superClass		514964	1					
ANR	515060	CompoundStatement		16:18:326:326	514964	1					
ANR	515061	ReturnStatement	return ;	1508:2:40931:40937	514964	0	True				
ANR	515062	ExpressionStatement	class_name = strdup ( class_name )	1510:1:40943:40975	514964	10	True				
ANR	515063	AssignmentExpression	class_name = strdup ( class_name )		514964	0		=			
ANR	515064	Identifier	class_name		514964	0					
ANR	515065	CallExpression	strdup ( class_name )		514964	1					
ANR	515066	Callee	strdup		514964	0					
ANR	515067	Identifier	strdup		514964	0					
ANR	515068	ArgumentList	class_name		514964	1					
ANR	515069	Argument	class_name		514964	0					
ANR	515070	Identifier	class_name		514964	0					
ANR	515071	ExpressionStatement	"r_str_replace_char ( class_name , ';' , 0 )"	1511:1:40978:41017	514964	11	True				
ANR	515072	CallExpression	"r_str_replace_char ( class_name , ';' , 0 )"		514964	0					
ANR	515073	Callee	r_str_replace_char		514964	0					
ANR	515074	Identifier	r_str_replace_char		514964	0					
ANR	515075	ArgumentList	class_name		514964	1					
ANR	515076	Argument	class_name		514964	0					
ANR	515077	Identifier	class_name		514964	0					
ANR	515078	Argument	';'		514964	1					
ANR	515079	PrimaryExpression	';'		514964	0					
ANR	515080	Argument	0		514964	2					
ANR	515081	PrimaryExpression	0		514964	0					
ANR	515082	IfStatement	if ( ! class_name || ! * class_name )		514964	12					
ANR	515083	Condition	! class_name || ! * class_name	1513:5:41025:41051	514964	0	True				
ANR	515084	OrExpression	! class_name || ! * class_name		514964	0		||			
ANR	515085	UnaryOperationExpression	! class_name		514964	0					
ANR	515086	UnaryOperator	!		514964	0					
ANR	515087	Identifier	class_name		514964	1					
ANR	515088	UnaryOperationExpression	! * class_name		514964	1					
ANR	515089	UnaryOperator	!		514964	0					
ANR	515090	UnaryOperationExpression	* class_name		514964	1					
ANR	515091	UnaryOperator	*		514964	0					
ANR	515092	Identifier	class_name		514964	1					
ANR	515093	CompoundStatement		22:34:453:453	514964	1					
ANR	515094	ReturnStatement	return ;	1514:2:41058:41064	514964	0	True				
ANR	515095	IdentifierDeclStatement	RBinClass * cls = R_NEW0 ( RBinClass ) ;	1516:1:41070:41105	514964	13	True				
ANR	515096	IdentifierDecl	* cls = R_NEW0 ( RBinClass )		514964	0					
ANR	515097	IdentifierDeclType	RBinClass *		514964	0					
ANR	515098	Identifier	cls		514964	1					
ANR	515099	AssignmentExpression	* cls = R_NEW0 ( RBinClass )		514964	2		=			
ANR	515100	Identifier	cls		514964	0					
ANR	515101	CallExpression	R_NEW0 ( RBinClass )		514964	1					
ANR	515102	Callee	R_NEW0		514964	0					
ANR	515103	Identifier	R_NEW0		514964	0					
ANR	515104	ArgumentList	RBinClass		514964	1					
ANR	515105	Argument	RBinClass		514964	0					
ANR	515106	Identifier	RBinClass		514964	0					
ANR	515107	IfStatement	if ( ! cls )		514964	14					
ANR	515108	Condition	! cls	1517:5:41112:41115	514964	0	True				
ANR	515109	UnaryOperationExpression	! cls		514964	0					
ANR	515110	UnaryOperator	!		514964	0					
ANR	515111	Identifier	cls		514964	1					
ANR	515112	CompoundStatement		26:11:517:517	514964	1					
ANR	515113	ExpressionStatement	free ( class_name )	1518:2:41122:41139	514964	0	True				
ANR	515114	CallExpression	free ( class_name )		514964	0					
ANR	515115	Callee	free		514964	0					
ANR	515116	Identifier	free		514964	0					
ANR	515117	ArgumentList	class_name		514964	1					
ANR	515118	Argument	class_name		514964	0					
ANR	515119	Identifier	class_name		514964	0					
ANR	515120	ReturnStatement	return ;	1519:2:41143:41149	514964	1	True				
ANR	515121	ExpressionStatement	cls -> name = class_name	1521:1:41155:41177	514964	15	True				
ANR	515122	AssignmentExpression	cls -> name = class_name		514964	0		=			
ANR	515123	PtrMemberAccess	cls -> name		514964	0					
ANR	515124	Identifier	cls		514964	0					
ANR	515125	Identifier	name		514964	1					
ANR	515126	Identifier	class_name		514964	1					
ANR	515127	ExpressionStatement	cls -> index = class_index	1522:1:41180:41204	514964	16	True				
ANR	515128	AssignmentExpression	cls -> index = class_index		514964	0		=			
ANR	515129	PtrMemberAccess	cls -> index		514964	0					
ANR	515130	Identifier	cls		514964	0					
ANR	515131	Identifier	index		514964	1					
ANR	515132	Identifier	class_index		514964	1					
ANR	515133	ExpressionStatement	cls -> addr = dex -> header . class_offset + class_index * DEX_CLASS_SIZE	1523:1:41207:41274	514964	17	True				
ANR	515134	AssignmentExpression	cls -> addr = dex -> header . class_offset + class_index * DEX_CLASS_SIZE		514964	0		=			
ANR	515135	PtrMemberAccess	cls -> addr		514964	0					
ANR	515136	Identifier	cls		514964	0					
ANR	515137	Identifier	addr		514964	1					
ANR	515138	AdditiveExpression	dex -> header . class_offset + class_index * DEX_CLASS_SIZE		514964	1		+			
ANR	515139	MemberAccess	dex -> header . class_offset		514964	0					
ANR	515140	PtrMemberAccess	dex -> header		514964	0					
ANR	515141	Identifier	dex		514964	0					
ANR	515142	Identifier	header		514964	1					
ANR	515143	Identifier	class_offset		514964	1					
ANR	515144	MultiplicativeExpression	class_index * DEX_CLASS_SIZE		514964	1		*			
ANR	515145	Identifier	class_index		514964	0					
ANR	515146	Identifier	DEX_CLASS_SIZE		514964	1					
ANR	515147	ExpressionStatement	cls -> methods = r_list_new ( )	1524:1:41277:41305	514964	18	True				
ANR	515148	AssignmentExpression	cls -> methods = r_list_new ( )		514964	0		=			
ANR	515149	PtrMemberAccess	cls -> methods		514964	0					
ANR	515150	Identifier	cls		514964	0					
ANR	515151	Identifier	methods		514964	1					
ANR	515152	CallExpression	r_list_new ( )		514964	1					
ANR	515153	Callee	r_list_new		514964	0					
ANR	515154	Identifier	r_list_new		514964	0					
ANR	515155	ArgumentList			514964	1					
ANR	515156	ExpressionStatement	cls -> super = strdup ( superClass )	1525:1:41308:41340	514964	19	True				
ANR	515157	AssignmentExpression	cls -> super = strdup ( superClass )		514964	0		=			
ANR	515158	PtrMemberAccess	cls -> super		514964	0					
ANR	515159	Identifier	cls		514964	0					
ANR	515160	Identifier	super		514964	1					
ANR	515161	CallExpression	strdup ( superClass )		514964	1					
ANR	515162	Callee	strdup		514964	0					
ANR	515163	Identifier	strdup		514964	0					
ANR	515164	ArgumentList	superClass		514964	1					
ANR	515165	Argument	superClass		514964	0					
ANR	515166	Identifier	superClass		514964	0					
ANR	515167	IfStatement	if ( ! cls -> methods )		514964	20					
ANR	515168	Condition	! cls -> methods	1526:5:41347:41359	514964	0	True				
ANR	515169	UnaryOperationExpression	! cls -> methods		514964	0					
ANR	515170	UnaryOperator	!		514964	0					
ANR	515171	PtrMemberAccess	cls -> methods		514964	1					
ANR	515172	Identifier	cls		514964	0					
ANR	515173	Identifier	methods		514964	1					
ANR	515174	CompoundStatement		35:20:761:761	514964	1					
ANR	515175	ExpressionStatement	free ( cls )	1527:2:41366:41376	514964	0	True				
ANR	515176	CallExpression	free ( cls )		514964	0					
ANR	515177	Callee	free		514964	0					
ANR	515178	Identifier	free		514964	0					
ANR	515179	ArgumentList	cls		514964	1					
ANR	515180	Argument	cls		514964	0					
ANR	515181	Identifier	cls		514964	0					
ANR	515182	ExpressionStatement	free ( class_name )	1528:2:41380:41397	514964	1	True				
ANR	515183	CallExpression	free ( class_name )		514964	0					
ANR	515184	Callee	free		514964	0					
ANR	515185	Identifier	free		514964	0					
ANR	515186	ArgumentList	class_name		514964	1					
ANR	515187	Argument	class_name		514964	0					
ANR	515188	Identifier	class_name		514964	0					
ANR	515189	ReturnStatement	return ;	1529:2:41401:41407	514964	2	True				
ANR	515190	ExpressionStatement	cls -> fields = r_list_new ( )	1531:1:41413:41440	514964	21	True				
ANR	515191	AssignmentExpression	cls -> fields = r_list_new ( )		514964	0		=			
ANR	515192	PtrMemberAccess	cls -> fields		514964	0					
ANR	515193	Identifier	cls		514964	0					
ANR	515194	Identifier	fields		514964	1					
ANR	515195	CallExpression	r_list_new ( )		514964	1					
ANR	515196	Callee	r_list_new		514964	0					
ANR	515197	Identifier	r_list_new		514964	0					
ANR	515198	ArgumentList			514964	1					
ANR	515199	IfStatement	if ( ! cls -> fields )		514964	22					
ANR	515200	Condition	! cls -> fields	1532:5:41447:41458	514964	0	True				
ANR	515201	UnaryOperationExpression	! cls -> fields		514964	0					
ANR	515202	UnaryOperator	!		514964	0					
ANR	515203	PtrMemberAccess	cls -> fields		514964	1					
ANR	515204	Identifier	cls		514964	0					
ANR	515205	Identifier	fields		514964	1					
ANR	515206	CompoundStatement		41:19:860:860	514964	1					
ANR	515207	ExpressionStatement	r_list_free ( cls -> methods )	1533:2:41465:41491	514964	0	True				
ANR	515208	CallExpression	r_list_free ( cls -> methods )		514964	0					
ANR	515209	Callee	r_list_free		514964	0					
ANR	515210	Identifier	r_list_free		514964	0					
ANR	515211	ArgumentList	cls -> methods		514964	1					
ANR	515212	Argument	cls -> methods		514964	0					
ANR	515213	PtrMemberAccess	cls -> methods		514964	0					
ANR	515214	Identifier	cls		514964	0					
ANR	515215	Identifier	methods		514964	1					
ANR	515216	ExpressionStatement	free ( class_name )	1534:2:41495:41512	514964	1	True				
ANR	515217	CallExpression	free ( class_name )		514964	0					
ANR	515218	Callee	free		514964	0					
ANR	515219	Identifier	free		514964	0					
ANR	515220	ArgumentList	class_name		514964	1					
ANR	515221	Argument	class_name		514964	0					
ANR	515222	Identifier	class_name		514964	0					
ANR	515223	ExpressionStatement	free ( cls )	1535:2:41516:41526	514964	2	True				
ANR	515224	CallExpression	free ( cls )		514964	0					
ANR	515225	Callee	free		514964	0					
ANR	515226	Identifier	free		514964	0					
ANR	515227	ArgumentList	cls		514964	1					
ANR	515228	Argument	cls		514964	0					
ANR	515229	Identifier	cls		514964	0					
ANR	515230	ReturnStatement	return ;	1536:2:41530:41536	514964	3	True				
ANR	515231	IdentifierDeclStatement	"const char * str = createAccessFlagStr ( c -> access_flags , kAccessForClass ) ;"	1538:1:41542:41614	514964	23	True				
ANR	515232	IdentifierDecl	"* str = createAccessFlagStr ( c -> access_flags , kAccessForClass )"		514964	0					
ANR	515233	IdentifierDeclType	const char *		514964	0					
ANR	515234	Identifier	str		514964	1					
ANR	515235	AssignmentExpression	"* str = createAccessFlagStr ( c -> access_flags , kAccessForClass )"		514964	2		=			
ANR	515236	Identifier	str		514964	0					
ANR	515237	CallExpression	"createAccessFlagStr ( c -> access_flags , kAccessForClass )"		514964	1					
ANR	515238	Callee	createAccessFlagStr		514964	0					
ANR	515239	Identifier	createAccessFlagStr		514964	0					
ANR	515240	ArgumentList	c -> access_flags		514964	1					
ANR	515241	Argument	c -> access_flags		514964	0					
ANR	515242	PtrMemberAccess	c -> access_flags		514964	0					
ANR	515243	Identifier	c		514964	0					
ANR	515244	Identifier	access_flags		514964	1					
ANR	515245	Argument	kAccessForClass		514964	1					
ANR	515246	Identifier	kAccessForClass		514964	0					
ANR	515247	ExpressionStatement	"cls -> visibility_str = strdup ( str ? str : """" )"	1539:1:41617:41660	514964	24	True				
ANR	515248	AssignmentExpression	"cls -> visibility_str = strdup ( str ? str : """" )"		514964	0		=			
ANR	515249	PtrMemberAccess	cls -> visibility_str		514964	0					
ANR	515250	Identifier	cls		514964	0					
ANR	515251	Identifier	visibility_str		514964	1					
ANR	515252	CallExpression	"strdup ( str ? str : """" )"		514964	1					
ANR	515253	Callee	strdup		514964	0					
ANR	515254	Identifier	strdup		514964	0					
ANR	515255	ArgumentList	"str ? str : """""		514964	1					
ANR	515256	Argument	"str ? str : """""		514964	0					
ANR	515257	ConditionalExpression	"str ? str : """""		514964	0					
ANR	515258	Condition	str		514964	0					
ANR	515259	Identifier	str		514964	0					
ANR	515260	Identifier	str		514964	1					
ANR	515261	PrimaryExpression	""""""		514964	2					
ANR	515262	ExpressionStatement	"r_list_append ( dex -> classes_list , cls )"	1540:1:41663:41701	514964	25	True				
ANR	515263	CallExpression	"r_list_append ( dex -> classes_list , cls )"		514964	0					
ANR	515264	Callee	r_list_append		514964	0					
ANR	515265	Identifier	r_list_append		514964	0					
ANR	515266	ArgumentList	dex -> classes_list		514964	1					
ANR	515267	Argument	dex -> classes_list		514964	0					
ANR	515268	PtrMemberAccess	dex -> classes_list		514964	0					
ANR	515269	Identifier	dex		514964	0					
ANR	515270	Identifier	classes_list		514964	1					
ANR	515271	Argument	cls		514964	1					
ANR	515272	Identifier	cls		514964	0					
ANR	515273	IfStatement	if ( dexdump )		514964	26					
ANR	515274	Condition	dexdump	1541:5:41708:41714	514964	0	True				
ANR	515275	Identifier	dexdump		514964	0					
ANR	515276	CompoundStatement		50:14:1116:1116	514964	1					
ANR	515277	ExpressionStatement	"rbin -> cb_printf ( ""  Class descriptor  : '%s;'\\n"" , class_name )"	1542:2:41721:41782	514964	0	True				
ANR	515278	CallExpression	"rbin -> cb_printf ( ""  Class descriptor  : '%s;'\\n"" , class_name )"		514964	0					
ANR	515279	Callee	rbin -> cb_printf		514964	0					
ANR	515280	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515281	Identifier	rbin		514964	0					
ANR	515282	Identifier	cb_printf		514964	1					
ANR	515283	ArgumentList	"""  Class descriptor  : '%s;'\\n"""		514964	1					
ANR	515284	Argument	"""  Class descriptor  : '%s;'\\n"""		514964	0					
ANR	515285	PrimaryExpression	"""  Class descriptor  : '%s;'\\n"""		514964	0					
ANR	515286	Argument	class_name		514964	1					
ANR	515287	Identifier	class_name		514964	0					
ANR	515288	ExpressionStatement	"rbin -> cb_printf ( ""  Access flags      : 0x%04x (%s)\\n"" , c -> access_flags , createAccessFlagStr ( c -> access_flags , kAccessForClass ) )"	1543:2:41786:41917	514964	1	True				
ANR	515289	CallExpression	"rbin -> cb_printf ( ""  Access flags      : 0x%04x (%s)\\n"" , c -> access_flags , createAccessFlagStr ( c -> access_flags , kAccessForClass ) )"		514964	0					
ANR	515290	Callee	rbin -> cb_printf		514964	0					
ANR	515291	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515292	Identifier	rbin		514964	0					
ANR	515293	Identifier	cb_printf		514964	1					
ANR	515294	ArgumentList	"""  Access flags      : 0x%04x (%s)\\n"""		514964	1					
ANR	515295	Argument	"""  Access flags      : 0x%04x (%s)\\n"""		514964	0					
ANR	515296	PrimaryExpression	"""  Access flags      : 0x%04x (%s)\\n"""		514964	0					
ANR	515297	Argument	c -> access_flags		514964	1					
ANR	515298	PtrMemberAccess	c -> access_flags		514964	0					
ANR	515299	Identifier	c		514964	0					
ANR	515300	Identifier	access_flags		514964	1					
ANR	515301	Argument	"createAccessFlagStr ( c -> access_flags , kAccessForClass )"		514964	2					
ANR	515302	CallExpression	"createAccessFlagStr ( c -> access_flags , kAccessForClass )"		514964	0					
ANR	515303	Callee	createAccessFlagStr		514964	0					
ANR	515304	Identifier	createAccessFlagStr		514964	0					
ANR	515305	ArgumentList	c -> access_flags		514964	1					
ANR	515306	Argument	c -> access_flags		514964	0					
ANR	515307	PtrMemberAccess	c -> access_flags		514964	0					
ANR	515308	Identifier	c		514964	0					
ANR	515309	Identifier	access_flags		514964	1					
ANR	515310	Argument	kAccessForClass		514964	1					
ANR	515311	Identifier	kAccessForClass		514964	0					
ANR	515312	ExpressionStatement	"rbin -> cb_printf ( ""  Superclass        : '%s'\\n"" , dex_class_super_name ( dex , c ) )"	1545:2:41921:42000	514964	2	True				
ANR	515313	CallExpression	"rbin -> cb_printf ( ""  Superclass        : '%s'\\n"" , dex_class_super_name ( dex , c ) )"		514964	0					
ANR	515314	Callee	rbin -> cb_printf		514964	0					
ANR	515315	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515316	Identifier	rbin		514964	0					
ANR	515317	Identifier	cb_printf		514964	1					
ANR	515318	ArgumentList	"""  Superclass        : '%s'\\n"""		514964	1					
ANR	515319	Argument	"""  Superclass        : '%s'\\n"""		514964	0					
ANR	515320	PrimaryExpression	"""  Superclass        : '%s'\\n"""		514964	0					
ANR	515321	Argument	"dex_class_super_name ( dex , c )"		514964	1					
ANR	515322	CallExpression	"dex_class_super_name ( dex , c )"		514964	0					
ANR	515323	Callee	dex_class_super_name		514964	0					
ANR	515324	Identifier	dex_class_super_name		514964	0					
ANR	515325	ArgumentList	dex		514964	1					
ANR	515326	Argument	dex		514964	0					
ANR	515327	Identifier	dex		514964	0					
ANR	515328	Argument	c		514964	1					
ANR	515329	Identifier	c		514964	0					
ANR	515330	ExpressionStatement	"rbin -> cb_printf ( ""  Interfaces        -\\n"" )"	1546:2:42004:42047	514964	3	True				
ANR	515331	CallExpression	"rbin -> cb_printf ( ""  Interfaces        -\\n"" )"		514964	0					
ANR	515332	Callee	rbin -> cb_printf		514964	0					
ANR	515333	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515334	Identifier	rbin		514964	0					
ANR	515335	Identifier	cb_printf		514964	1					
ANR	515336	ArgumentList	"""  Interfaces        -\\n"""		514964	1					
ANR	515337	Argument	"""  Interfaces        -\\n"""		514964	0					
ANR	515338	PrimaryExpression	"""  Interfaces        -\\n"""		514964	0					
ANR	515339	IfStatement	if ( c -> interfaces_offset > 0 && dex -> header . data_offset < c -> interfaces_offset && c -> interfaces_offset < dex -> header . data_offset + dex -> header . data_size )		514964	27					
ANR	515340	Condition	c -> interfaces_offset > 0 && dex -> header . data_offset < c -> interfaces_offset && c -> interfaces_offset < dex -> header . data_offset + dex -> header . data_size	1549:5:42058:42221	514964	0	True				
ANR	515341	AndExpression	c -> interfaces_offset > 0 && dex -> header . data_offset < c -> interfaces_offset && c -> interfaces_offset < dex -> header . data_offset + dex -> header . data_size		514964	0		&&			
ANR	515342	RelationalExpression	c -> interfaces_offset > 0		514964	0		>			
ANR	515343	PtrMemberAccess	c -> interfaces_offset		514964	0					
ANR	515344	Identifier	c		514964	0					
ANR	515345	Identifier	interfaces_offset		514964	1					
ANR	515346	PrimaryExpression	0		514964	1					
ANR	515347	AndExpression	dex -> header . data_offset < c -> interfaces_offset && c -> interfaces_offset < dex -> header . data_offset + dex -> header . data_size		514964	1		&&			
ANR	515348	RelationalExpression	dex -> header . data_offset < c -> interfaces_offset		514964	0		<			
ANR	515349	MemberAccess	dex -> header . data_offset		514964	0					
ANR	515350	PtrMemberAccess	dex -> header		514964	0					
ANR	515351	Identifier	dex		514964	0					
ANR	515352	Identifier	header		514964	1					
ANR	515353	Identifier	data_offset		514964	1					
ANR	515354	PtrMemberAccess	c -> interfaces_offset		514964	1					
ANR	515355	Identifier	c		514964	0					
ANR	515356	Identifier	interfaces_offset		514964	1					
ANR	515357	RelationalExpression	c -> interfaces_offset < dex -> header . data_offset + dex -> header . data_size		514964	1		<			
ANR	515358	PtrMemberAccess	c -> interfaces_offset		514964	0					
ANR	515359	Identifier	c		514964	0					
ANR	515360	Identifier	interfaces_offset		514964	1					
ANR	515361	AdditiveExpression	dex -> header . data_offset + dex -> header . data_size		514964	1		+			
ANR	515362	MemberAccess	dex -> header . data_offset		514964	0					
ANR	515363	PtrMemberAccess	dex -> header		514964	0					
ANR	515364	Identifier	dex		514964	0					
ANR	515365	Identifier	header		514964	1					
ANR	515366	Identifier	data_offset		514964	1					
ANR	515367	MemberAccess	dex -> header . data_size		514964	1					
ANR	515368	PtrMemberAccess	dex -> header		514964	0					
ANR	515369	Identifier	dex		514964	0					
ANR	515370	Identifier	header		514964	1					
ANR	515371	Identifier	data_size		514964	1					
ANR	515372	CompoundStatement		62:2:1627:1699	514964	1					
ANR	515373	IdentifierDeclStatement	"int types_list_size = r_buf_read_le32_at ( bf -> buf , c -> interfaces_offset ) ;"	1553:2:42228:42300	514964	0	True				
ANR	515374	IdentifierDecl	"types_list_size = r_buf_read_le32_at ( bf -> buf , c -> interfaces_offset )"		514964	0					
ANR	515375	IdentifierDeclType	int		514964	0					
ANR	515376	Identifier	types_list_size		514964	1					
ANR	515377	AssignmentExpression	"types_list_size = r_buf_read_le32_at ( bf -> buf , c -> interfaces_offset )"		514964	2		=			
ANR	515378	Identifier	types_list_size		514964	0					
ANR	515379	CallExpression	"r_buf_read_le32_at ( bf -> buf , c -> interfaces_offset )"		514964	1					
ANR	515380	Callee	r_buf_read_le32_at		514964	0					
ANR	515381	Identifier	r_buf_read_le32_at		514964	0					
ANR	515382	ArgumentList	bf -> buf		514964	1					
ANR	515383	Argument	bf -> buf		514964	0					
ANR	515384	PtrMemberAccess	bf -> buf		514964	0					
ANR	515385	Identifier	bf		514964	0					
ANR	515386	Identifier	buf		514964	1					
ANR	515387	Argument	c -> interfaces_offset		514964	1					
ANR	515388	PtrMemberAccess	c -> interfaces_offset		514964	0					
ANR	515389	Identifier	c		514964	0					
ANR	515390	Identifier	interfaces_offset		514964	1					
ANR	515391	IfStatement	if ( types_list_size < 0 || types_list_size >= dex -> header . types_size )		514964	1					
ANR	515392	Condition	types_list_size < 0 || types_list_size >= dex -> header . types_size	1554:6:42308:42371	514964	0	True				
ANR	515393	OrExpression	types_list_size < 0 || types_list_size >= dex -> header . types_size		514964	0		||			
ANR	515394	RelationalExpression	types_list_size < 0		514964	0		<			
ANR	515395	Identifier	types_list_size		514964	0					
ANR	515396	PrimaryExpression	0		514964	1					
ANR	515397	RelationalExpression	types_list_size >= dex -> header . types_size		514964	1		>=			
ANR	515398	Identifier	types_list_size		514964	0					
ANR	515399	MemberAccess	dex -> header . types_size		514964	1					
ANR	515400	PtrMemberAccess	dex -> header		514964	0					
ANR	515401	Identifier	dex		514964	0					
ANR	515402	Identifier	header		514964	1					
ANR	515403	Identifier	types_size		514964	1					
ANR	515404	CompoundStatement		63:73:1774:1774	514964	1					
ANR	515405	ReturnStatement	return ;	1555:3:42380:42386	514964	0	True				
ANR	515406	ForStatement	for ( z = 0 ; z < types_list_size ; z ++ )		514964	2					
ANR	515407	ForInit	z = 0 ;	1557:7:42399:42404	514964	0	True				
ANR	515408	AssignmentExpression	z = 0		514964	0		=			
ANR	515409	Identifier	z		514964	0					
ANR	515410	PrimaryExpression	0		514964	1					
ANR	515411	Condition	z < types_list_size	1557:14:42406:42424	514964	1	True				
ANR	515412	RelationalExpression	z < types_list_size		514964	0		<			
ANR	515413	Identifier	z		514964	0					
ANR	515414	Identifier	types_list_size		514964	1					
ANR	515415	PostIncDecOperationExpression	z ++	1557:35:42427:42429	514964	2	True				
ANR	515416	Identifier	z		514964	0					
ANR	515417	IncDec	++		514964	1					
ANR	515418	CompoundStatement		70:3:1961:1988	514964	3					
ANR	515419	IdentifierDeclStatement	ut16 le16 ;	1558:3:42437:42446	514964	0	True				
ANR	515420	IdentifierDecl	le16		514964	0					
ANR	515421	IdentifierDeclType	ut16		514964	0					
ANR	515422	Identifier	le16		514964	1					
ANR	515423	IdentifierDeclStatement	ut32 off = c -> interfaces_offset + 4 + ( z * 2 ) ;	1559:3:42451:42496	514964	1	True				
ANR	515424	IdentifierDecl	off = c -> interfaces_offset + 4 + ( z * 2 )		514964	0					
ANR	515425	IdentifierDeclType	ut32		514964	0					
ANR	515426	Identifier	off		514964	1					
ANR	515427	AssignmentExpression	off = c -> interfaces_offset + 4 + ( z * 2 )		514964	2		=			
ANR	515428	Identifier	off		514964	0					
ANR	515429	AdditiveExpression	c -> interfaces_offset + 4 + ( z * 2 )		514964	1		+			
ANR	515430	PtrMemberAccess	c -> interfaces_offset		514964	0					
ANR	515431	Identifier	c		514964	0					
ANR	515432	Identifier	interfaces_offset		514964	1					
ANR	515433	AdditiveExpression	4 + ( z * 2 )		514964	1		+			
ANR	515434	PrimaryExpression	4		514964	0					
ANR	515435	MultiplicativeExpression	z * 2		514964	1		*			
ANR	515436	Identifier	z		514964	0					
ANR	515437	PrimaryExpression	2		514964	1					
ANR	515438	ExpressionStatement	"r_buf_read_at ( bf -> buf , off , ( ut8 * ) & le16 , sizeof ( le16 ) )"	1560:3:42501:42557	514964	2	True				
ANR	515439	CallExpression	"r_buf_read_at ( bf -> buf , off , ( ut8 * ) & le16 , sizeof ( le16 ) )"		514964	0					
ANR	515440	Callee	r_buf_read_at		514964	0					
ANR	515441	Identifier	r_buf_read_at		514964	0					
ANR	515442	ArgumentList	bf -> buf		514964	1					
ANR	515443	Argument	bf -> buf		514964	0					
ANR	515444	PtrMemberAccess	bf -> buf		514964	0					
ANR	515445	Identifier	bf		514964	0					
ANR	515446	Identifier	buf		514964	1					
ANR	515447	Argument	off		514964	1					
ANR	515448	Identifier	off		514964	0					
ANR	515449	Argument	( ut8 * ) & le16		514964	2					
ANR	515450	CastExpression	( ut8 * ) & le16		514964	0					
ANR	515451	CastTarget	ut8 *		514964	0					
ANR	515452	UnaryOperationExpression	& le16		514964	1					
ANR	515453	UnaryOperator	&		514964	0					
ANR	515454	Identifier	le16		514964	1					
ANR	515455	Argument	sizeof ( le16 )		514964	3					
ANR	515456	SizeofExpression	sizeof ( le16 )		514964	0					
ANR	515457	Sizeof	sizeof		514964	0					
ANR	515458	SizeofOperand	le16		514964	1					
ANR	515459	IdentifierDeclStatement	int t = r_read_le16 ( & le16 ) ;	1561:3:42562:42589	514964	3	True				
ANR	515460	IdentifierDecl	t = r_read_le16 ( & le16 )		514964	0					
ANR	515461	IdentifierDeclType	int		514964	0					
ANR	515462	Identifier	t		514964	1					
ANR	515463	AssignmentExpression	t = r_read_le16 ( & le16 )		514964	2		=			
ANR	515464	Identifier	t		514964	0					
ANR	515465	CallExpression	r_read_le16 ( & le16 )		514964	1					
ANR	515466	Callee	r_read_le16		514964	0					
ANR	515467	Identifier	r_read_le16		514964	0					
ANR	515468	ArgumentList	& le16		514964	1					
ANR	515469	Argument	& le16		514964	0					
ANR	515470	UnaryOperationExpression	& le16		514964	0					
ANR	515471	UnaryOperator	&		514964	0					
ANR	515472	Identifier	le16		514964	1					
ANR	515473	IfStatement	if ( t > 0 && t < dex -> header . types_size )		514964	4					
ANR	515474	Condition	t > 0 && t < dex -> header . types_size	1562:7:42598:42632	514964	0	True				
ANR	515475	AndExpression	t > 0 && t < dex -> header . types_size		514964	0		&&			
ANR	515476	RelationalExpression	t > 0		514964	0		>			
ANR	515477	Identifier	t		514964	0					
ANR	515478	PrimaryExpression	0		514964	1					
ANR	515479	RelationalExpression	t < dex -> header . types_size		514964	1		<			
ANR	515480	Identifier	t		514964	0					
ANR	515481	MemberAccess	dex -> header . types_size		514964	1					
ANR	515482	PtrMemberAccess	dex -> header		514964	0					
ANR	515483	Identifier	dex		514964	0					
ANR	515484	Identifier	header		514964	1					
ANR	515485	Identifier	types_size		514964	1					
ANR	515486	CompoundStatement		72:4:2041:2078	514964	1					
ANR	515487	IdentifierDeclStatement	int tid = dex -> types [ t ] . descriptor_id ;	1563:4:42642:42679	514964	0	True				
ANR	515488	IdentifierDecl	tid = dex -> types [ t ] . descriptor_id		514964	0					
ANR	515489	IdentifierDeclType	int		514964	0					
ANR	515490	Identifier	tid		514964	1					
ANR	515491	AssignmentExpression	tid = dex -> types [ t ] . descriptor_id		514964	2		=			
ANR	515492	Identifier	tid		514964	0					
ANR	515493	MemberAccess	dex -> types [ t ] . descriptor_id		514964	1					
ANR	515494	ArrayIndexing	dex -> types [ t ]		514964	0					
ANR	515495	PtrMemberAccess	dex -> types		514964	0					
ANR	515496	Identifier	dex		514964	0					
ANR	515497	Identifier	types		514964	1					
ANR	515498	Identifier	t		514964	1					
ANR	515499	Identifier	descriptor_id		514964	1					
ANR	515500	IfStatement	if ( dexdump )		514964	1					
ANR	515501	Condition	dexdump	1564:8:42689:42695	514964	0	True				
ANR	515502	Identifier	dexdump		514964	0					
ANR	515503	CompoundStatement		73:17:2097:2097	514964	1					
ANR	515504	ExpressionStatement	"rbin -> cb_printf ( ""    #%d              : '%s'\\n"" , z , getstr ( dex , tid ) )"	1565:5:42705:42789	514964	0	True				
ANR	515505	CallExpression	"rbin -> cb_printf ( ""    #%d              : '%s'\\n"" , z , getstr ( dex , tid ) )"		514964	0					
ANR	515506	Callee	rbin -> cb_printf		514964	0					
ANR	515507	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515508	Identifier	rbin		514964	0					
ANR	515509	Identifier	cb_printf		514964	1					
ANR	515510	ArgumentList	"""    #%d              : '%s'\\n"""		514964	1					
ANR	515511	Argument	"""    #%d              : '%s'\\n"""		514964	0					
ANR	515512	PrimaryExpression	"""    #%d              : '%s'\\n"""		514964	0					
ANR	515513	Argument	z		514964	1					
ANR	515514	Identifier	z		514964	0					
ANR	515515	Argument	"getstr ( dex , tid )"		514964	2					
ANR	515516	CallExpression	"getstr ( dex , tid )"		514964	0					
ANR	515517	Callee	getstr		514964	0					
ANR	515518	Identifier	getstr		514964	0					
ANR	515519	ArgumentList	dex		514964	1					
ANR	515520	Argument	dex		514964	0					
ANR	515521	Identifier	dex		514964	0					
ANR	515522	Argument	tid		514964	1					
ANR	515523	Identifier	tid		514964	0					
ANR	515524	IfStatement	if ( ! c || ! c -> class_data_offset )		514964	28					
ANR	515525	Condition	! c || ! c -> class_data_offset	1573:5:42843:42869	514964	0	True				
ANR	515526	OrExpression	! c || ! c -> class_data_offset		514964	0		||			
ANR	515527	UnaryOperationExpression	! c		514964	0					
ANR	515528	UnaryOperator	!		514964	0					
ANR	515529	Identifier	c		514964	1					
ANR	515530	UnaryOperationExpression	! c -> class_data_offset		514964	1					
ANR	515531	UnaryOperator	!		514964	0					
ANR	515532	PtrMemberAccess	c -> class_data_offset		514964	1					
ANR	515533	Identifier	c		514964	0					
ANR	515534	Identifier	class_data_offset		514964	1					
ANR	515535	CompoundStatement		82:34:2271:2271	514964	1					
ANR	515536	IfStatement	if ( dexdump )		514964	0					
ANR	515537	Condition	dexdump	1574:6:42880:42886	514964	0	True				
ANR	515538	Identifier	dexdump		514964	0					
ANR	515539	CompoundStatement		83:15:2288:2288	514964	1					
ANR	515540	Statement	rbin	1575:3:42894:42897	514964	0	True				
ANR	515541	Statement	->	1575:7:42898:42899	514964	1	True				
ANR	515542	Statement	cb_printf	1575:9:42900:42908	514964	2	True				
ANR	515543	Statement	(	1575:19:42910:42910	514964	3	True				
ANR	515544	Statement	"""  Static fields     -\\n"""	1576:4:42916:42940	514964	4	True				
ANR	515545	Statement	"""  Instance fields   -\\n"""	1577:4:42946:42970	514964	5	True				
ANR	515546	Statement	"""  Direct methods    -\\n"""	1578:4:42976:43000	514964	6	True				
ANR	515547	Statement	"""  Virtual methods   -\\n"""	1579:4:43006:43030	514964	7	True				
ANR	515548	Statement	)	1579:29:43031:43031	514964	8	True				
ANR	515549	ExpressionStatement		1579:30:43032:43032	514964	9	True				
ANR	515550	ElseStatement	else		514964	0					
ANR	515551	CompoundStatement		119:2:3237:3245	514964	0					
ANR	515552	IfStatement	if ( dex -> header . class_offset > c -> class_data_offset || c -> class_data_offset < dex -> header . class_offset + dex -> header . class_size * DEX_CLASS_SIZE )		514964	0					
ANR	515553	Condition	dex -> header . class_offset > c -> class_data_offset || c -> class_data_offset < dex -> header . class_offset + dex -> header . class_size * DEX_CLASS_SIZE	1584:6:43169:43329	514964	0	True				
ANR	515554	OrExpression	dex -> header . class_offset > c -> class_data_offset || c -> class_data_offset < dex -> header . class_offset + dex -> header . class_size * DEX_CLASS_SIZE		514964	0		||			
ANR	515555	RelationalExpression	dex -> header . class_offset > c -> class_data_offset		514964	0		>			
ANR	515556	MemberAccess	dex -> header . class_offset		514964	0					
ANR	515557	PtrMemberAccess	dex -> header		514964	0					
ANR	515558	Identifier	dex		514964	0					
ANR	515559	Identifier	header		514964	1					
ANR	515560	Identifier	class_offset		514964	1					
ANR	515561	PtrMemberAccess	c -> class_data_offset		514964	1					
ANR	515562	Identifier	c		514964	0					
ANR	515563	Identifier	class_data_offset		514964	1					
ANR	515564	RelationalExpression	c -> class_data_offset < dex -> header . class_offset + dex -> header . class_size * DEX_CLASS_SIZE		514964	1		<			
ANR	515565	PtrMemberAccess	c -> class_data_offset		514964	0					
ANR	515566	Identifier	c		514964	0					
ANR	515567	Identifier	class_data_offset		514964	1					
ANR	515568	AdditiveExpression	dex -> header . class_offset + dex -> header . class_size * DEX_CLASS_SIZE		514964	1		+			
ANR	515569	MemberAccess	dex -> header . class_offset		514964	0					
ANR	515570	PtrMemberAccess	dex -> header		514964	0					
ANR	515571	Identifier	dex		514964	0					
ANR	515572	Identifier	header		514964	1					
ANR	515573	Identifier	class_offset		514964	1					
ANR	515574	MultiplicativeExpression	dex -> header . class_size * DEX_CLASS_SIZE		514964	1		*			
ANR	515575	MemberAccess	dex -> header . class_size		514964	0					
ANR	515576	PtrMemberAccess	dex -> header		514964	0					
ANR	515577	Identifier	dex		514964	0					
ANR	515578	Identifier	header		514964	1					
ANR	515579	Identifier	class_size		514964	1					
ANR	515580	Identifier	DEX_CLASS_SIZE		514964	1					
ANR	515581	CompoundStatement		96:49:2731:2731	514964	1					
ANR	515582	ReturnStatement	return ;	1588:3:43337:43343	514964	0	True				
ANR	515583	IdentifierDeclStatement	ut64 bufbufsz ;	1591:2:43352:43365	514964	1	True				
ANR	515584	IdentifierDecl	bufbufsz		514964	0					
ANR	515585	IdentifierDeclType	ut64		514964	0					
ANR	515586	Identifier	bufbufsz		514964	1					
ANR	515587	IdentifierDeclStatement	"const ut8 * bufbuf = r_buf_data ( bf -> buf , & bufbufsz ) ;"	1592:2:43369:43420	514964	2	True				
ANR	515588	IdentifierDecl	"* bufbuf = r_buf_data ( bf -> buf , & bufbufsz )"		514964	0					
ANR	515589	IdentifierDeclType	const ut8 *		514964	0					
ANR	515590	Identifier	bufbuf		514964	1					
ANR	515591	AssignmentExpression	"* bufbuf = r_buf_data ( bf -> buf , & bufbufsz )"		514964	2		=			
ANR	515592	Identifier	bufbuf		514964	0					
ANR	515593	CallExpression	"r_buf_data ( bf -> buf , & bufbufsz )"		514964	1					
ANR	515594	Callee	r_buf_data		514964	0					
ANR	515595	Identifier	r_buf_data		514964	0					
ANR	515596	ArgumentList	bf -> buf		514964	1					
ANR	515597	Argument	bf -> buf		514964	0					
ANR	515598	PtrMemberAccess	bf -> buf		514964	0					
ANR	515599	Identifier	bf		514964	0					
ANR	515600	Identifier	buf		514964	1					
ANR	515601	Argument	& bufbufsz		514964	1					
ANR	515602	UnaryOperationExpression	& bufbufsz		514964	0					
ANR	515603	UnaryOperator	&		514964	0					
ANR	515604	Identifier	bufbufsz		514964	1					
ANR	515605	ExpressionStatement	p = bufbuf + c -> class_data_offset	1593:2:43424:43457	514964	3	True				
ANR	515606	AssignmentExpression	p = bufbuf + c -> class_data_offset		514964	0		=			
ANR	515607	Identifier	p		514964	0					
ANR	515608	AdditiveExpression	bufbuf + c -> class_data_offset		514964	1		+			
ANR	515609	Identifier	bufbuf		514964	0					
ANR	515610	PtrMemberAccess	c -> class_data_offset		514964	1					
ANR	515611	Identifier	c		514964	0					
ANR	515612	Identifier	class_data_offset		514964	1					
ANR	515613	IfStatement	if ( bufbufsz < c -> class_data_offset )		514964	4					
ANR	515614	Condition	bufbufsz < c -> class_data_offset	1595:6:43487:43517	514964	0	True				
ANR	515615	RelationalExpression	bufbufsz < c -> class_data_offset		514964	0		<			
ANR	515616	Identifier	bufbufsz		514964	0					
ANR	515617	PtrMemberAccess	c -> class_data_offset		514964	1					
ANR	515618	Identifier	c		514964	0					
ANR	515619	Identifier	class_data_offset		514964	1					
ANR	515620	CompoundStatement		104:39:2919:2919	514964	1					
ANR	515621	ReturnStatement	return ;	1596:3:43525:43531	514964	0	True				
ANR	515622	IdentifierDeclStatement	ut32 p_size = ( bufbufsz - c -> class_data_offset ) ;	1598:2:43539:43586	514964	5	True				
ANR	515623	IdentifierDecl	p_size = ( bufbufsz - c -> class_data_offset )		514964	0					
ANR	515624	IdentifierDeclType	ut32		514964	0					
ANR	515625	Identifier	p_size		514964	1					
ANR	515626	AssignmentExpression	p_size = ( bufbufsz - c -> class_data_offset )		514964	2		=			
ANR	515627	Identifier	p_size		514964	0					
ANR	515628	AdditiveExpression	bufbufsz - c -> class_data_offset		514964	1		-			
ANR	515629	Identifier	bufbufsz		514964	0					
ANR	515630	PtrMemberAccess	c -> class_data_offset		514964	1					
ANR	515631	Identifier	c		514964	0					
ANR	515632	Identifier	class_data_offset		514964	1					
ANR	515633	ExpressionStatement	p_end = p + p_size	1599:2:43590:43608	514964	6	True				
ANR	515634	AssignmentExpression	p_end = p + p_size		514964	0		=			
ANR	515635	Identifier	p_end		514964	0					
ANR	515636	AdditiveExpression	p + p_size		514964	1		+			
ANR	515637	Identifier	p		514964	0					
ANR	515638	Identifier	p_size		514964	1					
ANR	515639	ExpressionStatement	c -> class_data = ( struct dex_class_data_item_t * ) malloc ( sizeof ( struct dex_class_data_item_t ) )	1601:2:43637:43735	514964	7	True				
ANR	515640	AssignmentExpression	c -> class_data = ( struct dex_class_data_item_t * ) malloc ( sizeof ( struct dex_class_data_item_t ) )		514964	0		=			
ANR	515641	PtrMemberAccess	c -> class_data		514964	0					
ANR	515642	Identifier	c		514964	0					
ANR	515643	Identifier	class_data		514964	1					
ANR	515644	CastExpression	( struct dex_class_data_item_t * ) malloc ( sizeof ( struct dex_class_data_item_t ) )		514964	1					
ANR	515645	CastTarget	struct dex_class_data_item_t *		514964	0					
ANR	515646	CallExpression	malloc ( sizeof ( struct dex_class_data_item_t ) )		514964	1					
ANR	515647	Callee	malloc		514964	0					
ANR	515648	Identifier	malloc		514964	0					
ANR	515649	ArgumentList	sizeof ( struct dex_class_data_item_t )		514964	1					
ANR	515650	Argument	sizeof ( struct dex_class_data_item_t )		514964	0					
ANR	515651	SizeofExpression	sizeof ( struct dex_class_data_item_t )		514964	0					
ANR	515652	Sizeof	sizeof		514964	0					
ANR	515653	SizeofOperand	struct dex_class_data_item_t		514964	1					
ANR	515654	IfStatement	if ( ! c -> class_data )		514964	8					
ANR	515655	Condition	! c -> class_data	1603:6:43743:43756	514964	0	True				
ANR	515656	UnaryOperationExpression	! c -> class_data		514964	0					
ANR	515657	UnaryOperator	!		514964	0					
ANR	515658	PtrMemberAccess	c -> class_data		514964	1					
ANR	515659	Identifier	c		514964	0					
ANR	515660	Identifier	class_data		514964	1					
ANR	515661	CompoundStatement		112:22:3158:3158	514964	1					
ANR	515662	ReturnStatement	return ;	1604:3:43764:43770	514964	0	True				
ANR	515663	IfStatement	if ( p >= p_end )		514964	9					
ANR	515664	Condition	p >= p_end	1606:6:43782:43791	514964	0	True				
ANR	515665	RelationalExpression	p >= p_end		514964	0		>=			
ANR	515666	Identifier	p		514964	0					
ANR	515667	Identifier	p_end		514964	1					
ANR	515668	CompoundStatement		115:18:3193:3193	514964	1					
ANR	515669	ExpressionStatement	free ( c -> class_data )	1607:3:43799:43819	514964	0	True				
ANR	515670	CallExpression	free ( c -> class_data )		514964	0					
ANR	515671	Callee	free		514964	0					
ANR	515672	Identifier	free		514964	0					
ANR	515673	ArgumentList	c -> class_data		514964	1					
ANR	515674	Argument	c -> class_data		514964	0					
ANR	515675	PtrMemberAccess	c -> class_data		514964	0					
ANR	515676	Identifier	c		514964	0					
ANR	515677	Identifier	class_data		514964	1					
ANR	515678	ReturnStatement	return ;	1608:3:43824:43830	514964	1	True				
ANR	515679	IdentifierDeclStatement	ut64 eof ;	1610:2:43838:43846	514964	10	True				
ANR	515680	IdentifierDecl	eof		514964	0					
ANR	515681	IdentifierDeclType	ut64		514964	0					
ANR	515682	Identifier	eof		514964	1					
ANR	515683	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & eof )"	1612:2:43851:43885	514964	11	True				
ANR	515684	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & eof )"		514964	0		=			
ANR	515685	Identifier	p		514964	0					
ANR	515686	CallExpression	"r_uleb128 ( p , p_end - p , & eof )"		514964	1					
ANR	515687	Callee	r_uleb128		514964	0					
ANR	515688	Identifier	r_uleb128		514964	0					
ANR	515689	ArgumentList	p		514964	1					
ANR	515690	Argument	p		514964	0					
ANR	515691	Identifier	p		514964	0					
ANR	515692	Argument	p_end - p		514964	1					
ANR	515693	AdditiveExpression	p_end - p		514964	0		-			
ANR	515694	Identifier	p_end		514964	0					
ANR	515695	Identifier	p		514964	1					
ANR	515696	Argument	& eof		514964	2					
ANR	515697	UnaryOperationExpression	& eof		514964	0					
ANR	515698	UnaryOperator	&		514964	0					
ANR	515699	Identifier	eof		514964	1					
ANR	515700	IfStatement	if ( p >= p_end )		514964	12					
ANR	515701	Condition	p >= p_end	1613:6:43893:43902	514964	0	True				
ANR	515702	RelationalExpression	p >= p_end		514964	0		>=			
ANR	515703	Identifier	p		514964	0					
ANR	515704	Identifier	p_end		514964	1					
ANR	515705	CompoundStatement		122:18:3304:3304	514964	1					
ANR	515706	ExpressionStatement	free ( c -> class_data )	1614:3:43910:43930	514964	0	True				
ANR	515707	CallExpression	free ( c -> class_data )		514964	0					
ANR	515708	Callee	free		514964	0					
ANR	515709	Identifier	free		514964	0					
ANR	515710	ArgumentList	c -> class_data		514964	1					
ANR	515711	Argument	c -> class_data		514964	0					
ANR	515712	PtrMemberAccess	c -> class_data		514964	0					
ANR	515713	Identifier	c		514964	0					
ANR	515714	Identifier	class_data		514964	1					
ANR	515715	ReturnStatement	return ;	1615:3:43935:43941	514964	1	True				
ANR	515716	ExpressionStatement	c -> class_data -> static_fields_size = eof	1617:2:43949:43988	514964	13	True				
ANR	515717	AssignmentExpression	c -> class_data -> static_fields_size = eof		514964	0		=			
ANR	515718	PtrMemberAccess	c -> class_data -> static_fields_size		514964	0					
ANR	515719	PtrMemberAccess	c -> class_data		514964	0					
ANR	515720	Identifier	c		514964	0					
ANR	515721	Identifier	class_data		514964	1					
ANR	515722	Identifier	static_fields_size		514964	1					
ANR	515723	Identifier	eof		514964	1					
ANR	515724	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & eof )"	1619:2:43993:44027	514964	14	True				
ANR	515725	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & eof )"		514964	0		=			
ANR	515726	Identifier	p		514964	0					
ANR	515727	CallExpression	"r_uleb128 ( p , p_end - p , & eof )"		514964	1					
ANR	515728	Callee	r_uleb128		514964	0					
ANR	515729	Identifier	r_uleb128		514964	0					
ANR	515730	ArgumentList	p		514964	1					
ANR	515731	Argument	p		514964	0					
ANR	515732	Identifier	p		514964	0					
ANR	515733	Argument	p_end - p		514964	1					
ANR	515734	AdditiveExpression	p_end - p		514964	0		-			
ANR	515735	Identifier	p_end		514964	0					
ANR	515736	Identifier	p		514964	1					
ANR	515737	Argument	& eof		514964	2					
ANR	515738	UnaryOperationExpression	& eof		514964	0					
ANR	515739	UnaryOperator	&		514964	0					
ANR	515740	Identifier	eof		514964	1					
ANR	515741	IfStatement	if ( p >= p_end )		514964	15					
ANR	515742	Condition	p >= p_end	1620:6:44035:44044	514964	0	True				
ANR	515743	RelationalExpression	p >= p_end		514964	0		>=			
ANR	515744	Identifier	p		514964	0					
ANR	515745	Identifier	p_end		514964	1					
ANR	515746	CompoundStatement		129:18:3446:3446	514964	1					
ANR	515747	ExpressionStatement	free ( c -> class_data )	1621:3:44052:44072	514964	0	True				
ANR	515748	CallExpression	free ( c -> class_data )		514964	0					
ANR	515749	Callee	free		514964	0					
ANR	515750	Identifier	free		514964	0					
ANR	515751	ArgumentList	c -> class_data		514964	1					
ANR	515752	Argument	c -> class_data		514964	0					
ANR	515753	PtrMemberAccess	c -> class_data		514964	0					
ANR	515754	Identifier	c		514964	0					
ANR	515755	Identifier	class_data		514964	1					
ANR	515756	ReturnStatement	return ;	1622:3:44077:44083	514964	1	True				
ANR	515757	ExpressionStatement	c -> class_data -> instance_fields_size = eof	1624:2:44091:44132	514964	16	True				
ANR	515758	AssignmentExpression	c -> class_data -> instance_fields_size = eof		514964	0		=			
ANR	515759	PtrMemberAccess	c -> class_data -> instance_fields_size		514964	0					
ANR	515760	PtrMemberAccess	c -> class_data		514964	0					
ANR	515761	Identifier	c		514964	0					
ANR	515762	Identifier	class_data		514964	1					
ANR	515763	Identifier	instance_fields_size		514964	1					
ANR	515764	Identifier	eof		514964	1					
ANR	515765	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & eof )"	1626:2:44137:44171	514964	17	True				
ANR	515766	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & eof )"		514964	0		=			
ANR	515767	Identifier	p		514964	0					
ANR	515768	CallExpression	"r_uleb128 ( p , p_end - p , & eof )"		514964	1					
ANR	515769	Callee	r_uleb128		514964	0					
ANR	515770	Identifier	r_uleb128		514964	0					
ANR	515771	ArgumentList	p		514964	1					
ANR	515772	Argument	p		514964	0					
ANR	515773	Identifier	p		514964	0					
ANR	515774	Argument	p_end - p		514964	1					
ANR	515775	AdditiveExpression	p_end - p		514964	0		-			
ANR	515776	Identifier	p_end		514964	0					
ANR	515777	Identifier	p		514964	1					
ANR	515778	Argument	& eof		514964	2					
ANR	515779	UnaryOperationExpression	& eof		514964	0					
ANR	515780	UnaryOperator	&		514964	0					
ANR	515781	Identifier	eof		514964	1					
ANR	515782	IfStatement	if ( p >= p_end )		514964	18					
ANR	515783	Condition	p >= p_end	1627:6:44179:44188	514964	0	True				
ANR	515784	RelationalExpression	p >= p_end		514964	0		>=			
ANR	515785	Identifier	p		514964	0					
ANR	515786	Identifier	p_end		514964	1					
ANR	515787	CompoundStatement		136:18:3590:3590	514964	1					
ANR	515788	ExpressionStatement	free ( c -> class_data )	1628:3:44196:44216	514964	0	True				
ANR	515789	CallExpression	free ( c -> class_data )		514964	0					
ANR	515790	Callee	free		514964	0					
ANR	515791	Identifier	free		514964	0					
ANR	515792	ArgumentList	c -> class_data		514964	1					
ANR	515793	Argument	c -> class_data		514964	0					
ANR	515794	PtrMemberAccess	c -> class_data		514964	0					
ANR	515795	Identifier	c		514964	0					
ANR	515796	Identifier	class_data		514964	1					
ANR	515797	ReturnStatement	return ;	1629:3:44221:44227	514964	1	True				
ANR	515798	ExpressionStatement	c -> class_data -> direct_methods_size = eof	1631:2:44235:44275	514964	19	True				
ANR	515799	AssignmentExpression	c -> class_data -> direct_methods_size = eof		514964	0		=			
ANR	515800	PtrMemberAccess	c -> class_data -> direct_methods_size		514964	0					
ANR	515801	PtrMemberAccess	c -> class_data		514964	0					
ANR	515802	Identifier	c		514964	0					
ANR	515803	Identifier	class_data		514964	1					
ANR	515804	Identifier	direct_methods_size		514964	1					
ANR	515805	Identifier	eof		514964	1					
ANR	515806	ExpressionStatement	"p = r_uleb128 ( p , p_end - p , & eof )"	1633:2:44280:44314	514964	20	True				
ANR	515807	AssignmentExpression	"p = r_uleb128 ( p , p_end - p , & eof )"		514964	0		=			
ANR	515808	Identifier	p		514964	0					
ANR	515809	CallExpression	"r_uleb128 ( p , p_end - p , & eof )"		514964	1					
ANR	515810	Callee	r_uleb128		514964	0					
ANR	515811	Identifier	r_uleb128		514964	0					
ANR	515812	ArgumentList	p		514964	1					
ANR	515813	Argument	p		514964	0					
ANR	515814	Identifier	p		514964	0					
ANR	515815	Argument	p_end - p		514964	1					
ANR	515816	AdditiveExpression	p_end - p		514964	0		-			
ANR	515817	Identifier	p_end		514964	0					
ANR	515818	Identifier	p		514964	1					
ANR	515819	Argument	& eof		514964	2					
ANR	515820	UnaryOperationExpression	& eof		514964	0					
ANR	515821	UnaryOperator	&		514964	0					
ANR	515822	Identifier	eof		514964	1					
ANR	515823	IfStatement	if ( p >= p_end )		514964	21					
ANR	515824	Condition	p >= p_end	1634:6:44322:44331	514964	0	True				
ANR	515825	RelationalExpression	p >= p_end		514964	0		>=			
ANR	515826	Identifier	p		514964	0					
ANR	515827	Identifier	p_end		514964	1					
ANR	515828	CompoundStatement		143:18:3733:3733	514964	1					
ANR	515829	ExpressionStatement	free ( c -> class_data )	1635:3:44339:44359	514964	0	True				
ANR	515830	CallExpression	free ( c -> class_data )		514964	0					
ANR	515831	Callee	free		514964	0					
ANR	515832	Identifier	free		514964	0					
ANR	515833	ArgumentList	c -> class_data		514964	1					
ANR	515834	Argument	c -> class_data		514964	0					
ANR	515835	PtrMemberAccess	c -> class_data		514964	0					
ANR	515836	Identifier	c		514964	0					
ANR	515837	Identifier	class_data		514964	1					
ANR	515838	ReturnStatement	return ;	1636:3:44364:44370	514964	1	True				
ANR	515839	ExpressionStatement	c -> class_data -> virtual_methods_size = eof	1638:2:44378:44419	514964	22	True				
ANR	515840	AssignmentExpression	c -> class_data -> virtual_methods_size = eof		514964	0		=			
ANR	515841	PtrMemberAccess	c -> class_data -> virtual_methods_size		514964	0					
ANR	515842	PtrMemberAccess	c -> class_data		514964	0					
ANR	515843	Identifier	c		514964	0					
ANR	515844	Identifier	class_data		514964	1					
ANR	515845	Identifier	virtual_methods_size		514964	1					
ANR	515846	Identifier	eof		514964	1					
ANR	515847	IfStatement	if ( dexdump )		514964	23					
ANR	515848	Condition	dexdump	1640:6:44428:44434	514964	0	True				
ANR	515849	Identifier	dexdump		514964	0					
ANR	515850	CompoundStatement		149:15:3836:3836	514964	1					
ANR	515851	ExpressionStatement	"rbin -> cb_printf ( ""  Static fields     -\\n"" )"	1641:3:44442:44485	514964	0	True				
ANR	515852	CallExpression	"rbin -> cb_printf ( ""  Static fields     -\\n"" )"		514964	0					
ANR	515853	Callee	rbin -> cb_printf		514964	0					
ANR	515854	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515855	Identifier	rbin		514964	0					
ANR	515856	Identifier	cb_printf		514964	1					
ANR	515857	ArgumentList	"""  Static fields     -\\n"""		514964	1					
ANR	515858	Argument	"""  Static fields     -\\n"""		514964	0					
ANR	515859	PrimaryExpression	"""  Static fields     -\\n"""		514964	0					
ANR	515860	ExpressionStatement	"p = parse_dex_class_fields ( bf , c , cls , p , p_end , sym_count , c -> class_data -> static_fields_size , true )"	1643:2:44493:44601	514964	24	True				
ANR	515861	AssignmentExpression	"p = parse_dex_class_fields ( bf , c , cls , p , p_end , sym_count , c -> class_data -> static_fields_size , true )"		514964	0		=			
ANR	515862	Identifier	p		514964	0					
ANR	515863	CallExpression	"parse_dex_class_fields ( bf , c , cls , p , p_end , sym_count , c -> class_data -> static_fields_size , true )"		514964	1					
ANR	515864	Callee	parse_dex_class_fields		514964	0					
ANR	515865	Identifier	parse_dex_class_fields		514964	0					
ANR	515866	ArgumentList	bf		514964	1					
ANR	515867	Argument	bf		514964	0					
ANR	515868	Identifier	bf		514964	0					
ANR	515869	Argument	c		514964	1					
ANR	515870	Identifier	c		514964	0					
ANR	515871	Argument	cls		514964	2					
ANR	515872	Identifier	cls		514964	0					
ANR	515873	Argument	p		514964	3					
ANR	515874	Identifier	p		514964	0					
ANR	515875	Argument	p_end		514964	4					
ANR	515876	Identifier	p_end		514964	0					
ANR	515877	Argument	sym_count		514964	5					
ANR	515878	Identifier	sym_count		514964	0					
ANR	515879	Argument	c -> class_data -> static_fields_size		514964	6					
ANR	515880	PtrMemberAccess	c -> class_data -> static_fields_size		514964	0					
ANR	515881	PtrMemberAccess	c -> class_data		514964	0					
ANR	515882	Identifier	c		514964	0					
ANR	515883	Identifier	class_data		514964	1					
ANR	515884	Identifier	static_fields_size		514964	1					
ANR	515885	Argument	true		514964	7					
ANR	515886	Identifier	true		514964	0					
ANR	515887	IfStatement	if ( dexdump )		514964	25					
ANR	515888	Condition	dexdump	1647:6:44610:44616	514964	0	True				
ANR	515889	Identifier	dexdump		514964	0					
ANR	515890	CompoundStatement		156:15:4018:4018	514964	1					
ANR	515891	ExpressionStatement	"rbin -> cb_printf ( ""  Instance fields   -\\n"" )"	1648:3:44624:44667	514964	0	True				
ANR	515892	CallExpression	"rbin -> cb_printf ( ""  Instance fields   -\\n"" )"		514964	0					
ANR	515893	Callee	rbin -> cb_printf		514964	0					
ANR	515894	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515895	Identifier	rbin		514964	0					
ANR	515896	Identifier	cb_printf		514964	1					
ANR	515897	ArgumentList	"""  Instance fields   -\\n"""		514964	1					
ANR	515898	Argument	"""  Instance fields   -\\n"""		514964	0					
ANR	515899	PrimaryExpression	"""  Instance fields   -\\n"""		514964	0					
ANR	515900	ExpressionStatement	"p = parse_dex_class_fields ( bf , c , cls , p , p_end , sym_count , c -> class_data -> instance_fields_size , false )"	1650:2:44675:44786	514964	26	True				
ANR	515901	AssignmentExpression	"p = parse_dex_class_fields ( bf , c , cls , p , p_end , sym_count , c -> class_data -> instance_fields_size , false )"		514964	0		=			
ANR	515902	Identifier	p		514964	0					
ANR	515903	CallExpression	"parse_dex_class_fields ( bf , c , cls , p , p_end , sym_count , c -> class_data -> instance_fields_size , false )"		514964	1					
ANR	515904	Callee	parse_dex_class_fields		514964	0					
ANR	515905	Identifier	parse_dex_class_fields		514964	0					
ANR	515906	ArgumentList	bf		514964	1					
ANR	515907	Argument	bf		514964	0					
ANR	515908	Identifier	bf		514964	0					
ANR	515909	Argument	c		514964	1					
ANR	515910	Identifier	c		514964	0					
ANR	515911	Argument	cls		514964	2					
ANR	515912	Identifier	cls		514964	0					
ANR	515913	Argument	p		514964	3					
ANR	515914	Identifier	p		514964	0					
ANR	515915	Argument	p_end		514964	4					
ANR	515916	Identifier	p_end		514964	0					
ANR	515917	Argument	sym_count		514964	5					
ANR	515918	Identifier	sym_count		514964	0					
ANR	515919	Argument	c -> class_data -> instance_fields_size		514964	6					
ANR	515920	PtrMemberAccess	c -> class_data -> instance_fields_size		514964	0					
ANR	515921	PtrMemberAccess	c -> class_data		514964	0					
ANR	515922	Identifier	c		514964	0					
ANR	515923	Identifier	class_data		514964	1					
ANR	515924	Identifier	instance_fields_size		514964	1					
ANR	515925	Argument	false		514964	7					
ANR	515926	Identifier	false		514964	0					
ANR	515927	IfStatement	if ( dexdump )		514964	27					
ANR	515928	Condition	dexdump	1654:6:44795:44801	514964	0	True				
ANR	515929	Identifier	dexdump		514964	0					
ANR	515930	CompoundStatement		163:15:4203:4203	514964	1					
ANR	515931	ExpressionStatement	"rbin -> cb_printf ( ""  Direct methods    -\\n"" )"	1655:3:44809:44852	514964	0	True				
ANR	515932	CallExpression	"rbin -> cb_printf ( ""  Direct methods    -\\n"" )"		514964	0					
ANR	515933	Callee	rbin -> cb_printf		514964	0					
ANR	515934	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515935	Identifier	rbin		514964	0					
ANR	515936	Identifier	cb_printf		514964	1					
ANR	515937	ArgumentList	"""  Direct methods    -\\n"""		514964	1					
ANR	515938	Argument	"""  Direct methods    -\\n"""		514964	0					
ANR	515939	PrimaryExpression	"""  Direct methods    -\\n"""		514964	0					
ANR	515940	ExpressionStatement	"p = parse_dex_class_method ( bf , c , cls , p , p_end , sym_count , c -> class_data -> direct_methods_size , methods , true , bufbuf )"	1657:2:44860:44986	514964	28	True				
ANR	515941	AssignmentExpression	"p = parse_dex_class_method ( bf , c , cls , p , p_end , sym_count , c -> class_data -> direct_methods_size , methods , true , bufbuf )"		514964	0		=			
ANR	515942	Identifier	p		514964	0					
ANR	515943	CallExpression	"parse_dex_class_method ( bf , c , cls , p , p_end , sym_count , c -> class_data -> direct_methods_size , methods , true , bufbuf )"		514964	1					
ANR	515944	Callee	parse_dex_class_method		514964	0					
ANR	515945	Identifier	parse_dex_class_method		514964	0					
ANR	515946	ArgumentList	bf		514964	1					
ANR	515947	Argument	bf		514964	0					
ANR	515948	Identifier	bf		514964	0					
ANR	515949	Argument	c		514964	1					
ANR	515950	Identifier	c		514964	0					
ANR	515951	Argument	cls		514964	2					
ANR	515952	Identifier	cls		514964	0					
ANR	515953	Argument	p		514964	3					
ANR	515954	Identifier	p		514964	0					
ANR	515955	Argument	p_end		514964	4					
ANR	515956	Identifier	p_end		514964	0					
ANR	515957	Argument	sym_count		514964	5					
ANR	515958	Identifier	sym_count		514964	0					
ANR	515959	Argument	c -> class_data -> direct_methods_size		514964	6					
ANR	515960	PtrMemberAccess	c -> class_data -> direct_methods_size		514964	0					
ANR	515961	PtrMemberAccess	c -> class_data		514964	0					
ANR	515962	Identifier	c		514964	0					
ANR	515963	Identifier	class_data		514964	1					
ANR	515964	Identifier	direct_methods_size		514964	1					
ANR	515965	Argument	methods		514964	7					
ANR	515966	Identifier	methods		514964	0					
ANR	515967	Argument	true		514964	8					
ANR	515968	Identifier	true		514964	0					
ANR	515969	Argument	bufbuf		514964	9					
ANR	515970	Identifier	bufbuf		514964	0					
ANR	515971	IfStatement	if ( dexdump )		514964	29					
ANR	515972	Condition	dexdump	1661:6:44995:45001	514964	0	True				
ANR	515973	Identifier	dexdump		514964	0					
ANR	515974	CompoundStatement		170:15:4403:4403	514964	1					
ANR	515975	ExpressionStatement	"rbin -> cb_printf ( ""  Virtual methods   -\\n"" )"	1662:3:45009:45052	514964	0	True				
ANR	515976	CallExpression	"rbin -> cb_printf ( ""  Virtual methods   -\\n"" )"		514964	0					
ANR	515977	Callee	rbin -> cb_printf		514964	0					
ANR	515978	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	515979	Identifier	rbin		514964	0					
ANR	515980	Identifier	cb_printf		514964	1					
ANR	515981	ArgumentList	"""  Virtual methods   -\\n"""		514964	1					
ANR	515982	Argument	"""  Virtual methods   -\\n"""		514964	0					
ANR	515983	PrimaryExpression	"""  Virtual methods   -\\n"""		514964	0					
ANR	515984	ExpressionStatement	"parse_dex_class_method ( bf , c , cls , p , p_end , sym_count , c -> class_data -> virtual_methods_size , methods , false , bufbuf )"	1664:2:45060:45184	514964	30	True				
ANR	515985	CallExpression	"parse_dex_class_method ( bf , c , cls , p , p_end , sym_count , c -> class_data -> virtual_methods_size , methods , false , bufbuf )"		514964	0					
ANR	515986	Callee	parse_dex_class_method		514964	0					
ANR	515987	Identifier	parse_dex_class_method		514964	0					
ANR	515988	ArgumentList	bf		514964	1					
ANR	515989	Argument	bf		514964	0					
ANR	515990	Identifier	bf		514964	0					
ANR	515991	Argument	c		514964	1					
ANR	515992	Identifier	c		514964	0					
ANR	515993	Argument	cls		514964	2					
ANR	515994	Identifier	cls		514964	0					
ANR	515995	Argument	p		514964	3					
ANR	515996	Identifier	p		514964	0					
ANR	515997	Argument	p_end		514964	4					
ANR	515998	Identifier	p_end		514964	0					
ANR	515999	Argument	sym_count		514964	5					
ANR	516000	Identifier	sym_count		514964	0					
ANR	516001	Argument	c -> class_data -> virtual_methods_size		514964	6					
ANR	516002	PtrMemberAccess	c -> class_data -> virtual_methods_size		514964	0					
ANR	516003	PtrMemberAccess	c -> class_data		514964	0					
ANR	516004	Identifier	c		514964	0					
ANR	516005	Identifier	class_data		514964	1					
ANR	516006	Identifier	virtual_methods_size		514964	1					
ANR	516007	Argument	methods		514964	7					
ANR	516008	Identifier	methods		514964	0					
ANR	516009	Argument	false		514964	8					
ANR	516010	Identifier	false		514964	0					
ANR	516011	Argument	bufbuf		514964	9					
ANR	516012	Identifier	bufbuf		514964	0					
ANR	516013	IfStatement	if ( dexdump )		514964	29					
ANR	516014	Condition	dexdump	1669:5:45195:45201	514964	0	True				
ANR	516015	Identifier	dexdump		514964	0					
ANR	516016	CompoundStatement		179:2:4607:4655	514964	1					
ANR	516017	IdentifierDeclStatement	"char * source_file = getstr ( dex , c -> source_file ) ;"	1670:2:45208:45256	514964	0	True				
ANR	516018	IdentifierDecl	"* source_file = getstr ( dex , c -> source_file )"		514964	0					
ANR	516019	IdentifierDeclType	char *		514964	0					
ANR	516020	Identifier	source_file		514964	1					
ANR	516021	AssignmentExpression	"* source_file = getstr ( dex , c -> source_file )"		514964	2		=			
ANR	516022	Identifier	source_file		514964	0					
ANR	516023	CallExpression	"getstr ( dex , c -> source_file )"		514964	1					
ANR	516024	Callee	getstr		514964	0					
ANR	516025	Identifier	getstr		514964	0					
ANR	516026	ArgumentList	dex		514964	1					
ANR	516027	Argument	dex		514964	0					
ANR	516028	Identifier	dex		514964	0					
ANR	516029	Argument	c -> source_file		514964	1					
ANR	516030	PtrMemberAccess	c -> source_file		514964	0					
ANR	516031	Identifier	c		514964	0					
ANR	516032	Identifier	source_file		514964	1					
ANR	516033	IfStatement	if ( ! source_file )		514964	1					
ANR	516034	Condition	! source_file	1671:6:45264:45275	514964	0	True				
ANR	516035	UnaryOperationExpression	! source_file		514964	0					
ANR	516036	UnaryOperator	!		514964	0					
ANR	516037	Identifier	source_file		514964	1					
ANR	516038	CompoundStatement		180:20:4677:4677	514964	1					
ANR	516039	ExpressionStatement	"rbin -> cb_printf ( ""  source_file_idx   : %d (unknown)\\n\\n"" , c -> source_file )"	1672:3:45283:45366	514964	0	True				
ANR	516040	CallExpression	"rbin -> cb_printf ( ""  source_file_idx   : %d (unknown)\\n\\n"" , c -> source_file )"		514964	0					
ANR	516041	Callee	rbin -> cb_printf		514964	0					
ANR	516042	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	516043	Identifier	rbin		514964	0					
ANR	516044	Identifier	cb_printf		514964	1					
ANR	516045	ArgumentList	"""  source_file_idx   : %d (unknown)\\n\\n"""		514964	1					
ANR	516046	Argument	"""  source_file_idx   : %d (unknown)\\n\\n"""		514964	0					
ANR	516047	PrimaryExpression	"""  source_file_idx   : %d (unknown)\\n\\n"""		514964	0					
ANR	516048	Argument	c -> source_file		514964	1					
ANR	516049	PtrMemberAccess	c -> source_file		514964	0					
ANR	516050	Identifier	c		514964	0					
ANR	516051	Identifier	source_file		514964	1					
ANR	516052	ElseStatement	else		514964	0					
ANR	516053	CompoundStatement		184:9:4776:4776	514964	0					
ANR	516054	ExpressionStatement	"rbin -> cb_printf ( ""  source_file_idx   : %d (%s)\\n\\n"" , c -> source_file , source_file )"	1676:3:45382:45470	514964	0	True				
ANR	516055	CallExpression	"rbin -> cb_printf ( ""  source_file_idx   : %d (%s)\\n\\n"" , c -> source_file , source_file )"		514964	0					
ANR	516056	Callee	rbin -> cb_printf		514964	0					
ANR	516057	PtrMemberAccess	rbin -> cb_printf		514964	0					
ANR	516058	Identifier	rbin		514964	0					
ANR	516059	Identifier	cb_printf		514964	1					
ANR	516060	ArgumentList	"""  source_file_idx   : %d (%s)\\n\\n"""		514964	1					
ANR	516061	Argument	"""  source_file_idx   : %d (%s)\\n\\n"""		514964	0					
ANR	516062	PrimaryExpression	"""  source_file_idx   : %d (%s)\\n\\n"""		514964	0					
ANR	516063	Argument	c -> source_file		514964	1					
ANR	516064	PtrMemberAccess	c -> source_file		514964	0					
ANR	516065	Identifier	c		514964	0					
ANR	516066	Identifier	source_file		514964	1					
ANR	516067	Argument	source_file		514964	2					
ANR	516068	Identifier	source_file		514964	0					
ANR	516069	ReturnType	static void		514964	1					
ANR	516070	Identifier	parse_class		514964	2					
ANR	516071	ParameterList	"RBinFile * bf , RBinDexClass * c , int class_index , int * methods , int * sym_count"		514964	3					
ANR	516072	Parameter	RBinFile * bf	1492:24:40522:40533	514964	0	True				
ANR	516073	ParameterType	RBinFile *		514964	0					
ANR	516074	Identifier	bf		514964	1					
ANR	516075	Parameter	RBinDexClass * c	1492:38:40536:40550	514964	1	True				
ANR	516076	ParameterType	RBinDexClass *		514964	0					
ANR	516077	Identifier	c		514964	1					
ANR	516078	Parameter	int class_index	1492:55:40553:40567	514964	2	True				
ANR	516079	ParameterType	int		514964	0					
ANR	516080	Identifier	class_index		514964	1					
ANR	516081	Parameter	int * methods	1492:72:40570:40581	514964	3	True				
ANR	516082	ParameterType	int *		514964	0					
ANR	516083	Identifier	methods		514964	1					
ANR	516084	Parameter	int * sym_count	1492:86:40584:40597	514964	4	True				
ANR	516085	ParameterType	int *		514964	0					
ANR	516086	Identifier	sym_count		514964	1					
ANR	516087	CFGEntryNode	ENTRY		514964		True				
ANR	516088	CFGExitNode	EXIT		514964		True				
ANR	516089	Symbol	c -> class_data		514964						
ANR	516090	Symbol	dex -> header . types_size		514964						
ANR	516091	Symbol	* dex -> types		514964						
ANR	516092	Symbol	c -> access_flags		514964						
ANR	516093	Symbol	c -> class_data -> instance_fields_size		514964						
ANR	516094	Symbol	dex -> types [ t ] . descriptor_id		514964						
ANR	516095	Symbol	c -> interfaces_offset		514964						
ANR	516096	Symbol	types_list_size		514964						
ANR	516097	Symbol	tid		514964						
ANR	516098	Symbol	cls -> addr		514964						
ANR	516099	Symbol	* c -> class_data		514964						
ANR	516100	Symbol	bufbufsz		514964						
ANR	516101	Symbol	getstr		514964						
ANR	516102	Symbol	dex -> types		514964						
ANR	516103	Symbol	bf -> o		514964						
ANR	516104	Symbol	cls -> visibility_str		514964						
ANR	516105	Symbol	dex -> classes_list		514964						
ANR	516106	Symbol	bf -> buf		514964						
ANR	516107	Symbol	dex		514964						
ANR	516108	Symbol	dexdump		514964						
ANR	516109	Symbol	createAccessFlagStr		514964						
ANR	516110	Symbol	dex -> header		514964						
ANR	516111	Symbol	& eof		514964						
ANR	516112	Symbol	* * c		514964						
ANR	516113	Symbol	cls		514964						
ANR	516114	Symbol	cls -> name		514964						
ANR	516115	Symbol	str		514964						
ANR	516116	Symbol	R_NEW0		514964						
ANR	516117	Symbol	* * bf		514964						
ANR	516118	Symbol	parse_dex_class_fields		514964						
ANR	516119	Symbol	superClass		514964						
ANR	516120	Symbol	cls -> super		514964						
ANR	516121	Symbol	dex -> header . data_size		514964						
ANR	516122	Symbol	dex -> header . class_size		514964						
ANR	516123	Symbol	true		514964						
ANR	516124	Symbol	r_uleb128		514964						
ANR	516125	Symbol	dex_class_name		514964						
ANR	516126	Symbol	c -> source_file		514964						
ANR	516127	Symbol	* class_name		514964						
ANR	516128	Symbol	bf		514964						
ANR	516129	Symbol	methods		514964						
ANR	516130	Symbol	& bufbufsz		514964						
ANR	516131	Symbol	bf -> rbin		514964						
ANR	516132	Symbol	class_index		514964						
ANR	516133	Symbol	c -> class_data -> direct_methods_size		514964						
ANR	516134	Symbol	source_file		514964						
ANR	516135	Symbol	* bf -> o		514964						
ANR	516136	Symbol	parse_dex_class_method		514964						
ANR	516137	Symbol	kAccessForClass		514964						
ANR	516138	Symbol	& le16		514964						
ANR	516139	Symbol	c -> class_data -> virtual_methods_size		514964						
ANR	516140	Symbol	DEX_CLASS_SIZE		514964						
ANR	516141	Symbol	c -> class_data_offset		514964						
ANR	516142	Symbol	p_end		514964						
ANR	516143	Symbol	RBinClass		514964						
ANR	516144	Symbol	class_name		514964						
ANR	516145	Symbol	dex -> header . class_offset		514964						
ANR	516146	Symbol	r_buf_data		514964						
ANR	516147	Symbol	sym_count		514964						
ANR	516148	Symbol	bf -> o -> bin_obj		514964						
ANR	516149	Symbol	rbin		514964						
ANR	516150	Symbol	malloc		514964						
ANR	516151	Symbol	c		514964						
ANR	516152	Symbol	dex_class_super_name		514964						
ANR	516153	Symbol	c -> class_data -> static_fields_size		514964						
ANR	516154	Symbol	false		514964						
ANR	516155	Symbol	* bf		514964						
ANR	516156	Symbol	* cls		514964						
ANR	516157	Symbol	* * dex		514964						
ANR	516158	Symbol	le16		514964						
ANR	516159	Symbol	* c		514964						
ANR	516160	Symbol	r_read_le16		514964						
ANR	516161	Symbol	off		514964						
ANR	516162	Symbol	p		514964						
ANR	516163	Symbol	t		514964						
ANR	516164	Symbol	cls -> fields		514964						
ANR	516165	Symbol	dex -> header . data_offset		514964						
ANR	516166	Symbol	r_buf_read_le32_at		514964						
ANR	516167	Symbol	z		514964						
ANR	516168	Symbol	strdup		514964						
ANR	516169	Symbol	bufbuf		514964						
ANR	516170	Symbol	cls -> methods		514964						
ANR	516171	Symbol	eof		514964						
ANR	516172	Symbol	cls -> index		514964						
ANR	516173	Symbol	* dex		514964						
ANR	516174	Symbol	* t		514964						
ANR	516175	Symbol	r_list_new		514964						
ANR	516176	Symbol	p_size		514964						
ANR	516177	Function	is_class_idx_in_code_classes	1684:0:45527:45743							
ANR	516178	FunctionDef	"is_class_idx_in_code_classes (RBinDexObj * bin , int class_idx)"		516177	0					
ANR	516179	CompoundStatement		1684:73:45600:45743	516177	0					
ANR	516180	IdentifierDeclStatement	int i ;	1685:1:45603:45608	516177	0	True				
ANR	516181	IdentifierDecl	i		516177	0					
ANR	516182	IdentifierDeclType	int		516177	0					
ANR	516183	Identifier	i		516177	1					
ANR	516184	ForStatement	for ( i = 0 ; i < bin -> header . class_size ; i ++ )		516177	1					
ANR	516185	ForInit	i = 0 ;	1686:6:45616:45621	516177	0	True				
ANR	516186	AssignmentExpression	i = 0		516177	0		=			
ANR	516187	Identifier	i		516177	0					
ANR	516188	PrimaryExpression	0		516177	1					
ANR	516189	Condition	i < bin -> header . class_size	1686:13:45623:45648	516177	1	True				
ANR	516190	RelationalExpression	i < bin -> header . class_size		516177	0		<			
ANR	516191	Identifier	i		516177	0					
ANR	516192	MemberAccess	bin -> header . class_size		516177	1					
ANR	516193	PtrMemberAccess	bin -> header		516177	0					
ANR	516194	Identifier	bin		516177	0					
ANR	516195	Identifier	header		516177	1					
ANR	516196	Identifier	class_size		516177	1					
ANR	516197	PostIncDecOperationExpression	i ++	1686:41:45651:45653	516177	2	True				
ANR	516198	Identifier	i		516177	0					
ANR	516199	IncDec	++		516177	1					
ANR	516200	CompoundStatement		3:46:55:55	516177	3					
ANR	516201	IfStatement	if ( class_idx == bin -> classes [ i ] . class_id )		516177	0					
ANR	516202	Condition	class_idx == bin -> classes [ i ] . class_id	1687:6:45664:45700	516177	0	True				
ANR	516203	EqualityExpression	class_idx == bin -> classes [ i ] . class_id		516177	0		==			
ANR	516204	Identifier	class_idx		516177	0					
ANR	516205	MemberAccess	bin -> classes [ i ] . class_id		516177	1					
ANR	516206	ArrayIndexing	bin -> classes [ i ]		516177	0					
ANR	516207	PtrMemberAccess	bin -> classes		516177	0					
ANR	516208	Identifier	bin		516177	0					
ANR	516209	Identifier	classes		516177	1					
ANR	516210	Identifier	i		516177	1					
ANR	516211	Identifier	class_id		516177	1					
ANR	516212	CompoundStatement		4:45:102:102	516177	1					
ANR	516213	ReturnStatement	return true ;	1688:3:45708:45719	516177	0	True				
ANR	516214	Identifier	true		516177	0					
ANR	516215	ReturnStatement	return false ;	1691:1:45729:45741	516177	2	True				
ANR	516216	Identifier	false		516177	0					
ANR	516217	ReturnType	static bool		516177	1					
ANR	516218	Identifier	is_class_idx_in_code_classes		516177	2					
ANR	516219	ParameterList	"RBinDexObj * bin , int class_idx"		516177	3					
ANR	516220	Parameter	RBinDexObj * bin	1684:41:45568:45582	516177	0	True				
ANR	516221	ParameterType	RBinDexObj *		516177	0					
ANR	516222	Identifier	bin		516177	1					
ANR	516223	Parameter	int class_idx	1684:58:45585:45597	516177	1	True				
ANR	516224	ParameterType	int		516177	0					
ANR	516225	Identifier	class_idx		516177	1					
ANR	516226	CFGEntryNode	ENTRY		516177		True				
ANR	516227	CFGExitNode	EXIT		516177		True				
ANR	516228	Symbol	bin -> classes		516177						
ANR	516229	Symbol	bin		516177						
ANR	516230	Symbol	class_idx		516177						
ANR	516231	Symbol	bin -> header		516177						
ANR	516232	Symbol	* bin -> classes		516177						
ANR	516233	Symbol	false		516177						
ANR	516234	Symbol	i		516177						
ANR	516235	Symbol	* bin		516177						
ANR	516236	Symbol	bin -> classes [ i ] . class_id		516177						
ANR	516237	Symbol	* i		516177						
ANR	516238	Symbol	bin -> header . class_size		516177						
ANR	516239	Symbol	true		516177						
ANR	516240	Symbol	* * bin		516177						
ANR	516241	Function	dex_loadcode	1695:0:45815:49824							
ANR	516242	FunctionDef	dex_loadcode (RBinFile * bf)		516241	0					
ANR	516243	CompoundStatement		1695:39:45854:49824	516241	0					
ANR	516244	IdentifierDeclStatement	RBin * rbin = bf -> rbin ;	1696:1:45857:45878	516241	0	True				
ANR	516245	IdentifierDecl	* rbin = bf -> rbin		516241	0					
ANR	516246	IdentifierDeclType	RBin *		516241	0					
ANR	516247	Identifier	rbin		516241	1					
ANR	516248	AssignmentExpression	* rbin = bf -> rbin		516241	2		=			
ANR	516249	Identifier	rbin		516241	0					
ANR	516250	PtrMemberAccess	bf -> rbin		516241	1					
ANR	516251	Identifier	bf		516241	0					
ANR	516252	Identifier	rbin		516241	1					
ANR	516253	IdentifierDeclStatement	RBinDexObj * bin = bf -> o -> bin_obj ;	1697:1:45881:45913	516241	1	True				
ANR	516254	IdentifierDecl	* bin = bf -> o -> bin_obj		516241	0					
ANR	516255	IdentifierDeclType	RBinDexObj *		516241	0					
ANR	516256	Identifier	bin		516241	1					
ANR	516257	AssignmentExpression	* bin = bf -> o -> bin_obj		516241	2		=			
ANR	516258	Identifier	bin		516241	0					
ANR	516259	PtrMemberAccess	bf -> o -> bin_obj		516241	1					
ANR	516260	PtrMemberAccess	bf -> o		516241	0					
ANR	516261	Identifier	bf		516241	0					
ANR	516262	Identifier	o		516241	1					
ANR	516263	Identifier	bin_obj		516241	1					
ANR	516264	IdentifierDeclStatement	int i ;	1698:1:45916:45921	516241	2	True				
ANR	516265	IdentifierDecl	i		516241	0					
ANR	516266	IdentifierDeclType	int		516241	0					
ANR	516267	Identifier	i		516241	1					
ANR	516268	IdentifierDeclStatement	int * methods = NULL ;	1699:1:45924:45943	516241	3	True				
ANR	516269	IdentifierDecl	* methods = NULL		516241	0					
ANR	516270	IdentifierDeclType	int *		516241	0					
ANR	516271	Identifier	methods		516241	1					
ANR	516272	AssignmentExpression	* methods = NULL		516241	2		=			
ANR	516273	Identifier	NULL		516241	0					
ANR	516274	Identifier	NULL		516241	1					
ANR	516275	IdentifierDeclStatement	int sym_count = 0 ;	1700:1:45946:45963	516241	4	True				
ANR	516276	IdentifierDecl	sym_count = 0		516241	0					
ANR	516277	IdentifierDeclType	int		516241	0					
ANR	516278	Identifier	sym_count		516241	1					
ANR	516279	AssignmentExpression	sym_count = 0		516241	2		=			
ANR	516280	Identifier	sym_count		516241	0					
ANR	516281	PrimaryExpression	0		516241	1					
ANR	516282	ExpressionStatement	"r_return_val_if_fail ( bf && bin , false )"	1702:1:45967:46006	516241	5	True				
ANR	516283	CallExpression	"r_return_val_if_fail ( bf && bin , false )"		516241	0					
ANR	516284	Callee	r_return_val_if_fail		516241	0					
ANR	516285	Identifier	r_return_val_if_fail		516241	0					
ANR	516286	ArgumentList	bf && bin		516241	1					
ANR	516287	Argument	bf && bin		516241	0					
ANR	516288	AndExpression	bf && bin		516241	0		&&			
ANR	516289	Identifier	bf		516241	0					
ANR	516290	Identifier	bin		516241	1					
ANR	516291	Argument	false		516241	1					
ANR	516292	Identifier	false		516241	0					
ANR	516293	IfStatement	if ( bin -> methods_list )		516241	6					
ANR	516294	Condition	bin -> methods_list	1705:5:46032:46048	516241	0	True				
ANR	516295	PtrMemberAccess	bin -> methods_list		516241	0					
ANR	516296	Identifier	bin		516241	0					
ANR	516297	Identifier	methods_list		516241	1					
ANR	516298	CompoundStatement		11:24:196:196	516241	1					
ANR	516299	ReturnStatement	return false ;	1706:2:46055:46067	516241	0	True				
ANR	516300	Identifier	false		516241	0					
ANR	516301	ExpressionStatement	bin -> version = r_bin_dex_get_version ( bin )	1708:1:46073:46115	516241	7	True				
ANR	516302	AssignmentExpression	bin -> version = r_bin_dex_get_version ( bin )		516241	0		=			
ANR	516303	PtrMemberAccess	bin -> version		516241	0					
ANR	516304	Identifier	bin		516241	0					
ANR	516305	Identifier	version		516241	1					
ANR	516306	CallExpression	r_bin_dex_get_version ( bin )		516241	1					
ANR	516307	Callee	r_bin_dex_get_version		516241	0					
ANR	516308	Identifier	r_bin_dex_get_version		516241	0					
ANR	516309	ArgumentList	bin		516241	1					
ANR	516310	Argument	bin		516241	0					
ANR	516311	Identifier	bin		516241	0					
ANR	516312	ExpressionStatement	bin -> code_from = UT64_MAX	1709:1:46118:46143	516241	8	True				
ANR	516313	AssignmentExpression	bin -> code_from = UT64_MAX		516241	0		=			
ANR	516314	PtrMemberAccess	bin -> code_from		516241	0					
ANR	516315	Identifier	bin		516241	0					
ANR	516316	Identifier	code_from		516241	1					
ANR	516317	Identifier	UT64_MAX		516241	1					
ANR	516318	ExpressionStatement	bin -> code_to = 0	1710:1:46146:46162	516241	9	True				
ANR	516319	AssignmentExpression	bin -> code_to = 0		516241	0		=			
ANR	516320	PtrMemberAccess	bin -> code_to		516241	0					
ANR	516321	Identifier	bin		516241	0					
ANR	516322	Identifier	code_to		516241	1					
ANR	516323	PrimaryExpression	0		516241	1					
ANR	516324	ExpressionStatement	bin -> methods_list = r_list_newf ( ( RListFree ) free )	1711:1:46165:46214	516241	10	True				
ANR	516325	AssignmentExpression	bin -> methods_list = r_list_newf ( ( RListFree ) free )		516241	0		=			
ANR	516326	PtrMemberAccess	bin -> methods_list		516241	0					
ANR	516327	Identifier	bin		516241	0					
ANR	516328	Identifier	methods_list		516241	1					
ANR	516329	CallExpression	r_list_newf ( ( RListFree ) free )		516241	1					
ANR	516330	Callee	r_list_newf		516241	0					
ANR	516331	Identifier	r_list_newf		516241	0					
ANR	516332	ArgumentList	( RListFree ) free		516241	1					
ANR	516333	Argument	( RListFree ) free		516241	0					
ANR	516334	CastExpression	( RListFree ) free		516241	0					
ANR	516335	CastTarget	RListFree		516241	0					
ANR	516336	Identifier	free		516241	1					
ANR	516337	IfStatement	if ( ! bin -> methods_list )		516241	11					
ANR	516338	Condition	! bin -> methods_list	1712:5:46221:46238	516241	0	True				
ANR	516339	UnaryOperationExpression	! bin -> methods_list		516241	0					
ANR	516340	UnaryOperator	!		516241	0					
ANR	516341	PtrMemberAccess	bin -> methods_list		516241	1					
ANR	516342	Identifier	bin		516241	0					
ANR	516343	Identifier	methods_list		516241	1					
ANR	516344	CompoundStatement		18:25:386:386	516241	1					
ANR	516345	ReturnStatement	return false ;	1713:2:46245:46257	516241	0	True				
ANR	516346	Identifier	false		516241	0					
ANR	516347	ExpressionStatement	bin -> imports_list = r_list_newf ( ( RListFree ) free )	1715:1:46263:46312	516241	12	True				
ANR	516348	AssignmentExpression	bin -> imports_list = r_list_newf ( ( RListFree ) free )		516241	0		=			
ANR	516349	PtrMemberAccess	bin -> imports_list		516241	0					
ANR	516350	Identifier	bin		516241	0					
ANR	516351	Identifier	imports_list		516241	1					
ANR	516352	CallExpression	r_list_newf ( ( RListFree ) free )		516241	1					
ANR	516353	Callee	r_list_newf		516241	0					
ANR	516354	Identifier	r_list_newf		516241	0					
ANR	516355	ArgumentList	( RListFree ) free		516241	1					
ANR	516356	Argument	( RListFree ) free		516241	0					
ANR	516357	CastExpression	( RListFree ) free		516241	0					
ANR	516358	CastTarget	RListFree		516241	0					
ANR	516359	Identifier	free		516241	1					
ANR	516360	IfStatement	if ( ! bin -> imports_list )		516241	13					
ANR	516361	Condition	! bin -> imports_list	1716:5:46319:46336	516241	0	True				
ANR	516362	UnaryOperationExpression	! bin -> imports_list		516241	0					
ANR	516363	UnaryOperator	!		516241	0					
ANR	516364	PtrMemberAccess	bin -> imports_list		516241	1					
ANR	516365	Identifier	bin		516241	0					
ANR	516366	Identifier	imports_list		516241	1					
ANR	516367	CompoundStatement		22:25:484:484	516241	1					
ANR	516368	ExpressionStatement	r_list_free ( bin -> methods_list )	1717:2:46343:46374	516241	0	True				
ANR	516369	CallExpression	r_list_free ( bin -> methods_list )		516241	0					
ANR	516370	Callee	r_list_free		516241	0					
ANR	516371	Identifier	r_list_free		516241	0					
ANR	516372	ArgumentList	bin -> methods_list		516241	1					
ANR	516373	Argument	bin -> methods_list		516241	0					
ANR	516374	PtrMemberAccess	bin -> methods_list		516241	0					
ANR	516375	Identifier	bin		516241	0					
ANR	516376	Identifier	methods_list		516241	1					
ANR	516377	ReturnStatement	return false ;	1718:2:46378:46390	516241	1	True				
ANR	516378	Identifier	false		516241	0					
ANR	516379	ExpressionStatement	bin -> lines_list = r_list_newf ( ( RListFree ) free )	1720:1:46396:46443	516241	14	True				
ANR	516380	AssignmentExpression	bin -> lines_list = r_list_newf ( ( RListFree ) free )		516241	0		=			
ANR	516381	PtrMemberAccess	bin -> lines_list		516241	0					
ANR	516382	Identifier	bin		516241	0					
ANR	516383	Identifier	lines_list		516241	1					
ANR	516384	CallExpression	r_list_newf ( ( RListFree ) free )		516241	1					
ANR	516385	Callee	r_list_newf		516241	0					
ANR	516386	Identifier	r_list_newf		516241	0					
ANR	516387	ArgumentList	( RListFree ) free		516241	1					
ANR	516388	Argument	( RListFree ) free		516241	0					
ANR	516389	CastExpression	( RListFree ) free		516241	0					
ANR	516390	CastTarget	RListFree		516241	0					
ANR	516391	Identifier	free		516241	1					
ANR	516392	IfStatement	if ( ! bin -> lines_list )		516241	15					
ANR	516393	Condition	! bin -> lines_list	1721:5:46450:46465	516241	0	True				
ANR	516394	UnaryOperationExpression	! bin -> lines_list		516241	0					
ANR	516395	UnaryOperator	!		516241	0					
ANR	516396	PtrMemberAccess	bin -> lines_list		516241	1					
ANR	516397	Identifier	bin		516241	0					
ANR	516398	Identifier	lines_list		516241	1					
ANR	516399	CompoundStatement		27:23:613:613	516241	1					
ANR	516400	ReturnStatement	return false ;	1722:2:46472:46484	516241	0	True				
ANR	516401	Identifier	false		516241	0					
ANR	516402	ExpressionStatement	bin -> classes_list = r_list_newf ( ( RListFree ) r_bin_class_free )	1724:1:46490:46551	516241	16	True				
ANR	516403	AssignmentExpression	bin -> classes_list = r_list_newf ( ( RListFree ) r_bin_class_free )		516241	0		=			
ANR	516404	PtrMemberAccess	bin -> classes_list		516241	0					
ANR	516405	Identifier	bin		516241	0					
ANR	516406	Identifier	classes_list		516241	1					
ANR	516407	CallExpression	r_list_newf ( ( RListFree ) r_bin_class_free )		516241	1					
ANR	516408	Callee	r_list_newf		516241	0					
ANR	516409	Identifier	r_list_newf		516241	0					
ANR	516410	ArgumentList	( RListFree ) r_bin_class_free		516241	1					
ANR	516411	Argument	( RListFree ) r_bin_class_free		516241	0					
ANR	516412	CastExpression	( RListFree ) r_bin_class_free		516241	0					
ANR	516413	CastTarget	RListFree		516241	0					
ANR	516414	Identifier	r_bin_class_free		516241	1					
ANR	516415	IfStatement	if ( ! bin -> classes_list )		516241	17					
ANR	516416	Condition	! bin -> classes_list	1725:5:46558:46575	516241	0	True				
ANR	516417	UnaryOperationExpression	! bin -> classes_list		516241	0					
ANR	516418	UnaryOperator	!		516241	0					
ANR	516419	PtrMemberAccess	bin -> classes_list		516241	1					
ANR	516420	Identifier	bin		516241	0					
ANR	516421	Identifier	classes_list		516241	1					
ANR	516422	CompoundStatement		31:25:723:723	516241	1					
ANR	516423	ExpressionStatement	r_list_free ( bin -> methods_list )	1726:2:46582:46613	516241	0	True				
ANR	516424	CallExpression	r_list_free ( bin -> methods_list )		516241	0					
ANR	516425	Callee	r_list_free		516241	0					
ANR	516426	Identifier	r_list_free		516241	0					
ANR	516427	ArgumentList	bin -> methods_list		516241	1					
ANR	516428	Argument	bin -> methods_list		516241	0					
ANR	516429	PtrMemberAccess	bin -> methods_list		516241	0					
ANR	516430	Identifier	bin		516241	0					
ANR	516431	Identifier	methods_list		516241	1					
ANR	516432	ExpressionStatement	r_list_free ( bin -> lines_list )	1727:2:46617:46646	516241	1	True				
ANR	516433	CallExpression	r_list_free ( bin -> lines_list )		516241	0					
ANR	516434	Callee	r_list_free		516241	0					
ANR	516435	Identifier	r_list_free		516241	0					
ANR	516436	ArgumentList	bin -> lines_list		516241	1					
ANR	516437	Argument	bin -> lines_list		516241	0					
ANR	516438	PtrMemberAccess	bin -> lines_list		516241	0					
ANR	516439	Identifier	bin		516241	0					
ANR	516440	Identifier	lines_list		516241	1					
ANR	516441	ExpressionStatement	r_list_free ( bin -> imports_list )	1728:2:46650:46681	516241	2	True				
ANR	516442	CallExpression	r_list_free ( bin -> imports_list )		516241	0					
ANR	516443	Callee	r_list_free		516241	0					
ANR	516444	Identifier	r_list_free		516241	0					
ANR	516445	ArgumentList	bin -> imports_list		516241	1					
ANR	516446	Argument	bin -> imports_list		516241	0					
ANR	516447	PtrMemberAccess	bin -> imports_list		516241	0					
ANR	516448	Identifier	bin		516241	0					
ANR	516449	Identifier	imports_list		516241	1					
ANR	516450	ReturnStatement	return false ;	1729:2:46685:46697	516241	3	True				
ANR	516451	Identifier	false		516241	0					
ANR	516452	IfStatement	if ( bin -> header . method_size > bin -> size )		516241	18					
ANR	516453	Condition	bin -> header . method_size > bin -> size	1732:5:46708:46740	516241	0	True				
ANR	516454	RelationalExpression	bin -> header . method_size > bin -> size		516241	0		>			
ANR	516455	MemberAccess	bin -> header . method_size		516241	0					
ANR	516456	PtrMemberAccess	bin -> header		516241	0					
ANR	516457	Identifier	bin		516241	0					
ANR	516458	Identifier	header		516241	1					
ANR	516459	Identifier	method_size		516241	1					
ANR	516460	PtrMemberAccess	bin -> size		516241	1					
ANR	516461	Identifier	bin		516241	0					
ANR	516462	Identifier	size		516241	1					
ANR	516463	CompoundStatement		38:40:888:888	516241	1					
ANR	516464	ExpressionStatement	bin -> header . method_size = 0	1733:2:46747:46774	516241	0	True				
ANR	516465	AssignmentExpression	bin -> header . method_size = 0		516241	0		=			
ANR	516466	MemberAccess	bin -> header . method_size		516241	0					
ANR	516467	PtrMemberAccess	bin -> header		516241	0					
ANR	516468	Identifier	bin		516241	0					
ANR	516469	Identifier	header		516241	1					
ANR	516470	Identifier	method_size		516241	1					
ANR	516471	PrimaryExpression	0		516241	1					
ANR	516472	ReturnStatement	return false ;	1734:2:46778:46790	516241	1	True				
ANR	516473	Identifier	false		516241	0					
ANR	516474	ExpressionStatement	"bin -> header . method_size = R_MIN ( bin -> header . method_size , bin -> size )"	1738:1:46856:46924	516241	19	True				
ANR	516475	AssignmentExpression	"bin -> header . method_size = R_MIN ( bin -> header . method_size , bin -> size )"		516241	0		=			
ANR	516476	MemberAccess	bin -> header . method_size		516241	0					
ANR	516477	PtrMemberAccess	bin -> header		516241	0					
ANR	516478	Identifier	bin		516241	0					
ANR	516479	Identifier	header		516241	1					
ANR	516480	Identifier	method_size		516241	1					
ANR	516481	CallExpression	"R_MIN ( bin -> header . method_size , bin -> size )"		516241	1					
ANR	516482	Callee	R_MIN		516241	0					
ANR	516483	Identifier	R_MIN		516241	0					
ANR	516484	ArgumentList	bin -> header . method_size		516241	1					
ANR	516485	Argument	bin -> header . method_size		516241	0					
ANR	516486	MemberAccess	bin -> header . method_size		516241	0					
ANR	516487	PtrMemberAccess	bin -> header		516241	0					
ANR	516488	Identifier	bin		516241	0					
ANR	516489	Identifier	header		516241	1					
ANR	516490	Identifier	method_size		516241	1					
ANR	516491	Argument	bin -> size		516241	1					
ANR	516492	PtrMemberAccess	bin -> size		516241	0					
ANR	516493	Identifier	bin		516241	0					
ANR	516494	Identifier	size		516241	1					
ANR	516495	ExpressionStatement	"bin -> header . class_size = R_MIN ( bin -> header . class_size , bin -> size )"	1739:1:46927:46993	516241	20	True				
ANR	516496	AssignmentExpression	"bin -> header . class_size = R_MIN ( bin -> header . class_size , bin -> size )"		516241	0		=			
ANR	516497	MemberAccess	bin -> header . class_size		516241	0					
ANR	516498	PtrMemberAccess	bin -> header		516241	0					
ANR	516499	Identifier	bin		516241	0					
ANR	516500	Identifier	header		516241	1					
ANR	516501	Identifier	class_size		516241	1					
ANR	516502	CallExpression	"R_MIN ( bin -> header . class_size , bin -> size )"		516241	1					
ANR	516503	Callee	R_MIN		516241	0					
ANR	516504	Identifier	R_MIN		516241	0					
ANR	516505	ArgumentList	bin -> header . class_size		516241	1					
ANR	516506	Argument	bin -> header . class_size		516241	0					
ANR	516507	MemberAccess	bin -> header . class_size		516241	0					
ANR	516508	PtrMemberAccess	bin -> header		516241	0					
ANR	516509	Identifier	bin		516241	0					
ANR	516510	Identifier	header		516241	1					
ANR	516511	Identifier	class_size		516241	1					
ANR	516512	Argument	bin -> size		516241	1					
ANR	516513	PtrMemberAccess	bin -> size		516241	0					
ANR	516514	Identifier	bin		516241	0					
ANR	516515	Identifier	size		516241	1					
ANR	516516	ExpressionStatement	"bin -> header . strings_size = R_MIN ( bin -> header . strings_size , bin -> size )"	1740:1:46996:47066	516241	21	True				
ANR	516517	AssignmentExpression	"bin -> header . strings_size = R_MIN ( bin -> header . strings_size , bin -> size )"		516241	0		=			
ANR	516518	MemberAccess	bin -> header . strings_size		516241	0					
ANR	516519	PtrMemberAccess	bin -> header		516241	0					
ANR	516520	Identifier	bin		516241	0					
ANR	516521	Identifier	header		516241	1					
ANR	516522	Identifier	strings_size		516241	1					
ANR	516523	CallExpression	"R_MIN ( bin -> header . strings_size , bin -> size )"		516241	1					
ANR	516524	Callee	R_MIN		516241	0					
ANR	516525	Identifier	R_MIN		516241	0					
ANR	516526	ArgumentList	bin -> header . strings_size		516241	1					
ANR	516527	Argument	bin -> header . strings_size		516241	0					
ANR	516528	MemberAccess	bin -> header . strings_size		516241	0					
ANR	516529	PtrMemberAccess	bin -> header		516241	0					
ANR	516530	Identifier	bin		516241	0					
ANR	516531	Identifier	header		516241	1					
ANR	516532	Identifier	strings_size		516241	1					
ANR	516533	Argument	bin -> size		516241	1					
ANR	516534	PtrMemberAccess	bin -> size		516241	0					
ANR	516535	Identifier	bin		516241	0					
ANR	516536	Identifier	size		516241	1					
ANR	516537	IfStatement	if ( bin -> header . strings_size > bin -> size )		516241	22					
ANR	516538	Condition	bin -> header . strings_size > bin -> size	1743:5:47115:47150	516241	0	True				
ANR	516539	RelationalExpression	bin -> header . strings_size > bin -> size		516241	0		>			
ANR	516540	MemberAccess	bin -> header . strings_size		516241	0					
ANR	516541	PtrMemberAccess	bin -> header		516241	0					
ANR	516542	Identifier	bin		516241	0					
ANR	516543	Identifier	header		516241	1					
ANR	516544	Identifier	strings_size		516241	1					
ANR	516545	PtrMemberAccess	bin -> size		516241	1					
ANR	516546	Identifier	bin		516241	0					
ANR	516547	Identifier	size		516241	1					
ANR	516548	CompoundStatement		49:43:1298:1298	516241	1					
ANR	516549	ExpressionStatement	"eprintf ( ""Invalid strings size\\n"" )"	1744:2:47157:47191	516241	0	True				
ANR	516550	CallExpression	"eprintf ( ""Invalid strings size\\n"" )"		516241	0					
ANR	516551	Callee	eprintf		516241	0					
ANR	516552	Identifier	eprintf		516241	0					
ANR	516553	ArgumentList	"""Invalid strings size\\n"""		516241	1					
ANR	516554	Argument	"""Invalid strings size\\n"""		516241	0					
ANR	516555	PrimaryExpression	"""Invalid strings size\\n"""		516241	0					
ANR	516556	ReturnStatement	return false ;	1745:2:47195:47207	516241	1	True				
ANR	516557	Identifier	false		516241	0					
ANR	516558	ExpressionStatement	dexSubsystem = NULL	1747:1:47213:47232	516241	23	True				
ANR	516559	AssignmentExpression	dexSubsystem = NULL		516241	0		=			
ANR	516560	Identifier	dexSubsystem		516241	0					
ANR	516561	Identifier	NULL		516241	1					
ANR	516562	IfStatement	if ( bin -> classes )		516241	24					
ANR	516563	Condition	bin -> classes	1749:5:47240:47251	516241	0	True				
ANR	516564	PtrMemberAccess	bin -> classes		516241	0					
ANR	516565	Identifier	bin		516241	0					
ANR	516566	Identifier	classes		516241	1					
ANR	516567	CompoundStatement		56:2:1403:1455	516241	1					
ANR	516568	IdentifierDeclStatement	ut64 amount = sizeof ( int ) * bin -> header . method_size ;	1750:2:47258:47310	516241	0	True				
ANR	516569	IdentifierDecl	amount = sizeof ( int ) * bin -> header . method_size		516241	0					
ANR	516570	IdentifierDeclType	ut64		516241	0					
ANR	516571	Identifier	amount		516241	1					
ANR	516572	AssignmentExpression	amount = sizeof ( int ) * bin -> header . method_size		516241	2		=			
ANR	516573	Identifier	amount		516241	0					
ANR	516574	MultiplicativeExpression	sizeof ( int ) * bin -> header . method_size		516241	1		*			
ANR	516575	SizeofExpression	sizeof ( int )		516241	0					
ANR	516576	Sizeof	sizeof		516241	0					
ANR	516577	SizeofOperand	int		516241	1					
ANR	516578	MemberAccess	bin -> header . method_size		516241	1					
ANR	516579	PtrMemberAccess	bin -> header		516241	0					
ANR	516580	Identifier	bin		516241	0					
ANR	516581	Identifier	header		516241	1					
ANR	516582	Identifier	method_size		516241	1					
ANR	516583	IfStatement	if ( amount > UT32_MAX || amount < bin -> header . method_size )		516241	1					
ANR	516584	Condition	amount > UT32_MAX || amount < bin -> header . method_size	1751:6:47318:47370	516241	0	True				
ANR	516585	OrExpression	amount > UT32_MAX || amount < bin -> header . method_size		516241	0		||			
ANR	516586	RelationalExpression	amount > UT32_MAX		516241	0		>			
ANR	516587	Identifier	amount		516241	0					
ANR	516588	Identifier	UT32_MAX		516241	1					
ANR	516589	RelationalExpression	amount < bin -> header . method_size		516241	1		<			
ANR	516590	Identifier	amount		516241	0					
ANR	516591	MemberAccess	bin -> header . method_size		516241	1					
ANR	516592	PtrMemberAccess	bin -> header		516241	0					
ANR	516593	Identifier	bin		516241	0					
ANR	516594	Identifier	header		516241	1					
ANR	516595	Identifier	method_size		516241	1					
ANR	516596	CompoundStatement		57:61:1518:1518	516241	1					
ANR	516597	ReturnStatement	return false ;	1752:3:47378:47390	516241	0	True				
ANR	516598	Identifier	false		516241	0					
ANR	516599	ExpressionStatement	"methods = calloc ( 1 , amount + 1 )"	1754:2:47398:47430	516241	2	True				
ANR	516600	AssignmentExpression	"methods = calloc ( 1 , amount + 1 )"		516241	0		=			
ANR	516601	Identifier	methods		516241	0					
ANR	516602	CallExpression	"calloc ( 1 , amount + 1 )"		516241	1					
ANR	516603	Callee	calloc		516241	0					
ANR	516604	Identifier	calloc		516241	0					
ANR	516605	ArgumentList	1		516241	1					
ANR	516606	Argument	1		516241	0					
ANR	516607	PrimaryExpression	1		516241	0					
ANR	516608	Argument	amount + 1		516241	1					
ANR	516609	AdditiveExpression	amount + 1		516241	0		+			
ANR	516610	Identifier	amount		516241	0					
ANR	516611	PrimaryExpression	1		516241	1					
ANR	516612	ForStatement	for ( i = 0 ; i < bin -> header . class_size ; i ++ )		516241	3					
ANR	516613	ForInit	i = 0 ;	1755:7:47439:47444	516241	0	True				
ANR	516614	AssignmentExpression	i = 0		516241	0		=			
ANR	516615	Identifier	i		516241	0					
ANR	516616	PrimaryExpression	0		516241	1					
ANR	516617	Condition	i < bin -> header . class_size	1755:14:47446:47471	516241	1	True				
ANR	516618	RelationalExpression	i < bin -> header . class_size		516241	0		<			
ANR	516619	Identifier	i		516241	0					
ANR	516620	MemberAccess	bin -> header . class_size		516241	1					
ANR	516621	PtrMemberAccess	bin -> header		516241	0					
ANR	516622	Identifier	bin		516241	0					
ANR	516623	Identifier	header		516241	1					
ANR	516624	Identifier	class_size		516241	1					
ANR	516625	PostIncDecOperationExpression	i ++	1755:42:47474:47476	516241	2	True				
ANR	516626	Identifier	i		516241	0					
ANR	516627	IncDec	++		516241	1					
ANR	516628	CompoundStatement		62:3:1629:1669	516241	3					
ANR	516629	IdentifierDeclStatement	struct dex_class_t * c = & bin -> classes [ i ] ;	1756:3:47484:47524	516241	0	True				
ANR	516630	IdentifierDecl	* c = & bin -> classes [ i ]		516241	0					
ANR	516631	IdentifierDeclType	struct dex_class_t *		516241	0					
ANR	516632	Identifier	c		516241	1					
ANR	516633	AssignmentExpression	* c = & bin -> classes [ i ]		516241	2		=			
ANR	516634	Identifier	c		516241	0					
ANR	516635	UnaryOperationExpression	& bin -> classes [ i ]		516241	1					
ANR	516636	UnaryOperator	&		516241	0					
ANR	516637	ArrayIndexing	bin -> classes [ i ]		516241	1					
ANR	516638	PtrMemberAccess	bin -> classes		516241	0					
ANR	516639	Identifier	bin		516241	0					
ANR	516640	Identifier	classes		516241	1					
ANR	516641	Identifier	i		516241	1					
ANR	516642	IfStatement	if ( dexdump )		516241	1					
ANR	516643	Condition	dexdump	1757:7:47533:47539	516241	0	True				
ANR	516644	Identifier	dexdump		516241	0					
ANR	516645	CompoundStatement		63:16:1687:1687	516241	1					
ANR	516646	ExpressionStatement	"rbin -> cb_printf ( ""Class #%d            -\\n"" , i )"	1758:4:47548:47595	516241	0	True				
ANR	516647	CallExpression	"rbin -> cb_printf ( ""Class #%d            -\\n"" , i )"		516241	0					
ANR	516648	Callee	rbin -> cb_printf		516241	0					
ANR	516649	PtrMemberAccess	rbin -> cb_printf		516241	0					
ANR	516650	Identifier	rbin		516241	0					
ANR	516651	Identifier	cb_printf		516241	1					
ANR	516652	ArgumentList	"""Class #%d            -\\n"""		516241	1					
ANR	516653	Argument	"""Class #%d            -\\n"""		516241	0					
ANR	516654	PrimaryExpression	"""Class #%d            -\\n"""		516241	0					
ANR	516655	Argument	i		516241	1					
ANR	516656	Identifier	i		516241	0					
ANR	516657	ExpressionStatement	"parse_class ( bf , c , i , methods , & sym_count )"	1760:3:47605:47648	516241	2	True				
ANR	516658	CallExpression	"parse_class ( bf , c , i , methods , & sym_count )"		516241	0					
ANR	516659	Callee	parse_class		516241	0					
ANR	516660	Identifier	parse_class		516241	0					
ANR	516661	ArgumentList	bf		516241	1					
ANR	516662	Argument	bf		516241	0					
ANR	516663	Identifier	bf		516241	0					
ANR	516664	Argument	c		516241	1					
ANR	516665	Identifier	c		516241	0					
ANR	516666	Argument	i		516241	2					
ANR	516667	Identifier	i		516241	0					
ANR	516668	Argument	methods		516241	3					
ANR	516669	Identifier	methods		516241	0					
ANR	516670	Argument	& sym_count		516241	4					
ANR	516671	UnaryOperationExpression	& sym_count		516241	0					
ANR	516672	UnaryOperator	&		516241	0					
ANR	516673	Identifier	sym_count		516241	1					
ANR	516674	IfStatement	if ( methods )		516241	25					
ANR	516675	Condition	methods	1763:5:47662:47668	516241	0	True				
ANR	516676	Identifier	methods		516241	0					
ANR	516677	CompoundStatement		71:2:1844:1885	516241	1					
ANR	516678	IdentifierDeclStatement	int import_count = 0 ;	1764:2:47675:47695	516241	0	True				
ANR	516679	IdentifierDecl	import_count = 0		516241	0					
ANR	516680	IdentifierDeclType	int		516241	0					
ANR	516681	Identifier	import_count		516241	1					
ANR	516682	AssignmentExpression	import_count = 0		516241	2		=			
ANR	516683	Identifier	import_count		516241	0					
ANR	516684	PrimaryExpression	0		516241	1					
ANR	516685	IdentifierDeclStatement	int sym_count = bin -> methods_list -> length ;	1765:2:47699:47740	516241	1	True				
ANR	516686	IdentifierDecl	sym_count = bin -> methods_list -> length		516241	0					
ANR	516687	IdentifierDeclType	int		516241	0					
ANR	516688	Identifier	sym_count		516241	1					
ANR	516689	AssignmentExpression	sym_count = bin -> methods_list -> length		516241	2		=			
ANR	516690	Identifier	sym_count		516241	0					
ANR	516691	PtrMemberAccess	bin -> methods_list -> length		516241	1					
ANR	516692	PtrMemberAccess	bin -> methods_list		516241	0					
ANR	516693	Identifier	bin		516241	0					
ANR	516694	Identifier	methods_list		516241	1					
ANR	516695	Identifier	length		516241	1					
ANR	516696	ForStatement	for ( i = 0 ; i < bin -> header . method_size ; i ++ )		516241	2					
ANR	516697	ForInit	i = 0 ;	1767:7:47750:47755	516241	0	True				
ANR	516698	AssignmentExpression	i = 0		516241	0		=			
ANR	516699	Identifier	i		516241	0					
ANR	516700	PrimaryExpression	0		516241	1					
ANR	516701	Condition	i < bin -> header . method_size	1767:14:47757:47783	516241	1	True				
ANR	516702	RelationalExpression	i < bin -> header . method_size		516241	0		<			
ANR	516703	Identifier	i		516241	0					
ANR	516704	MemberAccess	bin -> header . method_size		516241	1					
ANR	516705	PtrMemberAccess	bin -> header		516241	0					
ANR	516706	Identifier	bin		516241	0					
ANR	516707	Identifier	header		516241	1					
ANR	516708	Identifier	method_size		516241	1					
ANR	516709	PostIncDecOperationExpression	i ++	1767:43:47786:47788	516241	2	True				
ANR	516710	Identifier	i		516241	0					
ANR	516711	IncDec	++		516241	1					
ANR	516712	CompoundStatement		107:3:2798:2845	516241	3					
ANR	516713	IdentifierDeclStatement	int len = 0 ;	1768:3:47796:47807	516241	0	True				
ANR	516714	IdentifierDecl	len = 0		516241	0					
ANR	516715	IdentifierDeclType	int		516241	0					
ANR	516716	Identifier	len		516241	1					
ANR	516717	AssignmentExpression	len = 0		516241	2		=			
ANR	516718	Identifier	len		516241	0					
ANR	516719	PrimaryExpression	0		516241	1					
ANR	516720	IfStatement	if ( methods [ i ] )		516241	1					
ANR	516721	Condition	methods [ i ]	1769:7:47816:47825	516241	0	True				
ANR	516722	ArrayIndexing	methods [ i ]		516241	0					
ANR	516723	Identifier	methods		516241	0					
ANR	516724	Identifier	i		516241	1					
ANR	516725	CompoundStatement		75:19:1973:1973	516241	1					
ANR	516726	ContinueStatement	continue ;	1770:4:47834:47842	516241	0	True				
ANR	516727	IfStatement	if ( bin -> methods [ i ] . class_id >= bin -> header . types_size )		516241	2					
ANR	516728	Condition	bin -> methods [ i ] . class_id >= bin -> header . types_size	1772:7:47856:47905	516241	0	True				
ANR	516729	RelationalExpression	bin -> methods [ i ] . class_id >= bin -> header . types_size		516241	0		>=			
ANR	516730	MemberAccess	bin -> methods [ i ] . class_id		516241	0					
ANR	516731	ArrayIndexing	bin -> methods [ i ]		516241	0					
ANR	516732	PtrMemberAccess	bin -> methods		516241	0					
ANR	516733	Identifier	bin		516241	0					
ANR	516734	Identifier	methods		516241	1					
ANR	516735	Identifier	i		516241	1					
ANR	516736	Identifier	class_id		516241	1					
ANR	516737	MemberAccess	bin -> header . types_size		516241	1					
ANR	516738	PtrMemberAccess	bin -> header		516241	0					
ANR	516739	Identifier	bin		516241	0					
ANR	516740	Identifier	header		516241	1					
ANR	516741	Identifier	types_size		516241	1					
ANR	516742	CompoundStatement		78:59:2053:2053	516241	1					
ANR	516743	ContinueStatement	continue ;	1773:4:47914:47922	516241	0	True				
ANR	516744	IfStatement	"if ( is_class_idx_in_code_classes ( bin , bin -> methods [ i ] . class_id ) )"		516241	3					
ANR	516745	Condition	"is_class_idx_in_code_classes ( bin , bin -> methods [ i ] . class_id )"	1775:7:47936:47995	516241	0	True				
ANR	516746	CallExpression	"is_class_idx_in_code_classes ( bin , bin -> methods [ i ] . class_id )"		516241	0					
ANR	516747	Callee	is_class_idx_in_code_classes		516241	0					
ANR	516748	Identifier	is_class_idx_in_code_classes		516241	0					
ANR	516749	ArgumentList	bin		516241	1					
ANR	516750	Argument	bin		516241	0					
ANR	516751	Identifier	bin		516241	0					
ANR	516752	Argument	bin -> methods [ i ] . class_id		516241	1					
ANR	516753	MemberAccess	bin -> methods [ i ] . class_id		516241	0					
ANR	516754	ArrayIndexing	bin -> methods [ i ]		516241	0					
ANR	516755	PtrMemberAccess	bin -> methods		516241	0					
ANR	516756	Identifier	bin		516241	0					
ANR	516757	Identifier	methods		516241	1					
ANR	516758	Identifier	i		516241	1					
ANR	516759	Identifier	class_id		516241	1					
ANR	516760	CompoundStatement		81:69:2143:2143	516241	1					
ANR	516761	ContinueStatement	continue ;	1776:4:48004:48012	516241	0	True				
ANR	516762	IdentifierDeclStatement	"const char * className = getstr ( bin , bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id ) ;"	1778:3:48022:48110	516241	4	True				
ANR	516763	IdentifierDecl	"* className = getstr ( bin , bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id )"		516241	0					
ANR	516764	IdentifierDeclType	const char *		516241	0					
ANR	516765	Identifier	className		516241	1					
ANR	516766	AssignmentExpression	"* className = getstr ( bin , bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id )"		516241	2		=			
ANR	516767	Identifier	className		516241	0					
ANR	516768	CallExpression	"getstr ( bin , bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id )"		516241	1					
ANR	516769	Callee	getstr		516241	0					
ANR	516770	Identifier	getstr		516241	0					
ANR	516771	ArgumentList	bin		516241	1					
ANR	516772	Argument	bin		516241	0					
ANR	516773	Identifier	bin		516241	0					
ANR	516774	Argument	bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id		516241	1					
ANR	516775	MemberAccess	bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id		516241	0					
ANR	516776	ArrayIndexing	bin -> types [ bin -> methods [ i ] . class_id ]		516241	0					
ANR	516777	PtrMemberAccess	bin -> types		516241	0					
ANR	516778	Identifier	bin		516241	0					
ANR	516779	Identifier	types		516241	1					
ANR	516780	MemberAccess	bin -> methods [ i ] . class_id		516241	1					
ANR	516781	ArrayIndexing	bin -> methods [ i ]		516241	0					
ANR	516782	PtrMemberAccess	bin -> methods		516241	0					
ANR	516783	Identifier	bin		516241	0					
ANR	516784	Identifier	methods		516241	1					
ANR	516785	Identifier	i		516241	1					
ANR	516786	Identifier	class_id		516241	1					
ANR	516787	Identifier	descriptor_id		516241	1					
ANR	516788	IfStatement	if ( ! className )		516241	5					
ANR	516789	Condition	! className	1779:7:48119:48128	516241	0	True				
ANR	516790	UnaryOperationExpression	! className		516241	0					
ANR	516791	UnaryOperator	!		516241	0					
ANR	516792	Identifier	className		516241	1					
ANR	516793	CompoundStatement		85:19:2276:2276	516241	1					
ANR	516794	ContinueStatement	continue ;	1780:4:48137:48145	516241	0	True				
ANR	516795	IdentifierDeclStatement	char * class_name = strdup ( className ) ;	1782:3:48155:48192	516241	6	True				
ANR	516796	IdentifierDecl	* class_name = strdup ( className )		516241	0					
ANR	516797	IdentifierDeclType	char *		516241	0					
ANR	516798	Identifier	class_name		516241	1					
ANR	516799	AssignmentExpression	* class_name = strdup ( className )		516241	2		=			
ANR	516800	Identifier	class_name		516241	0					
ANR	516801	CallExpression	strdup ( className )		516241	1					
ANR	516802	Callee	strdup		516241	0					
ANR	516803	Identifier	strdup		516241	0					
ANR	516804	ArgumentList	className		516241	1					
ANR	516805	Argument	className		516241	0					
ANR	516806	Identifier	className		516241	0					
ANR	516807	IfStatement	if ( ! class_name )		516241	7					
ANR	516808	Condition	! class_name	1783:7:48201:48211	516241	0	True				
ANR	516809	UnaryOperationExpression	! class_name		516241	0					
ANR	516810	UnaryOperator	!		516241	0					
ANR	516811	Identifier	class_name		516241	1					
ANR	516812	CompoundStatement		89:20:2359:2359	516241	1					
ANR	516813	ExpressionStatement	free ( class_name )	1784:4:48220:48237	516241	0	True				
ANR	516814	CallExpression	free ( class_name )		516241	0					
ANR	516815	Callee	free		516241	0					
ANR	516816	Identifier	free		516241	0					
ANR	516817	ArgumentList	class_name		516241	1					
ANR	516818	Argument	class_name		516241	0					
ANR	516819	Identifier	class_name		516241	0					
ANR	516820	ContinueStatement	continue ;	1785:4:48243:48251	516241	1	True				
ANR	516821	IfStatement	if ( ! dexSubsystem )		516241	8					
ANR	516822	Condition	! dexSubsystem	1787:7:48265:48277	516241	0	True				
ANR	516823	UnaryOperationExpression	! dexSubsystem		516241	0					
ANR	516824	UnaryOperator	!		516241	0					
ANR	516825	Identifier	dexSubsystem		516241	1					
ANR	516826	CompoundStatement		93:22:2425:2425	516241	1					
ANR	516827	IfStatement	"if ( strstr ( class_name , ""wearable/view"" ) )"		516241	0					
ANR	516828	Condition	"strstr ( class_name , ""wearable/view"" )"	1788:8:48290:48325	516241	0	True				
ANR	516829	CallExpression	"strstr ( class_name , ""wearable/view"" )"		516241	0					
ANR	516830	Callee	strstr		516241	0					
ANR	516831	Identifier	strstr		516241	0					
ANR	516832	ArgumentList	class_name		516241	1					
ANR	516833	Argument	class_name		516241	0					
ANR	516834	Identifier	class_name		516241	0					
ANR	516835	Argument	"""wearable/view"""		516241	1					
ANR	516836	PrimaryExpression	"""wearable/view"""		516241	0					
ANR	516837	CompoundStatement		94:46:2473:2473	516241	1					
ANR	516838	ExpressionStatement	"dexSubsystem = ""android-wear"""	1789:5:48335:48364	516241	0	True				
ANR	516839	AssignmentExpression	"dexSubsystem = ""android-wear"""		516241	0		=			
ANR	516840	Identifier	dexSubsystem		516241	0					
ANR	516841	PrimaryExpression	"""android-wear"""		516241	1					
ANR	516842	ElseStatement	else		516241	0					
ANR	516843	IfStatement	"if ( strstr ( class_name , ""android/view/View"" ) )"		516241	0					
ANR	516844	Condition	"strstr ( class_name , ""android/view/View"" )"	1790:15:48381:48420	516241	0	True				
ANR	516845	CallExpression	"strstr ( class_name , ""android/view/View"" )"		516241	0					
ANR	516846	Callee	strstr		516241	0					
ANR	516847	Identifier	strstr		516241	0					
ANR	516848	ArgumentList	class_name		516241	1					
ANR	516849	Argument	class_name		516241	0					
ANR	516850	Identifier	class_name		516241	0					
ANR	516851	Argument	"""android/view/View"""		516241	1					
ANR	516852	PrimaryExpression	"""android/view/View"""		516241	0					
ANR	516853	CompoundStatement		96:57:2568:2568	516241	1					
ANR	516854	ExpressionStatement	"dexSubsystem = ""android"""	1791:5:48430:48454	516241	0	True				
ANR	516855	AssignmentExpression	"dexSubsystem = ""android"""		516241	0		=			
ANR	516856	Identifier	dexSubsystem		516241	0					
ANR	516857	PrimaryExpression	"""android"""		516241	1					
ANR	516858	ExpressionStatement	len = strlen ( class_name )	1794:3:48470:48495	516241	9	True				
ANR	516859	AssignmentExpression	len = strlen ( class_name )		516241	0		=			
ANR	516860	Identifier	len		516241	0					
ANR	516861	CallExpression	strlen ( class_name )		516241	1					
ANR	516862	Callee	strlen		516241	0					
ANR	516863	Identifier	strlen		516241	0					
ANR	516864	ArgumentList	class_name		516241	1					
ANR	516865	Argument	class_name		516241	0					
ANR	516866	Identifier	class_name		516241	0					
ANR	516867	IfStatement	if ( len < 1 )		516241	10					
ANR	516868	Condition	len < 1	1795:7:48504:48510	516241	0	True				
ANR	516869	RelationalExpression	len < 1		516241	0		<			
ANR	516870	Identifier	len		516241	0					
ANR	516871	PrimaryExpression	1		516241	1					
ANR	516872	CompoundStatement		101:16:2658:2658	516241	1					
ANR	516873	ExpressionStatement	free ( class_name )	1796:4:48519:48536	516241	0	True				
ANR	516874	CallExpression	free ( class_name )		516241	0					
ANR	516875	Callee	free		516241	0					
ANR	516876	Identifier	free		516241	0					
ANR	516877	ArgumentList	class_name		516241	1					
ANR	516878	Argument	class_name		516241	0					
ANR	516879	Identifier	class_name		516241	0					
ANR	516880	ContinueStatement	continue ;	1797:4:48542:48550	516241	1	True				
ANR	516881	ExpressionStatement	"r_str_replace_char ( class_name , ';' , 0 )"	1799:3:48560:48599	516241	11	True				
ANR	516882	CallExpression	"r_str_replace_char ( class_name , ';' , 0 )"		516241	0					
ANR	516883	Callee	r_str_replace_char		516241	0					
ANR	516884	Identifier	r_str_replace_char		516241	0					
ANR	516885	ArgumentList	class_name		516241	1					
ANR	516886	Argument	class_name		516241	0					
ANR	516887	Identifier	class_name		516241	0					
ANR	516888	Argument	';'		516241	1					
ANR	516889	PrimaryExpression	';'		516241	0					
ANR	516890	Argument	0		516241	2					
ANR	516891	PrimaryExpression	0		516241	0					
ANR	516892	IdentifierDeclStatement	"char * method_name = dex_method_name ( bin , i ) ;"	1800:3:48604:48648	516241	12	True				
ANR	516893	IdentifierDecl	"* method_name = dex_method_name ( bin , i )"		516241	0					
ANR	516894	IdentifierDeclType	char *		516241	0					
ANR	516895	Identifier	method_name		516241	1					
ANR	516896	AssignmentExpression	"* method_name = dex_method_name ( bin , i )"		516241	2		=			
ANR	516897	Identifier	method_name		516241	0					
ANR	516898	CallExpression	"dex_method_name ( bin , i )"		516241	1					
ANR	516899	Callee	dex_method_name		516241	0					
ANR	516900	Identifier	dex_method_name		516241	0					
ANR	516901	ArgumentList	bin		516241	1					
ANR	516902	Argument	bin		516241	0					
ANR	516903	Identifier	bin		516241	0					
ANR	516904	Argument	i		516241	1					
ANR	516905	Identifier	i		516241	0					
ANR	516906	IdentifierDeclStatement	"char * signature = dex_method_signature ( bin , i ) ;"	1801:3:48653:48700	516241	13	True				
ANR	516907	IdentifierDecl	"* signature = dex_method_signature ( bin , i )"		516241	0					
ANR	516908	IdentifierDeclType	char *		516241	0					
ANR	516909	Identifier	signature		516241	1					
ANR	516910	AssignmentExpression	"* signature = dex_method_signature ( bin , i )"		516241	2		=			
ANR	516911	Identifier	signature		516241	0					
ANR	516912	CallExpression	"dex_method_signature ( bin , i )"		516241	1					
ANR	516913	Callee	dex_method_signature		516241	0					
ANR	516914	Identifier	dex_method_signature		516241	0					
ANR	516915	ArgumentList	bin		516241	1					
ANR	516916	Argument	bin		516241	0					
ANR	516917	Identifier	bin		516241	0					
ANR	516918	Argument	i		516241	1					
ANR	516919	Identifier	i		516241	0					
ANR	516920	IfStatement	if ( method_name && * method_name )		516241	14					
ANR	516921	Condition	method_name && * method_name	1802:7:48709:48735	516241	0	True				
ANR	516922	AndExpression	method_name && * method_name		516241	0		&&			
ANR	516923	Identifier	method_name		516241	0					
ANR	516924	UnaryOperationExpression	* method_name		516241	1					
ANR	516925	UnaryOperator	*		516241	0					
ANR	516926	Identifier	method_name		516241	1					
ANR	516927	CompoundStatement		122:4:3281:3318	516241	1					
ANR	516928	IdentifierDeclStatement	RBinImport * imp = R_NEW0 ( RBinImport ) ;	1803:4:48744:48781	516241	0	True				
ANR	516929	IdentifierDecl	* imp = R_NEW0 ( RBinImport )		516241	0					
ANR	516930	IdentifierDeclType	RBinImport *		516241	0					
ANR	516931	Identifier	imp		516241	1					
ANR	516932	AssignmentExpression	* imp = R_NEW0 ( RBinImport )		516241	2		=			
ANR	516933	Identifier	imp		516241	0					
ANR	516934	CallExpression	R_NEW0 ( RBinImport )		516241	1					
ANR	516935	Callee	R_NEW0		516241	0					
ANR	516936	Identifier	R_NEW0		516241	0					
ANR	516937	ArgumentList	RBinImport		516241	1					
ANR	516938	Argument	RBinImport		516241	0					
ANR	516939	Identifier	RBinImport		516241	0					
ANR	516940	IfStatement	if ( ! imp )		516241	1					
ANR	516941	Condition	! imp	1804:8:48791:48794	516241	0	True				
ANR	516942	UnaryOperationExpression	! imp		516241	0					
ANR	516943	UnaryOperator	!		516241	0					
ANR	516944	Identifier	imp		516241	1					
ANR	516945	CompoundStatement		110:14:2942:2942	516241	1					
ANR	516946	ExpressionStatement	free ( methods )	1805:5:48804:48818	516241	0	True				
ANR	516947	CallExpression	free ( methods )		516241	0					
ANR	516948	Callee	free		516241	0					
ANR	516949	Identifier	free		516241	0					
ANR	516950	ArgumentList	methods		516241	1					
ANR	516951	Argument	methods		516241	0					
ANR	516952	Identifier	methods		516241	0					
ANR	516953	ExpressionStatement	free ( signature )	1806:5:48825:48841	516241	1	True				
ANR	516954	CallExpression	free ( signature )		516241	0					
ANR	516955	Callee	free		516241	0					
ANR	516956	Identifier	free		516241	0					
ANR	516957	ArgumentList	signature		516241	1					
ANR	516958	Argument	signature		516241	0					
ANR	516959	Identifier	signature		516241	0					
ANR	516960	ExpressionStatement	free ( class_name )	1807:5:48848:48865	516241	2	True				
ANR	516961	CallExpression	free ( class_name )		516241	0					
ANR	516962	Callee	free		516241	0					
ANR	516963	Identifier	free		516241	0					
ANR	516964	ArgumentList	class_name		516241	1					
ANR	516965	Argument	class_name		516241	0					
ANR	516966	Identifier	class_name		516241	0					
ANR	516967	ReturnStatement	return false ;	1808:5:48872:48884	516241	3	True				
ANR	516968	Identifier	false		516241	0					
ANR	516969	ExpressionStatement	"imp -> name = r_str_newf ( ""%s.method.%s%s"" , class_name , method_name , signature )"	1810:4:48896:48974	516241	2	True				
ANR	516970	AssignmentExpression	"imp -> name = r_str_newf ( ""%s.method.%s%s"" , class_name , method_name , signature )"		516241	0		=			
ANR	516971	PtrMemberAccess	imp -> name		516241	0					
ANR	516972	Identifier	imp		516241	0					
ANR	516973	Identifier	name		516241	1					
ANR	516974	CallExpression	"r_str_newf ( ""%s.method.%s%s"" , class_name , method_name , signature )"		516241	1					
ANR	516975	Callee	r_str_newf		516241	0					
ANR	516976	Identifier	r_str_newf		516241	0					
ANR	516977	ArgumentList	"""%s.method.%s%s"""		516241	1					
ANR	516978	Argument	"""%s.method.%s%s"""		516241	0					
ANR	516979	PrimaryExpression	"""%s.method.%s%s"""		516241	0					
ANR	516980	Argument	class_name		516241	1					
ANR	516981	Identifier	class_name		516241	0					
ANR	516982	Argument	method_name		516241	2					
ANR	516983	Identifier	method_name		516241	0					
ANR	516984	Argument	signature		516241	3					
ANR	516985	Identifier	signature		516241	0					
ANR	516986	ExpressionStatement	"imp -> type = r_str_const ( ""FUNC"" )"	1811:4:48980:49012	516241	3	True				
ANR	516987	AssignmentExpression	"imp -> type = r_str_const ( ""FUNC"" )"		516241	0		=			
ANR	516988	PtrMemberAccess	imp -> type		516241	0					
ANR	516989	Identifier	imp		516241	0					
ANR	516990	Identifier	type		516241	1					
ANR	516991	CallExpression	"r_str_const ( ""FUNC"" )"		516241	1					
ANR	516992	Callee	r_str_const		516241	0					
ANR	516993	Identifier	r_str_const		516241	0					
ANR	516994	ArgumentList	"""FUNC"""		516241	1					
ANR	516995	Argument	"""FUNC"""		516241	0					
ANR	516996	PrimaryExpression	"""FUNC"""		516241	0					
ANR	516997	ExpressionStatement	"imp -> bind = r_str_const ( ""NONE"" )"	1812:4:49018:49050	516241	4	True				
ANR	516998	AssignmentExpression	"imp -> bind = r_str_const ( ""NONE"" )"		516241	0		=			
ANR	516999	PtrMemberAccess	imp -> bind		516241	0					
ANR	517000	Identifier	imp		516241	0					
ANR	517001	Identifier	bind		516241	1					
ANR	517002	CallExpression	"r_str_const ( ""NONE"" )"		516241	1					
ANR	517003	Callee	r_str_const		516241	0					
ANR	517004	Identifier	r_str_const		516241	0					
ANR	517005	ArgumentList	"""NONE"""		516241	1					
ANR	517006	Argument	"""NONE"""		516241	0					
ANR	517007	PrimaryExpression	"""NONE"""		516241	0					
ANR	517008	ExpressionStatement	imp -> ordinal = import_count ++	1813:4:49056:49085	516241	5	True				
ANR	517009	AssignmentExpression	imp -> ordinal = import_count ++		516241	0		=			
ANR	517010	PtrMemberAccess	imp -> ordinal		516241	0					
ANR	517011	Identifier	imp		516241	0					
ANR	517012	Identifier	ordinal		516241	1					
ANR	517013	PostIncDecOperationExpression	import_count ++		516241	1					
ANR	517014	Identifier	import_count		516241	0					
ANR	517015	IncDec	++		516241	1					
ANR	517016	ExpressionStatement	"r_list_append ( bin -> imports_list , imp )"	1814:4:49091:49129	516241	6	True				
ANR	517017	CallExpression	"r_list_append ( bin -> imports_list , imp )"		516241	0					
ANR	517018	Callee	r_list_append		516241	0					
ANR	517019	Identifier	r_list_append		516241	0					
ANR	517020	ArgumentList	bin -> imports_list		516241	1					
ANR	517021	Argument	bin -> imports_list		516241	0					
ANR	517022	PtrMemberAccess	bin -> imports_list		516241	0					
ANR	517023	Identifier	bin		516241	0					
ANR	517024	Identifier	imports_list		516241	1					
ANR	517025	Argument	imp		516241	1					
ANR	517026	Identifier	imp		516241	0					
ANR	517027	IdentifierDeclStatement	RBinSymbol * sym = R_NEW0 ( RBinSymbol ) ;	1816:4:49136:49173	516241	7	True				
ANR	517028	IdentifierDecl	* sym = R_NEW0 ( RBinSymbol )		516241	0					
ANR	517029	IdentifierDeclType	RBinSymbol *		516241	0					
ANR	517030	Identifier	sym		516241	1					
ANR	517031	AssignmentExpression	* sym = R_NEW0 ( RBinSymbol )		516241	2		=			
ANR	517032	Identifier	sym		516241	0					
ANR	517033	CallExpression	R_NEW0 ( RBinSymbol )		516241	1					
ANR	517034	Callee	R_NEW0		516241	0					
ANR	517035	Identifier	R_NEW0		516241	0					
ANR	517036	ArgumentList	RBinSymbol		516241	1					
ANR	517037	Argument	RBinSymbol		516241	0					
ANR	517038	Identifier	RBinSymbol		516241	0					
ANR	517039	IfStatement	if ( ! sym )		516241	8					
ANR	517040	Condition	! sym	1817:8:49183:49186	516241	0	True				
ANR	517041	UnaryOperationExpression	! sym		516241	0					
ANR	517042	UnaryOperator	!		516241	0					
ANR	517043	Identifier	sym		516241	1					
ANR	517044	CompoundStatement		123:14:3334:3334	516241	1					
ANR	517045	ExpressionStatement	free ( methods )	1818:5:49196:49210	516241	0	True				
ANR	517046	CallExpression	free ( methods )		516241	0					
ANR	517047	Callee	free		516241	0					
ANR	517048	Identifier	free		516241	0					
ANR	517049	ArgumentList	methods		516241	1					
ANR	517050	Argument	methods		516241	0					
ANR	517051	Identifier	methods		516241	0					
ANR	517052	ExpressionStatement	free ( signature )	1819:5:49217:49233	516241	1	True				
ANR	517053	CallExpression	free ( signature )		516241	0					
ANR	517054	Callee	free		516241	0					
ANR	517055	Identifier	free		516241	0					
ANR	517056	ArgumentList	signature		516241	1					
ANR	517057	Argument	signature		516241	0					
ANR	517058	Identifier	signature		516241	0					
ANR	517059	ExpressionStatement	free ( class_name )	1820:5:49240:49257	516241	2	True				
ANR	517060	CallExpression	free ( class_name )		516241	0					
ANR	517061	Callee	free		516241	0					
ANR	517062	Identifier	free		516241	0					
ANR	517063	ArgumentList	class_name		516241	1					
ANR	517064	Argument	class_name		516241	0					
ANR	517065	Identifier	class_name		516241	0					
ANR	517066	ReturnStatement	return false ;	1821:5:49264:49276	516241	3	True				
ANR	517067	Identifier	false		516241	0					
ANR	517068	ExpressionStatement	"sym -> name = r_str_newf ( ""imp.%s"" , imp -> name )"	1823:4:49288:49332	516241	9	True				
ANR	517069	AssignmentExpression	"sym -> name = r_str_newf ( ""imp.%s"" , imp -> name )"		516241	0		=			
ANR	517070	PtrMemberAccess	sym -> name		516241	0					
ANR	517071	Identifier	sym		516241	0					
ANR	517072	Identifier	name		516241	1					
ANR	517073	CallExpression	"r_str_newf ( ""imp.%s"" , imp -> name )"		516241	1					
ANR	517074	Callee	r_str_newf		516241	0					
ANR	517075	Identifier	r_str_newf		516241	0					
ANR	517076	ArgumentList	"""imp.%s"""		516241	1					
ANR	517077	Argument	"""imp.%s"""		516241	0					
ANR	517078	PrimaryExpression	"""imp.%s"""		516241	0					
ANR	517079	Argument	imp -> name		516241	1					
ANR	517080	PtrMemberAccess	imp -> name		516241	0					
ANR	517081	Identifier	imp		516241	0					
ANR	517082	Identifier	name		516241	1					
ANR	517083	ExpressionStatement	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )	1824:4:49338:49383	516241	10	True				
ANR	517084	AssignmentExpression	sym -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )		516241	0		=			
ANR	517085	PtrMemberAccess	sym -> type		516241	0					
ANR	517086	Identifier	sym		516241	0					
ANR	517087	Identifier	type		516241	1					
ANR	517088	CallExpression	r_str_const ( R_BIN_TYPE_FUNC_STR )		516241	1					
ANR	517089	Callee	r_str_const		516241	0					
ANR	517090	Identifier	r_str_const		516241	0					
ANR	517091	ArgumentList	R_BIN_TYPE_FUNC_STR		516241	1					
ANR	517092	Argument	R_BIN_TYPE_FUNC_STR		516241	0					
ANR	517093	Identifier	R_BIN_TYPE_FUNC_STR		516241	0					
ANR	517094	ExpressionStatement	"sym -> bind = r_str_const ( ""NONE"" )"	1825:4:49389:49421	516241	11	True				
ANR	517095	AssignmentExpression	"sym -> bind = r_str_const ( ""NONE"" )"		516241	0		=			
ANR	517096	PtrMemberAccess	sym -> bind		516241	0					
ANR	517097	Identifier	sym		516241	0					
ANR	517098	Identifier	bind		516241	1					
ANR	517099	CallExpression	"r_str_const ( ""NONE"" )"		516241	1					
ANR	517100	Callee	r_str_const		516241	0					
ANR	517101	Identifier	r_str_const		516241	0					
ANR	517102	ArgumentList	"""NONE"""		516241	1					
ANR	517103	Argument	"""NONE"""		516241	0					
ANR	517104	PrimaryExpression	"""NONE"""		516241	0					
ANR	517105	ExpressionStatement	sym -> paddr = sym -> vaddr = bin -> header . method_offset + ( sizeof ( struct dex_method_t ) * i )	1828:4:49506:49595	516241	12	True				
ANR	517106	AssignmentExpression	sym -> paddr = sym -> vaddr = bin -> header . method_offset + ( sizeof ( struct dex_method_t ) * i )		516241	0		=			
ANR	517107	PtrMemberAccess	sym -> paddr		516241	0					
ANR	517108	Identifier	sym		516241	0					
ANR	517109	Identifier	paddr		516241	1					
ANR	517110	AssignmentExpression	sym -> vaddr = bin -> header . method_offset + ( sizeof ( struct dex_method_t ) * i )		516241	1		=			
ANR	517111	PtrMemberAccess	sym -> vaddr		516241	0					
ANR	517112	Identifier	sym		516241	0					
ANR	517113	Identifier	vaddr		516241	1					
ANR	517114	AdditiveExpression	bin -> header . method_offset + ( sizeof ( struct dex_method_t ) * i )		516241	1		+			
ANR	517115	MemberAccess	bin -> header . method_offset		516241	0					
ANR	517116	PtrMemberAccess	bin -> header		516241	0					
ANR	517117	Identifier	bin		516241	0					
ANR	517118	Identifier	header		516241	1					
ANR	517119	Identifier	method_offset		516241	1					
ANR	517120	MultiplicativeExpression	sizeof ( struct dex_method_t ) * i		516241	1		*			
ANR	517121	SizeofExpression	sizeof ( struct dex_method_t )		516241	0					
ANR	517122	Sizeof	sizeof		516241	0					
ANR	517123	SizeofOperand	struct dex_method_t		516241	1					
ANR	517124	Identifier	i		516241	1					
ANR	517125	ExpressionStatement	sym -> ordinal = sym_count ++	1829:4:49601:49627	516241	13	True				
ANR	517126	AssignmentExpression	sym -> ordinal = sym_count ++		516241	0		=			
ANR	517127	PtrMemberAccess	sym -> ordinal		516241	0					
ANR	517128	Identifier	sym		516241	0					
ANR	517129	Identifier	ordinal		516241	1					
ANR	517130	PostIncDecOperationExpression	sym_count ++		516241	1					
ANR	517131	Identifier	sym_count		516241	0					
ANR	517132	IncDec	++		516241	1					
ANR	517133	ExpressionStatement	"r_list_append ( bin -> methods_list , sym )"	1830:4:49633:49671	516241	14	True				
ANR	517134	CallExpression	"r_list_append ( bin -> methods_list , sym )"		516241	0					
ANR	517135	Callee	r_list_append		516241	0					
ANR	517136	Identifier	r_list_append		516241	0					
ANR	517137	ArgumentList	bin -> methods_list		516241	1					
ANR	517138	Argument	bin -> methods_list		516241	0					
ANR	517139	PtrMemberAccess	bin -> methods_list		516241	0					
ANR	517140	Identifier	bin		516241	0					
ANR	517141	Identifier	methods_list		516241	1					
ANR	517142	Argument	sym		516241	1					
ANR	517143	Identifier	sym		516241	0					
ANR	517144	ExpressionStatement	"sdb_num_set ( mdb , sdb_fmt ( ""method.%d"" , i ) , sym -> paddr , 0 )"	1831:4:49677:49735	516241	15	True				
ANR	517145	CallExpression	"sdb_num_set ( mdb , sdb_fmt ( ""method.%d"" , i ) , sym -> paddr , 0 )"		516241	0					
ANR	517146	Callee	sdb_num_set		516241	0					
ANR	517147	Identifier	sdb_num_set		516241	0					
ANR	517148	ArgumentList	mdb		516241	1					
ANR	517149	Argument	mdb		516241	0					
ANR	517150	Identifier	mdb		516241	0					
ANR	517151	Argument	"sdb_fmt ( ""method.%d"" , i )"		516241	1					
ANR	517152	CallExpression	"sdb_fmt ( ""method.%d"" , i )"		516241	0					
ANR	517153	Callee	sdb_fmt		516241	0					
ANR	517154	Identifier	sdb_fmt		516241	0					
ANR	517155	ArgumentList	"""method.%d"""		516241	1					
ANR	517156	Argument	"""method.%d"""		516241	0					
ANR	517157	PrimaryExpression	"""method.%d"""		516241	0					
ANR	517158	Argument	i		516241	1					
ANR	517159	Identifier	i		516241	0					
ANR	517160	Argument	sym -> paddr		516241	2					
ANR	517161	PtrMemberAccess	sym -> paddr		516241	0					
ANR	517162	Identifier	sym		516241	0					
ANR	517163	Identifier	paddr		516241	1					
ANR	517164	Argument	0		516241	3					
ANR	517165	PrimaryExpression	0		516241	0					
ANR	517166	ExpressionStatement	free ( signature )	1833:3:49745:49761	516241	15	True				
ANR	517167	CallExpression	free ( signature )		516241	0					
ANR	517168	Callee	free		516241	0					
ANR	517169	Identifier	free		516241	0					
ANR	517170	ArgumentList	signature		516241	1					
ANR	517171	Argument	signature		516241	0					
ANR	517172	Identifier	signature		516241	0					
ANR	517173	ExpressionStatement	free ( class_name )	1834:3:49766:49783	516241	16	True				
ANR	517174	CallExpression	free ( class_name )		516241	0					
ANR	517175	Callee	free		516241	0					
ANR	517176	Identifier	free		516241	0					
ANR	517177	ArgumentList	class_name		516241	1					
ANR	517178	Argument	class_name		516241	0					
ANR	517179	Identifier	class_name		516241	0					
ANR	517180	ExpressionStatement	free ( methods )	1836:2:49791:49805	516241	3	True				
ANR	517181	CallExpression	free ( methods )		516241	0					
ANR	517182	Callee	free		516241	0					
ANR	517183	Identifier	free		516241	0					
ANR	517184	ArgumentList	methods		516241	1					
ANR	517185	Argument	methods		516241	0					
ANR	517186	Identifier	methods		516241	0					
ANR	517187	ReturnStatement	return true ;	1838:1:49811:49822	516241	26	True				
ANR	517188	Identifier	true		516241	0					
ANR	517189	ReturnType	static bool		516241	1					
ANR	517190	Identifier	dex_loadcode		516241	2					
ANR	517191	ParameterList	RBinFile * bf		516241	3					
ANR	517192	Parameter	RBinFile * bf	1695:25:45840:45851	516241	0	True				
ANR	517193	ParameterType	RBinFile *		516241	0					
ANR	517194	Identifier	bf		516241	1					
ANR	517195	CFGEntryNode	ENTRY		516241		True				
ANR	517196	CFGExitNode	EXIT		516241		True				
ANR	517197	Symbol	UT32_MAX		516241						
ANR	517198	Symbol	bin -> size		516241						
ANR	517199	Symbol	bin -> code_to		516241						
ANR	517200	Symbol	sym -> bind		516241						
ANR	517201	Symbol	sym -> ordinal		516241						
ANR	517202	Symbol	bin -> version		516241						
ANR	517203	Symbol	* * * bin		516241						
ANR	517204	Symbol	bin		516241						
ANR	517205	Symbol	bin -> header . method_offset		516241						
ANR	517206	Symbol	bin -> header		516241						
ANR	517207	Symbol	* imp		516241						
ANR	517208	Symbol	& sym_count		516241						
ANR	517209	Symbol	sym -> type		516241						
ANR	517210	Symbol	strlen		516241						
ANR	517211	Symbol	import_count		516241						
ANR	517212	Symbol	imp -> type		516241						
ANR	517213	Symbol	getstr		516241						
ANR	517214	Symbol	len		516241						
ANR	517215	Symbol	bf -> o		516241						
ANR	517216	Symbol	bin -> header . types_size		516241						
ANR	517217	Symbol	method_name		516241						
ANR	517218	Symbol	imp -> ordinal		516241						
ANR	517219	Symbol	dexdump		516241						
ANR	517220	Symbol	bin -> lines_list		516241						
ANR	517221	Symbol	bin -> code_from		516241						
ANR	517222	Symbol	r_bin_class_free		516241						
ANR	517223	Symbol	bin -> methods_list		516241						
ANR	517224	Symbol	* * i		516241						
ANR	517225	Symbol	NULL		516241						
ANR	517226	Symbol	r_list_newf		516241						
ANR	517227	Symbol	imp -> name		516241						
ANR	517228	Symbol	imp -> bind		516241						
ANR	517229	Symbol	sym -> vaddr		516241						
ANR	517230	Symbol	r_bin_dex_get_version		516241						
ANR	517231	Symbol	mdb		516241						
ANR	517232	Symbol	bin -> header . strings_size		516241						
ANR	517233	Symbol	R_NEW0		516241						
ANR	517234	Symbol	* sym		516241						
ANR	517235	Symbol	* * bf		516241						
ANR	517236	Symbol	* bin -> methods		516241						
ANR	517237	Symbol	strstr		516241						
ANR	517238	Symbol	sym -> name		516241						
ANR	517239	Symbol	bin -> header . class_size		516241						
ANR	517240	Symbol	true		516241						
ANR	517241	Symbol	bin -> header . method_size		516241						
ANR	517242	Symbol	bin -> types		516241						
ANR	517243	Symbol	RBinSymbol		516241						
ANR	517244	Symbol	bin -> types [ bin -> methods [ i ] . class_id ] . descriptor_id		516241						
ANR	517245	Symbol	* method_name		516241						
ANR	517246	Symbol	bf		516241						
ANR	517247	Symbol	* * bin -> methods		516241						
ANR	517248	Symbol	* bin -> types		516241						
ANR	517249	Symbol	signature		516241						
ANR	517250	Symbol	methods		516241						
ANR	517251	Symbol	sym		516241						
ANR	517252	Symbol	className		516241						
ANR	517253	Symbol	calloc		516241						
ANR	517254	Symbol	dex_method_name		516241						
ANR	517255	Symbol	r_str_newf		516241						
ANR	517256	Symbol	bf -> rbin		516241						
ANR	517257	Symbol	imp		516241						
ANR	517258	Symbol	* bin		516241						
ANR	517259	Symbol	bin -> methods_list -> length		516241						
ANR	517260	Symbol	* bf -> o		516241						
ANR	517261	Symbol	R_BIN_TYPE_FUNC_STR		516241						
ANR	517262	Symbol	bin -> classes_list		516241						
ANR	517263	Symbol	bin -> methods		516241						
ANR	517264	Symbol	* * bin		516241						
ANR	517265	Symbol	UT64_MAX		516241						
ANR	517266	Symbol	free		516241						
ANR	517267	Symbol	is_class_idx_in_code_classes		516241						
ANR	517268	Symbol	class_name		516241						
ANR	517269	Symbol	sdb_fmt		516241						
ANR	517270	Symbol	dex_method_signature		516241						
ANR	517271	Symbol	rbin		516241						
ANR	517272	Symbol	bf -> o -> bin_obj		516241						
ANR	517273	Symbol	sym_count		516241						
ANR	517274	Symbol	RBinImport		516241						
ANR	517275	Symbol	r_str_const		516241						
ANR	517276	Symbol	bin -> classes		516241						
ANR	517277	Symbol	amount		516241						
ANR	517278	Symbol	c		516241						
ANR	517279	Symbol	false		516241						
ANR	517280	Symbol	* methods		516241						
ANR	517281	Symbol	sym -> paddr		516241						
ANR	517282	Symbol	* bf		516241						
ANR	517283	Symbol	i		516241						
ANR	517284	Symbol	R_MIN		516241						
ANR	517285	Symbol	* i		516241						
ANR	517286	Symbol	* bin -> methods [ i ] . class_id		516241						
ANR	517287	Symbol	* bin -> methods_list		516241						
ANR	517288	Symbol	bin -> imports_list		516241						
ANR	517289	Symbol	strdup		516241						
ANR	517290	Symbol	dexSubsystem		516241						
ANR	517291	Symbol	bin -> methods [ i ] . class_id		516241						
ANR	517292	Function	imports	1841:0:49827:50056							
ANR	517293	FunctionDef	imports (RBinFile * bf)		517292	0					
ANR	517294	CompoundStatement		1841:36:49863:50056	517292	0					
ANR	517295	IdentifierDeclStatement	RBinDexObj * bin = ( RBinDexObj * ) bf -> o -> bin_obj ;	1842:1:49866:49912	517292	0	True				
ANR	517296	IdentifierDecl	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517292	0					
ANR	517297	IdentifierDeclType	RBinDexObj *		517292	0					
ANR	517298	Identifier	bin		517292	1					
ANR	517299	AssignmentExpression	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517292	2		=			
ANR	517300	Identifier	bin		517292	0					
ANR	517301	CastExpression	( RBinDexObj * ) bf -> o -> bin_obj		517292	1					
ANR	517302	CastTarget	RBinDexObj *		517292	0					
ANR	517303	PtrMemberAccess	bf -> o -> bin_obj		517292	1					
ANR	517304	PtrMemberAccess	bf -> o		517292	0					
ANR	517305	Identifier	bf		517292	0					
ANR	517306	Identifier	o		517292	1					
ANR	517307	Identifier	bin_obj		517292	1					
ANR	517308	IfStatement	if ( ! bin )		517292	1					
ANR	517309	Condition	! bin	1843:5:49919:49922	517292	0	True				
ANR	517310	UnaryOperationExpression	! bin		517292	0					
ANR	517311	UnaryOperator	!		517292	0					
ANR	517312	Identifier	bin		517292	1					
ANR	517313	CompoundStatement		3:11:61:61	517292	1					
ANR	517314	ReturnStatement	return NULL ;	1844:2:49929:49940	517292	0	True				
ANR	517315	Identifier	NULL		517292	0					
ANR	517316	IfStatement	if ( bin && bin -> imports_list )		517292	2					
ANR	517317	Condition	bin && bin -> imports_list	1846:5:49950:49973	517292	0	True				
ANR	517318	AndExpression	bin && bin -> imports_list		517292	0		&&			
ANR	517319	Identifier	bin		517292	0					
ANR	517320	PtrMemberAccess	bin -> imports_list		517292	1					
ANR	517321	Identifier	bin		517292	0					
ANR	517322	Identifier	imports_list		517292	1					
ANR	517323	CompoundStatement		6:31:112:112	517292	1					
ANR	517324	ReturnStatement	return bin -> imports_list ;	1847:2:49980:50004	517292	0	True				
ANR	517325	PtrMemberAccess	bin -> imports_list		517292	0					
ANR	517326	Identifier	bin		517292	0					
ANR	517327	Identifier	imports_list		517292	1					
ANR	517328	ExpressionStatement	dex_loadcode ( bf )	1849:1:50010:50027	517292	3	True				
ANR	517329	CallExpression	dex_loadcode ( bf )		517292	0					
ANR	517330	Callee	dex_loadcode		517292	0					
ANR	517331	Identifier	dex_loadcode		517292	0					
ANR	517332	ArgumentList	bf		517292	1					
ANR	517333	Argument	bf		517292	0					
ANR	517334	Identifier	bf		517292	0					
ANR	517335	ReturnStatement	return bin -> imports_list ;	1850:1:50030:50054	517292	4	True				
ANR	517336	PtrMemberAccess	bin -> imports_list		517292	0					
ANR	517337	Identifier	bin		517292	0					
ANR	517338	Identifier	imports_list		517292	1					
ANR	517339	ReturnType	static RList *		517292	1					
ANR	517340	Identifier	imports		517292	2					
ANR	517341	ParameterList	RBinFile * bf		517292	3					
ANR	517342	Parameter	RBinFile * bf	1841:22:49849:49860	517292	0	True				
ANR	517343	ParameterType	RBinFile *		517292	0					
ANR	517344	Identifier	bf		517292	1					
ANR	517345	CFGEntryNode	ENTRY		517292		True				
ANR	517346	CFGExitNode	EXIT		517292		True				
ANR	517347	Symbol	bf -> o -> bin_obj		517292						
ANR	517348	Symbol	* * bf		517292						
ANR	517349	Symbol	NULL		517292						
ANR	517350	Symbol	bf		517292						
ANR	517351	Symbol	bf -> o		517292						
ANR	517352	Symbol	bin		517292						
ANR	517353	Symbol	* bf		517292						
ANR	517354	Symbol	bin -> imports_list		517292						
ANR	517355	Symbol	* bin		517292						
ANR	517356	Symbol	* bf -> o		517292						
ANR	517357	Function	trycatch	1853:0:50059:50288							
ANR	517358	FunctionDef	trycatch (RBinFile * bf)		517357	0					
ANR	517359	CompoundStatement		1853:37:50096:50288	517357	0					
ANR	517360	ExpressionStatement	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"	1854:1:50099:50157	517357	0	True				
ANR	517361	CallExpression	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"		517357	0					
ANR	517362	Callee	r_return_val_if_fail		517357	0					
ANR	517363	Identifier	r_return_val_if_fail		517357	0					
ANR	517364	ArgumentList	bf && bf -> o && bf -> o -> bin_obj		517357	1					
ANR	517365	Argument	bf && bf -> o && bf -> o -> bin_obj		517357	0					
ANR	517366	AndExpression	bf && bf -> o && bf -> o -> bin_obj		517357	0		&&			
ANR	517367	Identifier	bf		517357	0					
ANR	517368	AndExpression	bf -> o && bf -> o -> bin_obj		517357	1		&&			
ANR	517369	PtrMemberAccess	bf -> o		517357	0					
ANR	517370	Identifier	bf		517357	0					
ANR	517371	Identifier	o		517357	1					
ANR	517372	PtrMemberAccess	bf -> o -> bin_obj		517357	1					
ANR	517373	PtrMemberAccess	bf -> o		517357	0					
ANR	517374	Identifier	bf		517357	0					
ANR	517375	Identifier	o		517357	1					
ANR	517376	Identifier	bin_obj		517357	1					
ANR	517377	Argument	NULL		517357	1					
ANR	517378	Identifier	NULL		517357	0					
ANR	517379	IdentifierDeclStatement	RBinDexObj * bin = ( RBinDexObj * ) bf -> o -> bin_obj ;	1855:1:50160:50206	517357	1	True				
ANR	517380	IdentifierDecl	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517357	0					
ANR	517381	IdentifierDeclType	RBinDexObj *		517357	0					
ANR	517382	Identifier	bin		517357	1					
ANR	517383	AssignmentExpression	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517357	2		=			
ANR	517384	Identifier	bin		517357	0					
ANR	517385	CastExpression	( RBinDexObj * ) bf -> o -> bin_obj		517357	1					
ANR	517386	CastTarget	RBinDexObj *		517357	0					
ANR	517387	PtrMemberAccess	bf -> o -> bin_obj		517357	1					
ANR	517388	PtrMemberAccess	bf -> o		517357	0					
ANR	517389	Identifier	bf		517357	0					
ANR	517390	Identifier	o		517357	1					
ANR	517391	Identifier	bin_obj		517357	1					
ANR	517392	IfStatement	if ( ! bin -> trycatch_list )		517357	2					
ANR	517393	Condition	! bin -> trycatch_list	1856:5:50213:50231	517357	0	True				
ANR	517394	UnaryOperationExpression	! bin -> trycatch_list		517357	0					
ANR	517395	UnaryOperator	!		517357	0					
ANR	517396	PtrMemberAccess	bin -> trycatch_list		517357	1					
ANR	517397	Identifier	bin		517357	0					
ANR	517398	Identifier	trycatch_list		517357	1					
ANR	517399	CompoundStatement		4:26:137:137	517357	1					
ANR	517400	ExpressionStatement	dex_loadcode ( bf )	1857:2:50238:50255	517357	0	True				
ANR	517401	CallExpression	dex_loadcode ( bf )		517357	0					
ANR	517402	Callee	dex_loadcode		517357	0					
ANR	517403	Identifier	dex_loadcode		517357	0					
ANR	517404	ArgumentList	bf		517357	1					
ANR	517405	Argument	bf		517357	0					
ANR	517406	Identifier	bf		517357	0					
ANR	517407	ReturnStatement	return bin -> trycatch_list ;	1859:1:50261:50286	517357	3	True				
ANR	517408	PtrMemberAccess	bin -> trycatch_list		517357	0					
ANR	517409	Identifier	bin		517357	0					
ANR	517410	Identifier	trycatch_list		517357	1					
ANR	517411	ReturnType	static RList *		517357	1					
ANR	517412	Identifier	trycatch		517357	2					
ANR	517413	ParameterList	RBinFile * bf		517357	3					
ANR	517414	Parameter	RBinFile * bf	1853:23:50082:50093	517357	0	True				
ANR	517415	ParameterType	RBinFile *		517357	0					
ANR	517416	Identifier	bf		517357	1					
ANR	517417	CFGEntryNode	ENTRY		517357		True				
ANR	517418	CFGExitNode	EXIT		517357		True				
ANR	517419	Symbol	bf -> o -> bin_obj		517357						
ANR	517420	Symbol	* * bf		517357						
ANR	517421	Symbol	NULL		517357						
ANR	517422	Symbol	bf		517357						
ANR	517423	Symbol	bf -> o		517357						
ANR	517424	Symbol	bin		517357						
ANR	517425	Symbol	bin -> trycatch_list		517357						
ANR	517426	Symbol	* bf		517357						
ANR	517427	Symbol	* bin		517357						
ANR	517428	Symbol	* bf -> o		517357						
ANR	517429	Function	methods	1862:0:50291:50517							
ANR	517430	FunctionDef	methods (RBinFile * bf)		517429	0					
ANR	517431	CompoundStatement		1862:36:50327:50517	517429	0					
ANR	517432	ExpressionStatement	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"	1863:1:50330:50388	517429	0	True				
ANR	517433	CallExpression	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"		517429	0					
ANR	517434	Callee	r_return_val_if_fail		517429	0					
ANR	517435	Identifier	r_return_val_if_fail		517429	0					
ANR	517436	ArgumentList	bf && bf -> o && bf -> o -> bin_obj		517429	1					
ANR	517437	Argument	bf && bf -> o && bf -> o -> bin_obj		517429	0					
ANR	517438	AndExpression	bf && bf -> o && bf -> o -> bin_obj		517429	0		&&			
ANR	517439	Identifier	bf		517429	0					
ANR	517440	AndExpression	bf -> o && bf -> o -> bin_obj		517429	1		&&			
ANR	517441	PtrMemberAccess	bf -> o		517429	0					
ANR	517442	Identifier	bf		517429	0					
ANR	517443	Identifier	o		517429	1					
ANR	517444	PtrMemberAccess	bf -> o -> bin_obj		517429	1					
ANR	517445	PtrMemberAccess	bf -> o		517429	0					
ANR	517446	Identifier	bf		517429	0					
ANR	517447	Identifier	o		517429	1					
ANR	517448	Identifier	bin_obj		517429	1					
ANR	517449	Argument	NULL		517429	1					
ANR	517450	Identifier	NULL		517429	0					
ANR	517451	IdentifierDeclStatement	RBinDexObj * bin = ( RBinDexObj * ) bf -> o -> bin_obj ;	1864:1:50391:50437	517429	1	True				
ANR	517452	IdentifierDecl	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517429	0					
ANR	517453	IdentifierDeclType	RBinDexObj *		517429	0					
ANR	517454	Identifier	bin		517429	1					
ANR	517455	AssignmentExpression	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517429	2		=			
ANR	517456	Identifier	bin		517429	0					
ANR	517457	CastExpression	( RBinDexObj * ) bf -> o -> bin_obj		517429	1					
ANR	517458	CastTarget	RBinDexObj *		517429	0					
ANR	517459	PtrMemberAccess	bf -> o -> bin_obj		517429	1					
ANR	517460	PtrMemberAccess	bf -> o		517429	0					
ANR	517461	Identifier	bf		517429	0					
ANR	517462	Identifier	o		517429	1					
ANR	517463	Identifier	bin_obj		517429	1					
ANR	517464	IfStatement	if ( ! bin -> methods_list )		517429	2					
ANR	517465	Condition	! bin -> methods_list	1865:5:50444:50461	517429	0	True				
ANR	517466	UnaryOperationExpression	! bin -> methods_list		517429	0					
ANR	517467	UnaryOperator	!		517429	0					
ANR	517468	PtrMemberAccess	bin -> methods_list		517429	1					
ANR	517469	Identifier	bin		517429	0					
ANR	517470	Identifier	methods_list		517429	1					
ANR	517471	CompoundStatement		4:25:136:136	517429	1					
ANR	517472	ExpressionStatement	dex_loadcode ( bf )	1866:2:50468:50485	517429	0	True				
ANR	517473	CallExpression	dex_loadcode ( bf )		517429	0					
ANR	517474	Callee	dex_loadcode		517429	0					
ANR	517475	Identifier	dex_loadcode		517429	0					
ANR	517476	ArgumentList	bf		517429	1					
ANR	517477	Argument	bf		517429	0					
ANR	517478	Identifier	bf		517429	0					
ANR	517479	ReturnStatement	return bin -> methods_list ;	1868:1:50491:50515	517429	3	True				
ANR	517480	PtrMemberAccess	bin -> methods_list		517429	0					
ANR	517481	Identifier	bin		517429	0					
ANR	517482	Identifier	methods_list		517429	1					
ANR	517483	ReturnType	static RList *		517429	1					
ANR	517484	Identifier	methods		517429	2					
ANR	517485	ParameterList	RBinFile * bf		517429	3					
ANR	517486	Parameter	RBinFile * bf	1862:22:50313:50324	517429	0	True				
ANR	517487	ParameterType	RBinFile *		517429	0					
ANR	517488	Identifier	bf		517429	1					
ANR	517489	CFGEntryNode	ENTRY		517429		True				
ANR	517490	CFGExitNode	EXIT		517429		True				
ANR	517491	Symbol	bf -> o -> bin_obj		517429						
ANR	517492	Symbol	bin -> methods_list		517429						
ANR	517493	Symbol	* * bf		517429						
ANR	517494	Symbol	NULL		517429						
ANR	517495	Symbol	bf		517429						
ANR	517496	Symbol	bf -> o		517429						
ANR	517497	Symbol	bin		517429						
ANR	517498	Symbol	* bf		517429						
ANR	517499	Symbol	* bin		517429						
ANR	517500	Symbol	* bf -> o		517429						
ANR	517501	Function	classes	1871:0:50520:50746							
ANR	517502	FunctionDef	classes (RBinFile * bf)		517501	0					
ANR	517503	CompoundStatement		1871:36:50556:50746	517501	0					
ANR	517504	ExpressionStatement	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"	1872:1:50559:50617	517501	0	True				
ANR	517505	CallExpression	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"		517501	0					
ANR	517506	Callee	r_return_val_if_fail		517501	0					
ANR	517507	Identifier	r_return_val_if_fail		517501	0					
ANR	517508	ArgumentList	bf && bf -> o && bf -> o -> bin_obj		517501	1					
ANR	517509	Argument	bf && bf -> o && bf -> o -> bin_obj		517501	0					
ANR	517510	AndExpression	bf && bf -> o && bf -> o -> bin_obj		517501	0		&&			
ANR	517511	Identifier	bf		517501	0					
ANR	517512	AndExpression	bf -> o && bf -> o -> bin_obj		517501	1		&&			
ANR	517513	PtrMemberAccess	bf -> o		517501	0					
ANR	517514	Identifier	bf		517501	0					
ANR	517515	Identifier	o		517501	1					
ANR	517516	PtrMemberAccess	bf -> o -> bin_obj		517501	1					
ANR	517517	PtrMemberAccess	bf -> o		517501	0					
ANR	517518	Identifier	bf		517501	0					
ANR	517519	Identifier	o		517501	1					
ANR	517520	Identifier	bin_obj		517501	1					
ANR	517521	Argument	NULL		517501	1					
ANR	517522	Identifier	NULL		517501	0					
ANR	517523	IdentifierDeclStatement	RBinDexObj * bin = ( RBinDexObj * ) bf -> o -> bin_obj ;	1873:1:50620:50666	517501	1	True				
ANR	517524	IdentifierDecl	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517501	0					
ANR	517525	IdentifierDeclType	RBinDexObj *		517501	0					
ANR	517526	Identifier	bin		517501	1					
ANR	517527	AssignmentExpression	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517501	2		=			
ANR	517528	Identifier	bin		517501	0					
ANR	517529	CastExpression	( RBinDexObj * ) bf -> o -> bin_obj		517501	1					
ANR	517530	CastTarget	RBinDexObj *		517501	0					
ANR	517531	PtrMemberAccess	bf -> o -> bin_obj		517501	1					
ANR	517532	PtrMemberAccess	bf -> o		517501	0					
ANR	517533	Identifier	bf		517501	0					
ANR	517534	Identifier	o		517501	1					
ANR	517535	Identifier	bin_obj		517501	1					
ANR	517536	IfStatement	if ( ! bin -> classes_list )		517501	2					
ANR	517537	Condition	! bin -> classes_list	1874:5:50673:50690	517501	0	True				
ANR	517538	UnaryOperationExpression	! bin -> classes_list		517501	0					
ANR	517539	UnaryOperator	!		517501	0					
ANR	517540	PtrMemberAccess	bin -> classes_list		517501	1					
ANR	517541	Identifier	bin		517501	0					
ANR	517542	Identifier	classes_list		517501	1					
ANR	517543	CompoundStatement		4:25:136:136	517501	1					
ANR	517544	ExpressionStatement	dex_loadcode ( bf )	1875:2:50697:50714	517501	0	True				
ANR	517545	CallExpression	dex_loadcode ( bf )		517501	0					
ANR	517546	Callee	dex_loadcode		517501	0					
ANR	517547	Identifier	dex_loadcode		517501	0					
ANR	517548	ArgumentList	bf		517501	1					
ANR	517549	Argument	bf		517501	0					
ANR	517550	Identifier	bf		517501	0					
ANR	517551	ReturnStatement	return bin -> classes_list ;	1877:1:50720:50744	517501	3	True				
ANR	517552	PtrMemberAccess	bin -> classes_list		517501	0					
ANR	517553	Identifier	bin		517501	0					
ANR	517554	Identifier	classes_list		517501	1					
ANR	517555	ReturnType	static RList *		517501	1					
ANR	517556	Identifier	classes		517501	2					
ANR	517557	ParameterList	RBinFile * bf		517501	3					
ANR	517558	Parameter	RBinFile * bf	1871:22:50542:50553	517501	0	True				
ANR	517559	ParameterType	RBinFile *		517501	0					
ANR	517560	Identifier	bf		517501	1					
ANR	517561	CFGEntryNode	ENTRY		517501		True				
ANR	517562	CFGExitNode	EXIT		517501		True				
ANR	517563	Symbol	bf -> o -> bin_obj		517501						
ANR	517564	Symbol	* * bf		517501						
ANR	517565	Symbol	NULL		517501						
ANR	517566	Symbol	bf		517501						
ANR	517567	Symbol	bf -> o		517501						
ANR	517568	Symbol	bin -> classes_list		517501						
ANR	517569	Symbol	bin		517501						
ANR	517570	Symbol	* bf		517501						
ANR	517571	Symbol	* bin		517501						
ANR	517572	Symbol	* bf -> o		517501						
ANR	517573	Function	already_entry	1880:0:50749:50939							
ANR	517574	FunctionDef	"already_entry (RList * entries , ut64 vaddr)"		517573	0					
ANR	517575	CompoundStatement		1880:54:50803:50939	517573	0					
ANR	517576	IdentifierDeclStatement	RBinAddr * e ;	1881:1:50806:50817	517573	0	True				
ANR	517577	IdentifierDecl	* e		517573	0					
ANR	517578	IdentifierDeclType	RBinAddr *		517573	0					
ANR	517579	Identifier	e		517573	1					
ANR	517580	IdentifierDeclStatement	RListIter * iter ;	1882:1:50820:50835	517573	1	True				
ANR	517581	IdentifierDecl	* iter		517573	0					
ANR	517582	IdentifierDeclType	RListIter *		517573	0					
ANR	517583	Identifier	iter		517573	1					
ANR	517584	Statement	r_list_foreach	1883:1:50838:50851	517573	2	True				
ANR	517585	Statement	(	1883:16:50853:50853	517573	3	True				
ANR	517586	Statement	entries	1883:17:50854:50860	517573	4	True				
ANR	517587	Statement	","	1883:24:50861:50861	517573	5	True				
ANR	517588	Statement	iter	1883:26:50863:50866	517573	6	True				
ANR	517589	Statement	","	1883:30:50867:50867	517573	7	True				
ANR	517590	Statement	e	1883:32:50869:50869	517573	8	True				
ANR	517591	Statement	)	1883:33:50870:50870	517573	9	True				
ANR	517592	CompoundStatement		4:35:68:68	517573	10					
ANR	517593	IfStatement	if ( e -> vaddr == vaddr )		517573	0					
ANR	517594	Condition	e -> vaddr == vaddr	1884:6:50880:50896	517573	0	True				
ANR	517595	EqualityExpression	e -> vaddr == vaddr		517573	0		==			
ANR	517596	PtrMemberAccess	e -> vaddr		517573	0					
ANR	517597	Identifier	e		517573	0					
ANR	517598	Identifier	vaddr		517573	1					
ANR	517599	Identifier	vaddr		517573	1					
ANR	517600	CompoundStatement		5:25:95:95	517573	1					
ANR	517601	ReturnStatement	return true ;	1885:3:50904:50915	517573	0	True				
ANR	517602	Identifier	true		517573	0					
ANR	517603	ReturnStatement	return false ;	1888:1:50925:50937	517573	11	True				
ANR	517604	Identifier	false		517573	0					
ANR	517605	ReturnType	static bool		517573	1					
ANR	517606	Identifier	already_entry		517573	2					
ANR	517607	ParameterList	"RList * entries , ut64 vaddr"		517573	3					
ANR	517608	Parameter	RList * entries	1880:26:50775:50788	517573	0	True				
ANR	517609	ParameterType	RList *		517573	0					
ANR	517610	Identifier	entries		517573	1					
ANR	517611	Parameter	ut64 vaddr	1880:42:50791:50800	517573	1	True				
ANR	517612	ParameterType	ut64		517573	0					
ANR	517613	Identifier	vaddr		517573	1					
ANR	517614	CFGEntryNode	ENTRY		517573		True				
ANR	517615	CFGExitNode	EXIT		517573		True				
ANR	517616	Symbol	entries		517573						
ANR	517617	Symbol	e		517573						
ANR	517618	Symbol	e -> vaddr		517573						
ANR	517619	Symbol	true		517573						
ANR	517620	Symbol	false		517573						
ANR	517621	Symbol	iter		517573						
ANR	517622	Symbol	vaddr		517573						
ANR	517623	Symbol	* e		517573						
ANR	517624	Function	entries	1891:0:50942:52468							
ANR	517625	FunctionDef	entries (RBinFile * bf)		517624	0					
ANR	517626	CompoundStatement		1891:36:50978:52468	517624	0					
ANR	517627	IdentifierDeclStatement	RListIter * iter ;	1892:1:50981:50996	517624	0	True				
ANR	517628	IdentifierDecl	* iter		517624	0					
ANR	517629	IdentifierDeclType	RListIter *		517624	0					
ANR	517630	Identifier	iter		517624	1					
ANR	517631	IdentifierDeclStatement	RBinSymbol * m ;	1893:1:50999:51012	517624	1	True				
ANR	517632	IdentifierDecl	* m		517624	0					
ANR	517633	IdentifierDeclType	RBinSymbol *		517624	0					
ANR	517634	Identifier	m		517624	1					
ANR	517635	IdentifierDeclStatement	RBinAddr * ptr ;	1894:1:51015:51028	517624	2	True				
ANR	517636	IdentifierDecl	* ptr		517624	0					
ANR	517637	IdentifierDeclType	RBinAddr *		517624	0					
ANR	517638	Identifier	ptr		517624	1					
ANR	517639	ExpressionStatement	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"	1896:1:51032:51090	517624	3	True				
ANR	517640	CallExpression	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"		517624	0					
ANR	517641	Callee	r_return_val_if_fail		517624	0					
ANR	517642	Identifier	r_return_val_if_fail		517624	0					
ANR	517643	ArgumentList	bf && bf -> o && bf -> o -> bin_obj		517624	1					
ANR	517644	Argument	bf && bf -> o && bf -> o -> bin_obj		517624	0					
ANR	517645	AndExpression	bf && bf -> o && bf -> o -> bin_obj		517624	0		&&			
ANR	517646	Identifier	bf		517624	0					
ANR	517647	AndExpression	bf -> o && bf -> o -> bin_obj		517624	1		&&			
ANR	517648	PtrMemberAccess	bf -> o		517624	0					
ANR	517649	Identifier	bf		517624	0					
ANR	517650	Identifier	o		517624	1					
ANR	517651	PtrMemberAccess	bf -> o -> bin_obj		517624	1					
ANR	517652	PtrMemberAccess	bf -> o		517624	0					
ANR	517653	Identifier	bf		517624	0					
ANR	517654	Identifier	o		517624	1					
ANR	517655	Identifier	bin_obj		517624	1					
ANR	517656	Argument	NULL		517624	1					
ANR	517657	Identifier	NULL		517624	0					
ANR	517658	IdentifierDeclStatement	RBinDexObj * bin = ( RBinDexObj * ) bf -> o -> bin_obj ;	1898:1:51094:51140	517624	4	True				
ANR	517659	IdentifierDecl	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517624	0					
ANR	517660	IdentifierDeclType	RBinDexObj *		517624	0					
ANR	517661	Identifier	bin		517624	1					
ANR	517662	AssignmentExpression	* bin = ( RBinDexObj * ) bf -> o -> bin_obj		517624	2		=			
ANR	517663	Identifier	bin		517624	0					
ANR	517664	CastExpression	( RBinDexObj * ) bf -> o -> bin_obj		517624	1					
ANR	517665	CastTarget	RBinDexObj *		517624	0					
ANR	517666	PtrMemberAccess	bf -> o -> bin_obj		517624	1					
ANR	517667	PtrMemberAccess	bf -> o		517624	0					
ANR	517668	Identifier	bf		517624	0					
ANR	517669	Identifier	o		517624	1					
ANR	517670	Identifier	bin_obj		517624	1					
ANR	517671	IdentifierDeclStatement	RList * ret = r_list_newf ( ( RListFree ) free ) ;	1899:1:51143:51185	517624	5	True				
ANR	517672	IdentifierDecl	* ret = r_list_newf ( ( RListFree ) free )		517624	0					
ANR	517673	IdentifierDeclType	RList *		517624	0					
ANR	517674	Identifier	ret		517624	1					
ANR	517675	AssignmentExpression	* ret = r_list_newf ( ( RListFree ) free )		517624	2		=			
ANR	517676	Identifier	ret		517624	0					
ANR	517677	CallExpression	r_list_newf ( ( RListFree ) free )		517624	1					
ANR	517678	Callee	r_list_newf		517624	0					
ANR	517679	Identifier	r_list_newf		517624	0					
ANR	517680	ArgumentList	( RListFree ) free		517624	1					
ANR	517681	Argument	( RListFree ) free		517624	0					
ANR	517682	CastExpression	( RListFree ) free		517624	0					
ANR	517683	CastTarget	RListFree		517624	0					
ANR	517684	Identifier	free		517624	1					
ANR	517685	IfStatement	if ( ! bin -> methods_list )		517624	6					
ANR	517686	Condition	! bin -> methods_list	1901:5:51193:51210	517624	0	True				
ANR	517687	UnaryOperationExpression	! bin -> methods_list		517624	0					
ANR	517688	UnaryOperator	!		517624	0					
ANR	517689	PtrMemberAccess	bin -> methods_list		517624	1					
ANR	517690	Identifier	bin		517624	0					
ANR	517691	Identifier	methods_list		517624	1					
ANR	517692	CompoundStatement		11:25:234:234	517624	1					
ANR	517693	ExpressionStatement	dex_loadcode ( bf )	1902:2:51217:51234	517624	0	True				
ANR	517694	CallExpression	dex_loadcode ( bf )		517624	0					
ANR	517695	Callee	dex_loadcode		517624	0					
ANR	517696	Identifier	dex_loadcode		517624	0					
ANR	517697	ArgumentList	bf		517624	1					
ANR	517698	Argument	bf		517624	0					
ANR	517699	Identifier	bf		517624	0					
ANR	517700	Statement	r_list_foreach	1906:1:51287:51300	517624	7	True				
ANR	517701	Statement	(	1906:16:51302:51302	517624	8	True				
ANR	517702	Statement	bin	1906:17:51303:51305	517624	9	True				
ANR	517703	Statement	->	1906:20:51306:51307	517624	10	True				
ANR	517704	Statement	methods_list	1906:22:51308:51319	517624	11	True				
ANR	517705	Statement	","	1906:34:51320:51320	517624	12	True				
ANR	517706	Statement	iter	1906:36:51322:51325	517624	13	True				
ANR	517707	Statement	","	1906:40:51326:51326	517624	14	True				
ANR	517708	Statement	m	1906:42:51328:51328	517624	15	True				
ANR	517709	Statement	)	1906:43:51329:51329	517624	16	True				
ANR	517710	CompoundStatement		16:45:352:352	517624	17					
ANR	517711	IfStatement	"if ( strlen ( m -> name ) > 30 && m -> bind && ( ! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR ) || ! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR ) ) && ! strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" ) )"		517624	0					
ANR	517712	Condition	"strlen ( m -> name ) > 30 && m -> bind && ( ! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR ) || ! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR ) ) && ! strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" )"	1907:6:51339:51556	517624	0	True				
ANR	517713	AndExpression	"strlen ( m -> name ) > 30 && m -> bind && ( ! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR ) || ! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR ) ) && ! strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" )"		517624	0		&&			
ANR	517714	RelationalExpression	strlen ( m -> name ) > 30		517624	0		>			
ANR	517715	CallExpression	strlen ( m -> name )		517624	0					
ANR	517716	Callee	strlen		517624	0					
ANR	517717	Identifier	strlen		517624	0					
ANR	517718	ArgumentList	m -> name		517624	1					
ANR	517719	Argument	m -> name		517624	0					
ANR	517720	PtrMemberAccess	m -> name		517624	0					
ANR	517721	Identifier	m		517624	0					
ANR	517722	Identifier	name		517624	1					
ANR	517723	PrimaryExpression	30		517624	1					
ANR	517724	AndExpression	"m -> bind && ( ! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR ) || ! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR ) ) && ! strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" )"		517624	1		&&			
ANR	517725	PtrMemberAccess	m -> bind		517624	0					
ANR	517726	Identifier	m		517624	0					
ANR	517727	Identifier	bind		517624	1					
ANR	517728	AndExpression	"( ! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR ) || ! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR ) ) && ! strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" )"		517624	1		&&			
ANR	517729	OrExpression	"! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR ) || ! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR )"		517624	0		||			
ANR	517730	UnaryOperationExpression	"! strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR )"		517624	0					
ANR	517731	UnaryOperator	!		517624	0					
ANR	517732	CallExpression	"strcmp ( m -> bind , R_BIN_BIND_LOCAL_STR )"		517624	1					
ANR	517733	Callee	strcmp		517624	0					
ANR	517734	Identifier	strcmp		517624	0					
ANR	517735	ArgumentList	m -> bind		517624	1					
ANR	517736	Argument	m -> bind		517624	0					
ANR	517737	PtrMemberAccess	m -> bind		517624	0					
ANR	517738	Identifier	m		517624	0					
ANR	517739	Identifier	bind		517624	1					
ANR	517740	Argument	R_BIN_BIND_LOCAL_STR		517624	1					
ANR	517741	Identifier	R_BIN_BIND_LOCAL_STR		517624	0					
ANR	517742	UnaryOperationExpression	"! strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR )"		517624	1					
ANR	517743	UnaryOperator	!		517624	0					
ANR	517744	CallExpression	"strcmp ( m -> bind , R_BIN_BIND_GLOBAL_STR )"		517624	1					
ANR	517745	Callee	strcmp		517624	0					
ANR	517746	Identifier	strcmp		517624	0					
ANR	517747	ArgumentList	m -> bind		517624	1					
ANR	517748	Argument	m -> bind		517624	0					
ANR	517749	PtrMemberAccess	m -> bind		517624	0					
ANR	517750	Identifier	m		517624	0					
ANR	517751	Identifier	bind		517624	1					
ANR	517752	Argument	R_BIN_BIND_GLOBAL_STR		517624	1					
ANR	517753	Identifier	R_BIN_BIND_GLOBAL_STR		517624	0					
ANR	517754	UnaryOperationExpression	"! strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" )"		517624	1					
ANR	517755	UnaryOperator	!		517624	0					
ANR	517756	CallExpression	"strcmp ( m -> name + strlen ( m -> name ) - 31 , "".onCreate(Landroid/os/Bundle;)V"" )"		517624	1					
ANR	517757	Callee	strcmp		517624	0					
ANR	517758	Identifier	strcmp		517624	0					
ANR	517759	ArgumentList	m -> name + strlen ( m -> name ) - 31		517624	1					
ANR	517760	Argument	m -> name + strlen ( m -> name ) - 31		517624	0					
ANR	517761	AdditiveExpression	m -> name + strlen ( m -> name ) - 31		517624	0		+			
ANR	517762	PtrMemberAccess	m -> name		517624	0					
ANR	517763	Identifier	m		517624	0					
ANR	517764	Identifier	name		517624	1					
ANR	517765	AdditiveExpression	strlen ( m -> name ) - 31		517624	1		-			
ANR	517766	CallExpression	strlen ( m -> name )		517624	0					
ANR	517767	Callee	strlen		517624	0					
ANR	517768	Identifier	strlen		517624	0					
ANR	517769	ArgumentList	m -> name		517624	1					
ANR	517770	Argument	m -> name		517624	0					
ANR	517771	PtrMemberAccess	m -> name		517624	0					
ANR	517772	Identifier	m		517624	0					
ANR	517773	Identifier	name		517624	1					
ANR	517774	PrimaryExpression	31		517624	1					
ANR	517775	Argument	""".onCreate(Landroid/os/Bundle;)V"""		517624	1					
ANR	517776	PrimaryExpression	""".onCreate(Landroid/os/Bundle;)V"""		517624	0					
ANR	517777	CompoundStatement		20:44:580:580	517624	1					
ANR	517778	IfStatement	"if ( ! already_entry ( ret , m -> paddr ) )"		517624	0					
ANR	517779	Condition	"! already_entry ( ret , m -> paddr )"	1911:7:51568:51597	517624	0	True				
ANR	517780	UnaryOperationExpression	"! already_entry ( ret , m -> paddr )"		517624	0					
ANR	517781	UnaryOperator	!		517624	0					
ANR	517782	CallExpression	"already_entry ( ret , m -> paddr )"		517624	1					
ANR	517783	Callee	already_entry		517624	0					
ANR	517784	Identifier	already_entry		517624	0					
ANR	517785	ArgumentList	ret		517624	1					
ANR	517786	Argument	ret		517624	0					
ANR	517787	Identifier	ret		517624	0					
ANR	517788	Argument	m -> paddr		517624	1					
ANR	517789	PtrMemberAccess	m -> paddr		517624	0					
ANR	517790	Identifier	m		517624	0					
ANR	517791	Identifier	paddr		517624	1					
ANR	517792	CompoundStatement		21:39:621:621	517624	1					
ANR	517793	IfStatement	if ( ( ptr = R_NEW0 ( RBinAddr ) ) )		517624	0					
ANR	517794	Condition	ptr = R_NEW0 ( RBinAddr )	1912:8:51610:51634	517624	0	True				
ANR	517795	AssignmentExpression	ptr = R_NEW0 ( RBinAddr )		517624	0		=			
ANR	517796	Identifier	ptr		517624	0					
ANR	517797	CallExpression	R_NEW0 ( RBinAddr )		517624	1					
ANR	517798	Callee	R_NEW0		517624	0					
ANR	517799	Identifier	R_NEW0		517624	0					
ANR	517800	ArgumentList	RBinAddr		517624	1					
ANR	517801	Argument	RBinAddr		517624	0					
ANR	517802	Identifier	RBinAddr		517624	0					
ANR	517803	CompoundStatement		22:35:658:658	517624	1					
ANR	517804	ExpressionStatement	ptr -> paddr = ptr -> vaddr = m -> paddr	1913:5:51644:51678	517624	0	True				
ANR	517805	AssignmentExpression	ptr -> paddr = ptr -> vaddr = m -> paddr		517624	0		=			
ANR	517806	PtrMemberAccess	ptr -> paddr		517624	0					
ANR	517807	Identifier	ptr		517624	0					
ANR	517808	Identifier	paddr		517624	1					
ANR	517809	AssignmentExpression	ptr -> vaddr = m -> paddr		517624	1		=			
ANR	517810	PtrMemberAccess	ptr -> vaddr		517624	0					
ANR	517811	Identifier	ptr		517624	0					
ANR	517812	Identifier	vaddr		517624	1					
ANR	517813	PtrMemberAccess	m -> paddr		517624	1					
ANR	517814	Identifier	m		517624	0					
ANR	517815	Identifier	paddr		517624	1					
ANR	517816	ExpressionStatement	"r_list_append ( ret , ptr )"	1914:5:51685:51709	517624	1	True				
ANR	517817	CallExpression	"r_list_append ( ret , ptr )"		517624	0					
ANR	517818	Callee	r_list_append		517624	0					
ANR	517819	Identifier	r_list_append		517624	0					
ANR	517820	ArgumentList	ret		517624	1					
ANR	517821	Argument	ret		517624	0					
ANR	517822	Identifier	ret		517624	0					
ANR	517823	Argument	ptr		517624	1					
ANR	517824	Identifier	ptr		517624	0					
ANR	517825	IfStatement	if ( r_list_empty ( ret ) )		517624	18					
ANR	517826	Condition	r_list_empty ( ret )	1921:5:51777:51794	517624	0	True				
ANR	517827	CallExpression	r_list_empty ( ret )		517624	0					
ANR	517828	Callee	r_list_empty		517624	0					
ANR	517829	Identifier	r_list_empty		517624	0					
ANR	517830	ArgumentList	ret		517624	1					
ANR	517831	Argument	ret		517624	0					
ANR	517832	Identifier	ret		517624	0					
ANR	517833	CompoundStatement		31:25:818:818	517624	1					
ANR	517834	Statement	r_list_foreach	1922:2:51801:51814	517624	0	True				
ANR	517835	Statement	(	1922:17:51816:51816	517624	1	True				
ANR	517836	Statement	bin	1922:18:51817:51819	517624	2	True				
ANR	517837	Statement	->	1922:21:51820:51821	517624	3	True				
ANR	517838	Statement	methods_list	1922:23:51822:51833	517624	4	True				
ANR	517839	Statement	","	1922:35:51834:51834	517624	5	True				
ANR	517840	Statement	iter	1922:37:51836:51839	517624	6	True				
ANR	517841	Statement	","	1922:41:51840:51840	517624	7	True				
ANR	517842	Statement	m	1922:43:51842:51842	517624	8	True				
ANR	517843	Statement	)	1922:44:51843:51843	517624	9	True				
ANR	517844	CompoundStatement		32:46:866:866	517624	10					
ANR	517845	IfStatement	"if ( strlen ( m -> name ) > 26 && ! strcmp ( m -> name + strlen ( m -> name ) - 27 , "".main([Ljava/lang/String;)V"" ) )"		517624	0					
ANR	517846	Condition	"strlen ( m -> name ) > 26 && ! strcmp ( m -> name + strlen ( m -> name ) - 27 , "".main([Ljava/lang/String;)V"" )"	1923:7:51854:51966	517624	0	True				
ANR	517847	AndExpression	"strlen ( m -> name ) > 26 && ! strcmp ( m -> name + strlen ( m -> name ) - 27 , "".main([Ljava/lang/String;)V"" )"		517624	0		&&			
ANR	517848	RelationalExpression	strlen ( m -> name ) > 26		517624	0		>			
ANR	517849	CallExpression	strlen ( m -> name )		517624	0					
ANR	517850	Callee	strlen		517624	0					
ANR	517851	Identifier	strlen		517624	0					
ANR	517852	ArgumentList	m -> name		517624	1					
ANR	517853	Argument	m -> name		517624	0					
ANR	517854	PtrMemberAccess	m -> name		517624	0					
ANR	517855	Identifier	m		517624	0					
ANR	517856	Identifier	name		517624	1					
ANR	517857	PrimaryExpression	26		517624	1					
ANR	517858	UnaryOperationExpression	"! strcmp ( m -> name + strlen ( m -> name ) - 27 , "".main([Ljava/lang/String;)V"" )"		517624	1					
ANR	517859	UnaryOperator	!		517624	0					
ANR	517860	CallExpression	"strcmp ( m -> name + strlen ( m -> name ) - 27 , "".main([Ljava/lang/String;)V"" )"		517624	1					
ANR	517861	Callee	strcmp		517624	0					
ANR	517862	Identifier	strcmp		517624	0					
ANR	517863	ArgumentList	m -> name + strlen ( m -> name ) - 27		517624	1					
ANR	517864	Argument	m -> name + strlen ( m -> name ) - 27		517624	0					
ANR	517865	AdditiveExpression	m -> name + strlen ( m -> name ) - 27		517624	0		+			
ANR	517866	PtrMemberAccess	m -> name		517624	0					
ANR	517867	Identifier	m		517624	0					
ANR	517868	Identifier	name		517624	1					
ANR	517869	AdditiveExpression	strlen ( m -> name ) - 27		517624	1		-			
ANR	517870	CallExpression	strlen ( m -> name )		517624	0					
ANR	517871	Callee	strlen		517624	0					
ANR	517872	Identifier	strlen		517624	0					
ANR	517873	ArgumentList	m -> name		517624	1					
ANR	517874	Argument	m -> name		517624	0					
ANR	517875	PtrMemberAccess	m -> name		517624	0					
ANR	517876	Identifier	m		517624	0					
ANR	517877	Identifier	name		517624	1					
ANR	517878	PrimaryExpression	27		517624	1					
ANR	517879	Argument	""".main([Ljava/lang/String;)V"""		517624	1					
ANR	517880	PrimaryExpression	""".main([Ljava/lang/String;)V"""		517624	0					
ANR	517881	CompoundStatement		35:41:990:990	517624	1					
ANR	517882	IfStatement	"if ( ! already_entry ( ret , m -> paddr ) )"		517624	0					
ANR	517883	Condition	"! already_entry ( ret , m -> paddr )"	1926:8:51979:52008	517624	0	True				
ANR	517884	UnaryOperationExpression	"! already_entry ( ret , m -> paddr )"		517624	0					
ANR	517885	UnaryOperator	!		517624	0					
ANR	517886	CallExpression	"already_entry ( ret , m -> paddr )"		517624	1					
ANR	517887	Callee	already_entry		517624	0					
ANR	517888	Identifier	already_entry		517624	0					
ANR	517889	ArgumentList	ret		517624	1					
ANR	517890	Argument	ret		517624	0					
ANR	517891	Identifier	ret		517624	0					
ANR	517892	Argument	m -> paddr		517624	1					
ANR	517893	PtrMemberAccess	m -> paddr		517624	0					
ANR	517894	Identifier	m		517624	0					
ANR	517895	Identifier	paddr		517624	1					
ANR	517896	CompoundStatement		36:40:1032:1032	517624	1					
ANR	517897	IfStatement	if ( ( ptr = R_NEW0 ( RBinAddr ) ) )		517624	0					
ANR	517898	Condition	ptr = R_NEW0 ( RBinAddr )	1927:9:52022:52046	517624	0	True				
ANR	517899	AssignmentExpression	ptr = R_NEW0 ( RBinAddr )		517624	0		=			
ANR	517900	Identifier	ptr		517624	0					
ANR	517901	CallExpression	R_NEW0 ( RBinAddr )		517624	1					
ANR	517902	Callee	R_NEW0		517624	0					
ANR	517903	Identifier	R_NEW0		517624	0					
ANR	517904	ArgumentList	RBinAddr		517624	1					
ANR	517905	Argument	RBinAddr		517624	0					
ANR	517906	Identifier	RBinAddr		517624	0					
ANR	517907	CompoundStatement		37:36:1070:1070	517624	1					
ANR	517908	ExpressionStatement	ptr -> paddr = ptr -> vaddr = m -> paddr	1928:6:52057:52091	517624	0	True				
ANR	517909	AssignmentExpression	ptr -> paddr = ptr -> vaddr = m -> paddr		517624	0		=			
ANR	517910	PtrMemberAccess	ptr -> paddr		517624	0					
ANR	517911	Identifier	ptr		517624	0					
ANR	517912	Identifier	paddr		517624	1					
ANR	517913	AssignmentExpression	ptr -> vaddr = m -> paddr		517624	1		=			
ANR	517914	PtrMemberAccess	ptr -> vaddr		517624	0					
ANR	517915	Identifier	ptr		517624	0					
ANR	517916	Identifier	vaddr		517624	1					
ANR	517917	PtrMemberAccess	m -> paddr		517624	1					
ANR	517918	Identifier	m		517624	0					
ANR	517919	Identifier	paddr		517624	1					
ANR	517920	ExpressionStatement	"r_list_append ( ret , ptr )"	1929:6:52099:52123	517624	1	True				
ANR	517921	CallExpression	"r_list_append ( ret , ptr )"		517624	0					
ANR	517922	Callee	r_list_append		517624	0					
ANR	517923	Identifier	r_list_append		517624	0					
ANR	517924	ArgumentList	ret		517624	1					
ANR	517925	Argument	ret		517624	0					
ANR	517926	Identifier	ret		517624	0					
ANR	517927	Argument	ptr		517624	1					
ANR	517928	Identifier	ptr		517624	0					
ANR	517929	IfStatement	if ( r_list_empty ( ret ) )		517624	19					
ANR	517930	Condition	r_list_empty ( ret )	1938:5:52250:52267	517624	0	True				
ANR	517931	CallExpression	r_list_empty ( ret )		517624	0					
ANR	517932	Callee	r_list_empty		517624	0					
ANR	517933	Identifier	r_list_empty		517624	0					
ANR	517934	ArgumentList	ret		517624	1					
ANR	517935	Argument	ret		517624	0					
ANR	517936	Identifier	ret		517624	0					
ANR	517937	CompoundStatement		48:25:1291:1291	517624	1					
ANR	517938	IfStatement	"if ( ! already_entry ( ret , bin -> code_from ) )"		517624	0					
ANR	517939	Condition	"! already_entry ( ret , bin -> code_from )"	1939:6:52278:52313	517624	0	True				
ANR	517940	UnaryOperationExpression	"! already_entry ( ret , bin -> code_from )"		517624	0					
ANR	517941	UnaryOperator	!		517624	0					
ANR	517942	CallExpression	"already_entry ( ret , bin -> code_from )"		517624	1					
ANR	517943	Callee	already_entry		517624	0					
ANR	517944	Identifier	already_entry		517624	0					
ANR	517945	ArgumentList	ret		517624	1					
ANR	517946	Argument	ret		517624	0					
ANR	517947	Identifier	ret		517624	0					
ANR	517948	Argument	bin -> code_from		517624	1					
ANR	517949	PtrMemberAccess	bin -> code_from		517624	0					
ANR	517950	Identifier	bin		517624	0					
ANR	517951	Identifier	code_from		517624	1					
ANR	517952	CompoundStatement		49:44:1337:1337	517624	1					
ANR	517953	ExpressionStatement	ptr = R_NEW0 ( RBinAddr )	1940:3:52321:52344	517624	0	True				
ANR	517954	AssignmentExpression	ptr = R_NEW0 ( RBinAddr )		517624	0		=			
ANR	517955	Identifier	ptr		517624	0					
ANR	517956	CallExpression	R_NEW0 ( RBinAddr )		517624	1					
ANR	517957	Callee	R_NEW0		517624	0					
ANR	517958	Identifier	R_NEW0		517624	0					
ANR	517959	ArgumentList	RBinAddr		517624	1					
ANR	517960	Argument	RBinAddr		517624	0					
ANR	517961	Identifier	RBinAddr		517624	0					
ANR	517962	IfStatement	if ( ptr )		517624	1					
ANR	517963	Condition	ptr	1941:7:52353:52355	517624	0	True				
ANR	517964	Identifier	ptr		517624	0					
ANR	517965	CompoundStatement		51:12:1379:1379	517624	1					
ANR	517966	ExpressionStatement	ptr -> paddr = ptr -> vaddr = bin -> code_from	1942:4:52364:52404	517624	0	True				
ANR	517967	AssignmentExpression	ptr -> paddr = ptr -> vaddr = bin -> code_from		517624	0		=			
ANR	517968	PtrMemberAccess	ptr -> paddr		517624	0					
ANR	517969	Identifier	ptr		517624	0					
ANR	517970	Identifier	paddr		517624	1					
ANR	517971	AssignmentExpression	ptr -> vaddr = bin -> code_from		517624	1		=			
ANR	517972	PtrMemberAccess	ptr -> vaddr		517624	0					
ANR	517973	Identifier	ptr		517624	0					
ANR	517974	Identifier	vaddr		517624	1					
ANR	517975	PtrMemberAccess	bin -> code_from		517624	1					
ANR	517976	Identifier	bin		517624	0					
ANR	517977	Identifier	code_from		517624	1					
ANR	517978	ExpressionStatement	"r_list_append ( ret , ptr )"	1943:4:52410:52434	517624	1	True				
ANR	517979	CallExpression	"r_list_append ( ret , ptr )"		517624	0					
ANR	517980	Callee	r_list_append		517624	0					
ANR	517981	Identifier	r_list_append		517624	0					
ANR	517982	ArgumentList	ret		517624	1					
ANR	517983	Argument	ret		517624	0					
ANR	517984	Identifier	ret		517624	0					
ANR	517985	Argument	ptr		517624	1					
ANR	517986	Identifier	ptr		517624	0					
ANR	517987	ReturnStatement	return ret ;	1948:1:52456:52466	517624	20	True				
ANR	517988	Identifier	ret		517624	0					
ANR	517989	ReturnType	static RList *		517624	1					
ANR	517990	Identifier	entries		517624	2					
ANR	517991	ParameterList	RBinFile * bf		517624	3					
ANR	517992	Parameter	RBinFile * bf	1891:22:50964:50975	517624	0	True				
ANR	517993	ParameterType	RBinFile *		517624	0					
ANR	517994	Identifier	bf		517624	1					
ANR	517995	CFGEntryNode	ENTRY		517624		True				
ANR	517996	CFGExitNode	EXIT		517624		True				
ANR	517997	Symbol	ptr -> paddr		517624						
ANR	517998	Symbol	bf		517624						
ANR	517999	Symbol	bin		517624						
ANR	518000	Symbol	* bin		517624						
ANR	518001	Symbol	* bf -> o		517624						
ANR	518002	Symbol	ptr -> vaddr		517624						
ANR	518003	Symbol	strlen		517624						
ANR	518004	Symbol	bf -> o		517624						
ANR	518005	Symbol	m -> paddr		517624						
ANR	518006	Symbol	* ptr		517624						
ANR	518007	Symbol	free		517624						
ANR	518008	Symbol	bin -> code_from		517624						
ANR	518009	Symbol	bf -> o -> bin_obj		517624						
ANR	518010	Symbol	ret		517624						
ANR	518011	Symbol	strcmp		517624						
ANR	518012	Symbol	bin -> methods_list		517624						
ANR	518013	Symbol	NULL		517624						
ANR	518014	Symbol	m -> name		517624						
ANR	518015	Symbol	r_list_newf		517624						
ANR	518016	Symbol	m -> bind		517624						
ANR	518017	Symbol	iter		517624						
ANR	518018	Symbol	* bf		517624						
ANR	518019	Symbol	m		517624						
ANR	518020	Symbol	ptr		517624						
ANR	518021	Symbol	R_NEW0		517624						
ANR	518022	Symbol	* * bf		517624						
ANR	518023	Symbol	RBinAddr		517624						
ANR	518024	Symbol	already_entry		517624						
ANR	518025	Symbol	* m		517624						
ANR	518026	Symbol	r_list_empty		517624						
ANR	518027	Symbol	R_BIN_BIND_GLOBAL_STR		517624						
ANR	518028	Symbol	R_BIN_BIND_LOCAL_STR		517624						
ANR	518029	Function	getoffset	1951:0:52471:53107							
ANR	518030	FunctionDef	"getoffset (RBinFile * bf , int type , int idx)"		518029	0					
ANR	518031	CompoundStatement		1951:54:52525:53107	518029	0					
ANR	518032	IdentifierDeclStatement	struct r_bin_dex_obj_t * dex = bf -> o -> bin_obj ;	1952:1:52528:52572	518029	0	True				
ANR	518033	IdentifierDecl	* dex = bf -> o -> bin_obj		518029	0					
ANR	518034	IdentifierDeclType	struct r_bin_dex_obj_t *		518029	0					
ANR	518035	Identifier	dex		518029	1					
ANR	518036	AssignmentExpression	* dex = bf -> o -> bin_obj		518029	2		=			
ANR	518037	Identifier	dex		518029	0					
ANR	518038	PtrMemberAccess	bf -> o -> bin_obj		518029	1					
ANR	518039	PtrMemberAccess	bf -> o		518029	0					
ANR	518040	Identifier	bf		518029	0					
ANR	518041	Identifier	o		518029	1					
ANR	518042	Identifier	bin_obj		518029	1					
ANR	518043	SwitchStatement	switch ( type )		518029	1					
ANR	518044	Condition	type	1953:9:52583:52586	518029	0	True				
ANR	518045	Identifier	type		518029	0					
ANR	518046	CompoundStatement		3:15:63:63	518029	1					
ANR	518047	Label	case 'm' :	1954:1:52592:52600	518029	0	True				
ANR	518048	ReturnStatement	"return offset_of_method_idx ( bf , dex , idx ) ;"	1956:2:52636:52678	518029	1	True				
ANR	518049	CallExpression	"offset_of_method_idx ( bf , dex , idx )"		518029	0					
ANR	518050	Callee	offset_of_method_idx		518029	0					
ANR	518051	Identifier	offset_of_method_idx		518029	0					
ANR	518052	ArgumentList	bf		518029	1					
ANR	518053	Argument	bf		518029	0					
ANR	518054	Identifier	bf		518029	0					
ANR	518055	Argument	dex		518029	1					
ANR	518056	Identifier	dex		518029	0					
ANR	518057	Argument	idx		518029	2					
ANR	518058	Identifier	idx		518029	0					
ANR	518059	Label	case 'f' :	1957:1:52681:52689	518029	2	True				
ANR	518060	ReturnStatement	"return dex_field_offset ( dex , idx ) ;"	1958:2:52693:52727	518029	3	True				
ANR	518061	CallExpression	"dex_field_offset ( dex , idx )"		518029	0					
ANR	518062	Callee	dex_field_offset		518029	0					
ANR	518063	Identifier	dex_field_offset		518029	0					
ANR	518064	ArgumentList	dex		518029	1					
ANR	518065	Argument	dex		518029	0					
ANR	518066	Identifier	dex		518029	0					
ANR	518067	Argument	idx		518029	1					
ANR	518068	Identifier	idx		518029	0					
ANR	518069	Label	case 'o' :	1959:1:52730:52738	518029	4	True				
ANR	518070	ExpressionStatement	"eprintf ( ""TODO: getoffset object\\n"" )"	1960:2:52753:52789	518029	5	True				
ANR	518071	CallExpression	"eprintf ( ""TODO: getoffset object\\n"" )"		518029	0					
ANR	518072	Callee	eprintf		518029	0					
ANR	518073	Identifier	eprintf		518029	0					
ANR	518074	ArgumentList	"""TODO: getoffset object\\n"""		518029	1					
ANR	518075	Argument	"""TODO: getoffset object\\n"""		518029	0					
ANR	518076	PrimaryExpression	"""TODO: getoffset object\\n"""		518029	0					
ANR	518077	ReturnStatement	return 0 ;	1961:2:52793:52801	518029	6	True				
ANR	518078	PrimaryExpression	0		518029	0					
ANR	518079	Label	case 's' :	1962:1:52841:52849	518029	7	True				
ANR	518080	IfStatement	if ( dex -> header . strings_size > idx )		518029	8					
ANR	518081	Condition	dex -> header . strings_size > idx	1963:6:52868:52897	518029	0	True				
ANR	518082	RelationalExpression	dex -> header . strings_size > idx		518029	0		>			
ANR	518083	MemberAccess	dex -> header . strings_size		518029	0					
ANR	518084	PtrMemberAccess	dex -> header		518029	0					
ANR	518085	Identifier	dex		518029	0					
ANR	518086	Identifier	header		518029	1					
ANR	518087	Identifier	strings_size		518029	1					
ANR	518088	Identifier	idx		518029	1					
ANR	518089	CompoundStatement		13:38:374:374	518029	1					
ANR	518090	IfStatement	if ( dex -> strings )		518029	0					
ANR	518091	Condition	dex -> strings	1964:7:52909:52920	518029	0	True				
ANR	518092	PtrMemberAccess	dex -> strings		518029	0					
ANR	518093	Identifier	dex		518029	0					
ANR	518094	Identifier	strings		518029	1					
ANR	518095	CompoundStatement		14:21:397:397	518029	1					
ANR	518096	ReturnStatement	return dex -> strings [ idx ] ;	1965:4:52929:52953	518029	0	True				
ANR	518097	ArrayIndexing	dex -> strings [ idx ]		518029	0					
ANR	518098	PtrMemberAccess	dex -> strings		518029	0					
ANR	518099	Identifier	dex		518029	0					
ANR	518100	Identifier	strings		518029	1					
ANR	518101	Identifier	idx		518029	1					
ANR	518102	BreakStatement	break ;	1968:2:52966:52971	518029	9	True				
ANR	518103	Label	case 't' :	1969:1:52974:52982	518029	10	True				
ANR	518104	ReturnStatement	"return dex_get_type_offset ( bf , idx ) ;"	1970:2:52994:53030	518029	11	True				
ANR	518105	CallExpression	"dex_get_type_offset ( bf , idx )"		518029	0					
ANR	518106	Callee	dex_get_type_offset		518029	0					
ANR	518107	Identifier	dex_get_type_offset		518029	0					
ANR	518108	ArgumentList	bf		518029	1					
ANR	518109	Argument	bf		518029	0					
ANR	518110	Identifier	bf		518029	0					
ANR	518111	Argument	idx		518029	1					
ANR	518112	Identifier	idx		518029	0					
ANR	518113	Label	case 'c' :	1971:1:53033:53041	518029	12	True				
ANR	518114	ReturnStatement	"return dex_get_type_offset ( bf , idx ) ;"	1972:2:53054:53090	518029	13	True				
ANR	518115	CallExpression	"dex_get_type_offset ( bf , idx )"		518029	0					
ANR	518116	Callee	dex_get_type_offset		518029	0					
ANR	518117	Identifier	dex_get_type_offset		518029	0					
ANR	518118	ArgumentList	bf		518029	1					
ANR	518119	Argument	bf		518029	0					
ANR	518120	Identifier	bf		518029	0					
ANR	518121	Argument	idx		518029	1					
ANR	518122	Identifier	idx		518029	0					
ANR	518123	ReturnStatement	return - 1 ;	1974:1:53096:53105	518029	2	True				
ANR	518124	UnaryOperationExpression	- 1		518029	0					
ANR	518125	UnaryOperator	-		518029	0					
ANR	518126	PrimaryExpression	1		518029	1					
ANR	518127	ReturnType	static int		518029	1					
ANR	518128	Identifier	getoffset		518029	2					
ANR	518129	ParameterList	"RBinFile * bf , int type , int idx"		518029	3					
ANR	518130	Parameter	RBinFile * bf	1951:21:52492:52503	518029	0	True				
ANR	518131	ParameterType	RBinFile *		518029	0					
ANR	518132	Identifier	bf		518029	1					
ANR	518133	Parameter	int type	1951:35:52506:52513	518029	1	True				
ANR	518134	ParameterType	int		518029	0					
ANR	518135	Identifier	type		518029	1					
ANR	518136	Parameter	int idx	1951:45:52516:52522	518029	2	True				
ANR	518137	ParameterType	int		518029	0					
ANR	518138	Identifier	idx		518029	1					
ANR	518139	CFGEntryNode	ENTRY		518029		True				
ANR	518140	CFGExitNode	EXIT		518029		True				
ANR	518141	Symbol	bf -> o -> bin_obj		518029						
ANR	518142	Symbol	dex -> header		518029						
ANR	518143	Symbol	bf		518029						
ANR	518144	Symbol	dex -> header . strings_size		518029						
ANR	518145	Symbol	* bf		518029						
ANR	518146	Symbol	* * dex		518029						
ANR	518147	Symbol	type		518029						
ANR	518148	Symbol	dex_field_offset		518029						
ANR	518149	Symbol	* bf -> o		518029						
ANR	518150	Symbol	dex_get_type_offset		518029						
ANR	518151	Symbol	* dex -> strings		518029						
ANR	518152	Symbol	* * bf		518029						
ANR	518153	Symbol	dex -> strings		518029						
ANR	518154	Symbol	bf -> o		518029						
ANR	518155	Symbol	dex		518029						
ANR	518156	Symbol	* idx		518029						
ANR	518157	Symbol	idx		518029						
ANR	518158	Symbol	offset_of_method_idx		518029						
ANR	518159	Symbol	* dex		518029						
ANR	518160	Function	getname	1977:0:53110:53542							
ANR	518161	FunctionDef	"getname (RBinFile * bf , int type , int idx , bool sd)"		518160	0					
ANR	518162	CompoundStatement		1977:63:53173:53542	518160	0					
ANR	518163	ExpressionStatement	simplifiedDemangling = sd	1978:1:53176:53201	518160	0	True				
ANR	518164	AssignmentExpression	simplifiedDemangling = sd		518160	0		=			
ANR	518165	Identifier	simplifiedDemangling		518160	0					
ANR	518166	Identifier	sd		518160	1					
ANR	518167	IdentifierDeclStatement	struct r_bin_dex_obj_t * dex = bf -> o -> bin_obj ;	1979:1:53224:53268	518160	1	True				
ANR	518168	IdentifierDecl	* dex = bf -> o -> bin_obj		518160	0					
ANR	518169	IdentifierDeclType	struct r_bin_dex_obj_t *		518160	0					
ANR	518170	Identifier	dex		518160	1					
ANR	518171	AssignmentExpression	* dex = bf -> o -> bin_obj		518160	2		=			
ANR	518172	Identifier	dex		518160	0					
ANR	518173	PtrMemberAccess	bf -> o -> bin_obj		518160	1					
ANR	518174	PtrMemberAccess	bf -> o		518160	0					
ANR	518175	Identifier	bf		518160	0					
ANR	518176	Identifier	o		518160	1					
ANR	518177	Identifier	bin_obj		518160	1					
ANR	518178	SwitchStatement	switch ( type )		518160	2					
ANR	518179	Condition	type	1980:9:53279:53282	518160	0	True				
ANR	518180	Identifier	type		518160	0					
ANR	518181	CompoundStatement		4:15:111:111	518160	1					
ANR	518182	Label	case 'm' :	1981:1:53288:53296	518160	0	True				
ANR	518183	ReturnStatement	"return dex_method_fullname ( dex , idx ) ;"	1982:2:53311:53348	518160	1	True				
ANR	518184	CallExpression	"dex_method_fullname ( dex , idx )"		518160	0					
ANR	518185	Callee	dex_method_fullname		518160	0					
ANR	518186	Identifier	dex_method_fullname		518160	0					
ANR	518187	ArgumentList	dex		518160	1					
ANR	518188	Argument	dex		518160	0					
ANR	518189	Identifier	dex		518160	0					
ANR	518190	Argument	idx		518160	1					
ANR	518191	Identifier	idx		518160	0					
ANR	518192	Label	case 'c' :	1983:1:53351:53359	518160	2	True				
ANR	518193	ReturnStatement	"return dex_class_name_byid ( dex , idx ) ;"	1984:2:53374:53411	518160	3	True				
ANR	518194	CallExpression	"dex_class_name_byid ( dex , idx )"		518160	0					
ANR	518195	Callee	dex_class_name_byid		518160	0					
ANR	518196	Identifier	dex_class_name_byid		518160	0					
ANR	518197	ArgumentList	dex		518160	1					
ANR	518198	Argument	dex		518160	0					
ANR	518199	Identifier	dex		518160	0					
ANR	518200	Argument	idx		518160	1					
ANR	518201	Identifier	idx		518160	0					
ANR	518202	Label	case 'f' :	1985:1:53414:53422	518160	4	True				
ANR	518203	ReturnStatement	"return dex_field_name ( dex , idx ) ;"	1986:2:53436:53468	518160	5	True				
ANR	518204	CallExpression	"dex_field_name ( dex , idx )"		518160	0					
ANR	518205	Callee	dex_field_name		518160	0					
ANR	518206	Identifier	dex_field_name		518160	0					
ANR	518207	ArgumentList	dex		518160	1					
ANR	518208	Argument	dex		518160	0					
ANR	518209	Identifier	dex		518160	0					
ANR	518210	Argument	idx		518160	1					
ANR	518211	Identifier	idx		518160	0					
ANR	518212	Label	case 'p' :	1987:1:53471:53479	518160	6	True				
ANR	518213	ReturnStatement	"return dex_get_proto ( dex , idx ) ;"	1988:2:53492:53523	518160	7	True				
ANR	518214	CallExpression	"dex_get_proto ( dex , idx )"		518160	0					
ANR	518215	Callee	dex_get_proto		518160	0					
ANR	518216	Identifier	dex_get_proto		518160	0					
ANR	518217	ArgumentList	dex		518160	1					
ANR	518218	Argument	dex		518160	0					
ANR	518219	Identifier	dex		518160	0					
ANR	518220	Argument	idx		518160	1					
ANR	518221	Identifier	idx		518160	0					
ANR	518222	ReturnStatement	return NULL ;	1990:1:53529:53540	518160	3	True				
ANR	518223	Identifier	NULL		518160	0					
ANR	518224	ReturnType	static char *		518160	1					
ANR	518225	Identifier	getname		518160	2					
ANR	518226	ParameterList	"RBinFile * bf , int type , int idx , bool sd"		518160	3					
ANR	518227	Parameter	RBinFile * bf	1977:21:53131:53142	518160	0	True				
ANR	518228	ParameterType	RBinFile *		518160	0					
ANR	518229	Identifier	bf		518160	1					
ANR	518230	Parameter	int type	1977:35:53145:53152	518160	1	True				
ANR	518231	ParameterType	int		518160	0					
ANR	518232	Identifier	type		518160	1					
ANR	518233	Parameter	int idx	1977:45:53155:53161	518160	2	True				
ANR	518234	ParameterType	int		518160	0					
ANR	518235	Identifier	idx		518160	1					
ANR	518236	Parameter	bool sd	1977:54:53164:53170	518160	3	True				
ANR	518237	ParameterType	bool		518160	0					
ANR	518238	Identifier	sd		518160	1					
ANR	518239	CFGEntryNode	ENTRY		518160		True				
ANR	518240	CFGExitNode	EXIT		518160		True				
ANR	518241	Symbol	bf -> o -> bin_obj		518160						
ANR	518242	Symbol	NULL		518160						
ANR	518243	Symbol	bf		518160						
ANR	518244	Symbol	dex_method_fullname		518160						
ANR	518245	Symbol	* bf		518160						
ANR	518246	Symbol	dex_class_name_byid		518160						
ANR	518247	Symbol	type		518160						
ANR	518248	Symbol	* bf -> o		518160						
ANR	518249	Symbol	dex_field_name		518160						
ANR	518250	Symbol	dex_get_proto		518160						
ANR	518251	Symbol	sd		518160						
ANR	518252	Symbol	* * bf		518160						
ANR	518253	Symbol	bf -> o		518160						
ANR	518254	Symbol	dex		518160						
ANR	518255	Symbol	simplifiedDemangling		518160						
ANR	518256	Symbol	idx		518160						
ANR	518257	Function	sections	1993:0:53545:55939							
ANR	518258	FunctionDef	sections (RBinFile * bf)		518257	0					
ANR	518259	CompoundStatement		1993:37:53582:55939	518257	0					
ANR	518260	IdentifierDeclStatement	struct r_bin_dex_obj_t * bin = bf -> o -> bin_obj ;	1994:1:53585:53629	518257	0	True				
ANR	518261	IdentifierDecl	* bin = bf -> o -> bin_obj		518257	0					
ANR	518262	IdentifierDeclType	struct r_bin_dex_obj_t *		518257	0					
ANR	518263	Identifier	bin		518257	1					
ANR	518264	AssignmentExpression	* bin = bf -> o -> bin_obj		518257	2		=			
ANR	518265	Identifier	bin		518257	0					
ANR	518266	PtrMemberAccess	bf -> o -> bin_obj		518257	1					
ANR	518267	PtrMemberAccess	bf -> o		518257	0					
ANR	518268	Identifier	bf		518257	0					
ANR	518269	Identifier	o		518257	1					
ANR	518270	Identifier	bin_obj		518257	1					
ANR	518271	IdentifierDeclStatement	RList * ml = methods ( bf ) ;	1995:1:53632:53656	518257	1	True				
ANR	518272	IdentifierDecl	* ml = methods ( bf )		518257	0					
ANR	518273	IdentifierDeclType	RList *		518257	0					
ANR	518274	Identifier	ml		518257	1					
ANR	518275	AssignmentExpression	* ml = methods ( bf )		518257	2		=			
ANR	518276	Identifier	ml		518257	0					
ANR	518277	CallExpression	methods ( bf )		518257	1					
ANR	518278	Callee	methods		518257	0					
ANR	518279	Identifier	methods		518257	0					
ANR	518280	ArgumentList	bf		518257	1					
ANR	518281	Argument	bf		518257	0					
ANR	518282	Identifier	bf		518257	0					
ANR	518283	IdentifierDeclStatement	RBinSection * ptr = NULL ;	1996:1:53659:53682	518257	2	True				
ANR	518284	IdentifierDecl	* ptr = NULL		518257	0					
ANR	518285	IdentifierDeclType	RBinSection *		518257	0					
ANR	518286	Identifier	ptr		518257	1					
ANR	518287	AssignmentExpression	* ptr = NULL		518257	2		=			
ANR	518288	Identifier	NULL		518257	0					
ANR	518289	Identifier	NULL		518257	1					
ANR	518290	IdentifierDeclStatement	"int ns , fsymsz = 0 ;"	1997:1:53685:53703	518257	3	True				
ANR	518291	IdentifierDecl	ns		518257	0					
ANR	518292	IdentifierDeclType	int		518257	0					
ANR	518293	Identifier	ns		518257	1					
ANR	518294	IdentifierDecl	fsymsz = 0		518257	1					
ANR	518295	IdentifierDeclType	int		518257	0					
ANR	518296	Identifier	fsymsz		518257	1					
ANR	518297	AssignmentExpression	fsymsz = 0		518257	2		=			
ANR	518298	Identifier	fsymsz		518257	0					
ANR	518299	PrimaryExpression	0		518257	1					
ANR	518300	IdentifierDeclStatement	RList * ret = NULL ;	1998:1:53706:53723	518257	4	True				
ANR	518301	IdentifierDecl	* ret = NULL		518257	0					
ANR	518302	IdentifierDeclType	RList *		518257	0					
ANR	518303	Identifier	ret		518257	1					
ANR	518304	AssignmentExpression	* ret = NULL		518257	2		=			
ANR	518305	Identifier	NULL		518257	0					
ANR	518306	Identifier	NULL		518257	1					
ANR	518307	IdentifierDeclStatement	RListIter * iter ;	1999:1:53726:53741	518257	5	True				
ANR	518308	IdentifierDecl	* iter		518257	0					
ANR	518309	IdentifierDeclType	RListIter *		518257	0					
ANR	518310	Identifier	iter		518257	1					
ANR	518311	IdentifierDeclStatement	RBinSymbol * m ;	2000:1:53744:53757	518257	6	True				
ANR	518312	IdentifierDecl	* m		518257	0					
ANR	518313	IdentifierDeclType	RBinSymbol *		518257	0					
ANR	518314	Identifier	m		518257	1					
ANR	518315	IdentifierDeclStatement	int fsym = 0 ;	2001:1:53760:53772	518257	7	True				
ANR	518316	IdentifierDecl	fsym = 0		518257	0					
ANR	518317	IdentifierDeclType	int		518257	0					
ANR	518318	Identifier	fsym		518257	1					
ANR	518319	AssignmentExpression	fsym = 0		518257	2		=			
ANR	518320	Identifier	fsym		518257	0					
ANR	518321	PrimaryExpression	0		518257	1					
ANR	518322	Statement	r_list_foreach	2003:1:53776:53789	518257	8	True				
ANR	518323	Statement	(	2003:16:53791:53791	518257	9	True				
ANR	518324	Statement	ml	2003:17:53792:53793	518257	10	True				
ANR	518325	Statement	","	2003:19:53794:53794	518257	11	True				
ANR	518326	Statement	iter	2003:21:53796:53799	518257	12	True				
ANR	518327	Statement	","	2003:25:53800:53800	518257	13	True				
ANR	518328	Statement	m	2003:27:53802:53802	518257	14	True				
ANR	518329	Statement	)	2003:28:53803:53803	518257	15	True				
ANR	518330	CompoundStatement		11:30:222:222	518257	16					
ANR	518331	IfStatement	if ( ! fsym || m -> paddr < fsym )		518257	0					
ANR	518332	Condition	! fsym || m -> paddr < fsym	2004:6:53813:53836	518257	0	True				
ANR	518333	OrExpression	! fsym || m -> paddr < fsym		518257	0		||			
ANR	518334	UnaryOperationExpression	! fsym		518257	0					
ANR	518335	UnaryOperator	!		518257	0					
ANR	518336	Identifier	fsym		518257	1					
ANR	518337	RelationalExpression	m -> paddr < fsym		518257	1		<			
ANR	518338	PtrMemberAccess	m -> paddr		518257	0					
ANR	518339	Identifier	m		518257	0					
ANR	518340	Identifier	paddr		518257	1					
ANR	518341	Identifier	fsym		518257	1					
ANR	518342	CompoundStatement		12:32:256:256	518257	1					
ANR	518343	ExpressionStatement	fsym = m -> paddr	2005:3:53844:53859	518257	0	True				
ANR	518344	AssignmentExpression	fsym = m -> paddr		518257	0		=			
ANR	518345	Identifier	fsym		518257	0					
ANR	518346	PtrMemberAccess	m -> paddr		518257	1					
ANR	518347	Identifier	m		518257	0					
ANR	518348	Identifier	paddr		518257	1					
ANR	518349	ExpressionStatement	ns = m -> paddr + m -> size	2007:2:53867:53890	518257	1	True				
ANR	518350	AssignmentExpression	ns = m -> paddr + m -> size		518257	0		=			
ANR	518351	Identifier	ns		518257	0					
ANR	518352	AdditiveExpression	m -> paddr + m -> size		518257	1		+			
ANR	518353	PtrMemberAccess	m -> paddr		518257	0					
ANR	518354	Identifier	m		518257	0					
ANR	518355	Identifier	paddr		518257	1					
ANR	518356	PtrMemberAccess	m -> size		518257	1					
ANR	518357	Identifier	m		518257	0					
ANR	518358	Identifier	size		518257	1					
ANR	518359	IfStatement	if ( ns > r_buf_size ( bf -> buf ) )		518257	2					
ANR	518360	Condition	ns > r_buf_size ( bf -> buf )	2008:6:53898:53922	518257	0	True				
ANR	518361	RelationalExpression	ns > r_buf_size ( bf -> buf )		518257	0		>			
ANR	518362	Identifier	ns		518257	0					
ANR	518363	CallExpression	r_buf_size ( bf -> buf )		518257	1					
ANR	518364	Callee	r_buf_size		518257	0					
ANR	518365	Identifier	r_buf_size		518257	0					
ANR	518366	ArgumentList	bf -> buf		518257	1					
ANR	518367	Argument	bf -> buf		518257	0					
ANR	518368	PtrMemberAccess	bf -> buf		518257	0					
ANR	518369	Identifier	bf		518257	0					
ANR	518370	Identifier	buf		518257	1					
ANR	518371	CompoundStatement		16:33:342:342	518257	1					
ANR	518372	ContinueStatement	continue ;	2009:3:53930:53938	518257	0	True				
ANR	518373	IfStatement	if ( ns > fsymsz )		518257	3					
ANR	518374	Condition	ns > fsymsz	2011:6:53950:53960	518257	0	True				
ANR	518375	RelationalExpression	ns > fsymsz		518257	0		>			
ANR	518376	Identifier	ns		518257	0					
ANR	518377	Identifier	fsymsz		518257	1					
ANR	518378	CompoundStatement		19:19:380:380	518257	1					
ANR	518379	ExpressionStatement	fsymsz = ns	2012:3:53968:53979	518257	0	True				
ANR	518380	AssignmentExpression	fsymsz = ns		518257	0		=			
ANR	518381	Identifier	fsymsz		518257	0					
ANR	518382	Identifier	ns		518257	1					
ANR	518383	IfStatement	if ( ! fsym )		518257	17					
ANR	518384	Condition	! fsym	2015:5:53993:53997	518257	0	True				
ANR	518385	UnaryOperationExpression	! fsym		518257	0					
ANR	518386	UnaryOperator	!		518257	0					
ANR	518387	Identifier	fsym		518257	1					
ANR	518388	CompoundStatement		23:12:417:417	518257	1					
ANR	518389	ReturnStatement	return NULL ;	2016:2:54004:54015	518257	0	True				
ANR	518390	Identifier	NULL		518257	0					
ANR	518391	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		518257	18					
ANR	518392	Condition	! ( ret = r_list_new ( ) )	2018:5:54025:54046	518257	0	True				
ANR	518393	UnaryOperationExpression	! ( ret = r_list_new ( ) )		518257	0					
ANR	518394	UnaryOperator	!		518257	0					
ANR	518395	AssignmentExpression	ret = r_list_new ( )		518257	1		=			
ANR	518396	Identifier	ret		518257	0					
ANR	518397	CallExpression	r_list_new ( )		518257	1					
ANR	518398	Callee	r_list_new		518257	0					
ANR	518399	Identifier	r_list_new		518257	0					
ANR	518400	ArgumentList			518257	1					
ANR	518401	CompoundStatement		26:29:466:466	518257	1					
ANR	518402	ReturnStatement	return NULL ;	2019:2:54053:54064	518257	0	True				
ANR	518403	Identifier	NULL		518257	0					
ANR	518404	ExpressionStatement	ret -> free = free	2021:1:54070:54086	518257	19	True				
ANR	518405	AssignmentExpression	ret -> free = free		518257	0		=			
ANR	518406	PtrMemberAccess	ret -> free		518257	0					
ANR	518407	Identifier	ret		518257	0					
ANR	518408	Identifier	free		518257	1					
ANR	518409	Identifier	free		518257	1					
ANR	518410	IfStatement	if ( ( ptr = R_NEW0 ( RBinSection ) ) )		518257	20					
ANR	518411	Condition	ptr = R_NEW0 ( RBinSection )	2023:5:54094:54121	518257	0	True				
ANR	518412	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		518257	0		=			
ANR	518413	Identifier	ptr		518257	0					
ANR	518414	CallExpression	R_NEW0 ( RBinSection )		518257	1					
ANR	518415	Callee	R_NEW0		518257	0					
ANR	518416	Identifier	R_NEW0		518257	0					
ANR	518417	ArgumentList	RBinSection		518257	1					
ANR	518418	Argument	RBinSection		518257	0					
ANR	518419	Identifier	RBinSection		518257	0					
ANR	518420	CompoundStatement		31:35:541:541	518257	1					
ANR	518421	ExpressionStatement	"ptr -> name = strdup ( ""header"" )"	2024:2:54128:54157	518257	0	True				
ANR	518422	AssignmentExpression	"ptr -> name = strdup ( ""header"" )"		518257	0		=			
ANR	518423	PtrMemberAccess	ptr -> name		518257	0					
ANR	518424	Identifier	ptr		518257	0					
ANR	518425	Identifier	name		518257	1					
ANR	518426	CallExpression	"strdup ( ""header"" )"		518257	1					
ANR	518427	Callee	strdup		518257	0					
ANR	518428	Identifier	strdup		518257	0					
ANR	518429	ArgumentList	"""header"""		518257	1					
ANR	518430	Argument	"""header"""		518257	0					
ANR	518431	PrimaryExpression	"""header"""		518257	0					
ANR	518432	ExpressionStatement	ptr -> size = ptr -> vsize = sizeof ( struct dex_header_t )	2025:2:54161:54214	518257	1	True				
ANR	518433	AssignmentExpression	ptr -> size = ptr -> vsize = sizeof ( struct dex_header_t )		518257	0		=			
ANR	518434	PtrMemberAccess	ptr -> size		518257	0					
ANR	518435	Identifier	ptr		518257	0					
ANR	518436	Identifier	size		518257	1					
ANR	518437	AssignmentExpression	ptr -> vsize = sizeof ( struct dex_header_t )		518257	1		=			
ANR	518438	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518439	Identifier	ptr		518257	0					
ANR	518440	Identifier	vsize		518257	1					
ANR	518441	SizeofExpression	sizeof ( struct dex_header_t )		518257	1					
ANR	518442	Sizeof	sizeof		518257	0					
ANR	518443	SizeofOperand	struct dex_header_t		518257	1					
ANR	518444	ExpressionStatement	ptr -> paddr = ptr -> vaddr = 0	2026:2:54218:54244	518257	2	True				
ANR	518445	AssignmentExpression	ptr -> paddr = ptr -> vaddr = 0		518257	0		=			
ANR	518446	PtrMemberAccess	ptr -> paddr		518257	0					
ANR	518447	Identifier	ptr		518257	0					
ANR	518448	Identifier	paddr		518257	1					
ANR	518449	AssignmentExpression	ptr -> vaddr = 0		518257	1		=			
ANR	518450	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518451	Identifier	ptr		518257	0					
ANR	518452	Identifier	vaddr		518257	1					
ANR	518453	PrimaryExpression	0		518257	1					
ANR	518454	ExpressionStatement	ptr -> perm = R_PERM_R	2027:2:54248:54268	518257	3	True				
ANR	518455	AssignmentExpression	ptr -> perm = R_PERM_R		518257	0		=			
ANR	518456	PtrMemberAccess	ptr -> perm		518257	0					
ANR	518457	Identifier	ptr		518257	0					
ANR	518458	Identifier	perm		518257	1					
ANR	518459	Identifier	R_PERM_R		518257	1					
ANR	518460	ExpressionStatement	ptr -> add = true	2028:2:54272:54287	518257	4	True				
ANR	518461	AssignmentExpression	ptr -> add = true		518257	0		=			
ANR	518462	PtrMemberAccess	ptr -> add		518257	0					
ANR	518463	Identifier	ptr		518257	0					
ANR	518464	Identifier	add		518257	1					
ANR	518465	Identifier	true		518257	1					
ANR	518466	ExpressionStatement	"r_list_append ( ret , ptr )"	2029:2:54291:54315	518257	5	True				
ANR	518467	CallExpression	"r_list_append ( ret , ptr )"		518257	0					
ANR	518468	Callee	r_list_append		518257	0					
ANR	518469	Identifier	r_list_append		518257	0					
ANR	518470	ArgumentList	ret		518257	1					
ANR	518471	Argument	ret		518257	0					
ANR	518472	Identifier	ret		518257	0					
ANR	518473	Argument	ptr		518257	1					
ANR	518474	Identifier	ptr		518257	0					
ANR	518475	IfStatement	if ( ( ptr = R_NEW0 ( RBinSection ) ) )		518257	21					
ANR	518476	Condition	ptr = R_NEW0 ( RBinSection )	2031:5:54325:54352	518257	0	True				
ANR	518477	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		518257	0		=			
ANR	518478	Identifier	ptr		518257	0					
ANR	518479	CallExpression	R_NEW0 ( RBinSection )		518257	1					
ANR	518480	Callee	R_NEW0		518257	0					
ANR	518481	Identifier	R_NEW0		518257	0					
ANR	518482	ArgumentList	RBinSection		518257	1					
ANR	518483	Argument	RBinSection		518257	0					
ANR	518484	Identifier	RBinSection		518257	0					
ANR	518485	CompoundStatement		39:35:772:772	518257	1					
ANR	518486	ExpressionStatement	"ptr -> name = strdup ( ""constpool"" )"	2032:2:54359:54391	518257	0	True				
ANR	518487	AssignmentExpression	"ptr -> name = strdup ( ""constpool"" )"		518257	0		=			
ANR	518488	PtrMemberAccess	ptr -> name		518257	0					
ANR	518489	Identifier	ptr		518257	0					
ANR	518490	Identifier	name		518257	1					
ANR	518491	CallExpression	"strdup ( ""constpool"" )"		518257	1					
ANR	518492	Callee	strdup		518257	0					
ANR	518493	Identifier	strdup		518257	0					
ANR	518494	ArgumentList	"""constpool"""		518257	1					
ANR	518495	Argument	"""constpool"""		518257	0					
ANR	518496	PrimaryExpression	"""constpool"""		518257	0					
ANR	518497	ExpressionStatement	ptr -> paddr = ptr -> vaddr = sizeof ( struct dex_header_t )	2034:2:54430:54484	518257	1	True				
ANR	518498	AssignmentExpression	ptr -> paddr = ptr -> vaddr = sizeof ( struct dex_header_t )		518257	0		=			
ANR	518499	PtrMemberAccess	ptr -> paddr		518257	0					
ANR	518500	Identifier	ptr		518257	0					
ANR	518501	Identifier	paddr		518257	1					
ANR	518502	AssignmentExpression	ptr -> vaddr = sizeof ( struct dex_header_t )		518257	1		=			
ANR	518503	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518504	Identifier	ptr		518257	0					
ANR	518505	Identifier	vaddr		518257	1					
ANR	518506	SizeofExpression	sizeof ( struct dex_header_t )		518257	1					
ANR	518507	Sizeof	sizeof		518257	0					
ANR	518508	SizeofOperand	struct dex_header_t		518257	1					
ANR	518509	IfStatement	if ( bin -> code_from != UT64_MAX )		518257	2					
ANR	518510	Condition	bin -> code_from != UT64_MAX	2035:6:54492:54517	518257	0	True				
ANR	518511	EqualityExpression	bin -> code_from != UT64_MAX		518257	0		!=			
ANR	518512	PtrMemberAccess	bin -> code_from		518257	0					
ANR	518513	Identifier	bin		518257	0					
ANR	518514	Identifier	code_from		518257	1					
ANR	518515	Identifier	UT64_MAX		518257	1					
ANR	518516	CompoundStatement		43:34:937:937	518257	1					
ANR	518517	ExpressionStatement	ptr -> size = bin -> code_from - ptr -> vaddr	2036:3:54525:54564	518257	0	True				
ANR	518518	AssignmentExpression	ptr -> size = bin -> code_from - ptr -> vaddr		518257	0		=			
ANR	518519	PtrMemberAccess	ptr -> size		518257	0					
ANR	518520	Identifier	ptr		518257	0					
ANR	518521	Identifier	size		518257	1					
ANR	518522	AdditiveExpression	bin -> code_from - ptr -> vaddr		518257	1		-			
ANR	518523	PtrMemberAccess	bin -> code_from		518257	0					
ANR	518524	Identifier	bin		518257	0					
ANR	518525	Identifier	code_from		518257	1					
ANR	518526	PtrMemberAccess	ptr -> vaddr		518257	1					
ANR	518527	Identifier	ptr		518257	0					
ANR	518528	Identifier	vaddr		518257	1					
ANR	518529	ElseStatement	else		518257	0					
ANR	518530	CompoundStatement		45:9:1004:1004	518257	0					
ANR	518531	ExpressionStatement	"eprintf ( ""Warning: Invalid code size\\n"" )"	2038:3:54592:54632	518257	0	True				
ANR	518532	CallExpression	"eprintf ( ""Warning: Invalid code size\\n"" )"		518257	0					
ANR	518533	Callee	eprintf		518257	0					
ANR	518534	Identifier	eprintf		518257	0					
ANR	518535	ArgumentList	"""Warning: Invalid code size\\n"""		518257	1					
ANR	518536	Argument	"""Warning: Invalid code size\\n"""		518257	0					
ANR	518537	PrimaryExpression	"""Warning: Invalid code size\\n"""		518257	0					
ANR	518538	ExpressionStatement	ptr -> size = ptr -> vaddr	2039:3:54637:54659	518257	1	True				
ANR	518539	AssignmentExpression	ptr -> size = ptr -> vaddr		518257	0		=			
ANR	518540	PtrMemberAccess	ptr -> size		518257	0					
ANR	518541	Identifier	ptr		518257	0					
ANR	518542	Identifier	size		518257	1					
ANR	518543	PtrMemberAccess	ptr -> vaddr		518257	1					
ANR	518544	Identifier	ptr		518257	0					
ANR	518545	Identifier	vaddr		518257	1					
ANR	518546	ExpressionStatement	ptr -> vsize = ptr -> size	2041:2:54679:54701	518257	3	True				
ANR	518547	AssignmentExpression	ptr -> vsize = ptr -> size		518257	0		=			
ANR	518548	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518549	Identifier	ptr		518257	0					
ANR	518550	Identifier	vsize		518257	1					
ANR	518551	PtrMemberAccess	ptr -> size		518257	1					
ANR	518552	Identifier	ptr		518257	0					
ANR	518553	Identifier	size		518257	1					
ANR	518554	ExpressionStatement	"ptr -> format = r_str_newf ( ""Cd %d[%d]"" , 4 , ptr -> vsize / 4 )"	2042:2:54705:54762	518257	4	True				
ANR	518555	AssignmentExpression	"ptr -> format = r_str_newf ( ""Cd %d[%d]"" , 4 , ptr -> vsize / 4 )"		518257	0		=			
ANR	518556	PtrMemberAccess	ptr -> format		518257	0					
ANR	518557	Identifier	ptr		518257	0					
ANR	518558	Identifier	format		518257	1					
ANR	518559	CallExpression	"r_str_newf ( ""Cd %d[%d]"" , 4 , ptr -> vsize / 4 )"		518257	1					
ANR	518560	Callee	r_str_newf		518257	0					
ANR	518561	Identifier	r_str_newf		518257	0					
ANR	518562	ArgumentList	"""Cd %d[%d]"""		518257	1					
ANR	518563	Argument	"""Cd %d[%d]"""		518257	0					
ANR	518564	PrimaryExpression	"""Cd %d[%d]"""		518257	0					
ANR	518565	Argument	4		518257	1					
ANR	518566	PrimaryExpression	4		518257	0					
ANR	518567	Argument	ptr -> vsize / 4		518257	2					
ANR	518568	MultiplicativeExpression	ptr -> vsize / 4		518257	0		/			
ANR	518569	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518570	Identifier	ptr		518257	0					
ANR	518571	Identifier	vsize		518257	1					
ANR	518572	PrimaryExpression	4		518257	1					
ANR	518573	ExpressionStatement	ptr -> perm = R_PERM_R	2043:2:54766:54786	518257	5	True				
ANR	518574	AssignmentExpression	ptr -> perm = R_PERM_R		518257	0		=			
ANR	518575	PtrMemberAccess	ptr -> perm		518257	0					
ANR	518576	Identifier	ptr		518257	0					
ANR	518577	Identifier	perm		518257	1					
ANR	518578	Identifier	R_PERM_R		518257	1					
ANR	518579	ExpressionStatement	ptr -> add = true	2044:2:54790:54805	518257	6	True				
ANR	518580	AssignmentExpression	ptr -> add = true		518257	0		=			
ANR	518581	PtrMemberAccess	ptr -> add		518257	0					
ANR	518582	Identifier	ptr		518257	0					
ANR	518583	Identifier	add		518257	1					
ANR	518584	Identifier	true		518257	1					
ANR	518585	ExpressionStatement	"r_list_append ( ret , ptr )"	2045:2:54809:54833	518257	7	True				
ANR	518586	CallExpression	"r_list_append ( ret , ptr )"		518257	0					
ANR	518587	Callee	r_list_append		518257	0					
ANR	518588	Identifier	r_list_append		518257	0					
ANR	518589	ArgumentList	ret		518257	1					
ANR	518590	Argument	ret		518257	0					
ANR	518591	Identifier	ret		518257	0					
ANR	518592	Argument	ptr		518257	1					
ANR	518593	Identifier	ptr		518257	0					
ANR	518594	IfStatement	if ( ( ptr = R_NEW0 ( RBinSection ) ) )		518257	22					
ANR	518595	Condition	ptr = R_NEW0 ( RBinSection )	2048:5:54866:54893	518257	0	True				
ANR	518596	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		518257	0		=			
ANR	518597	Identifier	ptr		518257	0					
ANR	518598	CallExpression	R_NEW0 ( RBinSection )		518257	1					
ANR	518599	Callee	R_NEW0		518257	0					
ANR	518600	Identifier	R_NEW0		518257	0					
ANR	518601	ArgumentList	RBinSection		518257	1					
ANR	518602	Argument	RBinSection		518257	0					
ANR	518603	Identifier	RBinSection		518257	0					
ANR	518604	CompoundStatement		56:35:1313:1313	518257	1					
ANR	518605	ExpressionStatement	"ptr -> name = strdup ( ""code"" )"	2049:2:54900:54927	518257	0	True				
ANR	518606	AssignmentExpression	"ptr -> name = strdup ( ""code"" )"		518257	0		=			
ANR	518607	PtrMemberAccess	ptr -> name		518257	0					
ANR	518608	Identifier	ptr		518257	0					
ANR	518609	Identifier	name		518257	1					
ANR	518610	CallExpression	"strdup ( ""code"" )"		518257	1					
ANR	518611	Callee	strdup		518257	0					
ANR	518612	Identifier	strdup		518257	0					
ANR	518613	ArgumentList	"""code"""		518257	1					
ANR	518614	Argument	"""code"""		518257	0					
ANR	518615	PrimaryExpression	"""code"""		518257	0					
ANR	518616	ExpressionStatement	ptr -> vaddr = ptr -> paddr = bin -> code_from	2050:2:54931:54971	518257	1	True				
ANR	518617	AssignmentExpression	ptr -> vaddr = ptr -> paddr = bin -> code_from		518257	0		=			
ANR	518618	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518619	Identifier	ptr		518257	0					
ANR	518620	Identifier	vaddr		518257	1					
ANR	518621	AssignmentExpression	ptr -> paddr = bin -> code_from		518257	1		=			
ANR	518622	PtrMemberAccess	ptr -> paddr		518257	0					
ANR	518623	Identifier	ptr		518257	0					
ANR	518624	Identifier	paddr		518257	1					
ANR	518625	PtrMemberAccess	bin -> code_from		518257	1					
ANR	518626	Identifier	bin		518257	0					
ANR	518627	Identifier	code_from		518257	1					
ANR	518628	ExpressionStatement	ptr -> size = bin -> code_to - ptr -> paddr	2051:2:54996:55033	518257	2	True				
ANR	518629	AssignmentExpression	ptr -> size = bin -> code_to - ptr -> paddr		518257	0		=			
ANR	518630	PtrMemberAccess	ptr -> size		518257	0					
ANR	518631	Identifier	ptr		518257	0					
ANR	518632	Identifier	size		518257	1					
ANR	518633	AdditiveExpression	bin -> code_to - ptr -> paddr		518257	1		-			
ANR	518634	PtrMemberAccess	bin -> code_to		518257	0					
ANR	518635	Identifier	bin		518257	0					
ANR	518636	Identifier	code_to		518257	1					
ANR	518637	PtrMemberAccess	ptr -> paddr		518257	1					
ANR	518638	Identifier	ptr		518257	0					
ANR	518639	Identifier	paddr		518257	1					
ANR	518640	ExpressionStatement	ptr -> vsize = ptr -> size	2052:2:55037:55059	518257	3	True				
ANR	518641	AssignmentExpression	ptr -> vsize = ptr -> size		518257	0		=			
ANR	518642	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518643	Identifier	ptr		518257	0					
ANR	518644	Identifier	vsize		518257	1					
ANR	518645	PtrMemberAccess	ptr -> size		518257	1					
ANR	518646	Identifier	ptr		518257	0					
ANR	518647	Identifier	size		518257	1					
ANR	518648	ExpressionStatement	ptr -> perm = R_PERM_RX	2053:2:55063:55084	518257	4	True				
ANR	518649	AssignmentExpression	ptr -> perm = R_PERM_RX		518257	0		=			
ANR	518650	PtrMemberAccess	ptr -> perm		518257	0					
ANR	518651	Identifier	ptr		518257	0					
ANR	518652	Identifier	perm		518257	1					
ANR	518653	Identifier	R_PERM_RX		518257	1					
ANR	518654	ExpressionStatement	ptr -> add = true	2054:2:55088:55103	518257	5	True				
ANR	518655	AssignmentExpression	ptr -> add = true		518257	0		=			
ANR	518656	PtrMemberAccess	ptr -> add		518257	0					
ANR	518657	Identifier	ptr		518257	0					
ANR	518658	Identifier	add		518257	1					
ANR	518659	Identifier	true		518257	1					
ANR	518660	ExpressionStatement	"r_list_append ( ret , ptr )"	2055:2:55107:55131	518257	6	True				
ANR	518661	CallExpression	"r_list_append ( ret , ptr )"		518257	0					
ANR	518662	Callee	r_list_append		518257	0					
ANR	518663	Identifier	r_list_append		518257	0					
ANR	518664	ArgumentList	ret		518257	1					
ANR	518665	Argument	ret		518257	0					
ANR	518666	Identifier	ret		518257	0					
ANR	518667	Argument	ptr		518257	1					
ANR	518668	Identifier	ptr		518257	0					
ANR	518669	IfStatement	if ( ( ptr = R_NEW0 ( RBinSection ) ) )		518257	23					
ANR	518670	Condition	ptr = R_NEW0 ( RBinSection )	2057:5:55141:55168	518257	0	True				
ANR	518671	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		518257	0		=			
ANR	518672	Identifier	ptr		518257	0					
ANR	518673	CallExpression	R_NEW0 ( RBinSection )		518257	1					
ANR	518674	Callee	R_NEW0		518257	0					
ANR	518675	Identifier	R_NEW0		518257	0					
ANR	518676	ArgumentList	RBinSection		518257	1					
ANR	518677	Argument	RBinSection		518257	0					
ANR	518678	Identifier	RBinSection		518257	0					
ANR	518679	CompoundStatement		65:35:1588:1588	518257	1					
ANR	518680	ExpressionStatement	"ptr -> name = strdup ( ""data"" )"	2059:2:55219:55246	518257	0	True				
ANR	518681	AssignmentExpression	"ptr -> name = strdup ( ""data"" )"		518257	0		=			
ANR	518682	PtrMemberAccess	ptr -> name		518257	0					
ANR	518683	Identifier	ptr		518257	0					
ANR	518684	Identifier	name		518257	1					
ANR	518685	CallExpression	"strdup ( ""data"" )"		518257	1					
ANR	518686	Callee	strdup		518257	0					
ANR	518687	Identifier	strdup		518257	0					
ANR	518688	ArgumentList	"""data"""		518257	1					
ANR	518689	Argument	"""data"""		518257	0					
ANR	518690	PrimaryExpression	"""data"""		518257	0					
ANR	518691	ExpressionStatement	ptr -> paddr = ptr -> vaddr = fsymsz + fsym	2060:2:55250:55287	518257	1	True				
ANR	518692	AssignmentExpression	ptr -> paddr = ptr -> vaddr = fsymsz + fsym		518257	0		=			
ANR	518693	PtrMemberAccess	ptr -> paddr		518257	0					
ANR	518694	Identifier	ptr		518257	0					
ANR	518695	Identifier	paddr		518257	1					
ANR	518696	AssignmentExpression	ptr -> vaddr = fsymsz + fsym		518257	1		=			
ANR	518697	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518698	Identifier	ptr		518257	0					
ANR	518699	Identifier	vaddr		518257	1					
ANR	518700	AdditiveExpression	fsymsz + fsym		518257	1		+			
ANR	518701	Identifier	fsymsz		518257	0					
ANR	518702	Identifier	fsym		518257	1					
ANR	518703	IfStatement	if ( ptr -> vaddr > r_buf_size ( bf -> buf ) )		518257	2					
ANR	518704	Condition	ptr -> vaddr > r_buf_size ( bf -> buf )	2061:6:55295:55327	518257	0	True				
ANR	518705	RelationalExpression	ptr -> vaddr > r_buf_size ( bf -> buf )		518257	0		>			
ANR	518706	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518707	Identifier	ptr		518257	0					
ANR	518708	Identifier	vaddr		518257	1					
ANR	518709	CallExpression	r_buf_size ( bf -> buf )		518257	1					
ANR	518710	Callee	r_buf_size		518257	0					
ANR	518711	Identifier	r_buf_size		518257	0					
ANR	518712	ArgumentList	bf -> buf		518257	1					
ANR	518713	Argument	bf -> buf		518257	0					
ANR	518714	PtrMemberAccess	bf -> buf		518257	0					
ANR	518715	Identifier	bf		518257	0					
ANR	518716	Identifier	buf		518257	1					
ANR	518717	CompoundStatement		69:41:1747:1747	518257	1					
ANR	518718	ExpressionStatement	ptr -> paddr = ptr -> vaddr = bin -> code_to	2062:3:55335:55373	518257	0	True				
ANR	518719	AssignmentExpression	ptr -> paddr = ptr -> vaddr = bin -> code_to		518257	0		=			
ANR	518720	PtrMemberAccess	ptr -> paddr		518257	0					
ANR	518721	Identifier	ptr		518257	0					
ANR	518722	Identifier	paddr		518257	1					
ANR	518723	AssignmentExpression	ptr -> vaddr = bin -> code_to		518257	1		=			
ANR	518724	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518725	Identifier	ptr		518257	0					
ANR	518726	Identifier	vaddr		518257	1					
ANR	518727	PtrMemberAccess	bin -> code_to		518257	1					
ANR	518728	Identifier	bin		518257	0					
ANR	518729	Identifier	code_to		518257	1					
ANR	518730	ExpressionStatement	ptr -> size = ptr -> vsize = r_buf_size ( bf -> buf ) - ptr -> vaddr	2063:3:55378:55436	518257	1	True				
ANR	518731	AssignmentExpression	ptr -> size = ptr -> vsize = r_buf_size ( bf -> buf ) - ptr -> vaddr		518257	0		=			
ANR	518732	PtrMemberAccess	ptr -> size		518257	0					
ANR	518733	Identifier	ptr		518257	0					
ANR	518734	Identifier	size		518257	1					
ANR	518735	AssignmentExpression	ptr -> vsize = r_buf_size ( bf -> buf ) - ptr -> vaddr		518257	1		=			
ANR	518736	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518737	Identifier	ptr		518257	0					
ANR	518738	Identifier	vsize		518257	1					
ANR	518739	AdditiveExpression	r_buf_size ( bf -> buf ) - ptr -> vaddr		518257	1		-			
ANR	518740	CallExpression	r_buf_size ( bf -> buf )		518257	0					
ANR	518741	Callee	r_buf_size		518257	0					
ANR	518742	Identifier	r_buf_size		518257	0					
ANR	518743	ArgumentList	bf -> buf		518257	1					
ANR	518744	Argument	bf -> buf		518257	0					
ANR	518745	PtrMemberAccess	bf -> buf		518257	0					
ANR	518746	Identifier	bf		518257	0					
ANR	518747	Identifier	buf		518257	1					
ANR	518748	PtrMemberAccess	ptr -> vaddr		518257	1					
ANR	518749	Identifier	ptr		518257	0					
ANR	518750	Identifier	vaddr		518257	1					
ANR	518751	ElseStatement	else		518257	0					
ANR	518752	CompoundStatement		72:9:1864:1864	518257	0					
ANR	518753	ExpressionStatement	ptr -> size = ptr -> vsize = r_buf_size ( bf -> buf ) - ptr -> vaddr	2065:3:55452:55510	518257	0	True				
ANR	518754	AssignmentExpression	ptr -> size = ptr -> vsize = r_buf_size ( bf -> buf ) - ptr -> vaddr		518257	0		=			
ANR	518755	PtrMemberAccess	ptr -> size		518257	0					
ANR	518756	Identifier	ptr		518257	0					
ANR	518757	Identifier	size		518257	1					
ANR	518758	AssignmentExpression	ptr -> vsize = r_buf_size ( bf -> buf ) - ptr -> vaddr		518257	1		=			
ANR	518759	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518760	Identifier	ptr		518257	0					
ANR	518761	Identifier	vsize		518257	1					
ANR	518762	AdditiveExpression	r_buf_size ( bf -> buf ) - ptr -> vaddr		518257	1		-			
ANR	518763	CallExpression	r_buf_size ( bf -> buf )		518257	0					
ANR	518764	Callee	r_buf_size		518257	0					
ANR	518765	Identifier	r_buf_size		518257	0					
ANR	518766	ArgumentList	bf -> buf		518257	1					
ANR	518767	Argument	bf -> buf		518257	0					
ANR	518768	PtrMemberAccess	bf -> buf		518257	0					
ANR	518769	Identifier	bf		518257	0					
ANR	518770	Identifier	buf		518257	1					
ANR	518771	PtrMemberAccess	ptr -> vaddr		518257	1					
ANR	518772	Identifier	ptr		518257	0					
ANR	518773	Identifier	vaddr		518257	1					
ANR	518774	ExpressionStatement	ptr -> perm = R_PERM_R	2069:2:55577:55597	518257	3	True				
ANR	518775	AssignmentExpression	ptr -> perm = R_PERM_R		518257	0		=			
ANR	518776	PtrMemberAccess	ptr -> perm		518257	0					
ANR	518777	Identifier	ptr		518257	0					
ANR	518778	Identifier	perm		518257	1					
ANR	518779	Identifier	R_PERM_R		518257	1					
ANR	518780	ExpressionStatement	ptr -> add = true	2070:2:55607:55622	518257	4	True				
ANR	518781	AssignmentExpression	ptr -> add = true		518257	0		=			
ANR	518782	PtrMemberAccess	ptr -> add		518257	0					
ANR	518783	Identifier	ptr		518257	0					
ANR	518784	Identifier	add		518257	1					
ANR	518785	Identifier	true		518257	1					
ANR	518786	ExpressionStatement	"r_list_append ( ret , ptr )"	2071:2:55626:55650	518257	5	True				
ANR	518787	CallExpression	"r_list_append ( ret , ptr )"		518257	0					
ANR	518788	Callee	r_list_append		518257	0					
ANR	518789	Identifier	r_list_append		518257	0					
ANR	518790	ArgumentList	ret		518257	1					
ANR	518791	Argument	ret		518257	0					
ANR	518792	Identifier	ret		518257	0					
ANR	518793	Argument	ptr		518257	1					
ANR	518794	Identifier	ptr		518257	0					
ANR	518795	IfStatement	if ( ( ptr = R_NEW0 ( RBinSection ) ) )		518257	24					
ANR	518796	Condition	ptr = R_NEW0 ( RBinSection )	2073:5:55660:55687	518257	0	True				
ANR	518797	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		518257	0		=			
ANR	518798	Identifier	ptr		518257	0					
ANR	518799	CallExpression	R_NEW0 ( RBinSection )		518257	1					
ANR	518800	Callee	R_NEW0		518257	0					
ANR	518801	Identifier	R_NEW0		518257	0					
ANR	518802	ArgumentList	RBinSection		518257	1					
ANR	518803	Argument	RBinSection		518257	0					
ANR	518804	Identifier	RBinSection		518257	0					
ANR	518805	CompoundStatement		81:35:2107:2107	518257	1					
ANR	518806	ExpressionStatement	"ptr -> name = strdup ( ""file"" )"	2074:2:55694:55721	518257	0	True				
ANR	518807	AssignmentExpression	"ptr -> name = strdup ( ""file"" )"		518257	0		=			
ANR	518808	PtrMemberAccess	ptr -> name		518257	0					
ANR	518809	Identifier	ptr		518257	0					
ANR	518810	Identifier	name		518257	1					
ANR	518811	CallExpression	"strdup ( ""file"" )"		518257	1					
ANR	518812	Callee	strdup		518257	0					
ANR	518813	Identifier	strdup		518257	0					
ANR	518814	ArgumentList	"""file"""		518257	1					
ANR	518815	Argument	"""file"""		518257	0					
ANR	518816	PrimaryExpression	"""file"""		518257	0					
ANR	518817	ExpressionStatement	ptr -> vaddr = ptr -> paddr = 0	2075:2:55725:55752	518257	1	True				
ANR	518818	AssignmentExpression	ptr -> vaddr = ptr -> paddr = 0		518257	0		=			
ANR	518819	PtrMemberAccess	ptr -> vaddr		518257	0					
ANR	518820	Identifier	ptr		518257	0					
ANR	518821	Identifier	vaddr		518257	1					
ANR	518822	AssignmentExpression	ptr -> paddr = 0		518257	1		=			
ANR	518823	PtrMemberAccess	ptr -> paddr		518257	0					
ANR	518824	Identifier	ptr		518257	0					
ANR	518825	Identifier	paddr		518257	1					
ANR	518826	PrimaryExpression	0		518257	1					
ANR	518827	ExpressionStatement	ptr -> size = r_buf_size ( bf -> buf )	2076:2:55756:55788	518257	2	True				
ANR	518828	AssignmentExpression	ptr -> size = r_buf_size ( bf -> buf )		518257	0		=			
ANR	518829	PtrMemberAccess	ptr -> size		518257	0					
ANR	518830	Identifier	ptr		518257	0					
ANR	518831	Identifier	size		518257	1					
ANR	518832	CallExpression	r_buf_size ( bf -> buf )		518257	1					
ANR	518833	Callee	r_buf_size		518257	0					
ANR	518834	Identifier	r_buf_size		518257	0					
ANR	518835	ArgumentList	bf -> buf		518257	1					
ANR	518836	Argument	bf -> buf		518257	0					
ANR	518837	PtrMemberAccess	bf -> buf		518257	0					
ANR	518838	Identifier	bf		518257	0					
ANR	518839	Identifier	buf		518257	1					
ANR	518840	ExpressionStatement	ptr -> vsize = ptr -> size	2077:2:55792:55814	518257	3	True				
ANR	518841	AssignmentExpression	ptr -> vsize = ptr -> size		518257	0		=			
ANR	518842	PtrMemberAccess	ptr -> vsize		518257	0					
ANR	518843	Identifier	ptr		518257	0					
ANR	518844	Identifier	vsize		518257	1					
ANR	518845	PtrMemberAccess	ptr -> size		518257	1					
ANR	518846	Identifier	ptr		518257	0					
ANR	518847	Identifier	size		518257	1					
ANR	518848	ExpressionStatement	ptr -> perm = R_PERM_R	2078:2:55818:55838	518257	4	True				
ANR	518849	AssignmentExpression	ptr -> perm = R_PERM_R		518257	0		=			
ANR	518850	PtrMemberAccess	ptr -> perm		518257	0					
ANR	518851	Identifier	ptr		518257	0					
ANR	518852	Identifier	perm		518257	1					
ANR	518853	Identifier	R_PERM_R		518257	1					
ANR	518854	ExpressionStatement	ptr -> add = true	2080:2:55878:55893	518257	5	True				
ANR	518855	AssignmentExpression	ptr -> add = true		518257	0		=			
ANR	518856	PtrMemberAccess	ptr -> add		518257	0					
ANR	518857	Identifier	ptr		518257	0					
ANR	518858	Identifier	add		518257	1					
ANR	518859	Identifier	true		518257	1					
ANR	518860	ExpressionStatement	"r_list_append ( ret , ptr )"	2081:2:55897:55921	518257	6	True				
ANR	518861	CallExpression	"r_list_append ( ret , ptr )"		518257	0					
ANR	518862	Callee	r_list_append		518257	0					
ANR	518863	Identifier	r_list_append		518257	0					
ANR	518864	ArgumentList	ret		518257	1					
ANR	518865	Argument	ret		518257	0					
ANR	518866	Identifier	ret		518257	0					
ANR	518867	Argument	ptr		518257	1					
ANR	518868	Identifier	ptr		518257	0					
ANR	518869	ReturnStatement	return ret ;	2083:1:55927:55937	518257	25	True				
ANR	518870	Identifier	ret		518257	0					
ANR	518871	ReturnType	static RList *		518257	1					
ANR	518872	Identifier	sections		518257	2					
ANR	518873	ParameterList	RBinFile * bf		518257	3					
ANR	518874	Parameter	RBinFile * bf	1993:23:53568:53579	518257	0	True				
ANR	518875	ParameterType	RBinFile *		518257	0					
ANR	518876	Identifier	bf		518257	1					
ANR	518877	CFGEntryNode	ENTRY		518257		True				
ANR	518878	CFGExitNode	EXIT		518257		True				
ANR	518879	CFGErrorNode	ERROR		518257		True				
ANR	518880	Symbol	ptr -> paddr		518257						
ANR	518881	Symbol	bin -> code_to		518257						
ANR	518882	Symbol	bf		518257						
ANR	518883	Symbol	ns		518257						
ANR	518884	Symbol	bin		518257						
ANR	518885	Symbol	methods		518257						
ANR	518886	Symbol	ptr -> name		518257						
ANR	518887	Symbol	* ret		518257						
ANR	518888	Symbol	r_str_newf		518257						
ANR	518889	Symbol	ret -> free		518257						
ANR	518890	Symbol	* bin		518257						
ANR	518891	Symbol	* bf -> o		518257						
ANR	518892	Symbol	ptr -> vaddr		518257						
ANR	518893	Symbol	ptr -> add		518257						
ANR	518894	Symbol	fsym		518257						
ANR	518895	Symbol	fsymsz		518257						
ANR	518896	Symbol	bf -> o		518257						
ANR	518897	Symbol	bf -> buf		518257						
ANR	518898	Symbol	R_PERM_R		518257						
ANR	518899	Symbol	m -> paddr		518257						
ANR	518900	Symbol	* ptr		518257						
ANR	518901	Symbol	m -> size		518257						
ANR	518902	Symbol	ptr -> format		518257						
ANR	518903	Symbol	free		518257						
ANR	518904	Symbol	UT64_MAX		518257						
ANR	518905	Symbol	R_PERM_RX		518257						
ANR	518906	Symbol	bin -> code_from		518257						
ANR	518907	Symbol	ml		518257						
ANR	518908	Symbol	bf -> o -> bin_obj		518257						
ANR	518909	Symbol	ret		518257						
ANR	518910	Symbol	NULL		518257						
ANR	518911	Symbol	* bf		518257						
ANR	518912	Symbol	iter		518257						
ANR	518913	Symbol	ptr -> size		518257						
ANR	518914	Symbol	m		518257						
ANR	518915	Symbol	ptr		518257						
ANR	518916	Symbol	R_NEW0		518257						
ANR	518917	Symbol	* * bf		518257						
ANR	518918	Symbol	* m		518257						
ANR	518919	Symbol	ptr -> vsize		518257						
ANR	518920	Symbol	true		518257						
ANR	518921	Symbol	RBinSection		518257						
ANR	518922	Symbol	strdup		518257						
ANR	518923	Symbol	ptr -> perm		518257						
ANR	518924	Symbol	r_buf_size		518257						
ANR	518925	Symbol	r_list_new		518257						
ANR	518926	Function	dex_header	2087:0:55948:57971							
ANR	518927	FunctionDef	dex_header (RBinFile * bf)		518926	0					
ANR	518928	CompoundStatement		2087:37:55985:57971	518926	0					
ANR	518929	IdentifierDeclStatement	RBinDexObj * dex = bf -> o -> bin_obj ;	2088:1:55988:56020	518926	0	True				
ANR	518930	IdentifierDecl	* dex = bf -> o -> bin_obj		518926	0					
ANR	518931	IdentifierDeclType	RBinDexObj *		518926	0					
ANR	518932	Identifier	dex		518926	1					
ANR	518933	AssignmentExpression	* dex = bf -> o -> bin_obj		518926	2		=			
ANR	518934	Identifier	dex		518926	0					
ANR	518935	PtrMemberAccess	bf -> o -> bin_obj		518926	1					
ANR	518936	PtrMemberAccess	bf -> o		518926	0					
ANR	518937	Identifier	bf		518926	0					
ANR	518938	Identifier	o		518926	1					
ANR	518939	Identifier	bin_obj		518926	1					
ANR	518940	IdentifierDeclStatement	DexHeader * hdr = & dex -> header ;	2089:1:56023:56052	518926	1	True				
ANR	518941	IdentifierDecl	* hdr = & dex -> header		518926	0					
ANR	518942	IdentifierDeclType	DexHeader *		518926	0					
ANR	518943	Identifier	hdr		518926	1					
ANR	518944	AssignmentExpression	* hdr = & dex -> header		518926	2		=			
ANR	518945	Identifier	hdr		518926	0					
ANR	518946	UnaryOperationExpression	& dex -> header		518926	1					
ANR	518947	UnaryOperator	&		518926	0					
ANR	518948	PtrMemberAccess	dex -> header		518926	1					
ANR	518949	Identifier	dex		518926	0					
ANR	518950	Identifier	header		518926	1					
ANR	518951	IdentifierDeclStatement	PrintfCallback cb_printf = bf -> rbin -> cb_printf ;	2090:1:56055:56101	518926	2	True				
ANR	518952	IdentifierDecl	cb_printf = bf -> rbin -> cb_printf		518926	0					
ANR	518953	IdentifierDeclType	PrintfCallback		518926	0					
ANR	518954	Identifier	cb_printf		518926	1					
ANR	518955	AssignmentExpression	cb_printf = bf -> rbin -> cb_printf		518926	2		=			
ANR	518956	Identifier	cb_printf		518926	0					
ANR	518957	PtrMemberAccess	bf -> rbin -> cb_printf		518926	1					
ANR	518958	PtrMemberAccess	bf -> rbin		518926	0					
ANR	518959	Identifier	bf		518926	0					
ANR	518960	Identifier	rbin		518926	1					
ANR	518961	Identifier	cb_printf		518926	1					
ANR	518962	ExpressionStatement	"cb_printf ( ""DEX file header:\\n"" )"	2092:1:56105:56137	518926	3	True				
ANR	518963	CallExpression	"cb_printf ( ""DEX file header:\\n"" )"		518926	0					
ANR	518964	Callee	cb_printf		518926	0					
ANR	518965	Identifier	cb_printf		518926	0					
ANR	518966	ArgumentList	"""DEX file header:\\n"""		518926	1					
ANR	518967	Argument	"""DEX file header:\\n"""		518926	0					
ANR	518968	PrimaryExpression	"""DEX file header:\\n"""		518926	0					
ANR	518969	ExpressionStatement	"cb_printf ( ""magic               : 'dex\\\\n035\\\\0'\\n"" )"	2093:1:56140:56192	518926	4	True				
ANR	518970	CallExpression	"cb_printf ( ""magic               : 'dex\\\\n035\\\\0'\\n"" )"		518926	0					
ANR	518971	Callee	cb_printf		518926	0					
ANR	518972	Identifier	cb_printf		518926	0					
ANR	518973	ArgumentList	"""magic               : 'dex\\\\n035\\\\0'\\n"""		518926	1					
ANR	518974	Argument	"""magic               : 'dex\\\\n035\\\\0'\\n"""		518926	0					
ANR	518975	PrimaryExpression	"""magic               : 'dex\\\\n035\\\\0'\\n"""		518926	0					
ANR	518976	ExpressionStatement	"cb_printf ( ""checksum            : %x\\n"" , hdr -> checksum )"	2094:1:56195:56250	518926	5	True				
ANR	518977	CallExpression	"cb_printf ( ""checksum            : %x\\n"" , hdr -> checksum )"		518926	0					
ANR	518978	Callee	cb_printf		518926	0					
ANR	518979	Identifier	cb_printf		518926	0					
ANR	518980	ArgumentList	"""checksum            : %x\\n"""		518926	1					
ANR	518981	Argument	"""checksum            : %x\\n"""		518926	0					
ANR	518982	PrimaryExpression	"""checksum            : %x\\n"""		518926	0					
ANR	518983	Argument	hdr -> checksum		518926	1					
ANR	518984	PtrMemberAccess	hdr -> checksum		518926	0					
ANR	518985	Identifier	hdr		518926	0					
ANR	518986	Identifier	checksum		518926	1					
ANR	518987	ExpressionStatement	"cb_printf ( ""signature           : %02x%02x...%02x%02x\\n"" , hdr -> signature [ 0 ] , hdr -> signature [ 1 ] , hdr -> signature [ 18 ] , hdr -> signature [ 19 ] )"	2095:1:56253:56390	518926	6	True				
ANR	518988	CallExpression	"cb_printf ( ""signature           : %02x%02x...%02x%02x\\n"" , hdr -> signature [ 0 ] , hdr -> signature [ 1 ] , hdr -> signature [ 18 ] , hdr -> signature [ 19 ] )"		518926	0					
ANR	518989	Callee	cb_printf		518926	0					
ANR	518990	Identifier	cb_printf		518926	0					
ANR	518991	ArgumentList	"""signature           : %02x%02x...%02x%02x\\n"""		518926	1					
ANR	518992	Argument	"""signature           : %02x%02x...%02x%02x\\n"""		518926	0					
ANR	518993	PrimaryExpression	"""signature           : %02x%02x...%02x%02x\\n"""		518926	0					
ANR	518994	Argument	hdr -> signature [ 0 ]		518926	1					
ANR	518995	ArrayIndexing	hdr -> signature [ 0 ]		518926	0					
ANR	518996	PtrMemberAccess	hdr -> signature		518926	0					
ANR	518997	Identifier	hdr		518926	0					
ANR	518998	Identifier	signature		518926	1					
ANR	518999	PrimaryExpression	0		518926	1					
ANR	519000	Argument	hdr -> signature [ 1 ]		518926	2					
ANR	519001	ArrayIndexing	hdr -> signature [ 1 ]		518926	0					
ANR	519002	PtrMemberAccess	hdr -> signature		518926	0					
ANR	519003	Identifier	hdr		518926	0					
ANR	519004	Identifier	signature		518926	1					
ANR	519005	PrimaryExpression	1		518926	1					
ANR	519006	Argument	hdr -> signature [ 18 ]		518926	3					
ANR	519007	ArrayIndexing	hdr -> signature [ 18 ]		518926	0					
ANR	519008	PtrMemberAccess	hdr -> signature		518926	0					
ANR	519009	Identifier	hdr		518926	0					
ANR	519010	Identifier	signature		518926	1					
ANR	519011	PrimaryExpression	18		518926	1					
ANR	519012	Argument	hdr -> signature [ 19 ]		518926	4					
ANR	519013	ArrayIndexing	hdr -> signature [ 19 ]		518926	0					
ANR	519014	PtrMemberAccess	hdr -> signature		518926	0					
ANR	519015	Identifier	hdr		518926	0					
ANR	519016	Identifier	signature		518926	1					
ANR	519017	PrimaryExpression	19		518926	1					
ANR	519018	ExpressionStatement	"cb_printf ( ""file_size           : %d\\n"" , hdr -> size )"	2097:1:56393:56444	518926	7	True				
ANR	519019	CallExpression	"cb_printf ( ""file_size           : %d\\n"" , hdr -> size )"		518926	0					
ANR	519020	Callee	cb_printf		518926	0					
ANR	519021	Identifier	cb_printf		518926	0					
ANR	519022	ArgumentList	"""file_size           : %d\\n"""		518926	1					
ANR	519023	Argument	"""file_size           : %d\\n"""		518926	0					
ANR	519024	PrimaryExpression	"""file_size           : %d\\n"""		518926	0					
ANR	519025	Argument	hdr -> size		518926	1					
ANR	519026	PtrMemberAccess	hdr -> size		518926	0					
ANR	519027	Identifier	hdr		518926	0					
ANR	519028	Identifier	size		518926	1					
ANR	519029	ExpressionStatement	"cb_printf ( ""header_size         : %d\\n"" , hdr -> header_size )"	2098:1:56447:56505	518926	8	True				
ANR	519030	CallExpression	"cb_printf ( ""header_size         : %d\\n"" , hdr -> header_size )"		518926	0					
ANR	519031	Callee	cb_printf		518926	0					
ANR	519032	Identifier	cb_printf		518926	0					
ANR	519033	ArgumentList	"""header_size         : %d\\n"""		518926	1					
ANR	519034	Argument	"""header_size         : %d\\n"""		518926	0					
ANR	519035	PrimaryExpression	"""header_size         : %d\\n"""		518926	0					
ANR	519036	Argument	hdr -> header_size		518926	1					
ANR	519037	PtrMemberAccess	hdr -> header_size		518926	0					
ANR	519038	Identifier	hdr		518926	0					
ANR	519039	Identifier	header_size		518926	1					
ANR	519040	ExpressionStatement	"cb_printf ( ""link_size           : %d\\n"" , hdr -> linksection_size )"	2099:1:56508:56571	518926	9	True				
ANR	519041	CallExpression	"cb_printf ( ""link_size           : %d\\n"" , hdr -> linksection_size )"		518926	0					
ANR	519042	Callee	cb_printf		518926	0					
ANR	519043	Identifier	cb_printf		518926	0					
ANR	519044	ArgumentList	"""link_size           : %d\\n"""		518926	1					
ANR	519045	Argument	"""link_size           : %d\\n"""		518926	0					
ANR	519046	PrimaryExpression	"""link_size           : %d\\n"""		518926	0					
ANR	519047	Argument	hdr -> linksection_size		518926	1					
ANR	519048	PtrMemberAccess	hdr -> linksection_size		518926	0					
ANR	519049	Identifier	hdr		518926	0					
ANR	519050	Identifier	linksection_size		518926	1					
ANR	519051	ExpressionStatement	"cb_printf ( ""link_off            : %d (0x%06x)\\n"" , hdr -> linksection_offset , hdr -> linksection_offset )"	2100:1:56574:56673	518926	10	True				
ANR	519052	CallExpression	"cb_printf ( ""link_off            : %d (0x%06x)\\n"" , hdr -> linksection_offset , hdr -> linksection_offset )"		518926	0					
ANR	519053	Callee	cb_printf		518926	0					
ANR	519054	Identifier	cb_printf		518926	0					
ANR	519055	ArgumentList	"""link_off            : %d (0x%06x)\\n"""		518926	1					
ANR	519056	Argument	"""link_off            : %d (0x%06x)\\n"""		518926	0					
ANR	519057	PrimaryExpression	"""link_off            : %d (0x%06x)\\n"""		518926	0					
ANR	519058	Argument	hdr -> linksection_offset		518926	1					
ANR	519059	PtrMemberAccess	hdr -> linksection_offset		518926	0					
ANR	519060	Identifier	hdr		518926	0					
ANR	519061	Identifier	linksection_offset		518926	1					
ANR	519062	Argument	hdr -> linksection_offset		518926	2					
ANR	519063	PtrMemberAccess	hdr -> linksection_offset		518926	0					
ANR	519064	Identifier	hdr		518926	0					
ANR	519065	Identifier	linksection_offset		518926	1					
ANR	519066	ExpressionStatement	"cb_printf ( ""string_ids_size     : %d\\n"" , hdr -> strings_size )"	2101:1:56676:56735	518926	11	True				
ANR	519067	CallExpression	"cb_printf ( ""string_ids_size     : %d\\n"" , hdr -> strings_size )"		518926	0					
ANR	519068	Callee	cb_printf		518926	0					
ANR	519069	Identifier	cb_printf		518926	0					
ANR	519070	ArgumentList	"""string_ids_size     : %d\\n"""		518926	1					
ANR	519071	Argument	"""string_ids_size     : %d\\n"""		518926	0					
ANR	519072	PrimaryExpression	"""string_ids_size     : %d\\n"""		518926	0					
ANR	519073	Argument	hdr -> strings_size		518926	1					
ANR	519074	PtrMemberAccess	hdr -> strings_size		518926	0					
ANR	519075	Identifier	hdr		518926	0					
ANR	519076	Identifier	strings_size		518926	1					
ANR	519077	ExpressionStatement	"cb_printf ( ""string_ids_off      : %d (0x%06x)\\n"" , hdr -> strings_offset , hdr -> strings_offset )"	2102:1:56738:56829	518926	12	True				
ANR	519078	CallExpression	"cb_printf ( ""string_ids_off      : %d (0x%06x)\\n"" , hdr -> strings_offset , hdr -> strings_offset )"		518926	0					
ANR	519079	Callee	cb_printf		518926	0					
ANR	519080	Identifier	cb_printf		518926	0					
ANR	519081	ArgumentList	"""string_ids_off      : %d (0x%06x)\\n"""		518926	1					
ANR	519082	Argument	"""string_ids_off      : %d (0x%06x)\\n"""		518926	0					
ANR	519083	PrimaryExpression	"""string_ids_off      : %d (0x%06x)\\n"""		518926	0					
ANR	519084	Argument	hdr -> strings_offset		518926	1					
ANR	519085	PtrMemberAccess	hdr -> strings_offset		518926	0					
ANR	519086	Identifier	hdr		518926	0					
ANR	519087	Identifier	strings_offset		518926	1					
ANR	519088	Argument	hdr -> strings_offset		518926	2					
ANR	519089	PtrMemberAccess	hdr -> strings_offset		518926	0					
ANR	519090	Identifier	hdr		518926	0					
ANR	519091	Identifier	strings_offset		518926	1					
ANR	519092	ExpressionStatement	"cb_printf ( ""type_ids_size       : %d\\n"" , hdr -> types_size )"	2103:1:56832:56889	518926	13	True				
ANR	519093	CallExpression	"cb_printf ( ""type_ids_size       : %d\\n"" , hdr -> types_size )"		518926	0					
ANR	519094	Callee	cb_printf		518926	0					
ANR	519095	Identifier	cb_printf		518926	0					
ANR	519096	ArgumentList	"""type_ids_size       : %d\\n"""		518926	1					
ANR	519097	Argument	"""type_ids_size       : %d\\n"""		518926	0					
ANR	519098	PrimaryExpression	"""type_ids_size       : %d\\n"""		518926	0					
ANR	519099	Argument	hdr -> types_size		518926	1					
ANR	519100	PtrMemberAccess	hdr -> types_size		518926	0					
ANR	519101	Identifier	hdr		518926	0					
ANR	519102	Identifier	types_size		518926	1					
ANR	519103	ExpressionStatement	"cb_printf ( ""type_ids_off        : %d (0x%06x)\\n"" , hdr -> types_offset , hdr -> types_offset )"	2104:1:56892:56979	518926	14	True				
ANR	519104	CallExpression	"cb_printf ( ""type_ids_off        : %d (0x%06x)\\n"" , hdr -> types_offset , hdr -> types_offset )"		518926	0					
ANR	519105	Callee	cb_printf		518926	0					
ANR	519106	Identifier	cb_printf		518926	0					
ANR	519107	ArgumentList	"""type_ids_off        : %d (0x%06x)\\n"""		518926	1					
ANR	519108	Argument	"""type_ids_off        : %d (0x%06x)\\n"""		518926	0					
ANR	519109	PrimaryExpression	"""type_ids_off        : %d (0x%06x)\\n"""		518926	0					
ANR	519110	Argument	hdr -> types_offset		518926	1					
ANR	519111	PtrMemberAccess	hdr -> types_offset		518926	0					
ANR	519112	Identifier	hdr		518926	0					
ANR	519113	Identifier	types_offset		518926	1					
ANR	519114	Argument	hdr -> types_offset		518926	2					
ANR	519115	PtrMemberAccess	hdr -> types_offset		518926	0					
ANR	519116	Identifier	hdr		518926	0					
ANR	519117	Identifier	types_offset		518926	1					
ANR	519118	ExpressionStatement	"cb_printf ( ""proto_ids_size      : %d\\n"" , hdr -> prototypes_size )"	2105:1:56982:57044	518926	15	True				
ANR	519119	CallExpression	"cb_printf ( ""proto_ids_size      : %d\\n"" , hdr -> prototypes_size )"		518926	0					
ANR	519120	Callee	cb_printf		518926	0					
ANR	519121	Identifier	cb_printf		518926	0					
ANR	519122	ArgumentList	"""proto_ids_size      : %d\\n"""		518926	1					
ANR	519123	Argument	"""proto_ids_size      : %d\\n"""		518926	0					
ANR	519124	PrimaryExpression	"""proto_ids_size      : %d\\n"""		518926	0					
ANR	519125	Argument	hdr -> prototypes_size		518926	1					
ANR	519126	PtrMemberAccess	hdr -> prototypes_size		518926	0					
ANR	519127	Identifier	hdr		518926	0					
ANR	519128	Identifier	prototypes_size		518926	1					
ANR	519129	ExpressionStatement	"cb_printf ( ""proto_ids_off       : %d (0x%06x)\\n"" , hdr -> prototypes_offset , hdr -> prototypes_offset )"	2106:1:57047:57144	518926	16	True				
ANR	519130	CallExpression	"cb_printf ( ""proto_ids_off       : %d (0x%06x)\\n"" , hdr -> prototypes_offset , hdr -> prototypes_offset )"		518926	0					
ANR	519131	Callee	cb_printf		518926	0					
ANR	519132	Identifier	cb_printf		518926	0					
ANR	519133	ArgumentList	"""proto_ids_off       : %d (0x%06x)\\n"""		518926	1					
ANR	519134	Argument	"""proto_ids_off       : %d (0x%06x)\\n"""		518926	0					
ANR	519135	PrimaryExpression	"""proto_ids_off       : %d (0x%06x)\\n"""		518926	0					
ANR	519136	Argument	hdr -> prototypes_offset		518926	1					
ANR	519137	PtrMemberAccess	hdr -> prototypes_offset		518926	0					
ANR	519138	Identifier	hdr		518926	0					
ANR	519139	Identifier	prototypes_offset		518926	1					
ANR	519140	Argument	hdr -> prototypes_offset		518926	2					
ANR	519141	PtrMemberAccess	hdr -> prototypes_offset		518926	0					
ANR	519142	Identifier	hdr		518926	0					
ANR	519143	Identifier	prototypes_offset		518926	1					
ANR	519144	ExpressionStatement	"cb_printf ( ""field_ids_size      : %d\\n"" , hdr -> fields_size )"	2107:1:57147:57205	518926	17	True				
ANR	519145	CallExpression	"cb_printf ( ""field_ids_size      : %d\\n"" , hdr -> fields_size )"		518926	0					
ANR	519146	Callee	cb_printf		518926	0					
ANR	519147	Identifier	cb_printf		518926	0					
ANR	519148	ArgumentList	"""field_ids_size      : %d\\n"""		518926	1					
ANR	519149	Argument	"""field_ids_size      : %d\\n"""		518926	0					
ANR	519150	PrimaryExpression	"""field_ids_size      : %d\\n"""		518926	0					
ANR	519151	Argument	hdr -> fields_size		518926	1					
ANR	519152	PtrMemberAccess	hdr -> fields_size		518926	0					
ANR	519153	Identifier	hdr		518926	0					
ANR	519154	Identifier	fields_size		518926	1					
ANR	519155	ExpressionStatement	"cb_printf ( ""field_ids_off       : %d (0x%06x)\\n"" , hdr -> fields_offset , hdr -> fields_offset )"	2108:1:57208:57297	518926	18	True				
ANR	519156	CallExpression	"cb_printf ( ""field_ids_off       : %d (0x%06x)\\n"" , hdr -> fields_offset , hdr -> fields_offset )"		518926	0					
ANR	519157	Callee	cb_printf		518926	0					
ANR	519158	Identifier	cb_printf		518926	0					
ANR	519159	ArgumentList	"""field_ids_off       : %d (0x%06x)\\n"""		518926	1					
ANR	519160	Argument	"""field_ids_off       : %d (0x%06x)\\n"""		518926	0					
ANR	519161	PrimaryExpression	"""field_ids_off       : %d (0x%06x)\\n"""		518926	0					
ANR	519162	Argument	hdr -> fields_offset		518926	1					
ANR	519163	PtrMemberAccess	hdr -> fields_offset		518926	0					
ANR	519164	Identifier	hdr		518926	0					
ANR	519165	Identifier	fields_offset		518926	1					
ANR	519166	Argument	hdr -> fields_offset		518926	2					
ANR	519167	PtrMemberAccess	hdr -> fields_offset		518926	0					
ANR	519168	Identifier	hdr		518926	0					
ANR	519169	Identifier	fields_offset		518926	1					
ANR	519170	ExpressionStatement	"cb_printf ( ""method_ids_size     : %d\\n"" , hdr -> method_size )"	2109:1:57300:57358	518926	19	True				
ANR	519171	CallExpression	"cb_printf ( ""method_ids_size     : %d\\n"" , hdr -> method_size )"		518926	0					
ANR	519172	Callee	cb_printf		518926	0					
ANR	519173	Identifier	cb_printf		518926	0					
ANR	519174	ArgumentList	"""method_ids_size     : %d\\n"""		518926	1					
ANR	519175	Argument	"""method_ids_size     : %d\\n"""		518926	0					
ANR	519176	PrimaryExpression	"""method_ids_size     : %d\\n"""		518926	0					
ANR	519177	Argument	hdr -> method_size		518926	1					
ANR	519178	PtrMemberAccess	hdr -> method_size		518926	0					
ANR	519179	Identifier	hdr		518926	0					
ANR	519180	Identifier	method_size		518926	1					
ANR	519181	ExpressionStatement	"cb_printf ( ""method_ids_off      : %d (0x%06x)\\n"" , hdr -> method_offset , hdr -> method_offset )"	2110:1:57361:57450	518926	20	True				
ANR	519182	CallExpression	"cb_printf ( ""method_ids_off      : %d (0x%06x)\\n"" , hdr -> method_offset , hdr -> method_offset )"		518926	0					
ANR	519183	Callee	cb_printf		518926	0					
ANR	519184	Identifier	cb_printf		518926	0					
ANR	519185	ArgumentList	"""method_ids_off      : %d (0x%06x)\\n"""		518926	1					
ANR	519186	Argument	"""method_ids_off      : %d (0x%06x)\\n"""		518926	0					
ANR	519187	PrimaryExpression	"""method_ids_off      : %d (0x%06x)\\n"""		518926	0					
ANR	519188	Argument	hdr -> method_offset		518926	1					
ANR	519189	PtrMemberAccess	hdr -> method_offset		518926	0					
ANR	519190	Identifier	hdr		518926	0					
ANR	519191	Identifier	method_offset		518926	1					
ANR	519192	Argument	hdr -> method_offset		518926	2					
ANR	519193	PtrMemberAccess	hdr -> method_offset		518926	0					
ANR	519194	Identifier	hdr		518926	0					
ANR	519195	Identifier	method_offset		518926	1					
ANR	519196	ExpressionStatement	"cb_printf ( ""class_defs_size     : %d\\n"" , hdr -> class_size )"	2111:1:57453:57510	518926	21	True				
ANR	519197	CallExpression	"cb_printf ( ""class_defs_size     : %d\\n"" , hdr -> class_size )"		518926	0					
ANR	519198	Callee	cb_printf		518926	0					
ANR	519199	Identifier	cb_printf		518926	0					
ANR	519200	ArgumentList	"""class_defs_size     : %d\\n"""		518926	1					
ANR	519201	Argument	"""class_defs_size     : %d\\n"""		518926	0					
ANR	519202	PrimaryExpression	"""class_defs_size     : %d\\n"""		518926	0					
ANR	519203	Argument	hdr -> class_size		518926	1					
ANR	519204	PtrMemberAccess	hdr -> class_size		518926	0					
ANR	519205	Identifier	hdr		518926	0					
ANR	519206	Identifier	class_size		518926	1					
ANR	519207	ExpressionStatement	"cb_printf ( ""class_defs_off      : %d (0x%06x)\\n"" , hdr -> class_offset , hdr -> class_offset )"	2112:1:57513:57600	518926	22	True				
ANR	519208	CallExpression	"cb_printf ( ""class_defs_off      : %d (0x%06x)\\n"" , hdr -> class_offset , hdr -> class_offset )"		518926	0					
ANR	519209	Callee	cb_printf		518926	0					
ANR	519210	Identifier	cb_printf		518926	0					
ANR	519211	ArgumentList	"""class_defs_off      : %d (0x%06x)\\n"""		518926	1					
ANR	519212	Argument	"""class_defs_off      : %d (0x%06x)\\n"""		518926	0					
ANR	519213	PrimaryExpression	"""class_defs_off      : %d (0x%06x)\\n"""		518926	0					
ANR	519214	Argument	hdr -> class_offset		518926	1					
ANR	519215	PtrMemberAccess	hdr -> class_offset		518926	0					
ANR	519216	Identifier	hdr		518926	0					
ANR	519217	Identifier	class_offset		518926	1					
ANR	519218	Argument	hdr -> class_offset		518926	2					
ANR	519219	PtrMemberAccess	hdr -> class_offset		518926	0					
ANR	519220	Identifier	hdr		518926	0					
ANR	519221	Identifier	class_offset		518926	1					
ANR	519222	ExpressionStatement	"cb_printf ( ""data_size           : %d\\n"" , hdr -> data_size )"	2113:1:57603:57659	518926	23	True				
ANR	519223	CallExpression	"cb_printf ( ""data_size           : %d\\n"" , hdr -> data_size )"		518926	0					
ANR	519224	Callee	cb_printf		518926	0					
ANR	519225	Identifier	cb_printf		518926	0					
ANR	519226	ArgumentList	"""data_size           : %d\\n"""		518926	1					
ANR	519227	Argument	"""data_size           : %d\\n"""		518926	0					
ANR	519228	PrimaryExpression	"""data_size           : %d\\n"""		518926	0					
ANR	519229	Argument	hdr -> data_size		518926	1					
ANR	519230	PtrMemberAccess	hdr -> data_size		518926	0					
ANR	519231	Identifier	hdr		518926	0					
ANR	519232	Identifier	data_size		518926	1					
ANR	519233	ExpressionStatement	"cb_printf ( ""data_off            : %d (0x%06x)\\n\\n"" , hdr -> data_offset , hdr -> data_offset )"	2114:1:57662:57749	518926	24	True				
ANR	519234	CallExpression	"cb_printf ( ""data_off            : %d (0x%06x)\\n\\n"" , hdr -> data_offset , hdr -> data_offset )"		518926	0					
ANR	519235	Callee	cb_printf		518926	0					
ANR	519236	Identifier	cb_printf		518926	0					
ANR	519237	ArgumentList	"""data_off            : %d (0x%06x)\\n\\n"""		518926	1					
ANR	519238	Argument	"""data_off            : %d (0x%06x)\\n\\n"""		518926	0					
ANR	519239	PrimaryExpression	"""data_off            : %d (0x%06x)\\n\\n"""		518926	0					
ANR	519240	Argument	hdr -> data_offset		518926	1					
ANR	519241	PtrMemberAccess	hdr -> data_offset		518926	0					
ANR	519242	Identifier	hdr		518926	0					
ANR	519243	Identifier	data_offset		518926	1					
ANR	519244	Argument	hdr -> data_offset		518926	2					
ANR	519245	PtrMemberAccess	hdr -> data_offset		518926	0					
ANR	519246	Identifier	hdr		518926	0					
ANR	519247	Identifier	data_offset		518926	1					
ANR	519248	ExpressionStatement	dex -> methods_list = NULL	2117:1:57818:57842	518926	25	True				
ANR	519249	AssignmentExpression	dex -> methods_list = NULL		518926	0		=			
ANR	519250	PtrMemberAccess	dex -> methods_list		518926	0					
ANR	519251	Identifier	dex		518926	0					
ANR	519252	Identifier	methods_list		518926	1					
ANR	519253	Identifier	NULL		518926	1					
ANR	519254	ExpressionStatement	dexdump = true	2118:1:57845:57859	518926	26	True				
ANR	519255	AssignmentExpression	dexdump = true		518926	0		=			
ANR	519256	Identifier	dexdump		518926	0					
ANR	519257	Identifier	true		518926	1					
ANR	519258	ExpressionStatement	dex_loadcode ( bf )	2119:1:57934:57951	518926	27	True				
ANR	519259	CallExpression	dex_loadcode ( bf )		518926	0					
ANR	519260	Callee	dex_loadcode		518926	0					
ANR	519261	Identifier	dex_loadcode		518926	0					
ANR	519262	ArgumentList	bf		518926	1					
ANR	519263	Argument	bf		518926	0					
ANR	519264	Identifier	bf		518926	0					
ANR	519265	ExpressionStatement	dexdump = false	2120:1:57954:57969	518926	28	True				
ANR	519266	AssignmentExpression	dexdump = false		518926	0		=			
ANR	519267	Identifier	dexdump		518926	0					
ANR	519268	Identifier	false		518926	1					
ANR	519269	ReturnType	static void		518926	1					
ANR	519270	Identifier	dex_header		518926	2					
ANR	519271	ParameterList	RBinFile * bf		518926	3					
ANR	519272	Parameter	RBinFile * bf	2087:23:55971:55982	518926	0	True				
ANR	519273	ParameterType	RBinFile *		518926	0					
ANR	519274	Identifier	bf		518926	1					
ANR	519275	CFGEntryNode	ENTRY		518926		True				
ANR	519276	CFGExitNode	EXIT		518926		True				
ANR	519277	Symbol	hdr -> strings_size		518926						
ANR	519278	Symbol	* bf -> rbin		518926						
ANR	519279	Symbol	dex -> methods_list		518926						
ANR	519280	Symbol	bf		518926						
ANR	519281	Symbol	hdr -> fields_size		518926						
ANR	519282	Symbol	hdr -> fields_offset		518926						
ANR	519283	Symbol	cb_printf		518926						
ANR	519284	Symbol	* * hdr		518926						
ANR	519285	Symbol	bf -> rbin		518926						
ANR	519286	Symbol	hdr -> method_offset		518926						
ANR	519287	Symbol	* bf -> o		518926						
ANR	519288	Symbol	hdr -> class_size		518926						
ANR	519289	Symbol	hdr -> data_size		518926						
ANR	519290	Symbol	hdr -> checksum		518926						
ANR	519291	Symbol	hdr -> data_offset		518926						
ANR	519292	Symbol	hdr -> size		518926						
ANR	519293	Symbol	hdr -> linksection_offset		518926						
ANR	519294	Symbol	hdr -> class_offset		518926						
ANR	519295	Symbol	bf -> o		518926						
ANR	519296	Symbol	dex		518926						
ANR	519297	Symbol	hdr -> signature		518926						
ANR	519298	Symbol	bf -> rbin -> cb_printf		518926						
ANR	519299	Symbol	dexdump		518926						
ANR	519300	Symbol	hdr -> types_size		518926						
ANR	519301	Symbol	* hdr		518926						
ANR	519302	Symbol	bf -> o -> bin_obj		518926						
ANR	519303	Symbol	hdr -> prototypes_offset		518926						
ANR	519304	Symbol	NULL		518926						
ANR	519305	Symbol	& dex -> header		518926						
ANR	519306	Symbol	hdr -> linksection_size		518926						
ANR	519307	Symbol	false		518926						
ANR	519308	Symbol	* bf		518926						
ANR	519309	Symbol	hdr -> header_size		518926						
ANR	519310	Symbol	* * bf		518926						
ANR	519311	Symbol	hdr -> strings_offset		518926						
ANR	519312	Symbol	hdr -> method_size		518926						
ANR	519313	Symbol	hdr		518926						
ANR	519314	Symbol	true		518926						
ANR	519315	Symbol	* hdr -> signature		518926						
ANR	519316	Symbol	hdr -> types_offset		518926						
ANR	519317	Symbol	hdr -> prototypes_size		518926						
ANR	519318	Symbol	* dex		518926						
ANR	519319	Function	size	2123:0:57974:58266							
ANR	519320	FunctionDef	size (RBinFile * bf)		519319	0					
ANR	519321	CompoundStatement		2123:31:58005:58266	519319	0					
ANR	519322	IdentifierDeclStatement	ut8 u32s [ sizeof ( ut32 ) ] = { 0 } ;	2124:1:58008:58037	519319	0	True				
ANR	519323	IdentifierDecl	u32s [ sizeof ( ut32 ) ] = { 0 }		519319	0					
ANR	519324	IdentifierDeclType	ut8 [ sizeof ( ut32 ) ]		519319	0					
ANR	519325	Identifier	u32s		519319	1					
ANR	519326	SizeofExpression	sizeof ( ut32 )		519319	2					
ANR	519327	Sizeof	sizeof		519319	0					
ANR	519328	SizeofOperand	ut32		519319	1					
ANR	519329	AssignmentExpression	u32s [ sizeof ( ut32 ) ] = { 0 }		519319	3		=			
ANR	519330	Identifier	u32s		519319	0					
ANR	519331	InitializerList	0		519319	1					
ANR	519332	PrimaryExpression	0		519319	0					
ANR	519333	IdentifierDeclStatement	"int ret = r_buf_read_at ( bf -> buf , 108 , u32s , 4 ) ;"	2126:1:58041:58088	519319	1	True				
ANR	519334	IdentifierDecl	"ret = r_buf_read_at ( bf -> buf , 108 , u32s , 4 )"		519319	0					
ANR	519335	IdentifierDeclType	int		519319	0					
ANR	519336	Identifier	ret		519319	1					
ANR	519337	AssignmentExpression	"ret = r_buf_read_at ( bf -> buf , 108 , u32s , 4 )"		519319	2		=			
ANR	519338	Identifier	ret		519319	0					
ANR	519339	CallExpression	"r_buf_read_at ( bf -> buf , 108 , u32s , 4 )"		519319	1					
ANR	519340	Callee	r_buf_read_at		519319	0					
ANR	519341	Identifier	r_buf_read_at		519319	0					
ANR	519342	ArgumentList	bf -> buf		519319	1					
ANR	519343	Argument	bf -> buf		519319	0					
ANR	519344	PtrMemberAccess	bf -> buf		519319	0					
ANR	519345	Identifier	bf		519319	0					
ANR	519346	Identifier	buf		519319	1					
ANR	519347	Argument	108		519319	1					
ANR	519348	PrimaryExpression	108		519319	0					
ANR	519349	Argument	u32s		519319	2					
ANR	519350	Identifier	u32s		519319	0					
ANR	519351	Argument	4		519319	3					
ANR	519352	PrimaryExpression	4		519319	0					
ANR	519353	IfStatement	if ( ret != 4 )		519319	2					
ANR	519354	Condition	ret != 4	2127:5:58095:58102	519319	0	True				
ANR	519355	EqualityExpression	ret != 4		519319	0		!=			
ANR	519356	Identifier	ret		519319	0					
ANR	519357	PrimaryExpression	4		519319	1					
ANR	519358	CompoundStatement		5:15:99:99	519319	1					
ANR	519359	ReturnStatement	return 0 ;	2128:2:58109:58117	519319	0	True				
ANR	519360	PrimaryExpression	0		519319	0					
ANR	519361	IdentifierDeclStatement	ut32 off = r_read_le32 ( u32s ) ;	2130:1:58123:58152	519319	3	True				
ANR	519362	IdentifierDecl	off = r_read_le32 ( u32s )		519319	0					
ANR	519363	IdentifierDeclType	ut32		519319	0					
ANR	519364	Identifier	off		519319	1					
ANR	519365	AssignmentExpression	off = r_read_le32 ( u32s )		519319	2		=			
ANR	519366	Identifier	off		519319	0					
ANR	519367	CallExpression	r_read_le32 ( u32s )		519319	1					
ANR	519368	Callee	r_read_le32		519319	0					
ANR	519369	Identifier	r_read_le32		519319	0					
ANR	519370	ArgumentList	u32s		519319	1					
ANR	519371	Argument	u32s		519319	0					
ANR	519372	Identifier	u32s		519319	0					
ANR	519373	ExpressionStatement	"ret = r_buf_read_at ( bf -> buf , 104 , u32s , 4 )"	2131:1:58155:58198	519319	4	True				
ANR	519374	AssignmentExpression	"ret = r_buf_read_at ( bf -> buf , 104 , u32s , 4 )"		519319	0		=			
ANR	519375	Identifier	ret		519319	0					
ANR	519376	CallExpression	"r_buf_read_at ( bf -> buf , 104 , u32s , 4 )"		519319	1					
ANR	519377	Callee	r_buf_read_at		519319	0					
ANR	519378	Identifier	r_buf_read_at		519319	0					
ANR	519379	ArgumentList	bf -> buf		519319	1					
ANR	519380	Argument	bf -> buf		519319	0					
ANR	519381	PtrMemberAccess	bf -> buf		519319	0					
ANR	519382	Identifier	bf		519319	0					
ANR	519383	Identifier	buf		519319	1					
ANR	519384	Argument	104		519319	1					
ANR	519385	PrimaryExpression	104		519319	0					
ANR	519386	Argument	u32s		519319	2					
ANR	519387	Identifier	u32s		519319	0					
ANR	519388	Argument	4		519319	3					
ANR	519389	PrimaryExpression	4		519319	0					
ANR	519390	IfStatement	if ( ret != 4 )		519319	5					
ANR	519391	Condition	ret != 4	2132:5:58205:58212	519319	0	True				
ANR	519392	EqualityExpression	ret != 4		519319	0		!=			
ANR	519393	Identifier	ret		519319	0					
ANR	519394	PrimaryExpression	4		519319	1					
ANR	519395	CompoundStatement		10:15:209:209	519319	1					
ANR	519396	ReturnStatement	return 0 ;	2133:2:58219:58227	519319	0	True				
ANR	519397	PrimaryExpression	0		519319	0					
ANR	519398	ReturnStatement	return off + r_read_le32 ( u32s ) ;	2135:1:58233:58264	519319	6	True				
ANR	519399	AdditiveExpression	off + r_read_le32 ( u32s )		519319	0		+			
ANR	519400	Identifier	off		519319	0					
ANR	519401	CallExpression	r_read_le32 ( u32s )		519319	1					
ANR	519402	Callee	r_read_le32		519319	0					
ANR	519403	Identifier	r_read_le32		519319	0					
ANR	519404	ArgumentList	u32s		519319	1					
ANR	519405	Argument	u32s		519319	0					
ANR	519406	Identifier	u32s		519319	0					
ANR	519407	ReturnType	static ut64		519319	1					
ANR	519408	Identifier	size		519319	2					
ANR	519409	ParameterList	RBinFile * bf		519319	3					
ANR	519410	Parameter	RBinFile * bf	2123:17:57991:58002	519319	0	True				
ANR	519411	ParameterType	RBinFile *		519319	0					
ANR	519412	Identifier	bf		519319	1					
ANR	519413	CFGEntryNode	ENTRY		519319		True				
ANR	519414	CFGExitNode	EXIT		519319		True				
ANR	519415	Symbol	ret		519319						
ANR	519416	Symbol	r_read_le32		519319						
ANR	519417	Symbol	bf		519319						
ANR	519418	Symbol	bf -> buf		519319						
ANR	519419	Symbol	r_buf_read_at		519319						
ANR	519420	Symbol	* bf		519319						
ANR	519421	Symbol	u32s		519319						
ANR	519422	Symbol	off		519319						
ANR	519423	Function	lines	2138:0:58269:58482							
ANR	519424	FunctionDef	lines (RBinFile * bf)		519423	0					
ANR	519425	CompoundStatement		2138:34:58303:58482	519423	0					
ANR	519426	IdentifierDeclStatement	struct r_bin_dex_obj_t * dex = bf -> o -> bin_obj ;	2139:1:58306:58350	519423	0	True				
ANR	519427	IdentifierDecl	* dex = bf -> o -> bin_obj		519423	0					
ANR	519428	IdentifierDeclType	struct r_bin_dex_obj_t *		519423	0					
ANR	519429	Identifier	dex		519423	1					
ANR	519430	AssignmentExpression	* dex = bf -> o -> bin_obj		519423	2		=			
ANR	519431	Identifier	dex		519423	0					
ANR	519432	PtrMemberAccess	bf -> o -> bin_obj		519423	1					
ANR	519433	PtrMemberAccess	bf -> o		519423	0					
ANR	519434	Identifier	bf		519423	0					
ANR	519435	Identifier	o		519423	1					
ANR	519436	Identifier	bin_obj		519423	1					
ANR	519437	ReturnStatement	return dex -> lines_list ;	2142:1:58415:58437	519423	1	True				
ANR	519438	PtrMemberAccess	dex -> lines_list		519423	0					
ANR	519439	Identifier	dex		519423	0					
ANR	519440	Identifier	lines_list		519423	1					
ANR	519441	ReturnType	static RList *		519423	1					
ANR	519442	Identifier	lines		519423	2					
ANR	519443	ParameterList	RBinFile * bf		519423	3					
ANR	519444	Parameter	RBinFile * bf	2138:20:58289:58300	519423	0	True				
ANR	519445	ParameterType	RBinFile *		519423	0					
ANR	519446	Identifier	bf		519423	1					
ANR	519447	CFGEntryNode	ENTRY		519423		True				
ANR	519448	CFGExitNode	EXIT		519423		True				
ANR	519449	Symbol	bf -> o -> bin_obj		519423						
ANR	519450	Symbol	* * bf		519423						
ANR	519451	Symbol	bf		519423						
ANR	519452	Symbol	bf -> o		519423						
ANR	519453	Symbol	dex		519423						
ANR	519454	Symbol	* bf		519423						
ANR	519455	Symbol	dex -> lines_list		519423						
ANR	519456	Symbol	* dex		519423						
ANR	519457	Symbol	* bf -> o		519423						
ANR	519458	Function	dex_fields	2147:0:58492:59540							
ANR	519459	FunctionDef	dex_fields (RBinFile * bf)		519458	0					
ANR	519460	CompoundStatement		2147:39:58531:59540	519458	0					
ANR	519461	IdentifierDeclStatement	RList * ret = r_list_new ( ) ;	2148:1:58534:58560	519458	0	True				
ANR	519462	IdentifierDecl	* ret = r_list_new ( )		519458	0					
ANR	519463	IdentifierDeclType	RList *		519458	0					
ANR	519464	Identifier	ret		519458	1					
ANR	519465	AssignmentExpression	* ret = r_list_new ( )		519458	2		=			
ANR	519466	Identifier	ret		519458	0					
ANR	519467	CallExpression	r_list_new ( )		519458	1					
ANR	519468	Callee	r_list_new		519458	0					
ANR	519469	Identifier	r_list_new		519458	0					
ANR	519470	ArgumentList			519458	1					
ANR	519471	IfStatement	if ( ! ret )		519458	1					
ANR	519472	Condition	! ret	2149:5:58567:58570	519458	0	True				
ANR	519473	UnaryOperationExpression	! ret		519458	0					
ANR	519474	UnaryOperator	!		519458	0					
ANR	519475	Identifier	ret		519458	1					
ANR	519476	CompoundStatement		3:11:41:41	519458	1					
ANR	519477	ReturnStatement	return NULL ;	2150:2:58577:58588	519458	0	True				
ANR	519478	Identifier	NULL		519458	0					
ANR	519479	ExpressionStatement	ret -> free = free	2152:1:58594:58610	519458	2	True				
ANR	519480	AssignmentExpression	ret -> free = free		519458	0		=			
ANR	519481	PtrMemberAccess	ret -> free		519458	0					
ANR	519482	Identifier	ret		519458	0					
ANR	519483	Identifier	free		519458	1					
ANR	519484	Identifier	free		519458	1					
ANR	519485	IdentifierDeclStatement	ut64 addr = 0 ;	2153:1:58613:58626	519458	3	True				
ANR	519486	IdentifierDecl	addr = 0		519458	0					
ANR	519487	IdentifierDeclType	ut64		519458	0					
ANR	519488	Identifier	addr		519458	1					
ANR	519489	AssignmentExpression	addr = 0		519458	2		=			
ANR	519490	Identifier	addr		519458	0					
ANR	519491	PrimaryExpression	0		519458	1					
ANR	519492	Statement	define	2155:1:58630:58635	519458	4	True				
ANR	519493	Statement	ROW	2155:8:58637:58639	519458	5	True				
ANR	519494	Statement	(	2155:11:58640:58640	519458	6	True				
ANR	519495	Statement	nam	2155:12:58641:58643	519458	7	True				
ANR	519496	Statement	","	2155:15:58644:58644	519458	8	True				
ANR	519497	Statement	siz	2155:16:58645:58647	519458	9	True				
ANR	519498	Statement	","	2155:19:58648:58648	519458	10	True				
ANR	519499	Statement	val	2155:20:58649:58651	519458	11	True				
ANR	519500	Statement	","	2155:23:58652:58652	519458	12	True				
ANR	519501	Statement	fmt	2155:24:58653:58655	519458	13	True				
ANR	519502	Statement	)	2155:27:58656:58656	519458	14	True				
ANR	519503	Statement	r_list_append	2156:1:58661:58673	519458	15	True				
ANR	519504	Statement	(	2156:15:58675:58675	519458	16	True				
ANR	519505	Statement	ret	2156:16:58676:58678	519458	17	True				
ANR	519506	Statement	","	2156:19:58679:58679	519458	18	True				
ANR	519507	Statement	r_bin_field_new	2156:21:58681:58695	519458	19	True				
ANR	519508	Statement	(	2156:37:58697:58697	519458	20	True				
ANR	519509	Statement	addr	2156:38:58698:58701	519458	21	True				
ANR	519510	Statement	","	2156:42:58702:58702	519458	22	True				
ANR	519511	Statement	addr	2156:44:58704:58707	519458	23	True				
ANR	519512	Statement	","	2156:48:58708:58708	519458	24	True				
ANR	519513	Statement	siz	2156:50:58710:58712	519458	25	True				
ANR	519514	Statement	","	2156:53:58713:58713	519458	26	True				
ANR	519515	Statement	nam	2156:55:58715:58717	519458	27	True				
ANR	519516	Statement	","	2156:58:58718:58718	519458	28	True				
ANR	519517	Statement	sdb_fmt	2156:60:58720:58726	519458	29	True				
ANR	519518	Statement	(	2156:68:58728:58728	519458	30	True				
ANR	519519	Statement	"""0x%08"""	2156:69:58729:58735	519458	31	True				
ANR	519520	Statement	PFMT64x	2156:76:58736:58742	519458	32	True				
ANR	519521	Statement	","	2156:83:58743:58743	519458	33	True				
ANR	519522	Statement	(	2156:85:58745:58745	519458	34	True				
ANR	519523	Statement	ut64	2156:86:58746:58749	519458	35	True				
ANR	519524	Statement	)	2156:90:58750:58750	519458	36	True				
ANR	519525	Statement	val	2156:91:58751:58753	519458	37	True				
ANR	519526	Statement	)	2156:94:58754:58754	519458	38	True				
ANR	519527	Statement	","	2156:95:58755:58755	519458	39	True				
ANR	519528	Statement	fmt	2156:97:58757:58759	519458	40	True				
ANR	519529	Statement	)	2156:100:58760:58760	519458	41	True				
ANR	519530	Statement	)	2156:101:58761:58761	519458	42	True				
ANR	519531	ExpressionStatement		2156:102:58762:58762	519458	43	True				
ANR	519532	ExpressionStatement	addr += siz	2157:1:58767:58778	519458	44	True				
ANR	519533	AssignmentExpression	addr += siz		519458	0		+=			
ANR	519534	Identifier	addr		519458	0					
ANR	519535	Identifier	siz		519458	1					
ANR	519536	ExpressionStatement	"r_buf_seek ( bf -> buf , 0 , R_BUF_SET )"	2159:1:58782:58816	519458	45	True				
ANR	519537	CallExpression	"r_buf_seek ( bf -> buf , 0 , R_BUF_SET )"		519458	0					
ANR	519538	Callee	r_buf_seek		519458	0					
ANR	519539	Identifier	r_buf_seek		519458	0					
ANR	519540	ArgumentList	bf -> buf		519458	1					
ANR	519541	Argument	bf -> buf		519458	0					
ANR	519542	PtrMemberAccess	bf -> buf		519458	0					
ANR	519543	Identifier	bf		519458	0					
ANR	519544	Identifier	buf		519458	1					
ANR	519545	Argument	0		519458	1					
ANR	519546	PrimaryExpression	0		519458	0					
ANR	519547	Argument	R_BUF_SET		519458	2					
ANR	519548	Identifier	R_BUF_SET		519458	0					
ANR	519549	IdentifierDeclStatement	ut64 magic = r_buf_read_le64 ( bf -> buf ) ;	2160:1:58819:58857	519458	46	True				
ANR	519550	IdentifierDecl	magic = r_buf_read_le64 ( bf -> buf )		519458	0					
ANR	519551	IdentifierDeclType	ut64		519458	0					
ANR	519552	Identifier	magic		519458	1					
ANR	519553	AssignmentExpression	magic = r_buf_read_le64 ( bf -> buf )		519458	2		=			
ANR	519554	Identifier	magic		519458	0					
ANR	519555	CallExpression	r_buf_read_le64 ( bf -> buf )		519458	1					
ANR	519556	Callee	r_buf_read_le64		519458	0					
ANR	519557	Identifier	r_buf_read_le64		519458	0					
ANR	519558	ArgumentList	bf -> buf		519458	1					
ANR	519559	Argument	bf -> buf		519458	0					
ANR	519560	PtrMemberAccess	bf -> buf		519458	0					
ANR	519561	Identifier	bf		519458	0					
ANR	519562	Identifier	buf		519458	1					
ANR	519563	ExpressionStatement	"ROW ( ""dex_magic"" , 8 , magic , ""[8]c"" )"	2161:1:58860:58895	519458	47	True				
ANR	519564	CallExpression	"ROW ( ""dex_magic"" , 8 , magic , ""[8]c"" )"		519458	0					
ANR	519565	Callee	ROW		519458	0					
ANR	519566	Identifier	ROW		519458	0					
ANR	519567	ArgumentList	"""dex_magic"""		519458	1					
ANR	519568	Argument	"""dex_magic"""		519458	0					
ANR	519569	PrimaryExpression	"""dex_magic"""		519458	0					
ANR	519570	Argument	8		519458	1					
ANR	519571	PrimaryExpression	8		519458	0					
ANR	519572	Argument	magic		519458	2					
ANR	519573	Identifier	magic		519458	0					
ANR	519574	Argument	"""[8]c"""		519458	3					
ANR	519575	PrimaryExpression	"""[8]c"""		519458	0					
ANR	519576	IdentifierDeclStatement	ut32 checksum = r_buf_read_le32 ( bf -> buf ) ;	2162:1:58898:58939	519458	48	True				
ANR	519577	IdentifierDecl	checksum = r_buf_read_le32 ( bf -> buf )		519458	0					
ANR	519578	IdentifierDeclType	ut32		519458	0					
ANR	519579	Identifier	checksum		519458	1					
ANR	519580	AssignmentExpression	checksum = r_buf_read_le32 ( bf -> buf )		519458	2		=			
ANR	519581	Identifier	checksum		519458	0					
ANR	519582	CallExpression	r_buf_read_le32 ( bf -> buf )		519458	1					
ANR	519583	Callee	r_buf_read_le32		519458	0					
ANR	519584	Identifier	r_buf_read_le32		519458	0					
ANR	519585	ArgumentList	bf -> buf		519458	1					
ANR	519586	Argument	bf -> buf		519458	0					
ANR	519587	PtrMemberAccess	bf -> buf		519458	0					
ANR	519588	Identifier	bf		519458	0					
ANR	519589	Identifier	buf		519458	1					
ANR	519590	ExpressionStatement	"ROW ( ""dex_checksum"" , 4 , checksum , ""x"" )"	2163:1:58942:58980	519458	49	True				
ANR	519591	CallExpression	"ROW ( ""dex_checksum"" , 4 , checksum , ""x"" )"		519458	0					
ANR	519592	Callee	ROW		519458	0					
ANR	519593	Identifier	ROW		519458	0					
ANR	519594	ArgumentList	"""dex_checksum"""		519458	1					
ANR	519595	Argument	"""dex_checksum"""		519458	0					
ANR	519596	PrimaryExpression	"""dex_checksum"""		519458	0					
ANR	519597	Argument	4		519458	1					
ANR	519598	PrimaryExpression	4		519458	0					
ANR	519599	Argument	checksum		519458	2					
ANR	519600	Identifier	checksum		519458	0					
ANR	519601	Argument	"""x"""		519458	3					
ANR	519602	PrimaryExpression	"""x"""		519458	0					
ANR	519603	IdentifierDeclStatement	ut8 signature [ 20 ] ;	2164:1:58983:59000	519458	50	True				
ANR	519604	IdentifierDecl	signature [ 20 ]		519458	0					
ANR	519605	IdentifierDeclType	ut8 [ 20 ]		519458	0					
ANR	519606	Identifier	signature		519458	1					
ANR	519607	PrimaryExpression	20		519458	2					
ANR	519608	ExpressionStatement	"ROW ( ""dex_signature"" , 8 , signature , ""[20]c"" )"	2165:1:59003:59047	519458	51	True				
ANR	519609	CallExpression	"ROW ( ""dex_signature"" , 8 , signature , ""[20]c"" )"		519458	0					
ANR	519610	Callee	ROW		519458	0					
ANR	519611	Identifier	ROW		519458	0					
ANR	519612	ArgumentList	"""dex_signature"""		519458	1					
ANR	519613	Argument	"""dex_signature"""		519458	0					
ANR	519614	PrimaryExpression	"""dex_signature"""		519458	0					
ANR	519615	Argument	8		519458	1					
ANR	519616	PrimaryExpression	8		519458	0					
ANR	519617	Argument	signature		519458	2					
ANR	519618	Identifier	signature		519458	0					
ANR	519619	Argument	"""[20]c"""		519458	3					
ANR	519620	PrimaryExpression	"""[20]c"""		519458	0					
ANR	519621	IdentifierDeclStatement	ut32 size = r_buf_read_le32 ( bf -> buf ) ;	2166:1:59050:59087	519458	52	True				
ANR	519622	IdentifierDecl	size = r_buf_read_le32 ( bf -> buf )		519458	0					
ANR	519623	IdentifierDeclType	ut32		519458	0					
ANR	519624	Identifier	size		519458	1					
ANR	519625	AssignmentExpression	size = r_buf_read_le32 ( bf -> buf )		519458	2		=			
ANR	519626	Identifier	size		519458	0					
ANR	519627	CallExpression	r_buf_read_le32 ( bf -> buf )		519458	1					
ANR	519628	Callee	r_buf_read_le32		519458	0					
ANR	519629	Identifier	r_buf_read_le32		519458	0					
ANR	519630	ArgumentList	bf -> buf		519458	1					
ANR	519631	Argument	bf -> buf		519458	0					
ANR	519632	PtrMemberAccess	bf -> buf		519458	0					
ANR	519633	Identifier	bf		519458	0					
ANR	519634	Identifier	buf		519458	1					
ANR	519635	ExpressionStatement	"ROW ( ""dex_size"" , 4 , size , ""x"" )"	2167:1:59090:59120	519458	53	True				
ANR	519636	CallExpression	"ROW ( ""dex_size"" , 4 , size , ""x"" )"		519458	0					
ANR	519637	Callee	ROW		519458	0					
ANR	519638	Identifier	ROW		519458	0					
ANR	519639	ArgumentList	"""dex_size"""		519458	1					
ANR	519640	Argument	"""dex_size"""		519458	0					
ANR	519641	PrimaryExpression	"""dex_size"""		519458	0					
ANR	519642	Argument	4		519458	1					
ANR	519643	PrimaryExpression	4		519458	0					
ANR	519644	Argument	size		519458	2					
ANR	519645	Identifier	size		519458	0					
ANR	519646	Argument	"""x"""		519458	3					
ANR	519647	PrimaryExpression	"""x"""		519458	0					
ANR	519648	IdentifierDeclStatement	ut32 header_size = r_buf_read_le32 ( bf -> buf ) ;	2168:1:59123:59167	519458	54	True				
ANR	519649	IdentifierDecl	header_size = r_buf_read_le32 ( bf -> buf )		519458	0					
ANR	519650	IdentifierDeclType	ut32		519458	0					
ANR	519651	Identifier	header_size		519458	1					
ANR	519652	AssignmentExpression	header_size = r_buf_read_le32 ( bf -> buf )		519458	2		=			
ANR	519653	Identifier	header_size		519458	0					
ANR	519654	CallExpression	r_buf_read_le32 ( bf -> buf )		519458	1					
ANR	519655	Callee	r_buf_read_le32		519458	0					
ANR	519656	Identifier	r_buf_read_le32		519458	0					
ANR	519657	ArgumentList	bf -> buf		519458	1					
ANR	519658	Argument	bf -> buf		519458	0					
ANR	519659	PtrMemberAccess	bf -> buf		519458	0					
ANR	519660	Identifier	bf		519458	0					
ANR	519661	Identifier	buf		519458	1					
ANR	519662	ExpressionStatement	"ROW ( ""dex_header_size"" , 4 , header_size , ""x"" )"	2169:1:59170:59214	519458	55	True				
ANR	519663	CallExpression	"ROW ( ""dex_header_size"" , 4 , header_size , ""x"" )"		519458	0					
ANR	519664	Callee	ROW		519458	0					
ANR	519665	Identifier	ROW		519458	0					
ANR	519666	ArgumentList	"""dex_header_size"""		519458	1					
ANR	519667	Argument	"""dex_header_size"""		519458	0					
ANR	519668	PrimaryExpression	"""dex_header_size"""		519458	0					
ANR	519669	Argument	4		519458	1					
ANR	519670	PrimaryExpression	4		519458	0					
ANR	519671	Argument	header_size		519458	2					
ANR	519672	Identifier	header_size		519458	0					
ANR	519673	Argument	"""x"""		519458	3					
ANR	519674	PrimaryExpression	"""x"""		519458	0					
ANR	519675	IdentifierDeclStatement	ut32 endian = r_buf_read_le32 ( bf -> buf ) ;	2170:1:59217:59256	519458	56	True				
ANR	519676	IdentifierDecl	endian = r_buf_read_le32 ( bf -> buf )		519458	0					
ANR	519677	IdentifierDeclType	ut32		519458	0					
ANR	519678	Identifier	endian		519458	1					
ANR	519679	AssignmentExpression	endian = r_buf_read_le32 ( bf -> buf )		519458	2		=			
ANR	519680	Identifier	endian		519458	0					
ANR	519681	CallExpression	r_buf_read_le32 ( bf -> buf )		519458	1					
ANR	519682	Callee	r_buf_read_le32		519458	0					
ANR	519683	Identifier	r_buf_read_le32		519458	0					
ANR	519684	ArgumentList	bf -> buf		519458	1					
ANR	519685	Argument	bf -> buf		519458	0					
ANR	519686	PtrMemberAccess	bf -> buf		519458	0					
ANR	519687	Identifier	bf		519458	0					
ANR	519688	Identifier	buf		519458	1					
ANR	519689	ExpressionStatement	"ROW ( ""dex_endian"" , 4 , endian , ""x"" )"	2171:1:59259:59293	519458	57	True				
ANR	519690	CallExpression	"ROW ( ""dex_endian"" , 4 , endian , ""x"" )"		519458	0					
ANR	519691	Callee	ROW		519458	0					
ANR	519692	Identifier	ROW		519458	0					
ANR	519693	ArgumentList	"""dex_endian"""		519458	1					
ANR	519694	Argument	"""dex_endian"""		519458	0					
ANR	519695	PrimaryExpression	"""dex_endian"""		519458	0					
ANR	519696	Argument	4		519458	1					
ANR	519697	PrimaryExpression	4		519458	0					
ANR	519698	Argument	endian		519458	2					
ANR	519699	Identifier	endian		519458	0					
ANR	519700	Argument	"""x"""		519458	3					
ANR	519701	PrimaryExpression	"""x"""		519458	0					
ANR	519702	ReturnStatement	return ret ;	2179:1:59528:59538	519458	58	True				
ANR	519703	Identifier	ret		519458	0					
ANR	519704	ReturnType	static RList *		519458	1					
ANR	519705	Identifier	dex_fields		519458	2					
ANR	519706	ParameterList	RBinFile * bf		519458	3					
ANR	519707	Parameter	RBinFile * bf	2147:25:58517:58528	519458	0	True				
ANR	519708	ParameterType	RBinFile *		519458	0					
ANR	519709	Identifier	bf		519458	1					
ANR	519710	CFGEntryNode	ENTRY		519458		True				
ANR	519711	CFGExitNode	EXIT		519458		True				
ANR	519712	Symbol	ret		519458						
ANR	519713	Symbol	R_BUF_SET		519458						
ANR	519714	Symbol	magic		519458						
ANR	519715	Symbol	NULL		519458						
ANR	519716	Symbol	bf		519458						
ANR	519717	Symbol	siz		519458						
ANR	519718	Symbol	signature		519458						
ANR	519719	Symbol	header_size		519458						
ANR	519720	Symbol	* bf		519458						
ANR	519721	Symbol	* ret		519458						
ANR	519722	Symbol	ret -> free		519458						
ANR	519723	Symbol	endian		519458						
ANR	519724	Symbol	r_buf_read_le32		519458						
ANR	519725	Symbol	size		519458						
ANR	519726	Symbol	bf -> buf		519458						
ANR	519727	Symbol	checksum		519458						
ANR	519728	Symbol	free		519458						
ANR	519729	Symbol	addr		519458						
ANR	519730	Symbol	r_buf_read_le64		519458						
ANR	519731	Symbol	r_list_new		519458						
ANR	519732	Function	libs	2182:0:59543:60128							
ANR	519733	FunctionDef	libs (RBinFile * bf)		519732	0					
ANR	519734	CompoundStatement		2182:33:59576:60128	519732	0					
ANR	519735	ExpressionStatement	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"	2183:1:59579:59637	519732	0	True				
ANR	519736	CallExpression	"r_return_val_if_fail ( bf && bf -> o && bf -> o -> bin_obj , NULL )"		519732	0					
ANR	519737	Callee	r_return_val_if_fail		519732	0					
ANR	519738	Identifier	r_return_val_if_fail		519732	0					
ANR	519739	ArgumentList	bf && bf -> o && bf -> o -> bin_obj		519732	1					
ANR	519740	Argument	bf && bf -> o && bf -> o -> bin_obj		519732	0					
ANR	519741	AndExpression	bf && bf -> o && bf -> o -> bin_obj		519732	0		&&			
ANR	519742	Identifier	bf		519732	0					
ANR	519743	AndExpression	bf -> o && bf -> o -> bin_obj		519732	1		&&			
ANR	519744	PtrMemberAccess	bf -> o		519732	0					
ANR	519745	Identifier	bf		519732	0					
ANR	519746	Identifier	o		519732	1					
ANR	519747	PtrMemberAccess	bf -> o -> bin_obj		519732	1					
ANR	519748	PtrMemberAccess	bf -> o		519732	0					
ANR	519749	Identifier	bf		519732	0					
ANR	519750	Identifier	o		519732	1					
ANR	519751	Identifier	bin_obj		519732	1					
ANR	519752	Argument	NULL		519732	1					
ANR	519753	Identifier	NULL		519732	0					
ANR	519754	IdentifierDeclStatement	char * path = r_file_dirname ( bf -> file ) ;	2184:1:59640:59678	519732	1	True				
ANR	519755	IdentifierDecl	* path = r_file_dirname ( bf -> file )		519732	0					
ANR	519756	IdentifierDeclType	char *		519732	0					
ANR	519757	Identifier	path		519732	1					
ANR	519758	AssignmentExpression	* path = r_file_dirname ( bf -> file )		519732	2		=			
ANR	519759	Identifier	path		519732	0					
ANR	519760	CallExpression	r_file_dirname ( bf -> file )		519732	1					
ANR	519761	Callee	r_file_dirname		519732	0					
ANR	519762	Identifier	r_file_dirname		519732	0					
ANR	519763	ArgumentList	bf -> file		519732	1					
ANR	519764	Argument	bf -> file		519732	0					
ANR	519765	PtrMemberAccess	bf -> file		519732	0					
ANR	519766	Identifier	bf		519732	0					
ANR	519767	Identifier	file		519732	1					
ANR	519768	IdentifierDeclStatement	RList * files = r_sys_dir ( path ) ;	2185:1:59681:59712	519732	2	True				
ANR	519769	IdentifierDecl	* files = r_sys_dir ( path )		519732	0					
ANR	519770	IdentifierDeclType	RList *		519732	0					
ANR	519771	Identifier	files		519732	1					
ANR	519772	AssignmentExpression	* files = r_sys_dir ( path )		519732	2		=			
ANR	519773	Identifier	files		519732	0					
ANR	519774	CallExpression	r_sys_dir ( path )		519732	1					
ANR	519775	Callee	r_sys_dir		519732	0					
ANR	519776	Identifier	r_sys_dir		519732	0					
ANR	519777	ArgumentList	path		519732	1					
ANR	519778	Argument	path		519732	0					
ANR	519779	Identifier	path		519732	0					
ANR	519780	IdentifierDeclStatement	RList * ret = r_list_newf ( free ) ;	2186:1:59715:59746	519732	3	True				
ANR	519781	IdentifierDecl	* ret = r_list_newf ( free )		519732	0					
ANR	519782	IdentifierDeclType	RList *		519732	0					
ANR	519783	Identifier	ret		519732	1					
ANR	519784	AssignmentExpression	* ret = r_list_newf ( free )		519732	2		=			
ANR	519785	Identifier	ret		519732	0					
ANR	519786	CallExpression	r_list_newf ( free )		519732	1					
ANR	519787	Callee	r_list_newf		519732	0					
ANR	519788	Identifier	r_list_newf		519732	0					
ANR	519789	ArgumentList	free		519732	1					
ANR	519790	Argument	free		519732	0					
ANR	519791	Identifier	free		519732	0					
ANR	519792	IfStatement	if ( ! ret )		519732	4					
ANR	519793	Condition	! ret	2187:5:59753:59756	519732	0	True				
ANR	519794	UnaryOperationExpression	! ret		519732	0					
ANR	519795	UnaryOperator	!		519732	0					
ANR	519796	Identifier	ret		519732	1					
ANR	519797	CompoundStatement		6:11:182:182	519732	1					
ANR	519798	ReturnStatement	return NULL ;	2188:2:59763:59774	519732	0	True				
ANR	519799	Identifier	NULL		519732	0					
ANR	519800	IdentifierDeclStatement	RListIter * iter ;	2190:1:59780:59795	519732	5	True				
ANR	519801	IdentifierDecl	* iter		519732	0					
ANR	519802	IdentifierDeclType	RListIter *		519732	0					
ANR	519803	Identifier	iter		519732	1					
ANR	519804	IdentifierDeclStatement	char * file ;	2191:1:59798:59808	519732	6	True				
ANR	519805	IdentifierDecl	* file		519732	0					
ANR	519806	IdentifierDeclType	char *		519732	0					
ANR	519807	Identifier	file		519732	1					
ANR	519808	Statement	r_list_foreach	2192:1:59811:59824	519732	7	True				
ANR	519809	Statement	(	2192:16:59826:59826	519732	8	True				
ANR	519810	Statement	files	2192:17:59827:59831	519732	9	True				
ANR	519811	Statement	","	2192:22:59832:59832	519732	10	True				
ANR	519812	Statement	iter	2192:24:59834:59837	519732	11	True				
ANR	519813	Statement	","	2192:28:59838:59838	519732	12	True				
ANR	519814	Statement	file	2192:30:59840:59843	519732	13	True				
ANR	519815	Statement	)	2192:34:59844:59844	519732	14	True				
ANR	519816	CompoundStatement		11:36:269:269	519732	15					
ANR	519817	IfStatement	"if ( ! r_str_startswith ( file , ""classes"" ) )"		519732	0					
ANR	519818	Condition	"! r_str_startswith ( file , ""classes"" )"	2193:6:59854:59888	519732	0	True				
ANR	519819	UnaryOperationExpression	"! r_str_startswith ( file , ""classes"" )"		519732	0					
ANR	519820	UnaryOperator	!		519732	0					
ANR	519821	CallExpression	"r_str_startswith ( file , ""classes"" )"		519732	1					
ANR	519822	Callee	r_str_startswith		519732	0					
ANR	519823	Identifier	r_str_startswith		519732	0					
ANR	519824	ArgumentList	file		519732	1					
ANR	519825	Argument	file		519732	0					
ANR	519826	Identifier	file		519732	0					
ANR	519827	Argument	"""classes"""		519732	1					
ANR	519828	PrimaryExpression	"""classes"""		519732	0					
ANR	519829	CompoundStatement		12:43:314:314	519732	1					
ANR	519830	ContinueStatement	continue ;	2194:3:59896:59904	519732	0	True				
ANR	519831	IfStatement	"if ( r_str_endswith ( file , "".dex"" ) )"		519732	1					
ANR	519832	Condition	"r_str_endswith ( file , "".dex"" )"	2196:6:59916:59944	519732	0	True				
ANR	519833	CallExpression	"r_str_endswith ( file , "".dex"" )"		519732	0					
ANR	519834	Callee	r_str_endswith		519732	0					
ANR	519835	Identifier	r_str_endswith		519732	0					
ANR	519836	ArgumentList	file		519732	1					
ANR	519837	Argument	file		519732	0					
ANR	519838	Identifier	file		519732	0					
ANR	519839	Argument	""".dex"""		519732	1					
ANR	519840	PrimaryExpression	""".dex"""		519732	0					
ANR	519841	CompoundStatement		16:3:375:429	519732	1					
ANR	519842	IdentifierDeclStatement	"char * n = r_str_newf ( ""%s%s%s"" , path , R_SYS_DIR , file ) ;"	2197:3:59952:60006	519732	0	True				
ANR	519843	IdentifierDecl	"* n = r_str_newf ( ""%s%s%s"" , path , R_SYS_DIR , file )"		519732	0					
ANR	519844	IdentifierDeclType	char *		519732	0					
ANR	519845	Identifier	n		519732	1					
ANR	519846	AssignmentExpression	"* n = r_str_newf ( ""%s%s%s"" , path , R_SYS_DIR , file )"		519732	2		=			
ANR	519847	Identifier	n		519732	0					
ANR	519848	CallExpression	"r_str_newf ( ""%s%s%s"" , path , R_SYS_DIR , file )"		519732	1					
ANR	519849	Callee	r_str_newf		519732	0					
ANR	519850	Identifier	r_str_newf		519732	0					
ANR	519851	ArgumentList	"""%s%s%s"""		519732	1					
ANR	519852	Argument	"""%s%s%s"""		519732	0					
ANR	519853	PrimaryExpression	"""%s%s%s"""		519732	0					
ANR	519854	Argument	path		519732	1					
ANR	519855	Identifier	path		519732	0					
ANR	519856	Argument	R_SYS_DIR		519732	2					
ANR	519857	Identifier	R_SYS_DIR		519732	0					
ANR	519858	Argument	file		519732	3					
ANR	519859	Identifier	file		519732	0					
ANR	519860	IfStatement	"if ( strcmp ( n , bf -> file ) )"		519732	1					
ANR	519861	Condition	"strcmp ( n , bf -> file )"	2198:7:60015:60034	519732	0	True				
ANR	519862	CallExpression	"strcmp ( n , bf -> file )"		519732	0					
ANR	519863	Callee	strcmp		519732	0					
ANR	519864	Identifier	strcmp		519732	0					
ANR	519865	ArgumentList	n		519732	1					
ANR	519866	Argument	n		519732	0					
ANR	519867	Identifier	n		519732	0					
ANR	519868	Argument	bf -> file		519732	1					
ANR	519869	PtrMemberAccess	bf -> file		519732	0					
ANR	519870	Identifier	bf		519732	0					
ANR	519871	Identifier	file		519732	1					
ANR	519872	CompoundStatement		17:29:460:460	519732	1					
ANR	519873	ExpressionStatement	"r_list_append ( ret , n )"	2199:4:60043:60065	519732	0	True				
ANR	519874	CallExpression	"r_list_append ( ret , n )"		519732	0					
ANR	519875	Callee	r_list_append		519732	0					
ANR	519876	Identifier	r_list_append		519732	0					
ANR	519877	ArgumentList	ret		519732	1					
ANR	519878	Argument	ret		519732	0					
ANR	519879	Identifier	ret		519732	0					
ANR	519880	Argument	n		519732	1					
ANR	519881	Identifier	n		519732	0					
ANR	519882	ExpressionStatement	r_list_free ( files )	2203:1:60080:60099	519732	16	True				
ANR	519883	CallExpression	r_list_free ( files )		519732	0					
ANR	519884	Callee	r_list_free		519732	0					
ANR	519885	Identifier	r_list_free		519732	0					
ANR	519886	ArgumentList	files		519732	1					
ANR	519887	Argument	files		519732	0					
ANR	519888	Identifier	files		519732	0					
ANR	519889	ExpressionStatement	free ( path )	2204:1:60102:60113	519732	17	True				
ANR	519890	CallExpression	free ( path )		519732	0					
ANR	519891	Callee	free		519732	0					
ANR	519892	Identifier	free		519732	0					
ANR	519893	ArgumentList	path		519732	1					
ANR	519894	Argument	path		519732	0					
ANR	519895	Identifier	path		519732	0					
ANR	519896	ReturnStatement	return ret ;	2205:1:60116:60126	519732	18	True				
ANR	519897	Identifier	ret		519732	0					
ANR	519898	ReturnType	static RList *		519732	1					
ANR	519899	Identifier	libs		519732	2					
ANR	519900	ParameterList	RBinFile * bf		519732	3					
ANR	519901	Parameter	RBinFile * bf	2182:19:59562:59573	519732	0	True				
ANR	519902	ParameterType	RBinFile *		519732	0					
ANR	519903	Identifier	bf		519732	1					
ANR	519904	CFGEntryNode	ENTRY		519732		True				
ANR	519905	CFGExitNode	EXIT		519732		True				
ANR	519906	CFGErrorNode	ERROR		519732		True				
ANR	519907	Symbol	bf -> o -> bin_obj		519732						
ANR	519908	Symbol	ret		519732						
ANR	519909	Symbol	r_str_startswith		519732						
ANR	519910	Symbol	strcmp		519732						
ANR	519911	Symbol	NULL		519732						
ANR	519912	Symbol	bf		519732						
ANR	519913	Symbol	r_list_newf		519732						
ANR	519914	Symbol	* bf		519732						
ANR	519915	Symbol	iter		519732						
ANR	519916	Symbol	r_str_newf		519732						
ANR	519917	Symbol	n		519732						
ANR	519918	Symbol	* bf -> o		519732						
ANR	519919	Symbol	bf -> file		519732						
ANR	519920	Symbol	path		519732						
ANR	519921	Symbol	* * bf		519732						
ANR	519922	Symbol	file		519732						
ANR	519923	Symbol	R_SYS_DIR		519732						
ANR	519924	Symbol	bf -> o		519732						
ANR	519925	Symbol	files		519732						
ANR	519926	Symbol	r_str_endswith		519732						
ANR	519927	Symbol	r_file_dirname		519732						
ANR	519928	Symbol	free		519732						
ANR	519929	Symbol	r_sys_dir		519732						
ANR	519930	DeclStmt									
ANR	519931	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_dex
ANR	519932	DeclStmt									
ANR	519933	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
