command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5105703	File	data/converged/CVE-2019-16718~_radare2/libr_util_chmod.c								
ANR	5105704	DeclStmt									
ANR	5105705	Decl							int	"int ( const char * , int recursive )"	chmodr
ANR	5105706	DeclStmt									
ANR	5105707	Decl							int	int ( const char * )	parsemode
ANR	5105708	DeclStmt									
ANR	5105709	Decl							void	"void ( const char * path , int rec , int ( * fn ) ( const char * , int ) )"	recurse
ANR	5105710	DeclStmt									
ANR	5105711	Decl							char	char	oper
ANR	5105712	DeclStmt									
ANR	5105713	Decl							mode_t	mode_t	mode
ANR	5105714	Function	r_file_chmod	18:0:388:604							
ANR	5105715	FunctionDef	"r_file_chmod (const char * file , const char * mod , int recursive)"		5105714	0					
ANR	5105716	CompoundStatement		18:74:462:604	5105714	0					
ANR	5105717	ExpressionStatement	oper = '='	20:1:478:488	5105714	0	True				
ANR	5105718	AssignmentExpression	oper = '='		5105714	0		=			
ANR	5105719	Identifier	oper		5105714	0					
ANR	5105720	PrimaryExpression	'='		5105714	1					
ANR	5105721	ExpressionStatement	mode = 0	21:1:491:499	5105714	1	True				
ANR	5105722	AssignmentExpression	mode = 0		5105714	0		=			
ANR	5105723	Identifier	mode		5105714	0					
ANR	5105724	PrimaryExpression	0		5105714	1					
ANR	5105725	IfStatement	if ( ! parsemode ( mod ) )		5105714	2					
ANR	5105726	Condition	! parsemode ( mod )	22:5:506:521	5105714	0	True				
ANR	5105727	UnaryOperationExpression	! parsemode ( mod )		5105714	0					
ANR	5105728	UnaryOperator	!		5105714	0					
ANR	5105729	CallExpression	parsemode ( mod )		5105714	1					
ANR	5105730	Callee	parsemode		5105714	0					
ANR	5105731	Identifier	parsemode		5105714	0					
ANR	5105732	ArgumentList	mod		5105714	1					
ANR	5105733	Argument	mod		5105714	0					
ANR	5105734	Identifier	mod		5105714	0					
ANR	5105735	CompoundStatement		5:23:61:61	5105714	1					
ANR	5105736	ReturnStatement	return false ;	23:2:528:540	5105714	0	True				
ANR	5105737	Identifier	false		5105714	0					
ANR	5105738	ReturnStatement	"return chmodr ( file , recursive ) ;"	25:1:546:577	5105714	3	True				
ANR	5105739	CallExpression	"chmodr ( file , recursive )"		5105714	0					
ANR	5105740	Callee	chmodr		5105714	0					
ANR	5105741	Identifier	chmodr		5105714	0					
ANR	5105742	ArgumentList	file		5105714	1					
ANR	5105743	Argument	file		5105714	0					
ANR	5105744	Identifier	file		5105714	0					
ANR	5105745	Argument	recursive		5105714	1					
ANR	5105746	Identifier	recursive		5105714	0					
ANR	5105747	ReturnType	R_API int		5105714	1					
ANR	5105748	Identifier	r_file_chmod		5105714	2					
ANR	5105749	ParameterList	"const char * file , const char * mod , int recursive"		5105714	3					
ANR	5105750	Parameter	const char * file	18:24:412:427	5105714	0	True				
ANR	5105751	ParameterType	const char *		5105714	0					
ANR	5105752	Identifier	file		5105714	1					
ANR	5105753	Parameter	const char * mod	18:42:430:444	5105714	1	True				
ANR	5105754	ParameterType	const char *		5105714	0					
ANR	5105755	Identifier	mod		5105714	1					
ANR	5105756	Parameter	int recursive	18:59:447:459	5105714	2	True				
ANR	5105757	ParameterType	int		5105714	0					
ANR	5105758	Identifier	recursive		5105714	1					
ANR	5105759	CFGEntryNode	ENTRY		5105714		True				
ANR	5105760	CFGExitNode	EXIT		5105714		True				
ANR	5105761	Symbol	mode		5105714						
ANR	5105762	Symbol	file		5105714						
ANR	5105763	Symbol	mod		5105714						
ANR	5105764	Symbol	false		5105714						
ANR	5105765	Symbol	chmodr		5105714						
ANR	5105766	Symbol	oper		5105714						
ANR	5105767	Symbol	recursive		5105714						
ANR	5105768	Symbol	parsemode		5105714						
ANR	5105769	Function	chmodr	33:0:667:1073							
ANR	5105770	FunctionDef	"chmodr (const char * path , int rflag)"		5105769	0					
ANR	5105771	CompoundStatement		33:40:707:1073	5105769	0					
ANR	5105772	IdentifierDeclStatement	struct stat st ;	34:1:710:724	5105769	0	True				
ANR	5105773	IdentifierDecl	st		5105769	0					
ANR	5105774	IdentifierDeclType	struct stat		5105769	0					
ANR	5105775	Identifier	st		5105769	1					
ANR	5105776	IfStatement	"if ( stat ( path , & st ) == - 1 )"		5105769	1					
ANR	5105777	Condition	"stat ( path , & st ) == - 1"	36:5:732:753	5105769	0	True				
ANR	5105778	EqualityExpression	"stat ( path , & st ) == - 1"		5105769	0		==			
ANR	5105779	CallExpression	"stat ( path , & st )"		5105769	0					
ANR	5105780	Callee	stat		5105769	0					
ANR	5105781	Identifier	stat		5105769	0					
ANR	5105782	ArgumentList	path		5105769	1					
ANR	5105783	Argument	path		5105769	0					
ANR	5105784	Identifier	path		5105769	0					
ANR	5105785	Argument	& st		5105769	1					
ANR	5105786	UnaryOperationExpression	& st		5105769	0					
ANR	5105787	UnaryOperator	&		5105769	0					
ANR	5105788	Identifier	st		5105769	1					
ANR	5105789	UnaryOperationExpression	- 1		5105769	1					
ANR	5105790	UnaryOperator	-		5105769	0					
ANR	5105791	PrimaryExpression	1		5105769	1					
ANR	5105792	CompoundStatement		4:29:48:48	5105769	1					
ANR	5105793	ReturnStatement	return 0 ;	37:2:760:768	5105769	0	True				
ANR	5105794	PrimaryExpression	0		5105769	0					
ANR	5105795	SwitchStatement	switch ( oper )		5105769	2					
ANR	5105796	Condition	oper	40:9:783:786	5105769	0	True				
ANR	5105797	Identifier	oper		5105769	0					
ANR	5105798	CompoundStatement		8:15:81:81	5105769	1					
ANR	5105799	Label	case '+' :	41:1:792:800	5105769	0	True				
ANR	5105800	ExpressionStatement	st . st_mode |= mode	42:2:804:822	5105769	1	True				
ANR	5105801	AssignmentExpression	st . st_mode |= mode		5105769	0		|=			
ANR	5105802	MemberAccess	st . st_mode		5105769	0					
ANR	5105803	Identifier	st		5105769	0					
ANR	5105804	Identifier	st_mode		5105769	1					
ANR	5105805	Identifier	mode		5105769	1					
ANR	5105806	BreakStatement	break ;	43:2:826:831	5105769	2	True				
ANR	5105807	Label	case '-' :	44:1:834:842	5105769	3	True				
ANR	5105808	ExpressionStatement	st . st_mode &= ~mode	45:2:846:865	5105769	4	True				
ANR	5105809	AssignmentExpression	st . st_mode &= ~mode		5105769	0		&=			
ANR	5105810	MemberAccess	st . st_mode		5105769	0					
ANR	5105811	Identifier	st		5105769	0					
ANR	5105812	Identifier	st_mode		5105769	1					
ANR	5105813	Identifier	~mode		5105769	1					
ANR	5105814	BreakStatement	break ;	46:2:869:874	5105769	5	True				
ANR	5105815	Label	case '=' :	47:1:877:885	5105769	6	True				
ANR	5105816	ExpressionStatement	st . st_mode = mode	48:2:889:906	5105769	7	True				
ANR	5105817	AssignmentExpression	st . st_mode = mode		5105769	0		=			
ANR	5105818	MemberAccess	st . st_mode		5105769	0					
ANR	5105819	Identifier	st		5105769	0					
ANR	5105820	Identifier	st_mode		5105769	1					
ANR	5105821	Identifier	mode		5105769	1					
ANR	5105822	BreakStatement	break ;	49:2:910:915	5105769	8	True				
ANR	5105823	IfStatement	"if ( chmod ( path , st . st_mode ) == - 1 )"		5105769	3					
ANR	5105824	Condition	"chmod ( path , st . st_mode ) == - 1"	51:5:925:954	5105769	0	True				
ANR	5105825	EqualityExpression	"chmod ( path , st . st_mode ) == - 1"		5105769	0		==			
ANR	5105826	CallExpression	"chmod ( path , st . st_mode )"		5105769	0					
ANR	5105827	Callee	chmod		5105769	0					
ANR	5105828	Identifier	chmod		5105769	0					
ANR	5105829	ArgumentList	path		5105769	1					
ANR	5105830	Argument	path		5105769	0					
ANR	5105831	Identifier	path		5105769	0					
ANR	5105832	Argument	st . st_mode		5105769	1					
ANR	5105833	MemberAccess	st . st_mode		5105769	0					
ANR	5105834	Identifier	st		5105769	0					
ANR	5105835	Identifier	st_mode		5105769	1					
ANR	5105836	UnaryOperationExpression	- 1		5105769	1					
ANR	5105837	UnaryOperator	-		5105769	0					
ANR	5105838	PrimaryExpression	1		5105769	1					
ANR	5105839	CompoundStatement		19:37:249:249	5105769	1					
ANR	5105840	ExpressionStatement	"eprintf ( ""chmod %s:"" , path )"	52:2:961:988	5105769	0	True				
ANR	5105841	CallExpression	"eprintf ( ""chmod %s:"" , path )"		5105769	0					
ANR	5105842	Callee	eprintf		5105769	0					
ANR	5105843	Identifier	eprintf		5105769	0					
ANR	5105844	ArgumentList	"""chmod %s:"""		5105769	1					
ANR	5105845	Argument	"""chmod %s:"""		5105769	0					
ANR	5105846	PrimaryExpression	"""chmod %s:"""		5105769	0					
ANR	5105847	Argument	path		5105769	1					
ANR	5105848	Identifier	path		5105769	0					
ANR	5105849	ReturnStatement	return false ;	53:2:992:1004	5105769	1	True				
ANR	5105850	Identifier	false		5105769	0					
ANR	5105851	IfStatement	if ( rflag )		5105769	4					
ANR	5105852	Condition	rflag	55:5:1014:1018	5105769	0	True				
ANR	5105853	Identifier	rflag		5105769	0					
ANR	5105854	CompoundStatement		23:12:313:313	5105769	1					
ANR	5105855	ExpressionStatement	"recurse ( path , rflag , chmodr )"	56:2:1025:1054	5105769	0	True				
ANR	5105856	CallExpression	"recurse ( path , rflag , chmodr )"		5105769	0					
ANR	5105857	Callee	recurse		5105769	0					
ANR	5105858	Identifier	recurse		5105769	0					
ANR	5105859	ArgumentList	path		5105769	1					
ANR	5105860	Argument	path		5105769	0					
ANR	5105861	Identifier	path		5105769	0					
ANR	5105862	Argument	rflag		5105769	1					
ANR	5105863	Identifier	rflag		5105769	0					
ANR	5105864	Argument	chmodr		5105769	2					
ANR	5105865	Identifier	chmodr		5105769	0					
ANR	5105866	ReturnStatement	return true ;	58:1:1060:1071	5105769	5	True				
ANR	5105867	Identifier	true		5105769	0					
ANR	5105868	ReturnType	int		5105769	1					
ANR	5105869	Identifier	chmodr		5105769	2					
ANR	5105870	ParameterList	"const char * path , int rflag"		5105769	3					
ANR	5105871	Parameter	const char * path	33:11:678:693	5105769	0	True				
ANR	5105872	ParameterType	const char *		5105769	0					
ANR	5105873	Identifier	path		5105769	1					
ANR	5105874	Parameter	int rflag	33:29:696:704	5105769	1	True				
ANR	5105875	ParameterType	int		5105769	0					
ANR	5105876	Identifier	rflag		5105769	1					
ANR	5105877	CFGEntryNode	ENTRY		5105769		True				
ANR	5105878	CFGExitNode	EXIT		5105769		True				
ANR	5105879	Symbol	st		5105769						
ANR	5105880	Symbol	stat		5105769						
ANR	5105881	Symbol	~mode		5105769						
ANR	5105882	Symbol	rflag		5105769						
ANR	5105883	Symbol	false		5105769						
ANR	5105884	Symbol	chmodr		5105769						
ANR	5105885	Symbol	& st		5105769						
ANR	5105886	Symbol	st . st_mode		5105769						
ANR	5105887	Symbol	mode		5105769						
ANR	5105888	Symbol	path		5105769						
ANR	5105889	Symbol	true		5105769						
ANR	5105890	Symbol	chmod		5105769						
ANR	5105891	Symbol	oper		5105769						
ANR	5105892	Function	parsemode	61:0:1076:2441							
ANR	5105893	FunctionDef	parsemode (const char * str)		5105892	0					
ANR	5105894	CompoundStatement		61:31:1107:2441	5105892	0					
ANR	5105895	IdentifierDeclStatement	char * end ;	62:1:1110:1119	5105892	0	True				
ANR	5105896	IdentifierDecl	* end		5105892	0					
ANR	5105897	IdentifierDeclType	char *		5105892	0					
ANR	5105898	Identifier	end		5105892	1					
ANR	5105899	IdentifierDeclStatement	const char * p ;	63:1:1122:1135	5105892	1	True				
ANR	5105900	IdentifierDecl	* p		5105892	0					
ANR	5105901	IdentifierDeclType	const char *		5105892	0					
ANR	5105902	Identifier	p		5105892	1					
ANR	5105903	IdentifierDeclStatement	int octal ;	64:1:1138:1147	5105892	2	True				
ANR	5105904	IdentifierDecl	octal		5105892	0					
ANR	5105905	IdentifierDeclType	int		5105892	0					
ANR	5105906	Identifier	octal		5105892	1					
ANR	5105907	IdentifierDeclStatement	mode_t mask = 0 ;	65:1:1150:1165	5105892	3	True				
ANR	5105908	IdentifierDecl	mask = 0		5105892	0					
ANR	5105909	IdentifierDeclType	mode_t		5105892	0					
ANR	5105910	Identifier	mask		5105892	1					
ANR	5105911	AssignmentExpression	mask = 0		5105892	2		=			
ANR	5105912	Identifier	mask		5105892	0					
ANR	5105913	PrimaryExpression	0		5105892	1					
ANR	5105914	ExpressionStatement	"octal = strtol ( str , & end , 8 )"	67:1:1169:1197	5105892	4	True				
ANR	5105915	AssignmentExpression	"octal = strtol ( str , & end , 8 )"		5105892	0		=			
ANR	5105916	Identifier	octal		5105892	0					
ANR	5105917	CallExpression	"strtol ( str , & end , 8 )"		5105892	1					
ANR	5105918	Callee	strtol		5105892	0					
ANR	5105919	Identifier	strtol		5105892	0					
ANR	5105920	ArgumentList	str		5105892	1					
ANR	5105921	Argument	str		5105892	0					
ANR	5105922	Identifier	str		5105892	0					
ANR	5105923	Argument	& end		5105892	1					
ANR	5105924	UnaryOperationExpression	& end		5105892	0					
ANR	5105925	UnaryOperator	&		5105892	0					
ANR	5105926	Identifier	end		5105892	1					
ANR	5105927	Argument	8		5105892	2					
ANR	5105928	PrimaryExpression	8		5105892	0					
ANR	5105929	IfStatement	if ( * end == '\\0' )		5105892	5					
ANR	5105930	Condition	* end == '\\0'	68:5:1204:1215	5105892	0	True				
ANR	5105931	EqualityExpression	* end == '\\0'		5105892	0		==			
ANR	5105932	UnaryOperationExpression	* end		5105892	0					
ANR	5105933	UnaryOperator	*		5105892	0					
ANR	5105934	Identifier	end		5105892	1					
ANR	5105935	PrimaryExpression	'\\0'		5105892	1					
ANR	5105936	CompoundStatement		8:19:110:110	5105892	1					
ANR	5105937	IfStatement	if ( octal & 04000 )		5105892	0					
ANR	5105938	Condition	octal & 04000	69:6:1226:1238	5105892	0	True				
ANR	5105939	BitAndExpression	octal & 04000		5105892	0		&			
ANR	5105940	Identifier	octal		5105892	0					
ANR	5105941	PrimaryExpression	04000		5105892	1					
ANR	5105942	CompoundStatement		9:21:133:133	5105892	1					
ANR	5105943	ExpressionStatement	mode |= S_ISUID	70:3:1246:1261	5105892	0	True				
ANR	5105944	AssignmentExpression	mode |= S_ISUID		5105892	0		|=			
ANR	5105945	Identifier	mode		5105892	0					
ANR	5105946	Identifier	S_ISUID		5105892	1					
ANR	5105947	IfStatement	if ( octal & 02000 )		5105892	1					
ANR	5105948	Condition	octal & 02000	72:6:1273:1285	5105892	0	True				
ANR	5105949	BitAndExpression	octal & 02000		5105892	0		&			
ANR	5105950	Identifier	octal		5105892	0					
ANR	5105951	PrimaryExpression	02000		5105892	1					
ANR	5105952	CompoundStatement		12:21:180:180	5105892	1					
ANR	5105953	ExpressionStatement	mode |= S_ISGID	73:3:1293:1308	5105892	0	True				
ANR	5105954	AssignmentExpression	mode |= S_ISGID		5105892	0		|=			
ANR	5105955	Identifier	mode		5105892	0					
ANR	5105956	Identifier	S_ISGID		5105892	1					
ANR	5105957	IfStatement	if ( octal & 00400 )		5105892	2					
ANR	5105958	Condition	octal & 00400	75:6:1320:1332	5105892	0	True				
ANR	5105959	BitAndExpression	octal & 00400		5105892	0		&			
ANR	5105960	Identifier	octal		5105892	0					
ANR	5105961	PrimaryExpression	00400		5105892	1					
ANR	5105962	CompoundStatement		15:21:227:227	5105892	1					
ANR	5105963	ExpressionStatement	mode |= S_IRUSR	76:3:1340:1355	5105892	0	True				
ANR	5105964	AssignmentExpression	mode |= S_IRUSR		5105892	0		|=			
ANR	5105965	Identifier	mode		5105892	0					
ANR	5105966	Identifier	S_IRUSR		5105892	1					
ANR	5105967	IfStatement	if ( octal & 00200 )		5105892	3					
ANR	5105968	Condition	octal & 00200	78:6:1367:1379	5105892	0	True				
ANR	5105969	BitAndExpression	octal & 00200		5105892	0		&			
ANR	5105970	Identifier	octal		5105892	0					
ANR	5105971	PrimaryExpression	00200		5105892	1					
ANR	5105972	CompoundStatement		18:21:274:274	5105892	1					
ANR	5105973	ExpressionStatement	mode |= S_IWUSR	79:3:1387:1402	5105892	0	True				
ANR	5105974	AssignmentExpression	mode |= S_IWUSR		5105892	0		|=			
ANR	5105975	Identifier	mode		5105892	0					
ANR	5105976	Identifier	S_IWUSR		5105892	1					
ANR	5105977	IfStatement	if ( octal & 00100 )		5105892	4					
ANR	5105978	Condition	octal & 00100	81:6:1414:1426	5105892	0	True				
ANR	5105979	BitAndExpression	octal & 00100		5105892	0		&			
ANR	5105980	Identifier	octal		5105892	0					
ANR	5105981	PrimaryExpression	00100		5105892	1					
ANR	5105982	CompoundStatement		21:21:321:321	5105892	1					
ANR	5105983	ExpressionStatement	mode |= S_IXUSR	82:3:1434:1449	5105892	0	True				
ANR	5105984	AssignmentExpression	mode |= S_IXUSR		5105892	0		|=			
ANR	5105985	Identifier	mode		5105892	0					
ANR	5105986	Identifier	S_IXUSR		5105892	1					
ANR	5105987	IfStatement	if ( octal & 00040 )		5105892	5					
ANR	5105988	Condition	octal & 00040	84:6:1461:1473	5105892	0	True				
ANR	5105989	BitAndExpression	octal & 00040		5105892	0		&			
ANR	5105990	Identifier	octal		5105892	0					
ANR	5105991	PrimaryExpression	00040		5105892	1					
ANR	5105992	CompoundStatement		24:21:368:368	5105892	1					
ANR	5105993	ExpressionStatement	mode |= S_IRGRP	85:3:1481:1496	5105892	0	True				
ANR	5105994	AssignmentExpression	mode |= S_IRGRP		5105892	0		|=			
ANR	5105995	Identifier	mode		5105892	0					
ANR	5105996	Identifier	S_IRGRP		5105892	1					
ANR	5105997	IfStatement	if ( octal & 00020 )		5105892	6					
ANR	5105998	Condition	octal & 00020	87:6:1508:1520	5105892	0	True				
ANR	5105999	BitAndExpression	octal & 00020		5105892	0		&			
ANR	5106000	Identifier	octal		5105892	0					
ANR	5106001	PrimaryExpression	00020		5105892	1					
ANR	5106002	CompoundStatement		27:21:415:415	5105892	1					
ANR	5106003	ExpressionStatement	mode |= S_IWGRP	88:3:1528:1543	5105892	0	True				
ANR	5106004	AssignmentExpression	mode |= S_IWGRP		5105892	0		|=			
ANR	5106005	Identifier	mode		5105892	0					
ANR	5106006	Identifier	S_IWGRP		5105892	1					
ANR	5106007	IfStatement	if ( octal & 00010 )		5105892	7					
ANR	5106008	Condition	octal & 00010	90:6:1555:1567	5105892	0	True				
ANR	5106009	BitAndExpression	octal & 00010		5105892	0		&			
ANR	5106010	Identifier	octal		5105892	0					
ANR	5106011	PrimaryExpression	00010		5105892	1					
ANR	5106012	CompoundStatement		30:21:462:462	5105892	1					
ANR	5106013	ExpressionStatement	mode |= S_IXGRP	91:3:1575:1590	5105892	0	True				
ANR	5106014	AssignmentExpression	mode |= S_IXGRP		5105892	0		|=			
ANR	5106015	Identifier	mode		5105892	0					
ANR	5106016	Identifier	S_IXGRP		5105892	1					
ANR	5106017	IfStatement	if ( octal & 00004 )		5105892	8					
ANR	5106018	Condition	octal & 00004	93:6:1602:1614	5105892	0	True				
ANR	5106019	BitAndExpression	octal & 00004		5105892	0		&			
ANR	5106020	Identifier	octal		5105892	0					
ANR	5106021	PrimaryExpression	00004		5105892	1					
ANR	5106022	CompoundStatement		33:21:509:509	5105892	1					
ANR	5106023	ExpressionStatement	mode |= S_IROTH	94:3:1622:1637	5105892	0	True				
ANR	5106024	AssignmentExpression	mode |= S_IROTH		5105892	0		|=			
ANR	5106025	Identifier	mode		5105892	0					
ANR	5106026	Identifier	S_IROTH		5105892	1					
ANR	5106027	IfStatement	if ( octal & 00002 )		5105892	9					
ANR	5106028	Condition	octal & 00002	96:6:1649:1661	5105892	0	True				
ANR	5106029	BitAndExpression	octal & 00002		5105892	0		&			
ANR	5106030	Identifier	octal		5105892	0					
ANR	5106031	PrimaryExpression	00002		5105892	1					
ANR	5106032	CompoundStatement		36:21:556:556	5105892	1					
ANR	5106033	ExpressionStatement	mode |= S_IWOTH	97:3:1669:1684	5105892	0	True				
ANR	5106034	AssignmentExpression	mode |= S_IWOTH		5105892	0		|=			
ANR	5106035	Identifier	mode		5105892	0					
ANR	5106036	Identifier	S_IWOTH		5105892	1					
ANR	5106037	IfStatement	if ( octal & 00001 )		5105892	10					
ANR	5106038	Condition	octal & 00001	99:6:1696:1708	5105892	0	True				
ANR	5106039	BitAndExpression	octal & 00001		5105892	0		&			
ANR	5106040	Identifier	octal		5105892	0					
ANR	5106041	PrimaryExpression	00001		5105892	1					
ANR	5106042	CompoundStatement		39:21:603:603	5105892	1					
ANR	5106043	ExpressionStatement	mode |= S_IXOTH	100:3:1716:1731	5105892	0	True				
ANR	5106044	AssignmentExpression	mode |= S_IXOTH		5105892	0		|=			
ANR	5106045	Identifier	mode		5105892	0					
ANR	5106046	Identifier	S_IXOTH		5105892	1					
ANR	5106047	ReturnStatement	return true ;	102:2:1739:1750	5105892	11	True				
ANR	5106048	Identifier	true		5105892	0					
ANR	5106049	ForStatement	for ( p = str ; * p ; p ++ )		5105892	6					
ANR	5106050	ForInit	p = str ;	104:6:1761:1768	5105892	0	True				
ANR	5106051	AssignmentExpression	p = str		5105892	0		=			
ANR	5106052	Identifier	p		5105892	0					
ANR	5106053	Identifier	str		5105892	1					
ANR	5106054	Condition	* p	104:15:1770:1771	5105892	1	True				
ANR	5106055	UnaryOperationExpression	* p		5105892	0					
ANR	5106056	UnaryOperator	*		5105892	0					
ANR	5106057	Identifier	p		5105892	1					
ANR	5106058	PostIncDecOperationExpression	p ++	104:19:1774:1776	5105892	2	True				
ANR	5106059	Identifier	p		5105892	0					
ANR	5106060	IncDec	++		5105892	1					
ANR	5106061	CompoundStatement		44:24:671:671	5105892	3					
ANR	5106062	SwitchStatement	switch ( * p )		5105892	0					
ANR	5106063	Condition	* p	105:9:1790:1791	5105892	0	True				
ANR	5106064	UnaryOperationExpression	* p		5105892	0					
ANR	5106065	UnaryOperator	*		5105892	0					
ANR	5106066	Identifier	p		5105892	1					
ANR	5106067	CompoundStatement		45:13:686:686	5105892	1					
ANR	5106068	Label	case 'u' :	107:2:1812:1820	5105892	0	True				
ANR	5106069	ExpressionStatement	mask |= S_IRWXU	108:3:1825:1840	5105892	1	True				
ANR	5106070	AssignmentExpression	mask |= S_IRWXU		5105892	0		|=			
ANR	5106071	Identifier	mask		5105892	0					
ANR	5106072	Identifier	S_IRWXU		5105892	1					
ANR	5106073	BreakStatement	break ;	109:3:1845:1850	5105892	2	True				
ANR	5106074	Label	case 'g' :	110:2:1854:1862	5105892	3	True				
ANR	5106075	ExpressionStatement	mask |= S_IRWXG	111:3:1867:1882	5105892	4	True				
ANR	5106076	AssignmentExpression	mask |= S_IRWXG		5105892	0		|=			
ANR	5106077	Identifier	mask		5105892	0					
ANR	5106078	Identifier	S_IRWXG		5105892	1					
ANR	5106079	BreakStatement	break ;	112:3:1887:1892	5105892	5	True				
ANR	5106080	Label	case 'o' :	113:2:1896:1904	5105892	6	True				
ANR	5106081	ExpressionStatement	mask |= S_IRWXO	114:3:1909:1924	5105892	7	True				
ANR	5106082	AssignmentExpression	mask |= S_IRWXO		5105892	0		|=			
ANR	5106083	Identifier	mask		5105892	0					
ANR	5106084	Identifier	S_IRWXO		5105892	1					
ANR	5106085	BreakStatement	break ;	115:3:1929:1934	5105892	8	True				
ANR	5106086	Label	case 'a' :	116:2:1938:1946	5105892	9	True				
ANR	5106087	ExpressionStatement	mask |= S_IRWXU | S_IRWXG | S_IRWXO	117:3:1951:1982	5105892	10	True				
ANR	5106088	AssignmentExpression	mask |= S_IRWXU | S_IRWXG | S_IRWXO		5105892	0		|=			
ANR	5106089	Identifier	mask		5105892	0					
ANR	5106090	InclusiveOrExpression	S_IRWXU | S_IRWXG | S_IRWXO		5105892	1		|			
ANR	5106091	Identifier	S_IRWXU		5105892	0					
ANR	5106092	InclusiveOrExpression	S_IRWXG | S_IRWXO		5105892	1		|			
ANR	5106093	Identifier	S_IRWXG		5105892	0					
ANR	5106094	Identifier	S_IRWXO		5105892	1					
ANR	5106095	BreakStatement	break ;	118:3:1987:1992	5105892	11	True				
ANR	5106096	Label	case '+' :	120:2:2010:2018	5105892	12	True				
ANR	5106097	Label	case '-' :	121:2:2022:2030	5105892	13	True				
ANR	5106098	Label	case '=' :	122:2:2034:2042	5105892	14	True				
ANR	5106099	ExpressionStatement	oper = * p	123:3:2047:2056	5105892	15	True				
ANR	5106100	AssignmentExpression	oper = * p		5105892	0		=			
ANR	5106101	Identifier	oper		5105892	0					
ANR	5106102	UnaryOperationExpression	* p		5105892	1					
ANR	5106103	UnaryOperator	*		5105892	0					
ANR	5106104	Identifier	p		5105892	1					
ANR	5106105	BreakStatement	break ;	124:3:2061:2066	5105892	16	True				
ANR	5106106	Label	case 'r' :	126:2:2084:2092	5105892	17	True				
ANR	5106107	ExpressionStatement	mode |= S_IRUSR | S_IRGRP | S_IROTH	127:3:2097:2128	5105892	18	True				
ANR	5106108	AssignmentExpression	mode |= S_IRUSR | S_IRGRP | S_IROTH		5105892	0		|=			
ANR	5106109	Identifier	mode		5105892	0					
ANR	5106110	InclusiveOrExpression	S_IRUSR | S_IRGRP | S_IROTH		5105892	1		|			
ANR	5106111	Identifier	S_IRUSR		5105892	0					
ANR	5106112	InclusiveOrExpression	S_IRGRP | S_IROTH		5105892	1		|			
ANR	5106113	Identifier	S_IRGRP		5105892	0					
ANR	5106114	Identifier	S_IROTH		5105892	1					
ANR	5106115	BreakStatement	break ;	128:3:2133:2138	5105892	19	True				
ANR	5106116	Label	case 'w' :	129:2:2142:2150	5105892	20	True				
ANR	5106117	ExpressionStatement	mode |= S_IWUSR | S_IWGRP | S_IWOTH	130:3:2155:2186	5105892	21	True				
ANR	5106118	AssignmentExpression	mode |= S_IWUSR | S_IWGRP | S_IWOTH		5105892	0		|=			
ANR	5106119	Identifier	mode		5105892	0					
ANR	5106120	InclusiveOrExpression	S_IWUSR | S_IWGRP | S_IWOTH		5105892	1		|			
ANR	5106121	Identifier	S_IWUSR		5105892	0					
ANR	5106122	InclusiveOrExpression	S_IWGRP | S_IWOTH		5105892	1		|			
ANR	5106123	Identifier	S_IWGRP		5105892	0					
ANR	5106124	Identifier	S_IWOTH		5105892	1					
ANR	5106125	BreakStatement	break ;	131:3:2191:2196	5105892	22	True				
ANR	5106126	Label	case 'x' :	132:2:2200:2208	5105892	23	True				
ANR	5106127	ExpressionStatement	mode |= S_IXUSR | S_IXGRP | S_IXOTH	133:3:2213:2244	5105892	24	True				
ANR	5106128	AssignmentExpression	mode |= S_IXUSR | S_IXGRP | S_IXOTH		5105892	0		|=			
ANR	5106129	Identifier	mode		5105892	0					
ANR	5106130	InclusiveOrExpression	S_IXUSR | S_IXGRP | S_IXOTH		5105892	1		|			
ANR	5106131	Identifier	S_IXUSR		5105892	0					
ANR	5106132	InclusiveOrExpression	S_IXGRP | S_IXOTH		5105892	1		|			
ANR	5106133	Identifier	S_IXGRP		5105892	0					
ANR	5106134	Identifier	S_IXOTH		5105892	1					
ANR	5106135	BreakStatement	break ;	134:3:2249:2254	5105892	25	True				
ANR	5106136	Label	case 's' :	135:2:2258:2266	5105892	26	True				
ANR	5106137	ExpressionStatement	mode |= S_ISUID | S_ISGID	136:3:2271:2294	5105892	27	True				
ANR	5106138	AssignmentExpression	mode |= S_ISUID | S_ISGID		5105892	0		|=			
ANR	5106139	Identifier	mode		5105892	0					
ANR	5106140	InclusiveOrExpression	S_ISUID | S_ISGID		5105892	1		|			
ANR	5106141	Identifier	S_ISUID		5105892	0					
ANR	5106142	Identifier	S_ISGID		5105892	1					
ANR	5106143	BreakStatement	break ;	137:3:2299:2304	5105892	28	True				
ANR	5106144	Label	default :	139:2:2322:2329	5105892	29	True				
ANR	5106145	Identifier	default		5105892	0					
ANR	5106146	ExpressionStatement	"eprintf ( ""%s: invalid mode\\n"" , str )"	140:3:2334:2369	5105892	30	True				
ANR	5106147	CallExpression	"eprintf ( ""%s: invalid mode\\n"" , str )"		5105892	0					
ANR	5106148	Callee	eprintf		5105892	0					
ANR	5106149	Identifier	eprintf		5105892	0					
ANR	5106150	ArgumentList	"""%s: invalid mode\\n"""		5105892	1					
ANR	5106151	Argument	"""%s: invalid mode\\n"""		5105892	0					
ANR	5106152	PrimaryExpression	"""%s: invalid mode\\n"""		5105892	0					
ANR	5106153	Argument	str		5105892	1					
ANR	5106154	Identifier	str		5105892	0					
ANR	5106155	ReturnStatement	return false ;	141:3:2374:2386	5105892	31	True				
ANR	5106156	Identifier	false		5105892	0					
ANR	5106157	IfStatement	if ( mask )		5105892	7					
ANR	5106158	Condition	mask	144:5:2400:2403	5105892	0	True				
ANR	5106159	Identifier	mask		5105892	0					
ANR	5106160	CompoundStatement		84:11:1298:1298	5105892	1					
ANR	5106161	ExpressionStatement	mode &= mask	145:2:2410:2422	5105892	0	True				
ANR	5106162	AssignmentExpression	mode &= mask		5105892	0		&=			
ANR	5106163	Identifier	mode		5105892	0					
ANR	5106164	Identifier	mask		5105892	1					
ANR	5106165	ReturnStatement	return true ;	147:1:2428:2439	5105892	8	True				
ANR	5106166	Identifier	true		5105892	0					
ANR	5106167	ReturnType	int		5105892	1					
ANR	5106168	Identifier	parsemode		5105892	2					
ANR	5106169	ParameterList	const char * str		5105892	3					
ANR	5106170	Parameter	const char * str	61:14:1090:1104	5105892	0	True				
ANR	5106171	ParameterType	const char *		5105892	0					
ANR	5106172	Identifier	str		5105892	1					
ANR	5106173	CFGEntryNode	ENTRY		5105892		True				
ANR	5106174	CFGExitNode	EXIT		5105892		True				
ANR	5106175	Symbol	octal		5105892						
ANR	5106176	Symbol	S_IWGRP		5105892						
ANR	5106177	Symbol	& end		5105892						
ANR	5106178	Symbol	S_IWOTH		5105892						
ANR	5106179	Symbol	mode		5105892						
ANR	5106180	Symbol	S_IRUSR		5105892						
ANR	5106181	Symbol	strtol		5105892						
ANR	5106182	Symbol	S_IXUSR		5105892						
ANR	5106183	Symbol	end		5105892						
ANR	5106184	Symbol	mask		5105892						
ANR	5106185	Symbol	S_ISGID		5105892						
ANR	5106186	Symbol	S_IROTH		5105892						
ANR	5106187	Symbol	S_IXGRP		5105892						
ANR	5106188	Symbol	S_IXOTH		5105892						
ANR	5106189	Symbol	false		5105892						
ANR	5106190	Symbol	str		5105892						
ANR	5106191	Symbol	p		5105892						
ANR	5106192	Symbol	S_IRWXU		5105892						
ANR	5106193	Symbol	S_IWUSR		5105892						
ANR	5106194	Symbol	S_IRWXO		5105892						
ANR	5106195	Symbol	S_ISUID		5105892						
ANR	5106196	Symbol	true		5105892						
ANR	5106197	Symbol	* end		5105892						
ANR	5106198	Symbol	* p		5105892						
ANR	5106199	Symbol	oper		5105892						
ANR	5106200	Symbol	S_IRGRP		5105892						
ANR	5106201	Symbol	S_IRWXG		5105892						
ANR	5106202	Function	agetcwd	150:0:2444:2600							
ANR	5106203	FunctionDef	agetcwd ()		5106202	0					
ANR	5106204	CompoundStatement		150:21:2465:2600	5106202	0					
ANR	5106205	IdentifierDeclStatement	char * buf = malloc ( 4096 ) ;	151:8:2475:2500	5106202	0	True				
ANR	5106206	IdentifierDecl	* buf = malloc ( 4096 )		5106202	0					
ANR	5106207	IdentifierDeclType	char *		5106202	0					
ANR	5106208	Identifier	buf		5106202	1					
ANR	5106209	AssignmentExpression	* buf = malloc ( 4096 )		5106202	2		=			
ANR	5106210	Identifier	buf		5106202	0					
ANR	5106211	CallExpression	malloc ( 4096 )		5106202	1					
ANR	5106212	Callee	malloc		5106202	0					
ANR	5106213	Identifier	malloc		5106202	0					
ANR	5106214	ArgumentList	4096		5106202	1					
ANR	5106215	Argument	4096		5106202	0					
ANR	5106216	PrimaryExpression	4096		5106202	0					
ANR	5106217	IfStatement	if ( ! buf )		5106202	1					
ANR	5106218	Condition	! buf	152:5:2507:2510	5106202	0	True				
ANR	5106219	UnaryOperationExpression	! buf		5106202	0					
ANR	5106220	UnaryOperator	!		5106202	0					
ANR	5106221	Identifier	buf		5106202	1					
ANR	5106222	CompoundStatement		3:11:47:47	5106202	1					
ANR	5106223	ReturnStatement	return NULL ;	153:2:2517:2528	5106202	0	True				
ANR	5106224	Identifier	NULL		5106202	0					
ANR	5106225	IfStatement	"if ( ! getcwd ( buf , 4096 ) )"		5106202	2					
ANR	5106226	Condition	"! getcwd ( buf , 4096 )"	155:5:2538:2556	5106202	0	True				
ANR	5106227	UnaryOperationExpression	"! getcwd ( buf , 4096 )"		5106202	0					
ANR	5106228	UnaryOperator	!		5106202	0					
ANR	5106229	CallExpression	"getcwd ( buf , 4096 )"		5106202	1					
ANR	5106230	Callee	getcwd		5106202	0					
ANR	5106231	Identifier	getcwd		5106202	0					
ANR	5106232	ArgumentList	buf		5106202	1					
ANR	5106233	Argument	buf		5106202	0					
ANR	5106234	Identifier	buf		5106202	0					
ANR	5106235	Argument	4096		5106202	1					
ANR	5106236	PrimaryExpression	4096		5106202	0					
ANR	5106237	CompoundStatement		6:26:93:93	5106202	1					
ANR	5106238	ExpressionStatement	"eprintf ( ""getcwd:"" )"	156:2:2563:2582	5106202	0	True				
ANR	5106239	CallExpression	"eprintf ( ""getcwd:"" )"		5106202	0					
ANR	5106240	Callee	eprintf		5106202	0					
ANR	5106241	Identifier	eprintf		5106202	0					
ANR	5106242	ArgumentList	"""getcwd:"""		5106202	1					
ANR	5106243	Argument	"""getcwd:"""		5106202	0					
ANR	5106244	PrimaryExpression	"""getcwd:"""		5106202	0					
ANR	5106245	ReturnStatement	return buf ;	158:1:2588:2598	5106202	3	True				
ANR	5106246	Identifier	buf		5106202	0					
ANR	5106247	ReturnType	char *		5106202	1					
ANR	5106248	Identifier	agetcwd		5106202	2					
ANR	5106249	ParameterList			5106202	3					
ANR	5106250	CFGEntryNode	ENTRY		5106202		True				
ANR	5106251	CFGExitNode	EXIT		5106202		True				
ANR	5106252	Symbol	malloc		5106202						
ANR	5106253	Symbol	buf		5106202						
ANR	5106254	Symbol	getcwd		5106202						
ANR	5106255	Symbol	NULL		5106202						
ANR	5106256	Function	recurse	161:0:2603:3276							
ANR	5106257	FunctionDef	"recurse (const char * path , int rec , int ( * fn ) ( const char * , int ))"		5106256	0					
ANR	5106258	CompoundStatement		161:76:2679:3276	5106256	0					
ANR	5106259	IdentifierDeclStatement	char * cwd ;	162:8:2689:2698	5106256	0	True				
ANR	5106260	IdentifierDecl	* cwd		5106256	0					
ANR	5106261	IdentifierDeclType	char *		5106256	0					
ANR	5106262	Identifier	cwd		5106256	1					
ANR	5106263	IdentifierDeclStatement	struct dirent * d ;	163:8:2708:2724	5106256	1	True				
ANR	5106264	IdentifierDecl	* d		5106256	0					
ANR	5106265	IdentifierDeclType	struct dirent *		5106256	0					
ANR	5106266	Identifier	d		5106256	1					
ANR	5106267	IdentifierDeclStatement	struct stat st ;	164:8:2734:2748	5106256	2	True				
ANR	5106268	IdentifierDecl	st		5106256	0					
ANR	5106269	IdentifierDeclType	struct stat		5106256	0					
ANR	5106270	Identifier	st		5106256	1					
ANR	5106271	IdentifierDeclStatement	DIR * dp ;	165:8:2758:2765	5106256	3	True				
ANR	5106272	IdentifierDecl	* dp		5106256	0					
ANR	5106273	IdentifierDeclType	DIR *		5106256	0					
ANR	5106274	Identifier	dp		5106256	1					
ANR	5106275	IfStatement	"if ( lstat ( path , & st ) == - 1 || ! S_ISDIR ( st . st_mode ) )"		5106256	4					
ANR	5106276	Condition	"lstat ( path , & st ) == - 1 || ! S_ISDIR ( st . st_mode )"	167:5:2773:2820	5106256	0	True				
ANR	5106277	OrExpression	"lstat ( path , & st ) == - 1 || ! S_ISDIR ( st . st_mode )"		5106256	0		||			
ANR	5106278	EqualityExpression	"lstat ( path , & st ) == - 1"		5106256	0		==			
ANR	5106279	CallExpression	"lstat ( path , & st )"		5106256	0					
ANR	5106280	Callee	lstat		5106256	0					
ANR	5106281	Identifier	lstat		5106256	0					
ANR	5106282	ArgumentList	path		5106256	1					
ANR	5106283	Argument	path		5106256	0					
ANR	5106284	Identifier	path		5106256	0					
ANR	5106285	Argument	& st		5106256	1					
ANR	5106286	UnaryOperationExpression	& st		5106256	0					
ANR	5106287	UnaryOperator	&		5106256	0					
ANR	5106288	Identifier	st		5106256	1					
ANR	5106289	UnaryOperationExpression	- 1		5106256	1					
ANR	5106290	UnaryOperator	-		5106256	0					
ANR	5106291	PrimaryExpression	1		5106256	1					
ANR	5106292	UnaryOperationExpression	! S_ISDIR ( st . st_mode )		5106256	1					
ANR	5106293	UnaryOperator	!		5106256	0					
ANR	5106294	CallExpression	S_ISDIR ( st . st_mode )		5106256	1					
ANR	5106295	Callee	S_ISDIR		5106256	0					
ANR	5106296	Identifier	S_ISDIR		5106256	0					
ANR	5106297	ArgumentList	st . st_mode		5106256	1					
ANR	5106298	Argument	st . st_mode		5106256	0					
ANR	5106299	MemberAccess	st . st_mode		5106256	0					
ANR	5106300	Identifier	st		5106256	0					
ANR	5106301	Identifier	st_mode		5106256	1					
ANR	5106302	CompoundStatement		7:55:143:143	5106256	1					
ANR	5106303	ReturnStatement	return ;	168:2:2827:2833	5106256	0	True				
ANR	5106304	ElseStatement	else		5106256	0					
ANR	5106305	IfStatement	if ( ! ( dp = opendir ( path ) ) )		5106256	0					
ANR	5106306	Condition	! ( dp = opendir ( path ) )	169:12:2847:2868	5106256	0	True				
ANR	5106307	UnaryOperationExpression	! ( dp = opendir ( path ) )		5106256	0					
ANR	5106308	UnaryOperator	!		5106256	0					
ANR	5106309	AssignmentExpression	dp = opendir ( path )		5106256	1		=			
ANR	5106310	Identifier	dp		5106256	0					
ANR	5106311	CallExpression	opendir ( path )		5106256	1					
ANR	5106312	Callee	opendir		5106256	0					
ANR	5106313	Identifier	opendir		5106256	0					
ANR	5106314	ArgumentList	path		5106256	1					
ANR	5106315	Argument	path		5106256	0					
ANR	5106316	Identifier	path		5106256	0					
ANR	5106317	CompoundStatement		9:36:191:191	5106256	1					
ANR	5106318	ExpressionStatement	"eprintf ( ""opendir %s:"" , path )"	170:2:2875:2904	5106256	0	True				
ANR	5106319	CallExpression	"eprintf ( ""opendir %s:"" , path )"		5106256	0					
ANR	5106320	Callee	eprintf		5106256	0					
ANR	5106321	Identifier	eprintf		5106256	0					
ANR	5106322	ArgumentList	"""opendir %s:"""		5106256	1					
ANR	5106323	Argument	"""opendir %s:"""		5106256	0					
ANR	5106324	PrimaryExpression	"""opendir %s:"""		5106256	0					
ANR	5106325	Argument	path		5106256	1					
ANR	5106326	Identifier	path		5106256	0					
ANR	5106327	ReturnStatement	return ;	171:2:2908:2914	5106256	1	True				
ANR	5106328	ExpressionStatement	cwd = agetcwd ( )	173:8:2927:2942	5106256	5	True				
ANR	5106329	AssignmentExpression	cwd = agetcwd ( )		5106256	0		=			
ANR	5106330	Identifier	cwd		5106256	0					
ANR	5106331	CallExpression	agetcwd ( )		5106256	1					
ANR	5106332	Callee	agetcwd		5106256	0					
ANR	5106333	Identifier	agetcwd		5106256	0					
ANR	5106334	ArgumentList			5106256	1					
ANR	5106335	IfStatement	if ( chdir ( path ) == - 1 )		5106256	6					
ANR	5106336	Condition	chdir ( path ) == - 1	174:12:2956:2973	5106256	0	True				
ANR	5106337	EqualityExpression	chdir ( path ) == - 1		5106256	0		==			
ANR	5106338	CallExpression	chdir ( path )		5106256	0					
ANR	5106339	Callee	chdir		5106256	0					
ANR	5106340	Identifier	chdir		5106256	0					
ANR	5106341	ArgumentList	path		5106256	1					
ANR	5106342	Argument	path		5106256	0					
ANR	5106343	Identifier	path		5106256	0					
ANR	5106344	UnaryOperationExpression	- 1		5106256	1					
ANR	5106345	UnaryOperator	-		5106256	0					
ANR	5106346	PrimaryExpression	1		5106256	1					
ANR	5106347	CompoundStatement		14:32:296:296	5106256	1					
ANR	5106348	ExpressionStatement	"eprintf ( ""chdir %s:"" , path )"	175:16:2994:3021	5106256	0	True				
ANR	5106349	CallExpression	"eprintf ( ""chdir %s:"" , path )"		5106256	0					
ANR	5106350	Callee	eprintf		5106256	0					
ANR	5106351	Identifier	eprintf		5106256	0					
ANR	5106352	ArgumentList	"""chdir %s:"""		5106256	1					
ANR	5106353	Argument	"""chdir %s:"""		5106256	0					
ANR	5106354	PrimaryExpression	"""chdir %s:"""		5106256	0					
ANR	5106355	Argument	path		5106256	1					
ANR	5106356	Identifier	path		5106256	0					
ANR	5106357	ExpressionStatement	closedir ( dp )	176:2:3025:3038	5106256	1	True				
ANR	5106358	CallExpression	closedir ( dp )		5106256	0					
ANR	5106359	Callee	closedir		5106256	0					
ANR	5106360	Identifier	closedir		5106256	0					
ANR	5106361	ArgumentList	dp		5106256	1					
ANR	5106362	Argument	dp		5106256	0					
ANR	5106363	Identifier	dp		5106256	0					
ANR	5106364	ExpressionStatement	free ( cwd )	177:2:3042:3052	5106256	2	True				
ANR	5106365	CallExpression	free ( cwd )		5106256	0					
ANR	5106366	Callee	free		5106256	0					
ANR	5106367	Identifier	free		5106256	0					
ANR	5106368	ArgumentList	cwd		5106256	1					
ANR	5106369	Argument	cwd		5106256	0					
ANR	5106370	Identifier	cwd		5106256	0					
ANR	5106371	ReturnStatement	return ;	178:2:3056:3062	5106256	3	True				
ANR	5106372	WhileStatement	while ( ( d = readdir ( dp ) ) )		5106256	7					
ANR	5106373	Condition	d = readdir ( dp )	180:8:3075:3092	5106256	0	True				
ANR	5106374	AssignmentExpression	d = readdir ( dp )		5106256	0		=			
ANR	5106375	Identifier	d		5106256	0					
ANR	5106376	CallExpression	readdir ( dp )		5106256	1					
ANR	5106377	Callee	readdir		5106256	0					
ANR	5106378	Identifier	readdir		5106256	0					
ANR	5106379	ArgumentList	dp		5106256	1					
ANR	5106380	Argument	dp		5106256	0					
ANR	5106381	Identifier	dp		5106256	0					
ANR	5106382	CompoundStatement		20:28:415:415	5106256	1					
ANR	5106383	IfStatement	"if ( strcmp ( d -> d_name , ""."" ) && strcmp ( d -> d_name , "".."" ) )"		5106256	0					
ANR	5106384	Condition	"strcmp ( d -> d_name , ""."" ) && strcmp ( d -> d_name , "".."" )"	181:6:3103:3153	5106256	0	True				
ANR	5106385	AndExpression	"strcmp ( d -> d_name , ""."" ) && strcmp ( d -> d_name , "".."" )"		5106256	0		&&			
ANR	5106386	CallExpression	"strcmp ( d -> d_name , ""."" )"		5106256	0					
ANR	5106387	Callee	strcmp		5106256	0					
ANR	5106388	Identifier	strcmp		5106256	0					
ANR	5106389	ArgumentList	d -> d_name		5106256	1					
ANR	5106390	Argument	d -> d_name		5106256	0					
ANR	5106391	PtrMemberAccess	d -> d_name		5106256	0					
ANR	5106392	Identifier	d		5106256	0					
ANR	5106393	Identifier	d_name		5106256	1					
ANR	5106394	Argument	"""."""		5106256	1					
ANR	5106395	PrimaryExpression	"""."""		5106256	0					
ANR	5106396	CallExpression	"strcmp ( d -> d_name , "".."" )"		5106256	1					
ANR	5106397	Callee	strcmp		5106256	0					
ANR	5106398	Identifier	strcmp		5106256	0					
ANR	5106399	ArgumentList	d -> d_name		5106256	1					
ANR	5106400	Argument	d -> d_name		5106256	0					
ANR	5106401	PtrMemberAccess	d -> d_name		5106256	0					
ANR	5106402	Identifier	d		5106256	0					
ANR	5106403	Identifier	d_name		5106256	1					
ANR	5106404	Argument	""".."""		5106256	1					
ANR	5106405	PrimaryExpression	""".."""		5106256	0					
ANR	5106406	CompoundStatement		21:59:476:476	5106256	1					
ANR	5106407	ExpressionStatement	"fn ( d -> d_name , 1 )"	182:3:3161:3178	5106256	0	True				
ANR	5106408	CallExpression	"fn ( d -> d_name , 1 )"		5106256	0					
ANR	5106409	Callee	fn		5106256	0					
ANR	5106410	Identifier	fn		5106256	0					
ANR	5106411	ArgumentList	d -> d_name		5106256	1					
ANR	5106412	Argument	d -> d_name		5106256	0					
ANR	5106413	PtrMemberAccess	d -> d_name		5106256	0					
ANR	5106414	Identifier	d		5106256	0					
ANR	5106415	Identifier	d_name		5106256	1					
ANR	5106416	Argument	1		5106256	1					
ANR	5106417	PrimaryExpression	1		5106256	0					
ANR	5106418	ExpressionStatement	closedir ( dp )	186:1:3189:3202	5106256	8	True				
ANR	5106419	CallExpression	closedir ( dp )		5106256	0					
ANR	5106420	Callee	closedir		5106256	0					
ANR	5106421	Identifier	closedir		5106256	0					
ANR	5106422	ArgumentList	dp		5106256	1					
ANR	5106423	Argument	dp		5106256	0					
ANR	5106424	Identifier	dp		5106256	0					
ANR	5106425	IfStatement	if ( chdir ( cwd ) == - 1 )		5106256	9					
ANR	5106426	Condition	chdir ( cwd ) == - 1	187:5:3209:3225	5106256	0	True				
ANR	5106427	EqualityExpression	chdir ( cwd ) == - 1		5106256	0		==			
ANR	5106428	CallExpression	chdir ( cwd )		5106256	0					
ANR	5106429	Callee	chdir		5106256	0					
ANR	5106430	Identifier	chdir		5106256	0					
ANR	5106431	ArgumentList	cwd		5106256	1					
ANR	5106432	Argument	cwd		5106256	0					
ANR	5106433	Identifier	cwd		5106256	0					
ANR	5106434	UnaryOperationExpression	- 1		5106256	1					
ANR	5106435	UnaryOperator	-		5106256	0					
ANR	5106436	PrimaryExpression	1		5106256	1					
ANR	5106437	CompoundStatement		27:24:548:548	5106256	1					
ANR	5106438	ExpressionStatement	"eprintf ( ""chdir %s:"" , cwd )"	188:2:3232:3258	5106256	0	True				
ANR	5106439	CallExpression	"eprintf ( ""chdir %s:"" , cwd )"		5106256	0					
ANR	5106440	Callee	eprintf		5106256	0					
ANR	5106441	Identifier	eprintf		5106256	0					
ANR	5106442	ArgumentList	"""chdir %s:"""		5106256	1					
ANR	5106443	Argument	"""chdir %s:"""		5106256	0					
ANR	5106444	PrimaryExpression	"""chdir %s:"""		5106256	0					
ANR	5106445	Argument	cwd		5106256	1					
ANR	5106446	Identifier	cwd		5106256	0					
ANR	5106447	ExpressionStatement	free ( cwd )	190:1:3264:3274	5106256	10	True				
ANR	5106448	CallExpression	free ( cwd )		5106256	0					
ANR	5106449	Callee	free		5106256	0					
ANR	5106450	Identifier	free		5106256	0					
ANR	5106451	ArgumentList	cwd		5106256	1					
ANR	5106452	Argument	cwd		5106256	0					
ANR	5106453	Identifier	cwd		5106256	0					
ANR	5106454	ReturnType	static void		5106256	1					
ANR	5106455	Identifier	recurse		5106256	2					
ANR	5106456	ParameterList	"const char * path , int rec , int ( * fn ) ( const char * , int )"		5106256	3					
ANR	5106457	Parameter	const char * path	161:20:2623:2638	5106256	0	True				
ANR	5106458	ParameterType	const char *		5106256	0					
ANR	5106459	Identifier	path		5106256	1					
ANR	5106460	Parameter	int rec	161:38:2641:2647	5106256	1	True				
ANR	5106461	ParameterType	int		5106256	0					
ANR	5106462	Identifier	rec		5106256	1					
ANR	5106463	Parameter	"int ( * fn ) ( const char * , int )"	161:47:2650:2676	5106256	2	True				
ANR	5106464	ParameterType	"(( const char * , int ) int) *"		5106256	0					
ANR	5106465	Identifier	fn		5106256	1					
ANR	5106466	CFGEntryNode	ENTRY		5106256		True				
ANR	5106467	CFGExitNode	EXIT		5106256		True				
ANR	5106468	Symbol	strcmp		5106256						
ANR	5106469	Symbol	st		5106256						
ANR	5106470	Symbol	d		5106256						
ANR	5106471	Symbol	lstat		5106256						
ANR	5106472	Symbol	fn		5106256						
ANR	5106473	Symbol	& st		5106256						
ANR	5106474	Symbol	st . st_mode		5106256						
ANR	5106475	Symbol	chdir		5106256						
ANR	5106476	Symbol	dp		5106256						
ANR	5106477	Symbol	* d		5106256						
ANR	5106478	Symbol	path		5106256						
ANR	5106479	Symbol	rec		5106256						
ANR	5106480	Symbol	cwd		5106256						
ANR	5106481	Symbol	readdir		5106256						
ANR	5106482	Symbol	opendir		5106256						
ANR	5106483	Symbol	d -> d_name		5106256						
ANR	5106484	Symbol	S_ISDIR		5106256						
ANR	5106485	Symbol	agetcwd		5106256						
