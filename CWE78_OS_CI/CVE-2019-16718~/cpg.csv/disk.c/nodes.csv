command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1259714	File	data/converged/CVE-2019-16718~_radare2/disk.c								
ANR	1259715	Function	r_utf8_to_utf16_l	15:0:220:684							
ANR	1259716	FunctionDef	"r_utf8_to_utf16_l (const char * cstring , int len)"		1259715	0					
ANR	1259717	CompoundStatement		15:65:285:684	1259715	0					
ANR	1259718	IfStatement	if ( ! cstring || ! len || len < - 1 )		1259715	0					
ANR	1259719	Condition	! cstring || ! len || len < - 1	16:5:292:319	1259715	0	True				
ANR	1259720	OrExpression	! cstring || ! len || len < - 1		1259715	0		||			
ANR	1259721	UnaryOperationExpression	! cstring		1259715	0					
ANR	1259722	UnaryOperator	!		1259715	0					
ANR	1259723	Identifier	cstring		1259715	1					
ANR	1259724	OrExpression	! len || len < - 1		1259715	1		||			
ANR	1259725	UnaryOperationExpression	! len		1259715	0					
ANR	1259726	UnaryOperator	!		1259715	0					
ANR	1259727	Identifier	len		1259715	1					
ANR	1259728	RelationalExpression	len < - 1		1259715	1		<			
ANR	1259729	Identifier	len		1259715	0					
ANR	1259730	UnaryOperationExpression	- 1		1259715	1					
ANR	1259731	UnaryOperator	-		1259715	0					
ANR	1259732	PrimaryExpression	1		1259715	1					
ANR	1259733	CompoundStatement		2:35:36:36	1259715	1					
ANR	1259734	ReturnStatement	return NULL ;	17:2:326:337	1259715	0	True				
ANR	1259735	Identifier	NULL		1259715	0					
ANR	1259736	IdentifierDeclStatement	wchar_t * rutf16 = NULL ;	19:1:343:365	1259715	1	True				
ANR	1259737	IdentifierDecl	* rutf16 = NULL		1259715	0					
ANR	1259738	IdentifierDeclType	wchar_t *		1259715	0					
ANR	1259739	Identifier	rutf16		1259715	1					
ANR	1259740	AssignmentExpression	* rutf16 = NULL		1259715	2		=			
ANR	1259741	Identifier	NULL		1259715	0					
ANR	1259742	Identifier	NULL		1259715	1					
ANR	1259743	IdentifierDeclStatement	int wcsize ;	20:1:368:378	1259715	2	True				
ANR	1259744	IdentifierDecl	wcsize		1259715	0					
ANR	1259745	IdentifierDeclType	int		1259715	0					
ANR	1259746	Identifier	wcsize		1259715	1					
ANR	1259747	IfStatement	"if ( ( wcsize = MultiByteToWideChar ( CP_UTF8 , 0 , cstring , len , NULL , 0 ) ) )"		1259715	3					
ANR	1259748	Condition	"wcsize = MultiByteToWideChar ( CP_UTF8 , 0 , cstring , len , NULL , 0 )"	22:5:386:451	1259715	0	True				
ANR	1259749	AssignmentExpression	"wcsize = MultiByteToWideChar ( CP_UTF8 , 0 , cstring , len , NULL , 0 )"		1259715	0		=			
ANR	1259750	Identifier	wcsize		1259715	0					
ANR	1259751	CallExpression	"MultiByteToWideChar ( CP_UTF8 , 0 , cstring , len , NULL , 0 )"		1259715	1					
ANR	1259752	Callee	MultiByteToWideChar		1259715	0					
ANR	1259753	Identifier	MultiByteToWideChar		1259715	0					
ANR	1259754	ArgumentList	CP_UTF8		1259715	1					
ANR	1259755	Argument	CP_UTF8		1259715	0					
ANR	1259756	Identifier	CP_UTF8		1259715	0					
ANR	1259757	Argument	0		1259715	1					
ANR	1259758	PrimaryExpression	0		1259715	0					
ANR	1259759	Argument	cstring		1259715	2					
ANR	1259760	Identifier	cstring		1259715	0					
ANR	1259761	Argument	len		1259715	3					
ANR	1259762	Identifier	len		1259715	0					
ANR	1259763	Argument	NULL		1259715	4					
ANR	1259764	Identifier	NULL		1259715	0					
ANR	1259765	Argument	0		1259715	5					
ANR	1259766	PrimaryExpression	0		1259715	0					
ANR	1259767	CompoundStatement		8:73:168:168	1259715	1					
ANR	1259768	ExpressionStatement	wcsize += 1	23:2:458:469	1259715	0	True				
ANR	1259769	AssignmentExpression	wcsize += 1		1259715	0		+=			
ANR	1259770	Identifier	wcsize		1259715	0					
ANR	1259771	PrimaryExpression	1		1259715	1					
ANR	1259772	IfStatement	"if ( ( rutf16 = ( wchar_t * ) calloc ( wcsize , sizeof ( wchar_t ) ) ) )"		1259715	1					
ANR	1259773	Condition	"rutf16 = ( wchar_t * ) calloc ( wcsize , sizeof ( wchar_t ) )"	24:6:477:532	1259715	0	True				
ANR	1259774	AssignmentExpression	"rutf16 = ( wchar_t * ) calloc ( wcsize , sizeof ( wchar_t ) )"		1259715	0		=			
ANR	1259775	Identifier	rutf16		1259715	0					
ANR	1259776	CastExpression	"( wchar_t * ) calloc ( wcsize , sizeof ( wchar_t ) )"		1259715	1					
ANR	1259777	CastTarget	wchar_t *		1259715	0					
ANR	1259778	CallExpression	"calloc ( wcsize , sizeof ( wchar_t ) )"		1259715	1					
ANR	1259779	Callee	calloc		1259715	0					
ANR	1259780	Identifier	calloc		1259715	0					
ANR	1259781	ArgumentList	wcsize		1259715	1					
ANR	1259782	Argument	wcsize		1259715	0					
ANR	1259783	Identifier	wcsize		1259715	0					
ANR	1259784	Argument	sizeof ( wchar_t )		1259715	1					
ANR	1259785	SizeofExpression	sizeof ( wchar_t )		1259715	0					
ANR	1259786	Sizeof	sizeof		1259715	0					
ANR	1259787	SizeofOperand	wchar_t		1259715	1					
ANR	1259788	CompoundStatement		10:64:249:249	1259715	1					
ANR	1259789	ExpressionStatement	"MultiByteToWideChar ( CP_UTF8 , 0 , cstring , len , rutf16 , wcsize )"	25:3:540:602	1259715	0	True				
ANR	1259790	CallExpression	"MultiByteToWideChar ( CP_UTF8 , 0 , cstring , len , rutf16 , wcsize )"		1259715	0					
ANR	1259791	Callee	MultiByteToWideChar		1259715	0					
ANR	1259792	Identifier	MultiByteToWideChar		1259715	0					
ANR	1259793	ArgumentList	CP_UTF8		1259715	1					
ANR	1259794	Argument	CP_UTF8		1259715	0					
ANR	1259795	Identifier	CP_UTF8		1259715	0					
ANR	1259796	Argument	0		1259715	1					
ANR	1259797	PrimaryExpression	0		1259715	0					
ANR	1259798	Argument	cstring		1259715	2					
ANR	1259799	Identifier	cstring		1259715	0					
ANR	1259800	Argument	len		1259715	3					
ANR	1259801	Identifier	len		1259715	0					
ANR	1259802	Argument	rutf16		1259715	4					
ANR	1259803	Identifier	rutf16		1259715	0					
ANR	1259804	Argument	wcsize		1259715	5					
ANR	1259805	Identifier	wcsize		1259715	0					
ANR	1259806	IfStatement	if ( len != - 1 )		1259715	1					
ANR	1259807	Condition	len != - 1	26:7:611:619	1259715	0	True				
ANR	1259808	EqualityExpression	len != - 1		1259715	0		!=			
ANR	1259809	Identifier	len		1259715	0					
ANR	1259810	UnaryOperationExpression	- 1		1259715	1					
ANR	1259811	UnaryOperator	-		1259715	0					
ANR	1259812	PrimaryExpression	1		1259715	1					
ANR	1259813	CompoundStatement		12:18:336:336	1259715	1					
ANR	1259814	Statement	rutf16	27:4:628:633	1259715	0	True				
ANR	1259815	Statement	[	27:10:634:634	1259715	1	True				
ANR	1259816	Statement	wcsize	27:11:635:640	1259715	2	True				
ANR	1259817	Statement	-	27:18:642:642	1259715	3	True				
ANR	1259818	Statement	1	27:20:644:644	1259715	4	True				
ANR	1259819	Statement	]	27:21:645:645	1259715	5	True				
ANR	1259820	Statement	=	27:23:647:647	1259715	6	True				
ANR	1259821	Statement	L	27:25:649:649	1259715	7	True				
ANR	1259822	ExpressionStatement	'\\0'	27:26:650:654	1259715	8	True				
ANR	1259823	PrimaryExpression	'\\0'		1259715	0					
ANR	1259824	ReturnStatement	return rutf16 ;	31:1:669:682	1259715	4	True				
ANR	1259825	Identifier	rutf16		1259715	0					
ANR	1259826	ReturnType	static wchar_t *		1259715	1					
ANR	1259827	Identifier	r_utf8_to_utf16_l		1259715	2					
ANR	1259828	ParameterList	"const char * cstring , int len"		1259715	3					
ANR	1259829	Parameter	const char * cstring	15:35:255:273	1259715	0	True				
ANR	1259830	ParameterType	const char *		1259715	0					
ANR	1259831	Identifier	cstring		1259715	1					
ANR	1259832	Parameter	int len	15:56:276:282	1259715	1	True				
ANR	1259833	ParameterType	int		1259715	0					
ANR	1259834	Identifier	len		1259715	1					
ANR	1259835	CFGEntryNode	ENTRY		1259715		True				
ANR	1259836	CFGExitNode	EXIT		1259715		True				
ANR	1259837	Symbol	NULL		1259715						
ANR	1259838	Symbol	len		1259715						
ANR	1259839	Symbol	wcsize		1259715						
ANR	1259840	Symbol	CP_UTF8		1259715						
ANR	1259841	Symbol	rutf16		1259715						
ANR	1259842	Symbol	cstring		1259715						
ANR	1259843	Symbol	MultiByteToWideChar		1259715						
ANR	1259844	Symbol	calloc		1259715						
ANR	1259845	Function	r_sys_mkdir	36:0:756:921							
ANR	1259846	FunctionDef	r_sys_mkdir (const char * path)		1259845	0					
ANR	1259847	CompoundStatement		36:42:798:921	1259845	0					
ANR	1259848	IdentifierDeclStatement	LPTSTR path_ = r_sys_conv_utf8_to_utf16 ( path ) ;	37:1:801:847	1259845	0	True				
ANR	1259849	IdentifierDecl	path_ = r_sys_conv_utf8_to_utf16 ( path )		1259845	0					
ANR	1259850	IdentifierDeclType	LPTSTR		1259845	0					
ANR	1259851	Identifier	path_		1259845	1					
ANR	1259852	AssignmentExpression	path_ = r_sys_conv_utf8_to_utf16 ( path )		1259845	2		=			
ANR	1259853	Identifier	path_		1259845	0					
ANR	1259854	CallExpression	r_sys_conv_utf8_to_utf16 ( path )		1259845	1					
ANR	1259855	Callee	r_sys_conv_utf8_to_utf16		1259845	0					
ANR	1259856	Identifier	r_sys_conv_utf8_to_utf16		1259845	0					
ANR	1259857	ArgumentList	path		1259845	1					
ANR	1259858	Argument	path		1259845	0					
ANR	1259859	Identifier	path		1259845	0					
ANR	1259860	IdentifierDeclStatement	"bool ret = CreateDirectory ( path_ , NULL ) ;"	38:1:850:890	1259845	1	True				
ANR	1259861	IdentifierDecl	"ret = CreateDirectory ( path_ , NULL )"		1259845	0					
ANR	1259862	IdentifierDeclType	bool		1259845	0					
ANR	1259863	Identifier	ret		1259845	1					
ANR	1259864	AssignmentExpression	"ret = CreateDirectory ( path_ , NULL )"		1259845	2		=			
ANR	1259865	Identifier	ret		1259845	0					
ANR	1259866	CallExpression	"CreateDirectory ( path_ , NULL )"		1259845	1					
ANR	1259867	Callee	CreateDirectory		1259845	0					
ANR	1259868	Identifier	CreateDirectory		1259845	0					
ANR	1259869	ArgumentList	path_		1259845	1					
ANR	1259870	Argument	path_		1259845	0					
ANR	1259871	Identifier	path_		1259845	0					
ANR	1259872	Argument	NULL		1259845	1					
ANR	1259873	Identifier	NULL		1259845	0					
ANR	1259874	ExpressionStatement	free ( path_ )	40:1:894:906	1259845	2	True				
ANR	1259875	CallExpression	free ( path_ )		1259845	0					
ANR	1259876	Callee	free		1259845	0					
ANR	1259877	Identifier	free		1259845	0					
ANR	1259878	ArgumentList	path_		1259845	1					
ANR	1259879	Argument	path_		1259845	0					
ANR	1259880	Identifier	path_		1259845	0					
ANR	1259881	ReturnStatement	return ret ;	41:1:909:919	1259845	3	True				
ANR	1259882	Identifier	ret		1259845	0					
ANR	1259883	ReturnType	static bool		1259845	1					
ANR	1259884	Identifier	r_sys_mkdir		1259845	2					
ANR	1259885	ParameterList	const char * path		1259845	3					
ANR	1259886	Parameter	const char * path	36:24:780:795	1259845	0	True				
ANR	1259887	ParameterType	const char *		1259845	0					
ANR	1259888	Identifier	path		1259845	1					
ANR	1259889	CFGEntryNode	ENTRY		1259845		True				
ANR	1259890	CFGExitNode	EXIT		1259845		True				
ANR	1259891	Symbol	ret		1259845						
ANR	1259892	Symbol	path		1259845						
ANR	1259893	Symbol	r_sys_conv_utf8_to_utf16		1259845						
ANR	1259894	Symbol	path_		1259845						
ANR	1259895	Symbol	NULL		1259845						
ANR	1259896	Symbol	CreateDirectory		1259845						
ANR	1259897	Function	r_sys_mkdirp	56:0:1264:1750							
ANR	1259898	FunctionDef	r_sys_mkdirp (char * dir)		1259897	0					
ANR	1259899	CompoundStatement		56:42:1306:1750	1259897	0					
ANR	1259900	IdentifierDeclStatement	int ret = 1 ;	57:1:1309:1320	1259897	0	True				
ANR	1259901	IdentifierDecl	ret = 1		1259897	0					
ANR	1259902	IdentifierDeclType	int		1259897	0					
ANR	1259903	Identifier	ret		1259897	1					
ANR	1259904	AssignmentExpression	ret = 1		1259897	2		=			
ANR	1259905	Identifier	ret		1259897	0					
ANR	1259906	PrimaryExpression	1		1259897	1					
ANR	1259907	IdentifierDeclStatement	const char slash = DIRSEP ;	58:1:1323:1348	1259897	1	True				
ANR	1259908	IdentifierDecl	slash = DIRSEP		1259897	0					
ANR	1259909	IdentifierDeclType	const char		1259897	0					
ANR	1259910	Identifier	slash		1259897	1					
ANR	1259911	AssignmentExpression	slash = DIRSEP		1259897	2		=			
ANR	1259912	Identifier	DIRSEP		1259897	0					
ANR	1259913	Identifier	DIRSEP		1259897	1					
ANR	1259914	IdentifierDeclStatement	char * path = dir ;	59:1:1351:1367	1259897	2	True				
ANR	1259915	IdentifierDecl	* path = dir		1259897	0					
ANR	1259916	IdentifierDeclType	char *		1259897	0					
ANR	1259917	Identifier	path		1259897	1					
ANR	1259918	AssignmentExpression	* path = dir		1259897	2		=			
ANR	1259919	Identifier	dir		1259897	0					
ANR	1259920	Identifier	dir		1259897	1					
ANR	1259921	IdentifierDeclStatement	char * ptr = path ;	60:1:1370:1386	1259897	3	True				
ANR	1259922	IdentifierDecl	* ptr = path		1259897	0					
ANR	1259923	IdentifierDeclType	char *		1259897	0					
ANR	1259924	Identifier	ptr		1259897	1					
ANR	1259925	AssignmentExpression	* ptr = path		1259897	2		=			
ANR	1259926	Identifier	path		1259897	0					
ANR	1259927	Identifier	path		1259897	1					
ANR	1259928	IfStatement	if ( * ptr == slash )		1259897	4					
ANR	1259929	Condition	* ptr == slash	61:5:1393:1405	1259897	0	True				
ANR	1259930	EqualityExpression	* ptr == slash		1259897	0		==			
ANR	1259931	UnaryOperationExpression	* ptr		1259897	0					
ANR	1259932	UnaryOperator	*		1259897	0					
ANR	1259933	Identifier	ptr		1259897	1					
ANR	1259934	Identifier	slash		1259897	1					
ANR	1259935	CompoundStatement		6:20:101:101	1259897	1					
ANR	1259936	ExpressionStatement	ptr ++	62:2:1412:1417	1259897	0	True				
ANR	1259937	PostIncDecOperationExpression	ptr ++		1259897	0					
ANR	1259938	Identifier	ptr		1259897	0					
ANR	1259939	IncDec	++		1259897	1					
ANR	1259940	IdentifierDeclStatement	"char * p = strstr ( ptr , "":\\\\"" ) ;"	65:1:1443:1472	1259897	5	True				
ANR	1259941	IdentifierDecl	"* p = strstr ( ptr , "":\\\\"" )"		1259897	0					
ANR	1259942	IdentifierDeclType	char *		1259897	0					
ANR	1259943	Identifier	p		1259897	1					
ANR	1259944	AssignmentExpression	"* p = strstr ( ptr , "":\\\\"" )"		1259897	2		=			
ANR	1259945	Identifier	p		1259897	0					
ANR	1259946	CallExpression	"strstr ( ptr , "":\\\\"" )"		1259897	1					
ANR	1259947	Callee	strstr		1259897	0					
ANR	1259948	Identifier	strstr		1259897	0					
ANR	1259949	ArgumentList	ptr		1259897	1					
ANR	1259950	Argument	ptr		1259897	0					
ANR	1259951	Identifier	ptr		1259897	0					
ANR	1259952	Argument	""":\\\\"""		1259897	1					
ANR	1259953	PrimaryExpression	""":\\\\"""		1259897	0					
ANR	1259954	IfStatement	if ( p )		1259897	6					
ANR	1259955	Condition	p	66:5:1479:1479	1259897	0	True				
ANR	1259956	Identifier	p		1259897	0					
ANR	1259957	CompoundStatement		11:8:175:175	1259897	1					
ANR	1259958	ExpressionStatement	ptr = p + 2	67:2:1486:1497	1259897	0	True				
ANR	1259959	AssignmentExpression	ptr = p + 2		1259897	0		=			
ANR	1259960	Identifier	ptr		1259897	0					
ANR	1259961	AdditiveExpression	p + 2		1259897	1		+			
ANR	1259962	Identifier	p		1259897	0					
ANR	1259963	PrimaryExpression	2		1259897	1					
ANR	1259964	WhileStatement	"while ( ( ptr = strchr ( ptr , slash ) ) )"		1259897	7					
ANR	1259965	Condition	"ptr = strchr ( ptr , slash )"	70:8:1517:1543	1259897	0	True				
ANR	1259966	AssignmentExpression	"ptr = strchr ( ptr , slash )"		1259897	0		=			
ANR	1259967	Identifier	ptr		1259897	0					
ANR	1259968	CallExpression	"strchr ( ptr , slash )"		1259897	1					
ANR	1259969	Callee	strchr		1259897	0					
ANR	1259970	Identifier	strchr		1259897	0					
ANR	1259971	ArgumentList	ptr		1259897	1					
ANR	1259972	Argument	ptr		1259897	0					
ANR	1259973	Identifier	ptr		1259897	0					
ANR	1259974	Argument	slash		1259897	1					
ANR	1259975	Identifier	slash		1259897	0					
ANR	1259976	CompoundStatement		15:37:239:239	1259897	1					
ANR	1259977	ExpressionStatement	* ptr = 0	71:2:1550:1558	1259897	0	True				
ANR	1259978	AssignmentExpression	* ptr = 0		1259897	0		=			
ANR	1259979	UnaryOperationExpression	* ptr		1259897	0					
ANR	1259980	UnaryOperator	*		1259897	0					
ANR	1259981	Identifier	ptr		1259897	1					
ANR	1259982	PrimaryExpression	0		1259897	1					
ANR	1259983	IfStatement	if ( ! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( ) )		1259897	1					
ANR	1259984	Condition	! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( )	72:6:1566:1609	1259897	0	True				
ANR	1259985	AndExpression	! r_sys_mkdir ( path ) && r_sys_mkdir_failed ( )		1259897	0		&&			
ANR	1259986	UnaryOperationExpression	! r_sys_mkdir ( path )		1259897	0					
ANR	1259987	UnaryOperator	!		1259897	0					
ANR	1259988	CallExpression	r_sys_mkdir ( path )		1259897	1					
ANR	1259989	Callee	r_sys_mkdir		1259897	0					
ANR	1259990	Identifier	r_sys_mkdir		1259897	0					
ANR	1259991	ArgumentList	path		1259897	1					
ANR	1259992	Argument	path		1259897	0					
ANR	1259993	Identifier	path		1259897	0					
ANR	1259994	CallExpression	r_sys_mkdir_failed ( )		1259897	1					
ANR	1259995	Callee	r_sys_mkdir_failed		1259897	0					
ANR	1259996	Identifier	r_sys_mkdir_failed		1259897	0					
ANR	1259997	ArgumentList			1259897	1					
ANR	1259998	CompoundStatement		17:52:305:305	1259897	1					
ANR	1259999	ExpressionStatement	"eprintf ( ""r_sys_mkdirp: fail '%s' of '%s'\\n"" , path , dir )"	73:3:1617:1673	1259897	0	True				
ANR	1260000	CallExpression	"eprintf ( ""r_sys_mkdirp: fail '%s' of '%s'\\n"" , path , dir )"		1259897	0					
ANR	1260001	Callee	eprintf		1259897	0					
ANR	1260002	Identifier	eprintf		1259897	0					
ANR	1260003	ArgumentList	"""r_sys_mkdirp: fail '%s' of '%s'\\n"""		1259897	1					
ANR	1260004	Argument	"""r_sys_mkdirp: fail '%s' of '%s'\\n"""		1259897	0					
ANR	1260005	PrimaryExpression	"""r_sys_mkdirp: fail '%s' of '%s'\\n"""		1259897	0					
ANR	1260006	Argument	path		1259897	1					
ANR	1260007	Identifier	path		1259897	0					
ANR	1260008	Argument	dir		1259897	2					
ANR	1260009	Identifier	dir		1259897	0					
ANR	1260010	ExpressionStatement	* ptr = slash	74:3:1678:1690	1259897	1	True				
ANR	1260011	AssignmentExpression	* ptr = slash		1259897	0		=			
ANR	1260012	UnaryOperationExpression	* ptr		1259897	0					
ANR	1260013	UnaryOperator	*		1259897	0					
ANR	1260014	Identifier	ptr		1259897	1					
ANR	1260015	Identifier	slash		1259897	1					
ANR	1260016	ReturnStatement	return 0 ;	75:3:1695:1703	1259897	2	True				
ANR	1260017	PrimaryExpression	0		1259897	0					
ANR	1260018	ExpressionStatement	* ptr = slash	77:2:1711:1723	1259897	2	True				
ANR	1260019	AssignmentExpression	* ptr = slash		1259897	0		=			
ANR	1260020	UnaryOperationExpression	* ptr		1259897	0					
ANR	1260021	UnaryOperator	*		1259897	0					
ANR	1260022	Identifier	ptr		1259897	1					
ANR	1260023	Identifier	slash		1259897	1					
ANR	1260024	ExpressionStatement	ptr ++	78:2:1727:1732	1259897	3	True				
ANR	1260025	PostIncDecOperationExpression	ptr ++		1259897	0					
ANR	1260026	Identifier	ptr		1259897	0					
ANR	1260027	IncDec	++		1259897	1					
ANR	1260028	ReturnStatement	return ret ;	80:1:1738:1748	1259897	8	True				
ANR	1260029	Identifier	ret		1259897	0					
ANR	1260030	ReturnType	static inline int		1259897	1					
ANR	1260031	Identifier	r_sys_mkdirp		1259897	2					
ANR	1260032	ParameterList	char * dir		1259897	3					
ANR	1260033	Parameter	char * dir	56:31:1295:1303	1259897	0	True				
ANR	1260034	ParameterType	char *		1259897	0					
ANR	1260035	Identifier	dir		1259897	1					
ANR	1260036	CFGEntryNode	ENTRY		1259897		True				
ANR	1260037	CFGExitNode	EXIT		1259897		True				
ANR	1260038	Symbol	ret		1259897						
ANR	1260039	Symbol	p		1259897						
ANR	1260040	Symbol	path		1259897						
ANR	1260041	Symbol	DIRSEP		1259897						
ANR	1260042	Symbol	strstr		1259897						
ANR	1260043	Symbol	* ptr		1259897						
ANR	1260044	Symbol	strchr		1259897						
ANR	1260045	Symbol	r_sys_mkdir_failed		1259897						
ANR	1260046	Symbol	slash		1259897						
ANR	1260047	Symbol	dir		1259897						
ANR	1260048	Symbol	ptr		1259897						
ANR	1260049	Symbol	r_sys_mkdir		1259897						
ANR	1260050	Function	sdb_disk_create	83:0:1753:2700							
ANR	1260051	FunctionDef	sdb_disk_create (Sdb * s)		1260050	0					
ANR	1260052	CompoundStatement		83:37:1790:2700	1260050	0					
ANR	1260053	IdentifierDeclStatement	int nlen ;	84:1:1793:1801	1260050	0	True				
ANR	1260054	IdentifierDecl	nlen		1260050	0					
ANR	1260055	IdentifierDeclType	int		1260050	0					
ANR	1260056	Identifier	nlen		1260050	1					
ANR	1260057	IdentifierDeclStatement	char * str ;	85:1:1804:1813	1260050	1	True				
ANR	1260058	IdentifierDecl	* str		1260050	0					
ANR	1260059	IdentifierDeclType	char *		1260050	0					
ANR	1260060	Identifier	str		1260050	1					
ANR	1260061	IdentifierDeclStatement	const char * dir ;	86:1:1816:1831	1260050	2	True				
ANR	1260062	IdentifierDecl	* dir		1260050	0					
ANR	1260063	IdentifierDeclType	const char *		1260050	0					
ANR	1260064	Identifier	dir		1260050	1					
ANR	1260065	IfStatement	if ( ! s || s -> fdump >= 0 )		1260050	3					
ANR	1260066	Condition	! s || s -> fdump >= 0	87:5:1838:1856	1260050	0	True				
ANR	1260067	OrExpression	! s || s -> fdump >= 0		1260050	0		||			
ANR	1260068	UnaryOperationExpression	! s		1260050	0					
ANR	1260069	UnaryOperator	!		1260050	0					
ANR	1260070	Identifier	s		1260050	1					
ANR	1260071	RelationalExpression	s -> fdump >= 0		1260050	1		>=			
ANR	1260072	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260073	Identifier	s		1260050	0					
ANR	1260074	Identifier	fdump		1260050	1					
ANR	1260075	PrimaryExpression	0		1260050	1					
ANR	1260076	CompoundStatement		5:26:68:68	1260050	1					
ANR	1260077	ReturnStatement	return false ;	88:2:1863:1875	1260050	0	True				
ANR	1260078	Identifier	false		1260050	0					
ANR	1260079	IfStatement	if ( ! s -> dir && s -> name )		1260050	4					
ANR	1260080	Condition	! s -> dir && s -> name	90:5:1905:1922	1260050	0	True				
ANR	1260081	AndExpression	! s -> dir && s -> name		1260050	0		&&			
ANR	1260082	UnaryOperationExpression	! s -> dir		1260050	0					
ANR	1260083	UnaryOperator	!		1260050	0					
ANR	1260084	PtrMemberAccess	s -> dir		1260050	1					
ANR	1260085	Identifier	s		1260050	0					
ANR	1260086	Identifier	dir		1260050	1					
ANR	1260087	PtrMemberAccess	s -> name		1260050	1					
ANR	1260088	Identifier	s		1260050	0					
ANR	1260089	Identifier	name		1260050	1					
ANR	1260090	CompoundStatement		8:25:134:134	1260050	1					
ANR	1260091	ExpressionStatement	s -> dir = strdup ( s -> name )	91:2:1929:1954	1260050	0	True				
ANR	1260092	AssignmentExpression	s -> dir = strdup ( s -> name )		1260050	0		=			
ANR	1260093	PtrMemberAccess	s -> dir		1260050	0					
ANR	1260094	Identifier	s		1260050	0					
ANR	1260095	Identifier	dir		1260050	1					
ANR	1260096	CallExpression	strdup ( s -> name )		1260050	1					
ANR	1260097	Callee	strdup		1260050	0					
ANR	1260098	Identifier	strdup		1260050	0					
ANR	1260099	ArgumentList	s -> name		1260050	1					
ANR	1260100	Argument	s -> name		1260050	0					
ANR	1260101	PtrMemberAccess	s -> name		1260050	0					
ANR	1260102	Identifier	s		1260050	0					
ANR	1260103	Identifier	name		1260050	1					
ANR	1260104	ExpressionStatement	"dir = s -> dir ? s -> dir : ""./"""	93:1:1960:1988	1260050	5	True				
ANR	1260105	AssignmentExpression	"dir = s -> dir ? s -> dir : ""./"""		1260050	0		=			
ANR	1260106	Identifier	dir		1260050	0					
ANR	1260107	ConditionalExpression	"s -> dir ? s -> dir : ""./"""		1260050	1					
ANR	1260108	Condition	s -> dir		1260050	0					
ANR	1260109	PtrMemberAccess	s -> dir		1260050	0					
ANR	1260110	Identifier	s		1260050	0					
ANR	1260111	Identifier	dir		1260050	1					
ANR	1260112	PtrMemberAccess	s -> dir		1260050	1					
ANR	1260113	Identifier	s		1260050	0					
ANR	1260114	Identifier	dir		1260050	1					
ANR	1260115	PrimaryExpression	"""./"""		1260050	2					
ANR	1260116	ExpressionStatement	R_FREE ( s -> ndump )	94:1:1991:2008	1260050	6	True				
ANR	1260117	CallExpression	R_FREE ( s -> ndump )		1260050	0					
ANR	1260118	Callee	R_FREE		1260050	0					
ANR	1260119	Identifier	R_FREE		1260050	0					
ANR	1260120	ArgumentList	s -> ndump		1260050	1					
ANR	1260121	Argument	s -> ndump		1260050	0					
ANR	1260122	PtrMemberAccess	s -> ndump		1260050	0					
ANR	1260123	Identifier	s		1260050	0					
ANR	1260124	Identifier	ndump		1260050	1					
ANR	1260125	ExpressionStatement	nlen = strlen ( dir )	95:1:2011:2030	1260050	7	True				
ANR	1260126	AssignmentExpression	nlen = strlen ( dir )		1260050	0		=			
ANR	1260127	Identifier	nlen		1260050	0					
ANR	1260128	CallExpression	strlen ( dir )		1260050	1					
ANR	1260129	Callee	strlen		1260050	0					
ANR	1260130	Identifier	strlen		1260050	0					
ANR	1260131	ArgumentList	dir		1260050	1					
ANR	1260132	Argument	dir		1260050	0					
ANR	1260133	Identifier	dir		1260050	0					
ANR	1260134	ExpressionStatement	str = malloc ( nlen + 5 )	96:1:2033:2056	1260050	8	True				
ANR	1260135	AssignmentExpression	str = malloc ( nlen + 5 )		1260050	0		=			
ANR	1260136	Identifier	str		1260050	0					
ANR	1260137	CallExpression	malloc ( nlen + 5 )		1260050	1					
ANR	1260138	Callee	malloc		1260050	0					
ANR	1260139	Identifier	malloc		1260050	0					
ANR	1260140	ArgumentList	nlen + 5		1260050	1					
ANR	1260141	Argument	nlen + 5		1260050	0					
ANR	1260142	AdditiveExpression	nlen + 5		1260050	0		+			
ANR	1260143	Identifier	nlen		1260050	0					
ANR	1260144	PrimaryExpression	5		1260050	1					
ANR	1260145	IfStatement	if ( ! str )		1260050	9					
ANR	1260146	Condition	! str	97:5:2063:2066	1260050	0	True				
ANR	1260147	UnaryOperationExpression	! str		1260050	0					
ANR	1260148	UnaryOperator	!		1260050	0					
ANR	1260149	Identifier	str		1260050	1					
ANR	1260150	CompoundStatement		15:11:278:278	1260050	1					
ANR	1260151	ReturnStatement	return false ;	98:2:2073:2085	1260050	0	True				
ANR	1260152	Identifier	false		1260050	0					
ANR	1260153	ExpressionStatement	"memcpy ( str , dir , nlen + 1 )"	100:1:2091:2118	1260050	10	True				
ANR	1260154	CallExpression	"memcpy ( str , dir , nlen + 1 )"		1260050	0					
ANR	1260155	Callee	memcpy		1260050	0					
ANR	1260156	Identifier	memcpy		1260050	0					
ANR	1260157	ArgumentList	str		1260050	1					
ANR	1260158	Argument	str		1260050	0					
ANR	1260159	Identifier	str		1260050	0					
ANR	1260160	Argument	dir		1260050	1					
ANR	1260161	Identifier	dir		1260050	0					
ANR	1260162	Argument	nlen + 1		1260050	2					
ANR	1260163	AdditiveExpression	nlen + 1		1260050	0		+			
ANR	1260164	Identifier	nlen		1260050	0					
ANR	1260165	PrimaryExpression	1		1260050	1					
ANR	1260166	ExpressionStatement	r_sys_mkdirp ( str )	101:1:2121:2139	1260050	11	True				
ANR	1260167	CallExpression	r_sys_mkdirp ( str )		1260050	0					
ANR	1260168	Callee	r_sys_mkdirp		1260050	0					
ANR	1260169	Identifier	r_sys_mkdirp		1260050	0					
ANR	1260170	ArgumentList	str		1260050	1					
ANR	1260171	Argument	str		1260050	0					
ANR	1260172	Identifier	str		1260050	0					
ANR	1260173	ExpressionStatement	"memcpy ( str + nlen , "".tmp"" , 5 )"	102:1:2142:2172	1260050	12	True				
ANR	1260174	CallExpression	"memcpy ( str + nlen , "".tmp"" , 5 )"		1260050	0					
ANR	1260175	Callee	memcpy		1260050	0					
ANR	1260176	Identifier	memcpy		1260050	0					
ANR	1260177	ArgumentList	str + nlen		1260050	1					
ANR	1260178	Argument	str + nlen		1260050	0					
ANR	1260179	AdditiveExpression	str + nlen		1260050	0		+			
ANR	1260180	Identifier	str		1260050	0					
ANR	1260181	Identifier	nlen		1260050	1					
ANR	1260182	Argument	""".tmp"""		1260050	1					
ANR	1260183	PrimaryExpression	""".tmp"""		1260050	0					
ANR	1260184	Argument	5		1260050	2					
ANR	1260185	PrimaryExpression	5		1260050	0					
ANR	1260186	IfStatement	if ( s -> fdump != - 1 )		1260050	13					
ANR	1260187	Condition	s -> fdump != - 1	103:5:2179:2192	1260050	0	True				
ANR	1260188	EqualityExpression	s -> fdump != - 1		1260050	0		!=			
ANR	1260189	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260190	Identifier	s		1260050	0					
ANR	1260191	Identifier	fdump		1260050	1					
ANR	1260192	UnaryOperationExpression	- 1		1260050	1					
ANR	1260193	UnaryOperator	-		1260050	0					
ANR	1260194	PrimaryExpression	1		1260050	1					
ANR	1260195	CompoundStatement		21:21:404:404	1260050	1					
ANR	1260196	ExpressionStatement	close ( s -> fdump )	104:2:2199:2215	1260050	0	True				
ANR	1260197	CallExpression	close ( s -> fdump )		1260050	0					
ANR	1260198	Callee	close		1260050	0					
ANR	1260199	Identifier	close		1260050	0					
ANR	1260200	ArgumentList	s -> fdump		1260050	1					
ANR	1260201	Argument	s -> fdump		1260050	0					
ANR	1260202	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260203	Identifier	s		1260050	0					
ANR	1260204	Identifier	fdump		1260050	1					
ANR	1260205	IdentifierDeclStatement	wchar_t * wstr = r_sys_conv_utf8_to_utf16 ( str ) ;	107:1:2252:2298	1260050	14	True				
ANR	1260206	IdentifierDecl	* wstr = r_sys_conv_utf8_to_utf16 ( str )		1260050	0					
ANR	1260207	IdentifierDeclType	wchar_t *		1260050	0					
ANR	1260208	Identifier	wstr		1260050	1					
ANR	1260209	AssignmentExpression	* wstr = r_sys_conv_utf8_to_utf16 ( str )		1260050	2		=			
ANR	1260210	Identifier	wstr		1260050	0					
ANR	1260211	CallExpression	r_sys_conv_utf8_to_utf16 ( str )		1260050	1					
ANR	1260212	Callee	r_sys_conv_utf8_to_utf16		1260050	0					
ANR	1260213	Identifier	r_sys_conv_utf8_to_utf16		1260050	0					
ANR	1260214	ArgumentList	str		1260050	1					
ANR	1260215	Argument	str		1260050	0					
ANR	1260216	Identifier	str		1260050	0					
ANR	1260217	IfStatement	if ( wstr )		1260050	15					
ANR	1260218	Condition	wstr	108:5:2305:2308	1260050	0	True				
ANR	1260219	Identifier	wstr		1260050	0					
ANR	1260220	CompoundStatement		26:11:520:520	1260050	1					
ANR	1260221	ExpressionStatement	"s -> fdump = _wopen ( wstr , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , SDB_MODE )"	109:2:2315:2388	1260050	0	True				
ANR	1260222	AssignmentExpression	"s -> fdump = _wopen ( wstr , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , SDB_MODE )"		1260050	0		=			
ANR	1260223	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260224	Identifier	s		1260050	0					
ANR	1260225	Identifier	fdump		1260050	1					
ANR	1260226	CallExpression	"_wopen ( wstr , O_BINARY | O_RDWR | O_CREAT | O_TRUNC , SDB_MODE )"		1260050	1					
ANR	1260227	Callee	_wopen		1260050	0					
ANR	1260228	Identifier	_wopen		1260050	0					
ANR	1260229	ArgumentList	wstr		1260050	1					
ANR	1260230	Argument	wstr		1260050	0					
ANR	1260231	Identifier	wstr		1260050	0					
ANR	1260232	Argument	O_BINARY | O_RDWR | O_CREAT | O_TRUNC		1260050	1					
ANR	1260233	InclusiveOrExpression	O_BINARY | O_RDWR | O_CREAT | O_TRUNC		1260050	0		|			
ANR	1260234	Identifier	O_BINARY		1260050	0					
ANR	1260235	InclusiveOrExpression	O_RDWR | O_CREAT | O_TRUNC		1260050	1		|			
ANR	1260236	Identifier	O_RDWR		1260050	0					
ANR	1260237	InclusiveOrExpression	O_CREAT | O_TRUNC		1260050	1		|			
ANR	1260238	Identifier	O_CREAT		1260050	0					
ANR	1260239	Identifier	O_TRUNC		1260050	1					
ANR	1260240	Argument	SDB_MODE		1260050	2					
ANR	1260241	Identifier	SDB_MODE		1260050	0					
ANR	1260242	ExpressionStatement	free ( wstr )	110:2:2392:2403	1260050	1	True				
ANR	1260243	CallExpression	free ( wstr )		1260050	0					
ANR	1260244	Callee	free		1260050	0					
ANR	1260245	Identifier	free		1260050	0					
ANR	1260246	ArgumentList	wstr		1260050	1					
ANR	1260247	Argument	wstr		1260050	0					
ANR	1260248	Identifier	wstr		1260050	0					
ANR	1260249	ElseStatement	else		1260050	0					
ANR	1260250	CompoundStatement		29:8:622:622	1260050	0					
ANR	1260251	ExpressionStatement	s -> fdump = - 1	112:2:2417:2430	1260050	0	True				
ANR	1260252	AssignmentExpression	s -> fdump = - 1		1260050	0		=			
ANR	1260253	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260254	Identifier	s		1260050	0					
ANR	1260255	Identifier	fdump		1260050	1					
ANR	1260256	UnaryOperationExpression	- 1		1260050	1					
ANR	1260257	UnaryOperator	-		1260050	0					
ANR	1260258	PrimaryExpression	1		1260050	1					
ANR	1260259	IfStatement	if ( s -> fdump == - 1 )		1260050	16					
ANR	1260260	Condition	s -> fdump == - 1	117:5:2526:2539	1260050	0	True				
ANR	1260261	EqualityExpression	s -> fdump == - 1		1260050	0		==			
ANR	1260262	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260263	Identifier	s		1260050	0					
ANR	1260264	Identifier	fdump		1260050	1					
ANR	1260265	UnaryOperationExpression	- 1		1260050	1					
ANR	1260266	UnaryOperator	-		1260050	0					
ANR	1260267	PrimaryExpression	1		1260050	1					
ANR	1260268	CompoundStatement		35:21:751:751	1260050	1					
ANR	1260269	ExpressionStatement	"eprintf ( ""sdb: Cannot open '%s' for writing.\\n"" , str )"	118:2:2546:2599	1260050	0	True				
ANR	1260270	CallExpression	"eprintf ( ""sdb: Cannot open '%s' for writing.\\n"" , str )"		1260050	0					
ANR	1260271	Callee	eprintf		1260050	0					
ANR	1260272	Identifier	eprintf		1260050	0					
ANR	1260273	ArgumentList	"""sdb: Cannot open '%s' for writing.\\n"""		1260050	1					
ANR	1260274	Argument	"""sdb: Cannot open '%s' for writing.\\n"""		1260050	0					
ANR	1260275	PrimaryExpression	"""sdb: Cannot open '%s' for writing.\\n"""		1260050	0					
ANR	1260276	Argument	str		1260050	1					
ANR	1260277	Identifier	str		1260050	0					
ANR	1260278	ExpressionStatement	free ( str )	119:2:2603:2613	1260050	1	True				
ANR	1260279	CallExpression	free ( str )		1260050	0					
ANR	1260280	Callee	free		1260050	0					
ANR	1260281	Identifier	free		1260050	0					
ANR	1260282	ArgumentList	str		1260050	1					
ANR	1260283	Argument	str		1260050	0					
ANR	1260284	Identifier	str		1260050	0					
ANR	1260285	ReturnStatement	return false ;	120:2:2617:2629	1260050	2	True				
ANR	1260286	Identifier	false		1260050	0					
ANR	1260287	ExpressionStatement	"cdb_make_start ( & s -> m , s -> fdump )"	122:1:2635:2667	1260050	17	True				
ANR	1260288	CallExpression	"cdb_make_start ( & s -> m , s -> fdump )"		1260050	0					
ANR	1260289	Callee	cdb_make_start		1260050	0					
ANR	1260290	Identifier	cdb_make_start		1260050	0					
ANR	1260291	ArgumentList	& s -> m		1260050	1					
ANR	1260292	Argument	& s -> m		1260050	0					
ANR	1260293	UnaryOperationExpression	& s -> m		1260050	0					
ANR	1260294	UnaryOperator	&		1260050	0					
ANR	1260295	PtrMemberAccess	s -> m		1260050	1					
ANR	1260296	Identifier	s		1260050	0					
ANR	1260297	Identifier	m		1260050	1					
ANR	1260298	Argument	s -> fdump		1260050	1					
ANR	1260299	PtrMemberAccess	s -> fdump		1260050	0					
ANR	1260300	Identifier	s		1260050	0					
ANR	1260301	Identifier	fdump		1260050	1					
ANR	1260302	ExpressionStatement	s -> ndump = str	123:1:2670:2684	1260050	18	True				
ANR	1260303	AssignmentExpression	s -> ndump = str		1260050	0		=			
ANR	1260304	PtrMemberAccess	s -> ndump		1260050	0					
ANR	1260305	Identifier	s		1260050	0					
ANR	1260306	Identifier	ndump		1260050	1					
ANR	1260307	Identifier	str		1260050	1					
ANR	1260308	ReturnStatement	return true ;	124:1:2687:2698	1260050	19	True				
ANR	1260309	Identifier	true		1260050	0					
ANR	1260310	ReturnType	SDB_API bool		1260050	1					
ANR	1260311	Identifier	sdb_disk_create		1260050	2					
ANR	1260312	ParameterList	Sdb * s		1260050	3					
ANR	1260313	Parameter	Sdb * s	83:29:1782:1787	1260050	0	True				
ANR	1260314	ParameterType	Sdb *		1260050	0					
ANR	1260315	Identifier	s		1260050	1					
ANR	1260316	CFGEntryNode	ENTRY		1260050		True				
ANR	1260317	CFGExitNode	EXIT		1260050		True				
ANR	1260318	Symbol	malloc		1260050						
ANR	1260319	Symbol	r_sys_conv_utf8_to_utf16		1260050						
ANR	1260320	Symbol	O_BINARY		1260050						
ANR	1260321	Symbol	O_CREAT		1260050						
ANR	1260322	Symbol	false		1260050						
ANR	1260323	Symbol	dir		1260050						
ANR	1260324	Symbol	& s -> m		1260050						
ANR	1260325	Symbol	wstr		1260050						
ANR	1260326	Symbol	str		1260050						
ANR	1260327	Symbol	strlen		1260050						
ANR	1260328	Symbol	s -> fdump		1260050						
ANR	1260329	Symbol	O_RDWR		1260050						
ANR	1260330	Symbol	O_TRUNC		1260050						
ANR	1260331	Symbol	s		1260050						
ANR	1260332	Symbol	s -> name		1260050						
ANR	1260333	Symbol	nlen		1260050						
ANR	1260334	Symbol	true		1260050						
ANR	1260335	Symbol	s -> dir		1260050						
ANR	1260336	Symbol	SDB_MODE		1260050						
ANR	1260337	Symbol	strdup		1260050						
ANR	1260338	Symbol	s -> ndump		1260050						
ANR	1260339	Symbol	* s		1260050						
ANR	1260340	Symbol	_wopen		1260050						
ANR	1260341	Function	sdb_disk_insert	127:0:2703:2960							
ANR	1260342	FunctionDef	"sdb_disk_insert (Sdb * s , const char * key , const char * val)"		1260341	0					
ANR	1260343	CompoundStatement		127:70:2773:2960	1260341	0					
ANR	1260344	IdentifierDeclStatement	struct cdb_make * c = & s -> m ;	128:1:2776:2802	1260341	0	True				
ANR	1260345	IdentifierDecl	* c = & s -> m		1260341	0					
ANR	1260346	IdentifierDeclType	struct cdb_make *		1260341	0					
ANR	1260347	Identifier	c		1260341	1					
ANR	1260348	AssignmentExpression	* c = & s -> m		1260341	2		=			
ANR	1260349	Identifier	c		1260341	0					
ANR	1260350	UnaryOperationExpression	& s -> m		1260341	1					
ANR	1260351	UnaryOperator	&		1260341	0					
ANR	1260352	PtrMemberAccess	s -> m		1260341	1					
ANR	1260353	Identifier	s		1260341	0					
ANR	1260354	Identifier	m		1260341	1					
ANR	1260355	IfStatement	if ( ! key || ! val )		1260341	1					
ANR	1260356	Condition	! key || ! val	129:5:2809:2820	1260341	0	True				
ANR	1260357	OrExpression	! key || ! val		1260341	0		||			
ANR	1260358	UnaryOperationExpression	! key		1260341	0					
ANR	1260359	UnaryOperator	!		1260341	0					
ANR	1260360	Identifier	key		1260341	1					
ANR	1260361	UnaryOperationExpression	! val		1260341	1					
ANR	1260362	UnaryOperator	!		1260341	0					
ANR	1260363	Identifier	val		1260341	1					
ANR	1260364	CompoundStatement		3:19:49:49	1260341	1					
ANR	1260365	ReturnStatement	return 0 ;	130:2:2827:2835	1260341	0	True				
ANR	1260366	PrimaryExpression	0		1260341	0					
ANR	1260367	ReturnStatement	"return cdb_make_add ( c , key , strlen ( key ) , val , strlen ( val ) ) ;"	133:1:2897:2958	1260341	2	True				
ANR	1260368	CallExpression	"cdb_make_add ( c , key , strlen ( key ) , val , strlen ( val ) )"		1260341	0					
ANR	1260369	Callee	cdb_make_add		1260341	0					
ANR	1260370	Identifier	cdb_make_add		1260341	0					
ANR	1260371	ArgumentList	c		1260341	1					
ANR	1260372	Argument	c		1260341	0					
ANR	1260373	Identifier	c		1260341	0					
ANR	1260374	Argument	key		1260341	1					
ANR	1260375	Identifier	key		1260341	0					
ANR	1260376	Argument	strlen ( key )		1260341	2					
ANR	1260377	CallExpression	strlen ( key )		1260341	0					
ANR	1260378	Callee	strlen		1260341	0					
ANR	1260379	Identifier	strlen		1260341	0					
ANR	1260380	ArgumentList	key		1260341	1					
ANR	1260381	Argument	key		1260341	0					
ANR	1260382	Identifier	key		1260341	0					
ANR	1260383	Argument	val		1260341	3					
ANR	1260384	Identifier	val		1260341	0					
ANR	1260385	Argument	strlen ( val )		1260341	4					
ANR	1260386	CallExpression	strlen ( val )		1260341	0					
ANR	1260387	Callee	strlen		1260341	0					
ANR	1260388	Identifier	strlen		1260341	0					
ANR	1260389	ArgumentList	val		1260341	1					
ANR	1260390	Argument	val		1260341	0					
ANR	1260391	Identifier	val		1260341	0					
ANR	1260392	ReturnType	SDB_API int		1260341	1					
ANR	1260393	Identifier	sdb_disk_insert		1260341	2					
ANR	1260394	ParameterList	"Sdb * s , const char * key , const char * val"		1260341	3					
ANR	1260395	Parameter	Sdb * s	127:28:2731:2736	1260341	0	True				
ANR	1260396	ParameterType	Sdb *		1260341	0					
ANR	1260397	Identifier	s		1260341	1					
ANR	1260398	Parameter	const char * key	127:36:2739:2753	1260341	1	True				
ANR	1260399	ParameterType	const char *		1260341	0					
ANR	1260400	Identifier	key		1260341	1					
ANR	1260401	Parameter	const char * val	127:53:2756:2770	1260341	2	True				
ANR	1260402	ParameterType	const char *		1260341	0					
ANR	1260403	Identifier	val		1260341	1					
ANR	1260404	CFGEntryNode	ENTRY		1260341		True				
ANR	1260405	CFGExitNode	EXIT		1260341		True				
ANR	1260406	Symbol	val		1260341						
ANR	1260407	Symbol	strlen		1260341						
ANR	1260408	Symbol	s		1260341						
ANR	1260409	Symbol	c		1260341						
ANR	1260410	Symbol	cdb_make_add		1260341						
ANR	1260411	Symbol	& s -> m		1260341						
ANR	1260412	Symbol	key		1260341						
ANR	1260413	Function	sdb_disk_finish	137:0:2995:3908							
ANR	1260414	FunctionDef	sdb_disk_finish (Sdb * s)		1260413	0					
ANR	1260415	CompoundStatement		137:38:3033:3908	1260413	0					
ANR	1260416	IdentifierDeclStatement	"bool reopen = false , ret = true ;"	138:1:3036:3067	1260413	0	True				
ANR	1260417	IdentifierDecl	reopen = false		1260413	0					
ANR	1260418	IdentifierDeclType	bool		1260413	0					
ANR	1260419	Identifier	reopen		1260413	1					
ANR	1260420	AssignmentExpression	reopen = false		1260413	2		=			
ANR	1260421	Identifier	false		1260413	0					
ANR	1260422	Identifier	false		1260413	1					
ANR	1260423	IdentifierDecl	ret = true		1260413	1					
ANR	1260424	IdentifierDeclType	bool		1260413	0					
ANR	1260425	Identifier	ret		1260413	1					
ANR	1260426	AssignmentExpression	ret = true		1260413	2		=			
ANR	1260427	Identifier	true		1260413	0					
ANR	1260428	Identifier	true		1260413	1					
ANR	1260429	ExpressionStatement	IFRET ( ! cdb_make_finish ( & s -> m ) )	139:1:3070:3102	1260413	1	True				
ANR	1260430	CallExpression	IFRET ( ! cdb_make_finish ( & s -> m ) )		1260413	0					
ANR	1260431	Callee	IFRET		1260413	0					
ANR	1260432	Identifier	IFRET		1260413	0					
ANR	1260433	ArgumentList	! cdb_make_finish ( & s -> m )		1260413	1					
ANR	1260434	Argument	! cdb_make_finish ( & s -> m )		1260413	0					
ANR	1260435	UnaryOperationExpression	! cdb_make_finish ( & s -> m )		1260413	0					
ANR	1260436	UnaryOperator	!		1260413	0					
ANR	1260437	CallExpression	cdb_make_finish ( & s -> m )		1260413	1					
ANR	1260438	Callee	cdb_make_finish		1260413	0					
ANR	1260439	Identifier	cdb_make_finish		1260413	0					
ANR	1260440	ArgumentList	& s -> m		1260413	1					
ANR	1260441	Argument	& s -> m		1260413	0					
ANR	1260442	UnaryOperationExpression	& s -> m		1260413	0					
ANR	1260443	UnaryOperator	&		1260413	0					
ANR	1260444	PtrMemberAccess	s -> m		1260413	1					
ANR	1260445	Identifier	s		1260413	0					
ANR	1260446	Identifier	m		1260413	1					
ANR	1260447	ExpressionStatement	IFRET ( fsync ( s -> fdump ) )	141:1:3118:3142	1260413	2	True				
ANR	1260448	CallExpression	IFRET ( fsync ( s -> fdump ) )		1260413	0					
ANR	1260449	Callee	IFRET		1260413	0					
ANR	1260450	Identifier	IFRET		1260413	0					
ANR	1260451	ArgumentList	fsync ( s -> fdump )		1260413	1					
ANR	1260452	Argument	fsync ( s -> fdump )		1260413	0					
ANR	1260453	CallExpression	fsync ( s -> fdump )		1260413	0					
ANR	1260454	Callee	fsync		1260413	0					
ANR	1260455	Identifier	fsync		1260413	0					
ANR	1260456	ArgumentList	s -> fdump		1260413	1					
ANR	1260457	Argument	s -> fdump		1260413	0					
ANR	1260458	PtrMemberAccess	s -> fdump		1260413	0					
ANR	1260459	Identifier	s		1260413	0					
ANR	1260460	Identifier	fdump		1260413	1					
ANR	1260461	ExpressionStatement	IFRET ( close ( s -> fdump ) )	143:1:3152:3176	1260413	3	True				
ANR	1260462	CallExpression	IFRET ( close ( s -> fdump ) )		1260413	0					
ANR	1260463	Callee	IFRET		1260413	0					
ANR	1260464	Identifier	IFRET		1260413	0					
ANR	1260465	ArgumentList	close ( s -> fdump )		1260413	1					
ANR	1260466	Argument	close ( s -> fdump )		1260413	0					
ANR	1260467	CallExpression	close ( s -> fdump )		1260413	0					
ANR	1260468	Callee	close		1260413	0					
ANR	1260469	Identifier	close		1260413	0					
ANR	1260470	ArgumentList	s -> fdump		1260413	1					
ANR	1260471	Argument	s -> fdump		1260413	0					
ANR	1260472	PtrMemberAccess	s -> fdump		1260413	0					
ANR	1260473	Identifier	s		1260413	0					
ANR	1260474	Identifier	fdump		1260413	1					
ANR	1260475	ExpressionStatement	s -> fdump = - 1	144:1:3179:3192	1260413	4	True				
ANR	1260476	AssignmentExpression	s -> fdump = - 1		1260413	0		=			
ANR	1260477	PtrMemberAccess	s -> fdump		1260413	0					
ANR	1260478	Identifier	s		1260413	0					
ANR	1260479	Identifier	fdump		1260413	1					
ANR	1260480	UnaryOperationExpression	- 1		1260413	1					
ANR	1260481	UnaryOperator	-		1260413	0					
ANR	1260482	PrimaryExpression	1		1260413	1					
ANR	1260483	IfStatement	if ( s -> fd != - 1 )		1260413	5					
ANR	1260484	Condition	s -> fd != - 1	146:5:3248:3258	1260413	0	True				
ANR	1260485	EqualityExpression	s -> fd != - 1		1260413	0		!=			
ANR	1260486	PtrMemberAccess	s -> fd		1260413	0					
ANR	1260487	Identifier	s		1260413	0					
ANR	1260488	Identifier	fd		1260413	1					
ANR	1260489	UnaryOperationExpression	- 1		1260413	1					
ANR	1260490	UnaryOperator	-		1260413	0					
ANR	1260491	PrimaryExpression	1		1260413	1					
ANR	1260492	CompoundStatement		10:18:227:227	1260413	1					
ANR	1260493	ExpressionStatement	close ( s -> fd )	147:2:3265:3278	1260413	0	True				
ANR	1260494	CallExpression	close ( s -> fd )		1260413	0					
ANR	1260495	Callee	close		1260413	0					
ANR	1260496	Identifier	close		1260413	0					
ANR	1260497	ArgumentList	s -> fd		1260413	1					
ANR	1260498	Argument	s -> fd		1260413	0					
ANR	1260499	PtrMemberAccess	s -> fd		1260413	0					
ANR	1260500	Identifier	s		1260413	0					
ANR	1260501	Identifier	fd		1260413	1					
ANR	1260502	ExpressionStatement	s -> fd = - 1	148:2:3282:3292	1260413	1	True				
ANR	1260503	AssignmentExpression	s -> fd = - 1		1260413	0		=			
ANR	1260504	PtrMemberAccess	s -> fd		1260413	0					
ANR	1260505	Identifier	s		1260413	0					
ANR	1260506	Identifier	fd		1260413	1					
ANR	1260507	UnaryOperationExpression	- 1		1260413	1					
ANR	1260508	UnaryOperator	-		1260413	0					
ANR	1260509	PrimaryExpression	1		1260413	1					
ANR	1260510	ExpressionStatement	reopen = true	149:2:3296:3309	1260413	2	True				
ANR	1260511	AssignmentExpression	reopen = true		1260413	0		=			
ANR	1260512	Identifier	reopen		1260413	0					
ANR	1260513	Identifier	true		1260413	1					
ANR	1260514	IdentifierDeclStatement	LPTSTR ndump_ = r_sys_conv_utf8_to_utf16 ( s -> ndump ) ;	152:1:3335:3386	1260413	6	True				
ANR	1260515	IdentifierDecl	ndump_ = r_sys_conv_utf8_to_utf16 ( s -> ndump )		1260413	0					
ANR	1260516	IdentifierDeclType	LPTSTR		1260413	0					
ANR	1260517	Identifier	ndump_		1260413	1					
ANR	1260518	AssignmentExpression	ndump_ = r_sys_conv_utf8_to_utf16 ( s -> ndump )		1260413	2		=			
ANR	1260519	Identifier	ndump_		1260413	0					
ANR	1260520	CallExpression	r_sys_conv_utf8_to_utf16 ( s -> ndump )		1260413	1					
ANR	1260521	Callee	r_sys_conv_utf8_to_utf16		1260413	0					
ANR	1260522	Identifier	r_sys_conv_utf8_to_utf16		1260413	0					
ANR	1260523	ArgumentList	s -> ndump		1260413	1					
ANR	1260524	Argument	s -> ndump		1260413	0					
ANR	1260525	PtrMemberAccess	s -> ndump		1260413	0					
ANR	1260526	Identifier	s		1260413	0					
ANR	1260527	Identifier	ndump		1260413	1					
ANR	1260528	IdentifierDeclStatement	LPTSTR dir_ = r_sys_conv_utf8_to_utf16 ( s -> dir ) ;	153:1:3389:3436	1260413	7	True				
ANR	1260529	IdentifierDecl	dir_ = r_sys_conv_utf8_to_utf16 ( s -> dir )		1260413	0					
ANR	1260530	IdentifierDeclType	LPTSTR		1260413	0					
ANR	1260531	Identifier	dir_		1260413	1					
ANR	1260532	AssignmentExpression	dir_ = r_sys_conv_utf8_to_utf16 ( s -> dir )		1260413	2		=			
ANR	1260533	Identifier	dir_		1260413	0					
ANR	1260534	CallExpression	r_sys_conv_utf8_to_utf16 ( s -> dir )		1260413	1					
ANR	1260535	Callee	r_sys_conv_utf8_to_utf16		1260413	0					
ANR	1260536	Identifier	r_sys_conv_utf8_to_utf16		1260413	0					
ANR	1260537	ArgumentList	s -> dir		1260413	1					
ANR	1260538	Argument	s -> dir		1260413	0					
ANR	1260539	PtrMemberAccess	s -> dir		1260413	0					
ANR	1260540	Identifier	s		1260413	0					
ANR	1260541	Identifier	dir		1260413	1					
ANR	1260542	IfStatement	"if ( MoveFileEx ( ndump_ , dir_ , MOVEFILE_REPLACE_EXISTING ) )"		1260413	8					
ANR	1260543	Condition	"MoveFileEx ( ndump_ , dir_ , MOVEFILE_REPLACE_EXISTING )"	155:5:3444:3495	1260413	0	True				
ANR	1260544	CallExpression	"MoveFileEx ( ndump_ , dir_ , MOVEFILE_REPLACE_EXISTING )"		1260413	0					
ANR	1260545	Callee	MoveFileEx		1260413	0					
ANR	1260546	Identifier	MoveFileEx		1260413	0					
ANR	1260547	ArgumentList	ndump_		1260413	1					
ANR	1260548	Argument	ndump_		1260413	0					
ANR	1260549	Identifier	ndump_		1260413	0					
ANR	1260550	Argument	dir_		1260413	1					
ANR	1260551	Identifier	dir_		1260413	0					
ANR	1260552	Argument	MOVEFILE_REPLACE_EXISTING		1260413	2					
ANR	1260553	Identifier	MOVEFILE_REPLACE_EXISTING		1260413	0					
ANR	1260554	CompoundStatement		19:59:464:464	1260413	1					
ANR	1260555	ExpressionStatement	free ( ndump_ )	158:1:3553:3566	1260413	9	True				
ANR	1260556	CallExpression	free ( ndump_ )		1260413	0					
ANR	1260557	Callee	free		1260413	0					
ANR	1260558	Identifier	free		1260413	0					
ANR	1260559	ArgumentList	ndump_		1260413	1					
ANR	1260560	Argument	ndump_		1260413	0					
ANR	1260561	Identifier	ndump_		1260413	0					
ANR	1260562	ExpressionStatement	free ( dir_ )	159:1:3569:3580	1260413	10	True				
ANR	1260563	CallExpression	free ( dir_ )		1260413	0					
ANR	1260564	Callee	free		1260413	0					
ANR	1260565	Identifier	free		1260413	0					
ANR	1260566	ArgumentList	dir_		1260413	1					
ANR	1260567	Argument	dir_		1260413	0					
ANR	1260568	Identifier	dir_		1260413	0					
ANR	1260569	ExpressionStatement	free ( s -> ndump )	165:1:3663:3678	1260413	11	True				
ANR	1260570	CallExpression	free ( s -> ndump )		1260413	0					
ANR	1260571	Callee	free		1260413	0					
ANR	1260572	Identifier	free		1260413	0					
ANR	1260573	ArgumentList	s -> ndump		1260413	1					
ANR	1260574	Argument	s -> ndump		1260413	0					
ANR	1260575	PtrMemberAccess	s -> ndump		1260413	0					
ANR	1260576	Identifier	s		1260413	0					
ANR	1260577	Identifier	ndump		1260413	1					
ANR	1260578	ExpressionStatement	s -> ndump = NULL	166:1:3681:3696	1260413	12	True				
ANR	1260579	AssignmentExpression	s -> ndump = NULL		1260413	0		=			
ANR	1260580	PtrMemberAccess	s -> ndump		1260413	0					
ANR	1260581	Identifier	s		1260413	0					
ANR	1260582	Identifier	ndump		1260413	1					
ANR	1260583	Identifier	NULL		1260413	1					
ANR	1260584	ExpressionStatement	reopen = true	168:1:3729:3742	1260413	13	True				
ANR	1260585	AssignmentExpression	reopen = true		1260413	0		=			
ANR	1260586	Identifier	reopen		1260413	0					
ANR	1260587	Identifier	true		1260413	1					
ANR	1260588	IfStatement	if ( reopen )		1260413	14					
ANR	1260589	Condition	reopen	169:5:3778:3783	1260413	0	True				
ANR	1260590	Identifier	reopen		1260413	0					
ANR	1260591	CompoundStatement		34:2:756:785	1260413	1					
ANR	1260592	IdentifierDeclStatement	"int rr = sdb_open ( s , s -> dir ) ;"	170:2:3790:3819	1260413	0	True				
ANR	1260593	IdentifierDecl	"rr = sdb_open ( s , s -> dir )"		1260413	0					
ANR	1260594	IdentifierDeclType	int		1260413	0					
ANR	1260595	Identifier	rr		1260413	1					
ANR	1260596	AssignmentExpression	"rr = sdb_open ( s , s -> dir )"		1260413	2		=			
ANR	1260597	Identifier	rr		1260413	0					
ANR	1260598	CallExpression	"sdb_open ( s , s -> dir )"		1260413	1					
ANR	1260599	Callee	sdb_open		1260413	0					
ANR	1260600	Identifier	sdb_open		1260413	0					
ANR	1260601	ArgumentList	s		1260413	1					
ANR	1260602	Argument	s		1260413	0					
ANR	1260603	Identifier	s		1260413	0					
ANR	1260604	Argument	s -> dir		1260413	1					
ANR	1260605	PtrMemberAccess	s -> dir		1260413	0					
ANR	1260606	Identifier	s		1260413	0					
ANR	1260607	Identifier	dir		1260413	1					
ANR	1260608	IfStatement	if ( ret && rr < 0 )		1260413	1					
ANR	1260609	Condition	ret && rr < 0	171:6:3827:3839	1260413	0	True				
ANR	1260610	AndExpression	ret && rr < 0		1260413	0		&&			
ANR	1260611	Identifier	ret		1260413	0					
ANR	1260612	RelationalExpression	rr < 0		1260413	1		<			
ANR	1260613	Identifier	rr		1260413	0					
ANR	1260614	PrimaryExpression	0		1260413	1					
ANR	1260615	CompoundStatement		35:21:808:808	1260413	1					
ANR	1260616	ExpressionStatement	ret = false	172:3:3847:3858	1260413	0	True				
ANR	1260617	AssignmentExpression	ret = false		1260413	0		=			
ANR	1260618	Identifier	ret		1260413	0					
ANR	1260619	Identifier	false		1260413	1					
ANR	1260620	ExpressionStatement	"cdb_init ( & s -> db , s -> fd )"	174:2:3866:3890	1260413	2	True				
ANR	1260621	CallExpression	"cdb_init ( & s -> db , s -> fd )"		1260413	0					
ANR	1260622	Callee	cdb_init		1260413	0					
ANR	1260623	Identifier	cdb_init		1260413	0					
ANR	1260624	ArgumentList	& s -> db		1260413	1					
ANR	1260625	Argument	& s -> db		1260413	0					
ANR	1260626	UnaryOperationExpression	& s -> db		1260413	0					
ANR	1260627	UnaryOperator	&		1260413	0					
ANR	1260628	PtrMemberAccess	s -> db		1260413	1					
ANR	1260629	Identifier	s		1260413	0					
ANR	1260630	Identifier	db		1260413	1					
ANR	1260631	Argument	s -> fd		1260413	1					
ANR	1260632	PtrMemberAccess	s -> fd		1260413	0					
ANR	1260633	Identifier	s		1260413	0					
ANR	1260634	Identifier	fd		1260413	1					
ANR	1260635	ReturnStatement	return ret ;	176:1:3896:3906	1260413	15	True				
ANR	1260636	Identifier	ret		1260413	0					
ANR	1260637	ReturnType	SDB_API bool		1260413	1					
ANR	1260638	Identifier	sdb_disk_finish		1260413	2					
ANR	1260639	ParameterList	Sdb * s		1260413	3					
ANR	1260640	Parameter	Sdb * s	137:30:3025:3030	1260413	0	True				
ANR	1260641	ParameterType	Sdb *		1260413	0					
ANR	1260642	Identifier	s		1260413	1					
ANR	1260643	CFGEntryNode	ENTRY		1260413		True				
ANR	1260644	CFGExitNode	EXIT		1260413		True				
ANR	1260645	Symbol	ret		1260413						
ANR	1260646	Symbol	rr		1260413						
ANR	1260647	Symbol	r_sys_conv_utf8_to_utf16		1260413						
ANR	1260648	Symbol	NULL		1260413						
ANR	1260649	Symbol	false		1260413						
ANR	1260650	Symbol	& s -> db		1260413						
ANR	1260651	Symbol	& s -> m		1260413						
ANR	1260652	Symbol	ndump_		1260413						
ANR	1260653	Symbol	MOVEFILE_REPLACE_EXISTING		1260413						
ANR	1260654	Symbol	MoveFileEx		1260413						
ANR	1260655	Symbol	s -> fdump		1260413						
ANR	1260656	Symbol	fsync		1260413						
ANR	1260657	Symbol	s		1260413						
ANR	1260658	Symbol	reopen		1260413						
ANR	1260659	Symbol	cdb_make_finish		1260413						
ANR	1260660	Symbol	true		1260413						
ANR	1260661	Symbol	sdb_open		1260413						
ANR	1260662	Symbol	s -> dir		1260413						
ANR	1260663	Symbol	s -> ndump		1260413						
ANR	1260664	Symbol	* s		1260413						
ANR	1260665	Symbol	close		1260413						
ANR	1260666	Symbol	dir_		1260413						
ANR	1260667	Symbol	s -> fd		1260413						
ANR	1260668	Function	sdb_disk_unlink	179:0:3911:4007							
ANR	1260669	FunctionDef	sdb_disk_unlink (Sdb * s)		1260668	0					
ANR	1260670	CompoundStatement		179:38:3949:4007	1260668	0					
ANR	1260671	ReturnStatement	return ( s -> dir && * ( s -> dir ) && unlink ( s -> dir ) != - 1 ) ;	180:1:3952:4005	1260668	0	True				
ANR	1260672	AndExpression	s -> dir && * ( s -> dir ) && unlink ( s -> dir ) != - 1		1260668	0		&&			
ANR	1260673	PtrMemberAccess	s -> dir		1260668	0					
ANR	1260674	Identifier	s		1260668	0					
ANR	1260675	Identifier	dir		1260668	1					
ANR	1260676	AndExpression	* ( s -> dir ) && unlink ( s -> dir ) != - 1		1260668	1		&&			
ANR	1260677	UnaryOperationExpression	* ( s -> dir )		1260668	0					
ANR	1260678	UnaryOperator	*		1260668	0					
ANR	1260679	PtrMemberAccess	s -> dir		1260668	1					
ANR	1260680	Identifier	s		1260668	0					
ANR	1260681	Identifier	dir		1260668	1					
ANR	1260682	EqualityExpression	unlink ( s -> dir ) != - 1		1260668	1		!=			
ANR	1260683	CallExpression	unlink ( s -> dir )		1260668	0					
ANR	1260684	Callee	unlink		1260668	0					
ANR	1260685	Identifier	unlink		1260668	0					
ANR	1260686	ArgumentList	s -> dir		1260668	1					
ANR	1260687	Argument	s -> dir		1260668	0					
ANR	1260688	PtrMemberAccess	s -> dir		1260668	0					
ANR	1260689	Identifier	s		1260668	0					
ANR	1260690	Identifier	dir		1260668	1					
ANR	1260691	UnaryOperationExpression	- 1		1260668	1					
ANR	1260692	UnaryOperator	-		1260668	0					
ANR	1260693	PrimaryExpression	1		1260668	1					
ANR	1260694	ReturnType	SDB_API bool		1260668	1					
ANR	1260695	Identifier	sdb_disk_unlink		1260668	2					
ANR	1260696	ParameterList	Sdb * s		1260668	3					
ANR	1260697	Parameter	Sdb * s	179:30:3941:3946	1260668	0	True				
ANR	1260698	ParameterType	Sdb *		1260668	0					
ANR	1260699	Identifier	s		1260668	1					
ANR	1260700	CFGEntryNode	ENTRY		1260668		True				
ANR	1260701	CFGExitNode	EXIT		1260668		True				
ANR	1260702	Symbol	s		1260668						
ANR	1260703	Symbol	unlink		1260668						
ANR	1260704	Symbol	* * s		1260668						
ANR	1260705	Symbol	s -> dir		1260668						
ANR	1260706	Symbol	* s		1260668						
ANR	1260707	Symbol	* s -> dir		1260668						
ANR	1260708	Symbol	* ( s -> dir )		1260668						
