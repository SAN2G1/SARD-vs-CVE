command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2222446	File	data/converged/CVE-2019-16718~_radare2/lang.c								
ANR	2222447	DeclStmt									
ANR	2222448	Decl							include < r_util . h >	include < r_util . h > ( r_lang )	R_LIB_VERSION
ANR	2222449	DeclStmt									
ANR	2222450	Decl							RLang	RLang *	__lang
ANR	2222451	Function	r_lang_plugin_free	20:0:392:485							
ANR	2222452	FunctionDef	r_lang_plugin_free (RLangPlugin * p)		2222451	0					
ANR	2222453	CompoundStatement		20:47:439:485	2222451	0					
ANR	2222454	IfStatement	if ( p && p -> fini )		2222451	0					
ANR	2222455	Condition	p && p -> fini	21:5:446:457	2222451	0	True				
ANR	2222456	AndExpression	p && p -> fini		2222451	0		&&			
ANR	2222457	Identifier	p		2222451	0					
ANR	2222458	PtrMemberAccess	p -> fini		2222451	1					
ANR	2222459	Identifier	p		2222451	0					
ANR	2222460	Identifier	fini		2222451	1					
ANR	2222461	CompoundStatement		2:19:20:20	2222451	1					
ANR	2222462	ExpressionStatement	p -> fini ( __lang )	22:2:464:480	2222451	0	True				
ANR	2222463	CallExpression	p -> fini ( __lang )		2222451	0					
ANR	2222464	Callee	p -> fini		2222451	0					
ANR	2222465	PtrMemberAccess	p -> fini		2222451	0					
ANR	2222466	Identifier	p		2222451	0					
ANR	2222467	Identifier	fini		2222451	1					
ANR	2222468	ArgumentList	__lang		2222451	1					
ANR	2222469	Argument	__lang		2222451	0					
ANR	2222470	Identifier	__lang		2222451	0					
ANR	2222471	ReturnType	R_API void		2222451	1					
ANR	2222472	Identifier	r_lang_plugin_free		2222451	2					
ANR	2222473	ParameterList	RLangPlugin * p		2222451	3					
ANR	2222474	Parameter	RLangPlugin * p	20:31:423:436	2222451	0	True				
ANR	2222475	ParameterType	RLangPlugin *		2222451	0					
ANR	2222476	Identifier	p		2222451	1					
ANR	2222477	CFGEntryNode	ENTRY		2222451		True				
ANR	2222478	CFGExitNode	EXIT		2222451		True				
ANR	2222479	Symbol	p		2222451						
ANR	2222480	Symbol	p -> fini		2222451						
ANR	2222481	Symbol	__lang		2222451						
ANR	2222482	Symbol	* p		2222451						
ANR	2222483	Function	r_lang_new	26:0:488:1240							
ANR	2222484	FunctionDef	r_lang_new ()		2222483	0					
ANR	2222485	CompoundStatement		26:26:514:1240	2222483	0					
ANR	2222486	IdentifierDeclStatement	RLang * lang = R_NEW0 ( RLang ) ;	27:1:517:545	2222483	0	True				
ANR	2222487	IdentifierDecl	* lang = R_NEW0 ( RLang )		2222483	0					
ANR	2222488	IdentifierDeclType	RLang *		2222483	0					
ANR	2222489	Identifier	lang		2222483	1					
ANR	2222490	AssignmentExpression	* lang = R_NEW0 ( RLang )		2222483	2		=			
ANR	2222491	Identifier	lang		2222483	0					
ANR	2222492	CallExpression	R_NEW0 ( RLang )		2222483	1					
ANR	2222493	Callee	R_NEW0		2222483	0					
ANR	2222494	Identifier	R_NEW0		2222483	0					
ANR	2222495	ArgumentList	RLang		2222483	1					
ANR	2222496	Argument	RLang		2222483	0					
ANR	2222497	Identifier	RLang		2222483	0					
ANR	2222498	IfStatement	if ( ! lang )		2222483	1					
ANR	2222499	Condition	! lang	28:5:552:556	2222483	0	True				
ANR	2222500	UnaryOperationExpression	! lang		2222483	0					
ANR	2222501	UnaryOperator	!		2222483	0					
ANR	2222502	Identifier	lang		2222483	1					
ANR	2222503	CompoundStatement		3:12:44:44	2222483	1					
ANR	2222504	ReturnStatement	return NULL ;	29:2:563:574	2222483	0	True				
ANR	2222505	Identifier	NULL		2222483	0					
ANR	2222506	ExpressionStatement	lang -> user = NULL	31:1:580:597	2222483	2	True				
ANR	2222507	AssignmentExpression	lang -> user = NULL		2222483	0		=			
ANR	2222508	PtrMemberAccess	lang -> user		2222483	0					
ANR	2222509	Identifier	lang		2222483	0					
ANR	2222510	Identifier	user		2222483	1					
ANR	2222511	Identifier	NULL		2222483	1					
ANR	2222512	ExpressionStatement	lang -> langs = r_list_new ( )	32:1:600:627	2222483	3	True				
ANR	2222513	AssignmentExpression	lang -> langs = r_list_new ( )		2222483	0		=			
ANR	2222514	PtrMemberAccess	lang -> langs		2222483	0					
ANR	2222515	Identifier	lang		2222483	0					
ANR	2222516	Identifier	langs		2222483	1					
ANR	2222517	CallExpression	r_list_new ( )		2222483	1					
ANR	2222518	Callee	r_list_new		2222483	0					
ANR	2222519	Identifier	r_list_new		2222483	0					
ANR	2222520	ArgumentList			2222483	1					
ANR	2222521	IfStatement	if ( ! lang -> langs )		2222483	4					
ANR	2222522	Condition	! lang -> langs	33:5:634:645	2222483	0	True				
ANR	2222523	UnaryOperationExpression	! lang -> langs		2222483	0					
ANR	2222524	UnaryOperator	!		2222483	0					
ANR	2222525	PtrMemberAccess	lang -> langs		2222483	1					
ANR	2222526	Identifier	lang		2222483	0					
ANR	2222527	Identifier	langs		2222483	1					
ANR	2222528	CompoundStatement		8:19:133:133	2222483	1					
ANR	2222529	ExpressionStatement	r_lang_free ( lang )	34:2:652:670	2222483	0	True				
ANR	2222530	CallExpression	r_lang_free ( lang )		2222483	0					
ANR	2222531	Callee	r_lang_free		2222483	0					
ANR	2222532	Identifier	r_lang_free		2222483	0					
ANR	2222533	ArgumentList	lang		2222483	1					
ANR	2222534	Argument	lang		2222483	0					
ANR	2222535	Identifier	lang		2222483	0					
ANR	2222536	ReturnStatement	return NULL ;	35:2:674:685	2222483	1	True				
ANR	2222537	Identifier	NULL		2222483	0					
ANR	2222538	ExpressionStatement	lang -> langs -> free = ( RListFree ) r_lang_plugin_free	37:1:691:740	2222483	5	True				
ANR	2222539	AssignmentExpression	lang -> langs -> free = ( RListFree ) r_lang_plugin_free		2222483	0		=			
ANR	2222540	PtrMemberAccess	lang -> langs -> free		2222483	0					
ANR	2222541	PtrMemberAccess	lang -> langs		2222483	0					
ANR	2222542	Identifier	lang		2222483	0					
ANR	2222543	Identifier	langs		2222483	1					
ANR	2222544	Identifier	free		2222483	1					
ANR	2222545	CastExpression	( RListFree ) r_lang_plugin_free		2222483	1					
ANR	2222546	CastTarget	RListFree		2222483	0					
ANR	2222547	Identifier	r_lang_plugin_free		2222483	1					
ANR	2222548	ExpressionStatement	lang -> defs = r_list_new ( )	38:1:743:769	2222483	6	True				
ANR	2222549	AssignmentExpression	lang -> defs = r_list_new ( )		2222483	0		=			
ANR	2222550	PtrMemberAccess	lang -> defs		2222483	0					
ANR	2222551	Identifier	lang		2222483	0					
ANR	2222552	Identifier	defs		2222483	1					
ANR	2222553	CallExpression	r_list_new ( )		2222483	1					
ANR	2222554	Callee	r_list_new		2222483	0					
ANR	2222555	Identifier	r_list_new		2222483	0					
ANR	2222556	ArgumentList			2222483	1					
ANR	2222557	IfStatement	if ( ! lang -> defs )		2222483	7					
ANR	2222558	Condition	! lang -> defs	39:5:776:786	2222483	0	True				
ANR	2222559	UnaryOperationExpression	! lang -> defs		2222483	0					
ANR	2222560	UnaryOperator	!		2222483	0					
ANR	2222561	PtrMemberAccess	lang -> defs		2222483	1					
ANR	2222562	Identifier	lang		2222483	0					
ANR	2222563	Identifier	defs		2222483	1					
ANR	2222564	CompoundStatement		14:18:274:274	2222483	1					
ANR	2222565	ExpressionStatement	r_lang_free ( lang )	40:2:793:811	2222483	0	True				
ANR	2222566	CallExpression	r_lang_free ( lang )		2222483	0					
ANR	2222567	Callee	r_lang_free		2222483	0					
ANR	2222568	Identifier	r_lang_free		2222483	0					
ANR	2222569	ArgumentList	lang		2222483	1					
ANR	2222570	Argument	lang		2222483	0					
ANR	2222571	Identifier	lang		2222483	0					
ANR	2222572	ReturnStatement	return NULL ;	41:2:815:826	2222483	1	True				
ANR	2222573	Identifier	NULL		2222483	0					
ANR	2222574	ExpressionStatement	lang -> defs -> free = ( RListFree ) r_lang_def_free	43:1:832:877	2222483	8	True				
ANR	2222575	AssignmentExpression	lang -> defs -> free = ( RListFree ) r_lang_def_free		2222483	0		=			
ANR	2222576	PtrMemberAccess	lang -> defs -> free		2222483	0					
ANR	2222577	PtrMemberAccess	lang -> defs		2222483	0					
ANR	2222578	Identifier	lang		2222483	0					
ANR	2222579	Identifier	defs		2222483	1					
ANR	2222580	Identifier	free		2222483	1					
ANR	2222581	CastExpression	( RListFree ) r_lang_def_free		2222483	1					
ANR	2222582	CastTarget	RListFree		2222483	0					
ANR	2222583	Identifier	r_lang_def_free		2222483	1					
ANR	2222584	ExpressionStatement	lang -> cb_printf = ( PrintfCallback ) printf	44:1:880:920	2222483	9	True				
ANR	2222585	AssignmentExpression	lang -> cb_printf = ( PrintfCallback ) printf		2222483	0		=			
ANR	2222586	PtrMemberAccess	lang -> cb_printf		2222483	0					
ANR	2222587	Identifier	lang		2222483	0					
ANR	2222588	Identifier	cb_printf		2222483	1					
ANR	2222589	CastExpression	( PrintfCallback ) printf		2222483	1					
ANR	2222590	CastTarget	PrintfCallback		2222483	0					
ANR	2222591	Identifier	printf		2222483	1					
ANR	2222592	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_c )"	45:1:923:958	2222483	10	True				
ANR	2222593	CallExpression	"r_lang_add ( lang , & r_lang_plugin_c )"		2222483	0					
ANR	2222594	Callee	r_lang_add		2222483	0					
ANR	2222595	Identifier	r_lang_add		2222483	0					
ANR	2222596	ArgumentList	lang		2222483	1					
ANR	2222597	Argument	lang		2222483	0					
ANR	2222598	Identifier	lang		2222483	0					
ANR	2222599	Argument	& r_lang_plugin_c		2222483	1					
ANR	2222600	UnaryOperationExpression	& r_lang_plugin_c		2222483	0					
ANR	2222601	UnaryOperator	&		2222483	0					
ANR	2222602	Identifier	r_lang_plugin_c		2222483	1					
ANR	2222603	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_cpipe )"	47:1:974:1013	2222483	11	True				
ANR	2222604	CallExpression	"r_lang_add ( lang , & r_lang_plugin_cpipe )"		2222483	0					
ANR	2222605	Callee	r_lang_add		2222483	0					
ANR	2222606	Identifier	r_lang_add		2222483	0					
ANR	2222607	ArgumentList	lang		2222483	1					
ANR	2222608	Argument	lang		2222483	0					
ANR	2222609	Identifier	lang		2222483	0					
ANR	2222610	Argument	& r_lang_plugin_cpipe		2222483	1					
ANR	2222611	UnaryOperationExpression	& r_lang_plugin_cpipe		2222483	0					
ANR	2222612	UnaryOperator	&		2222483	0					
ANR	2222613	Identifier	r_lang_plugin_cpipe		2222483	1					
ANR	2222614	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_vala )"	49:1:1023:1061	2222483	12	True				
ANR	2222615	CallExpression	"r_lang_add ( lang , & r_lang_plugin_vala )"		2222483	0					
ANR	2222616	Callee	r_lang_add		2222483	0					
ANR	2222617	Identifier	r_lang_add		2222483	0					
ANR	2222618	ArgumentList	lang		2222483	1					
ANR	2222619	Argument	lang		2222483	0					
ANR	2222620	Identifier	lang		2222483	0					
ANR	2222621	Argument	& r_lang_plugin_vala		2222483	1					
ANR	2222622	UnaryOperationExpression	& r_lang_plugin_vala		2222483	0					
ANR	2222623	UnaryOperator	&		2222483	0					
ANR	2222624	Identifier	r_lang_plugin_vala		2222483	1					
ANR	2222625	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_rust )"	50:1:1064:1102	2222483	13	True				
ANR	2222626	CallExpression	"r_lang_add ( lang , & r_lang_plugin_rust )"		2222483	0					
ANR	2222627	Callee	r_lang_add		2222483	0					
ANR	2222628	Identifier	r_lang_add		2222483	0					
ANR	2222629	ArgumentList	lang		2222483	1					
ANR	2222630	Argument	lang		2222483	0					
ANR	2222631	Identifier	lang		2222483	0					
ANR	2222632	Argument	& r_lang_plugin_rust		2222483	1					
ANR	2222633	UnaryOperationExpression	& r_lang_plugin_rust		2222483	0					
ANR	2222634	UnaryOperator	&		2222483	0					
ANR	2222635	Identifier	r_lang_plugin_rust		2222483	1					
ANR	2222636	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_zig )"	51:1:1105:1142	2222483	14	True				
ANR	2222637	CallExpression	"r_lang_add ( lang , & r_lang_plugin_zig )"		2222483	0					
ANR	2222638	Callee	r_lang_add		2222483	0					
ANR	2222639	Identifier	r_lang_add		2222483	0					
ANR	2222640	ArgumentList	lang		2222483	1					
ANR	2222641	Argument	lang		2222483	0					
ANR	2222642	Identifier	lang		2222483	0					
ANR	2222643	Argument	& r_lang_plugin_zig		2222483	1					
ANR	2222644	UnaryOperationExpression	& r_lang_plugin_zig		2222483	0					
ANR	2222645	UnaryOperator	&		2222483	0					
ANR	2222646	Identifier	r_lang_plugin_zig		2222483	1					
ANR	2222647	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_pipe )"	52:1:1145:1183	2222483	15	True				
ANR	2222648	CallExpression	"r_lang_add ( lang , & r_lang_plugin_pipe )"		2222483	0					
ANR	2222649	Callee	r_lang_add		2222483	0					
ANR	2222650	Identifier	r_lang_add		2222483	0					
ANR	2222651	ArgumentList	lang		2222483	1					
ANR	2222652	Argument	lang		2222483	0					
ANR	2222653	Identifier	lang		2222483	0					
ANR	2222654	Argument	& r_lang_plugin_pipe		2222483	1					
ANR	2222655	UnaryOperationExpression	& r_lang_plugin_pipe		2222483	0					
ANR	2222656	UnaryOperator	&		2222483	0					
ANR	2222657	Identifier	r_lang_plugin_pipe		2222483	1					
ANR	2222658	ExpressionStatement	"r_lang_add ( lang , & r_lang_plugin_lib )"	53:1:1186:1223	2222483	16	True				
ANR	2222659	CallExpression	"r_lang_add ( lang , & r_lang_plugin_lib )"		2222483	0					
ANR	2222660	Callee	r_lang_add		2222483	0					
ANR	2222661	Identifier	r_lang_add		2222483	0					
ANR	2222662	ArgumentList	lang		2222483	1					
ANR	2222663	Argument	lang		2222483	0					
ANR	2222664	Identifier	lang		2222483	0					
ANR	2222665	Argument	& r_lang_plugin_lib		2222483	1					
ANR	2222666	UnaryOperationExpression	& r_lang_plugin_lib		2222483	0					
ANR	2222667	UnaryOperator	&		2222483	0					
ANR	2222668	Identifier	r_lang_plugin_lib		2222483	1					
ANR	2222669	ReturnStatement	return lang ;	55:1:1227:1238	2222483	17	True				
ANR	2222670	Identifier	lang		2222483	0					
ANR	2222671	ReturnType	R_API RLang *		2222483	1					
ANR	2222672	Identifier	r_lang_new		2222483	2					
ANR	2222673	ParameterList			2222483	3					
ANR	2222674	CFGEntryNode	ENTRY		2222483		True				
ANR	2222675	CFGExitNode	EXIT		2222483		True				
ANR	2222676	Symbol	r_lang_plugin_free		2222483						
ANR	2222677	Symbol	* * lang		2222483						
ANR	2222678	Symbol	* lang		2222483						
ANR	2222679	Symbol	RLang		2222483						
ANR	2222680	Symbol	& r_lang_plugin_zig		2222483						
ANR	2222681	Symbol	lang -> langs		2222483						
ANR	2222682	Symbol	printf		2222483						
ANR	2222683	Symbol	* lang -> langs		2222483						
ANR	2222684	Symbol	lang		2222483						
ANR	2222685	Symbol	& r_lang_plugin_lib		2222483						
ANR	2222686	Symbol	r_lang_def_free		2222483						
ANR	2222687	Symbol	lang -> langs -> free		2222483						
ANR	2222688	Symbol	NULL		2222483						
ANR	2222689	Symbol	lang -> defs		2222483						
ANR	2222690	Symbol	& r_lang_plugin_c		2222483						
ANR	2222691	Symbol	& r_lang_plugin_rust		2222483						
ANR	2222692	Symbol	& r_lang_plugin_vala		2222483						
ANR	2222693	Symbol	* lang -> defs		2222483						
ANR	2222694	Symbol	R_NEW0		2222483						
ANR	2222695	Symbol	& r_lang_plugin_cpipe		2222483						
ANR	2222696	Symbol	lang -> cb_printf		2222483						
ANR	2222697	Symbol	lang -> defs -> free		2222483						
ANR	2222698	Symbol	& r_lang_plugin_pipe		2222483						
ANR	2222699	Symbol	lang -> user		2222483						
ANR	2222700	Symbol	r_list_new		2222483						
ANR	2222701	Function	r_lang_free	58:0:1243:1447							
ANR	2222702	FunctionDef	r_lang_free (RLang * lang)		2222701	0					
ANR	2222703	CompoundStatement		58:36:1279:1447	2222701	0					
ANR	2222704	IfStatement	if ( lang )		2222701	0					
ANR	2222705	Condition	lang	59:5:1286:1289	2222701	0	True				
ANR	2222706	Identifier	lang		2222701	0					
ANR	2222707	CompoundStatement		2:11:12:12	2222701	1					
ANR	2222708	ExpressionStatement	__lang = NULL	60:2:1296:1309	2222701	0	True				
ANR	2222709	AssignmentExpression	__lang = NULL		2222701	0		=			
ANR	2222710	Identifier	__lang		2222701	0					
ANR	2222711	Identifier	NULL		2222701	1					
ANR	2222712	ExpressionStatement	"r_lang_undef ( lang , NULL )"	61:2:1313:1338	2222701	1	True				
ANR	2222713	CallExpression	"r_lang_undef ( lang , NULL )"		2222701	0					
ANR	2222714	Callee	r_lang_undef		2222701	0					
ANR	2222715	Identifier	r_lang_undef		2222701	0					
ANR	2222716	ArgumentList	lang		2222701	1					
ANR	2222717	Argument	lang		2222701	0					
ANR	2222718	Identifier	lang		2222701	0					
ANR	2222719	Argument	NULL		2222701	1					
ANR	2222720	Identifier	NULL		2222701	0					
ANR	2222721	ExpressionStatement	r_list_free ( lang -> langs )	62:2:1342:1367	2222701	2	True				
ANR	2222722	CallExpression	r_list_free ( lang -> langs )		2222701	0					
ANR	2222723	Callee	r_list_free		2222701	0					
ANR	2222724	Identifier	r_list_free		2222701	0					
ANR	2222725	ArgumentList	lang -> langs		2222701	1					
ANR	2222726	Argument	lang -> langs		2222701	0					
ANR	2222727	PtrMemberAccess	lang -> langs		2222701	0					
ANR	2222728	Identifier	lang		2222701	0					
ANR	2222729	Identifier	langs		2222701	1					
ANR	2222730	ExpressionStatement	r_list_free ( lang -> defs )	63:2:1371:1395	2222701	3	True				
ANR	2222731	CallExpression	r_list_free ( lang -> defs )		2222701	0					
ANR	2222732	Callee	r_list_free		2222701	0					
ANR	2222733	Identifier	r_list_free		2222701	0					
ANR	2222734	ArgumentList	lang -> defs		2222701	1					
ANR	2222735	Argument	lang -> defs		2222701	0					
ANR	2222736	PtrMemberAccess	lang -> defs		2222701	0					
ANR	2222737	Identifier	lang		2222701	0					
ANR	2222738	Identifier	defs		2222701	1					
ANR	2222739	ExpressionStatement	free ( lang )	65:2:1431:1442	2222701	4	True				
ANR	2222740	CallExpression	free ( lang )		2222701	0					
ANR	2222741	Callee	free		2222701	0					
ANR	2222742	Identifier	free		2222701	0					
ANR	2222743	ArgumentList	lang		2222701	1					
ANR	2222744	Argument	lang		2222701	0					
ANR	2222745	Identifier	lang		2222701	0					
ANR	2222746	ReturnType	R_API void		2222701	1					
ANR	2222747	Identifier	r_lang_free		2222701	2					
ANR	2222748	ParameterList	RLang * lang		2222701	3					
ANR	2222749	Parameter	RLang * lang	58:23:1266:1276	2222701	0	True				
ANR	2222750	ParameterType	RLang *		2222701	0					
ANR	2222751	Identifier	lang		2222701	1					
ANR	2222752	CFGEntryNode	ENTRY		2222701		True				
ANR	2222753	CFGExitNode	EXIT		2222701		True				
ANR	2222754	Symbol	NULL		2222701						
ANR	2222755	Symbol	* lang		2222701						
ANR	2222756	Symbol	lang -> defs		2222701						
ANR	2222757	Symbol	__lang		2222701						
ANR	2222758	Symbol	lang		2222701						
ANR	2222759	Symbol	lang -> langs		2222701						
ANR	2222760	Function	r_lang_set_user_ptr	73:0:1645:1723							
ANR	2222761	FunctionDef	"r_lang_set_user_ptr (RLang * lang , void * user)"		2222760	0					
ANR	2222762	CompoundStatement		73:56:1701:1723	2222760	0					
ANR	2222763	ExpressionStatement	lang -> user = user	74:1:1704:1721	2222760	0	True				
ANR	2222764	AssignmentExpression	lang -> user = user		2222760	0		=			
ANR	2222765	PtrMemberAccess	lang -> user		2222760	0					
ANR	2222766	Identifier	lang		2222760	0					
ANR	2222767	Identifier	user		2222760	1					
ANR	2222768	Identifier	user		2222760	1					
ANR	2222769	ReturnType	R_API void		2222760	1					
ANR	2222770	Identifier	r_lang_set_user_ptr		2222760	2					
ANR	2222771	ParameterList	"RLang * lang , void * user"		2222760	3					
ANR	2222772	Parameter	RLang * lang	73:31:1676:1686	2222760	0	True				
ANR	2222773	ParameterType	RLang *		2222760	0					
ANR	2222774	Identifier	lang		2222760	1					
ANR	2222775	Parameter	void * user	73:44:1689:1698	2222760	1	True				
ANR	2222776	ParameterType	void *		2222760	0					
ANR	2222777	Identifier	user		2222760	1					
ANR	2222778	CFGEntryNode	ENTRY		2222760		True				
ANR	2222779	CFGExitNode	EXIT		2222760		True				
ANR	2222780	Symbol	* lang		2222760						
ANR	2222781	Symbol	lang		2222760						
ANR	2222782	Symbol	user		2222760						
ANR	2222783	Symbol	lang -> user		2222760						
ANR	2222784	Function	r_lang_define	77:0:1726:2163							
ANR	2222785	FunctionDef	"r_lang_define (RLang * lang , const char * type , const char * name , void * value)"		2222784	0					
ANR	2222786	CompoundStatement		77:87:1813:2163	2222784	0					
ANR	2222787	IdentifierDeclStatement	RLangDef * def ;	78:1:1816:1829	2222784	0	True				
ANR	2222788	IdentifierDecl	* def		2222784	0					
ANR	2222789	IdentifierDeclType	RLangDef *		2222784	0					
ANR	2222790	Identifier	def		2222784	1					
ANR	2222791	IdentifierDeclStatement	RListIter * iter ;	79:1:1832:1847	2222784	1	True				
ANR	2222792	IdentifierDecl	* iter		2222784	0					
ANR	2222793	IdentifierDeclType	RListIter *		2222784	0					
ANR	2222794	Identifier	iter		2222784	1					
ANR	2222795	Statement	r_list_foreach	80:1:1850:1863	2222784	2	True				
ANR	2222796	Statement	(	80:16:1865:1865	2222784	3	True				
ANR	2222797	Statement	lang	80:17:1866:1869	2222784	4	True				
ANR	2222798	Statement	->	80:21:1870:1871	2222784	5	True				
ANR	2222799	Statement	defs	80:23:1872:1875	2222784	6	True				
ANR	2222800	Statement	","	80:27:1876:1876	2222784	7	True				
ANR	2222801	Statement	iter	80:29:1878:1881	2222784	8	True				
ANR	2222802	Statement	","	80:33:1882:1882	2222784	9	True				
ANR	2222803	Statement	def	80:35:1884:1886	2222784	10	True				
ANR	2222804	Statement	)	80:38:1887:1887	2222784	11	True				
ANR	2222805	CompoundStatement		4:40:75:75	2222784	12					
ANR	2222806	IfStatement	"if ( ! r_str_casecmp ( name , def -> name ) )"		2222784	0					
ANR	2222807	Condition	"! r_str_casecmp ( name , def -> name )"	81:6:1897:1928	2222784	0	True				
ANR	2222808	UnaryOperationExpression	"! r_str_casecmp ( name , def -> name )"		2222784	0					
ANR	2222809	UnaryOperator	!		2222784	0					
ANR	2222810	CallExpression	"r_str_casecmp ( name , def -> name )"		2222784	1					
ANR	2222811	Callee	r_str_casecmp		2222784	0					
ANR	2222812	Identifier	r_str_casecmp		2222784	0					
ANR	2222813	ArgumentList	name		2222784	1					
ANR	2222814	Argument	name		2222784	0					
ANR	2222815	Identifier	name		2222784	0					
ANR	2222816	Argument	def -> name		2222784	1					
ANR	2222817	PtrMemberAccess	def -> name		2222784	0					
ANR	2222818	Identifier	def		2222784	0					
ANR	2222819	Identifier	name		2222784	1					
ANR	2222820	CompoundStatement		5:40:117:117	2222784	1					
ANR	2222821	ExpressionStatement	def -> value = value	82:3:1936:1954	2222784	0	True				
ANR	2222822	AssignmentExpression	def -> value = value		2222784	0		=			
ANR	2222823	PtrMemberAccess	def -> value		2222784	0					
ANR	2222824	Identifier	def		2222784	0					
ANR	2222825	Identifier	value		2222784	1					
ANR	2222826	Identifier	value		2222784	1					
ANR	2222827	ReturnStatement	return true ;	83:3:1959:1971	2222784	1	True				
ANR	2222828	Identifier	true		2222784	0					
ANR	2222829	ExpressionStatement	def = R_NEW0 ( RLangDef )	86:1:1981:2004	2222784	13	True				
ANR	2222830	AssignmentExpression	def = R_NEW0 ( RLangDef )		2222784	0		=			
ANR	2222831	Identifier	def		2222784	0					
ANR	2222832	CallExpression	R_NEW0 ( RLangDef )		2222784	1					
ANR	2222833	Callee	R_NEW0		2222784	0					
ANR	2222834	Identifier	R_NEW0		2222784	0					
ANR	2222835	ArgumentList	RLangDef		2222784	1					
ANR	2222836	Argument	RLangDef		2222784	0					
ANR	2222837	Identifier	RLangDef		2222784	0					
ANR	2222838	IfStatement	if ( ! def )		2222784	14					
ANR	2222839	Condition	! def	87:5:2011:2014	2222784	0	True				
ANR	2222840	UnaryOperationExpression	! def		2222784	0					
ANR	2222841	UnaryOperator	!		2222784	0					
ANR	2222842	Identifier	def		2222784	1					
ANR	2222843	CompoundStatement		11:11:203:203	2222784	1					
ANR	2222844	ReturnStatement	return false ;	88:2:2021:2033	2222784	0	True				
ANR	2222845	Identifier	false		2222784	0					
ANR	2222846	ExpressionStatement	def -> type = strdup ( type )	90:1:2039:2064	2222784	15	True				
ANR	2222847	AssignmentExpression	def -> type = strdup ( type )		2222784	0		=			
ANR	2222848	PtrMemberAccess	def -> type		2222784	0					
ANR	2222849	Identifier	def		2222784	0					
ANR	2222850	Identifier	type		2222784	1					
ANR	2222851	CallExpression	strdup ( type )		2222784	1					
ANR	2222852	Callee	strdup		2222784	0					
ANR	2222853	Identifier	strdup		2222784	0					
ANR	2222854	ArgumentList	type		2222784	1					
ANR	2222855	Argument	type		2222784	0					
ANR	2222856	Identifier	type		2222784	0					
ANR	2222857	ExpressionStatement	def -> name = strdup ( name )	91:1:2067:2092	2222784	16	True				
ANR	2222858	AssignmentExpression	def -> name = strdup ( name )		2222784	0		=			
ANR	2222859	PtrMemberAccess	def -> name		2222784	0					
ANR	2222860	Identifier	def		2222784	0					
ANR	2222861	Identifier	name		2222784	1					
ANR	2222862	CallExpression	strdup ( name )		2222784	1					
ANR	2222863	Callee	strdup		2222784	0					
ANR	2222864	Identifier	strdup		2222784	0					
ANR	2222865	ArgumentList	name		2222784	1					
ANR	2222866	Argument	name		2222784	0					
ANR	2222867	Identifier	name		2222784	0					
ANR	2222868	ExpressionStatement	def -> value = value	92:1:2095:2113	2222784	17	True				
ANR	2222869	AssignmentExpression	def -> value = value		2222784	0		=			
ANR	2222870	PtrMemberAccess	def -> value		2222784	0					
ANR	2222871	Identifier	def		2222784	0					
ANR	2222872	Identifier	value		2222784	1					
ANR	2222873	Identifier	value		2222784	1					
ANR	2222874	ExpressionStatement	"r_list_append ( lang -> defs , def )"	93:1:2116:2147	2222784	18	True				
ANR	2222875	CallExpression	"r_list_append ( lang -> defs , def )"		2222784	0					
ANR	2222876	Callee	r_list_append		2222784	0					
ANR	2222877	Identifier	r_list_append		2222784	0					
ANR	2222878	ArgumentList	lang -> defs		2222784	1					
ANR	2222879	Argument	lang -> defs		2222784	0					
ANR	2222880	PtrMemberAccess	lang -> defs		2222784	0					
ANR	2222881	Identifier	lang		2222784	0					
ANR	2222882	Identifier	defs		2222784	1					
ANR	2222883	Argument	def		2222784	1					
ANR	2222884	Identifier	def		2222784	0					
ANR	2222885	ReturnStatement	return true ;	94:1:2150:2161	2222784	19	True				
ANR	2222886	Identifier	true		2222784	0					
ANR	2222887	ReturnType	R_API bool		2222784	1					
ANR	2222888	Identifier	r_lang_define		2222784	2					
ANR	2222889	ParameterList	"RLang * lang , const char * type , const char * name , void * value"		2222784	3					
ANR	2222890	Parameter	RLang * lang	77:25:1751:1761	2222784	0	True				
ANR	2222891	ParameterType	RLang *		2222784	0					
ANR	2222892	Identifier	lang		2222784	1					
ANR	2222893	Parameter	const char * type	77:38:1764:1779	2222784	1	True				
ANR	2222894	ParameterType	const char *		2222784	0					
ANR	2222895	Identifier	type		2222784	1					
ANR	2222896	Parameter	const char * name	77:56:1782:1797	2222784	2	True				
ANR	2222897	ParameterType	const char *		2222784	0					
ANR	2222898	Identifier	name		2222784	1					
ANR	2222899	Parameter	void * value	77:74:1800:1810	2222784	3	True				
ANR	2222900	ParameterType	void *		2222784	0					
ANR	2222901	Identifier	value		2222784	1					
ANR	2222902	CFGEntryNode	ENTRY		2222784		True				
ANR	2222903	CFGExitNode	EXIT		2222784		True				
ANR	2222904	Symbol	def		2222784						
ANR	2222905	Symbol	* lang		2222784						
ANR	2222906	Symbol	lang -> defs		2222784						
ANR	2222907	Symbol	false		2222784						
ANR	2222908	Symbol	iter		2222784						
ANR	2222909	Symbol	def -> name		2222784						
ANR	2222910	Symbol	type		2222784						
ANR	2222911	Symbol	* def		2222784						
ANR	2222912	Symbol	R_NEW0		2222784						
ANR	2222913	Symbol	def -> value		2222784						
ANR	2222914	Symbol	name		2222784						
ANR	2222915	Symbol	true		2222784						
ANR	2222916	Symbol	def -> type		2222784						
ANR	2222917	Symbol	RLangDef		2222784						
ANR	2222918	Symbol	strdup		2222784						
ANR	2222919	Symbol	lang		2222784						
ANR	2222920	Symbol	value		2222784						
ANR	2222921	Symbol	r_str_casecmp		2222784						
ANR	2222922	Function	r_lang_def_free	97:0:2166:2262							
ANR	2222923	FunctionDef	r_lang_def_free (RLangDef * def)		2222922	0					
ANR	2222924	CompoundStatement		97:43:2209:2262	2222922	0					
ANR	2222925	ExpressionStatement	free ( def -> name )	98:1:2212:2228	2222922	0	True				
ANR	2222926	CallExpression	free ( def -> name )		2222922	0					
ANR	2222927	Callee	free		2222922	0					
ANR	2222928	Identifier	free		2222922	0					
ANR	2222929	ArgumentList	def -> name		2222922	1					
ANR	2222930	Argument	def -> name		2222922	0					
ANR	2222931	PtrMemberAccess	def -> name		2222922	0					
ANR	2222932	Identifier	def		2222922	0					
ANR	2222933	Identifier	name		2222922	1					
ANR	2222934	ExpressionStatement	free ( def -> type )	99:1:2231:2247	2222922	1	True				
ANR	2222935	CallExpression	free ( def -> type )		2222922	0					
ANR	2222936	Callee	free		2222922	0					
ANR	2222937	Identifier	free		2222922	0					
ANR	2222938	ArgumentList	def -> type		2222922	1					
ANR	2222939	Argument	def -> type		2222922	0					
ANR	2222940	PtrMemberAccess	def -> type		2222922	0					
ANR	2222941	Identifier	def		2222922	0					
ANR	2222942	Identifier	type		2222922	1					
ANR	2222943	ExpressionStatement	free ( def )	100:1:2250:2260	2222922	2	True				
ANR	2222944	CallExpression	free ( def )		2222922	0					
ANR	2222945	Callee	free		2222922	0					
ANR	2222946	Identifier	free		2222922	0					
ANR	2222947	ArgumentList	def		2222922	1					
ANR	2222948	Argument	def		2222922	0					
ANR	2222949	Identifier	def		2222922	0					
ANR	2222950	ReturnType	R_API void		2222922	1					
ANR	2222951	Identifier	r_lang_def_free		2222922	2					
ANR	2222952	ParameterList	RLangDef * def		2222922	3					
ANR	2222953	Parameter	RLangDef * def	97:28:2194:2206	2222922	0	True				
ANR	2222954	ParameterType	RLangDef *		2222922	0					
ANR	2222955	Identifier	def		2222922	1					
ANR	2222956	CFGEntryNode	ENTRY		2222922		True				
ANR	2222957	CFGExitNode	EXIT		2222922		True				
ANR	2222958	Symbol	* def		2222922						
ANR	2222959	Symbol	def		2222922						
ANR	2222960	Symbol	def -> type		2222922						
ANR	2222961	Symbol	def -> name		2222922						
ANR	2222962	Function	r_lang_undef	103:0:2265:2675							
ANR	2222963	FunctionDef	"r_lang_undef (RLang * lang , const char * name)"		2222962	0					
ANR	2222964	CompoundStatement		103:55:2320:2675	2222962	0					
ANR	2222965	IfStatement	if ( name && * name )		2222962	0					
ANR	2222966	Condition	name && * name	104:5:2327:2339	2222962	0	True				
ANR	2222967	AndExpression	name && * name		2222962	0		&&			
ANR	2222968	Identifier	name		2222962	0					
ANR	2222969	UnaryOperationExpression	* name		2222962	1					
ANR	2222970	UnaryOperator	*		2222962	0					
ANR	2222971	Identifier	name		2222962	1					
ANR	2222972	CompoundStatement		4:2:42:57	2222962	1					
ANR	2222973	IdentifierDeclStatement	RLangDef * def ;	105:2:2346:2359	2222962	0	True				
ANR	2222974	IdentifierDecl	* def		2222962	0					
ANR	2222975	IdentifierDeclType	RLangDef *		2222962	0					
ANR	2222976	Identifier	def		2222962	1					
ANR	2222977	IdentifierDeclStatement	RListIter * iter ;	106:2:2363:2378	2222962	1	True				
ANR	2222978	IdentifierDecl	* iter		2222962	0					
ANR	2222979	IdentifierDeclType	RListIter *		2222962	0					
ANR	2222980	Identifier	iter		2222962	1					
ANR	2222981	Statement	r_list_foreach	108:2:2462:2475	2222962	2	True				
ANR	2222982	Statement	(	108:17:2477:2477	2222962	3	True				
ANR	2222983	Statement	lang	108:18:2478:2481	2222962	4	True				
ANR	2222984	Statement	->	108:22:2482:2483	2222962	5	True				
ANR	2222985	Statement	defs	108:24:2484:2487	2222962	6	True				
ANR	2222986	Statement	","	108:28:2488:2488	2222962	7	True				
ANR	2222987	Statement	iter	108:30:2490:2493	2222962	8	True				
ANR	2222988	Statement	","	108:34:2494:2494	2222962	9	True				
ANR	2222989	Statement	def	108:36:2496:2498	2222962	10	True				
ANR	2222990	Statement	)	108:39:2499:2499	2222962	11	True				
ANR	2222991	CompoundStatement		6:41:180:180	2222962	12					
ANR	2222992	IfStatement	"if ( ! name || ! r_str_casecmp ( name , def -> name ) )"		2222962	0					
ANR	2222993	Condition	"! name || ! r_str_casecmp ( name , def -> name )"	109:7:2510:2550	2222962	0	True				
ANR	2222994	OrExpression	"! name || ! r_str_casecmp ( name , def -> name )"		2222962	0		||			
ANR	2222995	UnaryOperationExpression	! name		2222962	0					
ANR	2222996	UnaryOperator	!		2222962	0					
ANR	2222997	Identifier	name		2222962	1					
ANR	2222998	UnaryOperationExpression	"! r_str_casecmp ( name , def -> name )"		2222962	1					
ANR	2222999	UnaryOperator	!		2222962	0					
ANR	2223000	CallExpression	"r_str_casecmp ( name , def -> name )"		2222962	1					
ANR	2223001	Callee	r_str_casecmp		2222962	0					
ANR	2223002	Identifier	r_str_casecmp		2222962	0					
ANR	2223003	ArgumentList	name		2222962	1					
ANR	2223004	Argument	name		2222962	0					
ANR	2223005	Identifier	name		2222962	0					
ANR	2223006	Argument	def -> name		2222962	1					
ANR	2223007	PtrMemberAccess	def -> name		2222962	0					
ANR	2223008	Identifier	def		2222962	0					
ANR	2223009	Identifier	name		2222962	1					
ANR	2223010	CompoundStatement		7:50:232:232	2222962	1					
ANR	2223011	ExpressionStatement	"r_list_delete ( lang -> defs , iter )"	110:4:2559:2591	2222962	0	True				
ANR	2223012	CallExpression	"r_list_delete ( lang -> defs , iter )"		2222962	0					
ANR	2223013	Callee	r_list_delete		2222962	0					
ANR	2223014	Identifier	r_list_delete		2222962	0					
ANR	2223015	ArgumentList	lang -> defs		2222962	1					
ANR	2223016	Argument	lang -> defs		2222962	0					
ANR	2223017	PtrMemberAccess	lang -> defs		2222962	0					
ANR	2223018	Identifier	lang		2222962	0					
ANR	2223019	Identifier	defs		2222962	1					
ANR	2223020	Argument	iter		2222962	1					
ANR	2223021	Identifier	iter		2222962	0					
ANR	2223022	BreakStatement	break ;	111:4:2597:2602	2222962	1	True				
ANR	2223023	ElseStatement	else		2222962	0					
ANR	2223024	CompoundStatement		12:8:300:300	2222962	0					
ANR	2223025	ExpressionStatement	r_list_free ( lang -> defs )	115:2:2625:2649	2222962	0	True				
ANR	2223026	CallExpression	r_list_free ( lang -> defs )		2222962	0					
ANR	2223027	Callee	r_list_free		2222962	0					
ANR	2223028	Identifier	r_list_free		2222962	0					
ANR	2223029	ArgumentList	lang -> defs		2222962	1					
ANR	2223030	Argument	lang -> defs		2222962	0					
ANR	2223031	PtrMemberAccess	lang -> defs		2222962	0					
ANR	2223032	Identifier	lang		2222962	0					
ANR	2223033	Identifier	defs		2222962	1					
ANR	2223034	ExpressionStatement	lang -> defs = NULL	116:2:2653:2670	2222962	1	True				
ANR	2223035	AssignmentExpression	lang -> defs = NULL		2222962	0		=			
ANR	2223036	PtrMemberAccess	lang -> defs		2222962	0					
ANR	2223037	Identifier	lang		2222962	0					
ANR	2223038	Identifier	defs		2222962	1					
ANR	2223039	Identifier	NULL		2222962	1					
ANR	2223040	ReturnType	R_API void		2222962	1					
ANR	2223041	Identifier	r_lang_undef		2222962	2					
ANR	2223042	ParameterList	"RLang * lang , const char * name"		2222962	3					
ANR	2223043	Parameter	RLang * lang	103:24:2289:2299	2222962	0	True				
ANR	2223044	ParameterType	RLang *		2222962	0					
ANR	2223045	Identifier	lang		2222962	1					
ANR	2223046	Parameter	const char * name	103:37:2302:2317	2222962	1	True				
ANR	2223047	ParameterType	const char *		2222962	0					
ANR	2223048	Identifier	name		2222962	1					
ANR	2223049	CFGEntryNode	ENTRY		2222962		True				
ANR	2223050	CFGExitNode	EXIT		2222962		True				
ANR	2223051	CFGErrorNode	ERROR		2222962		True				
ANR	2223052	Symbol	* name		2222962						
ANR	2223053	Symbol	* def		2222962						
ANR	2223054	Symbol	NULL		2222962						
ANR	2223055	Symbol	def		2222962						
ANR	2223056	Symbol	* lang		2222962						
ANR	2223057	Symbol	lang -> defs		2222962						
ANR	2223058	Symbol	name		2222962						
ANR	2223059	Symbol	iter		2222962						
ANR	2223060	Symbol	def -> name		2222962						
ANR	2223061	Symbol	lang		2222962						
ANR	2223062	Symbol	r_str_casecmp		2222962						
ANR	2223063	Function	r_lang_setup	120:0:2678:2815							
ANR	2223064	FunctionDef	r_lang_setup (RLang * lang)		2223063	0					
ANR	2223065	CompoundStatement		120:37:2715:2815	2223063	0					
ANR	2223066	IfStatement	if ( lang && lang -> cur && lang -> cur -> setup )		2223063	0					
ANR	2223067	Condition	lang && lang -> cur && lang -> cur -> setup	121:5:2722:2758	2223063	0	True				
ANR	2223068	AndExpression	lang && lang -> cur && lang -> cur -> setup		2223063	0		&&			
ANR	2223069	Identifier	lang		2223063	0					
ANR	2223070	AndExpression	lang -> cur && lang -> cur -> setup		2223063	1		&&			
ANR	2223071	PtrMemberAccess	lang -> cur		2223063	0					
ANR	2223072	Identifier	lang		2223063	0					
ANR	2223073	Identifier	cur		2223063	1					
ANR	2223074	PtrMemberAccess	lang -> cur -> setup		2223063	1					
ANR	2223075	PtrMemberAccess	lang -> cur		2223063	0					
ANR	2223076	Identifier	lang		2223063	0					
ANR	2223077	Identifier	cur		2223063	1					
ANR	2223078	Identifier	setup		2223063	1					
ANR	2223079	CompoundStatement		2:44:45:45	2223063	1					
ANR	2223080	ReturnStatement	return lang -> cur -> setup ( lang ) ;	122:2:2765:2795	2223063	0	True				
ANR	2223081	CallExpression	lang -> cur -> setup ( lang )		2223063	0					
ANR	2223082	Callee	lang -> cur -> setup		2223063	0					
ANR	2223083	PtrMemberAccess	lang -> cur -> setup		2223063	0					
ANR	2223084	PtrMemberAccess	lang -> cur		2223063	0					
ANR	2223085	Identifier	lang		2223063	0					
ANR	2223086	Identifier	cur		2223063	1					
ANR	2223087	Identifier	setup		2223063	1					
ANR	2223088	ArgumentList	lang		2223063	1					
ANR	2223089	Argument	lang		2223063	0					
ANR	2223090	Identifier	lang		2223063	0					
ANR	2223091	ReturnStatement	return false ;	124:1:2801:2813	2223063	1	True				
ANR	2223092	Identifier	false		2223063	0					
ANR	2223093	ReturnType	R_API bool		2223063	1					
ANR	2223094	Identifier	r_lang_setup		2223063	2					
ANR	2223095	ParameterList	RLang * lang		2223063	3					
ANR	2223096	Parameter	RLang * lang	120:24:2702:2712	2223063	0	True				
ANR	2223097	ParameterType	RLang *		2223063	0					
ANR	2223098	Identifier	lang		2223063	1					
ANR	2223099	CFGEntryNode	ENTRY		2223063		True				
ANR	2223100	CFGExitNode	EXIT		2223063		True				
ANR	2223101	Symbol	* lang -> cur		2223063						
ANR	2223102	Symbol	* * lang		2223063						
ANR	2223103	Symbol	* lang		2223063						
ANR	2223104	Symbol	lang -> cur -> setup		2223063						
ANR	2223105	Symbol	lang -> cur		2223063						
ANR	2223106	Symbol	false		2223063						
ANR	2223107	Symbol	lang		2223063						
ANR	2223108	Function	r_lang_add	127:0:2818:3041							
ANR	2223109	FunctionDef	"r_lang_add (RLang * lang , RLangPlugin * foo)"		2223108	0					
ANR	2223110	CompoundStatement		127:53:2871:3041	2223108	0					
ANR	2223111	IfStatement	"if ( foo && ( ! r_lang_get_by_name ( lang , foo -> name ) ) )"		2223108	0					
ANR	2223112	Condition	"foo && ( ! r_lang_get_by_name ( lang , foo -> name ) )"	128:5:2878:2923	2223108	0	True				
ANR	2223113	AndExpression	"foo && ( ! r_lang_get_by_name ( lang , foo -> name ) )"		2223108	0		&&			
ANR	2223114	Identifier	foo		2223108	0					
ANR	2223115	UnaryOperationExpression	"! r_lang_get_by_name ( lang , foo -> name )"		2223108	1					
ANR	2223116	UnaryOperator	!		2223108	0					
ANR	2223117	CallExpression	"r_lang_get_by_name ( lang , foo -> name )"		2223108	1					
ANR	2223118	Callee	r_lang_get_by_name		2223108	0					
ANR	2223119	Identifier	r_lang_get_by_name		2223108	0					
ANR	2223120	ArgumentList	lang		2223108	1					
ANR	2223121	Argument	lang		2223108	0					
ANR	2223122	Identifier	lang		2223108	0					
ANR	2223123	Argument	foo -> name		2223108	1					
ANR	2223124	PtrMemberAccess	foo -> name		2223108	0					
ANR	2223125	Identifier	foo		2223108	0					
ANR	2223126	Identifier	name		2223108	1					
ANR	2223127	CompoundStatement		2:53:54:54	2223108	1					
ANR	2223128	IfStatement	if ( foo -> init )		2223108	0					
ANR	2223129	Condition	foo -> init	129:6:2934:2942	2223108	0	True				
ANR	2223130	PtrMemberAccess	foo -> init		2223108	0					
ANR	2223131	Identifier	foo		2223108	0					
ANR	2223132	Identifier	init		2223108	1					
ANR	2223133	CompoundStatement		3:17:73:73	2223108	1					
ANR	2223134	ExpressionStatement	foo -> init ( lang )	130:3:2950:2966	2223108	0	True				
ANR	2223135	CallExpression	foo -> init ( lang )		2223108	0					
ANR	2223136	Callee	foo -> init		2223108	0					
ANR	2223137	PtrMemberAccess	foo -> init		2223108	0					
ANR	2223138	Identifier	foo		2223108	0					
ANR	2223139	Identifier	init		2223108	1					
ANR	2223140	ArgumentList	lang		2223108	1					
ANR	2223141	Argument	lang		2223108	0					
ANR	2223142	Identifier	lang		2223108	0					
ANR	2223143	ExpressionStatement	"r_list_append ( lang -> langs , foo )"	132:2:2974:3006	2223108	1	True				
ANR	2223144	CallExpression	"r_list_append ( lang -> langs , foo )"		2223108	0					
ANR	2223145	Callee	r_list_append		2223108	0					
ANR	2223146	Identifier	r_list_append		2223108	0					
ANR	2223147	ArgumentList	lang -> langs		2223108	1					
ANR	2223148	Argument	lang -> langs		2223108	0					
ANR	2223149	PtrMemberAccess	lang -> langs		2223108	0					
ANR	2223150	Identifier	lang		2223108	0					
ANR	2223151	Identifier	langs		2223108	1					
ANR	2223152	Argument	foo		2223108	1					
ANR	2223153	Identifier	foo		2223108	0					
ANR	2223154	ReturnStatement	return true ;	133:2:3010:3021	2223108	2	True				
ANR	2223155	Identifier	true		2223108	0					
ANR	2223156	ReturnStatement	return false ;	135:1:3027:3039	2223108	1	True				
ANR	2223157	Identifier	false		2223108	0					
ANR	2223158	ReturnType	R_API bool		2223108	1					
ANR	2223159	Identifier	r_lang_add		2223108	2					
ANR	2223160	ParameterList	"RLang * lang , RLangPlugin * foo"		2223108	3					
ANR	2223161	Parameter	RLang * lang	127:22:2840:2850	2223108	0	True				
ANR	2223162	ParameterType	RLang *		2223108	0					
ANR	2223163	Identifier	lang		2223108	1					
ANR	2223164	Parameter	RLangPlugin * foo	127:35:2853:2868	2223108	1	True				
ANR	2223165	ParameterType	RLangPlugin *		2223108	0					
ANR	2223166	Identifier	foo		2223108	1					
ANR	2223167	CFGEntryNode	ENTRY		2223108		True				
ANR	2223168	CFGExitNode	EXIT		2223108		True				
ANR	2223169	Symbol	foo -> name		2223108						
ANR	2223170	Symbol	* lang		2223108						
ANR	2223171	Symbol	foo		2223108						
ANR	2223172	Symbol	foo -> init		2223108						
ANR	2223173	Symbol	true		2223108						
ANR	2223174	Symbol	false		2223108						
ANR	2223175	Symbol	lang		2223108						
ANR	2223176	Symbol	r_lang_get_by_name		2223108						
ANR	2223177	Symbol	* foo		2223108						
ANR	2223178	Symbol	lang -> langs		2223108						
ANR	2223179	Function	r_lang_list	139:0:3083:3374							
ANR	2223180	FunctionDef	r_lang_list (RLang * lang)		2223179	0					
ANR	2223181	CompoundStatement		139:36:3119:3374	2223179	0					
ANR	2223182	IdentifierDeclStatement	RListIter * iter ;	140:1:3122:3137	2223179	0	True				
ANR	2223183	IdentifierDecl	* iter		2223179	0					
ANR	2223184	IdentifierDeclType	RListIter *		2223179	0					
ANR	2223185	Identifier	iter		2223179	1					
ANR	2223186	IdentifierDeclStatement	RLangPlugin * h ;	141:1:3140:3154	2223179	1	True				
ANR	2223187	IdentifierDecl	* h		2223179	0					
ANR	2223188	IdentifierDeclType	RLangPlugin *		2223179	0					
ANR	2223189	Identifier	h		2223179	1					
ANR	2223190	IfStatement	if ( ! lang )		2223179	2					
ANR	2223191	Condition	! lang	142:5:3161:3165	2223179	0	True				
ANR	2223192	UnaryOperationExpression	! lang		2223179	0					
ANR	2223193	UnaryOperator	!		2223179	0					
ANR	2223194	Identifier	lang		2223179	1					
ANR	2223195	CompoundStatement		4:12:48:48	2223179	1					
ANR	2223196	ReturnStatement	return false ;	143:2:3172:3184	2223179	0	True				
ANR	2223197	Identifier	false		2223179	0					
ANR	2223198	Statement	r_list_foreach	145:1:3190:3203	2223179	3	True				
ANR	2223199	Statement	(	145:16:3205:3205	2223179	4	True				
ANR	2223200	Statement	lang	145:17:3206:3209	2223179	5	True				
ANR	2223201	Statement	->	145:21:3210:3211	2223179	6	True				
ANR	2223202	Statement	langs	145:23:3212:3216	2223179	7	True				
ANR	2223203	Statement	","	145:28:3217:3217	2223179	8	True				
ANR	2223204	Statement	iter	145:30:3219:3222	2223179	9	True				
ANR	2223205	Statement	","	145:34:3223:3223	2223179	10	True				
ANR	2223206	Statement	h	145:36:3225:3225	2223179	11	True				
ANR	2223207	Statement	)	145:37:3226:3226	2223179	12	True				
ANR	2223208	CompoundStatement		8:2:112:168	2223179	13					
ANR	2223209	IdentifierDeclStatement	"const char * license = h -> license ? h -> license : ""???"" ;"	146:2:3232:3288	2223179	0	True				
ANR	2223210	IdentifierDecl	"* license = h -> license ? h -> license : ""???"""		2223179	0					
ANR	2223211	IdentifierDeclType	const char *		2223179	0					
ANR	2223212	Identifier	license		2223179	1					
ANR	2223213	AssignmentExpression	"* license = h -> license ? h -> license : ""???"""		2223179	2		=			
ANR	2223214	Identifier	license		2223179	0					
ANR	2223215	ConditionalExpression	"h -> license ? h -> license : ""???"""		2223179	1					
ANR	2223216	Condition	h -> license		2223179	0					
ANR	2223217	PtrMemberAccess	h -> license		2223179	0					
ANR	2223218	Identifier	h		2223179	0					
ANR	2223219	Identifier	license		2223179	1					
ANR	2223220	PtrMemberAccess	h -> license		2223179	1					
ANR	2223221	Identifier	h		2223179	0					
ANR	2223222	Identifier	license		2223179	1					
ANR	2223223	PrimaryExpression	"""???"""		2223179	2					
ANR	2223224	ExpressionStatement	"lang -> cb_printf ( ""%s: (%s) %s\\n"" , h -> name , license , h -> desc )"	148:2:3292:3355	2223179	1	True				
ANR	2223225	CallExpression	"lang -> cb_printf ( ""%s: (%s) %s\\n"" , h -> name , license , h -> desc )"		2223179	0					
ANR	2223226	Callee	lang -> cb_printf		2223179	0					
ANR	2223227	PtrMemberAccess	lang -> cb_printf		2223179	0					
ANR	2223228	Identifier	lang		2223179	0					
ANR	2223229	Identifier	cb_printf		2223179	1					
ANR	2223230	ArgumentList	"""%s: (%s) %s\\n"""		2223179	1					
ANR	2223231	Argument	"""%s: (%s) %s\\n"""		2223179	0					
ANR	2223232	PrimaryExpression	"""%s: (%s) %s\\n"""		2223179	0					
ANR	2223233	Argument	h -> name		2223179	1					
ANR	2223234	PtrMemberAccess	h -> name		2223179	0					
ANR	2223235	Identifier	h		2223179	0					
ANR	2223236	Identifier	name		2223179	1					
ANR	2223237	Argument	license		2223179	2					
ANR	2223238	Identifier	license		2223179	0					
ANR	2223239	Argument	h -> desc		2223179	3					
ANR	2223240	PtrMemberAccess	h -> desc		2223179	0					
ANR	2223241	Identifier	h		2223179	0					
ANR	2223242	Identifier	desc		2223179	1					
ANR	2223243	ReturnStatement	return true ;	151:1:3361:3372	2223179	14	True				
ANR	2223244	Identifier	true		2223179	0					
ANR	2223245	ReturnType	R_API bool		2223179	1					
ANR	2223246	Identifier	r_lang_list		2223179	2					
ANR	2223247	ParameterList	RLang * lang		2223179	3					
ANR	2223248	Parameter	RLang * lang	139:23:3106:3116	2223179	0	True				
ANR	2223249	ParameterType	RLang *		2223179	0					
ANR	2223250	Identifier	lang		2223179	1					
ANR	2223251	CFGEntryNode	ENTRY		2223179		True				
ANR	2223252	CFGExitNode	EXIT		2223179		True				
ANR	2223253	Symbol	license		2223179						
ANR	2223254	Symbol	h -> desc		2223179						
ANR	2223255	Symbol	* h		2223179						
ANR	2223256	Symbol	h		2223179						
ANR	2223257	Symbol	false		2223179						
ANR	2223258	Symbol	true		2223179						
ANR	2223259	Symbol	iter		2223179						
ANR	2223260	Symbol	h -> license		2223179						
ANR	2223261	Symbol	lang		2223179						
ANR	2223262	Symbol	h -> name		2223179						
ANR	2223263	Function	r_lang_get_by_extension	154:0:3377:3669							
ANR	2223264	FunctionDef	"r_lang_get_by_extension (RLang * lang , const char * ext)"		2223263	0					
ANR	2223265	CompoundStatement		154:74:3451:3669	2223263	0					
ANR	2223266	IdentifierDeclStatement	RListIter * iter ;	155:1:3454:3469	2223263	0	True				
ANR	2223267	IdentifierDecl	* iter		2223263	0					
ANR	2223268	IdentifierDeclType	RListIter *		2223263	0					
ANR	2223269	Identifier	iter		2223263	1					
ANR	2223270	IdentifierDeclStatement	RLangPlugin * h ;	156:1:3472:3486	2223263	1	True				
ANR	2223271	IdentifierDecl	* h		2223263	0					
ANR	2223272	IdentifierDeclType	RLangPlugin *		2223263	0					
ANR	2223273	Identifier	h		2223263	1					
ANR	2223274	IdentifierDeclStatement	"const char * p = r_str_lchr ( ext , '.' ) ;"	157:1:3489:3526	2223263	2	True				
ANR	2223275	IdentifierDecl	"* p = r_str_lchr ( ext , '.' )"		2223263	0					
ANR	2223276	IdentifierDeclType	const char *		2223263	0					
ANR	2223277	Identifier	p		2223263	1					
ANR	2223278	AssignmentExpression	"* p = r_str_lchr ( ext , '.' )"		2223263	2		=			
ANR	2223279	Identifier	p		2223263	0					
ANR	2223280	CallExpression	"r_str_lchr ( ext , '.' )"		2223263	1					
ANR	2223281	Callee	r_str_lchr		2223263	0					
ANR	2223282	Identifier	r_str_lchr		2223263	0					
ANR	2223283	ArgumentList	ext		2223263	1					
ANR	2223284	Argument	ext		2223263	0					
ANR	2223285	Identifier	ext		2223263	0					
ANR	2223286	Argument	'.'		2223263	1					
ANR	2223287	PrimaryExpression	'.'		2223263	0					
ANR	2223288	IfStatement	if ( p )		2223263	3					
ANR	2223289	Condition	p	158:5:3533:3533	2223263	0	True				
ANR	2223290	Identifier	p		2223263	0					
ANR	2223291	CompoundStatement		5:8:84:84	2223263	1					
ANR	2223292	ExpressionStatement	ext = p + 1	159:2:3540:3551	2223263	0	True				
ANR	2223293	AssignmentExpression	ext = p + 1		2223263	0		=			
ANR	2223294	Identifier	ext		2223263	0					
ANR	2223295	AdditiveExpression	p + 1		2223263	1		+			
ANR	2223296	Identifier	p		2223263	0					
ANR	2223297	PrimaryExpression	1		2223263	1					
ANR	2223298	Statement	r_list_foreach	161:1:3557:3570	2223263	4	True				
ANR	2223299	Statement	(	161:16:3572:3572	2223263	5	True				
ANR	2223300	Statement	lang	161:17:3573:3576	2223263	6	True				
ANR	2223301	Statement	->	161:21:3577:3578	2223263	7	True				
ANR	2223302	Statement	langs	161:23:3579:3583	2223263	8	True				
ANR	2223303	Statement	","	161:28:3584:3584	2223263	9	True				
ANR	2223304	Statement	iter	161:30:3586:3589	2223263	10	True				
ANR	2223305	Statement	","	161:34:3590:3590	2223263	11	True				
ANR	2223306	Statement	h	161:36:3592:3592	2223263	12	True				
ANR	2223307	Statement	)	161:37:3593:3593	2223263	13	True				
ANR	2223308	CompoundStatement		8:39:143:143	2223263	14					
ANR	2223309	IfStatement	"if ( ! r_str_casecmp ( h -> ext , ext ) )"		2223263	0					
ANR	2223310	Condition	"! r_str_casecmp ( h -> ext , ext )"	162:6:3603:3630	2223263	0	True				
ANR	2223311	UnaryOperationExpression	"! r_str_casecmp ( h -> ext , ext )"		2223263	0					
ANR	2223312	UnaryOperator	!		2223263	0					
ANR	2223313	CallExpression	"r_str_casecmp ( h -> ext , ext )"		2223263	1					
ANR	2223314	Callee	r_str_casecmp		2223263	0					
ANR	2223315	Identifier	r_str_casecmp		2223263	0					
ANR	2223316	ArgumentList	h -> ext		2223263	1					
ANR	2223317	Argument	h -> ext		2223263	0					
ANR	2223318	PtrMemberAccess	h -> ext		2223263	0					
ANR	2223319	Identifier	h		2223263	0					
ANR	2223320	Identifier	ext		2223263	1					
ANR	2223321	Argument	ext		2223263	1					
ANR	2223322	Identifier	ext		2223263	0					
ANR	2223323	CompoundStatement		9:36:181:181	2223263	1					
ANR	2223324	ReturnStatement	return h ;	163:3:3638:3646	2223263	0	True				
ANR	2223325	Identifier	h		2223263	0					
ANR	2223326	ReturnStatement	return NULL ;	166:1:3656:3667	2223263	15	True				
ANR	2223327	Identifier	NULL		2223263	0					
ANR	2223328	ReturnType	R_API RLangPlugin *		2223263	1					
ANR	2223329	Identifier	r_lang_get_by_extension		2223263	2					
ANR	2223330	ParameterList	"RLang * lang , const char * ext"		2223263	3					
ANR	2223331	Parameter	RLang * lang	154:44:3421:3431	2223263	0	True				
ANR	2223332	ParameterType	RLang *		2223263	0					
ANR	2223333	Identifier	lang		2223263	1					
ANR	2223334	Parameter	const char * ext	154:57:3434:3448	2223263	1	True				
ANR	2223335	ParameterType	const char *		2223263	0					
ANR	2223336	Identifier	ext		2223263	1					
ANR	2223337	CFGEntryNode	ENTRY		2223263		True				
ANR	2223338	CFGExitNode	EXIT		2223263		True				
ANR	2223339	Symbol	ext		2223263						
ANR	2223340	Symbol	p		2223263						
ANR	2223341	Symbol	* h		2223263						
ANR	2223342	Symbol	NULL		2223263						
ANR	2223343	Symbol	r_str_lchr		2223263						
ANR	2223344	Symbol	h		2223263						
ANR	2223345	Symbol	iter		2223263						
ANR	2223346	Symbol	lang		2223263						
ANR	2223347	Symbol	h -> ext		2223263						
ANR	2223348	Symbol	r_str_casecmp		2223263						
ANR	2223349	Function	r_lang_get_by_name	169:0:3672:3964							
ANR	2223350	FunctionDef	"r_lang_get_by_name (RLang * lang , const char * name)"		2223349	0					
ANR	2223351	CompoundStatement		169:70:3742:3964	2223349	0					
ANR	2223352	IdentifierDeclStatement	RListIter * iter ;	170:1:3745:3760	2223349	0	True				
ANR	2223353	IdentifierDecl	* iter		2223349	0					
ANR	2223354	IdentifierDeclType	RListIter *		2223349	0					
ANR	2223355	Identifier	iter		2223349	1					
ANR	2223356	IdentifierDeclStatement	RLangPlugin * h ;	171:1:3763:3777	2223349	1	True				
ANR	2223357	IdentifierDecl	* h		2223349	0					
ANR	2223358	IdentifierDeclType	RLangPlugin *		2223349	0					
ANR	2223359	Identifier	h		2223349	1					
ANR	2223360	Statement	r_list_foreach	172:1:3780:3793	2223349	2	True				
ANR	2223361	Statement	(	172:16:3795:3795	2223349	3	True				
ANR	2223362	Statement	lang	172:17:3796:3799	2223349	4	True				
ANR	2223363	Statement	->	172:21:3800:3801	2223349	5	True				
ANR	2223364	Statement	langs	172:23:3802:3806	2223349	6	True				
ANR	2223365	Statement	","	172:28:3807:3807	2223349	7	True				
ANR	2223366	Statement	iter	172:30:3809:3812	2223349	8	True				
ANR	2223367	Statement	","	172:34:3813:3813	2223349	9	True				
ANR	2223368	Statement	h	172:36:3815:3815	2223349	10	True				
ANR	2223369	Statement	)	172:37:3816:3816	2223349	11	True				
ANR	2223370	CompoundStatement		4:39:75:75	2223349	12					
ANR	2223371	IfStatement	"if ( ! r_str_casecmp ( h -> name , name ) )"		2223349	0					
ANR	2223372	Condition	"! r_str_casecmp ( h -> name , name )"	173:6:3826:3855	2223349	0	True				
ANR	2223373	UnaryOperationExpression	"! r_str_casecmp ( h -> name , name )"		2223349	0					
ANR	2223374	UnaryOperator	!		2223349	0					
ANR	2223375	CallExpression	"r_str_casecmp ( h -> name , name )"		2223349	1					
ANR	2223376	Callee	r_str_casecmp		2223349	0					
ANR	2223377	Identifier	r_str_casecmp		2223349	0					
ANR	2223378	ArgumentList	h -> name		2223349	1					
ANR	2223379	Argument	h -> name		2223349	0					
ANR	2223380	PtrMemberAccess	h -> name		2223349	0					
ANR	2223381	Identifier	h		2223349	0					
ANR	2223382	Identifier	name		2223349	1					
ANR	2223383	Argument	name		2223349	1					
ANR	2223384	Identifier	name		2223349	0					
ANR	2223385	CompoundStatement		5:38:115:115	2223349	1					
ANR	2223386	ReturnStatement	return h ;	174:3:3863:3871	2223349	0	True				
ANR	2223387	Identifier	h		2223349	0					
ANR	2223388	IfStatement	"if ( h -> alias && ! r_str_casecmp ( h -> alias , name ) )"		2223349	1					
ANR	2223389	Condition	"h -> alias && ! r_str_casecmp ( h -> alias , name )"	176:6:3883:3925	2223349	0	True				
ANR	2223390	AndExpression	"h -> alias && ! r_str_casecmp ( h -> alias , name )"		2223349	0		&&			
ANR	2223391	PtrMemberAccess	h -> alias		2223349	0					
ANR	2223392	Identifier	h		2223349	0					
ANR	2223393	Identifier	alias		2223349	1					
ANR	2223394	UnaryOperationExpression	"! r_str_casecmp ( h -> alias , name )"		2223349	1					
ANR	2223395	UnaryOperator	!		2223349	0					
ANR	2223396	CallExpression	"r_str_casecmp ( h -> alias , name )"		2223349	1					
ANR	2223397	Callee	r_str_casecmp		2223349	0					
ANR	2223398	Identifier	r_str_casecmp		2223349	0					
ANR	2223399	ArgumentList	h -> alias		2223349	1					
ANR	2223400	Argument	h -> alias		2223349	0					
ANR	2223401	PtrMemberAccess	h -> alias		2223349	0					
ANR	2223402	Identifier	h		2223349	0					
ANR	2223403	Identifier	alias		2223349	1					
ANR	2223404	Argument	name		2223349	1					
ANR	2223405	Identifier	name		2223349	0					
ANR	2223406	CompoundStatement		8:51:185:185	2223349	1					
ANR	2223407	ReturnStatement	return h ;	177:3:3933:3941	2223349	0	True				
ANR	2223408	Identifier	h		2223349	0					
ANR	2223409	ReturnStatement	return NULL ;	180:1:3951:3962	2223349	13	True				
ANR	2223410	Identifier	NULL		2223349	0					
ANR	2223411	ReturnType	R_API RLangPlugin *		2223349	1					
ANR	2223412	Identifier	r_lang_get_by_name		2223349	2					
ANR	2223413	ParameterList	"RLang * lang , const char * name"		2223349	3					
ANR	2223414	Parameter	RLang * lang	169:39:3711:3721	2223349	0	True				
ANR	2223415	ParameterType	RLang *		2223349	0					
ANR	2223416	Identifier	lang		2223349	1					
ANR	2223417	Parameter	const char * name	169:52:3724:3739	2223349	1	True				
ANR	2223418	ParameterType	const char *		2223349	0					
ANR	2223419	Identifier	name		2223349	1					
ANR	2223420	CFGEntryNode	ENTRY		2223349		True				
ANR	2223421	CFGExitNode	EXIT		2223349		True				
ANR	2223422	Symbol	* h		2223349						
ANR	2223423	Symbol	NULL		2223349						
ANR	2223424	Symbol	h -> alias		2223349						
ANR	2223425	Symbol	name		2223349						
ANR	2223426	Symbol	h		2223349						
ANR	2223427	Symbol	iter		2223349						
ANR	2223428	Symbol	lang		2223349						
ANR	2223429	Symbol	h -> name		2223349						
ANR	2223430	Symbol	r_str_casecmp		2223349						
ANR	2223431	Function	r_lang_use	183:0:3967:4133							
ANR	2223432	FunctionDef	"r_lang_use (RLang * lang , const char * name)"		2223431	0					
ANR	2223433	CompoundStatement		183:53:4020:4133	2223431	0					
ANR	2223434	IdentifierDeclStatement	"RLangPlugin * h = r_lang_get_by_name ( lang , name ) ;"	184:1:4023:4071	2223431	0	True				
ANR	2223435	IdentifierDecl	"* h = r_lang_get_by_name ( lang , name )"		2223431	0					
ANR	2223436	IdentifierDeclType	RLangPlugin *		2223431	0					
ANR	2223437	Identifier	h		2223431	1					
ANR	2223438	AssignmentExpression	"* h = r_lang_get_by_name ( lang , name )"		2223431	2		=			
ANR	2223439	Identifier	h		2223431	0					
ANR	2223440	CallExpression	"r_lang_get_by_name ( lang , name )"		2223431	1					
ANR	2223441	Callee	r_lang_get_by_name		2223431	0					
ANR	2223442	Identifier	r_lang_get_by_name		2223431	0					
ANR	2223443	ArgumentList	lang		2223431	1					
ANR	2223444	Argument	lang		2223431	0					
ANR	2223445	Identifier	lang		2223431	0					
ANR	2223446	Argument	name		2223431	1					
ANR	2223447	Identifier	name		2223431	0					
ANR	2223448	IfStatement	if ( h )		2223431	1					
ANR	2223449	Condition	h	185:5:4078:4078	2223431	0	True				
ANR	2223450	Identifier	h		2223431	0					
ANR	2223451	CompoundStatement		3:8:60:60	2223431	1					
ANR	2223452	ExpressionStatement	lang -> cur = h	186:2:4085:4098	2223431	0	True				
ANR	2223453	AssignmentExpression	lang -> cur = h		2223431	0		=			
ANR	2223454	PtrMemberAccess	lang -> cur		2223431	0					
ANR	2223455	Identifier	lang		2223431	0					
ANR	2223456	Identifier	cur		2223431	1					
ANR	2223457	Identifier	h		2223431	1					
ANR	2223458	ReturnStatement	return true ;	187:2:4102:4113	2223431	1	True				
ANR	2223459	Identifier	true		2223431	0					
ANR	2223460	ReturnStatement	return false ;	189:1:4119:4131	2223431	2	True				
ANR	2223461	Identifier	false		2223431	0					
ANR	2223462	ReturnType	R_API bool		2223431	1					
ANR	2223463	Identifier	r_lang_use		2223431	2					
ANR	2223464	ParameterList	"RLang * lang , const char * name"		2223431	3					
ANR	2223465	Parameter	RLang * lang	183:22:3989:3999	2223431	0	True				
ANR	2223466	ParameterType	RLang *		2223431	0					
ANR	2223467	Identifier	lang		2223431	1					
ANR	2223468	Parameter	const char * name	183:35:4002:4017	2223431	1	True				
ANR	2223469	ParameterType	const char *		2223431	0					
ANR	2223470	Identifier	name		2223431	1					
ANR	2223471	CFGEntryNode	ENTRY		2223431		True				
ANR	2223472	CFGExitNode	EXIT		2223431		True				
ANR	2223473	Symbol	* lang		2223431						
ANR	2223474	Symbol	name		2223431						
ANR	2223475	Symbol	h		2223431						
ANR	2223476	Symbol	lang -> cur		2223431						
ANR	2223477	Symbol	true		2223431						
ANR	2223478	Symbol	false		2223431						
ANR	2223479	Symbol	lang		2223431						
ANR	2223480	Symbol	r_lang_get_by_name		2223431						
ANR	2223481	Function	r_lang_set_argv	193:0:4189:4362							
ANR	2223482	FunctionDef	"r_lang_set_argv (RLang * lang , int argc , char * * argv)"		2223481	0					
ANR	2223483	CompoundStatement		193:63:4252:4362	2223481	0					
ANR	2223484	IfStatement	if ( lang -> cur && lang -> cur -> set_argv )		2223481	0					
ANR	2223485	Condition	lang -> cur && lang -> cur -> set_argv	194:5:4259:4290	2223481	0	True				
ANR	2223486	AndExpression	lang -> cur && lang -> cur -> set_argv		2223481	0		&&			
ANR	2223487	PtrMemberAccess	lang -> cur		2223481	0					
ANR	2223488	Identifier	lang		2223481	0					
ANR	2223489	Identifier	cur		2223481	1					
ANR	2223490	PtrMemberAccess	lang -> cur -> set_argv		2223481	1					
ANR	2223491	PtrMemberAccess	lang -> cur		2223481	0					
ANR	2223492	Identifier	lang		2223481	0					
ANR	2223493	Identifier	cur		2223481	1					
ANR	2223494	Identifier	set_argv		2223481	1					
ANR	2223495	CompoundStatement		2:39:40:40	2223481	1					
ANR	2223496	ReturnStatement	"return lang -> cur -> set_argv ( lang , argc , argv ) ;"	195:2:4297:4342	2223481	0	True				
ANR	2223497	CallExpression	"lang -> cur -> set_argv ( lang , argc , argv )"		2223481	0					
ANR	2223498	Callee	lang -> cur -> set_argv		2223481	0					
ANR	2223499	PtrMemberAccess	lang -> cur -> set_argv		2223481	0					
ANR	2223500	PtrMemberAccess	lang -> cur		2223481	0					
ANR	2223501	Identifier	lang		2223481	0					
ANR	2223502	Identifier	cur		2223481	1					
ANR	2223503	Identifier	set_argv		2223481	1					
ANR	2223504	ArgumentList	lang		2223481	1					
ANR	2223505	Argument	lang		2223481	0					
ANR	2223506	Identifier	lang		2223481	0					
ANR	2223507	Argument	argc		2223481	1					
ANR	2223508	Identifier	argc		2223481	0					
ANR	2223509	Argument	argv		2223481	2					
ANR	2223510	Identifier	argv		2223481	0					
ANR	2223511	ReturnStatement	return false ;	197:1:4348:4360	2223481	1	True				
ANR	2223512	Identifier	false		2223481	0					
ANR	2223513	ReturnType	R_API bool		2223481	1					
ANR	2223514	Identifier	r_lang_set_argv		2223481	2					
ANR	2223515	ParameterList	"RLang * lang , int argc , char * * argv"		2223481	3					
ANR	2223516	Parameter	RLang * lang	193:27:4216:4226	2223481	0	True				
ANR	2223517	ParameterType	RLang *		2223481	0					
ANR	2223518	Identifier	lang		2223481	1					
ANR	2223519	Parameter	int argc	193:40:4229:4236	2223481	1	True				
ANR	2223520	ParameterType	int		2223481	0					
ANR	2223521	Identifier	argc		2223481	1					
ANR	2223522	Parameter	char * * argv	193:50:4239:4249	2223481	2	True				
ANR	2223523	ParameterType	char * *		2223481	0					
ANR	2223524	Identifier	argv		2223481	1					
ANR	2223525	CFGEntryNode	ENTRY		2223481		True				
ANR	2223526	CFGExitNode	EXIT		2223481		True				
ANR	2223527	Symbol	argc		2223481						
ANR	2223528	Symbol	* lang -> cur		2223481						
ANR	2223529	Symbol	* * lang		2223481						
ANR	2223530	Symbol	* lang		2223481						
ANR	2223531	Symbol	lang -> cur		2223481						
ANR	2223532	Symbol	false		2223481						
ANR	2223533	Symbol	lang -> cur -> set_argv		2223481						
ANR	2223534	Symbol	lang		2223481						
ANR	2223535	Symbol	argv		2223481						
ANR	2223536	Function	r_lang_run	200:0:4365:4526							
ANR	2223537	FunctionDef	"r_lang_run (RLang * lang , const char * code , int len)"		2223536	0					
ANR	2223538	CompoundStatement		200:61:4426:4526	2223536	0					
ANR	2223539	IfStatement	if ( lang -> cur && lang -> cur -> run )		2223536	0					
ANR	2223540	Condition	lang -> cur && lang -> cur -> run	201:5:4434:4460	2223536	0	True				
ANR	2223541	AndExpression	lang -> cur && lang -> cur -> run		2223536	0		&&			
ANR	2223542	PtrMemberAccess	lang -> cur		2223536	0					
ANR	2223543	Identifier	lang		2223536	0					
ANR	2223544	Identifier	cur		2223536	1					
ANR	2223545	PtrMemberAccess	lang -> cur -> run		2223536	1					
ANR	2223546	PtrMemberAccess	lang -> cur		2223536	0					
ANR	2223547	Identifier	lang		2223536	0					
ANR	2223548	Identifier	cur		2223536	1					
ANR	2223549	Identifier	run		2223536	1					
ANR	2223550	CompoundStatement		2:34:36:36	2223536	1					
ANR	2223551	ReturnStatement	"return lang -> cur -> run ( lang , code , len ) ;"	202:2:4467:4506	2223536	0	True				
ANR	2223552	CallExpression	"lang -> cur -> run ( lang , code , len )"		2223536	0					
ANR	2223553	Callee	lang -> cur -> run		2223536	0					
ANR	2223554	PtrMemberAccess	lang -> cur -> run		2223536	0					
ANR	2223555	PtrMemberAccess	lang -> cur		2223536	0					
ANR	2223556	Identifier	lang		2223536	0					
ANR	2223557	Identifier	cur		2223536	1					
ANR	2223558	Identifier	run		2223536	1					
ANR	2223559	ArgumentList	lang		2223536	1					
ANR	2223560	Argument	lang		2223536	0					
ANR	2223561	Identifier	lang		2223536	0					
ANR	2223562	Argument	code		2223536	1					
ANR	2223563	Identifier	code		2223536	0					
ANR	2223564	Argument	len		2223536	2					
ANR	2223565	Identifier	len		2223536	0					
ANR	2223566	ReturnStatement	return false ;	204:1:4512:4524	2223536	1	True				
ANR	2223567	Identifier	false		2223536	0					
ANR	2223568	ReturnType	R_API int		2223536	1					
ANR	2223569	Identifier	r_lang_run		2223536	2					
ANR	2223570	ParameterList	"RLang * lang , const char * code , int len"		2223536	3					
ANR	2223571	Parameter	RLang * lang	200:21:4386:4396	2223536	0	True				
ANR	2223572	ParameterType	RLang *		2223536	0					
ANR	2223573	Identifier	lang		2223536	1					
ANR	2223574	Parameter	const char * code	200:34:4399:4414	2223536	1	True				
ANR	2223575	ParameterType	const char *		2223536	0					
ANR	2223576	Identifier	code		2223536	1					
ANR	2223577	Parameter	int len	200:52:4417:4423	2223536	2	True				
ANR	2223578	ParameterType	int		2223536	0					
ANR	2223579	Identifier	len		2223536	1					
ANR	2223580	CFGEntryNode	ENTRY		2223536		True				
ANR	2223581	CFGExitNode	EXIT		2223536		True				
ANR	2223582	Symbol	code		2223536						
ANR	2223583	Symbol	* * lang		2223536						
ANR	2223584	Symbol	* lang -> cur		2223536						
ANR	2223585	Symbol	lang -> cur -> run		2223536						
ANR	2223586	Symbol	len		2223536						
ANR	2223587	Symbol	* lang		2223536						
ANR	2223588	Symbol	lang -> cur		2223536						
ANR	2223589	Symbol	false		2223536						
ANR	2223590	Symbol	lang		2223536						
ANR	2223591	Function	r_lang_run_string	207:0:4529:4638							
ANR	2223592	FunctionDef	"r_lang_run_string (RLang * lang , const char * code)"		2223591	0					
ANR	2223593	CompoundStatement		207:59:4588:4638	2223591	0					
ANR	2223594	ReturnStatement	"return r_lang_run ( lang , code , strlen ( code ) ) ;"	208:1:4591:4636	2223591	0	True				
ANR	2223595	CallExpression	"r_lang_run ( lang , code , strlen ( code ) )"		2223591	0					
ANR	2223596	Callee	r_lang_run		2223591	0					
ANR	2223597	Identifier	r_lang_run		2223591	0					
ANR	2223598	ArgumentList	lang		2223591	1					
ANR	2223599	Argument	lang		2223591	0					
ANR	2223600	Identifier	lang		2223591	0					
ANR	2223601	Argument	code		2223591	1					
ANR	2223602	Identifier	code		2223591	0					
ANR	2223603	Argument	strlen ( code )		2223591	2					
ANR	2223604	CallExpression	strlen ( code )		2223591	0					
ANR	2223605	Callee	strlen		2223591	0					
ANR	2223606	Identifier	strlen		2223591	0					
ANR	2223607	ArgumentList	code		2223591	1					
ANR	2223608	Argument	code		2223591	0					
ANR	2223609	Identifier	code		2223591	0					
ANR	2223610	ReturnType	R_API int		2223591	1					
ANR	2223611	Identifier	r_lang_run_string		2223591	2					
ANR	2223612	ParameterList	"RLang * lang , const char * code"		2223591	3					
ANR	2223613	Parameter	RLang * lang	207:28:4557:4567	2223591	0	True				
ANR	2223614	ParameterType	RLang *		2223591	0					
ANR	2223615	Identifier	lang		2223591	1					
ANR	2223616	Parameter	const char * code	207:41:4570:4585	2223591	1	True				
ANR	2223617	ParameterType	const char *		2223591	0					
ANR	2223618	Identifier	code		2223591	1					
ANR	2223619	CFGEntryNode	ENTRY		2223591		True				
ANR	2223620	CFGExitNode	EXIT		2223591		True				
ANR	2223621	Symbol	strlen		2223591						
ANR	2223622	Symbol	code		2223591						
ANR	2223623	Symbol	r_lang_run		2223591						
ANR	2223624	Symbol	lang		2223591						
ANR	2223625	Function	r_lang_run_file	211:0:4641:4980							
ANR	2223626	FunctionDef	"r_lang_run_file (RLang * lang , const char * file)"		2223625	0					
ANR	2223627	CompoundStatement		211:57:4698:4980	2223625	0					
ANR	2223628	IdentifierDeclStatement	"int len , ret = false ;"	212:1:4701:4721	2223625	0	True				
ANR	2223629	IdentifierDecl	len		2223625	0					
ANR	2223630	IdentifierDeclType	int		2223625	0					
ANR	2223631	Identifier	len		2223625	1					
ANR	2223632	IdentifierDecl	ret = false		2223625	1					
ANR	2223633	IdentifierDeclType	int		2223625	0					
ANR	2223634	Identifier	ret		2223625	1					
ANR	2223635	AssignmentExpression	ret = false		2223625	2		=			
ANR	2223636	Identifier	false		2223625	0					
ANR	2223637	Identifier	false		2223625	1					
ANR	2223638	IfStatement	if ( lang -> cur )		2223625	1					
ANR	2223639	Condition	lang -> cur	213:5:4728:4736	2223625	0	True				
ANR	2223640	PtrMemberAccess	lang -> cur		2223625	0					
ANR	2223641	Identifier	lang		2223625	0					
ANR	2223642	Identifier	cur		2223625	1					
ANR	2223643	CompoundStatement		3:16:40:40	2223625	1					
ANR	2223644	IfStatement	if ( ! lang -> cur -> run_file )		2223625	0					
ANR	2223645	Condition	! lang -> cur -> run_file	214:6:4747:4766	2223625	0	True				
ANR	2223646	UnaryOperationExpression	! lang -> cur -> run_file		2223625	0					
ANR	2223647	UnaryOperator	!		2223625	0					
ANR	2223648	PtrMemberAccess	lang -> cur -> run_file		2223625	1					
ANR	2223649	PtrMemberAccess	lang -> cur		2223625	0					
ANR	2223650	Identifier	lang		2223625	0					
ANR	2223651	Identifier	cur		2223625	1					
ANR	2223652	Identifier	run_file		2223625	1					
ANR	2223653	CompoundStatement		4:28:70:70	2223625	1					
ANR	2223654	IfStatement	if ( lang -> cur -> run )		2223625	0					
ANR	2223655	Condition	lang -> cur -> run	215:7:4778:4791	2223625	0	True				
ANR	2223656	PtrMemberAccess	lang -> cur -> run		2223625	0					
ANR	2223657	PtrMemberAccess	lang -> cur		2223625	0					
ANR	2223658	Identifier	lang		2223625	0					
ANR	2223659	Identifier	cur		2223625	1					
ANR	2223660	Identifier	run		2223625	1					
ANR	2223661	CompoundStatement		6:4:101:139	2223625	1					
ANR	2223662	IdentifierDeclStatement	"char * code = r_file_slurp ( file , & len ) ;"	216:4:4800:4838	2223625	0	True				
ANR	2223663	IdentifierDecl	"* code = r_file_slurp ( file , & len )"		2223625	0					
ANR	2223664	IdentifierDeclType	char *		2223625	0					
ANR	2223665	Identifier	code		2223625	1					
ANR	2223666	AssignmentExpression	"* code = r_file_slurp ( file , & len )"		2223625	2		=			
ANR	2223667	Identifier	code		2223625	0					
ANR	2223668	CallExpression	"r_file_slurp ( file , & len )"		2223625	1					
ANR	2223669	Callee	r_file_slurp		2223625	0					
ANR	2223670	Identifier	r_file_slurp		2223625	0					
ANR	2223671	ArgumentList	file		2223625	1					
ANR	2223672	Argument	file		2223625	0					
ANR	2223673	Identifier	file		2223625	0					
ANR	2223674	Argument	& len		2223625	1					
ANR	2223675	UnaryOperationExpression	& len		2223625	0					
ANR	2223676	UnaryOperator	&		2223625	0					
ANR	2223677	Identifier	len		2223625	1					
ANR	2223678	ExpressionStatement	"ret = lang -> cur -> run ( lang , code , len )"	217:4:4844:4882	2223625	1	True				
ANR	2223679	AssignmentExpression	"ret = lang -> cur -> run ( lang , code , len )"		2223625	0		=			
ANR	2223680	Identifier	ret		2223625	0					
ANR	2223681	CallExpression	"lang -> cur -> run ( lang , code , len )"		2223625	1					
ANR	2223682	Callee	lang -> cur -> run		2223625	0					
ANR	2223683	PtrMemberAccess	lang -> cur -> run		2223625	0					
ANR	2223684	PtrMemberAccess	lang -> cur		2223625	0					
ANR	2223685	Identifier	lang		2223625	0					
ANR	2223686	Identifier	cur		2223625	1					
ANR	2223687	Identifier	run		2223625	1					
ANR	2223688	ArgumentList	lang		2223625	1					
ANR	2223689	Argument	lang		2223625	0					
ANR	2223690	Identifier	lang		2223625	0					
ANR	2223691	Argument	code		2223625	1					
ANR	2223692	Identifier	code		2223625	0					
ANR	2223693	Argument	len		2223625	2					
ANR	2223694	Identifier	len		2223625	0					
ANR	2223695	ExpressionStatement	free ( code )	218:4:4888:4899	2223625	2	True				
ANR	2223696	CallExpression	free ( code )		2223625	0					
ANR	2223697	Callee	free		2223625	0					
ANR	2223698	Identifier	free		2223625	0					
ANR	2223699	ArgumentList	code		2223625	1					
ANR	2223700	Argument	code		2223625	0					
ANR	2223701	Identifier	code		2223625	0					
ANR	2223702	ElseStatement	else		2223625	0					
ANR	2223703	CompoundStatement		10:9:216:216	2223625	0					
ANR	2223704	ExpressionStatement	"ret = lang -> cur -> run_file ( lang , file )"	221:3:4920:4958	2223625	0	True				
ANR	2223705	AssignmentExpression	"ret = lang -> cur -> run_file ( lang , file )"		2223625	0		=			
ANR	2223706	Identifier	ret		2223625	0					
ANR	2223707	CallExpression	"lang -> cur -> run_file ( lang , file )"		2223625	1					
ANR	2223708	Callee	lang -> cur -> run_file		2223625	0					
ANR	2223709	PtrMemberAccess	lang -> cur -> run_file		2223625	0					
ANR	2223710	PtrMemberAccess	lang -> cur		2223625	0					
ANR	2223711	Identifier	lang		2223625	0					
ANR	2223712	Identifier	cur		2223625	1					
ANR	2223713	Identifier	run_file		2223625	1					
ANR	2223714	ArgumentList	lang		2223625	1					
ANR	2223715	Argument	lang		2223625	0					
ANR	2223716	Identifier	lang		2223625	0					
ANR	2223717	Argument	file		2223625	1					
ANR	2223718	Identifier	file		2223625	0					
ANR	2223719	ReturnStatement	return ret ;	224:1:4968:4978	2223625	2	True				
ANR	2223720	Identifier	ret		2223625	0					
ANR	2223721	ReturnType	R_API int		2223625	1					
ANR	2223722	Identifier	r_lang_run_file		2223625	2					
ANR	2223723	ParameterList	"RLang * lang , const char * file"		2223625	3					
ANR	2223724	Parameter	RLang * lang	211:26:4667:4677	2223625	0	True				
ANR	2223725	ParameterType	RLang *		2223625	0					
ANR	2223726	Identifier	lang		2223625	1					
ANR	2223727	Parameter	const char * file	211:39:4680:4695	2223625	1	True				
ANR	2223728	ParameterType	const char *		2223625	0					
ANR	2223729	Identifier	file		2223625	1					
ANR	2223730	CFGEntryNode	ENTRY		2223625		True				
ANR	2223731	CFGExitNode	EXIT		2223625		True				
ANR	2223732	Symbol	ret		2223625						
ANR	2223733	Symbol	r_file_slurp		2223625						
ANR	2223734	Symbol	* lang -> cur		2223625						
ANR	2223735	Symbol	* * lang		2223625						
ANR	2223736	Symbol	lang -> cur -> run		2223625						
ANR	2223737	Symbol	code		2223625						
ANR	2223738	Symbol	* lang		2223625						
ANR	2223739	Symbol	false		2223625						
ANR	2223740	Symbol	lang -> cur -> run_file		2223625						
ANR	2223741	Symbol	file		2223625						
ANR	2223742	Symbol	len		2223625						
ANR	2223743	Symbol	lang -> cur		2223625						
ANR	2223744	Symbol	lang		2223625						
ANR	2223745	Symbol	& len		2223625						
ANR	2223746	Function	r_lang_prompt	228:0:5067:7271							
ANR	2223747	FunctionDef	r_lang_prompt (RLang * lang)		2223746	0					
ANR	2223748	CompoundStatement		228:37:5104:7271	2223746	0					
ANR	2223749	IdentifierDeclStatement	char buf [ 1024 ] ;	229:1:5107:5121	2223746	0	True				
ANR	2223750	IdentifierDecl	buf [ 1024 ]		2223746	0					
ANR	2223751	IdentifierDeclType	char [ 1024 ]		2223746	0					
ANR	2223752	Identifier	buf		2223746	1					
ANR	2223753	PrimaryExpression	1024		2223746	2					
ANR	2223754	IdentifierDeclStatement	const char * p ;	230:1:5124:5137	2223746	1	True				
ANR	2223755	IdentifierDecl	* p		2223746	0					
ANR	2223756	IdentifierDeclType	const char *		2223746	0					
ANR	2223757	Identifier	p		2223746	1					
ANR	2223758	IfStatement	if ( ! lang || ! lang -> cur )		2223746	2					
ANR	2223759	Condition	! lang || ! lang -> cur	232:5:5145:5163	2223746	0	True				
ANR	2223760	OrExpression	! lang || ! lang -> cur		2223746	0		||			
ANR	2223761	UnaryOperationExpression	! lang		2223746	0					
ANR	2223762	UnaryOperator	!		2223746	0					
ANR	2223763	Identifier	lang		2223746	1					
ANR	2223764	UnaryOperationExpression	! lang -> cur		2223746	1					
ANR	2223765	UnaryOperator	!		2223746	0					
ANR	2223766	PtrMemberAccess	lang -> cur		2223746	1					
ANR	2223767	Identifier	lang		2223746	0					
ANR	2223768	Identifier	cur		2223746	1					
ANR	2223769	CompoundStatement		5:26:61:61	2223746	1					
ANR	2223770	ReturnStatement	return false ;	233:2:5170:5182	2223746	0	True				
ANR	2223771	Identifier	false		2223746	0					
ANR	2223772	IfStatement	if ( lang -> cur -> prompt )		2223746	3					
ANR	2223773	Condition	lang -> cur -> prompt	236:5:5193:5209	2223746	0	True				
ANR	2223774	PtrMemberAccess	lang -> cur -> prompt		2223746	0					
ANR	2223775	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2223776	Identifier	lang		2223746	0					
ANR	2223777	Identifier	cur		2223746	1					
ANR	2223778	Identifier	prompt		2223746	1					
ANR	2223779	CompoundStatement		9:24:107:107	2223746	1					
ANR	2223780	IfStatement	if ( lang -> cur -> prompt ( lang ) )		2223746	0					
ANR	2223781	Condition	lang -> cur -> prompt ( lang )	237:6:5220:5243	2223746	0	True				
ANR	2223782	CallExpression	lang -> cur -> prompt ( lang )		2223746	0					
ANR	2223783	Callee	lang -> cur -> prompt		2223746	0					
ANR	2223784	PtrMemberAccess	lang -> cur -> prompt		2223746	0					
ANR	2223785	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2223786	Identifier	lang		2223746	0					
ANR	2223787	Identifier	cur		2223746	1					
ANR	2223788	Identifier	prompt		2223746	1					
ANR	2223789	ArgumentList	lang		2223746	1					
ANR	2223790	Argument	lang		2223746	0					
ANR	2223791	Identifier	lang		2223746	0					
ANR	2223792	CompoundStatement		10:32:141:141	2223746	1					
ANR	2223793	ReturnStatement	return true ;	238:3:5251:5262	2223746	0	True				
ANR	2223794	Identifier	true		2223746	0					
ANR	2223795	IdentifierDeclStatement	RLine * line = r_line_singleton ( ) ;	242:1:5289:5322	2223746	4	True				
ANR	2223796	IdentifierDecl	* line = r_line_singleton ( )		2223746	0					
ANR	2223797	IdentifierDeclType	RLine *		2223746	0					
ANR	2223798	Identifier	line		2223746	1					
ANR	2223799	AssignmentExpression	* line = r_line_singleton ( )		2223746	2		=			
ANR	2223800	Identifier	line		2223746	0					
ANR	2223801	CallExpression	r_line_singleton ( )		2223746	1					
ANR	2223802	Callee	r_line_singleton		2223746	0					
ANR	2223803	Identifier	r_line_singleton		2223746	0					
ANR	2223804	ArgumentList			2223746	1					
ANR	2223805	IdentifierDeclStatement	RLineHistory hist = line -> history ;	243:1:5325:5358	2223746	5	True				
ANR	2223806	IdentifierDecl	hist = line -> history		2223746	0					
ANR	2223807	IdentifierDeclType	RLineHistory		2223746	0					
ANR	2223808	Identifier	hist		2223746	1					
ANR	2223809	AssignmentExpression	hist = line -> history		2223746	2		=			
ANR	2223810	Identifier	hist		2223746	0					
ANR	2223811	PtrMemberAccess	line -> history		2223746	1					
ANR	2223812	Identifier	line		2223746	0					
ANR	2223813	Identifier	history		2223746	1					
ANR	2223814	IdentifierDeclStatement	RLineHistory histnull = { 0 } ;	244:1:5361:5388	2223746	6	True				
ANR	2223815	IdentifierDecl	histnull = { 0 }		2223746	0					
ANR	2223816	IdentifierDeclType	RLineHistory		2223746	0					
ANR	2223817	Identifier	histnull		2223746	1					
ANR	2223818	AssignmentExpression	histnull = { 0 }		2223746	2		=			
ANR	2223819	Identifier	histnull		2223746	0					
ANR	2223820	InitializerList	0		2223746	1					
ANR	2223821	PrimaryExpression	0		2223746	0					
ANR	2223822	IdentifierDeclStatement	RLineCompletion oc = line -> completion ;	245:1:5391:5428	2223746	7	True				
ANR	2223823	IdentifierDecl	oc = line -> completion		2223746	0					
ANR	2223824	IdentifierDeclType	RLineCompletion		2223746	0					
ANR	2223825	Identifier	oc		2223746	1					
ANR	2223826	AssignmentExpression	oc = line -> completion		2223746	2		=			
ANR	2223827	Identifier	oc		2223746	0					
ANR	2223828	PtrMemberAccess	line -> completion		2223746	1					
ANR	2223829	Identifier	line		2223746	0					
ANR	2223830	Identifier	completion		2223746	1					
ANR	2223831	IdentifierDeclStatement	RLineCompletion ocnull = { 0 } ;	246:1:5431:5459	2223746	8	True				
ANR	2223832	IdentifierDecl	ocnull = { 0 }		2223746	0					
ANR	2223833	IdentifierDeclType	RLineCompletion		2223746	0					
ANR	2223834	Identifier	ocnull		2223746	1					
ANR	2223835	AssignmentExpression	ocnull = { 0 }		2223746	2		=			
ANR	2223836	Identifier	ocnull		2223746	0					
ANR	2223837	InitializerList	0		2223746	1					
ANR	2223838	PrimaryExpression	0		2223746	0					
ANR	2223839	IdentifierDeclStatement	char * prompt = strdup ( line -> prompt ) ;	247:1:5462:5498	2223746	9	True				
ANR	2223840	IdentifierDecl	* prompt = strdup ( line -> prompt )		2223746	0					
ANR	2223841	IdentifierDeclType	char *		2223746	0					
ANR	2223842	Identifier	prompt		2223746	1					
ANR	2223843	AssignmentExpression	* prompt = strdup ( line -> prompt )		2223746	2		=			
ANR	2223844	Identifier	prompt		2223746	0					
ANR	2223845	CallExpression	strdup ( line -> prompt )		2223746	1					
ANR	2223846	Callee	strdup		2223746	0					
ANR	2223847	Identifier	strdup		2223746	0					
ANR	2223848	ArgumentList	line -> prompt		2223746	1					
ANR	2223849	Argument	line -> prompt		2223746	0					
ANR	2223850	PtrMemberAccess	line -> prompt		2223746	0					
ANR	2223851	Identifier	line		2223746	0					
ANR	2223852	Identifier	prompt		2223746	1					
ANR	2223853	ExpressionStatement	line -> completion = ocnull	248:1:5503:5528	2223746	10	True				
ANR	2223854	AssignmentExpression	line -> completion = ocnull		2223746	0		=			
ANR	2223855	PtrMemberAccess	line -> completion		2223746	0					
ANR	2223856	Identifier	line		2223746	0					
ANR	2223857	Identifier	completion		2223746	1					
ANR	2223858	Identifier	ocnull		2223746	1					
ANR	2223859	ExpressionStatement	line -> history = histnull	249:1:5531:5555	2223746	11	True				
ANR	2223860	AssignmentExpression	line -> history = histnull		2223746	0		=			
ANR	2223861	PtrMemberAccess	line -> history		2223746	0					
ANR	2223862	Identifier	line		2223746	0					
ANR	2223863	Identifier	history		2223746	1					
ANR	2223864	Identifier	histnull		2223746	1					
ANR	2223865	ForStatement	for ( ; ; )		2223746	12					
ANR	2223866	CompoundStatement		25:10:474:474	2223746	0					
ANR	2223867	ExpressionStatement	"snprintf ( buf , sizeof ( buf ) - 1 , ""%s> "" , lang -> cur -> name )"	253:2:5583:5638	2223746	0	True				
ANR	2223868	CallExpression	"snprintf ( buf , sizeof ( buf ) - 1 , ""%s> "" , lang -> cur -> name )"		2223746	0					
ANR	2223869	Callee	snprintf		2223746	0					
ANR	2223870	Identifier	snprintf		2223746	0					
ANR	2223871	ArgumentList	buf		2223746	1					
ANR	2223872	Argument	buf		2223746	0					
ANR	2223873	Identifier	buf		2223746	0					
ANR	2223874	Argument	sizeof ( buf ) - 1		2223746	1					
ANR	2223875	AdditiveExpression	sizeof ( buf ) - 1		2223746	0		-			
ANR	2223876	SizeofExpression	sizeof ( buf )		2223746	0					
ANR	2223877	Sizeof	sizeof		2223746	0					
ANR	2223878	SizeofOperand	buf		2223746	1					
ANR	2223879	PrimaryExpression	1		2223746	1					
ANR	2223880	Argument	"""%s> """		2223746	2					
ANR	2223881	PrimaryExpression	"""%s> """		2223746	0					
ANR	2223882	Argument	lang -> cur -> name		2223746	3					
ANR	2223883	PtrMemberAccess	lang -> cur -> name		2223746	0					
ANR	2223884	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2223885	Identifier	lang		2223746	0					
ANR	2223886	Identifier	cur		2223746	1					
ANR	2223887	Identifier	name		2223746	1					
ANR	2223888	ExpressionStatement	r_line_set_prompt ( buf )	254:2:5642:5665	2223746	1	True				
ANR	2223889	CallExpression	r_line_set_prompt ( buf )		2223746	0					
ANR	2223890	Callee	r_line_set_prompt		2223746	0					
ANR	2223891	Identifier	r_line_set_prompt		2223746	0					
ANR	2223892	ArgumentList	buf		2223746	1					
ANR	2223893	Argument	buf		2223746	0					
ANR	2223894	Identifier	buf		2223746	0					
ANR	2223895	ExpressionStatement	"printf ( ""%s> "" , lang -> cur -> name )"	256:2:5675:5707	2223746	2	True				
ANR	2223896	CallExpression	"printf ( ""%s> "" , lang -> cur -> name )"		2223746	0					
ANR	2223897	Callee	printf		2223746	0					
ANR	2223898	Identifier	printf		2223746	0					
ANR	2223899	ArgumentList	"""%s> """		2223746	1					
ANR	2223900	Argument	"""%s> """		2223746	0					
ANR	2223901	PrimaryExpression	"""%s> """		2223746	0					
ANR	2223902	Argument	lang -> cur -> name		2223746	1					
ANR	2223903	PtrMemberAccess	lang -> cur -> name		2223746	0					
ANR	2223904	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2223905	Identifier	lang		2223746	0					
ANR	2223906	Identifier	cur		2223746	1					
ANR	2223907	Identifier	name		2223746	1					
ANR	2223908	ExpressionStatement	fflush ( stdout )	257:2:5711:5726	2223746	3	True				
ANR	2223909	CallExpression	fflush ( stdout )		2223746	0					
ANR	2223910	Callee	fflush		2223746	0					
ANR	2223911	Identifier	fflush		2223746	0					
ANR	2223912	ArgumentList	stdout		2223746	1					
ANR	2223913	Argument	stdout		2223746	0					
ANR	2223914	Identifier	stdout		2223746	0					
ANR	2223915	ExpressionStatement	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"	258:2:5730:5764	2223746	4	True				
ANR	2223916	CallExpression	"fgets ( buf , sizeof ( buf ) - 1 , stdin )"		2223746	0					
ANR	2223917	Callee	fgets		2223746	0					
ANR	2223918	Identifier	fgets		2223746	0					
ANR	2223919	ArgumentList	buf		2223746	1					
ANR	2223920	Argument	buf		2223746	0					
ANR	2223921	Identifier	buf		2223746	0					
ANR	2223922	Argument	sizeof ( buf ) - 1		2223746	1					
ANR	2223923	AdditiveExpression	sizeof ( buf ) - 1		2223746	0		-			
ANR	2223924	SizeofExpression	sizeof ( buf )		2223746	0					
ANR	2223925	Sizeof	sizeof		2223746	0					
ANR	2223926	SizeofOperand	buf		2223746	1					
ANR	2223927	PrimaryExpression	1		2223746	1					
ANR	2223928	Argument	stdin		2223746	2					
ANR	2223929	Identifier	stdin		2223746	0					
ANR	2223930	IfStatement	if ( feof ( stdin ) )		2223746	5					
ANR	2223931	Condition	feof ( stdin )	259:6:5772:5783	2223746	0	True				
ANR	2223932	CallExpression	feof ( stdin )		2223746	0					
ANR	2223933	Callee	feof		2223746	0					
ANR	2223934	Identifier	feof		2223746	0					
ANR	2223935	ArgumentList	stdin		2223746	1					
ANR	2223936	Argument	stdin		2223746	0					
ANR	2223937	Identifier	stdin		2223746	0					
ANR	2223938	BreakStatement	break ;	259:20:5786:5791	2223746	1	True				
ANR	2223939	IfStatement	if ( * buf )		2223746	6					
ANR	2223940	Condition	* buf	260:6:5799:5802	2223746	0	True				
ANR	2223941	UnaryOperationExpression	* buf		2223746	0					
ANR	2223942	UnaryOperator	*		2223746	0					
ANR	2223943	Identifier	buf		2223746	1					
ANR	2223944	ExpressionStatement	buf [ strlen ( buf ) - 1 ] = '\\0'	260:12:5805:5829	2223746	1	True				
ANR	2223945	AssignmentExpression	buf [ strlen ( buf ) - 1 ] = '\\0'		2223746	0		=			
ANR	2223946	ArrayIndexing	buf [ strlen ( buf ) - 1 ]		2223746	0					
ANR	2223947	Identifier	buf		2223746	0					
ANR	2223948	AdditiveExpression	strlen ( buf ) - 1		2223746	1		-			
ANR	2223949	CallExpression	strlen ( buf )		2223746	0					
ANR	2223950	Callee	strlen		2223746	0					
ANR	2223951	Identifier	strlen		2223746	0					
ANR	2223952	ArgumentList	buf		2223746	1					
ANR	2223953	Argument	buf		2223746	0					
ANR	2223954	Identifier	buf		2223746	0					
ANR	2223955	PrimaryExpression	1		2223746	1					
ANR	2223956	PrimaryExpression	'\\0'		2223746	1					
ANR	2223957	ExpressionStatement	p = r_line_readline ( )	262:2:5840:5862	2223746	7	True				
ANR	2223958	AssignmentExpression	p = r_line_readline ( )		2223746	0		=			
ANR	2223959	Identifier	p		2223746	0					
ANR	2223960	CallExpression	r_line_readline ( )		2223746	1					
ANR	2223961	Callee	r_line_readline		2223746	0					
ANR	2223962	Identifier	r_line_readline		2223746	0					
ANR	2223963	ArgumentList			2223746	1					
ANR	2223964	IfStatement	if ( ! p )		2223746	8					
ANR	2223965	Condition	! p	263:6:5870:5871	2223746	0	True				
ANR	2223966	UnaryOperationExpression	! p		2223746	0					
ANR	2223967	UnaryOperator	!		2223746	0					
ANR	2223968	Identifier	p		2223746	1					
ANR	2223969	CompoundStatement		36:10:769:769	2223746	1					
ANR	2223970	BreakStatement	break ;	264:3:5879:5884	2223746	0	True				
ANR	2223971	ExpressionStatement	r_line_hist_add ( p )	266:2:5892:5911	2223746	9	True				
ANR	2223972	CallExpression	r_line_hist_add ( p )		2223746	0					
ANR	2223973	Callee	r_line_hist_add		2223746	0					
ANR	2223974	Identifier	r_line_hist_add		2223746	0					
ANR	2223975	ArgumentList	p		2223746	1					
ANR	2223976	Argument	p		2223746	0					
ANR	2223977	Identifier	p		2223746	0					
ANR	2223978	ExpressionStatement	"strncpy ( buf , p , sizeof ( buf ) - 1 )"	267:2:5915:5949	2223746	10	True				
ANR	2223979	CallExpression	"strncpy ( buf , p , sizeof ( buf ) - 1 )"		2223746	0					
ANR	2223980	Callee	strncpy		2223746	0					
ANR	2223981	Identifier	strncpy		2223746	0					
ANR	2223982	ArgumentList	buf		2223746	1					
ANR	2223983	Argument	buf		2223746	0					
ANR	2223984	Identifier	buf		2223746	0					
ANR	2223985	Argument	p		2223746	1					
ANR	2223986	Identifier	p		2223746	0					
ANR	2223987	Argument	sizeof ( buf ) - 1		2223746	2					
ANR	2223988	AdditiveExpression	sizeof ( buf ) - 1		2223746	0		-			
ANR	2223989	SizeofExpression	sizeof ( buf )		2223746	0					
ANR	2223990	Sizeof	sizeof		2223746	0					
ANR	2223991	SizeofOperand	buf		2223746	1					
ANR	2223992	PrimaryExpression	1		2223746	1					
ANR	2223993	IfStatement	if ( * buf == '!' )		2223746	11					
ANR	2223994	Condition	* buf == '!'	268:6:5957:5967	2223746	0	True				
ANR	2223995	EqualityExpression	* buf == '!'		2223746	0		==			
ANR	2223996	UnaryOperationExpression	* buf		2223746	0					
ANR	2223997	UnaryOperator	*		2223746	0					
ANR	2223998	Identifier	buf		2223746	1					
ANR	2223999	PrimaryExpression	'!'		2223746	1					
ANR	2224000	CompoundStatement		41:19:865:865	2223746	1					
ANR	2224001	IfStatement	if ( buf [ 1 ] )		2223746	0					
ANR	2224002	Condition	buf [ 1 ]	269:7:5979:5984	2223746	0	True				
ANR	2224003	ArrayIndexing	buf [ 1 ]		2223746	0					
ANR	2224004	Identifier	buf		2223746	0					
ANR	2224005	PrimaryExpression	1		2223746	1					
ANR	2224006	CompoundStatement		42:15:882:882	2223746	1					
ANR	2224007	ExpressionStatement	"r_sandbox_system ( buf + 1 , 1 )"	270:4:5993:6022	2223746	0	True				
ANR	2224008	CallExpression	"r_sandbox_system ( buf + 1 , 1 )"		2223746	0					
ANR	2224009	Callee	r_sandbox_system		2223746	0					
ANR	2224010	Identifier	r_sandbox_system		2223746	0					
ANR	2224011	ArgumentList	buf + 1		2223746	1					
ANR	2224012	Argument	buf + 1		2223746	0					
ANR	2224013	AdditiveExpression	buf + 1		2223746	0		+			
ANR	2224014	Identifier	buf		2223746	0					
ANR	2224015	PrimaryExpression	1		2223746	1					
ANR	2224016	Argument	1		2223746	1					
ANR	2224017	PrimaryExpression	1		2223746	0					
ANR	2224018	ElseStatement	else		2223746	0					
ANR	2224019	CompoundStatement		45:4:935:958	2223746	0					
ANR	2224020	IdentifierDeclStatement	"char * foo , * code = NULL ;"	272:4:6040:6063	2223746	0	True				
ANR	2224021	IdentifierDecl	* foo		2223746	0					
ANR	2224022	IdentifierDeclType	char *		2223746	0					
ANR	2224023	Identifier	foo		2223746	1					
ANR	2224024	IdentifierDecl	* code = NULL		2223746	1					
ANR	2224025	IdentifierDeclType	char *		2223746	0					
ANR	2224026	Identifier	code		2223746	1					
ANR	2224027	AssignmentExpression	* code = NULL		2223746	2		=			
ANR	2224028	Identifier	NULL		2223746	0					
ANR	2224029	Identifier	NULL		2223746	1					
ANR	2224030	DoStatement	do		2223746	1					
ANR	2224031	CompoundStatement		46:7:967:967	2223746	0					
ANR	2224032	ExpressionStatement	"foo = r_cons_editor ( NULL , code )"	274:5:6079:6111	2223746	0	True				
ANR	2224033	AssignmentExpression	"foo = r_cons_editor ( NULL , code )"		2223746	0		=			
ANR	2224034	Identifier	foo		2223746	0					
ANR	2224035	CallExpression	"r_cons_editor ( NULL , code )"		2223746	1					
ANR	2224036	Callee	r_cons_editor		2223746	0					
ANR	2224037	Identifier	r_cons_editor		2223746	0					
ANR	2224038	ArgumentList	NULL		2223746	1					
ANR	2224039	Argument	NULL		2223746	0					
ANR	2224040	Identifier	NULL		2223746	0					
ANR	2224041	Argument	code		2223746	1					
ANR	2224042	Identifier	code		2223746	0					
ANR	2224043	ExpressionStatement	"r_lang_run ( lang , foo , 0 )"	275:5:6118:6143	2223746	1	True				
ANR	2224044	CallExpression	"r_lang_run ( lang , foo , 0 )"		2223746	0					
ANR	2224045	Callee	r_lang_run		2223746	0					
ANR	2224046	Identifier	r_lang_run		2223746	0					
ANR	2224047	ArgumentList	lang		2223746	1					
ANR	2224048	Argument	lang		2223746	0					
ANR	2224049	Identifier	lang		2223746	0					
ANR	2224050	Argument	foo		2223746	1					
ANR	2224051	Identifier	foo		2223746	0					
ANR	2224052	Argument	0		2223746	2					
ANR	2224053	PrimaryExpression	0		2223746	0					
ANR	2224054	ExpressionStatement	free ( code )	276:5:6150:6161	2223746	2	True				
ANR	2224055	CallExpression	free ( code )		2223746	0					
ANR	2224056	Callee	free		2223746	0					
ANR	2224057	Identifier	free		2223746	0					
ANR	2224058	ArgumentList	code		2223746	1					
ANR	2224059	Argument	code		2223746	0					
ANR	2224060	Identifier	code		2223746	0					
ANR	2224061	ExpressionStatement	code = foo	277:5:6168:6178	2223746	3	True				
ANR	2224062	AssignmentExpression	code = foo		2223746	0		=			
ANR	2224063	Identifier	code		2223746	0					
ANR	2224064	Identifier	foo		2223746	1					
ANR	2224065	Condition	"r_cons_yesno ( 'y' , ""Edit again? (Y/n)"" )"	278:13:6193:6231	2223746	1	True				
ANR	2224066	CallExpression	"r_cons_yesno ( 'y' , ""Edit again? (Y/n)"" )"		2223746	0					
ANR	2224067	Callee	r_cons_yesno		2223746	0					
ANR	2224068	Identifier	r_cons_yesno		2223746	0					
ANR	2224069	ArgumentList	'y'		2223746	1					
ANR	2224070	Argument	'y'		2223746	0					
ANR	2224071	PrimaryExpression	'y'		2223746	0					
ANR	2224072	Argument	"""Edit again? (Y/n)"""		2223746	1					
ANR	2224073	PrimaryExpression	"""Edit again? (Y/n)"""		2223746	0					
ANR	2224074	ExpressionStatement	free ( foo )	279:4:6239:6249	2223746	2	True				
ANR	2224075	CallExpression	free ( foo )		2223746	0					
ANR	2224076	Callee	free		2223746	0					
ANR	2224077	Identifier	free		2223746	0					
ANR	2224078	ArgumentList	foo		2223746	1					
ANR	2224079	Argument	foo		2223746	0					
ANR	2224080	Identifier	foo		2223746	0					
ANR	2224081	ContinueStatement	continue ;	281:3:6259:6267	2223746	1	True				
ANR	2224082	IfStatement	"if ( ! memcmp ( buf , "". "" , 2 ) )"		2223746	12					
ANR	2224083	Condition	"! memcmp ( buf , "". "" , 2 )"	283:6:6279:6300	2223746	0	True				
ANR	2224084	UnaryOperationExpression	"! memcmp ( buf , "". "" , 2 )"		2223746	0					
ANR	2224085	UnaryOperator	!		2223746	0					
ANR	2224086	CallExpression	"memcmp ( buf , "". "" , 2 )"		2223746	1					
ANR	2224087	Callee	memcmp		2223746	0					
ANR	2224088	Identifier	memcmp		2223746	0					
ANR	2224089	ArgumentList	buf		2223746	1					
ANR	2224090	Argument	buf		2223746	0					
ANR	2224091	Identifier	buf		2223746	0					
ANR	2224092	Argument	""". """		2223746	1					
ANR	2224093	PrimaryExpression	""". """		2223746	0					
ANR	2224094	Argument	2		2223746	2					
ANR	2224095	PrimaryExpression	2		2223746	0					
ANR	2224096	CompoundStatement		57:3:1203:1238	2223746	1					
ANR	2224097	IdentifierDeclStatement	char * file = r_file_abspath ( buf + 2 ) ;	284:3:6308:6343	2223746	0	True				
ANR	2224098	IdentifierDecl	* file = r_file_abspath ( buf + 2 )		2223746	0					
ANR	2224099	IdentifierDeclType	char *		2223746	0					
ANR	2224100	Identifier	file		2223746	1					
ANR	2224101	AssignmentExpression	* file = r_file_abspath ( buf + 2 )		2223746	2		=			
ANR	2224102	Identifier	file		2223746	0					
ANR	2224103	CallExpression	r_file_abspath ( buf + 2 )		2223746	1					
ANR	2224104	Callee	r_file_abspath		2223746	0					
ANR	2224105	Identifier	r_file_abspath		2223746	0					
ANR	2224106	ArgumentList	buf + 2		2223746	1					
ANR	2224107	Argument	buf + 2		2223746	0					
ANR	2224108	AdditiveExpression	buf + 2		2223746	0		+			
ANR	2224109	Identifier	buf		2223746	0					
ANR	2224110	PrimaryExpression	2		2223746	1					
ANR	2224111	IfStatement	if ( file )		2223746	1					
ANR	2224112	Condition	file	285:7:6352:6355	2223746	0	True				
ANR	2224113	Identifier	file		2223746	0					
ANR	2224114	CompoundStatement		58:13:1253:1253	2223746	1					
ANR	2224115	ExpressionStatement	"r_lang_run_file ( lang , file )"	286:4:6364:6392	2223746	0	True				
ANR	2224116	CallExpression	"r_lang_run_file ( lang , file )"		2223746	0					
ANR	2224117	Callee	r_lang_run_file		2223746	0					
ANR	2224118	Identifier	r_lang_run_file		2223746	0					
ANR	2224119	ArgumentList	lang		2223746	1					
ANR	2224120	Argument	lang		2223746	0					
ANR	2224121	Identifier	lang		2223746	0					
ANR	2224122	Argument	file		2223746	1					
ANR	2224123	Identifier	file		2223746	0					
ANR	2224124	ExpressionStatement	free ( file )	287:4:6398:6409	2223746	1	True				
ANR	2224125	CallExpression	free ( file )		2223746	0					
ANR	2224126	Callee	free		2223746	0					
ANR	2224127	Identifier	free		2223746	0					
ANR	2224128	ArgumentList	file		2223746	1					
ANR	2224129	Argument	file		2223746	0					
ANR	2224130	Identifier	file		2223746	0					
ANR	2224131	ContinueStatement	continue ;	289:3:6419:6427	2223746	2	True				
ANR	2224132	IfStatement	"if ( ! strcmp ( buf , ""q"" ) )"		2223746	13					
ANR	2224133	Condition	"! strcmp ( buf , ""q"" )"	291:6:6439:6456	2223746	0	True				
ANR	2224134	UnaryOperationExpression	"! strcmp ( buf , ""q"" )"		2223746	0					
ANR	2224135	UnaryOperator	!		2223746	0					
ANR	2224136	CallExpression	"strcmp ( buf , ""q"" )"		2223746	1					
ANR	2224137	Callee	strcmp		2223746	0					
ANR	2224138	Identifier	strcmp		2223746	0					
ANR	2224139	ArgumentList	buf		2223746	1					
ANR	2224140	Argument	buf		2223746	0					
ANR	2224141	Identifier	buf		2223746	0					
ANR	2224142	Argument	"""q"""		2223746	1					
ANR	2224143	PrimaryExpression	"""q"""		2223746	0					
ANR	2224144	CompoundStatement		64:26:1354:1354	2223746	1					
ANR	2224145	ExpressionStatement	free ( prompt )	292:3:6464:6477	2223746	0	True				
ANR	2224146	CallExpression	free ( prompt )		2223746	0					
ANR	2224147	Callee	free		2223746	0					
ANR	2224148	Identifier	free		2223746	0					
ANR	2224149	ArgumentList	prompt		2223746	1					
ANR	2224150	Argument	prompt		2223746	0					
ANR	2224151	Identifier	prompt		2223746	0					
ANR	2224152	ReturnStatement	return true ;	293:3:6482:6493	2223746	1	True				
ANR	2224153	Identifier	true		2223746	0					
ANR	2224154	IfStatement	"if ( ! strcmp ( buf , ""?"" ) )"		2223746	14					
ANR	2224155	Condition	"! strcmp ( buf , ""?"" )"	295:6:6505:6522	2223746	0	True				
ANR	2224156	UnaryOperationExpression	"! strcmp ( buf , ""?"" )"		2223746	0					
ANR	2224157	UnaryOperator	!		2223746	0					
ANR	2224158	CallExpression	"strcmp ( buf , ""?"" )"		2223746	1					
ANR	2224159	Callee	strcmp		2223746	0					
ANR	2224160	Identifier	strcmp		2223746	0					
ANR	2224161	ArgumentList	buf		2223746	1					
ANR	2224162	Argument	buf		2223746	0					
ANR	2224163	Identifier	buf		2223746	0					
ANR	2224164	Argument	"""?"""		2223746	1					
ANR	2224165	PrimaryExpression	"""?"""		2223746	0					
ANR	2224166	CompoundStatement		70:3:1443:1458	2223746	1					
ANR	2224167	IdentifierDeclStatement	RLangDef * def ;	296:3:6530:6543	2223746	0	True				
ANR	2224168	IdentifierDecl	* def		2223746	0					
ANR	2224169	IdentifierDeclType	RLangDef *		2223746	0					
ANR	2224170	Identifier	def		2223746	1					
ANR	2224171	IdentifierDeclStatement	RListIter * iter ;	297:3:6548:6563	2223746	1	True				
ANR	2224172	IdentifierDecl	* iter		2223746	0					
ANR	2224173	IdentifierDeclType	RListIter *		2223746	0					
ANR	2224174	Identifier	iter		2223746	1					
ANR	2224175	Statement	eprintf	298:3:6568:6574	2223746	2	True				
ANR	2224176	Statement	(	298:10:6575:6575	2223746	3	True				
ANR	2224177	Statement	"""  ?        - show this help message\\n"""	298:11:6576:6614	2223746	4	True				
ANR	2224178	Statement	"""  !        - run $EDITOR\\n"""	299:4:6620:6647	2223746	5	True				
ANR	2224179	Statement	"""  !command - run system command\\n"""	300:4:6653:6687	2223746	6	True				
ANR	2224180	Statement	"""  . file   - interpret file\\n"""	301:4:6693:6723	2223746	7	True				
ANR	2224181	Statement	"""  q        - quit prompt\\n"""	302:4:6729:6756	2223746	8	True				
ANR	2224182	Statement	)	302:32:6757:6757	2223746	9	True				
ANR	2224183	ExpressionStatement		302:33:6758:6758	2223746	10	True				
ANR	2224184	ExpressionStatement	"eprintf ( ""%s example:\\n"" , lang -> cur -> name )"	303:3:6763:6805	2223746	11	True				
ANR	2224185	CallExpression	"eprintf ( ""%s example:\\n"" , lang -> cur -> name )"		2223746	0					
ANR	2224186	Callee	eprintf		2223746	0					
ANR	2224187	Identifier	eprintf		2223746	0					
ANR	2224188	ArgumentList	"""%s example:\\n"""		2223746	1					
ANR	2224189	Argument	"""%s example:\\n"""		2223746	0					
ANR	2224190	PrimaryExpression	"""%s example:\\n"""		2223746	0					
ANR	2224191	Argument	lang -> cur -> name		2223746	1					
ANR	2224192	PtrMemberAccess	lang -> cur -> name		2223746	0					
ANR	2224193	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2224194	Identifier	lang		2223746	0					
ANR	2224195	Identifier	cur		2223746	1					
ANR	2224196	Identifier	name		2223746	1					
ANR	2224197	IfStatement	if ( lang -> cur -> help )		2223746	12					
ANR	2224198	Condition	lang -> cur -> help	304:7:6814:6828	2223746	0	True				
ANR	2224199	PtrMemberAccess	lang -> cur -> help		2223746	0					
ANR	2224200	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2224201	Identifier	lang		2223746	0					
ANR	2224202	Identifier	cur		2223746	1					
ANR	2224203	Identifier	help		2223746	1					
ANR	2224204	CompoundStatement		77:24:1726:1726	2223746	1					
ANR	2224205	ExpressionStatement	"eprintf ( ""%s"" , * lang -> cur -> help )"	305:4:6837:6869	2223746	0	True				
ANR	2224206	CallExpression	"eprintf ( ""%s"" , * lang -> cur -> help )"		2223746	0					
ANR	2224207	Callee	eprintf		2223746	0					
ANR	2224208	Identifier	eprintf		2223746	0					
ANR	2224209	ArgumentList	"""%s"""		2223746	1					
ANR	2224210	Argument	"""%s"""		2223746	0					
ANR	2224211	PrimaryExpression	"""%s"""		2223746	0					
ANR	2224212	Argument	* lang -> cur -> help		2223746	1					
ANR	2224213	UnaryOperationExpression	* lang -> cur -> help		2223746	0					
ANR	2224214	UnaryOperator	*		2223746	0					
ANR	2224215	PtrMemberAccess	lang -> cur -> help		2223746	1					
ANR	2224216	PtrMemberAccess	lang -> cur		2223746	0					
ANR	2224217	Identifier	lang		2223746	0					
ANR	2224218	Identifier	cur		2223746	1					
ANR	2224219	Identifier	help		2223746	1					
ANR	2224220	IfStatement	if ( ! r_list_empty ( lang -> defs ) )		2223746	13					
ANR	2224221	Condition	! r_list_empty ( lang -> defs )	307:7:6883:6908	2223746	0	True				
ANR	2224222	UnaryOperationExpression	! r_list_empty ( lang -> defs )		2223746	0					
ANR	2224223	UnaryOperator	!		2223746	0					
ANR	2224224	CallExpression	r_list_empty ( lang -> defs )		2223746	1					
ANR	2224225	Callee	r_list_empty		2223746	0					
ANR	2224226	Identifier	r_list_empty		2223746	0					
ANR	2224227	ArgumentList	lang -> defs		2223746	1					
ANR	2224228	Argument	lang -> defs		2223746	0					
ANR	2224229	PtrMemberAccess	lang -> defs		2223746	0					
ANR	2224230	Identifier	lang		2223746	0					
ANR	2224231	Identifier	defs		2223746	1					
ANR	2224232	CompoundStatement		80:35:1806:1806	2223746	1					
ANR	2224233	ExpressionStatement	"eprintf ( ""variables:\\n"" )"	308:4:6917:6941	2223746	0	True				
ANR	2224234	CallExpression	"eprintf ( ""variables:\\n"" )"		2223746	0					
ANR	2224235	Callee	eprintf		2223746	0					
ANR	2224236	Identifier	eprintf		2223746	0					
ANR	2224237	ArgumentList	"""variables:\\n"""		2223746	1					
ANR	2224238	Argument	"""variables:\\n"""		2223746	0					
ANR	2224239	PrimaryExpression	"""variables:\\n"""		2223746	0					
ANR	2224240	Statement	r_list_foreach	310:3:6951:6964	2223746	14	True				
ANR	2224241	Statement	(	310:18:6966:6966	2223746	15	True				
ANR	2224242	Statement	lang	310:19:6967:6970	2223746	16	True				
ANR	2224243	Statement	->	310:23:6971:6972	2223746	17	True				
ANR	2224244	Statement	defs	310:25:6973:6976	2223746	18	True				
ANR	2224245	Statement	","	310:29:6977:6977	2223746	19	True				
ANR	2224246	Statement	iter	310:31:6979:6982	2223746	20	True				
ANR	2224247	Statement	","	310:35:6983:6983	2223746	21	True				
ANR	2224248	Statement	def	310:37:6985:6987	2223746	22	True				
ANR	2224249	Statement	)	310:40:6988:6988	2223746	23	True				
ANR	2224250	CompoundStatement		83:42:1885:1885	2223746	24					
ANR	2224251	ExpressionStatement	"eprintf ( ""  %s %s\\n"" , def -> type , def -> name )"	311:4:6996:7039	2223746	0	True				
ANR	2224252	CallExpression	"eprintf ( ""  %s %s\\n"" , def -> type , def -> name )"		2223746	0					
ANR	2224253	Callee	eprintf		2223746	0					
ANR	2224254	Identifier	eprintf		2223746	0					
ANR	2224255	ArgumentList	"""  %s %s\\n"""		2223746	1					
ANR	2224256	Argument	"""  %s %s\\n"""		2223746	0					
ANR	2224257	PrimaryExpression	"""  %s %s\\n"""		2223746	0					
ANR	2224258	Argument	def -> type		2223746	1					
ANR	2224259	PtrMemberAccess	def -> type		2223746	0					
ANR	2224260	Identifier	def		2223746	0					
ANR	2224261	Identifier	type		2223746	1					
ANR	2224262	Argument	def -> name		2223746	2					
ANR	2224263	PtrMemberAccess	def -> name		2223746	0					
ANR	2224264	Identifier	def		2223746	0					
ANR	2224265	Identifier	name		2223746	1					
ANR	2224266	ElseStatement	else		2223746	0					
ANR	2224267	CompoundStatement		86:9:1950:1950	2223746	0					
ANR	2224268	ExpressionStatement	"r_lang_run ( lang , buf , strlen ( buf ) )"	314:3:7060:7096	2223746	0	True				
ANR	2224269	CallExpression	"r_lang_run ( lang , buf , strlen ( buf ) )"		2223746	0					
ANR	2224270	Callee	r_lang_run		2223746	0					
ANR	2224271	Identifier	r_lang_run		2223746	0					
ANR	2224272	ArgumentList	lang		2223746	1					
ANR	2224273	Argument	lang		2223746	0					
ANR	2224274	Identifier	lang		2223746	0					
ANR	2224275	Argument	buf		2223746	1					
ANR	2224276	Identifier	buf		2223746	0					
ANR	2224277	Argument	strlen ( buf )		2223746	2					
ANR	2224278	CallExpression	strlen ( buf )		2223746	0					
ANR	2224279	Callee	strlen		2223746	0					
ANR	2224280	Identifier	strlen		2223746	0					
ANR	2224281	ArgumentList	buf		2223746	1					
ANR	2224282	Argument	buf		2223746	0					
ANR	2224283	Identifier	buf		2223746	0					
ANR	2224284	ExpressionStatement	r_line_set_prompt ( prompt )	318:1:7131:7157	2223746	13	True				
ANR	2224285	CallExpression	r_line_set_prompt ( prompt )		2223746	0					
ANR	2224286	Callee	r_line_set_prompt		2223746	0					
ANR	2224287	Identifier	r_line_set_prompt		2223746	0					
ANR	2224288	ArgumentList	prompt		2223746	1					
ANR	2224289	Argument	prompt		2223746	0					
ANR	2224290	Identifier	prompt		2223746	0					
ANR	2224291	ExpressionStatement	line -> completion = oc	319:1:7160:7181	2223746	14	True				
ANR	2224292	AssignmentExpression	line -> completion = oc		2223746	0		=			
ANR	2224293	PtrMemberAccess	line -> completion		2223746	0					
ANR	2224294	Identifier	line		2223746	0					
ANR	2224295	Identifier	completion		2223746	1					
ANR	2224296	Identifier	oc		2223746	1					
ANR	2224297	ExpressionStatement	line -> history = hist	320:1:7184:7204	2223746	15	True				
ANR	2224298	AssignmentExpression	line -> history = hist		2223746	0		=			
ANR	2224299	PtrMemberAccess	line -> history		2223746	0					
ANR	2224300	Identifier	line		2223746	0					
ANR	2224301	Identifier	history		2223746	1					
ANR	2224302	Identifier	hist		2223746	1					
ANR	2224303	ExpressionStatement	clearerr ( stdin )	321:1:7207:7223	2223746	16	True				
ANR	2224304	CallExpression	clearerr ( stdin )		2223746	0					
ANR	2224305	Callee	clearerr		2223746	0					
ANR	2224306	Identifier	clearerr		2223746	0					
ANR	2224307	ArgumentList	stdin		2223746	1					
ANR	2224308	Argument	stdin		2223746	0					
ANR	2224309	Identifier	stdin		2223746	0					
ANR	2224310	ExpressionStatement	"printf ( ""\\n"" )"	322:1:7226:7239	2223746	17	True				
ANR	2224311	CallExpression	"printf ( ""\\n"" )"		2223746	0					
ANR	2224312	Callee	printf		2223746	0					
ANR	2224313	Identifier	printf		2223746	0					
ANR	2224314	ArgumentList	"""\\n"""		2223746	1					
ANR	2224315	Argument	"""\\n"""		2223746	0					
ANR	2224316	PrimaryExpression	"""\\n"""		2223746	0					
ANR	2224317	ExpressionStatement	free ( prompt )	323:1:7242:7255	2223746	18	True				
ANR	2224318	CallExpression	free ( prompt )		2223746	0					
ANR	2224319	Callee	free		2223746	0					
ANR	2224320	Identifier	free		2223746	0					
ANR	2224321	ArgumentList	prompt		2223746	1					
ANR	2224322	Argument	prompt		2223746	0					
ANR	2224323	Identifier	prompt		2223746	0					
ANR	2224324	ReturnStatement	return true ;	324:1:7258:7269	2223746	19	True				
ANR	2224325	Identifier	true		2223746	0					
ANR	2224326	ReturnType	R_API int		2223746	1					
ANR	2224327	Identifier	r_lang_prompt		2223746	2					
ANR	2224328	ParameterList	RLang * lang		2223746	3					
ANR	2224329	Parameter	RLang * lang	228:24:5091:5101	2223746	0	True				
ANR	2224330	ParameterType	RLang *		2223746	0					
ANR	2224331	Identifier	lang		2223746	1					
ANR	2224332	CFGEntryNode	ENTRY		2223746		True				
ANR	2224333	CFGExitNode	EXIT		2223746		True				
ANR	2224334	InfiniteForNode	true		2223746		True				
ANR	2224335	Symbol	stdin		2223746						
ANR	2224336	Symbol	r_file_abspath		2223746						
ANR	2224337	Symbol	* * lang		2223746						
ANR	2224338	Symbol	stdout		2223746						
ANR	2224339	Symbol	def		2223746						
ANR	2224340	Symbol	* lang		2223746						
ANR	2224341	Symbol	r_line_singleton		2223746						
ANR	2224342	Symbol	* line		2223746						
ANR	2224343	Symbol	def -> name		2223746						
ANR	2224344	Symbol	* * lang -> cur		2223746						
ANR	2224345	Symbol	strlen		2223746						
ANR	2224346	Symbol	hist		2223746						
ANR	2224347	Symbol	memcmp		2223746						
ANR	2224348	Symbol	histnull		2223746						
ANR	2224349	Symbol	lang -> cur		2223746						
ANR	2224350	Symbol	strcmp		2223746						
ANR	2224351	Symbol	* lang -> cur -> help		2223746						
ANR	2224352	Symbol	* buf		2223746						
ANR	2224353	Symbol	NULL		2223746						
ANR	2224354	Symbol	iter		2223746						
ANR	2224355	Symbol	line -> history		2223746						
ANR	2224356	Symbol	lang -> cur -> name		2223746						
ANR	2224357	Symbol	true		2223746						
ANR	2224358	Symbol	r_list_empty		2223746						
ANR	2224359	Symbol	* lang -> cur		2223746						
ANR	2224360	Symbol	code		2223746						
ANR	2224361	Symbol	line		2223746						
ANR	2224362	Symbol	lang -> cur -> prompt		2223746						
ANR	2224363	Symbol	foo		2223746						
ANR	2224364	Symbol	ocnull		2223746						
ANR	2224365	Symbol	* def		2223746						
ANR	2224366	Symbol	file		2223746						
ANR	2224367	Symbol	oc		2223746						
ANR	2224368	Symbol	def -> type		2223746						
ANR	2224369	Symbol	lang		2223746						
ANR	2224370	Symbol	* * * lang		2223746						
ANR	2224371	Symbol	lang -> defs		2223746						
ANR	2224372	Symbol	false		2223746						
ANR	2224373	Symbol	r_cons_yesno		2223746						
ANR	2224374	Symbol	line -> completion		2223746						
ANR	2224375	Symbol	p		2223746						
ANR	2224376	Symbol	buf		2223746						
ANR	2224377	Symbol	* strlen		2223746						
ANR	2224378	Symbol	r_line_readline		2223746						
ANR	2224379	Symbol	r_cons_editor		2223746						
ANR	2224380	Symbol	feof		2223746						
ANR	2224381	Symbol	line -> prompt		2223746						
ANR	2224382	Symbol	lang -> cur -> help		2223746						
ANR	2224383	Symbol	strdup		2223746						
ANR	2224384	Symbol	prompt		2223746						
