command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2404710	File	data/converged/CVE-2019-16718~_radare2/libr_anal_p_anal_i4004.c								
ANR	2404711	Function	set_reg_profile	12:0:213:892							
ANR	2404712	FunctionDef	set_reg_profile (RAnal * anal)		2404711	0					
ANR	2404713	CompoundStatement		12:40:253:892	2404711	0					
ANR	2404714	Statement	const	13:1:256:260	2404711	0	True				
ANR	2404715	Statement	char	13:7:262:265	2404711	1	True				
ANR	2404716	Statement	*	13:12:267:267	2404711	2	True				
ANR	2404717	Statement	p	13:13:268:268	2404711	3	True				
ANR	2404718	Statement	=	13:15:270:270	2404711	4	True				
ANR	2404719	Statement	"""=PC\\tPC\\n"""	14:2:274:283	2404711	5	True				
ANR	2404720	Statement	"""=A0\\tr0\\n"""	17:2:338:347	2404711	6	True				
ANR	2404721	Statement	"""=A1\\tr1\\n"""	18:2:351:360	2404711	7	True				
ANR	2404722	Statement	"""=A2\\tr2\\n"""	19:2:364:373	2404711	8	True				
ANR	2404723	Statement	"""=A3\\tr3\\n"""	20:2:377:386	2404711	9	True				
ANR	2404724	Statement	"""=R0\\tr0\\n"""	21:2:390:399	2404711	10	True				
ANR	2404725	Statement	"""gpr\\tr0\\t.4\\t0\\t0\\n"""	22:2:403:419	2404711	11	True				
ANR	2404726	Statement	"""gpr\\tr1\\t.4\\t1\\t0\\n"""	23:2:423:439	2404711	12	True				
ANR	2404727	Statement	"""gpr\\tr2\\t.4\\t2\\t0\\n"""	24:2:443:459	2404711	13	True				
ANR	2404728	Statement	"""gpr\\tr3\\t.4\\t3\\t0\\n"""	25:2:463:479	2404711	14	True				
ANR	2404729	Statement	"""gpr\\tr4\\t.4\\t4\\t0\\n"""	26:2:483:499	2404711	15	True				
ANR	2404730	Statement	"""gpr\\tr5\\t.4\\t5\\t0\\n"""	27:2:503:519	2404711	16	True				
ANR	2404731	Statement	"""gpr\\tr6\\t.4\\t6\\t0\\n"""	28:2:523:539	2404711	17	True				
ANR	2404732	Statement	"""gpr\\tr7\\t.4\\t7\\t0\\n"""	29:2:543:559	2404711	18	True				
ANR	2404733	Statement	"""gpr\\tr8\\t.4\\t8\\t0\\n"""	30:2:563:579	2404711	19	True				
ANR	2404734	Statement	"""gpr\\tr9\\t.4\\t9\\t0\\n"""	31:2:583:599	2404711	20	True				
ANR	2404735	Statement	"""gpr\\tr10\\t.4\\t10\\t0\\n"""	32:2:603:621	2404711	21	True				
ANR	2404736	Statement	"""gpr\\tr11\\t.4\\t11\\t0\\n"""	33:2:625:643	2404711	22	True				
ANR	2404737	Statement	"""gpr\\tr12\\t.4\\t12\\t0\\n"""	34:2:647:665	2404711	23	True				
ANR	2404738	Statement	"""gpr\\tr13\\t.4\\t13\\t0\\n"""	35:2:669:687	2404711	24	True				
ANR	2404739	Statement	"""gpr\\tr14\\t.4\\t14\\t0\\n"""	36:2:691:709	2404711	25	True				
ANR	2404740	Statement	"""gpr\\tr15\\t.4\\t15\\t0\\n"""	37:2:713:731	2404711	26	True				
ANR	2404741	Statement	"""gpr\\tPC\\t.64\\t32\\t0\\n"""	38:2:735:753	2404711	27	True				
ANR	2404742	Statement	"""gpr\\tPC1\\t.64\\t34\\t0\\n"""	40:2:771:790	2404711	28	True				
ANR	2404743	Statement	"""gpr\\tPC2\\t.64\\t34\\t0\\n"""	41:2:794:813	2404711	29	True				
ANR	2404744	ExpressionStatement	"""gpr\\tPC3\\t.64\\t34\\t0\\n"""	42:2:817:840	2404711	30	True				
ANR	2404745	PrimaryExpression	"""gpr\\tPC3\\t.64\\t34\\t0\\n"""		2404711	0					
ANR	2404746	ReturnStatement	"return r_reg_set_profile_string ( anal -> reg , p ) ;"	45:1:844:890	2404711	31	True				
ANR	2404747	CallExpression	"r_reg_set_profile_string ( anal -> reg , p )"		2404711	0					
ANR	2404748	Callee	r_reg_set_profile_string		2404711	0					
ANR	2404749	Identifier	r_reg_set_profile_string		2404711	0					
ANR	2404750	ArgumentList	anal -> reg		2404711	1					
ANR	2404751	Argument	anal -> reg		2404711	0					
ANR	2404752	PtrMemberAccess	anal -> reg		2404711	0					
ANR	2404753	Identifier	anal		2404711	0					
ANR	2404754	Identifier	reg		2404711	1					
ANR	2404755	Argument	p		2404711	1					
ANR	2404756	Identifier	p		2404711	0					
ANR	2404757	ReturnType	static int		2404711	1					
ANR	2404758	Identifier	set_reg_profile		2404711	2					
ANR	2404759	ParameterList	RAnal * anal		2404711	3					
ANR	2404760	Parameter	RAnal * anal	12:27:240:250	2404711	0	True				
ANR	2404761	ParameterType	RAnal *		2404711	0					
ANR	2404762	Identifier	anal		2404711	1					
ANR	2404763	CFGEntryNode	ENTRY		2404711		True				
ANR	2404764	CFGExitNode	EXIT		2404711		True				
ANR	2404765	Symbol	p		2404711						
ANR	2404766	Symbol	* anal		2404711						
ANR	2404767	Symbol	anal -> reg		2404711						
ANR	2404768	Symbol	anal		2404711						
ANR	2404769	Symbol	r_reg_set_profile_string		2404711						
ANR	2404770	DeclStmt									
ANR	2404771	Decl							const int	const int [ 16 ]	i4004_ins_len
ANR	2404772	DeclStmt									
ANR	2404773	Decl							const char	const char * [ 16 ]	i4004_e
ANR	2404774	DeclStmt									
ANR	2404775	Decl							const char	const char * [ 16 ]	i4004_f
ANR	2404776	Function	i4004_get_ins_len	91:0:1362:1524							
ANR	2404777	FunctionDef	i4004_get_ins_len (ut8 hex)		2404776	0					
ANR	2404778	CompoundStatement		91:39:1401:1524	2404776	0					
ANR	2404779	IdentifierDeclStatement	ut8 high = ( hex & 0xf0 ) >> 4 ;	92:1:1404:1430	2404776	0	True				
ANR	2404780	IdentifierDecl	high = ( hex & 0xf0 ) >> 4		2404776	0					
ANR	2404781	IdentifierDeclType	ut8		2404776	0					
ANR	2404782	Identifier	high		2404776	1					
ANR	2404783	AssignmentExpression	high = ( hex & 0xf0 ) >> 4		2404776	2		=			
ANR	2404784	Identifier	high		2404776	0					
ANR	2404785	ShiftExpression	( hex & 0xf0 ) >> 4		2404776	1		>>			
ANR	2404786	BitAndExpression	hex & 0xf0		2404776	0		&			
ANR	2404787	Identifier	hex		2404776	0					
ANR	2404788	PrimaryExpression	0xf0		2404776	1					
ANR	2404789	PrimaryExpression	4		2404776	1					
ANR	2404790	IdentifierDeclStatement	int ret = i4004_ins_len [ high ] ;	93:1:1433:1462	2404776	1	True				
ANR	2404791	IdentifierDecl	ret = i4004_ins_len [ high ]		2404776	0					
ANR	2404792	IdentifierDeclType	int		2404776	0					
ANR	2404793	Identifier	ret		2404776	1					
ANR	2404794	AssignmentExpression	ret = i4004_ins_len [ high ]		2404776	2		=			
ANR	2404795	Identifier	ret		2404776	0					
ANR	2404796	ArrayIndexing	i4004_ins_len [ high ]		2404776	1					
ANR	2404797	Identifier	i4004_ins_len		2404776	0					
ANR	2404798	Identifier	high		2404776	1					
ANR	2404799	IfStatement	if ( ret == 3 )		2404776	2					
ANR	2404800	Condition	ret == 3	94:5:1469:1476	2404776	0	True				
ANR	2404801	EqualityExpression	ret == 3		2404776	0		==			
ANR	2404802	Identifier	ret		2404776	0					
ANR	2404803	PrimaryExpression	3		2404776	1					
ANR	2404804	CompoundStatement		4:15:77:77	2404776	1					
ANR	2404805	ExpressionStatement	ret = ( hex & 1 ) ? 1 : 2	95:2:1483:1506	2404776	0	True				
ANR	2404806	AssignmentExpression	ret = ( hex & 1 ) ? 1 : 2		2404776	0		=			
ANR	2404807	Identifier	ret		2404776	0					
ANR	2404808	ConditionalExpression	( hex & 1 ) ? 1 : 2		2404776	1					
ANR	2404809	Condition	hex & 1		2404776	0					
ANR	2404810	BitAndExpression	hex & 1		2404776	0		&			
ANR	2404811	Identifier	hex		2404776	0					
ANR	2404812	PrimaryExpression	1		2404776	1					
ANR	2404813	PrimaryExpression	1		2404776	1					
ANR	2404814	PrimaryExpression	2		2404776	2					
ANR	2404815	ReturnStatement	return ret ;	97:1:1512:1522	2404776	3	True				
ANR	2404816	Identifier	ret		2404776	0					
ANR	2404817	ReturnType	static int		2404776	1					
ANR	2404818	Identifier	i4004_get_ins_len		2404776	2					
ANR	2404819	ParameterList	ut8 hex		2404776	3					
ANR	2404820	Parameter	ut8 hex	91:30:1392:1398	2404776	0	True				
ANR	2404821	ParameterType	ut8		2404776	0					
ANR	2404822	Identifier	hex		2404776	1					
ANR	2404823	CFGEntryNode	ENTRY		2404776		True				
ANR	2404824	CFGExitNode	EXIT		2404776		True				
ANR	2404825	Symbol	ret		2404776						
ANR	2404826	Symbol	high		2404776						
ANR	2404827	Symbol	* i4004_ins_len		2404776						
ANR	2404828	Symbol	* high		2404776						
ANR	2404829	Symbol	hex		2404776						
ANR	2404830	Symbol	i4004_ins_len		2404776						
ANR	2404831	Function	i4004_op	100:0:1527:3995							
ANR	2404832	FunctionDef	"i4004_op (RAnal * anal , RAnalOp * op , ut64 addr , const ut8 * buf , int len , RAnalOpMask mask)"		2404831	0					
ANR	2404833	CompoundStatement		100:100:1627:3995	2404831	0					
ANR	2404834	IdentifierDeclStatement	char basm [ 128 ] ;	101:1:1630:1644	2404831	0	True				
ANR	2404835	IdentifierDecl	basm [ 128 ]		2404831	0					
ANR	2404836	IdentifierDeclType	char [ 128 ]		2404831	0					
ANR	2404837	Identifier	basm		2404831	1					
ANR	2404838	PrimaryExpression	128		2404831	2					
ANR	2404839	IdentifierDeclStatement	const size_t basz = sizeof ( basm ) - 1 ;	102:1:1647:1682	2404831	1	True				
ANR	2404840	IdentifierDecl	basz = sizeof ( basm ) - 1		2404831	0					
ANR	2404841	IdentifierDeclType	const size_t		2404831	0					
ANR	2404842	Identifier	basz		2404831	1					
ANR	2404843	AssignmentExpression	basz = sizeof ( basm ) - 1		2404831	2		=			
ANR	2404844	Identifier	basz		2404831	0					
ANR	2404845	AdditiveExpression	sizeof ( basm ) - 1		2404831	1		-			
ANR	2404846	SizeofExpression	sizeof ( basm )		2404831	0					
ANR	2404847	Sizeof	sizeof		2404831	0					
ANR	2404848	SizeofOperand	basm		2404831	1					
ANR	2404849	PrimaryExpression	1		2404831	1					
ANR	2404850	IdentifierDeclStatement	int rlen = i4004_get_ins_len ( * buf ) ;	103:1:1685:1720	2404831	2	True				
ANR	2404851	IdentifierDecl	rlen = i4004_get_ins_len ( * buf )		2404831	0					
ANR	2404852	IdentifierDeclType	int		2404831	0					
ANR	2404853	Identifier	rlen		2404831	1					
ANR	2404854	AssignmentExpression	rlen = i4004_get_ins_len ( * buf )		2404831	2		=			
ANR	2404855	Identifier	rlen		2404831	0					
ANR	2404856	CallExpression	i4004_get_ins_len ( * buf )		2404831	1					
ANR	2404857	Callee	i4004_get_ins_len		2404831	0					
ANR	2404858	Identifier	i4004_get_ins_len		2404831	0					
ANR	2404859	ArgumentList	* buf		2404831	1					
ANR	2404860	Argument	* buf		2404831	0					
ANR	2404861	UnaryOperationExpression	* buf		2404831	0					
ANR	2404862	UnaryOperator	*		2404831	0					
ANR	2404863	Identifier	buf		2404831	1					
ANR	2404864	IfStatement	if ( ! op )		2404831	3					
ANR	2404865	Condition	! op	104:5:1727:1729	2404831	0	True				
ANR	2404866	UnaryOperationExpression	! op		2404831	0					
ANR	2404867	UnaryOperator	!		2404831	0					
ANR	2404868	Identifier	op		2404831	1					
ANR	2404869	CompoundStatement		5:10:104:104	2404831	1					
ANR	2404870	ReturnStatement	return 2 ;	105:2:1736:1744	2404831	0	True				
ANR	2404871	PrimaryExpression	2		2404831	0					
ANR	2404872	ExpressionStatement	r_strbuf_init ( & op -> esil )	107:1:1750:1775	2404831	4	True				
ANR	2404873	CallExpression	r_strbuf_init ( & op -> esil )		2404831	0					
ANR	2404874	Callee	r_strbuf_init		2404831	0					
ANR	2404875	Identifier	r_strbuf_init		2404831	0					
ANR	2404876	ArgumentList	& op -> esil		2404831	1					
ANR	2404877	Argument	& op -> esil		2404831	0					
ANR	2404878	UnaryOperationExpression	& op -> esil		2404831	0					
ANR	2404879	UnaryOperator	&		2404831	0					
ANR	2404880	PtrMemberAccess	op -> esil		2404831	1					
ANR	2404881	Identifier	op		2404831	0					
ANR	2404882	Identifier	esil		2404831	1					
ANR	2404883	IdentifierDeclStatement	ut8 high = ( * buf & 0xf0 ) >> 4 ;	108:1:1778:1805	2404831	5	True				
ANR	2404884	IdentifierDecl	high = ( * buf & 0xf0 ) >> 4		2404831	0					
ANR	2404885	IdentifierDeclType	ut8		2404831	0					
ANR	2404886	Identifier	high		2404831	1					
ANR	2404887	AssignmentExpression	high = ( * buf & 0xf0 ) >> 4		2404831	2		=			
ANR	2404888	Identifier	high		2404831	0					
ANR	2404889	ShiftExpression	( * buf & 0xf0 ) >> 4		2404831	1		>>			
ANR	2404890	BitAndExpression	* buf & 0xf0		2404831	0		&			
ANR	2404891	UnaryOperationExpression	* buf		2404831	0					
ANR	2404892	UnaryOperator	*		2404831	0					
ANR	2404893	Identifier	buf		2404831	1					
ANR	2404894	PrimaryExpression	0xf0		2404831	1					
ANR	2404895	PrimaryExpression	4		2404831	1					
ANR	2404896	IdentifierDeclStatement	ut8 low = ( * buf & 0xf ) ;	109:1:1808:1830	2404831	6	True				
ANR	2404897	IdentifierDecl	low = ( * buf & 0xf )		2404831	0					
ANR	2404898	IdentifierDeclType	ut8		2404831	0					
ANR	2404899	Identifier	low		2404831	1					
ANR	2404900	AssignmentExpression	low = ( * buf & 0xf )		2404831	2		=			
ANR	2404901	Identifier	low		2404831	0					
ANR	2404902	BitAndExpression	* buf & 0xf		2404831	1		&			
ANR	2404903	UnaryOperationExpression	* buf		2404831	0					
ANR	2404904	UnaryOperator	*		2404831	0					
ANR	2404905	Identifier	buf		2404831	1					
ANR	2404906	PrimaryExpression	0xf		2404831	1					
ANR	2404907	ExpressionStatement	basm [ 0 ] = 0	110:1:1833:1844	2404831	7	True				
ANR	2404908	AssignmentExpression	basm [ 0 ] = 0		2404831	0		=			
ANR	2404909	ArrayIndexing	basm [ 0 ]		2404831	0					
ANR	2404910	Identifier	basm		2404831	0					
ANR	2404911	PrimaryExpression	0		2404831	1					
ANR	2404912	PrimaryExpression	0		2404831	1					
ANR	2404913	IfStatement	if ( rlen > len )		2404831	8					
ANR	2404914	Condition	rlen > len	112:5:1852:1861	2404831	0	True				
ANR	2404915	RelationalExpression	rlen > len		2404831	0		>			
ANR	2404916	Identifier	rlen		2404831	0					
ANR	2404917	Identifier	len		2404831	1					
ANR	2404918	CompoundStatement		13:17:236:236	2404831	1					
ANR	2404919	ReturnStatement	return op -> size = 0 ;	113:2:1868:1887	2404831	0	True				
ANR	2404920	AssignmentExpression	op -> size = 0		2404831	0		=			
ANR	2404921	PtrMemberAccess	op -> size		2404831	0					
ANR	2404922	Identifier	op		2404831	0					
ANR	2404923	Identifier	size		2404831	1					
ANR	2404924	PrimaryExpression	0		2404831	1					
ANR	2404925	SwitchStatement	switch ( high )		2404831	9					
ANR	2404926	Condition	high	115:9:1901:1904	2404831	0	True				
ANR	2404927	Identifier	high		2404831	0					
ANR	2404928	CompoundStatement		16:15:279:279	2404831	1					
ANR	2404929	Label	case 0 :	116:1:1910:1916	2404831	0	True				
ANR	2404930	IfStatement	if ( low )		2404831	1					
ANR	2404931	Condition	low	117:6:1924:1926	2404831	0	True				
ANR	2404932	Identifier	low		2404831	0					
ANR	2404933	CompoundStatement		18:11:301:301	2404831	1					
ANR	2404934	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ILL	118:3:1934:1963	2404831	0	True				
ANR	2404935	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ILL		2404831	0		=			
ANR	2404936	PtrMemberAccess	op -> type		2404831	0					
ANR	2404937	Identifier	op		2404831	0					
ANR	2404938	Identifier	type		2404831	1					
ANR	2404939	Identifier	R_ANAL_OP_TYPE_ILL		2404831	1					
ANR	2404940	ElseStatement	else		2404831	0					
ANR	2404941	CompoundStatement		20:9:346:346	2404831	0					
ANR	2404942	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_NOP	120:3:1979:2008	2404831	0	True				
ANR	2404943	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_NOP		2404831	0		=			
ANR	2404944	PtrMemberAccess	op -> type		2404831	0					
ANR	2404945	Identifier	op		2404831	0					
ANR	2404946	Identifier	type		2404831	1					
ANR	2404947	Identifier	R_ANAL_OP_TYPE_NOP		2404831	1					
ANR	2404948	BreakStatement	break ;	122:2:2016:2021	2404831	2	True				
ANR	2404949	Label	case 1 :	123:1:2024:2030	2404831	3	True				
ANR	2404950	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CJMP	124:2:2096:2126	2404831	4	True				
ANR	2404951	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CJMP		2404831	0		=			
ANR	2404952	PtrMemberAccess	op -> type		2404831	0					
ANR	2404953	Identifier	op		2404831	0					
ANR	2404954	Identifier	type		2404831	1					
ANR	2404955	Identifier	R_ANAL_OP_TYPE_CJMP		2404831	1					
ANR	2404956	ExpressionStatement	op -> jump = buf [ 1 ]	125:2:2130:2147	2404831	5	True				
ANR	2404957	AssignmentExpression	op -> jump = buf [ 1 ]		2404831	0		=			
ANR	2404958	PtrMemberAccess	op -> jump		2404831	0					
ANR	2404959	Identifier	op		2404831	0					
ANR	2404960	Identifier	jump		2404831	1					
ANR	2404961	ArrayIndexing	buf [ 1 ]		2404831	1					
ANR	2404962	Identifier	buf		2404831	0					
ANR	2404963	PrimaryExpression	1		2404831	1					
ANR	2404964	ExpressionStatement	op -> fail = addr + rlen	126:2:2151:2173	2404831	6	True				
ANR	2404965	AssignmentExpression	op -> fail = addr + rlen		2404831	0		=			
ANR	2404966	PtrMemberAccess	op -> fail		2404831	0					
ANR	2404967	Identifier	op		2404831	0					
ANR	2404968	Identifier	fail		2404831	1					
ANR	2404969	AdditiveExpression	addr + rlen		2404831	1		+			
ANR	2404970	Identifier	addr		2404831	0					
ANR	2404971	Identifier	rlen		2404831	1					
ANR	2404972	BreakStatement	break ;	127:2:2177:2182	2404831	7	True				
ANR	2404973	Label	case 2 :	128:1:2185:2191	2404831	8	True				
ANR	2404974	IfStatement	if ( rlen == 1 )		2404831	9					
ANR	2404975	Condition	rlen == 1	129:6:2199:2207	2404831	0	True				
ANR	2404976	EqualityExpression	rlen == 1		2404831	0		==			
ANR	2404977	Identifier	rlen		2404831	0					
ANR	2404978	PrimaryExpression	1		2404831	1					
ANR	2404979	CompoundStatement		30:17:582:582	2404831	1					
ANR	2404980	ExpressionStatement	"snprintf ( basm , basz , ""scr r%d"" , ( low & 0xe ) )"	130:3:2215:2260	2404831	0	True				
ANR	2404981	CallExpression	"snprintf ( basm , basz , ""scr r%d"" , ( low & 0xe ) )"		2404831	0					
ANR	2404982	Callee	snprintf		2404831	0					
ANR	2404983	Identifier	snprintf		2404831	0					
ANR	2404984	ArgumentList	basm		2404831	1					
ANR	2404985	Argument	basm		2404831	0					
ANR	2404986	Identifier	basm		2404831	0					
ANR	2404987	Argument	basz		2404831	1					
ANR	2404988	Identifier	basz		2404831	0					
ANR	2404989	Argument	"""scr r%d"""		2404831	2					
ANR	2404990	PrimaryExpression	"""scr r%d"""		2404831	0					
ANR	2404991	Argument	low & 0xe		2404831	3					
ANR	2404992	BitAndExpression	low & 0xe		2404831	0		&			
ANR	2404993	Identifier	low		2404831	0					
ANR	2404994	PrimaryExpression	0xe		2404831	1					
ANR	2404995	ElseStatement	else		2404831	0					
ANR	2404996	CompoundStatement		32:9:643:643	2404831	0					
ANR	2404997	ExpressionStatement	"snprintf ( basm , basz , ""fim r%d, 0x%02x"" , ( low & 0xe ) , buf [ 1 ] )"	132:3:2276:2337	2404831	0	True				
ANR	2404998	CallExpression	"snprintf ( basm , basz , ""fim r%d, 0x%02x"" , ( low & 0xe ) , buf [ 1 ] )"		2404831	0					
ANR	2404999	Callee	snprintf		2404831	0					
ANR	2405000	Identifier	snprintf		2404831	0					
ANR	2405001	ArgumentList	basm		2404831	1					
ANR	2405002	Argument	basm		2404831	0					
ANR	2405003	Identifier	basm		2404831	0					
ANR	2405004	Argument	basz		2404831	1					
ANR	2405005	Identifier	basz		2404831	0					
ANR	2405006	Argument	"""fim r%d, 0x%02x"""		2404831	2					
ANR	2405007	PrimaryExpression	"""fim r%d, 0x%02x"""		2404831	0					
ANR	2405008	Argument	low & 0xe		2404831	3					
ANR	2405009	BitAndExpression	low & 0xe		2404831	0		&			
ANR	2405010	Identifier	low		2404831	0					
ANR	2405011	PrimaryExpression	0xe		2404831	1					
ANR	2405012	Argument	buf [ 1 ]		2404831	4					
ANR	2405013	ArrayIndexing	buf [ 1 ]		2404831	0					
ANR	2405014	Identifier	buf		2404831	0					
ANR	2405015	PrimaryExpression	1		2404831	1					
ANR	2405016	BreakStatement	break ;	134:2:2345:2350	2404831	10	True				
ANR	2405017	Label	case 3 :	135:1:2353:2359	2404831	11	True				
ANR	2405018	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_MOV	136:2:2363:2392	2404831	12	True				
ANR	2405019	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_MOV		2404831	0		=			
ANR	2405020	PtrMemberAccess	op -> type		2404831	0					
ANR	2405021	Identifier	op		2404831	0					
ANR	2405022	Identifier	type		2404831	1					
ANR	2405023	Identifier	R_ANAL_OP_TYPE_MOV		2404831	1					
ANR	2405024	ExpressionStatement	"snprintf ( basm , basz , ""fin r%d"" , ( low & 0xe ) )"	137:2:2396:2441	2404831	13	True				
ANR	2405025	CallExpression	"snprintf ( basm , basz , ""fin r%d"" , ( low & 0xe ) )"		2404831	0					
ANR	2405026	Callee	snprintf		2404831	0					
ANR	2405027	Identifier	snprintf		2404831	0					
ANR	2405028	ArgumentList	basm		2404831	1					
ANR	2405029	Argument	basm		2404831	0					
ANR	2405030	Identifier	basm		2404831	0					
ANR	2405031	Argument	basz		2404831	1					
ANR	2405032	Identifier	basz		2404831	0					
ANR	2405033	Argument	"""fin r%d"""		2404831	2					
ANR	2405034	PrimaryExpression	"""fin r%d"""		2404831	0					
ANR	2405035	Argument	low & 0xe		2404831	3					
ANR	2405036	BitAndExpression	low & 0xe		2404831	0		&			
ANR	2405037	Identifier	low		2404831	0					
ANR	2405038	PrimaryExpression	0xe		2404831	1					
ANR	2405039	BreakStatement	break ;	138:2:2445:2450	2404831	14	True				
ANR	2405040	Label	case 4 :	139:1:2453:2459	2404831	15	True				
ANR	2405041	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CJMP	140:2:2463:2493	2404831	16	True				
ANR	2405042	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CJMP		2404831	0		=			
ANR	2405043	PtrMemberAccess	op -> type		2404831	0					
ANR	2405044	Identifier	op		2404831	0					
ANR	2405045	Identifier	type		2404831	1					
ANR	2405046	Identifier	R_ANAL_OP_TYPE_CJMP		2404831	1					
ANR	2405047	ExpressionStatement	op -> jump = ( ut16 ) ( low << 8 ) | buf [ 1 ]	141:2:2497:2532	2404831	17	True				
ANR	2405048	AssignmentExpression	op -> jump = ( ut16 ) ( low << 8 ) | buf [ 1 ]		2404831	0		=			
ANR	2405049	PtrMemberAccess	op -> jump		2404831	0					
ANR	2405050	Identifier	op		2404831	0					
ANR	2405051	Identifier	jump		2404831	1					
ANR	2405052	InclusiveOrExpression	( ut16 ) ( low << 8 ) | buf [ 1 ]		2404831	1		|			
ANR	2405053	CastExpression	( ut16 ) ( low << 8 )		2404831	0					
ANR	2405054	CastTarget	ut16		2404831	0					
ANR	2405055	ShiftExpression	low << 8		2404831	1		<<			
ANR	2405056	Identifier	low		2404831	0					
ANR	2405057	PrimaryExpression	8		2404831	1					
ANR	2405058	ArrayIndexing	buf [ 1 ]		2404831	1					
ANR	2405059	Identifier	buf		2404831	0					
ANR	2405060	PrimaryExpression	1		2404831	1					
ANR	2405061	ExpressionStatement	op -> fail = addr + rlen	142:2:2536:2558	2404831	18	True				
ANR	2405062	AssignmentExpression	op -> fail = addr + rlen		2404831	0		=			
ANR	2405063	PtrMemberAccess	op -> fail		2404831	0					
ANR	2405064	Identifier	op		2404831	0					
ANR	2405065	Identifier	fail		2404831	1					
ANR	2405066	AdditiveExpression	addr + rlen		2404831	1		+			
ANR	2405067	Identifier	addr		2404831	0					
ANR	2405068	Identifier	rlen		2404831	1					
ANR	2405069	BreakStatement	break ;	143:2:2562:2567	2404831	19	True				
ANR	2405070	Label	case 5 :	144:1:2570:2576	2404831	20	True				
ANR	2405071	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_CALL	145:2:2653:2683	2404831	21	True				
ANR	2405072	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_CALL		2404831	0		=			
ANR	2405073	PtrMemberAccess	op -> type		2404831	0					
ANR	2405074	Identifier	op		2404831	0					
ANR	2405075	Identifier	type		2404831	1					
ANR	2405076	Identifier	R_ANAL_OP_TYPE_CALL		2404831	1					
ANR	2405077	ExpressionStatement	op -> jump = ( ut16 ) ( low << 8 ) | buf [ 1 ]	146:2:2687:2722	2404831	22	True				
ANR	2405078	AssignmentExpression	op -> jump = ( ut16 ) ( low << 8 ) | buf [ 1 ]		2404831	0		=			
ANR	2405079	PtrMemberAccess	op -> jump		2404831	0					
ANR	2405080	Identifier	op		2404831	0					
ANR	2405081	Identifier	jump		2404831	1					
ANR	2405082	InclusiveOrExpression	( ut16 ) ( low << 8 ) | buf [ 1 ]		2404831	1		|			
ANR	2405083	CastExpression	( ut16 ) ( low << 8 )		2404831	0					
ANR	2405084	CastTarget	ut16		2404831	0					
ANR	2405085	ShiftExpression	low << 8		2404831	1		<<			
ANR	2405086	Identifier	low		2404831	0					
ANR	2405087	PrimaryExpression	8		2404831	1					
ANR	2405088	ArrayIndexing	buf [ 1 ]		2404831	1					
ANR	2405089	Identifier	buf		2404831	0					
ANR	2405090	PrimaryExpression	1		2404831	1					
ANR	2405091	ExpressionStatement	op -> fail = addr + rlen	147:2:2726:2748	2404831	23	True				
ANR	2405092	AssignmentExpression	op -> fail = addr + rlen		2404831	0		=			
ANR	2405093	PtrMemberAccess	op -> fail		2404831	0					
ANR	2405094	Identifier	op		2404831	0					
ANR	2405095	Identifier	fail		2404831	1					
ANR	2405096	AdditiveExpression	addr + rlen		2404831	1		+			
ANR	2405097	Identifier	addr		2404831	0					
ANR	2405098	Identifier	rlen		2404831	1					
ANR	2405099	BreakStatement	break ;	148:2:2752:2757	2404831	24	True				
ANR	2405100	Label	case 6 :	149:1:2760:2766	2404831	25	True				
ANR	2405101	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ADD	150:2:2818:2847	2404831	26	True				
ANR	2405102	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ADD		2404831	0		=			
ANR	2405103	PtrMemberAccess	op -> type		2404831	0					
ANR	2405104	Identifier	op		2404831	0					
ANR	2405105	Identifier	type		2404831	1					
ANR	2405106	Identifier	R_ANAL_OP_TYPE_ADD		2404831	1					
ANR	2405107	BreakStatement	break ;	151:2:2851:2856	2404831	27	True				
ANR	2405108	Label	case 7 :	152:1:2859:2865	2404831	28	True				
ANR	2405109	ExpressionStatement	"snprintf ( basm , basz , ""isz r%d, 0x%02x"" , low , buf [ 1 ] )"	152:9:2867:2920	2404831	29	True				
ANR	2405110	CallExpression	"snprintf ( basm , basz , ""isz r%d, 0x%02x"" , low , buf [ 1 ] )"		2404831	0					
ANR	2405111	Callee	snprintf		2404831	0					
ANR	2405112	Identifier	snprintf		2404831	0					
ANR	2405113	ArgumentList	basm		2404831	1					
ANR	2405114	Argument	basm		2404831	0					
ANR	2405115	Identifier	basm		2404831	0					
ANR	2405116	Argument	basz		2404831	1					
ANR	2405117	Identifier	basz		2404831	0					
ANR	2405118	Argument	"""isz r%d, 0x%02x"""		2404831	2					
ANR	2405119	PrimaryExpression	"""isz r%d, 0x%02x"""		2404831	0					
ANR	2405120	Argument	low		2404831	3					
ANR	2405121	Identifier	low		2404831	0					
ANR	2405122	Argument	buf [ 1 ]		2404831	4					
ANR	2405123	ArrayIndexing	buf [ 1 ]		2404831	0					
ANR	2405124	Identifier	buf		2404831	0					
ANR	2405125	PrimaryExpression	1		2404831	1					
ANR	2405126	BreakStatement	break ;	152:64:2922:2927	2404831	30	True				
ANR	2405127	Label	case 8 :	153:1:2930:2936	2404831	31	True				
ANR	2405128	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ADD	154:2:2940:2969	2404831	32	True				
ANR	2405129	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ADD		2404831	0		=			
ANR	2405130	PtrMemberAccess	op -> type		2404831	0					
ANR	2405131	Identifier	op		2404831	0					
ANR	2405132	Identifier	type		2404831	1					
ANR	2405133	Identifier	R_ANAL_OP_TYPE_ADD		2404831	1					
ANR	2405134	BreakStatement	break ;	156:2:3023:3028	2404831	33	True				
ANR	2405135	Label	case 9 :	157:1:3031:3037	2404831	34	True				
ANR	2405136	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SUB	158:2:3041:3070	2404831	35	True				
ANR	2405137	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SUB		2404831	0		=			
ANR	2405138	PtrMemberAccess	op -> type		2404831	0					
ANR	2405139	Identifier	op		2404831	0					
ANR	2405140	Identifier	type		2404831	1					
ANR	2405141	Identifier	R_ANAL_OP_TYPE_SUB		2404831	1					
ANR	2405142	BreakStatement	break ;	160:2:3124:3129	2404831	36	True				
ANR	2405143	Label	case 10 :	161:1:3132:3139	2404831	37	True				
ANR	2405144	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_MOV	162:2:3190:3219	2404831	38	True				
ANR	2405145	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_MOV		2404831	0		=			
ANR	2405146	PtrMemberAccess	op -> type		2404831	0					
ANR	2405147	Identifier	op		2404831	0					
ANR	2405148	Identifier	type		2404831	1					
ANR	2405149	Identifier	R_ANAL_OP_TYPE_MOV		2404831	1					
ANR	2405150	BreakStatement	break ;	163:2:3223:3228	2404831	39	True				
ANR	2405151	Label	case 11 :	164:1:3231:3238	2404831	40	True				
ANR	2405152	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_XCHG	165:2:3290:3320	2404831	41	True				
ANR	2405153	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_XCHG		2404831	0		=			
ANR	2405154	PtrMemberAccess	op -> type		2404831	0					
ANR	2405155	Identifier	op		2404831	0					
ANR	2405156	Identifier	type		2404831	1					
ANR	2405157	Identifier	R_ANAL_OP_TYPE_XCHG		2404831	1					
ANR	2405158	BreakStatement	break ;	166:2:3324:3329	2404831	42	True				
ANR	2405159	Label	case 12 :	167:1:3332:3339	2404831	43	True				
ANR	2405160	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_RET	168:2:3390:3419	2404831	44	True				
ANR	2405161	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_RET		2404831	0		=			
ANR	2405162	PtrMemberAccess	op -> type		2404831	0					
ANR	2405163	Identifier	op		2404831	0					
ANR	2405164	Identifier	type		2404831	1					
ANR	2405165	Identifier	R_ANAL_OP_TYPE_RET		2404831	1					
ANR	2405166	BreakStatement	break ;	169:2:3423:3428	2404831	45	True				
ANR	2405167	Label	case 13 :	170:1:3431:3438	2404831	46	True				
ANR	2405168	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_LOAD	171:2:3442:3472	2404831	47	True				
ANR	2405169	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_LOAD		2404831	0		=			
ANR	2405170	PtrMemberAccess	op -> type		2404831	0					
ANR	2405171	Identifier	op		2404831	0					
ANR	2405172	Identifier	type		2404831	1					
ANR	2405173	Identifier	R_ANAL_OP_TYPE_LOAD		2404831	1					
ANR	2405174	BreakStatement	break ;	173:2:3525:3530	2404831	48	True				
ANR	2405175	Label	case 14 :	174:1:3533:3540	2404831	49	True				
ANR	2405176	ExpressionStatement	"strncpy ( basm , i4004_e [ low ] , basz )"	175:2:3544:3578	2404831	50	True				
ANR	2405177	CallExpression	"strncpy ( basm , i4004_e [ low ] , basz )"		2404831	0					
ANR	2405178	Callee	strncpy		2404831	0					
ANR	2405179	Identifier	strncpy		2404831	0					
ANR	2405180	ArgumentList	basm		2404831	1					
ANR	2405181	Argument	basm		2404831	0					
ANR	2405182	Identifier	basm		2404831	0					
ANR	2405183	Argument	i4004_e [ low ]		2404831	1					
ANR	2405184	ArrayIndexing	i4004_e [ low ]		2404831	0					
ANR	2405185	Identifier	i4004_e		2404831	0					
ANR	2405186	Identifier	low		2404831	1					
ANR	2405187	Argument	basz		2404831	2					
ANR	2405188	Identifier	basz		2404831	0					
ANR	2405189	ExpressionStatement	basm [ basz ] = '\\0'	176:2:3582:3599	2404831	51	True				
ANR	2405190	AssignmentExpression	basm [ basz ] = '\\0'		2404831	0		=			
ANR	2405191	ArrayIndexing	basm [ basz ]		2404831	0					
ANR	2405192	Identifier	basm		2404831	0					
ANR	2405193	Identifier	basz		2404831	1					
ANR	2405194	PrimaryExpression	'\\0'		2404831	1					
ANR	2405195	BreakStatement	break ;	177:2:3603:3608	2404831	52	True				
ANR	2405196	Label	case 15 :	178:1:3611:3618	2404831	53	True				
ANR	2405197	ExpressionStatement	"strncpy ( basm , i4004_f [ low ] , basz )"	179:2:3622:3656	2404831	54	True				
ANR	2405198	CallExpression	"strncpy ( basm , i4004_f [ low ] , basz )"		2404831	0					
ANR	2405199	Callee	strncpy		2404831	0					
ANR	2405200	Identifier	strncpy		2404831	0					
ANR	2405201	ArgumentList	basm		2404831	1					
ANR	2405202	Argument	basm		2404831	0					
ANR	2405203	Identifier	basm		2404831	0					
ANR	2405204	Argument	i4004_f [ low ]		2404831	1					
ANR	2405205	ArrayIndexing	i4004_f [ low ]		2404831	0					
ANR	2405206	Identifier	i4004_f		2404831	0					
ANR	2405207	Identifier	low		2404831	1					
ANR	2405208	Argument	basz		2404831	2					
ANR	2405209	Identifier	basz		2404831	0					
ANR	2405210	ExpressionStatement	basm [ basz ] = '\\0'	180:2:3660:3677	2404831	55	True				
ANR	2405211	AssignmentExpression	basm [ basz ] = '\\0'		2404831	0		=			
ANR	2405212	ArrayIndexing	basm [ basz ]		2404831	0					
ANR	2405213	Identifier	basm		2404831	0					
ANR	2405214	Identifier	basz		2404831	1					
ANR	2405215	PrimaryExpression	'\\0'		2404831	1					
ANR	2405216	IfStatement	"if ( ! strcmp ( basm , ""dac"" ) )"		2404831	56					
ANR	2405217	Condition	"! strcmp ( basm , ""dac"" )"	181:6:3685:3705	2404831	0	True				
ANR	2405218	UnaryOperationExpression	"! strcmp ( basm , ""dac"" )"		2404831	0					
ANR	2405219	UnaryOperator	!		2404831	0					
ANR	2405220	CallExpression	"strcmp ( basm , ""dac"" )"		2404831	1					
ANR	2405221	Callee	strcmp		2404831	0					
ANR	2405222	Identifier	strcmp		2404831	0					
ANR	2405223	ArgumentList	basm		2404831	1					
ANR	2405224	Argument	basm		2404831	0					
ANR	2405225	Identifier	basm		2404831	0					
ANR	2405226	Argument	"""dac"""		2404831	1					
ANR	2405227	PrimaryExpression	"""dac"""		2404831	0					
ANR	2405228	CompoundStatement		82:29:2080:2080	2404831	1					
ANR	2405229	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SUB	182:3:3713:3742	2404831	0	True				
ANR	2405230	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SUB		2404831	0		=			
ANR	2405231	PtrMemberAccess	op -> type		2404831	0					
ANR	2405232	Identifier	op		2404831	0					
ANR	2405233	Identifier	type		2404831	1					
ANR	2405234	Identifier	R_ANAL_OP_TYPE_SUB		2404831	1					
ANR	2405235	BreakStatement	break ;	184:2:3750:3755	2404831	57	True				
ANR	2405236	IfStatement	"if ( ! strcmp ( basm , ""invalid"" ) )"		2404831	10					
ANR	2405237	Condition	"! strcmp ( basm , ""invalid"" )"	186:5:3765:3789	2404831	0	True				
ANR	2405238	UnaryOperationExpression	"! strcmp ( basm , ""invalid"" )"		2404831	0					
ANR	2405239	UnaryOperator	!		2404831	0					
ANR	2405240	CallExpression	"strcmp ( basm , ""invalid"" )"		2404831	1					
ANR	2405241	Callee	strcmp		2404831	0					
ANR	2405242	Identifier	strcmp		2404831	0					
ANR	2405243	ArgumentList	basm		2404831	1					
ANR	2405244	Argument	basm		2404831	0					
ANR	2405245	Identifier	basm		2404831	0					
ANR	2405246	Argument	"""invalid"""		2404831	1					
ANR	2405247	PrimaryExpression	"""invalid"""		2404831	0					
ANR	2405248	CompoundStatement		87:32:2164:2164	2404831	1					
ANR	2405249	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_ILL	187:2:3796:3825	2404831	0	True				
ANR	2405250	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_ILL		2404831	0		=			
ANR	2405251	PtrMemberAccess	op -> type		2404831	0					
ANR	2405252	Identifier	op		2404831	0					
ANR	2405253	Identifier	type		2404831	1					
ANR	2405254	Identifier	R_ANAL_OP_TYPE_ILL		2404831	1					
ANR	2405255	ElseStatement	else		2404831	0					
ANR	2405256	IfStatement	"if ( ! strcmp ( basm , ""ral"" ) )"		2404831	0					
ANR	2405257	Condition	"! strcmp ( basm , ""ral"" )"	188:12:3839:3859	2404831	0	True				
ANR	2405258	UnaryOperationExpression	"! strcmp ( basm , ""ral"" )"		2404831	0					
ANR	2405259	UnaryOperator	!		2404831	0					
ANR	2405260	CallExpression	"strcmp ( basm , ""ral"" )"		2404831	1					
ANR	2405261	Callee	strcmp		2404831	0					
ANR	2405262	Identifier	strcmp		2404831	0					
ANR	2405263	ArgumentList	basm		2404831	1					
ANR	2405264	Argument	basm		2404831	0					
ANR	2405265	Identifier	basm		2404831	0					
ANR	2405266	Argument	"""ral"""		2404831	1					
ANR	2405267	PrimaryExpression	"""ral"""		2404831	0					
ANR	2405268	CompoundStatement		89:35:2234:2234	2404831	1					
ANR	2405269	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SHL	189:2:3866:3895	2404831	0	True				
ANR	2405270	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SHL		2404831	0		=			
ANR	2405271	PtrMemberAccess	op -> type		2404831	0					
ANR	2405272	Identifier	op		2404831	0					
ANR	2405273	Identifier	type		2404831	1					
ANR	2405274	Identifier	R_ANAL_OP_TYPE_SHL		2404831	1					
ANR	2405275	ElseStatement	else		2404831	0					
ANR	2405276	IfStatement	"if ( ! strcmp ( basm , ""rar"" ) )"		2404831	0					
ANR	2405277	Condition	"! strcmp ( basm , ""rar"" )"	190:12:3909:3929	2404831	0	True				
ANR	2405278	UnaryOperationExpression	"! strcmp ( basm , ""rar"" )"		2404831	0					
ANR	2405279	UnaryOperator	!		2404831	0					
ANR	2405280	CallExpression	"strcmp ( basm , ""rar"" )"		2404831	1					
ANR	2405281	Callee	strcmp		2404831	0					
ANR	2405282	Identifier	strcmp		2404831	0					
ANR	2405283	ArgumentList	basm		2404831	1					
ANR	2405284	Argument	basm		2404831	0					
ANR	2405285	Identifier	basm		2404831	0					
ANR	2405286	Argument	"""rar"""		2404831	1					
ANR	2405287	PrimaryExpression	"""rar"""		2404831	0					
ANR	2405288	CompoundStatement		91:35:2304:2304	2404831	1					
ANR	2405289	ExpressionStatement	op -> type = R_ANAL_OP_TYPE_SHR	191:2:3936:3965	2404831	0	True				
ANR	2405290	AssignmentExpression	op -> type = R_ANAL_OP_TYPE_SHR		2404831	0		=			
ANR	2405291	PtrMemberAccess	op -> type		2404831	0					
ANR	2405292	Identifier	op		2404831	0					
ANR	2405293	Identifier	type		2404831	1					
ANR	2405294	Identifier	R_ANAL_OP_TYPE_SHR		2404831	1					
ANR	2405295	ReturnStatement	return op -> size = rlen ;	193:1:3971:3993	2404831	11	True				
ANR	2405296	AssignmentExpression	op -> size = rlen		2404831	0		=			
ANR	2405297	PtrMemberAccess	op -> size		2404831	0					
ANR	2405298	Identifier	op		2404831	0					
ANR	2405299	Identifier	size		2404831	1					
ANR	2405300	Identifier	rlen		2404831	1					
ANR	2405301	ReturnType	static int		2404831	1					
ANR	2405302	Identifier	i4004_op		2404831	2					
ANR	2405303	ParameterList	"RAnal * anal , RAnalOp * op , ut64 addr , const ut8 * buf , int len , RAnalOpMask mask"		2404831	3					
ANR	2405304	Parameter	RAnal * anal	100:20:1547:1557	2404831	0	True				
ANR	2405305	ParameterType	RAnal *		2404831	0					
ANR	2405306	Identifier	anal		2404831	1					
ANR	2405307	Parameter	RAnalOp * op	100:33:1560:1570	2404831	1	True				
ANR	2405308	ParameterType	RAnalOp *		2404831	0					
ANR	2405309	Identifier	op		2404831	1					
ANR	2405310	Parameter	ut64 addr	100:46:1573:1581	2404831	2	True				
ANR	2405311	ParameterType	ut64		2404831	0					
ANR	2405312	Identifier	addr		2404831	1					
ANR	2405313	Parameter	const ut8 * buf	100:57:1584:1597	2404831	3	True				
ANR	2405314	ParameterType	const ut8 *		2404831	0					
ANR	2405315	Identifier	buf		2404831	1					
ANR	2405316	Parameter	int len	100:73:1600:1606	2404831	4	True				
ANR	2405317	ParameterType	int		2404831	0					
ANR	2405318	Identifier	len		2404831	1					
ANR	2405319	Parameter	RAnalOpMask mask	100:82:1609:1624	2404831	5	True				
ANR	2405320	ParameterType	RAnalOpMask		2404831	0					
ANR	2405321	Identifier	mask		2404831	1					
ANR	2405322	CFGEntryNode	ENTRY		2404831		True				
ANR	2405323	CFGExitNode	EXIT		2404831		True				
ANR	2405324	Symbol	R_ANAL_OP_TYPE_SUB		2404831						
ANR	2405325	Symbol	* basz		2404831						
ANR	2405326	Symbol	i4004_get_ins_len		2404831						
ANR	2405327	Symbol	& op -> esil		2404831						
ANR	2405328	Symbol	R_ANAL_OP_TYPE_SHR		2404831						
ANR	2405329	Symbol	* op		2404831						
ANR	2405330	Symbol	basz		2404831						
ANR	2405331	Symbol	R_ANAL_OP_TYPE_SHL		2404831						
ANR	2405332	Symbol	R_ANAL_OP_TYPE_LOAD		2404831						
ANR	2405333	Symbol	op -> fail		2404831						
ANR	2405334	Symbol	high		2404831						
ANR	2405335	Symbol	* basm		2404831						
ANR	2405336	Symbol	len		2404831						
ANR	2405337	Symbol	low		2404831						
ANR	2405338	Symbol	rlen		2404831						
ANR	2405339	Symbol	R_ANAL_OP_TYPE_ILL		2404831						
ANR	2405340	Symbol	op -> jump		2404831						
ANR	2405341	Symbol	R_ANAL_OP_TYPE_XCHG		2404831						
ANR	2405342	Symbol	addr		2404831						
ANR	2405343	Symbol	* i4004_e		2404831						
ANR	2405344	Symbol	mask		2404831						
ANR	2405345	Symbol	R_ANAL_OP_TYPE_ADD		2404831						
ANR	2405346	Symbol	R_ANAL_OP_TYPE_RET		2404831						
ANR	2405347	Symbol	* i4004_f		2404831						
ANR	2405348	Symbol	strcmp		2404831						
ANR	2405349	Symbol	op		2404831						
ANR	2405350	Symbol	* buf		2404831						
ANR	2405351	Symbol	R_ANAL_OP_TYPE_CJMP		2404831						
ANR	2405352	Symbol	op -> type		2404831						
ANR	2405353	Symbol	i4004_e		2404831						
ANR	2405354	Symbol	R_ANAL_OP_TYPE_MOV		2404831						
ANR	2405355	Symbol	R_ANAL_OP_TYPE_NOP		2404831						
ANR	2405356	Symbol	buf		2404831						
ANR	2405357	Symbol	anal		2404831						
ANR	2405358	Symbol	i4004_f		2404831						
ANR	2405359	Symbol	R_ANAL_OP_TYPE_CALL		2404831						
ANR	2405360	Symbol	basm		2404831						
ANR	2405361	Symbol	op -> size		2404831						
ANR	2405362	Symbol	* low		2404831						
ANR	2405363	DeclStmt									
ANR	2405364	Decl							RAnalPlugin	RAnalPlugin	r_anal_plugin_i4004
ANR	2405365	DeclStmt									
ANR	2405366	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
