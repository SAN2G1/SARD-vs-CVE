command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4799110	File	data/converged/CVE-2019-16718~_radare2/libr_fs_fs.c								
ANR	4799111	DeclStmt									
ANR	4799112	Decl							RFSPlugin	RFSPlugin * [ ]	fs_static_plugins
ANR	4799113	Function	r_fs_new	21:0:347:1045							
ANR	4799114	FunctionDef	r_fs_new ()		4799113	0					
ANR	4799115	CompoundStatement		21:22:369:1045	4799113	0					
ANR	4799116	IdentifierDeclStatement	int i ;	22:1:372:377	4799113	0	True				
ANR	4799117	IdentifierDecl	i		4799113	0					
ANR	4799118	IdentifierDeclType	int		4799113	0					
ANR	4799119	Identifier	i		4799113	1					
ANR	4799120	IdentifierDeclStatement	RFSPlugin * static_plugin ;	23:1:380:404	4799113	1	True				
ANR	4799121	IdentifierDecl	* static_plugin		4799113	0					
ANR	4799122	IdentifierDeclType	RFSPlugin *		4799113	0					
ANR	4799123	Identifier	static_plugin		4799113	1					
ANR	4799124	IdentifierDeclStatement	RFS * fs = R_NEW0 ( RFS ) ;	24:1:407:429	4799113	2	True				
ANR	4799125	IdentifierDecl	* fs = R_NEW0 ( RFS )		4799113	0					
ANR	4799126	IdentifierDeclType	RFS *		4799113	0					
ANR	4799127	Identifier	fs		4799113	1					
ANR	4799128	AssignmentExpression	* fs = R_NEW0 ( RFS )		4799113	2		=			
ANR	4799129	Identifier	fs		4799113	0					
ANR	4799130	CallExpression	R_NEW0 ( RFS )		4799113	1					
ANR	4799131	Callee	R_NEW0		4799113	0					
ANR	4799132	Identifier	R_NEW0		4799113	0					
ANR	4799133	ArgumentList	RFS		4799113	1					
ANR	4799134	Argument	RFS		4799113	0					
ANR	4799135	Identifier	RFS		4799113	0					
ANR	4799136	IfStatement	if ( fs )		4799113	3					
ANR	4799137	Condition	fs	25:5:436:437	4799113	0	True				
ANR	4799138	Identifier	fs		4799113	0					
ANR	4799139	CompoundStatement		5:9:70:70	4799113	1					
ANR	4799140	ExpressionStatement	fs -> view = R_FS_VIEW_NORMAL	26:2:444:471	4799113	0	True				
ANR	4799141	AssignmentExpression	fs -> view = R_FS_VIEW_NORMAL		4799113	0		=			
ANR	4799142	PtrMemberAccess	fs -> view		4799113	0					
ANR	4799143	Identifier	fs		4799113	0					
ANR	4799144	Identifier	view		4799113	1					
ANR	4799145	Identifier	R_FS_VIEW_NORMAL		4799113	1					
ANR	4799146	ExpressionStatement	fs -> roots = r_list_new ( )	27:2:475:500	4799113	1	True				
ANR	4799147	AssignmentExpression	fs -> roots = r_list_new ( )		4799113	0		=			
ANR	4799148	PtrMemberAccess	fs -> roots		4799113	0					
ANR	4799149	Identifier	fs		4799113	0					
ANR	4799150	Identifier	roots		4799113	1					
ANR	4799151	CallExpression	r_list_new ( )		4799113	1					
ANR	4799152	Callee	r_list_new		4799113	0					
ANR	4799153	Identifier	r_list_new		4799113	0					
ANR	4799154	ArgumentList			4799113	1					
ANR	4799155	IfStatement	if ( ! fs -> roots )		4799113	2					
ANR	4799156	Condition	! fs -> roots	28:6:508:517	4799113	0	True				
ANR	4799157	UnaryOperationExpression	! fs -> roots		4799113	0					
ANR	4799158	UnaryOperator	!		4799113	0					
ANR	4799159	PtrMemberAccess	fs -> roots		4799113	1					
ANR	4799160	Identifier	fs		4799113	0					
ANR	4799161	Identifier	roots		4799113	1					
ANR	4799162	CompoundStatement		8:18:150:150	4799113	1					
ANR	4799163	ExpressionStatement	r_fs_free ( fs )	29:3:525:539	4799113	0	True				
ANR	4799164	CallExpression	r_fs_free ( fs )		4799113	0					
ANR	4799165	Callee	r_fs_free		4799113	0					
ANR	4799166	Identifier	r_fs_free		4799113	0					
ANR	4799167	ArgumentList	fs		4799113	1					
ANR	4799168	Argument	fs		4799113	0					
ANR	4799169	Identifier	fs		4799113	0					
ANR	4799170	ReturnStatement	return NULL ;	30:3:544:555	4799113	1	True				
ANR	4799171	Identifier	NULL		4799113	0					
ANR	4799172	ExpressionStatement	fs -> roots -> free = ( RListFree ) r_fs_root_free	32:2:563:607	4799113	3	True				
ANR	4799173	AssignmentExpression	fs -> roots -> free = ( RListFree ) r_fs_root_free		4799113	0		=			
ANR	4799174	PtrMemberAccess	fs -> roots -> free		4799113	0					
ANR	4799175	PtrMemberAccess	fs -> roots		4799113	0					
ANR	4799176	Identifier	fs		4799113	0					
ANR	4799177	Identifier	roots		4799113	1					
ANR	4799178	Identifier	free		4799113	1					
ANR	4799179	CastExpression	( RListFree ) r_fs_root_free		4799113	1					
ANR	4799180	CastTarget	RListFree		4799113	0					
ANR	4799181	Identifier	r_fs_root_free		4799113	1					
ANR	4799182	ExpressionStatement	fs -> plugins = r_list_new ( )	33:2:611:638	4799113	4	True				
ANR	4799183	AssignmentExpression	fs -> plugins = r_list_new ( )		4799113	0		=			
ANR	4799184	PtrMemberAccess	fs -> plugins		4799113	0					
ANR	4799185	Identifier	fs		4799113	0					
ANR	4799186	Identifier	plugins		4799113	1					
ANR	4799187	CallExpression	r_list_new ( )		4799113	1					
ANR	4799188	Callee	r_list_new		4799113	0					
ANR	4799189	Identifier	r_list_new		4799113	0					
ANR	4799190	ArgumentList			4799113	1					
ANR	4799191	IfStatement	if ( ! fs -> plugins )		4799113	5					
ANR	4799192	Condition	! fs -> plugins	34:6:646:657	4799113	0	True				
ANR	4799193	UnaryOperationExpression	! fs -> plugins		4799113	0					
ANR	4799194	UnaryOperator	!		4799113	0					
ANR	4799195	PtrMemberAccess	fs -> plugins		4799113	1					
ANR	4799196	Identifier	fs		4799113	0					
ANR	4799197	Identifier	plugins		4799113	1					
ANR	4799198	CompoundStatement		14:20:290:290	4799113	1					
ANR	4799199	ExpressionStatement	r_fs_free ( fs )	35:3:665:679	4799113	0	True				
ANR	4799200	CallExpression	r_fs_free ( fs )		4799113	0					
ANR	4799201	Callee	r_fs_free		4799113	0					
ANR	4799202	Identifier	r_fs_free		4799113	0					
ANR	4799203	ArgumentList	fs		4799113	1					
ANR	4799204	Argument	fs		4799113	0					
ANR	4799205	Identifier	fs		4799113	0					
ANR	4799206	ReturnStatement	return NULL ;	36:3:684:695	4799113	1	True				
ANR	4799207	Identifier	NULL		4799113	0					
ANR	4799208	ExpressionStatement	fs -> plugins -> free = free	38:2:703:727	4799113	6	True				
ANR	4799209	AssignmentExpression	fs -> plugins -> free = free		4799113	0		=			
ANR	4799210	PtrMemberAccess	fs -> plugins -> free		4799113	0					
ANR	4799211	PtrMemberAccess	fs -> plugins		4799113	0					
ANR	4799212	Identifier	fs		4799113	0					
ANR	4799213	Identifier	plugins		4799113	1					
ANR	4799214	Identifier	free		4799113	1					
ANR	4799215	Identifier	free		4799113	1					
ANR	4799216	ForStatement	for ( i = 0 ; fs_static_plugins [ i ] ; i ++ )		4799113	7					
ANR	4799217	ForInit	i = 0 ;	40:7:781:786	4799113	0	True				
ANR	4799218	AssignmentExpression	i = 0		4799113	0		=			
ANR	4799219	Identifier	i		4799113	0					
ANR	4799220	PrimaryExpression	0		4799113	1					
ANR	4799221	Condition	fs_static_plugins [ i ]	40:14:788:807	4799113	1	True				
ANR	4799222	ArrayIndexing	fs_static_plugins [ i ]		4799113	0					
ANR	4799223	Identifier	fs_static_plugins		4799113	0					
ANR	4799224	Identifier	i		4799113	1					
ANR	4799225	PostIncDecOperationExpression	i ++	40:36:810:812	4799113	2	True				
ANR	4799226	Identifier	i		4799113	0					
ANR	4799227	IncDec	++		4799113	1					
ANR	4799228	CompoundStatement		20:41:445:445	4799113	3					
ANR	4799229	ExpressionStatement	static_plugin = R_NEW ( RFSPlugin )	41:3:820:853	4799113	0	True				
ANR	4799230	AssignmentExpression	static_plugin = R_NEW ( RFSPlugin )		4799113	0		=			
ANR	4799231	Identifier	static_plugin		4799113	0					
ANR	4799232	CallExpression	R_NEW ( RFSPlugin )		4799113	1					
ANR	4799233	Callee	R_NEW		4799113	0					
ANR	4799234	Identifier	R_NEW		4799113	0					
ANR	4799235	ArgumentList	RFSPlugin		4799113	1					
ANR	4799236	Argument	RFSPlugin		4799113	0					
ANR	4799237	Identifier	RFSPlugin		4799113	0					
ANR	4799238	IfStatement	if ( ! static_plugin )		4799113	1					
ANR	4799239	Condition	! static_plugin	42:7:862:875	4799113	0	True				
ANR	4799240	UnaryOperationExpression	! static_plugin		4799113	0					
ANR	4799241	UnaryOperator	!		4799113	0					
ANR	4799242	Identifier	static_plugin		4799113	1					
ANR	4799243	CompoundStatement		22:23:508:508	4799113	1					
ANR	4799244	ContinueStatement	continue ;	43:4:884:892	4799113	0	True				
ANR	4799245	ExpressionStatement	"memcpy ( static_plugin , fs_static_plugins [ i ] , sizeof ( RFSPlugin ) )"	45:3:902:966	4799113	2	True				
ANR	4799246	CallExpression	"memcpy ( static_plugin , fs_static_plugins [ i ] , sizeof ( RFSPlugin ) )"		4799113	0					
ANR	4799247	Callee	memcpy		4799113	0					
ANR	4799248	Identifier	memcpy		4799113	0					
ANR	4799249	ArgumentList	static_plugin		4799113	1					
ANR	4799250	Argument	static_plugin		4799113	0					
ANR	4799251	Identifier	static_plugin		4799113	0					
ANR	4799252	Argument	fs_static_plugins [ i ]		4799113	1					
ANR	4799253	ArrayIndexing	fs_static_plugins [ i ]		4799113	0					
ANR	4799254	Identifier	fs_static_plugins		4799113	0					
ANR	4799255	Identifier	i		4799113	1					
ANR	4799256	Argument	sizeof ( RFSPlugin )		4799113	2					
ANR	4799257	SizeofExpression	sizeof ( RFSPlugin )		4799113	0					
ANR	4799258	Sizeof	sizeof		4799113	0					
ANR	4799259	SizeofOperand	RFSPlugin		4799113	1					
ANR	4799260	ExpressionStatement	"r_fs_add ( fs , static_plugin )"	46:3:971:999	4799113	3	True				
ANR	4799261	CallExpression	"r_fs_add ( fs , static_plugin )"		4799113	0					
ANR	4799262	Callee	r_fs_add		4799113	0					
ANR	4799263	Identifier	r_fs_add		4799113	0					
ANR	4799264	ArgumentList	fs		4799113	1					
ANR	4799265	Argument	fs		4799113	0					
ANR	4799266	Identifier	fs		4799113	0					
ANR	4799267	Argument	static_plugin		4799113	1					
ANR	4799268	Identifier	static_plugin		4799113	0					
ANR	4799269	ExpressionStatement	free ( static_plugin )	47:3:1004:1024	4799113	4	True				
ANR	4799270	CallExpression	free ( static_plugin )		4799113	0					
ANR	4799271	Callee	free		4799113	0					
ANR	4799272	Identifier	free		4799113	0					
ANR	4799273	ArgumentList	static_plugin		4799113	1					
ANR	4799274	Argument	static_plugin		4799113	0					
ANR	4799275	Identifier	static_plugin		4799113	0					
ANR	4799276	ReturnStatement	return fs ;	50:1:1034:1043	4799113	4	True				
ANR	4799277	Identifier	fs		4799113	0					
ANR	4799278	ReturnType	R_API RFS *		4799113	1					
ANR	4799279	Identifier	r_fs_new		4799113	2					
ANR	4799280	ParameterList			4799113	3					
ANR	4799281	CFGEntryNode	ENTRY		4799113		True				
ANR	4799282	CFGExitNode	EXIT		4799113		True				
ANR	4799283	Symbol	fs -> roots		4799113						
ANR	4799284	Symbol	static_plugin		4799113						
ANR	4799285	Symbol	NULL		4799113						
ANR	4799286	Symbol	fs -> roots -> free		4799113						
ANR	4799287	Symbol	fs -> view		4799113						
ANR	4799288	Symbol	fs -> plugins		4799113						
ANR	4799289	Symbol	* fs_static_plugins		4799113						
ANR	4799290	Symbol	R_FS_VIEW_NORMAL		4799113						
ANR	4799291	Symbol	fs -> plugins -> free		4799113						
ANR	4799292	Symbol	i		4799113						
ANR	4799293	Symbol	fs		4799113						
ANR	4799294	Symbol	* fs		4799113						
ANR	4799295	Symbol	r_fs_root_free		4799113						
ANR	4799296	Symbol	R_NEW0		4799113						
ANR	4799297	Symbol	* i		4799113						
ANR	4799298	Symbol	* fs -> roots		4799113						
ANR	4799299	Symbol	* fs -> plugins		4799113						
ANR	4799300	Symbol	* * fs		4799113						
ANR	4799301	Symbol	free		4799113						
ANR	4799302	Symbol	R_NEW		4799113						
ANR	4799303	Symbol	RFSPlugin		4799113						
ANR	4799304	Symbol	RFS		4799113						
ANR	4799305	Symbol	fs_static_plugins		4799113						
ANR	4799306	Symbol	r_list_new		4799113						
ANR	4799307	Function	r_fs_plugin_get	53:0:1048:1290							
ANR	4799308	FunctionDef	"r_fs_plugin_get (RFS * fs , const char * name)"		4799307	0					
ANR	4799309	CompoundStatement		53:60:1108:1290	4799307	0					
ANR	4799310	IdentifierDeclStatement	RListIter * iter ;	54:1:1111:1126	4799307	0	True				
ANR	4799311	IdentifierDecl	* iter		4799307	0					
ANR	4799312	IdentifierDeclType	RListIter *		4799307	0					
ANR	4799313	Identifier	iter		4799307	1					
ANR	4799314	IdentifierDeclStatement	RFSPlugin * p ;	55:1:1129:1141	4799307	1	True				
ANR	4799315	IdentifierDecl	* p		4799307	0					
ANR	4799316	IdentifierDeclType	RFSPlugin *		4799307	0					
ANR	4799317	Identifier	p		4799307	1					
ANR	4799318	IfStatement	if ( ! fs || ! name )		4799307	2					
ANR	4799319	Condition	! fs || ! name	56:5:1148:1159	4799307	0	True				
ANR	4799320	OrExpression	! fs || ! name		4799307	0		||			
ANR	4799321	UnaryOperationExpression	! fs		4799307	0					
ANR	4799322	UnaryOperator	!		4799307	0					
ANR	4799323	Identifier	fs		4799307	1					
ANR	4799324	UnaryOperationExpression	! name		4799307	1					
ANR	4799325	UnaryOperator	!		4799307	0					
ANR	4799326	Identifier	name		4799307	1					
ANR	4799327	CompoundStatement		4:19:53:53	4799307	1					
ANR	4799328	ReturnStatement	return NULL ;	57:2:1166:1177	4799307	0	True				
ANR	4799329	Identifier	NULL		4799307	0					
ANR	4799330	Statement	r_list_foreach	59:1:1183:1196	4799307	3	True				
ANR	4799331	Statement	(	59:16:1198:1198	4799307	4	True				
ANR	4799332	Statement	fs	59:17:1199:1200	4799307	5	True				
ANR	4799333	Statement	->	59:19:1201:1202	4799307	6	True				
ANR	4799334	Statement	plugins	59:21:1203:1209	4799307	7	True				
ANR	4799335	Statement	","	59:28:1210:1210	4799307	8	True				
ANR	4799336	Statement	iter	59:30:1212:1215	4799307	9	True				
ANR	4799337	Statement	","	59:34:1216:1216	4799307	10	True				
ANR	4799338	Statement	p	59:36:1218:1218	4799307	11	True				
ANR	4799339	Statement	)	59:37:1219:1219	4799307	12	True				
ANR	4799340	CompoundStatement		7:39:112:112	4799307	13					
ANR	4799341	IfStatement	"if ( ! strcmp ( p -> name , name ) )"		4799307	0					
ANR	4799342	Condition	"! strcmp ( p -> name , name )"	60:6:1229:1251	4799307	0	True				
ANR	4799343	UnaryOperationExpression	"! strcmp ( p -> name , name )"		4799307	0					
ANR	4799344	UnaryOperator	!		4799307	0					
ANR	4799345	CallExpression	"strcmp ( p -> name , name )"		4799307	1					
ANR	4799346	Callee	strcmp		4799307	0					
ANR	4799347	Identifier	strcmp		4799307	0					
ANR	4799348	ArgumentList	p -> name		4799307	1					
ANR	4799349	Argument	p -> name		4799307	0					
ANR	4799350	PtrMemberAccess	p -> name		4799307	0					
ANR	4799351	Identifier	p		4799307	0					
ANR	4799352	Identifier	name		4799307	1					
ANR	4799353	Argument	name		4799307	1					
ANR	4799354	Identifier	name		4799307	0					
ANR	4799355	CompoundStatement		8:31:145:145	4799307	1					
ANR	4799356	ReturnStatement	return p ;	61:3:1259:1267	4799307	0	True				
ANR	4799357	Identifier	p		4799307	0					
ANR	4799358	ReturnStatement	return NULL ;	64:1:1277:1288	4799307	14	True				
ANR	4799359	Identifier	NULL		4799307	0					
ANR	4799360	ReturnType	R_API RFSPlugin *		4799307	1					
ANR	4799361	Identifier	r_fs_plugin_get		4799307	2					
ANR	4799362	ParameterList	"RFS * fs , const char * name"		4799307	3					
ANR	4799363	Parameter	RFS * fs	53:33:1081:1087	4799307	0	True				
ANR	4799364	ParameterType	RFS *		4799307	0					
ANR	4799365	Identifier	fs		4799307	1					
ANR	4799366	Parameter	const char * name	53:42:1090:1105	4799307	1	True				
ANR	4799367	ParameterType	const char *		4799307	0					
ANR	4799368	Identifier	name		4799307	1					
ANR	4799369	CFGEntryNode	ENTRY		4799307		True				
ANR	4799370	CFGExitNode	EXIT		4799307		True				
ANR	4799371	Symbol	p		4799307						
ANR	4799372	Symbol	strcmp		4799307						
ANR	4799373	Symbol	NULL		4799307						
ANR	4799374	Symbol	name		4799307						
ANR	4799375	Symbol	iter		4799307						
ANR	4799376	Symbol	* p		4799307						
ANR	4799377	Symbol	p -> name		4799307						
ANR	4799378	Symbol	fs		4799307						
ANR	4799379	Function	r_fs_free	67:0:1293:1494							
ANR	4799380	FunctionDef	r_fs_free (RFS * fs)		4799379	0					
ANR	4799381	CompoundStatement		67:30:1323:1494	4799379	0					
ANR	4799382	IfStatement	if ( ! fs )		4799379	0					
ANR	4799383	Condition	! fs	68:5:1330:1332	4799379	0	True				
ANR	4799384	UnaryOperationExpression	! fs		4799379	0					
ANR	4799385	UnaryOperator	!		4799379	0					
ANR	4799386	Identifier	fs		4799379	1					
ANR	4799387	CompoundStatement		2:10:11:11	4799379	1					
ANR	4799388	ReturnStatement	return ;	69:2:1339:1345	4799379	0	True				
ANR	4799389	ExpressionStatement	r_list_free ( fs -> roots )	73:1:1429:1452	4799379	1	True				
ANR	4799390	CallExpression	r_list_free ( fs -> roots )		4799379	0					
ANR	4799391	Callee	r_list_free		4799379	0					
ANR	4799392	Identifier	r_list_free		4799379	0					
ANR	4799393	ArgumentList	fs -> roots		4799379	1					
ANR	4799394	Argument	fs -> roots		4799379	0					
ANR	4799395	PtrMemberAccess	fs -> roots		4799379	0					
ANR	4799396	Identifier	fs		4799379	0					
ANR	4799397	Identifier	roots		4799379	1					
ANR	4799398	ExpressionStatement	r_list_free ( fs -> plugins )	74:1:1455:1480	4799379	2	True				
ANR	4799399	CallExpression	r_list_free ( fs -> plugins )		4799379	0					
ANR	4799400	Callee	r_list_free		4799379	0					
ANR	4799401	Identifier	r_list_free		4799379	0					
ANR	4799402	ArgumentList	fs -> plugins		4799379	1					
ANR	4799403	Argument	fs -> plugins		4799379	0					
ANR	4799404	PtrMemberAccess	fs -> plugins		4799379	0					
ANR	4799405	Identifier	fs		4799379	0					
ANR	4799406	Identifier	plugins		4799379	1					
ANR	4799407	ExpressionStatement	free ( fs )	75:1:1483:1492	4799379	3	True				
ANR	4799408	CallExpression	free ( fs )		4799379	0					
ANR	4799409	Callee	free		4799379	0					
ANR	4799410	Identifier	free		4799379	0					
ANR	4799411	ArgumentList	fs		4799379	1					
ANR	4799412	Argument	fs		4799379	0					
ANR	4799413	Identifier	fs		4799379	0					
ANR	4799414	ReturnType	R_API void		4799379	1					
ANR	4799415	Identifier	r_fs_free		4799379	2					
ANR	4799416	ParameterList	RFS * fs		4799379	3					
ANR	4799417	Parameter	RFS * fs	67:21:1314:1320	4799379	0	True				
ANR	4799418	ParameterType	RFS *		4799379	0					
ANR	4799419	Identifier	fs		4799379	1					
ANR	4799420	CFGEntryNode	ENTRY		4799379		True				
ANR	4799421	CFGExitNode	EXIT		4799379		True				
ANR	4799422	Symbol	* fs		4799379						
ANR	4799423	Symbol	fs -> roots		4799379						
ANR	4799424	Symbol	fs -> plugins		4799379						
ANR	4799425	Symbol	fs		4799379						
ANR	4799426	Function	r_fs_add	79:0:1511:1777							
ANR	4799427	FunctionDef	"r_fs_add (RFS * fs , RFSPlugin * p)"		4799426	0					
ANR	4799428	CompoundStatement		79:43:1554:1777	4799426	0					
ANR	4799429	IfStatement	if ( p && p -> init )		4799426	0					
ANR	4799430	Condition	p && p -> init	81:5:1597:1608	4799426	0	True				
ANR	4799431	AndExpression	p && p -> init		4799426	0		&&			
ANR	4799432	Identifier	p		4799426	0					
ANR	4799433	PtrMemberAccess	p -> init		4799426	1					
ANR	4799434	Identifier	p		4799426	0					
ANR	4799435	Identifier	init		4799426	1					
ANR	4799436	CompoundStatement		3:19:56:56	4799426	1					
ANR	4799437	ExpressionStatement	p -> init ( )	82:2:1615:1625	4799426	0	True				
ANR	4799438	CallExpression	p -> init ( )		4799426	0					
ANR	4799439	Callee	p -> init		4799426	0					
ANR	4799440	PtrMemberAccess	p -> init		4799426	0					
ANR	4799441	Identifier	p		4799426	0					
ANR	4799442	Identifier	init		4799426	1					
ANR	4799443	ArgumentList			4799426	1					
ANR	4799444	IdentifierDeclStatement	RFSPlugin * sp = R_NEW0 ( RFSPlugin ) ;	84:1:1631:1665	4799426	1	True				
ANR	4799445	IdentifierDecl	* sp = R_NEW0 ( RFSPlugin )		4799426	0					
ANR	4799446	IdentifierDeclType	RFSPlugin *		4799426	0					
ANR	4799447	Identifier	sp		4799426	1					
ANR	4799448	AssignmentExpression	* sp = R_NEW0 ( RFSPlugin )		4799426	2		=			
ANR	4799449	Identifier	sp		4799426	0					
ANR	4799450	CallExpression	R_NEW0 ( RFSPlugin )		4799426	1					
ANR	4799451	Callee	R_NEW0		4799426	0					
ANR	4799452	Identifier	R_NEW0		4799426	0					
ANR	4799453	ArgumentList	RFSPlugin		4799426	1					
ANR	4799454	Argument	RFSPlugin		4799426	0					
ANR	4799455	Identifier	RFSPlugin		4799426	0					
ANR	4799456	IfStatement	if ( ! sp )		4799426	2					
ANR	4799457	Condition	! sp	85:5:1672:1674	4799426	0	True				
ANR	4799458	UnaryOperationExpression	! sp		4799426	0					
ANR	4799459	UnaryOperator	!		4799426	0					
ANR	4799460	Identifier	sp		4799426	1					
ANR	4799461	CompoundStatement		7:10:122:122	4799426	1					
ANR	4799462	ReturnStatement	return ;	86:2:1681:1687	4799426	0	True				
ANR	4799463	IfStatement	if ( p )		4799426	3					
ANR	4799464	Condition	p	88:5:1697:1697	4799426	0	True				
ANR	4799465	Identifier	p		4799426	0					
ANR	4799466	CompoundStatement		10:8:145:145	4799426	1					
ANR	4799467	ExpressionStatement	"memcpy ( sp , p , sizeof ( RFSPlugin ) )"	89:2:1704:1738	4799426	0	True				
ANR	4799468	CallExpression	"memcpy ( sp , p , sizeof ( RFSPlugin ) )"		4799426	0					
ANR	4799469	Callee	memcpy		4799426	0					
ANR	4799470	Identifier	memcpy		4799426	0					
ANR	4799471	ArgumentList	sp		4799426	1					
ANR	4799472	Argument	sp		4799426	0					
ANR	4799473	Identifier	sp		4799426	0					
ANR	4799474	Argument	p		4799426	1					
ANR	4799475	Identifier	p		4799426	0					
ANR	4799476	Argument	sizeof ( RFSPlugin )		4799426	2					
ANR	4799477	SizeofExpression	sizeof ( RFSPlugin )		4799426	0					
ANR	4799478	Sizeof	sizeof		4799426	0					
ANR	4799479	SizeofOperand	RFSPlugin		4799426	1					
ANR	4799480	ExpressionStatement	"r_list_append ( fs -> plugins , sp )"	91:1:1744:1775	4799426	4	True				
ANR	4799481	CallExpression	"r_list_append ( fs -> plugins , sp )"		4799426	0					
ANR	4799482	Callee	r_list_append		4799426	0					
ANR	4799483	Identifier	r_list_append		4799426	0					
ANR	4799484	ArgumentList	fs -> plugins		4799426	1					
ANR	4799485	Argument	fs -> plugins		4799426	0					
ANR	4799486	PtrMemberAccess	fs -> plugins		4799426	0					
ANR	4799487	Identifier	fs		4799426	0					
ANR	4799488	Identifier	plugins		4799426	1					
ANR	4799489	Argument	sp		4799426	1					
ANR	4799490	Identifier	sp		4799426	0					
ANR	4799491	ReturnType	R_API void		4799426	1					
ANR	4799492	Identifier	r_fs_add		4799426	2					
ANR	4799493	ParameterList	"RFS * fs , RFSPlugin * p"		4799426	3					
ANR	4799494	Parameter	RFS * fs	79:20:1531:1537	4799426	0	True				
ANR	4799495	ParameterType	RFS *		4799426	0					
ANR	4799496	Identifier	fs		4799426	1					
ANR	4799497	Parameter	RFSPlugin * p	79:29:1540:1551	4799426	1	True				
ANR	4799498	ParameterType	RFSPlugin *		4799426	0					
ANR	4799499	Identifier	p		4799426	1					
ANR	4799500	CFGEntryNode	ENTRY		4799426		True				
ANR	4799501	CFGExitNode	EXIT		4799426		True				
ANR	4799502	Symbol	p		4799426						
ANR	4799503	Symbol	p -> init		4799426						
ANR	4799504	Symbol	* fs		4799426						
ANR	4799505	Symbol	R_NEW0		4799426						
ANR	4799506	Symbol	fs -> plugins		4799426						
ANR	4799507	Symbol	* p		4799426						
ANR	4799508	Symbol	fs		4799426						
ANR	4799509	Symbol	sp		4799426						
ANR	4799510	Symbol	RFSPlugin		4799426						
ANR	4799511	Function	r_fs_del	94:0:1780:1854							
ANR	4799512	FunctionDef	"r_fs_del (RFS * fs , RFSPlugin * p)"		4799511	0					
ANR	4799513	CompoundStatement		94:43:1823:1854	4799511	0					
ANR	4799514	ReturnType	R_API void		4799511	1					
ANR	4799515	Identifier	r_fs_del		4799511	2					
ANR	4799516	ParameterList	"RFS * fs , RFSPlugin * p"		4799511	3					
ANR	4799517	Parameter	RFS * fs	94:20:1800:1806	4799511	0	True				
ANR	4799518	ParameterType	RFS *		4799511	0					
ANR	4799519	Identifier	fs		4799511	1					
ANR	4799520	Parameter	RFSPlugin * p	94:29:1809:1820	4799511	1	True				
ANR	4799521	ParameterType	RFSPlugin *		4799511	0					
ANR	4799522	Identifier	p		4799511	1					
ANR	4799523	CFGEntryNode	ENTRY		4799511		True				
ANR	4799524	CFGExitNode	EXIT		4799511		True				
ANR	4799525	Symbol	p		4799511						
ANR	4799526	Symbol	fs		4799511						
ANR	4799527	Function	r_fs_mount	99:0:1874:3841							
ANR	4799528	FunctionDef	"r_fs_mount (RFS * fs , const char * fstype , const char * path , ut64 delta)"		4799527	0					
ANR	4799529	CompoundStatement		99:85:1959:3841	4799527	0					
ANR	4799530	IdentifierDeclStatement	RFSPlugin * p ;	100:1:1962:1974	4799527	0	True				
ANR	4799531	IdentifierDecl	* p		4799527	0					
ANR	4799532	IdentifierDeclType	RFSPlugin *		4799527	0					
ANR	4799533	Identifier	p		4799527	1					
ANR	4799534	IdentifierDeclStatement	RFSRoot * root ;	101:1:1977:1990	4799527	1	True				
ANR	4799535	IdentifierDecl	* root		4799527	0					
ANR	4799536	IdentifierDeclType	RFSRoot *		4799527	0					
ANR	4799537	Identifier	root		4799527	1					
ANR	4799538	IdentifierDeclStatement	RListIter * iter ;	102:1:1993:2008	4799527	2	True				
ANR	4799539	IdentifierDecl	* iter		4799527	0					
ANR	4799540	IdentifierDeclType	RListIter *		4799527	0					
ANR	4799541	Identifier	iter		4799527	1					
ANR	4799542	IdentifierDeclStatement	char * str ;	103:1:2011:2020	4799527	3	True				
ANR	4799543	IdentifierDecl	* str		4799527	0					
ANR	4799544	IdentifierDeclType	char *		4799527	0					
ANR	4799545	Identifier	str		4799527	1					
ANR	4799546	IdentifierDeclStatement	"int len , lenstr ;"	104:1:2023:2038	4799527	4	True				
ANR	4799547	IdentifierDecl	len		4799527	0					
ANR	4799548	IdentifierDeclType	int		4799527	0					
ANR	4799549	Identifier	len		4799527	1					
ANR	4799550	IdentifierDecl	lenstr		4799527	1					
ANR	4799551	IdentifierDeclType	int		4799527	0					
ANR	4799552	Identifier	lenstr		4799527	1					
ANR	4799553	IdentifierDeclStatement	char * heapFsType = NULL ;	105:1:2041:2064	4799527	5	True				
ANR	4799554	IdentifierDecl	* heapFsType = NULL		4799527	0					
ANR	4799555	IdentifierDeclType	char *		4799527	0					
ANR	4799556	Identifier	heapFsType		4799527	1					
ANR	4799557	AssignmentExpression	* heapFsType = NULL		4799527	2		=			
ANR	4799558	Identifier	NULL		4799527	0					
ANR	4799559	Identifier	NULL		4799527	1					
ANR	4799560	IfStatement	if ( path [ 0 ] != '/' )		4799527	6					
ANR	4799561	Condition	path [ 0 ] != '/'	107:5:2072:2085	4799527	0	True				
ANR	4799562	EqualityExpression	path [ 0 ] != '/'		4799527	0		!=			
ANR	4799563	ArrayIndexing	path [ 0 ]		4799527	0					
ANR	4799564	Identifier	path		4799527	0					
ANR	4799565	PrimaryExpression	0		4799527	1					
ANR	4799566	PrimaryExpression	'/'		4799527	1					
ANR	4799567	CompoundStatement		9:21:128:128	4799527	1					
ANR	4799568	ExpressionStatement	"eprintf ( ""r_fs_mount: invalid mountpoint %s\\n"" , path )"	108:2:2092:2145	4799527	0	True				
ANR	4799569	CallExpression	"eprintf ( ""r_fs_mount: invalid mountpoint %s\\n"" , path )"		4799527	0					
ANR	4799570	Callee	eprintf		4799527	0					
ANR	4799571	Identifier	eprintf		4799527	0					
ANR	4799572	ArgumentList	"""r_fs_mount: invalid mountpoint %s\\n"""		4799527	1					
ANR	4799573	Argument	"""r_fs_mount: invalid mountpoint %s\\n"""		4799527	0					
ANR	4799574	PrimaryExpression	"""r_fs_mount: invalid mountpoint %s\\n"""		4799527	0					
ANR	4799575	Argument	path		4799527	1					
ANR	4799576	Identifier	path		4799527	0					
ANR	4799577	ReturnStatement	return NULL ;	109:2:2149:2160	4799527	1	True				
ANR	4799578	Identifier	NULL		4799527	0					
ANR	4799579	IfStatement	if ( ! fstype || ! * fstype )		4799527	7					
ANR	4799580	Condition	! fstype || ! * fstype	111:5:2170:2188	4799527	0	True				
ANR	4799581	OrExpression	! fstype || ! * fstype		4799527	0		||			
ANR	4799582	UnaryOperationExpression	! fstype		4799527	0					
ANR	4799583	UnaryOperator	!		4799527	0					
ANR	4799584	Identifier	fstype		4799527	1					
ANR	4799585	UnaryOperationExpression	! * fstype		4799527	1					
ANR	4799586	UnaryOperator	!		4799527	0					
ANR	4799587	UnaryOperationExpression	* fstype		4799527	1					
ANR	4799588	UnaryOperator	*		4799527	0					
ANR	4799589	Identifier	fstype		4799527	1					
ANR	4799590	CompoundStatement		13:26:231:231	4799527	1					
ANR	4799591	ExpressionStatement	"heapFsType = r_fs_name ( fs , delta )"	112:2:2195:2229	4799527	0	True				
ANR	4799592	AssignmentExpression	"heapFsType = r_fs_name ( fs , delta )"		4799527	0		=			
ANR	4799593	Identifier	heapFsType		4799527	0					
ANR	4799594	CallExpression	"r_fs_name ( fs , delta )"		4799527	1					
ANR	4799595	Callee	r_fs_name		4799527	0					
ANR	4799596	Identifier	r_fs_name		4799527	0					
ANR	4799597	ArgumentList	fs		4799527	1					
ANR	4799598	Argument	fs		4799527	0					
ANR	4799599	Identifier	fs		4799527	0					
ANR	4799600	Argument	delta		4799527	1					
ANR	4799601	Identifier	delta		4799527	0					
ANR	4799602	ExpressionStatement	fstype = ( const char * ) heapFsType	113:2:2233:2266	4799527	1	True				
ANR	4799603	AssignmentExpression	fstype = ( const char * ) heapFsType		4799527	0		=			
ANR	4799604	Identifier	fstype		4799527	0					
ANR	4799605	CastExpression	( const char * ) heapFsType		4799527	1					
ANR	4799606	CastTarget	const char *		4799527	0					
ANR	4799607	Identifier	heapFsType		4799527	1					
ANR	4799608	IfStatement	"if ( ! ( p = r_fs_plugin_get ( fs , fstype ) ) )"		4799527	8					
ANR	4799609	Condition	"! ( p = r_fs_plugin_get ( fs , fstype ) )"	115:5:2276:2310	4799527	0	True				
ANR	4799610	UnaryOperationExpression	"! ( p = r_fs_plugin_get ( fs , fstype ) )"		4799527	0					
ANR	4799611	UnaryOperator	!		4799527	0					
ANR	4799612	AssignmentExpression	"p = r_fs_plugin_get ( fs , fstype )"		4799527	1		=			
ANR	4799613	Identifier	p		4799527	0					
ANR	4799614	CallExpression	"r_fs_plugin_get ( fs , fstype )"		4799527	1					
ANR	4799615	Callee	r_fs_plugin_get		4799527	0					
ANR	4799616	Identifier	r_fs_plugin_get		4799527	0					
ANR	4799617	ArgumentList	fs		4799527	1					
ANR	4799618	Argument	fs		4799527	0					
ANR	4799619	Identifier	fs		4799527	0					
ANR	4799620	Argument	fstype		4799527	1					
ANR	4799621	Identifier	fstype		4799527	0					
ANR	4799622	CompoundStatement		17:42:353:353	4799527	1					
ANR	4799623	ExpressionStatement	free ( heapFsType )	117:2:2373:2390	4799527	0	True				
ANR	4799624	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799625	Callee	free		4799527	0					
ANR	4799626	Identifier	free		4799527	0					
ANR	4799627	ArgumentList	heapFsType		4799527	1					
ANR	4799628	Argument	heapFsType		4799527	0					
ANR	4799629	Identifier	heapFsType		4799527	0					
ANR	4799630	ReturnStatement	return NULL ;	118:2:2394:2405	4799527	1	True				
ANR	4799631	Identifier	NULL		4799527	0					
ANR	4799632	ExpressionStatement	str = strdup ( path )	120:1:2411:2430	4799527	9	True				
ANR	4799633	AssignmentExpression	str = strdup ( path )		4799527	0		=			
ANR	4799634	Identifier	str		4799527	0					
ANR	4799635	CallExpression	strdup ( path )		4799527	1					
ANR	4799636	Callee	strdup		4799527	0					
ANR	4799637	Identifier	strdup		4799527	0					
ANR	4799638	ArgumentList	path		4799527	1					
ANR	4799639	Argument	path		4799527	0					
ANR	4799640	Identifier	path		4799527	0					
ANR	4799641	IfStatement	if ( ! str )		4799527	10					
ANR	4799642	Condition	! str	121:5:2437:2440	4799527	0	True				
ANR	4799643	UnaryOperationExpression	! str		4799527	0					
ANR	4799644	UnaryOperator	!		4799527	0					
ANR	4799645	Identifier	str		4799527	1					
ANR	4799646	CompoundStatement		23:11:483:483	4799527	1					
ANR	4799647	ExpressionStatement	free ( heapFsType )	122:2:2447:2464	4799527	0	True				
ANR	4799648	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799649	Callee	free		4799527	0					
ANR	4799650	Identifier	free		4799527	0					
ANR	4799651	ArgumentList	heapFsType		4799527	1					
ANR	4799652	Argument	heapFsType		4799527	0					
ANR	4799653	Identifier	heapFsType		4799527	0					
ANR	4799654	ReturnStatement	return NULL ;	123:2:2468:2479	4799527	1	True				
ANR	4799655	Identifier	NULL		4799527	0					
ANR	4799656	ExpressionStatement	r_str_trim_path ( str )	125:1:2485:2506	4799527	11	True				
ANR	4799657	CallExpression	r_str_trim_path ( str )		4799527	0					
ANR	4799658	Callee	r_str_trim_path		4799527	0					
ANR	4799659	Identifier	r_str_trim_path		4799527	0					
ANR	4799660	ArgumentList	str		4799527	1					
ANR	4799661	Argument	str		4799527	0					
ANR	4799662	Identifier	str		4799527	0					
ANR	4799663	IfStatement	"if ( * str && strchr ( str + 1 , '/' ) )"		4799527	12					
ANR	4799664	Condition	"* str && strchr ( str + 1 , '/' )"	126:5:2513:2541	4799527	0	True				
ANR	4799665	AndExpression	"* str && strchr ( str + 1 , '/' )"		4799527	0		&&			
ANR	4799666	UnaryOperationExpression	* str		4799527	0					
ANR	4799667	UnaryOperator	*		4799527	0					
ANR	4799668	Identifier	str		4799527	1					
ANR	4799669	CallExpression	"strchr ( str + 1 , '/' )"		4799527	1					
ANR	4799670	Callee	strchr		4799527	0					
ANR	4799671	Identifier	strchr		4799527	0					
ANR	4799672	ArgumentList	str + 1		4799527	1					
ANR	4799673	Argument	str + 1		4799527	0					
ANR	4799674	AdditiveExpression	str + 1		4799527	0		+			
ANR	4799675	Identifier	str		4799527	0					
ANR	4799676	PrimaryExpression	1		4799527	1					
ANR	4799677	Argument	'/'		4799527	1					
ANR	4799678	PrimaryExpression	'/'		4799527	0					
ANR	4799679	CompoundStatement		28:36:584:584	4799527	1					
ANR	4799680	ExpressionStatement	"eprintf ( ""r_fs_mount: mountpoint must have no subdirectories\\n"" )"	127:2:2548:2612	4799527	0	True				
ANR	4799681	CallExpression	"eprintf ( ""r_fs_mount: mountpoint must have no subdirectories\\n"" )"		4799527	0					
ANR	4799682	Callee	eprintf		4799527	0					
ANR	4799683	Identifier	eprintf		4799527	0					
ANR	4799684	ArgumentList	"""r_fs_mount: mountpoint must have no subdirectories\\n"""		4799527	1					
ANR	4799685	Argument	"""r_fs_mount: mountpoint must have no subdirectories\\n"""		4799527	0					
ANR	4799686	PrimaryExpression	"""r_fs_mount: mountpoint must have no subdirectories\\n"""		4799527	0					
ANR	4799687	ExpressionStatement	free ( heapFsType )	128:2:2616:2633	4799527	1	True				
ANR	4799688	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799689	Callee	free		4799527	0					
ANR	4799690	Identifier	free		4799527	0					
ANR	4799691	ArgumentList	heapFsType		4799527	1					
ANR	4799692	Argument	heapFsType		4799527	0					
ANR	4799693	Identifier	heapFsType		4799527	0					
ANR	4799694	ReturnStatement	return NULL ;	129:2:2637:2648	4799527	2	True				
ANR	4799695	Identifier	NULL		4799527	0					
ANR	4799696	Statement	r_list_foreach	132:1:2682:2695	4799527	13	True				
ANR	4799697	Statement	(	132:16:2697:2697	4799527	14	True				
ANR	4799698	Statement	fs	132:17:2698:2699	4799527	15	True				
ANR	4799699	Statement	->	132:19:2700:2701	4799527	16	True				
ANR	4799700	Statement	roots	132:21:2702:2706	4799527	17	True				
ANR	4799701	Statement	","	132:26:2707:2707	4799527	18	True				
ANR	4799702	Statement	iter	132:28:2709:2712	4799527	19	True				
ANR	4799703	Statement	","	132:32:2713:2713	4799527	20	True				
ANR	4799704	Statement	root	132:34:2715:2718	4799527	21	True				
ANR	4799705	Statement	)	132:38:2719:2719	4799527	22	True				
ANR	4799706	CompoundStatement		34:40:761:761	4799527	23					
ANR	4799707	ExpressionStatement	len = strlen ( root -> path )	133:2:2725:2750	4799527	0	True				
ANR	4799708	AssignmentExpression	len = strlen ( root -> path )		4799527	0		=			
ANR	4799709	Identifier	len		4799527	0					
ANR	4799710	CallExpression	strlen ( root -> path )		4799527	1					
ANR	4799711	Callee	strlen		4799527	0					
ANR	4799712	Identifier	strlen		4799527	0					
ANR	4799713	ArgumentList	root -> path		4799527	1					
ANR	4799714	Argument	root -> path		4799527	0					
ANR	4799715	PtrMemberAccess	root -> path		4799527	0					
ANR	4799716	Identifier	root		4799527	0					
ANR	4799717	Identifier	path		4799527	1					
ANR	4799718	ExpressionStatement	lenstr = strlen ( str )	134:2:2754:2775	4799527	1	True				
ANR	4799719	AssignmentExpression	lenstr = strlen ( str )		4799527	0		=			
ANR	4799720	Identifier	lenstr		4799527	0					
ANR	4799721	CallExpression	strlen ( str )		4799527	1					
ANR	4799722	Callee	strlen		4799527	0					
ANR	4799723	Identifier	strlen		4799527	0					
ANR	4799724	ArgumentList	str		4799527	1					
ANR	4799725	Argument	str		4799527	0					
ANR	4799726	Identifier	str		4799527	0					
ANR	4799727	IfStatement	"if ( ! strncmp ( str , root -> path , len ) )"		4799527	2					
ANR	4799728	Condition	"! strncmp ( str , root -> path , len )"	135:6:2783:2813	4799527	0	True				
ANR	4799729	UnaryOperationExpression	"! strncmp ( str , root -> path , len )"		4799527	0					
ANR	4799730	UnaryOperator	!		4799527	0					
ANR	4799731	CallExpression	"strncmp ( str , root -> path , len )"		4799527	1					
ANR	4799732	Callee	strncmp		4799527	0					
ANR	4799733	Identifier	strncmp		4799527	0					
ANR	4799734	ArgumentList	str		4799527	1					
ANR	4799735	Argument	str		4799527	0					
ANR	4799736	Identifier	str		4799527	0					
ANR	4799737	Argument	root -> path		4799527	1					
ANR	4799738	PtrMemberAccess	root -> path		4799527	0					
ANR	4799739	Identifier	root		4799527	0					
ANR	4799740	Identifier	path		4799527	1					
ANR	4799741	Argument	len		4799527	2					
ANR	4799742	Identifier	len		4799527	0					
ANR	4799743	CompoundStatement		37:39:856:856	4799527	1					
ANR	4799744	IfStatement	if ( len < lenstr && str [ len ] != '/' )		4799527	0					
ANR	4799745	Condition	len < lenstr && str [ len ] != '/'	136:7:2825:2855	4799527	0	True				
ANR	4799746	AndExpression	len < lenstr && str [ len ] != '/'		4799527	0		&&			
ANR	4799747	RelationalExpression	len < lenstr		4799527	0		<			
ANR	4799748	Identifier	len		4799527	0					
ANR	4799749	Identifier	lenstr		4799527	1					
ANR	4799750	EqualityExpression	str [ len ] != '/'		4799527	1		!=			
ANR	4799751	ArrayIndexing	str [ len ]		4799527	0					
ANR	4799752	Identifier	str		4799527	0					
ANR	4799753	Identifier	len		4799527	1					
ANR	4799754	PrimaryExpression	'/'		4799527	1					
ANR	4799755	CompoundStatement		38:40:898:898	4799527	1					
ANR	4799756	ContinueStatement	continue ;	137:4:2864:2872	4799527	0	True				
ANR	4799757	IfStatement	if ( len > lenstr && root -> path [ lenstr ] == '/' )		4799527	1					
ANR	4799758	Condition	len > lenstr && root -> path [ lenstr ] == '/'	139:7:2886:2926	4799527	0	True				
ANR	4799759	AndExpression	len > lenstr && root -> path [ lenstr ] == '/'		4799527	0		&&			
ANR	4799760	RelationalExpression	len > lenstr		4799527	0		>			
ANR	4799761	Identifier	len		4799527	0					
ANR	4799762	Identifier	lenstr		4799527	1					
ANR	4799763	EqualityExpression	root -> path [ lenstr ] == '/'		4799527	1		==			
ANR	4799764	ArrayIndexing	root -> path [ lenstr ]		4799527	0					
ANR	4799765	PtrMemberAccess	root -> path		4799527	0					
ANR	4799766	Identifier	root		4799527	0					
ANR	4799767	Identifier	path		4799527	1					
ANR	4799768	Identifier	lenstr		4799527	1					
ANR	4799769	PrimaryExpression	'/'		4799527	1					
ANR	4799770	CompoundStatement		41:50:969:969	4799527	1					
ANR	4799771	ContinueStatement	continue ;	140:4:2935:2943	4799527	0	True				
ANR	4799772	ExpressionStatement	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"	142:3:2953:2998	4799527	2	True				
ANR	4799773	CallExpression	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"		4799527	0					
ANR	4799774	Callee	eprintf		4799527	0					
ANR	4799775	Identifier	eprintf		4799527	0					
ANR	4799776	ArgumentList	"""r_fs_mount: Invalid mount point\\n"""		4799527	1					
ANR	4799777	Argument	"""r_fs_mount: Invalid mount point\\n"""		4799527	0					
ANR	4799778	PrimaryExpression	"""r_fs_mount: Invalid mount point\\n"""		4799527	0					
ANR	4799779	ExpressionStatement	free ( str )	143:3:3003:3013	4799527	3	True				
ANR	4799780	CallExpression	free ( str )		4799527	0					
ANR	4799781	Callee	free		4799527	0					
ANR	4799782	Identifier	free		4799527	0					
ANR	4799783	ArgumentList	str		4799527	1					
ANR	4799784	Argument	str		4799527	0					
ANR	4799785	Identifier	str		4799527	0					
ANR	4799786	ExpressionStatement	free ( heapFsType )	144:3:3018:3035	4799527	4	True				
ANR	4799787	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799788	Callee	free		4799527	0					
ANR	4799789	Identifier	free		4799527	0					
ANR	4799790	ArgumentList	heapFsType		4799527	1					
ANR	4799791	Argument	heapFsType		4799527	0					
ANR	4799792	Identifier	heapFsType		4799527	0					
ANR	4799793	ReturnStatement	return NULL ;	145:3:3040:3051	4799527	5	True				
ANR	4799794	Identifier	NULL		4799527	0					
ANR	4799795	IdentifierDeclStatement	"RFSFile * file = r_fs_open ( fs , str , false ) ;"	148:1:3061:3103	4799527	24	True				
ANR	4799796	IdentifierDecl	"* file = r_fs_open ( fs , str , false )"		4799527	0					
ANR	4799797	IdentifierDeclType	RFSFile *		4799527	0					
ANR	4799798	Identifier	file		4799527	1					
ANR	4799799	AssignmentExpression	"* file = r_fs_open ( fs , str , false )"		4799527	2		=			
ANR	4799800	Identifier	file		4799527	0					
ANR	4799801	CallExpression	"r_fs_open ( fs , str , false )"		4799527	1					
ANR	4799802	Callee	r_fs_open		4799527	0					
ANR	4799803	Identifier	r_fs_open		4799527	0					
ANR	4799804	ArgumentList	fs		4799527	1					
ANR	4799805	Argument	fs		4799527	0					
ANR	4799806	Identifier	fs		4799527	0					
ANR	4799807	Argument	str		4799527	1					
ANR	4799808	Identifier	str		4799527	0					
ANR	4799809	Argument	false		4799527	2					
ANR	4799810	Identifier	false		4799527	0					
ANR	4799811	IfStatement	if ( file )		4799527	25					
ANR	4799812	Condition	file	149:5:3110:3113	4799527	0	True				
ANR	4799813	Identifier	file		4799527	0					
ANR	4799814	CompoundStatement		51:11:1156:1156	4799527	1					
ANR	4799815	ExpressionStatement	"r_fs_close ( fs , file )"	150:2:3120:3141	4799527	0	True				
ANR	4799816	CallExpression	"r_fs_close ( fs , file )"		4799527	0					
ANR	4799817	Callee	r_fs_close		4799527	0					
ANR	4799818	Identifier	r_fs_close		4799527	0					
ANR	4799819	ArgumentList	fs		4799527	1					
ANR	4799820	Argument	fs		4799527	0					
ANR	4799821	Identifier	fs		4799527	0					
ANR	4799822	Argument	file		4799527	1					
ANR	4799823	Identifier	file		4799527	0					
ANR	4799824	ExpressionStatement	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"	151:2:3145:3190	4799527	1	True				
ANR	4799825	CallExpression	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"		4799527	0					
ANR	4799826	Callee	eprintf		4799527	0					
ANR	4799827	Identifier	eprintf		4799527	0					
ANR	4799828	ArgumentList	"""r_fs_mount: Invalid mount point\\n"""		4799527	1					
ANR	4799829	Argument	"""r_fs_mount: Invalid mount point\\n"""		4799527	0					
ANR	4799830	PrimaryExpression	"""r_fs_mount: Invalid mount point\\n"""		4799527	0					
ANR	4799831	ExpressionStatement	free ( heapFsType )	152:2:3194:3211	4799527	2	True				
ANR	4799832	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799833	Callee	free		4799527	0					
ANR	4799834	Identifier	free		4799527	0					
ANR	4799835	ArgumentList	heapFsType		4799527	1					
ANR	4799836	Argument	heapFsType		4799527	0					
ANR	4799837	Identifier	heapFsType		4799527	0					
ANR	4799838	ExpressionStatement	free ( str )	153:2:3215:3225	4799527	3	True				
ANR	4799839	CallExpression	free ( str )		4799527	0					
ANR	4799840	Callee	free		4799527	0					
ANR	4799841	Identifier	free		4799527	0					
ANR	4799842	ArgumentList	str		4799527	1					
ANR	4799843	Argument	str		4799527	0					
ANR	4799844	Identifier	str		4799527	0					
ANR	4799845	ReturnStatement	return NULL ;	154:2:3229:3240	4799527	4	True				
ANR	4799846	Identifier	NULL		4799527	0					
ANR	4799847	IdentifierDeclStatement	"RList * list = r_fs_dir ( fs , str ) ;"	156:1:3246:3278	4799527	26	True				
ANR	4799848	IdentifierDecl	"* list = r_fs_dir ( fs , str )"		4799527	0					
ANR	4799849	IdentifierDeclType	RList *		4799527	0					
ANR	4799850	Identifier	list		4799527	1					
ANR	4799851	AssignmentExpression	"* list = r_fs_dir ( fs , str )"		4799527	2		=			
ANR	4799852	Identifier	list		4799527	0					
ANR	4799853	CallExpression	"r_fs_dir ( fs , str )"		4799527	1					
ANR	4799854	Callee	r_fs_dir		4799527	0					
ANR	4799855	Identifier	r_fs_dir		4799527	0					
ANR	4799856	ArgumentList	fs		4799527	1					
ANR	4799857	Argument	fs		4799527	0					
ANR	4799858	Identifier	fs		4799527	0					
ANR	4799859	Argument	str		4799527	1					
ANR	4799860	Identifier	str		4799527	0					
ANR	4799861	IfStatement	if ( ! r_list_empty ( list ) )		4799527	27					
ANR	4799862	Condition	! r_list_empty ( list )	157:5:3285:3304	4799527	0	True				
ANR	4799863	UnaryOperationExpression	! r_list_empty ( list )		4799527	0					
ANR	4799864	UnaryOperator	!		4799527	0					
ANR	4799865	CallExpression	r_list_empty ( list )		4799527	1					
ANR	4799866	Callee	r_list_empty		4799527	0					
ANR	4799867	Identifier	r_list_empty		4799527	0					
ANR	4799868	ArgumentList	list		4799527	1					
ANR	4799869	Argument	list		4799527	0					
ANR	4799870	Identifier	list		4799527	0					
ANR	4799871	CompoundStatement		59:27:1347:1347	4799527	1					
ANR	4799872	ExpressionStatement	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"	159:2:3338:3383	4799527	0	True				
ANR	4799873	CallExpression	"eprintf ( ""r_fs_mount: Invalid mount point\\n"" )"		4799527	0					
ANR	4799874	Callee	eprintf		4799527	0					
ANR	4799875	Identifier	eprintf		4799527	0					
ANR	4799876	ArgumentList	"""r_fs_mount: Invalid mount point\\n"""		4799527	1					
ANR	4799877	Argument	"""r_fs_mount: Invalid mount point\\n"""		4799527	0					
ANR	4799878	PrimaryExpression	"""r_fs_mount: Invalid mount point\\n"""		4799527	0					
ANR	4799879	ExpressionStatement	free ( str )	160:2:3387:3397	4799527	1	True				
ANR	4799880	CallExpression	free ( str )		4799527	0					
ANR	4799881	Callee	free		4799527	0					
ANR	4799882	Identifier	free		4799527	0					
ANR	4799883	ArgumentList	str		4799527	1					
ANR	4799884	Argument	str		4799527	0					
ANR	4799885	Identifier	str		4799527	0					
ANR	4799886	ExpressionStatement	free ( heapFsType )	161:2:3401:3418	4799527	2	True				
ANR	4799887	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799888	Callee	free		4799527	0					
ANR	4799889	Identifier	free		4799527	0					
ANR	4799890	ArgumentList	heapFsType		4799527	1					
ANR	4799891	Argument	heapFsType		4799527	0					
ANR	4799892	Identifier	heapFsType		4799527	0					
ANR	4799893	ReturnStatement	return NULL ;	162:2:3422:3433	4799527	3	True				
ANR	4799894	Identifier	NULL		4799527	0					
ANR	4799895	ExpressionStatement	"root = r_fs_root_new ( str , delta )"	164:1:3439:3472	4799527	28	True				
ANR	4799896	AssignmentExpression	"root = r_fs_root_new ( str , delta )"		4799527	0		=			
ANR	4799897	Identifier	root		4799527	0					
ANR	4799898	CallExpression	"r_fs_root_new ( str , delta )"		4799527	1					
ANR	4799899	Callee	r_fs_root_new		4799527	0					
ANR	4799900	Identifier	r_fs_root_new		4799527	0					
ANR	4799901	ArgumentList	str		4799527	1					
ANR	4799902	Argument	str		4799527	0					
ANR	4799903	Identifier	str		4799527	0					
ANR	4799904	Argument	delta		4799527	1					
ANR	4799905	Identifier	delta		4799527	0					
ANR	4799906	ExpressionStatement	root -> p = p	165:1:3475:3486	4799527	29	True				
ANR	4799907	AssignmentExpression	root -> p = p		4799527	0		=			
ANR	4799908	PtrMemberAccess	root -> p		4799527	0					
ANR	4799909	Identifier	root		4799527	0					
ANR	4799910	Identifier	p		4799527	1					
ANR	4799911	Identifier	p		4799527	1					
ANR	4799912	ExpressionStatement	root -> iob = fs -> iob	167:1:3543:3562	4799527	30	True				
ANR	4799913	AssignmentExpression	root -> iob = fs -> iob		4799527	0		=			
ANR	4799914	PtrMemberAccess	root -> iob		4799527	0					
ANR	4799915	Identifier	root		4799527	0					
ANR	4799916	Identifier	iob		4799527	1					
ANR	4799917	PtrMemberAccess	fs -> iob		4799527	1					
ANR	4799918	Identifier	fs		4799527	0					
ANR	4799919	Identifier	iob		4799527	1					
ANR	4799920	ExpressionStatement	root -> cob = fs -> cob	168:1:3565:3584	4799527	31	True				
ANR	4799921	AssignmentExpression	root -> cob = fs -> cob		4799527	0		=			
ANR	4799922	PtrMemberAccess	root -> cob		4799527	0					
ANR	4799923	Identifier	root		4799527	0					
ANR	4799924	Identifier	cob		4799527	1					
ANR	4799925	PtrMemberAccess	fs -> cob		4799527	1					
ANR	4799926	Identifier	fs		4799527	0					
ANR	4799927	Identifier	cob		4799527	1					
ANR	4799928	IfStatement	if ( ! p -> mount ( root ) )		4799527	32					
ANR	4799929	Condition	! p -> mount ( root )	169:5:3591:3606	4799527	0	True				
ANR	4799930	UnaryOperationExpression	! p -> mount ( root )		4799527	0					
ANR	4799931	UnaryOperator	!		4799527	0					
ANR	4799932	CallExpression	p -> mount ( root )		4799527	1					
ANR	4799933	Callee	p -> mount		4799527	0					
ANR	4799934	PtrMemberAccess	p -> mount		4799527	0					
ANR	4799935	Identifier	p		4799527	0					
ANR	4799936	Identifier	mount		4799527	1					
ANR	4799937	ArgumentList	root		4799527	1					
ANR	4799938	Argument	root		4799527	0					
ANR	4799939	Identifier	root		4799527	0					
ANR	4799940	CompoundStatement		71:23:1649:1649	4799527	1					
ANR	4799941	ExpressionStatement	free ( str )	170:2:3613:3623	4799527	0	True				
ANR	4799942	CallExpression	free ( str )		4799527	0					
ANR	4799943	Callee	free		4799527	0					
ANR	4799944	Identifier	free		4799527	0					
ANR	4799945	ArgumentList	str		4799527	1					
ANR	4799946	Argument	str		4799527	0					
ANR	4799947	Identifier	str		4799527	0					
ANR	4799948	ExpressionStatement	free ( heapFsType )	171:2:3627:3644	4799527	1	True				
ANR	4799949	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799950	Callee	free		4799527	0					
ANR	4799951	Identifier	free		4799527	0					
ANR	4799952	ArgumentList	heapFsType		4799527	1					
ANR	4799953	Argument	heapFsType		4799527	0					
ANR	4799954	Identifier	heapFsType		4799527	0					
ANR	4799955	ExpressionStatement	r_fs_root_free ( root )	172:2:3648:3669	4799527	2	True				
ANR	4799956	CallExpression	r_fs_root_free ( root )		4799527	0					
ANR	4799957	Callee	r_fs_root_free		4799527	0					
ANR	4799958	Identifier	r_fs_root_free		4799527	0					
ANR	4799959	ArgumentList	root		4799527	1					
ANR	4799960	Argument	root		4799527	0					
ANR	4799961	Identifier	root		4799527	0					
ANR	4799962	ReturnStatement	return NULL ;	173:2:3673:3684	4799527	3	True				
ANR	4799963	Identifier	NULL		4799527	0					
ANR	4799964	ExpressionStatement	"r_list_append ( fs -> roots , root )"	175:1:3690:3721	4799527	33	True				
ANR	4799965	CallExpression	"r_list_append ( fs -> roots , root )"		4799527	0					
ANR	4799966	Callee	r_list_append		4799527	0					
ANR	4799967	Identifier	r_list_append		4799527	0					
ANR	4799968	ArgumentList	fs -> roots		4799527	1					
ANR	4799969	Argument	fs -> roots		4799527	0					
ANR	4799970	PtrMemberAccess	fs -> roots		4799527	0					
ANR	4799971	Identifier	fs		4799527	0					
ANR	4799972	Identifier	roots		4799527	1					
ANR	4799973	Argument	root		4799527	1					
ANR	4799974	Identifier	root		4799527	0					
ANR	4799975	Statement	eprintf	176:1:3724:3730	4799527	34	True				
ANR	4799976	Statement	(	176:9:3732:3732	4799527	35	True				
ANR	4799977	Statement	"""Mounted %s on %s at 0x%"""	176:10:3733:3757	4799527	36	True				
ANR	4799978	Statement	PFMT64x	176:36:3759:3765	4799527	37	True				
ANR	4799979	Statement	"""\\n"""	176:44:3767:3770	4799527	38	True				
ANR	4799980	Statement	","	176:48:3771:3771	4799527	39	True				
ANR	4799981	Statement	fstype	176:50:3773:3778	4799527	40	True				
ANR	4799982	Statement	","	176:56:3779:3779	4799527	41	True				
ANR	4799983	Statement	str	176:58:3781:3783	4799527	42	True				
ANR	4799984	Statement	","	176:61:3784:3784	4799527	43	True				
ANR	4799985	Statement	delta	176:63:3786:3790	4799527	44	True				
ANR	4799986	Statement	)	176:68:3791:3791	4799527	45	True				
ANR	4799987	ExpressionStatement		176:69:3792:3792	4799527	46	True				
ANR	4799988	ExpressionStatement	free ( str )	177:1:3795:3805	4799527	47	True				
ANR	4799989	CallExpression	free ( str )		4799527	0					
ANR	4799990	Callee	free		4799527	0					
ANR	4799991	Identifier	free		4799527	0					
ANR	4799992	ArgumentList	str		4799527	1					
ANR	4799993	Argument	str		4799527	0					
ANR	4799994	Identifier	str		4799527	0					
ANR	4799995	ExpressionStatement	free ( heapFsType )	178:1:3808:3825	4799527	48	True				
ANR	4799996	CallExpression	free ( heapFsType )		4799527	0					
ANR	4799997	Callee	free		4799527	0					
ANR	4799998	Identifier	free		4799527	0					
ANR	4799999	ArgumentList	heapFsType		4799527	1					
ANR	4800000	Argument	heapFsType		4799527	0					
ANR	4800001	Identifier	heapFsType		4799527	0					
ANR	4800002	ReturnStatement	return root ;	179:1:3828:3839	4799527	49	True				
ANR	4800003	Identifier	root		4799527	0					
ANR	4800004	ReturnType	R_API RFSRoot *		4799527	1					
ANR	4800005	Identifier	r_fs_mount		4799527	2					
ANR	4800006	ParameterList	"RFS * fs , const char * fstype , const char * path , ut64 delta"		4799527	3					
ANR	4800007	Parameter	RFS * fs	99:26:1900:1906	4799527	0	True				
ANR	4800008	ParameterType	RFS *		4799527	0					
ANR	4800009	Identifier	fs		4799527	1					
ANR	4800010	Parameter	const char * fstype	99:35:1909:1926	4799527	1	True				
ANR	4800011	ParameterType	const char *		4799527	0					
ANR	4800012	Identifier	fstype		4799527	1					
ANR	4800013	Parameter	const char * path	99:55:1929:1944	4799527	2	True				
ANR	4800014	ParameterType	const char *		4799527	0					
ANR	4800015	Identifier	path		4799527	1					
ANR	4800016	Parameter	ut64 delta	99:73:1947:1956	4799527	3	True				
ANR	4800017	ParameterType	ut64		4799527	0					
ANR	4800018	Identifier	delta		4799527	1					
ANR	4800019	CFGEntryNode	ENTRY		4799527		True				
ANR	4800020	CFGExitNode	EXIT		4799527		True				
ANR	4800021	CFGErrorNode	ERROR		4799527		True				
ANR	4800022	Symbol	r_fs_name		4799527						
ANR	4800023	Symbol	fs -> roots		4799527						
ANR	4800024	Symbol	root -> p		4799527						
ANR	4800025	Symbol	delta		4799527						
ANR	4800026	Symbol	strchr		4799527						
ANR	4800027	Symbol	fs -> cob		4799527						
ANR	4800028	Symbol	fs		4799527						
ANR	4800029	Symbol	r_fs_dir		4799527						
ANR	4800030	Symbol	p -> mount		4799527						
ANR	4800031	Symbol	* fs		4799527						
ANR	4800032	Symbol	path		4799527						
ANR	4800033	Symbol	strlen		4799527						
ANR	4800034	Symbol	strncmp		4799527						
ANR	4800035	Symbol	* * root		4799527						
ANR	4800036	Symbol	file		4799527						
ANR	4800037	Symbol	len		4799527						
ANR	4800038	Symbol	root		4799527						
ANR	4800039	Symbol	* str		4799527						
ANR	4800040	Symbol	fstype		4799527						
ANR	4800041	Symbol	r_fs_open		4799527						
ANR	4800042	Symbol	heapFsType		4799527						
ANR	4800043	Symbol	NULL		4799527						
ANR	4800044	Symbol	root -> iob		4799527						
ANR	4800045	Symbol	false		4799527						
ANR	4800046	Symbol	iter		4799527						
ANR	4800047	Symbol	* root -> path		4799527						
ANR	4800048	Symbol	root -> cob		4799527						
ANR	4800049	Symbol	list		4799527						
ANR	4800050	Symbol	* fstype		4799527						
ANR	4800051	Symbol	p		4799527						
ANR	4800052	Symbol	str		4799527						
ANR	4800053	Symbol	lenstr		4799527						
ANR	4800054	Symbol	r_fs_root_new		4799527						
ANR	4800055	Symbol	* lenstr		4799527						
ANR	4800056	Symbol	fs -> iob		4799527						
ANR	4800057	Symbol	root -> path		4799527						
ANR	4800058	Symbol	* path		4799527						
ANR	4800059	Symbol	r_fs_plugin_get		4799527						
ANR	4800060	Symbol	r_list_empty		4799527						
ANR	4800061	Symbol	* p		4799527						
ANR	4800062	Symbol	strdup		4799527						
ANR	4800063	Symbol	* root		4799527						
ANR	4800064	Symbol	* len		4799527						
ANR	4800065	Function	r_fs_match	182:0:3844:3959							
ANR	4800066	FunctionDef	"r_fs_match (const char * root , const char * path , int len)"		4800065	0					
ANR	4800067	CompoundStatement		182:75:3919:3959	4800065	0					
ANR	4800068	ReturnStatement	"return ( ! strncmp ( path , root , len ) ) ;"	183:1:3922:3957	4800065	0	True				
ANR	4800069	UnaryOperationExpression	"! strncmp ( path , root , len )"		4800065	0					
ANR	4800070	UnaryOperator	!		4800065	0					
ANR	4800071	CallExpression	"strncmp ( path , root , len )"		4800065	1					
ANR	4800072	Callee	strncmp		4800065	0					
ANR	4800073	Identifier	strncmp		4800065	0					
ANR	4800074	ArgumentList	path		4800065	1					
ANR	4800075	Argument	path		4800065	0					
ANR	4800076	Identifier	path		4800065	0					
ANR	4800077	Argument	root		4800065	1					
ANR	4800078	Identifier	root		4800065	0					
ANR	4800079	Argument	len		4800065	2					
ANR	4800080	Identifier	len		4800065	0					
ANR	4800081	ReturnType	static inline bool		4800065	1					
ANR	4800082	Identifier	r_fs_match		4800065	2					
ANR	4800083	ParameterList	"const char * root , const char * path , int len"		4800065	3					
ANR	4800084	Parameter	const char * root	182:30:3874:3889	4800065	0	True				
ANR	4800085	ParameterType	const char *		4800065	0					
ANR	4800086	Identifier	root		4800065	1					
ANR	4800087	Parameter	const char * path	182:48:3892:3907	4800065	1	True				
ANR	4800088	ParameterType	const char *		4800065	0					
ANR	4800089	Identifier	path		4800065	1					
ANR	4800090	Parameter	int len	182:66:3910:3916	4800065	2	True				
ANR	4800091	ParameterType	int		4800065	0					
ANR	4800092	Identifier	len		4800065	1					
ANR	4800093	CFGEntryNode	ENTRY		4800065		True				
ANR	4800094	CFGExitNode	EXIT		4800065		True				
ANR	4800095	Symbol	path		4800065						
ANR	4800096	Symbol	strncmp		4800065						
ANR	4800097	Symbol	len		4800065						
ANR	4800098	Symbol	root		4800065						
ANR	4800099	Function	r_fs_umount	186:0:3962:4331							
ANR	4800100	FunctionDef	"r_fs_umount (RFS * fs , const char * path)"		4800099	0					
ANR	4800101	CompoundStatement		186:50:4012:4331	4800099	0					
ANR	4800102	IdentifierDeclStatement	int len ;	187:1:4015:4022	4800099	0	True				
ANR	4800103	IdentifierDecl	len		4800099	0					
ANR	4800104	IdentifierDeclType	int		4800099	0					
ANR	4800105	Identifier	len		4800099	1					
ANR	4800106	IdentifierDeclStatement	RFSRoot * root ;	188:1:4025:4038	4800099	1	True				
ANR	4800107	IdentifierDecl	* root		4800099	0					
ANR	4800108	IdentifierDeclType	RFSRoot *		4800099	0					
ANR	4800109	Identifier	root		4800099	1					
ANR	4800110	IdentifierDeclStatement	"RListIter * iter , * riter = NULL ;"	189:1:4041:4072	4800099	2	True				
ANR	4800111	IdentifierDecl	* iter		4800099	0					
ANR	4800112	IdentifierDeclType	RListIter *		4800099	0					
ANR	4800113	Identifier	iter		4800099	1					
ANR	4800114	IdentifierDecl	* riter = NULL		4800099	1					
ANR	4800115	IdentifierDeclType	RListIter *		4800099	0					
ANR	4800116	Identifier	riter		4800099	1					
ANR	4800117	AssignmentExpression	* riter = NULL		4800099	2		=			
ANR	4800118	Identifier	NULL		4800099	0					
ANR	4800119	Identifier	NULL		4800099	1					
ANR	4800120	IfStatement	if ( ! path )		4800099	3					
ANR	4800121	Condition	! path	191:5:4080:4084	4800099	0	True				
ANR	4800122	UnaryOperationExpression	! path		4800099	0					
ANR	4800123	UnaryOperator	!		4800099	0					
ANR	4800124	Identifier	path		4800099	1					
ANR	4800125	CompoundStatement		6:12:74:74	4800099	1					
ANR	4800126	ReturnStatement	return false ;	192:2:4091:4103	4800099	0	True				
ANR	4800127	Identifier	false		4800099	0					
ANR	4800128	Statement	r_list_foreach	195:1:4110:4123	4800099	4	True				
ANR	4800129	Statement	(	195:16:4125:4125	4800099	5	True				
ANR	4800130	Statement	fs	195:17:4126:4127	4800099	6	True				
ANR	4800131	Statement	->	195:19:4128:4129	4800099	7	True				
ANR	4800132	Statement	roots	195:21:4130:4134	4800099	8	True				
ANR	4800133	Statement	","	195:26:4135:4135	4800099	9	True				
ANR	4800134	Statement	iter	195:28:4137:4140	4800099	10	True				
ANR	4800135	Statement	","	195:32:4141:4141	4800099	11	True				
ANR	4800136	Statement	root	195:34:4143:4146	4800099	12	True				
ANR	4800137	Statement	)	195:38:4147:4147	4800099	13	True				
ANR	4800138	CompoundStatement		10:40:136:136	4800099	14					
ANR	4800139	ExpressionStatement	len = strlen ( root -> path )	196:2:4153:4178	4800099	0	True				
ANR	4800140	AssignmentExpression	len = strlen ( root -> path )		4800099	0		=			
ANR	4800141	Identifier	len		4800099	0					
ANR	4800142	CallExpression	strlen ( root -> path )		4800099	1					
ANR	4800143	Callee	strlen		4800099	0					
ANR	4800144	Identifier	strlen		4800099	0					
ANR	4800145	ArgumentList	root -> path		4800099	1					
ANR	4800146	Argument	root -> path		4800099	0					
ANR	4800147	PtrMemberAccess	root -> path		4800099	0					
ANR	4800148	Identifier	root		4800099	0					
ANR	4800149	Identifier	path		4800099	1					
ANR	4800150	IfStatement	"if ( r_fs_match ( path , root -> path , len ) )"		4800099	1					
ANR	4800151	Condition	"r_fs_match ( path , root -> path , len )"	197:6:4186:4219	4800099	0	True				
ANR	4800152	CallExpression	"r_fs_match ( path , root -> path , len )"		4800099	0					
ANR	4800153	Callee	r_fs_match		4800099	0					
ANR	4800154	Identifier	r_fs_match		4800099	0					
ANR	4800155	ArgumentList	path		4800099	1					
ANR	4800156	Argument	path		4800099	0					
ANR	4800157	Identifier	path		4800099	0					
ANR	4800158	Argument	root -> path		4800099	1					
ANR	4800159	PtrMemberAccess	root -> path		4800099	0					
ANR	4800160	Identifier	root		4800099	0					
ANR	4800161	Identifier	path		4800099	1					
ANR	4800162	Argument	len		4800099	2					
ANR	4800163	Identifier	len		4800099	0					
ANR	4800164	CompoundStatement		12:42:209:209	4800099	1					
ANR	4800165	ExpressionStatement	riter = iter	198:3:4227:4239	4800099	0	True				
ANR	4800166	AssignmentExpression	riter = iter		4800099	0		=			
ANR	4800167	Identifier	riter		4800099	0					
ANR	4800168	Identifier	iter		4800099	1					
ANR	4800169	IfStatement	if ( riter )		4800099	15					
ANR	4800170	Condition	riter	201:5:4253:4257	4800099	0	True				
ANR	4800171	Identifier	riter		4800099	0					
ANR	4800172	CompoundStatement		16:12:247:247	4800099	1					
ANR	4800173	ExpressionStatement	"r_list_delete ( fs -> roots , riter )"	202:2:4264:4296	4800099	0	True				
ANR	4800174	CallExpression	"r_list_delete ( fs -> roots , riter )"		4800099	0					
ANR	4800175	Callee	r_list_delete		4800099	0					
ANR	4800176	Identifier	r_list_delete		4800099	0					
ANR	4800177	ArgumentList	fs -> roots		4800099	1					
ANR	4800178	Argument	fs -> roots		4800099	0					
ANR	4800179	PtrMemberAccess	fs -> roots		4800099	0					
ANR	4800180	Identifier	fs		4800099	0					
ANR	4800181	Identifier	roots		4800099	1					
ANR	4800182	Argument	riter		4800099	1					
ANR	4800183	Identifier	riter		4800099	0					
ANR	4800184	ReturnStatement	return true ;	203:2:4300:4311	4800099	1	True				
ANR	4800185	Identifier	true		4800099	0					
ANR	4800186	ReturnStatement	return false ;	205:1:4317:4329	4800099	16	True				
ANR	4800187	Identifier	false		4800099	0					
ANR	4800188	ReturnType	R_API bool		4800099	1					
ANR	4800189	Identifier	r_fs_umount		4800099	2					
ANR	4800190	ParameterList	"RFS * fs , const char * path"		4800099	3					
ANR	4800191	Parameter	RFS * fs	186:23:3985:3991	4800099	0	True				
ANR	4800192	ParameterType	RFS *		4800099	0					
ANR	4800193	Identifier	fs		4800099	1					
ANR	4800194	Parameter	const char * path	186:32:3994:4009	4800099	1	True				
ANR	4800195	ParameterType	const char *		4800099	0					
ANR	4800196	Identifier	path		4800099	1					
ANR	4800197	CFGEntryNode	ENTRY		4800099		True				
ANR	4800198	CFGExitNode	EXIT		4800099		True				
ANR	4800199	Symbol	fs -> roots		4800099						
ANR	4800200	Symbol	NULL		4800099						
ANR	4800201	Symbol	false		4800099						
ANR	4800202	Symbol	r_fs_match		4800099						
ANR	4800203	Symbol	iter		4800099						
ANR	4800204	Symbol	fs		4800099						
ANR	4800205	Symbol	* fs		4800099						
ANR	4800206	Symbol	path		4800099						
ANR	4800207	Symbol	strlen		4800099						
ANR	4800208	Symbol	len		4800099						
ANR	4800209	Symbol	root		4800099						
ANR	4800210	Symbol	root -> path		4800099						
ANR	4800211	Symbol	true		4800099						
ANR	4800212	Symbol	* root		4800099						
ANR	4800213	Symbol	riter		4800099						
ANR	4800214	Function	r_fs_root	208:0:4334:4884							
ANR	4800215	FunctionDef	"r_fs_root (RFS * fs , const char * p)"		4800214	0					
ANR	4800216	CompoundStatement		208:47:4381:4884	4800214	0					
ANR	4800217	IdentifierDeclStatement	RList * roots ;	209:1:4384:4396	4800214	0	True				
ANR	4800218	IdentifierDecl	* roots		4800214	0					
ANR	4800219	IdentifierDeclType	RList *		4800214	0					
ANR	4800220	Identifier	roots		4800214	1					
ANR	4800221	IdentifierDeclStatement	RFSRoot * root ;	210:1:4399:4412	4800214	1	True				
ANR	4800222	IdentifierDecl	* root		4800214	0					
ANR	4800223	IdentifierDeclType	RFSRoot *		4800214	0					
ANR	4800224	Identifier	root		4800214	1					
ANR	4800225	IdentifierDeclStatement	RListIter * iter ;	211:1:4415:4430	4800214	2	True				
ANR	4800226	IdentifierDecl	* iter		4800214	0					
ANR	4800227	IdentifierDeclType	RListIter *		4800214	0					
ANR	4800228	Identifier	iter		4800214	1					
ANR	4800229	IdentifierDeclStatement	"int len , olen ;"	212:1:4433:4446	4800214	3	True				
ANR	4800230	IdentifierDecl	len		4800214	0					
ANR	4800231	IdentifierDeclType	int		4800214	0					
ANR	4800232	Identifier	len		4800214	1					
ANR	4800233	IdentifierDecl	olen		4800214	1					
ANR	4800234	IdentifierDeclType	int		4800214	0					
ANR	4800235	Identifier	olen		4800214	1					
ANR	4800236	IdentifierDeclStatement	char * path = strdup ( p ) ;	213:1:4449:4472	4800214	4	True				
ANR	4800237	IdentifierDecl	* path = strdup ( p )		4800214	0					
ANR	4800238	IdentifierDeclType	char *		4800214	0					
ANR	4800239	Identifier	path		4800214	1					
ANR	4800240	AssignmentExpression	* path = strdup ( p )		4800214	2		=			
ANR	4800241	Identifier	path		4800214	0					
ANR	4800242	CallExpression	strdup ( p )		4800214	1					
ANR	4800243	Callee	strdup		4800214	0					
ANR	4800244	Identifier	strdup		4800214	0					
ANR	4800245	ArgumentList	p		4800214	1					
ANR	4800246	Argument	p		4800214	0					
ANR	4800247	Identifier	p		4800214	0					
ANR	4800248	IfStatement	if ( ! path )		4800214	5					
ANR	4800249	Condition	! path	214:5:4479:4483	4800214	0	True				
ANR	4800250	UnaryOperationExpression	! path		4800214	0					
ANR	4800251	UnaryOperator	!		4800214	0					
ANR	4800252	Identifier	path		4800214	1					
ANR	4800253	CompoundStatement		7:12:104:104	4800214	1					
ANR	4800254	ReturnStatement	return NULL ;	215:2:4490:4501	4800214	0	True				
ANR	4800255	Identifier	NULL		4800214	0					
ANR	4800256	ExpressionStatement	roots = r_list_new ( )	217:1:4507:4528	4800214	6	True				
ANR	4800257	AssignmentExpression	roots = r_list_new ( )		4800214	0		=			
ANR	4800258	Identifier	roots		4800214	0					
ANR	4800259	CallExpression	r_list_new ( )		4800214	1					
ANR	4800260	Callee	r_list_new		4800214	0					
ANR	4800261	Identifier	r_list_new		4800214	0					
ANR	4800262	ArgumentList			4800214	1					
ANR	4800263	ExpressionStatement	r_str_trim_path ( path )	218:1:4531:4553	4800214	7	True				
ANR	4800264	CallExpression	r_str_trim_path ( path )		4800214	0					
ANR	4800265	Callee	r_str_trim_path		4800214	0					
ANR	4800266	Identifier	r_str_trim_path		4800214	0					
ANR	4800267	ArgumentList	path		4800214	1					
ANR	4800268	Argument	path		4800214	0					
ANR	4800269	Identifier	path		4800214	0					
ANR	4800270	Statement	r_list_foreach	219:1:4556:4569	4800214	8	True				
ANR	4800271	Statement	(	219:16:4571:4571	4800214	9	True				
ANR	4800272	Statement	fs	219:17:4572:4573	4800214	10	True				
ANR	4800273	Statement	->	219:19:4574:4575	4800214	11	True				
ANR	4800274	Statement	roots	219:21:4576:4580	4800214	12	True				
ANR	4800275	Statement	","	219:26:4581:4581	4800214	13	True				
ANR	4800276	Statement	iter	219:28:4583:4586	4800214	14	True				
ANR	4800277	Statement	","	219:32:4587:4587	4800214	15	True				
ANR	4800278	Statement	root	219:34:4589:4592	4800214	16	True				
ANR	4800279	Statement	)	219:38:4593:4593	4800214	17	True				
ANR	4800280	CompoundStatement		12:40:213:213	4800214	18					
ANR	4800281	ExpressionStatement	len = strlen ( root -> path )	220:2:4599:4624	4800214	0	True				
ANR	4800282	AssignmentExpression	len = strlen ( root -> path )		4800214	0		=			
ANR	4800283	Identifier	len		4800214	0					
ANR	4800284	CallExpression	strlen ( root -> path )		4800214	1					
ANR	4800285	Callee	strlen		4800214	0					
ANR	4800286	Identifier	strlen		4800214	0					
ANR	4800287	ArgumentList	root -> path		4800214	1					
ANR	4800288	Argument	root -> path		4800214	0					
ANR	4800289	PtrMemberAccess	root -> path		4800214	0					
ANR	4800290	Identifier	root		4800214	0					
ANR	4800291	Identifier	path		4800214	1					
ANR	4800292	IfStatement	"if ( r_fs_match ( path , root -> path , len ) )"		4800214	1					
ANR	4800293	Condition	"r_fs_match ( path , root -> path , len )"	221:6:4632:4665	4800214	0	True				
ANR	4800294	CallExpression	"r_fs_match ( path , root -> path , len )"		4800214	0					
ANR	4800295	Callee	r_fs_match		4800214	0					
ANR	4800296	Identifier	r_fs_match		4800214	0					
ANR	4800297	ArgumentList	path		4800214	1					
ANR	4800298	Argument	path		4800214	0					
ANR	4800299	Identifier	path		4800214	0					
ANR	4800300	Argument	root -> path		4800214	1					
ANR	4800301	PtrMemberAccess	root -> path		4800214	0					
ANR	4800302	Identifier	root		4800214	0					
ANR	4800303	Identifier	path		4800214	1					
ANR	4800304	Argument	len		4800214	2					
ANR	4800305	Identifier	len		4800214	0					
ANR	4800306	CompoundStatement		14:42:286:286	4800214	1					
ANR	4800307	ExpressionStatement	olen = strlen ( path )	222:3:4673:4693	4800214	0	True				
ANR	4800308	AssignmentExpression	olen = strlen ( path )		4800214	0		=			
ANR	4800309	Identifier	olen		4800214	0					
ANR	4800310	CallExpression	strlen ( path )		4800214	1					
ANR	4800311	Callee	strlen		4800214	0					
ANR	4800312	Identifier	strlen		4800214	0					
ANR	4800313	ArgumentList	path		4800214	1					
ANR	4800314	Argument	path		4800214	0					
ANR	4800315	Identifier	path		4800214	0					
ANR	4800316	IfStatement	if ( len == 1 || olen == len )		4800214	1					
ANR	4800317	Condition	len == 1 || olen == len	223:7:4702:4724	4800214	0	True				
ANR	4800318	OrExpression	len == 1 || olen == len		4800214	0		||			
ANR	4800319	EqualityExpression	len == 1		4800214	0		==			
ANR	4800320	Identifier	len		4800214	0					
ANR	4800321	PrimaryExpression	1		4800214	1					
ANR	4800322	EqualityExpression	olen == len		4800214	1		==			
ANR	4800323	Identifier	olen		4800214	0					
ANR	4800324	Identifier	len		4800214	1					
ANR	4800325	CompoundStatement		16:32:345:345	4800214	1					
ANR	4800326	ExpressionStatement	"r_list_append ( roots , root )"	224:4:4733:4760	4800214	0	True				
ANR	4800327	CallExpression	"r_list_append ( roots , root )"		4800214	0					
ANR	4800328	Callee	r_list_append		4800214	0					
ANR	4800329	Identifier	r_list_append		4800214	0					
ANR	4800330	ArgumentList	roots		4800214	1					
ANR	4800331	Argument	roots		4800214	0					
ANR	4800332	Identifier	roots		4800214	0					
ANR	4800333	Argument	root		4800214	1					
ANR	4800334	Identifier	root		4800214	0					
ANR	4800335	ElseStatement	else		4800214	0					
ANR	4800336	IfStatement	if ( olen > len && path [ len ] == '/' )		4800214	0					
ANR	4800337	Condition	olen > len && path [ len ] == '/'	225:14:4776:4805	4800214	0	True				
ANR	4800338	AndExpression	olen > len && path [ len ] == '/'		4800214	0		&&			
ANR	4800339	RelationalExpression	olen > len		4800214	0		>			
ANR	4800340	Identifier	olen		4800214	0					
ANR	4800341	Identifier	len		4800214	1					
ANR	4800342	EqualityExpression	path [ len ] == '/'		4800214	1		==			
ANR	4800343	ArrayIndexing	path [ len ]		4800214	0					
ANR	4800344	Identifier	path		4800214	0					
ANR	4800345	Identifier	len		4800214	1					
ANR	4800346	PrimaryExpression	'/'		4800214	1					
ANR	4800347	CompoundStatement		18:46:426:426	4800214	1					
ANR	4800348	ExpressionStatement	"r_list_append ( roots , root )"	226:4:4814:4841	4800214	0	True				
ANR	4800349	CallExpression	"r_list_append ( roots , root )"		4800214	0					
ANR	4800350	Callee	r_list_append		4800214	0					
ANR	4800351	Identifier	r_list_append		4800214	0					
ANR	4800352	ArgumentList	roots		4800214	1					
ANR	4800353	Argument	roots		4800214	0					
ANR	4800354	Identifier	roots		4800214	0					
ANR	4800355	Argument	root		4800214	1					
ANR	4800356	Identifier	root		4800214	0					
ANR	4800357	ExpressionStatement	free ( path )	230:1:4856:4867	4800214	19	True				
ANR	4800358	CallExpression	free ( path )		4800214	0					
ANR	4800359	Callee	free		4800214	0					
ANR	4800360	Identifier	free		4800214	0					
ANR	4800361	ArgumentList	path		4800214	1					
ANR	4800362	Argument	path		4800214	0					
ANR	4800363	Identifier	path		4800214	0					
ANR	4800364	ReturnStatement	return roots ;	231:1:4870:4882	4800214	20	True				
ANR	4800365	Identifier	roots		4800214	0					
ANR	4800366	ReturnType	R_API RList *		4800214	1					
ANR	4800367	Identifier	r_fs_root		4800214	2					
ANR	4800368	ParameterList	"RFS * fs , const char * p"		4800214	3					
ANR	4800369	Parameter	RFS * fs	208:23:4357:4363	4800214	0	True				
ANR	4800370	ParameterType	RFS *		4800214	0					
ANR	4800371	Identifier	fs		4800214	1					
ANR	4800372	Parameter	const char * p	208:32:4366:4378	4800214	1	True				
ANR	4800373	ParameterType	const char *		4800214	0					
ANR	4800374	Identifier	p		4800214	1					
ANR	4800375	CFGEntryNode	ENTRY		4800214		True				
ANR	4800376	CFGExitNode	EXIT		4800214		True				
ANR	4800377	Symbol	NULL		4800214						
ANR	4800378	Symbol	r_fs_match		4800214						
ANR	4800379	Symbol	iter		4800214						
ANR	4800380	Symbol	roots		4800214						
ANR	4800381	Symbol	fs		4800214						
ANR	4800382	Symbol	p		4800214						
ANR	4800383	Symbol	path		4800214						
ANR	4800384	Symbol	strlen		4800214						
ANR	4800385	Symbol	olen		4800214						
ANR	4800386	Symbol	len		4800214						
ANR	4800387	Symbol	root		4800214						
ANR	4800388	Symbol	root -> path		4800214						
ANR	4800389	Symbol	* path		4800214						
ANR	4800390	Symbol	strdup		4800214						
ANR	4800391	Symbol	* root		4800214						
ANR	4800392	Symbol	r_list_new		4800214						
ANR	4800393	Symbol	* len		4800214						
ANR	4800394	Function	r_fs_open	235:0:4899:5613							
ANR	4800395	FunctionDef	"r_fs_open (RFS * fs , const char * p , bool create)"		4800394	0					
ANR	4800396	CompoundStatement		235:62:4961:5613	4800394	0					
ANR	4800397	IdentifierDeclStatement	RFSRoot * root ;	236:1:4964:4977	4800394	0	True				
ANR	4800398	IdentifierDecl	* root		4800394	0					
ANR	4800399	IdentifierDeclType	RFSRoot *		4800394	0					
ANR	4800400	Identifier	root		4800394	1					
ANR	4800401	IdentifierDeclStatement	RListIter * iter ;	237:1:4980:4995	4800394	1	True				
ANR	4800402	IdentifierDecl	* iter		4800394	0					
ANR	4800403	IdentifierDeclType	RListIter *		4800394	0					
ANR	4800404	Identifier	iter		4800394	1					
ANR	4800405	IdentifierDeclStatement	RFSFile * f = NULL ;	238:1:4998:5015	4800394	2	True				
ANR	4800406	IdentifierDecl	* f = NULL		4800394	0					
ANR	4800407	IdentifierDeclType	RFSFile *		4800394	0					
ANR	4800408	Identifier	f		4800394	1					
ANR	4800409	AssignmentExpression	* f = NULL		4800394	2		=			
ANR	4800410	Identifier	NULL		4800394	0					
ANR	4800411	Identifier	NULL		4800394	1					
ANR	4800412	IdentifierDeclStatement	const char * dir ;	239:1:5018:5033	4800394	3	True				
ANR	4800413	IdentifierDecl	* dir		4800394	0					
ANR	4800414	IdentifierDeclType	const char *		4800394	0					
ANR	4800415	Identifier	dir		4800394	1					
ANR	4800416	IdentifierDeclStatement	char * path = r_str_trim_dup ( p ) ;	240:1:5036:5067	4800394	4	True				
ANR	4800417	IdentifierDecl	* path = r_str_trim_dup ( p )		4800394	0					
ANR	4800418	IdentifierDeclType	char *		4800394	0					
ANR	4800419	Identifier	path		4800394	1					
ANR	4800420	AssignmentExpression	* path = r_str_trim_dup ( p )		4800394	2		=			
ANR	4800421	Identifier	path		4800394	0					
ANR	4800422	CallExpression	r_str_trim_dup ( p )		4800394	1					
ANR	4800423	Callee	r_str_trim_dup		4800394	0					
ANR	4800424	Identifier	r_str_trim_dup		4800394	0					
ANR	4800425	ArgumentList	p		4800394	1					
ANR	4800426	Argument	p		4800394	0					
ANR	4800427	Identifier	p		4800394	0					
ANR	4800428	IdentifierDeclStatement	"RList * roots = r_fs_root ( fs , path ) ;"	241:1:5070:5105	4800394	5	True				
ANR	4800429	IdentifierDecl	"* roots = r_fs_root ( fs , path )"		4800394	0					
ANR	4800430	IdentifierDeclType	RList *		4800394	0					
ANR	4800431	Identifier	roots		4800394	1					
ANR	4800432	AssignmentExpression	"* roots = r_fs_root ( fs , path )"		4800394	2		=			
ANR	4800433	Identifier	roots		4800394	0					
ANR	4800434	CallExpression	"r_fs_root ( fs , path )"		4800394	1					
ANR	4800435	Callee	r_fs_root		4800394	0					
ANR	4800436	Identifier	r_fs_root		4800394	0					
ANR	4800437	ArgumentList	fs		4800394	1					
ANR	4800438	Argument	fs		4800394	0					
ANR	4800439	Identifier	fs		4800394	0					
ANR	4800440	Argument	path		4800394	1					
ANR	4800441	Identifier	path		4800394	0					
ANR	4800442	IfStatement	if ( ! r_list_empty ( roots ) )		4800394	6					
ANR	4800443	Condition	! r_list_empty ( roots )	242:5:5112:5132	4800394	0	True				
ANR	4800444	UnaryOperationExpression	! r_list_empty ( roots )		4800394	0					
ANR	4800445	UnaryOperator	!		4800394	0					
ANR	4800446	CallExpression	r_list_empty ( roots )		4800394	1					
ANR	4800447	Callee	r_list_empty		4800394	0					
ANR	4800448	Identifier	r_list_empty		4800394	0					
ANR	4800449	ArgumentList	roots		4800394	1					
ANR	4800450	Argument	roots		4800394	0					
ANR	4800451	Identifier	roots		4800394	0					
ANR	4800452	CompoundStatement		8:28:173:173	4800394	1					
ANR	4800453	Statement	r_list_foreach	243:2:5139:5152	4800394	0	True				
ANR	4800454	Statement	(	243:17:5154:5154	4800394	1	True				
ANR	4800455	Statement	roots	243:18:5155:5159	4800394	2	True				
ANR	4800456	Statement	","	243:23:5160:5160	4800394	3	True				
ANR	4800457	Statement	iter	243:25:5162:5165	4800394	4	True				
ANR	4800458	Statement	","	243:29:5166:5166	4800394	5	True				
ANR	4800459	Statement	root	243:31:5168:5171	4800394	6	True				
ANR	4800460	Statement	)	243:35:5172:5172	4800394	7	True				
ANR	4800461	CompoundStatement		9:37:212:212	4800394	8					
ANR	4800462	IfStatement	if ( create )		4800394	0					
ANR	4800463	Condition	create	244:7:5183:5188	4800394	0	True				
ANR	4800464	Identifier	create		4800394	0					
ANR	4800465	CompoundStatement		10:15:229:229	4800394	1					
ANR	4800466	IfStatement	if ( root && root -> p && root -> p -> write )		4800394	0					
ANR	4800467	Condition	root && root -> p && root -> p -> write	245:8:5201:5233	4800394	0	True				
ANR	4800468	AndExpression	root && root -> p && root -> p -> write		4800394	0		&&			
ANR	4800469	Identifier	root		4800394	0					
ANR	4800470	AndExpression	root -> p && root -> p -> write		4800394	1		&&			
ANR	4800471	PtrMemberAccess	root -> p		4800394	0					
ANR	4800472	Identifier	root		4800394	0					
ANR	4800473	Identifier	p		4800394	1					
ANR	4800474	PtrMemberAccess	root -> p -> write		4800394	1					
ANR	4800475	PtrMemberAccess	root -> p		4800394	0					
ANR	4800476	Identifier	root		4800394	0					
ANR	4800477	Identifier	p		4800394	1					
ANR	4800478	Identifier	write		4800394	1					
ANR	4800479	CompoundStatement		11:43:274:274	4800394	1					
ANR	4800480	ExpressionStatement	"f = r_fs_file_new ( root , path + strlen ( root -> path ) )"	246:5:5243:5295	4800394	0	True				
ANR	4800481	AssignmentExpression	"f = r_fs_file_new ( root , path + strlen ( root -> path ) )"		4800394	0		=			
ANR	4800482	Identifier	f		4800394	0					
ANR	4800483	CallExpression	"r_fs_file_new ( root , path + strlen ( root -> path ) )"		4800394	1					
ANR	4800484	Callee	r_fs_file_new		4800394	0					
ANR	4800485	Identifier	r_fs_file_new		4800394	0					
ANR	4800486	ArgumentList	root		4800394	1					
ANR	4800487	Argument	root		4800394	0					
ANR	4800488	Identifier	root		4800394	0					
ANR	4800489	Argument	path + strlen ( root -> path )		4800394	1					
ANR	4800490	AdditiveExpression	path + strlen ( root -> path )		4800394	0		+			
ANR	4800491	Identifier	path		4800394	0					
ANR	4800492	CallExpression	strlen ( root -> path )		4800394	1					
ANR	4800493	Callee	strlen		4800394	0					
ANR	4800494	Identifier	strlen		4800394	0					
ANR	4800495	ArgumentList	root -> path		4800394	1					
ANR	4800496	Argument	root -> path		4800394	0					
ANR	4800497	PtrMemberAccess	root -> path		4800394	0					
ANR	4800498	Identifier	root		4800394	0					
ANR	4800499	Identifier	path		4800394	1					
ANR	4800500	BreakStatement	break ;	247:5:5302:5307	4800394	1	True				
ANR	4800501	ContinueStatement	continue ;	249:4:5319:5327	4800394	1	True				
ANR	4800502	IfStatement	if ( root && root -> p && root -> p -> open )		4800394	1					
ANR	4800503	Condition	root && root -> p && root -> p -> open	251:7:5341:5372	4800394	0	True				
ANR	4800504	AndExpression	root && root -> p && root -> p -> open		4800394	0		&&			
ANR	4800505	Identifier	root		4800394	0					
ANR	4800506	AndExpression	root -> p && root -> p -> open		4800394	1		&&			
ANR	4800507	PtrMemberAccess	root -> p		4800394	0					
ANR	4800508	Identifier	root		4800394	0					
ANR	4800509	Identifier	p		4800394	1					
ANR	4800510	PtrMemberAccess	root -> p -> open		4800394	1					
ANR	4800511	PtrMemberAccess	root -> p		4800394	0					
ANR	4800512	Identifier	root		4800394	0					
ANR	4800513	Identifier	p		4800394	1					
ANR	4800514	Identifier	open		4800394	1					
ANR	4800515	CompoundStatement		17:41:413:413	4800394	1					
ANR	4800516	IfStatement	if ( strlen ( root -> path ) == 1 )		4800394	0					
ANR	4800517	Condition	strlen ( root -> path ) == 1	252:8:5385:5408	4800394	0	True				
ANR	4800518	EqualityExpression	strlen ( root -> path ) == 1		4800394	0		==			
ANR	4800519	CallExpression	strlen ( root -> path )		4800394	0					
ANR	4800520	Callee	strlen		4800394	0					
ANR	4800521	Identifier	strlen		4800394	0					
ANR	4800522	ArgumentList	root -> path		4800394	1					
ANR	4800523	Argument	root -> path		4800394	0					
ANR	4800524	PtrMemberAccess	root -> path		4800394	0					
ANR	4800525	Identifier	root		4800394	0					
ANR	4800526	Identifier	path		4800394	1					
ANR	4800527	PrimaryExpression	1		4800394	1					
ANR	4800528	CompoundStatement		18:34:449:449	4800394	1					
ANR	4800529	ExpressionStatement	dir = path	253:5:5418:5428	4800394	0	True				
ANR	4800530	AssignmentExpression	dir = path		4800394	0		=			
ANR	4800531	Identifier	dir		4800394	0					
ANR	4800532	Identifier	path		4800394	1					
ANR	4800533	ElseStatement	else		4800394	0					
ANR	4800534	CompoundStatement		20:11:479:479	4800394	0					
ANR	4800535	ExpressionStatement	dir = path + strlen ( root -> path )	255:5:5448:5480	4800394	0	True				
ANR	4800536	AssignmentExpression	dir = path + strlen ( root -> path )		4800394	0		=			
ANR	4800537	Identifier	dir		4800394	0					
ANR	4800538	AdditiveExpression	path + strlen ( root -> path )		4800394	1		+			
ANR	4800539	Identifier	path		4800394	0					
ANR	4800540	CallExpression	strlen ( root -> path )		4800394	1					
ANR	4800541	Callee	strlen		4800394	0					
ANR	4800542	Identifier	strlen		4800394	0					
ANR	4800543	ArgumentList	root -> path		4800394	1					
ANR	4800544	Argument	root -> path		4800394	0					
ANR	4800545	PtrMemberAccess	root -> path		4800394	0					
ANR	4800546	Identifier	root		4800394	0					
ANR	4800547	Identifier	path		4800394	1					
ANR	4800548	ExpressionStatement	"f = root -> p -> open ( root , dir , false )"	257:4:5492:5528	4800394	1	True				
ANR	4800549	AssignmentExpression	"f = root -> p -> open ( root , dir , false )"		4800394	0		=			
ANR	4800550	Identifier	f		4800394	0					
ANR	4800551	CallExpression	"root -> p -> open ( root , dir , false )"		4800394	1					
ANR	4800552	Callee	root -> p -> open		4800394	0					
ANR	4800553	PtrMemberAccess	root -> p -> open		4800394	0					
ANR	4800554	PtrMemberAccess	root -> p		4800394	0					
ANR	4800555	Identifier	root		4800394	0					
ANR	4800556	Identifier	p		4800394	1					
ANR	4800557	Identifier	open		4800394	1					
ANR	4800558	ArgumentList	root		4800394	1					
ANR	4800559	Argument	root		4800394	0					
ANR	4800560	Identifier	root		4800394	0					
ANR	4800561	Argument	dir		4800394	1					
ANR	4800562	Identifier	dir		4800394	0					
ANR	4800563	Argument	false		4800394	2					
ANR	4800564	Identifier	false		4800394	0					
ANR	4800565	IfStatement	if ( f )		4800394	2					
ANR	4800566	Condition	f	258:8:5538:5538	4800394	0	True				
ANR	4800567	Identifier	f		4800394	0					
ANR	4800568	CompoundStatement		24:11:579:579	4800394	1					
ANR	4800569	BreakStatement	break ;	259:5:5548:5553	4800394	0	True				
ANR	4800570	ExpressionStatement	free ( roots )	264:1:5574:5586	4800394	7	True				
ANR	4800571	CallExpression	free ( roots )		4800394	0					
ANR	4800572	Callee	free		4800394	0					
ANR	4800573	Identifier	free		4800394	0					
ANR	4800574	ArgumentList	roots		4800394	1					
ANR	4800575	Argument	roots		4800394	0					
ANR	4800576	Identifier	roots		4800394	0					
ANR	4800577	ExpressionStatement	free ( path )	265:1:5589:5600	4800394	8	True				
ANR	4800578	CallExpression	free ( path )		4800394	0					
ANR	4800579	Callee	free		4800394	0					
ANR	4800580	Identifier	free		4800394	0					
ANR	4800581	ArgumentList	path		4800394	1					
ANR	4800582	Argument	path		4800394	0					
ANR	4800583	Identifier	path		4800394	0					
ANR	4800584	ReturnStatement	return f ;	266:1:5603:5611	4800394	9	True				
ANR	4800585	Identifier	f		4800394	0					
ANR	4800586	ReturnType	R_API RFSFile *		4800394	1					
ANR	4800587	Identifier	r_fs_open		4800394	2					
ANR	4800588	ParameterList	"RFS * fs , const char * p , bool create"		4800394	3					
ANR	4800589	Parameter	RFS * fs	235:25:4924:4930	4800394	0	True				
ANR	4800590	ParameterType	RFS *		4800394	0					
ANR	4800591	Identifier	fs		4800394	1					
ANR	4800592	Parameter	const char * p	235:34:4933:4945	4800394	1	True				
ANR	4800593	ParameterType	const char *		4800394	0					
ANR	4800594	Identifier	p		4800394	1					
ANR	4800595	Parameter	bool create	235:49:4948:4958	4800394	2	True				
ANR	4800596	ParameterType	bool		4800394	0					
ANR	4800597	Identifier	create		4800394	1					
ANR	4800598	CFGEntryNode	ENTRY		4800394		True				
ANR	4800599	CFGExitNode	EXIT		4800394		True				
ANR	4800600	CFGErrorNode	ERROR		4800394		True				
ANR	4800601	Symbol	NULL		4800394						
ANR	4800602	Symbol	* root -> p		4800394						
ANR	4800603	Symbol	root -> p		4800394						
ANR	4800604	Symbol	f		4800394						
ANR	4800605	Symbol	false		4800394						
ANR	4800606	Symbol	iter		4800394						
ANR	4800607	Symbol	roots		4800394						
ANR	4800608	Symbol	dir		4800394						
ANR	4800609	Symbol	fs		4800394						
ANR	4800610	Symbol	r_str_trim_dup		4800394						
ANR	4800611	Symbol	p		4800394						
ANR	4800612	Symbol	path		4800394						
ANR	4800613	Symbol	strlen		4800394						
ANR	4800614	Symbol	* * root		4800394						
ANR	4800615	Symbol	r_fs_root		4800394						
ANR	4800616	Symbol	root		4800394						
ANR	4800617	Symbol	r_fs_file_new		4800394						
ANR	4800618	Symbol	root -> path		4800394						
ANR	4800619	Symbol	create		4800394						
ANR	4800620	Symbol	r_list_empty		4800394						
ANR	4800621	Symbol	root -> p -> write		4800394						
ANR	4800622	Symbol	* root		4800394						
ANR	4800623	Symbol	root -> p -> open		4800394						
ANR	4800624	Function	r_fs_close	270:0:5643:5801							
ANR	4800625	FunctionDef	"r_fs_close (RFS * fs , RFSFile * file)"		4800624	0					
ANR	4800626	CompoundStatement		270:46:5689:5801	4800624	0					
ANR	4800627	IfStatement	if ( fs && file )		4800624	0					
ANR	4800628	Condition	fs && file	271:5:5696:5705	4800624	0	True				
ANR	4800629	AndExpression	fs && file		4800624	0		&&			
ANR	4800630	Identifier	fs		4800624	0					
ANR	4800631	Identifier	file		4800624	1					
ANR	4800632	CompoundStatement		2:17:18:18	4800624	1					
ANR	4800633	ExpressionStatement	R_FREE ( file -> data )	272:2:5712:5731	4800624	0	True				
ANR	4800634	CallExpression	R_FREE ( file -> data )		4800624	0					
ANR	4800635	Callee	R_FREE		4800624	0					
ANR	4800636	Identifier	R_FREE		4800624	0					
ANR	4800637	ArgumentList	file -> data		4800624	1					
ANR	4800638	Argument	file -> data		4800624	0					
ANR	4800639	PtrMemberAccess	file -> data		4800624	0					
ANR	4800640	Identifier	file		4800624	0					
ANR	4800641	Identifier	data		4800624	1					
ANR	4800642	IfStatement	if ( file -> p && file -> p -> close )		4800624	1					
ANR	4800643	Condition	file -> p && file -> p -> close	273:6:5739:5763	4800624	0	True				
ANR	4800644	AndExpression	file -> p && file -> p -> close		4800624	0		&&			
ANR	4800645	PtrMemberAccess	file -> p		4800624	0					
ANR	4800646	Identifier	file		4800624	0					
ANR	4800647	Identifier	p		4800624	1					
ANR	4800648	PtrMemberAccess	file -> p -> close		4800624	1					
ANR	4800649	PtrMemberAccess	file -> p		4800624	0					
ANR	4800650	Identifier	file		4800624	0					
ANR	4800651	Identifier	p		4800624	1					
ANR	4800652	Identifier	close		4800624	1					
ANR	4800653	CompoundStatement		4:33:76:76	4800624	1					
ANR	4800654	ExpressionStatement	file -> p -> close ( file )	274:3:5771:5792	4800624	0	True				
ANR	4800655	CallExpression	file -> p -> close ( file )		4800624	0					
ANR	4800656	Callee	file -> p -> close		4800624	0					
ANR	4800657	PtrMemberAccess	file -> p -> close		4800624	0					
ANR	4800658	PtrMemberAccess	file -> p		4800624	0					
ANR	4800659	Identifier	file		4800624	0					
ANR	4800660	Identifier	p		4800624	1					
ANR	4800661	Identifier	close		4800624	1					
ANR	4800662	ArgumentList	file		4800624	1					
ANR	4800663	Argument	file		4800624	0					
ANR	4800664	Identifier	file		4800624	0					
ANR	4800665	ReturnType	R_API void		4800624	1					
ANR	4800666	Identifier	r_fs_close		4800624	2					
ANR	4800667	ParameterList	"RFS * fs , RFSFile * file"		4800624	3					
ANR	4800668	Parameter	RFS * fs	270:22:5665:5671	4800624	0	True				
ANR	4800669	ParameterType	RFS *		4800624	0					
ANR	4800670	Identifier	fs		4800624	1					
ANR	4800671	Parameter	RFSFile * file	270:31:5674:5686	4800624	1	True				
ANR	4800672	ParameterType	RFSFile *		4800624	0					
ANR	4800673	Identifier	file		4800624	1					
ANR	4800674	CFGEntryNode	ENTRY		4800624		True				
ANR	4800675	CFGExitNode	EXIT		4800624		True				
ANR	4800676	Symbol	file		4800624						
ANR	4800677	Symbol	file -> p		4800624						
ANR	4800678	Symbol	file -> data		4800624						
ANR	4800679	Symbol	* file -> p		4800624						
ANR	4800680	Symbol	* file		4800624						
ANR	4800681	Symbol	fs		4800624						
ANR	4800682	Symbol	file -> p -> close		4800624						
ANR	4800683	Symbol	* * file		4800624						
ANR	4800684	Function	r_fs_write	279:0:5804:6167							
ANR	4800685	FunctionDef	"r_fs_write (RFS * fs , RFSFile * file , ut64 addr , const ut8 * data , int len)"		4800684	0					
ANR	4800686	CompoundStatement		279:82:5886:6167	4800684	0					
ANR	4800687	IfStatement	if ( len < 1 )		4800684	0					
ANR	4800688	Condition	len < 1	280:5:5893:5899	4800684	0	True				
ANR	4800689	RelationalExpression	len < 1		4800684	0		<			
ANR	4800690	Identifier	len		4800684	0					
ANR	4800691	PrimaryExpression	1		4800684	1					
ANR	4800692	CompoundStatement		2:14:15:15	4800684	1					
ANR	4800693	ReturnStatement	return false ;	281:2:5906:5918	4800684	0	True				
ANR	4800694	Identifier	false		4800684	0					
ANR	4800695	IfStatement	if ( fs && file )		4800684	1					
ANR	4800696	Condition	fs && file	283:5:5928:5937	4800684	0	True				
ANR	4800697	AndExpression	fs && file		4800684	0		&&			
ANR	4800698	Identifier	fs		4800684	0					
ANR	4800699	Identifier	file		4800684	1					
ANR	4800700	CompoundStatement		5:17:53:53	4800684	1					
ANR	4800701	IfStatement	if ( file -> p && file -> p -> write )		4800684	0					
ANR	4800702	Condition	file -> p && file -> p -> write	285:6:6005:6029	4800684	0	True				
ANR	4800703	AndExpression	file -> p && file -> p -> write		4800684	0		&&			
ANR	4800704	PtrMemberAccess	file -> p		4800684	0					
ANR	4800705	Identifier	file		4800684	0					
ANR	4800706	Identifier	p		4800684	1					
ANR	4800707	PtrMemberAccess	file -> p -> write		4800684	1					
ANR	4800708	PtrMemberAccess	file -> p		4800684	0					
ANR	4800709	Identifier	file		4800684	0					
ANR	4800710	Identifier	p		4800684	1					
ANR	4800711	Identifier	write		4800684	1					
ANR	4800712	CompoundStatement		7:33:145:145	4800684	1					
ANR	4800713	ExpressionStatement	"file -> p -> write ( file , addr , data , len )"	286:3:6037:6075	4800684	0	True				
ANR	4800714	CallExpression	"file -> p -> write ( file , addr , data , len )"		4800684	0					
ANR	4800715	Callee	file -> p -> write		4800684	0					
ANR	4800716	PtrMemberAccess	file -> p -> write		4800684	0					
ANR	4800717	PtrMemberAccess	file -> p		4800684	0					
ANR	4800718	Identifier	file		4800684	0					
ANR	4800719	Identifier	p		4800684	1					
ANR	4800720	Identifier	write		4800684	1					
ANR	4800721	ArgumentList	file		4800684	1					
ANR	4800722	Argument	file		4800684	0					
ANR	4800723	Identifier	file		4800684	0					
ANR	4800724	Argument	addr		4800684	1					
ANR	4800725	Identifier	addr		4800684	0					
ANR	4800726	Argument	data		4800684	2					
ANR	4800727	Identifier	data		4800684	0					
ANR	4800728	Argument	len		4800684	3					
ANR	4800729	Identifier	len		4800684	0					
ANR	4800730	ReturnStatement	return true ;	287:3:6080:6091	4800684	1	True				
ANR	4800731	Identifier	true		4800684	0					
ANR	4800732	ExpressionStatement	"eprintf ( ""r_fs_write: file->p->write is null\\n"" )"	289:2:6099:6147	4800684	1	True				
ANR	4800733	CallExpression	"eprintf ( ""r_fs_write: file->p->write is null\\n"" )"		4800684	0					
ANR	4800734	Callee	eprintf		4800684	0					
ANR	4800735	Identifier	eprintf		4800684	0					
ANR	4800736	ArgumentList	"""r_fs_write: file->p->write is null\\n"""		4800684	1					
ANR	4800737	Argument	"""r_fs_write: file->p->write is null\\n"""		4800684	0					
ANR	4800738	PrimaryExpression	"""r_fs_write: file->p->write is null\\n"""		4800684	0					
ANR	4800739	ReturnStatement	return false ;	291:1:6153:6165	4800684	2	True				
ANR	4800740	Identifier	false		4800684	0					
ANR	4800741	ReturnType	R_API int		4800684	1					
ANR	4800742	Identifier	r_fs_write		4800684	2					
ANR	4800743	ParameterList	"RFS * fs , RFSFile * file , ut64 addr , const ut8 * data , int len"		4800684	3					
ANR	4800744	Parameter	RFS * fs	279:21:5825:5831	4800684	0	True				
ANR	4800745	ParameterType	RFS *		4800684	0					
ANR	4800746	Identifier	fs		4800684	1					
ANR	4800747	Parameter	RFSFile * file	279:30:5834:5846	4800684	1	True				
ANR	4800748	ParameterType	RFSFile *		4800684	0					
ANR	4800749	Identifier	file		4800684	1					
ANR	4800750	Parameter	ut64 addr	279:45:5849:5857	4800684	2	True				
ANR	4800751	ParameterType	ut64		4800684	0					
ANR	4800752	Identifier	addr		4800684	1					
ANR	4800753	Parameter	const ut8 * data	279:56:5860:5874	4800684	3	True				
ANR	4800754	ParameterType	const ut8 *		4800684	0					
ANR	4800755	Identifier	data		4800684	1					
ANR	4800756	Parameter	int len	279:73:5877:5883	4800684	4	True				
ANR	4800757	ParameterType	int		4800684	0					
ANR	4800758	Identifier	len		4800684	1					
ANR	4800759	CFGEntryNode	ENTRY		4800684		True				
ANR	4800760	CFGExitNode	EXIT		4800684		True				
ANR	4800761	Symbol	file		4800684						
ANR	4800762	Symbol	file -> p -> write		4800684						
ANR	4800763	Symbol	data		4800684						
ANR	4800764	Symbol	len		4800684						
ANR	4800765	Symbol	file -> p		4800684						
ANR	4800766	Symbol	false		4800684						
ANR	4800767	Symbol	true		4800684						
ANR	4800768	Symbol	* file -> p		4800684						
ANR	4800769	Symbol	addr		4800684						
ANR	4800770	Symbol	* file		4800684						
ANR	4800771	Symbol	fs		4800684						
ANR	4800772	Symbol	* * file		4800684						
ANR	4800773	Function	r_fs_read	294:0:6170:6591							
ANR	4800774	FunctionDef	"r_fs_read (RFS * fs , RFSFile * file , ut64 addr , int len)"		4800773	0					
ANR	4800775	CompoundStatement		294:64:6234:6591	4800773	0					
ANR	4800776	IfStatement	if ( len < 1 )		4800773	0					
ANR	4800777	Condition	len < 1	295:5:6241:6247	4800773	0	True				
ANR	4800778	RelationalExpression	len < 1		4800773	0		<			
ANR	4800779	Identifier	len		4800773	0					
ANR	4800780	PrimaryExpression	1		4800773	1					
ANR	4800781	CompoundStatement		2:14:15:15	4800773	1					
ANR	4800782	ExpressionStatement	"eprintf ( ""r_fs_read: too short read\\n"" )"	296:2:6254:6293	4800773	0	True				
ANR	4800783	CallExpression	"eprintf ( ""r_fs_read: too short read\\n"" )"		4800773	0					
ANR	4800784	Callee	eprintf		4800773	0					
ANR	4800785	Identifier	eprintf		4800773	0					
ANR	4800786	ArgumentList	"""r_fs_read: too short read\\n"""		4800773	1					
ANR	4800787	Argument	"""r_fs_read: too short read\\n"""		4800773	0					
ANR	4800788	PrimaryExpression	"""r_fs_read: too short read\\n"""		4800773	0					
ANR	4800789	ReturnStatement	return false ;	297:2:6297:6309	4800773	1	True				
ANR	4800790	Identifier	false		4800773	0					
ANR	4800791	IfStatement	if ( fs && file )		4800773	1					
ANR	4800792	Condition	fs && file	299:5:6319:6328	4800773	0	True				
ANR	4800793	AndExpression	fs && file		4800773	0		&&			
ANR	4800794	Identifier	fs		4800773	0					
ANR	4800795	Identifier	file		4800773	1					
ANR	4800796	CompoundStatement		6:17:96:96	4800773	1					
ANR	4800797	IfStatement	if ( file -> p && file -> p -> read )		4800773	0					
ANR	4800798	Condition	file -> p && file -> p -> read	300:6:6339:6362	4800773	0	True				
ANR	4800799	AndExpression	file -> p && file -> p -> read		4800773	0		&&			
ANR	4800800	PtrMemberAccess	file -> p		4800773	0					
ANR	4800801	Identifier	file		4800773	0					
ANR	4800802	Identifier	p		4800773	1					
ANR	4800803	PtrMemberAccess	file -> p -> read		4800773	1					
ANR	4800804	PtrMemberAccess	file -> p		4800773	0					
ANR	4800805	Identifier	file		4800773	0					
ANR	4800806	Identifier	p		4800773	1					
ANR	4800807	Identifier	read		4800773	1					
ANR	4800808	CompoundStatement		7:32:130:130	4800773	1					
ANR	4800809	IfStatement	if ( ! file -> data )		4800773	0					
ANR	4800810	Condition	! file -> data	301:7:6374:6384	4800773	0	True				
ANR	4800811	UnaryOperationExpression	! file -> data		4800773	0					
ANR	4800812	UnaryOperator	!		4800773	0					
ANR	4800813	PtrMemberAccess	file -> data		4800773	1					
ANR	4800814	Identifier	file		4800773	0					
ANR	4800815	Identifier	data		4800773	1					
ANR	4800816	CompoundStatement		8:20:152:152	4800773	1					
ANR	4800817	ExpressionStatement	free ( file -> data )	302:4:6393:6410	4800773	0	True				
ANR	4800818	CallExpression	free ( file -> data )		4800773	0					
ANR	4800819	Callee	free		4800773	0					
ANR	4800820	Identifier	free		4800773	0					
ANR	4800821	ArgumentList	file -> data		4800773	1					
ANR	4800822	Argument	file -> data		4800773	0					
ANR	4800823	PtrMemberAccess	file -> data		4800773	0					
ANR	4800824	Identifier	file		4800773	0					
ANR	4800825	Identifier	data		4800773	1					
ANR	4800826	ExpressionStatement	"file -> data = calloc ( 1 , len + 1 )"	303:4:6416:6448	4800773	1	True				
ANR	4800827	AssignmentExpression	"file -> data = calloc ( 1 , len + 1 )"		4800773	0		=			
ANR	4800828	PtrMemberAccess	file -> data		4800773	0					
ANR	4800829	Identifier	file		4800773	0					
ANR	4800830	Identifier	data		4800773	1					
ANR	4800831	CallExpression	"calloc ( 1 , len + 1 )"		4800773	1					
ANR	4800832	Callee	calloc		4800773	0					
ANR	4800833	Identifier	calloc		4800773	0					
ANR	4800834	ArgumentList	1		4800773	1					
ANR	4800835	Argument	1		4800773	0					
ANR	4800836	PrimaryExpression	1		4800773	0					
ANR	4800837	Argument	len + 1		4800773	1					
ANR	4800838	AdditiveExpression	len + 1		4800773	0		+			
ANR	4800839	Identifier	len		4800773	0					
ANR	4800840	PrimaryExpression	1		4800773	1					
ANR	4800841	ExpressionStatement	"file -> p -> read ( file , addr , len )"	305:3:6458:6489	4800773	1	True				
ANR	4800842	CallExpression	"file -> p -> read ( file , addr , len )"		4800773	0					
ANR	4800843	Callee	file -> p -> read		4800773	0					
ANR	4800844	PtrMemberAccess	file -> p -> read		4800773	0					
ANR	4800845	PtrMemberAccess	file -> p		4800773	0					
ANR	4800846	Identifier	file		4800773	0					
ANR	4800847	Identifier	p		4800773	1					
ANR	4800848	Identifier	read		4800773	1					
ANR	4800849	ArgumentList	file		4800773	1					
ANR	4800850	Argument	file		4800773	0					
ANR	4800851	Identifier	file		4800773	0					
ANR	4800852	Argument	addr		4800773	1					
ANR	4800853	Identifier	addr		4800773	0					
ANR	4800854	Argument	len		4800773	2					
ANR	4800855	Identifier	len		4800773	0					
ANR	4800856	ReturnStatement	return true ;	306:3:6494:6505	4800773	2	True				
ANR	4800857	Identifier	true		4800773	0					
ANR	4800858	ElseStatement	else		4800773	0					
ANR	4800859	CompoundStatement		14:9:281:281	4800773	0					
ANR	4800860	ExpressionStatement	"eprintf ( ""r_fs_read: file->p->read is null\\n"" )"	308:3:6521:6567	4800773	0	True				
ANR	4800861	CallExpression	"eprintf ( ""r_fs_read: file->p->read is null\\n"" )"		4800773	0					
ANR	4800862	Callee	eprintf		4800773	0					
ANR	4800863	Identifier	eprintf		4800773	0					
ANR	4800864	ArgumentList	"""r_fs_read: file->p->read is null\\n"""		4800773	1					
ANR	4800865	Argument	"""r_fs_read: file->p->read is null\\n"""		4800773	0					
ANR	4800866	PrimaryExpression	"""r_fs_read: file->p->read is null\\n"""		4800773	0					
ANR	4800867	ReturnStatement	return false ;	311:1:6577:6589	4800773	2	True				
ANR	4800868	Identifier	false		4800773	0					
ANR	4800869	ReturnType	R_API int		4800773	1					
ANR	4800870	Identifier	r_fs_read		4800773	2					
ANR	4800871	ParameterList	"RFS * fs , RFSFile * file , ut64 addr , int len"		4800773	3					
ANR	4800872	Parameter	RFS * fs	294:20:6190:6196	4800773	0	True				
ANR	4800873	ParameterType	RFS *		4800773	0					
ANR	4800874	Identifier	fs		4800773	1					
ANR	4800875	Parameter	RFSFile * file	294:29:6199:6211	4800773	1	True				
ANR	4800876	ParameterType	RFSFile *		4800773	0					
ANR	4800877	Identifier	file		4800773	1					
ANR	4800878	Parameter	ut64 addr	294:44:6214:6222	4800773	2	True				
ANR	4800879	ParameterType	ut64		4800773	0					
ANR	4800880	Identifier	addr		4800773	1					
ANR	4800881	Parameter	int len	294:55:6225:6231	4800773	3	True				
ANR	4800882	ParameterType	int		4800773	0					
ANR	4800883	Identifier	len		4800773	1					
ANR	4800884	CFGEntryNode	ENTRY		4800773		True				
ANR	4800885	CFGExitNode	EXIT		4800773		True				
ANR	4800886	Symbol	false		4800773						
ANR	4800887	Symbol	* file -> p		4800773						
ANR	4800888	Symbol	calloc		4800773						
ANR	4800889	Symbol	* file		4800773						
ANR	4800890	Symbol	fs		4800773						
ANR	4800891	Symbol	file		4800773						
ANR	4800892	Symbol	len		4800773						
ANR	4800893	Symbol	file -> p		4800773						
ANR	4800894	Symbol	file -> data		4800773						
ANR	4800895	Symbol	true		4800773						
ANR	4800896	Symbol	file -> p -> read		4800773						
ANR	4800897	Symbol	addr		4800773						
ANR	4800898	Symbol	* * file		4800773						
ANR	4800899	Function	r_fs_dir	314:0:6594:7121							
ANR	4800900	FunctionDef	"r_fs_dir (RFS * fs , const char * p)"		4800899	0					
ANR	4800901	CompoundStatement		314:46:6640:7121	4800899	0					
ANR	4800902	IdentifierDeclStatement	RList * ret = NULL ;	315:1:6643:6660	4800899	0	True				
ANR	4800903	IdentifierDecl	* ret = NULL		4800899	0					
ANR	4800904	IdentifierDeclType	RList *		4800899	0					
ANR	4800905	Identifier	ret		4800899	1					
ANR	4800906	AssignmentExpression	* ret = NULL		4800899	2		=			
ANR	4800907	Identifier	NULL		4800899	0					
ANR	4800908	Identifier	NULL		4800899	1					
ANR	4800909	IdentifierDeclStatement	RFSRoot * root ;	316:1:6663:6676	4800899	1	True				
ANR	4800910	IdentifierDecl	* root		4800899	0					
ANR	4800911	IdentifierDeclType	RFSRoot *		4800899	0					
ANR	4800912	Identifier	root		4800899	1					
ANR	4800913	IdentifierDeclStatement	RListIter * iter ;	317:1:6679:6694	4800899	2	True				
ANR	4800914	IdentifierDecl	* iter		4800899	0					
ANR	4800915	IdentifierDeclType	RListIter *		4800899	0					
ANR	4800916	Identifier	iter		4800899	1					
ANR	4800917	IdentifierDeclStatement	const char * dir ;	318:1:6697:6712	4800899	3	True				
ANR	4800918	IdentifierDecl	* dir		4800899	0					
ANR	4800919	IdentifierDeclType	const char *		4800899	0					
ANR	4800920	Identifier	dir		4800899	1					
ANR	4800921	IdentifierDeclStatement	char * path = strdup ( p ) ;	319:1:6715:6738	4800899	4	True				
ANR	4800922	IdentifierDecl	* path = strdup ( p )		4800899	0					
ANR	4800923	IdentifierDeclType	char *		4800899	0					
ANR	4800924	Identifier	path		4800899	1					
ANR	4800925	AssignmentExpression	* path = strdup ( p )		4800899	2		=			
ANR	4800926	Identifier	path		4800899	0					
ANR	4800927	CallExpression	strdup ( p )		4800899	1					
ANR	4800928	Callee	strdup		4800899	0					
ANR	4800929	Identifier	strdup		4800899	0					
ANR	4800930	ArgumentList	p		4800899	1					
ANR	4800931	Argument	p		4800899	0					
ANR	4800932	Identifier	p		4800899	0					
ANR	4800933	ExpressionStatement	r_str_trim_path ( path )	320:1:6741:6763	4800899	5	True				
ANR	4800934	CallExpression	r_str_trim_path ( path )		4800899	0					
ANR	4800935	Callee	r_str_trim_path		4800899	0					
ANR	4800936	Identifier	r_str_trim_path		4800899	0					
ANR	4800937	ArgumentList	path		4800899	1					
ANR	4800938	Argument	path		4800899	0					
ANR	4800939	Identifier	path		4800899	0					
ANR	4800940	IdentifierDeclStatement	"RList * roots = r_fs_root ( fs , path ) ;"	321:1:6766:6801	4800899	6	True				
ANR	4800941	IdentifierDecl	"* roots = r_fs_root ( fs , path )"		4800899	0					
ANR	4800942	IdentifierDeclType	RList *		4800899	0					
ANR	4800943	Identifier	roots		4800899	1					
ANR	4800944	AssignmentExpression	"* roots = r_fs_root ( fs , path )"		4800899	2		=			
ANR	4800945	Identifier	roots		4800899	0					
ANR	4800946	CallExpression	"r_fs_root ( fs , path )"		4800899	1					
ANR	4800947	Callee	r_fs_root		4800899	0					
ANR	4800948	Identifier	r_fs_root		4800899	0					
ANR	4800949	ArgumentList	fs		4800899	1					
ANR	4800950	Argument	fs		4800899	0					
ANR	4800951	Identifier	fs		4800899	0					
ANR	4800952	Argument	path		4800899	1					
ANR	4800953	Identifier	path		4800899	0					
ANR	4800954	Statement	r_list_foreach	322:1:6804:6817	4800899	7	True				
ANR	4800955	Statement	(	322:16:6819:6819	4800899	8	True				
ANR	4800956	Statement	roots	322:17:6820:6824	4800899	9	True				
ANR	4800957	Statement	","	322:22:6825:6825	4800899	10	True				
ANR	4800958	Statement	iter	322:24:6827:6830	4800899	11	True				
ANR	4800959	Statement	","	322:28:6831:6831	4800899	12	True				
ANR	4800960	Statement	root	322:30:6833:6836	4800899	13	True				
ANR	4800961	Statement	)	322:34:6837:6837	4800899	14	True				
ANR	4800962	CompoundStatement		9:36:198:198	4800899	15					
ANR	4800963	IfStatement	if ( root )		4800899	0					
ANR	4800964	Condition	root	323:6:6847:6850	4800899	0	True				
ANR	4800965	Identifier	root		4800899	0					
ANR	4800966	CompoundStatement		10:12:212:212	4800899	1					
ANR	4800967	IfStatement	if ( strlen ( root -> path ) == 1 )		4800899	0					
ANR	4800968	Condition	strlen ( root -> path ) == 1	324:7:6862:6885	4800899	0	True				
ANR	4800969	EqualityExpression	strlen ( root -> path ) == 1		4800899	0		==			
ANR	4800970	CallExpression	strlen ( root -> path )		4800899	0					
ANR	4800971	Callee	strlen		4800899	0					
ANR	4800972	Identifier	strlen		4800899	0					
ANR	4800973	ArgumentList	root -> path		4800899	1					
ANR	4800974	Argument	root -> path		4800899	0					
ANR	4800975	PtrMemberAccess	root -> path		4800899	0					
ANR	4800976	Identifier	root		4800899	0					
ANR	4800977	Identifier	path		4800899	1					
ANR	4800978	PrimaryExpression	1		4800899	1					
ANR	4800979	CompoundStatement		11:33:247:247	4800899	1					
ANR	4800980	ExpressionStatement	dir = path	325:4:6894:6904	4800899	0	True				
ANR	4800981	AssignmentExpression	dir = path		4800899	0		=			
ANR	4800982	Identifier	dir		4800899	0					
ANR	4800983	Identifier	path		4800899	1					
ANR	4800984	ElseStatement	else		4800899	0					
ANR	4800985	CompoundStatement		13:10:275:275	4800899	0					
ANR	4800986	ExpressionStatement	dir = path + strlen ( root -> path )	327:4:6922:6954	4800899	0	True				
ANR	4800987	AssignmentExpression	dir = path + strlen ( root -> path )		4800899	0		=			
ANR	4800988	Identifier	dir		4800899	0					
ANR	4800989	AdditiveExpression	path + strlen ( root -> path )		4800899	1		+			
ANR	4800990	Identifier	path		4800899	0					
ANR	4800991	CallExpression	strlen ( root -> path )		4800899	1					
ANR	4800992	Callee	strlen		4800899	0					
ANR	4800993	Identifier	strlen		4800899	0					
ANR	4800994	ArgumentList	root -> path		4800899	1					
ANR	4800995	Argument	root -> path		4800899	0					
ANR	4800996	PtrMemberAccess	root -> path		4800899	0					
ANR	4800997	Identifier	root		4800899	0					
ANR	4800998	Identifier	path		4800899	1					
ANR	4800999	IfStatement	if ( ! * dir )		4800899	1					
ANR	4801000	Condition	! * dir	329:7:6968:6972	4800899	0	True				
ANR	4801001	UnaryOperationExpression	! * dir		4800899	0					
ANR	4801002	UnaryOperator	!		4800899	0					
ANR	4801003	UnaryOperationExpression	* dir		4800899	1					
ANR	4801004	UnaryOperator	*		4800899	0					
ANR	4801005	Identifier	dir		4800899	1					
ANR	4801006	CompoundStatement		16:14:334:334	4800899	1					
ANR	4801007	ExpressionStatement	"dir = ""/"""	330:4:6981:6990	4800899	0	True				
ANR	4801008	AssignmentExpression	"dir = ""/"""		4800899	0		=			
ANR	4801009	Identifier	dir		4800899	0					
ANR	4801010	PrimaryExpression	"""/"""		4800899	1					
ANR	4801011	ExpressionStatement	"ret = root -> p -> dir ( root , dir , fs -> view )"	332:3:7000:7040	4800899	2	True				
ANR	4801012	AssignmentExpression	"ret = root -> p -> dir ( root , dir , fs -> view )"		4800899	0		=			
ANR	4801013	Identifier	ret		4800899	0					
ANR	4801014	CallExpression	"root -> p -> dir ( root , dir , fs -> view )"		4800899	1					
ANR	4801015	Callee	root -> p -> dir		4800899	0					
ANR	4801016	PtrMemberAccess	root -> p -> dir		4800899	0					
ANR	4801017	PtrMemberAccess	root -> p		4800899	0					
ANR	4801018	Identifier	root		4800899	0					
ANR	4801019	Identifier	p		4800899	1					
ANR	4801020	Identifier	dir		4800899	1					
ANR	4801021	ArgumentList	root		4800899	1					
ANR	4801022	Argument	root		4800899	0					
ANR	4801023	Identifier	root		4800899	0					
ANR	4801024	Argument	dir		4800899	1					
ANR	4801025	Identifier	dir		4800899	0					
ANR	4801026	Argument	fs -> view		4800899	2					
ANR	4801027	PtrMemberAccess	fs -> view		4800899	0					
ANR	4801028	Identifier	fs		4800899	0					
ANR	4801029	Identifier	view		4800899	1					
ANR	4801030	IfStatement	if ( ret )		4800899	3					
ANR	4801031	Condition	ret	333:7:7049:7051	4800899	0	True				
ANR	4801032	Identifier	ret		4800899	0					
ANR	4801033	CompoundStatement		20:12:413:413	4800899	1					
ANR	4801034	BreakStatement	break ;	334:4:7060:7065	4800899	0	True				
ANR	4801035	ExpressionStatement	free ( roots )	338:1:7080:7092	4800899	16	True				
ANR	4801036	CallExpression	free ( roots )		4800899	0					
ANR	4801037	Callee	free		4800899	0					
ANR	4801038	Identifier	free		4800899	0					
ANR	4801039	ArgumentList	roots		4800899	1					
ANR	4801040	Argument	roots		4800899	0					
ANR	4801041	Identifier	roots		4800899	0					
ANR	4801042	ExpressionStatement	free ( path )	339:1:7095:7106	4800899	17	True				
ANR	4801043	CallExpression	free ( path )		4800899	0					
ANR	4801044	Callee	free		4800899	0					
ANR	4801045	Identifier	free		4800899	0					
ANR	4801046	ArgumentList	path		4800899	1					
ANR	4801047	Argument	path		4800899	0					
ANR	4801048	Identifier	path		4800899	0					
ANR	4801049	ReturnStatement	return ret ;	340:1:7109:7119	4800899	18	True				
ANR	4801050	Identifier	ret		4800899	0					
ANR	4801051	ReturnType	R_API RList *		4800899	1					
ANR	4801052	Identifier	r_fs_dir		4800899	2					
ANR	4801053	ParameterList	"RFS * fs , const char * p"		4800899	3					
ANR	4801054	Parameter	RFS * fs	314:22:6616:6622	4800899	0	True				
ANR	4801055	ParameterType	RFS *		4800899	0					
ANR	4801056	Identifier	fs		4800899	1					
ANR	4801057	Parameter	const char * p	314:31:6625:6637	4800899	1	True				
ANR	4801058	ParameterType	const char *		4800899	0					
ANR	4801059	Identifier	p		4800899	1					
ANR	4801060	CFGEntryNode	ENTRY		4800899		True				
ANR	4801061	CFGExitNode	EXIT		4800899		True				
ANR	4801062	CFGErrorNode	ERROR		4800899		True				
ANR	4801063	Symbol	ret		4800899						
ANR	4801064	Symbol	NULL		4800899						
ANR	4801065	Symbol	fs -> view		4800899						
ANR	4801066	Symbol	* root -> p		4800899						
ANR	4801067	Symbol	root -> p		4800899						
ANR	4801068	Symbol	* dir		4800899						
ANR	4801069	Symbol	iter		4800899						
ANR	4801070	Symbol	roots		4800899						
ANR	4801071	Symbol	dir		4800899						
ANR	4801072	Symbol	fs		4800899						
ANR	4801073	Symbol	p		4800899						
ANR	4801074	Symbol	root -> p -> dir		4800899						
ANR	4801075	Symbol	* fs		4800899						
ANR	4801076	Symbol	path		4800899						
ANR	4801077	Symbol	strlen		4800899						
ANR	4801078	Symbol	* * root		4800899						
ANR	4801079	Symbol	r_fs_root		4800899						
ANR	4801080	Symbol	root		4800899						
ANR	4801081	Symbol	root -> path		4800899						
ANR	4801082	Symbol	strdup		4800899						
ANR	4801083	Symbol	* root		4800899						
ANR	4801084	Function	r_fs_dir_dump	343:0:7124:8477							
ANR	4801085	FunctionDef	"r_fs_dir_dump (RFS * fs , const char * path , const char * name)"		4801084	0					
ANR	4801086	CompoundStatement		343:69:7193:8477	4801084	0					
ANR	4801087	IdentifierDeclStatement	RList * list ;	344:1:7196:7207	4801084	0	True				
ANR	4801088	IdentifierDecl	* list		4801084	0					
ANR	4801089	IdentifierDeclType	RList *		4801084	0					
ANR	4801090	Identifier	list		4801084	1					
ANR	4801091	IdentifierDeclStatement	RListIter * iter ;	345:1:7210:7225	4801084	1	True				
ANR	4801092	IdentifierDecl	* iter		4801084	0					
ANR	4801093	IdentifierDeclType	RListIter *		4801084	0					
ANR	4801094	Identifier	iter		4801084	1					
ANR	4801095	IdentifierDeclStatement	"RFSFile * file , * item ;"	346:1:7228:7249	4801084	2	True				
ANR	4801096	IdentifierDecl	* file		4801084	0					
ANR	4801097	IdentifierDeclType	RFSFile *		4801084	0					
ANR	4801098	Identifier	file		4801084	1					
ANR	4801099	IdentifierDecl	* item		4801084	1					
ANR	4801100	IdentifierDeclType	RFSFile *		4801084	0					
ANR	4801101	Identifier	item		4801084	1					
ANR	4801102	IdentifierDeclStatement	"char * str , * npath ;"	347:1:7252:7270	4801084	3	True				
ANR	4801103	IdentifierDecl	* str		4801084	0					
ANR	4801104	IdentifierDeclType	char *		4801084	0					
ANR	4801105	Identifier	str		4801084	1					
ANR	4801106	IdentifierDecl	* npath		4801084	1					
ANR	4801107	IdentifierDeclType	char *		4801084	0					
ANR	4801108	Identifier	npath		4801084	1					
ANR	4801109	ExpressionStatement	"list = r_fs_dir ( fs , path )"	349:1:7274:7300	4801084	4	True				
ANR	4801110	AssignmentExpression	"list = r_fs_dir ( fs , path )"		4801084	0		=			
ANR	4801111	Identifier	list		4801084	0					
ANR	4801112	CallExpression	"r_fs_dir ( fs , path )"		4801084	1					
ANR	4801113	Callee	r_fs_dir		4801084	0					
ANR	4801114	Identifier	r_fs_dir		4801084	0					
ANR	4801115	ArgumentList	fs		4801084	1					
ANR	4801116	Argument	fs		4801084	0					
ANR	4801117	Identifier	fs		4801084	0					
ANR	4801118	Argument	path		4801084	1					
ANR	4801119	Identifier	path		4801084	0					
ANR	4801120	IfStatement	if ( ! list )		4801084	5					
ANR	4801121	Condition	! list	350:5:7307:7311	4801084	0	True				
ANR	4801122	UnaryOperationExpression	! list		4801084	0					
ANR	4801123	UnaryOperator	!		4801084	0					
ANR	4801124	Identifier	list		4801084	1					
ANR	4801125	CompoundStatement		8:12:120:120	4801084	1					
ANR	4801126	ReturnStatement	return false ;	351:2:7318:7330	4801084	0	True				
ANR	4801127	Identifier	false		4801084	0					
ANR	4801128	IfStatement	if ( ! r_sys_mkdir ( name ) )		4801084	6					
ANR	4801129	Condition	! r_sys_mkdir ( name )	353:5:7340:7358	4801084	0	True				
ANR	4801130	UnaryOperationExpression	! r_sys_mkdir ( name )		4801084	0					
ANR	4801131	UnaryOperator	!		4801084	0					
ANR	4801132	CallExpression	r_sys_mkdir ( name )		4801084	1					
ANR	4801133	Callee	r_sys_mkdir		4801084	0					
ANR	4801134	Identifier	r_sys_mkdir		4801084	0					
ANR	4801135	ArgumentList	name		4801084	1					
ANR	4801136	Argument	name		4801084	0					
ANR	4801137	Identifier	name		4801084	0					
ANR	4801138	CompoundStatement		11:26:167:167	4801084	1					
ANR	4801139	IfStatement	if ( r_sys_mkdir_failed ( ) )		4801084	0					
ANR	4801140	Condition	r_sys_mkdir_failed ( )	354:6:7369:7389	4801084	0	True				
ANR	4801141	CallExpression	r_sys_mkdir_failed ( )		4801084	0					
ANR	4801142	Callee	r_sys_mkdir_failed		4801084	0					
ANR	4801143	Identifier	r_sys_mkdir_failed		4801084	0					
ANR	4801144	ArgumentList			4801084	1					
ANR	4801145	CompoundStatement		12:29:198:198	4801084	1					
ANR	4801146	ExpressionStatement	"eprintf ( ""Cannot create \\""%s\\""\\n"" , name )"	355:3:7397:7437	4801084	0	True				
ANR	4801147	CallExpression	"eprintf ( ""Cannot create \\""%s\\""\\n"" , name )"		4801084	0					
ANR	4801148	Callee	eprintf		4801084	0					
ANR	4801149	Identifier	eprintf		4801084	0					
ANR	4801150	ArgumentList	"""Cannot create \\""%s\\""\\n"""		4801084	1					
ANR	4801151	Argument	"""Cannot create \\""%s\\""\\n"""		4801084	0					
ANR	4801152	PrimaryExpression	"""Cannot create \\""%s\\""\\n"""		4801084	0					
ANR	4801153	Argument	name		4801084	1					
ANR	4801154	Identifier	name		4801084	0					
ANR	4801155	ReturnStatement	return false ;	356:3:7442:7454	4801084	1	True				
ANR	4801156	Identifier	false		4801084	0					
ANR	4801157	Statement	r_list_foreach	359:1:7464:7477	4801084	7	True				
ANR	4801158	Statement	(	359:16:7479:7479	4801084	8	True				
ANR	4801159	Statement	list	359:17:7480:7483	4801084	9	True				
ANR	4801160	Statement	","	359:21:7484:7484	4801084	10	True				
ANR	4801161	Statement	iter	359:23:7486:7489	4801084	11	True				
ANR	4801162	Statement	","	359:27:7490:7490	4801084	12	True				
ANR	4801163	Statement	file	359:29:7492:7495	4801084	13	True				
ANR	4801164	Statement	)	359:33:7496:7496	4801084	14	True				
ANR	4801165	CompoundStatement		17:35:304:304	4801084	15					
ANR	4801166	IfStatement	"if ( ! strcmp ( file -> name , ""."" ) || ! strcmp ( file -> name , "".."" ) )"		4801084	0					
ANR	4801167	Condition	"! strcmp ( file -> name , ""."" ) || ! strcmp ( file -> name , "".."" )"	360:6:7506:7560	4801084	0	True				
ANR	4801168	OrExpression	"! strcmp ( file -> name , ""."" ) || ! strcmp ( file -> name , "".."" )"		4801084	0		||			
ANR	4801169	UnaryOperationExpression	"! strcmp ( file -> name , ""."" )"		4801084	0					
ANR	4801170	UnaryOperator	!		4801084	0					
ANR	4801171	CallExpression	"strcmp ( file -> name , ""."" )"		4801084	1					
ANR	4801172	Callee	strcmp		4801084	0					
ANR	4801173	Identifier	strcmp		4801084	0					
ANR	4801174	ArgumentList	file -> name		4801084	1					
ANR	4801175	Argument	file -> name		4801084	0					
ANR	4801176	PtrMemberAccess	file -> name		4801084	0					
ANR	4801177	Identifier	file		4801084	0					
ANR	4801178	Identifier	name		4801084	1					
ANR	4801179	Argument	"""."""		4801084	1					
ANR	4801180	PrimaryExpression	"""."""		4801084	0					
ANR	4801181	UnaryOperationExpression	"! strcmp ( file -> name , "".."" )"		4801084	1					
ANR	4801182	UnaryOperator	!		4801084	0					
ANR	4801183	CallExpression	"strcmp ( file -> name , "".."" )"		4801084	1					
ANR	4801184	Callee	strcmp		4801084	0					
ANR	4801185	Identifier	strcmp		4801084	0					
ANR	4801186	ArgumentList	file -> name		4801084	1					
ANR	4801187	Argument	file -> name		4801084	0					
ANR	4801188	PtrMemberAccess	file -> name		4801084	0					
ANR	4801189	Identifier	file		4801084	0					
ANR	4801190	Identifier	name		4801084	1					
ANR	4801191	Argument	""".."""		4801084	1					
ANR	4801192	PrimaryExpression	""".."""		4801084	0					
ANR	4801193	CompoundStatement		18:63:369:369	4801084	1					
ANR	4801194	ContinueStatement	continue ;	361:3:7568:7576	4801084	0	True				
ANR	4801195	ExpressionStatement	str = ( char * ) malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )	363:2:7584:7646	4801084	1	True				
ANR	4801196	AssignmentExpression	str = ( char * ) malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )		4801084	0		=			
ANR	4801197	Identifier	str		4801084	0					
ANR	4801198	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )		4801084	1					
ANR	4801199	CastTarget	char *		4801084	0					
ANR	4801200	CallExpression	malloc ( strlen ( name ) + strlen ( file -> name ) + 2 )		4801084	1					
ANR	4801201	Callee	malloc		4801084	0					
ANR	4801202	Identifier	malloc		4801084	0					
ANR	4801203	ArgumentList	strlen ( name ) + strlen ( file -> name ) + 2		4801084	1					
ANR	4801204	Argument	strlen ( name ) + strlen ( file -> name ) + 2		4801084	0					
ANR	4801205	AdditiveExpression	strlen ( name ) + strlen ( file -> name ) + 2		4801084	0		+			
ANR	4801206	CallExpression	strlen ( name )		4801084	0					
ANR	4801207	Callee	strlen		4801084	0					
ANR	4801208	Identifier	strlen		4801084	0					
ANR	4801209	ArgumentList	name		4801084	1					
ANR	4801210	Argument	name		4801084	0					
ANR	4801211	Identifier	name		4801084	0					
ANR	4801212	AdditiveExpression	strlen ( file -> name ) + 2		4801084	1		+			
ANR	4801213	CallExpression	strlen ( file -> name )		4801084	0					
ANR	4801214	Callee	strlen		4801084	0					
ANR	4801215	Identifier	strlen		4801084	0					
ANR	4801216	ArgumentList	file -> name		4801084	1					
ANR	4801217	Argument	file -> name		4801084	0					
ANR	4801218	PtrMemberAccess	file -> name		4801084	0					
ANR	4801219	Identifier	file		4801084	0					
ANR	4801220	Identifier	name		4801084	1					
ANR	4801221	PrimaryExpression	2		4801084	1					
ANR	4801222	IfStatement	if ( ! str )		4801084	2					
ANR	4801223	Condition	! str	364:6:7654:7657	4801084	0	True				
ANR	4801224	UnaryOperationExpression	! str		4801084	0					
ANR	4801225	UnaryOperator	!		4801084	0					
ANR	4801226	Identifier	str		4801084	1					
ANR	4801227	CompoundStatement		22:12:466:466	4801084	1					
ANR	4801228	ReturnStatement	return false ;	365:3:7665:7677	4801084	0	True				
ANR	4801229	Identifier	false		4801084	0					
ANR	4801230	ExpressionStatement	"strcpy ( str , name )"	367:2:7685:7703	4801084	3	True				
ANR	4801231	CallExpression	"strcpy ( str , name )"		4801084	0					
ANR	4801232	Callee	strcpy		4801084	0					
ANR	4801233	Identifier	strcpy		4801084	0					
ANR	4801234	ArgumentList	str		4801084	1					
ANR	4801235	Argument	str		4801084	0					
ANR	4801236	Identifier	str		4801084	0					
ANR	4801237	Argument	name		4801084	1					
ANR	4801238	Identifier	name		4801084	0					
ANR	4801239	ExpressionStatement	"strcat ( str , ""/"" )"	368:2:7707:7724	4801084	4	True				
ANR	4801240	CallExpression	"strcat ( str , ""/"" )"		4801084	0					
ANR	4801241	Callee	strcat		4801084	0					
ANR	4801242	Identifier	strcat		4801084	0					
ANR	4801243	ArgumentList	str		4801084	1					
ANR	4801244	Argument	str		4801084	0					
ANR	4801245	Identifier	str		4801084	0					
ANR	4801246	Argument	"""/"""		4801084	1					
ANR	4801247	PrimaryExpression	"""/"""		4801084	0					
ANR	4801248	ExpressionStatement	"strcat ( str , file -> name )"	369:2:7728:7752	4801084	5	True				
ANR	4801249	CallExpression	"strcat ( str , file -> name )"		4801084	0					
ANR	4801250	Callee	strcat		4801084	0					
ANR	4801251	Identifier	strcat		4801084	0					
ANR	4801252	ArgumentList	str		4801084	1					
ANR	4801253	Argument	str		4801084	0					
ANR	4801254	Identifier	str		4801084	0					
ANR	4801255	Argument	file -> name		4801084	1					
ANR	4801256	PtrMemberAccess	file -> name		4801084	0					
ANR	4801257	Identifier	file		4801084	0					
ANR	4801258	Identifier	name		4801084	1					
ANR	4801259	ExpressionStatement	npath = malloc ( strlen ( path ) + strlen ( file -> name ) + 2 )	370:2:7756:7812	4801084	6	True				
ANR	4801260	AssignmentExpression	npath = malloc ( strlen ( path ) + strlen ( file -> name ) + 2 )		4801084	0		=			
ANR	4801261	Identifier	npath		4801084	0					
ANR	4801262	CallExpression	malloc ( strlen ( path ) + strlen ( file -> name ) + 2 )		4801084	1					
ANR	4801263	Callee	malloc		4801084	0					
ANR	4801264	Identifier	malloc		4801084	0					
ANR	4801265	ArgumentList	strlen ( path ) + strlen ( file -> name ) + 2		4801084	1					
ANR	4801266	Argument	strlen ( path ) + strlen ( file -> name ) + 2		4801084	0					
ANR	4801267	AdditiveExpression	strlen ( path ) + strlen ( file -> name ) + 2		4801084	0		+			
ANR	4801268	CallExpression	strlen ( path )		4801084	0					
ANR	4801269	Callee	strlen		4801084	0					
ANR	4801270	Identifier	strlen		4801084	0					
ANR	4801271	ArgumentList	path		4801084	1					
ANR	4801272	Argument	path		4801084	0					
ANR	4801273	Identifier	path		4801084	0					
ANR	4801274	AdditiveExpression	strlen ( file -> name ) + 2		4801084	1		+			
ANR	4801275	CallExpression	strlen ( file -> name )		4801084	0					
ANR	4801276	Callee	strlen		4801084	0					
ANR	4801277	Identifier	strlen		4801084	0					
ANR	4801278	ArgumentList	file -> name		4801084	1					
ANR	4801279	Argument	file -> name		4801084	0					
ANR	4801280	PtrMemberAccess	file -> name		4801084	0					
ANR	4801281	Identifier	file		4801084	0					
ANR	4801282	Identifier	name		4801084	1					
ANR	4801283	PrimaryExpression	2		4801084	1					
ANR	4801284	IfStatement	if ( ! npath )		4801084	7					
ANR	4801285	Condition	! npath	371:6:7820:7825	4801084	0	True				
ANR	4801286	UnaryOperationExpression	! npath		4801084	0					
ANR	4801287	UnaryOperator	!		4801084	0					
ANR	4801288	Identifier	npath		4801084	1					
ANR	4801289	CompoundStatement		29:14:634:634	4801084	1					
ANR	4801290	ExpressionStatement	free ( str )	372:3:7833:7843	4801084	0	True				
ANR	4801291	CallExpression	free ( str )		4801084	0					
ANR	4801292	Callee	free		4801084	0					
ANR	4801293	Identifier	free		4801084	0					
ANR	4801294	ArgumentList	str		4801084	1					
ANR	4801295	Argument	str		4801084	0					
ANR	4801296	Identifier	str		4801084	0					
ANR	4801297	ReturnStatement	return false ;	373:3:7848:7860	4801084	1	True				
ANR	4801298	Identifier	false		4801084	0					
ANR	4801299	ExpressionStatement	"strcpy ( npath , path )"	375:2:7868:7888	4801084	8	True				
ANR	4801300	CallExpression	"strcpy ( npath , path )"		4801084	0					
ANR	4801301	Callee	strcpy		4801084	0					
ANR	4801302	Identifier	strcpy		4801084	0					
ANR	4801303	ArgumentList	npath		4801084	1					
ANR	4801304	Argument	npath		4801084	0					
ANR	4801305	Identifier	npath		4801084	0					
ANR	4801306	Argument	path		4801084	1					
ANR	4801307	Identifier	path		4801084	0					
ANR	4801308	ExpressionStatement	"strcat ( npath , ""/"" )"	376:2:7892:7911	4801084	9	True				
ANR	4801309	CallExpression	"strcat ( npath , ""/"" )"		4801084	0					
ANR	4801310	Callee	strcat		4801084	0					
ANR	4801311	Identifier	strcat		4801084	0					
ANR	4801312	ArgumentList	npath		4801084	1					
ANR	4801313	Argument	npath		4801084	0					
ANR	4801314	Identifier	npath		4801084	0					
ANR	4801315	Argument	"""/"""		4801084	1					
ANR	4801316	PrimaryExpression	"""/"""		4801084	0					
ANR	4801317	ExpressionStatement	"strcat ( npath , file -> name )"	377:2:7915:7941	4801084	10	True				
ANR	4801318	CallExpression	"strcat ( npath , file -> name )"		4801084	0					
ANR	4801319	Callee	strcat		4801084	0					
ANR	4801320	Identifier	strcat		4801084	0					
ANR	4801321	ArgumentList	npath		4801084	1					
ANR	4801322	Argument	npath		4801084	0					
ANR	4801323	Identifier	npath		4801084	0					
ANR	4801324	Argument	file -> name		4801084	1					
ANR	4801325	PtrMemberAccess	file -> name		4801084	0					
ANR	4801326	Identifier	file		4801084	0					
ANR	4801327	Identifier	name		4801084	1					
ANR	4801328	SwitchStatement	switch ( file -> type )		4801084	11					
ANR	4801329	Condition	file -> type	378:10:7953:7962	4801084	0	True				
ANR	4801330	PtrMemberAccess	file -> type		4801084	0					
ANR	4801331	Identifier	file		4801084	0					
ANR	4801332	Identifier	type		4801084	1					
ANR	4801333	CompoundStatement		36:22:771:771	4801084	1					
ANR	4801334	Label	case R_FS_FILE_TYPE_DIRECTORY :	380:2:7999:8028	4801084	0	True				
ANR	4801335	Identifier	R_FS_FILE_TYPE_DIRECTORY		4801084	0					
ANR	4801336	IfStatement	"if ( ! r_fs_dir_dump ( fs , npath , str ) )"		4801084	1					
ANR	4801337	Condition	"! r_fs_dir_dump ( fs , npath , str )"	381:7:8037:8067	4801084	0	True				
ANR	4801338	UnaryOperationExpression	"! r_fs_dir_dump ( fs , npath , str )"		4801084	0					
ANR	4801339	UnaryOperator	!		4801084	0					
ANR	4801340	CallExpression	"r_fs_dir_dump ( fs , npath , str )"		4801084	1					
ANR	4801341	Callee	r_fs_dir_dump		4801084	0					
ANR	4801342	Identifier	r_fs_dir_dump		4801084	0					
ANR	4801343	ArgumentList	fs		4801084	1					
ANR	4801344	Argument	fs		4801084	0					
ANR	4801345	Identifier	fs		4801084	0					
ANR	4801346	Argument	npath		4801084	1					
ANR	4801347	Identifier	npath		4801084	0					
ANR	4801348	Argument	str		4801084	2					
ANR	4801349	Identifier	str		4801084	0					
ANR	4801350	CompoundStatement		39:40:876:876	4801084	1					
ANR	4801351	ExpressionStatement	free ( npath )	382:4:8076:8088	4801084	0	True				
ANR	4801352	CallExpression	free ( npath )		4801084	0					
ANR	4801353	Callee	free		4801084	0					
ANR	4801354	Identifier	free		4801084	0					
ANR	4801355	ArgumentList	npath		4801084	1					
ANR	4801356	Argument	npath		4801084	0					
ANR	4801357	Identifier	npath		4801084	0					
ANR	4801358	ExpressionStatement	free ( str )	383:4:8094:8104	4801084	1	True				
ANR	4801359	CallExpression	free ( str )		4801084	0					
ANR	4801360	Callee	free		4801084	0					
ANR	4801361	Identifier	free		4801084	0					
ANR	4801362	ArgumentList	str		4801084	1					
ANR	4801363	Argument	str		4801084	0					
ANR	4801364	Identifier	str		4801084	0					
ANR	4801365	ReturnStatement	return false ;	384:4:8110:8122	4801084	2	True				
ANR	4801366	Identifier	false		4801084	0					
ANR	4801367	BreakStatement	break ;	386:3:8132:8137	4801084	2	True				
ANR	4801368	Label	case R_FS_FILE_TYPE_REGULAR :	387:2:8141:8168	4801084	3	True				
ANR	4801369	Identifier	R_FS_FILE_TYPE_REGULAR		4801084	0					
ANR	4801370	ExpressionStatement	"item = r_fs_open ( fs , npath , false )"	388:3:8173:8208	4801084	4	True				
ANR	4801371	AssignmentExpression	"item = r_fs_open ( fs , npath , false )"		4801084	0		=			
ANR	4801372	Identifier	item		4801084	0					
ANR	4801373	CallExpression	"r_fs_open ( fs , npath , false )"		4801084	1					
ANR	4801374	Callee	r_fs_open		4801084	0					
ANR	4801375	Identifier	r_fs_open		4801084	0					
ANR	4801376	ArgumentList	fs		4801084	1					
ANR	4801377	Argument	fs		4801084	0					
ANR	4801378	Identifier	fs		4801084	0					
ANR	4801379	Argument	npath		4801084	1					
ANR	4801380	Identifier	npath		4801084	0					
ANR	4801381	Argument	false		4801084	2					
ANR	4801382	Identifier	false		4801084	0					
ANR	4801383	IfStatement	if ( item )		4801084	5					
ANR	4801384	Condition	item	389:7:8217:8220	4801084	0	True				
ANR	4801385	Identifier	item		4801084	0					
ANR	4801386	CompoundStatement		47:13:1029:1029	4801084	1					
ANR	4801387	ExpressionStatement	"r_fs_read ( fs , item , 0 , item -> size )"	390:4:8229:8264	4801084	0	True				
ANR	4801388	CallExpression	"r_fs_read ( fs , item , 0 , item -> size )"		4801084	0					
ANR	4801389	Callee	r_fs_read		4801084	0					
ANR	4801390	Identifier	r_fs_read		4801084	0					
ANR	4801391	ArgumentList	fs		4801084	1					
ANR	4801392	Argument	fs		4801084	0					
ANR	4801393	Identifier	fs		4801084	0					
ANR	4801394	Argument	item		4801084	1					
ANR	4801395	Identifier	item		4801084	0					
ANR	4801396	Argument	0		4801084	2					
ANR	4801397	PrimaryExpression	0		4801084	0					
ANR	4801398	Argument	item -> size		4801084	3					
ANR	4801399	PtrMemberAccess	item -> size		4801084	0					
ANR	4801400	Identifier	item		4801084	0					
ANR	4801401	Identifier	size		4801084	1					
ANR	4801402	IfStatement	"if ( ! r_file_dump ( str , item -> data , item -> size , 0 ) )"		4801084	1					
ANR	4801403	Condition	"! r_file_dump ( str , item -> data , item -> size , 0 )"	391:8:8274:8318	4801084	0	True				
ANR	4801404	UnaryOperationExpression	"! r_file_dump ( str , item -> data , item -> size , 0 )"		4801084	0					
ANR	4801405	UnaryOperator	!		4801084	0					
ANR	4801406	CallExpression	"r_file_dump ( str , item -> data , item -> size , 0 )"		4801084	1					
ANR	4801407	Callee	r_file_dump		4801084	0					
ANR	4801408	Identifier	r_file_dump		4801084	0					
ANR	4801409	ArgumentList	str		4801084	1					
ANR	4801410	Argument	str		4801084	0					
ANR	4801411	Identifier	str		4801084	0					
ANR	4801412	Argument	item -> data		4801084	1					
ANR	4801413	PtrMemberAccess	item -> data		4801084	0					
ANR	4801414	Identifier	item		4801084	0					
ANR	4801415	Identifier	data		4801084	1					
ANR	4801416	Argument	item -> size		4801084	2					
ANR	4801417	PtrMemberAccess	item -> size		4801084	0					
ANR	4801418	Identifier	item		4801084	0					
ANR	4801419	Identifier	size		4801084	1					
ANR	4801420	Argument	0		4801084	3					
ANR	4801421	PrimaryExpression	0		4801084	0					
ANR	4801422	CompoundStatement		49:55:1127:1127	4801084	1					
ANR	4801423	ExpressionStatement	free ( npath )	392:5:8328:8340	4801084	0	True				
ANR	4801424	CallExpression	free ( npath )		4801084	0					
ANR	4801425	Callee	free		4801084	0					
ANR	4801426	Identifier	free		4801084	0					
ANR	4801427	ArgumentList	npath		4801084	1					
ANR	4801428	Argument	npath		4801084	0					
ANR	4801429	Identifier	npath		4801084	0					
ANR	4801430	ExpressionStatement	free ( str )	393:5:8347:8357	4801084	1	True				
ANR	4801431	CallExpression	free ( str )		4801084	0					
ANR	4801432	Callee	free		4801084	0					
ANR	4801433	Identifier	free		4801084	0					
ANR	4801434	ArgumentList	str		4801084	1					
ANR	4801435	Argument	str		4801084	0					
ANR	4801436	Identifier	str		4801084	0					
ANR	4801437	ReturnStatement	return false ;	394:5:8364:8376	4801084	2	True				
ANR	4801438	Identifier	false		4801084	0					
ANR	4801439	ExpressionStatement	"r_fs_close ( fs , item )"	396:4:8388:8409	4801084	2	True				
ANR	4801440	CallExpression	"r_fs_close ( fs , item )"		4801084	0					
ANR	4801441	Callee	r_fs_close		4801084	0					
ANR	4801442	Identifier	r_fs_close		4801084	0					
ANR	4801443	ArgumentList	fs		4801084	1					
ANR	4801444	Argument	fs		4801084	0					
ANR	4801445	Identifier	fs		4801084	0					
ANR	4801446	Argument	item		4801084	1					
ANR	4801447	Identifier	item		4801084	0					
ANR	4801448	BreakStatement	break ;	398:3:8419:8424	4801084	6	True				
ANR	4801449	ExpressionStatement	free ( npath )	400:2:8432:8444	4801084	12	True				
ANR	4801450	CallExpression	free ( npath )		4801084	0					
ANR	4801451	Callee	free		4801084	0					
ANR	4801452	Identifier	free		4801084	0					
ANR	4801453	ArgumentList	npath		4801084	1					
ANR	4801454	Argument	npath		4801084	0					
ANR	4801455	Identifier	npath		4801084	0					
ANR	4801456	ExpressionStatement	free ( str )	401:2:8448:8458	4801084	13	True				
ANR	4801457	CallExpression	free ( str )		4801084	0					
ANR	4801458	Callee	free		4801084	0					
ANR	4801459	Identifier	free		4801084	0					
ANR	4801460	ArgumentList	str		4801084	1					
ANR	4801461	Argument	str		4801084	0					
ANR	4801462	Identifier	str		4801084	0					
ANR	4801463	ReturnStatement	return true ;	403:1:8464:8475	4801084	16	True				
ANR	4801464	Identifier	true		4801084	0					
ANR	4801465	ReturnType	R_API int		4801084	1					
ANR	4801466	Identifier	r_fs_dir_dump		4801084	2					
ANR	4801467	ParameterList	"RFS * fs , const char * path , const char * name"		4801084	3					
ANR	4801468	Parameter	RFS * fs	343:24:7148:7154	4801084	0	True				
ANR	4801469	ParameterType	RFS *		4801084	0					
ANR	4801470	Identifier	fs		4801084	1					
ANR	4801471	Parameter	const char * path	343:33:7157:7172	4801084	1	True				
ANR	4801472	ParameterType	const char *		4801084	0					
ANR	4801473	Identifier	path		4801084	1					
ANR	4801474	Parameter	const char * name	343:51:7175:7190	4801084	2	True				
ANR	4801475	ParameterType	const char *		4801084	0					
ANR	4801476	Identifier	name		4801084	1					
ANR	4801477	CFGEntryNode	ENTRY		4801084		True				
ANR	4801478	CFGExitNode	EXIT		4801084		True				
ANR	4801479	CFGErrorNode	ERROR		4801084		True				
ANR	4801480	Symbol	file -> name		4801084						
ANR	4801481	Symbol	fs		4801084						
ANR	4801482	Symbol	r_fs_dir		4801084						
ANR	4801483	Symbol	r_sys_mkdir		4801084						
ANR	4801484	Symbol	path		4801084						
ANR	4801485	Symbol	npath		4801084						
ANR	4801486	Symbol	strlen		4801084						
ANR	4801487	Symbol	file -> type		4801084						
ANR	4801488	Symbol	file		4801084						
ANR	4801489	Symbol	r_fs_dir_dump		4801084						
ANR	4801490	Symbol	* item		4801084						
ANR	4801491	Symbol	r_file_dump		4801084						
ANR	4801492	Symbol	item -> data		4801084						
ANR	4801493	Symbol	r_fs_open		4801084						
ANR	4801494	Symbol	strcmp		4801084						
ANR	4801495	Symbol	malloc		4801084						
ANR	4801496	Symbol	item		4801084						
ANR	4801497	Symbol	false		4801084						
ANR	4801498	Symbol	iter		4801084						
ANR	4801499	Symbol	r_sys_mkdir_failed		4801084						
ANR	4801500	Symbol	list		4801084						
ANR	4801501	Symbol	* file		4801084						
ANR	4801502	Symbol	str		4801084						
ANR	4801503	Symbol	name		4801084						
ANR	4801504	Symbol	true		4801084						
ANR	4801505	Symbol	item -> size		4801084						
ANR	4801506	Function	r_fs_find_off_aux	406:0:8480:9297							
ANR	4801507	FunctionDef	"r_fs_find_off_aux (RFS * fs , const char * name , ut64 offset , RList * list)"		4801506	0					
ANR	4801508	CompoundStatement		406:83:8563:9297	4801506	0					
ANR	4801509	IdentifierDeclStatement	RList * dirs ;	407:1:8566:8577	4801506	0	True				
ANR	4801510	IdentifierDecl	* dirs		4801506	0					
ANR	4801511	IdentifierDeclType	RList *		4801506	0					
ANR	4801512	Identifier	dirs		4801506	1					
ANR	4801513	IdentifierDeclStatement	RListIter * iter ;	408:1:8580:8595	4801506	1	True				
ANR	4801514	IdentifierDecl	* iter		4801506	0					
ANR	4801515	IdentifierDeclType	RListIter *		4801506	0					
ANR	4801516	Identifier	iter		4801506	1					
ANR	4801517	IdentifierDeclStatement	"RFSFile * item , * file ;"	409:1:8598:8619	4801506	2	True				
ANR	4801518	IdentifierDecl	* item		4801506	0					
ANR	4801519	IdentifierDeclType	RFSFile *		4801506	0					
ANR	4801520	Identifier	item		4801506	1					
ANR	4801521	IdentifierDecl	* file		4801506	1					
ANR	4801522	IdentifierDeclType	RFSFile *		4801506	0					
ANR	4801523	Identifier	file		4801506	1					
ANR	4801524	IdentifierDeclStatement	char * found = NULL ;	410:1:8622:8640	4801506	3	True				
ANR	4801525	IdentifierDecl	* found = NULL		4801506	0					
ANR	4801526	IdentifierDeclType	char *		4801506	0					
ANR	4801527	Identifier	found		4801506	1					
ANR	4801528	AssignmentExpression	* found = NULL		4801506	2		=			
ANR	4801529	Identifier	NULL		4801506	0					
ANR	4801530	Identifier	NULL		4801506	1					
ANR	4801531	ExpressionStatement	"dirs = r_fs_dir ( fs , name )"	412:1:8644:8670	4801506	4	True				
ANR	4801532	AssignmentExpression	"dirs = r_fs_dir ( fs , name )"		4801506	0		=			
ANR	4801533	Identifier	dirs		4801506	0					
ANR	4801534	CallExpression	"r_fs_dir ( fs , name )"		4801506	1					
ANR	4801535	Callee	r_fs_dir		4801506	0					
ANR	4801536	Identifier	r_fs_dir		4801506	0					
ANR	4801537	ArgumentList	fs		4801506	1					
ANR	4801538	Argument	fs		4801506	0					
ANR	4801539	Identifier	fs		4801506	0					
ANR	4801540	Argument	name		4801506	1					
ANR	4801541	Identifier	name		4801506	0					
ANR	4801542	Statement	r_list_foreach	413:1:8673:8686	4801506	5	True				
ANR	4801543	Statement	(	413:16:8688:8688	4801506	6	True				
ANR	4801544	Statement	dirs	413:17:8689:8692	4801506	7	True				
ANR	4801545	Statement	","	413:21:8693:8693	4801506	8	True				
ANR	4801546	Statement	iter	413:23:8695:8698	4801506	9	True				
ANR	4801547	Statement	","	413:27:8699:8699	4801506	10	True				
ANR	4801548	Statement	item	413:29:8701:8704	4801506	11	True				
ANR	4801549	Statement	)	413:33:8705:8705	4801506	12	True				
ANR	4801550	CompoundStatement		8:35:143:143	4801506	13					
ANR	4801551	IfStatement	"if ( ! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" ) )"		4801506	0					
ANR	4801552	Condition	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"	414:6:8715:8769	4801506	0	True				
ANR	4801553	OrExpression	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"		4801506	0		||			
ANR	4801554	UnaryOperationExpression	"! strcmp ( item -> name , ""."" )"		4801506	0					
ANR	4801555	UnaryOperator	!		4801506	0					
ANR	4801556	CallExpression	"strcmp ( item -> name , ""."" )"		4801506	1					
ANR	4801557	Callee	strcmp		4801506	0					
ANR	4801558	Identifier	strcmp		4801506	0					
ANR	4801559	ArgumentList	item -> name		4801506	1					
ANR	4801560	Argument	item -> name		4801506	0					
ANR	4801561	PtrMemberAccess	item -> name		4801506	0					
ANR	4801562	Identifier	item		4801506	0					
ANR	4801563	Identifier	name		4801506	1					
ANR	4801564	Argument	"""."""		4801506	1					
ANR	4801565	PrimaryExpression	"""."""		4801506	0					
ANR	4801566	UnaryOperationExpression	"! strcmp ( item -> name , "".."" )"		4801506	1					
ANR	4801567	UnaryOperator	!		4801506	0					
ANR	4801568	CallExpression	"strcmp ( item -> name , "".."" )"		4801506	1					
ANR	4801569	Callee	strcmp		4801506	0					
ANR	4801570	Identifier	strcmp		4801506	0					
ANR	4801571	ArgumentList	item -> name		4801506	1					
ANR	4801572	Argument	item -> name		4801506	0					
ANR	4801573	PtrMemberAccess	item -> name		4801506	0					
ANR	4801574	Identifier	item		4801506	0					
ANR	4801575	Identifier	name		4801506	1					
ANR	4801576	Argument	""".."""		4801506	1					
ANR	4801577	PrimaryExpression	""".."""		4801506	0					
ANR	4801578	CompoundStatement		9:63:208:208	4801506	1					
ANR	4801579	ContinueStatement	continue ;	415:3:8777:8785	4801506	0	True				
ANR	4801580	ExpressionStatement	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )	418:2:8794:8858	4801506	1	True				
ANR	4801581	AssignmentExpression	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801506	0		=			
ANR	4801582	Identifier	found		4801506	0					
ANR	4801583	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801506	1					
ANR	4801584	CastTarget	char *		4801506	0					
ANR	4801585	CallExpression	malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801506	1					
ANR	4801586	Callee	malloc		4801506	0					
ANR	4801587	Identifier	malloc		4801506	0					
ANR	4801588	ArgumentList	strlen ( name ) + strlen ( item -> name ) + 2		4801506	1					
ANR	4801589	Argument	strlen ( name ) + strlen ( item -> name ) + 2		4801506	0					
ANR	4801590	AdditiveExpression	strlen ( name ) + strlen ( item -> name ) + 2		4801506	0		+			
ANR	4801591	CallExpression	strlen ( name )		4801506	0					
ANR	4801592	Callee	strlen		4801506	0					
ANR	4801593	Identifier	strlen		4801506	0					
ANR	4801594	ArgumentList	name		4801506	1					
ANR	4801595	Argument	name		4801506	0					
ANR	4801596	Identifier	name		4801506	0					
ANR	4801597	AdditiveExpression	strlen ( item -> name ) + 2		4801506	1		+			
ANR	4801598	CallExpression	strlen ( item -> name )		4801506	0					
ANR	4801599	Callee	strlen		4801506	0					
ANR	4801600	Identifier	strlen		4801506	0					
ANR	4801601	ArgumentList	item -> name		4801506	1					
ANR	4801602	Argument	item -> name		4801506	0					
ANR	4801603	PtrMemberAccess	item -> name		4801506	0					
ANR	4801604	Identifier	item		4801506	0					
ANR	4801605	Identifier	name		4801506	1					
ANR	4801606	PrimaryExpression	2		4801506	1					
ANR	4801607	IfStatement	if ( ! found )		4801506	2					
ANR	4801608	Condition	! found	419:6:8866:8871	4801506	0	True				
ANR	4801609	UnaryOperationExpression	! found		4801506	0					
ANR	4801610	UnaryOperator	!		4801506	0					
ANR	4801611	Identifier	found		4801506	1					
ANR	4801612	CompoundStatement		14:14:310:310	4801506	1					
ANR	4801613	BreakStatement	break ;	420:3:8879:8884	4801506	0	True				
ANR	4801614	ExpressionStatement	"strcpy ( found , name )"	422:2:8892:8912	4801506	3	True				
ANR	4801615	CallExpression	"strcpy ( found , name )"		4801506	0					
ANR	4801616	Callee	strcpy		4801506	0					
ANR	4801617	Identifier	strcpy		4801506	0					
ANR	4801618	ArgumentList	found		4801506	1					
ANR	4801619	Argument	found		4801506	0					
ANR	4801620	Identifier	found		4801506	0					
ANR	4801621	Argument	name		4801506	1					
ANR	4801622	Identifier	name		4801506	0					
ANR	4801623	ExpressionStatement	"strcat ( found , ""/"" )"	423:2:8916:8935	4801506	4	True				
ANR	4801624	CallExpression	"strcat ( found , ""/"" )"		4801506	0					
ANR	4801625	Callee	strcat		4801506	0					
ANR	4801626	Identifier	strcat		4801506	0					
ANR	4801627	ArgumentList	found		4801506	1					
ANR	4801628	Argument	found		4801506	0					
ANR	4801629	Identifier	found		4801506	0					
ANR	4801630	Argument	"""/"""		4801506	1					
ANR	4801631	PrimaryExpression	"""/"""		4801506	0					
ANR	4801632	ExpressionStatement	"strcat ( found , item -> name )"	424:2:8939:8965	4801506	5	True				
ANR	4801633	CallExpression	"strcat ( found , item -> name )"		4801506	0					
ANR	4801634	Callee	strcat		4801506	0					
ANR	4801635	Identifier	strcat		4801506	0					
ANR	4801636	ArgumentList	found		4801506	1					
ANR	4801637	Argument	found		4801506	0					
ANR	4801638	Identifier	found		4801506	0					
ANR	4801639	Argument	item -> name		4801506	1					
ANR	4801640	PtrMemberAccess	item -> name		4801506	0					
ANR	4801641	Identifier	item		4801506	0					
ANR	4801642	Identifier	name		4801506	1					
ANR	4801643	IfStatement	if ( item -> type == R_FS_FILE_TYPE_DIRECTORY )		4801506	6					
ANR	4801644	Condition	item -> type == R_FS_FILE_TYPE_DIRECTORY	426:6:8974:9011	4801506	0	True				
ANR	4801645	EqualityExpression	item -> type == R_FS_FILE_TYPE_DIRECTORY		4801506	0		==			
ANR	4801646	PtrMemberAccess	item -> type		4801506	0					
ANR	4801647	Identifier	item		4801506	0					
ANR	4801648	Identifier	type		4801506	1					
ANR	4801649	Identifier	R_FS_FILE_TYPE_DIRECTORY		4801506	1					
ANR	4801650	CompoundStatement		21:46:450:450	4801506	1					
ANR	4801651	ExpressionStatement	"r_fs_find_off_aux ( fs , found , offset , list )"	427:3:9019:9062	4801506	0	True				
ANR	4801652	CallExpression	"r_fs_find_off_aux ( fs , found , offset , list )"		4801506	0					
ANR	4801653	Callee	r_fs_find_off_aux		4801506	0					
ANR	4801654	Identifier	r_fs_find_off_aux		4801506	0					
ANR	4801655	ArgumentList	fs		4801506	1					
ANR	4801656	Argument	fs		4801506	0					
ANR	4801657	Identifier	fs		4801506	0					
ANR	4801658	Argument	found		4801506	1					
ANR	4801659	Identifier	found		4801506	0					
ANR	4801660	Argument	offset		4801506	2					
ANR	4801661	Identifier	offset		4801506	0					
ANR	4801662	Argument	list		4801506	3					
ANR	4801663	Identifier	list		4801506	0					
ANR	4801664	ElseStatement	else		4801506	0					
ANR	4801665	CompoundStatement		23:9:509:509	4801506	0					
ANR	4801666	ExpressionStatement	"file = r_fs_open ( fs , found , false )"	429:3:9078:9113	4801506	0	True				
ANR	4801667	AssignmentExpression	"file = r_fs_open ( fs , found , false )"		4801506	0		=			
ANR	4801668	Identifier	file		4801506	0					
ANR	4801669	CallExpression	"r_fs_open ( fs , found , false )"		4801506	1					
ANR	4801670	Callee	r_fs_open		4801506	0					
ANR	4801671	Identifier	r_fs_open		4801506	0					
ANR	4801672	ArgumentList	fs		4801506	1					
ANR	4801673	Argument	fs		4801506	0					
ANR	4801674	Identifier	fs		4801506	0					
ANR	4801675	Argument	found		4801506	1					
ANR	4801676	Identifier	found		4801506	0					
ANR	4801677	Argument	false		4801506	2					
ANR	4801678	Identifier	false		4801506	0					
ANR	4801679	IfStatement	if ( file )		4801506	1					
ANR	4801680	Condition	file	430:7:9122:9125	4801506	0	True				
ANR	4801681	Identifier	file		4801506	0					
ANR	4801682	CompoundStatement		25:13:564:564	4801506	1					
ANR	4801683	ExpressionStatement	"r_fs_read ( fs , file , 0 , file -> size )"	431:4:9134:9169	4801506	0	True				
ANR	4801684	CallExpression	"r_fs_read ( fs , file , 0 , file -> size )"		4801506	0					
ANR	4801685	Callee	r_fs_read		4801506	0					
ANR	4801686	Identifier	r_fs_read		4801506	0					
ANR	4801687	ArgumentList	fs		4801506	1					
ANR	4801688	Argument	fs		4801506	0					
ANR	4801689	Identifier	fs		4801506	0					
ANR	4801690	Argument	file		4801506	1					
ANR	4801691	Identifier	file		4801506	0					
ANR	4801692	Argument	0		4801506	2					
ANR	4801693	PrimaryExpression	0		4801506	0					
ANR	4801694	Argument	file -> size		4801506	3					
ANR	4801695	PtrMemberAccess	file -> size		4801506	0					
ANR	4801696	Identifier	file		4801506	0					
ANR	4801697	Identifier	size		4801506	1					
ANR	4801698	IfStatement	if ( file -> off == offset )		4801506	1					
ANR	4801699	Condition	file -> off == offset	432:8:9179:9197	4801506	0	True				
ANR	4801700	EqualityExpression	file -> off == offset		4801506	0		==			
ANR	4801701	PtrMemberAccess	file -> off		4801506	0					
ANR	4801702	Identifier	file		4801506	0					
ANR	4801703	Identifier	off		4801506	1					
ANR	4801704	Identifier	offset		4801506	1					
ANR	4801705	CompoundStatement		27:29:636:636	4801506	1					
ANR	4801706	ExpressionStatement	"r_list_append ( list , found )"	433:5:9207:9234	4801506	0	True				
ANR	4801707	CallExpression	"r_list_append ( list , found )"		4801506	0					
ANR	4801708	Callee	r_list_append		4801506	0					
ANR	4801709	Identifier	r_list_append		4801506	0					
ANR	4801710	ArgumentList	list		4801506	1					
ANR	4801711	Argument	list		4801506	0					
ANR	4801712	Identifier	list		4801506	0					
ANR	4801713	Argument	found		4801506	1					
ANR	4801714	Identifier	found		4801506	0					
ANR	4801715	ExpressionStatement	"r_fs_close ( fs , file )"	435:4:9246:9267	4801506	2	True				
ANR	4801716	CallExpression	"r_fs_close ( fs , file )"		4801506	0					
ANR	4801717	Callee	r_fs_close		4801506	0					
ANR	4801718	Identifier	r_fs_close		4801506	0					
ANR	4801719	ArgumentList	fs		4801506	1					
ANR	4801720	Argument	fs		4801506	0					
ANR	4801721	Identifier	fs		4801506	0					
ANR	4801722	Argument	file		4801506	1					
ANR	4801723	Identifier	file		4801506	0					
ANR	4801724	ExpressionStatement	free ( found )	438:2:9280:9292	4801506	7	True				
ANR	4801725	CallExpression	free ( found )		4801506	0					
ANR	4801726	Callee	free		4801506	0					
ANR	4801727	Identifier	free		4801506	0					
ANR	4801728	ArgumentList	found		4801506	1					
ANR	4801729	Argument	found		4801506	0					
ANR	4801730	Identifier	found		4801506	0					
ANR	4801731	ReturnType	static void		4801506	1					
ANR	4801732	Identifier	r_fs_find_off_aux		4801506	2					
ANR	4801733	ParameterList	"RFS * fs , const char * name , ut64 offset , RList * list"		4801506	3					
ANR	4801734	Parameter	RFS * fs	406:30:8510:8516	4801506	0	True				
ANR	4801735	ParameterType	RFS *		4801506	0					
ANR	4801736	Identifier	fs		4801506	1					
ANR	4801737	Parameter	const char * name	406:39:8519:8534	4801506	1	True				
ANR	4801738	ParameterType	const char *		4801506	0					
ANR	4801739	Identifier	name		4801506	1					
ANR	4801740	Parameter	ut64 offset	406:57:8537:8547	4801506	2	True				
ANR	4801741	ParameterType	ut64		4801506	0					
ANR	4801742	Identifier	offset		4801506	1					
ANR	4801743	Parameter	RList * list	406:70:8550:8560	4801506	3	True				
ANR	4801744	ParameterType	RList *		4801506	0					
ANR	4801745	Identifier	list		4801506	1					
ANR	4801746	CFGEntryNode	ENTRY		4801506		True				
ANR	4801747	CFGExitNode	EXIT		4801506		True				
ANR	4801748	CFGErrorNode	ERROR		4801506		True				
ANR	4801749	Symbol	strcmp		4801506						
ANR	4801750	Symbol	malloc		4801506						
ANR	4801751	Symbol	item		4801506						
ANR	4801752	Symbol	item -> type		4801506						
ANR	4801753	Symbol	NULL		4801506						
ANR	4801754	Symbol	offset		4801506						
ANR	4801755	Symbol	R_FS_FILE_TYPE_DIRECTORY		4801506						
ANR	4801756	Symbol	false		4801506						
ANR	4801757	Symbol	dirs		4801506						
ANR	4801758	Symbol	iter		4801506						
ANR	4801759	Symbol	list		4801506						
ANR	4801760	Symbol	* file		4801506						
ANR	4801761	Symbol	fs		4801506						
ANR	4801762	Symbol	r_fs_dir		4801506						
ANR	4801763	Symbol	strlen		4801506						
ANR	4801764	Symbol	file		4801506						
ANR	4801765	Symbol	found		4801506						
ANR	4801766	Symbol	* item		4801506						
ANR	4801767	Symbol	item -> name		4801506						
ANR	4801768	Symbol	name		4801506						
ANR	4801769	Symbol	file -> size		4801506						
ANR	4801770	Symbol	file -> off		4801506						
ANR	4801771	Symbol	r_fs_open		4801506						
ANR	4801772	Function	r_fs_find_off	442:0:9300:9504							
ANR	4801773	FunctionDef	"r_fs_find_off (RFS * fs , const char * name , ut64 off)"		4801772	0					
ANR	4801774	CompoundStatement		442:64:9364:9504	4801772	0					
ANR	4801775	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	443:1:9367:9394	4801772	0	True				
ANR	4801776	IdentifierDecl	* list = r_list_new ( )		4801772	0					
ANR	4801777	IdentifierDeclType	RList *		4801772	0					
ANR	4801778	Identifier	list		4801772	1					
ANR	4801779	AssignmentExpression	* list = r_list_new ( )		4801772	2		=			
ANR	4801780	Identifier	list		4801772	0					
ANR	4801781	CallExpression	r_list_new ( )		4801772	1					
ANR	4801782	Callee	r_list_new		4801772	0					
ANR	4801783	Identifier	r_list_new		4801772	0					
ANR	4801784	ArgumentList			4801772	1					
ANR	4801785	IfStatement	if ( ! list )		4801772	1					
ANR	4801786	Condition	! list	444:5:9401:9405	4801772	0	True				
ANR	4801787	UnaryOperationExpression	! list		4801772	0					
ANR	4801788	UnaryOperator	!		4801772	0					
ANR	4801789	Identifier	list		4801772	1					
ANR	4801790	CompoundStatement		3:12:43:43	4801772	1					
ANR	4801791	ReturnStatement	return NULL ;	445:2:9412:9423	4801772	0	True				
ANR	4801792	Identifier	NULL		4801772	0					
ANR	4801793	ExpressionStatement	list -> free = free	447:1:9429:9446	4801772	2	True				
ANR	4801794	AssignmentExpression	list -> free = free		4801772	0		=			
ANR	4801795	PtrMemberAccess	list -> free		4801772	0					
ANR	4801796	Identifier	list		4801772	0					
ANR	4801797	Identifier	free		4801772	1					
ANR	4801798	Identifier	free		4801772	1					
ANR	4801799	ExpressionStatement	"r_fs_find_off_aux ( fs , name , off , list )"	448:1:9449:9488	4801772	3	True				
ANR	4801800	CallExpression	"r_fs_find_off_aux ( fs , name , off , list )"		4801772	0					
ANR	4801801	Callee	r_fs_find_off_aux		4801772	0					
ANR	4801802	Identifier	r_fs_find_off_aux		4801772	0					
ANR	4801803	ArgumentList	fs		4801772	1					
ANR	4801804	Argument	fs		4801772	0					
ANR	4801805	Identifier	fs		4801772	0					
ANR	4801806	Argument	name		4801772	1					
ANR	4801807	Identifier	name		4801772	0					
ANR	4801808	Argument	off		4801772	2					
ANR	4801809	Identifier	off		4801772	0					
ANR	4801810	Argument	list		4801772	3					
ANR	4801811	Identifier	list		4801772	0					
ANR	4801812	ReturnStatement	return list ;	449:1:9491:9502	4801772	4	True				
ANR	4801813	Identifier	list		4801772	0					
ANR	4801814	ReturnType	R_API RList *		4801772	1					
ANR	4801815	Identifier	r_fs_find_off		4801772	2					
ANR	4801816	ParameterList	"RFS * fs , const char * name , ut64 off"		4801772	3					
ANR	4801817	Parameter	RFS * fs	442:27:9327:9333	4801772	0	True				
ANR	4801818	ParameterType	RFS *		4801772	0					
ANR	4801819	Identifier	fs		4801772	1					
ANR	4801820	Parameter	const char * name	442:36:9336:9351	4801772	1	True				
ANR	4801821	ParameterType	const char *		4801772	0					
ANR	4801822	Identifier	name		4801772	1					
ANR	4801823	Parameter	ut64 off	442:54:9354:9361	4801772	2	True				
ANR	4801824	ParameterType	ut64		4801772	0					
ANR	4801825	Identifier	off		4801772	1					
ANR	4801826	CFGEntryNode	ENTRY		4801772		True				
ANR	4801827	CFGExitNode	EXIT		4801772		True				
ANR	4801828	Symbol	NULL		4801772						
ANR	4801829	Symbol	* list		4801772						
ANR	4801830	Symbol	list -> free		4801772						
ANR	4801831	Symbol	name		4801772						
ANR	4801832	Symbol	list		4801772						
ANR	4801833	Symbol	free		4801772						
ANR	4801834	Symbol	fs		4801772						
ANR	4801835	Symbol	off		4801772						
ANR	4801836	Symbol	r_list_new		4801772						
ANR	4801837	Function	r_fs_find_name_aux	452:0:9507:10367							
ANR	4801838	FunctionDef	"r_fs_find_name_aux (RFS * fs , const char * name , const char * glob , RList * list)"		4801837	0					
ANR	4801839	CompoundStatement		452:89:9596:10367	4801837	0					
ANR	4801840	IdentifierDeclStatement	RList * dirs ;	453:1:9599:9610	4801837	0	True				
ANR	4801841	IdentifierDecl	* dirs		4801837	0					
ANR	4801842	IdentifierDeclType	RList *		4801837	0					
ANR	4801843	Identifier	dirs		4801837	1					
ANR	4801844	IdentifierDeclStatement	RListIter * iter ;	454:1:9613:9628	4801837	1	True				
ANR	4801845	IdentifierDecl	* iter		4801837	0					
ANR	4801846	IdentifierDeclType	RListIter *		4801837	0					
ANR	4801847	Identifier	iter		4801837	1					
ANR	4801848	IdentifierDeclStatement	RFSFile * item ;	455:1:9631:9644	4801837	2	True				
ANR	4801849	IdentifierDecl	* item		4801837	0					
ANR	4801850	IdentifierDeclType	RFSFile *		4801837	0					
ANR	4801851	Identifier	item		4801837	1					
ANR	4801852	IdentifierDeclStatement	char * found ;	456:1:9647:9658	4801837	3	True				
ANR	4801853	IdentifierDecl	* found		4801837	0					
ANR	4801854	IdentifierDeclType	char *		4801837	0					
ANR	4801855	Identifier	found		4801837	1					
ANR	4801856	ExpressionStatement	"dirs = r_fs_dir ( fs , name )"	458:1:9662:9688	4801837	4	True				
ANR	4801857	AssignmentExpression	"dirs = r_fs_dir ( fs , name )"		4801837	0		=			
ANR	4801858	Identifier	dirs		4801837	0					
ANR	4801859	CallExpression	"r_fs_dir ( fs , name )"		4801837	1					
ANR	4801860	Callee	r_fs_dir		4801837	0					
ANR	4801861	Identifier	r_fs_dir		4801837	0					
ANR	4801862	ArgumentList	fs		4801837	1					
ANR	4801863	Argument	fs		4801837	0					
ANR	4801864	Identifier	fs		4801837	0					
ANR	4801865	Argument	name		4801837	1					
ANR	4801866	Identifier	name		4801837	0					
ANR	4801867	Statement	r_list_foreach	459:1:9691:9704	4801837	5	True				
ANR	4801868	Statement	(	459:16:9706:9706	4801837	6	True				
ANR	4801869	Statement	dirs	459:17:9707:9710	4801837	7	True				
ANR	4801870	Statement	","	459:21:9711:9711	4801837	8	True				
ANR	4801871	Statement	iter	459:23:9713:9716	4801837	9	True				
ANR	4801872	Statement	","	459:27:9717:9717	4801837	10	True				
ANR	4801873	Statement	item	459:29:9719:9722	4801837	11	True				
ANR	4801874	Statement	)	459:33:9723:9723	4801837	12	True				
ANR	4801875	CompoundStatement		8:35:128:128	4801837	13					
ANR	4801876	IfStatement	"if ( r_str_glob ( item -> name , glob ) )"		4801837	0					
ANR	4801877	Condition	"r_str_glob ( item -> name , glob )"	460:6:9733:9761	4801837	0	True				
ANR	4801878	CallExpression	"r_str_glob ( item -> name , glob )"		4801837	0					
ANR	4801879	Callee	r_str_glob		4801837	0					
ANR	4801880	Identifier	r_str_glob		4801837	0					
ANR	4801881	ArgumentList	item -> name		4801837	1					
ANR	4801882	Argument	item -> name		4801837	0					
ANR	4801883	PtrMemberAccess	item -> name		4801837	0					
ANR	4801884	Identifier	item		4801837	0					
ANR	4801885	Identifier	name		4801837	1					
ANR	4801886	Argument	glob		4801837	1					
ANR	4801887	Identifier	glob		4801837	0					
ANR	4801888	CompoundStatement		9:37:167:167	4801837	1					
ANR	4801889	ExpressionStatement	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )	461:3:9769:9833	4801837	0	True				
ANR	4801890	AssignmentExpression	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801837	0		=			
ANR	4801891	Identifier	found		4801837	0					
ANR	4801892	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801837	1					
ANR	4801893	CastTarget	char *		4801837	0					
ANR	4801894	CallExpression	malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801837	1					
ANR	4801895	Callee	malloc		4801837	0					
ANR	4801896	Identifier	malloc		4801837	0					
ANR	4801897	ArgumentList	strlen ( name ) + strlen ( item -> name ) + 2		4801837	1					
ANR	4801898	Argument	strlen ( name ) + strlen ( item -> name ) + 2		4801837	0					
ANR	4801899	AdditiveExpression	strlen ( name ) + strlen ( item -> name ) + 2		4801837	0		+			
ANR	4801900	CallExpression	strlen ( name )		4801837	0					
ANR	4801901	Callee	strlen		4801837	0					
ANR	4801902	Identifier	strlen		4801837	0					
ANR	4801903	ArgumentList	name		4801837	1					
ANR	4801904	Argument	name		4801837	0					
ANR	4801905	Identifier	name		4801837	0					
ANR	4801906	AdditiveExpression	strlen ( item -> name ) + 2		4801837	1		+			
ANR	4801907	CallExpression	strlen ( item -> name )		4801837	0					
ANR	4801908	Callee	strlen		4801837	0					
ANR	4801909	Identifier	strlen		4801837	0					
ANR	4801910	ArgumentList	item -> name		4801837	1					
ANR	4801911	Argument	item -> name		4801837	0					
ANR	4801912	PtrMemberAccess	item -> name		4801837	0					
ANR	4801913	Identifier	item		4801837	0					
ANR	4801914	Identifier	name		4801837	1					
ANR	4801915	PrimaryExpression	2		4801837	1					
ANR	4801916	IfStatement	if ( ! found )		4801837	1					
ANR	4801917	Condition	! found	462:7:9842:9847	4801837	0	True				
ANR	4801918	UnaryOperationExpression	! found		4801837	0					
ANR	4801919	UnaryOperator	!		4801837	0					
ANR	4801920	Identifier	found		4801837	1					
ANR	4801921	CompoundStatement		11:15:253:253	4801837	1					
ANR	4801922	BreakStatement	break ;	463:4:9856:9861	4801837	0	True				
ANR	4801923	ExpressionStatement	"strcpy ( found , name )"	465:3:9871:9891	4801837	2	True				
ANR	4801924	CallExpression	"strcpy ( found , name )"		4801837	0					
ANR	4801925	Callee	strcpy		4801837	0					
ANR	4801926	Identifier	strcpy		4801837	0					
ANR	4801927	ArgumentList	found		4801837	1					
ANR	4801928	Argument	found		4801837	0					
ANR	4801929	Identifier	found		4801837	0					
ANR	4801930	Argument	name		4801837	1					
ANR	4801931	Identifier	name		4801837	0					
ANR	4801932	ExpressionStatement	"strcat ( found , ""/"" )"	466:3:9896:9915	4801837	3	True				
ANR	4801933	CallExpression	"strcat ( found , ""/"" )"		4801837	0					
ANR	4801934	Callee	strcat		4801837	0					
ANR	4801935	Identifier	strcat		4801837	0					
ANR	4801936	ArgumentList	found		4801837	1					
ANR	4801937	Argument	found		4801837	0					
ANR	4801938	Identifier	found		4801837	0					
ANR	4801939	Argument	"""/"""		4801837	1					
ANR	4801940	PrimaryExpression	"""/"""		4801837	0					
ANR	4801941	ExpressionStatement	"strcat ( found , item -> name )"	467:3:9920:9946	4801837	4	True				
ANR	4801942	CallExpression	"strcat ( found , item -> name )"		4801837	0					
ANR	4801943	Callee	strcat		4801837	0					
ANR	4801944	Identifier	strcat		4801837	0					
ANR	4801945	ArgumentList	found		4801837	1					
ANR	4801946	Argument	found		4801837	0					
ANR	4801947	Identifier	found		4801837	0					
ANR	4801948	Argument	item -> name		4801837	1					
ANR	4801949	PtrMemberAccess	item -> name		4801837	0					
ANR	4801950	Identifier	item		4801837	0					
ANR	4801951	Identifier	name		4801837	1					
ANR	4801952	ExpressionStatement	"r_list_append ( list , found )"	468:3:9951:9978	4801837	5	True				
ANR	4801953	CallExpression	"r_list_append ( list , found )"		4801837	0					
ANR	4801954	Callee	r_list_append		4801837	0					
ANR	4801955	Identifier	r_list_append		4801837	0					
ANR	4801956	ArgumentList	list		4801837	1					
ANR	4801957	Argument	list		4801837	0					
ANR	4801958	Identifier	list		4801837	0					
ANR	4801959	Argument	found		4801837	1					
ANR	4801960	Identifier	found		4801837	0					
ANR	4801961	IfStatement	"if ( ! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" ) )"		4801837	1					
ANR	4801962	Condition	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"	470:6:9990:10044	4801837	0	True				
ANR	4801963	OrExpression	"! strcmp ( item -> name , ""."" ) || ! strcmp ( item -> name , "".."" )"		4801837	0		||			
ANR	4801964	UnaryOperationExpression	"! strcmp ( item -> name , ""."" )"		4801837	0					
ANR	4801965	UnaryOperator	!		4801837	0					
ANR	4801966	CallExpression	"strcmp ( item -> name , ""."" )"		4801837	1					
ANR	4801967	Callee	strcmp		4801837	0					
ANR	4801968	Identifier	strcmp		4801837	0					
ANR	4801969	ArgumentList	item -> name		4801837	1					
ANR	4801970	Argument	item -> name		4801837	0					
ANR	4801971	PtrMemberAccess	item -> name		4801837	0					
ANR	4801972	Identifier	item		4801837	0					
ANR	4801973	Identifier	name		4801837	1					
ANR	4801974	Argument	"""."""		4801837	1					
ANR	4801975	PrimaryExpression	"""."""		4801837	0					
ANR	4801976	UnaryOperationExpression	"! strcmp ( item -> name , "".."" )"		4801837	1					
ANR	4801977	UnaryOperator	!		4801837	0					
ANR	4801978	CallExpression	"strcmp ( item -> name , "".."" )"		4801837	1					
ANR	4801979	Callee	strcmp		4801837	0					
ANR	4801980	Identifier	strcmp		4801837	0					
ANR	4801981	ArgumentList	item -> name		4801837	1					
ANR	4801982	Argument	item -> name		4801837	0					
ANR	4801983	PtrMemberAccess	item -> name		4801837	0					
ANR	4801984	Identifier	item		4801837	0					
ANR	4801985	Identifier	name		4801837	1					
ANR	4801986	Argument	""".."""		4801837	1					
ANR	4801987	PrimaryExpression	""".."""		4801837	0					
ANR	4801988	CompoundStatement		19:63:450:450	4801837	1					
ANR	4801989	ContinueStatement	continue ;	471:3:10052:10060	4801837	0	True				
ANR	4801990	IfStatement	if ( item -> type == R_FS_FILE_TYPE_DIRECTORY )		4801837	2					
ANR	4801991	Condition	item -> type == R_FS_FILE_TYPE_DIRECTORY	473:6:10072:10109	4801837	0	True				
ANR	4801992	EqualityExpression	item -> type == R_FS_FILE_TYPE_DIRECTORY		4801837	0		==			
ANR	4801993	PtrMemberAccess	item -> type		4801837	0					
ANR	4801994	Identifier	item		4801837	0					
ANR	4801995	Identifier	type		4801837	1					
ANR	4801996	Identifier	R_FS_FILE_TYPE_DIRECTORY		4801837	1					
ANR	4801997	CompoundStatement		22:46:515:515	4801837	1					
ANR	4801998	ExpressionStatement	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )	474:3:10117:10181	4801837	0	True				
ANR	4801999	AssignmentExpression	found = ( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801837	0		=			
ANR	4802000	Identifier	found		4801837	0					
ANR	4802001	CastExpression	( char * ) malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801837	1					
ANR	4802002	CastTarget	char *		4801837	0					
ANR	4802003	CallExpression	malloc ( strlen ( name ) + strlen ( item -> name ) + 2 )		4801837	1					
ANR	4802004	Callee	malloc		4801837	0					
ANR	4802005	Identifier	malloc		4801837	0					
ANR	4802006	ArgumentList	strlen ( name ) + strlen ( item -> name ) + 2		4801837	1					
ANR	4802007	Argument	strlen ( name ) + strlen ( item -> name ) + 2		4801837	0					
ANR	4802008	AdditiveExpression	strlen ( name ) + strlen ( item -> name ) + 2		4801837	0		+			
ANR	4802009	CallExpression	strlen ( name )		4801837	0					
ANR	4802010	Callee	strlen		4801837	0					
ANR	4802011	Identifier	strlen		4801837	0					
ANR	4802012	ArgumentList	name		4801837	1					
ANR	4802013	Argument	name		4801837	0					
ANR	4802014	Identifier	name		4801837	0					
ANR	4802015	AdditiveExpression	strlen ( item -> name ) + 2		4801837	1		+			
ANR	4802016	CallExpression	strlen ( item -> name )		4801837	0					
ANR	4802017	Callee	strlen		4801837	0					
ANR	4802018	Identifier	strlen		4801837	0					
ANR	4802019	ArgumentList	item -> name		4801837	1					
ANR	4802020	Argument	item -> name		4801837	0					
ANR	4802021	PtrMemberAccess	item -> name		4801837	0					
ANR	4802022	Identifier	item		4801837	0					
ANR	4802023	Identifier	name		4801837	1					
ANR	4802024	PrimaryExpression	2		4801837	1					
ANR	4802025	IfStatement	if ( ! found )		4801837	1					
ANR	4802026	Condition	! found	475:7:10190:10195	4801837	0	True				
ANR	4802027	UnaryOperationExpression	! found		4801837	0					
ANR	4802028	UnaryOperator	!		4801837	0					
ANR	4802029	Identifier	found		4801837	1					
ANR	4802030	CompoundStatement		24:15:601:601	4801837	1					
ANR	4802031	BreakStatement	break ;	476:4:10204:10209	4801837	0	True				
ANR	4802032	ExpressionStatement	"strcpy ( found , name )"	478:3:10219:10239	4801837	2	True				
ANR	4802033	CallExpression	"strcpy ( found , name )"		4801837	0					
ANR	4802034	Callee	strcpy		4801837	0					
ANR	4802035	Identifier	strcpy		4801837	0					
ANR	4802036	ArgumentList	found		4801837	1					
ANR	4802037	Argument	found		4801837	0					
ANR	4802038	Identifier	found		4801837	0					
ANR	4802039	Argument	name		4801837	1					
ANR	4802040	Identifier	name		4801837	0					
ANR	4802041	ExpressionStatement	"strcat ( found , ""/"" )"	479:3:10244:10263	4801837	3	True				
ANR	4802042	CallExpression	"strcat ( found , ""/"" )"		4801837	0					
ANR	4802043	Callee	strcat		4801837	0					
ANR	4802044	Identifier	strcat		4801837	0					
ANR	4802045	ArgumentList	found		4801837	1					
ANR	4802046	Argument	found		4801837	0					
ANR	4802047	Identifier	found		4801837	0					
ANR	4802048	Argument	"""/"""		4801837	1					
ANR	4802049	PrimaryExpression	"""/"""		4801837	0					
ANR	4802050	ExpressionStatement	"strcat ( found , item -> name )"	480:3:10268:10294	4801837	4	True				
ANR	4802051	CallExpression	"strcat ( found , item -> name )"		4801837	0					
ANR	4802052	Callee	strcat		4801837	0					
ANR	4802053	Identifier	strcat		4801837	0					
ANR	4802054	ArgumentList	found		4801837	1					
ANR	4802055	Argument	found		4801837	0					
ANR	4802056	Identifier	found		4801837	0					
ANR	4802057	Argument	item -> name		4801837	1					
ANR	4802058	PtrMemberAccess	item -> name		4801837	0					
ANR	4802059	Identifier	item		4801837	0					
ANR	4802060	Identifier	name		4801837	1					
ANR	4802061	ExpressionStatement	"r_fs_find_name_aux ( fs , found , glob , list )"	481:3:10299:10341	4801837	5	True				
ANR	4802062	CallExpression	"r_fs_find_name_aux ( fs , found , glob , list )"		4801837	0					
ANR	4802063	Callee	r_fs_find_name_aux		4801837	0					
ANR	4802064	Identifier	r_fs_find_name_aux		4801837	0					
ANR	4802065	ArgumentList	fs		4801837	1					
ANR	4802066	Argument	fs		4801837	0					
ANR	4802067	Identifier	fs		4801837	0					
ANR	4802068	Argument	found		4801837	1					
ANR	4802069	Identifier	found		4801837	0					
ANR	4802070	Argument	glob		4801837	2					
ANR	4802071	Identifier	glob		4801837	0					
ANR	4802072	Argument	list		4801837	3					
ANR	4802073	Identifier	list		4801837	0					
ANR	4802074	ExpressionStatement	free ( found )	482:3:10346:10358	4801837	6	True				
ANR	4802075	CallExpression	free ( found )		4801837	0					
ANR	4802076	Callee	free		4801837	0					
ANR	4802077	Identifier	free		4801837	0					
ANR	4802078	ArgumentList	found		4801837	1					
ANR	4802079	Argument	found		4801837	0					
ANR	4802080	Identifier	found		4801837	0					
ANR	4802081	ReturnType	static void		4801837	1					
ANR	4802082	Identifier	r_fs_find_name_aux		4801837	2					
ANR	4802083	ParameterList	"RFS * fs , const char * name , const char * glob , RList * list"		4801837	3					
ANR	4802084	Parameter	RFS * fs	452:31:9538:9544	4801837	0	True				
ANR	4802085	ParameterType	RFS *		4801837	0					
ANR	4802086	Identifier	fs		4801837	1					
ANR	4802087	Parameter	const char * name	452:40:9547:9562	4801837	1	True				
ANR	4802088	ParameterType	const char *		4801837	0					
ANR	4802089	Identifier	name		4801837	1					
ANR	4802090	Parameter	const char * glob	452:58:9565:9580	4801837	2	True				
ANR	4802091	ParameterType	const char *		4801837	0					
ANR	4802092	Identifier	glob		4801837	1					
ANR	4802093	Parameter	RList * list	452:76:9583:9593	4801837	3	True				
ANR	4802094	ParameterType	RList *		4801837	0					
ANR	4802095	Identifier	list		4801837	1					
ANR	4802096	CFGEntryNode	ENTRY		4801837		True				
ANR	4802097	CFGExitNode	EXIT		4801837		True				
ANR	4802098	CFGErrorNode	ERROR		4801837		True				
ANR	4802099	Symbol	strcmp		4801837						
ANR	4802100	Symbol	malloc		4801837						
ANR	4802101	Symbol	item		4801837						
ANR	4802102	Symbol	item -> type		4801837						
ANR	4802103	Symbol	glob		4801837						
ANR	4802104	Symbol	R_FS_FILE_TYPE_DIRECTORY		4801837						
ANR	4802105	Symbol	dirs		4801837						
ANR	4802106	Symbol	iter		4801837						
ANR	4802107	Symbol	list		4801837						
ANR	4802108	Symbol	fs		4801837						
ANR	4802109	Symbol	r_fs_dir		4801837						
ANR	4802110	Symbol	strlen		4801837						
ANR	4802111	Symbol	found		4801837						
ANR	4802112	Symbol	r_str_glob		4801837						
ANR	4802113	Symbol	* item		4801837						
ANR	4802114	Symbol	item -> name		4801837						
ANR	4802115	Symbol	name		4801837						
ANR	4802116	Function	r_fs_find_name	487:0:10370:10555							
ANR	4802117	FunctionDef	"r_fs_find_name (RFS * fs , const char * name , const char * glob)"		4802116	0					
ANR	4802118	CompoundStatement		487:73:10443:10555	4802116	0					
ANR	4802119	IdentifierDeclStatement	RList * list = r_list_newf ( free ) ;	488:1:10446:10478	4802116	0	True				
ANR	4802120	IdentifierDecl	* list = r_list_newf ( free )		4802116	0					
ANR	4802121	IdentifierDeclType	RList *		4802116	0					
ANR	4802122	Identifier	list		4802116	1					
ANR	4802123	AssignmentExpression	* list = r_list_newf ( free )		4802116	2		=			
ANR	4802124	Identifier	list		4802116	0					
ANR	4802125	CallExpression	r_list_newf ( free )		4802116	1					
ANR	4802126	Callee	r_list_newf		4802116	0					
ANR	4802127	Identifier	r_list_newf		4802116	0					
ANR	4802128	ArgumentList	free		4802116	1					
ANR	4802129	Argument	free		4802116	0					
ANR	4802130	Identifier	free		4802116	0					
ANR	4802131	IfStatement	if ( list )		4802116	1					
ANR	4802132	Condition	list	489:5:10485:10488	4802116	0	True				
ANR	4802133	Identifier	list		4802116	0					
ANR	4802134	CompoundStatement		3:11:47:47	4802116	1					
ANR	4802135	ExpressionStatement	"r_fs_find_name_aux ( fs , name , glob , list )"	490:2:10495:10536	4802116	0	True				
ANR	4802136	CallExpression	"r_fs_find_name_aux ( fs , name , glob , list )"		4802116	0					
ANR	4802137	Callee	r_fs_find_name_aux		4802116	0					
ANR	4802138	Identifier	r_fs_find_name_aux		4802116	0					
ANR	4802139	ArgumentList	fs		4802116	1					
ANR	4802140	Argument	fs		4802116	0					
ANR	4802141	Identifier	fs		4802116	0					
ANR	4802142	Argument	name		4802116	1					
ANR	4802143	Identifier	name		4802116	0					
ANR	4802144	Argument	glob		4802116	2					
ANR	4802145	Identifier	glob		4802116	0					
ANR	4802146	Argument	list		4802116	3					
ANR	4802147	Identifier	list		4802116	0					
ANR	4802148	ReturnStatement	return list ;	492:1:10542:10553	4802116	2	True				
ANR	4802149	Identifier	list		4802116	0					
ANR	4802150	ReturnType	R_API RList *		4802116	1					
ANR	4802151	Identifier	r_fs_find_name		4802116	2					
ANR	4802152	ParameterList	"RFS * fs , const char * name , const char * glob"		4802116	3					
ANR	4802153	Parameter	RFS * fs	487:28:10398:10404	4802116	0	True				
ANR	4802154	ParameterType	RFS *		4802116	0					
ANR	4802155	Identifier	fs		4802116	1					
ANR	4802156	Parameter	const char * name	487:37:10407:10422	4802116	1	True				
ANR	4802157	ParameterType	const char *		4802116	0					
ANR	4802158	Identifier	name		4802116	1					
ANR	4802159	Parameter	const char * glob	487:55:10425:10440	4802116	2	True				
ANR	4802160	ParameterType	const char *		4802116	0					
ANR	4802161	Identifier	glob		4802116	1					
ANR	4802162	CFGEntryNode	ENTRY		4802116		True				
ANR	4802163	CFGExitNode	EXIT		4802116		True				
ANR	4802164	Symbol	r_list_newf		4802116						
ANR	4802165	Symbol	name		4802116						
ANR	4802166	Symbol	glob		4802116						
ANR	4802167	Symbol	free		4802116						
ANR	4802168	Symbol	list		4802116						
ANR	4802169	Symbol	fs		4802116						
ANR	4802170	Function	r_fs_slurp	495:0:10558:11211							
ANR	4802171	FunctionDef	"r_fs_slurp (RFS * fs , const char * path)"		4802170	0					
ANR	4802172	CompoundStatement		495:53:10611:11211	4802170	0					
ANR	4802173	IdentifierDeclStatement	RFSFile * file = NULL ;	496:1:10614:10634	4802170	0	True				
ANR	4802174	IdentifierDecl	* file = NULL		4802170	0					
ANR	4802175	IdentifierDeclType	RFSFile *		4802170	0					
ANR	4802176	Identifier	file		4802170	1					
ANR	4802177	AssignmentExpression	* file = NULL		4802170	2		=			
ANR	4802178	Identifier	NULL		4802170	0					
ANR	4802179	Identifier	NULL		4802170	1					
ANR	4802180	IdentifierDeclStatement	RFSRoot * root ;	497:1:10637:10650	4802170	1	True				
ANR	4802181	IdentifierDecl	* root		4802170	0					
ANR	4802182	IdentifierDeclType	RFSRoot *		4802170	0					
ANR	4802183	Identifier	root		4802170	1					
ANR	4802184	IdentifierDeclStatement	"RList * roots = r_fs_root ( fs , path ) ;"	498:1:10653:10688	4802170	2	True				
ANR	4802185	IdentifierDecl	"* roots = r_fs_root ( fs , path )"		4802170	0					
ANR	4802186	IdentifierDeclType	RList *		4802170	0					
ANR	4802187	Identifier	roots		4802170	1					
ANR	4802188	AssignmentExpression	"* roots = r_fs_root ( fs , path )"		4802170	2		=			
ANR	4802189	Identifier	roots		4802170	0					
ANR	4802190	CallExpression	"r_fs_root ( fs , path )"		4802170	1					
ANR	4802191	Callee	r_fs_root		4802170	0					
ANR	4802192	Identifier	r_fs_root		4802170	0					
ANR	4802193	ArgumentList	fs		4802170	1					
ANR	4802194	Argument	fs		4802170	0					
ANR	4802195	Identifier	fs		4802170	0					
ANR	4802196	Argument	path		4802170	1					
ANR	4802197	Identifier	path		4802170	0					
ANR	4802198	IdentifierDeclStatement	RListIter * iter ;	499:1:10691:10706	4802170	3	True				
ANR	4802199	IdentifierDecl	* iter		4802170	0					
ANR	4802200	IdentifierDeclType	RListIter *		4802170	0					
ANR	4802201	Identifier	iter		4802170	1					
ANR	4802202	Statement	r_list_foreach	500:1:10709:10722	4802170	4	True				
ANR	4802203	Statement	(	500:16:10724:10724	4802170	5	True				
ANR	4802204	Statement	roots	500:17:10725:10729	4802170	6	True				
ANR	4802205	Statement	","	500:22:10730:10730	4802170	7	True				
ANR	4802206	Statement	iter	500:24:10732:10735	4802170	8	True				
ANR	4802207	Statement	","	500:28:10736:10736	4802170	9	True				
ANR	4802208	Statement	root	500:30:10738:10741	4802170	10	True				
ANR	4802209	Statement	)	500:34:10742:10742	4802170	11	True				
ANR	4802210	CompoundStatement		6:36:132:132	4802170	12					
ANR	4802211	IfStatement	if ( ! root || ! root -> p )		4802170	0					
ANR	4802212	Condition	! root || ! root -> p	501:6:10752:10768	4802170	0	True				
ANR	4802213	OrExpression	! root || ! root -> p		4802170	0		||			
ANR	4802214	UnaryOperationExpression	! root		4802170	0					
ANR	4802215	UnaryOperator	!		4802170	0					
ANR	4802216	Identifier	root		4802170	1					
ANR	4802217	UnaryOperationExpression	! root -> p		4802170	1					
ANR	4802218	UnaryOperator	!		4802170	0					
ANR	4802219	PtrMemberAccess	root -> p		4802170	1					
ANR	4802220	Identifier	root		4802170	0					
ANR	4802221	Identifier	p		4802170	1					
ANR	4802222	CompoundStatement		7:25:159:159	4802170	1					
ANR	4802223	ContinueStatement	continue ;	502:3:10776:10784	4802170	0	True				
ANR	4802224	IfStatement	if ( root -> p -> open && root -> p -> read && root -> p -> close )		4802170	1					
ANR	4802225	Condition	root -> p -> open && root -> p -> read && root -> p -> close	504:6:10796:10843	4802170	0	True				
ANR	4802226	AndExpression	root -> p -> open && root -> p -> read && root -> p -> close		4802170	0		&&			
ANR	4802227	PtrMemberAccess	root -> p -> open		4802170	0					
ANR	4802228	PtrMemberAccess	root -> p		4802170	0					
ANR	4802229	Identifier	root		4802170	0					
ANR	4802230	Identifier	p		4802170	1					
ANR	4802231	Identifier	open		4802170	1					
ANR	4802232	AndExpression	root -> p -> read && root -> p -> close		4802170	1		&&			
ANR	4802233	PtrMemberAccess	root -> p -> read		4802170	0					
ANR	4802234	PtrMemberAccess	root -> p		4802170	0					
ANR	4802235	Identifier	root		4802170	0					
ANR	4802236	Identifier	p		4802170	1					
ANR	4802237	Identifier	read		4802170	1					
ANR	4802238	PtrMemberAccess	root -> p -> close		4802170	1					
ANR	4802239	PtrMemberAccess	root -> p		4802170	0					
ANR	4802240	Identifier	root		4802170	0					
ANR	4802241	Identifier	p		4802170	1					
ANR	4802242	Identifier	close		4802170	1					
ANR	4802243	CompoundStatement		10:56:234:234	4802170	1					
ANR	4802244	ExpressionStatement	"file = root -> p -> open ( root , path , false )"	505:3:10851:10891	4802170	0	True				
ANR	4802245	AssignmentExpression	"file = root -> p -> open ( root , path , false )"		4802170	0		=			
ANR	4802246	Identifier	file		4802170	0					
ANR	4802247	CallExpression	"root -> p -> open ( root , path , false )"		4802170	1					
ANR	4802248	Callee	root -> p -> open		4802170	0					
ANR	4802249	PtrMemberAccess	root -> p -> open		4802170	0					
ANR	4802250	PtrMemberAccess	root -> p		4802170	0					
ANR	4802251	Identifier	root		4802170	0					
ANR	4802252	Identifier	p		4802170	1					
ANR	4802253	Identifier	open		4802170	1					
ANR	4802254	ArgumentList	root		4802170	1					
ANR	4802255	Argument	root		4802170	0					
ANR	4802256	Identifier	root		4802170	0					
ANR	4802257	Argument	path		4802170	1					
ANR	4802258	Identifier	path		4802170	0					
ANR	4802259	Argument	false		4802170	2					
ANR	4802260	Identifier	false		4802170	0					
ANR	4802261	IfStatement	if ( file )		4802170	1					
ANR	4802262	Condition	file	506:7:10900:10903	4802170	0	True				
ANR	4802263	Identifier	file		4802170	0					
ANR	4802264	CompoundStatement		12:13:294:294	4802170	1					
ANR	4802265	ExpressionStatement	"root -> p -> read ( file , 0 , file -> size )"	507:4:10912:10947	4802170	0	True				
ANR	4802266	CallExpression	"root -> p -> read ( file , 0 , file -> size )"		4802170	0					
ANR	4802267	Callee	root -> p -> read		4802170	0					
ANR	4802268	PtrMemberAccess	root -> p -> read		4802170	0					
ANR	4802269	PtrMemberAccess	root -> p		4802170	0					
ANR	4802270	Identifier	root		4802170	0					
ANR	4802271	Identifier	p		4802170	1					
ANR	4802272	Identifier	read		4802170	1					
ANR	4802273	ArgumentList	file		4802170	1					
ANR	4802274	Argument	file		4802170	0					
ANR	4802275	Identifier	file		4802170	0					
ANR	4802276	Argument	0		4802170	1					
ANR	4802277	PrimaryExpression	0		4802170	0					
ANR	4802278	Argument	file -> size		4802170	2					
ANR	4802279	PtrMemberAccess	file -> size		4802170	0					
ANR	4802280	Identifier	file		4802170	0					
ANR	4802281	Identifier	size		4802170	1					
ANR	4802282	ElseStatement	else		4802170	0					
ANR	4802283	CompoundStatement		14:9:359:359	4802170	0					
ANR	4802284	ExpressionStatement	"eprintf ( ""r_fs_slurp: cannot open file\\n"" )"	509:4:10977:11019	4802170	0	True				
ANR	4802285	CallExpression	"eprintf ( ""r_fs_slurp: cannot open file\\n"" )"		4802170	0					
ANR	4802286	Callee	eprintf		4802170	0					
ANR	4802287	Identifier	eprintf		4802170	0					
ANR	4802288	ArgumentList	"""r_fs_slurp: cannot open file\\n"""		4802170	1					
ANR	4802289	Argument	"""r_fs_slurp: cannot open file\\n"""		4802170	0					
ANR	4802290	PrimaryExpression	"""r_fs_slurp: cannot open file\\n"""		4802170	0					
ANR	4802291	ElseStatement	else		4802170	0					
ANR	4802292	CompoundStatement		17:9:423:423	4802170	0					
ANR	4802293	IfStatement	if ( root -> p -> slurp )		4802170	0					
ANR	4802294	Condition	root -> p -> slurp	512:7:11044:11057	4802170	0	True				
ANR	4802295	PtrMemberAccess	root -> p -> slurp		4802170	0					
ANR	4802296	PtrMemberAccess	root -> p		4802170	0					
ANR	4802297	Identifier	root		4802170	0					
ANR	4802298	Identifier	p		4802170	1					
ANR	4802299	Identifier	slurp		4802170	1					
ANR	4802300	CompoundStatement		18:23:448:448	4802170	1					
ANR	4802301	ExpressionStatement	free ( roots )	513:4:11066:11078	4802170	0	True				
ANR	4802302	CallExpression	free ( roots )		4802170	0					
ANR	4802303	Callee	free		4802170	0					
ANR	4802304	Identifier	free		4802170	0					
ANR	4802305	ArgumentList	roots		4802170	1					
ANR	4802306	Argument	roots		4802170	0					
ANR	4802307	Identifier	roots		4802170	0					
ANR	4802308	ReturnStatement	"return root -> p -> slurp ( root , path ) ;"	514:4:11084:11118	4802170	1	True				
ANR	4802309	CallExpression	"root -> p -> slurp ( root , path )"		4802170	0					
ANR	4802310	Callee	root -> p -> slurp		4802170	0					
ANR	4802311	PtrMemberAccess	root -> p -> slurp		4802170	0					
ANR	4802312	PtrMemberAccess	root -> p		4802170	0					
ANR	4802313	Identifier	root		4802170	0					
ANR	4802314	Identifier	p		4802170	1					
ANR	4802315	Identifier	slurp		4802170	1					
ANR	4802316	ArgumentList	root		4802170	1					
ANR	4802317	Argument	root		4802170	0					
ANR	4802318	Identifier	root		4802170	0					
ANR	4802319	Argument	path		4802170	1					
ANR	4802320	Identifier	path		4802170	0					
ANR	4802321	ExpressionStatement	"eprintf ( ""r_fs_slurp: null root->p->slurp\\n"" )"	516:3:11128:11173	4802170	1	True				
ANR	4802322	CallExpression	"eprintf ( ""r_fs_slurp: null root->p->slurp\\n"" )"		4802170	0					
ANR	4802323	Callee	eprintf		4802170	0					
ANR	4802324	Identifier	eprintf		4802170	0					
ANR	4802325	ArgumentList	"""r_fs_slurp: null root->p->slurp\\n"""		4802170	1					
ANR	4802326	Argument	"""r_fs_slurp: null root->p->slurp\\n"""		4802170	0					
ANR	4802327	PrimaryExpression	"""r_fs_slurp: null root->p->slurp\\n"""		4802170	0					
ANR	4802328	ExpressionStatement	free ( roots )	519:1:11183:11195	4802170	13	True				
ANR	4802329	CallExpression	free ( roots )		4802170	0					
ANR	4802330	Callee	free		4802170	0					
ANR	4802331	Identifier	free		4802170	0					
ANR	4802332	ArgumentList	roots		4802170	1					
ANR	4802333	Argument	roots		4802170	0					
ANR	4802334	Identifier	roots		4802170	0					
ANR	4802335	ReturnStatement	return file ;	520:1:11198:11209	4802170	14	True				
ANR	4802336	Identifier	file		4802170	0					
ANR	4802337	ReturnType	R_API RFSFile *		4802170	1					
ANR	4802338	Identifier	r_fs_slurp		4802170	2					
ANR	4802339	ParameterList	"RFS * fs , const char * path"		4802170	3					
ANR	4802340	Parameter	RFS * fs	495:26:10584:10590	4802170	0	True				
ANR	4802341	ParameterType	RFS *		4802170	0					
ANR	4802342	Identifier	fs		4802170	1					
ANR	4802343	Parameter	const char * path	495:35:10593:10608	4802170	1	True				
ANR	4802344	ParameterType	const char *		4802170	0					
ANR	4802345	Identifier	path		4802170	1					
ANR	4802346	CFGEntryNode	ENTRY		4802170		True				
ANR	4802347	CFGExitNode	EXIT		4802170		True				
ANR	4802348	CFGErrorNode	ERROR		4802170		True				
ANR	4802349	Symbol	root -> p -> read		4802170						
ANR	4802350	Symbol	NULL		4802170						
ANR	4802351	Symbol	* root -> p		4802170						
ANR	4802352	Symbol	root -> p -> close		4802170						
ANR	4802353	Symbol	root -> p		4802170						
ANR	4802354	Symbol	false		4802170						
ANR	4802355	Symbol	iter		4802170						
ANR	4802356	Symbol	roots		4802170						
ANR	4802357	Symbol	* file		4802170						
ANR	4802358	Symbol	fs		4802170						
ANR	4802359	Symbol	path		4802170						
ANR	4802360	Symbol	* * root		4802170						
ANR	4802361	Symbol	file		4802170						
ANR	4802362	Symbol	r_fs_root		4802170						
ANR	4802363	Symbol	root		4802170						
ANR	4802364	Symbol	file -> size		4802170						
ANR	4802365	Symbol	* root		4802170						
ANR	4802366	Symbol	root -> p -> open		4802170						
ANR	4802367	Symbol	root -> p -> slurp		4802170						
ANR	4802368	Function	grub_parhook	527:0:11298:11595							
ANR	4802369	FunctionDef	"grub_parhook (void * disk , void * ptr , void * closure)"		4802368	0					
ANR	4802370	CompoundStatement		527:62:11360:11595	4802368	0					
ANR	4802371	IdentifierDeclStatement	struct grub_partition * par = ptr ;	528:1:11363:11395	4802368	0	True				
ANR	4802372	IdentifierDecl	* par = ptr		4802368	0					
ANR	4802373	IdentifierDeclType	struct grub_partition *		4802368	0					
ANR	4802374	Identifier	par		4802368	1					
ANR	4802375	AssignmentExpression	* par = ptr		4802368	2		=			
ANR	4802376	Identifier	ptr		4802368	0					
ANR	4802377	Identifier	ptr		4802368	1					
ANR	4802378	IdentifierDeclStatement	RList * list = ( RList * ) closure ;	529:1:11398:11428	4802368	1	True				
ANR	4802379	IdentifierDecl	* list = ( RList * ) closure		4802368	0					
ANR	4802380	IdentifierDeclType	RList *		4802368	0					
ANR	4802381	Identifier	list		4802368	1					
ANR	4802382	AssignmentExpression	* list = ( RList * ) closure		4802368	2		=			
ANR	4802383	Identifier	list		4802368	0					
ANR	4802384	CastExpression	( RList * ) closure		4802368	1					
ANR	4802385	CastTarget	RList *		4802368	0					
ANR	4802386	Identifier	closure		4802368	1					
ANR	4802387	IdentifierDeclStatement	"RFSPartition * p = r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len ) ;"	530:1:11431:11529	4802368	2	True				
ANR	4802388	IdentifierDecl	"* p = r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len )"		4802368	0					
ANR	4802389	IdentifierDeclType	RFSPartition *		4802368	0					
ANR	4802390	Identifier	p		4802368	1					
ANR	4802391	AssignmentExpression	"* p = r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len )"		4802368	2		=			
ANR	4802392	Identifier	p		4802368	0					
ANR	4802393	CallExpression	"r_fs_partition_new ( r_list_length ( list ) , par -> start * 512 , 512 * par -> len )"		4802368	1					
ANR	4802394	Callee	r_fs_partition_new		4802368	0					
ANR	4802395	Identifier	r_fs_partition_new		4802368	0					
ANR	4802396	ArgumentList	r_list_length ( list )		4802368	1					
ANR	4802397	Argument	r_list_length ( list )		4802368	0					
ANR	4802398	CallExpression	r_list_length ( list )		4802368	0					
ANR	4802399	Callee	r_list_length		4802368	0					
ANR	4802400	Identifier	r_list_length		4802368	0					
ANR	4802401	ArgumentList	list		4802368	1					
ANR	4802402	Argument	list		4802368	0					
ANR	4802403	Identifier	list		4802368	0					
ANR	4802404	Argument	par -> start * 512		4802368	1					
ANR	4802405	MultiplicativeExpression	par -> start * 512		4802368	0		*			
ANR	4802406	PtrMemberAccess	par -> start		4802368	0					
ANR	4802407	Identifier	par		4802368	0					
ANR	4802408	Identifier	start		4802368	1					
ANR	4802409	PrimaryExpression	512		4802368	1					
ANR	4802410	Argument	512 * par -> len		4802368	2					
ANR	4802411	MultiplicativeExpression	512 * par -> len		4802368	0		*			
ANR	4802412	PrimaryExpression	512		4802368	0					
ANR	4802413	PtrMemberAccess	par -> len		4802368	1					
ANR	4802414	Identifier	par		4802368	0					
ANR	4802415	Identifier	len		4802368	1					
ANR	4802416	ExpressionStatement	p -> type = par -> msdostype	533:1:11532:11556	4802368	3	True				
ANR	4802417	AssignmentExpression	p -> type = par -> msdostype		4802368	0		=			
ANR	4802418	PtrMemberAccess	p -> type		4802368	0					
ANR	4802419	Identifier	p		4802368	0					
ANR	4802420	Identifier	type		4802368	1					
ANR	4802421	PtrMemberAccess	par -> msdostype		4802368	1					
ANR	4802422	Identifier	par		4802368	0					
ANR	4802423	Identifier	msdostype		4802368	1					
ANR	4802424	ExpressionStatement	"r_list_append ( list , p )"	534:1:11559:11582	4802368	4	True				
ANR	4802425	CallExpression	"r_list_append ( list , p )"		4802368	0					
ANR	4802426	Callee	r_list_append		4802368	0					
ANR	4802427	Identifier	r_list_append		4802368	0					
ANR	4802428	ArgumentList	list		4802368	1					
ANR	4802429	Argument	list		4802368	0					
ANR	4802430	Identifier	list		4802368	0					
ANR	4802431	Argument	p		4802368	1					
ANR	4802432	Identifier	p		4802368	0					
ANR	4802433	ReturnStatement	return 0 ;	535:1:11585:11593	4802368	5	True				
ANR	4802434	PrimaryExpression	0		4802368	0					
ANR	4802435	ReturnType	static int		4802368	1					
ANR	4802436	Identifier	grub_parhook		4802368	2					
ANR	4802437	ParameterList	"void * disk , void * ptr , void * closure"		4802368	3					
ANR	4802438	Parameter	void * disk	527:24:11322:11331	4802368	0	True				
ANR	4802439	ParameterType	void *		4802368	0					
ANR	4802440	Identifier	disk		4802368	1					
ANR	4802441	Parameter	void * ptr	527:36:11334:11342	4802368	1	True				
ANR	4802442	ParameterType	void *		4802368	0					
ANR	4802443	Identifier	ptr		4802368	1					
ANR	4802444	Parameter	void * closure	527:47:11345:11357	4802368	2	True				
ANR	4802445	ParameterType	void *		4802368	0					
ANR	4802446	Identifier	closure		4802368	1					
ANR	4802447	CFGEntryNode	ENTRY		4802368		True				
ANR	4802448	CFGExitNode	EXIT		4802368		True				
ANR	4802449	Symbol	par		4802368						
ANR	4802450	Symbol	par -> len		4802368						
ANR	4802451	Symbol	* par		4802368						
ANR	4802452	Symbol	list		4802368						
ANR	4802453	Symbol	r_fs_partition_new		4802368						
ANR	4802454	Symbol	par -> start		4802368						
ANR	4802455	Symbol	p -> type		4802368						
ANR	4802456	Symbol	ptr		4802368						
ANR	4802457	Symbol	p		4802368						
ANR	4802458	Symbol	disk		4802368						
ANR	4802459	Symbol	* p		4802368						
ANR	4802460	Symbol	closure		4802368						
ANR	4802461	Symbol	r_list_length		4802368						
ANR	4802462	Symbol	par -> msdostype		4802368						
ANR	4802463	Function	fs_parhook	539:0:11605:11765							
ANR	4802464	FunctionDef	"fs_parhook (void * disk , void * ptr , void * closure)"		4802463	0					
ANR	4802465	CompoundStatement		539:60:11665:11765	4802463	0					
ANR	4802466	IdentifierDeclStatement	RFSPartition * par = ptr ;	540:1:11668:11691	4802463	0	True				
ANR	4802467	IdentifierDecl	* par = ptr		4802463	0					
ANR	4802468	IdentifierDeclType	RFSPartition *		4802463	0					
ANR	4802469	Identifier	par		4802463	1					
ANR	4802470	AssignmentExpression	* par = ptr		4802463	2		=			
ANR	4802471	Identifier	ptr		4802463	0					
ANR	4802472	Identifier	ptr		4802463	1					
ANR	4802473	IdentifierDeclStatement	RList * list = ( RList * ) closure ;	541:1:11694:11724	4802463	1	True				
ANR	4802474	IdentifierDecl	* list = ( RList * ) closure		4802463	0					
ANR	4802475	IdentifierDeclType	RList *		4802463	0					
ANR	4802476	Identifier	list		4802463	1					
ANR	4802477	AssignmentExpression	* list = ( RList * ) closure		4802463	2		=			
ANR	4802478	Identifier	list		4802463	0					
ANR	4802479	CastExpression	( RList * ) closure		4802463	1					
ANR	4802480	CastTarget	RList *		4802463	0					
ANR	4802481	Identifier	closure		4802463	1					
ANR	4802482	ExpressionStatement	"r_list_append ( list , par )"	542:1:11727:11752	4802463	2	True				
ANR	4802483	CallExpression	"r_list_append ( list , par )"		4802463	0					
ANR	4802484	Callee	r_list_append		4802463	0					
ANR	4802485	Identifier	r_list_append		4802463	0					
ANR	4802486	ArgumentList	list		4802463	1					
ANR	4802487	Argument	list		4802463	0					
ANR	4802488	Identifier	list		4802463	0					
ANR	4802489	Argument	par		4802463	1					
ANR	4802490	Identifier	par		4802463	0					
ANR	4802491	ReturnStatement	return 0 ;	543:1:11755:11763	4802463	3	True				
ANR	4802492	PrimaryExpression	0		4802463	0					
ANR	4802493	ReturnType	static int		4802463	1					
ANR	4802494	Identifier	fs_parhook		4802463	2					
ANR	4802495	ParameterList	"void * disk , void * ptr , void * closure"		4802463	3					
ANR	4802496	Parameter	void * disk	539:22:11627:11636	4802463	0	True				
ANR	4802497	ParameterType	void *		4802463	0					
ANR	4802498	Identifier	disk		4802463	1					
ANR	4802499	Parameter	void * ptr	539:34:11639:11647	4802463	1	True				
ANR	4802500	ParameterType	void *		4802463	0					
ANR	4802501	Identifier	ptr		4802463	1					
ANR	4802502	Parameter	void * closure	539:45:11650:11662	4802463	2	True				
ANR	4802503	ParameterType	void *		4802463	0					
ANR	4802504	Identifier	closure		4802463	1					
ANR	4802505	CFGEntryNode	ENTRY		4802463		True				
ANR	4802506	CFGExitNode	EXIT		4802463		True				
ANR	4802507	Symbol	par		4802463						
ANR	4802508	Symbol	disk		4802463						
ANR	4802509	Symbol	list		4802463						
ANR	4802510	Symbol	closure		4802463						
ANR	4802511	Symbol	ptr		4802463						
ANR	4802512	DeclStmt									
ANR	4802513	Decl							RFSPartitionType	RFSPartitionType [ ]	partitions
ANR	4802514	Function	r_fs_partition_type_get	571:6:12602:12738							
ANR	4802515	FunctionDef	r_fs_partition_type_get (int n)		4802514	0					
ANR	4802516	CompoundStatement		571:49:12645:12738	4802514	0					
ANR	4802517	IfStatement	if ( n < 0 || n >= R_FS_PARTITIONS_LENGTH )		4802514	0					
ANR	4802518	Condition	n < 0 || n >= R_FS_PARTITIONS_LENGTH	572:5:12652:12687	4802514	0	True				
ANR	4802519	OrExpression	n < 0 || n >= R_FS_PARTITIONS_LENGTH		4802514	0		||			
ANR	4802520	RelationalExpression	n < 0		4802514	0		<			
ANR	4802521	Identifier	n		4802514	0					
ANR	4802522	PrimaryExpression	0		4802514	1					
ANR	4802523	RelationalExpression	n >= R_FS_PARTITIONS_LENGTH		4802514	1		>=			
ANR	4802524	Identifier	n		4802514	0					
ANR	4802525	Identifier	R_FS_PARTITIONS_LENGTH		4802514	1					
ANR	4802526	CompoundStatement		2:43:44:44	4802514	1					
ANR	4802527	ReturnStatement	return NULL ;	573:2:12694:12705	4802514	0	True				
ANR	4802528	Identifier	NULL		4802514	0					
ANR	4802529	ReturnStatement	return partitions [ n ] . name ;	575:1:12711:12736	4802514	1	True				
ANR	4802530	MemberAccess	partitions [ n ] . name		4802514	0					
ANR	4802531	ArrayIndexing	partitions [ n ]		4802514	0					
ANR	4802532	Identifier	partitions		4802514	0					
ANR	4802533	Identifier	n		4802514	1					
ANR	4802534	Identifier	name		4802514	1					
ANR	4802535	ReturnType	const char *		4802514	1					
ANR	4802536	Identifier	r_fs_partition_type_get		4802514	2					
ANR	4802537	ParameterList	int n		4802514	3					
ANR	4802538	Parameter	int n	571:42:12638:12642	4802514	0	True				
ANR	4802539	ParameterType	int		4802514	0					
ANR	4802540	Identifier	n		4802514	1					
ANR	4802541	CFGEntryNode	ENTRY		4802514		True				
ANR	4802542	CFGExitNode	EXIT		4802514		True				
ANR	4802543	Symbol	partitions		4802514						
ANR	4802544	Symbol	NULL		4802514						
ANR	4802545	Symbol	* n		4802514						
ANR	4802546	Symbol	* partitions		4802514						
ANR	4802547	Symbol	partitions [ n ] . name		4802514						
ANR	4802548	Symbol	R_FS_PARTITIONS_LENGTH		4802514						
ANR	4802549	Symbol	n		4802514						
ANR	4802550	Function	r_fs_partition_get_size	578:0:12741:12811							
ANR	4802551	FunctionDef	r_fs_partition_get_size ()		4802550	0					
ANR	4802552	CompoundStatement		578:36:12777:12811	4802550	0					
ANR	4802553	ReturnStatement	return R_FS_PARTITIONS_LENGTH ;	579:1:12780:12809	4802550	0	True				
ANR	4802554	Identifier	R_FS_PARTITIONS_LENGTH		4802550	0					
ANR	4802555	ReturnType	R_API int		4802550	1					
ANR	4802556	Identifier	r_fs_partition_get_size		4802550	2					
ANR	4802557	ParameterList			4802550	3					
ANR	4802558	CFGEntryNode	ENTRY		4802550		True				
ANR	4802559	CFGExitNode	EXIT		4802550		True				
ANR	4802560	Symbol	R_FS_PARTITIONS_LENGTH		4802550						
ANR	4802561	Function	r_fs_partitions	582:0:12814:13812							
ANR	4802562	FunctionDef	"r_fs_partitions (RFS * fs , const char * ptype , ut64 delta)"		4802561	0					
ANR	4802563	CompoundStatement		582:69:12883:13812	4802561	0					
ANR	4802564	IdentifierDeclStatement	"int i , cur = - 1 ;"	583:1:12886:12901	4802561	0	True				
ANR	4802565	IdentifierDecl	i		4802561	0					
ANR	4802566	IdentifierDeclType	int		4802561	0					
ANR	4802567	Identifier	i		4802561	1					
ANR	4802568	IdentifierDecl	cur = - 1		4802561	1					
ANR	4802569	IdentifierDeclType	int		4802561	0					
ANR	4802570	Identifier	cur		4802561	1					
ANR	4802571	AssignmentExpression	cur = - 1		4802561	2		=			
ANR	4802572	Identifier	cur		4802561	0					
ANR	4802573	UnaryOperationExpression	- 1		4802561	1					
ANR	4802574	UnaryOperator	-		4802561	0					
ANR	4802575	PrimaryExpression	1		4802561	1					
ANR	4802576	ForStatement	for ( i = 0 ; partitions [ i ] . name ; i ++ )		4802561	1					
ANR	4802577	ForInit	i = 0 ;	584:6:12909:12914	4802561	0	True				
ANR	4802578	AssignmentExpression	i = 0		4802561	0		=			
ANR	4802579	Identifier	i		4802561	0					
ANR	4802580	PrimaryExpression	0		4802561	1					
ANR	4802581	Condition	partitions [ i ] . name	584:13:12916:12933	4802561	1	True				
ANR	4802582	MemberAccess	partitions [ i ] . name		4802561	0					
ANR	4802583	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802584	Identifier	partitions		4802561	0					
ANR	4802585	Identifier	i		4802561	1					
ANR	4802586	Identifier	name		4802561	1					
ANR	4802587	PostIncDecOperationExpression	i ++	584:33:12936:12938	4802561	2	True				
ANR	4802588	Identifier	i		4802561	0					
ANR	4802589	IncDec	++		4802561	1					
ANR	4802590	CompoundStatement		3:38:57:57	4802561	3					
ANR	4802591	IfStatement	"if ( ! strcmp ( ptype , partitions [ i ] . name ) )"		4802561	0					
ANR	4802592	Condition	"! strcmp ( ptype , partitions [ i ] . name )"	585:6:12949:12983	4802561	0	True				
ANR	4802593	UnaryOperationExpression	"! strcmp ( ptype , partitions [ i ] . name )"		4802561	0					
ANR	4802594	UnaryOperator	!		4802561	0					
ANR	4802595	CallExpression	"strcmp ( ptype , partitions [ i ] . name )"		4802561	1					
ANR	4802596	Callee	strcmp		4802561	0					
ANR	4802597	Identifier	strcmp		4802561	0					
ANR	4802598	ArgumentList	ptype		4802561	1					
ANR	4802599	Argument	ptype		4802561	0					
ANR	4802600	Identifier	ptype		4802561	0					
ANR	4802601	Argument	partitions [ i ] . name		4802561	1					
ANR	4802602	MemberAccess	partitions [ i ] . name		4802561	0					
ANR	4802603	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802604	Identifier	partitions		4802561	0					
ANR	4802605	Identifier	i		4802561	1					
ANR	4802606	Identifier	name		4802561	1					
ANR	4802607	CompoundStatement		4:43:102:102	4802561	1					
ANR	4802608	ExpressionStatement	cur = i	586:3:12991:12998	4802561	0	True				
ANR	4802609	AssignmentExpression	cur = i		4802561	0		=			
ANR	4802610	Identifier	cur		4802561	0					
ANR	4802611	Identifier	i		4802561	1					
ANR	4802612	BreakStatement	break ;	587:3:13003:13008	4802561	1	True				
ANR	4802613	IfStatement	if ( cur != - 1 )		4802561	2					
ANR	4802614	Condition	cur != - 1	590:5:13022:13030	4802561	0	True				
ANR	4802615	EqualityExpression	cur != - 1		4802561	0		!=			
ANR	4802616	Identifier	cur		4802561	0					
ANR	4802617	UnaryOperationExpression	- 1		4802561	1					
ANR	4802618	UnaryOperator	-		4802561	0					
ANR	4802619	PrimaryExpression	1		4802561	1					
ANR	4802620	CompoundStatement		12:2:229:246	4802561	1					
ANR	4802621	IdentifierDeclStatement	RList * list = r_list_newf ( ( RListFree ) r_fs_partition_free ) ;	591:2:13037:13096	4802561	0	True				
ANR	4802622	IdentifierDecl	* list = r_list_newf ( ( RListFree ) r_fs_partition_free )		4802561	0					
ANR	4802623	IdentifierDeclType	RList *		4802561	0					
ANR	4802624	Identifier	list		4802561	1					
ANR	4802625	AssignmentExpression	* list = r_list_newf ( ( RListFree ) r_fs_partition_free )		4802561	2		=			
ANR	4802626	Identifier	list		4802561	0					
ANR	4802627	CallExpression	r_list_newf ( ( RListFree ) r_fs_partition_free )		4802561	1					
ANR	4802628	Callee	r_list_newf		4802561	0					
ANR	4802629	Identifier	r_list_newf		4802561	0					
ANR	4802630	ArgumentList	( RListFree ) r_fs_partition_free		4802561	1					
ANR	4802631	Argument	( RListFree ) r_fs_partition_free		4802561	0					
ANR	4802632	CastExpression	( RListFree ) r_fs_partition_free		4802561	0					
ANR	4802633	CastTarget	RListFree		4802561	0					
ANR	4802634	Identifier	r_fs_partition_free		4802561	1					
ANR	4802635	IdentifierDeclStatement	void * disk = NULL ;	593:2:13113:13130	4802561	1	True				
ANR	4802636	IdentifierDecl	* disk = NULL		4802561	0					
ANR	4802637	IdentifierDeclType	void *		4802561	0					
ANR	4802638	Identifier	disk		4802561	1					
ANR	4802639	AssignmentExpression	* disk = NULL		4802561	2		=			
ANR	4802640	Identifier	NULL		4802561	0					
ANR	4802641	Identifier	NULL		4802561	1					
ANR	4802642	IfStatement	if ( partitions [ i ] . iterate == grub_parhook )		4802561	2					
ANR	4802643	Condition	partitions [ i ] . iterate == grub_parhook	594:6:13138:13174	4802561	0	True				
ANR	4802644	EqualityExpression	partitions [ i ] . iterate == grub_parhook		4802561	0		==			
ANR	4802645	MemberAccess	partitions [ i ] . iterate		4802561	0					
ANR	4802646	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802647	Identifier	partitions		4802561	0					
ANR	4802648	Identifier	i		4802561	1					
ANR	4802649	Identifier	iterate		4802561	1					
ANR	4802650	Identifier	grub_parhook		4802561	1					
ANR	4802651	CompoundStatement		14:3:298:348	4802561	1					
ANR	4802652	IdentifierDeclStatement	struct grub_partition_map * gpt = partitions [ i ] . ptr ;	595:3:13182:13232	4802561	0	True				
ANR	4802653	IdentifierDecl	* gpt = partitions [ i ] . ptr		4802561	0					
ANR	4802654	IdentifierDeclType	struct grub_partition_map *		4802561	0					
ANR	4802655	Identifier	gpt		4802561	1					
ANR	4802656	AssignmentExpression	* gpt = partitions [ i ] . ptr		4802561	2		=			
ANR	4802657	Identifier	gpt		4802561	0					
ANR	4802658	MemberAccess	partitions [ i ] . ptr		4802561	1					
ANR	4802659	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802660	Identifier	partitions		4802561	0					
ANR	4802661	Identifier	i		4802561	1					
ANR	4802662	Identifier	ptr		4802561	1					
ANR	4802663	ExpressionStatement	"grubfs_bind_io ( NULL , 0 )"	596:3:13237:13261	4802561	1	True				
ANR	4802664	CallExpression	"grubfs_bind_io ( NULL , 0 )"		4802561	0					
ANR	4802665	Callee	grubfs_bind_io		4802561	0					
ANR	4802666	Identifier	grubfs_bind_io		4802561	0					
ANR	4802667	ArgumentList	NULL		4802561	1					
ANR	4802668	Argument	NULL		4802561	0					
ANR	4802669	Identifier	NULL		4802561	0					
ANR	4802670	Argument	0		4802561	1					
ANR	4802671	PrimaryExpression	0		4802561	0					
ANR	4802672	ExpressionStatement	disk = ( void * ) grubfs_disk ( & fs -> iob )	597:3:13266:13303	4802561	2	True				
ANR	4802673	AssignmentExpression	disk = ( void * ) grubfs_disk ( & fs -> iob )		4802561	0		=			
ANR	4802674	Identifier	disk		4802561	0					
ANR	4802675	CastExpression	( void * ) grubfs_disk ( & fs -> iob )		4802561	1					
ANR	4802676	CastTarget	void *		4802561	0					
ANR	4802677	CallExpression	grubfs_disk ( & fs -> iob )		4802561	1					
ANR	4802678	Callee	grubfs_disk		4802561	0					
ANR	4802679	Identifier	grubfs_disk		4802561	0					
ANR	4802680	ArgumentList	& fs -> iob		4802561	1					
ANR	4802681	Argument	& fs -> iob		4802561	0					
ANR	4802682	UnaryOperationExpression	& fs -> iob		4802561	0					
ANR	4802683	UnaryOperator	&		4802561	0					
ANR	4802684	PtrMemberAccess	fs -> iob		4802561	1					
ANR	4802685	Identifier	fs		4802561	0					
ANR	4802686	Identifier	iob		4802561	1					
ANR	4802687	IfStatement	if ( gpt )		4802561	3					
ANR	4802688	Condition	gpt	598:7:13312:13314	4802561	0	True				
ANR	4802689	Identifier	gpt		4802561	0					
ANR	4802690	CompoundStatement		17:12:433:433	4802561	1					
ANR	4802691	ExpressionStatement	"gpt -> iterate ( disk , ( void * ) partitions [ i ] . iterate , list )"	599:4:13323:13384	4802561	0	True				
ANR	4802692	CallExpression	"gpt -> iterate ( disk , ( void * ) partitions [ i ] . iterate , list )"		4802561	0					
ANR	4802693	Callee	gpt -> iterate		4802561	0					
ANR	4802694	PtrMemberAccess	gpt -> iterate		4802561	0					
ANR	4802695	Identifier	gpt		4802561	0					
ANR	4802696	Identifier	iterate		4802561	1					
ANR	4802697	ArgumentList	disk		4802561	1					
ANR	4802698	Argument	disk		4802561	0					
ANR	4802699	Identifier	disk		4802561	0					
ANR	4802700	Argument	( void * ) partitions [ i ] . iterate		4802561	1					
ANR	4802701	CastExpression	( void * ) partitions [ i ] . iterate		4802561	0					
ANR	4802702	CastTarget	void *		4802561	0					
ANR	4802703	MemberAccess	partitions [ i ] . iterate		4802561	1					
ANR	4802704	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802705	Identifier	partitions		4802561	0					
ANR	4802706	Identifier	i		4802561	1					
ANR	4802707	Identifier	iterate		4802561	1					
ANR	4802708	Argument	list		4802561	2					
ANR	4802709	Identifier	list		4802561	0					
ANR	4802710	ExpressionStatement	grubfs_free ( disk )	602:3:13394:13412	4802561	4	True				
ANR	4802711	CallExpression	grubfs_free ( disk )		4802561	0					
ANR	4802712	Callee	grubfs_free		4802561	0					
ANR	4802713	Identifier	grubfs_free		4802561	0					
ANR	4802714	ArgumentList	disk		4802561	1					
ANR	4802715	Argument	disk		4802561	0					
ANR	4802716	Identifier	disk		4802561	0					
ANR	4802717	ElseStatement	else		4802561	0					
ANR	4802718	CompoundStatement		26:3:561:609	4802561	0					
ANR	4802719	IdentifierDeclStatement	RFSPartitionIterator iterate = partitions [ i ] . ptr ;	607:3:13445:13493	4802561	0	True				
ANR	4802720	IdentifierDecl	iterate = partitions [ i ] . ptr		4802561	0					
ANR	4802721	IdentifierDeclType	RFSPartitionIterator		4802561	0					
ANR	4802722	Identifier	iterate		4802561	1					
ANR	4802723	AssignmentExpression	iterate = partitions [ i ] . ptr		4802561	2		=			
ANR	4802724	Identifier	iterate		4802561	0					
ANR	4802725	MemberAccess	partitions [ i ] . ptr		4802561	1					
ANR	4802726	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802727	Identifier	partitions		4802561	0					
ANR	4802728	Identifier	i		4802561	1					
ANR	4802729	Identifier	ptr		4802561	1					
ANR	4802730	ExpressionStatement	"iterate ( fs , partitions [ i ] . iterate , list )"	608:3:13498:13539	4802561	1	True				
ANR	4802731	CallExpression	"iterate ( fs , partitions [ i ] . iterate , list )"		4802561	0					
ANR	4802732	Callee	iterate		4802561	0					
ANR	4802733	Identifier	iterate		4802561	0					
ANR	4802734	ArgumentList	fs		4802561	1					
ANR	4802735	Argument	fs		4802561	0					
ANR	4802736	Identifier	fs		4802561	0					
ANR	4802737	Argument	partitions [ i ] . iterate		4802561	1					
ANR	4802738	MemberAccess	partitions [ i ] . iterate		4802561	0					
ANR	4802739	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802740	Identifier	partitions		4802561	0					
ANR	4802741	Identifier	i		4802561	1					
ANR	4802742	Identifier	iterate		4802561	1					
ANR	4802743	Argument	list		4802561	2					
ANR	4802744	Identifier	list		4802561	0					
ANR	4802745	ReturnStatement	return list ;	610:2:13570:13581	4802561	3	True				
ANR	4802746	Identifier	list		4802561	0					
ANR	4802747	IfStatement	if ( ptype && * ptype )		4802561	3					
ANR	4802748	Condition	ptype && * ptype	612:5:13591:13605	4802561	0	True				
ANR	4802749	AndExpression	ptype && * ptype		4802561	0		&&			
ANR	4802750	Identifier	ptype		4802561	0					
ANR	4802751	UnaryOperationExpression	* ptype		4802561	1					
ANR	4802752	UnaryOperator	*		4802561	0					
ANR	4802753	Identifier	ptype		4802561	1					
ANR	4802754	CompoundStatement		31:22:724:724	4802561	1					
ANR	4802755	ExpressionStatement	"eprintf ( ""Unknown partition type '%s'.\\n"" , ptype )"	613:2:13612:13661	4802561	0	True				
ANR	4802756	CallExpression	"eprintf ( ""Unknown partition type '%s'.\\n"" , ptype )"		4802561	0					
ANR	4802757	Callee	eprintf		4802561	0					
ANR	4802758	Identifier	eprintf		4802561	0					
ANR	4802759	ArgumentList	"""Unknown partition type '%s'.\\n"""		4802561	1					
ANR	4802760	Argument	"""Unknown partition type '%s'.\\n"""		4802561	0					
ANR	4802761	PrimaryExpression	"""Unknown partition type '%s'.\\n"""		4802561	0					
ANR	4802762	Argument	ptype		4802561	1					
ANR	4802763	Identifier	ptype		4802561	0					
ANR	4802764	ExpressionStatement	"eprintf ( ""Supported types:\\n"" )"	615:1:13667:13697	4802561	4	True				
ANR	4802765	CallExpression	"eprintf ( ""Supported types:\\n"" )"		4802561	0					
ANR	4802766	Callee	eprintf		4802561	0					
ANR	4802767	Identifier	eprintf		4802561	0					
ANR	4802768	ArgumentList	"""Supported types:\\n"""		4802561	1					
ANR	4802769	Argument	"""Supported types:\\n"""		4802561	0					
ANR	4802770	PrimaryExpression	"""Supported types:\\n"""		4802561	0					
ANR	4802771	ForStatement	for ( i = 0 ; partitions [ i ] . name ; i ++ )		4802561	5					
ANR	4802772	ForInit	i = 0 ;	616:6:13705:13710	4802561	0	True				
ANR	4802773	AssignmentExpression	i = 0		4802561	0		=			
ANR	4802774	Identifier	i		4802561	0					
ANR	4802775	PrimaryExpression	0		4802561	1					
ANR	4802776	Condition	partitions [ i ] . name	616:13:13712:13729	4802561	1	True				
ANR	4802777	MemberAccess	partitions [ i ] . name		4802561	0					
ANR	4802778	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802779	Identifier	partitions		4802561	0					
ANR	4802780	Identifier	i		4802561	1					
ANR	4802781	Identifier	name		4802561	1					
ANR	4802782	PostIncDecOperationExpression	i ++	616:33:13732:13734	4802561	2	True				
ANR	4802783	Identifier	i		4802561	0					
ANR	4802784	IncDec	++		4802561	1					
ANR	4802785	CompoundStatement		35:38:853:853	4802561	3					
ANR	4802786	ExpressionStatement	"eprintf ( "" %s"" , partitions [ i ] . name )"	617:2:13741:13776	4802561	0	True				
ANR	4802787	CallExpression	"eprintf ( "" %s"" , partitions [ i ] . name )"		4802561	0					
ANR	4802788	Callee	eprintf		4802561	0					
ANR	4802789	Identifier	eprintf		4802561	0					
ANR	4802790	ArgumentList	""" %s"""		4802561	1					
ANR	4802791	Argument	""" %s"""		4802561	0					
ANR	4802792	PrimaryExpression	""" %s"""		4802561	0					
ANR	4802793	Argument	partitions [ i ] . name		4802561	1					
ANR	4802794	MemberAccess	partitions [ i ] . name		4802561	0					
ANR	4802795	ArrayIndexing	partitions [ i ]		4802561	0					
ANR	4802796	Identifier	partitions		4802561	0					
ANR	4802797	Identifier	i		4802561	1					
ANR	4802798	Identifier	name		4802561	1					
ANR	4802799	ExpressionStatement	"eprintf ( ""\\n"" )"	619:1:13782:13796	4802561	6	True				
ANR	4802800	CallExpression	"eprintf ( ""\\n"" )"		4802561	0					
ANR	4802801	Callee	eprintf		4802561	0					
ANR	4802802	Identifier	eprintf		4802561	0					
ANR	4802803	ArgumentList	"""\\n"""		4802561	1					
ANR	4802804	Argument	"""\\n"""		4802561	0					
ANR	4802805	PrimaryExpression	"""\\n"""		4802561	0					
ANR	4802806	ReturnStatement	return NULL ;	620:1:13799:13810	4802561	7	True				
ANR	4802807	Identifier	NULL		4802561	0					
ANR	4802808	ReturnType	R_API RList *		4802561	1					
ANR	4802809	Identifier	r_fs_partitions		4802561	2					
ANR	4802810	ParameterList	"RFS * fs , const char * ptype , ut64 delta"		4802561	3					
ANR	4802811	Parameter	RFS * fs	582:29:12843:12849	4802561	0	True				
ANR	4802812	ParameterType	RFS *		4802561	0					
ANR	4802813	Identifier	fs		4802561	1					
ANR	4802814	Parameter	const char * ptype	582:38:12852:12868	4802561	1	True				
ANR	4802815	ParameterType	const char *		4802561	0					
ANR	4802816	Identifier	ptype		4802561	1					
ANR	4802817	Parameter	ut64 delta	582:57:12871:12880	4802561	2	True				
ANR	4802818	ParameterType	ut64		4802561	0					
ANR	4802819	Identifier	delta		4802561	1					
ANR	4802820	CFGEntryNode	ENTRY		4802561		True				
ANR	4802821	CFGExitNode	EXIT		4802561		True				
ANR	4802822	Symbol	partitions		4802561						
ANR	4802823	Symbol	strcmp		4802561						
ANR	4802824	Symbol	partitions [ i ] . ptr		4802561						
ANR	4802825	Symbol	cur		4802561						
ANR	4802826	Symbol	NULL		4802561						
ANR	4802827	Symbol	grubfs_disk		4802561						
ANR	4802828	Symbol	partitions [ i ] . name		4802561						
ANR	4802829	Symbol	r_list_newf		4802561						
ANR	4802830	Symbol	partitions [ i ] . iterate		4802561						
ANR	4802831	Symbol	grub_parhook		4802561						
ANR	4802832	Symbol	delta		4802561						
ANR	4802833	Symbol	i		4802561						
ANR	4802834	Symbol	ptype		4802561						
ANR	4802835	Symbol	gpt		4802561						
ANR	4802836	Symbol	list		4802561						
ANR	4802837	Symbol	fs		4802561						
ANR	4802838	Symbol	& fs -> iob		4802561						
ANR	4802839	Symbol	disk		4802561						
ANR	4802840	Symbol	* i		4802561						
ANR	4802841	Symbol	* ptype		4802561						
ANR	4802842	Symbol	r_fs_partition_free		4802561						
ANR	4802843	Symbol	* partitions		4802561						
ANR	4802844	Symbol	iterate		4802561						
ANR	4802845	Function	r_fs_partition_type_str	623:0:13815:13900							
ANR	4802846	FunctionDef	r_fs_partition_type_str (const char * type)		4802845	0					
ANR	4802847	CompoundStatement		623:52:13867:13900	4802845	0					
ANR	4802848	ReturnStatement	return 0 ;	625:1:13890:13898	4802845	0	True				
ANR	4802849	PrimaryExpression	0		4802845	0					
ANR	4802850	ReturnType	R_API int		4802845	1					
ANR	4802851	Identifier	r_fs_partition_type_str		4802845	2					
ANR	4802852	ParameterList	const char * type		4802845	3					
ANR	4802853	Parameter	const char * type	623:34:13849:13864	4802845	0	True				
ANR	4802854	ParameterType	const char *		4802845	0					
ANR	4802855	Identifier	type		4802845	1					
ANR	4802856	CFGEntryNode	ENTRY		4802845		True				
ANR	4802857	CFGExitNode	EXIT		4802845		True				
ANR	4802858	Symbol	type		4802845						
ANR	4802859	Function	r_fs_partition_type	628:6:13909:15084							
ANR	4802860	FunctionDef	"r_fs_partition_type (const char * part , int type)"		4802859	0					
ANR	4802861	CompoundStatement		628:66:13969:15084	4802859	0					
ANR	4802862	SwitchStatement	switch ( type )		4802859	0					
ANR	4802863	Condition	type	630:9:14009:14012	4802859	0	True				
ANR	4802864	Identifier	type		4802859	0					
ANR	4802865	CompoundStatement		3:15:45:45	4802859	1					
ANR	4802866	Label	case GRUB_PC_PARTITION_TYPE_FAT12 :	631:1:14018:14051	4802859	0	True				
ANR	4802867	Identifier	GRUB_PC_PARTITION_TYPE_FAT12		4802859	0					
ANR	4802868	Label	case GRUB_PC_PARTITION_TYPE_FAT16_GT32M :	632:1:14054:14093	4802859	1	True				
ANR	4802869	Identifier	GRUB_PC_PARTITION_TYPE_FAT16_GT32M		4802859	0					
ANR	4802870	Label	case GRUB_PC_PARTITION_TYPE_FAT16_LT32M :	633:1:14096:14135	4802859	2	True				
ANR	4802871	Identifier	GRUB_PC_PARTITION_TYPE_FAT16_LT32M		4802859	0					
ANR	4802872	Label	case GRUB_PC_PARTITION_TYPE_FAT32 :	634:1:14138:14171	4802859	3	True				
ANR	4802873	Identifier	GRUB_PC_PARTITION_TYPE_FAT32		4802859	0					
ANR	4802874	Label	case GRUB_PC_PARTITION_TYPE_FAT32_LBA :	635:1:14174:14211	4802859	4	True				
ANR	4802875	Identifier	GRUB_PC_PARTITION_TYPE_FAT32_LBA		4802859	0					
ANR	4802876	Label	case GRUB_PC_PARTITION_TYPE_FAT16_LBA :	636:1:14214:14251	4802859	5	True				
ANR	4802877	Identifier	GRUB_PC_PARTITION_TYPE_FAT16_LBA		4802859	0					
ANR	4802878	ReturnStatement	"return strdup ( ""fat"" ) ;"	637:2:14255:14276	4802859	6	True				
ANR	4802879	CallExpression	"strdup ( ""fat"" )"		4802859	0					
ANR	4802880	Callee	strdup		4802859	0					
ANR	4802881	Identifier	strdup		4802859	0					
ANR	4802882	ArgumentList	"""fat"""		4802859	1					
ANR	4802883	Argument	"""fat"""		4802859	0					
ANR	4802884	PrimaryExpression	"""fat"""		4802859	0					
ANR	4802885	Label	case GRUB_PC_PARTITION_TYPE_EXT2FS :	639:1:14280:14314	4802859	7	True				
ANR	4802886	Identifier	GRUB_PC_PARTITION_TYPE_EXT2FS		4802859	0					
ANR	4802887	ReturnStatement	"return strdup ( ""ext2"" ) ;"	640:2:14318:14340	4802859	8	True				
ANR	4802888	CallExpression	"strdup ( ""ext2"" )"		4802859	0					
ANR	4802889	Callee	strdup		4802859	0					
ANR	4802890	Identifier	strdup		4802859	0					
ANR	4802891	ArgumentList	"""ext2"""		4802859	1					
ANR	4802892	Argument	"""ext2"""		4802859	0					
ANR	4802893	PrimaryExpression	"""ext2"""		4802859	0					
ANR	4802894	Label	case GRUB_PC_PARTITION_TYPE_MINIX :	642:1:14344:14377	4802859	9	True				
ANR	4802895	Identifier	GRUB_PC_PARTITION_TYPE_MINIX		4802859	0					
ANR	4802896	Label	case GRUB_PC_PARTITION_TYPE_LINUX_MINIX :	643:1:14380:14419	4802859	10	True				
ANR	4802897	Identifier	GRUB_PC_PARTITION_TYPE_LINUX_MINIX		4802859	0					
ANR	4802898	ReturnStatement	"return strdup ( ""minix"" ) ;"	644:2:14423:14446	4802859	11	True				
ANR	4802899	CallExpression	"strdup ( ""minix"" )"		4802859	0					
ANR	4802900	Callee	strdup		4802859	0					
ANR	4802901	Identifier	strdup		4802859	0					
ANR	4802902	ArgumentList	"""minix"""		4802859	1					
ANR	4802903	Argument	"""minix"""		4802859	0					
ANR	4802904	PrimaryExpression	"""minix"""		4802859	0					
ANR	4802905	Label	case GRUB_PC_PARTITION_TYPE_NTFS :	646:1:14450:14482	4802859	12	True				
ANR	4802906	Identifier	GRUB_PC_PARTITION_TYPE_NTFS		4802859	0					
ANR	4802907	ReturnStatement	"return strdup ( ""ntfs"" ) ;"	647:2:14486:14508	4802859	13	True				
ANR	4802908	CallExpression	"strdup ( ""ntfs"" )"		4802859	0					
ANR	4802909	Callee	strdup		4802859	0					
ANR	4802910	Identifier	strdup		4802859	0					
ANR	4802911	ArgumentList	"""ntfs"""		4802859	1					
ANR	4802912	Argument	"""ntfs"""		4802859	0					
ANR	4802913	PrimaryExpression	"""ntfs"""		4802859	0					
ANR	4802914	Label	case GRUB_PC_PARTITION_TYPE_EXTENDED :	649:1:14512:14548	4802859	14	True				
ANR	4802915	Identifier	GRUB_PC_PARTITION_TYPE_EXTENDED		4802859	0					
ANR	4802916	Label	case GRUB_PC_PARTITION_TYPE_LINUX_EXTENDED :	650:1:14551:14593	4802859	15	True				
ANR	4802917	Identifier	GRUB_PC_PARTITION_TYPE_LINUX_EXTENDED		4802859	0					
ANR	4802918	ReturnStatement	"return strdup ( ""ext3"" ) ;"	651:2:14597:14619	4802859	16	True				
ANR	4802919	CallExpression	"strdup ( ""ext3"" )"		4802859	0					
ANR	4802920	Callee	strdup		4802859	0					
ANR	4802921	Identifier	strdup		4802859	0					
ANR	4802922	ArgumentList	"""ext3"""		4802859	1					
ANR	4802923	Argument	"""ext3"""		4802859	0					
ANR	4802924	PrimaryExpression	"""ext3"""		4802859	0					
ANR	4802925	Label	case GRUB_PC_PARTITION_TYPE_HFS :	653:1:14623:14654	4802859	17	True				
ANR	4802926	Identifier	GRUB_PC_PARTITION_TYPE_HFS		4802859	0					
ANR	4802927	ReturnStatement	"return strdup ( ""hfs"" ) ;"	654:2:14658:14679	4802859	18	True				
ANR	4802928	CallExpression	"strdup ( ""hfs"" )"		4802859	0					
ANR	4802929	Callee	strdup		4802859	0					
ANR	4802930	Identifier	strdup		4802859	0					
ANR	4802931	ArgumentList	"""hfs"""		4802859	1					
ANR	4802932	Argument	"""hfs"""		4802859	0					
ANR	4802933	PrimaryExpression	"""hfs"""		4802859	0					
ANR	4802934	Label	case GRUB_PC_PARTITION_TYPE_WIN95_EXTENDED :	656:1:14683:14725	4802859	19	True				
ANR	4802935	Identifier	GRUB_PC_PARTITION_TYPE_WIN95_EXTENDED		4802859	0					
ANR	4802936	Label	case GRUB_PC_PARTITION_TYPE_EZD :	657:1:14736:14767	4802859	20	True				
ANR	4802937	Identifier	GRUB_PC_PARTITION_TYPE_EZD		4802859	0					
ANR	4802938	Label	case GRUB_PC_PARTITION_TYPE_VSTAFS :	658:1:14770:14804	4802859	21	True				
ANR	4802939	Identifier	GRUB_PC_PARTITION_TYPE_VSTAFS		4802859	0					
ANR	4802940	Label	case GRUB_PC_PARTITION_TYPE_FREEBSD :	659:1:14807:14842	4802859	22	True				
ANR	4802941	Identifier	GRUB_PC_PARTITION_TYPE_FREEBSD		4802859	0					
ANR	4802942	Label	case GRUB_PC_PARTITION_TYPE_OPENBSD :	660:1:14852:14887	4802859	23	True				
ANR	4802943	Identifier	GRUB_PC_PARTITION_TYPE_OPENBSD		4802859	0					
ANR	4802944	Label	case GRUB_PC_PARTITION_TYPE_NETBSD :	661:1:14897:14931	4802859	24	True				
ANR	4802945	Identifier	GRUB_PC_PARTITION_TYPE_NETBSD		4802859	0					
ANR	4802946	Label	case GRUB_PC_PARTITION_TYPE_GPT_DISK :	662:1:14942:14978	4802859	25	True				
ANR	4802947	Identifier	GRUB_PC_PARTITION_TYPE_GPT_DISK		4802859	0					
ANR	4802948	Label	case GRUB_PC_PARTITION_TYPE_LINUX_RAID :	663:1:14981:15019	4802859	26	True				
ANR	4802949	Identifier	GRUB_PC_PARTITION_TYPE_LINUX_RAID		4802859	0					
ANR	4802950	Label	case GRUB_PC_PARTITION_TYPE_NONE :	664:1:15022:15054	4802859	27	True				
ANR	4802951	Identifier	GRUB_PC_PARTITION_TYPE_NONE		4802859	0					
ANR	4802952	Label	default :	665:1:15057:15064	4802859	28	True				
ANR	4802953	Identifier	default		4802859	0					
ANR	4802954	ReturnStatement	return NULL ;	666:2:15068:15079	4802859	29	True				
ANR	4802955	Identifier	NULL		4802859	0					
ANR	4802956	ReturnType	const char *		4802859	1					
ANR	4802957	Identifier	r_fs_partition_type		4802859	2					
ANR	4802958	ParameterList	"const char * part , int type"		4802859	3					
ANR	4802959	Parameter	const char * part	628:38:13941:13956	4802859	0	True				
ANR	4802960	ParameterType	const char *		4802859	0					
ANR	4802961	Identifier	part		4802859	1					
ANR	4802962	Parameter	int type	628:56:13959:13966	4802859	1	True				
ANR	4802963	ParameterType	int		4802859	0					
ANR	4802964	Identifier	type		4802859	1					
ANR	4802965	CFGEntryNode	ENTRY		4802859		True				
ANR	4802966	CFGExitNode	EXIT		4802859		True				
ANR	4802967	Symbol	NULL		4802859						
ANR	4802968	Symbol	part		4802859						
ANR	4802969	Symbol	strdup		4802859						
ANR	4802970	Symbol	type		4802859						
ANR	4802971	Function	r_fs_name	670:0:15087:15743							
ANR	4802972	FunctionDef	"r_fs_name (RFS * fs , ut64 offset)"		4802971	0					
ANR	4802973	CompoundStatement		670:44:15131:15743	4802971	0					
ANR	4802974	IdentifierDeclStatement	ut8 buf [ 1024 ] ;	671:1:15134:15147	4802971	0	True				
ANR	4802975	IdentifierDecl	buf [ 1024 ]		4802971	0					
ANR	4802976	IdentifierDeclType	ut8 [ 1024 ]		4802971	0					
ANR	4802977	Identifier	buf		4802971	1					
ANR	4802978	PrimaryExpression	1024		4802971	2					
ANR	4802979	IdentifierDeclStatement	"int i , j , len , ret = false ;"	672:1:15150:15176	4802971	1	True				
ANR	4802980	IdentifierDecl	i		4802971	0					
ANR	4802981	IdentifierDeclType	int		4802971	0					
ANR	4802982	Identifier	i		4802971	1					
ANR	4802983	IdentifierDecl	j		4802971	1					
ANR	4802984	IdentifierDeclType	int		4802971	0					
ANR	4802985	Identifier	j		4802971	1					
ANR	4802986	IdentifierDecl	len		4802971	2					
ANR	4802987	IdentifierDeclType	int		4802971	0					
ANR	4802988	Identifier	len		4802971	1					
ANR	4802989	IdentifierDecl	ret = false		4802971	3					
ANR	4802990	IdentifierDeclType	int		4802971	0					
ANR	4802991	Identifier	ret		4802971	1					
ANR	4802992	AssignmentExpression	ret = false		4802971	2		=			
ANR	4802993	Identifier	false		4802971	0					
ANR	4802994	Identifier	false		4802971	1					
ANR	4802995	ForStatement	for ( i = 0 ; fstypes [ i ] . name ; i ++ )		4802971	2					
ANR	4802996	ForInit	i = 0 ;	674:6:15185:15190	4802971	0	True				
ANR	4802997	AssignmentExpression	i = 0		4802971	0		=			
ANR	4802998	Identifier	i		4802971	0					
ANR	4802999	PrimaryExpression	0		4802971	1					
ANR	4803000	Condition	fstypes [ i ] . name	674:13:15192:15206	4802971	1	True				
ANR	4803001	MemberAccess	fstypes [ i ] . name		4802971	0					
ANR	4803002	ArrayIndexing	fstypes [ i ]		4802971	0					
ANR	4803003	Identifier	fstypes		4802971	0					
ANR	4803004	Identifier	i		4802971	1					
ANR	4803005	Identifier	name		4802971	1					
ANR	4803006	PostIncDecOperationExpression	i ++	674:30:15209:15211	4802971	2	True				
ANR	4803007	Identifier	i		4802971	0					
ANR	4803008	IncDec	++		4802971	1					
ANR	4803009	CompoundStatement		6:2:86:110	4802971	3					
ANR	4803010	IdentifierDeclStatement	RFSType * f = & fstypes [ i ] ;	675:2:15218:15242	4802971	0	True				
ANR	4803011	IdentifierDecl	* f = & fstypes [ i ]		4802971	0					
ANR	4803012	IdentifierDeclType	RFSType *		4802971	0					
ANR	4803013	Identifier	f		4802971	1					
ANR	4803014	AssignmentExpression	* f = & fstypes [ i ]		4802971	2		=			
ANR	4803015	Identifier	f		4802971	0					
ANR	4803016	UnaryOperationExpression	& fstypes [ i ]		4802971	1					
ANR	4803017	UnaryOperator	&		4802971	0					
ANR	4803018	ArrayIndexing	fstypes [ i ]		4802971	1					
ANR	4803019	Identifier	fstypes		4802971	0					
ANR	4803020	Identifier	i		4802971	1					
ANR	4803021	ExpressionStatement	"len = R_MIN ( f -> buflen , sizeof ( buf ) - 1 )"	676:2:15246:15287	4802971	1	True				
ANR	4803022	AssignmentExpression	"len = R_MIN ( f -> buflen , sizeof ( buf ) - 1 )"		4802971	0		=			
ANR	4803023	Identifier	len		4802971	0					
ANR	4803024	CallExpression	"R_MIN ( f -> buflen , sizeof ( buf ) - 1 )"		4802971	1					
ANR	4803025	Callee	R_MIN		4802971	0					
ANR	4803026	Identifier	R_MIN		4802971	0					
ANR	4803027	ArgumentList	f -> buflen		4802971	1					
ANR	4803028	Argument	f -> buflen		4802971	0					
ANR	4803029	PtrMemberAccess	f -> buflen		4802971	0					
ANR	4803030	Identifier	f		4802971	0					
ANR	4803031	Identifier	buflen		4802971	1					
ANR	4803032	Argument	sizeof ( buf ) - 1		4802971	1					
ANR	4803033	AdditiveExpression	sizeof ( buf ) - 1		4802971	0		-			
ANR	4803034	SizeofExpression	sizeof ( buf )		4802971	0					
ANR	4803035	Sizeof	sizeof		4802971	0					
ANR	4803036	SizeofOperand	buf		4802971	1					
ANR	4803037	PrimaryExpression	1		4802971	1					
ANR	4803038	ExpressionStatement	"fs -> iob . read_at ( fs -> iob . io , offset + f -> bufoff , buf , len )"	677:2:15291:15349	4802971	2	True				
ANR	4803039	CallExpression	"fs -> iob . read_at ( fs -> iob . io , offset + f -> bufoff , buf , len )"		4802971	0					
ANR	4803040	Callee	fs -> iob . read_at		4802971	0					
ANR	4803041	MemberAccess	fs -> iob . read_at		4802971	0					
ANR	4803042	PtrMemberAccess	fs -> iob		4802971	0					
ANR	4803043	Identifier	fs		4802971	0					
ANR	4803044	Identifier	iob		4802971	1					
ANR	4803045	Identifier	read_at		4802971	1					
ANR	4803046	ArgumentList	fs -> iob . io		4802971	1					
ANR	4803047	Argument	fs -> iob . io		4802971	0					
ANR	4803048	MemberAccess	fs -> iob . io		4802971	0					
ANR	4803049	PtrMemberAccess	fs -> iob		4802971	0					
ANR	4803050	Identifier	fs		4802971	0					
ANR	4803051	Identifier	iob		4802971	1					
ANR	4803052	Identifier	io		4802971	1					
ANR	4803053	Argument	offset + f -> bufoff		4802971	1					
ANR	4803054	AdditiveExpression	offset + f -> bufoff		4802971	0		+			
ANR	4803055	Identifier	offset		4802971	0					
ANR	4803056	PtrMemberAccess	f -> bufoff		4802971	1					
ANR	4803057	Identifier	f		4802971	0					
ANR	4803058	Identifier	bufoff		4802971	1					
ANR	4803059	Argument	buf		4802971	2					
ANR	4803060	Identifier	buf		4802971	0					
ANR	4803061	Argument	len		4802971	3					
ANR	4803062	Identifier	len		4802971	0					
ANR	4803063	IfStatement	"if ( f -> buflen > 0 && ! memcmp ( buf , f -> buf , f -> buflen ) )"		4802971	3					
ANR	4803064	Condition	"f -> buflen > 0 && ! memcmp ( buf , f -> buf , f -> buflen )"	678:6:15357:15405	4802971	0	True				
ANR	4803065	AndExpression	"f -> buflen > 0 && ! memcmp ( buf , f -> buf , f -> buflen )"		4802971	0		&&			
ANR	4803066	RelationalExpression	f -> buflen > 0		4802971	0		>			
ANR	4803067	PtrMemberAccess	f -> buflen		4802971	0					
ANR	4803068	Identifier	f		4802971	0					
ANR	4803069	Identifier	buflen		4802971	1					
ANR	4803070	PrimaryExpression	0		4802971	1					
ANR	4803071	UnaryOperationExpression	"! memcmp ( buf , f -> buf , f -> buflen )"		4802971	1					
ANR	4803072	UnaryOperator	!		4802971	0					
ANR	4803073	CallExpression	"memcmp ( buf , f -> buf , f -> buflen )"		4802971	1					
ANR	4803074	Callee	memcmp		4802971	0					
ANR	4803075	Identifier	memcmp		4802971	0					
ANR	4803076	ArgumentList	buf		4802971	1					
ANR	4803077	Argument	buf		4802971	0					
ANR	4803078	Identifier	buf		4802971	0					
ANR	4803079	Argument	f -> buf		4802971	1					
ANR	4803080	PtrMemberAccess	f -> buf		4802971	0					
ANR	4803081	Identifier	f		4802971	0					
ANR	4803082	Identifier	buf		4802971	1					
ANR	4803083	Argument	f -> buflen		4802971	2					
ANR	4803084	PtrMemberAccess	f -> buflen		4802971	0					
ANR	4803085	Identifier	f		4802971	0					
ANR	4803086	Identifier	buflen		4802971	1					
ANR	4803087	CompoundStatement		9:57:276:276	4802971	1					
ANR	4803088	ExpressionStatement	ret = true	679:3:15413:15423	4802971	0	True				
ANR	4803089	AssignmentExpression	ret = true		4802971	0		=			
ANR	4803090	Identifier	ret		4802971	0					
ANR	4803091	Identifier	true		4802971	1					
ANR	4803092	ExpressionStatement	"len = R_MIN ( f -> bytelen , sizeof ( buf ) )"	680:3:15428:15466	4802971	1	True				
ANR	4803093	AssignmentExpression	"len = R_MIN ( f -> bytelen , sizeof ( buf ) )"		4802971	0		=			
ANR	4803094	Identifier	len		4802971	0					
ANR	4803095	CallExpression	"R_MIN ( f -> bytelen , sizeof ( buf ) )"		4802971	1					
ANR	4803096	Callee	R_MIN		4802971	0					
ANR	4803097	Identifier	R_MIN		4802971	0					
ANR	4803098	ArgumentList	f -> bytelen		4802971	1					
ANR	4803099	Argument	f -> bytelen		4802971	0					
ANR	4803100	PtrMemberAccess	f -> bytelen		4802971	0					
ANR	4803101	Identifier	f		4802971	0					
ANR	4803102	Identifier	bytelen		4802971	1					
ANR	4803103	Argument	sizeof ( buf )		4802971	1					
ANR	4803104	SizeofExpression	sizeof ( buf )		4802971	0					
ANR	4803105	Sizeof	sizeof		4802971	0					
ANR	4803106	SizeofOperand	buf		4802971	1					
ANR	4803107	ExpressionStatement	"fs -> iob . read_at ( fs -> iob . io , offset + f -> byteoff , buf , len )"	681:3:15471:15530	4802971	2	True				
ANR	4803108	CallExpression	"fs -> iob . read_at ( fs -> iob . io , offset + f -> byteoff , buf , len )"		4802971	0					
ANR	4803109	Callee	fs -> iob . read_at		4802971	0					
ANR	4803110	MemberAccess	fs -> iob . read_at		4802971	0					
ANR	4803111	PtrMemberAccess	fs -> iob		4802971	0					
ANR	4803112	Identifier	fs		4802971	0					
ANR	4803113	Identifier	iob		4802971	1					
ANR	4803114	Identifier	read_at		4802971	1					
ANR	4803115	ArgumentList	fs -> iob . io		4802971	1					
ANR	4803116	Argument	fs -> iob . io		4802971	0					
ANR	4803117	MemberAccess	fs -> iob . io		4802971	0					
ANR	4803118	PtrMemberAccess	fs -> iob		4802971	0					
ANR	4803119	Identifier	fs		4802971	0					
ANR	4803120	Identifier	iob		4802971	1					
ANR	4803121	Identifier	io		4802971	1					
ANR	4803122	Argument	offset + f -> byteoff		4802971	1					
ANR	4803123	AdditiveExpression	offset + f -> byteoff		4802971	0		+			
ANR	4803124	Identifier	offset		4802971	0					
ANR	4803125	PtrMemberAccess	f -> byteoff		4802971	1					
ANR	4803126	Identifier	f		4802971	0					
ANR	4803127	Identifier	byteoff		4802971	1					
ANR	4803128	Argument	buf		4802971	2					
ANR	4803129	Identifier	buf		4802971	0					
ANR	4803130	Argument	len		4802971	3					
ANR	4803131	Identifier	len		4802971	0					
ANR	4803132	ForStatement	for ( j = 0 ; j < len ; j ++ )		4802971	3					
ANR	4803133	ForInit	j = 0 ;	683:8:15581:15586	4802971	0	True				
ANR	4803134	AssignmentExpression	j = 0		4802971	0		=			
ANR	4803135	Identifier	j		4802971	0					
ANR	4803136	PrimaryExpression	0		4802971	1					
ANR	4803137	Condition	j < len	683:15:15588:15594	4802971	1	True				
ANR	4803138	RelationalExpression	j < len		4802971	0		<			
ANR	4803139	Identifier	j		4802971	0					
ANR	4803140	Identifier	len		4802971	1					
ANR	4803141	PostIncDecOperationExpression	j ++	683:24:15597:15599	4802971	2	True				
ANR	4803142	Identifier	j		4802971	0					
ANR	4803143	IncDec	++		4802971	1					
ANR	4803144	CompoundStatement		14:29:470:470	4802971	3					
ANR	4803145	IfStatement	if ( buf [ j ] != f -> byte )		4802971	0					
ANR	4803146	Condition	buf [ j ] != f -> byte	684:8:15612:15628	4802971	0	True				
ANR	4803147	EqualityExpression	buf [ j ] != f -> byte		4802971	0		!=			
ANR	4803148	ArrayIndexing	buf [ j ]		4802971	0					
ANR	4803149	Identifier	buf		4802971	0					
ANR	4803150	Identifier	j		4802971	1					
ANR	4803151	PtrMemberAccess	f -> byte		4802971	1					
ANR	4803152	Identifier	f		4802971	0					
ANR	4803153	Identifier	byte		4802971	1					
ANR	4803154	CompoundStatement		15:27:499:499	4802971	1					
ANR	4803155	ExpressionStatement	ret = false	685:5:15638:15649	4802971	0	True				
ANR	4803156	AssignmentExpression	ret = false		4802971	0		=			
ANR	4803157	Identifier	ret		4802971	0					
ANR	4803158	Identifier	false		4802971	1					
ANR	4803159	BreakStatement	break ;	686:5:15656:15661	4802971	1	True				
ANR	4803160	IfStatement	if ( ret )		4802971	4					
ANR	4803161	Condition	ret	689:7:15681:15683	4802971	0	True				
ANR	4803162	Identifier	ret		4802971	0					
ANR	4803163	CompoundStatement		20:12:554:554	4802971	1					
ANR	4803164	ReturnStatement	return strdup ( f -> name ) ;	690:4:15692:15715	4802971	0	True				
ANR	4803165	CallExpression	strdup ( f -> name )		4802971	0					
ANR	4803166	Callee	strdup		4802971	0					
ANR	4803167	Identifier	strdup		4802971	0					
ANR	4803168	ArgumentList	f -> name		4802971	1					
ANR	4803169	Argument	f -> name		4802971	0					
ANR	4803170	PtrMemberAccess	f -> name		4802971	0					
ANR	4803171	Identifier	f		4802971	0					
ANR	4803172	Identifier	name		4802971	1					
ANR	4803173	ReturnStatement	return NULL ;	694:1:15730:15741	4802971	3	True				
ANR	4803174	Identifier	NULL		4802971	0					
ANR	4803175	ReturnType	R_API char *		4802971	1					
ANR	4803176	Identifier	r_fs_name		4802971	2					
ANR	4803177	ParameterList	"RFS * fs , ut64 offset"		4802971	3					
ANR	4803178	Parameter	RFS * fs	670:22:15109:15115	4802971	0	True				
ANR	4803179	ParameterType	RFS *		4802971	0					
ANR	4803180	Identifier	fs		4802971	1					
ANR	4803181	Parameter	ut64 offset	670:31:15118:15128	4802971	1	True				
ANR	4803182	ParameterType	ut64		4802971	0					
ANR	4803183	Identifier	offset		4802971	1					
ANR	4803184	CFGEntryNode	ENTRY		4802971		True				
ANR	4803185	CFGExitNode	EXIT		4802971		True				
ANR	4803186	Symbol	fs -> iob . io		4802971						
ANR	4803187	Symbol	f -> name		4802971						
ANR	4803188	Symbol	fs		4802971						
ANR	4803189	Symbol	* fs		4802971						
ANR	4803190	Symbol	memcmp		4802971						
ANR	4803191	Symbol	len		4802971						
ANR	4803192	Symbol	f -> buflen		4802971						
ANR	4803193	Symbol	fstypes		4802971						
ANR	4803194	Symbol	f -> byteoff		4802971						
ANR	4803195	Symbol	ret		4802971						
ANR	4803196	Symbol	* fstypes		4802971						
ANR	4803197	Symbol	* buf		4802971						
ANR	4803198	Symbol	NULL		4802971						
ANR	4803199	Symbol	offset		4802971						
ANR	4803200	Symbol	f		4802971						
ANR	4803201	Symbol	false		4802971						
ANR	4803202	Symbol	i		4802971						
ANR	4803203	Symbol	j		4802971						
ANR	4803204	Symbol	R_MIN		4802971						
ANR	4803205	Symbol	* f		4802971						
ANR	4803206	Symbol	fstypes [ i ] . name		4802971						
ANR	4803207	Symbol	f -> bufoff		4802971						
ANR	4803208	Symbol	buf		4802971						
ANR	4803209	Symbol	* i		4802971						
ANR	4803210	Symbol	* j		4802971						
ANR	4803211	Symbol	fs -> iob		4802971						
ANR	4803212	Symbol	f -> bytelen		4802971						
ANR	4803213	Symbol	true		4802971						
ANR	4803214	Symbol	strdup		4802971						
ANR	4803215	Symbol	f -> buf		4802971						
ANR	4803216	Symbol	f -> byte		4802971						
ANR	4803217	Function	r_fs_view	697:0:15746:15806							
ANR	4803218	FunctionDef	"r_fs_view (RFS * fs , int view)"		4803217	0					
ANR	4803219	CompoundStatement		697:40:15786:15806	4803217	0					
ANR	4803220	ExpressionStatement	fs -> view = view	698:1:15789:15804	4803217	0	True				
ANR	4803221	AssignmentExpression	fs -> view = view		4803217	0		=			
ANR	4803222	PtrMemberAccess	fs -> view		4803217	0					
ANR	4803223	Identifier	fs		4803217	0					
ANR	4803224	Identifier	view		4803217	1					
ANR	4803225	Identifier	view		4803217	1					
ANR	4803226	ReturnType	R_API void		4803217	1					
ANR	4803227	Identifier	r_fs_view		4803217	2					
ANR	4803228	ParameterList	"RFS * fs , int view"		4803217	3					
ANR	4803229	Parameter	RFS * fs	697:21:15767:15773	4803217	0	True				
ANR	4803230	ParameterType	RFS *		4803217	0					
ANR	4803231	Identifier	fs		4803217	1					
ANR	4803232	Parameter	int view	697:30:15776:15783	4803217	1	True				
ANR	4803233	ParameterType	int		4803217	0					
ANR	4803234	Identifier	view		4803217	1					
ANR	4803235	CFGEntryNode	ENTRY		4803217		True				
ANR	4803236	CFGExitNode	EXIT		4803217		True				
ANR	4803237	Symbol	* fs		4803217						
ANR	4803238	Symbol	view		4803217						
ANR	4803239	Symbol	fs -> view		4803217						
ANR	4803240	Symbol	fs		4803217						
ANR	4803241	Function	r_fs_check	701:0:15809:16145							
ANR	4803242	FunctionDef	"r_fs_check (RFS * fs , const char * p)"		4803241	0					
ANR	4803243	CompoundStatement		701:46:15855:16145	4803241	0					
ANR	4803244	IdentifierDeclStatement	RFSRoot * root ;	702:1:15858:15871	4803241	0	True				
ANR	4803245	IdentifierDecl	* root		4803241	0					
ANR	4803246	IdentifierDeclType	RFSRoot *		4803241	0					
ANR	4803247	Identifier	root		4803241	1					
ANR	4803248	IdentifierDeclStatement	RListIter * iter ;	703:1:15874:15889	4803241	1	True				
ANR	4803249	IdentifierDecl	* iter		4803241	0					
ANR	4803250	IdentifierDeclType	RListIter *		4803241	0					
ANR	4803251	Identifier	iter		4803241	1					
ANR	4803252	IdentifierDeclStatement	char * path = strdup ( p ) ;	704:1:15892:15915	4803241	2	True				
ANR	4803253	IdentifierDecl	* path = strdup ( p )		4803241	0					
ANR	4803254	IdentifierDeclType	char *		4803241	0					
ANR	4803255	Identifier	path		4803241	1					
ANR	4803256	AssignmentExpression	* path = strdup ( p )		4803241	2		=			
ANR	4803257	Identifier	path		4803241	0					
ANR	4803258	CallExpression	strdup ( p )		4803241	1					
ANR	4803259	Callee	strdup		4803241	0					
ANR	4803260	Identifier	strdup		4803241	0					
ANR	4803261	ArgumentList	p		4803241	1					
ANR	4803262	Argument	p		4803241	0					
ANR	4803263	Identifier	p		4803241	0					
ANR	4803264	IfStatement	if ( ! path )		4803241	3					
ANR	4803265	Condition	! path	705:5:15922:15926	4803241	0	True				
ANR	4803266	UnaryOperationExpression	! path		4803241	0					
ANR	4803267	UnaryOperator	!		4803241	0					
ANR	4803268	Identifier	path		4803241	1					
ANR	4803269	CompoundStatement		5:12:73:73	4803241	1					
ANR	4803270	ReturnStatement	return false ;	706:2:15933:15945	4803241	0	True				
ANR	4803271	Identifier	false		4803241	0					
ANR	4803272	ExpressionStatement	r_str_trim_path ( path )	708:1:15951:15973	4803241	4	True				
ANR	4803273	CallExpression	r_str_trim_path ( path )		4803241	0					
ANR	4803274	Callee	r_str_trim_path		4803241	0					
ANR	4803275	Identifier	r_str_trim_path		4803241	0					
ANR	4803276	ArgumentList	path		4803241	1					
ANR	4803277	Argument	path		4803241	0					
ANR	4803278	Identifier	path		4803241	0					
ANR	4803279	Statement	r_list_foreach	709:1:15976:15989	4803241	5	True				
ANR	4803280	Statement	(	709:16:15991:15991	4803241	6	True				
ANR	4803281	Statement	fs	709:17:15992:15993	4803241	7	True				
ANR	4803282	Statement	->	709:19:15994:15995	4803241	8	True				
ANR	4803283	Statement	roots	709:21:15996:16000	4803241	9	True				
ANR	4803284	Statement	","	709:26:16001:16001	4803241	10	True				
ANR	4803285	Statement	iter	709:28:16003:16006	4803241	11	True				
ANR	4803286	Statement	","	709:32:16007:16007	4803241	12	True				
ANR	4803287	Statement	root	709:34:16009:16012	4803241	13	True				
ANR	4803288	Statement	)	709:38:16013:16013	4803241	14	True				
ANR	4803289	CompoundStatement		9:40:159:159	4803241	15					
ANR	4803290	IfStatement	"if ( r_fs_match ( path , root -> path , strlen ( root -> path ) ) )"		4803241	0					
ANR	4803291	Condition	"r_fs_match ( path , root -> path , strlen ( root -> path ) )"	710:6:16023:16072	4803241	0	True				
ANR	4803292	CallExpression	"r_fs_match ( path , root -> path , strlen ( root -> path ) )"		4803241	0					
ANR	4803293	Callee	r_fs_match		4803241	0					
ANR	4803294	Identifier	r_fs_match		4803241	0					
ANR	4803295	ArgumentList	path		4803241	1					
ANR	4803296	Argument	path		4803241	0					
ANR	4803297	Identifier	path		4803241	0					
ANR	4803298	Argument	root -> path		4803241	1					
ANR	4803299	PtrMemberAccess	root -> path		4803241	0					
ANR	4803300	Identifier	root		4803241	0					
ANR	4803301	Identifier	path		4803241	1					
ANR	4803302	Argument	strlen ( root -> path )		4803241	2					
ANR	4803303	CallExpression	strlen ( root -> path )		4803241	0					
ANR	4803304	Callee	strlen		4803241	0					
ANR	4803305	Identifier	strlen		4803241	0					
ANR	4803306	ArgumentList	root -> path		4803241	1					
ANR	4803307	Argument	root -> path		4803241	0					
ANR	4803308	PtrMemberAccess	root -> path		4803241	0					
ANR	4803309	Identifier	root		4803241	0					
ANR	4803310	Identifier	path		4803241	1					
ANR	4803311	CompoundStatement		10:58:219:219	4803241	1					
ANR	4803312	ExpressionStatement	free ( path )	711:3:16080:16091	4803241	0	True				
ANR	4803313	CallExpression	free ( path )		4803241	0					
ANR	4803314	Callee	free		4803241	0					
ANR	4803315	Identifier	free		4803241	0					
ANR	4803316	ArgumentList	path		4803241	1					
ANR	4803317	Argument	path		4803241	0					
ANR	4803318	Identifier	path		4803241	0					
ANR	4803319	ReturnStatement	return true ;	712:3:16096:16107	4803241	1	True				
ANR	4803320	Identifier	true		4803241	0					
ANR	4803321	ExpressionStatement	free ( path )	715:1:16117:16128	4803241	16	True				
ANR	4803322	CallExpression	free ( path )		4803241	0					
ANR	4803323	Callee	free		4803241	0					
ANR	4803324	Identifier	free		4803241	0					
ANR	4803325	ArgumentList	path		4803241	1					
ANR	4803326	Argument	path		4803241	0					
ANR	4803327	Identifier	path		4803241	0					
ANR	4803328	ReturnStatement	return false ;	716:1:16131:16143	4803241	17	True				
ANR	4803329	Identifier	false		4803241	0					
ANR	4803330	ReturnType	R_API bool		4803241	1					
ANR	4803331	Identifier	r_fs_check		4803241	2					
ANR	4803332	ParameterList	"RFS * fs , const char * p"		4803241	3					
ANR	4803333	Parameter	RFS * fs	701:22:15831:15837	4803241	0	True				
ANR	4803334	ParameterType	RFS *		4803241	0					
ANR	4803335	Identifier	fs		4803241	1					
ANR	4803336	Parameter	const char * p	701:31:15840:15852	4803241	1	True				
ANR	4803337	ParameterType	const char *		4803241	0					
ANR	4803338	Identifier	p		4803241	1					
ANR	4803339	CFGEntryNode	ENTRY		4803241		True				
ANR	4803340	CFGExitNode	EXIT		4803241		True				
ANR	4803341	Symbol	p		4803241						
ANR	4803342	Symbol	path		4803241						
ANR	4803343	Symbol	strlen		4803241						
ANR	4803344	Symbol	root		4803241						
ANR	4803345	Symbol	root -> path		4803241						
ANR	4803346	Symbol	false		4803241						
ANR	4803347	Symbol	r_fs_match		4803241						
ANR	4803348	Symbol	true		4803241						
ANR	4803349	Symbol	iter		4803241						
ANR	4803350	Symbol	strdup		4803241						
ANR	4803351	Symbol	* root		4803241						
ANR	4803352	Symbol	fs		4803241						
