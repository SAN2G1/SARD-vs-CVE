command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5739541	File	data/converged/CVE-2019-16718~_radare2/rsa-find.c								
ANR	5739542	Function	parse_next_rsa_field	17:0:594:915							
ANR	5739543	FunctionDef	"parse_next_rsa_field (const ut8 * start , ut32 * len)"		5739542	0					
ANR	5739544	CompoundStatement		17:68:662:915	5739542	0					
ANR	5739545	ExpressionStatement	* len = 0	18:1:665:673	5739542	0	True				
ANR	5739546	AssignmentExpression	* len = 0		5739542	0		=			
ANR	5739547	UnaryOperationExpression	* len		5739542	0					
ANR	5739548	UnaryOperator	*		5739542	0					
ANR	5739549	Identifier	len		5739542	1					
ANR	5739550	PrimaryExpression	0		5739542	1					
ANR	5739551	IfStatement	if ( ! ( start [ 1 ] & 128 ) )		5739542	1					
ANR	5739552	Condition	! ( start [ 1 ] & 128 )	19:5:680:696	5739542	0	True				
ANR	5739553	UnaryOperationExpression	! ( start [ 1 ] & 128 )		5739542	0					
ANR	5739554	UnaryOperator	!		5739542	0					
ANR	5739555	BitAndExpression	start [ 1 ] & 128		5739542	1		&			
ANR	5739556	ArrayIndexing	start [ 1 ]		5739542	0					
ANR	5739557	Identifier	start		5739542	0					
ANR	5739558	PrimaryExpression	1		5739542	1					
ANR	5739559	PrimaryExpression	128		5739542	1					
ANR	5739560	CompoundStatement		3:24:36:36	5739542	1					
ANR	5739561	ExpressionStatement	len = ( ut32 * ) ( start + 1 )	20:2:703:727	5739542	0	True				
ANR	5739562	AssignmentExpression	len = ( ut32 * ) ( start + 1 )		5739542	0		=			
ANR	5739563	Identifier	len		5739542	0					
ANR	5739564	CastExpression	( ut32 * ) ( start + 1 )		5739542	1					
ANR	5739565	CastTarget	ut32 *		5739542	0					
ANR	5739566	AdditiveExpression	start + 1		5739542	1		+			
ANR	5739567	Identifier	start		5739542	0					
ANR	5739568	PrimaryExpression	1		5739542	1					
ANR	5739569	ReturnStatement	return start + 2 ;	21:2:731:747	5739542	1	True				
ANR	5739570	AdditiveExpression	start + 2		5739542	0		+			
ANR	5739571	Identifier	start		5739542	0					
ANR	5739572	PrimaryExpression	2		5739542	1					
ANR	5739573	ElseStatement	else		5739542	0					
ANR	5739574	CompoundStatement		8:2:107:141	5739542	0					
ANR	5739575	IdentifierDeclStatement	int i ;	23:2:761:766	5739542	0	True				
ANR	5739576	IdentifierDecl	i		5739542	0					
ANR	5739577	IdentifierDeclType	int		5739542	0					
ANR	5739578	Identifier	i		5739542	1					
ANR	5739579	IdentifierDeclStatement	const int lensize = start [ 1 ] & 127 ;	24:2:770:804	5739542	1	True				
ANR	5739580	IdentifierDecl	lensize = start [ 1 ] & 127		5739542	0					
ANR	5739581	IdentifierDeclType	const int		5739542	0					
ANR	5739582	Identifier	lensize		5739542	1					
ANR	5739583	AssignmentExpression	lensize = start [ 1 ] & 127		5739542	2		=			
ANR	5739584	Identifier	lensize		5739542	0					
ANR	5739585	BitAndExpression	start [ 1 ] & 127		5739542	1		&			
ANR	5739586	ArrayIndexing	start [ 1 ]		5739542	0					
ANR	5739587	Identifier	start		5739542	0					
ANR	5739588	PrimaryExpression	1		5739542	1					
ANR	5739589	PrimaryExpression	127		5739542	1					
ANR	5739590	ForStatement	for ( i = 0 ; i < lensize ; i ++ )		5739542	2					
ANR	5739591	ForInit	i = 0 ;	25:7:813:818	5739542	0	True				
ANR	5739592	AssignmentExpression	i = 0		5739542	0		=			
ANR	5739593	Identifier	i		5739542	0					
ANR	5739594	PrimaryExpression	0		5739542	1					
ANR	5739595	Condition	i < lensize	25:14:820:830	5739542	1	True				
ANR	5739596	RelationalExpression	i < lensize		5739542	0		<			
ANR	5739597	Identifier	i		5739542	0					
ANR	5739598	Identifier	lensize		5739542	1					
ANR	5739599	PostIncDecOperationExpression	i ++	25:27:833:835	5739542	2	True				
ANR	5739600	Identifier	i		5739542	0					
ANR	5739601	IncDec	++		5739542	1					
ANR	5739602	CompoundStatement		9:32:175:175	5739542	3					
ANR	5739603	ExpressionStatement	* len = ( * len << 8 ) | start [ 2 + i ]	26:3:843:876	5739542	0	True				
ANR	5739604	AssignmentExpression	* len = ( * len << 8 ) | start [ 2 + i ]		5739542	0		=			
ANR	5739605	UnaryOperationExpression	* len		5739542	0					
ANR	5739606	UnaryOperator	*		5739542	0					
ANR	5739607	Identifier	len		5739542	1					
ANR	5739608	InclusiveOrExpression	( * len << 8 ) | start [ 2 + i ]		5739542	1		|			
ANR	5739609	ShiftExpression	* len << 8		5739542	0		<<			
ANR	5739610	UnaryOperationExpression	* len		5739542	0					
ANR	5739611	UnaryOperator	*		5739542	0					
ANR	5739612	Identifier	len		5739542	1					
ANR	5739613	PrimaryExpression	8		5739542	1					
ANR	5739614	ArrayIndexing	start [ 2 + i ]		5739542	1					
ANR	5739615	Identifier	start		5739542	0					
ANR	5739616	AdditiveExpression	2 + i		5739542	1		+			
ANR	5739617	PrimaryExpression	2		5739542	0					
ANR	5739618	Identifier	i		5739542	1					
ANR	5739619	ReturnStatement	return start + 2 + lensize ;	28:2:884:910	5739542	3	True				
ANR	5739620	AdditiveExpression	start + 2 + lensize		5739542	0		+			
ANR	5739621	Identifier	start		5739542	0					
ANR	5739622	AdditiveExpression	2 + lensize		5739542	1		+			
ANR	5739623	PrimaryExpression	2		5739542	0					
ANR	5739624	Identifier	lensize		5739542	1					
ANR	5739625	ReturnType	static const ut8 *		5739542	1					
ANR	5739626	Identifier	parse_next_rsa_field		5739542	2					
ANR	5739627	ParameterList	"const ut8 * start , ut32 * len"		5739542	3					
ANR	5739628	Parameter	const ut8 * start	17:39:633:648	5739542	0	True				
ANR	5739629	ParameterType	const ut8 *		5739542	0					
ANR	5739630	Identifier	start		5739542	1					
ANR	5739631	Parameter	ut32 * len	17:57:651:659	5739542	1	True				
ANR	5739632	ParameterType	ut32 *		5739542	0					
ANR	5739633	Identifier	len		5739542	1					
ANR	5739634	CFGEntryNode	ENTRY		5739542		True				
ANR	5739635	CFGExitNode	EXIT		5739542		True				
ANR	5739636	Symbol	* i		5739542						
ANR	5739637	Symbol	len		5739542						
ANR	5739638	Symbol	* start		5739542						
ANR	5739639	Symbol	start		5739542						
ANR	5739640	Symbol	lensize		5739542						
ANR	5739641	Symbol	i		5739542						
ANR	5739642	Symbol	* len		5739542						
ANR	5739643	Function	check_rsa_fields	33:0:974:1325							
ANR	5739644	FunctionDef	check_rsa_fields (const ut8 * start)		5739643	0					
ANR	5739645	CompoundStatement		33:46:1020:1325	5739643	0					
ANR	5739646	Statement	define	34:1:1023:1028	5739643	0	True				
ANR	5739647	Statement	NB_PRIV_FIELDS	34:8:1030:1043	5739643	1	True				
ANR	5739648	Statement	10	34:23:1045:1046	5739643	2	True				
ANR	5739649	IdentifierDeclStatement	ut32 len = 0 ;	35:1:1049:1061	5739643	3	True				
ANR	5739650	IdentifierDecl	len = 0		5739643	0					
ANR	5739651	IdentifierDeclType	ut32		5739643	0					
ANR	5739652	Identifier	len		5739643	1					
ANR	5739653	AssignmentExpression	len = 0		5739643	2		=			
ANR	5739654	Identifier	len		5739643	0					
ANR	5739655	PrimaryExpression	0		5739643	1					
ANR	5739656	IdentifierDeclStatement	int i ;	36:1:1064:1069	5739643	4	True				
ANR	5739657	IdentifierDecl	i		5739643	0					
ANR	5739658	IdentifierDeclType	int		5739643	0					
ANR	5739659	Identifier	i		5739643	1					
ANR	5739660	IdentifierDeclStatement	"ut8 const * ptr = parse_next_rsa_field ( start , & len ) ;"	38:1:1096:1147	5739643	5	True				
ANR	5739661	IdentifierDecl	"* ptr = parse_next_rsa_field ( start , & len )"		5739643	0					
ANR	5739662	IdentifierDeclType	ut8 const *		5739643	0					
ANR	5739663	Identifier	ptr		5739643	1					
ANR	5739664	AssignmentExpression	"* ptr = parse_next_rsa_field ( start , & len )"		5739643	2		=			
ANR	5739665	Identifier	ptr		5739643	0					
ANR	5739666	CallExpression	"parse_next_rsa_field ( start , & len )"		5739643	1					
ANR	5739667	Callee	parse_next_rsa_field		5739643	0					
ANR	5739668	Identifier	parse_next_rsa_field		5739643	0					
ANR	5739669	ArgumentList	start		5739643	1					
ANR	5739670	Argument	start		5739643	0					
ANR	5739671	Identifier	start		5739643	0					
ANR	5739672	Argument	& len		5739643	1					
ANR	5739673	UnaryOperationExpression	& len		5739643	0					
ANR	5739674	UnaryOperator	&		5739643	0					
ANR	5739675	Identifier	len		5739643	1					
ANR	5739676	IfStatement	if ( ! len || len > 1024 )		5739643	6					
ANR	5739677	Condition	! len || len > 1024	40:5:1155:1172	5739643	0	True				
ANR	5739678	OrExpression	! len || len > 1024		5739643	0		||			
ANR	5739679	UnaryOperationExpression	! len		5739643	0					
ANR	5739680	UnaryOperator	!		5739643	0					
ANR	5739681	Identifier	len		5739643	1					
ANR	5739682	RelationalExpression	len > 1024		5739643	1		>			
ANR	5739683	Identifier	len		5739643	0					
ANR	5739684	PrimaryExpression	1024		5739643	1					
ANR	5739685	CompoundStatement		8:25:154:154	5739643	1					
ANR	5739686	ReturnStatement	return false ;	41:2:1179:1191	5739643	0	True				
ANR	5739687	Identifier	false		5739643	0					
ANR	5739688	ForStatement	for ( i = 0 ; i < NB_PRIV_FIELDS ; i ++ )		5739643	7					
ANR	5739689	ForInit	i = 0 ;	43:6:1202:1207	5739643	0	True				
ANR	5739690	AssignmentExpression	i = 0		5739643	0		=			
ANR	5739691	Identifier	i		5739643	0					
ANR	5739692	PrimaryExpression	0		5739643	1					
ANR	5739693	Condition	i < NB_PRIV_FIELDS	43:13:1209:1226	5739643	1	True				
ANR	5739694	RelationalExpression	i < NB_PRIV_FIELDS		5739643	0		<			
ANR	5739695	Identifier	i		5739643	0					
ANR	5739696	Identifier	NB_PRIV_FIELDS		5739643	1					
ANR	5739697	PostIncDecOperationExpression	i ++	43:33:1229:1231	5739643	2	True				
ANR	5739698	Identifier	i		5739643	0					
ANR	5739699	IncDec	++		5739643	1					
ANR	5739700	CompoundStatement		11:38:213:213	5739643	3					
ANR	5739701	IfStatement	"if ( ! ( ptr = parse_next_rsa_field ( ptr , & len ) ) )"		5739643	0					
ANR	5739702	Condition	"! ( ptr = parse_next_rsa_field ( ptr , & len ) )"	44:6:1242:1282	5739643	0	True				
ANR	5739703	UnaryOperationExpression	"! ( ptr = parse_next_rsa_field ( ptr , & len ) )"		5739643	0					
ANR	5739704	UnaryOperator	!		5739643	0					
ANR	5739705	AssignmentExpression	"ptr = parse_next_rsa_field ( ptr , & len )"		5739643	1		=			
ANR	5739706	Identifier	ptr		5739643	0					
ANR	5739707	CallExpression	"parse_next_rsa_field ( ptr , & len )"		5739643	1					
ANR	5739708	Callee	parse_next_rsa_field		5739643	0					
ANR	5739709	Identifier	parse_next_rsa_field		5739643	0					
ANR	5739710	ArgumentList	ptr		5739643	1					
ANR	5739711	Argument	ptr		5739643	0					
ANR	5739712	Identifier	ptr		5739643	0					
ANR	5739713	Argument	& len		5739643	1					
ANR	5739714	UnaryOperationExpression	& len		5739643	0					
ANR	5739715	UnaryOperator	&		5739643	0					
ANR	5739716	Identifier	len		5739643	1					
ANR	5739717	CompoundStatement		12:49:264:264	5739643	1					
ANR	5739718	ReturnStatement	return false ;	45:3:1290:1302	5739643	0	True				
ANR	5739719	Identifier	false		5739643	0					
ANR	5739720	ReturnStatement	return true ;	48:1:1312:1323	5739643	8	True				
ANR	5739721	Identifier	true		5739643	0					
ANR	5739722	ReturnType	static int		5739643	1					
ANR	5739723	Identifier	check_rsa_fields		5739643	2					
ANR	5739724	ParameterList	const ut8 * start		5739643	3					
ANR	5739725	Parameter	const ut8 * start	33:28:1002:1017	5739643	0	True				
ANR	5739726	ParameterType	const ut8 *		5739643	0					
ANR	5739727	Identifier	start		5739643	1					
ANR	5739728	CFGEntryNode	ENTRY		5739643		True				
ANR	5739729	CFGExitNode	EXIT		5739643		True				
ANR	5739730	Symbol	parse_next_rsa_field		5739643						
ANR	5739731	Symbol	len		5739643						
ANR	5739732	Symbol	start		5739643						
ANR	5739733	Symbol	false		5739643						
ANR	5739734	Symbol	NB_PRIV_FIELDS		5739643						
ANR	5739735	Symbol	true		5739643						
ANR	5739736	Symbol	i		5739643						
ANR	5739737	Symbol	& len		5739643						
ANR	5739738	Symbol	ptr		5739643						
ANR	5739739	Function	r_search_rsa_update	52:0:1373:1981							
ANR	5739740	FunctionDef	"r_search_rsa_update (RSearch * s , ut64 from , const ut8 * buf , int len)"		5739739	0					
ANR	5739741	CompoundStatement		52:78:1451:1981	5739739	0					
ANR	5739742	IdentifierDeclStatement	"unsigned int i , k , index ;"	53:1:1454:1478	5739739	0	True				
ANR	5739743	IdentifierDecl	i		5739739	0					
ANR	5739744	IdentifierDeclType	unsigned int		5739739	0					
ANR	5739745	Identifier	i		5739739	1					
ANR	5739746	IdentifierDecl	k		5739739	1					
ANR	5739747	IdentifierDeclType	unsigned int		5739739	0					
ANR	5739748	Identifier	k		5739739	1					
ANR	5739749	IdentifierDecl	index		5739739	2					
ANR	5739750	IdentifierDeclType	unsigned int		5739739	0					
ANR	5739751	Identifier	index		5739739	1					
ANR	5739752	IdentifierDeclStatement	"const ut8 versionmarker [ ] = { 0x02 , 0x01 , 0x00 , 0x02 } ;"	54:1:1481:1533	5739739	1	True				
ANR	5739753	IdentifierDecl	"versionmarker [ ] = { 0x02 , 0x01 , 0x00 , 0x02 }"		5739739	0					
ANR	5739754	IdentifierDeclType	const ut8 [ ]		5739739	0					
ANR	5739755	Identifier	versionmarker		5739739	1					
ANR	5739756	AssignmentExpression	"versionmarker [ ] = { 0x02 , 0x01 , 0x00 , 0x02 }"		5739739	2		=			
ANR	5739757	Identifier	versionmarker		5739739	0					
ANR	5739758	InitializerList	0x02		5739739	1					
ANR	5739759	PrimaryExpression	0x02		5739739	0					
ANR	5739760	PrimaryExpression	0x01		5739739	1					
ANR	5739761	PrimaryExpression	0x00		5739739	2					
ANR	5739762	PrimaryExpression	0x02		5739739	3					
ANR	5739763	IfStatement	if ( len < sizeof ( versionmarker ) )		5739739	2					
ANR	5739764	Condition	len < sizeof ( versionmarker )	56:5:1541:1568	5739739	0	True				
ANR	5739765	RelationalExpression	len < sizeof ( versionmarker )		5739739	0		<			
ANR	5739766	Identifier	len		5739739	0					
ANR	5739767	SizeofExpression	sizeof ( versionmarker )		5739739	1					
ANR	5739768	Sizeof	sizeof		5739739	0					
ANR	5739769	SizeofOperand	versionmarker		5739739	1					
ANR	5739770	CompoundStatement		5:35:119:119	5739739	1					
ANR	5739771	ReturnStatement	return - 1 ;	57:2:1575:1584	5739739	0	True				
ANR	5739772	UnaryOperationExpression	- 1		5739739	0					
ANR	5739773	UnaryOperator	-		5739739	0					
ANR	5739774	PrimaryExpression	1		5739739	1					
ANR	5739775	ForStatement	for ( i = 0 ; i < len - sizeof ( versionmarker ) ; i ++ )		5739739	3					
ANR	5739776	ForInit	i = 0 ;	60:6:1596:1601	5739739	0	True				
ANR	5739777	AssignmentExpression	i = 0		5739739	0		=			
ANR	5739778	Identifier	i		5739739	0					
ANR	5739779	PrimaryExpression	0		5739739	1					
ANR	5739780	Condition	i < len - sizeof ( versionmarker )	60:13:1603:1634	5739739	1	True				
ANR	5739781	RelationalExpression	i < len - sizeof ( versionmarker )		5739739	0		<			
ANR	5739782	Identifier	i		5739739	0					
ANR	5739783	AdditiveExpression	len - sizeof ( versionmarker )		5739739	1		-			
ANR	5739784	Identifier	len		5739739	0					
ANR	5739785	SizeofExpression	sizeof ( versionmarker )		5739739	1					
ANR	5739786	Sizeof	sizeof		5739739	0					
ANR	5739787	SizeofOperand	versionmarker		5739739	1					
ANR	5739788	PostIncDecOperationExpression	i ++	60:47:1637:1639	5739739	2	True				
ANR	5739789	Identifier	i		5739739	0					
ANR	5739790	IncDec	++		5739739	1					
ANR	5739791	CompoundStatement		9:52:190:190	5739739	3					
ANR	5739792	IfStatement	"if ( memcmp ( & buf [ i ] , versionmarker , sizeof ( versionmarker ) ) )"		5739739	0					
ANR	5739793	Condition	"memcmp ( & buf [ i ] , versionmarker , sizeof ( versionmarker ) )"	61:6:1650:1704	5739739	0	True				
ANR	5739794	CallExpression	"memcmp ( & buf [ i ] , versionmarker , sizeof ( versionmarker ) )"		5739739	0					
ANR	5739795	Callee	memcmp		5739739	0					
ANR	5739796	Identifier	memcmp		5739739	0					
ANR	5739797	ArgumentList	& buf [ i ]		5739739	1					
ANR	5739798	Argument	& buf [ i ]		5739739	0					
ANR	5739799	UnaryOperationExpression	& buf [ i ]		5739739	0					
ANR	5739800	UnaryOperator	&		5739739	0					
ANR	5739801	ArrayIndexing	buf [ i ]		5739739	1					
ANR	5739802	Identifier	buf		5739739	0					
ANR	5739803	Identifier	i		5739739	1					
ANR	5739804	Argument	versionmarker		5739739	1					
ANR	5739805	Identifier	versionmarker		5739739	0					
ANR	5739806	Argument	sizeof ( versionmarker )		5739739	2					
ANR	5739807	SizeofExpression	sizeof ( versionmarker )		5739739	0					
ANR	5739808	Sizeof	sizeof		5739739	0					
ANR	5739809	SizeofOperand	versionmarker		5739739	1					
ANR	5739810	CompoundStatement		10:63:255:255	5739739	1					
ANR	5739811	ContinueStatement	continue ;	62:3:1712:1720	5739739	0	True				
ANR	5739812	ExpressionStatement	index = 0	65:2:1729:1738	5739739	1	True				
ANR	5739813	AssignmentExpression	index = 0		5739739	0		=			
ANR	5739814	Identifier	index		5739739	0					
ANR	5739815	PrimaryExpression	0		5739739	1					
ANR	5739816	ForStatement	for ( k = i ; k != 0 && k > i - 20 ; k -- )		5739739	2					
ANR	5739817	ForInit	k = i ;	66:7:1747:1750	5739739	0	True				
ANR	5739818	AssignmentExpression	k = i		5739739	0		=			
ANR	5739819	Identifier	k		5739739	0					
ANR	5739820	Identifier	i		5739739	1					
ANR	5739821	Condition	k != 0 && k > i - 20	66:12:1752:1771	5739739	1	True				
ANR	5739822	AndExpression	k != 0 && k > i - 20		5739739	0		&&			
ANR	5739823	EqualityExpression	k != 0		5739739	0		!=			
ANR	5739824	Identifier	k		5739739	0					
ANR	5739825	PrimaryExpression	0		5739739	1					
ANR	5739826	RelationalExpression	k > i - 20		5739739	1		>			
ANR	5739827	Identifier	k		5739739	0					
ANR	5739828	AdditiveExpression	i - 20		5739739	1		-			
ANR	5739829	Identifier	i		5739739	0					
ANR	5739830	PrimaryExpression	20		5739739	1					
ANR	5739831	PostIncDecOperationExpression	k --	66:34:1774:1776	5739739	2	True				
ANR	5739832	Identifier	k		5739739	0					
ANR	5739833	IncDec	--		5739739	1					
ANR	5739834	CompoundStatement		15:39:327:327	5739739	3					
ANR	5739835	IfStatement	if ( buf [ k ] == '0' )		5739739	0					
ANR	5739836	Condition	buf [ k ] == '0'	67:7:1788:1800	5739739	0	True				
ANR	5739837	EqualityExpression	buf [ k ] == '0'		5739739	0		==			
ANR	5739838	ArrayIndexing	buf [ k ]		5739739	0					
ANR	5739839	Identifier	buf		5739739	0					
ANR	5739840	Identifier	k		5739739	1					
ANR	5739841	PrimaryExpression	'0'		5739739	1					
ANR	5739842	CompoundStatement		16:22:351:351	5739739	1					
ANR	5739843	ExpressionStatement	index = k	68:4:1843:1852	5739739	0	True				
ANR	5739844	AssignmentExpression	index = k		5739739	0		=			
ANR	5739845	Identifier	index		5739739	0					
ANR	5739846	Identifier	k		5739739	1					
ANR	5739847	BreakStatement	break ;	69:4:1858:1863	5739739	1	True				
ANR	5739848	IfStatement	if ( ! index )		5739739	3					
ANR	5739849	Condition	! index	73:6:1881:1886	5739739	0	True				
ANR	5739850	UnaryOperationExpression	! index		5739739	0					
ANR	5739851	UnaryOperator	!		5739739	0					
ANR	5739852	Identifier	index		5739739	1					
ANR	5739853	CompoundStatement		22:14:437:437	5739739	1					
ANR	5739854	ContinueStatement	continue ;	74:3:1894:1902	5739739	0	True				
ANR	5739855	IfStatement	if ( check_rsa_fields ( buf + index ) )		5739739	4					
ANR	5739856	Condition	check_rsa_fields ( buf + index )	77:6:1915:1944	5739739	0	True				
ANR	5739857	CallExpression	check_rsa_fields ( buf + index )		5739739	0					
ANR	5739858	Callee	check_rsa_fields		5739739	0					
ANR	5739859	Identifier	check_rsa_fields		5739739	0					
ANR	5739860	ArgumentList	buf + index		5739739	1					
ANR	5739861	Argument	buf + index		5739739	0					
ANR	5739862	AdditiveExpression	buf + index		5739739	0		+			
ANR	5739863	Identifier	buf		5739739	0					
ANR	5739864	Identifier	index		5739739	1					
ANR	5739865	CompoundStatement		26:38:495:495	5739739	1					
ANR	5739866	ReturnStatement	return i ;	78:3:1952:1960	5739739	0	True				
ANR	5739867	Identifier	i		5739739	0					
ANR	5739868	ReturnStatement	return - 1 ;	81:1:1970:1979	5739739	4	True				
ANR	5739869	UnaryOperationExpression	- 1		5739739	0					
ANR	5739870	UnaryOperator	-		5739739	0					
ANR	5739871	PrimaryExpression	1		5739739	1					
ANR	5739872	ReturnType	R_API int		5739739	1					
ANR	5739873	Identifier	r_search_rsa_update		5739739	2					
ANR	5739874	ParameterList	"RSearch * s , ut64 from , const ut8 * buf , int len"		5739739	3					
ANR	5739875	Parameter	RSearch * s	52:30:1403:1412	5739739	0	True				
ANR	5739876	ParameterType	RSearch *		5739739	0					
ANR	5739877	Identifier	s		5739739	1					
ANR	5739878	Parameter	ut64 from	52:42:1415:1423	5739739	1	True				
ANR	5739879	ParameterType	ut64		5739739	0					
ANR	5739880	Identifier	from		5739739	1					
ANR	5739881	Parameter	const ut8 * buf	52:53:1426:1439	5739739	2	True				
ANR	5739882	ParameterType	const ut8 *		5739739	0					
ANR	5739883	Identifier	buf		5739739	1					
ANR	5739884	Parameter	int len	52:69:1442:1448	5739739	3	True				
ANR	5739885	ParameterType	int		5739739	0					
ANR	5739886	Identifier	len		5739739	1					
ANR	5739887	CFGEntryNode	ENTRY		5739739		True				
ANR	5739888	CFGExitNode	EXIT		5739739		True				
ANR	5739889	Symbol	buf		5739739						
ANR	5739890	Symbol	* buf		5739739						
ANR	5739891	Symbol	s		5739739						
ANR	5739892	Symbol	memcmp		5739739						
ANR	5739893	Symbol	len		5739739						
ANR	5739894	Symbol	* k		5739739						
ANR	5739895	Symbol	i		5739739						
ANR	5739896	Symbol	index		5739739						
ANR	5739897	Symbol	from		5739739						
ANR	5739898	Symbol	k		5739739						
ANR	5739899	Symbol	versionmarker		5739739						
ANR	5739900	Symbol	check_rsa_fields		5739739						
