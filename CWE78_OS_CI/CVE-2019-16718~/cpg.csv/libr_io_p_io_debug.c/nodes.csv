command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4874265	File	data/converged/CVE-2019-16718~_radare2/libr_io_p_io_debug.c								
ANR	4874266	ClassDef	<unnamed>	61:8:1193:1238							
ANR	4874267	DeclStmt									
ANR	4874268	Decl							HANDLE	HANDLE	hnd
ANR	4874269	DeclStmt									
ANR	4874270	Decl							ut64	ut64	winbase
ANR	4874271	DeclStmt									
ANR	4874272	Decl									RIOW32
ANR	4874273	ClassDef	<unnamed>	66:8:1249:1309							
ANR	4874274	DeclStmt									
ANR	4874275	Decl							ut64	ut64	winbase
ANR	4874276	DeclStmt									
ANR	4874277	Decl							PROCESS_INFORMATION	PROCESS_INFORMATION	pi
ANR	4874278	DeclStmt									
ANR	4874279	Decl									RIOW32Dbg
ANR	4874280	DeclStmt									
ANR	4874281	Decl							ut64	ut64	winbase
ANR	4874282	DeclStmt									
ANR	4874283	Decl							int	int	wintid
ANR	4874284	Function	setup_tokens	74:0:1360:2011							
ANR	4874285	FunctionDef	setup_tokens ()		4874284	0					
ANR	4874286	CompoundStatement		74:26:1386:2011	4874284	0					
ANR	4874287	IdentifierDeclStatement	HANDLE tok = NULL ;	75:1:1389:1406	4874284	0	True				
ANR	4874288	IdentifierDecl	tok = NULL		4874284	0					
ANR	4874289	IdentifierDeclType	HANDLE		4874284	0					
ANR	4874290	Identifier	tok		4874284	1					
ANR	4874291	AssignmentExpression	tok = NULL		4874284	2		=			
ANR	4874292	Identifier	NULL		4874284	0					
ANR	4874293	Identifier	NULL		4874284	1					
ANR	4874294	IdentifierDeclStatement	TOKEN_PRIVILEGES tp ;	76:1:1409:1428	4874284	1	True				
ANR	4874295	IdentifierDecl	tp		4874284	0					
ANR	4874296	IdentifierDeclType	TOKEN_PRIVILEGES		4874284	0					
ANR	4874297	Identifier	tp		4874284	1					
ANR	4874298	IdentifierDeclStatement	DWORD err = - 1 ;	77:1:1431:1445	4874284	2	True				
ANR	4874299	IdentifierDecl	err = - 1		4874284	0					
ANR	4874300	IdentifierDeclType	DWORD		4874284	0					
ANR	4874301	Identifier	err		4874284	1					
ANR	4874302	AssignmentExpression	err = - 1		4874284	2		=			
ANR	4874303	Identifier	err		4874284	0					
ANR	4874304	UnaryOperationExpression	- 1		4874284	1					
ANR	4874305	UnaryOperator	-		4874284	0					
ANR	4874306	PrimaryExpression	1		4874284	1					
ANR	4874307	IfStatement	"if ( ! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & tok ) )"		4874284	3					
ANR	4874308	Condition	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & tok )"	79:5:1453:1523	4874284	0	True				
ANR	4874309	UnaryOperationExpression	"! OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & tok )"		4874284	0					
ANR	4874310	UnaryOperator	!		4874284	0					
ANR	4874311	CallExpression	"OpenProcessToken ( GetCurrentProcess ( ) , TOKEN_ADJUST_PRIVILEGES , & tok )"		4874284	1					
ANR	4874312	Callee	OpenProcessToken		4874284	0					
ANR	4874313	Identifier	OpenProcessToken		4874284	0					
ANR	4874314	ArgumentList	GetCurrentProcess ( )		4874284	1					
ANR	4874315	Argument	GetCurrentProcess ( )		4874284	0					
ANR	4874316	CallExpression	GetCurrentProcess ( )		4874284	0					
ANR	4874317	Callee	GetCurrentProcess		4874284	0					
ANR	4874318	Identifier	GetCurrentProcess		4874284	0					
ANR	4874319	ArgumentList			4874284	1					
ANR	4874320	Argument	TOKEN_ADJUST_PRIVILEGES		4874284	1					
ANR	4874321	Identifier	TOKEN_ADJUST_PRIVILEGES		4874284	0					
ANR	4874322	Argument	& tok		4874284	2					
ANR	4874323	UnaryOperationExpression	& tok		4874284	0					
ANR	4874324	UnaryOperator	&		4874284	0					
ANR	4874325	Identifier	tok		4874284	1					
ANR	4874326	CompoundStatement		6:78:139:139	4874284	1					
ANR	4874327	GotoStatement	goto err_enable ;	80:2:1530:1545	4874284	0	True				
ANR	4874328	Identifier	err_enable		4874284	0					
ANR	4874329	ExpressionStatement	tp . PrivilegeCount = 1	82:1:1551:1572	4874284	4	True				
ANR	4874330	AssignmentExpression	tp . PrivilegeCount = 1		4874284	0		=			
ANR	4874331	MemberAccess	tp . PrivilegeCount		4874284	0					
ANR	4874332	Identifier	tp		4874284	0					
ANR	4874333	Identifier	PrivilegeCount		4874284	1					
ANR	4874334	PrimaryExpression	1		4874284	1					
ANR	4874335	IfStatement	"if ( ! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & tp . Privileges [ 0 ] . Luid ) )"		4874284	5					
ANR	4874336	Condition	"! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & tp . Privileges [ 0 ] . Luid )"	83:5:1579:1646	4874284	0	True				
ANR	4874337	UnaryOperationExpression	"! LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & tp . Privileges [ 0 ] . Luid )"		4874284	0					
ANR	4874338	UnaryOperator	!		4874284	0					
ANR	4874339	CallExpression	"LookupPrivilegeValue ( NULL , SE_DEBUG_NAME , & tp . Privileges [ 0 ] . Luid )"		4874284	1					
ANR	4874340	Callee	LookupPrivilegeValue		4874284	0					
ANR	4874341	Identifier	LookupPrivilegeValue		4874284	0					
ANR	4874342	ArgumentList	NULL		4874284	1					
ANR	4874343	Argument	NULL		4874284	0					
ANR	4874344	Identifier	NULL		4874284	0					
ANR	4874345	Argument	SE_DEBUG_NAME		4874284	1					
ANR	4874346	Identifier	SE_DEBUG_NAME		4874284	0					
ANR	4874347	Argument	& tp . Privileges [ 0 ] . Luid		4874284	2					
ANR	4874348	UnaryOperationExpression	& tp . Privileges [ 0 ] . Luid		4874284	0					
ANR	4874349	UnaryOperator	&		4874284	0					
ANR	4874350	MemberAccess	tp . Privileges [ 0 ] . Luid		4874284	1					
ANR	4874351	ArrayIndexing	tp . Privileges [ 0 ]		4874284	0					
ANR	4874352	MemberAccess	tp . Privileges		4874284	0					
ANR	4874353	Identifier	tp		4874284	0					
ANR	4874354	Identifier	Privileges		4874284	1					
ANR	4874355	PrimaryExpression	0		4874284	1					
ANR	4874356	Identifier	Luid		4874284	1					
ANR	4874357	CompoundStatement		10:75:262:262	4874284	1					
ANR	4874358	GotoStatement	goto err_enable ;	84:2:1653:1668	4874284	0	True				
ANR	4874359	Identifier	err_enable		4874284	0					
ANR	4874360	ExpressionStatement	tp . Privileges [ 0 ] . Attributes = 0	87:1:1743:1774	4874284	6	True				
ANR	4874361	AssignmentExpression	tp . Privileges [ 0 ] . Attributes = 0		4874284	0		=			
ANR	4874362	MemberAccess	tp . Privileges [ 0 ] . Attributes		4874284	0					
ANR	4874363	ArrayIndexing	tp . Privileges [ 0 ]		4874284	0					
ANR	4874364	MemberAccess	tp . Privileges		4874284	0					
ANR	4874365	Identifier	tp		4874284	0					
ANR	4874366	Identifier	Privileges		4874284	1					
ANR	4874367	PrimaryExpression	0		4874284	1					
ANR	4874368	Identifier	Attributes		4874284	1					
ANR	4874369	PrimaryExpression	0		4874284	1					
ANR	4874370	IfStatement	"if ( ! AdjustTokenPrivileges ( tok , 0 , & tp , sizeof ( tp ) , NULL , NULL ) )"		4874284	7					
ANR	4874371	Condition	"! AdjustTokenPrivileges ( tok , 0 , & tp , sizeof ( tp ) , NULL , NULL )"	88:5:1805:1865	4874284	0	True				
ANR	4874372	UnaryOperationExpression	"! AdjustTokenPrivileges ( tok , 0 , & tp , sizeof ( tp ) , NULL , NULL )"		4874284	0					
ANR	4874373	UnaryOperator	!		4874284	0					
ANR	4874374	CallExpression	"AdjustTokenPrivileges ( tok , 0 , & tp , sizeof ( tp ) , NULL , NULL )"		4874284	1					
ANR	4874375	Callee	AdjustTokenPrivileges		4874284	0					
ANR	4874376	Identifier	AdjustTokenPrivileges		4874284	0					
ANR	4874377	ArgumentList	tok		4874284	1					
ANR	4874378	Argument	tok		4874284	0					
ANR	4874379	Identifier	tok		4874284	0					
ANR	4874380	Argument	0		4874284	1					
ANR	4874381	PrimaryExpression	0		4874284	0					
ANR	4874382	Argument	& tp		4874284	2					
ANR	4874383	UnaryOperationExpression	& tp		4874284	0					
ANR	4874384	UnaryOperator	&		4874284	0					
ANR	4874385	Identifier	tp		4874284	1					
ANR	4874386	Argument	sizeof ( tp )		4874284	3					
ANR	4874387	SizeofExpression	sizeof ( tp )		4874284	0					
ANR	4874388	Sizeof	sizeof		4874284	0					
ANR	4874389	SizeofOperand	tp		4874284	1					
ANR	4874390	Argument	NULL		4874284	4					
ANR	4874391	Identifier	NULL		4874284	0					
ANR	4874392	Argument	NULL		4874284	5					
ANR	4874393	Identifier	NULL		4874284	0					
ANR	4874394	CompoundStatement		15:68:481:481	4874284	1					
ANR	4874395	GotoStatement	goto err_enable ;	89:2:1872:1887	4874284	0	True				
ANR	4874396	Identifier	err_enable		4874284	0					
ANR	4874397	ExpressionStatement	err = 0	91:1:1893:1900	4874284	8	True				
ANR	4874398	AssignmentExpression	err = 0		4874284	0		=			
ANR	4874399	Identifier	err		4874284	0					
ANR	4874400	PrimaryExpression	0		4874284	1					
ANR	4874401	Label	err_enable :	92:0:1902:1912	4874284	9	True				
ANR	4874402	Identifier	err_enable		4874284	0					
ANR	4874403	IfStatement	if ( tok )		4874284	10					
ANR	4874404	Condition	tok	93:5:1919:1921	4874284	0	True				
ANR	4874405	Identifier	tok		4874284	0					
ANR	4874406	CompoundStatement		20:10:537:537	4874284	1					
ANR	4874407	ExpressionStatement	CloseHandle ( tok )	94:2:1928:1945	4874284	0	True				
ANR	4874408	CallExpression	CloseHandle ( tok )		4874284	0					
ANR	4874409	Callee	CloseHandle		4874284	0					
ANR	4874410	Identifier	CloseHandle		4874284	0					
ANR	4874411	ArgumentList	tok		4874284	1					
ANR	4874412	Argument	tok		4874284	0					
ANR	4874413	Identifier	tok		4874284	0					
ANR	4874414	IfStatement	if ( err )		4874284	11					
ANR	4874415	Condition	err	96:5:1955:1957	4874284	0	True				
ANR	4874416	Identifier	err		4874284	0					
ANR	4874417	CompoundStatement		23:10:573:573	4874284	1					
ANR	4874418	ExpressionStatement	"r_sys_perror ( ""setup_tokens"" )"	97:2:1964:1993	4874284	0	True				
ANR	4874419	CallExpression	"r_sys_perror ( ""setup_tokens"" )"		4874284	0					
ANR	4874420	Callee	r_sys_perror		4874284	0					
ANR	4874421	Identifier	r_sys_perror		4874284	0					
ANR	4874422	ArgumentList	"""setup_tokens"""		4874284	1					
ANR	4874423	Argument	"""setup_tokens"""		4874284	0					
ANR	4874424	PrimaryExpression	"""setup_tokens"""		4874284	0					
ANR	4874425	ReturnStatement	return err ;	99:1:1999:2009	4874284	12	True				
ANR	4874426	Identifier	err		4874284	0					
ANR	4874427	ReturnType	static int		4874284	1					
ANR	4874428	Identifier	setup_tokens		4874284	2					
ANR	4874429	ParameterList			4874284	3					
ANR	4874430	CFGEntryNode	ENTRY		4874284		True				
ANR	4874431	CFGExitNode	EXIT		4874284		True				
ANR	4874432	Symbol	* tp		4874284						
ANR	4874433	Symbol	NULL		4874284						
ANR	4874434	Symbol	err		4874284						
ANR	4874435	Symbol	TOKEN_ADJUST_PRIVILEGES		4874284						
ANR	4874436	Symbol	LookupPrivilegeValue		4874284						
ANR	4874437	Symbol	* tp . Privileges		4874284						
ANR	4874438	Symbol	AdjustTokenPrivileges		4874284						
ANR	4874439	Symbol	& tp		4874284						
ANR	4874440	Symbol	GetCurrentProcess		4874284						
ANR	4874441	Symbol	& tp . Privileges [ 0 ] . Luid		4874284						
ANR	4874442	Symbol	tok		4874284						
ANR	4874443	Symbol	& tok		4874284						
ANR	4874444	Symbol	SE_DEBUG_NAME		4874284						
ANR	4874445	Symbol	tp . Privileges		4874284						
ANR	4874446	Symbol	OpenProcessToken		4874284						
ANR	4874447	Symbol	tp . Privileges [ 0 ] . Attributes		4874284						
ANR	4874448	Symbol	tp		4874284						
ANR	4874449	Symbol	tp . PrivilegeCount		4874284						
ANR	4874450	Function	fork_and_ptraceme	102:0:2014:4442							
ANR	4874451	FunctionDef	"fork_and_ptraceme (RIO * io , int bits , const char * cmd)"		4874450	0					
ANR	4874452	CompoundStatement		102:65:2079:4442	4874450	0					
ANR	4874453	IdentifierDeclStatement	PROCESS_INFORMATION pi ;	103:1:2082:2104	4874450	0	True				
ANR	4874454	IdentifierDecl	pi		4874450	0					
ANR	4874455	IdentifierDeclType	PROCESS_INFORMATION		4874450	0					
ANR	4874456	Identifier	pi		4874450	1					
ANR	4874457	IdentifierDeclStatement	STARTUPINFO si = { 0 } ;	104:1:2107:2130	4874450	1	True				
ANR	4874458	IdentifierDecl	si = { 0 }		4874450	0					
ANR	4874459	IdentifierDeclType	STARTUPINFO		4874450	0					
ANR	4874460	Identifier	si		4874450	1					
ANR	4874461	AssignmentExpression	si = { 0 }		4874450	2		=			
ANR	4874462	Identifier	si		4874450	0					
ANR	4874463	InitializerList	0		4874450	1					
ANR	4874464	PrimaryExpression	0		4874450	0					
ANR	4874465	IdentifierDeclStatement	DEBUG_EVENT de ;	105:1:2133:2147	4874450	2	True				
ANR	4874466	IdentifierDecl	de		4874450	0					
ANR	4874467	IdentifierDeclType	DEBUG_EVENT		4874450	0					
ANR	4874468	Identifier	de		4874450	1					
ANR	4874469	IdentifierDeclStatement	"int pid , tid ;"	106:1:2150:2162	4874450	3	True				
ANR	4874470	IdentifierDecl	pid		4874450	0					
ANR	4874471	IdentifierDeclType	int		4874450	0					
ANR	4874472	Identifier	pid		4874450	1					
ANR	4874473	IdentifierDecl	tid		4874450	1					
ANR	4874474	IdentifierDeclType	int		4874450	0					
ANR	4874475	Identifier	tid		4874450	1					
ANR	4874476	IfStatement	if ( ! * cmd )		4874450	4					
ANR	4874477	Condition	! * cmd	107:5:2169:2173	4874450	0	True				
ANR	4874478	UnaryOperationExpression	! * cmd		4874450	0					
ANR	4874479	UnaryOperator	!		4874450	0					
ANR	4874480	UnaryOperationExpression	* cmd		4874450	1					
ANR	4874481	UnaryOperator	*		4874450	0					
ANR	4874482	Identifier	cmd		4874450	1					
ANR	4874483	CompoundStatement		6:12:96:96	4874450	1					
ANR	4874484	ReturnStatement	return - 1 ;	108:2:2180:2189	4874450	0	True				
ANR	4874485	UnaryOperationExpression	- 1		4874450	0					
ANR	4874486	UnaryOperator	-		4874450	0					
ANR	4874487	PrimaryExpression	1		4874450	1					
ANR	4874488	ExpressionStatement	setup_tokens ( )	110:1:2195:2210	4874450	5	True				
ANR	4874489	CallExpression	setup_tokens ( )		4874450	0					
ANR	4874490	Callee	setup_tokens		4874450	0					
ANR	4874491	Identifier	setup_tokens		4874450	0					
ANR	4874492	ArgumentList			4874450	1					
ANR	4874493	IdentifierDeclStatement	"char * _cmd = io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd ) ;"	111:1:2213:2299	4874450	6	True				
ANR	4874494	IdentifierDecl	"* _cmd = io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd )"		4874450	0					
ANR	4874495	IdentifierDeclType	char *		4874450	0					
ANR	4874496	Identifier	_cmd		4874450	1					
ANR	4874497	AssignmentExpression	"* _cmd = io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd )"		4874450	2		=			
ANR	4874498	Identifier	_cmd		4874450	0					
ANR	4874499	ConditionalExpression	"io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd )"		4874450	1					
ANR	4874500	Condition	io -> args		4874450	0					
ANR	4874501	PtrMemberAccess	io -> args		4874450	0					
ANR	4874502	Identifier	io		4874450	0					
ANR	4874503	Identifier	args		4874450	1					
ANR	4874504	CallExpression	"r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args )"		4874450	1					
ANR	4874505	Callee	r_str_appendf		4874450	0					
ANR	4874506	Identifier	r_str_appendf		4874450	0					
ANR	4874507	ArgumentList	strdup ( cmd )		4874450	1					
ANR	4874508	Argument	strdup ( cmd )		4874450	0					
ANR	4874509	CallExpression	strdup ( cmd )		4874450	0					
ANR	4874510	Callee	strdup		4874450	0					
ANR	4874511	Identifier	strdup		4874450	0					
ANR	4874512	ArgumentList	cmd		4874450	1					
ANR	4874513	Argument	cmd		4874450	0					
ANR	4874514	Identifier	cmd		4874450	0					
ANR	4874515	Argument	""" %s"""		4874450	1					
ANR	4874516	PrimaryExpression	""" %s"""		4874450	0					
ANR	4874517	Argument	io -> args		4874450	2					
ANR	4874518	PtrMemberAccess	io -> args		4874450	0					
ANR	4874519	Identifier	io		4874450	0					
ANR	4874520	Identifier	args		4874450	1					
ANR	4874521	CallExpression	strdup ( cmd )		4874450	2					
ANR	4874522	Callee	strdup		4874450	0					
ANR	4874523	Identifier	strdup		4874450	0					
ANR	4874524	ArgumentList	cmd		4874450	1					
ANR	4874525	Argument	cmd		4874450	0					
ANR	4874526	Identifier	cmd		4874450	0					
ANR	4874527	IdentifierDeclStatement	"char * * argv = r_str_argv ( _cmd , NULL ) ;"	113:1:2302:2339	4874450	7	True				
ANR	4874528	IdentifierDecl	"* * argv = r_str_argv ( _cmd , NULL )"		4874450	0					
ANR	4874529	IdentifierDeclType	char * *		4874450	0					
ANR	4874530	Identifier	argv		4874450	1					
ANR	4874531	AssignmentExpression	"* * argv = r_str_argv ( _cmd , NULL )"		4874450	2		=			
ANR	4874532	Identifier	argv		4874450	0					
ANR	4874533	CallExpression	"r_str_argv ( _cmd , NULL )"		4874450	1					
ANR	4874534	Callee	r_str_argv		4874450	0					
ANR	4874535	Identifier	r_str_argv		4874450	0					
ANR	4874536	ArgumentList	_cmd		4874450	1					
ANR	4874537	Argument	_cmd		4874450	0					
ANR	4874538	Identifier	_cmd		4874450	0					
ANR	4874539	Argument	NULL		4874450	1					
ANR	4874540	Identifier	NULL		4874450	0					
ANR	4874541	IdentifierDeclStatement	int cmd_len = 0 ;	115:1:2418:2433	4874450	8	True				
ANR	4874542	IdentifierDecl	cmd_len = 0		4874450	0					
ANR	4874543	IdentifierDeclType	int		4874450	0					
ANR	4874544	Identifier	cmd_len		4874450	1					
ANR	4874545	AssignmentExpression	cmd_len = 0		4874450	2		=			
ANR	4874546	Identifier	cmd_len		4874450	0					
ANR	4874547	PrimaryExpression	0		4874450	1					
ANR	4874548	IdentifierDeclStatement	int i = 0 ;	116:1:2436:2445	4874450	9	True				
ANR	4874549	IdentifierDecl	i = 0		4874450	0					
ANR	4874550	IdentifierDeclType	int		4874450	0					
ANR	4874551	Identifier	i		4874450	1					
ANR	4874552	AssignmentExpression	i = 0		4874450	2		=			
ANR	4874553	Identifier	i		4874450	0					
ANR	4874554	PrimaryExpression	0		4874450	1					
ANR	4874555	ExpressionStatement	si . cb = sizeof ( si )	118:1:2449:2468	4874450	10	True				
ANR	4874556	AssignmentExpression	si . cb = sizeof ( si )		4874450	0		=			
ANR	4874557	MemberAccess	si . cb		4874450	0					
ANR	4874558	Identifier	si		4874450	0					
ANR	4874559	Identifier	cb		4874450	1					
ANR	4874560	SizeofExpression	sizeof ( si )		4874450	1					
ANR	4874561	Sizeof	sizeof		4874450	0					
ANR	4874562	SizeofOperand	si		4874450	1					
ANR	4874563	WhileStatement	while ( argv [ i ] )		4874450	11					
ANR	4874564	Condition	argv [ i ]	119:8:2478:2484	4874450	0	True				
ANR	4874565	ArrayIndexing	argv [ i ]		4874450	0					
ANR	4874566	Identifier	argv		4874450	0					
ANR	4874567	Identifier	i		4874450	1					
ANR	4874568	CompoundStatement		20:2:438:457	4874450	1					
ANR	4874569	IdentifierDeclStatement	char * current = argv [ i ] ;	120:2:2491:2514	4874450	0	True				
ANR	4874570	IdentifierDecl	* current = argv [ i ]		4874450	0					
ANR	4874571	IdentifierDeclType	char *		4874450	0					
ANR	4874572	Identifier	current		4874450	1					
ANR	4874573	AssignmentExpression	* current = argv [ i ]		4874450	2		=			
ANR	4874574	Identifier	current		4874450	0					
ANR	4874575	ArrayIndexing	argv [ i ]		4874450	1					
ANR	4874576	Identifier	argv		4874450	0					
ANR	4874577	Identifier	i		4874450	1					
ANR	4874578	IdentifierDeclStatement	int quote_count = 0 ;	121:2:2518:2537	4874450	1	True				
ANR	4874579	IdentifierDecl	quote_count = 0		4874450	0					
ANR	4874580	IdentifierDeclType	int		4874450	0					
ANR	4874581	Identifier	quote_count		4874450	1					
ANR	4874582	AssignmentExpression	quote_count = 0		4874450	2		=			
ANR	4874583	Identifier	quote_count		4874450	0					
ANR	4874584	PrimaryExpression	0		4874450	1					
ANR	4874585	WhileStatement	"while ( ( current = strchr ( current , '""' ) ) )"		4874450	2					
ANR	4874586	Condition	"current = strchr ( current , '""' )"	122:9:2548:2580	4874450	0	True				
ANR	4874587	AssignmentExpression	"current = strchr ( current , '""' )"		4874450	0		=			
ANR	4874588	Identifier	current		4874450	0					
ANR	4874589	CallExpression	"strchr ( current , '""' )"		4874450	1					
ANR	4874590	Callee	strchr		4874450	0					
ANR	4874591	Identifier	strchr		4874450	0					
ANR	4874592	ArgumentList	current		4874450	1					
ANR	4874593	Argument	current		4874450	0					
ANR	4874594	Identifier	current		4874450	0					
ANR	4874595	Argument	"'""'"		4874450	1					
ANR	4874596	PrimaryExpression	"'""'"		4874450	0					
ANR	4874597	CompoundStatement		21:44:503:503	4874450	1					
ANR	4874598	ExpressionStatement	quote_count ++	123:3:2588:2602	4874450	0	True				
ANR	4874599	PostIncDecOperationExpression	quote_count ++		4874450	0					
ANR	4874600	Identifier	quote_count		4874450	0					
ANR	4874601	IncDec	++		4874450	1					
ANR	4874602	ExpressionStatement	cmd_len += strlen ( argv [ i ] )	125:2:2610:2637	4874450	3	True				
ANR	4874603	AssignmentExpression	cmd_len += strlen ( argv [ i ] )		4874450	0		+=			
ANR	4874604	Identifier	cmd_len		4874450	0					
ANR	4874605	CallExpression	strlen ( argv [ i ] )		4874450	1					
ANR	4874606	Callee	strlen		4874450	0					
ANR	4874607	Identifier	strlen		4874450	0					
ANR	4874608	ArgumentList	argv [ i ]		4874450	1					
ANR	4874609	Argument	argv [ i ]		4874450	0					
ANR	4874610	ArrayIndexing	argv [ i ]		4874450	0					
ANR	4874611	Identifier	argv		4874450	0					
ANR	4874612	Identifier	i		4874450	1					
ANR	4874613	ExpressionStatement	cmd_len += quote_count	126:2:2641:2663	4874450	4	True				
ANR	4874614	AssignmentExpression	cmd_len += quote_count		4874450	0		+=			
ANR	4874615	Identifier	cmd_len		4874450	0					
ANR	4874616	Identifier	quote_count		4874450	1					
ANR	4874617	ExpressionStatement	cmd_len += 2	127:2:2709:2721	4874450	5	True				
ANR	4874618	AssignmentExpression	cmd_len += 2		4874450	0		+=			
ANR	4874619	Identifier	cmd_len		4874450	0					
ANR	4874620	PrimaryExpression	2		4874450	1					
ANR	4874621	ExpressionStatement	i ++	128:2:2754:2757	4874450	6	True				
ANR	4874622	PostIncDecOperationExpression	i ++		4874450	0					
ANR	4874623	Identifier	i		4874450	0					
ANR	4874624	IncDec	++		4874450	1					
ANR	4874625	ExpressionStatement	cmd_len += i - 1	130:1:2763:2777	4874450	12	True				
ANR	4874626	AssignmentExpression	cmd_len += i - 1		4874450	0		+=			
ANR	4874627	Identifier	cmd_len		4874450	0					
ANR	4874628	AdditiveExpression	i - 1		4874450	1		-			
ANR	4874629	Identifier	i		4874450	0					
ANR	4874630	PrimaryExpression	1		4874450	1					
ANR	4874631	IdentifierDeclStatement	char * cmdline = malloc ( ( cmd_len + 1 ) * sizeof ( char ) ) ;	132:1:2802:2856	4874450	13	True				
ANR	4874632	IdentifierDecl	* cmdline = malloc ( ( cmd_len + 1 ) * sizeof ( char ) )		4874450	0					
ANR	4874633	IdentifierDeclType	char *		4874450	0					
ANR	4874634	Identifier	cmdline		4874450	1					
ANR	4874635	AssignmentExpression	* cmdline = malloc ( ( cmd_len + 1 ) * sizeof ( char ) )		4874450	2		=			
ANR	4874636	Identifier	cmdline		4874450	0					
ANR	4874637	CallExpression	malloc ( ( cmd_len + 1 ) * sizeof ( char ) )		4874450	1					
ANR	4874638	Callee	malloc		4874450	0					
ANR	4874639	Identifier	malloc		4874450	0					
ANR	4874640	ArgumentList	( cmd_len + 1 ) * sizeof ( char )		4874450	1					
ANR	4874641	Argument	( cmd_len + 1 ) * sizeof ( char )		4874450	0					
ANR	4874642	MultiplicativeExpression	( cmd_len + 1 ) * sizeof ( char )		4874450	0		*			
ANR	4874643	AdditiveExpression	cmd_len + 1		4874450	0		+			
ANR	4874644	Identifier	cmd_len		4874450	0					
ANR	4874645	PrimaryExpression	1		4874450	1					
ANR	4874646	SizeofExpression	sizeof ( char )		4874450	1					
ANR	4874647	Sizeof	sizeof		4874450	0					
ANR	4874648	SizeofOperand	char		4874450	1					
ANR	4874649	IdentifierDeclStatement	int cmd_i = 0 ;	133:1:2859:2872	4874450	14	True				
ANR	4874650	IdentifierDecl	cmd_i = 0		4874450	0					
ANR	4874651	IdentifierDeclType	int		4874450	0					
ANR	4874652	Identifier	cmd_i		4874450	1					
ANR	4874653	AssignmentExpression	cmd_i = 0		4874450	2		=			
ANR	4874654	Identifier	cmd_i		4874450	0					
ANR	4874655	PrimaryExpression	0		4874450	1					
ANR	4874656	ExpressionStatement	i = 0	134:1:2913:2918	4874450	15	True				
ANR	4874657	AssignmentExpression	i = 0		4874450	0		=			
ANR	4874658	Identifier	i		4874450	0					
ANR	4874659	PrimaryExpression	0		4874450	1					
ANR	4874660	WhileStatement	while ( argv [ i ] )		4874450	16					
ANR	4874661	Condition	argv [ i ]	135:8:2928:2934	4874450	0	True				
ANR	4874662	ArrayIndexing	argv [ i ]		4874450	0					
ANR	4874663	Identifier	argv		4874450	0					
ANR	4874664	Identifier	i		4874450	1					
ANR	4874665	CompoundStatement		40:2:935:948	4874450	1					
ANR	4874666	IfStatement	if ( i != 0 )		4874450	0					
ANR	4874667	Condition	i != 0	136:6:2945:2950	4874450	0	True				
ANR	4874668	EqualityExpression	i != 0		4874450	0		!=			
ANR	4874669	Identifier	i		4874450	0					
ANR	4874670	PrimaryExpression	0		4874450	1					
ANR	4874671	CompoundStatement		35:14:873:873	4874450	1					
ANR	4874672	ExpressionStatement	cmdline [ cmd_i ++ ] = ' '	137:3:2958:2980	4874450	0	True				
ANR	4874673	AssignmentExpression	cmdline [ cmd_i ++ ] = ' '		4874450	0		=			
ANR	4874674	ArrayIndexing	cmdline [ cmd_i ++ ]		4874450	0					
ANR	4874675	Identifier	cmdline		4874450	0					
ANR	4874676	PostIncDecOperationExpression	cmd_i ++		4874450	1					
ANR	4874677	Identifier	cmd_i		4874450	0					
ANR	4874678	IncDec	++		4874450	1					
ANR	4874679	PrimaryExpression	' '		4874450	1					
ANR	4874680	ExpressionStatement	"cmdline [ cmd_i ++ ] = '""'"	139:2:2988:3010	4874450	1	True				
ANR	4874681	AssignmentExpression	"cmdline [ cmd_i ++ ] = '""'"		4874450	0		=			
ANR	4874682	ArrayIndexing	cmdline [ cmd_i ++ ]		4874450	0					
ANR	4874683	Identifier	cmdline		4874450	0					
ANR	4874684	PostIncDecOperationExpression	cmd_i ++		4874450	1					
ANR	4874685	Identifier	cmd_i		4874450	0					
ANR	4874686	IncDec	++		4874450	1					
ANR	4874687	PrimaryExpression	"'""'"		4874450	1					
ANR	4874688	IdentifierDeclStatement	int arg_i = 0 ;	141:2:3015:3028	4874450	2	True				
ANR	4874689	IdentifierDecl	arg_i = 0		4874450	0					
ANR	4874690	IdentifierDeclType	int		4874450	0					
ANR	4874691	Identifier	arg_i		4874450	1					
ANR	4874692	AssignmentExpression	arg_i = 0		4874450	2		=			
ANR	4874693	Identifier	arg_i		4874450	0					
ANR	4874694	PrimaryExpression	0		4874450	1					
ANR	4874695	WhileStatement	while ( argv [ i ] [ arg_i ] )		4874450	3					
ANR	4874696	Condition	argv [ i ] [ arg_i ]	142:9:3089:3102	4874450	0	True				
ANR	4874697	ArrayIndexing	argv [ i ] [ arg_i ]		4874450	0					
ANR	4874698	ArrayIndexing	argv [ i ]		4874450	0					
ANR	4874699	Identifier	argv		4874450	0					
ANR	4874700	Identifier	i		4874450	1					
ANR	4874701	Identifier	arg_i		4874450	1					
ANR	4874702	CompoundStatement		42:3:1030:1053	4874450	1					
ANR	4874703	IdentifierDeclStatement	char c = argv [ i ] [ arg_i ] ;	143:3:3110:3133	4874450	0	True				
ANR	4874704	IdentifierDecl	c = argv [ i ] [ arg_i ]		4874450	0					
ANR	4874705	IdentifierDeclType	char		4874450	0					
ANR	4874706	Identifier	c		4874450	1					
ANR	4874707	AssignmentExpression	c = argv [ i ] [ arg_i ]		4874450	2		=			
ANR	4874708	Identifier	c		4874450	0					
ANR	4874709	ArrayIndexing	argv [ i ] [ arg_i ]		4874450	1					
ANR	4874710	ArrayIndexing	argv [ i ]		4874450	0					
ANR	4874711	Identifier	argv		4874450	0					
ANR	4874712	Identifier	i		4874450	1					
ANR	4874713	Identifier	arg_i		4874450	1					
ANR	4874714	IfStatement	"if ( c == '""' )"		4874450	1					
ANR	4874715	Condition	"c == '""'"	144:7:3142:3149	4874450	0	True				
ANR	4874716	EqualityExpression	"c == '""'"		4874450	0		==			
ANR	4874717	Identifier	c		4874450	0					
ANR	4874718	PrimaryExpression	"'""'"		4874450	1					
ANR	4874719	CompoundStatement		43:17:1072:1072	4874450	1					
ANR	4874720	ExpressionStatement	cmdline [ cmd_i ++ ] = '\\\\'	145:4:3158:3181	4874450	0	True				
ANR	4874721	AssignmentExpression	cmdline [ cmd_i ++ ] = '\\\\'		4874450	0		=			
ANR	4874722	ArrayIndexing	cmdline [ cmd_i ++ ]		4874450	0					
ANR	4874723	Identifier	cmdline		4874450	0					
ANR	4874724	PostIncDecOperationExpression	cmd_i ++		4874450	1					
ANR	4874725	Identifier	cmd_i		4874450	0					
ANR	4874726	IncDec	++		4874450	1					
ANR	4874727	PrimaryExpression	'\\\\'		4874450	1					
ANR	4874728	ExpressionStatement	cmdline [ cmd_i ++ ] = c	147:3:3191:3211	4874450	2	True				
ANR	4874729	AssignmentExpression	cmdline [ cmd_i ++ ] = c		4874450	0		=			
ANR	4874730	ArrayIndexing	cmdline [ cmd_i ++ ]		4874450	0					
ANR	4874731	Identifier	cmdline		4874450	0					
ANR	4874732	PostIncDecOperationExpression	cmd_i ++		4874450	1					
ANR	4874733	Identifier	cmd_i		4874450	0					
ANR	4874734	IncDec	++		4874450	1					
ANR	4874735	Identifier	c		4874450	1					
ANR	4874736	ExpressionStatement	arg_i ++	148:3:3216:3223	4874450	3	True				
ANR	4874737	PostIncDecOperationExpression	arg_i ++		4874450	0					
ANR	4874738	Identifier	arg_i		4874450	0					
ANR	4874739	IncDec	++		4874450	1					
ANR	4874740	ExpressionStatement	"cmdline [ cmd_i ++ ] = '""'"	151:2:3232:3254	4874450	4	True				
ANR	4874741	AssignmentExpression	"cmdline [ cmd_i ++ ] = '""'"		4874450	0		=			
ANR	4874742	ArrayIndexing	cmdline [ cmd_i ++ ]		4874450	0					
ANR	4874743	Identifier	cmdline		4874450	0					
ANR	4874744	PostIncDecOperationExpression	cmd_i ++		4874450	1					
ANR	4874745	Identifier	cmd_i		4874450	0					
ANR	4874746	IncDec	++		4874450	1					
ANR	4874747	PrimaryExpression	"'""'"		4874450	1					
ANR	4874748	ExpressionStatement	i ++	152:2:3258:3261	4874450	5	True				
ANR	4874749	PostIncDecOperationExpression	i ++		4874450	0					
ANR	4874750	Identifier	i		4874450	0					
ANR	4874751	IncDec	++		4874450	1					
ANR	4874752	ExpressionStatement	cmdline [ cmd_i ] = '\\0'	154:1:3267:3288	4874450	17	True				
ANR	4874753	AssignmentExpression	cmdline [ cmd_i ] = '\\0'		4874450	0		=			
ANR	4874754	ArrayIndexing	cmdline [ cmd_i ]		4874450	0					
ANR	4874755	Identifier	cmdline		4874450	0					
ANR	4874756	Identifier	cmd_i		4874450	1					
ANR	4874757	PrimaryExpression	'\\0'		4874450	1					
ANR	4874758	IdentifierDeclStatement	LPTSTR appname_ = r_sys_conv_utf8_to_win ( argv [ 0 ] ) ;	156:1:3292:3342	4874450	18	True				
ANR	4874759	IdentifierDecl	appname_ = r_sys_conv_utf8_to_win ( argv [ 0 ] )		4874450	0					
ANR	4874760	IdentifierDeclType	LPTSTR		4874450	0					
ANR	4874761	Identifier	appname_		4874450	1					
ANR	4874762	AssignmentExpression	appname_ = r_sys_conv_utf8_to_win ( argv [ 0 ] )		4874450	2		=			
ANR	4874763	Identifier	appname_		4874450	0					
ANR	4874764	CallExpression	r_sys_conv_utf8_to_win ( argv [ 0 ] )		4874450	1					
ANR	4874765	Callee	r_sys_conv_utf8_to_win		4874450	0					
ANR	4874766	Identifier	r_sys_conv_utf8_to_win		4874450	0					
ANR	4874767	ArgumentList	argv [ 0 ]		4874450	1					
ANR	4874768	Argument	argv [ 0 ]		4874450	0					
ANR	4874769	ArrayIndexing	argv [ 0 ]		4874450	0					
ANR	4874770	Identifier	argv		4874450	0					
ANR	4874771	PrimaryExpression	0		4874450	1					
ANR	4874772	IdentifierDeclStatement	LPTSTR cmdline_ = r_sys_conv_utf8_to_win ( cmdline ) ;	157:1:3345:3395	4874450	19	True				
ANR	4874773	IdentifierDecl	cmdline_ = r_sys_conv_utf8_to_win ( cmdline )		4874450	0					
ANR	4874774	IdentifierDeclType	LPTSTR		4874450	0					
ANR	4874775	Identifier	cmdline_		4874450	1					
ANR	4874776	AssignmentExpression	cmdline_ = r_sys_conv_utf8_to_win ( cmdline )		4874450	2		=			
ANR	4874777	Identifier	cmdline_		4874450	0					
ANR	4874778	CallExpression	r_sys_conv_utf8_to_win ( cmdline )		4874450	1					
ANR	4874779	Callee	r_sys_conv_utf8_to_win		4874450	0					
ANR	4874780	Identifier	r_sys_conv_utf8_to_win		4874450	0					
ANR	4874781	ArgumentList	cmdline		4874450	1					
ANR	4874782	Argument	cmdline		4874450	0					
ANR	4874783	Identifier	cmdline		4874450	0					
ANR	4874784	ExpressionStatement	free ( cmdline )	158:1:3398:3412	4874450	20	True				
ANR	4874785	CallExpression	free ( cmdline )		4874450	0					
ANR	4874786	Callee	free		4874450	0					
ANR	4874787	Identifier	free		4874450	0					
ANR	4874788	ArgumentList	cmdline		4874450	1					
ANR	4874789	Argument	cmdline		4874450	0					
ANR	4874790	Identifier	cmdline		4874450	0					
ANR	4874791	IfStatement	"if ( ! CreateProcess ( appname_ , cmdline_ , NULL , NULL , FALSE , CREATE_NEW_CONSOLE | DEBUG_ONLY_THIS_PROCESS , NULL , NULL , & si , & pi ) )"		4874450	21					
ANR	4874792	Condition	"! CreateProcess ( appname_ , cmdline_ , NULL , NULL , FALSE , CREATE_NEW_CONSOLE | DEBUG_ONLY_THIS_PROCESS , NULL , NULL , & si , & pi )"	160:5:3482:3617	4874450	0	True				
ANR	4874793	UnaryOperationExpression	"! CreateProcess ( appname_ , cmdline_ , NULL , NULL , FALSE , CREATE_NEW_CONSOLE | DEBUG_ONLY_THIS_PROCESS , NULL , NULL , & si , & pi )"		4874450	0					
ANR	4874794	UnaryOperator	!		4874450	0					
ANR	4874795	CallExpression	"CreateProcess ( appname_ , cmdline_ , NULL , NULL , FALSE , CREATE_NEW_CONSOLE | DEBUG_ONLY_THIS_PROCESS , NULL , NULL , & si , & pi )"		4874450	1					
ANR	4874796	Callee	CreateProcess		4874450	0					
ANR	4874797	Identifier	CreateProcess		4874450	0					
ANR	4874798	ArgumentList	appname_		4874450	1					
ANR	4874799	Argument	appname_		4874450	0					
ANR	4874800	Identifier	appname_		4874450	0					
ANR	4874801	Argument	cmdline_		4874450	1					
ANR	4874802	Identifier	cmdline_		4874450	0					
ANR	4874803	Argument	NULL		4874450	2					
ANR	4874804	Identifier	NULL		4874450	0					
ANR	4874805	Argument	NULL		4874450	3					
ANR	4874806	Identifier	NULL		4874450	0					
ANR	4874807	Argument	FALSE		4874450	4					
ANR	4874808	Identifier	FALSE		4874450	0					
ANR	4874809	Argument	CREATE_NEW_CONSOLE | DEBUG_ONLY_THIS_PROCESS		4874450	5					
ANR	4874810	InclusiveOrExpression	CREATE_NEW_CONSOLE | DEBUG_ONLY_THIS_PROCESS		4874450	0		|			
ANR	4874811	Identifier	CREATE_NEW_CONSOLE		4874450	0					
ANR	4874812	Identifier	DEBUG_ONLY_THIS_PROCESS		4874450	1					
ANR	4874813	Argument	NULL		4874450	6					
ANR	4874814	Identifier	NULL		4874450	0					
ANR	4874815	Argument	NULL		4874450	7					
ANR	4874816	Identifier	NULL		4874450	0					
ANR	4874817	Argument	& si		4874450	8					
ANR	4874818	UnaryOperationExpression	& si		4874450	0					
ANR	4874819	UnaryOperator	&		4874450	0					
ANR	4874820	Identifier	si		4874450	1					
ANR	4874821	Argument	& pi		4874450	9					
ANR	4874822	UnaryOperationExpression	& pi		4874450	0					
ANR	4874823	UnaryOperator	&		4874450	0					
ANR	4874824	Identifier	pi		4874450	1					
ANR	4874825	CompoundStatement		61:30:1540:1540	4874450	1					
ANR	4874826	ExpressionStatement	"r_sys_perror ( ""fork_and_ptraceme/CreateProcess"" )"	163:2:3624:3672	4874450	0	True				
ANR	4874827	CallExpression	"r_sys_perror ( ""fork_and_ptraceme/CreateProcess"" )"		4874450	0					
ANR	4874828	Callee	r_sys_perror		4874450	0					
ANR	4874829	Identifier	r_sys_perror		4874450	0					
ANR	4874830	ArgumentList	"""fork_and_ptraceme/CreateProcess"""		4874450	1					
ANR	4874831	Argument	"""fork_and_ptraceme/CreateProcess"""		4874450	0					
ANR	4874832	PrimaryExpression	"""fork_and_ptraceme/CreateProcess"""		4874450	0					
ANR	4874833	ExpressionStatement	free ( appname_ )	164:2:3676:3691	4874450	1	True				
ANR	4874834	CallExpression	free ( appname_ )		4874450	0					
ANR	4874835	Callee	free		4874450	0					
ANR	4874836	Identifier	free		4874450	0					
ANR	4874837	ArgumentList	appname_		4874450	1					
ANR	4874838	Argument	appname_		4874450	0					
ANR	4874839	Identifier	appname_		4874450	0					
ANR	4874840	ExpressionStatement	free ( cmdline_ )	165:2:3695:3710	4874450	2	True				
ANR	4874841	CallExpression	free ( cmdline_ )		4874450	0					
ANR	4874842	Callee	free		4874450	0					
ANR	4874843	Identifier	free		4874450	0					
ANR	4874844	ArgumentList	cmdline_		4874450	1					
ANR	4874845	Argument	cmdline_		4874450	0					
ANR	4874846	Identifier	cmdline_		4874450	0					
ANR	4874847	ReturnStatement	return - 1 ;	166:2:3714:3723	4874450	3	True				
ANR	4874848	UnaryOperationExpression	- 1		4874450	0					
ANR	4874849	UnaryOperator	-		4874450	0					
ANR	4874850	PrimaryExpression	1		4874450	1					
ANR	4874851	ExpressionStatement	free ( appname_ )	168:1:3729:3744	4874450	22	True				
ANR	4874852	CallExpression	free ( appname_ )		4874450	0					
ANR	4874853	Callee	free		4874450	0					
ANR	4874854	Identifier	free		4874450	0					
ANR	4874855	ArgumentList	appname_		4874450	1					
ANR	4874856	Argument	appname_		4874450	0					
ANR	4874857	Identifier	appname_		4874450	0					
ANR	4874858	ExpressionStatement	free ( cmdline_ )	169:1:3747:3762	4874450	23	True				
ANR	4874859	CallExpression	free ( cmdline_ )		4874450	0					
ANR	4874860	Callee	free		4874450	0					
ANR	4874861	Identifier	free		4874450	0					
ANR	4874862	ArgumentList	cmdline_		4874450	1					
ANR	4874863	Argument	cmdline_		4874450	0					
ANR	4874864	Identifier	cmdline_		4874450	0					
ANR	4874865	ExpressionStatement	r_str_argv_free ( argv )	170:1:3765:3787	4874450	24	True				
ANR	4874866	CallExpression	r_str_argv_free ( argv )		4874450	0					
ANR	4874867	Callee	r_str_argv_free		4874450	0					
ANR	4874868	Identifier	r_str_argv_free		4874450	0					
ANR	4874869	ArgumentList	argv		4874450	1					
ANR	4874870	Argument	argv		4874450	0					
ANR	4874871	Identifier	argv		4874450	0					
ANR	4874872	ExpressionStatement	pid = pi . dwProcessId	173:1:3827:3847	4874450	25	True				
ANR	4874873	AssignmentExpression	pid = pi . dwProcessId		4874450	0		=			
ANR	4874874	Identifier	pid		4874450	0					
ANR	4874875	MemberAccess	pi . dwProcessId		4874450	1					
ANR	4874876	Identifier	pi		4874450	0					
ANR	4874877	Identifier	dwProcessId		4874450	1					
ANR	4874878	ExpressionStatement	tid = pi . dwThreadId	174:1:3850:3869	4874450	26	True				
ANR	4874879	AssignmentExpression	tid = pi . dwThreadId		4874450	0		=			
ANR	4874880	Identifier	tid		4874450	0					
ANR	4874881	MemberAccess	pi . dwThreadId		4874450	1					
ANR	4874882	Identifier	pi		4874450	0					
ANR	4874883	Identifier	dwThreadId		4874450	1					
ANR	4874884	IfStatement	"if ( ! WaitForDebugEvent ( & de , 10000 ) )"		4874450	27					
ANR	4874885	Condition	"! WaitForDebugEvent ( & de , 10000 )"	177:5:3911:3941	4874450	0	True				
ANR	4874886	UnaryOperationExpression	"! WaitForDebugEvent ( & de , 10000 )"		4874450	0					
ANR	4874887	UnaryOperator	!		4874450	0					
ANR	4874888	CallExpression	"WaitForDebugEvent ( & de , 10000 )"		4874450	1					
ANR	4874889	Callee	WaitForDebugEvent		4874450	0					
ANR	4874890	Identifier	WaitForDebugEvent		4874450	0					
ANR	4874891	ArgumentList	& de		4874450	1					
ANR	4874892	Argument	& de		4874450	0					
ANR	4874893	UnaryOperationExpression	& de		4874450	0					
ANR	4874894	UnaryOperator	&		4874450	0					
ANR	4874895	Identifier	de		4874450	1					
ANR	4874896	Argument	10000		4874450	1					
ANR	4874897	PrimaryExpression	10000		4874450	0					
ANR	4874898	GotoStatement	goto err_fork ;	177:38:3944:3957	4874450	1	True				
ANR	4874899	Identifier	err_fork		4874450	0					
ANR	4874900	IfStatement	if ( de . dwDebugEventCode != CREATE_PROCESS_DEBUG_EVENT )		4874450	28					
ANR	4874901	Condition	de . dwDebugEventCode != CREATE_PROCESS_DEBUG_EVENT	180:5:4013:4061	4874450	0	True				
ANR	4874902	EqualityExpression	de . dwDebugEventCode != CREATE_PROCESS_DEBUG_EVENT		4874450	0		!=			
ANR	4874903	MemberAccess	de . dwDebugEventCode		4874450	0					
ANR	4874904	Identifier	de		4874450	0					
ANR	4874905	Identifier	dwDebugEventCode		4874450	1					
ANR	4874906	Identifier	CREATE_PROCESS_DEBUG_EVENT		4874450	1					
ANR	4874907	CompoundStatement		79:56:1984:1984	4874450	1					
ANR	4874908	ExpressionStatement	"eprintf ( ""exception code 0x%04x\\n"" , ( ut32 ) de . dwDebugEventCode )"	181:2:4068:4130	4874450	0	True				
ANR	4874909	CallExpression	"eprintf ( ""exception code 0x%04x\\n"" , ( ut32 ) de . dwDebugEventCode )"		4874450	0					
ANR	4874910	Callee	eprintf		4874450	0					
ANR	4874911	Identifier	eprintf		4874450	0					
ANR	4874912	ArgumentList	"""exception code 0x%04x\\n"""		4874450	1					
ANR	4874913	Argument	"""exception code 0x%04x\\n"""		4874450	0					
ANR	4874914	PrimaryExpression	"""exception code 0x%04x\\n"""		4874450	0					
ANR	4874915	Argument	( ut32 ) de . dwDebugEventCode		4874450	1					
ANR	4874916	CastExpression	( ut32 ) de . dwDebugEventCode		4874450	0					
ANR	4874917	CastTarget	ut32		4874450	0					
ANR	4874918	MemberAccess	de . dwDebugEventCode		4874450	1					
ANR	4874919	Identifier	de		4874450	0					
ANR	4874920	Identifier	dwDebugEventCode		4874450	1					
ANR	4874921	GotoStatement	goto err_fork ;	182:2:4134:4147	4874450	1	True				
ANR	4874922	Identifier	err_fork		4874450	0					
ANR	4874923	ExpressionStatement	"eprintf ( ""Spawned new process with pid %d, tid = %d\\n"" , pid , tid )"	185:1:4154:4219	4874450	29	True				
ANR	4874924	CallExpression	"eprintf ( ""Spawned new process with pid %d, tid = %d\\n"" , pid , tid )"		4874450	0					
ANR	4874925	Callee	eprintf		4874450	0					
ANR	4874926	Identifier	eprintf		4874450	0					
ANR	4874927	ArgumentList	"""Spawned new process with pid %d, tid = %d\\n"""		4874450	1					
ANR	4874928	Argument	"""Spawned new process with pid %d, tid = %d\\n"""		4874450	0					
ANR	4874929	PrimaryExpression	"""Spawned new process with pid %d, tid = %d\\n"""		4874450	0					
ANR	4874930	Argument	pid		4874450	1					
ANR	4874931	Identifier	pid		4874450	0					
ANR	4874932	Argument	tid		4874450	2					
ANR	4874933	Identifier	tid		4874450	0					
ANR	4874934	ExpressionStatement	winbase = ( ut64 ) de . u . CreateProcessInfo . lpBaseOfImage	186:1:4222:4274	4874450	30	True				
ANR	4874935	AssignmentExpression	winbase = ( ut64 ) de . u . CreateProcessInfo . lpBaseOfImage		4874450	0		=			
ANR	4874936	Identifier	winbase		4874450	0					
ANR	4874937	CastExpression	( ut64 ) de . u . CreateProcessInfo . lpBaseOfImage		4874450	1					
ANR	4874938	CastTarget	ut64		4874450	0					
ANR	4874939	MemberAccess	de . u . CreateProcessInfo . lpBaseOfImage		4874450	1					
ANR	4874940	MemberAccess	de . u . CreateProcessInfo		4874450	0					
ANR	4874941	MemberAccess	de . u		4874450	0					
ANR	4874942	Identifier	de		4874450	0					
ANR	4874943	Identifier	u		4874450	1					
ANR	4874944	Identifier	CreateProcessInfo		4874450	1					
ANR	4874945	Identifier	lpBaseOfImage		4874450	1					
ANR	4874946	ExpressionStatement	wintid = tid	187:1:4277:4289	4874450	31	True				
ANR	4874947	AssignmentExpression	wintid = tid		4874450	0		=			
ANR	4874948	Identifier	wintid		4874450	0					
ANR	4874949	Identifier	tid		4874450	1					
ANR	4874950	ReturnStatement	return pid ;	188:1:4292:4302	4874450	32	True				
ANR	4874951	Identifier	pid		4874450	0					
ANR	4874952	Label	err_fork :	190:0:4305:4313	4874450	33	True				
ANR	4874953	Identifier	err_fork		4874450	0					
ANR	4874954	ExpressionStatement	"eprintf ( ""ERRFORK\\n"" )"	191:1:4316:4337	4874450	34	True				
ANR	4874955	CallExpression	"eprintf ( ""ERRFORK\\n"" )"		4874450	0					
ANR	4874956	Callee	eprintf		4874450	0					
ANR	4874957	Identifier	eprintf		4874450	0					
ANR	4874958	ArgumentList	"""ERRFORK\\n"""		4874450	1					
ANR	4874959	Argument	"""ERRFORK\\n"""		4874450	0					
ANR	4874960	PrimaryExpression	"""ERRFORK\\n"""		4874450	0					
ANR	4874961	ExpressionStatement	"TerminateProcess ( pi . hProcess , 1 )"	192:1:4340:4373	4874450	35	True				
ANR	4874962	CallExpression	"TerminateProcess ( pi . hProcess , 1 )"		4874450	0					
ANR	4874963	Callee	TerminateProcess		4874450	0					
ANR	4874964	Identifier	TerminateProcess		4874450	0					
ANR	4874965	ArgumentList	pi . hProcess		4874450	1					
ANR	4874966	Argument	pi . hProcess		4874450	0					
ANR	4874967	MemberAccess	pi . hProcess		4874450	0					
ANR	4874968	Identifier	pi		4874450	0					
ANR	4874969	Identifier	hProcess		4874450	1					
ANR	4874970	Argument	1		4874450	1					
ANR	4874971	PrimaryExpression	1		4874450	0					
ANR	4874972	ExpressionStatement	CloseHandle ( pi . hThread )	193:1:4376:4400	4874450	36	True				
ANR	4874973	CallExpression	CloseHandle ( pi . hThread )		4874450	0					
ANR	4874974	Callee	CloseHandle		4874450	0					
ANR	4874975	Identifier	CloseHandle		4874450	0					
ANR	4874976	ArgumentList	pi . hThread		4874450	1					
ANR	4874977	Argument	pi . hThread		4874450	0					
ANR	4874978	MemberAccess	pi . hThread		4874450	0					
ANR	4874979	Identifier	pi		4874450	0					
ANR	4874980	Identifier	hThread		4874450	1					
ANR	4874981	ExpressionStatement	CloseHandle ( pi . hProcess )	194:1:4403:4428	4874450	37	True				
ANR	4874982	CallExpression	CloseHandle ( pi . hProcess )		4874450	0					
ANR	4874983	Callee	CloseHandle		4874450	0					
ANR	4874984	Identifier	CloseHandle		4874450	0					
ANR	4874985	ArgumentList	pi . hProcess		4874450	1					
ANR	4874986	Argument	pi . hProcess		4874450	0					
ANR	4874987	MemberAccess	pi . hProcess		4874450	0					
ANR	4874988	Identifier	pi		4874450	0					
ANR	4874989	Identifier	hProcess		4874450	1					
ANR	4874990	ReturnStatement	return - 1 ;	195:1:4431:4440	4874450	38	True				
ANR	4874991	UnaryOperationExpression	- 1		4874450	0					
ANR	4874992	UnaryOperator	-		4874450	0					
ANR	4874993	PrimaryExpression	1		4874450	1					
ANR	4874994	ReturnType	static int		4874450	1					
ANR	4874995	Identifier	fork_and_ptraceme		4874450	2					
ANR	4874996	ParameterList	"RIO * io , int bits , const char * cmd"		4874450	3					
ANR	4874997	Parameter	RIO * io	102:29:2043:2049	4874450	0	True				
ANR	4874998	ParameterType	RIO *		4874450	0					
ANR	4874999	Identifier	io		4874450	1					
ANR	4875000	Parameter	int bits	102:38:2052:2059	4874450	1	True				
ANR	4875001	ParameterType	int		4874450	0					
ANR	4875002	Identifier	bits		4874450	1					
ANR	4875003	Parameter	const char * cmd	102:48:2062:2076	4874450	2	True				
ANR	4875004	ParameterType	const char *		4874450	0					
ANR	4875005	Identifier	cmd		4874450	1					
ANR	4875006	CFGEntryNode	ENTRY		4874450		True				
ANR	4875007	CFGExitNode	EXIT		4874450		True				
ANR	4875008	Symbol	de		4874450						
ANR	4875009	Symbol	& si		4874450						
ANR	4875010	Symbol	cmd_i		4874450						
ANR	4875011	Symbol	strchr		4874450						
ANR	4875012	Symbol	pid		4874450						
ANR	4875013	Symbol	* argv		4874450						
ANR	4875014	Symbol	tid		4874450						
ANR	4875015	Symbol	strlen		4874450						
ANR	4875016	Symbol	cmdline_		4874450						
ANR	4875017	Symbol	cmdline		4874450						
ANR	4875018	Symbol	* * argv		4874450						
ANR	4875019	Symbol	* cmd		4874450						
ANR	4875020	Symbol	CreateProcess		4874450						
ANR	4875021	Symbol	* * i		4874450						
ANR	4875022	Symbol	& pi		4874450						
ANR	4875023	Symbol	NULL		4874450						
ANR	4875024	Symbol	* cmdline		4874450						
ANR	4875025	Symbol	io		4874450						
ANR	4875026	Symbol	cmd_len		4874450						
ANR	4875027	Symbol	* arg_i		4874450						
ANR	4875028	Symbol	de . u		4874450						
ANR	4875029	Symbol	bits		4874450						
ANR	4875030	Symbol	* cmd_i		4874450						
ANR	4875031	Symbol	& de		4874450						
ANR	4875032	Symbol	r_str_appendf		4874450						
ANR	4875033	Symbol	cmd		4874450						
ANR	4875034	Symbol	r_sys_conv_utf8_to_win		4874450						
ANR	4875035	Symbol	wintid		4874450						
ANR	4875036	Symbol	winbase		4874450						
ANR	4875037	Symbol	de . u . CreateProcessInfo . lpBaseOfImage		4874450						
ANR	4875038	Symbol	pi . hThread		4874450						
ANR	4875039	Symbol	arg_i		4874450						
ANR	4875040	Symbol	argv		4874450						
ANR	4875041	Symbol	pi . dwProcessId		4874450						
ANR	4875042	Symbol	* io		4874450						
ANR	4875043	Symbol	CREATE_PROCESS_DEBUG_EVENT		4874450						
ANR	4875044	Symbol	current		4874450						
ANR	4875045	Symbol	io -> args		4874450						
ANR	4875046	Symbol	appname_		4874450						
ANR	4875047	Symbol	si		4874450						
ANR	4875048	Symbol	_cmd		4874450						
ANR	4875049	Symbol	CREATE_NEW_CONSOLE		4874450						
ANR	4875050	Symbol	quote_count		4874450						
ANR	4875051	Symbol	r_str_argv		4874450						
ANR	4875052	Symbol	malloc		4874450						
ANR	4875053	Symbol	de . u . CreateProcessInfo		4874450						
ANR	4875054	Symbol	c		4874450						
ANR	4875055	Symbol	pi . hProcess		4874450						
ANR	4875056	Symbol	i		4874450						
ANR	4875057	Symbol	si . cb		4874450						
ANR	4875058	Symbol	de . dwDebugEventCode		4874450						
ANR	4875059	Symbol	* i		4874450						
ANR	4875060	Symbol	pi		4874450						
ANR	4875061	Symbol	pi . dwThreadId		4874450						
ANR	4875062	Symbol	FALSE		4874450						
ANR	4875063	Symbol	strdup		4874450						
ANR	4875064	Symbol	DEBUG_ONLY_THIS_PROCESS		4874450						
ANR	4875065	Symbol	WaitForDebugEvent		4874450						
ANR	4875066	Function	inferior_abort_handler	202:0:4533:4645							
ANR	4875067	FunctionDef	inferior_abort_handler (int pid)		4875066	0					
ANR	4875068	CompoundStatement		202:44:4577:4645	4875066	0					
ANR	4875069	ExpressionStatement	"eprintf ( ""Inferior received signal SIGABRT. Executing BKPT.\\n"" )"	203:1:4580:4643	4875066	0	True				
ANR	4875070	CallExpression	"eprintf ( ""Inferior received signal SIGABRT. Executing BKPT.\\n"" )"		4875066	0					
ANR	4875071	Callee	eprintf		4875066	0					
ANR	4875072	Identifier	eprintf		4875066	0					
ANR	4875073	ArgumentList	"""Inferior received signal SIGABRT. Executing BKPT.\\n"""		4875066	1					
ANR	4875074	Argument	"""Inferior received signal SIGABRT. Executing BKPT.\\n"""		4875066	0					
ANR	4875075	PrimaryExpression	"""Inferior received signal SIGABRT. Executing BKPT.\\n"""		4875066	0					
ANR	4875076	ReturnType	static void		4875066	1					
ANR	4875077	Identifier	inferior_abort_handler		4875066	2					
ANR	4875078	ParameterList	int pid		4875066	3					
ANR	4875079	Parameter	int pid	202:35:4568:4574	4875066	0	True				
ANR	4875080	ParameterType	int		4875066	0					
ANR	4875081	Identifier	pid		4875066	1					
ANR	4875082	CFGEntryNode	ENTRY		4875066		True				
ANR	4875083	CFGExitNode	EXIT		4875066		True				
ANR	4875084	Symbol	pid		4875066						
ANR	4875085	Function	trace_me	207:0:4655:5180							
ANR	4875086	FunctionDef	trace_me ()		4875085	0					
ANR	4875087	CompoundStatement		207:28:4683:5180	4875085	0					
ANR	4875088	ExpressionStatement	"signal ( SIGTRAP , SIG_IGN )"	209:1:4700:4725	4875085	0	True				
ANR	4875089	CallExpression	"signal ( SIGTRAP , SIG_IGN )"		4875085	0					
ANR	4875090	Callee	signal		4875085	0					
ANR	4875091	Identifier	signal		4875085	0					
ANR	4875092	ArgumentList	SIGTRAP		4875085	1					
ANR	4875093	Argument	SIGTRAP		4875085	0					
ANR	4875094	Identifier	SIGTRAP		4875085	0					
ANR	4875095	Argument	SIG_IGN		4875085	1					
ANR	4875096	Identifier	SIG_IGN		4875085	0					
ANR	4875097	ExpressionStatement	"signal ( SIGABRT , inferior_abort_handler )"	213:1:4872:4912	4875085	1	True				
ANR	4875098	CallExpression	"signal ( SIGABRT , inferior_abort_handler )"		4875085	0					
ANR	4875099	Callee	signal		4875085	0					
ANR	4875100	Identifier	signal		4875085	0					
ANR	4875101	ArgumentList	SIGABRT		4875085	1					
ANR	4875102	Argument	SIGABRT		4875085	0					
ANR	4875103	Identifier	SIGABRT		4875085	0					
ANR	4875104	Argument	inferior_abort_handler		4875085	1					
ANR	4875105	Identifier	inferior_abort_handler		4875085	0					
ANR	4875106	IfStatement	"if ( ptrace ( PT_TRACE_ME , 0 , 0 , 0 ) != 0 )"		4875085	2					
ANR	4875107	Condition	"ptrace ( PT_TRACE_ME , 0 , 0 , 0 ) != 0"	214:5:4919:4952	4875085	0	True				
ANR	4875108	EqualityExpression	"ptrace ( PT_TRACE_ME , 0 , 0 , 0 ) != 0"		4875085	0		!=			
ANR	4875109	CallExpression	"ptrace ( PT_TRACE_ME , 0 , 0 , 0 )"		4875085	0					
ANR	4875110	Callee	ptrace		4875085	0					
ANR	4875111	Identifier	ptrace		4875085	0					
ANR	4875112	ArgumentList	PT_TRACE_ME		4875085	1					
ANR	4875113	Argument	PT_TRACE_ME		4875085	0					
ANR	4875114	Identifier	PT_TRACE_ME		4875085	0					
ANR	4875115	Argument	0		4875085	1					
ANR	4875116	PrimaryExpression	0		4875085	0					
ANR	4875117	Argument	0		4875085	2					
ANR	4875118	PrimaryExpression	0		4875085	0					
ANR	4875119	Argument	0		4875085	3					
ANR	4875120	PrimaryExpression	0		4875085	0					
ANR	4875121	PrimaryExpression	0		4875085	1					
ANR	4875122	CompoundStatement		8:41:271:271	4875085	1					
ANR	4875123	ExpressionStatement	"r_sys_perror ( ""ptrace-traceme"" )"	215:2:4959:4990	4875085	0	True				
ANR	4875124	CallExpression	"r_sys_perror ( ""ptrace-traceme"" )"		4875085	0					
ANR	4875125	Callee	r_sys_perror		4875085	0					
ANR	4875126	Identifier	r_sys_perror		4875085	0					
ANR	4875127	ArgumentList	"""ptrace-traceme"""		4875085	1					
ANR	4875128	Argument	"""ptrace-traceme"""		4875085	0					
ANR	4875129	PrimaryExpression	"""ptrace-traceme"""		4875085	0					
ANR	4875130	ExpressionStatement	"ptrace ( PT_SIGEXC , getpid ( ) , NULL , 0 )"	218:1:5010:5047	4875085	3	True				
ANR	4875131	CallExpression	"ptrace ( PT_SIGEXC , getpid ( ) , NULL , 0 )"		4875085	0					
ANR	4875132	Callee	ptrace		4875085	0					
ANR	4875133	Identifier	ptrace		4875085	0					
ANR	4875134	ArgumentList	PT_SIGEXC		4875085	1					
ANR	4875135	Argument	PT_SIGEXC		4875085	0					
ANR	4875136	Identifier	PT_SIGEXC		4875085	0					
ANR	4875137	Argument	getpid ( )		4875085	1					
ANR	4875138	CallExpression	getpid ( )		4875085	0					
ANR	4875139	Callee	getpid		4875085	0					
ANR	4875140	Identifier	getpid		4875085	0					
ANR	4875141	ArgumentList			4875085	1					
ANR	4875142	Argument	NULL		4875085	2					
ANR	4875143	Identifier	NULL		4875085	0					
ANR	4875144	Argument	0		4875085	3					
ANR	4875145	PrimaryExpression	0		4875085	0					
ANR	4875146	ReturnType	static void		4875085	1					
ANR	4875147	Identifier	trace_me		4875085	2					
ANR	4875148	ParameterList			4875085	3					
ANR	4875149	CFGEntryNode	ENTRY		4875085		True				
ANR	4875150	CFGExitNode	EXIT		4875085		True				
ANR	4875151	Symbol	ptrace		4875085						
ANR	4875152	Symbol	NULL		4875085						
ANR	4875153	Symbol	inferior_abort_handler		4875085						
ANR	4875154	Symbol	PT_SIGEXC		4875085						
ANR	4875155	Symbol	SIGTRAP		4875085						
ANR	4875156	Symbol	SIG_IGN		4875085						
ANR	4875157	Symbol	SIGABRT		4875085						
ANR	4875158	Symbol	getpid		4875085						
ANR	4875159	Symbol	PT_TRACE_ME		4875085						
ANR	4875160	Function	handle_posix_error	229:0:5190:5546							
ANR	4875161	FunctionDef	handle_posix_error (int err)		4875160	0					
ANR	4875162	CompoundStatement		229:40:5230:5546	4875160	0					
ANR	4875163	SwitchStatement	switch ( err )		4875160	0					
ANR	4875164	Condition	err	230:9:5241:5243	4875160	0	True				
ANR	4875165	Identifier	err		4875160	0					
ANR	4875166	CompoundStatement		2:14:15:15	4875160	1					
ANR	4875167	Label	case 0 :	231:1:5249:5255	4875160	0	True				
ANR	4875168	BreakStatement	break ;	233:2:5287:5292	4875160	1	True				
ANR	4875169	Label	case 22 :	234:1:5295:5302	4875160	2	True				
ANR	4875170	ExpressionStatement	"eprintf ( ""posix_spawnp: Invalid argument\\n"" )"	235:2:5306:5350	4875160	3	True				
ANR	4875171	CallExpression	"eprintf ( ""posix_spawnp: Invalid argument\\n"" )"		4875160	0					
ANR	4875172	Callee	eprintf		4875160	0					
ANR	4875173	Identifier	eprintf		4875160	0					
ANR	4875174	ArgumentList	"""posix_spawnp: Invalid argument\\n"""		4875160	1					
ANR	4875175	Argument	"""posix_spawnp: Invalid argument\\n"""		4875160	0					
ANR	4875176	PrimaryExpression	"""posix_spawnp: Invalid argument\\n"""		4875160	0					
ANR	4875177	BreakStatement	break ;	236:2:5354:5359	4875160	4	True				
ANR	4875178	Label	case 86 :	237:1:5362:5369	4875160	5	True				
ANR	4875179	ExpressionStatement	"eprintf ( ""Unsupported architecture. Please specify -b 32\\n"" )"	238:2:5373:5433	4875160	6	True				
ANR	4875180	CallExpression	"eprintf ( ""Unsupported architecture. Please specify -b 32\\n"" )"		4875160	0					
ANR	4875181	Callee	eprintf		4875160	0					
ANR	4875182	Identifier	eprintf		4875160	0					
ANR	4875183	ArgumentList	"""Unsupported architecture. Please specify -b 32\\n"""		4875160	1					
ANR	4875184	Argument	"""Unsupported architecture. Please specify -b 32\\n"""		4875160	0					
ANR	4875185	PrimaryExpression	"""Unsupported architecture. Please specify -b 32\\n"""		4875160	0					
ANR	4875186	BreakStatement	break ;	239:2:5437:5442	4875160	7	True				
ANR	4875187	Label	default :	240:1:5445:5452	4875160	8	True				
ANR	4875188	Identifier	default		4875160	0					
ANR	4875189	ExpressionStatement	"eprintf ( ""posix_spawnp: unknown error %d\\n"" , err )"	241:2:5456:5505	4875160	9	True				
ANR	4875190	CallExpression	"eprintf ( ""posix_spawnp: unknown error %d\\n"" , err )"		4875160	0					
ANR	4875191	Callee	eprintf		4875160	0					
ANR	4875192	Identifier	eprintf		4875160	0					
ANR	4875193	ArgumentList	"""posix_spawnp: unknown error %d\\n"""		4875160	1					
ANR	4875194	Argument	"""posix_spawnp: unknown error %d\\n"""		4875160	0					
ANR	4875195	PrimaryExpression	"""posix_spawnp: unknown error %d\\n"""		4875160	0					
ANR	4875196	Argument	err		4875160	1					
ANR	4875197	Identifier	err		4875160	0					
ANR	4875198	ExpressionStatement	"perror ( ""posix_spawnp"" )"	242:2:5509:5532	4875160	10	True				
ANR	4875199	CallExpression	"perror ( ""posix_spawnp"" )"		4875160	0					
ANR	4875200	Callee	perror		4875160	0					
ANR	4875201	Identifier	perror		4875160	0					
ANR	4875202	ArgumentList	"""posix_spawnp"""		4875160	1					
ANR	4875203	Argument	"""posix_spawnp"""		4875160	0					
ANR	4875204	PrimaryExpression	"""posix_spawnp"""		4875160	0					
ANR	4875205	BreakStatement	break ;	243:2:5536:5541	4875160	11	True				
ANR	4875206	ReturnType	static void		4875160	1					
ANR	4875207	Identifier	handle_posix_error		4875160	2					
ANR	4875208	ParameterList	int err		4875160	3					
ANR	4875209	Parameter	int err	229:31:5221:5227	4875160	0	True				
ANR	4875210	ParameterType	int		4875160	0					
ANR	4875211	Identifier	err		4875160	1					
ANR	4875212	CFGEntryNode	ENTRY		4875160		True				
ANR	4875213	CFGExitNode	EXIT		4875160		True				
ANR	4875214	Symbol	err		4875160						
ANR	4875215	Function	_get_run_profile	247:0:5549:6478							
ANR	4875216	FunctionDef	"_get_run_profile (RIO * io , int bits , char * * argv)"		4875215	0					
ANR	4875217	CompoundStatement		247:69:5618:6478	4875215	0					
ANR	4875218	IdentifierDeclStatement	char * expr = NULL ;	248:1:5621:5638	4875215	0	True				
ANR	4875219	IdentifierDecl	* expr = NULL		4875215	0					
ANR	4875220	IdentifierDeclType	char *		4875215	0					
ANR	4875221	Identifier	expr		4875215	1					
ANR	4875222	AssignmentExpression	* expr = NULL		4875215	2		=			
ANR	4875223	Identifier	NULL		4875215	0					
ANR	4875224	Identifier	NULL		4875215	1					
ANR	4875225	IdentifierDeclStatement	int i ;	249:1:5641:5646	4875215	1	True				
ANR	4875226	IdentifierDecl	i		4875215	0					
ANR	4875227	IdentifierDeclType	int		4875215	0					
ANR	4875228	Identifier	i		4875215	1					
ANR	4875229	IdentifierDeclStatement	RRunProfile * rp = r_run_new ( NULL ) ;	250:1:5649:5683	4875215	2	True				
ANR	4875230	IdentifierDecl	* rp = r_run_new ( NULL )		4875215	0					
ANR	4875231	IdentifierDeclType	RRunProfile *		4875215	0					
ANR	4875232	Identifier	rp		4875215	1					
ANR	4875233	AssignmentExpression	* rp = r_run_new ( NULL )		4875215	2		=			
ANR	4875234	Identifier	rp		4875215	0					
ANR	4875235	CallExpression	r_run_new ( NULL )		4875215	1					
ANR	4875236	Callee	r_run_new		4875215	0					
ANR	4875237	Identifier	r_run_new		4875215	0					
ANR	4875238	ArgumentList	NULL		4875215	1					
ANR	4875239	Argument	NULL		4875215	0					
ANR	4875240	Identifier	NULL		4875215	0					
ANR	4875241	IfStatement	if ( ! rp )		4875215	3					
ANR	4875242	Condition	! rp	251:5:5690:5692	4875215	0	True				
ANR	4875243	UnaryOperationExpression	! rp		4875215	0					
ANR	4875244	UnaryOperator	!		4875215	0					
ANR	4875245	Identifier	rp		4875215	1					
ANR	4875246	CompoundStatement		5:10:76:76	4875215	1					
ANR	4875247	ReturnStatement	return NULL ;	252:2:5699:5710	4875215	0	True				
ANR	4875248	Identifier	NULL		4875215	0					
ANR	4875249	ForStatement	for ( i = 0 ; argv [ i ] ; i ++ )		4875215	4					
ANR	4875250	ForInit	i = 0 ;	254:6:5721:5726	4875215	0	True				
ANR	4875251	AssignmentExpression	i = 0		4875215	0		=			
ANR	4875252	Identifier	i		4875215	0					
ANR	4875253	PrimaryExpression	0		4875215	1					
ANR	4875254	Condition	argv [ i ]	254:13:5728:5734	4875215	1	True				
ANR	4875255	ArrayIndexing	argv [ i ]		4875215	0					
ANR	4875256	Identifier	argv		4875215	0					
ANR	4875257	Identifier	i		4875215	1					
ANR	4875258	PostIncDecOperationExpression	i ++	254:22:5737:5739	4875215	2	True				
ANR	4875259	Identifier	i		4875215	0					
ANR	4875260	IncDec	++		4875215	1					
ANR	4875261	CompoundStatement		8:27:123:123	4875215	3					
ANR	4875262	ExpressionStatement	rp -> _args [ i ] = argv [ i ]	255:2:5746:5768	4875215	0	True				
ANR	4875263	AssignmentExpression	rp -> _args [ i ] = argv [ i ]		4875215	0		=			
ANR	4875264	ArrayIndexing	rp -> _args [ i ]		4875215	0					
ANR	4875265	PtrMemberAccess	rp -> _args		4875215	0					
ANR	4875266	Identifier	rp		4875215	0					
ANR	4875267	Identifier	_args		4875215	1					
ANR	4875268	Identifier	i		4875215	1					
ANR	4875269	ArrayIndexing	argv [ i ]		4875215	1					
ANR	4875270	Identifier	argv		4875215	0					
ANR	4875271	Identifier	i		4875215	1					
ANR	4875272	ExpressionStatement	rp -> _args [ i ] = NULL	257:1:5774:5793	4875215	5	True				
ANR	4875273	AssignmentExpression	rp -> _args [ i ] = NULL		4875215	0		=			
ANR	4875274	ArrayIndexing	rp -> _args [ i ]		4875215	0					
ANR	4875275	PtrMemberAccess	rp -> _args		4875215	0					
ANR	4875276	Identifier	rp		4875215	0					
ANR	4875277	Identifier	_args		4875215	1					
ANR	4875278	Identifier	i		4875215	1					
ANR	4875279	Identifier	NULL		4875215	1					
ANR	4875280	IfStatement	if ( ! argv [ 0 ] )		4875215	6					
ANR	4875281	Condition	! argv [ 0 ]	258:5:5800:5807	4875215	0	True				
ANR	4875282	UnaryOperationExpression	! argv [ 0 ]		4875215	0					
ANR	4875283	UnaryOperator	!		4875215	0					
ANR	4875284	ArrayIndexing	argv [ 0 ]		4875215	1					
ANR	4875285	Identifier	argv		4875215	0					
ANR	4875286	PrimaryExpression	0		4875215	1					
ANR	4875287	CompoundStatement		12:15:191:191	4875215	1					
ANR	4875288	ExpressionStatement	r_run_free ( rp )	259:2:5814:5829	4875215	0	True				
ANR	4875289	CallExpression	r_run_free ( rp )		4875215	0					
ANR	4875290	Callee	r_run_free		4875215	0					
ANR	4875291	Identifier	r_run_free		4875215	0					
ANR	4875292	ArgumentList	rp		4875215	1					
ANR	4875293	Argument	rp		4875215	0					
ANR	4875294	Identifier	rp		4875215	0					
ANR	4875295	ReturnStatement	return NULL ;	260:2:5833:5844	4875215	1	True				
ANR	4875296	Identifier	NULL		4875215	0					
ANR	4875297	ExpressionStatement	rp -> _program = strdup ( argv [ 0 ] )	262:1:5850:5881	4875215	7	True				
ANR	4875298	AssignmentExpression	rp -> _program = strdup ( argv [ 0 ] )		4875215	0		=			
ANR	4875299	PtrMemberAccess	rp -> _program		4875215	0					
ANR	4875300	Identifier	rp		4875215	0					
ANR	4875301	Identifier	_program		4875215	1					
ANR	4875302	CallExpression	strdup ( argv [ 0 ] )		4875215	1					
ANR	4875303	Callee	strdup		4875215	0					
ANR	4875304	Identifier	strdup		4875215	0					
ANR	4875305	ArgumentList	argv [ 0 ]		4875215	1					
ANR	4875306	Argument	argv [ 0 ]		4875215	0					
ANR	4875307	ArrayIndexing	argv [ 0 ]		4875215	0					
ANR	4875308	Identifier	argv		4875215	0					
ANR	4875309	PrimaryExpression	0		4875215	1					
ANR	4875310	ExpressionStatement	rp -> _dodebug = true	264:1:5885:5904	4875215	8	True				
ANR	4875311	AssignmentExpression	rp -> _dodebug = true		4875215	0		=			
ANR	4875312	PtrMemberAccess	rp -> _dodebug		4875215	0					
ANR	4875313	Identifier	rp		4875215	0					
ANR	4875314	Identifier	_dodebug		4875215	1					
ANR	4875315	Identifier	true		4875215	1					
ANR	4875316	IfStatement	if ( io -> runprofile && * io -> runprofile )		4875215	9					
ANR	4875317	Condition	io -> runprofile && * io -> runprofile	265:5:5911:5943	4875215	0	True				
ANR	4875318	AndExpression	io -> runprofile && * io -> runprofile		4875215	0		&&			
ANR	4875319	PtrMemberAccess	io -> runprofile		4875215	0					
ANR	4875320	Identifier	io		4875215	0					
ANR	4875321	Identifier	runprofile		4875215	1					
ANR	4875322	UnaryOperationExpression	* io -> runprofile		4875215	1					
ANR	4875323	UnaryOperator	*		4875215	0					
ANR	4875324	PtrMemberAccess	io -> runprofile		4875215	1					
ANR	4875325	Identifier	io		4875215	0					
ANR	4875326	Identifier	runprofile		4875215	1					
ANR	4875327	CompoundStatement		19:40:327:327	4875215	1					
ANR	4875328	IfStatement	"if ( ! r_run_parsefile ( rp , io -> runprofile ) )"		4875215	0					
ANR	4875329	Condition	"! r_run_parsefile ( rp , io -> runprofile )"	266:6:5954:5990	4875215	0	True				
ANR	4875330	UnaryOperationExpression	"! r_run_parsefile ( rp , io -> runprofile )"		4875215	0					
ANR	4875331	UnaryOperator	!		4875215	0					
ANR	4875332	CallExpression	"r_run_parsefile ( rp , io -> runprofile )"		4875215	1					
ANR	4875333	Callee	r_run_parsefile		4875215	0					
ANR	4875334	Identifier	r_run_parsefile		4875215	0					
ANR	4875335	ArgumentList	rp		4875215	1					
ANR	4875336	Argument	rp		4875215	0					
ANR	4875337	Identifier	rp		4875215	0					
ANR	4875338	Argument	io -> runprofile		4875215	1					
ANR	4875339	PtrMemberAccess	io -> runprofile		4875215	0					
ANR	4875340	Identifier	io		4875215	0					
ANR	4875341	Identifier	runprofile		4875215	1					
ANR	4875342	CompoundStatement		20:45:374:374	4875215	1					
ANR	4875343	ExpressionStatement	"eprintf ( ""Can't find profile '%s'\\n"" , io -> runprofile )"	267:3:5998:6051	4875215	0	True				
ANR	4875344	CallExpression	"eprintf ( ""Can't find profile '%s'\\n"" , io -> runprofile )"		4875215	0					
ANR	4875345	Callee	eprintf		4875215	0					
ANR	4875346	Identifier	eprintf		4875215	0					
ANR	4875347	ArgumentList	"""Can't find profile '%s'\\n"""		4875215	1					
ANR	4875348	Argument	"""Can't find profile '%s'\\n"""		4875215	0					
ANR	4875349	PrimaryExpression	"""Can't find profile '%s'\\n"""		4875215	0					
ANR	4875350	Argument	io -> runprofile		4875215	1					
ANR	4875351	PtrMemberAccess	io -> runprofile		4875215	0					
ANR	4875352	Identifier	io		4875215	0					
ANR	4875353	Identifier	runprofile		4875215	1					
ANR	4875354	ExpressionStatement	r_run_free ( rp )	268:3:6056:6071	4875215	1	True				
ANR	4875355	CallExpression	r_run_free ( rp )		4875215	0					
ANR	4875356	Callee	r_run_free		4875215	0					
ANR	4875357	Identifier	r_run_free		4875215	0					
ANR	4875358	ArgumentList	rp		4875215	1					
ANR	4875359	Argument	rp		4875215	0					
ANR	4875360	Identifier	rp		4875215	0					
ANR	4875361	ReturnStatement	return NULL ;	269:3:6076:6087	4875215	2	True				
ANR	4875362	Identifier	NULL		4875215	0					
ANR	4875363	Statement	if	271:2:6095:6096	4875215	1	True				
ANR	4875364	Statement	(	271:5:6098:6098	4875215	2	True				
ANR	4875365	Statement	strstr	271:6:6099:6104	4875215	3	True				
ANR	4875366	Statement	(	271:13:6106:6106	4875215	4	True				
ANR	4875367	Statement	io	271:14:6107:6108	4875215	5	True				
ANR	4875368	Statement	->	271:16:6109:6110	4875215	6	True				
ANR	4875369	Statement	runprofile	271:18:6111:6120	4875215	7	True				
ANR	4875370	Statement	","	271:28:6121:6121	4875215	8	True				
ANR	4875371	Statement	R_SYS_DIR	271:30:6123:6131	4875215	9	True				
ANR	4875372	Statement	""".rarun2."""	271:40:6133:6142	4875215	10	True				
ANR	4875373	Statement	)	271:50:6143:6143	4875215	11	True				
ANR	4875374	Statement	)	271:51:6144:6144	4875215	12	True				
ANR	4875375	CompoundStatement		25:53:527:527	4875215	13					
ANR	4875376	ExpressionStatement	( void ) r_file_rm ( io -> runprofile )	272:3:6151:6183	4875215	0	True				
ANR	4875377	CastExpression	( void ) r_file_rm ( io -> runprofile )		4875215	0					
ANR	4875378	CastTarget	void		4875215	0					
ANR	4875379	CallExpression	r_file_rm ( io -> runprofile )		4875215	1					
ANR	4875380	Callee	r_file_rm		4875215	0					
ANR	4875381	Identifier	r_file_rm		4875215	0					
ANR	4875382	ArgumentList	io -> runprofile		4875215	1					
ANR	4875383	Argument	io -> runprofile		4875215	0					
ANR	4875384	PtrMemberAccess	io -> runprofile		4875215	0					
ANR	4875385	Identifier	io		4875215	0					
ANR	4875386	Identifier	runprofile		4875215	1					
ANR	4875387	IfStatement	if ( bits == 64 )		4875215	10					
ANR	4875388	Condition	bits == 64	275:5:6197:6206	4875215	0	True				
ANR	4875389	EqualityExpression	bits == 64		4875215	0		==			
ANR	4875390	Identifier	bits		4875215	0					
ANR	4875391	PrimaryExpression	64		4875215	1					
ANR	4875392	CompoundStatement		29:17:590:590	4875215	1					
ANR	4875393	ExpressionStatement	"r_run_parseline ( rp , expr = strdup ( ""bits=64"" ) )"	276:2:6213:6258	4875215	0	True				
ANR	4875394	CallExpression	"r_run_parseline ( rp , expr = strdup ( ""bits=64"" ) )"		4875215	0					
ANR	4875395	Callee	r_run_parseline		4875215	0					
ANR	4875396	Identifier	r_run_parseline		4875215	0					
ANR	4875397	ArgumentList	rp		4875215	1					
ANR	4875398	Argument	rp		4875215	0					
ANR	4875399	Identifier	rp		4875215	0					
ANR	4875400	Argument	"expr = strdup ( ""bits=64"" )"		4875215	1					
ANR	4875401	AssignmentExpression	"expr = strdup ( ""bits=64"" )"		4875215	0		=			
ANR	4875402	Identifier	expr		4875215	0					
ANR	4875403	CallExpression	"strdup ( ""bits=64"" )"		4875215	1					
ANR	4875404	Callee	strdup		4875215	0					
ANR	4875405	Identifier	strdup		4875215	0					
ANR	4875406	ArgumentList	"""bits=64"""		4875215	1					
ANR	4875407	Argument	"""bits=64"""		4875215	0					
ANR	4875408	PrimaryExpression	"""bits=64"""		4875215	0					
ANR	4875409	ElseStatement	else		4875215	0					
ANR	4875410	IfStatement	if ( bits == 32 )		4875215	0					
ANR	4875411	Condition	bits == 32	277:12:6272:6281	4875215	0	True				
ANR	4875412	EqualityExpression	bits == 32		4875215	0		==			
ANR	4875413	Identifier	bits		4875215	0					
ANR	4875414	PrimaryExpression	32		4875215	1					
ANR	4875415	CompoundStatement		31:24:665:665	4875215	1					
ANR	4875416	ExpressionStatement	"r_run_parseline ( rp , expr = strdup ( ""bits=32"" ) )"	278:2:6288:6333	4875215	0	True				
ANR	4875417	CallExpression	"r_run_parseline ( rp , expr = strdup ( ""bits=32"" ) )"		4875215	0					
ANR	4875418	Callee	r_run_parseline		4875215	0					
ANR	4875419	Identifier	r_run_parseline		4875215	0					
ANR	4875420	ArgumentList	rp		4875215	1					
ANR	4875421	Argument	rp		4875215	0					
ANR	4875422	Identifier	rp		4875215	0					
ANR	4875423	Argument	"expr = strdup ( ""bits=32"" )"		4875215	1					
ANR	4875424	AssignmentExpression	"expr = strdup ( ""bits=32"" )"		4875215	0		=			
ANR	4875425	Identifier	expr		4875215	0					
ANR	4875426	CallExpression	"strdup ( ""bits=32"" )"		4875215	1					
ANR	4875427	Callee	strdup		4875215	0					
ANR	4875428	Identifier	strdup		4875215	0					
ANR	4875429	ArgumentList	"""bits=32"""		4875215	1					
ANR	4875430	Argument	"""bits=32"""		4875215	0					
ANR	4875431	PrimaryExpression	"""bits=32"""		4875215	0					
ANR	4875432	ExpressionStatement	free ( expr )	280:1:6339:6350	4875215	11	True				
ANR	4875433	CallExpression	free ( expr )		4875215	0					
ANR	4875434	Callee	free		4875215	0					
ANR	4875435	Identifier	free		4875215	0					
ANR	4875436	ArgumentList	expr		4875215	1					
ANR	4875437	Argument	expr		4875215	0					
ANR	4875438	Identifier	expr		4875215	0					
ANR	4875439	IfStatement	if ( r_run_config_env ( rp ) )		4875215	12					
ANR	4875440	Condition	r_run_config_env ( rp )	281:5:6357:6377	4875215	0	True				
ANR	4875441	CallExpression	r_run_config_env ( rp )		4875215	0					
ANR	4875442	Callee	r_run_config_env		4875215	0					
ANR	4875443	Identifier	r_run_config_env		4875215	0					
ANR	4875444	ArgumentList	rp		4875215	1					
ANR	4875445	Argument	rp		4875215	0					
ANR	4875446	Identifier	rp		4875215	0					
ANR	4875447	CompoundStatement		35:28:761:761	4875215	1					
ANR	4875448	ExpressionStatement	"eprintf ( ""Can't config the environment.\\n"" )"	282:2:6384:6427	4875215	0	True				
ANR	4875449	CallExpression	"eprintf ( ""Can't config the environment.\\n"" )"		4875215	0					
ANR	4875450	Callee	eprintf		4875215	0					
ANR	4875451	Identifier	eprintf		4875215	0					
ANR	4875452	ArgumentList	"""Can't config the environment.\\n"""		4875215	1					
ANR	4875453	Argument	"""Can't config the environment.\\n"""		4875215	0					
ANR	4875454	PrimaryExpression	"""Can't config the environment.\\n"""		4875215	0					
ANR	4875455	ExpressionStatement	r_run_free ( rp )	283:2:6431:6446	4875215	1	True				
ANR	4875456	CallExpression	r_run_free ( rp )		4875215	0					
ANR	4875457	Callee	r_run_free		4875215	0					
ANR	4875458	Identifier	r_run_free		4875215	0					
ANR	4875459	ArgumentList	rp		4875215	1					
ANR	4875460	Argument	rp		4875215	0					
ANR	4875461	Identifier	rp		4875215	0					
ANR	4875462	ReturnStatement	return NULL ;	284:2:6450:6461	4875215	2	True				
ANR	4875463	Identifier	NULL		4875215	0					
ANR	4875464	ReturnStatement	return rp ;	286:1:6467:6476	4875215	13	True				
ANR	4875465	Identifier	rp		4875215	0					
ANR	4875466	ReturnType	static RRunProfile *		4875215	1					
ANR	4875467	Identifier	_get_run_profile		4875215	2					
ANR	4875468	ParameterList	"RIO * io , int bits , char * * argv"		4875215	3					
ANR	4875469	Parameter	RIO * io	247:37:5586:5592	4875215	0	True				
ANR	4875470	ParameterType	RIO *		4875215	0					
ANR	4875471	Identifier	io		4875215	1					
ANR	4875472	Parameter	int bits	247:46:5595:5602	4875215	1	True				
ANR	4875473	ParameterType	int		4875215	0					
ANR	4875474	Identifier	bits		4875215	1					
ANR	4875475	Parameter	char * * argv	247:56:5605:5615	4875215	2	True				
ANR	4875476	ParameterType	char * *		4875215	0					
ANR	4875477	Identifier	argv		4875215	1					
ANR	4875478	CFGEntryNode	ENTRY		4875215		True				
ANR	4875479	CFGExitNode	EXIT		4875215		True				
ANR	4875480	Symbol	NULL		4875215						
ANR	4875481	Symbol	* io -> runprofile		4875215						
ANR	4875482	Symbol	io		4875215						
ANR	4875483	Symbol	rp -> _program		4875215						
ANR	4875484	Symbol	* rp		4875215						
ANR	4875485	Symbol	bits		4875215						
ANR	4875486	Symbol	* * rp		4875215						
ANR	4875487	Symbol	i		4875215						
ANR	4875488	Symbol	* argv		4875215						
ANR	4875489	Symbol	* rp -> _args		4875215						
ANR	4875490	Symbol	io -> runprofile		4875215						
ANR	4875491	Symbol	argv		4875215						
ANR	4875492	Symbol	r_run_new		4875215						
ANR	4875493	Symbol	rp -> _args		4875215						
ANR	4875494	Symbol	* io		4875215						
ANR	4875495	Symbol	* * io		4875215						
ANR	4875496	Symbol	* i		4875215						
ANR	4875497	Symbol	true		4875215						
ANR	4875498	Symbol	rp -> _dodebug		4875215						
ANR	4875499	Symbol	r_run_parsefile		4875215						
ANR	4875500	Symbol	expr		4875215						
ANR	4875501	Symbol	strdup		4875215						
ANR	4875502	Symbol	rp		4875215						
ANR	4875503	Symbol	r_run_config_env		4875215						
ANR	4875504	Function	handle_posix_redirection	291:0:6512:6994							
ANR	4875505	FunctionDef	"handle_posix_redirection (RRunProfile * rp , posix_spawn_file_actions_t * fileActions)"		4875504	0					
ANR	4875506	CompoundStatement		291:95:6607:6994	4875504	0					
ANR	4875507	IdentifierDeclStatement	const int mode = S_IRUSR | S_IWUSR ;	292:1:6610:6644	4875504	0	True				
ANR	4875508	IdentifierDecl	mode = S_IRUSR | S_IWUSR		4875504	0					
ANR	4875509	IdentifierDeclType	const int		4875504	0					
ANR	4875510	Identifier	mode		4875504	1					
ANR	4875511	AssignmentExpression	mode = S_IRUSR | S_IWUSR		4875504	2		=			
ANR	4875512	Identifier	mode		4875504	0					
ANR	4875513	InclusiveOrExpression	S_IRUSR | S_IWUSR		4875504	1		|			
ANR	4875514	Identifier	S_IRUSR		4875504	0					
ANR	4875515	Identifier	S_IWUSR		4875504	1					
ANR	4875516	IfStatement	if ( rp -> _stdin )		4875504	1					
ANR	4875517	Condition	rp -> _stdin	293:5:6651:6660	4875504	0	True				
ANR	4875518	PtrMemberAccess	rp -> _stdin		4875504	0					
ANR	4875519	Identifier	rp		4875504	0					
ANR	4875520	Identifier	_stdin		4875504	1					
ANR	4875521	CompoundStatement		3:17:55:55	4875504	1					
ANR	4875522	ExpressionStatement	"posix_spawn_file_actions_addopen ( fileActions , STDIN_FILENO , rp -> _stdin , O_RDONLY , mode )"	294:2:6667:6755	4875504	0	True				
ANR	4875523	CallExpression	"posix_spawn_file_actions_addopen ( fileActions , STDIN_FILENO , rp -> _stdin , O_RDONLY , mode )"		4875504	0					
ANR	4875524	Callee	posix_spawn_file_actions_addopen		4875504	0					
ANR	4875525	Identifier	posix_spawn_file_actions_addopen		4875504	0					
ANR	4875526	ArgumentList	fileActions		4875504	1					
ANR	4875527	Argument	fileActions		4875504	0					
ANR	4875528	Identifier	fileActions		4875504	0					
ANR	4875529	Argument	STDIN_FILENO		4875504	1					
ANR	4875530	Identifier	STDIN_FILENO		4875504	0					
ANR	4875531	Argument	rp -> _stdin		4875504	2					
ANR	4875532	PtrMemberAccess	rp -> _stdin		4875504	0					
ANR	4875533	Identifier	rp		4875504	0					
ANR	4875534	Identifier	_stdin		4875504	1					
ANR	4875535	Argument	O_RDONLY		4875504	3					
ANR	4875536	Identifier	O_RDONLY		4875504	0					
ANR	4875537	Argument	mode		4875504	4					
ANR	4875538	Identifier	mode		4875504	0					
ANR	4875539	IfStatement	if ( rp -> _stdout )		4875504	2					
ANR	4875540	Condition	rp -> _stdout	296:5:6765:6775	4875504	0	True				
ANR	4875541	PtrMemberAccess	rp -> _stdout		4875504	0					
ANR	4875542	Identifier	rp		4875504	0					
ANR	4875543	Identifier	_stdout		4875504	1					
ANR	4875544	CompoundStatement		6:18:170:170	4875504	1					
ANR	4875545	ExpressionStatement	"posix_spawn_file_actions_addopen ( fileActions , STDOUT_FILENO , rp -> _stdout , O_WRONLY , mode )"	297:2:6782:6872	4875504	0	True				
ANR	4875546	CallExpression	"posix_spawn_file_actions_addopen ( fileActions , STDOUT_FILENO , rp -> _stdout , O_WRONLY , mode )"		4875504	0					
ANR	4875547	Callee	posix_spawn_file_actions_addopen		4875504	0					
ANR	4875548	Identifier	posix_spawn_file_actions_addopen		4875504	0					
ANR	4875549	ArgumentList	fileActions		4875504	1					
ANR	4875550	Argument	fileActions		4875504	0					
ANR	4875551	Identifier	fileActions		4875504	0					
ANR	4875552	Argument	STDOUT_FILENO		4875504	1					
ANR	4875553	Identifier	STDOUT_FILENO		4875504	0					
ANR	4875554	Argument	rp -> _stdout		4875504	2					
ANR	4875555	PtrMemberAccess	rp -> _stdout		4875504	0					
ANR	4875556	Identifier	rp		4875504	0					
ANR	4875557	Identifier	_stdout		4875504	1					
ANR	4875558	Argument	O_WRONLY		4875504	3					
ANR	4875559	Identifier	O_WRONLY		4875504	0					
ANR	4875560	Argument	mode		4875504	4					
ANR	4875561	Identifier	mode		4875504	0					
ANR	4875562	IfStatement	if ( rp -> _stderr )		4875504	3					
ANR	4875563	Condition	rp -> _stderr	299:5:6882:6892	4875504	0	True				
ANR	4875564	PtrMemberAccess	rp -> _stderr		4875504	0					
ANR	4875565	Identifier	rp		4875504	0					
ANR	4875566	Identifier	_stderr		4875504	1					
ANR	4875567	CompoundStatement		9:18:287:287	4875504	1					
ANR	4875568	ExpressionStatement	"posix_spawn_file_actions_addopen ( fileActions , STDERR_FILENO , rp -> _stderr , O_WRONLY , mode )"	300:2:6899:6989	4875504	0	True				
ANR	4875569	CallExpression	"posix_spawn_file_actions_addopen ( fileActions , STDERR_FILENO , rp -> _stderr , O_WRONLY , mode )"		4875504	0					
ANR	4875570	Callee	posix_spawn_file_actions_addopen		4875504	0					
ANR	4875571	Identifier	posix_spawn_file_actions_addopen		4875504	0					
ANR	4875572	ArgumentList	fileActions		4875504	1					
ANR	4875573	Argument	fileActions		4875504	0					
ANR	4875574	Identifier	fileActions		4875504	0					
ANR	4875575	Argument	STDERR_FILENO		4875504	1					
ANR	4875576	Identifier	STDERR_FILENO		4875504	0					
ANR	4875577	Argument	rp -> _stderr		4875504	2					
ANR	4875578	PtrMemberAccess	rp -> _stderr		4875504	0					
ANR	4875579	Identifier	rp		4875504	0					
ANR	4875580	Identifier	_stderr		4875504	1					
ANR	4875581	Argument	O_WRONLY		4875504	3					
ANR	4875582	Identifier	O_WRONLY		4875504	0					
ANR	4875583	Argument	mode		4875504	4					
ANR	4875584	Identifier	mode		4875504	0					
ANR	4875585	ReturnType	static void		4875504	1					
ANR	4875586	Identifier	handle_posix_redirection		4875504	2					
ANR	4875587	ParameterList	"RRunProfile * rp , posix_spawn_file_actions_t * fileActions"		4875504	3					
ANR	4875588	Parameter	RRunProfile * rp	291:37:6549:6563	4875504	0	True				
ANR	4875589	ParameterType	RRunProfile *		4875504	0					
ANR	4875590	Identifier	rp		4875504	1					
ANR	4875591	Parameter	posix_spawn_file_actions_t * fileActions	291:54:6566:6604	4875504	1	True				
ANR	4875592	ParameterType	posix_spawn_file_actions_t *		4875504	0					
ANR	4875593	Identifier	fileActions		4875504	1					
ANR	4875594	CFGEntryNode	ENTRY		4875504		True				
ANR	4875595	CFGExitNode	EXIT		4875504		True				
ANR	4875596	Symbol	rp -> _stdin		4875504						
ANR	4875597	Symbol	STDIN_FILENO		4875504						
ANR	4875598	Symbol	STDOUT_FILENO		4875504						
ANR	4875599	Symbol	* rp		4875504						
ANR	4875600	Symbol	fileActions		4875504						
ANR	4875601	Symbol	mode		4875504						
ANR	4875602	Symbol	S_IRUSR		4875504						
ANR	4875603	Symbol	O_RDONLY		4875504						
ANR	4875604	Symbol	rp -> _stderr		4875504						
ANR	4875605	Symbol	S_IWUSR		4875504						
ANR	4875606	Symbol	rp -> _stdout		4875504						
ANR	4875607	Symbol	O_WRONLY		4875504						
ANR	4875608	Symbol	STDERR_FILENO		4875504						
ANR	4875609	Symbol	rp		4875504						
ANR	4875610	Function	fork_and_ptraceme_for_mac	305:0:7023:9861							
ANR	4875611	FunctionDef	"fork_and_ptraceme_for_mac (RIO * io , int bits , const char * cmd)"		4875610	0					
ANR	4875612	CompoundStatement		305:73:7096:9861	4875610	0					
ANR	4875613	IdentifierDeclStatement	bool runprofile = io -> runprofile && * ( io -> runprofile ) ;	306:1:7099:7152	4875610	0	True				
ANR	4875614	IdentifierDecl	runprofile = io -> runprofile && * ( io -> runprofile )		4875610	0					
ANR	4875615	IdentifierDeclType	bool		4875610	0					
ANR	4875616	Identifier	runprofile		4875610	1					
ANR	4875617	AssignmentExpression	runprofile = io -> runprofile && * ( io -> runprofile )		4875610	2		=			
ANR	4875618	Identifier	runprofile		4875610	0					
ANR	4875619	AndExpression	io -> runprofile && * ( io -> runprofile )		4875610	1		&&			
ANR	4875620	PtrMemberAccess	io -> runprofile		4875610	0					
ANR	4875621	Identifier	io		4875610	0					
ANR	4875622	Identifier	runprofile		4875610	1					
ANR	4875623	UnaryOperationExpression	* ( io -> runprofile )		4875610	1					
ANR	4875624	UnaryOperator	*		4875610	0					
ANR	4875625	PtrMemberAccess	io -> runprofile		4875610	1					
ANR	4875626	Identifier	io		4875610	0					
ANR	4875627	Identifier	runprofile		4875610	1					
ANR	4875628	IdentifierDeclStatement	pid_t p = - 1 ;	307:1:7155:7167	4875610	1	True				
ANR	4875629	IdentifierDecl	p = - 1		4875610	0					
ANR	4875630	IdentifierDeclType	pid_t		4875610	0					
ANR	4875631	Identifier	p		4875610	1					
ANR	4875632	AssignmentExpression	p = - 1		4875610	2		=			
ANR	4875633	Identifier	p		4875610	0					
ANR	4875634	UnaryOperationExpression	- 1		4875610	1					
ANR	4875635	UnaryOperator	-		4875610	0					
ANR	4875636	PrimaryExpression	1		4875610	1					
ANR	4875637	IdentifierDeclStatement	char * * argv ;	308:1:7170:7181	4875610	2	True				
ANR	4875638	IdentifierDecl	* * argv		4875610	0					
ANR	4875639	IdentifierDeclType	char * *		4875610	0					
ANR	4875640	Identifier	argv		4875610	1					
ANR	4875641	IdentifierDeclStatement	posix_spawn_file_actions_t fileActions ;	309:1:7184:7222	4875610	3	True				
ANR	4875642	IdentifierDecl	fileActions		4875610	0					
ANR	4875643	IdentifierDeclType	posix_spawn_file_actions_t		4875610	0					
ANR	4875644	Identifier	fileActions		4875610	1					
ANR	4875645	IdentifierDeclStatement	ut32 ps_flags = POSIX_SPAWN_SETSIGDEF | POSIX_SPAWN_SETSIGMASK ;	310:1:7225:7287	4875610	4	True				
ANR	4875646	IdentifierDecl	ps_flags = POSIX_SPAWN_SETSIGDEF | POSIX_SPAWN_SETSIGMASK		4875610	0					
ANR	4875647	IdentifierDeclType	ut32		4875610	0					
ANR	4875648	Identifier	ps_flags		4875610	1					
ANR	4875649	AssignmentExpression	ps_flags = POSIX_SPAWN_SETSIGDEF | POSIX_SPAWN_SETSIGMASK		4875610	2		=			
ANR	4875650	Identifier	ps_flags		4875610	0					
ANR	4875651	InclusiveOrExpression	POSIX_SPAWN_SETSIGDEF | POSIX_SPAWN_SETSIGMASK		4875610	1		|			
ANR	4875652	Identifier	POSIX_SPAWN_SETSIGDEF		4875610	0					
ANR	4875653	Identifier	POSIX_SPAWN_SETSIGMASK		4875610	1					
ANR	4875654	IdentifierDeclStatement	sigset_t no_signals ;	311:1:7290:7309	4875610	5	True				
ANR	4875655	IdentifierDecl	no_signals		4875610	0					
ANR	4875656	IdentifierDeclType	sigset_t		4875610	0					
ANR	4875657	Identifier	no_signals		4875610	1					
ANR	4875658	IdentifierDeclStatement	sigset_t all_signals ;	312:1:7312:7332	4875610	6	True				
ANR	4875659	IdentifierDecl	all_signals		4875610	0					
ANR	4875660	IdentifierDeclType	sigset_t		4875610	0					
ANR	4875661	Identifier	all_signals		4875610	1					
ANR	4875662	IdentifierDeclStatement	size_t copied = 1 ;	313:1:7335:7352	4875610	7	True				
ANR	4875663	IdentifierDecl	copied = 1		4875610	0					
ANR	4875664	IdentifierDeclType	size_t		4875610	0					
ANR	4875665	Identifier	copied		4875610	1					
ANR	4875666	AssignmentExpression	copied = 1		4875610	2		=			
ANR	4875667	Identifier	copied		4875610	0					
ANR	4875668	PrimaryExpression	1		4875610	1					
ANR	4875669	IdentifierDeclStatement	cpu_type_t cpu = CPU_TYPE_ANY ;	314:1:7355:7384	4875610	8	True				
ANR	4875670	IdentifierDecl	cpu = CPU_TYPE_ANY		4875610	0					
ANR	4875671	IdentifierDeclType	cpu_type_t		4875610	0					
ANR	4875672	Identifier	cpu		4875610	1					
ANR	4875673	AssignmentExpression	cpu = CPU_TYPE_ANY		4875610	2		=			
ANR	4875674	Identifier	CPU_TYPE_ANY		4875610	0					
ANR	4875675	Identifier	CPU_TYPE_ANY		4875610	1					
ANR	4875676	IdentifierDeclStatement	posix_spawnattr_t attr = { 0 } ;	315:1:7387:7415	4875610	9	True				
ANR	4875677	IdentifierDecl	attr = { 0 }		4875610	0					
ANR	4875678	IdentifierDeclType	posix_spawnattr_t		4875610	0					
ANR	4875679	Identifier	attr		4875610	1					
ANR	4875680	AssignmentExpression	attr = { 0 }		4875610	2		=			
ANR	4875681	Identifier	attr		4875610	0					
ANR	4875682	InitializerList	0		4875610	1					
ANR	4875683	PrimaryExpression	0		4875610	0					
ANR	4875684	ExpressionStatement	posix_spawnattr_init ( & attr )	316:1:7418:7446	4875610	10	True				
ANR	4875685	CallExpression	posix_spawnattr_init ( & attr )		4875610	0					
ANR	4875686	Callee	posix_spawnattr_init		4875610	0					
ANR	4875687	Identifier	posix_spawnattr_init		4875610	0					
ANR	4875688	ArgumentList	& attr		4875610	1					
ANR	4875689	Argument	& attr		4875610	0					
ANR	4875690	UnaryOperationExpression	& attr		4875610	0					
ANR	4875691	UnaryOperator	&		4875610	0					
ANR	4875692	Identifier	attr		4875610	1					
ANR	4875693	ExpressionStatement	sigemptyset ( & no_signals )	318:1:7450:7475	4875610	11	True				
ANR	4875694	CallExpression	sigemptyset ( & no_signals )		4875610	0					
ANR	4875695	Callee	sigemptyset		4875610	0					
ANR	4875696	Identifier	sigemptyset		4875610	0					
ANR	4875697	ArgumentList	& no_signals		4875610	1					
ANR	4875698	Argument	& no_signals		4875610	0					
ANR	4875699	UnaryOperationExpression	& no_signals		4875610	0					
ANR	4875700	UnaryOperator	&		4875610	0					
ANR	4875701	Identifier	no_signals		4875610	1					
ANR	4875702	ExpressionStatement	sigfillset ( & all_signals )	319:1:7478:7503	4875610	12	True				
ANR	4875703	CallExpression	sigfillset ( & all_signals )		4875610	0					
ANR	4875704	Callee	sigfillset		4875610	0					
ANR	4875705	Identifier	sigfillset		4875610	0					
ANR	4875706	ArgumentList	& all_signals		4875610	1					
ANR	4875707	Argument	& all_signals		4875610	0					
ANR	4875708	UnaryOperationExpression	& all_signals		4875610	0					
ANR	4875709	UnaryOperator	&		4875610	0					
ANR	4875710	Identifier	all_signals		4875610	1					
ANR	4875711	ExpressionStatement	"posix_spawnattr_setsigmask ( & attr , & no_signals )"	320:1:7506:7553	4875610	13	True				
ANR	4875712	CallExpression	"posix_spawnattr_setsigmask ( & attr , & no_signals )"		4875610	0					
ANR	4875713	Callee	posix_spawnattr_setsigmask		4875610	0					
ANR	4875714	Identifier	posix_spawnattr_setsigmask		4875610	0					
ANR	4875715	ArgumentList	& attr		4875610	1					
ANR	4875716	Argument	& attr		4875610	0					
ANR	4875717	UnaryOperationExpression	& attr		4875610	0					
ANR	4875718	UnaryOperator	&		4875610	0					
ANR	4875719	Identifier	attr		4875610	1					
ANR	4875720	Argument	& no_signals		4875610	1					
ANR	4875721	UnaryOperationExpression	& no_signals		4875610	0					
ANR	4875722	UnaryOperator	&		4875610	0					
ANR	4875723	Identifier	no_signals		4875610	1					
ANR	4875724	ExpressionStatement	"posix_spawnattr_setsigdefault ( & attr , & all_signals )"	321:1:7556:7607	4875610	14	True				
ANR	4875725	CallExpression	"posix_spawnattr_setsigdefault ( & attr , & all_signals )"		4875610	0					
ANR	4875726	Callee	posix_spawnattr_setsigdefault		4875610	0					
ANR	4875727	Identifier	posix_spawnattr_setsigdefault		4875610	0					
ANR	4875728	ArgumentList	& attr		4875610	1					
ANR	4875729	Argument	& attr		4875610	0					
ANR	4875730	UnaryOperationExpression	& attr		4875610	0					
ANR	4875731	UnaryOperator	&		4875610	0					
ANR	4875732	Identifier	attr		4875610	1					
ANR	4875733	Argument	& all_signals		4875610	1					
ANR	4875734	UnaryOperationExpression	& all_signals		4875610	0					
ANR	4875735	UnaryOperator	&		4875610	0					
ANR	4875736	Identifier	all_signals		4875610	1					
ANR	4875737	ExpressionStatement	posix_spawn_file_actions_init ( & fileActions )	323:1:7611:7655	4875610	15	True				
ANR	4875738	CallExpression	posix_spawn_file_actions_init ( & fileActions )		4875610	0					
ANR	4875739	Callee	posix_spawn_file_actions_init		4875610	0					
ANR	4875740	Identifier	posix_spawn_file_actions_init		4875610	0					
ANR	4875741	ArgumentList	& fileActions		4875610	1					
ANR	4875742	Argument	& fileActions		4875610	0					
ANR	4875743	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4875744	UnaryOperator	&		4875610	0					
ANR	4875745	Identifier	fileActions		4875610	1					
ANR	4875746	ExpressionStatement	"posix_spawn_file_actions_addinherit_np ( & fileActions , STDIN_FILENO )"	324:1:7658:7725	4875610	16	True				
ANR	4875747	CallExpression	"posix_spawn_file_actions_addinherit_np ( & fileActions , STDIN_FILENO )"		4875610	0					
ANR	4875748	Callee	posix_spawn_file_actions_addinherit_np		4875610	0					
ANR	4875749	Identifier	posix_spawn_file_actions_addinherit_np		4875610	0					
ANR	4875750	ArgumentList	& fileActions		4875610	1					
ANR	4875751	Argument	& fileActions		4875610	0					
ANR	4875752	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4875753	UnaryOperator	&		4875610	0					
ANR	4875754	Identifier	fileActions		4875610	1					
ANR	4875755	Argument	STDIN_FILENO		4875610	1					
ANR	4875756	Identifier	STDIN_FILENO		4875610	0					
ANR	4875757	ExpressionStatement	"posix_spawn_file_actions_addinherit_np ( & fileActions , STDOUT_FILENO )"	325:1:7728:7796	4875610	17	True				
ANR	4875758	CallExpression	"posix_spawn_file_actions_addinherit_np ( & fileActions , STDOUT_FILENO )"		4875610	0					
ANR	4875759	Callee	posix_spawn_file_actions_addinherit_np		4875610	0					
ANR	4875760	Identifier	posix_spawn_file_actions_addinherit_np		4875610	0					
ANR	4875761	ArgumentList	& fileActions		4875610	1					
ANR	4875762	Argument	& fileActions		4875610	0					
ANR	4875763	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4875764	UnaryOperator	&		4875610	0					
ANR	4875765	Identifier	fileActions		4875610	1					
ANR	4875766	Argument	STDOUT_FILENO		4875610	1					
ANR	4875767	Identifier	STDOUT_FILENO		4875610	0					
ANR	4875768	ExpressionStatement	"posix_spawn_file_actions_addinherit_np ( & fileActions , STDERR_FILENO )"	326:1:7799:7867	4875610	18	True				
ANR	4875769	CallExpression	"posix_spawn_file_actions_addinherit_np ( & fileActions , STDERR_FILENO )"		4875610	0					
ANR	4875770	Callee	posix_spawn_file_actions_addinherit_np		4875610	0					
ANR	4875771	Identifier	posix_spawn_file_actions_addinherit_np		4875610	0					
ANR	4875772	ArgumentList	& fileActions		4875610	1					
ANR	4875773	Argument	& fileActions		4875610	0					
ANR	4875774	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4875775	UnaryOperator	&		4875610	0					
ANR	4875776	Identifier	fileActions		4875610	1					
ANR	4875777	Argument	STDERR_FILENO		4875610	1					
ANR	4875778	Identifier	STDERR_FILENO		4875610	0					
ANR	4875779	ExpressionStatement	ps_flags |= POSIX_SPAWN_CLOEXEC_DEFAULT	328:1:7871:7910	4875610	19	True				
ANR	4875780	AssignmentExpression	ps_flags |= POSIX_SPAWN_CLOEXEC_DEFAULT		4875610	0		|=			
ANR	4875781	Identifier	ps_flags		4875610	0					
ANR	4875782	Identifier	POSIX_SPAWN_CLOEXEC_DEFAULT		4875610	1					
ANR	4875783	ExpressionStatement	ps_flags |= POSIX_SPAWN_START_SUSPENDED	329:1:7913:7952	4875610	20	True				
ANR	4875784	AssignmentExpression	ps_flags |= POSIX_SPAWN_START_SUSPENDED		4875610	0		|=			
ANR	4875785	Identifier	ps_flags		4875610	0					
ANR	4875786	Identifier	POSIX_SPAWN_START_SUSPENDED		4875610	1					
ANR	4875787	Statement	define	330:1:7955:7960	4875610	21	True				
ANR	4875788	Statement	_POSIX_SPAWN_DISABLE_ASLR	330:8:7962:7986	4875610	22	True				
ANR	4875789	Statement	0x0100	330:34:7988:7993	4875610	23	True				
ANR	4875790	IfStatement	if ( ! runprofile )		4875610	24					
ANR	4875791	Condition	! runprofile	331:5:8000:8010	4875610	0	True				
ANR	4875792	UnaryOperationExpression	! runprofile		4875610	0					
ANR	4875793	UnaryOperator	!		4875610	0					
ANR	4875794	Identifier	runprofile		4875610	1					
ANR	4875795	CompoundStatement		29:2:951:1041	4875610	1					
ANR	4875796	IdentifierDeclStatement	"int ret , useASLR = io -> aslr ;"	332:2:8017:8044	4875610	0	True				
ANR	4875797	IdentifierDecl	ret		4875610	0					
ANR	4875798	IdentifierDeclType	int		4875610	0					
ANR	4875799	Identifier	ret		4875610	1					
ANR	4875800	IdentifierDecl	useASLR = io -> aslr		4875610	1					
ANR	4875801	IdentifierDeclType	int		4875610	0					
ANR	4875802	Identifier	useASLR		4875610	1					
ANR	4875803	AssignmentExpression	useASLR = io -> aslr		4875610	2		=			
ANR	4875804	Identifier	useASLR		4875610	0					
ANR	4875805	PtrMemberAccess	io -> aslr		4875610	1					
ANR	4875806	Identifier	io		4875610	0					
ANR	4875807	Identifier	aslr		4875610	1					
ANR	4875808	IdentifierDeclStatement	"char * _cmd = io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd ) ;"	333:2:8048:8138	4875610	1	True				
ANR	4875809	IdentifierDecl	"* _cmd = io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd )"		4875610	0					
ANR	4875810	IdentifierDeclType	char *		4875610	0					
ANR	4875811	Identifier	_cmd		4875610	1					
ANR	4875812	AssignmentExpression	"* _cmd = io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd )"		4875610	2		=			
ANR	4875813	Identifier	_cmd		4875610	0					
ANR	4875814	ConditionalExpression	"io -> args ? r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args ) : strdup ( cmd )"		4875610	1					
ANR	4875815	Condition	io -> args		4875610	0					
ANR	4875816	PtrMemberAccess	io -> args		4875610	0					
ANR	4875817	Identifier	io		4875610	0					
ANR	4875818	Identifier	args		4875610	1					
ANR	4875819	CallExpression	"r_str_appendf ( strdup ( cmd ) , "" %s"" , io -> args )"		4875610	1					
ANR	4875820	Callee	r_str_appendf		4875610	0					
ANR	4875821	Identifier	r_str_appendf		4875610	0					
ANR	4875822	ArgumentList	strdup ( cmd )		4875610	1					
ANR	4875823	Argument	strdup ( cmd )		4875610	0					
ANR	4875824	CallExpression	strdup ( cmd )		4875610	0					
ANR	4875825	Callee	strdup		4875610	0					
ANR	4875826	Identifier	strdup		4875610	0					
ANR	4875827	ArgumentList	cmd		4875610	1					
ANR	4875828	Argument	cmd		4875610	0					
ANR	4875829	Identifier	cmd		4875610	0					
ANR	4875830	Argument	""" %s"""		4875610	1					
ANR	4875831	PrimaryExpression	""" %s"""		4875610	0					
ANR	4875832	Argument	io -> args		4875610	2					
ANR	4875833	PtrMemberAccess	io -> args		4875610	0					
ANR	4875834	Identifier	io		4875610	0					
ANR	4875835	Identifier	args		4875610	1					
ANR	4875836	CallExpression	strdup ( cmd )		4875610	2					
ANR	4875837	Callee	strdup		4875610	0					
ANR	4875838	Identifier	strdup		4875610	0					
ANR	4875839	ArgumentList	cmd		4875610	1					
ANR	4875840	Argument	cmd		4875610	0					
ANR	4875841	Identifier	cmd		4875610	0					
ANR	4875842	ExpressionStatement	"argv = r_str_argv ( _cmd , NULL )"	336:2:8142:8172	4875610	2	True				
ANR	4875843	AssignmentExpression	"argv = r_str_argv ( _cmd , NULL )"		4875610	0		=			
ANR	4875844	Identifier	argv		4875610	0					
ANR	4875845	CallExpression	"r_str_argv ( _cmd , NULL )"		4875610	1					
ANR	4875846	Callee	r_str_argv		4875610	0					
ANR	4875847	Identifier	r_str_argv		4875610	0					
ANR	4875848	ArgumentList	_cmd		4875610	1					
ANR	4875849	Argument	_cmd		4875610	0					
ANR	4875850	Identifier	_cmd		4875610	0					
ANR	4875851	Argument	NULL		4875610	1					
ANR	4875852	Identifier	NULL		4875610	0					
ANR	4875853	IfStatement	if ( ! argv )		4875610	3					
ANR	4875854	Condition	! argv	337:6:8180:8184	4875610	0	True				
ANR	4875855	UnaryOperationExpression	! argv		4875610	0					
ANR	4875856	UnaryOperator	!		4875610	0					
ANR	4875857	Identifier	argv		4875610	1					
ANR	4875858	CompoundStatement		33:13:1090:1090	4875610	1					
ANR	4875859	ExpressionStatement	free ( _cmd )	338:3:8192:8203	4875610	0	True				
ANR	4875860	CallExpression	free ( _cmd )		4875610	0					
ANR	4875861	Callee	free		4875610	0					
ANR	4875862	Identifier	free		4875610	0					
ANR	4875863	ArgumentList	_cmd		4875610	1					
ANR	4875864	Argument	_cmd		4875610	0					
ANR	4875865	Identifier	_cmd		4875610	0					
ANR	4875866	ReturnStatement	return - 1 ;	339:3:8208:8217	4875610	1	True				
ANR	4875867	UnaryOperationExpression	- 1		4875610	0					
ANR	4875868	UnaryOperator	-		4875610	0					
ANR	4875869	PrimaryExpression	1		4875610	1					
ANR	4875870	IfStatement	if ( ! * argv )		4875610	4					
ANR	4875871	Condition	! * argv	341:6:8229:8234	4875610	0	True				
ANR	4875872	UnaryOperationExpression	! * argv		4875610	0					
ANR	4875873	UnaryOperator	!		4875610	0					
ANR	4875874	UnaryOperationExpression	* argv		4875610	1					
ANR	4875875	UnaryOperator	*		4875610	0					
ANR	4875876	Identifier	argv		4875610	1					
ANR	4875877	CompoundStatement		37:14:1140:1140	4875610	1					
ANR	4875878	ExpressionStatement	r_str_argv_free ( argv )	342:3:8242:8264	4875610	0	True				
ANR	4875879	CallExpression	r_str_argv_free ( argv )		4875610	0					
ANR	4875880	Callee	r_str_argv_free		4875610	0					
ANR	4875881	Identifier	r_str_argv_free		4875610	0					
ANR	4875882	ArgumentList	argv		4875610	1					
ANR	4875883	Argument	argv		4875610	0					
ANR	4875884	Identifier	argv		4875610	0					
ANR	4875885	ExpressionStatement	free ( _cmd )	343:3:8269:8280	4875610	1	True				
ANR	4875886	CallExpression	free ( _cmd )		4875610	0					
ANR	4875887	Callee	free		4875610	0					
ANR	4875888	Identifier	free		4875610	0					
ANR	4875889	ArgumentList	_cmd		4875610	1					
ANR	4875890	Argument	_cmd		4875610	0					
ANR	4875891	Identifier	_cmd		4875610	0					
ANR	4875892	ExpressionStatement	"eprintf ( ""Invalid execvp\\n"" )"	344:3:8285:8313	4875610	2	True				
ANR	4875893	CallExpression	"eprintf ( ""Invalid execvp\\n"" )"		4875610	0					
ANR	4875894	Callee	eprintf		4875610	0					
ANR	4875895	Identifier	eprintf		4875610	0					
ANR	4875896	ArgumentList	"""Invalid execvp\\n"""		4875610	1					
ANR	4875897	Argument	"""Invalid execvp\\n"""		4875610	0					
ANR	4875898	PrimaryExpression	"""Invalid execvp\\n"""		4875610	0					
ANR	4875899	ReturnStatement	return - 1 ;	345:3:8318:8327	4875610	3	True				
ANR	4875900	UnaryOperationExpression	- 1		4875610	0					
ANR	4875901	UnaryOperator	-		4875610	0					
ANR	4875902	PrimaryExpression	1		4875610	1					
ANR	4875903	IfStatement	if ( useASLR != - 1 )		4875610	5					
ANR	4875904	Condition	useASLR != - 1	347:6:8339:8351	4875610	0	True				
ANR	4875905	EqualityExpression	useASLR != - 1		4875610	0		!=			
ANR	4875906	Identifier	useASLR		4875610	0					
ANR	4875907	UnaryOperationExpression	- 1		4875610	1					
ANR	4875908	UnaryOperator	-		4875610	0					
ANR	4875909	PrimaryExpression	1		4875610	1					
ANR	4875910	CompoundStatement		43:21:1257:1257	4875610	1					
ANR	4875911	IfStatement	if ( ! useASLR )		4875610	0					
ANR	4875912	Condition	! useASLR	348:7:8363:8370	4875610	0	True				
ANR	4875913	UnaryOperationExpression	! useASLR		4875610	0					
ANR	4875914	UnaryOperator	!		4875610	0					
ANR	4875915	Identifier	useASLR		4875610	1					
ANR	4875916	CompoundStatement		44:17:1276:1276	4875610	1					
ANR	4875917	ExpressionStatement	ps_flags |= _POSIX_SPAWN_DISABLE_ASLR	349:4:8379:8416	4875610	0	True				
ANR	4875918	AssignmentExpression	ps_flags |= _POSIX_SPAWN_DISABLE_ASLR		4875610	0		|=			
ANR	4875919	Identifier	ps_flags		4875610	0					
ANR	4875920	Identifier	_POSIX_SPAWN_DISABLE_ASLR		4875610	1					
ANR	4875921	ExpressionStatement	"( void ) posix_spawnattr_setflags ( & attr , ps_flags )"	352:2:8429:8477	4875610	6	True				
ANR	4875922	CastExpression	"( void ) posix_spawnattr_setflags ( & attr , ps_flags )"		4875610	0					
ANR	4875923	CastTarget	void		4875610	0					
ANR	4875924	CallExpression	"posix_spawnattr_setflags ( & attr , ps_flags )"		4875610	1					
ANR	4875925	Callee	posix_spawnattr_setflags		4875610	0					
ANR	4875926	Identifier	posix_spawnattr_setflags		4875610	0					
ANR	4875927	ArgumentList	& attr		4875610	1					
ANR	4875928	Argument	& attr		4875610	0					
ANR	4875929	UnaryOperationExpression	& attr		4875610	0					
ANR	4875930	UnaryOperator	&		4875610	0					
ANR	4875931	Identifier	attr		4875610	1					
ANR	4875932	Argument	ps_flags		4875610	1					
ANR	4875933	Identifier	ps_flags		4875610	0					
ANR	4875934	IfStatement	if ( bits == 32 )		4875610	7					
ANR	4875935	Condition	bits == 32	354:6:8500:8509	4875610	0	True				
ANR	4875936	EqualityExpression	bits == 32		4875610	0		==			
ANR	4875937	Identifier	bits		4875610	0					
ANR	4875938	PrimaryExpression	32		4875610	1					
ANR	4875939	CompoundStatement		50:18:1415:1415	4875610	1					
ANR	4875940	ExpressionStatement	cpu = CPU_TYPE_I386	355:3:8517:8536	4875610	0	True				
ANR	4875941	AssignmentExpression	cpu = CPU_TYPE_I386		4875610	0		=			
ANR	4875942	Identifier	cpu		4875610	0					
ANR	4875943	Identifier	CPU_TYPE_I386		4875610	1					
ANR	4875944	ExpressionStatement	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"	359:2:8580:8635	4875610	8	True				
ANR	4875945	CallExpression	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"		4875610	0					
ANR	4875946	Callee	posix_spawnattr_setbinpref_np		4875610	0					
ANR	4875947	Identifier	posix_spawnattr_setbinpref_np		4875610	0					
ANR	4875948	ArgumentList	& attr		4875610	1					
ANR	4875949	Argument	& attr		4875610	0					
ANR	4875950	UnaryOperationExpression	& attr		4875610	0					
ANR	4875951	UnaryOperator	&		4875610	0					
ANR	4875952	Identifier	attr		4875610	1					
ANR	4875953	Argument	1		4875610	1					
ANR	4875954	PrimaryExpression	1		4875610	0					
ANR	4875955	Argument	& cpu		4875610	2					
ANR	4875956	UnaryOperationExpression	& cpu		4875610	0					
ANR	4875957	UnaryOperator	&		4875610	0					
ANR	4875958	Identifier	cpu		4875610	1					
ANR	4875959	Argument	& copied		4875610	3					
ANR	4875960	UnaryOperationExpression	& copied		4875610	0					
ANR	4875961	UnaryOperator	&		4875610	0					
ANR	4875962	Identifier	copied		4875610	1					
ANR	4875963	CompoundStatement		57:3:1547:1584	4875610	9					
ANR	4875964	IdentifierDeclStatement	char * dst = r_file_readlink ( argv [ 0 ] ) ;	361:3:8644:8681	4875610	0	True				
ANR	4875965	IdentifierDecl	* dst = r_file_readlink ( argv [ 0 ] )		4875610	0					
ANR	4875966	IdentifierDeclType	char *		4875610	0					
ANR	4875967	Identifier	dst		4875610	1					
ANR	4875968	AssignmentExpression	* dst = r_file_readlink ( argv [ 0 ] )		4875610	2		=			
ANR	4875969	Identifier	dst		4875610	0					
ANR	4875970	CallExpression	r_file_readlink ( argv [ 0 ] )		4875610	1					
ANR	4875971	Callee	r_file_readlink		4875610	0					
ANR	4875972	Identifier	r_file_readlink		4875610	0					
ANR	4875973	ArgumentList	argv [ 0 ]		4875610	1					
ANR	4875974	Argument	argv [ 0 ]		4875610	0					
ANR	4875975	ArrayIndexing	argv [ 0 ]		4875610	0					
ANR	4875976	Identifier	argv		4875610	0					
ANR	4875977	PrimaryExpression	0		4875610	1					
ANR	4875978	IfStatement	if ( dst )		4875610	1					
ANR	4875979	Condition	dst	362:7:8690:8692	4875610	0	True				
ANR	4875980	Identifier	dst		4875610	0					
ANR	4875981	CompoundStatement		58:12:1598:1598	4875610	1					
ANR	4875982	ExpressionStatement	argv [ 0 ] = dst	363:4:8701:8714	4875610	0	True				
ANR	4875983	AssignmentExpression	argv [ 0 ] = dst		4875610	0		=			
ANR	4875984	ArrayIndexing	argv [ 0 ]		4875610	0					
ANR	4875985	Identifier	argv		4875610	0					
ANR	4875986	PrimaryExpression	0		4875610	1					
ANR	4875987	Identifier	dst		4875610	1					
ANR	4875988	ExpressionStatement	r_str_arg_unescape ( argv [ 0 ] )	367:2:8803:8831	4875610	10	True				
ANR	4875989	CallExpression	r_str_arg_unescape ( argv [ 0 ] )		4875610	0					
ANR	4875990	Callee	r_str_arg_unescape		4875610	0					
ANR	4875991	Identifier	r_str_arg_unescape		4875610	0					
ANR	4875992	ArgumentList	argv [ 0 ]		4875610	1					
ANR	4875993	Argument	argv [ 0 ]		4875610	0					
ANR	4875994	ArrayIndexing	argv [ 0 ]		4875610	0					
ANR	4875995	Identifier	argv		4875610	0					
ANR	4875996	PrimaryExpression	0		4875610	1					
ANR	4875997	ExpressionStatement	"ret = posix_spawnp ( & p , argv [ 0 ] , & fileActions , & attr , argv , NULL )"	369:2:8836:8901	4875610	11	True				
ANR	4875998	AssignmentExpression	"ret = posix_spawnp ( & p , argv [ 0 ] , & fileActions , & attr , argv , NULL )"		4875610	0		=			
ANR	4875999	Identifier	ret		4875610	0					
ANR	4876000	CallExpression	"posix_spawnp ( & p , argv [ 0 ] , & fileActions , & attr , argv , NULL )"		4875610	1					
ANR	4876001	Callee	posix_spawnp		4875610	0					
ANR	4876002	Identifier	posix_spawnp		4875610	0					
ANR	4876003	ArgumentList	& p		4875610	1					
ANR	4876004	Argument	& p		4875610	0					
ANR	4876005	UnaryOperationExpression	& p		4875610	0					
ANR	4876006	UnaryOperator	&		4875610	0					
ANR	4876007	Identifier	p		4875610	1					
ANR	4876008	Argument	argv [ 0 ]		4875610	1					
ANR	4876009	ArrayIndexing	argv [ 0 ]		4875610	0					
ANR	4876010	Identifier	argv		4875610	0					
ANR	4876011	PrimaryExpression	0		4875610	1					
ANR	4876012	Argument	& fileActions		4875610	2					
ANR	4876013	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876014	UnaryOperator	&		4875610	0					
ANR	4876015	Identifier	fileActions		4875610	1					
ANR	4876016	Argument	& attr		4875610	3					
ANR	4876017	UnaryOperationExpression	& attr		4875610	0					
ANR	4876018	UnaryOperator	&		4875610	0					
ANR	4876019	Identifier	attr		4875610	1					
ANR	4876020	Argument	argv		4875610	4					
ANR	4876021	Identifier	argv		4875610	0					
ANR	4876022	Argument	NULL		4875610	5					
ANR	4876023	Identifier	NULL		4875610	0					
ANR	4876024	ExpressionStatement	handle_posix_error ( ret )	370:2:8905:8929	4875610	12	True				
ANR	4876025	CallExpression	handle_posix_error ( ret )		4875610	0					
ANR	4876026	Callee	handle_posix_error		4875610	0					
ANR	4876027	Identifier	handle_posix_error		4875610	0					
ANR	4876028	ArgumentList	ret		4875610	1					
ANR	4876029	Argument	ret		4875610	0					
ANR	4876030	Identifier	ret		4875610	0					
ANR	4876031	ExpressionStatement	posix_spawn_file_actions_destroy ( & fileActions )	371:2:8933:8980	4875610	13	True				
ANR	4876032	CallExpression	posix_spawn_file_actions_destroy ( & fileActions )		4875610	0					
ANR	4876033	Callee	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876034	Identifier	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876035	ArgumentList	& fileActions		4875610	1					
ANR	4876036	Argument	& fileActions		4875610	0					
ANR	4876037	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876038	UnaryOperator	&		4875610	0					
ANR	4876039	Identifier	fileActions		4875610	1					
ANR	4876040	ExpressionStatement	r_str_argv_free ( argv )	372:2:8984:9006	4875610	14	True				
ANR	4876041	CallExpression	r_str_argv_free ( argv )		4875610	0					
ANR	4876042	Callee	r_str_argv_free		4875610	0					
ANR	4876043	Identifier	r_str_argv_free		4875610	0					
ANR	4876044	ArgumentList	argv		4875610	1					
ANR	4876045	Argument	argv		4875610	0					
ANR	4876046	Identifier	argv		4875610	0					
ANR	4876047	ExpressionStatement	free ( _cmd )	373:2:9010:9021	4875610	15	True				
ANR	4876048	CallExpression	free ( _cmd )		4875610	0					
ANR	4876049	Callee	free		4875610	0					
ANR	4876050	Identifier	free		4875610	0					
ANR	4876051	ArgumentList	_cmd		4875610	1					
ANR	4876052	Argument	_cmd		4875610	0					
ANR	4876053	Identifier	_cmd		4875610	0					
ANR	4876054	ReturnStatement	return p ;	374:2:9025:9033	4875610	16	True				
ANR	4876055	Identifier	p		4875610	0					
ANR	4876056	IdentifierDeclStatement	int ret ;	376:1:9039:9046	4875610	25	True				
ANR	4876057	IdentifierDecl	ret		4875610	0					
ANR	4876058	IdentifierDeclType	int		4875610	0					
ANR	4876059	Identifier	ret		4875610	1					
ANR	4876060	ExpressionStatement	"argv = r_str_argv ( cmd , NULL )"	377:1:9049:9078	4875610	26	True				
ANR	4876061	AssignmentExpression	"argv = r_str_argv ( cmd , NULL )"		4875610	0		=			
ANR	4876062	Identifier	argv		4875610	0					
ANR	4876063	CallExpression	"r_str_argv ( cmd , NULL )"		4875610	1					
ANR	4876064	Callee	r_str_argv		4875610	0					
ANR	4876065	Identifier	r_str_argv		4875610	0					
ANR	4876066	ArgumentList	cmd		4875610	1					
ANR	4876067	Argument	cmd		4875610	0					
ANR	4876068	Identifier	cmd		4875610	0					
ANR	4876069	Argument	NULL		4875610	1					
ANR	4876070	Identifier	NULL		4875610	0					
ANR	4876071	IfStatement	if ( ! argv )		4875610	27					
ANR	4876072	Condition	! argv	378:5:9085:9089	4875610	0	True				
ANR	4876073	UnaryOperationExpression	! argv		4875610	0					
ANR	4876074	UnaryOperator	!		4875610	0					
ANR	4876075	Identifier	argv		4875610	1					
ANR	4876076	CompoundStatement		74:12:1995:1995	4875610	1					
ANR	4876077	ExpressionStatement	posix_spawn_file_actions_destroy ( & fileActions )	379:2:9096:9143	4875610	0	True				
ANR	4876078	CallExpression	posix_spawn_file_actions_destroy ( & fileActions )		4875610	0					
ANR	4876079	Callee	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876080	Identifier	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876081	ArgumentList	& fileActions		4875610	1					
ANR	4876082	Argument	& fileActions		4875610	0					
ANR	4876083	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876084	UnaryOperator	&		4875610	0					
ANR	4876085	Identifier	fileActions		4875610	1					
ANR	4876086	ReturnStatement	return - 1 ;	380:2:9147:9156	4875610	1	True				
ANR	4876087	UnaryOperationExpression	- 1		4875610	0					
ANR	4876088	UnaryOperator	-		4875610	0					
ANR	4876089	PrimaryExpression	1		4875610	1					
ANR	4876090	IdentifierDeclStatement	"RRunProfile * rp = _get_run_profile ( io , bits , argv ) ;"	382:1:9162:9213	4875610	28	True				
ANR	4876091	IdentifierDecl	"* rp = _get_run_profile ( io , bits , argv )"		4875610	0					
ANR	4876092	IdentifierDeclType	RRunProfile *		4875610	0					
ANR	4876093	Identifier	rp		4875610	1					
ANR	4876094	AssignmentExpression	"* rp = _get_run_profile ( io , bits , argv )"		4875610	2		=			
ANR	4876095	Identifier	rp		4875610	0					
ANR	4876096	CallExpression	"_get_run_profile ( io , bits , argv )"		4875610	1					
ANR	4876097	Callee	_get_run_profile		4875610	0					
ANR	4876098	Identifier	_get_run_profile		4875610	0					
ANR	4876099	ArgumentList	io		4875610	1					
ANR	4876100	Argument	io		4875610	0					
ANR	4876101	Identifier	io		4875610	0					
ANR	4876102	Argument	bits		4875610	1					
ANR	4876103	Identifier	bits		4875610	0					
ANR	4876104	Argument	argv		4875610	2					
ANR	4876105	Identifier	argv		4875610	0					
ANR	4876106	IfStatement	if ( ! rp )		4875610	29					
ANR	4876107	Condition	! rp	383:5:9220:9222	4875610	0	True				
ANR	4876108	UnaryOperationExpression	! rp		4875610	0					
ANR	4876109	UnaryOperator	!		4875610	0					
ANR	4876110	Identifier	rp		4875610	1					
ANR	4876111	CompoundStatement		79:10:2128:2128	4875610	1					
ANR	4876112	ExpressionStatement	r_str_argv_free ( argv )	384:2:9229:9251	4875610	0	True				
ANR	4876113	CallExpression	r_str_argv_free ( argv )		4875610	0					
ANR	4876114	Callee	r_str_argv_free		4875610	0					
ANR	4876115	Identifier	r_str_argv_free		4875610	0					
ANR	4876116	ArgumentList	argv		4875610	1					
ANR	4876117	Argument	argv		4875610	0					
ANR	4876118	Identifier	argv		4875610	0					
ANR	4876119	ExpressionStatement	posix_spawn_file_actions_destroy ( & fileActions )	385:2:9255:9302	4875610	1	True				
ANR	4876120	CallExpression	posix_spawn_file_actions_destroy ( & fileActions )		4875610	0					
ANR	4876121	Callee	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876122	Identifier	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876123	ArgumentList	& fileActions		4875610	1					
ANR	4876124	Argument	& fileActions		4875610	0					
ANR	4876125	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876126	UnaryOperator	&		4875610	0					
ANR	4876127	Identifier	fileActions		4875610	1					
ANR	4876128	ReturnStatement	return - 1 ;	386:2:9306:9315	4875610	2	True				
ANR	4876129	UnaryOperationExpression	- 1		4875610	0					
ANR	4876130	UnaryOperator	-		4875610	0					
ANR	4876131	PrimaryExpression	1		4875610	1					
ANR	4876132	ExpressionStatement	"handle_posix_redirection ( rp , & fileActions )"	388:1:9321:9364	4875610	30	True				
ANR	4876133	CallExpression	"handle_posix_redirection ( rp , & fileActions )"		4875610	0					
ANR	4876134	Callee	handle_posix_redirection		4875610	0					
ANR	4876135	Identifier	handle_posix_redirection		4875610	0					
ANR	4876136	ArgumentList	rp		4875610	1					
ANR	4876137	Argument	rp		4875610	0					
ANR	4876138	Identifier	rp		4875610	0					
ANR	4876139	Argument	& fileActions		4875610	1					
ANR	4876140	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876141	UnaryOperator	&		4875610	0					
ANR	4876142	Identifier	fileActions		4875610	1					
ANR	4876143	IfStatement	if ( rp -> _args [ 0 ] )		4875610	31					
ANR	4876144	Condition	rp -> _args [ 0 ]	389:5:9371:9382	4875610	0	True				
ANR	4876145	ArrayIndexing	rp -> _args [ 0 ]		4875610	0					
ANR	4876146	PtrMemberAccess	rp -> _args		4875610	0					
ANR	4876147	Identifier	rp		4875610	0					
ANR	4876148	Identifier	_args		4875610	1					
ANR	4876149	PrimaryExpression	0		4875610	1					
ANR	4876150	CompoundStatement		85:19:2288:2288	4875610	1					
ANR	4876151	IfStatement	if ( ! rp -> _aslr )		4875610	0					
ANR	4876152	Condition	! rp -> _aslr	390:6:9393:9402	4875610	0	True				
ANR	4876153	UnaryOperationExpression	! rp -> _aslr		4875610	0					
ANR	4876154	UnaryOperator	!		4875610	0					
ANR	4876155	PtrMemberAccess	rp -> _aslr		4875610	1					
ANR	4876156	Identifier	rp		4875610	0					
ANR	4876157	Identifier	_aslr		4875610	1					
ANR	4876158	CompoundStatement		86:18:2308:2308	4875610	1					
ANR	4876159	ExpressionStatement	ps_flags |= _POSIX_SPAWN_DISABLE_ASLR	391:3:9410:9447	4875610	0	True				
ANR	4876160	AssignmentExpression	ps_flags |= _POSIX_SPAWN_DISABLE_ASLR		4875610	0		|=			
ANR	4876161	Identifier	ps_flags		4875610	0					
ANR	4876162	Identifier	_POSIX_SPAWN_DISABLE_ASLR		4875610	1					
ANR	4876163	IfStatement	if ( rp -> _bits == 32 )		4875610	1					
ANR	4876164	Condition	rp -> _bits == 32	394:6:9474:9488	4875610	0	True				
ANR	4876165	EqualityExpression	rp -> _bits == 32		4875610	0		==			
ANR	4876166	PtrMemberAccess	rp -> _bits		4875610	0					
ANR	4876167	Identifier	rp		4875610	0					
ANR	4876168	Identifier	_bits		4875610	1					
ANR	4876169	PrimaryExpression	32		4875610	1					
ANR	4876170	CompoundStatement		90:23:2394:2394	4875610	1					
ANR	4876171	ExpressionStatement	cpu = CPU_TYPE_I386	395:3:9496:9515	4875610	0	True				
ANR	4876172	AssignmentExpression	cpu = CPU_TYPE_I386		4875610	0		=			
ANR	4876173	Identifier	cpu		4875610	0					
ANR	4876174	Identifier	CPU_TYPE_I386		4875610	1					
ANR	4876175	ExpressionStatement	"( void ) posix_spawnattr_setflags ( & attr , ps_flags )"	398:2:9530:9578	4875610	2	True				
ANR	4876176	CastExpression	"( void ) posix_spawnattr_setflags ( & attr , ps_flags )"		4875610	0					
ANR	4876177	CastTarget	void		4875610	0					
ANR	4876178	CallExpression	"posix_spawnattr_setflags ( & attr , ps_flags )"		4875610	1					
ANR	4876179	Callee	posix_spawnattr_setflags		4875610	0					
ANR	4876180	Identifier	posix_spawnattr_setflags		4875610	0					
ANR	4876181	ArgumentList	& attr		4875610	1					
ANR	4876182	Argument	& attr		4875610	0					
ANR	4876183	UnaryOperationExpression	& attr		4875610	0					
ANR	4876184	UnaryOperator	&		4875610	0					
ANR	4876185	Identifier	attr		4875610	1					
ANR	4876186	Argument	ps_flags		4875610	1					
ANR	4876187	Identifier	ps_flags		4875610	0					
ANR	4876188	ExpressionStatement	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"	399:2:9582:9637	4875610	3	True				
ANR	4876189	CallExpression	"posix_spawnattr_setbinpref_np ( & attr , 1 , & cpu , & copied )"		4875610	0					
ANR	4876190	Callee	posix_spawnattr_setbinpref_np		4875610	0					
ANR	4876191	Identifier	posix_spawnattr_setbinpref_np		4875610	0					
ANR	4876192	ArgumentList	& attr		4875610	1					
ANR	4876193	Argument	& attr		4875610	0					
ANR	4876194	UnaryOperationExpression	& attr		4875610	0					
ANR	4876195	UnaryOperator	&		4875610	0					
ANR	4876196	Identifier	attr		4875610	1					
ANR	4876197	Argument	1		4875610	1					
ANR	4876198	PrimaryExpression	1		4875610	0					
ANR	4876199	Argument	& cpu		4875610	2					
ANR	4876200	UnaryOperationExpression	& cpu		4875610	0					
ANR	4876201	UnaryOperator	&		4875610	0					
ANR	4876202	Identifier	cpu		4875610	1					
ANR	4876203	Argument	& copied		4875610	3					
ANR	4876204	UnaryOperationExpression	& copied		4875610	0					
ANR	4876205	UnaryOperator	&		4875610	0					
ANR	4876206	Identifier	copied		4875610	1					
ANR	4876207	ExpressionStatement	"ret = posix_spawnp ( & p , rp -> _args [ 0 ] , & fileActions , & attr , rp -> _args , NULL )"	400:2:9641:9716	4875610	4	True				
ANR	4876208	AssignmentExpression	"ret = posix_spawnp ( & p , rp -> _args [ 0 ] , & fileActions , & attr , rp -> _args , NULL )"		4875610	0		=			
ANR	4876209	Identifier	ret		4875610	0					
ANR	4876210	CallExpression	"posix_spawnp ( & p , rp -> _args [ 0 ] , & fileActions , & attr , rp -> _args , NULL )"		4875610	1					
ANR	4876211	Callee	posix_spawnp		4875610	0					
ANR	4876212	Identifier	posix_spawnp		4875610	0					
ANR	4876213	ArgumentList	& p		4875610	1					
ANR	4876214	Argument	& p		4875610	0					
ANR	4876215	UnaryOperationExpression	& p		4875610	0					
ANR	4876216	UnaryOperator	&		4875610	0					
ANR	4876217	Identifier	p		4875610	1					
ANR	4876218	Argument	rp -> _args [ 0 ]		4875610	1					
ANR	4876219	ArrayIndexing	rp -> _args [ 0 ]		4875610	0					
ANR	4876220	PtrMemberAccess	rp -> _args		4875610	0					
ANR	4876221	Identifier	rp		4875610	0					
ANR	4876222	Identifier	_args		4875610	1					
ANR	4876223	PrimaryExpression	0		4875610	1					
ANR	4876224	Argument	& fileActions		4875610	2					
ANR	4876225	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876226	UnaryOperator	&		4875610	0					
ANR	4876227	Identifier	fileActions		4875610	1					
ANR	4876228	Argument	& attr		4875610	3					
ANR	4876229	UnaryOperationExpression	& attr		4875610	0					
ANR	4876230	UnaryOperator	&		4875610	0					
ANR	4876231	Identifier	attr		4875610	1					
ANR	4876232	Argument	rp -> _args		4875610	4					
ANR	4876233	PtrMemberAccess	rp -> _args		4875610	0					
ANR	4876234	Identifier	rp		4875610	0					
ANR	4876235	Identifier	_args		4875610	1					
ANR	4876236	Argument	NULL		4875610	5					
ANR	4876237	Identifier	NULL		4875610	0					
ANR	4876238	ExpressionStatement	handle_posix_error ( ret )	401:2:9720:9744	4875610	5	True				
ANR	4876239	CallExpression	handle_posix_error ( ret )		4875610	0					
ANR	4876240	Callee	handle_posix_error		4875610	0					
ANR	4876241	Identifier	handle_posix_error		4875610	0					
ANR	4876242	ArgumentList	ret		4875610	1					
ANR	4876243	Argument	ret		4875610	0					
ANR	4876244	Identifier	ret		4875610	0					
ANR	4876245	ExpressionStatement	r_str_argv_free ( argv )	403:1:9750:9772	4875610	32	True				
ANR	4876246	CallExpression	r_str_argv_free ( argv )		4875610	0					
ANR	4876247	Callee	r_str_argv_free		4875610	0					
ANR	4876248	Identifier	r_str_argv_free		4875610	0					
ANR	4876249	ArgumentList	argv		4875610	1					
ANR	4876250	Argument	argv		4875610	0					
ANR	4876251	Identifier	argv		4875610	0					
ANR	4876252	ExpressionStatement	r_run_free ( rp )	404:1:9775:9790	4875610	33	True				
ANR	4876253	CallExpression	r_run_free ( rp )		4875610	0					
ANR	4876254	Callee	r_run_free		4875610	0					
ANR	4876255	Identifier	r_run_free		4875610	0					
ANR	4876256	ArgumentList	rp		4875610	1					
ANR	4876257	Argument	rp		4875610	0					
ANR	4876258	Identifier	rp		4875610	0					
ANR	4876259	ExpressionStatement	posix_spawn_file_actions_destroy ( & fileActions )	405:1:9793:9840	4875610	34	True				
ANR	4876260	CallExpression	posix_spawn_file_actions_destroy ( & fileActions )		4875610	0					
ANR	4876261	Callee	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876262	Identifier	posix_spawn_file_actions_destroy		4875610	0					
ANR	4876263	ArgumentList	& fileActions		4875610	1					
ANR	4876264	Argument	& fileActions		4875610	0					
ANR	4876265	UnaryOperationExpression	& fileActions		4875610	0					
ANR	4876266	UnaryOperator	&		4875610	0					
ANR	4876267	Identifier	fileActions		4875610	1					
ANR	4876268	ReturnStatement	return p ;	406:1:9843:9851	4875610	35	True				
ANR	4876269	Identifier	p		4875610	0					
ANR	4876270	ReturnType	static int		4875610	1					
ANR	4876271	Identifier	fork_and_ptraceme_for_mac		4875610	2					
ANR	4876272	ParameterList	"RIO * io , int bits , const char * cmd"		4875610	3					
ANR	4876273	Parameter	RIO * io	305:37:7060:7066	4875610	0	True				
ANR	4876274	ParameterType	RIO *		4875610	0					
ANR	4876275	Identifier	io		4875610	1					
ANR	4876276	Parameter	int bits	305:46:7069:7076	4875610	1	True				
ANR	4876277	ParameterType	int		4875610	0					
ANR	4876278	Identifier	bits		4875610	1					
ANR	4876279	Parameter	const char * cmd	305:56:7079:7093	4875610	2	True				
ANR	4876280	ParameterType	const char *		4875610	0					
ANR	4876281	Identifier	cmd		4875610	1					
ANR	4876282	CFGEntryNode	ENTRY		4875610		True				
ANR	4876283	CFGExitNode	EXIT		4875610		True				
ANR	4876284	Symbol	& all_signals		4875610						
ANR	4876285	Symbol	* io -> runprofile		4875610						
ANR	4876286	Symbol	copied		4875610						
ANR	4876287	Symbol	& cpu		4875610						
ANR	4876288	Symbol	* argv		4875610						
ANR	4876289	Symbol	& copied		4875610						
ANR	4876290	Symbol	io -> runprofile		4875610						
ANR	4876291	Symbol	fileActions		4875610						
ANR	4876292	Symbol	POSIX_SPAWN_SETSIGMASK		4875610						
ANR	4876293	Symbol	no_signals		4875610						
ANR	4876294	Symbol	* * io		4875610						
ANR	4876295	Symbol	posix_spawnp		4875610						
ANR	4876296	Symbol	ps_flags		4875610						
ANR	4876297	Symbol	useASLR		4875610						
ANR	4876298	Symbol	ret		4875610						
ANR	4876299	Symbol	r_file_readlink		4875610						
ANR	4876300	Symbol	NULL		4875610						
ANR	4876301	Symbol	STDIN_FILENO		4875610						
ANR	4876302	Symbol	io		4875610						
ANR	4876303	Symbol	all_signals		4875610						
ANR	4876304	Symbol	bits		4875610						
ANR	4876305	Symbol	* * rp		4875610						
ANR	4876306	Symbol	cpu		4875610						
ANR	4876307	Symbol	* rp -> _args		4875610						
ANR	4876308	Symbol	& no_signals		4875610						
ANR	4876309	Symbol	r_str_appendf		4875610						
ANR	4876310	Symbol	CPU_TYPE_ANY		4875610						
ANR	4876311	Symbol	rp -> _bits		4875610						
ANR	4876312	Symbol	cmd		4875610						
ANR	4876313	Symbol	POSIX_SPAWN_START_SUSPENDED		4875610						
ANR	4876314	Symbol	rp		4875610						
ANR	4876315	Symbol	_POSIX_SPAWN_DISABLE_ASLR		4875610						
ANR	4876316	Symbol	CPU_TYPE_I386		4875610						
ANR	4876317	Symbol	* ( io -> runprofile )		4875610						
ANR	4876318	Symbol	POSIX_SPAWN_SETSIGDEF		4875610						
ANR	4876319	Symbol	dst		4875610						
ANR	4876320	Symbol	argv		4875610						
ANR	4876321	Symbol	rp -> _args		4875610						
ANR	4876322	Symbol	* io		4875610						
ANR	4876323	Symbol	POSIX_SPAWN_CLOEXEC_DEFAULT		4875610						
ANR	4876324	Symbol	io -> args		4875610						
ANR	4876325	Symbol	_cmd		4875610						
ANR	4876326	Symbol	attr		4875610						
ANR	4876327	Symbol	STDERR_FILENO		4875610						
ANR	4876328	Symbol	r_str_argv		4875610						
ANR	4876329	Symbol	& attr		4875610						
ANR	4876330	Symbol	STDOUT_FILENO		4875610						
ANR	4876331	Symbol	* rp		4875610						
ANR	4876332	Symbol	io -> aslr		4875610						
ANR	4876333	Symbol	rp -> _aslr		4875610						
ANR	4876334	Symbol	_get_run_profile		4875610						
ANR	4876335	Symbol	p		4875610						
ANR	4876336	Symbol	& fileActions		4875610						
ANR	4876337	Symbol	runprofile		4875610						
ANR	4876338	Symbol	& p		4875610						
ANR	4876339	Symbol	strdup		4875610						
ANR	4876340	ClassDef	fork_child_data_t	411:8:9943:10044							
ANR	4876341	DeclStmt									
ANR	4876342	Decl							RIO	RIO *	io
ANR	4876343	DeclStmt									
ANR	4876344	Decl							int	int	bits
ANR	4876345	DeclStmt									
ANR	4876346	Decl							bool	bool	runprofile
ANR	4876347	DeclStmt									
ANR	4876348	Decl							const char	const char *	cmd
ANR	4876349	DeclStmt									
ANR	4876350	Decl							fork_child_data_t	fork_child_data_t	fork_child_data
ANR	4876351	Function	fork_child_callback	418:0:10047:11057							
ANR	4876352	FunctionDef	fork_child_callback (void * user)		4876351	0					
ANR	4876353	CompoundStatement		418:44:10091:11057	4876351	0					
ANR	4876354	IdentifierDeclStatement	fork_child_data * data = user ;	419:1:10094:10122	4876351	0	True				
ANR	4876355	IdentifierDecl	* data = user		4876351	0					
ANR	4876356	IdentifierDeclType	fork_child_data *		4876351	0					
ANR	4876357	Identifier	data		4876351	1					
ANR	4876358	AssignmentExpression	* data = user		4876351	2		=			
ANR	4876359	Identifier	user		4876351	0					
ANR	4876360	Identifier	user		4876351	1					
ANR	4876361	IfStatement	if ( data -> runprofile )		4876351	1					
ANR	4876362	Condition	data -> runprofile	420:5:10129:10144	4876351	0	True				
ANR	4876363	PtrMemberAccess	data -> runprofile		4876351	0					
ANR	4876364	Identifier	data		4876351	0					
ANR	4876365	Identifier	runprofile		4876351	1					
ANR	4876366	CompoundStatement		8:2:137:200	4876351	1					
ANR	4876367	IdentifierDeclStatement	"char * * argv = r_str_argv ( data -> cmd , NULL ) ;"	421:2:10151:10193	4876351	0	True				
ANR	4876368	IdentifierDecl	"* * argv = r_str_argv ( data -> cmd , NULL )"		4876351	0					
ANR	4876369	IdentifierDeclType	char * *		4876351	0					
ANR	4876370	Identifier	argv		4876351	1					
ANR	4876371	AssignmentExpression	"* * argv = r_str_argv ( data -> cmd , NULL )"		4876351	2		=			
ANR	4876372	Identifier	argv		4876351	0					
ANR	4876373	CallExpression	"r_str_argv ( data -> cmd , NULL )"		4876351	1					
ANR	4876374	Callee	r_str_argv		4876351	0					
ANR	4876375	Identifier	r_str_argv		4876351	0					
ANR	4876376	ArgumentList	data -> cmd		4876351	1					
ANR	4876377	Argument	data -> cmd		4876351	0					
ANR	4876378	PtrMemberAccess	data -> cmd		4876351	0					
ANR	4876379	Identifier	data		4876351	0					
ANR	4876380	Identifier	cmd		4876351	1					
ANR	4876381	Argument	NULL		4876351	1					
ANR	4876382	Identifier	NULL		4876351	0					
ANR	4876383	IfStatement	if ( ! argv )		4876351	1					
ANR	4876384	Condition	! argv	422:6:10201:10205	4876351	0	True				
ANR	4876385	UnaryOperationExpression	! argv		4876351	0					
ANR	4876386	UnaryOperator	!		4876351	0					
ANR	4876387	Identifier	argv		4876351	1					
ANR	4876388	CompoundStatement		5:13:116:116	4876351	1					
ANR	4876389	ExpressionStatement	exit ( 1 )	423:3:10213:10221	4876351	0	True				
ANR	4876390	CallExpression	exit ( 1 )		4876351	0					
ANR	4876391	Callee	exit		4876351	0					
ANR	4876392	Identifier	exit		4876351	0					
ANR	4876393	ArgumentList	1		4876351	1					
ANR	4876394	Argument	1		4876351	0					
ANR	4876395	PrimaryExpression	1		4876351	0					
ANR	4876396	IdentifierDeclStatement	"RRunProfile * rp = _get_run_profile ( data -> io , data -> bits , argv ) ;"	425:2:10229:10292	4876351	2	True				
ANR	4876397	IdentifierDecl	"* rp = _get_run_profile ( data -> io , data -> bits , argv )"		4876351	0					
ANR	4876398	IdentifierDeclType	RRunProfile *		4876351	0					
ANR	4876399	Identifier	rp		4876351	1					
ANR	4876400	AssignmentExpression	"* rp = _get_run_profile ( data -> io , data -> bits , argv )"		4876351	2		=			
ANR	4876401	Identifier	rp		4876351	0					
ANR	4876402	CallExpression	"_get_run_profile ( data -> io , data -> bits , argv )"		4876351	1					
ANR	4876403	Callee	_get_run_profile		4876351	0					
ANR	4876404	Identifier	_get_run_profile		4876351	0					
ANR	4876405	ArgumentList	data -> io		4876351	1					
ANR	4876406	Argument	data -> io		4876351	0					
ANR	4876407	PtrMemberAccess	data -> io		4876351	0					
ANR	4876408	Identifier	data		4876351	0					
ANR	4876409	Identifier	io		4876351	1					
ANR	4876410	Argument	data -> bits		4876351	1					
ANR	4876411	PtrMemberAccess	data -> bits		4876351	0					
ANR	4876412	Identifier	data		4876351	0					
ANR	4876413	Identifier	bits		4876351	1					
ANR	4876414	Argument	argv		4876351	2					
ANR	4876415	Identifier	argv		4876351	0					
ANR	4876416	IfStatement	if ( ! rp )		4876351	3					
ANR	4876417	Condition	! rp	426:6:10300:10302	4876351	0	True				
ANR	4876418	UnaryOperationExpression	! rp		4876351	0					
ANR	4876419	UnaryOperator	!		4876351	0					
ANR	4876420	Identifier	rp		4876351	1					
ANR	4876421	CompoundStatement		9:11:213:213	4876351	1					
ANR	4876422	ExpressionStatement	r_str_argv_free ( argv )	427:3:10310:10332	4876351	0	True				
ANR	4876423	CallExpression	r_str_argv_free ( argv )		4876351	0					
ANR	4876424	Callee	r_str_argv_free		4876351	0					
ANR	4876425	Identifier	r_str_argv_free		4876351	0					
ANR	4876426	ArgumentList	argv		4876351	1					
ANR	4876427	Argument	argv		4876351	0					
ANR	4876428	Identifier	argv		4876351	0					
ANR	4876429	ExpressionStatement	exit ( 1 )	428:3:10337:10345	4876351	1	True				
ANR	4876430	CallExpression	exit ( 1 )		4876351	0					
ANR	4876431	Callee	exit		4876351	0					
ANR	4876432	Identifier	exit		4876351	0					
ANR	4876433	ArgumentList	1		4876351	1					
ANR	4876434	Argument	1		4876351	0					
ANR	4876435	PrimaryExpression	1		4876351	0					
ANR	4876436	ExpressionStatement	trace_me ( )	430:2:10353:10364	4876351	4	True				
ANR	4876437	CallExpression	trace_me ( )		4876351	0					
ANR	4876438	Callee	trace_me		4876351	0					
ANR	4876439	Identifier	trace_me		4876351	0					
ANR	4876440	ArgumentList			4876351	1					
ANR	4876441	ExpressionStatement	r_run_start ( rp )	431:2:10368:10384	4876351	5	True				
ANR	4876442	CallExpression	r_run_start ( rp )		4876351	0					
ANR	4876443	Callee	r_run_start		4876351	0					
ANR	4876444	Identifier	r_run_start		4876351	0					
ANR	4876445	ArgumentList	rp		4876351	1					
ANR	4876446	Argument	rp		4876351	0					
ANR	4876447	Identifier	rp		4876351	0					
ANR	4876448	ExpressionStatement	r_run_free ( rp )	432:2:10388:10403	4876351	6	True				
ANR	4876449	CallExpression	r_run_free ( rp )		4876351	0					
ANR	4876450	Callee	r_run_free		4876351	0					
ANR	4876451	Identifier	r_run_free		4876351	0					
ANR	4876452	ArgumentList	rp		4876351	1					
ANR	4876453	Argument	rp		4876351	0					
ANR	4876454	Identifier	rp		4876351	0					
ANR	4876455	ExpressionStatement	r_str_argv_free ( argv )	433:2:10407:10429	4876351	7	True				
ANR	4876456	CallExpression	r_str_argv_free ( argv )		4876351	0					
ANR	4876457	Callee	r_str_argv_free		4876351	0					
ANR	4876458	Identifier	r_str_argv_free		4876351	0					
ANR	4876459	ArgumentList	argv		4876351	1					
ANR	4876460	Argument	argv		4876351	0					
ANR	4876461	Identifier	argv		4876351	0					
ANR	4876462	ExpressionStatement	exit ( 1 )	434:2:10433:10441	4876351	8	True				
ANR	4876463	CallExpression	exit ( 1 )		4876351	0					
ANR	4876464	Callee	exit		4876351	0					
ANR	4876465	Identifier	exit		4876351	0					
ANR	4876466	ArgumentList	1		4876351	1					
ANR	4876467	Argument	1		4876351	0					
ANR	4876468	PrimaryExpression	1		4876351	0					
ANR	4876469	ElseStatement	else		4876351	0					
ANR	4876470	CompoundStatement		23:2:502:539	4876351	0					
ANR	4876471	IdentifierDeclStatement	"char * _cmd = data -> io -> args ? r_str_appendf ( strdup ( data -> cmd ) , "" %s"" , data -> io -> args ) : strdup ( data -> cmd ) ;"	436:2:10455:10575	4876351	0	True				
ANR	4876472	IdentifierDecl	"* _cmd = data -> io -> args ? r_str_appendf ( strdup ( data -> cmd ) , "" %s"" , data -> io -> args ) : strdup ( data -> cmd )"		4876351	0					
ANR	4876473	IdentifierDeclType	char *		4876351	0					
ANR	4876474	Identifier	_cmd		4876351	1					
ANR	4876475	AssignmentExpression	"* _cmd = data -> io -> args ? r_str_appendf ( strdup ( data -> cmd ) , "" %s"" , data -> io -> args ) : strdup ( data -> cmd )"		4876351	2		=			
ANR	4876476	Identifier	_cmd		4876351	0					
ANR	4876477	ConditionalExpression	"data -> io -> args ? r_str_appendf ( strdup ( data -> cmd ) , "" %s"" , data -> io -> args ) : strdup ( data -> cmd )"		4876351	1					
ANR	4876478	Condition	data -> io -> args		4876351	0					
ANR	4876479	PtrMemberAccess	data -> io -> args		4876351	0					
ANR	4876480	PtrMemberAccess	data -> io		4876351	0					
ANR	4876481	Identifier	data		4876351	0					
ANR	4876482	Identifier	io		4876351	1					
ANR	4876483	Identifier	args		4876351	1					
ANR	4876484	CallExpression	"r_str_appendf ( strdup ( data -> cmd ) , "" %s"" , data -> io -> args )"		4876351	1					
ANR	4876485	Callee	r_str_appendf		4876351	0					
ANR	4876486	Identifier	r_str_appendf		4876351	0					
ANR	4876487	ArgumentList	strdup ( data -> cmd )		4876351	1					
ANR	4876488	Argument	strdup ( data -> cmd )		4876351	0					
ANR	4876489	CallExpression	strdup ( data -> cmd )		4876351	0					
ANR	4876490	Callee	strdup		4876351	0					
ANR	4876491	Identifier	strdup		4876351	0					
ANR	4876492	ArgumentList	data -> cmd		4876351	1					
ANR	4876493	Argument	data -> cmd		4876351	0					
ANR	4876494	PtrMemberAccess	data -> cmd		4876351	0					
ANR	4876495	Identifier	data		4876351	0					
ANR	4876496	Identifier	cmd		4876351	1					
ANR	4876497	Argument	""" %s"""		4876351	1					
ANR	4876498	PrimaryExpression	""" %s"""		4876351	0					
ANR	4876499	Argument	data -> io -> args		4876351	2					
ANR	4876500	PtrMemberAccess	data -> io -> args		4876351	0					
ANR	4876501	PtrMemberAccess	data -> io		4876351	0					
ANR	4876502	Identifier	data		4876351	0					
ANR	4876503	Identifier	io		4876351	1					
ANR	4876504	Identifier	args		4876351	1					
ANR	4876505	CallExpression	strdup ( data -> cmd )		4876351	2					
ANR	4876506	Callee	strdup		4876351	0					
ANR	4876507	Identifier	strdup		4876351	0					
ANR	4876508	ArgumentList	data -> cmd		4876351	1					
ANR	4876509	Argument	data -> cmd		4876351	0					
ANR	4876510	PtrMemberAccess	data -> cmd		4876351	0					
ANR	4876511	Identifier	data		4876351	0					
ANR	4876512	Identifier	cmd		4876351	1					
ANR	4876513	ExpressionStatement	trace_me ( )	439:2:10579:10590	4876351	1	True				
ANR	4876514	CallExpression	trace_me ( )		4876351	0					
ANR	4876515	Callee	trace_me		4876351	0					
ANR	4876516	Identifier	trace_me		4876351	0					
ANR	4876517	ArgumentList			4876351	1					
ANR	4876518	IdentifierDeclStatement	"char * * argv = r_str_argv ( _cmd , NULL ) ;"	440:2:10594:10631	4876351	2	True				
ANR	4876519	IdentifierDecl	"* * argv = r_str_argv ( _cmd , NULL )"		4876351	0					
ANR	4876520	IdentifierDeclType	char * *		4876351	0					
ANR	4876521	Identifier	argv		4876351	1					
ANR	4876522	AssignmentExpression	"* * argv = r_str_argv ( _cmd , NULL )"		4876351	2		=			
ANR	4876523	Identifier	argv		4876351	0					
ANR	4876524	CallExpression	"r_str_argv ( _cmd , NULL )"		4876351	1					
ANR	4876525	Callee	r_str_argv		4876351	0					
ANR	4876526	Identifier	r_str_argv		4876351	0					
ANR	4876527	ArgumentList	_cmd		4876351	1					
ANR	4876528	Argument	_cmd		4876351	0					
ANR	4876529	Identifier	_cmd		4876351	0					
ANR	4876530	Argument	NULL		4876351	1					
ANR	4876531	Identifier	NULL		4876351	0					
ANR	4876532	IfStatement	if ( ! argv )		4876351	3					
ANR	4876533	Condition	! argv	441:6:10639:10643	4876351	0	True				
ANR	4876534	UnaryOperationExpression	! argv		4876351	0					
ANR	4876535	UnaryOperator	!		4876351	0					
ANR	4876536	Identifier	argv		4876351	1					
ANR	4876537	CompoundStatement		24:13:554:554	4876351	1					
ANR	4876538	ExpressionStatement	free ( _cmd )	442:3:10651:10662	4876351	0	True				
ANR	4876539	CallExpression	free ( _cmd )		4876351	0					
ANR	4876540	Callee	free		4876351	0					
ANR	4876541	Identifier	free		4876351	0					
ANR	4876542	ArgumentList	_cmd		4876351	1					
ANR	4876543	Argument	_cmd		4876351	0					
ANR	4876544	Identifier	_cmd		4876351	0					
ANR	4876545	ReturnStatement	return ;	443:3:10667:10673	4876351	1	True				
ANR	4876546	IfStatement	if ( argv && * argv )		4876351	4					
ANR	4876547	Condition	argv && * argv	445:6:10685:10697	4876351	0	True				
ANR	4876548	AndExpression	argv && * argv		4876351	0		&&			
ANR	4876549	Identifier	argv		4876351	0					
ANR	4876550	UnaryOperationExpression	* argv		4876351	1					
ANR	4876551	UnaryOperator	*		4876351	0					
ANR	4876552	Identifier	argv		4876351	1					
ANR	4876553	CompoundStatement		29:3:613:618	4876351	1					
ANR	4876554	IdentifierDeclStatement	int i ;	446:3:10705:10710	4876351	0	True				
ANR	4876555	IdentifierDecl	i		4876351	0					
ANR	4876556	IdentifierDeclType	int		4876351	0					
ANR	4876557	Identifier	i		4876351	1					
ANR	4876558	ForStatement	for ( i = 3 ; i < 1024 ; i ++ )		4876351	1					
ANR	4876559	ForInit	i = 3 ;	447:8:10720:10725	4876351	0	True				
ANR	4876560	AssignmentExpression	i = 3		4876351	0		=			
ANR	4876561	Identifier	i		4876351	0					
ANR	4876562	PrimaryExpression	3		4876351	1					
ANR	4876563	Condition	i < 1024	447:15:10727:10734	4876351	1	True				
ANR	4876564	RelationalExpression	i < 1024		4876351	0		<			
ANR	4876565	Identifier	i		4876351	0					
ANR	4876566	PrimaryExpression	1024		4876351	1					
ANR	4876567	PostIncDecOperationExpression	i ++	447:25:10737:10739	4876351	2	True				
ANR	4876568	Identifier	i		4876351	0					
ANR	4876569	IncDec	++		4876351	1					
ANR	4876570	CompoundStatement		30:30:650:650	4876351	3					
ANR	4876571	ExpressionStatement	( void ) close ( i )	448:4:10748:10763	4876351	0	True				
ANR	4876572	CastExpression	( void ) close ( i )		4876351	0					
ANR	4876573	CastTarget	void		4876351	0					
ANR	4876574	CallExpression	close ( i )		4876351	1					
ANR	4876575	Callee	close		4876351	0					
ANR	4876576	Identifier	close		4876351	0					
ANR	4876577	ArgumentList	i		4876351	1					
ANR	4876578	Argument	i		4876351	0					
ANR	4876579	Identifier	i		4876351	0					
ANR	4876580	ForStatement	for ( i = 0 ; argv [ i ] ; i ++ )		4876351	2					
ANR	4876581	ForInit	i = 0 ;	450:8:10778:10783	4876351	0	True				
ANR	4876582	AssignmentExpression	i = 0		4876351	0		=			
ANR	4876583	Identifier	i		4876351	0					
ANR	4876584	PrimaryExpression	0		4876351	1					
ANR	4876585	Condition	argv [ i ]	450:15:10785:10791	4876351	1	True				
ANR	4876586	ArrayIndexing	argv [ i ]		4876351	0					
ANR	4876587	Identifier	argv		4876351	0					
ANR	4876588	Identifier	i		4876351	1					
ANR	4876589	PostIncDecOperationExpression	i ++	450:24:10794:10796	4876351	2	True				
ANR	4876590	Identifier	i		4876351	0					
ANR	4876591	IncDec	++		4876351	1					
ANR	4876592	CompoundStatement		33:29:707:707	4876351	3					
ANR	4876593	ExpressionStatement	r_str_arg_unescape ( argv [ i ] )	451:4:10805:10833	4876351	0	True				
ANR	4876594	CallExpression	r_str_arg_unescape ( argv [ i ] )		4876351	0					
ANR	4876595	Callee	r_str_arg_unescape		4876351	0					
ANR	4876596	Identifier	r_str_arg_unescape		4876351	0					
ANR	4876597	ArgumentList	argv [ i ]		4876351	1					
ANR	4876598	Argument	argv [ i ]		4876351	0					
ANR	4876599	ArrayIndexing	argv [ i ]		4876351	0					
ANR	4876600	Identifier	argv		4876351	0					
ANR	4876601	Identifier	i		4876351	1					
ANR	4876602	IfStatement	"if ( execvp ( argv [ 0 ] , argv ) == - 1 )"		4876351	3					
ANR	4876603	Condition	"execvp ( argv [ 0 ] , argv ) == - 1"	453:7:10847:10874	4876351	0	True				
ANR	4876604	EqualityExpression	"execvp ( argv [ 0 ] , argv ) == - 1"		4876351	0		==			
ANR	4876605	CallExpression	"execvp ( argv [ 0 ] , argv )"		4876351	0					
ANR	4876606	Callee	execvp		4876351	0					
ANR	4876607	Identifier	execvp		4876351	0					
ANR	4876608	ArgumentList	argv [ 0 ]		4876351	1					
ANR	4876609	Argument	argv [ 0 ]		4876351	0					
ANR	4876610	ArrayIndexing	argv [ 0 ]		4876351	0					
ANR	4876611	Identifier	argv		4876351	0					
ANR	4876612	PrimaryExpression	0		4876351	1					
ANR	4876613	Argument	argv		4876351	1					
ANR	4876614	Identifier	argv		4876351	0					
ANR	4876615	UnaryOperationExpression	- 1		4876351	1					
ANR	4876616	UnaryOperator	-		4876351	0					
ANR	4876617	PrimaryExpression	1		4876351	1					
ANR	4876618	CompoundStatement		36:37:785:785	4876351	1					
ANR	4876619	ExpressionStatement	"eprintf ( ""Could not execvp: %s\\n"" , strerror ( errno ) )"	454:4:10883:10935	4876351	0	True				
ANR	4876620	CallExpression	"eprintf ( ""Could not execvp: %s\\n"" , strerror ( errno ) )"		4876351	0					
ANR	4876621	Callee	eprintf		4876351	0					
ANR	4876622	Identifier	eprintf		4876351	0					
ANR	4876623	ArgumentList	"""Could not execvp: %s\\n"""		4876351	1					
ANR	4876624	Argument	"""Could not execvp: %s\\n"""		4876351	0					
ANR	4876625	PrimaryExpression	"""Could not execvp: %s\\n"""		4876351	0					
ANR	4876626	Argument	strerror ( errno )		4876351	1					
ANR	4876627	CallExpression	strerror ( errno )		4876351	0					
ANR	4876628	Callee	strerror		4876351	0					
ANR	4876629	Identifier	strerror		4876351	0					
ANR	4876630	ArgumentList	errno		4876351	1					
ANR	4876631	Argument	errno		4876351	0					
ANR	4876632	Identifier	errno		4876351	0					
ANR	4876633	ExpressionStatement	exit ( MAGIC_EXIT )	455:4:10941:10958	4876351	1	True				
ANR	4876634	CallExpression	exit ( MAGIC_EXIT )		4876351	0					
ANR	4876635	Callee	exit		4876351	0					
ANR	4876636	Identifier	exit		4876351	0					
ANR	4876637	ArgumentList	MAGIC_EXIT		4876351	1					
ANR	4876638	Argument	MAGIC_EXIT		4876351	0					
ANR	4876639	Identifier	MAGIC_EXIT		4876351	0					
ANR	4876640	ElseStatement	else		4876351	0					
ANR	4876641	CompoundStatement		40:9:882:882	4876351	0					
ANR	4876642	ExpressionStatement	"eprintf ( ""Invalid execvp\\n"" )"	458:3:10979:11007	4876351	0	True				
ANR	4876643	CallExpression	"eprintf ( ""Invalid execvp\\n"" )"		4876351	0					
ANR	4876644	Callee	eprintf		4876351	0					
ANR	4876645	Identifier	eprintf		4876351	0					
ANR	4876646	ArgumentList	"""Invalid execvp\\n"""		4876351	1					
ANR	4876647	Argument	"""Invalid execvp\\n"""		4876351	0					
ANR	4876648	PrimaryExpression	"""Invalid execvp\\n"""		4876351	0					
ANR	4876649	ExpressionStatement	r_str_argv_free ( argv )	460:2:11015:11037	4876351	5	True				
ANR	4876650	CallExpression	r_str_argv_free ( argv )		4876351	0					
ANR	4876651	Callee	r_str_argv_free		4876351	0					
ANR	4876652	Identifier	r_str_argv_free		4876351	0					
ANR	4876653	ArgumentList	argv		4876351	1					
ANR	4876654	Argument	argv		4876351	0					
ANR	4876655	Identifier	argv		4876351	0					
ANR	4876656	ExpressionStatement	free ( _cmd )	461:2:11041:11052	4876351	6	True				
ANR	4876657	CallExpression	free ( _cmd )		4876351	0					
ANR	4876658	Callee	free		4876351	0					
ANR	4876659	Identifier	free		4876351	0					
ANR	4876660	ArgumentList	_cmd		4876351	1					
ANR	4876661	Argument	_cmd		4876351	0					
ANR	4876662	Identifier	_cmd		4876351	0					
ANR	4876663	ReturnType	static void		4876351	1					
ANR	4876664	Identifier	fork_child_callback		4876351	2					
ANR	4876665	ParameterList	void * user		4876351	3					
ANR	4876666	Parameter	void * user	418:32:10079:10088	4876351	0	True				
ANR	4876667	ParameterType	void *		4876351	0					
ANR	4876668	Identifier	user		4876351	1					
ANR	4876669	CFGEntryNode	ENTRY		4876351		True				
ANR	4876670	CFGExitNode	EXIT		4876351		True				
ANR	4876671	Symbol	* * data		4876351						
ANR	4876672	Symbol	data -> bits		4876351						
ANR	4876673	Symbol	data		4876351						
ANR	4876674	Symbol	data -> cmd		4876351						
ANR	4876675	Symbol	* argv		4876351						
ANR	4876676	Symbol	argv		4876351						
ANR	4876677	Symbol	MAGIC_EXIT		4876351						
ANR	4876678	Symbol	data -> io -> args		4876351						
ANR	4876679	Symbol	_cmd		4876351						
ANR	4876680	Symbol	r_str_argv		4876351						
ANR	4876681	Symbol	errno		4876351						
ANR	4876682	Symbol	NULL		4876351						
ANR	4876683	Symbol	* data -> io		4876351						
ANR	4876684	Symbol	execvp		4876351						
ANR	4876685	Symbol	i		4876351						
ANR	4876686	Symbol	data -> runprofile		4876351						
ANR	4876687	Symbol	data -> io		4876351						
ANR	4876688	Symbol	_get_run_profile		4876351						
ANR	4876689	Symbol	strerror		4876351						
ANR	4876690	Symbol	* i		4876351						
ANR	4876691	Symbol	r_str_appendf		4876351						
ANR	4876692	Symbol	strdup		4876351						
ANR	4876693	Symbol	user		4876351						
ANR	4876694	Symbol	* data		4876351						
ANR	4876695	Symbol	rp		4876351						
ANR	4876696	Function	fork_and_ptraceme_for_unix	465:0:11060:11998							
ANR	4876697	FunctionDef	"fork_and_ptraceme_for_unix (RIO * io , int bits , const char * cmd)"		4876696	0					
ANR	4876698	CompoundStatement		465:74:11134:11998	4876696	0					
ANR	4876699	IdentifierDeclStatement	"int ret , status , child_pid ;"	466:1:11137:11163	4876696	0	True				
ANR	4876700	IdentifierDecl	ret		4876696	0					
ANR	4876701	IdentifierDeclType	int		4876696	0					
ANR	4876702	Identifier	ret		4876696	1					
ANR	4876703	IdentifierDecl	status		4876696	1					
ANR	4876704	IdentifierDeclType	int		4876696	0					
ANR	4876705	Identifier	status		4876696	1					
ANR	4876706	IdentifierDecl	child_pid		4876696	2					
ANR	4876707	IdentifierDeclType	int		4876696	0					
ANR	4876708	Identifier	child_pid		4876696	1					
ANR	4876709	IdentifierDeclStatement	bool runprofile = io -> runprofile && * ( io -> runprofile ) ;	467:1:11166:11219	4876696	1	True				
ANR	4876710	IdentifierDecl	runprofile = io -> runprofile && * ( io -> runprofile )		4876696	0					
ANR	4876711	IdentifierDeclType	bool		4876696	0					
ANR	4876712	Identifier	runprofile		4876696	1					
ANR	4876713	AssignmentExpression	runprofile = io -> runprofile && * ( io -> runprofile )		4876696	2		=			
ANR	4876714	Identifier	runprofile		4876696	0					
ANR	4876715	AndExpression	io -> runprofile && * ( io -> runprofile )		4876696	1		&&			
ANR	4876716	PtrMemberAccess	io -> runprofile		4876696	0					
ANR	4876717	Identifier	io		4876696	0					
ANR	4876718	Identifier	runprofile		4876696	1					
ANR	4876719	UnaryOperationExpression	* ( io -> runprofile )		4876696	1					
ANR	4876720	UnaryOperator	*		4876696	0					
ANR	4876721	PtrMemberAccess	io -> runprofile		4876696	1					
ANR	4876722	Identifier	io		4876696	0					
ANR	4876723	Identifier	runprofile		4876696	1					
ANR	4876724	IdentifierDeclStatement	fork_child_data child_data ;	468:1:11222:11248	4876696	2	True				
ANR	4876725	IdentifierDecl	child_data		4876696	0					
ANR	4876726	IdentifierDeclType	fork_child_data		4876696	0					
ANR	4876727	Identifier	child_data		4876696	1					
ANR	4876728	ExpressionStatement	child_data . io = io	469:1:11251:11269	4876696	3	True				
ANR	4876729	AssignmentExpression	child_data . io = io		4876696	0		=			
ANR	4876730	MemberAccess	child_data . io		4876696	0					
ANR	4876731	Identifier	child_data		4876696	0					
ANR	4876732	Identifier	io		4876696	1					
ANR	4876733	Identifier	io		4876696	1					
ANR	4876734	ExpressionStatement	child_data . bits = bits	470:1:11272:11294	4876696	4	True				
ANR	4876735	AssignmentExpression	child_data . bits = bits		4876696	0		=			
ANR	4876736	MemberAccess	child_data . bits		4876696	0					
ANR	4876737	Identifier	child_data		4876696	0					
ANR	4876738	Identifier	bits		4876696	1					
ANR	4876739	Identifier	bits		4876696	1					
ANR	4876740	ExpressionStatement	child_data . runprofile = runprofile	471:1:11297:11331	4876696	5	True				
ANR	4876741	AssignmentExpression	child_data . runprofile = runprofile		4876696	0		=			
ANR	4876742	MemberAccess	child_data . runprofile		4876696	0					
ANR	4876743	Identifier	child_data		4876696	0					
ANR	4876744	Identifier	runprofile		4876696	1					
ANR	4876745	Identifier	runprofile		4876696	1					
ANR	4876746	ExpressionStatement	child_data . cmd = cmd	472:1:11334:11354	4876696	6	True				
ANR	4876747	AssignmentExpression	child_data . cmd = cmd		4876696	0		=			
ANR	4876748	MemberAccess	child_data . cmd		4876696	0					
ANR	4876749	Identifier	child_data		4876696	0					
ANR	4876750	Identifier	cmd		4876696	1					
ANR	4876751	Identifier	cmd		4876696	1					
ANR	4876752	ExpressionStatement	"child_pid = r_io_ptrace_fork ( io , fork_child_callback , & child_data )"	473:1:11357:11424	4876696	7	True				
ANR	4876753	AssignmentExpression	"child_pid = r_io_ptrace_fork ( io , fork_child_callback , & child_data )"		4876696	0		=			
ANR	4876754	Identifier	child_pid		4876696	0					
ANR	4876755	CallExpression	"r_io_ptrace_fork ( io , fork_child_callback , & child_data )"		4876696	1					
ANR	4876756	Callee	r_io_ptrace_fork		4876696	0					
ANR	4876757	Identifier	r_io_ptrace_fork		4876696	0					
ANR	4876758	ArgumentList	io		4876696	1					
ANR	4876759	Argument	io		4876696	0					
ANR	4876760	Identifier	io		4876696	0					
ANR	4876761	Argument	fork_child_callback		4876696	1					
ANR	4876762	Identifier	fork_child_callback		4876696	0					
ANR	4876763	Argument	& child_data		4876696	2					
ANR	4876764	UnaryOperationExpression	& child_data		4876696	0					
ANR	4876765	UnaryOperator	&		4876696	0					
ANR	4876766	Identifier	child_data		4876696	1					
ANR	4876767	SwitchStatement	switch ( child_pid )		4876696	8					
ANR	4876768	Condition	child_pid	474:9:11435:11443	4876696	0	True				
ANR	4876769	Identifier	child_pid		4876696	0					
ANR	4876770	CompoundStatement		10:20:311:311	4876696	1					
ANR	4876771	Statement	case	475:1:11449:11452	4876696	0	True				
ANR	4876772	Statement	-	475:6:11454:11454	4876696	1	True				
ANR	4876773	Label	1 :	475:7:11455:11456	4876696	2	True				
ANR	4876774	ExpressionStatement	"perror ( ""fork_and_ptraceme"" )"	476:2:11460:11488	4876696	3	True				
ANR	4876775	CallExpression	"perror ( ""fork_and_ptraceme"" )"		4876696	0					
ANR	4876776	Callee	perror		4876696	0					
ANR	4876777	Identifier	perror		4876696	0					
ANR	4876778	ArgumentList	"""fork_and_ptraceme"""		4876696	1					
ANR	4876779	Argument	"""fork_and_ptraceme"""		4876696	0					
ANR	4876780	PrimaryExpression	"""fork_and_ptraceme"""		4876696	0					
ANR	4876781	BreakStatement	break ;	477:2:11492:11497	4876696	4	True				
ANR	4876782	Label	case 0 :	478:1:11500:11506	4876696	5	True				
ANR	4876783	ReturnStatement	return - 1 ;	479:2:11510:11519	4876696	6	True				
ANR	4876784	UnaryOperationExpression	- 1		4876696	0					
ANR	4876785	UnaryOperator	-		4876696	0					
ANR	4876786	PrimaryExpression	1		4876696	1					
ANR	4876787	Label	default :	480:1:11522:11529	4876696	7	True				
ANR	4876788	Identifier	default		4876696	0					
ANR	4876789	DoStatement	do		4876696	8					
ANR	4876790	CompoundStatement		18:5:436:436	4876696	0					
ANR	4876791	ExpressionStatement	ret = wait ( & status )	483:3:11576:11596	4876696	0	True				
ANR	4876792	AssignmentExpression	ret = wait ( & status )		4876696	0		=			
ANR	4876793	Identifier	ret		4876696	0					
ANR	4876794	CallExpression	wait ( & status )		4876696	1					
ANR	4876795	Callee	wait		4876696	0					
ANR	4876796	Identifier	wait		4876696	0					
ANR	4876797	ArgumentList	& status		4876696	1					
ANR	4876798	Argument	& status		4876696	0					
ANR	4876799	UnaryOperationExpression	& status		4876696	0					
ANR	4876800	UnaryOperator	&		4876696	0					
ANR	4876801	Identifier	status		4876696	1					
ANR	4876802	IfStatement	if ( ret == - 1 )		4876696	1					
ANR	4876803	Condition	ret == - 1	484:7:11605:11613	4876696	0	True				
ANR	4876804	EqualityExpression	ret == - 1		4876696	0		==			
ANR	4876805	Identifier	ret		4876696	0					
ANR	4876806	UnaryOperationExpression	- 1		4876696	1					
ANR	4876807	UnaryOperator	-		4876696	0					
ANR	4876808	PrimaryExpression	1		4876696	1					
ANR	4876809	CompoundStatement		20:18:481:481	4876696	1					
ANR	4876810	ReturnStatement	return - 1 ;	485:4:11622:11631	4876696	0	True				
ANR	4876811	UnaryOperationExpression	- 1		4876696	0					
ANR	4876812	UnaryOperator	-		4876696	0					
ANR	4876813	PrimaryExpression	1		4876696	1					
ANR	4876814	IfStatement	if ( ret != child_pid )		4876696	2					
ANR	4876815	Condition	ret != child_pid	487:7:11645:11660	4876696	0	True				
ANR	4876816	EqualityExpression	ret != child_pid		4876696	0		!=			
ANR	4876817	Identifier	ret		4876696	0					
ANR	4876818	Identifier	child_pid		4876696	1					
ANR	4876819	CompoundStatement		23:25:528:528	4876696	1					
ANR	4876820	Statement	eprintf	488:4:11669:11675	4876696	0	True				
ANR	4876821	Statement	(	488:12:11677:11677	4876696	1	True				
ANR	4876822	Statement	"""Wait event received by """	488:13:11678:11702	4876696	2	True				
ANR	4876823	Statement	"""different pid %d\\n"""	489:5:11709:11728	4876696	3	True				
ANR	4876824	Statement	","	489:25:11729:11729	4876696	4	True				
ANR	4876825	Statement	ret	489:27:11731:11733	4876696	5	True				
ANR	4876826	Statement	)	489:30:11734:11734	4876696	6	True				
ANR	4876827	ExpressionStatement		489:31:11735:11735	4876696	7	True				
ANR	4876828	Condition	ret != child_pid	491:11:11753:11768	4876696	1	True				
ANR	4876829	EqualityExpression	ret != child_pid		4876696	0		!=			
ANR	4876830	Identifier	ret		4876696	0					
ANR	4876831	Identifier	child_pid		4876696	1					
ANR	4876832	IfStatement	if ( WIFSTOPPED ( status ) )		4876696	9					
ANR	4876833	Condition	WIFSTOPPED ( status )	492:6:11778:11796	4876696	0	True				
ANR	4876834	CallExpression	WIFSTOPPED ( status )		4876696	0					
ANR	4876835	Callee	WIFSTOPPED		4876696	0					
ANR	4876836	Identifier	WIFSTOPPED		4876696	0					
ANR	4876837	ArgumentList	status		4876696	1					
ANR	4876838	Argument	status		4876696	0					
ANR	4876839	Identifier	status		4876696	0					
ANR	4876840	CompoundStatement		28:27:664:664	4876696	1					
ANR	4876841	ExpressionStatement	"eprintf ( ""Process with PID %d started...\\n"" , ( int ) child_pid )"	493:3:11804:11864	4876696	0	True				
ANR	4876842	CallExpression	"eprintf ( ""Process with PID %d started...\\n"" , ( int ) child_pid )"		4876696	0					
ANR	4876843	Callee	eprintf		4876696	0					
ANR	4876844	Identifier	eprintf		4876696	0					
ANR	4876845	ArgumentList	"""Process with PID %d started...\\n"""		4876696	1					
ANR	4876846	Argument	"""Process with PID %d started...\\n"""		4876696	0					
ANR	4876847	PrimaryExpression	"""Process with PID %d started...\\n"""		4876696	0					
ANR	4876848	Argument	( int ) child_pid		4876696	1					
ANR	4876849	CastExpression	( int ) child_pid		4876696	0					
ANR	4876850	CastTarget	int		4876696	0					
ANR	4876851	Identifier	child_pid		4876696	1					
ANR	4876852	IfStatement	if ( WEXITSTATUS ( status ) == MAGIC_EXIT )		4876696	10					
ANR	4876853	Condition	WEXITSTATUS ( status ) == MAGIC_EXIT	495:6:11876:11909	4876696	0	True				
ANR	4876854	EqualityExpression	WEXITSTATUS ( status ) == MAGIC_EXIT		4876696	0		==			
ANR	4876855	CallExpression	WEXITSTATUS ( status )		4876696	0					
ANR	4876856	Callee	WEXITSTATUS		4876696	0					
ANR	4876857	Identifier	WEXITSTATUS		4876696	0					
ANR	4876858	ArgumentList	status		4876696	1					
ANR	4876859	Argument	status		4876696	0					
ANR	4876860	Identifier	status		4876696	0					
ANR	4876861	Identifier	MAGIC_EXIT		4876696	1					
ANR	4876862	CompoundStatement		31:42:777:777	4876696	1					
ANR	4876863	ExpressionStatement	child_pid = - 1	496:3:11917:11931	4876696	0	True				
ANR	4876864	AssignmentExpression	child_pid = - 1		4876696	0		=			
ANR	4876865	Identifier	child_pid		4876696	0					
ANR	4876866	UnaryOperationExpression	- 1		4876696	1					
ANR	4876867	UnaryOperator	-		4876696	0					
ANR	4876868	PrimaryExpression	1		4876696	1					
ANR	4876869	BreakStatement	break ;	499:2:11969:11974	4876696	11	True				
ANR	4876870	ReturnStatement	return child_pid ;	501:1:11980:11996	4876696	9	True				
ANR	4876871	Identifier	child_pid		4876696	0					
ANR	4876872	ReturnType	static int		4876696	1					
ANR	4876873	Identifier	fork_and_ptraceme_for_unix		4876696	2					
ANR	4876874	ParameterList	"RIO * io , int bits , const char * cmd"		4876696	3					
ANR	4876875	Parameter	RIO * io	465:38:11098:11104	4876696	0	True				
ANR	4876876	ParameterType	RIO *		4876696	0					
ANR	4876877	Identifier	io		4876696	1					
ANR	4876878	Parameter	int bits	465:47:11107:11114	4876696	1	True				
ANR	4876879	ParameterType	int		4876696	0					
ANR	4876880	Identifier	bits		4876696	1					
ANR	4876881	Parameter	const char * cmd	465:57:11117:11131	4876696	2	True				
ANR	4876882	ParameterType	const char *		4876696	0					
ANR	4876883	Identifier	cmd		4876696	1					
ANR	4876884	CFGEntryNode	ENTRY		4876696		True				
ANR	4876885	CFGExitNode	EXIT		4876696		True				
ANR	4876886	Symbol	wait		4876696						
ANR	4876887	Symbol	* ( io -> runprofile )		4876696						
ANR	4876888	Symbol	* io -> runprofile		4876696						
ANR	4876889	Symbol	r_io_ptrace_fork		4876696						
ANR	4876890	Symbol	WEXITSTATUS		4876696						
ANR	4876891	Symbol	io -> runprofile		4876696						
ANR	4876892	Symbol	* io		4876696						
ANR	4876893	Symbol	* * io		4876696						
ANR	4876894	Symbol	MAGIC_EXIT		4876696						
ANR	4876895	Symbol	child_data		4876696						
ANR	4876896	Symbol	child_data . io		4876696						
ANR	4876897	Symbol	& child_data		4876696						
ANR	4876898	Symbol	child_data . bits		4876696						
ANR	4876899	Symbol	ret		4876696						
ANR	4876900	Symbol	io		4876696						
ANR	4876901	Symbol	bits		4876696						
ANR	4876902	Symbol	& status		4876696						
ANR	4876903	Symbol	child_pid		4876696						
ANR	4876904	Symbol	fork_child_callback		4876696						
ANR	4876905	Symbol	runprofile		4876696						
ANR	4876906	Symbol	child_data . cmd		4876696						
ANR	4876907	Symbol	child_data . runprofile		4876696						
ANR	4876908	Symbol	cmd		4876696						
ANR	4876909	Symbol	status		4876696						
ANR	4876910	Symbol	WIFSTOPPED		4876696						
ANR	4876911	Function	fork_and_ptraceme	505:0:12008:12292							
ANR	4876912	FunctionDef	"fork_and_ptraceme (RIO * io , int bits , const char * cmd)"		4876911	0					
ANR	4876913	CompoundStatement		505:65:12073:12292	4876911	0					
ANR	4876914	Statement	if	507:3:12092:12093	4876911	0	True				
ANR	4876915	Statement	__POWERPC__	507:6:12095:12105	4876911	1	True				
ANR	4876916	ReturnStatement	"return fork_and_ptraceme_for_unix ( io , bits , cmd ) ;"	508:1:12108:12157	4876911	2	True				
ANR	4876917	CallExpression	"fork_and_ptraceme_for_unix ( io , bits , cmd )"		4876911	0					
ANR	4876918	Callee	fork_and_ptraceme_for_unix		4876911	0					
ANR	4876919	Identifier	fork_and_ptraceme_for_unix		4876911	0					
ANR	4876920	ArgumentList	io		4876911	1					
ANR	4876921	Argument	io		4876911	0					
ANR	4876922	Identifier	io		4876911	0					
ANR	4876923	Argument	bits		4876911	1					
ANR	4876924	Identifier	bits		4876911	0					
ANR	4876925	Argument	cmd		4876911	2					
ANR	4876926	Identifier	cmd		4876911	0					
ANR	4876927	ReturnType	static int		4876911	1					
ANR	4876928	Identifier	fork_and_ptraceme		4876911	2					
ANR	4876929	ParameterList	"RIO * io , int bits , const char * cmd"		4876911	3					
ANR	4876930	Parameter	RIO * io	505:29:12037:12043	4876911	0	True				
ANR	4876931	ParameterType	RIO *		4876911	0					
ANR	4876932	Identifier	io		4876911	1					
ANR	4876933	Parameter	int bits	505:38:12046:12053	4876911	1	True				
ANR	4876934	ParameterType	int		4876911	0					
ANR	4876935	Identifier	bits		4876911	1					
ANR	4876936	Parameter	const char * cmd	505:48:12056:12070	4876911	2	True				
ANR	4876937	ParameterType	const char *		4876911	0					
ANR	4876938	Identifier	cmd		4876911	1					
ANR	4876939	CFGEntryNode	ENTRY		4876911		True				
ANR	4876940	CFGExitNode	EXIT		4876911		True				
ANR	4876941	Symbol	io		4876911						
ANR	4876942	Symbol	bits		4876911						
ANR	4876943	Symbol	cmd		4876911						
ANR	4876944	Symbol	fork_and_ptraceme_for_unix		4876911						
ANR	4876945	Function	__plugin_open	518:0:12302:12536							
ANR	4876946	FunctionDef	"__plugin_open (RIO * io , const char * file , bool many)"		4876945	0					
ANR	4876947	CompoundStatement		518:64:12366:12536	4876945	0					
ANR	4876948	IfStatement	"if ( ! strncmp ( file , ""waitfor://"" , 10 ) )"		4876945	0					
ANR	4876949	Condition	"! strncmp ( file , ""waitfor://"" , 10 )"	519:5:12373:12405	4876945	0	True				
ANR	4876950	UnaryOperationExpression	"! strncmp ( file , ""waitfor://"" , 10 )"		4876945	0					
ANR	4876951	UnaryOperator	!		4876945	0					
ANR	4876952	CallExpression	"strncmp ( file , ""waitfor://"" , 10 )"		4876945	1					
ANR	4876953	Callee	strncmp		4876945	0					
ANR	4876954	Identifier	strncmp		4876945	0					
ANR	4876955	ArgumentList	file		4876945	1					
ANR	4876956	Argument	file		4876945	0					
ANR	4876957	Identifier	file		4876945	0					
ANR	4876958	Argument	"""waitfor://"""		4876945	1					
ANR	4876959	PrimaryExpression	"""waitfor://"""		4876945	0					
ANR	4876960	Argument	10		4876945	2					
ANR	4876961	PrimaryExpression	10		4876945	0					
ANR	4876962	CompoundStatement		2:40:41:41	4876945	1					
ANR	4876963	ReturnStatement	return true ;	520:2:12412:12423	4876945	0	True				
ANR	4876964	Identifier	true		4876945	0					
ANR	4876965	IfStatement	"if ( ! strncmp ( file , ""pidof://"" , 8 ) )"		4876945	1					
ANR	4876966	Condition	"! strncmp ( file , ""pidof://"" , 8 )"	522:5:12433:12462	4876945	0	True				
ANR	4876967	UnaryOperationExpression	"! strncmp ( file , ""pidof://"" , 8 )"		4876945	0					
ANR	4876968	UnaryOperator	!		4876945	0					
ANR	4876969	CallExpression	"strncmp ( file , ""pidof://"" , 8 )"		4876945	1					
ANR	4876970	Callee	strncmp		4876945	0					
ANR	4876971	Identifier	strncmp		4876945	0					
ANR	4876972	ArgumentList	file		4876945	1					
ANR	4876973	Argument	file		4876945	0					
ANR	4876974	Identifier	file		4876945	0					
ANR	4876975	Argument	"""pidof://"""		4876945	1					
ANR	4876976	PrimaryExpression	"""pidof://"""		4876945	0					
ANR	4876977	Argument	8		4876945	2					
ANR	4876978	PrimaryExpression	8		4876945	0					
ANR	4876979	CompoundStatement		5:37:98:98	4876945	1					
ANR	4876980	ReturnStatement	return true ;	523:2:12469:12480	4876945	0	True				
ANR	4876981	Identifier	true		4876945	0					
ANR	4876982	ReturnStatement	"return ( ! strncmp ( file , ""dbg://"" , 6 ) && file [ 6 ] ) ;"	525:1:12486:12534	4876945	2	True				
ANR	4876983	AndExpression	"! strncmp ( file , ""dbg://"" , 6 ) && file [ 6 ]"		4876945	0		&&			
ANR	4876984	UnaryOperationExpression	"! strncmp ( file , ""dbg://"" , 6 )"		4876945	0					
ANR	4876985	UnaryOperator	!		4876945	0					
ANR	4876986	CallExpression	"strncmp ( file , ""dbg://"" , 6 )"		4876945	1					
ANR	4876987	Callee	strncmp		4876945	0					
ANR	4876988	Identifier	strncmp		4876945	0					
ANR	4876989	ArgumentList	file		4876945	1					
ANR	4876990	Argument	file		4876945	0					
ANR	4876991	Identifier	file		4876945	0					
ANR	4876992	Argument	"""dbg://"""		4876945	1					
ANR	4876993	PrimaryExpression	"""dbg://"""		4876945	0					
ANR	4876994	Argument	6		4876945	2					
ANR	4876995	PrimaryExpression	6		4876945	0					
ANR	4876996	ArrayIndexing	file [ 6 ]		4876945	1					
ANR	4876997	Identifier	file		4876945	0					
ANR	4876998	PrimaryExpression	6		4876945	1					
ANR	4876999	ReturnType	static bool		4876945	1					
ANR	4877000	Identifier	__plugin_open		4876945	2					
ANR	4877001	ParameterList	"RIO * io , const char * file , bool many"		4876945	3					
ANR	4877002	Parameter	RIO * io	518:26:12328:12334	4876945	0	True				
ANR	4877003	ParameterType	RIO *		4876945	0					
ANR	4877004	Identifier	io		4876945	1					
ANR	4877005	Parameter	const char * file	518:35:12337:12352	4876945	1	True				
ANR	4877006	ParameterType	const char *		4876945	0					
ANR	4877007	Identifier	file		4876945	1					
ANR	4877008	Parameter	bool many	518:53:12355:12363	4876945	2	True				
ANR	4877009	ParameterType	bool		4876945	0					
ANR	4877010	Identifier	many		4876945	1					
ANR	4877011	CFGEntryNode	ENTRY		4876945		True				
ANR	4877012	CFGExitNode	EXIT		4876945		True				
ANR	4877013	Symbol	strncmp		4876945						
ANR	4877014	Symbol	file		4876945						
ANR	4877015	Symbol	io		4876945						
ANR	4877016	Symbol	true		4876945						
ANR	4877017	Symbol	many		4876945						
ANR	4877018	Symbol	* file		4876945						
ANR	4877019	Function	get_pid_of	529:0:12559:13003							
ANR	4877020	FunctionDef	"get_pid_of (RIO * io , const char * procname)"		4877019	0					
ANR	4877021	CompoundStatement		529:53:12612:13003	4877019	0					
ANR	4877022	IdentifierDeclStatement	RCore * c = io -> user ;	530:1:12615:12634	4877019	0	True				
ANR	4877023	IdentifierDecl	* c = io -> user		4877019	0					
ANR	4877024	IdentifierDeclType	RCore *		4877019	0					
ANR	4877025	Identifier	c		4877019	1					
ANR	4877026	AssignmentExpression	* c = io -> user		4877019	2		=			
ANR	4877027	Identifier	c		4877019	0					
ANR	4877028	PtrMemberAccess	io -> user		4877019	1					
ANR	4877029	Identifier	io		4877019	0					
ANR	4877030	Identifier	user		4877019	1					
ANR	4877031	IfStatement	if ( c && c -> dbg && c -> dbg -> h )		4877019	1					
ANR	4877032	Condition	c && c -> dbg && c -> dbg -> h	531:5:12641:12664	4877019	0	True				
ANR	4877033	AndExpression	c && c -> dbg && c -> dbg -> h		4877019	0		&&			
ANR	4877034	Identifier	c		4877019	0					
ANR	4877035	AndExpression	c -> dbg && c -> dbg -> h		4877019	1		&&			
ANR	4877036	PtrMemberAccess	c -> dbg		4877019	0					
ANR	4877037	Identifier	c		4877019	0					
ANR	4877038	Identifier	dbg		4877019	1					
ANR	4877039	PtrMemberAccess	c -> dbg -> h		4877019	1					
ANR	4877040	PtrMemberAccess	c -> dbg		4877019	0					
ANR	4877041	Identifier	c		4877019	0					
ANR	4877042	Identifier	dbg		4877019	1					
ANR	4877043	Identifier	h		4877019	1					
ANR	4877044	CompoundStatement		7:2:118:149	4877019	1					
ANR	4877045	IdentifierDeclStatement	RListIter * iter ;	532:2:12671:12686	4877019	0	True				
ANR	4877046	IdentifierDecl	* iter		4877019	0					
ANR	4877047	IdentifierDeclType	RListIter *		4877019	0					
ANR	4877048	Identifier	iter		4877019	1					
ANR	4877049	IdentifierDeclStatement	RDebugPid * proc ;	533:2:12690:12705	4877019	1	True				
ANR	4877050	IdentifierDecl	* proc		4877019	0					
ANR	4877051	IdentifierDeclType	RDebugPid *		4877019	0					
ANR	4877052	Identifier	proc		4877019	1					
ANR	4877053	IdentifierDeclStatement	RDebug * d = c -> dbg ;	534:2:12709:12727	4877019	2	True				
ANR	4877054	IdentifierDecl	* d = c -> dbg		4877019	0					
ANR	4877055	IdentifierDeclType	RDebug *		4877019	0					
ANR	4877056	Identifier	d		4877019	1					
ANR	4877057	AssignmentExpression	* d = c -> dbg		4877019	2		=			
ANR	4877058	Identifier	d		4877019	0					
ANR	4877059	PtrMemberAccess	c -> dbg		4877019	1					
ANR	4877060	Identifier	c		4877019	0					
ANR	4877061	Identifier	dbg		4877019	1					
ANR	4877062	IdentifierDeclStatement	"RList * pids = d -> h -> pids ( d , 0 ) ;"	535:2:12731:12762	4877019	3	True				
ANR	4877063	IdentifierDecl	"* pids = d -> h -> pids ( d , 0 )"		4877019	0					
ANR	4877064	IdentifierDeclType	RList *		4877019	0					
ANR	4877065	Identifier	pids		4877019	1					
ANR	4877066	AssignmentExpression	"* pids = d -> h -> pids ( d , 0 )"		4877019	2		=			
ANR	4877067	Identifier	pids		4877019	0					
ANR	4877068	CallExpression	"d -> h -> pids ( d , 0 )"		4877019	1					
ANR	4877069	Callee	d -> h -> pids		4877019	0					
ANR	4877070	PtrMemberAccess	d -> h -> pids		4877019	0					
ANR	4877071	PtrMemberAccess	d -> h		4877019	0					
ANR	4877072	Identifier	d		4877019	0					
ANR	4877073	Identifier	h		4877019	1					
ANR	4877074	Identifier	pids		4877019	1					
ANR	4877075	ArgumentList	d		4877019	1					
ANR	4877076	Argument	d		4877019	0					
ANR	4877077	Identifier	d		4877019	0					
ANR	4877078	Argument	0		4877019	1					
ANR	4877079	PrimaryExpression	0		4877019	0					
ANR	4877080	Statement	r_list_foreach	536:2:12766:12779	4877019	4	True				
ANR	4877081	Statement	(	536:17:12781:12781	4877019	5	True				
ANR	4877082	Statement	pids	536:18:12782:12785	4877019	6	True				
ANR	4877083	Statement	","	536:22:12786:12786	4877019	7	True				
ANR	4877084	Statement	iter	536:24:12788:12791	4877019	8	True				
ANR	4877085	Statement	","	536:28:12792:12792	4877019	9	True				
ANR	4877086	Statement	proc	536:30:12794:12797	4877019	10	True				
ANR	4877087	Statement	)	536:34:12798:12798	4877019	11	True				
ANR	4877088	CompoundStatement		8:36:187:187	4877019	12					
ANR	4877089	IfStatement	"if ( strstr ( proc -> path , procname ) )"		4877019	0					
ANR	4877090	Condition	"strstr ( proc -> path , procname )"	537:7:12809:12837	4877019	0	True				
ANR	4877091	CallExpression	"strstr ( proc -> path , procname )"		4877019	0					
ANR	4877092	Callee	strstr		4877019	0					
ANR	4877093	Identifier	strstr		4877019	0					
ANR	4877094	ArgumentList	proc -> path		4877019	1					
ANR	4877095	Argument	proc -> path		4877019	0					
ANR	4877096	PtrMemberAccess	proc -> path		4877019	0					
ANR	4877097	Identifier	proc		4877019	0					
ANR	4877098	Identifier	path		4877019	1					
ANR	4877099	Argument	procname		4877019	1					
ANR	4877100	Identifier	procname		4877019	0					
ANR	4877101	CompoundStatement		9:38:227:227	4877019	1					
ANR	4877102	ExpressionStatement	"eprintf ( ""Matching PID %d %s\\n"" , proc -> pid , proc -> path )"	538:4:12846:12901	4877019	0	True				
ANR	4877103	CallExpression	"eprintf ( ""Matching PID %d %s\\n"" , proc -> pid , proc -> path )"		4877019	0					
ANR	4877104	Callee	eprintf		4877019	0					
ANR	4877105	Identifier	eprintf		4877019	0					
ANR	4877106	ArgumentList	"""Matching PID %d %s\\n"""		4877019	1					
ANR	4877107	Argument	"""Matching PID %d %s\\n"""		4877019	0					
ANR	4877108	PrimaryExpression	"""Matching PID %d %s\\n"""		4877019	0					
ANR	4877109	Argument	proc -> pid		4877019	1					
ANR	4877110	PtrMemberAccess	proc -> pid		4877019	0					
ANR	4877111	Identifier	proc		4877019	0					
ANR	4877112	Identifier	pid		4877019	1					
ANR	4877113	Argument	proc -> path		4877019	2					
ANR	4877114	PtrMemberAccess	proc -> path		4877019	0					
ANR	4877115	Identifier	proc		4877019	0					
ANR	4877116	Identifier	path		4877019	1					
ANR	4877117	ReturnStatement	return proc -> pid ;	539:4:12907:12923	4877019	1	True				
ANR	4877118	PtrMemberAccess	proc -> pid		4877019	0					
ANR	4877119	Identifier	proc		4877019	0					
ANR	4877120	Identifier	pid		4877019	1					
ANR	4877121	ElseStatement	else		4877019	0					
ANR	4877122	CompoundStatement		14:8:329:329	4877019	0					
ANR	4877123	ExpressionStatement	"eprintf ( ""Cannot enumerate processes\\n"" )"	543:2:12946:12986	4877019	0	True				
ANR	4877124	CallExpression	"eprintf ( ""Cannot enumerate processes\\n"" )"		4877019	0					
ANR	4877125	Callee	eprintf		4877019	0					
ANR	4877126	Identifier	eprintf		4877019	0					
ANR	4877127	ArgumentList	"""Cannot enumerate processes\\n"""		4877019	1					
ANR	4877128	Argument	"""Cannot enumerate processes\\n"""		4877019	0					
ANR	4877129	PrimaryExpression	"""Cannot enumerate processes\\n"""		4877019	0					
ANR	4877130	ReturnStatement	return - 1 ;	545:1:12992:13001	4877019	2	True				
ANR	4877131	UnaryOperationExpression	- 1		4877019	0					
ANR	4877132	UnaryOperator	-		4877019	0					
ANR	4877133	PrimaryExpression	1		4877019	1					
ANR	4877134	ReturnType	static int		4877019	1					
ANR	4877135	Identifier	get_pid_of		4877019	2					
ANR	4877136	ParameterList	"RIO * io , const char * procname"		4877019	3					
ANR	4877137	Parameter	RIO * io	529:22:12581:12587	4877019	0	True				
ANR	4877138	ParameterType	RIO *		4877019	0					
ANR	4877139	Identifier	io		4877019	1					
ANR	4877140	Parameter	const char * procname	529:31:12590:12609	4877019	1	True				
ANR	4877141	ParameterType	const char *		4877019	0					
ANR	4877142	Identifier	procname		4877019	1					
ANR	4877143	CFGEntryNode	ENTRY		4877019		True				
ANR	4877144	CFGExitNode	EXIT		4877019		True				
ANR	4877145	Symbol	proc		4877019						
ANR	4877146	Symbol	c		4877019						
ANR	4877147	Symbol	d		4877019						
ANR	4877148	Symbol	io		4877019						
ANR	4877149	Symbol	* * d		4877019						
ANR	4877150	Symbol	* * c		4877019						
ANR	4877151	Symbol	c -> dbg		4877019						
ANR	4877152	Symbol	proc -> pid		4877019						
ANR	4877153	Symbol	iter		4877019						
ANR	4877154	Symbol	d -> h		4877019						
ANR	4877155	Symbol	proc -> path		4877019						
ANR	4877156	Symbol	* c		4877019						
ANR	4877157	Symbol	* d		4877019						
ANR	4877158	Symbol	* io		4877019						
ANR	4877159	Symbol	io -> user		4877019						
ANR	4877160	Symbol	* proc		4877019						
ANR	4877161	Symbol	d -> h -> pids		4877019						
ANR	4877162	Symbol	strstr		4877019						
ANR	4877163	Symbol	* c -> dbg		4877019						
ANR	4877164	Symbol	procname		4877019						
ANR	4877165	Symbol	c -> dbg -> h		4877019						
ANR	4877166	Symbol	pids		4877019						
ANR	4877167	Symbol	* d -> h		4877019						
ANR	4877168	Function	__open	548:0:13006:15326							
ANR	4877169	FunctionDef	"__open (RIO * io , const char * file , int rw , int mode)"		4877168	0					
ANR	4877170	CompoundStatement		548:68:13074:15326	4877168	0					
ANR	4877171	IdentifierDeclStatement	RIOPlugin * _plugin ;	549:1:13077:13095	4877168	0	True				
ANR	4877172	IdentifierDecl	* _plugin		4877168	0					
ANR	4877173	IdentifierDeclType	RIOPlugin *		4877168	0					
ANR	4877174	Identifier	_plugin		4877168	1					
ANR	4877175	IdentifierDeclStatement	RIODesc * ret = NULL ;	550:1:13098:13117	4877168	1	True				
ANR	4877176	IdentifierDecl	* ret = NULL		4877168	0					
ANR	4877177	IdentifierDeclType	RIODesc *		4877168	0					
ANR	4877178	Identifier	ret		4877168	1					
ANR	4877179	AssignmentExpression	* ret = NULL		4877168	2		=			
ANR	4877180	Identifier	NULL		4877168	0					
ANR	4877181	Identifier	NULL		4877168	1					
ANR	4877182	IdentifierDeclStatement	char uri [ 128 ] ;	551:1:13120:13133	4877168	2	True				
ANR	4877183	IdentifierDecl	uri [ 128 ]		4877168	0					
ANR	4877184	IdentifierDeclType	char [ 128 ]		4877168	0					
ANR	4877185	Identifier	uri		4877168	1					
ANR	4877186	PrimaryExpression	128		4877168	2					
ANR	4877187	IfStatement	"if ( ! strncmp ( file , ""waitfor://"" , 10 ) )"		4877168	3					
ANR	4877188	Condition	"! strncmp ( file , ""waitfor://"" , 10 )"	552:5:13140:13172	4877168	0	True				
ANR	4877189	UnaryOperationExpression	"! strncmp ( file , ""waitfor://"" , 10 )"		4877168	0					
ANR	4877190	UnaryOperator	!		4877168	0					
ANR	4877191	CallExpression	"strncmp ( file , ""waitfor://"" , 10 )"		4877168	1					
ANR	4877192	Callee	strncmp		4877168	0					
ANR	4877193	Identifier	strncmp		4877168	0					
ANR	4877194	ArgumentList	file		4877168	1					
ANR	4877195	Argument	file		4877168	0					
ANR	4877196	Identifier	file		4877168	0					
ANR	4877197	Argument	"""waitfor://"""		4877168	1					
ANR	4877198	PrimaryExpression	"""waitfor://"""		4877168	0					
ANR	4877199	Argument	10		4877168	2					
ANR	4877200	PrimaryExpression	10		4877168	0					
ANR	4877201	CompoundStatement		6:2:104:136	4877168	1					
ANR	4877202	IdentifierDeclStatement	const char * procname = file + 10 ;	553:2:13179:13211	4877168	0	True				
ANR	4877203	IdentifierDecl	* procname = file + 10		4877168	0					
ANR	4877204	IdentifierDeclType	const char *		4877168	0					
ANR	4877205	Identifier	procname		4877168	1					
ANR	4877206	AssignmentExpression	* procname = file + 10		4877168	2		=			
ANR	4877207	Identifier	procname		4877168	0					
ANR	4877208	AdditiveExpression	file + 10		4877168	1		+			
ANR	4877209	Identifier	file		4877168	0					
ANR	4877210	PrimaryExpression	10		4877168	1					
ANR	4877211	ExpressionStatement	"eprintf ( ""Waiting for %s\\n"" , procname )"	554:2:13215:13253	4877168	1	True				
ANR	4877212	CallExpression	"eprintf ( ""Waiting for %s\\n"" , procname )"		4877168	0					
ANR	4877213	Callee	eprintf		4877168	0					
ANR	4877214	Identifier	eprintf		4877168	0					
ANR	4877215	ArgumentList	"""Waiting for %s\\n"""		4877168	1					
ANR	4877216	Argument	"""Waiting for %s\\n"""		4877168	0					
ANR	4877217	PrimaryExpression	"""Waiting for %s\\n"""		4877168	0					
ANR	4877218	Argument	procname		4877168	1					
ANR	4877219	Identifier	procname		4877168	0					
ANR	4877220	WhileStatement	while ( true )		4877168	2					
ANR	4877221	Condition	true	555:9:13264:13267	4877168	0	True				
ANR	4877222	Identifier	true		4877168	0					
ANR	4877223	CompoundStatement		9:3:200:242	4877168	1					
ANR	4877224	IdentifierDeclStatement	"int target_pid = get_pid_of ( io , procname ) ;"	556:3:13275:13317	4877168	0	True				
ANR	4877225	IdentifierDecl	"target_pid = get_pid_of ( io , procname )"		4877168	0					
ANR	4877226	IdentifierDeclType	int		4877168	0					
ANR	4877227	Identifier	target_pid		4877168	1					
ANR	4877228	AssignmentExpression	"target_pid = get_pid_of ( io , procname )"		4877168	2		=			
ANR	4877229	Identifier	target_pid		4877168	0					
ANR	4877230	CallExpression	"get_pid_of ( io , procname )"		4877168	1					
ANR	4877231	Callee	get_pid_of		4877168	0					
ANR	4877232	Identifier	get_pid_of		4877168	0					
ANR	4877233	ArgumentList	io		4877168	1					
ANR	4877234	Argument	io		4877168	0					
ANR	4877235	Identifier	io		4877168	0					
ANR	4877236	Argument	procname		4877168	1					
ANR	4877237	Identifier	procname		4877168	0					
ANR	4877238	IfStatement	if ( target_pid != - 1 )		4877168	1					
ANR	4877239	Condition	target_pid != - 1	557:7:13326:13341	4877168	0	True				
ANR	4877240	EqualityExpression	target_pid != - 1		4877168	0		!=			
ANR	4877241	Identifier	target_pid		4877168	0					
ANR	4877242	UnaryOperationExpression	- 1		4877168	1					
ANR	4877243	UnaryOperator	-		4877168	0					
ANR	4877244	PrimaryExpression	1		4877168	1					
ANR	4877245	CompoundStatement		10:25:269:269	4877168	1					
ANR	4877246	ExpressionStatement	"snprintf ( uri , sizeof ( uri ) , ""dbg://%d"" , target_pid )"	558:4:13350:13402	4877168	0	True				
ANR	4877247	CallExpression	"snprintf ( uri , sizeof ( uri ) , ""dbg://%d"" , target_pid )"		4877168	0					
ANR	4877248	Callee	snprintf		4877168	0					
ANR	4877249	Identifier	snprintf		4877168	0					
ANR	4877250	ArgumentList	uri		4877168	1					
ANR	4877251	Argument	uri		4877168	0					
ANR	4877252	Identifier	uri		4877168	0					
ANR	4877253	Argument	sizeof ( uri )		4877168	1					
ANR	4877254	SizeofExpression	sizeof ( uri )		4877168	0					
ANR	4877255	Sizeof	sizeof		4877168	0					
ANR	4877256	SizeofOperand	uri		4877168	1					
ANR	4877257	Argument	"""dbg://%d"""		4877168	2					
ANR	4877258	PrimaryExpression	"""dbg://%d"""		4877168	0					
ANR	4877259	Argument	target_pid		4877168	3					
ANR	4877260	Identifier	target_pid		4877168	0					
ANR	4877261	ExpressionStatement	file = uri	559:4:13408:13418	4877168	1	True				
ANR	4877262	AssignmentExpression	file = uri		4877168	0		=			
ANR	4877263	Identifier	file		4877168	0					
ANR	4877264	Identifier	uri		4877168	1					
ANR	4877265	BreakStatement	break ;	560:4:13424:13429	4877168	2	True				
ANR	4877266	ExpressionStatement	r_sys_usleep ( 100 )	562:3:13439:13457	4877168	2	True				
ANR	4877267	CallExpression	r_sys_usleep ( 100 )		4877168	0					
ANR	4877268	Callee	r_sys_usleep		4877168	0					
ANR	4877269	Identifier	r_sys_usleep		4877168	0					
ANR	4877270	ArgumentList	100		4877168	1					
ANR	4877271	Argument	100		4877168	0					
ANR	4877272	PrimaryExpression	100		4877168	0					
ANR	4877273	ElseStatement	else		4877168	0					
ANR	4877274	IfStatement	"if ( ! strncmp ( file , ""pidof://"" , 8 ) )"		4877168	0					
ANR	4877275	Condition	"! strncmp ( file , ""pidof://"" , 8 )"	564:12:13475:13504	4877168	0	True				
ANR	4877276	UnaryOperationExpression	"! strncmp ( file , ""pidof://"" , 8 )"		4877168	0					
ANR	4877277	UnaryOperator	!		4877168	0					
ANR	4877278	CallExpression	"strncmp ( file , ""pidof://"" , 8 )"		4877168	1					
ANR	4877279	Callee	strncmp		4877168	0					
ANR	4877280	Identifier	strncmp		4877168	0					
ANR	4877281	ArgumentList	file		4877168	1					
ANR	4877282	Argument	file		4877168	0					
ANR	4877283	Identifier	file		4877168	0					
ANR	4877284	Argument	"""pidof://"""		4877168	1					
ANR	4877285	PrimaryExpression	"""pidof://"""		4877168	0					
ANR	4877286	Argument	8		4877168	2					
ANR	4877287	PrimaryExpression	8		4877168	0					
ANR	4877288	CompoundStatement		19:2:471:513	4877168	1					
ANR	4877289	IdentifierDeclStatement	const char * procname = file + 8 ;	565:2:13511:13542	4877168	0	True				
ANR	4877290	IdentifierDecl	* procname = file + 8		4877168	0					
ANR	4877291	IdentifierDeclType	const char *		4877168	0					
ANR	4877292	Identifier	procname		4877168	1					
ANR	4877293	AssignmentExpression	* procname = file + 8		4877168	2		=			
ANR	4877294	Identifier	procname		4877168	0					
ANR	4877295	AdditiveExpression	file + 8		4877168	1		+			
ANR	4877296	Identifier	file		4877168	0					
ANR	4877297	PrimaryExpression	8		4877168	1					
ANR	4877298	IdentifierDeclStatement	"int target_pid = get_pid_of ( io , procname ) ;"	566:2:13546:13588	4877168	1	True				
ANR	4877299	IdentifierDecl	"target_pid = get_pid_of ( io , procname )"		4877168	0					
ANR	4877300	IdentifierDeclType	int		4877168	0					
ANR	4877301	Identifier	target_pid		4877168	1					
ANR	4877302	AssignmentExpression	"target_pid = get_pid_of ( io , procname )"		4877168	2		=			
ANR	4877303	Identifier	target_pid		4877168	0					
ANR	4877304	CallExpression	"get_pid_of ( io , procname )"		4877168	1					
ANR	4877305	Callee	get_pid_of		4877168	0					
ANR	4877306	Identifier	get_pid_of		4877168	0					
ANR	4877307	ArgumentList	io		4877168	1					
ANR	4877308	Argument	io		4877168	0					
ANR	4877309	Identifier	io		4877168	0					
ANR	4877310	Argument	procname		4877168	1					
ANR	4877311	Identifier	procname		4877168	0					
ANR	4877312	IfStatement	if ( target_pid == - 1 )		4877168	2					
ANR	4877313	Condition	target_pid == - 1	567:6:13596:13611	4877168	0	True				
ANR	4877314	EqualityExpression	target_pid == - 1		4877168	0		==			
ANR	4877315	Identifier	target_pid		4877168	0					
ANR	4877316	UnaryOperationExpression	- 1		4877168	1					
ANR	4877317	UnaryOperator	-		4877168	0					
ANR	4877318	PrimaryExpression	1		4877168	1					
ANR	4877319	CompoundStatement		20:24:539:539	4877168	1					
ANR	4877320	ExpressionStatement	"eprintf ( ""Cannot find matching process for %s\\n"" , file )"	568:3:13619:13674	4877168	0	True				
ANR	4877321	CallExpression	"eprintf ( ""Cannot find matching process for %s\\n"" , file )"		4877168	0					
ANR	4877322	Callee	eprintf		4877168	0					
ANR	4877323	Identifier	eprintf		4877168	0					
ANR	4877324	ArgumentList	"""Cannot find matching process for %s\\n"""		4877168	1					
ANR	4877325	Argument	"""Cannot find matching process for %s\\n"""		4877168	0					
ANR	4877326	PrimaryExpression	"""Cannot find matching process for %s\\n"""		4877168	0					
ANR	4877327	Argument	file		4877168	1					
ANR	4877328	Identifier	file		4877168	0					
ANR	4877329	ReturnStatement	return NULL ;	569:3:13679:13690	4877168	1	True				
ANR	4877330	Identifier	NULL		4877168	0					
ANR	4877331	ExpressionStatement	"snprintf ( uri , sizeof ( uri ) , ""dbg://%d"" , target_pid )"	571:2:13698:13750	4877168	3	True				
ANR	4877332	CallExpression	"snprintf ( uri , sizeof ( uri ) , ""dbg://%d"" , target_pid )"		4877168	0					
ANR	4877333	Callee	snprintf		4877168	0					
ANR	4877334	Identifier	snprintf		4877168	0					
ANR	4877335	ArgumentList	uri		4877168	1					
ANR	4877336	Argument	uri		4877168	0					
ANR	4877337	Identifier	uri		4877168	0					
ANR	4877338	Argument	sizeof ( uri )		4877168	1					
ANR	4877339	SizeofExpression	sizeof ( uri )		4877168	0					
ANR	4877340	Sizeof	sizeof		4877168	0					
ANR	4877341	SizeofOperand	uri		4877168	1					
ANR	4877342	Argument	"""dbg://%d"""		4877168	2					
ANR	4877343	PrimaryExpression	"""dbg://%d"""		4877168	0					
ANR	4877344	Argument	target_pid		4877168	3					
ANR	4877345	Identifier	target_pid		4877168	0					
ANR	4877346	ExpressionStatement	file = uri	572:2:13754:13764	4877168	4	True				
ANR	4877347	AssignmentExpression	file = uri		4877168	0		=			
ANR	4877348	Identifier	file		4877168	0					
ANR	4877349	Identifier	uri		4877168	1					
ANR	4877350	IfStatement	"if ( __plugin_open ( io , file , 0 ) )"		4877168	4					
ANR	4877351	Condition	"__plugin_open ( io , file , 0 )"	574:5:13774:13800	4877168	0	True				
ANR	4877352	CallExpression	"__plugin_open ( io , file , 0 )"		4877168	0					
ANR	4877353	Callee	__plugin_open		4877168	0					
ANR	4877354	Identifier	__plugin_open		4877168	0					
ANR	4877355	ArgumentList	io		4877168	1					
ANR	4877356	Argument	io		4877168	0					
ANR	4877357	Identifier	io		4877168	0					
ANR	4877358	Argument	file		4877168	1					
ANR	4877359	Identifier	file		4877168	0					
ANR	4877360	Argument	0		4877168	2					
ANR	4877361	PrimaryExpression	0		4877168	0					
ANR	4877362	CompoundStatement		30:2:782:826	4877168	1					
ANR	4877363	IdentifierDeclStatement	const char * pidfile = file + 6 ;	575:2:13807:13837	4877168	0	True				
ANR	4877364	IdentifierDecl	* pidfile = file + 6		4877168	0					
ANR	4877365	IdentifierDeclType	const char *		4877168	0					
ANR	4877366	Identifier	pidfile		4877168	1					
ANR	4877367	AssignmentExpression	* pidfile = file + 6		4877168	2		=			
ANR	4877368	Identifier	pidfile		4877168	0					
ANR	4877369	AdditiveExpression	file + 6		4877168	1		+			
ANR	4877370	Identifier	file		4877168	0					
ANR	4877371	PrimaryExpression	6		4877168	1					
ANR	4877372	IdentifierDeclStatement	char * endptr ;	576:2:13841:13853	4877168	1	True				
ANR	4877373	IdentifierDecl	* endptr		4877168	0					
ANR	4877374	IdentifierDeclType	char *		4877168	0					
ANR	4877375	Identifier	endptr		4877168	1					
ANR	4877376	IdentifierDeclStatement	"int pid = ( int ) strtol ( pidfile , & endptr , 10 ) ;"	577:2:13857:13901	4877168	2	True				
ANR	4877377	IdentifierDecl	"pid = ( int ) strtol ( pidfile , & endptr , 10 )"		4877168	0					
ANR	4877378	IdentifierDeclType	int		4877168	0					
ANR	4877379	Identifier	pid		4877168	1					
ANR	4877380	AssignmentExpression	"pid = ( int ) strtol ( pidfile , & endptr , 10 )"		4877168	2		=			
ANR	4877381	Identifier	pid		4877168	0					
ANR	4877382	CastExpression	"( int ) strtol ( pidfile , & endptr , 10 )"		4877168	1					
ANR	4877383	CastTarget	int		4877168	0					
ANR	4877384	CallExpression	"strtol ( pidfile , & endptr , 10 )"		4877168	1					
ANR	4877385	Callee	strtol		4877168	0					
ANR	4877386	Identifier	strtol		4877168	0					
ANR	4877387	ArgumentList	pidfile		4877168	1					
ANR	4877388	Argument	pidfile		4877168	0					
ANR	4877389	Identifier	pidfile		4877168	0					
ANR	4877390	Argument	& endptr		4877168	1					
ANR	4877391	UnaryOperationExpression	& endptr		4877168	0					
ANR	4877392	UnaryOperator	&		4877168	0					
ANR	4877393	Identifier	endptr		4877168	1					
ANR	4877394	Argument	10		4877168	2					
ANR	4877395	PrimaryExpression	10		4877168	0					
ANR	4877396	IfStatement	if ( endptr == pidfile || pid < 0 )		4877168	3					
ANR	4877397	Condition	endptr == pidfile || pid < 0	578:6:13909:13936	4877168	0	True				
ANR	4877398	OrExpression	endptr == pidfile || pid < 0		4877168	0		||			
ANR	4877399	EqualityExpression	endptr == pidfile		4877168	0		==			
ANR	4877400	Identifier	endptr		4877168	0					
ANR	4877401	Identifier	pidfile		4877168	1					
ANR	4877402	RelationalExpression	pid < 0		4877168	1		<			
ANR	4877403	Identifier	pid		4877168	0					
ANR	4877404	PrimaryExpression	0		4877168	1					
ANR	4877405	CompoundStatement		31:36:864:864	4877168	1					
ANR	4877406	ExpressionStatement	pid = - 1	579:3:13944:13952	4877168	0	True				
ANR	4877407	AssignmentExpression	pid = - 1		4877168	0		=			
ANR	4877408	Identifier	pid		4877168	0					
ANR	4877409	UnaryOperationExpression	- 1		4877168	1					
ANR	4877410	UnaryOperator	-		4877168	0					
ANR	4877411	PrimaryExpression	1		4877168	1					
ANR	4877412	IfStatement	if ( pid == - 1 )		4877168	4					
ANR	4877413	Condition	pid == - 1	581:6:13964:13972	4877168	0	True				
ANR	4877414	EqualityExpression	pid == - 1		4877168	0		==			
ANR	4877415	Identifier	pid		4877168	0					
ANR	4877416	UnaryOperationExpression	- 1		4877168	1					
ANR	4877417	UnaryOperator	-		4877168	0					
ANR	4877418	PrimaryExpression	1		4877168	1					
ANR	4877419	CompoundStatement		34:17:900:900	4877168	1					
ANR	4877420	ExpressionStatement	"pid = fork_and_ptraceme ( io , io -> bits , file + 6 )"	582:3:13980:14028	4877168	0	True				
ANR	4877421	AssignmentExpression	"pid = fork_and_ptraceme ( io , io -> bits , file + 6 )"		4877168	0		=			
ANR	4877422	Identifier	pid		4877168	0					
ANR	4877423	CallExpression	"fork_and_ptraceme ( io , io -> bits , file + 6 )"		4877168	1					
ANR	4877424	Callee	fork_and_ptraceme		4877168	0					
ANR	4877425	Identifier	fork_and_ptraceme		4877168	0					
ANR	4877426	ArgumentList	io		4877168	1					
ANR	4877427	Argument	io		4877168	0					
ANR	4877428	Identifier	io		4877168	0					
ANR	4877429	Argument	io -> bits		4877168	1					
ANR	4877430	PtrMemberAccess	io -> bits		4877168	0					
ANR	4877431	Identifier	io		4877168	0					
ANR	4877432	Identifier	bits		4877168	1					
ANR	4877433	Argument	file + 6		4877168	2					
ANR	4877434	AdditiveExpression	file + 6		4877168	0		+			
ANR	4877435	Identifier	file		4877168	0					
ANR	4877436	PrimaryExpression	6		4877168	1					
ANR	4877437	IfStatement	if ( pid == - 1 )		4877168	1					
ANR	4877438	Condition	pid == - 1	583:7:14037:14045	4877168	0	True				
ANR	4877439	EqualityExpression	pid == - 1		4877168	0		==			
ANR	4877440	Identifier	pid		4877168	0					
ANR	4877441	UnaryOperationExpression	- 1		4877168	1					
ANR	4877442	UnaryOperator	-		4877168	0					
ANR	4877443	PrimaryExpression	1		4877168	1					
ANR	4877444	CompoundStatement		36:18:973:973	4877168	1					
ANR	4877445	ReturnStatement	return NULL ;	584:4:14054:14065	4877168	0	True				
ANR	4877446	Identifier	NULL		4877168	0					
ANR	4877447	ExpressionStatement	"sprintf ( uri , ""w32dbg://%d"" , pid )"	587:3:14091:14124	4877168	2	True				
ANR	4877448	CallExpression	"sprintf ( uri , ""w32dbg://%d"" , pid )"		4877168	0					
ANR	4877449	Callee	sprintf		4877168	0					
ANR	4877450	Identifier	sprintf		4877168	0					
ANR	4877451	ArgumentList	uri		4877168	1					
ANR	4877452	Argument	uri		4877168	0					
ANR	4877453	Identifier	uri		4877168	0					
ANR	4877454	Argument	"""w32dbg://%d"""		4877168	1					
ANR	4877455	PrimaryExpression	"""w32dbg://%d"""		4877168	0					
ANR	4877456	Argument	pid		4877168	2					
ANR	4877457	Identifier	pid		4877168	0					
ANR	4877458	ExpressionStatement	"_plugin = r_io_plugin_resolve ( io , ( const char * ) uri , false )"	588:3:14129:14189	4877168	3	True				
ANR	4877459	AssignmentExpression	"_plugin = r_io_plugin_resolve ( io , ( const char * ) uri , false )"		4877168	0		=			
ANR	4877460	Identifier	_plugin		4877168	0					
ANR	4877461	CallExpression	"r_io_plugin_resolve ( io , ( const char * ) uri , false )"		4877168	1					
ANR	4877462	Callee	r_io_plugin_resolve		4877168	0					
ANR	4877463	Identifier	r_io_plugin_resolve		4877168	0					
ANR	4877464	ArgumentList	io		4877168	1					
ANR	4877465	Argument	io		4877168	0					
ANR	4877466	Identifier	io		4877168	0					
ANR	4877467	Argument	( const char * ) uri		4877168	1					
ANR	4877468	CastExpression	( const char * ) uri		4877168	0					
ANR	4877469	CastTarget	const char *		4877168	0					
ANR	4877470	Identifier	uri		4877168	1					
ANR	4877471	Argument	false		4877168	2					
ANR	4877472	Identifier	false		4877168	0					
ANR	4877473	IfStatement	if ( ! _plugin || ! _plugin -> open )		4877168	4					
ANR	4877474	Condition	! _plugin || ! _plugin -> open	589:7:14198:14223	4877168	0	True				
ANR	4877475	OrExpression	! _plugin || ! _plugin -> open		4877168	0		||			
ANR	4877476	UnaryOperationExpression	! _plugin		4877168	0					
ANR	4877477	UnaryOperator	!		4877168	0					
ANR	4877478	Identifier	_plugin		4877168	1					
ANR	4877479	UnaryOperationExpression	! _plugin -> open		4877168	1					
ANR	4877480	UnaryOperator	!		4877168	0					
ANR	4877481	PtrMemberAccess	_plugin -> open		4877168	1					
ANR	4877482	Identifier	_plugin		4877168	0					
ANR	4877483	Identifier	open		4877168	1					
ANR	4877484	CompoundStatement		42:35:1151:1151	4877168	1					
ANR	4877485	ReturnStatement	return NULL ;	590:4:14232:14243	4877168	0	True				
ANR	4877486	Identifier	NULL		4877168	0					
ANR	4877487	IfStatement	"if ( ( ret = _plugin -> open ( io , uri , rw , mode ) ) )"		4877168	5					
ANR	4877488	Condition	"ret = _plugin -> open ( io , uri , rw , mode )"	592:7:14257:14297	4877168	0	True				
ANR	4877489	AssignmentExpression	"ret = _plugin -> open ( io , uri , rw , mode )"		4877168	0		=			
ANR	4877490	Identifier	ret		4877168	0					
ANR	4877491	CallExpression	"_plugin -> open ( io , uri , rw , mode )"		4877168	1					
ANR	4877492	Callee	_plugin -> open		4877168	0					
ANR	4877493	PtrMemberAccess	_plugin -> open		4877168	0					
ANR	4877494	Identifier	_plugin		4877168	0					
ANR	4877495	Identifier	open		4877168	1					
ANR	4877496	ArgumentList	io		4877168	1					
ANR	4877497	Argument	io		4877168	0					
ANR	4877498	Identifier	io		4877168	0					
ANR	4877499	Argument	uri		4877168	1					
ANR	4877500	Identifier	uri		4877168	0					
ANR	4877501	Argument	rw		4877168	2					
ANR	4877502	Identifier	rw		4877168	0					
ANR	4877503	Argument	mode		4877168	3					
ANR	4877504	Identifier	mode		4877168	0					
ANR	4877505	CompoundStatement		46:4:1231:1270	4877168	1					
ANR	4877506	IdentifierDeclStatement	RIOW32Dbg * w32 = ( RIOW32Dbg * ) ret -> data ;	593:4:14306:14345	4877168	0	True				
ANR	4877507	IdentifierDecl	* w32 = ( RIOW32Dbg * ) ret -> data		4877168	0					
ANR	4877508	IdentifierDeclType	RIOW32Dbg *		4877168	0					
ANR	4877509	Identifier	w32		4877168	1					
ANR	4877510	AssignmentExpression	* w32 = ( RIOW32Dbg * ) ret -> data		4877168	2		=			
ANR	4877511	Identifier	w32		4877168	0					
ANR	4877512	CastExpression	( RIOW32Dbg * ) ret -> data		4877168	1					
ANR	4877513	CastTarget	RIOW32Dbg *		4877168	0					
ANR	4877514	PtrMemberAccess	ret -> data		4877168	1					
ANR	4877515	Identifier	ret		4877168	0					
ANR	4877516	Identifier	data		4877168	1					
ANR	4877517	ExpressionStatement	w32 -> winbase = winbase	594:4:14351:14373	4877168	1	True				
ANR	4877518	AssignmentExpression	w32 -> winbase = winbase		4877168	0		=			
ANR	4877519	PtrMemberAccess	w32 -> winbase		4877168	0					
ANR	4877520	Identifier	w32		4877168	0					
ANR	4877521	Identifier	winbase		4877168	1					
ANR	4877522	Identifier	winbase		4877168	1					
ANR	4877523	ExpressionStatement	w32 -> pi . dwThreadId = wintid	595:4:14379:14406	4877168	2	True				
ANR	4877524	AssignmentExpression	w32 -> pi . dwThreadId = wintid		4877168	0		=			
ANR	4877525	MemberAccess	w32 -> pi . dwThreadId		4877168	0					
ANR	4877526	PtrMemberAccess	w32 -> pi		4877168	0					
ANR	4877527	Identifier	w32		4877168	0					
ANR	4877528	Identifier	pi		4877168	1					
ANR	4877529	Identifier	dwThreadId		4877168	1					
ANR	4877530	Identifier	wintid		4877168	1					
ANR	4877531	ExpressionStatement	* ( RIOW32Dbg * ) ( ( RCore * ) io -> user ) -> dbg -> user = * w32	596:4:14412:14463	4877168	3	True				
ANR	4877532	AssignmentExpression	* ( RIOW32Dbg * ) ( ( RCore * ) io -> user ) -> dbg -> user = * w32		4877168	0		=			
ANR	4877533	UnaryOperationExpression	* ( RIOW32Dbg * ) ( ( RCore * ) io -> user ) -> dbg -> user		4877168	0					
ANR	4877534	UnaryOperator	*		4877168	0					
ANR	4877535	CastExpression	( RIOW32Dbg * ) ( ( RCore * ) io -> user ) -> dbg -> user		4877168	1					
ANR	4877536	CastTarget	RIOW32Dbg *		4877168	0					
ANR	4877537	PtrMemberAccess	( ( RCore * ) io -> user ) -> dbg -> user		4877168	1					
ANR	4877538	PtrMemberAccess	( ( RCore * ) io -> user ) -> dbg		4877168	0					
ANR	4877539	CastExpression	( RCore * ) io -> user		4877168	0					
ANR	4877540	CastTarget	RCore *		4877168	0					
ANR	4877541	PtrMemberAccess	io -> user		4877168	1					
ANR	4877542	Identifier	io		4877168	0					
ANR	4877543	Identifier	user		4877168	1					
ANR	4877544	Identifier	dbg		4877168	1					
ANR	4877545	Identifier	user		4877168	1					
ANR	4877546	UnaryOperationExpression	* w32		4877168	1					
ANR	4877547	UnaryOperator	*		4877168	0					
ANR	4877548	Identifier	w32		4877168	1					
ANR	4877549	ElseStatement	else		4877168	0					
ANR	4877550	CompoundStatement		67:9:1934:1934	4877168	0					
ANR	4877551	ExpressionStatement	"sprintf ( uri , ""attach://%d"" , pid )"	615:3:15014:15047	4877168	0	True				
ANR	4877552	CallExpression	"sprintf ( uri , ""attach://%d"" , pid )"		4877168	0					
ANR	4877553	Callee	sprintf		4877168	0					
ANR	4877554	Identifier	sprintf		4877168	0					
ANR	4877555	ArgumentList	uri		4877168	1					
ANR	4877556	Argument	uri		4877168	0					
ANR	4877557	Identifier	uri		4877168	0					
ANR	4877558	Argument	"""attach://%d"""		4877168	1					
ANR	4877559	PrimaryExpression	"""attach://%d"""		4877168	0					
ANR	4877560	Argument	pid		4877168	2					
ANR	4877561	Identifier	pid		4877168	0					
ANR	4877562	ExpressionStatement	"_plugin = r_io_plugin_resolve ( io , ( const char * ) uri , false )"	616:3:15052:15112	4877168	1	True				
ANR	4877563	AssignmentExpression	"_plugin = r_io_plugin_resolve ( io , ( const char * ) uri , false )"		4877168	0		=			
ANR	4877564	Identifier	_plugin		4877168	0					
ANR	4877565	CallExpression	"r_io_plugin_resolve ( io , ( const char * ) uri , false )"		4877168	1					
ANR	4877566	Callee	r_io_plugin_resolve		4877168	0					
ANR	4877567	Identifier	r_io_plugin_resolve		4877168	0					
ANR	4877568	ArgumentList	io		4877168	1					
ANR	4877569	Argument	io		4877168	0					
ANR	4877570	Identifier	io		4877168	0					
ANR	4877571	Argument	( const char * ) uri		4877168	1					
ANR	4877572	CastExpression	( const char * ) uri		4877168	0					
ANR	4877573	CastTarget	const char *		4877168	0					
ANR	4877574	Identifier	uri		4877168	1					
ANR	4877575	Argument	false		4877168	2					
ANR	4877576	Identifier	false		4877168	0					
ANR	4877577	IfStatement	if ( ! _plugin || ! _plugin -> open )		4877168	2					
ANR	4877578	Condition	! _plugin || ! _plugin -> open	617:7:15121:15146	4877168	0	True				
ANR	4877579	OrExpression	! _plugin || ! _plugin -> open		4877168	0		||			
ANR	4877580	UnaryOperationExpression	! _plugin		4877168	0					
ANR	4877581	UnaryOperator	!		4877168	0					
ANR	4877582	Identifier	_plugin		4877168	1					
ANR	4877583	UnaryOperationExpression	! _plugin -> open		4877168	1					
ANR	4877584	UnaryOperator	!		4877168	0					
ANR	4877585	PtrMemberAccess	_plugin -> open		4877168	1					
ANR	4877586	Identifier	_plugin		4877168	0					
ANR	4877587	Identifier	open		4877168	1					
ANR	4877588	CompoundStatement		70:35:2074:2074	4877168	1					
ANR	4877589	ReturnStatement	return NULL ;	618:4:15155:15166	4877168	0	True				
ANR	4877590	Identifier	NULL		4877168	0					
ANR	4877591	ExpressionStatement	"ret = _plugin -> open ( io , uri , rw , mode )"	620:3:15176:15215	4877168	3	True				
ANR	4877592	AssignmentExpression	"ret = _plugin -> open ( io , uri , rw , mode )"		4877168	0		=			
ANR	4877593	Identifier	ret		4877168	0					
ANR	4877594	CallExpression	"_plugin -> open ( io , uri , rw , mode )"		4877168	1					
ANR	4877595	Callee	_plugin -> open		4877168	0					
ANR	4877596	PtrMemberAccess	_plugin -> open		4877168	0					
ANR	4877597	Identifier	_plugin		4877168	0					
ANR	4877598	Identifier	open		4877168	1					
ANR	4877599	ArgumentList	io		4877168	1					
ANR	4877600	Argument	io		4877168	0					
ANR	4877601	Identifier	io		4877168	0					
ANR	4877602	Argument	uri		4877168	1					
ANR	4877603	Identifier	uri		4877168	0					
ANR	4877604	Argument	rw		4877168	2					
ANR	4877605	Identifier	rw		4877168	0					
ANR	4877606	Argument	mode		4877168	3					
ANR	4877607	Identifier	mode		4877168	0					
ANR	4877608	IfStatement	if ( ret )		4877168	5					
ANR	4877609	Condition	ret	622:6:15227:15229	4877168	0	True				
ANR	4877610	Identifier	ret		4877168	0					
ANR	4877611	CompoundStatement		75:11:2157:2157	4877168	1					
ANR	4877612	ExpressionStatement	ret -> plugin = _plugin	623:3:15237:15258	4877168	0	True				
ANR	4877613	AssignmentExpression	ret -> plugin = _plugin		4877168	0		=			
ANR	4877614	PtrMemberAccess	ret -> plugin		4877168	0					
ANR	4877615	Identifier	ret		4877168	0					
ANR	4877616	Identifier	plugin		4877168	1					
ANR	4877617	Identifier	_plugin		4877168	1					
ANR	4877618	ExpressionStatement	ret -> referer = strdup ( file )	624:3:15263:15291	4877168	1	True				
ANR	4877619	AssignmentExpression	ret -> referer = strdup ( file )		4877168	0		=			
ANR	4877620	PtrMemberAccess	ret -> referer		4877168	0					
ANR	4877621	Identifier	ret		4877168	0					
ANR	4877622	Identifier	referer		4877168	1					
ANR	4877623	CallExpression	strdup ( file )		4877168	1					
ANR	4877624	Callee	strdup		4877168	0					
ANR	4877625	Identifier	strdup		4877168	0					
ANR	4877626	ArgumentList	file		4877168	1					
ANR	4877627	Argument	file		4877168	0					
ANR	4877628	Identifier	file		4877168	0					
ANR	4877629	ReturnStatement	return ret ;	627:1:15314:15324	4877168	5	True				
ANR	4877630	Identifier	ret		4877168	0					
ANR	4877631	ReturnType	static RIODesc *		4877168	1					
ANR	4877632	Identifier	__open		4877168	2					
ANR	4877633	ParameterList	"RIO * io , const char * file , int rw , int mode"		4877168	3					
ANR	4877634	Parameter	RIO * io	548:23:13029:13035	4877168	0	True				
ANR	4877635	ParameterType	RIO *		4877168	0					
ANR	4877636	Identifier	io		4877168	1					
ANR	4877637	Parameter	const char * file	548:32:13038:13053	4877168	1	True				
ANR	4877638	ParameterType	const char *		4877168	0					
ANR	4877639	Identifier	file		4877168	1					
ANR	4877640	Parameter	int rw	548:50:13056:13061	4877168	2	True				
ANR	4877641	ParameterType	int		4877168	0					
ANR	4877642	Identifier	rw		4877168	1					
ANR	4877643	Parameter	int mode	548:58:13064:13071	4877168	3	True				
ANR	4877644	ParameterType	int		4877168	0					
ANR	4877645	Identifier	mode		4877168	1					
ANR	4877646	CFGEntryNode	ENTRY		4877168		True				
ANR	4877647	CFGExitNode	EXIT		4877168		True				
ANR	4877648	Symbol	* ( ( RCore * ) io -> user ) -> dbg		4877168						
ANR	4877649	Symbol	( ( RCore * ) io -> user ) -> dbg		4877168						
ANR	4877650	Symbol	w32 -> winbase		4877168						
ANR	4877651	Symbol	* * * io -> user		4877168						
ANR	4877652	Symbol	pid		4877168						
ANR	4877653	Symbol	get_pid_of		4877168						
ANR	4877654	Symbol	mode		4877168						
ANR	4877655	Symbol	pidfile		4877168						
ANR	4877656	Symbol	* * io		4877168						
ANR	4877657	Symbol	strncmp		4877168						
ANR	4877658	Symbol	ret -> data		4877168						
ANR	4877659	Symbol	w32		4877168						
ANR	4877660	Symbol	ret -> plugin		4877168						
ANR	4877661	Symbol	ret		4877168						
ANR	4877662	Symbol	NULL		4877168						
ANR	4877663	Symbol	* ( ( RCore * ) io -> user ) -> dbg -> user		4877168						
ANR	4877664	Symbol	endptr		4877168						
ANR	4877665	Symbol	io		4877168						
ANR	4877666	Symbol	* * ( ( RCore * ) io -> user ) -> dbg		4877168						
ANR	4877667	Symbol	& endptr		4877168						
ANR	4877668	Symbol	* * * * io		4877168						
ANR	4877669	Symbol	true		4877168						
ANR	4877670	Symbol	( ( RCore * ) io -> user ) -> dbg -> user		4877168						
ANR	4877671	Symbol	io -> bits		4877168						
ANR	4877672	Symbol	wintid		4877168						
ANR	4877673	Symbol	* w32		4877168						
ANR	4877674	Symbol	winbase		4877168						
ANR	4877675	Symbol	rw		4877168						
ANR	4877676	Symbol	ret -> referer		4877168						
ANR	4877677	Symbol	* _plugin		4877168						
ANR	4877678	Symbol	* ret		4877168						
ANR	4877679	Symbol	* io		4877168						
ANR	4877680	Symbol	io -> user		4877168						
ANR	4877681	Symbol	r_io_plugin_resolve		4877168						
ANR	4877682	Symbol	file		4877168						
ANR	4877683	Symbol	_plugin -> open		4877168						
ANR	4877684	Symbol	strtol		4877168						
ANR	4877685	Symbol	* ( RIOW32Dbg * ) ( ( RCore * ) io -> user ) -> dbg -> user		4877168						
ANR	4877686	Symbol	target_pid		4877168						
ANR	4877687	Symbol	w32 -> pi . dwThreadId		4877168						
ANR	4877688	Symbol	* * io -> user		4877168						
ANR	4877689	Symbol	_plugin		4877168						
ANR	4877690	Symbol	false		4877168						
ANR	4877691	Symbol	w32 -> pi		4877168						
ANR	4877692	Symbol	uri		4877168						
ANR	4877693	Symbol	__plugin_open		4877168						
ANR	4877694	Symbol	fork_and_ptraceme		4877168						
ANR	4877695	Symbol	* * * io		4877168						
ANR	4877696	Symbol	procname		4877168						
ANR	4877697	Symbol	strdup		4877168						
ANR	4877698	Symbol	* io -> user		4877168						
ANR	4877699	Function	__close	630:0:15329:15540							
ANR	4877700	FunctionDef	__close (RIODesc * desc)		4877699	0					
ANR	4877701	CompoundStatement		630:35:15364:15540	4877699	0					
ANR	4877702	IdentifierDeclStatement	int ret = - 2 ;	631:1:15367:15379	4877699	0	True				
ANR	4877703	IdentifierDecl	ret = - 2		4877699	0					
ANR	4877704	IdentifierDeclType	int		4877699	0					
ANR	4877705	Identifier	ret		4877699	1					
ANR	4877706	AssignmentExpression	ret = - 2		4877699	2		=			
ANR	4877707	Identifier	ret		4877699	0					
ANR	4877708	UnaryOperationExpression	- 2		4877699	1					
ANR	4877709	UnaryOperator	-		4877699	0					
ANR	4877710	PrimaryExpression	2		4877699	1					
ANR	4877711	ExpressionStatement	"eprintf ( ""something went wrong\\n"" )"	632:1:15382:15416	4877699	1	True				
ANR	4877712	CallExpression	"eprintf ( ""something went wrong\\n"" )"		4877699	0					
ANR	4877713	Callee	eprintf		4877699	0					
ANR	4877714	Identifier	eprintf		4877699	0					
ANR	4877715	ArgumentList	"""something went wrong\\n"""		4877699	1					
ANR	4877716	Argument	"""something went wrong\\n"""		4877699	0					
ANR	4877717	PrimaryExpression	"""something went wrong\\n"""		4877699	0					
ANR	4877718	IfStatement	if ( desc )		4877699	2					
ANR	4877719	Condition	desc	633:5:15423:15426	4877699	0	True				
ANR	4877720	Identifier	desc		4877699	0					
ANR	4877721	CompoundStatement		4:11:64:64	4877699	1					
ANR	4877722	ExpressionStatement	"eprintf ( ""trying to close %d with io_debug\\n"" , desc -> fd )"	634:2:15433:15489	4877699	0	True				
ANR	4877723	CallExpression	"eprintf ( ""trying to close %d with io_debug\\n"" , desc -> fd )"		4877699	0					
ANR	4877724	Callee	eprintf		4877699	0					
ANR	4877725	Identifier	eprintf		4877699	0					
ANR	4877726	ArgumentList	"""trying to close %d with io_debug\\n"""		4877699	1					
ANR	4877727	Argument	"""trying to close %d with io_debug\\n"""		4877699	0					
ANR	4877728	PrimaryExpression	"""trying to close %d with io_debug\\n"""		4877699	0					
ANR	4877729	Argument	desc -> fd		4877699	1					
ANR	4877730	PtrMemberAccess	desc -> fd		4877699	0					
ANR	4877731	Identifier	desc		4877699	0					
ANR	4877732	Identifier	fd		4877699	1					
ANR	4877733	ExpressionStatement	ret = - 1	635:2:15493:15501	4877699	1	True				
ANR	4877734	AssignmentExpression	ret = - 1		4877699	0		=			
ANR	4877735	Identifier	ret		4877699	0					
ANR	4877736	UnaryOperationExpression	- 1		4877699	1					
ANR	4877737	UnaryOperator	-		4877699	0					
ANR	4877738	PrimaryExpression	1		4877699	1					
ANR	4877739	ExpressionStatement	r_sys_backtrace ( )	637:1:15507:15525	4877699	3	True				
ANR	4877740	CallExpression	r_sys_backtrace ( )		4877699	0					
ANR	4877741	Callee	r_sys_backtrace		4877699	0					
ANR	4877742	Identifier	r_sys_backtrace		4877699	0					
ANR	4877743	ArgumentList			4877699	1					
ANR	4877744	ReturnStatement	return ret ;	638:1:15528:15538	4877699	4	True				
ANR	4877745	Identifier	ret		4877699	0					
ANR	4877746	ReturnType	static int		4877699	1					
ANR	4877747	Identifier	__close		4877699	2					
ANR	4877748	ParameterList	RIODesc * desc		4877699	3					
ANR	4877749	Parameter	RIODesc * desc	630:20:15349:15361	4877699	0	True				
ANR	4877750	ParameterType	RIODesc *		4877699	0					
ANR	4877751	Identifier	desc		4877699	1					
ANR	4877752	CFGEntryNode	ENTRY		4877699		True				
ANR	4877753	CFGExitNode	EXIT		4877699		True				
ANR	4877754	Symbol	ret		4877699						
ANR	4877755	Symbol	* desc		4877699						
ANR	4877756	Symbol	desc		4877699						
ANR	4877757	Symbol	desc -> fd		4877699						
ANR	4877758	DeclStmt									
ANR	4877759	Decl							RIOPlugin	RIOPlugin	r_io_plugin_debug
ANR	4877760	DeclStmt									
ANR	4877761	Decl							RIOPlugin	RIOPlugin	r_io_plugin_debug
ANR	4877762	DeclStmt									
ANR	4877763	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
