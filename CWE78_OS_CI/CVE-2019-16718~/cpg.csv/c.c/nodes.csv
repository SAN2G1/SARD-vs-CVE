command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	634736	File	data/converged/CVE-2019-16718~_radare2/c.c								
ANR	634737	DeclStmt									
ANR	634738	Decl							int	int	ac
ANR	634739	DeclStmt									
ANR	634740	Decl							const char	const char * *	av
ANR	634741	Function	lang_c_set_argv	12:0:245:355							
ANR	634742	FunctionDef	"lang_c_set_argv (RLang * lang , int argc , const char * * argv)"		634741	0					
ANR	634743	CompoundStatement		12:70:315:355	634741	0					
ANR	634744	ExpressionStatement	ac = argc	13:1:318:327	634741	0	True				
ANR	634745	AssignmentExpression	ac = argc		634741	0		=			
ANR	634746	Identifier	ac		634741	0					
ANR	634747	Identifier	argc		634741	1					
ANR	634748	ExpressionStatement	av = argv	14:1:330:339	634741	1	True				
ANR	634749	AssignmentExpression	av = argv		634741	0		=			
ANR	634750	Identifier	av		634741	0					
ANR	634751	Identifier	argv		634741	1					
ANR	634752	ReturnStatement	return true ;	15:1:342:353	634741	2	True				
ANR	634753	Identifier	true		634741	0					
ANR	634754	ReturnType	static bool		634741	1					
ANR	634755	Identifier	lang_c_set_argv		634741	2					
ANR	634756	ParameterList	"RLang * lang , int argc , const char * * argv"		634741	3					
ANR	634757	Parameter	RLang * lang	12:28:273:283	634741	0	True				
ANR	634758	ParameterType	RLang *		634741	0					
ANR	634759	Identifier	lang		634741	1					
ANR	634760	Parameter	int argc	12:41:286:293	634741	1	True				
ANR	634761	ParameterType	int		634741	0					
ANR	634762	Identifier	argc		634741	1					
ANR	634763	Parameter	const char * * argv	12:51:296:312	634741	2	True				
ANR	634764	ParameterType	const char * *		634741	0					
ANR	634765	Identifier	argv		634741	1					
ANR	634766	CFGEntryNode	ENTRY		634741		True				
ANR	634767	CFGExitNode	EXIT		634741		True				
ANR	634768	Symbol	argc		634741						
ANR	634769	Symbol	ac		634741						
ANR	634770	Symbol	av		634741						
ANR	634771	Symbol	true		634741						
ANR	634772	Symbol	lang		634741						
ANR	634773	Symbol	argv		634741						
ANR	634774	Function	lang_c_file	18:0:358:1758							
ANR	634775	FunctionDef	"lang_c_file (RLang * lang , const char * file)"		634774	0					
ANR	634776	CompoundStatement		18:54:412:1758	634774	0					
ANR	634777	IdentifierDeclStatement	"char * a , * cc , * p , name [ 512 ] ;"	19:1:415:442	634774	0	True				
ANR	634778	IdentifierDecl	* a		634774	0					
ANR	634779	IdentifierDeclType	char *		634774	0					
ANR	634780	Identifier	a		634774	1					
ANR	634781	IdentifierDecl	* cc		634774	1					
ANR	634782	IdentifierDeclType	char *		634774	0					
ANR	634783	Identifier	cc		634774	1					
ANR	634784	IdentifierDecl	* p		634774	2					
ANR	634785	IdentifierDeclType	char *		634774	0					
ANR	634786	Identifier	p		634774	1					
ANR	634787	IdentifierDecl	name [ 512 ]		634774	3					
ANR	634788	IdentifierDeclType	char [ 512 ]		634774	0					
ANR	634789	Identifier	name		634774	1					
ANR	634790	PrimaryExpression	512		634774	2					
ANR	634791	IdentifierDeclStatement	"const char * libpath , * libname ;"	20:1:445:474	634774	1	True				
ANR	634792	IdentifierDecl	* libpath		634774	0					
ANR	634793	IdentifierDeclType	const char *		634774	0					
ANR	634794	Identifier	libpath		634774	1					
ANR	634795	IdentifierDecl	* libname		634774	1					
ANR	634796	IdentifierDeclType	const char *		634774	0					
ANR	634797	Identifier	libname		634774	1					
ANR	634798	IdentifierDeclStatement	void * lib ;	21:1:477:486	634774	2	True				
ANR	634799	IdentifierDecl	* lib		634774	0					
ANR	634800	IdentifierDeclType	void *		634774	0					
ANR	634801	Identifier	lib		634774	1					
ANR	634802	IfStatement	if ( strlen ( file ) > ( sizeof ( name ) - 10 ) )		634774	3					
ANR	634803	Condition	strlen ( file ) > ( sizeof ( name ) - 10 )	23:5:494:529	634774	0	True				
ANR	634804	RelationalExpression	strlen ( file ) > ( sizeof ( name ) - 10 )		634774	0		>			
ANR	634805	CallExpression	strlen ( file )		634774	0					
ANR	634806	Callee	strlen		634774	0					
ANR	634807	Identifier	strlen		634774	0					
ANR	634808	ArgumentList	file		634774	1					
ANR	634809	Argument	file		634774	0					
ANR	634810	Identifier	file		634774	0					
ANR	634811	AdditiveExpression	sizeof ( name ) - 10		634774	1		-			
ANR	634812	SizeofExpression	sizeof ( name )		634774	0					
ANR	634813	Sizeof	sizeof		634774	0					
ANR	634814	SizeofOperand	name		634774	1					
ANR	634815	PrimaryExpression	10		634774	1					
ANR	634816	CompoundStatement		6:43:119:119	634774	1					
ANR	634817	ReturnStatement	return false ;	24:2:536:548	634774	0	True				
ANR	634818	Identifier	false		634774	0					
ANR	634819	IfStatement	"if ( ! strstr ( file , "".c"" ) )"		634774	4					
ANR	634820	Condition	"! strstr ( file , "".c"" )"	26:5:558:577	634774	0	True				
ANR	634821	UnaryOperationExpression	"! strstr ( file , "".c"" )"		634774	0					
ANR	634822	UnaryOperator	!		634774	0					
ANR	634823	CallExpression	"strstr ( file , "".c"" )"		634774	1					
ANR	634824	Callee	strstr		634774	0					
ANR	634825	Identifier	strstr		634774	0					
ANR	634826	ArgumentList	file		634774	1					
ANR	634827	Argument	file		634774	0					
ANR	634828	Identifier	file		634774	0					
ANR	634829	Argument	""".c"""		634774	1					
ANR	634830	PrimaryExpression	""".c"""		634774	0					
ANR	634831	CompoundStatement		9:27:167:167	634774	1					
ANR	634832	ExpressionStatement	"sprintf ( name , ""%s.c"" , file )"	27:2:584:612	634774	0	True				
ANR	634833	CallExpression	"sprintf ( name , ""%s.c"" , file )"		634774	0					
ANR	634834	Callee	sprintf		634774	0					
ANR	634835	Identifier	sprintf		634774	0					
ANR	634836	ArgumentList	name		634774	1					
ANR	634837	Argument	name		634774	0					
ANR	634838	Identifier	name		634774	0					
ANR	634839	Argument	"""%s.c"""		634774	1					
ANR	634840	PrimaryExpression	"""%s.c"""		634774	0					
ANR	634841	Argument	file		634774	2					
ANR	634842	Identifier	file		634774	0					
ANR	634843	ElseStatement	else		634774	0					
ANR	634844	CompoundStatement		11:8:209:209	634774	0					
ANR	634845	ExpressionStatement	"strcpy ( name , file )"	29:2:626:645	634774	0	True				
ANR	634846	CallExpression	"strcpy ( name , file )"		634774	0					
ANR	634847	Callee	strcpy		634774	0					
ANR	634848	Identifier	strcpy		634774	0					
ANR	634849	ArgumentList	name		634774	1					
ANR	634850	Argument	name		634774	0					
ANR	634851	Identifier	name		634774	0					
ANR	634852	Argument	file		634774	1					
ANR	634853	Identifier	file		634774	0					
ANR	634854	IfStatement	if ( ! r_file_exists ( name ) )		634774	5					
ANR	634855	Condition	! r_file_exists ( name )	31:5:655:675	634774	0	True				
ANR	634856	UnaryOperationExpression	! r_file_exists ( name )		634774	0					
ANR	634857	UnaryOperator	!		634774	0					
ANR	634858	CallExpression	r_file_exists ( name )		634774	1					
ANR	634859	Callee	r_file_exists		634774	0					
ANR	634860	Identifier	r_file_exists		634774	0					
ANR	634861	ArgumentList	name		634774	1					
ANR	634862	Argument	name		634774	0					
ANR	634863	Identifier	name		634774	0					
ANR	634864	CompoundStatement		14:28:265:265	634774	1					
ANR	634865	ExpressionStatement	"eprintf ( ""file not found (%s)\\n"" , name )"	32:2:682:721	634774	0	True				
ANR	634866	CallExpression	"eprintf ( ""file not found (%s)\\n"" , name )"		634774	0					
ANR	634867	Callee	eprintf		634774	0					
ANR	634868	Identifier	eprintf		634774	0					
ANR	634869	ArgumentList	"""file not found (%s)\\n"""		634774	1					
ANR	634870	Argument	"""file not found (%s)\\n"""		634774	0					
ANR	634871	PrimaryExpression	"""file not found (%s)\\n"""		634774	0					
ANR	634872	Argument	name		634774	1					
ANR	634873	Identifier	name		634774	0					
ANR	634874	ReturnStatement	return false ;	33:2:725:737	634774	1	True				
ANR	634875	Identifier	false		634774	0					
ANR	634876	ExpressionStatement	"a = ( char * ) r_str_lchr ( name , '/' )"	36:1:744:777	634774	6	True				
ANR	634877	AssignmentExpression	"a = ( char * ) r_str_lchr ( name , '/' )"		634774	0		=			
ANR	634878	Identifier	a		634774	0					
ANR	634879	CastExpression	"( char * ) r_str_lchr ( name , '/' )"		634774	1					
ANR	634880	CastTarget	char *		634774	0					
ANR	634881	CallExpression	"r_str_lchr ( name , '/' )"		634774	1					
ANR	634882	Callee	r_str_lchr		634774	0					
ANR	634883	Identifier	r_str_lchr		634774	0					
ANR	634884	ArgumentList	name		634774	1					
ANR	634885	Argument	name		634774	0					
ANR	634886	Identifier	name		634774	0					
ANR	634887	Argument	'/'		634774	1					
ANR	634888	PrimaryExpression	'/'		634774	0					
ANR	634889	IfStatement	if ( a )		634774	7					
ANR	634890	Condition	a	37:5:784:784	634774	0	True				
ANR	634891	Identifier	a		634774	0					
ANR	634892	CompoundStatement		20:8:374:374	634774	1					
ANR	634893	ExpressionStatement	* a = 0	38:2:791:797	634774	0	True				
ANR	634894	AssignmentExpression	* a = 0		634774	0		=			
ANR	634895	UnaryOperationExpression	* a		634774	0					
ANR	634896	UnaryOperator	*		634774	0					
ANR	634897	Identifier	a		634774	1					
ANR	634898	PrimaryExpression	0		634774	1					
ANR	634899	ExpressionStatement	libpath = name	39:2:801:815	634774	1	True				
ANR	634900	AssignmentExpression	libpath = name		634774	0		=			
ANR	634901	Identifier	libpath		634774	0					
ANR	634902	Identifier	name		634774	1					
ANR	634903	ExpressionStatement	libname = a + 1	40:2:819:834	634774	2	True				
ANR	634904	AssignmentExpression	libname = a + 1		634774	0		=			
ANR	634905	Identifier	libname		634774	0					
ANR	634906	AdditiveExpression	a + 1		634774	1		+			
ANR	634907	Identifier	a		634774	0					
ANR	634908	PrimaryExpression	1		634774	1					
ANR	634909	ElseStatement	else		634774	0					
ANR	634910	CompoundStatement		24:8:431:431	634774	0					
ANR	634911	ExpressionStatement	"libpath = ""."""	42:2:848:861	634774	0	True				
ANR	634912	AssignmentExpression	"libpath = ""."""		634774	0		=			
ANR	634913	Identifier	libpath		634774	0					
ANR	634914	PrimaryExpression	"""."""		634774	1					
ANR	634915	ExpressionStatement	libname = name	43:2:865:879	634774	1	True				
ANR	634916	AssignmentExpression	libname = name		634774	0		=			
ANR	634917	Identifier	libname		634774	0					
ANR	634918	Identifier	name		634774	1					
ANR	634919	Statement	r_sys_setenv	45:1:885:896	634774	8	True				
ANR	634920	Statement	(	45:14:898:898	634774	9	True				
ANR	634921	Statement	"""PKG_CONFIG_PATH"""	45:15:899:915	634774	10	True				
ANR	634922	Statement	","	45:32:916:916	634774	11	True				
ANR	634923	Statement	R2_LIBDIR	45:34:918:926	634774	12	True				
ANR	634924	Statement	"""/pkgconfig"""	45:43:927:938	634774	13	True				
ANR	634925	Statement	)	45:55:939:939	634774	14	True				
ANR	634926	ExpressionStatement		45:56:940:940	634774	15	True				
ANR	634927	ExpressionStatement	"p = strstr ( name , "".c"" )"	46:1:943:966	634774	16	True				
ANR	634928	AssignmentExpression	"p = strstr ( name , "".c"" )"		634774	0		=			
ANR	634929	Identifier	p		634774	0					
ANR	634930	CallExpression	"strstr ( name , "".c"" )"		634774	1					
ANR	634931	Callee	strstr		634774	0					
ANR	634932	Identifier	strstr		634774	0					
ANR	634933	ArgumentList	name		634774	1					
ANR	634934	Argument	name		634774	0					
ANR	634935	Identifier	name		634774	0					
ANR	634936	Argument	""".c"""		634774	1					
ANR	634937	PrimaryExpression	""".c"""		634774	0					
ANR	634938	IfStatement	if ( p )		634774	17					
ANR	634939	Condition	p	47:5:973:973	634774	0	True				
ANR	634940	Identifier	p		634774	0					
ANR	634941	CompoundStatement		30:8:563:563	634774	1					
ANR	634942	ExpressionStatement	* p = 0	48:2:980:984	634774	0	True				
ANR	634943	AssignmentExpression	* p = 0		634774	0		=			
ANR	634944	UnaryOperationExpression	* p		634774	0					
ANR	634945	UnaryOperator	*		634774	0					
ANR	634946	Identifier	p		634774	1					
ANR	634947	PrimaryExpression	0		634774	1					
ANR	634948	ExpressionStatement	"cc = r_sys_getenv ( ""CC"" )"	50:1:990:1014	634774	18	True				
ANR	634949	AssignmentExpression	"cc = r_sys_getenv ( ""CC"" )"		634774	0		=			
ANR	634950	Identifier	cc		634774	0					
ANR	634951	CallExpression	"r_sys_getenv ( ""CC"" )"		634774	1					
ANR	634952	Callee	r_sys_getenv		634774	0					
ANR	634953	Identifier	r_sys_getenv		634774	0					
ANR	634954	ArgumentList	"""CC"""		634774	1					
ANR	634955	Argument	"""CC"""		634774	0					
ANR	634956	PrimaryExpression	"""CC"""		634774	0					
ANR	634957	IfStatement	if ( ! cc || ! * cc )		634774	19					
ANR	634958	Condition	! cc || ! * cc	51:5:1021:1031	634774	0	True				
ANR	634959	OrExpression	! cc || ! * cc		634774	0		||			
ANR	634960	UnaryOperationExpression	! cc		634774	0					
ANR	634961	UnaryOperator	!		634774	0					
ANR	634962	Identifier	cc		634774	1					
ANR	634963	UnaryOperationExpression	! * cc		634774	1					
ANR	634964	UnaryOperator	!		634774	0					
ANR	634965	UnaryOperationExpression	* cc		634774	1					
ANR	634966	UnaryOperator	*		634774	0					
ANR	634967	Identifier	cc		634774	1					
ANR	634968	CompoundStatement		34:18:621:621	634774	1					
ANR	634969	ExpressionStatement	"cc = strdup ( ""gcc"" )"	52:2:1038:1057	634774	0	True				
ANR	634970	AssignmentExpression	"cc = strdup ( ""gcc"" )"		634774	0		=			
ANR	634971	Identifier	cc		634774	0					
ANR	634972	CallExpression	"strdup ( ""gcc"" )"		634774	1					
ANR	634973	Callee	strdup		634774	0					
ANR	634974	Identifier	strdup		634774	0					
ANR	634975	ArgumentList	"""gcc"""		634774	1					
ANR	634976	Argument	"""gcc"""		634774	0					
ANR	634977	PrimaryExpression	"""gcc"""		634774	0					
ANR	634978	Statement	char	54:1:1063:1066	634774	20	True				
ANR	634979	Statement	*	54:6:1068:1068	634774	21	True				
ANR	634980	Statement	buf	54:7:1069:1071	634774	22	True				
ANR	634981	Statement	=	54:11:1073:1073	634774	23	True				
ANR	634982	Statement	r_str_newf	54:13:1075:1084	634774	24	True				
ANR	634983	Statement	(	54:24:1086:1086	634774	25	True				
ANR	634984	Statement	"""%s -fPIC -shared %s -o %s/lib%s."""	54:25:1087:1120	634774	26	True				
ANR	634985	Statement	R_LIB_EXT	54:59:1121:1129	634774	27	True				
ANR	634986	Statement	""" $(pkg-config --cflags --libs r_core)"""	55:2:1133:1171	634774	28	True				
ANR	634987	Statement	","	55:41:1172:1172	634774	29	True				
ANR	634988	Statement	cc	55:43:1174:1175	634774	30	True				
ANR	634989	Statement	","	55:45:1176:1176	634774	31	True				
ANR	634990	Statement	file	55:47:1178:1181	634774	32	True				
ANR	634991	Statement	","	55:51:1182:1182	634774	33	True				
ANR	634992	Statement	libpath	55:53:1184:1190	634774	34	True				
ANR	634993	Statement	","	55:60:1191:1191	634774	35	True				
ANR	634994	Statement	libname	55:62:1193:1199	634774	36	True				
ANR	634995	Statement	)	55:69:1200:1200	634774	37	True				
ANR	634996	ExpressionStatement		55:70:1201:1201	634774	38	True				
ANR	634997	ExpressionStatement	free ( cc )	56:1:1204:1213	634774	39	True				
ANR	634998	CallExpression	free ( cc )		634774	0					
ANR	634999	Callee	free		634774	0					
ANR	635000	Identifier	free		634774	0					
ANR	635001	ArgumentList	cc		634774	1					
ANR	635002	Argument	cc		634774	0					
ANR	635003	Identifier	cc		634774	0					
ANR	635004	IfStatement	"if ( r_sandbox_system ( buf , 1 ) != 0 )"		634774	40					
ANR	635005	Condition	"r_sandbox_system ( buf , 1 ) != 0"	57:5:1220:1249	634774	0	True				
ANR	635006	EqualityExpression	"r_sandbox_system ( buf , 1 ) != 0"		634774	0		!=			
ANR	635007	CallExpression	"r_sandbox_system ( buf , 1 )"		634774	0					
ANR	635008	Callee	r_sandbox_system		634774	0					
ANR	635009	Identifier	r_sandbox_system		634774	0					
ANR	635010	ArgumentList	buf		634774	1					
ANR	635011	Argument	buf		634774	0					
ANR	635012	Identifier	buf		634774	0					
ANR	635013	Argument	1		634774	1					
ANR	635014	PrimaryExpression	1		634774	0					
ANR	635015	PrimaryExpression	0		634774	1					
ANR	635016	CompoundStatement		40:37:839:839	634774	1					
ANR	635017	ExpressionStatement	free ( buf )	58:2:1256:1266	634774	0	True				
ANR	635018	CallExpression	free ( buf )		634774	0					
ANR	635019	Callee	free		634774	0					
ANR	635020	Identifier	free		634774	0					
ANR	635021	ArgumentList	buf		634774	1					
ANR	635022	Argument	buf		634774	0					
ANR	635023	Identifier	buf		634774	0					
ANR	635024	ReturnStatement	return false ;	59:2:1270:1282	634774	1	True				
ANR	635025	Identifier	false		634774	0					
ANR	635026	ExpressionStatement	free ( buf )	61:1:1288:1298	634774	41	True				
ANR	635027	CallExpression	free ( buf )		634774	0					
ANR	635028	Callee	free		634774	0					
ANR	635029	Identifier	free		634774	0					
ANR	635030	ArgumentList	buf		634774	1					
ANR	635031	Argument	buf		634774	0					
ANR	635032	Identifier	buf		634774	0					
ANR	635033	Statement	buf	62:1:1301:1303	634774	42	True				
ANR	635034	Statement	=	62:5:1305:1305	634774	43	True				
ANR	635035	Statement	r_str_newf	62:7:1307:1316	634774	44	True				
ANR	635036	Statement	(	62:18:1318:1318	634774	45	True				
ANR	635037	Statement	"""%s/lib%s."""	62:19:1319:1329	634774	46	True				
ANR	635038	Statement	R_LIB_EXT	62:30:1330:1338	634774	47	True				
ANR	635039	Statement	","	62:39:1339:1339	634774	48	True				
ANR	635040	Statement	libpath	62:41:1341:1347	634774	49	True				
ANR	635041	Statement	","	62:48:1348:1348	634774	50	True				
ANR	635042	Statement	libname	62:50:1350:1356	634774	51	True				
ANR	635043	Statement	)	62:57:1357:1357	634774	52	True				
ANR	635044	ExpressionStatement		62:58:1358:1358	634774	53	True				
ANR	635045	ExpressionStatement	lib = r_lib_dl_open ( buf )	63:1:1361:1386	634774	54	True				
ANR	635046	AssignmentExpression	lib = r_lib_dl_open ( buf )		634774	0		=			
ANR	635047	Identifier	lib		634774	0					
ANR	635048	CallExpression	r_lib_dl_open ( buf )		634774	1					
ANR	635049	Callee	r_lib_dl_open		634774	0					
ANR	635050	Identifier	r_lib_dl_open		634774	0					
ANR	635051	ArgumentList	buf		634774	1					
ANR	635052	Argument	buf		634774	0					
ANR	635053	Identifier	buf		634774	0					
ANR	635054	IfStatement	if ( lib )		634774	55					
ANR	635055	Condition	lib	64:5:1393:1395	634774	0	True				
ANR	635056	Identifier	lib		634774	0					
ANR	635057	CompoundStatement		48:2:989:1038	634774	1					
ANR	635058	IdentifierDeclStatement	"void ( * fcn ) ( RCore * , int argc , const char * * argv ) ;"	65:2:1402:1451	634774	0	True				
ANR	635059	IdentifierDecl	"( * fcn ) ( RCore * , int argc , const char * * argv )"		634774	0					
ANR	635060	IdentifierDeclType	"void ( * ) ( RCore * , int argc , const char * * argv )"		634774	0					
ANR	635061	Identifier	fcn		634774	1					
ANR	635062	Identifier	argv		634774	2					
ANR	635063	ExpressionStatement	"fcn = r_lib_dl_sym ( lib , ""entry"" )"	66:2:1455:1488	634774	1	True				
ANR	635064	AssignmentExpression	"fcn = r_lib_dl_sym ( lib , ""entry"" )"		634774	0		=			
ANR	635065	Identifier	fcn		634774	0					
ANR	635066	CallExpression	"r_lib_dl_sym ( lib , ""entry"" )"		634774	1					
ANR	635067	Callee	r_lib_dl_sym		634774	0					
ANR	635068	Identifier	r_lib_dl_sym		634774	0					
ANR	635069	ArgumentList	lib		634774	1					
ANR	635070	Argument	lib		634774	0					
ANR	635071	Identifier	lib		634774	0					
ANR	635072	Argument	"""entry"""		634774	1					
ANR	635073	PrimaryExpression	"""entry"""		634774	0					
ANR	635074	IfStatement	if ( fcn )		634774	2					
ANR	635075	Condition	fcn	67:6:1496:1498	634774	0	True				
ANR	635076	Identifier	fcn		634774	0					
ANR	635077	CompoundStatement		50:11:1088:1088	634774	1					
ANR	635078	ExpressionStatement	"fcn ( lang -> user , ac , av )"	68:3:1506:1530	634774	0	True				
ANR	635079	CallExpression	"fcn ( lang -> user , ac , av )"		634774	0					
ANR	635080	Callee	fcn		634774	0					
ANR	635081	Identifier	fcn		634774	0					
ANR	635082	ArgumentList	lang -> user		634774	1					
ANR	635083	Argument	lang -> user		634774	0					
ANR	635084	PtrMemberAccess	lang -> user		634774	0					
ANR	635085	Identifier	lang		634774	0					
ANR	635086	Identifier	user		634774	1					
ANR	635087	Argument	ac		634774	1					
ANR	635088	Identifier	ac		634774	0					
ANR	635089	Argument	av		634774	2					
ANR	635090	Identifier	av		634774	0					
ANR	635091	ExpressionStatement	ac = 0	69:3:1535:1541	634774	1	True				
ANR	635092	AssignmentExpression	ac = 0		634774	0		=			
ANR	635093	Identifier	ac		634774	0					
ANR	635094	PrimaryExpression	0		634774	1					
ANR	635095	ExpressionStatement	av = NULL	70:3:1546:1555	634774	2	True				
ANR	635096	AssignmentExpression	av = NULL		634774	0		=			
ANR	635097	Identifier	av		634774	0					
ANR	635098	Identifier	NULL		634774	1					
ANR	635099	ElseStatement	else		634774	0					
ANR	635100	CompoundStatement		54:9:1153:1153	634774	0					
ANR	635101	ExpressionStatement	"eprintf ( ""Cannot find 'entry' symbol in library\\n"" )"	72:3:1571:1622	634774	0	True				
ANR	635102	CallExpression	"eprintf ( ""Cannot find 'entry' symbol in library\\n"" )"		634774	0					
ANR	635103	Callee	eprintf		634774	0					
ANR	635104	Identifier	eprintf		634774	0					
ANR	635105	ArgumentList	"""Cannot find 'entry' symbol in library\\n"""		634774	1					
ANR	635106	Argument	"""Cannot find 'entry' symbol in library\\n"""		634774	0					
ANR	635107	PrimaryExpression	"""Cannot find 'entry' symbol in library\\n"""		634774	0					
ANR	635108	ExpressionStatement	r_lib_dl_close ( lib )	74:2:1630:1650	634774	3	True				
ANR	635109	CallExpression	r_lib_dl_close ( lib )		634774	0					
ANR	635110	Callee	r_lib_dl_close		634774	0					
ANR	635111	Identifier	r_lib_dl_close		634774	0					
ANR	635112	ArgumentList	lib		634774	1					
ANR	635113	Argument	lib		634774	0					
ANR	635114	Identifier	lib		634774	0					
ANR	635115	ElseStatement	else		634774	0					
ANR	635116	CompoundStatement		58:8:1247:1247	634774	0					
ANR	635117	ExpressionStatement	"eprintf ( ""Cannot open library\\n"" )"	76:2:1664:1697	634774	0	True				
ANR	635118	CallExpression	"eprintf ( ""Cannot open library\\n"" )"		634774	0					
ANR	635119	Callee	eprintf		634774	0					
ANR	635120	Identifier	eprintf		634774	0					
ANR	635121	ArgumentList	"""Cannot open library\\n"""		634774	1					
ANR	635122	Argument	"""Cannot open library\\n"""		634774	0					
ANR	635123	PrimaryExpression	"""Cannot open library\\n"""		634774	0					
ANR	635124	ExpressionStatement	r_file_rm ( buf )	78:1:1703:1718	634774	56	True				
ANR	635125	CallExpression	r_file_rm ( buf )		634774	0					
ANR	635126	Callee	r_file_rm		634774	0					
ANR	635127	Identifier	r_file_rm		634774	0					
ANR	635128	ArgumentList	buf		634774	1					
ANR	635129	Argument	buf		634774	0					
ANR	635130	Identifier	buf		634774	0					
ANR	635131	ExpressionStatement	free ( buf )	79:1:1735:1745	634774	57	True				
ANR	635132	CallExpression	free ( buf )		634774	0					
ANR	635133	Callee	free		634774	0					
ANR	635134	Identifier	free		634774	0					
ANR	635135	ArgumentList	buf		634774	1					
ANR	635136	Argument	buf		634774	0					
ANR	635137	Identifier	buf		634774	0					
ANR	635138	ReturnStatement	return 0 ;	80:1:1748:1756	634774	58	True				
ANR	635139	PrimaryExpression	0		634774	0					
ANR	635140	ReturnType	static int		634774	1					
ANR	635141	Identifier	lang_c_file		634774	2					
ANR	635142	ParameterList	"RLang * lang , const char * file"		634774	3					
ANR	635143	Parameter	RLang * lang	18:23:381:391	634774	0	True				
ANR	635144	ParameterType	RLang *		634774	0					
ANR	635145	Identifier	lang		634774	1					
ANR	635146	Parameter	const char * file	18:36:394:409	634774	1	True				
ANR	635147	ParameterType	const char *		634774	0					
ANR	635148	Identifier	file		634774	1					
ANR	635149	CFGEntryNode	ENTRY		634774		True				
ANR	635150	CFGExitNode	EXIT		634774		True				
ANR	635151	Symbol	lib		634774						
ANR	635152	Symbol	* cc		634774						
ANR	635153	Symbol	* lang		634774						
ANR	635154	Symbol	r_sys_getenv		634774						
ANR	635155	Symbol	libpath		634774						
ANR	635156	Symbol	fcn		634774						
ANR	635157	Symbol	strlen		634774						
ANR	635158	Symbol	r_lib_dl_open		634774						
ANR	635159	Symbol	file		634774						
ANR	635160	Symbol	r_lib_dl_sym		634774						
ANR	635161	Symbol	lang		634774						
ANR	635162	Symbol	cc		634774						
ANR	635163	Symbol	a		634774						
ANR	635164	Symbol	r_sandbox_system		634774						
ANR	635165	Symbol	ac		634774						
ANR	635166	Symbol	NULL		634774						
ANR	635167	Symbol	false		634774						
ANR	635168	Symbol	* a		634774						
ANR	635169	Symbol	p		634774						
ANR	635170	Symbol	buf		634774						
ANR	635171	Symbol	strstr		634774						
ANR	635172	Symbol	r_str_lchr		634774						
ANR	635173	Symbol	av		634774						
ANR	635174	Symbol	libname		634774						
ANR	635175	Symbol	name		634774						
ANR	635176	Symbol	* p		634774						
ANR	635177	Symbol	strdup		634774						
ANR	635178	Symbol	r_file_exists		634774						
ANR	635179	Symbol	lang -> user		634774						
ANR	635180	Function	lang_c_init	83:0:1761:1856							
ANR	635181	FunctionDef	lang_c_init (void * user)		635180	0					
ANR	635182	CompoundStatement		83:35:1796:1856	635180	0					
ANR	635183	ReturnStatement	return true ;	85:1:1843:1854	635180	0	True				
ANR	635184	Identifier	true		635180	0					
ANR	635185	ReturnType	static int		635180	1					
ANR	635186	Identifier	lang_c_init		635180	2					
ANR	635187	ParameterList	void * user		635180	3					
ANR	635188	Parameter	void * user	83:23:1784:1793	635180	0	True				
ANR	635189	ParameterType	void *		635180	0					
ANR	635190	Identifier	user		635180	1					
ANR	635191	CFGEntryNode	ENTRY		635180		True				
ANR	635192	CFGExitNode	EXIT		635180		True				
ANR	635193	Symbol	true		635180						
ANR	635194	Symbol	user		635180						
ANR	635195	Function	lang_c_run	88:0:1859:2246							
ANR	635196	FunctionDef	"lang_c_run (RLang * lang , const char * code , int len)"		635195	0					
ANR	635197	CompoundStatement		88:62:1921:2246	635195	0					
ANR	635198	IdentifierDeclStatement	"FILE * fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" ) ;"	89:1:1924:1966	635195	0	True				
ANR	635199	IdentifierDecl	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		635195	0					
ANR	635200	IdentifierDeclType	FILE *		635195	0					
ANR	635201	Identifier	fd		635195	1					
ANR	635202	AssignmentExpression	"* fd = r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		635195	2		=			
ANR	635203	Identifier	fd		635195	0					
ANR	635204	CallExpression	"r_sandbox_fopen ( "".tmp.c"" , ""w"" )"		635195	1					
ANR	635205	Callee	r_sandbox_fopen		635195	0					
ANR	635206	Identifier	r_sandbox_fopen		635195	0					
ANR	635207	ArgumentList	""".tmp.c"""		635195	1					
ANR	635208	Argument	""".tmp.c"""		635195	0					
ANR	635209	PrimaryExpression	""".tmp.c"""		635195	0					
ANR	635210	Argument	"""w"""		635195	1					
ANR	635211	PrimaryExpression	"""w"""		635195	0					
ANR	635212	IfStatement	if ( fd )		635195	1					
ANR	635213	Condition	fd	90:5:1973:1974	635195	0	True				
ANR	635214	Identifier	fd		635195	0					
ANR	635215	CompoundStatement		3:9:55:55	635195	1					
ANR	635216	ExpressionStatement	"fputs ( ""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"" , fd )"	91:2:1981:2074	635195	0	True				
ANR	635217	CallExpression	"fputs ( ""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"" , fd )"		635195	0					
ANR	635218	Callee	fputs		635195	0					
ANR	635219	Identifier	fputs		635195	0					
ANR	635220	ArgumentList	"""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"""		635195	1					
ANR	635221	Argument	"""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"""		635195	0					
ANR	635222	PrimaryExpression	"""#include <r_core.h>\\n\\nvoid entry(RCore *core, int argc, const char **argv) {\\n"""		635195	0					
ANR	635223	Argument	fd		635195	1					
ANR	635224	Identifier	fd		635195	0					
ANR	635225	ExpressionStatement	"fputs ( code , fd )"	92:2:2078:2094	635195	1	True				
ANR	635226	CallExpression	"fputs ( code , fd )"		635195	0					
ANR	635227	Callee	fputs		635195	0					
ANR	635228	Identifier	fputs		635195	0					
ANR	635229	ArgumentList	code		635195	1					
ANR	635230	Argument	code		635195	0					
ANR	635231	Identifier	code		635195	0					
ANR	635232	Argument	fd		635195	1					
ANR	635233	Identifier	fd		635195	0					
ANR	635234	ExpressionStatement	"fputs ( ""\\n}\\n"" , fd )"	93:2:2098:2117	635195	2	True				
ANR	635235	CallExpression	"fputs ( ""\\n}\\n"" , fd )"		635195	0					
ANR	635236	Callee	fputs		635195	0					
ANR	635237	Identifier	fputs		635195	0					
ANR	635238	ArgumentList	"""\\n}\\n"""		635195	1					
ANR	635239	Argument	"""\\n}\\n"""		635195	0					
ANR	635240	PrimaryExpression	"""\\n}\\n"""		635195	0					
ANR	635241	Argument	fd		635195	1					
ANR	635242	Identifier	fd		635195	0					
ANR	635243	ExpressionStatement	fclose ( fd )	94:2:2121:2132	635195	3	True				
ANR	635244	CallExpression	fclose ( fd )		635195	0					
ANR	635245	Callee	fclose		635195	0					
ANR	635246	Identifier	fclose		635195	0					
ANR	635247	ArgumentList	fd		635195	1					
ANR	635248	Argument	fd		635195	0					
ANR	635249	Identifier	fd		635195	0					
ANR	635250	ExpressionStatement	"lang_c_file ( lang , "".tmp.c"" )"	95:2:2136:2164	635195	4	True				
ANR	635251	CallExpression	"lang_c_file ( lang , "".tmp.c"" )"		635195	0					
ANR	635252	Callee	lang_c_file		635195	0					
ANR	635253	Identifier	lang_c_file		635195	0					
ANR	635254	ArgumentList	lang		635195	1					
ANR	635255	Argument	lang		635195	0					
ANR	635256	Identifier	lang		635195	0					
ANR	635257	Argument	""".tmp.c"""		635195	1					
ANR	635258	PrimaryExpression	""".tmp.c"""		635195	0					
ANR	635259	ExpressionStatement	"r_file_rm ( "".tmp.c"" )"	96:2:2168:2188	635195	5	True				
ANR	635260	CallExpression	"r_file_rm ( "".tmp.c"" )"		635195	0					
ANR	635261	Callee	r_file_rm		635195	0					
ANR	635262	Identifier	r_file_rm		635195	0					
ANR	635263	ArgumentList	""".tmp.c"""		635195	1					
ANR	635264	Argument	""".tmp.c"""		635195	0					
ANR	635265	PrimaryExpression	""".tmp.c"""		635195	0					
ANR	635266	ElseStatement	else		635195	0					
ANR	635267	ExpressionStatement	"eprintf ( ""Cannot open .tmp.c\\n"" )"	97:8:2198:2230	635195	0	True				
ANR	635268	CallExpression	"eprintf ( ""Cannot open .tmp.c\\n"" )"		635195	0					
ANR	635269	Callee	eprintf		635195	0					
ANR	635270	Identifier	eprintf		635195	0					
ANR	635271	ArgumentList	"""Cannot open .tmp.c\\n"""		635195	1					
ANR	635272	Argument	"""Cannot open .tmp.c\\n"""		635195	0					
ANR	635273	PrimaryExpression	"""Cannot open .tmp.c\\n"""		635195	0					
ANR	635274	ReturnStatement	return true ;	98:1:2233:2244	635195	2	True				
ANR	635275	Identifier	true		635195	0					
ANR	635276	ReturnType	static int		635195	1					
ANR	635277	Identifier	lang_c_run		635195	2					
ANR	635278	ParameterList	"RLang * lang , const char * code , int len"		635195	3					
ANR	635279	Parameter	RLang * lang	88:22:1881:1891	635195	0	True				
ANR	635280	ParameterType	RLang *		635195	0					
ANR	635281	Identifier	lang		635195	1					
ANR	635282	Parameter	const char * code	88:35:1894:1909	635195	1	True				
ANR	635283	ParameterType	const char *		635195	0					
ANR	635284	Identifier	code		635195	1					
ANR	635285	Parameter	int len	88:53:1912:1918	635195	2	True				
ANR	635286	ParameterType	int		635195	0					
ANR	635287	Identifier	len		635195	1					
ANR	635288	CFGEntryNode	ENTRY		635195		True				
ANR	635289	CFGExitNode	EXIT		635195		True				
ANR	635290	Symbol	code		635195						
ANR	635291	Symbol	len		635195						
ANR	635292	Symbol	true		635195						
ANR	635293	Symbol	r_sandbox_fopen		635195						
ANR	635294	Symbol	lang		635195						
ANR	635295	Symbol	fd		635195						
ANR	635296	DeclStmt									
ANR	635297	Decl							RLangPlugin	RLangPlugin	r_lang_plugin_c
