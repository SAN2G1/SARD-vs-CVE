command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	686741	File	data/converged/CVE-2019-16718~_radare2/canvas_line.c								
ANR	686742	ClassDef	<unnamed>	16:0:391:505							
ANR	686743	Function	utf8_line_vert	28:0:509:828							
ANR	686744	FunctionDef	utf8_line_vert (int dot_style)		686743	0					
ANR	686745	CompoundStatement		28:44:553:828	686743	0					
ANR	686746	IfStatement	if ( r_cons_singleton ( ) -> dotted_lines )		686743	0					
ANR	686747	Condition	r_cons_singleton ( ) -> dotted_lines	29:5:560:592	686743	0	True				
ANR	686748	PtrMemberAccess	r_cons_singleton ( ) -> dotted_lines		686743	0					
ANR	686749	CallExpression	r_cons_singleton ( )		686743	0					
ANR	686750	Callee	r_cons_singleton		686743	0					
ANR	686751	Identifier	r_cons_singleton		686743	0					
ANR	686752	ArgumentList			686743	1					
ANR	686753	Identifier	dotted_lines		686743	1					
ANR	686754	CompoundStatement		2:40:41:41	686743	1					
ANR	686755	SwitchStatement	switch ( dot_style )		686743	0					
ANR	686756	Condition	dot_style	30:10:607:615	686743	0	True				
ANR	686757	Identifier	dot_style		686743	0					
ANR	686758	CompoundStatement		3:21:64:64	686743	1					
ANR	686759	Label	case DOT_STYLE_NORMAL :	31:2:622:643	686743	0	True				
ANR	686760	Identifier	DOT_STYLE_NORMAL		686743	0					
ANR	686761	ReturnStatement	return RUNECODESTR_LINE_VERT ;	31:30:650:678	686743	1	True				
ANR	686762	Identifier	RUNECODESTR_LINE_VERT		686743	0					
ANR	686763	Label	case DOT_STYLE_CONDITIONAL :	32:2:682:708	686743	2	True				
ANR	686764	Identifier	DOT_STYLE_CONDITIONAL		686743	0					
ANR	686765	ReturnStatement	return DOTTED_LINE_VERT ;	32:30:710:733	686743	3	True				
ANR	686766	Identifier	DOTTED_LINE_VERT		686743	0					
ANR	686767	Label	case DOT_STYLE_BACKEDGE :	33:2:737:760	686743	4	True				
ANR	686768	Identifier	DOT_STYLE_BACKEDGE		686743	0					
ANR	686769	ReturnStatement	return DASHED_LINE_VERT ;	33:30:765:788	686743	5	True				
ANR	686770	Identifier	DASHED_LINE_VERT		686743	0					
ANR	686771	ReturnStatement	return RUNECODESTR_LINE_VERT ;	36:1:798:826	686743	1	True				
ANR	686772	Identifier	RUNECODESTR_LINE_VERT		686743	0					
ANR	686773	ReturnType	static char *		686743	1					
ANR	686774	Identifier	utf8_line_vert		686743	2					
ANR	686775	ParameterList	int dot_style		686743	3					
ANR	686776	Parameter	int dot_style	28:29:538:550	686743	0	True				
ANR	686777	ParameterType	int		686743	0					
ANR	686778	Identifier	dot_style		686743	1					
ANR	686779	CFGEntryNode	ENTRY		686743		True				
ANR	686780	CFGExitNode	EXIT		686743		True				
ANR	686781	Symbol	dot_style		686743						
ANR	686782	Symbol	RUNECODESTR_LINE_VERT		686743						
ANR	686783	Symbol	r_cons_singleton		686743						
ANR	686784	Symbol	DASHED_LINE_VERT		686743						
ANR	686785	Symbol	r_cons_singleton ( ) -> dotted_lines		686743						
ANR	686786	Symbol	* r_cons_singleton		686743						
ANR	686787	Symbol	DOTTED_LINE_VERT		686743						
ANR	686788	Function	utf8_line_horiz	39:0:831:1155							
ANR	686789	FunctionDef	utf8_line_horiz (int dot_style)		686788	0					
ANR	686790	CompoundStatement		39:45:876:1155	686788	0					
ANR	686791	IfStatement	if ( r_cons_singleton ( ) -> dotted_lines )		686788	0					
ANR	686792	Condition	r_cons_singleton ( ) -> dotted_lines	40:5:883:915	686788	0	True				
ANR	686793	PtrMemberAccess	r_cons_singleton ( ) -> dotted_lines		686788	0					
ANR	686794	CallExpression	r_cons_singleton ( )		686788	0					
ANR	686795	Callee	r_cons_singleton		686788	0					
ANR	686796	Identifier	r_cons_singleton		686788	0					
ANR	686797	ArgumentList			686788	1					
ANR	686798	Identifier	dotted_lines		686788	1					
ANR	686799	CompoundStatement		2:40:41:41	686788	1					
ANR	686800	SwitchStatement	switch ( dot_style )		686788	0					
ANR	686801	Condition	dot_style	41:10:930:938	686788	0	True				
ANR	686802	Identifier	dot_style		686788	0					
ANR	686803	CompoundStatement		3:21:64:64	686788	1					
ANR	686804	Label	case DOT_STYLE_NORMAL :	42:2:945:966	686788	0	True				
ANR	686805	Identifier	DOT_STYLE_NORMAL		686788	0					
ANR	686806	ReturnStatement	return RUNECODESTR_LINE_HORIZ ;	42:30:973:1002	686788	1	True				
ANR	686807	Identifier	RUNECODESTR_LINE_HORIZ		686788	0					
ANR	686808	Label	case DOT_STYLE_CONDITIONAL :	43:2:1006:1032	686788	2	True				
ANR	686809	Identifier	DOT_STYLE_CONDITIONAL		686788	0					
ANR	686810	ReturnStatement	return DOTTED_LINE_HORIZ ;	43:30:1034:1058	686788	3	True				
ANR	686811	Identifier	DOTTED_LINE_HORIZ		686788	0					
ANR	686812	Label	case DOT_STYLE_BACKEDGE :	44:2:1062:1085	686788	4	True				
ANR	686813	Identifier	DOT_STYLE_BACKEDGE		686788	0					
ANR	686814	ReturnStatement	return DASHED_LINE_HORIZ ;	44:30:1090:1114	686788	5	True				
ANR	686815	Identifier	DASHED_LINE_HORIZ		686788	0					
ANR	686816	ReturnStatement	return RUNECODESTR_LINE_HORIZ ;	47:1:1124:1153	686788	1	True				
ANR	686817	Identifier	RUNECODESTR_LINE_HORIZ		686788	0					
ANR	686818	ReturnType	static char *		686788	1					
ANR	686819	Identifier	utf8_line_horiz		686788	2					
ANR	686820	ParameterList	int dot_style		686788	3					
ANR	686821	Parameter	int dot_style	39:30:861:873	686788	0	True				
ANR	686822	ParameterType	int		686788	0					
ANR	686823	Identifier	dot_style		686788	1					
ANR	686824	CFGEntryNode	ENTRY		686788		True				
ANR	686825	CFGExitNode	EXIT		686788		True				
ANR	686826	Symbol	RUNECODESTR_LINE_HORIZ		686788						
ANR	686827	Symbol	DASHED_LINE_HORIZ		686788						
ANR	686828	Symbol	dot_style		686788						
ANR	686829	Symbol	r_cons_singleton		686788						
ANR	686830	Symbol	r_cons_singleton ( ) -> dotted_lines		686788						
ANR	686831	Symbol	* r_cons_singleton		686788						
ANR	686832	Symbol	DOTTED_LINE_HORIZ		686788						
ANR	686833	Function	apply_line_style	50:0:1158:2208							
ANR	686834	FunctionDef	"apply_line_style (RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style , int isvert)"		686833	0					
ANR	686835	CompoundStatement		51:39:1272:2208	686833	0					
ANR	686836	IdentifierDeclStatement	RCons * cons = r_cons_singleton ( ) ;	52:1:1275:1308	686833	0	True				
ANR	686837	IdentifierDecl	* cons = r_cons_singleton ( )		686833	0					
ANR	686838	IdentifierDeclType	RCons *		686833	0					
ANR	686839	Identifier	cons		686833	1					
ANR	686840	AssignmentExpression	* cons = r_cons_singleton ( )		686833	2		=			
ANR	686841	Identifier	cons		686833	0					
ANR	686842	CallExpression	r_cons_singleton ( )		686833	1					
ANR	686843	Callee	r_cons_singleton		686833	0					
ANR	686844	Identifier	r_cons_singleton		686833	0					
ANR	686845	ArgumentList			686833	1					
ANR	686846	SwitchStatement	switch ( style -> color )		686833	1					
ANR	686847	Condition	style -> color	53:9:1319:1330	686833	0	True				
ANR	686848	PtrMemberAccess	style -> color		686833	0					
ANR	686849	Identifier	style		686833	0					
ANR	686850	Identifier	color		686833	1					
ANR	686851	CompoundStatement		3:23:60:60	686833	1					
ANR	686852	Label	case LINE_UNCJMP :	54:1:1336:1352	686833	0	True				
ANR	686853	Identifier	LINE_UNCJMP		686833	0					
ANR	686854	ExpressionStatement	c -> attr = cons -> context -> pal . graph_trufae	55:2:1356:1397	686833	1	True				
ANR	686855	AssignmentExpression	c -> attr = cons -> context -> pal . graph_trufae		686833	0		=			
ANR	686856	PtrMemberAccess	c -> attr		686833	0					
ANR	686857	Identifier	c		686833	0					
ANR	686858	Identifier	attr		686833	1					
ANR	686859	MemberAccess	cons -> context -> pal . graph_trufae		686833	1					
ANR	686860	PtrMemberAccess	cons -> context -> pal		686833	0					
ANR	686861	PtrMemberAccess	cons -> context		686833	0					
ANR	686862	Identifier	cons		686833	0					
ANR	686863	Identifier	context		686833	1					
ANR	686864	Identifier	pal		686833	1					
ANR	686865	Identifier	graph_trufae		686833	1					
ANR	686866	BreakStatement	break ;	56:2:1401:1406	686833	2	True				
ANR	686867	Label	case LINE_TRUE :	57:1:1409:1423	686833	3	True				
ANR	686868	Identifier	LINE_TRUE		686833	0					
ANR	686869	ExpressionStatement	c -> attr = cons -> context -> pal . graph_true	58:2:1427:1466	686833	4	True				
ANR	686870	AssignmentExpression	c -> attr = cons -> context -> pal . graph_true		686833	0		=			
ANR	686871	PtrMemberAccess	c -> attr		686833	0					
ANR	686872	Identifier	c		686833	0					
ANR	686873	Identifier	attr		686833	1					
ANR	686874	MemberAccess	cons -> context -> pal . graph_true		686833	1					
ANR	686875	PtrMemberAccess	cons -> context -> pal		686833	0					
ANR	686876	PtrMemberAccess	cons -> context		686833	0					
ANR	686877	Identifier	cons		686833	0					
ANR	686878	Identifier	context		686833	1					
ANR	686879	Identifier	pal		686833	1					
ANR	686880	Identifier	graph_true		686833	1					
ANR	686881	BreakStatement	break ;	59:2:1470:1475	686833	5	True				
ANR	686882	Label	case LINE_FALSE :	60:1:1478:1493	686833	6	True				
ANR	686883	Identifier	LINE_FALSE		686833	0					
ANR	686884	ExpressionStatement	c -> attr = cons -> context -> pal . graph_false	61:2:1497:1537	686833	7	True				
ANR	686885	AssignmentExpression	c -> attr = cons -> context -> pal . graph_false		686833	0		=			
ANR	686886	PtrMemberAccess	c -> attr		686833	0					
ANR	686887	Identifier	c		686833	0					
ANR	686888	Identifier	attr		686833	1					
ANR	686889	MemberAccess	cons -> context -> pal . graph_false		686833	1					
ANR	686890	PtrMemberAccess	cons -> context -> pal		686833	0					
ANR	686891	PtrMemberAccess	cons -> context		686833	0					
ANR	686892	Identifier	cons		686833	0					
ANR	686893	Identifier	context		686833	1					
ANR	686894	Identifier	pal		686833	1					
ANR	686895	Identifier	graph_false		686833	1					
ANR	686896	BreakStatement	break ;	62:2:1541:1546	686833	8	True				
ANR	686897	Label	case LINE_NONE :	63:1:1549:1563	686833	9	True				
ANR	686898	Identifier	LINE_NONE		686833	0					
ANR	686899	Label	default :	64:1:1566:1573	686833	10	True				
ANR	686900	Identifier	default		686833	0					
ANR	686901	ExpressionStatement	c -> attr = cons -> context -> pal . graph_trufae	65:2:1577:1618	686833	11	True				
ANR	686902	AssignmentExpression	c -> attr = cons -> context -> pal . graph_trufae		686833	0		=			
ANR	686903	PtrMemberAccess	c -> attr		686833	0					
ANR	686904	Identifier	c		686833	0					
ANR	686905	Identifier	attr		686833	1					
ANR	686906	MemberAccess	cons -> context -> pal . graph_trufae		686833	1					
ANR	686907	PtrMemberAccess	cons -> context -> pal		686833	0					
ANR	686908	PtrMemberAccess	cons -> context		686833	0					
ANR	686909	Identifier	cons		686833	0					
ANR	686910	Identifier	context		686833	1					
ANR	686911	Identifier	pal		686833	1					
ANR	686912	Identifier	graph_trufae		686833	1					
ANR	686913	BreakStatement	break ;	66:2:1622:1627	686833	12	True				
ANR	686914	IfStatement	if ( ! c -> color )		686833	2					
ANR	686915	Condition	! c -> color	68:5:1637:1645	686833	0	True				
ANR	686916	UnaryOperationExpression	! c -> color		686833	0					
ANR	686917	UnaryOperator	!		686833	0					
ANR	686918	PtrMemberAccess	c -> color		686833	1					
ANR	686919	Identifier	c		686833	0					
ANR	686920	Identifier	color		686833	1					
ANR	686921	CompoundStatement		18:16:375:375	686833	1					
ANR	686922	ExpressionStatement	c -> attr = Color_RESET	69:2:1652:1673	686833	0	True				
ANR	686923	AssignmentExpression	c -> attr = Color_RESET		686833	0		=			
ANR	686924	PtrMemberAccess	c -> attr		686833	0					
ANR	686925	Identifier	c		686833	0					
ANR	686926	Identifier	attr		686833	1					
ANR	686927	Identifier	Color_RESET		686833	1					
ANR	686928	SwitchStatement	switch ( style -> symbol )		686833	3					
ANR	686929	Condition	style -> symbol	71:9:1687:1699	686833	0	True				
ANR	686930	PtrMemberAccess	style -> symbol		686833	0					
ANR	686931	Identifier	style		686833	0					
ANR	686932	Identifier	symbol		686833	1					
ANR	686933	CompoundStatement		21:24:429:429	686833	1					
ANR	686934	Label	case LINE_UNCJMP :	72:1:1705:1721	686833	0	True				
ANR	686935	Identifier	LINE_UNCJMP		686833	0					
ANR	686936	IfStatement	"if ( G ( x , y ) )"		686833	1					
ANR	686937	Condition	"G ( x , y )"	73:6:1729:1736	686833	0	True				
ANR	686938	CallExpression	"G ( x , y )"		686833	0					
ANR	686939	Callee	G		686833	0					
ANR	686940	Identifier	G		686833	0					
ANR	686941	ArgumentList	x		686833	1					
ANR	686942	Argument	x		686833	0					
ANR	686943	Identifier	x		686833	0					
ANR	686944	Argument	y		686833	1					
ANR	686945	Identifier	y		686833	0					
ANR	686946	CompoundStatement		23:16:466:466	686833	1					
ANR	686947	IfStatement	if ( isvert )		686833	0					
ANR	686948	Condition	isvert	74:7:1748:1753	686833	0	True				
ANR	686949	Identifier	isvert		686833	0					
ANR	686950	CompoundStatement		24:15:483:483	686833	1					
ANR	686951	ExpressionStatement	"W ( ""v"" )"	75:4:1762:1769	686833	0	True				
ANR	686952	CallExpression	"W ( ""v"" )"		686833	0					
ANR	686953	Callee	W		686833	0					
ANR	686954	Identifier	W		686833	0					
ANR	686955	ArgumentList	"""v"""		686833	1					
ANR	686956	Argument	"""v"""		686833	0					
ANR	686957	PrimaryExpression	"""v"""		686833	0					
ANR	686958	ElseStatement	else		686833	0					
ANR	686959	CompoundStatement		26:10:508:508	686833	0					
ANR	686960	ExpressionStatement	"W ( "">"" )"	77:4:1787:1794	686833	0	True				
ANR	686961	CallExpression	"W ( "">"" )"		686833	0					
ANR	686962	Callee	W		686833	0					
ANR	686963	Identifier	W		686833	0					
ANR	686964	ArgumentList	""">"""		686833	1					
ANR	686965	Argument	""">"""		686833	0					
ANR	686966	PrimaryExpression	""">"""		686833	0					
ANR	686967	BreakStatement	break ;	80:2:1807:1812	686833	2	True				
ANR	686968	Label	case LINE_TRUE :	81:1:1815:1829	686833	3	True				
ANR	686969	Identifier	LINE_TRUE		686833	0					
ANR	686970	IfStatement	"if ( G ( x , y ) )"		686833	4					
ANR	686971	Condition	"G ( x , y )"	82:6:1837:1844	686833	0	True				
ANR	686972	CallExpression	"G ( x , y )"		686833	0					
ANR	686973	Callee	G		686833	0					
ANR	686974	Identifier	G		686833	0					
ANR	686975	ArgumentList	x		686833	1					
ANR	686976	Argument	x		686833	0					
ANR	686977	Identifier	x		686833	0					
ANR	686978	Argument	y		686833	1					
ANR	686979	Identifier	y		686833	0					
ANR	686980	CompoundStatement		32:16:574:574	686833	1					
ANR	686981	ExpressionStatement	"W ( ""t"" )"	83:3:1852:1859	686833	0	True				
ANR	686982	CallExpression	"W ( ""t"" )"		686833	0					
ANR	686983	Callee	W		686833	0					
ANR	686984	Identifier	W		686833	0					
ANR	686985	ArgumentList	"""t"""		686833	1					
ANR	686986	Argument	"""t"""		686833	0					
ANR	686987	PrimaryExpression	"""t"""		686833	0					
ANR	686988	BreakStatement	break ;	85:2:1875:1880	686833	5	True				
ANR	686989	Label	case LINE_FALSE :	86:1:1883:1898	686833	6	True				
ANR	686990	Identifier	LINE_FALSE		686833	0					
ANR	686991	IfStatement	"if ( G ( x , y ) )"		686833	7					
ANR	686992	Condition	"G ( x , y )"	87:6:1906:1913	686833	0	True				
ANR	686993	CallExpression	"G ( x , y )"		686833	0					
ANR	686994	Callee	G		686833	0					
ANR	686995	Identifier	G		686833	0					
ANR	686996	ArgumentList	x		686833	1					
ANR	686997	Argument	x		686833	0					
ANR	686998	Identifier	x		686833	0					
ANR	686999	Argument	y		686833	1					
ANR	687000	Identifier	y		686833	0					
ANR	687001	CompoundStatement		37:16:643:643	686833	1					
ANR	687002	ExpressionStatement	"W ( ""f"" )"	88:3:1921:1928	686833	0	True				
ANR	687003	CallExpression	"W ( ""f"" )"		686833	0					
ANR	687004	Callee	W		686833	0					
ANR	687005	Identifier	W		686833	0					
ANR	687006	ArgumentList	"""f"""		686833	1					
ANR	687007	Argument	"""f"""		686833	0					
ANR	687008	PrimaryExpression	"""f"""		686833	0					
ANR	687009	BreakStatement	break ;	90:2:1936:1941	686833	8	True				
ANR	687010	Label	case LINE_NOSYM_VERT :	91:1:1944:1964	686833	9	True				
ANR	687011	Identifier	LINE_NOSYM_VERT		686833	0					
ANR	687012	IfStatement	"if ( G ( x , y ) )"		686833	10					
ANR	687013	Condition	"G ( x , y )"	92:6:1972:1979	686833	0	True				
ANR	687014	CallExpression	"G ( x , y )"		686833	0					
ANR	687015	Callee	G		686833	0					
ANR	687016	Identifier	G		686833	0					
ANR	687017	ArgumentList	x		686833	1					
ANR	687018	Argument	x		686833	0					
ANR	687019	Identifier	x		686833	0					
ANR	687020	Argument	y		686833	1					
ANR	687021	Identifier	y		686833	0					
ANR	687022	CompoundStatement		42:16:709:709	686833	1					
ANR	687023	ExpressionStatement	"W ( useUtf8 ? utf8_line_vert ( style -> dot_style ) : ""|"" )"	93:3:1987:2040	686833	0	True				
ANR	687024	CallExpression	"W ( useUtf8 ? utf8_line_vert ( style -> dot_style ) : ""|"" )"		686833	0					
ANR	687025	Callee	W		686833	0					
ANR	687026	Identifier	W		686833	0					
ANR	687027	ArgumentList	"useUtf8 ? utf8_line_vert ( style -> dot_style ) : ""|"""		686833	1					
ANR	687028	Argument	"useUtf8 ? utf8_line_vert ( style -> dot_style ) : ""|"""		686833	0					
ANR	687029	ConditionalExpression	"useUtf8 ? utf8_line_vert ( style -> dot_style ) : ""|"""		686833	0					
ANR	687030	Condition	useUtf8		686833	0					
ANR	687031	Identifier	useUtf8		686833	0					
ANR	687032	CallExpression	utf8_line_vert ( style -> dot_style )		686833	1					
ANR	687033	Callee	utf8_line_vert		686833	0					
ANR	687034	Identifier	utf8_line_vert		686833	0					
ANR	687035	ArgumentList	style -> dot_style		686833	1					
ANR	687036	Argument	style -> dot_style		686833	0					
ANR	687037	PtrMemberAccess	style -> dot_style		686833	0					
ANR	687038	Identifier	style		686833	0					
ANR	687039	Identifier	dot_style		686833	1					
ANR	687040	PrimaryExpression	"""|"""		686833	2					
ANR	687041	BreakStatement	break ;	95:2:2048:2053	686833	11	True				
ANR	687042	Label	case LINE_NOSYM_HORIZ :	96:1:2056:2077	686833	12	True				
ANR	687043	Identifier	LINE_NOSYM_HORIZ		686833	0					
ANR	687044	IfStatement	"if ( G ( x , y ) )"		686833	13					
ANR	687045	Condition	"G ( x , y )"	97:6:2085:2092	686833	0	True				
ANR	687046	CallExpression	"G ( x , y )"		686833	0					
ANR	687047	Callee	G		686833	0					
ANR	687048	Identifier	G		686833	0					
ANR	687049	ArgumentList	x		686833	1					
ANR	687050	Argument	x		686833	0					
ANR	687051	Identifier	x		686833	0					
ANR	687052	Argument	y		686833	1					
ANR	687053	Identifier	y		686833	0					
ANR	687054	CompoundStatement		47:16:822:822	686833	1					
ANR	687055	ExpressionStatement	"W ( useUtf8 ? utf8_line_horiz ( style -> dot_style ) : ""-"" )"	98:3:2100:2154	686833	0	True				
ANR	687056	CallExpression	"W ( useUtf8 ? utf8_line_horiz ( style -> dot_style ) : ""-"" )"		686833	0					
ANR	687057	Callee	W		686833	0					
ANR	687058	Identifier	W		686833	0					
ANR	687059	ArgumentList	"useUtf8 ? utf8_line_horiz ( style -> dot_style ) : ""-"""		686833	1					
ANR	687060	Argument	"useUtf8 ? utf8_line_horiz ( style -> dot_style ) : ""-"""		686833	0					
ANR	687061	ConditionalExpression	"useUtf8 ? utf8_line_horiz ( style -> dot_style ) : ""-"""		686833	0					
ANR	687062	Condition	useUtf8		686833	0					
ANR	687063	Identifier	useUtf8		686833	0					
ANR	687064	CallExpression	utf8_line_horiz ( style -> dot_style )		686833	1					
ANR	687065	Callee	utf8_line_horiz		686833	0					
ANR	687066	Identifier	utf8_line_horiz		686833	0					
ANR	687067	ArgumentList	style -> dot_style		686833	1					
ANR	687068	Argument	style -> dot_style		686833	0					
ANR	687069	PtrMemberAccess	style -> dot_style		686833	0					
ANR	687070	Identifier	style		686833	0					
ANR	687071	Identifier	dot_style		686833	1					
ANR	687072	PrimaryExpression	"""-"""		686833	2					
ANR	687073	BreakStatement	break ;	100:2:2162:2167	686833	14	True				
ANR	687074	Label	case LINE_NONE :	101:1:2170:2184	686833	15	True				
ANR	687075	Identifier	LINE_NONE		686833	0					
ANR	687076	Label	default :	102:1:2187:2194	686833	16	True				
ANR	687077	Identifier	default		686833	0					
ANR	687078	BreakStatement	break ;	103:2:2198:2203	686833	17	True				
ANR	687079	ReturnType	static void		686833	1					
ANR	687080	Identifier	apply_line_style		686833	2					
ANR	687081	ParameterList	"RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style , int isvert"		686833	3					
ANR	687082	Parameter	RConsCanvas * c	50:29:1187:1200	686833	0	True				
ANR	687083	ParameterType	RConsCanvas *		686833	0					
ANR	687084	Identifier	c		686833	1					
ANR	687085	Parameter	int x	50:45:1203:1207	686833	1	True				
ANR	687086	ParameterType	int		686833	0					
ANR	687087	Identifier	x		686833	1					
ANR	687088	Parameter	int y	50:52:1210:1214	686833	2	True				
ANR	687089	ParameterType	int		686833	0					
ANR	687090	Identifier	y		686833	1					
ANR	687091	Parameter	int x2	50:59:1217:1222	686833	3	True				
ANR	687092	ParameterType	int		686833	0					
ANR	687093	Identifier	x2		686833	1					
ANR	687094	Parameter	int y2	50:67:1225:1230	686833	4	True				
ANR	687095	ParameterType	int		686833	0					
ANR	687096	Identifier	y2		686833	1					
ANR	687097	Parameter	RCanvasLineStyle * style	51:2:1235:1257	686833	5	True				
ANR	687098	ParameterType	RCanvasLineStyle *		686833	0					
ANR	687099	Identifier	style		686833	1					
ANR	687100	Parameter	int isvert	51:27:1260:1269	686833	6	True				
ANR	687101	ParameterType	int		686833	0					
ANR	687102	Identifier	isvert		686833	1					
ANR	687103	CFGEntryNode	ENTRY		686833		True				
ANR	687104	CFGExitNode	EXIT		686833		True				
ANR	687105	Symbol	cons -> context		686833						
ANR	687106	Symbol	G		686833						
ANR	687107	Symbol	* * cons		686833						
ANR	687108	Symbol	Color_RESET		686833						
ANR	687109	Symbol	* style		686833						
ANR	687110	Symbol	c -> attr		686833						
ANR	687111	Symbol	style -> dot_style		686833						
ANR	687112	Symbol	cons -> context -> pal . graph_true		686833						
ANR	687113	Symbol	style -> color		686833						
ANR	687114	Symbol	y2		686833						
ANR	687115	Symbol	r_cons_singleton		686833						
ANR	687116	Symbol	utf8_line_horiz		686833						
ANR	687117	Symbol	cons		686833						
ANR	687118	Symbol	c -> color		686833						
ANR	687119	Symbol	c		686833						
ANR	687120	Symbol	isvert		686833						
ANR	687121	Symbol	* c		686833						
ANR	687122	Symbol	style -> symbol		686833						
ANR	687123	Symbol	utf8_line_vert		686833						
ANR	687124	Symbol	useUtf8		686833						
ANR	687125	Symbol	x		686833						
ANR	687126	Symbol	y		686833						
ANR	687127	Symbol	x2		686833						
ANR	687128	Symbol	style		686833						
ANR	687129	Symbol	cons -> context -> pal . graph_trufae		686833						
ANR	687130	Symbol	* cons		686833						
ANR	687131	Symbol	cons -> context -> pal . graph_false		686833						
ANR	687132	Symbol	* cons -> context		686833						
ANR	687133	Symbol	cons -> context -> pal		686833						
ANR	687134	Function	draw_horizontal_line	107:0:2211:5261							
ANR	687135	FunctionDef	"draw_horizontal_line (RConsCanvas * c , int x , int y , int width , int style , int dot_style)"		687134	0					
ANR	687136	CompoundStatement		107:101:2312:5261	687134	0					
ANR	687137	IdentifierDeclStatement	"const char * l_corner = ""?"" , * r_corner = ""?"" ;"	108:1:2315:2358	687134	0	True				
ANR	687138	IdentifierDecl	"* l_corner = ""?"""		687134	0					
ANR	687139	IdentifierDeclType	const char *		687134	0					
ANR	687140	Identifier	l_corner		687134	1					
ANR	687141	AssignmentExpression	"* l_corner = ""?"""		687134	2		=			
ANR	687142	Identifier	l_corner		687134	0					
ANR	687143	PrimaryExpression	"""?"""		687134	1					
ANR	687144	IdentifierDecl	"* r_corner = ""?"""		687134	1					
ANR	687145	IdentifierDeclType	const char *		687134	0					
ANR	687146	Identifier	r_corner		687134	1					
ANR	687147	AssignmentExpression	"* r_corner = ""?"""		687134	2		=			
ANR	687148	Identifier	r_corner		687134	0					
ANR	687149	PrimaryExpression	"""?"""		687134	1					
ANR	687150	IdentifierDeclStatement	int i ;	109:1:2361:2366	687134	1	True				
ANR	687151	IdentifierDecl	i		687134	0					
ANR	687152	IdentifierDeclType	int		687134	0					
ANR	687153	Identifier	i		687134	1					
ANR	687154	IfStatement	if ( width < 1 )		687134	2					
ANR	687155	Condition	width < 1	111:5:2374:2382	687134	0	True				
ANR	687156	RelationalExpression	width < 1		687134	0		<			
ANR	687157	Identifier	width		687134	0					
ANR	687158	PrimaryExpression	1		687134	1					
ANR	687159	CompoundStatement		5:16:72:72	687134	1					
ANR	687160	ReturnStatement	return ;	112:2:2389:2395	687134	0	True				
ANR	687161	IfStatement	if ( y + c -> sy < 0 )		687134	3					
ANR	687162	Condition	y + c -> sy < 0	115:5:2453:2465	687134	0	True				
ANR	687163	RelationalExpression	y + c -> sy < 0		687134	0		<			
ANR	687164	AdditiveExpression	y + c -> sy		687134	0		+			
ANR	687165	Identifier	y		687134	0					
ANR	687166	PtrMemberAccess	c -> sy		687134	1					
ANR	687167	Identifier	c		687134	0					
ANR	687168	Identifier	sy		687134	1					
ANR	687169	PrimaryExpression	0		687134	1					
ANR	687170	CompoundStatement		9:20:155:155	687134	1					
ANR	687171	ReturnStatement	return ;	116:2:2472:2478	687134	0	True				
ANR	687172	IfStatement	if ( y + c -> sy > c -> h )		687134	4					
ANR	687173	Condition	y + c -> sy > c -> h	118:5:2488:2503	687134	0	True				
ANR	687174	RelationalExpression	y + c -> sy > c -> h		687134	0		>			
ANR	687175	AdditiveExpression	y + c -> sy		687134	0		+			
ANR	687176	Identifier	y		687134	0					
ANR	687177	PtrMemberAccess	c -> sy		687134	1					
ANR	687178	Identifier	c		687134	0					
ANR	687179	Identifier	sy		687134	1					
ANR	687180	PtrMemberAccess	c -> h		687134	1					
ANR	687181	Identifier	c		687134	0					
ANR	687182	Identifier	h		687134	1					
ANR	687183	CompoundStatement		12:23:193:193	687134	1					
ANR	687184	ReturnStatement	return ;	119:2:2510:2516	687134	0	True				
ANR	687185	SwitchStatement	switch ( style )		687134	5					
ANR	687186	Condition	style	122:9:2531:2535	687134	0	True				
ANR	687187	Identifier	style		687134	0					
ANR	687188	CompoundStatement		16:16:225:225	687134	1					
ANR	687189	Label	case APEX_DOT :	123:1:2541:2554	687134	0	True				
ANR	687190	Identifier	APEX_DOT		687134	0					
ANR	687191	IfStatement	if ( useUtf8 )		687134	1					
ANR	687192	Condition	useUtf8	124:6:2562:2568	687134	0	True				
ANR	687193	Identifier	useUtf8		687134	0					
ANR	687194	CompoundStatement		18:15:258:258	687134	1					
ANR	687195	IfStatement	if ( useUtf8Curvy )		687134	0					
ANR	687196	Condition	useUtf8Curvy	125:7:2580:2591	687134	0	True				
ANR	687197	Identifier	useUtf8Curvy		687134	0					
ANR	687198	CompoundStatement		19:21:281:281	687134	1					
ANR	687199	ExpressionStatement	l_corner = RUNECODESTR_CURVE_CORNER_BL	126:4:2600:2638	687134	0	True				
ANR	687200	AssignmentExpression	l_corner = RUNECODESTR_CURVE_CORNER_BL		687134	0		=			
ANR	687201	Identifier	l_corner		687134	0					
ANR	687202	Identifier	RUNECODESTR_CURVE_CORNER_BL		687134	1					
ANR	687203	ExpressionStatement	r_corner = RUNECODESTR_CURVE_CORNER_TR	127:4:2644:2682	687134	1	True				
ANR	687204	AssignmentExpression	r_corner = RUNECODESTR_CURVE_CORNER_TR		687134	0		=			
ANR	687205	Identifier	r_corner		687134	0					
ANR	687206	Identifier	RUNECODESTR_CURVE_CORNER_TR		687134	1					
ANR	687207	ElseStatement	else		687134	0					
ANR	687208	CompoundStatement		22:10:381:381	687134	0					
ANR	687209	ExpressionStatement	l_corner = RUNECODESTR_CORNER_BL	129:4:2700:2732	687134	0	True				
ANR	687210	AssignmentExpression	l_corner = RUNECODESTR_CORNER_BL		687134	0		=			
ANR	687211	Identifier	l_corner		687134	0					
ANR	687212	Identifier	RUNECODESTR_CORNER_BL		687134	1					
ANR	687213	ExpressionStatement	r_corner = RUNECODESTR_CORNER_TR	130:4:2738:2770	687134	1	True				
ANR	687214	AssignmentExpression	r_corner = RUNECODESTR_CORNER_TR		687134	0		=			
ANR	687215	Identifier	r_corner		687134	0					
ANR	687216	Identifier	RUNECODESTR_CORNER_TR		687134	1					
ANR	687217	ElseStatement	else		687134	0					
ANR	687218	CompoundStatement		26:9:473:473	687134	0					
ANR	687219	ExpressionStatement	"l_corner = ""'"""	133:3:2791:2805	687134	0	True				
ANR	687220	AssignmentExpression	"l_corner = ""'"""		687134	0		=			
ANR	687221	Identifier	l_corner		687134	0					
ANR	687222	PrimaryExpression	"""'"""		687134	1					
ANR	687223	ExpressionStatement	"r_corner = ""."""	134:3:2810:2824	687134	1	True				
ANR	687224	AssignmentExpression	"r_corner = ""."""		687134	0		=			
ANR	687225	Identifier	r_corner		687134	0					
ANR	687226	PrimaryExpression	"""."""		687134	1					
ANR	687227	BreakStatement	break ;	136:2:2832:2837	687134	2	True				
ANR	687228	Label	case DOT_APEX :	137:1:2840:2853	687134	3	True				
ANR	687229	Identifier	DOT_APEX		687134	0					
ANR	687230	IfStatement	if ( useUtf8 )		687134	4					
ANR	687231	Condition	useUtf8	138:6:2861:2867	687134	0	True				
ANR	687232	Identifier	useUtf8		687134	0					
ANR	687233	CompoundStatement		32:15:557:557	687134	1					
ANR	687234	IfStatement	if ( useUtf8Curvy )		687134	0					
ANR	687235	Condition	useUtf8Curvy	139:7:2879:2890	687134	0	True				
ANR	687236	Identifier	useUtf8Curvy		687134	0					
ANR	687237	CompoundStatement		33:21:580:580	687134	1					
ANR	687238	ExpressionStatement	l_corner = RUNECODESTR_CURVE_CORNER_TL	140:4:2899:2937	687134	0	True				
ANR	687239	AssignmentExpression	l_corner = RUNECODESTR_CURVE_CORNER_TL		687134	0		=			
ANR	687240	Identifier	l_corner		687134	0					
ANR	687241	Identifier	RUNECODESTR_CURVE_CORNER_TL		687134	1					
ANR	687242	ExpressionStatement	r_corner = RUNECODESTR_CURVE_CORNER_BR	141:4:2943:2981	687134	1	True				
ANR	687243	AssignmentExpression	r_corner = RUNECODESTR_CURVE_CORNER_BR		687134	0		=			
ANR	687244	Identifier	r_corner		687134	0					
ANR	687245	Identifier	RUNECODESTR_CURVE_CORNER_BR		687134	1					
ANR	687246	ElseStatement	else		687134	0					
ANR	687247	CompoundStatement		36:10:680:680	687134	0					
ANR	687248	ExpressionStatement	l_corner = RUNECODESTR_CORNER_TL	143:4:2999:3031	687134	0	True				
ANR	687249	AssignmentExpression	l_corner = RUNECODESTR_CORNER_TL		687134	0		=			
ANR	687250	Identifier	l_corner		687134	0					
ANR	687251	Identifier	RUNECODESTR_CORNER_TL		687134	1					
ANR	687252	ExpressionStatement	r_corner = RUNECODESTR_CORNER_BR	144:4:3037:3069	687134	1	True				
ANR	687253	AssignmentExpression	r_corner = RUNECODESTR_CORNER_BR		687134	0		=			
ANR	687254	Identifier	r_corner		687134	0					
ANR	687255	Identifier	RUNECODESTR_CORNER_BR		687134	1					
ANR	687256	ElseStatement	else		687134	0					
ANR	687257	CompoundStatement		40:9:772:772	687134	0					
ANR	687258	ExpressionStatement	"l_corner = ""."""	147:3:3090:3104	687134	0	True				
ANR	687259	AssignmentExpression	"l_corner = ""."""		687134	0		=			
ANR	687260	Identifier	l_corner		687134	0					
ANR	687261	PrimaryExpression	"""."""		687134	1					
ANR	687262	ExpressionStatement	"r_corner = ""'"""	148:3:3109:3123	687134	1	True				
ANR	687263	AssignmentExpression	"r_corner = ""'"""		687134	0		=			
ANR	687264	Identifier	r_corner		687134	0					
ANR	687265	PrimaryExpression	"""'"""		687134	1					
ANR	687266	BreakStatement	break ;	150:2:3131:3136	687134	5	True				
ANR	687267	Label	case REV_APEX_APEX :	151:1:3139:3157	687134	6	True				
ANR	687268	Identifier	REV_APEX_APEX		687134	0					
ANR	687269	IfStatement	if ( useUtf8 )		687134	7					
ANR	687270	Condition	useUtf8	152:6:3165:3171	687134	0	True				
ANR	687271	Identifier	useUtf8		687134	0					
ANR	687272	CompoundStatement		46:15:861:861	687134	1					
ANR	687273	IfStatement	if ( useUtf8Curvy )		687134	0					
ANR	687274	Condition	useUtf8Curvy	153:7:3183:3194	687134	0	True				
ANR	687275	Identifier	useUtf8Curvy		687134	0					
ANR	687276	CompoundStatement		47:21:884:884	687134	1					
ANR	687277	ExpressionStatement	l_corner = RUNECODESTR_CURVE_CORNER_BL	154:4:3203:3241	687134	0	True				
ANR	687278	AssignmentExpression	l_corner = RUNECODESTR_CURVE_CORNER_BL		687134	0		=			
ANR	687279	Identifier	l_corner		687134	0					
ANR	687280	Identifier	RUNECODESTR_CURVE_CORNER_BL		687134	1					
ANR	687281	ExpressionStatement	r_corner = RUNECODESTR_CURVE_CORNER_BR	155:4:3247:3285	687134	1	True				
ANR	687282	AssignmentExpression	r_corner = RUNECODESTR_CURVE_CORNER_BR		687134	0		=			
ANR	687283	Identifier	r_corner		687134	0					
ANR	687284	Identifier	RUNECODESTR_CURVE_CORNER_BR		687134	1					
ANR	687285	ElseStatement	else		687134	0					
ANR	687286	CompoundStatement		50:10:984:984	687134	0					
ANR	687287	ExpressionStatement	l_corner = RUNECODESTR_CORNER_BL	157:4:3303:3335	687134	0	True				
ANR	687288	AssignmentExpression	l_corner = RUNECODESTR_CORNER_BL		687134	0		=			
ANR	687289	Identifier	l_corner		687134	0					
ANR	687290	Identifier	RUNECODESTR_CORNER_BL		687134	1					
ANR	687291	ExpressionStatement	r_corner = RUNECODESTR_CORNER_BR	158:4:3341:3373	687134	1	True				
ANR	687292	AssignmentExpression	r_corner = RUNECODESTR_CORNER_BR		687134	0		=			
ANR	687293	Identifier	r_corner		687134	0					
ANR	687294	Identifier	RUNECODESTR_CORNER_BR		687134	1					
ANR	687295	ElseStatement	else		687134	0					
ANR	687296	CompoundStatement		54:9:1076:1076	687134	0					
ANR	687297	ExpressionStatement	"l_corner = ""`"""	161:3:3394:3408	687134	0	True				
ANR	687298	AssignmentExpression	"l_corner = ""`"""		687134	0		=			
ANR	687299	Identifier	l_corner		687134	0					
ANR	687300	PrimaryExpression	"""`"""		687134	1					
ANR	687301	ExpressionStatement	"r_corner = ""'"""	162:3:3413:3427	687134	1	True				
ANR	687302	AssignmentExpression	"r_corner = ""'"""		687134	0		=			
ANR	687303	Identifier	r_corner		687134	0					
ANR	687304	PrimaryExpression	"""'"""		687134	1					
ANR	687305	BreakStatement	break ;	164:2:3435:3440	687134	8	True				
ANR	687306	Label	case DOT_DOT :	165:1:3443:3455	687134	9	True				
ANR	687307	Identifier	DOT_DOT		687134	0					
ANR	687308	IfStatement	if ( useUtf8 )		687134	10					
ANR	687309	Condition	useUtf8	166:6:3463:3469	687134	0	True				
ANR	687310	Identifier	useUtf8		687134	0					
ANR	687311	CompoundStatement		60:15:1159:1159	687134	1					
ANR	687312	IfStatement	if ( useUtf8Curvy )		687134	0					
ANR	687313	Condition	useUtf8Curvy	167:7:3481:3492	687134	0	True				
ANR	687314	Identifier	useUtf8Curvy		687134	0					
ANR	687315	CompoundStatement		61:21:1182:1182	687134	1					
ANR	687316	ExpressionStatement	l_corner = RUNECODESTR_CURVE_CORNER_TL	168:4:3501:3539	687134	0	True				
ANR	687317	AssignmentExpression	l_corner = RUNECODESTR_CURVE_CORNER_TL		687134	0		=			
ANR	687318	Identifier	l_corner		687134	0					
ANR	687319	Identifier	RUNECODESTR_CURVE_CORNER_TL		687134	1					
ANR	687320	ExpressionStatement	r_corner = RUNECODESTR_CURVE_CORNER_TR	169:4:3545:3583	687134	1	True				
ANR	687321	AssignmentExpression	r_corner = RUNECODESTR_CURVE_CORNER_TR		687134	0		=			
ANR	687322	Identifier	r_corner		687134	0					
ANR	687323	Identifier	RUNECODESTR_CURVE_CORNER_TR		687134	1					
ANR	687324	ElseStatement	else		687134	0					
ANR	687325	CompoundStatement		64:10:1282:1282	687134	0					
ANR	687326	ExpressionStatement	l_corner = RUNECODESTR_CORNER_TL	171:4:3601:3633	687134	0	True				
ANR	687327	AssignmentExpression	l_corner = RUNECODESTR_CORNER_TL		687134	0		=			
ANR	687328	Identifier	l_corner		687134	0					
ANR	687329	Identifier	RUNECODESTR_CORNER_TL		687134	1					
ANR	687330	ExpressionStatement	r_corner = RUNECODESTR_CORNER_TR	172:4:3639:3671	687134	1	True				
ANR	687331	AssignmentExpression	r_corner = RUNECODESTR_CORNER_TR		687134	0		=			
ANR	687332	Identifier	r_corner		687134	0					
ANR	687333	Identifier	RUNECODESTR_CORNER_TR		687134	1					
ANR	687334	ElseStatement	else		687134	0					
ANR	687335	CompoundStatement		68:9:1374:1374	687134	0					
ANR	687336	ExpressionStatement	"l_corner = r_corner = ""."""	175:3:3692:3717	687134	0	True				
ANR	687337	AssignmentExpression	"l_corner = r_corner = ""."""		687134	0		=			
ANR	687338	Identifier	l_corner		687134	0					
ANR	687339	AssignmentExpression	"r_corner = ""."""		687134	1		=			
ANR	687340	Identifier	r_corner		687134	0					
ANR	687341	PrimaryExpression	"""."""		687134	1					
ANR	687342	BreakStatement	break ;	177:2:3725:3730	687134	11	True				
ANR	687343	Label	case NRM_DOT :	178:1:3733:3745	687134	12	True				
ANR	687344	Identifier	NRM_DOT		687134	0					
ANR	687345	IfStatement	if ( useUtf8 )		687134	13					
ANR	687346	Condition	useUtf8	179:6:3753:3759	687134	0	True				
ANR	687347	Identifier	useUtf8		687134	0					
ANR	687348	CompoundStatement		73:15:1449:1449	687134	1					
ANR	687349	ExpressionStatement	l_corner = utf8_line_horiz ( dot_style )	180:3:3767:3805	687134	0	True				
ANR	687350	AssignmentExpression	l_corner = utf8_line_horiz ( dot_style )		687134	0		=			
ANR	687351	Identifier	l_corner		687134	0					
ANR	687352	CallExpression	utf8_line_horiz ( dot_style )		687134	1					
ANR	687353	Callee	utf8_line_horiz		687134	0					
ANR	687354	Identifier	utf8_line_horiz		687134	0					
ANR	687355	ArgumentList	dot_style		687134	1					
ANR	687356	Argument	dot_style		687134	0					
ANR	687357	Identifier	dot_style		687134	0					
ANR	687358	IfStatement	if ( useUtf8Curvy )		687134	1					
ANR	687359	Condition	useUtf8Curvy	181:7:3814:3825	687134	0	True				
ANR	687360	Identifier	useUtf8Curvy		687134	0					
ANR	687361	CompoundStatement		75:21:1515:1515	687134	1					
ANR	687362	ExpressionStatement	r_corner = RUNECODESTR_CURVE_CORNER_TR	182:4:3834:3872	687134	0	True				
ANR	687363	AssignmentExpression	r_corner = RUNECODESTR_CURVE_CORNER_TR		687134	0		=			
ANR	687364	Identifier	r_corner		687134	0					
ANR	687365	Identifier	RUNECODESTR_CURVE_CORNER_TR		687134	1					
ANR	687366	ElseStatement	else		687134	0					
ANR	687367	CompoundStatement		77:10:1571:1571	687134	0					
ANR	687368	ExpressionStatement	r_corner = RUNECODESTR_CORNER_TR	184:4:3890:3922	687134	0	True				
ANR	687369	AssignmentExpression	r_corner = RUNECODESTR_CORNER_TR		687134	0		=			
ANR	687370	Identifier	r_corner		687134	0					
ANR	687371	Identifier	RUNECODESTR_CORNER_TR		687134	1					
ANR	687372	ElseStatement	else		687134	0					
ANR	687373	CompoundStatement		80:9:1625:1625	687134	0					
ANR	687374	ExpressionStatement	"l_corner = ""-"""	187:3:3943:3957	687134	0	True				
ANR	687375	AssignmentExpression	"l_corner = ""-"""		687134	0		=			
ANR	687376	Identifier	l_corner		687134	0					
ANR	687377	PrimaryExpression	"""-"""		687134	1					
ANR	687378	ExpressionStatement	"r_corner = ""."""	188:3:3962:3976	687134	1	True				
ANR	687379	AssignmentExpression	"r_corner = ""."""		687134	0		=			
ANR	687380	Identifier	r_corner		687134	0					
ANR	687381	PrimaryExpression	"""."""		687134	1					
ANR	687382	BreakStatement	break ;	190:2:3984:3989	687134	14	True				
ANR	687383	Label	case NRM_APEX :	191:1:3992:4005	687134	15	True				
ANR	687384	Identifier	NRM_APEX		687134	0					
ANR	687385	IfStatement	if ( useUtf8 )		687134	16					
ANR	687386	Condition	useUtf8	192:6:4013:4019	687134	0	True				
ANR	687387	Identifier	useUtf8		687134	0					
ANR	687388	CompoundStatement		86:15:1709:1709	687134	1					
ANR	687389	ExpressionStatement	l_corner = utf8_line_horiz ( dot_style )	193:3:4027:4065	687134	0	True				
ANR	687390	AssignmentExpression	l_corner = utf8_line_horiz ( dot_style )		687134	0		=			
ANR	687391	Identifier	l_corner		687134	0					
ANR	687392	CallExpression	utf8_line_horiz ( dot_style )		687134	1					
ANR	687393	Callee	utf8_line_horiz		687134	0					
ANR	687394	Identifier	utf8_line_horiz		687134	0					
ANR	687395	ArgumentList	dot_style		687134	1					
ANR	687396	Argument	dot_style		687134	0					
ANR	687397	Identifier	dot_style		687134	0					
ANR	687398	IfStatement	if ( useUtf8Curvy )		687134	1					
ANR	687399	Condition	useUtf8Curvy	194:7:4074:4085	687134	0	True				
ANR	687400	Identifier	useUtf8Curvy		687134	0					
ANR	687401	CompoundStatement		88:21:1775:1775	687134	1					
ANR	687402	ExpressionStatement	r_corner = RUNECODESTR_CURVE_CORNER_BR	195:4:4094:4132	687134	0	True				
ANR	687403	AssignmentExpression	r_corner = RUNECODESTR_CURVE_CORNER_BR		687134	0		=			
ANR	687404	Identifier	r_corner		687134	0					
ANR	687405	Identifier	RUNECODESTR_CURVE_CORNER_BR		687134	1					
ANR	687406	ElseStatement	else		687134	0					
ANR	687407	CompoundStatement		90:10:1831:1831	687134	0					
ANR	687408	ExpressionStatement	r_corner = RUNECODESTR_CORNER_BR	197:4:4150:4182	687134	0	True				
ANR	687409	AssignmentExpression	r_corner = RUNECODESTR_CORNER_BR		687134	0		=			
ANR	687410	Identifier	r_corner		687134	0					
ANR	687411	Identifier	RUNECODESTR_CORNER_BR		687134	1					
ANR	687412	ElseStatement	else		687134	0					
ANR	687413	CompoundStatement		93:9:1885:1885	687134	0					
ANR	687414	ExpressionStatement	"l_corner = ""-"""	200:3:4203:4217	687134	0	True				
ANR	687415	AssignmentExpression	"l_corner = ""-"""		687134	0		=			
ANR	687416	Identifier	l_corner		687134	0					
ANR	687417	PrimaryExpression	"""-"""		687134	1					
ANR	687418	ExpressionStatement	"r_corner = ""'"""	201:3:4222:4236	687134	1	True				
ANR	687419	AssignmentExpression	"r_corner = ""'"""		687134	0		=			
ANR	687420	Identifier	r_corner		687134	0					
ANR	687421	PrimaryExpression	"""'"""		687134	1					
ANR	687422	BreakStatement	break ;	203:2:4244:4249	687134	17	True				
ANR	687423	Label	case DOT_NRM :	204:1:4252:4264	687134	18	True				
ANR	687424	Identifier	DOT_NRM		687134	0					
ANR	687425	IfStatement	if ( useUtf8 )		687134	19					
ANR	687426	Condition	useUtf8	205:6:4272:4278	687134	0	True				
ANR	687427	Identifier	useUtf8		687134	0					
ANR	687428	CompoundStatement		99:15:1968:1968	687134	1					
ANR	687429	IfStatement	if ( useUtf8Curvy )		687134	0					
ANR	687430	Condition	useUtf8Curvy	206:7:4290:4301	687134	0	True				
ANR	687431	Identifier	useUtf8Curvy		687134	0					
ANR	687432	CompoundStatement		100:21:1991:1991	687134	1					
ANR	687433	ExpressionStatement	l_corner = RUNECODESTR_CURVE_CORNER_TL	207:4:4310:4348	687134	0	True				
ANR	687434	AssignmentExpression	l_corner = RUNECODESTR_CURVE_CORNER_TL		687134	0		=			
ANR	687435	Identifier	l_corner		687134	0					
ANR	687436	Identifier	RUNECODESTR_CURVE_CORNER_TL		687134	1					
ANR	687437	ElseStatement	else		687134	0					
ANR	687438	CompoundStatement		102:10:2047:2047	687134	0					
ANR	687439	ExpressionStatement	l_corner = RUNECODESTR_CORNER_TL	209:4:4366:4398	687134	0	True				
ANR	687440	AssignmentExpression	l_corner = RUNECODESTR_CORNER_TL		687134	0		=			
ANR	687441	Identifier	l_corner		687134	0					
ANR	687442	Identifier	RUNECODESTR_CORNER_TL		687134	1					
ANR	687443	ExpressionStatement	r_corner = utf8_line_horiz ( dot_style )	211:3:4408:4446	687134	1	True				
ANR	687444	AssignmentExpression	r_corner = utf8_line_horiz ( dot_style )		687134	0		=			
ANR	687445	Identifier	r_corner		687134	0					
ANR	687446	CallExpression	utf8_line_horiz ( dot_style )		687134	1					
ANR	687447	Callee	utf8_line_horiz		687134	0					
ANR	687448	Identifier	utf8_line_horiz		687134	0					
ANR	687449	ArgumentList	dot_style		687134	1					
ANR	687450	Argument	dot_style		687134	0					
ANR	687451	Identifier	dot_style		687134	0					
ANR	687452	ElseStatement	else		687134	0					
ANR	687453	CompoundStatement		106:9:2144:2144	687134	0					
ANR	687454	ExpressionStatement	"l_corner = ""."""	213:3:4462:4476	687134	0	True				
ANR	687455	AssignmentExpression	"l_corner = ""."""		687134	0		=			
ANR	687456	Identifier	l_corner		687134	0					
ANR	687457	PrimaryExpression	"""."""		687134	1					
ANR	687458	ExpressionStatement	"r_corner = ""-"""	214:3:4481:4495	687134	1	True				
ANR	687459	AssignmentExpression	"r_corner = ""-"""		687134	0		=			
ANR	687460	Identifier	r_corner		687134	0					
ANR	687461	PrimaryExpression	"""-"""		687134	1					
ANR	687462	BreakStatement	break ;	216:2:4503:4508	687134	20	True				
ANR	687463	Label	case REV_APEX_NRM :	217:1:4511:4528	687134	21	True				
ANR	687464	Identifier	REV_APEX_NRM		687134	0					
ANR	687465	IfStatement	if ( useUtf8 )		687134	22					
ANR	687466	Condition	useUtf8	218:6:4536:4542	687134	0	True				
ANR	687467	Identifier	useUtf8		687134	0					
ANR	687468	CompoundStatement		112:15:2232:2232	687134	1					
ANR	687469	IfStatement	if ( useUtf8Curvy )		687134	0					
ANR	687470	Condition	useUtf8Curvy	219:7:4554:4565	687134	0	True				
ANR	687471	Identifier	useUtf8Curvy		687134	0					
ANR	687472	CompoundStatement		113:21:2255:2255	687134	1					
ANR	687473	ExpressionStatement	l_corner = RUNECODESTR_CURVE_CORNER_BL	220:4:4574:4612	687134	0	True				
ANR	687474	AssignmentExpression	l_corner = RUNECODESTR_CURVE_CORNER_BL		687134	0		=			
ANR	687475	Identifier	l_corner		687134	0					
ANR	687476	Identifier	RUNECODESTR_CURVE_CORNER_BL		687134	1					
ANR	687477	ElseStatement	else		687134	0					
ANR	687478	CompoundStatement		115:10:2311:2311	687134	0					
ANR	687479	ExpressionStatement	l_corner = RUNECODESTR_CORNER_BL	222:4:4630:4662	687134	0	True				
ANR	687480	AssignmentExpression	l_corner = RUNECODESTR_CORNER_BL		687134	0		=			
ANR	687481	Identifier	l_corner		687134	0					
ANR	687482	Identifier	RUNECODESTR_CORNER_BL		687134	1					
ANR	687483	ExpressionStatement	r_corner = utf8_line_horiz ( dot_style )	224:3:4672:4710	687134	1	True				
ANR	687484	AssignmentExpression	r_corner = utf8_line_horiz ( dot_style )		687134	0		=			
ANR	687485	Identifier	r_corner		687134	0					
ANR	687486	CallExpression	utf8_line_horiz ( dot_style )		687134	1					
ANR	687487	Callee	utf8_line_horiz		687134	0					
ANR	687488	Identifier	utf8_line_horiz		687134	0					
ANR	687489	ArgumentList	dot_style		687134	1					
ANR	687490	Argument	dot_style		687134	0					
ANR	687491	Identifier	dot_style		687134	0					
ANR	687492	ElseStatement	else		687134	0					
ANR	687493	CompoundStatement		119:9:2408:2408	687134	0					
ANR	687494	ExpressionStatement	"l_corner = ""`"""	226:3:4726:4740	687134	0	True				
ANR	687495	AssignmentExpression	"l_corner = ""`"""		687134	0		=			
ANR	687496	Identifier	l_corner		687134	0					
ANR	687497	PrimaryExpression	"""`"""		687134	1					
ANR	687498	ExpressionStatement	"r_corner = ""-"""	227:3:4745:4759	687134	1	True				
ANR	687499	AssignmentExpression	"r_corner = ""-"""		687134	0		=			
ANR	687500	Identifier	r_corner		687134	0					
ANR	687501	PrimaryExpression	"""-"""		687134	1					
ANR	687502	BreakStatement	break ;	229:2:4767:4772	687134	23	True				
ANR	687503	Label	case NRM_NRM :	230:1:4775:4787	687134	24	True				
ANR	687504	Identifier	NRM_NRM		687134	0					
ANR	687505	Label	default :	231:1:4790:4797	687134	25	True				
ANR	687506	Identifier	default		687134	0					
ANR	687507	IfStatement	if ( useUtf8 )		687134	26					
ANR	687508	Condition	useUtf8	232:6:4805:4811	687134	0	True				
ANR	687509	Identifier	useUtf8		687134	0					
ANR	687510	CompoundStatement		126:15:2501:2501	687134	1					
ANR	687511	ExpressionStatement	l_corner = r_corner = utf8_line_horiz ( dot_style )	233:3:4819:4868	687134	0	True				
ANR	687512	AssignmentExpression	l_corner = r_corner = utf8_line_horiz ( dot_style )		687134	0		=			
ANR	687513	Identifier	l_corner		687134	0					
ANR	687514	AssignmentExpression	r_corner = utf8_line_horiz ( dot_style )		687134	1		=			
ANR	687515	Identifier	r_corner		687134	0					
ANR	687516	CallExpression	utf8_line_horiz ( dot_style )		687134	1					
ANR	687517	Callee	utf8_line_horiz		687134	0					
ANR	687518	Identifier	utf8_line_horiz		687134	0					
ANR	687519	ArgumentList	dot_style		687134	1					
ANR	687520	Argument	dot_style		687134	0					
ANR	687521	Identifier	dot_style		687134	0					
ANR	687522	ElseStatement	else		687134	0					
ANR	687523	CompoundStatement		128:9:2566:2566	687134	0					
ANR	687524	ExpressionStatement	"l_corner = r_corner = ""-"""	235:3:4884:4909	687134	0	True				
ANR	687525	AssignmentExpression	"l_corner = r_corner = ""-"""		687134	0		=			
ANR	687526	Identifier	l_corner		687134	0					
ANR	687527	AssignmentExpression	"r_corner = ""-"""		687134	1		=			
ANR	687528	Identifier	r_corner		687134	0					
ANR	687529	PrimaryExpression	"""-"""		687134	1					
ANR	687530	BreakStatement	break ;	237:2:4917:4922	687134	27	True				
ANR	687531	IfStatement	"if ( G ( x , y ) )"		687134	6					
ANR	687532	Condition	"G ( x , y )"	240:5:4933:4940	687134	0	True				
ANR	687533	CallExpression	"G ( x , y )"		687134	0					
ANR	687534	Callee	G		687134	0					
ANR	687535	Identifier	G		687134	0					
ANR	687536	ArgumentList	x		687134	1					
ANR	687537	Argument	x		687134	0					
ANR	687538	Identifier	x		687134	0					
ANR	687539	Argument	y		687134	1					
ANR	687540	Identifier	y		687134	0					
ANR	687541	CompoundStatement		134:15:2630:2630	687134	1					
ANR	687542	ExpressionStatement	W ( l_corner )	241:2:4947:4959	687134	0	True				
ANR	687543	CallExpression	W ( l_corner )		687134	0					
ANR	687544	Callee	W		687134	0					
ANR	687545	Identifier	W		687134	0					
ANR	687546	ArgumentList	l_corner		687134	1					
ANR	687547	Argument	l_corner		687134	0					
ANR	687548	Identifier	l_corner		687134	0					
ANR	687549	IdentifierDeclStatement	"const char * hline = useUtf8 ? utf8_line_horiz ( dot_style ) : ""-"" ;"	244:1:4966:5029	687134	7	True				
ANR	687550	IdentifierDecl	"* hline = useUtf8 ? utf8_line_horiz ( dot_style ) : ""-"""		687134	0					
ANR	687551	IdentifierDeclType	const char *		687134	0					
ANR	687552	Identifier	hline		687134	1					
ANR	687553	AssignmentExpression	"* hline = useUtf8 ? utf8_line_horiz ( dot_style ) : ""-"""		687134	2		=			
ANR	687554	Identifier	hline		687134	0					
ANR	687555	ConditionalExpression	"useUtf8 ? utf8_line_horiz ( dot_style ) : ""-"""		687134	1					
ANR	687556	Condition	useUtf8		687134	0					
ANR	687557	Identifier	useUtf8		687134	0					
ANR	687558	CallExpression	utf8_line_horiz ( dot_style )		687134	1					
ANR	687559	Callee	utf8_line_horiz		687134	0					
ANR	687560	Identifier	utf8_line_horiz		687134	0					
ANR	687561	ArgumentList	dot_style		687134	1					
ANR	687562	Argument	dot_style		687134	0					
ANR	687563	Identifier	dot_style		687134	0					
ANR	687564	PrimaryExpression	"""-"""		687134	2					
ANR	687565	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	245:1:5032:5062	687134	8	True				
ANR	687566	CallExpression	"r_cons_break_push ( NULL , NULL )"		687134	0					
ANR	687567	Callee	r_cons_break_push		687134	0					
ANR	687568	Identifier	r_cons_break_push		687134	0					
ANR	687569	ArgumentList	NULL		687134	1					
ANR	687570	Argument	NULL		687134	0					
ANR	687571	Identifier	NULL		687134	0					
ANR	687572	Argument	NULL		687134	1					
ANR	687573	Identifier	NULL		687134	0					
ANR	687574	ForStatement	for ( i = x + 1 ; i < x + width - 1 ; i ++ )		687134	9					
ANR	687575	ForInit	i = x + 1 ;	246:6:5070:5079	687134	0	True				
ANR	687576	AssignmentExpression	i = x + 1		687134	0		=			
ANR	687577	Identifier	i		687134	0					
ANR	687578	AdditiveExpression	x + 1		687134	1		+			
ANR	687579	Identifier	x		687134	0					
ANR	687580	PrimaryExpression	1		687134	1					
ANR	687581	Condition	i < x + width - 1	246:17:5081:5097	687134	1	True				
ANR	687582	RelationalExpression	i < x + width - 1		687134	0		<			
ANR	687583	Identifier	i		687134	0					
ANR	687584	AdditiveExpression	x + width - 1		687134	1		+			
ANR	687585	Identifier	x		687134	0					
ANR	687586	AdditiveExpression	width - 1		687134	1		-			
ANR	687587	Identifier	width		687134	0					
ANR	687588	PrimaryExpression	1		687134	1					
ANR	687589	PostIncDecOperationExpression	i ++	246:36:5100:5102	687134	2	True				
ANR	687590	Identifier	i		687134	0					
ANR	687591	IncDec	++		687134	1					
ANR	687592	CompoundStatement		140:41:2792:2792	687134	3					
ANR	687593	IfStatement	if ( r_cons_is_breaked ( ) )		687134	0					
ANR	687594	Condition	r_cons_is_breaked ( )	247:6:5113:5132	687134	0	True				
ANR	687595	CallExpression	r_cons_is_breaked ( )		687134	0					
ANR	687596	Callee	r_cons_is_breaked		687134	0					
ANR	687597	Identifier	r_cons_is_breaked		687134	0					
ANR	687598	ArgumentList			687134	1					
ANR	687599	CompoundStatement		141:28:2822:2822	687134	1					
ANR	687600	BreakStatement	break ;	248:3:5140:5145	687134	0	True				
ANR	687601	IfStatement	"if ( G ( i , y ) )"		687134	1					
ANR	687602	Condition	"G ( i , y )"	250:6:5157:5164	687134	0	True				
ANR	687603	CallExpression	"G ( i , y )"		687134	0					
ANR	687604	Callee	G		687134	0					
ANR	687605	Identifier	G		687134	0					
ANR	687606	ArgumentList	i		687134	1					
ANR	687607	Argument	i		687134	0					
ANR	687608	Identifier	i		687134	0					
ANR	687609	Argument	y		687134	1					
ANR	687610	Identifier	y		687134	0					
ANR	687611	CompoundStatement		144:16:2854:2854	687134	1					
ANR	687612	ExpressionStatement	W ( hline )	251:3:5172:5181	687134	0	True				
ANR	687613	CallExpression	W ( hline )		687134	0					
ANR	687614	Callee	W		687134	0					
ANR	687615	Identifier	W		687134	0					
ANR	687616	ArgumentList	hline		687134	1					
ANR	687617	Argument	hline		687134	0					
ANR	687618	Identifier	hline		687134	0					
ANR	687619	ExpressionStatement	r_cons_break_pop ( )	254:1:5191:5210	687134	10	True				
ANR	687620	CallExpression	r_cons_break_pop ( )		687134	0					
ANR	687621	Callee	r_cons_break_pop		687134	0					
ANR	687622	Identifier	r_cons_break_pop		687134	0					
ANR	687623	ArgumentList			687134	1					
ANR	687624	IfStatement	"if ( G ( x + width - 1 , y ) )"		687134	11					
ANR	687625	Condition	"G ( x + width - 1 , y )"	256:5:5218:5237	687134	0	True				
ANR	687626	CallExpression	"G ( x + width - 1 , y )"		687134	0					
ANR	687627	Callee	G		687134	0					
ANR	687628	Identifier	G		687134	0					
ANR	687629	ArgumentList	x + width - 1		687134	1					
ANR	687630	Argument	x + width - 1		687134	0					
ANR	687631	AdditiveExpression	x + width - 1		687134	0		+			
ANR	687632	Identifier	x		687134	0					
ANR	687633	AdditiveExpression	width - 1		687134	1		-			
ANR	687634	Identifier	width		687134	0					
ANR	687635	PrimaryExpression	1		687134	1					
ANR	687636	Argument	y		687134	1					
ANR	687637	Identifier	y		687134	0					
ANR	687638	CompoundStatement		150:27:2927:2927	687134	1					
ANR	687639	ExpressionStatement	W ( r_corner )	257:2:5244:5256	687134	0	True				
ANR	687640	CallExpression	W ( r_corner )		687134	0					
ANR	687641	Callee	W		687134	0					
ANR	687642	Identifier	W		687134	0					
ANR	687643	ArgumentList	r_corner		687134	1					
ANR	687644	Argument	r_corner		687134	0					
ANR	687645	Identifier	r_corner		687134	0					
ANR	687646	ReturnType	static void		687134	1					
ANR	687647	Identifier	draw_horizontal_line		687134	2					
ANR	687648	ParameterList	"RConsCanvas * c , int x , int y , int width , int style , int dot_style"		687134	3					
ANR	687649	Parameter	RConsCanvas * c	107:34:2245:2258	687134	0	True				
ANR	687650	ParameterType	RConsCanvas *		687134	0					
ANR	687651	Identifier	c		687134	1					
ANR	687652	Parameter	int x	107:50:2261:2265	687134	1	True				
ANR	687653	ParameterType	int		687134	0					
ANR	687654	Identifier	x		687134	1					
ANR	687655	Parameter	int y	107:57:2268:2272	687134	2	True				
ANR	687656	ParameterType	int		687134	0					
ANR	687657	Identifier	y		687134	1					
ANR	687658	Parameter	int width	107:64:2275:2283	687134	3	True				
ANR	687659	ParameterType	int		687134	0					
ANR	687660	Identifier	width		687134	1					
ANR	687661	Parameter	int style	107:75:2286:2294	687134	4	True				
ANR	687662	ParameterType	int		687134	0					
ANR	687663	Identifier	style		687134	1					
ANR	687664	Parameter	int dot_style	107:86:2297:2309	687134	5	True				
ANR	687665	ParameterType	int		687134	0					
ANR	687666	Identifier	dot_style		687134	1					
ANR	687667	CFGEntryNode	ENTRY		687134		True				
ANR	687668	CFGExitNode	EXIT		687134		True				
ANR	687669	Symbol	c -> sy		687134						
ANR	687670	Symbol	RUNECODESTR_CORNER_BL		687134						
ANR	687671	Symbol	G		687134						
ANR	687672	Symbol	RUNECODESTR_CORNER_TR		687134						
ANR	687673	Symbol	RUNECODESTR_CURVE_CORNER_TL		687134						
ANR	687674	Symbol	useUtf8Curvy		687134						
ANR	687675	Symbol	r_cons_is_breaked		687134						
ANR	687676	Symbol	RUNECODESTR_CORNER_TL		687134						
ANR	687677	Symbol	utf8_line_horiz		687134						
ANR	687678	Symbol	c -> h		687134						
ANR	687679	Symbol	c		687134						
ANR	687680	Symbol	dot_style		687134						
ANR	687681	Symbol	RUNECODESTR_CURVE_CORNER_BR		687134						
ANR	687682	Symbol	NULL		687134						
ANR	687683	Symbol	i		687134						
ANR	687684	Symbol	* c		687134						
ANR	687685	Symbol	hline		687134						
ANR	687686	Symbol	r_corner		687134						
ANR	687687	Symbol	RUNECODESTR_CURVE_CORNER_TR		687134						
ANR	687688	Symbol	useUtf8		687134						
ANR	687689	Symbol	x		687134						
ANR	687690	Symbol	width		687134						
ANR	687691	Symbol	l_corner		687134						
ANR	687692	Symbol	y		687134						
ANR	687693	Symbol	RUNECODESTR_CURVE_CORNER_BL		687134						
ANR	687694	Symbol	style		687134						
ANR	687695	Symbol	RUNECODESTR_CORNER_BR		687134						
ANR	687696	Function	draw_vertical_line	261:0:5264:5721							
ANR	687697	FunctionDef	"draw_vertical_line (RConsCanvas * c , int x , int y , int height , int dot_style)"		687696	0					
ANR	687698	CompoundStatement		261:89:5353:5721	687696	0					
ANR	687699	IdentifierDeclStatement	int i ;	262:1:5356:5361	687696	0	True				
ANR	687700	IdentifierDecl	i		687696	0					
ANR	687701	IdentifierDeclType	int		687696	0					
ANR	687702	Identifier	i		687696	1					
ANR	687703	IfStatement	if ( x + c -> sx < 0 )		687696	1					
ANR	687704	Condition	x + c -> sx < 0	264:5:5414:5426	687696	0	True				
ANR	687705	RelationalExpression	x + c -> sx < 0		687696	0		<			
ANR	687706	AdditiveExpression	x + c -> sx		687696	0		+			
ANR	687707	Identifier	x		687696	0					
ANR	687708	PtrMemberAccess	c -> sx		687696	1					
ANR	687709	Identifier	c		687696	0					
ANR	687710	Identifier	sx		687696	1					
ANR	687711	PrimaryExpression	0		687696	1					
ANR	687712	CompoundStatement		4:20:75:75	687696	1					
ANR	687713	ReturnStatement	return ;	265:2:5433:5439	687696	0	True				
ANR	687714	IfStatement	if ( x + c -> sx > c -> w )		687696	2					
ANR	687715	Condition	x + c -> sx > c -> w	267:5:5449:5464	687696	0	True				
ANR	687716	RelationalExpression	x + c -> sx > c -> w		687696	0		>			
ANR	687717	AdditiveExpression	x + c -> sx		687696	0		+			
ANR	687718	Identifier	x		687696	0					
ANR	687719	PtrMemberAccess	c -> sx		687696	1					
ANR	687720	Identifier	c		687696	0					
ANR	687721	Identifier	sx		687696	1					
ANR	687722	PtrMemberAccess	c -> w		687696	1					
ANR	687723	Identifier	c		687696	0					
ANR	687724	Identifier	w		687696	1					
ANR	687725	CompoundStatement		7:23:113:113	687696	1					
ANR	687726	ReturnStatement	return ;	268:2:5471:5477	687696	0	True				
ANR	687727	IdentifierDeclStatement	"const char * vline = useUtf8 ? utf8_line_vert ( dot_style ) : ""|"" ;"	270:1:5483:5545	687696	3	True				
ANR	687728	IdentifierDecl	"* vline = useUtf8 ? utf8_line_vert ( dot_style ) : ""|"""		687696	0					
ANR	687729	IdentifierDeclType	const char *		687696	0					
ANR	687730	Identifier	vline		687696	1					
ANR	687731	AssignmentExpression	"* vline = useUtf8 ? utf8_line_vert ( dot_style ) : ""|"""		687696	2		=			
ANR	687732	Identifier	vline		687696	0					
ANR	687733	ConditionalExpression	"useUtf8 ? utf8_line_vert ( dot_style ) : ""|"""		687696	1					
ANR	687734	Condition	useUtf8		687696	0					
ANR	687735	Identifier	useUtf8		687696	0					
ANR	687736	CallExpression	utf8_line_vert ( dot_style )		687696	1					
ANR	687737	Callee	utf8_line_vert		687696	0					
ANR	687738	Identifier	utf8_line_vert		687696	0					
ANR	687739	ArgumentList	dot_style		687696	1					
ANR	687740	Argument	dot_style		687696	0					
ANR	687741	Identifier	dot_style		687696	0					
ANR	687742	PrimaryExpression	"""|"""		687696	2					
ANR	687743	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	271:1:5548:5578	687696	4	True				
ANR	687744	CallExpression	"r_cons_break_push ( NULL , NULL )"		687696	0					
ANR	687745	Callee	r_cons_break_push		687696	0					
ANR	687746	Identifier	r_cons_break_push		687696	0					
ANR	687747	ArgumentList	NULL		687696	1					
ANR	687748	Argument	NULL		687696	0					
ANR	687749	Identifier	NULL		687696	0					
ANR	687750	Argument	NULL		687696	1					
ANR	687751	Identifier	NULL		687696	0					
ANR	687752	ForStatement	for ( i = y ; i < y + height ; i ++ )		687696	5					
ANR	687753	ForInit	i = y ;	272:6:5586:5591	687696	0	True				
ANR	687754	AssignmentExpression	i = y		687696	0		=			
ANR	687755	Identifier	i		687696	0					
ANR	687756	Identifier	y		687696	1					
ANR	687757	Condition	i < y + height	272:13:5593:5606	687696	1	True				
ANR	687758	RelationalExpression	i < y + height		687696	0		<			
ANR	687759	Identifier	i		687696	0					
ANR	687760	AdditiveExpression	y + height		687696	1		+			
ANR	687761	Identifier	y		687696	0					
ANR	687762	Identifier	height		687696	1					
ANR	687763	PostIncDecOperationExpression	i ++	272:29:5609:5611	687696	2	True				
ANR	687764	Identifier	i		687696	0					
ANR	687765	IncDec	++		687696	1					
ANR	687766	CompoundStatement		12:34:260:260	687696	3					
ANR	687767	IfStatement	if ( r_cons_is_breaked ( ) )		687696	0					
ANR	687768	Condition	r_cons_is_breaked ( )	273:6:5622:5641	687696	0	True				
ANR	687769	CallExpression	r_cons_is_breaked ( )		687696	0					
ANR	687770	Callee	r_cons_is_breaked		687696	0					
ANR	687771	Identifier	r_cons_is_breaked		687696	0					
ANR	687772	ArgumentList			687696	1					
ANR	687773	CompoundStatement		13:28:290:290	687696	1					
ANR	687774	BreakStatement	break ;	274:3:5649:5654	687696	0	True				
ANR	687775	IfStatement	"if ( G ( x , i ) )"		687696	1					
ANR	687776	Condition	"G ( x , i )"	276:6:5666:5673	687696	0	True				
ANR	687777	CallExpression	"G ( x , i )"		687696	0					
ANR	687778	Callee	G		687696	0					
ANR	687779	Identifier	G		687696	0					
ANR	687780	ArgumentList	x		687696	1					
ANR	687781	Argument	x		687696	0					
ANR	687782	Identifier	x		687696	0					
ANR	687783	Argument	i		687696	1					
ANR	687784	Identifier	i		687696	0					
ANR	687785	CompoundStatement		16:16:322:322	687696	1					
ANR	687786	ExpressionStatement	W ( vline )	277:3:5681:5690	687696	0	True				
ANR	687787	CallExpression	W ( vline )		687696	0					
ANR	687788	Callee	W		687696	0					
ANR	687789	Identifier	W		687696	0					
ANR	687790	ArgumentList	vline		687696	1					
ANR	687791	Argument	vline		687696	0					
ANR	687792	Identifier	vline		687696	0					
ANR	687793	ExpressionStatement	r_cons_break_pop ( )	280:1:5700:5719	687696	6	True				
ANR	687794	CallExpression	r_cons_break_pop ( )		687696	0					
ANR	687795	Callee	r_cons_break_pop		687696	0					
ANR	687796	Identifier	r_cons_break_pop		687696	0					
ANR	687797	ArgumentList			687696	1					
ANR	687798	ReturnType	static void		687696	1					
ANR	687799	Identifier	draw_vertical_line		687696	2					
ANR	687800	ParameterList	"RConsCanvas * c , int x , int y , int height , int dot_style"		687696	3					
ANR	687801	Parameter	RConsCanvas * c	261:32:5296:5309	687696	0	True				
ANR	687802	ParameterType	RConsCanvas *		687696	0					
ANR	687803	Identifier	c		687696	1					
ANR	687804	Parameter	int x	261:48:5312:5316	687696	1	True				
ANR	687805	ParameterType	int		687696	0					
ANR	687806	Identifier	x		687696	1					
ANR	687807	Parameter	int y	261:55:5319:5323	687696	2	True				
ANR	687808	ParameterType	int		687696	0					
ANR	687809	Identifier	y		687696	1					
ANR	687810	Parameter	int height	261:62:5326:5335	687696	3	True				
ANR	687811	ParameterType	int		687696	0					
ANR	687812	Identifier	height		687696	1					
ANR	687813	Parameter	int dot_style	261:74:5338:5350	687696	4	True				
ANR	687814	ParameterType	int		687696	0					
ANR	687815	Identifier	dot_style		687696	1					
ANR	687816	CFGEntryNode	ENTRY		687696		True				
ANR	687817	CFGExitNode	EXIT		687696		True				
ANR	687818	Symbol	c		687696						
ANR	687819	Symbol	dot_style		687696						
ANR	687820	Symbol	NULL		687696						
ANR	687821	Symbol	G		687696						
ANR	687822	Symbol	i		687696						
ANR	687823	Symbol	* c		687696						
ANR	687824	Symbol	c -> sx		687696						
ANR	687825	Symbol	c -> w		687696						
ANR	687826	Symbol	utf8_line_vert		687696						
ANR	687827	Symbol	r_cons_is_breaked		687696						
ANR	687828	Symbol	useUtf8		687696						
ANR	687829	Symbol	x		687696						
ANR	687830	Symbol	y		687696						
ANR	687831	Symbol	vline		687696						
ANR	687832	Symbol	height		687696						
ANR	687833	Function	r_cons_canvas_line_diagonal	283:0:5724:7200							
ANR	687834	FunctionDef	"r_cons_canvas_line_diagonal (RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style)"		687833	0					
ANR	687835	CompoundStatement		283:111:5835:7200	687833	0					
ANR	687836	IfStatement	if ( x == x2 || y == y2 )		687833	0					
ANR	687837	Condition	x == x2 || y == y2	284:5:5842:5859	687833	0	True				
ANR	687838	OrExpression	x == x2 || y == y2		687833	0		||			
ANR	687839	EqualityExpression	x == x2		687833	0		==			
ANR	687840	Identifier	x		687833	0					
ANR	687841	Identifier	x2		687833	1					
ANR	687842	EqualityExpression	y == y2		687833	1		==			
ANR	687843	Identifier	y		687833	0					
ANR	687844	Identifier	y2		687833	1					
ANR	687845	CompoundStatement		2:25:26:26	687833	1					
ANR	687846	ExpressionStatement	style -> dot_style = DOT_STYLE_NORMAL	285:2:5866:5901	687833	0	True				
ANR	687847	AssignmentExpression	style -> dot_style = DOT_STYLE_NORMAL		687833	0		=			
ANR	687848	PtrMemberAccess	style -> dot_style		687833	0					
ANR	687849	Identifier	style		687833	0					
ANR	687850	Identifier	dot_style		687833	1					
ANR	687851	Identifier	DOT_STYLE_NORMAL		687833	1					
ANR	687852	ExpressionStatement	"r_cons_canvas_line_square ( c , x , y + 1 , x2 , y2 , style )"	286:2:5905:5958	687833	1	True				
ANR	687853	CallExpression	"r_cons_canvas_line_square ( c , x , y + 1 , x2 , y2 , style )"		687833	0					
ANR	687854	Callee	r_cons_canvas_line_square		687833	0					
ANR	687855	Identifier	r_cons_canvas_line_square		687833	0					
ANR	687856	ArgumentList	c		687833	1					
ANR	687857	Argument	c		687833	0					
ANR	687858	Identifier	c		687833	0					
ANR	687859	Argument	x		687833	1					
ANR	687860	Identifier	x		687833	0					
ANR	687861	Argument	y + 1		687833	2					
ANR	687862	AdditiveExpression	y + 1		687833	0		+			
ANR	687863	Identifier	y		687833	0					
ANR	687864	PrimaryExpression	1		687833	1					
ANR	687865	Argument	x2		687833	3					
ANR	687866	Identifier	x2		687833	0					
ANR	687867	Argument	y2		687833	4					
ANR	687868	Identifier	y2		687833	0					
ANR	687869	Argument	style		687833	5					
ANR	687870	Identifier	style		687833	0					
ANR	687871	ReturnStatement	return ;	287:2:5962:5968	687833	2	True				
ANR	687872	ExpressionStatement	"apply_line_style ( c , x , y , x2 , y2 , style , 1 )"	289:1:5974:6018	687833	1	True				
ANR	687873	CallExpression	"apply_line_style ( c , x , y , x2 , y2 , style , 1 )"		687833	0					
ANR	687874	Callee	apply_line_style		687833	0					
ANR	687875	Identifier	apply_line_style		687833	0					
ANR	687876	ArgumentList	c		687833	1					
ANR	687877	Argument	c		687833	0					
ANR	687878	Identifier	c		687833	0					
ANR	687879	Argument	x		687833	1					
ANR	687880	Identifier	x		687833	0					
ANR	687881	Argument	y		687833	2					
ANR	687882	Identifier	y		687833	0					
ANR	687883	Argument	x2		687833	3					
ANR	687884	Identifier	x2		687833	0					
ANR	687885	Argument	y2		687833	4					
ANR	687886	Identifier	y2		687833	0					
ANR	687887	Argument	style		687833	5					
ANR	687888	Identifier	style		687833	0					
ANR	687889	Argument	1		687833	6					
ANR	687890	PrimaryExpression	1		687833	0					
ANR	687891	IfStatement	if ( y2 < y )		687833	2					
ANR	687892	Condition	y2 < y	290:5:6025:6030	687833	0	True				
ANR	687893	RelationalExpression	y2 < y		687833	0		<			
ANR	687894	Identifier	y2		687833	0					
ANR	687895	Identifier	y		687833	1					
ANR	687896	CompoundStatement		9:2:201:213	687833	1					
ANR	687897	IdentifierDeclStatement	int tmp = y2 ;	291:2:6037:6049	687833	0	True				
ANR	687898	IdentifierDecl	tmp = y2		687833	0					
ANR	687899	IdentifierDeclType	int		687833	0					
ANR	687900	Identifier	tmp		687833	1					
ANR	687901	AssignmentExpression	tmp = y2		687833	2		=			
ANR	687902	Identifier	y2		687833	0					
ANR	687903	Identifier	y2		687833	1					
ANR	687904	ExpressionStatement	y2 = y	292:2:6053:6059	687833	1	True				
ANR	687905	AssignmentExpression	y2 = y		687833	0		=			
ANR	687906	Identifier	y2		687833	0					
ANR	687907	Identifier	y		687833	1					
ANR	687908	ExpressionStatement	y = tmp	293:2:6063:6070	687833	2	True				
ANR	687909	AssignmentExpression	y = tmp		687833	0		=			
ANR	687910	Identifier	y		687833	0					
ANR	687911	Identifier	tmp		687833	1					
ANR	687912	ExpressionStatement	tmp = x2	294:2:6074:6082	687833	3	True				
ANR	687913	AssignmentExpression	tmp = x2		687833	0		=			
ANR	687914	Identifier	tmp		687833	0					
ANR	687915	Identifier	x2		687833	1					
ANR	687916	ExpressionStatement	x2 = x	295:2:6086:6092	687833	4	True				
ANR	687917	AssignmentExpression	x2 = x		687833	0		=			
ANR	687918	Identifier	x2		687833	0					
ANR	687919	Identifier	x		687833	1					
ANR	687920	ExpressionStatement	x = tmp	296:2:6096:6103	687833	5	True				
ANR	687921	AssignmentExpression	x = tmp		687833	0		=			
ANR	687922	Identifier	x		687833	0					
ANR	687923	Identifier	tmp		687833	1					
ANR	687924	IdentifierDeclStatement	char chizzle [ 2 ] = { 0 } ;	298:1:6109:6130	687833	3	True				
ANR	687925	IdentifierDecl	chizzle [ 2 ] = { 0 }		687833	0					
ANR	687926	IdentifierDeclType	char [ 2 ]		687833	0					
ANR	687927	Identifier	chizzle		687833	1					
ANR	687928	PrimaryExpression	2		687833	2					
ANR	687929	AssignmentExpression	chizzle [ 2 ] = { 0 }		687833	3		=			
ANR	687930	Identifier	chizzle		687833	0					
ANR	687931	InitializerList	0		687833	1					
ANR	687932	PrimaryExpression	0		687833	0					
ANR	687933	IdentifierDeclStatement	int dx = abs ( x2 - x ) ;	300:1:6170:6189	687833	4	True				
ANR	687934	IdentifierDecl	dx = abs ( x2 - x )		687833	0					
ANR	687935	IdentifierDeclType	int		687833	0					
ANR	687936	Identifier	dx		687833	1					
ANR	687937	AssignmentExpression	dx = abs ( x2 - x )		687833	2		=			
ANR	687938	Identifier	dx		687833	0					
ANR	687939	CallExpression	abs ( x2 - x )		687833	1					
ANR	687940	Callee	abs		687833	0					
ANR	687941	Identifier	abs		687833	0					
ANR	687942	ArgumentList	x2 - x		687833	1					
ANR	687943	Argument	x2 - x		687833	0					
ANR	687944	AdditiveExpression	x2 - x		687833	0		-			
ANR	687945	Identifier	x2		687833	0					
ANR	687946	Identifier	x		687833	1					
ANR	687947	IdentifierDeclStatement	int dy = abs ( y2 - y ) ;	301:8:6199:6218	687833	5	True				
ANR	687948	IdentifierDecl	dy = abs ( y2 - y )		687833	0					
ANR	687949	IdentifierDeclType	int		687833	0					
ANR	687950	Identifier	dy		687833	1					
ANR	687951	AssignmentExpression	dy = abs ( y2 - y )		687833	2		=			
ANR	687952	Identifier	dy		687833	0					
ANR	687953	CallExpression	abs ( y2 - y )		687833	1					
ANR	687954	Callee	abs		687833	0					
ANR	687955	Identifier	abs		687833	0					
ANR	687956	ArgumentList	y2 - y		687833	1					
ANR	687957	Argument	y2 - y		687833	0					
ANR	687958	AdditiveExpression	y2 - y		687833	0		-			
ANR	687959	Identifier	y2		687833	0					
ANR	687960	Identifier	y		687833	1					
ANR	687961	IdentifierDeclStatement	int sx = ( x < x2 ) ? 1 : - 1 ;	303:1:6232:6258	687833	6	True				
ANR	687962	IdentifierDecl	sx = ( x < x2 ) ? 1 : - 1		687833	0					
ANR	687963	IdentifierDeclType	int		687833	0					
ANR	687964	Identifier	sx		687833	1					
ANR	687965	AssignmentExpression	sx = ( x < x2 ) ? 1 : - 1		687833	2		=			
ANR	687966	Identifier	sx		687833	0					
ANR	687967	ConditionalExpression	( x < x2 ) ? 1 : - 1		687833	1					
ANR	687968	Condition	x < x2		687833	0					
ANR	687969	RelationalExpression	x < x2		687833	0		<			
ANR	687970	Identifier	x		687833	0					
ANR	687971	Identifier	x2		687833	1					
ANR	687972	PrimaryExpression	1		687833	1					
ANR	687973	UnaryOperationExpression	- 1		687833	2					
ANR	687974	UnaryOperator	-		687833	0					
ANR	687975	PrimaryExpression	1		687833	1					
ANR	687976	IdentifierDeclStatement	int sy = ( y < y2 ) ? 1 : - 1 ;	304:1:6261:6287	687833	7	True				
ANR	687977	IdentifierDecl	sy = ( y < y2 ) ? 1 : - 1		687833	0					
ANR	687978	IdentifierDeclType	int		687833	0					
ANR	687979	Identifier	sy		687833	1					
ANR	687980	AssignmentExpression	sy = ( y < y2 ) ? 1 : - 1		687833	2		=			
ANR	687981	Identifier	sy		687833	0					
ANR	687982	ConditionalExpression	( y < y2 ) ? 1 : - 1		687833	1					
ANR	687983	Condition	y < y2		687833	0					
ANR	687984	RelationalExpression	y < y2		687833	0		<			
ANR	687985	Identifier	y		687833	0					
ANR	687986	Identifier	y2		687833	1					
ANR	687987	PrimaryExpression	1		687833	1					
ANR	687988	UnaryOperationExpression	- 1		687833	2					
ANR	687989	UnaryOperator	-		687833	0					
ANR	687990	PrimaryExpression	1		687833	1					
ANR	687991	IdentifierDeclStatement	int err = ( dx > ( dy ? dx : - dy ) ) / 2 ;	306:1:6291:6323	687833	8	True				
ANR	687992	IdentifierDecl	err = ( dx > ( dy ? dx : - dy ) ) / 2		687833	0					
ANR	687993	IdentifierDeclType	int		687833	0					
ANR	687994	Identifier	err		687833	1					
ANR	687995	AssignmentExpression	err = ( dx > ( dy ? dx : - dy ) ) / 2		687833	2		=			
ANR	687996	Identifier	err		687833	0					
ANR	687997	MultiplicativeExpression	( dx > ( dy ? dx : - dy ) ) / 2		687833	1		/			
ANR	687998	RelationalExpression	dx > ( dy ? dx : - dy )		687833	0		>			
ANR	687999	Identifier	dx		687833	0					
ANR	688000	ConditionalExpression	dy ? dx : - dy		687833	1					
ANR	688001	Condition	dy		687833	0					
ANR	688002	Identifier	dy		687833	0					
ANR	688003	Identifier	dx		687833	1					
ANR	688004	UnaryOperationExpression	- dy		687833	2					
ANR	688005	UnaryOperator	-		687833	0					
ANR	688006	Identifier	dy		687833	1					
ANR	688007	PrimaryExpression	2		687833	1					
ANR	688008	IdentifierDeclStatement	int e2 ;	307:1:6326:6332	687833	9	True				
ANR	688009	IdentifierDecl	e2		687833	0					
ANR	688010	IdentifierDeclType	int		687833	0					
ANR	688011	Identifier	e2		687833	1					
ANR	688012	Label	loop :	310:0:6388:6392	687833	10	True				
ANR	688013	Identifier	loop		687833	0					
ANR	688014	ExpressionStatement	e2 = err	311:1:6395:6403	687833	11	True				
ANR	688015	AssignmentExpression	e2 = err		687833	0		=			
ANR	688016	Identifier	e2		687833	0					
ANR	688017	Identifier	err		687833	1					
ANR	688018	IfStatement	if ( e2 > - dx )		687833	12					
ANR	688019	Condition	e2 > - dx	312:5:6410:6417	687833	0	True				
ANR	688020	RelationalExpression	e2 > - dx		687833	0		>			
ANR	688021	Identifier	e2		687833	0					
ANR	688022	UnaryOperationExpression	- dx		687833	1					
ANR	688023	UnaryOperator	-		687833	0					
ANR	688024	Identifier	dx		687833	1					
ANR	688025	CompoundStatement		30:15:584:584	687833	1					
ANR	688026	ExpressionStatement	* chizzle = '_'	313:2:6424:6438	687833	0	True				
ANR	688027	AssignmentExpression	* chizzle = '_'		687833	0		=			
ANR	688028	UnaryOperationExpression	* chizzle		687833	0					
ANR	688029	UnaryOperator	*		687833	0					
ANR	688030	Identifier	chizzle		687833	1					
ANR	688031	PrimaryExpression	'_'		687833	1					
ANR	688032	ExpressionStatement	err -= dy	314:2:6442:6451	687833	1	True				
ANR	688033	AssignmentExpression	err -= dy		687833	0		-=			
ANR	688034	Identifier	err		687833	0					
ANR	688035	Identifier	dy		687833	1					
ANR	688036	ExpressionStatement	x += sx	315:2:6455:6460	687833	2	True				
ANR	688037	AssignmentExpression	x += sx		687833	0		+=			
ANR	688038	Identifier	x		687833	0					
ANR	688039	Identifier	sx		687833	1					
ANR	688040	IfStatement	if ( e2 < dy )		687833	13					
ANR	688041	Condition	e2 < dy	317:5:6470:6476	687833	0	True				
ANR	688042	RelationalExpression	e2 < dy		687833	0		<			
ANR	688043	Identifier	e2		687833	0					
ANR	688044	Identifier	dy		687833	1					
ANR	688045	CompoundStatement		35:14:643:643	687833	1					
ANR	688046	ExpressionStatement	* chizzle = '|'	318:2:6483:6495	687833	0	True				
ANR	688047	AssignmentExpression	* chizzle = '|'		687833	0		=			
ANR	688048	UnaryOperationExpression	* chizzle		687833	0					
ANR	688049	UnaryOperator	*		687833	0					
ANR	688050	Identifier	chizzle		687833	1					
ANR	688051	PrimaryExpression	'|'		687833	1					
ANR	688052	ExpressionStatement	err += dx	319:2:6499:6508	687833	1	True				
ANR	688053	AssignmentExpression	err += dx		687833	0		+=			
ANR	688054	Identifier	err		687833	0					
ANR	688055	Identifier	dx		687833	1					
ANR	688056	ExpressionStatement	y += sy	320:2:6512:6519	687833	2	True				
ANR	688057	AssignmentExpression	y += sy		687833	0		+=			
ANR	688058	Identifier	y		687833	0					
ANR	688059	Identifier	sy		687833	1					
ANR	688060	IfStatement	if ( ( e2 < dy ) && ( e2 > - dx ) )		687833	14					
ANR	688061	Condition	( e2 < dy ) && ( e2 > - dx )	322:5:6529:6551	687833	0	True				
ANR	688062	AndExpression	( e2 < dy ) && ( e2 > - dx )		687833	0		&&			
ANR	688063	RelationalExpression	e2 < dy		687833	0		<			
ANR	688064	Identifier	e2		687833	0					
ANR	688065	Identifier	dy		687833	1					
ANR	688066	RelationalExpression	e2 > - dx		687833	1		>			
ANR	688067	Identifier	e2		687833	0					
ANR	688068	UnaryOperationExpression	- dx		687833	1					
ANR	688069	UnaryOperator	-		687833	0					
ANR	688070	Identifier	dx		687833	1					
ANR	688071	CompoundStatement		40:30:718:718	687833	1					
ANR	688072	IfStatement	if ( sy > 0 )		687833	0					
ANR	688073	Condition	sy > 0	323:6:6562:6567	687833	0	True				
ANR	688074	RelationalExpression	sy > 0		687833	0		>			
ANR	688075	Identifier	sy		687833	0					
ANR	688076	PrimaryExpression	0		687833	1					
ANR	688077	CompoundStatement		41:14:734:734	687833	1					
ANR	688078	ExpressionStatement	* chizzle = ( sx > 0 ) ? '\\\\' : '/'	324:3:6575:6603	687833	0	True				
ANR	688079	AssignmentExpression	* chizzle = ( sx > 0 ) ? '\\\\' : '/'		687833	0		=			
ANR	688080	UnaryOperationExpression	* chizzle		687833	0					
ANR	688081	UnaryOperator	*		687833	0					
ANR	688082	Identifier	chizzle		687833	1					
ANR	688083	ConditionalExpression	( sx > 0 ) ? '\\\\' : '/'		687833	1					
ANR	688084	Condition	sx > 0		687833	0					
ANR	688085	RelationalExpression	sx > 0		687833	0		>			
ANR	688086	Identifier	sx		687833	0					
ANR	688087	PrimaryExpression	0		687833	1					
ANR	688088	PrimaryExpression	'\\\\'		687833	1					
ANR	688089	PrimaryExpression	'/'		687833	2					
ANR	688090	ElseStatement	else		687833	0					
ANR	688091	CompoundStatement		43:9:778:778	687833	0					
ANR	688092	ExpressionStatement	* chizzle = ( sx > 0 ) ? '/' : '\\\\'	326:3:6619:6647	687833	0	True				
ANR	688093	AssignmentExpression	* chizzle = ( sx > 0 ) ? '/' : '\\\\'		687833	0		=			
ANR	688094	UnaryOperationExpression	* chizzle		687833	0					
ANR	688095	UnaryOperator	*		687833	0					
ANR	688096	Identifier	chizzle		687833	1					
ANR	688097	ConditionalExpression	( sx > 0 ) ? '/' : '\\\\'		687833	1					
ANR	688098	Condition	sx > 0		687833	0					
ANR	688099	RelationalExpression	sx > 0		687833	0		>			
ANR	688100	Identifier	sx		687833	0					
ANR	688101	PrimaryExpression	0		687833	1					
ANR	688102	PrimaryExpression	'/'		687833	1					
ANR	688103	PrimaryExpression	'\\\\'		687833	2					
ANR	688104	IfStatement	if ( ! ( x == x2 && y == y2 ) )		687833	15					
ANR	688105	Condition	! ( x == x2 && y == y2 )	329:5:6661:6681	687833	0	True				
ANR	688106	UnaryOperationExpression	! ( x == x2 && y == y2 )		687833	0					
ANR	688107	UnaryOperator	!		687833	0					
ANR	688108	AndExpression	x == x2 && y == y2		687833	1		&&			
ANR	688109	EqualityExpression	x == x2		687833	0		==			
ANR	688110	Identifier	x		687833	0					
ANR	688111	Identifier	x2		687833	1					
ANR	688112	EqualityExpression	y == y2		687833	1		==			
ANR	688113	Identifier	y		687833	0					
ANR	688114	Identifier	y2		687833	1					
ANR	688115	CompoundStatement		48:2:852:895	687833	1					
ANR	688116	IdentifierDeclStatement	int i = ( * chizzle == '_' && sy < 0 ) ? 1 : 0 ;	330:2:6688:6731	687833	0	True				
ANR	688117	IdentifierDecl	i = ( * chizzle == '_' && sy < 0 ) ? 1 : 0		687833	0					
ANR	688118	IdentifierDeclType	int		687833	0					
ANR	688119	Identifier	i		687833	1					
ANR	688120	AssignmentExpression	i = ( * chizzle == '_' && sy < 0 ) ? 1 : 0		687833	2		=			
ANR	688121	Identifier	i		687833	0					
ANR	688122	ConditionalExpression	( * chizzle == '_' && sy < 0 ) ? 1 : 0		687833	1					
ANR	688123	Condition	* chizzle == '_' && sy < 0		687833	0					
ANR	688124	AndExpression	* chizzle == '_' && sy < 0		687833	0		&&			
ANR	688125	EqualityExpression	* chizzle == '_'		687833	0		==			
ANR	688126	UnaryOperationExpression	* chizzle		687833	0					
ANR	688127	UnaryOperator	*		687833	0					
ANR	688128	Identifier	chizzle		687833	1					
ANR	688129	PrimaryExpression	'_'		687833	1					
ANR	688130	RelationalExpression	sy < 0		687833	1		<			
ANR	688131	Identifier	sy		687833	0					
ANR	688132	PrimaryExpression	0		687833	1					
ANR	688133	PrimaryExpression	1		687833	1					
ANR	688134	PrimaryExpression	0		687833	2					
ANR	688135	IfStatement	"if ( G ( x , y - i ) )"		687833	1					
ANR	688136	Condition	"G ( x , y - i )"	331:6:6739:6749	687833	0	True				
ANR	688137	CallExpression	"G ( x , y - i )"		687833	0					
ANR	688138	Callee	G		687833	0					
ANR	688139	Identifier	G		687833	0					
ANR	688140	ArgumentList	x		687833	1					
ANR	688141	Argument	x		687833	0					
ANR	688142	Identifier	x		687833	0					
ANR	688143	Argument	y - i		687833	1					
ANR	688144	AdditiveExpression	y - i		687833	0		-			
ANR	688145	Identifier	y		687833	0					
ANR	688146	Identifier	i		687833	1					
ANR	688147	CompoundStatement		49:19:916:916	687833	1					
ANR	688148	IfStatement	if ( useUtf8 )		687833	0					
ANR	688149	Condition	useUtf8	332:7:6761:6767	687833	0	True				
ANR	688150	Identifier	useUtf8		687833	0					
ANR	688151	CompoundStatement		50:16:934:934	687833	1					
ANR	688152	SwitchStatement	switch ( * chizzle )		687833	0					
ANR	688153	Condition	* chizzle	333:12:6784:6791	687833	0	True				
ANR	688154	UnaryOperationExpression	* chizzle		687833	0					
ANR	688155	UnaryOperator	*		687833	0					
ANR	688156	Identifier	chizzle		687833	1					
ANR	688157	CompoundStatement		51:22:958:958	687833	1					
ANR	688158	Label	case '/' :	334:4:6800:6808	687833	0	True				
ANR	688159	ExpressionStatement	"W ( ""???"" )"	335:5:6815:6823	687833	1	True				
ANR	688160	CallExpression	"W ( ""???"" )"		687833	0					
ANR	688161	Callee	W		687833	0					
ANR	688162	Identifier	W		687833	0					
ANR	688163	ArgumentList	"""???"""		687833	1					
ANR	688164	Argument	"""???"""		687833	0					
ANR	688165	PrimaryExpression	"""???"""		687833	0					
ANR	688166	BreakStatement	break ;	336:5:6830:6835	687833	2	True				
ANR	688167	Label	case '\\\\' :	337:4:6841:6850	687833	3	True				
ANR	688168	ExpressionStatement	"W ( ""???"" )"	338:5:6857:6865	687833	4	True				
ANR	688169	CallExpression	"W ( ""???"" )"		687833	0					
ANR	688170	Callee	W		687833	0					
ANR	688171	Identifier	W		687833	0					
ANR	688172	ArgumentList	"""???"""		687833	1					
ANR	688173	Argument	"""???"""		687833	0					
ANR	688174	PrimaryExpression	"""???"""		687833	0					
ANR	688175	BreakStatement	break ;	339:5:6872:6877	687833	5	True				
ANR	688176	Label	case '|' :	340:4:6883:6891	687833	6	True				
ANR	688177	ExpressionStatement	"W ( ""???"" )"	341:5:6898:6906	687833	7	True				
ANR	688178	CallExpression	"W ( ""???"" )"		687833	0					
ANR	688179	Callee	W		687833	0					
ANR	688180	Identifier	W		687833	0					
ANR	688181	ArgumentList	"""???"""		687833	1					
ANR	688182	Argument	"""???"""		687833	0					
ANR	688183	PrimaryExpression	"""???"""		687833	0					
ANR	688184	BreakStatement	break ;	342:5:6913:6918	687833	8	True				
ANR	688185	Label	case '_' :	343:4:6924:6932	687833	9	True				
ANR	688186	ExpressionStatement	"W ( ""???"" )"	344:5:6939:6947	687833	10	True				
ANR	688187	CallExpression	"W ( ""???"" )"		687833	0					
ANR	688188	Callee	W		687833	0					
ANR	688189	Identifier	W		687833	0					
ANR	688190	ArgumentList	"""???"""		687833	1					
ANR	688191	Argument	"""???"""		687833	0					
ANR	688192	PrimaryExpression	"""???"""		687833	0					
ANR	688193	BreakStatement	break ;	345:5:6954:6959	687833	11	True				
ANR	688194	Label	default :	346:4:6965:6972	687833	12	True				
ANR	688195	Identifier	default		687833	0					
ANR	688196	ExpressionStatement	"W ( ""?"" )"	347:5:6979:6985	687833	13	True				
ANR	688197	CallExpression	"W ( ""?"" )"		687833	0					
ANR	688198	Callee	W		687833	0					
ANR	688199	Identifier	W		687833	0					
ANR	688200	ArgumentList	"""?"""		687833	1					
ANR	688201	Argument	"""?"""		687833	0					
ANR	688202	PrimaryExpression	"""?"""		687833	0					
ANR	688203	BreakStatement	break ;	348:5:6992:6997	687833	14	True				
ANR	688204	ElseStatement	else		687833	0					
ANR	688205	CompoundStatement		68:10:1179:1179	687833	0					
ANR	688206	ExpressionStatement	W ( chizzle )	351:4:7021:7031	687833	0	True				
ANR	688207	CallExpression	W ( chizzle )		687833	0					
ANR	688208	Callee	W		687833	0					
ANR	688209	Identifier	W		687833	0					
ANR	688210	ArgumentList	chizzle		687833	1					
ANR	688211	Argument	chizzle		687833	0					
ANR	688212	Identifier	chizzle		687833	0					
ANR	688213	GotoStatement	goto loop ;	354:2:7044:7053	687833	2	True				
ANR	688214	Identifier	loop		687833	0					
ANR	688215	IfStatement	if ( dx )		687833	16					
ANR	688216	Condition	dx	356:5:7063:7064	687833	0	True				
ANR	688217	Identifier	dx		687833	0					
ANR	688218	CompoundStatement		74:9:1231:1231	687833	1					
ANR	688219	IfStatement	if ( dy && ( dx / dy ) < 1 )		687833	0					
ANR	688220	Condition	dy && ( dx / dy ) < 1	357:6:7075:7093	687833	0	True				
ANR	688221	AndExpression	dy && ( dx / dy ) < 1		687833	0		&&			
ANR	688222	Identifier	dy		687833	0					
ANR	688223	RelationalExpression	( dx / dy ) < 1		687833	1		<			
ANR	688224	MultiplicativeExpression	dx / dy		687833	0		/			
ANR	688225	Identifier	dx		687833	0					
ANR	688226	Identifier	dy		687833	1					
ANR	688227	PrimaryExpression	1		687833	1					
ANR	688228	CompoundStatement		75:27:1260:1260	687833	1					
ANR	688229	IfStatement	"if ( G ( x , y ) )"		687833	0					
ANR	688230	Condition	"G ( x , y )"	358:7:7105:7111	687833	0	True				
ANR	688231	CallExpression	"G ( x , y )"		687833	0					
ANR	688232	Callee	G		687833	0					
ANR	688233	Identifier	G		687833	0					
ANR	688234	ArgumentList	x		687833	1					
ANR	688235	Argument	x		687833	0					
ANR	688236	Identifier	x		687833	0					
ANR	688237	Argument	y		687833	1					
ANR	688238	Identifier	y		687833	0					
ANR	688239	CompoundStatement		76:16:1278:1278	687833	1					
ANR	688240	ExpressionStatement	"W ( ""|"" )"	359:4:7120:7126	687833	0	True				
ANR	688241	CallExpression	"W ( ""|"" )"		687833	0					
ANR	688242	Callee	W		687833	0					
ANR	688243	Identifier	W		687833	0					
ANR	688244	ArgumentList	"""|"""		687833	1					
ANR	688245	Argument	"""|"""		687833	0					
ANR	688246	PrimaryExpression	"""|"""		687833	0					
ANR	688247	IfStatement	"if ( G ( x , y + 1 ) )"		687833	1					
ANR	688248	Condition	"G ( x , y + 1 )"	362:6:7143:7153	687833	0	True				
ANR	688249	CallExpression	"G ( x , y + 1 )"		687833	0					
ANR	688250	Callee	G		687833	0					
ANR	688251	Identifier	G		687833	0					
ANR	688252	ArgumentList	x		687833	1					
ANR	688253	Argument	x		687833	0					
ANR	688254	Identifier	x		687833	0					
ANR	688255	Argument	y + 1		687833	1					
ANR	688256	AdditiveExpression	y + 1		687833	0		+			
ANR	688257	Identifier	y		687833	0					
ANR	688258	PrimaryExpression	1		687833	1					
ANR	688259	CompoundStatement		80:19:1320:1320	687833	1					
ANR	688260	ExpressionStatement	"W ( ""|"" )"	363:3:7161:7167	687833	0	True				
ANR	688261	CallExpression	"W ( ""|"" )"		687833	0					
ANR	688262	Callee	W		687833	0					
ANR	688263	Identifier	W		687833	0					
ANR	688264	ArgumentList	"""|"""		687833	1					
ANR	688265	Argument	"""|"""		687833	0					
ANR	688266	PrimaryExpression	"""|"""		687833	0					
ANR	688267	ExpressionStatement	c -> attr = Color_RESET	366:1:7177:7198	687833	17	True				
ANR	688268	AssignmentExpression	c -> attr = Color_RESET		687833	0		=			
ANR	688269	PtrMemberAccess	c -> attr		687833	0					
ANR	688270	Identifier	c		687833	0					
ANR	688271	Identifier	attr		687833	1					
ANR	688272	Identifier	Color_RESET		687833	1					
ANR	688273	ReturnType	R_API void		687833	1					
ANR	688274	Identifier	r_cons_canvas_line_diagonal		687833	2					
ANR	688275	ParameterList	"RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style"		687833	3					
ANR	688276	Parameter	RConsCanvas * c	283:40:5764:5777	687833	0	True				
ANR	688277	ParameterType	RConsCanvas *		687833	0					
ANR	688278	Identifier	c		687833	1					
ANR	688279	Parameter	int x	283:56:5780:5784	687833	1	True				
ANR	688280	ParameterType	int		687833	0					
ANR	688281	Identifier	x		687833	1					
ANR	688282	Parameter	int y	283:63:5787:5791	687833	2	True				
ANR	688283	ParameterType	int		687833	0					
ANR	688284	Identifier	y		687833	1					
ANR	688285	Parameter	int x2	283:70:5794:5799	687833	3	True				
ANR	688286	ParameterType	int		687833	0					
ANR	688287	Identifier	x2		687833	1					
ANR	688288	Parameter	int y2	283:78:5802:5807	687833	4	True				
ANR	688289	ParameterType	int		687833	0					
ANR	688290	Identifier	y2		687833	1					
ANR	688291	Parameter	RCanvasLineStyle * style	283:86:5810:5832	687833	5	True				
ANR	688292	ParameterType	RCanvasLineStyle *		687833	0					
ANR	688293	Identifier	style		687833	1					
ANR	688294	CFGEntryNode	ENTRY		687833		True				
ANR	688295	CFGExitNode	EXIT		687833		True				
ANR	688296	Symbol	* chizzle		687833						
ANR	688297	Symbol	G		687833						
ANR	688298	Symbol	Color_RESET		687833						
ANR	688299	Symbol	* style		687833						
ANR	688300	Symbol	c -> attr		687833						
ANR	688301	Symbol	style -> dot_style		687833						
ANR	688302	Symbol	dx		687833						
ANR	688303	Symbol	dy		687833						
ANR	688304	Symbol	tmp		687833						
ANR	688305	Symbol	y2		687833						
ANR	688306	Symbol	chizzle		687833						
ANR	688307	Symbol	c		687833						
ANR	688308	Symbol	err		687833						
ANR	688309	Symbol	sx		687833						
ANR	688310	Symbol	sy		687833						
ANR	688311	Symbol	i		687833						
ANR	688312	Symbol	e2		687833						
ANR	688313	Symbol	* c		687833						
ANR	688314	Symbol	abs		687833						
ANR	688315	Symbol	useUtf8		687833						
ANR	688316	Symbol	x		687833						
ANR	688317	Symbol	y		687833						
ANR	688318	Symbol	x2		687833						
ANR	688319	Symbol	style		687833						
ANR	688320	Symbol	DOT_STYLE_NORMAL		687833						
ANR	688321	Function	r_cons_canvas_line_square	369:0:7203:8195							
ANR	688322	FunctionDef	"r_cons_canvas_line_square (RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style)"		688321	0					
ANR	688323	CompoundStatement		369:109:7312:8195	688321	0					
ANR	688324	IdentifierDeclStatement	"int min_x = R_MIN ( x , x2 ) ;"	370:1:7315:7340	688321	0	True				
ANR	688325	IdentifierDecl	"min_x = R_MIN ( x , x2 )"		688321	0					
ANR	688326	IdentifierDeclType	int		688321	0					
ANR	688327	Identifier	min_x		688321	1					
ANR	688328	AssignmentExpression	"min_x = R_MIN ( x , x2 )"		688321	2		=			
ANR	688329	Identifier	min_x		688321	0					
ANR	688330	CallExpression	"R_MIN ( x , x2 )"		688321	1					
ANR	688331	Callee	R_MIN		688321	0					
ANR	688332	Identifier	R_MIN		688321	0					
ANR	688333	ArgumentList	x		688321	1					
ANR	688334	Argument	x		688321	0					
ANR	688335	Identifier	x		688321	0					
ANR	688336	Argument	x2		688321	1					
ANR	688337	Identifier	x2		688321	0					
ANR	688338	IdentifierDeclStatement	int diff_x = R_ABS ( x - x2 ) ;	371:1:7343:7370	688321	1	True				
ANR	688339	IdentifierDecl	diff_x = R_ABS ( x - x2 )		688321	0					
ANR	688340	IdentifierDeclType	int		688321	0					
ANR	688341	Identifier	diff_x		688321	1					
ANR	688342	AssignmentExpression	diff_x = R_ABS ( x - x2 )		688321	2		=			
ANR	688343	Identifier	diff_x		688321	0					
ANR	688344	CallExpression	R_ABS ( x - x2 )		688321	1					
ANR	688345	Callee	R_ABS		688321	0					
ANR	688346	Identifier	R_ABS		688321	0					
ANR	688347	ArgumentList	x - x2		688321	1					
ANR	688348	Argument	x - x2		688321	0					
ANR	688349	AdditiveExpression	x - x2		688321	0		-			
ANR	688350	Identifier	x		688321	0					
ANR	688351	Identifier	x2		688321	1					
ANR	688352	IdentifierDeclStatement	int diff_y = R_ABS ( y - y2 ) ;	372:1:7373:7400	688321	2	True				
ANR	688353	IdentifierDecl	diff_y = R_ABS ( y - y2 )		688321	0					
ANR	688354	IdentifierDeclType	int		688321	0					
ANR	688355	Identifier	diff_y		688321	1					
ANR	688356	AssignmentExpression	diff_y = R_ABS ( y - y2 )		688321	2		=			
ANR	688357	Identifier	diff_y		688321	0					
ANR	688358	CallExpression	R_ABS ( y - y2 )		688321	1					
ANR	688359	Callee	R_ABS		688321	0					
ANR	688360	Identifier	R_ABS		688321	0					
ANR	688361	ArgumentList	y - y2		688321	1					
ANR	688362	Argument	y - y2		688321	0					
ANR	688363	AdditiveExpression	y - y2		688321	0		-			
ANR	688364	Identifier	y		688321	0					
ANR	688365	Identifier	y2		688321	1					
ANR	688366	ExpressionStatement	"apply_line_style ( c , x , y , x2 , y2 , style , 1 )"	374:1:7404:7448	688321	3	True				
ANR	688367	CallExpression	"apply_line_style ( c , x , y , x2 , y2 , style , 1 )"		688321	0					
ANR	688368	Callee	apply_line_style		688321	0					
ANR	688369	Identifier	apply_line_style		688321	0					
ANR	688370	ArgumentList	c		688321	1					
ANR	688371	Argument	c		688321	0					
ANR	688372	Identifier	c		688321	0					
ANR	688373	Argument	x		688321	1					
ANR	688374	Identifier	x		688321	0					
ANR	688375	Argument	y		688321	2					
ANR	688376	Identifier	y		688321	0					
ANR	688377	Argument	x2		688321	3					
ANR	688378	Identifier	x2		688321	0					
ANR	688379	Argument	y2		688321	4					
ANR	688380	Identifier	y2		688321	0					
ANR	688381	Argument	style		688321	5					
ANR	688382	Identifier	style		688321	0					
ANR	688383	Argument	1		688321	6					
ANR	688384	PrimaryExpression	1		688321	0					
ANR	688385	IfStatement	if ( y2 - y > 1 )		688321	4					
ANR	688386	Condition	y2 - y > 1	378:5:7516:7525	688321	0	True				
ANR	688387	RelationalExpression	y2 - y > 1		688321	0		>			
ANR	688388	AdditiveExpression	y2 - y		688321	0		-			
ANR	688389	Identifier	y2		688321	0					
ANR	688390	Identifier	y		688321	1					
ANR	688391	PrimaryExpression	1		688321	1					
ANR	688392	CompoundStatement		14:2:311:360	688321	1					
ANR	688393	IdentifierDeclStatement	int hl = diff_y / 2 - 1 ;	379:2:7532:7555	688321	0	True				
ANR	688394	IdentifierDecl	hl = diff_y / 2 - 1		688321	0					
ANR	688395	IdentifierDeclType	int		688321	0					
ANR	688396	Identifier	hl		688321	1					
ANR	688397	AssignmentExpression	hl = diff_y / 2 - 1		688321	2		=			
ANR	688398	Identifier	hl		688321	0					
ANR	688399	AdditiveExpression	diff_y / 2 - 1		688321	1		-			
ANR	688400	MultiplicativeExpression	diff_y / 2		688321	0		/			
ANR	688401	Identifier	diff_y		688321	0					
ANR	688402	PrimaryExpression	2		688321	1					
ANR	688403	PrimaryExpression	1		688321	1					
ANR	688404	IdentifierDeclStatement	int hl2 = diff_y - hl ;	380:2:7559:7580	688321	1	True				
ANR	688405	IdentifierDecl	hl2 = diff_y - hl		688321	0					
ANR	688406	IdentifierDeclType	int		688321	0					
ANR	688407	Identifier	hl2		688321	1					
ANR	688408	AssignmentExpression	hl2 = diff_y - hl		688321	2		=			
ANR	688409	Identifier	hl2		688321	0					
ANR	688410	AdditiveExpression	diff_y - hl		688321	1		-			
ANR	688411	Identifier	diff_y		688321	0					
ANR	688412	Identifier	hl		688321	1					
ANR	688413	IdentifierDeclStatement	int w = diff_x == 0 ? 0 : diff_x + 1 ;	381:2:7584:7620	688321	2	True				
ANR	688414	IdentifierDecl	w = diff_x == 0 ? 0 : diff_x + 1		688321	0					
ANR	688415	IdentifierDeclType	int		688321	0					
ANR	688416	Identifier	w		688321	1					
ANR	688417	AssignmentExpression	w = diff_x == 0 ? 0 : diff_x + 1		688321	2		=			
ANR	688418	Identifier	w		688321	0					
ANR	688419	ConditionalExpression	diff_x == 0 ? 0 : diff_x + 1		688321	1					
ANR	688420	Condition	diff_x == 0		688321	0					
ANR	688421	EqualityExpression	diff_x == 0		688321	0		==			
ANR	688422	Identifier	diff_x		688321	0					
ANR	688423	PrimaryExpression	0		688321	1					
ANR	688424	PrimaryExpression	0		688321	1					
ANR	688425	AdditiveExpression	diff_x + 1		688321	2		+			
ANR	688426	Identifier	diff_x		688321	0					
ANR	688427	PrimaryExpression	1		688321	1					
ANR	688428	IdentifierDeclStatement	int apex_style = min_x == x ? APEX_DOT : DOT_APEX ;	382:2:7624:7673	688321	3	True				
ANR	688429	IdentifierDecl	apex_style = min_x == x ? APEX_DOT : DOT_APEX		688321	0					
ANR	688430	IdentifierDeclType	int		688321	0					
ANR	688431	Identifier	apex_style		688321	1					
ANR	688432	AssignmentExpression	apex_style = min_x == x ? APEX_DOT : DOT_APEX		688321	2		=			
ANR	688433	Identifier	apex_style		688321	0					
ANR	688434	ConditionalExpression	min_x == x ? APEX_DOT : DOT_APEX		688321	1					
ANR	688435	Condition	min_x == x		688321	0					
ANR	688436	EqualityExpression	min_x == x		688321	0		==			
ANR	688437	Identifier	min_x		688321	0					
ANR	688438	Identifier	x		688321	1					
ANR	688439	Identifier	APEX_DOT		688321	1					
ANR	688440	Identifier	DOT_APEX		688321	2					
ANR	688441	ExpressionStatement	"draw_vertical_line ( c , x , y + 1 , hl , style -> dot_style )"	383:2:7677:7731	688321	4	True				
ANR	688442	CallExpression	"draw_vertical_line ( c , x , y + 1 , hl , style -> dot_style )"		688321	0					
ANR	688443	Callee	draw_vertical_line		688321	0					
ANR	688444	Identifier	draw_vertical_line		688321	0					
ANR	688445	ArgumentList	c		688321	1					
ANR	688446	Argument	c		688321	0					
ANR	688447	Identifier	c		688321	0					
ANR	688448	Argument	x		688321	1					
ANR	688449	Identifier	x		688321	0					
ANR	688450	Argument	y + 1		688321	2					
ANR	688451	AdditiveExpression	y + 1		688321	0		+			
ANR	688452	Identifier	y		688321	0					
ANR	688453	PrimaryExpression	1		688321	1					
ANR	688454	Argument	hl		688321	3					
ANR	688455	Identifier	hl		688321	0					
ANR	688456	Argument	style -> dot_style		688321	4					
ANR	688457	PtrMemberAccess	style -> dot_style		688321	0					
ANR	688458	Identifier	style		688321	0					
ANR	688459	Identifier	dot_style		688321	1					
ANR	688460	ExpressionStatement	"draw_vertical_line ( c , x2 , y + hl + 1 , hl2 , style -> dot_style )"	384:2:7735:7796	688321	5	True				
ANR	688461	CallExpression	"draw_vertical_line ( c , x2 , y + hl + 1 , hl2 , style -> dot_style )"		688321	0					
ANR	688462	Callee	draw_vertical_line		688321	0					
ANR	688463	Identifier	draw_vertical_line		688321	0					
ANR	688464	ArgumentList	c		688321	1					
ANR	688465	Argument	c		688321	0					
ANR	688466	Identifier	c		688321	0					
ANR	688467	Argument	x2		688321	1					
ANR	688468	Identifier	x2		688321	0					
ANR	688469	Argument	y + hl + 1		688321	2					
ANR	688470	AdditiveExpression	y + hl + 1		688321	0		+			
ANR	688471	Identifier	y		688321	0					
ANR	688472	AdditiveExpression	hl + 1		688321	1		+			
ANR	688473	Identifier	hl		688321	0					
ANR	688474	PrimaryExpression	1		688321	1					
ANR	688475	Argument	hl2		688321	3					
ANR	688476	Identifier	hl2		688321	0					
ANR	688477	Argument	style -> dot_style		688321	4					
ANR	688478	PtrMemberAccess	style -> dot_style		688321	0					
ANR	688479	Identifier	style		688321	0					
ANR	688480	Identifier	dot_style		688321	1					
ANR	688481	ExpressionStatement	"draw_horizontal_line ( c , min_x , y + hl + 1 , w , apex_style , style -> dot_style )"	385:2:7800:7876	688321	6	True				
ANR	688482	CallExpression	"draw_horizontal_line ( c , min_x , y + hl + 1 , w , apex_style , style -> dot_style )"		688321	0					
ANR	688483	Callee	draw_horizontal_line		688321	0					
ANR	688484	Identifier	draw_horizontal_line		688321	0					
ANR	688485	ArgumentList	c		688321	1					
ANR	688486	Argument	c		688321	0					
ANR	688487	Identifier	c		688321	0					
ANR	688488	Argument	min_x		688321	1					
ANR	688489	Identifier	min_x		688321	0					
ANR	688490	Argument	y + hl + 1		688321	2					
ANR	688491	AdditiveExpression	y + hl + 1		688321	0		+			
ANR	688492	Identifier	y		688321	0					
ANR	688493	AdditiveExpression	hl + 1		688321	1		+			
ANR	688494	Identifier	hl		688321	0					
ANR	688495	PrimaryExpression	1		688321	1					
ANR	688496	Argument	w		688321	3					
ANR	688497	Identifier	w		688321	0					
ANR	688498	Argument	apex_style		688321	4					
ANR	688499	Identifier	apex_style		688321	0					
ANR	688500	Argument	style -> dot_style		688321	5					
ANR	688501	PtrMemberAccess	style -> dot_style		688321	0					
ANR	688502	Identifier	style		688321	0					
ANR	688503	Identifier	dot_style		688321	1					
ANR	688504	ElseStatement	else		688321	0					
ANR	688505	CompoundStatement		18:9:574:574	688321	0					
ANR	688506	IfStatement	if ( y2 == y )		688321	0					
ANR	688507	Condition	y2 == y	387:6:7895:7901	688321	0	True				
ANR	688508	EqualityExpression	y2 == y		688321	0		==			
ANR	688509	Identifier	y2		688321	0					
ANR	688510	Identifier	y		688321	1					
ANR	688511	CompoundStatement		19:15:591:591	688321	1					
ANR	688512	ExpressionStatement	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , DOT_DOT , style -> dot_style )"	388:3:7909:7982	688321	0	True				
ANR	688513	CallExpression	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , DOT_DOT , style -> dot_style )"		688321	0					
ANR	688514	Callee	draw_horizontal_line		688321	0					
ANR	688515	Identifier	draw_horizontal_line		688321	0					
ANR	688516	ArgumentList	c		688321	1					
ANR	688517	Argument	c		688321	0					
ANR	688518	Identifier	c		688321	0					
ANR	688519	Argument	min_x		688321	1					
ANR	688520	Identifier	min_x		688321	0					
ANR	688521	Argument	y		688321	2					
ANR	688522	Identifier	y		688321	0					
ANR	688523	Argument	diff_x + 1		688321	3					
ANR	688524	AdditiveExpression	diff_x + 1		688321	0		+			
ANR	688525	Identifier	diff_x		688321	0					
ANR	688526	PrimaryExpression	1		688321	1					
ANR	688527	Argument	DOT_DOT		688321	4					
ANR	688528	Identifier	DOT_DOT		688321	0					
ANR	688529	Argument	style -> dot_style		688321	5					
ANR	688530	PtrMemberAccess	style -> dot_style		688321	0					
ANR	688531	Identifier	style		688321	0					
ANR	688532	Identifier	dot_style		688321	1					
ANR	688533	ElseStatement	else		688321	0					
ANR	688534	CompoundStatement		21:9:680:680	688321	0					
ANR	688535	IfStatement	if ( x != x2 )		688321	0					
ANR	688536	Condition	x != x2	390:7:8002:8008	688321	0	True				
ANR	688537	EqualityExpression	x != x2		688321	0		!=			
ANR	688538	Identifier	x		688321	0					
ANR	688539	Identifier	x2		688321	1					
ANR	688540	CompoundStatement		22:16:698:698	688321	1					
ANR	688541	ExpressionStatement	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , REV_APEX_APEX , style -> dot_style )"	391:4:8017:8096	688321	0	True				
ANR	688542	CallExpression	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , REV_APEX_APEX , style -> dot_style )"		688321	0					
ANR	688543	Callee	draw_horizontal_line		688321	0					
ANR	688544	Identifier	draw_horizontal_line		688321	0					
ANR	688545	ArgumentList	c		688321	1					
ANR	688546	Argument	c		688321	0					
ANR	688547	Identifier	c		688321	0					
ANR	688548	Argument	min_x		688321	1					
ANR	688549	Identifier	min_x		688321	0					
ANR	688550	Argument	y		688321	2					
ANR	688551	Identifier	y		688321	0					
ANR	688552	Argument	diff_x + 1		688321	3					
ANR	688553	AdditiveExpression	diff_x + 1		688321	0		+			
ANR	688554	Identifier	diff_x		688321	0					
ANR	688555	PrimaryExpression	1		688321	1					
ANR	688556	Argument	REV_APEX_APEX		688321	4					
ANR	688557	Identifier	REV_APEX_APEX		688321	0					
ANR	688558	Argument	style -> dot_style		688321	5					
ANR	688559	PtrMemberAccess	style -> dot_style		688321	0					
ANR	688560	Identifier	style		688321	0					
ANR	688561	Identifier	dot_style		688321	1					
ANR	688562	ExpressionStatement	"draw_vertical_line ( c , x2 , y2 , diff_y , style -> dot_style )"	393:3:8106:8162	688321	1	True				
ANR	688563	CallExpression	"draw_vertical_line ( c , x2 , y2 , diff_y , style -> dot_style )"		688321	0					
ANR	688564	Callee	draw_vertical_line		688321	0					
ANR	688565	Identifier	draw_vertical_line		688321	0					
ANR	688566	ArgumentList	c		688321	1					
ANR	688567	Argument	c		688321	0					
ANR	688568	Identifier	c		688321	0					
ANR	688569	Argument	x2		688321	1					
ANR	688570	Identifier	x2		688321	0					
ANR	688571	Argument	y2		688321	2					
ANR	688572	Identifier	y2		688321	0					
ANR	688573	Argument	diff_y		688321	3					
ANR	688574	Identifier	diff_y		688321	0					
ANR	688575	Argument	style -> dot_style		688321	4					
ANR	688576	PtrMemberAccess	style -> dot_style		688321	0					
ANR	688577	Identifier	style		688321	0					
ANR	688578	Identifier	dot_style		688321	1					
ANR	688579	ExpressionStatement	c -> attr = Color_RESET	396:1:8172:8193	688321	5	True				
ANR	688580	AssignmentExpression	c -> attr = Color_RESET		688321	0		=			
ANR	688581	PtrMemberAccess	c -> attr		688321	0					
ANR	688582	Identifier	c		688321	0					
ANR	688583	Identifier	attr		688321	1					
ANR	688584	Identifier	Color_RESET		688321	1					
ANR	688585	ReturnType	R_API void		688321	1					
ANR	688586	Identifier	r_cons_canvas_line_square		688321	2					
ANR	688587	ParameterList	"RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style"		688321	3					
ANR	688588	Parameter	RConsCanvas * c	369:38:7241:7254	688321	0	True				
ANR	688589	ParameterType	RConsCanvas *		688321	0					
ANR	688590	Identifier	c		688321	1					
ANR	688591	Parameter	int x	369:54:7257:7261	688321	1	True				
ANR	688592	ParameterType	int		688321	0					
ANR	688593	Identifier	x		688321	1					
ANR	688594	Parameter	int y	369:61:7264:7268	688321	2	True				
ANR	688595	ParameterType	int		688321	0					
ANR	688596	Identifier	y		688321	1					
ANR	688597	Parameter	int x2	369:68:7271:7276	688321	3	True				
ANR	688598	ParameterType	int		688321	0					
ANR	688599	Identifier	x2		688321	1					
ANR	688600	Parameter	int y2	369:76:7279:7284	688321	4	True				
ANR	688601	ParameterType	int		688321	0					
ANR	688602	Identifier	y2		688321	1					
ANR	688603	Parameter	RCanvasLineStyle * style	369:84:7287:7309	688321	5	True				
ANR	688604	ParameterType	RCanvasLineStyle *		688321	0					
ANR	688605	Identifier	style		688321	1					
ANR	688606	CFGEntryNode	ENTRY		688321		True				
ANR	688607	CFGExitNode	EXIT		688321		True				
ANR	688608	Symbol	diff_x		688321						
ANR	688609	Symbol	c		688321						
ANR	688610	Symbol	diff_y		688321						
ANR	688611	Symbol	hl		688321						
ANR	688612	Symbol	Color_RESET		688321						
ANR	688613	Symbol	R_MIN		688321						
ANR	688614	Symbol	R_ABS		688321						
ANR	688615	Symbol	APEX_DOT		688321						
ANR	688616	Symbol	* c		688321						
ANR	688617	Symbol	hl2		688321						
ANR	688618	Symbol	* style		688321						
ANR	688619	Symbol	DOT_DOT		688321						
ANR	688620	Symbol	c -> attr		688321						
ANR	688621	Symbol	style -> dot_style		688321						
ANR	688622	Symbol	DOT_APEX		688321						
ANR	688623	Symbol	w		688321						
ANR	688624	Symbol	x		688321						
ANR	688625	Symbol	y		688321						
ANR	688626	Symbol	y2		688321						
ANR	688627	Symbol	x2		688321						
ANR	688628	Symbol	style		688321						
ANR	688629	Symbol	min_x		688321						
ANR	688630	Symbol	apex_style		688321						
ANR	688631	Symbol	REV_APEX_APEX		688321						
ANR	688632	Function	r_cons_canvas_line_square_defined	399:0:8198:10170							
ANR	688633	FunctionDef	"r_cons_canvas_line_square_defined (RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style , int bendpoint , int isvert)"		688632	0					
ANR	688634	CompoundStatement		399:144:8342:10170	688632	0					
ANR	688635	IfStatement	if ( ! c -> linemode )		688632	0					
ANR	688636	Condition	! c -> linemode	400:5:8349:8360	688632	0	True				
ANR	688637	UnaryOperationExpression	! c -> linemode		688632	0					
ANR	688638	UnaryOperator	!		688632	0					
ANR	688639	PtrMemberAccess	c -> linemode		688632	1					
ANR	688640	Identifier	c		688632	0					
ANR	688641	Identifier	linemode		688632	1					
ANR	688642	CompoundStatement		2:19:20:20	688632	1					
ANR	688643	ExpressionStatement	"r_cons_canvas_line ( c , x , y , x2 , y2 , style )"	401:2:8367:8410	688632	0	True				
ANR	688644	CallExpression	"r_cons_canvas_line ( c , x , y , x2 , y2 , style )"		688632	0					
ANR	688645	Callee	r_cons_canvas_line		688632	0					
ANR	688646	Identifier	r_cons_canvas_line		688632	0					
ANR	688647	ArgumentList	c		688632	1					
ANR	688648	Argument	c		688632	0					
ANR	688649	Identifier	c		688632	0					
ANR	688650	Argument	x		688632	1					
ANR	688651	Identifier	x		688632	0					
ANR	688652	Argument	y		688632	2					
ANR	688653	Identifier	y		688632	0					
ANR	688654	Argument	x2		688632	3					
ANR	688655	Identifier	x2		688632	0					
ANR	688656	Argument	y2		688632	4					
ANR	688657	Identifier	y2		688632	0					
ANR	688658	Argument	style		688632	5					
ANR	688659	Identifier	style		688632	0					
ANR	688660	ReturnStatement	return ;	402:2:8414:8420	688632	1	True				
ANR	688661	IdentifierDeclStatement	"int min_x = R_MIN ( x , x2 ) ;"	404:1:8426:8451	688632	1	True				
ANR	688662	IdentifierDecl	"min_x = R_MIN ( x , x2 )"		688632	0					
ANR	688663	IdentifierDeclType	int		688632	0					
ANR	688664	Identifier	min_x		688632	1					
ANR	688665	AssignmentExpression	"min_x = R_MIN ( x , x2 )"		688632	2		=			
ANR	688666	Identifier	min_x		688632	0					
ANR	688667	CallExpression	"R_MIN ( x , x2 )"		688632	1					
ANR	688668	Callee	R_MIN		688632	0					
ANR	688669	Identifier	R_MIN		688632	0					
ANR	688670	ArgumentList	x		688632	1					
ANR	688671	Argument	x		688632	0					
ANR	688672	Identifier	x		688632	0					
ANR	688673	Argument	x2		688632	1					
ANR	688674	Identifier	x2		688632	0					
ANR	688675	IdentifierDeclStatement	int diff_x = R_ABS ( x - x2 ) ;	405:1:8454:8481	688632	2	True				
ANR	688676	IdentifierDecl	diff_x = R_ABS ( x - x2 )		688632	0					
ANR	688677	IdentifierDeclType	int		688632	0					
ANR	688678	Identifier	diff_x		688632	1					
ANR	688679	AssignmentExpression	diff_x = R_ABS ( x - x2 )		688632	2		=			
ANR	688680	Identifier	diff_x		688632	0					
ANR	688681	CallExpression	R_ABS ( x - x2 )		688632	1					
ANR	688682	Callee	R_ABS		688632	0					
ANR	688683	Identifier	R_ABS		688632	0					
ANR	688684	ArgumentList	x - x2		688632	1					
ANR	688685	Argument	x - x2		688632	0					
ANR	688686	AdditiveExpression	x - x2		688632	0		-			
ANR	688687	Identifier	x		688632	0					
ANR	688688	Identifier	x2		688632	1					
ANR	688689	IdentifierDeclStatement	int diff_y = R_ABS ( y - y2 ) ;	406:1:8484:8511	688632	3	True				
ANR	688690	IdentifierDecl	diff_y = R_ABS ( y - y2 )		688632	0					
ANR	688691	IdentifierDeclType	int		688632	0					
ANR	688692	Identifier	diff_y		688632	1					
ANR	688693	AssignmentExpression	diff_y = R_ABS ( y - y2 )		688632	2		=			
ANR	688694	Identifier	diff_y		688632	0					
ANR	688695	CallExpression	R_ABS ( y - y2 )		688632	1					
ANR	688696	Callee	R_ABS		688632	0					
ANR	688697	Identifier	R_ABS		688632	0					
ANR	688698	ArgumentList	y - y2		688632	1					
ANR	688699	Argument	y - y2		688632	0					
ANR	688700	AdditiveExpression	y - y2		688632	0		-			
ANR	688701	Identifier	y		688632	0					
ANR	688702	Identifier	y2		688632	1					
ANR	688703	IdentifierDeclStatement	"int min_y = R_MIN ( y , y2 ) ;"	407:1:8514:8539	688632	4	True				
ANR	688704	IdentifierDecl	"min_y = R_MIN ( y , y2 )"		688632	0					
ANR	688705	IdentifierDeclType	int		688632	0					
ANR	688706	Identifier	min_y		688632	1					
ANR	688707	AssignmentExpression	"min_y = R_MIN ( y , y2 )"		688632	2		=			
ANR	688708	Identifier	min_y		688632	0					
ANR	688709	CallExpression	"R_MIN ( y , y2 )"		688632	1					
ANR	688710	Callee	R_MIN		688632	0					
ANR	688711	Identifier	R_MIN		688632	0					
ANR	688712	ArgumentList	y		688632	1					
ANR	688713	Argument	y		688632	0					
ANR	688714	Identifier	y		688632	0					
ANR	688715	Argument	y2		688632	1					
ANR	688716	Identifier	y2		688632	0					
ANR	688717	ExpressionStatement	"apply_line_style ( c , x , y , x2 , y2 , style , isvert )"	409:1:8543:8592	688632	5	True				
ANR	688718	CallExpression	"apply_line_style ( c , x , y , x2 , y2 , style , isvert )"		688632	0					
ANR	688719	Callee	apply_line_style		688632	0					
ANR	688720	Identifier	apply_line_style		688632	0					
ANR	688721	ArgumentList	c		688632	1					
ANR	688722	Argument	c		688632	0					
ANR	688723	Identifier	c		688632	0					
ANR	688724	Argument	x		688632	1					
ANR	688725	Identifier	x		688632	0					
ANR	688726	Argument	y		688632	2					
ANR	688727	Identifier	y		688632	0					
ANR	688728	Argument	x2		688632	3					
ANR	688729	Identifier	x2		688632	0					
ANR	688730	Argument	y2		688632	4					
ANR	688731	Identifier	y2		688632	0					
ANR	688732	Argument	style		688632	5					
ANR	688733	Identifier	style		688632	0					
ANR	688734	Argument	isvert		688632	6					
ANR	688735	Identifier	isvert		688632	0					
ANR	688736	IfStatement	if ( isvert )		688632	6					
ANR	688737	Condition	isvert	411:5:8600:8605	688632	0	True				
ANR	688738	Identifier	isvert		688632	0					
ANR	688739	CompoundStatement		13:13:265:265	688632	1					
ANR	688740	IfStatement	if ( x2 == x )		688632	0					
ANR	688741	Condition	x2 == x	412:6:8616:8622	688632	0	True				
ANR	688742	EqualityExpression	x2 == x		688632	0		==			
ANR	688743	Identifier	x2		688632	0					
ANR	688744	Identifier	x		688632	1					
ANR	688745	CompoundStatement		14:15:282:282	688632	1					
ANR	688746	ExpressionStatement	"draw_vertical_line ( c , x , y + 1 , diff_y + 1 , style -> dot_style )"	413:3:8630:8692	688632	0	True				
ANR	688747	CallExpression	"draw_vertical_line ( c , x , y + 1 , diff_y + 1 , style -> dot_style )"		688632	0					
ANR	688748	Callee	draw_vertical_line		688632	0					
ANR	688749	Identifier	draw_vertical_line		688632	0					
ANR	688750	ArgumentList	c		688632	1					
ANR	688751	Argument	c		688632	0					
ANR	688752	Identifier	c		688632	0					
ANR	688753	Argument	x		688632	1					
ANR	688754	Identifier	x		688632	0					
ANR	688755	Argument	y + 1		688632	2					
ANR	688756	AdditiveExpression	y + 1		688632	0		+			
ANR	688757	Identifier	y		688632	0					
ANR	688758	PrimaryExpression	1		688632	1					
ANR	688759	Argument	diff_y + 1		688632	3					
ANR	688760	AdditiveExpression	diff_y + 1		688632	0		+			
ANR	688761	Identifier	diff_y		688632	0					
ANR	688762	PrimaryExpression	1		688632	1					
ANR	688763	Argument	style -> dot_style		688632	4					
ANR	688764	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688765	Identifier	style		688632	0					
ANR	688766	Identifier	dot_style		688632	1					
ANR	688767	ElseStatement	else		688632	0					
ANR	688768	IfStatement	if ( y2 - y > 1 )		688632	0					
ANR	688769	Condition	y2 - y > 1	414:13:8707:8716	688632	0	True				
ANR	688770	RelationalExpression	y2 - y > 1		688632	0		>			
ANR	688771	AdditiveExpression	y2 - y		688632	0		-			
ANR	688772	Identifier	y2		688632	0					
ANR	688773	Identifier	y		688632	1					
ANR	688774	PrimaryExpression	1		688632	1					
ANR	688775	CompoundStatement		20:3:474:523	688632	1					
ANR	688776	IdentifierDeclStatement	int h1 = 1 + bendpoint ;	415:3:8724:8746	688632	0	True				
ANR	688777	IdentifierDecl	h1 = 1 + bendpoint		688632	0					
ANR	688778	IdentifierDeclType	int		688632	0					
ANR	688779	Identifier	h1		688632	1					
ANR	688780	AssignmentExpression	h1 = 1 + bendpoint		688632	2		=			
ANR	688781	Identifier	h1		688632	0					
ANR	688782	AdditiveExpression	1 + bendpoint		688632	1		+			
ANR	688783	PrimaryExpression	1		688632	0					
ANR	688784	Identifier	bendpoint		688632	1					
ANR	688785	IdentifierDeclStatement	int h2 = diff_y - h1 ;	416:3:8751:8771	688632	1	True				
ANR	688786	IdentifierDecl	h2 = diff_y - h1		688632	0					
ANR	688787	IdentifierDeclType	int		688632	0					
ANR	688788	Identifier	h2		688632	1					
ANR	688789	AssignmentExpression	h2 = diff_y - h1		688632	2		=			
ANR	688790	Identifier	h2		688632	0					
ANR	688791	AdditiveExpression	diff_y - h1		688632	1		-			
ANR	688792	Identifier	diff_y		688632	0					
ANR	688793	Identifier	h1		688632	1					
ANR	688794	IdentifierDeclStatement	int w = diff_x == 0 ? 0 : diff_x + 1 ;	417:3:8776:8812	688632	2	True				
ANR	688795	IdentifierDecl	w = diff_x == 0 ? 0 : diff_x + 1		688632	0					
ANR	688796	IdentifierDeclType	int		688632	0					
ANR	688797	Identifier	w		688632	1					
ANR	688798	AssignmentExpression	w = diff_x == 0 ? 0 : diff_x + 1		688632	2		=			
ANR	688799	Identifier	w		688632	0					
ANR	688800	ConditionalExpression	diff_x == 0 ? 0 : diff_x + 1		688632	1					
ANR	688801	Condition	diff_x == 0		688632	0					
ANR	688802	EqualityExpression	diff_x == 0		688632	0		==			
ANR	688803	Identifier	diff_x		688632	0					
ANR	688804	PrimaryExpression	0		688632	1					
ANR	688805	PrimaryExpression	0		688632	1					
ANR	688806	AdditiveExpression	diff_x + 1		688632	2		+			
ANR	688807	Identifier	diff_x		688632	0					
ANR	688808	PrimaryExpression	1		688632	1					
ANR	688809	IdentifierDeclStatement	int apex_style = min_x == x ? APEX_DOT : DOT_APEX ;	418:3:8817:8866	688632	3	True				
ANR	688810	IdentifierDecl	apex_style = min_x == x ? APEX_DOT : DOT_APEX		688632	0					
ANR	688811	IdentifierDeclType	int		688632	0					
ANR	688812	Identifier	apex_style		688632	1					
ANR	688813	AssignmentExpression	apex_style = min_x == x ? APEX_DOT : DOT_APEX		688632	2		=			
ANR	688814	Identifier	apex_style		688632	0					
ANR	688815	ConditionalExpression	min_x == x ? APEX_DOT : DOT_APEX		688632	1					
ANR	688816	Condition	min_x == x		688632	0					
ANR	688817	EqualityExpression	min_x == x		688632	0		==			
ANR	688818	Identifier	min_x		688632	0					
ANR	688819	Identifier	x		688632	1					
ANR	688820	Identifier	APEX_DOT		688632	1					
ANR	688821	Identifier	DOT_APEX		688632	2					
ANR	688822	ExpressionStatement	"draw_vertical_line ( c , x , y + 1 , h1 , style -> dot_style )"	419:3:8871:8925	688632	4	True				
ANR	688823	CallExpression	"draw_vertical_line ( c , x , y + 1 , h1 , style -> dot_style )"		688632	0					
ANR	688824	Callee	draw_vertical_line		688632	0					
ANR	688825	Identifier	draw_vertical_line		688632	0					
ANR	688826	ArgumentList	c		688632	1					
ANR	688827	Argument	c		688632	0					
ANR	688828	Identifier	c		688632	0					
ANR	688829	Argument	x		688632	1					
ANR	688830	Identifier	x		688632	0					
ANR	688831	Argument	y + 1		688632	2					
ANR	688832	AdditiveExpression	y + 1		688632	0		+			
ANR	688833	Identifier	y		688632	0					
ANR	688834	PrimaryExpression	1		688632	1					
ANR	688835	Argument	h1		688632	3					
ANR	688836	Identifier	h1		688632	0					
ANR	688837	Argument	style -> dot_style		688632	4					
ANR	688838	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688839	Identifier	style		688632	0					
ANR	688840	Identifier	dot_style		688632	1					
ANR	688841	ExpressionStatement	"draw_horizontal_line ( c , min_x , y + bendpoint + 2 , w , apex_style , style -> dot_style )"	420:3:8930:9013	688632	5	True				
ANR	688842	CallExpression	"draw_horizontal_line ( c , min_x , y + bendpoint + 2 , w , apex_style , style -> dot_style )"		688632	0					
ANR	688843	Callee	draw_horizontal_line		688632	0					
ANR	688844	Identifier	draw_horizontal_line		688632	0					
ANR	688845	ArgumentList	c		688632	1					
ANR	688846	Argument	c		688632	0					
ANR	688847	Identifier	c		688632	0					
ANR	688848	Argument	min_x		688632	1					
ANR	688849	Identifier	min_x		688632	0					
ANR	688850	Argument	y + bendpoint + 2		688632	2					
ANR	688851	AdditiveExpression	y + bendpoint + 2		688632	0		+			
ANR	688852	Identifier	y		688632	0					
ANR	688853	AdditiveExpression	bendpoint + 2		688632	1		+			
ANR	688854	Identifier	bendpoint		688632	0					
ANR	688855	PrimaryExpression	2		688632	1					
ANR	688856	Argument	w		688632	3					
ANR	688857	Identifier	w		688632	0					
ANR	688858	Argument	apex_style		688632	4					
ANR	688859	Identifier	apex_style		688632	0					
ANR	688860	Argument	style -> dot_style		688632	5					
ANR	688861	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688862	Identifier	style		688632	0					
ANR	688863	Identifier	dot_style		688632	1					
ANR	688864	ExpressionStatement	"draw_vertical_line ( c , x2 , y + h1 + 1 + 1 , h2 , style -> dot_style )"	421:3:9018:9082	688632	6	True				
ANR	688865	CallExpression	"draw_vertical_line ( c , x2 , y + h1 + 1 + 1 , h2 , style -> dot_style )"		688632	0					
ANR	688866	Callee	draw_vertical_line		688632	0					
ANR	688867	Identifier	draw_vertical_line		688632	0					
ANR	688868	ArgumentList	c		688632	1					
ANR	688869	Argument	c		688632	0					
ANR	688870	Identifier	c		688632	0					
ANR	688871	Argument	x2		688632	1					
ANR	688872	Identifier	x2		688632	0					
ANR	688873	Argument	y + h1 + 1 + 1		688632	2					
ANR	688874	AdditiveExpression	y + h1 + 1 + 1		688632	0		+			
ANR	688875	Identifier	y		688632	0					
ANR	688876	AdditiveExpression	h1 + 1 + 1		688632	1		+			
ANR	688877	Identifier	h1		688632	0					
ANR	688878	AdditiveExpression	1 + 1		688632	1		+			
ANR	688879	PrimaryExpression	1		688632	0					
ANR	688880	PrimaryExpression	1		688632	1					
ANR	688881	Argument	h2		688632	3					
ANR	688882	Identifier	h2		688632	0					
ANR	688883	Argument	style -> dot_style		688632	4					
ANR	688884	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688885	Identifier	style		688632	0					
ANR	688886	Identifier	dot_style		688632	1					
ANR	688887	ElseStatement	else		688632	0					
ANR	688888	CompoundStatement		24:9:750:750	688632	0					
ANR	688889	IfStatement	if ( y2 == y )		688632	0					
ANR	688890	Condition	y2 == y	424:7:9135:9141	688632	0	True				
ANR	688891	EqualityExpression	y2 == y		688632	0		==			
ANR	688892	Identifier	y2		688632	0					
ANR	688893	Identifier	y		688632	1					
ANR	688894	CompoundStatement		26:16:801:801	688632	1					
ANR	688895	ExpressionStatement	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , DOT_DOT , style -> dot_style )"	425:4:9150:9223	688632	0	True				
ANR	688896	CallExpression	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , DOT_DOT , style -> dot_style )"		688632	0					
ANR	688897	Callee	draw_horizontal_line		688632	0					
ANR	688898	Identifier	draw_horizontal_line		688632	0					
ANR	688899	ArgumentList	c		688632	1					
ANR	688900	Argument	c		688632	0					
ANR	688901	Identifier	c		688632	0					
ANR	688902	Argument	min_x		688632	1					
ANR	688903	Identifier	min_x		688632	0					
ANR	688904	Argument	y		688632	2					
ANR	688905	Identifier	y		688632	0					
ANR	688906	Argument	diff_x + 1		688632	3					
ANR	688907	AdditiveExpression	diff_x + 1		688632	0		+			
ANR	688908	Identifier	diff_x		688632	0					
ANR	688909	PrimaryExpression	1		688632	1					
ANR	688910	Argument	DOT_DOT		688632	4					
ANR	688911	Identifier	DOT_DOT		688632	0					
ANR	688912	Argument	style -> dot_style		688632	5					
ANR	688913	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688914	Identifier	style		688632	0					
ANR	688915	Identifier	dot_style		688632	1					
ANR	688916	ElseStatement	else		688632	0					
ANR	688917	CompoundStatement		28:10:892:892	688632	0					
ANR	688918	IfStatement	if ( x != x2 )		688632	0					
ANR	688919	Condition	x != x2	427:8:9245:9251	688632	0	True				
ANR	688920	EqualityExpression	x != x2		688632	0		!=			
ANR	688921	Identifier	x		688632	0					
ANR	688922	Identifier	x2		688632	1					
ANR	688923	CompoundStatement		29:17:911:911	688632	1					
ANR	688924	ExpressionStatement	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , REV_APEX_APEX , style -> dot_style )"	428:5:9261:9340	688632	0	True				
ANR	688925	CallExpression	"draw_horizontal_line ( c , min_x , y , diff_x + 1 , REV_APEX_APEX , style -> dot_style )"		688632	0					
ANR	688926	Callee	draw_horizontal_line		688632	0					
ANR	688927	Identifier	draw_horizontal_line		688632	0					
ANR	688928	ArgumentList	c		688632	1					
ANR	688929	Argument	c		688632	0					
ANR	688930	Identifier	c		688632	0					
ANR	688931	Argument	min_x		688632	1					
ANR	688932	Identifier	min_x		688632	0					
ANR	688933	Argument	y		688632	2					
ANR	688934	Identifier	y		688632	0					
ANR	688935	Argument	diff_x + 1		688632	3					
ANR	688936	AdditiveExpression	diff_x + 1		688632	0		+			
ANR	688937	Identifier	diff_x		688632	0					
ANR	688938	PrimaryExpression	1		688632	1					
ANR	688939	Argument	REV_APEX_APEX		688632	4					
ANR	688940	Identifier	REV_APEX_APEX		688632	0					
ANR	688941	Argument	style -> dot_style		688632	5					
ANR	688942	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688943	Identifier	style		688632	0					
ANR	688944	Identifier	dot_style		688632	1					
ANR	688945	ExpressionStatement	"draw_vertical_line ( c , x2 , y2 , diff_y - 2 , style -> dot_style )"	430:4:9352:9410	688632	1	True				
ANR	688946	CallExpression	"draw_vertical_line ( c , x2 , y2 , diff_y - 2 , style -> dot_style )"		688632	0					
ANR	688947	Callee	draw_vertical_line		688632	0					
ANR	688948	Identifier	draw_vertical_line		688632	0					
ANR	688949	ArgumentList	c		688632	1					
ANR	688950	Argument	c		688632	0					
ANR	688951	Identifier	c		688632	0					
ANR	688952	Argument	x2		688632	1					
ANR	688953	Identifier	x2		688632	0					
ANR	688954	Argument	y2		688632	2					
ANR	688955	Identifier	y2		688632	0					
ANR	688956	Argument	diff_y - 2		688632	3					
ANR	688957	AdditiveExpression	diff_y - 2		688632	0		-			
ANR	688958	Identifier	diff_y		688632	0					
ANR	688959	PrimaryExpression	2		688632	1					
ANR	688960	Argument	style -> dot_style		688632	4					
ANR	688961	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688962	Identifier	style		688632	0					
ANR	688963	Identifier	dot_style		688632	1					
ANR	688964	ElseStatement	else		688632	0					
ANR	688965	CompoundStatement		35:8:1086:1086	688632	0					
ANR	688966	IfStatement	if ( y2 == y )		688632	0					
ANR	688967	Condition	y2 == y	434:6:9437:9443	688632	0	True				
ANR	688968	EqualityExpression	y2 == y		688632	0		==			
ANR	688969	Identifier	y2		688632	0					
ANR	688970	Identifier	y		688632	1					
ANR	688971	CompoundStatement		36:15:1103:1103	688632	1					
ANR	688972	ExpressionStatement	"draw_horizontal_line ( c , min_x + 1 , y , diff_x , NRM_NRM , style -> dot_style )"	435:3:9451:9524	688632	0	True				
ANR	688973	CallExpression	"draw_horizontal_line ( c , min_x + 1 , y , diff_x , NRM_NRM , style -> dot_style )"		688632	0					
ANR	688974	Callee	draw_horizontal_line		688632	0					
ANR	688975	Identifier	draw_horizontal_line		688632	0					
ANR	688976	ArgumentList	c		688632	1					
ANR	688977	Argument	c		688632	0					
ANR	688978	Identifier	c		688632	0					
ANR	688979	Argument	min_x + 1		688632	1					
ANR	688980	AdditiveExpression	min_x + 1		688632	0		+			
ANR	688981	Identifier	min_x		688632	0					
ANR	688982	PrimaryExpression	1		688632	1					
ANR	688983	Argument	y		688632	2					
ANR	688984	Identifier	y		688632	0					
ANR	688985	Argument	diff_x		688632	3					
ANR	688986	Identifier	diff_x		688632	0					
ANR	688987	Argument	NRM_NRM		688632	4					
ANR	688988	Identifier	NRM_NRM		688632	0					
ANR	688989	Argument	style -> dot_style		688632	5					
ANR	688990	PtrMemberAccess	style -> dot_style		688632	0					
ANR	688991	Identifier	style		688632	0					
ANR	688992	Identifier	dot_style		688632	1					
ANR	688993	ElseStatement	else		688632	0					
ANR	688994	IfStatement	if ( x2 - x > 1 )		688632	0					
ANR	688995	Condition	x2 - x > 1	436:13:9539:9548	688632	0	True				
ANR	688996	RelationalExpression	x2 - x > 1		688632	0		>			
ANR	688997	AdditiveExpression	x2 - x		688632	0		-			
ANR	688998	Identifier	x2		688632	0					
ANR	688999	Identifier	x		688632	1					
ANR	689000	PrimaryExpression	1		688632	1					
ANR	689001	CompoundStatement		40:3:1240:1260	688632	1					
ANR	689002	IdentifierDeclStatement	int w1 = 1 + bendpoint ;	437:3:9556:9578	688632	0	True				
ANR	689003	IdentifierDecl	w1 = 1 + bendpoint		688632	0					
ANR	689004	IdentifierDeclType	int		688632	0					
ANR	689005	Identifier	w1		688632	1					
ANR	689006	AssignmentExpression	w1 = 1 + bendpoint		688632	2		=			
ANR	689007	Identifier	w1		688632	0					
ANR	689008	AdditiveExpression	1 + bendpoint		688632	1		+			
ANR	689009	PrimaryExpression	1		688632	0					
ANR	689010	Identifier	bendpoint		688632	1					
ANR	689011	IdentifierDeclStatement	int w2 = diff_x - w1 ;	438:3:9583:9603	688632	1	True				
ANR	689012	IdentifierDecl	w2 = diff_x - w1		688632	0					
ANR	689013	IdentifierDeclType	int		688632	0					
ANR	689014	Identifier	w2		688632	1					
ANR	689015	AssignmentExpression	w2 = diff_x - w1		688632	2		=			
ANR	689016	Identifier	w2		688632	0					
ANR	689017	AdditiveExpression	diff_x - w1		688632	1		-			
ANR	689018	Identifier	diff_x		688632	0					
ANR	689019	Identifier	w1		688632	1					
ANR	689020	ExpressionStatement	"draw_horizontal_line ( c , x + 1 , y , w1 + 1 , y2 > y ? NRM_DOT : NRM_APEX , style -> dot_style )"	442:3:9748:9837	688632	2	True				
ANR	689021	CallExpression	"draw_horizontal_line ( c , x + 1 , y , w1 + 1 , y2 > y ? NRM_DOT : NRM_APEX , style -> dot_style )"		688632	0					
ANR	689022	Callee	draw_horizontal_line		688632	0					
ANR	689023	Identifier	draw_horizontal_line		688632	0					
ANR	689024	ArgumentList	c		688632	1					
ANR	689025	Argument	c		688632	0					
ANR	689026	Identifier	c		688632	0					
ANR	689027	Argument	x + 1		688632	1					
ANR	689028	AdditiveExpression	x + 1		688632	0		+			
ANR	689029	Identifier	x		688632	0					
ANR	689030	PrimaryExpression	1		688632	1					
ANR	689031	Argument	y		688632	2					
ANR	689032	Identifier	y		688632	0					
ANR	689033	Argument	w1 + 1		688632	3					
ANR	689034	AdditiveExpression	w1 + 1		688632	0		+			
ANR	689035	Identifier	w1		688632	0					
ANR	689036	PrimaryExpression	1		688632	1					
ANR	689037	Argument	y2 > y ? NRM_DOT : NRM_APEX		688632	4					
ANR	689038	ConditionalExpression	y2 > y ? NRM_DOT : NRM_APEX		688632	0					
ANR	689039	Condition	y2 > y		688632	0					
ANR	689040	RelationalExpression	y2 > y		688632	0		>			
ANR	689041	Identifier	y2		688632	0					
ANR	689042	Identifier	y		688632	1					
ANR	689043	Identifier	NRM_DOT		688632	1					
ANR	689044	Identifier	NRM_APEX		688632	2					
ANR	689045	Argument	style -> dot_style		688632	5					
ANR	689046	PtrMemberAccess	style -> dot_style		688632	0					
ANR	689047	Identifier	style		688632	0					
ANR	689048	Identifier	dot_style		688632	1					
ANR	689049	ExpressionStatement	"draw_vertical_line ( c , x + 1 + w1 , min_y + 1 , diff_y - 1 , style -> dot_style )"	444:3:9909:9984	688632	3	True				
ANR	689050	CallExpression	"draw_vertical_line ( c , x + 1 + w1 , min_y + 1 , diff_y - 1 , style -> dot_style )"		688632	0					
ANR	689051	Callee	draw_vertical_line		688632	0					
ANR	689052	Identifier	draw_vertical_line		688632	0					
ANR	689053	ArgumentList	c		688632	1					
ANR	689054	Argument	c		688632	0					
ANR	689055	Identifier	c		688632	0					
ANR	689056	Argument	x + 1 + w1		688632	1					
ANR	689057	AdditiveExpression	x + 1 + w1		688632	0		+			
ANR	689058	Identifier	x		688632	0					
ANR	689059	AdditiveExpression	1 + w1		688632	1		+			
ANR	689060	PrimaryExpression	1		688632	0					
ANR	689061	Identifier	w1		688632	1					
ANR	689062	Argument	min_y + 1		688632	2					
ANR	689063	AdditiveExpression	min_y + 1		688632	0		+			
ANR	689064	Identifier	min_y		688632	0					
ANR	689065	PrimaryExpression	1		688632	1					
ANR	689066	Argument	diff_y - 1		688632	3					
ANR	689067	AdditiveExpression	diff_y - 1		688632	0		-			
ANR	689068	Identifier	diff_y		688632	0					
ANR	689069	PrimaryExpression	1		688632	1					
ANR	689070	Argument	style -> dot_style		688632	4					
ANR	689071	PtrMemberAccess	style -> dot_style		688632	0					
ANR	689072	Identifier	style		688632	0					
ANR	689073	Identifier	dot_style		688632	1					
ANR	689074	ExpressionStatement	"draw_horizontal_line ( c , x + 1 + w1 , y2 , w2 , y2 < y ? DOT_NRM : REV_APEX_NRM , style -> dot_style )"	446:3:10042:10137	688632	4	True				
ANR	689075	CallExpression	"draw_horizontal_line ( c , x + 1 + w1 , y2 , w2 , y2 < y ? DOT_NRM : REV_APEX_NRM , style -> dot_style )"		688632	0					
ANR	689076	Callee	draw_horizontal_line		688632	0					
ANR	689077	Identifier	draw_horizontal_line		688632	0					
ANR	689078	ArgumentList	c		688632	1					
ANR	689079	Argument	c		688632	0					
ANR	689080	Identifier	c		688632	0					
ANR	689081	Argument	x + 1 + w1		688632	1					
ANR	689082	AdditiveExpression	x + 1 + w1		688632	0		+			
ANR	689083	Identifier	x		688632	0					
ANR	689084	AdditiveExpression	1 + w1		688632	1		+			
ANR	689085	PrimaryExpression	1		688632	0					
ANR	689086	Identifier	w1		688632	1					
ANR	689087	Argument	y2		688632	2					
ANR	689088	Identifier	y2		688632	0					
ANR	689089	Argument	w2		688632	3					
ANR	689090	Identifier	w2		688632	0					
ANR	689091	Argument	y2 < y ? DOT_NRM : REV_APEX_NRM		688632	4					
ANR	689092	ConditionalExpression	y2 < y ? DOT_NRM : REV_APEX_NRM		688632	0					
ANR	689093	Condition	y2 < y		688632	0					
ANR	689094	RelationalExpression	y2 < y		688632	0		<			
ANR	689095	Identifier	y2		688632	0					
ANR	689096	Identifier	y		688632	1					
ANR	689097	Identifier	DOT_NRM		688632	1					
ANR	689098	Identifier	REV_APEX_NRM		688632	2					
ANR	689099	Argument	style -> dot_style		688632	5					
ANR	689100	PtrMemberAccess	style -> dot_style		688632	0					
ANR	689101	Identifier	style		688632	0					
ANR	689102	Identifier	dot_style		688632	1					
ANR	689103	ExpressionStatement	c -> attr = Color_RESET	449:1:10147:10168	688632	7	True				
ANR	689104	AssignmentExpression	c -> attr = Color_RESET		688632	0		=			
ANR	689105	PtrMemberAccess	c -> attr		688632	0					
ANR	689106	Identifier	c		688632	0					
ANR	689107	Identifier	attr		688632	1					
ANR	689108	Identifier	Color_RESET		688632	1					
ANR	689109	ReturnType	R_API void		688632	1					
ANR	689110	Identifier	r_cons_canvas_line_square_defined		688632	2					
ANR	689111	ParameterList	"RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style , int bendpoint , int isvert"		688632	3					
ANR	689112	Parameter	RConsCanvas * c	399:46:8244:8257	688632	0	True				
ANR	689113	ParameterType	RConsCanvas *		688632	0					
ANR	689114	Identifier	c		688632	1					
ANR	689115	Parameter	int x	399:62:8260:8264	688632	1	True				
ANR	689116	ParameterType	int		688632	0					
ANR	689117	Identifier	x		688632	1					
ANR	689118	Parameter	int y	399:69:8267:8271	688632	2	True				
ANR	689119	ParameterType	int		688632	0					
ANR	689120	Identifier	y		688632	1					
ANR	689121	Parameter	int x2	399:76:8274:8279	688632	3	True				
ANR	689122	ParameterType	int		688632	0					
ANR	689123	Identifier	x2		688632	1					
ANR	689124	Parameter	int y2	399:84:8282:8287	688632	4	True				
ANR	689125	ParameterType	int		688632	0					
ANR	689126	Identifier	y2		688632	1					
ANR	689127	Parameter	RCanvasLineStyle * style	399:92:8290:8312	688632	5	True				
ANR	689128	ParameterType	RCanvasLineStyle *		688632	0					
ANR	689129	Identifier	style		688632	1					
ANR	689130	Parameter	int bendpoint	399:117:8315:8327	688632	6	True				
ANR	689131	ParameterType	int		688632	0					
ANR	689132	Identifier	bendpoint		688632	1					
ANR	689133	Parameter	int isvert	399:132:8330:8339	688632	7	True				
ANR	689134	ParameterType	int		688632	0					
ANR	689135	Identifier	isvert		688632	1					
ANR	689136	CFGEntryNode	ENTRY		688632		True				
ANR	689137	CFGExitNode	EXIT		688632		True				
ANR	689138	Symbol	NRM_APEX		688632						
ANR	689139	Symbol	Color_RESET		688632						
ANR	689140	Symbol	h1		688632						
ANR	689141	Symbol	R_ABS		688632						
ANR	689142	Symbol	h2		688632						
ANR	689143	Symbol	bendpoint		688632						
ANR	689144	Symbol	NRM_DOT		688632						
ANR	689145	Symbol	* style		688632						
ANR	689146	Symbol	DOT_DOT		688632						
ANR	689147	Symbol	c -> attr		688632						
ANR	689148	Symbol	style -> dot_style		688632						
ANR	689149	Symbol	REV_APEX_NRM		688632						
ANR	689150	Symbol	y2		688632						
ANR	689151	Symbol	w1		688632						
ANR	689152	Symbol	w2		688632						
ANR	689153	Symbol	REV_APEX_APEX		688632						
ANR	689154	Symbol	diff_x		688632						
ANR	689155	Symbol	c		688632						
ANR	689156	Symbol	isvert		688632						
ANR	689157	Symbol	diff_y		688632						
ANR	689158	Symbol	c -> linemode		688632						
ANR	689159	Symbol	R_MIN		688632						
ANR	689160	Symbol	* c		688632						
ANR	689161	Symbol	APEX_DOT		688632						
ANR	689162	Symbol	NRM_NRM		688632						
ANR	689163	Symbol	DOT_NRM		688632						
ANR	689164	Symbol	DOT_APEX		688632						
ANR	689165	Symbol	w		688632						
ANR	689166	Symbol	x		688632						
ANR	689167	Symbol	y		688632						
ANR	689168	Symbol	x2		688632						
ANR	689169	Symbol	style		688632						
ANR	689170	Symbol	min_x		688632						
ANR	689171	Symbol	apex_style		688632						
ANR	689172	Symbol	min_y		688632						
ANR	689173	Function	r_cons_canvas_line_back_edge	452:0:10173:11995							
ANR	689174	FunctionDef	"r_cons_canvas_line_back_edge (RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style , int ybendpoint1 , int xbendpoint , int ybendpoint2 , int isvert)"		689173	0					
ANR	689175	CompoundStatement		452:174:10347:11995	689173	0					
ANR	689176	IfStatement	if ( ! c -> linemode )		689173	0					
ANR	689177	Condition	! c -> linemode	453:5:10354:10365	689173	0	True				
ANR	689178	UnaryOperationExpression	! c -> linemode		689173	0					
ANR	689179	UnaryOperator	!		689173	0					
ANR	689180	PtrMemberAccess	c -> linemode		689173	1					
ANR	689181	Identifier	c		689173	0					
ANR	689182	Identifier	linemode		689173	1					
ANR	689183	CompoundStatement		2:19:20:20	689173	1					
ANR	689184	ExpressionStatement	"r_cons_canvas_line ( c , x , y , x2 , y2 , style )"	454:2:10372:10415	689173	0	True				
ANR	689185	CallExpression	"r_cons_canvas_line ( c , x , y , x2 , y2 , style )"		689173	0					
ANR	689186	Callee	r_cons_canvas_line		689173	0					
ANR	689187	Identifier	r_cons_canvas_line		689173	0					
ANR	689188	ArgumentList	c		689173	1					
ANR	689189	Argument	c		689173	0					
ANR	689190	Identifier	c		689173	0					
ANR	689191	Argument	x		689173	1					
ANR	689192	Identifier	x		689173	0					
ANR	689193	Argument	y		689173	2					
ANR	689194	Identifier	y		689173	0					
ANR	689195	Argument	x2		689173	3					
ANR	689196	Identifier	x2		689173	0					
ANR	689197	Argument	y2		689173	4					
ANR	689198	Identifier	y2		689173	0					
ANR	689199	Argument	style		689173	5					
ANR	689200	Identifier	style		689173	0					
ANR	689201	ReturnStatement	return ;	455:2:10419:10425	689173	1	True				
ANR	689202	IdentifierDeclStatement	"int min_x1 = R_MIN ( x , xbendpoint ) ;"	457:1:10431:10465	689173	1	True				
ANR	689203	IdentifierDecl	"min_x1 = R_MIN ( x , xbendpoint )"		689173	0					
ANR	689204	IdentifierDeclType	int		689173	0					
ANR	689205	Identifier	min_x1		689173	1					
ANR	689206	AssignmentExpression	"min_x1 = R_MIN ( x , xbendpoint )"		689173	2		=			
ANR	689207	Identifier	min_x1		689173	0					
ANR	689208	CallExpression	"R_MIN ( x , xbendpoint )"		689173	1					
ANR	689209	Callee	R_MIN		689173	0					
ANR	689210	Identifier	R_MIN		689173	0					
ANR	689211	ArgumentList	x		689173	1					
ANR	689212	Argument	x		689173	0					
ANR	689213	Identifier	x		689173	0					
ANR	689214	Argument	xbendpoint		689173	1					
ANR	689215	Identifier	xbendpoint		689173	0					
ANR	689216	IdentifierDeclStatement	"int min_x2 = R_MIN ( x2 , xbendpoint ) ;"	458:1:10468:10503	689173	2	True				
ANR	689217	IdentifierDecl	"min_x2 = R_MIN ( x2 , xbendpoint )"		689173	0					
ANR	689218	IdentifierDeclType	int		689173	0					
ANR	689219	Identifier	min_x2		689173	1					
ANR	689220	AssignmentExpression	"min_x2 = R_MIN ( x2 , xbendpoint )"		689173	2		=			
ANR	689221	Identifier	min_x2		689173	0					
ANR	689222	CallExpression	"R_MIN ( x2 , xbendpoint )"		689173	1					
ANR	689223	Callee	R_MIN		689173	0					
ANR	689224	Identifier	R_MIN		689173	0					
ANR	689225	ArgumentList	x2		689173	1					
ANR	689226	Argument	x2		689173	0					
ANR	689227	Identifier	x2		689173	0					
ANR	689228	Argument	xbendpoint		689173	1					
ANR	689229	Identifier	xbendpoint		689173	0					
ANR	689230	IdentifierDeclStatement	int diff_x1 = R_ABS ( x - xbendpoint ) ;	460:1:10507:10543	689173	3	True				
ANR	689231	IdentifierDecl	diff_x1 = R_ABS ( x - xbendpoint )		689173	0					
ANR	689232	IdentifierDeclType	int		689173	0					
ANR	689233	Identifier	diff_x1		689173	1					
ANR	689234	AssignmentExpression	diff_x1 = R_ABS ( x - xbendpoint )		689173	2		=			
ANR	689235	Identifier	diff_x1		689173	0					
ANR	689236	CallExpression	R_ABS ( x - xbendpoint )		689173	1					
ANR	689237	Callee	R_ABS		689173	0					
ANR	689238	Identifier	R_ABS		689173	0					
ANR	689239	ArgumentList	x - xbendpoint		689173	1					
ANR	689240	Argument	x - xbendpoint		689173	0					
ANR	689241	AdditiveExpression	x - xbendpoint		689173	0		-			
ANR	689242	Identifier	x		689173	0					
ANR	689243	Identifier	xbendpoint		689173	1					
ANR	689244	IdentifierDeclStatement	int diff_x2 = R_ABS ( x2 - xbendpoint ) ;	461:1:10546:10583	689173	4	True				
ANR	689245	IdentifierDecl	diff_x2 = R_ABS ( x2 - xbendpoint )		689173	0					
ANR	689246	IdentifierDeclType	int		689173	0					
ANR	689247	Identifier	diff_x2		689173	1					
ANR	689248	AssignmentExpression	diff_x2 = R_ABS ( x2 - xbendpoint )		689173	2		=			
ANR	689249	Identifier	diff_x2		689173	0					
ANR	689250	CallExpression	R_ABS ( x2 - xbendpoint )		689173	1					
ANR	689251	Callee	R_ABS		689173	0					
ANR	689252	Identifier	R_ABS		689173	0					
ANR	689253	ArgumentList	x2 - xbendpoint		689173	1					
ANR	689254	Argument	x2 - xbendpoint		689173	0					
ANR	689255	AdditiveExpression	x2 - xbendpoint		689173	0		-			
ANR	689256	Identifier	x2		689173	0					
ANR	689257	Identifier	xbendpoint		689173	1					
ANR	689258	IdentifierDeclStatement	int diff_y = R_ABS ( ( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 ) ) ;	463:1:10587:10653	689173	5	True				
ANR	689259	IdentifierDecl	diff_y = R_ABS ( ( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 ) )		689173	0					
ANR	689260	IdentifierDeclType	int		689173	0					
ANR	689261	Identifier	diff_y		689173	1					
ANR	689262	AssignmentExpression	diff_y = R_ABS ( ( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 ) )		689173	2		=			
ANR	689263	Identifier	diff_y		689173	0					
ANR	689264	CallExpression	R_ABS ( ( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 ) )		689173	1					
ANR	689265	Callee	R_ABS		689173	0					
ANR	689266	Identifier	R_ABS		689173	0					
ANR	689267	ArgumentList	( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 )		689173	1					
ANR	689268	Argument	( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 )		689173	0					
ANR	689269	AdditiveExpression	( y + ybendpoint1 + 1 ) - ( y2 - ybendpoint2 - 1 )		689173	0		-			
ANR	689270	AdditiveExpression	y + ybendpoint1 + 1		689173	0		+			
ANR	689271	Identifier	y		689173	0					
ANR	689272	AdditiveExpression	ybendpoint1 + 1		689173	1		+			
ANR	689273	Identifier	ybendpoint1		689173	0					
ANR	689274	PrimaryExpression	1		689173	1					
ANR	689275	AdditiveExpression	y2 - ybendpoint2 - 1		689173	1		-			
ANR	689276	Identifier	y2		689173	0					
ANR	689277	AdditiveExpression	ybendpoint2 - 1		689173	1		-			
ANR	689278	Identifier	ybendpoint2		689173	0					
ANR	689279	PrimaryExpression	1		689173	1					
ANR	689280	IdentifierDeclStatement	int w1 = diff_x1 == 0 ? 0 : diff_x1 + 1 ;	465:1:10657:10696	689173	6	True				
ANR	689281	IdentifierDecl	w1 = diff_x1 == 0 ? 0 : diff_x1 + 1		689173	0					
ANR	689282	IdentifierDeclType	int		689173	0					
ANR	689283	Identifier	w1		689173	1					
ANR	689284	AssignmentExpression	w1 = diff_x1 == 0 ? 0 : diff_x1 + 1		689173	2		=			
ANR	689285	Identifier	w1		689173	0					
ANR	689286	ConditionalExpression	diff_x1 == 0 ? 0 : diff_x1 + 1		689173	1					
ANR	689287	Condition	diff_x1 == 0		689173	0					
ANR	689288	EqualityExpression	diff_x1 == 0		689173	0		==			
ANR	689289	Identifier	diff_x1		689173	0					
ANR	689290	PrimaryExpression	0		689173	1					
ANR	689291	PrimaryExpression	0		689173	1					
ANR	689292	AdditiveExpression	diff_x1 + 1		689173	2		+			
ANR	689293	Identifier	diff_x1		689173	0					
ANR	689294	PrimaryExpression	1		689173	1					
ANR	689295	IdentifierDeclStatement	int w2 = diff_x2 == 0 ? 0 : diff_x2 + 1 ;	466:1:10699:10738	689173	7	True				
ANR	689296	IdentifierDecl	w2 = diff_x2 == 0 ? 0 : diff_x2 + 1		689173	0					
ANR	689297	IdentifierDeclType	int		689173	0					
ANR	689298	Identifier	w2		689173	1					
ANR	689299	AssignmentExpression	w2 = diff_x2 == 0 ? 0 : diff_x2 + 1		689173	2		=			
ANR	689300	Identifier	w2		689173	0					
ANR	689301	ConditionalExpression	diff_x2 == 0 ? 0 : diff_x2 + 1		689173	1					
ANR	689302	Condition	diff_x2 == 0		689173	0					
ANR	689303	EqualityExpression	diff_x2 == 0		689173	0		==			
ANR	689304	Identifier	diff_x2		689173	0					
ANR	689305	PrimaryExpression	0		689173	1					
ANR	689306	PrimaryExpression	0		689173	1					
ANR	689307	AdditiveExpression	diff_x2 + 1		689173	2		+			
ANR	689308	Identifier	diff_x2		689173	0					
ANR	689309	PrimaryExpression	1		689173	1					
ANR	689310	ExpressionStatement	"apply_line_style ( c , x , y , x2 , y2 , style , isvert )"	468:1:10742:10791	689173	8	True				
ANR	689311	CallExpression	"apply_line_style ( c , x , y , x2 , y2 , style , isvert )"		689173	0					
ANR	689312	Callee	apply_line_style		689173	0					
ANR	689313	Identifier	apply_line_style		689173	0					
ANR	689314	ArgumentList	c		689173	1					
ANR	689315	Argument	c		689173	0					
ANR	689316	Identifier	c		689173	0					
ANR	689317	Argument	x		689173	1					
ANR	689318	Identifier	x		689173	0					
ANR	689319	Argument	y		689173	2					
ANR	689320	Identifier	y		689173	0					
ANR	689321	Argument	x2		689173	3					
ANR	689322	Identifier	x2		689173	0					
ANR	689323	Argument	y2		689173	4					
ANR	689324	Identifier	y2		689173	0					
ANR	689325	Argument	style		689173	5					
ANR	689326	Identifier	style		689173	0					
ANR	689327	Argument	isvert		689173	6					
ANR	689328	Identifier	isvert		689173	0					
ANR	689329	IfStatement	if ( isvert )		689173	9					
ANR	689330	Condition	isvert	470:5:10799:10804	689173	0	True				
ANR	689331	Identifier	isvert		689173	0					
ANR	689332	CompoundStatement		19:13:459:459	689173	1					
ANR	689333	ExpressionStatement	"draw_vertical_line ( c , x , y + 1 , ybendpoint1 + 1 , style -> dot_style )"	471:2:10811:10878	689173	0	True				
ANR	689334	CallExpression	"draw_vertical_line ( c , x , y + 1 , ybendpoint1 + 1 , style -> dot_style )"		689173	0					
ANR	689335	Callee	draw_vertical_line		689173	0					
ANR	689336	Identifier	draw_vertical_line		689173	0					
ANR	689337	ArgumentList	c		689173	1					
ANR	689338	Argument	c		689173	0					
ANR	689339	Identifier	c		689173	0					
ANR	689340	Argument	x		689173	1					
ANR	689341	Identifier	x		689173	0					
ANR	689342	Argument	y + 1		689173	2					
ANR	689343	AdditiveExpression	y + 1		689173	0		+			
ANR	689344	Identifier	y		689173	0					
ANR	689345	PrimaryExpression	1		689173	1					
ANR	689346	Argument	ybendpoint1 + 1		689173	3					
ANR	689347	AdditiveExpression	ybendpoint1 + 1		689173	0		+			
ANR	689348	Identifier	ybendpoint1		689173	0					
ANR	689349	PrimaryExpression	1		689173	1					
ANR	689350	Argument	style -> dot_style		689173	4					
ANR	689351	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689352	Identifier	style		689173	0					
ANR	689353	Identifier	dot_style		689173	1					
ANR	689354	ExpressionStatement	"draw_horizontal_line ( c , min_x1 , y + ybendpoint1 + 2 , w1 , REV_APEX_APEX , style -> dot_style )"	472:2:10882:10972	689173	1	True				
ANR	689355	CallExpression	"draw_horizontal_line ( c , min_x1 , y + ybendpoint1 + 2 , w1 , REV_APEX_APEX , style -> dot_style )"		689173	0					
ANR	689356	Callee	draw_horizontal_line		689173	0					
ANR	689357	Identifier	draw_horizontal_line		689173	0					
ANR	689358	ArgumentList	c		689173	1					
ANR	689359	Argument	c		689173	0					
ANR	689360	Identifier	c		689173	0					
ANR	689361	Argument	min_x1		689173	1					
ANR	689362	Identifier	min_x1		689173	0					
ANR	689363	Argument	y + ybendpoint1 + 2		689173	2					
ANR	689364	AdditiveExpression	y + ybendpoint1 + 2		689173	0		+			
ANR	689365	Identifier	y		689173	0					
ANR	689366	AdditiveExpression	ybendpoint1 + 2		689173	1		+			
ANR	689367	Identifier	ybendpoint1		689173	0					
ANR	689368	PrimaryExpression	2		689173	1					
ANR	689369	Argument	w1		689173	3					
ANR	689370	Identifier	w1		689173	0					
ANR	689371	Argument	REV_APEX_APEX		689173	4					
ANR	689372	Identifier	REV_APEX_APEX		689173	0					
ANR	689373	Argument	style -> dot_style		689173	5					
ANR	689374	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689375	Identifier	style		689173	0					
ANR	689376	Identifier	dot_style		689173	1					
ANR	689377	ExpressionStatement	"draw_vertical_line ( c , xbendpoint , y2 - ybendpoint2 + 1 , diff_y - 1 , style -> dot_style )"	473:2:10976:11062	689173	2	True				
ANR	689378	CallExpression	"draw_vertical_line ( c , xbendpoint , y2 - ybendpoint2 + 1 , diff_y - 1 , style -> dot_style )"		689173	0					
ANR	689379	Callee	draw_vertical_line		689173	0					
ANR	689380	Identifier	draw_vertical_line		689173	0					
ANR	689381	ArgumentList	c		689173	1					
ANR	689382	Argument	c		689173	0					
ANR	689383	Identifier	c		689173	0					
ANR	689384	Argument	xbendpoint		689173	1					
ANR	689385	Identifier	xbendpoint		689173	0					
ANR	689386	Argument	y2 - ybendpoint2 + 1		689173	2					
ANR	689387	AdditiveExpression	y2 - ybendpoint2 + 1		689173	0		-			
ANR	689388	Identifier	y2		689173	0					
ANR	689389	AdditiveExpression	ybendpoint2 + 1		689173	1		+			
ANR	689390	Identifier	ybendpoint2		689173	0					
ANR	689391	PrimaryExpression	1		689173	1					
ANR	689392	Argument	diff_y - 1		689173	3					
ANR	689393	AdditiveExpression	diff_y - 1		689173	0		-			
ANR	689394	Identifier	diff_y		689173	0					
ANR	689395	PrimaryExpression	1		689173	1					
ANR	689396	Argument	style -> dot_style		689173	4					
ANR	689397	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689398	Identifier	style		689173	0					
ANR	689399	Identifier	dot_style		689173	1					
ANR	689400	ExpressionStatement	"draw_horizontal_line ( c , min_x2 , y2 - ybendpoint2 , w2 , DOT_DOT , style -> dot_style )"	474:2:11066:11147	689173	3	True				
ANR	689401	CallExpression	"draw_horizontal_line ( c , min_x2 , y2 - ybendpoint2 , w2 , DOT_DOT , style -> dot_style )"		689173	0					
ANR	689402	Callee	draw_horizontal_line		689173	0					
ANR	689403	Identifier	draw_horizontal_line		689173	0					
ANR	689404	ArgumentList	c		689173	1					
ANR	689405	Argument	c		689173	0					
ANR	689406	Identifier	c		689173	0					
ANR	689407	Argument	min_x2		689173	1					
ANR	689408	Identifier	min_x2		689173	0					
ANR	689409	Argument	y2 - ybendpoint2		689173	2					
ANR	689410	AdditiveExpression	y2 - ybendpoint2		689173	0		-			
ANR	689411	Identifier	y2		689173	0					
ANR	689412	Identifier	ybendpoint2		689173	1					
ANR	689413	Argument	w2		689173	3					
ANR	689414	Identifier	w2		689173	0					
ANR	689415	Argument	DOT_DOT		689173	4					
ANR	689416	Identifier	DOT_DOT		689173	0					
ANR	689417	Argument	style -> dot_style		689173	5					
ANR	689418	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689419	Identifier	style		689173	0					
ANR	689420	Identifier	dot_style		689173	1					
ANR	689421	ExpressionStatement	"draw_vertical_line ( c , x2 , y2 - ybendpoint2 + 1 , ybendpoint2 + 1 , style -> dot_style )"	475:2:11151:11234	689173	4	True				
ANR	689422	CallExpression	"draw_vertical_line ( c , x2 , y2 - ybendpoint2 + 1 , ybendpoint2 + 1 , style -> dot_style )"		689173	0					
ANR	689423	Callee	draw_vertical_line		689173	0					
ANR	689424	Identifier	draw_vertical_line		689173	0					
ANR	689425	ArgumentList	c		689173	1					
ANR	689426	Argument	c		689173	0					
ANR	689427	Identifier	c		689173	0					
ANR	689428	Argument	x2		689173	1					
ANR	689429	Identifier	x2		689173	0					
ANR	689430	Argument	y2 - ybendpoint2 + 1		689173	2					
ANR	689431	AdditiveExpression	y2 - ybendpoint2 + 1		689173	0		-			
ANR	689432	Identifier	y2		689173	0					
ANR	689433	AdditiveExpression	ybendpoint2 + 1		689173	1		+			
ANR	689434	Identifier	ybendpoint2		689173	0					
ANR	689435	PrimaryExpression	1		689173	1					
ANR	689436	Argument	ybendpoint2 + 1		689173	3					
ANR	689437	AdditiveExpression	ybendpoint2 + 1		689173	0		+			
ANR	689438	Identifier	ybendpoint2		689173	0					
ANR	689439	PrimaryExpression	1		689173	1					
ANR	689440	Argument	style -> dot_style		689173	4					
ANR	689441	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689442	Identifier	style		689173	0					
ANR	689443	Identifier	dot_style		689173	1					
ANR	689444	ElseStatement	else		689173	0					
ANR	689445	CompoundStatement		29:2:1015:1052	689173	0					
ANR	689446	IdentifierDeclStatement	"int miny1 = R_MIN ( y , xbendpoint ) ;"	477:2:11248:11281	689173	0	True				
ANR	689447	IdentifierDecl	"miny1 = R_MIN ( y , xbendpoint )"		689173	0					
ANR	689448	IdentifierDeclType	int		689173	0					
ANR	689449	Identifier	miny1		689173	1					
ANR	689450	AssignmentExpression	"miny1 = R_MIN ( y , xbendpoint )"		689173	2		=			
ANR	689451	Identifier	miny1		689173	0					
ANR	689452	CallExpression	"R_MIN ( y , xbendpoint )"		689173	1					
ANR	689453	Callee	R_MIN		689173	0					
ANR	689454	Identifier	R_MIN		689173	0					
ANR	689455	ArgumentList	y		689173	1					
ANR	689456	Argument	y		689173	0					
ANR	689457	Identifier	y		689173	0					
ANR	689458	Argument	xbendpoint		689173	1					
ANR	689459	Identifier	xbendpoint		689173	0					
ANR	689460	IdentifierDeclStatement	"int miny2 = R_MIN ( y2 , xbendpoint ) ;"	478:2:11285:11319	689173	1	True				
ANR	689461	IdentifierDecl	"miny2 = R_MIN ( y2 , xbendpoint )"		689173	0					
ANR	689462	IdentifierDeclType	int		689173	0					
ANR	689463	Identifier	miny2		689173	1					
ANR	689464	AssignmentExpression	"miny2 = R_MIN ( y2 , xbendpoint )"		689173	2		=			
ANR	689465	Identifier	miny2		689173	0					
ANR	689466	CallExpression	"R_MIN ( y2 , xbendpoint )"		689173	1					
ANR	689467	Callee	R_MIN		689173	0					
ANR	689468	Identifier	R_MIN		689173	0					
ANR	689469	ArgumentList	y2		689173	1					
ANR	689470	Argument	y2		689173	0					
ANR	689471	Identifier	y2		689173	0					
ANR	689472	Argument	xbendpoint		689173	1					
ANR	689473	Identifier	xbendpoint		689173	0					
ANR	689474	IdentifierDeclStatement	int diff_y1 = R_ABS ( y - xbendpoint ) ;	479:2:11323:11359	689173	2	True				
ANR	689475	IdentifierDecl	diff_y1 = R_ABS ( y - xbendpoint )		689173	0					
ANR	689476	IdentifierDeclType	int		689173	0					
ANR	689477	Identifier	diff_y1		689173	1					
ANR	689478	AssignmentExpression	diff_y1 = R_ABS ( y - xbendpoint )		689173	2		=			
ANR	689479	Identifier	diff_y1		689173	0					
ANR	689480	CallExpression	R_ABS ( y - xbendpoint )		689173	1					
ANR	689481	Callee	R_ABS		689173	0					
ANR	689482	Identifier	R_ABS		689173	0					
ANR	689483	ArgumentList	y - xbendpoint		689173	1					
ANR	689484	Argument	y - xbendpoint		689173	0					
ANR	689485	AdditiveExpression	y - xbendpoint		689173	0		-			
ANR	689486	Identifier	y		689173	0					
ANR	689487	Identifier	xbendpoint		689173	1					
ANR	689488	IdentifierDeclStatement	int diff_y2 = R_ABS ( y2 - xbendpoint ) ;	480:2:11363:11400	689173	3	True				
ANR	689489	IdentifierDecl	diff_y2 = R_ABS ( y2 - xbendpoint )		689173	0					
ANR	689490	IdentifierDeclType	int		689173	0					
ANR	689491	Identifier	diff_y2		689173	1					
ANR	689492	AssignmentExpression	diff_y2 = R_ABS ( y2 - xbendpoint )		689173	2		=			
ANR	689493	Identifier	diff_y2		689173	0					
ANR	689494	CallExpression	R_ABS ( y2 - xbendpoint )		689173	1					
ANR	689495	Callee	R_ABS		689173	0					
ANR	689496	Identifier	R_ABS		689173	0					
ANR	689497	ArgumentList	y2 - xbendpoint		689173	1					
ANR	689498	Argument	y2 - xbendpoint		689173	0					
ANR	689499	AdditiveExpression	y2 - xbendpoint		689173	0		-			
ANR	689500	Identifier	y2		689173	0					
ANR	689501	Identifier	xbendpoint		689173	1					
ANR	689502	ExpressionStatement	"draw_horizontal_line ( c , x + 1 , y , 1 + ybendpoint1 + 1 , xbendpoint > y ? NRM_DOT : NRM_APEX , style -> dot_style )"	482:2:11405:11515	689173	4	True				
ANR	689503	CallExpression	"draw_horizontal_line ( c , x + 1 , y , 1 + ybendpoint1 + 1 , xbendpoint > y ? NRM_DOT : NRM_APEX , style -> dot_style )"		689173	0					
ANR	689504	Callee	draw_horizontal_line		689173	0					
ANR	689505	Identifier	draw_horizontal_line		689173	0					
ANR	689506	ArgumentList	c		689173	1					
ANR	689507	Argument	c		689173	0					
ANR	689508	Identifier	c		689173	0					
ANR	689509	Argument	x + 1		689173	1					
ANR	689510	AdditiveExpression	x + 1		689173	0		+			
ANR	689511	Identifier	x		689173	0					
ANR	689512	PrimaryExpression	1		689173	1					
ANR	689513	Argument	y		689173	2					
ANR	689514	Identifier	y		689173	0					
ANR	689515	Argument	1 + ybendpoint1 + 1		689173	3					
ANR	689516	AdditiveExpression	1 + ybendpoint1 + 1		689173	0		+			
ANR	689517	PrimaryExpression	1		689173	0					
ANR	689518	AdditiveExpression	ybendpoint1 + 1		689173	1		+			
ANR	689519	Identifier	ybendpoint1		689173	0					
ANR	689520	PrimaryExpression	1		689173	1					
ANR	689521	Argument	xbendpoint > y ? NRM_DOT : NRM_APEX		689173	4					
ANR	689522	ConditionalExpression	xbendpoint > y ? NRM_DOT : NRM_APEX		689173	0					
ANR	689523	Condition	xbendpoint > y		689173	0					
ANR	689524	RelationalExpression	xbendpoint > y		689173	0		>			
ANR	689525	Identifier	xbendpoint		689173	0					
ANR	689526	Identifier	y		689173	1					
ANR	689527	Identifier	NRM_DOT		689173	1					
ANR	689528	Identifier	NRM_APEX		689173	2					
ANR	689529	Argument	style -> dot_style		689173	5					
ANR	689530	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689531	Identifier	style		689173	0					
ANR	689532	Identifier	dot_style		689173	1					
ANR	689533	ExpressionStatement	"draw_vertical_line ( c , x + 1 + ybendpoint1 + 1 , miny1 + 1 , diff_y1 - 1 , style -> dot_style )"	483:2:11519:11608	689173	5	True				
ANR	689534	CallExpression	"draw_vertical_line ( c , x + 1 + ybendpoint1 + 1 , miny1 + 1 , diff_y1 - 1 , style -> dot_style )"		689173	0					
ANR	689535	Callee	draw_vertical_line		689173	0					
ANR	689536	Identifier	draw_vertical_line		689173	0					
ANR	689537	ArgumentList	c		689173	1					
ANR	689538	Argument	c		689173	0					
ANR	689539	Identifier	c		689173	0					
ANR	689540	Argument	x + 1 + ybendpoint1 + 1		689173	1					
ANR	689541	AdditiveExpression	x + 1 + ybendpoint1 + 1		689173	0		+			
ANR	689542	Identifier	x		689173	0					
ANR	689543	AdditiveExpression	1 + ybendpoint1 + 1		689173	1		+			
ANR	689544	PrimaryExpression	1		689173	0					
ANR	689545	AdditiveExpression	ybendpoint1 + 1		689173	1		+			
ANR	689546	Identifier	ybendpoint1		689173	0					
ANR	689547	PrimaryExpression	1		689173	1					
ANR	689548	Argument	miny1 + 1		689173	2					
ANR	689549	AdditiveExpression	miny1 + 1		689173	0		+			
ANR	689550	Identifier	miny1		689173	0					
ANR	689551	PrimaryExpression	1		689173	1					
ANR	689552	Argument	diff_y1 - 1		689173	3					
ANR	689553	AdditiveExpression	diff_y1 - 1		689173	0		-			
ANR	689554	Identifier	diff_y1		689173	0					
ANR	689555	PrimaryExpression	1		689173	1					
ANR	689556	Argument	style -> dot_style		689173	4					
ANR	689557	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689558	Identifier	style		689173	0					
ANR	689559	Identifier	dot_style		689173	1					
ANR	689560	ExpressionStatement	"draw_horizontal_line ( c , x2 - ybendpoint2 , xbendpoint , ( x + 1 + ybendpoint1 + 1 ) - ( x2 - ybendpoint2 ) + 1 , xbendpoint > y ? REV_APEX_APEX : DOT_DOT , style -> dot_style )"	484:2:11612:11778	689173	6	True				
ANR	689561	CallExpression	"draw_horizontal_line ( c , x2 - ybendpoint2 , xbendpoint , ( x + 1 + ybendpoint1 + 1 ) - ( x2 - ybendpoint2 ) + 1 , xbendpoint > y ? REV_APEX_APEX : DOT_DOT , style -> dot_style )"		689173	0					
ANR	689562	Callee	draw_horizontal_line		689173	0					
ANR	689563	Identifier	draw_horizontal_line		689173	0					
ANR	689564	ArgumentList	c		689173	1					
ANR	689565	Argument	c		689173	0					
ANR	689566	Identifier	c		689173	0					
ANR	689567	Argument	x2 - ybendpoint2		689173	1					
ANR	689568	AdditiveExpression	x2 - ybendpoint2		689173	0		-			
ANR	689569	Identifier	x2		689173	0					
ANR	689570	Identifier	ybendpoint2		689173	1					
ANR	689571	Argument	xbendpoint		689173	2					
ANR	689572	Identifier	xbendpoint		689173	0					
ANR	689573	Argument	( x + 1 + ybendpoint1 + 1 ) - ( x2 - ybendpoint2 ) + 1		689173	3					
ANR	689574	AdditiveExpression	( x + 1 + ybendpoint1 + 1 ) - ( x2 - ybendpoint2 ) + 1		689173	0		-			
ANR	689575	AdditiveExpression	x + 1 + ybendpoint1 + 1		689173	0		+			
ANR	689576	Identifier	x		689173	0					
ANR	689577	AdditiveExpression	1 + ybendpoint1 + 1		689173	1		+			
ANR	689578	PrimaryExpression	1		689173	0					
ANR	689579	AdditiveExpression	ybendpoint1 + 1		689173	1		+			
ANR	689580	Identifier	ybendpoint1		689173	0					
ANR	689581	PrimaryExpression	1		689173	1					
ANR	689582	AdditiveExpression	( x2 - ybendpoint2 ) + 1		689173	1		+			
ANR	689583	AdditiveExpression	x2 - ybendpoint2		689173	0		-			
ANR	689584	Identifier	x2		689173	0					
ANR	689585	Identifier	ybendpoint2		689173	1					
ANR	689586	PrimaryExpression	1		689173	1					
ANR	689587	Argument	xbendpoint > y ? REV_APEX_APEX : DOT_DOT		689173	4					
ANR	689588	ConditionalExpression	xbendpoint > y ? REV_APEX_APEX : DOT_DOT		689173	0					
ANR	689589	Condition	xbendpoint > y		689173	0					
ANR	689590	RelationalExpression	xbendpoint > y		689173	0		>			
ANR	689591	Identifier	xbendpoint		689173	0					
ANR	689592	Identifier	y		689173	1					
ANR	689593	Identifier	REV_APEX_APEX		689173	1					
ANR	689594	Identifier	DOT_DOT		689173	2					
ANR	689595	Argument	style -> dot_style		689173	5					
ANR	689596	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689597	Identifier	style		689173	0					
ANR	689598	Identifier	dot_style		689173	1					
ANR	689599	ExpressionStatement	"draw_vertical_line ( c , x2 - ybendpoint2 , miny2 + 1 , diff_y2 - 1 , style -> dot_style )"	485:2:11782:11864	689173	7	True				
ANR	689600	CallExpression	"draw_vertical_line ( c , x2 - ybendpoint2 , miny2 + 1 , diff_y2 - 1 , style -> dot_style )"		689173	0					
ANR	689601	Callee	draw_vertical_line		689173	0					
ANR	689602	Identifier	draw_vertical_line		689173	0					
ANR	689603	ArgumentList	c		689173	1					
ANR	689604	Argument	c		689173	0					
ANR	689605	Identifier	c		689173	0					
ANR	689606	Argument	x2 - ybendpoint2		689173	1					
ANR	689607	AdditiveExpression	x2 - ybendpoint2		689173	0		-			
ANR	689608	Identifier	x2		689173	0					
ANR	689609	Identifier	ybendpoint2		689173	1					
ANR	689610	Argument	miny2 + 1		689173	2					
ANR	689611	AdditiveExpression	miny2 + 1		689173	0		+			
ANR	689612	Identifier	miny2		689173	0					
ANR	689613	PrimaryExpression	1		689173	1					
ANR	689614	Argument	diff_y2 - 1		689173	3					
ANR	689615	AdditiveExpression	diff_y2 - 1		689173	0		-			
ANR	689616	Identifier	diff_y2		689173	0					
ANR	689617	PrimaryExpression	1		689173	1					
ANR	689618	Argument	style -> dot_style		689173	4					
ANR	689619	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689620	Identifier	style		689173	0					
ANR	689621	Identifier	dot_style		689173	1					
ANR	689622	ExpressionStatement	"draw_horizontal_line ( c , x2 - ybendpoint2 , y2 , ybendpoint2 + 1 , xbendpoint > y ? DOT_NRM : REV_APEX_NRM , style -> dot_style )"	486:2:11868:11990	689173	8	True				
ANR	689623	CallExpression	"draw_horizontal_line ( c , x2 - ybendpoint2 , y2 , ybendpoint2 + 1 , xbendpoint > y ? DOT_NRM : REV_APEX_NRM , style -> dot_style )"		689173	0					
ANR	689624	Callee	draw_horizontal_line		689173	0					
ANR	689625	Identifier	draw_horizontal_line		689173	0					
ANR	689626	ArgumentList	c		689173	1					
ANR	689627	Argument	c		689173	0					
ANR	689628	Identifier	c		689173	0					
ANR	689629	Argument	x2 - ybendpoint2		689173	1					
ANR	689630	AdditiveExpression	x2 - ybendpoint2		689173	0		-			
ANR	689631	Identifier	x2		689173	0					
ANR	689632	Identifier	ybendpoint2		689173	1					
ANR	689633	Argument	y2		689173	2					
ANR	689634	Identifier	y2		689173	0					
ANR	689635	Argument	ybendpoint2 + 1		689173	3					
ANR	689636	AdditiveExpression	ybendpoint2 + 1		689173	0		+			
ANR	689637	Identifier	ybendpoint2		689173	0					
ANR	689638	PrimaryExpression	1		689173	1					
ANR	689639	Argument	xbendpoint > y ? DOT_NRM : REV_APEX_NRM		689173	4					
ANR	689640	ConditionalExpression	xbendpoint > y ? DOT_NRM : REV_APEX_NRM		689173	0					
ANR	689641	Condition	xbendpoint > y		689173	0					
ANR	689642	RelationalExpression	xbendpoint > y		689173	0		>			
ANR	689643	Identifier	xbendpoint		689173	0					
ANR	689644	Identifier	y		689173	1					
ANR	689645	Identifier	DOT_NRM		689173	1					
ANR	689646	Identifier	REV_APEX_NRM		689173	2					
ANR	689647	Argument	style -> dot_style		689173	5					
ANR	689648	PtrMemberAccess	style -> dot_style		689173	0					
ANR	689649	Identifier	style		689173	0					
ANR	689650	Identifier	dot_style		689173	1					
ANR	689651	ReturnType	R_API void		689173	1					
ANR	689652	Identifier	r_cons_canvas_line_back_edge		689173	2					
ANR	689653	ParameterList	"RConsCanvas * c , int x , int y , int x2 , int y2 , RCanvasLineStyle * style , int ybendpoint1 , int xbendpoint , int ybendpoint2 , int isvert"		689173	3					
ANR	689654	Parameter	RConsCanvas * c	452:41:10214:10227	689173	0	True				
ANR	689655	ParameterType	RConsCanvas *		689173	0					
ANR	689656	Identifier	c		689173	1					
ANR	689657	Parameter	int x	452:57:10230:10234	689173	1	True				
ANR	689658	ParameterType	int		689173	0					
ANR	689659	Identifier	x		689173	1					
ANR	689660	Parameter	int y	452:64:10237:10241	689173	2	True				
ANR	689661	ParameterType	int		689173	0					
ANR	689662	Identifier	y		689173	1					
ANR	689663	Parameter	int x2	452:71:10244:10249	689173	3	True				
ANR	689664	ParameterType	int		689173	0					
ANR	689665	Identifier	x2		689173	1					
ANR	689666	Parameter	int y2	452:79:10252:10257	689173	4	True				
ANR	689667	ParameterType	int		689173	0					
ANR	689668	Identifier	y2		689173	1					
ANR	689669	Parameter	RCanvasLineStyle * style	452:87:10260:10282	689173	5	True				
ANR	689670	ParameterType	RCanvasLineStyle *		689173	0					
ANR	689671	Identifier	style		689173	1					
ANR	689672	Parameter	int ybendpoint1	452:112:10285:10299	689173	6	True				
ANR	689673	ParameterType	int		689173	0					
ANR	689674	Identifier	ybendpoint1		689173	1					
ANR	689675	Parameter	int xbendpoint	452:129:10302:10315	689173	7	True				
ANR	689676	ParameterType	int		689173	0					
ANR	689677	Identifier	xbendpoint		689173	1					
ANR	689678	Parameter	int ybendpoint2	452:145:10318:10332	689173	8	True				
ANR	689679	ParameterType	int		689173	0					
ANR	689680	Identifier	ybendpoint2		689173	1					
ANR	689681	Parameter	int isvert	452:162:10335:10344	689173	9	True				
ANR	689682	ParameterType	int		689173	0					
ANR	689683	Identifier	isvert		689173	1					
ANR	689684	CFGEntryNode	ENTRY		689173		True				
ANR	689685	CFGExitNode	EXIT		689173		True				
ANR	689686	Symbol	ybendpoint1		689173						
ANR	689687	Symbol	NRM_APEX		689173						
ANR	689688	Symbol	ybendpoint2		689173						
ANR	689689	Symbol	R_ABS		689173						
ANR	689690	Symbol	NRM_DOT		689173						
ANR	689691	Symbol	* style		689173						
ANR	689692	Symbol	DOT_DOT		689173						
ANR	689693	Symbol	style -> dot_style		689173						
ANR	689694	Symbol	REV_APEX_NRM		689173						
ANR	689695	Symbol	y2		689173						
ANR	689696	Symbol	xbendpoint		689173						
ANR	689697	Symbol	diff_x1		689173						
ANR	689698	Symbol	w1		689173						
ANR	689699	Symbol	miny2		689173						
ANR	689700	Symbol	w2		689173						
ANR	689701	Symbol	miny1		689173						
ANR	689702	Symbol	diff_x2		689173						
ANR	689703	Symbol	REV_APEX_APEX		689173						
ANR	689704	Symbol	c		689173						
ANR	689705	Symbol	isvert		689173						
ANR	689706	Symbol	diff_y		689173						
ANR	689707	Symbol	c -> linemode		689173						
ANR	689708	Symbol	R_MIN		689173						
ANR	689709	Symbol	* c		689173						
ANR	689710	Symbol	DOT_NRM		689173						
ANR	689711	Symbol	x		689173						
ANR	689712	Symbol	y		689173						
ANR	689713	Symbol	x2		689173						
ANR	689714	Symbol	style		689173						
ANR	689715	Symbol	diff_y2		689173						
ANR	689716	Symbol	diff_y1		689173						
ANR	689717	Symbol	min_x2		689173						
ANR	689718	Symbol	min_x1		689173						
