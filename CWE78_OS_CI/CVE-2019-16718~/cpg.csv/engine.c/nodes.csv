command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1394543	File	data/converged/CVE-2019-16718~_radare2/engine.c								
ANR	1394544	ClassDef	match	71:0:2612:3132							
ANR	1394545	DeclStmt									
ANR	1394546	Decl							struct re_guts	struct re_guts *	g
ANR	1394547	DeclStmt									
ANR	1394548	Decl							int	int	eflags
ANR	1394549	DeclStmt									
ANR	1394550	Decl							RRegexMatch	RRegexMatch *	pmatch
ANR	1394551	DeclStmt									
ANR	1394552	Decl							char	char *	offp
ANR	1394553	DeclStmt									
ANR	1394554	Decl							char	char *	beginp
ANR	1394555	DeclStmt									
ANR	1394556	Decl							char	char *	endp
ANR	1394557	DeclStmt									
ANR	1394558	Decl							char	char *	coldp
ANR	1394559	DeclStmt									
ANR	1394560	Decl							char	char * *	lastpos
ANR	1394561	DeclStmt									
ANR	1394562	Decl							states	states	st
ANR	1394563	DeclStmt									
ANR	1394564	Decl							states	states	fresh
ANR	1394565	DeclStmt									
ANR	1394566	Decl							states	states	tmp
ANR	1394567	DeclStmt									
ANR	1394568	Decl							states	states	empty
ANR	1394569	DeclStmt									
ANR	1394570	Decl							int	"int ( struct re_guts * , char * , size_t , RRegexMatch [ ] , int )"	matcher
ANR	1394571	DeclStmt									
ANR	1394572	Decl							char	"char * ( struct match * , char * , char * , sopno , sopno )"	dissect
ANR	1394573	DeclStmt									
ANR	1394574	Decl							char	"char * ( struct match * , char * , char * , sopno , sopno , sopno , int )"	backref
ANR	1394575	DeclStmt									
ANR	1394576	Decl							char	"char * ( struct match * , char * , char * , sopno , sopno )"	fast
ANR	1394577	DeclStmt									
ANR	1394578	Decl							char	"char * ( struct match * , char * , char * , sopno , sopno )"	slow
ANR	1394579	DeclStmt									
ANR	1394580	Decl							states	"states ( struct re_guts * , sopno , sopno , states , int , states )"	step
ANR	1394581	DeclStmt									
ANR	1394582	Decl							void	"void ( struct match * , char * , states , int , FILE * )"	print
ANR	1394583	DeclStmt									
ANR	1394584	Decl							void	"void ( struct match * , char * , char * , char * , sopno , sopno )"	at
ANR	1394585	DeclStmt									
ANR	1394586	Decl							char	char * ( int )	pchar
ANR	1394587	DeclStmt									
ANR	1394588	Decl							int	int	nope
ANR	1394589	Function	matcher	127:0:4448:8732							
ANR	1394590	FunctionDef	"matcher (struct re_guts * g , char * string , size_t nmatch , RRegexMatch pmatch [ ] , int eflags)"		1394589	0					
ANR	1394591	CompoundStatement		130:0:4596:8732	1394589	0					
ANR	1394592	IdentifierDeclStatement	char * endp ;	131:1:4599:4609	1394589	0	True				
ANR	1394593	IdentifierDecl	* endp		1394589	0					
ANR	1394594	IdentifierDeclType	char *		1394589	0					
ANR	1394595	Identifier	endp		1394589	1					
ANR	1394596	IdentifierDeclStatement	int i ;	132:1:4612:4617	1394589	1	True				
ANR	1394597	IdentifierDecl	i		1394589	0					
ANR	1394598	IdentifierDeclType	int		1394589	0					
ANR	1394599	Identifier	i		1394589	1					
ANR	1394600	IdentifierDeclStatement	struct match mv ;	133:1:4620:4635	1394589	2	True				
ANR	1394601	IdentifierDecl	mv		1394589	0					
ANR	1394602	IdentifierDeclType	struct match		1394589	0					
ANR	1394603	Identifier	mv		1394589	1					
ANR	1394604	IdentifierDeclStatement	struct match * m = & mv ;	134:1:4638:4659	1394589	3	True				
ANR	1394605	IdentifierDecl	* m = & mv		1394589	0					
ANR	1394606	IdentifierDeclType	struct match *		1394589	0					
ANR	1394607	Identifier	m		1394589	1					
ANR	1394608	AssignmentExpression	* m = & mv		1394589	2		=			
ANR	1394609	Identifier	m		1394589	0					
ANR	1394610	UnaryOperationExpression	& mv		1394589	1					
ANR	1394611	UnaryOperator	&		1394589	0					
ANR	1394612	Identifier	mv		1394589	1					
ANR	1394613	IdentifierDeclStatement	char * dp ;	135:1:4662:4670	1394589	4	True				
ANR	1394614	IdentifierDecl	* dp		1394589	0					
ANR	1394615	IdentifierDeclType	char *		1394589	0					
ANR	1394616	Identifier	dp		1394589	1					
ANR	1394617	IdentifierDeclStatement	const sopno gf = g -> firststate + 1 ;	136:1:4673:4705	1394589	5	True				
ANR	1394618	IdentifierDecl	gf = g -> firststate + 1		1394589	0					
ANR	1394619	IdentifierDeclType	const sopno		1394589	0					
ANR	1394620	Identifier	gf		1394589	1					
ANR	1394621	AssignmentExpression	gf = g -> firststate + 1		1394589	2		=			
ANR	1394622	Identifier	gf		1394589	0					
ANR	1394623	AdditiveExpression	g -> firststate + 1		1394589	1		+			
ANR	1394624	PtrMemberAccess	g -> firststate		1394589	0					
ANR	1394625	Identifier	g		1394589	0					
ANR	1394626	Identifier	firststate		1394589	1					
ANR	1394627	PrimaryExpression	1		1394589	1					
ANR	1394628	IdentifierDeclStatement	const sopno gl = g -> laststate ;	137:1:4726:4755	1394589	6	True				
ANR	1394629	IdentifierDecl	gl = g -> laststate		1394589	0					
ANR	1394630	IdentifierDeclType	const sopno		1394589	0					
ANR	1394631	Identifier	gl		1394589	1					
ANR	1394632	AssignmentExpression	gl = g -> laststate		1394589	2		=			
ANR	1394633	Identifier	gl		1394589	0					
ANR	1394634	PtrMemberAccess	g -> laststate		1394589	1					
ANR	1394635	Identifier	g		1394589	0					
ANR	1394636	Identifier	laststate		1394589	1					
ANR	1394637	IdentifierDeclStatement	char * start ;	138:1:4758:4769	1394589	7	True				
ANR	1394638	IdentifierDecl	* start		1394589	0					
ANR	1394639	IdentifierDeclType	char *		1394589	0					
ANR	1394640	Identifier	start		1394589	1					
ANR	1394641	IdentifierDeclStatement	char * stop ;	139:1:4772:4782	1394589	8	True				
ANR	1394642	IdentifierDecl	* stop		1394589	0					
ANR	1394643	IdentifierDeclType	char *		1394589	0					
ANR	1394644	Identifier	stop		1394589	1					
ANR	1394645	IfStatement	if ( g -> cflags & R_REGEX_NOSUB )		1394589	9					
ANR	1394646	Condition	g -> cflags & R_REGEX_NOSUB	142:5:4835:4857	1394589	0	True				
ANR	1394647	BitAndExpression	g -> cflags & R_REGEX_NOSUB		1394589	0		&			
ANR	1394648	PtrMemberAccess	g -> cflags		1394589	0					
ANR	1394649	Identifier	g		1394589	0					
ANR	1394650	Identifier	cflags		1394589	1					
ANR	1394651	Identifier	R_REGEX_NOSUB		1394589	1					
ANR	1394652	ExpressionStatement	nmatch = 0	143:2:4862:4872	1394589	1	True				
ANR	1394653	AssignmentExpression	nmatch = 0		1394589	0		=			
ANR	1394654	Identifier	nmatch		1394589	0					
ANR	1394655	PrimaryExpression	0		1394589	1					
ANR	1394656	IfStatement	if ( eflags & R_REGEX_STARTEND )		1394589	10					
ANR	1394657	Condition	eflags & R_REGEX_STARTEND	144:5:4879:4901	1394589	0	True				
ANR	1394658	BitAndExpression	eflags & R_REGEX_STARTEND		1394589	0		&			
ANR	1394659	Identifier	eflags		1394589	0					
ANR	1394660	Identifier	R_REGEX_STARTEND		1394589	1					
ANR	1394661	CompoundStatement		15:30:307:307	1394589	1					
ANR	1394662	ExpressionStatement	start = string + pmatch [ 0 ] . rm_so	145:2:4908:4940	1394589	0	True				
ANR	1394663	AssignmentExpression	start = string + pmatch [ 0 ] . rm_so		1394589	0		=			
ANR	1394664	Identifier	start		1394589	0					
ANR	1394665	AdditiveExpression	string + pmatch [ 0 ] . rm_so		1394589	1		+			
ANR	1394666	Identifier	string		1394589	0					
ANR	1394667	MemberAccess	pmatch [ 0 ] . rm_so		1394589	1					
ANR	1394668	ArrayIndexing	pmatch [ 0 ]		1394589	0					
ANR	1394669	Identifier	pmatch		1394589	0					
ANR	1394670	PrimaryExpression	0		1394589	1					
ANR	1394671	Identifier	rm_so		1394589	1					
ANR	1394672	ExpressionStatement	stop = string + pmatch [ 0 ] . rm_eo	146:2:4944:4975	1394589	1	True				
ANR	1394673	AssignmentExpression	stop = string + pmatch [ 0 ] . rm_eo		1394589	0		=			
ANR	1394674	Identifier	stop		1394589	0					
ANR	1394675	AdditiveExpression	string + pmatch [ 0 ] . rm_eo		1394589	1		+			
ANR	1394676	Identifier	string		1394589	0					
ANR	1394677	MemberAccess	pmatch [ 0 ] . rm_eo		1394589	1					
ANR	1394678	ArrayIndexing	pmatch [ 0 ]		1394589	0					
ANR	1394679	Identifier	pmatch		1394589	0					
ANR	1394680	PrimaryExpression	0		1394589	1					
ANR	1394681	Identifier	rm_eo		1394589	1					
ANR	1394682	ElseStatement	else		1394589	0					
ANR	1394683	CompoundStatement		18:8:388:388	1394589	0					
ANR	1394684	ExpressionStatement	start = string	148:2:4989:5003	1394589	0	True				
ANR	1394685	AssignmentExpression	start = string		1394589	0		=			
ANR	1394686	Identifier	start		1394589	0					
ANR	1394687	Identifier	string		1394589	1					
ANR	1394688	ExpressionStatement	stop = start + strlen ( start )	149:2:5007:5035	1394589	1	True				
ANR	1394689	AssignmentExpression	stop = start + strlen ( start )		1394589	0		=			
ANR	1394690	Identifier	stop		1394589	0					
ANR	1394691	AdditiveExpression	start + strlen ( start )		1394589	1		+			
ANR	1394692	Identifier	start		1394589	0					
ANR	1394693	CallExpression	strlen ( start )		1394589	1					
ANR	1394694	Callee	strlen		1394589	0					
ANR	1394695	Identifier	strlen		1394589	0					
ANR	1394696	ArgumentList	start		1394589	1					
ANR	1394697	Argument	start		1394589	0					
ANR	1394698	Identifier	start		1394589	0					
ANR	1394699	IfStatement	if ( stop < start )		1394589	11					
ANR	1394700	Condition	stop < start	151:5:5045:5056	1394589	0	True				
ANR	1394701	RelationalExpression	stop < start		1394589	0		<			
ANR	1394702	Identifier	stop		1394589	0					
ANR	1394703	Identifier	start		1394589	1					
ANR	1394704	ReturnStatement	return ( R_REGEX_INVARG ) ;	152:2:5061:5083	1394589	1	True				
ANR	1394705	Identifier	R_REGEX_INVARG		1394589	0					
ANR	1394706	IfStatement	if ( g -> must != NULL )		1394589	12					
ANR	1394707	Condition	g -> must != NULL	155:5:5156:5170	1394589	0	True				
ANR	1394708	EqualityExpression	g -> must != NULL		1394589	0		!=			
ANR	1394709	PtrMemberAccess	g -> must		1394589	0					
ANR	1394710	Identifier	g		1394589	0					
ANR	1394711	Identifier	must		1394589	1					
ANR	1394712	Identifier	NULL		1394589	1					
ANR	1394713	CompoundStatement		26:22:576:576	1394589	1					
ANR	1394714	ForStatement	for ( dp = start ; dp < stop ; dp ++ )		1394589	0					
ANR	1394715	ForInit	dp = start ;	156:7:5182:5192	1394589	0	True				
ANR	1394716	AssignmentExpression	dp = start		1394589	0		=			
ANR	1394717	Identifier	dp		1394589	0					
ANR	1394718	Identifier	start		1394589	1					
ANR	1394719	Condition	dp < stop	156:19:5194:5202	1394589	1	True				
ANR	1394720	RelationalExpression	dp < stop		1394589	0		<			
ANR	1394721	Identifier	dp		1394589	0					
ANR	1394722	Identifier	stop		1394589	1					
ANR	1394723	PostIncDecOperationExpression	dp ++	156:30:5205:5208	1394589	2	True				
ANR	1394724	Identifier	dp		1394589	0					
ANR	1394725	IncDec	++		1394589	1					
ANR	1394726	IfStatement	"if ( * dp == g -> must [ 0 ] && stop - dp >= g -> mlen && memcmp ( dp , g -> must , ( size_t ) g -> mlen ) == 0 )"		1394589	3					
ANR	1394727	Condition	"* dp == g -> must [ 0 ] && stop - dp >= g -> mlen && memcmp ( dp , g -> must , ( size_t ) g -> mlen ) == 0"	157:7:5218:5307	1394589	0	True				
ANR	1394728	AndExpression	"* dp == g -> must [ 0 ] && stop - dp >= g -> mlen && memcmp ( dp , g -> must , ( size_t ) g -> mlen ) == 0"		1394589	0		&&			
ANR	1394729	EqualityExpression	* dp == g -> must [ 0 ]		1394589	0		==			
ANR	1394730	UnaryOperationExpression	* dp		1394589	0					
ANR	1394731	UnaryOperator	*		1394589	0					
ANR	1394732	Identifier	dp		1394589	1					
ANR	1394733	ArrayIndexing	g -> must [ 0 ]		1394589	1					
ANR	1394734	PtrMemberAccess	g -> must		1394589	0					
ANR	1394735	Identifier	g		1394589	0					
ANR	1394736	Identifier	must		1394589	1					
ANR	1394737	PrimaryExpression	0		1394589	1					
ANR	1394738	AndExpression	"stop - dp >= g -> mlen && memcmp ( dp , g -> must , ( size_t ) g -> mlen ) == 0"		1394589	1		&&			
ANR	1394739	RelationalExpression	stop - dp >= g -> mlen		1394589	0		>=			
ANR	1394740	AdditiveExpression	stop - dp		1394589	0		-			
ANR	1394741	Identifier	stop		1394589	0					
ANR	1394742	Identifier	dp		1394589	1					
ANR	1394743	PtrMemberAccess	g -> mlen		1394589	1					
ANR	1394744	Identifier	g		1394589	0					
ANR	1394745	Identifier	mlen		1394589	1					
ANR	1394746	EqualityExpression	"memcmp ( dp , g -> must , ( size_t ) g -> mlen ) == 0"		1394589	1		==			
ANR	1394747	CallExpression	"memcmp ( dp , g -> must , ( size_t ) g -> mlen )"		1394589	0					
ANR	1394748	Callee	memcmp		1394589	0					
ANR	1394749	Identifier	memcmp		1394589	0					
ANR	1394750	ArgumentList	dp		1394589	1					
ANR	1394751	Argument	dp		1394589	0					
ANR	1394752	Identifier	dp		1394589	0					
ANR	1394753	Argument	g -> must		1394589	1					
ANR	1394754	PtrMemberAccess	g -> must		1394589	0					
ANR	1394755	Identifier	g		1394589	0					
ANR	1394756	Identifier	must		1394589	1					
ANR	1394757	Argument	( size_t ) g -> mlen		1394589	2					
ANR	1394758	CastExpression	( size_t ) g -> mlen		1394589	0					
ANR	1394759	CastTarget	size_t		1394589	0					
ANR	1394760	PtrMemberAccess	g -> mlen		1394589	1					
ANR	1394761	Identifier	g		1394589	0					
ANR	1394762	Identifier	mlen		1394589	1					
ANR	1394763	PrimaryExpression	0		1394589	1					
ANR	1394764	BreakStatement	break ;	159:4:5314:5319	1394589	1	True				
ANR	1394765	IfStatement	if ( dp == stop )		1394589	1					
ANR	1394766	Condition	dp == stop	160:6:5327:5336	1394589	0	True				
ANR	1394767	EqualityExpression	dp == stop		1394589	0		==			
ANR	1394768	Identifier	dp		1394589	0					
ANR	1394769	Identifier	stop		1394589	1					
ANR	1394770	ReturnStatement	return ( R_REGEX_NOMATCH ) ;	161:3:5372:5395	1394589	1	True				
ANR	1394771	Identifier	R_REGEX_NOMATCH		1394589	0					
ANR	1394772	ExpressionStatement	m -> g = g	165:1:5428:5436	1394589	13	True				
ANR	1394773	AssignmentExpression	m -> g = g		1394589	0		=			
ANR	1394774	PtrMemberAccess	m -> g		1394589	0					
ANR	1394775	Identifier	m		1394589	0					
ANR	1394776	Identifier	g		1394589	1					
ANR	1394777	Identifier	g		1394589	1					
ANR	1394778	ExpressionStatement	m -> eflags = eflags	166:1:5439:5457	1394589	14	True				
ANR	1394779	AssignmentExpression	m -> eflags = eflags		1394589	0		=			
ANR	1394780	PtrMemberAccess	m -> eflags		1394589	0					
ANR	1394781	Identifier	m		1394589	0					
ANR	1394782	Identifier	eflags		1394589	1					
ANR	1394783	Identifier	eflags		1394589	1					
ANR	1394784	ExpressionStatement	m -> pmatch = NULL	167:1:5460:5476	1394589	15	True				
ANR	1394785	AssignmentExpression	m -> pmatch = NULL		1394589	0		=			
ANR	1394786	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1394787	Identifier	m		1394589	0					
ANR	1394788	Identifier	pmatch		1394589	1					
ANR	1394789	Identifier	NULL		1394589	1					
ANR	1394790	ExpressionStatement	m -> lastpos = NULL	168:1:5479:5496	1394589	16	True				
ANR	1394791	AssignmentExpression	m -> lastpos = NULL		1394589	0		=			
ANR	1394792	PtrMemberAccess	m -> lastpos		1394589	0					
ANR	1394793	Identifier	m		1394589	0					
ANR	1394794	Identifier	lastpos		1394589	1					
ANR	1394795	Identifier	NULL		1394589	1					
ANR	1394796	ExpressionStatement	m -> offp = string	169:1:5499:5515	1394589	17	True				
ANR	1394797	AssignmentExpression	m -> offp = string		1394589	0		=			
ANR	1394798	PtrMemberAccess	m -> offp		1394589	0					
ANR	1394799	Identifier	m		1394589	0					
ANR	1394800	Identifier	offp		1394589	1					
ANR	1394801	Identifier	string		1394589	1					
ANR	1394802	ExpressionStatement	m -> beginp = start	170:1:5518:5535	1394589	18	True				
ANR	1394803	AssignmentExpression	m -> beginp = start		1394589	0		=			
ANR	1394804	PtrMemberAccess	m -> beginp		1394589	0					
ANR	1394805	Identifier	m		1394589	0					
ANR	1394806	Identifier	beginp		1394589	1					
ANR	1394807	Identifier	start		1394589	1					
ANR	1394808	ExpressionStatement	m -> endp = stop	171:1:5538:5552	1394589	19	True				
ANR	1394809	AssignmentExpression	m -> endp = stop		1394589	0		=			
ANR	1394810	PtrMemberAccess	m -> endp		1394589	0					
ANR	1394811	Identifier	m		1394589	0					
ANR	1394812	Identifier	endp		1394589	1					
ANR	1394813	Identifier	stop		1394589	1					
ANR	1394814	IfStatement	if ( m -> g -> nstates * 4 < m -> g -> nstates )		1394589	20					
ANR	1394815	Condition	m -> g -> nstates * 4 < m -> g -> nstates	173:5:5560:5592	1394589	0	True				
ANR	1394816	RelationalExpression	m -> g -> nstates * 4 < m -> g -> nstates		1394589	0		<			
ANR	1394817	MultiplicativeExpression	m -> g -> nstates * 4		1394589	0		*			
ANR	1394818	PtrMemberAccess	m -> g -> nstates		1394589	0					
ANR	1394819	PtrMemberAccess	m -> g		1394589	0					
ANR	1394820	Identifier	m		1394589	0					
ANR	1394821	Identifier	g		1394589	1					
ANR	1394822	Identifier	nstates		1394589	1					
ANR	1394823	PrimaryExpression	4		1394589	1					
ANR	1394824	PtrMemberAccess	m -> g -> nstates		1394589	1					
ANR	1394825	PtrMemberAccess	m -> g		1394589	0					
ANR	1394826	Identifier	m		1394589	0					
ANR	1394827	Identifier	g		1394589	1					
ANR	1394828	Identifier	nstates		1394589	1					
ANR	1394829	ReturnStatement	return R_REGEX_NOMATCH ;	174:2:5597:5619	1394589	1	True				
ANR	1394830	Identifier	R_REGEX_NOMATCH		1394589	0					
ANR	1394831	ExpressionStatement	"STATESETUP ( m , 4 )"	175:1:5622:5638	1394589	21	True				
ANR	1394832	CallExpression	"STATESETUP ( m , 4 )"		1394589	0					
ANR	1394833	Callee	STATESETUP		1394589	0					
ANR	1394834	Identifier	STATESETUP		1394589	0					
ANR	1394835	ArgumentList	m		1394589	1					
ANR	1394836	Argument	m		1394589	0					
ANR	1394837	Identifier	m		1394589	0					
ANR	1394838	Argument	4		1394589	1					
ANR	1394839	PrimaryExpression	4		1394589	0					
ANR	1394840	ExpressionStatement	SETUP ( m -> st )	176:1:5641:5653	1394589	22	True				
ANR	1394841	CallExpression	SETUP ( m -> st )		1394589	0					
ANR	1394842	Callee	SETUP		1394589	0					
ANR	1394843	Identifier	SETUP		1394589	0					
ANR	1394844	ArgumentList	m -> st		1394589	1					
ANR	1394845	Argument	m -> st		1394589	0					
ANR	1394846	PtrMemberAccess	m -> st		1394589	0					
ANR	1394847	Identifier	m		1394589	0					
ANR	1394848	Identifier	st		1394589	1					
ANR	1394849	ExpressionStatement	SETUP ( m -> fresh )	177:1:5656:5671	1394589	23	True				
ANR	1394850	CallExpression	SETUP ( m -> fresh )		1394589	0					
ANR	1394851	Callee	SETUP		1394589	0					
ANR	1394852	Identifier	SETUP		1394589	0					
ANR	1394853	ArgumentList	m -> fresh		1394589	1					
ANR	1394854	Argument	m -> fresh		1394589	0					
ANR	1394855	PtrMemberAccess	m -> fresh		1394589	0					
ANR	1394856	Identifier	m		1394589	0					
ANR	1394857	Identifier	fresh		1394589	1					
ANR	1394858	ExpressionStatement	SETUP ( m -> tmp )	178:1:5674:5687	1394589	24	True				
ANR	1394859	CallExpression	SETUP ( m -> tmp )		1394589	0					
ANR	1394860	Callee	SETUP		1394589	0					
ANR	1394861	Identifier	SETUP		1394589	0					
ANR	1394862	ArgumentList	m -> tmp		1394589	1					
ANR	1394863	Argument	m -> tmp		1394589	0					
ANR	1394864	PtrMemberAccess	m -> tmp		1394589	0					
ANR	1394865	Identifier	m		1394589	0					
ANR	1394866	Identifier	tmp		1394589	1					
ANR	1394867	ExpressionStatement	SETUP ( m -> empty )	179:1:5690:5705	1394589	25	True				
ANR	1394868	CallExpression	SETUP ( m -> empty )		1394589	0					
ANR	1394869	Callee	SETUP		1394589	0					
ANR	1394870	Identifier	SETUP		1394589	0					
ANR	1394871	ArgumentList	m -> empty		1394589	1					
ANR	1394872	Argument	m -> empty		1394589	0					
ANR	1394873	PtrMemberAccess	m -> empty		1394589	0					
ANR	1394874	Identifier	m		1394589	0					
ANR	1394875	Identifier	empty		1394589	1					
ANR	1394876	ExpressionStatement	CLEAR ( m -> empty )	180:1:5708:5723	1394589	26	True				
ANR	1394877	CallExpression	CLEAR ( m -> empty )		1394589	0					
ANR	1394878	Callee	CLEAR		1394589	0					
ANR	1394879	Identifier	CLEAR		1394589	0					
ANR	1394880	ArgumentList	m -> empty		1394589	1					
ANR	1394881	Argument	m -> empty		1394589	0					
ANR	1394882	PtrMemberAccess	m -> empty		1394589	0					
ANR	1394883	Identifier	m		1394589	0					
ANR	1394884	Identifier	empty		1394589	1					
ANR	1394885	ForStatement	for ( ; ; )		1394589	27					
ANR	1394886	CompoundStatement		54:10:1201:1201	1394589	0					
ANR	1394887	ExpressionStatement	"endp = fast ( m , start , stop , gf , gl )"	184:2:5802:5837	1394589	0	True				
ANR	1394888	AssignmentExpression	"endp = fast ( m , start , stop , gf , gl )"		1394589	0		=			
ANR	1394889	Identifier	endp		1394589	0					
ANR	1394890	CallExpression	"fast ( m , start , stop , gf , gl )"		1394589	1					
ANR	1394891	Callee	fast		1394589	0					
ANR	1394892	Identifier	fast		1394589	0					
ANR	1394893	ArgumentList	m		1394589	1					
ANR	1394894	Argument	m		1394589	0					
ANR	1394895	Identifier	m		1394589	0					
ANR	1394896	Argument	start		1394589	1					
ANR	1394897	Identifier	start		1394589	0					
ANR	1394898	Argument	stop		1394589	2					
ANR	1394899	Identifier	stop		1394589	0					
ANR	1394900	Argument	gf		1394589	3					
ANR	1394901	Identifier	gf		1394589	0					
ANR	1394902	Argument	gl		1394589	4					
ANR	1394903	Identifier	gl		1394589	0					
ANR	1394904	IfStatement	if ( ! endp )		1394589	1					
ANR	1394905	Condition	! endp	185:6:5845:5849	1394589	0	True				
ANR	1394906	UnaryOperationExpression	! endp		1394589	0					
ANR	1394907	UnaryOperator	!		1394589	0					
ANR	1394908	Identifier	endp		1394589	1					
ANR	1394909	CompoundStatement		56:13:1255:1255	1394589	1					
ANR	1394910	ExpressionStatement	free ( m -> pmatch )	186:3:5871:5886	1394589	0	True				
ANR	1394911	CallExpression	free ( m -> pmatch )		1394589	0					
ANR	1394912	Callee	free		1394589	0					
ANR	1394913	Identifier	free		1394589	0					
ANR	1394914	ArgumentList	m -> pmatch		1394589	1					
ANR	1394915	Argument	m -> pmatch		1394589	0					
ANR	1394916	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1394917	Identifier	m		1394589	0					
ANR	1394918	Identifier	pmatch		1394589	1					
ANR	1394919	ExpressionStatement	free ( m -> lastpos )	187:3:5891:5907	1394589	1	True				
ANR	1394920	CallExpression	free ( m -> lastpos )		1394589	0					
ANR	1394921	Callee	free		1394589	0					
ANR	1394922	Identifier	free		1394589	0					
ANR	1394923	ArgumentList	m -> lastpos		1394589	1					
ANR	1394924	Argument	m -> lastpos		1394589	0					
ANR	1394925	PtrMemberAccess	m -> lastpos		1394589	0					
ANR	1394926	Identifier	m		1394589	0					
ANR	1394927	Identifier	lastpos		1394589	1					
ANR	1394928	ExpressionStatement	STATETEARDOWN ( m )	188:3:5912:5928	1394589	2	True				
ANR	1394929	CallExpression	STATETEARDOWN ( m )		1394589	0					
ANR	1394930	Callee	STATETEARDOWN		1394589	0					
ANR	1394931	Identifier	STATETEARDOWN		1394589	0					
ANR	1394932	ArgumentList	m		1394589	1					
ANR	1394933	Argument	m		1394589	0					
ANR	1394934	Identifier	m		1394589	0					
ANR	1394935	ReturnStatement	return ( R_REGEX_NOMATCH ) ;	189:3:5933:5956	1394589	3	True				
ANR	1394936	Identifier	R_REGEX_NOMATCH		1394589	0					
ANR	1394937	IfStatement	if ( nmatch == 0 && ! g -> backrefs )		1394589	2					
ANR	1394938	Condition	nmatch == 0 && ! g -> backrefs	191:6:5968:5994	1394589	0	True				
ANR	1394939	AndExpression	nmatch == 0 && ! g -> backrefs		1394589	0		&&			
ANR	1394940	EqualityExpression	nmatch == 0		1394589	0		==			
ANR	1394941	Identifier	nmatch		1394589	0					
ANR	1394942	PrimaryExpression	0		1394589	1					
ANR	1394943	UnaryOperationExpression	! g -> backrefs		1394589	1					
ANR	1394944	UnaryOperator	!		1394589	0					
ANR	1394945	PtrMemberAccess	g -> backrefs		1394589	1					
ANR	1394946	Identifier	g		1394589	0					
ANR	1394947	Identifier	backrefs		1394589	1					
ANR	1394948	BreakStatement	break ;	192:3:6000:6005	1394589	1	True				
ANR	1394949	IfStatement	if ( ! m -> coldp )		1394589	3					
ANR	1394950	Condition	! m -> coldp	195:6:6059:6067	1394589	0	True				
ANR	1394951	UnaryOperationExpression	! m -> coldp		1394589	0					
ANR	1394952	UnaryOperator	!		1394589	0					
ANR	1394953	PtrMemberAccess	m -> coldp		1394589	1					
ANR	1394954	Identifier	m		1394589	0					
ANR	1394955	Identifier	coldp		1394589	1					
ANR	1394956	CompoundStatement		66:17:1473:1473	1394589	1					
ANR	1394957	BreakStatement	break ;	196:3:6075:6080	1394589	0	True				
ANR	1394958	ForStatement	for ( ; ; )		1394589	4					
ANR	1394959	CompoundStatement		69:11:1500:1500	1394589	0					
ANR	1394960	ExpressionStatement	"NOTE ( ""finding start"" )"	199:3:6102:6123	1394589	0	True				
ANR	1394961	CallExpression	"NOTE ( ""finding start"" )"		1394589	0					
ANR	1394962	Callee	NOTE		1394589	0					
ANR	1394963	Identifier	NOTE		1394589	0					
ANR	1394964	ArgumentList	"""finding start"""		1394589	1					
ANR	1394965	Argument	"""finding start"""		1394589	0					
ANR	1394966	PrimaryExpression	"""finding start"""		1394589	0					
ANR	1394967	ExpressionStatement	"endp = slow ( m , m -> coldp , stop , gf , gl )"	200:3:6128:6166	1394589	1	True				
ANR	1394968	AssignmentExpression	"endp = slow ( m , m -> coldp , stop , gf , gl )"		1394589	0		=			
ANR	1394969	Identifier	endp		1394589	0					
ANR	1394970	CallExpression	"slow ( m , m -> coldp , stop , gf , gl )"		1394589	1					
ANR	1394971	Callee	slow		1394589	0					
ANR	1394972	Identifier	slow		1394589	0					
ANR	1394973	ArgumentList	m		1394589	1					
ANR	1394974	Argument	m		1394589	0					
ANR	1394975	Identifier	m		1394589	0					
ANR	1394976	Argument	m -> coldp		1394589	1					
ANR	1394977	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1394978	Identifier	m		1394589	0					
ANR	1394979	Identifier	coldp		1394589	1					
ANR	1394980	Argument	stop		1394589	2					
ANR	1394981	Identifier	stop		1394589	0					
ANR	1394982	Argument	gf		1394589	3					
ANR	1394983	Identifier	gf		1394589	0					
ANR	1394984	Argument	gl		1394589	4					
ANR	1394985	Identifier	gl		1394589	0					
ANR	1394986	IfStatement	if ( endp || m -> coldp > m -> endp )		1394589	2					
ANR	1394987	Condition	endp || m -> coldp > m -> endp	201:7:6175:6200	1394589	0	True				
ANR	1394988	OrExpression	endp || m -> coldp > m -> endp		1394589	0		||			
ANR	1394989	Identifier	endp		1394589	0					
ANR	1394990	RelationalExpression	m -> coldp > m -> endp		1394589	1		>			
ANR	1394991	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1394992	Identifier	m		1394589	0					
ANR	1394993	Identifier	coldp		1394589	1					
ANR	1394994	PtrMemberAccess	m -> endp		1394589	1					
ANR	1394995	Identifier	m		1394589	0					
ANR	1394996	Identifier	endp		1394589	1					
ANR	1394997	CompoundStatement		72:35:1606:1606	1394589	1					
ANR	1394998	BreakStatement	break ;	202:4:6209:6214	1394589	0	True				
ANR	1394999	ExpressionStatement	m -> coldp ++	204:3:6224:6234	1394589	3	True				
ANR	1395000	PostIncDecOperationExpression	m -> coldp ++		1394589	0					
ANR	1395001	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395002	Identifier	m		1394589	0					
ANR	1395003	Identifier	coldp		1394589	1					
ANR	1395004	IncDec	++		1394589	1					
ANR	1395005	IfStatement	if ( nmatch == 1 && ! g -> backrefs )		1394589	5					
ANR	1395006	Condition	nmatch == 1 && ! g -> backrefs	206:6:6246:6272	1394589	0	True				
ANR	1395007	AndExpression	nmatch == 1 && ! g -> backrefs		1394589	0		&&			
ANR	1395008	EqualityExpression	nmatch == 1		1394589	0		==			
ANR	1395009	Identifier	nmatch		1394589	0					
ANR	1395010	PrimaryExpression	1		1394589	1					
ANR	1395011	UnaryOperationExpression	! g -> backrefs		1394589	1					
ANR	1395012	UnaryOperator	!		1394589	0					
ANR	1395013	PtrMemberAccess	g -> backrefs		1394589	1					
ANR	1395014	Identifier	g		1394589	0					
ANR	1395015	Identifier	backrefs		1394589	1					
ANR	1395016	BreakStatement	break ;	207:3:6278:6283	1394589	1	True				
ANR	1395017	IfStatement	if ( ! m -> pmatch )		1394589	6					
ANR	1395018	Condition	! m -> pmatch	210:6:6368:6377	1394589	0	True				
ANR	1395019	UnaryOperationExpression	! m -> pmatch		1394589	0					
ANR	1395020	UnaryOperator	!		1394589	0					
ANR	1395021	PtrMemberAccess	m -> pmatch		1394589	1					
ANR	1395022	Identifier	m		1394589	0					
ANR	1395023	Identifier	pmatch		1394589	1					
ANR	1395024	CompoundStatement		81:18:1783:1783	1394589	1					
ANR	1395025	IfStatement	if ( ( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) < m -> g -> nsub )		1394589	0					
ANR	1395026	Condition	( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) < m -> g -> nsub	211:7:6389:6439	1394589	0	True				
ANR	1395027	RelationalExpression	( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) < m -> g -> nsub		1394589	0		<			
ANR	1395028	MultiplicativeExpression	( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch )		1394589	0		*			
ANR	1395029	AdditiveExpression	m -> g -> nsub + 1		1394589	0		+			
ANR	1395030	PtrMemberAccess	m -> g -> nsub		1394589	0					
ANR	1395031	PtrMemberAccess	m -> g		1394589	0					
ANR	1395032	Identifier	m		1394589	0					
ANR	1395033	Identifier	g		1394589	1					
ANR	1395034	Identifier	nsub		1394589	1					
ANR	1395035	PrimaryExpression	1		1394589	1					
ANR	1395036	SizeofExpression	sizeof ( RRegexMatch )		1394589	1					
ANR	1395037	Sizeof	sizeof		1394589	0					
ANR	1395038	SizeofOperand	RRegexMatch		1394589	1					
ANR	1395039	PtrMemberAccess	m -> g -> nsub		1394589	1					
ANR	1395040	PtrMemberAccess	m -> g		1394589	0					
ANR	1395041	Identifier	m		1394589	0					
ANR	1395042	Identifier	g		1394589	1					
ANR	1395043	Identifier	nsub		1394589	1					
ANR	1395044	CompoundStatement		82:60:1845:1845	1394589	1					
ANR	1395045	ReturnStatement	return R_REGEX_ESPACE ;	212:4:6448:6469	1394589	0	True				
ANR	1395046	Identifier	R_REGEX_ESPACE		1394589	0					
ANR	1395047	ExpressionStatement	m -> pmatch = ( RRegexMatch * ) malloc ( ( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) )	214:3:6479:6559	1394589	1	True				
ANR	1395048	AssignmentExpression	m -> pmatch = ( RRegexMatch * ) malloc ( ( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) )		1394589	0		=			
ANR	1395049	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395050	Identifier	m		1394589	0					
ANR	1395051	Identifier	pmatch		1394589	1					
ANR	1395052	CastExpression	( RRegexMatch * ) malloc ( ( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) )		1394589	1					
ANR	1395053	CastTarget	RRegexMatch *		1394589	0					
ANR	1395054	CallExpression	malloc ( ( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch ) )		1394589	1					
ANR	1395055	Callee	malloc		1394589	0					
ANR	1395056	Identifier	malloc		1394589	0					
ANR	1395057	ArgumentList	( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch )		1394589	1					
ANR	1395058	Argument	( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch )		1394589	0					
ANR	1395059	MultiplicativeExpression	( m -> g -> nsub + 1 ) * sizeof ( RRegexMatch )		1394589	0		*			
ANR	1395060	AdditiveExpression	m -> g -> nsub + 1		1394589	0		+			
ANR	1395061	PtrMemberAccess	m -> g -> nsub		1394589	0					
ANR	1395062	PtrMemberAccess	m -> g		1394589	0					
ANR	1395063	Identifier	m		1394589	0					
ANR	1395064	Identifier	g		1394589	1					
ANR	1395065	Identifier	nsub		1394589	1					
ANR	1395066	PrimaryExpression	1		1394589	1					
ANR	1395067	SizeofExpression	sizeof ( RRegexMatch )		1394589	1					
ANR	1395068	Sizeof	sizeof		1394589	0					
ANR	1395069	SizeofOperand	RRegexMatch		1394589	1					
ANR	1395070	IfStatement	if ( ! m -> pmatch )		1394589	7					
ANR	1395071	Condition	! m -> pmatch	217:6:6571:6580	1394589	0	True				
ANR	1395072	UnaryOperationExpression	! m -> pmatch		1394589	0					
ANR	1395073	UnaryOperator	!		1394589	0					
ANR	1395074	PtrMemberAccess	m -> pmatch		1394589	1					
ANR	1395075	Identifier	m		1394589	0					
ANR	1395076	Identifier	pmatch		1394589	1					
ANR	1395077	CompoundStatement		88:18:1986:1986	1394589	1					
ANR	1395078	ExpressionStatement	STATETEARDOWN ( m )	218:3:6588:6604	1394589	0	True				
ANR	1395079	CallExpression	STATETEARDOWN ( m )		1394589	0					
ANR	1395080	Callee	STATETEARDOWN		1394589	0					
ANR	1395081	Identifier	STATETEARDOWN		1394589	0					
ANR	1395082	ArgumentList	m		1394589	1					
ANR	1395083	Argument	m		1394589	0					
ANR	1395084	Identifier	m		1394589	0					
ANR	1395085	ReturnStatement	return ( R_REGEX_ESPACE ) ;	219:3:6609:6631	1394589	1	True				
ANR	1395086	Identifier	R_REGEX_ESPACE		1394589	0					
ANR	1395087	ForStatement	for ( i = 1 ; i <= m -> g -> nsub ; i ++ )		1394589	8					
ANR	1395088	ForInit	i = 1 ;	221:7:6644:6649	1394589	0	True				
ANR	1395089	AssignmentExpression	i = 1		1394589	0		=			
ANR	1395090	Identifier	i		1394589	0					
ANR	1395091	PrimaryExpression	1		1394589	1					
ANR	1395092	Condition	i <= m -> g -> nsub	221:14:6651:6665	1394589	1	True				
ANR	1395093	RelationalExpression	i <= m -> g -> nsub		1394589	0		<=			
ANR	1395094	Identifier	i		1394589	0					
ANR	1395095	PtrMemberAccess	m -> g -> nsub		1394589	1					
ANR	1395096	PtrMemberAccess	m -> g		1394589	0					
ANR	1395097	Identifier	m		1394589	0					
ANR	1395098	Identifier	g		1394589	1					
ANR	1395099	Identifier	nsub		1394589	1					
ANR	1395100	PostIncDecOperationExpression	i ++	221:31:6668:6670	1394589	2	True				
ANR	1395101	Identifier	i		1394589	0					
ANR	1395102	IncDec	++		1394589	1					
ANR	1395103	ExpressionStatement	m -> pmatch [ i ] . rm_so = m -> pmatch [ i ] . rm_eo = - 1	222:3:6676:6720	1394589	3	True				
ANR	1395104	AssignmentExpression	m -> pmatch [ i ] . rm_so = m -> pmatch [ i ] . rm_eo = - 1		1394589	0		=			
ANR	1395105	MemberAccess	m -> pmatch [ i ] . rm_so		1394589	0					
ANR	1395106	ArrayIndexing	m -> pmatch [ i ]		1394589	0					
ANR	1395107	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395108	Identifier	m		1394589	0					
ANR	1395109	Identifier	pmatch		1394589	1					
ANR	1395110	Identifier	i		1394589	1					
ANR	1395111	Identifier	rm_so		1394589	1					
ANR	1395112	AssignmentExpression	m -> pmatch [ i ] . rm_eo = - 1		1394589	1		=			
ANR	1395113	MemberAccess	m -> pmatch [ i ] . rm_eo		1394589	0					
ANR	1395114	ArrayIndexing	m -> pmatch [ i ]		1394589	0					
ANR	1395115	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395116	Identifier	m		1394589	0					
ANR	1395117	Identifier	pmatch		1394589	1					
ANR	1395118	Identifier	i		1394589	1					
ANR	1395119	Identifier	rm_eo		1394589	1					
ANR	1395120	UnaryOperationExpression	- 1		1394589	1					
ANR	1395121	UnaryOperator	-		1394589	0					
ANR	1395122	PrimaryExpression	1		1394589	1					
ANR	1395123	IfStatement	if ( ! g -> backrefs && ! ( m -> eflags & R_REGEX_BACKR ) )		1394589	9					
ANR	1395124	Condition	! g -> backrefs && ! ( m -> eflags & R_REGEX_BACKR )	223:6:6728:6769	1394589	0	True				
ANR	1395125	AndExpression	! g -> backrefs && ! ( m -> eflags & R_REGEX_BACKR )		1394589	0		&&			
ANR	1395126	UnaryOperationExpression	! g -> backrefs		1394589	0					
ANR	1395127	UnaryOperator	!		1394589	0					
ANR	1395128	PtrMemberAccess	g -> backrefs		1394589	1					
ANR	1395129	Identifier	g		1394589	0					
ANR	1395130	Identifier	backrefs		1394589	1					
ANR	1395131	UnaryOperationExpression	! ( m -> eflags & R_REGEX_BACKR )		1394589	1					
ANR	1395132	UnaryOperator	!		1394589	0					
ANR	1395133	BitAndExpression	m -> eflags & R_REGEX_BACKR		1394589	1		&			
ANR	1395134	PtrMemberAccess	m -> eflags		1394589	0					
ANR	1395135	Identifier	m		1394589	0					
ANR	1395136	Identifier	eflags		1394589	1					
ANR	1395137	Identifier	R_REGEX_BACKR		1394589	1					
ANR	1395138	CompoundStatement		94:50:2175:2175	1394589	1					
ANR	1395139	ExpressionStatement	"NOTE ( ""dissecting"" )"	224:3:6777:6795	1394589	0	True				
ANR	1395140	CallExpression	"NOTE ( ""dissecting"" )"		1394589	0					
ANR	1395141	Callee	NOTE		1394589	0					
ANR	1395142	Identifier	NOTE		1394589	0					
ANR	1395143	ArgumentList	"""dissecting"""		1394589	1					
ANR	1395144	Argument	"""dissecting"""		1394589	0					
ANR	1395145	PrimaryExpression	"""dissecting"""		1394589	0					
ANR	1395146	ExpressionStatement	"dp = dissect ( m , m -> coldp , endp , gf , gl )"	225:3:6800:6839	1394589	1	True				
ANR	1395147	AssignmentExpression	"dp = dissect ( m , m -> coldp , endp , gf , gl )"		1394589	0		=			
ANR	1395148	Identifier	dp		1394589	0					
ANR	1395149	CallExpression	"dissect ( m , m -> coldp , endp , gf , gl )"		1394589	1					
ANR	1395150	Callee	dissect		1394589	0					
ANR	1395151	Identifier	dissect		1394589	0					
ANR	1395152	ArgumentList	m		1394589	1					
ANR	1395153	Argument	m		1394589	0					
ANR	1395154	Identifier	m		1394589	0					
ANR	1395155	Argument	m -> coldp		1394589	1					
ANR	1395156	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395157	Identifier	m		1394589	0					
ANR	1395158	Identifier	coldp		1394589	1					
ANR	1395159	Argument	endp		1394589	2					
ANR	1395160	Identifier	endp		1394589	0					
ANR	1395161	Argument	gf		1394589	3					
ANR	1395162	Identifier	gf		1394589	0					
ANR	1395163	Argument	gl		1394589	4					
ANR	1395164	Identifier	gl		1394589	0					
ANR	1395165	ElseStatement	else		1394589	0					
ANR	1395166	CompoundStatement		97:9:2253:2253	1394589	0					
ANR	1395167	IfStatement	if ( g -> nplus > 0 && ! m -> lastpos )		1394589	0					
ANR	1395168	Condition	g -> nplus > 0 && ! m -> lastpos	227:7:6859:6885	1394589	0	True				
ANR	1395169	AndExpression	g -> nplus > 0 && ! m -> lastpos		1394589	0		&&			
ANR	1395170	RelationalExpression	g -> nplus > 0		1394589	0		>			
ANR	1395171	PtrMemberAccess	g -> nplus		1394589	0					
ANR	1395172	Identifier	g		1394589	0					
ANR	1395173	Identifier	nplus		1394589	1					
ANR	1395174	PrimaryExpression	0		1394589	1					
ANR	1395175	UnaryOperationExpression	! m -> lastpos		1394589	1					
ANR	1395176	UnaryOperator	!		1394589	0					
ANR	1395177	PtrMemberAccess	m -> lastpos		1394589	1					
ANR	1395178	Identifier	m		1394589	0					
ANR	1395179	Identifier	lastpos		1394589	1					
ANR	1395180	CompoundStatement		98:36:2291:2291	1394589	1					
ANR	1395181	IfStatement	if ( ( g -> nplus + 1 ) * sizeof ( char * ) < g -> nplus )		1394589	0					
ANR	1395182	Condition	( g -> nplus + 1 ) * sizeof ( char * ) < g -> nplus	228:8:6898:6939	1394589	0	True				
ANR	1395183	RelationalExpression	( g -> nplus + 1 ) * sizeof ( char * ) < g -> nplus		1394589	0		<			
ANR	1395184	MultiplicativeExpression	( g -> nplus + 1 ) * sizeof ( char * )		1394589	0		*			
ANR	1395185	AdditiveExpression	g -> nplus + 1		1394589	0		+			
ANR	1395186	PtrMemberAccess	g -> nplus		1394589	0					
ANR	1395187	Identifier	g		1394589	0					
ANR	1395188	Identifier	nplus		1394589	1					
ANR	1395189	PrimaryExpression	1		1394589	1					
ANR	1395190	SizeofExpression	sizeof ( char * )		1394589	1					
ANR	1395191	Sizeof	sizeof		1394589	0					
ANR	1395192	SizeofOperand	char *		1394589	1					
ANR	1395193	PtrMemberAccess	g -> nplus		1394589	1					
ANR	1395194	Identifier	g		1394589	0					
ANR	1395195	Identifier	nplus		1394589	1					
ANR	1395196	CompoundStatement		99:52:2345:2345	1394589	1					
ANR	1395197	ExpressionStatement	free ( m -> pmatch )	229:5:6949:6965	1394589	0	True				
ANR	1395198	CallExpression	free ( m -> pmatch )		1394589	0					
ANR	1395199	Callee	free		1394589	0					
ANR	1395200	Identifier	free		1394589	0					
ANR	1395201	ArgumentList	m -> pmatch		1394589	1					
ANR	1395202	Argument	m -> pmatch		1394589	0					
ANR	1395203	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395204	Identifier	m		1394589	0					
ANR	1395205	Identifier	pmatch		1394589	1					
ANR	1395206	ExpressionStatement	STATETEARDOWN ( m )	230:5:6972:6988	1394589	1	True				
ANR	1395207	CallExpression	STATETEARDOWN ( m )		1394589	0					
ANR	1395208	Callee	STATETEARDOWN		1394589	0					
ANR	1395209	Identifier	STATETEARDOWN		1394589	0					
ANR	1395210	ArgumentList	m		1394589	1					
ANR	1395211	Argument	m		1394589	0					
ANR	1395212	Identifier	m		1394589	0					
ANR	1395213	ReturnStatement	return R_REGEX_ESPACE ;	231:5:6995:7016	1394589	2	True				
ANR	1395214	Identifier	R_REGEX_ESPACE		1394589	0					
ANR	1395215	ExpressionStatement	m -> lastpos = ( char * * ) malloc ( ( g -> nplus + 1 ) * sizeof ( char * ) )	233:4:7028:7094	1394589	1	True				
ANR	1395216	AssignmentExpression	m -> lastpos = ( char * * ) malloc ( ( g -> nplus + 1 ) * sizeof ( char * ) )		1394589	0		=			
ANR	1395217	PtrMemberAccess	m -> lastpos		1394589	0					
ANR	1395218	Identifier	m		1394589	0					
ANR	1395219	Identifier	lastpos		1394589	1					
ANR	1395220	CastExpression	( char * * ) malloc ( ( g -> nplus + 1 ) * sizeof ( char * ) )		1394589	1					
ANR	1395221	CastTarget	char * *		1394589	0					
ANR	1395222	CallExpression	malloc ( ( g -> nplus + 1 ) * sizeof ( char * ) )		1394589	1					
ANR	1395223	Callee	malloc		1394589	0					
ANR	1395224	Identifier	malloc		1394589	0					
ANR	1395225	ArgumentList	( g -> nplus + 1 ) * sizeof ( char * )		1394589	1					
ANR	1395226	Argument	( g -> nplus + 1 ) * sizeof ( char * )		1394589	0					
ANR	1395227	MultiplicativeExpression	( g -> nplus + 1 ) * sizeof ( char * )		1394589	0		*			
ANR	1395228	AdditiveExpression	g -> nplus + 1		1394589	0		+			
ANR	1395229	PtrMemberAccess	g -> nplus		1394589	0					
ANR	1395230	Identifier	g		1394589	0					
ANR	1395231	Identifier	nplus		1394589	1					
ANR	1395232	PrimaryExpression	1		1394589	1					
ANR	1395233	SizeofExpression	sizeof ( char * )		1394589	1					
ANR	1395234	Sizeof	sizeof		1394589	0					
ANR	1395235	SizeofOperand	char *		1394589	1					
ANR	1395236	IfStatement	if ( g -> nplus > 0 && ! m -> lastpos )		1394589	1					
ANR	1395237	Condition	g -> nplus > 0 && ! m -> lastpos	236:7:7108:7134	1394589	0	True				
ANR	1395238	AndExpression	g -> nplus > 0 && ! m -> lastpos		1394589	0		&&			
ANR	1395239	RelationalExpression	g -> nplus > 0		1394589	0		>			
ANR	1395240	PtrMemberAccess	g -> nplus		1394589	0					
ANR	1395241	Identifier	g		1394589	0					
ANR	1395242	Identifier	nplus		1394589	1					
ANR	1395243	PrimaryExpression	0		1394589	1					
ANR	1395244	UnaryOperationExpression	! m -> lastpos		1394589	1					
ANR	1395245	UnaryOperator	!		1394589	0					
ANR	1395246	PtrMemberAccess	m -> lastpos		1394589	1					
ANR	1395247	Identifier	m		1394589	0					
ANR	1395248	Identifier	lastpos		1394589	1					
ANR	1395249	CompoundStatement		107:36:2540:2540	1394589	1					
ANR	1395250	ExpressionStatement	free ( m -> pmatch )	237:4:7143:7158	1394589	0	True				
ANR	1395251	CallExpression	free ( m -> pmatch )		1394589	0					
ANR	1395252	Callee	free		1394589	0					
ANR	1395253	Identifier	free		1394589	0					
ANR	1395254	ArgumentList	m -> pmatch		1394589	1					
ANR	1395255	Argument	m -> pmatch		1394589	0					
ANR	1395256	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395257	Identifier	m		1394589	0					
ANR	1395258	Identifier	pmatch		1394589	1					
ANR	1395259	ExpressionStatement	STATETEARDOWN ( m )	238:4:7164:7180	1394589	1	True				
ANR	1395260	CallExpression	STATETEARDOWN ( m )		1394589	0					
ANR	1395261	Callee	STATETEARDOWN		1394589	0					
ANR	1395262	Identifier	STATETEARDOWN		1394589	0					
ANR	1395263	ArgumentList	m		1394589	1					
ANR	1395264	Argument	m		1394589	0					
ANR	1395265	Identifier	m		1394589	0					
ANR	1395266	ReturnStatement	return ( R_REGEX_ESPACE ) ;	239:4:7186:7208	1394589	2	True				
ANR	1395267	Identifier	R_REGEX_ESPACE		1394589	0					
ANR	1395268	ExpressionStatement	"NOTE ( ""backref dissect"" )"	241:3:7218:7241	1394589	2	True				
ANR	1395269	CallExpression	"NOTE ( ""backref dissect"" )"		1394589	0					
ANR	1395270	Callee	NOTE		1394589	0					
ANR	1395271	Identifier	NOTE		1394589	0					
ANR	1395272	ArgumentList	"""backref dissect"""		1394589	1					
ANR	1395273	Argument	"""backref dissect"""		1394589	0					
ANR	1395274	PrimaryExpression	"""backref dissect"""		1394589	0					
ANR	1395275	ExpressionStatement	"dp = backref ( m , m -> coldp , endp , gf , gl , ( sopno ) 0 , 0 )"	242:3:7246:7298	1394589	3	True				
ANR	1395276	AssignmentExpression	"dp = backref ( m , m -> coldp , endp , gf , gl , ( sopno ) 0 , 0 )"		1394589	0		=			
ANR	1395277	Identifier	dp		1394589	0					
ANR	1395278	CallExpression	"backref ( m , m -> coldp , endp , gf , gl , ( sopno ) 0 , 0 )"		1394589	1					
ANR	1395279	Callee	backref		1394589	0					
ANR	1395280	Identifier	backref		1394589	0					
ANR	1395281	ArgumentList	m		1394589	1					
ANR	1395282	Argument	m		1394589	0					
ANR	1395283	Identifier	m		1394589	0					
ANR	1395284	Argument	m -> coldp		1394589	1					
ANR	1395285	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395286	Identifier	m		1394589	0					
ANR	1395287	Identifier	coldp		1394589	1					
ANR	1395288	Argument	endp		1394589	2					
ANR	1395289	Identifier	endp		1394589	0					
ANR	1395290	Argument	gf		1394589	3					
ANR	1395291	Identifier	gf		1394589	0					
ANR	1395292	Argument	gl		1394589	4					
ANR	1395293	Identifier	gl		1394589	0					
ANR	1395294	Argument	( sopno ) 0		1394589	5					
ANR	1395295	CastExpression	( sopno ) 0		1394589	0					
ANR	1395296	CastTarget	sopno		1394589	0					
ANR	1395297	PrimaryExpression	0		1394589	1					
ANR	1395298	Argument	0		1394589	6					
ANR	1395299	PrimaryExpression	0		1394589	0					
ANR	1395300	IfStatement	if ( dp )		1394589	10					
ANR	1395301	Condition	dp	244:6:7310:7311	1394589	0	True				
ANR	1395302	Identifier	dp		1394589	0					
ANR	1395303	CompoundStatement		115:10:2717:2717	1394589	1					
ANR	1395304	BreakStatement	break ;	245:3:7319:7324	1394589	0	True				
ANR	1395305	IfStatement	if ( ! g -> backrefs )		1394589	11					
ANR	1395306	Condition	! g -> backrefs	248:6:7398:7409	1394589	0	True				
ANR	1395307	UnaryOperationExpression	! g -> backrefs		1394589	0					
ANR	1395308	UnaryOperator	!		1394589	0					
ANR	1395309	PtrMemberAccess	g -> backrefs		1394589	1					
ANR	1395310	Identifier	g		1394589	0					
ANR	1395311	Identifier	backrefs		1394589	1					
ANR	1395312	CompoundStatement		119:20:2815:2815	1394589	1					
ANR	1395313	BreakStatement	break ;	249:3:7456:7461	1394589	0	True				
ANR	1395314	IfStatement	if ( g -> nplus || ! m -> lastpos )		1394589	12					
ANR	1395315	Condition	g -> nplus || ! m -> lastpos	251:6:7473:7495	1394589	0	True				
ANR	1395316	OrExpression	g -> nplus || ! m -> lastpos		1394589	0		||			
ANR	1395317	PtrMemberAccess	g -> nplus		1394589	0					
ANR	1395318	Identifier	g		1394589	0					
ANR	1395319	Identifier	nplus		1394589	1					
ANR	1395320	UnaryOperationExpression	! m -> lastpos		1394589	1					
ANR	1395321	UnaryOperator	!		1394589	0					
ANR	1395322	PtrMemberAccess	m -> lastpos		1394589	1					
ANR	1395323	Identifier	m		1394589	0					
ANR	1395324	Identifier	lastpos		1394589	1					
ANR	1395325	CompoundStatement		122:31:2901:2901	1394589	1					
ANR	1395326	BreakStatement	break ;	252:3:7503:7508	1394589	0	True				
ANR	1395327	ForStatement	for ( ; ; )		1394589	13					
ANR	1395328	CompoundStatement		125:11:2928:2928	1394589	0					
ANR	1395329	IfStatement	if ( dp != NULL || endp <= m -> coldp )		1394589	0					
ANR	1395330	Condition	dp != NULL || endp <= m -> coldp	255:7:7534:7563	1394589	0	True				
ANR	1395331	OrExpression	dp != NULL || endp <= m -> coldp		1394589	0		||			
ANR	1395332	EqualityExpression	dp != NULL		1394589	0		!=			
ANR	1395333	Identifier	dp		1394589	0					
ANR	1395334	Identifier	NULL		1394589	1					
ANR	1395335	RelationalExpression	endp <= m -> coldp		1394589	1		<=			
ANR	1395336	Identifier	endp		1394589	0					
ANR	1395337	PtrMemberAccess	m -> coldp		1394589	1					
ANR	1395338	Identifier	m		1394589	0					
ANR	1395339	Identifier	coldp		1394589	1					
ANR	1395340	BreakStatement	break ;	256:4:7570:7575	1394589	1	True				
ANR	1395341	ExpressionStatement	"NOTE ( ""backoff"" )"	257:3:7594:7609	1394589	1	True				
ANR	1395342	CallExpression	"NOTE ( ""backoff"" )"		1394589	0					
ANR	1395343	Callee	NOTE		1394589	0					
ANR	1395344	Identifier	NOTE		1394589	0					
ANR	1395345	ArgumentList	"""backoff"""		1394589	1					
ANR	1395346	Argument	"""backoff"""		1394589	0					
ANR	1395347	PrimaryExpression	"""backoff"""		1394589	0					
ANR	1395348	ExpressionStatement	"endp = slow ( m , m -> coldp , endp - 1 , gf , gl )"	258:3:7614:7654	1394589	2	True				
ANR	1395349	AssignmentExpression	"endp = slow ( m , m -> coldp , endp - 1 , gf , gl )"		1394589	0		=			
ANR	1395350	Identifier	endp		1394589	0					
ANR	1395351	CallExpression	"slow ( m , m -> coldp , endp - 1 , gf , gl )"		1394589	1					
ANR	1395352	Callee	slow		1394589	0					
ANR	1395353	Identifier	slow		1394589	0					
ANR	1395354	ArgumentList	m		1394589	1					
ANR	1395355	Argument	m		1394589	0					
ANR	1395356	Identifier	m		1394589	0					
ANR	1395357	Argument	m -> coldp		1394589	1					
ANR	1395358	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395359	Identifier	m		1394589	0					
ANR	1395360	Identifier	coldp		1394589	1					
ANR	1395361	Argument	endp - 1		1394589	2					
ANR	1395362	AdditiveExpression	endp - 1		1394589	0		-			
ANR	1395363	Identifier	endp		1394589	0					
ANR	1395364	PrimaryExpression	1		1394589	1					
ANR	1395365	Argument	gf		1394589	3					
ANR	1395366	Identifier	gf		1394589	0					
ANR	1395367	Argument	gl		1394589	4					
ANR	1395368	Identifier	gl		1394589	0					
ANR	1395369	IfStatement	if ( ! endp )		1394589	3					
ANR	1395370	Condition	! endp	259:7:7663:7667	1394589	0	True				
ANR	1395371	UnaryOperationExpression	! endp		1394589	0					
ANR	1395372	UnaryOperator	!		1394589	0					
ANR	1395373	Identifier	endp		1394589	1					
ANR	1395374	BreakStatement	break ;	260:4:7674:7679	1394589	1	True				
ANR	1395375	ForStatement	for ( i = 1 ; i <= m -> g -> nsub ; i ++ )		1394589	4					
ANR	1395376	ForInit	i = 1 ;	263:8:7759:7764	1394589	0	True				
ANR	1395377	AssignmentExpression	i = 1		1394589	0		=			
ANR	1395378	Identifier	i		1394589	0					
ANR	1395379	PrimaryExpression	1		1394589	1					
ANR	1395380	Condition	i <= m -> g -> nsub	263:15:7766:7780	1394589	1	True				
ANR	1395381	RelationalExpression	i <= m -> g -> nsub		1394589	0		<=			
ANR	1395382	Identifier	i		1394589	0					
ANR	1395383	PtrMemberAccess	m -> g -> nsub		1394589	1					
ANR	1395384	PtrMemberAccess	m -> g		1394589	0					
ANR	1395385	Identifier	m		1394589	0					
ANR	1395386	Identifier	g		1394589	1					
ANR	1395387	Identifier	nsub		1394589	1					
ANR	1395388	PostIncDecOperationExpression	i ++	263:32:7783:7785	1394589	2	True				
ANR	1395389	Identifier	i		1394589	0					
ANR	1395390	IncDec	++		1394589	1					
ANR	1395391	CompoundStatement		134:37:3191:3191	1394589	3					
ANR	1395392	IfStatement	if ( m -> pmatch [ i ] . rm_so != - 1 )		1394589	0					
ANR	1395393	Condition	m -> pmatch [ i ] . rm_so != - 1	264:8:7798:7821	1394589	0	True				
ANR	1395394	EqualityExpression	m -> pmatch [ i ] . rm_so != - 1		1394589	0		!=			
ANR	1395395	MemberAccess	m -> pmatch [ i ] . rm_so		1394589	0					
ANR	1395396	ArrayIndexing	m -> pmatch [ i ]		1394589	0					
ANR	1395397	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395398	Identifier	m		1394589	0					
ANR	1395399	Identifier	pmatch		1394589	1					
ANR	1395400	Identifier	i		1394589	1					
ANR	1395401	Identifier	rm_so		1394589	1					
ANR	1395402	UnaryOperationExpression	- 1		1394589	1					
ANR	1395403	UnaryOperator	-		1394589	0					
ANR	1395404	PrimaryExpression	1		1394589	1					
ANR	1395405	CompoundStatement		135:34:3227:3227	1394589	1					
ANR	1395406	BreakStatement	break ;	265:5:7831:7836	1394589	0	True				
ANR	1395407	IfStatement	if ( m -> pmatch [ i ] . rm_eo != - 1 )		1394589	1					
ANR	1395408	Condition	m -> pmatch [ i ] . rm_eo != - 1	267:8:7852:7875	1394589	0	True				
ANR	1395409	EqualityExpression	m -> pmatch [ i ] . rm_eo != - 1		1394589	0		!=			
ANR	1395410	MemberAccess	m -> pmatch [ i ] . rm_eo		1394589	0					
ANR	1395411	ArrayIndexing	m -> pmatch [ i ]		1394589	0					
ANR	1395412	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395413	Identifier	m		1394589	0					
ANR	1395414	Identifier	pmatch		1394589	1					
ANR	1395415	Identifier	i		1394589	1					
ANR	1395416	Identifier	rm_eo		1394589	1					
ANR	1395417	UnaryOperationExpression	- 1		1394589	1					
ANR	1395418	UnaryOperator	-		1394589	0					
ANR	1395419	PrimaryExpression	1		1394589	1					
ANR	1395420	CompoundStatement		138:34:3281:3281	1394589	1					
ANR	1395421	BreakStatement	break ;	268:5:7885:7890	1394589	0	True				
ANR	1395422	ExpressionStatement	"NOTE ( ""backoff dissect"" )"	272:3:7913:7936	1394589	5	True				
ANR	1395423	CallExpression	"NOTE ( ""backoff dissect"" )"		1394589	0					
ANR	1395424	Callee	NOTE		1394589	0					
ANR	1395425	Identifier	NOTE		1394589	0					
ANR	1395426	ArgumentList	"""backoff dissect"""		1394589	1					
ANR	1395427	Argument	"""backoff dissect"""		1394589	0					
ANR	1395428	PrimaryExpression	"""backoff dissect"""		1394589	0					
ANR	1395429	ExpressionStatement	"dp = backref ( m , m -> coldp , endp , gf , gl , ( sopno ) 0 , 0 )"	273:3:7941:7993	1394589	6	True				
ANR	1395430	AssignmentExpression	"dp = backref ( m , m -> coldp , endp , gf , gl , ( sopno ) 0 , 0 )"		1394589	0		=			
ANR	1395431	Identifier	dp		1394589	0					
ANR	1395432	CallExpression	"backref ( m , m -> coldp , endp , gf , gl , ( sopno ) 0 , 0 )"		1394589	1					
ANR	1395433	Callee	backref		1394589	0					
ANR	1395434	Identifier	backref		1394589	0					
ANR	1395435	ArgumentList	m		1394589	1					
ANR	1395436	Argument	m		1394589	0					
ANR	1395437	Identifier	m		1394589	0					
ANR	1395438	Argument	m -> coldp		1394589	1					
ANR	1395439	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395440	Identifier	m		1394589	0					
ANR	1395441	Identifier	coldp		1394589	1					
ANR	1395442	Argument	endp		1394589	2					
ANR	1395443	Identifier	endp		1394589	0					
ANR	1395444	Argument	gf		1394589	3					
ANR	1395445	Identifier	gf		1394589	0					
ANR	1395446	Argument	gl		1394589	4					
ANR	1395447	Identifier	gl		1394589	0					
ANR	1395448	Argument	( sopno ) 0		1394589	5					
ANR	1395449	CastExpression	( sopno ) 0		1394589	0					
ANR	1395450	CastTarget	sopno		1394589	0					
ANR	1395451	PrimaryExpression	0		1394589	1					
ANR	1395452	Argument	0		1394589	6					
ANR	1395453	PrimaryExpression	0		1394589	0					
ANR	1395454	IfStatement	if ( dp != NULL || dp != endp )		1394589	14					
ANR	1395455	Condition	dp != NULL || dp != endp	275:6:8005:8028	1394589	0	True				
ANR	1395456	OrExpression	dp != NULL || dp != endp		1394589	0		||			
ANR	1395457	EqualityExpression	dp != NULL		1394589	0		!=			
ANR	1395458	Identifier	dp		1394589	0					
ANR	1395459	Identifier	NULL		1394589	1					
ANR	1395460	EqualityExpression	dp != endp		1394589	1		!=			
ANR	1395461	Identifier	dp		1394589	0					
ANR	1395462	Identifier	endp		1394589	1					
ANR	1395463	BreakStatement	break ;	276:3:8061:8066	1394589	1	True				
ANR	1395464	ExpressionStatement	"NOTE ( ""false alarm"" )"	279:2:8131:8150	1394589	15	True				
ANR	1395465	CallExpression	"NOTE ( ""false alarm"" )"		1394589	0					
ANR	1395466	Callee	NOTE		1394589	0					
ANR	1395467	Identifier	NOTE		1394589	0					
ANR	1395468	ArgumentList	"""false alarm"""		1394589	1					
ANR	1395469	Argument	"""false alarm"""		1394589	0					
ANR	1395470	PrimaryExpression	"""false alarm"""		1394589	0					
ANR	1395471	IfStatement	if ( m -> coldp == stop )		1394589	16					
ANR	1395472	Condition	m -> coldp == stop	280:6:8158:8173	1394589	0	True				
ANR	1395473	EqualityExpression	m -> coldp == stop		1394589	0		==			
ANR	1395474	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395475	Identifier	m		1394589	0					
ANR	1395476	Identifier	coldp		1394589	1					
ANR	1395477	Identifier	stop		1394589	1					
ANR	1395478	BreakStatement	break ;	281:3:8179:8184	1394589	1	True				
ANR	1395479	ExpressionStatement	start = m -> coldp + 1	282:2:8188:8208	1394589	17	True				
ANR	1395480	AssignmentExpression	start = m -> coldp + 1		1394589	0		=			
ANR	1395481	Identifier	start		1394589	0					
ANR	1395482	AdditiveExpression	m -> coldp + 1		1394589	1		+			
ANR	1395483	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395484	Identifier	m		1394589	0					
ANR	1395485	Identifier	coldp		1394589	1					
ANR	1395486	PrimaryExpression	1		1394589	1					
ANR	1395487	IfStatement	if ( nmatch > 0 )		1394589	28					
ANR	1395488	Condition	nmatch > 0	286:5:8288:8297	1394589	0	True				
ANR	1395489	RelationalExpression	nmatch > 0		1394589	0		>			
ANR	1395490	Identifier	nmatch		1394589	0					
ANR	1395491	PrimaryExpression	0		1394589	1					
ANR	1395492	CompoundStatement		157:17:3703:3703	1394589	1					
ANR	1395493	ExpressionStatement	pmatch [ 0 ] . rm_so = m -> coldp - m -> offp	287:2:8304:8340	1394589	0	True				
ANR	1395494	AssignmentExpression	pmatch [ 0 ] . rm_so = m -> coldp - m -> offp		1394589	0		=			
ANR	1395495	MemberAccess	pmatch [ 0 ] . rm_so		1394589	0					
ANR	1395496	ArrayIndexing	pmatch [ 0 ]		1394589	0					
ANR	1395497	Identifier	pmatch		1394589	0					
ANR	1395498	PrimaryExpression	0		1394589	1					
ANR	1395499	Identifier	rm_so		1394589	1					
ANR	1395500	AdditiveExpression	m -> coldp - m -> offp		1394589	1		-			
ANR	1395501	PtrMemberAccess	m -> coldp		1394589	0					
ANR	1395502	Identifier	m		1394589	0					
ANR	1395503	Identifier	coldp		1394589	1					
ANR	1395504	PtrMemberAccess	m -> offp		1394589	1					
ANR	1395505	Identifier	m		1394589	0					
ANR	1395506	Identifier	offp		1394589	1					
ANR	1395507	ExpressionStatement	pmatch [ 0 ] . rm_eo = endp - m -> offp	288:2:8344:8376	1394589	1	True				
ANR	1395508	AssignmentExpression	pmatch [ 0 ] . rm_eo = endp - m -> offp		1394589	0		=			
ANR	1395509	MemberAccess	pmatch [ 0 ] . rm_eo		1394589	0					
ANR	1395510	ArrayIndexing	pmatch [ 0 ]		1394589	0					
ANR	1395511	Identifier	pmatch		1394589	0					
ANR	1395512	PrimaryExpression	0		1394589	1					
ANR	1395513	Identifier	rm_eo		1394589	1					
ANR	1395514	AdditiveExpression	endp - m -> offp		1394589	1		-			
ANR	1395515	Identifier	endp		1394589	0					
ANR	1395516	PtrMemberAccess	m -> offp		1394589	1					
ANR	1395517	Identifier	m		1394589	0					
ANR	1395518	Identifier	offp		1394589	1					
ANR	1395519	IfStatement	if ( nmatch > 1 )		1394589	29					
ANR	1395520	Condition	nmatch > 1	290:5:8386:8395	1394589	0	True				
ANR	1395521	RelationalExpression	nmatch > 1		1394589	0		>			
ANR	1395522	Identifier	nmatch		1394589	0					
ANR	1395523	PrimaryExpression	1		1394589	1					
ANR	1395524	CompoundStatement		161:17:3801:3801	1394589	1					
ANR	1395525	IfStatement	if ( m -> pmatch )		1394589	0					
ANR	1395526	Condition	m -> pmatch	291:6:8406:8414	1394589	0	True				
ANR	1395527	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395528	Identifier	m		1394589	0					
ANR	1395529	Identifier	pmatch		1394589	1					
ANR	1395530	CompoundStatement		162:17:3820:3820	1394589	1					
ANR	1395531	ForStatement	for ( i = 1 ; i < nmatch ; i ++ )		1394589	0					
ANR	1395532	ForInit	i = 1 ;	292:8:8427:8432	1394589	0	True				
ANR	1395533	AssignmentExpression	i = 1		1394589	0		=			
ANR	1395534	Identifier	i		1394589	0					
ANR	1395535	PrimaryExpression	1		1394589	1					
ANR	1395536	Condition	i < nmatch	292:15:8434:8443	1394589	1	True				
ANR	1395537	RelationalExpression	i < nmatch		1394589	0		<			
ANR	1395538	Identifier	i		1394589	0					
ANR	1395539	Identifier	nmatch		1394589	1					
ANR	1395540	PostIncDecOperationExpression	i ++	292:27:8446:8448	1394589	2	True				
ANR	1395541	Identifier	i		1394589	0					
ANR	1395542	IncDec	++		1394589	1					
ANR	1395543	CompoundStatement		163:32:3854:3854	1394589	3					
ANR	1395544	IfStatement	if ( i <= m -> g -> nsub )		1394589	0					
ANR	1395545	Condition	i <= m -> g -> nsub	293:8:8461:8475	1394589	0	True				
ANR	1395546	RelationalExpression	i <= m -> g -> nsub		1394589	0		<=			
ANR	1395547	Identifier	i		1394589	0					
ANR	1395548	PtrMemberAccess	m -> g -> nsub		1394589	1					
ANR	1395549	PtrMemberAccess	m -> g		1394589	0					
ANR	1395550	Identifier	m		1394589	0					
ANR	1395551	Identifier	g		1394589	1					
ANR	1395552	Identifier	nsub		1394589	1					
ANR	1395553	CompoundStatement		164:25:3881:3881	1394589	1					
ANR	1395554	ExpressionStatement	pmatch [ i ] = m -> pmatch [ i ]	294:5:8485:8509	1394589	0	True				
ANR	1395555	AssignmentExpression	pmatch [ i ] = m -> pmatch [ i ]		1394589	0		=			
ANR	1395556	ArrayIndexing	pmatch [ i ]		1394589	0					
ANR	1395557	Identifier	pmatch		1394589	0					
ANR	1395558	Identifier	i		1394589	1					
ANR	1395559	ArrayIndexing	m -> pmatch [ i ]		1394589	1					
ANR	1395560	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395561	Identifier	m		1394589	0					
ANR	1395562	Identifier	pmatch		1394589	1					
ANR	1395563	Identifier	i		1394589	1					
ANR	1395564	ElseStatement	else		1394589	0					
ANR	1395565	CompoundStatement		166:11:3925:3925	1394589	0					
ANR	1395566	ExpressionStatement	pmatch [ i ] . rm_so = - 1	296:5:8529:8549	1394589	0	True				
ANR	1395567	AssignmentExpression	pmatch [ i ] . rm_so = - 1		1394589	0		=			
ANR	1395568	MemberAccess	pmatch [ i ] . rm_so		1394589	0					
ANR	1395569	ArrayIndexing	pmatch [ i ]		1394589	0					
ANR	1395570	Identifier	pmatch		1394589	0					
ANR	1395571	Identifier	i		1394589	1					
ANR	1395572	Identifier	rm_so		1394589	1					
ANR	1395573	UnaryOperationExpression	- 1		1394589	1					
ANR	1395574	UnaryOperator	-		1394589	0					
ANR	1395575	PrimaryExpression	1		1394589	1					
ANR	1395576	ExpressionStatement	pmatch [ i ] . rm_eo = - 1	297:5:8556:8576	1394589	1	True				
ANR	1395577	AssignmentExpression	pmatch [ i ] . rm_eo = - 1		1394589	0		=			
ANR	1395578	MemberAccess	pmatch [ i ] . rm_eo		1394589	0					
ANR	1395579	ArrayIndexing	pmatch [ i ]		1394589	0					
ANR	1395580	Identifier	pmatch		1394589	0					
ANR	1395581	Identifier	i		1394589	1					
ANR	1395582	Identifier	rm_eo		1394589	1					
ANR	1395583	UnaryOperationExpression	- 1		1394589	1					
ANR	1395584	UnaryOperator	-		1394589	0					
ANR	1395585	PrimaryExpression	1		1394589	1					
ANR	1395586	IfStatement	if ( m -> pmatch != NULL )		1394589	30					
ANR	1395587	Condition	m -> pmatch != NULL	303:5:8602:8618	1394589	0	True				
ANR	1395588	EqualityExpression	m -> pmatch != NULL		1394589	0		!=			
ANR	1395589	PtrMemberAccess	m -> pmatch		1394589	0					
ANR	1395590	Identifier	m		1394589	0					
ANR	1395591	Identifier	pmatch		1394589	1					
ANR	1395592	Identifier	NULL		1394589	1					
ANR	1395593	ExpressionStatement	free ( ( char * ) m -> pmatch )	304:2:8623:8646	1394589	1	True				
ANR	1395594	CallExpression	free ( ( char * ) m -> pmatch )		1394589	0					
ANR	1395595	Callee	free		1394589	0					
ANR	1395596	Identifier	free		1394589	0					
ANR	1395597	ArgumentList	( char * ) m -> pmatch		1394589	1					
ANR	1395598	Argument	( char * ) m -> pmatch		1394589	0					
ANR	1395599	CastExpression	( char * ) m -> pmatch		1394589	0					
ANR	1395600	CastTarget	char *		1394589	0					
ANR	1395601	PtrMemberAccess	m -> pmatch		1394589	1					
ANR	1395602	Identifier	m		1394589	0					
ANR	1395603	Identifier	pmatch		1394589	1					
ANR	1395604	IfStatement	if ( m -> lastpos != NULL )		1394589	31					
ANR	1395605	Condition	m -> lastpos != NULL	305:5:8653:8670	1394589	0	True				
ANR	1395606	EqualityExpression	m -> lastpos != NULL		1394589	0		!=			
ANR	1395607	PtrMemberAccess	m -> lastpos		1394589	0					
ANR	1395608	Identifier	m		1394589	0					
ANR	1395609	Identifier	lastpos		1394589	1					
ANR	1395610	Identifier	NULL		1394589	1					
ANR	1395611	ExpressionStatement	free ( ( char * ) m -> lastpos )	306:2:8675:8699	1394589	1	True				
ANR	1395612	CallExpression	free ( ( char * ) m -> lastpos )		1394589	0					
ANR	1395613	Callee	free		1394589	0					
ANR	1395614	Identifier	free		1394589	0					
ANR	1395615	ArgumentList	( char * ) m -> lastpos		1394589	1					
ANR	1395616	Argument	( char * ) m -> lastpos		1394589	0					
ANR	1395617	CastExpression	( char * ) m -> lastpos		1394589	0					
ANR	1395618	CastTarget	char *		1394589	0					
ANR	1395619	PtrMemberAccess	m -> lastpos		1394589	1					
ANR	1395620	Identifier	m		1394589	0					
ANR	1395621	Identifier	lastpos		1394589	1					
ANR	1395622	ExpressionStatement	STATETEARDOWN ( m )	307:1:8702:8718	1394589	32	True				
ANR	1395623	CallExpression	STATETEARDOWN ( m )		1394589	0					
ANR	1395624	Callee	STATETEARDOWN		1394589	0					
ANR	1395625	Identifier	STATETEARDOWN		1394589	0					
ANR	1395626	ArgumentList	m		1394589	1					
ANR	1395627	Argument	m		1394589	0					
ANR	1395628	Identifier	m		1394589	0					
ANR	1395629	ReturnStatement	return ( 0 ) ;	308:1:8721:8730	1394589	33	True				
ANR	1395630	PrimaryExpression	0		1394589	0					
ANR	1395631	ReturnType	static int		1394589	1					
ANR	1395632	Identifier	matcher		1394589	2					
ANR	1395633	ParameterList	"struct re_guts * g , char * string , size_t nmatch , RRegexMatch pmatch [ ] , int eflags"		1394589	3					
ANR	1395634	Parameter	struct re_guts * g	128:8:4510:4526	1394589	0	True				
ANR	1395635	ParameterType	struct re_guts *		1394589	0					
ANR	1395636	Identifier	g		1394589	1					
ANR	1395637	Parameter	char * string	128:27:4529:4540	1394589	1	True				
ANR	1395638	ParameterType	char *		1394589	0					
ANR	1395639	Identifier	string		1394589	1					
ANR	1395640	Parameter	size_t nmatch	128:41:4543:4555	1394589	2	True				
ANR	1395641	ParameterType	size_t		1394589	0					
ANR	1395642	Identifier	nmatch		1394589	1					
ANR	1395643	Parameter	RRegexMatch pmatch [ ]	128:56:4558:4577	1394589	3	True				
ANR	1395644	ParameterType	RRegexMatch [ ]		1394589	0					
ANR	1395645	Identifier	pmatch		1394589	1					
ANR	1395646	Parameter	int eflags	129:4:4584:4593	1394589	4	True				
ANR	1395647	ParameterType	int		1394589	0					
ANR	1395648	Identifier	eflags		1394589	1					
ANR	1395649	CFGEntryNode	ENTRY		1394589		True				
ANR	1395650	CFGExitNode	EXIT		1394589		True				
ANR	1395651	InfiniteForNode	true		1394589		True				
ANR	1395652	InfiniteForNode	true		1394589		True				
ANR	1395653	InfiniteForNode	true		1394589		True				
ANR	1395654	Symbol	backref		1394589						
ANR	1395655	Symbol	m -> pmatch		1394589						
ANR	1395656	Symbol	m -> st		1394589						
ANR	1395657	Symbol	m -> g -> nsub		1394589						
ANR	1395658	Symbol	dp		1394589						
ANR	1395659	Symbol	* pmatch		1394589						
ANR	1395660	Symbol	strlen		1394589						
ANR	1395661	Symbol	m -> eflags		1394589						
ANR	1395662	Symbol	g -> backrefs		1394589						
ANR	1395663	Symbol	g -> cflags		1394589						
ANR	1395664	Symbol	pmatch [ 0 ] . rm_eo		1394589						
ANR	1395665	Symbol	memcmp		1394589						
ANR	1395666	Symbol	m -> g -> nstates		1394589						
ANR	1395667	Symbol	pmatch		1394589						
ANR	1395668	Symbol	m -> pmatch [ i ] . rm_eo		1394589						
ANR	1395669	Symbol	g -> firststate		1394589						
ANR	1395670	Symbol	NULL		1394589						
ANR	1395671	Symbol	m -> beginp		1394589						
ANR	1395672	Symbol	* * g		1394589						
ANR	1395673	Symbol	pmatch [ i ] . rm_eo		1394589						
ANR	1395674	Symbol	g -> laststate		1394589						
ANR	1395675	Symbol	mv		1394589						
ANR	1395676	Symbol	m -> lastpos		1394589						
ANR	1395677	Symbol	R_REGEX_NOMATCH		1394589						
ANR	1395678	Symbol	stop		1394589						
ANR	1395679	Symbol	slow		1394589						
ANR	1395680	Symbol	g -> must		1394589						
ANR	1395681	Symbol	g -> mlen		1394589						
ANR	1395682	Symbol	m -> offp		1394589						
ANR	1395683	Symbol	g -> nplus		1394589						
ANR	1395684	Symbol	pmatch [ 0 ] . rm_so		1394589						
ANR	1395685	Symbol	string		1394589						
ANR	1395686	Symbol	m -> fresh		1394589						
ANR	1395687	Symbol	R_REGEX_INVARG		1394589						
ANR	1395688	Symbol	* m -> g		1394589						
ANR	1395689	Symbol	m -> tmp		1394589						
ANR	1395690	Symbol	* dp		1394589						
ANR	1395691	Symbol	m -> endp		1394589						
ANR	1395692	Symbol	m -> pmatch [ i ] . rm_so		1394589						
ANR	1395693	Symbol	m -> g		1394589						
ANR	1395694	Symbol	R_REGEX_BACKR		1394589						
ANR	1395695	Symbol	endp		1394589						
ANR	1395696	Symbol	m -> coldp		1394589						
ANR	1395697	Symbol	* m -> pmatch		1394589						
ANR	1395698	Symbol	* * m		1394589						
ANR	1395699	Symbol	gf		1394589						
ANR	1395700	Symbol	malloc		1394589						
ANR	1395701	Symbol	gl		1394589						
ANR	1395702	Symbol	g		1394589						
ANR	1395703	Symbol	start		1394589						
ANR	1395704	Symbol	i		1394589						
ANR	1395705	Symbol	eflags		1394589						
ANR	1395706	Symbol	m		1394589						
ANR	1395707	Symbol	R_REGEX_STARTEND		1394589						
ANR	1395708	Symbol	* g		1394589						
ANR	1395709	Symbol	& mv		1394589						
ANR	1395710	Symbol	pmatch [ i ] . rm_so		1394589						
ANR	1395711	Symbol	fast		1394589						
ANR	1395712	Symbol	* i		1394589						
ANR	1395713	Symbol	R_REGEX_NOSUB		1394589						
ANR	1395714	Symbol	R_REGEX_ESPACE		1394589						
ANR	1395715	Symbol	nmatch		1394589						
ANR	1395716	Symbol	* g -> must		1394589						
ANR	1395717	Symbol	m -> empty		1394589						
ANR	1395718	Symbol	* m		1394589						
ANR	1395719	Symbol	dissect		1394589						
ANR	1395720	Function	dissect	314:0:8804:13243							
ANR	1395721	FunctionDef	"dissect (struct match * m , char * start , char * stop , sopno startst , sopno stopst)"		1395720	0					
ANR	1395722	CompoundStatement		316:0:8930:13243	1395720	0					
ANR	1395723	IdentifierDeclStatement	int i ;	317:1:8933:8938	1395720	0	True				
ANR	1395724	IdentifierDecl	i		1395720	0					
ANR	1395725	IdentifierDeclType	int		1395720	0					
ANR	1395726	Identifier	i		1395720	1					
ANR	1395727	IdentifierDeclStatement	sopno ss ;	318:1:8941:8949	1395720	1	True				
ANR	1395728	IdentifierDecl	ss		1395720	0					
ANR	1395729	IdentifierDeclType	sopno		1395720	0					
ANR	1395730	Identifier	ss		1395720	1					
ANR	1395731	IdentifierDeclStatement	sopno es ;	319:1:8985:8993	1395720	2	True				
ANR	1395732	IdentifierDecl	es		1395720	0					
ANR	1395733	IdentifierDeclType	sopno		1395720	0					
ANR	1395734	Identifier	es		1395720	1					
ANR	1395735	IdentifierDeclStatement	char * sp ;	320:1:9027:9035	1395720	3	True				
ANR	1395736	IdentifierDecl	* sp		1395720	0					
ANR	1395737	IdentifierDeclType	char *		1395720	0					
ANR	1395738	Identifier	sp		1395720	1					
ANR	1395739	IdentifierDeclStatement	char * stp ;	321:1:9074:9083	1395720	4	True				
ANR	1395740	IdentifierDecl	* stp		1395720	0					
ANR	1395741	IdentifierDeclType	char *		1395720	0					
ANR	1395742	Identifier	stp		1395720	1					
ANR	1395743	IdentifierDeclStatement	char * rest ;	322:1:9130:9140	1395720	5	True				
ANR	1395744	IdentifierDecl	* rest		1395720	0					
ANR	1395745	IdentifierDeclType	char *		1395720	0					
ANR	1395746	Identifier	rest		1395720	1					
ANR	1395747	IdentifierDeclStatement	char * tail ;	323:1:9173:9183	1395720	6	True				
ANR	1395748	IdentifierDecl	* tail		1395720	0					
ANR	1395749	IdentifierDeclType	char *		1395720	0					
ANR	1395750	Identifier	tail		1395720	1					
ANR	1395751	IdentifierDeclStatement	sopno ssub ;	324:1:9223:9233	1395720	7	True				
ANR	1395752	IdentifierDecl	ssub		1395720	0					
ANR	1395753	IdentifierDeclType	sopno		1395720	0					
ANR	1395754	Identifier	ssub		1395720	1					
ANR	1395755	IdentifierDeclStatement	sopno esub ;	325:1:9264:9274	1395720	8	True				
ANR	1395756	IdentifierDecl	esub		1395720	0					
ANR	1395757	IdentifierDeclType	sopno		1395720	0					
ANR	1395758	Identifier	esub		1395720	1					
ANR	1395759	IdentifierDeclStatement	char * ssp ;	326:1:9303:9312	1395720	9	True				
ANR	1395760	IdentifierDecl	* ssp		1395720	0					
ANR	1395761	IdentifierDeclType	char *		1395720	0					
ANR	1395762	Identifier	ssp		1395720	1					
ANR	1395763	IdentifierDeclStatement	char * sep ;	327:1:9357:9366	1395720	10	True				
ANR	1395764	IdentifierDecl	* sep		1395720	0					
ANR	1395765	IdentifierDeclType	char *		1395720	0					
ANR	1395766	Identifier	sep		1395720	1					
ANR	1395767	IdentifierDeclStatement	char * oldssp ;	328:1:9409:9421	1395720	11	True				
ANR	1395768	IdentifierDecl	* oldssp		1395720	0					
ANR	1395769	IdentifierDeclType	char *		1395720	0					
ANR	1395770	Identifier	oldssp		1395720	1					
ANR	1395771	IdentifierDeclStatement	char * dp ;	329:1:9443:9451	1395720	12	True				
ANR	1395772	IdentifierDecl	* dp		1395720	0					
ANR	1395773	IdentifierDeclType	char *		1395720	0					
ANR	1395774	Identifier	dp		1395720	1					
ANR	1395775	ExpressionStatement	"AT ( ""diss"" , start , stop , startst , stopst )"	331:1:9455:9495	1395720	13	True				
ANR	1395776	CallExpression	"AT ( ""diss"" , start , stop , startst , stopst )"		1395720	0					
ANR	1395777	Callee	AT		1395720	0					
ANR	1395778	Identifier	AT		1395720	0					
ANR	1395779	ArgumentList	"""diss"""		1395720	1					
ANR	1395780	Argument	"""diss"""		1395720	0					
ANR	1395781	PrimaryExpression	"""diss"""		1395720	0					
ANR	1395782	Argument	start		1395720	1					
ANR	1395783	Identifier	start		1395720	0					
ANR	1395784	Argument	stop		1395720	2					
ANR	1395785	Identifier	stop		1395720	0					
ANR	1395786	Argument	startst		1395720	3					
ANR	1395787	Identifier	startst		1395720	0					
ANR	1395788	Argument	stopst		1395720	4					
ANR	1395789	Identifier	stopst		1395720	0					
ANR	1395790	ExpressionStatement	sp = start	332:1:9498:9508	1395720	14	True				
ANR	1395791	AssignmentExpression	sp = start		1395720	0		=			
ANR	1395792	Identifier	sp		1395720	0					
ANR	1395793	Identifier	start		1395720	1					
ANR	1395794	ForStatement	for ( ss = startst ; ss < stopst ; ss = es )		1395720	15					
ANR	1395795	ForInit	ss = startst ;	333:6:9516:9528	1395720	0	True				
ANR	1395796	AssignmentExpression	ss = startst		1395720	0		=			
ANR	1395797	Identifier	ss		1395720	0					
ANR	1395798	Identifier	startst		1395720	1					
ANR	1395799	Condition	ss < stopst	333:20:9530:9540	1395720	1	True				
ANR	1395800	RelationalExpression	ss < stopst		1395720	0		<			
ANR	1395801	Identifier	ss		1395720	0					
ANR	1395802	Identifier	stopst		1395720	1					
ANR	1395803	AssignmentExpression	ss = es	333:33:9543:9549	1395720	2	True	=			
ANR	1395804	Identifier	ss		1395720	0					
ANR	1395805	Identifier	es		1395720	1					
ANR	1395806	CompoundStatement		18:42:621:621	1395720	3					
ANR	1395807	ExpressionStatement	es = ss	335:2:9586:9593	1395720	0	True				
ANR	1395808	AssignmentExpression	es = ss		1395720	0		=			
ANR	1395809	Identifier	es		1395720	0					
ANR	1395810	Identifier	ss		1395720	1					
ANR	1395811	SwitchStatement	switch ( OP ( m -> g -> strip [ es ] ) )		1395720	1					
ANR	1395812	Condition	OP ( m -> g -> strip [ es ] )	336:10:9605:9623	1395720	0	True				
ANR	1395813	CallExpression	OP ( m -> g -> strip [ es ] )		1395720	0					
ANR	1395814	Callee	OP		1395720	0					
ANR	1395815	Identifier	OP		1395720	0					
ANR	1395816	ArgumentList	m -> g -> strip [ es ]		1395720	1					
ANR	1395817	Argument	m -> g -> strip [ es ]		1395720	0					
ANR	1395818	ArrayIndexing	m -> g -> strip [ es ]		1395720	0					
ANR	1395819	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1395820	PtrMemberAccess	m -> g		1395720	0					
ANR	1395821	Identifier	m		1395720	0					
ANR	1395822	Identifier	g		1395720	1					
ANR	1395823	Identifier	strip		1395720	1					
ANR	1395824	Identifier	es		1395720	1					
ANR	1395825	CompoundStatement		21:31:695:695	1395720	1					
ANR	1395826	Label	case OPLUS_ :	337:2:9630:9641	1395720	0	True				
ANR	1395827	Identifier	OPLUS_		1395720	0					
ANR	1395828	Label	case OQUEST_ :	338:2:9645:9657	1395720	1	True				
ANR	1395829	Identifier	OQUEST_		1395720	0					
ANR	1395830	ExpressionStatement	es += OPND ( m -> g -> strip [ es ] )	339:3:9662:9689	1395720	2	True				
ANR	1395831	AssignmentExpression	es += OPND ( m -> g -> strip [ es ] )		1395720	0		+=			
ANR	1395832	Identifier	es		1395720	0					
ANR	1395833	CallExpression	OPND ( m -> g -> strip [ es ] )		1395720	1					
ANR	1395834	Callee	OPND		1395720	0					
ANR	1395835	Identifier	OPND		1395720	0					
ANR	1395836	ArgumentList	m -> g -> strip [ es ]		1395720	1					
ANR	1395837	Argument	m -> g -> strip [ es ]		1395720	0					
ANR	1395838	ArrayIndexing	m -> g -> strip [ es ]		1395720	0					
ANR	1395839	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1395840	PtrMemberAccess	m -> g		1395720	0					
ANR	1395841	Identifier	m		1395720	0					
ANR	1395842	Identifier	g		1395720	1					
ANR	1395843	Identifier	strip		1395720	1					
ANR	1395844	Identifier	es		1395720	1					
ANR	1395845	BreakStatement	break ;	340:3:9694:9699	1395720	3	True				
ANR	1395846	Label	case OCH_ :	341:2:9703:9712	1395720	4	True				
ANR	1395847	Identifier	OCH_		1395720	0					
ANR	1395848	WhileStatement	while ( OP ( m -> g -> strip [ es ] ) != O_CH )		1395720	5					
ANR	1395849	Condition	OP ( m -> g -> strip [ es ] ) != O_CH	342:10:9724:9750	1395720	0	True				
ANR	1395850	EqualityExpression	OP ( m -> g -> strip [ es ] ) != O_CH		1395720	0		!=			
ANR	1395851	CallExpression	OP ( m -> g -> strip [ es ] )		1395720	0					
ANR	1395852	Callee	OP		1395720	0					
ANR	1395853	Identifier	OP		1395720	0					
ANR	1395854	ArgumentList	m -> g -> strip [ es ]		1395720	1					
ANR	1395855	Argument	m -> g -> strip [ es ]		1395720	0					
ANR	1395856	ArrayIndexing	m -> g -> strip [ es ]		1395720	0					
ANR	1395857	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1395858	PtrMemberAccess	m -> g		1395720	0					
ANR	1395859	Identifier	m		1395720	0					
ANR	1395860	Identifier	g		1395720	1					
ANR	1395861	Identifier	strip		1395720	1					
ANR	1395862	Identifier	es		1395720	1					
ANR	1395863	Identifier	O_CH		1395720	1					
ANR	1395864	ExpressionStatement	es += OPND ( m -> g -> strip [ es ] )	343:4:9757:9784	1395720	1	True				
ANR	1395865	AssignmentExpression	es += OPND ( m -> g -> strip [ es ] )		1395720	0		+=			
ANR	1395866	Identifier	es		1395720	0					
ANR	1395867	CallExpression	OPND ( m -> g -> strip [ es ] )		1395720	1					
ANR	1395868	Callee	OPND		1395720	0					
ANR	1395869	Identifier	OPND		1395720	0					
ANR	1395870	ArgumentList	m -> g -> strip [ es ]		1395720	1					
ANR	1395871	Argument	m -> g -> strip [ es ]		1395720	0					
ANR	1395872	ArrayIndexing	m -> g -> strip [ es ]		1395720	0					
ANR	1395873	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1395874	PtrMemberAccess	m -> g		1395720	0					
ANR	1395875	Identifier	m		1395720	0					
ANR	1395876	Identifier	g		1395720	1					
ANR	1395877	Identifier	strip		1395720	1					
ANR	1395878	Identifier	es		1395720	1					
ANR	1395879	BreakStatement	break ;	344:3:9789:9794	1395720	6	True				
ANR	1395880	ExpressionStatement	es ++	346:2:9802:9806	1395720	2	True				
ANR	1395881	PostIncDecOperationExpression	es ++		1395720	0					
ANR	1395882	Identifier	es		1395720	0					
ANR	1395883	IncDec	++		1395720	1					
ANR	1395884	SwitchStatement	switch ( OP ( m -> g -> strip [ ss ] ) )		1395720	3					
ANR	1395885	Condition	OP ( m -> g -> strip [ ss ] )	349:10:9854:9872	1395720	0	True				
ANR	1395886	CallExpression	OP ( m -> g -> strip [ ss ] )		1395720	0					
ANR	1395887	Callee	OP		1395720	0					
ANR	1395888	Identifier	OP		1395720	0					
ANR	1395889	ArgumentList	m -> g -> strip [ ss ]		1395720	1					
ANR	1395890	Argument	m -> g -> strip [ ss ]		1395720	0					
ANR	1395891	ArrayIndexing	m -> g -> strip [ ss ]		1395720	0					
ANR	1395892	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1395893	PtrMemberAccess	m -> g		1395720	0					
ANR	1395894	Identifier	m		1395720	0					
ANR	1395895	Identifier	g		1395720	1					
ANR	1395896	Identifier	strip		1395720	1					
ANR	1395897	Identifier	ss		1395720	1					
ANR	1395898	CompoundStatement		34:31:944:944	1395720	1					
ANR	1395899	Label	case OEND :	350:2:9879:9888	1395720	0	True				
ANR	1395900	Identifier	OEND		1395720	0					
ANR	1395901	BreakStatement	break ;	351:3:9893:9898	1395720	1	True				
ANR	1395902	Label	case OCHAR :	352:2:9902:9912	1395720	2	True				
ANR	1395903	Identifier	OCHAR		1395720	0					
ANR	1395904	ExpressionStatement	sp ++	353:3:9917:9921	1395720	3	True				
ANR	1395905	PostIncDecOperationExpression	sp ++		1395720	0					
ANR	1395906	Identifier	sp		1395720	0					
ANR	1395907	IncDec	++		1395720	1					
ANR	1395908	BreakStatement	break ;	354:3:9926:9931	1395720	4	True				
ANR	1395909	Label	case OBOL :	355:2:9935:9944	1395720	5	True				
ANR	1395910	Identifier	OBOL		1395720	0					
ANR	1395911	Label	case OEOL :	356:2:9948:9957	1395720	6	True				
ANR	1395912	Identifier	OEOL		1395720	0					
ANR	1395913	Label	case OBOW :	357:2:9961:9970	1395720	7	True				
ANR	1395914	Identifier	OBOW		1395720	0					
ANR	1395915	Label	case OEOW :	358:2:9974:9983	1395720	8	True				
ANR	1395916	Identifier	OEOW		1395720	0					
ANR	1395917	BreakStatement	break ;	359:3:9988:9993	1395720	9	True				
ANR	1395918	Label	case OANY :	360:2:9997:10006	1395720	10	True				
ANR	1395919	Identifier	OANY		1395720	0					
ANR	1395920	Label	case OANYOF :	361:2:10010:10021	1395720	11	True				
ANR	1395921	Identifier	OANYOF		1395720	0					
ANR	1395922	ExpressionStatement	sp ++	362:3:10026:10030	1395720	12	True				
ANR	1395923	PostIncDecOperationExpression	sp ++		1395720	0					
ANR	1395924	Identifier	sp		1395720	0					
ANR	1395925	IncDec	++		1395720	1					
ANR	1395926	BreakStatement	break ;	363:3:10035:10040	1395720	13	True				
ANR	1395927	Label	case OBACK_ :	364:2:10044:10055	1395720	14	True				
ANR	1395928	Identifier	OBACK_		1395720	0					
ANR	1395929	Label	case O_BACK :	365:2:10059:10070	1395720	15	True				
ANR	1395930	Identifier	O_BACK		1395720	0					
ANR	1395931	BreakStatement	break ;	366:3:10075:10080	1395720	16	True				
ANR	1395932	Label	case OQUEST_ :	368:2:10136:10148	1395720	17	True				
ANR	1395933	Identifier	OQUEST_		1395720	0					
ANR	1395934	ExpressionStatement	stp = stop	369:3:10153:10163	1395720	18	True				
ANR	1395935	AssignmentExpression	stp = stop		1395720	0		=			
ANR	1395936	Identifier	stp		1395720	0					
ANR	1395937	Identifier	stop		1395720	1					
ANR	1395938	ForStatement	for ( ; ; )		1395720	19					
ANR	1395939	CompoundStatement		55:12:1246:1246	1395720	0					
ANR	1395940	ExpressionStatement	"rest = slow ( m , sp , stp , ss , es )"	372:4:10221:10252	1395720	0	True				
ANR	1395941	AssignmentExpression	"rest = slow ( m , sp , stp , ss , es )"		1395720	0		=			
ANR	1395942	Identifier	rest		1395720	0					
ANR	1395943	CallExpression	"slow ( m , sp , stp , ss , es )"		1395720	1					
ANR	1395944	Callee	slow		1395720	0					
ANR	1395945	Identifier	slow		1395720	0					
ANR	1395946	ArgumentList	m		1395720	1					
ANR	1395947	Argument	m		1395720	0					
ANR	1395948	Identifier	m		1395720	0					
ANR	1395949	Argument	sp		1395720	1					
ANR	1395950	Identifier	sp		1395720	0					
ANR	1395951	Argument	stp		1395720	2					
ANR	1395952	Identifier	stp		1395720	0					
ANR	1395953	Argument	ss		1395720	3					
ANR	1395954	Identifier	ss		1395720	0					
ANR	1395955	Argument	es		1395720	4					
ANR	1395956	Identifier	es		1395720	0					
ANR	1395957	IfStatement	if ( rest )		1395720	1					
ANR	1395958	Condition	rest	373:8:10262:10265	1395720	0	True				
ANR	1395959	Identifier	rest		1395720	0					
ANR	1395960	CompoundStatement		58:14:1337:1337	1395720	1					
ANR	1395961	ExpressionStatement	"tail = slow ( m , rest , stop , es , stopst )"	375:5:10336:10374	1395720	0	True				
ANR	1395962	AssignmentExpression	"tail = slow ( m , rest , stop , es , stopst )"		1395720	0		=			
ANR	1395963	Identifier	tail		1395720	0					
ANR	1395964	CallExpression	"slow ( m , rest , stop , es , stopst )"		1395720	1					
ANR	1395965	Callee	slow		1395720	0					
ANR	1395966	Identifier	slow		1395720	0					
ANR	1395967	ArgumentList	m		1395720	1					
ANR	1395968	Argument	m		1395720	0					
ANR	1395969	Identifier	m		1395720	0					
ANR	1395970	Argument	rest		1395720	1					
ANR	1395971	Identifier	rest		1395720	0					
ANR	1395972	Argument	stop		1395720	2					
ANR	1395973	Identifier	stop		1395720	0					
ANR	1395974	Argument	es		1395720	3					
ANR	1395975	Identifier	es		1395720	0					
ANR	1395976	Argument	stopst		1395720	4					
ANR	1395977	Identifier	stopst		1395720	0					
ANR	1395978	IfStatement	if ( tail == stop )		1395720	1					
ANR	1395979	Condition	tail == stop	376:9:10385:10396	1395720	0	True				
ANR	1395980	EqualityExpression	tail == stop		1395720	0		==			
ANR	1395981	Identifier	tail		1395720	0					
ANR	1395982	Identifier	stop		1395720	1					
ANR	1395983	BreakStatement	break ;	377:6:10405:10410	1395720	1	True				
ANR	1395984	ExpressionStatement	stp = rest - 1	379:5:10479:10493	1395720	2	True				
ANR	1395985	AssignmentExpression	stp = rest - 1		1395720	0		=			
ANR	1395986	Identifier	stp		1395720	0					
ANR	1395987	AdditiveExpression	rest - 1		1395720	1		-			
ANR	1395988	Identifier	rest		1395720	0					
ANR	1395989	PrimaryExpression	1		1395720	1					
ANR	1395990	ExpressionStatement	ssub = ss + 1	382:3:10509:10522	1395720	20	True				
ANR	1395991	AssignmentExpression	ssub = ss + 1		1395720	0		=			
ANR	1395992	Identifier	ssub		1395720	0					
ANR	1395993	AdditiveExpression	ss + 1		1395720	1		+			
ANR	1395994	Identifier	ss		1395720	0					
ANR	1395995	PrimaryExpression	1		1395720	1					
ANR	1395996	ExpressionStatement	esub = es - 1	383:3:10527:10540	1395720	21	True				
ANR	1395997	AssignmentExpression	esub = es - 1		1395720	0		=			
ANR	1395998	Identifier	esub		1395720	0					
ANR	1395999	AdditiveExpression	es - 1		1395720	1		-			
ANR	1396000	Identifier	es		1395720	0					
ANR	1396001	PrimaryExpression	1		1395720	1					
ANR	1396002	IfStatement	"if ( slow ( m , sp , rest , ssub , esub ) != NULL )"		1395720	22					
ANR	1396003	Condition	"slow ( m , sp , rest , ssub , esub ) != NULL"	385:7:10577:10613	1395720	0	True				
ANR	1396004	EqualityExpression	"slow ( m , sp , rest , ssub , esub ) != NULL"		1395720	0		!=			
ANR	1396005	CallExpression	"slow ( m , sp , rest , ssub , esub )"		1395720	0					
ANR	1396006	Callee	slow		1395720	0					
ANR	1396007	Identifier	slow		1395720	0					
ANR	1396008	ArgumentList	m		1395720	1					
ANR	1396009	Argument	m		1395720	0					
ANR	1396010	Identifier	m		1395720	0					
ANR	1396011	Argument	sp		1395720	1					
ANR	1396012	Identifier	sp		1395720	0					
ANR	1396013	Argument	rest		1395720	2					
ANR	1396014	Identifier	rest		1395720	0					
ANR	1396015	Argument	ssub		1395720	3					
ANR	1396016	Identifier	ssub		1395720	0					
ANR	1396017	Argument	esub		1395720	4					
ANR	1396018	Identifier	esub		1395720	0					
ANR	1396019	Identifier	NULL		1395720	1					
ANR	1396020	CompoundStatement		70:46:1685:1685	1395720	1					
ANR	1396021	ExpressionStatement	"dp = dissect ( m , sp , rest , ssub , esub )"	386:4:10622:10659	1395720	0	True				
ANR	1396022	AssignmentExpression	"dp = dissect ( m , sp , rest , ssub , esub )"		1395720	0		=			
ANR	1396023	Identifier	dp		1395720	0					
ANR	1396024	CallExpression	"dissect ( m , sp , rest , ssub , esub )"		1395720	1					
ANR	1396025	Callee	dissect		1395720	0					
ANR	1396026	Identifier	dissect		1395720	0					
ANR	1396027	ArgumentList	m		1395720	1					
ANR	1396028	Argument	m		1395720	0					
ANR	1396029	Identifier	m		1395720	0					
ANR	1396030	Argument	sp		1395720	1					
ANR	1396031	Identifier	sp		1395720	0					
ANR	1396032	Argument	rest		1395720	2					
ANR	1396033	Identifier	rest		1395720	0					
ANR	1396034	Argument	ssub		1395720	3					
ANR	1396035	Identifier	ssub		1395720	0					
ANR	1396036	Argument	esub		1395720	4					
ANR	1396037	Identifier	esub		1395720	0					
ANR	1396038	IfStatement	if ( dp != rest )		1395720	1					
ANR	1396039	Condition	dp != rest	387:8:10669:10678	1395720	0	True				
ANR	1396040	EqualityExpression	dp != rest		1395720	0		!=			
ANR	1396041	Identifier	dp		1395720	0					
ANR	1396042	Identifier	rest		1395720	1					
ANR	1396043	ReturnStatement	return NULL ;	387:20:10681:10692	1395720	1	True				
ANR	1396044	Identifier	NULL		1395720	0					
ANR	1396045	ElseStatement	else		1395720	0					
ANR	1396046	IfStatement	if ( sp != rest )		1395720	0					
ANR	1396047	Condition	sp != rest	388:14:10708:10717	1395720	0	True				
ANR	1396048	EqualityExpression	sp != rest		1395720	0		!=			
ANR	1396049	Identifier	sp		1395720	0					
ANR	1396050	Identifier	rest		1395720	1					
ANR	1396051	ReturnStatement	return NULL ;	388:26:10720:10731	1395720	1	True				
ANR	1396052	Identifier	NULL		1395720	0					
ANR	1396053	ExpressionStatement	sp = rest	389:3:10736:10745	1395720	23	True				
ANR	1396054	AssignmentExpression	sp = rest		1395720	0		=			
ANR	1396055	Identifier	sp		1395720	0					
ANR	1396056	Identifier	rest		1395720	1					
ANR	1396057	BreakStatement	break ;	390:3:10750:10755	1395720	24	True				
ANR	1396058	Label	case OPLUS_ :	391:2:10759:10770	1395720	25	True				
ANR	1396059	Identifier	OPLUS_		1395720	0					
ANR	1396060	ExpressionStatement	stp = stop	392:3:10775:10785	1395720	26	True				
ANR	1396061	AssignmentExpression	stp = stop		1395720	0		=			
ANR	1396062	Identifier	stp		1395720	0					
ANR	1396063	Identifier	stop		1395720	1					
ANR	1396064	ForStatement	for ( ; ; )		1395720	27					
ANR	1396065	CompoundStatement		78:12:1868:1868	1395720	0					
ANR	1396066	ExpressionStatement	"rest = slow ( m , sp , stp , ss , es )"	395:4:10843:10874	1395720	0	True				
ANR	1396067	AssignmentExpression	"rest = slow ( m , sp , stp , ss , es )"		1395720	0		=			
ANR	1396068	Identifier	rest		1395720	0					
ANR	1396069	CallExpression	"slow ( m , sp , stp , ss , es )"		1395720	1					
ANR	1396070	Callee	slow		1395720	0					
ANR	1396071	Identifier	slow		1395720	0					
ANR	1396072	ArgumentList	m		1395720	1					
ANR	1396073	Argument	m		1395720	0					
ANR	1396074	Identifier	m		1395720	0					
ANR	1396075	Argument	sp		1395720	1					
ANR	1396076	Identifier	sp		1395720	0					
ANR	1396077	Argument	stp		1395720	2					
ANR	1396078	Identifier	stp		1395720	0					
ANR	1396079	Argument	ss		1395720	3					
ANR	1396080	Identifier	ss		1395720	0					
ANR	1396081	Argument	es		1395720	4					
ANR	1396082	Identifier	es		1395720	0					
ANR	1396083	IfStatement	if ( rest != NULL )		1395720	1					
ANR	1396084	Condition	rest != NULL	396:8:10884:10895	1395720	0	True				
ANR	1396085	EqualityExpression	rest != NULL		1395720	0		!=			
ANR	1396086	Identifier	rest		1395720	0					
ANR	1396087	Identifier	NULL		1395720	1					
ANR	1396088	CompoundStatement		81:22:1967:1967	1395720	1					
ANR	1396089	ExpressionStatement	"tail = slow ( m , rest , stop , es , stopst )"	398:5:10966:11004	1395720	0	True				
ANR	1396090	AssignmentExpression	"tail = slow ( m , rest , stop , es , stopst )"		1395720	0		=			
ANR	1396091	Identifier	tail		1395720	0					
ANR	1396092	CallExpression	"slow ( m , rest , stop , es , stopst )"		1395720	1					
ANR	1396093	Callee	slow		1395720	0					
ANR	1396094	Identifier	slow		1395720	0					
ANR	1396095	ArgumentList	m		1395720	1					
ANR	1396096	Argument	m		1395720	0					
ANR	1396097	Identifier	m		1395720	0					
ANR	1396098	Argument	rest		1395720	1					
ANR	1396099	Identifier	rest		1395720	0					
ANR	1396100	Argument	stop		1395720	2					
ANR	1396101	Identifier	stop		1395720	0					
ANR	1396102	Argument	es		1395720	3					
ANR	1396103	Identifier	es		1395720	0					
ANR	1396104	Argument	stopst		1395720	4					
ANR	1396105	Identifier	stopst		1395720	0					
ANR	1396106	IfStatement	if ( tail == stop )		1395720	1					
ANR	1396107	Condition	tail == stop	399:9:11015:11026	1395720	0	True				
ANR	1396108	EqualityExpression	tail == stop		1395720	0		==			
ANR	1396109	Identifier	tail		1395720	0					
ANR	1396110	Identifier	stop		1395720	1					
ANR	1396111	BreakStatement	break ;	400:6:11035:11040	1395720	1	True				
ANR	1396112	ExpressionStatement	stp = rest - 1	402:5:11109:11123	1395720	2	True				
ANR	1396113	AssignmentExpression	stp = rest - 1		1395720	0		=			
ANR	1396114	Identifier	stp		1395720	0					
ANR	1396115	AdditiveExpression	rest - 1		1395720	1		-			
ANR	1396116	Identifier	rest		1395720	0					
ANR	1396117	PrimaryExpression	1		1395720	1					
ANR	1396118	ExpressionStatement	ssub = ss + 1	405:3:11139:11152	1395720	28	True				
ANR	1396119	AssignmentExpression	ssub = ss + 1		1395720	0		=			
ANR	1396120	Identifier	ssub		1395720	0					
ANR	1396121	AdditiveExpression	ss + 1		1395720	1		+			
ANR	1396122	Identifier	ss		1395720	0					
ANR	1396123	PrimaryExpression	1		1395720	1					
ANR	1396124	ExpressionStatement	esub = es - 1	406:3:11157:11170	1395720	29	True				
ANR	1396125	AssignmentExpression	esub = es - 1		1395720	0		=			
ANR	1396126	Identifier	esub		1395720	0					
ANR	1396127	AdditiveExpression	es - 1		1395720	1		-			
ANR	1396128	Identifier	es		1395720	0					
ANR	1396129	PrimaryExpression	1		1395720	1					
ANR	1396130	ExpressionStatement	ssp = sp	407:3:11175:11183	1395720	30	True				
ANR	1396131	AssignmentExpression	ssp = sp		1395720	0		=			
ANR	1396132	Identifier	ssp		1395720	0					
ANR	1396133	Identifier	sp		1395720	1					
ANR	1396134	ExpressionStatement	oldssp = ssp	408:3:11188:11200	1395720	31	True				
ANR	1396135	AssignmentExpression	oldssp = ssp		1395720	0		=			
ANR	1396136	Identifier	oldssp		1395720	0					
ANR	1396137	Identifier	ssp		1395720	1					
ANR	1396138	ForStatement	for ( ; ; )		1395720	32					
ANR	1396139	CompoundStatement		94:12:2283:2283	1395720	0					
ANR	1396140	ExpressionStatement	"sep = slow ( m , ssp , rest , ssub , esub )"	410:4:11253:11289	1395720	0	True				
ANR	1396141	AssignmentExpression	"sep = slow ( m , ssp , rest , ssub , esub )"		1395720	0		=			
ANR	1396142	Identifier	sep		1395720	0					
ANR	1396143	CallExpression	"slow ( m , ssp , rest , ssub , esub )"		1395720	1					
ANR	1396144	Callee	slow		1395720	0					
ANR	1396145	Identifier	slow		1395720	0					
ANR	1396146	ArgumentList	m		1395720	1					
ANR	1396147	Argument	m		1395720	0					
ANR	1396148	Identifier	m		1395720	0					
ANR	1396149	Argument	ssp		1395720	1					
ANR	1396150	Identifier	ssp		1395720	0					
ANR	1396151	Argument	rest		1395720	2					
ANR	1396152	Identifier	rest		1395720	0					
ANR	1396153	Argument	ssub		1395720	3					
ANR	1396154	Identifier	ssub		1395720	0					
ANR	1396155	Argument	esub		1395720	4					
ANR	1396156	Identifier	esub		1395720	0					
ANR	1396157	IfStatement	if ( ! sep || sep == ssp )		1395720	1					
ANR	1396158	Condition	! sep || sep == ssp	411:8:11299:11316	1395720	0	True				
ANR	1396159	OrExpression	! sep || sep == ssp		1395720	0		||			
ANR	1396160	UnaryOperationExpression	! sep		1395720	0					
ANR	1396161	UnaryOperator	!		1395720	0					
ANR	1396162	Identifier	sep		1395720	1					
ANR	1396163	EqualityExpression	sep == ssp		1395720	1		==			
ANR	1396164	Identifier	sep		1395720	0					
ANR	1396165	Identifier	ssp		1395720	1					
ANR	1396166	BreakStatement	break ;	412:5:11324:11329	1395720	1	True				
ANR	1396167	ExpressionStatement	oldssp = ssp	413:4:11364:11376	1395720	2	True				
ANR	1396168	AssignmentExpression	oldssp = ssp		1395720	0		=			
ANR	1396169	Identifier	oldssp		1395720	0					
ANR	1396170	Identifier	ssp		1395720	1					
ANR	1396171	ExpressionStatement	ssp = sep	414:4:11403:11412	1395720	3	True				
ANR	1396172	AssignmentExpression	ssp = sep		1395720	0		=			
ANR	1396173	Identifier	ssp		1395720	0					
ANR	1396174	Identifier	sep		1395720	1					
ANR	1396175	IfStatement	if ( ! sep )		1395720	33					
ANR	1396176	Condition	! sep	416:7:11426:11429	1395720	0	True				
ANR	1396177	UnaryOperationExpression	! sep		1395720	0					
ANR	1396178	UnaryOperator	!		1395720	0					
ANR	1396179	Identifier	sep		1395720	1					
ANR	1396180	CompoundStatement		101:13:2501:2501	1395720	1					
ANR	1396181	ExpressionStatement	sep = ssp	418:4:11470:11479	1395720	0	True				
ANR	1396182	AssignmentExpression	sep = ssp		1395720	0		=			
ANR	1396183	Identifier	sep		1395720	0					
ANR	1396184	Identifier	ssp		1395720	1					
ANR	1396185	ExpressionStatement	ssp = oldssp	419:4:11485:11497	1395720	1	True				
ANR	1396186	AssignmentExpression	ssp = oldssp		1395720	0		=			
ANR	1396187	Identifier	ssp		1395720	0					
ANR	1396188	Identifier	oldssp		1395720	1					
ANR	1396189	IfStatement	if ( sep == rest )		1395720	34					
ANR	1396190	Condition	sep == rest	421:7:11511:11521	1395720	0	True				
ANR	1396191	EqualityExpression	sep == rest		1395720	0		==			
ANR	1396192	Identifier	sep		1395720	0					
ANR	1396193	Identifier	rest		1395720	1					
ANR	1396194	CompoundStatement		106:20:2593:2593	1395720	1					
ANR	1396195	IfStatement	"if ( slow ( m , ssp , sep , ssub , esub ) == rest )"		1395720	0					
ANR	1396196	Condition	"slow ( m , ssp , sep , ssub , esub ) == rest"	422:8:11563:11599	1395720	0	True				
ANR	1396197	EqualityExpression	"slow ( m , ssp , sep , ssub , esub ) == rest"		1395720	0		==			
ANR	1396198	CallExpression	"slow ( m , ssp , sep , ssub , esub )"		1395720	0					
ANR	1396199	Callee	slow		1395720	0					
ANR	1396200	Identifier	slow		1395720	0					
ANR	1396201	ArgumentList	m		1395720	1					
ANR	1396202	Argument	m		1395720	0					
ANR	1396203	Identifier	m		1395720	0					
ANR	1396204	Argument	ssp		1395720	1					
ANR	1396205	Identifier	ssp		1395720	0					
ANR	1396206	Argument	sep		1395720	2					
ANR	1396207	Identifier	sep		1395720	0					
ANR	1396208	Argument	ssub		1395720	3					
ANR	1396209	Identifier	ssub		1395720	0					
ANR	1396210	Argument	esub		1395720	4					
ANR	1396211	Identifier	esub		1395720	0					
ANR	1396212	Identifier	rest		1395720	1					
ANR	1396213	CompoundStatement		107:47:2671:2671	1395720	1					
ANR	1396214	ExpressionStatement	"dp = dissect ( m , ssp , sep , ssub , esub )"	423:5:11609:11646	1395720	0	True				
ANR	1396215	AssignmentExpression	"dp = dissect ( m , ssp , sep , ssub , esub )"		1395720	0		=			
ANR	1396216	Identifier	dp		1395720	0					
ANR	1396217	CallExpression	"dissect ( m , ssp , sep , ssub , esub )"		1395720	1					
ANR	1396218	Callee	dissect		1395720	0					
ANR	1396219	Identifier	dissect		1395720	0					
ANR	1396220	ArgumentList	m		1395720	1					
ANR	1396221	Argument	m		1395720	0					
ANR	1396222	Identifier	m		1395720	0					
ANR	1396223	Argument	ssp		1395720	1					
ANR	1396224	Identifier	ssp		1395720	0					
ANR	1396225	Argument	sep		1395720	2					
ANR	1396226	Identifier	sep		1395720	0					
ANR	1396227	Argument	ssub		1395720	3					
ANR	1396228	Identifier	ssub		1395720	0					
ANR	1396229	Argument	esub		1395720	4					
ANR	1396230	Identifier	esub		1395720	0					
ANR	1396231	IfStatement	if ( dp == sep )		1395720	1					
ANR	1396232	Condition	dp == sep	424:9:11657:11665	1395720	0	True				
ANR	1396233	EqualityExpression	dp == sep		1395720	0		==			
ANR	1396234	Identifier	dp		1395720	0					
ANR	1396235	Identifier	sep		1395720	1					
ANR	1396236	CompoundStatement		109:20:2737:2737	1395720	1					
ANR	1396237	ExpressionStatement	sp = rest	425:6:11676:11685	1395720	0	True				
ANR	1396238	AssignmentExpression	sp = rest		1395720	0		=			
ANR	1396239	Identifier	sp		1395720	0					
ANR	1396240	Identifier	rest		1395720	1					
ANR	1396241	BreakStatement	break ;	429:3:11708:11713	1395720	35	True				
ANR	1396242	Label	case OCH_ :	430:2:11717:11726	1395720	36	True				
ANR	1396243	Identifier	OCH_		1395720	0					
ANR	1396244	ExpressionStatement	stp = stop	431:3:11731:11741	1395720	37	True				
ANR	1396245	AssignmentExpression	stp = stop		1395720	0		=			
ANR	1396246	Identifier	stp		1395720	0					
ANR	1396247	Identifier	stop		1395720	1					
ANR	1396248	ForStatement	for ( ; ; )		1395720	38					
ANR	1396249	CompoundStatement		117:12:2824:2824	1395720	0					
ANR	1396250	ExpressionStatement	"rest = slow ( m , sp , stp , ss , es )"	434:4:11799:11830	1395720	0	True				
ANR	1396251	AssignmentExpression	"rest = slow ( m , sp , stp , ss , es )"		1395720	0		=			
ANR	1396252	Identifier	rest		1395720	0					
ANR	1396253	CallExpression	"slow ( m , sp , stp , ss , es )"		1395720	1					
ANR	1396254	Callee	slow		1395720	0					
ANR	1396255	Identifier	slow		1395720	0					
ANR	1396256	ArgumentList	m		1395720	1					
ANR	1396257	Argument	m		1395720	0					
ANR	1396258	Identifier	m		1395720	0					
ANR	1396259	Argument	sp		1395720	1					
ANR	1396260	Identifier	sp		1395720	0					
ANR	1396261	Argument	stp		1395720	2					
ANR	1396262	Identifier	stp		1395720	0					
ANR	1396263	Argument	ss		1395720	3					
ANR	1396264	Identifier	ss		1395720	0					
ANR	1396265	Argument	es		1395720	4					
ANR	1396266	Identifier	es		1395720	0					
ANR	1396267	IfStatement	if ( rest )		1395720	1					
ANR	1396268	Condition	rest	435:8:11840:11843	1395720	0	True				
ANR	1396269	Identifier	rest		1395720	0					
ANR	1396270	CompoundStatement		120:14:2915:2915	1395720	1					
ANR	1396271	ExpressionStatement	"tail = slow ( m , rest , stop , es , stopst )"	437:5:11914:11952	1395720	0	True				
ANR	1396272	AssignmentExpression	"tail = slow ( m , rest , stop , es , stopst )"		1395720	0		=			
ANR	1396273	Identifier	tail		1395720	0					
ANR	1396274	CallExpression	"slow ( m , rest , stop , es , stopst )"		1395720	1					
ANR	1396275	Callee	slow		1395720	0					
ANR	1396276	Identifier	slow		1395720	0					
ANR	1396277	ArgumentList	m		1395720	1					
ANR	1396278	Argument	m		1395720	0					
ANR	1396279	Identifier	m		1395720	0					
ANR	1396280	Argument	rest		1395720	1					
ANR	1396281	Identifier	rest		1395720	0					
ANR	1396282	Argument	stop		1395720	2					
ANR	1396283	Identifier	stop		1395720	0					
ANR	1396284	Argument	es		1395720	3					
ANR	1396285	Identifier	es		1395720	0					
ANR	1396286	Argument	stopst		1395720	4					
ANR	1396287	Identifier	stopst		1395720	0					
ANR	1396288	IfStatement	if ( tail == stop )		1395720	1					
ANR	1396289	Condition	tail == stop	438:9:11963:11974	1395720	0	True				
ANR	1396290	EqualityExpression	tail == stop		1395720	0		==			
ANR	1396291	Identifier	tail		1395720	0					
ANR	1396292	Identifier	stop		1395720	1					
ANR	1396293	BreakStatement	break ;	439:6:11983:11988	1395720	1	True				
ANR	1396294	ExpressionStatement	stp = rest - 1	441:5:12057:12071	1395720	2	True				
ANR	1396295	AssignmentExpression	stp = rest - 1		1395720	0		=			
ANR	1396296	Identifier	stp		1395720	0					
ANR	1396297	AdditiveExpression	rest - 1		1395720	1		-			
ANR	1396298	Identifier	rest		1395720	0					
ANR	1396299	PrimaryExpression	1		1395720	1					
ANR	1396300	ExpressionStatement	ssub = ss + 1	444:3:12087:12100	1395720	39	True				
ANR	1396301	AssignmentExpression	ssub = ss + 1		1395720	0		=			
ANR	1396302	Identifier	ssub		1395720	0					
ANR	1396303	AdditiveExpression	ss + 1		1395720	1		+			
ANR	1396304	Identifier	ss		1395720	0					
ANR	1396305	PrimaryExpression	1		1395720	1					
ANR	1396306	ExpressionStatement	esub = ss + OPND ( m -> g -> strip [ ss ] ) - 1	445:3:12105:12142	1395720	40	True				
ANR	1396307	AssignmentExpression	esub = ss + OPND ( m -> g -> strip [ ss ] ) - 1		1395720	0		=			
ANR	1396308	Identifier	esub		1395720	0					
ANR	1396309	AdditiveExpression	ss + OPND ( m -> g -> strip [ ss ] ) - 1		1395720	1		+			
ANR	1396310	Identifier	ss		1395720	0					
ANR	1396311	AdditiveExpression	OPND ( m -> g -> strip [ ss ] ) - 1		1395720	1		-			
ANR	1396312	CallExpression	OPND ( m -> g -> strip [ ss ] )		1395720	0					
ANR	1396313	Callee	OPND		1395720	0					
ANR	1396314	Identifier	OPND		1395720	0					
ANR	1396315	ArgumentList	m -> g -> strip [ ss ]		1395720	1					
ANR	1396316	Argument	m -> g -> strip [ ss ]		1395720	0					
ANR	1396317	ArrayIndexing	m -> g -> strip [ ss ]		1395720	0					
ANR	1396318	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396319	PtrMemberAccess	m -> g		1395720	0					
ANR	1396320	Identifier	m		1395720	0					
ANR	1396321	Identifier	g		1395720	1					
ANR	1396322	Identifier	strip		1395720	1					
ANR	1396323	Identifier	ss		1395720	1					
ANR	1396324	PrimaryExpression	1		1395720	1					
ANR	1396325	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) != OOR1 )		1395720	41					
ANR	1396326	Condition	OP ( m -> g -> strip [ esub ] ) != OOR1	446:7:12151:12179	1395720	0	True				
ANR	1396327	EqualityExpression	OP ( m -> g -> strip [ esub ] ) != OOR1		1395720	0		!=			
ANR	1396328	CallExpression	OP ( m -> g -> strip [ esub ] )		1395720	0					
ANR	1396329	Callee	OP		1395720	0					
ANR	1396330	Identifier	OP		1395720	0					
ANR	1396331	ArgumentList	m -> g -> strip [ esub ]		1395720	1					
ANR	1396332	Argument	m -> g -> strip [ esub ]		1395720	0					
ANR	1396333	ArrayIndexing	m -> g -> strip [ esub ]		1395720	0					
ANR	1396334	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396335	PtrMemberAccess	m -> g		1395720	0					
ANR	1396336	Identifier	m		1395720	0					
ANR	1396337	Identifier	g		1395720	1					
ANR	1396338	Identifier	strip		1395720	1					
ANR	1396339	Identifier	esub		1395720	1					
ANR	1396340	Identifier	OOR1		1395720	1					
ANR	1396341	CompoundStatement		131:38:3251:3251	1395720	1					
ANR	1396342	BreakStatement	break ;	447:4:12188:12193	1395720	0	True				
ANR	1396343	ForStatement	for ( ; ; )		1395720	42					
ANR	1396344	CompoundStatement		134:12:3281:3281	1395720	0					
ANR	1396345	IfStatement	"if ( slow ( m , sp , rest , ssub , esub ) == rest )"		1395720	0					
ANR	1396346	Condition	"slow ( m , sp , rest , ssub , esub ) == rest"	450:8:12255:12291	1395720	0	True				
ANR	1396347	EqualityExpression	"slow ( m , sp , rest , ssub , esub ) == rest"		1395720	0		==			
ANR	1396348	CallExpression	"slow ( m , sp , rest , ssub , esub )"		1395720	0					
ANR	1396349	Callee	slow		1395720	0					
ANR	1396350	Identifier	slow		1395720	0					
ANR	1396351	ArgumentList	m		1395720	1					
ANR	1396352	Argument	m		1395720	0					
ANR	1396353	Identifier	m		1395720	0					
ANR	1396354	Argument	sp		1395720	1					
ANR	1396355	Identifier	sp		1395720	0					
ANR	1396356	Argument	rest		1395720	2					
ANR	1396357	Identifier	rest		1395720	0					
ANR	1396358	Argument	ssub		1395720	3					
ANR	1396359	Identifier	ssub		1395720	0					
ANR	1396360	Argument	esub		1395720	4					
ANR	1396361	Identifier	esub		1395720	0					
ANR	1396362	Identifier	rest		1395720	1					
ANR	1396363	BreakStatement	break ;	451:5:12299:12304	1395720	1	True				
ANR	1396364	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) == OOR1 )		1395720	1					
ANR	1396365	Condition	OP ( m -> g -> strip [ esub ] ) == OOR1	453:8:12381:12409	1395720	0	True				
ANR	1396366	EqualityExpression	OP ( m -> g -> strip [ esub ] ) == OOR1		1395720	0		==			
ANR	1396367	CallExpression	OP ( m -> g -> strip [ esub ] )		1395720	0					
ANR	1396368	Callee	OP		1395720	0					
ANR	1396369	Identifier	OP		1395720	0					
ANR	1396370	ArgumentList	m -> g -> strip [ esub ]		1395720	1					
ANR	1396371	Argument	m -> g -> strip [ esub ]		1395720	0					
ANR	1396372	ArrayIndexing	m -> g -> strip [ esub ]		1395720	0					
ANR	1396373	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396374	PtrMemberAccess	m -> g		1395720	0					
ANR	1396375	Identifier	m		1395720	0					
ANR	1396376	Identifier	g		1395720	1					
ANR	1396377	Identifier	strip		1395720	1					
ANR	1396378	Identifier	esub		1395720	1					
ANR	1396379	Identifier	OOR1		1395720	1					
ANR	1396380	CompoundStatement		138:39:3481:3481	1395720	1					
ANR	1396381	ExpressionStatement	esub ++	454:5:12419:12425	1395720	0	True				
ANR	1396382	PostIncDecOperationExpression	esub ++		1395720	0					
ANR	1396383	Identifier	esub		1395720	0					
ANR	1396384	IncDec	++		1395720	1					
ANR	1396385	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) == OOR2 )		1395720	1					
ANR	1396386	Condition	OP ( m -> g -> strip [ esub ] ) == OOR2	455:9:12436:12464	1395720	0	True				
ANR	1396387	EqualityExpression	OP ( m -> g -> strip [ esub ] ) == OOR2		1395720	0		==			
ANR	1396388	CallExpression	OP ( m -> g -> strip [ esub ] )		1395720	0					
ANR	1396389	Callee	OP		1395720	0					
ANR	1396390	Identifier	OP		1395720	0					
ANR	1396391	ArgumentList	m -> g -> strip [ esub ]		1395720	1					
ANR	1396392	Argument	m -> g -> strip [ esub ]		1395720	0					
ANR	1396393	ArrayIndexing	m -> g -> strip [ esub ]		1395720	0					
ANR	1396394	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396395	PtrMemberAccess	m -> g		1395720	0					
ANR	1396396	Identifier	m		1395720	0					
ANR	1396397	Identifier	g		1395720	1					
ANR	1396398	Identifier	strip		1395720	1					
ANR	1396399	Identifier	esub		1395720	1					
ANR	1396400	Identifier	OOR2		1395720	1					
ANR	1396401	CompoundStatement		140:40:3536:3536	1395720	1					
ANR	1396402	ExpressionStatement	ssub = esub + 1	456:6:12475:12490	1395720	0	True				
ANR	1396403	AssignmentExpression	ssub = esub + 1		1395720	0		=			
ANR	1396404	Identifier	ssub		1395720	0					
ANR	1396405	AdditiveExpression	esub + 1		1395720	1		+			
ANR	1396406	Identifier	esub		1395720	0					
ANR	1396407	PrimaryExpression	1		1395720	1					
ANR	1396408	ExpressionStatement	esub += OPND ( m -> g -> strip [ esub ] )	457:6:12498:12529	1395720	1	True				
ANR	1396409	AssignmentExpression	esub += OPND ( m -> g -> strip [ esub ] )		1395720	0		+=			
ANR	1396410	Identifier	esub		1395720	0					
ANR	1396411	CallExpression	OPND ( m -> g -> strip [ esub ] )		1395720	1					
ANR	1396412	Callee	OPND		1395720	0					
ANR	1396413	Identifier	OPND		1395720	0					
ANR	1396414	ArgumentList	m -> g -> strip [ esub ]		1395720	1					
ANR	1396415	Argument	m -> g -> strip [ esub ]		1395720	0					
ANR	1396416	ArrayIndexing	m -> g -> strip [ esub ]		1395720	0					
ANR	1396417	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396418	PtrMemberAccess	m -> g		1395720	0					
ANR	1396419	Identifier	m		1395720	0					
ANR	1396420	Identifier	g		1395720	1					
ANR	1396421	Identifier	strip		1395720	1					
ANR	1396422	Identifier	esub		1395720	1					
ANR	1396423	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) == OOR2 )		1395720	2					
ANR	1396424	Condition	OP ( m -> g -> strip [ esub ] ) == OOR2	458:10:12541:12569	1395720	0	True				
ANR	1396425	EqualityExpression	OP ( m -> g -> strip [ esub ] ) == OOR2		1395720	0		==			
ANR	1396426	CallExpression	OP ( m -> g -> strip [ esub ] )		1395720	0					
ANR	1396427	Callee	OP		1395720	0					
ANR	1396428	Identifier	OP		1395720	0					
ANR	1396429	ArgumentList	m -> g -> strip [ esub ]		1395720	1					
ANR	1396430	Argument	m -> g -> strip [ esub ]		1395720	0					
ANR	1396431	ArrayIndexing	m -> g -> strip [ esub ]		1395720	0					
ANR	1396432	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396433	PtrMemberAccess	m -> g		1395720	0					
ANR	1396434	Identifier	m		1395720	0					
ANR	1396435	Identifier	g		1395720	1					
ANR	1396436	Identifier	strip		1395720	1					
ANR	1396437	Identifier	esub		1395720	1					
ANR	1396438	Identifier	OOR2		1395720	1					
ANR	1396439	CompoundStatement		143:41:3641:3641	1395720	1					
ANR	1396440	ExpressionStatement	esub --	459:7:12581:12587	1395720	0	True				
ANR	1396441	PostIncDecOperationExpression	esub --		1395720	0					
ANR	1396442	Identifier	esub		1395720	0					
ANR	1396443	IncDec	--		1395720	1					
ANR	1396444	ElseStatement	else		1395720	0					
ANR	1396445	CompoundStatement		145:13:3671:3671	1395720	0					
ANR	1396446	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) != O_CH )		1395720	0					
ANR	1396447	Condition	OP ( m -> g -> strip [ esub ] ) != O_CH	461:11:12615:12643	1395720	0	True				
ANR	1396448	EqualityExpression	OP ( m -> g -> strip [ esub ] ) != O_CH		1395720	0		!=			
ANR	1396449	CallExpression	OP ( m -> g -> strip [ esub ] )		1395720	0					
ANR	1396450	Callee	OP		1395720	0					
ANR	1396451	Identifier	OP		1395720	0					
ANR	1396452	ArgumentList	m -> g -> strip [ esub ]		1395720	1					
ANR	1396453	Argument	m -> g -> strip [ esub ]		1395720	0					
ANR	1396454	ArrayIndexing	m -> g -> strip [ esub ]		1395720	0					
ANR	1396455	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396456	PtrMemberAccess	m -> g		1395720	0					
ANR	1396457	Identifier	m		1395720	0					
ANR	1396458	Identifier	g		1395720	1					
ANR	1396459	Identifier	strip		1395720	1					
ANR	1396460	Identifier	esub		1395720	1					
ANR	1396461	Identifier	O_CH		1395720	1					
ANR	1396462	CompoundStatement		146:42:3715:3715	1395720	1					
ANR	1396463	BreakStatement	break ;	462:8:12656:12661	1395720	0	True				
ANR	1396464	ExpressionStatement	"dp = dissect ( m , sp , rest , ssub , esub )"	468:3:12701:12738	1395720	43	True				
ANR	1396465	AssignmentExpression	"dp = dissect ( m , sp , rest , ssub , esub )"		1395720	0		=			
ANR	1396466	Identifier	dp		1395720	0					
ANR	1396467	CallExpression	"dissect ( m , sp , rest , ssub , esub )"		1395720	1					
ANR	1396468	Callee	dissect		1395720	0					
ANR	1396469	Identifier	dissect		1395720	0					
ANR	1396470	ArgumentList	m		1395720	1					
ANR	1396471	Argument	m		1395720	0					
ANR	1396472	Identifier	m		1395720	0					
ANR	1396473	Argument	sp		1395720	1					
ANR	1396474	Identifier	sp		1395720	0					
ANR	1396475	Argument	rest		1395720	2					
ANR	1396476	Identifier	rest		1395720	0					
ANR	1396477	Argument	ssub		1395720	3					
ANR	1396478	Identifier	ssub		1395720	0					
ANR	1396479	Argument	esub		1395720	4					
ANR	1396480	Identifier	esub		1395720	0					
ANR	1396481	IfStatement	if ( dp == rest )		1395720	44					
ANR	1396482	Condition	dp == rest	469:7:12747:12756	1395720	0	True				
ANR	1396483	EqualityExpression	dp == rest		1395720	0		==			
ANR	1396484	Identifier	dp		1395720	0					
ANR	1396485	Identifier	rest		1395720	1					
ANR	1396486	CompoundStatement		154:19:3828:3828	1395720	1					
ANR	1396487	ExpressionStatement	sp = rest	470:4:12765:12774	1395720	0	True				
ANR	1396488	AssignmentExpression	sp = rest		1395720	0		=			
ANR	1396489	Identifier	sp		1395720	0					
ANR	1396490	Identifier	rest		1395720	1					
ANR	1396491	BreakStatement	break ;	472:3:12784:12789	1395720	45	True				
ANR	1396492	Label	case O_PLUS :	473:2:12793:12804	1395720	46	True				
ANR	1396493	Identifier	O_PLUS		1395720	0					
ANR	1396494	Label	case O_QUEST :	474:2:12808:12820	1395720	47	True				
ANR	1396495	Identifier	O_QUEST		1395720	0					
ANR	1396496	Label	case OOR1 :	475:2:12824:12833	1395720	48	True				
ANR	1396497	Identifier	OOR1		1395720	0					
ANR	1396498	Label	case OOR2 :	476:2:12837:12846	1395720	49	True				
ANR	1396499	Identifier	OOR2		1395720	0					
ANR	1396500	Label	case O_CH :	477:2:12850:12859	1395720	50	True				
ANR	1396501	Identifier	O_CH		1395720	0					
ANR	1396502	BreakStatement	break ;	478:3:12864:12869	1395720	51	True				
ANR	1396503	Label	case OLPAREN :	479:2:12873:12885	1395720	52	True				
ANR	1396504	Identifier	OLPAREN		1395720	0					
ANR	1396505	ExpressionStatement	i = OPND ( m -> g -> strip [ ss ] )	480:3:12890:12915	1395720	53	True				
ANR	1396506	AssignmentExpression	i = OPND ( m -> g -> strip [ ss ] )		1395720	0		=			
ANR	1396507	Identifier	i		1395720	0					
ANR	1396508	CallExpression	OPND ( m -> g -> strip [ ss ] )		1395720	1					
ANR	1396509	Callee	OPND		1395720	0					
ANR	1396510	Identifier	OPND		1395720	0					
ANR	1396511	ArgumentList	m -> g -> strip [ ss ]		1395720	1					
ANR	1396512	Argument	m -> g -> strip [ ss ]		1395720	0					
ANR	1396513	ArrayIndexing	m -> g -> strip [ ss ]		1395720	0					
ANR	1396514	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396515	PtrMemberAccess	m -> g		1395720	0					
ANR	1396516	Identifier	m		1395720	0					
ANR	1396517	Identifier	g		1395720	1					
ANR	1396518	Identifier	strip		1395720	1					
ANR	1396519	Identifier	ss		1395720	1					
ANR	1396520	IfStatement	if ( i > 0 && i <= m -> g -> nsub )		1395720	54					
ANR	1396521	Condition	i > 0 && i <= m -> g -> nsub	481:7:12924:12947	1395720	0	True				
ANR	1396522	AndExpression	i > 0 && i <= m -> g -> nsub		1395720	0		&&			
ANR	1396523	RelationalExpression	i > 0		1395720	0		>			
ANR	1396524	Identifier	i		1395720	0					
ANR	1396525	PrimaryExpression	0		1395720	1					
ANR	1396526	RelationalExpression	i <= m -> g -> nsub		1395720	1		<=			
ANR	1396527	Identifier	i		1395720	0					
ANR	1396528	PtrMemberAccess	m -> g -> nsub		1395720	1					
ANR	1396529	PtrMemberAccess	m -> g		1395720	0					
ANR	1396530	Identifier	m		1395720	0					
ANR	1396531	Identifier	g		1395720	1					
ANR	1396532	Identifier	nsub		1395720	1					
ANR	1396533	CompoundStatement		166:33:4019:4019	1395720	1					
ANR	1396534	ExpressionStatement	m -> pmatch [ i ] . rm_so = sp - m -> offp	482:4:12956:12989	1395720	0	True				
ANR	1396535	AssignmentExpression	m -> pmatch [ i ] . rm_so = sp - m -> offp		1395720	0		=			
ANR	1396536	MemberAccess	m -> pmatch [ i ] . rm_so		1395720	0					
ANR	1396537	ArrayIndexing	m -> pmatch [ i ]		1395720	0					
ANR	1396538	PtrMemberAccess	m -> pmatch		1395720	0					
ANR	1396539	Identifier	m		1395720	0					
ANR	1396540	Identifier	pmatch		1395720	1					
ANR	1396541	Identifier	i		1395720	1					
ANR	1396542	Identifier	rm_so		1395720	1					
ANR	1396543	AdditiveExpression	sp - m -> offp		1395720	1		-			
ANR	1396544	Identifier	sp		1395720	0					
ANR	1396545	PtrMemberAccess	m -> offp		1395720	1					
ANR	1396546	Identifier	m		1395720	0					
ANR	1396547	Identifier	offp		1395720	1					
ANR	1396548	BreakStatement	break ;	484:3:12999:13004	1395720	55	True				
ANR	1396549	Label	case ORPAREN :	485:2:13008:13020	1395720	56	True				
ANR	1396550	Identifier	ORPAREN		1395720	0					
ANR	1396551	ExpressionStatement	i = OPND ( m -> g -> strip [ ss ] )	486:3:13025:13050	1395720	57	True				
ANR	1396552	AssignmentExpression	i = OPND ( m -> g -> strip [ ss ] )		1395720	0		=			
ANR	1396553	Identifier	i		1395720	0					
ANR	1396554	CallExpression	OPND ( m -> g -> strip [ ss ] )		1395720	1					
ANR	1396555	Callee	OPND		1395720	0					
ANR	1396556	Identifier	OPND		1395720	0					
ANR	1396557	ArgumentList	m -> g -> strip [ ss ]		1395720	1					
ANR	1396558	Argument	m -> g -> strip [ ss ]		1395720	0					
ANR	1396559	ArrayIndexing	m -> g -> strip [ ss ]		1395720	0					
ANR	1396560	PtrMemberAccess	m -> g -> strip		1395720	0					
ANR	1396561	PtrMemberAccess	m -> g		1395720	0					
ANR	1396562	Identifier	m		1395720	0					
ANR	1396563	Identifier	g		1395720	1					
ANR	1396564	Identifier	strip		1395720	1					
ANR	1396565	Identifier	ss		1395720	1					
ANR	1396566	IfStatement	if ( i > 0 && i <= m -> g -> nsub )		1395720	58					
ANR	1396567	Condition	i > 0 && i <= m -> g -> nsub	487:7:13059:13082	1395720	0	True				
ANR	1396568	AndExpression	i > 0 && i <= m -> g -> nsub		1395720	0		&&			
ANR	1396569	RelationalExpression	i > 0		1395720	0		>			
ANR	1396570	Identifier	i		1395720	0					
ANR	1396571	PrimaryExpression	0		1395720	1					
ANR	1396572	RelationalExpression	i <= m -> g -> nsub		1395720	1		<=			
ANR	1396573	Identifier	i		1395720	0					
ANR	1396574	PtrMemberAccess	m -> g -> nsub		1395720	1					
ANR	1396575	PtrMemberAccess	m -> g		1395720	0					
ANR	1396576	Identifier	m		1395720	0					
ANR	1396577	Identifier	g		1395720	1					
ANR	1396578	Identifier	nsub		1395720	1					
ANR	1396579	CompoundStatement		172:33:4154:4154	1395720	1					
ANR	1396580	ExpressionStatement	m -> pmatch [ i ] . rm_eo = sp - m -> offp	488:4:13091:13124	1395720	0	True				
ANR	1396581	AssignmentExpression	m -> pmatch [ i ] . rm_eo = sp - m -> offp		1395720	0		=			
ANR	1396582	MemberAccess	m -> pmatch [ i ] . rm_eo		1395720	0					
ANR	1396583	ArrayIndexing	m -> pmatch [ i ]		1395720	0					
ANR	1396584	PtrMemberAccess	m -> pmatch		1395720	0					
ANR	1396585	Identifier	m		1395720	0					
ANR	1396586	Identifier	pmatch		1395720	1					
ANR	1396587	Identifier	i		1395720	1					
ANR	1396588	Identifier	rm_eo		1395720	1					
ANR	1396589	AdditiveExpression	sp - m -> offp		1395720	1		-			
ANR	1396590	Identifier	sp		1395720	0					
ANR	1396591	PtrMemberAccess	m -> offp		1395720	1					
ANR	1396592	Identifier	m		1395720	0					
ANR	1396593	Identifier	offp		1395720	1					
ANR	1396594	BreakStatement	break ;	490:3:13134:13139	1395720	59	True				
ANR	1396595	Label	default :	491:2:13143:13150	1395720	60	True				
ANR	1396596	Identifier	default		1395720	0					
ANR	1396597	BreakStatement	break ;	492:3:13168:13173	1395720	61	True				
ANR	1396598	IfStatement	if ( sp == stop )		1395720	16					
ANR	1396599	Condition	sp == stop	496:5:13188:13197	1395720	0	True				
ANR	1396600	EqualityExpression	sp == stop		1395720	0		==			
ANR	1396601	Identifier	sp		1395720	0					
ANR	1396602	Identifier	stop		1395720	1					
ANR	1396603	CompoundStatement		181:17:4269:4269	1395720	1					
ANR	1396604	ReturnStatement	return sp ;	497:2:13204:13213	1395720	0	True				
ANR	1396605	Identifier	sp		1395720	0					
ANR	1396606	ElseStatement	else		1395720	0					
ANR	1396607	CompoundStatement		183:8:4292:4292	1395720	0					
ANR	1396608	ReturnStatement	return NULL ;	499:2:13227:13238	1395720	0	True				
ANR	1396609	Identifier	NULL		1395720	0					
ANR	1396610	ReturnType	static char *		1395720	1					
ANR	1396611	Identifier	dissect		1395720	2					
ANR	1396612	ParameterList	"struct match * m , char * start , char * stop , sopno startst , sopno stopst"		1395720	3					
ANR	1396613	Parameter	struct match * m	315:8:8859:8873	1395720	0	True				
ANR	1396614	ParameterType	struct match *		1395720	0					
ANR	1396615	Identifier	m		1395720	1					
ANR	1396616	Parameter	char * start	315:25:8876:8886	1395720	1	True				
ANR	1396617	ParameterType	char *		1395720	0					
ANR	1396618	Identifier	start		1395720	1					
ANR	1396619	Parameter	char * stop	315:38:8889:8898	1395720	2	True				
ANR	1396620	ParameterType	char *		1395720	0					
ANR	1396621	Identifier	stop		1395720	1					
ANR	1396622	Parameter	sopno startst	315:50:8901:8913	1395720	3	True				
ANR	1396623	ParameterType	sopno		1395720	0					
ANR	1396624	Identifier	startst		1395720	1					
ANR	1396625	Parameter	sopno stopst	315:65:8916:8927	1395720	4	True				
ANR	1396626	ParameterType	sopno		1395720	0					
ANR	1396627	Identifier	stopst		1395720	1					
ANR	1396628	CFGEntryNode	ENTRY		1395720		True				
ANR	1396629	CFGExitNode	EXIT		1395720		True				
ANR	1396630	InfiniteForNode	true		1395720		True				
ANR	1396631	InfiniteForNode	true		1395720		True				
ANR	1396632	InfiniteForNode	true		1395720		True				
ANR	1396633	InfiniteForNode	true		1395720		True				
ANR	1396634	InfiniteForNode	true		1395720		True				
ANR	1396635	Symbol	oldssp		1395720						
ANR	1396636	Symbol	m -> pmatch		1395720						
ANR	1396637	Symbol	* ss		1395720						
ANR	1396638	Symbol	m -> g -> nsub		1395720						
ANR	1396639	Symbol	dp		1395720						
ANR	1396640	Symbol	* m -> g		1395720						
ANR	1396641	Symbol	ssp		1395720						
ANR	1396642	Symbol	m -> pmatch [ i ] . rm_so		1395720						
ANR	1396643	Symbol	m -> g		1395720						
ANR	1396644	Symbol	* m -> g -> strip		1395720						
ANR	1396645	Symbol	esub		1395720						
ANR	1396646	Symbol	OOR1		1395720						
ANR	1396647	Symbol	ssub		1395720						
ANR	1396648	Symbol	* * m -> g		1395720						
ANR	1396649	Symbol	m -> pmatch [ i ] . rm_eo		1395720						
ANR	1396650	Symbol	sp		1395720						
ANR	1396651	Symbol	* m -> pmatch		1395720						
ANR	1396652	Symbol	* * m		1395720						
ANR	1396653	Symbol	sep		1395720						
ANR	1396654	Symbol	ss		1395720						
ANR	1396655	Symbol	rest		1395720						
ANR	1396656	Symbol	OP		1395720						
ANR	1396657	Symbol	NULL		1395720						
ANR	1396658	Symbol	OOR2		1395720						
ANR	1396659	Symbol	tail		1395720						
ANR	1396660	Symbol	start		1395720						
ANR	1396661	Symbol	startst		1395720						
ANR	1396662	Symbol	i		1395720						
ANR	1396663	Symbol	m		1395720						
ANR	1396664	Symbol	es		1395720						
ANR	1396665	Symbol	stp		1395720						
ANR	1396666	Symbol	* esub		1395720						
ANR	1396667	Symbol	O_CH		1395720						
ANR	1396668	Symbol	OPND		1395720						
ANR	1396669	Symbol	* i		1395720						
ANR	1396670	Symbol	stop		1395720						
ANR	1396671	Symbol	* * * m		1395720						
ANR	1396672	Symbol	slow		1395720						
ANR	1396673	Symbol	stopst		1395720						
ANR	1396674	Symbol	* es		1395720						
ANR	1396675	Symbol	* m		1395720						
ANR	1396676	Symbol	dissect		1395720						
ANR	1396677	Symbol	m -> offp		1395720						
ANR	1396678	Symbol	m -> g -> strip		1395720						
ANR	1396679	Function	backref	506:0:13324:18631							
ANR	1396680	FunctionDef	"backref (struct match * m , char * start , char * stop , sopno startst , sopno stopst , sopno lev , int rec)"		1396679	0					
ANR	1396681	CompoundStatement		509:0:13512:18631	1396679	0					
ANR	1396682	IdentifierDeclStatement	int i ;	510:1:13515:13520	1396679	0	True				
ANR	1396683	IdentifierDecl	i		1396679	0					
ANR	1396684	IdentifierDeclType	int		1396679	0					
ANR	1396685	Identifier	i		1396679	1					
ANR	1396686	IdentifierDeclStatement	sopno ss ;	511:1:13523:13531	1396679	1	True				
ANR	1396687	IdentifierDecl	ss		1396679	0					
ANR	1396688	IdentifierDeclType	sopno		1396679	0					
ANR	1396689	Identifier	ss		1396679	1					
ANR	1396690	IdentifierDeclStatement	char * sp ;	512:1:13567:13575	1396679	2	True				
ANR	1396691	IdentifierDecl	* sp		1396679	0					
ANR	1396692	IdentifierDeclType	char *		1396679	0					
ANR	1396693	Identifier	sp		1396679	1					
ANR	1396694	IdentifierDeclStatement	sopno ssub ;	513:1:13614:13624	1396679	3	True				
ANR	1396695	IdentifierDecl	ssub		1396679	0					
ANR	1396696	IdentifierDeclType	sopno		1396679	0					
ANR	1396697	Identifier	ssub		1396679	1					
ANR	1396698	IdentifierDeclStatement	sopno esub ;	514:1:13655:13665	1396679	4	True				
ANR	1396699	IdentifierDecl	esub		1396679	0					
ANR	1396700	IdentifierDeclType	sopno		1396679	0					
ANR	1396701	Identifier	esub		1396679	1					
ANR	1396702	IdentifierDeclStatement	char * ssp ;	515:1:13694:13703	1396679	5	True				
ANR	1396703	IdentifierDecl	* ssp		1396679	0					
ANR	1396704	IdentifierDeclType	char *		1396679	0					
ANR	1396705	Identifier	ssp		1396679	1					
ANR	1396706	IdentifierDeclStatement	char * dp ;	516:1:13748:13756	1396679	6	True				
ANR	1396707	IdentifierDecl	* dp		1396679	0					
ANR	1396708	IdentifierDeclType	char *		1396679	0					
ANR	1396709	Identifier	dp		1396679	1					
ANR	1396710	IdentifierDeclStatement	size_t len ;	517:1:13759:13769	1396679	7	True				
ANR	1396711	IdentifierDecl	len		1396679	0					
ANR	1396712	IdentifierDeclType	size_t		1396679	0					
ANR	1396713	Identifier	len		1396679	1					
ANR	1396714	IdentifierDeclStatement	int hard ;	518:1:13772:13780	1396679	8	True				
ANR	1396715	IdentifierDecl	hard		1396679	0					
ANR	1396716	IdentifierDeclType	int		1396679	0					
ANR	1396717	Identifier	hard		1396679	1					
ANR	1396718	IdentifierDeclStatement	sop s ;	519:1:13783:13788	1396679	9	True				
ANR	1396719	IdentifierDecl	s		1396679	0					
ANR	1396720	IdentifierDeclType	sop		1396679	0					
ANR	1396721	Identifier	s		1396679	1					
ANR	1396722	IdentifierDeclStatement	ut64 offsave ;	520:1:13791:13803	1396679	10	True				
ANR	1396723	IdentifierDecl	offsave		1396679	0					
ANR	1396724	IdentifierDeclType	ut64		1396679	0					
ANR	1396725	Identifier	offsave		1396679	1					
ANR	1396726	IdentifierDeclStatement	cset * cs ;	521:1:13806:13814	1396679	11	True				
ANR	1396727	IdentifierDecl	* cs		1396679	0					
ANR	1396728	IdentifierDeclType	cset *		1396679	0					
ANR	1396729	Identifier	cs		1396679	1					
ANR	1396730	ExpressionStatement	"AT ( ""back"" , start , stop , startst , stopst )"	523:1:13818:13858	1396679	12	True				
ANR	1396731	CallExpression	"AT ( ""back"" , start , stop , startst , stopst )"		1396679	0					
ANR	1396732	Callee	AT		1396679	0					
ANR	1396733	Identifier	AT		1396679	0					
ANR	1396734	ArgumentList	"""back"""		1396679	1					
ANR	1396735	Argument	"""back"""		1396679	0					
ANR	1396736	PrimaryExpression	"""back"""		1396679	0					
ANR	1396737	Argument	start		1396679	1					
ANR	1396738	Identifier	start		1396679	0					
ANR	1396739	Argument	stop		1396679	2					
ANR	1396740	Identifier	stop		1396679	0					
ANR	1396741	Argument	startst		1396679	3					
ANR	1396742	Identifier	startst		1396679	0					
ANR	1396743	Argument	stopst		1396679	4					
ANR	1396744	Identifier	stopst		1396679	0					
ANR	1396745	ExpressionStatement	sp = start	524:1:13861:13871	1396679	13	True				
ANR	1396746	AssignmentExpression	sp = start		1396679	0		=			
ANR	1396747	Identifier	sp		1396679	0					
ANR	1396748	Identifier	start		1396679	1					
ANR	1396749	ExpressionStatement	hard = 0	527:1:13919:13927	1396679	14	True				
ANR	1396750	AssignmentExpression	hard = 0		1396679	0		=			
ANR	1396751	Identifier	hard		1396679	0					
ANR	1396752	PrimaryExpression	0		1396679	1					
ANR	1396753	ForStatement	for ( ss = startst ; ! hard && ss < stopst ; ss ++ )		1396679	15					
ANR	1396754	ForInit	ss = startst ;	528:6:13935:13947	1396679	0	True				
ANR	1396755	AssignmentExpression	ss = startst		1396679	0		=			
ANR	1396756	Identifier	ss		1396679	0					
ANR	1396757	Identifier	startst		1396679	1					
ANR	1396758	Condition	! hard && ss < stopst	528:20:13949:13968	1396679	1	True				
ANR	1396759	AndExpression	! hard && ss < stopst		1396679	0		&&			
ANR	1396760	UnaryOperationExpression	! hard		1396679	0					
ANR	1396761	UnaryOperator	!		1396679	0					
ANR	1396762	Identifier	hard		1396679	1					
ANR	1396763	RelationalExpression	ss < stopst		1396679	1		<			
ANR	1396764	Identifier	ss		1396679	0					
ANR	1396765	Identifier	stopst		1396679	1					
ANR	1396766	PostIncDecOperationExpression	ss ++	528:42:13971:13974	1396679	2	True				
ANR	1396767	Identifier	ss		1396679	0					
ANR	1396768	IncDec	++		1396679	1					
ANR	1396769	SwitchStatement	switch ( OP ( s = m -> g -> strip [ ss ] ) )		1396679	3					
ANR	1396770	Condition	OP ( s = m -> g -> strip [ ss ] )	529:10:13987:14009	1396679	0	True				
ANR	1396771	CallExpression	OP ( s = m -> g -> strip [ ss ] )		1396679	0					
ANR	1396772	Callee	OP		1396679	0					
ANR	1396773	Identifier	OP		1396679	0					
ANR	1396774	ArgumentList	s = m -> g -> strip [ ss ]		1396679	1					
ANR	1396775	Argument	s = m -> g -> strip [ ss ]		1396679	0					
ANR	1396776	AssignmentExpression	s = m -> g -> strip [ ss ]		1396679	0		=			
ANR	1396777	Identifier	s		1396679	0					
ANR	1396778	ArrayIndexing	m -> g -> strip [ ss ]		1396679	1					
ANR	1396779	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1396780	PtrMemberAccess	m -> g		1396679	0					
ANR	1396781	Identifier	m		1396679	0					
ANR	1396782	Identifier	g		1396679	1					
ANR	1396783	Identifier	strip		1396679	1					
ANR	1396784	Identifier	ss		1396679	1					
ANR	1396785	CompoundStatement		21:35:499:499	1396679	1					
ANR	1396786	Label	case OCHAR :	530:2:14016:14026	1396679	0	True				
ANR	1396787	Identifier	OCHAR		1396679	0					
ANR	1396788	IfStatement	if ( sp == stop || * sp ++ != ( char ) OPND ( s ) )		1396679	1					
ANR	1396789	Condition	sp == stop || * sp ++ != ( char ) OPND ( s )	531:7:14035:14070	1396679	0	True				
ANR	1396790	OrExpression	sp == stop || * sp ++ != ( char ) OPND ( s )		1396679	0		||			
ANR	1396791	EqualityExpression	sp == stop		1396679	0		==			
ANR	1396792	Identifier	sp		1396679	0					
ANR	1396793	Identifier	stop		1396679	1					
ANR	1396794	EqualityExpression	* sp ++ != ( char ) OPND ( s )		1396679	1		!=			
ANR	1396795	UnaryOperationExpression	* sp ++		1396679	0					
ANR	1396796	UnaryOperator	*		1396679	0					
ANR	1396797	PostIncDecOperationExpression	sp ++		1396679	1					
ANR	1396798	Identifier	sp		1396679	0					
ANR	1396799	IncDec	++		1396679	1					
ANR	1396800	CastExpression	( char ) OPND ( s )		1396679	1					
ANR	1396801	CastTarget	char		1396679	0					
ANR	1396802	CallExpression	OPND ( s )		1396679	1					
ANR	1396803	Callee	OPND		1396679	0					
ANR	1396804	Identifier	OPND		1396679	0					
ANR	1396805	ArgumentList	s		1396679	1					
ANR	1396806	Argument	s		1396679	0					
ANR	1396807	Identifier	s		1396679	0					
ANR	1396808	ReturnStatement	return ( NULL ) ;	532:4:14077:14089	1396679	1	True				
ANR	1396809	Identifier	NULL		1396679	0					
ANR	1396810	BreakStatement	break ;	533:3:14094:14099	1396679	2	True				
ANR	1396811	Label	case OANY :	534:2:14103:14112	1396679	3	True				
ANR	1396812	Identifier	OANY		1396679	0					
ANR	1396813	IfStatement	if ( sp == stop )		1396679	4					
ANR	1396814	Condition	sp == stop	535:7:14121:14130	1396679	0	True				
ANR	1396815	EqualityExpression	sp == stop		1396679	0		==			
ANR	1396816	Identifier	sp		1396679	0					
ANR	1396817	Identifier	stop		1396679	1					
ANR	1396818	ReturnStatement	return ( NULL ) ;	536:4:14137:14149	1396679	1	True				
ANR	1396819	Identifier	NULL		1396679	0					
ANR	1396820	ExpressionStatement	sp ++	537:3:14154:14158	1396679	5	True				
ANR	1396821	PostIncDecOperationExpression	sp ++		1396679	0					
ANR	1396822	Identifier	sp		1396679	0					
ANR	1396823	IncDec	++		1396679	1					
ANR	1396824	BreakStatement	break ;	538:3:14163:14168	1396679	6	True				
ANR	1396825	Label	case OANYOF :	539:2:14172:14183	1396679	7	True				
ANR	1396826	Identifier	OANYOF		1396679	0					
ANR	1396827	ExpressionStatement	cs = & m -> g -> sets [ OPND ( s ) ]	540:3:14188:14213	1396679	8	True				
ANR	1396828	AssignmentExpression	cs = & m -> g -> sets [ OPND ( s ) ]		1396679	0		=			
ANR	1396829	Identifier	cs		1396679	0					
ANR	1396830	UnaryOperationExpression	& m -> g -> sets [ OPND ( s ) ]		1396679	1					
ANR	1396831	UnaryOperator	&		1396679	0					
ANR	1396832	ArrayIndexing	m -> g -> sets [ OPND ( s ) ]		1396679	1					
ANR	1396833	PtrMemberAccess	m -> g -> sets		1396679	0					
ANR	1396834	PtrMemberAccess	m -> g		1396679	0					
ANR	1396835	Identifier	m		1396679	0					
ANR	1396836	Identifier	g		1396679	1					
ANR	1396837	Identifier	sets		1396679	1					
ANR	1396838	CallExpression	OPND ( s )		1396679	1					
ANR	1396839	Callee	OPND		1396679	0					
ANR	1396840	Identifier	OPND		1396679	0					
ANR	1396841	ArgumentList	s		1396679	1					
ANR	1396842	Argument	s		1396679	0					
ANR	1396843	Identifier	s		1396679	0					
ANR	1396844	IfStatement	"if ( sp == stop || ! CHIN ( cs , * sp ++ ) )"		1396679	9					
ANR	1396845	Condition	"sp == stop || ! CHIN ( cs , * sp ++ )"	541:7:14222:14251	1396679	0	True				
ANR	1396846	OrExpression	"sp == stop || ! CHIN ( cs , * sp ++ )"		1396679	0		||			
ANR	1396847	EqualityExpression	sp == stop		1396679	0		==			
ANR	1396848	Identifier	sp		1396679	0					
ANR	1396849	Identifier	stop		1396679	1					
ANR	1396850	UnaryOperationExpression	"! CHIN ( cs , * sp ++ )"		1396679	1					
ANR	1396851	UnaryOperator	!		1396679	0					
ANR	1396852	CallExpression	"CHIN ( cs , * sp ++ )"		1396679	1					
ANR	1396853	Callee	CHIN		1396679	0					
ANR	1396854	Identifier	CHIN		1396679	0					
ANR	1396855	ArgumentList	cs		1396679	1					
ANR	1396856	Argument	cs		1396679	0					
ANR	1396857	Identifier	cs		1396679	0					
ANR	1396858	Argument	* sp ++		1396679	1					
ANR	1396859	UnaryOperationExpression	* sp ++		1396679	0					
ANR	1396860	UnaryOperator	*		1396679	0					
ANR	1396861	PostIncDecOperationExpression	sp ++		1396679	1					
ANR	1396862	Identifier	sp		1396679	0					
ANR	1396863	IncDec	++		1396679	1					
ANR	1396864	ReturnStatement	return ( NULL ) ;	542:4:14258:14270	1396679	1	True				
ANR	1396865	Identifier	NULL		1396679	0					
ANR	1396866	BreakStatement	break ;	543:3:14275:14280	1396679	10	True				
ANR	1396867	Label	case OBOL :	544:2:14284:14293	1396679	11	True				
ANR	1396868	Identifier	OBOL		1396679	0					
ANR	1396869	IfStatement	if ( ( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) )		1396679	12					
ANR	1396870	Condition	( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) )	545:8:14303:14432	1396679	0	True				
ANR	1396871	OrExpression	( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) )		1396679	0		||			
ANR	1396872	AndExpression	sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL )		1396679	0		&&			
ANR	1396873	EqualityExpression	sp == m -> beginp		1396679	0		==			
ANR	1396874	Identifier	sp		1396679	0					
ANR	1396875	PtrMemberAccess	m -> beginp		1396679	1					
ANR	1396876	Identifier	m		1396679	0					
ANR	1396877	Identifier	beginp		1396679	1					
ANR	1396878	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTBOL )		1396679	1					
ANR	1396879	UnaryOperator	!		1396679	0					
ANR	1396880	BitAndExpression	m -> eflags & R_REGEX_NOTBOL		1396679	1		&			
ANR	1396881	PtrMemberAccess	m -> eflags		1396679	0					
ANR	1396882	Identifier	m		1396679	0					
ANR	1396883	Identifier	eflags		1396679	1					
ANR	1396884	Identifier	R_REGEX_NOTBOL		1396679	1					
ANR	1396885	AndExpression	sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	1		&&			
ANR	1396886	RelationalExpression	sp < m -> endp		1396679	0		<			
ANR	1396887	Identifier	sp		1396679	0					
ANR	1396888	PtrMemberAccess	m -> endp		1396679	1					
ANR	1396889	Identifier	m		1396679	0					
ANR	1396890	Identifier	endp		1396679	1					
ANR	1396891	AndExpression	* ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	1		&&			
ANR	1396892	EqualityExpression	* ( sp - 1 ) == '\\n'		1396679	0		==			
ANR	1396893	UnaryOperationExpression	* ( sp - 1 )		1396679	0					
ANR	1396894	UnaryOperator	*		1396679	0					
ANR	1396895	AdditiveExpression	sp - 1		1396679	1		-			
ANR	1396896	Identifier	sp		1396679	0					
ANR	1396897	PrimaryExpression	1		1396679	1					
ANR	1396898	PrimaryExpression	'\\n'		1396679	1					
ANR	1396899	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1396679	1		&			
ANR	1396900	PtrMemberAccess	m -> g -> cflags		1396679	0					
ANR	1396901	PtrMemberAccess	m -> g		1396679	0					
ANR	1396902	Identifier	m		1396679	0					
ANR	1396903	Identifier	g		1396679	1					
ANR	1396904	Identifier	cflags		1396679	1					
ANR	1396905	Identifier	R_REGEX_NEWLINE		1396679	1					
ANR	1396906	CompoundStatement		40:4:927:927	1396679	1					
ANR	1396907	ElseStatement	else		1396679	0					
ANR	1396908	ReturnStatement	return ( NULL ) ;	550:4:14466:14478	1396679	0	True				
ANR	1396909	Identifier	NULL		1396679	0					
ANR	1396910	BreakStatement	break ;	551:3:14483:14488	1396679	13	True				
ANR	1396911	Label	case OEOL :	552:2:14492:14501	1396679	14	True				
ANR	1396912	Identifier	OEOL		1396679	0					
ANR	1396913	IfStatement	if ( ( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) )		1396679	15					
ANR	1396914	Condition	( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) )	553:8:14511:14634	1396679	0	True				
ANR	1396915	OrExpression	( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) )		1396679	0		||			
ANR	1396916	AndExpression	sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL )		1396679	0		&&			
ANR	1396917	EqualityExpression	sp == m -> endp		1396679	0		==			
ANR	1396918	Identifier	sp		1396679	0					
ANR	1396919	PtrMemberAccess	m -> endp		1396679	1					
ANR	1396920	Identifier	m		1396679	0					
ANR	1396921	Identifier	endp		1396679	1					
ANR	1396922	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTEOL )		1396679	1					
ANR	1396923	UnaryOperator	!		1396679	0					
ANR	1396924	BitAndExpression	m -> eflags & R_REGEX_NOTEOL		1396679	1		&			
ANR	1396925	PtrMemberAccess	m -> eflags		1396679	0					
ANR	1396926	Identifier	m		1396679	0					
ANR	1396927	Identifier	eflags		1396679	1					
ANR	1396928	Identifier	R_REGEX_NOTEOL		1396679	1					
ANR	1396929	AndExpression	sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	1		&&			
ANR	1396930	RelationalExpression	sp < m -> endp		1396679	0		<			
ANR	1396931	Identifier	sp		1396679	0					
ANR	1396932	PtrMemberAccess	m -> endp		1396679	1					
ANR	1396933	Identifier	m		1396679	0					
ANR	1396934	Identifier	endp		1396679	1					
ANR	1396935	AndExpression	* sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	1		&&			
ANR	1396936	EqualityExpression	* sp == '\\n'		1396679	0		==			
ANR	1396937	UnaryOperationExpression	* sp		1396679	0					
ANR	1396938	UnaryOperator	*		1396679	0					
ANR	1396939	Identifier	sp		1396679	1					
ANR	1396940	PrimaryExpression	'\\n'		1396679	1					
ANR	1396941	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1396679	1		&			
ANR	1396942	PtrMemberAccess	m -> g -> cflags		1396679	0					
ANR	1396943	PtrMemberAccess	m -> g		1396679	0					
ANR	1396944	Identifier	m		1396679	0					
ANR	1396945	Identifier	g		1396679	1					
ANR	1396946	Identifier	cflags		1396679	1					
ANR	1396947	Identifier	R_REGEX_NEWLINE		1396679	1					
ANR	1396948	CompoundStatement		48:4:1129:1129	1396679	1					
ANR	1396949	ElseStatement	else		1396679	0					
ANR	1396950	ReturnStatement	return ( NULL ) ;	558:4:14668:14680	1396679	0	True				
ANR	1396951	Identifier	NULL		1396679	0					
ANR	1396952	BreakStatement	break ;	559:3:14685:14690	1396679	16	True				
ANR	1396953	Label	case OBOW :	560:2:14694:14703	1396679	17	True				
ANR	1396954	Identifier	OBOW		1396679	0					
ANR	1396955	IfStatement	if ( ( ( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp > m -> beginp && ! ISWORD ( ( unsigned char ) * ( sp - 1 ) ) ) ) && ( sp < m -> endp && ISWORD ( ( unsigned char ) * sp ) ) )		1396679	18					
ANR	1396956	Condition	( ( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp > m -> beginp && ! ISWORD ( ( unsigned char ) * ( sp - 1 ) ) ) ) && ( sp < m -> endp && ISWORD ( ( unsigned char ) * sp ) )	561:7:14712:14965	1396679	0	True				
ANR	1396957	AndExpression	( ( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp > m -> beginp && ! ISWORD ( ( unsigned char ) * ( sp - 1 ) ) ) ) && ( sp < m -> endp && ISWORD ( ( unsigned char ) * sp ) )		1396679	0		&&			
ANR	1396958	OrExpression	( sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL ) ) || ( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp > m -> beginp && ! ISWORD ( ( unsigned char ) * ( sp - 1 ) ) )		1396679	0		||			
ANR	1396959	AndExpression	sp == m -> beginp && ! ( m -> eflags & R_REGEX_NOTBOL )		1396679	0		&&			
ANR	1396960	EqualityExpression	sp == m -> beginp		1396679	0		==			
ANR	1396961	Identifier	sp		1396679	0					
ANR	1396962	PtrMemberAccess	m -> beginp		1396679	1					
ANR	1396963	Identifier	m		1396679	0					
ANR	1396964	Identifier	beginp		1396679	1					
ANR	1396965	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTBOL )		1396679	1					
ANR	1396966	UnaryOperator	!		1396679	0					
ANR	1396967	BitAndExpression	m -> eflags & R_REGEX_NOTBOL		1396679	1		&			
ANR	1396968	PtrMemberAccess	m -> eflags		1396679	0					
ANR	1396969	Identifier	m		1396679	0					
ANR	1396970	Identifier	eflags		1396679	1					
ANR	1396971	Identifier	R_REGEX_NOTBOL		1396679	1					
ANR	1396972	OrExpression	( sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp > m -> beginp && ! ISWORD ( ( unsigned char ) * ( sp - 1 ) ) )		1396679	1		||			
ANR	1396973	AndExpression	sp < m -> endp && * ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	0		&&			
ANR	1396974	RelationalExpression	sp < m -> endp		1396679	0		<			
ANR	1396975	Identifier	sp		1396679	0					
ANR	1396976	PtrMemberAccess	m -> endp		1396679	1					
ANR	1396977	Identifier	m		1396679	0					
ANR	1396978	Identifier	endp		1396679	1					
ANR	1396979	AndExpression	* ( sp - 1 ) == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	1		&&			
ANR	1396980	EqualityExpression	* ( sp - 1 ) == '\\n'		1396679	0		==			
ANR	1396981	UnaryOperationExpression	* ( sp - 1 )		1396679	0					
ANR	1396982	UnaryOperator	*		1396679	0					
ANR	1396983	AdditiveExpression	sp - 1		1396679	1		-			
ANR	1396984	Identifier	sp		1396679	0					
ANR	1396985	PrimaryExpression	1		1396679	1					
ANR	1396986	PrimaryExpression	'\\n'		1396679	1					
ANR	1396987	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1396679	1		&			
ANR	1396988	PtrMemberAccess	m -> g -> cflags		1396679	0					
ANR	1396989	PtrMemberAccess	m -> g		1396679	0					
ANR	1396990	Identifier	m		1396679	0					
ANR	1396991	Identifier	g		1396679	1					
ANR	1396992	Identifier	cflags		1396679	1					
ANR	1396993	Identifier	R_REGEX_NEWLINE		1396679	1					
ANR	1396994	AndExpression	sp > m -> beginp && ! ISWORD ( ( unsigned char ) * ( sp - 1 ) )		1396679	1		&&			
ANR	1396995	RelationalExpression	sp > m -> beginp		1396679	0		>			
ANR	1396996	Identifier	sp		1396679	0					
ANR	1396997	PtrMemberAccess	m -> beginp		1396679	1					
ANR	1396998	Identifier	m		1396679	0					
ANR	1396999	Identifier	beginp		1396679	1					
ANR	1397000	UnaryOperationExpression	! ISWORD ( ( unsigned char ) * ( sp - 1 ) )		1396679	1					
ANR	1397001	UnaryOperator	!		1396679	0					
ANR	1397002	CallExpression	ISWORD ( ( unsigned char ) * ( sp - 1 ) )		1396679	1					
ANR	1397003	Callee	ISWORD		1396679	0					
ANR	1397004	Identifier	ISWORD		1396679	0					
ANR	1397005	ArgumentList	( unsigned char ) * ( sp - 1 )		1396679	1					
ANR	1397006	Argument	( unsigned char ) * ( sp - 1 )		1396679	0					
ANR	1397007	CastExpression	( unsigned char ) * ( sp - 1 )		1396679	0					
ANR	1397008	CastTarget	unsigned char		1396679	0					
ANR	1397009	UnaryOperationExpression	* ( sp - 1 )		1396679	1					
ANR	1397010	UnaryOperator	*		1396679	0					
ANR	1397011	AdditiveExpression	sp - 1		1396679	1		-			
ANR	1397012	Identifier	sp		1396679	0					
ANR	1397013	PrimaryExpression	1		1396679	1					
ANR	1397014	AndExpression	sp < m -> endp && ISWORD ( ( unsigned char ) * sp )		1396679	1		&&			
ANR	1397015	RelationalExpression	sp < m -> endp		1396679	0		<			
ANR	1397016	Identifier	sp		1396679	0					
ANR	1397017	PtrMemberAccess	m -> endp		1396679	1					
ANR	1397018	Identifier	m		1396679	0					
ANR	1397019	Identifier	endp		1396679	1					
ANR	1397020	CallExpression	ISWORD ( ( unsigned char ) * sp )		1396679	1					
ANR	1397021	Callee	ISWORD		1396679	0					
ANR	1397022	Identifier	ISWORD		1396679	0					
ANR	1397023	ArgumentList	( unsigned char ) * sp		1396679	1					
ANR	1397024	Argument	( unsigned char ) * sp		1396679	0					
ANR	1397025	CastExpression	( unsigned char ) * sp		1396679	0					
ANR	1397026	CastTarget	unsigned char		1396679	0					
ANR	1397027	UnaryOperationExpression	* sp		1396679	1					
ANR	1397028	UnaryOperator	*		1396679	0					
ANR	1397029	Identifier	sp		1396679	1					
ANR	1397030	CompoundStatement		59:4:1460:1460	1396679	1					
ANR	1397031	ElseStatement	else		1396679	0					
ANR	1397032	ReturnStatement	return ( NULL ) ;	569:4:14999:15011	1396679	0	True				
ANR	1397033	Identifier	NULL		1396679	0					
ANR	1397034	BreakStatement	break ;	570:3:15016:15021	1396679	19	True				
ANR	1397035	Label	case OEOW :	571:2:15025:15034	1396679	20	True				
ANR	1397036	Identifier	OEOW		1396679	0					
ANR	1397037	IfStatement	if ( ( ( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp < m -> endp && ! ISWORD ( ( unsigned char ) * sp ) ) ) && ( sp > m -> beginp && ISWORD ( ( unsigned char ) * ( sp - 1 ) ) ) )		1396679	21					
ANR	1397038	Condition	( ( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp < m -> endp && ! ISWORD ( ( unsigned char ) * sp ) ) ) && ( sp > m -> beginp && ISWORD ( ( unsigned char ) * ( sp - 1 ) ) )	572:7:15043:15283	1396679	0	True				
ANR	1397039	AndExpression	( ( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp < m -> endp && ! ISWORD ( ( unsigned char ) * sp ) ) ) && ( sp > m -> beginp && ISWORD ( ( unsigned char ) * ( sp - 1 ) ) )		1396679	0		&&			
ANR	1397040	OrExpression	( sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL ) ) || ( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp < m -> endp && ! ISWORD ( ( unsigned char ) * sp ) )		1396679	0		||			
ANR	1397041	AndExpression	sp == m -> endp && ! ( m -> eflags & R_REGEX_NOTEOL )		1396679	0		&&			
ANR	1397042	EqualityExpression	sp == m -> endp		1396679	0		==			
ANR	1397043	Identifier	sp		1396679	0					
ANR	1397044	PtrMemberAccess	m -> endp		1396679	1					
ANR	1397045	Identifier	m		1396679	0					
ANR	1397046	Identifier	endp		1396679	1					
ANR	1397047	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTEOL )		1396679	1					
ANR	1397048	UnaryOperator	!		1396679	0					
ANR	1397049	BitAndExpression	m -> eflags & R_REGEX_NOTEOL		1396679	1		&			
ANR	1397050	PtrMemberAccess	m -> eflags		1396679	0					
ANR	1397051	Identifier	m		1396679	0					
ANR	1397052	Identifier	eflags		1396679	1					
ANR	1397053	Identifier	R_REGEX_NOTEOL		1396679	1					
ANR	1397054	OrExpression	( sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE ) ) || ( sp < m -> endp && ! ISWORD ( ( unsigned char ) * sp ) )		1396679	1		||			
ANR	1397055	AndExpression	sp < m -> endp && * sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	0		&&			
ANR	1397056	RelationalExpression	sp < m -> endp		1396679	0		<			
ANR	1397057	Identifier	sp		1396679	0					
ANR	1397058	PtrMemberAccess	m -> endp		1396679	1					
ANR	1397059	Identifier	m		1396679	0					
ANR	1397060	Identifier	endp		1396679	1					
ANR	1397061	AndExpression	* sp == '\\n' && ( m -> g -> cflags & R_REGEX_NEWLINE )		1396679	1		&&			
ANR	1397062	EqualityExpression	* sp == '\\n'		1396679	0		==			
ANR	1397063	UnaryOperationExpression	* sp		1396679	0					
ANR	1397064	UnaryOperator	*		1396679	0					
ANR	1397065	Identifier	sp		1396679	1					
ANR	1397066	PrimaryExpression	'\\n'		1396679	1					
ANR	1397067	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1396679	1		&			
ANR	1397068	PtrMemberAccess	m -> g -> cflags		1396679	0					
ANR	1397069	PtrMemberAccess	m -> g		1396679	0					
ANR	1397070	Identifier	m		1396679	0					
ANR	1397071	Identifier	g		1396679	1					
ANR	1397072	Identifier	cflags		1396679	1					
ANR	1397073	Identifier	R_REGEX_NEWLINE		1396679	1					
ANR	1397074	AndExpression	sp < m -> endp && ! ISWORD ( ( unsigned char ) * sp )		1396679	1		&&			
ANR	1397075	RelationalExpression	sp < m -> endp		1396679	0		<			
ANR	1397076	Identifier	sp		1396679	0					
ANR	1397077	PtrMemberAccess	m -> endp		1396679	1					
ANR	1397078	Identifier	m		1396679	0					
ANR	1397079	Identifier	endp		1396679	1					
ANR	1397080	UnaryOperationExpression	! ISWORD ( ( unsigned char ) * sp )		1396679	1					
ANR	1397081	UnaryOperator	!		1396679	0					
ANR	1397082	CallExpression	ISWORD ( ( unsigned char ) * sp )		1396679	1					
ANR	1397083	Callee	ISWORD		1396679	0					
ANR	1397084	Identifier	ISWORD		1396679	0					
ANR	1397085	ArgumentList	( unsigned char ) * sp		1396679	1					
ANR	1397086	Argument	( unsigned char ) * sp		1396679	0					
ANR	1397087	CastExpression	( unsigned char ) * sp		1396679	0					
ANR	1397088	CastTarget	unsigned char		1396679	0					
ANR	1397089	UnaryOperationExpression	* sp		1396679	1					
ANR	1397090	UnaryOperator	*		1396679	0					
ANR	1397091	Identifier	sp		1396679	1					
ANR	1397092	AndExpression	sp > m -> beginp && ISWORD ( ( unsigned char ) * ( sp - 1 ) )		1396679	1		&&			
ANR	1397093	RelationalExpression	sp > m -> beginp		1396679	0		>			
ANR	1397094	Identifier	sp		1396679	0					
ANR	1397095	PtrMemberAccess	m -> beginp		1396679	1					
ANR	1397096	Identifier	m		1396679	0					
ANR	1397097	Identifier	beginp		1396679	1					
ANR	1397098	CallExpression	ISWORD ( ( unsigned char ) * ( sp - 1 ) )		1396679	1					
ANR	1397099	Callee	ISWORD		1396679	0					
ANR	1397100	Identifier	ISWORD		1396679	0					
ANR	1397101	ArgumentList	( unsigned char ) * ( sp - 1 )		1396679	1					
ANR	1397102	Argument	( unsigned char ) * ( sp - 1 )		1396679	0					
ANR	1397103	CastExpression	( unsigned char ) * ( sp - 1 )		1396679	0					
ANR	1397104	CastTarget	unsigned char		1396679	0					
ANR	1397105	UnaryOperationExpression	* ( sp - 1 )		1396679	1					
ANR	1397106	UnaryOperator	*		1396679	0					
ANR	1397107	AdditiveExpression	sp - 1		1396679	1		-			
ANR	1397108	Identifier	sp		1396679	0					
ANR	1397109	PrimaryExpression	1		1396679	1					
ANR	1397110	CompoundStatement		69:4:1778:1778	1396679	1					
ANR	1397111	ElseStatement	else		1396679	0					
ANR	1397112	ReturnStatement	return ( NULL ) ;	579:4:15317:15329	1396679	0	True				
ANR	1397113	Identifier	NULL		1396679	0					
ANR	1397114	BreakStatement	break ;	580:3:15334:15339	1396679	22	True				
ANR	1397115	Label	case O_QUEST :	581:2:15343:15355	1396679	23	True				
ANR	1397116	Identifier	O_QUEST		1396679	0					
ANR	1397117	BreakStatement	break ;	582:3:15360:15365	1396679	24	True				
ANR	1397118	Label	case OOR1 :	583:2:15369:15378	1396679	25	True				
ANR	1397119	Identifier	OOR1		1396679	0					
ANR	1397120	ExpressionStatement	ss ++	584:3:15420:15424	1396679	26	True				
ANR	1397121	PostIncDecOperationExpression	ss ++		1396679	0					
ANR	1397122	Identifier	ss		1396679	0					
ANR	1397123	IncDec	++		1396679	1					
ANR	1397124	ExpressionStatement	s = m -> g -> strip [ ss ]	585:3:15429:15448	1396679	27	True				
ANR	1397125	AssignmentExpression	s = m -> g -> strip [ ss ]		1396679	0		=			
ANR	1397126	Identifier	s		1396679	0					
ANR	1397127	ArrayIndexing	m -> g -> strip [ ss ]		1396679	1					
ANR	1397128	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397129	PtrMemberAccess	m -> g		1396679	0					
ANR	1397130	Identifier	m		1396679	0					
ANR	1397131	Identifier	g		1396679	1					
ANR	1397132	Identifier	strip		1396679	1					
ANR	1397133	Identifier	ss		1396679	1					
ANR	1397134	DoStatement	do		1396679	28					
ANR	1397135	CompoundStatement		78:6:1943:1943	1396679	0					
ANR	1397136	IfStatement	if ( OP ( s ) == OOR2 )		1396679	0					
ANR	1397137	Condition	OP ( s ) == OOR2	587:8:15466:15478	1396679	0	True				
ANR	1397138	EqualityExpression	OP ( s ) == OOR2		1396679	0		==			
ANR	1397139	CallExpression	OP ( s )		1396679	0					
ANR	1397140	Callee	OP		1396679	0					
ANR	1397141	Identifier	OP		1396679	0					
ANR	1397142	ArgumentList	s		1396679	1					
ANR	1397143	Argument	s		1396679	0					
ANR	1397144	Identifier	s		1396679	0					
ANR	1397145	Identifier	OOR2		1396679	1					
ANR	1397146	CompoundStatement		79:23:1968:1968	1396679	1					
ANR	1397147	ExpressionStatement	ss += OPND ( s )	588:5:15488:15501	1396679	0	True				
ANR	1397148	AssignmentExpression	ss += OPND ( s )		1396679	0		+=			
ANR	1397149	Identifier	ss		1396679	0					
ANR	1397150	CallExpression	OPND ( s )		1396679	1					
ANR	1397151	Callee	OPND		1396679	0					
ANR	1397152	Identifier	OPND		1396679	0					
ANR	1397153	ArgumentList	s		1396679	1					
ANR	1397154	Argument	s		1396679	0					
ANR	1397155	Identifier	s		1396679	0					
ANR	1397156	Condition	OP ( s = m -> g -> strip [ ss ] ) != O_CH	590:12:15521:15551	1396679	1	True				
ANR	1397157	EqualityExpression	OP ( s = m -> g -> strip [ ss ] ) != O_CH		1396679	0		!=			
ANR	1397158	CallExpression	OP ( s = m -> g -> strip [ ss ] )		1396679	0					
ANR	1397159	Callee	OP		1396679	0					
ANR	1397160	Identifier	OP		1396679	0					
ANR	1397161	ArgumentList	s = m -> g -> strip [ ss ]		1396679	1					
ANR	1397162	Argument	s = m -> g -> strip [ ss ]		1396679	0					
ANR	1397163	AssignmentExpression	s = m -> g -> strip [ ss ]		1396679	0		=			
ANR	1397164	Identifier	s		1396679	0					
ANR	1397165	ArrayIndexing	m -> g -> strip [ ss ]		1396679	1					
ANR	1397166	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397167	PtrMemberAccess	m -> g		1396679	0					
ANR	1397168	Identifier	m		1396679	0					
ANR	1397169	Identifier	g		1396679	1					
ANR	1397170	Identifier	strip		1396679	1					
ANR	1397171	Identifier	ss		1396679	1					
ANR	1397172	Identifier	O_CH		1396679	1					
ANR	1397173	BreakStatement	break ;	592:3:15608:15613	1396679	29	True				
ANR	1397174	Label	default :	593:2:15617:15624	1396679	30	True				
ANR	1397175	Identifier	default		1396679	0					
ANR	1397176	ExpressionStatement	hard = 1	594:3:15657:15665	1396679	31	True				
ANR	1397177	AssignmentExpression	hard = 1		1396679	0		=			
ANR	1397178	Identifier	hard		1396679	0					
ANR	1397179	PrimaryExpression	1		1396679	1					
ANR	1397180	BreakStatement	break ;	595:3:15670:15675	1396679	32	True				
ANR	1397181	IfStatement	if ( ! hard )		1396679	16					
ANR	1397182	Condition	! hard	597:5:15686:15690	1396679	0	True				
ANR	1397183	UnaryOperationExpression	! hard		1396679	0					
ANR	1397184	UnaryOperator	!		1396679	0					
ANR	1397185	Identifier	hard		1396679	1					
ANR	1397186	CompoundStatement		89:12:2180:2180	1396679	1					
ANR	1397187	IfStatement	if ( sp != stop )		1396679	0					
ANR	1397188	Condition	sp != stop	598:6:15721:15730	1396679	0	True				
ANR	1397189	EqualityExpression	sp != stop		1396679	0		!=			
ANR	1397190	Identifier	sp		1396679	0					
ANR	1397191	Identifier	stop		1396679	1					
ANR	1397192	ReturnStatement	return ( NULL ) ;	599:3:15736:15748	1396679	1	True				
ANR	1397193	Identifier	NULL		1396679	0					
ANR	1397194	ReturnStatement	return ( sp ) ;	600:2:15752:15762	1396679	1	True				
ANR	1397195	Identifier	sp		1396679	0					
ANR	1397196	ExpressionStatement	ss --	602:1:15768:15772	1396679	17	True				
ANR	1397197	PostIncDecOperationExpression	ss --		1396679	0					
ANR	1397198	Identifier	ss		1396679	0					
ANR	1397199	IncDec	--		1396679	1					
ANR	1397200	ExpressionStatement	"AT ( ""hard"" , sp , stop , ss , stopst )"	605:1:15843:15875	1396679	18	True				
ANR	1397201	CallExpression	"AT ( ""hard"" , sp , stop , ss , stopst )"		1396679	0					
ANR	1397202	Callee	AT		1396679	0					
ANR	1397203	Identifier	AT		1396679	0					
ANR	1397204	ArgumentList	"""hard"""		1396679	1					
ANR	1397205	Argument	"""hard"""		1396679	0					
ANR	1397206	PrimaryExpression	"""hard"""		1396679	0					
ANR	1397207	Argument	sp		1396679	1					
ANR	1397208	Identifier	sp		1396679	0					
ANR	1397209	Argument	stop		1396679	2					
ANR	1397210	Identifier	stop		1396679	0					
ANR	1397211	Argument	ss		1396679	3					
ANR	1397212	Identifier	ss		1396679	0					
ANR	1397213	Argument	stopst		1396679	4					
ANR	1397214	Identifier	stopst		1396679	0					
ANR	1397215	ExpressionStatement	s = m -> g -> strip [ ss ]	606:1:15878:15897	1396679	19	True				
ANR	1397216	AssignmentExpression	s = m -> g -> strip [ ss ]		1396679	0		=			
ANR	1397217	Identifier	s		1396679	0					
ANR	1397218	ArrayIndexing	m -> g -> strip [ ss ]		1396679	1					
ANR	1397219	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397220	PtrMemberAccess	m -> g		1396679	0					
ANR	1397221	Identifier	m		1396679	0					
ANR	1397222	Identifier	g		1396679	1					
ANR	1397223	Identifier	strip		1396679	1					
ANR	1397224	Identifier	ss		1396679	1					
ANR	1397225	SwitchStatement	switch ( OP ( s ) )		1396679	20					
ANR	1397226	Condition	OP ( s )	607:9:15908:15912	1396679	0	True				
ANR	1397227	CallExpression	OP ( s )		1396679	0					
ANR	1397228	Callee	OP		1396679	0					
ANR	1397229	Identifier	OP		1396679	0					
ANR	1397230	ArgumentList	s		1396679	1					
ANR	1397231	Argument	s		1396679	0					
ANR	1397232	Identifier	s		1396679	0					
ANR	1397233	CompoundStatement		99:16:2402:2402	1396679	1					
ANR	1397234	Label	case OBACK_ :	608:1:15918:15929	1396679	0	True				
ANR	1397235	Identifier	OBACK_		1396679	0					
ANR	1397236	ExpressionStatement	i = OPND ( s )	609:2:15958:15969	1396679	1	True				
ANR	1397237	AssignmentExpression	i = OPND ( s )		1396679	0		=			
ANR	1397238	Identifier	i		1396679	0					
ANR	1397239	CallExpression	OPND ( s )		1396679	1					
ANR	1397240	Callee	OPND		1396679	0					
ANR	1397241	Identifier	OPND		1396679	0					
ANR	1397242	ArgumentList	s		1396679	1					
ANR	1397243	Argument	s		1396679	0					
ANR	1397244	Identifier	s		1396679	0					
ANR	1397245	IfStatement	if ( i > 0 && i <= m -> g -> nsub )		1396679	2					
ANR	1397246	Condition	i > 0 && i <= m -> g -> nsub	610:6:15977:16000	1396679	0	True				
ANR	1397247	AndExpression	i > 0 && i <= m -> g -> nsub		1396679	0		&&			
ANR	1397248	RelationalExpression	i > 0		1396679	0		>			
ANR	1397249	Identifier	i		1396679	0					
ANR	1397250	PrimaryExpression	0		1396679	1					
ANR	1397251	RelationalExpression	i <= m -> g -> nsub		1396679	1		<=			
ANR	1397252	Identifier	i		1396679	0					
ANR	1397253	PtrMemberAccess	m -> g -> nsub		1396679	1					
ANR	1397254	PtrMemberAccess	m -> g		1396679	0					
ANR	1397255	Identifier	m		1396679	0					
ANR	1397256	Identifier	g		1396679	1					
ANR	1397257	Identifier	nsub		1396679	1					
ANR	1397258	CompoundStatement		102:32:2490:2490	1396679	1					
ANR	1397259	IfStatement	if ( m -> pmatch [ i ] . rm_eo == - 1 )		1396679	0					
ANR	1397260	Condition	m -> pmatch [ i ] . rm_eo == - 1	611:7:16012:16035	1396679	0	True				
ANR	1397261	EqualityExpression	m -> pmatch [ i ] . rm_eo == - 1		1396679	0		==			
ANR	1397262	MemberAccess	m -> pmatch [ i ] . rm_eo		1396679	0					
ANR	1397263	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397264	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397265	Identifier	m		1396679	0					
ANR	1397266	Identifier	pmatch		1396679	1					
ANR	1397267	Identifier	i		1396679	1					
ANR	1397268	Identifier	rm_eo		1396679	1					
ANR	1397269	UnaryOperationExpression	- 1		1396679	1					
ANR	1397270	UnaryOperator	-		1396679	0					
ANR	1397271	PrimaryExpression	1		1396679	1					
ANR	1397272	CompoundStatement		103:33:2525:2525	1396679	1					
ANR	1397273	ReturnStatement	return NULL ;	612:4:16044:16055	1396679	0	True				
ANR	1397274	Identifier	NULL		1396679	0					
ANR	1397275	IfStatement	if ( m -> pmatch [ i ] . rm_so != - 1 )		1396679	3					
ANR	1397276	Condition	m -> pmatch [ i ] . rm_so != - 1	615:6:16072:16095	1396679	0	True				
ANR	1397277	EqualityExpression	m -> pmatch [ i ] . rm_so != - 1		1396679	0		!=			
ANR	1397278	MemberAccess	m -> pmatch [ i ] . rm_so		1396679	0					
ANR	1397279	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397280	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397281	Identifier	m		1396679	0					
ANR	1397282	Identifier	pmatch		1396679	1					
ANR	1397283	Identifier	i		1396679	1					
ANR	1397284	Identifier	rm_so		1396679	1					
ANR	1397285	UnaryOperationExpression	- 1		1396679	1					
ANR	1397286	UnaryOperator	-		1396679	0					
ANR	1397287	PrimaryExpression	1		1396679	1					
ANR	1397288	CompoundStatement		107:32:2585:2585	1396679	1					
ANR	1397289	ExpressionStatement	len = m -> pmatch [ i ] . rm_eo - m -> pmatch [ i ] . rm_so	616:3:16103:16148	1396679	0	True				
ANR	1397290	AssignmentExpression	len = m -> pmatch [ i ] . rm_eo - m -> pmatch [ i ] . rm_so		1396679	0		=			
ANR	1397291	Identifier	len		1396679	0					
ANR	1397292	AdditiveExpression	m -> pmatch [ i ] . rm_eo - m -> pmatch [ i ] . rm_so		1396679	1		-			
ANR	1397293	MemberAccess	m -> pmatch [ i ] . rm_eo		1396679	0					
ANR	1397294	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397295	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397296	Identifier	m		1396679	0					
ANR	1397297	Identifier	pmatch		1396679	1					
ANR	1397298	Identifier	i		1396679	1					
ANR	1397299	Identifier	rm_eo		1396679	1					
ANR	1397300	MemberAccess	m -> pmatch [ i ] . rm_so		1396679	1					
ANR	1397301	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397302	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397303	Identifier	m		1396679	0					
ANR	1397304	Identifier	pmatch		1396679	1					
ANR	1397305	Identifier	i		1396679	1					
ANR	1397306	Identifier	rm_so		1396679	1					
ANR	1397307	IfStatement	if ( len == 0 && rec ++ > MAX_RECURSION )		1396679	1					
ANR	1397308	Condition	len == 0 && rec ++ > MAX_RECURSION	617:7:16157:16189	1396679	0	True				
ANR	1397309	AndExpression	len == 0 && rec ++ > MAX_RECURSION		1396679	0		&&			
ANR	1397310	EqualityExpression	len == 0		1396679	0		==			
ANR	1397311	Identifier	len		1396679	0					
ANR	1397312	PrimaryExpression	0		1396679	1					
ANR	1397313	RelationalExpression	rec ++ > MAX_RECURSION		1396679	1		>			
ANR	1397314	PostIncDecOperationExpression	rec ++		1396679	0					
ANR	1397315	Identifier	rec		1396679	0					
ANR	1397316	IncDec	++		1396679	1					
ANR	1397317	Identifier	MAX_RECURSION		1396679	1					
ANR	1397318	ReturnStatement	return ( NULL ) ;	618:4:16196:16208	1396679	1	True				
ANR	1397319	Identifier	NULL		1396679	0					
ANR	1397320	IfStatement	if ( stop - m -> beginp >= len )		1396679	2					
ANR	1397321	Condition	stop - m -> beginp >= len	619:7:16217:16239	1396679	0	True				
ANR	1397322	RelationalExpression	stop - m -> beginp >= len		1396679	0		>=			
ANR	1397323	AdditiveExpression	stop - m -> beginp		1396679	0		-			
ANR	1397324	Identifier	stop		1396679	0					
ANR	1397325	PtrMemberAccess	m -> beginp		1396679	1					
ANR	1397326	Identifier	m		1396679	0					
ANR	1397327	Identifier	beginp		1396679	1					
ANR	1397328	Identifier	len		1396679	1					
ANR	1397329	CompoundStatement		111:32:2729:2729	1396679	1					
ANR	1397330	IfStatement	if ( sp > stop - len )		1396679	0					
ANR	1397331	Condition	sp > stop - len	620:8:16252:16266	1396679	0	True				
ANR	1397332	RelationalExpression	sp > stop - len		1396679	0		>			
ANR	1397333	Identifier	sp		1396679	0					
ANR	1397334	AdditiveExpression	stop - len		1396679	1		-			
ANR	1397335	Identifier	stop		1396679	0					
ANR	1397336	Identifier	len		1396679	1					
ANR	1397337	CompoundStatement		112:25:2756:2756	1396679	1					
ANR	1397338	ReturnStatement	return ( NULL ) ;	621:5:16276:16288	1396679	0	True				
ANR	1397339	Identifier	NULL		1396679	0					
ANR	1397340	ExpressionStatement	ssp = m -> offp + m -> pmatch [ i ] . rm_so	624:3:16335:16369	1396679	3	True				
ANR	1397341	AssignmentExpression	ssp = m -> offp + m -> pmatch [ i ] . rm_so		1396679	0		=			
ANR	1397342	Identifier	ssp		1396679	0					
ANR	1397343	AdditiveExpression	m -> offp + m -> pmatch [ i ] . rm_so		1396679	1		+			
ANR	1397344	PtrMemberAccess	m -> offp		1396679	0					
ANR	1397345	Identifier	m		1396679	0					
ANR	1397346	Identifier	offp		1396679	1					
ANR	1397347	MemberAccess	m -> pmatch [ i ] . rm_so		1396679	1					
ANR	1397348	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397349	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397350	Identifier	m		1396679	0					
ANR	1397351	Identifier	pmatch		1396679	1					
ANR	1397352	Identifier	i		1396679	1					
ANR	1397353	Identifier	rm_so		1396679	1					
ANR	1397354	IfStatement	"if ( memcmp ( sp , ssp , len ) != 0 )"		1396679	4					
ANR	1397355	Condition	"memcmp ( sp , ssp , len ) != 0"	625:7:16378:16402	1396679	0	True				
ANR	1397356	EqualityExpression	"memcmp ( sp , ssp , len ) != 0"		1396679	0		!=			
ANR	1397357	CallExpression	"memcmp ( sp , ssp , len )"		1396679	0					
ANR	1397358	Callee	memcmp		1396679	0					
ANR	1397359	Identifier	memcmp		1396679	0					
ANR	1397360	ArgumentList	sp		1396679	1					
ANR	1397361	Argument	sp		1396679	0					
ANR	1397362	Identifier	sp		1396679	0					
ANR	1397363	Argument	ssp		1396679	1					
ANR	1397364	Identifier	ssp		1396679	0					
ANR	1397365	Argument	len		1396679	2					
ANR	1397366	Identifier	len		1396679	0					
ANR	1397367	PrimaryExpression	0		1396679	1					
ANR	1397368	ReturnStatement	return ( NULL ) ;	626:4:16409:16421	1396679	1	True				
ANR	1397369	Identifier	NULL		1396679	0					
ANR	1397370	WhileStatement	"while ( m -> g -> strip [ ss ] != SOP ( O_BACK , i ) )"		1396679	5					
ANR	1397371	Condition	"m -> g -> strip [ ss ] != SOP ( O_BACK , i )"	627:10:16433:16465	1396679	0	True				
ANR	1397372	EqualityExpression	"m -> g -> strip [ ss ] != SOP ( O_BACK , i )"		1396679	0		!=			
ANR	1397373	ArrayIndexing	m -> g -> strip [ ss ]		1396679	0					
ANR	1397374	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397375	PtrMemberAccess	m -> g		1396679	0					
ANR	1397376	Identifier	m		1396679	0					
ANR	1397377	Identifier	g		1396679	1					
ANR	1397378	Identifier	strip		1396679	1					
ANR	1397379	Identifier	ss		1396679	1					
ANR	1397380	CallExpression	"SOP ( O_BACK , i )"		1396679	1					
ANR	1397381	Callee	SOP		1396679	0					
ANR	1397382	Identifier	SOP		1396679	0					
ANR	1397383	ArgumentList	O_BACK		1396679	1					
ANR	1397384	Argument	O_BACK		1396679	0					
ANR	1397385	Identifier	O_BACK		1396679	0					
ANR	1397386	Argument	i		1396679	1					
ANR	1397387	Identifier	i		1396679	0					
ANR	1397388	ExpressionStatement	ss ++	628:4:16472:16476	1396679	1	True				
ANR	1397389	PostIncDecOperationExpression	ss ++		1396679	0					
ANR	1397390	Identifier	ss		1396679	0					
ANR	1397391	IncDec	++		1396679	1					
ANR	1397392	ReturnStatement	"return ( backref ( m , sp + len , stop , ss + 1 , stopst , lev , rec ) ) ;"	629:3:16481:16537	1396679	6	True				
ANR	1397393	CallExpression	"backref ( m , sp + len , stop , ss + 1 , stopst , lev , rec )"		1396679	0					
ANR	1397394	Callee	backref		1396679	0					
ANR	1397395	Identifier	backref		1396679	0					
ANR	1397396	ArgumentList	m		1396679	1					
ANR	1397397	Argument	m		1396679	0					
ANR	1397398	Identifier	m		1396679	0					
ANR	1397399	Argument	sp + len		1396679	1					
ANR	1397400	AdditiveExpression	sp + len		1396679	0		+			
ANR	1397401	Identifier	sp		1396679	0					
ANR	1397402	Identifier	len		1396679	1					
ANR	1397403	Argument	stop		1396679	2					
ANR	1397404	Identifier	stop		1396679	0					
ANR	1397405	Argument	ss + 1		1396679	3					
ANR	1397406	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397407	Identifier	ss		1396679	0					
ANR	1397408	PrimaryExpression	1		1396679	1					
ANR	1397409	Argument	stopst		1396679	4					
ANR	1397410	Identifier	stopst		1396679	0					
ANR	1397411	Argument	lev		1396679	5					
ANR	1397412	Identifier	lev		1396679	0					
ANR	1397413	Argument	rec		1396679	6					
ANR	1397414	Identifier	rec		1396679	0					
ANR	1397415	BreakStatement	break ;	631:2:16545:16550	1396679	4	True				
ANR	1397416	Label	case OQUEST_ :	632:1:16553:16565	1396679	5	True				
ANR	1397417	Identifier	OQUEST_		1396679	0					
ANR	1397418	ExpressionStatement	"dp = backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"	633:2:16591:16640	1396679	6	True				
ANR	1397419	AssignmentExpression	"dp = backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"		1396679	0		=			
ANR	1397420	Identifier	dp		1396679	0					
ANR	1397421	CallExpression	"backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"		1396679	1					
ANR	1397422	Callee	backref		1396679	0					
ANR	1397423	Identifier	backref		1396679	0					
ANR	1397424	ArgumentList	m		1396679	1					
ANR	1397425	Argument	m		1396679	0					
ANR	1397426	Identifier	m		1396679	0					
ANR	1397427	Argument	sp		1396679	1					
ANR	1397428	Identifier	sp		1396679	0					
ANR	1397429	Argument	stop		1396679	2					
ANR	1397430	Identifier	stop		1396679	0					
ANR	1397431	Argument	ss + 1		1396679	3					
ANR	1397432	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397433	Identifier	ss		1396679	0					
ANR	1397434	PrimaryExpression	1		1396679	1					
ANR	1397435	Argument	stopst		1396679	4					
ANR	1397436	Identifier	stopst		1396679	0					
ANR	1397437	Argument	lev		1396679	5					
ANR	1397438	Identifier	lev		1396679	0					
ANR	1397439	Argument	rec		1396679	6					
ANR	1397440	Identifier	rec		1396679	0					
ANR	1397441	IfStatement	if ( dp != NULL )		1396679	7					
ANR	1397442	Condition	dp != NULL	634:6:16648:16657	1396679	0	True				
ANR	1397443	EqualityExpression	dp != NULL		1396679	0		!=			
ANR	1397444	Identifier	dp		1396679	0					
ANR	1397445	Identifier	NULL		1396679	1					
ANR	1397446	ReturnStatement	return ( dp ) ;	635:3:16663:16673	1396679	1	True				
ANR	1397447	Identifier	dp		1396679	0					
ANR	1397448	ReturnStatement	"return ( backref ( m , sp , stop , ss + OPND ( s ) + 1 , stopst , lev , rec ) ) ;"	636:2:16687:16747	1396679	8	True				
ANR	1397449	CallExpression	"backref ( m , sp , stop , ss + OPND ( s ) + 1 , stopst , lev , rec )"		1396679	0					
ANR	1397450	Callee	backref		1396679	0					
ANR	1397451	Identifier	backref		1396679	0					
ANR	1397452	ArgumentList	m		1396679	1					
ANR	1397453	Argument	m		1396679	0					
ANR	1397454	Identifier	m		1396679	0					
ANR	1397455	Argument	sp		1396679	1					
ANR	1397456	Identifier	sp		1396679	0					
ANR	1397457	Argument	stop		1396679	2					
ANR	1397458	Identifier	stop		1396679	0					
ANR	1397459	Argument	ss + OPND ( s ) + 1		1396679	3					
ANR	1397460	AdditiveExpression	ss + OPND ( s ) + 1		1396679	0		+			
ANR	1397461	Identifier	ss		1396679	0					
ANR	1397462	AdditiveExpression	OPND ( s ) + 1		1396679	1		+			
ANR	1397463	CallExpression	OPND ( s )		1396679	0					
ANR	1397464	Callee	OPND		1396679	0					
ANR	1397465	Identifier	OPND		1396679	0					
ANR	1397466	ArgumentList	s		1396679	1					
ANR	1397467	Argument	s		1396679	0					
ANR	1397468	Identifier	s		1396679	0					
ANR	1397469	PrimaryExpression	1		1396679	1					
ANR	1397470	Argument	stopst		1396679	4					
ANR	1397471	Identifier	stopst		1396679	0					
ANR	1397472	Argument	lev		1396679	5					
ANR	1397473	Identifier	lev		1396679	0					
ANR	1397474	Argument	rec		1396679	6					
ANR	1397475	Identifier	rec		1396679	0					
ANR	1397476	BreakStatement	break ;	637:2:16751:16756	1396679	9	True				
ANR	1397477	Label	case OPLUS_ :	638:1:16759:16770	1396679	10	True				
ANR	1397478	Identifier	OPLUS_		1396679	0					
ANR	1397479	IfStatement	if ( m -> lastpos && ( lev + 1 <= m -> g -> nplus ) )		1396679	11					
ANR	1397480	Condition	m -> lastpos && ( lev + 1 <= m -> g -> nplus )	639:6:16778:16815	1396679	0	True				
ANR	1397481	AndExpression	m -> lastpos && ( lev + 1 <= m -> g -> nplus )		1396679	0		&&			
ANR	1397482	PtrMemberAccess	m -> lastpos		1396679	0					
ANR	1397483	Identifier	m		1396679	0					
ANR	1397484	Identifier	lastpos		1396679	1					
ANR	1397485	RelationalExpression	lev + 1 <= m -> g -> nplus		1396679	1		<=			
ANR	1397486	AdditiveExpression	lev + 1		1396679	0		+			
ANR	1397487	Identifier	lev		1396679	0					
ANR	1397488	PrimaryExpression	1		1396679	1					
ANR	1397489	PtrMemberAccess	m -> g -> nplus		1396679	1					
ANR	1397490	PtrMemberAccess	m -> g		1396679	0					
ANR	1397491	Identifier	m		1396679	0					
ANR	1397492	Identifier	g		1396679	1					
ANR	1397493	Identifier	nplus		1396679	1					
ANR	1397494	CompoundStatement		131:46:3305:3305	1396679	1					
ANR	1397495	ExpressionStatement	m -> lastpos [ lev + 1 ] = sp	640:3:16823:16845	1396679	0	True				
ANR	1397496	AssignmentExpression	m -> lastpos [ lev + 1 ] = sp		1396679	0		=			
ANR	1397497	ArrayIndexing	m -> lastpos [ lev + 1 ]		1396679	0					
ANR	1397498	PtrMemberAccess	m -> lastpos		1396679	0					
ANR	1397499	Identifier	m		1396679	0					
ANR	1397500	Identifier	lastpos		1396679	1					
ANR	1397501	AdditiveExpression	lev + 1		1396679	1		+			
ANR	1397502	Identifier	lev		1396679	0					
ANR	1397503	PrimaryExpression	1		1396679	1					
ANR	1397504	Identifier	sp		1396679	1					
ANR	1397505	ReturnStatement	"return ( backref ( m , sp , stop , ss + 1 , stopst , lev + 1 , rec ) ) ;"	641:3:16850:16904	1396679	1	True				
ANR	1397506	CallExpression	"backref ( m , sp , stop , ss + 1 , stopst , lev + 1 , rec )"		1396679	0					
ANR	1397507	Callee	backref		1396679	0					
ANR	1397508	Identifier	backref		1396679	0					
ANR	1397509	ArgumentList	m		1396679	1					
ANR	1397510	Argument	m		1396679	0					
ANR	1397511	Identifier	m		1396679	0					
ANR	1397512	Argument	sp		1396679	1					
ANR	1397513	Identifier	sp		1396679	0					
ANR	1397514	Argument	stop		1396679	2					
ANR	1397515	Identifier	stop		1396679	0					
ANR	1397516	Argument	ss + 1		1396679	3					
ANR	1397517	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397518	Identifier	ss		1396679	0					
ANR	1397519	PrimaryExpression	1		1396679	1					
ANR	1397520	Argument	stopst		1396679	4					
ANR	1397521	Identifier	stopst		1396679	0					
ANR	1397522	Argument	lev + 1		1396679	5					
ANR	1397523	AdditiveExpression	lev + 1		1396679	0		+			
ANR	1397524	Identifier	lev		1396679	0					
ANR	1397525	PrimaryExpression	1		1396679	1					
ANR	1397526	Argument	rec		1396679	6					
ANR	1397527	Identifier	rec		1396679	0					
ANR	1397528	BreakStatement	break ;	643:2:16912:16917	1396679	12	True				
ANR	1397529	Label	case O_PLUS :	644:1:16920:16931	1396679	13	True				
ANR	1397530	Identifier	O_PLUS		1396679	0					
ANR	1397531	IfStatement	if ( sp == m -> lastpos [ lev ] )		1396679	14					
ANR	1397532	Condition	sp == m -> lastpos [ lev ]	645:6:16939:16959	1396679	0	True				
ANR	1397533	EqualityExpression	sp == m -> lastpos [ lev ]		1396679	0		==			
ANR	1397534	Identifier	sp		1396679	0					
ANR	1397535	ArrayIndexing	m -> lastpos [ lev ]		1396679	1					
ANR	1397536	PtrMemberAccess	m -> lastpos		1396679	0					
ANR	1397537	Identifier	m		1396679	0					
ANR	1397538	Identifier	lastpos		1396679	1					
ANR	1397539	Identifier	lev		1396679	1					
ANR	1397540	ReturnStatement	"return ( backref ( m , sp , stop , ss + 1 , stopst , lev - 1 , rec ) ) ;"	646:3:16994:17048	1396679	1	True				
ANR	1397541	CallExpression	"backref ( m , sp , stop , ss + 1 , stopst , lev - 1 , rec )"		1396679	0					
ANR	1397542	Callee	backref		1396679	0					
ANR	1397543	Identifier	backref		1396679	0					
ANR	1397544	ArgumentList	m		1396679	1					
ANR	1397545	Argument	m		1396679	0					
ANR	1397546	Identifier	m		1396679	0					
ANR	1397547	Argument	sp		1396679	1					
ANR	1397548	Identifier	sp		1396679	0					
ANR	1397549	Argument	stop		1396679	2					
ANR	1397550	Identifier	stop		1396679	0					
ANR	1397551	Argument	ss + 1		1396679	3					
ANR	1397552	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397553	Identifier	ss		1396679	0					
ANR	1397554	PrimaryExpression	1		1396679	1					
ANR	1397555	Argument	stopst		1396679	4					
ANR	1397556	Identifier	stopst		1396679	0					
ANR	1397557	Argument	lev - 1		1396679	5					
ANR	1397558	AdditiveExpression	lev - 1		1396679	0		-			
ANR	1397559	Identifier	lev		1396679	0					
ANR	1397560	PrimaryExpression	1		1396679	1					
ANR	1397561	Argument	rec		1396679	6					
ANR	1397562	Identifier	rec		1396679	0					
ANR	1397563	ExpressionStatement	m -> lastpos [ lev ] = sp	648:2:17077:17097	1396679	15	True				
ANR	1397564	AssignmentExpression	m -> lastpos [ lev ] = sp		1396679	0		=			
ANR	1397565	ArrayIndexing	m -> lastpos [ lev ]		1396679	0					
ANR	1397566	PtrMemberAccess	m -> lastpos		1396679	0					
ANR	1397567	Identifier	m		1396679	0					
ANR	1397568	Identifier	lastpos		1396679	1					
ANR	1397569	Identifier	lev		1396679	1					
ANR	1397570	Identifier	sp		1396679	1					
ANR	1397571	ExpressionStatement	"dp = backref ( m , sp , stop , ss - OPND ( s ) + 1 , stopst , lev , rec )"	649:2:17101:17158	1396679	16	True				
ANR	1397572	AssignmentExpression	"dp = backref ( m , sp , stop , ss - OPND ( s ) + 1 , stopst , lev , rec )"		1396679	0		=			
ANR	1397573	Identifier	dp		1396679	0					
ANR	1397574	CallExpression	"backref ( m , sp , stop , ss - OPND ( s ) + 1 , stopst , lev , rec )"		1396679	1					
ANR	1397575	Callee	backref		1396679	0					
ANR	1397576	Identifier	backref		1396679	0					
ANR	1397577	ArgumentList	m		1396679	1					
ANR	1397578	Argument	m		1396679	0					
ANR	1397579	Identifier	m		1396679	0					
ANR	1397580	Argument	sp		1396679	1					
ANR	1397581	Identifier	sp		1396679	0					
ANR	1397582	Argument	stop		1396679	2					
ANR	1397583	Identifier	stop		1396679	0					
ANR	1397584	Argument	ss - OPND ( s ) + 1		1396679	3					
ANR	1397585	AdditiveExpression	ss - OPND ( s ) + 1		1396679	0		-			
ANR	1397586	Identifier	ss		1396679	0					
ANR	1397587	AdditiveExpression	OPND ( s ) + 1		1396679	1		+			
ANR	1397588	CallExpression	OPND ( s )		1396679	0					
ANR	1397589	Callee	OPND		1396679	0					
ANR	1397590	Identifier	OPND		1396679	0					
ANR	1397591	ArgumentList	s		1396679	1					
ANR	1397592	Argument	s		1396679	0					
ANR	1397593	Identifier	s		1396679	0					
ANR	1397594	PrimaryExpression	1		1396679	1					
ANR	1397595	Argument	stopst		1396679	4					
ANR	1397596	Identifier	stopst		1396679	0					
ANR	1397597	Argument	lev		1396679	5					
ANR	1397598	Identifier	lev		1396679	0					
ANR	1397599	Argument	rec		1396679	6					
ANR	1397600	Identifier	rec		1396679	0					
ANR	1397601	IfStatement	if ( ! dp )		1396679	17					
ANR	1397602	Condition	! dp	650:6:17166:17168	1396679	0	True				
ANR	1397603	UnaryOperationExpression	! dp		1396679	0					
ANR	1397604	UnaryOperator	!		1396679	0					
ANR	1397605	Identifier	dp		1396679	1					
ANR	1397606	ReturnStatement	"return ( backref ( m , sp , stop , ss + 1 , stopst , lev - 1 , rec ) ) ;"	651:3:17174:17228	1396679	1	True				
ANR	1397607	CallExpression	"backref ( m , sp , stop , ss + 1 , stopst , lev - 1 , rec )"		1396679	0					
ANR	1397608	Callee	backref		1396679	0					
ANR	1397609	Identifier	backref		1396679	0					
ANR	1397610	ArgumentList	m		1396679	1					
ANR	1397611	Argument	m		1396679	0					
ANR	1397612	Identifier	m		1396679	0					
ANR	1397613	Argument	sp		1396679	1					
ANR	1397614	Identifier	sp		1396679	0					
ANR	1397615	Argument	stop		1396679	2					
ANR	1397616	Identifier	stop		1396679	0					
ANR	1397617	Argument	ss + 1		1396679	3					
ANR	1397618	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397619	Identifier	ss		1396679	0					
ANR	1397620	PrimaryExpression	1		1396679	1					
ANR	1397621	Argument	stopst		1396679	4					
ANR	1397622	Identifier	stopst		1396679	0					
ANR	1397623	Argument	lev - 1		1396679	5					
ANR	1397624	AdditiveExpression	lev - 1		1396679	0		-			
ANR	1397625	Identifier	lev		1396679	0					
ANR	1397626	PrimaryExpression	1		1396679	1					
ANR	1397627	Argument	rec		1396679	6					
ANR	1397628	Identifier	rec		1396679	0					
ANR	1397629	ElseStatement	else		1396679	0					
ANR	1397630	ReturnStatement	return ( dp ) ;	653:3:17240:17250	1396679	0	True				
ANR	1397631	Identifier	dp		1396679	0					
ANR	1397632	BreakStatement	break ;	654:2:17254:17259	1396679	18	True				
ANR	1397633	Label	case OCH_ :	655:1:17262:17271	1396679	19	True				
ANR	1397634	Identifier	OCH_		1396679	0					
ANR	1397635	ExpressionStatement	ssub = ss + 1	656:2:17309:17322	1396679	20	True				
ANR	1397636	AssignmentExpression	ssub = ss + 1		1396679	0		=			
ANR	1397637	Identifier	ssub		1396679	0					
ANR	1397638	AdditiveExpression	ss + 1		1396679	1		+			
ANR	1397639	Identifier	ss		1396679	0					
ANR	1397640	PrimaryExpression	1		1396679	1					
ANR	1397641	ExpressionStatement	esub = ss + OPND ( s ) - 1	657:2:17326:17349	1396679	21	True				
ANR	1397642	AssignmentExpression	esub = ss + OPND ( s ) - 1		1396679	0		=			
ANR	1397643	Identifier	esub		1396679	0					
ANR	1397644	AdditiveExpression	ss + OPND ( s ) - 1		1396679	1		+			
ANR	1397645	Identifier	ss		1396679	0					
ANR	1397646	AdditiveExpression	OPND ( s ) - 1		1396679	1		-			
ANR	1397647	CallExpression	OPND ( s )		1396679	0					
ANR	1397648	Callee	OPND		1396679	0					
ANR	1397649	Identifier	OPND		1396679	0					
ANR	1397650	ArgumentList	s		1396679	1					
ANR	1397651	Argument	s		1396679	0					
ANR	1397652	Identifier	s		1396679	0					
ANR	1397653	PrimaryExpression	1		1396679	1					
ANR	1397654	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) != OOR1 )		1396679	22					
ANR	1397655	Condition	OP ( m -> g -> strip [ esub ] ) != OOR1	658:6:17357:17385	1396679	0	True				
ANR	1397656	EqualityExpression	OP ( m -> g -> strip [ esub ] ) != OOR1		1396679	0		!=			
ANR	1397657	CallExpression	OP ( m -> g -> strip [ esub ] )		1396679	0					
ANR	1397658	Callee	OP		1396679	0					
ANR	1397659	Identifier	OP		1396679	0					
ANR	1397660	ArgumentList	m -> g -> strip [ esub ]		1396679	1					
ANR	1397661	Argument	m -> g -> strip [ esub ]		1396679	0					
ANR	1397662	ArrayIndexing	m -> g -> strip [ esub ]		1396679	0					
ANR	1397663	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397664	PtrMemberAccess	m -> g		1396679	0					
ANR	1397665	Identifier	m		1396679	0					
ANR	1397666	Identifier	g		1396679	1					
ANR	1397667	Identifier	strip		1396679	1					
ANR	1397668	Identifier	esub		1396679	1					
ANR	1397669	Identifier	OOR1		1396679	1					
ANR	1397670	CompoundStatement		150:37:3875:3875	1396679	1					
ANR	1397671	BreakStatement	break ;	659:3:17393:17398	1396679	0	True				
ANR	1397672	ForStatement	for ( ; ; )		1396679	23					
ANR	1397673	CompoundStatement		153:11:3902:3902	1396679	0					
ANR	1397674	ExpressionStatement	"dp = backref ( m , sp , stop , ssub , esub , lev , rec )"	662:3:17453:17500	1396679	0	True				
ANR	1397675	AssignmentExpression	"dp = backref ( m , sp , stop , ssub , esub , lev , rec )"		1396679	0		=			
ANR	1397676	Identifier	dp		1396679	0					
ANR	1397677	CallExpression	"backref ( m , sp , stop , ssub , esub , lev , rec )"		1396679	1					
ANR	1397678	Callee	backref		1396679	0					
ANR	1397679	Identifier	backref		1396679	0					
ANR	1397680	ArgumentList	m		1396679	1					
ANR	1397681	Argument	m		1396679	0					
ANR	1397682	Identifier	m		1396679	0					
ANR	1397683	Argument	sp		1396679	1					
ANR	1397684	Identifier	sp		1396679	0					
ANR	1397685	Argument	stop		1396679	2					
ANR	1397686	Identifier	stop		1396679	0					
ANR	1397687	Argument	ssub		1396679	3					
ANR	1397688	Identifier	ssub		1396679	0					
ANR	1397689	Argument	esub		1396679	4					
ANR	1397690	Identifier	esub		1396679	0					
ANR	1397691	Argument	lev		1396679	5					
ANR	1397692	Identifier	lev		1396679	0					
ANR	1397693	Argument	rec		1396679	6					
ANR	1397694	Identifier	rec		1396679	0					
ANR	1397695	IfStatement	if ( dp != NULL )		1396679	1					
ANR	1397696	Condition	dp != NULL	663:7:17509:17518	1396679	0	True				
ANR	1397697	EqualityExpression	dp != NULL		1396679	0		!=			
ANR	1397698	Identifier	dp		1396679	0					
ANR	1397699	Identifier	NULL		1396679	1					
ANR	1397700	ReturnStatement	return ( dp ) ;	664:4:17525:17535	1396679	1	True				
ANR	1397701	Identifier	dp		1396679	0					
ANR	1397702	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) == O_CH )		1396679	2					
ANR	1397703	Condition	OP ( m -> g -> strip [ esub ] ) == O_CH	666:7:17583:17611	1396679	0	True				
ANR	1397704	EqualityExpression	OP ( m -> g -> strip [ esub ] ) == O_CH		1396679	0		==			
ANR	1397705	CallExpression	OP ( m -> g -> strip [ esub ] )		1396679	0					
ANR	1397706	Callee	OP		1396679	0					
ANR	1397707	Identifier	OP		1396679	0					
ANR	1397708	ArgumentList	m -> g -> strip [ esub ]		1396679	1					
ANR	1397709	Argument	m -> g -> strip [ esub ]		1396679	0					
ANR	1397710	ArrayIndexing	m -> g -> strip [ esub ]		1396679	0					
ANR	1397711	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397712	PtrMemberAccess	m -> g		1396679	0					
ANR	1397713	Identifier	m		1396679	0					
ANR	1397714	Identifier	g		1396679	1					
ANR	1397715	Identifier	strip		1396679	1					
ANR	1397716	Identifier	esub		1396679	1					
ANR	1397717	Identifier	O_CH		1396679	1					
ANR	1397718	ReturnStatement	return ( NULL ) ;	667:4:17618:17630	1396679	1	True				
ANR	1397719	Identifier	NULL		1396679	0					
ANR	1397720	ExpressionStatement	esub ++	668:3:17655:17661	1396679	3	True				
ANR	1397721	PostIncDecOperationExpression	esub ++		1396679	0					
ANR	1397722	Identifier	esub		1396679	0					
ANR	1397723	IncDec	++		1396679	1					
ANR	1397724	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) != OOR2 )		1396679	4					
ANR	1397725	Condition	OP ( m -> g -> strip [ esub ] ) != OOR2	669:7:17670:17698	1396679	0	True				
ANR	1397726	EqualityExpression	OP ( m -> g -> strip [ esub ] ) != OOR2		1396679	0		!=			
ANR	1397727	CallExpression	OP ( m -> g -> strip [ esub ] )		1396679	0					
ANR	1397728	Callee	OP		1396679	0					
ANR	1397729	Identifier	OP		1396679	0					
ANR	1397730	ArgumentList	m -> g -> strip [ esub ]		1396679	1					
ANR	1397731	Argument	m -> g -> strip [ esub ]		1396679	0					
ANR	1397732	ArrayIndexing	m -> g -> strip [ esub ]		1396679	0					
ANR	1397733	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397734	PtrMemberAccess	m -> g		1396679	0					
ANR	1397735	Identifier	m		1396679	0					
ANR	1397736	Identifier	g		1396679	1					
ANR	1397737	Identifier	strip		1396679	1					
ANR	1397738	Identifier	esub		1396679	1					
ANR	1397739	Identifier	OOR2		1396679	1					
ANR	1397740	CompoundStatement		161:38:4188:4188	1396679	1					
ANR	1397741	BreakStatement	break ;	670:4:17707:17712	1396679	0	True				
ANR	1397742	ExpressionStatement	ssub = esub + 1	672:3:17722:17737	1396679	5	True				
ANR	1397743	AssignmentExpression	ssub = esub + 1		1396679	0		=			
ANR	1397744	Identifier	ssub		1396679	0					
ANR	1397745	AdditiveExpression	esub + 1		1396679	1		+			
ANR	1397746	Identifier	esub		1396679	0					
ANR	1397747	PrimaryExpression	1		1396679	1					
ANR	1397748	ExpressionStatement	esub += OPND ( m -> g -> strip [ esub ] )	673:3:17742:17773	1396679	6	True				
ANR	1397749	AssignmentExpression	esub += OPND ( m -> g -> strip [ esub ] )		1396679	0		+=			
ANR	1397750	Identifier	esub		1396679	0					
ANR	1397751	CallExpression	OPND ( m -> g -> strip [ esub ] )		1396679	1					
ANR	1397752	Callee	OPND		1396679	0					
ANR	1397753	Identifier	OPND		1396679	0					
ANR	1397754	ArgumentList	m -> g -> strip [ esub ]		1396679	1					
ANR	1397755	Argument	m -> g -> strip [ esub ]		1396679	0					
ANR	1397756	ArrayIndexing	m -> g -> strip [ esub ]		1396679	0					
ANR	1397757	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397758	PtrMemberAccess	m -> g		1396679	0					
ANR	1397759	Identifier	m		1396679	0					
ANR	1397760	Identifier	g		1396679	1					
ANR	1397761	Identifier	strip		1396679	1					
ANR	1397762	Identifier	esub		1396679	1					
ANR	1397763	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) == OOR2 )		1396679	7					
ANR	1397764	Condition	OP ( m -> g -> strip [ esub ] ) == OOR2	674:7:17782:17810	1396679	0	True				
ANR	1397765	EqualityExpression	OP ( m -> g -> strip [ esub ] ) == OOR2		1396679	0		==			
ANR	1397766	CallExpression	OP ( m -> g -> strip [ esub ] )		1396679	0					
ANR	1397767	Callee	OP		1396679	0					
ANR	1397768	Identifier	OP		1396679	0					
ANR	1397769	ArgumentList	m -> g -> strip [ esub ]		1396679	1					
ANR	1397770	Argument	m -> g -> strip [ esub ]		1396679	0					
ANR	1397771	ArrayIndexing	m -> g -> strip [ esub ]		1396679	0					
ANR	1397772	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397773	PtrMemberAccess	m -> g		1396679	0					
ANR	1397774	Identifier	m		1396679	0					
ANR	1397775	Identifier	g		1396679	1					
ANR	1397776	Identifier	strip		1396679	1					
ANR	1397777	Identifier	esub		1396679	1					
ANR	1397778	Identifier	OOR2		1396679	1					
ANR	1397779	ExpressionStatement	esub --	675:4:17817:17823	1396679	1	True				
ANR	1397780	PostIncDecOperationExpression	esub --		1396679	0					
ANR	1397781	Identifier	esub		1396679	0					
ANR	1397782	IncDec	--		1396679	1					
ANR	1397783	ElseStatement	else		1396679	0					
ANR	1397784	IfStatement	if ( OP ( m -> g -> strip [ esub ] ) != O_CH )		1396679	0					
ANR	1397785	Condition	OP ( m -> g -> strip [ esub ] ) != O_CH	677:8:17841:17869	1396679	0	True				
ANR	1397786	EqualityExpression	OP ( m -> g -> strip [ esub ] ) != O_CH		1396679	0		!=			
ANR	1397787	CallExpression	OP ( m -> g -> strip [ esub ] )		1396679	0					
ANR	1397788	Callee	OP		1396679	0					
ANR	1397789	Identifier	OP		1396679	0					
ANR	1397790	ArgumentList	m -> g -> strip [ esub ]		1396679	1					
ANR	1397791	Argument	m -> g -> strip [ esub ]		1396679	0					
ANR	1397792	ArrayIndexing	m -> g -> strip [ esub ]		1396679	0					
ANR	1397793	PtrMemberAccess	m -> g -> strip		1396679	0					
ANR	1397794	PtrMemberAccess	m -> g		1396679	0					
ANR	1397795	Identifier	m		1396679	0					
ANR	1397796	Identifier	g		1396679	1					
ANR	1397797	Identifier	strip		1396679	1					
ANR	1397798	Identifier	esub		1396679	1					
ANR	1397799	Identifier	O_CH		1396679	1					
ANR	1397800	CompoundStatement		169:39:4359:4359	1396679	1					
ANR	1397801	BreakStatement	break ;	678:5:17879:17884	1396679	0	True				
ANR	1397802	BreakStatement	break ;	681:2:17898:17903	1396679	24	True				
ANR	1397803	Label	case OLPAREN :	682:1:17906:17918	1396679	25	True				
ANR	1397804	Identifier	OLPAREN		1396679	0					
ANR	1397805	ExpressionStatement	i = OPND ( s )	683:2:17964:17975	1396679	26	True				
ANR	1397806	AssignmentExpression	i = OPND ( s )		1396679	0		=			
ANR	1397807	Identifier	i		1396679	0					
ANR	1397808	CallExpression	OPND ( s )		1396679	1					
ANR	1397809	Callee	OPND		1396679	0					
ANR	1397810	Identifier	OPND		1396679	0					
ANR	1397811	ArgumentList	s		1396679	1					
ANR	1397812	Argument	s		1396679	0					
ANR	1397813	Identifier	s		1396679	0					
ANR	1397814	IfStatement	if ( i > 0 && i <= m -> g -> nsub )		1396679	27					
ANR	1397815	Condition	i > 0 && i <= m -> g -> nsub	684:6:17983:18006	1396679	0	True				
ANR	1397816	AndExpression	i > 0 && i <= m -> g -> nsub		1396679	0		&&			
ANR	1397817	RelationalExpression	i > 0		1396679	0		>			
ANR	1397818	Identifier	i		1396679	0					
ANR	1397819	PrimaryExpression	0		1396679	1					
ANR	1397820	RelationalExpression	i <= m -> g -> nsub		1396679	1		<=			
ANR	1397821	Identifier	i		1396679	0					
ANR	1397822	PtrMemberAccess	m -> g -> nsub		1396679	1					
ANR	1397823	PtrMemberAccess	m -> g		1396679	0					
ANR	1397824	Identifier	m		1396679	0					
ANR	1397825	Identifier	g		1396679	1					
ANR	1397826	Identifier	nsub		1396679	1					
ANR	1397827	CompoundStatement		176:32:4496:4496	1396679	1					
ANR	1397828	ExpressionStatement	offsave = m -> pmatch [ i ] . rm_so	685:3:18014:18042	1396679	0	True				
ANR	1397829	AssignmentExpression	offsave = m -> pmatch [ i ] . rm_so		1396679	0		=			
ANR	1397830	Identifier	offsave		1396679	0					
ANR	1397831	MemberAccess	m -> pmatch [ i ] . rm_so		1396679	1					
ANR	1397832	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397833	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397834	Identifier	m		1396679	0					
ANR	1397835	Identifier	pmatch		1396679	1					
ANR	1397836	Identifier	i		1396679	1					
ANR	1397837	Identifier	rm_so		1396679	1					
ANR	1397838	ExpressionStatement	m -> pmatch [ i ] . rm_so = sp - m -> offp	686:3:18047:18080	1396679	1	True				
ANR	1397839	AssignmentExpression	m -> pmatch [ i ] . rm_so = sp - m -> offp		1396679	0		=			
ANR	1397840	MemberAccess	m -> pmatch [ i ] . rm_so		1396679	0					
ANR	1397841	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397842	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397843	Identifier	m		1396679	0					
ANR	1397844	Identifier	pmatch		1396679	1					
ANR	1397845	Identifier	i		1396679	1					
ANR	1397846	Identifier	rm_so		1396679	1					
ANR	1397847	AdditiveExpression	sp - m -> offp		1396679	1		-			
ANR	1397848	Identifier	sp		1396679	0					
ANR	1397849	PtrMemberAccess	m -> offp		1396679	1					
ANR	1397850	Identifier	m		1396679	0					
ANR	1397851	Identifier	offp		1396679	1					
ANR	1397852	ExpressionStatement	"dp = backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"	687:3:18085:18134	1396679	2	True				
ANR	1397853	AssignmentExpression	"dp = backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"		1396679	0		=			
ANR	1397854	Identifier	dp		1396679	0					
ANR	1397855	CallExpression	"backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"		1396679	1					
ANR	1397856	Callee	backref		1396679	0					
ANR	1397857	Identifier	backref		1396679	0					
ANR	1397858	ArgumentList	m		1396679	1					
ANR	1397859	Argument	m		1396679	0					
ANR	1397860	Identifier	m		1396679	0					
ANR	1397861	Argument	sp		1396679	1					
ANR	1397862	Identifier	sp		1396679	0					
ANR	1397863	Argument	stop		1396679	2					
ANR	1397864	Identifier	stop		1396679	0					
ANR	1397865	Argument	ss + 1		1396679	3					
ANR	1397866	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397867	Identifier	ss		1396679	0					
ANR	1397868	PrimaryExpression	1		1396679	1					
ANR	1397869	Argument	stopst		1396679	4					
ANR	1397870	Identifier	stopst		1396679	0					
ANR	1397871	Argument	lev		1396679	5					
ANR	1397872	Identifier	lev		1396679	0					
ANR	1397873	Argument	rec		1396679	6					
ANR	1397874	Identifier	rec		1396679	0					
ANR	1397875	IfStatement	if ( dp != NULL )		1396679	3					
ANR	1397876	Condition	dp != NULL	688:7:18143:18152	1396679	0	True				
ANR	1397877	EqualityExpression	dp != NULL		1396679	0		!=			
ANR	1397878	Identifier	dp		1396679	0					
ANR	1397879	Identifier	NULL		1396679	1					
ANR	1397880	ReturnStatement	return ( dp ) ;	689:4:18159:18169	1396679	1	True				
ANR	1397881	Identifier	dp		1396679	0					
ANR	1397882	ExpressionStatement	m -> pmatch [ i ] . rm_so = offsave	690:3:18174:18202	1396679	4	True				
ANR	1397883	AssignmentExpression	m -> pmatch [ i ] . rm_so = offsave		1396679	0		=			
ANR	1397884	MemberAccess	m -> pmatch [ i ] . rm_so		1396679	0					
ANR	1397885	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397886	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397887	Identifier	m		1396679	0					
ANR	1397888	Identifier	pmatch		1396679	1					
ANR	1397889	Identifier	i		1396679	1					
ANR	1397890	Identifier	rm_so		1396679	1					
ANR	1397891	Identifier	offsave		1396679	1					
ANR	1397892	ReturnStatement	return ( NULL ) ;	691:3:18207:18219	1396679	5	True				
ANR	1397893	Identifier	NULL		1396679	0					
ANR	1397894	BreakStatement	break ;	693:2:18227:18232	1396679	28	True				
ANR	1397895	Label	case ORPAREN :	694:1:18235:18247	1396679	29	True				
ANR	1397896	Identifier	ORPAREN		1396679	0					
ANR	1397897	ExpressionStatement	i = OPND ( s )	695:2:18293:18304	1396679	30	True				
ANR	1397898	AssignmentExpression	i = OPND ( s )		1396679	0		=			
ANR	1397899	Identifier	i		1396679	0					
ANR	1397900	CallExpression	OPND ( s )		1396679	1					
ANR	1397901	Callee	OPND		1396679	0					
ANR	1397902	Identifier	OPND		1396679	0					
ANR	1397903	ArgumentList	s		1396679	1					
ANR	1397904	Argument	s		1396679	0					
ANR	1397905	Identifier	s		1396679	0					
ANR	1397906	IfStatement	if ( i > 0 && i <= m -> g -> nsub )		1396679	31					
ANR	1397907	Condition	i > 0 && i <= m -> g -> nsub	696:6:18312:18335	1396679	0	True				
ANR	1397908	AndExpression	i > 0 && i <= m -> g -> nsub		1396679	0		&&			
ANR	1397909	RelationalExpression	i > 0		1396679	0		>			
ANR	1397910	Identifier	i		1396679	0					
ANR	1397911	PrimaryExpression	0		1396679	1					
ANR	1397912	RelationalExpression	i <= m -> g -> nsub		1396679	1		<=			
ANR	1397913	Identifier	i		1396679	0					
ANR	1397914	PtrMemberAccess	m -> g -> nsub		1396679	1					
ANR	1397915	PtrMemberAccess	m -> g		1396679	0					
ANR	1397916	Identifier	m		1396679	0					
ANR	1397917	Identifier	g		1396679	1					
ANR	1397918	Identifier	nsub		1396679	1					
ANR	1397919	CompoundStatement		188:32:4825:4825	1396679	1					
ANR	1397920	ExpressionStatement	offsave = m -> pmatch [ i ] . rm_eo	697:3:18343:18371	1396679	0	True				
ANR	1397921	AssignmentExpression	offsave = m -> pmatch [ i ] . rm_eo		1396679	0		=			
ANR	1397922	Identifier	offsave		1396679	0					
ANR	1397923	MemberAccess	m -> pmatch [ i ] . rm_eo		1396679	1					
ANR	1397924	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397925	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397926	Identifier	m		1396679	0					
ANR	1397927	Identifier	pmatch		1396679	1					
ANR	1397928	Identifier	i		1396679	1					
ANR	1397929	Identifier	rm_eo		1396679	1					
ANR	1397930	ExpressionStatement	m -> pmatch [ i ] . rm_eo = sp - m -> offp	698:3:18376:18409	1396679	1	True				
ANR	1397931	AssignmentExpression	m -> pmatch [ i ] . rm_eo = sp - m -> offp		1396679	0		=			
ANR	1397932	MemberAccess	m -> pmatch [ i ] . rm_eo		1396679	0					
ANR	1397933	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397934	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397935	Identifier	m		1396679	0					
ANR	1397936	Identifier	pmatch		1396679	1					
ANR	1397937	Identifier	i		1396679	1					
ANR	1397938	Identifier	rm_eo		1396679	1					
ANR	1397939	AdditiveExpression	sp - m -> offp		1396679	1		-			
ANR	1397940	Identifier	sp		1396679	0					
ANR	1397941	PtrMemberAccess	m -> offp		1396679	1					
ANR	1397942	Identifier	m		1396679	0					
ANR	1397943	Identifier	offp		1396679	1					
ANR	1397944	ExpressionStatement	"dp = backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"	699:3:18414:18463	1396679	2	True				
ANR	1397945	AssignmentExpression	"dp = backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"		1396679	0		=			
ANR	1397946	Identifier	dp		1396679	0					
ANR	1397947	CallExpression	"backref ( m , sp , stop , ss + 1 , stopst , lev , rec )"		1396679	1					
ANR	1397948	Callee	backref		1396679	0					
ANR	1397949	Identifier	backref		1396679	0					
ANR	1397950	ArgumentList	m		1396679	1					
ANR	1397951	Argument	m		1396679	0					
ANR	1397952	Identifier	m		1396679	0					
ANR	1397953	Argument	sp		1396679	1					
ANR	1397954	Identifier	sp		1396679	0					
ANR	1397955	Argument	stop		1396679	2					
ANR	1397956	Identifier	stop		1396679	0					
ANR	1397957	Argument	ss + 1		1396679	3					
ANR	1397958	AdditiveExpression	ss + 1		1396679	0		+			
ANR	1397959	Identifier	ss		1396679	0					
ANR	1397960	PrimaryExpression	1		1396679	1					
ANR	1397961	Argument	stopst		1396679	4					
ANR	1397962	Identifier	stopst		1396679	0					
ANR	1397963	Argument	lev		1396679	5					
ANR	1397964	Identifier	lev		1396679	0					
ANR	1397965	Argument	rec		1396679	6					
ANR	1397966	Identifier	rec		1396679	0					
ANR	1397967	IfStatement	if ( dp != NULL )		1396679	3					
ANR	1397968	Condition	dp != NULL	700:7:18472:18481	1396679	0	True				
ANR	1397969	EqualityExpression	dp != NULL		1396679	0		!=			
ANR	1397970	Identifier	dp		1396679	0					
ANR	1397971	Identifier	NULL		1396679	1					
ANR	1397972	ReturnStatement	return ( dp ) ;	701:4:18488:18498	1396679	1	True				
ANR	1397973	Identifier	dp		1396679	0					
ANR	1397974	ExpressionStatement	m -> pmatch [ i ] . rm_eo = offsave	702:3:18503:18531	1396679	4	True				
ANR	1397975	AssignmentExpression	m -> pmatch [ i ] . rm_eo = offsave		1396679	0		=			
ANR	1397976	MemberAccess	m -> pmatch [ i ] . rm_eo		1396679	0					
ANR	1397977	ArrayIndexing	m -> pmatch [ i ]		1396679	0					
ANR	1397978	PtrMemberAccess	m -> pmatch		1396679	0					
ANR	1397979	Identifier	m		1396679	0					
ANR	1397980	Identifier	pmatch		1396679	1					
ANR	1397981	Identifier	i		1396679	1					
ANR	1397982	Identifier	rm_eo		1396679	1					
ANR	1397983	Identifier	offsave		1396679	1					
ANR	1397984	ReturnStatement	return ( NULL ) ;	703:3:18536:18548	1396679	5	True				
ANR	1397985	Identifier	NULL		1396679	0					
ANR	1397986	BreakStatement	break ;	705:2:18556:18561	1396679	32	True				
ANR	1397987	Label	default :	706:1:18564:18571	1396679	33	True				
ANR	1397988	Identifier	default		1396679	0					
ANR	1397989	BreakStatement	break ;	707:2:18588:18593	1396679	34	True				
ANR	1397990	ReturnStatement	return NULL ;	711:1:18618:18629	1396679	21	True				
ANR	1397991	Identifier	NULL		1396679	0					
ANR	1397992	ReturnType	static char *		1396679	1					
ANR	1397993	Identifier	backref		1396679	2					
ANR	1397994	ParameterList	"struct match * m , char * start , char * stop , sopno startst , sopno stopst , sopno lev , int rec"		1396679	3					
ANR	1397995	Parameter	struct match * m	507:8:13390:13404	1396679	0	True				
ANR	1397996	ParameterType	struct match *		1396679	0					
ANR	1397997	Identifier	m		1396679	1					
ANR	1397998	Parameter	char * start	507:25:13407:13417	1396679	1	True				
ANR	1397999	ParameterType	char *		1396679	0					
ANR	1398000	Identifier	start		1396679	1					
ANR	1398001	Parameter	char * stop	507:38:13420:13429	1396679	2	True				
ANR	1398002	ParameterType	char *		1396679	0					
ANR	1398003	Identifier	stop		1396679	1					
ANR	1398004	Parameter	sopno startst	507:50:13432:13444	1396679	3	True				
ANR	1398005	ParameterType	sopno		1396679	0					
ANR	1398006	Identifier	startst		1396679	1					
ANR	1398007	Parameter	sopno stopst	507:65:13447:13458	1396679	4	True				
ANR	1398008	ParameterType	sopno		1396679	0					
ANR	1398009	Identifier	stopst		1396679	1					
ANR	1398010	Parameter	sopno lev	508:4:13465:13473	1396679	5	True				
ANR	1398011	ParameterType	sopno		1396679	0					
ANR	1398012	Identifier	lev		1396679	1					
ANR	1398013	Parameter	int rec	508:15:13476:13482	1396679	6	True				
ANR	1398014	ParameterType	int		1396679	0					
ANR	1398015	Identifier	rec		1396679	1					
ANR	1398016	CFGEntryNode	ENTRY		1396679		True				
ANR	1398017	CFGExitNode	EXIT		1396679		True				
ANR	1398018	InfiniteForNode	true		1396679		True				
ANR	1398019	Symbol	* sp		1396679						
ANR	1398020	Symbol	backref		1396679						
ANR	1398021	Symbol	m -> pmatch		1396679						
ANR	1398022	Symbol	* ss		1396679						
ANR	1398023	Symbol	R_REGEX_NOTBOL		1396679						
ANR	1398024	Symbol	m -> g -> nsub		1396679						
ANR	1398025	Symbol	* m -> lastpos		1396679						
ANR	1398026	Symbol	dp		1396679						
ANR	1398027	Symbol	rec		1396679						
ANR	1398028	Symbol	ssp		1396679						
ANR	1398029	Symbol	m -> eflags		1396679						
ANR	1398030	Symbol	* m -> g -> strip		1396679						
ANR	1398031	Symbol	memcmp		1396679						
ANR	1398032	Symbol	esub		1396679						
ANR	1398033	Symbol	len		1396679						
ANR	1398034	Symbol	lev		1396679						
ANR	1398035	Symbol	m -> pmatch [ i ] . rm_eo		1396679						
ANR	1398036	Symbol	NULL		1396679						
ANR	1398037	Symbol	m -> beginp		1396679						
ANR	1398038	Symbol	OOR2		1396679						
ANR	1398039	Symbol	startst		1396679						
ANR	1398040	Symbol	m -> lastpos		1396679						
ANR	1398041	Symbol	stop		1396679						
ANR	1398042	Symbol	* * * m		1396679						
ANR	1398043	Symbol	stopst		1396679						
ANR	1398044	Symbol	m -> offp		1396679						
ANR	1398045	Symbol	m -> g -> strip		1396679						
ANR	1398046	Symbol	R_REGEX_NEWLINE		1396679						
ANR	1398047	Symbol	m -> g -> cflags		1396679						
ANR	1398048	Symbol	R_REGEX_NOTEOL		1396679						
ANR	1398049	Symbol	* lev		1396679						
ANR	1398050	Symbol	m -> g -> sets		1396679						
ANR	1398051	Symbol	* m -> g		1396679						
ANR	1398052	Symbol	m -> endp		1396679						
ANR	1398053	Symbol	m -> pmatch [ i ] . rm_so		1396679						
ANR	1398054	Symbol	m -> g		1396679						
ANR	1398055	Symbol	CHIN		1396679						
ANR	1398056	Symbol	m -> g -> nplus		1396679						
ANR	1398057	Symbol	offsave		1396679						
ANR	1398058	Symbol	OOR1		1396679						
ANR	1398059	Symbol	ssub		1396679						
ANR	1398060	Symbol	hard		1396679						
ANR	1398061	Symbol	* * m -> g		1396679						
ANR	1398062	Symbol	sp		1396679						
ANR	1398063	Symbol	* m -> pmatch		1396679						
ANR	1398064	Symbol	* * m		1396679						
ANR	1398065	Symbol	ss		1396679						
ANR	1398066	Symbol	OP		1396679						
ANR	1398067	Symbol	* sp ++		1396679						
ANR	1398068	Symbol	start		1396679						
ANR	1398069	Symbol	i		1396679						
ANR	1398070	Symbol	m		1396679						
ANR	1398071	Symbol	* esub		1396679						
ANR	1398072	Symbol	cs		1396679						
ANR	1398073	Symbol	O_CH		1396679						
ANR	1398074	Symbol	MAX_RECURSION		1396679						
ANR	1398075	Symbol	OPND		1396679						
ANR	1398076	Symbol	s		1396679						
ANR	1398077	Symbol	* i		1396679						
ANR	1398078	Symbol	SOP		1396679						
ANR	1398079	Symbol	* m		1396679						
ANR	1398080	Symbol	ISWORD		1396679						
ANR	1398081	Symbol	* ( sp - 1 )		1396679						
ANR	1398082	Symbol	O_BACK		1396679						
ANR	1398083	Function	fast	717:0:18688:20699							
ANR	1398084	FunctionDef	"fast (struct match * m , char * start , char * stop , sopno startst , sopno stopst)"		1398083	0					
ANR	1398085	CompoundStatement		719:0:18823:20699	1398083	0					
ANR	1398086	IdentifierDeclStatement	states st = m -> st ;	720:1:18826:18843	1398083	0	True				
ANR	1398087	IdentifierDecl	st = m -> st		1398083	0					
ANR	1398088	IdentifierDeclType	states		1398083	0					
ANR	1398089	Identifier	st		1398083	1					
ANR	1398090	AssignmentExpression	st = m -> st		1398083	2		=			
ANR	1398091	Identifier	st		1398083	0					
ANR	1398092	PtrMemberAccess	m -> st		1398083	1					
ANR	1398093	Identifier	m		1398083	0					
ANR	1398094	Identifier	st		1398083	1					
ANR	1398095	IdentifierDeclStatement	states fresh = m -> fresh ;	721:1:18846:18869	1398083	1	True				
ANR	1398096	IdentifierDecl	fresh = m -> fresh		1398083	0					
ANR	1398097	IdentifierDeclType	states		1398083	0					
ANR	1398098	Identifier	fresh		1398083	1					
ANR	1398099	AssignmentExpression	fresh = m -> fresh		1398083	2		=			
ANR	1398100	Identifier	fresh		1398083	0					
ANR	1398101	PtrMemberAccess	m -> fresh		1398083	1					
ANR	1398102	Identifier	m		1398083	0					
ANR	1398103	Identifier	fresh		1398083	1					
ANR	1398104	IdentifierDeclStatement	states tmp = m -> tmp ;	722:1:18872:18891	1398083	2	True				
ANR	1398105	IdentifierDecl	tmp = m -> tmp		1398083	0					
ANR	1398106	IdentifierDeclType	states		1398083	0					
ANR	1398107	Identifier	tmp		1398083	1					
ANR	1398108	AssignmentExpression	tmp = m -> tmp		1398083	2		=			
ANR	1398109	Identifier	tmp		1398083	0					
ANR	1398110	PtrMemberAccess	m -> tmp		1398083	1					
ANR	1398111	Identifier	m		1398083	0					
ANR	1398112	Identifier	tmp		1398083	1					
ANR	1398113	IdentifierDeclStatement	char * p = start ;	723:1:18894:18909	1398083	3	True				
ANR	1398114	IdentifierDecl	* p = start		1398083	0					
ANR	1398115	IdentifierDeclType	char *		1398083	0					
ANR	1398116	Identifier	p		1398083	1					
ANR	1398117	AssignmentExpression	* p = start		1398083	2		=			
ANR	1398118	Identifier	start		1398083	0					
ANR	1398119	Identifier	start		1398083	1					
ANR	1398120	IdentifierDeclStatement	int c = ( start == m -> beginp ) ? OUT : * ( start - 1 ) ;	724:1:18912:18959	1398083	4	True				
ANR	1398121	IdentifierDecl	c = ( start == m -> beginp ) ? OUT : * ( start - 1 )		1398083	0					
ANR	1398122	IdentifierDeclType	int		1398083	0					
ANR	1398123	Identifier	c		1398083	1					
ANR	1398124	AssignmentExpression	c = ( start == m -> beginp ) ? OUT : * ( start - 1 )		1398083	2		=			
ANR	1398125	Identifier	c		1398083	0					
ANR	1398126	ConditionalExpression	( start == m -> beginp ) ? OUT : * ( start - 1 )		1398083	1					
ANR	1398127	Condition	start == m -> beginp		1398083	0					
ANR	1398128	EqualityExpression	start == m -> beginp		1398083	0		==			
ANR	1398129	Identifier	start		1398083	0					
ANR	1398130	PtrMemberAccess	m -> beginp		1398083	1					
ANR	1398131	Identifier	m		1398083	0					
ANR	1398132	Identifier	beginp		1398083	1					
ANR	1398133	Identifier	OUT		1398083	1					
ANR	1398134	UnaryOperationExpression	* ( start - 1 )		1398083	2					
ANR	1398135	UnaryOperator	*		1398083	0					
ANR	1398136	AdditiveExpression	start - 1		1398083	1		-			
ANR	1398137	Identifier	start		1398083	0					
ANR	1398138	PrimaryExpression	1		1398083	1					
ANR	1398139	IdentifierDeclStatement	int lastc ;	725:1:18962:18971	1398083	5	True				
ANR	1398140	IdentifierDecl	lastc		1398083	0					
ANR	1398141	IdentifierDeclType	int		1398083	0					
ANR	1398142	Identifier	lastc		1398083	1					
ANR	1398143	IdentifierDeclStatement	int flagch ;	726:1:18991:19001	1398083	6	True				
ANR	1398144	IdentifierDecl	flagch		1398083	0					
ANR	1398145	IdentifierDeclType	int		1398083	0					
ANR	1398146	Identifier	flagch		1398083	1					
ANR	1398147	IdentifierDeclStatement	int i ;	727:1:19004:19009	1398083	7	True				
ANR	1398148	IdentifierDecl	i		1398083	0					
ANR	1398149	IdentifierDeclType	int		1398083	0					
ANR	1398150	Identifier	i		1398083	1					
ANR	1398151	IdentifierDeclStatement	char * coldp ;	728:1:19012:19023	1398083	8	True				
ANR	1398152	IdentifierDecl	* coldp		1398083	0					
ANR	1398153	IdentifierDeclType	char *		1398083	0					
ANR	1398154	Identifier	coldp		1398083	1					
ANR	1398155	ExpressionStatement	CLEAR ( st )	730:1:19074:19083	1398083	9	True				
ANR	1398156	CallExpression	CLEAR ( st )		1398083	0					
ANR	1398157	Callee	CLEAR		1398083	0					
ANR	1398158	Identifier	CLEAR		1398083	0					
ANR	1398159	ArgumentList	st		1398083	1					
ANR	1398160	Argument	st		1398083	0					
ANR	1398161	Identifier	st		1398083	0					
ANR	1398162	ExpressionStatement	"SET1 ( st , startst )"	731:1:19086:19103	1398083	10	True				
ANR	1398163	CallExpression	"SET1 ( st , startst )"		1398083	0					
ANR	1398164	Callee	SET1		1398083	0					
ANR	1398165	Identifier	SET1		1398083	0					
ANR	1398166	ArgumentList	st		1398083	1					
ANR	1398167	Argument	st		1398083	0					
ANR	1398168	Identifier	st		1398083	0					
ANR	1398169	Argument	startst		1398083	1					
ANR	1398170	Identifier	startst		1398083	0					
ANR	1398171	ExpressionStatement	"st = step ( m -> g , startst , stopst , st , NOTHING , st )"	732:1:19106:19155	1398083	11	True				
ANR	1398172	AssignmentExpression	"st = step ( m -> g , startst , stopst , st , NOTHING , st )"		1398083	0		=			
ANR	1398173	Identifier	st		1398083	0					
ANR	1398174	CallExpression	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398083	1					
ANR	1398175	Callee	step		1398083	0					
ANR	1398176	Identifier	step		1398083	0					
ANR	1398177	ArgumentList	m -> g		1398083	1					
ANR	1398178	Argument	m -> g		1398083	0					
ANR	1398179	PtrMemberAccess	m -> g		1398083	0					
ANR	1398180	Identifier	m		1398083	0					
ANR	1398181	Identifier	g		1398083	1					
ANR	1398182	Argument	startst		1398083	1					
ANR	1398183	Identifier	startst		1398083	0					
ANR	1398184	Argument	stopst		1398083	2					
ANR	1398185	Identifier	stopst		1398083	0					
ANR	1398186	Argument	st		1398083	3					
ANR	1398187	Identifier	st		1398083	0					
ANR	1398188	Argument	NOTHING		1398083	4					
ANR	1398189	Identifier	NOTHING		1398083	0					
ANR	1398190	Argument	st		1398083	5					
ANR	1398191	Identifier	st		1398083	0					
ANR	1398192	ExpressionStatement	"ASSIGN ( fresh , st )"	733:1:19158:19175	1398083	12	True				
ANR	1398193	CallExpression	"ASSIGN ( fresh , st )"		1398083	0					
ANR	1398194	Callee	ASSIGN		1398083	0					
ANR	1398195	Identifier	ASSIGN		1398083	0					
ANR	1398196	ArgumentList	fresh		1398083	1					
ANR	1398197	Argument	fresh		1398083	0					
ANR	1398198	Identifier	fresh		1398083	0					
ANR	1398199	Argument	st		1398083	1					
ANR	1398200	Identifier	st		1398083	0					
ANR	1398201	ExpressionStatement	"SP ( ""start"" , st , * p )"	734:1:19178:19197	1398083	13	True				
ANR	1398202	CallExpression	"SP ( ""start"" , st , * p )"		1398083	0					
ANR	1398203	Callee	SP		1398083	0					
ANR	1398204	Identifier	SP		1398083	0					
ANR	1398205	ArgumentList	"""start"""		1398083	1					
ANR	1398206	Argument	"""start"""		1398083	0					
ANR	1398207	PrimaryExpression	"""start"""		1398083	0					
ANR	1398208	Argument	st		1398083	1					
ANR	1398209	Identifier	st		1398083	0					
ANR	1398210	Argument	* p		1398083	2					
ANR	1398211	UnaryOperationExpression	* p		1398083	0					
ANR	1398212	UnaryOperator	*		1398083	0					
ANR	1398213	Identifier	p		1398083	1					
ANR	1398214	ExpressionStatement	coldp = NULL	735:1:19200:19212	1398083	14	True				
ANR	1398215	AssignmentExpression	coldp = NULL		1398083	0		=			
ANR	1398216	Identifier	coldp		1398083	0					
ANR	1398217	Identifier	NULL		1398083	1					
ANR	1398218	ForStatement	for ( ; ; )		1398083	15					
ANR	1398219	CompoundStatement		18:10:400:400	1398083	0					
ANR	1398220	ExpressionStatement	lastc = c	738:2:19251:19260	1398083	0	True				
ANR	1398221	AssignmentExpression	lastc = c		1398083	0		=			
ANR	1398222	Identifier	lastc		1398083	0					
ANR	1398223	Identifier	c		1398083	1					
ANR	1398224	ExpressionStatement	c = ( p == m -> endp ) ? OUT : * p	739:2:19264:19293	1398083	1	True				
ANR	1398225	AssignmentExpression	c = ( p == m -> endp ) ? OUT : * p		1398083	0		=			
ANR	1398226	Identifier	c		1398083	0					
ANR	1398227	ConditionalExpression	( p == m -> endp ) ? OUT : * p		1398083	1					
ANR	1398228	Condition	p == m -> endp		1398083	0					
ANR	1398229	EqualityExpression	p == m -> endp		1398083	0		==			
ANR	1398230	Identifier	p		1398083	0					
ANR	1398231	PtrMemberAccess	m -> endp		1398083	1					
ANR	1398232	Identifier	m		1398083	0					
ANR	1398233	Identifier	endp		1398083	1					
ANR	1398234	Identifier	OUT		1398083	1					
ANR	1398235	UnaryOperationExpression	* p		1398083	2					
ANR	1398236	UnaryOperator	*		1398083	0					
ANR	1398237	Identifier	p		1398083	1					
ANR	1398238	IfStatement	if ( st == fresh )		1398083	2					
ANR	1398239	Condition	st == fresh	740:6:19301:19309	1398083	0	True				
ANR	1398240	EqualityExpression	st == fresh		1398083	0		==			
ANR	1398241	Identifier	st		1398083	0					
ANR	1398242	Identifier	fresh		1398083	1					
ANR	1398243	ExpressionStatement	coldp = p	741:3:19315:19324	1398083	1	True				
ANR	1398244	AssignmentExpression	coldp = p		1398083	0		=			
ANR	1398245	Identifier	coldp		1398083	0					
ANR	1398246	Identifier	p		1398083	1					
ANR	1398247	ExpressionStatement	flagch = '\\0'	744:2:19385:19398	1398083	3	True				
ANR	1398248	AssignmentExpression	flagch = '\\0'		1398083	0		=			
ANR	1398249	Identifier	flagch		1398083	0					
ANR	1398250	PrimaryExpression	'\\0'		1398083	1					
ANR	1398251	ExpressionStatement	i = 0	745:2:19402:19407	1398083	4	True				
ANR	1398252	AssignmentExpression	i = 0		1398083	0		=			
ANR	1398253	Identifier	i		1398083	0					
ANR	1398254	PrimaryExpression	0		1398083	1					
ANR	1398255	IfStatement	if ( ( lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL ) ) )		1398083	5					
ANR	1398256	Condition	( lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL ) )	746:7:19416:19515	1398083	0	True				
ANR	1398257	OrExpression	( lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL ) )		1398083	0		||			
ANR	1398258	AndExpression	lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE		1398083	0		&&			
ANR	1398259	EqualityExpression	lastc == '\\n'		1398083	0		==			
ANR	1398260	Identifier	lastc		1398083	0					
ANR	1398261	PrimaryExpression	'\\n'		1398083	1					
ANR	1398262	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1398083	1		&			
ANR	1398263	PtrMemberAccess	m -> g -> cflags		1398083	0					
ANR	1398264	PtrMemberAccess	m -> g		1398083	0					
ANR	1398265	Identifier	m		1398083	0					
ANR	1398266	Identifier	g		1398083	1					
ANR	1398267	Identifier	cflags		1398083	1					
ANR	1398268	Identifier	R_REGEX_NEWLINE		1398083	1					
ANR	1398269	AndExpression	lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL )		1398083	1		&&			
ANR	1398270	EqualityExpression	lastc == OUT		1398083	0		==			
ANR	1398271	Identifier	lastc		1398083	0					
ANR	1398272	Identifier	OUT		1398083	1					
ANR	1398273	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTBOL )		1398083	1					
ANR	1398274	UnaryOperator	!		1398083	0					
ANR	1398275	BitAndExpression	m -> eflags & R_REGEX_NOTBOL		1398083	1		&			
ANR	1398276	PtrMemberAccess	m -> eflags		1398083	0					
ANR	1398277	Identifier	m		1398083	0					
ANR	1398278	Identifier	eflags		1398083	1					
ANR	1398279	Identifier	R_REGEX_NOTBOL		1398083	1					
ANR	1398280	CompoundStatement		29:52:695:695	1398083	1					
ANR	1398281	ExpressionStatement	flagch = BOL	748:3:19524:19536	1398083	0	True				
ANR	1398282	AssignmentExpression	flagch = BOL		1398083	0		=			
ANR	1398283	Identifier	flagch		1398083	0					
ANR	1398284	Identifier	BOL		1398083	1					
ANR	1398285	ExpressionStatement	i = m -> g -> nbol	749:3:19541:19555	1398083	1	True				
ANR	1398286	AssignmentExpression	i = m -> g -> nbol		1398083	0		=			
ANR	1398287	Identifier	i		1398083	0					
ANR	1398288	PtrMemberAccess	m -> g -> nbol		1398083	1					
ANR	1398289	PtrMemberAccess	m -> g		1398083	0					
ANR	1398290	Identifier	m		1398083	0					
ANR	1398291	Identifier	g		1398083	1					
ANR	1398292	Identifier	nbol		1398083	1					
ANR	1398293	IfStatement	if ( ( c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL ) ) )		1398083	6					
ANR	1398294	Condition	( c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL ) )	751:7:19568:19659	1398083	0	True				
ANR	1398295	OrExpression	( c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL ) )		1398083	0		||			
ANR	1398296	AndExpression	c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE		1398083	0		&&			
ANR	1398297	EqualityExpression	c == '\\n'		1398083	0		==			
ANR	1398298	Identifier	c		1398083	0					
ANR	1398299	PrimaryExpression	'\\n'		1398083	1					
ANR	1398300	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1398083	1		&			
ANR	1398301	PtrMemberAccess	m -> g -> cflags		1398083	0					
ANR	1398302	PtrMemberAccess	m -> g		1398083	0					
ANR	1398303	Identifier	m		1398083	0					
ANR	1398304	Identifier	g		1398083	1					
ANR	1398305	Identifier	cflags		1398083	1					
ANR	1398306	Identifier	R_REGEX_NEWLINE		1398083	1					
ANR	1398307	AndExpression	c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL )		1398083	1		&&			
ANR	1398308	EqualityExpression	c == OUT		1398083	0		==			
ANR	1398309	Identifier	c		1398083	0					
ANR	1398310	Identifier	OUT		1398083	1					
ANR	1398311	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTEOL )		1398083	1					
ANR	1398312	UnaryOperator	!		1398083	0					
ANR	1398313	BitAndExpression	m -> eflags & R_REGEX_NOTEOL		1398083	1		&			
ANR	1398314	PtrMemberAccess	m -> eflags		1398083	0					
ANR	1398315	Identifier	m		1398083	0					
ANR	1398316	Identifier	eflags		1398083	1					
ANR	1398317	Identifier	R_REGEX_NOTEOL		1398083	1					
ANR	1398318	CompoundStatement		34:48:839:839	1398083	1					
ANR	1398319	ExpressionStatement	flagch = ( flagch == BOL ) ? BOLEOL : EOL	753:3:19668:19707	1398083	0	True				
ANR	1398320	AssignmentExpression	flagch = ( flagch == BOL ) ? BOLEOL : EOL		1398083	0		=			
ANR	1398321	Identifier	flagch		1398083	0					
ANR	1398322	ConditionalExpression	( flagch == BOL ) ? BOLEOL : EOL		1398083	1					
ANR	1398323	Condition	flagch == BOL		1398083	0					
ANR	1398324	EqualityExpression	flagch == BOL		1398083	0		==			
ANR	1398325	Identifier	flagch		1398083	0					
ANR	1398326	Identifier	BOL		1398083	1					
ANR	1398327	Identifier	BOLEOL		1398083	1					
ANR	1398328	Identifier	EOL		1398083	2					
ANR	1398329	ExpressionStatement	i += m -> g -> neol	754:3:19712:19727	1398083	1	True				
ANR	1398330	AssignmentExpression	i += m -> g -> neol		1398083	0		+=			
ANR	1398331	Identifier	i		1398083	0					
ANR	1398332	PtrMemberAccess	m -> g -> neol		1398083	1					
ANR	1398333	PtrMemberAccess	m -> g		1398083	0					
ANR	1398334	Identifier	m		1398083	0					
ANR	1398335	Identifier	g		1398083	1					
ANR	1398336	Identifier	neol		1398083	1					
ANR	1398337	IfStatement	if ( i != 0 )		1398083	7					
ANR	1398338	Condition	i != 0	756:6:19739:19744	1398083	0	True				
ANR	1398339	EqualityExpression	i != 0		1398083	0		!=			
ANR	1398340	Identifier	i		1398083	0					
ANR	1398341	PrimaryExpression	0		1398083	1					
ANR	1398342	CompoundStatement		38:14:923:923	1398083	1					
ANR	1398343	ForStatement	for ( ; i > 0 ; i -- )		1398083	0					
ANR	1398344	Condition	i > 0	757:10:19759:19763	1398083	0	True				
ANR	1398345	RelationalExpression	i > 0		1398083	0		>			
ANR	1398346	Identifier	i		1398083	0					
ANR	1398347	PrimaryExpression	0		1398083	1					
ANR	1398348	PostIncDecOperationExpression	i --	757:17:19766:19768	1398083	1	True				
ANR	1398349	Identifier	i		1398083	0					
ANR	1398350	IncDec	--		1398083	1					
ANR	1398351	ExpressionStatement	"st = step ( m -> g , startst , stopst , st , flagch , st )"	758:4:19775:19823	1398083	2	True				
ANR	1398352	AssignmentExpression	"st = step ( m -> g , startst , stopst , st , flagch , st )"		1398083	0		=			
ANR	1398353	Identifier	st		1398083	0					
ANR	1398354	CallExpression	"step ( m -> g , startst , stopst , st , flagch , st )"		1398083	1					
ANR	1398355	Callee	step		1398083	0					
ANR	1398356	Identifier	step		1398083	0					
ANR	1398357	ArgumentList	m -> g		1398083	1					
ANR	1398358	Argument	m -> g		1398083	0					
ANR	1398359	PtrMemberAccess	m -> g		1398083	0					
ANR	1398360	Identifier	m		1398083	0					
ANR	1398361	Identifier	g		1398083	1					
ANR	1398362	Argument	startst		1398083	1					
ANR	1398363	Identifier	startst		1398083	0					
ANR	1398364	Argument	stopst		1398083	2					
ANR	1398365	Identifier	stopst		1398083	0					
ANR	1398366	Argument	st		1398083	3					
ANR	1398367	Identifier	st		1398083	0					
ANR	1398368	Argument	flagch		1398083	4					
ANR	1398369	Identifier	flagch		1398083	0					
ANR	1398370	Argument	st		1398083	5					
ANR	1398371	Identifier	st		1398083	0					
ANR	1398372	ExpressionStatement	"SP ( ""boleol"" , st , c )"	759:3:19828:19847	1398083	1	True				
ANR	1398373	CallExpression	"SP ( ""boleol"" , st , c )"		1398083	0					
ANR	1398374	Callee	SP		1398083	0					
ANR	1398375	Identifier	SP		1398083	0					
ANR	1398376	ArgumentList	"""boleol"""		1398083	1					
ANR	1398377	Argument	"""boleol"""		1398083	0					
ANR	1398378	PrimaryExpression	"""boleol"""		1398083	0					
ANR	1398379	Argument	st		1398083	1					
ANR	1398380	Identifier	st		1398083	0					
ANR	1398381	Argument	c		1398083	2					
ANR	1398382	Identifier	c		1398083	0					
ANR	1398383	IfStatement	if ( ( flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) ) ) && ( c != OUT && ISWORD ( c ) ) )		1398083	8					
ANR	1398384	Condition	( flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) ) ) && ( c != OUT && ISWORD ( c ) )	763:7:19896:19978	1398083	0	True				
ANR	1398385	AndExpression	( flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) ) ) && ( c != OUT && ISWORD ( c ) )		1398083	0		&&			
ANR	1398386	OrExpression	flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) )		1398083	0		||			
ANR	1398387	EqualityExpression	flagch == BOL		1398083	0		==			
ANR	1398388	Identifier	flagch		1398083	0					
ANR	1398389	Identifier	BOL		1398083	1					
ANR	1398390	AndExpression	lastc != OUT && ! ISWORD ( lastc )		1398083	1		&&			
ANR	1398391	EqualityExpression	lastc != OUT		1398083	0		!=			
ANR	1398392	Identifier	lastc		1398083	0					
ANR	1398393	Identifier	OUT		1398083	1					
ANR	1398394	UnaryOperationExpression	! ISWORD ( lastc )		1398083	1					
ANR	1398395	UnaryOperator	!		1398083	0					
ANR	1398396	CallExpression	ISWORD ( lastc )		1398083	1					
ANR	1398397	Callee	ISWORD		1398083	0					
ANR	1398398	Identifier	ISWORD		1398083	0					
ANR	1398399	ArgumentList	lastc		1398083	1					
ANR	1398400	Argument	lastc		1398083	0					
ANR	1398401	Identifier	lastc		1398083	0					
ANR	1398402	AndExpression	c != OUT && ISWORD ( c )		1398083	1		&&			
ANR	1398403	EqualityExpression	c != OUT		1398083	0		!=			
ANR	1398404	Identifier	c		1398083	0					
ANR	1398405	Identifier	OUT		1398083	1					
ANR	1398406	CallExpression	ISWORD ( c )		1398083	1					
ANR	1398407	Callee	ISWORD		1398083	0					
ANR	1398408	Identifier	ISWORD		1398083	0					
ANR	1398409	ArgumentList	c		1398083	1					
ANR	1398410	Argument	c		1398083	0					
ANR	1398411	Identifier	c		1398083	0					
ANR	1398412	CompoundStatement		46:31:1158:1158	1398083	1					
ANR	1398413	ExpressionStatement	flagch = BOW	765:3:19987:19999	1398083	0	True				
ANR	1398414	AssignmentExpression	flagch = BOW		1398083	0		=			
ANR	1398415	Identifier	flagch		1398083	0					
ANR	1398416	Identifier	BOW		1398083	1					
ANR	1398417	IfStatement	if ( ( lastc != OUT && ISWORD ( lastc ) ) && ( flagch == EOL || ( c != OUT && ! ISWORD ( c ) ) ) )		1398083	9					
ANR	1398418	Condition	( lastc != OUT && ISWORD ( lastc ) ) && ( flagch == EOL || ( c != OUT && ! ISWORD ( c ) ) )	767:7:20012:20093	1398083	0	True				
ANR	1398419	AndExpression	( lastc != OUT && ISWORD ( lastc ) ) && ( flagch == EOL || ( c != OUT && ! ISWORD ( c ) ) )		1398083	0		&&			
ANR	1398420	AndExpression	lastc != OUT && ISWORD ( lastc )		1398083	0		&&			
ANR	1398421	EqualityExpression	lastc != OUT		1398083	0		!=			
ANR	1398422	Identifier	lastc		1398083	0					
ANR	1398423	Identifier	OUT		1398083	1					
ANR	1398424	CallExpression	ISWORD ( lastc )		1398083	1					
ANR	1398425	Callee	ISWORD		1398083	0					
ANR	1398426	Identifier	ISWORD		1398083	0					
ANR	1398427	ArgumentList	lastc		1398083	1					
ANR	1398428	Argument	lastc		1398083	0					
ANR	1398429	Identifier	lastc		1398083	0					
ANR	1398430	OrExpression	flagch == EOL || ( c != OUT && ! ISWORD ( c ) )		1398083	1		||			
ANR	1398431	EqualityExpression	flagch == EOL		1398083	0		==			
ANR	1398432	Identifier	flagch		1398083	0					
ANR	1398433	Identifier	EOL		1398083	1					
ANR	1398434	AndExpression	c != OUT && ! ISWORD ( c )		1398083	1		&&			
ANR	1398435	EqualityExpression	c != OUT		1398083	0		!=			
ANR	1398436	Identifier	c		1398083	0					
ANR	1398437	Identifier	OUT		1398083	1					
ANR	1398438	UnaryOperationExpression	! ISWORD ( c )		1398083	1					
ANR	1398439	UnaryOperator	!		1398083	0					
ANR	1398440	CallExpression	ISWORD ( c )		1398083	1					
ANR	1398441	Callee	ISWORD		1398083	0					
ANR	1398442	Identifier	ISWORD		1398083	0					
ANR	1398443	ArgumentList	c		1398083	1					
ANR	1398444	Argument	c		1398083	0					
ANR	1398445	Identifier	c		1398083	0					
ANR	1398446	CompoundStatement		50:50:1273:1273	1398083	1					
ANR	1398447	ExpressionStatement	flagch = EOW	769:3:20102:20114	1398083	0	True				
ANR	1398448	AssignmentExpression	flagch = EOW		1398083	0		=			
ANR	1398449	Identifier	flagch		1398083	0					
ANR	1398450	Identifier	EOW		1398083	1					
ANR	1398451	IfStatement	if ( flagch == BOW || flagch == EOW )		1398083	10					
ANR	1398452	Condition	flagch == BOW || flagch == EOW	771:6:20126:20155	1398083	0	True				
ANR	1398453	OrExpression	flagch == BOW || flagch == EOW		1398083	0		||			
ANR	1398454	EqualityExpression	flagch == BOW		1398083	0		==			
ANR	1398455	Identifier	flagch		1398083	0					
ANR	1398456	Identifier	BOW		1398083	1					
ANR	1398457	EqualityExpression	flagch == EOW		1398083	1		==			
ANR	1398458	Identifier	flagch		1398083	0					
ANR	1398459	Identifier	EOW		1398083	1					
ANR	1398460	CompoundStatement		53:38:1334:1334	1398083	1					
ANR	1398461	ExpressionStatement	"st = step ( m -> g , startst , stopst , st , flagch , st )"	772:3:20163:20211	1398083	0	True				
ANR	1398462	AssignmentExpression	"st = step ( m -> g , startst , stopst , st , flagch , st )"		1398083	0		=			
ANR	1398463	Identifier	st		1398083	0					
ANR	1398464	CallExpression	"step ( m -> g , startst , stopst , st , flagch , st )"		1398083	1					
ANR	1398465	Callee	step		1398083	0					
ANR	1398466	Identifier	step		1398083	0					
ANR	1398467	ArgumentList	m -> g		1398083	1					
ANR	1398468	Argument	m -> g		1398083	0					
ANR	1398469	PtrMemberAccess	m -> g		1398083	0					
ANR	1398470	Identifier	m		1398083	0					
ANR	1398471	Identifier	g		1398083	1					
ANR	1398472	Argument	startst		1398083	1					
ANR	1398473	Identifier	startst		1398083	0					
ANR	1398474	Argument	stopst		1398083	2					
ANR	1398475	Identifier	stopst		1398083	0					
ANR	1398476	Argument	st		1398083	3					
ANR	1398477	Identifier	st		1398083	0					
ANR	1398478	Argument	flagch		1398083	4					
ANR	1398479	Identifier	flagch		1398083	0					
ANR	1398480	Argument	st		1398083	5					
ANR	1398481	Identifier	st		1398083	0					
ANR	1398482	ExpressionStatement	"SP ( ""boweow"" , st , c )"	773:3:20216:20235	1398083	1	True				
ANR	1398483	CallExpression	"SP ( ""boweow"" , st , c )"		1398083	0					
ANR	1398484	Callee	SP		1398083	0					
ANR	1398485	Identifier	SP		1398083	0					
ANR	1398486	ArgumentList	"""boweow"""		1398083	1					
ANR	1398487	Argument	"""boweow"""		1398083	0					
ANR	1398488	PrimaryExpression	"""boweow"""		1398083	0					
ANR	1398489	Argument	st		1398083	1					
ANR	1398490	Identifier	st		1398083	0					
ANR	1398491	Argument	c		1398083	2					
ANR	1398492	Identifier	c		1398083	0					
ANR	1398493	IfStatement	"if ( ISSET ( st , stopst ) || p == stop )"		1398083	11					
ANR	1398494	Condition	"ISSET ( st , stopst ) || p == stop"	777:6:20269:20298	1398083	0	True				
ANR	1398495	OrExpression	"ISSET ( st , stopst ) || p == stop"		1398083	0		||			
ANR	1398496	CallExpression	"ISSET ( st , stopst )"		1398083	0					
ANR	1398497	Callee	ISSET		1398083	0					
ANR	1398498	Identifier	ISSET		1398083	0					
ANR	1398499	ArgumentList	st		1398083	1					
ANR	1398500	Argument	st		1398083	0					
ANR	1398501	Identifier	st		1398083	0					
ANR	1398502	Argument	stopst		1398083	1					
ANR	1398503	Identifier	stopst		1398083	0					
ANR	1398504	EqualityExpression	p == stop		1398083	1		==			
ANR	1398505	Identifier	p		1398083	0					
ANR	1398506	Identifier	stop		1398083	1					
ANR	1398507	BreakStatement	break ;	778:3:20304:20309	1398083	1	True				
ANR	1398508	ExpressionStatement	"ASSIGN ( tmp , st )"	781:2:20381:20396	1398083	12	True				
ANR	1398509	CallExpression	"ASSIGN ( tmp , st )"		1398083	0					
ANR	1398510	Callee	ASSIGN		1398083	0					
ANR	1398511	Identifier	ASSIGN		1398083	0					
ANR	1398512	ArgumentList	tmp		1398083	1					
ANR	1398513	Argument	tmp		1398083	0					
ANR	1398514	Identifier	tmp		1398083	0					
ANR	1398515	Argument	st		1398083	1					
ANR	1398516	Identifier	st		1398083	0					
ANR	1398517	ExpressionStatement	"ASSIGN ( st , fresh )"	782:2:20400:20417	1398083	13	True				
ANR	1398518	CallExpression	"ASSIGN ( st , fresh )"		1398083	0					
ANR	1398519	Callee	ASSIGN		1398083	0					
ANR	1398520	Identifier	ASSIGN		1398083	0					
ANR	1398521	ArgumentList	st		1398083	1					
ANR	1398522	Argument	st		1398083	0					
ANR	1398523	Identifier	st		1398083	0					
ANR	1398524	Argument	fresh		1398083	1					
ANR	1398525	Identifier	fresh		1398083	0					
ANR	1398526	IfStatement	if ( c == OUT )		1398083	14					
ANR	1398527	Condition	c == OUT	783:6:20425:20432	1398083	0	True				
ANR	1398528	EqualityExpression	c == OUT		1398083	0		==			
ANR	1398529	Identifier	c		1398083	0					
ANR	1398530	Identifier	OUT		1398083	1					
ANR	1398531	CompoundStatement		65:16:1611:1611	1398083	1					
ANR	1398532	BreakStatement	break ;	784:3:20440:20445	1398083	0	True				
ANR	1398533	ExpressionStatement	"st = step ( m -> g , startst , stopst , tmp , c , st )"	786:2:20453:20497	1398083	15	True				
ANR	1398534	AssignmentExpression	"st = step ( m -> g , startst , stopst , tmp , c , st )"		1398083	0		=			
ANR	1398535	Identifier	st		1398083	0					
ANR	1398536	CallExpression	"step ( m -> g , startst , stopst , tmp , c , st )"		1398083	1					
ANR	1398537	Callee	step		1398083	0					
ANR	1398538	Identifier	step		1398083	0					
ANR	1398539	ArgumentList	m -> g		1398083	1					
ANR	1398540	Argument	m -> g		1398083	0					
ANR	1398541	PtrMemberAccess	m -> g		1398083	0					
ANR	1398542	Identifier	m		1398083	0					
ANR	1398543	Identifier	g		1398083	1					
ANR	1398544	Argument	startst		1398083	1					
ANR	1398545	Identifier	startst		1398083	0					
ANR	1398546	Argument	stopst		1398083	2					
ANR	1398547	Identifier	stopst		1398083	0					
ANR	1398548	Argument	tmp		1398083	3					
ANR	1398549	Identifier	tmp		1398083	0					
ANR	1398550	Argument	c		1398083	4					
ANR	1398551	Identifier	c		1398083	0					
ANR	1398552	Argument	st		1398083	5					
ANR	1398553	Identifier	st		1398083	0					
ANR	1398554	ExpressionStatement	"SP ( ""aft"" , st , c )"	787:2:20501:20517	1398083	16	True				
ANR	1398555	CallExpression	"SP ( ""aft"" , st , c )"		1398083	0					
ANR	1398556	Callee	SP		1398083	0					
ANR	1398557	Identifier	SP		1398083	0					
ANR	1398558	ArgumentList	"""aft"""		1398083	1					
ANR	1398559	Argument	"""aft"""		1398083	0					
ANR	1398560	PrimaryExpression	"""aft"""		1398083	0					
ANR	1398561	Argument	st		1398083	1					
ANR	1398562	Identifier	st		1398083	0					
ANR	1398563	Argument	c		1398083	2					
ANR	1398564	Identifier	c		1398083	0					
ANR	1398565	IfStatement	"if ( ! EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st ) )"		1398083	17					
ANR	1398566	Condition	"! EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st )"	788:6:20525:20577	1398083	0	True				
ANR	1398567	UnaryOperationExpression	"! EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st )"		1398083	0					
ANR	1398568	UnaryOperator	!		1398083	0					
ANR	1398569	CallExpression	"EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st )"		1398083	1					
ANR	1398570	Callee	EQ		1398083	0					
ANR	1398571	Identifier	EQ		1398083	0					
ANR	1398572	ArgumentList	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398083	1					
ANR	1398573	Argument	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398083	0					
ANR	1398574	CallExpression	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398083	0					
ANR	1398575	Callee	step		1398083	0					
ANR	1398576	Identifier	step		1398083	0					
ANR	1398577	ArgumentList	m -> g		1398083	1					
ANR	1398578	Argument	m -> g		1398083	0					
ANR	1398579	PtrMemberAccess	m -> g		1398083	0					
ANR	1398580	Identifier	m		1398083	0					
ANR	1398581	Identifier	g		1398083	1					
ANR	1398582	Argument	startst		1398083	1					
ANR	1398583	Identifier	startst		1398083	0					
ANR	1398584	Argument	stopst		1398083	2					
ANR	1398585	Identifier	stopst		1398083	0					
ANR	1398586	Argument	st		1398083	3					
ANR	1398587	Identifier	st		1398083	0					
ANR	1398588	Argument	NOTHING		1398083	4					
ANR	1398589	Identifier	NOTHING		1398083	0					
ANR	1398590	Argument	st		1398083	5					
ANR	1398591	Identifier	st		1398083	0					
ANR	1398592	Argument	st		1398083	1					
ANR	1398593	Identifier	st		1398083	0					
ANR	1398594	CompoundStatement		70:61:1756:1756	1398083	1					
ANR	1398595	BreakStatement	break ;	789:3:20585:20590	1398083	0	True				
ANR	1398596	ExpressionStatement	p ++	791:2:20598:20601	1398083	18	True				
ANR	1398597	PostIncDecOperationExpression	p ++		1398083	0					
ANR	1398598	Identifier	p		1398083	0					
ANR	1398599	IncDec	++		1398083	1					
ANR	1398600	IfStatement	if ( coldp )		1398083	16					
ANR	1398601	Condition	coldp	794:5:20612:20616	1398083	0	True				
ANR	1398602	Identifier	coldp		1398083	0					
ANR	1398603	CompoundStatement		76:12:1795:1795	1398083	1					
ANR	1398604	ExpressionStatement	m -> coldp = coldp	795:2:20623:20639	1398083	0	True				
ANR	1398605	AssignmentExpression	m -> coldp = coldp		1398083	0		=			
ANR	1398606	PtrMemberAccess	m -> coldp		1398083	0					
ANR	1398607	Identifier	m		1398083	0					
ANR	1398608	Identifier	coldp		1398083	1					
ANR	1398609	Identifier	coldp		1398083	1					
ANR	1398610	IfStatement	"if ( ISSET ( st , stopst ) )"		1398083	1					
ANR	1398611	Condition	"ISSET ( st , stopst )"	796:6:20647:20663	1398083	0	True				
ANR	1398612	CallExpression	"ISSET ( st , stopst )"		1398083	0					
ANR	1398613	Callee	ISSET		1398083	0					
ANR	1398614	Identifier	ISSET		1398083	0					
ANR	1398615	ArgumentList	st		1398083	1					
ANR	1398616	Argument	st		1398083	0					
ANR	1398617	Identifier	st		1398083	0					
ANR	1398618	Argument	stopst		1398083	1					
ANR	1398619	Identifier	stopst		1398083	0					
ANR	1398620	ReturnStatement	return ( p + 1 ) ;	797:3:20669:20680	1398083	1	True				
ANR	1398621	AdditiveExpression	p + 1		1398083	0		+			
ANR	1398622	Identifier	p		1398083	0					
ANR	1398623	PrimaryExpression	1		1398083	1					
ANR	1398624	ReturnStatement	return NULL ;	799:1:20686:20697	1398083	17	True				
ANR	1398625	Identifier	NULL		1398083	0					
ANR	1398626	ReturnType	static char *		1398083	1					
ANR	1398627	Identifier	fast		1398083	2					
ANR	1398628	ParameterList	"struct match * m , char * start , char * stop , sopno startst , sopno stopst"		1398083	3					
ANR	1398629	Parameter	struct match * m	718:5:18752:18766	1398083	0	True				
ANR	1398630	ParameterType	struct match *		1398083	0					
ANR	1398631	Identifier	m		1398083	1					
ANR	1398632	Parameter	char * start	718:22:18769:18779	1398083	1	True				
ANR	1398633	ParameterType	char *		1398083	0					
ANR	1398634	Identifier	start		1398083	1					
ANR	1398635	Parameter	char * stop	718:35:18782:18791	1398083	2	True				
ANR	1398636	ParameterType	char *		1398083	0					
ANR	1398637	Identifier	stop		1398083	1					
ANR	1398638	Parameter	sopno startst	718:47:18794:18806	1398083	3	True				
ANR	1398639	ParameterType	sopno		1398083	0					
ANR	1398640	Identifier	startst		1398083	1					
ANR	1398641	Parameter	sopno stopst	718:62:18809:18820	1398083	4	True				
ANR	1398642	ParameterType	sopno		1398083	0					
ANR	1398643	Identifier	stopst		1398083	1					
ANR	1398644	CFGEntryNode	ENTRY		1398083		True				
ANR	1398645	CFGExitNode	EXIT		1398083		True				
ANR	1398646	InfiniteForNode	true		1398083		True				
ANR	1398647	Symbol	m -> g -> cflags		1398083						
ANR	1398648	Symbol	R_REGEX_NOTEOL		1398083						
ANR	1398649	Symbol	m -> st		1398083						
ANR	1398650	Symbol	R_REGEX_NOTBOL		1398083						
ANR	1398651	Symbol	* start		1398083						
ANR	1398652	Symbol	m -> fresh		1398083						
ANR	1398653	Symbol	m -> g -> neol		1398083						
ANR	1398654	Symbol	* ( start - 1 )		1398083						
ANR	1398655	Symbol	m -> g -> nbol		1398083						
ANR	1398656	Symbol	m -> tmp		1398083						
ANR	1398657	Symbol	* m -> g		1398083						
ANR	1398658	Symbol	m -> endp		1398083						
ANR	1398659	Symbol	m -> eflags		1398083						
ANR	1398660	Symbol	lastc		1398083						
ANR	1398661	Symbol	m -> g		1398083						
ANR	1398662	Symbol	tmp		1398083						
ANR	1398663	Symbol	NOTHING		1398083						
ANR	1398664	Symbol	m -> coldp		1398083						
ANR	1398665	Symbol	* * m		1398083						
ANR	1398666	Symbol	BOL		1398083						
ANR	1398667	Symbol	st		1398083						
ANR	1398668	Symbol	c		1398083						
ANR	1398669	Symbol	m -> beginp		1398083						
ANR	1398670	Symbol	NULL		1398083						
ANR	1398671	Symbol	EOL		1398083						
ANR	1398672	Symbol	start		1398083						
ANR	1398673	Symbol	startst		1398083						
ANR	1398674	Symbol	i		1398083						
ANR	1398675	Symbol	coldp		1398083						
ANR	1398676	Symbol	BOW		1398083						
ANR	1398677	Symbol	EOW		1398083						
ANR	1398678	Symbol	EQ		1398083						
ANR	1398679	Symbol	m		1398083						
ANR	1398680	Symbol	OUT		1398083						
ANR	1398681	Symbol	p		1398083						
ANR	1398682	Symbol	ISSET		1398083						
ANR	1398683	Symbol	stop		1398083						
ANR	1398684	Symbol	stopst		1398083						
ANR	1398685	Symbol	* m		1398083						
ANR	1398686	Symbol	ISWORD		1398083						
ANR	1398687	Symbol	step		1398083						
ANR	1398688	Symbol	* p		1398083						
ANR	1398689	Symbol	fresh		1398083						
ANR	1398690	Symbol	flagch		1398083						
ANR	1398691	Symbol	R_REGEX_NEWLINE		1398083						
ANR	1398692	Symbol	BOLEOL		1398083						
ANR	1398693	Function	slow	805:0:20761:22698							
ANR	1398694	FunctionDef	"slow (struct match * m , char * start , char * stop , sopno startst , sopno stopst)"		1398693	0					
ANR	1398695	CompoundStatement		807:0:20874:22698	1398693	0					
ANR	1398696	IdentifierDeclStatement	states st = m -> st ;	808:1:20877:20894	1398693	0	True				
ANR	1398697	IdentifierDecl	st = m -> st		1398693	0					
ANR	1398698	IdentifierDeclType	states		1398693	0					
ANR	1398699	Identifier	st		1398693	1					
ANR	1398700	AssignmentExpression	st = m -> st		1398693	2		=			
ANR	1398701	Identifier	st		1398693	0					
ANR	1398702	PtrMemberAccess	m -> st		1398693	1					
ANR	1398703	Identifier	m		1398693	0					
ANR	1398704	Identifier	st		1398693	1					
ANR	1398705	IdentifierDeclStatement	states empty = m -> empty ;	809:1:20897:20920	1398693	1	True				
ANR	1398706	IdentifierDecl	empty = m -> empty		1398693	0					
ANR	1398707	IdentifierDeclType	states		1398693	0					
ANR	1398708	Identifier	empty		1398693	1					
ANR	1398709	AssignmentExpression	empty = m -> empty		1398693	2		=			
ANR	1398710	Identifier	empty		1398693	0					
ANR	1398711	PtrMemberAccess	m -> empty		1398693	1					
ANR	1398712	Identifier	m		1398693	0					
ANR	1398713	Identifier	empty		1398693	1					
ANR	1398714	IdentifierDeclStatement	states tmp = m -> tmp ;	810:1:20923:20942	1398693	2	True				
ANR	1398715	IdentifierDecl	tmp = m -> tmp		1398693	0					
ANR	1398716	IdentifierDeclType	states		1398693	0					
ANR	1398717	Identifier	tmp		1398693	1					
ANR	1398718	AssignmentExpression	tmp = m -> tmp		1398693	2		=			
ANR	1398719	Identifier	tmp		1398693	0					
ANR	1398720	PtrMemberAccess	m -> tmp		1398693	1					
ANR	1398721	Identifier	m		1398693	0					
ANR	1398722	Identifier	tmp		1398693	1					
ANR	1398723	IdentifierDeclStatement	char * p = start ;	811:1:20945:20960	1398693	3	True				
ANR	1398724	IdentifierDecl	* p = start		1398693	0					
ANR	1398725	IdentifierDeclType	char *		1398693	0					
ANR	1398726	Identifier	p		1398693	1					
ANR	1398727	AssignmentExpression	* p = start		1398693	2		=			
ANR	1398728	Identifier	start		1398693	0					
ANR	1398729	Identifier	start		1398693	1					
ANR	1398730	IdentifierDeclStatement	int c = ( start == m -> beginp ) ? OUT : * ( start - 1 ) ;	812:1:20963:21010	1398693	4	True				
ANR	1398731	IdentifierDecl	c = ( start == m -> beginp ) ? OUT : * ( start - 1 )		1398693	0					
ANR	1398732	IdentifierDeclType	int		1398693	0					
ANR	1398733	Identifier	c		1398693	1					
ANR	1398734	AssignmentExpression	c = ( start == m -> beginp ) ? OUT : * ( start - 1 )		1398693	2		=			
ANR	1398735	Identifier	c		1398693	0					
ANR	1398736	ConditionalExpression	( start == m -> beginp ) ? OUT : * ( start - 1 )		1398693	1					
ANR	1398737	Condition	start == m -> beginp		1398693	0					
ANR	1398738	EqualityExpression	start == m -> beginp		1398693	0		==			
ANR	1398739	Identifier	start		1398693	0					
ANR	1398740	PtrMemberAccess	m -> beginp		1398693	1					
ANR	1398741	Identifier	m		1398693	0					
ANR	1398742	Identifier	beginp		1398693	1					
ANR	1398743	Identifier	OUT		1398693	1					
ANR	1398744	UnaryOperationExpression	* ( start - 1 )		1398693	2					
ANR	1398745	UnaryOperator	*		1398693	0					
ANR	1398746	AdditiveExpression	start - 1		1398693	1		-			
ANR	1398747	Identifier	start		1398693	0					
ANR	1398748	PrimaryExpression	1		1398693	1					
ANR	1398749	IdentifierDeclStatement	int lastc ;	813:1:21013:21022	1398693	5	True				
ANR	1398750	IdentifierDecl	lastc		1398693	0					
ANR	1398751	IdentifierDeclType	int		1398693	0					
ANR	1398752	Identifier	lastc		1398693	1					
ANR	1398753	IdentifierDeclStatement	int flagch ;	814:1:21042:21052	1398693	6	True				
ANR	1398754	IdentifierDecl	flagch		1398693	0					
ANR	1398755	IdentifierDeclType	int		1398693	0					
ANR	1398756	Identifier	flagch		1398693	1					
ANR	1398757	IdentifierDeclStatement	int i ;	815:1:21055:21060	1398693	7	True				
ANR	1398758	IdentifierDecl	i		1398693	0					
ANR	1398759	IdentifierDeclType	int		1398693	0					
ANR	1398760	Identifier	i		1398693	1					
ANR	1398761	IdentifierDeclStatement	char * matchp ;	816:1:21063:21075	1398693	8	True				
ANR	1398762	IdentifierDecl	* matchp		1398693	0					
ANR	1398763	IdentifierDeclType	char *		1398693	0					
ANR	1398764	Identifier	matchp		1398693	1					
ANR	1398765	ExpressionStatement	"AT ( ""slow"" , start , stop , startst , stopst )"	818:1:21115:21155	1398693	9	True				
ANR	1398766	CallExpression	"AT ( ""slow"" , start , stop , startst , stopst )"		1398693	0					
ANR	1398767	Callee	AT		1398693	0					
ANR	1398768	Identifier	AT		1398693	0					
ANR	1398769	ArgumentList	"""slow"""		1398693	1					
ANR	1398770	Argument	"""slow"""		1398693	0					
ANR	1398771	PrimaryExpression	"""slow"""		1398693	0					
ANR	1398772	Argument	start		1398693	1					
ANR	1398773	Identifier	start		1398693	0					
ANR	1398774	Argument	stop		1398693	2					
ANR	1398775	Identifier	stop		1398693	0					
ANR	1398776	Argument	startst		1398693	3					
ANR	1398777	Identifier	startst		1398693	0					
ANR	1398778	Argument	stopst		1398693	4					
ANR	1398779	Identifier	stopst		1398693	0					
ANR	1398780	ExpressionStatement	CLEAR ( st )	819:1:21158:21167	1398693	10	True				
ANR	1398781	CallExpression	CLEAR ( st )		1398693	0					
ANR	1398782	Callee	CLEAR		1398693	0					
ANR	1398783	Identifier	CLEAR		1398693	0					
ANR	1398784	ArgumentList	st		1398693	1					
ANR	1398785	Argument	st		1398693	0					
ANR	1398786	Identifier	st		1398693	0					
ANR	1398787	ExpressionStatement	"SET1 ( st , startst )"	820:1:21170:21187	1398693	11	True				
ANR	1398788	CallExpression	"SET1 ( st , startst )"		1398693	0					
ANR	1398789	Callee	SET1		1398693	0					
ANR	1398790	Identifier	SET1		1398693	0					
ANR	1398791	ArgumentList	st		1398693	1					
ANR	1398792	Argument	st		1398693	0					
ANR	1398793	Identifier	st		1398693	0					
ANR	1398794	Argument	startst		1398693	1					
ANR	1398795	Identifier	startst		1398693	0					
ANR	1398796	ExpressionStatement	"SP ( ""sstart"" , st , * p )"	821:1:21190:21210	1398693	12	True				
ANR	1398797	CallExpression	"SP ( ""sstart"" , st , * p )"		1398693	0					
ANR	1398798	Callee	SP		1398693	0					
ANR	1398799	Identifier	SP		1398693	0					
ANR	1398800	ArgumentList	"""sstart"""		1398693	1					
ANR	1398801	Argument	"""sstart"""		1398693	0					
ANR	1398802	PrimaryExpression	"""sstart"""		1398693	0					
ANR	1398803	Argument	st		1398693	1					
ANR	1398804	Identifier	st		1398693	0					
ANR	1398805	Argument	* p		1398693	2					
ANR	1398806	UnaryOperationExpression	* p		1398693	0					
ANR	1398807	UnaryOperator	*		1398693	0					
ANR	1398808	Identifier	p		1398693	1					
ANR	1398809	ExpressionStatement	"st = step ( m -> g , startst , stopst , st , NOTHING , st )"	822:1:21213:21262	1398693	13	True				
ANR	1398810	AssignmentExpression	"st = step ( m -> g , startst , stopst , st , NOTHING , st )"		1398693	0		=			
ANR	1398811	Identifier	st		1398693	0					
ANR	1398812	CallExpression	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398693	1					
ANR	1398813	Callee	step		1398693	0					
ANR	1398814	Identifier	step		1398693	0					
ANR	1398815	ArgumentList	m -> g		1398693	1					
ANR	1398816	Argument	m -> g		1398693	0					
ANR	1398817	PtrMemberAccess	m -> g		1398693	0					
ANR	1398818	Identifier	m		1398693	0					
ANR	1398819	Identifier	g		1398693	1					
ANR	1398820	Argument	startst		1398693	1					
ANR	1398821	Identifier	startst		1398693	0					
ANR	1398822	Argument	stopst		1398693	2					
ANR	1398823	Identifier	stopst		1398693	0					
ANR	1398824	Argument	st		1398693	3					
ANR	1398825	Identifier	st		1398693	0					
ANR	1398826	Argument	NOTHING		1398693	4					
ANR	1398827	Identifier	NOTHING		1398693	0					
ANR	1398828	Argument	st		1398693	5					
ANR	1398829	Identifier	st		1398693	0					
ANR	1398830	ExpressionStatement	matchp = NULL	823:1:21265:21278	1398693	14	True				
ANR	1398831	AssignmentExpression	matchp = NULL		1398693	0		=			
ANR	1398832	Identifier	matchp		1398693	0					
ANR	1398833	Identifier	NULL		1398693	1					
ANR	1398834	ForStatement	for ( ; ; )		1398693	15					
ANR	1398835	CompoundStatement		18:10:415:415	1398693	0					
ANR	1398836	ExpressionStatement	lastc = c	826:2:21317:21326	1398693	0	True				
ANR	1398837	AssignmentExpression	lastc = c		1398693	0		=			
ANR	1398838	Identifier	lastc		1398693	0					
ANR	1398839	Identifier	c		1398693	1					
ANR	1398840	ExpressionStatement	c = ( p == m -> endp ) ? OUT : * p	827:2:21330:21359	1398693	1	True				
ANR	1398841	AssignmentExpression	c = ( p == m -> endp ) ? OUT : * p		1398693	0		=			
ANR	1398842	Identifier	c		1398693	0					
ANR	1398843	ConditionalExpression	( p == m -> endp ) ? OUT : * p		1398693	1					
ANR	1398844	Condition	p == m -> endp		1398693	0					
ANR	1398845	EqualityExpression	p == m -> endp		1398693	0		==			
ANR	1398846	Identifier	p		1398693	0					
ANR	1398847	PtrMemberAccess	m -> endp		1398693	1					
ANR	1398848	Identifier	m		1398693	0					
ANR	1398849	Identifier	endp		1398693	1					
ANR	1398850	Identifier	OUT		1398693	1					
ANR	1398851	UnaryOperationExpression	* p		1398693	2					
ANR	1398852	UnaryOperator	*		1398693	0					
ANR	1398853	Identifier	p		1398693	1					
ANR	1398854	ExpressionStatement	flagch = '\\0'	830:2:21420:21433	1398693	2	True				
ANR	1398855	AssignmentExpression	flagch = '\\0'		1398693	0		=			
ANR	1398856	Identifier	flagch		1398693	0					
ANR	1398857	PrimaryExpression	'\\0'		1398693	1					
ANR	1398858	ExpressionStatement	i = 0	831:2:21437:21442	1398693	3	True				
ANR	1398859	AssignmentExpression	i = 0		1398693	0		=			
ANR	1398860	Identifier	i		1398693	0					
ANR	1398861	PrimaryExpression	0		1398693	1					
ANR	1398862	IfStatement	if ( ( lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL ) ) )		1398693	4					
ANR	1398863	Condition	( lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL ) )	832:7:21451:21550	1398693	0	True				
ANR	1398864	OrExpression	( lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL ) )		1398693	0		||			
ANR	1398865	AndExpression	lastc == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE		1398693	0		&&			
ANR	1398866	EqualityExpression	lastc == '\\n'		1398693	0		==			
ANR	1398867	Identifier	lastc		1398693	0					
ANR	1398868	PrimaryExpression	'\\n'		1398693	1					
ANR	1398869	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1398693	1		&			
ANR	1398870	PtrMemberAccess	m -> g -> cflags		1398693	0					
ANR	1398871	PtrMemberAccess	m -> g		1398693	0					
ANR	1398872	Identifier	m		1398693	0					
ANR	1398873	Identifier	g		1398693	1					
ANR	1398874	Identifier	cflags		1398693	1					
ANR	1398875	Identifier	R_REGEX_NEWLINE		1398693	1					
ANR	1398876	AndExpression	lastc == OUT && ! ( m -> eflags & R_REGEX_NOTBOL )		1398693	1		&&			
ANR	1398877	EqualityExpression	lastc == OUT		1398693	0		==			
ANR	1398878	Identifier	lastc		1398693	0					
ANR	1398879	Identifier	OUT		1398693	1					
ANR	1398880	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTBOL )		1398693	1					
ANR	1398881	UnaryOperator	!		1398693	0					
ANR	1398882	BitAndExpression	m -> eflags & R_REGEX_NOTBOL		1398693	1		&			
ANR	1398883	PtrMemberAccess	m -> eflags		1398693	0					
ANR	1398884	Identifier	m		1398693	0					
ANR	1398885	Identifier	eflags		1398693	1					
ANR	1398886	Identifier	R_REGEX_NOTBOL		1398693	1					
ANR	1398887	CompoundStatement		27:52:679:679	1398693	1					
ANR	1398888	ExpressionStatement	flagch = BOL	834:3:21559:21571	1398693	0	True				
ANR	1398889	AssignmentExpression	flagch = BOL		1398693	0		=			
ANR	1398890	Identifier	flagch		1398693	0					
ANR	1398891	Identifier	BOL		1398693	1					
ANR	1398892	ExpressionStatement	i = m -> g -> nbol	835:3:21576:21590	1398693	1	True				
ANR	1398893	AssignmentExpression	i = m -> g -> nbol		1398693	0		=			
ANR	1398894	Identifier	i		1398693	0					
ANR	1398895	PtrMemberAccess	m -> g -> nbol		1398693	1					
ANR	1398896	PtrMemberAccess	m -> g		1398693	0					
ANR	1398897	Identifier	m		1398693	0					
ANR	1398898	Identifier	g		1398693	1					
ANR	1398899	Identifier	nbol		1398693	1					
ANR	1398900	IfStatement	if ( ( c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL ) ) )		1398693	5					
ANR	1398901	Condition	( c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL ) )	837:7:21603:21694	1398693	0	True				
ANR	1398902	OrExpression	( c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE ) || ( c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL ) )		1398693	0		||			
ANR	1398903	AndExpression	c == '\\n' && m -> g -> cflags & R_REGEX_NEWLINE		1398693	0		&&			
ANR	1398904	EqualityExpression	c == '\\n'		1398693	0		==			
ANR	1398905	Identifier	c		1398693	0					
ANR	1398906	PrimaryExpression	'\\n'		1398693	1					
ANR	1398907	BitAndExpression	m -> g -> cflags & R_REGEX_NEWLINE		1398693	1		&			
ANR	1398908	PtrMemberAccess	m -> g -> cflags		1398693	0					
ANR	1398909	PtrMemberAccess	m -> g		1398693	0					
ANR	1398910	Identifier	m		1398693	0					
ANR	1398911	Identifier	g		1398693	1					
ANR	1398912	Identifier	cflags		1398693	1					
ANR	1398913	Identifier	R_REGEX_NEWLINE		1398693	1					
ANR	1398914	AndExpression	c == OUT && ! ( m -> eflags & R_REGEX_NOTEOL )		1398693	1		&&			
ANR	1398915	EqualityExpression	c == OUT		1398693	0		==			
ANR	1398916	Identifier	c		1398693	0					
ANR	1398917	Identifier	OUT		1398693	1					
ANR	1398918	UnaryOperationExpression	! ( m -> eflags & R_REGEX_NOTEOL )		1398693	1					
ANR	1398919	UnaryOperator	!		1398693	0					
ANR	1398920	BitAndExpression	m -> eflags & R_REGEX_NOTEOL		1398693	1		&			
ANR	1398921	PtrMemberAccess	m -> eflags		1398693	0					
ANR	1398922	Identifier	m		1398693	0					
ANR	1398923	Identifier	eflags		1398693	1					
ANR	1398924	Identifier	R_REGEX_NOTEOL		1398693	1					
ANR	1398925	CompoundStatement		32:48:823:823	1398693	1					
ANR	1398926	ExpressionStatement	flagch = ( flagch == BOL ) ? BOLEOL : EOL	839:3:21703:21742	1398693	0	True				
ANR	1398927	AssignmentExpression	flagch = ( flagch == BOL ) ? BOLEOL : EOL		1398693	0		=			
ANR	1398928	Identifier	flagch		1398693	0					
ANR	1398929	ConditionalExpression	( flagch == BOL ) ? BOLEOL : EOL		1398693	1					
ANR	1398930	Condition	flagch == BOL		1398693	0					
ANR	1398931	EqualityExpression	flagch == BOL		1398693	0		==			
ANR	1398932	Identifier	flagch		1398693	0					
ANR	1398933	Identifier	BOL		1398693	1					
ANR	1398934	Identifier	BOLEOL		1398693	1					
ANR	1398935	Identifier	EOL		1398693	2					
ANR	1398936	ExpressionStatement	i += m -> g -> neol	840:3:21747:21762	1398693	1	True				
ANR	1398937	AssignmentExpression	i += m -> g -> neol		1398693	0		+=			
ANR	1398938	Identifier	i		1398693	0					
ANR	1398939	PtrMemberAccess	m -> g -> neol		1398693	1					
ANR	1398940	PtrMemberAccess	m -> g		1398693	0					
ANR	1398941	Identifier	m		1398693	0					
ANR	1398942	Identifier	g		1398693	1					
ANR	1398943	Identifier	neol		1398693	1					
ANR	1398944	IfStatement	if ( i != 0 )		1398693	6					
ANR	1398945	Condition	i != 0	842:6:21774:21779	1398693	0	True				
ANR	1398946	EqualityExpression	i != 0		1398693	0		!=			
ANR	1398947	Identifier	i		1398693	0					
ANR	1398948	PrimaryExpression	0		1398693	1					
ANR	1398949	CompoundStatement		36:14:907:907	1398693	1					
ANR	1398950	ForStatement	for ( ; i > 0 ; i -- )		1398693	0					
ANR	1398951	Condition	i > 0	843:10:21794:21798	1398693	0	True				
ANR	1398952	RelationalExpression	i > 0		1398693	0		>			
ANR	1398953	Identifier	i		1398693	0					
ANR	1398954	PrimaryExpression	0		1398693	1					
ANR	1398955	PostIncDecOperationExpression	i --	843:17:21801:21803	1398693	1	True				
ANR	1398956	Identifier	i		1398693	0					
ANR	1398957	IncDec	--		1398693	1					
ANR	1398958	ExpressionStatement	"st = step ( m -> g , startst , stopst , st , flagch , st )"	844:4:21810:21858	1398693	2	True				
ANR	1398959	AssignmentExpression	"st = step ( m -> g , startst , stopst , st , flagch , st )"		1398693	0		=			
ANR	1398960	Identifier	st		1398693	0					
ANR	1398961	CallExpression	"step ( m -> g , startst , stopst , st , flagch , st )"		1398693	1					
ANR	1398962	Callee	step		1398693	0					
ANR	1398963	Identifier	step		1398693	0					
ANR	1398964	ArgumentList	m -> g		1398693	1					
ANR	1398965	Argument	m -> g		1398693	0					
ANR	1398966	PtrMemberAccess	m -> g		1398693	0					
ANR	1398967	Identifier	m		1398693	0					
ANR	1398968	Identifier	g		1398693	1					
ANR	1398969	Argument	startst		1398693	1					
ANR	1398970	Identifier	startst		1398693	0					
ANR	1398971	Argument	stopst		1398693	2					
ANR	1398972	Identifier	stopst		1398693	0					
ANR	1398973	Argument	st		1398693	3					
ANR	1398974	Identifier	st		1398693	0					
ANR	1398975	Argument	flagch		1398693	4					
ANR	1398976	Identifier	flagch		1398693	0					
ANR	1398977	Argument	st		1398693	5					
ANR	1398978	Identifier	st		1398693	0					
ANR	1398979	ExpressionStatement	"SP ( ""sboleol"" , st , c )"	845:3:21863:21883	1398693	1	True				
ANR	1398980	CallExpression	"SP ( ""sboleol"" , st , c )"		1398693	0					
ANR	1398981	Callee	SP		1398693	0					
ANR	1398982	Identifier	SP		1398693	0					
ANR	1398983	ArgumentList	"""sboleol"""		1398693	1					
ANR	1398984	Argument	"""sboleol"""		1398693	0					
ANR	1398985	PrimaryExpression	"""sboleol"""		1398693	0					
ANR	1398986	Argument	st		1398693	1					
ANR	1398987	Identifier	st		1398693	0					
ANR	1398988	Argument	c		1398693	2					
ANR	1398989	Identifier	c		1398693	0					
ANR	1398990	IfStatement	if ( ( flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) ) ) && ( c != OUT && ISWORD ( c ) ) )		1398693	7					
ANR	1398991	Condition	( flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) ) ) && ( c != OUT && ISWORD ( c ) )	849:7:21932:22014	1398693	0	True				
ANR	1398992	AndExpression	( flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) ) ) && ( c != OUT && ISWORD ( c ) )		1398693	0		&&			
ANR	1398993	OrExpression	flagch == BOL || ( lastc != OUT && ! ISWORD ( lastc ) )		1398693	0		||			
ANR	1398994	EqualityExpression	flagch == BOL		1398693	0		==			
ANR	1398995	Identifier	flagch		1398693	0					
ANR	1398996	Identifier	BOL		1398693	1					
ANR	1398997	AndExpression	lastc != OUT && ! ISWORD ( lastc )		1398693	1		&&			
ANR	1398998	EqualityExpression	lastc != OUT		1398693	0		!=			
ANR	1398999	Identifier	lastc		1398693	0					
ANR	1399000	Identifier	OUT		1398693	1					
ANR	1399001	UnaryOperationExpression	! ISWORD ( lastc )		1398693	1					
ANR	1399002	UnaryOperator	!		1398693	0					
ANR	1399003	CallExpression	ISWORD ( lastc )		1398693	1					
ANR	1399004	Callee	ISWORD		1398693	0					
ANR	1399005	Identifier	ISWORD		1398693	0					
ANR	1399006	ArgumentList	lastc		1398693	1					
ANR	1399007	Argument	lastc		1398693	0					
ANR	1399008	Identifier	lastc		1398693	0					
ANR	1399009	AndExpression	c != OUT && ISWORD ( c )		1398693	1		&&			
ANR	1399010	EqualityExpression	c != OUT		1398693	0		!=			
ANR	1399011	Identifier	c		1398693	0					
ANR	1399012	Identifier	OUT		1398693	1					
ANR	1399013	CallExpression	ISWORD ( c )		1398693	1					
ANR	1399014	Callee	ISWORD		1398693	0					
ANR	1399015	Identifier	ISWORD		1398693	0					
ANR	1399016	ArgumentList	c		1398693	1					
ANR	1399017	Argument	c		1398693	0					
ANR	1399018	Identifier	c		1398693	0					
ANR	1399019	CompoundStatement		44:31:1143:1143	1398693	1					
ANR	1399020	ExpressionStatement	flagch = BOW	851:3:22023:22035	1398693	0	True				
ANR	1399021	AssignmentExpression	flagch = BOW		1398693	0		=			
ANR	1399022	Identifier	flagch		1398693	0					
ANR	1399023	Identifier	BOW		1398693	1					
ANR	1399024	IfStatement	if ( ( lastc != OUT && ISWORD ( lastc ) ) && ( flagch == EOL || ( c != OUT && ! ISWORD ( c ) ) ) )		1398693	8					
ANR	1399025	Condition	( lastc != OUT && ISWORD ( lastc ) ) && ( flagch == EOL || ( c != OUT && ! ISWORD ( c ) ) )	853:7:22048:22129	1398693	0	True				
ANR	1399026	AndExpression	( lastc != OUT && ISWORD ( lastc ) ) && ( flagch == EOL || ( c != OUT && ! ISWORD ( c ) ) )		1398693	0		&&			
ANR	1399027	AndExpression	lastc != OUT && ISWORD ( lastc )		1398693	0		&&			
ANR	1399028	EqualityExpression	lastc != OUT		1398693	0		!=			
ANR	1399029	Identifier	lastc		1398693	0					
ANR	1399030	Identifier	OUT		1398693	1					
ANR	1399031	CallExpression	ISWORD ( lastc )		1398693	1					
ANR	1399032	Callee	ISWORD		1398693	0					
ANR	1399033	Identifier	ISWORD		1398693	0					
ANR	1399034	ArgumentList	lastc		1398693	1					
ANR	1399035	Argument	lastc		1398693	0					
ANR	1399036	Identifier	lastc		1398693	0					
ANR	1399037	OrExpression	flagch == EOL || ( c != OUT && ! ISWORD ( c ) )		1398693	1		||			
ANR	1399038	EqualityExpression	flagch == EOL		1398693	0		==			
ANR	1399039	Identifier	flagch		1398693	0					
ANR	1399040	Identifier	EOL		1398693	1					
ANR	1399041	AndExpression	c != OUT && ! ISWORD ( c )		1398693	1		&&			
ANR	1399042	EqualityExpression	c != OUT		1398693	0		!=			
ANR	1399043	Identifier	c		1398693	0					
ANR	1399044	Identifier	OUT		1398693	1					
ANR	1399045	UnaryOperationExpression	! ISWORD ( c )		1398693	1					
ANR	1399046	UnaryOperator	!		1398693	0					
ANR	1399047	CallExpression	ISWORD ( c )		1398693	1					
ANR	1399048	Callee	ISWORD		1398693	0					
ANR	1399049	Identifier	ISWORD		1398693	0					
ANR	1399050	ArgumentList	c		1398693	1					
ANR	1399051	Argument	c		1398693	0					
ANR	1399052	Identifier	c		1398693	0					
ANR	1399053	CompoundStatement		48:50:1258:1258	1398693	1					
ANR	1399054	ExpressionStatement	flagch = EOW	855:3:22138:22150	1398693	0	True				
ANR	1399055	AssignmentExpression	flagch = EOW		1398693	0		=			
ANR	1399056	Identifier	flagch		1398693	0					
ANR	1399057	Identifier	EOW		1398693	1					
ANR	1399058	IfStatement	if ( flagch == BOW || flagch == EOW )		1398693	9					
ANR	1399059	Condition	flagch == BOW || flagch == EOW	857:6:22162:22191	1398693	0	True				
ANR	1399060	OrExpression	flagch == BOW || flagch == EOW		1398693	0		||			
ANR	1399061	EqualityExpression	flagch == BOW		1398693	0		==			
ANR	1399062	Identifier	flagch		1398693	0					
ANR	1399063	Identifier	BOW		1398693	1					
ANR	1399064	EqualityExpression	flagch == EOW		1398693	1		==			
ANR	1399065	Identifier	flagch		1398693	0					
ANR	1399066	Identifier	EOW		1398693	1					
ANR	1399067	CompoundStatement		51:38:1319:1319	1398693	1					
ANR	1399068	ExpressionStatement	"st = step ( m -> g , startst , stopst , st , flagch , st )"	858:3:22199:22247	1398693	0	True				
ANR	1399069	AssignmentExpression	"st = step ( m -> g , startst , stopst , st , flagch , st )"		1398693	0		=			
ANR	1399070	Identifier	st		1398693	0					
ANR	1399071	CallExpression	"step ( m -> g , startst , stopst , st , flagch , st )"		1398693	1					
ANR	1399072	Callee	step		1398693	0					
ANR	1399073	Identifier	step		1398693	0					
ANR	1399074	ArgumentList	m -> g		1398693	1					
ANR	1399075	Argument	m -> g		1398693	0					
ANR	1399076	PtrMemberAccess	m -> g		1398693	0					
ANR	1399077	Identifier	m		1398693	0					
ANR	1399078	Identifier	g		1398693	1					
ANR	1399079	Argument	startst		1398693	1					
ANR	1399080	Identifier	startst		1398693	0					
ANR	1399081	Argument	stopst		1398693	2					
ANR	1399082	Identifier	stopst		1398693	0					
ANR	1399083	Argument	st		1398693	3					
ANR	1399084	Identifier	st		1398693	0					
ANR	1399085	Argument	flagch		1398693	4					
ANR	1399086	Identifier	flagch		1398693	0					
ANR	1399087	Argument	st		1398693	5					
ANR	1399088	Identifier	st		1398693	0					
ANR	1399089	ExpressionStatement	"SP ( ""sboweow"" , st , c )"	859:3:22252:22272	1398693	1	True				
ANR	1399090	CallExpression	"SP ( ""sboweow"" , st , c )"		1398693	0					
ANR	1399091	Callee	SP		1398693	0					
ANR	1399092	Identifier	SP		1398693	0					
ANR	1399093	ArgumentList	"""sboweow"""		1398693	1					
ANR	1399094	Argument	"""sboweow"""		1398693	0					
ANR	1399095	PrimaryExpression	"""sboweow"""		1398693	0					
ANR	1399096	Argument	st		1398693	1					
ANR	1399097	Identifier	st		1398693	0					
ANR	1399098	Argument	c		1398693	2					
ANR	1399099	Identifier	c		1398693	0					
ANR	1399100	IfStatement	"if ( ISSET ( st , stopst ) )"		1398693	10					
ANR	1399101	Condition	"ISSET ( st , stopst )"	863:6:22306:22322	1398693	0	True				
ANR	1399102	CallExpression	"ISSET ( st , stopst )"		1398693	0					
ANR	1399103	Callee	ISSET		1398693	0					
ANR	1399104	Identifier	ISSET		1398693	0					
ANR	1399105	ArgumentList	st		1398693	1					
ANR	1399106	Argument	st		1398693	0					
ANR	1399107	Identifier	st		1398693	0					
ANR	1399108	Argument	stopst		1398693	1					
ANR	1399109	Identifier	stopst		1398693	0					
ANR	1399110	ExpressionStatement	matchp = p	864:3:22328:22338	1398693	1	True				
ANR	1399111	AssignmentExpression	matchp = p		1398693	0		=			
ANR	1399112	Identifier	matchp		1398693	0					
ANR	1399113	Identifier	p		1398693	1					
ANR	1399114	IfStatement	"if ( EQ ( st , empty ) || p == stop )"		1398693	11					
ANR	1399115	Condition	"EQ ( st , empty ) || p == stop"	865:6:22346:22371	1398693	0	True				
ANR	1399116	OrExpression	"EQ ( st , empty ) || p == stop"		1398693	0		||			
ANR	1399117	CallExpression	"EQ ( st , empty )"		1398693	0					
ANR	1399118	Callee	EQ		1398693	0					
ANR	1399119	Identifier	EQ		1398693	0					
ANR	1399120	ArgumentList	st		1398693	1					
ANR	1399121	Argument	st		1398693	0					
ANR	1399122	Identifier	st		1398693	0					
ANR	1399123	Argument	empty		1398693	1					
ANR	1399124	Identifier	empty		1398693	0					
ANR	1399125	EqualityExpression	p == stop		1398693	1		==			
ANR	1399126	Identifier	p		1398693	0					
ANR	1399127	Identifier	stop		1398693	1					
ANR	1399128	BreakStatement	break ;	866:3:22377:22382	1398693	1	True				
ANR	1399129	ExpressionStatement	"ASSIGN ( tmp , st )"	869:2:22454:22469	1398693	12	True				
ANR	1399130	CallExpression	"ASSIGN ( tmp , st )"		1398693	0					
ANR	1399131	Callee	ASSIGN		1398693	0					
ANR	1399132	Identifier	ASSIGN		1398693	0					
ANR	1399133	ArgumentList	tmp		1398693	1					
ANR	1399134	Argument	tmp		1398693	0					
ANR	1399135	Identifier	tmp		1398693	0					
ANR	1399136	Argument	st		1398693	1					
ANR	1399137	Identifier	st		1398693	0					
ANR	1399138	ExpressionStatement	"ASSIGN ( st , empty )"	870:2:22473:22490	1398693	13	True				
ANR	1399139	CallExpression	"ASSIGN ( st , empty )"		1398693	0					
ANR	1399140	Callee	ASSIGN		1398693	0					
ANR	1399141	Identifier	ASSIGN		1398693	0					
ANR	1399142	ArgumentList	st		1398693	1					
ANR	1399143	Argument	st		1398693	0					
ANR	1399144	Identifier	st		1398693	0					
ANR	1399145	Argument	empty		1398693	1					
ANR	1399146	Identifier	empty		1398693	0					
ANR	1399147	IfStatement	if ( c == OUT )		1398693	14					
ANR	1399148	Condition	c == OUT	871:6:22498:22505	1398693	0	True				
ANR	1399149	EqualityExpression	c == OUT		1398693	0		==			
ANR	1399150	Identifier	c		1398693	0					
ANR	1399151	Identifier	OUT		1398693	1					
ANR	1399152	CompoundStatement		65:16:1633:1633	1398693	1					
ANR	1399153	BreakStatement	break ;	872:3:22513:22518	1398693	0	True				
ANR	1399154	ExpressionStatement	"st = step ( m -> g , startst , stopst , tmp , c , st )"	874:2:22526:22570	1398693	15	True				
ANR	1399155	AssignmentExpression	"st = step ( m -> g , startst , stopst , tmp , c , st )"		1398693	0		=			
ANR	1399156	Identifier	st		1398693	0					
ANR	1399157	CallExpression	"step ( m -> g , startst , stopst , tmp , c , st )"		1398693	1					
ANR	1399158	Callee	step		1398693	0					
ANR	1399159	Identifier	step		1398693	0					
ANR	1399160	ArgumentList	m -> g		1398693	1					
ANR	1399161	Argument	m -> g		1398693	0					
ANR	1399162	PtrMemberAccess	m -> g		1398693	0					
ANR	1399163	Identifier	m		1398693	0					
ANR	1399164	Identifier	g		1398693	1					
ANR	1399165	Argument	startst		1398693	1					
ANR	1399166	Identifier	startst		1398693	0					
ANR	1399167	Argument	stopst		1398693	2					
ANR	1399168	Identifier	stopst		1398693	0					
ANR	1399169	Argument	tmp		1398693	3					
ANR	1399170	Identifier	tmp		1398693	0					
ANR	1399171	Argument	c		1398693	4					
ANR	1399172	Identifier	c		1398693	0					
ANR	1399173	Argument	st		1398693	5					
ANR	1399174	Identifier	st		1398693	0					
ANR	1399175	ExpressionStatement	"SP ( ""saft"" , st , c )"	875:2:22574:22591	1398693	16	True				
ANR	1399176	CallExpression	"SP ( ""saft"" , st , c )"		1398693	0					
ANR	1399177	Callee	SP		1398693	0					
ANR	1399178	Identifier	SP		1398693	0					
ANR	1399179	ArgumentList	"""saft"""		1398693	1					
ANR	1399180	Argument	"""saft"""		1398693	0					
ANR	1399181	PrimaryExpression	"""saft"""		1398693	0					
ANR	1399182	Argument	st		1398693	1					
ANR	1399183	Identifier	st		1398693	0					
ANR	1399184	Argument	c		1398693	2					
ANR	1399185	Identifier	c		1398693	0					
ANR	1399186	IfStatement	"if ( ! EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st ) )"		1398693	17					
ANR	1399187	Condition	"! EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st )"	876:6:22599:22651	1398693	0	True				
ANR	1399188	UnaryOperationExpression	"! EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st )"		1398693	0					
ANR	1399189	UnaryOperator	!		1398693	0					
ANR	1399190	CallExpression	"EQ ( step ( m -> g , startst , stopst , st , NOTHING , st ) , st )"		1398693	1					
ANR	1399191	Callee	EQ		1398693	0					
ANR	1399192	Identifier	EQ		1398693	0					
ANR	1399193	ArgumentList	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398693	1					
ANR	1399194	Argument	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398693	0					
ANR	1399195	CallExpression	"step ( m -> g , startst , stopst , st , NOTHING , st )"		1398693	0					
ANR	1399196	Callee	step		1398693	0					
ANR	1399197	Identifier	step		1398693	0					
ANR	1399198	ArgumentList	m -> g		1398693	1					
ANR	1399199	Argument	m -> g		1398693	0					
ANR	1399200	PtrMemberAccess	m -> g		1398693	0					
ANR	1399201	Identifier	m		1398693	0					
ANR	1399202	Identifier	g		1398693	1					
ANR	1399203	Argument	startst		1398693	1					
ANR	1399204	Identifier	startst		1398693	0					
ANR	1399205	Argument	stopst		1398693	2					
ANR	1399206	Identifier	stopst		1398693	0					
ANR	1399207	Argument	st		1398693	3					
ANR	1399208	Identifier	st		1398693	0					
ANR	1399209	Argument	NOTHING		1398693	4					
ANR	1399210	Identifier	NOTHING		1398693	0					
ANR	1399211	Argument	st		1398693	5					
ANR	1399212	Identifier	st		1398693	0					
ANR	1399213	Argument	st		1398693	1					
ANR	1399214	Identifier	st		1398693	0					
ANR	1399215	CompoundStatement		70:61:1779:1779	1398693	1					
ANR	1399216	BreakStatement	break ;	877:3:22659:22664	1398693	0	True				
ANR	1399217	ExpressionStatement	p ++	879:2:22672:22675	1398693	18	True				
ANR	1399218	PostIncDecOperationExpression	p ++		1398693	0					
ANR	1399219	Identifier	p		1398693	0					
ANR	1399220	IncDec	++		1398693	1					
ANR	1399221	ReturnStatement	return ( matchp ) ;	882:1:22682:22696	1398693	16	True				
ANR	1399222	Identifier	matchp		1398693	0					
ANR	1399223	ReturnType	static char *		1398693	1					
ANR	1399224	Identifier	slow		1398693	2					
ANR	1399225	ParameterList	"struct match * m , char * start , char * stop , sopno startst , sopno stopst"		1398693	3					
ANR	1399226	Parameter	struct match * m	806:5:20803:20817	1398693	0	True				
ANR	1399227	ParameterType	struct match *		1398693	0					
ANR	1399228	Identifier	m		1398693	1					
ANR	1399229	Parameter	char * start	806:22:20820:20830	1398693	1	True				
ANR	1399230	ParameterType	char *		1398693	0					
ANR	1399231	Identifier	start		1398693	1					
ANR	1399232	Parameter	char * stop	806:35:20833:20842	1398693	2	True				
ANR	1399233	ParameterType	char *		1398693	0					
ANR	1399234	Identifier	stop		1398693	1					
ANR	1399235	Parameter	sopno startst	806:47:20845:20857	1398693	3	True				
ANR	1399236	ParameterType	sopno		1398693	0					
ANR	1399237	Identifier	startst		1398693	1					
ANR	1399238	Parameter	sopno stopst	806:62:20860:20871	1398693	4	True				
ANR	1399239	ParameterType	sopno		1398693	0					
ANR	1399240	Identifier	stopst		1398693	1					
ANR	1399241	CFGEntryNode	ENTRY		1398693		True				
ANR	1399242	CFGExitNode	EXIT		1398693		True				
ANR	1399243	InfiniteForNode	true		1398693		True				
ANR	1399244	Symbol	m -> g -> cflags		1398693						
ANR	1399245	Symbol	R_REGEX_NOTEOL		1398693						
ANR	1399246	Symbol	m -> st		1398693						
ANR	1399247	Symbol	matchp		1398693						
ANR	1399248	Symbol	R_REGEX_NOTBOL		1398693						
ANR	1399249	Symbol	* start		1398693						
ANR	1399250	Symbol	m -> g -> neol		1398693						
ANR	1399251	Symbol	* ( start - 1 )		1398693						
ANR	1399252	Symbol	empty		1398693						
ANR	1399253	Symbol	m -> g -> nbol		1398693						
ANR	1399254	Symbol	m -> tmp		1398693						
ANR	1399255	Symbol	* m -> g		1398693						
ANR	1399256	Symbol	m -> endp		1398693						
ANR	1399257	Symbol	m -> eflags		1398693						
ANR	1399258	Symbol	lastc		1398693						
ANR	1399259	Symbol	m -> g		1398693						
ANR	1399260	Symbol	tmp		1398693						
ANR	1399261	Symbol	NOTHING		1398693						
ANR	1399262	Symbol	* * m		1398693						
ANR	1399263	Symbol	BOL		1398693						
ANR	1399264	Symbol	st		1398693						
ANR	1399265	Symbol	c		1398693						
ANR	1399266	Symbol	m -> beginp		1398693						
ANR	1399267	Symbol	NULL		1398693						
ANR	1399268	Symbol	EOL		1398693						
ANR	1399269	Symbol	start		1398693						
ANR	1399270	Symbol	startst		1398693						
ANR	1399271	Symbol	i		1398693						
ANR	1399272	Symbol	BOW		1398693						
ANR	1399273	Symbol	EOW		1398693						
ANR	1399274	Symbol	EQ		1398693						
ANR	1399275	Symbol	m		1398693						
ANR	1399276	Symbol	OUT		1398693						
ANR	1399277	Symbol	p		1398693						
ANR	1399278	Symbol	ISSET		1398693						
ANR	1399279	Symbol	stop		1398693						
ANR	1399280	Symbol	m -> empty		1398693						
ANR	1399281	Symbol	stopst		1398693						
ANR	1399282	Symbol	* m		1398693						
ANR	1399283	Symbol	ISWORD		1398693						
ANR	1399284	Symbol	* p		1398693						
ANR	1399285	Symbol	step		1398693						
ANR	1399286	Symbol	flagch		1398693						
ANR	1399287	Symbol	R_REGEX_NEWLINE		1398693						
ANR	1399288	Symbol	BOLEOL		1398693						
ANR	1399289	Function	step	889:0:22782:25426							
ANR	1399290	FunctionDef	"step (struct re_guts * g , sopno start , sopno stop , states bef , int ch , states aft)"		1399289	0					
ANR	1399291	CompoundStatement		896:0:23084:25426	1399289	0					
ANR	1399292	IdentifierDeclStatement	cset * cs ;	897:1:23087:23095	1399289	0	True				
ANR	1399293	IdentifierDecl	* cs		1399289	0					
ANR	1399294	IdentifierDeclType	cset *		1399289	0					
ANR	1399295	Identifier	cs		1399289	1					
ANR	1399296	IdentifierDeclStatement	sop s ;	898:1:23098:23103	1399289	1	True				
ANR	1399297	IdentifierDecl	s		1399289	0					
ANR	1399298	IdentifierDeclType	sop		1399289	0					
ANR	1399299	Identifier	s		1399289	1					
ANR	1399300	IdentifierDeclStatement	sopno pc ;	899:1:23106:23114	1399289	2	True				
ANR	1399301	IdentifierDecl	pc		1399289	0					
ANR	1399302	IdentifierDeclType	sopno		1399289	0					
ANR	1399303	Identifier	pc		1399289	1					
ANR	1399304	IdentifierDeclStatement	onestate here ;	900:1:23117:23130	1399289	3	True				
ANR	1399305	IdentifierDecl	here		1399289	0					
ANR	1399306	IdentifierDeclType	onestate		1399289	0					
ANR	1399307	Identifier	here		1399289	1					
ANR	1399308	IdentifierDeclStatement	sopno look ;	901:1:23168:23178	1399289	4	True				
ANR	1399309	IdentifierDecl	look		1399289	0					
ANR	1399310	IdentifierDeclType	sopno		1399289	0					
ANR	1399311	Identifier	look		1399289	1					
ANR	1399312	IdentifierDeclStatement	int i ;	902:1:23181:23186	1399289	5	True				
ANR	1399313	IdentifierDecl	i		1399289	0					
ANR	1399314	IdentifierDeclType	int		1399289	0					
ANR	1399315	Identifier	i		1399289	1					
ANR	1399316	ForStatement	"for ( pc = start , INIT ( here , pc ) ; pc != stop ; pc ++ , INC ( here ) )"		1399289	6					
ANR	1399317	ForInit	"pc = start , INIT ( here , pc ) ;"	904:6:23195:23221	1399289	0	True				
ANR	1399318	Expression	"pc = start , INIT ( here , pc )"		1399289	0					
ANR	1399319	AssignmentExpression	pc = start		1399289	0		=			
ANR	1399320	Identifier	pc		1399289	0					
ANR	1399321	Identifier	start		1399289	1					
ANR	1399322	CallExpression	"INIT ( here , pc )"		1399289	1					
ANR	1399323	Callee	INIT		1399289	0					
ANR	1399324	Identifier	INIT		1399289	0					
ANR	1399325	ArgumentList	here		1399289	1					
ANR	1399326	Argument	here		1399289	0					
ANR	1399327	Identifier	here		1399289	0					
ANR	1399328	Argument	pc		1399289	1					
ANR	1399329	Identifier	pc		1399289	0					
ANR	1399330	Condition	pc != stop	904:34:23223:23232	1399289	1	True				
ANR	1399331	EqualityExpression	pc != stop		1399289	0		!=			
ANR	1399332	Identifier	pc		1399289	0					
ANR	1399333	Identifier	stop		1399289	1					
ANR	1399334	Expression	"pc ++ , INC ( here )"	904:46:23235:23249	1399289	2	True				
ANR	1399335	PostIncDecOperationExpression	pc ++		1399289	0					
ANR	1399336	Identifier	pc		1399289	0					
ANR	1399337	IncDec	++		1399289	1					
ANR	1399338	CallExpression	INC ( here )		1399289	1					
ANR	1399339	Callee	INC		1399289	0					
ANR	1399340	Identifier	INC		1399289	0					
ANR	1399341	ArgumentList	here		1399289	1					
ANR	1399342	Argument	here		1399289	0					
ANR	1399343	Identifier	here		1399289	0					
ANR	1399344	CompoundStatement		9:63:167:167	1399289	3					
ANR	1399345	ExpressionStatement	s = g -> strip [ pc ]	905:2:23256:23272	1399289	0	True				
ANR	1399346	AssignmentExpression	s = g -> strip [ pc ]		1399289	0		=			
ANR	1399347	Identifier	s		1399289	0					
ANR	1399348	ArrayIndexing	g -> strip [ pc ]		1399289	1					
ANR	1399349	PtrMemberAccess	g -> strip		1399289	0					
ANR	1399350	Identifier	g		1399289	0					
ANR	1399351	Identifier	strip		1399289	1					
ANR	1399352	Identifier	pc		1399289	1					
ANR	1399353	SwitchStatement	switch ( OP ( s ) )		1399289	1					
ANR	1399354	Condition	OP ( s )	906:10:23284:23288	1399289	0	True				
ANR	1399355	CallExpression	OP ( s )		1399289	0					
ANR	1399356	Callee	OP		1399289	0					
ANR	1399357	Identifier	OP		1399289	0					
ANR	1399358	ArgumentList	s		1399289	1					
ANR	1399359	Argument	s		1399289	0					
ANR	1399360	Identifier	s		1399289	0					
ANR	1399361	CompoundStatement		11:17:206:206	1399289	1					
ANR	1399362	Label	case OEND :	907:2:23295:23304	1399289	0	True				
ANR	1399363	Identifier	OEND		1399289	0					
ANR	1399364	BreakStatement	break ;	908:3:23309:23314	1399289	1	True				
ANR	1399365	Label	case OCHAR :	909:2:23318:23328	1399289	2	True				
ANR	1399366	Identifier	OCHAR		1399289	0					
ANR	1399367	IfStatement	if ( ! NONCHAR ( ch ) || ch != ( char ) OPND ( s ) )		1399289	3					
ANR	1399368	Condition	! NONCHAR ( ch ) || ch != ( char ) OPND ( s )	911:7:23372:23406	1399289	0	True				
ANR	1399369	OrExpression	! NONCHAR ( ch ) || ch != ( char ) OPND ( s )		1399289	0		||			
ANR	1399370	UnaryOperationExpression	! NONCHAR ( ch )		1399289	0					
ANR	1399371	UnaryOperator	!		1399289	0					
ANR	1399372	CallExpression	NONCHAR ( ch )		1399289	1					
ANR	1399373	Callee	NONCHAR		1399289	0					
ANR	1399374	Identifier	NONCHAR		1399289	0					
ANR	1399375	ArgumentList	ch		1399289	1					
ANR	1399376	Argument	ch		1399289	0					
ANR	1399377	Identifier	ch		1399289	0					
ANR	1399378	EqualityExpression	ch != ( char ) OPND ( s )		1399289	1		!=			
ANR	1399379	Identifier	ch		1399289	0					
ANR	1399380	CastExpression	( char ) OPND ( s )		1399289	1					
ANR	1399381	CastTarget	char		1399289	0					
ANR	1399382	CallExpression	OPND ( s )		1399289	1					
ANR	1399383	Callee	OPND		1399289	0					
ANR	1399384	Identifier	OPND		1399289	0					
ANR	1399385	ArgumentList	s		1399289	1					
ANR	1399386	Argument	s		1399289	0					
ANR	1399387	Identifier	s		1399289	0					
ANR	1399388	CompoundStatement		16:44:324:324	1399289	1					
ANR	1399389	IfStatement	if ( ch == ( char ) OPND ( s ) )		1399289	0					
ANR	1399390	Condition	ch == ( char ) OPND ( s )	912:8:23419:23437	1399289	0	True				
ANR	1399391	EqualityExpression	ch == ( char ) OPND ( s )		1399289	0		==			
ANR	1399392	Identifier	ch		1399289	0					
ANR	1399393	CastExpression	( char ) OPND ( s )		1399289	1					
ANR	1399394	CastTarget	char		1399289	0					
ANR	1399395	CallExpression	OPND ( s )		1399289	1					
ANR	1399396	Callee	OPND		1399289	0					
ANR	1399397	Identifier	OPND		1399289	0					
ANR	1399398	ArgumentList	s		1399289	1					
ANR	1399399	Argument	s		1399289	0					
ANR	1399400	Identifier	s		1399289	0					
ANR	1399401	ExpressionStatement	"FWD ( aft , bef , 1 )"	913:5:23445:23461	1399289	1	True				
ANR	1399402	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399403	Callee	FWD		1399289	0					
ANR	1399404	Identifier	FWD		1399289	0					
ANR	1399405	ArgumentList	aft		1399289	1					
ANR	1399406	Argument	aft		1399289	0					
ANR	1399407	Identifier	aft		1399289	0					
ANR	1399408	Argument	bef		1399289	1					
ANR	1399409	Identifier	bef		1399289	0					
ANR	1399410	Argument	1		1399289	2					
ANR	1399411	PrimaryExpression	1		1399289	0					
ANR	1399412	BreakStatement	break ;	915:3:23471:23476	1399289	4	True				
ANR	1399413	Label	case OBOL :	916:2:23480:23489	1399289	5	True				
ANR	1399414	Identifier	OBOL		1399289	0					
ANR	1399415	IfStatement	if ( ch == BOL || ch == BOLEOL )		1399289	6					
ANR	1399416	Condition	ch == BOL || ch == BOLEOL	917:7:23498:23522	1399289	0	True				
ANR	1399417	OrExpression	ch == BOL || ch == BOLEOL		1399289	0		||			
ANR	1399418	EqualityExpression	ch == BOL		1399289	0		==			
ANR	1399419	Identifier	ch		1399289	0					
ANR	1399420	Identifier	BOL		1399289	1					
ANR	1399421	EqualityExpression	ch == BOLEOL		1399289	1		==			
ANR	1399422	Identifier	ch		1399289	0					
ANR	1399423	Identifier	BOLEOL		1399289	1					
ANR	1399424	ExpressionStatement	"FWD ( aft , bef , 1 )"	918:4:23529:23545	1399289	1	True				
ANR	1399425	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399426	Callee	FWD		1399289	0					
ANR	1399427	Identifier	FWD		1399289	0					
ANR	1399428	ArgumentList	aft		1399289	1					
ANR	1399429	Argument	aft		1399289	0					
ANR	1399430	Identifier	aft		1399289	0					
ANR	1399431	Argument	bef		1399289	1					
ANR	1399432	Identifier	bef		1399289	0					
ANR	1399433	Argument	1		1399289	2					
ANR	1399434	PrimaryExpression	1		1399289	0					
ANR	1399435	BreakStatement	break ;	919:3:23550:23555	1399289	7	True				
ANR	1399436	Label	case OEOL :	920:2:23559:23568	1399289	8	True				
ANR	1399437	Identifier	OEOL		1399289	0					
ANR	1399438	IfStatement	if ( ch == EOL || ch == BOLEOL )		1399289	9					
ANR	1399439	Condition	ch == EOL || ch == BOLEOL	921:7:23577:23601	1399289	0	True				
ANR	1399440	OrExpression	ch == EOL || ch == BOLEOL		1399289	0		||			
ANR	1399441	EqualityExpression	ch == EOL		1399289	0		==			
ANR	1399442	Identifier	ch		1399289	0					
ANR	1399443	Identifier	EOL		1399289	1					
ANR	1399444	EqualityExpression	ch == BOLEOL		1399289	1		==			
ANR	1399445	Identifier	ch		1399289	0					
ANR	1399446	Identifier	BOLEOL		1399289	1					
ANR	1399447	ExpressionStatement	"FWD ( aft , bef , 1 )"	922:4:23608:23624	1399289	1	True				
ANR	1399448	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399449	Callee	FWD		1399289	0					
ANR	1399450	Identifier	FWD		1399289	0					
ANR	1399451	ArgumentList	aft		1399289	1					
ANR	1399452	Argument	aft		1399289	0					
ANR	1399453	Identifier	aft		1399289	0					
ANR	1399454	Argument	bef		1399289	1					
ANR	1399455	Identifier	bef		1399289	0					
ANR	1399456	Argument	1		1399289	2					
ANR	1399457	PrimaryExpression	1		1399289	0					
ANR	1399458	BreakStatement	break ;	923:3:23629:23634	1399289	10	True				
ANR	1399459	Label	case OBOW :	924:2:23638:23647	1399289	11	True				
ANR	1399460	Identifier	OBOW		1399289	0					
ANR	1399461	IfStatement	if ( ch == BOW )		1399289	12					
ANR	1399462	Condition	ch == BOW	925:7:23656:23664	1399289	0	True				
ANR	1399463	EqualityExpression	ch == BOW		1399289	0		==			
ANR	1399464	Identifier	ch		1399289	0					
ANR	1399465	Identifier	BOW		1399289	1					
ANR	1399466	ExpressionStatement	"FWD ( aft , bef , 1 )"	926:4:23671:23687	1399289	1	True				
ANR	1399467	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399468	Callee	FWD		1399289	0					
ANR	1399469	Identifier	FWD		1399289	0					
ANR	1399470	ArgumentList	aft		1399289	1					
ANR	1399471	Argument	aft		1399289	0					
ANR	1399472	Identifier	aft		1399289	0					
ANR	1399473	Argument	bef		1399289	1					
ANR	1399474	Identifier	bef		1399289	0					
ANR	1399475	Argument	1		1399289	2					
ANR	1399476	PrimaryExpression	1		1399289	0					
ANR	1399477	BreakStatement	break ;	927:3:23692:23697	1399289	13	True				
ANR	1399478	Label	case OEOW :	928:2:23701:23710	1399289	14	True				
ANR	1399479	Identifier	OEOW		1399289	0					
ANR	1399480	IfStatement	if ( ch == EOW )		1399289	15					
ANR	1399481	Condition	ch == EOW	929:7:23719:23727	1399289	0	True				
ANR	1399482	EqualityExpression	ch == EOW		1399289	0		==			
ANR	1399483	Identifier	ch		1399289	0					
ANR	1399484	Identifier	EOW		1399289	1					
ANR	1399485	ExpressionStatement	"FWD ( aft , bef , 1 )"	930:4:23734:23750	1399289	1	True				
ANR	1399486	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399487	Callee	FWD		1399289	0					
ANR	1399488	Identifier	FWD		1399289	0					
ANR	1399489	ArgumentList	aft		1399289	1					
ANR	1399490	Argument	aft		1399289	0					
ANR	1399491	Identifier	aft		1399289	0					
ANR	1399492	Argument	bef		1399289	1					
ANR	1399493	Identifier	bef		1399289	0					
ANR	1399494	Argument	1		1399289	2					
ANR	1399495	PrimaryExpression	1		1399289	0					
ANR	1399496	BreakStatement	break ;	931:3:23755:23760	1399289	16	True				
ANR	1399497	Label	case OANY :	932:2:23764:23773	1399289	17	True				
ANR	1399498	Identifier	OANY		1399289	0					
ANR	1399499	IfStatement	if ( ! NONCHAR ( ch ) )		1399289	18					
ANR	1399500	Condition	! NONCHAR ( ch )	933:7:23782:23793	1399289	0	True				
ANR	1399501	UnaryOperationExpression	! NONCHAR ( ch )		1399289	0					
ANR	1399502	UnaryOperator	!		1399289	0					
ANR	1399503	CallExpression	NONCHAR ( ch )		1399289	1					
ANR	1399504	Callee	NONCHAR		1399289	0					
ANR	1399505	Identifier	NONCHAR		1399289	0					
ANR	1399506	ArgumentList	ch		1399289	1					
ANR	1399507	Argument	ch		1399289	0					
ANR	1399508	Identifier	ch		1399289	0					
ANR	1399509	ExpressionStatement	"FWD ( aft , bef , 1 )"	934:4:23800:23816	1399289	1	True				
ANR	1399510	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399511	Callee	FWD		1399289	0					
ANR	1399512	Identifier	FWD		1399289	0					
ANR	1399513	ArgumentList	aft		1399289	1					
ANR	1399514	Argument	aft		1399289	0					
ANR	1399515	Identifier	aft		1399289	0					
ANR	1399516	Argument	bef		1399289	1					
ANR	1399517	Identifier	bef		1399289	0					
ANR	1399518	Argument	1		1399289	2					
ANR	1399519	PrimaryExpression	1		1399289	0					
ANR	1399520	BreakStatement	break ;	935:3:23821:23826	1399289	19	True				
ANR	1399521	Label	case OANYOF :	936:2:23830:23841	1399289	20	True				
ANR	1399522	Identifier	OANYOF		1399289	0					
ANR	1399523	ExpressionStatement	cs = & g -> sets [ OPND ( s ) ]	937:3:23846:23868	1399289	21	True				
ANR	1399524	AssignmentExpression	cs = & g -> sets [ OPND ( s ) ]		1399289	0		=			
ANR	1399525	Identifier	cs		1399289	0					
ANR	1399526	UnaryOperationExpression	& g -> sets [ OPND ( s ) ]		1399289	1					
ANR	1399527	UnaryOperator	&		1399289	0					
ANR	1399528	ArrayIndexing	g -> sets [ OPND ( s ) ]		1399289	1					
ANR	1399529	PtrMemberAccess	g -> sets		1399289	0					
ANR	1399530	Identifier	g		1399289	0					
ANR	1399531	Identifier	sets		1399289	1					
ANR	1399532	CallExpression	OPND ( s )		1399289	1					
ANR	1399533	Callee	OPND		1399289	0					
ANR	1399534	Identifier	OPND		1399289	0					
ANR	1399535	ArgumentList	s		1399289	1					
ANR	1399536	Argument	s		1399289	0					
ANR	1399537	Identifier	s		1399289	0					
ANR	1399538	IfStatement	"if ( ! NONCHAR ( ch ) && CHIN ( cs , ch ) )"		1399289	22					
ANR	1399539	Condition	"! NONCHAR ( ch ) && CHIN ( cs , ch )"	938:7:23877:23904	1399289	0	True				
ANR	1399540	AndExpression	"! NONCHAR ( ch ) && CHIN ( cs , ch )"		1399289	0		&&			
ANR	1399541	UnaryOperationExpression	! NONCHAR ( ch )		1399289	0					
ANR	1399542	UnaryOperator	!		1399289	0					
ANR	1399543	CallExpression	NONCHAR ( ch )		1399289	1					
ANR	1399544	Callee	NONCHAR		1399289	0					
ANR	1399545	Identifier	NONCHAR		1399289	0					
ANR	1399546	ArgumentList	ch		1399289	1					
ANR	1399547	Argument	ch		1399289	0					
ANR	1399548	Identifier	ch		1399289	0					
ANR	1399549	CallExpression	"CHIN ( cs , ch )"		1399289	1					
ANR	1399550	Callee	CHIN		1399289	0					
ANR	1399551	Identifier	CHIN		1399289	0					
ANR	1399552	ArgumentList	cs		1399289	1					
ANR	1399553	Argument	cs		1399289	0					
ANR	1399554	Identifier	cs		1399289	0					
ANR	1399555	Argument	ch		1399289	1					
ANR	1399556	Identifier	ch		1399289	0					
ANR	1399557	ExpressionStatement	"FWD ( aft , bef , 1 )"	939:4:23911:23927	1399289	1	True				
ANR	1399558	CallExpression	"FWD ( aft , bef , 1 )"		1399289	0					
ANR	1399559	Callee	FWD		1399289	0					
ANR	1399560	Identifier	FWD		1399289	0					
ANR	1399561	ArgumentList	aft		1399289	1					
ANR	1399562	Argument	aft		1399289	0					
ANR	1399563	Identifier	aft		1399289	0					
ANR	1399564	Argument	bef		1399289	1					
ANR	1399565	Identifier	bef		1399289	0					
ANR	1399566	Argument	1		1399289	2					
ANR	1399567	PrimaryExpression	1		1399289	0					
ANR	1399568	BreakStatement	break ;	940:3:23932:23937	1399289	23	True				
ANR	1399569	Label	case OBACK_ :	941:2:23941:23952	1399289	24	True				
ANR	1399570	Identifier	OBACK_		1399289	0					
ANR	1399571	Label	case O_BACK :	942:2:23976:23987	1399289	25	True				
ANR	1399572	Identifier	O_BACK		1399289	0					
ANR	1399573	ExpressionStatement	"FWD ( aft , aft , 1 )"	943:3:23992:24008	1399289	26	True				
ANR	1399574	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399575	Callee	FWD		1399289	0					
ANR	1399576	Identifier	FWD		1399289	0					
ANR	1399577	ArgumentList	aft		1399289	1					
ANR	1399578	Argument	aft		1399289	0					
ANR	1399579	Identifier	aft		1399289	0					
ANR	1399580	Argument	aft		1399289	1					
ANR	1399581	Identifier	aft		1399289	0					
ANR	1399582	Argument	1		1399289	2					
ANR	1399583	PrimaryExpression	1		1399289	0					
ANR	1399584	BreakStatement	break ;	944:3:24013:24018	1399289	27	True				
ANR	1399585	Label	case OPLUS_ :	945:2:24022:24033	1399289	28	True				
ANR	1399586	Identifier	OPLUS_		1399289	0					
ANR	1399587	ExpressionStatement	"FWD ( aft , aft , 1 )"	946:3:24076:24092	1399289	29	True				
ANR	1399588	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399589	Callee	FWD		1399289	0					
ANR	1399590	Identifier	FWD		1399289	0					
ANR	1399591	ArgumentList	aft		1399289	1					
ANR	1399592	Argument	aft		1399289	0					
ANR	1399593	Identifier	aft		1399289	0					
ANR	1399594	Argument	aft		1399289	1					
ANR	1399595	Identifier	aft		1399289	0					
ANR	1399596	Argument	1		1399289	2					
ANR	1399597	PrimaryExpression	1		1399289	0					
ANR	1399598	BreakStatement	break ;	947:3:24097:24102	1399289	30	True				
ANR	1399599	Label	case O_PLUS :	948:2:24106:24117	1399289	31	True				
ANR	1399600	Identifier	O_PLUS		1399289	0					
ANR	1399601	ExpressionStatement	"FWD ( aft , aft , 1 )"	949:3:24151:24167	1399289	32	True				
ANR	1399602	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399603	Callee	FWD		1399289	0					
ANR	1399604	Identifier	FWD		1399289	0					
ANR	1399605	ArgumentList	aft		1399289	1					
ANR	1399606	Argument	aft		1399289	0					
ANR	1399607	Identifier	aft		1399289	0					
ANR	1399608	Argument	aft		1399289	1					
ANR	1399609	Identifier	aft		1399289	0					
ANR	1399610	Argument	1		1399289	2					
ANR	1399611	PrimaryExpression	1		1399289	0					
ANR	1399612	ExpressionStatement	"i = ISSETBACK ( aft , OPND ( s ) )"	950:3:24172:24199	1399289	33	True				
ANR	1399613	AssignmentExpression	"i = ISSETBACK ( aft , OPND ( s ) )"		1399289	0		=			
ANR	1399614	Identifier	i		1399289	0					
ANR	1399615	CallExpression	"ISSETBACK ( aft , OPND ( s ) )"		1399289	1					
ANR	1399616	Callee	ISSETBACK		1399289	0					
ANR	1399617	Identifier	ISSETBACK		1399289	0					
ANR	1399618	ArgumentList	aft		1399289	1					
ANR	1399619	Argument	aft		1399289	0					
ANR	1399620	Identifier	aft		1399289	0					
ANR	1399621	Argument	OPND ( s )		1399289	1					
ANR	1399622	CallExpression	OPND ( s )		1399289	0					
ANR	1399623	Callee	OPND		1399289	0					
ANR	1399624	Identifier	OPND		1399289	0					
ANR	1399625	ArgumentList	s		1399289	1					
ANR	1399626	Argument	s		1399289	0					
ANR	1399627	Identifier	s		1399289	0					
ANR	1399628	ExpressionStatement	"BACK ( aft , aft , OPND ( s ) )"	951:3:24204:24227	1399289	34	True				
ANR	1399629	CallExpression	"BACK ( aft , aft , OPND ( s ) )"		1399289	0					
ANR	1399630	Callee	BACK		1399289	0					
ANR	1399631	Identifier	BACK		1399289	0					
ANR	1399632	ArgumentList	aft		1399289	1					
ANR	1399633	Argument	aft		1399289	0					
ANR	1399634	Identifier	aft		1399289	0					
ANR	1399635	Argument	aft		1399289	1					
ANR	1399636	Identifier	aft		1399289	0					
ANR	1399637	Argument	OPND ( s )		1399289	2					
ANR	1399638	CallExpression	OPND ( s )		1399289	0					
ANR	1399639	Callee	OPND		1399289	0					
ANR	1399640	Identifier	OPND		1399289	0					
ANR	1399641	ArgumentList	s		1399289	1					
ANR	1399642	Argument	s		1399289	0					
ANR	1399643	Identifier	s		1399289	0					
ANR	1399644	IfStatement	"if ( ! i && ISSETBACK ( aft , OPND ( s ) ) )"		1399289	35					
ANR	1399645	Condition	"! i && ISSETBACK ( aft , OPND ( s ) )"	952:7:24236:24264	1399289	0	True				
ANR	1399646	AndExpression	"! i && ISSETBACK ( aft , OPND ( s ) )"		1399289	0		&&			
ANR	1399647	UnaryOperationExpression	! i		1399289	0					
ANR	1399648	UnaryOperator	!		1399289	0					
ANR	1399649	Identifier	i		1399289	1					
ANR	1399650	CallExpression	"ISSETBACK ( aft , OPND ( s ) )"		1399289	1					
ANR	1399651	Callee	ISSETBACK		1399289	0					
ANR	1399652	Identifier	ISSETBACK		1399289	0					
ANR	1399653	ArgumentList	aft		1399289	1					
ANR	1399654	Argument	aft		1399289	0					
ANR	1399655	Identifier	aft		1399289	0					
ANR	1399656	Argument	OPND ( s )		1399289	1					
ANR	1399657	CallExpression	OPND ( s )		1399289	0					
ANR	1399658	Callee	OPND		1399289	0					
ANR	1399659	Identifier	OPND		1399289	0					
ANR	1399660	ArgumentList	s		1399289	1					
ANR	1399661	Argument	s		1399289	0					
ANR	1399662	Identifier	s		1399289	0					
ANR	1399663	CompoundStatement		57:38:1182:1182	1399289	1					
ANR	1399664	ExpressionStatement	pc -= OPND ( s ) + 1	954:4:24314:24331	1399289	0	True				
ANR	1399665	AssignmentExpression	pc -= OPND ( s ) + 1		1399289	0		-=			
ANR	1399666	Identifier	pc		1399289	0					
ANR	1399667	AdditiveExpression	OPND ( s ) + 1		1399289	1		+			
ANR	1399668	CallExpression	OPND ( s )		1399289	0					
ANR	1399669	Callee	OPND		1399289	0					
ANR	1399670	Identifier	OPND		1399289	0					
ANR	1399671	ArgumentList	s		1399289	1					
ANR	1399672	Argument	s		1399289	0					
ANR	1399673	Identifier	s		1399289	0					
ANR	1399674	PrimaryExpression	1		1399289	1					
ANR	1399675	ExpressionStatement	"INIT ( here , pc )"	955:4:24337:24351	1399289	1	True				
ANR	1399676	CallExpression	"INIT ( here , pc )"		1399289	0					
ANR	1399677	Callee	INIT		1399289	0					
ANR	1399678	Identifier	INIT		1399289	0					
ANR	1399679	ArgumentList	here		1399289	1					
ANR	1399680	Argument	here		1399289	0					
ANR	1399681	Identifier	here		1399289	0					
ANR	1399682	Argument	pc		1399289	1					
ANR	1399683	Identifier	pc		1399289	0					
ANR	1399684	BreakStatement	break ;	957:3:24361:24366	1399289	36	True				
ANR	1399685	Label	case OQUEST_ :	958:2:24370:24382	1399289	37	True				
ANR	1399686	Identifier	OQUEST_		1399289	0					
ANR	1399687	ExpressionStatement	"FWD ( aft , aft , 1 )"	959:3:24421:24437	1399289	38	True				
ANR	1399688	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399689	Callee	FWD		1399289	0					
ANR	1399690	Identifier	FWD		1399289	0					
ANR	1399691	ArgumentList	aft		1399289	1					
ANR	1399692	Argument	aft		1399289	0					
ANR	1399693	Identifier	aft		1399289	0					
ANR	1399694	Argument	aft		1399289	1					
ANR	1399695	Identifier	aft		1399289	0					
ANR	1399696	Argument	1		1399289	2					
ANR	1399697	PrimaryExpression	1		1399289	0					
ANR	1399698	ExpressionStatement	"FWD ( aft , aft , OPND ( s ) )"	960:3:24442:24464	1399289	39	True				
ANR	1399699	CallExpression	"FWD ( aft , aft , OPND ( s ) )"		1399289	0					
ANR	1399700	Callee	FWD		1399289	0					
ANR	1399701	Identifier	FWD		1399289	0					
ANR	1399702	ArgumentList	aft		1399289	1					
ANR	1399703	Argument	aft		1399289	0					
ANR	1399704	Identifier	aft		1399289	0					
ANR	1399705	Argument	aft		1399289	1					
ANR	1399706	Identifier	aft		1399289	0					
ANR	1399707	Argument	OPND ( s )		1399289	2					
ANR	1399708	CallExpression	OPND ( s )		1399289	0					
ANR	1399709	Callee	OPND		1399289	0					
ANR	1399710	Identifier	OPND		1399289	0					
ANR	1399711	ArgumentList	s		1399289	1					
ANR	1399712	Argument	s		1399289	0					
ANR	1399713	Identifier	s		1399289	0					
ANR	1399714	BreakStatement	break ;	961:3:24469:24474	1399289	40	True				
ANR	1399715	Label	case O_QUEST :	962:2:24478:24490	1399289	41	True				
ANR	1399716	Identifier	O_QUEST		1399289	0					
ANR	1399717	ExpressionStatement	"FWD ( aft , aft , 1 )"	963:3:24516:24532	1399289	42	True				
ANR	1399718	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399719	Callee	FWD		1399289	0					
ANR	1399720	Identifier	FWD		1399289	0					
ANR	1399721	ArgumentList	aft		1399289	1					
ANR	1399722	Argument	aft		1399289	0					
ANR	1399723	Identifier	aft		1399289	0					
ANR	1399724	Argument	aft		1399289	1					
ANR	1399725	Identifier	aft		1399289	0					
ANR	1399726	Argument	1		1399289	2					
ANR	1399727	PrimaryExpression	1		1399289	0					
ANR	1399728	BreakStatement	break ;	964:3:24537:24542	1399289	43	True				
ANR	1399729	Label	case OLPAREN :	965:2:24546:24558	1399289	44	True				
ANR	1399730	Identifier	OLPAREN		1399289	0					
ANR	1399731	Label	case ORPAREN :	966:2:24590:24602	1399289	45	True				
ANR	1399732	Identifier	ORPAREN		1399289	0					
ANR	1399733	ExpressionStatement	"FWD ( aft , aft , 1 )"	967:3:24607:24623	1399289	46	True				
ANR	1399734	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399735	Callee	FWD		1399289	0					
ANR	1399736	Identifier	FWD		1399289	0					
ANR	1399737	ArgumentList	aft		1399289	1					
ANR	1399738	Argument	aft		1399289	0					
ANR	1399739	Identifier	aft		1399289	0					
ANR	1399740	Argument	aft		1399289	1					
ANR	1399741	Identifier	aft		1399289	0					
ANR	1399742	Argument	1		1399289	2					
ANR	1399743	PrimaryExpression	1		1399289	0					
ANR	1399744	BreakStatement	break ;	968:3:24628:24633	1399289	47	True				
ANR	1399745	Label	case OCH_ :	969:2:24637:24646	1399289	48	True				
ANR	1399746	Identifier	OCH_		1399289	0					
ANR	1399747	ExpressionStatement	"FWD ( aft , aft , 1 )"	970:3:24686:24702	1399289	49	True				
ANR	1399748	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399749	Callee	FWD		1399289	0					
ANR	1399750	Identifier	FWD		1399289	0					
ANR	1399751	ArgumentList	aft		1399289	1					
ANR	1399752	Argument	aft		1399289	0					
ANR	1399753	Identifier	aft		1399289	0					
ANR	1399754	Argument	aft		1399289	1					
ANR	1399755	Identifier	aft		1399289	0					
ANR	1399756	Argument	1		1399289	2					
ANR	1399757	PrimaryExpression	1		1399289	0					
ANR	1399758	IfStatement	if ( ( OP ( g -> strip [ pc + OPND ( s ) ] ) != OOR2 ) )		1399289	50					
ANR	1399759	Condition	OP ( g -> strip [ pc + OPND ( s ) ] ) != OOR2	971:7:24711:24744	1399289	0	True				
ANR	1399760	EqualityExpression	OP ( g -> strip [ pc + OPND ( s ) ] ) != OOR2		1399289	0		!=			
ANR	1399761	CallExpression	OP ( g -> strip [ pc + OPND ( s ) ] )		1399289	0					
ANR	1399762	Callee	OP		1399289	0					
ANR	1399763	Identifier	OP		1399289	0					
ANR	1399764	ArgumentList	g -> strip [ pc + OPND ( s ) ]		1399289	1					
ANR	1399765	Argument	g -> strip [ pc + OPND ( s ) ]		1399289	0					
ANR	1399766	ArrayIndexing	g -> strip [ pc + OPND ( s ) ]		1399289	0					
ANR	1399767	PtrMemberAccess	g -> strip		1399289	0					
ANR	1399768	Identifier	g		1399289	0					
ANR	1399769	Identifier	strip		1399289	1					
ANR	1399770	AdditiveExpression	pc + OPND ( s )		1399289	1		+			
ANR	1399771	Identifier	pc		1399289	0					
ANR	1399772	CallExpression	OPND ( s )		1399289	1					
ANR	1399773	Callee	OPND		1399289	0					
ANR	1399774	Identifier	OPND		1399289	0					
ANR	1399775	ArgumentList	s		1399289	1					
ANR	1399776	Argument	s		1399289	0					
ANR	1399777	Identifier	s		1399289	0					
ANR	1399778	Identifier	OOR2		1399289	1					
ANR	1399779	CompoundStatement		76:43:1662:1662	1399289	1					
ANR	1399780	BreakStatement	break ;	972:4:24753:24758	1399289	0	True				
ANR	1399781	ExpressionStatement	"FWD ( aft , aft , OPND ( s ) )"	974:3:24768:24790	1399289	51	True				
ANR	1399782	CallExpression	"FWD ( aft , aft , OPND ( s ) )"		1399289	0					
ANR	1399783	Callee	FWD		1399289	0					
ANR	1399784	Identifier	FWD		1399289	0					
ANR	1399785	ArgumentList	aft		1399289	1					
ANR	1399786	Argument	aft		1399289	0					
ANR	1399787	Identifier	aft		1399289	0					
ANR	1399788	Argument	aft		1399289	1					
ANR	1399789	Identifier	aft		1399289	0					
ANR	1399790	Argument	OPND ( s )		1399289	2					
ANR	1399791	CallExpression	OPND ( s )		1399289	0					
ANR	1399792	Callee	OPND		1399289	0					
ANR	1399793	Identifier	OPND		1399289	0					
ANR	1399794	ArgumentList	s		1399289	1					
ANR	1399795	Argument	s		1399289	0					
ANR	1399796	Identifier	s		1399289	0					
ANR	1399797	BreakStatement	break ;	975:3:24795:24800	1399289	52	True				
ANR	1399798	Label	case OOR1 :	976:2:24804:24813	1399289	53	True				
ANR	1399799	Identifier	OOR1		1399289	0					
ANR	1399800	IfStatement	"if ( ISSTATEIN ( aft , here ) )"		1399289	54					
ANR	1399801	Condition	"ISSTATEIN ( aft , here )"	977:7:24858:24877	1399289	0	True				
ANR	1399802	CallExpression	"ISSTATEIN ( aft , here )"		1399289	0					
ANR	1399803	Callee	ISSTATEIN		1399289	0					
ANR	1399804	Identifier	ISSTATEIN		1399289	0					
ANR	1399805	ArgumentList	aft		1399289	1					
ANR	1399806	Argument	aft		1399289	0					
ANR	1399807	Identifier	aft		1399289	0					
ANR	1399808	Argument	here		1399289	1					
ANR	1399809	Identifier	here		1399289	0					
ANR	1399810	CompoundStatement		82:29:1795:1795	1399289	1					
ANR	1399811	ForStatement	for ( look = 1 ; OP ( s = g -> strip [ pc + look ] ) != O_CH ; look += OPND ( s ) )		1399289	0					
ANR	1399812	ForInit	look = 1 ;	978:9:24891:24899	1399289	0	True				
ANR	1399813	AssignmentExpression	look = 1		1399289	0		=			
ANR	1399814	Identifier	look		1399289	0					
ANR	1399815	PrimaryExpression	1		1399289	1					
ANR	1399816	Condition	OP ( s = g -> strip [ pc + look ] ) != O_CH	979:6:24907:24939	1399289	1	True				
ANR	1399817	EqualityExpression	OP ( s = g -> strip [ pc + look ] ) != O_CH		1399289	0		!=			
ANR	1399818	CallExpression	OP ( s = g -> strip [ pc + look ] )		1399289	0					
ANR	1399819	Callee	OP		1399289	0					
ANR	1399820	Identifier	OP		1399289	0					
ANR	1399821	ArgumentList	s = g -> strip [ pc + look ]		1399289	1					
ANR	1399822	Argument	s = g -> strip [ pc + look ]		1399289	0					
ANR	1399823	AssignmentExpression	s = g -> strip [ pc + look ]		1399289	0		=			
ANR	1399824	Identifier	s		1399289	0					
ANR	1399825	ArrayIndexing	g -> strip [ pc + look ]		1399289	1					
ANR	1399826	PtrMemberAccess	g -> strip		1399289	0					
ANR	1399827	Identifier	g		1399289	0					
ANR	1399828	Identifier	strip		1399289	1					
ANR	1399829	AdditiveExpression	pc + look		1399289	1		+			
ANR	1399830	Identifier	pc		1399289	0					
ANR	1399831	Identifier	look		1399289	1					
ANR	1399832	Identifier	O_CH		1399289	1					
ANR	1399833	AssignmentExpression	look += OPND ( s )	980:6:24948:24962	1399289	2	True	+=			
ANR	1399834	Identifier	look		1399289	0					
ANR	1399835	CallExpression	OPND ( s )		1399289	1					
ANR	1399836	Callee	OPND		1399289	0					
ANR	1399837	Identifier	OPND		1399289	0					
ANR	1399838	ArgumentList	s		1399289	1					
ANR	1399839	Argument	s		1399289	0					
ANR	1399840	Identifier	s		1399289	0					
ANR	1399841	CompoundStatement		85:23:1880:1880	1399289	3					
ANR	1399842	IfStatement	if ( OP ( s ) != OOR2 )		1399289	0					
ANR	1399843	Condition	OP ( s ) != OOR2	981:11:24978:24990	1399289	0	True				
ANR	1399844	EqualityExpression	OP ( s ) != OOR2		1399289	0		!=			
ANR	1399845	CallExpression	OP ( s )		1399289	0					
ANR	1399846	Callee	OP		1399289	0					
ANR	1399847	Identifier	OP		1399289	0					
ANR	1399848	ArgumentList	s		1399289	1					
ANR	1399849	Argument	s		1399289	0					
ANR	1399850	Identifier	s		1399289	0					
ANR	1399851	Identifier	OOR2		1399289	1					
ANR	1399852	CompoundStatement		86:26:1908:1908	1399289	1					
ANR	1399853	BreakStatement	break ;	982:8:25003:25008	1399289	0	True				
ANR	1399854	ExpressionStatement	"FWD ( aft , aft , look )"	985:4:25031:25050	1399289	1	True				
ANR	1399855	CallExpression	"FWD ( aft , aft , look )"		1399289	0					
ANR	1399856	Callee	FWD		1399289	0					
ANR	1399857	Identifier	FWD		1399289	0					
ANR	1399858	ArgumentList	aft		1399289	1					
ANR	1399859	Argument	aft		1399289	0					
ANR	1399860	Identifier	aft		1399289	0					
ANR	1399861	Argument	aft		1399289	1					
ANR	1399862	Identifier	aft		1399289	0					
ANR	1399863	Argument	look		1399289	2					
ANR	1399864	Identifier	look		1399289	0					
ANR	1399865	BreakStatement	break ;	987:3:25060:25065	1399289	55	True				
ANR	1399866	Label	case OOR2 :	988:2:25069:25078	1399289	56	True				
ANR	1399867	Identifier	OOR2		1399289	0					
ANR	1399868	ExpressionStatement	"FWD ( aft , aft , 1 )"	989:3:25115:25131	1399289	57	True				
ANR	1399869	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399870	Callee	FWD		1399289	0					
ANR	1399871	Identifier	FWD		1399289	0					
ANR	1399872	ArgumentList	aft		1399289	1					
ANR	1399873	Argument	aft		1399289	0					
ANR	1399874	Identifier	aft		1399289	0					
ANR	1399875	Argument	aft		1399289	1					
ANR	1399876	Identifier	aft		1399289	0					
ANR	1399877	Argument	1		1399289	2					
ANR	1399878	PrimaryExpression	1		1399289	0					
ANR	1399879	IfStatement	if ( OP ( g -> strip [ pc + OPND ( s ) ] ) != O_CH )		1399289	58					
ANR	1399880	Condition	OP ( g -> strip [ pc + OPND ( s ) ] ) != O_CH	990:7:25140:25171	1399289	0	True				
ANR	1399881	EqualityExpression	OP ( g -> strip [ pc + OPND ( s ) ] ) != O_CH		1399289	0		!=			
ANR	1399882	CallExpression	OP ( g -> strip [ pc + OPND ( s ) ] )		1399289	0					
ANR	1399883	Callee	OP		1399289	0					
ANR	1399884	Identifier	OP		1399289	0					
ANR	1399885	ArgumentList	g -> strip [ pc + OPND ( s ) ]		1399289	1					
ANR	1399886	Argument	g -> strip [ pc + OPND ( s ) ]		1399289	0					
ANR	1399887	ArrayIndexing	g -> strip [ pc + OPND ( s ) ]		1399289	0					
ANR	1399888	PtrMemberAccess	g -> strip		1399289	0					
ANR	1399889	Identifier	g		1399289	0					
ANR	1399890	Identifier	strip		1399289	1					
ANR	1399891	AdditiveExpression	pc + OPND ( s )		1399289	1		+			
ANR	1399892	Identifier	pc		1399289	0					
ANR	1399893	CallExpression	OPND ( s )		1399289	1					
ANR	1399894	Callee	OPND		1399289	0					
ANR	1399895	Identifier	OPND		1399289	0					
ANR	1399896	ArgumentList	s		1399289	1					
ANR	1399897	Argument	s		1399289	0					
ANR	1399898	Identifier	s		1399289	0					
ANR	1399899	Identifier	O_CH		1399289	1					
ANR	1399900	CompoundStatement		95:41:2089:2089	1399289	1					
ANR	1399901	IfStatement	if ( OP ( g -> strip [ pc + OPND ( s ) ] ) == OOR2 )		1399289	0					
ANR	1399902	Condition	OP ( g -> strip [ pc + OPND ( s ) ] ) == OOR2	991:8:25184:25215	1399289	0	True				
ANR	1399903	EqualityExpression	OP ( g -> strip [ pc + OPND ( s ) ] ) == OOR2		1399289	0		==			
ANR	1399904	CallExpression	OP ( g -> strip [ pc + OPND ( s ) ] )		1399289	0					
ANR	1399905	Callee	OP		1399289	0					
ANR	1399906	Identifier	OP		1399289	0					
ANR	1399907	ArgumentList	g -> strip [ pc + OPND ( s ) ]		1399289	1					
ANR	1399908	Argument	g -> strip [ pc + OPND ( s ) ]		1399289	0					
ANR	1399909	ArrayIndexing	g -> strip [ pc + OPND ( s ) ]		1399289	0					
ANR	1399910	PtrMemberAccess	g -> strip		1399289	0					
ANR	1399911	Identifier	g		1399289	0					
ANR	1399912	Identifier	strip		1399289	1					
ANR	1399913	AdditiveExpression	pc + OPND ( s )		1399289	1		+			
ANR	1399914	Identifier	pc		1399289	0					
ANR	1399915	CallExpression	OPND ( s )		1399289	1					
ANR	1399916	Callee	OPND		1399289	0					
ANR	1399917	Identifier	OPND		1399289	0					
ANR	1399918	ArgumentList	s		1399289	1					
ANR	1399919	Argument	s		1399289	0					
ANR	1399920	Identifier	s		1399289	0					
ANR	1399921	Identifier	OOR2		1399289	1					
ANR	1399922	CompoundStatement		96:42:2133:2133	1399289	1					
ANR	1399923	ExpressionStatement	"FWD ( aft , aft , OPND ( s ) )"	992:5:25225:25247	1399289	0	True				
ANR	1399924	CallExpression	"FWD ( aft , aft , OPND ( s ) )"		1399289	0					
ANR	1399925	Callee	FWD		1399289	0					
ANR	1399926	Identifier	FWD		1399289	0					
ANR	1399927	ArgumentList	aft		1399289	1					
ANR	1399928	Argument	aft		1399289	0					
ANR	1399929	Identifier	aft		1399289	0					
ANR	1399930	Argument	aft		1399289	1					
ANR	1399931	Identifier	aft		1399289	0					
ANR	1399932	Argument	OPND ( s )		1399289	2					
ANR	1399933	CallExpression	OPND ( s )		1399289	0					
ANR	1399934	Callee	OPND		1399289	0					
ANR	1399935	Identifier	OPND		1399289	0					
ANR	1399936	ArgumentList	s		1399289	1					
ANR	1399937	Argument	s		1399289	0					
ANR	1399938	Identifier	s		1399289	0					
ANR	1399939	BreakStatement	break ;	995:3:25263:25268	1399289	59	True				
ANR	1399940	Label	case O_CH :	996:2:25272:25281	1399289	60	True				
ANR	1399941	Identifier	O_CH		1399289	0					
ANR	1399942	ExpressionStatement	"FWD ( aft , aft , 1 )"	997:3:25304:25320	1399289	61	True				
ANR	1399943	CallExpression	"FWD ( aft , aft , 1 )"		1399289	0					
ANR	1399944	Callee	FWD		1399289	0					
ANR	1399945	Identifier	FWD		1399289	0					
ANR	1399946	ArgumentList	aft		1399289	1					
ANR	1399947	Argument	aft		1399289	0					
ANR	1399948	Identifier	aft		1399289	0					
ANR	1399949	Argument	aft		1399289	1					
ANR	1399950	Identifier	aft		1399289	0					
ANR	1399951	Argument	1		1399289	2					
ANR	1399952	PrimaryExpression	1		1399289	0					
ANR	1399953	BreakStatement	break ;	998:3:25325:25330	1399289	62	True				
ANR	1399954	Label	default :	999:2:25334:25341	1399289	63	True				
ANR	1399955	Identifier	default		1399289	0					
ANR	1399956	ExpressionStatement	"eprintf ( ""ops in regex.c\\n"" )"	1000:3:25364:25392	1399289	64	True				
ANR	1399957	CallExpression	"eprintf ( ""ops in regex.c\\n"" )"		1399289	0					
ANR	1399958	Callee	eprintf		1399289	0					
ANR	1399959	Identifier	eprintf		1399289	0					
ANR	1399960	ArgumentList	"""ops in regex.c\\n"""		1399289	1					
ANR	1399961	Argument	"""ops in regex.c\\n"""		1399289	0					
ANR	1399962	PrimaryExpression	"""ops in regex.c\\n"""		1399289	0					
ANR	1399963	BreakStatement	break ;	1001:3:25397:25402	1399289	65	True				
ANR	1399964	ReturnStatement	return ( aft ) ;	1005:1:25413:25424	1399289	7	True				
ANR	1399965	Identifier	aft		1399289	0					
ANR	1399966	ReturnType	static states		1399289	1					
ANR	1399967	Identifier	step		1399289	2					
ANR	1399968	ParameterList	"struct re_guts * g , sopno start , sopno stop , states bef , int ch , states aft"		1399289	3					
ANR	1399969	Parameter	struct re_guts * g	890:5:22801:22817	1399289	0	True				
ANR	1399970	ParameterType	struct re_guts *		1399289	0					
ANR	1399971	Identifier	g		1399289	1					
ANR	1399972	Parameter	sopno start	891:4:22824:22834	1399289	1	True				
ANR	1399973	ParameterType	sopno		1399289	0					
ANR	1399974	Identifier	start		1399289	1					
ANR	1399975	Parameter	sopno stop	892:4:22873:22882	1399289	2	True				
ANR	1399976	ParameterType	sopno		1399289	0					
ANR	1399977	Identifier	stop		1399289	1					
ANR	1399978	Parameter	states bef	893:4:22933:22942	1399289	3	True				
ANR	1399979	ParameterType	states		1399289	0					
ANR	1399980	Identifier	bef		1399289	1					
ANR	1399981	Parameter	int ch	894:4:22981:22986	1399289	4	True				
ANR	1399982	ParameterType	int		1399289	0					
ANR	1399983	Identifier	ch		1399289	1					
ANR	1399984	Parameter	states aft	895:4:23027:23036	1399289	5	True				
ANR	1399985	ParameterType	states		1399289	0					
ANR	1399986	Identifier	aft		1399289	1					
ANR	1399987	CFGEntryNode	ENTRY		1399289		True				
ANR	1399988	CFGExitNode	EXIT		1399289		True				
ANR	1399989	Symbol	here		1399289						
ANR	1399990	Symbol	bef		1399289						
ANR	1399991	Symbol	g -> sets		1399289						
ANR	1399992	Symbol	ISSTATEIN		1399289						
ANR	1399993	Symbol	g -> strip		1399289						
ANR	1399994	Symbol	CHIN		1399289						
ANR	1399995	Symbol	ISSETBACK		1399289						
ANR	1399996	Symbol	NONCHAR		1399289						
ANR	1399997	Symbol	BOL		1399289						
ANR	1399998	Symbol	* OPND		1399289						
ANR	1399999	Symbol	OP		1399289						
ANR	1400000	Symbol	EOL		1399289						
ANR	1400001	Symbol	* * g		1399289						
ANR	1400002	Symbol	ch		1399289						
ANR	1400003	Symbol	OOR2		1399289						
ANR	1400004	Symbol	g		1399289						
ANR	1400005	Symbol	start		1399289						
ANR	1400006	Symbol	i		1399289						
ANR	1400007	Symbol	* g -> strip		1399289						
ANR	1400008	Symbol	BOW		1399289						
ANR	1400009	Symbol	EOW		1399289						
ANR	1400010	Symbol	look		1399289						
ANR	1400011	Symbol	aft		1399289						
ANR	1400012	Symbol	cs		1399289						
ANR	1400013	Symbol	O_CH		1399289						
ANR	1400014	Symbol	* g		1399289						
ANR	1400015	Symbol	OPND		1399289						
ANR	1400016	Symbol	s		1399289						
ANR	1400017	Symbol	pc		1399289						
ANR	1400018	Symbol	stop		1399289						
ANR	1400019	Symbol	* look		1399289						
ANR	1400020	Symbol	* pc		1399289						
ANR	1400021	Symbol	BOLEOL		1399289						
ANR	1400022	Function	print	1012:0:25484:25903							
ANR	1400023	FunctionDef	"print (struct match * m , char * caption , states st , int ch , FILE * d)"		1400022	0					
ANR	1400024	CompoundStatement		1014:0:25562:25903	1400022	0					
ANR	1400025	IdentifierDeclStatement	struct re_guts * g = m -> g ;	1015:1:25565:25589	1400022	0	True				
ANR	1400026	IdentifierDecl	* g = m -> g		1400022	0					
ANR	1400027	IdentifierDeclType	struct re_guts *		1400022	0					
ANR	1400028	Identifier	g		1400022	1					
ANR	1400029	AssignmentExpression	* g = m -> g		1400022	2		=			
ANR	1400030	Identifier	g		1400022	0					
ANR	1400031	PtrMemberAccess	m -> g		1400022	1					
ANR	1400032	Identifier	m		1400022	0					
ANR	1400033	Identifier	g		1400022	1					
ANR	1400034	IdentifierDeclStatement	int i ;	1016:1:25592:25597	1400022	1	True				
ANR	1400035	IdentifierDecl	i		1400022	0					
ANR	1400036	IdentifierDeclType	int		1400022	0					
ANR	1400037	Identifier	i		1400022	1					
ANR	1400038	IdentifierDeclStatement	int first = 1 ;	1017:1:25600:25613	1400022	2	True				
ANR	1400039	IdentifierDecl	first = 1		1400022	0					
ANR	1400040	IdentifierDeclType	int		1400022	0					
ANR	1400041	Identifier	first		1400022	1					
ANR	1400042	AssignmentExpression	first = 1		1400022	2		=			
ANR	1400043	Identifier	first		1400022	0					
ANR	1400044	PrimaryExpression	1		1400022	1					
ANR	1400045	IfStatement	if ( ! ( m -> eflags & R_REGEX_TRACE ) )		1400022	3					
ANR	1400046	Condition	! ( m -> eflags & R_REGEX_TRACE )	1019:5:25621:25646	1400022	0	True				
ANR	1400047	UnaryOperationExpression	! ( m -> eflags & R_REGEX_TRACE )		1400022	0					
ANR	1400048	UnaryOperator	!		1400022	0					
ANR	1400049	BitAndExpression	m -> eflags & R_REGEX_TRACE		1400022	1		&			
ANR	1400050	PtrMemberAccess	m -> eflags		1400022	0					
ANR	1400051	Identifier	m		1400022	0					
ANR	1400052	Identifier	eflags		1400022	1					
ANR	1400053	Identifier	R_REGEX_TRACE		1400022	1					
ANR	1400054	ReturnStatement	return ;	1020:2:25651:25657	1400022	1	True				
ANR	1400055	ExpressionStatement	"( void ) fprintf ( d , ""%s"" , caption )"	1022:1:25661:25692	1400022	4	True				
ANR	1400056	CastExpression	"( void ) fprintf ( d , ""%s"" , caption )"		1400022	0					
ANR	1400057	CastTarget	void		1400022	0					
ANR	1400058	CallExpression	"fprintf ( d , ""%s"" , caption )"		1400022	1					
ANR	1400059	Callee	fprintf		1400022	0					
ANR	1400060	Identifier	fprintf		1400022	0					
ANR	1400061	ArgumentList	d		1400022	1					
ANR	1400062	Argument	d		1400022	0					
ANR	1400063	Identifier	d		1400022	0					
ANR	1400064	Argument	"""%s"""		1400022	1					
ANR	1400065	PrimaryExpression	"""%s"""		1400022	0					
ANR	1400066	Argument	caption		1400022	2					
ANR	1400067	Identifier	caption		1400022	0					
ANR	1400068	IfStatement	if ( ch != '\\0' )		1400022	5					
ANR	1400069	Condition	ch != '\\0'	1023:5:25699:25708	1400022	0	True				
ANR	1400070	EqualityExpression	ch != '\\0'		1400022	0		!=			
ANR	1400071	Identifier	ch		1400022	0					
ANR	1400072	PrimaryExpression	'\\0'		1400022	1					
ANR	1400073	ExpressionStatement	"( void ) fprintf ( d , "" %s"" , pchar ( ch ) )"	1024:2:25713:25747	1400022	1	True				
ANR	1400074	CastExpression	"( void ) fprintf ( d , "" %s"" , pchar ( ch ) )"		1400022	0					
ANR	1400075	CastTarget	void		1400022	0					
ANR	1400076	CallExpression	"fprintf ( d , "" %s"" , pchar ( ch ) )"		1400022	1					
ANR	1400077	Callee	fprintf		1400022	0					
ANR	1400078	Identifier	fprintf		1400022	0					
ANR	1400079	ArgumentList	d		1400022	1					
ANR	1400080	Argument	d		1400022	0					
ANR	1400081	Identifier	d		1400022	0					
ANR	1400082	Argument	""" %s"""		1400022	1					
ANR	1400083	PrimaryExpression	""" %s"""		1400022	0					
ANR	1400084	Argument	pchar ( ch )		1400022	2					
ANR	1400085	CallExpression	pchar ( ch )		1400022	0					
ANR	1400086	Callee	pchar		1400022	0					
ANR	1400087	Identifier	pchar		1400022	0					
ANR	1400088	ArgumentList	ch		1400022	1					
ANR	1400089	Argument	ch		1400022	0					
ANR	1400090	Identifier	ch		1400022	0					
ANR	1400091	ForStatement	for ( i = 0 ; i < g -> nstates ; i ++ )		1400022	6					
ANR	1400092	ForInit	i = 0 ;	1025:6:25755:25760	1400022	0	True				
ANR	1400093	AssignmentExpression	i = 0		1400022	0		=			
ANR	1400094	Identifier	i		1400022	0					
ANR	1400095	PrimaryExpression	0		1400022	1					
ANR	1400096	Condition	i < g -> nstates	1025:13:25762:25775	1400022	1	True				
ANR	1400097	RelationalExpression	i < g -> nstates		1400022	0		<			
ANR	1400098	Identifier	i		1400022	0					
ANR	1400099	PtrMemberAccess	g -> nstates		1400022	1					
ANR	1400100	Identifier	g		1400022	0					
ANR	1400101	Identifier	nstates		1400022	1					
ANR	1400102	PostIncDecOperationExpression	i ++	1025:29:25778:25780	1400022	2	True				
ANR	1400103	Identifier	i		1400022	0					
ANR	1400104	IncDec	++		1400022	1					
ANR	1400105	IfStatement	"if ( ISSET ( st , i ) )"		1400022	3					
ANR	1400106	Condition	"ISSET ( st , i )"	1026:6:25789:25800	1400022	0	True				
ANR	1400107	CallExpression	"ISSET ( st , i )"		1400022	0					
ANR	1400108	Callee	ISSET		1400022	0					
ANR	1400109	Identifier	ISSET		1400022	0					
ANR	1400110	ArgumentList	st		1400022	1					
ANR	1400111	Argument	st		1400022	0					
ANR	1400112	Identifier	st		1400022	0					
ANR	1400113	Argument	i		1400022	1					
ANR	1400114	Identifier	i		1400022	0					
ANR	1400115	CompoundStatement		13:20:240:240	1400022	1					
ANR	1400116	ExpressionStatement	"( void ) fprintf ( d , ""%s%d"" , ( first ) ? ""\\t"" : "", "" , i )"	1027:3:25808:25858	1400022	0	True				
ANR	1400117	CastExpression	"( void ) fprintf ( d , ""%s%d"" , ( first ) ? ""\\t"" : "", "" , i )"		1400022	0					
ANR	1400118	CastTarget	void		1400022	0					
ANR	1400119	CallExpression	"fprintf ( d , ""%s%d"" , ( first ) ? ""\\t"" : "", "" , i )"		1400022	1					
ANR	1400120	Callee	fprintf		1400022	0					
ANR	1400121	Identifier	fprintf		1400022	0					
ANR	1400122	ArgumentList	d		1400022	1					
ANR	1400123	Argument	d		1400022	0					
ANR	1400124	Identifier	d		1400022	0					
ANR	1400125	Argument	"""%s%d"""		1400022	1					
ANR	1400126	PrimaryExpression	"""%s%d"""		1400022	0					
ANR	1400127	Argument	"( first ) ? ""\\t"" : "", """		1400022	2					
ANR	1400128	ConditionalExpression	"( first ) ? ""\\t"" : "", """		1400022	0					
ANR	1400129	Condition	first		1400022	0					
ANR	1400130	Identifier	first		1400022	0					
ANR	1400131	PrimaryExpression	"""\\t"""		1400022	1					
ANR	1400132	PrimaryExpression	""", """		1400022	2					
ANR	1400133	Argument	i		1400022	3					
ANR	1400134	Identifier	i		1400022	0					
ANR	1400135	ExpressionStatement	first = 0	1028:3:25863:25872	1400022	1	True				
ANR	1400136	AssignmentExpression	first = 0		1400022	0		=			
ANR	1400137	Identifier	first		1400022	0					
ANR	1400138	PrimaryExpression	0		1400022	1					
ANR	1400139	ExpressionStatement	"( void ) fprintf ( d , ""\\n"" )"	1030:1:25879:25901	1400022	7	True				
ANR	1400140	CastExpression	"( void ) fprintf ( d , ""\\n"" )"		1400022	0					
ANR	1400141	CastTarget	void		1400022	0					
ANR	1400142	CallExpression	"fprintf ( d , ""\\n"" )"		1400022	1					
ANR	1400143	Callee	fprintf		1400022	0					
ANR	1400144	Identifier	fprintf		1400022	0					
ANR	1400145	ArgumentList	d		1400022	1					
ANR	1400146	Argument	d		1400022	0					
ANR	1400147	Identifier	d		1400022	0					
ANR	1400148	Argument	"""\\n"""		1400022	1					
ANR	1400149	PrimaryExpression	"""\\n"""		1400022	0					
ANR	1400150	ReturnType	static void		1400022	1					
ANR	1400151	Identifier	print		1400022	2					
ANR	1400152	ParameterList	"struct match * m , char * caption , states st , int ch , FILE * d"		1400022	3					
ANR	1400153	Parameter	struct match * m	1013:6:25502:25516	1400022	0	True				
ANR	1400154	ParameterType	struct match *		1400022	0					
ANR	1400155	Identifier	m		1400022	1					
ANR	1400156	Parameter	char * caption	1013:23:25519:25531	1400022	1	True				
ANR	1400157	ParameterType	char *		1400022	0					
ANR	1400158	Identifier	caption		1400022	1					
ANR	1400159	Parameter	states st	1013:38:25534:25542	1400022	2	True				
ANR	1400160	ParameterType	states		1400022	0					
ANR	1400161	Identifier	st		1400022	1					
ANR	1400162	Parameter	int ch	1013:49:25545:25550	1400022	3	True				
ANR	1400163	ParameterType	int		1400022	0					
ANR	1400164	Identifier	ch		1400022	1					
ANR	1400165	Parameter	FILE * d	1013:57:25553:25559	1400022	4	True				
ANR	1400166	ParameterType	FILE *		1400022	0					
ANR	1400167	Identifier	d		1400022	1					
ANR	1400168	CFGEntryNode	ENTRY		1400022		True				
ANR	1400169	CFGExitNode	EXIT		1400022		True				
ANR	1400170	Symbol	st		1400022						
ANR	1400171	Symbol	R_REGEX_TRACE		1400022						
ANR	1400172	Symbol	d		1400022						
ANR	1400173	Symbol	ch		1400022						
ANR	1400174	Symbol	g		1400022						
ANR	1400175	Symbol	caption		1400022						
ANR	1400176	Symbol	i		1400022						
ANR	1400177	Symbol	m		1400022						
ANR	1400178	Symbol	m -> eflags		1400022						
ANR	1400179	Symbol	* g		1400022						
ANR	1400180	Symbol	m -> g		1400022						
ANR	1400181	Symbol	ISSET		1400022						
ANR	1400182	Symbol	g -> nstates		1400022						
ANR	1400183	Symbol	* m		1400022						
ANR	1400184	Symbol	first		1400022						
ANR	1400185	Symbol	pchar		1400022						
ANR	1400186	Function	at	1036:0:25945:26234							
ANR	1400187	FunctionDef	"at (struct match * m , char * title , char * start , char * stop , sopno startst , sopno stopst)"		1400186	0					
ANR	1400188	CompoundStatement		1039:0:26048:26234	1400186	0					
ANR	1400189	IfStatement	if ( ! ( m -> eflags & R_REGEX_TRACE ) )		1400186	0					
ANR	1400190	Condition	! ( m -> eflags & R_REGEX_TRACE )	1040:5:26055:26080	1400186	0	True				
ANR	1400191	UnaryOperationExpression	! ( m -> eflags & R_REGEX_TRACE )		1400186	0					
ANR	1400192	UnaryOperator	!		1400186	0					
ANR	1400193	BitAndExpression	m -> eflags & R_REGEX_TRACE		1400186	1		&			
ANR	1400194	PtrMemberAccess	m -> eflags		1400186	0					
ANR	1400195	Identifier	m		1400186	0					
ANR	1400196	Identifier	eflags		1400186	1					
ANR	1400197	Identifier	R_REGEX_TRACE		1400186	1					
ANR	1400198	ReturnStatement	return ;	1041:2:26085:26091	1400186	1	True				
ANR	1400199	ExpressionStatement	"( void ) printf ( ""%s %s-"" , title , pchar ( * start ) )"	1043:1:26095:26139	1400186	1	True				
ANR	1400200	CastExpression	"( void ) printf ( ""%s %s-"" , title , pchar ( * start ) )"		1400186	0					
ANR	1400201	CastTarget	void		1400186	0					
ANR	1400202	CallExpression	"printf ( ""%s %s-"" , title , pchar ( * start ) )"		1400186	1					
ANR	1400203	Callee	printf		1400186	0					
ANR	1400204	Identifier	printf		1400186	0					
ANR	1400205	ArgumentList	"""%s %s-"""		1400186	1					
ANR	1400206	Argument	"""%s %s-"""		1400186	0					
ANR	1400207	PrimaryExpression	"""%s %s-"""		1400186	0					
ANR	1400208	Argument	title		1400186	1					
ANR	1400209	Identifier	title		1400186	0					
ANR	1400210	Argument	pchar ( * start )		1400186	2					
ANR	1400211	CallExpression	pchar ( * start )		1400186	0					
ANR	1400212	Callee	pchar		1400186	0					
ANR	1400213	Identifier	pchar		1400186	0					
ANR	1400214	ArgumentList	* start		1400186	1					
ANR	1400215	Argument	* start		1400186	0					
ANR	1400216	UnaryOperationExpression	* start		1400186	0					
ANR	1400217	UnaryOperator	*		1400186	0					
ANR	1400218	Identifier	start		1400186	1					
ANR	1400219	ExpressionStatement	"( void ) printf ( ""%s "" , pchar ( * stop ) )"	1044:1:26142:26175	1400186	2	True				
ANR	1400220	CastExpression	"( void ) printf ( ""%s "" , pchar ( * stop ) )"		1400186	0					
ANR	1400221	CastTarget	void		1400186	0					
ANR	1400222	CallExpression	"printf ( ""%s "" , pchar ( * stop ) )"		1400186	1					
ANR	1400223	Callee	printf		1400186	0					
ANR	1400224	Identifier	printf		1400186	0					
ANR	1400225	ArgumentList	"""%s """		1400186	1					
ANR	1400226	Argument	"""%s """		1400186	0					
ANR	1400227	PrimaryExpression	"""%s """		1400186	0					
ANR	1400228	Argument	pchar ( * stop )		1400186	1					
ANR	1400229	CallExpression	pchar ( * stop )		1400186	0					
ANR	1400230	Callee	pchar		1400186	0					
ANR	1400231	Identifier	pchar		1400186	0					
ANR	1400232	ArgumentList	* stop		1400186	1					
ANR	1400233	Argument	* stop		1400186	0					
ANR	1400234	UnaryOperationExpression	* stop		1400186	0					
ANR	1400235	UnaryOperator	*		1400186	0					
ANR	1400236	Identifier	stop		1400186	1					
ANR	1400237	ExpressionStatement	"( void ) printf ( ""%ld-%ld\\n"" , ( long ) startst , ( long ) stopst )"	1045:1:26178:26232	1400186	3	True				
ANR	1400238	CastExpression	"( void ) printf ( ""%ld-%ld\\n"" , ( long ) startst , ( long ) stopst )"		1400186	0					
ANR	1400239	CastTarget	void		1400186	0					
ANR	1400240	CallExpression	"printf ( ""%ld-%ld\\n"" , ( long ) startst , ( long ) stopst )"		1400186	1					
ANR	1400241	Callee	printf		1400186	0					
ANR	1400242	Identifier	printf		1400186	0					
ANR	1400243	ArgumentList	"""%ld-%ld\\n"""		1400186	1					
ANR	1400244	Argument	"""%ld-%ld\\n"""		1400186	0					
ANR	1400245	PrimaryExpression	"""%ld-%ld\\n"""		1400186	0					
ANR	1400246	Argument	( long ) startst		1400186	1					
ANR	1400247	CastExpression	( long ) startst		1400186	0					
ANR	1400248	CastTarget	long		1400186	0					
ANR	1400249	Identifier	startst		1400186	1					
ANR	1400250	Argument	( long ) stopst		1400186	2					
ANR	1400251	CastExpression	( long ) stopst		1400186	0					
ANR	1400252	CastTarget	long		1400186	0					
ANR	1400253	Identifier	stopst		1400186	1					
ANR	1400254	ReturnType	static void		1400186	1					
ANR	1400255	Identifier	at		1400186	2					
ANR	1400256	ParameterList	"struct match * m , char * title , char * start , char * stop , sopno startst , sopno stopst"		1400186	3					
ANR	1400257	Parameter	struct match * m	1037:3:25960:25974	1400186	0	True				
ANR	1400258	ParameterType	struct match *		1400186	0					
ANR	1400259	Identifier	m		1400186	1					
ANR	1400260	Parameter	char * title	1037:20:25977:25987	1400186	1	True				
ANR	1400261	ParameterType	char *		1400186	0					
ANR	1400262	Identifier	title		1400186	1					
ANR	1400263	Parameter	char * start	1037:33:25990:26000	1400186	2	True				
ANR	1400264	ParameterType	char *		1400186	0					
ANR	1400265	Identifier	start		1400186	1					
ANR	1400266	Parameter	char * stop	1037:46:26003:26012	1400186	3	True				
ANR	1400267	ParameterType	char *		1400186	0					
ANR	1400268	Identifier	stop		1400186	1					
ANR	1400269	Parameter	sopno startst	1037:58:26015:26027	1400186	4	True				
ANR	1400270	ParameterType	sopno		1400186	0					
ANR	1400271	Identifier	startst		1400186	1					
ANR	1400272	Parameter	sopno stopst	1038:4:26034:26045	1400186	5	True				
ANR	1400273	ParameterType	sopno		1400186	0					
ANR	1400274	Identifier	stopst		1400186	1					
ANR	1400275	CFGEntryNode	ENTRY		1400186		True				
ANR	1400276	CFGExitNode	EXIT		1400186		True				
ANR	1400277	Symbol	m -> eflags		1400186						
ANR	1400278	Symbol	R_REGEX_TRACE		1400186						
ANR	1400279	Symbol	stop		1400186						
ANR	1400280	Symbol	stopst		1400186						
ANR	1400281	Symbol	* m		1400186						
ANR	1400282	Symbol	* start		1400186						
ANR	1400283	Symbol	start		1400186						
ANR	1400284	Symbol	startst		1400186						
ANR	1400285	Symbol	title		1400186						
ANR	1400286	Symbol	* stop		1400186						
ANR	1400287	Symbol	m		1400186						
ANR	1400288	Symbol	pchar		1400186						
ANR	1400289	Function	pchar	1058:0:26612:26845							
ANR	1400290	FunctionDef	pchar (int ch)		1400289	0					
ANR	1400291	CompoundStatement		1060:0:26666:26845	1400289	0					
ANR	1400292	Statement	static	1061:1:26669:26674	1400289	0	True				
ANR	1400293	IdentifierDeclStatement	char pbuf [ 10 ] ;	1061:8:26676:26689	1400289	1	True				
ANR	1400294	IdentifierDecl	pbuf [ 10 ]		1400289	0					
ANR	1400295	IdentifierDeclType	char [ 10 ]		1400289	0					
ANR	1400296	Identifier	pbuf		1400289	1					
ANR	1400297	PrimaryExpression	10		1400289	2					
ANR	1400298	IfStatement	if ( isprint ( ( ut8 ) ch ) || ch == ' ' )		1400289	2					
ANR	1400299	Condition	isprint ( ( ut8 ) ch ) || ch == ' '	1063:5:26697:26725	1400289	0	True				
ANR	1400300	OrExpression	isprint ( ( ut8 ) ch ) || ch == ' '		1400289	0		||			
ANR	1400301	CallExpression	isprint ( ( ut8 ) ch )		1400289	0					
ANR	1400302	Callee	isprint		1400289	0					
ANR	1400303	Identifier	isprint		1400289	0					
ANR	1400304	ArgumentList	( ut8 ) ch		1400289	1					
ANR	1400305	Argument	( ut8 ) ch		1400289	0					
ANR	1400306	CastExpression	( ut8 ) ch		1400289	0					
ANR	1400307	CastTarget	ut8		1400289	0					
ANR	1400308	Identifier	ch		1400289	1					
ANR	1400309	EqualityExpression	ch == ' '		1400289	1		==			
ANR	1400310	Identifier	ch		1400289	0					
ANR	1400311	PrimaryExpression	' '		1400289	1					
ANR	1400312	ExpressionStatement	"( void ) snprintf ( pbuf , sizeof pbuf , ""%c"" , ch )"	1064:2:26730:26773	1400289	1	True				
ANR	1400313	CastExpression	"( void ) snprintf ( pbuf , sizeof pbuf , ""%c"" , ch )"		1400289	0					
ANR	1400314	CastTarget	void		1400289	0					
ANR	1400315	CallExpression	"snprintf ( pbuf , sizeof pbuf , ""%c"" , ch )"		1400289	1					
ANR	1400316	Callee	snprintf		1400289	0					
ANR	1400317	Identifier	snprintf		1400289	0					
ANR	1400318	ArgumentList	pbuf		1400289	1					
ANR	1400319	Argument	pbuf		1400289	0					
ANR	1400320	Identifier	pbuf		1400289	0					
ANR	1400321	Argument	sizeof pbuf		1400289	1					
ANR	1400322	SizeofExpression	sizeof pbuf		1400289	0					
ANR	1400323	Sizeof	sizeof		1400289	0					
ANR	1400324	Identifier	pbuf		1400289	1					
ANR	1400325	Argument	"""%c"""		1400289	2					
ANR	1400326	PrimaryExpression	"""%c"""		1400289	0					
ANR	1400327	Argument	ch		1400289	3					
ANR	1400328	Identifier	ch		1400289	0					
ANR	1400329	ElseStatement	else		1400289	0					
ANR	1400330	ExpressionStatement	"( void ) snprintf ( pbuf , sizeof pbuf , ""\\\\%o"" , ch )"	1066:2:26783:26828	1400289	0	True				
ANR	1400331	CastExpression	"( void ) snprintf ( pbuf , sizeof pbuf , ""\\\\%o"" , ch )"		1400289	0					
ANR	1400332	CastTarget	void		1400289	0					
ANR	1400333	CallExpression	"snprintf ( pbuf , sizeof pbuf , ""\\\\%o"" , ch )"		1400289	1					
ANR	1400334	Callee	snprintf		1400289	0					
ANR	1400335	Identifier	snprintf		1400289	0					
ANR	1400336	ArgumentList	pbuf		1400289	1					
ANR	1400337	Argument	pbuf		1400289	0					
ANR	1400338	Identifier	pbuf		1400289	0					
ANR	1400339	Argument	sizeof pbuf		1400289	1					
ANR	1400340	SizeofExpression	sizeof pbuf		1400289	0					
ANR	1400341	Sizeof	sizeof		1400289	0					
ANR	1400342	Identifier	pbuf		1400289	1					
ANR	1400343	Argument	"""\\\\%o"""		1400289	2					
ANR	1400344	PrimaryExpression	"""\\\\%o"""		1400289	0					
ANR	1400345	Argument	ch		1400289	3					
ANR	1400346	Identifier	ch		1400289	0					
ANR	1400347	ReturnStatement	return ( pbuf ) ;	1067:1:26831:26843	1400289	3	True				
ANR	1400348	Identifier	pbuf		1400289	0					
ANR	1400349	ReturnType	static char *		1400289	1					
ANR	1400350	Identifier	pchar		1400289	2					
ANR	1400351	ParameterList	int ch		1400289	3					
ANR	1400352	Parameter	int ch	1059:6:26658:26663	1400289	0	True				
ANR	1400353	ParameterType	int		1400289	0					
ANR	1400354	Identifier	ch		1400289	1					
ANR	1400355	CFGEntryNode	ENTRY		1400289		True				
ANR	1400356	CFGExitNode	EXIT		1400289		True				
ANR	1400357	Symbol	ch		1400289						
ANR	1400358	Symbol	pbuf		1400289						
ANR	1400359	Symbol	isprint		1400289						
