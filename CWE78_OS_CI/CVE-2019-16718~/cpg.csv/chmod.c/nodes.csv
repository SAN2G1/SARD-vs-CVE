command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	768182	File	data/converged/CVE-2019-16718~_radare2/chmod.c								
ANR	768183	DeclStmt									
ANR	768184	Decl							int	"int ( const char * , int recursive )"	chmodr
ANR	768185	DeclStmt									
ANR	768186	Decl							int	int ( const char * )	parsemode
ANR	768187	DeclStmt									
ANR	768188	Decl							void	"void ( const char * path , int rec , int ( * fn ) ( const char * , int ) )"	recurse
ANR	768189	DeclStmt									
ANR	768190	Decl							char	char	oper
ANR	768191	DeclStmt									
ANR	768192	Decl							mode_t	mode_t	mode
ANR	768193	Function	r_file_chmod	18:0:388:604							
ANR	768194	FunctionDef	"r_file_chmod (const char * file , const char * mod , int recursive)"		768193	0					
ANR	768195	CompoundStatement		18:74:462:604	768193	0					
ANR	768196	ExpressionStatement	oper = '='	20:1:478:488	768193	0	True				
ANR	768197	AssignmentExpression	oper = '='		768193	0		=			
ANR	768198	Identifier	oper		768193	0					
ANR	768199	PrimaryExpression	'='		768193	1					
ANR	768200	ExpressionStatement	mode = 0	21:1:491:499	768193	1	True				
ANR	768201	AssignmentExpression	mode = 0		768193	0		=			
ANR	768202	Identifier	mode		768193	0					
ANR	768203	PrimaryExpression	0		768193	1					
ANR	768204	IfStatement	if ( ! parsemode ( mod ) )		768193	2					
ANR	768205	Condition	! parsemode ( mod )	22:5:506:521	768193	0	True				
ANR	768206	UnaryOperationExpression	! parsemode ( mod )		768193	0					
ANR	768207	UnaryOperator	!		768193	0					
ANR	768208	CallExpression	parsemode ( mod )		768193	1					
ANR	768209	Callee	parsemode		768193	0					
ANR	768210	Identifier	parsemode		768193	0					
ANR	768211	ArgumentList	mod		768193	1					
ANR	768212	Argument	mod		768193	0					
ANR	768213	Identifier	mod		768193	0					
ANR	768214	CompoundStatement		5:23:61:61	768193	1					
ANR	768215	ReturnStatement	return false ;	23:2:528:540	768193	0	True				
ANR	768216	Identifier	false		768193	0					
ANR	768217	ReturnStatement	"return chmodr ( file , recursive ) ;"	25:1:546:577	768193	3	True				
ANR	768218	CallExpression	"chmodr ( file , recursive )"		768193	0					
ANR	768219	Callee	chmodr		768193	0					
ANR	768220	Identifier	chmodr		768193	0					
ANR	768221	ArgumentList	file		768193	1					
ANR	768222	Argument	file		768193	0					
ANR	768223	Identifier	file		768193	0					
ANR	768224	Argument	recursive		768193	1					
ANR	768225	Identifier	recursive		768193	0					
ANR	768226	ReturnType	R_API int		768193	1					
ANR	768227	Identifier	r_file_chmod		768193	2					
ANR	768228	ParameterList	"const char * file , const char * mod , int recursive"		768193	3					
ANR	768229	Parameter	const char * file	18:24:412:427	768193	0	True				
ANR	768230	ParameterType	const char *		768193	0					
ANR	768231	Identifier	file		768193	1					
ANR	768232	Parameter	const char * mod	18:42:430:444	768193	1	True				
ANR	768233	ParameterType	const char *		768193	0					
ANR	768234	Identifier	mod		768193	1					
ANR	768235	Parameter	int recursive	18:59:447:459	768193	2	True				
ANR	768236	ParameterType	int		768193	0					
ANR	768237	Identifier	recursive		768193	1					
ANR	768238	CFGEntryNode	ENTRY		768193		True				
ANR	768239	CFGExitNode	EXIT		768193		True				
ANR	768240	Symbol	mode		768193						
ANR	768241	Symbol	file		768193						
ANR	768242	Symbol	mod		768193						
ANR	768243	Symbol	false		768193						
ANR	768244	Symbol	chmodr		768193						
ANR	768245	Symbol	oper		768193						
ANR	768246	Symbol	recursive		768193						
ANR	768247	Symbol	parsemode		768193						
ANR	768248	Function	chmodr	33:0:667:1073							
ANR	768249	FunctionDef	"chmodr (const char * path , int rflag)"		768248	0					
ANR	768250	CompoundStatement		33:40:707:1073	768248	0					
ANR	768251	IdentifierDeclStatement	struct stat st ;	34:1:710:724	768248	0	True				
ANR	768252	IdentifierDecl	st		768248	0					
ANR	768253	IdentifierDeclType	struct stat		768248	0					
ANR	768254	Identifier	st		768248	1					
ANR	768255	IfStatement	"if ( stat ( path , & st ) == - 1 )"		768248	1					
ANR	768256	Condition	"stat ( path , & st ) == - 1"	36:5:732:753	768248	0	True				
ANR	768257	EqualityExpression	"stat ( path , & st ) == - 1"		768248	0		==			
ANR	768258	CallExpression	"stat ( path , & st )"		768248	0					
ANR	768259	Callee	stat		768248	0					
ANR	768260	Identifier	stat		768248	0					
ANR	768261	ArgumentList	path		768248	1					
ANR	768262	Argument	path		768248	0					
ANR	768263	Identifier	path		768248	0					
ANR	768264	Argument	& st		768248	1					
ANR	768265	UnaryOperationExpression	& st		768248	0					
ANR	768266	UnaryOperator	&		768248	0					
ANR	768267	Identifier	st		768248	1					
ANR	768268	UnaryOperationExpression	- 1		768248	1					
ANR	768269	UnaryOperator	-		768248	0					
ANR	768270	PrimaryExpression	1		768248	1					
ANR	768271	CompoundStatement		4:29:48:48	768248	1					
ANR	768272	ReturnStatement	return 0 ;	37:2:760:768	768248	0	True				
ANR	768273	PrimaryExpression	0		768248	0					
ANR	768274	SwitchStatement	switch ( oper )		768248	2					
ANR	768275	Condition	oper	40:9:783:786	768248	0	True				
ANR	768276	Identifier	oper		768248	0					
ANR	768277	CompoundStatement		8:15:81:81	768248	1					
ANR	768278	Label	case '+' :	41:1:792:800	768248	0	True				
ANR	768279	ExpressionStatement	st . st_mode |= mode	42:2:804:822	768248	1	True				
ANR	768280	AssignmentExpression	st . st_mode |= mode		768248	0		|=			
ANR	768281	MemberAccess	st . st_mode		768248	0					
ANR	768282	Identifier	st		768248	0					
ANR	768283	Identifier	st_mode		768248	1					
ANR	768284	Identifier	mode		768248	1					
ANR	768285	BreakStatement	break ;	43:2:826:831	768248	2	True				
ANR	768286	Label	case '-' :	44:1:834:842	768248	3	True				
ANR	768287	ExpressionStatement	st . st_mode &= ~mode	45:2:846:865	768248	4	True				
ANR	768288	AssignmentExpression	st . st_mode &= ~mode		768248	0		&=			
ANR	768289	MemberAccess	st . st_mode		768248	0					
ANR	768290	Identifier	st		768248	0					
ANR	768291	Identifier	st_mode		768248	1					
ANR	768292	Identifier	~mode		768248	1					
ANR	768293	BreakStatement	break ;	46:2:869:874	768248	5	True				
ANR	768294	Label	case '=' :	47:1:877:885	768248	6	True				
ANR	768295	ExpressionStatement	st . st_mode = mode	48:2:889:906	768248	7	True				
ANR	768296	AssignmentExpression	st . st_mode = mode		768248	0		=			
ANR	768297	MemberAccess	st . st_mode		768248	0					
ANR	768298	Identifier	st		768248	0					
ANR	768299	Identifier	st_mode		768248	1					
ANR	768300	Identifier	mode		768248	1					
ANR	768301	BreakStatement	break ;	49:2:910:915	768248	8	True				
ANR	768302	IfStatement	"if ( chmod ( path , st . st_mode ) == - 1 )"		768248	3					
ANR	768303	Condition	"chmod ( path , st . st_mode ) == - 1"	51:5:925:954	768248	0	True				
ANR	768304	EqualityExpression	"chmod ( path , st . st_mode ) == - 1"		768248	0		==			
ANR	768305	CallExpression	"chmod ( path , st . st_mode )"		768248	0					
ANR	768306	Callee	chmod		768248	0					
ANR	768307	Identifier	chmod		768248	0					
ANR	768308	ArgumentList	path		768248	1					
ANR	768309	Argument	path		768248	0					
ANR	768310	Identifier	path		768248	0					
ANR	768311	Argument	st . st_mode		768248	1					
ANR	768312	MemberAccess	st . st_mode		768248	0					
ANR	768313	Identifier	st		768248	0					
ANR	768314	Identifier	st_mode		768248	1					
ANR	768315	UnaryOperationExpression	- 1		768248	1					
ANR	768316	UnaryOperator	-		768248	0					
ANR	768317	PrimaryExpression	1		768248	1					
ANR	768318	CompoundStatement		19:37:249:249	768248	1					
ANR	768319	ExpressionStatement	"eprintf ( ""chmod %s:"" , path )"	52:2:961:988	768248	0	True				
ANR	768320	CallExpression	"eprintf ( ""chmod %s:"" , path )"		768248	0					
ANR	768321	Callee	eprintf		768248	0					
ANR	768322	Identifier	eprintf		768248	0					
ANR	768323	ArgumentList	"""chmod %s:"""		768248	1					
ANR	768324	Argument	"""chmod %s:"""		768248	0					
ANR	768325	PrimaryExpression	"""chmod %s:"""		768248	0					
ANR	768326	Argument	path		768248	1					
ANR	768327	Identifier	path		768248	0					
ANR	768328	ReturnStatement	return false ;	53:2:992:1004	768248	1	True				
ANR	768329	Identifier	false		768248	0					
ANR	768330	IfStatement	if ( rflag )		768248	4					
ANR	768331	Condition	rflag	55:5:1014:1018	768248	0	True				
ANR	768332	Identifier	rflag		768248	0					
ANR	768333	CompoundStatement		23:12:313:313	768248	1					
ANR	768334	ExpressionStatement	"recurse ( path , rflag , chmodr )"	56:2:1025:1054	768248	0	True				
ANR	768335	CallExpression	"recurse ( path , rflag , chmodr )"		768248	0					
ANR	768336	Callee	recurse		768248	0					
ANR	768337	Identifier	recurse		768248	0					
ANR	768338	ArgumentList	path		768248	1					
ANR	768339	Argument	path		768248	0					
ANR	768340	Identifier	path		768248	0					
ANR	768341	Argument	rflag		768248	1					
ANR	768342	Identifier	rflag		768248	0					
ANR	768343	Argument	chmodr		768248	2					
ANR	768344	Identifier	chmodr		768248	0					
ANR	768345	ReturnStatement	return true ;	58:1:1060:1071	768248	5	True				
ANR	768346	Identifier	true		768248	0					
ANR	768347	ReturnType	int		768248	1					
ANR	768348	Identifier	chmodr		768248	2					
ANR	768349	ParameterList	"const char * path , int rflag"		768248	3					
ANR	768350	Parameter	const char * path	33:11:678:693	768248	0	True				
ANR	768351	ParameterType	const char *		768248	0					
ANR	768352	Identifier	path		768248	1					
ANR	768353	Parameter	int rflag	33:29:696:704	768248	1	True				
ANR	768354	ParameterType	int		768248	0					
ANR	768355	Identifier	rflag		768248	1					
ANR	768356	CFGEntryNode	ENTRY		768248		True				
ANR	768357	CFGExitNode	EXIT		768248		True				
ANR	768358	Symbol	st		768248						
ANR	768359	Symbol	stat		768248						
ANR	768360	Symbol	~mode		768248						
ANR	768361	Symbol	rflag		768248						
ANR	768362	Symbol	false		768248						
ANR	768363	Symbol	chmodr		768248						
ANR	768364	Symbol	& st		768248						
ANR	768365	Symbol	st . st_mode		768248						
ANR	768366	Symbol	mode		768248						
ANR	768367	Symbol	path		768248						
ANR	768368	Symbol	true		768248						
ANR	768369	Symbol	chmod		768248						
ANR	768370	Symbol	oper		768248						
ANR	768371	Function	parsemode	61:0:1076:2441							
ANR	768372	FunctionDef	parsemode (const char * str)		768371	0					
ANR	768373	CompoundStatement		61:31:1107:2441	768371	0					
ANR	768374	IdentifierDeclStatement	char * end ;	62:1:1110:1119	768371	0	True				
ANR	768375	IdentifierDecl	* end		768371	0					
ANR	768376	IdentifierDeclType	char *		768371	0					
ANR	768377	Identifier	end		768371	1					
ANR	768378	IdentifierDeclStatement	const char * p ;	63:1:1122:1135	768371	1	True				
ANR	768379	IdentifierDecl	* p		768371	0					
ANR	768380	IdentifierDeclType	const char *		768371	0					
ANR	768381	Identifier	p		768371	1					
ANR	768382	IdentifierDeclStatement	int octal ;	64:1:1138:1147	768371	2	True				
ANR	768383	IdentifierDecl	octal		768371	0					
ANR	768384	IdentifierDeclType	int		768371	0					
ANR	768385	Identifier	octal		768371	1					
ANR	768386	IdentifierDeclStatement	mode_t mask = 0 ;	65:1:1150:1165	768371	3	True				
ANR	768387	IdentifierDecl	mask = 0		768371	0					
ANR	768388	IdentifierDeclType	mode_t		768371	0					
ANR	768389	Identifier	mask		768371	1					
ANR	768390	AssignmentExpression	mask = 0		768371	2		=			
ANR	768391	Identifier	mask		768371	0					
ANR	768392	PrimaryExpression	0		768371	1					
ANR	768393	ExpressionStatement	"octal = strtol ( str , & end , 8 )"	67:1:1169:1197	768371	4	True				
ANR	768394	AssignmentExpression	"octal = strtol ( str , & end , 8 )"		768371	0		=			
ANR	768395	Identifier	octal		768371	0					
ANR	768396	CallExpression	"strtol ( str , & end , 8 )"		768371	1					
ANR	768397	Callee	strtol		768371	0					
ANR	768398	Identifier	strtol		768371	0					
ANR	768399	ArgumentList	str		768371	1					
ANR	768400	Argument	str		768371	0					
ANR	768401	Identifier	str		768371	0					
ANR	768402	Argument	& end		768371	1					
ANR	768403	UnaryOperationExpression	& end		768371	0					
ANR	768404	UnaryOperator	&		768371	0					
ANR	768405	Identifier	end		768371	1					
ANR	768406	Argument	8		768371	2					
ANR	768407	PrimaryExpression	8		768371	0					
ANR	768408	IfStatement	if ( * end == '\\0' )		768371	5					
ANR	768409	Condition	* end == '\\0'	68:5:1204:1215	768371	0	True				
ANR	768410	EqualityExpression	* end == '\\0'		768371	0		==			
ANR	768411	UnaryOperationExpression	* end		768371	0					
ANR	768412	UnaryOperator	*		768371	0					
ANR	768413	Identifier	end		768371	1					
ANR	768414	PrimaryExpression	'\\0'		768371	1					
ANR	768415	CompoundStatement		8:19:110:110	768371	1					
ANR	768416	IfStatement	if ( octal & 04000 )		768371	0					
ANR	768417	Condition	octal & 04000	69:6:1226:1238	768371	0	True				
ANR	768418	BitAndExpression	octal & 04000		768371	0		&			
ANR	768419	Identifier	octal		768371	0					
ANR	768420	PrimaryExpression	04000		768371	1					
ANR	768421	CompoundStatement		9:21:133:133	768371	1					
ANR	768422	ExpressionStatement	mode |= S_ISUID	70:3:1246:1261	768371	0	True				
ANR	768423	AssignmentExpression	mode |= S_ISUID		768371	0		|=			
ANR	768424	Identifier	mode		768371	0					
ANR	768425	Identifier	S_ISUID		768371	1					
ANR	768426	IfStatement	if ( octal & 02000 )		768371	1					
ANR	768427	Condition	octal & 02000	72:6:1273:1285	768371	0	True				
ANR	768428	BitAndExpression	octal & 02000		768371	0		&			
ANR	768429	Identifier	octal		768371	0					
ANR	768430	PrimaryExpression	02000		768371	1					
ANR	768431	CompoundStatement		12:21:180:180	768371	1					
ANR	768432	ExpressionStatement	mode |= S_ISGID	73:3:1293:1308	768371	0	True				
ANR	768433	AssignmentExpression	mode |= S_ISGID		768371	0		|=			
ANR	768434	Identifier	mode		768371	0					
ANR	768435	Identifier	S_ISGID		768371	1					
ANR	768436	IfStatement	if ( octal & 00400 )		768371	2					
ANR	768437	Condition	octal & 00400	75:6:1320:1332	768371	0	True				
ANR	768438	BitAndExpression	octal & 00400		768371	0		&			
ANR	768439	Identifier	octal		768371	0					
ANR	768440	PrimaryExpression	00400		768371	1					
ANR	768441	CompoundStatement		15:21:227:227	768371	1					
ANR	768442	ExpressionStatement	mode |= S_IRUSR	76:3:1340:1355	768371	0	True				
ANR	768443	AssignmentExpression	mode |= S_IRUSR		768371	0		|=			
ANR	768444	Identifier	mode		768371	0					
ANR	768445	Identifier	S_IRUSR		768371	1					
ANR	768446	IfStatement	if ( octal & 00200 )		768371	3					
ANR	768447	Condition	octal & 00200	78:6:1367:1379	768371	0	True				
ANR	768448	BitAndExpression	octal & 00200		768371	0		&			
ANR	768449	Identifier	octal		768371	0					
ANR	768450	PrimaryExpression	00200		768371	1					
ANR	768451	CompoundStatement		18:21:274:274	768371	1					
ANR	768452	ExpressionStatement	mode |= S_IWUSR	79:3:1387:1402	768371	0	True				
ANR	768453	AssignmentExpression	mode |= S_IWUSR		768371	0		|=			
ANR	768454	Identifier	mode		768371	0					
ANR	768455	Identifier	S_IWUSR		768371	1					
ANR	768456	IfStatement	if ( octal & 00100 )		768371	4					
ANR	768457	Condition	octal & 00100	81:6:1414:1426	768371	0	True				
ANR	768458	BitAndExpression	octal & 00100		768371	0		&			
ANR	768459	Identifier	octal		768371	0					
ANR	768460	PrimaryExpression	00100		768371	1					
ANR	768461	CompoundStatement		21:21:321:321	768371	1					
ANR	768462	ExpressionStatement	mode |= S_IXUSR	82:3:1434:1449	768371	0	True				
ANR	768463	AssignmentExpression	mode |= S_IXUSR		768371	0		|=			
ANR	768464	Identifier	mode		768371	0					
ANR	768465	Identifier	S_IXUSR		768371	1					
ANR	768466	IfStatement	if ( octal & 00040 )		768371	5					
ANR	768467	Condition	octal & 00040	84:6:1461:1473	768371	0	True				
ANR	768468	BitAndExpression	octal & 00040		768371	0		&			
ANR	768469	Identifier	octal		768371	0					
ANR	768470	PrimaryExpression	00040		768371	1					
ANR	768471	CompoundStatement		24:21:368:368	768371	1					
ANR	768472	ExpressionStatement	mode |= S_IRGRP	85:3:1481:1496	768371	0	True				
ANR	768473	AssignmentExpression	mode |= S_IRGRP		768371	0		|=			
ANR	768474	Identifier	mode		768371	0					
ANR	768475	Identifier	S_IRGRP		768371	1					
ANR	768476	IfStatement	if ( octal & 00020 )		768371	6					
ANR	768477	Condition	octal & 00020	87:6:1508:1520	768371	0	True				
ANR	768478	BitAndExpression	octal & 00020		768371	0		&			
ANR	768479	Identifier	octal		768371	0					
ANR	768480	PrimaryExpression	00020		768371	1					
ANR	768481	CompoundStatement		27:21:415:415	768371	1					
ANR	768482	ExpressionStatement	mode |= S_IWGRP	88:3:1528:1543	768371	0	True				
ANR	768483	AssignmentExpression	mode |= S_IWGRP		768371	0		|=			
ANR	768484	Identifier	mode		768371	0					
ANR	768485	Identifier	S_IWGRP		768371	1					
ANR	768486	IfStatement	if ( octal & 00010 )		768371	7					
ANR	768487	Condition	octal & 00010	90:6:1555:1567	768371	0	True				
ANR	768488	BitAndExpression	octal & 00010		768371	0		&			
ANR	768489	Identifier	octal		768371	0					
ANR	768490	PrimaryExpression	00010		768371	1					
ANR	768491	CompoundStatement		30:21:462:462	768371	1					
ANR	768492	ExpressionStatement	mode |= S_IXGRP	91:3:1575:1590	768371	0	True				
ANR	768493	AssignmentExpression	mode |= S_IXGRP		768371	0		|=			
ANR	768494	Identifier	mode		768371	0					
ANR	768495	Identifier	S_IXGRP		768371	1					
ANR	768496	IfStatement	if ( octal & 00004 )		768371	8					
ANR	768497	Condition	octal & 00004	93:6:1602:1614	768371	0	True				
ANR	768498	BitAndExpression	octal & 00004		768371	0		&			
ANR	768499	Identifier	octal		768371	0					
ANR	768500	PrimaryExpression	00004		768371	1					
ANR	768501	CompoundStatement		33:21:509:509	768371	1					
ANR	768502	ExpressionStatement	mode |= S_IROTH	94:3:1622:1637	768371	0	True				
ANR	768503	AssignmentExpression	mode |= S_IROTH		768371	0		|=			
ANR	768504	Identifier	mode		768371	0					
ANR	768505	Identifier	S_IROTH		768371	1					
ANR	768506	IfStatement	if ( octal & 00002 )		768371	9					
ANR	768507	Condition	octal & 00002	96:6:1649:1661	768371	0	True				
ANR	768508	BitAndExpression	octal & 00002		768371	0		&			
ANR	768509	Identifier	octal		768371	0					
ANR	768510	PrimaryExpression	00002		768371	1					
ANR	768511	CompoundStatement		36:21:556:556	768371	1					
ANR	768512	ExpressionStatement	mode |= S_IWOTH	97:3:1669:1684	768371	0	True				
ANR	768513	AssignmentExpression	mode |= S_IWOTH		768371	0		|=			
ANR	768514	Identifier	mode		768371	0					
ANR	768515	Identifier	S_IWOTH		768371	1					
ANR	768516	IfStatement	if ( octal & 00001 )		768371	10					
ANR	768517	Condition	octal & 00001	99:6:1696:1708	768371	0	True				
ANR	768518	BitAndExpression	octal & 00001		768371	0		&			
ANR	768519	Identifier	octal		768371	0					
ANR	768520	PrimaryExpression	00001		768371	1					
ANR	768521	CompoundStatement		39:21:603:603	768371	1					
ANR	768522	ExpressionStatement	mode |= S_IXOTH	100:3:1716:1731	768371	0	True				
ANR	768523	AssignmentExpression	mode |= S_IXOTH		768371	0		|=			
ANR	768524	Identifier	mode		768371	0					
ANR	768525	Identifier	S_IXOTH		768371	1					
ANR	768526	ReturnStatement	return true ;	102:2:1739:1750	768371	11	True				
ANR	768527	Identifier	true		768371	0					
ANR	768528	ForStatement	for ( p = str ; * p ; p ++ )		768371	6					
ANR	768529	ForInit	p = str ;	104:6:1761:1768	768371	0	True				
ANR	768530	AssignmentExpression	p = str		768371	0		=			
ANR	768531	Identifier	p		768371	0					
ANR	768532	Identifier	str		768371	1					
ANR	768533	Condition	* p	104:15:1770:1771	768371	1	True				
ANR	768534	UnaryOperationExpression	* p		768371	0					
ANR	768535	UnaryOperator	*		768371	0					
ANR	768536	Identifier	p		768371	1					
ANR	768537	PostIncDecOperationExpression	p ++	104:19:1774:1776	768371	2	True				
ANR	768538	Identifier	p		768371	0					
ANR	768539	IncDec	++		768371	1					
ANR	768540	CompoundStatement		44:24:671:671	768371	3					
ANR	768541	SwitchStatement	switch ( * p )		768371	0					
ANR	768542	Condition	* p	105:9:1790:1791	768371	0	True				
ANR	768543	UnaryOperationExpression	* p		768371	0					
ANR	768544	UnaryOperator	*		768371	0					
ANR	768545	Identifier	p		768371	1					
ANR	768546	CompoundStatement		45:13:686:686	768371	1					
ANR	768547	Label	case 'u' :	107:2:1812:1820	768371	0	True				
ANR	768548	ExpressionStatement	mask |= S_IRWXU	108:3:1825:1840	768371	1	True				
ANR	768549	AssignmentExpression	mask |= S_IRWXU		768371	0		|=			
ANR	768550	Identifier	mask		768371	0					
ANR	768551	Identifier	S_IRWXU		768371	1					
ANR	768552	BreakStatement	break ;	109:3:1845:1850	768371	2	True				
ANR	768553	Label	case 'g' :	110:2:1854:1862	768371	3	True				
ANR	768554	ExpressionStatement	mask |= S_IRWXG	111:3:1867:1882	768371	4	True				
ANR	768555	AssignmentExpression	mask |= S_IRWXG		768371	0		|=			
ANR	768556	Identifier	mask		768371	0					
ANR	768557	Identifier	S_IRWXG		768371	1					
ANR	768558	BreakStatement	break ;	112:3:1887:1892	768371	5	True				
ANR	768559	Label	case 'o' :	113:2:1896:1904	768371	6	True				
ANR	768560	ExpressionStatement	mask |= S_IRWXO	114:3:1909:1924	768371	7	True				
ANR	768561	AssignmentExpression	mask |= S_IRWXO		768371	0		|=			
ANR	768562	Identifier	mask		768371	0					
ANR	768563	Identifier	S_IRWXO		768371	1					
ANR	768564	BreakStatement	break ;	115:3:1929:1934	768371	8	True				
ANR	768565	Label	case 'a' :	116:2:1938:1946	768371	9	True				
ANR	768566	ExpressionStatement	mask |= S_IRWXU | S_IRWXG | S_IRWXO	117:3:1951:1982	768371	10	True				
ANR	768567	AssignmentExpression	mask |= S_IRWXU | S_IRWXG | S_IRWXO		768371	0		|=			
ANR	768568	Identifier	mask		768371	0					
ANR	768569	InclusiveOrExpression	S_IRWXU | S_IRWXG | S_IRWXO		768371	1		|			
ANR	768570	Identifier	S_IRWXU		768371	0					
ANR	768571	InclusiveOrExpression	S_IRWXG | S_IRWXO		768371	1		|			
ANR	768572	Identifier	S_IRWXG		768371	0					
ANR	768573	Identifier	S_IRWXO		768371	1					
ANR	768574	BreakStatement	break ;	118:3:1987:1992	768371	11	True				
ANR	768575	Label	case '+' :	120:2:2010:2018	768371	12	True				
ANR	768576	Label	case '-' :	121:2:2022:2030	768371	13	True				
ANR	768577	Label	case '=' :	122:2:2034:2042	768371	14	True				
ANR	768578	ExpressionStatement	oper = * p	123:3:2047:2056	768371	15	True				
ANR	768579	AssignmentExpression	oper = * p		768371	0		=			
ANR	768580	Identifier	oper		768371	0					
ANR	768581	UnaryOperationExpression	* p		768371	1					
ANR	768582	UnaryOperator	*		768371	0					
ANR	768583	Identifier	p		768371	1					
ANR	768584	BreakStatement	break ;	124:3:2061:2066	768371	16	True				
ANR	768585	Label	case 'r' :	126:2:2084:2092	768371	17	True				
ANR	768586	ExpressionStatement	mode |= S_IRUSR | S_IRGRP | S_IROTH	127:3:2097:2128	768371	18	True				
ANR	768587	AssignmentExpression	mode |= S_IRUSR | S_IRGRP | S_IROTH		768371	0		|=			
ANR	768588	Identifier	mode		768371	0					
ANR	768589	InclusiveOrExpression	S_IRUSR | S_IRGRP | S_IROTH		768371	1		|			
ANR	768590	Identifier	S_IRUSR		768371	0					
ANR	768591	InclusiveOrExpression	S_IRGRP | S_IROTH		768371	1		|			
ANR	768592	Identifier	S_IRGRP		768371	0					
ANR	768593	Identifier	S_IROTH		768371	1					
ANR	768594	BreakStatement	break ;	128:3:2133:2138	768371	19	True				
ANR	768595	Label	case 'w' :	129:2:2142:2150	768371	20	True				
ANR	768596	ExpressionStatement	mode |= S_IWUSR | S_IWGRP | S_IWOTH	130:3:2155:2186	768371	21	True				
ANR	768597	AssignmentExpression	mode |= S_IWUSR | S_IWGRP | S_IWOTH		768371	0		|=			
ANR	768598	Identifier	mode		768371	0					
ANR	768599	InclusiveOrExpression	S_IWUSR | S_IWGRP | S_IWOTH		768371	1		|			
ANR	768600	Identifier	S_IWUSR		768371	0					
ANR	768601	InclusiveOrExpression	S_IWGRP | S_IWOTH		768371	1		|			
ANR	768602	Identifier	S_IWGRP		768371	0					
ANR	768603	Identifier	S_IWOTH		768371	1					
ANR	768604	BreakStatement	break ;	131:3:2191:2196	768371	22	True				
ANR	768605	Label	case 'x' :	132:2:2200:2208	768371	23	True				
ANR	768606	ExpressionStatement	mode |= S_IXUSR | S_IXGRP | S_IXOTH	133:3:2213:2244	768371	24	True				
ANR	768607	AssignmentExpression	mode |= S_IXUSR | S_IXGRP | S_IXOTH		768371	0		|=			
ANR	768608	Identifier	mode		768371	0					
ANR	768609	InclusiveOrExpression	S_IXUSR | S_IXGRP | S_IXOTH		768371	1		|			
ANR	768610	Identifier	S_IXUSR		768371	0					
ANR	768611	InclusiveOrExpression	S_IXGRP | S_IXOTH		768371	1		|			
ANR	768612	Identifier	S_IXGRP		768371	0					
ANR	768613	Identifier	S_IXOTH		768371	1					
ANR	768614	BreakStatement	break ;	134:3:2249:2254	768371	25	True				
ANR	768615	Label	case 's' :	135:2:2258:2266	768371	26	True				
ANR	768616	ExpressionStatement	mode |= S_ISUID | S_ISGID	136:3:2271:2294	768371	27	True				
ANR	768617	AssignmentExpression	mode |= S_ISUID | S_ISGID		768371	0		|=			
ANR	768618	Identifier	mode		768371	0					
ANR	768619	InclusiveOrExpression	S_ISUID | S_ISGID		768371	1		|			
ANR	768620	Identifier	S_ISUID		768371	0					
ANR	768621	Identifier	S_ISGID		768371	1					
ANR	768622	BreakStatement	break ;	137:3:2299:2304	768371	28	True				
ANR	768623	Label	default :	139:2:2322:2329	768371	29	True				
ANR	768624	Identifier	default		768371	0					
ANR	768625	ExpressionStatement	"eprintf ( ""%s: invalid mode\\n"" , str )"	140:3:2334:2369	768371	30	True				
ANR	768626	CallExpression	"eprintf ( ""%s: invalid mode\\n"" , str )"		768371	0					
ANR	768627	Callee	eprintf		768371	0					
ANR	768628	Identifier	eprintf		768371	0					
ANR	768629	ArgumentList	"""%s: invalid mode\\n"""		768371	1					
ANR	768630	Argument	"""%s: invalid mode\\n"""		768371	0					
ANR	768631	PrimaryExpression	"""%s: invalid mode\\n"""		768371	0					
ANR	768632	Argument	str		768371	1					
ANR	768633	Identifier	str		768371	0					
ANR	768634	ReturnStatement	return false ;	141:3:2374:2386	768371	31	True				
ANR	768635	Identifier	false		768371	0					
ANR	768636	IfStatement	if ( mask )		768371	7					
ANR	768637	Condition	mask	144:5:2400:2403	768371	0	True				
ANR	768638	Identifier	mask		768371	0					
ANR	768639	CompoundStatement		84:11:1298:1298	768371	1					
ANR	768640	ExpressionStatement	mode &= mask	145:2:2410:2422	768371	0	True				
ANR	768641	AssignmentExpression	mode &= mask		768371	0		&=			
ANR	768642	Identifier	mode		768371	0					
ANR	768643	Identifier	mask		768371	1					
ANR	768644	ReturnStatement	return true ;	147:1:2428:2439	768371	8	True				
ANR	768645	Identifier	true		768371	0					
ANR	768646	ReturnType	int		768371	1					
ANR	768647	Identifier	parsemode		768371	2					
ANR	768648	ParameterList	const char * str		768371	3					
ANR	768649	Parameter	const char * str	61:14:1090:1104	768371	0	True				
ANR	768650	ParameterType	const char *		768371	0					
ANR	768651	Identifier	str		768371	1					
ANR	768652	CFGEntryNode	ENTRY		768371		True				
ANR	768653	CFGExitNode	EXIT		768371		True				
ANR	768654	Symbol	octal		768371						
ANR	768655	Symbol	S_IWGRP		768371						
ANR	768656	Symbol	& end		768371						
ANR	768657	Symbol	S_IWOTH		768371						
ANR	768658	Symbol	mode		768371						
ANR	768659	Symbol	S_IRUSR		768371						
ANR	768660	Symbol	strtol		768371						
ANR	768661	Symbol	S_IXUSR		768371						
ANR	768662	Symbol	end		768371						
ANR	768663	Symbol	mask		768371						
ANR	768664	Symbol	S_ISGID		768371						
ANR	768665	Symbol	S_IROTH		768371						
ANR	768666	Symbol	S_IXGRP		768371						
ANR	768667	Symbol	S_IXOTH		768371						
ANR	768668	Symbol	false		768371						
ANR	768669	Symbol	str		768371						
ANR	768670	Symbol	p		768371						
ANR	768671	Symbol	S_IRWXU		768371						
ANR	768672	Symbol	S_IWUSR		768371						
ANR	768673	Symbol	S_IRWXO		768371						
ANR	768674	Symbol	S_ISUID		768371						
ANR	768675	Symbol	true		768371						
ANR	768676	Symbol	* end		768371						
ANR	768677	Symbol	* p		768371						
ANR	768678	Symbol	oper		768371						
ANR	768679	Symbol	S_IRGRP		768371						
ANR	768680	Symbol	S_IRWXG		768371						
ANR	768681	Function	agetcwd	150:0:2444:2600							
ANR	768682	FunctionDef	agetcwd ()		768681	0					
ANR	768683	CompoundStatement		150:21:2465:2600	768681	0					
ANR	768684	IdentifierDeclStatement	char * buf = malloc ( 4096 ) ;	151:8:2475:2500	768681	0	True				
ANR	768685	IdentifierDecl	* buf = malloc ( 4096 )		768681	0					
ANR	768686	IdentifierDeclType	char *		768681	0					
ANR	768687	Identifier	buf		768681	1					
ANR	768688	AssignmentExpression	* buf = malloc ( 4096 )		768681	2		=			
ANR	768689	Identifier	buf		768681	0					
ANR	768690	CallExpression	malloc ( 4096 )		768681	1					
ANR	768691	Callee	malloc		768681	0					
ANR	768692	Identifier	malloc		768681	0					
ANR	768693	ArgumentList	4096		768681	1					
ANR	768694	Argument	4096		768681	0					
ANR	768695	PrimaryExpression	4096		768681	0					
ANR	768696	IfStatement	if ( ! buf )		768681	1					
ANR	768697	Condition	! buf	152:5:2507:2510	768681	0	True				
ANR	768698	UnaryOperationExpression	! buf		768681	0					
ANR	768699	UnaryOperator	!		768681	0					
ANR	768700	Identifier	buf		768681	1					
ANR	768701	CompoundStatement		3:11:47:47	768681	1					
ANR	768702	ReturnStatement	return NULL ;	153:2:2517:2528	768681	0	True				
ANR	768703	Identifier	NULL		768681	0					
ANR	768704	IfStatement	"if ( ! getcwd ( buf , 4096 ) )"		768681	2					
ANR	768705	Condition	"! getcwd ( buf , 4096 )"	155:5:2538:2556	768681	0	True				
ANR	768706	UnaryOperationExpression	"! getcwd ( buf , 4096 )"		768681	0					
ANR	768707	UnaryOperator	!		768681	0					
ANR	768708	CallExpression	"getcwd ( buf , 4096 )"		768681	1					
ANR	768709	Callee	getcwd		768681	0					
ANR	768710	Identifier	getcwd		768681	0					
ANR	768711	ArgumentList	buf		768681	1					
ANR	768712	Argument	buf		768681	0					
ANR	768713	Identifier	buf		768681	0					
ANR	768714	Argument	4096		768681	1					
ANR	768715	PrimaryExpression	4096		768681	0					
ANR	768716	CompoundStatement		6:26:93:93	768681	1					
ANR	768717	ExpressionStatement	"eprintf ( ""getcwd:"" )"	156:2:2563:2582	768681	0	True				
ANR	768718	CallExpression	"eprintf ( ""getcwd:"" )"		768681	0					
ANR	768719	Callee	eprintf		768681	0					
ANR	768720	Identifier	eprintf		768681	0					
ANR	768721	ArgumentList	"""getcwd:"""		768681	1					
ANR	768722	Argument	"""getcwd:"""		768681	0					
ANR	768723	PrimaryExpression	"""getcwd:"""		768681	0					
ANR	768724	ReturnStatement	return buf ;	158:1:2588:2598	768681	3	True				
ANR	768725	Identifier	buf		768681	0					
ANR	768726	ReturnType	char *		768681	1					
ANR	768727	Identifier	agetcwd		768681	2					
ANR	768728	ParameterList			768681	3					
ANR	768729	CFGEntryNode	ENTRY		768681		True				
ANR	768730	CFGExitNode	EXIT		768681		True				
ANR	768731	Symbol	malloc		768681						
ANR	768732	Symbol	buf		768681						
ANR	768733	Symbol	getcwd		768681						
ANR	768734	Symbol	NULL		768681						
ANR	768735	Function	recurse	161:0:2603:3276							
ANR	768736	FunctionDef	"recurse (const char * path , int rec , int ( * fn ) ( const char * , int ))"		768735	0					
ANR	768737	CompoundStatement		161:76:2679:3276	768735	0					
ANR	768738	IdentifierDeclStatement	char * cwd ;	162:8:2689:2698	768735	0	True				
ANR	768739	IdentifierDecl	* cwd		768735	0					
ANR	768740	IdentifierDeclType	char *		768735	0					
ANR	768741	Identifier	cwd		768735	1					
ANR	768742	IdentifierDeclStatement	struct dirent * d ;	163:8:2708:2724	768735	1	True				
ANR	768743	IdentifierDecl	* d		768735	0					
ANR	768744	IdentifierDeclType	struct dirent *		768735	0					
ANR	768745	Identifier	d		768735	1					
ANR	768746	IdentifierDeclStatement	struct stat st ;	164:8:2734:2748	768735	2	True				
ANR	768747	IdentifierDecl	st		768735	0					
ANR	768748	IdentifierDeclType	struct stat		768735	0					
ANR	768749	Identifier	st		768735	1					
ANR	768750	IdentifierDeclStatement	DIR * dp ;	165:8:2758:2765	768735	3	True				
ANR	768751	IdentifierDecl	* dp		768735	0					
ANR	768752	IdentifierDeclType	DIR *		768735	0					
ANR	768753	Identifier	dp		768735	1					
ANR	768754	IfStatement	"if ( lstat ( path , & st ) == - 1 || ! S_ISDIR ( st . st_mode ) )"		768735	4					
ANR	768755	Condition	"lstat ( path , & st ) == - 1 || ! S_ISDIR ( st . st_mode )"	167:5:2773:2820	768735	0	True				
ANR	768756	OrExpression	"lstat ( path , & st ) == - 1 || ! S_ISDIR ( st . st_mode )"		768735	0		||			
ANR	768757	EqualityExpression	"lstat ( path , & st ) == - 1"		768735	0		==			
ANR	768758	CallExpression	"lstat ( path , & st )"		768735	0					
ANR	768759	Callee	lstat		768735	0					
ANR	768760	Identifier	lstat		768735	0					
ANR	768761	ArgumentList	path		768735	1					
ANR	768762	Argument	path		768735	0					
ANR	768763	Identifier	path		768735	0					
ANR	768764	Argument	& st		768735	1					
ANR	768765	UnaryOperationExpression	& st		768735	0					
ANR	768766	UnaryOperator	&		768735	0					
ANR	768767	Identifier	st		768735	1					
ANR	768768	UnaryOperationExpression	- 1		768735	1					
ANR	768769	UnaryOperator	-		768735	0					
ANR	768770	PrimaryExpression	1		768735	1					
ANR	768771	UnaryOperationExpression	! S_ISDIR ( st . st_mode )		768735	1					
ANR	768772	UnaryOperator	!		768735	0					
ANR	768773	CallExpression	S_ISDIR ( st . st_mode )		768735	1					
ANR	768774	Callee	S_ISDIR		768735	0					
ANR	768775	Identifier	S_ISDIR		768735	0					
ANR	768776	ArgumentList	st . st_mode		768735	1					
ANR	768777	Argument	st . st_mode		768735	0					
ANR	768778	MemberAccess	st . st_mode		768735	0					
ANR	768779	Identifier	st		768735	0					
ANR	768780	Identifier	st_mode		768735	1					
ANR	768781	CompoundStatement		7:55:143:143	768735	1					
ANR	768782	ReturnStatement	return ;	168:2:2827:2833	768735	0	True				
ANR	768783	ElseStatement	else		768735	0					
ANR	768784	IfStatement	if ( ! ( dp = opendir ( path ) ) )		768735	0					
ANR	768785	Condition	! ( dp = opendir ( path ) )	169:12:2847:2868	768735	0	True				
ANR	768786	UnaryOperationExpression	! ( dp = opendir ( path ) )		768735	0					
ANR	768787	UnaryOperator	!		768735	0					
ANR	768788	AssignmentExpression	dp = opendir ( path )		768735	1		=			
ANR	768789	Identifier	dp		768735	0					
ANR	768790	CallExpression	opendir ( path )		768735	1					
ANR	768791	Callee	opendir		768735	0					
ANR	768792	Identifier	opendir		768735	0					
ANR	768793	ArgumentList	path		768735	1					
ANR	768794	Argument	path		768735	0					
ANR	768795	Identifier	path		768735	0					
ANR	768796	CompoundStatement		9:36:191:191	768735	1					
ANR	768797	ExpressionStatement	"eprintf ( ""opendir %s:"" , path )"	170:2:2875:2904	768735	0	True				
ANR	768798	CallExpression	"eprintf ( ""opendir %s:"" , path )"		768735	0					
ANR	768799	Callee	eprintf		768735	0					
ANR	768800	Identifier	eprintf		768735	0					
ANR	768801	ArgumentList	"""opendir %s:"""		768735	1					
ANR	768802	Argument	"""opendir %s:"""		768735	0					
ANR	768803	PrimaryExpression	"""opendir %s:"""		768735	0					
ANR	768804	Argument	path		768735	1					
ANR	768805	Identifier	path		768735	0					
ANR	768806	ReturnStatement	return ;	171:2:2908:2914	768735	1	True				
ANR	768807	ExpressionStatement	cwd = agetcwd ( )	173:8:2927:2942	768735	5	True				
ANR	768808	AssignmentExpression	cwd = agetcwd ( )		768735	0		=			
ANR	768809	Identifier	cwd		768735	0					
ANR	768810	CallExpression	agetcwd ( )		768735	1					
ANR	768811	Callee	agetcwd		768735	0					
ANR	768812	Identifier	agetcwd		768735	0					
ANR	768813	ArgumentList			768735	1					
ANR	768814	IfStatement	if ( chdir ( path ) == - 1 )		768735	6					
ANR	768815	Condition	chdir ( path ) == - 1	174:12:2956:2973	768735	0	True				
ANR	768816	EqualityExpression	chdir ( path ) == - 1		768735	0		==			
ANR	768817	CallExpression	chdir ( path )		768735	0					
ANR	768818	Callee	chdir		768735	0					
ANR	768819	Identifier	chdir		768735	0					
ANR	768820	ArgumentList	path		768735	1					
ANR	768821	Argument	path		768735	0					
ANR	768822	Identifier	path		768735	0					
ANR	768823	UnaryOperationExpression	- 1		768735	1					
ANR	768824	UnaryOperator	-		768735	0					
ANR	768825	PrimaryExpression	1		768735	1					
ANR	768826	CompoundStatement		14:32:296:296	768735	1					
ANR	768827	ExpressionStatement	"eprintf ( ""chdir %s:"" , path )"	175:16:2994:3021	768735	0	True				
ANR	768828	CallExpression	"eprintf ( ""chdir %s:"" , path )"		768735	0					
ANR	768829	Callee	eprintf		768735	0					
ANR	768830	Identifier	eprintf		768735	0					
ANR	768831	ArgumentList	"""chdir %s:"""		768735	1					
ANR	768832	Argument	"""chdir %s:"""		768735	0					
ANR	768833	PrimaryExpression	"""chdir %s:"""		768735	0					
ANR	768834	Argument	path		768735	1					
ANR	768835	Identifier	path		768735	0					
ANR	768836	ExpressionStatement	closedir ( dp )	176:2:3025:3038	768735	1	True				
ANR	768837	CallExpression	closedir ( dp )		768735	0					
ANR	768838	Callee	closedir		768735	0					
ANR	768839	Identifier	closedir		768735	0					
ANR	768840	ArgumentList	dp		768735	1					
ANR	768841	Argument	dp		768735	0					
ANR	768842	Identifier	dp		768735	0					
ANR	768843	ExpressionStatement	free ( cwd )	177:2:3042:3052	768735	2	True				
ANR	768844	CallExpression	free ( cwd )		768735	0					
ANR	768845	Callee	free		768735	0					
ANR	768846	Identifier	free		768735	0					
ANR	768847	ArgumentList	cwd		768735	1					
ANR	768848	Argument	cwd		768735	0					
ANR	768849	Identifier	cwd		768735	0					
ANR	768850	ReturnStatement	return ;	178:2:3056:3062	768735	3	True				
ANR	768851	WhileStatement	while ( ( d = readdir ( dp ) ) )		768735	7					
ANR	768852	Condition	d = readdir ( dp )	180:8:3075:3092	768735	0	True				
ANR	768853	AssignmentExpression	d = readdir ( dp )		768735	0		=			
ANR	768854	Identifier	d		768735	0					
ANR	768855	CallExpression	readdir ( dp )		768735	1					
ANR	768856	Callee	readdir		768735	0					
ANR	768857	Identifier	readdir		768735	0					
ANR	768858	ArgumentList	dp		768735	1					
ANR	768859	Argument	dp		768735	0					
ANR	768860	Identifier	dp		768735	0					
ANR	768861	CompoundStatement		20:28:415:415	768735	1					
ANR	768862	IfStatement	"if ( strcmp ( d -> d_name , ""."" ) && strcmp ( d -> d_name , "".."" ) )"		768735	0					
ANR	768863	Condition	"strcmp ( d -> d_name , ""."" ) && strcmp ( d -> d_name , "".."" )"	181:6:3103:3153	768735	0	True				
ANR	768864	AndExpression	"strcmp ( d -> d_name , ""."" ) && strcmp ( d -> d_name , "".."" )"		768735	0		&&			
ANR	768865	CallExpression	"strcmp ( d -> d_name , ""."" )"		768735	0					
ANR	768866	Callee	strcmp		768735	0					
ANR	768867	Identifier	strcmp		768735	0					
ANR	768868	ArgumentList	d -> d_name		768735	1					
ANR	768869	Argument	d -> d_name		768735	0					
ANR	768870	PtrMemberAccess	d -> d_name		768735	0					
ANR	768871	Identifier	d		768735	0					
ANR	768872	Identifier	d_name		768735	1					
ANR	768873	Argument	"""."""		768735	1					
ANR	768874	PrimaryExpression	"""."""		768735	0					
ANR	768875	CallExpression	"strcmp ( d -> d_name , "".."" )"		768735	1					
ANR	768876	Callee	strcmp		768735	0					
ANR	768877	Identifier	strcmp		768735	0					
ANR	768878	ArgumentList	d -> d_name		768735	1					
ANR	768879	Argument	d -> d_name		768735	0					
ANR	768880	PtrMemberAccess	d -> d_name		768735	0					
ANR	768881	Identifier	d		768735	0					
ANR	768882	Identifier	d_name		768735	1					
ANR	768883	Argument	""".."""		768735	1					
ANR	768884	PrimaryExpression	""".."""		768735	0					
ANR	768885	CompoundStatement		21:59:476:476	768735	1					
ANR	768886	ExpressionStatement	"fn ( d -> d_name , 1 )"	182:3:3161:3178	768735	0	True				
ANR	768887	CallExpression	"fn ( d -> d_name , 1 )"		768735	0					
ANR	768888	Callee	fn		768735	0					
ANR	768889	Identifier	fn		768735	0					
ANR	768890	ArgumentList	d -> d_name		768735	1					
ANR	768891	Argument	d -> d_name		768735	0					
ANR	768892	PtrMemberAccess	d -> d_name		768735	0					
ANR	768893	Identifier	d		768735	0					
ANR	768894	Identifier	d_name		768735	1					
ANR	768895	Argument	1		768735	1					
ANR	768896	PrimaryExpression	1		768735	0					
ANR	768897	ExpressionStatement	closedir ( dp )	186:1:3189:3202	768735	8	True				
ANR	768898	CallExpression	closedir ( dp )		768735	0					
ANR	768899	Callee	closedir		768735	0					
ANR	768900	Identifier	closedir		768735	0					
ANR	768901	ArgumentList	dp		768735	1					
ANR	768902	Argument	dp		768735	0					
ANR	768903	Identifier	dp		768735	0					
ANR	768904	IfStatement	if ( chdir ( cwd ) == - 1 )		768735	9					
ANR	768905	Condition	chdir ( cwd ) == - 1	187:5:3209:3225	768735	0	True				
ANR	768906	EqualityExpression	chdir ( cwd ) == - 1		768735	0		==			
ANR	768907	CallExpression	chdir ( cwd )		768735	0					
ANR	768908	Callee	chdir		768735	0					
ANR	768909	Identifier	chdir		768735	0					
ANR	768910	ArgumentList	cwd		768735	1					
ANR	768911	Argument	cwd		768735	0					
ANR	768912	Identifier	cwd		768735	0					
ANR	768913	UnaryOperationExpression	- 1		768735	1					
ANR	768914	UnaryOperator	-		768735	0					
ANR	768915	PrimaryExpression	1		768735	1					
ANR	768916	CompoundStatement		27:24:548:548	768735	1					
ANR	768917	ExpressionStatement	"eprintf ( ""chdir %s:"" , cwd )"	188:2:3232:3258	768735	0	True				
ANR	768918	CallExpression	"eprintf ( ""chdir %s:"" , cwd )"		768735	0					
ANR	768919	Callee	eprintf		768735	0					
ANR	768920	Identifier	eprintf		768735	0					
ANR	768921	ArgumentList	"""chdir %s:"""		768735	1					
ANR	768922	Argument	"""chdir %s:"""		768735	0					
ANR	768923	PrimaryExpression	"""chdir %s:"""		768735	0					
ANR	768924	Argument	cwd		768735	1					
ANR	768925	Identifier	cwd		768735	0					
ANR	768926	ExpressionStatement	free ( cwd )	190:1:3264:3274	768735	10	True				
ANR	768927	CallExpression	free ( cwd )		768735	0					
ANR	768928	Callee	free		768735	0					
ANR	768929	Identifier	free		768735	0					
ANR	768930	ArgumentList	cwd		768735	1					
ANR	768931	Argument	cwd		768735	0					
ANR	768932	Identifier	cwd		768735	0					
ANR	768933	ReturnType	static void		768735	1					
ANR	768934	Identifier	recurse		768735	2					
ANR	768935	ParameterList	"const char * path , int rec , int ( * fn ) ( const char * , int )"		768735	3					
ANR	768936	Parameter	const char * path	161:20:2623:2638	768735	0	True				
ANR	768937	ParameterType	const char *		768735	0					
ANR	768938	Identifier	path		768735	1					
ANR	768939	Parameter	int rec	161:38:2641:2647	768735	1	True				
ANR	768940	ParameterType	int		768735	0					
ANR	768941	Identifier	rec		768735	1					
ANR	768942	Parameter	"int ( * fn ) ( const char * , int )"	161:47:2650:2676	768735	2	True				
ANR	768943	ParameterType	"(( const char * , int ) int) *"		768735	0					
ANR	768944	Identifier	fn		768735	1					
ANR	768945	CFGEntryNode	ENTRY		768735		True				
ANR	768946	CFGExitNode	EXIT		768735		True				
ANR	768947	Symbol	strcmp		768735						
ANR	768948	Symbol	st		768735						
ANR	768949	Symbol	d		768735						
ANR	768950	Symbol	lstat		768735						
ANR	768951	Symbol	fn		768735						
ANR	768952	Symbol	& st		768735						
ANR	768953	Symbol	st . st_mode		768735						
ANR	768954	Symbol	chdir		768735						
ANR	768955	Symbol	dp		768735						
ANR	768956	Symbol	* d		768735						
ANR	768957	Symbol	path		768735						
ANR	768958	Symbol	rec		768735						
ANR	768959	Symbol	cwd		768735						
ANR	768960	Symbol	readdir		768735						
ANR	768961	Symbol	opendir		768735						
ANR	768962	Symbol	d -> d_name		768735						
ANR	768963	Symbol	S_ISDIR		768735						
ANR	768964	Symbol	agetcwd		768735						
