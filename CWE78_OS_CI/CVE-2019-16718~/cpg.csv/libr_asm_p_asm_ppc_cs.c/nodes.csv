command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3504317	File	data/converged/CVE-2019-16718~_radare2/libr_asm_p_asm_ppc_cs.c								
ANR	3504318	DeclStmt									
ANR	3504319	Decl							csh	csh	handle
ANR	3504320	Function	the_end	11:0:221:320							
ANR	3504321	FunctionDef	the_end (void * p)		3504320	0					
ANR	3504322	CompoundStatement		11:29:250:320	3504320	0					
ANR	3504323	IfStatement	if ( handle )		3504320	0					
ANR	3504324	Condition	handle	12:5:257:262	3504320	0	True				
ANR	3504325	Identifier	handle		3504320	0					
ANR	3504326	CompoundStatement		2:13:14:14	3504320	1					
ANR	3504327	ExpressionStatement	cs_close ( & handle )	13:2:269:287	3504320	0	True				
ANR	3504328	CallExpression	cs_close ( & handle )		3504320	0					
ANR	3504329	Callee	cs_close		3504320	0					
ANR	3504330	Identifier	cs_close		3504320	0					
ANR	3504331	ArgumentList	& handle		3504320	1					
ANR	3504332	Argument	& handle		3504320	0					
ANR	3504333	UnaryOperationExpression	& handle		3504320	0					
ANR	3504334	UnaryOperator	&		3504320	0					
ANR	3504335	Identifier	handle		3504320	1					
ANR	3504336	ExpressionStatement	handle = 0	14:2:291:301	3504320	1	True				
ANR	3504337	AssignmentExpression	handle = 0		3504320	0		=			
ANR	3504338	Identifier	handle		3504320	0					
ANR	3504339	PrimaryExpression	0		3504320	1					
ANR	3504340	ReturnStatement	return true ;	16:1:307:318	3504320	1	True				
ANR	3504341	Identifier	true		3504320	0					
ANR	3504342	ReturnType	static bool		3504320	1					
ANR	3504343	Identifier	the_end		3504320	2					
ANR	3504344	ParameterList	void * p		3504320	3					
ANR	3504345	Parameter	void * p	11:20:241:247	3504320	0	True				
ANR	3504346	ParameterType	void *		3504320	0					
ANR	3504347	Identifier	p		3504320	1					
ANR	3504348	CFGEntryNode	ENTRY		3504320		True				
ANR	3504349	CFGExitNode	EXIT		3504320		True				
ANR	3504350	Symbol	p		3504320						
ANR	3504351	Symbol	& handle		3504320						
ANR	3504352	Symbol	true		3504320						
ANR	3504353	Symbol	handle		3504320						
ANR	3504354	Function	decompile_vle	19:0:323:796							
ANR	3504355	FunctionDef	"decompile_vle (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3504354	0					
ANR	3504356	CompoundStatement		19:71:394:796	3504354	0					
ANR	3504357	IdentifierDeclStatement	vle_t * instr = 0 ;	20:1:397:413	3504354	0	True				
ANR	3504358	IdentifierDecl	* instr = 0		3504354	0					
ANR	3504359	IdentifierDeclType	vle_t *		3504354	0					
ANR	3504360	Identifier	instr		3504354	1					
ANR	3504361	AssignmentExpression	* instr = 0		3504354	2		=			
ANR	3504362	Identifier	instr		3504354	0					
ANR	3504363	PrimaryExpression	0		3504354	1					
ANR	3504364	IdentifierDeclStatement	vle_handle handle = { 0 } ;	21:1:416:439	3504354	1	True				
ANR	3504365	IdentifierDecl	handle = { 0 }		3504354	0					
ANR	3504366	IdentifierDeclType	vle_handle		3504354	0					
ANR	3504367	Identifier	handle		3504354	1					
ANR	3504368	AssignmentExpression	handle = { 0 }		3504354	2		=			
ANR	3504369	Identifier	handle		3504354	0					
ANR	3504370	InitializerList	0		3504354	1					
ANR	3504371	PrimaryExpression	0		3504354	0					
ANR	3504372	IfStatement	if ( len < 2 )		3504354	2					
ANR	3504373	Condition	len < 2	22:5:446:452	3504354	0	True				
ANR	3504374	RelationalExpression	len < 2		3504354	0		<			
ANR	3504375	Identifier	len		3504354	0					
ANR	3504376	PrimaryExpression	2		3504354	1					
ANR	3504377	CompoundStatement		4:14:60:60	3504354	1					
ANR	3504378	ReturnStatement	return - 1 ;	23:2:459:468	3504354	0	True				
ANR	3504379	UnaryOperationExpression	- 1		3504354	0					
ANR	3504380	UnaryOperator	-		3504354	0					
ANR	3504381	PrimaryExpression	1		3504354	1					
ANR	3504382	IfStatement	"if ( ! vle_init ( & handle , buf , len ) && ( instr = vle_next ( & handle ) ) )"		3504354	3					
ANR	3504383	Condition	"! vle_init ( & handle , buf , len ) && ( instr = vle_next ( & handle ) )"	25:5:478:538	3504354	0	True				
ANR	3504384	AndExpression	"! vle_init ( & handle , buf , len ) && ( instr = vle_next ( & handle ) )"		3504354	0		&&			
ANR	3504385	UnaryOperationExpression	"! vle_init ( & handle , buf , len )"		3504354	0					
ANR	3504386	UnaryOperator	!		3504354	0					
ANR	3504387	CallExpression	"vle_init ( & handle , buf , len )"		3504354	1					
ANR	3504388	Callee	vle_init		3504354	0					
ANR	3504389	Identifier	vle_init		3504354	0					
ANR	3504390	ArgumentList	& handle		3504354	1					
ANR	3504391	Argument	& handle		3504354	0					
ANR	3504392	UnaryOperationExpression	& handle		3504354	0					
ANR	3504393	UnaryOperator	&		3504354	0					
ANR	3504394	Identifier	handle		3504354	1					
ANR	3504395	Argument	buf		3504354	1					
ANR	3504396	Identifier	buf		3504354	0					
ANR	3504397	Argument	len		3504354	2					
ANR	3504398	Identifier	len		3504354	0					
ANR	3504399	AssignmentExpression	instr = vle_next ( & handle )		3504354	1		=			
ANR	3504400	Identifier	instr		3504354	0					
ANR	3504401	CallExpression	vle_next ( & handle )		3504354	1					
ANR	3504402	Callee	vle_next		3504354	0					
ANR	3504403	Identifier	vle_next		3504354	0					
ANR	3504404	ArgumentList	& handle		3504354	1					
ANR	3504405	Argument	& handle		3504354	0					
ANR	3504406	UnaryOperationExpression	& handle		3504354	0					
ANR	3504407	UnaryOperator	&		3504354	0					
ANR	3504408	Identifier	handle		3504354	1					
ANR	3504409	CompoundStatement		9:2:176:192	3504354	1					
ANR	3504410	ExpressionStatement	op -> size = instr -> size	26:2:545:567	3504354	0	True				
ANR	3504411	AssignmentExpression	op -> size = instr -> size		3504354	0		=			
ANR	3504412	PtrMemberAccess	op -> size		3504354	0					
ANR	3504413	Identifier	op		3504354	0					
ANR	3504414	Identifier	size		3504354	1					
ANR	3504415	PtrMemberAccess	instr -> size		3504354	1					
ANR	3504416	Identifier	instr		3504354	0					
ANR	3504417	Identifier	size		3504354	1					
ANR	3504418	IdentifierDeclStatement	char buf_asm [ 64 ] ;	27:2:571:587	3504354	1	True				
ANR	3504419	IdentifierDecl	buf_asm [ 64 ]		3504354	0					
ANR	3504420	IdentifierDeclType	char [ 64 ]		3504354	0					
ANR	3504421	Identifier	buf_asm		3504354	1					
ANR	3504422	PrimaryExpression	64		3504354	2					
ANR	3504423	ExpressionStatement	"vle_snprint ( buf_asm , sizeof ( buf_asm ) , a -> pc , instr )"	28:2:591:644	3504354	2	True				
ANR	3504424	CallExpression	"vle_snprint ( buf_asm , sizeof ( buf_asm ) , a -> pc , instr )"		3504354	0					
ANR	3504425	Callee	vle_snprint		3504354	0					
ANR	3504426	Identifier	vle_snprint		3504354	0					
ANR	3504427	ArgumentList	buf_asm		3504354	1					
ANR	3504428	Argument	buf_asm		3504354	0					
ANR	3504429	Identifier	buf_asm		3504354	0					
ANR	3504430	Argument	sizeof ( buf_asm )		3504354	1					
ANR	3504431	SizeofExpression	sizeof ( buf_asm )		3504354	0					
ANR	3504432	Sizeof	sizeof		3504354	0					
ANR	3504433	SizeofOperand	buf_asm		3504354	1					
ANR	3504434	Argument	a -> pc		3504354	2					
ANR	3504435	PtrMemberAccess	a -> pc		3504354	0					
ANR	3504436	Identifier	a		3504354	0					
ANR	3504437	Identifier	pc		3504354	1					
ANR	3504438	Argument	instr		3504354	3					
ANR	3504439	Identifier	instr		3504354	0					
ANR	3504440	ExpressionStatement	"r_asm_op_set_asm ( op , buf_asm )"	29:2:648:678	3504354	3	True				
ANR	3504441	CallExpression	"r_asm_op_set_asm ( op , buf_asm )"		3504354	0					
ANR	3504442	Callee	r_asm_op_set_asm		3504354	0					
ANR	3504443	Identifier	r_asm_op_set_asm		3504354	0					
ANR	3504444	ArgumentList	op		3504354	1					
ANR	3504445	Argument	op		3504354	0					
ANR	3504446	Identifier	op		3504354	0					
ANR	3504447	Argument	buf_asm		3504354	1					
ANR	3504448	Identifier	buf_asm		3504354	0					
ANR	3504449	ExpressionStatement	vle_free ( instr )	30:2:682:698	3504354	4	True				
ANR	3504450	CallExpression	vle_free ( instr )		3504354	0					
ANR	3504451	Callee	vle_free		3504354	0					
ANR	3504452	Identifier	vle_free		3504354	0					
ANR	3504453	ArgumentList	instr		3504354	1					
ANR	3504454	Argument	instr		3504354	0					
ANR	3504455	Identifier	instr		3504354	0					
ANR	3504456	ElseStatement	else		3504354	0					
ANR	3504457	CompoundStatement		13:8:313:313	3504354	0					
ANR	3504458	ExpressionStatement	"r_asm_op_set_asm ( op , ""invalid"" )"	32:2:712:744	3504354	0	True				
ANR	3504459	CallExpression	"r_asm_op_set_asm ( op , ""invalid"" )"		3504354	0					
ANR	3504460	Callee	r_asm_op_set_asm		3504354	0					
ANR	3504461	Identifier	r_asm_op_set_asm		3504354	0					
ANR	3504462	ArgumentList	op		3504354	1					
ANR	3504463	Argument	op		3504354	0					
ANR	3504464	Identifier	op		3504354	0					
ANR	3504465	Argument	"""invalid"""		3504354	1					
ANR	3504466	PrimaryExpression	"""invalid"""		3504354	0					
ANR	3504467	ExpressionStatement	op -> size = 2	33:2:748:760	3504354	1	True				
ANR	3504468	AssignmentExpression	op -> size = 2		3504354	0		=			
ANR	3504469	PtrMemberAccess	op -> size		3504354	0					
ANR	3504470	Identifier	op		3504354	0					
ANR	3504471	Identifier	size		3504354	1					
ANR	3504472	PrimaryExpression	2		3504354	1					
ANR	3504473	ReturnStatement	return - 1 ;	34:2:764:773	3504354	2	True				
ANR	3504474	UnaryOperationExpression	- 1		3504354	0					
ANR	3504475	UnaryOperator	-		3504354	0					
ANR	3504476	PrimaryExpression	1		3504354	1					
ANR	3504477	ReturnStatement	return op -> size ;	36:1:779:794	3504354	4	True				
ANR	3504478	PtrMemberAccess	op -> size		3504354	0					
ANR	3504479	Identifier	op		3504354	0					
ANR	3504480	Identifier	size		3504354	1					
ANR	3504481	ReturnType	static int		3504354	1					
ANR	3504482	Identifier	decompile_vle		3504354	2					
ANR	3504483	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3504354	3					
ANR	3504484	Parameter	RAsm * a	19:25:348:354	3504354	0	True				
ANR	3504485	ParameterType	RAsm *		3504354	0					
ANR	3504486	Identifier	a		3504354	1					
ANR	3504487	Parameter	RAsmOp * op	19:34:357:366	3504354	1	True				
ANR	3504488	ParameterType	RAsmOp *		3504354	0					
ANR	3504489	Identifier	op		3504354	1					
ANR	3504490	Parameter	const ut8 * buf	19:46:369:382	3504354	2	True				
ANR	3504491	ParameterType	const ut8 *		3504354	0					
ANR	3504492	Identifier	buf		3504354	1					
ANR	3504493	Parameter	int len	19:62:385:391	3504354	3	True				
ANR	3504494	ParameterType	int		3504354	0					
ANR	3504495	Identifier	len		3504354	1					
ANR	3504496	CFGEntryNode	ENTRY		3504354		True				
ANR	3504497	CFGExitNode	EXIT		3504354		True				
ANR	3504498	Symbol	a		3504354						
ANR	3504499	Symbol	op		3504354						
ANR	3504500	Symbol	* op		3504354						
ANR	3504501	Symbol	handle		3504354						
ANR	3504502	Symbol	* instr		3504354						
ANR	3504503	Symbol	* a		3504354						
ANR	3504504	Symbol	a -> pc		3504354						
ANR	3504505	Symbol	instr -> size		3504354						
ANR	3504506	Symbol	vle_next		3504354						
ANR	3504507	Symbol	vle_init		3504354						
ANR	3504508	Symbol	buf		3504354						
ANR	3504509	Symbol	len		3504354						
ANR	3504510	Symbol	& handle		3504354						
ANR	3504511	Symbol	instr		3504354						
ANR	3504512	Symbol	op -> size		3504354						
ANR	3504513	Symbol	buf_asm		3504354						
ANR	3504514	Function	decompile_ps	39:0:799:1238							
ANR	3504515	FunctionDef	"decompile_ps (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3504514	0					
ANR	3504516	CompoundStatement		39:70:869:1238	3504514	0					
ANR	3504517	IdentifierDeclStatement	ppcps_t instr = { 0 } ;	40:1:872:891	3504514	0	True				
ANR	3504518	IdentifierDecl	instr = { 0 }		3504514	0					
ANR	3504519	IdentifierDeclType	ppcps_t		3504514	0					
ANR	3504520	Identifier	instr		3504514	1					
ANR	3504521	AssignmentExpression	instr = { 0 }		3504514	2		=			
ANR	3504522	Identifier	instr		3504514	0					
ANR	3504523	InitializerList	0		3504514	1					
ANR	3504524	PrimaryExpression	0		3504514	0					
ANR	3504525	IfStatement	if ( len < 4 )		3504514	1					
ANR	3504526	Condition	len < 4	41:5:898:904	3504514	0	True				
ANR	3504527	RelationalExpression	len < 4		3504514	0		<			
ANR	3504528	Identifier	len		3504514	0					
ANR	3504529	PrimaryExpression	4		3504514	1					
ANR	3504530	CompoundStatement		3:14:37:37	3504514	1					
ANR	3504531	ReturnStatement	return - 1 ;	42:2:911:920	3504514	0	True				
ANR	3504532	UnaryOperationExpression	- 1		3504514	0					
ANR	3504533	UnaryOperator	-		3504514	0					
ANR	3504534	PrimaryExpression	1		3504514	1					
ANR	3504535	ExpressionStatement	op -> size = 4	44:1:926:938	3504514	2	True				
ANR	3504536	AssignmentExpression	op -> size = 4		3504514	0		=			
ANR	3504537	PtrMemberAccess	op -> size		3504514	0					
ANR	3504538	Identifier	op		3504514	0					
ANR	3504539	Identifier	size		3504514	1					
ANR	3504540	PrimaryExpression	4		3504514	1					
ANR	3504541	IdentifierDeclStatement	const ut32 data = ( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ] ;	45:1:941:1015	3504514	3	True				
ANR	3504542	IdentifierDecl	data = ( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		3504514	0					
ANR	3504543	IdentifierDeclType	const ut32		3504514	0					
ANR	3504544	Identifier	data		3504514	1					
ANR	3504545	AssignmentExpression	data = ( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		3504514	2		=			
ANR	3504546	Identifier	data		3504514	0					
ANR	3504547	InclusiveOrExpression	( buf [ 0 ] << 24 ) | ( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		3504514	1		|			
ANR	3504548	ShiftExpression	buf [ 0 ] << 24		3504514	0		<<			
ANR	3504549	ArrayIndexing	buf [ 0 ]		3504514	0					
ANR	3504550	Identifier	buf		3504514	0					
ANR	3504551	PrimaryExpression	0		3504514	1					
ANR	3504552	PrimaryExpression	24		3504514	1					
ANR	3504553	InclusiveOrExpression	( buf [ 1 ] << 16 ) | ( buf [ 2 ] << 8 ) | buf [ 3 ]		3504514	1		|			
ANR	3504554	ShiftExpression	buf [ 1 ] << 16		3504514	0		<<			
ANR	3504555	ArrayIndexing	buf [ 1 ]		3504514	0					
ANR	3504556	Identifier	buf		3504514	0					
ANR	3504557	PrimaryExpression	1		3504514	1					
ANR	3504558	PrimaryExpression	16		3504514	1					
ANR	3504559	InclusiveOrExpression	( buf [ 2 ] << 8 ) | buf [ 3 ]		3504514	1		|			
ANR	3504560	ShiftExpression	buf [ 2 ] << 8		3504514	0		<<			
ANR	3504561	ArrayIndexing	buf [ 2 ]		3504514	0					
ANR	3504562	Identifier	buf		3504514	0					
ANR	3504563	PrimaryExpression	2		3504514	1					
ANR	3504564	PrimaryExpression	8		3504514	1					
ANR	3504565	ArrayIndexing	buf [ 3 ]		3504514	1					
ANR	3504566	Identifier	buf		3504514	0					
ANR	3504567	PrimaryExpression	3		3504514	1					
ANR	3504568	IfStatement	"if ( libps_decode ( data , & instr ) < 1 )"		3504514	4					
ANR	3504569	Condition	"libps_decode ( data , & instr ) < 1"	46:5:1022:1052	3504514	0	True				
ANR	3504570	RelationalExpression	"libps_decode ( data , & instr ) < 1"		3504514	0		<			
ANR	3504571	CallExpression	"libps_decode ( data , & instr )"		3504514	0					
ANR	3504572	Callee	libps_decode		3504514	0					
ANR	3504573	Identifier	libps_decode		3504514	0					
ANR	3504574	ArgumentList	data		3504514	1					
ANR	3504575	Argument	data		3504514	0					
ANR	3504576	Identifier	data		3504514	0					
ANR	3504577	Argument	& instr		3504514	1					
ANR	3504578	UnaryOperationExpression	& instr		3504514	0					
ANR	3504579	UnaryOperator	&		3504514	0					
ANR	3504580	Identifier	instr		3504514	1					
ANR	3504581	PrimaryExpression	1		3504514	1					
ANR	3504582	CompoundStatement		8:38:185:185	3504514	1					
ANR	3504583	ExpressionStatement	"r_asm_op_set_asm ( op , ""invalid"" )"	47:2:1059:1091	3504514	0	True				
ANR	3504584	CallExpression	"r_asm_op_set_asm ( op , ""invalid"" )"		3504514	0					
ANR	3504585	Callee	r_asm_op_set_asm		3504514	0					
ANR	3504586	Identifier	r_asm_op_set_asm		3504514	0					
ANR	3504587	ArgumentList	op		3504514	1					
ANR	3504588	Argument	op		3504514	0					
ANR	3504589	Identifier	op		3504514	0					
ANR	3504590	Argument	"""invalid"""		3504514	1					
ANR	3504591	PrimaryExpression	"""invalid"""		3504514	0					
ANR	3504592	ReturnStatement	return - 1 ;	48:2:1095:1104	3504514	1	True				
ANR	3504593	UnaryOperationExpression	- 1		3504514	0					
ANR	3504594	UnaryOperator	-		3504514	0					
ANR	3504595	PrimaryExpression	1		3504514	1					
ANR	3504596	IdentifierDeclStatement	char buf_asm [ 64 ] ;	50:1:1110:1126	3504514	5	True				
ANR	3504597	IdentifierDecl	buf_asm [ 64 ]		3504514	0					
ANR	3504598	IdentifierDeclType	char [ 64 ]		3504514	0					
ANR	3504599	Identifier	buf_asm		3504514	1					
ANR	3504600	PrimaryExpression	64		3504514	2					
ANR	3504601	ExpressionStatement	"libps_snprint ( buf_asm , sizeof ( buf_asm ) , a -> pc , & instr )"	51:1:1129:1185	3504514	6	True				
ANR	3504602	CallExpression	"libps_snprint ( buf_asm , sizeof ( buf_asm ) , a -> pc , & instr )"		3504514	0					
ANR	3504603	Callee	libps_snprint		3504514	0					
ANR	3504604	Identifier	libps_snprint		3504514	0					
ANR	3504605	ArgumentList	buf_asm		3504514	1					
ANR	3504606	Argument	buf_asm		3504514	0					
ANR	3504607	Identifier	buf_asm		3504514	0					
ANR	3504608	Argument	sizeof ( buf_asm )		3504514	1					
ANR	3504609	SizeofExpression	sizeof ( buf_asm )		3504514	0					
ANR	3504610	Sizeof	sizeof		3504514	0					
ANR	3504611	SizeofOperand	buf_asm		3504514	1					
ANR	3504612	Argument	a -> pc		3504514	2					
ANR	3504613	PtrMemberAccess	a -> pc		3504514	0					
ANR	3504614	Identifier	a		3504514	0					
ANR	3504615	Identifier	pc		3504514	1					
ANR	3504616	Argument	& instr		3504514	3					
ANR	3504617	UnaryOperationExpression	& instr		3504514	0					
ANR	3504618	UnaryOperator	&		3504514	0					
ANR	3504619	Identifier	instr		3504514	1					
ANR	3504620	ExpressionStatement	"r_asm_op_set_asm ( op , buf_asm )"	52:1:1188:1218	3504514	7	True				
ANR	3504621	CallExpression	"r_asm_op_set_asm ( op , buf_asm )"		3504514	0					
ANR	3504622	Callee	r_asm_op_set_asm		3504514	0					
ANR	3504623	Identifier	r_asm_op_set_asm		3504514	0					
ANR	3504624	ArgumentList	op		3504514	1					
ANR	3504625	Argument	op		3504514	0					
ANR	3504626	Identifier	op		3504514	0					
ANR	3504627	Argument	buf_asm		3504514	1					
ANR	3504628	Identifier	buf_asm		3504514	0					
ANR	3504629	ReturnStatement	return op -> size ;	53:1:1221:1236	3504514	8	True				
ANR	3504630	PtrMemberAccess	op -> size		3504514	0					
ANR	3504631	Identifier	op		3504514	0					
ANR	3504632	Identifier	size		3504514	1					
ANR	3504633	ReturnType	static int		3504514	1					
ANR	3504634	Identifier	decompile_ps		3504514	2					
ANR	3504635	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3504514	3					
ANR	3504636	Parameter	RAsm * a	39:24:823:829	3504514	0	True				
ANR	3504637	ParameterType	RAsm *		3504514	0					
ANR	3504638	Identifier	a		3504514	1					
ANR	3504639	Parameter	RAsmOp * op	39:33:832:841	3504514	1	True				
ANR	3504640	ParameterType	RAsmOp *		3504514	0					
ANR	3504641	Identifier	op		3504514	1					
ANR	3504642	Parameter	const ut8 * buf	39:45:844:857	3504514	2	True				
ANR	3504643	ParameterType	const ut8 *		3504514	0					
ANR	3504644	Identifier	buf		3504514	1					
ANR	3504645	Parameter	int len	39:61:860:866	3504514	3	True				
ANR	3504646	ParameterType	int		3504514	0					
ANR	3504647	Identifier	len		3504514	1					
ANR	3504648	CFGEntryNode	ENTRY		3504514		True				
ANR	3504649	CFGExitNode	EXIT		3504514		True				
ANR	3504650	Symbol	a		3504514						
ANR	3504651	Symbol	op		3504514						
ANR	3504652	Symbol	* buf		3504514						
ANR	3504653	Symbol	libps_decode		3504514						
ANR	3504654	Symbol	* op		3504514						
ANR	3504655	Symbol	data		3504514						
ANR	3504656	Symbol	* a		3504514						
ANR	3504657	Symbol	a -> pc		3504514						
ANR	3504658	Symbol	& instr		3504514						
ANR	3504659	Symbol	buf		3504514						
ANR	3504660	Symbol	len		3504514						
ANR	3504661	Symbol	instr		3504514						
ANR	3504662	Symbol	op -> size		3504514						
ANR	3504663	Symbol	buf_asm		3504514						
ANR	3504664	Function	disassemble	56:0:1241:2627							
ANR	3504665	FunctionDef	"disassemble (RAsm * a , RAsmOp * op , const ut8 * buf , int len)"		3504664	0					
ANR	3504666	CompoundStatement		56:69:1310:2627	3504664	0					
ANR	3504667	Statement	static	57:1:1313:1318	3504664	0	True				
ANR	3504668	IdentifierDeclStatement	"int omode = - 1 , obits = - 1 ;"	57:8:1320:1346	3504664	1	True				
ANR	3504669	IdentifierDecl	omode = - 1		3504664	0					
ANR	3504670	IdentifierDeclType	int		3504664	0					
ANR	3504671	Identifier	omode		3504664	1					
ANR	3504672	AssignmentExpression	omode = - 1		3504664	2		=			
ANR	3504673	Identifier	omode		3504664	0					
ANR	3504674	UnaryOperationExpression	- 1		3504664	1					
ANR	3504675	UnaryOperator	-		3504664	0					
ANR	3504676	PrimaryExpression	1		3504664	1					
ANR	3504677	IdentifierDecl	obits = - 1		3504664	1					
ANR	3504678	IdentifierDeclType	int		3504664	0					
ANR	3504679	Identifier	obits		3504664	1					
ANR	3504680	AssignmentExpression	obits = - 1		3504664	2		=			
ANR	3504681	Identifier	obits		3504664	0					
ANR	3504682	UnaryOperationExpression	- 1		3504664	1					
ANR	3504683	UnaryOperator	-		3504664	0					
ANR	3504684	PrimaryExpression	1		3504664	1					
ANR	3504685	IdentifierDeclStatement	"int n , ret ;"	58:1:1349:1359	3504664	2	True				
ANR	3504686	IdentifierDecl	n		3504664	0					
ANR	3504687	IdentifierDeclType	int		3504664	0					
ANR	3504688	Identifier	n		3504664	1					
ANR	3504689	IdentifierDecl	ret		3504664	1					
ANR	3504690	IdentifierDeclType	int		3504664	0					
ANR	3504691	Identifier	ret		3504664	1					
ANR	3504692	IdentifierDeclStatement	ut64 off = a -> pc ;	59:1:1362:1378	3504664	3	True				
ANR	3504693	IdentifierDecl	off = a -> pc		3504664	0					
ANR	3504694	IdentifierDeclType	ut64		3504664	0					
ANR	3504695	Identifier	off		3504664	1					
ANR	3504696	AssignmentExpression	off = a -> pc		3504664	2		=			
ANR	3504697	Identifier	off		3504664	0					
ANR	3504698	PtrMemberAccess	a -> pc		3504664	1					
ANR	3504699	Identifier	a		3504664	0					
ANR	3504700	Identifier	pc		3504664	1					
ANR	3504701	IdentifierDeclStatement	cs_insn * insn ;	60:1:1381:1394	3504664	4	True				
ANR	3504702	IdentifierDecl	* insn		3504664	0					
ANR	3504703	IdentifierDeclType	cs_insn *		3504664	0					
ANR	3504704	Identifier	insn		3504664	1					
ANR	3504705	IdentifierDeclStatement	int mode = ( a -> bits == 64 ) ? CS_MODE_64 : ( a -> bits == 32 ) ? CS_MODE_32 : 0 ;	61:1:1397:1471	3504664	5	True				
ANR	3504706	IdentifierDecl	mode = ( a -> bits == 64 ) ? CS_MODE_64 : ( a -> bits == 32 ) ? CS_MODE_32 : 0		3504664	0					
ANR	3504707	IdentifierDeclType	int		3504664	0					
ANR	3504708	Identifier	mode		3504664	1					
ANR	3504709	AssignmentExpression	mode = ( a -> bits == 64 ) ? CS_MODE_64 : ( a -> bits == 32 ) ? CS_MODE_32 : 0		3504664	2		=			
ANR	3504710	Identifier	mode		3504664	0					
ANR	3504711	ConditionalExpression	( a -> bits == 64 ) ? CS_MODE_64 : ( a -> bits == 32 ) ? CS_MODE_32 : 0		3504664	1					
ANR	3504712	Condition	a -> bits == 64		3504664	0					
ANR	3504713	EqualityExpression	a -> bits == 64		3504664	0		==			
ANR	3504714	PtrMemberAccess	a -> bits		3504664	0					
ANR	3504715	Identifier	a		3504664	0					
ANR	3504716	Identifier	bits		3504664	1					
ANR	3504717	PrimaryExpression	64		3504664	1					
ANR	3504718	Identifier	CS_MODE_64		3504664	1					
ANR	3504719	ConditionalExpression	( a -> bits == 32 ) ? CS_MODE_32 : 0		3504664	2					
ANR	3504720	Condition	a -> bits == 32		3504664	0					
ANR	3504721	EqualityExpression	a -> bits == 32		3504664	0		==			
ANR	3504722	PtrMemberAccess	a -> bits		3504664	0					
ANR	3504723	Identifier	a		3504664	0					
ANR	3504724	Identifier	bits		3504664	1					
ANR	3504725	PrimaryExpression	32		3504664	1					
ANR	3504726	Identifier	CS_MODE_32		3504664	1					
ANR	3504727	PrimaryExpression	0		3504664	2					
ANR	3504728	ExpressionStatement	mode |= a -> big_endian ? CS_MODE_BIG_ENDIAN : CS_MODE_LITTLE_ENDIAN	62:1:1474:1540	3504664	6	True				
ANR	3504729	AssignmentExpression	mode |= a -> big_endian ? CS_MODE_BIG_ENDIAN : CS_MODE_LITTLE_ENDIAN		3504664	0		|=			
ANR	3504730	Identifier	mode		3504664	0					
ANR	3504731	ConditionalExpression	a -> big_endian ? CS_MODE_BIG_ENDIAN : CS_MODE_LITTLE_ENDIAN		3504664	1					
ANR	3504732	Condition	a -> big_endian		3504664	0					
ANR	3504733	PtrMemberAccess	a -> big_endian		3504664	0					
ANR	3504734	Identifier	a		3504664	0					
ANR	3504735	Identifier	big_endian		3504664	1					
ANR	3504736	Identifier	CS_MODE_BIG_ENDIAN		3504664	1					
ANR	3504737	Identifier	CS_MODE_LITTLE_ENDIAN		3504664	2					
ANR	3504738	IfStatement	"if ( a -> cpu && strncmp ( a -> cpu , ""vle"" , 3 ) == 0 )"		3504664	7					
ANR	3504739	Condition	"a -> cpu && strncmp ( a -> cpu , ""vle"" , 3 ) == 0"	64:5:1548:1588	3504664	0	True				
ANR	3504740	AndExpression	"a -> cpu && strncmp ( a -> cpu , ""vle"" , 3 ) == 0"		3504664	0		&&			
ANR	3504741	PtrMemberAccess	a -> cpu		3504664	0					
ANR	3504742	Identifier	a		3504664	0					
ANR	3504743	Identifier	cpu		3504664	1					
ANR	3504744	EqualityExpression	"strncmp ( a -> cpu , ""vle"" , 3 ) == 0"		3504664	1		==			
ANR	3504745	CallExpression	"strncmp ( a -> cpu , ""vle"" , 3 )"		3504664	0					
ANR	3504746	Callee	strncmp		3504664	0					
ANR	3504747	Identifier	strncmp		3504664	0					
ANR	3504748	ArgumentList	a -> cpu		3504664	1					
ANR	3504749	Argument	a -> cpu		3504664	0					
ANR	3504750	PtrMemberAccess	a -> cpu		3504664	0					
ANR	3504751	Identifier	a		3504664	0					
ANR	3504752	Identifier	cpu		3504664	1					
ANR	3504753	Argument	"""vle"""		3504664	1					
ANR	3504754	PrimaryExpression	"""vle"""		3504664	0					
ANR	3504755	Argument	3		3504664	2					
ANR	3504756	PrimaryExpression	3		3504664	0					
ANR	3504757	PrimaryExpression	0		3504664	1					
ANR	3504758	CompoundStatement		9:48:280:280	3504664	1					
ANR	3504759	IfStatement	if ( ! a -> big_endian )		3504664	0					
ANR	3504760	Condition	! a -> big_endian	66:6:1627:1640	3504664	0	True				
ANR	3504761	UnaryOperationExpression	! a -> big_endian		3504664	0					
ANR	3504762	UnaryOperator	!		3504664	0					
ANR	3504763	PtrMemberAccess	a -> big_endian		3504664	1					
ANR	3504764	Identifier	a		3504664	0					
ANR	3504765	Identifier	big_endian		3504664	1					
ANR	3504766	CompoundStatement		11:22:332:332	3504664	1					
ANR	3504767	ReturnStatement	return - 1 ;	67:3:1648:1657	3504664	0	True				
ANR	3504768	UnaryOperationExpression	- 1		3504664	0					
ANR	3504769	UnaryOperator	-		3504664	0					
ANR	3504770	PrimaryExpression	1		3504664	1					
ANR	3504771	ExpressionStatement	"ret = decompile_vle ( a , op , buf , len )"	69:2:1665:1702	3504664	1	True				
ANR	3504772	AssignmentExpression	"ret = decompile_vle ( a , op , buf , len )"		3504664	0		=			
ANR	3504773	Identifier	ret		3504664	0					
ANR	3504774	CallExpression	"decompile_vle ( a , op , buf , len )"		3504664	1					
ANR	3504775	Callee	decompile_vle		3504664	0					
ANR	3504776	Identifier	decompile_vle		3504664	0					
ANR	3504777	ArgumentList	a		3504664	1					
ANR	3504778	Argument	a		3504664	0					
ANR	3504779	Identifier	a		3504664	0					
ANR	3504780	Argument	op		3504664	1					
ANR	3504781	Identifier	op		3504664	0					
ANR	3504782	Argument	buf		3504664	2					
ANR	3504783	Identifier	buf		3504664	0					
ANR	3504784	Argument	len		3504664	3					
ANR	3504785	Identifier	len		3504664	0					
ANR	3504786	IfStatement	if ( ret >= 0 )		3504664	2					
ANR	3504787	Condition	ret >= 0	70:6:1710:1717	3504664	0	True				
ANR	3504788	RelationalExpression	ret >= 0		3504664	0		>=			
ANR	3504789	Identifier	ret		3504664	0					
ANR	3504790	PrimaryExpression	0		3504664	1					
ANR	3504791	CompoundStatement		15:16:409:409	3504664	1					
ANR	3504792	ReturnStatement	return op -> size ;	71:3:1725:1740	3504664	0	True				
ANR	3504793	PtrMemberAccess	op -> size		3504664	0					
ANR	3504794	Identifier	op		3504664	0					
ANR	3504795	Identifier	size		3504664	1					
ANR	3504796	ElseStatement	else		3504664	0					
ANR	3504797	IfStatement	"if ( a -> cpu && strncmp ( a -> cpu , ""ps"" , 2 ) == 0 )"		3504664	0					
ANR	3504798	Condition	"a -> cpu && strncmp ( a -> cpu , ""ps"" , 2 ) == 0"	73:12:1758:1797	3504664	0	True				
ANR	3504799	AndExpression	"a -> cpu && strncmp ( a -> cpu , ""ps"" , 2 ) == 0"		3504664	0		&&			
ANR	3504800	PtrMemberAccess	a -> cpu		3504664	0					
ANR	3504801	Identifier	a		3504664	0					
ANR	3504802	Identifier	cpu		3504664	1					
ANR	3504803	EqualityExpression	"strncmp ( a -> cpu , ""ps"" , 2 ) == 0"		3504664	1		==			
ANR	3504804	CallExpression	"strncmp ( a -> cpu , ""ps"" , 2 )"		3504664	0					
ANR	3504805	Callee	strncmp		3504664	0					
ANR	3504806	Identifier	strncmp		3504664	0					
ANR	3504807	ArgumentList	a -> cpu		3504664	1					
ANR	3504808	Argument	a -> cpu		3504664	0					
ANR	3504809	PtrMemberAccess	a -> cpu		3504664	0					
ANR	3504810	Identifier	a		3504664	0					
ANR	3504811	Identifier	cpu		3504664	1					
ANR	3504812	Argument	"""ps"""		3504664	1					
ANR	3504813	PrimaryExpression	"""ps"""		3504664	0					
ANR	3504814	Argument	2		3504664	2					
ANR	3504815	PrimaryExpression	2		3504664	0					
ANR	3504816	PrimaryExpression	0		3504664	1					
ANR	3504817	CompoundStatement		18:54:489:489	3504664	1					
ANR	3504818	IfStatement	if ( ! a -> big_endian )		3504664	0					
ANR	3504819	Condition	! a -> big_endian	75:6:1838:1851	3504664	0	True				
ANR	3504820	UnaryOperationExpression	! a -> big_endian		3504664	0					
ANR	3504821	UnaryOperator	!		3504664	0					
ANR	3504822	PtrMemberAccess	a -> big_endian		3504664	1					
ANR	3504823	Identifier	a		3504664	0					
ANR	3504824	Identifier	big_endian		3504664	1					
ANR	3504825	CompoundStatement		20:22:543:543	3504664	1					
ANR	3504826	ReturnStatement	return - 1 ;	76:3:1859:1868	3504664	0	True				
ANR	3504827	UnaryOperationExpression	- 1		3504664	0					
ANR	3504828	UnaryOperator	-		3504664	0					
ANR	3504829	PrimaryExpression	1		3504664	1					
ANR	3504830	ExpressionStatement	"ret = decompile_ps ( a , op , buf , len )"	78:2:1876:1912	3504664	1	True				
ANR	3504831	AssignmentExpression	"ret = decompile_ps ( a , op , buf , len )"		3504664	0		=			
ANR	3504832	Identifier	ret		3504664	0					
ANR	3504833	CallExpression	"decompile_ps ( a , op , buf , len )"		3504664	1					
ANR	3504834	Callee	decompile_ps		3504664	0					
ANR	3504835	Identifier	decompile_ps		3504664	0					
ANR	3504836	ArgumentList	a		3504664	1					
ANR	3504837	Argument	a		3504664	0					
ANR	3504838	Identifier	a		3504664	0					
ANR	3504839	Argument	op		3504664	1					
ANR	3504840	Identifier	op		3504664	0					
ANR	3504841	Argument	buf		3504664	2					
ANR	3504842	Identifier	buf		3504664	0					
ANR	3504843	Argument	len		3504664	3					
ANR	3504844	Identifier	len		3504664	0					
ANR	3504845	IfStatement	if ( ret >= 0 )		3504664	2					
ANR	3504846	Condition	ret >= 0	79:6:1920:1927	3504664	0	True				
ANR	3504847	RelationalExpression	ret >= 0		3504664	0		>=			
ANR	3504848	Identifier	ret		3504664	0					
ANR	3504849	PrimaryExpression	0		3504664	1					
ANR	3504850	CompoundStatement		24:16:619:619	3504664	1					
ANR	3504851	ReturnStatement	return op -> size ;	80:3:1935:1950	3504664	0	True				
ANR	3504852	PtrMemberAccess	op -> size		3504664	0					
ANR	3504853	Identifier	op		3504664	0					
ANR	3504854	Identifier	size		3504664	1					
ANR	3504855	IfStatement	if ( mode != omode || a -> bits != obits )		3504664	8					
ANR	3504856	Condition	mode != omode || a -> bits != obits	83:5:1964:1996	3504664	0	True				
ANR	3504857	OrExpression	mode != omode || a -> bits != obits		3504664	0		||			
ANR	3504858	EqualityExpression	mode != omode		3504664	0		!=			
ANR	3504859	Identifier	mode		3504664	0					
ANR	3504860	Identifier	omode		3504664	1					
ANR	3504861	EqualityExpression	a -> bits != obits		3504664	1		!=			
ANR	3504862	PtrMemberAccess	a -> bits		3504664	0					
ANR	3504863	Identifier	a		3504664	0					
ANR	3504864	Identifier	bits		3504664	1					
ANR	3504865	Identifier	obits		3504664	1					
ANR	3504866	CompoundStatement		28:40:688:688	3504664	1					
ANR	3504867	ExpressionStatement	cs_close ( & handle )	84:2:2003:2021	3504664	0	True				
ANR	3504868	CallExpression	cs_close ( & handle )		3504664	0					
ANR	3504869	Callee	cs_close		3504664	0					
ANR	3504870	Identifier	cs_close		3504664	0					
ANR	3504871	ArgumentList	& handle		3504664	1					
ANR	3504872	Argument	& handle		3504664	0					
ANR	3504873	UnaryOperationExpression	& handle		3504664	0					
ANR	3504874	UnaryOperator	&		3504664	0					
ANR	3504875	Identifier	handle		3504664	1					
ANR	3504876	ExpressionStatement	handle = 0	85:2:2025:2035	3504664	1	True				
ANR	3504877	AssignmentExpression	handle = 0		3504664	0		=			
ANR	3504878	Identifier	handle		3504664	0					
ANR	3504879	PrimaryExpression	0		3504664	1					
ANR	3504880	ExpressionStatement	omode = mode	86:2:2039:2051	3504664	2	True				
ANR	3504881	AssignmentExpression	omode = mode		3504664	0		=			
ANR	3504882	Identifier	omode		3504664	0					
ANR	3504883	Identifier	mode		3504664	1					
ANR	3504884	ExpressionStatement	obits = a -> bits	87:2:2055:2070	3504664	3	True				
ANR	3504885	AssignmentExpression	obits = a -> bits		3504664	0		=			
ANR	3504886	Identifier	obits		3504664	0					
ANR	3504887	PtrMemberAccess	a -> bits		3504664	1					
ANR	3504888	Identifier	a		3504664	0					
ANR	3504889	Identifier	bits		3504664	1					
ANR	3504890	IfStatement	if ( handle == 0 )		3504664	9					
ANR	3504891	Condition	handle == 0	89:5:2080:2090	3504664	0	True				
ANR	3504892	EqualityExpression	handle == 0		3504664	0		==			
ANR	3504893	Identifier	handle		3504664	0					
ANR	3504894	PrimaryExpression	0		3504664	1					
ANR	3504895	CompoundStatement		34:18:782:782	3504664	1					
ANR	3504896	ExpressionStatement	"ret = cs_open ( CS_ARCH_PPC , mode , & handle )"	90:2:2097:2139	3504664	0	True				
ANR	3504897	AssignmentExpression	"ret = cs_open ( CS_ARCH_PPC , mode , & handle )"		3504664	0		=			
ANR	3504898	Identifier	ret		3504664	0					
ANR	3504899	CallExpression	"cs_open ( CS_ARCH_PPC , mode , & handle )"		3504664	1					
ANR	3504900	Callee	cs_open		3504664	0					
ANR	3504901	Identifier	cs_open		3504664	0					
ANR	3504902	ArgumentList	CS_ARCH_PPC		3504664	1					
ANR	3504903	Argument	CS_ARCH_PPC		3504664	0					
ANR	3504904	Identifier	CS_ARCH_PPC		3504664	0					
ANR	3504905	Argument	mode		3504664	1					
ANR	3504906	Identifier	mode		3504664	0					
ANR	3504907	Argument	& handle		3504664	2					
ANR	3504908	UnaryOperationExpression	& handle		3504664	0					
ANR	3504909	UnaryOperator	&		3504664	0					
ANR	3504910	Identifier	handle		3504664	1					
ANR	3504911	IfStatement	if ( ret != CS_ERR_OK )		3504664	1					
ANR	3504912	Condition	ret != CS_ERR_OK	91:6:2147:2162	3504664	0	True				
ANR	3504913	EqualityExpression	ret != CS_ERR_OK		3504664	0		!=			
ANR	3504914	Identifier	ret		3504664	0					
ANR	3504915	Identifier	CS_ERR_OK		3504664	1					
ANR	3504916	CompoundStatement		36:24:854:854	3504664	1					
ANR	3504917	ReturnStatement	return - 1 ;	92:3:2170:2179	3504664	0	True				
ANR	3504918	UnaryOperationExpression	- 1		3504664	0					
ANR	3504919	UnaryOperator	-		3504664	0					
ANR	3504920	PrimaryExpression	1		3504664	1					
ANR	3504921	ExpressionStatement	op -> size = 4	95:1:2189:2201	3504664	10	True				
ANR	3504922	AssignmentExpression	op -> size = 4		3504664	0		=			
ANR	3504923	PtrMemberAccess	op -> size		3504664	0					
ANR	3504924	Identifier	op		3504664	0					
ANR	3504925	Identifier	size		3504664	1					
ANR	3504926	PrimaryExpression	4		3504664	1					
ANR	3504927	ExpressionStatement	"cs_option ( handle , CS_OPT_DETAIL , CS_OPT_OFF )"	96:1:2204:2249	3504664	11	True				
ANR	3504928	CallExpression	"cs_option ( handle , CS_OPT_DETAIL , CS_OPT_OFF )"		3504664	0					
ANR	3504929	Callee	cs_option		3504664	0					
ANR	3504930	Identifier	cs_option		3504664	0					
ANR	3504931	ArgumentList	handle		3504664	1					
ANR	3504932	Argument	handle		3504664	0					
ANR	3504933	Identifier	handle		3504664	0					
ANR	3504934	Argument	CS_OPT_DETAIL		3504664	1					
ANR	3504935	Identifier	CS_OPT_DETAIL		3504664	0					
ANR	3504936	Argument	CS_OPT_OFF		3504664	2					
ANR	3504937	Identifier	CS_OPT_OFF		3504664	0					
ANR	3504938	ExpressionStatement	"n = cs_disasm ( handle , ( const ut8 * ) buf , len , off , 1 , & insn )"	97:1:2252:2312	3504664	12	True				
ANR	3504939	AssignmentExpression	"n = cs_disasm ( handle , ( const ut8 * ) buf , len , off , 1 , & insn )"		3504664	0		=			
ANR	3504940	Identifier	n		3504664	0					
ANR	3504941	CallExpression	"cs_disasm ( handle , ( const ut8 * ) buf , len , off , 1 , & insn )"		3504664	1					
ANR	3504942	Callee	cs_disasm		3504664	0					
ANR	3504943	Identifier	cs_disasm		3504664	0					
ANR	3504944	ArgumentList	handle		3504664	1					
ANR	3504945	Argument	handle		3504664	0					
ANR	3504946	Identifier	handle		3504664	0					
ANR	3504947	Argument	( const ut8 * ) buf		3504664	1					
ANR	3504948	CastExpression	( const ut8 * ) buf		3504664	0					
ANR	3504949	CastTarget	const ut8 *		3504664	0					
ANR	3504950	Identifier	buf		3504664	1					
ANR	3504951	Argument	len		3504664	2					
ANR	3504952	Identifier	len		3504664	0					
ANR	3504953	Argument	off		3504664	3					
ANR	3504954	Identifier	off		3504664	0					
ANR	3504955	Argument	1		3504664	4					
ANR	3504956	PrimaryExpression	1		3504664	0					
ANR	3504957	Argument	& insn		3504664	5					
ANR	3504958	UnaryOperationExpression	& insn		3504664	0					
ANR	3504959	UnaryOperator	&		3504664	0					
ANR	3504960	Identifier	insn		3504664	1					
ANR	3504961	ExpressionStatement	op -> size = 4	98:1:2315:2327	3504664	13	True				
ANR	3504962	AssignmentExpression	op -> size = 4		3504664	0		=			
ANR	3504963	PtrMemberAccess	op -> size		3504664	0					
ANR	3504964	Identifier	op		3504664	0					
ANR	3504965	Identifier	size		3504664	1					
ANR	3504966	PrimaryExpression	4		3504664	1					
ANR	3504967	IfStatement	if ( n > 0 && insn -> size > 0 )		3504664	14					
ANR	3504968	Condition	n > 0 && insn -> size > 0	99:5:2334:2356	3504664	0	True				
ANR	3504969	AndExpression	n > 0 && insn -> size > 0		3504664	0		&&			
ANR	3504970	RelationalExpression	n > 0		3504664	0		>			
ANR	3504971	Identifier	n		3504664	0					
ANR	3504972	PrimaryExpression	0		3504664	1					
ANR	3504973	RelationalExpression	insn -> size > 0		3504664	1		>			
ANR	3504974	PtrMemberAccess	insn -> size		3504664	0					
ANR	3504975	Identifier	insn		3504664	0					
ANR	3504976	Identifier	size		3504664	1					
ANR	3504977	PrimaryExpression	0		3504664	1					
ANR	3504978	CompoundStatement		45:2:1052:1151	3504664	1					
ANR	3504979	IdentifierDeclStatement	"const char * opstr = sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str ) ;"	100:2:2363:2462	3504664	0	True				
ANR	3504980	IdentifierDecl	"* opstr = sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3504664	0					
ANR	3504981	IdentifierDeclType	const char *		3504664	0					
ANR	3504982	Identifier	opstr		3504664	1					
ANR	3504983	AssignmentExpression	"* opstr = sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3504664	2		=			
ANR	3504984	Identifier	opstr		3504664	0					
ANR	3504985	CallExpression	"sdb_fmt ( ""%s%s%s"" , insn -> mnemonic , insn -> op_str [ 0 ] ? "" "" : """" , insn -> op_str )"		3504664	1					
ANR	3504986	Callee	sdb_fmt		3504664	0					
ANR	3504987	Identifier	sdb_fmt		3504664	0					
ANR	3504988	ArgumentList	"""%s%s%s"""		3504664	1					
ANR	3504989	Argument	"""%s%s%s"""		3504664	0					
ANR	3504990	PrimaryExpression	"""%s%s%s"""		3504664	0					
ANR	3504991	Argument	insn -> mnemonic		3504664	1					
ANR	3504992	PtrMemberAccess	insn -> mnemonic		3504664	0					
ANR	3504993	Identifier	insn		3504664	0					
ANR	3504994	Identifier	mnemonic		3504664	1					
ANR	3504995	Argument	"insn -> op_str [ 0 ] ? "" "" : """""		3504664	2					
ANR	3504996	ConditionalExpression	"insn -> op_str [ 0 ] ? "" "" : """""		3504664	0					
ANR	3504997	Condition	insn -> op_str [ 0 ]		3504664	0					
ANR	3504998	ArrayIndexing	insn -> op_str [ 0 ]		3504664	0					
ANR	3504999	PtrMemberAccess	insn -> op_str		3504664	0					
ANR	3505000	Identifier	insn		3504664	0					
ANR	3505001	Identifier	op_str		3504664	1					
ANR	3505002	PrimaryExpression	0		3504664	1					
ANR	3505003	PrimaryExpression	""" """		3504664	1					
ANR	3505004	PrimaryExpression	""""""		3504664	2					
ANR	3505005	Argument	insn -> op_str		3504664	3					
ANR	3505006	PtrMemberAccess	insn -> op_str		3504664	0					
ANR	3505007	Identifier	insn		3504664	0					
ANR	3505008	Identifier	op_str		3504664	1					
ANR	3505009	ExpressionStatement	"r_asm_op_set_asm ( op , opstr )"	102:2:2466:2494	3504664	1	True				
ANR	3505010	CallExpression	"r_asm_op_set_asm ( op , opstr )"		3504664	0					
ANR	3505011	Callee	r_asm_op_set_asm		3504664	0					
ANR	3505012	Identifier	r_asm_op_set_asm		3504664	0					
ANR	3505013	ArgumentList	op		3504664	1					
ANR	3505014	Argument	op		3504664	0					
ANR	3505015	Identifier	op		3504664	0					
ANR	3505016	Argument	opstr		3504664	1					
ANR	3505017	Identifier	opstr		3504664	0					
ANR	3505018	ExpressionStatement	"cs_free ( insn , n )"	103:2:2498:2515	3504664	2	True				
ANR	3505019	CallExpression	"cs_free ( insn , n )"		3504664	0					
ANR	3505020	Callee	cs_free		3504664	0					
ANR	3505021	Identifier	cs_free		3504664	0					
ANR	3505022	ArgumentList	insn		3504664	1					
ANR	3505023	Argument	insn		3504664	0					
ANR	3505024	Identifier	insn		3504664	0					
ANR	3505025	Argument	n		3504664	1					
ANR	3505026	Identifier	n		3504664	0					
ANR	3505027	ReturnStatement	return op -> size ;	104:2:2519:2534	3504664	3	True				
ANR	3505028	PtrMemberAccess	op -> size		3504664	0					
ANR	3505029	Identifier	op		3504664	0					
ANR	3505030	Identifier	size		3504664	1					
ANR	3505031	ExpressionStatement	"r_asm_op_set_asm ( op , ""invalid"" )"	106:1:2540:2572	3504664	15	True				
ANR	3505032	CallExpression	"r_asm_op_set_asm ( op , ""invalid"" )"		3504664	0					
ANR	3505033	Callee	r_asm_op_set_asm		3504664	0					
ANR	3505034	Identifier	r_asm_op_set_asm		3504664	0					
ANR	3505035	ArgumentList	op		3504664	1					
ANR	3505036	Argument	op		3504664	0					
ANR	3505037	Identifier	op		3504664	0					
ANR	3505038	Argument	"""invalid"""		3504664	1					
ANR	3505039	PrimaryExpression	"""invalid"""		3504664	0					
ANR	3505040	ExpressionStatement	op -> size = 4	107:1:2575:2587	3504664	16	True				
ANR	3505041	AssignmentExpression	op -> size = 4		3504664	0		=			
ANR	3505042	PtrMemberAccess	op -> size		3504664	0					
ANR	3505043	Identifier	op		3504664	0					
ANR	3505044	Identifier	size		3504664	1					
ANR	3505045	PrimaryExpression	4		3504664	1					
ANR	3505046	ExpressionStatement	"cs_free ( insn , n )"	108:1:2590:2607	3504664	17	True				
ANR	3505047	CallExpression	"cs_free ( insn , n )"		3504664	0					
ANR	3505048	Callee	cs_free		3504664	0					
ANR	3505049	Identifier	cs_free		3504664	0					
ANR	3505050	ArgumentList	insn		3504664	1					
ANR	3505051	Argument	insn		3504664	0					
ANR	3505052	Identifier	insn		3504664	0					
ANR	3505053	Argument	n		3504664	1					
ANR	3505054	Identifier	n		3504664	0					
ANR	3505055	ReturnStatement	return op -> size ;	109:1:2610:2625	3504664	18	True				
ANR	3505056	PtrMemberAccess	op -> size		3504664	0					
ANR	3505057	Identifier	op		3504664	0					
ANR	3505058	Identifier	size		3504664	1					
ANR	3505059	ReturnType	static int		3504664	1					
ANR	3505060	Identifier	disassemble		3504664	2					
ANR	3505061	ParameterList	"RAsm * a , RAsmOp * op , const ut8 * buf , int len"		3504664	3					
ANR	3505062	Parameter	RAsm * a	56:23:1264:1270	3504664	0	True				
ANR	3505063	ParameterType	RAsm *		3504664	0					
ANR	3505064	Identifier	a		3504664	1					
ANR	3505065	Parameter	RAsmOp * op	56:32:1273:1282	3504664	1	True				
ANR	3505066	ParameterType	RAsmOp *		3504664	0					
ANR	3505067	Identifier	op		3504664	1					
ANR	3505068	Parameter	const ut8 * buf	56:44:1285:1298	3504664	2	True				
ANR	3505069	ParameterType	const ut8 *		3504664	0					
ANR	3505070	Identifier	buf		3504664	1					
ANR	3505071	Parameter	int len	56:60:1301:1307	3504664	3	True				
ANR	3505072	ParameterType	int		3504664	0					
ANR	3505073	Identifier	len		3504664	1					
ANR	3505074	CFGEntryNode	ENTRY		3504664		True				
ANR	3505075	CFGExitNode	EXIT		3504664		True				
ANR	3505076	Symbol	CS_OPT_OFF		3504664						
ANR	3505077	Symbol	* insn -> op_str		3504664						
ANR	3505078	Symbol	* op		3504664						
ANR	3505079	Symbol	a -> big_endian		3504664						
ANR	3505080	Symbol	a -> cpu		3504664						
ANR	3505081	Symbol	CS_ERR_OK		3504664						
ANR	3505082	Symbol	CS_MODE_BIG_ENDIAN		3504664						
ANR	3505083	Symbol	CS_MODE_32		3504664						
ANR	3505084	Symbol	decompile_ps		3504664						
ANR	3505085	Symbol	cs_open		3504664						
ANR	3505086	Symbol	mode		3504664						
ANR	3505087	Symbol	strncmp		3504664						
ANR	3505088	Symbol	CS_MODE_LITTLE_ENDIAN		3504664						
ANR	3505089	Symbol	len		3504664						
ANR	3505090	Symbol	& handle		3504664						
ANR	3505091	Symbol	insn -> mnemonic		3504664						
ANR	3505092	Symbol	insn -> size		3504664						
ANR	3505093	Symbol	omode		3504664						
ANR	3505094	Symbol	sdb_fmt		3504664						
ANR	3505095	Symbol	a -> bits		3504664						
ANR	3505096	Symbol	insn -> op_str		3504664						
ANR	3505097	Symbol	ret		3504664						
ANR	3505098	Symbol	opstr		3504664						
ANR	3505099	Symbol	a		3504664						
ANR	3505100	Symbol	op		3504664						
ANR	3505101	Symbol	decompile_vle		3504664						
ANR	3505102	Symbol	* insn		3504664						
ANR	3505103	Symbol	handle		3504664						
ANR	3505104	Symbol	* a		3504664						
ANR	3505105	Symbol	cs_disasm		3504664						
ANR	3505106	Symbol	a -> pc		3504664						
ANR	3505107	Symbol	n		3504664						
ANR	3505108	Symbol	off		3504664						
ANR	3505109	Symbol	CS_MODE_64		3504664						
ANR	3505110	Symbol	insn		3504664						
ANR	3505111	Symbol	buf		3504664						
ANR	3505112	Symbol	CS_OPT_DETAIL		3504664						
ANR	3505113	Symbol	* * insn		3504664						
ANR	3505114	Symbol	& insn		3504664						
ANR	3505115	Symbol	op -> size		3504664						
ANR	3505116	Symbol	CS_ARCH_PPC		3504664						
ANR	3505117	Symbol	obits		3504664						
ANR	3505118	DeclStmt									
ANR	3505119	Decl							RAsmPlugin	RAsmPlugin	r_asm_plugin_ppc_cs
ANR	3505120	DeclStmt									
ANR	3505121	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
