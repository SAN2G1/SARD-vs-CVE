command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5608515	File	data/converged/CVE-2019-16718~_radare2/pseudo.c								
ANR	5608516	ClassDef	_find_ctx	11:8:403:615							
ANR	5608517	DeclStmt									
ANR	5608518	Decl							char	char *	comment
ANR	5608519	DeclStmt									
ANR	5608520	Decl							char	char *	left
ANR	5608521	DeclStmt									
ANR	5608522	Decl							char	char *	right
ANR	5608523	DeclStmt									
ANR	5608524	Decl							char	char *	linebegin
ANR	5608525	DeclStmt									
ANR	5608526	Decl							int	int	leftlen
ANR	5608527	DeclStmt									
ANR	5608528	Decl							int	int	rightlen
ANR	5608529	DeclStmt									
ANR	5608530	Decl							int	int	leftpos
ANR	5608531	DeclStmt									
ANR	5608532	Decl							int	int	leftcolor
ANR	5608533	DeclStmt									
ANR	5608534	Decl							int	int	commentcolor
ANR	5608535	DeclStmt									
ANR	5608536	Decl							int	int	rightcolor
ANR	5608537	DeclStmt									
ANR	5608538	Decl							int	int	linecount
ANR	5608539	DeclStmt									
ANR	5608540	Decl							int	int	type
ANR	5608541	DeclStmt									
ANR	5608542	Decl							_find_ctx	_find_ctx	RFindCTX
ANR	5608543	Function	find_and_change	26:0:618:5588							
ANR	5608544	FunctionDef	"find_and_change (char * in , int len)"		5608543	0					
ANR	5608545	CompoundStatement		26:48:666:5588	5608543	0					
ANR	5608546	IfStatement	if ( ! in || len < 1 )		5608543	0					
ANR	5608547	Condition	! in || len < 1	28:5:738:751	5608543	0	True				
ANR	5608548	OrExpression	! in || len < 1		5608543	0		||			
ANR	5608549	UnaryOperationExpression	! in		5608543	0					
ANR	5608550	UnaryOperator	!		5608543	0					
ANR	5608551	Identifier	in		5608543	1					
ANR	5608552	RelationalExpression	len < 1		5608543	1		<			
ANR	5608553	Identifier	len		5608543	0					
ANR	5608554	PrimaryExpression	1		5608543	1					
ANR	5608555	CompoundStatement		3:21:87:87	5608543	1					
ANR	5608556	ReturnStatement	return ;	29:2:758:764	5608543	0	True				
ANR	5608557	IdentifierDeclStatement	char * end ;	31:1:770:779	5608543	1	True				
ANR	5608558	IdentifierDecl	* end		5608543	0					
ANR	5608559	IdentifierDeclType	char *		5608543	0					
ANR	5608560	Identifier	end		5608543	1					
ANR	5608561	IdentifierDeclStatement	RFindCTX ctx = { 0 } ;	32:1:782:800	5608543	2	True				
ANR	5608562	IdentifierDecl	ctx = { 0 }		5608543	0					
ANR	5608563	IdentifierDeclType	RFindCTX		5608543	0					
ANR	5608564	Identifier	ctx		5608543	1					
ANR	5608565	AssignmentExpression	ctx = { 0 }		5608543	2		=			
ANR	5608566	Identifier	ctx		5608543	0					
ANR	5608567	InitializerList	0		5608543	1					
ANR	5608568	PrimaryExpression	0		5608543	0					
ANR	5608569	ExpressionStatement	end = in + len	33:1:803:817	5608543	3	True				
ANR	5608570	AssignmentExpression	end = in + len		5608543	0		=			
ANR	5608571	Identifier	end		5608543	0					
ANR	5608572	AdditiveExpression	in + len		5608543	1		+			
ANR	5608573	Identifier	in		5608543	0					
ANR	5608574	Identifier	len		5608543	1					
ANR	5608575	ForStatement	for ( ctx . linebegin = in ; in < end ; ++ in )		5608543	4					
ANR	5608576	ForInit	ctx . linebegin = in ;	35:6:846:864	5608543	0	True				
ANR	5608577	AssignmentExpression	ctx . linebegin = in		5608543	0		=			
ANR	5608578	MemberAccess	ctx . linebegin		5608543	0					
ANR	5608579	Identifier	ctx		5608543	0					
ANR	5608580	Identifier	linebegin		5608543	1					
ANR	5608581	Identifier	in		5608543	1					
ANR	5608582	Condition	in < end	35:26:866:873	5608543	1	True				
ANR	5608583	RelationalExpression	in < end		5608543	0		<			
ANR	5608584	Identifier	in		5608543	0					
ANR	5608585	Identifier	end		5608543	1					
ANR	5608586	UnaryExpression	++ in	35:36:876:879	5608543	2	True				
ANR	5608587	IncDec	++		5608543	0					
ANR	5608588	Identifier	in		5608543	1					
ANR	5608589	CompoundStatement		10:42:215:215	5608543	3					
ANR	5608590	IfStatement	if ( * in == '\\n' || ! * in )		5608543	0					
ANR	5608591	Condition	* in == '\\n' || ! * in	36:6:890:908	5608543	0	True				
ANR	5608592	OrExpression	* in == '\\n' || ! * in		5608543	0		||			
ANR	5608593	EqualityExpression	* in == '\\n'		5608543	0		==			
ANR	5608594	UnaryOperationExpression	* in		5608543	0					
ANR	5608595	UnaryOperator	*		5608543	0					
ANR	5608596	Identifier	in		5608543	1					
ANR	5608597	PrimaryExpression	'\\n'		5608543	1					
ANR	5608598	UnaryOperationExpression	! * in		5608543	1					
ANR	5608599	UnaryOperator	!		5608543	0					
ANR	5608600	UnaryOperationExpression	* in		5608543	1					
ANR	5608601	UnaryOperator	*		5608543	0					
ANR	5608602	Identifier	in		5608543	1					
ANR	5608603	CompoundStatement		11:27:244:244	5608543	1					
ANR	5608604	IfStatement	if ( ctx . type == TYPE_SYM && ctx . linecount < 1 )		5608543	0					
ANR	5608605	Condition	ctx . type == TYPE_SYM && ctx . linecount < 1	37:7:920:960	5608543	0	True				
ANR	5608606	AndExpression	ctx . type == TYPE_SYM && ctx . linecount < 1		5608543	0		&&			
ANR	5608607	EqualityExpression	ctx . type == TYPE_SYM		5608543	0		==			
ANR	5608608	MemberAccess	ctx . type		5608543	0					
ANR	5608609	Identifier	ctx		5608543	0					
ANR	5608610	Identifier	type		5608543	1					
ANR	5608611	Identifier	TYPE_SYM		5608543	1					
ANR	5608612	RelationalExpression	ctx . linecount < 1		5608543	1		<			
ANR	5608613	MemberAccess	ctx . linecount		5608543	0					
ANR	5608614	Identifier	ctx		5608543	0					
ANR	5608615	Identifier	linecount		5608543	1					
ANR	5608616	PrimaryExpression	1		5608543	1					
ANR	5608617	CompoundStatement		12:50:296:296	5608543	1					
ANR	5608618	ExpressionStatement	ctx . linecount ++	38:4:969:984	5608543	0	True				
ANR	5608619	PostIncDecOperationExpression	ctx . linecount ++		5608543	0					
ANR	5608620	MemberAccess	ctx . linecount		5608543	0					
ANR	5608621	Identifier	ctx		5608543	0					
ANR	5608622	Identifier	linecount		5608543	1					
ANR	5608623	IncDec	++		5608543	1					
ANR	5608624	ExpressionStatement	ctx . linebegin = in + 1	39:4:990:1012	5608543	1	True				
ANR	5608625	AssignmentExpression	ctx . linebegin = in + 1		5608543	0		=			
ANR	5608626	MemberAccess	ctx . linebegin		5608543	0					
ANR	5608627	Identifier	ctx		5608543	0					
ANR	5608628	Identifier	linebegin		5608543	1					
ANR	5608629	AdditiveExpression	in + 1		5608543	1		+			
ANR	5608630	Identifier	in		5608543	0					
ANR	5608631	PrimaryExpression	1		5608543	1					
ANR	5608632	ContinueStatement	continue ;	40:4:1018:1026	5608543	2	True				
ANR	5608633	IfStatement	if ( ctx . type != TYPE_NONE && ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0 )		5608543	1					
ANR	5608634	Condition	ctx . type != TYPE_NONE && ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0	42:7:1040:1124	5608543	0	True				
ANR	5608635	AndExpression	ctx . type != TYPE_NONE && ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0		5608543	0		&&			
ANR	5608636	EqualityExpression	ctx . type != TYPE_NONE		5608543	0		!=			
ANR	5608637	MemberAccess	ctx . type		5608543	0					
ANR	5608638	Identifier	ctx		5608543	0					
ANR	5608639	Identifier	type		5608543	1					
ANR	5608640	Identifier	TYPE_NONE		5608543	1					
ANR	5608641	AndExpression	ctx . right && ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0		5608543	1		&&			
ANR	5608642	MemberAccess	ctx . right		5608543	0					
ANR	5608643	Identifier	ctx		5608543	0					
ANR	5608644	Identifier	right		5608543	1					
ANR	5608645	AndExpression	ctx . left && ctx . rightlen > 0 && ctx . leftlen > 0		5608543	1		&&			
ANR	5608646	MemberAccess	ctx . left		5608543	0					
ANR	5608647	Identifier	ctx		5608543	0					
ANR	5608648	Identifier	left		5608543	1					
ANR	5608649	AndExpression	ctx . rightlen > 0 && ctx . leftlen > 0		5608543	1		&&			
ANR	5608650	RelationalExpression	ctx . rightlen > 0		5608543	0		>			
ANR	5608651	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608652	Identifier	ctx		5608543	0					
ANR	5608653	Identifier	rightlen		5608543	1					
ANR	5608654	PrimaryExpression	0		5608543	1					
ANR	5608655	RelationalExpression	ctx . leftlen > 0		5608543	1		>			
ANR	5608656	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608657	Identifier	ctx		5608543	0					
ANR	5608658	Identifier	leftlen		5608543	1					
ANR	5608659	PrimaryExpression	0		5608543	1					
ANR	5608660	CompoundStatement		18:4:466:483	5608543	1					
ANR	5608661	IdentifierDeclStatement	char * copy = NULL ;	43:4:1133:1150	5608543	0	True				
ANR	5608662	IdentifierDecl	* copy = NULL		5608543	0					
ANR	5608663	IdentifierDeclType	char *		5608543	0					
ANR	5608664	Identifier	copy		5608543	1					
ANR	5608665	AssignmentExpression	* copy = NULL		5608543	2		=			
ANR	5608666	Identifier	NULL		5608543	0					
ANR	5608667	Identifier	NULL		5608543	1					
ANR	5608668	IfStatement	if ( ctx . leftlen > ctx . rightlen )		5608543	1					
ANR	5608669	Condition	ctx . leftlen > ctx . rightlen	44:8:1160:1185	5608543	0	True				
ANR	5608670	RelationalExpression	ctx . leftlen > ctx . rightlen		5608543	0		>			
ANR	5608671	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608672	Identifier	ctx		5608543	0					
ANR	5608673	Identifier	leftlen		5608543	1					
ANR	5608674	MemberAccess	ctx . rightlen		5608543	1					
ANR	5608675	Identifier	ctx		5608543	0					
ANR	5608676	Identifier	rightlen		5608543	1					
ANR	5608677	CompoundStatement		19:36:521:521	5608543	1					
ANR	5608678	ExpressionStatement	copy = ( char * ) malloc ( ctx . leftlen )	46:5:1222:1257	5608543	0	True				
ANR	5608679	AssignmentExpression	copy = ( char * ) malloc ( ctx . leftlen )		5608543	0		=			
ANR	5608680	Identifier	copy		5608543	0					
ANR	5608681	CastExpression	( char * ) malloc ( ctx . leftlen )		5608543	1					
ANR	5608682	CastTarget	char *		5608543	0					
ANR	5608683	CallExpression	malloc ( ctx . leftlen )		5608543	1					
ANR	5608684	Callee	malloc		5608543	0					
ANR	5608685	Identifier	malloc		5608543	0					
ANR	5608686	ArgumentList	ctx . leftlen		5608543	1					
ANR	5608687	Argument	ctx . leftlen		5608543	0					
ANR	5608688	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608689	Identifier	ctx		5608543	0					
ANR	5608690	Identifier	leftlen		5608543	1					
ANR	5608691	IfStatement	if ( copy )		5608543	1					
ANR	5608692	Condition	copy	47:9:1268:1271	5608543	0	True				
ANR	5608693	Identifier	copy		5608543	0					
ANR	5608694	CompoundStatement		22:15:607:607	5608543	1					
ANR	5608695	ExpressionStatement	"memmove ( copy , ctx . left , ctx . leftlen )"	48:6:1282:1319	5608543	0	True				
ANR	5608696	CallExpression	"memmove ( copy , ctx . left , ctx . leftlen )"		5608543	0					
ANR	5608697	Callee	memmove		5608543	0					
ANR	5608698	Identifier	memmove		5608543	0					
ANR	5608699	ArgumentList	copy		5608543	1					
ANR	5608700	Argument	copy		5608543	0					
ANR	5608701	Identifier	copy		5608543	0					
ANR	5608702	Argument	ctx . left		5608543	1					
ANR	5608703	MemberAccess	ctx . left		5608543	0					
ANR	5608704	Identifier	ctx		5608543	0					
ANR	5608705	Identifier	left		5608543	1					
ANR	5608706	Argument	ctx . leftlen		5608543	2					
ANR	5608707	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608708	Identifier	ctx		5608543	0					
ANR	5608709	Identifier	leftlen		5608543	1					
ANR	5608710	ExpressionStatement	"memmove ( ctx . left , ctx . right , ctx . rightlen )"	49:6:1327:1370	5608543	1	True				
ANR	5608711	CallExpression	"memmove ( ctx . left , ctx . right , ctx . rightlen )"		5608543	0					
ANR	5608712	Callee	memmove		5608543	0					
ANR	5608713	Identifier	memmove		5608543	0					
ANR	5608714	ArgumentList	ctx . left		5608543	1					
ANR	5608715	Argument	ctx . left		5608543	0					
ANR	5608716	MemberAccess	ctx . left		5608543	0					
ANR	5608717	Identifier	ctx		5608543	0					
ANR	5608718	Identifier	left		5608543	1					
ANR	5608719	Argument	ctx . right		5608543	1					
ANR	5608720	MemberAccess	ctx . right		5608543	0					
ANR	5608721	Identifier	ctx		5608543	0					
ANR	5608722	Identifier	right		5608543	1					
ANR	5608723	Argument	ctx . rightlen		5608543	2					
ANR	5608724	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608725	Identifier	ctx		5608543	0					
ANR	5608726	Identifier	rightlen		5608543	1					
ANR	5608727	ExpressionStatement	"memset ( ctx . left + ctx . rightlen , ' ' , ctx . leftlen - ctx . rightlen )"	50:6:1378:1443	5608543	2	True				
ANR	5608728	CallExpression	"memset ( ctx . left + ctx . rightlen , ' ' , ctx . leftlen - ctx . rightlen )"		5608543	0					
ANR	5608729	Callee	memset		5608543	0					
ANR	5608730	Identifier	memset		5608543	0					
ANR	5608731	ArgumentList	ctx . left + ctx . rightlen		5608543	1					
ANR	5608732	Argument	ctx . left + ctx . rightlen		5608543	0					
ANR	5608733	AdditiveExpression	ctx . left + ctx . rightlen		5608543	0		+			
ANR	5608734	MemberAccess	ctx . left		5608543	0					
ANR	5608735	Identifier	ctx		5608543	0					
ANR	5608736	Identifier	left		5608543	1					
ANR	5608737	MemberAccess	ctx . rightlen		5608543	1					
ANR	5608738	Identifier	ctx		5608543	0					
ANR	5608739	Identifier	rightlen		5608543	1					
ANR	5608740	Argument	' '		5608543	1					
ANR	5608741	PrimaryExpression	' '		5608543	0					
ANR	5608742	Argument	ctx . leftlen - ctx . rightlen		5608543	2					
ANR	5608743	AdditiveExpression	ctx . leftlen - ctx . rightlen		5608543	0		-			
ANR	5608744	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608745	Identifier	ctx		5608543	0					
ANR	5608746	Identifier	leftlen		5608543	1					
ANR	5608747	MemberAccess	ctx . rightlen		5608543	1					
ANR	5608748	Identifier	ctx		5608543	0					
ANR	5608749	Identifier	rightlen		5608543	1					
ANR	5608750	ExpressionStatement	"memmove ( ctx . comment - ctx . leftlen + ctx . rightlen , ctx . comment , ctx . right - ctx . comment )"	51:6:1451:1539	5608543	3	True				
ANR	5608751	CallExpression	"memmove ( ctx . comment - ctx . leftlen + ctx . rightlen , ctx . comment , ctx . right - ctx . comment )"		5608543	0					
ANR	5608752	Callee	memmove		5608543	0					
ANR	5608753	Identifier	memmove		5608543	0					
ANR	5608754	ArgumentList	ctx . comment - ctx . leftlen + ctx . rightlen		5608543	1					
ANR	5608755	Argument	ctx . comment - ctx . leftlen + ctx . rightlen		5608543	0					
ANR	5608756	AdditiveExpression	ctx . comment - ctx . leftlen + ctx . rightlen		5608543	0		-			
ANR	5608757	MemberAccess	ctx . comment		5608543	0					
ANR	5608758	Identifier	ctx		5608543	0					
ANR	5608759	Identifier	comment		5608543	1					
ANR	5608760	AdditiveExpression	ctx . leftlen + ctx . rightlen		5608543	1		+			
ANR	5608761	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608762	Identifier	ctx		5608543	0					
ANR	5608763	Identifier	leftlen		5608543	1					
ANR	5608764	MemberAccess	ctx . rightlen		5608543	1					
ANR	5608765	Identifier	ctx		5608543	0					
ANR	5608766	Identifier	rightlen		5608543	1					
ANR	5608767	Argument	ctx . comment		5608543	1					
ANR	5608768	MemberAccess	ctx . comment		5608543	0					
ANR	5608769	Identifier	ctx		5608543	0					
ANR	5608770	Identifier	comment		5608543	1					
ANR	5608771	Argument	ctx . right - ctx . comment		5608543	2					
ANR	5608772	AdditiveExpression	ctx . right - ctx . comment		5608543	0		-			
ANR	5608773	MemberAccess	ctx . right		5608543	0					
ANR	5608774	Identifier	ctx		5608543	0					
ANR	5608775	Identifier	right		5608543	1					
ANR	5608776	MemberAccess	ctx . comment		5608543	1					
ANR	5608777	Identifier	ctx		5608543	0					
ANR	5608778	Identifier	comment		5608543	1					
ANR	5608779	ExpressionStatement	"memmove ( ctx . right - ctx . leftlen + ctx . rightlen , copy , ctx . leftlen )"	52:6:1547:1614	5608543	4	True				
ANR	5608780	CallExpression	"memmove ( ctx . right - ctx . leftlen + ctx . rightlen , copy , ctx . leftlen )"		5608543	0					
ANR	5608781	Callee	memmove		5608543	0					
ANR	5608782	Identifier	memmove		5608543	0					
ANR	5608783	ArgumentList	ctx . right - ctx . leftlen + ctx . rightlen		5608543	1					
ANR	5608784	Argument	ctx . right - ctx . leftlen + ctx . rightlen		5608543	0					
ANR	5608785	AdditiveExpression	ctx . right - ctx . leftlen + ctx . rightlen		5608543	0		-			
ANR	5608786	MemberAccess	ctx . right		5608543	0					
ANR	5608787	Identifier	ctx		5608543	0					
ANR	5608788	Identifier	right		5608543	1					
ANR	5608789	AdditiveExpression	ctx . leftlen + ctx . rightlen		5608543	1		+			
ANR	5608790	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608791	Identifier	ctx		5608543	0					
ANR	5608792	Identifier	leftlen		5608543	1					
ANR	5608793	MemberAccess	ctx . rightlen		5608543	1					
ANR	5608794	Identifier	ctx		5608543	0					
ANR	5608795	Identifier	rightlen		5608543	1					
ANR	5608796	Argument	copy		5608543	1					
ANR	5608797	Identifier	copy		5608543	0					
ANR	5608798	Argument	ctx . leftlen		5608543	2					
ANR	5608799	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608800	Identifier	ctx		5608543	0					
ANR	5608801	Identifier	leftlen		5608543	1					
ANR	5608802	ElseStatement	else		5608543	0					
ANR	5608803	IfStatement	if ( ctx . leftlen < ctx . rightlen )		5608543	0					
ANR	5608804	Condition	ctx . leftlen < ctx . rightlen	54:15:1638:1663	5608543	0	True				
ANR	5608805	RelationalExpression	ctx . leftlen < ctx . rightlen		5608543	0		<			
ANR	5608806	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608807	Identifier	ctx		5608543	0					
ANR	5608808	Identifier	leftlen		5608543	1					
ANR	5608809	MemberAccess	ctx . rightlen		5608543	1					
ANR	5608810	Identifier	ctx		5608543	0					
ANR	5608811	Identifier	rightlen		5608543	1					
ANR	5608812	CompoundStatement		29:43:999:999	5608543	1					
ANR	5608813	IfStatement	if ( ctx . linecount < 1 )		5608543	0					
ANR	5608814	Condition	ctx . linecount < 1	55:9:1677:1693	5608543	0	True				
ANR	5608815	RelationalExpression	ctx . linecount < 1		5608543	0		<			
ANR	5608816	MemberAccess	ctx . linecount		5608543	0					
ANR	5608817	Identifier	ctx		5608543	0					
ANR	5608818	Identifier	linecount		5608543	1					
ANR	5608819	PrimaryExpression	1		5608543	1					
ANR	5608820	CompoundStatement		30:28:1029:1029	5608543	1					
ANR	5608821	ExpressionStatement	copy = ( char * ) malloc ( ctx . rightlen )	56:6:1704:1740	5608543	0	True				
ANR	5608822	AssignmentExpression	copy = ( char * ) malloc ( ctx . rightlen )		5608543	0		=			
ANR	5608823	Identifier	copy		5608543	0					
ANR	5608824	CastExpression	( char * ) malloc ( ctx . rightlen )		5608543	1					
ANR	5608825	CastTarget	char *		5608543	0					
ANR	5608826	CallExpression	malloc ( ctx . rightlen )		5608543	1					
ANR	5608827	Callee	malloc		5608543	0					
ANR	5608828	Identifier	malloc		5608543	0					
ANR	5608829	ArgumentList	ctx . rightlen		5608543	1					
ANR	5608830	Argument	ctx . rightlen		5608543	0					
ANR	5608831	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608832	Identifier	ctx		5608543	0					
ANR	5608833	Identifier	rightlen		5608543	1					
ANR	5608834	IfStatement	if ( copy )		5608543	1					
ANR	5608835	Condition	copy	57:10:1752:1755	5608543	0	True				
ANR	5608836	Identifier	copy		5608543	0					
ANR	5608837	CompoundStatement		32:16:1091:1091	5608543	1					
ANR	5608838	ExpressionStatement	"memcpy ( copy , ctx . right , ctx . rightlen )"	60:7:1842:1880	5608543	0	True				
ANR	5608839	CallExpression	"memcpy ( copy , ctx . right , ctx . rightlen )"		5608543	0					
ANR	5608840	Callee	memcpy		5608543	0					
ANR	5608841	Identifier	memcpy		5608543	0					
ANR	5608842	ArgumentList	copy		5608543	1					
ANR	5608843	Argument	copy		5608543	0					
ANR	5608844	Identifier	copy		5608543	0					
ANR	5608845	Argument	ctx . right		5608543	1					
ANR	5608846	MemberAccess	ctx . right		5608543	0					
ANR	5608847	Identifier	ctx		5608543	0					
ANR	5608848	Identifier	right		5608543	1					
ANR	5608849	Argument	ctx . rightlen		5608543	2					
ANR	5608850	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608851	Identifier	ctx		5608543	0					
ANR	5608852	Identifier	rightlen		5608543	1					
ANR	5608853	ExpressionStatement	"memcpy ( ctx . right + ctx . rightlen - ctx . leftlen , ctx . left , ctx . leftlen )"	62:7:1916:1986	5608543	1	True				
ANR	5608854	CallExpression	"memcpy ( ctx . right + ctx . rightlen - ctx . leftlen , ctx . left , ctx . leftlen )"		5608543	0					
ANR	5608855	Callee	memcpy		5608543	0					
ANR	5608856	Identifier	memcpy		5608543	0					
ANR	5608857	ArgumentList	ctx . right + ctx . rightlen - ctx . leftlen		5608543	1					
ANR	5608858	Argument	ctx . right + ctx . rightlen - ctx . leftlen		5608543	0					
ANR	5608859	AdditiveExpression	ctx . right + ctx . rightlen - ctx . leftlen		5608543	0		+			
ANR	5608860	MemberAccess	ctx . right		5608543	0					
ANR	5608861	Identifier	ctx		5608543	0					
ANR	5608862	Identifier	right		5608543	1					
ANR	5608863	AdditiveExpression	ctx . rightlen - ctx . leftlen		5608543	1		-			
ANR	5608864	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608865	Identifier	ctx		5608543	0					
ANR	5608866	Identifier	rightlen		5608543	1					
ANR	5608867	MemberAccess	ctx . leftlen		5608543	1					
ANR	5608868	Identifier	ctx		5608543	0					
ANR	5608869	Identifier	leftlen		5608543	1					
ANR	5608870	Argument	ctx . left		5608543	1					
ANR	5608871	MemberAccess	ctx . left		5608543	0					
ANR	5608872	Identifier	ctx		5608543	0					
ANR	5608873	Identifier	left		5608543	1					
ANR	5608874	Argument	ctx . leftlen		5608543	2					
ANR	5608875	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608876	Identifier	ctx		5608543	0					
ANR	5608877	Identifier	leftlen		5608543	1					
ANR	5608878	ExpressionStatement	"memmove ( ctx . comment + ctx . rightlen - ctx . leftlen , ctx . comment , ctx . right - ctx . comment )"	63:7:1995:2083	5608543	2	True				
ANR	5608879	CallExpression	"memmove ( ctx . comment + ctx . rightlen - ctx . leftlen , ctx . comment , ctx . right - ctx . comment )"		5608543	0					
ANR	5608880	Callee	memmove		5608543	0					
ANR	5608881	Identifier	memmove		5608543	0					
ANR	5608882	ArgumentList	ctx . comment + ctx . rightlen - ctx . leftlen		5608543	1					
ANR	5608883	Argument	ctx . comment + ctx . rightlen - ctx . leftlen		5608543	0					
ANR	5608884	AdditiveExpression	ctx . comment + ctx . rightlen - ctx . leftlen		5608543	0		+			
ANR	5608885	MemberAccess	ctx . comment		5608543	0					
ANR	5608886	Identifier	ctx		5608543	0					
ANR	5608887	Identifier	comment		5608543	1					
ANR	5608888	AdditiveExpression	ctx . rightlen - ctx . leftlen		5608543	1		-			
ANR	5608889	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608890	Identifier	ctx		5608543	0					
ANR	5608891	Identifier	rightlen		5608543	1					
ANR	5608892	MemberAccess	ctx . leftlen		5608543	1					
ANR	5608893	Identifier	ctx		5608543	0					
ANR	5608894	Identifier	leftlen		5608543	1					
ANR	5608895	Argument	ctx . comment		5608543	1					
ANR	5608896	MemberAccess	ctx . comment		5608543	0					
ANR	5608897	Identifier	ctx		5608543	0					
ANR	5608898	Identifier	comment		5608543	1					
ANR	5608899	Argument	ctx . right - ctx . comment		5608543	2					
ANR	5608900	AdditiveExpression	ctx . right - ctx . comment		5608543	0		-			
ANR	5608901	MemberAccess	ctx . right		5608543	0					
ANR	5608902	Identifier	ctx		5608543	0					
ANR	5608903	Identifier	right		5608543	1					
ANR	5608904	MemberAccess	ctx . comment		5608543	1					
ANR	5608905	Identifier	ctx		5608543	0					
ANR	5608906	Identifier	comment		5608543	1					
ANR	5608907	ExpressionStatement	"memmove ( ctx . left + ctx . rightlen - ctx . leftlen , copy , ctx . rightlen )"	64:7:2092:2159	5608543	3	True				
ANR	5608908	CallExpression	"memmove ( ctx . left + ctx . rightlen - ctx . leftlen , copy , ctx . rightlen )"		5608543	0					
ANR	5608909	Callee	memmove		5608543	0					
ANR	5608910	Identifier	memmove		5608543	0					
ANR	5608911	ArgumentList	ctx . left + ctx . rightlen - ctx . leftlen		5608543	1					
ANR	5608912	Argument	ctx . left + ctx . rightlen - ctx . leftlen		5608543	0					
ANR	5608913	AdditiveExpression	ctx . left + ctx . rightlen - ctx . leftlen		5608543	0		+			
ANR	5608914	MemberAccess	ctx . left		5608543	0					
ANR	5608915	Identifier	ctx		5608543	0					
ANR	5608916	Identifier	left		5608543	1					
ANR	5608917	AdditiveExpression	ctx . rightlen - ctx . leftlen		5608543	1		-			
ANR	5608918	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608919	Identifier	ctx		5608543	0					
ANR	5608920	Identifier	rightlen		5608543	1					
ANR	5608921	MemberAccess	ctx . leftlen		5608543	1					
ANR	5608922	Identifier	ctx		5608543	0					
ANR	5608923	Identifier	leftlen		5608543	1					
ANR	5608924	Argument	copy		5608543	1					
ANR	5608925	Identifier	copy		5608543	0					
ANR	5608926	Argument	ctx . rightlen		5608543	2					
ANR	5608927	MemberAccess	ctx . rightlen		5608543	0					
ANR	5608928	Identifier	ctx		5608543	0					
ANR	5608929	Identifier	rightlen		5608543	1					
ANR	5608930	ElseStatement	else		5608543	0					
ANR	5608931	CompoundStatement		41:12:1514:1514	5608543	0					
ANR	5608932	ExpressionStatement	"memset ( ctx . right - ctx . leftpos , ' ' , ctx . leftpos )"	70:6:2327:2377	5608543	0	True				
ANR	5608933	CallExpression	"memset ( ctx . right - ctx . leftpos , ' ' , ctx . leftpos )"		5608543	0					
ANR	5608934	Callee	memset		5608543	0					
ANR	5608935	Identifier	memset		5608543	0					
ANR	5608936	ArgumentList	ctx . right - ctx . leftpos		5608543	1					
ANR	5608937	Argument	ctx . right - ctx . leftpos		5608543	0					
ANR	5608938	AdditiveExpression	ctx . right - ctx . leftpos		5608543	0		-			
ANR	5608939	MemberAccess	ctx . right		5608543	0					
ANR	5608940	Identifier	ctx		5608543	0					
ANR	5608941	Identifier	right		5608543	1					
ANR	5608942	MemberAccess	ctx . leftpos		5608543	1					
ANR	5608943	Identifier	ctx		5608543	0					
ANR	5608944	Identifier	leftpos		5608543	1					
ANR	5608945	Argument	' '		5608543	1					
ANR	5608946	PrimaryExpression	' '		5608543	0					
ANR	5608947	Argument	ctx . leftpos		5608543	2					
ANR	5608948	MemberAccess	ctx . leftpos		5608543	0					
ANR	5608949	Identifier	ctx		5608543	0					
ANR	5608950	Identifier	leftpos		5608543	1					
ANR	5608951	ExpressionStatement	* ( ctx . right - ctx . leftpos - 1 ) = '\\n'	71:6:2385:2422	5608543	1	True				
ANR	5608952	AssignmentExpression	* ( ctx . right - ctx . leftpos - 1 ) = '\\n'		5608543	0		=			
ANR	5608953	UnaryOperationExpression	* ( ctx . right - ctx . leftpos - 1 )		5608543	0					
ANR	5608954	UnaryOperator	*		5608543	0					
ANR	5608955	AdditiveExpression	ctx . right - ctx . leftpos - 1		5608543	1		-			
ANR	5608956	MemberAccess	ctx . right		5608543	0					
ANR	5608957	Identifier	ctx		5608543	0					
ANR	5608958	Identifier	right		5608543	1					
ANR	5608959	AdditiveExpression	ctx . leftpos - 1		5608543	1		-			
ANR	5608960	MemberAccess	ctx . leftpos		5608543	0					
ANR	5608961	Identifier	ctx		5608543	0					
ANR	5608962	Identifier	leftpos		5608543	1					
ANR	5608963	PrimaryExpression	1		5608543	1					
ANR	5608964	PrimaryExpression	'\\n'		5608543	1					
ANR	5608965	ExpressionStatement	"memset ( ctx . left , ' ' , ctx . leftlen )"	73:6:2497:2532	5608543	2	True				
ANR	5608966	CallExpression	"memset ( ctx . left , ' ' , ctx . leftlen )"		5608543	0					
ANR	5608967	Callee	memset		5608543	0					
ANR	5608968	Identifier	memset		5608543	0					
ANR	5608969	ArgumentList	ctx . left		5608543	1					
ANR	5608970	Argument	ctx . left		5608543	0					
ANR	5608971	MemberAccess	ctx . left		5608543	0					
ANR	5608972	Identifier	ctx		5608543	0					
ANR	5608973	Identifier	left		5608543	1					
ANR	5608974	Argument	' '		5608543	1					
ANR	5608975	PrimaryExpression	' '		5608543	0					
ANR	5608976	Argument	ctx . leftlen		5608543	2					
ANR	5608977	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608978	Identifier	ctx		5608543	0					
ANR	5608979	Identifier	leftlen		5608543	1					
ANR	5608980	ExpressionStatement	"memset ( ctx . linebegin - ctx . leftlen , ' ' , ctx . leftlen )"	74:6:2540:2594	5608543	3	True				
ANR	5608981	CallExpression	"memset ( ctx . linebegin - ctx . leftlen , ' ' , ctx . leftlen )"		5608543	0					
ANR	5608982	Callee	memset		5608543	0					
ANR	5608983	Identifier	memset		5608543	0					
ANR	5608984	ArgumentList	ctx . linebegin - ctx . leftlen		5608543	1					
ANR	5608985	Argument	ctx . linebegin - ctx . leftlen		5608543	0					
ANR	5608986	AdditiveExpression	ctx . linebegin - ctx . leftlen		5608543	0		-			
ANR	5608987	MemberAccess	ctx . linebegin		5608543	0					
ANR	5608988	Identifier	ctx		5608543	0					
ANR	5608989	Identifier	linebegin		5608543	1					
ANR	5608990	MemberAccess	ctx . leftlen		5608543	1					
ANR	5608991	Identifier	ctx		5608543	0					
ANR	5608992	Identifier	leftlen		5608543	1					
ANR	5608993	Argument	' '		5608543	1					
ANR	5608994	PrimaryExpression	' '		5608543	0					
ANR	5608995	Argument	ctx . leftlen		5608543	2					
ANR	5608996	MemberAccess	ctx . leftlen		5608543	0					
ANR	5608997	Identifier	ctx		5608543	0					
ANR	5608998	Identifier	leftlen		5608543	1					
ANR	5608999	ElseStatement	else		5608543	0					
ANR	5609000	IfStatement	if ( ctx . leftlen == ctx . rightlen )		5608543	0					
ANR	5609001	Condition	ctx . leftlen == ctx . rightlen	77:15:2628:2654	5608543	0	True				
ANR	5609002	EqualityExpression	ctx . leftlen == ctx . rightlen		5608543	0		==			
ANR	5609003	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609004	Identifier	ctx		5608543	0					
ANR	5609005	Identifier	leftlen		5608543	1					
ANR	5609006	MemberAccess	ctx . rightlen		5608543	1					
ANR	5609007	Identifier	ctx		5608543	0					
ANR	5609008	Identifier	rightlen		5608543	1					
ANR	5609009	CompoundStatement		52:44:1990:1990	5608543	1					
ANR	5609010	ExpressionStatement	copy = ( char * ) malloc ( ctx . leftlen )	78:5:2664:2699	5608543	0	True				
ANR	5609011	AssignmentExpression	copy = ( char * ) malloc ( ctx . leftlen )		5608543	0		=			
ANR	5609012	Identifier	copy		5608543	0					
ANR	5609013	CastExpression	( char * ) malloc ( ctx . leftlen )		5608543	1					
ANR	5609014	CastTarget	char *		5608543	0					
ANR	5609015	CallExpression	malloc ( ctx . leftlen )		5608543	1					
ANR	5609016	Callee	malloc		5608543	0					
ANR	5609017	Identifier	malloc		5608543	0					
ANR	5609018	ArgumentList	ctx . leftlen		5608543	1					
ANR	5609019	Argument	ctx . leftlen		5608543	0					
ANR	5609020	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609021	Identifier	ctx		5608543	0					
ANR	5609022	Identifier	leftlen		5608543	1					
ANR	5609023	IfStatement	if ( copy )		5608543	1					
ANR	5609024	Condition	copy	79:9:2710:2713	5608543	0	True				
ANR	5609025	Identifier	copy		5608543	0					
ANR	5609026	CompoundStatement		54:15:2049:2049	5608543	1					
ANR	5609027	ExpressionStatement	"memcpy ( copy , ctx . right , ctx . leftlen )"	80:6:2724:2761	5608543	0	True				
ANR	5609028	CallExpression	"memcpy ( copy , ctx . right , ctx . leftlen )"		5608543	0					
ANR	5609029	Callee	memcpy		5608543	0					
ANR	5609030	Identifier	memcpy		5608543	0					
ANR	5609031	ArgumentList	copy		5608543	1					
ANR	5609032	Argument	copy		5608543	0					
ANR	5609033	Identifier	copy		5608543	0					
ANR	5609034	Argument	ctx . right		5608543	1					
ANR	5609035	MemberAccess	ctx . right		5608543	0					
ANR	5609036	Identifier	ctx		5608543	0					
ANR	5609037	Identifier	right		5608543	1					
ANR	5609038	Argument	ctx . leftlen		5608543	2					
ANR	5609039	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609040	Identifier	ctx		5608543	0					
ANR	5609041	Identifier	leftlen		5608543	1					
ANR	5609042	ExpressionStatement	"memcpy ( ctx . right , ctx . left , ctx . leftlen )"	81:6:2769:2810	5608543	1	True				
ANR	5609043	CallExpression	"memcpy ( ctx . right , ctx . left , ctx . leftlen )"		5608543	0					
ANR	5609044	Callee	memcpy		5608543	0					
ANR	5609045	Identifier	memcpy		5608543	0					
ANR	5609046	ArgumentList	ctx . right		5608543	1					
ANR	5609047	Argument	ctx . right		5608543	0					
ANR	5609048	MemberAccess	ctx . right		5608543	0					
ANR	5609049	Identifier	ctx		5608543	0					
ANR	5609050	Identifier	right		5608543	1					
ANR	5609051	Argument	ctx . left		5608543	1					
ANR	5609052	MemberAccess	ctx . left		5608543	0					
ANR	5609053	Identifier	ctx		5608543	0					
ANR	5609054	Identifier	left		5608543	1					
ANR	5609055	Argument	ctx . leftlen		5608543	2					
ANR	5609056	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609057	Identifier	ctx		5608543	0					
ANR	5609058	Identifier	leftlen		5608543	1					
ANR	5609059	ExpressionStatement	"memcpy ( ctx . left , copy , ctx . leftlen )"	82:6:2818:2854	5608543	2	True				
ANR	5609060	CallExpression	"memcpy ( ctx . left , copy , ctx . leftlen )"		5608543	0					
ANR	5609061	Callee	memcpy		5608543	0					
ANR	5609062	Identifier	memcpy		5608543	0					
ANR	5609063	ArgumentList	ctx . left		5608543	1					
ANR	5609064	Argument	ctx . left		5608543	0					
ANR	5609065	MemberAccess	ctx . left		5608543	0					
ANR	5609066	Identifier	ctx		5608543	0					
ANR	5609067	Identifier	left		5608543	1					
ANR	5609068	Argument	copy		5608543	1					
ANR	5609069	Identifier	copy		5608543	0					
ANR	5609070	Argument	ctx . leftlen		5608543	2					
ANR	5609071	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609072	Identifier	ctx		5608543	0					
ANR	5609073	Identifier	leftlen		5608543	1					
ANR	5609074	ExpressionStatement	free ( copy )	85:4:2873:2884	5608543	2	True				
ANR	5609075	CallExpression	free ( copy )		5608543	0					
ANR	5609076	Callee	free		5608543	0					
ANR	5609077	Identifier	free		5608543	0					
ANR	5609078	ArgumentList	copy		5608543	1					
ANR	5609079	Argument	copy		5608543	0					
ANR	5609080	Identifier	copy		5608543	0					
ANR	5609081	ExpressionStatement	"memset ( & ctx , 0 , sizeof ( ctx ) )"	87:3:2894:2924	5608543	2	True				
ANR	5609082	CallExpression	"memset ( & ctx , 0 , sizeof ( ctx ) )"		5608543	0					
ANR	5609083	Callee	memset		5608543	0					
ANR	5609084	Identifier	memset		5608543	0					
ANR	5609085	ArgumentList	& ctx		5608543	1					
ANR	5609086	Argument	& ctx		5608543	0					
ANR	5609087	UnaryOperationExpression	& ctx		5608543	0					
ANR	5609088	UnaryOperator	&		5608543	0					
ANR	5609089	Identifier	ctx		5608543	1					
ANR	5609090	Argument	0		5608543	1					
ANR	5609091	PrimaryExpression	0		5608543	0					
ANR	5609092	Argument	sizeof ( ctx )		5608543	2					
ANR	5609093	SizeofExpression	sizeof ( ctx )		5608543	0					
ANR	5609094	Sizeof	sizeof		5608543	0					
ANR	5609095	SizeofOperand	ctx		5608543	1					
ANR	5609096	ExpressionStatement	ctx . linebegin = in + 1	88:3:2929:2951	5608543	3	True				
ANR	5609097	AssignmentExpression	ctx . linebegin = in + 1		5608543	0		=			
ANR	5609098	MemberAccess	ctx . linebegin		5608543	0					
ANR	5609099	Identifier	ctx		5608543	0					
ANR	5609100	Identifier	linebegin		5608543	1					
ANR	5609101	AdditiveExpression	in + 1		5608543	1		+			
ANR	5609102	Identifier	in		5608543	0					
ANR	5609103	PrimaryExpression	1		5608543	1					
ANR	5609104	ElseStatement	else		5608543	0					
ANR	5609105	IfStatement	if ( ! ctx . comment && * in == ';' && in [ 1 ] == ' ' )		5608543	0					
ANR	5609106	Condition	! ctx . comment && * in == ';' && in [ 1 ] == ' '	89:13:2966:3007	5608543	0	True				
ANR	5609107	AndExpression	! ctx . comment && * in == ';' && in [ 1 ] == ' '		5608543	0		&&			
ANR	5609108	UnaryOperationExpression	! ctx . comment		5608543	0					
ANR	5609109	UnaryOperator	!		5608543	0					
ANR	5609110	MemberAccess	ctx . comment		5608543	1					
ANR	5609111	Identifier	ctx		5608543	0					
ANR	5609112	Identifier	comment		5608543	1					
ANR	5609113	AndExpression	* in == ';' && in [ 1 ] == ' '		5608543	1		&&			
ANR	5609114	EqualityExpression	* in == ';'		5608543	0		==			
ANR	5609115	UnaryOperationExpression	* in		5608543	0					
ANR	5609116	UnaryOperator	*		5608543	0					
ANR	5609117	Identifier	in		5608543	1					
ANR	5609118	PrimaryExpression	';'		5608543	1					
ANR	5609119	EqualityExpression	in [ 1 ] == ' '		5608543	1		==			
ANR	5609120	ArrayIndexing	in [ 1 ]		5608543	0					
ANR	5609121	Identifier	in		5608543	0					
ANR	5609122	PrimaryExpression	1		5608543	1					
ANR	5609123	PrimaryExpression	' '		5608543	1					
ANR	5609124	CompoundStatement		64:57:2343:2343	5608543	1					
ANR	5609125	ExpressionStatement	ctx . comment = in - 1	90:3:3015:3035	5608543	0	True				
ANR	5609126	AssignmentExpression	ctx . comment = in - 1		5608543	0		=			
ANR	5609127	MemberAccess	ctx . comment		5608543	0					
ANR	5609128	Identifier	ctx		5608543	0					
ANR	5609129	Identifier	comment		5608543	1					
ANR	5609130	AdditiveExpression	in - 1		5608543	1		-			
ANR	5609131	Identifier	in		5608543	0					
ANR	5609132	PrimaryExpression	1		5608543	1					
ANR	5609133	ExpressionStatement	ctx . comment [ 1 ] = '/'	91:3:3040:3060	5608543	1	True				
ANR	5609134	AssignmentExpression	ctx . comment [ 1 ] = '/'		5608543	0		=			
ANR	5609135	ArrayIndexing	ctx . comment [ 1 ]		5608543	0					
ANR	5609136	MemberAccess	ctx . comment		5608543	0					
ANR	5609137	Identifier	ctx		5608543	0					
ANR	5609138	Identifier	comment		5608543	1					
ANR	5609139	PrimaryExpression	1		5608543	1					
ANR	5609140	PrimaryExpression	'/'		5608543	1					
ANR	5609141	ExpressionStatement	ctx . comment [ 2 ] = '/'	92:3:3065:3085	5608543	2	True				
ANR	5609142	AssignmentExpression	ctx . comment [ 2 ] = '/'		5608543	0		=			
ANR	5609143	ArrayIndexing	ctx . comment [ 2 ]		5608543	0					
ANR	5609144	MemberAccess	ctx . comment		5608543	0					
ANR	5609145	Identifier	ctx		5608543	0					
ANR	5609146	Identifier	comment		5608543	1					
ANR	5609147	PrimaryExpression	2		5608543	1					
ANR	5609148	PrimaryExpression	'/'		5608543	1					
ANR	5609149	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) ) )		5608543	3					
ANR	5609150	Condition	! IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) )	93:10:3097:3146	5608543	0	True				
ANR	5609151	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) )		5608543	0					
ANR	5609152	UnaryOperator	!		5608543	0					
ANR	5609153	CallExpression	IS_WHITESPACE ( * ( ctx . comment - ctx . commentcolor ) )		5608543	1					
ANR	5609154	Callee	IS_WHITESPACE		5608543	0					
ANR	5609155	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609156	ArgumentList	* ( ctx . comment - ctx . commentcolor )		5608543	1					
ANR	5609157	Argument	* ( ctx . comment - ctx . commentcolor )		5608543	0					
ANR	5609158	UnaryOperationExpression	* ( ctx . comment - ctx . commentcolor )		5608543	0					
ANR	5609159	UnaryOperator	*		5608543	0					
ANR	5609160	AdditiveExpression	ctx . comment - ctx . commentcolor		5608543	1		-			
ANR	5609161	MemberAccess	ctx . comment		5608543	0					
ANR	5609162	Identifier	ctx		5608543	0					
ANR	5609163	Identifier	comment		5608543	1					
ANR	5609164	MemberAccess	ctx . commentcolor		5608543	1					
ANR	5609165	Identifier	ctx		5608543	0					
ANR	5609166	Identifier	commentcolor		5608543	1					
ANR	5609167	CompoundStatement		68:62:2482:2482	5608543	1					
ANR	5609168	ExpressionStatement	ctx . commentcolor ++	94:4:3155:3173	5608543	0	True				
ANR	5609169	PostIncDecOperationExpression	ctx . commentcolor ++		5608543	0					
ANR	5609170	MemberAccess	ctx . commentcolor		5608543	0					
ANR	5609171	Identifier	ctx		5608543	0					
ANR	5609172	Identifier	commentcolor		5608543	1					
ANR	5609173	IncDec	++		5608543	1					
ANR	5609174	ExpressionStatement	ctx . commentcolor --	96:3:3183:3201	5608543	4	True				
ANR	5609175	PostIncDecOperationExpression	ctx . commentcolor --		5608543	0					
ANR	5609176	MemberAccess	ctx . commentcolor		5608543	0					
ANR	5609177	Identifier	ctx		5608543	0					
ANR	5609178	Identifier	commentcolor		5608543	1					
ANR	5609179	IncDec	--		5608543	1					
ANR	5609180	ElseStatement	else		5608543	0					
ANR	5609181	IfStatement	if ( ! ctx . comment && ctx . type == TYPE_NONE )		5608543	0					
ANR	5609182	Condition	! ctx . comment && ctx . type == TYPE_NONE	97:13:3216:3252	5608543	0	True				
ANR	5609183	AndExpression	! ctx . comment && ctx . type == TYPE_NONE		5608543	0		&&			
ANR	5609184	UnaryOperationExpression	! ctx . comment		5608543	0					
ANR	5609185	UnaryOperator	!		5608543	0					
ANR	5609186	MemberAccess	ctx . comment		5608543	1					
ANR	5609187	Identifier	ctx		5608543	0					
ANR	5609188	Identifier	comment		5608543	1					
ANR	5609189	EqualityExpression	ctx . type == TYPE_NONE		5608543	1		==			
ANR	5609190	MemberAccess	ctx . type		5608543	0					
ANR	5609191	Identifier	ctx		5608543	0					
ANR	5609192	Identifier	type		5608543	1					
ANR	5609193	Identifier	TYPE_NONE		5608543	1					
ANR	5609194	CompoundStatement		72:52:2588:2588	5608543	1					
ANR	5609195	IfStatement	"if ( IS_STRING ( in , ctx ) )"		5608543	0					
ANR	5609196	Condition	"IS_STRING ( in , ctx )"	98:7:3264:3282	5608543	0	True				
ANR	5609197	CallExpression	"IS_STRING ( in , ctx )"		5608543	0					
ANR	5609198	Callee	IS_STRING		5608543	0					
ANR	5609199	Identifier	IS_STRING		5608543	0					
ANR	5609200	ArgumentList	in		5608543	1					
ANR	5609201	Argument	in		5608543	0					
ANR	5609202	Identifier	in		5608543	0					
ANR	5609203	Argument	ctx		5608543	1					
ANR	5609204	Identifier	ctx		5608543	0					
ANR	5609205	CompoundStatement		73:28:2618:2618	5608543	1					
ANR	5609206	ExpressionStatement	ctx . type = TYPE_STR	99:4:3291:3310	5608543	0	True				
ANR	5609207	AssignmentExpression	ctx . type = TYPE_STR		5608543	0		=			
ANR	5609208	MemberAccess	ctx . type		5608543	0					
ANR	5609209	Identifier	ctx		5608543	0					
ANR	5609210	Identifier	type		5608543	1					
ANR	5609211	Identifier	TYPE_STR		5608543	1					
ANR	5609212	ExpressionStatement	ctx . left = in	100:4:3316:3329	5608543	1	True				
ANR	5609213	AssignmentExpression	ctx . left = in		5608543	0		=			
ANR	5609214	MemberAccess	ctx . left		5608543	0					
ANR	5609215	Identifier	ctx		5608543	0					
ANR	5609216	Identifier	left		5608543	1					
ANR	5609217	Identifier	in		5608543	1					
ANR	5609218	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) ) )		5608543	2					
ANR	5609219	Condition	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )	101:11:3342:3385	5608543	0	True				
ANR	5609220	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		5608543	0					
ANR	5609221	UnaryOperator	!		5608543	0					
ANR	5609222	CallExpression	IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		5608543	1					
ANR	5609223	Callee	IS_WHITESPACE		5608543	0					
ANR	5609224	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609225	ArgumentList	* ( ctx . left - ctx . leftcolor )		5608543	1					
ANR	5609226	Argument	* ( ctx . left - ctx . leftcolor )		5608543	0					
ANR	5609227	UnaryOperationExpression	* ( ctx . left - ctx . leftcolor )		5608543	0					
ANR	5609228	UnaryOperator	*		5608543	0					
ANR	5609229	AdditiveExpression	ctx . left - ctx . leftcolor		5608543	1		-			
ANR	5609230	MemberAccess	ctx . left		5608543	0					
ANR	5609231	Identifier	ctx		5608543	0					
ANR	5609232	Identifier	left		5608543	1					
ANR	5609233	MemberAccess	ctx . leftcolor		5608543	1					
ANR	5609234	Identifier	ctx		5608543	0					
ANR	5609235	Identifier	leftcolor		5608543	1					
ANR	5609236	CompoundStatement		76:57:2721:2721	5608543	1					
ANR	5609237	ExpressionStatement	ctx . leftcolor ++	102:5:3395:3410	5608543	0	True				
ANR	5609238	PostIncDecOperationExpression	ctx . leftcolor ++		5608543	0					
ANR	5609239	MemberAccess	ctx . leftcolor		5608543	0					
ANR	5609240	Identifier	ctx		5608543	0					
ANR	5609241	Identifier	leftcolor		5608543	1					
ANR	5609242	IncDec	++		5608543	1					
ANR	5609243	ExpressionStatement	ctx . leftcolor --	104:4:3422:3437	5608543	3	True				
ANR	5609244	PostIncDecOperationExpression	ctx . leftcolor --		5608543	0					
ANR	5609245	MemberAccess	ctx . leftcolor		5608543	0					
ANR	5609246	Identifier	ctx		5608543	0					
ANR	5609247	Identifier	leftcolor		5608543	1					
ANR	5609248	IncDec	--		5608543	1					
ANR	5609249	ExpressionStatement	ctx . leftpos = ctx . left - ctx . linebegin	105:4:3443:3481	5608543	4	True				
ANR	5609250	AssignmentExpression	ctx . leftpos = ctx . left - ctx . linebegin		5608543	0		=			
ANR	5609251	MemberAccess	ctx . leftpos		5608543	0					
ANR	5609252	Identifier	ctx		5608543	0					
ANR	5609253	Identifier	leftpos		5608543	1					
ANR	5609254	AdditiveExpression	ctx . left - ctx . linebegin		5608543	1		-			
ANR	5609255	MemberAccess	ctx . left		5608543	0					
ANR	5609256	Identifier	ctx		5608543	0					
ANR	5609257	Identifier	left		5608543	1					
ANR	5609258	MemberAccess	ctx . linebegin		5608543	1					
ANR	5609259	Identifier	ctx		5608543	0					
ANR	5609260	Identifier	linebegin		5608543	1					
ANR	5609261	ElseStatement	else		5608543	0					
ANR	5609262	IfStatement	"if ( IS_SYMBOL ( in , ctx ) )"		5608543	0					
ANR	5609263	Condition	"IS_SYMBOL ( in , ctx )"	106:14:3497:3515	5608543	0	True				
ANR	5609264	CallExpression	"IS_SYMBOL ( in , ctx )"		5608543	0					
ANR	5609265	Callee	IS_SYMBOL		5608543	0					
ANR	5609266	Identifier	IS_SYMBOL		5608543	0					
ANR	5609267	ArgumentList	in		5608543	1					
ANR	5609268	Argument	in		5608543	0					
ANR	5609269	Identifier	in		5608543	0					
ANR	5609270	Argument	ctx		5608543	1					
ANR	5609271	Identifier	ctx		5608543	0					
ANR	5609272	CompoundStatement		81:35:2851:2851	5608543	1					
ANR	5609273	ExpressionStatement	ctx . type = TYPE_SYM	107:4:3524:3543	5608543	0	True				
ANR	5609274	AssignmentExpression	ctx . type = TYPE_SYM		5608543	0		=			
ANR	5609275	MemberAccess	ctx . type		5608543	0					
ANR	5609276	Identifier	ctx		5608543	0					
ANR	5609277	Identifier	type		5608543	1					
ANR	5609278	Identifier	TYPE_SYM		5608543	1					
ANR	5609279	ExpressionStatement	ctx . left = in	108:4:3549:3562	5608543	1	True				
ANR	5609280	AssignmentExpression	ctx . left = in		5608543	0		=			
ANR	5609281	MemberAccess	ctx . left		5608543	0					
ANR	5609282	Identifier	ctx		5608543	0					
ANR	5609283	Identifier	left		5608543	1					
ANR	5609284	Identifier	in		5608543	1					
ANR	5609285	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) ) )		5608543	2					
ANR	5609286	Condition	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )	109:11:3575:3618	5608543	0	True				
ANR	5609287	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		5608543	0					
ANR	5609288	UnaryOperator	!		5608543	0					
ANR	5609289	CallExpression	IS_WHITESPACE ( * ( ctx . left - ctx . leftcolor ) )		5608543	1					
ANR	5609290	Callee	IS_WHITESPACE		5608543	0					
ANR	5609291	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609292	ArgumentList	* ( ctx . left - ctx . leftcolor )		5608543	1					
ANR	5609293	Argument	* ( ctx . left - ctx . leftcolor )		5608543	0					
ANR	5609294	UnaryOperationExpression	* ( ctx . left - ctx . leftcolor )		5608543	0					
ANR	5609295	UnaryOperator	*		5608543	0					
ANR	5609296	AdditiveExpression	ctx . left - ctx . leftcolor		5608543	1		-			
ANR	5609297	MemberAccess	ctx . left		5608543	0					
ANR	5609298	Identifier	ctx		5608543	0					
ANR	5609299	Identifier	left		5608543	1					
ANR	5609300	MemberAccess	ctx . leftcolor		5608543	1					
ANR	5609301	Identifier	ctx		5608543	0					
ANR	5609302	Identifier	leftcolor		5608543	1					
ANR	5609303	CompoundStatement		84:57:2954:2954	5608543	1					
ANR	5609304	ExpressionStatement	ctx . leftcolor ++	110:5:3628:3643	5608543	0	True				
ANR	5609305	PostIncDecOperationExpression	ctx . leftcolor ++		5608543	0					
ANR	5609306	MemberAccess	ctx . leftcolor		5608543	0					
ANR	5609307	Identifier	ctx		5608543	0					
ANR	5609308	Identifier	leftcolor		5608543	1					
ANR	5609309	IncDec	++		5608543	1					
ANR	5609310	ExpressionStatement	ctx . leftcolor --	112:4:3655:3670	5608543	3	True				
ANR	5609311	PostIncDecOperationExpression	ctx . leftcolor --		5608543	0					
ANR	5609312	MemberAccess	ctx . leftcolor		5608543	0					
ANR	5609313	Identifier	ctx		5608543	0					
ANR	5609314	Identifier	leftcolor		5608543	1					
ANR	5609315	IncDec	--		5608543	1					
ANR	5609316	ExpressionStatement	ctx . leftpos = ctx . left - ctx . linebegin	113:4:3676:3714	5608543	4	True				
ANR	5609317	AssignmentExpression	ctx . leftpos = ctx . left - ctx . linebegin		5608543	0		=			
ANR	5609318	MemberAccess	ctx . leftpos		5608543	0					
ANR	5609319	Identifier	ctx		5608543	0					
ANR	5609320	Identifier	leftpos		5608543	1					
ANR	5609321	AdditiveExpression	ctx . left - ctx . linebegin		5608543	1		-			
ANR	5609322	MemberAccess	ctx . left		5608543	0					
ANR	5609323	Identifier	ctx		5608543	0					
ANR	5609324	Identifier	left		5608543	1					
ANR	5609325	MemberAccess	ctx . linebegin		5608543	1					
ANR	5609326	Identifier	ctx		5608543	0					
ANR	5609327	Identifier	linebegin		5608543	1					
ANR	5609328	ElseStatement	else		5608543	0					
ANR	5609329	IfStatement	if ( ctx . type == TYPE_STR )		5608543	0					
ANR	5609330	Condition	ctx . type == TYPE_STR	115:13:3734:3753	5608543	0	True				
ANR	5609331	EqualityExpression	ctx . type == TYPE_STR		5608543	0		==			
ANR	5609332	MemberAccess	ctx . type		5608543	0					
ANR	5609333	Identifier	ctx		5608543	0					
ANR	5609334	Identifier	type		5608543	1					
ANR	5609335	Identifier	TYPE_STR		5608543	1					
ANR	5609336	CompoundStatement		90:35:3089:3089	5608543	1					
ANR	5609337	IfStatement	if ( ! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in ) )		5608543	0					
ANR	5609338	Condition	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )	116:7:3765:3811	5608543	0	True				
ANR	5609339	AndExpression	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )		5608543	0		&&			
ANR	5609340	UnaryOperationExpression	! ctx . leftlen		5608543	0					
ANR	5609341	UnaryOperator	!		5608543	0					
ANR	5609342	MemberAccess	ctx . leftlen		5608543	1					
ANR	5609343	Identifier	ctx		5608543	0					
ANR	5609344	Identifier	leftlen		5608543	1					
ANR	5609345	AndExpression	ctx . left && IS_WHITESPACE ( * in )		5608543	1		&&			
ANR	5609346	MemberAccess	ctx . left		5608543	0					
ANR	5609347	Identifier	ctx		5608543	0					
ANR	5609348	Identifier	left		5608543	1					
ANR	5609349	CallExpression	IS_WHITESPACE ( * in )		5608543	1					
ANR	5609350	Callee	IS_WHITESPACE		5608543	0					
ANR	5609351	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609352	ArgumentList	* in		5608543	1					
ANR	5609353	Argument	* in		5608543	0					
ANR	5609354	UnaryOperationExpression	* in		5608543	0					
ANR	5609355	UnaryOperator	*		5608543	0					
ANR	5609356	Identifier	in		5608543	1					
ANR	5609357	CompoundStatement		91:56:3147:3147	5608543	1					
ANR	5609358	ExpressionStatement	ctx . leftlen = in - ctx . left	117:4:3820:3847	5608543	0	True				
ANR	5609359	AssignmentExpression	ctx . leftlen = in - ctx . left		5608543	0		=			
ANR	5609360	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609361	Identifier	ctx		5608543	0					
ANR	5609362	Identifier	leftlen		5608543	1					
ANR	5609363	AdditiveExpression	in - ctx . left		5608543	1		-			
ANR	5609364	Identifier	in		5608543	0					
ANR	5609365	MemberAccess	ctx . left		5608543	1					
ANR	5609366	Identifier	ctx		5608543	0					
ANR	5609367	Identifier	left		5608543	1					
ANR	5609368	ElseStatement	else		5608543	0					
ANR	5609369	IfStatement	"if ( ctx . comment && * in == '""' && in [ - 1 ] != '\\\\' )"		5608543	0					
ANR	5609370	Condition	"ctx . comment && * in == '""' && in [ - 1 ] != '\\\\'"	118:14:3863:3905	5608543	0	True				
ANR	5609371	AndExpression	"ctx . comment && * in == '""' && in [ - 1 ] != '\\\\'"		5608543	0		&&			
ANR	5609372	MemberAccess	ctx . comment		5608543	0					
ANR	5609373	Identifier	ctx		5608543	0					
ANR	5609374	Identifier	comment		5608543	1					
ANR	5609375	AndExpression	"* in == '""' && in [ - 1 ] != '\\\\'"		5608543	1		&&			
ANR	5609376	EqualityExpression	"* in == '""'"		5608543	0		==			
ANR	5609377	UnaryOperationExpression	* in		5608543	0					
ANR	5609378	UnaryOperator	*		5608543	0					
ANR	5609379	Identifier	in		5608543	1					
ANR	5609380	PrimaryExpression	"'""'"		5608543	1					
ANR	5609381	EqualityExpression	in [ - 1 ] != '\\\\'		5608543	1		!=			
ANR	5609382	ArrayIndexing	in [ - 1 ]		5608543	0					
ANR	5609383	Identifier	in		5608543	0					
ANR	5609384	UnaryOperationExpression	- 1		5608543	1					
ANR	5609385	UnaryOperator	-		5608543	0					
ANR	5609386	PrimaryExpression	1		5608543	1					
ANR	5609387	PrimaryExpression	'\\\\'		5608543	1					
ANR	5609388	CompoundStatement		93:59:3241:3241	5608543	1					
ANR	5609389	IfStatement	if ( ! ctx . right )		5608543	0					
ANR	5609390	Condition	! ctx . right	119:8:3918:3927	5608543	0	True				
ANR	5609391	UnaryOperationExpression	! ctx . right		5608543	0					
ANR	5609392	UnaryOperator	!		5608543	0					
ANR	5609393	MemberAccess	ctx . right		5608543	1					
ANR	5609394	Identifier	ctx		5608543	0					
ANR	5609395	Identifier	right		5608543	1					
ANR	5609396	CompoundStatement		94:20:3263:3263	5608543	1					
ANR	5609397	ExpressionStatement	ctx . right = in	120:5:3937:3951	5608543	0	True				
ANR	5609398	AssignmentExpression	ctx . right = in		5608543	0		=			
ANR	5609399	MemberAccess	ctx . right		5608543	0					
ANR	5609400	Identifier	ctx		5608543	0					
ANR	5609401	Identifier	right		5608543	1					
ANR	5609402	Identifier	in		5608543	1					
ANR	5609403	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) ) )		5608543	1					
ANR	5609404	Condition	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )	121:12:3965:4010	5608543	0	True				
ANR	5609405	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		5608543	0					
ANR	5609406	UnaryOperator	!		5608543	0					
ANR	5609407	CallExpression	IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		5608543	1					
ANR	5609408	Callee	IS_WHITESPACE		5608543	0					
ANR	5609409	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609410	ArgumentList	* ( ctx . right - ctx . rightcolor )		5608543	1					
ANR	5609411	Argument	* ( ctx . right - ctx . rightcolor )		5608543	0					
ANR	5609412	UnaryOperationExpression	* ( ctx . right - ctx . rightcolor )		5608543	0					
ANR	5609413	UnaryOperator	*		5608543	0					
ANR	5609414	AdditiveExpression	ctx . right - ctx . rightcolor		5608543	1		-			
ANR	5609415	MemberAccess	ctx . right		5608543	0					
ANR	5609416	Identifier	ctx		5608543	0					
ANR	5609417	Identifier	right		5608543	1					
ANR	5609418	MemberAccess	ctx . rightcolor		5608543	1					
ANR	5609419	Identifier	ctx		5608543	0					
ANR	5609420	Identifier	rightcolor		5608543	1					
ANR	5609421	CompoundStatement		96:60:3346:3346	5608543	1					
ANR	5609422	ExpressionStatement	ctx . rightcolor ++	122:6:4021:4037	5608543	0	True				
ANR	5609423	PostIncDecOperationExpression	ctx . rightcolor ++		5608543	0					
ANR	5609424	MemberAccess	ctx . rightcolor		5608543	0					
ANR	5609425	Identifier	ctx		5608543	0					
ANR	5609426	Identifier	rightcolor		5608543	1					
ANR	5609427	IncDec	++		5608543	1					
ANR	5609428	ExpressionStatement	ctx . rightcolor --	124:5:4051:4067	5608543	2	True				
ANR	5609429	PostIncDecOperationExpression	ctx . rightcolor --		5608543	0					
ANR	5609430	MemberAccess	ctx . rightcolor		5608543	0					
ANR	5609431	Identifier	ctx		5608543	0					
ANR	5609432	Identifier	rightcolor		5608543	1					
ANR	5609433	IncDec	--		5608543	1					
ANR	5609434	ElseStatement	else		5608543	0					
ANR	5609435	CompoundStatement		100:11:3413:3413	5608543	0					
ANR	5609436	ExpressionStatement	ctx . rightlen = in - ctx . right + 1	126:5:4087:4120	5608543	0	True				
ANR	5609437	AssignmentExpression	ctx . rightlen = in - ctx . right + 1		5608543	0		=			
ANR	5609438	MemberAccess	ctx . rightlen		5608543	0					
ANR	5609439	Identifier	ctx		5608543	0					
ANR	5609440	Identifier	rightlen		5608543	1					
ANR	5609441	AdditiveExpression	in - ctx . right + 1		5608543	1		-			
ANR	5609442	Identifier	in		5608543	0					
ANR	5609443	AdditiveExpression	ctx . right + 1		5608543	1		+			
ANR	5609444	MemberAccess	ctx . right		5608543	0					
ANR	5609445	Identifier	ctx		5608543	0					
ANR	5609446	Identifier	right		5608543	1					
ANR	5609447	PrimaryExpression	1		5608543	1					
ANR	5609448	ElseStatement	else		5608543	0					
ANR	5609449	IfStatement	if ( ctx . type == TYPE_SYM )		5608543	0					
ANR	5609450	Condition	ctx . type == TYPE_SYM	129:13:4146:4165	5608543	0	True				
ANR	5609451	EqualityExpression	ctx . type == TYPE_SYM		5608543	0		==			
ANR	5609452	MemberAccess	ctx . type		5608543	0					
ANR	5609453	Identifier	ctx		5608543	0					
ANR	5609454	Identifier	type		5608543	1					
ANR	5609455	Identifier	TYPE_SYM		5608543	1					
ANR	5609456	CompoundStatement		104:35:3501:3501	5608543	1					
ANR	5609457	IfStatement	if ( ! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in ) )		5608543	0					
ANR	5609458	Condition	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )	130:7:4177:4223	5608543	0	True				
ANR	5609459	AndExpression	! ctx . leftlen && ctx . left && IS_WHITESPACE ( * in )		5608543	0		&&			
ANR	5609460	UnaryOperationExpression	! ctx . leftlen		5608543	0					
ANR	5609461	UnaryOperator	!		5608543	0					
ANR	5609462	MemberAccess	ctx . leftlen		5608543	1					
ANR	5609463	Identifier	ctx		5608543	0					
ANR	5609464	Identifier	leftlen		5608543	1					
ANR	5609465	AndExpression	ctx . left && IS_WHITESPACE ( * in )		5608543	1		&&			
ANR	5609466	MemberAccess	ctx . left		5608543	0					
ANR	5609467	Identifier	ctx		5608543	0					
ANR	5609468	Identifier	left		5608543	1					
ANR	5609469	CallExpression	IS_WHITESPACE ( * in )		5608543	1					
ANR	5609470	Callee	IS_WHITESPACE		5608543	0					
ANR	5609471	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609472	ArgumentList	* in		5608543	1					
ANR	5609473	Argument	* in		5608543	0					
ANR	5609474	UnaryOperationExpression	* in		5608543	0					
ANR	5609475	UnaryOperator	*		5608543	0					
ANR	5609476	Identifier	in		5608543	1					
ANR	5609477	CompoundStatement		105:56:3559:3559	5608543	1					
ANR	5609478	ExpressionStatement	ctx . leftlen = in - ctx . left + 3	131:4:4232:4263	5608543	0	True				
ANR	5609479	AssignmentExpression	ctx . leftlen = in - ctx . left + 3		5608543	0		=			
ANR	5609480	MemberAccess	ctx . leftlen		5608543	0					
ANR	5609481	Identifier	ctx		5608543	0					
ANR	5609482	Identifier	leftlen		5608543	1					
ANR	5609483	AdditiveExpression	in - ctx . left + 3		5608543	1		-			
ANR	5609484	Identifier	in		5608543	0					
ANR	5609485	AdditiveExpression	ctx . left + 3		5608543	1		+			
ANR	5609486	MemberAccess	ctx . left		5608543	0					
ANR	5609487	Identifier	ctx		5608543	0					
ANR	5609488	Identifier	left		5608543	1					
ANR	5609489	PrimaryExpression	3		5608543	1					
ANR	5609490	ElseStatement	else		5608543	0					
ANR	5609491	IfStatement	if ( ctx . comment && * in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right )		5608543	0					
ANR	5609492	Condition	ctx . comment && * in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right	132:14:4279:4338	5608543	0	True				
ANR	5609493	AndExpression	ctx . comment && * in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right		5608543	0		&&			
ANR	5609494	MemberAccess	ctx . comment		5608543	0					
ANR	5609495	Identifier	ctx		5608543	0					
ANR	5609496	Identifier	comment		5608543	1					
ANR	5609497	AndExpression	* in == '(' && IS_ALPHA ( in [ - 1 ] ) && ! ctx . right		5608543	1		&&			
ANR	5609498	EqualityExpression	* in == '('		5608543	0		==			
ANR	5609499	UnaryOperationExpression	* in		5608543	0					
ANR	5609500	UnaryOperator	*		5608543	0					
ANR	5609501	Identifier	in		5608543	1					
ANR	5609502	PrimaryExpression	'('		5608543	1					
ANR	5609503	AndExpression	IS_ALPHA ( in [ - 1 ] ) && ! ctx . right		5608543	1		&&			
ANR	5609504	CallExpression	IS_ALPHA ( in [ - 1 ] )		5608543	0					
ANR	5609505	Callee	IS_ALPHA		5608543	0					
ANR	5609506	Identifier	IS_ALPHA		5608543	0					
ANR	5609507	ArgumentList	in [ - 1 ]		5608543	1					
ANR	5609508	Argument	in [ - 1 ]		5608543	0					
ANR	5609509	ArrayIndexing	in [ - 1 ]		5608543	0					
ANR	5609510	Identifier	in		5608543	0					
ANR	5609511	UnaryOperationExpression	- 1		5608543	1					
ANR	5609512	UnaryOperator	-		5608543	0					
ANR	5609513	PrimaryExpression	1		5608543	1					
ANR	5609514	UnaryOperationExpression	! ctx . right		5608543	1					
ANR	5609515	UnaryOperator	!		5608543	0					
ANR	5609516	MemberAccess	ctx . right		5608543	1					
ANR	5609517	Identifier	ctx		5608543	0					
ANR	5609518	Identifier	right		5608543	1					
ANR	5609519	CompoundStatement		107:76:3674:3674	5608543	1					
ANR	5609520	ExpressionStatement	ctx . right = in - 1	140:4:4678:4696	5608543	0	True				
ANR	5609521	AssignmentExpression	ctx . right = in - 1		5608543	0		=			
ANR	5609522	MemberAccess	ctx . right		5608543	0					
ANR	5609523	Identifier	ctx		5608543	0					
ANR	5609524	Identifier	right		5608543	1					
ANR	5609525	AdditiveExpression	in - 1		5608543	1		-			
ANR	5609526	Identifier	in		5608543	0					
ANR	5609527	PrimaryExpression	1		5608543	1					
ANR	5609528	WhileStatement	while ( IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*' )		5608543	1					
ANR	5609529	Condition	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'	141:11:4709:4771	5608543	0	True				
ANR	5609530	OrExpression	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'		5608543	0		||			
ANR	5609531	CallExpression	IS_ALPHA ( * ctx . right )		5608543	0					
ANR	5609532	Callee	IS_ALPHA		5608543	0					
ANR	5609533	Identifier	IS_ALPHA		5608543	0					
ANR	5609534	ArgumentList	* ctx . right		5608543	1					
ANR	5609535	Argument	* ctx . right		5608543	0					
ANR	5609536	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609537	UnaryOperator	*		5608543	0					
ANR	5609538	MemberAccess	ctx . right		5608543	1					
ANR	5609539	Identifier	ctx		5608543	0					
ANR	5609540	Identifier	right		5608543	1					
ANR	5609541	OrExpression	* ctx . right == '_' || * ctx . right == '*'		5608543	1		||			
ANR	5609542	EqualityExpression	* ctx . right == '_'		5608543	0		==			
ANR	5609543	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609544	UnaryOperator	*		5608543	0					
ANR	5609545	MemberAccess	ctx . right		5608543	1					
ANR	5609546	Identifier	ctx		5608543	0					
ANR	5609547	Identifier	right		5608543	1					
ANR	5609548	PrimaryExpression	'_'		5608543	1					
ANR	5609549	EqualityExpression	* ctx . right == '*'		5608543	1		==			
ANR	5609550	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609551	UnaryOperator	*		5608543	0					
ANR	5609552	MemberAccess	ctx . right		5608543	1					
ANR	5609553	Identifier	ctx		5608543	0					
ANR	5609554	Identifier	right		5608543	1					
ANR	5609555	PrimaryExpression	'*'		5608543	1					
ANR	5609556	CompoundStatement		116:76:4107:4107	5608543	1					
ANR	5609557	ExpressionStatement	ctx . right --	142:5:4781:4792	5608543	0	True				
ANR	5609558	PostIncDecOperationExpression	ctx . right --		5608543	0					
ANR	5609559	MemberAccess	ctx . right		5608543	0					
ANR	5609560	Identifier	ctx		5608543	0					
ANR	5609561	Identifier	right		5608543	1					
ANR	5609562	IncDec	--		5608543	1					
ANR	5609563	IfStatement	if ( * ctx . right == ' ' )		5608543	2					
ANR	5609564	Condition	* ctx . right == ' '	150:8:5140:5156	5608543	0	True				
ANR	5609565	EqualityExpression	* ctx . right == ' '		5608543	0		==			
ANR	5609566	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609567	UnaryOperator	*		5608543	0					
ANR	5609568	MemberAccess	ctx . right		5608543	1					
ANR	5609569	Identifier	ctx		5608543	0					
ANR	5609570	Identifier	right		5608543	1					
ANR	5609571	PrimaryExpression	' '		5608543	1					
ANR	5609572	CompoundStatement		125:27:4492:4492	5608543	1					
ANR	5609573	ExpressionStatement	ctx . right --	151:5:5166:5177	5608543	0	True				
ANR	5609574	PostIncDecOperationExpression	ctx . right --		5608543	0					
ANR	5609575	MemberAccess	ctx . right		5608543	0					
ANR	5609576	Identifier	ctx		5608543	0					
ANR	5609577	Identifier	right		5608543	1					
ANR	5609578	IncDec	--		5608543	1					
ANR	5609579	WhileStatement	while ( IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*' )		5608543	1					
ANR	5609580	Condition	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'	152:12:5191:5253	5608543	0	True				
ANR	5609581	OrExpression	IS_ALPHA ( * ctx . right ) || * ctx . right == '_' || * ctx . right == '*'		5608543	0		||			
ANR	5609582	CallExpression	IS_ALPHA ( * ctx . right )		5608543	0					
ANR	5609583	Callee	IS_ALPHA		5608543	0					
ANR	5609584	Identifier	IS_ALPHA		5608543	0					
ANR	5609585	ArgumentList	* ctx . right		5608543	1					
ANR	5609586	Argument	* ctx . right		5608543	0					
ANR	5609587	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609588	UnaryOperator	*		5608543	0					
ANR	5609589	MemberAccess	ctx . right		5608543	1					
ANR	5609590	Identifier	ctx		5608543	0					
ANR	5609591	Identifier	right		5608543	1					
ANR	5609592	OrExpression	* ctx . right == '_' || * ctx . right == '*'		5608543	1		||			
ANR	5609593	EqualityExpression	* ctx . right == '_'		5608543	0		==			
ANR	5609594	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609595	UnaryOperator	*		5608543	0					
ANR	5609596	MemberAccess	ctx . right		5608543	1					
ANR	5609597	Identifier	ctx		5608543	0					
ANR	5609598	Identifier	right		5608543	1					
ANR	5609599	PrimaryExpression	'_'		5608543	1					
ANR	5609600	EqualityExpression	* ctx . right == '*'		5608543	1		==			
ANR	5609601	UnaryOperationExpression	* ctx . right		5608543	0					
ANR	5609602	UnaryOperator	*		5608543	0					
ANR	5609603	MemberAccess	ctx . right		5608543	1					
ANR	5609604	Identifier	ctx		5608543	0					
ANR	5609605	Identifier	right		5608543	1					
ANR	5609606	PrimaryExpression	'*'		5608543	1					
ANR	5609607	CompoundStatement		127:77:4589:4589	5608543	1					
ANR	5609608	ExpressionStatement	ctx . right --	153:6:5264:5275	5608543	0	True				
ANR	5609609	PostIncDecOperationExpression	ctx . right --		5608543	0					
ANR	5609610	MemberAccess	ctx . right		5608543	0					
ANR	5609611	Identifier	ctx		5608543	0					
ANR	5609612	Identifier	right		5608543	1					
ANR	5609613	IncDec	--		5608543	1					
ANR	5609614	ExpressionStatement	ctx . right ++	156:5:5346:5357	5608543	2	True				
ANR	5609615	PostIncDecOperationExpression	ctx . right ++		5608543	0					
ANR	5609616	MemberAccess	ctx . right		5608543	0					
ANR	5609617	Identifier	ctx		5608543	0					
ANR	5609618	Identifier	right		5608543	1					
ANR	5609619	IncDec	++		5608543	1					
ANR	5609620	WhileStatement	while ( ! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) ) )		5608543	3					
ANR	5609621	Condition	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )	158:11:5376:5421	5608543	0	True				
ANR	5609622	UnaryOperationExpression	! IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		5608543	0					
ANR	5609623	UnaryOperator	!		5608543	0					
ANR	5609624	CallExpression	IS_WHITESPACE ( * ( ctx . right - ctx . rightcolor ) )		5608543	1					
ANR	5609625	Callee	IS_WHITESPACE		5608543	0					
ANR	5609626	Identifier	IS_WHITESPACE		5608543	0					
ANR	5609627	ArgumentList	* ( ctx . right - ctx . rightcolor )		5608543	1					
ANR	5609628	Argument	* ( ctx . right - ctx . rightcolor )		5608543	0					
ANR	5609629	UnaryOperationExpression	* ( ctx . right - ctx . rightcolor )		5608543	0					
ANR	5609630	UnaryOperator	*		5608543	0					
ANR	5609631	AdditiveExpression	ctx . right - ctx . rightcolor		5608543	1		-			
ANR	5609632	MemberAccess	ctx . right		5608543	0					
ANR	5609633	Identifier	ctx		5608543	0					
ANR	5609634	Identifier	right		5608543	1					
ANR	5609635	MemberAccess	ctx . rightcolor		5608543	1					
ANR	5609636	Identifier	ctx		5608543	0					
ANR	5609637	Identifier	rightcolor		5608543	1					
ANR	5609638	CompoundStatement		133:59:4757:4757	5608543	1					
ANR	5609639	ExpressionStatement	ctx . rightcolor ++	159:5:5431:5447	5608543	0	True				
ANR	5609640	PostIncDecOperationExpression	ctx . rightcolor ++		5608543	0					
ANR	5609641	MemberAccess	ctx . rightcolor		5608543	0					
ANR	5609642	Identifier	ctx		5608543	0					
ANR	5609643	Identifier	rightcolor		5608543	1					
ANR	5609644	IncDec	++		5608543	1					
ANR	5609645	ExpressionStatement	ctx . rightcolor --	161:4:5459:5475	5608543	4	True				
ANR	5609646	PostIncDecOperationExpression	ctx . rightcolor --		5608543	0					
ANR	5609647	MemberAccess	ctx . rightcolor		5608543	0					
ANR	5609648	Identifier	ctx		5608543	0					
ANR	5609649	Identifier	rightcolor		5608543	1					
ANR	5609650	IncDec	--		5608543	1					
ANR	5609651	ElseStatement	else		5608543	0					
ANR	5609652	IfStatement	if ( ctx . comment && * in == ')' && in [ 1 ] != '\\'' )		5608543	0					
ANR	5609653	Condition	ctx . comment && * in == ')' && in [ 1 ] != '\\''	162:14:5491:5532	5608543	0	True				
ANR	5609654	AndExpression	ctx . comment && * in == ')' && in [ 1 ] != '\\''		5608543	0		&&			
ANR	5609655	MemberAccess	ctx . comment		5608543	0					
ANR	5609656	Identifier	ctx		5608543	0					
ANR	5609657	Identifier	comment		5608543	1					
ANR	5609658	AndExpression	* in == ')' && in [ 1 ] != '\\''		5608543	1		&&			
ANR	5609659	EqualityExpression	* in == ')'		5608543	0		==			
ANR	5609660	UnaryOperationExpression	* in		5608543	0					
ANR	5609661	UnaryOperator	*		5608543	0					
ANR	5609662	Identifier	in		5608543	1					
ANR	5609663	PrimaryExpression	')'		5608543	1					
ANR	5609664	EqualityExpression	in [ 1 ] != '\\''		5608543	1		!=			
ANR	5609665	ArrayIndexing	in [ 1 ]		5608543	0					
ANR	5609666	Identifier	in		5608543	0					
ANR	5609667	PrimaryExpression	1		5608543	1					
ANR	5609668	PrimaryExpression	'\\''		5608543	1					
ANR	5609669	CompoundStatement		137:58:4868:4868	5608543	1					
ANR	5609670	ExpressionStatement	ctx . rightlen = in - ctx . right + 1	163:4:5541:5574	5608543	0	True				
ANR	5609671	AssignmentExpression	ctx . rightlen = in - ctx . right + 1		5608543	0		=			
ANR	5609672	MemberAccess	ctx . rightlen		5608543	0					
ANR	5609673	Identifier	ctx		5608543	0					
ANR	5609674	Identifier	rightlen		5608543	1					
ANR	5609675	AdditiveExpression	in - ctx . right + 1		5608543	1		-			
ANR	5609676	Identifier	in		5608543	0					
ANR	5609677	AdditiveExpression	ctx . right + 1		5608543	1		+			
ANR	5609678	MemberAccess	ctx . right		5608543	0					
ANR	5609679	Identifier	ctx		5608543	0					
ANR	5609680	Identifier	right		5608543	1					
ANR	5609681	PrimaryExpression	1		5608543	1					
ANR	5609682	ReturnType	static void		5608543	1					
ANR	5609683	Identifier	find_and_change		5608543	2					
ANR	5609684	ParameterList	"char * in , int len"		5608543	3					
ANR	5609685	Parameter	char * in	26:29:647:654	5608543	0	True				
ANR	5609686	ParameterType	char *		5608543	0					
ANR	5609687	Identifier	in		5608543	1					
ANR	5609688	Parameter	int len	26:39:657:663	5608543	1	True				
ANR	5609689	ParameterType	int		5608543	0					
ANR	5609690	Identifier	len		5608543	1					
ANR	5609691	CFGEntryNode	ENTRY		5608543		True				
ANR	5609692	CFGExitNode	EXIT		5608543		True				
ANR	5609693	Symbol	* ctx . commentcolor		5608543						
ANR	5609694	Symbol	IS_ALPHA		5608543						
ANR	5609695	Symbol	* in		5608543						
ANR	5609696	Symbol	* ctx . leftpos		5608543						
ANR	5609697	Symbol	& ctx		5608543						
ANR	5609698	Symbol	TYPE_SYM		5608543						
ANR	5609699	Symbol	IS_WHITESPACE		5608543						
ANR	5609700	Symbol	ctx . leftpos		5608543						
ANR	5609701	Symbol	ctx . leftlen		5608543						
ANR	5609702	Symbol	TYPE_NONE		5608543						
ANR	5609703	Symbol	* ctx . rightcolor		5608543						
ANR	5609704	Symbol	ctx . right		5608543						
ANR	5609705	Symbol	len		5608543						
ANR	5609706	Symbol	ctx . linecount		5608543						
ANR	5609707	Symbol	ctx . comment		5608543						
ANR	5609708	Symbol	ctx . leftcolor		5608543						
ANR	5609709	Symbol	end		5608543						
ANR	5609710	Symbol	copy		5608543						
ANR	5609711	Symbol	IS_STRING		5608543						
ANR	5609712	Symbol	* ( ctx . right - ctx . leftpos - 1 )		5608543						
ANR	5609713	Symbol	ctx . linebegin		5608543						
ANR	5609714	Symbol	malloc		5608543						
ANR	5609715	Symbol	* ctx . comment		5608543						
ANR	5609716	Symbol	ctx . commentcolor		5608543						
ANR	5609717	Symbol	* ( ctx . right - ctx . rightcolor )		5608543						
ANR	5609718	Symbol	ctx . left		5608543						
ANR	5609719	Symbol	ctx . rightlen		5608543						
ANR	5609720	Symbol	NULL		5608543						
ANR	5609721	Symbol	in		5608543						
ANR	5609722	Symbol	TYPE_STR		5608543						
ANR	5609723	Symbol	* ctx . left		5608543						
ANR	5609724	Symbol	ctx		5608543						
ANR	5609725	Symbol	* ctx . right		5608543						
ANR	5609726	Symbol	IS_SYMBOL		5608543						
ANR	5609727	Symbol	* ctx		5608543						
ANR	5609728	Symbol	ctx . type		5608543						
ANR	5609729	Symbol	* ( ctx . comment - ctx . commentcolor )		5608543						
ANR	5609730	Symbol	* ( ctx . left - ctx . leftcolor )		5608543						
ANR	5609731	Symbol	ctx . rightcolor		5608543						
ANR	5609732	Symbol	* ctx . leftcolor		5608543						
ANR	5609733	Function	r_core_pseudo_code	169:0:5591:13660							
ANR	5609734	FunctionDef	"r_core_pseudo_code (RCore * core , const char * input)"		5609733	0					
ANR	5609735	CompoundStatement		169:61:5652:13660	5609733	0					
ANR	5609736	IdentifierDeclStatement	"const char * cmdPdc = r_config_get ( core -> config , ""cmd.pdc"" ) ;"	170:1:5655:5714	5609733	0	True				
ANR	5609737	IdentifierDecl	"* cmdPdc = r_config_get ( core -> config , ""cmd.pdc"" )"		5609733	0					
ANR	5609738	IdentifierDeclType	const char *		5609733	0					
ANR	5609739	Identifier	cmdPdc		5609733	1					
ANR	5609740	AssignmentExpression	"* cmdPdc = r_config_get ( core -> config , ""cmd.pdc"" )"		5609733	2		=			
ANR	5609741	Identifier	cmdPdc		5609733	0					
ANR	5609742	CallExpression	"r_config_get ( core -> config , ""cmd.pdc"" )"		5609733	1					
ANR	5609743	Callee	r_config_get		5609733	0					
ANR	5609744	Identifier	r_config_get		5609733	0					
ANR	5609745	ArgumentList	core -> config		5609733	1					
ANR	5609746	Argument	core -> config		5609733	0					
ANR	5609747	PtrMemberAccess	core -> config		5609733	0					
ANR	5609748	Identifier	core		5609733	0					
ANR	5609749	Identifier	config		5609733	1					
ANR	5609750	Argument	"""cmd.pdc"""		5609733	1					
ANR	5609751	PrimaryExpression	"""cmd.pdc"""		5609733	0					
ANR	5609752	IfStatement	"if ( cmdPdc && * cmdPdc && ! strstr ( cmdPdc , ""pdc"" ) )"		5609733	1					
ANR	5609753	Condition	"cmdPdc && * cmdPdc && ! strstr ( cmdPdc , ""pdc"" )"	171:5:5721:5764	5609733	0	True				
ANR	5609754	AndExpression	"cmdPdc && * cmdPdc && ! strstr ( cmdPdc , ""pdc"" )"		5609733	0		&&			
ANR	5609755	Identifier	cmdPdc		5609733	0					
ANR	5609756	AndExpression	"* cmdPdc && ! strstr ( cmdPdc , ""pdc"" )"		5609733	1		&&			
ANR	5609757	UnaryOperationExpression	* cmdPdc		5609733	0					
ANR	5609758	UnaryOperator	*		5609733	0					
ANR	5609759	Identifier	cmdPdc		5609733	1					
ANR	5609760	UnaryOperationExpression	"! strstr ( cmdPdc , ""pdc"" )"		5609733	1					
ANR	5609761	UnaryOperator	!		5609733	0					
ANR	5609762	CallExpression	"strstr ( cmdPdc , ""pdc"" )"		5609733	1					
ANR	5609763	Callee	strstr		5609733	0					
ANR	5609764	Identifier	strstr		5609733	0					
ANR	5609765	ArgumentList	cmdPdc		5609733	1					
ANR	5609766	Argument	cmdPdc		5609733	0					
ANR	5609767	Identifier	cmdPdc		5609733	0					
ANR	5609768	Argument	"""pdc"""		5609733	1					
ANR	5609769	PrimaryExpression	"""pdc"""		5609733	0					
ANR	5609770	CompoundStatement		3:51:114:114	5609733	1					
ANR	5609771	IfStatement	"if ( strstr ( cmdPdc , ""!*"" ) || strstr ( cmdPdc , ""#!"" ) )"		5609733	0					
ANR	5609772	Condition	"strstr ( cmdPdc , ""!*"" ) || strstr ( cmdPdc , ""#!"" )"	172:6:5775:5820	5609733	0	True				
ANR	5609773	OrExpression	"strstr ( cmdPdc , ""!*"" ) || strstr ( cmdPdc , ""#!"" )"		5609733	0		||			
ANR	5609774	CallExpression	"strstr ( cmdPdc , ""!*"" )"		5609733	0					
ANR	5609775	Callee	strstr		5609733	0					
ANR	5609776	Identifier	strstr		5609733	0					
ANR	5609777	ArgumentList	cmdPdc		5609733	1					
ANR	5609778	Argument	cmdPdc		5609733	0					
ANR	5609779	Identifier	cmdPdc		5609733	0					
ANR	5609780	Argument	"""!*"""		5609733	1					
ANR	5609781	PrimaryExpression	"""!*"""		5609733	0					
ANR	5609782	CallExpression	"strstr ( cmdPdc , ""#!"" )"		5609733	1					
ANR	5609783	Callee	strstr		5609733	0					
ANR	5609784	Identifier	strstr		5609733	0					
ANR	5609785	ArgumentList	cmdPdc		5609733	1					
ANR	5609786	Argument	cmdPdc		5609733	0					
ANR	5609787	Identifier	cmdPdc		5609733	0					
ANR	5609788	Argument	"""#!"""		5609733	1					
ANR	5609789	PrimaryExpression	"""#!"""		5609733	0					
ANR	5609790	CompoundStatement		4:54:170:170	5609733	1					
ANR	5609791	IfStatement	"if ( ! strcmp ( input , ""*"" ) )"		5609733	0					
ANR	5609792	Condition	"! strcmp ( input , ""*"" )"	173:7:5832:5851	5609733	0	True				
ANR	5609793	UnaryOperationExpression	"! strcmp ( input , ""*"" )"		5609733	0					
ANR	5609794	UnaryOperator	!		5609733	0					
ANR	5609795	CallExpression	"strcmp ( input , ""*"" )"		5609733	1					
ANR	5609796	Callee	strcmp		5609733	0					
ANR	5609797	Identifier	strcmp		5609733	0					
ANR	5609798	ArgumentList	input		5609733	1					
ANR	5609799	Argument	input		5609733	0					
ANR	5609800	Identifier	input		5609733	0					
ANR	5609801	Argument	"""*"""		5609733	1					
ANR	5609802	PrimaryExpression	"""*"""		5609733	0					
ANR	5609803	CompoundStatement		5:29:201:201	5609733	1					
ANR	5609804	ExpressionStatement	"input = "" -r2"""	174:4:5860:5874	5609733	0	True				
ANR	5609805	AssignmentExpression	"input = "" -r2"""		5609733	0		=			
ANR	5609806	Identifier	input		5609733	0					
ANR	5609807	PrimaryExpression	""" -r2"""		5609733	1					
ANR	5609808	ElseStatement	else		5609733	0					
ANR	5609809	IfStatement	"if ( ! strcmp ( input , ""="" ) )"		5609733	0					
ANR	5609810	Condition	"! strcmp ( input , ""="" )"	175:14:5890:5909	5609733	0	True				
ANR	5609811	UnaryOperationExpression	"! strcmp ( input , ""="" )"		5609733	0					
ANR	5609812	UnaryOperator	!		5609733	0					
ANR	5609813	CallExpression	"strcmp ( input , ""="" )"		5609733	1					
ANR	5609814	Callee	strcmp		5609733	0					
ANR	5609815	Identifier	strcmp		5609733	0					
ANR	5609816	ArgumentList	input		5609733	1					
ANR	5609817	Argument	input		5609733	0					
ANR	5609818	Identifier	input		5609733	0					
ANR	5609819	Argument	"""="""		5609733	1					
ANR	5609820	PrimaryExpression	"""="""		5609733	0					
ANR	5609821	CompoundStatement		7:36:259:259	5609733	1					
ANR	5609822	ExpressionStatement	"input = "" -a"""	176:4:5918:5931	5609733	0	True				
ANR	5609823	AssignmentExpression	"input = "" -a"""		5609733	0		=			
ANR	5609824	Identifier	input		5609733	0					
ANR	5609825	PrimaryExpression	""" -a"""		5609733	1					
ANR	5609826	ElseStatement	else		5609733	0					
ANR	5609827	IfStatement	"if ( ! strcmp ( input , ""?"" ) )"		5609733	0					
ANR	5609828	Condition	"! strcmp ( input , ""?"" )"	177:14:5947:5966	5609733	0	True				
ANR	5609829	UnaryOperationExpression	"! strcmp ( input , ""?"" )"		5609733	0					
ANR	5609830	UnaryOperator	!		5609733	0					
ANR	5609831	CallExpression	"strcmp ( input , ""?"" )"		5609733	1					
ANR	5609832	Callee	strcmp		5609733	0					
ANR	5609833	Identifier	strcmp		5609733	0					
ANR	5609834	ArgumentList	input		5609733	1					
ANR	5609835	Argument	input		5609733	0					
ANR	5609836	Identifier	input		5609733	0					
ANR	5609837	Argument	"""?"""		5609733	1					
ANR	5609838	PrimaryExpression	"""?"""		5609733	0					
ANR	5609839	CompoundStatement		9:36:316:316	5609733	1					
ANR	5609840	ExpressionStatement	"input = "" -h"""	178:4:5975:5988	5609733	0	True				
ANR	5609841	AssignmentExpression	"input = "" -h"""		5609733	0		=			
ANR	5609842	Identifier	input		5609733	0					
ANR	5609843	PrimaryExpression	""" -h"""		5609733	1					
ANR	5609844	ReturnStatement	"return r_core_cmdf ( core , ""%s%s"" , cmdPdc , input ) ;"	181:2:6001:6049	5609733	1	True				
ANR	5609845	CallExpression	"r_core_cmdf ( core , ""%s%s"" , cmdPdc , input )"		5609733	0					
ANR	5609846	Callee	r_core_cmdf		5609733	0					
ANR	5609847	Identifier	r_core_cmdf		5609733	0					
ANR	5609848	ArgumentList	core		5609733	1					
ANR	5609849	Argument	core		5609733	0					
ANR	5609850	Identifier	core		5609733	0					
ANR	5609851	Argument	"""%s%s"""		5609733	1					
ANR	5609852	PrimaryExpression	"""%s%s"""		5609733	0					
ANR	5609853	Argument	cmdPdc		5609733	2					
ANR	5609854	Identifier	cmdPdc		5609733	0					
ANR	5609855	Argument	input		5609733	3					
ANR	5609856	Identifier	input		5609733	0					
ANR	5609857	IdentifierDeclStatement	Sdb * db ;	184:1:6056:6063	5609733	2	True				
ANR	5609858	IdentifierDecl	* db		5609733	0					
ANR	5609859	IdentifierDeclType	Sdb *		5609733	0					
ANR	5609860	Identifier	db		5609733	1					
ANR	5609861	Statement	ut64	185:1:6066:6069	5609733	3	True				
ANR	5609862	Statement	queuegoto	185:6:6071:6079	5609733	4	True				
ANR	5609863	Statement	=	185:16:6081:6081	5609733	5	True				
ANR	5609864	Statement	0L	185:18:6083:6084	5609733	6	True				
ANR	5609865	ExpressionStatement	L	185:20:6085:6086	5609733	7	True				
ANR	5609866	Identifier	L		5609733	0					
ANR	5609867	IdentifierDeclStatement	"const char * blocktype = ""else"" ;"	186:1:6089:6119	5609733	8	True				
ANR	5609868	IdentifierDecl	"* blocktype = ""else"""		5609733	0					
ANR	5609869	IdentifierDeclType	const char *		5609733	0					
ANR	5609870	Identifier	blocktype		5609733	1					
ANR	5609871	AssignmentExpression	"* blocktype = ""else"""		5609733	2		=			
ANR	5609872	Identifier	blocktype		5609733	0					
ANR	5609873	PrimaryExpression	"""else"""		5609733	1					
ANR	5609874	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL ) ;"	187:1:6122:6209	5609733	9	True				
ANR	5609875	IdentifierDecl	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		5609733	0					
ANR	5609876	IdentifierDeclType	RAnalFunction *		5609733	0					
ANR	5609877	Identifier	fcn		5609733	1					
ANR	5609878	AssignmentExpression	"* fcn = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		5609733	2		=			
ANR	5609879	Identifier	fcn		5609733	0					
ANR	5609880	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_NULL )"		5609733	1					
ANR	5609881	Callee	r_anal_get_fcn_in		5609733	0					
ANR	5609882	Identifier	r_anal_get_fcn_in		5609733	0					
ANR	5609883	ArgumentList	core -> anal		5609733	1					
ANR	5609884	Argument	core -> anal		5609733	0					
ANR	5609885	PtrMemberAccess	core -> anal		5609733	0					
ANR	5609886	Identifier	core		5609733	0					
ANR	5609887	Identifier	anal		5609733	1					
ANR	5609888	Argument	core -> offset		5609733	1					
ANR	5609889	PtrMemberAccess	core -> offset		5609733	0					
ANR	5609890	Identifier	core		5609733	0					
ANR	5609891	Identifier	offset		5609733	1					
ANR	5609892	Argument	R_ANAL_FCN_TYPE_NULL		5609733	2					
ANR	5609893	Identifier	R_ANAL_FCN_TYPE_NULL		5609733	0					
ANR	5609894	IdentifierDeclStatement	RConfigHold * hc = r_config_hold_new ( core -> config ) ;	188:1:6212:6262	5609733	10	True				
ANR	5609895	IdentifierDecl	* hc = r_config_hold_new ( core -> config )		5609733	0					
ANR	5609896	IdentifierDeclType	RConfigHold *		5609733	0					
ANR	5609897	Identifier	hc		5609733	1					
ANR	5609898	AssignmentExpression	* hc = r_config_hold_new ( core -> config )		5609733	2		=			
ANR	5609899	Identifier	hc		5609733	0					
ANR	5609900	CallExpression	r_config_hold_new ( core -> config )		5609733	1					
ANR	5609901	Callee	r_config_hold_new		5609733	0					
ANR	5609902	Identifier	r_config_hold_new		5609733	0					
ANR	5609903	ArgumentList	core -> config		5609733	1					
ANR	5609904	Argument	core -> config		5609733	0					
ANR	5609905	PtrMemberAccess	core -> config		5609733	0					
ANR	5609906	Identifier	core		5609733	0					
ANR	5609907	Identifier	config		5609733	1					
ANR	5609908	IfStatement	if ( ! hc )		5609733	11					
ANR	5609909	Condition	! hc	189:5:6269:6271	5609733	0	True				
ANR	5609910	UnaryOperationExpression	! hc		5609733	0					
ANR	5609911	UnaryOperator	!		5609733	0					
ANR	5609912	Identifier	hc		5609733	1					
ANR	5609913	CompoundStatement		21:10:621:621	5609733	1					
ANR	5609914	ReturnStatement	return false ;	190:2:6278:6290	5609733	0	True				
ANR	5609915	Identifier	false		5609733	0					
ANR	5609916	ExpressionStatement	"r_config_hold_i ( hc , ""asm.pseudo"" , ""asm.decode"" , ""asm.lines"" , ""asm.bytes"" , ""asm.stackptr"" , NULL )"	192:1:6296:6392	5609733	12	True				
ANR	5609917	CallExpression	"r_config_hold_i ( hc , ""asm.pseudo"" , ""asm.decode"" , ""asm.lines"" , ""asm.bytes"" , ""asm.stackptr"" , NULL )"		5609733	0					
ANR	5609918	Callee	r_config_hold_i		5609733	0					
ANR	5609919	Identifier	r_config_hold_i		5609733	0					
ANR	5609920	ArgumentList	hc		5609733	1					
ANR	5609921	Argument	hc		5609733	0					
ANR	5609922	Identifier	hc		5609733	0					
ANR	5609923	Argument	"""asm.pseudo"""		5609733	1					
ANR	5609924	PrimaryExpression	"""asm.pseudo"""		5609733	0					
ANR	5609925	Argument	"""asm.decode"""		5609733	2					
ANR	5609926	PrimaryExpression	"""asm.decode"""		5609733	0					
ANR	5609927	Argument	"""asm.lines"""		5609733	3					
ANR	5609928	PrimaryExpression	"""asm.lines"""		5609733	0					
ANR	5609929	Argument	"""asm.bytes"""		5609733	4					
ANR	5609930	PrimaryExpression	"""asm.bytes"""		5609733	0					
ANR	5609931	Argument	"""asm.stackptr"""		5609733	5					
ANR	5609932	PrimaryExpression	"""asm.stackptr"""		5609733	0					
ANR	5609933	Argument	NULL		5609733	6					
ANR	5609934	Identifier	NULL		5609733	0					
ANR	5609935	ExpressionStatement	"r_config_hold_i ( hc , ""asm.offset"" , ""asm.flags"" , ""asm.lines.fcn"" , ""asm.comments"" , NULL )"	193:1:6395:6481	5609733	13	True				
ANR	5609936	CallExpression	"r_config_hold_i ( hc , ""asm.offset"" , ""asm.flags"" , ""asm.lines.fcn"" , ""asm.comments"" , NULL )"		5609733	0					
ANR	5609937	Callee	r_config_hold_i		5609733	0					
ANR	5609938	Identifier	r_config_hold_i		5609733	0					
ANR	5609939	ArgumentList	hc		5609733	1					
ANR	5609940	Argument	hc		5609733	0					
ANR	5609941	Identifier	hc		5609733	0					
ANR	5609942	Argument	"""asm.offset"""		5609733	1					
ANR	5609943	PrimaryExpression	"""asm.offset"""		5609733	0					
ANR	5609944	Argument	"""asm.flags"""		5609733	2					
ANR	5609945	PrimaryExpression	"""asm.flags"""		5609733	0					
ANR	5609946	Argument	"""asm.lines.fcn"""		5609733	3					
ANR	5609947	PrimaryExpression	"""asm.lines.fcn"""		5609733	0					
ANR	5609948	Argument	"""asm.comments"""		5609733	4					
ANR	5609949	PrimaryExpression	"""asm.comments"""		5609733	0					
ANR	5609950	Argument	NULL		5609733	5					
ANR	5609951	Identifier	NULL		5609733	0					
ANR	5609952	ExpressionStatement	"r_config_hold_i ( hc , ""asm.functions"" , ""asm.section"" , ""asm.cmt.col"" , ""asm.filter"" , NULL )"	194:1:6484:6571	5609733	14	True				
ANR	5609953	CallExpression	"r_config_hold_i ( hc , ""asm.functions"" , ""asm.section"" , ""asm.cmt.col"" , ""asm.filter"" , NULL )"		5609733	0					
ANR	5609954	Callee	r_config_hold_i		5609733	0					
ANR	5609955	Identifier	r_config_hold_i		5609733	0					
ANR	5609956	ArgumentList	hc		5609733	1					
ANR	5609957	Argument	hc		5609733	0					
ANR	5609958	Identifier	hc		5609733	0					
ANR	5609959	Argument	"""asm.functions"""		5609733	1					
ANR	5609960	PrimaryExpression	"""asm.functions"""		5609733	0					
ANR	5609961	Argument	"""asm.section"""		5609733	2					
ANR	5609962	PrimaryExpression	"""asm.section"""		5609733	0					
ANR	5609963	Argument	"""asm.cmt.col"""		5609733	3					
ANR	5609964	PrimaryExpression	"""asm.cmt.col"""		5609733	0					
ANR	5609965	Argument	"""asm.filter"""		5609733	4					
ANR	5609966	PrimaryExpression	"""asm.filter"""		5609733	0					
ANR	5609967	Argument	NULL		5609733	5					
ANR	5609968	Identifier	NULL		5609733	0					
ANR	5609969	ExpressionStatement	"r_config_hold_i ( hc , ""scr.color"" , ""emu.str"" , ""asm.emu"" , ""emu.write"" , NULL )"	195:1:6574:6648	5609733	15	True				
ANR	5609970	CallExpression	"r_config_hold_i ( hc , ""scr.color"" , ""emu.str"" , ""asm.emu"" , ""emu.write"" , NULL )"		5609733	0					
ANR	5609971	Callee	r_config_hold_i		5609733	0					
ANR	5609972	Identifier	r_config_hold_i		5609733	0					
ANR	5609973	ArgumentList	hc		5609733	1					
ANR	5609974	Argument	hc		5609733	0					
ANR	5609975	Identifier	hc		5609733	0					
ANR	5609976	Argument	"""scr.color"""		5609733	1					
ANR	5609977	PrimaryExpression	"""scr.color"""		5609733	0					
ANR	5609978	Argument	"""emu.str"""		5609733	2					
ANR	5609979	PrimaryExpression	"""emu.str"""		5609733	0					
ANR	5609980	Argument	"""asm.emu"""		5609733	3					
ANR	5609981	PrimaryExpression	"""asm.emu"""		5609733	0					
ANR	5609982	Argument	"""emu.write"""		5609733	4					
ANR	5609983	PrimaryExpression	"""emu.write"""		5609733	0					
ANR	5609984	Argument	NULL		5609733	5					
ANR	5609985	Identifier	NULL		5609733	0					
ANR	5609986	ExpressionStatement	"r_config_hold_i ( hc , ""io.cache"" , NULL )"	196:1:6651:6689	5609733	16	True				
ANR	5609987	CallExpression	"r_config_hold_i ( hc , ""io.cache"" , NULL )"		5609733	0					
ANR	5609988	Callee	r_config_hold_i		5609733	0					
ANR	5609989	Identifier	r_config_hold_i		5609733	0					
ANR	5609990	ArgumentList	hc		5609733	1					
ANR	5609991	Argument	hc		5609733	0					
ANR	5609992	Identifier	hc		5609733	0					
ANR	5609993	Argument	"""io.cache"""		5609733	1					
ANR	5609994	PrimaryExpression	"""io.cache"""		5609733	0					
ANR	5609995	Argument	NULL		5609733	2					
ANR	5609996	Identifier	NULL		5609733	0					
ANR	5609997	IfStatement	if ( ! fcn )		5609733	17					
ANR	5609998	Condition	! fcn	197:5:6696:6699	5609733	0	True				
ANR	5609999	UnaryOperationExpression	! fcn		5609733	0					
ANR	5610000	UnaryOperator	!		5609733	0					
ANR	5610001	Identifier	fcn		5609733	1					
ANR	5610002	CompoundStatement		29:11:1049:1049	5609733	1					
ANR	5610003	Statement	eprintf	198:2:6706:6712	5609733	0	True				
ANR	5610004	Statement	(	198:10:6714:6714	5609733	1	True				
ANR	5610005	Statement	"""Cannot find function in 0x%08"""	198:11:6715:6745	5609733	2	True				
ANR	5610006	Statement	PFMT64x	198:42:6746:6752	5609733	3	True				
ANR	5610007	Statement	"""\\n"""	198:49:6753:6756	5609733	4	True				
ANR	5610008	Statement	","	198:53:6757:6757	5609733	5	True				
ANR	5610009	Statement	core	198:55:6759:6762	5609733	6	True				
ANR	5610010	Statement	->	198:59:6763:6764	5609733	7	True				
ANR	5610011	Statement	offset	198:61:6765:6770	5609733	8	True				
ANR	5610012	Statement	)	198:67:6771:6771	5609733	9	True				
ANR	5610013	ExpressionStatement		198:68:6772:6772	5609733	10	True				
ANR	5610014	ExpressionStatement	r_config_hold_free ( hc )	199:2:6776:6799	5609733	11	True				
ANR	5610015	CallExpression	r_config_hold_free ( hc )		5609733	0					
ANR	5610016	Callee	r_config_hold_free		5609733	0					
ANR	5610017	Identifier	r_config_hold_free		5609733	0					
ANR	5610018	ArgumentList	hc		5609733	1					
ANR	5610019	Argument	hc		5609733	0					
ANR	5610020	Identifier	hc		5609733	0					
ANR	5610021	ReturnStatement	return false ;	200:2:6803:6815	5609733	12	True				
ANR	5610022	Identifier	false		5609733	0					
ANR	5610023	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"	202:1:6821:6866	5609733	18	True				
ANR	5610024	CallExpression	"r_config_set_i ( core -> config , ""scr.color"" , 0 )"		5609733	0					
ANR	5610025	Callee	r_config_set_i		5609733	0					
ANR	5610026	Identifier	r_config_set_i		5609733	0					
ANR	5610027	ArgumentList	core -> config		5609733	1					
ANR	5610028	Argument	core -> config		5609733	0					
ANR	5610029	PtrMemberAccess	core -> config		5609733	0					
ANR	5610030	Identifier	core		5609733	0					
ANR	5610031	Identifier	config		5609733	1					
ANR	5610032	Argument	"""scr.color"""		5609733	1					
ANR	5610033	PrimaryExpression	"""scr.color"""		5609733	0					
ANR	5610034	Argument	0		5609733	2					
ANR	5610035	PrimaryExpression	0		5609733	0					
ANR	5610036	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.stackptr"" , 0 )"	203:1:6869:6917	5609733	19	True				
ANR	5610037	CallExpression	"r_config_set_i ( core -> config , ""asm.stackptr"" , 0 )"		5609733	0					
ANR	5610038	Callee	r_config_set_i		5609733	0					
ANR	5610039	Identifier	r_config_set_i		5609733	0					
ANR	5610040	ArgumentList	core -> config		5609733	1					
ANR	5610041	Argument	core -> config		5609733	0					
ANR	5610042	PtrMemberAccess	core -> config		5609733	0					
ANR	5610043	Identifier	core		5609733	0					
ANR	5610044	Identifier	config		5609733	1					
ANR	5610045	Argument	"""asm.stackptr"""		5609733	1					
ANR	5610046	PrimaryExpression	"""asm.stackptr"""		5609733	0					
ANR	5610047	Argument	0		5609733	2					
ANR	5610048	PrimaryExpression	0		5609733	0					
ANR	5610049	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.pseudo"" , 1 )"	204:1:6920:6966	5609733	20	True				
ANR	5610050	CallExpression	"r_config_set_i ( core -> config , ""asm.pseudo"" , 1 )"		5609733	0					
ANR	5610051	Callee	r_config_set_i		5609733	0					
ANR	5610052	Identifier	r_config_set_i		5609733	0					
ANR	5610053	ArgumentList	core -> config		5609733	1					
ANR	5610054	Argument	core -> config		5609733	0					
ANR	5610055	PtrMemberAccess	core -> config		5609733	0					
ANR	5610056	Identifier	core		5609733	0					
ANR	5610057	Identifier	config		5609733	1					
ANR	5610058	Argument	"""asm.pseudo"""		5609733	1					
ANR	5610059	PrimaryExpression	"""asm.pseudo"""		5609733	0					
ANR	5610060	Argument	1		5609733	2					
ANR	5610061	PrimaryExpression	1		5609733	0					
ANR	5610062	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.decode"" , 0 )"	205:1:6969:7015	5609733	21	True				
ANR	5610063	CallExpression	"r_config_set_i ( core -> config , ""asm.decode"" , 0 )"		5609733	0					
ANR	5610064	Callee	r_config_set_i		5609733	0					
ANR	5610065	Identifier	r_config_set_i		5609733	0					
ANR	5610066	ArgumentList	core -> config		5609733	1					
ANR	5610067	Argument	core -> config		5609733	0					
ANR	5610068	PtrMemberAccess	core -> config		5609733	0					
ANR	5610069	Identifier	core		5609733	0					
ANR	5610070	Identifier	config		5609733	1					
ANR	5610071	Argument	"""asm.decode"""		5609733	1					
ANR	5610072	PrimaryExpression	"""asm.decode"""		5609733	0					
ANR	5610073	Argument	0		5609733	2					
ANR	5610074	PrimaryExpression	0		5609733	0					
ANR	5610075	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.filter"" , 1 )"	206:1:7018:7064	5609733	22	True				
ANR	5610076	CallExpression	"r_config_set_i ( core -> config , ""asm.filter"" , 1 )"		5609733	0					
ANR	5610077	Callee	r_config_set_i		5609733	0					
ANR	5610078	Identifier	r_config_set_i		5609733	0					
ANR	5610079	ArgumentList	core -> config		5609733	1					
ANR	5610080	Argument	core -> config		5609733	0					
ANR	5610081	PtrMemberAccess	core -> config		5609733	0					
ANR	5610082	Identifier	core		5609733	0					
ANR	5610083	Identifier	config		5609733	1					
ANR	5610084	Argument	"""asm.filter"""		5609733	1					
ANR	5610085	PrimaryExpression	"""asm.filter"""		5609733	0					
ANR	5610086	Argument	1		5609733	2					
ANR	5610087	PrimaryExpression	1		5609733	0					
ANR	5610088	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"	207:1:7067:7112	5609733	23	True				
ANR	5610089	CallExpression	"r_config_set_i ( core -> config , ""asm.lines"" , 0 )"		5609733	0					
ANR	5610090	Callee	r_config_set_i		5609733	0					
ANR	5610091	Identifier	r_config_set_i		5609733	0					
ANR	5610092	ArgumentList	core -> config		5609733	1					
ANR	5610093	Argument	core -> config		5609733	0					
ANR	5610094	PtrMemberAccess	core -> config		5609733	0					
ANR	5610095	Identifier	core		5609733	0					
ANR	5610096	Identifier	config		5609733	1					
ANR	5610097	Argument	"""asm.lines"""		5609733	1					
ANR	5610098	PrimaryExpression	"""asm.lines"""		5609733	0					
ANR	5610099	Argument	0		5609733	2					
ANR	5610100	PrimaryExpression	0		5609733	0					
ANR	5610101	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"	208:1:7115:7160	5609733	24	True				
ANR	5610102	CallExpression	"r_config_set_i ( core -> config , ""asm.bytes"" , 0 )"		5609733	0					
ANR	5610103	Callee	r_config_set_i		5609733	0					
ANR	5610104	Identifier	r_config_set_i		5609733	0					
ANR	5610105	ArgumentList	core -> config		5609733	1					
ANR	5610106	Argument	core -> config		5609733	0					
ANR	5610107	PtrMemberAccess	core -> config		5609733	0					
ANR	5610108	Identifier	core		5609733	0					
ANR	5610109	Identifier	config		5609733	1					
ANR	5610110	Argument	"""asm.bytes"""		5609733	1					
ANR	5610111	PrimaryExpression	"""asm.bytes"""		5609733	0					
ANR	5610112	Argument	0		5609733	2					
ANR	5610113	PrimaryExpression	0		5609733	0					
ANR	5610114	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"	209:1:7163:7209	5609733	25	True				
ANR	5610115	CallExpression	"r_config_set_i ( core -> config , ""asm.offset"" , 0 )"		5609733	0					
ANR	5610116	Callee	r_config_set_i		5609733	0					
ANR	5610117	Identifier	r_config_set_i		5609733	0					
ANR	5610118	ArgumentList	core -> config		5609733	1					
ANR	5610119	Argument	core -> config		5609733	0					
ANR	5610120	PtrMemberAccess	core -> config		5609733	0					
ANR	5610121	Identifier	core		5609733	0					
ANR	5610122	Identifier	config		5609733	1					
ANR	5610123	Argument	"""asm.offset"""		5609733	1					
ANR	5610124	PrimaryExpression	"""asm.offset"""		5609733	0					
ANR	5610125	Argument	0		5609733	2					
ANR	5610126	PrimaryExpression	0		5609733	0					
ANR	5610127	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.flags"" , 0 )"	210:1:7212:7257	5609733	26	True				
ANR	5610128	CallExpression	"r_config_set_i ( core -> config , ""asm.flags"" , 0 )"		5609733	0					
ANR	5610129	Callee	r_config_set_i		5609733	0					
ANR	5610130	Identifier	r_config_set_i		5609733	0					
ANR	5610131	ArgumentList	core -> config		5609733	1					
ANR	5610132	Argument	core -> config		5609733	0					
ANR	5610133	PtrMemberAccess	core -> config		5609733	0					
ANR	5610134	Identifier	core		5609733	0					
ANR	5610135	Identifier	config		5609733	1					
ANR	5610136	Argument	"""asm.flags"""		5609733	1					
ANR	5610137	PrimaryExpression	"""asm.flags"""		5609733	0					
ANR	5610138	Argument	0		5609733	2					
ANR	5610139	PrimaryExpression	0		5609733	0					
ANR	5610140	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.emu"" , 1 )"	211:1:7260:7303	5609733	27	True				
ANR	5610141	CallExpression	"r_config_set_i ( core -> config , ""asm.emu"" , 1 )"		5609733	0					
ANR	5610142	Callee	r_config_set_i		5609733	0					
ANR	5610143	Identifier	r_config_set_i		5609733	0					
ANR	5610144	ArgumentList	core -> config		5609733	1					
ANR	5610145	Argument	core -> config		5609733	0					
ANR	5610146	PtrMemberAccess	core -> config		5609733	0					
ANR	5610147	Identifier	core		5609733	0					
ANR	5610148	Identifier	config		5609733	1					
ANR	5610149	Argument	"""asm.emu"""		5609733	1					
ANR	5610150	PrimaryExpression	"""asm.emu"""		5609733	0					
ANR	5610151	Argument	1		5609733	2					
ANR	5610152	PrimaryExpression	1		5609733	0					
ANR	5610153	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.str"" , 1 )"	212:1:7306:7349	5609733	28	True				
ANR	5610154	CallExpression	"r_config_set_i ( core -> config , ""emu.str"" , 1 )"		5609733	0					
ANR	5610155	Callee	r_config_set_i		5609733	0					
ANR	5610156	Identifier	r_config_set_i		5609733	0					
ANR	5610157	ArgumentList	core -> config		5609733	1					
ANR	5610158	Argument	core -> config		5609733	0					
ANR	5610159	PtrMemberAccess	core -> config		5609733	0					
ANR	5610160	Identifier	core		5609733	0					
ANR	5610161	Identifier	config		5609733	1					
ANR	5610162	Argument	"""emu.str"""		5609733	1					
ANR	5610163	PrimaryExpression	"""emu.str"""		5609733	0					
ANR	5610164	Argument	1		5609733	2					
ANR	5610165	PrimaryExpression	1		5609733	0					
ANR	5610166	ExpressionStatement	"r_config_set_i ( core -> config , ""emu.write"" , 1 )"	213:1:7352:7397	5609733	29	True				
ANR	5610167	CallExpression	"r_config_set_i ( core -> config , ""emu.write"" , 1 )"		5609733	0					
ANR	5610168	Callee	r_config_set_i		5609733	0					
ANR	5610169	Identifier	r_config_set_i		5609733	0					
ANR	5610170	ArgumentList	core -> config		5609733	1					
ANR	5610171	Argument	core -> config		5609733	0					
ANR	5610172	PtrMemberAccess	core -> config		5609733	0					
ANR	5610173	Identifier	core		5609733	0					
ANR	5610174	Identifier	config		5609733	1					
ANR	5610175	Argument	"""emu.write"""		5609733	1					
ANR	5610176	PrimaryExpression	"""emu.write"""		5609733	0					
ANR	5610177	Argument	1		5609733	2					
ANR	5610178	PrimaryExpression	1		5609733	0					
ANR	5610179	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"	214:1:7400:7449	5609733	30	True				
ANR	5610180	CallExpression	"r_config_set_i ( core -> config , ""asm.lines.fcn"" , 0 )"		5609733	0					
ANR	5610181	Callee	r_config_set_i		5609733	0					
ANR	5610182	Identifier	r_config_set_i		5609733	0					
ANR	5610183	ArgumentList	core -> config		5609733	1					
ANR	5610184	Argument	core -> config		5609733	0					
ANR	5610185	PtrMemberAccess	core -> config		5609733	0					
ANR	5610186	Identifier	core		5609733	0					
ANR	5610187	Identifier	config		5609733	1					
ANR	5610188	Argument	"""asm.lines.fcn"""		5609733	1					
ANR	5610189	PrimaryExpression	"""asm.lines.fcn"""		5609733	0					
ANR	5610190	Argument	0		5609733	2					
ANR	5610191	PrimaryExpression	0		5609733	0					
ANR	5610192	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.comments"" , 1 )"	215:1:7452:7500	5609733	31	True				
ANR	5610193	CallExpression	"r_config_set_i ( core -> config , ""asm.comments"" , 1 )"		5609733	0					
ANR	5610194	Callee	r_config_set_i		5609733	0					
ANR	5610195	Identifier	r_config_set_i		5609733	0					
ANR	5610196	ArgumentList	core -> config		5609733	1					
ANR	5610197	Argument	core -> config		5609733	0					
ANR	5610198	PtrMemberAccess	core -> config		5609733	0					
ANR	5610199	Identifier	core		5609733	0					
ANR	5610200	Identifier	config		5609733	1					
ANR	5610201	Argument	"""asm.comments"""		5609733	1					
ANR	5610202	PrimaryExpression	"""asm.comments"""		5609733	0					
ANR	5610203	Argument	1		5609733	2					
ANR	5610204	PrimaryExpression	1		5609733	0					
ANR	5610205	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.functions"" , 0 )"	216:1:7503:7552	5609733	32	True				
ANR	5610206	CallExpression	"r_config_set_i ( core -> config , ""asm.functions"" , 0 )"		5609733	0					
ANR	5610207	Callee	r_config_set_i		5609733	0					
ANR	5610208	Identifier	r_config_set_i		5609733	0					
ANR	5610209	ArgumentList	core -> config		5609733	1					
ANR	5610210	Argument	core -> config		5609733	0					
ANR	5610211	PtrMemberAccess	core -> config		5609733	0					
ANR	5610212	Identifier	core		5609733	0					
ANR	5610213	Identifier	config		5609733	1					
ANR	5610214	Argument	"""asm.functions"""		5609733	1					
ANR	5610215	PrimaryExpression	"""asm.functions"""		5609733	0					
ANR	5610216	Argument	0		5609733	2					
ANR	5610217	PrimaryExpression	0		5609733	0					
ANR	5610218	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"	217:1:7555:7599	5609733	33	True				
ANR	5610219	CallExpression	"r_config_set_i ( core -> config , ""asm.tabs"" , 0 )"		5609733	0					
ANR	5610220	Callee	r_config_set_i		5609733	0					
ANR	5610221	Identifier	r_config_set_i		5609733	0					
ANR	5610222	ArgumentList	core -> config		5609733	1					
ANR	5610223	Argument	core -> config		5609733	0					
ANR	5610224	PtrMemberAccess	core -> config		5609733	0					
ANR	5610225	Identifier	core		5609733	0					
ANR	5610226	Identifier	config		5609733	1					
ANR	5610227	Argument	"""asm.tabs"""		5609733	1					
ANR	5610228	PrimaryExpression	"""asm.tabs"""		5609733	0					
ANR	5610229	Argument	0		5609733	2					
ANR	5610230	PrimaryExpression	0		5609733	0					
ANR	5610231	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.section"" , 0 )"	218:1:7602:7649	5609733	34	True				
ANR	5610232	CallExpression	"r_config_set_i ( core -> config , ""asm.section"" , 0 )"		5609733	0					
ANR	5610233	Callee	r_config_set_i		5609733	0					
ANR	5610234	Identifier	r_config_set_i		5609733	0					
ANR	5610235	ArgumentList	core -> config		5609733	1					
ANR	5610236	Argument	core -> config		5609733	0					
ANR	5610237	PtrMemberAccess	core -> config		5609733	0					
ANR	5610238	Identifier	core		5609733	0					
ANR	5610239	Identifier	config		5609733	1					
ANR	5610240	Argument	"""asm.section"""		5609733	1					
ANR	5610241	PrimaryExpression	"""asm.section"""		5609733	0					
ANR	5610242	Argument	0		5609733	2					
ANR	5610243	PrimaryExpression	0		5609733	0					
ANR	5610244	ExpressionStatement	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 30 )"	219:1:7652:7700	5609733	35	True				
ANR	5610245	CallExpression	"r_config_set_i ( core -> config , ""asm.cmt.col"" , 30 )"		5609733	0					
ANR	5610246	Callee	r_config_set_i		5609733	0					
ANR	5610247	Identifier	r_config_set_i		5609733	0					
ANR	5610248	ArgumentList	core -> config		5609733	1					
ANR	5610249	Argument	core -> config		5609733	0					
ANR	5610250	PtrMemberAccess	core -> config		5609733	0					
ANR	5610251	Identifier	core		5609733	0					
ANR	5610252	Identifier	config		5609733	1					
ANR	5610253	Argument	"""asm.cmt.col"""		5609733	1					
ANR	5610254	PrimaryExpression	"""asm.cmt.col"""		5609733	0					
ANR	5610255	Argument	30		5609733	2					
ANR	5610256	PrimaryExpression	30		5609733	0					
ANR	5610257	ExpressionStatement	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"	220:1:7703:7747	5609733	36	True				
ANR	5610258	CallExpression	"r_config_set_i ( core -> config , ""io.cache"" , 1 )"		5609733	0					
ANR	5610259	Callee	r_config_set_i		5609733	0					
ANR	5610260	Identifier	r_config_set_i		5609733	0					
ANR	5610261	ArgumentList	core -> config		5609733	1					
ANR	5610262	Argument	core -> config		5609733	0					
ANR	5610263	PtrMemberAccess	core -> config		5609733	0					
ANR	5610264	Identifier	core		5609733	0					
ANR	5610265	Identifier	config		5609733	1					
ANR	5610266	Argument	"""io.cache"""		5609733	1					
ANR	5610267	PrimaryExpression	"""io.cache"""		5609733	0					
ANR	5610268	Argument	1		5609733	2					
ANR	5610269	PrimaryExpression	1		5609733	0					
ANR	5610270	ExpressionStatement	"r_core_cmd0 ( core , ""aeim"" )"	221:1:7750:7776	5609733	37	True				
ANR	5610271	CallExpression	"r_core_cmd0 ( core , ""aeim"" )"		5609733	0					
ANR	5610272	Callee	r_core_cmd0		5609733	0					
ANR	5610273	Identifier	r_core_cmd0		5609733	0					
ANR	5610274	ArgumentList	core		5609733	1					
ANR	5610275	Argument	core		5609733	0					
ANR	5610276	Identifier	core		5609733	0					
ANR	5610277	Argument	"""aeim"""		5609733	1					
ANR	5610278	PrimaryExpression	"""aeim"""		5609733	0					
ANR	5610279	ExpressionStatement	db = sdb_new0 ( )	223:1:7780:7796	5609733	38	True				
ANR	5610280	AssignmentExpression	db = sdb_new0 ( )		5609733	0		=			
ANR	5610281	Identifier	db		5609733	0					
ANR	5610282	CallExpression	sdb_new0 ( )		5609733	1					
ANR	5610283	Callee	sdb_new0		5609733	0					
ANR	5610284	Identifier	sdb_new0		5609733	0					
ANR	5610285	ArgumentList			5609733	1					
ANR	5610286	IdentifierDeclStatement	RAnalBlock * bb = r_list_first ( fcn -> bbs ) ;	229:1:7930:7970	5609733	39	True				
ANR	5610287	IdentifierDecl	* bb = r_list_first ( fcn -> bbs )		5609733	0					
ANR	5610288	IdentifierDeclType	RAnalBlock *		5609733	0					
ANR	5610289	Identifier	bb		5609733	1					
ANR	5610290	AssignmentExpression	* bb = r_list_first ( fcn -> bbs )		5609733	2		=			
ANR	5610291	Identifier	bb		5609733	0					
ANR	5610292	CallExpression	r_list_first ( fcn -> bbs )		5609733	1					
ANR	5610293	Callee	r_list_first		5609733	0					
ANR	5610294	Identifier	r_list_first		5609733	0					
ANR	5610295	ArgumentList	fcn -> bbs		5609733	1					
ANR	5610296	Argument	fcn -> bbs		5609733	0					
ANR	5610297	PtrMemberAccess	fcn -> bbs		5609733	0					
ANR	5610298	Identifier	fcn		5609733	0					
ANR	5610299	Identifier	bbs		5609733	1					
ANR	5610300	IdentifierDeclStatement	char indentstr [ 1024 ] = { 0 } ;	230:1:7973:7999	5609733	40	True				
ANR	5610301	IdentifierDecl	indentstr [ 1024 ] = { 0 }		5609733	0					
ANR	5610302	IdentifierDeclType	char [ 1024 ]		5609733	0					
ANR	5610303	Identifier	indentstr		5609733	1					
ANR	5610304	PrimaryExpression	1024		5609733	2					
ANR	5610305	AssignmentExpression	indentstr [ 1024 ] = { 0 }		5609733	3		=			
ANR	5610306	Identifier	indentstr		5609733	0					
ANR	5610307	InitializerList	0		5609733	1					
ANR	5610308	PrimaryExpression	0		5609733	0					
ANR	5610309	IdentifierDeclStatement	int n_bb = r_list_length ( fcn -> bbs ) ;	231:1:8002:8037	5609733	41	True				
ANR	5610310	IdentifierDecl	n_bb = r_list_length ( fcn -> bbs )		5609733	0					
ANR	5610311	IdentifierDeclType	int		5609733	0					
ANR	5610312	Identifier	n_bb		5609733	1					
ANR	5610313	AssignmentExpression	n_bb = r_list_length ( fcn -> bbs )		5609733	2		=			
ANR	5610314	Identifier	n_bb		5609733	0					
ANR	5610315	CallExpression	r_list_length ( fcn -> bbs )		5609733	1					
ANR	5610316	Callee	r_list_length		5609733	0					
ANR	5610317	Identifier	r_list_length		5609733	0					
ANR	5610318	ArgumentList	fcn -> bbs		5609733	1					
ANR	5610319	Argument	fcn -> bbs		5609733	0					
ANR	5610320	PtrMemberAccess	fcn -> bbs		5609733	0					
ANR	5610321	Identifier	fcn		5609733	0					
ANR	5610322	Identifier	bbs		5609733	1					
ANR	5610323	ExpressionStatement	"r_cons_printf ( ""function %s () {"" , fcn -> name )"	232:1:8040:8085	5609733	42	True				
ANR	5610324	CallExpression	"r_cons_printf ( ""function %s () {"" , fcn -> name )"		5609733	0					
ANR	5610325	Callee	r_cons_printf		5609733	0					
ANR	5610326	Identifier	r_cons_printf		5609733	0					
ANR	5610327	ArgumentList	"""function %s () {"""		5609733	1					
ANR	5610328	Argument	"""function %s () {"""		5609733	0					
ANR	5610329	PrimaryExpression	"""function %s () {"""		5609733	0					
ANR	5610330	Argument	fcn -> name		5609733	1					
ANR	5610331	PtrMemberAccess	fcn -> name		5609733	0					
ANR	5610332	Identifier	fcn		5609733	0					
ANR	5610333	Identifier	name		5609733	1					
ANR	5610334	IdentifierDeclStatement	int indent = 1 ;	233:1:8088:8102	5609733	43	True				
ANR	5610335	IdentifierDecl	indent = 1		5609733	0					
ANR	5610336	IdentifierDeclType	int		5609733	0					
ANR	5610337	Identifier	indent		5609733	1					
ANR	5610338	AssignmentExpression	indent = 1		5609733	2		=			
ANR	5610339	Identifier	indent		5609733	0					
ANR	5610340	PrimaryExpression	1		5609733	1					
ANR	5610341	IdentifierDeclStatement	int nindent = 1 ;	234:1:8105:8120	5609733	44	True				
ANR	5610342	IdentifierDecl	nindent = 1		5609733	0					
ANR	5610343	IdentifierDeclType	int		5609733	0					
ANR	5610344	Identifier	nindent		5609733	1					
ANR	5610345	AssignmentExpression	nindent = 1		5609733	2		=			
ANR	5610346	Identifier	nindent		5609733	0					
ANR	5610347	PrimaryExpression	1		5609733	1					
ANR	5610348	IdentifierDeclStatement	RList * visited = r_list_newf ( NULL ) ;	235:1:8123:8158	5609733	45	True				
ANR	5610349	IdentifierDecl	* visited = r_list_newf ( NULL )		5609733	0					
ANR	5610350	IdentifierDeclType	RList *		5609733	0					
ANR	5610351	Identifier	visited		5609733	1					
ANR	5610352	AssignmentExpression	* visited = r_list_newf ( NULL )		5609733	2		=			
ANR	5610353	Identifier	visited		5609733	0					
ANR	5610354	CallExpression	r_list_newf ( NULL )		5609733	1					
ANR	5610355	Callee	r_list_newf		5609733	0					
ANR	5610356	Identifier	r_list_newf		5609733	0					
ANR	5610357	ArgumentList	NULL		5609733	1					
ANR	5610358	Argument	NULL		5609733	0					
ANR	5610359	Identifier	NULL		5609733	0					
ANR	5610360	ExpressionStatement	"r_cons_printf ( ""\\n    //  %d basic blocks\\n"" , n_bb )"	236:1:8161:8212	5609733	46	True				
ANR	5610361	CallExpression	"r_cons_printf ( ""\\n    //  %d basic blocks\\n"" , n_bb )"		5609733	0					
ANR	5610362	Callee	r_cons_printf		5609733	0					
ANR	5610363	Identifier	r_cons_printf		5609733	0					
ANR	5610364	ArgumentList	"""\\n    //  %d basic blocks\\n"""		5609733	1					
ANR	5610365	Argument	"""\\n    //  %d basic blocks\\n"""		5609733	0					
ANR	5610366	PrimaryExpression	"""\\n    //  %d basic blocks\\n"""		5609733	0					
ANR	5610367	Argument	n_bb		5609733	1					
ANR	5610368	Identifier	n_bb		5609733	0					
ANR	5610369	DoStatement	do		5609733	47					
ANR	5610370	CompoundStatement		94:2:3406:3429	5609733	0					
ANR	5610371	Statement	define	238:1:8221:8226	5609733	0	True				
ANR	5610372	Statement	I_TAB	238:8:8228:8232	5609733	1	True				
ANR	5610373	Statement	4	238:14:8234:8234	5609733	2	True				
ANR	5610374	Statement	define	239:1:8237:8242	5609733	3	True				
ANR	5610375	Statement	K_MARK	239:8:8244:8249	5609733	4	True				
ANR	5610376	Statement	(	239:14:8250:8250	5609733	5	True				
ANR	5610377	Statement	x	239:15:8251:8251	5609733	6	True				
ANR	5610378	Statement	)	239:16:8252:8252	5609733	7	True				
ANR	5610379	Statement	sdb_fmt	239:18:8254:8260	5609733	8	True				
ANR	5610380	Statement	(	239:25:8261:8261	5609733	9	True				
ANR	5610381	Statement	"""mark.%"""	239:26:8262:8269	5609733	10	True				
ANR	5610382	Statement	PFMT64x	239:34:8270:8276	5609733	11	True				
ANR	5610383	Statement	","	239:41:8277:8277	5609733	12	True				
ANR	5610384	Statement	x	239:42:8278:8278	5609733	13	True				
ANR	5610385	Statement	)	239:43:8279:8279	5609733	14	True				
ANR	5610386	Statement	define	240:1:8282:8287	5609733	15	True				
ANR	5610387	Statement	K_ELSE	240:8:8289:8294	5609733	16	True				
ANR	5610388	Statement	(	240:14:8295:8295	5609733	17	True				
ANR	5610389	Statement	x	240:15:8296:8296	5609733	18	True				
ANR	5610390	Statement	)	240:16:8297:8297	5609733	19	True				
ANR	5610391	Statement	sdb_fmt	240:18:8299:8305	5609733	20	True				
ANR	5610392	Statement	(	240:25:8306:8306	5609733	21	True				
ANR	5610393	Statement	"""else.%"""	240:26:8307:8314	5609733	22	True				
ANR	5610394	Statement	PFMT64x	240:34:8315:8321	5609733	23	True				
ANR	5610395	Statement	","	240:41:8322:8322	5609733	24	True				
ANR	5610396	Statement	x	240:42:8323:8323	5609733	25	True				
ANR	5610397	Statement	)	240:43:8324:8324	5609733	26	True				
ANR	5610398	Statement	define	241:1:8327:8332	5609733	27	True				
ANR	5610399	Statement	K_INDENT	241:8:8334:8341	5609733	28	True				
ANR	5610400	Statement	(	241:16:8342:8342	5609733	29	True				
ANR	5610401	Statement	x	241:17:8343:8343	5609733	30	True				
ANR	5610402	Statement	)	241:18:8344:8344	5609733	31	True				
ANR	5610403	Statement	sdb_fmt	241:20:8346:8352	5609733	32	True				
ANR	5610404	Statement	(	241:27:8353:8353	5609733	33	True				
ANR	5610405	Statement	"""loc.%"""	241:28:8354:8360	5609733	34	True				
ANR	5610406	Statement	PFMT64x	241:35:8361:8367	5609733	35	True				
ANR	5610407	Statement	","	241:42:8368:8368	5609733	36	True				
ANR	5610408	Statement	x	241:43:8369:8369	5609733	37	True				
ANR	5610409	Statement	)	241:44:8370:8370	5609733	38	True				
ANR	5610410	Statement	define	242:1:8373:8378	5609733	39	True				
ANR	5610411	Statement	SET_INDENT	242:8:8380:8389	5609733	40	True				
ANR	5610412	Statement	(	242:18:8390:8390	5609733	41	True				
ANR	5610413	Statement	x	242:19:8391:8391	5609733	42	True				
ANR	5610414	Statement	)	242:20:8392:8392	5609733	43	True				
ANR	5610415	CompoundStatement		74:22:2741:2741	5609733	44					
ANR	5610416	ExpressionStatement	( x ) = ( x ) > 0 ? ( x ) : 1	242:24:8396:8413	5609733	0	True				
ANR	5610417	AssignmentExpression	( x ) = ( x ) > 0 ? ( x ) : 1		5609733	0		=			
ANR	5610418	Identifier	x		5609733	0					
ANR	5610419	ConditionalExpression	( x ) > 0 ? ( x ) : 1		5609733	1					
ANR	5610420	Condition	( x ) > 0		5609733	0					
ANR	5610421	RelationalExpression	( x ) > 0		5609733	0		>			
ANR	5610422	Identifier	x		5609733	0					
ANR	5610423	PrimaryExpression	0		5609733	1					
ANR	5610424	Identifier	x		5609733	1					
ANR	5610425	PrimaryExpression	1		5609733	2					
ANR	5610426	ExpressionStatement	"memset ( indentstr , ' ' , ( x ) * I_TAB )"	242:43:8415:8449	5609733	1	True				
ANR	5610427	CallExpression	"memset ( indentstr , ' ' , ( x ) * I_TAB )"		5609733	0					
ANR	5610428	Callee	memset		5609733	0					
ANR	5610429	Identifier	memset		5609733	0					
ANR	5610430	ArgumentList	indentstr		5609733	1					
ANR	5610431	Argument	indentstr		5609733	0					
ANR	5610432	Identifier	indentstr		5609733	0					
ANR	5610433	Argument	' '		5609733	1					
ANR	5610434	PrimaryExpression	' '		5609733	0					
ANR	5610435	Argument	( x ) * I_TAB		5609733	2					
ANR	5610436	CastExpression	( x ) * I_TAB		5609733	0					
ANR	5610437	CastTarget	x		5609733	0					
ANR	5610438	UnaryOperationExpression	* I_TAB		5609733	1					
ANR	5610439	UnaryOperator	*		5609733	0					
ANR	5610440	Identifier	I_TAB		5609733	1					
ANR	5610441	ExpressionStatement	indentstr [ ( ( x ) * I_TAB ) - 2 ] = 0	242:79:8451:8480	5609733	2	True				
ANR	5610442	AssignmentExpression	indentstr [ ( ( x ) * I_TAB ) - 2 ] = 0		5609733	0		=			
ANR	5610443	ArrayIndexing	indentstr [ ( ( x ) * I_TAB ) - 2 ]		5609733	0					
ANR	5610444	Identifier	indentstr		5609733	0					
ANR	5610445	AdditiveExpression	( ( x ) * I_TAB ) - 2		5609733	1		-			
ANR	5610446	CastExpression	( x ) * I_TAB		5609733	0					
ANR	5610447	CastTarget	x		5609733	0					
ANR	5610448	UnaryOperationExpression	* I_TAB		5609733	1					
ANR	5610449	UnaryOperator	*		5609733	0					
ANR	5610450	Identifier	I_TAB		5609733	1					
ANR	5610451	PrimaryExpression	2		5609733	1					
ANR	5610452	PrimaryExpression	0		5609733	1					
ANR	5610453	IfStatement	if ( ! bb )		5609733	45					
ANR	5610454	Condition	! bb	243:6:8490:8492	5609733	0	True				
ANR	5610455	UnaryOperationExpression	! bb		5609733	0					
ANR	5610456	UnaryOperator	!		5609733	0					
ANR	5610457	Identifier	bb		5609733	1					
ANR	5610458	CompoundStatement		75:11:2842:2842	5609733	1					
ANR	5610459	BreakStatement	break ;	244:3:8500:8505	5609733	0	True				
ANR	5610460	ExpressionStatement	"r_list_append ( visited , bb )"	246:2:8513:8540	5609733	46	True				
ANR	5610461	CallExpression	"r_list_append ( visited , bb )"		5609733	0					
ANR	5610462	Callee	r_list_append		5609733	0					
ANR	5610463	Identifier	r_list_append		5609733	0					
ANR	5610464	ArgumentList	visited		5609733	1					
ANR	5610465	Argument	visited		5609733	0					
ANR	5610466	Identifier	visited		5609733	0					
ANR	5610467	Argument	bb		5609733	1					
ANR	5610468	Identifier	bb		5609733	0					
ANR	5610469	ExpressionStatement	r_cons_push ( )	247:2:8544:8558	5609733	47	True				
ANR	5610470	CallExpression	r_cons_push ( )		5609733	0					
ANR	5610471	Callee	r_cons_push		5609733	0					
ANR	5610472	Identifier	r_cons_push		5609733	0					
ANR	5610473	ArgumentList			5609733	1					
ANR	5610474	IdentifierDeclStatement	"bool html = r_config_get_i ( core -> config , ""scr.html"" ) ;"	248:2:8562:8615	5609733	48	True				
ANR	5610475	IdentifierDecl	"html = r_config_get_i ( core -> config , ""scr.html"" )"		5609733	0					
ANR	5610476	IdentifierDeclType	bool		5609733	0					
ANR	5610477	Identifier	html		5609733	1					
ANR	5610478	AssignmentExpression	"html = r_config_get_i ( core -> config , ""scr.html"" )"		5609733	2		=			
ANR	5610479	Identifier	html		5609733	0					
ANR	5610480	CallExpression	"r_config_get_i ( core -> config , ""scr.html"" )"		5609733	1					
ANR	5610481	Callee	r_config_get_i		5609733	0					
ANR	5610482	Identifier	r_config_get_i		5609733	0					
ANR	5610483	ArgumentList	core -> config		5609733	1					
ANR	5610484	Argument	core -> config		5609733	0					
ANR	5610485	PtrMemberAccess	core -> config		5609733	0					
ANR	5610486	Identifier	core		5609733	0					
ANR	5610487	Identifier	config		5609733	1					
ANR	5610488	Argument	"""scr.html"""		5609733	1					
ANR	5610489	PrimaryExpression	"""scr.html"""		5609733	0					
ANR	5610490	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"	249:2:8619:8663	5609733	49	True				
ANR	5610491	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , 0 )"		5609733	0					
ANR	5610492	Callee	r_config_set_i		5609733	0					
ANR	5610493	Identifier	r_config_set_i		5609733	0					
ANR	5610494	ArgumentList	core -> config		5609733	1					
ANR	5610495	Argument	core -> config		5609733	0					
ANR	5610496	PtrMemberAccess	core -> config		5609733	0					
ANR	5610497	Identifier	core		5609733	0					
ANR	5610498	Identifier	config		5609733	1					
ANR	5610499	Argument	"""scr.html"""		5609733	1					
ANR	5610500	PrimaryExpression	"""scr.html"""		5609733	0					
ANR	5610501	Argument	0		5609733	2					
ANR	5610502	PrimaryExpression	0		5609733	0					
ANR	5610503	Statement	char	250:2:8667:8670	5609733	50	True				
ANR	5610504	Statement	*	250:7:8672:8672	5609733	51	True				
ANR	5610505	Statement	code	250:8:8673:8676	5609733	52	True				
ANR	5610506	Statement	=	250:13:8678:8678	5609733	53	True				
ANR	5610507	Statement	r_core_cmd_str	250:15:8680:8693	5609733	54	True				
ANR	5610508	Statement	(	250:30:8695:8695	5609733	55	True				
ANR	5610509	Statement	core	250:31:8696:8699	5609733	56	True				
ANR	5610510	Statement	","	250:35:8700:8700	5609733	57	True				
ANR	5610511	Statement	sdb_fmt	250:37:8702:8708	5609733	58	True				
ANR	5610512	Statement	(	250:45:8710:8710	5609733	59	True				
ANR	5610513	Statement	"""pD %d @ 0x%08"""	250:46:8711:8725	5609733	60	True				
ANR	5610514	Statement	PFMT64x	250:61:8726:8732	5609733	61	True				
ANR	5610515	Statement	"""\\n"""	250:68:8733:8736	5609733	62	True				
ANR	5610516	Statement	","	250:72:8737:8737	5609733	63	True				
ANR	5610517	Statement	bb	250:74:8739:8740	5609733	64	True				
ANR	5610518	Statement	->	250:76:8741:8742	5609733	65	True				
ANR	5610519	Statement	size	250:78:8743:8746	5609733	66	True				
ANR	5610520	Statement	","	250:82:8747:8747	5609733	67	True				
ANR	5610521	Statement	bb	250:84:8749:8750	5609733	68	True				
ANR	5610522	Statement	->	250:86:8751:8752	5609733	69	True				
ANR	5610523	Statement	addr	250:88:8753:8756	5609733	70	True				
ANR	5610524	Statement	)	250:92:8757:8757	5609733	71	True				
ANR	5610525	Statement	)	250:93:8758:8758	5609733	72	True				
ANR	5610526	ExpressionStatement		250:94:8759:8759	5609733	73	True				
ANR	5610527	ExpressionStatement	r_cons_pop ( )	251:2:8763:8776	5609733	74	True				
ANR	5610528	CallExpression	r_cons_pop ( )		5609733	0					
ANR	5610529	Callee	r_cons_pop		5609733	0					
ANR	5610530	Identifier	r_cons_pop		5609733	0					
ANR	5610531	ArgumentList			5609733	1					
ANR	5610532	ExpressionStatement	"r_config_set_i ( core -> config , ""scr.html"" , html )"	252:2:8780:8827	5609733	75	True				
ANR	5610533	CallExpression	"r_config_set_i ( core -> config , ""scr.html"" , html )"		5609733	0					
ANR	5610534	Callee	r_config_set_i		5609733	0					
ANR	5610535	Identifier	r_config_set_i		5609733	0					
ANR	5610536	ArgumentList	core -> config		5609733	1					
ANR	5610537	Argument	core -> config		5609733	0					
ANR	5610538	PtrMemberAccess	core -> config		5609733	0					
ANR	5610539	Identifier	core		5609733	0					
ANR	5610540	Identifier	config		5609733	1					
ANR	5610541	Argument	"""scr.html"""		5609733	1					
ANR	5610542	PrimaryExpression	"""scr.html"""		5609733	0					
ANR	5610543	Argument	html		5609733	2					
ANR	5610544	Identifier	html		5609733	0					
ANR	5610545	IfStatement	if ( indent * I_TAB + 2 >= sizeof ( indentstr ) )		5609733	76					
ANR	5610546	Condition	indent * I_TAB + 2 >= sizeof ( indentstr )	253:6:8835:8874	5609733	0	True				
ANR	5610547	RelationalExpression	indent * I_TAB + 2 >= sizeof ( indentstr )		5609733	0		>=			
ANR	5610548	AdditiveExpression	indent * I_TAB + 2		5609733	0		+			
ANR	5610549	MultiplicativeExpression	indent * I_TAB		5609733	0		*			
ANR	5610550	Identifier	indent		5609733	0					
ANR	5610551	Identifier	I_TAB		5609733	1					
ANR	5610552	PrimaryExpression	2		5609733	1					
ANR	5610553	SizeofExpression	sizeof ( indentstr )		5609733	1					
ANR	5610554	Sizeof	sizeof		5609733	0					
ANR	5610555	SizeofOperand	indentstr		5609733	1					
ANR	5610556	CompoundStatement		85:48:3224:3224	5609733	1					
ANR	5610557	ExpressionStatement	indent = ( sizeof ( indentstr ) / I_TAB ) - 4	254:3:8882:8923	5609733	0	True				
ANR	5610558	AssignmentExpression	indent = ( sizeof ( indentstr ) / I_TAB ) - 4		5609733	0		=			
ANR	5610559	Identifier	indent		5609733	0					
ANR	5610560	AdditiveExpression	( sizeof ( indentstr ) / I_TAB ) - 4		5609733	1		-			
ANR	5610561	MultiplicativeExpression	sizeof ( indentstr ) / I_TAB		5609733	0		/			
ANR	5610562	SizeofExpression	sizeof ( indentstr )		5609733	0					
ANR	5610563	Sizeof	sizeof		5609733	0					
ANR	5610564	SizeofOperand	indentstr		5609733	1					
ANR	5610565	Identifier	I_TAB		5609733	1					
ANR	5610566	PrimaryExpression	4		5609733	1					
ANR	5610567	ExpressionStatement	SET_INDENT ( indent )	256:2:8931:8950	5609733	77	True				
ANR	5610568	CallExpression	SET_INDENT ( indent )		5609733	0					
ANR	5610569	Callee	SET_INDENT		5609733	0					
ANR	5610570	Identifier	SET_INDENT		5609733	0					
ANR	5610571	ArgumentList	indent		5609733	1					
ANR	5610572	Argument	indent		5609733	0					
ANR	5610573	Identifier	indent		5609733	0					
ANR	5610574	ExpressionStatement	"code = r_str_prefix_all ( code , indentstr )"	257:2:8954:8995	5609733	78	True				
ANR	5610575	AssignmentExpression	"code = r_str_prefix_all ( code , indentstr )"		5609733	0		=			
ANR	5610576	Identifier	code		5609733	0					
ANR	5610577	CallExpression	"r_str_prefix_all ( code , indentstr )"		5609733	1					
ANR	5610578	Callee	r_str_prefix_all		5609733	0					
ANR	5610579	Identifier	r_str_prefix_all		5609733	0					
ANR	5610580	ArgumentList	code		5609733	1					
ANR	5610581	Argument	code		5609733	0					
ANR	5610582	Identifier	code		5609733	0					
ANR	5610583	Argument	indentstr		5609733	1					
ANR	5610584	Identifier	indentstr		5609733	0					
ANR	5610585	IfStatement	if ( ! code )		5609733	79					
ANR	5610586	Condition	! code	258:6:9003:9007	5609733	0	True				
ANR	5610587	UnaryOperationExpression	! code		5609733	0					
ANR	5610588	UnaryOperator	!		5609733	0					
ANR	5610589	Identifier	code		5609733	1					
ANR	5610590	CompoundStatement		90:13:3357:3357	5609733	1					
ANR	5610591	ExpressionStatement	"eprintf ( ""No code here\\n"" )"	259:3:9015:9041	5609733	0	True				
ANR	5610592	CallExpression	"eprintf ( ""No code here\\n"" )"		5609733	0					
ANR	5610593	Callee	eprintf		5609733	0					
ANR	5610594	Identifier	eprintf		5609733	0					
ANR	5610595	ArgumentList	"""No code here\\n"""		5609733	1					
ANR	5610596	Argument	"""No code here\\n"""		5609733	0					
ANR	5610597	PrimaryExpression	"""No code here\\n"""		5609733	0					
ANR	5610598	BreakStatement	break ;	260:3:9046:9051	5609733	1	True				
ANR	5610599	IdentifierDeclStatement	int len = strlen ( code ) ;	262:2:9059:9082	5609733	80	True				
ANR	5610600	IdentifierDecl	len = strlen ( code )		5609733	0					
ANR	5610601	IdentifierDeclType	int		5609733	0					
ANR	5610602	Identifier	len		5609733	1					
ANR	5610603	AssignmentExpression	len = strlen ( code )		5609733	2		=			
ANR	5610604	Identifier	len		5609733	0					
ANR	5610605	CallExpression	strlen ( code )		5609733	1					
ANR	5610606	Callee	strlen		5609733	0					
ANR	5610607	Identifier	strlen		5609733	0					
ANR	5610608	ArgumentList	code		5609733	1					
ANR	5610609	Argument	code		5609733	0					
ANR	5610610	Identifier	code		5609733	0					
ANR	5610611	ExpressionStatement	code [ len - 1 ] = 0	263:2:9086:9103	5609733	81	True				
ANR	5610612	AssignmentExpression	code [ len - 1 ] = 0		5609733	0		=			
ANR	5610613	ArrayIndexing	code [ len - 1 ]		5609733	0					
ANR	5610614	Identifier	code		5609733	0					
ANR	5610615	AdditiveExpression	len - 1		5609733	1		-			
ANR	5610616	Identifier	len		5609733	0					
ANR	5610617	PrimaryExpression	1		5609733	1					
ANR	5610618	PrimaryExpression	0		5609733	1					
ANR	5610619	ExpressionStatement	"find_and_change ( code , len )"	264:2:9128:9155	5609733	82	True				
ANR	5610620	CallExpression	"find_and_change ( code , len )"		5609733	0					
ANR	5610621	Callee	find_and_change		5609733	0					
ANR	5610622	Identifier	find_and_change		5609733	0					
ANR	5610623	ArgumentList	code		5609733	1					
ANR	5610624	Argument	code		5609733	0					
ANR	5610625	Identifier	code		5609733	0					
ANR	5610626	Argument	len		5609733	1					
ANR	5610627	Identifier	len		5609733	0					
ANR	5610628	IfStatement	"if ( ! sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 ) )"		5609733	83					
ANR	5610629	Condition	"! sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 )"	265:6:9163:9203	5609733	0	True				
ANR	5610630	UnaryOperationExpression	"! sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 )"		5609733	0					
ANR	5610631	UnaryOperator	!		5609733	0					
ANR	5610632	CallExpression	"sdb_const_get ( db , K_MARK ( bb -> addr ) , 0 )"		5609733	1					
ANR	5610633	Callee	sdb_const_get		5609733	0					
ANR	5610634	Identifier	sdb_const_get		5609733	0					
ANR	5610635	ArgumentList	db		5609733	1					
ANR	5610636	Argument	db		5609733	0					
ANR	5610637	Identifier	db		5609733	0					
ANR	5610638	Argument	K_MARK ( bb -> addr )		5609733	1					
ANR	5610639	CallExpression	K_MARK ( bb -> addr )		5609733	0					
ANR	5610640	Callee	K_MARK		5609733	0					
ANR	5610641	Identifier	K_MARK		5609733	0					
ANR	5610642	ArgumentList	bb -> addr		5609733	1					
ANR	5610643	Argument	bb -> addr		5609733	0					
ANR	5610644	PtrMemberAccess	bb -> addr		5609733	0					
ANR	5610645	Identifier	bb		5609733	0					
ANR	5610646	Identifier	addr		5609733	1					
ANR	5610647	Argument	0		5609733	2					
ANR	5610648	PrimaryExpression	0		5609733	0					
ANR	5610649	CompoundStatement		98:3:3558:3610	5609733	1					
ANR	5610650	IdentifierDeclStatement	bool mustprint = ! queuegoto || queuegoto != bb -> addr ;	266:3:9211:9263	5609733	0	True				
ANR	5610651	IdentifierDecl	mustprint = ! queuegoto || queuegoto != bb -> addr		5609733	0					
ANR	5610652	IdentifierDeclType	bool		5609733	0					
ANR	5610653	Identifier	mustprint		5609733	1					
ANR	5610654	AssignmentExpression	mustprint = ! queuegoto || queuegoto != bb -> addr		5609733	2		=			
ANR	5610655	Identifier	mustprint		5609733	0					
ANR	5610656	OrExpression	! queuegoto || queuegoto != bb -> addr		5609733	1		||			
ANR	5610657	UnaryOperationExpression	! queuegoto		5609733	0					
ANR	5610658	UnaryOperator	!		5609733	0					
ANR	5610659	Identifier	queuegoto		5609733	1					
ANR	5610660	EqualityExpression	queuegoto != bb -> addr		5609733	1		!=			
ANR	5610661	Identifier	queuegoto		5609733	0					
ANR	5610662	PtrMemberAccess	bb -> addr		5609733	1					
ANR	5610663	Identifier	bb		5609733	0					
ANR	5610664	Identifier	addr		5609733	1					
ANR	5610665	IfStatement	if ( mustprint )		5609733	1					
ANR	5610666	Condition	mustprint	267:7:9272:9280	5609733	0	True				
ANR	5610667	Identifier	mustprint		5609733	0					
ANR	5610668	CompoundStatement		99:18:3630:3630	5609733	1					
ANR	5610669	IfStatement	if ( queuegoto )		5609733	0					
ANR	5610670	Condition	queuegoto	268:8:9293:9301	5609733	0	True				
ANR	5610671	Identifier	queuegoto		5609733	0					
ANR	5610672	CompoundStatement		100:19:3651:3651	5609733	1					
ANR	5610673	ExpressionStatement	"r_cons_printf ( ""\\n%s  goto loc_0x%llx"" , indentstr , queuegoto )"	269:5:9311:9378	5609733	0	True				
ANR	5610674	CallExpression	"r_cons_printf ( ""\\n%s  goto loc_0x%llx"" , indentstr , queuegoto )"		5609733	0					
ANR	5610675	Callee	r_cons_printf		5609733	0					
ANR	5610676	Identifier	r_cons_printf		5609733	0					
ANR	5610677	ArgumentList	"""\\n%s  goto loc_0x%llx"""		5609733	1					
ANR	5610678	Argument	"""\\n%s  goto loc_0x%llx"""		5609733	0					
ANR	5610679	PrimaryExpression	"""\\n%s  goto loc_0x%llx"""		5609733	0					
ANR	5610680	Argument	indentstr		5609733	1					
ANR	5610681	Identifier	indentstr		5609733	0					
ANR	5610682	Argument	queuegoto		5609733	2					
ANR	5610683	Identifier	queuegoto		5609733	0					
ANR	5610684	Statement	queuegoto	271:5:9385:9393	5609733	1	True				
ANR	5610685	Statement	=	271:15:9395:9395	5609733	2	True				
ANR	5610686	Statement	0L	271:17:9397:9398	5609733	3	True				
ANR	5610687	ExpressionStatement	L	271:19:9399:9400	5609733	4	True				
ANR	5610688	Identifier	L		5609733	0					
ANR	5610689	ExpressionStatement	"r_cons_printf ( ""\\n%s  loc_0x%llx:\\n"" , indentstr , bb -> addr )"	273:4:9412:9470	5609733	1	True				
ANR	5610690	CallExpression	"r_cons_printf ( ""\\n%s  loc_0x%llx:\\n"" , indentstr , bb -> addr )"		5609733	0					
ANR	5610691	Callee	r_cons_printf		5609733	0					
ANR	5610692	Identifier	r_cons_printf		5609733	0					
ANR	5610693	ArgumentList	"""\\n%s  loc_0x%llx:\\n"""		5609733	1					
ANR	5610694	Argument	"""\\n%s  loc_0x%llx:\\n"""		5609733	0					
ANR	5610695	PrimaryExpression	"""\\n%s  loc_0x%llx:\\n"""		5609733	0					
ANR	5610696	Argument	indentstr		5609733	1					
ANR	5610697	Identifier	indentstr		5609733	0					
ANR	5610698	Argument	bb -> addr		5609733	2					
ANR	5610699	PtrMemberAccess	bb -> addr		5609733	0					
ANR	5610700	Identifier	bb		5609733	0					
ANR	5610701	Identifier	addr		5609733	1					
ANR	5610702	ExpressionStatement	indentstr [ ( indent * I_TAB ) - 2 ] = 0	274:4:9476:9511	5609733	2	True				
ANR	5610703	AssignmentExpression	indentstr [ ( indent * I_TAB ) - 2 ] = 0		5609733	0		=			
ANR	5610704	ArrayIndexing	indentstr [ ( indent * I_TAB ) - 2 ]		5609733	0					
ANR	5610705	Identifier	indentstr		5609733	0					
ANR	5610706	AdditiveExpression	( indent * I_TAB ) - 2		5609733	1		-			
ANR	5610707	MultiplicativeExpression	indent * I_TAB		5609733	0		*			
ANR	5610708	Identifier	indent		5609733	0					
ANR	5610709	Identifier	I_TAB		5609733	1					
ANR	5610710	PrimaryExpression	2		5609733	1					
ANR	5610711	PrimaryExpression	0		5609733	1					
ANR	5610712	ExpressionStatement	"r_cons_printf ( ""\\n%s"" , code )"	275:4:9517:9545	5609733	3	True				
ANR	5610713	CallExpression	"r_cons_printf ( ""\\n%s"" , code )"		5609733	0					
ANR	5610714	Callee	r_cons_printf		5609733	0					
ANR	5610715	Identifier	r_cons_printf		5609733	0					
ANR	5610716	ArgumentList	"""\\n%s"""		5609733	1					
ANR	5610717	Argument	"""\\n%s"""		5609733	0					
ANR	5610718	PrimaryExpression	"""\\n%s"""		5609733	0					
ANR	5610719	Argument	code		5609733	1					
ANR	5610720	Identifier	code		5609733	0					
ANR	5610721	ExpressionStatement	free ( code )	276:4:9551:9562	5609733	4	True				
ANR	5610722	CallExpression	free ( code )		5609733	0					
ANR	5610723	Callee	free		5609733	0					
ANR	5610724	Identifier	free		5609733	0					
ANR	5610725	ArgumentList	code		5609733	1					
ANR	5610726	Argument	code		5609733	0					
ANR	5610727	Identifier	code		5609733	0					
ANR	5610728	ExpressionStatement	"sdb_num_set ( db , K_MARK ( bb -> addr ) , 1 , 0 )"	277:4:9568:9609	5609733	5	True				
ANR	5610729	CallExpression	"sdb_num_set ( db , K_MARK ( bb -> addr ) , 1 , 0 )"		5609733	0					
ANR	5610730	Callee	sdb_num_set		5609733	0					
ANR	5610731	Identifier	sdb_num_set		5609733	0					
ANR	5610732	ArgumentList	db		5609733	1					
ANR	5610733	Argument	db		5609733	0					
ANR	5610734	Identifier	db		5609733	0					
ANR	5610735	Argument	K_MARK ( bb -> addr )		5609733	1					
ANR	5610736	CallExpression	K_MARK ( bb -> addr )		5609733	0					
ANR	5610737	Callee	K_MARK		5609733	0					
ANR	5610738	Identifier	K_MARK		5609733	0					
ANR	5610739	ArgumentList	bb -> addr		5609733	1					
ANR	5610740	Argument	bb -> addr		5609733	0					
ANR	5610741	PtrMemberAccess	bb -> addr		5609733	0					
ANR	5610742	Identifier	bb		5609733	0					
ANR	5610743	Identifier	addr		5609733	1					
ANR	5610744	Argument	1		5609733	2					
ANR	5610745	PrimaryExpression	1		5609733	0					
ANR	5610746	Argument	0		5609733	3					
ANR	5610747	PrimaryExpression	0		5609733	0					
ANR	5610748	IfStatement	"if ( sdb_const_get ( db , K_INDENT ( bb -> addr ) , 0 ) )"		5609733	84					
ANR	5610749	Condition	"sdb_const_get ( db , K_INDENT ( bb -> addr ) , 0 )"	280:6:9626:9667	5609733	0	True				
ANR	5610750	CallExpression	"sdb_const_get ( db , K_INDENT ( bb -> addr ) , 0 )"		5609733	0					
ANR	5610751	Callee	sdb_const_get		5609733	0					
ANR	5610752	Identifier	sdb_const_get		5609733	0					
ANR	5610753	ArgumentList	db		5609733	1					
ANR	5610754	Argument	db		5609733	0					
ANR	5610755	Identifier	db		5609733	0					
ANR	5610756	Argument	K_INDENT ( bb -> addr )		5609733	1					
ANR	5610757	CallExpression	K_INDENT ( bb -> addr )		5609733	0					
ANR	5610758	Callee	K_INDENT		5609733	0					
ANR	5610759	Identifier	K_INDENT		5609733	0					
ANR	5610760	ArgumentList	bb -> addr		5609733	1					
ANR	5610761	Argument	bb -> addr		5609733	0					
ANR	5610762	PtrMemberAccess	bb -> addr		5609733	0					
ANR	5610763	Identifier	bb		5609733	0					
ANR	5610764	Identifier	addr		5609733	1					
ANR	5610765	Argument	0		5609733	2					
ANR	5610766	PrimaryExpression	0		5609733	0					
ANR	5610767	CompoundStatement		116:3:4167:4217	5609733	1					
ANR	5610768	IdentifierDeclStatement	"ut64 addr = sdb_array_pop_num ( db , ""indent"" , NULL ) ;"	284:3:9820:9870	5609733	0	True				
ANR	5610769	IdentifierDecl	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		5609733	0					
ANR	5610770	IdentifierDeclType	ut64		5609733	0					
ANR	5610771	Identifier	addr		5609733	1					
ANR	5610772	AssignmentExpression	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		5609733	2		=			
ANR	5610773	Identifier	addr		5609733	0					
ANR	5610774	CallExpression	"sdb_array_pop_num ( db , ""indent"" , NULL )"		5609733	1					
ANR	5610775	Callee	sdb_array_pop_num		5609733	0					
ANR	5610776	Identifier	sdb_array_pop_num		5609733	0					
ANR	5610777	ArgumentList	db		5609733	1					
ANR	5610778	Argument	db		5609733	0					
ANR	5610779	Identifier	db		5609733	0					
ANR	5610780	Argument	"""indent"""		5609733	1					
ANR	5610781	PrimaryExpression	"""indent"""		5609733	0					
ANR	5610782	Argument	NULL		5609733	2					
ANR	5610783	Identifier	NULL		5609733	0					
ANR	5610784	IfStatement	if ( addr == UT64_MAX )		5609733	1					
ANR	5610785	Condition	addr == UT64_MAX	285:7:9879:9894	5609733	0	True				
ANR	5610786	EqualityExpression	addr == UT64_MAX		5609733	0		==			
ANR	5610787	Identifier	addr		5609733	0					
ANR	5610788	Identifier	UT64_MAX		5609733	1					
ANR	5610789	CompoundStatement		125:4:4436:4498	5609733	1					
ANR	5610790	IdentifierDeclStatement	int i ;	286:4:9903:9908	5609733	0	True				
ANR	5610791	IdentifierDecl	i		5609733	0					
ANR	5610792	IdentifierDeclType	int		5609733	0					
ANR	5610793	Identifier	i		5609733	1					
ANR	5610794	ExpressionStatement	nindent = 1	287:4:9914:9925	5609733	1	True				
ANR	5610795	AssignmentExpression	nindent = 1		5609733	0		=			
ANR	5610796	Identifier	nindent		5609733	0					
ANR	5610797	PrimaryExpression	1		5609733	1					
ANR	5610798	ForStatement	for ( i = indent ; i != nindent ; i -- )		5609733	2					
ANR	5610799	ForInit	i = indent ;	288:9:9936:9946	5609733	0	True				
ANR	5610800	AssignmentExpression	i = indent		5609733	0		=			
ANR	5610801	Identifier	i		5609733	0					
ANR	5610802	Identifier	indent		5609733	1					
ANR	5610803	Condition	i != nindent	288:21:9948:9959	5609733	1	True				
ANR	5610804	EqualityExpression	i != nindent		5609733	0		!=			
ANR	5610805	Identifier	i		5609733	0					
ANR	5610806	Identifier	nindent		5609733	1					
ANR	5610807	PostIncDecOperationExpression	i --	288:35:9962:9964	5609733	2	True				
ANR	5610808	Identifier	i		5609733	0					
ANR	5610809	IncDec	--		5609733	1					
ANR	5610810	CompoundStatement		120:40:4314:4314	5609733	3					
ANR	5610811	ExpressionStatement	SET_INDENT ( i )	289:5:9974:9988	5609733	0	True				
ANR	5610812	CallExpression	SET_INDENT ( i )		5609733	0					
ANR	5610813	Callee	SET_INDENT		5609733	0					
ANR	5610814	Identifier	SET_INDENT		5609733	0					
ANR	5610815	ArgumentList	i		5609733	1					
ANR	5610816	Argument	i		5609733	0					
ANR	5610817	Identifier	i		5609733	0					
ANR	5610818	ExpressionStatement	"r_cons_printf ( ""\\n%s}"" , indentstr )"	290:5:9995:10029	5609733	1	True				
ANR	5610819	CallExpression	"r_cons_printf ( ""\\n%s}"" , indentstr )"		5609733	0					
ANR	5610820	Callee	r_cons_printf		5609733	0					
ANR	5610821	Identifier	r_cons_printf		5609733	0					
ANR	5610822	ArgumentList	"""\\n%s}"""		5609733	1					
ANR	5610823	Argument	"""\\n%s}"""		5609733	0					
ANR	5610824	PrimaryExpression	"""\\n%s}"""		5609733	0					
ANR	5610825	Argument	indentstr		5609733	1					
ANR	5610826	Identifier	indentstr		5609733	0					
ANR	5610827	ExpressionStatement	"r_cons_printf ( ""\\n%sreturn;\\n"" , indentstr )"	292:4:10041:10083	5609733	3	True				
ANR	5610828	CallExpression	"r_cons_printf ( ""\\n%sreturn;\\n"" , indentstr )"		5609733	0					
ANR	5610829	Callee	r_cons_printf		5609733	0					
ANR	5610830	Identifier	r_cons_printf		5609733	0					
ANR	5610831	ArgumentList	"""\\n%sreturn;\\n"""		5609733	1					
ANR	5610832	Argument	"""\\n%sreturn;\\n"""		5609733	0					
ANR	5610833	PrimaryExpression	"""\\n%sreturn;\\n"""		5609733	0					
ANR	5610834	Argument	indentstr		5609733	1					
ANR	5610835	Identifier	indentstr		5609733	0					
ANR	5610836	IdentifierDeclStatement	"RAnalBlock * nbb = r_anal_bb_from_offset ( core -> anal , bb -> fail ) ;"	293:4:10089:10151	5609733	4	True				
ANR	5610837	IdentifierDecl	"* nbb = r_anal_bb_from_offset ( core -> anal , bb -> fail )"		5609733	0					
ANR	5610838	IdentifierDeclType	RAnalBlock *		5609733	0					
ANR	5610839	Identifier	nbb		5609733	1					
ANR	5610840	AssignmentExpression	"* nbb = r_anal_bb_from_offset ( core -> anal , bb -> fail )"		5609733	2		=			
ANR	5610841	Identifier	nbb		5609733	0					
ANR	5610842	CallExpression	"r_anal_bb_from_offset ( core -> anal , bb -> fail )"		5609733	1					
ANR	5610843	Callee	r_anal_bb_from_offset		5609733	0					
ANR	5610844	Identifier	r_anal_bb_from_offset		5609733	0					
ANR	5610845	ArgumentList	core -> anal		5609733	1					
ANR	5610846	Argument	core -> anal		5609733	0					
ANR	5610847	PtrMemberAccess	core -> anal		5609733	0					
ANR	5610848	Identifier	core		5609733	0					
ANR	5610849	Identifier	anal		5609733	1					
ANR	5610850	Argument	bb -> fail		5609733	1					
ANR	5610851	PtrMemberAccess	bb -> fail		5609733	0					
ANR	5610852	Identifier	bb		5609733	0					
ANR	5610853	Identifier	fail		5609733	1					
ANR	5610854	IfStatement	"if ( r_list_contains ( visited , nbb ) )"		5609733	5					
ANR	5610855	Condition	"r_list_contains ( visited , nbb )"	294:8:10161:10190	5609733	0	True				
ANR	5610856	CallExpression	"r_list_contains ( visited , nbb )"		5609733	0					
ANR	5610857	Callee	r_list_contains		5609733	0					
ANR	5610858	Identifier	r_list_contains		5609733	0					
ANR	5610859	ArgumentList	visited		5609733	1					
ANR	5610860	Argument	visited		5609733	0					
ANR	5610861	Identifier	visited		5609733	0					
ANR	5610862	Argument	nbb		5609733	1					
ANR	5610863	Identifier	nbb		5609733	0					
ANR	5610864	CompoundStatement		126:40:4540:4540	5609733	1					
ANR	5610865	ExpressionStatement	"nbb = r_anal_bb_from_offset ( core -> anal , bb -> jump )"	295:5:10200:10250	5609733	0	True				
ANR	5610866	AssignmentExpression	"nbb = r_anal_bb_from_offset ( core -> anal , bb -> jump )"		5609733	0		=			
ANR	5610867	Identifier	nbb		5609733	0					
ANR	5610868	CallExpression	"r_anal_bb_from_offset ( core -> anal , bb -> jump )"		5609733	1					
ANR	5610869	Callee	r_anal_bb_from_offset		5609733	0					
ANR	5610870	Identifier	r_anal_bb_from_offset		5609733	0					
ANR	5610871	ArgumentList	core -> anal		5609733	1					
ANR	5610872	Argument	core -> anal		5609733	0					
ANR	5610873	PtrMemberAccess	core -> anal		5609733	0					
ANR	5610874	Identifier	core		5609733	0					
ANR	5610875	Identifier	anal		5609733	1					
ANR	5610876	Argument	bb -> jump		5609733	1					
ANR	5610877	PtrMemberAccess	bb -> jump		5609733	0					
ANR	5610878	Identifier	bb		5609733	0					
ANR	5610879	Identifier	jump		5609733	1					
ANR	5610880	IfStatement	"if ( r_list_contains ( visited , nbb ) )"		5609733	1					
ANR	5610881	Condition	"r_list_contains ( visited , nbb )"	296:9:10261:10290	5609733	0	True				
ANR	5610882	CallExpression	"r_list_contains ( visited , nbb )"		5609733	0					
ANR	5610883	Callee	r_list_contains		5609733	0					
ANR	5610884	Identifier	r_list_contains		5609733	0					
ANR	5610885	ArgumentList	visited		5609733	1					
ANR	5610886	Argument	visited		5609733	0					
ANR	5610887	Identifier	visited		5609733	0					
ANR	5610888	Argument	nbb		5609733	1					
ANR	5610889	Identifier	nbb		5609733	0					
ANR	5610890	CompoundStatement		128:41:4640:4640	5609733	1					
ANR	5610891	ExpressionStatement	nbb = NULL	297:6:10301:10311	5609733	0	True				
ANR	5610892	AssignmentExpression	nbb = NULL		5609733	0		=			
ANR	5610893	Identifier	nbb		5609733	0					
ANR	5610894	Identifier	NULL		5609733	1					
ANR	5610895	IfStatement	if ( ! nbb )		5609733	6					
ANR	5610896	Condition	! nbb	300:8:10334:10337	5609733	0	True				
ANR	5610897	UnaryOperationExpression	! nbb		5609733	0					
ANR	5610898	UnaryOperator	!		5609733	0					
ANR	5610899	Identifier	nbb		5609733	1					
ANR	5610900	CompoundStatement		132:14:4687:4687	5609733	1					
ANR	5610901	BreakStatement	break ;	301:5:10347:10352	5609733	0	True				
ANR	5610902	ExpressionStatement	bb = nbb	303:4:10364:10372	5609733	7	True				
ANR	5610903	AssignmentExpression	bb = nbb		5609733	0		=			
ANR	5610904	Identifier	bb		5609733	0					
ANR	5610905	Identifier	nbb		5609733	1					
ANR	5610906	ExpressionStatement	indent --	304:4:10378:10386	5609733	8	True				
ANR	5610907	PostIncDecOperationExpression	indent --		5609733	0					
ANR	5610908	Identifier	indent		5609733	0					
ANR	5610909	IncDec	--		5609733	1					
ANR	5610910	ContinueStatement	continue ;	305:4:10392:10400	5609733	9	True				
ANR	5610911	IfStatement	"if ( sdb_num_get ( db , K_ELSE ( bb -> addr ) , 0 ) )"		5609733	2					
ANR	5610912	Condition	"sdb_num_get ( db , K_ELSE ( bb -> addr ) , 0 )"	307:7:10414:10451	5609733	0	True				
ANR	5610913	CallExpression	"sdb_num_get ( db , K_ELSE ( bb -> addr ) , 0 )"		5609733	0					
ANR	5610914	Callee	sdb_num_get		5609733	0					
ANR	5610915	Identifier	sdb_num_get		5609733	0					
ANR	5610916	ArgumentList	db		5609733	1					
ANR	5610917	Argument	db		5609733	0					
ANR	5610918	Identifier	db		5609733	0					
ANR	5610919	Argument	K_ELSE ( bb -> addr )		5609733	1					
ANR	5610920	CallExpression	K_ELSE ( bb -> addr )		5609733	0					
ANR	5610921	Callee	K_ELSE		5609733	0					
ANR	5610922	Identifier	K_ELSE		5609733	0					
ANR	5610923	ArgumentList	bb -> addr		5609733	1					
ANR	5610924	Argument	bb -> addr		5609733	0					
ANR	5610925	PtrMemberAccess	bb -> addr		5609733	0					
ANR	5610926	Identifier	bb		5609733	0					
ANR	5610927	Identifier	addr		5609733	1					
ANR	5610928	Argument	0		5609733	2					
ANR	5610929	PrimaryExpression	0		5609733	0					
ANR	5610930	CompoundStatement		139:47:4801:4801	5609733	1					
ANR	5610931	IfStatement	"if ( ! strcmp ( blocktype , ""else"" ) )"		5609733	0					
ANR	5610932	Condition	"! strcmp ( blocktype , ""else"" )"	308:8:10464:10490	5609733	0	True				
ANR	5610933	UnaryOperationExpression	"! strcmp ( blocktype , ""else"" )"		5609733	0					
ANR	5610934	UnaryOperator	!		5609733	0					
ANR	5610935	CallExpression	"strcmp ( blocktype , ""else"" )"		5609733	1					
ANR	5610936	Callee	strcmp		5609733	0					
ANR	5610937	Identifier	strcmp		5609733	0					
ANR	5610938	ArgumentList	blocktype		5609733	1					
ANR	5610939	Argument	blocktype		5609733	0					
ANR	5610940	Identifier	blocktype		5609733	0					
ANR	5610941	Argument	"""else"""		5609733	1					
ANR	5610942	PrimaryExpression	"""else"""		5609733	0					
ANR	5610943	CompoundStatement		140:37:4840:4840	5609733	1					
ANR	5610944	ExpressionStatement	"r_cons_printf ( ""\\n%s } %s {"" , indentstr , blocktype )"	309:5:10500:10551	5609733	0	True				
ANR	5610945	CallExpression	"r_cons_printf ( ""\\n%s } %s {"" , indentstr , blocktype )"		5609733	0					
ANR	5610946	Callee	r_cons_printf		5609733	0					
ANR	5610947	Identifier	r_cons_printf		5609733	0					
ANR	5610948	ArgumentList	"""\\n%s } %s {"""		5609733	1					
ANR	5610949	Argument	"""\\n%s } %s {"""		5609733	0					
ANR	5610950	PrimaryExpression	"""\\n%s } %s {"""		5609733	0					
ANR	5610951	Argument	indentstr		5609733	1					
ANR	5610952	Identifier	indentstr		5609733	0					
ANR	5610953	Argument	blocktype		5609733	2					
ANR	5610954	Identifier	blocktype		5609733	0					
ANR	5610955	ElseStatement	else		5609733	0					
ANR	5610956	CompoundStatement		142:11:4911:4911	5609733	0					
ANR	5610957	ExpressionStatement	"r_cons_printf ( ""\\n%s } %s (?);"" , indentstr , blocktype )"	311:5:10571:10625	5609733	0	True				
ANR	5610958	CallExpression	"r_cons_printf ( ""\\n%s } %s (?);"" , indentstr , blocktype )"		5609733	0					
ANR	5610959	Callee	r_cons_printf		5609733	0					
ANR	5610960	Identifier	r_cons_printf		5609733	0					
ANR	5610961	ArgumentList	"""\\n%s } %s (?);"""		5609733	1					
ANR	5610962	Argument	"""\\n%s } %s (?);"""		5609733	0					
ANR	5610963	PrimaryExpression	"""\\n%s } %s (?);"""		5609733	0					
ANR	5610964	Argument	indentstr		5609733	1					
ANR	5610965	Identifier	indentstr		5609733	0					
ANR	5610966	Argument	blocktype		5609733	2					
ANR	5610967	Identifier	blocktype		5609733	0					
ANR	5610968	ElseStatement	else		5609733	0					
ANR	5610969	CompoundStatement		145:10:4990:4990	5609733	0					
ANR	5610970	ExpressionStatement	"r_cons_printf ( ""\\n%s}"" , indentstr )"	314:4:10649:10683	5609733	0	True				
ANR	5610971	CallExpression	"r_cons_printf ( ""\\n%s}"" , indentstr )"		5609733	0					
ANR	5610972	Callee	r_cons_printf		5609733	0					
ANR	5610973	Identifier	r_cons_printf		5609733	0					
ANR	5610974	ArgumentList	"""\\n%s}"""		5609733	1					
ANR	5610975	Argument	"""\\n%s}"""		5609733	0					
ANR	5610976	PrimaryExpression	"""\\n%s}"""		5609733	0					
ANR	5610977	Argument	indentstr		5609733	1					
ANR	5610978	Identifier	indentstr		5609733	0					
ANR	5610979	IfStatement	if ( addr != bb -> addr )		5609733	3					
ANR	5610980	Condition	addr != bb -> addr	316:7:10697:10712	5609733	0	True				
ANR	5610981	EqualityExpression	addr != bb -> addr		5609733	0		!=			
ANR	5610982	Identifier	addr		5609733	0					
ANR	5610983	PtrMemberAccess	bb -> addr		5609733	1					
ANR	5610984	Identifier	bb		5609733	0					
ANR	5610985	Identifier	addr		5609733	1					
ANR	5610986	CompoundStatement		148:25:5062:5062	5609733	1					
ANR	5610987	ExpressionStatement	queuegoto = addr	317:4:10721:10737	5609733	0	True				
ANR	5610988	AssignmentExpression	queuegoto = addr		5609733	0		=			
ANR	5610989	Identifier	queuegoto		5609733	0					
ANR	5610990	Identifier	addr		5609733	1					
ANR	5610991	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , addr )"	320:3:10812:10857	5609733	4	True				
ANR	5610992	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , addr )"		5609733	0		=			
ANR	5610993	Identifier	bb		5609733	0					
ANR	5610994	CallExpression	"r_anal_bb_from_offset ( core -> anal , addr )"		5609733	1					
ANR	5610995	Callee	r_anal_bb_from_offset		5609733	0					
ANR	5610996	Identifier	r_anal_bb_from_offset		5609733	0					
ANR	5610997	ArgumentList	core -> anal		5609733	1					
ANR	5610998	Argument	core -> anal		5609733	0					
ANR	5610999	PtrMemberAccess	core -> anal		5609733	0					
ANR	5611000	Identifier	core		5609733	0					
ANR	5611001	Identifier	anal		5609733	1					
ANR	5611002	Argument	addr		5609733	1					
ANR	5611003	Identifier	addr		5609733	0					
ANR	5611004	IfStatement	if ( ! bb )		5609733	5					
ANR	5611005	Condition	! bb	321:7:10866:10868	5609733	0	True				
ANR	5611006	UnaryOperationExpression	! bb		5609733	0					
ANR	5611007	UnaryOperator	!		5609733	0					
ANR	5611008	Identifier	bb		5609733	1					
ANR	5611009	CompoundStatement		153:12:5218:5218	5609733	1					
ANR	5611010	ExpressionStatement	"eprintf ( ""failed block\\n"" )"	322:4:10877:10903	5609733	0	True				
ANR	5611011	CallExpression	"eprintf ( ""failed block\\n"" )"		5609733	0					
ANR	5611012	Callee	eprintf		5609733	0					
ANR	5611013	Identifier	eprintf		5609733	0					
ANR	5611014	ArgumentList	"""failed block\\n"""		5609733	1					
ANR	5611015	Argument	"""failed block\\n"""		5609733	0					
ANR	5611016	PrimaryExpression	"""failed block\\n"""		5609733	0					
ANR	5611017	BreakStatement	break ;	323:4:10909:10914	5609733	1	True				
ANR	5611018	ExpressionStatement	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"	326:3:10963:11012	5609733	6	True				
ANR	5611019	AssignmentExpression	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		5609733	0		=			
ANR	5611020	Identifier	nindent		5609733	0					
ANR	5611021	CallExpression	"sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		5609733	1					
ANR	5611022	Callee	sdb_num_get		5609733	0					
ANR	5611023	Identifier	sdb_num_get		5609733	0					
ANR	5611024	ArgumentList	db		5609733	1					
ANR	5611025	Argument	db		5609733	0					
ANR	5611026	Identifier	db		5609733	0					
ANR	5611027	Argument	K_INDENT ( addr )		5609733	1					
ANR	5611028	CallExpression	K_INDENT ( addr )		5609733	0					
ANR	5611029	Callee	K_INDENT		5609733	0					
ANR	5611030	Identifier	K_INDENT		5609733	0					
ANR	5611031	ArgumentList	addr		5609733	1					
ANR	5611032	Argument	addr		5609733	0					
ANR	5611033	Identifier	addr		5609733	0					
ANR	5611034	Argument	NULL		5609733	2					
ANR	5611035	Identifier	NULL		5609733	0					
ANR	5611036	IfStatement	"if ( indent > nindent && ! strcmp ( blocktype , ""else"" ) )"		5609733	7					
ANR	5611037	Condition	"indent > nindent && ! strcmp ( blocktype , ""else"" )"	327:7:11021:11067	5609733	0	True				
ANR	5611038	AndExpression	"indent > nindent && ! strcmp ( blocktype , ""else"" )"		5609733	0		&&			
ANR	5611039	RelationalExpression	indent > nindent		5609733	0		>			
ANR	5611040	Identifier	indent		5609733	0					
ANR	5611041	Identifier	nindent		5609733	1					
ANR	5611042	UnaryOperationExpression	"! strcmp ( blocktype , ""else"" )"		5609733	1					
ANR	5611043	UnaryOperator	!		5609733	0					
ANR	5611044	CallExpression	"strcmp ( blocktype , ""else"" )"		5609733	1					
ANR	5611045	Callee	strcmp		5609733	0					
ANR	5611046	Identifier	strcmp		5609733	0					
ANR	5611047	ArgumentList	blocktype		5609733	1					
ANR	5611048	Argument	blocktype		5609733	0					
ANR	5611049	Identifier	blocktype		5609733	0					
ANR	5611050	Argument	"""else"""		5609733	1					
ANR	5611051	PrimaryExpression	"""else"""		5609733	0					
ANR	5611052	CompoundStatement		160:4:5423:5428	5609733	1					
ANR	5611053	IdentifierDeclStatement	int i ;	328:4:11076:11081	5609733	0	True				
ANR	5611054	IdentifierDecl	i		5609733	0					
ANR	5611055	IdentifierDeclType	int		5609733	0					
ANR	5611056	Identifier	i		5609733	1					
ANR	5611057	ForStatement	for ( i = indent ; i != nindent ; i -- )		5609733	1					
ANR	5611058	ForInit	i = indent ;	329:9:11092:11102	5609733	0	True				
ANR	5611059	AssignmentExpression	i = indent		5609733	0		=			
ANR	5611060	Identifier	i		5609733	0					
ANR	5611061	Identifier	indent		5609733	1					
ANR	5611062	Condition	i != nindent	329:21:11104:11115	5609733	1	True				
ANR	5611063	EqualityExpression	i != nindent		5609733	0		!=			
ANR	5611064	Identifier	i		5609733	0					
ANR	5611065	Identifier	nindent		5609733	1					
ANR	5611066	PostIncDecOperationExpression	i --	329:35:11118:11120	5609733	2	True				
ANR	5611067	Identifier	i		5609733	0					
ANR	5611068	IncDec	--		5609733	1					
ANR	5611069	CompoundStatement		161:40:5470:5470	5609733	3					
ANR	5611070	ExpressionStatement	SET_INDENT ( i )	330:5:11130:11144	5609733	0	True				
ANR	5611071	CallExpression	SET_INDENT ( i )		5609733	0					
ANR	5611072	Callee	SET_INDENT		5609733	0					
ANR	5611073	Identifier	SET_INDENT		5609733	0					
ANR	5611074	ArgumentList	i		5609733	1					
ANR	5611075	Argument	i		5609733	0					
ANR	5611076	Identifier	i		5609733	0					
ANR	5611077	ExpressionStatement	"r_cons_printf ( ""\\n%s }"" , indentstr )"	331:5:11151:11186	5609733	1	True				
ANR	5611078	CallExpression	"r_cons_printf ( ""\\n%s }"" , indentstr )"		5609733	0					
ANR	5611079	Callee	r_cons_printf		5609733	0					
ANR	5611080	Identifier	r_cons_printf		5609733	0					
ANR	5611081	ArgumentList	"""\\n%s }"""		5609733	1					
ANR	5611082	Argument	"""\\n%s }"""		5609733	0					
ANR	5611083	PrimaryExpression	"""\\n%s }"""		5609733	0					
ANR	5611084	Argument	indentstr		5609733	1					
ANR	5611085	Identifier	indentstr		5609733	0					
ANR	5611086	ExpressionStatement	indent = nindent	334:3:11202:11218	5609733	8	True				
ANR	5611087	AssignmentExpression	indent = nindent		5609733	0		=			
ANR	5611088	Identifier	indent		5609733	0					
ANR	5611089	Identifier	nindent		5609733	1					
ANR	5611090	ElseStatement	else		5609733	0					
ANR	5611091	CompoundStatement		167:9:5576:5576	5609733	0					
ANR	5611092	ExpressionStatement	"sdb_set ( db , K_INDENT ( bb -> addr ) , ""passed"" , 0 )"	336:3:11234:11280	5609733	0	True				
ANR	5611093	CallExpression	"sdb_set ( db , K_INDENT ( bb -> addr ) , ""passed"" , 0 )"		5609733	0					
ANR	5611094	Callee	sdb_set		5609733	0					
ANR	5611095	Identifier	sdb_set		5609733	0					
ANR	5611096	ArgumentList	db		5609733	1					
ANR	5611097	Argument	db		5609733	0					
ANR	5611098	Identifier	db		5609733	0					
ANR	5611099	Argument	K_INDENT ( bb -> addr )		5609733	1					
ANR	5611100	CallExpression	K_INDENT ( bb -> addr )		5609733	0					
ANR	5611101	Callee	K_INDENT		5609733	0					
ANR	5611102	Identifier	K_INDENT		5609733	0					
ANR	5611103	ArgumentList	bb -> addr		5609733	1					
ANR	5611104	Argument	bb -> addr		5609733	0					
ANR	5611105	PtrMemberAccess	bb -> addr		5609733	0					
ANR	5611106	Identifier	bb		5609733	0					
ANR	5611107	Identifier	addr		5609733	1					
ANR	5611108	Argument	"""passed"""		5609733	2					
ANR	5611109	PrimaryExpression	"""passed"""		5609733	0					
ANR	5611110	Argument	0		5609733	3					
ANR	5611111	PrimaryExpression	0		5609733	0					
ANR	5611112	IfStatement	if ( bb -> jump != UT64_MAX )		5609733	1					
ANR	5611113	Condition	bb -> jump != UT64_MAX	337:7:11289:11308	5609733	0	True				
ANR	5611114	EqualityExpression	bb -> jump != UT64_MAX		5609733	0		!=			
ANR	5611115	PtrMemberAccess	bb -> jump		5609733	0					
ANR	5611116	Identifier	bb		5609733	0					
ANR	5611117	Identifier	jump		5609733	1					
ANR	5611118	Identifier	UT64_MAX		5609733	1					
ANR	5611119	CompoundStatement		175:4:5862:5944	5609733	1					
ANR	5611120	IdentifierDeclStatement	int swap = 1 ;	338:4:11317:11329	5609733	0	True				
ANR	5611121	IdentifierDecl	swap = 1		5609733	0					
ANR	5611122	IdentifierDeclType	int		5609733	0					
ANR	5611123	Identifier	swap		5609733	1					
ANR	5611124	AssignmentExpression	swap = 1		5609733	2		=			
ANR	5611125	Identifier	swap		5609733	0					
ANR	5611126	PrimaryExpression	1		5609733	1					
ANR	5611127	IdentifierDeclStatement	ut64 jump = swap ? bb -> jump : bb -> fail ;	340:4:11382:11420	5609733	1	True				
ANR	5611128	IdentifierDecl	jump = swap ? bb -> jump : bb -> fail		5609733	0					
ANR	5611129	IdentifierDeclType	ut64		5609733	0					
ANR	5611130	Identifier	jump		5609733	1					
ANR	5611131	AssignmentExpression	jump = swap ? bb -> jump : bb -> fail		5609733	2		=			
ANR	5611132	Identifier	jump		5609733	0					
ANR	5611133	ConditionalExpression	swap ? bb -> jump : bb -> fail		5609733	1					
ANR	5611134	Condition	swap		5609733	0					
ANR	5611135	Identifier	swap		5609733	0					
ANR	5611136	PtrMemberAccess	bb -> jump		5609733	1					
ANR	5611137	Identifier	bb		5609733	0					
ANR	5611138	Identifier	jump		5609733	1					
ANR	5611139	PtrMemberAccess	bb -> fail		5609733	2					
ANR	5611140	Identifier	bb		5609733	0					
ANR	5611141	Identifier	fail		5609733	1					
ANR	5611142	IdentifierDeclStatement	ut64 fail = swap ? bb -> fail : bb -> jump ;	341:4:11426:11464	5609733	2	True				
ANR	5611143	IdentifierDecl	fail = swap ? bb -> fail : bb -> jump		5609733	0					
ANR	5611144	IdentifierDeclType	ut64		5609733	0					
ANR	5611145	Identifier	fail		5609733	1					
ANR	5611146	AssignmentExpression	fail = swap ? bb -> fail : bb -> jump		5609733	2		=			
ANR	5611147	Identifier	fail		5609733	0					
ANR	5611148	ConditionalExpression	swap ? bb -> fail : bb -> jump		5609733	1					
ANR	5611149	Condition	swap		5609733	0					
ANR	5611150	Identifier	swap		5609733	0					
ANR	5611151	PtrMemberAccess	bb -> fail		5609733	1					
ANR	5611152	Identifier	bb		5609733	0					
ANR	5611153	Identifier	fail		5609733	1					
ANR	5611154	PtrMemberAccess	bb -> jump		5609733	2					
ANR	5611155	Identifier	bb		5609733	0					
ANR	5611156	Identifier	jump		5609733	1					
ANR	5611157	IdentifierDeclStatement	"RAnalFunction * curfcn = r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL ) ;"	343:4:11515:11597	5609733	3	True				
ANR	5611158	IdentifierDecl	"* curfcn = r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL )"		5609733	0					
ANR	5611159	IdentifierDeclType	RAnalFunction *		5609733	0					
ANR	5611160	Identifier	curfcn		5609733	1					
ANR	5611161	AssignmentExpression	"* curfcn = r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL )"		5609733	2		=			
ANR	5611162	Identifier	curfcn		5609733	0					
ANR	5611163	CallExpression	"r_anal_get_fcn_in ( core -> anal , jump , R_ANAL_FCN_TYPE_NULL )"		5609733	1					
ANR	5611164	Callee	r_anal_get_fcn_in		5609733	0					
ANR	5611165	Identifier	r_anal_get_fcn_in		5609733	0					
ANR	5611166	ArgumentList	core -> anal		5609733	1					
ANR	5611167	Argument	core -> anal		5609733	0					
ANR	5611168	PtrMemberAccess	core -> anal		5609733	0					
ANR	5611169	Identifier	core		5609733	0					
ANR	5611170	Identifier	anal		5609733	1					
ANR	5611171	Argument	jump		5609733	1					
ANR	5611172	Identifier	jump		5609733	0					
ANR	5611173	Argument	R_ANAL_FCN_TYPE_NULL		5609733	2					
ANR	5611174	Identifier	R_ANAL_FCN_TYPE_NULL		5609733	0					
ANR	5611175	IfStatement	if ( curfcn != fcn )		5609733	4					
ANR	5611176	Condition	curfcn != fcn	344:8:11607:11619	5609733	0	True				
ANR	5611177	EqualityExpression	curfcn != fcn		5609733	0		!=			
ANR	5611178	Identifier	curfcn		5609733	0					
ANR	5611179	Identifier	fcn		5609733	1					
ANR	5611180	CompoundStatement		176:23:5969:5969	5609733	1					
ANR	5611181	ExpressionStatement	"r_cons_printf ( ""\\n  // chop\\n"" )"	346:5:11654:11685	5609733	0	True				
ANR	5611182	CallExpression	"r_cons_printf ( ""\\n  // chop\\n"" )"		5609733	0					
ANR	5611183	Callee	r_cons_printf		5609733	0					
ANR	5611184	Identifier	r_cons_printf		5609733	0					
ANR	5611185	ArgumentList	"""\\n  // chop\\n"""		5609733	1					
ANR	5611186	Argument	"""\\n  // chop\\n"""		5609733	0					
ANR	5611187	PrimaryExpression	"""\\n  // chop\\n"""		5609733	0					
ANR	5611188	IfStatement	"if ( sdb_get ( db , K_INDENT ( jump ) , 0 ) )"		5609733	5					
ANR	5611189	Condition	"sdb_get ( db , K_INDENT ( jump ) , 0 )"	349:8:11716:11747	5609733	0	True				
ANR	5611190	CallExpression	"sdb_get ( db , K_INDENT ( jump ) , 0 )"		5609733	0					
ANR	5611191	Callee	sdb_get		5609733	0					
ANR	5611192	Identifier	sdb_get		5609733	0					
ANR	5611193	ArgumentList	db		5609733	1					
ANR	5611194	Argument	db		5609733	0					
ANR	5611195	Identifier	db		5609733	0					
ANR	5611196	Argument	K_INDENT ( jump )		5609733	1					
ANR	5611197	CallExpression	K_INDENT ( jump )		5609733	0					
ANR	5611198	Callee	K_INDENT		5609733	0					
ANR	5611199	Identifier	K_INDENT		5609733	0					
ANR	5611200	ArgumentList	jump		5609733	1					
ANR	5611201	Argument	jump		5609733	0					
ANR	5611202	Identifier	jump		5609733	0					
ANR	5611203	Argument	0		5609733	2					
ANR	5611204	PrimaryExpression	0		5609733	0					
ANR	5611205	CompoundStatement		181:42:6097:6097	5609733	1					
ANR	5611206	IfStatement	"if ( ! sdb_get ( db , K_INDENT ( fail ) , 0 ) )"		5609733	0					
ANR	5611207	Condition	"! sdb_get ( db , K_INDENT ( fail ) , 0 )"	351:9:11785:11817	5609733	0	True				
ANR	5611208	UnaryOperationExpression	"! sdb_get ( db , K_INDENT ( fail ) , 0 )"		5609733	0					
ANR	5611209	UnaryOperator	!		5609733	0					
ANR	5611210	CallExpression	"sdb_get ( db , K_INDENT ( fail ) , 0 )"		5609733	1					
ANR	5611211	Callee	sdb_get		5609733	0					
ANR	5611212	Identifier	sdb_get		5609733	0					
ANR	5611213	ArgumentList	db		5609733	1					
ANR	5611214	Argument	db		5609733	0					
ANR	5611215	Identifier	db		5609733	0					
ANR	5611216	Argument	K_INDENT ( fail )		5609733	1					
ANR	5611217	CallExpression	K_INDENT ( fail )		5609733	0					
ANR	5611218	Callee	K_INDENT		5609733	0					
ANR	5611219	Identifier	K_INDENT		5609733	0					
ANR	5611220	ArgumentList	fail		5609733	1					
ANR	5611221	Argument	fail		5609733	0					
ANR	5611222	Identifier	fail		5609733	0					
ANR	5611223	Argument	0		5609733	2					
ANR	5611224	PrimaryExpression	0		5609733	0					
ANR	5611225	CompoundStatement		183:44:6167:6167	5609733	1					
ANR	5611226	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , fail )"	352:6:11828:11873	5609733	0	True				
ANR	5611227	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , fail )"		5609733	0		=			
ANR	5611228	Identifier	bb		5609733	0					
ANR	5611229	CallExpression	"r_anal_bb_from_offset ( core -> anal , fail )"		5609733	1					
ANR	5611230	Callee	r_anal_bb_from_offset		5609733	0					
ANR	5611231	Identifier	r_anal_bb_from_offset		5609733	0					
ANR	5611232	ArgumentList	core -> anal		5609733	1					
ANR	5611233	Argument	core -> anal		5609733	0					
ANR	5611234	PtrMemberAccess	core -> anal		5609733	0					
ANR	5611235	Identifier	core		5609733	0					
ANR	5611236	Identifier	anal		5609733	1					
ANR	5611237	Argument	fail		5609733	1					
ANR	5611238	Identifier	fail		5609733	0					
ANR	5611239	ElseStatement	else		5609733	0					
ANR	5611240	CompoundStatement		186:11:6240:6240	5609733	0					
ANR	5611241	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , jump )"	355:5:11900:11945	5609733	0	True				
ANR	5611242	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , jump )"		5609733	0		=			
ANR	5611243	Identifier	bb		5609733	0					
ANR	5611244	CallExpression	"r_anal_bb_from_offset ( core -> anal , jump )"		5609733	1					
ANR	5611245	Callee	r_anal_bb_from_offset		5609733	0					
ANR	5611246	Identifier	r_anal_bb_from_offset		5609733	0					
ANR	5611247	ArgumentList	core -> anal		5609733	1					
ANR	5611248	Argument	core -> anal		5609733	0					
ANR	5611249	PtrMemberAccess	core -> anal		5609733	0					
ANR	5611250	Identifier	core		5609733	0					
ANR	5611251	Identifier	anal		5609733	1					
ANR	5611252	Argument	jump		5609733	1					
ANR	5611253	Identifier	jump		5609733	0					
ANR	5611254	IfStatement	if ( ! bb )		5609733	1					
ANR	5611255	Condition	! bb	356:9:11956:11958	5609733	0	True				
ANR	5611256	UnaryOperationExpression	! bb		5609733	0					
ANR	5611257	UnaryOperator	!		5609733	0					
ANR	5611258	Identifier	bb		5609733	1					
ANR	5611259	CompoundStatement		188:14:6308:6308	5609733	1					
ANR	5611260	Statement	eprintf	357:6:11969:11975	5609733	0	True				
ANR	5611261	Statement	(	357:14:11977:11977	5609733	1	True				
ANR	5611262	Statement	"""failed to retrieve block at 0x%"""	357:15:11978:12010	5609733	2	True				
ANR	5611263	Statement	PFMT64x	357:48:12011:12017	5609733	3	True				
ANR	5611264	Statement	"""\\n"""	357:55:12018:12021	5609733	4	True				
ANR	5611265	Statement	","	357:59:12022:12022	5609733	5	True				
ANR	5611266	Statement	jump	357:61:12024:12027	5609733	6	True				
ANR	5611267	Statement	)	357:65:12028:12028	5609733	7	True				
ANR	5611268	ExpressionStatement		357:66:12029:12029	5609733	8	True				
ANR	5611269	BreakStatement	break ;	358:6:12037:12042	5609733	9	True				
ANR	5611270	IfStatement	if ( fail != UT64_MAX )		5609733	2					
ANR	5611271	Condition	fail != UT64_MAX	360:9:12060:12075	5609733	0	True				
ANR	5611272	EqualityExpression	fail != UT64_MAX		5609733	0		!=			
ANR	5611273	Identifier	fail		5609733	0					
ANR	5611274	Identifier	UT64_MAX		5609733	1					
ANR	5611275	CompoundStatement		192:27:6425:6425	5609733	1					
ANR	5611276	ExpressionStatement	indent ++	362:6:12125:12133	5609733	0	True				
ANR	5611277	PostIncDecOperationExpression	indent ++		5609733	0					
ANR	5611278	Identifier	indent		5609733	0					
ANR	5611279	IncDec	++		5609733	1					
ANR	5611280	IfStatement	"if ( sdb_get ( db , K_INDENT ( bb -> fail ) , 0 ) )"		5609733	1					
ANR	5611281	Condition	"sdb_get ( db , K_INDENT ( bb -> fail ) , 0 )"	363:10:12145:12180	5609733	0	True				
ANR	5611282	CallExpression	"sdb_get ( db , K_INDENT ( bb -> fail ) , 0 )"		5609733	0					
ANR	5611283	Callee	sdb_get		5609733	0					
ANR	5611284	Identifier	sdb_get		5609733	0					
ANR	5611285	ArgumentList	db		5609733	1					
ANR	5611286	Argument	db		5609733	0					
ANR	5611287	Identifier	db		5609733	0					
ANR	5611288	Argument	K_INDENT ( bb -> fail )		5609733	1					
ANR	5611289	CallExpression	K_INDENT ( bb -> fail )		5609733	0					
ANR	5611290	Callee	K_INDENT		5609733	0					
ANR	5611291	Identifier	K_INDENT		5609733	0					
ANR	5611292	ArgumentList	bb -> fail		5609733	1					
ANR	5611293	Argument	bb -> fail		5609733	0					
ANR	5611294	PtrMemberAccess	bb -> fail		5609733	0					
ANR	5611295	Identifier	bb		5609733	0					
ANR	5611296	Identifier	fail		5609733	1					
ANR	5611297	Argument	0		5609733	2					
ANR	5611298	PrimaryExpression	0		5609733	0					
ANR	5611299	CompoundStatement		195:48:6530:6530	5609733	1					
ANR	5611300	Statement	eprintf	365:7:12221:12227	5609733	0	True				
ANR	5611301	Statement	(	365:15:12229:12229	5609733	1	True				
ANR	5611302	Statement	"""BlockAlready 0x%"""	365:16:12230:12247	5609733	2	True				
ANR	5611303	Statement	PFMT64x	365:34:12248:12254	5609733	3	True				
ANR	5611304	Statement	"""\\n"""	365:41:12255:12258	5609733	4	True				
ANR	5611305	Statement	","	365:45:12259:12259	5609733	5	True				
ANR	5611306	Statement	bb	365:47:12261:12262	5609733	6	True				
ANR	5611307	Statement	->	365:49:12263:12264	5609733	7	True				
ANR	5611308	Statement	addr	365:51:12265:12268	5609733	8	True				
ANR	5611309	Statement	)	365:55:12269:12269	5609733	9	True				
ANR	5611310	ExpressionStatement		365:56:12270:12270	5609733	10	True				
ANR	5611311	ElseStatement	else		5609733	0					
ANR	5611312	CompoundStatement		198:13:6632:6632	5609733	0					
ANR	5611313	ExpressionStatement	"sdb_array_push_num ( db , ""indent"" , fail , 0 )"	368:7:12351:12393	5609733	0	True				
ANR	5611314	CallExpression	"sdb_array_push_num ( db , ""indent"" , fail , 0 )"		5609733	0					
ANR	5611315	Callee	sdb_array_push_num		5609733	0					
ANR	5611316	Identifier	sdb_array_push_num		5609733	0					
ANR	5611317	ArgumentList	db		5609733	1					
ANR	5611318	Argument	db		5609733	0					
ANR	5611319	Identifier	db		5609733	0					
ANR	5611320	Argument	"""indent"""		5609733	1					
ANR	5611321	PrimaryExpression	"""indent"""		5609733	0					
ANR	5611322	Argument	fail		5609733	2					
ANR	5611323	Identifier	fail		5609733	0					
ANR	5611324	Argument	0		5609733	3					
ANR	5611325	PrimaryExpression	0		5609733	0					
ANR	5611326	ExpressionStatement	"sdb_num_set ( db , K_INDENT ( fail ) , indent , 0 )"	369:7:12402:12446	5609733	1	True				
ANR	5611327	CallExpression	"sdb_num_set ( db , K_INDENT ( fail ) , indent , 0 )"		5609733	0					
ANR	5611328	Callee	sdb_num_set		5609733	0					
ANR	5611329	Identifier	sdb_num_set		5609733	0					
ANR	5611330	ArgumentList	db		5609733	1					
ANR	5611331	Argument	db		5609733	0					
ANR	5611332	Identifier	db		5609733	0					
ANR	5611333	Argument	K_INDENT ( fail )		5609733	1					
ANR	5611334	CallExpression	K_INDENT ( fail )		5609733	0					
ANR	5611335	Callee	K_INDENT		5609733	0					
ANR	5611336	Identifier	K_INDENT		5609733	0					
ANR	5611337	ArgumentList	fail		5609733	1					
ANR	5611338	Argument	fail		5609733	0					
ANR	5611339	Identifier	fail		5609733	0					
ANR	5611340	Argument	indent		5609733	2					
ANR	5611341	Identifier	indent		5609733	0					
ANR	5611342	Argument	0		5609733	3					
ANR	5611343	PrimaryExpression	0		5609733	0					
ANR	5611344	ExpressionStatement	"sdb_num_set ( db , K_ELSE ( fail ) , 1 , 0 )"	370:7:12455:12492	5609733	2	True				
ANR	5611345	CallExpression	"sdb_num_set ( db , K_ELSE ( fail ) , 1 , 0 )"		5609733	0					
ANR	5611346	Callee	sdb_num_set		5609733	0					
ANR	5611347	Identifier	sdb_num_set		5609733	0					
ANR	5611348	ArgumentList	db		5609733	1					
ANR	5611349	Argument	db		5609733	0					
ANR	5611350	Identifier	db		5609733	0					
ANR	5611351	Argument	K_ELSE ( fail )		5609733	1					
ANR	5611352	CallExpression	K_ELSE ( fail )		5609733	0					
ANR	5611353	Callee	K_ELSE		5609733	0					
ANR	5611354	Identifier	K_ELSE		5609733	0					
ANR	5611355	ArgumentList	fail		5609733	1					
ANR	5611356	Argument	fail		5609733	0					
ANR	5611357	Identifier	fail		5609733	0					
ANR	5611358	Argument	1		5609733	2					
ANR	5611359	PrimaryExpression	1		5609733	0					
ANR	5611360	Argument	0		5609733	3					
ANR	5611361	PrimaryExpression	0		5609733	0					
ANR	5611362	ExpressionStatement	SET_INDENT ( indent )	371:7:12501:12520	5609733	3	True				
ANR	5611363	CallExpression	SET_INDENT ( indent )		5609733	0					
ANR	5611364	Callee	SET_INDENT		5609733	0					
ANR	5611365	Identifier	SET_INDENT		5609733	0					
ANR	5611366	ArgumentList	indent		5609733	1					
ANR	5611367	Argument	indent		5609733	0					
ANR	5611368	Identifier	indent		5609733	0					
ANR	5611369	ExpressionStatement	"r_cons_printf ( ""\\n%s {"" , indentstr )"	372:7:12529:12564	5609733	4	True				
ANR	5611370	CallExpression	"r_cons_printf ( ""\\n%s {"" , indentstr )"		5609733	0					
ANR	5611371	Callee	r_cons_printf		5609733	0					
ANR	5611372	Identifier	r_cons_printf		5609733	0					
ANR	5611373	ArgumentList	"""\\n%s {"""		5609733	1					
ANR	5611374	Argument	"""\\n%s {"""		5609733	0					
ANR	5611375	PrimaryExpression	"""\\n%s {"""		5609733	0					
ANR	5611376	Argument	indentstr		5609733	1					
ANR	5611377	Identifier	indentstr		5609733	0					
ANR	5611378	ElseStatement	else		5609733	0					
ANR	5611379	CompoundStatement		206:12:6933:6933	5609733	0					
ANR	5611380	ExpressionStatement	"r_cons_printf ( ""\\n%s do"" , indentstr )"	375:6:12594:12630	5609733	0	True				
ANR	5611381	CallExpression	"r_cons_printf ( ""\\n%s do"" , indentstr )"		5609733	0					
ANR	5611382	Callee	r_cons_printf		5609733	0					
ANR	5611383	Identifier	r_cons_printf		5609733	0					
ANR	5611384	ArgumentList	"""\\n%s do"""		5609733	1					
ANR	5611385	Argument	"""\\n%s do"""		5609733	0					
ANR	5611386	PrimaryExpression	"""\\n%s do"""		5609733	0					
ANR	5611387	Argument	indentstr		5609733	1					
ANR	5611388	Identifier	indentstr		5609733	0					
ANR	5611389	ExpressionStatement	"sdb_array_push_num ( db , ""indent"" , jump , 0 )"	376:6:12638:12680	5609733	1	True				
ANR	5611390	CallExpression	"sdb_array_push_num ( db , ""indent"" , jump , 0 )"		5609733	0					
ANR	5611391	Callee	sdb_array_push_num		5609733	0					
ANR	5611392	Identifier	sdb_array_push_num		5609733	0					
ANR	5611393	ArgumentList	db		5609733	1					
ANR	5611394	Argument	db		5609733	0					
ANR	5611395	Identifier	db		5609733	0					
ANR	5611396	Argument	"""indent"""		5609733	1					
ANR	5611397	PrimaryExpression	"""indent"""		5609733	0					
ANR	5611398	Argument	jump		5609733	2					
ANR	5611399	Identifier	jump		5609733	0					
ANR	5611400	Argument	0		5609733	3					
ANR	5611401	PrimaryExpression	0		5609733	0					
ANR	5611402	ExpressionStatement	"sdb_num_set ( db , K_INDENT ( jump ) , indent , 0 )"	377:6:12688:12732	5609733	2	True				
ANR	5611403	CallExpression	"sdb_num_set ( db , K_INDENT ( jump ) , indent , 0 )"		5609733	0					
ANR	5611404	Callee	sdb_num_set		5609733	0					
ANR	5611405	Identifier	sdb_num_set		5609733	0					
ANR	5611406	ArgumentList	db		5609733	1					
ANR	5611407	Argument	db		5609733	0					
ANR	5611408	Identifier	db		5609733	0					
ANR	5611409	Argument	K_INDENT ( jump )		5609733	1					
ANR	5611410	CallExpression	K_INDENT ( jump )		5609733	0					
ANR	5611411	Callee	K_INDENT		5609733	0					
ANR	5611412	Identifier	K_INDENT		5609733	0					
ANR	5611413	ArgumentList	jump		5609733	1					
ANR	5611414	Argument	jump		5609733	0					
ANR	5611415	Identifier	jump		5609733	0					
ANR	5611416	Argument	indent		5609733	2					
ANR	5611417	Identifier	indent		5609733	0					
ANR	5611418	Argument	0		5609733	3					
ANR	5611419	PrimaryExpression	0		5609733	0					
ANR	5611420	ExpressionStatement	"sdb_num_set ( db , K_ELSE ( jump ) , 1 , 0 )"	378:6:12740:12777	5609733	3	True				
ANR	5611421	CallExpression	"sdb_num_set ( db , K_ELSE ( jump ) , 1 , 0 )"		5609733	0					
ANR	5611422	Callee	sdb_num_set		5609733	0					
ANR	5611423	Identifier	sdb_num_set		5609733	0					
ANR	5611424	ArgumentList	db		5609733	1					
ANR	5611425	Argument	db		5609733	0					
ANR	5611426	Identifier	db		5609733	0					
ANR	5611427	Argument	K_ELSE ( jump )		5609733	1					
ANR	5611428	CallExpression	K_ELSE ( jump )		5609733	0					
ANR	5611429	Callee	K_ELSE		5609733	0					
ANR	5611430	Identifier	K_ELSE		5609733	0					
ANR	5611431	ArgumentList	jump		5609733	1					
ANR	5611432	Argument	jump		5609733	0					
ANR	5611433	Identifier	jump		5609733	0					
ANR	5611434	Argument	1		5609733	2					
ANR	5611435	PrimaryExpression	1		5609733	0					
ANR	5611436	Argument	0		5609733	3					
ANR	5611437	PrimaryExpression	0		5609733	0					
ANR	5611438	IfStatement	if ( jump <= bb -> addr )		5609733	4					
ANR	5611439	Condition	jump <= bb -> addr	379:10:12789:12804	5609733	0	True				
ANR	5611440	RelationalExpression	jump <= bb -> addr		5609733	0		<=			
ANR	5611441	Identifier	jump		5609733	0					
ANR	5611442	PtrMemberAccess	bb -> addr		5609733	1					
ANR	5611443	Identifier	bb		5609733	0					
ANR	5611444	Identifier	addr		5609733	1					
ANR	5611445	CompoundStatement		211:28:7154:7154	5609733	1					
ANR	5611446	ExpressionStatement	"blocktype = ""while"""	380:7:12816:12835	5609733	0	True				
ANR	5611447	AssignmentExpression	"blocktype = ""while"""		5609733	0		=			
ANR	5611448	Identifier	blocktype		5609733	0					
ANR	5611449	PrimaryExpression	"""while"""		5609733	1					
ANR	5611450	ElseStatement	else		5609733	0					
ANR	5611451	CompoundStatement		213:13:7197:7197	5609733	0					
ANR	5611452	ExpressionStatement	"blocktype = ""else"""	382:7:12859:12877	5609733	0	True				
ANR	5611453	AssignmentExpression	"blocktype = ""else"""		5609733	0		=			
ANR	5611454	Identifier	blocktype		5609733	0					
ANR	5611455	PrimaryExpression	"""else"""		5609733	1					
ANR	5611456	ExpressionStatement	"r_cons_printf ( ""\\n%s {"" , indentstr )"	384:6:12893:12928	5609733	5	True				
ANR	5611457	CallExpression	"r_cons_printf ( ""\\n%s {"" , indentstr )"		5609733	0					
ANR	5611458	Callee	r_cons_printf		5609733	0					
ANR	5611459	Identifier	r_cons_printf		5609733	0					
ANR	5611460	ArgumentList	"""\\n%s {"""		5609733	1					
ANR	5611461	Argument	"""\\n%s {"""		5609733	0					
ANR	5611462	PrimaryExpression	"""\\n%s {"""		5609733	0					
ANR	5611463	Argument	indentstr		5609733	1					
ANR	5611464	Identifier	indentstr		5609733	0					
ANR	5611465	ExpressionStatement	indent ++	385:6:12936:12944	5609733	6	True				
ANR	5611466	PostIncDecOperationExpression	indent ++		5609733	0					
ANR	5611467	Identifier	indent		5609733	0					
ANR	5611468	IncDec	++		5609733	1					
ANR	5611469	ElseStatement	else		5609733	0					
ANR	5611470	CompoundStatement		221:4:7322:7372	5609733	0					
ANR	5611471	IdentifierDeclStatement	"ut64 addr = sdb_array_pop_num ( db , ""indent"" , NULL ) ;"	389:4:12975:13025	5609733	0	True				
ANR	5611472	IdentifierDecl	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		5609733	0					
ANR	5611473	IdentifierDeclType	ut64		5609733	0					
ANR	5611474	Identifier	addr		5609733	1					
ANR	5611475	AssignmentExpression	"addr = sdb_array_pop_num ( db , ""indent"" , NULL )"		5609733	2		=			
ANR	5611476	Identifier	addr		5609733	0					
ANR	5611477	CallExpression	"sdb_array_pop_num ( db , ""indent"" , NULL )"		5609733	1					
ANR	5611478	Callee	sdb_array_pop_num		5609733	0					
ANR	5611479	Identifier	sdb_array_pop_num		5609733	0					
ANR	5611480	ArgumentList	db		5609733	1					
ANR	5611481	Argument	db		5609733	0					
ANR	5611482	Identifier	db		5609733	0					
ANR	5611483	Argument	"""indent"""		5609733	1					
ANR	5611484	PrimaryExpression	"""indent"""		5609733	0					
ANR	5611485	Argument	NULL		5609733	2					
ANR	5611486	Identifier	NULL		5609733	0					
ANR	5611487	IfStatement	if ( addr == UT64_MAX )		5609733	1					
ANR	5611488	Condition	addr == UT64_MAX	390:8:13035:13050	5609733	0	True				
ANR	5611489	EqualityExpression	addr == UT64_MAX		5609733	0		==			
ANR	5611490	Identifier	addr		5609733	0					
ANR	5611491	Identifier	UT64_MAX		5609733	1					
ANR	5611492	CompoundStatement		222:26:7400:7400	5609733	1					
ANR	5611493	ExpressionStatement	"r_cons_printf ( ""\\n(break)\\n"" )"	391:5:13060:13089	5609733	0	True				
ANR	5611494	CallExpression	"r_cons_printf ( ""\\n(break)\\n"" )"		5609733	0					
ANR	5611495	Callee	r_cons_printf		5609733	0					
ANR	5611496	Identifier	r_cons_printf		5609733	0					
ANR	5611497	ArgumentList	"""\\n(break)\\n"""		5609733	1					
ANR	5611498	Argument	"""\\n(break)\\n"""		5609733	0					
ANR	5611499	PrimaryExpression	"""\\n(break)\\n"""		5609733	0					
ANR	5611500	BreakStatement	break ;	392:5:13096:13101	5609733	1	True				
ANR	5611501	ExpressionStatement	"bb = r_anal_bb_from_offset ( core -> anal , addr )"	394:4:13113:13158	5609733	2	True				
ANR	5611502	AssignmentExpression	"bb = r_anal_bb_from_offset ( core -> anal , addr )"		5609733	0		=			
ANR	5611503	Identifier	bb		5609733	0					
ANR	5611504	CallExpression	"r_anal_bb_from_offset ( core -> anal , addr )"		5609733	1					
ANR	5611505	Callee	r_anal_bb_from_offset		5609733	0					
ANR	5611506	Identifier	r_anal_bb_from_offset		5609733	0					
ANR	5611507	ArgumentList	core -> anal		5609733	1					
ANR	5611508	Argument	core -> anal		5609733	0					
ANR	5611509	PtrMemberAccess	core -> anal		5609733	0					
ANR	5611510	Identifier	core		5609733	0					
ANR	5611511	Identifier	anal		5609733	1					
ANR	5611512	Argument	addr		5609733	1					
ANR	5611513	Identifier	addr		5609733	0					
ANR	5611514	ExpressionStatement	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"	395:4:13164:13213	5609733	3	True				
ANR	5611515	AssignmentExpression	"nindent = sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		5609733	0		=			
ANR	5611516	Identifier	nindent		5609733	0					
ANR	5611517	CallExpression	"sdb_num_get ( db , K_INDENT ( addr ) , NULL )"		5609733	1					
ANR	5611518	Callee	sdb_num_get		5609733	0					
ANR	5611519	Identifier	sdb_num_get		5609733	0					
ANR	5611520	ArgumentList	db		5609733	1					
ANR	5611521	Argument	db		5609733	0					
ANR	5611522	Identifier	db		5609733	0					
ANR	5611523	Argument	K_INDENT ( addr )		5609733	1					
ANR	5611524	CallExpression	K_INDENT ( addr )		5609733	0					
ANR	5611525	Callee	K_INDENT		5609733	0					
ANR	5611526	Identifier	K_INDENT		5609733	0					
ANR	5611527	ArgumentList	addr		5609733	1					
ANR	5611528	Argument	addr		5609733	0					
ANR	5611529	Identifier	addr		5609733	0					
ANR	5611530	Argument	NULL		5609733	2					
ANR	5611531	Identifier	NULL		5609733	0					
ANR	5611532	IfStatement	if ( indent > nindent )		5609733	4					
ANR	5611533	Condition	indent > nindent	396:8:13223:13238	5609733	0	True				
ANR	5611534	RelationalExpression	indent > nindent		5609733	0		>			
ANR	5611535	Identifier	indent		5609733	0					
ANR	5611536	Identifier	nindent		5609733	1					
ANR	5611537	CompoundStatement		229:5:7595:7600	5609733	1					
ANR	5611538	IdentifierDeclStatement	int i ;	397:5:13248:13253	5609733	0	True				
ANR	5611539	IdentifierDecl	i		5609733	0					
ANR	5611540	IdentifierDeclType	int		5609733	0					
ANR	5611541	Identifier	i		5609733	1					
ANR	5611542	ForStatement	for ( i = indent ; i != nindent ; i -- )		5609733	1					
ANR	5611543	ForInit	i = indent ;	398:10:13265:13275	5609733	0	True				
ANR	5611544	AssignmentExpression	i = indent		5609733	0		=			
ANR	5611545	Identifier	i		5609733	0					
ANR	5611546	Identifier	indent		5609733	1					
ANR	5611547	Condition	i != nindent	398:22:13277:13288	5609733	1	True				
ANR	5611548	EqualityExpression	i != nindent		5609733	0		!=			
ANR	5611549	Identifier	i		5609733	0					
ANR	5611550	Identifier	nindent		5609733	1					
ANR	5611551	PostIncDecOperationExpression	i --	398:36:13291:13293	5609733	2	True				
ANR	5611552	Identifier	i		5609733	0					
ANR	5611553	IncDec	--		5609733	1					
ANR	5611554	CompoundStatement		230:41:7643:7643	5609733	3					
ANR	5611555	ExpressionStatement	SET_INDENT ( i )	399:6:13304:13318	5609733	0	True				
ANR	5611556	CallExpression	SET_INDENT ( i )		5609733	0					
ANR	5611557	Callee	SET_INDENT		5609733	0					
ANR	5611558	Identifier	SET_INDENT		5609733	0					
ANR	5611559	ArgumentList	i		5609733	1					
ANR	5611560	Argument	i		5609733	0					
ANR	5611561	Identifier	i		5609733	0					
ANR	5611562	ExpressionStatement	"r_cons_printf ( ""\\n%s}"" , indentstr )"	400:6:13326:13360	5609733	1	True				
ANR	5611563	CallExpression	"r_cons_printf ( ""\\n%s}"" , indentstr )"		5609733	0					
ANR	5611564	Callee	r_cons_printf		5609733	0					
ANR	5611565	Identifier	r_cons_printf		5609733	0					
ANR	5611566	ArgumentList	"""\\n%s}"""		5609733	1					
ANR	5611567	Argument	"""\\n%s}"""		5609733	0					
ANR	5611568	PrimaryExpression	"""\\n%s}"""		5609733	0					
ANR	5611569	Argument	indentstr		5609733	1					
ANR	5611570	Identifier	indentstr		5609733	0					
ANR	5611571	IfStatement	if ( nindent != indent )		5609733	5					
ANR	5611572	Condition	nindent != indent	403:8:13383:13399	5609733	0	True				
ANR	5611573	EqualityExpression	nindent != indent		5609733	0		!=			
ANR	5611574	Identifier	nindent		5609733	0					
ANR	5611575	Identifier	indent		5609733	1					
ANR	5611576	CompoundStatement		235:27:7749:7749	5609733	1					
ANR	5611577	ExpressionStatement	"r_cons_printf ( ""\\n%s} else {\\n"" , indentstr )"	404:5:13409:13452	5609733	0	True				
ANR	5611578	CallExpression	"r_cons_printf ( ""\\n%s} else {\\n"" , indentstr )"		5609733	0					
ANR	5611579	Callee	r_cons_printf		5609733	0					
ANR	5611580	Identifier	r_cons_printf		5609733	0					
ANR	5611581	ArgumentList	"""\\n%s} else {\\n"""		5609733	1					
ANR	5611582	Argument	"""\\n%s} else {\\n"""		5609733	0					
ANR	5611583	PrimaryExpression	"""\\n%s} else {\\n"""		5609733	0					
ANR	5611584	Argument	indentstr		5609733	1					
ANR	5611585	Identifier	indentstr		5609733	0					
ANR	5611586	ExpressionStatement	indent = nindent	406:4:13464:13480	5609733	6	True				
ANR	5611587	AssignmentExpression	indent = nindent		5609733	0		=			
ANR	5611588	Identifier	indent		5609733	0					
ANR	5611589	Identifier	nindent		5609733	1					
ANR	5611590	Condition	n_bb > 0	410:10:13514:13521	5609733	1	True				
ANR	5611591	RelationalExpression	n_bb > 0		5609733	0		>			
ANR	5611592	Identifier	n_bb		5609733	0					
ANR	5611593	PrimaryExpression	0		5609733	1					
ANR	5611594	ExpressionStatement	r_list_free ( visited )	411:1:13526:13547	5609733	48	True				
ANR	5611595	CallExpression	r_list_free ( visited )		5609733	0					
ANR	5611596	Callee	r_list_free		5609733	0					
ANR	5611597	Identifier	r_list_free		5609733	0					
ANR	5611598	ArgumentList	visited		5609733	1					
ANR	5611599	Argument	visited		5609733	0					
ANR	5611600	Identifier	visited		5609733	0					
ANR	5611601	ExpressionStatement	"r_cons_printf ( ""\\n}\\n"" )"	412:1:13550:13573	5609733	49	True				
ANR	5611602	CallExpression	"r_cons_printf ( ""\\n}\\n"" )"		5609733	0					
ANR	5611603	Callee	r_cons_printf		5609733	0					
ANR	5611604	Identifier	r_cons_printf		5609733	0					
ANR	5611605	ArgumentList	"""\\n}\\n"""		5609733	1					
ANR	5611606	Argument	"""\\n}\\n"""		5609733	0					
ANR	5611607	PrimaryExpression	"""\\n}\\n"""		5609733	0					
ANR	5611608	ExpressionStatement	r_config_hold_restore ( hc )	413:1:13576:13602	5609733	50	True				
ANR	5611609	CallExpression	r_config_hold_restore ( hc )		5609733	0					
ANR	5611610	Callee	r_config_hold_restore		5609733	0					
ANR	5611611	Identifier	r_config_hold_restore		5609733	0					
ANR	5611612	ArgumentList	hc		5609733	1					
ANR	5611613	Argument	hc		5609733	0					
ANR	5611614	Identifier	hc		5609733	0					
ANR	5611615	ExpressionStatement	r_config_hold_free ( hc )	414:1:13605:13628	5609733	51	True				
ANR	5611616	CallExpression	r_config_hold_free ( hc )		5609733	0					
ANR	5611617	Callee	r_config_hold_free		5609733	0					
ANR	5611618	Identifier	r_config_hold_free		5609733	0					
ANR	5611619	ArgumentList	hc		5609733	1					
ANR	5611620	Argument	hc		5609733	0					
ANR	5611621	Identifier	hc		5609733	0					
ANR	5611622	ExpressionStatement	sdb_free ( db )	415:1:13631:13644	5609733	52	True				
ANR	5611623	CallExpression	sdb_free ( db )		5609733	0					
ANR	5611624	Callee	sdb_free		5609733	0					
ANR	5611625	Identifier	sdb_free		5609733	0					
ANR	5611626	ArgumentList	db		5609733	1					
ANR	5611627	Argument	db		5609733	0					
ANR	5611628	Identifier	db		5609733	0					
ANR	5611629	ReturnStatement	return true ;	416:1:13647:13658	5609733	53	True				
ANR	5611630	Identifier	true		5609733	0					
ANR	5611631	ReturnType	R_API int		5609733	1					
ANR	5611632	Identifier	r_core_pseudo_code		5609733	2					
ANR	5611633	ParameterList	"RCore * core , const char * input"		5609733	3					
ANR	5611634	Parameter	RCore * core	169:29:5620:5630	5609733	0	True				
ANR	5611635	ParameterType	RCore *		5609733	0					
ANR	5611636	Identifier	core		5609733	1					
ANR	5611637	Parameter	const char * input	169:42:5633:5649	5609733	1	True				
ANR	5611638	ParameterType	const char *		5609733	0					
ANR	5611639	Identifier	input		5609733	1					
ANR	5611640	CFGEntryNode	ENTRY		5609733		True				
ANR	5611641	CFGExitNode	EXIT		5609733		True				
ANR	5611642	Symbol	n_bb		5609733						
ANR	5611643	Symbol	r_core_cmdf		5609733						
ANR	5611644	Symbol	* fcn		5609733						
ANR	5611645	Symbol	curfcn		5609733						
ANR	5611646	Symbol	fcn -> name		5609733						
ANR	5611647	Symbol	core -> offset		5609733						
ANR	5611648	Symbol	bb -> addr		5609733						
ANR	5611649	Symbol	sdb_const_get		5609733						
ANR	5611650	Symbol	mustprint		5609733						
ANR	5611651	Symbol	strlen		5609733						
ANR	5611652	Symbol	len		5609733						
ANR	5611653	Symbol	* I_TAB		5609733						
ANR	5611654	Symbol	html		5609733						
ANR	5611655	Symbol	K_MARK		5609733						
ANR	5611656	Symbol	* indentstr		5609733						
ANR	5611657	Symbol	jump		5609733						
ANR	5611658	Symbol	strcmp		5609733						
ANR	5611659	Symbol	NULL		5609733						
ANR	5611660	Symbol	r_list_newf		5609733						
ANR	5611661	Symbol	swap		5609733						
ANR	5611662	Symbol	queuegoto		5609733						
ANR	5611663	Symbol	nbb		5609733						
ANR	5611664	Symbol	r_list_contains		5609733						
ANR	5611665	Symbol	core		5609733						
ANR	5611666	Symbol	input		5609733						
ANR	5611667	Symbol	fail		5609733						
ANR	5611668	Symbol	strstr		5609733						
ANR	5611669	Symbol	r_config_get_i		5609733						
ANR	5611670	Symbol	true		5609733						
ANR	5611671	Symbol	* code		5609733						
ANR	5611672	Symbol	bb		5609733						
ANR	5611673	Symbol	* indent		5609733						
ANR	5611674	Symbol	sdb_array_pop_num		5609733						
ANR	5611675	Symbol	code		5609733						
ANR	5611676	Symbol	r_anal_bb_from_offset		5609733						
ANR	5611677	Symbol	indent		5609733						
ANR	5611678	Symbol	K_INDENT		5609733						
ANR	5611679	Symbol	r_config_get		5609733						
ANR	5611680	Symbol	* core		5609733						
ANR	5611681	Symbol	blocktype		5609733						
ANR	5611682	Symbol	cmdPdc		5609733						
ANR	5611683	Symbol	core -> anal		5609733						
ANR	5611684	Symbol	nindent		5609733						
ANR	5611685	Symbol	I_TAB		5609733						
ANR	5611686	Symbol	fcn		5609733						
ANR	5611687	Symbol	r_list_first		5609733						
ANR	5611688	Symbol	r_str_prefix_all		5609733						
ANR	5611689	Symbol	r_config_hold_new		5609733						
ANR	5611690	Symbol	indentstr		5609733						
ANR	5611691	Symbol	* cmdPdc		5609733						
ANR	5611692	Symbol	addr		5609733						
ANR	5611693	Symbol	UT64_MAX		5609733						
ANR	5611694	Symbol	core -> config		5609733						
ANR	5611695	Symbol	bb -> fail		5609733						
ANR	5611696	Symbol	sdb_num_get		5609733						
ANR	5611697	Symbol	sdb_new0		5609733						
ANR	5611698	Symbol	R_ANAL_FCN_TYPE_NULL		5609733						
ANR	5611699	Symbol	* * I_TAB		5609733						
ANR	5611700	Symbol	* bb		5609733						
ANR	5611701	Symbol	false		5609733						
ANR	5611702	Symbol	i		5609733						
ANR	5611703	Symbol	sdb_get		5609733						
ANR	5611704	Symbol	bb -> jump		5609733						
ANR	5611705	Symbol	r_anal_get_fcn_in		5609733						
ANR	5611706	Symbol	fcn -> bbs		5609733						
ANR	5611707	Symbol	visited		5609733						
ANR	5611708	Symbol	x		5609733						
ANR	5611709	Symbol	hc		5609733						
ANR	5611710	Symbol	K_ELSE		5609733						
ANR	5611711	Symbol	db		5609733						
ANR	5611712	Symbol	r_list_length		5609733						
ANR	5611713	Symbol	* len		5609733						
