command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5314699	File	data/converged/CVE-2019-16718~_radare2/list.c								
ANR	5314700	Function	r_list_iter_new	9:0:158:236							
ANR	5314701	FunctionDef	r_list_iter_new ()		5314700	0					
ANR	5314702	CompoundStatement		9:36:194:236	5314700	0					
ANR	5314703	ReturnStatement	"return calloc ( 1 , sizeof ( RListIter ) ) ;"	10:1:197:234	5314700	0	True				
ANR	5314704	CallExpression	"calloc ( 1 , sizeof ( RListIter ) )"		5314700	0					
ANR	5314705	Callee	calloc		5314700	0					
ANR	5314706	Identifier	calloc		5314700	0					
ANR	5314707	ArgumentList	1		5314700	1					
ANR	5314708	Argument	1		5314700	0					
ANR	5314709	PrimaryExpression	1		5314700	0					
ANR	5314710	Argument	sizeof ( RListIter )		5314700	1					
ANR	5314711	SizeofExpression	sizeof ( RListIter )		5314700	0					
ANR	5314712	Sizeof	sizeof		5314700	0					
ANR	5314713	SizeofOperand	RListIter		5314700	1					
ANR	5314714	ReturnType	inline RListIter *		5314700	1					
ANR	5314715	Identifier	r_list_iter_new		5314700	2					
ANR	5314716	ParameterList			5314700	3					
ANR	5314717	CFGEntryNode	ENTRY		5314700		True				
ANR	5314718	CFGExitNode	EXIT		5314700		True				
ANR	5314719	Symbol	calloc		5314700						
ANR	5314720	Function	r_list_iter_free	13:0:239:305							
ANR	5314721	FunctionDef	r_list_iter_free (RListIter * list)		5314720	0					
ANR	5314722	CompoundStatement		13:45:284:305	5314720	0					
ANR	5314723	ReturnType	R_API void		5314720	1					
ANR	5314724	Identifier	r_list_iter_free		5314720	2					
ANR	5314725	ParameterList	RListIter * list		5314720	3					
ANR	5314726	Parameter	RListIter * list	13:28:267:281	5314720	0	True				
ANR	5314727	ParameterType	RListIter *		5314720	0					
ANR	5314728	Identifier	list		5314720	1					
ANR	5314729	CFGEntryNode	ENTRY		5314720		True				
ANR	5314730	CFGExitNode	EXIT		5314720		True				
ANR	5314731	Symbol	list		5314720						
ANR	5314732	Function	r_list_iter_get_next	17:0:308:418							
ANR	5314733	FunctionDef	r_list_iter_get_next (RListIter * list)		5314732	0					
ANR	5314734	CompoundStatement		17:55:363:418	5314732	0					
ANR	5314735	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	18:1:366:399	5314732	0	True				
ANR	5314736	CallExpression	"r_return_val_if_fail ( list , NULL )"		5314732	0					
ANR	5314737	Callee	r_return_val_if_fail		5314732	0					
ANR	5314738	Identifier	r_return_val_if_fail		5314732	0					
ANR	5314739	ArgumentList	list		5314732	1					
ANR	5314740	Argument	list		5314732	0					
ANR	5314741	Identifier	list		5314732	0					
ANR	5314742	Argument	NULL		5314732	1					
ANR	5314743	Identifier	NULL		5314732	0					
ANR	5314744	ReturnStatement	return list -> n ;	19:1:402:416	5314732	1	True				
ANR	5314745	PtrMemberAccess	list -> n		5314732	0					
ANR	5314746	Identifier	list		5314732	0					
ANR	5314747	Identifier	n		5314732	1					
ANR	5314748	ReturnType	R_API RListIter *		5314732	1					
ANR	5314749	Identifier	r_list_iter_get_next		5314732	2					
ANR	5314750	ParameterList	RListIter * list		5314732	3					
ANR	5314751	Parameter	RListIter * list	17:38:346:360	5314732	0	True				
ANR	5314752	ParameterType	RListIter *		5314732	0					
ANR	5314753	Identifier	list		5314732	1					
ANR	5314754	CFGEntryNode	ENTRY		5314732		True				
ANR	5314755	CFGExitNode	EXIT		5314732		True				
ANR	5314756	Symbol	list -> n		5314732						
ANR	5314757	Symbol	NULL		5314732						
ANR	5314758	Symbol	* list		5314732						
ANR	5314759	Symbol	list		5314732						
ANR	5314760	Function	r_list_iter_get_data	22:0:421:529							
ANR	5314761	FunctionDef	r_list_iter_get_data (RListIter * list)		5314760	0					
ANR	5314762	CompoundStatement		22:50:471:529	5314760	0					
ANR	5314763	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	23:1:474:507	5314760	0	True				
ANR	5314764	CallExpression	"r_return_val_if_fail ( list , NULL )"		5314760	0					
ANR	5314765	Callee	r_return_val_if_fail		5314760	0					
ANR	5314766	Identifier	r_return_val_if_fail		5314760	0					
ANR	5314767	ArgumentList	list		5314760	1					
ANR	5314768	Argument	list		5314760	0					
ANR	5314769	Identifier	list		5314760	0					
ANR	5314770	Argument	NULL		5314760	1					
ANR	5314771	Identifier	NULL		5314760	0					
ANR	5314772	ReturnStatement	return list -> data ;	24:1:510:527	5314760	1	True				
ANR	5314773	PtrMemberAccess	list -> data		5314760	0					
ANR	5314774	Identifier	list		5314760	0					
ANR	5314775	Identifier	data		5314760	1					
ANR	5314776	ReturnType	R_API void *		5314760	1					
ANR	5314777	Identifier	r_list_iter_get_data		5314760	2					
ANR	5314778	ParameterList	RListIter * list		5314760	3					
ANR	5314779	Parameter	RListIter * list	22:33:454:468	5314760	0	True				
ANR	5314780	ParameterType	RListIter *		5314760	0					
ANR	5314781	Identifier	list		5314760	1					
ANR	5314782	CFGEntryNode	ENTRY		5314760		True				
ANR	5314783	CFGExitNode	EXIT		5314760		True				
ANR	5314784	Symbol	NULL		5314760						
ANR	5314785	Symbol	* list		5314760						
ANR	5314786	Symbol	list		5314760						
ANR	5314787	Symbol	list -> data		5314760						
ANR	5314788	Function	r_list_iterator	27:0:532:642							
ANR	5314789	FunctionDef	r_list_iterator (const RList * list)		5314788	0					
ANR	5314790	CompoundStatement		27:52:584:642	5314788	0					
ANR	5314791	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	28:1:587:620	5314788	0	True				
ANR	5314792	CallExpression	"r_return_val_if_fail ( list , NULL )"		5314788	0					
ANR	5314793	Callee	r_return_val_if_fail		5314788	0					
ANR	5314794	Identifier	r_return_val_if_fail		5314788	0					
ANR	5314795	ArgumentList	list		5314788	1					
ANR	5314796	Argument	list		5314788	0					
ANR	5314797	Identifier	list		5314788	0					
ANR	5314798	Argument	NULL		5314788	1					
ANR	5314799	Identifier	NULL		5314788	0					
ANR	5314800	ReturnStatement	return list -> head ;	29:1:623:640	5314788	1	True				
ANR	5314801	PtrMemberAccess	list -> head		5314788	0					
ANR	5314802	Identifier	list		5314788	0					
ANR	5314803	Identifier	head		5314788	1					
ANR	5314804	ReturnType	R_API RListIter *		5314788	1					
ANR	5314805	Identifier	r_list_iterator		5314788	2					
ANR	5314806	ParameterList	const RList * list		5314788	3					
ANR	5314807	Parameter	const RList * list	27:33:565:581	5314788	0	True				
ANR	5314808	ParameterType	const RList *		5314788	0					
ANR	5314809	Identifier	list		5314788	1					
ANR	5314810	CFGEntryNode	ENTRY		5314788		True				
ANR	5314811	CFGExitNode	EXIT		5314788		True				
ANR	5314812	Symbol	list -> head		5314788						
ANR	5314813	Symbol	NULL		5314788						
ANR	5314814	Symbol	* list		5314788						
ANR	5314815	Symbol	list		5314788						
ANR	5314816	Function	r_list_push	32:0:645:737							
ANR	5314817	FunctionDef	"r_list_push (RList * list , void * item)"		5314816	0					
ANR	5314818	CompoundStatement		32:54:699:737	5314816	0					
ANR	5314819	ReturnStatement	"return r_list_append ( list , item ) ;"	33:1:702:735	5314816	0	True				
ANR	5314820	CallExpression	"r_list_append ( list , item )"		5314816	0					
ANR	5314821	Callee	r_list_append		5314816	0					
ANR	5314822	Identifier	r_list_append		5314816	0					
ANR	5314823	ArgumentList	list		5314816	1					
ANR	5314824	Argument	list		5314816	0					
ANR	5314825	Identifier	list		5314816	0					
ANR	5314826	Argument	item		5314816	1					
ANR	5314827	Identifier	item		5314816	0					
ANR	5314828	ReturnType	R_API RListIter *		5314816	1					
ANR	5314829	Identifier	r_list_push		5314816	2					
ANR	5314830	ParameterList	"RList * list , void * item"		5314816	3					
ANR	5314831	Parameter	RList * list	32:29:674:684	5314816	0	True				
ANR	5314832	ParameterType	RList *		5314816	0					
ANR	5314833	Identifier	list		5314816	1					
ANR	5314834	Parameter	void * item	32:42:687:696	5314816	1	True				
ANR	5314835	ParameterType	void *		5314816	0					
ANR	5314836	Identifier	item		5314816	1					
ANR	5314837	CFGEntryNode	ENTRY		5314816		True				
ANR	5314838	CFGExitNode	EXIT		5314816		True				
ANR	5314839	Symbol	item		5314816						
ANR	5314840	Symbol	r_list_append		5314816						
ANR	5314841	Symbol	list		5314816						
ANR	5314842	Function	r_list_get_next	36:0:740:845							
ANR	5314843	FunctionDef	r_list_get_next (RListIter * list)		5314842	0					
ANR	5314844	CompoundStatement		36:50:790:845	5314842	0					
ANR	5314845	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	37:1:793:826	5314842	0	True				
ANR	5314846	CallExpression	"r_return_val_if_fail ( list , NULL )"		5314842	0					
ANR	5314847	Callee	r_return_val_if_fail		5314842	0					
ANR	5314848	Identifier	r_return_val_if_fail		5314842	0					
ANR	5314849	ArgumentList	list		5314842	1					
ANR	5314850	Argument	list		5314842	0					
ANR	5314851	Identifier	list		5314842	0					
ANR	5314852	Argument	NULL		5314842	1					
ANR	5314853	Identifier	NULL		5314842	0					
ANR	5314854	ReturnStatement	return list -> n ;	38:1:829:843	5314842	1	True				
ANR	5314855	PtrMemberAccess	list -> n		5314842	0					
ANR	5314856	Identifier	list		5314842	0					
ANR	5314857	Identifier	n		5314842	1					
ANR	5314858	ReturnType	R_API RListIter *		5314842	1					
ANR	5314859	Identifier	r_list_get_next		5314842	2					
ANR	5314860	ParameterList	RListIter * list		5314842	3					
ANR	5314861	Parameter	RListIter * list	36:33:773:787	5314842	0	True				
ANR	5314862	ParameterType	RListIter *		5314842	0					
ANR	5314863	Identifier	list		5314842	1					
ANR	5314864	CFGEntryNode	ENTRY		5314842		True				
ANR	5314865	CFGExitNode	EXIT		5314842		True				
ANR	5314866	Symbol	list -> n		5314842						
ANR	5314867	Symbol	NULL		5314842						
ANR	5314868	Symbol	* list		5314842						
ANR	5314869	Symbol	list		5314842						
ANR	5314870	Function	r_list_first	42:0:872:1000							
ANR	5314871	FunctionDef	r_list_first (const RList * list)		5314870	0					
ANR	5314872	CompoundStatement		42:44:916:1000	5314870	0					
ANR	5314873	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	43:1:919:952	5314870	0	True				
ANR	5314874	CallExpression	"r_return_val_if_fail ( list , NULL )"		5314870	0					
ANR	5314875	Callee	r_return_val_if_fail		5314870	0					
ANR	5314876	Identifier	r_return_val_if_fail		5314870	0					
ANR	5314877	ArgumentList	list		5314870	1					
ANR	5314878	Argument	list		5314870	0					
ANR	5314879	Identifier	list		5314870	0					
ANR	5314880	Argument	NULL		5314870	1					
ANR	5314881	Identifier	NULL		5314870	0					
ANR	5314882	ReturnStatement	return list -> head ? list -> head -> data : NULL ;	44:1:955:998	5314870	1	True				
ANR	5314883	ConditionalExpression	list -> head ? list -> head -> data : NULL		5314870	0					
ANR	5314884	Condition	list -> head		5314870	0					
ANR	5314885	PtrMemberAccess	list -> head		5314870	0					
ANR	5314886	Identifier	list		5314870	0					
ANR	5314887	Identifier	head		5314870	1					
ANR	5314888	PtrMemberAccess	list -> head -> data		5314870	1					
ANR	5314889	PtrMemberAccess	list -> head		5314870	0					
ANR	5314890	Identifier	list		5314870	0					
ANR	5314891	Identifier	head		5314870	1					
ANR	5314892	Identifier	data		5314870	1					
ANR	5314893	Identifier	NULL		5314870	2					
ANR	5314894	ReturnType	R_API void *		5314870	1					
ANR	5314895	Identifier	r_list_first		5314870	2					
ANR	5314896	ParameterList	const RList * list		5314870	3					
ANR	5314897	Parameter	const RList * list	42:25:897:913	5314870	0	True				
ANR	5314898	ParameterType	const RList *		5314870	0					
ANR	5314899	Identifier	list		5314870	1					
ANR	5314900	CFGEntryNode	ENTRY		5314870		True				
ANR	5314901	CFGExitNode	EXIT		5314870		True				
ANR	5314902	Symbol	list -> head		5314870						
ANR	5314903	Symbol	* list -> head		5314870						
ANR	5314904	Symbol	NULL		5314870						
ANR	5314905	Symbol	* * list		5314870						
ANR	5314906	Symbol	* list		5314870						
ANR	5314907	Symbol	list -> head -> data		5314870						
ANR	5314908	Symbol	list		5314870						
ANR	5314909	Function	r_list_last	47:0:1003:1130							
ANR	5314910	FunctionDef	r_list_last (const RList * list)		5314909	0					
ANR	5314911	CompoundStatement		47:43:1046:1130	5314909	0					
ANR	5314912	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	48:1:1049:1082	5314909	0	True				
ANR	5314913	CallExpression	"r_return_val_if_fail ( list , NULL )"		5314909	0					
ANR	5314914	Callee	r_return_val_if_fail		5314909	0					
ANR	5314915	Identifier	r_return_val_if_fail		5314909	0					
ANR	5314916	ArgumentList	list		5314909	1					
ANR	5314917	Argument	list		5314909	0					
ANR	5314918	Identifier	list		5314909	0					
ANR	5314919	Argument	NULL		5314909	1					
ANR	5314920	Identifier	NULL		5314909	0					
ANR	5314921	ReturnStatement	return list -> tail ? list -> tail -> data : NULL ;	49:1:1085:1128	5314909	1	True				
ANR	5314922	ConditionalExpression	list -> tail ? list -> tail -> data : NULL		5314909	0					
ANR	5314923	Condition	list -> tail		5314909	0					
ANR	5314924	PtrMemberAccess	list -> tail		5314909	0					
ANR	5314925	Identifier	list		5314909	0					
ANR	5314926	Identifier	tail		5314909	1					
ANR	5314927	PtrMemberAccess	list -> tail -> data		5314909	1					
ANR	5314928	PtrMemberAccess	list -> tail		5314909	0					
ANR	5314929	Identifier	list		5314909	0					
ANR	5314930	Identifier	tail		5314909	1					
ANR	5314931	Identifier	data		5314909	1					
ANR	5314932	Identifier	NULL		5314909	2					
ANR	5314933	ReturnType	R_API void *		5314909	1					
ANR	5314934	Identifier	r_list_last		5314909	2					
ANR	5314935	ParameterList	const RList * list		5314909	3					
ANR	5314936	Parameter	const RList * list	47:24:1027:1043	5314909	0	True				
ANR	5314937	ParameterType	const RList *		5314909	0					
ANR	5314938	Identifier	list		5314909	1					
ANR	5314939	CFGEntryNode	ENTRY		5314909		True				
ANR	5314940	CFGExitNode	EXIT		5314909		True				
ANR	5314941	Symbol	NULL		5314909						
ANR	5314942	Symbol	* * list		5314909						
ANR	5314943	Symbol	* list		5314909						
ANR	5314944	Symbol	* list -> tail		5314909						
ANR	5314945	Symbol	list -> tail -> data		5314909						
ANR	5314946	Symbol	list		5314909						
ANR	5314947	Symbol	list -> tail		5314909						
ANR	5314948	Function	r_list_init	52:0:1133:1273							
ANR	5314949	FunctionDef	r_list_init (RList * list)		5314948	0					
ANR	5314950	CompoundStatement		52:36:1169:1273	5314948	0					
ANR	5314951	ExpressionStatement	list -> head = NULL	53:1:1172:1189	5314948	0	True				
ANR	5314952	AssignmentExpression	list -> head = NULL		5314948	0		=			
ANR	5314953	PtrMemberAccess	list -> head		5314948	0					
ANR	5314954	Identifier	list		5314948	0					
ANR	5314955	Identifier	head		5314948	1					
ANR	5314956	Identifier	NULL		5314948	1					
ANR	5314957	ExpressionStatement	list -> tail = NULL	54:1:1192:1209	5314948	1	True				
ANR	5314958	AssignmentExpression	list -> tail = NULL		5314948	0		=			
ANR	5314959	PtrMemberAccess	list -> tail		5314948	0					
ANR	5314960	Identifier	list		5314948	0					
ANR	5314961	Identifier	tail		5314948	1					
ANR	5314962	Identifier	NULL		5314948	1					
ANR	5314963	ExpressionStatement	list -> free = NULL	55:1:1212:1229	5314948	2	True				
ANR	5314964	AssignmentExpression	list -> free = NULL		5314948	0		=			
ANR	5314965	PtrMemberAccess	list -> free		5314948	0					
ANR	5314966	Identifier	list		5314948	0					
ANR	5314967	Identifier	free		5314948	1					
ANR	5314968	Identifier	NULL		5314948	1					
ANR	5314969	ExpressionStatement	list -> length = 0	56:1:1232:1248	5314948	3	True				
ANR	5314970	AssignmentExpression	list -> length = 0		5314948	0		=			
ANR	5314971	PtrMemberAccess	list -> length		5314948	0					
ANR	5314972	Identifier	list		5314948	0					
ANR	5314973	Identifier	length		5314948	1					
ANR	5314974	PrimaryExpression	0		5314948	1					
ANR	5314975	ExpressionStatement	list -> sorted = false	57:1:1251:1271	5314948	4	True				
ANR	5314976	AssignmentExpression	list -> sorted = false		5314948	0		=			
ANR	5314977	PtrMemberAccess	list -> sorted		5314948	0					
ANR	5314978	Identifier	list		5314948	0					
ANR	5314979	Identifier	sorted		5314948	1					
ANR	5314980	Identifier	false		5314948	1					
ANR	5314981	ReturnType	R_API void		5314948	1					
ANR	5314982	Identifier	r_list_init		5314948	2					
ANR	5314983	ParameterList	RList * list		5314948	3					
ANR	5314984	Parameter	RList * list	52:23:1156:1166	5314948	0	True				
ANR	5314985	ParameterType	RList *		5314948	0					
ANR	5314986	Identifier	list		5314948	1					
ANR	5314987	CFGEntryNode	ENTRY		5314948		True				
ANR	5314988	CFGExitNode	EXIT		5314948		True				
ANR	5314989	Symbol	list -> head		5314948						
ANR	5314990	Symbol	list -> length		5314948						
ANR	5314991	Symbol	NULL		5314948						
ANR	5314992	Symbol	* list		5314948						
ANR	5314993	Symbol	list -> free		5314948						
ANR	5314994	Symbol	false		5314948						
ANR	5314995	Symbol	list -> sorted		5314948						
ANR	5314996	Symbol	list		5314948						
ANR	5314997	Symbol	list -> tail		5314948						
ANR	5314998	Function	r_list_length	60:0:1276:1376							
ANR	5314999	FunctionDef	r_list_length (const RList * list)		5314998	0					
ANR	5315000	CompoundStatement		60:43:1319:1376	5314998	0					
ANR	5315001	ExpressionStatement	"r_return_val_if_fail ( list , 0 )"	61:1:1322:1352	5314998	0	True				
ANR	5315002	CallExpression	"r_return_val_if_fail ( list , 0 )"		5314998	0					
ANR	5315003	Callee	r_return_val_if_fail		5314998	0					
ANR	5315004	Identifier	r_return_val_if_fail		5314998	0					
ANR	5315005	ArgumentList	list		5314998	1					
ANR	5315006	Argument	list		5314998	0					
ANR	5315007	Identifier	list		5314998	0					
ANR	5315008	Argument	0		5314998	1					
ANR	5315009	PrimaryExpression	0		5314998	0					
ANR	5315010	ReturnStatement	return list -> length ;	62:1:1355:1374	5314998	1	True				
ANR	5315011	PtrMemberAccess	list -> length		5314998	0					
ANR	5315012	Identifier	list		5314998	0					
ANR	5315013	Identifier	length		5314998	1					
ANR	5315014	ReturnType	R_API int		5314998	1					
ANR	5315015	Identifier	r_list_length		5314998	2					
ANR	5315016	ParameterList	const RList * list		5314998	3					
ANR	5315017	Parameter	const RList * list	60:24:1300:1316	5314998	0	True				
ANR	5315018	ParameterType	const RList *		5314998	0					
ANR	5315019	Identifier	list		5314998	1					
ANR	5315020	CFGEntryNode	ENTRY		5314998		True				
ANR	5315021	CFGExitNode	EXIT		5314998		True				
ANR	5315022	Symbol	list -> length		5314998						
ANR	5315023	Symbol	* list		5314998						
ANR	5315024	Symbol	list		5314998						
ANR	5315025	Function	r_list_purge	66:0:1415:1628							
ANR	5315026	FunctionDef	r_list_purge (RList * list)		5315025	0					
ANR	5315027	CompoundStatement		66:37:1452:1628	5315025	0					
ANR	5315028	ExpressionStatement	r_return_if_fail ( list )	67:1:1455:1478	5315025	0	True				
ANR	5315029	CallExpression	r_return_if_fail ( list )		5315025	0					
ANR	5315030	Callee	r_return_if_fail		5315025	0					
ANR	5315031	Identifier	r_return_if_fail		5315025	0					
ANR	5315032	ArgumentList	list		5315025	1					
ANR	5315033	Argument	list		5315025	0					
ANR	5315034	Identifier	list		5315025	0					
ANR	5315035	IdentifierDeclStatement	RListIter * it = list -> head ;	69:1:1482:1508	5315025	1	True				
ANR	5315036	IdentifierDecl	* it = list -> head		5315025	0					
ANR	5315037	IdentifierDeclType	RListIter *		5315025	0					
ANR	5315038	Identifier	it		5315025	1					
ANR	5315039	AssignmentExpression	* it = list -> head		5315025	2		=			
ANR	5315040	Identifier	it		5315025	0					
ANR	5315041	PtrMemberAccess	list -> head		5315025	1					
ANR	5315042	Identifier	list		5315025	0					
ANR	5315043	Identifier	head		5315025	1					
ANR	5315044	WhileStatement	while ( it )		5315025	2					
ANR	5315045	Condition	it	70:8:1518:1519	5315025	0	True				
ANR	5315046	Identifier	it		5315025	0					
ANR	5315047	CompoundStatement		6:2:73:96	5315025	1					
ANR	5315048	IdentifierDeclStatement	RListIter * next = it -> n ;	71:2:1526:1549	5315025	0	True				
ANR	5315049	IdentifierDecl	* next = it -> n		5315025	0					
ANR	5315050	IdentifierDeclType	RListIter *		5315025	0					
ANR	5315051	Identifier	next		5315025	1					
ANR	5315052	AssignmentExpression	* next = it -> n		5315025	2		=			
ANR	5315053	Identifier	next		5315025	0					
ANR	5315054	PtrMemberAccess	it -> n		5315025	1					
ANR	5315055	Identifier	it		5315025	0					
ANR	5315056	Identifier	n		5315025	1					
ANR	5315057	ExpressionStatement	"r_list_delete ( list , it )"	72:2:1553:1577	5315025	1	True				
ANR	5315058	CallExpression	"r_list_delete ( list , it )"		5315025	0					
ANR	5315059	Callee	r_list_delete		5315025	0					
ANR	5315060	Identifier	r_list_delete		5315025	0					
ANR	5315061	ArgumentList	list		5315025	1					
ANR	5315062	Argument	list		5315025	0					
ANR	5315063	Identifier	list		5315025	0					
ANR	5315064	Argument	it		5315025	1					
ANR	5315065	Identifier	it		5315025	0					
ANR	5315066	ExpressionStatement	it = next	73:2:1581:1590	5315025	2	True				
ANR	5315067	AssignmentExpression	it = next		5315025	0		=			
ANR	5315068	Identifier	it		5315025	0					
ANR	5315069	Identifier	next		5315025	1					
ANR	5315070	ExpressionStatement	list -> head = list -> tail = NULL	75:1:1596:1626	5315025	3	True				
ANR	5315071	AssignmentExpression	list -> head = list -> tail = NULL		5315025	0		=			
ANR	5315072	PtrMemberAccess	list -> head		5315025	0					
ANR	5315073	Identifier	list		5315025	0					
ANR	5315074	Identifier	head		5315025	1					
ANR	5315075	AssignmentExpression	list -> tail = NULL		5315025	1		=			
ANR	5315076	PtrMemberAccess	list -> tail		5315025	0					
ANR	5315077	Identifier	list		5315025	0					
ANR	5315078	Identifier	tail		5315025	1					
ANR	5315079	Identifier	NULL		5315025	1					
ANR	5315080	ReturnType	R_API void		5315025	1					
ANR	5315081	Identifier	r_list_purge		5315025	2					
ANR	5315082	ParameterList	RList * list		5315025	3					
ANR	5315083	Parameter	RList * list	66:24:1439:1449	5315025	0	True				
ANR	5315084	ParameterType	RList *		5315025	0					
ANR	5315085	Identifier	list		5315025	1					
ANR	5315086	CFGEntryNode	ENTRY		5315025		True				
ANR	5315087	CFGExitNode	EXIT		5315025		True				
ANR	5315088	Symbol	list -> head		5315025						
ANR	5315089	Symbol	next		5315025						
ANR	5315090	Symbol	* it		5315025						
ANR	5315091	Symbol	NULL		5315025						
ANR	5315092	Symbol	* list		5315025						
ANR	5315093	Symbol	it		5315025						
ANR	5315094	Symbol	list		5315025						
ANR	5315095	Symbol	it -> n		5315025						
ANR	5315096	Symbol	list -> tail		5315025						
ANR	5315097	Function	r_list_free	79:0:1651:1745							
ANR	5315098	FunctionDef	r_list_free (RList * list)		5315097	0					
ANR	5315099	CompoundStatement		79:36:1687:1745	5315097	0					
ANR	5315100	IfStatement	if ( list )		5315097	0					
ANR	5315101	Condition	list	80:5:1694:1697	5315097	0	True				
ANR	5315102	Identifier	list		5315097	0					
ANR	5315103	CompoundStatement		2:11:12:12	5315097	1					
ANR	5315104	ExpressionStatement	r_list_purge ( list )	81:2:1704:1723	5315097	0	True				
ANR	5315105	CallExpression	r_list_purge ( list )		5315097	0					
ANR	5315106	Callee	r_list_purge		5315097	0					
ANR	5315107	Identifier	r_list_purge		5315097	0					
ANR	5315108	ArgumentList	list		5315097	1					
ANR	5315109	Argument	list		5315097	0					
ANR	5315110	Identifier	list		5315097	0					
ANR	5315111	ExpressionStatement	R_FREE ( list )	82:2:1727:1740	5315097	1	True				
ANR	5315112	CallExpression	R_FREE ( list )		5315097	0					
ANR	5315113	Callee	R_FREE		5315097	0					
ANR	5315114	Identifier	R_FREE		5315097	0					
ANR	5315115	ArgumentList	list		5315097	1					
ANR	5315116	Argument	list		5315097	0					
ANR	5315117	Identifier	list		5315097	0					
ANR	5315118	ReturnType	R_API void		5315097	1					
ANR	5315119	Identifier	r_list_free		5315097	2					
ANR	5315120	ParameterList	RList * list		5315097	3					
ANR	5315121	Parameter	RList * list	79:23:1674:1684	5315097	0	True				
ANR	5315122	ParameterType	RList *		5315097	0					
ANR	5315123	Identifier	list		5315097	1					
ANR	5315124	CFGEntryNode	ENTRY		5315097		True				
ANR	5315125	CFGExitNode	EXIT		5315097		True				
ANR	5315126	Symbol	list		5315097						
ANR	5315127	Function	r_list_delete_data	86:0:1748:1992							
ANR	5315128	FunctionDef	"r_list_delete_data (RList * list , void * ptr)"		5315127	0					
ANR	5315129	CompoundStatement		86:54:1802:1992	5315127	0					
ANR	5315130	IdentifierDeclStatement	void * p ;	87:1:1805:1812	5315127	0	True				
ANR	5315131	IdentifierDecl	* p		5315127	0					
ANR	5315132	IdentifierDeclType	void *		5315127	0					
ANR	5315133	Identifier	p		5315127	1					
ANR	5315134	IdentifierDeclStatement	RListIter * iter ;	88:1:1815:1830	5315127	1	True				
ANR	5315135	IdentifierDecl	* iter		5315127	0					
ANR	5315136	IdentifierDeclType	RListIter *		5315127	0					
ANR	5315137	Identifier	iter		5315127	1					
ANR	5315138	ExpressionStatement	"r_return_val_if_fail ( list , false )"	90:1:1834:1868	5315127	2	True				
ANR	5315139	CallExpression	"r_return_val_if_fail ( list , false )"		5315127	0					
ANR	5315140	Callee	r_return_val_if_fail		5315127	0					
ANR	5315141	Identifier	r_return_val_if_fail		5315127	0					
ANR	5315142	ArgumentList	list		5315127	1					
ANR	5315143	Argument	list		5315127	0					
ANR	5315144	Identifier	list		5315127	0					
ANR	5315145	Argument	false		5315127	1					
ANR	5315146	Identifier	false		5315127	0					
ANR	5315147	Statement	r_list_foreach	92:1:1872:1885	5315127	3	True				
ANR	5315148	Statement	(	92:16:1887:1887	5315127	4	True				
ANR	5315149	Statement	list	92:17:1888:1891	5315127	5	True				
ANR	5315150	Statement	","	92:21:1892:1892	5315127	6	True				
ANR	5315151	Statement	iter	92:23:1894:1897	5315127	7	True				
ANR	5315152	Statement	","	92:27:1898:1898	5315127	8	True				
ANR	5315153	Statement	p	92:29:1900:1900	5315127	9	True				
ANR	5315154	Statement	)	92:30:1901:1901	5315127	10	True				
ANR	5315155	CompoundStatement		7:32:100:100	5315127	11					
ANR	5315156	IfStatement	if ( ptr == p )		5315127	0					
ANR	5315157	Condition	ptr == p	93:6:1911:1918	5315127	0	True				
ANR	5315158	EqualityExpression	ptr == p		5315127	0		==			
ANR	5315159	Identifier	ptr		5315127	0					
ANR	5315160	Identifier	p		5315127	1					
ANR	5315161	CompoundStatement		8:16:118:118	5315127	1					
ANR	5315162	ExpressionStatement	"r_list_delete ( list , iter )"	94:3:1926:1952	5315127	0	True				
ANR	5315163	CallExpression	"r_list_delete ( list , iter )"		5315127	0					
ANR	5315164	Callee	r_list_delete		5315127	0					
ANR	5315165	Identifier	r_list_delete		5315127	0					
ANR	5315166	ArgumentList	list		5315127	1					
ANR	5315167	Argument	list		5315127	0					
ANR	5315168	Identifier	list		5315127	0					
ANR	5315169	Argument	iter		5315127	1					
ANR	5315170	Identifier	iter		5315127	0					
ANR	5315171	ReturnStatement	return true ;	95:3:1957:1968	5315127	1	True				
ANR	5315172	Identifier	true		5315127	0					
ANR	5315173	ReturnStatement	return false ;	98:1:1978:1990	5315127	12	True				
ANR	5315174	Identifier	false		5315127	0					
ANR	5315175	ReturnType	R_API bool		5315127	1					
ANR	5315176	Identifier	r_list_delete_data		5315127	2					
ANR	5315177	ParameterList	"RList * list , void * ptr"		5315127	3					
ANR	5315178	Parameter	RList * list	86:30:1778:1788	5315127	0	True				
ANR	5315179	ParameterType	RList *		5315127	0					
ANR	5315180	Identifier	list		5315127	1					
ANR	5315181	Parameter	void * ptr	86:43:1791:1799	5315127	1	True				
ANR	5315182	ParameterType	void *		5315127	0					
ANR	5315183	Identifier	ptr		5315127	1					
ANR	5315184	CFGEntryNode	ENTRY		5315127		True				
ANR	5315185	CFGExitNode	EXIT		5315127		True				
ANR	5315186	Symbol	p		5315127						
ANR	5315187	Symbol	false		5315127						
ANR	5315188	Symbol	true		5315127						
ANR	5315189	Symbol	iter		5315127						
ANR	5315190	Symbol	list		5315127						
ANR	5315191	Symbol	ptr		5315127						
ANR	5315192	Function	r_list_delete	101:0:1995:2218							
ANR	5315193	FunctionDef	"r_list_delete (RList * list , RListIter * iter)"		5315192	0					
ANR	5315194	CompoundStatement		101:55:2050:2218	5315192	0					
ANR	5315195	ExpressionStatement	r_return_if_fail ( list && iter )	102:1:2053:2084	5315192	0	True				
ANR	5315196	CallExpression	r_return_if_fail ( list && iter )		5315192	0					
ANR	5315197	Callee	r_return_if_fail		5315192	0					
ANR	5315198	Identifier	r_return_if_fail		5315192	0					
ANR	5315199	ArgumentList	list && iter		5315192	1					
ANR	5315200	Argument	list && iter		5315192	0					
ANR	5315201	AndExpression	list && iter		5315192	0		&&			
ANR	5315202	Identifier	list		5315192	0					
ANR	5315203	Identifier	iter		5315192	1					
ANR	5315204	ExpressionStatement	"r_list_split_iter ( list , iter )"	103:1:2087:2117	5315192	1	True				
ANR	5315205	CallExpression	"r_list_split_iter ( list , iter )"		5315192	0					
ANR	5315206	Callee	r_list_split_iter		5315192	0					
ANR	5315207	Identifier	r_list_split_iter		5315192	0					
ANR	5315208	ArgumentList	list		5315192	1					
ANR	5315209	Argument	list		5315192	0					
ANR	5315210	Identifier	list		5315192	0					
ANR	5315211	Argument	iter		5315192	1					
ANR	5315212	Identifier	iter		5315192	0					
ANR	5315213	IfStatement	if ( list -> free && iter -> data )		5315192	2					
ANR	5315214	Condition	list -> free && iter -> data	104:5:2124:2147	5315192	0	True				
ANR	5315215	AndExpression	list -> free && iter -> data		5315192	0		&&			
ANR	5315216	PtrMemberAccess	list -> free		5315192	0					
ANR	5315217	Identifier	list		5315192	0					
ANR	5315218	Identifier	free		5315192	1					
ANR	5315219	PtrMemberAccess	iter -> data		5315192	1					
ANR	5315220	Identifier	iter		5315192	0					
ANR	5315221	Identifier	data		5315192	1					
ANR	5315222	CompoundStatement		4:31:99:99	5315192	1					
ANR	5315223	ExpressionStatement	list -> free ( iter -> data )	105:2:2154:2177	5315192	0	True				
ANR	5315224	CallExpression	list -> free ( iter -> data )		5315192	0					
ANR	5315225	Callee	list -> free		5315192	0					
ANR	5315226	PtrMemberAccess	list -> free		5315192	0					
ANR	5315227	Identifier	list		5315192	0					
ANR	5315228	Identifier	free		5315192	1					
ANR	5315229	ArgumentList	iter -> data		5315192	1					
ANR	5315230	Argument	iter -> data		5315192	0					
ANR	5315231	PtrMemberAccess	iter -> data		5315192	0					
ANR	5315232	Identifier	iter		5315192	0					
ANR	5315233	Identifier	data		5315192	1					
ANR	5315234	ExpressionStatement	iter -> data = NULL	107:1:2183:2200	5315192	3	True				
ANR	5315235	AssignmentExpression	iter -> data = NULL		5315192	0		=			
ANR	5315236	PtrMemberAccess	iter -> data		5315192	0					
ANR	5315237	Identifier	iter		5315192	0					
ANR	5315238	Identifier	data		5315192	1					
ANR	5315239	Identifier	NULL		5315192	1					
ANR	5315240	ExpressionStatement	R_FREE ( iter )	108:1:2203:2216	5315192	4	True				
ANR	5315241	CallExpression	R_FREE ( iter )		5315192	0					
ANR	5315242	Callee	R_FREE		5315192	0					
ANR	5315243	Identifier	R_FREE		5315192	0					
ANR	5315244	ArgumentList	iter		5315192	1					
ANR	5315245	Argument	iter		5315192	0					
ANR	5315246	Identifier	iter		5315192	0					
ANR	5315247	ReturnType	R_API void		5315192	1					
ANR	5315248	Identifier	r_list_delete		5315192	2					
ANR	5315249	ParameterList	"RList * list , RListIter * iter"		5315192	3					
ANR	5315250	Parameter	RList * list	101:25:2020:2030	5315192	0	True				
ANR	5315251	ParameterType	RList *		5315192	0					
ANR	5315252	Identifier	list		5315192	1					
ANR	5315253	Parameter	RListIter * iter	101:38:2033:2047	5315192	1	True				
ANR	5315254	ParameterType	RListIter *		5315192	0					
ANR	5315255	Identifier	iter		5315192	1					
ANR	5315256	CFGEntryNode	ENTRY		5315192		True				
ANR	5315257	CFGExitNode	EXIT		5315192		True				
ANR	5315258	Symbol	* iter		5315192						
ANR	5315259	Symbol	NULL		5315192						
ANR	5315260	Symbol	* list		5315192						
ANR	5315261	Symbol	list -> free		5315192						
ANR	5315262	Symbol	iter		5315192						
ANR	5315263	Symbol	list		5315192						
ANR	5315264	Symbol	iter -> data		5315192						
ANR	5315265	Function	r_list_split	111:0:2221:2491							
ANR	5315266	FunctionDef	"r_list_split (RList * list , void * ptr)"		5315265	0					
ANR	5315267	CompoundStatement		111:48:2269:2491	5315265	0					
ANR	5315268	ExpressionStatement	r_return_if_fail ( list )	112:1:2272:2295	5315265	0	True				
ANR	5315269	CallExpression	r_return_if_fail ( list )		5315265	0					
ANR	5315270	Callee	r_return_if_fail		5315265	0					
ANR	5315271	Identifier	r_return_if_fail		5315265	0					
ANR	5315272	ArgumentList	list		5315265	1					
ANR	5315273	Argument	list		5315265	0					
ANR	5315274	Identifier	list		5315265	0					
ANR	5315275	IdentifierDeclStatement	RListIter * iter = r_list_iterator ( list ) ;	114:1:2299:2339	5315265	1	True				
ANR	5315276	IdentifierDecl	* iter = r_list_iterator ( list )		5315265	0					
ANR	5315277	IdentifierDeclType	RListIter *		5315265	0					
ANR	5315278	Identifier	iter		5315265	1					
ANR	5315279	AssignmentExpression	* iter = r_list_iterator ( list )		5315265	2		=			
ANR	5315280	Identifier	iter		5315265	0					
ANR	5315281	CallExpression	r_list_iterator ( list )		5315265	1					
ANR	5315282	Callee	r_list_iterator		5315265	0					
ANR	5315283	Identifier	r_list_iterator		5315265	0					
ANR	5315284	ArgumentList	list		5315265	1					
ANR	5315285	Argument	list		5315265	0					
ANR	5315286	Identifier	list		5315265	0					
ANR	5315287	WhileStatement	while ( iter )		5315265	2					
ANR	5315288	Condition	iter	115:8:2349:2352	5315265	0	True				
ANR	5315289	Identifier	iter		5315265	0					
ANR	5315290	CompoundStatement		6:2:89:112	5315265	1					
ANR	5315291	IdentifierDeclStatement	void * item = iter -> data ;	116:2:2359:2382	5315265	0	True				
ANR	5315292	IdentifierDecl	* item = iter -> data		5315265	0					
ANR	5315293	IdentifierDeclType	void *		5315265	0					
ANR	5315294	Identifier	item		5315265	1					
ANR	5315295	AssignmentExpression	* item = iter -> data		5315265	2		=			
ANR	5315296	Identifier	item		5315265	0					
ANR	5315297	PtrMemberAccess	iter -> data		5315265	1					
ANR	5315298	Identifier	iter		5315265	0					
ANR	5315299	Identifier	data		5315265	1					
ANR	5315300	IfStatement	if ( ptr == item )		5315265	1					
ANR	5315301	Condition	ptr == item	117:6:2390:2400	5315265	0	True				
ANR	5315302	EqualityExpression	ptr == item		5315265	0		==			
ANR	5315303	Identifier	ptr		5315265	0					
ANR	5315304	Identifier	item		5315265	1					
ANR	5315305	CompoundStatement		7:19:133:133	5315265	1					
ANR	5315306	ExpressionStatement	"r_list_split_iter ( list , iter )"	118:3:2408:2438	5315265	0	True				
ANR	5315307	CallExpression	"r_list_split_iter ( list , iter )"		5315265	0					
ANR	5315308	Callee	r_list_split_iter		5315265	0					
ANR	5315309	Identifier	r_list_split_iter		5315265	0					
ANR	5315310	ArgumentList	list		5315265	1					
ANR	5315311	Argument	list		5315265	0					
ANR	5315312	Identifier	list		5315265	0					
ANR	5315313	Argument	iter		5315265	1					
ANR	5315314	Identifier	iter		5315265	0					
ANR	5315315	ExpressionStatement	free ( iter )	119:3:2443:2454	5315265	1	True				
ANR	5315316	CallExpression	free ( iter )		5315265	0					
ANR	5315317	Callee	free		5315265	0					
ANR	5315318	Identifier	free		5315265	0					
ANR	5315319	ArgumentList	iter		5315265	1					
ANR	5315320	Argument	iter		5315265	0					
ANR	5315321	Identifier	iter		5315265	0					
ANR	5315322	BreakStatement	break ;	120:3:2459:2464	5315265	2	True				
ANR	5315323	ExpressionStatement	iter = iter -> n	122:2:2472:2486	5315265	2	True				
ANR	5315324	AssignmentExpression	iter = iter -> n		5315265	0		=			
ANR	5315325	Identifier	iter		5315265	0					
ANR	5315326	PtrMemberAccess	iter -> n		5315265	1					
ANR	5315327	Identifier	iter		5315265	0					
ANR	5315328	Identifier	n		5315265	1					
ANR	5315329	ReturnType	R_API void		5315265	1					
ANR	5315330	Identifier	r_list_split		5315265	2					
ANR	5315331	ParameterList	"RList * list , void * ptr"		5315265	3					
ANR	5315332	Parameter	RList * list	111:24:2245:2255	5315265	0	True				
ANR	5315333	ParameterType	RList *		5315265	0					
ANR	5315334	Identifier	list		5315265	1					
ANR	5315335	Parameter	void * ptr	111:37:2258:2266	5315265	1	True				
ANR	5315336	ParameterType	void *		5315265	0					
ANR	5315337	Identifier	ptr		5315265	1					
ANR	5315338	CFGEntryNode	ENTRY		5315265		True				
ANR	5315339	CFGExitNode	EXIT		5315265		True				
ANR	5315340	Symbol	* iter		5315265						
ANR	5315341	Symbol	item		5315265						
ANR	5315342	Symbol	iter -> n		5315265						
ANR	5315343	Symbol	r_list_iterator		5315265						
ANR	5315344	Symbol	iter		5315265						
ANR	5315345	Symbol	list		5315265						
ANR	5315346	Symbol	iter -> data		5315265						
ANR	5315347	Symbol	ptr		5315265						
ANR	5315348	Function	r_list_split_iter	126:0:2494:2793							
ANR	5315349	FunctionDef	"r_list_split_iter (RList * list , RListIter * iter)"		5315348	0					
ANR	5315350	CompoundStatement		126:59:2553:2793	5315348	0					
ANR	5315351	ExpressionStatement	r_return_if_fail ( list )	127:1:2556:2579	5315348	0	True				
ANR	5315352	CallExpression	r_return_if_fail ( list )		5315348	0					
ANR	5315353	Callee	r_return_if_fail		5315348	0					
ANR	5315354	Identifier	r_return_if_fail		5315348	0					
ANR	5315355	ArgumentList	list		5315348	1					
ANR	5315356	Argument	list		5315348	0					
ANR	5315357	Identifier	list		5315348	0					
ANR	5315358	IfStatement	if ( list -> head == iter )		5315348	1					
ANR	5315359	Condition	list -> head == iter	129:5:2587:2604	5315348	0	True				
ANR	5315360	EqualityExpression	list -> head == iter		5315348	0		==			
ANR	5315361	PtrMemberAccess	list -> head		5315348	0					
ANR	5315362	Identifier	list		5315348	0					
ANR	5315363	Identifier	head		5315348	1					
ANR	5315364	Identifier	iter		5315348	1					
ANR	5315365	CompoundStatement		4:25:53:53	5315348	1					
ANR	5315366	ExpressionStatement	list -> head = iter -> n	130:2:2611:2631	5315348	0	True				
ANR	5315367	AssignmentExpression	list -> head = iter -> n		5315348	0		=			
ANR	5315368	PtrMemberAccess	list -> head		5315348	0					
ANR	5315369	Identifier	list		5315348	0					
ANR	5315370	Identifier	head		5315348	1					
ANR	5315371	PtrMemberAccess	iter -> n		5315348	1					
ANR	5315372	Identifier	iter		5315348	0					
ANR	5315373	Identifier	n		5315348	1					
ANR	5315374	IfStatement	if ( list -> tail == iter )		5315348	2					
ANR	5315375	Condition	list -> tail == iter	132:5:2641:2658	5315348	0	True				
ANR	5315376	EqualityExpression	list -> tail == iter		5315348	0		==			
ANR	5315377	PtrMemberAccess	list -> tail		5315348	0					
ANR	5315378	Identifier	list		5315348	0					
ANR	5315379	Identifier	tail		5315348	1					
ANR	5315380	Identifier	iter		5315348	1					
ANR	5315381	CompoundStatement		7:25:107:107	5315348	1					
ANR	5315382	ExpressionStatement	list -> tail = iter -> p	133:2:2665:2685	5315348	0	True				
ANR	5315383	AssignmentExpression	list -> tail = iter -> p		5315348	0		=			
ANR	5315384	PtrMemberAccess	list -> tail		5315348	0					
ANR	5315385	Identifier	list		5315348	0					
ANR	5315386	Identifier	tail		5315348	1					
ANR	5315387	PtrMemberAccess	iter -> p		5315348	1					
ANR	5315388	Identifier	iter		5315348	0					
ANR	5315389	Identifier	p		5315348	1					
ANR	5315390	IfStatement	if ( iter -> p )		5315348	3					
ANR	5315391	Condition	iter -> p	135:5:2695:2701	5315348	0	True				
ANR	5315392	PtrMemberAccess	iter -> p		5315348	0					
ANR	5315393	Identifier	iter		5315348	0					
ANR	5315394	Identifier	p		5315348	1					
ANR	5315395	CompoundStatement		10:14:150:150	5315348	1					
ANR	5315396	ExpressionStatement	iter -> p -> n = iter -> n	136:2:2708:2728	5315348	0	True				
ANR	5315397	AssignmentExpression	iter -> p -> n = iter -> n		5315348	0		=			
ANR	5315398	PtrMemberAccess	iter -> p -> n		5315348	0					
ANR	5315399	PtrMemberAccess	iter -> p		5315348	0					
ANR	5315400	Identifier	iter		5315348	0					
ANR	5315401	Identifier	p		5315348	1					
ANR	5315402	Identifier	n		5315348	1					
ANR	5315403	PtrMemberAccess	iter -> n		5315348	1					
ANR	5315404	Identifier	iter		5315348	0					
ANR	5315405	Identifier	n		5315348	1					
ANR	5315406	IfStatement	if ( iter -> n )		5315348	4					
ANR	5315407	Condition	iter -> n	138:5:2738:2744	5315348	0	True				
ANR	5315408	PtrMemberAccess	iter -> n		5315348	0					
ANR	5315409	Identifier	iter		5315348	0					
ANR	5315410	Identifier	n		5315348	1					
ANR	5315411	CompoundStatement		13:14:193:193	5315348	1					
ANR	5315412	ExpressionStatement	iter -> n -> p = iter -> p	139:2:2751:2771	5315348	0	True				
ANR	5315413	AssignmentExpression	iter -> n -> p = iter -> p		5315348	0		=			
ANR	5315414	PtrMemberAccess	iter -> n -> p		5315348	0					
ANR	5315415	PtrMemberAccess	iter -> n		5315348	0					
ANR	5315416	Identifier	iter		5315348	0					
ANR	5315417	Identifier	n		5315348	1					
ANR	5315418	Identifier	p		5315348	1					
ANR	5315419	PtrMemberAccess	iter -> p		5315348	1					
ANR	5315420	Identifier	iter		5315348	0					
ANR	5315421	Identifier	p		5315348	1					
ANR	5315422	ExpressionStatement	list -> length --	141:1:2777:2791	5315348	5	True				
ANR	5315423	PostIncDecOperationExpression	list -> length --		5315348	0					
ANR	5315424	PtrMemberAccess	list -> length		5315348	0					
ANR	5315425	Identifier	list		5315348	0					
ANR	5315426	Identifier	length		5315348	1					
ANR	5315427	IncDec	--		5315348	1					
ANR	5315428	ReturnType	R_API void		5315348	1					
ANR	5315429	Identifier	r_list_split_iter		5315348	2					
ANR	5315430	ParameterList	"RList * list , RListIter * iter"		5315348	3					
ANR	5315431	Parameter	RList * list	126:29:2523:2533	5315348	0	True				
ANR	5315432	ParameterType	RList *		5315348	0					
ANR	5315433	Identifier	list		5315348	1					
ANR	5315434	Parameter	RListIter * iter	126:42:2536:2550	5315348	1	True				
ANR	5315435	ParameterType	RListIter *		5315348	0					
ANR	5315436	Identifier	iter		5315348	1					
ANR	5315437	CFGEntryNode	ENTRY		5315348		True				
ANR	5315438	CFGExitNode	EXIT		5315348		True				
ANR	5315439	Symbol	list -> length		5315348						
ANR	5315440	Symbol	iter		5315348						
ANR	5315441	Symbol	list		5315348						
ANR	5315442	Symbol	iter -> n -> p		5315348						
ANR	5315443	Symbol	list -> head		5315348						
ANR	5315444	Symbol	* iter -> p		5315348						
ANR	5315445	Symbol	* iter		5315348						
ANR	5315446	Symbol	* iter -> n		5315348						
ANR	5315447	Symbol	* list		5315348						
ANR	5315448	Symbol	iter -> n		5315348						
ANR	5315449	Symbol	iter -> p -> n		5315348						
ANR	5315450	Symbol	iter -> p		5315348						
ANR	5315451	Symbol	* * iter		5315348						
ANR	5315452	Symbol	list -> tail		5315348						
ANR	5315453	Function	r_list_join	145:0:2841:3295							
ANR	5315454	FunctionDef	"r_list_join (RList * list1 , RList * list2)"		5315453	0					
ANR	5315455	CompoundStatement		145:50:2891:3295	5315453	0					
ANR	5315456	ExpressionStatement	"r_return_val_if_fail ( list1 && list2 , 0 )"	146:1:2894:2934	5315453	0	True				
ANR	5315457	CallExpression	"r_return_val_if_fail ( list1 && list2 , 0 )"		5315453	0					
ANR	5315458	Callee	r_return_val_if_fail		5315453	0					
ANR	5315459	Identifier	r_return_val_if_fail		5315453	0					
ANR	5315460	ArgumentList	list1 && list2		5315453	1					
ANR	5315461	Argument	list1 && list2		5315453	0					
ANR	5315462	AndExpression	list1 && list2		5315453	0		&&			
ANR	5315463	Identifier	list1		5315453	0					
ANR	5315464	Identifier	list2		5315453	1					
ANR	5315465	Argument	0		5315453	1					
ANR	5315466	PrimaryExpression	0		5315453	0					
ANR	5315467	IfStatement	if ( ! ( list2 -> length ) )		5315453	1					
ANR	5315468	Condition	! ( list2 -> length )	148:5:2942:2957	5315453	0	True				
ANR	5315469	UnaryOperationExpression	! ( list2 -> length )		5315453	0					
ANR	5315470	UnaryOperator	!		5315453	0					
ANR	5315471	PtrMemberAccess	list2 -> length		5315453	1					
ANR	5315472	Identifier	list2		5315453	0					
ANR	5315473	Identifier	length		5315453	1					
ANR	5315474	CompoundStatement		4:23:68:68	5315453	1					
ANR	5315475	ReturnStatement	return 0 ;	149:2:2964:2972	5315453	0	True				
ANR	5315476	PrimaryExpression	0		5315453	0					
ANR	5315477	IfStatement	if ( ! ( list1 -> length ) )		5315453	2					
ANR	5315478	Condition	! ( list1 -> length )	151:5:2982:2997	5315453	0	True				
ANR	5315479	UnaryOperationExpression	! ( list1 -> length )		5315453	0					
ANR	5315480	UnaryOperator	!		5315453	0					
ANR	5315481	PtrMemberAccess	list1 -> length		5315453	1					
ANR	5315482	Identifier	list1		5315453	0					
ANR	5315483	Identifier	length		5315453	1					
ANR	5315484	CompoundStatement		7:23:108:108	5315453	1					
ANR	5315485	ExpressionStatement	list1 -> head = list2 -> head	152:2:3004:3029	5315453	0	True				
ANR	5315486	AssignmentExpression	list1 -> head = list2 -> head		5315453	0		=			
ANR	5315487	PtrMemberAccess	list1 -> head		5315453	0					
ANR	5315488	Identifier	list1		5315453	0					
ANR	5315489	Identifier	head		5315453	1					
ANR	5315490	PtrMemberAccess	list2 -> head		5315453	1					
ANR	5315491	Identifier	list2		5315453	0					
ANR	5315492	Identifier	head		5315453	1					
ANR	5315493	ExpressionStatement	list1 -> tail = list2 -> tail	153:2:3033:3058	5315453	1	True				
ANR	5315494	AssignmentExpression	list1 -> tail = list2 -> tail		5315453	0		=			
ANR	5315495	PtrMemberAccess	list1 -> tail		5315453	0					
ANR	5315496	Identifier	list1		5315453	0					
ANR	5315497	Identifier	tail		5315453	1					
ANR	5315498	PtrMemberAccess	list2 -> tail		5315453	1					
ANR	5315499	Identifier	list2		5315453	0					
ANR	5315500	Identifier	tail		5315453	1					
ANR	5315501	ElseStatement	else		5315453	0					
ANR	5315502	CompoundStatement		10:8:176:176	5315453	0					
ANR	5315503	ExpressionStatement	list1 -> tail -> n = list2 -> head	155:2:3072:3100	5315453	0	True				
ANR	5315504	AssignmentExpression	list1 -> tail -> n = list2 -> head		5315453	0		=			
ANR	5315505	PtrMemberAccess	list1 -> tail -> n		5315453	0					
ANR	5315506	PtrMemberAccess	list1 -> tail		5315453	0					
ANR	5315507	Identifier	list1		5315453	0					
ANR	5315508	Identifier	tail		5315453	1					
ANR	5315509	Identifier	n		5315453	1					
ANR	5315510	PtrMemberAccess	list2 -> head		5315453	1					
ANR	5315511	Identifier	list2		5315453	0					
ANR	5315512	Identifier	head		5315453	1					
ANR	5315513	ExpressionStatement	list2 -> head -> p = list1 -> tail	156:2:3104:3132	5315453	1	True				
ANR	5315514	AssignmentExpression	list2 -> head -> p = list1 -> tail		5315453	0		=			
ANR	5315515	PtrMemberAccess	list2 -> head -> p		5315453	0					
ANR	5315516	PtrMemberAccess	list2 -> head		5315453	0					
ANR	5315517	Identifier	list2		5315453	0					
ANR	5315518	Identifier	head		5315453	1					
ANR	5315519	Identifier	p		5315453	1					
ANR	5315520	PtrMemberAccess	list1 -> tail		5315453	1					
ANR	5315521	Identifier	list1		5315453	0					
ANR	5315522	Identifier	tail		5315453	1					
ANR	5315523	ExpressionStatement	list1 -> tail = list2 -> tail	157:2:3136:3161	5315453	2	True				
ANR	5315524	AssignmentExpression	list1 -> tail = list2 -> tail		5315453	0		=			
ANR	5315525	PtrMemberAccess	list1 -> tail		5315453	0					
ANR	5315526	Identifier	list1		5315453	0					
ANR	5315527	Identifier	tail		5315453	1					
ANR	5315528	PtrMemberAccess	list2 -> tail		5315453	1					
ANR	5315529	Identifier	list2		5315453	0					
ANR	5315530	Identifier	tail		5315453	1					
ANR	5315531	ExpressionStatement	list1 -> tail -> n = NULL	158:2:3165:3186	5315453	3	True				
ANR	5315532	AssignmentExpression	list1 -> tail -> n = NULL		5315453	0		=			
ANR	5315533	PtrMemberAccess	list1 -> tail -> n		5315453	0					
ANR	5315534	PtrMemberAccess	list1 -> tail		5315453	0					
ANR	5315535	Identifier	list1		5315453	0					
ANR	5315536	Identifier	tail		5315453	1					
ANR	5315537	Identifier	n		5315453	1					
ANR	5315538	Identifier	NULL		5315453	1					
ANR	5315539	ExpressionStatement	list1 -> sorted = false	159:2:3190:3211	5315453	4	True				
ANR	5315540	AssignmentExpression	list1 -> sorted = false		5315453	0		=			
ANR	5315541	PtrMemberAccess	list1 -> sorted		5315453	0					
ANR	5315542	Identifier	list1		5315453	0					
ANR	5315543	Identifier	sorted		5315453	1					
ANR	5315544	Identifier	false		5315453	1					
ANR	5315545	ExpressionStatement	list1 -> length += list2 -> length	161:1:3217:3247	5315453	3	True				
ANR	5315546	AssignmentExpression	list1 -> length += list2 -> length		5315453	0		+=			
ANR	5315547	PtrMemberAccess	list1 -> length		5315453	0					
ANR	5315548	Identifier	list1		5315453	0					
ANR	5315549	Identifier	length		5315453	1					
ANR	5315550	PtrMemberAccess	list2 -> length		5315453	1					
ANR	5315551	Identifier	list2		5315453	0					
ANR	5315552	Identifier	length		5315453	1					
ANR	5315553	ExpressionStatement	list2 -> head = list2 -> tail = NULL	162:1:3250:3282	5315453	4	True				
ANR	5315554	AssignmentExpression	list2 -> head = list2 -> tail = NULL		5315453	0		=			
ANR	5315555	PtrMemberAccess	list2 -> head		5315453	0					
ANR	5315556	Identifier	list2		5315453	0					
ANR	5315557	Identifier	head		5315453	1					
ANR	5315558	AssignmentExpression	list2 -> tail = NULL		5315453	1		=			
ANR	5315559	PtrMemberAccess	list2 -> tail		5315453	0					
ANR	5315560	Identifier	list2		5315453	0					
ANR	5315561	Identifier	tail		5315453	1					
ANR	5315562	Identifier	NULL		5315453	1					
ANR	5315563	ReturnStatement	return 1 ;	163:1:3285:3293	5315453	5	True				
ANR	5315564	PrimaryExpression	1		5315453	0					
ANR	5315565	ReturnType	R_API int		5315453	1					
ANR	5315566	Identifier	r_list_join		5315453	2					
ANR	5315567	ParameterList	"RList * list1 , RList * list2"		5315453	3					
ANR	5315568	Parameter	RList * list1	145:22:2863:2874	5315453	0	True				
ANR	5315569	ParameterType	RList *		5315453	0					
ANR	5315570	Identifier	list1		5315453	1					
ANR	5315571	Parameter	RList * list2	145:36:2877:2888	5315453	1	True				
ANR	5315572	ParameterType	RList *		5315453	0					
ANR	5315573	Identifier	list2		5315453	1					
ANR	5315574	CFGEntryNode	ENTRY		5315453		True				
ANR	5315575	CFGExitNode	EXIT		5315453		True				
ANR	5315576	Symbol	list2 -> head		5315453						
ANR	5315577	Symbol	* list1 -> tail		5315453						
ANR	5315578	Symbol	list1 -> sorted		5315453						
ANR	5315579	Symbol	* * list1		5315453						
ANR	5315580	Symbol	NULL		5315453						
ANR	5315581	Symbol	false		5315453						
ANR	5315582	Symbol	list2 -> length		5315453						
ANR	5315583	Symbol	* * list2		5315453						
ANR	5315584	Symbol	list1		5315453						
ANR	5315585	Symbol	list1 -> length		5315453						
ANR	5315586	Symbol	list1 -> tail		5315453						
ANR	5315587	Symbol	* list2 -> head		5315453						
ANR	5315588	Symbol	list2		5315453						
ANR	5315589	Symbol	* list1		5315453						
ANR	5315590	Symbol	* list2		5315453						
ANR	5315591	Symbol	list2 -> tail		5315453						
ANR	5315592	Symbol	list2 -> head -> p		5315453						
ANR	5315593	Symbol	list1 -> head		5315453						
ANR	5315594	Symbol	list1 -> tail -> n		5315453						
ANR	5315595	Function	r_list_new	166:0:3298:3424							
ANR	5315596	FunctionDef	r_list_new ()		5315595	0					
ANR	5315597	CompoundStatement		166:26:3324:3424	5315595	0					
ANR	5315598	IdentifierDeclStatement	RList * list = R_NEW0 ( RList ) ;	167:1:3327:3355	5315595	0	True				
ANR	5315599	IdentifierDecl	* list = R_NEW0 ( RList )		5315595	0					
ANR	5315600	IdentifierDeclType	RList *		5315595	0					
ANR	5315601	Identifier	list		5315595	1					
ANR	5315602	AssignmentExpression	* list = R_NEW0 ( RList )		5315595	2		=			
ANR	5315603	Identifier	list		5315595	0					
ANR	5315604	CallExpression	R_NEW0 ( RList )		5315595	1					
ANR	5315605	Callee	R_NEW0		5315595	0					
ANR	5315606	Identifier	R_NEW0		5315595	0					
ANR	5315607	ArgumentList	RList		5315595	1					
ANR	5315608	Argument	RList		5315595	0					
ANR	5315609	Identifier	RList		5315595	0					
ANR	5315610	IfStatement	if ( ! list )		5315595	1					
ANR	5315611	Condition	! list	168:5:3362:3366	5315595	0	True				
ANR	5315612	UnaryOperationExpression	! list		5315595	0					
ANR	5315613	UnaryOperator	!		5315595	0					
ANR	5315614	Identifier	list		5315595	1					
ANR	5315615	CompoundStatement		3:12:44:44	5315595	1					
ANR	5315616	ReturnStatement	return NULL ;	169:2:3373:3384	5315595	0	True				
ANR	5315617	Identifier	NULL		5315595	0					
ANR	5315618	ExpressionStatement	r_list_init ( list )	171:1:3390:3408	5315595	2	True				
ANR	5315619	CallExpression	r_list_init ( list )		5315595	0					
ANR	5315620	Callee	r_list_init		5315595	0					
ANR	5315621	Identifier	r_list_init		5315595	0					
ANR	5315622	ArgumentList	list		5315595	1					
ANR	5315623	Argument	list		5315595	0					
ANR	5315624	Identifier	list		5315595	0					
ANR	5315625	ReturnStatement	return list ;	172:1:3411:3422	5315595	3	True				
ANR	5315626	Identifier	list		5315595	0					
ANR	5315627	ReturnType	R_API RList *		5315595	1					
ANR	5315628	Identifier	r_list_new		5315595	2					
ANR	5315629	ParameterList			5315595	3					
ANR	5315630	CFGEntryNode	ENTRY		5315595		True				
ANR	5315631	CFGExitNode	EXIT		5315595		True				
ANR	5315632	Symbol	R_NEW0		5315595						
ANR	5315633	Symbol	NULL		5315595						
ANR	5315634	Symbol	RList		5315595						
ANR	5315635	Symbol	list		5315595						
ANR	5315636	Function	r_list_newf	175:0:3427:3533							
ANR	5315637	FunctionDef	r_list_newf (RListFree f)		5315636	0					
ANR	5315638	CompoundStatement		175:38:3465:3533	5315636	0					
ANR	5315639	IdentifierDeclStatement	RList * l = r_list_new ( ) ;	176:1:3468:3492	5315636	0	True				
ANR	5315640	IdentifierDecl	* l = r_list_new ( )		5315636	0					
ANR	5315641	IdentifierDeclType	RList *		5315636	0					
ANR	5315642	Identifier	l		5315636	1					
ANR	5315643	AssignmentExpression	* l = r_list_new ( )		5315636	2		=			
ANR	5315644	Identifier	l		5315636	0					
ANR	5315645	CallExpression	r_list_new ( )		5315636	1					
ANR	5315646	Callee	r_list_new		5315636	0					
ANR	5315647	Identifier	r_list_new		5315636	0					
ANR	5315648	ArgumentList			5315636	1					
ANR	5315649	IfStatement	if ( l )		5315636	1					
ANR	5315650	Condition	l	177:5:3499:3499	5315636	0	True				
ANR	5315651	Identifier	l		5315636	0					
ANR	5315652	CompoundStatement		3:8:36:36	5315636	1					
ANR	5315653	ExpressionStatement	l -> free = f	178:2:3506:3517	5315636	0	True				
ANR	5315654	AssignmentExpression	l -> free = f		5315636	0		=			
ANR	5315655	PtrMemberAccess	l -> free		5315636	0					
ANR	5315656	Identifier	l		5315636	0					
ANR	5315657	Identifier	free		5315636	1					
ANR	5315658	Identifier	f		5315636	1					
ANR	5315659	ReturnStatement	return l ;	180:1:3523:3531	5315636	2	True				
ANR	5315660	Identifier	l		5315636	0					
ANR	5315661	ReturnType	R_API RList *		5315636	1					
ANR	5315662	Identifier	r_list_newf		5315636	2					
ANR	5315663	ParameterList	RListFree f		5315636	3					
ANR	5315664	Parameter	RListFree f	175:25:3452:3462	5315636	0	True				
ANR	5315665	ParameterType	RListFree		5315636	0					
ANR	5315666	Identifier	f		5315636	1					
ANR	5315667	CFGEntryNode	ENTRY		5315636		True				
ANR	5315668	CFGExitNode	EXIT		5315636		True				
ANR	5315669	Symbol	f		5315636						
ANR	5315670	Symbol	* l		5315636						
ANR	5315671	Symbol	l -> free		5315636						
ANR	5315672	Symbol	l		5315636						
ANR	5315673	Symbol	r_list_new		5315636						
ANR	5315674	Function	r_list_item_new	183:0:3536:3673							
ANR	5315675	FunctionDef	r_list_item_new (void * data)		5315674	0					
ANR	5315676	CompoundStatement		183:45:3581:3673	5315674	0					
ANR	5315677	IdentifierDeclStatement	RListIter * item = R_NEW0 ( RListIter ) ;	184:1:3584:3620	5315674	0	True				
ANR	5315678	IdentifierDecl	* item = R_NEW0 ( RListIter )		5315674	0					
ANR	5315679	IdentifierDeclType	RListIter *		5315674	0					
ANR	5315680	Identifier	item		5315674	1					
ANR	5315681	AssignmentExpression	* item = R_NEW0 ( RListIter )		5315674	2		=			
ANR	5315682	Identifier	item		5315674	0					
ANR	5315683	CallExpression	R_NEW0 ( RListIter )		5315674	1					
ANR	5315684	Callee	R_NEW0		5315674	0					
ANR	5315685	Identifier	R_NEW0		5315674	0					
ANR	5315686	ArgumentList	RListIter		5315674	1					
ANR	5315687	Argument	RListIter		5315674	0					
ANR	5315688	Identifier	RListIter		5315674	0					
ANR	5315689	IfStatement	if ( item )		5315674	1					
ANR	5315690	Condition	item	185:5:3627:3630	5315674	0	True				
ANR	5315691	Identifier	item		5315674	0					
ANR	5315692	CompoundStatement		3:11:51:51	5315674	1					
ANR	5315693	ExpressionStatement	item -> data = data	186:2:3637:3654	5315674	0	True				
ANR	5315694	AssignmentExpression	item -> data = data		5315674	0		=			
ANR	5315695	PtrMemberAccess	item -> data		5315674	0					
ANR	5315696	Identifier	item		5315674	0					
ANR	5315697	Identifier	data		5315674	1					
ANR	5315698	Identifier	data		5315674	1					
ANR	5315699	ReturnStatement	return item ;	188:1:3660:3671	5315674	2	True				
ANR	5315700	Identifier	item		5315674	0					
ANR	5315701	ReturnType	R_API RListIter *		5315674	1					
ANR	5315702	Identifier	r_list_item_new		5315674	2					
ANR	5315703	ParameterList	void * data		5315674	3					
ANR	5315704	Parameter	void * data	183:33:3569:3578	5315674	0	True				
ANR	5315705	ParameterType	void *		5315674	0					
ANR	5315706	Identifier	data		5315674	1					
ANR	5315707	CFGEntryNode	ENTRY		5315674		True				
ANR	5315708	CFGExitNode	EXIT		5315674		True				
ANR	5315709	Symbol	R_NEW0		5315674						
ANR	5315710	Symbol	item		5315674						
ANR	5315711	Symbol	data		5315674						
ANR	5315712	Symbol	* item		5315674						
ANR	5315713	Symbol	item -> data		5315674						
ANR	5315714	Symbol	RListIter		5315674						
ANR	5315715	Function	r_list_append	191:0:3676:4088							
ANR	5315716	FunctionDef	"r_list_append (RList * list , void * data)"		5315715	0					
ANR	5315717	CompoundStatement		191:56:3732:4088	5315715	0					
ANR	5315718	IdentifierDeclStatement	RListIter * item = NULL ;	192:1:3735:3757	5315715	0	True				
ANR	5315719	IdentifierDecl	* item = NULL		5315715	0					
ANR	5315720	IdentifierDeclType	RListIter *		5315715	0					
ANR	5315721	Identifier	item		5315715	1					
ANR	5315722	AssignmentExpression	* item = NULL		5315715	2		=			
ANR	5315723	Identifier	NULL		5315715	0					
ANR	5315724	Identifier	NULL		5315715	1					
ANR	5315725	ExpressionStatement	"r_return_val_if_fail ( list && data , NULL )"	194:1:3761:3802	5315715	1	True				
ANR	5315726	CallExpression	"r_return_val_if_fail ( list && data , NULL )"		5315715	0					
ANR	5315727	Callee	r_return_val_if_fail		5315715	0					
ANR	5315728	Identifier	r_return_val_if_fail		5315715	0					
ANR	5315729	ArgumentList	list && data		5315715	1					
ANR	5315730	Argument	list && data		5315715	0					
ANR	5315731	AndExpression	list && data		5315715	0		&&			
ANR	5315732	Identifier	list		5315715	0					
ANR	5315733	Identifier	data		5315715	1					
ANR	5315734	Argument	NULL		5315715	1					
ANR	5315735	Identifier	NULL		5315715	0					
ANR	5315736	ExpressionStatement	item = R_NEW ( RListIter )	196:1:3806:3830	5315715	2	True				
ANR	5315737	AssignmentExpression	item = R_NEW ( RListIter )		5315715	0		=			
ANR	5315738	Identifier	item		5315715	0					
ANR	5315739	CallExpression	R_NEW ( RListIter )		5315715	1					
ANR	5315740	Callee	R_NEW		5315715	0					
ANR	5315741	Identifier	R_NEW		5315715	0					
ANR	5315742	ArgumentList	RListIter		5315715	1					
ANR	5315743	Argument	RListIter		5315715	0					
ANR	5315744	Identifier	RListIter		5315715	0					
ANR	5315745	IfStatement	if ( ! item )		5315715	3					
ANR	5315746	Condition	! item	197:5:3837:3841	5315715	0	True				
ANR	5315747	UnaryOperationExpression	! item		5315715	0					
ANR	5315748	UnaryOperator	!		5315715	0					
ANR	5315749	Identifier	item		5315715	1					
ANR	5315750	CompoundStatement		7:12:111:111	5315715	1					
ANR	5315751	ReturnStatement	return item ;	198:2:3848:3859	5315715	0	True				
ANR	5315752	Identifier	item		5315715	0					
ANR	5315753	IfStatement	if ( list -> tail )		5315715	4					
ANR	5315754	Condition	list -> tail	200:5:3869:3878	5315715	0	True				
ANR	5315755	PtrMemberAccess	list -> tail		5315715	0					
ANR	5315756	Identifier	list		5315715	0					
ANR	5315757	Identifier	tail		5315715	1					
ANR	5315758	CompoundStatement		10:17:148:148	5315715	1					
ANR	5315759	ExpressionStatement	list -> tail -> n = item	201:2:3885:3905	5315715	0	True				
ANR	5315760	AssignmentExpression	list -> tail -> n = item		5315715	0		=			
ANR	5315761	PtrMemberAccess	list -> tail -> n		5315715	0					
ANR	5315762	PtrMemberAccess	list -> tail		5315715	0					
ANR	5315763	Identifier	list		5315715	0					
ANR	5315764	Identifier	tail		5315715	1					
ANR	5315765	Identifier	n		5315715	1					
ANR	5315766	Identifier	item		5315715	1					
ANR	5315767	ExpressionStatement	item -> data = data	203:1:3911:3928	5315715	5	True				
ANR	5315768	AssignmentExpression	item -> data = data		5315715	0		=			
ANR	5315769	PtrMemberAccess	item -> data		5315715	0					
ANR	5315770	Identifier	item		5315715	0					
ANR	5315771	Identifier	data		5315715	1					
ANR	5315772	Identifier	data		5315715	1					
ANR	5315773	ExpressionStatement	item -> p = list -> tail	204:1:3931:3951	5315715	6	True				
ANR	5315774	AssignmentExpression	item -> p = list -> tail		5315715	0		=			
ANR	5315775	PtrMemberAccess	item -> p		5315715	0					
ANR	5315776	Identifier	item		5315715	0					
ANR	5315777	Identifier	p		5315715	1					
ANR	5315778	PtrMemberAccess	list -> tail		5315715	1					
ANR	5315779	Identifier	list		5315715	0					
ANR	5315780	Identifier	tail		5315715	1					
ANR	5315781	ExpressionStatement	item -> n = NULL	205:1:3954:3968	5315715	7	True				
ANR	5315782	AssignmentExpression	item -> n = NULL		5315715	0		=			
ANR	5315783	PtrMemberAccess	item -> n		5315715	0					
ANR	5315784	Identifier	item		5315715	0					
ANR	5315785	Identifier	n		5315715	1					
ANR	5315786	Identifier	NULL		5315715	1					
ANR	5315787	ExpressionStatement	list -> tail = item	206:1:3971:3988	5315715	8	True				
ANR	5315788	AssignmentExpression	list -> tail = item		5315715	0		=			
ANR	5315789	PtrMemberAccess	list -> tail		5315715	0					
ANR	5315790	Identifier	list		5315715	0					
ANR	5315791	Identifier	tail		5315715	1					
ANR	5315792	Identifier	item		5315715	1					
ANR	5315793	IfStatement	if ( ! list -> head )		5315715	9					
ANR	5315794	Condition	! list -> head	207:5:3995:4005	5315715	0	True				
ANR	5315795	UnaryOperationExpression	! list -> head		5315715	0					
ANR	5315796	UnaryOperator	!		5315715	0					
ANR	5315797	PtrMemberAccess	list -> head		5315715	1					
ANR	5315798	Identifier	list		5315715	0					
ANR	5315799	Identifier	head		5315715	1					
ANR	5315800	CompoundStatement		17:18:275:275	5315715	1					
ANR	5315801	ExpressionStatement	list -> head = item	208:2:4012:4029	5315715	0	True				
ANR	5315802	AssignmentExpression	list -> head = item		5315715	0		=			
ANR	5315803	PtrMemberAccess	list -> head		5315715	0					
ANR	5315804	Identifier	list		5315715	0					
ANR	5315805	Identifier	head		5315715	1					
ANR	5315806	Identifier	item		5315715	1					
ANR	5315807	ExpressionStatement	list -> length ++	210:1:4035:4049	5315715	10	True				
ANR	5315808	PostIncDecOperationExpression	list -> length ++		5315715	0					
ANR	5315809	PtrMemberAccess	list -> length		5315715	0					
ANR	5315810	Identifier	list		5315715	0					
ANR	5315811	Identifier	length		5315715	1					
ANR	5315812	IncDec	++		5315715	1					
ANR	5315813	ExpressionStatement	list -> sorted = false	211:1:4052:4072	5315715	11	True				
ANR	5315814	AssignmentExpression	list -> sorted = false		5315715	0		=			
ANR	5315815	PtrMemberAccess	list -> sorted		5315715	0					
ANR	5315816	Identifier	list		5315715	0					
ANR	5315817	Identifier	sorted		5315715	1					
ANR	5315818	Identifier	false		5315715	1					
ANR	5315819	ReturnStatement	return item ;	212:1:4075:4086	5315715	12	True				
ANR	5315820	Identifier	item		5315715	0					
ANR	5315821	ReturnType	R_API RListIter *		5315715	1					
ANR	5315822	Identifier	r_list_append		5315715	2					
ANR	5315823	ParameterList	"RList * list , void * data"		5315715	3					
ANR	5315824	Parameter	RList * list	191:31:3707:3717	5315715	0	True				
ANR	5315825	ParameterType	RList *		5315715	0					
ANR	5315826	Identifier	list		5315715	1					
ANR	5315827	Parameter	void * data	191:44:3720:3729	5315715	1	True				
ANR	5315828	ParameterType	void *		5315715	0					
ANR	5315829	Identifier	data		5315715	1					
ANR	5315830	CFGEntryNode	ENTRY		5315715		True				
ANR	5315831	CFGExitNode	EXIT		5315715		True				
ANR	5315832	Symbol	item		5315715						
ANR	5315833	Symbol	list -> tail -> n		5315715						
ANR	5315834	Symbol	list -> length		5315715						
ANR	5315835	Symbol	NULL		5315715						
ANR	5315836	Symbol	data		5315715						
ANR	5315837	Symbol	false		5315715						
ANR	5315838	Symbol	item -> p		5315715						
ANR	5315839	Symbol	item -> n		5315715						
ANR	5315840	Symbol	list		5315715						
ANR	5315841	Symbol	list -> head		5315715						
ANR	5315842	Symbol	* * list		5315715						
ANR	5315843	Symbol	* list		5315715						
ANR	5315844	Symbol	* list -> tail		5315715						
ANR	5315845	Symbol	* item		5315715						
ANR	5315846	Symbol	list -> sorted		5315715						
ANR	5315847	Symbol	item -> data		5315715						
ANR	5315848	Symbol	R_NEW		5315715						
ANR	5315849	Symbol	RListIter		5315715						
ANR	5315850	Symbol	list -> tail		5315715						
ANR	5315851	Function	r_list_prepend	215:0:4091:4481							
ANR	5315852	FunctionDef	"r_list_prepend (RList * list , void * data)"		5315851	0					
ANR	5315853	CompoundStatement		215:57:4148:4481	5315851	0					
ANR	5315854	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	216:1:4151:4184	5315851	0	True				
ANR	5315855	CallExpression	"r_return_val_if_fail ( list , NULL )"		5315851	0					
ANR	5315856	Callee	r_return_val_if_fail		5315851	0					
ANR	5315857	Identifier	r_return_val_if_fail		5315851	0					
ANR	5315858	ArgumentList	list		5315851	1					
ANR	5315859	Argument	list		5315851	0					
ANR	5315860	Identifier	list		5315851	0					
ANR	5315861	Argument	NULL		5315851	1					
ANR	5315862	Identifier	NULL		5315851	0					
ANR	5315863	IdentifierDeclStatement	RListIter * item = R_NEW0 ( RListIter ) ;	218:1:4188:4224	5315851	1	True				
ANR	5315864	IdentifierDecl	* item = R_NEW0 ( RListIter )		5315851	0					
ANR	5315865	IdentifierDeclType	RListIter *		5315851	0					
ANR	5315866	Identifier	item		5315851	1					
ANR	5315867	AssignmentExpression	* item = R_NEW0 ( RListIter )		5315851	2		=			
ANR	5315868	Identifier	item		5315851	0					
ANR	5315869	CallExpression	R_NEW0 ( RListIter )		5315851	1					
ANR	5315870	Callee	R_NEW0		5315851	0					
ANR	5315871	Identifier	R_NEW0		5315851	0					
ANR	5315872	ArgumentList	RListIter		5315851	1					
ANR	5315873	Argument	RListIter		5315851	0					
ANR	5315874	Identifier	RListIter		5315851	0					
ANR	5315875	IfStatement	if ( ! item )		5315851	2					
ANR	5315876	Condition	! item	219:5:4231:4235	5315851	0	True				
ANR	5315877	UnaryOperationExpression	! item		5315851	0					
ANR	5315878	UnaryOperator	!		5315851	0					
ANR	5315879	Identifier	item		5315851	1					
ANR	5315880	CompoundStatement		5:12:89:89	5315851	1					
ANR	5315881	ReturnStatement	return NULL ;	220:2:4242:4253	5315851	0	True				
ANR	5315882	Identifier	NULL		5315851	0					
ANR	5315883	IfStatement	if ( list -> head )		5315851	3					
ANR	5315884	Condition	list -> head	222:5:4263:4272	5315851	0	True				
ANR	5315885	PtrMemberAccess	list -> head		5315851	0					
ANR	5315886	Identifier	list		5315851	0					
ANR	5315887	Identifier	head		5315851	1					
ANR	5315888	CompoundStatement		8:17:126:126	5315851	1					
ANR	5315889	ExpressionStatement	list -> head -> p = item	223:2:4279:4299	5315851	0	True				
ANR	5315890	AssignmentExpression	list -> head -> p = item		5315851	0		=			
ANR	5315891	PtrMemberAccess	list -> head -> p		5315851	0					
ANR	5315892	PtrMemberAccess	list -> head		5315851	0					
ANR	5315893	Identifier	list		5315851	0					
ANR	5315894	Identifier	head		5315851	1					
ANR	5315895	Identifier	p		5315851	1					
ANR	5315896	Identifier	item		5315851	1					
ANR	5315897	ExpressionStatement	item -> data = data	225:1:4305:4322	5315851	4	True				
ANR	5315898	AssignmentExpression	item -> data = data		5315851	0		=			
ANR	5315899	PtrMemberAccess	item -> data		5315851	0					
ANR	5315900	Identifier	item		5315851	0					
ANR	5315901	Identifier	data		5315851	1					
ANR	5315902	Identifier	data		5315851	1					
ANR	5315903	ExpressionStatement	item -> n = list -> head	226:1:4325:4345	5315851	5	True				
ANR	5315904	AssignmentExpression	item -> n = list -> head		5315851	0		=			
ANR	5315905	PtrMemberAccess	item -> n		5315851	0					
ANR	5315906	Identifier	item		5315851	0					
ANR	5315907	Identifier	n		5315851	1					
ANR	5315908	PtrMemberAccess	list -> head		5315851	1					
ANR	5315909	Identifier	list		5315851	0					
ANR	5315910	Identifier	head		5315851	1					
ANR	5315911	ExpressionStatement	item -> p = NULL	227:1:4348:4362	5315851	6	True				
ANR	5315912	AssignmentExpression	item -> p = NULL		5315851	0		=			
ANR	5315913	PtrMemberAccess	item -> p		5315851	0					
ANR	5315914	Identifier	item		5315851	0					
ANR	5315915	Identifier	p		5315851	1					
ANR	5315916	Identifier	NULL		5315851	1					
ANR	5315917	ExpressionStatement	list -> head = item	228:1:4365:4382	5315851	7	True				
ANR	5315918	AssignmentExpression	list -> head = item		5315851	0		=			
ANR	5315919	PtrMemberAccess	list -> head		5315851	0					
ANR	5315920	Identifier	list		5315851	0					
ANR	5315921	Identifier	head		5315851	1					
ANR	5315922	Identifier	item		5315851	1					
ANR	5315923	IfStatement	if ( ! list -> tail )		5315851	8					
ANR	5315924	Condition	! list -> tail	229:5:4389:4399	5315851	0	True				
ANR	5315925	UnaryOperationExpression	! list -> tail		5315851	0					
ANR	5315926	UnaryOperator	!		5315851	0					
ANR	5315927	PtrMemberAccess	list -> tail		5315851	1					
ANR	5315928	Identifier	list		5315851	0					
ANR	5315929	Identifier	tail		5315851	1					
ANR	5315930	CompoundStatement		15:18:253:253	5315851	1					
ANR	5315931	ExpressionStatement	list -> tail = item	230:2:4406:4423	5315851	0	True				
ANR	5315932	AssignmentExpression	list -> tail = item		5315851	0		=			
ANR	5315933	PtrMemberAccess	list -> tail		5315851	0					
ANR	5315934	Identifier	list		5315851	0					
ANR	5315935	Identifier	tail		5315851	1					
ANR	5315936	Identifier	item		5315851	1					
ANR	5315937	ExpressionStatement	list -> length ++	232:1:4429:4443	5315851	9	True				
ANR	5315938	PostIncDecOperationExpression	list -> length ++		5315851	0					
ANR	5315939	PtrMemberAccess	list -> length		5315851	0					
ANR	5315940	Identifier	list		5315851	0					
ANR	5315941	Identifier	length		5315851	1					
ANR	5315942	IncDec	++		5315851	1					
ANR	5315943	ExpressionStatement	list -> sorted = true	233:1:4446:4465	5315851	10	True				
ANR	5315944	AssignmentExpression	list -> sorted = true		5315851	0		=			
ANR	5315945	PtrMemberAccess	list -> sorted		5315851	0					
ANR	5315946	Identifier	list		5315851	0					
ANR	5315947	Identifier	sorted		5315851	1					
ANR	5315948	Identifier	true		5315851	1					
ANR	5315949	ReturnStatement	return item ;	234:1:4468:4479	5315851	11	True				
ANR	5315950	Identifier	item		5315851	0					
ANR	5315951	ReturnType	R_API RListIter *		5315851	1					
ANR	5315952	Identifier	r_list_prepend		5315851	2					
ANR	5315953	ParameterList	"RList * list , void * data"		5315851	3					
ANR	5315954	Parameter	RList * list	215:32:4123:4133	5315851	0	True				
ANR	5315955	ParameterType	RList *		5315851	0					
ANR	5315956	Identifier	list		5315851	1					
ANR	5315957	Parameter	void * data	215:45:4136:4145	5315851	1	True				
ANR	5315958	ParameterType	void *		5315851	0					
ANR	5315959	Identifier	data		5315851	1					
ANR	5315960	CFGEntryNode	ENTRY		5315851		True				
ANR	5315961	CFGExitNode	EXIT		5315851		True				
ANR	5315962	Symbol	item		5315851						
ANR	5315963	Symbol	* list -> head		5315851						
ANR	5315964	Symbol	list -> length		5315851						
ANR	5315965	Symbol	NULL		5315851						
ANR	5315966	Symbol	list -> head -> p		5315851						
ANR	5315967	Symbol	data		5315851						
ANR	5315968	Symbol	item -> p		5315851						
ANR	5315969	Symbol	item -> n		5315851						
ANR	5315970	Symbol	list		5315851						
ANR	5315971	Symbol	list -> head		5315851						
ANR	5315972	Symbol	R_NEW0		5315851						
ANR	5315973	Symbol	* * list		5315851						
ANR	5315974	Symbol	* list		5315851						
ANR	5315975	Symbol	* item		5315851						
ANR	5315976	Symbol	list -> sorted		5315851						
ANR	5315977	Symbol	true		5315851						
ANR	5315978	Symbol	item -> data		5315851						
ANR	5315979	Symbol	RListIter		5315851						
ANR	5315980	Symbol	list -> tail		5315851						
ANR	5315981	Function	r_list_insert	237:0:4484:5053							
ANR	5315982	FunctionDef	"r_list_insert (RList * list , int n , void * data)"		5315981	0					
ANR	5315983	CompoundStatement		237:63:4547:5053	5315981	0					
ANR	5315984	IdentifierDeclStatement	"RListIter * it , * item ;"	238:1:4550:4570	5315981	0	True				
ANR	5315985	IdentifierDecl	* it		5315981	0					
ANR	5315986	IdentifierDeclType	RListIter *		5315981	0					
ANR	5315987	Identifier	it		5315981	1					
ANR	5315988	IdentifierDecl	* item		5315981	1					
ANR	5315989	IdentifierDeclType	RListIter *		5315981	0					
ANR	5315990	Identifier	item		5315981	1					
ANR	5315991	IdentifierDeclStatement	int i ;	239:1:4573:4578	5315981	1	True				
ANR	5315992	IdentifierDecl	i		5315981	0					
ANR	5315993	IdentifierDeclType	int		5315981	0					
ANR	5315994	Identifier	i		5315981	1					
ANR	5315995	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	241:1:4582:4615	5315981	2	True				
ANR	5315996	CallExpression	"r_return_val_if_fail ( list , NULL )"		5315981	0					
ANR	5315997	Callee	r_return_val_if_fail		5315981	0					
ANR	5315998	Identifier	r_return_val_if_fail		5315981	0					
ANR	5315999	ArgumentList	list		5315981	1					
ANR	5316000	Argument	list		5315981	0					
ANR	5316001	Identifier	list		5315981	0					
ANR	5316002	Argument	NULL		5315981	1					
ANR	5316003	Identifier	NULL		5315981	0					
ANR	5316004	IfStatement	if ( ! list -> head || ! n )		5315981	3					
ANR	5316005	Condition	! list -> head || ! n	243:5:4623:4639	5315981	0	True				
ANR	5316006	OrExpression	! list -> head || ! n		5315981	0		||			
ANR	5316007	UnaryOperationExpression	! list -> head		5315981	0					
ANR	5316008	UnaryOperator	!		5315981	0					
ANR	5316009	PtrMemberAccess	list -> head		5315981	1					
ANR	5316010	Identifier	list		5315981	0					
ANR	5316011	Identifier	head		5315981	1					
ANR	5316012	UnaryOperationExpression	! n		5315981	1					
ANR	5316013	UnaryOperator	!		5315981	0					
ANR	5316014	Identifier	n		5315981	1					
ANR	5316015	CompoundStatement		7:24:94:94	5315981	1					
ANR	5316016	ReturnStatement	"return r_list_prepend ( list , data ) ;"	244:2:4646:4680	5315981	0	True				
ANR	5316017	CallExpression	"r_list_prepend ( list , data )"		5315981	0					
ANR	5316018	Callee	r_list_prepend		5315981	0					
ANR	5316019	Identifier	r_list_prepend		5315981	0					
ANR	5316020	ArgumentList	list		5315981	1					
ANR	5316021	Argument	list		5315981	0					
ANR	5316022	Identifier	list		5315981	0					
ANR	5316023	Argument	data		5315981	1					
ANR	5316024	Identifier	data		5315981	0					
ANR	5316025	ForStatement	"for ( it = list -> head , i = 0 ; it && it -> data ; it = it -> n , i ++ )"		5315981	4					
ANR	5316026	ForInit	"it = list -> head , i = 0 ;"	246:6:4691:4713	5315981	0	True				
ANR	5316027	Expression	"it = list -> head , i = 0"		5315981	0					
ANR	5316028	AssignmentExpression	it = list -> head		5315981	0		=			
ANR	5316029	Identifier	it		5315981	0					
ANR	5316030	PtrMemberAccess	list -> head		5315981	1					
ANR	5316031	Identifier	list		5315981	0					
ANR	5316032	Identifier	head		5315981	1					
ANR	5316033	AssignmentExpression	i = 0		5315981	1		=			
ANR	5316034	Identifier	i		5315981	0					
ANR	5316035	PrimaryExpression	0		5315981	1					
ANR	5316036	Condition	it && it -> data	246:30:4715:4728	5315981	1	True				
ANR	5316037	AndExpression	it && it -> data		5315981	0		&&			
ANR	5316038	Identifier	it		5315981	0					
ANR	5316039	PtrMemberAccess	it -> data		5315981	1					
ANR	5316040	Identifier	it		5315981	0					
ANR	5316041	Identifier	data		5315981	1					
ANR	5316042	Expression	"it = it -> n , i ++"	246:46:4731:4745	5315981	2	True				
ANR	5316043	AssignmentExpression	it = it -> n		5315981	0		=			
ANR	5316044	Identifier	it		5315981	0					
ANR	5316045	PtrMemberAccess	it -> n		5315981	1					
ANR	5316046	Identifier	it		5315981	0					
ANR	5316047	Identifier	n		5315981	1					
ANR	5316048	PostIncDecOperationExpression	i ++		5315981	1					
ANR	5316049	Identifier	i		5315981	0					
ANR	5316050	IncDec	++		5315981	1					
ANR	5316051	CompoundStatement		10:63:200:200	5315981	3					
ANR	5316052	IfStatement	if ( i == n )		5315981	0					
ANR	5316053	Condition	i == n	247:6:4756:4761	5315981	0	True				
ANR	5316054	EqualityExpression	i == n		5315981	0		==			
ANR	5316055	Identifier	i		5315981	0					
ANR	5316056	Identifier	n		5315981	1					
ANR	5316057	CompoundStatement		11:14:216:216	5315981	1					
ANR	5316058	ExpressionStatement	item = R_NEW ( RListIter )	248:3:4769:4793	5315981	0	True				
ANR	5316059	AssignmentExpression	item = R_NEW ( RListIter )		5315981	0		=			
ANR	5316060	Identifier	item		5315981	0					
ANR	5316061	CallExpression	R_NEW ( RListIter )		5315981	1					
ANR	5316062	Callee	R_NEW		5315981	0					
ANR	5316063	Identifier	R_NEW		5315981	0					
ANR	5316064	ArgumentList	RListIter		5315981	1					
ANR	5316065	Argument	RListIter		5315981	0					
ANR	5316066	Identifier	RListIter		5315981	0					
ANR	5316067	IfStatement	if ( ! item )		5315981	1					
ANR	5316068	Condition	! item	249:7:4802:4806	5315981	0	True				
ANR	5316069	UnaryOperationExpression	! item		5315981	0					
ANR	5316070	UnaryOperator	!		5315981	0					
ANR	5316071	Identifier	item		5315981	1					
ANR	5316072	CompoundStatement		13:14:261:261	5315981	1					
ANR	5316073	ReturnStatement	return NULL ;	250:4:4815:4826	5315981	0	True				
ANR	5316074	Identifier	NULL		5315981	0					
ANR	5316075	ExpressionStatement	item -> data = data	252:3:4836:4853	5315981	2	True				
ANR	5316076	AssignmentExpression	item -> data = data		5315981	0		=			
ANR	5316077	PtrMemberAccess	item -> data		5315981	0					
ANR	5316078	Identifier	item		5315981	0					
ANR	5316079	Identifier	data		5315981	1					
ANR	5316080	Identifier	data		5315981	1					
ANR	5316081	ExpressionStatement	item -> n = it	253:3:4858:4870	5315981	3	True				
ANR	5316082	AssignmentExpression	item -> n = it		5315981	0		=			
ANR	5316083	PtrMemberAccess	item -> n		5315981	0					
ANR	5316084	Identifier	item		5315981	0					
ANR	5316085	Identifier	n		5315981	1					
ANR	5316086	Identifier	it		5315981	1					
ANR	5316087	ExpressionStatement	item -> p = it -> p	254:3:4875:4890	5315981	4	True				
ANR	5316088	AssignmentExpression	item -> p = it -> p		5315981	0		=			
ANR	5316089	PtrMemberAccess	item -> p		5315981	0					
ANR	5316090	Identifier	item		5315981	0					
ANR	5316091	Identifier	p		5315981	1					
ANR	5316092	PtrMemberAccess	it -> p		5315981	1					
ANR	5316093	Identifier	it		5315981	0					
ANR	5316094	Identifier	p		5315981	1					
ANR	5316095	IfStatement	if ( it -> p )		5315981	5					
ANR	5316096	Condition	it -> p	255:7:4899:4903	5315981	0	True				
ANR	5316097	PtrMemberAccess	it -> p		5315981	0					
ANR	5316098	Identifier	it		5315981	0					
ANR	5316099	Identifier	p		5315981	1					
ANR	5316100	CompoundStatement		19:14:358:358	5315981	1					
ANR	5316101	ExpressionStatement	it -> p -> n = item	256:4:4912:4927	5315981	0	True				
ANR	5316102	AssignmentExpression	it -> p -> n = item		5315981	0		=			
ANR	5316103	PtrMemberAccess	it -> p -> n		5315981	0					
ANR	5316104	PtrMemberAccess	it -> p		5315981	0					
ANR	5316105	Identifier	it		5315981	0					
ANR	5316106	Identifier	p		5315981	1					
ANR	5316107	Identifier	n		5315981	1					
ANR	5316108	Identifier	item		5315981	1					
ANR	5316109	ExpressionStatement	it -> p = item	258:3:4937:4949	5315981	6	True				
ANR	5316110	AssignmentExpression	it -> p = item		5315981	0		=			
ANR	5316111	PtrMemberAccess	it -> p		5315981	0					
ANR	5316112	Identifier	it		5315981	0					
ANR	5316113	Identifier	p		5315981	1					
ANR	5316114	Identifier	item		5315981	1					
ANR	5316115	ExpressionStatement	list -> length ++	259:3:4954:4968	5315981	7	True				
ANR	5316116	PostIncDecOperationExpression	list -> length ++		5315981	0					
ANR	5316117	PtrMemberAccess	list -> length		5315981	0					
ANR	5316118	Identifier	list		5315981	0					
ANR	5316119	Identifier	length		5315981	1					
ANR	5316120	IncDec	++		5315981	1					
ANR	5316121	ExpressionStatement	list -> sorted = true	260:3:4973:4992	5315981	8	True				
ANR	5316122	AssignmentExpression	list -> sorted = true		5315981	0		=			
ANR	5316123	PtrMemberAccess	list -> sorted		5315981	0					
ANR	5316124	Identifier	list		5315981	0					
ANR	5316125	Identifier	sorted		5315981	1					
ANR	5316126	Identifier	true		5315981	1					
ANR	5316127	ReturnStatement	return item ;	261:3:4997:5008	5315981	9	True				
ANR	5316128	Identifier	item		5315981	0					
ANR	5316129	ReturnStatement	"return r_list_append ( list , data ) ;"	264:1:5018:5051	5315981	5	True				
ANR	5316130	CallExpression	"r_list_append ( list , data )"		5315981	0					
ANR	5316131	Callee	r_list_append		5315981	0					
ANR	5316132	Identifier	r_list_append		5315981	0					
ANR	5316133	ArgumentList	list		5315981	1					
ANR	5316134	Argument	list		5315981	0					
ANR	5316135	Identifier	list		5315981	0					
ANR	5316136	Argument	data		5315981	1					
ANR	5316137	Identifier	data		5315981	0					
ANR	5316138	ReturnType	R_API RListIter *		5315981	1					
ANR	5316139	Identifier	r_list_insert		5315981	2					
ANR	5316140	ParameterList	"RList * list , int n , void * data"		5315981	3					
ANR	5316141	Parameter	RList * list	237:31:4515:4525	5315981	0	True				
ANR	5316142	ParameterType	RList *		5315981	0					
ANR	5316143	Identifier	list		5315981	1					
ANR	5316144	Parameter	int n	237:44:4528:4532	5315981	1	True				
ANR	5316145	ParameterType	int		5315981	0					
ANR	5316146	Identifier	n		5315981	1					
ANR	5316147	Parameter	void * data	237:51:4535:4544	5315981	2	True				
ANR	5316148	ParameterType	void *		5315981	0					
ANR	5316149	Identifier	data		5315981	1					
ANR	5316150	CFGEntryNode	ENTRY		5315981		True				
ANR	5316151	CFGExitNode	EXIT		5315981		True				
ANR	5316152	Symbol	data		5315981						
ANR	5316153	Symbol	* * it		5315981						
ANR	5316154	Symbol	* item		5315981						
ANR	5316155	Symbol	list -> sorted		5315981						
ANR	5316156	Symbol	item -> data		5315981						
ANR	5316157	Symbol	item		5315981						
ANR	5316158	Symbol	r_list_prepend		5315981						
ANR	5316159	Symbol	list -> length		5315981						
ANR	5316160	Symbol	NULL		5315981						
ANR	5316161	Symbol	i		5315981						
ANR	5316162	Symbol	item -> p		5315981						
ANR	5316163	Symbol	it		5315981						
ANR	5316164	Symbol	item -> n		5315981						
ANR	5316165	Symbol	list		5315981						
ANR	5316166	Symbol	it -> n		5315981						
ANR	5316167	Symbol	n		5315981						
ANR	5316168	Symbol	it -> p		5315981						
ANR	5316169	Symbol	list -> head		5315981						
ANR	5316170	Symbol	* it		5315981						
ANR	5316171	Symbol	it -> p -> n		5315981						
ANR	5316172	Symbol	* list		5315981						
ANR	5316173	Symbol	r_list_append		5315981						
ANR	5316174	Symbol	* it -> p		5315981						
ANR	5316175	Symbol	true		5315981						
ANR	5316176	Symbol	it -> data		5315981						
ANR	5316177	Symbol	R_NEW		5315981						
ANR	5316178	Symbol	RListIter		5315981						
ANR	5316179	Function	r_list_pop	267:0:5056:5414							
ANR	5316180	FunctionDef	r_list_pop (RList * list)		5316179	0					
ANR	5316181	CompoundStatement		267:36:5092:5414	5316179	0					
ANR	5316182	IdentifierDeclStatement	void * data = NULL ;	268:1:5095:5112	5316179	0	True				
ANR	5316183	IdentifierDecl	* data = NULL		5316179	0					
ANR	5316184	IdentifierDeclType	void *		5316179	0					
ANR	5316185	Identifier	data		5316179	1					
ANR	5316186	AssignmentExpression	* data = NULL		5316179	2		=			
ANR	5316187	Identifier	NULL		5316179	0					
ANR	5316188	Identifier	NULL		5316179	1					
ANR	5316189	IdentifierDeclStatement	RListIter * iter ;	269:1:5115:5130	5316179	1	True				
ANR	5316190	IdentifierDecl	* iter		5316179	0					
ANR	5316191	IdentifierDeclType	RListIter *		5316179	0					
ANR	5316192	Identifier	iter		5316179	1					
ANR	5316193	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	271:1:5134:5167	5316179	2	True				
ANR	5316194	CallExpression	"r_return_val_if_fail ( list , NULL )"		5316179	0					
ANR	5316195	Callee	r_return_val_if_fail		5316179	0					
ANR	5316196	Identifier	r_return_val_if_fail		5316179	0					
ANR	5316197	ArgumentList	list		5316179	1					
ANR	5316198	Argument	list		5316179	0					
ANR	5316199	Identifier	list		5316179	0					
ANR	5316200	Argument	NULL		5316179	1					
ANR	5316201	Identifier	NULL		5316179	0					
ANR	5316202	IfStatement	if ( list -> tail )		5316179	3					
ANR	5316203	Condition	list -> tail	273:5:5175:5184	5316179	0	True				
ANR	5316204	PtrMemberAccess	list -> tail		5316179	0					
ANR	5316205	Identifier	list		5316179	0					
ANR	5316206	Identifier	tail		5316179	1					
ANR	5316207	CompoundStatement		7:17:94:94	5316179	1					
ANR	5316208	ExpressionStatement	iter = list -> tail	274:2:5191:5208	5316179	0	True				
ANR	5316209	AssignmentExpression	iter = list -> tail		5316179	0		=			
ANR	5316210	Identifier	iter		5316179	0					
ANR	5316211	PtrMemberAccess	list -> tail		5316179	1					
ANR	5316212	Identifier	list		5316179	0					
ANR	5316213	Identifier	tail		5316179	1					
ANR	5316214	IfStatement	if ( list -> head == list -> tail )		5316179	1					
ANR	5316215	Condition	list -> head == list -> tail	275:6:5216:5239	5316179	0	True				
ANR	5316216	EqualityExpression	list -> head == list -> tail		5316179	0		==			
ANR	5316217	PtrMemberAccess	list -> head		5316179	0					
ANR	5316218	Identifier	list		5316179	0					
ANR	5316219	Identifier	head		5316179	1					
ANR	5316220	PtrMemberAccess	list -> tail		5316179	1					
ANR	5316221	Identifier	list		5316179	0					
ANR	5316222	Identifier	tail		5316179	1					
ANR	5316223	CompoundStatement		9:32:149:149	5316179	1					
ANR	5316224	ExpressionStatement	list -> head = list -> tail = NULL	276:3:5247:5277	5316179	0	True				
ANR	5316225	AssignmentExpression	list -> head = list -> tail = NULL		5316179	0		=			
ANR	5316226	PtrMemberAccess	list -> head		5316179	0					
ANR	5316227	Identifier	list		5316179	0					
ANR	5316228	Identifier	head		5316179	1					
ANR	5316229	AssignmentExpression	list -> tail = NULL		5316179	1		=			
ANR	5316230	PtrMemberAccess	list -> tail		5316179	0					
ANR	5316231	Identifier	list		5316179	0					
ANR	5316232	Identifier	tail		5316179	1					
ANR	5316233	Identifier	NULL		5316179	1					
ANR	5316234	ElseStatement	else		5316179	0					
ANR	5316235	CompoundStatement		11:9:195:195	5316179	0					
ANR	5316236	ExpressionStatement	list -> tail = iter -> p	278:3:5293:5313	5316179	0	True				
ANR	5316237	AssignmentExpression	list -> tail = iter -> p		5316179	0		=			
ANR	5316238	PtrMemberAccess	list -> tail		5316179	0					
ANR	5316239	Identifier	list		5316179	0					
ANR	5316240	Identifier	tail		5316179	1					
ANR	5316241	PtrMemberAccess	iter -> p		5316179	1					
ANR	5316242	Identifier	iter		5316179	0					
ANR	5316243	Identifier	p		5316179	1					
ANR	5316244	ExpressionStatement	list -> tail -> n = NULL	279:3:5318:5338	5316179	1	True				
ANR	5316245	AssignmentExpression	list -> tail -> n = NULL		5316179	0		=			
ANR	5316246	PtrMemberAccess	list -> tail -> n		5316179	0					
ANR	5316247	PtrMemberAccess	list -> tail		5316179	0					
ANR	5316248	Identifier	list		5316179	0					
ANR	5316249	Identifier	tail		5316179	1					
ANR	5316250	Identifier	n		5316179	1					
ANR	5316251	Identifier	NULL		5316179	1					
ANR	5316252	ExpressionStatement	data = iter -> data	281:2:5346:5363	5316179	2	True				
ANR	5316253	AssignmentExpression	data = iter -> data		5316179	0		=			
ANR	5316254	Identifier	data		5316179	0					
ANR	5316255	PtrMemberAccess	iter -> data		5316179	1					
ANR	5316256	Identifier	iter		5316179	0					
ANR	5316257	Identifier	data		5316179	1					
ANR	5316258	ExpressionStatement	free ( iter )	282:2:5367:5378	5316179	3	True				
ANR	5316259	CallExpression	free ( iter )		5316179	0					
ANR	5316260	Callee	free		5316179	0					
ANR	5316261	Identifier	free		5316179	0					
ANR	5316262	ArgumentList	iter		5316179	1					
ANR	5316263	Argument	iter		5316179	0					
ANR	5316264	Identifier	iter		5316179	0					
ANR	5316265	ExpressionStatement	list -> length --	284:1:5384:5398	5316179	4	True				
ANR	5316266	PostIncDecOperationExpression	list -> length --		5316179	0					
ANR	5316267	PtrMemberAccess	list -> length		5316179	0					
ANR	5316268	Identifier	list		5316179	0					
ANR	5316269	Identifier	length		5316179	1					
ANR	5316270	IncDec	--		5316179	1					
ANR	5316271	ReturnStatement	return data ;	285:1:5401:5412	5316179	5	True				
ANR	5316272	Identifier	data		5316179	0					
ANR	5316273	ReturnType	R_API void *		5316179	1					
ANR	5316274	Identifier	r_list_pop		5316179	2					
ANR	5316275	ParameterList	RList * list		5316179	3					
ANR	5316276	Parameter	RList * list	267:23:5079:5089	5316179	0	True				
ANR	5316277	ParameterType	RList *		5316179	0					
ANR	5316278	Identifier	list		5316179	1					
ANR	5316279	CFGEntryNode	ENTRY		5316179		True				
ANR	5316280	CFGExitNode	EXIT		5316179		True				
ANR	5316281	Symbol	list -> tail -> n		5316179						
ANR	5316282	Symbol	list -> length		5316179						
ANR	5316283	Symbol	NULL		5316179						
ANR	5316284	Symbol	data		5316179						
ANR	5316285	Symbol	iter		5316179						
ANR	5316286	Symbol	list		5316179						
ANR	5316287	Symbol	list -> head		5316179						
ANR	5316288	Symbol	* iter		5316179						
ANR	5316289	Symbol	* * list		5316179						
ANR	5316290	Symbol	* list		5316179						
ANR	5316291	Symbol	* list -> tail		5316179						
ANR	5316292	Symbol	iter -> p		5316179						
ANR	5316293	Symbol	iter -> data		5316179						
ANR	5316294	Symbol	list -> tail		5316179						
ANR	5316295	Function	r_list_pop_head	288:0:5417:5773							
ANR	5316296	FunctionDef	r_list_pop_head (RList * list)		5316295	0					
ANR	5316297	CompoundStatement		288:41:5458:5773	5316295	0					
ANR	5316298	IdentifierDeclStatement	void * data = NULL ;	289:1:5461:5478	5316295	0	True				
ANR	5316299	IdentifierDecl	* data = NULL		5316295	0					
ANR	5316300	IdentifierDeclType	void *		5316295	0					
ANR	5316301	Identifier	data		5316295	1					
ANR	5316302	AssignmentExpression	* data = NULL		5316295	2		=			
ANR	5316303	Identifier	NULL		5316295	0					
ANR	5316304	Identifier	NULL		5316295	1					
ANR	5316305	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	291:1:5482:5515	5316295	1	True				
ANR	5316306	CallExpression	"r_return_val_if_fail ( list , NULL )"		5316295	0					
ANR	5316307	Callee	r_return_val_if_fail		5316295	0					
ANR	5316308	Identifier	r_return_val_if_fail		5316295	0					
ANR	5316309	ArgumentList	list		5316295	1					
ANR	5316310	Argument	list		5316295	0					
ANR	5316311	Identifier	list		5316295	0					
ANR	5316312	Argument	NULL		5316295	1					
ANR	5316313	Identifier	NULL		5316295	0					
ANR	5316314	IfStatement	if ( list -> head )		5316295	2					
ANR	5316315	Condition	list -> head	293:5:5523:5532	5316295	0	True				
ANR	5316316	PtrMemberAccess	list -> head		5316295	0					
ANR	5316317	Identifier	list		5316295	0					
ANR	5316318	Identifier	head		5316295	1					
ANR	5316319	CompoundStatement		7:2:80:108	5316295	1					
ANR	5316320	IdentifierDeclStatement	RListIter * iter = list -> head ;	294:2:5539:5567	5316295	0	True				
ANR	5316321	IdentifierDecl	* iter = list -> head		5316295	0					
ANR	5316322	IdentifierDeclType	RListIter *		5316295	0					
ANR	5316323	Identifier	iter		5316295	1					
ANR	5316324	AssignmentExpression	* iter = list -> head		5316295	2		=			
ANR	5316325	Identifier	iter		5316295	0					
ANR	5316326	PtrMemberAccess	list -> head		5316295	1					
ANR	5316327	Identifier	list		5316295	0					
ANR	5316328	Identifier	head		5316295	1					
ANR	5316329	IfStatement	if ( list -> head == list -> tail )		5316295	1					
ANR	5316330	Condition	list -> head == list -> tail	295:6:5575:5598	5316295	0	True				
ANR	5316331	EqualityExpression	list -> head == list -> tail		5316295	0		==			
ANR	5316332	PtrMemberAccess	list -> head		5316295	0					
ANR	5316333	Identifier	list		5316295	0					
ANR	5316334	Identifier	head		5316295	1					
ANR	5316335	PtrMemberAccess	list -> tail		5316295	1					
ANR	5316336	Identifier	list		5316295	0					
ANR	5316337	Identifier	tail		5316295	1					
ANR	5316338	CompoundStatement		8:32:142:142	5316295	1					
ANR	5316339	ExpressionStatement	list -> head = list -> tail = NULL	296:3:5606:5636	5316295	0	True				
ANR	5316340	AssignmentExpression	list -> head = list -> tail = NULL		5316295	0		=			
ANR	5316341	PtrMemberAccess	list -> head		5316295	0					
ANR	5316342	Identifier	list		5316295	0					
ANR	5316343	Identifier	head		5316295	1					
ANR	5316344	AssignmentExpression	list -> tail = NULL		5316295	1		=			
ANR	5316345	PtrMemberAccess	list -> tail		5316295	0					
ANR	5316346	Identifier	list		5316295	0					
ANR	5316347	Identifier	tail		5316295	1					
ANR	5316348	Identifier	NULL		5316295	1					
ANR	5316349	ElseStatement	else		5316295	0					
ANR	5316350	CompoundStatement		10:9:188:188	5316295	0					
ANR	5316351	ExpressionStatement	list -> head = iter -> n	298:3:5652:5672	5316295	0	True				
ANR	5316352	AssignmentExpression	list -> head = iter -> n		5316295	0		=			
ANR	5316353	PtrMemberAccess	list -> head		5316295	0					
ANR	5316354	Identifier	list		5316295	0					
ANR	5316355	Identifier	head		5316295	1					
ANR	5316356	PtrMemberAccess	iter -> n		5316295	1					
ANR	5316357	Identifier	iter		5316295	0					
ANR	5316358	Identifier	n		5316295	1					
ANR	5316359	ExpressionStatement	list -> head -> p = NULL	299:3:5677:5697	5316295	1	True				
ANR	5316360	AssignmentExpression	list -> head -> p = NULL		5316295	0		=			
ANR	5316361	PtrMemberAccess	list -> head -> p		5316295	0					
ANR	5316362	PtrMemberAccess	list -> head		5316295	0					
ANR	5316363	Identifier	list		5316295	0					
ANR	5316364	Identifier	head		5316295	1					
ANR	5316365	Identifier	p		5316295	1					
ANR	5316366	Identifier	NULL		5316295	1					
ANR	5316367	ExpressionStatement	data = iter -> data	301:2:5705:5722	5316295	2	True				
ANR	5316368	AssignmentExpression	data = iter -> data		5316295	0		=			
ANR	5316369	Identifier	data		5316295	0					
ANR	5316370	PtrMemberAccess	iter -> data		5316295	1					
ANR	5316371	Identifier	iter		5316295	0					
ANR	5316372	Identifier	data		5316295	1					
ANR	5316373	ExpressionStatement	free ( iter )	302:2:5726:5737	5316295	3	True				
ANR	5316374	CallExpression	free ( iter )		5316295	0					
ANR	5316375	Callee	free		5316295	0					
ANR	5316376	Identifier	free		5316295	0					
ANR	5316377	ArgumentList	iter		5316295	1					
ANR	5316378	Argument	iter		5316295	0					
ANR	5316379	Identifier	iter		5316295	0					
ANR	5316380	ExpressionStatement	list -> length --	304:1:5743:5757	5316295	3	True				
ANR	5316381	PostIncDecOperationExpression	list -> length --		5316295	0					
ANR	5316382	PtrMemberAccess	list -> length		5316295	0					
ANR	5316383	Identifier	list		5316295	0					
ANR	5316384	Identifier	length		5316295	1					
ANR	5316385	IncDec	--		5316295	1					
ANR	5316386	ReturnStatement	return data ;	305:1:5760:5771	5316295	4	True				
ANR	5316387	Identifier	data		5316295	0					
ANR	5316388	ReturnType	R_API void *		5316295	1					
ANR	5316389	Identifier	r_list_pop_head		5316295	2					
ANR	5316390	ParameterList	RList * list		5316295	3					
ANR	5316391	Parameter	RList * list	288:28:5445:5455	5316295	0	True				
ANR	5316392	ParameterType	RList *		5316295	0					
ANR	5316393	Identifier	list		5316295	1					
ANR	5316394	CFGEntryNode	ENTRY		5316295		True				
ANR	5316395	CFGExitNode	EXIT		5316295		True				
ANR	5316396	Symbol	* list -> head		5316295						
ANR	5316397	Symbol	list -> length		5316295						
ANR	5316398	Symbol	NULL		5316295						
ANR	5316399	Symbol	list -> head -> p		5316295						
ANR	5316400	Symbol	data		5316295						
ANR	5316401	Symbol	iter		5316295						
ANR	5316402	Symbol	list		5316295						
ANR	5316403	Symbol	list -> head		5316295						
ANR	5316404	Symbol	* iter		5316295						
ANR	5316405	Symbol	* * list		5316295						
ANR	5316406	Symbol	* list		5316295						
ANR	5316407	Symbol	iter -> n		5316295						
ANR	5316408	Symbol	iter -> data		5316295						
ANR	5316409	Symbol	list -> tail		5316295						
ANR	5316410	Function	r_list_del_n	308:0:5776:6298							
ANR	5316411	FunctionDef	"r_list_del_n (RList * list , int n)"		5316410	0					
ANR	5316412	CompoundStatement		308:43:5819:6298	5316410	0					
ANR	5316413	IdentifierDeclStatement	RListIter * it ;	309:1:5822:5835	5316410	0	True				
ANR	5316414	IdentifierDecl	* it		5316410	0					
ANR	5316415	IdentifierDeclType	RListIter *		5316410	0					
ANR	5316416	Identifier	it		5316410	1					
ANR	5316417	IdentifierDeclStatement	int i ;	310:1:5838:5843	5316410	1	True				
ANR	5316418	IdentifierDecl	i		5316410	0					
ANR	5316419	IdentifierDeclType	int		5316410	0					
ANR	5316420	Identifier	i		5316410	1					
ANR	5316421	ExpressionStatement	"r_return_val_if_fail ( list , false )"	312:1:5847:5881	5316410	2	True				
ANR	5316422	CallExpression	"r_return_val_if_fail ( list , false )"		5316410	0					
ANR	5316423	Callee	r_return_val_if_fail		5316410	0					
ANR	5316424	Identifier	r_return_val_if_fail		5316410	0					
ANR	5316425	ArgumentList	list		5316410	1					
ANR	5316426	Argument	list		5316410	0					
ANR	5316427	Identifier	list		5316410	0					
ANR	5316428	Argument	false		5316410	1					
ANR	5316429	Identifier	false		5316410	0					
ANR	5316430	ForStatement	"for ( it = list -> head , i = 0 ; it && it -> data ; it = it -> n , i ++ )"		5316410	3					
ANR	5316431	ForInit	"it = list -> head , i = 0 ;"	314:6:5890:5912	5316410	0	True				
ANR	5316432	Expression	"it = list -> head , i = 0"		5316410	0					
ANR	5316433	AssignmentExpression	it = list -> head		5316410	0		=			
ANR	5316434	Identifier	it		5316410	0					
ANR	5316435	PtrMemberAccess	list -> head		5316410	1					
ANR	5316436	Identifier	list		5316410	0					
ANR	5316437	Identifier	head		5316410	1					
ANR	5316438	AssignmentExpression	i = 0		5316410	1		=			
ANR	5316439	Identifier	i		5316410	0					
ANR	5316440	PrimaryExpression	0		5316410	1					
ANR	5316441	Condition	it && it -> data	314:30:5914:5927	5316410	1	True				
ANR	5316442	AndExpression	it && it -> data		5316410	0		&&			
ANR	5316443	Identifier	it		5316410	0					
ANR	5316444	PtrMemberAccess	it -> data		5316410	1					
ANR	5316445	Identifier	it		5316410	0					
ANR	5316446	Identifier	data		5316410	1					
ANR	5316447	Expression	"it = it -> n , i ++"	314:46:5930:5944	5316410	2	True				
ANR	5316448	AssignmentExpression	it = it -> n		5316410	0		=			
ANR	5316449	Identifier	it		5316410	0					
ANR	5316450	PtrMemberAccess	it -> n		5316410	1					
ANR	5316451	Identifier	it		5316410	0					
ANR	5316452	Identifier	n		5316410	1					
ANR	5316453	PostIncDecOperationExpression	i ++		5316410	1					
ANR	5316454	Identifier	i		5316410	0					
ANR	5316455	IncDec	++		5316410	1					
ANR	5316456	CompoundStatement		7:63:127:127	5316410	3					
ANR	5316457	IfStatement	if ( i == n )		5316410	0					
ANR	5316458	Condition	i == n	315:6:5955:5960	5316410	0	True				
ANR	5316459	EqualityExpression	i == n		5316410	0		==			
ANR	5316460	Identifier	i		5316410	0					
ANR	5316461	Identifier	n		5316410	1					
ANR	5316462	CompoundStatement		8:14:143:143	5316410	1					
ANR	5316463	IfStatement	if ( ! it -> p && ! it -> n )		5316410	0					
ANR	5316464	Condition	! it -> p && ! it -> n	316:7:5972:5987	5316410	0	True				
ANR	5316465	AndExpression	! it -> p && ! it -> n		5316410	0		&&			
ANR	5316466	UnaryOperationExpression	! it -> p		5316410	0					
ANR	5316467	UnaryOperator	!		5316410	0					
ANR	5316468	PtrMemberAccess	it -> p		5316410	1					
ANR	5316469	Identifier	it		5316410	0					
ANR	5316470	Identifier	p		5316410	1					
ANR	5316471	UnaryOperationExpression	! it -> n		5316410	1					
ANR	5316472	UnaryOperator	!		5316410	0					
ANR	5316473	PtrMemberAccess	it -> n		5316410	1					
ANR	5316474	Identifier	it		5316410	0					
ANR	5316475	Identifier	n		5316410	1					
ANR	5316476	CompoundStatement		9:25:170:170	5316410	1					
ANR	5316477	ExpressionStatement	list -> head = list -> tail = NULL	317:4:5996:6026	5316410	0	True				
ANR	5316478	AssignmentExpression	list -> head = list -> tail = NULL		5316410	0		=			
ANR	5316479	PtrMemberAccess	list -> head		5316410	0					
ANR	5316480	Identifier	list		5316410	0					
ANR	5316481	Identifier	head		5316410	1					
ANR	5316482	AssignmentExpression	list -> tail = NULL		5316410	1		=			
ANR	5316483	PtrMemberAccess	list -> tail		5316410	0					
ANR	5316484	Identifier	list		5316410	0					
ANR	5316485	Identifier	tail		5316410	1					
ANR	5316486	Identifier	NULL		5316410	1					
ANR	5316487	ElseStatement	else		5316410	0					
ANR	5316488	IfStatement	if ( ! it -> p )		5316410	0					
ANR	5316489	Condition	! it -> p	318:14:6042:6047	5316410	0	True				
ANR	5316490	UnaryOperationExpression	! it -> p		5316410	0					
ANR	5316491	UnaryOperator	!		5316410	0					
ANR	5316492	PtrMemberAccess	it -> p		5316410	1					
ANR	5316493	Identifier	it		5316410	0					
ANR	5316494	Identifier	p		5316410	1					
ANR	5316495	CompoundStatement		11:22:230:230	5316410	1					
ANR	5316496	ExpressionStatement	it -> n -> p = NULL	319:4:6056:6071	5316410	0	True				
ANR	5316497	AssignmentExpression	it -> n -> p = NULL		5316410	0		=			
ANR	5316498	PtrMemberAccess	it -> n -> p		5316410	0					
ANR	5316499	PtrMemberAccess	it -> n		5316410	0					
ANR	5316500	Identifier	it		5316410	0					
ANR	5316501	Identifier	n		5316410	1					
ANR	5316502	Identifier	p		5316410	1					
ANR	5316503	Identifier	NULL		5316410	1					
ANR	5316504	ExpressionStatement	list -> head = it -> n	320:4:6077:6095	5316410	1	True				
ANR	5316505	AssignmentExpression	list -> head = it -> n		5316410	0		=			
ANR	5316506	PtrMemberAccess	list -> head		5316410	0					
ANR	5316507	Identifier	list		5316410	0					
ANR	5316508	Identifier	head		5316410	1					
ANR	5316509	PtrMemberAccess	it -> n		5316410	1					
ANR	5316510	Identifier	it		5316410	0					
ANR	5316511	Identifier	n		5316410	1					
ANR	5316512	ElseStatement	else		5316410	0					
ANR	5316513	IfStatement	if ( ! it -> n )		5316410	0					
ANR	5316514	Condition	! it -> n	321:14:6111:6116	5316410	0	True				
ANR	5316515	UnaryOperationExpression	! it -> n		5316410	0					
ANR	5316516	UnaryOperator	!		5316410	0					
ANR	5316517	PtrMemberAccess	it -> n		5316410	1					
ANR	5316518	Identifier	it		5316410	0					
ANR	5316519	Identifier	n		5316410	1					
ANR	5316520	CompoundStatement		14:22:299:299	5316410	1					
ANR	5316521	ExpressionStatement	it -> p -> n = NULL	322:4:6125:6140	5316410	0	True				
ANR	5316522	AssignmentExpression	it -> p -> n = NULL		5316410	0		=			
ANR	5316523	PtrMemberAccess	it -> p -> n		5316410	0					
ANR	5316524	PtrMemberAccess	it -> p		5316410	0					
ANR	5316525	Identifier	it		5316410	0					
ANR	5316526	Identifier	p		5316410	1					
ANR	5316527	Identifier	n		5316410	1					
ANR	5316528	Identifier	NULL		5316410	1					
ANR	5316529	ExpressionStatement	list -> tail = it -> p	323:4:6146:6164	5316410	1	True				
ANR	5316530	AssignmentExpression	list -> tail = it -> p		5316410	0		=			
ANR	5316531	PtrMemberAccess	list -> tail		5316410	0					
ANR	5316532	Identifier	list		5316410	0					
ANR	5316533	Identifier	tail		5316410	1					
ANR	5316534	PtrMemberAccess	it -> p		5316410	1					
ANR	5316535	Identifier	it		5316410	0					
ANR	5316536	Identifier	p		5316410	1					
ANR	5316537	ElseStatement	else		5316410	0					
ANR	5316538	CompoundStatement		17:10:356:356	5316410	0					
ANR	5316539	ExpressionStatement	it -> p -> n = it -> n	325:4:6182:6198	5316410	0	True				
ANR	5316540	AssignmentExpression	it -> p -> n = it -> n		5316410	0		=			
ANR	5316541	PtrMemberAccess	it -> p -> n		5316410	0					
ANR	5316542	PtrMemberAccess	it -> p		5316410	0					
ANR	5316543	Identifier	it		5316410	0					
ANR	5316544	Identifier	p		5316410	1					
ANR	5316545	Identifier	n		5316410	1					
ANR	5316546	PtrMemberAccess	it -> n		5316410	1					
ANR	5316547	Identifier	it		5316410	0					
ANR	5316548	Identifier	n		5316410	1					
ANR	5316549	ExpressionStatement	it -> n -> p = it -> p	326:4:6204:6220	5316410	1	True				
ANR	5316550	AssignmentExpression	it -> n -> p = it -> p		5316410	0		=			
ANR	5316551	PtrMemberAccess	it -> n -> p		5316410	0					
ANR	5316552	PtrMemberAccess	it -> n		5316410	0					
ANR	5316553	Identifier	it		5316410	0					
ANR	5316554	Identifier	n		5316410	1					
ANR	5316555	Identifier	p		5316410	1					
ANR	5316556	PtrMemberAccess	it -> p		5316410	1					
ANR	5316557	Identifier	it		5316410	0					
ANR	5316558	Identifier	p		5316410	1					
ANR	5316559	ExpressionStatement	free ( it )	328:3:6230:6239	5316410	1	True				
ANR	5316560	CallExpression	free ( it )		5316410	0					
ANR	5316561	Callee	free		5316410	0					
ANR	5316562	Identifier	free		5316410	0					
ANR	5316563	ArgumentList	it		5316410	1					
ANR	5316564	Argument	it		5316410	0					
ANR	5316565	Identifier	it		5316410	0					
ANR	5316566	ExpressionStatement	list -> length --	329:3:6244:6258	5316410	2	True				
ANR	5316567	PostIncDecOperationExpression	list -> length --		5316410	0					
ANR	5316568	PtrMemberAccess	list -> length		5316410	0					
ANR	5316569	Identifier	list		5316410	0					
ANR	5316570	Identifier	length		5316410	1					
ANR	5316571	IncDec	--		5316410	1					
ANR	5316572	ReturnStatement	return true ;	330:3:6263:6274	5316410	3	True				
ANR	5316573	Identifier	true		5316410	0					
ANR	5316574	ReturnStatement	return false ;	333:1:6284:6296	5316410	4	True				
ANR	5316575	Identifier	false		5316410	0					
ANR	5316576	ReturnType	R_API int		5316410	1					
ANR	5316577	Identifier	r_list_del_n		5316410	2					
ANR	5316578	ParameterList	"RList * list , int n"		5316410	3					
ANR	5316579	Parameter	RList * list	308:23:5799:5809	5316410	0	True				
ANR	5316580	ParameterType	RList *		5316410	0					
ANR	5316581	Identifier	list		5316410	1					
ANR	5316582	Parameter	int n	308:36:5812:5816	5316410	1	True				
ANR	5316583	ParameterType	int		5316410	0					
ANR	5316584	Identifier	n		5316410	1					
ANR	5316585	CFGEntryNode	ENTRY		5316410		True				
ANR	5316586	CFGExitNode	EXIT		5316410		True				
ANR	5316587	Symbol	list -> length		5316410						
ANR	5316588	Symbol	NULL		5316410						
ANR	5316589	Symbol	* it -> n		5316410						
ANR	5316590	Symbol	false		5316410						
ANR	5316591	Symbol	i		5316410						
ANR	5316592	Symbol	it		5316410						
ANR	5316593	Symbol	list		5316410						
ANR	5316594	Symbol	it -> n		5316410						
ANR	5316595	Symbol	n		5316410						
ANR	5316596	Symbol	it -> p		5316410						
ANR	5316597	Symbol	list -> head		5316410						
ANR	5316598	Symbol	* it		5316410						
ANR	5316599	Symbol	it -> p -> n		5316410						
ANR	5316600	Symbol	* list		5316410						
ANR	5316601	Symbol	* * it		5316410						
ANR	5316602	Symbol	* it -> p		5316410						
ANR	5316603	Symbol	true		5316410						
ANR	5316604	Symbol	it -> data		5316410						
ANR	5316605	Symbol	it -> n -> p		5316410						
ANR	5316606	Symbol	list -> tail		5316410						
ANR	5316607	Function	r_list_get_top	336:0:6301:6432							
ANR	5316608	FunctionDef	r_list_get_top (const RList * list)		5316607	0					
ANR	5316609	CompoundStatement		336:46:6347:6432	5316607	0					
ANR	5316610	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	337:1:6350:6383	5316607	0	True				
ANR	5316611	CallExpression	"r_return_val_if_fail ( list , NULL )"		5316607	0					
ANR	5316612	Callee	r_return_val_if_fail		5316607	0					
ANR	5316613	Identifier	r_return_val_if_fail		5316607	0					
ANR	5316614	ArgumentList	list		5316607	1					
ANR	5316615	Argument	list		5316607	0					
ANR	5316616	Identifier	list		5316607	0					
ANR	5316617	Argument	NULL		5316607	1					
ANR	5316618	Identifier	NULL		5316607	0					
ANR	5316619	ReturnStatement	return list -> tail ? list -> tail -> data : NULL ;	339:1:6387:6430	5316607	1	True				
ANR	5316620	ConditionalExpression	list -> tail ? list -> tail -> data : NULL		5316607	0					
ANR	5316621	Condition	list -> tail		5316607	0					
ANR	5316622	PtrMemberAccess	list -> tail		5316607	0					
ANR	5316623	Identifier	list		5316607	0					
ANR	5316624	Identifier	tail		5316607	1					
ANR	5316625	PtrMemberAccess	list -> tail -> data		5316607	1					
ANR	5316626	PtrMemberAccess	list -> tail		5316607	0					
ANR	5316627	Identifier	list		5316607	0					
ANR	5316628	Identifier	tail		5316607	1					
ANR	5316629	Identifier	data		5316607	1					
ANR	5316630	Identifier	NULL		5316607	2					
ANR	5316631	ReturnType	R_API void *		5316607	1					
ANR	5316632	Identifier	r_list_get_top		5316607	2					
ANR	5316633	ParameterList	const RList * list		5316607	3					
ANR	5316634	Parameter	const RList * list	336:27:6328:6344	5316607	0	True				
ANR	5316635	ParameterType	const RList *		5316607	0					
ANR	5316636	Identifier	list		5316607	1					
ANR	5316637	CFGEntryNode	ENTRY		5316607		True				
ANR	5316638	CFGExitNode	EXIT		5316607		True				
ANR	5316639	Symbol	NULL		5316607						
ANR	5316640	Symbol	* * list		5316607						
ANR	5316641	Symbol	* list		5316607						
ANR	5316642	Symbol	* list -> tail		5316607						
ANR	5316643	Symbol	list -> tail -> data		5316607						
ANR	5316644	Symbol	list		5316607						
ANR	5316645	Symbol	list -> tail		5316607						
ANR	5316646	Function	r_list_get_bottom	342:0:6435:6569							
ANR	5316647	FunctionDef	r_list_get_bottom (const RList * list)		5316646	0					
ANR	5316648	CompoundStatement		342:49:6484:6569	5316646	0					
ANR	5316649	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	343:1:6487:6520	5316646	0	True				
ANR	5316650	CallExpression	"r_return_val_if_fail ( list , NULL )"		5316646	0					
ANR	5316651	Callee	r_return_val_if_fail		5316646	0					
ANR	5316652	Identifier	r_return_val_if_fail		5316646	0					
ANR	5316653	ArgumentList	list		5316646	1					
ANR	5316654	Argument	list		5316646	0					
ANR	5316655	Identifier	list		5316646	0					
ANR	5316656	Argument	NULL		5316646	1					
ANR	5316657	Identifier	NULL		5316646	0					
ANR	5316658	ReturnStatement	return list -> head ? list -> head -> data : NULL ;	345:1:6524:6567	5316646	1	True				
ANR	5316659	ConditionalExpression	list -> head ? list -> head -> data : NULL		5316646	0					
ANR	5316660	Condition	list -> head		5316646	0					
ANR	5316661	PtrMemberAccess	list -> head		5316646	0					
ANR	5316662	Identifier	list		5316646	0					
ANR	5316663	Identifier	head		5316646	1					
ANR	5316664	PtrMemberAccess	list -> head -> data		5316646	1					
ANR	5316665	PtrMemberAccess	list -> head		5316646	0					
ANR	5316666	Identifier	list		5316646	0					
ANR	5316667	Identifier	head		5316646	1					
ANR	5316668	Identifier	data		5316646	1					
ANR	5316669	Identifier	NULL		5316646	2					
ANR	5316670	ReturnType	R_API void *		5316646	1					
ANR	5316671	Identifier	r_list_get_bottom		5316646	2					
ANR	5316672	ParameterList	const RList * list		5316646	3					
ANR	5316673	Parameter	const RList * list	342:30:6465:6481	5316646	0	True				
ANR	5316674	ParameterType	const RList *		5316646	0					
ANR	5316675	Identifier	list		5316646	1					
ANR	5316676	CFGEntryNode	ENTRY		5316646		True				
ANR	5316677	CFGExitNode	EXIT		5316646		True				
ANR	5316678	Symbol	list -> head		5316646						
ANR	5316679	Symbol	* list -> head		5316646						
ANR	5316680	Symbol	NULL		5316646						
ANR	5316681	Symbol	* * list		5316646						
ANR	5316682	Symbol	* list		5316646						
ANR	5316683	Symbol	list -> head -> data		5316646						
ANR	5316684	Symbol	list		5316646						
ANR	5316685	Function	r_list_reverse	348:0:6572:6830							
ANR	5316686	FunctionDef	r_list_reverse (RList * list)		5316685	0					
ANR	5316687	CompoundStatement		348:39:6611:6830	5316685	0					
ANR	5316688	IdentifierDeclStatement	"RListIter * it , * tmp ;"	349:1:6614:6633	5316685	0	True				
ANR	5316689	IdentifierDecl	* it		5316685	0					
ANR	5316690	IdentifierDeclType	RListIter *		5316685	0					
ANR	5316691	Identifier	it		5316685	1					
ANR	5316692	IdentifierDecl	* tmp		5316685	1					
ANR	5316693	IdentifierDeclType	RListIter *		5316685	0					
ANR	5316694	Identifier	tmp		5316685	1					
ANR	5316695	ExpressionStatement	r_return_if_fail ( list )	351:1:6637:6660	5316685	1	True				
ANR	5316696	CallExpression	r_return_if_fail ( list )		5316685	0					
ANR	5316697	Callee	r_return_if_fail		5316685	0					
ANR	5316698	Identifier	r_return_if_fail		5316685	0					
ANR	5316699	ArgumentList	list		5316685	1					
ANR	5316700	Argument	list		5316685	0					
ANR	5316701	Identifier	list		5316685	0					
ANR	5316702	ForStatement	for ( it = list -> head ; it && it -> data ; it = it -> p )		5316685	2					
ANR	5316703	ForInit	it = list -> head ;	353:6:6669:6684	5316685	0	True				
ANR	5316704	AssignmentExpression	it = list -> head		5316685	0		=			
ANR	5316705	Identifier	it		5316685	0					
ANR	5316706	PtrMemberAccess	list -> head		5316685	1					
ANR	5316707	Identifier	list		5316685	0					
ANR	5316708	Identifier	head		5316685	1					
ANR	5316709	Condition	it && it -> data	353:23:6686:6699	5316685	1	True				
ANR	5316710	AndExpression	it && it -> data		5316685	0		&&			
ANR	5316711	Identifier	it		5316685	0					
ANR	5316712	PtrMemberAccess	it -> data		5316685	1					
ANR	5316713	Identifier	it		5316685	0					
ANR	5316714	Identifier	data		5316685	1					
ANR	5316715	AssignmentExpression	it = it -> p	353:39:6702:6711	5316685	2	True	=			
ANR	5316716	Identifier	it		5316685	0					
ANR	5316717	PtrMemberAccess	it -> p		5316685	1					
ANR	5316718	Identifier	it		5316685	0					
ANR	5316719	Identifier	p		5316685	1					
ANR	5316720	CompoundStatement		6:51:102:102	5316685	3					
ANR	5316721	ExpressionStatement	tmp = it -> p	354:2:6718:6729	5316685	0	True				
ANR	5316722	AssignmentExpression	tmp = it -> p		5316685	0		=			
ANR	5316723	Identifier	tmp		5316685	0					
ANR	5316724	PtrMemberAccess	it -> p		5316685	1					
ANR	5316725	Identifier	it		5316685	0					
ANR	5316726	Identifier	p		5316685	1					
ANR	5316727	ExpressionStatement	it -> p = it -> n	355:2:6733:6746	5316685	1	True				
ANR	5316728	AssignmentExpression	it -> p = it -> n		5316685	0		=			
ANR	5316729	PtrMemberAccess	it -> p		5316685	0					
ANR	5316730	Identifier	it		5316685	0					
ANR	5316731	Identifier	p		5316685	1					
ANR	5316732	PtrMemberAccess	it -> n		5316685	1					
ANR	5316733	Identifier	it		5316685	0					
ANR	5316734	Identifier	n		5316685	1					
ANR	5316735	ExpressionStatement	it -> n = tmp	356:2:6750:6761	5316685	2	True				
ANR	5316736	AssignmentExpression	it -> n = tmp		5316685	0		=			
ANR	5316737	PtrMemberAccess	it -> n		5316685	0					
ANR	5316738	Identifier	it		5316685	0					
ANR	5316739	Identifier	n		5316685	1					
ANR	5316740	Identifier	tmp		5316685	1					
ANR	5316741	ExpressionStatement	tmp = list -> head	358:1:6767:6783	5316685	3	True				
ANR	5316742	AssignmentExpression	tmp = list -> head		5316685	0		=			
ANR	5316743	Identifier	tmp		5316685	0					
ANR	5316744	PtrMemberAccess	list -> head		5316685	1					
ANR	5316745	Identifier	list		5316685	0					
ANR	5316746	Identifier	head		5316685	1					
ANR	5316747	ExpressionStatement	list -> head = list -> tail	359:1:6786:6809	5316685	4	True				
ANR	5316748	AssignmentExpression	list -> head = list -> tail		5316685	0		=			
ANR	5316749	PtrMemberAccess	list -> head		5316685	0					
ANR	5316750	Identifier	list		5316685	0					
ANR	5316751	Identifier	head		5316685	1					
ANR	5316752	PtrMemberAccess	list -> tail		5316685	1					
ANR	5316753	Identifier	list		5316685	0					
ANR	5316754	Identifier	tail		5316685	1					
ANR	5316755	ExpressionStatement	list -> tail = tmp	360:1:6812:6828	5316685	5	True				
ANR	5316756	AssignmentExpression	list -> tail = tmp		5316685	0		=			
ANR	5316757	PtrMemberAccess	list -> tail		5316685	0					
ANR	5316758	Identifier	list		5316685	0					
ANR	5316759	Identifier	tail		5316685	1					
ANR	5316760	Identifier	tmp		5316685	1					
ANR	5316761	ReturnType	R_API void		5316685	1					
ANR	5316762	Identifier	r_list_reverse		5316685	2					
ANR	5316763	ParameterList	RList * list		5316685	3					
ANR	5316764	Parameter	RList * list	348:26:6598:6608	5316685	0	True				
ANR	5316765	ParameterType	RList *		5316685	0					
ANR	5316766	Identifier	list		5316685	1					
ANR	5316767	CFGEntryNode	ENTRY		5316685		True				
ANR	5316768	CFGExitNode	EXIT		5316685		True				
ANR	5316769	Symbol	list -> head		5316685						
ANR	5316770	Symbol	* it		5316685						
ANR	5316771	Symbol	* list		5316685						
ANR	5316772	Symbol	tmp		5316685						
ANR	5316773	Symbol	it -> data		5316685						
ANR	5316774	Symbol	it		5316685						
ANR	5316775	Symbol	list		5316685						
ANR	5316776	Symbol	it -> n		5316685						
ANR	5316777	Symbol	it -> p		5316685						
ANR	5316778	Symbol	list -> tail		5316685						
ANR	5316779	Function	r_list_clone	363:0:6833:7132							
ANR	5316780	FunctionDef	r_list_clone (RList * list)		5316779	0					
ANR	5316781	CompoundStatement		363:39:6872:7132	5316779	0					
ANR	5316782	IdentifierDeclStatement	RList * l = NULL ;	364:1:6875:6890	5316779	0	True				
ANR	5316783	IdentifierDecl	* l = NULL		5316779	0					
ANR	5316784	IdentifierDeclType	RList *		5316779	0					
ANR	5316785	Identifier	l		5316779	1					
ANR	5316786	AssignmentExpression	* l = NULL		5316779	2		=			
ANR	5316787	Identifier	NULL		5316779	0					
ANR	5316788	Identifier	NULL		5316779	1					
ANR	5316789	IdentifierDeclStatement	RListIter * iter ;	365:1:6893:6908	5316779	1	True				
ANR	5316790	IdentifierDecl	* iter		5316779	0					
ANR	5316791	IdentifierDeclType	RListIter *		5316779	0					
ANR	5316792	Identifier	iter		5316779	1					
ANR	5316793	IdentifierDeclStatement	void * data ;	366:1:6911:6921	5316779	2	True				
ANR	5316794	IdentifierDecl	* data		5316779	0					
ANR	5316795	IdentifierDeclType	void *		5316779	0					
ANR	5316796	Identifier	data		5316779	1					
ANR	5316797	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	368:1:6925:6958	5316779	3	True				
ANR	5316798	CallExpression	"r_return_val_if_fail ( list , NULL )"		5316779	0					
ANR	5316799	Callee	r_return_val_if_fail		5316779	0					
ANR	5316800	Identifier	r_return_val_if_fail		5316779	0					
ANR	5316801	ArgumentList	list		5316779	1					
ANR	5316802	Argument	list		5316779	0					
ANR	5316803	Identifier	list		5316779	0					
ANR	5316804	Argument	NULL		5316779	1					
ANR	5316805	Identifier	NULL		5316779	0					
ANR	5316806	ExpressionStatement	l = r_list_new ( )	370:1:6962:6979	5316779	4	True				
ANR	5316807	AssignmentExpression	l = r_list_new ( )		5316779	0		=			
ANR	5316808	Identifier	l		5316779	0					
ANR	5316809	CallExpression	r_list_new ( )		5316779	1					
ANR	5316810	Callee	r_list_new		5316779	0					
ANR	5316811	Identifier	r_list_new		5316779	0					
ANR	5316812	ArgumentList			5316779	1					
ANR	5316813	IfStatement	if ( ! l )		5316779	5					
ANR	5316814	Condition	! l	371:5:6986:6987	5316779	0	True				
ANR	5316815	UnaryOperationExpression	! l		5316779	0					
ANR	5316816	UnaryOperator	!		5316779	0					
ANR	5316817	Identifier	l		5316779	1					
ANR	5316818	CompoundStatement		9:9:117:117	5316779	1					
ANR	5316819	ReturnStatement	return NULL ;	372:2:6994:7005	5316779	0	True				
ANR	5316820	Identifier	NULL		5316779	0					
ANR	5316821	ExpressionStatement	l -> free = NULL	374:1:7011:7025	5316779	6	True				
ANR	5316822	AssignmentExpression	l -> free = NULL		5316779	0		=			
ANR	5316823	PtrMemberAccess	l -> free		5316779	0					
ANR	5316824	Identifier	l		5316779	0					
ANR	5316825	Identifier	free		5316779	1					
ANR	5316826	Identifier	NULL		5316779	1					
ANR	5316827	Statement	r_list_foreach	375:1:7028:7041	5316779	7	True				
ANR	5316828	Statement	(	375:16:7043:7043	5316779	8	True				
ANR	5316829	Statement	list	375:17:7044:7047	5316779	9	True				
ANR	5316830	Statement	","	375:21:7048:7048	5316779	10	True				
ANR	5316831	Statement	iter	375:23:7050:7053	5316779	11	True				
ANR	5316832	Statement	","	375:27:7054:7054	5316779	12	True				
ANR	5316833	Statement	data	375:29:7056:7059	5316779	13	True				
ANR	5316834	Statement	)	375:33:7060:7060	5316779	14	True				
ANR	5316835	CompoundStatement		13:35:189:189	5316779	15					
ANR	5316836	ExpressionStatement	"r_list_append ( l , data )"	376:2:7066:7089	5316779	0	True				
ANR	5316837	CallExpression	"r_list_append ( l , data )"		5316779	0					
ANR	5316838	Callee	r_list_append		5316779	0					
ANR	5316839	Identifier	r_list_append		5316779	0					
ANR	5316840	ArgumentList	l		5316779	1					
ANR	5316841	Argument	l		5316779	0					
ANR	5316842	Identifier	l		5316779	0					
ANR	5316843	Argument	data		5316779	1					
ANR	5316844	Identifier	data		5316779	0					
ANR	5316845	ExpressionStatement	l -> sorted = list -> sorted	378:1:7095:7119	5316779	16	True				
ANR	5316846	AssignmentExpression	l -> sorted = list -> sorted		5316779	0		=			
ANR	5316847	PtrMemberAccess	l -> sorted		5316779	0					
ANR	5316848	Identifier	l		5316779	0					
ANR	5316849	Identifier	sorted		5316779	1					
ANR	5316850	PtrMemberAccess	list -> sorted		5316779	1					
ANR	5316851	Identifier	list		5316779	0					
ANR	5316852	Identifier	sorted		5316779	1					
ANR	5316853	ReturnStatement	return l ;	379:1:7122:7130	5316779	17	True				
ANR	5316854	Identifier	l		5316779	0					
ANR	5316855	ReturnType	R_API RList *		5316779	1					
ANR	5316856	Identifier	r_list_clone		5316779	2					
ANR	5316857	ParameterList	RList * list		5316779	3					
ANR	5316858	Parameter	RList * list	363:26:6859:6869	5316779	0	True				
ANR	5316859	ParameterType	RList *		5316779	0					
ANR	5316860	Identifier	list		5316779	1					
ANR	5316861	CFGEntryNode	ENTRY		5316779		True				
ANR	5316862	CFGExitNode	EXIT		5316779		True				
ANR	5316863	Symbol	NULL		5316779						
ANR	5316864	Symbol	data		5316779						
ANR	5316865	Symbol	* list		5316779						
ANR	5316866	Symbol	* l		5316779						
ANR	5316867	Symbol	l -> sorted		5316779						
ANR	5316868	Symbol	list -> sorted		5316779						
ANR	5316869	Symbol	iter		5316779						
ANR	5316870	Symbol	l -> free		5316779						
ANR	5316871	Symbol	list		5316779						
ANR	5316872	Symbol	l		5316779						
ANR	5316873	Symbol	r_list_new		5316779						
ANR	5316874	Function	r_list_add_sorted	382:0:7135:7715							
ANR	5316875	FunctionDef	"r_list_add_sorted (RList * list , void * data , RListComparator cmp)"		5316874	0					
ANR	5316876	CompoundStatement		382:81:7216:7715	5316874	0					
ANR	5316877	IdentifierDeclStatement	"RListIter * it , * item = NULL ;"	383:1:7219:7246	5316874	0	True				
ANR	5316878	IdentifierDecl	* it		5316874	0					
ANR	5316879	IdentifierDeclType	RListIter *		5316874	0					
ANR	5316880	Identifier	it		5316874	1					
ANR	5316881	IdentifierDecl	* item = NULL		5316874	1					
ANR	5316882	IdentifierDeclType	RListIter *		5316874	0					
ANR	5316883	Identifier	item		5316874	1					
ANR	5316884	AssignmentExpression	* item = NULL		5316874	2		=			
ANR	5316885	Identifier	NULL		5316874	0					
ANR	5316886	Identifier	NULL		5316874	1					
ANR	5316887	ExpressionStatement	"r_return_val_if_fail ( list && data && cmp , NULL )"	385:1:7250:7298	5316874	1	True				
ANR	5316888	CallExpression	"r_return_val_if_fail ( list && data && cmp , NULL )"		5316874	0					
ANR	5316889	Callee	r_return_val_if_fail		5316874	0					
ANR	5316890	Identifier	r_return_val_if_fail		5316874	0					
ANR	5316891	ArgumentList	list && data && cmp		5316874	1					
ANR	5316892	Argument	list && data && cmp		5316874	0					
ANR	5316893	AndExpression	list && data && cmp		5316874	0		&&			
ANR	5316894	Identifier	list		5316874	0					
ANR	5316895	AndExpression	data && cmp		5316874	1		&&			
ANR	5316896	Identifier	data		5316874	0					
ANR	5316897	Identifier	cmp		5316874	1					
ANR	5316898	Argument	NULL		5316874	1					
ANR	5316899	Identifier	NULL		5316874	0					
ANR	5316900	ForStatement	"for ( it = list -> head ; it && it -> data && cmp ( data , it -> data ) > 0 ; it = it -> n )"		5316874	2					
ANR	5316901	ForInit	it = list -> head ;	387:6:7307:7322	5316874	0	True				
ANR	5316902	AssignmentExpression	it = list -> head		5316874	0		=			
ANR	5316903	Identifier	it		5316874	0					
ANR	5316904	PtrMemberAccess	list -> head		5316874	1					
ANR	5316905	Identifier	list		5316874	0					
ANR	5316906	Identifier	head		5316874	1					
ANR	5316907	Condition	"it && it -> data && cmp ( data , it -> data ) > 0"	387:23:7324:7365	5316874	1	True				
ANR	5316908	AndExpression	"it && it -> data && cmp ( data , it -> data ) > 0"		5316874	0		&&			
ANR	5316909	Identifier	it		5316874	0					
ANR	5316910	AndExpression	"it -> data && cmp ( data , it -> data ) > 0"		5316874	1		&&			
ANR	5316911	PtrMemberAccess	it -> data		5316874	0					
ANR	5316912	Identifier	it		5316874	0					
ANR	5316913	Identifier	data		5316874	1					
ANR	5316914	RelationalExpression	"cmp ( data , it -> data ) > 0"		5316874	1		>			
ANR	5316915	CallExpression	"cmp ( data , it -> data )"		5316874	0					
ANR	5316916	Callee	cmp		5316874	0					
ANR	5316917	Identifier	cmp		5316874	0					
ANR	5316918	ArgumentList	data		5316874	1					
ANR	5316919	Argument	data		5316874	0					
ANR	5316920	Identifier	data		5316874	0					
ANR	5316921	Argument	it -> data		5316874	1					
ANR	5316922	PtrMemberAccess	it -> data		5316874	0					
ANR	5316923	Identifier	it		5316874	0					
ANR	5316924	Identifier	data		5316874	1					
ANR	5316925	PrimaryExpression	0		5316874	1					
ANR	5316926	AssignmentExpression	it = it -> n	387:67:7368:7377	5316874	2	True	=			
ANR	5316927	Identifier	it		5316874	0					
ANR	5316928	PtrMemberAccess	it -> n		5316874	1					
ANR	5316929	Identifier	it		5316874	0					
ANR	5316930	Identifier	n		5316874	1					
ANR	5316931	CompoundStatement		6:79:163:163	5316874	3					
ANR	5316932	ExpressionStatement		388:2:7384:7384	5316874	0	True				
ANR	5316933	IfStatement	if ( it )		5316874	3					
ANR	5316934	Condition	it	390:5:7394:7395	5316874	0	True				
ANR	5316935	Identifier	it		5316874	0					
ANR	5316936	CompoundStatement		9:9:181:181	5316874	1					
ANR	5316937	ExpressionStatement	item = R_NEW0 ( RListIter )	391:2:7402:7427	5316874	0	True				
ANR	5316938	AssignmentExpression	item = R_NEW0 ( RListIter )		5316874	0		=			
ANR	5316939	Identifier	item		5316874	0					
ANR	5316940	CallExpression	R_NEW0 ( RListIter )		5316874	1					
ANR	5316941	Callee	R_NEW0		5316874	0					
ANR	5316942	Identifier	R_NEW0		5316874	0					
ANR	5316943	ArgumentList	RListIter		5316874	1					
ANR	5316944	Argument	RListIter		5316874	0					
ANR	5316945	Identifier	RListIter		5316874	0					
ANR	5316946	IfStatement	if ( ! item )		5316874	1					
ANR	5316947	Condition	! item	392:6:7435:7439	5316874	0	True				
ANR	5316948	UnaryOperationExpression	! item		5316874	0					
ANR	5316949	UnaryOperator	!		5316874	0					
ANR	5316950	Identifier	item		5316874	1					
ANR	5316951	CompoundStatement		11:13:225:225	5316874	1					
ANR	5316952	ReturnStatement	return NULL ;	393:3:7447:7458	5316874	0	True				
ANR	5316953	Identifier	NULL		5316874	0					
ANR	5316954	ExpressionStatement	item -> n = it	395:2:7466:7478	5316874	2	True				
ANR	5316955	AssignmentExpression	item -> n = it		5316874	0		=			
ANR	5316956	PtrMemberAccess	item -> n		5316874	0					
ANR	5316957	Identifier	item		5316874	0					
ANR	5316958	Identifier	n		5316874	1					
ANR	5316959	Identifier	it		5316874	1					
ANR	5316960	ExpressionStatement	item -> p = it -> p	396:2:7482:7497	5316874	3	True				
ANR	5316961	AssignmentExpression	item -> p = it -> p		5316874	0		=			
ANR	5316962	PtrMemberAccess	item -> p		5316874	0					
ANR	5316963	Identifier	item		5316874	0					
ANR	5316964	Identifier	p		5316874	1					
ANR	5316965	PtrMemberAccess	it -> p		5316874	1					
ANR	5316966	Identifier	it		5316874	0					
ANR	5316967	Identifier	p		5316874	1					
ANR	5316968	ExpressionStatement	item -> data = data	397:2:7501:7518	5316874	4	True				
ANR	5316969	AssignmentExpression	item -> data = data		5316874	0		=			
ANR	5316970	PtrMemberAccess	item -> data		5316874	0					
ANR	5316971	Identifier	item		5316874	0					
ANR	5316972	Identifier	data		5316874	1					
ANR	5316973	Identifier	data		5316874	1					
ANR	5316974	ExpressionStatement	item -> n -> p = item	398:2:7522:7539	5316874	5	True				
ANR	5316975	AssignmentExpression	item -> n -> p = item		5316874	0		=			
ANR	5316976	PtrMemberAccess	item -> n -> p		5316874	0					
ANR	5316977	PtrMemberAccess	item -> n		5316874	0					
ANR	5316978	Identifier	item		5316874	0					
ANR	5316979	Identifier	n		5316874	1					
ANR	5316980	Identifier	p		5316874	1					
ANR	5316981	Identifier	item		5316874	1					
ANR	5316982	IfStatement	if ( ! item -> p )		5316874	6					
ANR	5316983	Condition	! item -> p	399:6:7547:7554	5316874	0	True				
ANR	5316984	UnaryOperationExpression	! item -> p		5316874	0					
ANR	5316985	UnaryOperator	!		5316874	0					
ANR	5316986	PtrMemberAccess	item -> p		5316874	1					
ANR	5316987	Identifier	item		5316874	0					
ANR	5316988	Identifier	p		5316874	1					
ANR	5316989	CompoundStatement		18:16:340:340	5316874	1					
ANR	5316990	ExpressionStatement	list -> head = item	400:3:7562:7579	5316874	0	True				
ANR	5316991	AssignmentExpression	list -> head = item		5316874	0		=			
ANR	5316992	PtrMemberAccess	list -> head		5316874	0					
ANR	5316993	Identifier	list		5316874	0					
ANR	5316994	Identifier	head		5316874	1					
ANR	5316995	Identifier	item		5316874	1					
ANR	5316996	ElseStatement	else		5316874	0					
ANR	5316997	CompoundStatement		20:9:373:373	5316874	0					
ANR	5316998	ExpressionStatement	item -> p -> n = item	402:3:7595:7612	5316874	0	True				
ANR	5316999	AssignmentExpression	item -> p -> n = item		5316874	0		=			
ANR	5317000	PtrMemberAccess	item -> p -> n		5316874	0					
ANR	5317001	PtrMemberAccess	item -> p		5316874	0					
ANR	5317002	Identifier	item		5316874	0					
ANR	5317003	Identifier	p		5316874	1					
ANR	5317004	Identifier	n		5316874	1					
ANR	5317005	Identifier	item		5316874	1					
ANR	5317006	ExpressionStatement	list -> length ++	404:2:7620:7634	5316874	7	True				
ANR	5317007	PostIncDecOperationExpression	list -> length ++		5316874	0					
ANR	5317008	PtrMemberAccess	list -> length		5316874	0					
ANR	5317009	Identifier	list		5316874	0					
ANR	5317010	Identifier	length		5316874	1					
ANR	5317011	IncDec	++		5316874	1					
ANR	5317012	ElseStatement	else		5316874	0					
ANR	5317013	CompoundStatement		24:8:427:427	5316874	0					
ANR	5317014	ExpressionStatement	"r_list_append ( list , data )"	406:2:7648:7674	5316874	0	True				
ANR	5317015	CallExpression	"r_list_append ( list , data )"		5316874	0					
ANR	5317016	Callee	r_list_append		5316874	0					
ANR	5317017	Identifier	r_list_append		5316874	0					
ANR	5317018	ArgumentList	list		5316874	1					
ANR	5317019	Argument	list		5316874	0					
ANR	5317020	Identifier	list		5316874	0					
ANR	5317021	Argument	data		5316874	1					
ANR	5317022	Identifier	data		5316874	0					
ANR	5317023	ExpressionStatement	list -> sorted = true	408:1:7680:7699	5316874	4	True				
ANR	5317024	AssignmentExpression	list -> sorted = true		5316874	0		=			
ANR	5317025	PtrMemberAccess	list -> sorted		5316874	0					
ANR	5317026	Identifier	list		5316874	0					
ANR	5317027	Identifier	sorted		5316874	1					
ANR	5317028	Identifier	true		5316874	1					
ANR	5317029	ReturnStatement	return item ;	409:1:7702:7713	5316874	5	True				
ANR	5317030	Identifier	item		5316874	0					
ANR	5317031	ReturnType	R_API RListIter *		5316874	1					
ANR	5317032	Identifier	r_list_add_sorted		5316874	2					
ANR	5317033	ParameterList	"RList * list , void * data , RListComparator cmp"		5316874	3					
ANR	5317034	Parameter	RList * list	382:35:7170:7180	5316874	0	True				
ANR	5317035	ParameterType	RList *		5316874	0					
ANR	5317036	Identifier	list		5316874	1					
ANR	5317037	Parameter	void * data	382:48:7183:7192	5316874	1	True				
ANR	5317038	ParameterType	void *		5316874	0					
ANR	5317039	Identifier	data		5316874	1					
ANR	5317040	Parameter	RListComparator cmp	382:60:7195:7213	5316874	2	True				
ANR	5317041	ParameterType	RListComparator		5316874	0					
ANR	5317042	Identifier	cmp		5316874	1					
ANR	5317043	CFGEntryNode	ENTRY		5316874		True				
ANR	5317044	CFGExitNode	EXIT		5316874		True				
ANR	5317045	Symbol	* item -> p		5316874						
ANR	5317046	Symbol	data		5316874						
ANR	5317047	Symbol	cmp		5316874						
ANR	5317048	Symbol	* item -> n		5316874						
ANR	5317049	Symbol	item -> n -> p		5316874						
ANR	5317050	Symbol	* item		5316874						
ANR	5317051	Symbol	list -> sorted		5316874						
ANR	5317052	Symbol	item -> data		5316874						
ANR	5317053	Symbol	item		5316874						
ANR	5317054	Symbol	list -> length		5316874						
ANR	5317055	Symbol	NULL		5316874						
ANR	5317056	Symbol	* * item		5316874						
ANR	5317057	Symbol	item -> p		5316874						
ANR	5317058	Symbol	it		5316874						
ANR	5317059	Symbol	item -> n		5316874						
ANR	5317060	Symbol	list		5316874						
ANR	5317061	Symbol	it -> n		5316874						
ANR	5317062	Symbol	it -> p		5316874						
ANR	5317063	Symbol	list -> head		5316874						
ANR	5317064	Symbol	R_NEW0		5316874						
ANR	5317065	Symbol	* it		5316874						
ANR	5317066	Symbol	* list		5316874						
ANR	5317067	Symbol	true		5316874						
ANR	5317068	Symbol	it -> data		5316874						
ANR	5317069	Symbol	item -> p -> n		5316874						
ANR	5317070	Symbol	RListIter		5316874						
ANR	5317071	Function	r_list_set_n	412:0:7718:8048							
ANR	5317072	FunctionDef	"r_list_set_n (RList * list , int n , void * p)"		5317071	0					
ANR	5317073	CompoundStatement		412:52:7770:8048	5317071	0					
ANR	5317074	IdentifierDeclStatement	RListIter * it ;	413:1:7773:7786	5317071	0	True				
ANR	5317075	IdentifierDecl	* it		5317071	0					
ANR	5317076	IdentifierDeclType	RListIter *		5317071	0					
ANR	5317077	Identifier	it		5317071	1					
ANR	5317078	IdentifierDeclStatement	int i ;	414:1:7789:7794	5317071	1	True				
ANR	5317079	IdentifierDecl	i		5317071	0					
ANR	5317080	IdentifierDeclType	int		5317071	0					
ANR	5317081	Identifier	i		5317071	1					
ANR	5317082	ExpressionStatement	"r_return_val_if_fail ( list , false )"	416:1:7798:7832	5317071	2	True				
ANR	5317083	CallExpression	"r_return_val_if_fail ( list , false )"		5317071	0					
ANR	5317084	Callee	r_return_val_if_fail		5317071	0					
ANR	5317085	Identifier	r_return_val_if_fail		5317071	0					
ANR	5317086	ArgumentList	list		5317071	1					
ANR	5317087	Argument	list		5317071	0					
ANR	5317088	Identifier	list		5317071	0					
ANR	5317089	Argument	false		5317071	1					
ANR	5317090	Identifier	false		5317071	0					
ANR	5317091	ForStatement	"for ( it = list -> head , i = 0 ; it && it -> data ; it = it -> n , i ++ )"		5317071	3					
ANR	5317092	ForInit	"it = list -> head , i = 0 ;"	417:6:7840:7862	5317071	0	True				
ANR	5317093	Expression	"it = list -> head , i = 0"		5317071	0					
ANR	5317094	AssignmentExpression	it = list -> head		5317071	0		=			
ANR	5317095	Identifier	it		5317071	0					
ANR	5317096	PtrMemberAccess	list -> head		5317071	1					
ANR	5317097	Identifier	list		5317071	0					
ANR	5317098	Identifier	head		5317071	1					
ANR	5317099	AssignmentExpression	i = 0		5317071	1		=			
ANR	5317100	Identifier	i		5317071	0					
ANR	5317101	PrimaryExpression	0		5317071	1					
ANR	5317102	Condition	it && it -> data	417:30:7864:7877	5317071	1	True				
ANR	5317103	AndExpression	it && it -> data		5317071	0		&&			
ANR	5317104	Identifier	it		5317071	0					
ANR	5317105	PtrMemberAccess	it -> data		5317071	1					
ANR	5317106	Identifier	it		5317071	0					
ANR	5317107	Identifier	data		5317071	1					
ANR	5317108	Expression	"it = it -> n , i ++"	417:46:7880:7894	5317071	2	True				
ANR	5317109	AssignmentExpression	it = it -> n		5317071	0		=			
ANR	5317110	Identifier	it		5317071	0					
ANR	5317111	PtrMemberAccess	it -> n		5317071	1					
ANR	5317112	Identifier	it		5317071	0					
ANR	5317113	Identifier	n		5317071	1					
ANR	5317114	PostIncDecOperationExpression	i ++		5317071	1					
ANR	5317115	Identifier	i		5317071	0					
ANR	5317116	IncDec	++		5317071	1					
ANR	5317117	CompoundStatement		6:63:126:126	5317071	3					
ANR	5317118	IfStatement	if ( i == n )		5317071	0					
ANR	5317119	Condition	i == n	418:6:7905:7910	5317071	0	True				
ANR	5317120	EqualityExpression	i == n		5317071	0		==			
ANR	5317121	Identifier	i		5317071	0					
ANR	5317122	Identifier	n		5317071	1					
ANR	5317123	CompoundStatement		7:14:142:142	5317071	1					
ANR	5317124	IfStatement	if ( list -> free )		5317071	0					
ANR	5317125	Condition	list -> free	419:7:7922:7931	5317071	0	True				
ANR	5317126	PtrMemberAccess	list -> free		5317071	0					
ANR	5317127	Identifier	list		5317071	0					
ANR	5317128	Identifier	free		5317071	1					
ANR	5317129	CompoundStatement		8:19:163:163	5317071	1					
ANR	5317130	ExpressionStatement	list -> free ( it -> data )	420:4:7940:7961	5317071	0	True				
ANR	5317131	CallExpression	list -> free ( it -> data )		5317071	0					
ANR	5317132	Callee	list -> free		5317071	0					
ANR	5317133	PtrMemberAccess	list -> free		5317071	0					
ANR	5317134	Identifier	list		5317071	0					
ANR	5317135	Identifier	free		5317071	1					
ANR	5317136	ArgumentList	it -> data		5317071	1					
ANR	5317137	Argument	it -> data		5317071	0					
ANR	5317138	PtrMemberAccess	it -> data		5317071	0					
ANR	5317139	Identifier	it		5317071	0					
ANR	5317140	Identifier	data		5317071	1					
ANR	5317141	ExpressionStatement	it -> data = p	422:3:7971:7983	5317071	1	True				
ANR	5317142	AssignmentExpression	it -> data = p		5317071	0		=			
ANR	5317143	PtrMemberAccess	it -> data		5317071	0					
ANR	5317144	Identifier	it		5317071	0					
ANR	5317145	Identifier	data		5317071	1					
ANR	5317146	Identifier	p		5317071	1					
ANR	5317147	ExpressionStatement	list -> sorted = false	423:3:7988:8008	5317071	2	True				
ANR	5317148	AssignmentExpression	list -> sorted = false		5317071	0		=			
ANR	5317149	PtrMemberAccess	list -> sorted		5317071	0					
ANR	5317150	Identifier	list		5317071	0					
ANR	5317151	Identifier	sorted		5317071	1					
ANR	5317152	Identifier	false		5317071	1					
ANR	5317153	ReturnStatement	return true ;	424:3:8013:8024	5317071	3	True				
ANR	5317154	Identifier	true		5317071	0					
ANR	5317155	ReturnStatement	return false ;	427:1:8034:8046	5317071	4	True				
ANR	5317156	Identifier	false		5317071	0					
ANR	5317157	ReturnType	R_API int		5317071	1					
ANR	5317158	Identifier	r_list_set_n		5317071	2					
ANR	5317159	ParameterList	"RList * list , int n , void * p"		5317071	3					
ANR	5317160	Parameter	RList * list	412:23:7741:7751	5317071	0	True				
ANR	5317161	ParameterType	RList *		5317071	0					
ANR	5317162	Identifier	list		5317071	1					
ANR	5317163	Parameter	int n	412:36:7754:7758	5317071	1	True				
ANR	5317164	ParameterType	int		5317071	0					
ANR	5317165	Identifier	n		5317071	1					
ANR	5317166	Parameter	void * p	412:43:7761:7767	5317071	2	True				
ANR	5317167	ParameterType	void *		5317071	0					
ANR	5317168	Identifier	p		5317071	1					
ANR	5317169	CFGEntryNode	ENTRY		5317071		True				
ANR	5317170	CFGExitNode	EXIT		5317071		True				
ANR	5317171	Symbol	list -> free		5317071						
ANR	5317172	Symbol	false		5317071						
ANR	5317173	Symbol	i		5317071						
ANR	5317174	Symbol	it		5317071						
ANR	5317175	Symbol	list		5317071						
ANR	5317176	Symbol	it -> n		5317071						
ANR	5317177	Symbol	n		5317071						
ANR	5317178	Symbol	p		5317071						
ANR	5317179	Symbol	list -> head		5317071						
ANR	5317180	Symbol	* it		5317071						
ANR	5317181	Symbol	* list		5317071						
ANR	5317182	Symbol	list -> sorted		5317071						
ANR	5317183	Symbol	true		5317071						
ANR	5317184	Symbol	it -> data		5317071						
ANR	5317185	Function	r_list_get_n	430:0:8051:8288							
ANR	5317186	FunctionDef	"r_list_get_n (const RList * list , int n)"		5317185	0					
ANR	5317187	CompoundStatement		430:51:8102:8288	5317185	0					
ANR	5317188	IdentifierDeclStatement	RListIter * it ;	431:1:8105:8118	5317185	0	True				
ANR	5317189	IdentifierDecl	* it		5317185	0					
ANR	5317190	IdentifierDeclType	RListIter *		5317185	0					
ANR	5317191	Identifier	it		5317185	1					
ANR	5317192	IdentifierDeclStatement	int i ;	432:1:8121:8126	5317185	1	True				
ANR	5317193	IdentifierDecl	i		5317185	0					
ANR	5317194	IdentifierDeclType	int		5317185	0					
ANR	5317195	Identifier	i		5317185	1					
ANR	5317196	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	434:1:8130:8163	5317185	2	True				
ANR	5317197	CallExpression	"r_return_val_if_fail ( list , NULL )"		5317185	0					
ANR	5317198	Callee	r_return_val_if_fail		5317185	0					
ANR	5317199	Identifier	r_return_val_if_fail		5317185	0					
ANR	5317200	ArgumentList	list		5317185	1					
ANR	5317201	Argument	list		5317185	0					
ANR	5317202	Identifier	list		5317185	0					
ANR	5317203	Argument	NULL		5317185	1					
ANR	5317204	Identifier	NULL		5317185	0					
ANR	5317205	ForStatement	"for ( it = list -> head , i = 0 ; it && it -> data ; it = it -> n , i ++ )"		5317185	3					
ANR	5317206	ForInit	"it = list -> head , i = 0 ;"	436:6:8172:8194	5317185	0	True				
ANR	5317207	Expression	"it = list -> head , i = 0"		5317185	0					
ANR	5317208	AssignmentExpression	it = list -> head		5317185	0		=			
ANR	5317209	Identifier	it		5317185	0					
ANR	5317210	PtrMemberAccess	list -> head		5317185	1					
ANR	5317211	Identifier	list		5317185	0					
ANR	5317212	Identifier	head		5317185	1					
ANR	5317213	AssignmentExpression	i = 0		5317185	1		=			
ANR	5317214	Identifier	i		5317185	0					
ANR	5317215	PrimaryExpression	0		5317185	1					
ANR	5317216	Condition	it && it -> data	436:30:8196:8209	5317185	1	True				
ANR	5317217	AndExpression	it && it -> data		5317185	0		&&			
ANR	5317218	Identifier	it		5317185	0					
ANR	5317219	PtrMemberAccess	it -> data		5317185	1					
ANR	5317220	Identifier	it		5317185	0					
ANR	5317221	Identifier	data		5317185	1					
ANR	5317222	Expression	"it = it -> n , i ++"	436:46:8212:8226	5317185	2	True				
ANR	5317223	AssignmentExpression	it = it -> n		5317185	0		=			
ANR	5317224	Identifier	it		5317185	0					
ANR	5317225	PtrMemberAccess	it -> n		5317185	1					
ANR	5317226	Identifier	it		5317185	0					
ANR	5317227	Identifier	n		5317185	1					
ANR	5317228	PostIncDecOperationExpression	i ++		5317185	1					
ANR	5317229	Identifier	i		5317185	0					
ANR	5317230	IncDec	++		5317185	1					
ANR	5317231	CompoundStatement		7:63:126:126	5317185	3					
ANR	5317232	IfStatement	if ( i == n )		5317185	0					
ANR	5317233	Condition	i == n	437:6:8237:8242	5317185	0	True				
ANR	5317234	EqualityExpression	i == n		5317185	0		==			
ANR	5317235	Identifier	i		5317185	0					
ANR	5317236	Identifier	n		5317185	1					
ANR	5317237	CompoundStatement		8:14:142:142	5317185	1					
ANR	5317238	ReturnStatement	return it -> data ;	438:3:8250:8265	5317185	0	True				
ANR	5317239	PtrMemberAccess	it -> data		5317185	0					
ANR	5317240	Identifier	it		5317185	0					
ANR	5317241	Identifier	data		5317185	1					
ANR	5317242	ReturnStatement	return NULL ;	441:1:8275:8286	5317185	4	True				
ANR	5317243	Identifier	NULL		5317185	0					
ANR	5317244	ReturnType	R_API void *		5317185	1					
ANR	5317245	Identifier	r_list_get_n		5317185	2					
ANR	5317246	ParameterList	"const RList * list , int n"		5317185	3					
ANR	5317247	Parameter	const RList * list	430:25:8076:8092	5317185	0	True				
ANR	5317248	ParameterType	const RList *		5317185	0					
ANR	5317249	Identifier	list		5317185	1					
ANR	5317250	Parameter	int n	430:44:8095:8099	5317185	1	True				
ANR	5317251	ParameterType	int		5317185	0					
ANR	5317252	Identifier	n		5317185	1					
ANR	5317253	CFGEntryNode	ENTRY		5317185		True				
ANR	5317254	CFGExitNode	EXIT		5317185		True				
ANR	5317255	Symbol	list -> head		5317185						
ANR	5317256	Symbol	* it		5317185						
ANR	5317257	Symbol	NULL		5317185						
ANR	5317258	Symbol	* list		5317185						
ANR	5317259	Symbol	i		5317185						
ANR	5317260	Symbol	it -> data		5317185						
ANR	5317261	Symbol	it		5317185						
ANR	5317262	Symbol	list		5317185						
ANR	5317263	Symbol	it -> n		5317185						
ANR	5317264	Symbol	n		5317185						
ANR	5317265	Function	r_list_contains	444:0:8291:8513							
ANR	5317266	FunctionDef	"r_list_contains (const RList * list , const void * p)"		5317265	0					
ANR	5317267	CompoundStatement		444:67:8358:8513	5317265	0					
ANR	5317268	IdentifierDeclStatement	void * q ;	445:1:8361:8368	5317265	0	True				
ANR	5317269	IdentifierDecl	* q		5317265	0					
ANR	5317270	IdentifierDeclType	void *		5317265	0					
ANR	5317271	Identifier	q		5317265	1					
ANR	5317272	IdentifierDeclStatement	RListIter * iter ;	446:1:8371:8386	5317265	1	True				
ANR	5317273	IdentifierDecl	* iter		5317265	0					
ANR	5317274	IdentifierDeclType	RListIter *		5317265	0					
ANR	5317275	Identifier	iter		5317265	1					
ANR	5317276	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	448:1:8390:8423	5317265	2	True				
ANR	5317277	CallExpression	"r_return_val_if_fail ( list , NULL )"		5317265	0					
ANR	5317278	Callee	r_return_val_if_fail		5317265	0					
ANR	5317279	Identifier	r_return_val_if_fail		5317265	0					
ANR	5317280	ArgumentList	list		5317265	1					
ANR	5317281	Argument	list		5317265	0					
ANR	5317282	Identifier	list		5317265	0					
ANR	5317283	Argument	NULL		5317265	1					
ANR	5317284	Identifier	NULL		5317265	0					
ANR	5317285	Statement	r_list_foreach	450:1:8427:8440	5317265	3	True				
ANR	5317286	Statement	(	450:16:8442:8442	5317265	4	True				
ANR	5317287	Statement	list	450:17:8443:8446	5317265	5	True				
ANR	5317288	Statement	","	450:21:8447:8447	5317265	6	True				
ANR	5317289	Statement	iter	450:23:8449:8452	5317265	7	True				
ANR	5317290	Statement	","	450:27:8453:8453	5317265	8	True				
ANR	5317291	Statement	q	450:29:8455:8455	5317265	9	True				
ANR	5317292	Statement	)	450:30:8456:8456	5317265	10	True				
ANR	5317293	CompoundStatement		7:32:99:99	5317265	11					
ANR	5317294	IfStatement	if ( p == q )		5317265	0					
ANR	5317295	Condition	p == q	451:6:8466:8471	5317265	0	True				
ANR	5317296	EqualityExpression	p == q		5317265	0		==			
ANR	5317297	Identifier	p		5317265	0					
ANR	5317298	Identifier	q		5317265	1					
ANR	5317299	CompoundStatement		8:14:115:115	5317265	1					
ANR	5317300	ReturnStatement	return iter ;	452:3:8479:8490	5317265	0	True				
ANR	5317301	Identifier	iter		5317265	0					
ANR	5317302	ReturnStatement	return NULL ;	455:1:8500:8511	5317265	12	True				
ANR	5317303	Identifier	NULL		5317265	0					
ANR	5317304	ReturnType	R_API RListIter *		5317265	1					
ANR	5317305	Identifier	r_list_contains		5317265	2					
ANR	5317306	ParameterList	"const RList * list , const void * p"		5317265	3					
ANR	5317307	Parameter	const RList * list	444:33:8324:8340	5317265	0	True				
ANR	5317308	ParameterType	const RList *		5317265	0					
ANR	5317309	Identifier	list		5317265	1					
ANR	5317310	Parameter	const void * p	444:52:8343:8355	5317265	1	True				
ANR	5317311	ParameterType	const void *		5317265	0					
ANR	5317312	Identifier	p		5317265	1					
ANR	5317313	CFGEntryNode	ENTRY		5317265		True				
ANR	5317314	CFGExitNode	EXIT		5317265		True				
ANR	5317315	Symbol	p		5317265						
ANR	5317316	Symbol	q		5317265						
ANR	5317317	Symbol	NULL		5317265						
ANR	5317318	Symbol	iter		5317265						
ANR	5317319	Symbol	list		5317265						
ANR	5317320	Function	r_list_find	458:0:8516:8760							
ANR	5317321	FunctionDef	"r_list_find (const RList * list , const void * p , RListComparator cmp)"		5317320	0					
ANR	5317322	CompoundStatement		458:84:8600:8760	5317320	0					
ANR	5317323	IdentifierDeclStatement	void * q ;	459:1:8603:8610	5317320	0	True				
ANR	5317324	IdentifierDecl	* q		5317320	0					
ANR	5317325	IdentifierDeclType	void *		5317320	0					
ANR	5317326	Identifier	q		5317320	1					
ANR	5317327	IdentifierDeclStatement	RListIter * iter ;	460:1:8613:8628	5317320	1	True				
ANR	5317328	IdentifierDecl	* iter		5317320	0					
ANR	5317329	IdentifierDeclType	RListIter *		5317320	0					
ANR	5317330	Identifier	iter		5317320	1					
ANR	5317331	ExpressionStatement	"r_return_val_if_fail ( list , NULL )"	462:1:8632:8665	5317320	2	True				
ANR	5317332	CallExpression	"r_return_val_if_fail ( list , NULL )"		5317320	0					
ANR	5317333	Callee	r_return_val_if_fail		5317320	0					
ANR	5317334	Identifier	r_return_val_if_fail		5317320	0					
ANR	5317335	ArgumentList	list		5317320	1					
ANR	5317336	Argument	list		5317320	0					
ANR	5317337	Identifier	list		5317320	0					
ANR	5317338	Argument	NULL		5317320	1					
ANR	5317339	Identifier	NULL		5317320	0					
ANR	5317340	Statement	r_list_foreach	464:1:8669:8682	5317320	3	True				
ANR	5317341	Statement	(	464:16:8684:8684	5317320	4	True				
ANR	5317342	Statement	list	464:17:8685:8688	5317320	5	True				
ANR	5317343	Statement	","	464:21:8689:8689	5317320	6	True				
ANR	5317344	Statement	iter	464:23:8691:8694	5317320	7	True				
ANR	5317345	Statement	","	464:27:8695:8695	5317320	8	True				
ANR	5317346	Statement	q	464:29:8697:8697	5317320	9	True				
ANR	5317347	Statement	)	464:30:8698:8698	5317320	10	True				
ANR	5317348	CompoundStatement		7:32:99:99	5317320	11					
ANR	5317349	IfStatement	"if ( ! cmp ( p , q ) )"		5317320	0					
ANR	5317350	Condition	"! cmp ( p , q )"	465:6:8708:8718	5317320	0	True				
ANR	5317351	UnaryOperationExpression	"! cmp ( p , q )"		5317320	0					
ANR	5317352	UnaryOperator	!		5317320	0					
ANR	5317353	CallExpression	"cmp ( p , q )"		5317320	1					
ANR	5317354	Callee	cmp		5317320	0					
ANR	5317355	Identifier	cmp		5317320	0					
ANR	5317356	ArgumentList	p		5317320	1					
ANR	5317357	Argument	p		5317320	0					
ANR	5317358	Identifier	p		5317320	0					
ANR	5317359	Argument	q		5317320	1					
ANR	5317360	Identifier	q		5317320	0					
ANR	5317361	CompoundStatement		8:19:120:120	5317320	1					
ANR	5317362	ReturnStatement	return iter ;	466:3:8726:8737	5317320	0	True				
ANR	5317363	Identifier	iter		5317320	0					
ANR	5317364	ReturnStatement	return NULL ;	469:1:8747:8758	5317320	12	True				
ANR	5317365	Identifier	NULL		5317320	0					
ANR	5317366	ReturnType	R_API RListIter *		5317320	1					
ANR	5317367	Identifier	r_list_find		5317320	2					
ANR	5317368	ParameterList	"const RList * list , const void * p , RListComparator cmp"		5317320	3					
ANR	5317369	Parameter	const RList * list	458:29:8545:8561	5317320	0	True				
ANR	5317370	ParameterType	const RList *		5317320	0					
ANR	5317371	Identifier	list		5317320	1					
ANR	5317372	Parameter	const void * p	458:48:8564:8576	5317320	1	True				
ANR	5317373	ParameterType	const void *		5317320	0					
ANR	5317374	Identifier	p		5317320	1					
ANR	5317375	Parameter	RListComparator cmp	458:63:8579:8597	5317320	2	True				
ANR	5317376	ParameterType	RListComparator		5317320	0					
ANR	5317377	Identifier	cmp		5317320	1					
ANR	5317378	CFGEntryNode	ENTRY		5317320		True				
ANR	5317379	CFGExitNode	EXIT		5317320		True				
ANR	5317380	Symbol	p		5317320						
ANR	5317381	Symbol	q		5317320						
ANR	5317382	Symbol	NULL		5317320						
ANR	5317383	Symbol	cmp		5317320						
ANR	5317384	Symbol	iter		5317320						
ANR	5317385	Symbol	list		5317320						
ANR	5317386	Function	_merge	472:0:8763:9396							
ANR	5317387	FunctionDef	"_merge (RListIter * first , RListIter * second , RListComparator cmp)"		5317386	0					
ANR	5317388	CompoundStatement		472:83:8846:9396	5317386	0					
ANR	5317389	IdentifierDeclStatement	"RListIter * next = NULL , * result = NULL , * head = NULL ;"	473:1:8849:8901	5317386	0	True				
ANR	5317390	IdentifierDecl	* next = NULL		5317386	0					
ANR	5317391	IdentifierDeclType	RListIter *		5317386	0					
ANR	5317392	Identifier	next		5317386	1					
ANR	5317393	AssignmentExpression	* next = NULL		5317386	2		=			
ANR	5317394	Identifier	NULL		5317386	0					
ANR	5317395	Identifier	NULL		5317386	1					
ANR	5317396	IdentifierDecl	* result = NULL		5317386	1					
ANR	5317397	IdentifierDeclType	RListIter *		5317386	0					
ANR	5317398	Identifier	result		5317386	1					
ANR	5317399	AssignmentExpression	* result = NULL		5317386	2		=			
ANR	5317400	Identifier	NULL		5317386	0					
ANR	5317401	Identifier	NULL		5317386	1					
ANR	5317402	IdentifierDecl	* head = NULL		5317386	2					
ANR	5317403	IdentifierDeclType	RListIter *		5317386	0					
ANR	5317404	Identifier	head		5317386	1					
ANR	5317405	AssignmentExpression	* head = NULL		5317386	2		=			
ANR	5317406	Identifier	NULL		5317386	0					
ANR	5317407	Identifier	NULL		5317386	1					
ANR	5317408	WhileStatement	while ( first || second )		5317386	1					
ANR	5317409	Condition	first || second	474:8:8911:8925	5317386	0	True				
ANR	5317410	OrExpression	first || second		5317386	0		||			
ANR	5317411	Identifier	first		5317386	0					
ANR	5317412	Identifier	second		5317386	1					
ANR	5317413	CompoundStatement		3:25:81:81	5317386	1					
ANR	5317414	IfStatement	if ( ! second )		5317386	0					
ANR	5317415	Condition	! second	475:6:8936:8942	5317386	0	True				
ANR	5317416	UnaryOperationExpression	! second		5317386	0					
ANR	5317417	UnaryOperator	!		5317386	0					
ANR	5317418	Identifier	second		5317386	1					
ANR	5317419	CompoundStatement		4:15:98:98	5317386	1					
ANR	5317420	ExpressionStatement	next = first	476:3:8950:8962	5317386	0	True				
ANR	5317421	AssignmentExpression	next = first		5317386	0		=			
ANR	5317422	Identifier	next		5317386	0					
ANR	5317423	Identifier	first		5317386	1					
ANR	5317424	ExpressionStatement	first = first -> n	477:3:8967:8983	5317386	1	True				
ANR	5317425	AssignmentExpression	first = first -> n		5317386	0		=			
ANR	5317426	Identifier	first		5317386	0					
ANR	5317427	PtrMemberAccess	first -> n		5317386	1					
ANR	5317428	Identifier	first		5317386	0					
ANR	5317429	Identifier	n		5317386	1					
ANR	5317430	ElseStatement	else		5317386	0					
ANR	5317431	IfStatement	if ( ! first )		5317386	0					
ANR	5317432	Condition	! first	478:13:8998:9003	5317386	0	True				
ANR	5317433	UnaryOperationExpression	! first		5317386	0					
ANR	5317434	UnaryOperator	!		5317386	0					
ANR	5317435	Identifier	first		5317386	1					
ANR	5317436	CompoundStatement		7:21:159:159	5317386	1					
ANR	5317437	ExpressionStatement	next = second	479:3:9011:9024	5317386	0	True				
ANR	5317438	AssignmentExpression	next = second		5317386	0		=			
ANR	5317439	Identifier	next		5317386	0					
ANR	5317440	Identifier	second		5317386	1					
ANR	5317441	ExpressionStatement	second = second -> n	480:3:9029:9047	5317386	1	True				
ANR	5317442	AssignmentExpression	second = second -> n		5317386	0		=			
ANR	5317443	Identifier	second		5317386	0					
ANR	5317444	PtrMemberAccess	second -> n		5317386	1					
ANR	5317445	Identifier	second		5317386	0					
ANR	5317446	Identifier	n		5317386	1					
ANR	5317447	ElseStatement	else		5317386	0					
ANR	5317448	IfStatement	"if ( cmp ( first -> data , second -> data ) < 0 )"		5317386	0					
ANR	5317449	Condition	"cmp ( first -> data , second -> data ) < 0"	481:13:9062:9096	5317386	0	True				
ANR	5317450	RelationalExpression	"cmp ( first -> data , second -> data ) < 0"		5317386	0		<			
ANR	5317451	CallExpression	"cmp ( first -> data , second -> data )"		5317386	0					
ANR	5317452	Callee	cmp		5317386	0					
ANR	5317453	Identifier	cmp		5317386	0					
ANR	5317454	ArgumentList	first -> data		5317386	1					
ANR	5317455	Argument	first -> data		5317386	0					
ANR	5317456	PtrMemberAccess	first -> data		5317386	0					
ANR	5317457	Identifier	first		5317386	0					
ANR	5317458	Identifier	data		5317386	1					
ANR	5317459	Argument	second -> data		5317386	1					
ANR	5317460	PtrMemberAccess	second -> data		5317386	0					
ANR	5317461	Identifier	second		5317386	0					
ANR	5317462	Identifier	data		5317386	1					
ANR	5317463	PrimaryExpression	0		5317386	1					
ANR	5317464	CompoundStatement		10:50:252:252	5317386	1					
ANR	5317465	ExpressionStatement	next = first	482:3:9104:9116	5317386	0	True				
ANR	5317466	AssignmentExpression	next = first		5317386	0		=			
ANR	5317467	Identifier	next		5317386	0					
ANR	5317468	Identifier	first		5317386	1					
ANR	5317469	ExpressionStatement	first = first -> n	483:3:9121:9137	5317386	1	True				
ANR	5317470	AssignmentExpression	first = first -> n		5317386	0		=			
ANR	5317471	Identifier	first		5317386	0					
ANR	5317472	PtrMemberAccess	first -> n		5317386	1					
ANR	5317473	Identifier	first		5317386	0					
ANR	5317474	Identifier	n		5317386	1					
ANR	5317475	ElseStatement	else		5317386	0					
ANR	5317476	CompoundStatement		13:9:301:301	5317386	0					
ANR	5317477	ExpressionStatement	next = second	485:3:9153:9166	5317386	0	True				
ANR	5317478	AssignmentExpression	next = second		5317386	0		=			
ANR	5317479	Identifier	next		5317386	0					
ANR	5317480	Identifier	second		5317386	1					
ANR	5317481	ExpressionStatement	second = second -> n	486:3:9171:9189	5317386	1	True				
ANR	5317482	AssignmentExpression	second = second -> n		5317386	0		=			
ANR	5317483	Identifier	second		5317386	0					
ANR	5317484	PtrMemberAccess	second -> n		5317386	1					
ANR	5317485	Identifier	second		5317386	0					
ANR	5317486	Identifier	n		5317386	1					
ANR	5317487	IfStatement	if ( ! head )		5317386	1					
ANR	5317488	Condition	! head	488:6:9201:9205	5317386	0	True				
ANR	5317489	UnaryOperationExpression	! head		5317386	0					
ANR	5317490	UnaryOperator	!		5317386	0					
ANR	5317491	Identifier	head		5317386	1					
ANR	5317492	CompoundStatement		17:13:361:361	5317386	1					
ANR	5317493	ExpressionStatement	result = next	489:3:9213:9226	5317386	0	True				
ANR	5317494	AssignmentExpression	result = next		5317386	0		=			
ANR	5317495	Identifier	result		5317386	0					
ANR	5317496	Identifier	next		5317386	1					
ANR	5317497	ExpressionStatement	head = result	490:3:9231:9244	5317386	1	True				
ANR	5317498	AssignmentExpression	head = result		5317386	0		=			
ANR	5317499	Identifier	head		5317386	0					
ANR	5317500	Identifier	result		5317386	1					
ANR	5317501	ExpressionStatement	head -> p = NULL	491:3:9249:9263	5317386	2	True				
ANR	5317502	AssignmentExpression	head -> p = NULL		5317386	0		=			
ANR	5317503	PtrMemberAccess	head -> p		5317386	0					
ANR	5317504	Identifier	head		5317386	0					
ANR	5317505	Identifier	p		5317386	1					
ANR	5317506	Identifier	NULL		5317386	1					
ANR	5317507	ElseStatement	else		5317386	0					
ANR	5317508	CompoundStatement		21:9:427:427	5317386	0					
ANR	5317509	ExpressionStatement	result -> n = next	493:3:9279:9295	5317386	0	True				
ANR	5317510	AssignmentExpression	result -> n = next		5317386	0		=			
ANR	5317511	PtrMemberAccess	result -> n		5317386	0					
ANR	5317512	Identifier	result		5317386	0					
ANR	5317513	Identifier	n		5317386	1					
ANR	5317514	Identifier	next		5317386	1					
ANR	5317515	ExpressionStatement	next -> p = result	494:3:9300:9316	5317386	1	True				
ANR	5317516	AssignmentExpression	next -> p = result		5317386	0		=			
ANR	5317517	PtrMemberAccess	next -> p		5317386	0					
ANR	5317518	Identifier	next		5317386	0					
ANR	5317519	Identifier	p		5317386	1					
ANR	5317520	Identifier	result		5317386	1					
ANR	5317521	ExpressionStatement	result = result -> n	495:3:9321:9339	5317386	2	True				
ANR	5317522	AssignmentExpression	result = result -> n		5317386	0		=			
ANR	5317523	Identifier	result		5317386	0					
ANR	5317524	PtrMemberAccess	result -> n		5317386	1					
ANR	5317525	Identifier	result		5317386	0					
ANR	5317526	Identifier	n		5317386	1					
ANR	5317527	ExpressionStatement	head -> p = NULL	498:1:9349:9363	5317386	2	True				
ANR	5317528	AssignmentExpression	head -> p = NULL		5317386	0		=			
ANR	5317529	PtrMemberAccess	head -> p		5317386	0					
ANR	5317530	Identifier	head		5317386	0					
ANR	5317531	Identifier	p		5317386	1					
ANR	5317532	Identifier	NULL		5317386	1					
ANR	5317533	ExpressionStatement	next -> n = NULL	499:1:9366:9380	5317386	3	True				
ANR	5317534	AssignmentExpression	next -> n = NULL		5317386	0		=			
ANR	5317535	PtrMemberAccess	next -> n		5317386	0					
ANR	5317536	Identifier	next		5317386	0					
ANR	5317537	Identifier	n		5317386	1					
ANR	5317538	Identifier	NULL		5317386	1					
ANR	5317539	ReturnStatement	return head ;	500:1:9383:9394	5317386	4	True				
ANR	5317540	Identifier	head		5317386	0					
ANR	5317541	ReturnType	static RListIter *		5317386	1					
ANR	5317542	Identifier	_merge		5317386	2					
ANR	5317543	ParameterList	"RListIter * first , RListIter * second , RListComparator cmp"		5317386	3					
ANR	5317544	Parameter	RListIter * first	472:25:8788:8803	5317386	0	True				
ANR	5317545	ParameterType	RListIter *		5317386	0					
ANR	5317546	Identifier	first		5317386	1					
ANR	5317547	Parameter	RListIter * second	472:43:8806:8822	5317386	1	True				
ANR	5317548	ParameterType	RListIter *		5317386	0					
ANR	5317549	Identifier	second		5317386	1					
ANR	5317550	Parameter	RListComparator cmp	472:62:8825:8843	5317386	2	True				
ANR	5317551	ParameterType	RListComparator		5317386	0					
ANR	5317552	Identifier	cmp		5317386	1					
ANR	5317553	CFGEntryNode	ENTRY		5317386		True				
ANR	5317554	CFGExitNode	EXIT		5317386		True				
ANR	5317555	Symbol	next		5317386						
ANR	5317556	Symbol	NULL		5317386						
ANR	5317557	Symbol	result -> n		5317386						
ANR	5317558	Symbol	cmp		5317386						
ANR	5317559	Symbol	* head		5317386						
ANR	5317560	Symbol	* next		5317386						
ANR	5317561	Symbol	first -> data		5317386						
ANR	5317562	Symbol	second		5317386						
ANR	5317563	Symbol	head		5317386						
ANR	5317564	Symbol	result		5317386						
ANR	5317565	Symbol	second -> n		5317386						
ANR	5317566	Symbol	* first		5317386						
ANR	5317567	Symbol	* result		5317386						
ANR	5317568	Symbol	second -> data		5317386						
ANR	5317569	Symbol	next -> n		5317386						
ANR	5317570	Symbol	next -> p		5317386						
ANR	5317571	Symbol	head -> p		5317386						
ANR	5317572	Symbol	first		5317386						
ANR	5317573	Symbol	first -> n		5317386						
ANR	5317574	Symbol	* second		5317386						
ANR	5317575	Function	_r_list_half_split	503:0:9399:9710							
ANR	5317576	FunctionDef	_r_list_half_split (RListIter * head)		5317575	0					
ANR	5317577	CompoundStatement		503:55:9454:9710	5317575	0					
ANR	5317578	IdentifierDeclStatement	RListIter * tmp ;	504:1:9457:9471	5317575	0	True				
ANR	5317579	IdentifierDecl	* tmp		5317575	0					
ANR	5317580	IdentifierDeclType	RListIter *		5317575	0					
ANR	5317581	Identifier	tmp		5317575	1					
ANR	5317582	IdentifierDeclStatement	RListIter * fast ;	505:1:9474:9489	5317575	1	True				
ANR	5317583	IdentifierDecl	* fast		5317575	0					
ANR	5317584	IdentifierDeclType	RListIter *		5317575	0					
ANR	5317585	Identifier	fast		5317575	1					
ANR	5317586	IdentifierDeclStatement	RListIter * slow ;	506:1:9492:9507	5317575	2	True				
ANR	5317587	IdentifierDecl	* slow		5317575	0					
ANR	5317588	IdentifierDeclType	RListIter *		5317575	0					
ANR	5317589	Identifier	slow		5317575	1					
ANR	5317590	IfStatement	if ( ! head || ! head -> n )		5317575	3					
ANR	5317591	Condition	! head || ! head -> n	507:5:9514:9530	5317575	0	True				
ANR	5317592	OrExpression	! head || ! head -> n		5317575	0		||			
ANR	5317593	UnaryOperationExpression	! head		5317575	0					
ANR	5317594	UnaryOperator	!		5317575	0					
ANR	5317595	Identifier	head		5317575	1					
ANR	5317596	UnaryOperationExpression	! head -> n		5317575	1					
ANR	5317597	UnaryOperator	!		5317575	0					
ANR	5317598	PtrMemberAccess	head -> n		5317575	1					
ANR	5317599	Identifier	head		5317575	0					
ANR	5317600	Identifier	n		5317575	1					
ANR	5317601	CompoundStatement		5:24:78:78	5317575	1					
ANR	5317602	ReturnStatement	return head ;	508:2:9537:9548	5317575	0	True				
ANR	5317603	Identifier	head		5317575	0					
ANR	5317604	ExpressionStatement	slow = head	510:1:9554:9565	5317575	4	True				
ANR	5317605	AssignmentExpression	slow = head		5317575	0		=			
ANR	5317606	Identifier	slow		5317575	0					
ANR	5317607	Identifier	head		5317575	1					
ANR	5317608	ExpressionStatement	fast = head	511:1:9568:9579	5317575	5	True				
ANR	5317609	AssignmentExpression	fast = head		5317575	0		=			
ANR	5317610	Identifier	fast		5317575	0					
ANR	5317611	Identifier	head		5317575	1					
ANR	5317612	WhileStatement	while ( fast && fast -> n && fast -> n -> n )		5317575	6					
ANR	5317613	Condition	fast && fast -> n && fast -> n -> n	512:8:9589:9617	5317575	0	True				
ANR	5317614	AndExpression	fast && fast -> n && fast -> n -> n		5317575	0		&&			
ANR	5317615	Identifier	fast		5317575	0					
ANR	5317616	AndExpression	fast -> n && fast -> n -> n		5317575	1		&&			
ANR	5317617	PtrMemberAccess	fast -> n		5317575	0					
ANR	5317618	Identifier	fast		5317575	0					
ANR	5317619	Identifier	n		5317575	1					
ANR	5317620	PtrMemberAccess	fast -> n -> n		5317575	1					
ANR	5317621	PtrMemberAccess	fast -> n		5317575	0					
ANR	5317622	Identifier	fast		5317575	0					
ANR	5317623	Identifier	n		5317575	1					
ANR	5317624	Identifier	n		5317575	1					
ANR	5317625	CompoundStatement		10:39:165:165	5317575	1					
ANR	5317626	ExpressionStatement	fast = fast -> n -> n	513:2:9624:9641	5317575	0	True				
ANR	5317627	AssignmentExpression	fast = fast -> n -> n		5317575	0		=			
ANR	5317628	Identifier	fast		5317575	0					
ANR	5317629	PtrMemberAccess	fast -> n -> n		5317575	1					
ANR	5317630	PtrMemberAccess	fast -> n		5317575	0					
ANR	5317631	Identifier	fast		5317575	0					
ANR	5317632	Identifier	n		5317575	1					
ANR	5317633	Identifier	n		5317575	1					
ANR	5317634	ExpressionStatement	slow = slow -> n	514:2:9645:9659	5317575	1	True				
ANR	5317635	AssignmentExpression	slow = slow -> n		5317575	0		=			
ANR	5317636	Identifier	slow		5317575	0					
ANR	5317637	PtrMemberAccess	slow -> n		5317575	1					
ANR	5317638	Identifier	slow		5317575	0					
ANR	5317639	Identifier	n		5317575	1					
ANR	5317640	ExpressionStatement	tmp = slow -> n	516:1:9665:9678	5317575	7	True				
ANR	5317641	AssignmentExpression	tmp = slow -> n		5317575	0		=			
ANR	5317642	Identifier	tmp		5317575	0					
ANR	5317643	PtrMemberAccess	slow -> n		5317575	1					
ANR	5317644	Identifier	slow		5317575	0					
ANR	5317645	Identifier	n		5317575	1					
ANR	5317646	ExpressionStatement	slow -> n = NULL	517:1:9681:9695	5317575	8	True				
ANR	5317647	AssignmentExpression	slow -> n = NULL		5317575	0		=			
ANR	5317648	PtrMemberAccess	slow -> n		5317575	0					
ANR	5317649	Identifier	slow		5317575	0					
ANR	5317650	Identifier	n		5317575	1					
ANR	5317651	Identifier	NULL		5317575	1					
ANR	5317652	ReturnStatement	return tmp ;	518:1:9698:9708	5317575	9	True				
ANR	5317653	Identifier	tmp		5317575	0					
ANR	5317654	ReturnType	static RListIter *		5317575	1					
ANR	5317655	Identifier	_r_list_half_split		5317575	2					
ANR	5317656	ParameterList	RListIter * head		5317575	3					
ANR	5317657	Parameter	RListIter * head	503:38:9437:9451	5317575	0	True				
ANR	5317658	ParameterType	RListIter *		5317575	0					
ANR	5317659	Identifier	head		5317575	1					
ANR	5317660	CFGEntryNode	ENTRY		5317575		True				
ANR	5317661	CFGExitNode	EXIT		5317575		True				
ANR	5317662	Symbol	head -> n		5317575						
ANR	5317663	Symbol	NULL		5317575						
ANR	5317664	Symbol	slow -> n		5317575						
ANR	5317665	Symbol	* head		5317575						
ANR	5317666	Symbol	* fast		5317575						
ANR	5317667	Symbol	* fast -> n		5317575						
ANR	5317668	Symbol	fast -> n		5317575						
ANR	5317669	Symbol	head		5317575						
ANR	5317670	Symbol	fast		5317575						
ANR	5317671	Symbol	* slow		5317575						
ANR	5317672	Symbol	slow		5317575						
ANR	5317673	Symbol	tmp		5317575						
ANR	5317674	Symbol	fast -> n -> n		5317575						
ANR	5317675	Symbol	* * fast		5317575						
ANR	5317676	Function	_merge_sort	521:0:9713:9991							
ANR	5317677	FunctionDef	"_merge_sort (RListIter * head , RListComparator cmp)"		5317676	0					
ANR	5317678	CompoundStatement		521:69:9782:9991	5317676	0					
ANR	5317679	IdentifierDeclStatement	RListIter * second ;	522:1:9785:9802	5317676	0	True				
ANR	5317680	IdentifierDecl	* second		5317676	0					
ANR	5317681	IdentifierDeclType	RListIter *		5317676	0					
ANR	5317682	Identifier	second		5317676	1					
ANR	5317683	IfStatement	if ( ! head || ! head -> n )		5317676	1					
ANR	5317684	Condition	! head || ! head -> n	523:5:9809:9825	5317676	0	True				
ANR	5317685	OrExpression	! head || ! head -> n		5317676	0		||			
ANR	5317686	UnaryOperationExpression	! head		5317676	0					
ANR	5317687	UnaryOperator	!		5317676	0					
ANR	5317688	Identifier	head		5317676	1					
ANR	5317689	UnaryOperationExpression	! head -> n		5317676	1					
ANR	5317690	UnaryOperator	!		5317676	0					
ANR	5317691	PtrMemberAccess	head -> n		5317676	1					
ANR	5317692	Identifier	head		5317676	0					
ANR	5317693	Identifier	n		5317676	1					
ANR	5317694	CompoundStatement		3:24:45:45	5317676	1					
ANR	5317695	ReturnStatement	return head ;	524:2:9832:9843	5317676	0	True				
ANR	5317696	Identifier	head		5317676	0					
ANR	5317697	ExpressionStatement	second = _r_list_half_split ( head )	526:1:9849:9883	5317676	2	True				
ANR	5317698	AssignmentExpression	second = _r_list_half_split ( head )		5317676	0		=			
ANR	5317699	Identifier	second		5317676	0					
ANR	5317700	CallExpression	_r_list_half_split ( head )		5317676	1					
ANR	5317701	Callee	_r_list_half_split		5317676	0					
ANR	5317702	Identifier	_r_list_half_split		5317676	0					
ANR	5317703	ArgumentList	head		5317676	1					
ANR	5317704	Argument	head		5317676	0					
ANR	5317705	Identifier	head		5317676	0					
ANR	5317706	ExpressionStatement	"head = _merge_sort ( head , cmp )"	527:1:9886:9916	5317676	3	True				
ANR	5317707	AssignmentExpression	"head = _merge_sort ( head , cmp )"		5317676	0		=			
ANR	5317708	Identifier	head		5317676	0					
ANR	5317709	CallExpression	"_merge_sort ( head , cmp )"		5317676	1					
ANR	5317710	Callee	_merge_sort		5317676	0					
ANR	5317711	Identifier	_merge_sort		5317676	0					
ANR	5317712	ArgumentList	head		5317676	1					
ANR	5317713	Argument	head		5317676	0					
ANR	5317714	Identifier	head		5317676	0					
ANR	5317715	Argument	cmp		5317676	1					
ANR	5317716	Identifier	cmp		5317676	0					
ANR	5317717	ExpressionStatement	"second = _merge_sort ( second , cmp )"	528:1:9919:9953	5317676	4	True				
ANR	5317718	AssignmentExpression	"second = _merge_sort ( second , cmp )"		5317676	0		=			
ANR	5317719	Identifier	second		5317676	0					
ANR	5317720	CallExpression	"_merge_sort ( second , cmp )"		5317676	1					
ANR	5317721	Callee	_merge_sort		5317676	0					
ANR	5317722	Identifier	_merge_sort		5317676	0					
ANR	5317723	ArgumentList	second		5317676	1					
ANR	5317724	Argument	second		5317676	0					
ANR	5317725	Identifier	second		5317676	0					
ANR	5317726	Argument	cmp		5317676	1					
ANR	5317727	Identifier	cmp		5317676	0					
ANR	5317728	ReturnStatement	"return _merge ( head , second , cmp ) ;"	529:1:9956:9989	5317676	5	True				
ANR	5317729	CallExpression	"_merge ( head , second , cmp )"		5317676	0					
ANR	5317730	Callee	_merge		5317676	0					
ANR	5317731	Identifier	_merge		5317676	0					
ANR	5317732	ArgumentList	head		5317676	1					
ANR	5317733	Argument	head		5317676	0					
ANR	5317734	Identifier	head		5317676	0					
ANR	5317735	Argument	second		5317676	1					
ANR	5317736	Identifier	second		5317676	0					
ANR	5317737	Argument	cmp		5317676	2					
ANR	5317738	Identifier	cmp		5317676	0					
ANR	5317739	ReturnType	static RListIter *		5317676	1					
ANR	5317740	Identifier	_merge_sort		5317676	2					
ANR	5317741	ParameterList	"RListIter * head , RListComparator cmp"		5317676	3					
ANR	5317742	Parameter	RListIter * head	521:31:9744:9758	5317676	0	True				
ANR	5317743	ParameterType	RListIter *		5317676	0					
ANR	5317744	Identifier	head		5317676	1					
ANR	5317745	Parameter	RListComparator cmp	521:48:9761:9779	5317676	1	True				
ANR	5317746	ParameterType	RListComparator		5317676	0					
ANR	5317747	Identifier	cmp		5317676	1					
ANR	5317748	CFGEntryNode	ENTRY		5317676		True				
ANR	5317749	CFGExitNode	EXIT		5317676		True				
ANR	5317750	Symbol	head		5317676						
ANR	5317751	Symbol	_merge_sort		5317676						
ANR	5317752	Symbol	head -> n		5317676						
ANR	5317753	Symbol	_merge		5317676						
ANR	5317754	Symbol	cmp		5317676						
ANR	5317755	Symbol	* head		5317676						
ANR	5317756	Symbol	_r_list_half_split		5317676						
ANR	5317757	Symbol	second		5317676						
ANR	5317758	Function	r_list_merge_sort	532:0:9994:10338							
ANR	5317759	FunctionDef	"r_list_merge_sort (RList * list , RListComparator cmp)"		5317758	0					
ANR	5317760	CompoundStatement		532:63:10057:10338	5317758	0					
ANR	5317761	ExpressionStatement	r_return_if_fail ( list )	533:1:10060:10083	5317758	0	True				
ANR	5317762	CallExpression	r_return_if_fail ( list )		5317758	0					
ANR	5317763	Callee	r_return_if_fail		5317758	0					
ANR	5317764	Identifier	r_return_if_fail		5317758	0					
ANR	5317765	ArgumentList	list		5317758	1					
ANR	5317766	Argument	list		5317758	0					
ANR	5317767	Identifier	list		5317758	0					
ANR	5317768	IfStatement	if ( ! list -> sorted && list -> head && cmp )		5317758	1					
ANR	5317769	Condition	! list -> sorted && list -> head && cmp	535:5:10091:10124	5317758	0	True				
ANR	5317770	AndExpression	! list -> sorted && list -> head && cmp		5317758	0		&&			
ANR	5317771	UnaryOperationExpression	! list -> sorted		5317758	0					
ANR	5317772	UnaryOperator	!		5317758	0					
ANR	5317773	PtrMemberAccess	list -> sorted		5317758	1					
ANR	5317774	Identifier	list		5317758	0					
ANR	5317775	Identifier	sorted		5317758	1					
ANR	5317776	AndExpression	list -> head && cmp		5317758	1		&&			
ANR	5317777	PtrMemberAccess	list -> head		5317758	0					
ANR	5317778	Identifier	list		5317758	0					
ANR	5317779	Identifier	head		5317758	1					
ANR	5317780	Identifier	cmp		5317758	1					
ANR	5317781	CompoundStatement		5:2:73:88	5317758	1					
ANR	5317782	IdentifierDeclStatement	RListIter * iter ;	536:2:10131:10146	5317758	0	True				
ANR	5317783	IdentifierDecl	* iter		5317758	0					
ANR	5317784	IdentifierDeclType	RListIter *		5317758	0					
ANR	5317785	Identifier	iter		5317758	1					
ANR	5317786	ExpressionStatement	"list -> head = _merge_sort ( list -> head , cmp )"	537:2:10150:10192	5317758	1	True				
ANR	5317787	AssignmentExpression	"list -> head = _merge_sort ( list -> head , cmp )"		5317758	0		=			
ANR	5317788	PtrMemberAccess	list -> head		5317758	0					
ANR	5317789	Identifier	list		5317758	0					
ANR	5317790	Identifier	head		5317758	1					
ANR	5317791	CallExpression	"_merge_sort ( list -> head , cmp )"		5317758	1					
ANR	5317792	Callee	_merge_sort		5317758	0					
ANR	5317793	Identifier	_merge_sort		5317758	0					
ANR	5317794	ArgumentList	list -> head		5317758	1					
ANR	5317795	Argument	list -> head		5317758	0					
ANR	5317796	PtrMemberAccess	list -> head		5317758	0					
ANR	5317797	Identifier	list		5317758	0					
ANR	5317798	Identifier	head		5317758	1					
ANR	5317799	Argument	cmp		5317758	1					
ANR	5317800	Identifier	cmp		5317758	0					
ANR	5317801	ExpressionStatement	iter = list -> head	539:2:10222:10239	5317758	2	True				
ANR	5317802	AssignmentExpression	iter = list -> head		5317758	0		=			
ANR	5317803	Identifier	iter		5317758	0					
ANR	5317804	PtrMemberAccess	list -> head		5317758	1					
ANR	5317805	Identifier	list		5317758	0					
ANR	5317806	Identifier	head		5317758	1					
ANR	5317807	WhileStatement	while ( iter && iter -> n )		5317758	3					
ANR	5317808	Condition	iter && iter -> n	540:9:10250:10264	5317758	0	True				
ANR	5317809	AndExpression	iter && iter -> n		5317758	0		&&			
ANR	5317810	Identifier	iter		5317758	0					
ANR	5317811	PtrMemberAccess	iter -> n		5317758	1					
ANR	5317812	Identifier	iter		5317758	0					
ANR	5317813	Identifier	n		5317758	1					
ANR	5317814	CompoundStatement		9:26:209:209	5317758	1					
ANR	5317815	ExpressionStatement	iter = iter -> n	541:3:10272:10286	5317758	0	True				
ANR	5317816	AssignmentExpression	iter = iter -> n		5317758	0		=			
ANR	5317817	Identifier	iter		5317758	0					
ANR	5317818	PtrMemberAccess	iter -> n		5317758	1					
ANR	5317819	Identifier	iter		5317758	0					
ANR	5317820	Identifier	n		5317758	1					
ANR	5317821	ExpressionStatement	list -> tail = iter	543:2:10294:10311	5317758	4	True				
ANR	5317822	AssignmentExpression	list -> tail = iter		5317758	0		=			
ANR	5317823	PtrMemberAccess	list -> tail		5317758	0					
ANR	5317824	Identifier	list		5317758	0					
ANR	5317825	Identifier	tail		5317758	1					
ANR	5317826	Identifier	iter		5317758	1					
ANR	5317827	ExpressionStatement	list -> sorted = true	545:1:10317:10336	5317758	2	True				
ANR	5317828	AssignmentExpression	list -> sorted = true		5317758	0		=			
ANR	5317829	PtrMemberAccess	list -> sorted		5317758	0					
ANR	5317830	Identifier	list		5317758	0					
ANR	5317831	Identifier	sorted		5317758	1					
ANR	5317832	Identifier	true		5317758	1					
ANR	5317833	ReturnType	R_API void		5317758	1					
ANR	5317834	Identifier	r_list_merge_sort		5317758	2					
ANR	5317835	ParameterList	"RList * list , RListComparator cmp"		5317758	3					
ANR	5317836	Parameter	RList * list	532:29:10023:10033	5317758	0	True				
ANR	5317837	ParameterType	RList *		5317758	0					
ANR	5317838	Identifier	list		5317758	1					
ANR	5317839	Parameter	RListComparator cmp	532:42:10036:10054	5317758	1	True				
ANR	5317840	ParameterType	RListComparator		5317758	0					
ANR	5317841	Identifier	cmp		5317758	1					
ANR	5317842	CFGEntryNode	ENTRY		5317758		True				
ANR	5317843	CFGExitNode	EXIT		5317758		True				
ANR	5317844	Symbol	list -> head		5317758						
ANR	5317845	Symbol	_merge_sort		5317758						
ANR	5317846	Symbol	* iter		5317758						
ANR	5317847	Symbol	* list		5317758						
ANR	5317848	Symbol	cmp		5317758						
ANR	5317849	Symbol	iter -> n		5317758						
ANR	5317850	Symbol	list -> sorted		5317758						
ANR	5317851	Symbol	true		5317758						
ANR	5317852	Symbol	iter		5317758						
ANR	5317853	Symbol	list		5317758						
ANR	5317854	Symbol	list -> tail		5317758						
ANR	5317855	Function	r_list_insertion_sort	548:0:10341:10783							
ANR	5317856	FunctionDef	"r_list_insertion_sort (RList * list , RListComparator cmp)"		5317855	0					
ANR	5317857	CompoundStatement		548:67:10408:10783	5317855	0					
ANR	5317858	ExpressionStatement	r_return_if_fail ( list )	549:1:10411:10434	5317855	0	True				
ANR	5317859	CallExpression	r_return_if_fail ( list )		5317855	0					
ANR	5317860	Callee	r_return_if_fail		5317855	0					
ANR	5317861	Identifier	r_return_if_fail		5317855	0					
ANR	5317862	ArgumentList	list		5317855	1					
ANR	5317863	Argument	list		5317855	0					
ANR	5317864	Identifier	list		5317855	0					
ANR	5317865	IfStatement	if ( ! list -> sorted )		5317855	1					
ANR	5317866	Condition	! list -> sorted	551:5:10442:10454	5317855	0	True				
ANR	5317867	UnaryOperationExpression	! list -> sorted		5317855	0					
ANR	5317868	UnaryOperator	!		5317855	0					
ANR	5317869	PtrMemberAccess	list -> sorted		5317855	1					
ANR	5317870	Identifier	list		5317855	0					
ANR	5317871	Identifier	sorted		5317855	1					
ANR	5317872	CompoundStatement		6:2:69:83	5317855	1					
ANR	5317873	IdentifierDeclStatement	RListIter * it ;	552:2:10461:10474	5317855	0	True				
ANR	5317874	IdentifierDecl	* it		5317855	0					
ANR	5317875	IdentifierDeclType	RListIter *		5317855	0					
ANR	5317876	Identifier	it		5317855	1					
ANR	5317877	IdentifierDeclStatement	RListIter * it2 ;	553:2:10478:10492	5317855	1	True				
ANR	5317878	IdentifierDecl	* it2		5317855	0					
ANR	5317879	IdentifierDeclType	RListIter *		5317855	0					
ANR	5317880	Identifier	it2		5317855	1					
ANR	5317881	IfStatement	if ( cmp )		5317855	2					
ANR	5317882	Condition	cmp	554:6:10500:10502	5317855	0	True				
ANR	5317883	Identifier	cmp		5317855	0					
ANR	5317884	CompoundStatement		7:11:96:96	5317855	1					
ANR	5317885	ForStatement	for ( it = list -> head ; it && it -> data ; it = it -> n )		5317855	0					
ANR	5317886	ForInit	it = list -> head ;	555:8:10515:10530	5317855	0	True				
ANR	5317887	AssignmentExpression	it = list -> head		5317855	0		=			
ANR	5317888	Identifier	it		5317855	0					
ANR	5317889	PtrMemberAccess	list -> head		5317855	1					
ANR	5317890	Identifier	list		5317855	0					
ANR	5317891	Identifier	head		5317855	1					
ANR	5317892	Condition	it && it -> data	555:25:10532:10545	5317855	1	True				
ANR	5317893	AndExpression	it && it -> data		5317855	0		&&			
ANR	5317894	Identifier	it		5317855	0					
ANR	5317895	PtrMemberAccess	it -> data		5317855	1					
ANR	5317896	Identifier	it		5317855	0					
ANR	5317897	Identifier	data		5317855	1					
ANR	5317898	AssignmentExpression	it = it -> n	555:41:10548:10557	5317855	2	True	=			
ANR	5317899	Identifier	it		5317855	0					
ANR	5317900	PtrMemberAccess	it -> n		5317855	1					
ANR	5317901	Identifier	it		5317855	0					
ANR	5317902	Identifier	n		5317855	1					
ANR	5317903	CompoundStatement		8:53:151:151	5317855	3					
ANR	5317904	ForStatement	for ( it2 = it -> n ; it2 && it2 -> data ; it2 = it2 -> n )		5317855	0					
ANR	5317905	ForInit	it2 = it -> n ;	556:9:10571:10582	5317855	0	True				
ANR	5317906	AssignmentExpression	it2 = it -> n		5317855	0		=			
ANR	5317907	Identifier	it2		5317855	0					
ANR	5317908	PtrMemberAccess	it -> n		5317855	1					
ANR	5317909	Identifier	it		5317855	0					
ANR	5317910	Identifier	n		5317855	1					
ANR	5317911	Condition	it2 && it2 -> data	556:22:10584:10599	5317855	1	True				
ANR	5317912	AndExpression	it2 && it2 -> data		5317855	0		&&			
ANR	5317913	Identifier	it2		5317855	0					
ANR	5317914	PtrMemberAccess	it2 -> data		5317855	1					
ANR	5317915	Identifier	it2		5317855	0					
ANR	5317916	Identifier	data		5317855	1					
ANR	5317917	AssignmentExpression	it2 = it2 -> n	556:40:10602:10613	5317855	2	True	=			
ANR	5317918	Identifier	it2		5317855	0					
ANR	5317919	PtrMemberAccess	it2 -> n		5317855	1					
ANR	5317920	Identifier	it2		5317855	0					
ANR	5317921	Identifier	n		5317855	1					
ANR	5317922	CompoundStatement		9:54:207:207	5317855	3					
ANR	5317923	IfStatement	"if ( cmp ( it -> data , it2 -> data ) > 0 )"		5317855	0					
ANR	5317924	Condition	"cmp ( it -> data , it2 -> data ) > 0"	557:9:10627:10655	5317855	0	True				
ANR	5317925	RelationalExpression	"cmp ( it -> data , it2 -> data ) > 0"		5317855	0		>			
ANR	5317926	CallExpression	"cmp ( it -> data , it2 -> data )"		5317855	0					
ANR	5317927	Callee	cmp		5317855	0					
ANR	5317928	Identifier	cmp		5317855	0					
ANR	5317929	ArgumentList	it -> data		5317855	1					
ANR	5317930	Argument	it -> data		5317855	0					
ANR	5317931	PtrMemberAccess	it -> data		5317855	0					
ANR	5317932	Identifier	it		5317855	0					
ANR	5317933	Identifier	data		5317855	1					
ANR	5317934	Argument	it2 -> data		5317855	1					
ANR	5317935	PtrMemberAccess	it2 -> data		5317855	0					
ANR	5317936	Identifier	it2		5317855	0					
ANR	5317937	Identifier	data		5317855	1					
ANR	5317938	PrimaryExpression	0		5317855	1					
ANR	5317939	CompoundStatement		11:6:257:275	5317855	1					
ANR	5317940	IdentifierDeclStatement	void * t = it -> data ;	558:6:10666:10684	5317855	0	True				
ANR	5317941	IdentifierDecl	* t = it -> data		5317855	0					
ANR	5317942	IdentifierDeclType	void *		5317855	0					
ANR	5317943	Identifier	t		5317855	1					
ANR	5317944	AssignmentExpression	* t = it -> data		5317855	2		=			
ANR	5317945	Identifier	t		5317855	0					
ANR	5317946	PtrMemberAccess	it -> data		5317855	1					
ANR	5317947	Identifier	it		5317855	0					
ANR	5317948	Identifier	data		5317855	1					
ANR	5317949	ExpressionStatement	it -> data = it2 -> data	559:6:10692:10712	5317855	1	True				
ANR	5317950	AssignmentExpression	it -> data = it2 -> data		5317855	0		=			
ANR	5317951	PtrMemberAccess	it -> data		5317855	0					
ANR	5317952	Identifier	it		5317855	0					
ANR	5317953	Identifier	data		5317855	1					
ANR	5317954	PtrMemberAccess	it2 -> data		5317855	1					
ANR	5317955	Identifier	it2		5317855	0					
ANR	5317956	Identifier	data		5317855	1					
ANR	5317957	ExpressionStatement	it2 -> data = t	560:6:10720:10733	5317855	2	True				
ANR	5317958	AssignmentExpression	it2 -> data = t		5317855	0		=			
ANR	5317959	PtrMemberAccess	it2 -> data		5317855	0					
ANR	5317960	Identifier	it2		5317855	0					
ANR	5317961	Identifier	data		5317855	1					
ANR	5317962	Identifier	t		5317855	1					
ANR	5317963	ExpressionStatement	list -> sorted = true	565:2:10759:10778	5317855	3	True				
ANR	5317964	AssignmentExpression	list -> sorted = true		5317855	0		=			
ANR	5317965	PtrMemberAccess	list -> sorted		5317855	0					
ANR	5317966	Identifier	list		5317855	0					
ANR	5317967	Identifier	sorted		5317855	1					
ANR	5317968	Identifier	true		5317855	1					
ANR	5317969	ReturnType	R_API void		5317855	1					
ANR	5317970	Identifier	r_list_insertion_sort		5317855	2					
ANR	5317971	ParameterList	"RList * list , RListComparator cmp"		5317855	3					
ANR	5317972	Parameter	RList * list	548:33:10374:10384	5317855	0	True				
ANR	5317973	ParameterType	RList *		5317855	0					
ANR	5317974	Identifier	list		5317855	1					
ANR	5317975	Parameter	RListComparator cmp	548:46:10387:10405	5317855	1	True				
ANR	5317976	ParameterType	RListComparator		5317855	0					
ANR	5317977	Identifier	cmp		5317855	1					
ANR	5317978	CFGEntryNode	ENTRY		5317855		True				
ANR	5317979	CFGExitNode	EXIT		5317855		True				
ANR	5317980	Symbol	it2 -> n		5317855						
ANR	5317981	Symbol	it2		5317855						
ANR	5317982	Symbol	cmp		5317855						
ANR	5317983	Symbol	it		5317855						
ANR	5317984	Symbol	list		5317855						
ANR	5317985	Symbol	it -> n		5317855						
ANR	5317986	Symbol	* it2		5317855						
ANR	5317987	Symbol	it2 -> data		5317855						
ANR	5317988	Symbol	list -> head		5317855						
ANR	5317989	Symbol	* it		5317855						
ANR	5317990	Symbol	t		5317855						
ANR	5317991	Symbol	* list		5317855						
ANR	5317992	Symbol	list -> sorted		5317855						
ANR	5317993	Symbol	true		5317855						
ANR	5317994	Symbol	it -> data		5317855						
ANR	5317995	Function	r_list_sort	570:0:10817:11011							
ANR	5317996	FunctionDef	"r_list_sort (RList * list , RListComparator cmp)"		5317995	0					
ANR	5317997	CompoundStatement		570:57:10874:11011	5317995	0					
ANR	5317998	ExpressionStatement	r_return_if_fail ( list )	571:1:10877:10900	5317995	0	True				
ANR	5317999	CallExpression	r_return_if_fail ( list )		5317995	0					
ANR	5318000	Callee	r_return_if_fail		5317995	0					
ANR	5318001	Identifier	r_return_if_fail		5317995	0					
ANR	5318002	ArgumentList	list		5317995	1					
ANR	5318003	Argument	list		5317995	0					
ANR	5318004	Identifier	list		5317995	0					
ANR	5318005	IfStatement	if ( list -> length > 43 )		5317995	1					
ANR	5318006	Condition	list -> length > 43	572:5:10907:10923	5317995	0	True				
ANR	5318007	RelationalExpression	list -> length > 43		5317995	0		>			
ANR	5318008	PtrMemberAccess	list -> length		5317995	0					
ANR	5318009	Identifier	list		5317995	0					
ANR	5318010	Identifier	length		5317995	1					
ANR	5318011	PrimaryExpression	43		5317995	1					
ANR	5318012	CompoundStatement		3:24:51:51	5317995	1					
ANR	5318013	ExpressionStatement	"r_list_merge_sort ( list , cmp )"	573:2:10930:10959	5317995	0	True				
ANR	5318014	CallExpression	"r_list_merge_sort ( list , cmp )"		5317995	0					
ANR	5318015	Callee	r_list_merge_sort		5317995	0					
ANR	5318016	Identifier	r_list_merge_sort		5317995	0					
ANR	5318017	ArgumentList	list		5317995	1					
ANR	5318018	Argument	list		5317995	0					
ANR	5318019	Identifier	list		5317995	0					
ANR	5318020	Argument	cmp		5317995	1					
ANR	5318021	Identifier	cmp		5317995	0					
ANR	5318022	ElseStatement	else		5317995	0					
ANR	5318023	CompoundStatement		5:8:94:94	5317995	0					
ANR	5318024	ExpressionStatement	"r_list_insertion_sort ( list , cmp )"	575:2:10973:11006	5317995	0	True				
ANR	5318025	CallExpression	"r_list_insertion_sort ( list , cmp )"		5317995	0					
ANR	5318026	Callee	r_list_insertion_sort		5317995	0					
ANR	5318027	Identifier	r_list_insertion_sort		5317995	0					
ANR	5318028	ArgumentList	list		5317995	1					
ANR	5318029	Argument	list		5317995	0					
ANR	5318030	Identifier	list		5317995	0					
ANR	5318031	Argument	cmp		5317995	1					
ANR	5318032	Identifier	cmp		5317995	0					
ANR	5318033	ReturnType	R_API void		5317995	1					
ANR	5318034	Identifier	r_list_sort		5317995	2					
ANR	5318035	ParameterList	"RList * list , RListComparator cmp"		5317995	3					
ANR	5318036	Parameter	RList * list	570:23:10840:10850	5317995	0	True				
ANR	5318037	ParameterType	RList *		5317995	0					
ANR	5318038	Identifier	list		5317995	1					
ANR	5318039	Parameter	RListComparator cmp	570:36:10853:10871	5317995	1	True				
ANR	5318040	ParameterType	RListComparator		5317995	0					
ANR	5318041	Identifier	cmp		5317995	1					
ANR	5318042	CFGEntryNode	ENTRY		5317995		True				
ANR	5318043	CFGExitNode	EXIT		5317995		True				
ANR	5318044	Symbol	list -> length		5317995						
ANR	5318045	Symbol	* list		5317995						
ANR	5318046	Symbol	cmp		5317995						
ANR	5318047	Symbol	list		5317995						
ANR	5318048	Function	r_list_uniq	579:0:11014:11468							
ANR	5318049	FunctionDef	"r_list_uniq (const RList * list , RListComparator cmp)"		5318048	0					
ANR	5318050	CompoundStatement		579:65:11079:11468	5318048	0					
ANR	5318051	IdentifierDeclStatement	"RListIter * iter , * iter2 ;"	580:1:11082:11105	5318048	0	True				
ANR	5318052	IdentifierDecl	* iter		5318048	0					
ANR	5318053	IdentifierDeclType	RListIter *		5318048	0					
ANR	5318054	Identifier	iter		5318048	1					
ANR	5318055	IdentifierDecl	* iter2		5318048	1					
ANR	5318056	IdentifierDeclType	RListIter *		5318048	0					
ANR	5318057	Identifier	iter2		5318048	1					
ANR	5318058	IdentifierDeclStatement	"void * item , * item2 ;"	581:1:11108:11126	5318048	1	True				
ANR	5318059	IdentifierDecl	* item		5318048	0					
ANR	5318060	IdentifierDeclType	void *		5318048	0					
ANR	5318061	Identifier	item		5318048	1					
ANR	5318062	IdentifierDecl	* item2		5318048	1					
ANR	5318063	IdentifierDeclType	void *		5318048	0					
ANR	5318064	Identifier	item2		5318048	1					
ANR	5318065	ExpressionStatement	"r_return_val_if_fail ( list && cmp , NULL )"	583:1:11130:11170	5318048	2	True				
ANR	5318066	CallExpression	"r_return_val_if_fail ( list && cmp , NULL )"		5318048	0					
ANR	5318067	Callee	r_return_val_if_fail		5318048	0					
ANR	5318068	Identifier	r_return_val_if_fail		5318048	0					
ANR	5318069	ArgumentList	list && cmp		5318048	1					
ANR	5318070	Argument	list && cmp		5318048	0					
ANR	5318071	AndExpression	list && cmp		5318048	0		&&			
ANR	5318072	Identifier	list		5318048	0					
ANR	5318073	Identifier	cmp		5318048	1					
ANR	5318074	Argument	NULL		5318048	1					
ANR	5318075	Identifier	NULL		5318048	0					
ANR	5318076	IdentifierDeclStatement	RList * nl = r_list_newf ( NULL ) ;	585:1:11174:11204	5318048	3	True				
ANR	5318077	IdentifierDecl	* nl = r_list_newf ( NULL )		5318048	0					
ANR	5318078	IdentifierDeclType	RList *		5318048	0					
ANR	5318079	Identifier	nl		5318048	1					
ANR	5318080	AssignmentExpression	* nl = r_list_newf ( NULL )		5318048	2		=			
ANR	5318081	Identifier	nl		5318048	0					
ANR	5318082	CallExpression	r_list_newf ( NULL )		5318048	1					
ANR	5318083	Callee	r_list_newf		5318048	0					
ANR	5318084	Identifier	r_list_newf		5318048	0					
ANR	5318085	ArgumentList	NULL		5318048	1					
ANR	5318086	Argument	NULL		5318048	0					
ANR	5318087	Identifier	NULL		5318048	0					
ANR	5318088	IfStatement	if ( ! nl )		5318048	4					
ANR	5318089	Condition	! nl	586:5:11211:11213	5318048	0	True				
ANR	5318090	UnaryOperationExpression	! nl		5318048	0					
ANR	5318091	UnaryOperator	!		5318048	0					
ANR	5318092	Identifier	nl		5318048	1					
ANR	5318093	CompoundStatement		8:10:136:136	5318048	1					
ANR	5318094	ReturnStatement	return NULL ;	587:2:11220:11231	5318048	0	True				
ANR	5318095	Identifier	NULL		5318048	0					
ANR	5318096	Statement	r_list_foreach	589:1:11237:11250	5318048	5	True				
ANR	5318097	Statement	(	589:16:11252:11252	5318048	6	True				
ANR	5318098	Statement	list	589:17:11253:11256	5318048	7	True				
ANR	5318099	Statement	","	589:21:11257:11257	5318048	8	True				
ANR	5318100	Statement	iter	589:23:11259:11262	5318048	9	True				
ANR	5318101	Statement	","	589:27:11263:11263	5318048	10	True				
ANR	5318102	Statement	item	589:29:11265:11268	5318048	11	True				
ANR	5318103	Statement	)	589:33:11269:11269	5318048	12	True				
ANR	5318104	CompoundStatement		12:2:195:213	5318048	13					
ANR	5318105	IdentifierDeclStatement	bool found = false ;	590:2:11275:11293	5318048	0	True				
ANR	5318106	IdentifierDecl	found = false		5318048	0					
ANR	5318107	IdentifierDeclType	bool		5318048	0					
ANR	5318108	Identifier	found		5318048	1					
ANR	5318109	AssignmentExpression	found = false		5318048	2		=			
ANR	5318110	Identifier	false		5318048	0					
ANR	5318111	Identifier	false		5318048	1					
ANR	5318112	Statement	r_list_foreach	591:2:11297:11310	5318048	1	True				
ANR	5318113	Statement	(	591:17:11312:11312	5318048	2	True				
ANR	5318114	Statement	nl	591:18:11313:11314	5318048	3	True				
ANR	5318115	Statement	","	591:20:11315:11315	5318048	4	True				
ANR	5318116	Statement	iter2	591:22:11317:11321	5318048	5	True				
ANR	5318117	Statement	","	591:27:11322:11322	5318048	6	True				
ANR	5318118	Statement	item2	591:29:11324:11328	5318048	7	True				
ANR	5318119	Statement	)	591:34:11329:11329	5318048	8	True				
ANR	5318120	CompoundStatement		13:36:251:251	5318048	9					
ANR	5318121	IfStatement	"if ( cmp ( item , item2 ) == 0 )"		5318048	0					
ANR	5318122	Condition	"cmp ( item , item2 ) == 0"	592:7:11340:11361	5318048	0	True				
ANR	5318123	EqualityExpression	"cmp ( item , item2 ) == 0"		5318048	0		==			
ANR	5318124	CallExpression	"cmp ( item , item2 )"		5318048	0					
ANR	5318125	Callee	cmp		5318048	0					
ANR	5318126	Identifier	cmp		5318048	0					
ANR	5318127	ArgumentList	item		5318048	1					
ANR	5318128	Argument	item		5318048	0					
ANR	5318129	Identifier	item		5318048	0					
ANR	5318130	Argument	item2		5318048	1					
ANR	5318131	Identifier	item2		5318048	0					
ANR	5318132	PrimaryExpression	0		5318048	1					
ANR	5318133	CompoundStatement		14:31:284:284	5318048	1					
ANR	5318134	ExpressionStatement	found = true	593:4:11370:11382	5318048	0	True				
ANR	5318135	AssignmentExpression	found = true		5318048	0		=			
ANR	5318136	Identifier	found		5318048	0					
ANR	5318137	Identifier	true		5318048	1					
ANR	5318138	BreakStatement	break ;	594:4:11388:11393	5318048	1	True				
ANR	5318139	IfStatement	if ( ! found )		5318048	10					
ANR	5318140	Condition	! found	597:6:11410:11415	5318048	0	True				
ANR	5318141	UnaryOperationExpression	! found		5318048	0					
ANR	5318142	UnaryOperator	!		5318048	0					
ANR	5318143	Identifier	found		5318048	1					
ANR	5318144	CompoundStatement		19:14:338:338	5318048	1					
ANR	5318145	ExpressionStatement	"r_list_append ( nl , item )"	598:3:11423:11447	5318048	0	True				
ANR	5318146	CallExpression	"r_list_append ( nl , item )"		5318048	0					
ANR	5318147	Callee	r_list_append		5318048	0					
ANR	5318148	Identifier	r_list_append		5318048	0					
ANR	5318149	ArgumentList	nl		5318048	1					
ANR	5318150	Argument	nl		5318048	0					
ANR	5318151	Identifier	nl		5318048	0					
ANR	5318152	Argument	item		5318048	1					
ANR	5318153	Identifier	item		5318048	0					
ANR	5318154	ReturnStatement	return nl ;	601:1:11457:11466	5318048	14	True				
ANR	5318155	Identifier	nl		5318048	0					
ANR	5318156	ReturnType	R_API RList *		5318048	1					
ANR	5318157	Identifier	r_list_uniq		5318048	2					
ANR	5318158	ParameterList	"const RList * list , RListComparator cmp"		5318048	3					
ANR	5318159	Parameter	const RList * list	579:25:11039:11055	5318048	0	True				
ANR	5318160	ParameterType	const RList *		5318048	0					
ANR	5318161	Identifier	list		5318048	1					
ANR	5318162	Parameter	RListComparator cmp	579:44:11058:11076	5318048	1	True				
ANR	5318163	ParameterType	RListComparator		5318048	0					
ANR	5318164	Identifier	cmp		5318048	1					
ANR	5318165	CFGEntryNode	ENTRY		5318048		True				
ANR	5318166	CFGExitNode	EXIT		5318048		True				
ANR	5318167	CFGErrorNode	ERROR		5318048		True				
ANR	5318168	Symbol	item		5318048						
ANR	5318169	Symbol	item2		5318048						
ANR	5318170	Symbol	NULL		5318048						
ANR	5318171	Symbol	found		5318048						
ANR	5318172	Symbol	r_list_newf		5318048						
ANR	5318173	Symbol	cmp		5318048						
ANR	5318174	Symbol	iter2		5318048						
ANR	5318175	Symbol	false		5318048						
ANR	5318176	Symbol	true		5318048						
ANR	5318177	Symbol	iter		5318048						
ANR	5318178	Symbol	list		5318048						
ANR	5318179	Symbol	nl		5318048						
ANR	5318180	Function	r_list_to_str	603:0:11470:11731							
ANR	5318181	FunctionDef	"r_list_to_str (RList * list , char ch)"		5318180	0					
ANR	5318182	CompoundStatement		603:48:11518:11731	5318180	0					
ANR	5318183	IdentifierDeclStatement	RListIter * iter ;	604:1:11521:11536	5318180	0	True				
ANR	5318184	IdentifierDecl	* iter		5318180	0					
ANR	5318185	IdentifierDeclType	RListIter *		5318180	0					
ANR	5318186	Identifier	iter		5318180	1					
ANR	5318187	IdentifierDeclStatement	"RStrBuf * buf = r_strbuf_new ( """" ) ;"	605:1:11539:11571	5318180	1	True				
ANR	5318188	IdentifierDecl	"* buf = r_strbuf_new ( """" )"		5318180	0					
ANR	5318189	IdentifierDeclType	RStrBuf *		5318180	0					
ANR	5318190	Identifier	buf		5318180	1					
ANR	5318191	AssignmentExpression	"* buf = r_strbuf_new ( """" )"		5318180	2		=			
ANR	5318192	Identifier	buf		5318180	0					
ANR	5318193	CallExpression	"r_strbuf_new ( """" )"		5318180	1					
ANR	5318194	Callee	r_strbuf_new		5318180	0					
ANR	5318195	Identifier	r_strbuf_new		5318180	0					
ANR	5318196	ArgumentList	""""""		5318180	1					
ANR	5318197	Argument	""""""		5318180	0					
ANR	5318198	PrimaryExpression	""""""		5318180	0					
ANR	5318199	IfStatement	if ( ! buf )		5318180	2					
ANR	5318200	Condition	! buf	606:5:11578:11581	5318180	0	True				
ANR	5318201	UnaryOperationExpression	! buf		5318180	0					
ANR	5318202	UnaryOperator	!		5318180	0					
ANR	5318203	Identifier	buf		5318180	1					
ANR	5318204	CompoundStatement		4:11:65:65	5318180	1					
ANR	5318205	ReturnStatement	return NULL ;	607:2:11588:11599	5318180	0	True				
ANR	5318206	Identifier	NULL		5318180	0					
ANR	5318207	IdentifierDeclStatement	char * item ;	609:1:11605:11615	5318180	3	True				
ANR	5318208	IdentifierDecl	* item		5318180	0					
ANR	5318209	IdentifierDeclType	char *		5318180	0					
ANR	5318210	Identifier	item		5318180	1					
ANR	5318211	Statement	r_list_foreach	610:1:11618:11631	5318180	4	True				
ANR	5318212	Statement	(	610:16:11633:11633	5318180	5	True				
ANR	5318213	Statement	list	610:17:11634:11637	5318180	6	True				
ANR	5318214	Statement	","	610:21:11638:11638	5318180	7	True				
ANR	5318215	Statement	iter	610:23:11640:11643	5318180	8	True				
ANR	5318216	Statement	","	610:27:11644:11644	5318180	9	True				
ANR	5318217	Statement	item	610:29:11646:11649	5318180	10	True				
ANR	5318218	Statement	)	610:33:11650:11650	5318180	11	True				
ANR	5318219	CompoundStatement		8:35:133:133	5318180	12					
ANR	5318220	ExpressionStatement	"r_strbuf_appendf ( buf , ""%s%c"" , item , ch )"	611:2:11656:11696	5318180	0	True				
ANR	5318221	CallExpression	"r_strbuf_appendf ( buf , ""%s%c"" , item , ch )"		5318180	0					
ANR	5318222	Callee	r_strbuf_appendf		5318180	0					
ANR	5318223	Identifier	r_strbuf_appendf		5318180	0					
ANR	5318224	ArgumentList	buf		5318180	1					
ANR	5318225	Argument	buf		5318180	0					
ANR	5318226	Identifier	buf		5318180	0					
ANR	5318227	Argument	"""%s%c"""		5318180	1					
ANR	5318228	PrimaryExpression	"""%s%c"""		5318180	0					
ANR	5318229	Argument	item		5318180	2					
ANR	5318230	Identifier	item		5318180	0					
ANR	5318231	Argument	ch		5318180	3					
ANR	5318232	Identifier	ch		5318180	0					
ANR	5318233	ReturnStatement	return r_strbuf_drain ( buf ) ;	613:1:11702:11729	5318180	13	True				
ANR	5318234	CallExpression	r_strbuf_drain ( buf )		5318180	0					
ANR	5318235	Callee	r_strbuf_drain		5318180	0					
ANR	5318236	Identifier	r_strbuf_drain		5318180	0					
ANR	5318237	ArgumentList	buf		5318180	1					
ANR	5318238	Argument	buf		5318180	0					
ANR	5318239	Identifier	buf		5318180	0					
ANR	5318240	ReturnType	R_API char *		5318180	1					
ANR	5318241	Identifier	r_list_to_str		5318180	2					
ANR	5318242	ParameterList	"RList * list , char ch"		5318180	3					
ANR	5318243	Parameter	RList * list	603:26:11496:11506	5318180	0	True				
ANR	5318244	ParameterType	RList *		5318180	0					
ANR	5318245	Identifier	list		5318180	1					
ANR	5318246	Parameter	char ch	603:39:11509:11515	5318180	1	True				
ANR	5318247	ParameterType	char		5318180	0					
ANR	5318248	Identifier	ch		5318180	1					
ANR	5318249	CFGEntryNode	ENTRY		5318180		True				
ANR	5318250	CFGExitNode	EXIT		5318180		True				
ANR	5318251	Symbol	buf		5318180						
ANR	5318252	Symbol	item		5318180						
ANR	5318253	Symbol	r_strbuf_new		5318180						
ANR	5318254	Symbol	NULL		5318180						
ANR	5318255	Symbol	ch		5318180						
ANR	5318256	Symbol	r_strbuf_drain		5318180						
ANR	5318257	Symbol	iter		5318180						
ANR	5318258	Symbol	list		5318180						
ANR	5318259	Function	main	619:0:11772:13827							
ANR	5318260	FunctionDef	main ()		5318259	0					
ANR	5318261	CompoundStatement		619:12:11784:13827	5318259	0					
ANR	5318262	IdentifierDeclStatement	"RListIter * iter , * it ;"	620:1:11787:11807	5318259	0	True				
ANR	5318263	IdentifierDecl	* iter		5318259	0					
ANR	5318264	IdentifierDeclType	RListIter *		5318259	0					
ANR	5318265	Identifier	iter		5318259	1					
ANR	5318266	IdentifierDecl	* it		5318259	1					
ANR	5318267	IdentifierDeclType	RListIter *		5318259	0					
ANR	5318268	Identifier	it		5318259	1					
ANR	5318269	IdentifierDeclStatement	RList * l = r_list_new ( ) ;	621:1:11810:11834	5318259	1	True				
ANR	5318270	IdentifierDecl	* l = r_list_new ( )		5318259	0					
ANR	5318271	IdentifierDeclType	RList *		5318259	0					
ANR	5318272	Identifier	l		5318259	1					
ANR	5318273	AssignmentExpression	* l = r_list_new ( )		5318259	2		=			
ANR	5318274	Identifier	l		5318259	0					
ANR	5318275	CallExpression	r_list_new ( )		5318259	1					
ANR	5318276	Callee	r_list_new		5318259	0					
ANR	5318277	Identifier	r_list_new		5318259	0					
ANR	5318278	ArgumentList			5318259	1					
ANR	5318279	ExpressionStatement	"r_list_append ( l , ""foo"" )"	623:1:11838:11862	5318259	2	True				
ANR	5318280	CallExpression	"r_list_append ( l , ""foo"" )"		5318259	0					
ANR	5318281	Callee	r_list_append		5318259	0					
ANR	5318282	Identifier	r_list_append		5318259	0					
ANR	5318283	ArgumentList	l		5318259	1					
ANR	5318284	Argument	l		5318259	0					
ANR	5318285	Identifier	l		5318259	0					
ANR	5318286	Argument	"""foo"""		5318259	1					
ANR	5318287	PrimaryExpression	"""foo"""		5318259	0					
ANR	5318288	ExpressionStatement	"r_list_append ( l , ""bar"" )"	624:1:11865:11889	5318259	3	True				
ANR	5318289	CallExpression	"r_list_append ( l , ""bar"" )"		5318259	0					
ANR	5318290	Callee	r_list_append		5318259	0					
ANR	5318291	Identifier	r_list_append		5318259	0					
ANR	5318292	ArgumentList	l		5318259	1					
ANR	5318293	Argument	l		5318259	0					
ANR	5318294	Identifier	l		5318259	0					
ANR	5318295	Argument	"""bar"""		5318259	1					
ANR	5318296	PrimaryExpression	"""bar"""		5318259	0					
ANR	5318297	ExpressionStatement	"r_list_append ( l , ""cow"" )"	625:1:11892:11916	5318259	4	True				
ANR	5318298	CallExpression	"r_list_append ( l , ""cow"" )"		5318259	0					
ANR	5318299	Callee	r_list_append		5318259	0					
ANR	5318300	Identifier	r_list_append		5318259	0					
ANR	5318301	ArgumentList	l		5318259	1					
ANR	5318302	Argument	l		5318259	0					
ANR	5318303	Identifier	l		5318259	0					
ANR	5318304	Argument	"""cow"""		5318259	1					
ANR	5318305	PrimaryExpression	"""cow"""		5318259	0					
ANR	5318306	ExpressionStatement	"r_list_prepend ( l , ""HEAD"" )"	626:1:11919:11945	5318259	5	True				
ANR	5318307	CallExpression	"r_list_prepend ( l , ""HEAD"" )"		5318259	0					
ANR	5318308	Callee	r_list_prepend		5318259	0					
ANR	5318309	Identifier	r_list_prepend		5318259	0					
ANR	5318310	ArgumentList	l		5318259	1					
ANR	5318311	Argument	l		5318259	0					
ANR	5318312	Identifier	l		5318259	0					
ANR	5318313	Argument	"""HEAD"""		5318259	1					
ANR	5318314	PrimaryExpression	"""HEAD"""		5318259	0					
ANR	5318315	ExpressionStatement	"r_list_prepend ( l , ""HEAD 00"" )"	627:1:11948:11977	5318259	6	True				
ANR	5318316	CallExpression	"r_list_prepend ( l , ""HEAD 00"" )"		5318259	0					
ANR	5318317	Callee	r_list_prepend		5318259	0					
ANR	5318318	Identifier	r_list_prepend		5318259	0					
ANR	5318319	ArgumentList	l		5318259	1					
ANR	5318320	Argument	l		5318259	0					
ANR	5318321	Identifier	l		5318259	0					
ANR	5318322	Argument	"""HEAD 00"""		5318259	1					
ANR	5318323	PrimaryExpression	"""HEAD 00"""		5318259	0					
ANR	5318324	ExpressionStatement	"it = r_list_append ( l , ""LAST"" )"	628:1:11980:12010	5318259	7	True				
ANR	5318325	AssignmentExpression	"it = r_list_append ( l , ""LAST"" )"		5318259	0		=			
ANR	5318326	Identifier	it		5318259	0					
ANR	5318327	CallExpression	"r_list_append ( l , ""LAST"" )"		5318259	1					
ANR	5318328	Callee	r_list_append		5318259	0					
ANR	5318329	Identifier	r_list_append		5318259	0					
ANR	5318330	ArgumentList	l		5318259	1					
ANR	5318331	Argument	l		5318259	0					
ANR	5318332	Identifier	l		5318259	0					
ANR	5318333	Argument	"""LAST"""		5318259	1					
ANR	5318334	PrimaryExpression	"""LAST"""		5318259	0					
ANR	5318335	CompoundStatement		13:2:233:242	5318259	8					
ANR	5318336	IdentifierDeclStatement	char * str ;	631:2:12018:12027	5318259	0	True				
ANR	5318337	IdentifierDecl	* str		5318259	0					
ANR	5318338	IdentifierDeclType	char *		5318259	0					
ANR	5318339	Identifier	str		5318259	1					
ANR	5318340	Statement	r_list_foreach	632:2:12031:12044	5318259	1	True				
ANR	5318341	Statement	(	632:17:12046:12046	5318259	2	True				
ANR	5318342	Statement	l	632:18:12047:12047	5318259	3	True				
ANR	5318343	Statement	","	632:19:12048:12048	5318259	4	True				
ANR	5318344	Statement	iter	632:21:12050:12053	5318259	5	True				
ANR	5318345	Statement	","	632:25:12054:12054	5318259	6	True				
ANR	5318346	Statement	str	632:27:12056:12058	5318259	7	True				
ANR	5318347	Statement	)	632:30:12059:12059	5318259	8	True				
ANR	5318348	CompoundStatement		14:32:276:276	5318259	9					
ANR	5318349	ExpressionStatement	"printf ( ""-- %s\\n"" , str )"	633:3:12066:12088	5318259	0	True				
ANR	5318350	CallExpression	"printf ( ""-- %s\\n"" , str )"		5318259	0					
ANR	5318351	Callee	printf		5318259	0					
ANR	5318352	Identifier	printf		5318259	0					
ANR	5318353	ArgumentList	"""-- %s\\n"""		5318259	1					
ANR	5318354	Argument	"""-- %s\\n"""		5318259	0					
ANR	5318355	PrimaryExpression	"""-- %s\\n"""		5318259	0					
ANR	5318356	Argument	str		5318259	1					
ANR	5318357	Identifier	str		5318259	0					
ANR	5318358	ExpressionStatement	"printf ( ""--**--\\n"" )"	635:2:12096:12114	5318259	10	True				
ANR	5318359	CallExpression	"printf ( ""--**--\\n"" )"		5318259	0					
ANR	5318360	Callee	printf		5318259	0					
ANR	5318361	Identifier	printf		5318259	0					
ANR	5318362	ArgumentList	"""--**--\\n"""		5318259	1					
ANR	5318363	Argument	"""--**--\\n"""		5318259	0					
ANR	5318364	PrimaryExpression	"""--**--\\n"""		5318259	0					
ANR	5318365	Statement	r_list_foreach_prev	636:2:12118:12136	5318259	11	True				
ANR	5318366	Statement	(	636:22:12138:12138	5318259	12	True				
ANR	5318367	Statement	l	636:23:12139:12139	5318259	13	True				
ANR	5318368	Statement	","	636:24:12140:12140	5318259	14	True				
ANR	5318369	Statement	iter	636:26:12142:12145	5318259	15	True				
ANR	5318370	Statement	","	636:30:12146:12146	5318259	16	True				
ANR	5318371	Statement	str	636:32:12148:12150	5318259	17	True				
ANR	5318372	Statement	)	636:35:12151:12151	5318259	18	True				
ANR	5318373	CompoundStatement		18:37:368:368	5318259	19					
ANR	5318374	ExpressionStatement	"printf ( ""-- %s\\n"" , str )"	637:3:12158:12180	5318259	0	True				
ANR	5318375	CallExpression	"printf ( ""-- %s\\n"" , str )"		5318259	0					
ANR	5318376	Callee	printf		5318259	0					
ANR	5318377	Identifier	printf		5318259	0					
ANR	5318378	ArgumentList	"""-- %s\\n"""		5318259	1					
ANR	5318379	Argument	"""-- %s\\n"""		5318259	0					
ANR	5318380	PrimaryExpression	"""-- %s\\n"""		5318259	0					
ANR	5318381	Argument	str		5318259	1					
ANR	5318382	Identifier	str		5318259	0					
ANR	5318383	ExpressionStatement	iter = r_list_iterator ( l )	641:1:12191:12217	5318259	9	True				
ANR	5318384	AssignmentExpression	iter = r_list_iterator ( l )		5318259	0		=			
ANR	5318385	Identifier	iter		5318259	0					
ANR	5318386	CallExpression	r_list_iterator ( l )		5318259	1					
ANR	5318387	Callee	r_list_iterator		5318259	0					
ANR	5318388	Identifier	r_list_iterator		5318259	0					
ANR	5318389	ArgumentList	l		5318259	1					
ANR	5318390	Argument	l		5318259	0					
ANR	5318391	Identifier	l		5318259	0					
ANR	5318392	WhileStatement	while ( r_list_iter_next ( iter ) )		5318259	10					
ANR	5318393	Condition	r_list_iter_next ( iter )	642:8:12227:12249	5318259	0	True				
ANR	5318394	CallExpression	r_list_iter_next ( iter )		5318259	0					
ANR	5318395	Callee	r_list_iter_next		5318259	0					
ANR	5318396	Identifier	r_list_iter_next		5318259	0					
ANR	5318397	ArgumentList	iter		5318259	1					
ANR	5318398	Argument	iter		5318259	0					
ANR	5318399	Identifier	iter		5318259	0					
ANR	5318400	CompoundStatement		25:2:471:511	5318259	1					
ANR	5318401	IdentifierDeclStatement	const char * str = r_list_iter_get ( iter ) ;	643:2:12256:12296	5318259	0	True				
ANR	5318402	IdentifierDecl	* str = r_list_iter_get ( iter )		5318259	0					
ANR	5318403	IdentifierDeclType	const char *		5318259	0					
ANR	5318404	Identifier	str		5318259	1					
ANR	5318405	AssignmentExpression	* str = r_list_iter_get ( iter )		5318259	2		=			
ANR	5318406	Identifier	str		5318259	0					
ANR	5318407	CallExpression	r_list_iter_get ( iter )		5318259	1					
ANR	5318408	Callee	r_list_iter_get		5318259	0					
ANR	5318409	Identifier	r_list_iter_get		5318259	0					
ANR	5318410	ArgumentList	iter		5318259	1					
ANR	5318411	Argument	iter		5318259	0					
ANR	5318412	Identifier	iter		5318259	0					
ANR	5318413	ExpressionStatement	"printf ( ""-> %s\\n"" , str )"	644:2:12300:12323	5318259	1	True				
ANR	5318414	CallExpression	"printf ( ""-> %s\\n"" , str )"		5318259	0					
ANR	5318415	Callee	printf		5318259	0					
ANR	5318416	Identifier	printf		5318259	0					
ANR	5318417	ArgumentList	"""-> %s\\n"""		5318259	1					
ANR	5318418	Argument	"""-> %s\\n"""		5318259	0					
ANR	5318419	PrimaryExpression	"""-> %s\\n"""		5318259	0					
ANR	5318420	Argument	str		5318259	1					
ANR	5318421	Identifier	str		5318259	0					
ANR	5318422	ExpressionStatement	"eprintf ( ""--sort--\\n"" )"	646:1:12329:12351	5318259	11	True				
ANR	5318423	CallExpression	"eprintf ( ""--sort--\\n"" )"		5318259	0					
ANR	5318424	Callee	eprintf		5318259	0					
ANR	5318425	Identifier	eprintf		5318259	0					
ANR	5318426	ArgumentList	"""--sort--\\n"""		5318259	1					
ANR	5318427	Argument	"""--sort--\\n"""		5318259	0					
ANR	5318428	PrimaryExpression	"""--sort--\\n"""		5318259	0					
ANR	5318429	ExpressionStatement	"r_list_sort ( l , ( RListComparator ) strcmp )"	647:1:12354:12394	5318259	12	True				
ANR	5318430	CallExpression	"r_list_sort ( l , ( RListComparator ) strcmp )"		5318259	0					
ANR	5318431	Callee	r_list_sort		5318259	0					
ANR	5318432	Identifier	r_list_sort		5318259	0					
ANR	5318433	ArgumentList	l		5318259	1					
ANR	5318434	Argument	l		5318259	0					
ANR	5318435	Identifier	l		5318259	0					
ANR	5318436	Argument	( RListComparator ) strcmp		5318259	1					
ANR	5318437	CastExpression	( RListComparator ) strcmp		5318259	0					
ANR	5318438	CastTarget	RListComparator		5318259	0					
ANR	5318439	Identifier	strcmp		5318259	1					
ANR	5318440	ExpressionStatement	iter = r_list_iterator ( l )	648:1:12397:12423	5318259	13	True				
ANR	5318441	AssignmentExpression	iter = r_list_iterator ( l )		5318259	0		=			
ANR	5318442	Identifier	iter		5318259	0					
ANR	5318443	CallExpression	r_list_iterator ( l )		5318259	1					
ANR	5318444	Callee	r_list_iterator		5318259	0					
ANR	5318445	Identifier	r_list_iterator		5318259	0					
ANR	5318446	ArgumentList	l		5318259	1					
ANR	5318447	Argument	l		5318259	0					
ANR	5318448	Identifier	l		5318259	0					
ANR	5318449	WhileStatement	while ( r_list_iter_next ( iter ) )		5318259	14					
ANR	5318450	Condition	r_list_iter_next ( iter )	649:8:12433:12455	5318259	0	True				
ANR	5318451	CallExpression	r_list_iter_next ( iter )		5318259	0					
ANR	5318452	Callee	r_list_iter_next		5318259	0					
ANR	5318453	Identifier	r_list_iter_next		5318259	0					
ANR	5318454	ArgumentList	iter		5318259	1					
ANR	5318455	Argument	iter		5318259	0					
ANR	5318456	Identifier	iter		5318259	0					
ANR	5318457	CompoundStatement		32:2:677:717	5318259	1					
ANR	5318458	IdentifierDeclStatement	const char * str = r_list_iter_get ( iter ) ;	650:2:12462:12502	5318259	0	True				
ANR	5318459	IdentifierDecl	* str = r_list_iter_get ( iter )		5318259	0					
ANR	5318460	IdentifierDeclType	const char *		5318259	0					
ANR	5318461	Identifier	str		5318259	1					
ANR	5318462	AssignmentExpression	* str = r_list_iter_get ( iter )		5318259	2		=			
ANR	5318463	Identifier	str		5318259	0					
ANR	5318464	CallExpression	r_list_iter_get ( iter )		5318259	1					
ANR	5318465	Callee	r_list_iter_get		5318259	0					
ANR	5318466	Identifier	r_list_iter_get		5318259	0					
ANR	5318467	ArgumentList	iter		5318259	1					
ANR	5318468	Argument	iter		5318259	0					
ANR	5318469	Identifier	iter		5318259	0					
ANR	5318470	ExpressionStatement	"printf ( ""-> %s\\n"" , str )"	651:2:12506:12529	5318259	1	True				
ANR	5318471	CallExpression	"printf ( ""-> %s\\n"" , str )"		5318259	0					
ANR	5318472	Callee	printf		5318259	0					
ANR	5318473	Identifier	printf		5318259	0					
ANR	5318474	ArgumentList	"""-> %s\\n"""		5318259	1					
ANR	5318475	Argument	"""-> %s\\n"""		5318259	0					
ANR	5318476	PrimaryExpression	"""-> %s\\n"""		5318259	0					
ANR	5318477	Argument	str		5318259	1					
ANR	5318478	Identifier	str		5318259	0					
ANR	5318479	ExpressionStatement	"r_list_delete ( l , it )"	654:1:12536:12557	5318259	15	True				
ANR	5318480	CallExpression	"r_list_delete ( l , it )"		5318259	0					
ANR	5318481	Callee	r_list_delete		5318259	0					
ANR	5318482	Identifier	r_list_delete		5318259	0					
ANR	5318483	ArgumentList	l		5318259	1					
ANR	5318484	Argument	l		5318259	0					
ANR	5318485	Identifier	l		5318259	0					
ANR	5318486	Argument	it		5318259	1					
ANR	5318487	Identifier	it		5318259	0					
ANR	5318488	IdentifierDeclStatement	"char * foo = ( char * ) r_list_get_n ( l , 2 ) ;"	656:1:12561:12600	5318259	16	True				
ANR	5318489	IdentifierDecl	"* foo = ( char * ) r_list_get_n ( l , 2 )"		5318259	0					
ANR	5318490	IdentifierDeclType	char *		5318259	0					
ANR	5318491	Identifier	foo		5318259	1					
ANR	5318492	AssignmentExpression	"* foo = ( char * ) r_list_get_n ( l , 2 )"		5318259	2		=			
ANR	5318493	Identifier	foo		5318259	0					
ANR	5318494	CastExpression	"( char * ) r_list_get_n ( l , 2 )"		5318259	1					
ANR	5318495	CastTarget	char *		5318259	0					
ANR	5318496	CallExpression	"r_list_get_n ( l , 2 )"		5318259	1					
ANR	5318497	Callee	r_list_get_n		5318259	0					
ANR	5318498	Identifier	r_list_get_n		5318259	0					
ANR	5318499	ArgumentList	l		5318259	1					
ANR	5318500	Argument	l		5318259	0					
ANR	5318501	Identifier	l		5318259	0					
ANR	5318502	Argument	2		5318259	1					
ANR	5318503	PrimaryExpression	2		5318259	0					
ANR	5318504	ExpressionStatement	"printf ( "" - n=2 => %s\\n"" , foo )"	657:1:12603:12633	5318259	17	True				
ANR	5318505	CallExpression	"printf ( "" - n=2 => %s\\n"" , foo )"		5318259	0					
ANR	5318506	Callee	printf		5318259	0					
ANR	5318507	Identifier	printf		5318259	0					
ANR	5318508	ArgumentList	""" - n=2 => %s\\n"""		5318259	1					
ANR	5318509	Argument	""" - n=2 => %s\\n"""		5318259	0					
ANR	5318510	PrimaryExpression	""" - n=2 => %s\\n"""		5318259	0					
ANR	5318511	Argument	foo		5318259	1					
ANR	5318512	Identifier	foo		5318259	0					
ANR	5318513	ExpressionStatement	iter = r_list_iterator ( l )	658:1:12636:12662	5318259	18	True				
ANR	5318514	AssignmentExpression	iter = r_list_iterator ( l )		5318259	0		=			
ANR	5318515	Identifier	iter		5318259	0					
ANR	5318516	CallExpression	r_list_iterator ( l )		5318259	1					
ANR	5318517	Callee	r_list_iterator		5318259	0					
ANR	5318518	Identifier	r_list_iterator		5318259	0					
ANR	5318519	ArgumentList	l		5318259	1					
ANR	5318520	Argument	l		5318259	0					
ANR	5318521	Identifier	l		5318259	0					
ANR	5318522	WhileStatement	while ( r_list_iter_next ( iter ) )		5318259	19					
ANR	5318523	Condition	r_list_iter_next ( iter )	659:8:12672:12694	5318259	0	True				
ANR	5318524	CallExpression	r_list_iter_next ( iter )		5318259	0					
ANR	5318525	Callee	r_list_iter_next		5318259	0					
ANR	5318526	Identifier	r_list_iter_next		5318259	0					
ANR	5318527	ArgumentList	iter		5318259	1					
ANR	5318528	Argument	iter		5318259	0					
ANR	5318529	Identifier	iter		5318259	0					
ANR	5318530	CompoundStatement		43:2:941:975	5318259	1					
ANR	5318531	IdentifierDeclStatement	RListIter * cur = iter ;	660:2:12701:12722	5318259	0	True				
ANR	5318532	IdentifierDecl	* cur = iter		5318259	0					
ANR	5318533	IdentifierDeclType	RListIter *		5318259	0					
ANR	5318534	Identifier	cur		5318259	1					
ANR	5318535	AssignmentExpression	* cur = iter		5318259	2		=			
ANR	5318536	Identifier	iter		5318259	0					
ANR	5318537	Identifier	iter		5318259	1					
ANR	5318538	IdentifierDeclStatement	char * str = r_list_iter_get ( iter ) ;	661:2:12726:12760	5318259	1	True				
ANR	5318539	IdentifierDecl	* str = r_list_iter_get ( iter )		5318259	0					
ANR	5318540	IdentifierDeclType	char *		5318259	0					
ANR	5318541	Identifier	str		5318259	1					
ANR	5318542	AssignmentExpression	* str = r_list_iter_get ( iter )		5318259	2		=			
ANR	5318543	Identifier	str		5318259	0					
ANR	5318544	CallExpression	r_list_iter_get ( iter )		5318259	1					
ANR	5318545	Callee	r_list_iter_get		5318259	0					
ANR	5318546	Identifier	r_list_iter_get		5318259	0					
ANR	5318547	ArgumentList	iter		5318259	1					
ANR	5318548	Argument	iter		5318259	0					
ANR	5318549	Identifier	iter		5318259	0					
ANR	5318550	IfStatement	"if ( ! strcmp ( str , ""bar"" ) )"		5318259	2					
ANR	5318551	Condition	"! strcmp ( str , ""bar"" )"	662:6:12768:12787	5318259	0	True				
ANR	5318552	UnaryOperationExpression	"! strcmp ( str , ""bar"" )"		5318259	0					
ANR	5318553	UnaryOperator	!		5318259	0					
ANR	5318554	CallExpression	"strcmp ( str , ""bar"" )"		5318259	1					
ANR	5318555	Callee	strcmp		5318259	0					
ANR	5318556	Identifier	strcmp		5318259	0					
ANR	5318557	ArgumentList	str		5318259	1					
ANR	5318558	Argument	str		5318259	0					
ANR	5318559	Identifier	str		5318259	0					
ANR	5318560	Argument	"""bar"""		5318259	1					
ANR	5318561	PrimaryExpression	"""bar"""		5318259	0					
ANR	5318562	ExpressionStatement	"r_list_delete ( l , cur )"	663:3:12793:12815	5318259	1	True				
ANR	5318563	CallExpression	"r_list_delete ( l , cur )"		5318259	0					
ANR	5318564	Callee	r_list_delete		5318259	0					
ANR	5318565	Identifier	r_list_delete		5318259	0					
ANR	5318566	ArgumentList	l		5318259	1					
ANR	5318567	Argument	l		5318259	0					
ANR	5318568	Identifier	l		5318259	0					
ANR	5318569	Argument	cur		5318259	1					
ANR	5318570	Identifier	cur		5318259	0					
ANR	5318571	ExpressionStatement	iter = r_list_iterator ( l )	666:1:12822:12848	5318259	20	True				
ANR	5318572	AssignmentExpression	iter = r_list_iterator ( l )		5318259	0		=			
ANR	5318573	Identifier	iter		5318259	0					
ANR	5318574	CallExpression	r_list_iterator ( l )		5318259	1					
ANR	5318575	Callee	r_list_iterator		5318259	0					
ANR	5318576	Identifier	r_list_iterator		5318259	0					
ANR	5318577	ArgumentList	l		5318259	1					
ANR	5318578	Argument	l		5318259	0					
ANR	5318579	Identifier	l		5318259	0					
ANR	5318580	WhileStatement	while ( r_list_iter_next ( iter ) )		5318259	21					
ANR	5318581	Condition	r_list_iter_next ( iter )	667:8:12858:12880	5318259	0	True				
ANR	5318582	CallExpression	r_list_iter_next ( iter )		5318259	0					
ANR	5318583	Callee	r_list_iter_next		5318259	0					
ANR	5318584	Identifier	r_list_iter_next		5318259	0					
ANR	5318585	ArgumentList	iter		5318259	1					
ANR	5318586	Argument	iter		5318259	0					
ANR	5318587	Identifier	iter		5318259	0					
ANR	5318588	CompoundStatement		50:2:1102:1136	5318259	1					
ANR	5318589	IdentifierDeclStatement	char * str = r_list_iter_get ( iter ) ;	668:2:12887:12921	5318259	0	True				
ANR	5318590	IdentifierDecl	* str = r_list_iter_get ( iter )		5318259	0					
ANR	5318591	IdentifierDeclType	char *		5318259	0					
ANR	5318592	Identifier	str		5318259	1					
ANR	5318593	AssignmentExpression	* str = r_list_iter_get ( iter )		5318259	2		=			
ANR	5318594	Identifier	str		5318259	0					
ANR	5318595	CallExpression	r_list_iter_get ( iter )		5318259	1					
ANR	5318596	Callee	r_list_iter_get		5318259	0					
ANR	5318597	Identifier	r_list_iter_get		5318259	0					
ANR	5318598	ArgumentList	iter		5318259	1					
ANR	5318599	Argument	iter		5318259	0					
ANR	5318600	Identifier	iter		5318259	0					
ANR	5318601	ExpressionStatement	"printf ( "" - %s\\n"" , str )"	670:2:12958:12981	5318259	1	True				
ANR	5318602	CallExpression	"printf ( "" - %s\\n"" , str )"		5318259	0					
ANR	5318603	Callee	printf		5318259	0					
ANR	5318604	Identifier	printf		5318259	0					
ANR	5318605	ArgumentList	""" - %s\\n"""		5318259	1					
ANR	5318606	Argument	""" - %s\\n"""		5318259	0					
ANR	5318607	PrimaryExpression	""" - %s\\n"""		5318259	0					
ANR	5318608	Argument	str		5318259	1					
ANR	5318609	Identifier	str		5318259	0					
ANR	5318610	ExpressionStatement	r_list_free ( l )	673:1:12988:13003	5318259	22	True				
ANR	5318611	CallExpression	r_list_free ( l )		5318259	0					
ANR	5318612	Callee	r_list_free		5318259	0					
ANR	5318613	Identifier	r_list_free		5318259	0					
ANR	5318614	ArgumentList	l		5318259	1					
ANR	5318615	Argument	l		5318259	0					
ANR	5318616	Identifier	l		5318259	0					
ANR	5318617	ExpressionStatement	l = r_list_new ( )	676:1:13028:13045	5318259	23	True				
ANR	5318618	AssignmentExpression	l = r_list_new ( )		5318259	0		=			
ANR	5318619	Identifier	l		5318259	0					
ANR	5318620	CallExpression	r_list_new ( )		5318259	1					
ANR	5318621	Callee	r_list_new		5318259	0					
ANR	5318622	Identifier	r_list_new		5318259	0					
ANR	5318623	ArgumentList			5318259	1					
ANR	5318624	ExpressionStatement	l -> free = free	677:1:13048:13062	5318259	24	True				
ANR	5318625	AssignmentExpression	l -> free = free		5318259	0		=			
ANR	5318626	PtrMemberAccess	l -> free		5318259	0					
ANR	5318627	Identifier	l		5318259	0					
ANR	5318628	Identifier	free		5318259	1					
ANR	5318629	Identifier	free		5318259	1					
ANR	5318630	ExpressionStatement	"r_list_append ( l , strdup ( ""one"" ) )"	679:1:13066:13099	5318259	25	True				
ANR	5318631	CallExpression	"r_list_append ( l , strdup ( ""one"" ) )"		5318259	0					
ANR	5318632	Callee	r_list_append		5318259	0					
ANR	5318633	Identifier	r_list_append		5318259	0					
ANR	5318634	ArgumentList	l		5318259	1					
ANR	5318635	Argument	l		5318259	0					
ANR	5318636	Identifier	l		5318259	0					
ANR	5318637	Argument	"strdup ( ""one"" )"		5318259	1					
ANR	5318638	CallExpression	"strdup ( ""one"" )"		5318259	0					
ANR	5318639	Callee	strdup		5318259	0					
ANR	5318640	Identifier	strdup		5318259	0					
ANR	5318641	ArgumentList	"""one"""		5318259	1					
ANR	5318642	Argument	"""one"""		5318259	0					
ANR	5318643	PrimaryExpression	"""one"""		5318259	0					
ANR	5318644	ExpressionStatement	"r_list_append ( l , strdup ( ""two"" ) )"	680:1:13102:13135	5318259	26	True				
ANR	5318645	CallExpression	"r_list_append ( l , strdup ( ""two"" ) )"		5318259	0					
ANR	5318646	Callee	r_list_append		5318259	0					
ANR	5318647	Identifier	r_list_append		5318259	0					
ANR	5318648	ArgumentList	l		5318259	1					
ANR	5318649	Argument	l		5318259	0					
ANR	5318650	Identifier	l		5318259	0					
ANR	5318651	Argument	"strdup ( ""two"" )"		5318259	1					
ANR	5318652	CallExpression	"strdup ( ""two"" )"		5318259	0					
ANR	5318653	Callee	strdup		5318259	0					
ANR	5318654	Identifier	strdup		5318259	0					
ANR	5318655	ArgumentList	"""two"""		5318259	1					
ANR	5318656	Argument	"""two"""		5318259	0					
ANR	5318657	PrimaryExpression	"""two"""		5318259	0					
ANR	5318658	ExpressionStatement	"r_list_append ( l , strdup ( ""tri"" ) )"	681:1:13138:13171	5318259	27	True				
ANR	5318659	CallExpression	"r_list_append ( l , strdup ( ""tri"" ) )"		5318259	0					
ANR	5318660	Callee	r_list_append		5318259	0					
ANR	5318661	Identifier	r_list_append		5318259	0					
ANR	5318662	ArgumentList	l		5318259	1					
ANR	5318663	Argument	l		5318259	0					
ANR	5318664	Identifier	l		5318259	0					
ANR	5318665	Argument	"strdup ( ""tri"" )"		5318259	1					
ANR	5318666	CallExpression	"strdup ( ""tri"" )"		5318259	0					
ANR	5318667	Callee	strdup		5318259	0					
ANR	5318668	Identifier	strdup		5318259	0					
ANR	5318669	ArgumentList	"""tri"""		5318259	1					
ANR	5318670	Argument	"""tri"""		5318259	0					
ANR	5318671	PrimaryExpression	"""tri"""		5318259	0					
ANR	5318672	ExpressionStatement	"it = r_list_append ( l , strdup ( ""LAST"" ) )"	682:1:13174:13213	5318259	28	True				
ANR	5318673	AssignmentExpression	"it = r_list_append ( l , strdup ( ""LAST"" ) )"		5318259	0		=			
ANR	5318674	Identifier	it		5318259	0					
ANR	5318675	CallExpression	"r_list_append ( l , strdup ( ""LAST"" ) )"		5318259	1					
ANR	5318676	Callee	r_list_append		5318259	0					
ANR	5318677	Identifier	r_list_append		5318259	0					
ANR	5318678	ArgumentList	l		5318259	1					
ANR	5318679	Argument	l		5318259	0					
ANR	5318680	Identifier	l		5318259	0					
ANR	5318681	Argument	"strdup ( ""LAST"" )"		5318259	1					
ANR	5318682	CallExpression	"strdup ( ""LAST"" )"		5318259	0					
ANR	5318683	Callee	strdup		5318259	0					
ANR	5318684	Identifier	strdup		5318259	0					
ANR	5318685	ArgumentList	"""LAST"""		5318259	1					
ANR	5318686	Argument	"""LAST"""		5318259	0					
ANR	5318687	PrimaryExpression	"""LAST"""		5318259	0					
ANR	5318688	ExpressionStatement	"r_list_delete ( l , it )"	684:1:13217:13238	5318259	29	True				
ANR	5318689	CallExpression	"r_list_delete ( l , it )"		5318259	0					
ANR	5318690	Callee	r_list_delete		5318259	0					
ANR	5318691	Identifier	r_list_delete		5318259	0					
ANR	5318692	ArgumentList	l		5318259	1					
ANR	5318693	Argument	l		5318259	0					
ANR	5318694	Identifier	l		5318259	0					
ANR	5318695	Argument	it		5318259	1					
ANR	5318696	Identifier	it		5318259	0					
ANR	5318697	CompoundStatement		69:2:1461:1495	5318259	30					
ANR	5318698	IdentifierDeclStatement	RListIter * i = r_list_iterator ( l ) ;	687:2:13246:13280	5318259	0	True				
ANR	5318699	IdentifierDecl	* i = r_list_iterator ( l )		5318259	0					
ANR	5318700	IdentifierDeclType	RListIter *		5318259	0					
ANR	5318701	Identifier	i		5318259	1					
ANR	5318702	AssignmentExpression	* i = r_list_iterator ( l )		5318259	2		=			
ANR	5318703	Identifier	i		5318259	0					
ANR	5318704	CallExpression	r_list_iterator ( l )		5318259	1					
ANR	5318705	Callee	r_list_iterator		5318259	0					
ANR	5318706	Identifier	r_list_iterator		5318259	0					
ANR	5318707	ArgumentList	l		5318259	1					
ANR	5318708	Argument	l		5318259	0					
ANR	5318709	Identifier	l		5318259	0					
ANR	5318710	ForStatement	for ( ; i ; i = i -> n )		5318259	1					
ANR	5318711	Condition	i	688:9:13291:13291	5318259	0	True				
ANR	5318712	Identifier	i		5318259	0					
ANR	5318713	AssignmentExpression	i = i -> n	688:12:13294:13301	5318259	1	True	=			
ANR	5318714	Identifier	i		5318259	0					
ANR	5318715	PtrMemberAccess	i -> n		5318259	1					
ANR	5318716	Identifier	i		5318259	0					
ANR	5318717	Identifier	n		5318259	1					
ANR	5318718	CompoundStatement		71:3:1524:1543	5318259	2					
ANR	5318719	IdentifierDeclStatement	char * str = i -> data ;	689:3:13309:13328	5318259	0	True				
ANR	5318720	IdentifierDecl	* str = i -> data		5318259	0					
ANR	5318721	IdentifierDeclType	char *		5318259	0					
ANR	5318722	Identifier	str		5318259	1					
ANR	5318723	AssignmentExpression	* str = i -> data		5318259	2		=			
ANR	5318724	Identifier	str		5318259	0					
ANR	5318725	PtrMemberAccess	i -> data		5318259	1					
ANR	5318726	Identifier	i		5318259	0					
ANR	5318727	Identifier	data		5318259	1					
ANR	5318728	ExpressionStatement	"printf ( "" * %s\\n"" , str )"	690:3:13333:13356	5318259	1	True				
ANR	5318729	CallExpression	"printf ( "" * %s\\n"" , str )"		5318259	0					
ANR	5318730	Callee	printf		5318259	0					
ANR	5318731	Identifier	printf		5318259	0					
ANR	5318732	ArgumentList	""" * %s\\n"""		5318259	1					
ANR	5318733	Argument	""" * %s\\n"""		5318259	0					
ANR	5318734	PrimaryExpression	""" * %s\\n"""		5318259	0					
ANR	5318735	Argument	str		5318259	1					
ANR	5318736	Identifier	str		5318259	0					
ANR	5318737	ExpressionStatement	r_list_free ( l )	694:1:13367:13382	5318259	31	True				
ANR	5318738	CallExpression	r_list_free ( l )		5318259	0					
ANR	5318739	Callee	r_list_free		5318259	0					
ANR	5318740	Identifier	r_list_free		5318259	0					
ANR	5318741	ArgumentList	l		5318259	1					
ANR	5318742	Argument	l		5318259	0					
ANR	5318743	Identifier	l		5318259	0					
ANR	5318744	ExpressionStatement	l = r_list_new ( )	696:1:13386:13403	5318259	32	True				
ANR	5318745	AssignmentExpression	l = r_list_new ( )		5318259	0		=			
ANR	5318746	Identifier	l		5318259	0					
ANR	5318747	CallExpression	r_list_new ( )		5318259	1					
ANR	5318748	Callee	r_list_new		5318259	0					
ANR	5318749	Identifier	r_list_new		5318259	0					
ANR	5318750	ArgumentList			5318259	1					
ANR	5318751	ExpressionStatement	l -> free = free	697:1:13406:13420	5318259	33	True				
ANR	5318752	AssignmentExpression	l -> free = free		5318259	0		=			
ANR	5318753	PtrMemberAccess	l -> free		5318259	0					
ANR	5318754	Identifier	l		5318259	0					
ANR	5318755	Identifier	free		5318259	1					
ANR	5318756	Identifier	free		5318259	1					
ANR	5318757	ExpressionStatement	"r_list_append ( l , strdup ( ""one"" ) )"	699:1:13424:13457	5318259	34	True				
ANR	5318758	CallExpression	"r_list_append ( l , strdup ( ""one"" ) )"		5318259	0					
ANR	5318759	Callee	r_list_append		5318259	0					
ANR	5318760	Identifier	r_list_append		5318259	0					
ANR	5318761	ArgumentList	l		5318259	1					
ANR	5318762	Argument	l		5318259	0					
ANR	5318763	Identifier	l		5318259	0					
ANR	5318764	Argument	"strdup ( ""one"" )"		5318259	1					
ANR	5318765	CallExpression	"strdup ( ""one"" )"		5318259	0					
ANR	5318766	Callee	strdup		5318259	0					
ANR	5318767	Identifier	strdup		5318259	0					
ANR	5318768	ArgumentList	"""one"""		5318259	1					
ANR	5318769	Argument	"""one"""		5318259	0					
ANR	5318770	PrimaryExpression	"""one"""		5318259	0					
ANR	5318771	ExpressionStatement	"r_list_append ( l , strdup ( ""two"" ) )"	700:1:13460:13493	5318259	35	True				
ANR	5318772	CallExpression	"r_list_append ( l , strdup ( ""two"" ) )"		5318259	0					
ANR	5318773	Callee	r_list_append		5318259	0					
ANR	5318774	Identifier	r_list_append		5318259	0					
ANR	5318775	ArgumentList	l		5318259	1					
ANR	5318776	Argument	l		5318259	0					
ANR	5318777	Identifier	l		5318259	0					
ANR	5318778	Argument	"strdup ( ""two"" )"		5318259	1					
ANR	5318779	CallExpression	"strdup ( ""two"" )"		5318259	0					
ANR	5318780	Callee	strdup		5318259	0					
ANR	5318781	Identifier	strdup		5318259	0					
ANR	5318782	ArgumentList	"""two"""		5318259	1					
ANR	5318783	Argument	"""two"""		5318259	0					
ANR	5318784	PrimaryExpression	"""two"""		5318259	0					
ANR	5318785	ExpressionStatement	"r_list_append ( l , strdup ( ""tri"" ) )"	701:1:13496:13529	5318259	36	True				
ANR	5318786	CallExpression	"r_list_append ( l , strdup ( ""tri"" ) )"		5318259	0					
ANR	5318787	Callee	r_list_append		5318259	0					
ANR	5318788	Identifier	r_list_append		5318259	0					
ANR	5318789	ArgumentList	l		5318259	1					
ANR	5318790	Argument	l		5318259	0					
ANR	5318791	Identifier	l		5318259	0					
ANR	5318792	Argument	"strdup ( ""tri"" )"		5318259	1					
ANR	5318793	CallExpression	"strdup ( ""tri"" )"		5318259	0					
ANR	5318794	Callee	strdup		5318259	0					
ANR	5318795	Identifier	strdup		5318259	0					
ANR	5318796	ArgumentList	"""tri"""		5318259	1					
ANR	5318797	Argument	"""tri"""		5318259	0					
ANR	5318798	PrimaryExpression	"""tri"""		5318259	0					
ANR	5318799	CompoundStatement		90:2:1824:1835	5318259	37					
ANR	5318800	IdentifierDeclStatement	char * str ;	704:2:13537:13546	5318259	0	True				
ANR	5318801	IdentifierDecl	* str		5318259	0					
ANR	5318802	IdentifierDeclType	char *		5318259	0					
ANR	5318803	Identifier	str		5318259	1					
ANR	5318804	Statement	r_list_foreach	705:2:13550:13563	5318259	1	True				
ANR	5318805	Statement	(	705:17:13565:13565	5318259	2	True				
ANR	5318806	Statement	l	705:18:13566:13566	5318259	3	True				
ANR	5318807	Statement	","	705:19:13567:13567	5318259	4	True				
ANR	5318808	Statement	it	705:21:13569:13570	5318259	5	True				
ANR	5318809	Statement	","	705:23:13571:13571	5318259	6	True				
ANR	5318810	Statement	str	705:25:13573:13575	5318259	7	True				
ANR	5318811	Statement	)	705:28:13576:13576	5318259	8	True				
ANR	5318812	ExpressionStatement	"printf ( "" - %s\\n"" , str )"	706:3:13581:13604	5318259	9	True				
ANR	5318813	CallExpression	"printf ( "" - %s\\n"" , str )"		5318259	0					
ANR	5318814	Callee	printf		5318259	0					
ANR	5318815	Identifier	printf		5318259	0					
ANR	5318816	ArgumentList	""" - %s\\n"""		5318259	1					
ANR	5318817	Argument	""" - %s\\n"""		5318259	0					
ANR	5318818	PrimaryExpression	""" - %s\\n"""		5318259	0					
ANR	5318819	Argument	str		5318259	1					
ANR	5318820	Identifier	str		5318259	0					
ANR	5318821	IdentifierDeclStatement	RList * list ;	708:2:13609:13620	5318259	10	True				
ANR	5318822	IdentifierDecl	* list		5318259	0					
ANR	5318823	IdentifierDeclType	RList *		5318259	0					
ANR	5318824	Identifier	list		5318259	1					
ANR	5318825	ExpressionStatement	list = r_list_clone ( l )	709:2:13624:13647	5318259	11	True				
ANR	5318826	AssignmentExpression	list = r_list_clone ( l )		5318259	0		=			
ANR	5318827	Identifier	list		5318259	0					
ANR	5318828	CallExpression	r_list_clone ( l )		5318259	1					
ANR	5318829	Callee	r_list_clone		5318259	0					
ANR	5318830	Identifier	r_list_clone		5318259	0					
ANR	5318831	ArgumentList	l		5318259	1					
ANR	5318832	Argument	l		5318259	0					
ANR	5318833	Identifier	l		5318259	0					
ANR	5318834	Statement	r_list_foreach	711:2:13652:13665	5318259	12	True				
ANR	5318835	Statement	(	711:17:13667:13667	5318259	13	True				
ANR	5318836	Statement	list	711:18:13668:13671	5318259	14	True				
ANR	5318837	Statement	","	711:22:13672:13672	5318259	15	True				
ANR	5318838	Statement	it	711:24:13674:13675	5318259	16	True				
ANR	5318839	Statement	","	711:26:13676:13676	5318259	17	True				
ANR	5318840	Statement	str	711:28:13678:13680	5318259	18	True				
ANR	5318841	Statement	)	711:31:13681:13681	5318259	19	True				
ANR	5318842	ExpressionStatement	"printf ( "" - %s\\n"" , str )"	712:3:13686:13709	5318259	20	True				
ANR	5318843	CallExpression	"printf ( "" - %s\\n"" , str )"		5318259	0					
ANR	5318844	Callee	printf		5318259	0					
ANR	5318845	Identifier	printf		5318259	0					
ANR	5318846	ArgumentList	""" - %s\\n"""		5318259	1					
ANR	5318847	Argument	""" - %s\\n"""		5318259	0					
ANR	5318848	PrimaryExpression	""" - %s\\n"""		5318259	0					
ANR	5318849	Argument	str		5318259	1					
ANR	5318850	Identifier	str		5318259	0					
ANR	5318851	ExpressionStatement	r_list_reverse ( l )	714:2:13714:13732	5318259	21	True				
ANR	5318852	CallExpression	r_list_reverse ( l )		5318259	0					
ANR	5318853	Callee	r_list_reverse		5318259	0					
ANR	5318854	Identifier	r_list_reverse		5318259	0					
ANR	5318855	ArgumentList	l		5318259	1					
ANR	5318856	Argument	l		5318259	0					
ANR	5318857	Identifier	l		5318259	0					
ANR	5318858	Statement	r_list_foreach	716:2:13737:13750	5318259	22	True				
ANR	5318859	Statement	(	716:17:13752:13752	5318259	23	True				
ANR	5318860	Statement	l	716:18:13753:13753	5318259	24	True				
ANR	5318861	Statement	","	716:19:13754:13754	5318259	25	True				
ANR	5318862	Statement	it	716:21:13756:13757	5318259	26	True				
ANR	5318863	Statement	","	716:23:13758:13758	5318259	27	True				
ANR	5318864	Statement	str	716:25:13760:13762	5318259	28	True				
ANR	5318865	Statement	)	716:28:13763:13763	5318259	29	True				
ANR	5318866	ExpressionStatement	"printf ( "" * %s\\n"" , str )"	717:3:13768:13791	5318259	30	True				
ANR	5318867	CallExpression	"printf ( "" * %s\\n"" , str )"		5318259	0					
ANR	5318868	Callee	printf		5318259	0					
ANR	5318869	Identifier	printf		5318259	0					
ANR	5318870	ArgumentList	""" * %s\\n"""		5318259	1					
ANR	5318871	Argument	""" * %s\\n"""		5318259	0					
ANR	5318872	PrimaryExpression	""" * %s\\n"""		5318259	0					
ANR	5318873	Argument	str		5318259	1					
ANR	5318874	Identifier	str		5318259	0					
ANR	5318875	ExpressionStatement	r_list_free ( l )	720:1:13798:13813	5318259	38	True				
ANR	5318876	CallExpression	r_list_free ( l )		5318259	0					
ANR	5318877	Callee	r_list_free		5318259	0					
ANR	5318878	Identifier	r_list_free		5318259	0					
ANR	5318879	ArgumentList	l		5318259	1					
ANR	5318880	Argument	l		5318259	0					
ANR	5318881	Identifier	l		5318259	0					
ANR	5318882	ReturnStatement	return 0 ;	722:1:13817:13825	5318259	39	True				
ANR	5318883	PrimaryExpression	0		5318259	0					
ANR	5318884	ReturnType	int		5318259	1					
ANR	5318885	Identifier	main		5318259	2					
ANR	5318886	ParameterList			5318259	3					
ANR	5318887	CFGEntryNode	ENTRY		5318259		True				
ANR	5318888	CFGExitNode	EXIT		5318259		True				
ANR	5318889	Symbol	strcmp		5318259						
ANR	5318890	Symbol	cur		5318259						
ANR	5318891	Symbol	r_list_iter_next		5318259						
ANR	5318892	Symbol	foo		5318259						
ANR	5318893	Symbol	iter		5318259						
ANR	5318894	Symbol	r_list_iterator		5318259						
ANR	5318895	Symbol	r_list_iter_get		5318259						
ANR	5318896	Symbol	r_list_get_n		5318259						
ANR	5318897	Symbol	i		5318259						
ANR	5318898	Symbol	r_list_clone		5318259						
ANR	5318899	Symbol	it		5318259						
ANR	5318900	Symbol	l		5318259						
ANR	5318901	Symbol	list		5318259						
ANR	5318902	Symbol	i -> data		5318259						
ANR	5318903	Symbol	str		5318259						
ANR	5318904	Symbol	i -> n		5318259						
ANR	5318905	Symbol	* i		5318259						
ANR	5318906	Symbol	r_list_append		5318259						
ANR	5318907	Symbol	* l		5318259						
ANR	5318908	Symbol	l -> free		5318259						
ANR	5318909	Symbol	strdup		5318259						
ANR	5318910	Symbol	free		5318259						
ANR	5318911	Symbol	r_list_new		5318259						
