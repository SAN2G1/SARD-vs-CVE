command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1004813	File	data/converged/CVE-2019-16718~_radare2/cmd_search.c								
ANR	1004814	DeclStmt									
ANR	1004815	Decl							int	"int ( void * data , const char * input )"	cmd_search
ANR	1004816	DeclStmt									
ANR	1004817	Decl							const char	const char * [ ]	help_msg_slash_m
ANR	1004818	DeclStmt									
ANR	1004819	Decl							const char	const char * [ ]	help_msg_slash
ANR	1004820	DeclStmt									
ANR	1004821	Decl							const char	const char * [ ]	help_msg_slash_a
ANR	1004822	DeclStmt									
ANR	1004823	Decl							const char	const char * [ ]	help_msg_slash_c
ANR	1004824	DeclStmt									
ANR	1004825	Decl							const char	const char * [ ]	help_msg_slash_r
ANR	1004826	DeclStmt									
ANR	1004827	Decl							const char	const char * [ ]	help_msg_slash_R
ANR	1004828	DeclStmt									
ANR	1004829	Decl							const char	const char * [ ]	help_msg_slash_Rk
ANR	1004830	DeclStmt									
ANR	1004831	Decl							const char	const char * [ ]	help_msg_slash_x
ANR	1004832	DeclStmt									
ANR	1004833	Decl							int	int	preludecnt
ANR	1004834	DeclStmt									
ANR	1004835	Decl							int	int	searchflags
ANR	1004836	DeclStmt									
ANR	1004837	Decl							int	int	searchshow
ANR	1004838	DeclStmt									
ANR	1004839	Decl							bool	bool	json
ANR	1004840	DeclStmt									
ANR	1004841	Decl							const char	const char *	cmdhit
ANR	1004842	DeclStmt									
ANR	1004843	Decl							const char	const char *	searchprefix
ANR	1004844	ClassDef	search_parameters	148:0:6846:7020							
ANR	1004845	DeclStmt									
ANR	1004846	Decl							RCore	RCore *	core
ANR	1004847	DeclStmt									
ANR	1004848	Decl							RList	RList *	boundaries
ANR	1004849	DeclStmt									
ANR	1004850	Decl							const char	const char *	mode
ANR	1004851	DeclStmt									
ANR	1004852	Decl							const char	const char *	cmd_hit
ANR	1004853	DeclStmt									
ANR	1004854	Decl							bool	bool	inverse
ANR	1004855	DeclStmt									
ANR	1004856	Decl							bool	bool	crypto_search
ANR	1004857	DeclStmt									
ANR	1004858	Decl							bool	bool	aes_search
ANR	1004859	DeclStmt									
ANR	1004860	Decl							bool	bool	rsa_search
ANR	1004861	ClassDef	endlist_pair	159:0:7024:7082							
ANR	1004862	DeclStmt									
ANR	1004863	Decl							int	int	instr_offset
ANR	1004864	DeclStmt									
ANR	1004865	Decl							int	int	delay_size
ANR	1004866	Function	cmd_search_init	164:0:7086:7492							
ANR	1004867	FunctionDef	cmd_search_init (RCore * core)		1004866	0					
ANR	1004868	CompoundStatement		164:41:7127:7492	1004866	0					
ANR	1004869	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	165:1:7130:7158	1004866	0	True				
ANR	1004870	Statement	(	165:31:7160:7160	1004866	1	True				
ANR	1004871	Statement	core	165:32:7161:7164	1004866	2	True				
ANR	1004872	Statement	","	165:36:7165:7165	1004866	3	True				
ANR	1004873	Statement	/	165:38:7167:7167	1004866	4	True				
ANR	1004874	Statement	","	165:39:7168:7168	1004866	5	True				
ANR	1004875	Statement	slash	165:41:7170:7174	1004866	6	True				
ANR	1004876	Statement	)	165:46:7175:7175	1004866	7	True				
ANR	1004877	ExpressionStatement		165:47:7176:7176	1004866	8	True				
ANR	1004878	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	166:1:7179:7207	1004866	9	True				
ANR	1004879	Statement	(	166:31:7209:7209	1004866	10	True				
ANR	1004880	Statement	core	166:32:7210:7213	1004866	11	True				
ANR	1004881	Statement	","	166:36:7214:7214	1004866	12	True				
ANR	1004882	Statement	/	166:38:7216:7216	1004866	13	True				
ANR	1004883	Statement	a	166:39:7217:7217	1004866	14	True				
ANR	1004884	Statement	","	166:40:7218:7218	1004866	15	True				
ANR	1004885	Statement	slash_a	166:42:7220:7226	1004866	16	True				
ANR	1004886	Statement	)	166:49:7227:7227	1004866	17	True				
ANR	1004887	ExpressionStatement		166:50:7228:7228	1004866	18	True				
ANR	1004888	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	167:1:7231:7259	1004866	19	True				
ANR	1004889	Statement	(	167:31:7261:7261	1004866	20	True				
ANR	1004890	Statement	core	167:32:7262:7265	1004866	21	True				
ANR	1004891	Statement	","	167:36:7266:7266	1004866	22	True				
ANR	1004892	Statement	/	167:38:7268:7268	1004866	23	True				
ANR	1004893	Statement	c	167:39:7269:7269	1004866	24	True				
ANR	1004894	Statement	","	167:40:7270:7270	1004866	25	True				
ANR	1004895	Statement	slash_c	167:42:7272:7278	1004866	26	True				
ANR	1004896	Statement	)	167:49:7279:7279	1004866	27	True				
ANR	1004897	ExpressionStatement		167:50:7280:7280	1004866	28	True				
ANR	1004898	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	168:1:7283:7311	1004866	29	True				
ANR	1004899	Statement	(	168:31:7313:7313	1004866	30	True				
ANR	1004900	Statement	core	168:32:7314:7317	1004866	31	True				
ANR	1004901	Statement	","	168:36:7318:7318	1004866	32	True				
ANR	1004902	Statement	/	168:38:7320:7320	1004866	33	True				
ANR	1004903	Statement	r	168:39:7321:7321	1004866	34	True				
ANR	1004904	Statement	","	168:40:7322:7322	1004866	35	True				
ANR	1004905	Statement	slash_r	168:42:7324:7330	1004866	36	True				
ANR	1004906	Statement	)	168:49:7331:7331	1004866	37	True				
ANR	1004907	ExpressionStatement		168:50:7332:7332	1004866	38	True				
ANR	1004908	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	169:1:7335:7363	1004866	39	True				
ANR	1004909	Statement	(	169:31:7365:7365	1004866	40	True				
ANR	1004910	Statement	core	169:32:7366:7369	1004866	41	True				
ANR	1004911	Statement	","	169:36:7370:7370	1004866	42	True				
ANR	1004912	Statement	/	169:38:7372:7372	1004866	43	True				
ANR	1004913	Statement	R	169:39:7373:7373	1004866	44	True				
ANR	1004914	Statement	","	169:40:7374:7374	1004866	45	True				
ANR	1004915	Statement	slash_R	169:42:7376:7382	1004866	46	True				
ANR	1004916	Statement	)	169:49:7383:7383	1004866	47	True				
ANR	1004917	ExpressionStatement		169:50:7384:7384	1004866	48	True				
ANR	1004918	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	170:1:7387:7415	1004866	49	True				
ANR	1004919	Statement	(	170:31:7417:7417	1004866	50	True				
ANR	1004920	Statement	core	170:32:7418:7421	1004866	51	True				
ANR	1004921	Statement	","	170:36:7422:7422	1004866	52	True				
ANR	1004922	Statement	/	170:38:7424:7424	1004866	53	True				
ANR	1004923	Statement	Rk	170:39:7425:7426	1004866	54	True				
ANR	1004924	Statement	","	170:41:7427:7427	1004866	55	True				
ANR	1004925	Statement	slash_Rk	170:43:7429:7436	1004866	56	True				
ANR	1004926	Statement	)	170:51:7437:7437	1004866	57	True				
ANR	1004927	ExpressionStatement		170:52:7438:7438	1004866	58	True				
ANR	1004928	Statement	DEFINE_CMD_DESCRIPTOR_SPECIAL	171:1:7441:7469	1004866	59	True				
ANR	1004929	Statement	(	171:31:7471:7471	1004866	60	True				
ANR	1004930	Statement	core	171:32:7472:7475	1004866	61	True				
ANR	1004931	Statement	","	171:36:7476:7476	1004866	62	True				
ANR	1004932	Statement	/	171:38:7478:7478	1004866	63	True				
ANR	1004933	Statement	x	171:39:7479:7479	1004866	64	True				
ANR	1004934	Statement	","	171:40:7480:7480	1004866	65	True				
ANR	1004935	Statement	slash_x	171:42:7482:7488	1004866	66	True				
ANR	1004936	Statement	)	171:49:7489:7489	1004866	67	True				
ANR	1004937	ExpressionStatement		171:50:7490:7490	1004866	68	True				
ANR	1004938	ReturnType	static void		1004866	1					
ANR	1004939	Identifier	cmd_search_init		1004866	2					
ANR	1004940	ParameterList	RCore * core		1004866	3					
ANR	1004941	Parameter	RCore * core	164:28:7114:7124	1004866	0	True				
ANR	1004942	ParameterType	RCore *		1004866	0					
ANR	1004943	Identifier	core		1004866	1					
ANR	1004944	CFGEntryNode	ENTRY		1004866		True				
ANR	1004945	CFGExitNode	EXIT		1004866		True				
ANR	1004946	Symbol	core		1004866						
ANR	1004947	Function	search_hash	174:0:7495:9290							
ANR	1004948	FunctionDef	"search_hash (RCore * core , const char * hashname , const char * hashstr , ut32 minlen , ut32 maxlen , struct search_parameters * param)"		1004947	0					
ANR	1004949	CompoundStatement		174:138:7633:9290	1004947	0					
ANR	1004950	IdentifierDeclStatement	RIOMap * map ;	175:1:7636:7647	1004947	0	True				
ANR	1004951	IdentifierDecl	* map		1004947	0					
ANR	1004952	IdentifierDeclType	RIOMap *		1004947	0					
ANR	1004953	Identifier	map		1004947	1					
ANR	1004954	IdentifierDeclStatement	ut8 * buf ;	176:1:7650:7658	1004947	1	True				
ANR	1004955	IdentifierDecl	* buf		1004947	0					
ANR	1004956	IdentifierDeclType	ut8 *		1004947	0					
ANR	1004957	Identifier	buf		1004947	1					
ANR	1004958	IdentifierDeclStatement	"int i , j ;"	177:1:7661:7669	1004947	2	True				
ANR	1004959	IdentifierDecl	i		1004947	0					
ANR	1004960	IdentifierDeclType	int		1004947	0					
ANR	1004961	Identifier	i		1004947	1					
ANR	1004962	IdentifierDecl	j		1004947	1					
ANR	1004963	IdentifierDeclType	int		1004947	0					
ANR	1004964	Identifier	j		1004947	1					
ANR	1004965	IdentifierDeclStatement	RListIter * iter ;	178:1:7672:7687	1004947	3	True				
ANR	1004966	IdentifierDecl	* iter		1004947	0					
ANR	1004967	IdentifierDeclType	RListIter *		1004947	0					
ANR	1004968	Identifier	iter		1004947	1					
ANR	1004969	IfStatement	if ( ! minlen || minlen == UT32_MAX )		1004947	4					
ANR	1004970	Condition	! minlen || minlen == UT32_MAX	180:5:7695:7723	1004947	0	True				
ANR	1004971	OrExpression	! minlen || minlen == UT32_MAX		1004947	0		||			
ANR	1004972	UnaryOperationExpression	! minlen		1004947	0					
ANR	1004973	UnaryOperator	!		1004947	0					
ANR	1004974	Identifier	minlen		1004947	1					
ANR	1004975	EqualityExpression	minlen == UT32_MAX		1004947	1		==			
ANR	1004976	Identifier	minlen		1004947	0					
ANR	1004977	Identifier	UT32_MAX		1004947	1					
ANR	1004978	CompoundStatement		7:36:92:92	1004947	1					
ANR	1004979	ExpressionStatement	minlen = core -> blocksize	181:2:7730:7754	1004947	0	True				
ANR	1004980	AssignmentExpression	minlen = core -> blocksize		1004947	0		=			
ANR	1004981	Identifier	minlen		1004947	0					
ANR	1004982	PtrMemberAccess	core -> blocksize		1004947	1					
ANR	1004983	Identifier	core		1004947	0					
ANR	1004984	Identifier	blocksize		1004947	1					
ANR	1004985	IfStatement	if ( ! maxlen || maxlen == UT32_MAX )		1004947	5					
ANR	1004986	Condition	! maxlen || maxlen == UT32_MAX	183:5:7764:7792	1004947	0	True				
ANR	1004987	OrExpression	! maxlen || maxlen == UT32_MAX		1004947	0		||			
ANR	1004988	UnaryOperationExpression	! maxlen		1004947	0					
ANR	1004989	UnaryOperator	!		1004947	0					
ANR	1004990	Identifier	maxlen		1004947	1					
ANR	1004991	EqualityExpression	maxlen == UT32_MAX		1004947	1		==			
ANR	1004992	Identifier	maxlen		1004947	0					
ANR	1004993	Identifier	UT32_MAX		1004947	1					
ANR	1004994	CompoundStatement		10:36:161:161	1004947	1					
ANR	1004995	ExpressionStatement	maxlen = minlen	184:2:7799:7814	1004947	0	True				
ANR	1004996	AssignmentExpression	maxlen = minlen		1004947	0		=			
ANR	1004997	Identifier	maxlen		1004947	0					
ANR	1004998	Identifier	minlen		1004947	1					
ANR	1004999	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	187:1:7821:7851	1004947	6	True				
ANR	1005000	CallExpression	"r_cons_break_push ( NULL , NULL )"		1004947	0					
ANR	1005001	Callee	r_cons_break_push		1004947	0					
ANR	1005002	Identifier	r_cons_break_push		1004947	0					
ANR	1005003	ArgumentList	NULL		1004947	1					
ANR	1005004	Argument	NULL		1004947	0					
ANR	1005005	Identifier	NULL		1004947	0					
ANR	1005006	Argument	NULL		1004947	1					
ANR	1005007	Identifier	NULL		1004947	0					
ANR	1005008	ForStatement	for ( j = minlen ; j <= maxlen ; j ++ )		1004947	7					
ANR	1005009	ForInit	j = minlen ;	188:6:7859:7869	1004947	0	True				
ANR	1005010	AssignmentExpression	j = minlen		1004947	0		=			
ANR	1005011	Identifier	j		1004947	0					
ANR	1005012	Identifier	minlen		1004947	1					
ANR	1005013	Condition	j <= maxlen	188:18:7871:7881	1004947	1	True				
ANR	1005014	RelationalExpression	j <= maxlen		1004947	0		<=			
ANR	1005015	Identifier	j		1004947	0					
ANR	1005016	Identifier	maxlen		1004947	1					
ANR	1005017	PostIncDecOperationExpression	j ++	188:31:7884:7886	1004947	2	True				
ANR	1005018	Identifier	j		1004947	0					
ANR	1005019	IncDec	++		1004947	1					
ANR	1005020	CompoundStatement		16:2:259:271	1004947	3					
ANR	1005021	IdentifierDeclStatement	ut32 len = j ;	189:2:7893:7905	1004947	0	True				
ANR	1005022	IdentifierDecl	len = j		1004947	0					
ANR	1005023	IdentifierDeclType	ut32		1004947	0					
ANR	1005024	Identifier	len		1004947	1					
ANR	1005025	AssignmentExpression	len = j		1004947	2		=			
ANR	1005026	Identifier	j		1004947	0					
ANR	1005027	Identifier	j		1004947	1					
ANR	1005028	ExpressionStatement	"eprintf ( ""Searching %s for %d byte length.\\n"" , hashname , j )"	190:2:7909:7968	1004947	1	True				
ANR	1005029	CallExpression	"eprintf ( ""Searching %s for %d byte length.\\n"" , hashname , j )"		1004947	0					
ANR	1005030	Callee	eprintf		1004947	0					
ANR	1005031	Identifier	eprintf		1004947	0					
ANR	1005032	ArgumentList	"""Searching %s for %d byte length.\\n"""		1004947	1					
ANR	1005033	Argument	"""Searching %s for %d byte length.\\n"""		1004947	0					
ANR	1005034	PrimaryExpression	"""Searching %s for %d byte length.\\n"""		1004947	0					
ANR	1005035	Argument	hashname		1004947	1					
ANR	1005036	Identifier	hashname		1004947	0					
ANR	1005037	Argument	j		1004947	2					
ANR	1005038	Identifier	j		1004947	0					
ANR	1005039	Statement	r_list_foreach	191:2:7972:7985	1004947	2	True				
ANR	1005040	Statement	(	191:17:7987:7987	1004947	3	True				
ANR	1005041	Statement	param	191:18:7988:7992	1004947	4	True				
ANR	1005042	Statement	->	191:23:7993:7994	1004947	5	True				
ANR	1005043	Statement	boundaries	191:25:7995:8004	1004947	6	True				
ANR	1005044	Statement	","	191:35:8005:8005	1004947	7	True				
ANR	1005045	Statement	iter	191:37:8007:8010	1004947	8	True				
ANR	1005046	Statement	","	191:41:8011:8011	1004947	9	True				
ANR	1005047	Statement	map	191:43:8013:8015	1004947	10	True				
ANR	1005048	Statement	)	191:46:8016:8016	1004947	11	True				
ANR	1005049	CompoundStatement		35:3:843:879	1004947	12					
ANR	1005050	IfStatement	if ( r_cons_is_breaked ( ) )		1004947	0					
ANR	1005051	Condition	r_cons_is_breaked ( )	192:7:8027:8046	1004947	0	True				
ANR	1005052	CallExpression	r_cons_is_breaked ( )		1004947	0					
ANR	1005053	Callee	r_cons_is_breaked		1004947	0					
ANR	1005054	Identifier	r_cons_is_breaked		1004947	0					
ANR	1005055	ArgumentList			1004947	1					
ANR	1005056	CompoundStatement		19:29:415:415	1004947	1					
ANR	1005057	BreakStatement	break ;	193:4:8055:8060	1004947	0	True				
ANR	1005058	IdentifierDeclStatement	"ut64 from = map -> itv . addr , to = r_itv_end ( map -> itv ) ;"	195:3:8070:8122	1004947	1	True				
ANR	1005059	IdentifierDecl	from = map -> itv . addr		1004947	0					
ANR	1005060	IdentifierDeclType	ut64		1004947	0					
ANR	1005061	Identifier	from		1004947	1					
ANR	1005062	AssignmentExpression	from = map -> itv . addr		1004947	2		=			
ANR	1005063	Identifier	from		1004947	0					
ANR	1005064	MemberAccess	map -> itv . addr		1004947	1					
ANR	1005065	PtrMemberAccess	map -> itv		1004947	0					
ANR	1005066	Identifier	map		1004947	0					
ANR	1005067	Identifier	itv		1004947	1					
ANR	1005068	Identifier	addr		1004947	1					
ANR	1005069	IdentifierDecl	to = r_itv_end ( map -> itv )		1004947	1					
ANR	1005070	IdentifierDeclType	ut64		1004947	0					
ANR	1005071	Identifier	to		1004947	1					
ANR	1005072	AssignmentExpression	to = r_itv_end ( map -> itv )		1004947	2		=			
ANR	1005073	Identifier	to		1004947	0					
ANR	1005074	CallExpression	r_itv_end ( map -> itv )		1004947	1					
ANR	1005075	Callee	r_itv_end		1004947	0					
ANR	1005076	Identifier	r_itv_end		1004947	0					
ANR	1005077	ArgumentList	map -> itv		1004947	1					
ANR	1005078	Argument	map -> itv		1004947	0					
ANR	1005079	PtrMemberAccess	map -> itv		1004947	0					
ANR	1005080	Identifier	map		1004947	0					
ANR	1005081	Identifier	itv		1004947	1					
ANR	1005082	IdentifierDeclStatement	st64 bufsz ;	196:3:8127:8137	1004947	2	True				
ANR	1005083	IdentifierDecl	bufsz		1004947	0					
ANR	1005084	IdentifierDeclType	st64		1004947	0					
ANR	1005085	Identifier	bufsz		1004947	1					
ANR	1005086	ExpressionStatement	bufsz = to - from	197:3:8142:8159	1004947	3	True				
ANR	1005087	AssignmentExpression	bufsz = to - from		1004947	0		=			
ANR	1005088	Identifier	bufsz		1004947	0					
ANR	1005089	AdditiveExpression	to - from		1004947	1		-			
ANR	1005090	Identifier	to		1004947	0					
ANR	1005091	Identifier	from		1004947	1					
ANR	1005092	IfStatement	if ( len > bufsz )		1004947	4					
ANR	1005093	Condition	len > bufsz	198:7:8168:8178	1004947	0	True				
ANR	1005094	RelationalExpression	len > bufsz		1004947	0		>			
ANR	1005095	Identifier	len		1004947	0					
ANR	1005096	Identifier	bufsz		1004947	1					
ANR	1005097	CompoundStatement		25:20:547:547	1004947	1					
ANR	1005098	Statement	eprintf	199:4:8187:8193	1004947	0	True				
ANR	1005099	Statement	(	199:12:8195:8195	1004947	1	True				
ANR	1005100	Statement	"""Hash length is bigger than range 0x%"""	199:13:8196:8233	1004947	2	True				
ANR	1005101	Statement	PFMT64x	199:51:8234:8240	1004947	3	True				
ANR	1005102	Statement	"""\\n"""	199:59:8242:8245	1004947	4	True				
ANR	1005103	Statement	","	199:63:8246:8246	1004947	5	True				
ANR	1005104	Statement	from	199:65:8248:8251	1004947	6	True				
ANR	1005105	Statement	)	199:69:8252:8252	1004947	7	True				
ANR	1005106	ExpressionStatement		199:70:8253:8253	1004947	8	True				
ANR	1005107	ContinueStatement	continue ;	200:4:8259:8267	1004947	9	True				
ANR	1005108	ExpressionStatement	buf = malloc ( bufsz )	202:3:8277:8297	1004947	5	True				
ANR	1005109	AssignmentExpression	buf = malloc ( bufsz )		1004947	0		=			
ANR	1005110	Identifier	buf		1004947	0					
ANR	1005111	CallExpression	malloc ( bufsz )		1004947	1					
ANR	1005112	Callee	malloc		1004947	0					
ANR	1005113	Identifier	malloc		1004947	0					
ANR	1005114	ArgumentList	bufsz		1004947	1					
ANR	1005115	Argument	bufsz		1004947	0					
ANR	1005116	Identifier	bufsz		1004947	0					
ANR	1005117	IfStatement	if ( ! buf )		1004947	6					
ANR	1005118	Condition	! buf	203:7:8306:8309	1004947	0	True				
ANR	1005119	UnaryOperationExpression	! buf		1004947	0					
ANR	1005120	UnaryOperator	!		1004947	0					
ANR	1005121	Identifier	buf		1004947	1					
ANR	1005122	CompoundStatement		30:13:678:678	1004947	1					
ANR	1005123	Statement	eprintf	204:4:8318:8324	1004947	0	True				
ANR	1005124	Statement	(	204:12:8326:8326	1004947	1	True				
ANR	1005125	Statement	"""Cannot allocate %"""	204:13:8327:8345	1004947	2	True				
ANR	1005126	Statement	PFMT64d	204:32:8346:8352	1004947	3	True				
ANR	1005127	Statement	""" bytes\\n"""	204:40:8354:8363	1004947	4	True				
ANR	1005128	Statement	","	204:50:8364:8364	1004947	5	True				
ANR	1005129	Statement	bufsz	204:52:8366:8370	1004947	6	True				
ANR	1005130	Statement	)	204:57:8371:8371	1004947	7	True				
ANR	1005131	ExpressionStatement		204:58:8372:8372	1004947	8	True				
ANR	1005132	GotoStatement	goto hell ;	205:4:8378:8387	1004947	9	True				
ANR	1005133	Identifier	hell		1004947	0					
ANR	1005134	Statement	eprintf	207:3:8397:8403	1004947	7	True				
ANR	1005135	Statement	(	207:11:8405:8405	1004947	8	True				
ANR	1005136	Statement	"""Search in range 0x%08"""	207:12:8406:8428	1004947	9	True				
ANR	1005137	Statement	PFMT64x	207:35:8429:8435	1004947	10	True				
ANR	1005138	Statement	""" and 0x%08"""	207:43:8437:8448	1004947	11	True				
ANR	1005139	Statement	PFMT64x	207:55:8449:8455	1004947	12	True				
ANR	1005140	Statement	"""\\n"""	207:63:8457:8460	1004947	13	True				
ANR	1005141	Statement	","	207:67:8461:8461	1004947	14	True				
ANR	1005142	Statement	from	207:69:8463:8466	1004947	15	True				
ANR	1005143	Statement	","	207:73:8467:8467	1004947	16	True				
ANR	1005144	Statement	to	207:75:8469:8470	1004947	17	True				
ANR	1005145	Statement	)	207:77:8471:8471	1004947	18	True				
ANR	1005146	ExpressionStatement		207:78:8472:8472	1004947	19	True				
ANR	1005147	IdentifierDeclStatement	int blocks = ( int ) ( to - from - len ) ;	208:3:8477:8513	1004947	20	True				
ANR	1005148	IdentifierDecl	blocks = ( int ) ( to - from - len )		1004947	0					
ANR	1005149	IdentifierDeclType	int		1004947	0					
ANR	1005150	Identifier	blocks		1004947	1					
ANR	1005151	AssignmentExpression	blocks = ( int ) ( to - from - len )		1004947	2		=			
ANR	1005152	Identifier	blocks		1004947	0					
ANR	1005153	CastExpression	( int ) ( to - from - len )		1004947	1					
ANR	1005154	CastTarget	int		1004947	0					
ANR	1005155	AdditiveExpression	to - from - len		1004947	1		-			
ANR	1005156	Identifier	to		1004947	0					
ANR	1005157	AdditiveExpression	from - len		1004947	1		-			
ANR	1005158	Identifier	from		1004947	0					
ANR	1005159	Identifier	len		1004947	1					
ANR	1005160	ExpressionStatement	"eprintf ( ""Carving %d blocks...\\n"" , blocks )"	209:3:8518:8560	1004947	21	True				
ANR	1005161	CallExpression	"eprintf ( ""Carving %d blocks...\\n"" , blocks )"		1004947	0					
ANR	1005162	Callee	eprintf		1004947	0					
ANR	1005163	Identifier	eprintf		1004947	0					
ANR	1005164	ArgumentList	"""Carving %d blocks...\\n"""		1004947	1					
ANR	1005165	Argument	"""Carving %d blocks...\\n"""		1004947	0					
ANR	1005166	PrimaryExpression	"""Carving %d blocks...\\n"""		1004947	0					
ANR	1005167	Argument	blocks		1004947	1					
ANR	1005168	Identifier	blocks		1004947	0					
ANR	1005169	ExpressionStatement	"( void ) r_io_read_at ( core -> io , from , buf , bufsz )"	210:3:8565:8613	1004947	22	True				
ANR	1005170	CastExpression	"( void ) r_io_read_at ( core -> io , from , buf , bufsz )"		1004947	0					
ANR	1005171	CastTarget	void		1004947	0					
ANR	1005172	CallExpression	"r_io_read_at ( core -> io , from , buf , bufsz )"		1004947	1					
ANR	1005173	Callee	r_io_read_at		1004947	0					
ANR	1005174	Identifier	r_io_read_at		1004947	0					
ANR	1005175	ArgumentList	core -> io		1004947	1					
ANR	1005176	Argument	core -> io		1004947	0					
ANR	1005177	PtrMemberAccess	core -> io		1004947	0					
ANR	1005178	Identifier	core		1004947	0					
ANR	1005179	Identifier	io		1004947	1					
ANR	1005180	Argument	from		1004947	1					
ANR	1005181	Identifier	from		1004947	0					
ANR	1005182	Argument	buf		1004947	2					
ANR	1005183	Identifier	buf		1004947	0					
ANR	1005184	Argument	bufsz		1004947	3					
ANR	1005185	Identifier	bufsz		1004947	0					
ANR	1005186	ForStatement	for ( i = 0 ; ( from + i + len ) < to ; i ++ )		1004947	23					
ANR	1005187	ForInit	i = 0 ;	211:8:8623:8628	1004947	0	True				
ANR	1005188	AssignmentExpression	i = 0		1004947	0		=			
ANR	1005189	Identifier	i		1004947	0					
ANR	1005190	PrimaryExpression	0		1004947	1					
ANR	1005191	Condition	( from + i + len ) < to	211:15:8630:8650	1004947	1	True				
ANR	1005192	RelationalExpression	( from + i + len ) < to		1004947	0		<			
ANR	1005193	AdditiveExpression	from + i + len		1004947	0		+			
ANR	1005194	Identifier	from		1004947	0					
ANR	1005195	AdditiveExpression	i + len		1004947	1		+			
ANR	1005196	Identifier	i		1004947	0					
ANR	1005197	Identifier	len		1004947	1					
ANR	1005198	Identifier	to		1004947	1					
ANR	1005199	PostIncDecOperationExpression	i ++	211:38:8653:8655	1004947	2	True				
ANR	1005200	Identifier	i		1004947	0					
ANR	1005201	IncDec	++		1004947	1					
ANR	1005202	CompoundStatement		42:4:1080:1137	1004947	3					
ANR	1005203	IfStatement	if ( r_cons_is_breaked ( ) )		1004947	0					
ANR	1005204	Condition	r_cons_is_breaked ( )	212:8:8668:8687	1004947	0	True				
ANR	1005205	CallExpression	r_cons_is_breaked ( )		1004947	0					
ANR	1005206	Callee	r_cons_is_breaked		1004947	0					
ANR	1005207	Identifier	r_cons_is_breaked		1004947	0					
ANR	1005208	ArgumentList			1004947	1					
ANR	1005209	CompoundStatement		39:30:1056:1056	1004947	1					
ANR	1005210	BreakStatement	break ;	213:5:8697:8702	1004947	0	True				
ANR	1005211	IdentifierDeclStatement	"char * s = r_hash_to_string ( NULL , hashname , buf + i , len ) ;"	215:4:8714:8771	1004947	1	True				
ANR	1005212	IdentifierDecl	"* s = r_hash_to_string ( NULL , hashname , buf + i , len )"		1004947	0					
ANR	1005213	IdentifierDeclType	char *		1004947	0					
ANR	1005214	Identifier	s		1004947	1					
ANR	1005215	AssignmentExpression	"* s = r_hash_to_string ( NULL , hashname , buf + i , len )"		1004947	2		=			
ANR	1005216	Identifier	s		1004947	0					
ANR	1005217	CallExpression	"r_hash_to_string ( NULL , hashname , buf + i , len )"		1004947	1					
ANR	1005218	Callee	r_hash_to_string		1004947	0					
ANR	1005219	Identifier	r_hash_to_string		1004947	0					
ANR	1005220	ArgumentList	NULL		1004947	1					
ANR	1005221	Argument	NULL		1004947	0					
ANR	1005222	Identifier	NULL		1004947	0					
ANR	1005223	Argument	hashname		1004947	1					
ANR	1005224	Identifier	hashname		1004947	0					
ANR	1005225	Argument	buf + i		1004947	2					
ANR	1005226	AdditiveExpression	buf + i		1004947	0		+			
ANR	1005227	Identifier	buf		1004947	0					
ANR	1005228	Identifier	i		1004947	1					
ANR	1005229	Argument	len		1004947	3					
ANR	1005230	Identifier	len		1004947	0					
ANR	1005231	IfStatement	if ( ! ( i % 5 ) )		1004947	2					
ANR	1005232	Condition	! ( i % 5 )	216:8:8781:8788	1004947	0	True				
ANR	1005233	UnaryOperationExpression	! ( i % 5 )		1004947	0					
ANR	1005234	UnaryOperator	!		1004947	0					
ANR	1005235	MultiplicativeExpression	i % 5		1004947	1		%			
ANR	1005236	Identifier	i		1004947	0					
ANR	1005237	PrimaryExpression	5		1004947	1					
ANR	1005238	CompoundStatement		43:18:1157:1157	1004947	1					
ANR	1005239	ExpressionStatement	"eprintf ( ""%d\\r"" , i )"	217:5:8798:8817	1004947	0	True				
ANR	1005240	CallExpression	"eprintf ( ""%d\\r"" , i )"		1004947	0					
ANR	1005241	Callee	eprintf		1004947	0					
ANR	1005242	Identifier	eprintf		1004947	0					
ANR	1005243	ArgumentList	"""%d\\r"""		1004947	1					
ANR	1005244	Argument	"""%d\\r"""		1004947	0					
ANR	1005245	PrimaryExpression	"""%d\\r"""		1004947	0					
ANR	1005246	Argument	i		1004947	1					
ANR	1005247	Identifier	i		1004947	0					
ANR	1005248	IfStatement	if ( ! s )		1004947	3					
ANR	1005249	Condition	! s	219:8:8833:8834	1004947	0	True				
ANR	1005250	UnaryOperationExpression	! s		1004947	0					
ANR	1005251	UnaryOperator	!		1004947	0					
ANR	1005252	Identifier	s		1004947	1					
ANR	1005253	CompoundStatement		46:12:1203:1203	1004947	1					
ANR	1005254	ExpressionStatement	"eprintf ( ""Hash fail\\n"" )"	220:5:8844:8867	1004947	0	True				
ANR	1005255	CallExpression	"eprintf ( ""Hash fail\\n"" )"		1004947	0					
ANR	1005256	Callee	eprintf		1004947	0					
ANR	1005257	Identifier	eprintf		1004947	0					
ANR	1005258	ArgumentList	"""Hash fail\\n"""		1004947	1					
ANR	1005259	Argument	"""Hash fail\\n"""		1004947	0					
ANR	1005260	PrimaryExpression	"""Hash fail\\n"""		1004947	0					
ANR	1005261	BreakStatement	break ;	221:5:8874:8879	1004947	1	True				
ANR	1005262	IfStatement	"if ( ! strcmp ( s , hashstr ) )"		1004947	4					
ANR	1005263	Condition	"! strcmp ( s , hashstr )"	224:8:8946:8965	1004947	0	True				
ANR	1005264	UnaryOperationExpression	"! strcmp ( s , hashstr )"		1004947	0					
ANR	1005265	UnaryOperator	!		1004947	0					
ANR	1005266	CallExpression	"strcmp ( s , hashstr )"		1004947	1					
ANR	1005267	Callee	strcmp		1004947	0					
ANR	1005268	Identifier	strcmp		1004947	0					
ANR	1005269	ArgumentList	s		1004947	1					
ANR	1005270	Argument	s		1004947	0					
ANR	1005271	Identifier	s		1004947	0					
ANR	1005272	Argument	hashstr		1004947	1					
ANR	1005273	Identifier	hashstr		1004947	0					
ANR	1005274	CompoundStatement		51:30:1334:1334	1004947	1					
ANR	1005275	Statement	eprintf	225:5:8975:8981	1004947	0	True				
ANR	1005276	Statement	(	225:13:8983:8983	1004947	1	True				
ANR	1005277	Statement	"""Found at 0x%"""	225:14:8984:8997	1004947	2	True				
ANR	1005278	Statement	PFMT64x	225:28:8998:9004	1004947	3	True				
ANR	1005279	Statement	"""\\n"""	225:36:9006:9009	1004947	4	True				
ANR	1005280	Statement	","	225:40:9010:9010	1004947	5	True				
ANR	1005281	Statement	from	225:42:9012:9015	1004947	6	True				
ANR	1005282	Statement	+	225:47:9017:9017	1004947	7	True				
ANR	1005283	Statement	i	225:49:9019:9019	1004947	8	True				
ANR	1005284	Statement	)	225:50:9020:9020	1004947	9	True				
ANR	1005285	ExpressionStatement		225:51:9021:9021	1004947	10	True				
ANR	1005286	Statement	r_cons_printf	226:5:9028:9040	1004947	11	True				
ANR	1005287	Statement	(	226:19:9042:9042	1004947	12	True				
ANR	1005288	Statement	"""f hash.%s.%s = 0x%"""	226:20:9043:9062	1004947	13	True				
ANR	1005289	Statement	PFMT64x	226:40:9063:9069	1004947	14	True				
ANR	1005290	Statement	"""\\n"""	226:48:9071:9074	1004947	15	True				
ANR	1005291	Statement	","	226:52:9075:9075	1004947	16	True				
ANR	1005292	Statement	hashname	227:6:9083:9090	1004947	17	True				
ANR	1005293	Statement	","	227:14:9091:9091	1004947	18	True				
ANR	1005294	Statement	hashstr	227:16:9093:9099	1004947	19	True				
ANR	1005295	Statement	","	227:23:9100:9100	1004947	20	True				
ANR	1005296	Statement	from	227:25:9102:9105	1004947	21	True				
ANR	1005297	Statement	+	227:30:9107:9107	1004947	22	True				
ANR	1005298	Statement	i	227:32:9109:9109	1004947	23	True				
ANR	1005299	Statement	)	227:33:9110:9110	1004947	24	True				
ANR	1005300	ExpressionStatement		227:34:9111:9111	1004947	25	True				
ANR	1005301	ExpressionStatement	free ( s )	228:5:9118:9126	1004947	26	True				
ANR	1005302	CallExpression	free ( s )		1004947	0					
ANR	1005303	Callee	free		1004947	0					
ANR	1005304	Identifier	free		1004947	0					
ANR	1005305	ArgumentList	s		1004947	1					
ANR	1005306	Argument	s		1004947	0					
ANR	1005307	Identifier	s		1004947	0					
ANR	1005308	ExpressionStatement	free ( buf )	229:5:9133:9143	1004947	27	True				
ANR	1005309	CallExpression	free ( buf )		1004947	0					
ANR	1005310	Callee	free		1004947	0					
ANR	1005311	Identifier	free		1004947	0					
ANR	1005312	ArgumentList	buf		1004947	1					
ANR	1005313	Argument	buf		1004947	0					
ANR	1005314	Identifier	buf		1004947	0					
ANR	1005315	ReturnStatement	return 1 ;	230:5:9150:9158	1004947	28	True				
ANR	1005316	PrimaryExpression	1		1004947	0					
ANR	1005317	ExpressionStatement	free ( s )	232:4:9170:9178	1004947	5	True				
ANR	1005318	CallExpression	free ( s )		1004947	0					
ANR	1005319	Callee	free		1004947	0					
ANR	1005320	Identifier	free		1004947	0					
ANR	1005321	ArgumentList	s		1004947	1					
ANR	1005322	Argument	s		1004947	0					
ANR	1005323	Identifier	s		1004947	0					
ANR	1005324	ExpressionStatement	free ( buf )	234:3:9188:9198	1004947	24	True				
ANR	1005325	CallExpression	free ( buf )		1004947	0					
ANR	1005326	Callee	free		1004947	0					
ANR	1005327	Identifier	free		1004947	0					
ANR	1005328	ArgumentList	buf		1004947	1					
ANR	1005329	Argument	buf		1004947	0					
ANR	1005330	Identifier	buf		1004947	0					
ANR	1005331	ExpressionStatement	r_cons_break_pop ( )	237:1:9208:9227	1004947	8	True				
ANR	1005332	CallExpression	r_cons_break_pop ( )		1004947	0					
ANR	1005333	Callee	r_cons_break_pop		1004947	0					
ANR	1005334	Identifier	r_cons_break_pop		1004947	0					
ANR	1005335	ArgumentList			1004947	1					
ANR	1005336	ExpressionStatement	"eprintf ( ""No hashes found\\n"" )"	238:1:9230:9259	1004947	9	True				
ANR	1005337	CallExpression	"eprintf ( ""No hashes found\\n"" )"		1004947	0					
ANR	1005338	Callee	eprintf		1004947	0					
ANR	1005339	Identifier	eprintf		1004947	0					
ANR	1005340	ArgumentList	"""No hashes found\\n"""		1004947	1					
ANR	1005341	Argument	"""No hashes found\\n"""		1004947	0					
ANR	1005342	PrimaryExpression	"""No hashes found\\n"""		1004947	0					
ANR	1005343	ReturnStatement	return 0 ;	239:1:9262:9270	1004947	10	True				
ANR	1005344	PrimaryExpression	0		1004947	0					
ANR	1005345	Label	hell :	240:0:9272:9276	1004947	11	True				
ANR	1005346	Identifier	hell		1004947	0					
ANR	1005347	ReturnStatement	return - 1 ;	241:1:9279:9288	1004947	12	True				
ANR	1005348	UnaryOperationExpression	- 1		1004947	0					
ANR	1005349	UnaryOperator	-		1004947	0					
ANR	1005350	PrimaryExpression	1		1004947	1					
ANR	1005351	ReturnType	static int		1004947	1					
ANR	1005352	Identifier	search_hash		1004947	2					
ANR	1005353	ParameterList	"RCore * core , const char * hashname , const char * hashstr , ut32 minlen , ut32 maxlen , struct search_parameters * param"		1004947	3					
ANR	1005354	Parameter	RCore * core	174:23:7518:7528	1004947	0	True				
ANR	1005355	ParameterType	RCore *		1004947	0					
ANR	1005356	Identifier	core		1004947	1					
ANR	1005357	Parameter	const char * hashname	174:36:7531:7550	1004947	1	True				
ANR	1005358	ParameterType	const char *		1004947	0					
ANR	1005359	Identifier	hashname		1004947	1					
ANR	1005360	Parameter	const char * hashstr	174:58:7553:7571	1004947	2	True				
ANR	1005361	ParameterType	const char *		1004947	0					
ANR	1005362	Identifier	hashstr		1004947	1					
ANR	1005363	Parameter	ut32 minlen	174:79:7574:7584	1004947	3	True				
ANR	1005364	ParameterType	ut32		1004947	0					
ANR	1005365	Identifier	minlen		1004947	1					
ANR	1005366	Parameter	ut32 maxlen	174:92:7587:7597	1004947	4	True				
ANR	1005367	ParameterType	ut32		1004947	0					
ANR	1005368	Identifier	maxlen		1004947	1					
ANR	1005369	Parameter	struct search_parameters * param	174:105:7600:7630	1004947	5	True				
ANR	1005370	ParameterType	struct search_parameters *		1004947	0					
ANR	1005371	Identifier	param		1004947	1					
ANR	1005372	CFGEntryNode	ENTRY		1004947		True				
ANR	1005373	CFGExitNode	EXIT		1004947		True				
ANR	1005374	Symbol	UT32_MAX		1004947						
ANR	1005375	Symbol	bufsz		1004947						
ANR	1005376	Symbol	map -> itv		1004947						
ANR	1005377	Symbol	* map		1004947						
ANR	1005378	Symbol	* core		1004947						
ANR	1005379	Symbol	r_hash_to_string		1004947						
ANR	1005380	Symbol	r_cons_is_breaked		1004947						
ANR	1005381	Symbol	len		1004947						
ANR	1005382	Symbol	core -> io		1004947						
ANR	1005383	Symbol	param		1004947						
ANR	1005384	Symbol	from		1004947						
ANR	1005385	Symbol	map -> itv . addr		1004947						
ANR	1005386	Symbol	map		1004947						
ANR	1005387	Symbol	core -> blocksize		1004947						
ANR	1005388	Symbol	strcmp		1004947						
ANR	1005389	Symbol	malloc		1004947						
ANR	1005390	Symbol	NULL		1004947						
ANR	1005391	Symbol	blocks		1004947						
ANR	1005392	Symbol	i		1004947						
ANR	1005393	Symbol	iter		1004947						
ANR	1005394	Symbol	j		1004947						
ANR	1005395	Symbol	r_itv_end		1004947						
ANR	1005396	Symbol	hashstr		1004947						
ANR	1005397	Symbol	core		1004947						
ANR	1005398	Symbol	buf		1004947						
ANR	1005399	Symbol	s		1004947						
ANR	1005400	Symbol	hashname		1004947						
ANR	1005401	Symbol	minlen		1004947						
ANR	1005402	Symbol	to		1004947						
ANR	1005403	Symbol	maxlen		1004947						
ANR	1005404	Function	cmd_search_bin	244:0:9293:10266							
ANR	1005405	FunctionDef	"cmd_search_bin (RCore * core , RInterval itv)"		1005404	0					
ANR	1005406	CompoundStatement		244:55:9348:10266	1005404	0					
ANR	1005407	IdentifierDeclStatement	"ut64 from = itv . addr , to = r_itv_end ( itv ) ;"	245:1:9351:9393	1005404	0	True				
ANR	1005408	IdentifierDecl	from = itv . addr		1005404	0					
ANR	1005409	IdentifierDeclType	ut64		1005404	0					
ANR	1005410	Identifier	from		1005404	1					
ANR	1005411	AssignmentExpression	from = itv . addr		1005404	2		=			
ANR	1005412	Identifier	from		1005404	0					
ANR	1005413	MemberAccess	itv . addr		1005404	1					
ANR	1005414	Identifier	itv		1005404	0					
ANR	1005415	Identifier	addr		1005404	1					
ANR	1005416	IdentifierDecl	to = r_itv_end ( itv )		1005404	1					
ANR	1005417	IdentifierDeclType	ut64		1005404	0					
ANR	1005418	Identifier	to		1005404	1					
ANR	1005419	AssignmentExpression	to = r_itv_end ( itv )		1005404	2		=			
ANR	1005420	Identifier	to		1005404	0					
ANR	1005421	CallExpression	r_itv_end ( itv )		1005404	1					
ANR	1005422	Callee	r_itv_end		1005404	0					
ANR	1005423	Identifier	r_itv_end		1005404	0					
ANR	1005424	ArgumentList	itv		1005404	1					
ANR	1005425	Argument	itv		1005404	0					
ANR	1005426	Identifier	itv		1005404	0					
ANR	1005427	IdentifierDeclStatement	int size ;	246:1:9396:9404	1005404	1	True				
ANR	1005428	IdentifierDecl	size		1005404	0					
ANR	1005429	IdentifierDeclType	int		1005404	0					
ANR	1005430	Identifier	size		1005404	1					
ANR	1005431	IdentifierDeclStatement	int fd = core -> file -> fd ;	248:1:9432:9455	1005404	2	True				
ANR	1005432	IdentifierDecl	fd = core -> file -> fd		1005404	0					
ANR	1005433	IdentifierDeclType	int		1005404	0					
ANR	1005434	Identifier	fd		1005404	1					
ANR	1005435	AssignmentExpression	fd = core -> file -> fd		1005404	2		=			
ANR	1005436	Identifier	fd		1005404	0					
ANR	1005437	PtrMemberAccess	core -> file -> fd		1005404	1					
ANR	1005438	PtrMemberAccess	core -> file		1005404	0					
ANR	1005439	Identifier	core		1005404	0					
ANR	1005440	Identifier	file		1005404	1					
ANR	1005441	Identifier	fd		1005404	1					
ANR	1005442	IdentifierDeclStatement	"RBuffer * b = r_buf_new_with_io ( & core -> anal -> iob , fd ) ;"	249:1:9458:9511	1005404	3	True				
ANR	1005443	IdentifierDecl	"* b = r_buf_new_with_io ( & core -> anal -> iob , fd )"		1005404	0					
ANR	1005444	IdentifierDeclType	RBuffer *		1005404	0					
ANR	1005445	Identifier	b		1005404	1					
ANR	1005446	AssignmentExpression	"* b = r_buf_new_with_io ( & core -> anal -> iob , fd )"		1005404	2		=			
ANR	1005447	Identifier	b		1005404	0					
ANR	1005448	CallExpression	"r_buf_new_with_io ( & core -> anal -> iob , fd )"		1005404	1					
ANR	1005449	Callee	r_buf_new_with_io		1005404	0					
ANR	1005450	Identifier	r_buf_new_with_io		1005404	0					
ANR	1005451	ArgumentList	& core -> anal -> iob		1005404	1					
ANR	1005452	Argument	& core -> anal -> iob		1005404	0					
ANR	1005453	UnaryOperationExpression	& core -> anal -> iob		1005404	0					
ANR	1005454	UnaryOperator	&		1005404	0					
ANR	1005455	PtrMemberAccess	core -> anal -> iob		1005404	1					
ANR	1005456	PtrMemberAccess	core -> anal		1005404	0					
ANR	1005457	Identifier	core		1005404	0					
ANR	1005458	Identifier	anal		1005404	1					
ANR	1005459	Identifier	iob		1005404	1					
ANR	1005460	Argument	fd		1005404	1					
ANR	1005461	Identifier	fd		1005404	0					
ANR	1005462	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	250:1:9514:9544	1005404	4	True				
ANR	1005463	CallExpression	"r_cons_break_push ( NULL , NULL )"		1005404	0					
ANR	1005464	Callee	r_cons_break_push		1005404	0					
ANR	1005465	Identifier	r_cons_break_push		1005404	0					
ANR	1005466	ArgumentList	NULL		1005404	1					
ANR	1005467	Argument	NULL		1005404	0					
ANR	1005468	Identifier	NULL		1005404	0					
ANR	1005469	Argument	NULL		1005404	1					
ANR	1005470	Identifier	NULL		1005404	0					
ANR	1005471	WhileStatement	while ( from < to )		1005404	5					
ANR	1005472	Condition	from < to	251:8:9554:9562	1005404	0	True				
ANR	1005473	RelationalExpression	from < to		1005404	0		<			
ANR	1005474	Identifier	from		1005404	0					
ANR	1005475	Identifier	to		1005404	1					
ANR	1005476	CompoundStatement		13:2:312:377	1005404	1					
ANR	1005477	IfStatement	if ( r_cons_is_breaked ( ) )		1005404	0					
ANR	1005478	Condition	r_cons_is_breaked ( )	252:6:9573:9592	1005404	0	True				
ANR	1005479	CallExpression	r_cons_is_breaked ( )		1005404	0					
ANR	1005480	Callee	r_cons_is_breaked		1005404	0					
ANR	1005481	Identifier	r_cons_is_breaked		1005404	0					
ANR	1005482	ArgumentList			1005404	1					
ANR	1005483	CompoundStatement		9:28:246:246	1005404	1					
ANR	1005484	BreakStatement	break ;	253:3:9600:9605	1005404	0	True				
ANR	1005485	IdentifierDeclStatement	"RBuffer * ref = r_buf_new_slice ( b , from , to ) ;"	255:2:9613:9657	1005404	1	True				
ANR	1005486	IdentifierDecl	"* ref = r_buf_new_slice ( b , from , to )"		1005404	0					
ANR	1005487	IdentifierDeclType	RBuffer *		1005404	0					
ANR	1005488	Identifier	ref		1005404	1					
ANR	1005489	AssignmentExpression	"* ref = r_buf_new_slice ( b , from , to )"		1005404	2		=			
ANR	1005490	Identifier	ref		1005404	0					
ANR	1005491	CallExpression	"r_buf_new_slice ( b , from , to )"		1005404	1					
ANR	1005492	Callee	r_buf_new_slice		1005404	0					
ANR	1005493	Identifier	r_buf_new_slice		1005404	0					
ANR	1005494	ArgumentList	b		1005404	1					
ANR	1005495	Argument	b		1005404	0					
ANR	1005496	Identifier	b		1005404	0					
ANR	1005497	Argument	from		1005404	1					
ANR	1005498	Identifier	from		1005404	0					
ANR	1005499	Argument	to		1005404	2					
ANR	1005500	Identifier	to		1005404	0					
ANR	1005501	IdentifierDeclStatement	"RBinPlugin * plug = r_bin_get_binplugin_by_buffer ( core -> bin , ref ) ;"	256:2:9661:9726	1005404	2	True				
ANR	1005502	IdentifierDecl	"* plug = r_bin_get_binplugin_by_buffer ( core -> bin , ref )"		1005404	0					
ANR	1005503	IdentifierDeclType	RBinPlugin *		1005404	0					
ANR	1005504	Identifier	plug		1005404	1					
ANR	1005505	AssignmentExpression	"* plug = r_bin_get_binplugin_by_buffer ( core -> bin , ref )"		1005404	2		=			
ANR	1005506	Identifier	plug		1005404	0					
ANR	1005507	CallExpression	"r_bin_get_binplugin_by_buffer ( core -> bin , ref )"		1005404	1					
ANR	1005508	Callee	r_bin_get_binplugin_by_buffer		1005404	0					
ANR	1005509	Identifier	r_bin_get_binplugin_by_buffer		1005404	0					
ANR	1005510	ArgumentList	core -> bin		1005404	1					
ANR	1005511	Argument	core -> bin		1005404	0					
ANR	1005512	PtrMemberAccess	core -> bin		1005404	0					
ANR	1005513	Identifier	core		1005404	0					
ANR	1005514	Identifier	bin		1005404	1					
ANR	1005515	Argument	ref		1005404	1					
ANR	1005516	Identifier	ref		1005404	0					
ANR	1005517	IfStatement	if ( plug )		1005404	3					
ANR	1005518	Condition	plug	257:6:9734:9737	1005404	0	True				
ANR	1005519	Identifier	plug		1005404	0					
ANR	1005520	CompoundStatement		14:12:391:391	1005404	1					
ANR	1005521	Statement	r_cons_printf	258:3:9745:9757	1005404	0	True				
ANR	1005522	Statement	(	258:17:9759:9759	1005404	1	True				
ANR	1005523	Statement	"""0x%08"""	258:18:9760:9766	1005404	2	True				
ANR	1005524	Statement	PFMT64x	258:26:9768:9774	1005404	3	True				
ANR	1005525	Statement	"""  %s\\n"""	258:34:9776:9783	1005404	4	True				
ANR	1005526	Statement	","	258:42:9784:9784	1005404	5	True				
ANR	1005527	Statement	from	258:44:9786:9789	1005404	6	True				
ANR	1005528	Statement	","	258:48:9790:9790	1005404	7	True				
ANR	1005529	Statement	plug	258:50:9792:9795	1005404	8	True				
ANR	1005530	Statement	->	258:54:9796:9797	1005404	9	True				
ANR	1005531	Statement	name	258:56:9798:9801	1005404	10	True				
ANR	1005532	Statement	)	258:60:9802:9802	1005404	11	True				
ANR	1005533	ExpressionStatement		258:61:9803:9803	1005404	12	True				
ANR	1005534	IfStatement	if ( plug -> size )		1005404	13					
ANR	1005535	Condition	plug -> size	259:7:9812:9821	1005404	0	True				
ANR	1005536	PtrMemberAccess	plug -> size		1005404	0					
ANR	1005537	Identifier	plug		1005404	0					
ANR	1005538	Identifier	size		1005404	1					
ANR	1005539	CompoundStatement		16:19:475:475	1005404	1					
ANR	1005540	Statement	RBinOptions	260:4:9830:9840	1005404	0	True				
ANR	1005541	Statement	opt	260:16:9842:9844	1005404	1	True				
ANR	1005542	Statement	=	260:20:9846:9846	1005404	2	True				
ANR	1005543	CompoundStatement		17:22:499:499	1005404	3					
ANR	1005544	Statement	.	261:5:9855:9855	1005404	0	True				
ANR	1005545	Statement	pluginname	261:6:9856:9865	1005404	1	True				
ANR	1005546	Statement	=	261:17:9867:9867	1005404	2	True				
ANR	1005547	Statement	plug	261:19:9869:9872	1005404	3	True				
ANR	1005548	Statement	->	261:23:9873:9874	1005404	4	True				
ANR	1005549	Statement	name	261:25:9875:9878	1005404	5	True				
ANR	1005550	Statement	","	261:29:9879:9879	1005404	6	True				
ANR	1005551	Statement	.	262:5:9886:9886	1005404	7	True				
ANR	1005552	Statement	offset	262:6:9887:9892	1005404	8	True				
ANR	1005553	Statement	=	262:13:9894:9894	1005404	9	True				
ANR	1005554	Statement	core	262:15:9896:9899	1005404	10	True				
ANR	1005555	Statement	->	262:19:9900:9901	1005404	11	True				
ANR	1005556	Statement	offset	262:21:9902:9907	1005404	12	True				
ANR	1005557	Statement	","	262:27:9908:9908	1005404	13	True				
ANR	1005558	Statement	.	263:5:9915:9915	1005404	14	True				
ANR	1005559	Statement	baseaddr	263:6:9916:9923	1005404	15	True				
ANR	1005560	Statement	=	263:15:9925:9925	1005404	16	True				
ANR	1005561	Statement	0	263:17:9927:9927	1005404	17	True				
ANR	1005562	Statement	","	263:18:9928:9928	1005404	18	True				
ANR	1005563	Statement	.	264:5:9935:9935	1005404	19	True				
ANR	1005564	Statement	loadaddr	264:6:9936:9943	1005404	20	True				
ANR	1005565	Statement	=	264:15:9945:9945	1005404	21	True				
ANR	1005566	Statement	0	264:17:9947:9947	1005404	22	True				
ANR	1005567	Statement	","	264:18:9948:9948	1005404	23	True				
ANR	1005568	Statement	.	265:5:9955:9955	1005404	24	True				
ANR	1005569	Statement	sz	265:6:9956:9957	1005404	25	True				
ANR	1005570	Statement	=	265:9:9959:9959	1005404	26	True				
ANR	1005571	Statement	4096	265:11:9961:9964	1005404	27	True				
ANR	1005572	Statement	","	265:15:9965:9965	1005404	28	True				
ANR	1005573	Statement	.	266:5:9972:9972	1005404	29	True				
ANR	1005574	Statement	xtr_idx	266:6:9973:9979	1005404	30	True				
ANR	1005575	Statement	=	266:14:9981:9981	1005404	31	True				
ANR	1005576	Statement	0	266:16:9983:9983	1005404	32	True				
ANR	1005577	Statement	","	266:17:9984:9984	1005404	33	True				
ANR	1005578	Statement	.	267:5:9991:9991	1005404	34	True				
ANR	1005579	Statement	rawstr	267:6:9992:9997	1005404	35	True				
ANR	1005580	Statement	=	267:13:9999:9999	1005404	36	True				
ANR	1005581	Statement	core	267:15:10001:10004	1005404	37	True				
ANR	1005582	Statement	->	267:19:10005:10006	1005404	38	True				
ANR	1005583	Statement	bin	267:21:10007:10009	1005404	39	True				
ANR	1005584	Statement	->	267:24:10010:10011	1005404	40	True				
ANR	1005585	Statement	rawstr	267:26:10012:10017	1005404	41	True				
ANR	1005586	Statement	","	267:32:10018:10018	1005404	42	True				
ANR	1005587	Statement	.	268:5:10025:10025	1005404	43	True				
ANR	1005588	Statement	fd	268:6:10026:10027	1005404	44	True				
ANR	1005589	Statement	=	268:9:10029:10029	1005404	45	True				
ANR	1005590	Statement	fd	268:11:10031:10032	1005404	46	True				
ANR	1005591	Statement	","	268:13:10033:10033	1005404	47	True				
ANR	1005592	ExpressionStatement		269:5:10040:10040	1005404	4	True				
ANR	1005593	ExpressionStatement	"r_bin_open_io ( core -> bin , & opt )"	270:4:10046:10077	1005404	5	True				
ANR	1005594	CallExpression	"r_bin_open_io ( core -> bin , & opt )"		1005404	0					
ANR	1005595	Callee	r_bin_open_io		1005404	0					
ANR	1005596	Identifier	r_bin_open_io		1005404	0					
ANR	1005597	ArgumentList	core -> bin		1005404	1					
ANR	1005598	Argument	core -> bin		1005404	0					
ANR	1005599	PtrMemberAccess	core -> bin		1005404	0					
ANR	1005600	Identifier	core		1005404	0					
ANR	1005601	Identifier	bin		1005404	1					
ANR	1005602	Argument	& opt		1005404	1					
ANR	1005603	UnaryOperationExpression	& opt		1005404	0					
ANR	1005604	UnaryOperator	&		1005404	0					
ANR	1005605	Identifier	opt		1005404	1					
ANR	1005606	ExpressionStatement	size = plug -> size ( core -> bin -> cur )	271:4:10083:10117	1005404	6	True				
ANR	1005607	AssignmentExpression	size = plug -> size ( core -> bin -> cur )		1005404	0		=			
ANR	1005608	Identifier	size		1005404	0					
ANR	1005609	CallExpression	plug -> size ( core -> bin -> cur )		1005404	1					
ANR	1005610	Callee	plug -> size		1005404	0					
ANR	1005611	PtrMemberAccess	plug -> size		1005404	0					
ANR	1005612	Identifier	plug		1005404	0					
ANR	1005613	Identifier	size		1005404	1					
ANR	1005614	ArgumentList	core -> bin -> cur		1005404	1					
ANR	1005615	Argument	core -> bin -> cur		1005404	0					
ANR	1005616	PtrMemberAccess	core -> bin -> cur		1005404	0					
ANR	1005617	PtrMemberAccess	core -> bin		1005404	0					
ANR	1005618	Identifier	core		1005404	0					
ANR	1005619	Identifier	bin		1005404	1					
ANR	1005620	Identifier	cur		1005404	1					
ANR	1005621	IfStatement	if ( size > 0 )		1005404	7					
ANR	1005622	Condition	size > 0	272:8:10127:10134	1005404	0	True				
ANR	1005623	RelationalExpression	size > 0		1005404	0		>			
ANR	1005624	Identifier	size		1005404	0					
ANR	1005625	PrimaryExpression	0		1005404	1					
ANR	1005626	CompoundStatement		29:18:788:788	1005404	1					
ANR	1005627	ExpressionStatement	"r_cons_printf ( ""size %d\\n"" , size )"	273:5:10144:10177	1005404	0	True				
ANR	1005628	CallExpression	"r_cons_printf ( ""size %d\\n"" , size )"		1005404	0					
ANR	1005629	Callee	r_cons_printf		1005404	0					
ANR	1005630	Identifier	r_cons_printf		1005404	0					
ANR	1005631	ArgumentList	"""size %d\\n"""		1005404	1					
ANR	1005632	Argument	"""size %d\\n"""		1005404	0					
ANR	1005633	PrimaryExpression	"""size %d\\n"""		1005404	0					
ANR	1005634	Argument	size		1005404	1					
ANR	1005635	Identifier	size		1005404	0					
ANR	1005636	ExpressionStatement	r_buf_free ( ref )	277:2:10196:10212	1005404	4	True				
ANR	1005637	CallExpression	r_buf_free ( ref )		1005404	0					
ANR	1005638	Callee	r_buf_free		1005404	0					
ANR	1005639	Identifier	r_buf_free		1005404	0					
ANR	1005640	ArgumentList	ref		1005404	1					
ANR	1005641	Argument	ref		1005404	0					
ANR	1005642	Identifier	ref		1005404	0					
ANR	1005643	ExpressionStatement	from ++	278:2:10216:10222	1005404	5	True				
ANR	1005644	PostIncDecOperationExpression	from ++		1005404	0					
ANR	1005645	Identifier	from		1005404	0					
ANR	1005646	IncDec	++		1005404	1					
ANR	1005647	ExpressionStatement	r_buf_free ( b )	280:1:10228:10242	1005404	6	True				
ANR	1005648	CallExpression	r_buf_free ( b )		1005404	0					
ANR	1005649	Callee	r_buf_free		1005404	0					
ANR	1005650	Identifier	r_buf_free		1005404	0					
ANR	1005651	ArgumentList	b		1005404	1					
ANR	1005652	Argument	b		1005404	0					
ANR	1005653	Identifier	b		1005404	0					
ANR	1005654	ExpressionStatement	r_cons_break_pop ( )	281:1:10245:10264	1005404	7	True				
ANR	1005655	CallExpression	r_cons_break_pop ( )		1005404	0					
ANR	1005656	Callee	r_cons_break_pop		1005404	0					
ANR	1005657	Identifier	r_cons_break_pop		1005404	0					
ANR	1005658	ArgumentList			1005404	1					
ANR	1005659	ReturnType	static void		1005404	1					
ANR	1005660	Identifier	cmd_search_bin		1005404	2					
ANR	1005661	ParameterList	"RCore * core , RInterval itv"		1005404	3					
ANR	1005662	Parameter	RCore * core	244:27:9320:9330	1005404	0	True				
ANR	1005663	ParameterType	RCore *		1005404	0					
ANR	1005664	Identifier	core		1005404	1					
ANR	1005665	Parameter	RInterval itv	244:40:9333:9345	1005404	1	True				
ANR	1005666	ParameterType	RInterval		1005404	0					
ANR	1005667	Identifier	itv		1005404	1					
ANR	1005668	CFGEntryNode	ENTRY		1005404		True				
ANR	1005669	CFGExitNode	EXIT		1005404		True				
ANR	1005670	Symbol	& core -> anal -> iob		1005404						
ANR	1005671	Symbol	* core		1005404						
ANR	1005672	Symbol	core -> anal		1005404						
ANR	1005673	Symbol	plug -> size		1005404						
ANR	1005674	Symbol	r_cons_is_breaked		1005404						
ANR	1005675	Symbol	ref		1005404						
ANR	1005676	Symbol	from		1005404						
ANR	1005677	Symbol	itv . addr		1005404						
ANR	1005678	Symbol	* core -> bin		1005404						
ANR	1005679	Symbol	core -> bin		1005404						
ANR	1005680	Symbol	* * core		1005404						
ANR	1005681	Symbol	& opt		1005404						
ANR	1005682	Symbol	r_buf_new_with_io		1005404						
ANR	1005683	Symbol	b		1005404						
ANR	1005684	Symbol	NULL		1005404						
ANR	1005685	Symbol	core -> file		1005404						
ANR	1005686	Symbol	* plug		1005404						
ANR	1005687	Symbol	core -> bin -> cur		1005404						
ANR	1005688	Symbol	itv		1005404						
ANR	1005689	Symbol	r_itv_end		1005404						
ANR	1005690	Symbol	core		1005404						
ANR	1005691	Symbol	* core -> file		1005404						
ANR	1005692	Symbol	size		1005404						
ANR	1005693	Symbol	core -> file -> fd		1005404						
ANR	1005694	Symbol	r_bin_get_binplugin_by_buffer		1005404						
ANR	1005695	Symbol	r_buf_new_slice		1005404						
ANR	1005696	Symbol	plug		1005404						
ANR	1005697	Symbol	to		1005404						
ANR	1005698	Symbol	fd		1005404						
ANR	1005699	Function	__prelude_cb_hit	284:0:10269:10606							
ANR	1005700	FunctionDef	"__prelude_cb_hit (RSearchKeyword * kw , void * user , ut64 addr)"		1005699	0					
ANR	1005701	CompoundStatement		284:71:10340:10606	1005699	0					
ANR	1005702	IdentifierDeclStatement	RCore * core = ( RCore * ) user ;	285:1:10343:10371	1005699	0	True				
ANR	1005703	IdentifierDecl	* core = ( RCore * ) user		1005699	0					
ANR	1005704	IdentifierDeclType	RCore *		1005699	0					
ANR	1005705	Identifier	core		1005699	1					
ANR	1005706	AssignmentExpression	* core = ( RCore * ) user		1005699	2		=			
ANR	1005707	Identifier	core		1005699	0					
ANR	1005708	CastExpression	( RCore * ) user		1005699	1					
ANR	1005709	CastTarget	RCore *		1005699	0					
ANR	1005710	Identifier	user		1005699	1					
ANR	1005711	IdentifierDeclStatement	"int depth = r_config_get_i ( core -> config , ""anal.depth"" ) ;"	286:1:10374:10429	1005699	1	True				
ANR	1005712	IdentifierDecl	"depth = r_config_get_i ( core -> config , ""anal.depth"" )"		1005699	0					
ANR	1005713	IdentifierDeclType	int		1005699	0					
ANR	1005714	Identifier	depth		1005699	1					
ANR	1005715	AssignmentExpression	"depth = r_config_get_i ( core -> config , ""anal.depth"" )"		1005699	2		=			
ANR	1005716	Identifier	depth		1005699	0					
ANR	1005717	CallExpression	"r_config_get_i ( core -> config , ""anal.depth"" )"		1005699	1					
ANR	1005718	Callee	r_config_get_i		1005699	0					
ANR	1005719	Identifier	r_config_get_i		1005699	0					
ANR	1005720	ArgumentList	core -> config		1005699	1					
ANR	1005721	Argument	core -> config		1005699	0					
ANR	1005722	PtrMemberAccess	core -> config		1005699	0					
ANR	1005723	Identifier	core		1005699	0					
ANR	1005724	Identifier	config		1005699	1					
ANR	1005725	Argument	"""anal.depth"""		1005699	1					
ANR	1005726	PrimaryExpression	"""anal.depth"""		1005699	0					
ANR	1005727	ExpressionStatement	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth )"	288:1:10517:10578	1005699	2	True				
ANR	1005728	CallExpression	"r_core_anal_fcn ( core , addr , - 1 , R_ANAL_REF_TYPE_NULL , depth )"		1005699	0					
ANR	1005729	Callee	r_core_anal_fcn		1005699	0					
ANR	1005730	Identifier	r_core_anal_fcn		1005699	0					
ANR	1005731	ArgumentList	core		1005699	1					
ANR	1005732	Argument	core		1005699	0					
ANR	1005733	Identifier	core		1005699	0					
ANR	1005734	Argument	addr		1005699	1					
ANR	1005735	Identifier	addr		1005699	0					
ANR	1005736	Argument	- 1		1005699	2					
ANR	1005737	UnaryOperationExpression	- 1		1005699	0					
ANR	1005738	UnaryOperator	-		1005699	0					
ANR	1005739	PrimaryExpression	1		1005699	1					
ANR	1005740	Argument	R_ANAL_REF_TYPE_NULL		1005699	3					
ANR	1005741	Identifier	R_ANAL_REF_TYPE_NULL		1005699	0					
ANR	1005742	Argument	depth		1005699	4					
ANR	1005743	Identifier	depth		1005699	0					
ANR	1005744	ExpressionStatement	preludecnt ++	289:1:10581:10593	1005699	3	True				
ANR	1005745	PostIncDecOperationExpression	preludecnt ++		1005699	0					
ANR	1005746	Identifier	preludecnt		1005699	0					
ANR	1005747	IncDec	++		1005699	1					
ANR	1005748	ReturnStatement	return 1 ;	290:1:10596:10604	1005699	4	True				
ANR	1005749	PrimaryExpression	1		1005699	0					
ANR	1005750	ReturnType	static int		1005699	1					
ANR	1005751	Identifier	__prelude_cb_hit		1005699	2					
ANR	1005752	ParameterList	"RSearchKeyword * kw , void * user , ut64 addr"		1005699	3					
ANR	1005753	Parameter	RSearchKeyword * kw	284:28:10297:10314	1005699	0	True				
ANR	1005754	ParameterType	RSearchKeyword *		1005699	0					
ANR	1005755	Identifier	kw		1005699	1					
ANR	1005756	Parameter	void * user	284:48:10317:10326	1005699	1	True				
ANR	1005757	ParameterType	void *		1005699	0					
ANR	1005758	Identifier	user		1005699	1					
ANR	1005759	Parameter	ut64 addr	284:60:10329:10337	1005699	2	True				
ANR	1005760	ParameterType	ut64		1005699	0					
ANR	1005761	Identifier	addr		1005699	1					
ANR	1005762	CFGEntryNode	ENTRY		1005699		True				
ANR	1005763	CFGExitNode	EXIT		1005699		True				
ANR	1005764	Symbol	core -> config		1005699						
ANR	1005765	Symbol	core		1005699						
ANR	1005766	Symbol	depth		1005699						
ANR	1005767	Symbol	preludecnt		1005699						
ANR	1005768	Symbol	r_config_get_i		1005699						
ANR	1005769	Symbol	* core		1005699						
ANR	1005770	Symbol	kw		1005699						
ANR	1005771	Symbol	addr		1005699						
ANR	1005772	Symbol	user		1005699						
ANR	1005773	Symbol	R_ANAL_REF_TYPE_NULL		1005699						
ANR	1005774	Function	r_core_search_prelude	293:0:10609:11979							
ANR	1005775	FunctionDef	"r_core_search_prelude (RCore * core , ut64 from , ut64 to , const ut8 * buf , int blen , const ut8 * mask , int mlen)"		1005774	0					
ANR	1005776	CompoundStatement		293:118:10727:11979	1005774	0					
ANR	1005777	IdentifierDeclStatement	ut64 at ;	294:1:10730:10737	1005774	0	True				
ANR	1005778	IdentifierDecl	at		1005774	0					
ANR	1005779	IdentifierDeclType	ut64		1005774	0					
ANR	1005780	Identifier	at		1005774	1					
ANR	1005781	IdentifierDeclStatement	ut8 * b = ( ut8 * ) malloc ( core -> blocksize ) ;	295:1:10740:10781	1005774	1	True				
ANR	1005782	IdentifierDecl	* b = ( ut8 * ) malloc ( core -> blocksize )		1005774	0					
ANR	1005783	IdentifierDeclType	ut8 *		1005774	0					
ANR	1005784	Identifier	b		1005774	1					
ANR	1005785	AssignmentExpression	* b = ( ut8 * ) malloc ( core -> blocksize )		1005774	2		=			
ANR	1005786	Identifier	b		1005774	0					
ANR	1005787	CastExpression	( ut8 * ) malloc ( core -> blocksize )		1005774	1					
ANR	1005788	CastTarget	ut8 *		1005774	0					
ANR	1005789	CallExpression	malloc ( core -> blocksize )		1005774	1					
ANR	1005790	Callee	malloc		1005774	0					
ANR	1005791	Identifier	malloc		1005774	0					
ANR	1005792	ArgumentList	core -> blocksize		1005774	1					
ANR	1005793	Argument	core -> blocksize		1005774	0					
ANR	1005794	PtrMemberAccess	core -> blocksize		1005774	0					
ANR	1005795	Identifier	core		1005774	0					
ANR	1005796	Identifier	blocksize		1005774	1					
ANR	1005797	IfStatement	if ( ! b )		1005774	2					
ANR	1005798	Condition	! b	296:5:10788:10789	1005774	0	True				
ANR	1005799	UnaryOperationExpression	! b		1005774	0					
ANR	1005800	UnaryOperator	!		1005774	0					
ANR	1005801	Identifier	b		1005774	1					
ANR	1005802	CompoundStatement		4:9:64:64	1005774	1					
ANR	1005803	ReturnStatement	return 0 ;	297:2:10796:10804	1005774	0	True				
ANR	1005804	PrimaryExpression	0		1005774	0					
ANR	1005805	IfStatement	if ( from >= to )		1005774	3					
ANR	1005806	Condition	from >= to	300:5:10842:10851	1005774	0	True				
ANR	1005807	RelationalExpression	from >= to		1005774	0		>=			
ANR	1005808	Identifier	from		1005774	0					
ANR	1005809	Identifier	to		1005774	1					
ANR	1005810	CompoundStatement		8:17:126:126	1005774	1					
ANR	1005811	Statement	eprintf	301:2:10858:10864	1005774	0	True				
ANR	1005812	Statement	(	301:10:10866:10866	1005774	1	True				
ANR	1005813	Statement	"""aap: Invalid search range 0x%08"""	301:11:10867:10899	1005774	2	True				
ANR	1005814	Statement	PFMT64x	301:44:10900:10906	1005774	3	True				
ANR	1005815	Statement	""" - 0x%08"""	301:52:10908:10917	1005774	4	True				
ANR	1005816	Statement	PFMT64x	301:62:10918:10924	1005774	5	True				
ANR	1005817	Statement	"""\\n"""	301:70:10926:10929	1005774	6	True				
ANR	1005818	Statement	","	301:74:10930:10930	1005774	7	True				
ANR	1005819	Statement	from	301:76:10932:10935	1005774	8	True				
ANR	1005820	Statement	","	301:80:10936:10936	1005774	9	True				
ANR	1005821	Statement	to	301:82:10938:10939	1005774	10	True				
ANR	1005822	Statement	)	301:84:10940:10940	1005774	11	True				
ANR	1005823	ExpressionStatement		301:85:10941:10941	1005774	12	True				
ANR	1005824	ExpressionStatement	free ( b )	302:2:10945:10953	1005774	13	True				
ANR	1005825	CallExpression	free ( b )		1005774	0					
ANR	1005826	Callee	free		1005774	0					
ANR	1005827	Identifier	free		1005774	0					
ANR	1005828	ArgumentList	b		1005774	1					
ANR	1005829	Argument	b		1005774	0					
ANR	1005830	Identifier	b		1005774	0					
ANR	1005831	ReturnStatement	return 0 ;	303:2:10957:10965	1005774	14	True				
ANR	1005832	PrimaryExpression	0		1005774	0					
ANR	1005833	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	305:1:10971:11018	1005774	4	True				
ANR	1005834	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1005774	0					
ANR	1005835	Callee	r_search_reset		1005774	0					
ANR	1005836	Identifier	r_search_reset		1005774	0					
ANR	1005837	ArgumentList	core -> search		1005774	1					
ANR	1005838	Argument	core -> search		1005774	0					
ANR	1005839	PtrMemberAccess	core -> search		1005774	0					
ANR	1005840	Identifier	core		1005774	0					
ANR	1005841	Identifier	search		1005774	1					
ANR	1005842	Argument	R_SEARCH_KEYWORD		1005774	1					
ANR	1005843	Identifier	R_SEARCH_KEYWORD		1005774	0					
ANR	1005844	ExpressionStatement	"r_search_kw_add ( core -> search , r_search_keyword_new ( buf , blen , mask , mlen , NULL ) )"	306:1:11021:11103	1005774	5	True				
ANR	1005845	CallExpression	"r_search_kw_add ( core -> search , r_search_keyword_new ( buf , blen , mask , mlen , NULL ) )"		1005774	0					
ANR	1005846	Callee	r_search_kw_add		1005774	0					
ANR	1005847	Identifier	r_search_kw_add		1005774	0					
ANR	1005848	ArgumentList	core -> search		1005774	1					
ANR	1005849	Argument	core -> search		1005774	0					
ANR	1005850	PtrMemberAccess	core -> search		1005774	0					
ANR	1005851	Identifier	core		1005774	0					
ANR	1005852	Identifier	search		1005774	1					
ANR	1005853	Argument	"r_search_keyword_new ( buf , blen , mask , mlen , NULL )"		1005774	1					
ANR	1005854	CallExpression	"r_search_keyword_new ( buf , blen , mask , mlen , NULL )"		1005774	0					
ANR	1005855	Callee	r_search_keyword_new		1005774	0					
ANR	1005856	Identifier	r_search_keyword_new		1005774	0					
ANR	1005857	ArgumentList	buf		1005774	1					
ANR	1005858	Argument	buf		1005774	0					
ANR	1005859	Identifier	buf		1005774	0					
ANR	1005860	Argument	blen		1005774	1					
ANR	1005861	Identifier	blen		1005774	0					
ANR	1005862	Argument	mask		1005774	2					
ANR	1005863	Identifier	mask		1005774	0					
ANR	1005864	Argument	mlen		1005774	3					
ANR	1005865	Identifier	mlen		1005774	0					
ANR	1005866	Argument	NULL		1005774	4					
ANR	1005867	Identifier	NULL		1005774	0					
ANR	1005868	ExpressionStatement	r_search_begin ( core -> search )	307:1:11106:11135	1005774	6	True				
ANR	1005869	CallExpression	r_search_begin ( core -> search )		1005774	0					
ANR	1005870	Callee	r_search_begin		1005774	0					
ANR	1005871	Identifier	r_search_begin		1005774	0					
ANR	1005872	ArgumentList	core -> search		1005774	1					
ANR	1005873	Argument	core -> search		1005774	0					
ANR	1005874	PtrMemberAccess	core -> search		1005774	0					
ANR	1005875	Identifier	core		1005774	0					
ANR	1005876	Identifier	search		1005774	1					
ANR	1005877	ExpressionStatement	"r_search_set_callback ( core -> search , & __prelude_cb_hit , core )"	308:1:11138:11199	1005774	7	True				
ANR	1005878	CallExpression	"r_search_set_callback ( core -> search , & __prelude_cb_hit , core )"		1005774	0					
ANR	1005879	Callee	r_search_set_callback		1005774	0					
ANR	1005880	Identifier	r_search_set_callback		1005774	0					
ANR	1005881	ArgumentList	core -> search		1005774	1					
ANR	1005882	Argument	core -> search		1005774	0					
ANR	1005883	PtrMemberAccess	core -> search		1005774	0					
ANR	1005884	Identifier	core		1005774	0					
ANR	1005885	Identifier	search		1005774	1					
ANR	1005886	Argument	& __prelude_cb_hit		1005774	1					
ANR	1005887	UnaryOperationExpression	& __prelude_cb_hit		1005774	0					
ANR	1005888	UnaryOperator	&		1005774	0					
ANR	1005889	Identifier	__prelude_cb_hit		1005774	1					
ANR	1005890	Argument	core		1005774	2					
ANR	1005891	Identifier	core		1005774	0					
ANR	1005892	ExpressionStatement	preludecnt = 0	309:1:11202:11216	1005774	8	True				
ANR	1005893	AssignmentExpression	preludecnt = 0		1005774	0		=			
ANR	1005894	Identifier	preludecnt		1005774	0					
ANR	1005895	PrimaryExpression	0		1005774	1					
ANR	1005896	ForStatement	for ( at = from ; at < to ; at += core -> blocksize )		1005774	9					
ANR	1005897	ForInit	at = from ;	310:6:11224:11233	1005774	0	True				
ANR	1005898	AssignmentExpression	at = from		1005774	0		=			
ANR	1005899	Identifier	at		1005774	0					
ANR	1005900	Identifier	from		1005774	1					
ANR	1005901	Condition	at < to	310:17:11235:11241	1005774	1	True				
ANR	1005902	RelationalExpression	at < to		1005774	0		<			
ANR	1005903	Identifier	at		1005774	0					
ANR	1005904	Identifier	to		1005774	1					
ANR	1005905	AssignmentExpression	at += core -> blocksize	310:26:11244:11264	1005774	2	True	+=			
ANR	1005906	Identifier	at		1005774	0					
ANR	1005907	PtrMemberAccess	core -> blocksize		1005774	1					
ANR	1005908	Identifier	core		1005774	0					
ANR	1005909	Identifier	blocksize		1005774	1					
ANR	1005910	CompoundStatement		18:49:539:539	1005774	3					
ANR	1005911	IfStatement	if ( r_cons_is_breaked ( ) )		1005774	0					
ANR	1005912	Condition	r_cons_is_breaked ( )	311:6:11275:11294	1005774	0	True				
ANR	1005913	CallExpression	r_cons_is_breaked ( )		1005774	0					
ANR	1005914	Callee	r_cons_is_breaked		1005774	0					
ANR	1005915	Identifier	r_cons_is_breaked		1005774	0					
ANR	1005916	ArgumentList			1005774	1					
ANR	1005917	CompoundStatement		19:28:569:569	1005774	1					
ANR	1005918	BreakStatement	break ;	312:3:11302:11307	1005774	0	True				
ANR	1005919	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at , 0 ) )"		1005774	1					
ANR	1005920	Condition	"! r_io_is_valid_offset ( core -> io , at , 0 )"	314:6:11319:11357	1005774	0	True				
ANR	1005921	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at , 0 )"		1005774	0					
ANR	1005922	UnaryOperator	!		1005774	0					
ANR	1005923	CallExpression	"r_io_is_valid_offset ( core -> io , at , 0 )"		1005774	1					
ANR	1005924	Callee	r_io_is_valid_offset		1005774	0					
ANR	1005925	Identifier	r_io_is_valid_offset		1005774	0					
ANR	1005926	ArgumentList	core -> io		1005774	1					
ANR	1005927	Argument	core -> io		1005774	0					
ANR	1005928	PtrMemberAccess	core -> io		1005774	0					
ANR	1005929	Identifier	core		1005774	0					
ANR	1005930	Identifier	io		1005774	1					
ANR	1005931	Argument	at		1005774	1					
ANR	1005932	Identifier	at		1005774	0					
ANR	1005933	Argument	0		1005774	2					
ANR	1005934	PrimaryExpression	0		1005774	0					
ANR	1005935	CompoundStatement		22:47:632:632	1005774	1					
ANR	1005936	BreakStatement	break ;	315:3:11365:11370	1005774	0	True				
ANR	1005937	ExpressionStatement	"( void ) r_io_read_at ( core -> io , at , b , core -> blocksize )"	317:2:11378:11431	1005774	2	True				
ANR	1005938	CastExpression	"( void ) r_io_read_at ( core -> io , at , b , core -> blocksize )"		1005774	0					
ANR	1005939	CastTarget	void		1005774	0					
ANR	1005940	CallExpression	"r_io_read_at ( core -> io , at , b , core -> blocksize )"		1005774	1					
ANR	1005941	Callee	r_io_read_at		1005774	0					
ANR	1005942	Identifier	r_io_read_at		1005774	0					
ANR	1005943	ArgumentList	core -> io		1005774	1					
ANR	1005944	Argument	core -> io		1005774	0					
ANR	1005945	PtrMemberAccess	core -> io		1005774	0					
ANR	1005946	Identifier	core		1005774	0					
ANR	1005947	Identifier	io		1005774	1					
ANR	1005948	Argument	at		1005774	1					
ANR	1005949	Identifier	at		1005774	0					
ANR	1005950	Argument	b		1005774	2					
ANR	1005951	Identifier	b		1005774	0					
ANR	1005952	Argument	core -> blocksize		1005774	3					
ANR	1005953	PtrMemberAccess	core -> blocksize		1005774	0					
ANR	1005954	Identifier	core		1005774	0					
ANR	1005955	Identifier	blocksize		1005774	1					
ANR	1005956	IfStatement	"if ( r_search_update ( core -> search , at , b , core -> blocksize ) == - 1 )"		1005774	3					
ANR	1005957	Condition	"r_search_update ( core -> search , at , b , core -> blocksize ) == - 1"	318:6:11439:11498	1005774	0	True				
ANR	1005958	EqualityExpression	"r_search_update ( core -> search , at , b , core -> blocksize ) == - 1"		1005774	0		==			
ANR	1005959	CallExpression	"r_search_update ( core -> search , at , b , core -> blocksize )"		1005774	0					
ANR	1005960	Callee	r_search_update		1005774	0					
ANR	1005961	Identifier	r_search_update		1005774	0					
ANR	1005962	ArgumentList	core -> search		1005774	1					
ANR	1005963	Argument	core -> search		1005774	0					
ANR	1005964	PtrMemberAccess	core -> search		1005774	0					
ANR	1005965	Identifier	core		1005774	0					
ANR	1005966	Identifier	search		1005774	1					
ANR	1005967	Argument	at		1005774	1					
ANR	1005968	Identifier	at		1005774	0					
ANR	1005969	Argument	b		1005774	2					
ANR	1005970	Identifier	b		1005774	0					
ANR	1005971	Argument	core -> blocksize		1005774	3					
ANR	1005972	PtrMemberAccess	core -> blocksize		1005774	0					
ANR	1005973	Identifier	core		1005774	0					
ANR	1005974	Identifier	blocksize		1005774	1					
ANR	1005975	UnaryOperationExpression	- 1		1005774	1					
ANR	1005976	UnaryOperator	-		1005774	0					
ANR	1005977	PrimaryExpression	1		1005774	1					
ANR	1005978	CompoundStatement		26:68:773:773	1005774	1					
ANR	1005979	Statement	eprintf	319:3:11506:11512	1005774	0	True				
ANR	1005980	Statement	(	319:11:11514:11514	1005774	1	True				
ANR	1005981	Statement	"""search: update read error at 0x%08"""	319:12:11515:11550	1005774	2	True				
ANR	1005982	Statement	PFMT64x	319:48:11551:11557	1005774	3	True				
ANR	1005983	Statement	"""\\n"""	319:56:11559:11562	1005774	4	True				
ANR	1005984	Statement	","	319:60:11563:11563	1005774	5	True				
ANR	1005985	Statement	at	319:62:11565:11566	1005774	6	True				
ANR	1005986	Statement	)	319:64:11567:11567	1005774	7	True				
ANR	1005987	ExpressionStatement		319:65:11568:11568	1005774	8	True				
ANR	1005988	BreakStatement	break ;	320:3:11573:11578	1005774	9	True				
ANR	1005989	ExpressionStatement	r_search_kw_reset ( core -> search )	326:1:11914:11946	1005774	10	True				
ANR	1005990	CallExpression	r_search_kw_reset ( core -> search )		1005774	0					
ANR	1005991	Callee	r_search_kw_reset		1005774	0					
ANR	1005992	Identifier	r_search_kw_reset		1005774	0					
ANR	1005993	ArgumentList	core -> search		1005774	1					
ANR	1005994	Argument	core -> search		1005774	0					
ANR	1005995	PtrMemberAccess	core -> search		1005774	0					
ANR	1005996	Identifier	core		1005774	0					
ANR	1005997	Identifier	search		1005774	1					
ANR	1005998	ExpressionStatement	free ( b )	327:1:11949:11957	1005774	11	True				
ANR	1005999	CallExpression	free ( b )		1005774	0					
ANR	1006000	Callee	free		1005774	0					
ANR	1006001	Identifier	free		1005774	0					
ANR	1006002	ArgumentList	b		1005774	1					
ANR	1006003	Argument	b		1005774	0					
ANR	1006004	Identifier	b		1005774	0					
ANR	1006005	ReturnStatement	return preludecnt ;	328:1:11960:11977	1005774	12	True				
ANR	1006006	Identifier	preludecnt		1005774	0					
ANR	1006007	ReturnType	R_API int		1005774	1					
ANR	1006008	Identifier	r_core_search_prelude		1005774	2					
ANR	1006009	ParameterList	"RCore * core , ut64 from , ut64 to , const ut8 * buf , int blen , const ut8 * mask , int mlen"		1005774	3					
ANR	1006010	Parameter	RCore * core	293:32:10641:10651	1005774	0	True				
ANR	1006011	ParameterType	RCore *		1005774	0					
ANR	1006012	Identifier	core		1005774	1					
ANR	1006013	Parameter	ut64 from	293:45:10654:10662	1005774	1	True				
ANR	1006014	ParameterType	ut64		1005774	0					
ANR	1006015	Identifier	from		1005774	1					
ANR	1006016	Parameter	ut64 to	293:56:10665:10671	1005774	2	True				
ANR	1006017	ParameterType	ut64		1005774	0					
ANR	1006018	Identifier	to		1005774	1					
ANR	1006019	Parameter	const ut8 * buf	293:65:10674:10687	1005774	3	True				
ANR	1006020	ParameterType	const ut8 *		1005774	0					
ANR	1006021	Identifier	buf		1005774	1					
ANR	1006022	Parameter	int blen	293:81:10690:10697	1005774	4	True				
ANR	1006023	ParameterType	int		1005774	0					
ANR	1006024	Identifier	blen		1005774	1					
ANR	1006025	Parameter	const ut8 * mask	293:91:10700:10714	1005774	5	True				
ANR	1006026	ParameterType	const ut8 *		1005774	0					
ANR	1006027	Identifier	mask		1005774	1					
ANR	1006028	Parameter	int mlen	293:108:10717:10724	1005774	6	True				
ANR	1006029	ParameterType	int		1005774	0					
ANR	1006030	Identifier	mlen		1005774	1					
ANR	1006031	CFGEntryNode	ENTRY		1005774		True				
ANR	1006032	CFGExitNode	EXIT		1005774		True				
ANR	1006033	Symbol	core -> blocksize		1005774						
ANR	1006034	Symbol	malloc		1005774						
ANR	1006035	Symbol	r_search_update		1005774						
ANR	1006036	Symbol	b		1005774						
ANR	1006037	Symbol	r_io_is_valid_offset		1005774						
ANR	1006038	Symbol	NULL		1005774						
ANR	1006039	Symbol	& __prelude_cb_hit		1005774						
ANR	1006040	Symbol	* core		1005774						
ANR	1006041	Symbol	core		1005774						
ANR	1006042	Symbol	buf		1005774						
ANR	1006043	Symbol	r_cons_is_breaked		1005774						
ANR	1006044	Symbol	at		1005774						
ANR	1006045	Symbol	core -> io		1005774						
ANR	1006046	Symbol	preludecnt		1005774						
ANR	1006047	Symbol	from		1005774						
ANR	1006048	Symbol	to		1005774						
ANR	1006049	Symbol	mlen		1005774						
ANR	1006050	Symbol	R_SEARCH_KEYWORD		1005774						
ANR	1006051	Symbol	blen		1005774						
ANR	1006052	Symbol	core -> search		1005774						
ANR	1006053	Symbol	r_search_keyword_new		1005774						
ANR	1006054	Symbol	mask		1005774						
ANR	1006055	Function	count_functions	331:0:11982:12066							
ANR	1006056	FunctionDef	count_functions (RCore * core)		1006055	0					
ANR	1006057	CompoundStatement		331:40:12022:12066	1006055	0					
ANR	1006058	ReturnStatement	return r_list_length ( core -> anal -> fcns ) ;	332:1:12025:12064	1006055	0	True				
ANR	1006059	CallExpression	r_list_length ( core -> anal -> fcns )		1006055	0					
ANR	1006060	Callee	r_list_length		1006055	0					
ANR	1006061	Identifier	r_list_length		1006055	0					
ANR	1006062	ArgumentList	core -> anal -> fcns		1006055	1					
ANR	1006063	Argument	core -> anal -> fcns		1006055	0					
ANR	1006064	PtrMemberAccess	core -> anal -> fcns		1006055	0					
ANR	1006065	PtrMemberAccess	core -> anal		1006055	0					
ANR	1006066	Identifier	core		1006055	0					
ANR	1006067	Identifier	anal		1006055	1					
ANR	1006068	Identifier	fcns		1006055	1					
ANR	1006069	ReturnType	static int		1006055	1					
ANR	1006070	Identifier	count_functions		1006055	2					
ANR	1006071	ParameterList	RCore * core		1006055	3					
ANR	1006072	Parameter	RCore * core	331:27:12009:12019	1006055	0	True				
ANR	1006073	ParameterType	RCore *		1006055	0					
ANR	1006074	Identifier	core		1006055	1					
ANR	1006075	CFGEntryNode	ENTRY		1006055		True				
ANR	1006076	CFGExitNode	EXIT		1006055		True				
ANR	1006077	Symbol	core		1006055						
ANR	1006078	Symbol	* core -> anal		1006055						
ANR	1006079	Symbol	* core		1006055						
ANR	1006080	Symbol	core -> anal -> fcns		1006055						
ANR	1006081	Symbol	core -> anal		1006055						
ANR	1006082	Symbol	* * core		1006055						
ANR	1006083	Symbol	r_list_length		1006055						
ANR	1006084	Function	r_core_search_preludes	335:0:12069:15459							
ANR	1006085	FunctionDef	"r_core_search_preludes (RCore * core , bool log)"		1006084	0					
ANR	1006086	CompoundStatement		335:56:12125:15459	1006084	0					
ANR	1006087	IdentifierDeclStatement	int ret = - 1 ;	336:1:12128:12140	1006084	0	True				
ANR	1006088	IdentifierDecl	ret = - 1		1006084	0					
ANR	1006089	IdentifierDeclType	int		1006084	0					
ANR	1006090	Identifier	ret		1006084	1					
ANR	1006091	AssignmentExpression	ret = - 1		1006084	2		=			
ANR	1006092	Identifier	ret		1006084	0					
ANR	1006093	UnaryOperationExpression	- 1		1006084	1					
ANR	1006094	UnaryOperator	-		1006084	0					
ANR	1006095	PrimaryExpression	1		1006084	1					
ANR	1006096	IdentifierDeclStatement	"const char * prelude = r_config_get ( core -> config , ""anal.prelude"" ) ;"	337:1:12143:12208	1006084	1	True				
ANR	1006097	IdentifierDecl	"* prelude = r_config_get ( core -> config , ""anal.prelude"" )"		1006084	0					
ANR	1006098	IdentifierDeclType	const char *		1006084	0					
ANR	1006099	Identifier	prelude		1006084	1					
ANR	1006100	AssignmentExpression	"* prelude = r_config_get ( core -> config , ""anal.prelude"" )"		1006084	2		=			
ANR	1006101	Identifier	prelude		1006084	0					
ANR	1006102	CallExpression	"r_config_get ( core -> config , ""anal.prelude"" )"		1006084	1					
ANR	1006103	Callee	r_config_get		1006084	0					
ANR	1006104	Identifier	r_config_get		1006084	0					
ANR	1006105	ArgumentList	core -> config		1006084	1					
ANR	1006106	Argument	core -> config		1006084	0					
ANR	1006107	PtrMemberAccess	core -> config		1006084	0					
ANR	1006108	Identifier	core		1006084	0					
ANR	1006109	Identifier	config		1006084	1					
ANR	1006110	Argument	"""anal.prelude"""		1006084	1					
ANR	1006111	PrimaryExpression	"""anal.prelude"""		1006084	0					
ANR	1006112	IdentifierDeclStatement	"const char * arch = r_config_get ( core -> config , ""asm.arch"" ) ;"	338:1:12211:12269	1006084	2	True				
ANR	1006113	IdentifierDecl	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		1006084	0					
ANR	1006114	IdentifierDeclType	const char *		1006084	0					
ANR	1006115	Identifier	arch		1006084	1					
ANR	1006116	AssignmentExpression	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		1006084	2		=			
ANR	1006117	Identifier	arch		1006084	0					
ANR	1006118	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		1006084	1					
ANR	1006119	Callee	r_config_get		1006084	0					
ANR	1006120	Identifier	r_config_get		1006084	0					
ANR	1006121	ArgumentList	core -> config		1006084	1					
ANR	1006122	Argument	core -> config		1006084	0					
ANR	1006123	PtrMemberAccess	core -> config		1006084	0					
ANR	1006124	Identifier	core		1006084	0					
ANR	1006125	Identifier	config		1006084	1					
ANR	1006126	Argument	"""asm.arch"""		1006084	1					
ANR	1006127	PrimaryExpression	"""asm.arch"""		1006084	0					
ANR	1006128	IdentifierDeclStatement	"int bits = r_config_get_i ( core -> config , ""asm.bits"" ) ;"	339:1:12272:12324	1006084	3	True				
ANR	1006129	IdentifierDecl	"bits = r_config_get_i ( core -> config , ""asm.bits"" )"		1006084	0					
ANR	1006130	IdentifierDeclType	int		1006084	0					
ANR	1006131	Identifier	bits		1006084	1					
ANR	1006132	AssignmentExpression	"bits = r_config_get_i ( core -> config , ""asm.bits"" )"		1006084	2		=			
ANR	1006133	Identifier	bits		1006084	0					
ANR	1006134	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		1006084	1					
ANR	1006135	Callee	r_config_get_i		1006084	0					
ANR	1006136	Identifier	r_config_get_i		1006084	0					
ANR	1006137	ArgumentList	core -> config		1006084	1					
ANR	1006138	Argument	core -> config		1006084	0					
ANR	1006139	PtrMemberAccess	core -> config		1006084	0					
ANR	1006140	Identifier	core		1006084	0					
ANR	1006141	Identifier	config		1006084	1					
ANR	1006142	Argument	"""asm.bits"""		1006084	1					
ANR	1006143	PrimaryExpression	"""asm.bits"""		1006084	0					
ANR	1006144	IdentifierDeclStatement	ut64 from = UT64_MAX ;	340:1:12327:12347	1006084	4	True				
ANR	1006145	IdentifierDecl	from = UT64_MAX		1006084	0					
ANR	1006146	IdentifierDeclType	ut64		1006084	0					
ANR	1006147	Identifier	from		1006084	1					
ANR	1006148	AssignmentExpression	from = UT64_MAX		1006084	2		=			
ANR	1006149	Identifier	UT64_MAX		1006084	0					
ANR	1006150	Identifier	UT64_MAX		1006084	1					
ANR	1006151	IdentifierDeclStatement	ut64 to = UT64_MAX ;	341:1:12350:12368	1006084	5	True				
ANR	1006152	IdentifierDecl	to = UT64_MAX		1006084	0					
ANR	1006153	IdentifierDeclType	ut64		1006084	0					
ANR	1006154	Identifier	to		1006084	1					
ANR	1006155	AssignmentExpression	to = UT64_MAX		1006084	2		=			
ANR	1006156	Identifier	UT64_MAX		1006084	0					
ANR	1006157	Identifier	UT64_MAX		1006084	1					
ANR	1006158	IdentifierDeclStatement	"const char * where = r_config_get ( core -> config , ""anal.in"" ) ;"	342:1:12371:12429	1006084	6	True				
ANR	1006159	IdentifierDecl	"* where = r_config_get ( core -> config , ""anal.in"" )"		1006084	0					
ANR	1006160	IdentifierDeclType	const char *		1006084	0					
ANR	1006161	Identifier	where		1006084	1					
ANR	1006162	AssignmentExpression	"* where = r_config_get ( core -> config , ""anal.in"" )"		1006084	2		=			
ANR	1006163	Identifier	where		1006084	0					
ANR	1006164	CallExpression	"r_config_get ( core -> config , ""anal.in"" )"		1006084	1					
ANR	1006165	Callee	r_config_get		1006084	0					
ANR	1006166	Identifier	r_config_get		1006084	0					
ANR	1006167	ArgumentList	core -> config		1006084	1					
ANR	1006168	Argument	core -> config		1006084	0					
ANR	1006169	PtrMemberAccess	core -> config		1006084	0					
ANR	1006170	Identifier	core		1006084	0					
ANR	1006171	Identifier	config		1006084	1					
ANR	1006172	Argument	"""anal.in"""		1006084	1					
ANR	1006173	PrimaryExpression	"""anal.in"""		1006084	0					
ANR	1006174	IdentifierDeclStatement	"RList * list = r_core_get_boundaries_prot ( core , R_PERM_X , where , ""search"" ) ;"	344:1:12433:12507	1006084	7	True				
ANR	1006175	IdentifierDecl	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , where , ""search"" )"		1006084	0					
ANR	1006176	IdentifierDeclType	RList *		1006084	0					
ANR	1006177	Identifier	list		1006084	1					
ANR	1006178	AssignmentExpression	"* list = r_core_get_boundaries_prot ( core , R_PERM_X , where , ""search"" )"		1006084	2		=			
ANR	1006179	Identifier	list		1006084	0					
ANR	1006180	CallExpression	"r_core_get_boundaries_prot ( core , R_PERM_X , where , ""search"" )"		1006084	1					
ANR	1006181	Callee	r_core_get_boundaries_prot		1006084	0					
ANR	1006182	Identifier	r_core_get_boundaries_prot		1006084	0					
ANR	1006183	ArgumentList	core		1006084	1					
ANR	1006184	Argument	core		1006084	0					
ANR	1006185	Identifier	core		1006084	0					
ANR	1006186	Argument	R_PERM_X		1006084	1					
ANR	1006187	Identifier	R_PERM_X		1006084	0					
ANR	1006188	Argument	where		1006084	2					
ANR	1006189	Identifier	where		1006084	0					
ANR	1006190	Argument	"""search"""		1006084	3					
ANR	1006191	PrimaryExpression	"""search"""		1006084	0					
ANR	1006192	IdentifierDeclStatement	RListIter * iter ;	345:1:12510:12525	1006084	8	True				
ANR	1006193	IdentifierDecl	* iter		1006084	0					
ANR	1006194	IdentifierDeclType	RListIter *		1006084	0					
ANR	1006195	Identifier	iter		1006084	1					
ANR	1006196	IdentifierDeclStatement	RIOMap * p ;	346:1:12528:12537	1006084	9	True				
ANR	1006197	IdentifierDecl	* p		1006084	0					
ANR	1006198	IdentifierDeclType	RIOMap *		1006084	0					
ANR	1006199	Identifier	p		1006084	1					
ANR	1006200	IfStatement	if ( ! list )		1006084	10					
ANR	1006201	Condition	! list	348:5:12545:12549	1006084	0	True				
ANR	1006202	UnaryOperationExpression	! list		1006084	0					
ANR	1006203	UnaryOperator	!		1006084	0					
ANR	1006204	Identifier	list		1006084	1					
ANR	1006205	CompoundStatement		14:12:426:426	1006084	1					
ANR	1006206	ReturnStatement	return - 1 ;	349:2:12556:12565	1006084	0	True				
ANR	1006207	UnaryOperationExpression	- 1		1006084	0					
ANR	1006208	UnaryOperator	-		1006084	0					
ANR	1006209	PrimaryExpression	1		1006084	1					
ANR	1006210	IdentifierDeclStatement	int fc0 = count_functions ( core ) ;	352:1:12572:12604	1006084	11	True				
ANR	1006211	IdentifierDecl	fc0 = count_functions ( core )		1006084	0					
ANR	1006212	IdentifierDeclType	int		1006084	0					
ANR	1006213	Identifier	fc0		1006084	1					
ANR	1006214	AssignmentExpression	fc0 = count_functions ( core )		1006084	2		=			
ANR	1006215	Identifier	fc0		1006084	0					
ANR	1006216	CallExpression	count_functions ( core )		1006084	1					
ANR	1006217	Callee	count_functions		1006084	0					
ANR	1006218	Identifier	count_functions		1006084	0					
ANR	1006219	ArgumentList	core		1006084	1					
ANR	1006220	Argument	core		1006084	0					
ANR	1006221	Identifier	core		1006084	0					
ANR	1006222	Statement	r_list_foreach	353:1:12607:12620	1006084	12	True				
ANR	1006223	Statement	(	353:16:12622:12622	1006084	13	True				
ANR	1006224	Statement	list	353:17:12623:12626	1006084	14	True				
ANR	1006225	Statement	","	353:21:12627:12627	1006084	15	True				
ANR	1006226	Statement	iter	353:23:12629:12632	1006084	16	True				
ANR	1006227	Statement	","	353:27:12633:12633	1006084	17	True				
ANR	1006228	Statement	p	353:29:12635:12635	1006084	18	True				
ANR	1006229	Statement	)	353:30:12636:12636	1006084	19	True				
ANR	1006230	CompoundStatement		19:32:512:512	1006084	20					
ANR	1006231	IfStatement	if ( log )		1006084	0					
ANR	1006232	Condition	log	354:6:12646:12648	1006084	0	True				
ANR	1006233	Identifier	log		1006084	0					
ANR	1006234	CompoundStatement		20:11:525:525	1006084	1					
ANR	1006235	Statement	eprintf	355:3:12656:12662	1006084	0	True				
ANR	1006236	Statement	(	355:11:12664:12664	1006084	1	True				
ANR	1006237	Statement	"""\\r[>] Scanning %s 0x%"""	355:12:12665:12687	1006084	2	True				
ANR	1006238	Statement	PFMT64x	355:35:12688:12694	1006084	3	True				
ANR	1006239	Statement	""" - 0x%"""	355:43:12696:12703	1006084	4	True				
ANR	1006240	Statement	PFMT64x	355:51:12704:12710	1006084	5	True				
ANR	1006241	Statement	""" """	355:59:12712:12714	1006084	6	True				
ANR	1006242	Statement	","	355:62:12715:12715	1006084	7	True				
ANR	1006243	Statement	r_str_rwx_i	356:4:12721:12731	1006084	8	True				
ANR	1006244	Statement	(	356:16:12733:12733	1006084	9	True				
ANR	1006245	Statement	p	356:17:12734:12734	1006084	10	True				
ANR	1006246	Statement	->	356:18:12735:12736	1006084	11	True				
ANR	1006247	Statement	perm	356:20:12737:12740	1006084	12	True				
ANR	1006248	Statement	)	356:24:12741:12741	1006084	13	True				
ANR	1006249	Statement	","	356:25:12742:12742	1006084	14	True				
ANR	1006250	Statement	p	356:27:12744:12744	1006084	15	True				
ANR	1006251	Statement	->	356:28:12745:12746	1006084	16	True				
ANR	1006252	Statement	itv	356:30:12747:12749	1006084	17	True				
ANR	1006253	Statement	.	356:33:12750:12750	1006084	18	True				
ANR	1006254	Statement	addr	356:34:12751:12754	1006084	19	True				
ANR	1006255	Statement	","	356:38:12755:12755	1006084	20	True				
ANR	1006256	Statement	r_itv_end	356:40:12757:12765	1006084	21	True				
ANR	1006257	Statement	(	356:50:12767:12767	1006084	22	True				
ANR	1006258	Statement	p	356:51:12768:12768	1006084	23	True				
ANR	1006259	Statement	->	356:52:12769:12770	1006084	24	True				
ANR	1006260	Statement	itv	356:54:12771:12773	1006084	25	True				
ANR	1006261	Statement	)	356:57:12774:12774	1006084	26	True				
ANR	1006262	Statement	)	356:58:12775:12775	1006084	27	True				
ANR	1006263	ExpressionStatement		356:59:12776:12776	1006084	28	True				
ANR	1006264	IfStatement	if ( ! ( p -> perm & R_PERM_X ) )		1006084	29					
ANR	1006265	Condition	! ( p -> perm & R_PERM_X )	357:7:12785:12805	1006084	0	True				
ANR	1006266	UnaryOperationExpression	! ( p -> perm & R_PERM_X )		1006084	0					
ANR	1006267	UnaryOperator	!		1006084	0					
ANR	1006268	BitAndExpression	p -> perm & R_PERM_X		1006084	1		&			
ANR	1006269	PtrMemberAccess	p -> perm		1006084	0					
ANR	1006270	Identifier	p		1006084	0					
ANR	1006271	Identifier	perm		1006084	1					
ANR	1006272	Identifier	R_PERM_X		1006084	1					
ANR	1006273	CompoundStatement		23:30:682:682	1006084	1					
ANR	1006274	ExpressionStatement	"eprintf ( ""skip\\n"" )"	358:4:12814:12832	1006084	0	True				
ANR	1006275	CallExpression	"eprintf ( ""skip\\n"" )"		1006084	0					
ANR	1006276	Callee	eprintf		1006084	0					
ANR	1006277	Identifier	eprintf		1006084	0					
ANR	1006278	ArgumentList	"""skip\\n"""		1006084	1					
ANR	1006279	Argument	"""skip\\n"""		1006084	0					
ANR	1006280	PrimaryExpression	"""skip\\n"""		1006084	0					
ANR	1006281	ContinueStatement	continue ;	359:4:12838:12846	1006084	1	True				
ANR	1006282	ExpressionStatement	from = p -> itv . addr	362:2:12859:12877	1006084	1	True				
ANR	1006283	AssignmentExpression	from = p -> itv . addr		1006084	0		=			
ANR	1006284	Identifier	from		1006084	0					
ANR	1006285	MemberAccess	p -> itv . addr		1006084	1					
ANR	1006286	PtrMemberAccess	p -> itv		1006084	0					
ANR	1006287	Identifier	p		1006084	0					
ANR	1006288	Identifier	itv		1006084	1					
ANR	1006289	Identifier	addr		1006084	1					
ANR	1006290	ExpressionStatement	to = r_itv_end ( p -> itv )	363:2:12881:12904	1006084	2	True				
ANR	1006291	AssignmentExpression	to = r_itv_end ( p -> itv )		1006084	0		=			
ANR	1006292	Identifier	to		1006084	0					
ANR	1006293	CallExpression	r_itv_end ( p -> itv )		1006084	1					
ANR	1006294	Callee	r_itv_end		1006084	0					
ANR	1006295	Identifier	r_itv_end		1006084	0					
ANR	1006296	ArgumentList	p -> itv		1006084	1					
ANR	1006297	Argument	p -> itv		1006084	0					
ANR	1006298	PtrMemberAccess	p -> itv		1006084	0					
ANR	1006299	Identifier	p		1006084	0					
ANR	1006300	Identifier	itv		1006084	1					
ANR	1006301	IfStatement	if ( prelude && * prelude )		1006084	3					
ANR	1006302	Condition	prelude && * prelude	364:6:12912:12930	1006084	0	True				
ANR	1006303	AndExpression	prelude && * prelude		1006084	0		&&			
ANR	1006304	Identifier	prelude		1006084	0					
ANR	1006305	UnaryOperationExpression	* prelude		1006084	1					
ANR	1006306	UnaryOperator	*		1006084	0					
ANR	1006307	Identifier	prelude		1006084	1					
ANR	1006308	CompoundStatement		32:3:856:895	1006084	1					
ANR	1006309	IdentifierDeclStatement	ut8 * kw = malloc ( strlen ( prelude ) + 1 ) ;	365:3:12938:12977	1006084	0	True				
ANR	1006310	IdentifierDecl	* kw = malloc ( strlen ( prelude ) + 1 )		1006084	0					
ANR	1006311	IdentifierDeclType	ut8 *		1006084	0					
ANR	1006312	Identifier	kw		1006084	1					
ANR	1006313	AssignmentExpression	* kw = malloc ( strlen ( prelude ) + 1 )		1006084	2		=			
ANR	1006314	Identifier	kw		1006084	0					
ANR	1006315	CallExpression	malloc ( strlen ( prelude ) + 1 )		1006084	1					
ANR	1006316	Callee	malloc		1006084	0					
ANR	1006317	Identifier	malloc		1006084	0					
ANR	1006318	ArgumentList	strlen ( prelude ) + 1		1006084	1					
ANR	1006319	Argument	strlen ( prelude ) + 1		1006084	0					
ANR	1006320	AdditiveExpression	strlen ( prelude ) + 1		1006084	0		+			
ANR	1006321	CallExpression	strlen ( prelude )		1006084	0					
ANR	1006322	Callee	strlen		1006084	0					
ANR	1006323	Identifier	strlen		1006084	0					
ANR	1006324	ArgumentList	prelude		1006084	1					
ANR	1006325	Argument	prelude		1006084	0					
ANR	1006326	Identifier	prelude		1006084	0					
ANR	1006327	PrimaryExpression	1		1006084	1					
ANR	1006328	IdentifierDeclStatement	"int kwlen = r_hex_str2bin ( prelude , kw ) ;"	366:3:12982:13021	1006084	1	True				
ANR	1006329	IdentifierDecl	"kwlen = r_hex_str2bin ( prelude , kw )"		1006084	0					
ANR	1006330	IdentifierDeclType	int		1006084	0					
ANR	1006331	Identifier	kwlen		1006084	1					
ANR	1006332	AssignmentExpression	"kwlen = r_hex_str2bin ( prelude , kw )"		1006084	2		=			
ANR	1006333	Identifier	kwlen		1006084	0					
ANR	1006334	CallExpression	"r_hex_str2bin ( prelude , kw )"		1006084	1					
ANR	1006335	Callee	r_hex_str2bin		1006084	0					
ANR	1006336	Identifier	r_hex_str2bin		1006084	0					
ANR	1006337	ArgumentList	prelude		1006084	1					
ANR	1006338	Argument	prelude		1006084	0					
ANR	1006339	Identifier	prelude		1006084	0					
ANR	1006340	Argument	kw		1006084	1					
ANR	1006341	Identifier	kw		1006084	0					
ANR	1006342	ExpressionStatement	"ret = r_core_search_prelude ( core , from , to , kw , kwlen , NULL , 0 )"	367:3:13026:13090	1006084	2	True				
ANR	1006343	AssignmentExpression	"ret = r_core_search_prelude ( core , from , to , kw , kwlen , NULL , 0 )"		1006084	0		=			
ANR	1006344	Identifier	ret		1006084	0					
ANR	1006345	CallExpression	"r_core_search_prelude ( core , from , to , kw , kwlen , NULL , 0 )"		1006084	1					
ANR	1006346	Callee	r_core_search_prelude		1006084	0					
ANR	1006347	Identifier	r_core_search_prelude		1006084	0					
ANR	1006348	ArgumentList	core		1006084	1					
ANR	1006349	Argument	core		1006084	0					
ANR	1006350	Identifier	core		1006084	0					
ANR	1006351	Argument	from		1006084	1					
ANR	1006352	Identifier	from		1006084	0					
ANR	1006353	Argument	to		1006084	2					
ANR	1006354	Identifier	to		1006084	0					
ANR	1006355	Argument	kw		1006084	3					
ANR	1006356	Identifier	kw		1006084	0					
ANR	1006357	Argument	kwlen		1006084	4					
ANR	1006358	Identifier	kwlen		1006084	0					
ANR	1006359	Argument	NULL		1006084	5					
ANR	1006360	Identifier	NULL		1006084	0					
ANR	1006361	Argument	0		1006084	6					
ANR	1006362	PrimaryExpression	0		1006084	0					
ANR	1006363	ExpressionStatement	free ( kw )	368:3:13095:13104	1006084	3	True				
ANR	1006364	CallExpression	free ( kw )		1006084	0					
ANR	1006365	Callee	free		1006084	0					
ANR	1006366	Identifier	free		1006084	0					
ANR	1006367	ArgumentList	kw		1006084	1					
ANR	1006368	Argument	kw		1006084	0					
ANR	1006369	Identifier	kw		1006084	0					
ANR	1006370	ElseStatement	else		1006084	0					
ANR	1006371	IfStatement	"if ( strstr ( arch , ""ppc"" ) )"		1006084	0					
ANR	1006372	Condition	"strstr ( arch , ""ppc"" )"	369:13:13119:13138	1006084	0	True				
ANR	1006373	CallExpression	"strstr ( arch , ""ppc"" )"		1006084	0					
ANR	1006374	Callee	strstr		1006084	0					
ANR	1006375	Identifier	strstr		1006084	0					
ANR	1006376	ArgumentList	arch		1006084	1					
ANR	1006377	Argument	arch		1006084	0					
ANR	1006378	Identifier	arch		1006084	0					
ANR	1006379	Argument	"""ppc"""		1006084	1					
ANR	1006380	PrimaryExpression	"""ppc"""		1006084	0					
ANR	1006381	CompoundStatement		35:35:1015:1015	1006084	1					
ANR	1006382	ExpressionStatement	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x7c\\x08\\x02\\xa6"" , 4 , NULL , 0 )"	370:3:13146:13240	1006084	0	True				
ANR	1006383	AssignmentExpression	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x7c\\x08\\x02\\xa6"" , 4 , NULL , 0 )"		1006084	0		=			
ANR	1006384	Identifier	ret		1006084	0					
ANR	1006385	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x7c\\x08\\x02\\xa6"" , 4 , NULL , 0 )"		1006084	1					
ANR	1006386	Callee	r_core_search_prelude		1006084	0					
ANR	1006387	Identifier	r_core_search_prelude		1006084	0					
ANR	1006388	ArgumentList	core		1006084	1					
ANR	1006389	Argument	core		1006084	0					
ANR	1006390	Identifier	core		1006084	0					
ANR	1006391	Argument	from		1006084	1					
ANR	1006392	Identifier	from		1006084	0					
ANR	1006393	Argument	to		1006084	2					
ANR	1006394	Identifier	to		1006084	0					
ANR	1006395	Argument	"( const ut8 * ) ""\\x7c\\x08\\x02\\xa6"""		1006084	3					
ANR	1006396	CastExpression	"( const ut8 * ) ""\\x7c\\x08\\x02\\xa6"""		1006084	0					
ANR	1006397	CastTarget	const ut8 *		1006084	0					
ANR	1006398	PrimaryExpression	"""\\x7c\\x08\\x02\\xa6"""		1006084	1					
ANR	1006399	Argument	4		1006084	4					
ANR	1006400	PrimaryExpression	4		1006084	0					
ANR	1006401	Argument	NULL		1006084	5					
ANR	1006402	Identifier	NULL		1006084	0					
ANR	1006403	Argument	0		1006084	6					
ANR	1006404	PrimaryExpression	0		1006084	0					
ANR	1006405	ElseStatement	else		1006084	0					
ANR	1006406	IfStatement	"if ( strstr ( arch , ""arm"" ) )"		1006084	0					
ANR	1006407	Condition	"strstr ( arch , ""arm"" )"	372:13:13255:13274	1006084	0	True				
ANR	1006408	CallExpression	"strstr ( arch , ""arm"" )"		1006084	0					
ANR	1006409	Callee	strstr		1006084	0					
ANR	1006410	Identifier	strstr		1006084	0					
ANR	1006411	ArgumentList	arch		1006084	1					
ANR	1006412	Argument	arch		1006084	0					
ANR	1006413	Identifier	arch		1006084	0					
ANR	1006414	Argument	"""arm"""		1006084	1					
ANR	1006415	PrimaryExpression	"""arm"""		1006084	0					
ANR	1006416	CompoundStatement		38:35:1151:1151	1006084	1					
ANR	1006417	SwitchStatement	switch ( bits )		1006084	0					
ANR	1006418	Condition	bits	373:11:13290:13293	1006084	0	True				
ANR	1006419	Identifier	bits		1006084	0					
ANR	1006420	CompoundStatement		39:17:1170:1170	1006084	1					
ANR	1006421	Label	case 16 :	374:3:13301:13308	1006084	0	True				
ANR	1006422	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x00\\xb5"" , 2 , ( const ut8 * ) ""\\x0f\\xff"" , 2 )"	375:4:13314:13413	1006084	1	True				
ANR	1006423	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x00\\xb5"" , 2 , ( const ut8 * ) ""\\x0f\\xff"" , 2 )"		1006084	0					
ANR	1006424	Callee	r_core_search_prelude		1006084	0					
ANR	1006425	Identifier	r_core_search_prelude		1006084	0					
ANR	1006426	ArgumentList	core		1006084	1					
ANR	1006427	Argument	core		1006084	0					
ANR	1006428	Identifier	core		1006084	0					
ANR	1006429	Argument	from		1006084	1					
ANR	1006430	Identifier	from		1006084	0					
ANR	1006431	Argument	to		1006084	2					
ANR	1006432	Identifier	to		1006084	0					
ANR	1006433	Argument	"( const ut8 * ) ""\\x00\\xb5"""		1006084	3					
ANR	1006434	CastExpression	"( const ut8 * ) ""\\x00\\xb5"""		1006084	0					
ANR	1006435	CastTarget	const ut8 *		1006084	0					
ANR	1006436	PrimaryExpression	"""\\x00\\xb5"""		1006084	1					
ANR	1006437	Argument	2		1006084	4					
ANR	1006438	PrimaryExpression	2		1006084	0					
ANR	1006439	Argument	"( const ut8 * ) ""\\x0f\\xff"""		1006084	5					
ANR	1006440	CastExpression	"( const ut8 * ) ""\\x0f\\xff"""		1006084	0					
ANR	1006441	CastTarget	const ut8 *		1006084	0					
ANR	1006442	PrimaryExpression	"""\\x0f\\xff"""		1006084	1					
ANR	1006443	Argument	2		1006084	6					
ANR	1006444	PrimaryExpression	2		1006084	0					
ANR	1006445	ExpressionStatement	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x08\\xb5"" , 2 , ( const ut8 * ) ""\\x0f\\xff"" , 2 )"	377:4:13419:13524	1006084	2	True				
ANR	1006446	AssignmentExpression	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x08\\xb5"" , 2 , ( const ut8 * ) ""\\x0f\\xff"" , 2 )"		1006084	0		=			
ANR	1006447	Identifier	ret		1006084	0					
ANR	1006448	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x08\\xb5"" , 2 , ( const ut8 * ) ""\\x0f\\xff"" , 2 )"		1006084	1					
ANR	1006449	Callee	r_core_search_prelude		1006084	0					
ANR	1006450	Identifier	r_core_search_prelude		1006084	0					
ANR	1006451	ArgumentList	core		1006084	1					
ANR	1006452	Argument	core		1006084	0					
ANR	1006453	Identifier	core		1006084	0					
ANR	1006454	Argument	from		1006084	1					
ANR	1006455	Identifier	from		1006084	0					
ANR	1006456	Argument	to		1006084	2					
ANR	1006457	Identifier	to		1006084	0					
ANR	1006458	Argument	"( const ut8 * ) ""\\x08\\xb5"""		1006084	3					
ANR	1006459	CastExpression	"( const ut8 * ) ""\\x08\\xb5"""		1006084	0					
ANR	1006460	CastTarget	const ut8 *		1006084	0					
ANR	1006461	PrimaryExpression	"""\\x08\\xb5"""		1006084	1					
ANR	1006462	Argument	2		1006084	4					
ANR	1006463	PrimaryExpression	2		1006084	0					
ANR	1006464	Argument	"( const ut8 * ) ""\\x0f\\xff"""		1006084	5					
ANR	1006465	CastExpression	"( const ut8 * ) ""\\x0f\\xff"""		1006084	0					
ANR	1006466	CastTarget	const ut8 *		1006084	0					
ANR	1006467	PrimaryExpression	"""\\x0f\\xff"""		1006084	1					
ANR	1006468	Argument	2		1006084	6					
ANR	1006469	PrimaryExpression	2		1006084	0					
ANR	1006470	BreakStatement	break ;	379:4:13530:13535	1006084	3	True				
ANR	1006471	Label	case 32 :	380:3:13540:13547	1006084	4	True				
ANR	1006472	ExpressionStatement	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x00\\x00\\x2d\\xe9"" , 4 , ( const ut8 * ) ""\\x0f\\x0f\\xff\\xff"" , 4 )"	381:4:13553:13681	1006084	5	True				
ANR	1006473	AssignmentExpression	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x00\\x00\\x2d\\xe9"" , 4 , ( const ut8 * ) ""\\x0f\\x0f\\xff\\xff"" , 4 )"		1006084	0		=			
ANR	1006474	Identifier	ret		1006084	0					
ANR	1006475	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x00\\x00\\x2d\\xe9"" , 4 , ( const ut8 * ) ""\\x0f\\x0f\\xff\\xff"" , 4 )"		1006084	1					
ANR	1006476	Callee	r_core_search_prelude		1006084	0					
ANR	1006477	Identifier	r_core_search_prelude		1006084	0					
ANR	1006478	ArgumentList	core		1006084	1					
ANR	1006479	Argument	core		1006084	0					
ANR	1006480	Identifier	core		1006084	0					
ANR	1006481	Argument	from		1006084	1					
ANR	1006482	Identifier	from		1006084	0					
ANR	1006483	Argument	to		1006084	2					
ANR	1006484	Identifier	to		1006084	0					
ANR	1006485	Argument	"( const ut8 * ) ""\\x00\\x00\\x2d\\xe9"""		1006084	3					
ANR	1006486	CastExpression	"( const ut8 * ) ""\\x00\\x00\\x2d\\xe9"""		1006084	0					
ANR	1006487	CastTarget	const ut8 *		1006084	0					
ANR	1006488	PrimaryExpression	"""\\x00\\x00\\x2d\\xe9"""		1006084	1					
ANR	1006489	Argument	4		1006084	4					
ANR	1006490	PrimaryExpression	4		1006084	0					
ANR	1006491	Argument	"( const ut8 * ) ""\\x0f\\x0f\\xff\\xff"""		1006084	5					
ANR	1006492	CastExpression	"( const ut8 * ) ""\\x0f\\x0f\\xff\\xff"""		1006084	0					
ANR	1006493	CastTarget	const ut8 *		1006084	0					
ANR	1006494	PrimaryExpression	"""\\x0f\\x0f\\xff\\xff"""		1006084	1					
ANR	1006495	Argument	4		1006084	6					
ANR	1006496	PrimaryExpression	4		1006084	0					
ANR	1006497	BreakStatement	break ;	384:4:13687:13692	1006084	6	True				
ANR	1006498	Label	case 64 :	385:3:13697:13704	1006084	7	True				
ANR	1006499	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\xf0\\x00\\x00\\xd1"" , 4 , ( const ut8 * ) ""\\xf0\\x00\\x00\\xff"" , 4 )"	386:4:13710:13820	1006084	8	True				
ANR	1006500	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\xf0\\x00\\x00\\xd1"" , 4 , ( const ut8 * ) ""\\xf0\\x00\\x00\\xff"" , 4 )"		1006084	0					
ANR	1006501	Callee	r_core_search_prelude		1006084	0					
ANR	1006502	Identifier	r_core_search_prelude		1006084	0					
ANR	1006503	ArgumentList	core		1006084	1					
ANR	1006504	Argument	core		1006084	0					
ANR	1006505	Identifier	core		1006084	0					
ANR	1006506	Argument	from		1006084	1					
ANR	1006507	Identifier	from		1006084	0					
ANR	1006508	Argument	to		1006084	2					
ANR	1006509	Identifier	to		1006084	0					
ANR	1006510	Argument	"( const ut8 * ) ""\\xf0\\x00\\x00\\xd1"""		1006084	3					
ANR	1006511	CastExpression	"( const ut8 * ) ""\\xf0\\x00\\x00\\xd1"""		1006084	0					
ANR	1006512	CastTarget	const ut8 *		1006084	0					
ANR	1006513	PrimaryExpression	"""\\xf0\\x00\\x00\\xd1"""		1006084	1					
ANR	1006514	Argument	4		1006084	4					
ANR	1006515	PrimaryExpression	4		1006084	0					
ANR	1006516	Argument	"( const ut8 * ) ""\\xf0\\x00\\x00\\xff"""		1006084	5					
ANR	1006517	CastExpression	"( const ut8 * ) ""\\xf0\\x00\\x00\\xff"""		1006084	0					
ANR	1006518	CastTarget	const ut8 *		1006084	0					
ANR	1006519	PrimaryExpression	"""\\xf0\\x00\\x00\\xff"""		1006084	1					
ANR	1006520	Argument	4		1006084	6					
ANR	1006521	PrimaryExpression	4		1006084	0					
ANR	1006522	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\xf0\\x00\\x00\\xa9"" , 4 , ( const ut8 * ) ""\\xf0\\x00\\x00\\xff"" , 4 )"	387:4:13826:13936	1006084	9	True				
ANR	1006523	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\xf0\\x00\\x00\\xa9"" , 4 , ( const ut8 * ) ""\\xf0\\x00\\x00\\xff"" , 4 )"		1006084	0					
ANR	1006524	Callee	r_core_search_prelude		1006084	0					
ANR	1006525	Identifier	r_core_search_prelude		1006084	0					
ANR	1006526	ArgumentList	core		1006084	1					
ANR	1006527	Argument	core		1006084	0					
ANR	1006528	Identifier	core		1006084	0					
ANR	1006529	Argument	from		1006084	1					
ANR	1006530	Identifier	from		1006084	0					
ANR	1006531	Argument	to		1006084	2					
ANR	1006532	Identifier	to		1006084	0					
ANR	1006533	Argument	"( const ut8 * ) ""\\xf0\\x00\\x00\\xa9"""		1006084	3					
ANR	1006534	CastExpression	"( const ut8 * ) ""\\xf0\\x00\\x00\\xa9"""		1006084	0					
ANR	1006535	CastTarget	const ut8 *		1006084	0					
ANR	1006536	PrimaryExpression	"""\\xf0\\x00\\x00\\xa9"""		1006084	1					
ANR	1006537	Argument	4		1006084	4					
ANR	1006538	PrimaryExpression	4		1006084	0					
ANR	1006539	Argument	"( const ut8 * ) ""\\xf0\\x00\\x00\\xff"""		1006084	5					
ANR	1006540	CastExpression	"( const ut8 * ) ""\\xf0\\x00\\x00\\xff"""		1006084	0					
ANR	1006541	CastTarget	const ut8 *		1006084	0					
ANR	1006542	PrimaryExpression	"""\\xf0\\x00\\x00\\xff"""		1006084	1					
ANR	1006543	Argument	4		1006084	6					
ANR	1006544	PrimaryExpression	4		1006084	0					
ANR	1006545	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x7f\\x23\\x03\\xd5\\xff"" , 5 , NULL , 0 )"	389:4:13970:14058	1006084	10	True				
ANR	1006546	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x7f\\x23\\x03\\xd5\\xff"" , 5 , NULL , 0 )"		1006084	0					
ANR	1006547	Callee	r_core_search_prelude		1006084	0					
ANR	1006548	Identifier	r_core_search_prelude		1006084	0					
ANR	1006549	ArgumentList	core		1006084	1					
ANR	1006550	Argument	core		1006084	0					
ANR	1006551	Identifier	core		1006084	0					
ANR	1006552	Argument	from		1006084	1					
ANR	1006553	Identifier	from		1006084	0					
ANR	1006554	Argument	to		1006084	2					
ANR	1006555	Identifier	to		1006084	0					
ANR	1006556	Argument	"( const ut8 * ) ""\\x7f\\x23\\x03\\xd5\\xff"""		1006084	3					
ANR	1006557	CastExpression	"( const ut8 * ) ""\\x7f\\x23\\x03\\xd5\\xff"""		1006084	0					
ANR	1006558	CastTarget	const ut8 *		1006084	0					
ANR	1006559	PrimaryExpression	"""\\x7f\\x23\\x03\\xd5\\xff"""		1006084	1					
ANR	1006560	Argument	5		1006084	4					
ANR	1006561	PrimaryExpression	5		1006084	0					
ANR	1006562	Argument	NULL		1006084	5					
ANR	1006563	Identifier	NULL		1006084	0					
ANR	1006564	Argument	0		1006084	6					
ANR	1006565	PrimaryExpression	0		1006084	0					
ANR	1006566	BreakStatement	break ;	390:4:14064:14069	1006084	11	True				
ANR	1006567	Label	default :	391:3:14074:14081	1006084	12	True				
ANR	1006568	Identifier	default		1006084	0					
ANR	1006569	IfStatement	if ( log )		1006084	13					
ANR	1006570	Condition	log	392:8:14091:14093	1006084	0	True				
ANR	1006571	Identifier	log		1006084	0					
ANR	1006572	CompoundStatement		58:13:1970:1970	1006084	1					
ANR	1006573	ExpressionStatement	"eprintf ( ""ap: Unsupported bits: %d\\n"" , bits )"	393:5:14103:14147	1006084	0	True				
ANR	1006574	CallExpression	"eprintf ( ""ap: Unsupported bits: %d\\n"" , bits )"		1006084	0					
ANR	1006575	Callee	eprintf		1006084	0					
ANR	1006576	Identifier	eprintf		1006084	0					
ANR	1006577	ArgumentList	"""ap: Unsupported bits: %d\\n"""		1006084	1					
ANR	1006578	Argument	"""ap: Unsupported bits: %d\\n"""		1006084	0					
ANR	1006579	PrimaryExpression	"""ap: Unsupported bits: %d\\n"""		1006084	0					
ANR	1006580	Argument	bits		1006084	1					
ANR	1006581	Identifier	bits		1006084	0					
ANR	1006582	ElseStatement	else		1006084	0					
ANR	1006583	IfStatement	"if ( strstr ( arch , ""mips"" ) )"		1006084	0					
ANR	1006584	Condition	"strstr ( arch , ""mips"" )"	396:13:14173:14193	1006084	0	True				
ANR	1006585	CallExpression	"strstr ( arch , ""mips"" )"		1006084	0					
ANR	1006586	Callee	strstr		1006084	0					
ANR	1006587	Identifier	strstr		1006084	0					
ANR	1006588	ArgumentList	arch		1006084	1					
ANR	1006589	Argument	arch		1006084	0					
ANR	1006590	Identifier	arch		1006084	0					
ANR	1006591	Argument	"""mips"""		1006084	1					
ANR	1006592	PrimaryExpression	"""mips"""		1006084	0					
ANR	1006593	CompoundStatement		62:36:2070:2070	1006084	1					
ANR	1006594	ExpressionStatement	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x27\\xbd\\x00"" , 3 , NULL , 0 )"	397:3:14201:14291	1006084	0	True				
ANR	1006595	AssignmentExpression	"ret = r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x27\\xbd\\x00"" , 3 , NULL , 0 )"		1006084	0		=			
ANR	1006596	Identifier	ret		1006084	0					
ANR	1006597	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x27\\xbd\\x00"" , 3 , NULL , 0 )"		1006084	1					
ANR	1006598	Callee	r_core_search_prelude		1006084	0					
ANR	1006599	Identifier	r_core_search_prelude		1006084	0					
ANR	1006600	ArgumentList	core		1006084	1					
ANR	1006601	Argument	core		1006084	0					
ANR	1006602	Identifier	core		1006084	0					
ANR	1006603	Argument	from		1006084	1					
ANR	1006604	Identifier	from		1006084	0					
ANR	1006605	Argument	to		1006084	2					
ANR	1006606	Identifier	to		1006084	0					
ANR	1006607	Argument	"( const ut8 * ) ""\\x27\\xbd\\x00"""		1006084	3					
ANR	1006608	CastExpression	"( const ut8 * ) ""\\x27\\xbd\\x00"""		1006084	0					
ANR	1006609	CastTarget	const ut8 *		1006084	0					
ANR	1006610	PrimaryExpression	"""\\x27\\xbd\\x00"""		1006084	1					
ANR	1006611	Argument	3		1006084	4					
ANR	1006612	PrimaryExpression	3		1006084	0					
ANR	1006613	Argument	NULL		1006084	5					
ANR	1006614	Identifier	NULL		1006084	0					
ANR	1006615	Argument	0		1006084	6					
ANR	1006616	PrimaryExpression	0		1006084	0					
ANR	1006617	ElseStatement	else		1006084	0					
ANR	1006618	IfStatement	"if ( strstr ( arch , ""x86"" ) )"		1006084	0					
ANR	1006619	Condition	"strstr ( arch , ""x86"" )"	399:13:14306:14325	1006084	0	True				
ANR	1006620	CallExpression	"strstr ( arch , ""x86"" )"		1006084	0					
ANR	1006621	Callee	strstr		1006084	0					
ANR	1006622	Identifier	strstr		1006084	0					
ANR	1006623	ArgumentList	arch		1006084	1					
ANR	1006624	Argument	arch		1006084	0					
ANR	1006625	Identifier	arch		1006084	0					
ANR	1006626	Argument	"""x86"""		1006084	1					
ANR	1006627	PrimaryExpression	"""x86"""		1006084	0					
ANR	1006628	CompoundStatement		65:35:2202:2202	1006084	1					
ANR	1006629	SwitchStatement	switch ( bits )		1006084	0					
ANR	1006630	Condition	bits	400:11:14341:14344	1006084	0	True				
ANR	1006631	Identifier	bits		1006084	0					
ANR	1006632	CompoundStatement		66:17:2221:2221	1006084	1					
ANR	1006633	Label	case 32 :	401:3:14352:14359	1006084	0	True				
ANR	1006634	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x8b\\xff\\x55\\x8b\\xec"" , 5 , NULL , 0 )"	402:4:14365:14496	1006084	1	True				
ANR	1006635	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x8b\\xff\\x55\\x8b\\xec"" , 5 , NULL , 0 )"		1006084	0					
ANR	1006636	Callee	r_core_search_prelude		1006084	0					
ANR	1006637	Identifier	r_core_search_prelude		1006084	0					
ANR	1006638	ArgumentList	core		1006084	1					
ANR	1006639	Argument	core		1006084	0					
ANR	1006640	Identifier	core		1006084	0					
ANR	1006641	Argument	from		1006084	1					
ANR	1006642	Identifier	from		1006084	0					
ANR	1006643	Argument	to		1006084	2					
ANR	1006644	Identifier	to		1006084	0					
ANR	1006645	Argument	"( const ut8 * ) ""\\x8b\\xff\\x55\\x8b\\xec"""		1006084	3					
ANR	1006646	CastExpression	"( const ut8 * ) ""\\x8b\\xff\\x55\\x8b\\xec"""		1006084	0					
ANR	1006647	CastTarget	const ut8 *		1006084	0					
ANR	1006648	PrimaryExpression	"""\\x8b\\xff\\x55\\x8b\\xec"""		1006084	1					
ANR	1006649	Argument	5		1006084	4					
ANR	1006650	PrimaryExpression	5		1006084	0					
ANR	1006651	Argument	NULL		1006084	5					
ANR	1006652	Identifier	NULL		1006084	0					
ANR	1006653	Argument	0		1006084	6					
ANR	1006654	PrimaryExpression	0		1006084	0					
ANR	1006655	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x89\\xe5"" , 3 , NULL , 0 )"	404:4:14502:14587	1006084	2	True				
ANR	1006656	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x89\\xe5"" , 3 , NULL , 0 )"		1006084	0					
ANR	1006657	Callee	r_core_search_prelude		1006084	0					
ANR	1006658	Identifier	r_core_search_prelude		1006084	0					
ANR	1006659	ArgumentList	core		1006084	1					
ANR	1006660	Argument	core		1006084	0					
ANR	1006661	Identifier	core		1006084	0					
ANR	1006662	Argument	from		1006084	1					
ANR	1006663	Identifier	from		1006084	0					
ANR	1006664	Argument	to		1006084	2					
ANR	1006665	Identifier	to		1006084	0					
ANR	1006666	Argument	"( const ut8 * ) ""\\x55\\x89\\xe5"""		1006084	3					
ANR	1006667	CastExpression	"( const ut8 * ) ""\\x55\\x89\\xe5"""		1006084	0					
ANR	1006668	CastTarget	const ut8 *		1006084	0					
ANR	1006669	PrimaryExpression	"""\\x55\\x89\\xe5"""		1006084	1					
ANR	1006670	Argument	3		1006084	4					
ANR	1006671	PrimaryExpression	3		1006084	0					
ANR	1006672	Argument	NULL		1006084	5					
ANR	1006673	Identifier	NULL		1006084	0					
ANR	1006674	Argument	0		1006084	6					
ANR	1006675	PrimaryExpression	0		1006084	0					
ANR	1006676	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x8b\\xec"" , 3 , NULL , 0 )"	406:4:14593:14704	1006084	3	True				
ANR	1006677	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x8b\\xec"" , 3 , NULL , 0 )"		1006084	0					
ANR	1006678	Callee	r_core_search_prelude		1006084	0					
ANR	1006679	Identifier	r_core_search_prelude		1006084	0					
ANR	1006680	ArgumentList	core		1006084	1					
ANR	1006681	Argument	core		1006084	0					
ANR	1006682	Identifier	core		1006084	0					
ANR	1006683	Argument	from		1006084	1					
ANR	1006684	Identifier	from		1006084	0					
ANR	1006685	Argument	to		1006084	2					
ANR	1006686	Identifier	to		1006084	0					
ANR	1006687	Argument	"( const ut8 * ) ""\\x55\\x8b\\xec"""		1006084	3					
ANR	1006688	CastExpression	"( const ut8 * ) ""\\x55\\x8b\\xec"""		1006084	0					
ANR	1006689	CastTarget	const ut8 *		1006084	0					
ANR	1006690	PrimaryExpression	"""\\x55\\x8b\\xec"""		1006084	1					
ANR	1006691	Argument	3		1006084	4					
ANR	1006692	PrimaryExpression	3		1006084	0					
ANR	1006693	Argument	NULL		1006084	5					
ANR	1006694	Identifier	NULL		1006084	0					
ANR	1006695	Argument	0		1006084	6					
ANR	1006696	PrimaryExpression	0		1006084	0					
ANR	1006697	BreakStatement	break ;	408:4:14710:14715	1006084	4	True				
ANR	1006698	Label	case 64 :	409:3:14720:14727	1006084	5	True				
ANR	1006699	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x48\\x89\\xe5"" , 4 , NULL , 0 )"	410:4:14733:14822	1006084	6	True				
ANR	1006700	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x48\\x89\\xe5"" , 4 , NULL , 0 )"		1006084	0					
ANR	1006701	Callee	r_core_search_prelude		1006084	0					
ANR	1006702	Identifier	r_core_search_prelude		1006084	0					
ANR	1006703	ArgumentList	core		1006084	1					
ANR	1006704	Argument	core		1006084	0					
ANR	1006705	Identifier	core		1006084	0					
ANR	1006706	Argument	from		1006084	1					
ANR	1006707	Identifier	from		1006084	0					
ANR	1006708	Argument	to		1006084	2					
ANR	1006709	Identifier	to		1006084	0					
ANR	1006710	Argument	"( const ut8 * ) ""\\x55\\x48\\x89\\xe5"""		1006084	3					
ANR	1006711	CastExpression	"( const ut8 * ) ""\\x55\\x48\\x89\\xe5"""		1006084	0					
ANR	1006712	CastTarget	const ut8 *		1006084	0					
ANR	1006713	PrimaryExpression	"""\\x55\\x48\\x89\\xe5"""		1006084	1					
ANR	1006714	Argument	4		1006084	4					
ANR	1006715	PrimaryExpression	4		1006084	0					
ANR	1006716	Argument	NULL		1006084	5					
ANR	1006717	Identifier	NULL		1006084	0					
ANR	1006718	Argument	0		1006084	6					
ANR	1006719	PrimaryExpression	0		1006084	0					
ANR	1006720	ExpressionStatement	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x48\\x8b\\xec"" , 4 , NULL , 0 )"	412:4:14828:14917	1006084	7	True				
ANR	1006721	CallExpression	"r_core_search_prelude ( core , from , to , ( const ut8 * ) ""\\x55\\x48\\x8b\\xec"" , 4 , NULL , 0 )"		1006084	0					
ANR	1006722	Callee	r_core_search_prelude		1006084	0					
ANR	1006723	Identifier	r_core_search_prelude		1006084	0					
ANR	1006724	ArgumentList	core		1006084	1					
ANR	1006725	Argument	core		1006084	0					
ANR	1006726	Identifier	core		1006084	0					
ANR	1006727	Argument	from		1006084	1					
ANR	1006728	Identifier	from		1006084	0					
ANR	1006729	Argument	to		1006084	2					
ANR	1006730	Identifier	to		1006084	0					
ANR	1006731	Argument	"( const ut8 * ) ""\\x55\\x48\\x8b\\xec"""		1006084	3					
ANR	1006732	CastExpression	"( const ut8 * ) ""\\x55\\x48\\x8b\\xec"""		1006084	0					
ANR	1006733	CastTarget	const ut8 *		1006084	0					
ANR	1006734	PrimaryExpression	"""\\x55\\x48\\x8b\\xec"""		1006084	1					
ANR	1006735	Argument	4		1006084	4					
ANR	1006736	PrimaryExpression	4		1006084	0					
ANR	1006737	Argument	NULL		1006084	5					
ANR	1006738	Identifier	NULL		1006084	0					
ANR	1006739	Argument	0		1006084	6					
ANR	1006740	PrimaryExpression	0		1006084	0					
ANR	1006741	BreakStatement	break ;	414:4:14923:14928	1006084	8	True				
ANR	1006742	Label	default :	415:3:14933:14940	1006084	9	True				
ANR	1006743	Identifier	default		1006084	0					
ANR	1006744	IfStatement	if ( log )		1006084	10					
ANR	1006745	Condition	log	416:8:14950:14952	1006084	0	True				
ANR	1006746	Identifier	log		1006084	0					
ANR	1006747	CompoundStatement		82:13:2829:2829	1006084	1					
ANR	1006748	ExpressionStatement	"eprintf ( ""ap: Unsupported bits: %d\\n"" , bits )"	417:5:14962:15006	1006084	0	True				
ANR	1006749	CallExpression	"eprintf ( ""ap: Unsupported bits: %d\\n"" , bits )"		1006084	0					
ANR	1006750	Callee	eprintf		1006084	0					
ANR	1006751	Identifier	eprintf		1006084	0					
ANR	1006752	ArgumentList	"""ap: Unsupported bits: %d\\n"""		1006084	1					
ANR	1006753	Argument	"""ap: Unsupported bits: %d\\n"""		1006084	0					
ANR	1006754	PrimaryExpression	"""ap: Unsupported bits: %d\\n"""		1006084	0					
ANR	1006755	Argument	bits		1006084	1					
ANR	1006756	Identifier	bits		1006084	0					
ANR	1006757	ElseStatement	else		1006084	0					
ANR	1006758	CompoundStatement		86:9:2902:2902	1006084	0					
ANR	1006759	IfStatement	if ( log )		1006084	0					
ANR	1006760	Condition	log	421:7:15037:15039	1006084	0	True				
ANR	1006761	Identifier	log		1006084	0					
ANR	1006762	CompoundStatement		87:12:2916:2916	1006084	1					
ANR	1006763	ExpressionStatement	"eprintf ( ""ap: Unsupported asm.arch and asm.bits\\n"" )"	422:4:15048:15099	1006084	0	True				
ANR	1006764	CallExpression	"eprintf ( ""ap: Unsupported asm.arch and asm.bits\\n"" )"		1006084	0					
ANR	1006765	Callee	eprintf		1006084	0					
ANR	1006766	Identifier	eprintf		1006084	0					
ANR	1006767	ArgumentList	"""ap: Unsupported asm.arch and asm.bits\\n"""		1006084	1					
ANR	1006768	Argument	"""ap: Unsupported asm.arch and asm.bits\\n"""		1006084	0					
ANR	1006769	PrimaryExpression	"""ap: Unsupported asm.arch and asm.bits\\n"""		1006084	0					
ANR	1006770	IfStatement	if ( log )		1006084	4					
ANR	1006771	Condition	log	425:6:15116:15118	1006084	0	True				
ANR	1006772	Identifier	log		1006084	0					
ANR	1006773	CompoundStatement		91:11:2995:2995	1006084	1					
ANR	1006774	ExpressionStatement	"eprintf ( ""done\\n"" )"	426:3:15126:15144	1006084	0	True				
ANR	1006775	CallExpression	"eprintf ( ""done\\n"" )"		1006084	0					
ANR	1006776	Callee	eprintf		1006084	0					
ANR	1006777	Identifier	eprintf		1006084	0					
ANR	1006778	ArgumentList	"""done\\n"""		1006084	1					
ANR	1006779	Argument	"""done\\n"""		1006084	0					
ANR	1006780	PrimaryExpression	"""done\\n"""		1006084	0					
ANR	1006781	IdentifierDeclStatement	int fc1 = count_functions ( core ) ;	429:1:15154:15186	1006084	21	True				
ANR	1006782	IdentifierDecl	fc1 = count_functions ( core )		1006084	0					
ANR	1006783	IdentifierDeclType	int		1006084	0					
ANR	1006784	Identifier	fc1		1006084	1					
ANR	1006785	AssignmentExpression	fc1 = count_functions ( core )		1006084	2		=			
ANR	1006786	Identifier	fc1		1006084	0					
ANR	1006787	CallExpression	count_functions ( core )		1006084	1					
ANR	1006788	Callee	count_functions		1006084	0					
ANR	1006789	Identifier	count_functions		1006084	0					
ANR	1006790	ArgumentList	core		1006084	1					
ANR	1006791	Argument	core		1006084	0					
ANR	1006792	Identifier	core		1006084	0					
ANR	1006793	IfStatement	if ( log )		1006084	22					
ANR	1006794	Condition	log	430:5:15193:15195	1006084	0	True				
ANR	1006795	Identifier	log		1006084	0					
ANR	1006796	CompoundStatement		96:10:3072:3072	1006084	1					
ANR	1006797	IfStatement	if ( list )		1006084	0					
ANR	1006798	Condition	list	431:6:15206:15209	1006084	0	True				
ANR	1006799	Identifier	list		1006084	0					
ANR	1006800	CompoundStatement		97:12:3086:3086	1006084	1					
ANR	1006801	ExpressionStatement	"eprintf ( ""Analyzed %d functions based on preludes\\n"" , fc1 - fc0 )"	432:3:15217:15281	1006084	0	True				
ANR	1006802	CallExpression	"eprintf ( ""Analyzed %d functions based on preludes\\n"" , fc1 - fc0 )"		1006084	0					
ANR	1006803	Callee	eprintf		1006084	0					
ANR	1006804	Identifier	eprintf		1006084	0					
ANR	1006805	ArgumentList	"""Analyzed %d functions based on preludes\\n"""		1006084	1					
ANR	1006806	Argument	"""Analyzed %d functions based on preludes\\n"""		1006084	0					
ANR	1006807	PrimaryExpression	"""Analyzed %d functions based on preludes\\n"""		1006084	0					
ANR	1006808	Argument	fc1 - fc0		1006084	1					
ANR	1006809	AdditiveExpression	fc1 - fc0		1006084	0		-			
ANR	1006810	Identifier	fc1		1006084	0					
ANR	1006811	Identifier	fc0		1006084	1					
ANR	1006812	ElseStatement	else		1006084	0					
ANR	1006813	CompoundStatement		99:9:3166:3166	1006084	0					
ANR	1006814	ExpressionStatement	"eprintf ( ""No executable section found, cannot analyze anything. Use 'S' to change or define permissions of sections\\n"" )"	434:3:15297:15416	1006084	0	True				
ANR	1006815	CallExpression	"eprintf ( ""No executable section found, cannot analyze anything. Use 'S' to change or define permissions of sections\\n"" )"		1006084	0					
ANR	1006816	Callee	eprintf		1006084	0					
ANR	1006817	Identifier	eprintf		1006084	0					
ANR	1006818	ArgumentList	"""No executable section found, cannot analyze anything. Use 'S' to change or define permissions of sections\\n"""		1006084	1					
ANR	1006819	Argument	"""No executable section found, cannot analyze anything. Use 'S' to change or define permissions of sections\\n"""		1006084	0					
ANR	1006820	PrimaryExpression	"""No executable section found, cannot analyze anything. Use 'S' to change or define permissions of sections\\n"""		1006084	0					
ANR	1006821	ExpressionStatement	r_list_free ( list )	437:1:15426:15444	1006084	23	True				
ANR	1006822	CallExpression	r_list_free ( list )		1006084	0					
ANR	1006823	Callee	r_list_free		1006084	0					
ANR	1006824	Identifier	r_list_free		1006084	0					
ANR	1006825	ArgumentList	list		1006084	1					
ANR	1006826	Argument	list		1006084	0					
ANR	1006827	Identifier	list		1006084	0					
ANR	1006828	ReturnStatement	return ret ;	438:1:15447:15457	1006084	24	True				
ANR	1006829	Identifier	ret		1006084	0					
ANR	1006830	ReturnType	R_API int		1006084	1					
ANR	1006831	Identifier	r_core_search_preludes		1006084	2					
ANR	1006832	ParameterList	"RCore * core , bool log"		1006084	3					
ANR	1006833	Parameter	RCore * core	335:33:12102:12112	1006084	0	True				
ANR	1006834	ParameterType	RCore *		1006084	0					
ANR	1006835	Identifier	core		1006084	1					
ANR	1006836	Parameter	bool log	335:46:12115:12122	1006084	1	True				
ANR	1006837	ParameterType	bool		1006084	0					
ANR	1006838	Identifier	log		1006084	1					
ANR	1006839	CFGEntryNode	ENTRY		1006084		True				
ANR	1006840	CFGExitNode	EXIT		1006084		True				
ANR	1006841	CFGErrorNode	ERROR		1006084		True				
ANR	1006842	Symbol	log		1006084						
ANR	1006843	Symbol	r_config_get		1006084						
ANR	1006844	Symbol	* core		1006084						
ANR	1006845	Symbol	R_PERM_X		1006084						
ANR	1006846	Symbol	strlen		1006084						
ANR	1006847	Symbol	fc0		1006084						
ANR	1006848	Symbol	* prelude		1006084						
ANR	1006849	Symbol	fc1		1006084						
ANR	1006850	Symbol	count_functions		1006084						
ANR	1006851	Symbol	r_core_search_prelude		1006084						
ANR	1006852	Symbol	from		1006084						
ANR	1006853	Symbol	where		1006084						
ANR	1006854	Symbol	UT64_MAX		1006084						
ANR	1006855	Symbol	p -> perm		1006084						
ANR	1006856	Symbol	r_hex_str2bin		1006084						
ANR	1006857	Symbol	ret		1006084						
ANR	1006858	Symbol	core -> config		1006084						
ANR	1006859	Symbol	malloc		1006084						
ANR	1006860	Symbol	p -> itv		1006084						
ANR	1006861	Symbol	NULL		1006084						
ANR	1006862	Symbol	bits		1006084						
ANR	1006863	Symbol	p -> itv . addr		1006084						
ANR	1006864	Symbol	prelude		1006084						
ANR	1006865	Symbol	iter		1006084						
ANR	1006866	Symbol	list		1006084						
ANR	1006867	Symbol	kw		1006084						
ANR	1006868	Symbol	r_itv_end		1006084						
ANR	1006869	Symbol	p		1006084						
ANR	1006870	Symbol	core		1006084						
ANR	1006871	Symbol	kwlen		1006084						
ANR	1006872	Symbol	strstr		1006084						
ANR	1006873	Symbol	r_config_get_i		1006084						
ANR	1006874	Symbol	* p		1006084						
ANR	1006875	Symbol	arch		1006084						
ANR	1006876	Symbol	to		1006084						
ANR	1006877	Symbol	r_core_get_boundaries_prot		1006084						
ANR	1006878	Function	getstring	442:0:15499:15723							
ANR	1006879	FunctionDef	"getstring (char * b , int l)"		1006878	0					
ANR	1006880	CompoundStatement		442:39:15538:15723	1006878	0					
ANR	1006881	IdentifierDeclStatement	"char * r , * res = malloc ( l + 1 ) ;"	443:1:15541:15571	1006878	0	True				
ANR	1006882	IdentifierDecl	* r		1006878	0					
ANR	1006883	IdentifierDeclType	char *		1006878	0					
ANR	1006884	Identifier	r		1006878	1					
ANR	1006885	IdentifierDecl	* res = malloc ( l + 1 )		1006878	1					
ANR	1006886	IdentifierDeclType	char *		1006878	0					
ANR	1006887	Identifier	res		1006878	1					
ANR	1006888	AssignmentExpression	* res = malloc ( l + 1 )		1006878	2		=			
ANR	1006889	Identifier	res		1006878	0					
ANR	1006890	CallExpression	malloc ( l + 1 )		1006878	1					
ANR	1006891	Callee	malloc		1006878	0					
ANR	1006892	Identifier	malloc		1006878	0					
ANR	1006893	ArgumentList	l + 1		1006878	1					
ANR	1006894	Argument	l + 1		1006878	0					
ANR	1006895	AdditiveExpression	l + 1		1006878	0		+			
ANR	1006896	Identifier	l		1006878	0					
ANR	1006897	PrimaryExpression	1		1006878	1					
ANR	1006898	IdentifierDeclStatement	int i ;	444:1:15574:15579	1006878	1	True				
ANR	1006899	IdentifierDecl	i		1006878	0					
ANR	1006900	IdentifierDeclType	int		1006878	0					
ANR	1006901	Identifier	i		1006878	1					
ANR	1006902	IfStatement	if ( ! res )		1006878	2					
ANR	1006903	Condition	! res	445:5:15586:15589	1006878	0	True				
ANR	1006904	UnaryOperationExpression	! res		1006878	0					
ANR	1006905	UnaryOperator	!		1006878	0					
ANR	1006906	Identifier	res		1006878	1					
ANR	1006907	CompoundStatement		4:11:53:53	1006878	1					
ANR	1006908	ReturnStatement	return NULL ;	446:2:15596:15607	1006878	0	True				
ANR	1006909	Identifier	NULL		1006878	0					
ANR	1006910	ForStatement	"for ( i = 0 , r = res ; i < l ; b ++ , i ++ )"		1006878	3					
ANR	1006911	ForInit	"i = 0 , r = res ;"	448:6:15618:15632	1006878	0	True				
ANR	1006912	Expression	"i = 0 , r = res"		1006878	0					
ANR	1006913	AssignmentExpression	i = 0		1006878	0		=			
ANR	1006914	Identifier	i		1006878	0					
ANR	1006915	PrimaryExpression	0		1006878	1					
ANR	1006916	AssignmentExpression	r = res		1006878	1		=			
ANR	1006917	Identifier	r		1006878	0					
ANR	1006918	Identifier	res		1006878	1					
ANR	1006919	Condition	i < l	448:22:15634:15638	1006878	1	True				
ANR	1006920	RelationalExpression	i < l		1006878	0		<			
ANR	1006921	Identifier	i		1006878	0					
ANR	1006922	Identifier	l		1006878	1					
ANR	1006923	Expression	"b ++ , i ++"	448:29:15641:15648	1006878	2	True				
ANR	1006924	PostIncDecOperationExpression	b ++		1006878	0					
ANR	1006925	Identifier	b		1006878	0					
ANR	1006926	IncDec	++		1006878	1					
ANR	1006927	PostIncDecOperationExpression	i ++		1006878	1					
ANR	1006928	Identifier	i		1006878	0					
ANR	1006929	IncDec	++		1006878	1					
ANR	1006930	CompoundStatement		7:39:112:112	1006878	3					
ANR	1006931	IfStatement	if ( IS_PRINTABLE ( * b ) )		1006878	0					
ANR	1006932	Condition	IS_PRINTABLE ( * b )	449:6:15659:15675	1006878	0	True				
ANR	1006933	CallExpression	IS_PRINTABLE ( * b )		1006878	0					
ANR	1006934	Callee	IS_PRINTABLE		1006878	0					
ANR	1006935	Identifier	IS_PRINTABLE		1006878	0					
ANR	1006936	ArgumentList	* b		1006878	1					
ANR	1006937	Argument	* b		1006878	0					
ANR	1006938	UnaryOperationExpression	* b		1006878	0					
ANR	1006939	UnaryOperator	*		1006878	0					
ANR	1006940	Identifier	b		1006878	1					
ANR	1006941	CompoundStatement		8:25:139:139	1006878	1					
ANR	1006942	ExpressionStatement	* r ++ = * b	450:3:15683:15692	1006878	0	True				
ANR	1006943	AssignmentExpression	* r ++ = * b		1006878	0		=			
ANR	1006944	UnaryOperationExpression	* r ++		1006878	0					
ANR	1006945	UnaryOperator	*		1006878	0					
ANR	1006946	PostIncDecOperationExpression	r ++		1006878	1					
ANR	1006947	Identifier	r		1006878	0					
ANR	1006948	IncDec	++		1006878	1					
ANR	1006949	UnaryOperationExpression	* b		1006878	1					
ANR	1006950	UnaryOperator	*		1006878	0					
ANR	1006951	Identifier	b		1006878	1					
ANR	1006952	ExpressionStatement	* r = 0	453:1:15702:15708	1006878	4	True				
ANR	1006953	AssignmentExpression	* r = 0		1006878	0		=			
ANR	1006954	UnaryOperationExpression	* r		1006878	0					
ANR	1006955	UnaryOperator	*		1006878	0					
ANR	1006956	Identifier	r		1006878	1					
ANR	1006957	PrimaryExpression	0		1006878	1					
ANR	1006958	ReturnStatement	return res ;	454:1:15711:15721	1006878	5	True				
ANR	1006959	Identifier	res		1006878	0					
ANR	1006960	ReturnType	static char *		1006878	1					
ANR	1006961	Identifier	getstring		1006878	2					
ANR	1006962	ParameterList	"char * b , int l"		1006878	3					
ANR	1006963	Parameter	char * b	442:23:15522:15528	1006878	0	True				
ANR	1006964	ParameterType	char *		1006878	0					
ANR	1006965	Identifier	b		1006878	1					
ANR	1006966	Parameter	int l	442:32:15531:15535	1006878	1	True				
ANR	1006967	ParameterType	int		1006878	0					
ANR	1006968	Identifier	l		1006878	1					
ANR	1006969	CFGEntryNode	ENTRY		1006878		True				
ANR	1006970	CFGExitNode	EXIT		1006878		True				
ANR	1006971	Symbol	res		1006878						
ANR	1006972	Symbol	malloc		1006878						
ANR	1006973	Symbol	b		1006878						
ANR	1006974	Symbol	r		1006878						
ANR	1006975	Symbol	NULL		1006878						
ANR	1006976	Symbol	IS_PRINTABLE		1006878						
ANR	1006977	Symbol	* r ++		1006878						
ANR	1006978	Symbol	i		1006878						
ANR	1006979	Symbol	l		1006878						
ANR	1006980	Symbol	* b		1006878						
ANR	1006981	Symbol	* r		1006878						
ANR	1006982	Function	_cb_hit	457:0:15726:19255							
ANR	1006983	FunctionDef	"_cb_hit (RSearchKeyword * kw , void * user , ut64 addr)"		1006982	0					
ANR	1006984	CompoundStatement		457:62:15788:19255	1006982	0					
ANR	1006985	IdentifierDeclStatement	struct search_parameters * param = user ;	458:1:15791:15829	1006982	0	True				
ANR	1006986	IdentifierDecl	* param = user		1006982	0					
ANR	1006987	IdentifierDeclType	struct search_parameters *		1006982	0					
ANR	1006988	Identifier	param		1006982	1					
ANR	1006989	AssignmentExpression	* param = user		1006982	2		=			
ANR	1006990	Identifier	user		1006982	0					
ANR	1006991	Identifier	user		1006982	1					
ANR	1006992	IdentifierDeclStatement	RCore * core = param -> core ;	459:1:15832:15857	1006982	1	True				
ANR	1006993	IdentifierDecl	* core = param -> core		1006982	0					
ANR	1006994	IdentifierDeclType	RCore *		1006982	0					
ANR	1006995	Identifier	core		1006982	1					
ANR	1006996	AssignmentExpression	* core = param -> core		1006982	2		=			
ANR	1006997	Identifier	core		1006982	0					
ANR	1006998	PtrMemberAccess	param -> core		1006982	1					
ANR	1006999	Identifier	param		1006982	0					
ANR	1007000	Identifier	core		1006982	1					
ANR	1007001	IdentifierDeclStatement	const RSearch * search = core -> search ;	460:1:15860:15896	1006982	2	True				
ANR	1007002	IdentifierDecl	* search = core -> search		1006982	0					
ANR	1007003	IdentifierDeclType	const RSearch *		1006982	0					
ANR	1007004	Identifier	search		1006982	1					
ANR	1007005	AssignmentExpression	* search = core -> search		1006982	2		=			
ANR	1007006	Identifier	search		1006982	0					
ANR	1007007	PtrMemberAccess	core -> search		1006982	1					
ANR	1007008	Identifier	core		1006982	0					
ANR	1007009	Identifier	search		1006982	1					
ANR	1007010	IdentifierDeclStatement	ut64 base_addr = 0 ;	461:1:15899:15917	1006982	3	True				
ANR	1007011	IdentifierDecl	base_addr = 0		1006982	0					
ANR	1007012	IdentifierDeclType	ut64		1006982	0					
ANR	1007013	Identifier	base_addr		1006982	1					
ANR	1007014	AssignmentExpression	base_addr = 0		1006982	2		=			
ANR	1007015	Identifier	base_addr		1006982	0					
ANR	1007016	PrimaryExpression	0		1006982	1					
ANR	1007017	IdentifierDeclStatement	bool use_color = core -> print -> flags & R_PRINT_FLAGS_COLOR ;	462:1:15920:15977	1006982	4	True				
ANR	1007018	IdentifierDecl	use_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		1006982	0					
ANR	1007019	IdentifierDeclType	bool		1006982	0					
ANR	1007020	Identifier	use_color		1006982	1					
ANR	1007021	AssignmentExpression	use_color = core -> print -> flags & R_PRINT_FLAGS_COLOR		1006982	2		=			
ANR	1007022	Identifier	use_color		1006982	0					
ANR	1007023	BitAndExpression	core -> print -> flags & R_PRINT_FLAGS_COLOR		1006982	1		&			
ANR	1007024	PtrMemberAccess	core -> print -> flags		1006982	0					
ANR	1007025	PtrMemberAccess	core -> print		1006982	0					
ANR	1007026	Identifier	core		1006982	0					
ANR	1007027	Identifier	print		1006982	1					
ANR	1007028	Identifier	flags		1006982	1					
ANR	1007029	Identifier	R_PRINT_FLAGS_COLOR		1006982	1					
ANR	1007030	IdentifierDeclStatement	int keyword_len = kw ? kw -> keyword_length + ( search -> mode == R_SEARCH_DELTAKEY ) : 0 ;	463:1:15980:16063	1006982	5	True				
ANR	1007031	IdentifierDecl	keyword_len = kw ? kw -> keyword_length + ( search -> mode == R_SEARCH_DELTAKEY ) : 0		1006982	0					
ANR	1007032	IdentifierDeclType	int		1006982	0					
ANR	1007033	Identifier	keyword_len		1006982	1					
ANR	1007034	AssignmentExpression	keyword_len = kw ? kw -> keyword_length + ( search -> mode == R_SEARCH_DELTAKEY ) : 0		1006982	2		=			
ANR	1007035	Identifier	keyword_len		1006982	0					
ANR	1007036	ConditionalExpression	kw ? kw -> keyword_length + ( search -> mode == R_SEARCH_DELTAKEY ) : 0		1006982	1					
ANR	1007037	Condition	kw		1006982	0					
ANR	1007038	Identifier	kw		1006982	0					
ANR	1007039	AdditiveExpression	kw -> keyword_length + ( search -> mode == R_SEARCH_DELTAKEY )		1006982	1		+			
ANR	1007040	PtrMemberAccess	kw -> keyword_length		1006982	0					
ANR	1007041	Identifier	kw		1006982	0					
ANR	1007042	Identifier	keyword_length		1006982	1					
ANR	1007043	EqualityExpression	search -> mode == R_SEARCH_DELTAKEY		1006982	1		==			
ANR	1007044	PtrMemberAccess	search -> mode		1006982	0					
ANR	1007045	Identifier	search		1006982	0					
ANR	1007046	Identifier	mode		1006982	1					
ANR	1007047	Identifier	R_SEARCH_DELTAKEY		1006982	1					
ANR	1007048	PrimaryExpression	0		1006982	2					
ANR	1007049	IfStatement	if ( searchshow && kw && kw -> keyword_length > 0 )		1006982	6					
ANR	1007050	Condition	searchshow && kw && kw -> keyword_length > 0	465:5:16071:16112	1006982	0	True				
ANR	1007051	AndExpression	searchshow && kw && kw -> keyword_length > 0		1006982	0		&&			
ANR	1007052	Identifier	searchshow		1006982	0					
ANR	1007053	AndExpression	kw && kw -> keyword_length > 0		1006982	1		&&			
ANR	1007054	Identifier	kw		1006982	0					
ANR	1007055	RelationalExpression	kw -> keyword_length > 0		1006982	1		>			
ANR	1007056	PtrMemberAccess	kw -> keyword_length		1006982	0					
ANR	1007057	Identifier	kw		1006982	0					
ANR	1007058	Identifier	keyword_length		1006982	1					
ANR	1007059	PrimaryExpression	0		1006982	1					
ANR	1007060	CompoundStatement		15:2:485:516	1006982	1					
ANR	1007061	IdentifierDeclStatement	"int len , i , extra , mallocsize ;"	466:2:16119:16148	1006982	0	True				
ANR	1007062	IdentifierDecl	len		1006982	0					
ANR	1007063	IdentifierDeclType	int		1006982	0					
ANR	1007064	Identifier	len		1006982	1					
ANR	1007065	IdentifierDecl	i		1006982	1					
ANR	1007066	IdentifierDeclType	int		1006982	0					
ANR	1007067	Identifier	i		1006982	1					
ANR	1007068	IdentifierDecl	extra		1006982	2					
ANR	1007069	IdentifierDeclType	int		1006982	0					
ANR	1007070	Identifier	extra		1006982	1					
ANR	1007071	IdentifierDecl	mallocsize		1006982	3					
ANR	1007072	IdentifierDeclType	int		1006982	0					
ANR	1007073	Identifier	mallocsize		1006982	1					
ANR	1007074	IdentifierDeclStatement	"char * s = NULL , * str = NULL , * p = NULL ;"	467:2:16152:16190	1006982	1	True				
ANR	1007075	IdentifierDecl	* s = NULL		1006982	0					
ANR	1007076	IdentifierDeclType	char *		1006982	0					
ANR	1007077	Identifier	s		1006982	1					
ANR	1007078	AssignmentExpression	* s = NULL		1006982	2		=			
ANR	1007079	Identifier	NULL		1006982	0					
ANR	1007080	Identifier	NULL		1006982	1					
ANR	1007081	IdentifierDecl	* str = NULL		1006982	1					
ANR	1007082	IdentifierDeclType	char *		1006982	0					
ANR	1007083	Identifier	str		1006982	1					
ANR	1007084	AssignmentExpression	* str = NULL		1006982	2		=			
ANR	1007085	Identifier	NULL		1006982	0					
ANR	1007086	Identifier	NULL		1006982	1					
ANR	1007087	IdentifierDecl	* p = NULL		1006982	2					
ANR	1007088	IdentifierDeclType	char *		1006982	0					
ANR	1007089	Identifier	p		1006982	1					
ANR	1007090	AssignmentExpression	* p = NULL		1006982	2		=			
ANR	1007091	Identifier	NULL		1006982	0					
ANR	1007092	Identifier	NULL		1006982	1					
ANR	1007093	ExpressionStatement	extra = ( json ) ? 3 : 1	468:2:16194:16214	1006982	2	True				
ANR	1007094	AssignmentExpression	extra = ( json ) ? 3 : 1		1006982	0		=			
ANR	1007095	Identifier	extra		1006982	0					
ANR	1007096	ConditionalExpression	( json ) ? 3 : 1		1006982	1					
ANR	1007097	Condition	json		1006982	0					
ANR	1007098	Identifier	json		1006982	0					
ANR	1007099	PrimaryExpression	3		1006982	1					
ANR	1007100	PrimaryExpression	1		1006982	2					
ANR	1007101	IdentifierDeclStatement	"const char * type = ""hexpair"" ;"	469:2:16218:16246	1006982	3	True				
ANR	1007102	IdentifierDecl	"* type = ""hexpair"""		1006982	0					
ANR	1007103	IdentifierDeclType	const char *		1006982	0					
ANR	1007104	Identifier	type		1006982	1					
ANR	1007105	AssignmentExpression	"* type = ""hexpair"""		1006982	2		=			
ANR	1007106	Identifier	type		1006982	0					
ANR	1007107	PrimaryExpression	"""hexpair"""		1006982	1					
ANR	1007108	IdentifierDeclStatement	bool escaped = false ;	470:2:16250:16270	1006982	4	True				
ANR	1007109	IdentifierDecl	escaped = false		1006982	0					
ANR	1007110	IdentifierDeclType	bool		1006982	0					
ANR	1007111	Identifier	escaped		1006982	1					
ANR	1007112	AssignmentExpression	escaped = false		1006982	2		=			
ANR	1007113	Identifier	false		1006982	0					
ANR	1007114	Identifier	false		1006982	1					
ANR	1007115	IdentifierDeclStatement	ut8 * buf = malloc ( keyword_len ) ;	471:2:16274:16305	1006982	5	True				
ANR	1007116	IdentifierDecl	* buf = malloc ( keyword_len )		1006982	0					
ANR	1007117	IdentifierDeclType	ut8 *		1006982	0					
ANR	1007118	Identifier	buf		1006982	1					
ANR	1007119	AssignmentExpression	* buf = malloc ( keyword_len )		1006982	2		=			
ANR	1007120	Identifier	buf		1006982	0					
ANR	1007121	CallExpression	malloc ( keyword_len )		1006982	1					
ANR	1007122	Callee	malloc		1006982	0					
ANR	1007123	Identifier	malloc		1006982	0					
ANR	1007124	ArgumentList	keyword_len		1006982	1					
ANR	1007125	Argument	keyword_len		1006982	0					
ANR	1007126	Identifier	keyword_len		1006982	0					
ANR	1007127	IfStatement	if ( ! buf )		1006982	6					
ANR	1007128	Condition	! buf	472:6:16313:16316	1006982	0	True				
ANR	1007129	UnaryOperationExpression	! buf		1006982	0					
ANR	1007130	UnaryOperator	!		1006982	0					
ANR	1007131	Identifier	buf		1006982	1					
ANR	1007132	CompoundStatement		16:12:530:530	1006982	1					
ANR	1007133	ReturnStatement	return 0 ;	473:3:16324:16332	1006982	0	True				
ANR	1007134	PrimaryExpression	0		1006982	0					
ANR	1007135	SwitchStatement	switch ( kw -> type )		1006982	7					
ANR	1007136	Condition	kw -> type	475:10:16348:16355	1006982	0	True				
ANR	1007137	PtrMemberAccess	kw -> type		1006982	0					
ANR	1007138	Identifier	kw		1006982	0					
ANR	1007139	Identifier	type		1006982	1					
ANR	1007140	CompoundStatement		19:20:569:569	1006982	1					
ANR	1007141	Label	case R_SEARCH_KEYWORD_TYPE_STRING :	476:2:16362:16395	1006982	0	True				
ANR	1007142	Identifier	R_SEARCH_KEYWORD_TYPE_STRING		1006982	0					
ANR	1007143	CompoundStatement		26:3:742:784	1006982	1					
ANR	1007144	IdentifierDeclStatement	const int ctx = 16 ;	478:3:16404:16422	1006982	0	True				
ANR	1007145	IdentifierDecl	ctx = 16		1006982	0					
ANR	1007146	IdentifierDeclType	const int		1006982	0					
ANR	1007147	Identifier	ctx		1006982	1					
ANR	1007148	AssignmentExpression	ctx = 16		1006982	2		=			
ANR	1007149	Identifier	ctx		1006982	0					
ANR	1007150	PrimaryExpression	16		1006982	1					
ANR	1007151	IdentifierDeclStatement	const int prectx = addr > 16 ? ctx : addr ;	479:3:16427:16468	1006982	1	True				
ANR	1007152	IdentifierDecl	prectx = addr > 16 ? ctx : addr		1006982	0					
ANR	1007153	IdentifierDeclType	const int		1006982	0					
ANR	1007154	Identifier	prectx		1006982	1					
ANR	1007155	AssignmentExpression	prectx = addr > 16 ? ctx : addr		1006982	2		=			
ANR	1007156	Identifier	prectx		1006982	0					
ANR	1007157	ConditionalExpression	addr > 16 ? ctx : addr		1006982	1					
ANR	1007158	Condition	addr > 16		1006982	0					
ANR	1007159	RelationalExpression	addr > 16		1006982	0		>			
ANR	1007160	Identifier	addr		1006982	0					
ANR	1007161	PrimaryExpression	16		1006982	1					
ANR	1007162	Identifier	ctx		1006982	1					
ANR	1007163	Identifier	addr		1006982	2					
ANR	1007164	IdentifierDeclStatement	"char * pre , * pos , * wrd ;"	480:3:16473:16494	1006982	2	True				
ANR	1007165	IdentifierDecl	* pre		1006982	0					
ANR	1007166	IdentifierDeclType	char *		1006982	0					
ANR	1007167	Identifier	pre		1006982	1					
ANR	1007168	IdentifierDecl	* pos		1006982	1					
ANR	1007169	IdentifierDeclType	char *		1006982	0					
ANR	1007170	Identifier	pos		1006982	1					
ANR	1007171	IdentifierDecl	* wrd		1006982	2					
ANR	1007172	IdentifierDeclType	char *		1006982	0					
ANR	1007173	Identifier	wrd		1006982	1					
ANR	1007174	IdentifierDeclStatement	const int len = keyword_len ;	481:3:16499:16526	1006982	3	True				
ANR	1007175	IdentifierDecl	len = keyword_len		1006982	0					
ANR	1007176	IdentifierDeclType	const int		1006982	0					
ANR	1007177	Identifier	len		1006982	1					
ANR	1007178	AssignmentExpression	len = keyword_len		1006982	2		=			
ANR	1007179	Identifier	keyword_len		1006982	0					
ANR	1007180	Identifier	keyword_len		1006982	1					
ANR	1007181	IdentifierDeclStatement	"char * buf = calloc ( 1 , len + 32 + ctx * 2 ) ;"	482:3:16531:16573	1006982	4	True				
ANR	1007182	IdentifierDecl	"* buf = calloc ( 1 , len + 32 + ctx * 2 )"		1006982	0					
ANR	1007183	IdentifierDeclType	char *		1006982	0					
ANR	1007184	Identifier	buf		1006982	1					
ANR	1007185	AssignmentExpression	"* buf = calloc ( 1 , len + 32 + ctx * 2 )"		1006982	2		=			
ANR	1007186	Identifier	buf		1006982	0					
ANR	1007187	CallExpression	"calloc ( 1 , len + 32 + ctx * 2 )"		1006982	1					
ANR	1007188	Callee	calloc		1006982	0					
ANR	1007189	Identifier	calloc		1006982	0					
ANR	1007190	ArgumentList	1		1006982	1					
ANR	1007191	Argument	1		1006982	0					
ANR	1007192	PrimaryExpression	1		1006982	0					
ANR	1007193	Argument	len + 32 + ctx * 2		1006982	1					
ANR	1007194	AdditiveExpression	len + 32 + ctx * 2		1006982	0		+			
ANR	1007195	Identifier	len		1006982	0					
ANR	1007196	AdditiveExpression	32 + ctx * 2		1006982	1		+			
ANR	1007197	PrimaryExpression	32		1006982	0					
ANR	1007198	MultiplicativeExpression	ctx * 2		1006982	1		*			
ANR	1007199	Identifier	ctx		1006982	0					
ANR	1007200	PrimaryExpression	2		1006982	1					
ANR	1007201	ExpressionStatement	"type = ""string"""	483:3:16578:16593	1006982	5	True				
ANR	1007202	AssignmentExpression	"type = ""string"""		1006982	0		=			
ANR	1007203	Identifier	type		1006982	0					
ANR	1007204	PrimaryExpression	"""string"""		1006982	1					
ANR	1007205	ExpressionStatement	"r_io_read_at ( core -> io , addr - prectx , ( ut8 * ) buf , len + ( ctx * 2 ) )"	484:3:16598:16666	1006982	6	True				
ANR	1007206	CallExpression	"r_io_read_at ( core -> io , addr - prectx , ( ut8 * ) buf , len + ( ctx * 2 ) )"		1006982	0					
ANR	1007207	Callee	r_io_read_at		1006982	0					
ANR	1007208	Identifier	r_io_read_at		1006982	0					
ANR	1007209	ArgumentList	core -> io		1006982	1					
ANR	1007210	Argument	core -> io		1006982	0					
ANR	1007211	PtrMemberAccess	core -> io		1006982	0					
ANR	1007212	Identifier	core		1006982	0					
ANR	1007213	Identifier	io		1006982	1					
ANR	1007214	Argument	addr - prectx		1006982	1					
ANR	1007215	AdditiveExpression	addr - prectx		1006982	0		-			
ANR	1007216	Identifier	addr		1006982	0					
ANR	1007217	Identifier	prectx		1006982	1					
ANR	1007218	Argument	( ut8 * ) buf		1006982	2					
ANR	1007219	CastExpression	( ut8 * ) buf		1006982	0					
ANR	1007220	CastTarget	ut8 *		1006982	0					
ANR	1007221	Identifier	buf		1006982	1					
ANR	1007222	Argument	len + ( ctx * 2 )		1006982	3					
ANR	1007223	AdditiveExpression	len + ( ctx * 2 )		1006982	0		+			
ANR	1007224	Identifier	len		1006982	0					
ANR	1007225	MultiplicativeExpression	ctx * 2		1006982	1		*			
ANR	1007226	Identifier	ctx		1006982	0					
ANR	1007227	PrimaryExpression	2		1006982	1					
ANR	1007228	ExpressionStatement	"pre = getstring ( buf , prectx )"	485:3:16671:16700	1006982	7	True				
ANR	1007229	AssignmentExpression	"pre = getstring ( buf , prectx )"		1006982	0		=			
ANR	1007230	Identifier	pre		1006982	0					
ANR	1007231	CallExpression	"getstring ( buf , prectx )"		1006982	1					
ANR	1007232	Callee	getstring		1006982	0					
ANR	1007233	Identifier	getstring		1006982	0					
ANR	1007234	ArgumentList	buf		1006982	1					
ANR	1007235	Argument	buf		1006982	0					
ANR	1007236	Identifier	buf		1006982	0					
ANR	1007237	Argument	prectx		1006982	1					
ANR	1007238	Identifier	prectx		1006982	0					
ANR	1007239	ExpressionStatement	"wrd = r_str_utf16_encode ( buf + prectx , len )"	486:3:16705:16749	1006982	8	True				
ANR	1007240	AssignmentExpression	"wrd = r_str_utf16_encode ( buf + prectx , len )"		1006982	0		=			
ANR	1007241	Identifier	wrd		1006982	0					
ANR	1007242	CallExpression	"r_str_utf16_encode ( buf + prectx , len )"		1006982	1					
ANR	1007243	Callee	r_str_utf16_encode		1006982	0					
ANR	1007244	Identifier	r_str_utf16_encode		1006982	0					
ANR	1007245	ArgumentList	buf + prectx		1006982	1					
ANR	1007246	Argument	buf + prectx		1006982	0					
ANR	1007247	AdditiveExpression	buf + prectx		1006982	0		+			
ANR	1007248	Identifier	buf		1006982	0					
ANR	1007249	Identifier	prectx		1006982	1					
ANR	1007250	Argument	len		1006982	1					
ANR	1007251	Identifier	len		1006982	0					
ANR	1007252	ExpressionStatement	"pos = getstring ( buf + prectx + len , ctx )"	487:3:16754:16795	1006982	9	True				
ANR	1007253	AssignmentExpression	"pos = getstring ( buf + prectx + len , ctx )"		1006982	0		=			
ANR	1007254	Identifier	pos		1006982	0					
ANR	1007255	CallExpression	"getstring ( buf + prectx + len , ctx )"		1006982	1					
ANR	1007256	Callee	getstring		1006982	0					
ANR	1007257	Identifier	getstring		1006982	0					
ANR	1007258	ArgumentList	buf + prectx + len		1006982	1					
ANR	1007259	Argument	buf + prectx + len		1006982	0					
ANR	1007260	AdditiveExpression	buf + prectx + len		1006982	0		+			
ANR	1007261	Identifier	buf		1006982	0					
ANR	1007262	AdditiveExpression	prectx + len		1006982	1		+			
ANR	1007263	Identifier	prectx		1006982	0					
ANR	1007264	Identifier	len		1006982	1					
ANR	1007265	Argument	ctx		1006982	1					
ANR	1007266	Identifier	ctx		1006982	0					
ANR	1007267	IfStatement	if ( ! pos )		1006982	10					
ANR	1007268	Condition	! pos	488:7:16804:16807	1006982	0	True				
ANR	1007269	UnaryOperationExpression	! pos		1006982	0					
ANR	1007270	UnaryOperator	!		1006982	0					
ANR	1007271	Identifier	pos		1006982	1					
ANR	1007272	CompoundStatement		32:13:1021:1021	1006982	1					
ANR	1007273	ExpressionStatement	"pos = strdup ( """" )"	489:4:16816:16833	1006982	0	True				
ANR	1007274	AssignmentExpression	"pos = strdup ( """" )"		1006982	0		=			
ANR	1007275	Identifier	pos		1006982	0					
ANR	1007276	CallExpression	"strdup ( """" )"		1006982	1					
ANR	1007277	Callee	strdup		1006982	0					
ANR	1007278	Identifier	strdup		1006982	0					
ANR	1007279	ArgumentList	""""""		1006982	1					
ANR	1007280	Argument	""""""		1006982	0					
ANR	1007281	PrimaryExpression	""""""		1006982	0					
ANR	1007282	ExpressionStatement	free ( buf )	491:3:16843:16853	1006982	11	True				
ANR	1007283	CallExpression	free ( buf )		1006982	0					
ANR	1007284	Callee	free		1006982	0					
ANR	1007285	Identifier	free		1006982	0					
ANR	1007286	ArgumentList	buf		1006982	1					
ANR	1007287	Argument	buf		1006982	0					
ANR	1007288	Identifier	buf		1006982	0					
ANR	1007289	IfStatement	if ( json )		1006982	12					
ANR	1007290	Condition	json	492:7:16862:16865	1006982	0	True				
ANR	1007291	Identifier	json		1006982	0					
ANR	1007292	CompoundStatement		38:4:1125:1159	1006982	1					
ANR	1007293	IdentifierDeclStatement	char * pre_esc = r_str_escape ( pre ) ;	493:4:16874:16908	1006982	0	True				
ANR	1007294	IdentifierDecl	* pre_esc = r_str_escape ( pre )		1006982	0					
ANR	1007295	IdentifierDeclType	char *		1006982	0					
ANR	1007296	Identifier	pre_esc		1006982	1					
ANR	1007297	AssignmentExpression	* pre_esc = r_str_escape ( pre )		1006982	2		=			
ANR	1007298	Identifier	pre_esc		1006982	0					
ANR	1007299	CallExpression	r_str_escape ( pre )		1006982	1					
ANR	1007300	Callee	r_str_escape		1006982	0					
ANR	1007301	Identifier	r_str_escape		1006982	0					
ANR	1007302	ArgumentList	pre		1006982	1					
ANR	1007303	Argument	pre		1006982	0					
ANR	1007304	Identifier	pre		1006982	0					
ANR	1007305	IdentifierDeclStatement	char * pos_esc = r_str_escape ( pos ) ;	494:4:16914:16948	1006982	1	True				
ANR	1007306	IdentifierDecl	* pos_esc = r_str_escape ( pos )		1006982	0					
ANR	1007307	IdentifierDeclType	char *		1006982	0					
ANR	1007308	Identifier	pos_esc		1006982	1					
ANR	1007309	AssignmentExpression	* pos_esc = r_str_escape ( pos )		1006982	2		=			
ANR	1007310	Identifier	pos_esc		1006982	0					
ANR	1007311	CallExpression	r_str_escape ( pos )		1006982	1					
ANR	1007312	Callee	r_str_escape		1006982	0					
ANR	1007313	Identifier	r_str_escape		1006982	0					
ANR	1007314	ArgumentList	pos		1006982	1					
ANR	1007315	Argument	pos		1006982	0					
ANR	1007316	Identifier	pos		1006982	0					
ANR	1007317	ExpressionStatement	"s = r_str_newf ( ""%s%s%s"" , pre_esc , wrd , pos_esc )"	495:4:16954:17002	1006982	2	True				
ANR	1007318	AssignmentExpression	"s = r_str_newf ( ""%s%s%s"" , pre_esc , wrd , pos_esc )"		1006982	0		=			
ANR	1007319	Identifier	s		1006982	0					
ANR	1007320	CallExpression	"r_str_newf ( ""%s%s%s"" , pre_esc , wrd , pos_esc )"		1006982	1					
ANR	1007321	Callee	r_str_newf		1006982	0					
ANR	1007322	Identifier	r_str_newf		1006982	0					
ANR	1007323	ArgumentList	"""%s%s%s"""		1006982	1					
ANR	1007324	Argument	"""%s%s%s"""		1006982	0					
ANR	1007325	PrimaryExpression	"""%s%s%s"""		1006982	0					
ANR	1007326	Argument	pre_esc		1006982	1					
ANR	1007327	Identifier	pre_esc		1006982	0					
ANR	1007328	Argument	wrd		1006982	2					
ANR	1007329	Identifier	wrd		1006982	0					
ANR	1007330	Argument	pos_esc		1006982	3					
ANR	1007331	Identifier	pos_esc		1006982	0					
ANR	1007332	ExpressionStatement	escaped = true	496:4:17008:17022	1006982	3	True				
ANR	1007333	AssignmentExpression	escaped = true		1006982	0		=			
ANR	1007334	Identifier	escaped		1006982	0					
ANR	1007335	Identifier	true		1006982	1					
ANR	1007336	ExpressionStatement	free ( pre_esc )	497:4:17028:17042	1006982	4	True				
ANR	1007337	CallExpression	free ( pre_esc )		1006982	0					
ANR	1007338	Callee	free		1006982	0					
ANR	1007339	Identifier	free		1006982	0					
ANR	1007340	ArgumentList	pre_esc		1006982	1					
ANR	1007341	Argument	pre_esc		1006982	0					
ANR	1007342	Identifier	pre_esc		1006982	0					
ANR	1007343	ExpressionStatement	free ( pos_esc )	498:4:17048:17062	1006982	5	True				
ANR	1007344	CallExpression	free ( pos_esc )		1006982	0					
ANR	1007345	Callee	free		1006982	0					
ANR	1007346	Identifier	free		1006982	0					
ANR	1007347	ArgumentList	pos_esc		1006982	1					
ANR	1007348	Argument	pos_esc		1006982	0					
ANR	1007349	Identifier	pos_esc		1006982	0					
ANR	1007350	ElseStatement	else		1006982	0					
ANR	1007351	IfStatement	if ( use_color )		1006982	0					
ANR	1007352	Condition	use_color	499:14:17078:17086	1006982	0	True				
ANR	1007353	Identifier	use_color		1006982	0					
ANR	1007354	CompoundStatement		43:25:1300:1300	1006982	1					
ANR	1007355	Statement	s	500:4:17095:17095	1006982	0	True				
ANR	1007356	Statement	=	500:6:17097:17097	1006982	1	True				
ANR	1007357	Statement	r_str_newf	500:8:17099:17108	1006982	2	True				
ANR	1007358	Statement	(	500:19:17110:17110	1006982	3	True				
ANR	1007359	Statement	""".%s"""	500:20:17111:17115	1006982	4	True				
ANR	1007360	Statement	Color_YELLOW	500:25:17116:17127	1006982	5	True				
ANR	1007361	Statement	"""%s"""	500:38:17129:17132	1006982	6	True				
ANR	1007362	Statement	Color_RESET	500:42:17133:17143	1006982	7	True				
ANR	1007363	Statement	"""%s."""	500:54:17145:17149	1006982	8	True				
ANR	1007364	Statement	","	500:59:17150:17150	1006982	9	True				
ANR	1007365	Statement	pre	500:61:17152:17154	1006982	10	True				
ANR	1007366	Statement	","	500:64:17155:17155	1006982	11	True				
ANR	1007367	Statement	wrd	500:66:17157:17159	1006982	12	True				
ANR	1007368	Statement	","	500:69:17160:17160	1006982	13	True				
ANR	1007369	Statement	pos	500:71:17162:17164	1006982	14	True				
ANR	1007370	Statement	)	500:74:17165:17165	1006982	15	True				
ANR	1007371	ExpressionStatement		500:75:17166:17166	1006982	16	True				
ANR	1007372	ElseStatement	else		1006982	0					
ANR	1007373	CompoundStatement		45:10:1389:1389	1006982	0					
ANR	1007374	ExpressionStatement	"s = r_str_newf ( ""\\""%s%s%s\\"""" , pre , wrd , pos )"	503:4:17264:17308	1006982	0	True				
ANR	1007375	AssignmentExpression	"s = r_str_newf ( ""\\""%s%s%s\\"""" , pre , wrd , pos )"		1006982	0		=			
ANR	1007376	Identifier	s		1006982	0					
ANR	1007377	CallExpression	"r_str_newf ( ""\\""%s%s%s\\"""" , pre , wrd , pos )"		1006982	1					
ANR	1007378	Callee	r_str_newf		1006982	0					
ANR	1007379	Identifier	r_str_newf		1006982	0					
ANR	1007380	ArgumentList	"""\\""%s%s%s\\"""""		1006982	1					
ANR	1007381	Argument	"""\\""%s%s%s\\"""""		1006982	0					
ANR	1007382	PrimaryExpression	"""\\""%s%s%s\\"""""		1006982	0					
ANR	1007383	Argument	pre		1006982	1					
ANR	1007384	Identifier	pre		1006982	0					
ANR	1007385	Argument	wrd		1006982	2					
ANR	1007386	Identifier	wrd		1006982	0					
ANR	1007387	Argument	pos		1006982	3					
ANR	1007388	Identifier	pos		1006982	0					
ANR	1007389	ExpressionStatement	free ( pre )	505:3:17318:17328	1006982	13	True				
ANR	1007390	CallExpression	free ( pre )		1006982	0					
ANR	1007391	Callee	free		1006982	0					
ANR	1007392	Identifier	free		1006982	0					
ANR	1007393	ArgumentList	pre		1006982	1					
ANR	1007394	Argument	pre		1006982	0					
ANR	1007395	Identifier	pre		1006982	0					
ANR	1007396	ExpressionStatement	free ( wrd )	506:3:17333:17343	1006982	14	True				
ANR	1007397	CallExpression	free ( wrd )		1006982	0					
ANR	1007398	Callee	free		1006982	0					
ANR	1007399	Identifier	free		1006982	0					
ANR	1007400	ArgumentList	wrd		1006982	1					
ANR	1007401	Argument	wrd		1006982	0					
ANR	1007402	Identifier	wrd		1006982	0					
ANR	1007403	ExpressionStatement	free ( pos )	507:3:17348:17358	1006982	15	True				
ANR	1007404	CallExpression	free ( pos )		1006982	0					
ANR	1007405	Callee	free		1006982	0					
ANR	1007406	Identifier	free		1006982	0					
ANR	1007407	ArgumentList	pos		1006982	1					
ANR	1007408	Argument	pos		1006982	0					
ANR	1007409	Identifier	pos		1006982	0					
ANR	1007410	ExpressionStatement	free ( p )	509:3:17367:17375	1006982	2	True				
ANR	1007411	CallExpression	free ( p )		1006982	0					
ANR	1007412	Callee	free		1006982	0					
ANR	1007413	Identifier	free		1006982	0					
ANR	1007414	ArgumentList	p		1006982	1					
ANR	1007415	Argument	p		1006982	0					
ANR	1007416	Identifier	p		1006982	0					
ANR	1007417	BreakStatement	break ;	510:3:17380:17385	1006982	3	True				
ANR	1007418	Label	default :	511:2:17389:17396	1006982	4	True				
ANR	1007419	Identifier	default		1006982	0					
ANR	1007420	ExpressionStatement	len = keyword_len	512:3:17401:17418	1006982	5	True				
ANR	1007421	AssignmentExpression	len = keyword_len		1006982	0		=			
ANR	1007422	Identifier	len		1006982	0					
ANR	1007423	Identifier	keyword_len		1006982	1					
ANR	1007424	ExpressionStatement	mallocsize = ( len * 2 ) + extra	513:3:17441:17471	1006982	6	True				
ANR	1007425	AssignmentExpression	mallocsize = ( len * 2 ) + extra		1006982	0		=			
ANR	1007426	Identifier	mallocsize		1006982	0					
ANR	1007427	AdditiveExpression	( len * 2 ) + extra		1006982	1		+			
ANR	1007428	MultiplicativeExpression	len * 2		1006982	0		*			
ANR	1007429	Identifier	len		1006982	0					
ANR	1007430	PrimaryExpression	2		1006982	1					
ANR	1007431	Identifier	extra		1006982	1					
ANR	1007432	ExpressionStatement	str = ( len > 0xffff ) ? NULL : malloc ( mallocsize )	514:3:17476:17523	1006982	7	True				
ANR	1007433	AssignmentExpression	str = ( len > 0xffff ) ? NULL : malloc ( mallocsize )		1006982	0		=			
ANR	1007434	Identifier	str		1006982	0					
ANR	1007435	ConditionalExpression	( len > 0xffff ) ? NULL : malloc ( mallocsize )		1006982	1					
ANR	1007436	Condition	len > 0xffff		1006982	0					
ANR	1007437	RelationalExpression	len > 0xffff		1006982	0		>			
ANR	1007438	Identifier	len		1006982	0					
ANR	1007439	PrimaryExpression	0xffff		1006982	1					
ANR	1007440	Identifier	NULL		1006982	1					
ANR	1007441	CallExpression	malloc ( mallocsize )		1006982	2					
ANR	1007442	Callee	malloc		1006982	0					
ANR	1007443	Identifier	malloc		1006982	0					
ANR	1007444	ArgumentList	mallocsize		1006982	1					
ANR	1007445	Argument	mallocsize		1006982	0					
ANR	1007446	Identifier	mallocsize		1006982	0					
ANR	1007447	IfStatement	if ( str )		1006982	8					
ANR	1007448	Condition	str	515:7:17532:17534	1006982	0	True				
ANR	1007449	Identifier	str		1006982	0					
ANR	1007450	CompoundStatement		66:4:1894:1931	1006982	1					
ANR	1007451	ExpressionStatement	p = str	516:4:17543:17550	1006982	0	True				
ANR	1007452	AssignmentExpression	p = str		1006982	0		=			
ANR	1007453	Identifier	p		1006982	0					
ANR	1007454	Identifier	str		1006982	1					
ANR	1007455	ExpressionStatement	"memset ( str , 0 , len )"	517:4:17556:17576	1006982	1	True				
ANR	1007456	CallExpression	"memset ( str , 0 , len )"		1006982	0					
ANR	1007457	Callee	memset		1006982	0					
ANR	1007458	Identifier	memset		1006982	0					
ANR	1007459	ArgumentList	str		1006982	1					
ANR	1007460	Argument	str		1006982	0					
ANR	1007461	Identifier	str		1006982	0					
ANR	1007462	Argument	0		1006982	1					
ANR	1007463	PrimaryExpression	0		1006982	0					
ANR	1007464	Argument	len		1006982	2					
ANR	1007465	Identifier	len		1006982	0					
ANR	1007466	ExpressionStatement	"r_io_read_at ( core -> io , base_addr + addr , buf , keyword_len )"	518:4:17582:17641	1006982	2	True				
ANR	1007467	CallExpression	"r_io_read_at ( core -> io , base_addr + addr , buf , keyword_len )"		1006982	0					
ANR	1007468	Callee	r_io_read_at		1006982	0					
ANR	1007469	Identifier	r_io_read_at		1006982	0					
ANR	1007470	ArgumentList	core -> io		1006982	1					
ANR	1007471	Argument	core -> io		1006982	0					
ANR	1007472	PtrMemberAccess	core -> io		1006982	0					
ANR	1007473	Identifier	core		1006982	0					
ANR	1007474	Identifier	io		1006982	1					
ANR	1007475	Argument	base_addr + addr		1006982	1					
ANR	1007476	AdditiveExpression	base_addr + addr		1006982	0		+			
ANR	1007477	Identifier	base_addr		1006982	0					
ANR	1007478	Identifier	addr		1006982	1					
ANR	1007479	Argument	buf		1006982	2					
ANR	1007480	Identifier	buf		1006982	0					
ANR	1007481	Argument	keyword_len		1006982	3					
ANR	1007482	Identifier	keyword_len		1006982	0					
ANR	1007483	IfStatement	if ( json )		1006982	3					
ANR	1007484	Condition	json	519:8:17651:17654	1006982	0	True				
ANR	1007485	Identifier	json		1006982	0					
ANR	1007486	CompoundStatement		63:14:1868:1868	1006982	1					
ANR	1007487	ExpressionStatement	p = str	520:5:17664:17671	1006982	0	True				
ANR	1007488	AssignmentExpression	p = str		1006982	0		=			
ANR	1007489	Identifier	p		1006982	0					
ANR	1007490	Identifier	str		1006982	1					
ANR	1007491	IdentifierDeclStatement	const int bytes = ( len > 40 ) ? 40 : len ;	522:4:17683:17720	1006982	4	True				
ANR	1007492	IdentifierDecl	bytes = ( len > 40 ) ? 40 : len		1006982	0					
ANR	1007493	IdentifierDeclType	const int		1006982	0					
ANR	1007494	Identifier	bytes		1006982	1					
ANR	1007495	AssignmentExpression	bytes = ( len > 40 ) ? 40 : len		1006982	2		=			
ANR	1007496	Identifier	bytes		1006982	0					
ANR	1007497	ConditionalExpression	( len > 40 ) ? 40 : len		1006982	1					
ANR	1007498	Condition	len > 40		1006982	0					
ANR	1007499	RelationalExpression	len > 40		1006982	0		>			
ANR	1007500	Identifier	len		1006982	0					
ANR	1007501	PrimaryExpression	40		1006982	1					
ANR	1007502	PrimaryExpression	40		1006982	1					
ANR	1007503	Identifier	len		1006982	2					
ANR	1007504	ForStatement	for ( i = 0 ; i < bytes ; i ++ )		1006982	5					
ANR	1007505	ForInit	i = 0 ;	523:9:17731:17736	1006982	0	True				
ANR	1007506	AssignmentExpression	i = 0		1006982	0		=			
ANR	1007507	Identifier	i		1006982	0					
ANR	1007508	PrimaryExpression	0		1006982	1					
ANR	1007509	Condition	i < bytes	523:16:17738:17746	1006982	1	True				
ANR	1007510	RelationalExpression	i < bytes		1006982	0		<			
ANR	1007511	Identifier	i		1006982	0					
ANR	1007512	Identifier	bytes		1006982	1					
ANR	1007513	PostIncDecOperationExpression	i ++	523:27:17749:17751	1006982	2	True				
ANR	1007514	Identifier	i		1006982	0					
ANR	1007515	IncDec	++		1006982	1					
ANR	1007516	CompoundStatement		67:32:1965:1965	1006982	3					
ANR	1007517	ExpressionStatement	"sprintf ( p , ""%02x"" , buf [ i ] )"	524:5:17761:17788	1006982	0	True				
ANR	1007518	CallExpression	"sprintf ( p , ""%02x"" , buf [ i ] )"		1006982	0					
ANR	1007519	Callee	sprintf		1006982	0					
ANR	1007520	Identifier	sprintf		1006982	0					
ANR	1007521	ArgumentList	p		1006982	1					
ANR	1007522	Argument	p		1006982	0					
ANR	1007523	Identifier	p		1006982	0					
ANR	1007524	Argument	"""%02x"""		1006982	1					
ANR	1007525	PrimaryExpression	"""%02x"""		1006982	0					
ANR	1007526	Argument	buf [ i ]		1006982	2					
ANR	1007527	ArrayIndexing	buf [ i ]		1006982	0					
ANR	1007528	Identifier	buf		1006982	0					
ANR	1007529	Identifier	i		1006982	1					
ANR	1007530	ExpressionStatement	p += 2	525:5:17795:17801	1006982	1	True				
ANR	1007531	AssignmentExpression	p += 2		1006982	0		+=			
ANR	1007532	Identifier	p		1006982	0					
ANR	1007533	PrimaryExpression	2		1006982	1					
ANR	1007534	IfStatement	if ( bytes != len )		1006982	6					
ANR	1007535	Condition	bytes != len	527:8:17817:17828	1006982	0	True				
ANR	1007536	EqualityExpression	bytes != len		1006982	0		!=			
ANR	1007537	Identifier	bytes		1006982	0					
ANR	1007538	Identifier	len		1006982	1					
ANR	1007539	CompoundStatement		71:22:2042:2042	1006982	1					
ANR	1007540	ExpressionStatement	"strcpy ( p , ""..."" )"	528:5:17838:17855	1006982	0	True				
ANR	1007541	CallExpression	"strcpy ( p , ""..."" )"		1006982	0					
ANR	1007542	Callee	strcpy		1006982	0					
ANR	1007543	Identifier	strcpy		1006982	0					
ANR	1007544	ArgumentList	p		1006982	1					
ANR	1007545	Argument	p		1006982	0					
ANR	1007546	Identifier	p		1006982	0					
ANR	1007547	Argument	"""..."""		1006982	1					
ANR	1007548	PrimaryExpression	"""..."""		1006982	0					
ANR	1007549	ExpressionStatement	p += 3	529:5:17862:17868	1006982	1	True				
ANR	1007550	AssignmentExpression	p += 3		1006982	0		+=			
ANR	1007551	Identifier	p		1006982	0					
ANR	1007552	PrimaryExpression	3		1006982	1					
ANR	1007553	ExpressionStatement	* p = 0	531:4:17880:17886	1006982	7	True				
ANR	1007554	AssignmentExpression	* p = 0		1006982	0		=			
ANR	1007555	UnaryOperationExpression	* p		1006982	0					
ANR	1007556	UnaryOperator	*		1006982	0					
ANR	1007557	Identifier	p		1006982	1					
ANR	1007558	PrimaryExpression	0		1006982	1					
ANR	1007559	ElseStatement	else		1006982	0					
ANR	1007560	CompoundStatement		76:10:2109:2109	1006982	0					
ANR	1007561	ExpressionStatement	"eprintf ( ""Cannot allocate %d\\n"" , mallocsize )"	533:4:17904:17948	1006982	0	True				
ANR	1007562	CallExpression	"eprintf ( ""Cannot allocate %d\\n"" , mallocsize )"		1006982	0					
ANR	1007563	Callee	eprintf		1006982	0					
ANR	1007564	Identifier	eprintf		1006982	0					
ANR	1007565	ArgumentList	"""Cannot allocate %d\\n"""		1006982	1					
ANR	1007566	Argument	"""Cannot allocate %d\\n"""		1006982	0					
ANR	1007567	PrimaryExpression	"""Cannot allocate %d\\n"""		1006982	0					
ANR	1007568	Argument	mallocsize		1006982	1					
ANR	1007569	Identifier	mallocsize		1006982	0					
ANR	1007570	ExpressionStatement	s = str	535:3:17958:17965	1006982	9	True				
ANR	1007571	AssignmentExpression	s = str		1006982	0		=			
ANR	1007572	Identifier	s		1006982	0					
ANR	1007573	Identifier	str		1006982	1					
ANR	1007574	ExpressionStatement	str = NULL	536:3:17970:17980	1006982	10	True				
ANR	1007575	AssignmentExpression	str = NULL		1006982	0		=			
ANR	1007576	Identifier	str		1006982	0					
ANR	1007577	Identifier	NULL		1006982	1					
ANR	1007578	BreakStatement	break ;	537:3:17985:17990	1006982	11	True				
ANR	1007579	IfStatement	if ( json )		1006982	8					
ANR	1007580	Condition	json	540:6:18003:18006	1006982	0	True				
ANR	1007581	Identifier	json		1006982	0					
ANR	1007582	CompoundStatement		88:3:2290:2331	1006982	1					
ANR	1007583	IfStatement	if ( core -> search -> nhits >= 1 )		1006982	0					
ANR	1007584	Condition	core -> search -> nhits >= 1	541:7:18018:18041	1006982	0	True				
ANR	1007585	RelationalExpression	core -> search -> nhits >= 1		1006982	0		>=			
ANR	1007586	PtrMemberAccess	core -> search -> nhits		1006982	0					
ANR	1007587	PtrMemberAccess	core -> search		1006982	0					
ANR	1007588	Identifier	core		1006982	0					
ANR	1007589	Identifier	search		1006982	1					
ANR	1007590	Identifier	nhits		1006982	1					
ANR	1007591	PrimaryExpression	1		1006982	1					
ANR	1007592	CompoundStatement		85:33:2255:2255	1006982	1					
ANR	1007593	ExpressionStatement	"r_cons_printf ( "","" )"	542:4:18050:18069	1006982	0	True				
ANR	1007594	CallExpression	"r_cons_printf ( "","" )"		1006982	0					
ANR	1007595	Callee	r_cons_printf		1006982	0					
ANR	1007596	Identifier	r_cons_printf		1006982	0					
ANR	1007597	ArgumentList	""","""		1006982	1					
ANR	1007598	Argument	""","""		1006982	0					
ANR	1007599	PrimaryExpression	""","""		1006982	0					
ANR	1007600	IdentifierDeclStatement	char * es = escaped ? s : r_str_escape ( s ) ;	544:3:18079:18120	1006982	1	True				
ANR	1007601	IdentifierDecl	* es = escaped ? s : r_str_escape ( s )		1006982	0					
ANR	1007602	IdentifierDeclType	char *		1006982	0					
ANR	1007603	Identifier	es		1006982	1					
ANR	1007604	AssignmentExpression	* es = escaped ? s : r_str_escape ( s )		1006982	2		=			
ANR	1007605	Identifier	es		1006982	0					
ANR	1007606	ConditionalExpression	escaped ? s : r_str_escape ( s )		1006982	1					
ANR	1007607	Condition	escaped		1006982	0					
ANR	1007608	Identifier	escaped		1006982	0					
ANR	1007609	Identifier	s		1006982	1					
ANR	1007610	CallExpression	r_str_escape ( s )		1006982	2					
ANR	1007611	Callee	r_str_escape		1006982	0					
ANR	1007612	Identifier	r_str_escape		1006982	0					
ANR	1007613	ArgumentList	s		1006982	1					
ANR	1007614	Argument	s		1006982	0					
ANR	1007615	Identifier	s		1006982	0					
ANR	1007616	Statement	r_cons_printf	545:3:18125:18137	1006982	2	True				
ANR	1007617	Statement	(	545:17:18139:18139	1006982	3	True				
ANR	1007618	Statement	"""{\\""offset\\"":%"""	545:18:18140:18154	1006982	4	True				
ANR	1007619	Statement	PFMT64d	545:33:18155:18161	1006982	5	True				
ANR	1007620	Statement	""",\\""type\\"":\\""%s\\"",\\""data\\"":\\""%s\\""}"""	545:41:18163:18197	1006982	6	True				
ANR	1007621	Statement	","	545:76:18198:18198	1006982	7	True				
ANR	1007622	Statement	base_addr	546:5:18205:18213	1006982	8	True				
ANR	1007623	Statement	+	546:15:18215:18215	1006982	9	True				
ANR	1007624	Statement	addr	546:17:18217:18220	1006982	10	True				
ANR	1007625	Statement	","	546:21:18221:18221	1006982	11	True				
ANR	1007626	Statement	type	546:23:18223:18226	1006982	12	True				
ANR	1007627	Statement	","	546:27:18227:18227	1006982	13	True				
ANR	1007628	Statement	es	546:29:18229:18230	1006982	14	True				
ANR	1007629	Statement	)	546:31:18231:18231	1006982	15	True				
ANR	1007630	ExpressionStatement		546:32:18232:18232	1006982	16	True				
ANR	1007631	IfStatement	if ( ! escaped )		1006982	17					
ANR	1007632	Condition	! escaped	547:7:18241:18248	1006982	0	True				
ANR	1007633	UnaryOperationExpression	! escaped		1006982	0					
ANR	1007634	UnaryOperator	!		1006982	0					
ANR	1007635	Identifier	escaped		1006982	1					
ANR	1007636	CompoundStatement		91:17:2462:2462	1006982	1					
ANR	1007637	ExpressionStatement	free ( es )	548:4:18257:18266	1006982	0	True				
ANR	1007638	CallExpression	free ( es )		1006982	0					
ANR	1007639	Callee	free		1006982	0					
ANR	1007640	Identifier	free		1006982	0					
ANR	1007641	ArgumentList	es		1006982	1					
ANR	1007642	Argument	es		1006982	0					
ANR	1007643	Identifier	es		1006982	0					
ANR	1007644	ElseStatement	else		1006982	0					
ANR	1007645	CompoundStatement		94:9:2493:2493	1006982	0					
ANR	1007646	Statement	r_cons_printf	551:3:18287:18299	1006982	0	True				
ANR	1007647	Statement	(	551:17:18301:18301	1006982	1	True				
ANR	1007648	Statement	"""0x%08"""	551:18:18302:18308	1006982	2	True				
ANR	1007649	Statement	PFMT64x	551:25:18309:18315	1006982	3	True				
ANR	1007650	Statement	""" %s%d_%d %s\\n"""	551:33:18317:18331	1006982	4	True				
ANR	1007651	Statement	","	551:48:18332:18332	1006982	5	True				
ANR	1007652	Statement	base_addr	552:4:18338:18346	1006982	6	True				
ANR	1007653	Statement	+	552:14:18348:18348	1006982	7	True				
ANR	1007654	Statement	addr	552:16:18350:18353	1006982	8	True				
ANR	1007655	Statement	","	552:20:18354:18354	1006982	9	True				
ANR	1007656	Statement	searchprefix	552:22:18356:18367	1006982	10	True				
ANR	1007657	Statement	","	552:34:18368:18368	1006982	11	True				
ANR	1007658	Statement	kw	552:36:18370:18371	1006982	12	True				
ANR	1007659	Statement	->	552:38:18372:18373	1006982	13	True				
ANR	1007660	Statement	kwidx	552:40:18374:18378	1006982	14	True				
ANR	1007661	Statement	","	552:45:18379:18379	1006982	15	True				
ANR	1007662	Statement	kw	552:47:18381:18382	1006982	16	True				
ANR	1007663	Statement	->	552:49:18383:18384	1006982	17	True				
ANR	1007664	Statement	count	552:51:18385:18389	1006982	18	True				
ANR	1007665	Statement	","	552:56:18390:18390	1006982	19	True				
ANR	1007666	Statement	s	552:58:18392:18392	1006982	20	True				
ANR	1007667	Statement	)	552:59:18393:18393	1006982	21	True				
ANR	1007668	ExpressionStatement		552:60:18394:18394	1006982	22	True				
ANR	1007669	ExpressionStatement	free ( s )	554:2:18402:18410	1006982	9	True				
ANR	1007670	CallExpression	free ( s )		1006982	0					
ANR	1007671	Callee	free		1006982	0					
ANR	1007672	Identifier	free		1006982	0					
ANR	1007673	ArgumentList	s		1006982	1					
ANR	1007674	Argument	s		1006982	0					
ANR	1007675	Identifier	s		1006982	0					
ANR	1007676	ExpressionStatement	free ( buf )	555:2:18414:18424	1006982	10	True				
ANR	1007677	CallExpression	free ( buf )		1006982	0					
ANR	1007678	Callee	free		1006982	0					
ANR	1007679	Identifier	free		1006982	0					
ANR	1007680	ArgumentList	buf		1006982	1					
ANR	1007681	Argument	buf		1006982	0					
ANR	1007682	Identifier	buf		1006982	0					
ANR	1007683	ExpressionStatement	free ( str )	556:2:18428:18438	1006982	11	True				
ANR	1007684	CallExpression	free ( str )		1006982	0					
ANR	1007685	Callee	free		1006982	0					
ANR	1007686	Identifier	free		1006982	0					
ANR	1007687	ArgumentList	str		1006982	1					
ANR	1007688	Argument	str		1006982	0					
ANR	1007689	Identifier	str		1006982	0					
ANR	1007690	ElseStatement	else		1006982	0					
ANR	1007691	IfStatement	if ( kw )		1006982	0					
ANR	1007692	Condition	kw	557:12:18452:18453	1006982	0	True				
ANR	1007693	Identifier	kw		1006982	0					
ANR	1007694	CompoundStatement		101:16:2667:2667	1006982	1					
ANR	1007695	IfStatement	if ( json )		1006982	0					
ANR	1007696	Condition	json	558:6:18464:18467	1006982	0	True				
ANR	1007697	Identifier	json		1006982	0					
ANR	1007698	CompoundStatement		102:12:2681:2681	1006982	1					
ANR	1007699	IfStatement	if ( core -> search -> nhits >= 1 )		1006982	0					
ANR	1007700	Condition	core -> search -> nhits >= 1	559:7:18479:18502	1006982	0	True				
ANR	1007701	RelationalExpression	core -> search -> nhits >= 1		1006982	0		>=			
ANR	1007702	PtrMemberAccess	core -> search -> nhits		1006982	0					
ANR	1007703	PtrMemberAccess	core -> search		1006982	0					
ANR	1007704	Identifier	core		1006982	0					
ANR	1007705	Identifier	search		1006982	1					
ANR	1007706	Identifier	nhits		1006982	1					
ANR	1007707	PrimaryExpression	1		1006982	1					
ANR	1007708	CompoundStatement		103:33:2716:2716	1006982	1					
ANR	1007709	ExpressionStatement	"r_cons_printf ( "","" )"	560:4:18511:18530	1006982	0	True				
ANR	1007710	CallExpression	"r_cons_printf ( "","" )"		1006982	0					
ANR	1007711	Callee	r_cons_printf		1006982	0					
ANR	1007712	Identifier	r_cons_printf		1006982	0					
ANR	1007713	ArgumentList	""","""		1006982	1					
ANR	1007714	Argument	""","""		1006982	0					
ANR	1007715	PrimaryExpression	""","""		1006982	0					
ANR	1007716	Statement	r_cons_printf	562:3:18540:18552	1006982	1	True				
ANR	1007717	Statement	(	562:17:18554:18554	1006982	2	True				
ANR	1007718	Statement	"""{\\""offset\\"": %"""	562:18:18555:18570	1006982	3	True				
ANR	1007719	Statement	PFMT64d	562:34:18571:18577	1006982	4	True				
ANR	1007720	Statement	""",\\""len\\"":%d}"""	562:42:18579:18592	1006982	5	True				
ANR	1007721	Statement	","	562:56:18593:18593	1006982	6	True				
ANR	1007722	Statement	base_addr	563:4:18599:18607	1006982	7	True				
ANR	1007723	Statement	+	563:14:18609:18609	1006982	8	True				
ANR	1007724	Statement	addr	563:16:18611:18614	1006982	9	True				
ANR	1007725	Statement	","	563:20:18615:18615	1006982	10	True				
ANR	1007726	Statement	kw	563:22:18617:18618	1006982	11	True				
ANR	1007727	Statement	->	563:24:18619:18620	1006982	12	True				
ANR	1007728	Statement	kwidx	563:26:18621:18625	1006982	13	True				
ANR	1007729	Statement	","	563:31:18626:18626	1006982	14	True				
ANR	1007730	Statement	keyword_len	563:33:18628:18638	1006982	15	True				
ANR	1007731	Statement	)	563:44:18639:18639	1006982	16	True				
ANR	1007732	ExpressionStatement		563:45:18640:18640	1006982	17	True				
ANR	1007733	ElseStatement	else		1006982	0					
ANR	1007734	CompoundStatement		108:9:2862:2862	1006982	0					
ANR	1007735	IfStatement	if ( searchflags )		1006982	0					
ANR	1007736	Condition	searchflags	565:7:18660:18670	1006982	0	True				
ANR	1007737	Identifier	searchflags		1006982	0					
ANR	1007738	CompoundStatement		109:20:2884:2884	1006982	1					
ANR	1007739	ExpressionStatement	"r_cons_printf ( ""%s%d_%d\\n"" , searchprefix , kw -> kwidx , kw -> count )"	566:4:18679:18742	1006982	0	True				
ANR	1007740	CallExpression	"r_cons_printf ( ""%s%d_%d\\n"" , searchprefix , kw -> kwidx , kw -> count )"		1006982	0					
ANR	1007741	Callee	r_cons_printf		1006982	0					
ANR	1007742	Identifier	r_cons_printf		1006982	0					
ANR	1007743	ArgumentList	"""%s%d_%d\\n"""		1006982	1					
ANR	1007744	Argument	"""%s%d_%d\\n"""		1006982	0					
ANR	1007745	PrimaryExpression	"""%s%d_%d\\n"""		1006982	0					
ANR	1007746	Argument	searchprefix		1006982	1					
ANR	1007747	Identifier	searchprefix		1006982	0					
ANR	1007748	Argument	kw -> kwidx		1006982	2					
ANR	1007749	PtrMemberAccess	kw -> kwidx		1006982	0					
ANR	1007750	Identifier	kw		1006982	0					
ANR	1007751	Identifier	kwidx		1006982	1					
ANR	1007752	Argument	kw -> count		1006982	3					
ANR	1007753	PtrMemberAccess	kw -> count		1006982	0					
ANR	1007754	Identifier	kw		1006982	0					
ANR	1007755	Identifier	count		1006982	1					
ANR	1007756	ElseStatement	else		1006982	0					
ANR	1007757	CompoundStatement		111:10:2965:2965	1006982	0					
ANR	1007758	Statement	r_cons_printf	568:4:18760:18772	1006982	0	True				
ANR	1007759	Statement	(	568:18:18774:18774	1006982	1	True				
ANR	1007760	Statement	"""f %s%d_%d %d 0x%08"""	568:19:18775:18794	1006982	2	True				
ANR	1007761	Statement	PFMT64x	568:39:18795:18801	1006982	3	True				
ANR	1007762	Statement	"""\\n"""	568:47:18803:18806	1006982	4	True				
ANR	1007763	Statement	","	568:51:18807:18807	1006982	5	True				
ANR	1007764	Statement	searchprefix	568:53:18809:18820	1006982	6	True				
ANR	1007765	Statement	","	568:65:18821:18821	1006982	7	True				
ANR	1007766	Statement	kw	569:5:18828:18829	1006982	8	True				
ANR	1007767	Statement	->	569:7:18830:18831	1006982	9	True				
ANR	1007768	Statement	kwidx	569:9:18832:18836	1006982	10	True				
ANR	1007769	Statement	","	569:14:18837:18837	1006982	11	True				
ANR	1007770	Statement	kw	569:16:18839:18840	1006982	12	True				
ANR	1007771	Statement	->	569:18:18841:18842	1006982	13	True				
ANR	1007772	Statement	count	569:20:18843:18847	1006982	14	True				
ANR	1007773	Statement	","	569:25:18848:18848	1006982	15	True				
ANR	1007774	Statement	keyword_len	569:27:18850:18860	1006982	16	True				
ANR	1007775	Statement	","	569:38:18861:18861	1006982	17	True				
ANR	1007776	Statement	base_addr	569:40:18863:18871	1006982	18	True				
ANR	1007777	Statement	+	569:50:18873:18873	1006982	19	True				
ANR	1007778	Statement	addr	569:52:18875:18878	1006982	20	True				
ANR	1007779	Statement	)	569:56:18879:18879	1006982	21	True				
ANR	1007780	ExpressionStatement		569:57:18880:18880	1006982	22	True				
ANR	1007781	IfStatement	if ( searchflags && kw )		1006982	7					
ANR	1007782	Condition	searchflags && kw	573:5:18899:18915	1006982	0	True				
ANR	1007783	AndExpression	searchflags && kw		1006982	0		&&			
ANR	1007784	Identifier	searchflags		1006982	0					
ANR	1007785	Identifier	kw		1006982	1					
ANR	1007786	CompoundStatement		118:2:3133:3207	1006982	1					
ANR	1007787	IdentifierDeclStatement	"const char * flag = sdb_fmt ( ""%s%d_%d"" , searchprefix , kw -> kwidx , kw -> count ) ;"	574:2:18922:18996	1006982	0	True				
ANR	1007788	IdentifierDecl	"* flag = sdb_fmt ( ""%s%d_%d"" , searchprefix , kw -> kwidx , kw -> count )"		1006982	0					
ANR	1007789	IdentifierDeclType	const char *		1006982	0					
ANR	1007790	Identifier	flag		1006982	1					
ANR	1007791	AssignmentExpression	"* flag = sdb_fmt ( ""%s%d_%d"" , searchprefix , kw -> kwidx , kw -> count )"		1006982	2		=			
ANR	1007792	Identifier	flag		1006982	0					
ANR	1007793	CallExpression	"sdb_fmt ( ""%s%d_%d"" , searchprefix , kw -> kwidx , kw -> count )"		1006982	1					
ANR	1007794	Callee	sdb_fmt		1006982	0					
ANR	1007795	Identifier	sdb_fmt		1006982	0					
ANR	1007796	ArgumentList	"""%s%d_%d"""		1006982	1					
ANR	1007797	Argument	"""%s%d_%d"""		1006982	0					
ANR	1007798	PrimaryExpression	"""%s%d_%d"""		1006982	0					
ANR	1007799	Argument	searchprefix		1006982	1					
ANR	1007800	Identifier	searchprefix		1006982	0					
ANR	1007801	Argument	kw -> kwidx		1006982	2					
ANR	1007802	PtrMemberAccess	kw -> kwidx		1006982	0					
ANR	1007803	Identifier	kw		1006982	0					
ANR	1007804	Identifier	kwidx		1006982	1					
ANR	1007805	Argument	kw -> count		1006982	3					
ANR	1007806	PtrMemberAccess	kw -> count		1006982	0					
ANR	1007807	Identifier	kw		1006982	0					
ANR	1007808	Identifier	count		1006982	1					
ANR	1007809	ExpressionStatement	"r_flag_set ( core -> flags , flag , base_addr + addr , keyword_len )"	575:2:19000:19061	1006982	1	True				
ANR	1007810	CallExpression	"r_flag_set ( core -> flags , flag , base_addr + addr , keyword_len )"		1006982	0					
ANR	1007811	Callee	r_flag_set		1006982	0					
ANR	1007812	Identifier	r_flag_set		1006982	0					
ANR	1007813	ArgumentList	core -> flags		1006982	1					
ANR	1007814	Argument	core -> flags		1006982	0					
ANR	1007815	PtrMemberAccess	core -> flags		1006982	0					
ANR	1007816	Identifier	core		1006982	0					
ANR	1007817	Identifier	flags		1006982	1					
ANR	1007818	Argument	flag		1006982	1					
ANR	1007819	Identifier	flag		1006982	0					
ANR	1007820	Argument	base_addr + addr		1006982	2					
ANR	1007821	AdditiveExpression	base_addr + addr		1006982	0		+			
ANR	1007822	Identifier	base_addr		1006982	0					
ANR	1007823	Identifier	addr		1006982	1					
ANR	1007824	Argument	keyword_len		1006982	3					
ANR	1007825	Identifier	keyword_len		1006982	0					
ANR	1007826	IfStatement	if ( * param -> cmd_hit )		1006982	8					
ANR	1007827	Condition	* param -> cmd_hit	577:5:19071:19085	1006982	0	True				
ANR	1007828	UnaryOperationExpression	* param -> cmd_hit		1006982	0					
ANR	1007829	UnaryOperator	*		1006982	0					
ANR	1007830	PtrMemberAccess	param -> cmd_hit		1006982	1					
ANR	1007831	Identifier	param		1006982	0					
ANR	1007832	Identifier	cmd_hit		1006982	1					
ANR	1007833	CompoundStatement		122:2:3303:3327	1006982	1					
ANR	1007834	IdentifierDeclStatement	ut64 here = core -> offset ;	578:2:19092:19116	1006982	0	True				
ANR	1007835	IdentifierDecl	here = core -> offset		1006982	0					
ANR	1007836	IdentifierDeclType	ut64		1006982	0					
ANR	1007837	Identifier	here		1006982	1					
ANR	1007838	AssignmentExpression	here = core -> offset		1006982	2		=			
ANR	1007839	Identifier	here		1006982	0					
ANR	1007840	PtrMemberAccess	core -> offset		1006982	1					
ANR	1007841	Identifier	core		1006982	0					
ANR	1007842	Identifier	offset		1006982	1					
ANR	1007843	ExpressionStatement	"r_core_seek ( core , base_addr + addr , true )"	579:2:19120:19162	1006982	1	True				
ANR	1007844	CallExpression	"r_core_seek ( core , base_addr + addr , true )"		1006982	0					
ANR	1007845	Callee	r_core_seek		1006982	0					
ANR	1007846	Identifier	r_core_seek		1006982	0					
ANR	1007847	ArgumentList	core		1006982	1					
ANR	1007848	Argument	core		1006982	0					
ANR	1007849	Identifier	core		1006982	0					
ANR	1007850	Argument	base_addr + addr		1006982	1					
ANR	1007851	AdditiveExpression	base_addr + addr		1006982	0		+			
ANR	1007852	Identifier	base_addr		1006982	0					
ANR	1007853	Identifier	addr		1006982	1					
ANR	1007854	Argument	true		1006982	2					
ANR	1007855	Identifier	true		1006982	0					
ANR	1007856	ExpressionStatement	"r_core_cmd ( core , param -> cmd_hit , 0 )"	580:2:19166:19202	1006982	2	True				
ANR	1007857	CallExpression	"r_core_cmd ( core , param -> cmd_hit , 0 )"		1006982	0					
ANR	1007858	Callee	r_core_cmd		1006982	0					
ANR	1007859	Identifier	r_core_cmd		1006982	0					
ANR	1007860	ArgumentList	core		1006982	1					
ANR	1007861	Argument	core		1006982	0					
ANR	1007862	Identifier	core		1006982	0					
ANR	1007863	Argument	param -> cmd_hit		1006982	1					
ANR	1007864	PtrMemberAccess	param -> cmd_hit		1006982	0					
ANR	1007865	Identifier	param		1006982	0					
ANR	1007866	Identifier	cmd_hit		1006982	1					
ANR	1007867	Argument	0		1006982	2					
ANR	1007868	PrimaryExpression	0		1006982	0					
ANR	1007869	ExpressionStatement	"r_core_seek ( core , here , true )"	581:2:19206:19236	1006982	3	True				
ANR	1007870	CallExpression	"r_core_seek ( core , here , true )"		1006982	0					
ANR	1007871	Callee	r_core_seek		1006982	0					
ANR	1007872	Identifier	r_core_seek		1006982	0					
ANR	1007873	ArgumentList	core		1006982	1					
ANR	1007874	Argument	core		1006982	0					
ANR	1007875	Identifier	core		1006982	0					
ANR	1007876	Argument	here		1006982	1					
ANR	1007877	Identifier	here		1006982	0					
ANR	1007878	Argument	true		1006982	2					
ANR	1007879	Identifier	true		1006982	0					
ANR	1007880	ReturnStatement	return true ;	583:1:19242:19253	1006982	9	True				
ANR	1007881	Identifier	true		1006982	0					
ANR	1007882	ReturnType	static int		1006982	1					
ANR	1007883	Identifier	_cb_hit		1006982	2					
ANR	1007884	ParameterList	"RSearchKeyword * kw , void * user , ut64 addr"		1006982	3					
ANR	1007885	Parameter	RSearchKeyword * kw	457:19:15745:15762	1006982	0	True				
ANR	1007886	ParameterType	RSearchKeyword *		1006982	0					
ANR	1007887	Identifier	kw		1006982	1					
ANR	1007888	Parameter	void * user	457:39:15765:15774	1006982	1	True				
ANR	1007889	ParameterType	void *		1006982	0					
ANR	1007890	Identifier	user		1006982	1					
ANR	1007891	Parameter	ut64 addr	457:51:15777:15785	1006982	2	True				
ANR	1007892	ParameterType	ut64		1006982	0					
ANR	1007893	Identifier	addr		1006982	1					
ANR	1007894	CFGEntryNode	ENTRY		1006982		True				
ANR	1007895	CFGExitNode	EXIT		1006982		True				
ANR	1007896	Symbol	kw -> kwidx		1006982						
ANR	1007897	Symbol	core -> offset		1006982						
ANR	1007898	Symbol	type		1006982						
ANR	1007899	Symbol	mallocsize		1006982						
ANR	1007900	Symbol	searchshow		1006982						
ANR	1007901	Symbol	len		1006982						
ANR	1007902	Symbol	keyword_len		1006982						
ANR	1007903	Symbol	pre		1006982						
ANR	1007904	Symbol	* buf		1006982						
ANR	1007905	Symbol	NULL		1006982						
ANR	1007906	Symbol	R_SEARCH_DELTAKEY		1006982						
ANR	1007907	Symbol	ctx		1006982						
ANR	1007908	Symbol	pre_esc		1006982						
ANR	1007909	Symbol	* core -> search		1006982						
ANR	1007910	Symbol	base_addr		1006982						
ANR	1007911	Symbol	use_color		1006982						
ANR	1007912	Symbol	r_str_utf16_encode		1006982						
ANR	1007913	Symbol	es		1006982						
ANR	1007914	Symbol	* param		1006982						
ANR	1007915	Symbol	pos_esc		1006982						
ANR	1007916	Symbol	str		1006982						
ANR	1007917	Symbol	escaped		1006982						
ANR	1007918	Symbol	prectx		1006982						
ANR	1007919	Symbol	r_str_escape		1006982						
ANR	1007920	Symbol	core		1006982						
ANR	1007921	Symbol	* kw		1006982						
ANR	1007922	Symbol	search -> mode		1006982						
ANR	1007923	Symbol	kw -> keyword_length		1006982						
ANR	1007924	Symbol	true		1006982						
ANR	1007925	Symbol	* * param		1006982						
ANR	1007926	Symbol	core -> print		1006982						
ANR	1007927	Symbol	searchprefix		1006982						
ANR	1007928	Symbol	core -> print -> flags		1006982						
ANR	1007929	Symbol	here		1006982						
ANR	1007930	Symbol	flag		1006982						
ANR	1007931	Symbol	* core		1006982						
ANR	1007932	Symbol	calloc		1006982						
ANR	1007933	Symbol	r_str_newf		1006982						
ANR	1007934	Symbol	search		1006982						
ANR	1007935	Symbol	* param -> cmd_hit		1006982						
ANR	1007936	Symbol	core -> io		1006982						
ANR	1007937	Symbol	param		1006982						
ANR	1007938	Symbol	pos		1006982						
ANR	1007939	Symbol	param -> core		1006982						
ANR	1007940	Symbol	extra		1006982						
ANR	1007941	Symbol	R_PRINT_FLAGS_COLOR		1006982						
ANR	1007942	Symbol	json		1006982						
ANR	1007943	Symbol	addr		1006982						
ANR	1007944	Symbol	core -> search		1006982						
ANR	1007945	Symbol	sdb_fmt		1006982						
ANR	1007946	Symbol	* * core		1006982						
ANR	1007947	Symbol	getstring		1006982						
ANR	1007948	Symbol	malloc		1006982						
ANR	1007949	Symbol	core -> search -> nhits		1006982						
ANR	1007950	Symbol	searchflags		1006982						
ANR	1007951	Symbol	false		1006982						
ANR	1007952	Symbol	wrd		1006982						
ANR	1007953	Symbol	i		1006982						
ANR	1007954	Symbol	core -> flags		1006982						
ANR	1007955	Symbol	kw		1006982						
ANR	1007956	Symbol	* search		1006982						
ANR	1007957	Symbol	p		1006982						
ANR	1007958	Symbol	kw -> type		1006982						
ANR	1007959	Symbol	* core -> print		1006982						
ANR	1007960	Symbol	buf		1006982						
ANR	1007961	Symbol	s		1006982						
ANR	1007962	Symbol	* i		1006982						
ANR	1007963	Symbol	kw -> count		1006982						
ANR	1007964	Symbol	bytes		1006982						
ANR	1007965	Symbol	* p		1006982						
ANR	1007966	Symbol	strdup		1006982						
ANR	1007967	Symbol	user		1006982						
ANR	1007968	Symbol	param -> cmd_hit		1006982						
ANR	1007969	DeclStmt									
ANR	1007970	Decl							int	int	c
ANR	1007971	Function	print_search_progress	588:0:19277:19648							
ANR	1007972	FunctionDef	"print_search_progress (ut64 at , ut64 to , int n)"		1007971	0					
ANR	1007973	CompoundStatement		588:66:19343:19648	1007971	0					
ANR	1007974	IfStatement	if ( ( ++ c % 64 ) || ( json ) )		1007971	0					
ANR	1007975	Condition	( ++ c % 64 ) || ( json )	589:5:19350:19369	1007971	0	True				
ANR	1007976	OrExpression	( ++ c % 64 ) || ( json )		1007971	0		||			
ANR	1007977	MultiplicativeExpression	++ c % 64		1007971	0		%			
ANR	1007978	UnaryExpression	++ c		1007971	0					
ANR	1007979	IncDec	++		1007971	0					
ANR	1007980	Identifier	c		1007971	1					
ANR	1007981	PrimaryExpression	64		1007971	1					
ANR	1007982	Identifier	json		1007971	1					
ANR	1007983	CompoundStatement		2:27:28:28	1007971	1					
ANR	1007984	ReturnStatement	return ;	590:2:19376:19382	1007971	0	True				
ANR	1007985	IfStatement	if ( r_cons_singleton ( ) -> columns < 50 )		1007971	1					
ANR	1007986	Condition	r_cons_singleton ( ) -> columns < 50	592:5:19392:19424	1007971	0	True				
ANR	1007987	RelationalExpression	r_cons_singleton ( ) -> columns < 50		1007971	0		<			
ANR	1007988	PtrMemberAccess	r_cons_singleton ( ) -> columns		1007971	0					
ANR	1007989	CallExpression	r_cons_singleton ( )		1007971	0					
ANR	1007990	Callee	r_cons_singleton		1007971	0					
ANR	1007991	Identifier	r_cons_singleton		1007971	0					
ANR	1007992	ArgumentList			1007971	1					
ANR	1007993	Identifier	columns		1007971	1					
ANR	1007994	PrimaryExpression	50		1007971	1					
ANR	1007995	CompoundStatement		5:40:83:83	1007971	1					
ANR	1007996	Statement	eprintf	593:2:19431:19437	1007971	0	True				
ANR	1007997	Statement	(	593:10:19439:19439	1007971	1	True				
ANR	1007998	Statement	"""\\r[  ]  0x%08"""	593:11:19440:19454	1007971	2	True				
ANR	1007999	Statement	PFMT64x	593:26:19455:19461	1007971	3	True				
ANR	1008000	Statement	"""  hits = %d   \\r%s"""	593:34:19463:19482	1007971	4	True				
ANR	1008001	Statement	","	593:54:19483:19483	1007971	5	True				
ANR	1008002	Statement	at	594:3:19488:19489	1007971	6	True				
ANR	1008003	Statement	","	594:5:19490:19490	1007971	7	True				
ANR	1008004	Statement	n	594:7:19492:19492	1007971	8	True				
ANR	1008005	Statement	","	594:8:19493:19493	1007971	9	True				
ANR	1008006	Statement	(	594:10:19495:19495	1007971	10	True				
ANR	1008007	Statement	c	594:11:19496:19496	1007971	11	True				
ANR	1008008	Statement	%	594:13:19498:19498	1007971	12	True				
ANR	1008009	Statement	2	594:15:19500:19500	1007971	13	True				
ANR	1008010	Statement	)	594:16:19501:19501	1007971	14	True				
ANR	1008011	Statement	?	594:17:19502:19502	1007971	15	True				
ANR	1008012	Statement	"""[ #]"""	594:19:19504:19509	1007971	16	True				
ANR	1008013	Statement	:	594:25:19510:19510	1007971	17	True				
ANR	1008014	Statement	"""[# ]"""	594:27:19512:19517	1007971	18	True				
ANR	1008015	Statement	)	594:33:19518:19518	1007971	19	True				
ANR	1008016	ExpressionStatement		594:34:19519:19519	1007971	20	True				
ANR	1008017	ElseStatement	else		1007971	0					
ANR	1008018	CompoundStatement		8:8:185:185	1007971	0					
ANR	1008019	Statement	eprintf	596:2:19533:19539	1007971	0	True				
ANR	1008020	Statement	(	596:10:19541:19541	1007971	1	True				
ANR	1008021	Statement	"""\\r[  ]  0x%08"""	596:11:19542:19556	1007971	2	True				
ANR	1008022	Statement	PFMT64x	596:26:19557:19563	1007971	3	True				
ANR	1008023	Statement	""" < 0x%08"""	596:34:19565:19574	1007971	4	True				
ANR	1008024	Statement	PFMT64x	596:44:19575:19581	1007971	5	True				
ANR	1008025	Statement	"""  hits = %d   \\r%s"""	596:52:19583:19602	1007971	6	True				
ANR	1008026	Statement	","	596:72:19603:19603	1007971	7	True				
ANR	1008027	Statement	at	597:3:19608:19609	1007971	8	True				
ANR	1008028	Statement	","	597:5:19610:19610	1007971	9	True				
ANR	1008029	Statement	to	597:7:19612:19613	1007971	10	True				
ANR	1008030	Statement	","	597:9:19614:19614	1007971	11	True				
ANR	1008031	Statement	n	597:11:19616:19616	1007971	12	True				
ANR	1008032	Statement	","	597:12:19617:19617	1007971	13	True				
ANR	1008033	Statement	(	597:14:19619:19619	1007971	14	True				
ANR	1008034	Statement	c	597:15:19620:19620	1007971	15	True				
ANR	1008035	Statement	%	597:17:19622:19622	1007971	16	True				
ANR	1008036	Statement	2	597:19:19624:19624	1007971	17	True				
ANR	1008037	Statement	)	597:20:19625:19625	1007971	18	True				
ANR	1008038	Statement	?	597:21:19626:19626	1007971	19	True				
ANR	1008039	Statement	"""[ #]"""	597:23:19628:19633	1007971	20	True				
ANR	1008040	Statement	:	597:29:19634:19634	1007971	21	True				
ANR	1008041	Statement	"""[# ]"""	597:31:19636:19641	1007971	22	True				
ANR	1008042	Statement	)	597:37:19642:19642	1007971	23	True				
ANR	1008043	ExpressionStatement		597:38:19643:19643	1007971	24	True				
ANR	1008044	ReturnType	static inline void		1007971	1					
ANR	1008045	Identifier	print_search_progress		1007971	2					
ANR	1008046	ParameterList	"ut64 at , ut64 to , int n"		1007971	3					
ANR	1008047	Parameter	ut64 at	588:41:19318:19324	1007971	0	True				
ANR	1008048	ParameterType	ut64		1007971	0					
ANR	1008049	Identifier	at		1007971	1					
ANR	1008050	Parameter	ut64 to	588:50:19327:19333	1007971	1	True				
ANR	1008051	ParameterType	ut64		1007971	0					
ANR	1008052	Identifier	to		1007971	1					
ANR	1008053	Parameter	int n	588:59:19336:19340	1007971	2	True				
ANR	1008054	ParameterType	int		1007971	0					
ANR	1008055	Identifier	n		1007971	1					
ANR	1008056	CFGEntryNode	ENTRY		1007971		True				
ANR	1008057	CFGExitNode	EXIT		1007971		True				
ANR	1008058	Symbol	at		1007971						
ANR	1008059	Symbol	c		1007971						
ANR	1008060	Symbol	json		1007971						
ANR	1008061	Symbol	r_cons_singleton		1007971						
ANR	1008062	Symbol	to		1007971						
ANR	1008063	Symbol	n		1007971						
ANR	1008064	Symbol	* r_cons_singleton		1007971						
ANR	1008065	Symbol	r_cons_singleton ( ) -> columns		1007971						
ANR	1008066	Function	append_bound	601:0:19651:20440							
ANR	1008067	FunctionDef	"append_bound (RList * list , RIO * io , RInterval search_itv , ut64 from , ut64 size , int perms)"		1008066	0					
ANR	1008068	CompoundStatement		601:102:19753:20440	1008066	0					
ANR	1008069	IdentifierDeclStatement	RIOMap * map = R_NEW0 ( RIOMap ) ;	602:1:19756:19785	1008066	0	True				
ANR	1008070	IdentifierDecl	* map = R_NEW0 ( RIOMap )		1008066	0					
ANR	1008071	IdentifierDeclType	RIOMap *		1008066	0					
ANR	1008072	Identifier	map		1008066	1					
ANR	1008073	AssignmentExpression	* map = R_NEW0 ( RIOMap )		1008066	2		=			
ANR	1008074	Identifier	map		1008066	0					
ANR	1008075	CallExpression	R_NEW0 ( RIOMap )		1008066	1					
ANR	1008076	Callee	R_NEW0		1008066	0					
ANR	1008077	Identifier	R_NEW0		1008066	0					
ANR	1008078	ArgumentList	RIOMap		1008066	1					
ANR	1008079	Argument	RIOMap		1008066	0					
ANR	1008080	Identifier	RIOMap		1008066	0					
ANR	1008081	IfStatement	if ( ! map )		1008066	1					
ANR	1008082	Condition	! map	603:5:19792:19795	1008066	0	True				
ANR	1008083	UnaryOperationExpression	! map		1008066	0					
ANR	1008084	UnaryOperator	!		1008066	0					
ANR	1008085	Identifier	map		1008066	1					
ANR	1008086	CompoundStatement		3:11:44:44	1008066	1					
ANR	1008087	ReturnStatement	return ;	604:2:19802:19808	1008066	0	True				
ANR	1008088	IfStatement	if ( io && io -> desc )		1008066	2					
ANR	1008089	Condition	io && io -> desc	606:5:19818:19831	1008066	0	True				
ANR	1008090	AndExpression	io && io -> desc		1008066	0		&&			
ANR	1008091	Identifier	io		1008066	0					
ANR	1008092	PtrMemberAccess	io -> desc		1008066	1					
ANR	1008093	Identifier	io		1008066	0					
ANR	1008094	Identifier	desc		1008066	1					
ANR	1008095	CompoundStatement		6:21:80:80	1008066	1					
ANR	1008096	ExpressionStatement	map -> fd = r_io_fd_get_current ( io )	607:2:19838:19872	1008066	0	True				
ANR	1008097	AssignmentExpression	map -> fd = r_io_fd_get_current ( io )		1008066	0		=			
ANR	1008098	PtrMemberAccess	map -> fd		1008066	0					
ANR	1008099	Identifier	map		1008066	0					
ANR	1008100	Identifier	fd		1008066	1					
ANR	1008101	CallExpression	r_io_fd_get_current ( io )		1008066	1					
ANR	1008102	Callee	r_io_fd_get_current		1008066	0					
ANR	1008103	Identifier	r_io_fd_get_current		1008066	0					
ANR	1008104	ArgumentList	io		1008066	1					
ANR	1008105	Argument	io		1008066	0					
ANR	1008106	Identifier	io		1008066	0					
ANR	1008107	ExpressionStatement	map -> perm = perms	610:1:19879:19896	1008066	3	True				
ANR	1008108	AssignmentExpression	map -> perm = perms		1008066	0		=			
ANR	1008109	PtrMemberAccess	map -> perm		1008066	0					
ANR	1008110	Identifier	map		1008066	0					
ANR	1008111	Identifier	perm		1008066	1					
ANR	1008112	Identifier	perms		1008066	1					
ANR	1008113	IdentifierDeclStatement	"RInterval itv = { from , size } ;"	611:1:19899:19927	1008066	4	True				
ANR	1008114	IdentifierDecl	"itv = { from , size }"		1008066	0					
ANR	1008115	IdentifierDeclType	RInterval		1008066	0					
ANR	1008116	Identifier	itv		1008066	1					
ANR	1008117	AssignmentExpression	"itv = { from , size }"		1008066	2		=			
ANR	1008118	Identifier	itv		1008066	0					
ANR	1008119	InitializerList	from		1008066	1					
ANR	1008120	Identifier	from		1008066	0					
ANR	1008121	Identifier	size		1008066	1					
ANR	1008122	IfStatement	if ( size == - 1 )		1008066	5					
ANR	1008123	Condition	size == - 1	612:5:19934:19943	1008066	0	True				
ANR	1008124	EqualityExpression	size == - 1		1008066	0		==			
ANR	1008125	Identifier	size		1008066	0					
ANR	1008126	UnaryOperationExpression	- 1		1008066	1					
ANR	1008127	UnaryOperator	-		1008066	0					
ANR	1008128	PrimaryExpression	1		1008066	1					
ANR	1008129	CompoundStatement		12:17:192:192	1008066	1					
ANR	1008130	ExpressionStatement	"eprintf ( ""Warning: Invalid range. Use different search.in=? or anal.in=dbg.maps.x\\n"" )"	613:2:19950:20035	1008066	0	True				
ANR	1008131	CallExpression	"eprintf ( ""Warning: Invalid range. Use different search.in=? or anal.in=dbg.maps.x\\n"" )"		1008066	0					
ANR	1008132	Callee	eprintf		1008066	0					
ANR	1008133	Identifier	eprintf		1008066	0					
ANR	1008134	ArgumentList	"""Warning: Invalid range. Use different search.in=? or anal.in=dbg.maps.x\\n"""		1008066	1					
ANR	1008135	Argument	"""Warning: Invalid range. Use different search.in=? or anal.in=dbg.maps.x\\n"""		1008066	0					
ANR	1008136	PrimaryExpression	"""Warning: Invalid range. Use different search.in=? or anal.in=dbg.maps.x\\n"""		1008066	0					
ANR	1008137	ReturnStatement	return ;	614:2:20039:20045	1008066	1	True				
ANR	1008138	IfStatement	if ( search_itv . addr == UT64_MAX && ! search_itv . size )		1008066	6					
ANR	1008139	Condition	search_itv . addr == UT64_MAX && ! search_itv . size	617:5:20137:20183	1008066	0	True				
ANR	1008140	AndExpression	search_itv . addr == UT64_MAX && ! search_itv . size		1008066	0		&&			
ANR	1008141	EqualityExpression	search_itv . addr == UT64_MAX		1008066	0		==			
ANR	1008142	MemberAccess	search_itv . addr		1008066	0					
ANR	1008143	Identifier	search_itv		1008066	0					
ANR	1008144	Identifier	addr		1008066	1					
ANR	1008145	Identifier	UT64_MAX		1008066	1					
ANR	1008146	UnaryOperationExpression	! search_itv . size		1008066	1					
ANR	1008147	UnaryOperator	!		1008066	0					
ANR	1008148	MemberAccess	search_itv . size		1008066	1					
ANR	1008149	Identifier	search_itv		1008066	0					
ANR	1008150	Identifier	size		1008066	1					
ANR	1008151	CompoundStatement		17:54:432:432	1008066	1					
ANR	1008152	ExpressionStatement	map -> itv = itv	618:2:20190:20204	1008066	0	True				
ANR	1008153	AssignmentExpression	map -> itv = itv		1008066	0		=			
ANR	1008154	PtrMemberAccess	map -> itv		1008066	0					
ANR	1008155	Identifier	map		1008066	0					
ANR	1008156	Identifier	itv		1008066	1					
ANR	1008157	Identifier	itv		1008066	1					
ANR	1008158	ExpressionStatement	"r_list_append ( list , map )"	619:2:20208:20233	1008066	1	True				
ANR	1008159	CallExpression	"r_list_append ( list , map )"		1008066	0					
ANR	1008160	Callee	r_list_append		1008066	0					
ANR	1008161	Identifier	r_list_append		1008066	0					
ANR	1008162	ArgumentList	list		1008066	1					
ANR	1008163	Argument	list		1008066	0					
ANR	1008164	Identifier	list		1008066	0					
ANR	1008165	Argument	map		1008066	1					
ANR	1008166	Identifier	map		1008066	0					
ANR	1008167	ElseStatement	else		1008066	0					
ANR	1008168	IfStatement	"if ( r_itv_overlap ( itv , search_itv ) )"		1008066	0					
ANR	1008169	Condition	"r_itv_overlap ( itv , search_itv )"	620:12:20247:20277	1008066	0	True				
ANR	1008170	CallExpression	"r_itv_overlap ( itv , search_itv )"		1008066	0					
ANR	1008171	Callee	r_itv_overlap		1008066	0					
ANR	1008172	Identifier	r_itv_overlap		1008066	0					
ANR	1008173	ArgumentList	itv		1008066	1					
ANR	1008174	Argument	itv		1008066	0					
ANR	1008175	Identifier	itv		1008066	0					
ANR	1008176	Argument	search_itv		1008066	1					
ANR	1008177	Identifier	search_itv		1008066	0					
ANR	1008178	CompoundStatement		20:45:526:526	1008066	1					
ANR	1008179	ExpressionStatement	"map -> itv = r_itv_intersect ( itv , search_itv )"	621:2:20284:20328	1008066	0	True				
ANR	1008180	AssignmentExpression	"map -> itv = r_itv_intersect ( itv , search_itv )"		1008066	0		=			
ANR	1008181	PtrMemberAccess	map -> itv		1008066	0					
ANR	1008182	Identifier	map		1008066	0					
ANR	1008183	Identifier	itv		1008066	1					
ANR	1008184	CallExpression	"r_itv_intersect ( itv , search_itv )"		1008066	1					
ANR	1008185	Callee	r_itv_intersect		1008066	0					
ANR	1008186	Identifier	r_itv_intersect		1008066	0					
ANR	1008187	ArgumentList	itv		1008066	1					
ANR	1008188	Argument	itv		1008066	0					
ANR	1008189	Identifier	itv		1008066	0					
ANR	1008190	Argument	search_itv		1008066	1					
ANR	1008191	Identifier	search_itv		1008066	0					
ANR	1008192	IfStatement	if ( map -> itv . size )		1008066	1					
ANR	1008193	Condition	map -> itv . size	622:6:20336:20348	1008066	0	True				
ANR	1008194	MemberAccess	map -> itv . size		1008066	0					
ANR	1008195	PtrMemberAccess	map -> itv		1008066	0					
ANR	1008196	Identifier	map		1008066	0					
ANR	1008197	Identifier	itv		1008066	1					
ANR	1008198	Identifier	size		1008066	1					
ANR	1008199	CompoundStatement		22:21:597:597	1008066	1					
ANR	1008200	ExpressionStatement	"r_list_append ( list , map )"	623:3:20356:20381	1008066	0	True				
ANR	1008201	CallExpression	"r_list_append ( list , map )"		1008066	0					
ANR	1008202	Callee	r_list_append		1008066	0					
ANR	1008203	Identifier	r_list_append		1008066	0					
ANR	1008204	ArgumentList	list		1008066	1					
ANR	1008205	Argument	list		1008066	0					
ANR	1008206	Identifier	list		1008066	0					
ANR	1008207	Argument	map		1008066	1					
ANR	1008208	Identifier	map		1008066	0					
ANR	1008209	ElseStatement	else		1008066	0					
ANR	1008210	CompoundStatement		24:9:638:638	1008066	0					
ANR	1008211	ExpressionStatement	free ( map )	625:3:20397:20407	1008066	0	True				
ANR	1008212	CallExpression	free ( map )		1008066	0					
ANR	1008213	Callee	free		1008066	0					
ANR	1008214	Identifier	free		1008066	0					
ANR	1008215	ArgumentList	map		1008066	1					
ANR	1008216	Argument	map		1008066	0					
ANR	1008217	Identifier	map		1008066	0					
ANR	1008218	ElseStatement	else		1008066	0					
ANR	1008219	CompoundStatement		27:8:667:667	1008066	0					
ANR	1008220	ExpressionStatement	free ( map )	628:2:20425:20435	1008066	0	True				
ANR	1008221	CallExpression	free ( map )		1008066	0					
ANR	1008222	Callee	free		1008066	0					
ANR	1008223	Identifier	free		1008066	0					
ANR	1008224	ArgumentList	map		1008066	1					
ANR	1008225	Argument	map		1008066	0					
ANR	1008226	Identifier	map		1008066	0					
ANR	1008227	ReturnType	static void		1008066	1					
ANR	1008228	Identifier	append_bound		1008066	2					
ANR	1008229	ParameterList	"RList * list , RIO * io , RInterval search_itv , ut64 from , ut64 size , int perms"		1008066	3					
ANR	1008230	Parameter	RList * list	601:25:19676:19686	1008066	0	True				
ANR	1008231	ParameterType	RList *		1008066	0					
ANR	1008232	Identifier	list		1008066	1					
ANR	1008233	Parameter	RIO * io	601:38:19689:19695	1008066	1	True				
ANR	1008234	ParameterType	RIO *		1008066	0					
ANR	1008235	Identifier	io		1008066	1					
ANR	1008236	Parameter	RInterval search_itv	601:47:19698:19717	1008066	2	True				
ANR	1008237	ParameterType	RInterval		1008066	0					
ANR	1008238	Identifier	search_itv		1008066	1					
ANR	1008239	Parameter	ut64 from	601:69:19720:19728	1008066	3	True				
ANR	1008240	ParameterType	ut64		1008066	0					
ANR	1008241	Identifier	from		1008066	1					
ANR	1008242	Parameter	ut64 size	601:80:19731:19739	1008066	4	True				
ANR	1008243	ParameterType	ut64		1008066	0					
ANR	1008244	Identifier	size		1008066	1					
ANR	1008245	Parameter	int perms	601:91:19742:19750	1008066	5	True				
ANR	1008246	ParameterType	int		1008066	0					
ANR	1008247	Identifier	perms		1008066	1					
ANR	1008248	CFGEntryNode	ENTRY		1008066		True				
ANR	1008249	CFGExitNode	EXIT		1008066		True				
ANR	1008250	Symbol	io -> desc		1008066						
ANR	1008251	Symbol	map -> itv		1008066						
ANR	1008252	Symbol	io		1008066						
ANR	1008253	Symbol	* map		1008066						
ANR	1008254	Symbol	map -> fd		1008066						
ANR	1008255	Symbol	itv		1008066						
ANR	1008256	Symbol	list		1008066						
ANR	1008257	Symbol	r_itv_overlap		1008066						
ANR	1008258	Symbol	* io		1008066						
ANR	1008259	Symbol	R_NEW0		1008066						
ANR	1008260	Symbol	RIOMap		1008066						
ANR	1008261	Symbol	map -> itv . size		1008066						
ANR	1008262	Symbol	size		1008066						
ANR	1008263	Symbol	r_io_fd_get_current		1008066						
ANR	1008264	Symbol	search_itv . addr		1008066						
ANR	1008265	Symbol	search_itv		1008066						
ANR	1008266	Symbol	r_itv_intersect		1008066						
ANR	1008267	Symbol	from		1008066						
ANR	1008268	Symbol	perms		1008066						
ANR	1008269	Symbol	UT64_MAX		1008066						
ANR	1008270	Symbol	map		1008066						
ANR	1008271	Symbol	map -> perm		1008066						
ANR	1008272	Symbol	search_itv . size		1008066						
ANR	1008273	Function	maskMatches	632:0:20443:20613							
ANR	1008274	FunctionDef	"maskMatches (int perm , int mask , bool only)"		1008273	0					
ANR	1008275	CompoundStatement		632:55:20498:20613	1008273	0					
ANR	1008276	IfStatement	if ( mask )		1008273	0					
ANR	1008277	Condition	mask	633:5:20505:20508	1008273	0	True				
ANR	1008278	Identifier	mask		1008273	0					
ANR	1008279	CompoundStatement		2:11:12:12	1008273	1					
ANR	1008280	IfStatement	if ( only )		1008273	0					
ANR	1008281	Condition	only	634:6:20519:20522	1008273	0	True				
ANR	1008282	Identifier	only		1008273	0					
ANR	1008283	CompoundStatement		3:12:26:26	1008273	1					
ANR	1008284	ReturnStatement	return ( ( perm & 7 ) != mask ) ;	635:3:20530:20557	1008273	0	True				
ANR	1008285	EqualityExpression	( perm & 7 ) != mask		1008273	0		!=			
ANR	1008286	BitAndExpression	perm & 7		1008273	0		&			
ANR	1008287	Identifier	perm		1008273	0					
ANR	1008288	PrimaryExpression	7		1008273	1					
ANR	1008289	Identifier	mask		1008273	1					
ANR	1008290	ReturnStatement	return ( perm & mask ) != mask ;	637:2:20565:20593	1008273	1	True				
ANR	1008291	EqualityExpression	( perm & mask ) != mask		1008273	0		!=			
ANR	1008292	BitAndExpression	perm & mask		1008273	0		&			
ANR	1008293	Identifier	perm		1008273	0					
ANR	1008294	Identifier	mask		1008273	1					
ANR	1008295	Identifier	mask		1008273	1					
ANR	1008296	ReturnStatement	return false ;	639:1:20599:20611	1008273	1	True				
ANR	1008297	Identifier	false		1008273	0					
ANR	1008298	ReturnType	static bool		1008273	1					
ANR	1008299	Identifier	maskMatches		1008273	2					
ANR	1008300	ParameterList	"int perm , int mask , bool only"		1008273	3					
ANR	1008301	Parameter	int perm	632:24:20467:20474	1008273	0	True				
ANR	1008302	ParameterType	int		1008273	0					
ANR	1008303	Identifier	perm		1008273	1					
ANR	1008304	Parameter	int mask	632:34:20477:20484	1008273	1	True				
ANR	1008305	ParameterType	int		1008273	0					
ANR	1008306	Identifier	mask		1008273	1					
ANR	1008307	Parameter	bool only	632:44:20487:20495	1008273	2	True				
ANR	1008308	ParameterType	bool		1008273	0					
ANR	1008309	Identifier	only		1008273	1					
ANR	1008310	CFGEntryNode	ENTRY		1008273		True				
ANR	1008311	CFGExitNode	EXIT		1008273		True				
ANR	1008312	Symbol	perm		1008273						
ANR	1008313	Symbol	only		1008273						
ANR	1008314	Symbol	false		1008273						
ANR	1008315	Symbol	mask		1008273						
ANR	1008316	Function	r_core_get_boundaries_prot	643:0:20658:31779							
ANR	1008317	FunctionDef	"r_core_get_boundaries_prot (RCore * core , int perm , const char * mode , const char * prefix)"		1008316	0					
ANR	1008318	CompoundStatement		643:101:20759:31779	1008316	0					
ANR	1008319	ExpressionStatement	"r_return_val_if_fail ( core , NULL )"	644:1:20762:20795	1008316	0	True				
ANR	1008320	CallExpression	"r_return_val_if_fail ( core , NULL )"		1008316	0					
ANR	1008321	Callee	r_return_val_if_fail		1008316	0					
ANR	1008322	Identifier	r_return_val_if_fail		1008316	0					
ANR	1008323	ArgumentList	core		1008316	1					
ANR	1008324	Argument	core		1008316	0					
ANR	1008325	Identifier	core		1008316	0					
ANR	1008326	Argument	NULL		1008316	1					
ANR	1008327	Identifier	NULL		1008316	0					
ANR	1008328	IdentifierDeclStatement	RList * list = r_list_newf ( free ) ;	646:1:20799:20831	1008316	1	True				
ANR	1008329	IdentifierDecl	* list = r_list_newf ( free )		1008316	0					
ANR	1008330	IdentifierDeclType	RList *		1008316	0					
ANR	1008331	Identifier	list		1008316	1					
ANR	1008332	AssignmentExpression	* list = r_list_newf ( free )		1008316	2		=			
ANR	1008333	Identifier	list		1008316	0					
ANR	1008334	CallExpression	r_list_newf ( free )		1008316	1					
ANR	1008335	Callee	r_list_newf		1008316	0					
ANR	1008336	Identifier	r_list_newf		1008316	0					
ANR	1008337	ArgumentList	free		1008316	1					
ANR	1008338	Argument	free		1008316	0					
ANR	1008339	Identifier	free		1008316	0					
ANR	1008340	IfStatement	if ( ! list )		1008316	2					
ANR	1008341	Condition	! list	647:5:20861:20865	1008316	0	True				
ANR	1008342	UnaryOperationExpression	! list		1008316	0					
ANR	1008343	UnaryOperator	!		1008316	0					
ANR	1008344	Identifier	list		1008316	1					
ANR	1008345	CompoundStatement		5:12:108:108	1008316	1					
ANR	1008346	ReturnStatement	return NULL ;	648:2:20872:20883	1008316	0	True				
ANR	1008347	Identifier	NULL		1008316	0					
ANR	1008348	IdentifierDeclStatement	char bound_in [ 32 ] ;	651:1:20890:20907	1008316	3	True				
ANR	1008349	IdentifierDecl	bound_in [ 32 ]		1008316	0					
ANR	1008350	IdentifierDeclType	char [ 32 ]		1008316	0					
ANR	1008351	Identifier	bound_in		1008316	1					
ANR	1008352	PrimaryExpression	32		1008316	2					
ANR	1008353	IdentifierDeclStatement	char bound_from [ 32 ] ;	652:1:20910:20929	1008316	4	True				
ANR	1008354	IdentifierDecl	bound_from [ 32 ]		1008316	0					
ANR	1008355	IdentifierDeclType	char [ 32 ]		1008316	0					
ANR	1008356	Identifier	bound_from		1008316	1					
ANR	1008357	PrimaryExpression	32		1008316	2					
ANR	1008358	IdentifierDeclStatement	char bound_to [ 32 ] ;	653:1:20932:20949	1008316	5	True				
ANR	1008359	IdentifierDecl	bound_to [ 32 ]		1008316	0					
ANR	1008360	IdentifierDeclType	char [ 32 ]		1008316	0					
ANR	1008361	Identifier	bound_to		1008316	1					
ANR	1008362	PrimaryExpression	32		1008316	2					
ANR	1008363	ExpressionStatement	"snprintf ( bound_in , sizeof ( bound_in ) , ""%s.%s"" , prefix , ""in"" )"	654:1:20952:21013	1008316	6	True				
ANR	1008364	CallExpression	"snprintf ( bound_in , sizeof ( bound_in ) , ""%s.%s"" , prefix , ""in"" )"		1008316	0					
ANR	1008365	Callee	snprintf		1008316	0					
ANR	1008366	Identifier	snprintf		1008316	0					
ANR	1008367	ArgumentList	bound_in		1008316	1					
ANR	1008368	Argument	bound_in		1008316	0					
ANR	1008369	Identifier	bound_in		1008316	0					
ANR	1008370	Argument	sizeof ( bound_in )		1008316	1					
ANR	1008371	SizeofExpression	sizeof ( bound_in )		1008316	0					
ANR	1008372	Sizeof	sizeof		1008316	0					
ANR	1008373	SizeofOperand	bound_in		1008316	1					
ANR	1008374	Argument	"""%s.%s"""		1008316	2					
ANR	1008375	PrimaryExpression	"""%s.%s"""		1008316	0					
ANR	1008376	Argument	prefix		1008316	3					
ANR	1008377	Identifier	prefix		1008316	0					
ANR	1008378	Argument	"""in"""		1008316	4					
ANR	1008379	PrimaryExpression	"""in"""		1008316	0					
ANR	1008380	ExpressionStatement	"snprintf ( bound_from , sizeof ( bound_from ) , ""%s.%s"" , prefix , ""from"" )"	655:1:21016:21083	1008316	7	True				
ANR	1008381	CallExpression	"snprintf ( bound_from , sizeof ( bound_from ) , ""%s.%s"" , prefix , ""from"" )"		1008316	0					
ANR	1008382	Callee	snprintf		1008316	0					
ANR	1008383	Identifier	snprintf		1008316	0					
ANR	1008384	ArgumentList	bound_from		1008316	1					
ANR	1008385	Argument	bound_from		1008316	0					
ANR	1008386	Identifier	bound_from		1008316	0					
ANR	1008387	Argument	sizeof ( bound_from )		1008316	1					
ANR	1008388	SizeofExpression	sizeof ( bound_from )		1008316	0					
ANR	1008389	Sizeof	sizeof		1008316	0					
ANR	1008390	SizeofOperand	bound_from		1008316	1					
ANR	1008391	Argument	"""%s.%s"""		1008316	2					
ANR	1008392	PrimaryExpression	"""%s.%s"""		1008316	0					
ANR	1008393	Argument	prefix		1008316	3					
ANR	1008394	Identifier	prefix		1008316	0					
ANR	1008395	Argument	"""from"""		1008316	4					
ANR	1008396	PrimaryExpression	"""from"""		1008316	0					
ANR	1008397	ExpressionStatement	"snprintf ( bound_to , sizeof ( bound_to ) , ""%s.%s"" , prefix , ""to"" )"	656:1:21086:21147	1008316	8	True				
ANR	1008398	CallExpression	"snprintf ( bound_to , sizeof ( bound_to ) , ""%s.%s"" , prefix , ""to"" )"		1008316	0					
ANR	1008399	Callee	snprintf		1008316	0					
ANR	1008400	Identifier	snprintf		1008316	0					
ANR	1008401	ArgumentList	bound_to		1008316	1					
ANR	1008402	Argument	bound_to		1008316	0					
ANR	1008403	Identifier	bound_to		1008316	0					
ANR	1008404	Argument	sizeof ( bound_to )		1008316	1					
ANR	1008405	SizeofExpression	sizeof ( bound_to )		1008316	0					
ANR	1008406	Sizeof	sizeof		1008316	0					
ANR	1008407	SizeofOperand	bound_to		1008316	1					
ANR	1008408	Argument	"""%s.%s"""		1008316	2					
ANR	1008409	PrimaryExpression	"""%s.%s"""		1008316	0					
ANR	1008410	Argument	prefix		1008316	3					
ANR	1008411	Identifier	prefix		1008316	0					
ANR	1008412	Argument	"""to"""		1008316	4					
ANR	1008413	PrimaryExpression	"""to"""		1008316	0					
ANR	1008414	IdentifierDeclStatement	"const ut64 search_from = r_config_get_i ( core -> config , bound_from ) , search_to = r_config_get_i ( core -> config , bound_to ) ;"	657:1:21150:21276	1008316	9	True				
ANR	1008415	IdentifierDecl	"search_from = r_config_get_i ( core -> config , bound_from )"		1008316	0					
ANR	1008416	IdentifierDeclType	const ut64		1008316	0					
ANR	1008417	Identifier	search_from		1008316	1					
ANR	1008418	AssignmentExpression	"search_from = r_config_get_i ( core -> config , bound_from )"		1008316	2		=			
ANR	1008419	Identifier	search_from		1008316	0					
ANR	1008420	CallExpression	"r_config_get_i ( core -> config , bound_from )"		1008316	1					
ANR	1008421	Callee	r_config_get_i		1008316	0					
ANR	1008422	Identifier	r_config_get_i		1008316	0					
ANR	1008423	ArgumentList	core -> config		1008316	1					
ANR	1008424	Argument	core -> config		1008316	0					
ANR	1008425	PtrMemberAccess	core -> config		1008316	0					
ANR	1008426	Identifier	core		1008316	0					
ANR	1008427	Identifier	config		1008316	1					
ANR	1008428	Argument	bound_from		1008316	1					
ANR	1008429	Identifier	bound_from		1008316	0					
ANR	1008430	IdentifierDecl	"search_to = r_config_get_i ( core -> config , bound_to )"		1008316	1					
ANR	1008431	IdentifierDeclType	const ut64		1008316	0					
ANR	1008432	Identifier	search_to		1008316	1					
ANR	1008433	AssignmentExpression	"search_to = r_config_get_i ( core -> config , bound_to )"		1008316	2		=			
ANR	1008434	Identifier	search_to		1008316	0					
ANR	1008435	CallExpression	"r_config_get_i ( core -> config , bound_to )"		1008316	1					
ANR	1008436	Callee	r_config_get_i		1008316	0					
ANR	1008437	Identifier	r_config_get_i		1008316	0					
ANR	1008438	ArgumentList	core -> config		1008316	1					
ANR	1008439	Argument	core -> config		1008316	0					
ANR	1008440	PtrMemberAccess	core -> config		1008316	0					
ANR	1008441	Identifier	core		1008316	0					
ANR	1008442	Identifier	config		1008316	1					
ANR	1008443	Argument	bound_to		1008316	1					
ANR	1008444	Identifier	bound_to		1008316	0					
ANR	1008445	IdentifierDeclStatement	"const RInterval search_itv = { search_from , search_to - search_from } ;"	659:1:21279:21346	1008316	10	True				
ANR	1008446	IdentifierDecl	"search_itv = { search_from , search_to - search_from }"		1008316	0					
ANR	1008447	IdentifierDeclType	const RInterval		1008316	0					
ANR	1008448	Identifier	search_itv		1008316	1					
ANR	1008449	AssignmentExpression	"search_itv = { search_from , search_to - search_from }"		1008316	2		=			
ANR	1008450	Identifier	search_itv		1008316	0					
ANR	1008451	InitializerList	search_from		1008316	1					
ANR	1008452	Identifier	search_from		1008316	0					
ANR	1008453	AdditiveExpression	search_to - search_from		1008316	1		-			
ANR	1008454	Identifier	search_to		1008316	0					
ANR	1008455	Identifier	search_from		1008316	1					
ANR	1008456	IfStatement	if ( ! mode )		1008316	11					
ANR	1008457	Condition	! mode	660:5:21353:21357	1008316	0	True				
ANR	1008458	UnaryOperationExpression	! mode		1008316	0					
ANR	1008459	UnaryOperator	!		1008316	0					
ANR	1008460	Identifier	mode		1008316	1					
ANR	1008461	CompoundStatement		18:12:600:600	1008316	1					
ANR	1008462	ExpressionStatement	"mode = r_config_get ( core -> config , bound_in )"	661:2:21364:21408	1008316	0	True				
ANR	1008463	AssignmentExpression	"mode = r_config_get ( core -> config , bound_in )"		1008316	0		=			
ANR	1008464	Identifier	mode		1008316	0					
ANR	1008465	CallExpression	"r_config_get ( core -> config , bound_in )"		1008316	1					
ANR	1008466	Callee	r_config_get		1008316	0					
ANR	1008467	Identifier	r_config_get		1008316	0					
ANR	1008468	ArgumentList	core -> config		1008316	1					
ANR	1008469	Argument	core -> config		1008316	0					
ANR	1008470	PtrMemberAccess	core -> config		1008316	0					
ANR	1008471	Identifier	core		1008316	0					
ANR	1008472	Identifier	config		1008316	1					
ANR	1008473	Argument	bound_in		1008316	1					
ANR	1008474	Identifier	bound_in		1008316	0					
ANR	1008475	IfStatement	if ( perm == - 1 )		1008316	12					
ANR	1008476	Condition	perm == - 1	663:5:21418:21427	1008316	0	True				
ANR	1008477	EqualityExpression	perm == - 1		1008316	0		==			
ANR	1008478	Identifier	perm		1008316	0					
ANR	1008479	UnaryOperationExpression	- 1		1008316	1					
ANR	1008480	UnaryOperator	-		1008316	0					
ANR	1008481	PrimaryExpression	1		1008316	1					
ANR	1008482	CompoundStatement		21:17:670:670	1008316	1					
ANR	1008483	ExpressionStatement	perm = R_PERM_RWX	664:2:21434:21451	1008316	0	True				
ANR	1008484	AssignmentExpression	perm = R_PERM_RWX		1008316	0		=			
ANR	1008485	Identifier	perm		1008316	0					
ANR	1008486	Identifier	R_PERM_RWX		1008316	1					
ANR	1008487	IfStatement	"if ( ! r_config_get_i ( core -> config , ""cfg.debug"" ) && ! core -> io -> va )"		1008316	13					
ANR	1008488	Condition	"! r_config_get_i ( core -> config , ""cfg.debug"" ) && ! core -> io -> va"	666:5:21461:21520	1008316	0	True				
ANR	1008489	AndExpression	"! r_config_get_i ( core -> config , ""cfg.debug"" ) && ! core -> io -> va"		1008316	0		&&			
ANR	1008490	UnaryOperationExpression	"! r_config_get_i ( core -> config , ""cfg.debug"" )"		1008316	0					
ANR	1008491	UnaryOperator	!		1008316	0					
ANR	1008492	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		1008316	1					
ANR	1008493	Callee	r_config_get_i		1008316	0					
ANR	1008494	Identifier	r_config_get_i		1008316	0					
ANR	1008495	ArgumentList	core -> config		1008316	1					
ANR	1008496	Argument	core -> config		1008316	0					
ANR	1008497	PtrMemberAccess	core -> config		1008316	0					
ANR	1008498	Identifier	core		1008316	0					
ANR	1008499	Identifier	config		1008316	1					
ANR	1008500	Argument	"""cfg.debug"""		1008316	1					
ANR	1008501	PrimaryExpression	"""cfg.debug"""		1008316	0					
ANR	1008502	UnaryOperationExpression	! core -> io -> va		1008316	1					
ANR	1008503	UnaryOperator	!		1008316	0					
ANR	1008504	PtrMemberAccess	core -> io -> va		1008316	1					
ANR	1008505	PtrMemberAccess	core -> io		1008316	0					
ANR	1008506	Identifier	core		1008316	0					
ANR	1008507	Identifier	io		1008316	1					
ANR	1008508	Identifier	va		1008316	1					
ANR	1008509	CompoundStatement		24:67:763:763	1008316	1					
ANR	1008510	ExpressionStatement	"append_bound ( list , core -> io , search_itv , 0 , r_io_size ( core -> io ) , 7 )"	667:2:21527:21596	1008316	0	True				
ANR	1008511	CallExpression	"append_bound ( list , core -> io , search_itv , 0 , r_io_size ( core -> io ) , 7 )"		1008316	0					
ANR	1008512	Callee	append_bound		1008316	0					
ANR	1008513	Identifier	append_bound		1008316	0					
ANR	1008514	ArgumentList	list		1008316	1					
ANR	1008515	Argument	list		1008316	0					
ANR	1008516	Identifier	list		1008316	0					
ANR	1008517	Argument	core -> io		1008316	1					
ANR	1008518	PtrMemberAccess	core -> io		1008316	0					
ANR	1008519	Identifier	core		1008316	0					
ANR	1008520	Identifier	io		1008316	1					
ANR	1008521	Argument	search_itv		1008316	2					
ANR	1008522	Identifier	search_itv		1008316	0					
ANR	1008523	Argument	0		1008316	3					
ANR	1008524	PrimaryExpression	0		1008316	0					
ANR	1008525	Argument	r_io_size ( core -> io )		1008316	4					
ANR	1008526	CallExpression	r_io_size ( core -> io )		1008316	0					
ANR	1008527	Callee	r_io_size		1008316	0					
ANR	1008528	Identifier	r_io_size		1008316	0					
ANR	1008529	ArgumentList	core -> io		1008316	1					
ANR	1008530	Argument	core -> io		1008316	0					
ANR	1008531	PtrMemberAccess	core -> io		1008316	0					
ANR	1008532	Identifier	core		1008316	0					
ANR	1008533	Identifier	io		1008316	1					
ANR	1008534	Argument	7		1008316	5					
ANR	1008535	PrimaryExpression	7		1008316	0					
ANR	1008536	ElseStatement	else		1008316	0					
ANR	1008537	IfStatement	"if ( ! strcmp ( mode , ""file"" ) )"		1008316	0					
ANR	1008538	Condition	"! strcmp ( mode , ""file"" )"	668:12:21610:21631	1008316	0	True				
ANR	1008539	UnaryOperationExpression	"! strcmp ( mode , ""file"" )"		1008316	0					
ANR	1008540	UnaryOperator	!		1008316	0					
ANR	1008541	CallExpression	"strcmp ( mode , ""file"" )"		1008316	1					
ANR	1008542	Callee	strcmp		1008316	0					
ANR	1008543	Identifier	strcmp		1008316	0					
ANR	1008544	ArgumentList	mode		1008316	1					
ANR	1008545	Argument	mode		1008316	0					
ANR	1008546	Identifier	mode		1008316	0					
ANR	1008547	Argument	"""file"""		1008316	1					
ANR	1008548	PrimaryExpression	"""file"""		1008316	0					
ANR	1008549	CompoundStatement		26:36:874:874	1008316	1					
ANR	1008550	ExpressionStatement	"append_bound ( list , core -> io , search_itv , 0 , r_io_size ( core -> io ) , 7 )"	669:2:21638:21707	1008316	0	True				
ANR	1008551	CallExpression	"append_bound ( list , core -> io , search_itv , 0 , r_io_size ( core -> io ) , 7 )"		1008316	0					
ANR	1008552	Callee	append_bound		1008316	0					
ANR	1008553	Identifier	append_bound		1008316	0					
ANR	1008554	ArgumentList	list		1008316	1					
ANR	1008555	Argument	list		1008316	0					
ANR	1008556	Identifier	list		1008316	0					
ANR	1008557	Argument	core -> io		1008316	1					
ANR	1008558	PtrMemberAccess	core -> io		1008316	0					
ANR	1008559	Identifier	core		1008316	0					
ANR	1008560	Identifier	io		1008316	1					
ANR	1008561	Argument	search_itv		1008316	2					
ANR	1008562	Identifier	search_itv		1008316	0					
ANR	1008563	Argument	0		1008316	3					
ANR	1008564	PrimaryExpression	0		1008316	0					
ANR	1008565	Argument	r_io_size ( core -> io )		1008316	4					
ANR	1008566	CallExpression	r_io_size ( core -> io )		1008316	0					
ANR	1008567	Callee	r_io_size		1008316	0					
ANR	1008568	Identifier	r_io_size		1008316	0					
ANR	1008569	ArgumentList	core -> io		1008316	1					
ANR	1008570	Argument	core -> io		1008316	0					
ANR	1008571	PtrMemberAccess	core -> io		1008316	0					
ANR	1008572	Identifier	core		1008316	0					
ANR	1008573	Identifier	io		1008316	1					
ANR	1008574	Argument	7		1008316	5					
ANR	1008575	PrimaryExpression	7		1008316	0					
ANR	1008576	ElseStatement	else		1008316	0					
ANR	1008577	IfStatement	"if ( ! strcmp ( mode , ""block"" ) )"		1008316	0					
ANR	1008578	Condition	"! strcmp ( mode , ""block"" )"	670:12:21721:21743	1008316	0	True				
ANR	1008579	UnaryOperationExpression	"! strcmp ( mode , ""block"" )"		1008316	0					
ANR	1008580	UnaryOperator	!		1008316	0					
ANR	1008581	CallExpression	"strcmp ( mode , ""block"" )"		1008316	1					
ANR	1008582	Callee	strcmp		1008316	0					
ANR	1008583	Identifier	strcmp		1008316	0					
ANR	1008584	ArgumentList	mode		1008316	1					
ANR	1008585	Argument	mode		1008316	0					
ANR	1008586	Identifier	mode		1008316	0					
ANR	1008587	Argument	"""block"""		1008316	1					
ANR	1008588	PrimaryExpression	"""block"""		1008316	0					
ANR	1008589	CompoundStatement		28:37:986:986	1008316	1					
ANR	1008590	ExpressionStatement	"append_bound ( list , core -> io , search_itv , core -> offset , core -> blocksize , 7 )"	671:2:21750:21825	1008316	0	True				
ANR	1008591	CallExpression	"append_bound ( list , core -> io , search_itv , core -> offset , core -> blocksize , 7 )"		1008316	0					
ANR	1008592	Callee	append_bound		1008316	0					
ANR	1008593	Identifier	append_bound		1008316	0					
ANR	1008594	ArgumentList	list		1008316	1					
ANR	1008595	Argument	list		1008316	0					
ANR	1008596	Identifier	list		1008316	0					
ANR	1008597	Argument	core -> io		1008316	1					
ANR	1008598	PtrMemberAccess	core -> io		1008316	0					
ANR	1008599	Identifier	core		1008316	0					
ANR	1008600	Identifier	io		1008316	1					
ANR	1008601	Argument	search_itv		1008316	2					
ANR	1008602	Identifier	search_itv		1008316	0					
ANR	1008603	Argument	core -> offset		1008316	3					
ANR	1008604	PtrMemberAccess	core -> offset		1008316	0					
ANR	1008605	Identifier	core		1008316	0					
ANR	1008606	Identifier	offset		1008316	1					
ANR	1008607	Argument	core -> blocksize		1008316	4					
ANR	1008608	PtrMemberAccess	core -> blocksize		1008316	0					
ANR	1008609	Identifier	core		1008316	0					
ANR	1008610	Identifier	blocksize		1008316	1					
ANR	1008611	Argument	7		1008316	5					
ANR	1008612	PrimaryExpression	7		1008316	0					
ANR	1008613	ElseStatement	else		1008316	0					
ANR	1008614	IfStatement	"if ( ! strcmp ( mode , ""io.map"" ) )"		1008316	0					
ANR	1008615	Condition	"! strcmp ( mode , ""io.map"" )"	672:12:21839:21862	1008316	0	True				
ANR	1008616	UnaryOperationExpression	"! strcmp ( mode , ""io.map"" )"		1008316	0					
ANR	1008617	UnaryOperator	!		1008316	0					
ANR	1008618	CallExpression	"strcmp ( mode , ""io.map"" )"		1008316	1					
ANR	1008619	Callee	strcmp		1008316	0					
ANR	1008620	Identifier	strcmp		1008316	0					
ANR	1008621	ArgumentList	mode		1008316	1					
ANR	1008622	Argument	mode		1008316	0					
ANR	1008623	Identifier	mode		1008316	0					
ANR	1008624	Argument	"""io.map"""		1008316	1					
ANR	1008625	PrimaryExpression	"""io.map"""		1008316	0					
ANR	1008626	CompoundStatement		31:2:1109:1158	1008316	1					
ANR	1008627	IdentifierDeclStatement	"RIOMap * m = r_io_map_get ( core -> io , core -> offset ) ;"	673:2:21869:21918	1008316	0	True				
ANR	1008628	IdentifierDecl	"* m = r_io_map_get ( core -> io , core -> offset )"		1008316	0					
ANR	1008629	IdentifierDeclType	RIOMap *		1008316	0					
ANR	1008630	Identifier	m		1008316	1					
ANR	1008631	AssignmentExpression	"* m = r_io_map_get ( core -> io , core -> offset )"		1008316	2		=			
ANR	1008632	Identifier	m		1008316	0					
ANR	1008633	CallExpression	"r_io_map_get ( core -> io , core -> offset )"		1008316	1					
ANR	1008634	Callee	r_io_map_get		1008316	0					
ANR	1008635	Identifier	r_io_map_get		1008316	0					
ANR	1008636	ArgumentList	core -> io		1008316	1					
ANR	1008637	Argument	core -> io		1008316	0					
ANR	1008638	PtrMemberAccess	core -> io		1008316	0					
ANR	1008639	Identifier	core		1008316	0					
ANR	1008640	Identifier	io		1008316	1					
ANR	1008641	Argument	core -> offset		1008316	1					
ANR	1008642	PtrMemberAccess	core -> offset		1008316	0					
ANR	1008643	Identifier	core		1008316	0					
ANR	1008644	Identifier	offset		1008316	1					
ANR	1008645	IfStatement	if ( m )		1008316	1					
ANR	1008646	Condition	m	674:6:21926:21926	1008316	0	True				
ANR	1008647	Identifier	m		1008316	0					
ANR	1008648	CompoundStatement		32:9:1169:1169	1008316	1					
ANR	1008649	ExpressionStatement	"append_bound ( list , core -> io , search_itv , m -> itv . addr , m -> itv . size , m -> perm )"	675:3:21934:22010	1008316	0	True				
ANR	1008650	CallExpression	"append_bound ( list , core -> io , search_itv , m -> itv . addr , m -> itv . size , m -> perm )"		1008316	0					
ANR	1008651	Callee	append_bound		1008316	0					
ANR	1008652	Identifier	append_bound		1008316	0					
ANR	1008653	ArgumentList	list		1008316	1					
ANR	1008654	Argument	list		1008316	0					
ANR	1008655	Identifier	list		1008316	0					
ANR	1008656	Argument	core -> io		1008316	1					
ANR	1008657	PtrMemberAccess	core -> io		1008316	0					
ANR	1008658	Identifier	core		1008316	0					
ANR	1008659	Identifier	io		1008316	1					
ANR	1008660	Argument	search_itv		1008316	2					
ANR	1008661	Identifier	search_itv		1008316	0					
ANR	1008662	Argument	m -> itv . addr		1008316	3					
ANR	1008663	MemberAccess	m -> itv . addr		1008316	0					
ANR	1008664	PtrMemberAccess	m -> itv		1008316	0					
ANR	1008665	Identifier	m		1008316	0					
ANR	1008666	Identifier	itv		1008316	1					
ANR	1008667	Identifier	addr		1008316	1					
ANR	1008668	Argument	m -> itv . size		1008316	4					
ANR	1008669	MemberAccess	m -> itv . size		1008316	0					
ANR	1008670	PtrMemberAccess	m -> itv		1008316	0					
ANR	1008671	Identifier	m		1008316	0					
ANR	1008672	Identifier	itv		1008316	1					
ANR	1008673	Identifier	size		1008316	1					
ANR	1008674	Argument	m -> perm		1008316	5					
ANR	1008675	PtrMemberAccess	m -> perm		1008316	0					
ANR	1008676	Identifier	m		1008316	0					
ANR	1008677	Identifier	perm		1008316	1					
ANR	1008678	ElseStatement	else		1008316	0					
ANR	1008679	IfStatement	"if ( ! strcmp ( mode , ""io.maps"" ) )"		1008316	0					
ANR	1008680	Condition	"! strcmp ( mode , ""io.maps"" )"	677:12:22028:22052	1008316	0	True				
ANR	1008681	UnaryOperationExpression	"! strcmp ( mode , ""io.maps"" )"		1008316	0					
ANR	1008682	UnaryOperator	!		1008316	0					
ANR	1008683	CallExpression	"strcmp ( mode , ""io.maps"" )"		1008316	1					
ANR	1008684	Callee	strcmp		1008316	0					
ANR	1008685	Identifier	strcmp		1008316	0					
ANR	1008686	ArgumentList	mode		1008316	1					
ANR	1008687	Argument	mode		1008316	0					
ANR	1008688	Identifier	mode		1008316	0					
ANR	1008689	Argument	"""io.maps"""		1008316	1					
ANR	1008690	PrimaryExpression	"""io.maps"""		1008316	0					
ANR	1008691	CompoundStatement		41:2:1504:1512	1008316	1					
ANR	1008692	IdentifierDeclStatement	ut64 begin = UT64_MAX ;	678:2:22126:22147	1008316	0	True				
ANR	1008693	IdentifierDecl	begin = UT64_MAX		1008316	0					
ANR	1008694	IdentifierDeclType	ut64		1008316	0					
ANR	1008695	Identifier	begin		1008316	1					
ANR	1008696	AssignmentExpression	begin = UT64_MAX		1008316	2		=			
ANR	1008697	Identifier	UT64_MAX		1008316	0					
ANR	1008698	Identifier	UT64_MAX		1008316	1					
ANR	1008699	IdentifierDeclStatement	ut64 end = UT64_MAX ;	679:2:22151:22170	1008316	1	True				
ANR	1008700	IdentifierDecl	end = UT64_MAX		1008316	0					
ANR	1008701	IdentifierDeclType	ut64		1008316	0					
ANR	1008702	Identifier	end		1008316	1					
ANR	1008703	AssignmentExpression	end = UT64_MAX		1008316	2		=			
ANR	1008704	Identifier	UT64_MAX		1008316	0					
ANR	1008705	Identifier	UT64_MAX		1008316	1					
ANR	1008706	Statement	define	680:1:22173:22178	1008316	2	True				
ANR	1008707	Statement	USE_SKYLINE	680:8:22180:22190	1008316	3	True				
ANR	1008708	Statement	0	680:20:22192:22192	1008316	4	True				
ANR	1008709	IdentifierDeclStatement	const RPVector * skyline = & core -> io -> map_skyline ;	682:2:22212:22260	1008316	5	True				
ANR	1008710	IdentifierDecl	* skyline = & core -> io -> map_skyline		1008316	0					
ANR	1008711	IdentifierDeclType	const RPVector *		1008316	0					
ANR	1008712	Identifier	skyline		1008316	1					
ANR	1008713	AssignmentExpression	* skyline = & core -> io -> map_skyline		1008316	2		=			
ANR	1008714	Identifier	skyline		1008316	0					
ANR	1008715	UnaryOperationExpression	& core -> io -> map_skyline		1008316	1					
ANR	1008716	UnaryOperator	&		1008316	0					
ANR	1008717	PtrMemberAccess	core -> io -> map_skyline		1008316	1					
ANR	1008718	PtrMemberAccess	core -> io		1008316	0					
ANR	1008719	Identifier	core		1008316	0					
ANR	1008720	Identifier	io		1008316	1					
ANR	1008721	Identifier	map_skyline		1008316	1					
ANR	1008722	IdentifierDeclStatement	size_t i ;	683:2:22264:22272	1008316	6	True				
ANR	1008723	IdentifierDecl	i		1008316	0					
ANR	1008724	IdentifierDeclType	size_t		1008316	0					
ANR	1008725	Identifier	i		1008316	1					
ANR	1008726	ForStatement	for ( i = 0 ; i < r_pvector_len ( skyline ) ; i ++ )		1008316	7					
ANR	1008727	ForInit	i = 0 ;	684:7:22281:22286	1008316	0	True				
ANR	1008728	AssignmentExpression	i = 0		1008316	0		=			
ANR	1008729	Identifier	i		1008316	0					
ANR	1008730	PrimaryExpression	0		1008316	1					
ANR	1008731	Condition	i < r_pvector_len ( skyline )	684:14:22288:22314	1008316	1	True				
ANR	1008732	RelationalExpression	i < r_pvector_len ( skyline )		1008316	0		<			
ANR	1008733	Identifier	i		1008316	0					
ANR	1008734	CallExpression	r_pvector_len ( skyline )		1008316	1					
ANR	1008735	Callee	r_pvector_len		1008316	0					
ANR	1008736	Identifier	r_pvector_len		1008316	0					
ANR	1008737	ArgumentList	skyline		1008316	1					
ANR	1008738	Argument	skyline		1008316	0					
ANR	1008739	Identifier	skyline		1008316	0					
ANR	1008740	PostIncDecOperationExpression	i ++	684:43:22317:22319	1008316	2	True				
ANR	1008741	Identifier	i		1008316	0					
ANR	1008742	IncDec	++		1008316	1					
ANR	1008743	CompoundStatement		49:3:1827:1864	1008316	3					
ANR	1008744	IdentifierDeclStatement	"const RIOMapSkyline * part = r_pvector_at ( skyline , i ) ;"	685:3:22327:22380	1008316	0	True				
ANR	1008745	IdentifierDecl	"* part = r_pvector_at ( skyline , i )"		1008316	0					
ANR	1008746	IdentifierDeclType	const RIOMapSkyline *		1008316	0					
ANR	1008747	Identifier	part		1008316	1					
ANR	1008748	AssignmentExpression	"* part = r_pvector_at ( skyline , i )"		1008316	2		=			
ANR	1008749	Identifier	part		1008316	0					
ANR	1008750	CallExpression	"r_pvector_at ( skyline , i )"		1008316	1					
ANR	1008751	Callee	r_pvector_at		1008316	0					
ANR	1008752	Identifier	r_pvector_at		1008316	0					
ANR	1008753	ArgumentList	skyline		1008316	1					
ANR	1008754	Argument	skyline		1008316	0					
ANR	1008755	Identifier	skyline		1008316	0					
ANR	1008756	Argument	i		1008316	1					
ANR	1008757	Identifier	i		1008316	0					
ANR	1008758	IdentifierDeclStatement	ut64 from = r_itv_begin ( part -> itv ) ;	687:3:22420:22455	1008316	1	True				
ANR	1008759	IdentifierDecl	from = r_itv_begin ( part -> itv )		1008316	0					
ANR	1008760	IdentifierDeclType	ut64		1008316	0					
ANR	1008761	Identifier	from		1008316	1					
ANR	1008762	AssignmentExpression	from = r_itv_begin ( part -> itv )		1008316	2		=			
ANR	1008763	Identifier	from		1008316	0					
ANR	1008764	CallExpression	r_itv_begin ( part -> itv )		1008316	1					
ANR	1008765	Callee	r_itv_begin		1008316	0					
ANR	1008766	Identifier	r_itv_begin		1008316	0					
ANR	1008767	ArgumentList	part -> itv		1008316	1					
ANR	1008768	Argument	part -> itv		1008316	0					
ANR	1008769	PtrMemberAccess	part -> itv		1008316	0					
ANR	1008770	Identifier	part		1008316	0					
ANR	1008771	Identifier	itv		1008316	1					
ANR	1008772	IdentifierDeclStatement	ut64 to = r_itv_end ( part -> itv ) ;	688:3:22460:22491	1008316	2	True				
ANR	1008773	IdentifierDecl	to = r_itv_end ( part -> itv )		1008316	0					
ANR	1008774	IdentifierDeclType	ut64		1008316	0					
ANR	1008775	Identifier	to		1008316	1					
ANR	1008776	AssignmentExpression	to = r_itv_end ( part -> itv )		1008316	2		=			
ANR	1008777	Identifier	to		1008316	0					
ANR	1008778	CallExpression	r_itv_end ( part -> itv )		1008316	1					
ANR	1008779	Callee	r_itv_end		1008316	0					
ANR	1008780	Identifier	r_itv_end		1008316	0					
ANR	1008781	ArgumentList	part -> itv		1008316	1					
ANR	1008782	Argument	part -> itv		1008316	0					
ANR	1008783	PtrMemberAccess	part -> itv		1008316	0					
ANR	1008784	Identifier	part		1008316	0					
ANR	1008785	Identifier	itv		1008316	1					
ANR	1008786	IdentifierDeclStatement	"RIOMap * m = r_io_map_get ( core -> io , from ) ;"	690:3:22541:22582	1008316	3	True				
ANR	1008787	IdentifierDecl	"* m = r_io_map_get ( core -> io , from )"		1008316	0					
ANR	1008788	IdentifierDeclType	RIOMap *		1008316	0					
ANR	1008789	Identifier	m		1008316	1					
ANR	1008790	AssignmentExpression	"* m = r_io_map_get ( core -> io , from )"		1008316	2		=			
ANR	1008791	Identifier	m		1008316	0					
ANR	1008792	CallExpression	"r_io_map_get ( core -> io , from )"		1008316	1					
ANR	1008793	Callee	r_io_map_get		1008316	0					
ANR	1008794	Identifier	r_io_map_get		1008316	0					
ANR	1008795	ArgumentList	core -> io		1008316	1					
ANR	1008796	Argument	core -> io		1008316	0					
ANR	1008797	PtrMemberAccess	core -> io		1008316	0					
ANR	1008798	Identifier	core		1008316	0					
ANR	1008799	Identifier	io		1008316	1					
ANR	1008800	Argument	from		1008316	1					
ANR	1008801	Identifier	from		1008316	0					
ANR	1008802	IdentifierDeclStatement	int rwx = m ? m -> perm : part -> map -> perm ;	691:3:22587:22624	1008316	4	True				
ANR	1008803	IdentifierDecl	rwx = m ? m -> perm : part -> map -> perm		1008316	0					
ANR	1008804	IdentifierDeclType	int		1008316	0					
ANR	1008805	Identifier	rwx		1008316	1					
ANR	1008806	AssignmentExpression	rwx = m ? m -> perm : part -> map -> perm		1008316	2		=			
ANR	1008807	Identifier	rwx		1008316	0					
ANR	1008808	ConditionalExpression	m ? m -> perm : part -> map -> perm		1008316	1					
ANR	1008809	Condition	m		1008316	0					
ANR	1008810	Identifier	m		1008316	0					
ANR	1008811	PtrMemberAccess	m -> perm		1008316	1					
ANR	1008812	Identifier	m		1008316	0					
ANR	1008813	Identifier	perm		1008316	1					
ANR	1008814	PtrMemberAccess	part -> map -> perm		1008316	2					
ANR	1008815	PtrMemberAccess	part -> map		1008316	0					
ANR	1008816	Identifier	part		1008316	0					
ANR	1008817	Identifier	map		1008316	1					
ANR	1008818	Identifier	perm		1008316	1					
ANR	1008819	IfStatement	if ( begin == UT64_MAX )		1008316	5					
ANR	1008820	Condition	begin == UT64_MAX	701:7:22902:22918	1008316	0	True				
ANR	1008821	EqualityExpression	begin == UT64_MAX		1008316	0		==			
ANR	1008822	Identifier	begin		1008316	0					
ANR	1008823	Identifier	UT64_MAX		1008316	1					
ANR	1008824	CompoundStatement		59:26:2161:2161	1008316	1					
ANR	1008825	ExpressionStatement	begin = from	702:4:22927:22939	1008316	0	True				
ANR	1008826	AssignmentExpression	begin = from		1008316	0		=			
ANR	1008827	Identifier	begin		1008316	0					
ANR	1008828	Identifier	from		1008316	1					
ANR	1008829	IfStatement	if ( end == UT64_MAX )		1008316	6					
ANR	1008830	Condition	end == UT64_MAX	704:7:22953:22967	1008316	0	True				
ANR	1008831	EqualityExpression	end == UT64_MAX		1008316	0		==			
ANR	1008832	Identifier	end		1008316	0					
ANR	1008833	Identifier	UT64_MAX		1008316	1					
ANR	1008834	CompoundStatement		62:24:2210:2210	1008316	1					
ANR	1008835	ExpressionStatement	end = to	705:4:22976:22984	1008316	0	True				
ANR	1008836	AssignmentExpression	end = to		1008316	0		=			
ANR	1008837	Identifier	end		1008316	0					
ANR	1008838	Identifier	to		1008316	1					
ANR	1008839	ElseStatement	else		1008316	0					
ANR	1008840	CompoundStatement		64:10:2236:2236	1008316	0					
ANR	1008841	IfStatement	if ( end == from )		1008316	0					
ANR	1008842	Condition	end == from	707:8:23006:23016	1008316	0	True				
ANR	1008843	EqualityExpression	end == from		1008316	0		==			
ANR	1008844	Identifier	end		1008316	0					
ANR	1008845	Identifier	from		1008316	1					
ANR	1008846	CompoundStatement		65:21:2259:2259	1008316	1					
ANR	1008847	ExpressionStatement	end = to	708:5:23026:23034	1008316	0	True				
ANR	1008848	AssignmentExpression	end = to		1008316	0		=			
ANR	1008849	Identifier	end		1008316	0					
ANR	1008850	Identifier	to		1008316	1					
ANR	1008851	ElseStatement	else		1008316	0					
ANR	1008852	CompoundStatement		67:11:2287:2287	1008316	0					
ANR	1008853	ExpressionStatement	"append_bound ( list , NULL , search_itv , begin , end - begin , rwx )"	710:5:23054:23122	1008316	0	True				
ANR	1008854	CallExpression	"append_bound ( list , NULL , search_itv , begin , end - begin , rwx )"		1008316	0					
ANR	1008855	Callee	append_bound		1008316	0					
ANR	1008856	Identifier	append_bound		1008316	0					
ANR	1008857	ArgumentList	list		1008316	1					
ANR	1008858	Argument	list		1008316	0					
ANR	1008859	Identifier	list		1008316	0					
ANR	1008860	Argument	NULL		1008316	1					
ANR	1008861	Identifier	NULL		1008316	0					
ANR	1008862	Argument	search_itv		1008316	2					
ANR	1008863	Identifier	search_itv		1008316	0					
ANR	1008864	Argument	begin		1008316	3					
ANR	1008865	Identifier	begin		1008316	0					
ANR	1008866	Argument	end - begin		1008316	4					
ANR	1008867	AdditiveExpression	end - begin		1008316	0		-			
ANR	1008868	Identifier	end		1008316	0					
ANR	1008869	Identifier	begin		1008316	1					
ANR	1008870	Argument	rwx		1008316	5					
ANR	1008871	Identifier	rwx		1008316	0					
ANR	1008872	ExpressionStatement	begin = from	712:5:23129:23141	1008316	1	True				
ANR	1008873	AssignmentExpression	begin = from		1008316	0		=			
ANR	1008874	Identifier	begin		1008316	0					
ANR	1008875	Identifier	from		1008316	1					
ANR	1008876	ExpressionStatement	end = to	713:5:23148:23156	1008316	2	True				
ANR	1008877	AssignmentExpression	end = to		1008316	0		=			
ANR	1008878	Identifier	end		1008316	0					
ANR	1008879	Identifier	to		1008316	1					
ANR	1008880	IfStatement	if ( end != UT64_MAX )		1008316	8					
ANR	1008881	Condition	end != UT64_MAX	717:6:23179:23193	1008316	0	True				
ANR	1008882	EqualityExpression	end != UT64_MAX		1008316	0		!=			
ANR	1008883	Identifier	end		1008316	0					
ANR	1008884	Identifier	UT64_MAX		1008316	1					
ANR	1008885	CompoundStatement		75:23:2436:2436	1008316	1					
ANR	1008886	ExpressionStatement	"append_bound ( list , NULL , search_itv , begin , end - begin , 7 )"	718:3:23201:23261	1008316	0	True				
ANR	1008887	CallExpression	"append_bound ( list , NULL , search_itv , begin , end - begin , 7 )"		1008316	0					
ANR	1008888	Callee	append_bound		1008316	0					
ANR	1008889	Identifier	append_bound		1008316	0					
ANR	1008890	ArgumentList	list		1008316	1					
ANR	1008891	Argument	list		1008316	0					
ANR	1008892	Identifier	list		1008316	0					
ANR	1008893	Argument	NULL		1008316	1					
ANR	1008894	Identifier	NULL		1008316	0					
ANR	1008895	Argument	search_itv		1008316	2					
ANR	1008896	Identifier	search_itv		1008316	0					
ANR	1008897	Argument	begin		1008316	3					
ANR	1008898	Identifier	begin		1008316	0					
ANR	1008899	Argument	end - begin		1008316	4					
ANR	1008900	AdditiveExpression	end - begin		1008316	0		-			
ANR	1008901	Identifier	end		1008316	0					
ANR	1008902	Identifier	begin		1008316	1					
ANR	1008903	Argument	7		1008316	5					
ANR	1008904	PrimaryExpression	7		1008316	0					
ANR	1008905	ElseStatement	else		1008316	0					
ANR	1008906	IfStatement	"if ( r_str_startswith ( mode , ""io.maps."" ) )"		1008316	0					
ANR	1008907	Condition	"r_str_startswith ( mode , ""io.maps."" )"	720:12:23279:23313	1008316	0	True				
ANR	1008908	CallExpression	"r_str_startswith ( mode , ""io.maps."" )"		1008316	0					
ANR	1008909	Callee	r_str_startswith		1008316	0					
ANR	1008910	Identifier	r_str_startswith		1008316	0					
ANR	1008911	ArgumentList	mode		1008316	1					
ANR	1008912	Argument	mode		1008316	0					
ANR	1008913	Identifier	mode		1008316	0					
ANR	1008914	Argument	"""io.maps."""		1008316	1					
ANR	1008915	PrimaryExpression	"""io.maps."""		1008316	0					
ANR	1008916	CompoundStatement		84:2:2734:2745	1008316	1					
ANR	1008917	IdentifierDeclStatement	"int len = strlen ( ""io.maps."" ) ;"	721:2:23320:23349	1008316	0	True				
ANR	1008918	IdentifierDecl	"len = strlen ( ""io.maps."" )"		1008316	0					
ANR	1008919	IdentifierDeclType	int		1008316	0					
ANR	1008920	Identifier	len		1008316	1					
ANR	1008921	AssignmentExpression	"len = strlen ( ""io.maps."" )"		1008316	2		=			
ANR	1008922	Identifier	len		1008316	0					
ANR	1008923	CallExpression	"strlen ( ""io.maps."" )"		1008316	1					
ANR	1008924	Callee	strlen		1008316	0					
ANR	1008925	Identifier	strlen		1008316	0					
ANR	1008926	ArgumentList	"""io.maps."""		1008316	1					
ANR	1008927	Argument	"""io.maps."""		1008316	0					
ANR	1008928	PrimaryExpression	"""io.maps."""		1008316	0					
ANR	1008929	IdentifierDeclStatement	int mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0 ;	722:2:23353:23413	1008316	1	True				
ANR	1008930	IdentifierDecl	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	0					
ANR	1008931	IdentifierDeclType	int		1008316	0					
ANR	1008932	Identifier	mask		1008316	1					
ANR	1008933	AssignmentExpression	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	2		=			
ANR	1008934	Identifier	mask		1008316	0					
ANR	1008935	ConditionalExpression	( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	1					
ANR	1008936	Condition	mode [ len - 1 ] == '.'		1008316	0					
ANR	1008937	EqualityExpression	mode [ len - 1 ] == '.'		1008316	0		==			
ANR	1008938	ArrayIndexing	mode [ len - 1 ]		1008316	0					
ANR	1008939	Identifier	mode		1008316	0					
ANR	1008940	AdditiveExpression	len - 1		1008316	1		-			
ANR	1008941	Identifier	len		1008316	0					
ANR	1008942	PrimaryExpression	1		1008316	1					
ANR	1008943	PrimaryExpression	'.'		1008316	1					
ANR	1008944	CallExpression	r_str_rwx ( mode + len )		1008316	1					
ANR	1008945	Callee	r_str_rwx		1008316	0					
ANR	1008946	Identifier	r_str_rwx		1008316	0					
ANR	1008947	ArgumentList	mode + len		1008316	1					
ANR	1008948	Argument	mode + len		1008316	0					
ANR	1008949	AdditiveExpression	mode + len		1008316	0		+			
ANR	1008950	Identifier	mode		1008316	0					
ANR	1008951	Identifier	len		1008316	1					
ANR	1008952	PrimaryExpression	0		1008316	2					
ANR	1008953	IdentifierDeclStatement	SdbListIter * iter ;	725:2:23473:23490	1008316	2	True				
ANR	1008954	IdentifierDecl	* iter		1008316	0					
ANR	1008955	IdentifierDeclType	SdbListIter *		1008316	0					
ANR	1008956	Identifier	iter		1008316	1					
ANR	1008957	IdentifierDeclStatement	RIOMap * map ;	726:2:23494:23505	1008316	3	True				
ANR	1008958	IdentifierDecl	* map		1008316	0					
ANR	1008959	IdentifierDeclType	RIOMap *		1008316	0					
ANR	1008960	Identifier	map		1008316	1					
ANR	1008961	Statement	ls_foreach	727:2:23509:23518	1008316	4	True				
ANR	1008962	Statement	(	727:14:23521:23521	1008316	5	True				
ANR	1008963	Statement	core	727:15:23522:23525	1008316	6	True				
ANR	1008964	Statement	->	727:19:23526:23527	1008316	7	True				
ANR	1008965	Statement	io	727:21:23528:23529	1008316	8	True				
ANR	1008966	Statement	->	727:23:23530:23531	1008316	9	True				
ANR	1008967	Statement	maps	727:25:23532:23535	1008316	10	True				
ANR	1008968	Statement	","	727:29:23536:23536	1008316	11	True				
ANR	1008969	Statement	iter	727:31:23538:23541	1008316	12	True				
ANR	1008970	Statement	","	727:35:23542:23542	1008316	13	True				
ANR	1008971	Statement	map	727:37:23544:23546	1008316	14	True				
ANR	1008972	Statement	)	727:40:23547:23547	1008316	15	True				
ANR	1008973	CompoundStatement		88:3:2870:2889	1008316	16					
ANR	1008974	IdentifierDeclStatement	ut64 from = r_itv_begin ( map -> itv ) ;	728:3:23554:23588	1008316	0	True				
ANR	1008975	IdentifierDecl	from = r_itv_begin ( map -> itv )		1008316	0					
ANR	1008976	IdentifierDeclType	ut64		1008316	0					
ANR	1008977	Identifier	from		1008316	1					
ANR	1008978	AssignmentExpression	from = r_itv_begin ( map -> itv )		1008316	2		=			
ANR	1008979	Identifier	from		1008316	0					
ANR	1008980	CallExpression	r_itv_begin ( map -> itv )		1008316	1					
ANR	1008981	Callee	r_itv_begin		1008316	0					
ANR	1008982	Identifier	r_itv_begin		1008316	0					
ANR	1008983	ArgumentList	map -> itv		1008316	1					
ANR	1008984	Argument	map -> itv		1008316	0					
ANR	1008985	PtrMemberAccess	map -> itv		1008316	0					
ANR	1008986	Identifier	map		1008316	0					
ANR	1008987	Identifier	itv		1008316	1					
ANR	1008988	IdentifierDeclStatement	int rwx = map -> perm ;	730:3:23630:23649	1008316	1	True				
ANR	1008989	IdentifierDecl	rwx = map -> perm		1008316	0					
ANR	1008990	IdentifierDeclType	int		1008316	0					
ANR	1008991	Identifier	rwx		1008316	1					
ANR	1008992	AssignmentExpression	rwx = map -> perm		1008316	2		=			
ANR	1008993	Identifier	rwx		1008316	0					
ANR	1008994	PtrMemberAccess	map -> perm		1008316	1					
ANR	1008995	Identifier	map		1008316	0					
ANR	1008996	Identifier	perm		1008316	1					
ANR	1008997	IfStatement	if ( ( rwx & mask ) != mask )		1008316	2					
ANR	1008998	Condition	( rwx & mask ) != mask	731:7:23658:23677	1008316	0	True				
ANR	1008999	EqualityExpression	( rwx & mask ) != mask		1008316	0		!=			
ANR	1009000	BitAndExpression	rwx & mask		1008316	0		&			
ANR	1009001	Identifier	rwx		1008316	0					
ANR	1009002	Identifier	mask		1008316	1					
ANR	1009003	Identifier	mask		1008316	1					
ANR	1009004	CompoundStatement		89:29:2920:2920	1008316	1					
ANR	1009005	ContinueStatement	continue ;	732:4:23686:23694	1008316	0	True				
ANR	1009006	ExpressionStatement	"append_bound ( list , core -> io , search_itv , from , r_itv_size ( map -> itv ) , rwx )"	734:3:23704:23779	1008316	3	True				
ANR	1009007	CallExpression	"append_bound ( list , core -> io , search_itv , from , r_itv_size ( map -> itv ) , rwx )"		1008316	0					
ANR	1009008	Callee	append_bound		1008316	0					
ANR	1009009	Identifier	append_bound		1008316	0					
ANR	1009010	ArgumentList	list		1008316	1					
ANR	1009011	Argument	list		1008316	0					
ANR	1009012	Identifier	list		1008316	0					
ANR	1009013	Argument	core -> io		1008316	1					
ANR	1009014	PtrMemberAccess	core -> io		1008316	0					
ANR	1009015	Identifier	core		1008316	0					
ANR	1009016	Identifier	io		1008316	1					
ANR	1009017	Argument	search_itv		1008316	2					
ANR	1009018	Identifier	search_itv		1008316	0					
ANR	1009019	Argument	from		1008316	3					
ANR	1009020	Identifier	from		1008316	0					
ANR	1009021	Argument	r_itv_size ( map -> itv )		1008316	4					
ANR	1009022	CallExpression	r_itv_size ( map -> itv )		1008316	0					
ANR	1009023	Callee	r_itv_size		1008316	0					
ANR	1009024	Identifier	r_itv_size		1008316	0					
ANR	1009025	ArgumentList	map -> itv		1008316	1					
ANR	1009026	Argument	map -> itv		1008316	0					
ANR	1009027	PtrMemberAccess	map -> itv		1008316	0					
ANR	1009028	Identifier	map		1008316	0					
ANR	1009029	Identifier	itv		1008316	1					
ANR	1009030	Argument	rwx		1008316	5					
ANR	1009031	Identifier	rwx		1008316	0					
ANR	1009032	ElseStatement	else		1008316	0					
ANR	1009033	IfStatement	"if ( r_str_startswith ( mode , ""io.sky."" ) )"		1008316	0					
ANR	1009034	Condition	"r_str_startswith ( mode , ""io.sky."" )"	736:12:23797:23830	1008316	0	True				
ANR	1009035	CallExpression	"r_str_startswith ( mode , ""io.sky."" )"		1008316	0					
ANR	1009036	Callee	r_str_startswith		1008316	0					
ANR	1009037	Identifier	r_str_startswith		1008316	0					
ANR	1009038	ArgumentList	mode		1008316	1					
ANR	1009039	Argument	mode		1008316	0					
ANR	1009040	Identifier	mode		1008316	0					
ANR	1009041	Argument	"""io.sky."""		1008316	1					
ANR	1009042	PrimaryExpression	"""io.sky."""		1008316	0					
ANR	1009043	CompoundStatement		101:2:3325:3333	1008316	1					
ANR	1009044	IdentifierDeclStatement	"int len = strlen ( ""io.sky."" ) ;"	737:2:23837:23865	1008316	0	True				
ANR	1009045	IdentifierDecl	"len = strlen ( ""io.sky."" )"		1008316	0					
ANR	1009046	IdentifierDeclType	int		1008316	0					
ANR	1009047	Identifier	len		1008316	1					
ANR	1009048	AssignmentExpression	"len = strlen ( ""io.sky."" )"		1008316	2		=			
ANR	1009049	Identifier	len		1008316	0					
ANR	1009050	CallExpression	"strlen ( ""io.sky."" )"		1008316	1					
ANR	1009051	Callee	strlen		1008316	0					
ANR	1009052	Identifier	strlen		1008316	0					
ANR	1009053	ArgumentList	"""io.sky."""		1008316	1					
ANR	1009054	Argument	"""io.sky."""		1008316	0					
ANR	1009055	PrimaryExpression	"""io.sky."""		1008316	0					
ANR	1009056	IdentifierDeclStatement	int mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0 ;	738:2:23869:23929	1008316	1	True				
ANR	1009057	IdentifierDecl	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	0					
ANR	1009058	IdentifierDeclType	int		1008316	0					
ANR	1009059	Identifier	mask		1008316	1					
ANR	1009060	AssignmentExpression	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	2		=			
ANR	1009061	Identifier	mask		1008316	0					
ANR	1009062	ConditionalExpression	( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	1					
ANR	1009063	Condition	mode [ len - 1 ] == '.'		1008316	0					
ANR	1009064	EqualityExpression	mode [ len - 1 ] == '.'		1008316	0		==			
ANR	1009065	ArrayIndexing	mode [ len - 1 ]		1008316	0					
ANR	1009066	Identifier	mode		1008316	0					
ANR	1009067	AdditiveExpression	len - 1		1008316	1		-			
ANR	1009068	Identifier	len		1008316	0					
ANR	1009069	PrimaryExpression	1		1008316	1					
ANR	1009070	PrimaryExpression	'.'		1008316	1					
ANR	1009071	CallExpression	r_str_rwx ( mode + len )		1008316	1					
ANR	1009072	Callee	r_str_rwx		1008316	0					
ANR	1009073	Identifier	r_str_rwx		1008316	0					
ANR	1009074	ArgumentList	mode + len		1008316	1					
ANR	1009075	Argument	mode + len		1008316	0					
ANR	1009076	AdditiveExpression	mode + len		1008316	0		+			
ANR	1009077	Identifier	mode		1008316	0					
ANR	1009078	Identifier	len		1008316	1					
ANR	1009079	PrimaryExpression	0		1008316	2					
ANR	1009080	IdentifierDeclStatement	"bool only = ( bool ) ( size_t ) strstr ( mode , "".only"" ) ;"	739:2:23933:23981	1008316	2	True				
ANR	1009081	IdentifierDecl	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	0					
ANR	1009082	IdentifierDeclType	bool		1008316	0					
ANR	1009083	Identifier	only		1008316	1					
ANR	1009084	AssignmentExpression	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	2		=			
ANR	1009085	Identifier	only		1008316	0					
ANR	1009086	CastExpression	"( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1009087	CastTarget	bool		1008316	0					
ANR	1009088	CastExpression	"( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1009089	CastTarget	size_t		1008316	0					
ANR	1009090	CallExpression	"strstr ( mode , "".only"" )"		1008316	1					
ANR	1009091	Callee	strstr		1008316	0					
ANR	1009092	Identifier	strstr		1008316	0					
ANR	1009093	ArgumentList	mode		1008316	1					
ANR	1009094	Argument	mode		1008316	0					
ANR	1009095	Identifier	mode		1008316	0					
ANR	1009096	Argument	""".only"""		1008316	1					
ANR	1009097	PrimaryExpression	""".only"""		1008316	0					
ANR	1009098	IdentifierDeclStatement	const RPVector * skyline = & core -> io -> map_skyline ;	740:2:23985:24033	1008316	3	True				
ANR	1009099	IdentifierDecl	* skyline = & core -> io -> map_skyline		1008316	0					
ANR	1009100	IdentifierDeclType	const RPVector *		1008316	0					
ANR	1009101	Identifier	skyline		1008316	1					
ANR	1009102	AssignmentExpression	* skyline = & core -> io -> map_skyline		1008316	2		=			
ANR	1009103	Identifier	skyline		1008316	0					
ANR	1009104	UnaryOperationExpression	& core -> io -> map_skyline		1008316	1					
ANR	1009105	UnaryOperator	&		1008316	0					
ANR	1009106	PtrMemberAccess	core -> io -> map_skyline		1008316	1					
ANR	1009107	PtrMemberAccess	core -> io		1008316	0					
ANR	1009108	Identifier	core		1008316	0					
ANR	1009109	Identifier	io		1008316	1					
ANR	1009110	Identifier	map_skyline		1008316	1					
ANR	1009111	IdentifierDeclStatement	ut64 begin = UT64_MAX ;	741:2:24037:24058	1008316	4	True				
ANR	1009112	IdentifierDecl	begin = UT64_MAX		1008316	0					
ANR	1009113	IdentifierDeclType	ut64		1008316	0					
ANR	1009114	Identifier	begin		1008316	1					
ANR	1009115	AssignmentExpression	begin = UT64_MAX		1008316	2		=			
ANR	1009116	Identifier	UT64_MAX		1008316	0					
ANR	1009117	Identifier	UT64_MAX		1008316	1					
ANR	1009118	IdentifierDeclStatement	ut64 end = UT64_MAX ;	742:2:24062:24081	1008316	5	True				
ANR	1009119	IdentifierDecl	end = UT64_MAX		1008316	0					
ANR	1009120	IdentifierDeclType	ut64		1008316	0					
ANR	1009121	Identifier	end		1008316	1					
ANR	1009122	AssignmentExpression	end = UT64_MAX		1008316	2		=			
ANR	1009123	Identifier	UT64_MAX		1008316	0					
ANR	1009124	Identifier	UT64_MAX		1008316	1					
ANR	1009125	IdentifierDeclStatement	size_t i ;	743:2:24085:24093	1008316	6	True				
ANR	1009126	IdentifierDecl	i		1008316	0					
ANR	1009127	IdentifierDeclType	size_t		1008316	0					
ANR	1009128	Identifier	i		1008316	1					
ANR	1009129	ForStatement	for ( i = 0 ; i < r_pvector_len ( skyline ) ; i ++ )		1008316	7					
ANR	1009130	ForInit	i = 0 ;	744:7:24102:24107	1008316	0	True				
ANR	1009131	AssignmentExpression	i = 0		1008316	0		=			
ANR	1009132	Identifier	i		1008316	0					
ANR	1009133	PrimaryExpression	0		1008316	1					
ANR	1009134	Condition	i < r_pvector_len ( skyline )	744:14:24109:24135	1008316	1	True				
ANR	1009135	RelationalExpression	i < r_pvector_len ( skyline )		1008316	0		<			
ANR	1009136	Identifier	i		1008316	0					
ANR	1009137	CallExpression	r_pvector_len ( skyline )		1008316	1					
ANR	1009138	Callee	r_pvector_len		1008316	0					
ANR	1009139	Identifier	r_pvector_len		1008316	0					
ANR	1009140	ArgumentList	skyline		1008316	1					
ANR	1009141	Argument	skyline		1008316	0					
ANR	1009142	Identifier	skyline		1008316	0					
ANR	1009143	PostIncDecOperationExpression	i ++	744:43:24138:24140	1008316	2	True				
ANR	1009144	Identifier	i		1008316	0					
ANR	1009145	IncDec	++		1008316	1					
ANR	1009146	CompoundStatement		106:3:3523:3549	1008316	3					
ANR	1009147	IdentifierDeclStatement	"const RIOMapSkyline * part = r_pvector_at ( skyline , i ) ;"	745:3:24148:24201	1008316	0	True				
ANR	1009148	IdentifierDecl	"* part = r_pvector_at ( skyline , i )"		1008316	0					
ANR	1009149	IdentifierDeclType	const RIOMapSkyline *		1008316	0					
ANR	1009150	Identifier	part		1008316	1					
ANR	1009151	AssignmentExpression	"* part = r_pvector_at ( skyline , i )"		1008316	2		=			
ANR	1009152	Identifier	part		1008316	0					
ANR	1009153	CallExpression	"r_pvector_at ( skyline , i )"		1008316	1					
ANR	1009154	Callee	r_pvector_at		1008316	0					
ANR	1009155	Identifier	r_pvector_at		1008316	0					
ANR	1009156	ArgumentList	skyline		1008316	1					
ANR	1009157	Argument	skyline		1008316	0					
ANR	1009158	Identifier	skyline		1008316	0					
ANR	1009159	Argument	i		1008316	1					
ANR	1009160	Identifier	i		1008316	0					
ANR	1009161	IdentifierDeclStatement	ut64 from = part -> itv . addr ;	746:3:24206:24232	1008316	1	True				
ANR	1009162	IdentifierDecl	from = part -> itv . addr		1008316	0					
ANR	1009163	IdentifierDeclType	ut64		1008316	0					
ANR	1009164	Identifier	from		1008316	1					
ANR	1009165	AssignmentExpression	from = part -> itv . addr		1008316	2		=			
ANR	1009166	Identifier	from		1008316	0					
ANR	1009167	MemberAccess	part -> itv . addr		1008316	1					
ANR	1009168	PtrMemberAccess	part -> itv		1008316	0					
ANR	1009169	Identifier	part		1008316	0					
ANR	1009170	Identifier	itv		1008316	1					
ANR	1009171	Identifier	addr		1008316	1					
ANR	1009172	IdentifierDeclStatement	ut64 to = part -> itv . addr + part -> itv . size ;	747:3:24237:24278	1008316	2	True				
ANR	1009173	IdentifierDecl	to = part -> itv . addr + part -> itv . size		1008316	0					
ANR	1009174	IdentifierDeclType	ut64		1008316	0					
ANR	1009175	Identifier	to		1008316	1					
ANR	1009176	AssignmentExpression	to = part -> itv . addr + part -> itv . size		1008316	2		=			
ANR	1009177	Identifier	to		1008316	0					
ANR	1009178	AdditiveExpression	part -> itv . addr + part -> itv . size		1008316	1		+			
ANR	1009179	MemberAccess	part -> itv . addr		1008316	0					
ANR	1009180	PtrMemberAccess	part -> itv		1008316	0					
ANR	1009181	Identifier	part		1008316	0					
ANR	1009182	Identifier	itv		1008316	1					
ANR	1009183	Identifier	addr		1008316	1					
ANR	1009184	MemberAccess	part -> itv . size		1008316	1					
ANR	1009185	PtrMemberAccess	part -> itv		1008316	0					
ANR	1009186	Identifier	part		1008316	0					
ANR	1009187	Identifier	itv		1008316	1					
ANR	1009188	Identifier	size		1008316	1					
ANR	1009189	IdentifierDeclStatement	int perm = part -> map -> perm ;	748:3:24283:24309	1008316	3	True				
ANR	1009190	IdentifierDecl	perm = part -> map -> perm		1008316	0					
ANR	1009191	IdentifierDeclType	int		1008316	0					
ANR	1009192	Identifier	perm		1008316	1					
ANR	1009193	AssignmentExpression	perm = part -> map -> perm		1008316	2		=			
ANR	1009194	Identifier	perm		1008316	0					
ANR	1009195	PtrMemberAccess	part -> map -> perm		1008316	1					
ANR	1009196	PtrMemberAccess	part -> map		1008316	0					
ANR	1009197	Identifier	part		1008316	0					
ANR	1009198	Identifier	map		1008316	1					
ANR	1009199	Identifier	perm		1008316	1					
ANR	1009200	IfStatement	"if ( maskMatches ( perm , mask , only ) )"		1008316	4					
ANR	1009201	Condition	"maskMatches ( perm , mask , only )"	749:7:24318:24347	1008316	0	True				
ANR	1009202	CallExpression	"maskMatches ( perm , mask , only )"		1008316	0					
ANR	1009203	Callee	maskMatches		1008316	0					
ANR	1009204	Identifier	maskMatches		1008316	0					
ANR	1009205	ArgumentList	perm		1008316	1					
ANR	1009206	Argument	perm		1008316	0					
ANR	1009207	Identifier	perm		1008316	0					
ANR	1009208	Argument	mask		1008316	1					
ANR	1009209	Identifier	mask		1008316	0					
ANR	1009210	Argument	only		1008316	2					
ANR	1009211	Identifier	only		1008316	0					
ANR	1009212	CompoundStatement		107:39:3590:3590	1008316	1					
ANR	1009213	ContinueStatement	continue ;	750:4:24356:24364	1008316	0	True				
ANR	1009214	IfStatement	if ( begin == UT64_MAX )		1008316	5					
ANR	1009215	Condition	begin == UT64_MAX	753:7:24456:24472	1008316	0	True				
ANR	1009216	EqualityExpression	begin == UT64_MAX		1008316	0		==			
ANR	1009217	Identifier	begin		1008316	0					
ANR	1009218	Identifier	UT64_MAX		1008316	1					
ANR	1009219	CompoundStatement		111:26:3715:3715	1008316	1					
ANR	1009220	ExpressionStatement	begin = from	754:4:24481:24493	1008316	0	True				
ANR	1009221	AssignmentExpression	begin = from		1008316	0		=			
ANR	1009222	Identifier	begin		1008316	0					
ANR	1009223	Identifier	from		1008316	1					
ANR	1009224	IfStatement	if ( end == UT64_MAX )		1008316	6					
ANR	1009225	Condition	end == UT64_MAX	756:7:24507:24521	1008316	0	True				
ANR	1009226	EqualityExpression	end == UT64_MAX		1008316	0		==			
ANR	1009227	Identifier	end		1008316	0					
ANR	1009228	Identifier	UT64_MAX		1008316	1					
ANR	1009229	CompoundStatement		114:24:3764:3764	1008316	1					
ANR	1009230	ExpressionStatement	end = to	757:4:24530:24538	1008316	0	True				
ANR	1009231	AssignmentExpression	end = to		1008316	0		=			
ANR	1009232	Identifier	end		1008316	0					
ANR	1009233	Identifier	to		1008316	1					
ANR	1009234	ElseStatement	else		1008316	0					
ANR	1009235	CompoundStatement		116:10:3790:3790	1008316	0					
ANR	1009236	IfStatement	if ( end == from )		1008316	0					
ANR	1009237	Condition	end == from	759:8:24560:24570	1008316	0	True				
ANR	1009238	EqualityExpression	end == from		1008316	0		==			
ANR	1009239	Identifier	end		1008316	0					
ANR	1009240	Identifier	from		1008316	1					
ANR	1009241	CompoundStatement		117:21:3813:3813	1008316	1					
ANR	1009242	ExpressionStatement	end = to	760:5:24580:24588	1008316	0	True				
ANR	1009243	AssignmentExpression	end = to		1008316	0		=			
ANR	1009244	Identifier	end		1008316	0					
ANR	1009245	Identifier	to		1008316	1					
ANR	1009246	ElseStatement	else		1008316	0					
ANR	1009247	CompoundStatement		119:11:3841:3841	1008316	0					
ANR	1009248	ExpressionStatement	"append_bound ( list , NULL , search_itv , begin , end - begin , perm )"	763:5:24657:24720	1008316	0	True				
ANR	1009249	CallExpression	"append_bound ( list , NULL , search_itv , begin , end - begin , perm )"		1008316	0					
ANR	1009250	Callee	append_bound		1008316	0					
ANR	1009251	Identifier	append_bound		1008316	0					
ANR	1009252	ArgumentList	list		1008316	1					
ANR	1009253	Argument	list		1008316	0					
ANR	1009254	Identifier	list		1008316	0					
ANR	1009255	Argument	NULL		1008316	1					
ANR	1009256	Identifier	NULL		1008316	0					
ANR	1009257	Argument	search_itv		1008316	2					
ANR	1009258	Identifier	search_itv		1008316	0					
ANR	1009259	Argument	begin		1008316	3					
ANR	1009260	Identifier	begin		1008316	0					
ANR	1009261	Argument	end - begin		1008316	4					
ANR	1009262	AdditiveExpression	end - begin		1008316	0		-			
ANR	1009263	Identifier	end		1008316	0					
ANR	1009264	Identifier	begin		1008316	1					
ANR	1009265	Argument	perm		1008316	5					
ANR	1009266	Identifier	perm		1008316	0					
ANR	1009267	ExpressionStatement	begin = from	764:5:24727:24739	1008316	1	True				
ANR	1009268	AssignmentExpression	begin = from		1008316	0		=			
ANR	1009269	Identifier	begin		1008316	0					
ANR	1009270	Identifier	from		1008316	1					
ANR	1009271	ExpressionStatement	end = to	765:5:24746:24754	1008316	2	True				
ANR	1009272	AssignmentExpression	end = to		1008316	0		=			
ANR	1009273	Identifier	end		1008316	0					
ANR	1009274	Identifier	to		1008316	1					
ANR	1009275	IfStatement	if ( end != UT64_MAX )		1008316	8					
ANR	1009276	Condition	end != UT64_MAX	769:6:24777:24791	1008316	0	True				
ANR	1009277	EqualityExpression	end != UT64_MAX		1008316	0		!=			
ANR	1009278	Identifier	end		1008316	0					
ANR	1009279	Identifier	UT64_MAX		1008316	1					
ANR	1009280	CompoundStatement		127:23:4034:4034	1008316	1					
ANR	1009281	ExpressionStatement	"append_bound ( list , NULL , search_itv , begin , end - begin , 7 )"	770:3:24799:24859	1008316	0	True				
ANR	1009282	CallExpression	"append_bound ( list , NULL , search_itv , begin , end - begin , 7 )"		1008316	0					
ANR	1009283	Callee	append_bound		1008316	0					
ANR	1009284	Identifier	append_bound		1008316	0					
ANR	1009285	ArgumentList	list		1008316	1					
ANR	1009286	Argument	list		1008316	0					
ANR	1009287	Identifier	list		1008316	0					
ANR	1009288	Argument	NULL		1008316	1					
ANR	1009289	Identifier	NULL		1008316	0					
ANR	1009290	Argument	search_itv		1008316	2					
ANR	1009291	Identifier	search_itv		1008316	0					
ANR	1009292	Argument	begin		1008316	3					
ANR	1009293	Identifier	begin		1008316	0					
ANR	1009294	Argument	end - begin		1008316	4					
ANR	1009295	AdditiveExpression	end - begin		1008316	0		-			
ANR	1009296	Identifier	end		1008316	0					
ANR	1009297	Identifier	begin		1008316	1					
ANR	1009298	Argument	7		1008316	5					
ANR	1009299	PrimaryExpression	7		1008316	0					
ANR	1009300	ElseStatement	else		1008316	0					
ANR	1009301	IfStatement	"if ( r_str_startswith ( mode , ""bin.segments"" ) )"		1008316	0					
ANR	1009302	Condition	"r_str_startswith ( mode , ""bin.segments"" )"	772:12:24877:24915	1008316	0	True				
ANR	1009303	CallExpression	"r_str_startswith ( mode , ""bin.segments"" )"		1008316	0					
ANR	1009304	Callee	r_str_startswith		1008316	0					
ANR	1009305	Identifier	r_str_startswith		1008316	0					
ANR	1009306	ArgumentList	mode		1008316	1					
ANR	1009307	Argument	mode		1008316	0					
ANR	1009308	Identifier	mode		1008316	0					
ANR	1009309	Argument	"""bin.segments"""		1008316	1					
ANR	1009310	PrimaryExpression	"""bin.segments"""		1008316	0					
ANR	1009311	CompoundStatement		134:2:4316:4362	1008316	1					
ANR	1009312	IdentifierDeclStatement	"int len = strlen ( ""bin.segments."" ) ;"	773:2:24922:24956	1008316	0	True				
ANR	1009313	IdentifierDecl	"len = strlen ( ""bin.segments."" )"		1008316	0					
ANR	1009314	IdentifierDeclType	int		1008316	0					
ANR	1009315	Identifier	len		1008316	1					
ANR	1009316	AssignmentExpression	"len = strlen ( ""bin.segments."" )"		1008316	2		=			
ANR	1009317	Identifier	len		1008316	0					
ANR	1009318	CallExpression	"strlen ( ""bin.segments."" )"		1008316	1					
ANR	1009319	Callee	strlen		1008316	0					
ANR	1009320	Identifier	strlen		1008316	0					
ANR	1009321	ArgumentList	"""bin.segments."""		1008316	1					
ANR	1009322	Argument	"""bin.segments."""		1008316	0					
ANR	1009323	PrimaryExpression	"""bin.segments."""		1008316	0					
ANR	1009324	IdentifierDeclStatement	int mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0 ;	774:2:24960:25020	1008316	1	True				
ANR	1009325	IdentifierDecl	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	0					
ANR	1009326	IdentifierDeclType	int		1008316	0					
ANR	1009327	Identifier	mask		1008316	1					
ANR	1009328	AssignmentExpression	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	2		=			
ANR	1009329	Identifier	mask		1008316	0					
ANR	1009330	ConditionalExpression	( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	1					
ANR	1009331	Condition	mode [ len - 1 ] == '.'		1008316	0					
ANR	1009332	EqualityExpression	mode [ len - 1 ] == '.'		1008316	0		==			
ANR	1009333	ArrayIndexing	mode [ len - 1 ]		1008316	0					
ANR	1009334	Identifier	mode		1008316	0					
ANR	1009335	AdditiveExpression	len - 1		1008316	1		-			
ANR	1009336	Identifier	len		1008316	0					
ANR	1009337	PrimaryExpression	1		1008316	1					
ANR	1009338	PrimaryExpression	'.'		1008316	1					
ANR	1009339	CallExpression	r_str_rwx ( mode + len )		1008316	1					
ANR	1009340	Callee	r_str_rwx		1008316	0					
ANR	1009341	Identifier	r_str_rwx		1008316	0					
ANR	1009342	ArgumentList	mode + len		1008316	1					
ANR	1009343	Argument	mode + len		1008316	0					
ANR	1009344	AdditiveExpression	mode + len		1008316	0		+			
ANR	1009345	Identifier	mode		1008316	0					
ANR	1009346	Identifier	len		1008316	1					
ANR	1009347	PrimaryExpression	0		1008316	2					
ANR	1009348	IdentifierDeclStatement	"bool only = ( bool ) ( size_t ) strstr ( mode , "".only"" ) ;"	775:2:25024:25072	1008316	2	True				
ANR	1009349	IdentifierDecl	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	0					
ANR	1009350	IdentifierDeclType	bool		1008316	0					
ANR	1009351	Identifier	only		1008316	1					
ANR	1009352	AssignmentExpression	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	2		=			
ANR	1009353	Identifier	only		1008316	0					
ANR	1009354	CastExpression	"( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1009355	CastTarget	bool		1008316	0					
ANR	1009356	CastExpression	"( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1009357	CastTarget	size_t		1008316	0					
ANR	1009358	CallExpression	"strstr ( mode , "".only"" )"		1008316	1					
ANR	1009359	Callee	strstr		1008316	0					
ANR	1009360	Identifier	strstr		1008316	0					
ANR	1009361	ArgumentList	mode		1008316	1					
ANR	1009362	Argument	mode		1008316	0					
ANR	1009363	Identifier	mode		1008316	0					
ANR	1009364	Argument	""".only"""		1008316	1					
ANR	1009365	PrimaryExpression	""".only"""		1008316	0					
ANR	1009366	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	776:2:25076:25122	1008316	3	True				
ANR	1009367	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		1008316	0					
ANR	1009368	IdentifierDeclType	RBinObject *		1008316	0					
ANR	1009369	Identifier	obj		1008316	1					
ANR	1009370	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		1008316	2		=			
ANR	1009371	Identifier	obj		1008316	0					
ANR	1009372	CallExpression	r_bin_cur_object ( core -> bin )		1008316	1					
ANR	1009373	Callee	r_bin_cur_object		1008316	0					
ANR	1009374	Identifier	r_bin_cur_object		1008316	0					
ANR	1009375	ArgumentList	core -> bin		1008316	1					
ANR	1009376	Argument	core -> bin		1008316	0					
ANR	1009377	PtrMemberAccess	core -> bin		1008316	0					
ANR	1009378	Identifier	core		1008316	0					
ANR	1009379	Identifier	bin		1008316	1					
ANR	1009380	IfStatement	if ( obj )		1008316	4					
ANR	1009381	Condition	obj	777:6:25130:25132	1008316	0	True				
ANR	1009382	Identifier	obj		1008316	0					
ANR	1009383	CompoundStatement		137:3:4399:4414	1008316	1					
ANR	1009384	IdentifierDeclStatement	RBinSection * s ;	778:3:25140:25154	1008316	0	True				
ANR	1009385	IdentifierDecl	* s		1008316	0					
ANR	1009386	IdentifierDeclType	RBinSection *		1008316	0					
ANR	1009387	Identifier	s		1008316	1					
ANR	1009388	IdentifierDeclStatement	RListIter * iter ;	779:3:25159:25174	1008316	1	True				
ANR	1009389	IdentifierDecl	* iter		1008316	0					
ANR	1009390	IdentifierDeclType	RListIter *		1008316	0					
ANR	1009391	Identifier	iter		1008316	1					
ANR	1009392	Statement	r_list_foreach	780:3:25179:25192	1008316	2	True				
ANR	1009393	Statement	(	780:18:25194:25194	1008316	3	True				
ANR	1009394	Statement	obj	780:19:25195:25197	1008316	4	True				
ANR	1009395	Statement	->	780:22:25198:25199	1008316	5	True				
ANR	1009396	Statement	sections	780:24:25200:25207	1008316	6	True				
ANR	1009397	Statement	","	780:32:25208:25208	1008316	7	True				
ANR	1009398	Statement	iter	780:34:25210:25213	1008316	8	True				
ANR	1009399	Statement	","	780:38:25214:25214	1008316	9	True				
ANR	1009400	Statement	s	780:40:25216:25216	1008316	10	True				
ANR	1009401	Statement	)	780:41:25217:25217	1008316	11	True				
ANR	1009402	CompoundStatement		146:4:4628:4671	1008316	12					
ANR	1009403	IfStatement	if ( ! s -> is_segment )		1008316	0					
ANR	1009404	Condition	! s -> is_segment	781:8:25229:25242	1008316	0	True				
ANR	1009405	UnaryOperationExpression	! s -> is_segment		1008316	0					
ANR	1009406	UnaryOperator	!		1008316	0					
ANR	1009407	PtrMemberAccess	s -> is_segment		1008316	1					
ANR	1009408	Identifier	s		1008316	0					
ANR	1009409	Identifier	is_segment		1008316	1					
ANR	1009410	CompoundStatement		139:24:4485:4485	1008316	1					
ANR	1009411	ContinueStatement	continue ;	782:5:25252:25260	1008316	0	True				
ANR	1009412	IfStatement	"if ( maskMatches ( s -> perm , mask , only ) )"		1008316	1					
ANR	1009413	Condition	"maskMatches ( s -> perm , mask , only )"	784:8:25276:25308	1008316	0	True				
ANR	1009414	CallExpression	"maskMatches ( s -> perm , mask , only )"		1008316	0					
ANR	1009415	Callee	maskMatches		1008316	0					
ANR	1009416	Identifier	maskMatches		1008316	0					
ANR	1009417	ArgumentList	s -> perm		1008316	1					
ANR	1009418	Argument	s -> perm		1008316	0					
ANR	1009419	PtrMemberAccess	s -> perm		1008316	0					
ANR	1009420	Identifier	s		1008316	0					
ANR	1009421	Identifier	perm		1008316	1					
ANR	1009422	Argument	mask		1008316	1					
ANR	1009423	Identifier	mask		1008316	0					
ANR	1009424	Argument	only		1008316	2					
ANR	1009425	Identifier	only		1008316	0					
ANR	1009426	CompoundStatement		142:43:4551:4551	1008316	1					
ANR	1009427	ContinueStatement	continue ;	785:5:25318:25326	1008316	0	True				
ANR	1009428	IdentifierDeclStatement	ut64 addr = core -> io -> va ? s -> vaddr : s -> paddr ;	787:4:25338:25382	1008316	2	True				
ANR	1009429	IdentifierDecl	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	0					
ANR	1009430	IdentifierDeclType	ut64		1008316	0					
ANR	1009431	Identifier	addr		1008316	1					
ANR	1009432	AssignmentExpression	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	2		=			
ANR	1009433	Identifier	addr		1008316	0					
ANR	1009434	ConditionalExpression	core -> io -> va ? s -> vaddr : s -> paddr		1008316	1					
ANR	1009435	Condition	core -> io -> va		1008316	0					
ANR	1009436	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1009437	PtrMemberAccess	core -> io		1008316	0					
ANR	1009438	Identifier	core		1008316	0					
ANR	1009439	Identifier	io		1008316	1					
ANR	1009440	Identifier	va		1008316	1					
ANR	1009441	PtrMemberAccess	s -> vaddr		1008316	1					
ANR	1009442	Identifier	s		1008316	0					
ANR	1009443	Identifier	vaddr		1008316	1					
ANR	1009444	PtrMemberAccess	s -> paddr		1008316	2					
ANR	1009445	Identifier	s		1008316	0					
ANR	1009446	Identifier	paddr		1008316	1					
ANR	1009447	IdentifierDeclStatement	ut64 size = core -> io -> va ? s -> vsize : s -> size ;	788:4:25388:25431	1008316	3	True				
ANR	1009448	IdentifierDecl	size = core -> io -> va ? s -> vsize : s -> size		1008316	0					
ANR	1009449	IdentifierDeclType	ut64		1008316	0					
ANR	1009450	Identifier	size		1008316	1					
ANR	1009451	AssignmentExpression	size = core -> io -> va ? s -> vsize : s -> size		1008316	2		=			
ANR	1009452	Identifier	size		1008316	0					
ANR	1009453	ConditionalExpression	core -> io -> va ? s -> vsize : s -> size		1008316	1					
ANR	1009454	Condition	core -> io -> va		1008316	0					
ANR	1009455	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1009456	PtrMemberAccess	core -> io		1008316	0					
ANR	1009457	Identifier	core		1008316	0					
ANR	1009458	Identifier	io		1008316	1					
ANR	1009459	Identifier	va		1008316	1					
ANR	1009460	PtrMemberAccess	s -> vsize		1008316	1					
ANR	1009461	Identifier	s		1008316	0					
ANR	1009462	Identifier	vsize		1008316	1					
ANR	1009463	PtrMemberAccess	s -> size		1008316	2					
ANR	1009464	Identifier	s		1008316	0					
ANR	1009465	Identifier	size		1008316	1					
ANR	1009466	ExpressionStatement	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"	789:4:25437:25499	1008316	4	True				
ANR	1009467	CallExpression	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"		1008316	0					
ANR	1009468	Callee	append_bound		1008316	0					
ANR	1009469	Identifier	append_bound		1008316	0					
ANR	1009470	ArgumentList	list		1008316	1					
ANR	1009471	Argument	list		1008316	0					
ANR	1009472	Identifier	list		1008316	0					
ANR	1009473	Argument	core -> io		1008316	1					
ANR	1009474	PtrMemberAccess	core -> io		1008316	0					
ANR	1009475	Identifier	core		1008316	0					
ANR	1009476	Identifier	io		1008316	1					
ANR	1009477	Argument	search_itv		1008316	2					
ANR	1009478	Identifier	search_itv		1008316	0					
ANR	1009479	Argument	addr		1008316	3					
ANR	1009480	Identifier	addr		1008316	0					
ANR	1009481	Argument	size		1008316	4					
ANR	1009482	Identifier	size		1008316	0					
ANR	1009483	Argument	s -> perm		1008316	5					
ANR	1009484	PtrMemberAccess	s -> perm		1008316	0					
ANR	1009485	Identifier	s		1008316	0					
ANR	1009486	Identifier	perm		1008316	1					
ANR	1009487	ElseStatement	else		1008316	0					
ANR	1009488	IfStatement	"if ( r_str_startswith ( mode , ""code"" ) )"		1008316	0					
ANR	1009489	Condition	"r_str_startswith ( mode , ""code"" )"	792:12:25522:25552	1008316	0	True				
ANR	1009490	CallExpression	"r_str_startswith ( mode , ""code"" )"		1008316	0					
ANR	1009491	Callee	r_str_startswith		1008316	0					
ANR	1009492	Identifier	r_str_startswith		1008316	0					
ANR	1009493	ArgumentList	mode		1008316	1					
ANR	1009494	Argument	mode		1008316	0					
ANR	1009495	Identifier	mode		1008316	0					
ANR	1009496	Argument	"""code"""		1008316	1					
ANR	1009497	PrimaryExpression	"""code"""		1008316	0					
ANR	1009498	CompoundStatement		151:2:4799:4845	1008316	1					
ANR	1009499	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	793:2:25559:25605	1008316	0	True				
ANR	1009500	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		1008316	0					
ANR	1009501	IdentifierDeclType	RBinObject *		1008316	0					
ANR	1009502	Identifier	obj		1008316	1					
ANR	1009503	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		1008316	2		=			
ANR	1009504	Identifier	obj		1008316	0					
ANR	1009505	CallExpression	r_bin_cur_object ( core -> bin )		1008316	1					
ANR	1009506	Callee	r_bin_cur_object		1008316	0					
ANR	1009507	Identifier	r_bin_cur_object		1008316	0					
ANR	1009508	ArgumentList	core -> bin		1008316	1					
ANR	1009509	Argument	core -> bin		1008316	0					
ANR	1009510	PtrMemberAccess	core -> bin		1008316	0					
ANR	1009511	Identifier	core		1008316	0					
ANR	1009512	Identifier	bin		1008316	1					
ANR	1009513	IfStatement	if ( obj )		1008316	1					
ANR	1009514	Condition	obj	794:6:25613:25615	1008316	0	True				
ANR	1009515	Identifier	obj		1008316	0					
ANR	1009516	CompoundStatement		156:3:4923:4938	1008316	1					
ANR	1009517	IdentifierDeclStatement	ut64 from = UT64_MAX ;	795:3:25623:25643	1008316	0	True				
ANR	1009518	IdentifierDecl	from = UT64_MAX		1008316	0					
ANR	1009519	IdentifierDeclType	ut64		1008316	0					
ANR	1009520	Identifier	from		1008316	1					
ANR	1009521	AssignmentExpression	from = UT64_MAX		1008316	2		=			
ANR	1009522	Identifier	UT64_MAX		1008316	0					
ANR	1009523	Identifier	UT64_MAX		1008316	1					
ANR	1009524	IdentifierDeclStatement	ut64 to = 0 ;	796:3:25648:25659	1008316	1	True				
ANR	1009525	IdentifierDecl	to = 0		1008316	0					
ANR	1009526	IdentifierDeclType	ut64		1008316	0					
ANR	1009527	Identifier	to		1008316	1					
ANR	1009528	AssignmentExpression	to = 0		1008316	2		=			
ANR	1009529	Identifier	to		1008316	0					
ANR	1009530	PrimaryExpression	0		1008316	1					
ANR	1009531	IdentifierDeclStatement	RBinSection * s ;	797:3:25664:25678	1008316	2	True				
ANR	1009532	IdentifierDecl	* s		1008316	0					
ANR	1009533	IdentifierDeclType	RBinSection *		1008316	0					
ANR	1009534	Identifier	s		1008316	1					
ANR	1009535	IdentifierDeclStatement	RListIter * iter ;	798:3:25683:25698	1008316	3	True				
ANR	1009536	IdentifierDecl	* iter		1008316	0					
ANR	1009537	IdentifierDeclType	RListIter *		1008316	0					
ANR	1009538	Identifier	iter		1008316	1					
ANR	1009539	Statement	r_list_foreach	799:3:25703:25716	1008316	4	True				
ANR	1009540	Statement	(	799:18:25718:25718	1008316	5	True				
ANR	1009541	Statement	obj	799:19:25719:25721	1008316	6	True				
ANR	1009542	Statement	->	799:22:25722:25723	1008316	7	True				
ANR	1009543	Statement	sections	799:24:25724:25731	1008316	8	True				
ANR	1009544	Statement	","	799:32:25732:25732	1008316	9	True				
ANR	1009545	Statement	iter	799:34:25734:25737	1008316	10	True				
ANR	1009546	Statement	","	799:38:25738:25738	1008316	11	True				
ANR	1009547	Statement	s	799:40:25740:25740	1008316	12	True				
ANR	1009548	Statement	)	799:41:25741:25741	1008316	13	True				
ANR	1009549	CompoundStatement		165:4:5149:5192	1008316	14					
ANR	1009550	IfStatement	if ( s -> is_segment )		1008316	0					
ANR	1009551	Condition	s -> is_segment	800:8:25753:25765	1008316	0	True				
ANR	1009552	PtrMemberAccess	s -> is_segment		1008316	0					
ANR	1009553	Identifier	s		1008316	0					
ANR	1009554	Identifier	is_segment		1008316	1					
ANR	1009555	CompoundStatement		158:23:5008:5008	1008316	1					
ANR	1009556	ContinueStatement	continue ;	801:5:25775:25783	1008316	0	True				
ANR	1009557	IfStatement	"if ( maskMatches ( s -> perm , 1 , false ) )"		1008316	1					
ANR	1009558	Condition	"maskMatches ( s -> perm , 1 , false )"	803:8:25799:25829	1008316	0	True				
ANR	1009559	CallExpression	"maskMatches ( s -> perm , 1 , false )"		1008316	0					
ANR	1009560	Callee	maskMatches		1008316	0					
ANR	1009561	Identifier	maskMatches		1008316	0					
ANR	1009562	ArgumentList	s -> perm		1008316	1					
ANR	1009563	Argument	s -> perm		1008316	0					
ANR	1009564	PtrMemberAccess	s -> perm		1008316	0					
ANR	1009565	Identifier	s		1008316	0					
ANR	1009566	Identifier	perm		1008316	1					
ANR	1009567	Argument	1		1008316	1					
ANR	1009568	PrimaryExpression	1		1008316	0					
ANR	1009569	Argument	false		1008316	2					
ANR	1009570	Identifier	false		1008316	0					
ANR	1009571	CompoundStatement		161:41:5072:5072	1008316	1					
ANR	1009572	ContinueStatement	continue ;	804:5:25839:25847	1008316	0	True				
ANR	1009573	IdentifierDeclStatement	ut64 addr = core -> io -> va ? s -> vaddr : s -> paddr ;	806:4:25859:25903	1008316	2	True				
ANR	1009574	IdentifierDecl	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	0					
ANR	1009575	IdentifierDeclType	ut64		1008316	0					
ANR	1009576	Identifier	addr		1008316	1					
ANR	1009577	AssignmentExpression	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	2		=			
ANR	1009578	Identifier	addr		1008316	0					
ANR	1009579	ConditionalExpression	core -> io -> va ? s -> vaddr : s -> paddr		1008316	1					
ANR	1009580	Condition	core -> io -> va		1008316	0					
ANR	1009581	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1009582	PtrMemberAccess	core -> io		1008316	0					
ANR	1009583	Identifier	core		1008316	0					
ANR	1009584	Identifier	io		1008316	1					
ANR	1009585	Identifier	va		1008316	1					
ANR	1009586	PtrMemberAccess	s -> vaddr		1008316	1					
ANR	1009587	Identifier	s		1008316	0					
ANR	1009588	Identifier	vaddr		1008316	1					
ANR	1009589	PtrMemberAccess	s -> paddr		1008316	2					
ANR	1009590	Identifier	s		1008316	0					
ANR	1009591	Identifier	paddr		1008316	1					
ANR	1009592	IdentifierDeclStatement	ut64 size = core -> io -> va ? s -> vsize : s -> size ;	807:4:25909:25952	1008316	3	True				
ANR	1009593	IdentifierDecl	size = core -> io -> va ? s -> vsize : s -> size		1008316	0					
ANR	1009594	IdentifierDeclType	ut64		1008316	0					
ANR	1009595	Identifier	size		1008316	1					
ANR	1009596	AssignmentExpression	size = core -> io -> va ? s -> vsize : s -> size		1008316	2		=			
ANR	1009597	Identifier	size		1008316	0					
ANR	1009598	ConditionalExpression	core -> io -> va ? s -> vsize : s -> size		1008316	1					
ANR	1009599	Condition	core -> io -> va		1008316	0					
ANR	1009600	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1009601	PtrMemberAccess	core -> io		1008316	0					
ANR	1009602	Identifier	core		1008316	0					
ANR	1009603	Identifier	io		1008316	1					
ANR	1009604	Identifier	va		1008316	1					
ANR	1009605	PtrMemberAccess	s -> vsize		1008316	1					
ANR	1009606	Identifier	s		1008316	0					
ANR	1009607	Identifier	vsize		1008316	1					
ANR	1009608	PtrMemberAccess	s -> size		1008316	2					
ANR	1009609	Identifier	s		1008316	0					
ANR	1009610	Identifier	size		1008316	1					
ANR	1009611	ExpressionStatement	"from = R_MIN ( addr , from )"	808:4:25958:25983	1008316	4	True				
ANR	1009612	AssignmentExpression	"from = R_MIN ( addr , from )"		1008316	0		=			
ANR	1009613	Identifier	from		1008316	0					
ANR	1009614	CallExpression	"R_MIN ( addr , from )"		1008316	1					
ANR	1009615	Callee	R_MIN		1008316	0					
ANR	1009616	Identifier	R_MIN		1008316	0					
ANR	1009617	ArgumentList	addr		1008316	1					
ANR	1009618	Argument	addr		1008316	0					
ANR	1009619	Identifier	addr		1008316	0					
ANR	1009620	Argument	from		1008316	1					
ANR	1009621	Identifier	from		1008316	0					
ANR	1009622	ExpressionStatement	"to = R_MAX ( to , addr + size )"	809:4:25989:26017	1008316	5	True				
ANR	1009623	AssignmentExpression	"to = R_MAX ( to , addr + size )"		1008316	0		=			
ANR	1009624	Identifier	to		1008316	0					
ANR	1009625	CallExpression	"R_MAX ( to , addr + size )"		1008316	1					
ANR	1009626	Callee	R_MAX		1008316	0					
ANR	1009627	Identifier	R_MAX		1008316	0					
ANR	1009628	ArgumentList	to		1008316	1					
ANR	1009629	Argument	to		1008316	0					
ANR	1009630	Identifier	to		1008316	0					
ANR	1009631	Argument	addr + size		1008316	1					
ANR	1009632	AdditiveExpression	addr + size		1008316	0		+			
ANR	1009633	Identifier	addr		1008316	0					
ANR	1009634	Identifier	size		1008316	1					
ANR	1009635	IfStatement	if ( from == UT64_MAX )		1008316	15					
ANR	1009636	Condition	from == UT64_MAX	811:7:26031:26046	1008316	0	True				
ANR	1009637	EqualityExpression	from == UT64_MAX		1008316	0		==			
ANR	1009638	Identifier	from		1008316	0					
ANR	1009639	Identifier	UT64_MAX		1008316	1					
ANR	1009640	CompoundStatement		172:4:5335:5347	1008316	1					
ANR	1009641	IdentifierDeclStatement	SdbListIter * iter ;	812:4:26055:26072	1008316	0	True				
ANR	1009642	IdentifierDecl	* iter		1008316	0					
ANR	1009643	IdentifierDeclType	SdbListIter *		1008316	0					
ANR	1009644	Identifier	iter		1008316	1					
ANR	1009645	IdentifierDeclStatement	RIOMap * map ;	813:4:26078:26089	1008316	1	True				
ANR	1009646	IdentifierDecl	* map		1008316	0					
ANR	1009647	IdentifierDeclType	RIOMap *		1008316	0					
ANR	1009648	Identifier	map		1008316	1					
ANR	1009649	IdentifierDeclStatement	int mask = 1 ;	814:4:26095:26107	1008316	2	True				
ANR	1009650	IdentifierDecl	mask = 1		1008316	0					
ANR	1009651	IdentifierDeclType	int		1008316	0					
ANR	1009652	Identifier	mask		1008316	1					
ANR	1009653	AssignmentExpression	mask = 1		1008316	2		=			
ANR	1009654	Identifier	mask		1008316	0					
ANR	1009655	PrimaryExpression	1		1008316	1					
ANR	1009656	Statement	ls_foreach	815:4:26113:26122	1008316	3	True				
ANR	1009657	Statement	(	815:16:26125:26125	1008316	4	True				
ANR	1009658	Statement	core	815:17:26126:26129	1008316	5	True				
ANR	1009659	Statement	->	815:21:26130:26131	1008316	6	True				
ANR	1009660	Statement	io	815:23:26132:26133	1008316	7	True				
ANR	1009661	Statement	->	815:25:26134:26135	1008316	8	True				
ANR	1009662	Statement	maps	815:27:26136:26139	1008316	9	True				
ANR	1009663	Statement	","	815:31:26140:26140	1008316	10	True				
ANR	1009664	Statement	iter	815:33:26142:26145	1008316	11	True				
ANR	1009665	Statement	","	815:37:26146:26146	1008316	12	True				
ANR	1009666	Statement	map	815:39:26148:26150	1008316	13	True				
ANR	1009667	Statement	)	815:42:26151:26151	1008316	14	True				
ANR	1009668	CompoundStatement		176:5:5481:5500	1008316	15					
ANR	1009669	IdentifierDeclStatement	ut64 from = r_itv_begin ( map -> itv ) ;	816:5:26160:26194	1008316	0	True				
ANR	1009670	IdentifierDecl	from = r_itv_begin ( map -> itv )		1008316	0					
ANR	1009671	IdentifierDeclType	ut64		1008316	0					
ANR	1009672	Identifier	from		1008316	1					
ANR	1009673	AssignmentExpression	from = r_itv_begin ( map -> itv )		1008316	2		=			
ANR	1009674	Identifier	from		1008316	0					
ANR	1009675	CallExpression	r_itv_begin ( map -> itv )		1008316	1					
ANR	1009676	Callee	r_itv_begin		1008316	0					
ANR	1009677	Identifier	r_itv_begin		1008316	0					
ANR	1009678	ArgumentList	map -> itv		1008316	1					
ANR	1009679	Argument	map -> itv		1008316	0					
ANR	1009680	PtrMemberAccess	map -> itv		1008316	0					
ANR	1009681	Identifier	map		1008316	0					
ANR	1009682	Identifier	itv		1008316	1					
ANR	1009683	IdentifierDeclStatement	ut64 size = r_itv_size ( map -> itv ) ;	817:5:26201:26234	1008316	1	True				
ANR	1009684	IdentifierDecl	size = r_itv_size ( map -> itv )		1008316	0					
ANR	1009685	IdentifierDeclType	ut64		1008316	0					
ANR	1009686	Identifier	size		1008316	1					
ANR	1009687	AssignmentExpression	size = r_itv_size ( map -> itv )		1008316	2		=			
ANR	1009688	Identifier	size		1008316	0					
ANR	1009689	CallExpression	r_itv_size ( map -> itv )		1008316	1					
ANR	1009690	Callee	r_itv_size		1008316	0					
ANR	1009691	Identifier	r_itv_size		1008316	0					
ANR	1009692	ArgumentList	map -> itv		1008316	1					
ANR	1009693	Argument	map -> itv		1008316	0					
ANR	1009694	PtrMemberAccess	map -> itv		1008316	0					
ANR	1009695	Identifier	map		1008316	0					
ANR	1009696	Identifier	itv		1008316	1					
ANR	1009697	IdentifierDeclStatement	int rwx = map -> perm ;	818:5:26241:26260	1008316	2	True				
ANR	1009698	IdentifierDecl	rwx = map -> perm		1008316	0					
ANR	1009699	IdentifierDeclType	int		1008316	0					
ANR	1009700	Identifier	rwx		1008316	1					
ANR	1009701	AssignmentExpression	rwx = map -> perm		1008316	2		=			
ANR	1009702	Identifier	rwx		1008316	0					
ANR	1009703	PtrMemberAccess	map -> perm		1008316	1					
ANR	1009704	Identifier	map		1008316	0					
ANR	1009705	Identifier	perm		1008316	1					
ANR	1009706	IfStatement	if ( ( rwx & mask ) != mask )		1008316	3					
ANR	1009707	Condition	( rwx & mask ) != mask	819:9:26271:26290	1008316	0	True				
ANR	1009708	EqualityExpression	( rwx & mask ) != mask		1008316	0		!=			
ANR	1009709	BitAndExpression	rwx & mask		1008316	0		&			
ANR	1009710	Identifier	rwx		1008316	0					
ANR	1009711	Identifier	mask		1008316	1					
ANR	1009712	Identifier	mask		1008316	1					
ANR	1009713	CompoundStatement		177:31:5533:5533	1008316	1					
ANR	1009714	ContinueStatement	continue ;	820:6:26301:26309	1008316	0	True				
ANR	1009715	ExpressionStatement	"append_bound ( list , core -> io , search_itv , from , size , rwx )"	822:5:26323:26381	1008316	4	True				
ANR	1009716	CallExpression	"append_bound ( list , core -> io , search_itv , from , size , rwx )"		1008316	0					
ANR	1009717	Callee	append_bound		1008316	0					
ANR	1009718	Identifier	append_bound		1008316	0					
ANR	1009719	ArgumentList	list		1008316	1					
ANR	1009720	Argument	list		1008316	0					
ANR	1009721	Identifier	list		1008316	0					
ANR	1009722	Argument	core -> io		1008316	1					
ANR	1009723	PtrMemberAccess	core -> io		1008316	0					
ANR	1009724	Identifier	core		1008316	0					
ANR	1009725	Identifier	io		1008316	1					
ANR	1009726	Argument	search_itv		1008316	2					
ANR	1009727	Identifier	search_itv		1008316	0					
ANR	1009728	Argument	from		1008316	3					
ANR	1009729	Identifier	from		1008316	0					
ANR	1009730	Argument	size		1008316	4					
ANR	1009731	Identifier	size		1008316	0					
ANR	1009732	Argument	rwx		1008316	5					
ANR	1009733	Identifier	rwx		1008316	0					
ANR	1009734	ExpressionStatement	"append_bound ( list , core -> io , search_itv , from , to - from , 1 )"	825:3:26397:26456	1008316	16	True				
ANR	1009735	CallExpression	"append_bound ( list , core -> io , search_itv , from , to - from , 1 )"		1008316	0					
ANR	1009736	Callee	append_bound		1008316	0					
ANR	1009737	Identifier	append_bound		1008316	0					
ANR	1009738	ArgumentList	list		1008316	1					
ANR	1009739	Argument	list		1008316	0					
ANR	1009740	Identifier	list		1008316	0					
ANR	1009741	Argument	core -> io		1008316	1					
ANR	1009742	PtrMemberAccess	core -> io		1008316	0					
ANR	1009743	Identifier	core		1008316	0					
ANR	1009744	Identifier	io		1008316	1					
ANR	1009745	Argument	search_itv		1008316	2					
ANR	1009746	Identifier	search_itv		1008316	0					
ANR	1009747	Argument	from		1008316	3					
ANR	1009748	Identifier	from		1008316	0					
ANR	1009749	Argument	to - from		1008316	4					
ANR	1009750	AdditiveExpression	to - from		1008316	0		-			
ANR	1009751	Identifier	to		1008316	0					
ANR	1009752	Identifier	from		1008316	1					
ANR	1009753	Argument	1		1008316	5					
ANR	1009754	PrimaryExpression	1		1008316	0					
ANR	1009755	ElseStatement	else		1008316	0					
ANR	1009756	IfStatement	"if ( r_str_startswith ( mode , ""bin.sections"" ) )"		1008316	0					
ANR	1009757	Condition	"r_str_startswith ( mode , ""bin.sections"" )"	827:12:26474:26512	1008316	0	True				
ANR	1009758	CallExpression	"r_str_startswith ( mode , ""bin.sections"" )"		1008316	0					
ANR	1009759	Callee	r_str_startswith		1008316	0					
ANR	1009760	Identifier	r_str_startswith		1008316	0					
ANR	1009761	ArgumentList	mode		1008316	1					
ANR	1009762	Argument	mode		1008316	0					
ANR	1009763	Identifier	mode		1008316	0					
ANR	1009764	Argument	"""bin.sections"""		1008316	1					
ANR	1009765	PrimaryExpression	"""bin.sections"""		1008316	0					
ANR	1009766	CompoundStatement		189:2:5913:5959	1008316	1					
ANR	1009767	IdentifierDeclStatement	"int len = strlen ( ""bin.sections."" ) ;"	828:2:26519:26553	1008316	0	True				
ANR	1009768	IdentifierDecl	"len = strlen ( ""bin.sections."" )"		1008316	0					
ANR	1009769	IdentifierDeclType	int		1008316	0					
ANR	1009770	Identifier	len		1008316	1					
ANR	1009771	AssignmentExpression	"len = strlen ( ""bin.sections."" )"		1008316	2		=			
ANR	1009772	Identifier	len		1008316	0					
ANR	1009773	CallExpression	"strlen ( ""bin.sections."" )"		1008316	1					
ANR	1009774	Callee	strlen		1008316	0					
ANR	1009775	Identifier	strlen		1008316	0					
ANR	1009776	ArgumentList	"""bin.sections."""		1008316	1					
ANR	1009777	Argument	"""bin.sections."""		1008316	0					
ANR	1009778	PrimaryExpression	"""bin.sections."""		1008316	0					
ANR	1009779	IdentifierDeclStatement	int mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0 ;	829:2:26557:26617	1008316	1	True				
ANR	1009780	IdentifierDecl	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	0					
ANR	1009781	IdentifierDeclType	int		1008316	0					
ANR	1009782	Identifier	mask		1008316	1					
ANR	1009783	AssignmentExpression	mask = ( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	2		=			
ANR	1009784	Identifier	mask		1008316	0					
ANR	1009785	ConditionalExpression	( mode [ len - 1 ] == '.' ) ? r_str_rwx ( mode + len ) : 0		1008316	1					
ANR	1009786	Condition	mode [ len - 1 ] == '.'		1008316	0					
ANR	1009787	EqualityExpression	mode [ len - 1 ] == '.'		1008316	0		==			
ANR	1009788	ArrayIndexing	mode [ len - 1 ]		1008316	0					
ANR	1009789	Identifier	mode		1008316	0					
ANR	1009790	AdditiveExpression	len - 1		1008316	1		-			
ANR	1009791	Identifier	len		1008316	0					
ANR	1009792	PrimaryExpression	1		1008316	1					
ANR	1009793	PrimaryExpression	'.'		1008316	1					
ANR	1009794	CallExpression	r_str_rwx ( mode + len )		1008316	1					
ANR	1009795	Callee	r_str_rwx		1008316	0					
ANR	1009796	Identifier	r_str_rwx		1008316	0					
ANR	1009797	ArgumentList	mode + len		1008316	1					
ANR	1009798	Argument	mode + len		1008316	0					
ANR	1009799	AdditiveExpression	mode + len		1008316	0		+			
ANR	1009800	Identifier	mode		1008316	0					
ANR	1009801	Identifier	len		1008316	1					
ANR	1009802	PrimaryExpression	0		1008316	2					
ANR	1009803	IdentifierDeclStatement	"bool only = ( bool ) ( size_t ) strstr ( mode , "".only"" ) ;"	830:2:26621:26669	1008316	2	True				
ANR	1009804	IdentifierDecl	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	0					
ANR	1009805	IdentifierDeclType	bool		1008316	0					
ANR	1009806	Identifier	only		1008316	1					
ANR	1009807	AssignmentExpression	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	2		=			
ANR	1009808	Identifier	only		1008316	0					
ANR	1009809	CastExpression	"( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1009810	CastTarget	bool		1008316	0					
ANR	1009811	CastExpression	"( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1009812	CastTarget	size_t		1008316	0					
ANR	1009813	CallExpression	"strstr ( mode , "".only"" )"		1008316	1					
ANR	1009814	Callee	strstr		1008316	0					
ANR	1009815	Identifier	strstr		1008316	0					
ANR	1009816	ArgumentList	mode		1008316	1					
ANR	1009817	Argument	mode		1008316	0					
ANR	1009818	Identifier	mode		1008316	0					
ANR	1009819	Argument	""".only"""		1008316	1					
ANR	1009820	PrimaryExpression	""".only"""		1008316	0					
ANR	1009821	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	831:2:26673:26719	1008316	3	True				
ANR	1009822	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		1008316	0					
ANR	1009823	IdentifierDeclType	RBinObject *		1008316	0					
ANR	1009824	Identifier	obj		1008316	1					
ANR	1009825	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		1008316	2		=			
ANR	1009826	Identifier	obj		1008316	0					
ANR	1009827	CallExpression	r_bin_cur_object ( core -> bin )		1008316	1					
ANR	1009828	Callee	r_bin_cur_object		1008316	0					
ANR	1009829	Identifier	r_bin_cur_object		1008316	0					
ANR	1009830	ArgumentList	core -> bin		1008316	1					
ANR	1009831	Argument	core -> bin		1008316	0					
ANR	1009832	PtrMemberAccess	core -> bin		1008316	0					
ANR	1009833	Identifier	core		1008316	0					
ANR	1009834	Identifier	bin		1008316	1					
ANR	1009835	IfStatement	if ( obj )		1008316	4					
ANR	1009836	Condition	obj	832:6:26727:26729	1008316	0	True				
ANR	1009837	Identifier	obj		1008316	0					
ANR	1009838	CompoundStatement		192:3:5996:6011	1008316	1					
ANR	1009839	IdentifierDeclStatement	RBinSection * s ;	833:3:26737:26751	1008316	0	True				
ANR	1009840	IdentifierDecl	* s		1008316	0					
ANR	1009841	IdentifierDeclType	RBinSection *		1008316	0					
ANR	1009842	Identifier	s		1008316	1					
ANR	1009843	IdentifierDeclStatement	RListIter * iter ;	834:3:26756:26771	1008316	1	True				
ANR	1009844	IdentifierDecl	* iter		1008316	0					
ANR	1009845	IdentifierDeclType	RListIter *		1008316	0					
ANR	1009846	Identifier	iter		1008316	1					
ANR	1009847	Statement	r_list_foreach	835:3:26776:26789	1008316	2	True				
ANR	1009848	Statement	(	835:18:26791:26791	1008316	3	True				
ANR	1009849	Statement	obj	835:19:26792:26794	1008316	4	True				
ANR	1009850	Statement	->	835:22:26795:26796	1008316	5	True				
ANR	1009851	Statement	sections	835:24:26797:26804	1008316	6	True				
ANR	1009852	Statement	","	835:32:26805:26805	1008316	7	True				
ANR	1009853	Statement	iter	835:34:26807:26810	1008316	8	True				
ANR	1009854	Statement	","	835:38:26811:26811	1008316	9	True				
ANR	1009855	Statement	s	835:40:26813:26813	1008316	10	True				
ANR	1009856	Statement	)	835:41:26814:26814	1008316	11	True				
ANR	1009857	CompoundStatement		201:4:6224:6267	1008316	12					
ANR	1009858	IfStatement	if ( s -> is_segment )		1008316	0					
ANR	1009859	Condition	s -> is_segment	836:8:26826:26838	1008316	0	True				
ANR	1009860	PtrMemberAccess	s -> is_segment		1008316	0					
ANR	1009861	Identifier	s		1008316	0					
ANR	1009862	Identifier	is_segment		1008316	1					
ANR	1009863	CompoundStatement		194:23:6081:6081	1008316	1					
ANR	1009864	ContinueStatement	continue ;	837:5:26848:26856	1008316	0	True				
ANR	1009865	IfStatement	"if ( maskMatches ( s -> perm , mask , only ) )"		1008316	1					
ANR	1009866	Condition	"maskMatches ( s -> perm , mask , only )"	839:8:26872:26904	1008316	0	True				
ANR	1009867	CallExpression	"maskMatches ( s -> perm , mask , only )"		1008316	0					
ANR	1009868	Callee	maskMatches		1008316	0					
ANR	1009869	Identifier	maskMatches		1008316	0					
ANR	1009870	ArgumentList	s -> perm		1008316	1					
ANR	1009871	Argument	s -> perm		1008316	0					
ANR	1009872	PtrMemberAccess	s -> perm		1008316	0					
ANR	1009873	Identifier	s		1008316	0					
ANR	1009874	Identifier	perm		1008316	1					
ANR	1009875	Argument	mask		1008316	1					
ANR	1009876	Identifier	mask		1008316	0					
ANR	1009877	Argument	only		1008316	2					
ANR	1009878	Identifier	only		1008316	0					
ANR	1009879	CompoundStatement		197:43:6147:6147	1008316	1					
ANR	1009880	ContinueStatement	continue ;	840:5:26914:26922	1008316	0	True				
ANR	1009881	IdentifierDeclStatement	ut64 addr = core -> io -> va ? s -> vaddr : s -> paddr ;	842:4:26934:26978	1008316	2	True				
ANR	1009882	IdentifierDecl	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	0					
ANR	1009883	IdentifierDeclType	ut64		1008316	0					
ANR	1009884	Identifier	addr		1008316	1					
ANR	1009885	AssignmentExpression	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	2		=			
ANR	1009886	Identifier	addr		1008316	0					
ANR	1009887	ConditionalExpression	core -> io -> va ? s -> vaddr : s -> paddr		1008316	1					
ANR	1009888	Condition	core -> io -> va		1008316	0					
ANR	1009889	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1009890	PtrMemberAccess	core -> io		1008316	0					
ANR	1009891	Identifier	core		1008316	0					
ANR	1009892	Identifier	io		1008316	1					
ANR	1009893	Identifier	va		1008316	1					
ANR	1009894	PtrMemberAccess	s -> vaddr		1008316	1					
ANR	1009895	Identifier	s		1008316	0					
ANR	1009896	Identifier	vaddr		1008316	1					
ANR	1009897	PtrMemberAccess	s -> paddr		1008316	2					
ANR	1009898	Identifier	s		1008316	0					
ANR	1009899	Identifier	paddr		1008316	1					
ANR	1009900	IdentifierDeclStatement	ut64 size = core -> io -> va ? s -> vsize : s -> size ;	843:4:26984:27027	1008316	3	True				
ANR	1009901	IdentifierDecl	size = core -> io -> va ? s -> vsize : s -> size		1008316	0					
ANR	1009902	IdentifierDeclType	ut64		1008316	0					
ANR	1009903	Identifier	size		1008316	1					
ANR	1009904	AssignmentExpression	size = core -> io -> va ? s -> vsize : s -> size		1008316	2		=			
ANR	1009905	Identifier	size		1008316	0					
ANR	1009906	ConditionalExpression	core -> io -> va ? s -> vsize : s -> size		1008316	1					
ANR	1009907	Condition	core -> io -> va		1008316	0					
ANR	1009908	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1009909	PtrMemberAccess	core -> io		1008316	0					
ANR	1009910	Identifier	core		1008316	0					
ANR	1009911	Identifier	io		1008316	1					
ANR	1009912	Identifier	va		1008316	1					
ANR	1009913	PtrMemberAccess	s -> vsize		1008316	1					
ANR	1009914	Identifier	s		1008316	0					
ANR	1009915	Identifier	vsize		1008316	1					
ANR	1009916	PtrMemberAccess	s -> size		1008316	2					
ANR	1009917	Identifier	s		1008316	0					
ANR	1009918	Identifier	size		1008316	1					
ANR	1009919	ExpressionStatement	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"	844:4:27033:27095	1008316	4	True				
ANR	1009920	CallExpression	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"		1008316	0					
ANR	1009921	Callee	append_bound		1008316	0					
ANR	1009922	Identifier	append_bound		1008316	0					
ANR	1009923	ArgumentList	list		1008316	1					
ANR	1009924	Argument	list		1008316	0					
ANR	1009925	Identifier	list		1008316	0					
ANR	1009926	Argument	core -> io		1008316	1					
ANR	1009927	PtrMemberAccess	core -> io		1008316	0					
ANR	1009928	Identifier	core		1008316	0					
ANR	1009929	Identifier	io		1008316	1					
ANR	1009930	Argument	search_itv		1008316	2					
ANR	1009931	Identifier	search_itv		1008316	0					
ANR	1009932	Argument	addr		1008316	3					
ANR	1009933	Identifier	addr		1008316	0					
ANR	1009934	Argument	size		1008316	4					
ANR	1009935	Identifier	size		1008316	0					
ANR	1009936	Argument	s -> perm		1008316	5					
ANR	1009937	PtrMemberAccess	s -> perm		1008316	0					
ANR	1009938	Identifier	s		1008316	0					
ANR	1009939	Identifier	perm		1008316	1					
ANR	1009940	ElseStatement	else		1008316	0					
ANR	1009941	IfStatement	"if ( ! strcmp ( mode , ""bin.segment"" ) )"		1008316	0					
ANR	1009942	Condition	"! strcmp ( mode , ""bin.segment"" )"	847:12:27118:27146	1008316	0	True				
ANR	1009943	UnaryOperationExpression	"! strcmp ( mode , ""bin.segment"" )"		1008316	0					
ANR	1009944	UnaryOperator	!		1008316	0					
ANR	1009945	CallExpression	"strcmp ( mode , ""bin.segment"" )"		1008316	1					
ANR	1009946	Callee	strcmp		1008316	0					
ANR	1009947	Identifier	strcmp		1008316	0					
ANR	1009948	ArgumentList	mode		1008316	1					
ANR	1009949	Argument	mode		1008316	0					
ANR	1009950	Identifier	mode		1008316	0					
ANR	1009951	Argument	"""bin.segment"""		1008316	1					
ANR	1009952	PrimaryExpression	"""bin.segment"""		1008316	0					
ANR	1009953	CompoundStatement		206:2:6393:6439	1008316	1					
ANR	1009954	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	848:2:27153:27199	1008316	0	True				
ANR	1009955	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		1008316	0					
ANR	1009956	IdentifierDeclType	RBinObject *		1008316	0					
ANR	1009957	Identifier	obj		1008316	1					
ANR	1009958	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		1008316	2		=			
ANR	1009959	Identifier	obj		1008316	0					
ANR	1009960	CallExpression	r_bin_cur_object ( core -> bin )		1008316	1					
ANR	1009961	Callee	r_bin_cur_object		1008316	0					
ANR	1009962	Identifier	r_bin_cur_object		1008316	0					
ANR	1009963	ArgumentList	core -> bin		1008316	1					
ANR	1009964	Argument	core -> bin		1008316	0					
ANR	1009965	PtrMemberAccess	core -> bin		1008316	0					
ANR	1009966	Identifier	core		1008316	0					
ANR	1009967	Identifier	bin		1008316	1					
ANR	1009968	IfStatement	if ( obj )		1008316	1					
ANR	1009969	Condition	obj	849:6:27207:27209	1008316	0	True				
ANR	1009970	Identifier	obj		1008316	0					
ANR	1009971	CompoundStatement		209:3:6476:6491	1008316	1					
ANR	1009972	IdentifierDeclStatement	RBinSection * s ;	850:3:27217:27231	1008316	0	True				
ANR	1009973	IdentifierDecl	* s		1008316	0					
ANR	1009974	IdentifierDeclType	RBinSection *		1008316	0					
ANR	1009975	Identifier	s		1008316	1					
ANR	1009976	IdentifierDeclStatement	RListIter * iter ;	851:3:27236:27251	1008316	1	True				
ANR	1009977	IdentifierDecl	* iter		1008316	0					
ANR	1009978	IdentifierDeclType	RListIter *		1008316	0					
ANR	1009979	Identifier	iter		1008316	1					
ANR	1009980	Statement	r_list_foreach	852:3:27256:27269	1008316	2	True				
ANR	1009981	Statement	(	852:18:27271:27271	1008316	3	True				
ANR	1009982	Statement	obj	852:19:27272:27274	1008316	4	True				
ANR	1009983	Statement	->	852:22:27275:27276	1008316	5	True				
ANR	1009984	Statement	sections	852:24:27277:27284	1008316	6	True				
ANR	1009985	Statement	","	852:32:27285:27285	1008316	7	True				
ANR	1009986	Statement	iter	852:34:27287:27290	1008316	8	True				
ANR	1009987	Statement	","	852:38:27291:27291	1008316	9	True				
ANR	1009988	Statement	s	852:40:27293:27293	1008316	10	True				
ANR	1009989	Statement	)	852:41:27294:27294	1008316	11	True				
ANR	1009990	CompoundStatement		215:4:6639:6682	1008316	12					
ANR	1009991	IfStatement	if ( ! s -> is_segment )		1008316	0					
ANR	1009992	Condition	! s -> is_segment	853:8:27306:27319	1008316	0	True				
ANR	1009993	UnaryOperationExpression	! s -> is_segment		1008316	0					
ANR	1009994	UnaryOperator	!		1008316	0					
ANR	1009995	PtrMemberAccess	s -> is_segment		1008316	1					
ANR	1009996	Identifier	s		1008316	0					
ANR	1009997	Identifier	is_segment		1008316	1					
ANR	1009998	CompoundStatement		211:24:6562:6562	1008316	1					
ANR	1009999	ContinueStatement	continue ;	854:5:27329:27337	1008316	0	True				
ANR	1010000	IdentifierDeclStatement	ut64 addr = core -> io -> va ? s -> vaddr : s -> paddr ;	856:4:27349:27393	1008316	1	True				
ANR	1010001	IdentifierDecl	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	0					
ANR	1010002	IdentifierDeclType	ut64		1008316	0					
ANR	1010003	Identifier	addr		1008316	1					
ANR	1010004	AssignmentExpression	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	2		=			
ANR	1010005	Identifier	addr		1008316	0					
ANR	1010006	ConditionalExpression	core -> io -> va ? s -> vaddr : s -> paddr		1008316	1					
ANR	1010007	Condition	core -> io -> va		1008316	0					
ANR	1010008	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1010009	PtrMemberAccess	core -> io		1008316	0					
ANR	1010010	Identifier	core		1008316	0					
ANR	1010011	Identifier	io		1008316	1					
ANR	1010012	Identifier	va		1008316	1					
ANR	1010013	PtrMemberAccess	s -> vaddr		1008316	1					
ANR	1010014	Identifier	s		1008316	0					
ANR	1010015	Identifier	vaddr		1008316	1					
ANR	1010016	PtrMemberAccess	s -> paddr		1008316	2					
ANR	1010017	Identifier	s		1008316	0					
ANR	1010018	Identifier	paddr		1008316	1					
ANR	1010019	IdentifierDeclStatement	ut64 size = core -> io -> va ? s -> vsize : s -> size ;	857:4:27399:27442	1008316	2	True				
ANR	1010020	IdentifierDecl	size = core -> io -> va ? s -> vsize : s -> size		1008316	0					
ANR	1010021	IdentifierDeclType	ut64		1008316	0					
ANR	1010022	Identifier	size		1008316	1					
ANR	1010023	AssignmentExpression	size = core -> io -> va ? s -> vsize : s -> size		1008316	2		=			
ANR	1010024	Identifier	size		1008316	0					
ANR	1010025	ConditionalExpression	core -> io -> va ? s -> vsize : s -> size		1008316	1					
ANR	1010026	Condition	core -> io -> va		1008316	0					
ANR	1010027	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1010028	PtrMemberAccess	core -> io		1008316	0					
ANR	1010029	Identifier	core		1008316	0					
ANR	1010030	Identifier	io		1008316	1					
ANR	1010031	Identifier	va		1008316	1					
ANR	1010032	PtrMemberAccess	s -> vsize		1008316	1					
ANR	1010033	Identifier	s		1008316	0					
ANR	1010034	Identifier	vsize		1008316	1					
ANR	1010035	PtrMemberAccess	s -> size		1008316	2					
ANR	1010036	Identifier	s		1008316	0					
ANR	1010037	Identifier	size		1008316	1					
ANR	1010038	IfStatement	"if ( R_BETWEEN ( addr , core -> offset , addr + size ) )"		1008316	3					
ANR	1010039	Condition	"R_BETWEEN ( addr , core -> offset , addr + size )"	858:8:27452:27494	1008316	0	True				
ANR	1010040	CallExpression	"R_BETWEEN ( addr , core -> offset , addr + size )"		1008316	0					
ANR	1010041	Callee	R_BETWEEN		1008316	0					
ANR	1010042	Identifier	R_BETWEEN		1008316	0					
ANR	1010043	ArgumentList	addr		1008316	1					
ANR	1010044	Argument	addr		1008316	0					
ANR	1010045	Identifier	addr		1008316	0					
ANR	1010046	Argument	core -> offset		1008316	1					
ANR	1010047	PtrMemberAccess	core -> offset		1008316	0					
ANR	1010048	Identifier	core		1008316	0					
ANR	1010049	Identifier	offset		1008316	1					
ANR	1010050	Argument	addr + size		1008316	2					
ANR	1010051	AdditiveExpression	addr + size		1008316	0		+			
ANR	1010052	Identifier	addr		1008316	0					
ANR	1010053	Identifier	size		1008316	1					
ANR	1010054	CompoundStatement		216:53:6737:6737	1008316	1					
ANR	1010055	ExpressionStatement	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"	859:5:27504:27566	1008316	0	True				
ANR	1010056	CallExpression	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"		1008316	0					
ANR	1010057	Callee	append_bound		1008316	0					
ANR	1010058	Identifier	append_bound		1008316	0					
ANR	1010059	ArgumentList	list		1008316	1					
ANR	1010060	Argument	list		1008316	0					
ANR	1010061	Identifier	list		1008316	0					
ANR	1010062	Argument	core -> io		1008316	1					
ANR	1010063	PtrMemberAccess	core -> io		1008316	0					
ANR	1010064	Identifier	core		1008316	0					
ANR	1010065	Identifier	io		1008316	1					
ANR	1010066	Argument	search_itv		1008316	2					
ANR	1010067	Identifier	search_itv		1008316	0					
ANR	1010068	Argument	addr		1008316	3					
ANR	1010069	Identifier	addr		1008316	0					
ANR	1010070	Argument	size		1008316	4					
ANR	1010071	Identifier	size		1008316	0					
ANR	1010072	Argument	s -> perm		1008316	5					
ANR	1010073	PtrMemberAccess	s -> perm		1008316	0					
ANR	1010074	Identifier	s		1008316	0					
ANR	1010075	Identifier	perm		1008316	1					
ANR	1010076	ElseStatement	else		1008316	0					
ANR	1010077	IfStatement	"if ( ! strcmp ( mode , ""bin.section"" ) )"		1008316	0					
ANR	1010078	Condition	"! strcmp ( mode , ""bin.section"" )"	863:12:27595:27623	1008316	0	True				
ANR	1010079	UnaryOperationExpression	"! strcmp ( mode , ""bin.section"" )"		1008316	0					
ANR	1010080	UnaryOperator	!		1008316	0					
ANR	1010081	CallExpression	"strcmp ( mode , ""bin.section"" )"		1008316	1					
ANR	1010082	Callee	strcmp		1008316	0					
ANR	1010083	Identifier	strcmp		1008316	0					
ANR	1010084	ArgumentList	mode		1008316	1					
ANR	1010085	Argument	mode		1008316	0					
ANR	1010086	Identifier	mode		1008316	0					
ANR	1010087	Argument	"""bin.section"""		1008316	1					
ANR	1010088	PrimaryExpression	"""bin.section"""		1008316	0					
ANR	1010089	CompoundStatement		222:2:6870:6916	1008316	1					
ANR	1010090	IdentifierDeclStatement	RBinObject * obj = r_bin_cur_object ( core -> bin ) ;	864:2:27630:27676	1008316	0	True				
ANR	1010091	IdentifierDecl	* obj = r_bin_cur_object ( core -> bin )		1008316	0					
ANR	1010092	IdentifierDeclType	RBinObject *		1008316	0					
ANR	1010093	Identifier	obj		1008316	1					
ANR	1010094	AssignmentExpression	* obj = r_bin_cur_object ( core -> bin )		1008316	2		=			
ANR	1010095	Identifier	obj		1008316	0					
ANR	1010096	CallExpression	r_bin_cur_object ( core -> bin )		1008316	1					
ANR	1010097	Callee	r_bin_cur_object		1008316	0					
ANR	1010098	Identifier	r_bin_cur_object		1008316	0					
ANR	1010099	ArgumentList	core -> bin		1008316	1					
ANR	1010100	Argument	core -> bin		1008316	0					
ANR	1010101	PtrMemberAccess	core -> bin		1008316	0					
ANR	1010102	Identifier	core		1008316	0					
ANR	1010103	Identifier	bin		1008316	1					
ANR	1010104	IfStatement	if ( obj )		1008316	1					
ANR	1010105	Condition	obj	865:6:27684:27686	1008316	0	True				
ANR	1010106	Identifier	obj		1008316	0					
ANR	1010107	CompoundStatement		225:3:6953:6968	1008316	1					
ANR	1010108	IdentifierDeclStatement	RBinSection * s ;	866:3:27694:27708	1008316	0	True				
ANR	1010109	IdentifierDecl	* s		1008316	0					
ANR	1010110	IdentifierDeclType	RBinSection *		1008316	0					
ANR	1010111	Identifier	s		1008316	1					
ANR	1010112	IdentifierDeclStatement	RListIter * iter ;	867:3:27713:27728	1008316	1	True				
ANR	1010113	IdentifierDecl	* iter		1008316	0					
ANR	1010114	IdentifierDeclType	RListIter *		1008316	0					
ANR	1010115	Identifier	iter		1008316	1					
ANR	1010116	Statement	r_list_foreach	868:3:27733:27746	1008316	2	True				
ANR	1010117	Statement	(	868:18:27748:27748	1008316	3	True				
ANR	1010118	Statement	obj	868:19:27749:27751	1008316	4	True				
ANR	1010119	Statement	->	868:22:27752:27753	1008316	5	True				
ANR	1010120	Statement	sections	868:24:27754:27761	1008316	6	True				
ANR	1010121	Statement	","	868:32:27762:27762	1008316	7	True				
ANR	1010122	Statement	iter	868:34:27764:27767	1008316	8	True				
ANR	1010123	Statement	","	868:38:27768:27768	1008316	9	True				
ANR	1010124	Statement	s	868:40:27770:27770	1008316	10	True				
ANR	1010125	Statement	)	868:41:27771:27771	1008316	11	True				
ANR	1010126	CompoundStatement		231:4:7115:7158	1008316	12					
ANR	1010127	IfStatement	if ( s -> is_segment )		1008316	0					
ANR	1010128	Condition	s -> is_segment	869:8:27783:27795	1008316	0	True				
ANR	1010129	PtrMemberAccess	s -> is_segment		1008316	0					
ANR	1010130	Identifier	s		1008316	0					
ANR	1010131	Identifier	is_segment		1008316	1					
ANR	1010132	CompoundStatement		227:23:7038:7038	1008316	1					
ANR	1010133	ContinueStatement	continue ;	870:5:27805:27813	1008316	0	True				
ANR	1010134	IdentifierDeclStatement	ut64 addr = core -> io -> va ? s -> vaddr : s -> paddr ;	872:4:27825:27869	1008316	1	True				
ANR	1010135	IdentifierDecl	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	0					
ANR	1010136	IdentifierDeclType	ut64		1008316	0					
ANR	1010137	Identifier	addr		1008316	1					
ANR	1010138	AssignmentExpression	addr = core -> io -> va ? s -> vaddr : s -> paddr		1008316	2		=			
ANR	1010139	Identifier	addr		1008316	0					
ANR	1010140	ConditionalExpression	core -> io -> va ? s -> vaddr : s -> paddr		1008316	1					
ANR	1010141	Condition	core -> io -> va		1008316	0					
ANR	1010142	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1010143	PtrMemberAccess	core -> io		1008316	0					
ANR	1010144	Identifier	core		1008316	0					
ANR	1010145	Identifier	io		1008316	1					
ANR	1010146	Identifier	va		1008316	1					
ANR	1010147	PtrMemberAccess	s -> vaddr		1008316	1					
ANR	1010148	Identifier	s		1008316	0					
ANR	1010149	Identifier	vaddr		1008316	1					
ANR	1010150	PtrMemberAccess	s -> paddr		1008316	2					
ANR	1010151	Identifier	s		1008316	0					
ANR	1010152	Identifier	paddr		1008316	1					
ANR	1010153	IdentifierDeclStatement	ut64 size = core -> io -> va ? s -> vsize : s -> size ;	873:4:27875:27918	1008316	2	True				
ANR	1010154	IdentifierDecl	size = core -> io -> va ? s -> vsize : s -> size		1008316	0					
ANR	1010155	IdentifierDeclType	ut64		1008316	0					
ANR	1010156	Identifier	size		1008316	1					
ANR	1010157	AssignmentExpression	size = core -> io -> va ? s -> vsize : s -> size		1008316	2		=			
ANR	1010158	Identifier	size		1008316	0					
ANR	1010159	ConditionalExpression	core -> io -> va ? s -> vsize : s -> size		1008316	1					
ANR	1010160	Condition	core -> io -> va		1008316	0					
ANR	1010161	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1010162	PtrMemberAccess	core -> io		1008316	0					
ANR	1010163	Identifier	core		1008316	0					
ANR	1010164	Identifier	io		1008316	1					
ANR	1010165	Identifier	va		1008316	1					
ANR	1010166	PtrMemberAccess	s -> vsize		1008316	1					
ANR	1010167	Identifier	s		1008316	0					
ANR	1010168	Identifier	vsize		1008316	1					
ANR	1010169	PtrMemberAccess	s -> size		1008316	2					
ANR	1010170	Identifier	s		1008316	0					
ANR	1010171	Identifier	size		1008316	1					
ANR	1010172	IfStatement	"if ( R_BETWEEN ( addr , core -> offset , addr + size ) )"		1008316	3					
ANR	1010173	Condition	"R_BETWEEN ( addr , core -> offset , addr + size )"	874:8:27928:27970	1008316	0	True				
ANR	1010174	CallExpression	"R_BETWEEN ( addr , core -> offset , addr + size )"		1008316	0					
ANR	1010175	Callee	R_BETWEEN		1008316	0					
ANR	1010176	Identifier	R_BETWEEN		1008316	0					
ANR	1010177	ArgumentList	addr		1008316	1					
ANR	1010178	Argument	addr		1008316	0					
ANR	1010179	Identifier	addr		1008316	0					
ANR	1010180	Argument	core -> offset		1008316	1					
ANR	1010181	PtrMemberAccess	core -> offset		1008316	0					
ANR	1010182	Identifier	core		1008316	0					
ANR	1010183	Identifier	offset		1008316	1					
ANR	1010184	Argument	addr + size		1008316	2					
ANR	1010185	AdditiveExpression	addr + size		1008316	0		+			
ANR	1010186	Identifier	addr		1008316	0					
ANR	1010187	Identifier	size		1008316	1					
ANR	1010188	CompoundStatement		232:53:7213:7213	1008316	1					
ANR	1010189	ExpressionStatement	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"	875:5:27980:28042	1008316	0	True				
ANR	1010190	CallExpression	"append_bound ( list , core -> io , search_itv , addr , size , s -> perm )"		1008316	0					
ANR	1010191	Callee	append_bound		1008316	0					
ANR	1010192	Identifier	append_bound		1008316	0					
ANR	1010193	ArgumentList	list		1008316	1					
ANR	1010194	Argument	list		1008316	0					
ANR	1010195	Identifier	list		1008316	0					
ANR	1010196	Argument	core -> io		1008316	1					
ANR	1010197	PtrMemberAccess	core -> io		1008316	0					
ANR	1010198	Identifier	core		1008316	0					
ANR	1010199	Identifier	io		1008316	1					
ANR	1010200	Argument	search_itv		1008316	2					
ANR	1010201	Identifier	search_itv		1008316	0					
ANR	1010202	Argument	addr		1008316	3					
ANR	1010203	Identifier	addr		1008316	0					
ANR	1010204	Argument	size		1008316	4					
ANR	1010205	Identifier	size		1008316	0					
ANR	1010206	Argument	s -> perm		1008316	5					
ANR	1010207	PtrMemberAccess	s -> perm		1008316	0					
ANR	1010208	Identifier	s		1008316	0					
ANR	1010209	Identifier	perm		1008316	1					
ANR	1010210	ElseStatement	else		1008316	0					
ANR	1010211	IfStatement	"if ( ! strcmp ( mode , ""anal.fcn"" ) || ! strcmp ( mode , ""anal.bb"" ) )"		1008316	0					
ANR	1010212	Condition	"! strcmp ( mode , ""anal.fcn"" ) || ! strcmp ( mode , ""anal.bb"" )"	879:12:28071:28125	1008316	0	True				
ANR	1010213	OrExpression	"! strcmp ( mode , ""anal.fcn"" ) || ! strcmp ( mode , ""anal.bb"" )"		1008316	0		||			
ANR	1010214	UnaryOperationExpression	"! strcmp ( mode , ""anal.fcn"" )"		1008316	0					
ANR	1010215	UnaryOperator	!		1008316	0					
ANR	1010216	CallExpression	"strcmp ( mode , ""anal.fcn"" )"		1008316	1					
ANR	1010217	Callee	strcmp		1008316	0					
ANR	1010218	Identifier	strcmp		1008316	0					
ANR	1010219	ArgumentList	mode		1008316	1					
ANR	1010220	Argument	mode		1008316	0					
ANR	1010221	Identifier	mode		1008316	0					
ANR	1010222	Argument	"""anal.fcn"""		1008316	1					
ANR	1010223	PrimaryExpression	"""anal.fcn"""		1008316	0					
ANR	1010224	UnaryOperationExpression	"! strcmp ( mode , ""anal.bb"" )"		1008316	1					
ANR	1010225	UnaryOperator	!		1008316	0					
ANR	1010226	CallExpression	"strcmp ( mode , ""anal.bb"" )"		1008316	1					
ANR	1010227	Callee	strcmp		1008316	0					
ANR	1010228	Identifier	strcmp		1008316	0					
ANR	1010229	ArgumentList	mode		1008316	1					
ANR	1010230	Argument	mode		1008316	0					
ANR	1010231	Identifier	mode		1008316	0					
ANR	1010232	Argument	"""anal.bb"""		1008316	1					
ANR	1010233	PrimaryExpression	"""anal.bb"""		1008316	0					
ANR	1010234	CompoundStatement		238:2:7372:7481	1008316	1					
ANR	1010235	IdentifierDeclStatement	"RAnalFunction * f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM ) ;"	880:2:28132:28241	1008316	0	True				
ANR	1010236	IdentifierDecl	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		1008316	0					
ANR	1010237	IdentifierDeclType	RAnalFunction *		1008316	0					
ANR	1010238	Identifier	f		1008316	1					
ANR	1010239	AssignmentExpression	"* f = r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		1008316	2		=			
ANR	1010240	Identifier	f		1008316	0					
ANR	1010241	CallExpression	"r_anal_get_fcn_in ( core -> anal , core -> offset , R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM )"		1008316	1					
ANR	1010242	Callee	r_anal_get_fcn_in		1008316	0					
ANR	1010243	Identifier	r_anal_get_fcn_in		1008316	0					
ANR	1010244	ArgumentList	core -> anal		1008316	1					
ANR	1010245	Argument	core -> anal		1008316	0					
ANR	1010246	PtrMemberAccess	core -> anal		1008316	0					
ANR	1010247	Identifier	core		1008316	0					
ANR	1010248	Identifier	anal		1008316	1					
ANR	1010249	Argument	core -> offset		1008316	1					
ANR	1010250	PtrMemberAccess	core -> offset		1008316	0					
ANR	1010251	Identifier	core		1008316	0					
ANR	1010252	Identifier	offset		1008316	1					
ANR	1010253	Argument	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		1008316	2					
ANR	1010254	InclusiveOrExpression	R_ANAL_FCN_TYPE_FCN | R_ANAL_FCN_TYPE_SYM		1008316	0		|			
ANR	1010255	Identifier	R_ANAL_FCN_TYPE_FCN		1008316	0					
ANR	1010256	Identifier	R_ANAL_FCN_TYPE_SYM		1008316	1					
ANR	1010257	IfStatement	if ( f )		1008316	1					
ANR	1010258	Condition	f	882:6:28249:28249	1008316	0	True				
ANR	1010259	Identifier	f		1008316	0					
ANR	1010260	CompoundStatement		241:3:7497:7544	1008316	1					
ANR	1010261	IdentifierDeclStatement	"ut64 from = f -> addr , size = r_anal_fcn_size ( f ) ;"	883:3:28257:28304	1008316	0	True				
ANR	1010262	IdentifierDecl	from = f -> addr		1008316	0					
ANR	1010263	IdentifierDeclType	ut64		1008316	0					
ANR	1010264	Identifier	from		1008316	1					
ANR	1010265	AssignmentExpression	from = f -> addr		1008316	2		=			
ANR	1010266	Identifier	from		1008316	0					
ANR	1010267	PtrMemberAccess	f -> addr		1008316	1					
ANR	1010268	Identifier	f		1008316	0					
ANR	1010269	Identifier	addr		1008316	1					
ANR	1010270	IdentifierDecl	size = r_anal_fcn_size ( f )		1008316	1					
ANR	1010271	IdentifierDeclType	ut64		1008316	0					
ANR	1010272	Identifier	size		1008316	1					
ANR	1010273	AssignmentExpression	size = r_anal_fcn_size ( f )		1008316	2		=			
ANR	1010274	Identifier	size		1008316	0					
ANR	1010275	CallExpression	r_anal_fcn_size ( f )		1008316	1					
ANR	1010276	Callee	r_anal_fcn_size		1008316	0					
ANR	1010277	Identifier	r_anal_fcn_size		1008316	0					
ANR	1010278	ArgumentList	f		1008316	1					
ANR	1010279	Argument	f		1008316	0					
ANR	1010280	Identifier	f		1008316	0					
ANR	1010281	IfStatement	"if ( ! strcmp ( mode , ""anal.bb"" ) )"		1008316	1					
ANR	1010282	Condition	"! strcmp ( mode , ""anal.bb"" )"	886:7:28358:28382	1008316	0	True				
ANR	1010283	UnaryOperationExpression	"! strcmp ( mode , ""anal.bb"" )"		1008316	0					
ANR	1010284	UnaryOperator	!		1008316	0					
ANR	1010285	CallExpression	"strcmp ( mode , ""anal.bb"" )"		1008316	1					
ANR	1010286	Callee	strcmp		1008316	0					
ANR	1010287	Identifier	strcmp		1008316	0					
ANR	1010288	ArgumentList	mode		1008316	1					
ANR	1010289	Argument	mode		1008316	0					
ANR	1010290	Identifier	mode		1008316	0					
ANR	1010291	Argument	"""anal.bb"""		1008316	1					
ANR	1010292	PrimaryExpression	"""anal.bb"""		1008316	0					
ANR	1010293	CompoundStatement		246:4:7652:7666	1008316	1					
ANR	1010294	IdentifierDeclStatement	RListIter * iter ;	887:4:28391:28406	1008316	0	True				
ANR	1010295	IdentifierDecl	* iter		1008316	0					
ANR	1010296	IdentifierDeclType	RListIter *		1008316	0					
ANR	1010297	Identifier	iter		1008316	1					
ANR	1010298	IdentifierDeclStatement	RAnalBlock * bb ;	888:4:28412:28426	1008316	1	True				
ANR	1010299	IdentifierDecl	* bb		1008316	0					
ANR	1010300	IdentifierDeclType	RAnalBlock *		1008316	0					
ANR	1010301	Identifier	bb		1008316	1					
ANR	1010302	Statement	r_list_foreach	890:4:28433:28446	1008316	2	True				
ANR	1010303	Statement	(	890:19:28448:28448	1008316	3	True				
ANR	1010304	Statement	f	890:20:28449:28449	1008316	4	True				
ANR	1010305	Statement	->	890:21:28450:28451	1008316	5	True				
ANR	1010306	Statement	bbs	890:23:28452:28454	1008316	6	True				
ANR	1010307	Statement	","	890:26:28455:28455	1008316	7	True				
ANR	1010308	Statement	iter	890:28:28457:28460	1008316	8	True				
ANR	1010309	Statement	","	890:32:28461:28461	1008316	9	True				
ANR	1010310	Statement	bb	890:34:28463:28464	1008316	10	True				
ANR	1010311	Statement	)	890:36:28465:28465	1008316	11	True				
ANR	1010312	CompoundStatement		249:5:7714:7736	1008316	12					
ANR	1010313	IdentifierDeclStatement	ut64 at = core -> offset ;	891:5:28474:28496	1008316	0	True				
ANR	1010314	IdentifierDecl	at = core -> offset		1008316	0					
ANR	1010315	IdentifierDeclType	ut64		1008316	0					
ANR	1010316	Identifier	at		1008316	1					
ANR	1010317	AssignmentExpression	at = core -> offset		1008316	2		=			
ANR	1010318	Identifier	at		1008316	0					
ANR	1010319	PtrMemberAccess	core -> offset		1008316	1					
ANR	1010320	Identifier	core		1008316	0					
ANR	1010321	Identifier	offset		1008316	1					
ANR	1010322	IfStatement	if ( ( at >= bb -> addr ) && ( at < ( bb -> addr + bb -> size ) ) )		1008316	1					
ANR	1010323	Condition	( at >= bb -> addr ) && ( at < ( bb -> addr + bb -> size ) )	892:9:28507:28554	1008316	0	True				
ANR	1010324	AndExpression	( at >= bb -> addr ) && ( at < ( bb -> addr + bb -> size ) )		1008316	0		&&			
ANR	1010325	RelationalExpression	at >= bb -> addr		1008316	0		>=			
ANR	1010326	Identifier	at		1008316	0					
ANR	1010327	PtrMemberAccess	bb -> addr		1008316	1					
ANR	1010328	Identifier	bb		1008316	0					
ANR	1010329	Identifier	addr		1008316	1					
ANR	1010330	RelationalExpression	at < ( bb -> addr + bb -> size )		1008316	1		<			
ANR	1010331	Identifier	at		1008316	0					
ANR	1010332	AdditiveExpression	bb -> addr + bb -> size		1008316	1		+			
ANR	1010333	PtrMemberAccess	bb -> addr		1008316	0					
ANR	1010334	Identifier	bb		1008316	0					
ANR	1010335	Identifier	addr		1008316	1					
ANR	1010336	PtrMemberAccess	bb -> size		1008316	1					
ANR	1010337	Identifier	bb		1008316	0					
ANR	1010338	Identifier	size		1008316	1					
ANR	1010339	CompoundStatement		250:59:7797:7797	1008316	1					
ANR	1010340	ExpressionStatement	from = bb -> addr	893:6:28565:28580	1008316	0	True				
ANR	1010341	AssignmentExpression	from = bb -> addr		1008316	0		=			
ANR	1010342	Identifier	from		1008316	0					
ANR	1010343	PtrMemberAccess	bb -> addr		1008316	1					
ANR	1010344	Identifier	bb		1008316	0					
ANR	1010345	Identifier	addr		1008316	1					
ANR	1010346	ExpressionStatement	size = bb -> size	894:6:28588:28603	1008316	1	True				
ANR	1010347	AssignmentExpression	size = bb -> size		1008316	0		=			
ANR	1010348	Identifier	size		1008316	0					
ANR	1010349	PtrMemberAccess	bb -> size		1008316	1					
ANR	1010350	Identifier	bb		1008316	0					
ANR	1010351	Identifier	size		1008316	1					
ANR	1010352	BreakStatement	break ;	895:6:28611:28616	1008316	2	True				
ANR	1010353	ExpressionStatement	"append_bound ( list , core -> io , search_itv , from , size , 5 )"	899:3:28639:28695	1008316	2	True				
ANR	1010354	CallExpression	"append_bound ( list , core -> io , search_itv , from , size , 5 )"		1008316	0					
ANR	1010355	Callee	append_bound		1008316	0					
ANR	1010356	Identifier	append_bound		1008316	0					
ANR	1010357	ArgumentList	list		1008316	1					
ANR	1010358	Argument	list		1008316	0					
ANR	1010359	Identifier	list		1008316	0					
ANR	1010360	Argument	core -> io		1008316	1					
ANR	1010361	PtrMemberAccess	core -> io		1008316	0					
ANR	1010362	Identifier	core		1008316	0					
ANR	1010363	Identifier	io		1008316	1					
ANR	1010364	Argument	search_itv		1008316	2					
ANR	1010365	Identifier	search_itv		1008316	0					
ANR	1010366	Argument	from		1008316	3					
ANR	1010367	Identifier	from		1008316	0					
ANR	1010368	Argument	size		1008316	4					
ANR	1010369	Identifier	size		1008316	0					
ANR	1010370	Argument	5		1008316	5					
ANR	1010371	PrimaryExpression	5		1008316	0					
ANR	1010372	ElseStatement	else		1008316	0					
ANR	1010373	CompoundStatement		258:9:7946:7946	1008316	0					
ANR	1010374	Statement	eprintf	901:3:28711:28717	1008316	0	True				
ANR	1010375	Statement	(	901:11:28719:28719	1008316	1	True				
ANR	1010376	Statement	"""WARNING: search.in = ( anal.bb | anal.fcn )"""	901:12:28720:28764	1008316	2	True				
ANR	1010377	Statement	"""requires to seek into a valid function\\n"""	902:4:28771:28812	1008316	3	True				
ANR	1010378	Statement	)	902:46:28813:28813	1008316	4	True				
ANR	1010379	ExpressionStatement		902:47:28814:28814	1008316	5	True				
ANR	1010380	ExpressionStatement	"append_bound ( list , core -> io , search_itv , core -> offset , 1 , 5 )"	903:3:28819:28880	1008316	6	True				
ANR	1010381	CallExpression	"append_bound ( list , core -> io , search_itv , core -> offset , 1 , 5 )"		1008316	0					
ANR	1010382	Callee	append_bound		1008316	0					
ANR	1010383	Identifier	append_bound		1008316	0					
ANR	1010384	ArgumentList	list		1008316	1					
ANR	1010385	Argument	list		1008316	0					
ANR	1010386	Identifier	list		1008316	0					
ANR	1010387	Argument	core -> io		1008316	1					
ANR	1010388	PtrMemberAccess	core -> io		1008316	0					
ANR	1010389	Identifier	core		1008316	0					
ANR	1010390	Identifier	io		1008316	1					
ANR	1010391	Argument	search_itv		1008316	2					
ANR	1010392	Identifier	search_itv		1008316	0					
ANR	1010393	Argument	core -> offset		1008316	3					
ANR	1010394	PtrMemberAccess	core -> offset		1008316	0					
ANR	1010395	Identifier	core		1008316	0					
ANR	1010396	Identifier	offset		1008316	1					
ANR	1010397	Argument	1		1008316	4					
ANR	1010398	PrimaryExpression	1		1008316	0					
ANR	1010399	Argument	5		1008316	5					
ANR	1010400	PrimaryExpression	5		1008316	0					
ANR	1010401	ElseStatement	else		1008316	0					
ANR	1010402	IfStatement	"if ( ! strncmp ( mode , ""dbg."" , 4 ) )"		1008316	0					
ANR	1010403	Condition	"! strncmp ( mode , ""dbg."" , 4 )"	905:12:28898:28923	1008316	0	True				
ANR	1010404	UnaryOperationExpression	"! strncmp ( mode , ""dbg."" , 4 )"		1008316	0					
ANR	1010405	UnaryOperator	!		1008316	0					
ANR	1010406	CallExpression	"strncmp ( mode , ""dbg."" , 4 )"		1008316	1					
ANR	1010407	Callee	strncmp		1008316	0					
ANR	1010408	Identifier	strncmp		1008316	0					
ANR	1010409	ArgumentList	mode		1008316	1					
ANR	1010410	Argument	mode		1008316	0					
ANR	1010411	Identifier	mode		1008316	0					
ANR	1010412	Argument	"""dbg."""		1008316	1					
ANR	1010413	PrimaryExpression	"""dbg."""		1008316	0					
ANR	1010414	Argument	4		1008316	2					
ANR	1010415	PrimaryExpression	4		1008316	0					
ANR	1010416	CompoundStatement		263:40:8166:8166	1008316	1					
ANR	1010417	IfStatement	if ( core -> io -> debug )		1008316	0					
ANR	1010418	Condition	core -> io -> debug	906:6:28934:28948	1008316	0	True				
ANR	1010419	PtrMemberAccess	core -> io -> debug		1008316	0					
ANR	1010420	PtrMemberAccess	core -> io		1008316	0					
ANR	1010421	Identifier	core		1008316	0					
ANR	1010422	Identifier	io		1008316	1					
ANR	1010423	Identifier	debug		1008316	1					
ANR	1010424	CompoundStatement		272:3:8338:8352	1008316	1					
ANR	1010425	IdentifierDeclStatement	int mask = 0 ;	907:3:28956:28968	1008316	0	True				
ANR	1010426	IdentifierDecl	mask = 0		1008316	0					
ANR	1010427	IdentifierDeclType	int		1008316	0					
ANR	1010428	Identifier	mask		1008316	1					
ANR	1010429	AssignmentExpression	mask = 0		1008316	2		=			
ANR	1010430	Identifier	mask		1008316	0					
ANR	1010431	PrimaryExpression	0		1008316	1					
ANR	1010432	IdentifierDeclStatement	int add = 0 ;	908:3:28973:28984	1008316	1	True				
ANR	1010433	IdentifierDecl	add = 0		1008316	0					
ANR	1010434	IdentifierDeclType	int		1008316	0					
ANR	1010435	Identifier	add		1008316	1					
ANR	1010436	AssignmentExpression	add = 0		1008316	2		=			
ANR	1010437	Identifier	add		1008316	0					
ANR	1010438	PrimaryExpression	0		1008316	1					
ANR	1010439	IdentifierDeclStatement	bool heap = false ;	909:3:28989:29006	1008316	2	True				
ANR	1010440	IdentifierDecl	heap = false		1008316	0					
ANR	1010441	IdentifierDeclType	bool		1008316	0					
ANR	1010442	Identifier	heap		1008316	1					
ANR	1010443	AssignmentExpression	heap = false		1008316	2		=			
ANR	1010444	Identifier	false		1008316	0					
ANR	1010445	Identifier	false		1008316	1					
ANR	1010446	IdentifierDeclStatement	bool stack = false ;	910:3:29011:29029	1008316	3	True				
ANR	1010447	IdentifierDecl	stack = false		1008316	0					
ANR	1010448	IdentifierDeclType	bool		1008316	0					
ANR	1010449	Identifier	stack		1008316	1					
ANR	1010450	AssignmentExpression	stack = false		1008316	2		=			
ANR	1010451	Identifier	false		1008316	0					
ANR	1010452	Identifier	false		1008316	1					
ANR	1010453	IdentifierDeclStatement	bool all = false ;	911:3:29034:29050	1008316	4	True				
ANR	1010454	IdentifierDecl	all = false		1008316	0					
ANR	1010455	IdentifierDeclType	bool		1008316	0					
ANR	1010456	Identifier	all		1008316	1					
ANR	1010457	AssignmentExpression	all = false		1008316	2		=			
ANR	1010458	Identifier	false		1008316	0					
ANR	1010459	Identifier	false		1008316	1					
ANR	1010460	IdentifierDeclStatement	bool first = false ;	912:3:29055:29073	1008316	5	True				
ANR	1010461	IdentifierDecl	first = false		1008316	0					
ANR	1010462	IdentifierDeclType	bool		1008316	0					
ANR	1010463	Identifier	first		1008316	1					
ANR	1010464	AssignmentExpression	first = false		1008316	2		=			
ANR	1010465	Identifier	false		1008316	0					
ANR	1010466	Identifier	false		1008316	1					
ANR	1010467	IdentifierDeclStatement	RListIter * iter ;	913:3:29078:29093	1008316	6	True				
ANR	1010468	IdentifierDecl	* iter		1008316	0					
ANR	1010469	IdentifierDeclType	RListIter *		1008316	0					
ANR	1010470	Identifier	iter		1008316	1					
ANR	1010471	IdentifierDeclStatement	RDebugMap * map ;	914:3:29098:29112	1008316	7	True				
ANR	1010472	IdentifierDecl	* map		1008316	0					
ANR	1010473	IdentifierDeclType	RDebugMap *		1008316	0					
ANR	1010474	Identifier	map		1008316	1					
ANR	1010475	ExpressionStatement	r_debug_map_sync ( core -> dbg )	916:3:29118:29146	1008316	8	True				
ANR	1010476	CallExpression	r_debug_map_sync ( core -> dbg )		1008316	0					
ANR	1010477	Callee	r_debug_map_sync		1008316	0					
ANR	1010478	Identifier	r_debug_map_sync		1008316	0					
ANR	1010479	ArgumentList	core -> dbg		1008316	1					
ANR	1010480	Argument	core -> dbg		1008316	0					
ANR	1010481	PtrMemberAccess	core -> dbg		1008316	0					
ANR	1010482	Identifier	core		1008316	0					
ANR	1010483	Identifier	dbg		1008316	1					
ANR	1010484	IfStatement	"if ( ! strcmp ( mode , ""dbg.map"" ) )"		1008316	9					
ANR	1010485	Condition	"! strcmp ( mode , ""dbg.map"" )"	918:7:29156:29180	1008316	0	True				
ANR	1010486	UnaryOperationExpression	"! strcmp ( mode , ""dbg.map"" )"		1008316	0					
ANR	1010487	UnaryOperator	!		1008316	0					
ANR	1010488	CallExpression	"strcmp ( mode , ""dbg.map"" )"		1008316	1					
ANR	1010489	Callee	strcmp		1008316	0					
ANR	1010490	Identifier	strcmp		1008316	0					
ANR	1010491	ArgumentList	mode		1008316	1					
ANR	1010492	Argument	mode		1008316	0					
ANR	1010493	Identifier	mode		1008316	0					
ANR	1010494	Argument	"""dbg.map"""		1008316	1					
ANR	1010495	PrimaryExpression	"""dbg.map"""		1008316	0					
ANR	1010496	CompoundStatement		279:4:8477:8499	1008316	1					
ANR	1010497	IdentifierDeclStatement	int perm = 0 ;	919:4:29189:29201	1008316	0	True				
ANR	1010498	IdentifierDecl	perm = 0		1008316	0					
ANR	1010499	IdentifierDeclType	int		1008316	0					
ANR	1010500	Identifier	perm		1008316	1					
ANR	1010501	AssignmentExpression	perm = 0		1008316	2		=			
ANR	1010502	Identifier	perm		1008316	0					
ANR	1010503	PrimaryExpression	0		1008316	1					
ANR	1010504	IdentifierDeclStatement	ut64 from = core -> offset ;	920:4:29207:29231	1008316	1	True				
ANR	1010505	IdentifierDecl	from = core -> offset		1008316	0					
ANR	1010506	IdentifierDeclType	ut64		1008316	0					
ANR	1010507	Identifier	from		1008316	1					
ANR	1010508	AssignmentExpression	from = core -> offset		1008316	2		=			
ANR	1010509	Identifier	from		1008316	0					
ANR	1010510	PtrMemberAccess	core -> offset		1008316	1					
ANR	1010511	Identifier	core		1008316	0					
ANR	1010512	Identifier	offset		1008316	1					
ANR	1010513	IdentifierDeclStatement	ut64 to = core -> offset ;	921:4:29237:29259	1008316	2	True				
ANR	1010514	IdentifierDecl	to = core -> offset		1008316	0					
ANR	1010515	IdentifierDeclType	ut64		1008316	0					
ANR	1010516	Identifier	to		1008316	1					
ANR	1010517	AssignmentExpression	to = core -> offset		1008316	2		=			
ANR	1010518	Identifier	to		1008316	0					
ANR	1010519	PtrMemberAccess	core -> offset		1008316	1					
ANR	1010520	Identifier	core		1008316	0					
ANR	1010521	Identifier	offset		1008316	1					
ANR	1010522	Statement	r_list_foreach	922:4:29265:29278	1008316	3	True				
ANR	1010523	Statement	(	922:19:29280:29280	1008316	4	True				
ANR	1010524	Statement	core	922:20:29281:29284	1008316	5	True				
ANR	1010525	Statement	->	922:24:29285:29286	1008316	6	True				
ANR	1010526	Statement	dbg	922:26:29287:29289	1008316	7	True				
ANR	1010527	Statement	->	922:29:29290:29291	1008316	8	True				
ANR	1010528	Statement	maps	922:31:29292:29295	1008316	9	True				
ANR	1010529	Statement	","	922:35:29296:29296	1008316	10	True				
ANR	1010530	Statement	iter	922:37:29298:29301	1008316	11	True				
ANR	1010531	Statement	","	922:41:29302:29302	1008316	12	True				
ANR	1010532	Statement	map	922:43:29304:29306	1008316	13	True				
ANR	1010533	Statement	)	922:46:29307:29307	1008316	14	True				
ANR	1010534	CompoundStatement		280:48:8549:8549	1008316	15					
ANR	1010535	IfStatement	if ( from >= map -> addr && from < map -> addr_end )		1008316	0					
ANR	1010536	Condition	from >= map -> addr && from < map -> addr_end	923:9:29320:29360	1008316	0	True				
ANR	1010537	AndExpression	from >= map -> addr && from < map -> addr_end		1008316	0		&&			
ANR	1010538	RelationalExpression	from >= map -> addr		1008316	0		>=			
ANR	1010539	Identifier	from		1008316	0					
ANR	1010540	PtrMemberAccess	map -> addr		1008316	1					
ANR	1010541	Identifier	map		1008316	0					
ANR	1010542	Identifier	addr		1008316	1					
ANR	1010543	RelationalExpression	from < map -> addr_end		1008316	1		<			
ANR	1010544	Identifier	from		1008316	0					
ANR	1010545	PtrMemberAccess	map -> addr_end		1008316	1					
ANR	1010546	Identifier	map		1008316	0					
ANR	1010547	Identifier	addr_end		1008316	1					
ANR	1010548	CompoundStatement		281:52:8603:8603	1008316	1					
ANR	1010549	ExpressionStatement	from = map -> addr	924:6:29371:29387	1008316	0	True				
ANR	1010550	AssignmentExpression	from = map -> addr		1008316	0		=			
ANR	1010551	Identifier	from		1008316	0					
ANR	1010552	PtrMemberAccess	map -> addr		1008316	1					
ANR	1010553	Identifier	map		1008316	0					
ANR	1010554	Identifier	addr		1008316	1					
ANR	1010555	ExpressionStatement	to = map -> addr_end	925:6:29395:29413	1008316	1	True				
ANR	1010556	AssignmentExpression	to = map -> addr_end		1008316	0		=			
ANR	1010557	Identifier	to		1008316	0					
ANR	1010558	PtrMemberAccess	map -> addr_end		1008316	1					
ANR	1010559	Identifier	map		1008316	0					
ANR	1010560	Identifier	addr_end		1008316	1					
ANR	1010561	ExpressionStatement	perm = map -> perm	926:6:29421:29437	1008316	2	True				
ANR	1010562	AssignmentExpression	perm = map -> perm		1008316	0		=			
ANR	1010563	Identifier	perm		1008316	0					
ANR	1010564	PtrMemberAccess	map -> perm		1008316	1					
ANR	1010565	Identifier	map		1008316	0					
ANR	1010566	Identifier	perm		1008316	1					
ANR	1010567	BreakStatement	break ;	927:6:29445:29450	1008316	3	True				
ANR	1010568	IfStatement	if ( perm )		1008316	16					
ANR	1010569	Condition	perm	930:8:29473:29476	1008316	0	True				
ANR	1010570	Identifier	perm		1008316	0					
ANR	1010571	CompoundStatement		289:5:8726:8756	1008316	1					
ANR	1010572	IdentifierDeclStatement	RIOMap * nmap = R_NEW0 ( RIOMap ) ;	931:5:29486:29516	1008316	0	True				
ANR	1010573	IdentifierDecl	* nmap = R_NEW0 ( RIOMap )		1008316	0					
ANR	1010574	IdentifierDeclType	RIOMap *		1008316	0					
ANR	1010575	Identifier	nmap		1008316	1					
ANR	1010576	AssignmentExpression	* nmap = R_NEW0 ( RIOMap )		1008316	2		=			
ANR	1010577	Identifier	nmap		1008316	0					
ANR	1010578	CallExpression	R_NEW0 ( RIOMap )		1008316	1					
ANR	1010579	Callee	R_NEW0		1008316	0					
ANR	1010580	Identifier	R_NEW0		1008316	0					
ANR	1010581	ArgumentList	RIOMap		1008316	1					
ANR	1010582	Argument	RIOMap		1008316	0					
ANR	1010583	Identifier	RIOMap		1008316	0					
ANR	1010584	IfStatement	if ( nmap )		1008316	1					
ANR	1010585	Condition	nmap	932:9:29527:29530	1008316	0	True				
ANR	1010586	Identifier	nmap		1008316	0					
ANR	1010587	CompoundStatement		290:15:8773:8773	1008316	1					
ANR	1010588	ExpressionStatement	nmap -> itv . addr = from	934:6:29581:29602	1008316	0	True				
ANR	1010589	AssignmentExpression	nmap -> itv . addr = from		1008316	0		=			
ANR	1010590	MemberAccess	nmap -> itv . addr		1008316	0					
ANR	1010591	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010592	Identifier	nmap		1008316	0					
ANR	1010593	Identifier	itv		1008316	1					
ANR	1010594	Identifier	addr		1008316	1					
ANR	1010595	Identifier	from		1008316	1					
ANR	1010596	ExpressionStatement	nmap -> itv . size = to - from	935:6:29610:29636	1008316	1	True				
ANR	1010597	AssignmentExpression	nmap -> itv . size = to - from		1008316	0		=			
ANR	1010598	MemberAccess	nmap -> itv . size		1008316	0					
ANR	1010599	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010600	Identifier	nmap		1008316	0					
ANR	1010601	Identifier	itv		1008316	1					
ANR	1010602	Identifier	size		1008316	1					
ANR	1010603	AdditiveExpression	to - from		1008316	1		-			
ANR	1010604	Identifier	to		1008316	0					
ANR	1010605	Identifier	from		1008316	1					
ANR	1010606	ExpressionStatement	nmap -> perm = perm	936:6:29644:29661	1008316	2	True				
ANR	1010607	AssignmentExpression	nmap -> perm = perm		1008316	0		=			
ANR	1010608	PtrMemberAccess	nmap -> perm		1008316	0					
ANR	1010609	Identifier	nmap		1008316	0					
ANR	1010610	Identifier	perm		1008316	1					
ANR	1010611	Identifier	perm		1008316	1					
ANR	1010612	ExpressionStatement	nmap -> delta = 0	937:6:29669:29684	1008316	3	True				
ANR	1010613	AssignmentExpression	nmap -> delta = 0		1008316	0		=			
ANR	1010614	PtrMemberAccess	nmap -> delta		1008316	0					
ANR	1010615	Identifier	nmap		1008316	0					
ANR	1010616	Identifier	delta		1008316	1					
ANR	1010617	PrimaryExpression	0		1008316	1					
ANR	1010618	ExpressionStatement	"r_list_append ( list , nmap )"	938:6:29692:29718	1008316	4	True				
ANR	1010619	CallExpression	"r_list_append ( list , nmap )"		1008316	0					
ANR	1010620	Callee	r_list_append		1008316	0					
ANR	1010621	Identifier	r_list_append		1008316	0					
ANR	1010622	ArgumentList	list		1008316	1					
ANR	1010623	Argument	list		1008316	0					
ANR	1010624	Identifier	list		1008316	0					
ANR	1010625	Argument	nmap		1008316	1					
ANR	1010626	Identifier	nmap		1008316	0					
ANR	1010627	ElseStatement	else		1008316	0					
ANR	1010628	CompoundStatement		317:4:9470:9481	1008316	0					
ANR	1010629	IdentifierDeclStatement	bool only = false ;	942:4:29749:29766	1008316	0	True				
ANR	1010630	IdentifierDecl	only = false		1008316	0					
ANR	1010631	IdentifierDeclType	bool		1008316	0					
ANR	1010632	Identifier	only		1008316	1					
ANR	1010633	AssignmentExpression	only = false		1008316	2		=			
ANR	1010634	Identifier	false		1008316	0					
ANR	1010635	Identifier	false		1008316	1					
ANR	1010636	ExpressionStatement	mask = 0	943:4:29772:29780	1008316	1	True				
ANR	1010637	AssignmentExpression	mask = 0		1008316	0		=			
ANR	1010638	Identifier	mask		1008316	0					
ANR	1010639	PrimaryExpression	0		1008316	1					
ANR	1010640	IfStatement	"if ( ! strcmp ( mode , ""dbg.program"" ) )"		1008316	2					
ANR	1010641	Condition	"! strcmp ( mode , ""dbg.program"" )"	944:8:29790:29818	1008316	0	True				
ANR	1010642	UnaryOperationExpression	"! strcmp ( mode , ""dbg.program"" )"		1008316	0					
ANR	1010643	UnaryOperator	!		1008316	0					
ANR	1010644	CallExpression	"strcmp ( mode , ""dbg.program"" )"		1008316	1					
ANR	1010645	Callee	strcmp		1008316	0					
ANR	1010646	Identifier	strcmp		1008316	0					
ANR	1010647	ArgumentList	mode		1008316	1					
ANR	1010648	Argument	mode		1008316	0					
ANR	1010649	Identifier	mode		1008316	0					
ANR	1010650	Argument	"""dbg.program"""		1008316	1					
ANR	1010651	PrimaryExpression	"""dbg.program"""		1008316	0					
ANR	1010652	CompoundStatement		302:39:9061:9061	1008316	1					
ANR	1010653	ExpressionStatement	first = true	945:5:29828:29840	1008316	0	True				
ANR	1010654	AssignmentExpression	first = true		1008316	0		=			
ANR	1010655	Identifier	first		1008316	0					
ANR	1010656	Identifier	true		1008316	1					
ANR	1010657	ExpressionStatement	mask = R_PERM_X	946:5:29847:29862	1008316	1	True				
ANR	1010658	AssignmentExpression	mask = R_PERM_X		1008316	0		=			
ANR	1010659	Identifier	mask		1008316	0					
ANR	1010660	Identifier	R_PERM_X		1008316	1					
ANR	1010661	ElseStatement	else		1008316	0					
ANR	1010662	IfStatement	"if ( ! strcmp ( mode , ""dbg.maps"" ) )"		1008316	0					
ANR	1010663	Condition	"! strcmp ( mode , ""dbg.maps"" )"	947:15:29879:29904	1008316	0	True				
ANR	1010664	UnaryOperationExpression	"! strcmp ( mode , ""dbg.maps"" )"		1008316	0					
ANR	1010665	UnaryOperator	!		1008316	0					
ANR	1010666	CallExpression	"strcmp ( mode , ""dbg.maps"" )"		1008316	1					
ANR	1010667	Callee	strcmp		1008316	0					
ANR	1010668	Identifier	strcmp		1008316	0					
ANR	1010669	ArgumentList	mode		1008316	1					
ANR	1010670	Argument	mode		1008316	0					
ANR	1010671	Identifier	mode		1008316	0					
ANR	1010672	Argument	"""dbg.maps"""		1008316	1					
ANR	1010673	PrimaryExpression	"""dbg.maps"""		1008316	0					
ANR	1010674	CompoundStatement		305:43:9147:9147	1008316	1					
ANR	1010675	ExpressionStatement	all = true	948:5:29914:29924	1008316	0	True				
ANR	1010676	AssignmentExpression	all = true		1008316	0		=			
ANR	1010677	Identifier	all		1008316	0					
ANR	1010678	Identifier	true		1008316	1					
ANR	1010679	ElseStatement	else		1008316	0					
ANR	1010680	IfStatement	"if ( r_str_startswith ( mode , ""dbg.maps."" ) )"		1008316	0					
ANR	1010681	Condition	"r_str_startswith ( mode , ""dbg.maps."" )"	949:15:29941:29976	1008316	0	True				
ANR	1010682	CallExpression	"r_str_startswith ( mode , ""dbg.maps."" )"		1008316	0					
ANR	1010683	Callee	r_str_startswith		1008316	0					
ANR	1010684	Identifier	r_str_startswith		1008316	0					
ANR	1010685	ArgumentList	mode		1008316	1					
ANR	1010686	Argument	mode		1008316	0					
ANR	1010687	Identifier	mode		1008316	0					
ANR	1010688	Argument	"""dbg.maps."""		1008316	1					
ANR	1010689	PrimaryExpression	"""dbg.maps."""		1008316	0					
ANR	1010690	CompoundStatement		307:53:9219:9219	1008316	1					
ANR	1010691	ExpressionStatement	mask = r_str_rwx ( mode + 9 )	950:5:29986:30013	1008316	0	True				
ANR	1010692	AssignmentExpression	mask = r_str_rwx ( mode + 9 )		1008316	0		=			
ANR	1010693	Identifier	mask		1008316	0					
ANR	1010694	CallExpression	r_str_rwx ( mode + 9 )		1008316	1					
ANR	1010695	Callee	r_str_rwx		1008316	0					
ANR	1010696	Identifier	r_str_rwx		1008316	0					
ANR	1010697	ArgumentList	mode + 9		1008316	1					
ANR	1010698	Argument	mode + 9		1008316	0					
ANR	1010699	AdditiveExpression	mode + 9		1008316	0		+			
ANR	1010700	Identifier	mode		1008316	0					
ANR	1010701	PrimaryExpression	9		1008316	1					
ANR	1010702	ExpressionStatement	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"	951:5:30020:30063	1008316	1	True				
ANR	1010703	AssignmentExpression	"only = ( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	0		=			
ANR	1010704	Identifier	only		1008316	0					
ANR	1010705	CastExpression	"( bool ) ( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1010706	CastTarget	bool		1008316	0					
ANR	1010707	CastExpression	"( size_t ) strstr ( mode , "".only"" )"		1008316	1					
ANR	1010708	CastTarget	size_t		1008316	0					
ANR	1010709	CallExpression	"strstr ( mode , "".only"" )"		1008316	1					
ANR	1010710	Callee	strstr		1008316	0					
ANR	1010711	Identifier	strstr		1008316	0					
ANR	1010712	ArgumentList	mode		1008316	1					
ANR	1010713	Argument	mode		1008316	0					
ANR	1010714	Identifier	mode		1008316	0					
ANR	1010715	Argument	""".only"""		1008316	1					
ANR	1010716	PrimaryExpression	""".only"""		1008316	0					
ANR	1010717	ElseStatement	else		1008316	0					
ANR	1010718	IfStatement	"if ( ! strcmp ( mode , ""dbg.heap"" ) )"		1008316	0					
ANR	1010719	Condition	"! strcmp ( mode , ""dbg.heap"" )"	952:15:30080:30105	1008316	0	True				
ANR	1010720	UnaryOperationExpression	"! strcmp ( mode , ""dbg.heap"" )"		1008316	0					
ANR	1010721	UnaryOperator	!		1008316	0					
ANR	1010722	CallExpression	"strcmp ( mode , ""dbg.heap"" )"		1008316	1					
ANR	1010723	Callee	strcmp		1008316	0					
ANR	1010724	Identifier	strcmp		1008316	0					
ANR	1010725	ArgumentList	mode		1008316	1					
ANR	1010726	Argument	mode		1008316	0					
ANR	1010727	Identifier	mode		1008316	0					
ANR	1010728	Argument	"""dbg.heap"""		1008316	1					
ANR	1010729	PrimaryExpression	"""dbg.heap"""		1008316	0					
ANR	1010730	CompoundStatement		310:43:9348:9348	1008316	1					
ANR	1010731	ExpressionStatement	heap = true	953:5:30115:30126	1008316	0	True				
ANR	1010732	AssignmentExpression	heap = true		1008316	0		=			
ANR	1010733	Identifier	heap		1008316	0					
ANR	1010734	Identifier	true		1008316	1					
ANR	1010735	ElseStatement	else		1008316	0					
ANR	1010736	IfStatement	"if ( ! strcmp ( mode , ""dbg.stack"" ) )"		1008316	0					
ANR	1010737	Condition	"! strcmp ( mode , ""dbg.stack"" )"	954:15:30143:30169	1008316	0	True				
ANR	1010738	UnaryOperationExpression	"! strcmp ( mode , ""dbg.stack"" )"		1008316	0					
ANR	1010739	UnaryOperator	!		1008316	0					
ANR	1010740	CallExpression	"strcmp ( mode , ""dbg.stack"" )"		1008316	1					
ANR	1010741	Callee	strcmp		1008316	0					
ANR	1010742	Identifier	strcmp		1008316	0					
ANR	1010743	ArgumentList	mode		1008316	1					
ANR	1010744	Argument	mode		1008316	0					
ANR	1010745	Identifier	mode		1008316	0					
ANR	1010746	Argument	"""dbg.stack"""		1008316	1					
ANR	1010747	PrimaryExpression	"""dbg.stack"""		1008316	0					
ANR	1010748	CompoundStatement		312:44:9412:9412	1008316	1					
ANR	1010749	ExpressionStatement	stack = true	955:5:30179:30191	1008316	0	True				
ANR	1010750	AssignmentExpression	stack = true		1008316	0		=			
ANR	1010751	Identifier	stack		1008316	0					
ANR	1010752	Identifier	true		1008316	1					
ANR	1010753	IdentifierDeclStatement	ut64 from = UT64_MAX ;	958:4:30204:30224	1008316	3	True				
ANR	1010754	IdentifierDecl	from = UT64_MAX		1008316	0					
ANR	1010755	IdentifierDeclType	ut64		1008316	0					
ANR	1010756	Identifier	from		1008316	1					
ANR	1010757	AssignmentExpression	from = UT64_MAX		1008316	2		=			
ANR	1010758	Identifier	UT64_MAX		1008316	0					
ANR	1010759	Identifier	UT64_MAX		1008316	1					
ANR	1010760	IdentifierDeclStatement	ut64 to = 0 ;	959:4:30230:30241	1008316	4	True				
ANR	1010761	IdentifierDecl	to = 0		1008316	0					
ANR	1010762	IdentifierDeclType	ut64		1008316	0					
ANR	1010763	Identifier	to		1008316	1					
ANR	1010764	AssignmentExpression	to = 0		1008316	2		=			
ANR	1010765	Identifier	to		1008316	0					
ANR	1010766	PrimaryExpression	0		1008316	1					
ANR	1010767	Statement	r_list_foreach	960:4:30247:30260	1008316	5	True				
ANR	1010768	Statement	(	960:19:30262:30262	1008316	6	True				
ANR	1010769	Statement	core	960:20:30263:30266	1008316	7	True				
ANR	1010770	Statement	->	960:24:30267:30268	1008316	8	True				
ANR	1010771	Statement	dbg	960:26:30269:30271	1008316	9	True				
ANR	1010772	Statement	->	960:29:30272:30273	1008316	10	True				
ANR	1010773	Statement	maps	960:31:30274:30277	1008316	11	True				
ANR	1010774	Statement	","	960:35:30278:30278	1008316	12	True				
ANR	1010775	Statement	iter	960:37:30280:30283	1008316	13	True				
ANR	1010776	Statement	","	960:41:30284:30284	1008316	14	True				
ANR	1010777	Statement	map	960:43:30286:30288	1008316	15	True				
ANR	1010778	Statement	)	960:46:30289:30289	1008316	16	True				
ANR	1010779	CompoundStatement		318:48:9531:9531	1008316	17					
ANR	1010780	IfStatement	"if ( ! all && maskMatches ( map -> perm , mask , only ) )"		1008316	0					
ANR	1010781	Condition	"! all && maskMatches ( map -> perm , mask , only )"	961:9:30302:30344	1008316	0	True				
ANR	1010782	AndExpression	"! all && maskMatches ( map -> perm , mask , only )"		1008316	0		&&			
ANR	1010783	UnaryOperationExpression	! all		1008316	0					
ANR	1010784	UnaryOperator	!		1008316	0					
ANR	1010785	Identifier	all		1008316	1					
ANR	1010786	CallExpression	"maskMatches ( map -> perm , mask , only )"		1008316	1					
ANR	1010787	Callee	maskMatches		1008316	0					
ANR	1010788	Identifier	maskMatches		1008316	0					
ANR	1010789	ArgumentList	map -> perm		1008316	1					
ANR	1010790	Argument	map -> perm		1008316	0					
ANR	1010791	PtrMemberAccess	map -> perm		1008316	0					
ANR	1010792	Identifier	map		1008316	0					
ANR	1010793	Identifier	perm		1008316	1					
ANR	1010794	Argument	mask		1008316	1					
ANR	1010795	Identifier	mask		1008316	0					
ANR	1010796	Argument	only		1008316	2					
ANR	1010797	Identifier	only		1008316	0					
ANR	1010798	CompoundStatement		319:54:9587:9587	1008316	1					
ANR	1010799	ContinueStatement	continue ;	962:6:30355:30363	1008316	0	True				
ANR	1010800	ExpressionStatement	"add = ( stack && strstr ( map -> name , ""stack"" ) ) ? 1 : 0"	964:5:30377:30427	1008316	1	True				
ANR	1010801	AssignmentExpression	"add = ( stack && strstr ( map -> name , ""stack"" ) ) ? 1 : 0"		1008316	0		=			
ANR	1010802	Identifier	add		1008316	0					
ANR	1010803	ConditionalExpression	"( stack && strstr ( map -> name , ""stack"" ) ) ? 1 : 0"		1008316	1					
ANR	1010804	Condition	"stack && strstr ( map -> name , ""stack"" )"		1008316	0					
ANR	1010805	AndExpression	"stack && strstr ( map -> name , ""stack"" )"		1008316	0		&&			
ANR	1010806	Identifier	stack		1008316	0					
ANR	1010807	CallExpression	"strstr ( map -> name , ""stack"" )"		1008316	1					
ANR	1010808	Callee	strstr		1008316	0					
ANR	1010809	Identifier	strstr		1008316	0					
ANR	1010810	ArgumentList	map -> name		1008316	1					
ANR	1010811	Argument	map -> name		1008316	0					
ANR	1010812	PtrMemberAccess	map -> name		1008316	0					
ANR	1010813	Identifier	map		1008316	0					
ANR	1010814	Identifier	name		1008316	1					
ANR	1010815	Argument	"""stack"""		1008316	1					
ANR	1010816	PrimaryExpression	"""stack"""		1008316	0					
ANR	1010817	PrimaryExpression	1		1008316	1					
ANR	1010818	PrimaryExpression	0		1008316	2					
ANR	1010819	IfStatement	"if ( ! add && ( heap && ( map -> perm & R_PERM_W ) ) && strstr ( map -> name , ""heap"" ) )"		1008316	2					
ANR	1010820	Condition	"! add && ( heap && ( map -> perm & R_PERM_W ) ) && strstr ( map -> name , ""heap"" )"	965:9:30438:30507	1008316	0	True				
ANR	1010821	AndExpression	"! add && ( heap && ( map -> perm & R_PERM_W ) ) && strstr ( map -> name , ""heap"" )"		1008316	0		&&			
ANR	1010822	UnaryOperationExpression	! add		1008316	0					
ANR	1010823	UnaryOperator	!		1008316	0					
ANR	1010824	Identifier	add		1008316	1					
ANR	1010825	AndExpression	"( heap && ( map -> perm & R_PERM_W ) ) && strstr ( map -> name , ""heap"" )"		1008316	1		&&			
ANR	1010826	AndExpression	heap && ( map -> perm & R_PERM_W )		1008316	0		&&			
ANR	1010827	Identifier	heap		1008316	0					
ANR	1010828	BitAndExpression	map -> perm & R_PERM_W		1008316	1		&			
ANR	1010829	PtrMemberAccess	map -> perm		1008316	0					
ANR	1010830	Identifier	map		1008316	0					
ANR	1010831	Identifier	perm		1008316	1					
ANR	1010832	Identifier	R_PERM_W		1008316	1					
ANR	1010833	CallExpression	"strstr ( map -> name , ""heap"" )"		1008316	1					
ANR	1010834	Callee	strstr		1008316	0					
ANR	1010835	Identifier	strstr		1008316	0					
ANR	1010836	ArgumentList	map -> name		1008316	1					
ANR	1010837	Argument	map -> name		1008316	0					
ANR	1010838	PtrMemberAccess	map -> name		1008316	0					
ANR	1010839	Identifier	map		1008316	0					
ANR	1010840	Identifier	name		1008316	1					
ANR	1010841	Argument	"""heap"""		1008316	1					
ANR	1010842	PrimaryExpression	"""heap"""		1008316	0					
ANR	1010843	CompoundStatement		323:81:9750:9750	1008316	1					
ANR	1010844	ExpressionStatement	add = 1	966:6:30518:30525	1008316	0	True				
ANR	1010845	AssignmentExpression	add = 1		1008316	0		=			
ANR	1010846	Identifier	add		1008316	0					
ANR	1010847	PrimaryExpression	1		1008316	1					
ANR	1010848	IfStatement	if ( ( mask && ( map -> perm & mask ) ) || add || all )		1008316	3					
ANR	1010849	Condition	( mask && ( map -> perm & mask ) ) || add || all	968:9:30543:30584	1008316	0	True				
ANR	1010850	OrExpression	( mask && ( map -> perm & mask ) ) || add || all		1008316	0		||			
ANR	1010851	AndExpression	mask && ( map -> perm & mask )		1008316	0		&&			
ANR	1010852	Identifier	mask		1008316	0					
ANR	1010853	BitAndExpression	map -> perm & mask		1008316	1		&			
ANR	1010854	PtrMemberAccess	map -> perm		1008316	0					
ANR	1010855	Identifier	map		1008316	0					
ANR	1010856	Identifier	perm		1008316	1					
ANR	1010857	Identifier	mask		1008316	1					
ANR	1010858	OrExpression	add || all		1008316	1		||			
ANR	1010859	Identifier	add		1008316	0					
ANR	1010860	Identifier	all		1008316	1					
ANR	1010861	CompoundStatement		330:6:9896:9926	1008316	1					
ANR	1010862	IfStatement	if ( ! list )		1008316	0					
ANR	1010863	Condition	! list	969:10:30599:30603	1008316	0	True				
ANR	1010864	UnaryOperationExpression	! list		1008316	0					
ANR	1010865	UnaryOperator	!		1008316	0					
ANR	1010866	Identifier	list		1008316	1					
ANR	1010867	CompoundStatement		327:17:9846:9846	1008316	1					
ANR	1010868	ExpressionStatement	list = r_list_newf ( free )	970:7:30615:30640	1008316	0	True				
ANR	1010869	AssignmentExpression	list = r_list_newf ( free )		1008316	0		=			
ANR	1010870	Identifier	list		1008316	0					
ANR	1010871	CallExpression	r_list_newf ( free )		1008316	1					
ANR	1010872	Callee	r_list_newf		1008316	0					
ANR	1010873	Identifier	r_list_newf		1008316	0					
ANR	1010874	ArgumentList	free		1008316	1					
ANR	1010875	Argument	free		1008316	0					
ANR	1010876	Identifier	free		1008316	0					
ANR	1010877	IdentifierDeclStatement	RIOMap * nmap = R_NEW0 ( RIOMap ) ;	972:6:30656:30686	1008316	1	True				
ANR	1010878	IdentifierDecl	* nmap = R_NEW0 ( RIOMap )		1008316	0					
ANR	1010879	IdentifierDeclType	RIOMap *		1008316	0					
ANR	1010880	Identifier	nmap		1008316	1					
ANR	1010881	AssignmentExpression	* nmap = R_NEW0 ( RIOMap )		1008316	2		=			
ANR	1010882	Identifier	nmap		1008316	0					
ANR	1010883	CallExpression	R_NEW0 ( RIOMap )		1008316	1					
ANR	1010884	Callee	R_NEW0		1008316	0					
ANR	1010885	Identifier	R_NEW0		1008316	0					
ANR	1010886	ArgumentList	RIOMap		1008316	1					
ANR	1010887	Argument	RIOMap		1008316	0					
ANR	1010888	Identifier	RIOMap		1008316	0					
ANR	1010889	IfStatement	if ( ! nmap )		1008316	2					
ANR	1010890	Condition	! nmap	973:10:30698:30702	1008316	0	True				
ANR	1010891	UnaryOperationExpression	! nmap		1008316	0					
ANR	1010892	UnaryOperator	!		1008316	0					
ANR	1010893	Identifier	nmap		1008316	1					
ANR	1010894	CompoundStatement		331:17:9945:9945	1008316	1					
ANR	1010895	BreakStatement	break ;	974:7:30714:30719	1008316	0	True				
ANR	1010896	ExpressionStatement	nmap -> itv . addr = map -> addr	976:6:30735:30761	1008316	3	True				
ANR	1010897	AssignmentExpression	nmap -> itv . addr = map -> addr		1008316	0		=			
ANR	1010898	MemberAccess	nmap -> itv . addr		1008316	0					
ANR	1010899	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010900	Identifier	nmap		1008316	0					
ANR	1010901	Identifier	itv		1008316	1					
ANR	1010902	Identifier	addr		1008316	1					
ANR	1010903	PtrMemberAccess	map -> addr		1008316	1					
ANR	1010904	Identifier	map		1008316	0					
ANR	1010905	Identifier	addr		1008316	1					
ANR	1010906	ExpressionStatement	nmap -> itv . size = map -> addr_end - map -> addr	977:6:30769:30811	1008316	4	True				
ANR	1010907	AssignmentExpression	nmap -> itv . size = map -> addr_end - map -> addr		1008316	0		=			
ANR	1010908	MemberAccess	nmap -> itv . size		1008316	0					
ANR	1010909	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010910	Identifier	nmap		1008316	0					
ANR	1010911	Identifier	itv		1008316	1					
ANR	1010912	Identifier	size		1008316	1					
ANR	1010913	AdditiveExpression	map -> addr_end - map -> addr		1008316	1		-			
ANR	1010914	PtrMemberAccess	map -> addr_end		1008316	0					
ANR	1010915	Identifier	map		1008316	0					
ANR	1010916	Identifier	addr_end		1008316	1					
ANR	1010917	PtrMemberAccess	map -> addr		1008316	1					
ANR	1010918	Identifier	map		1008316	0					
ANR	1010919	Identifier	addr		1008316	1					
ANR	1010920	IfStatement	if ( nmap -> itv . addr )		1008316	5					
ANR	1010921	Condition	nmap -> itv . addr	978:10:30823:30836	1008316	0	True				
ANR	1010922	MemberAccess	nmap -> itv . addr		1008316	0					
ANR	1010923	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010924	Identifier	nmap		1008316	0					
ANR	1010925	Identifier	itv		1008316	1					
ANR	1010926	Identifier	addr		1008316	1					
ANR	1010927	CompoundStatement		336:26:10079:10079	1008316	1					
ANR	1010928	ExpressionStatement	"from = R_MIN ( from , nmap -> itv . addr )"	979:7:30848:30883	1008316	0	True				
ANR	1010929	AssignmentExpression	"from = R_MIN ( from , nmap -> itv . addr )"		1008316	0		=			
ANR	1010930	Identifier	from		1008316	0					
ANR	1010931	CallExpression	"R_MIN ( from , nmap -> itv . addr )"		1008316	1					
ANR	1010932	Callee	R_MIN		1008316	0					
ANR	1010933	Identifier	R_MIN		1008316	0					
ANR	1010934	ArgumentList	from		1008316	1					
ANR	1010935	Argument	from		1008316	0					
ANR	1010936	Identifier	from		1008316	0					
ANR	1010937	Argument	nmap -> itv . addr		1008316	1					
ANR	1010938	MemberAccess	nmap -> itv . addr		1008316	0					
ANR	1010939	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010940	Identifier	nmap		1008316	0					
ANR	1010941	Identifier	itv		1008316	1					
ANR	1010942	Identifier	addr		1008316	1					
ANR	1010943	ExpressionStatement	"to = R_MAX ( to - 1 , r_itv_end ( nmap -> itv ) - 1 ) + 1"	980:7:30892:30942	1008316	1	True				
ANR	1010944	AssignmentExpression	"to = R_MAX ( to - 1 , r_itv_end ( nmap -> itv ) - 1 ) + 1"		1008316	0		=			
ANR	1010945	Identifier	to		1008316	0					
ANR	1010946	AdditiveExpression	"R_MAX ( to - 1 , r_itv_end ( nmap -> itv ) - 1 ) + 1"		1008316	1		+			
ANR	1010947	CallExpression	"R_MAX ( to - 1 , r_itv_end ( nmap -> itv ) - 1 )"		1008316	0					
ANR	1010948	Callee	R_MAX		1008316	0					
ANR	1010949	Identifier	R_MAX		1008316	0					
ANR	1010950	ArgumentList	to - 1		1008316	1					
ANR	1010951	Argument	to - 1		1008316	0					
ANR	1010952	AdditiveExpression	to - 1		1008316	0		-			
ANR	1010953	Identifier	to		1008316	0					
ANR	1010954	PrimaryExpression	1		1008316	1					
ANR	1010955	Argument	r_itv_end ( nmap -> itv ) - 1		1008316	1					
ANR	1010956	AdditiveExpression	r_itv_end ( nmap -> itv ) - 1		1008316	0		-			
ANR	1010957	CallExpression	r_itv_end ( nmap -> itv )		1008316	0					
ANR	1010958	Callee	r_itv_end		1008316	0					
ANR	1010959	Identifier	r_itv_end		1008316	0					
ANR	1010960	ArgumentList	nmap -> itv		1008316	1					
ANR	1010961	Argument	nmap -> itv		1008316	0					
ANR	1010962	PtrMemberAccess	nmap -> itv		1008316	0					
ANR	1010963	Identifier	nmap		1008316	0					
ANR	1010964	Identifier	itv		1008316	1					
ANR	1010965	PrimaryExpression	1		1008316	1					
ANR	1010966	PrimaryExpression	1		1008316	1					
ANR	1010967	ExpressionStatement	nmap -> perm = map -> perm	982:6:30958:30980	1008316	6	True				
ANR	1010968	AssignmentExpression	nmap -> perm = map -> perm		1008316	0		=			
ANR	1010969	PtrMemberAccess	nmap -> perm		1008316	0					
ANR	1010970	Identifier	nmap		1008316	0					
ANR	1010971	Identifier	perm		1008316	1					
ANR	1010972	PtrMemberAccess	map -> perm		1008316	1					
ANR	1010973	Identifier	map		1008316	0					
ANR	1010974	Identifier	perm		1008316	1					
ANR	1010975	ExpressionStatement	nmap -> delta = 0	983:6:30988:31003	1008316	7	True				
ANR	1010976	AssignmentExpression	nmap -> delta = 0		1008316	0		=			
ANR	1010977	PtrMemberAccess	nmap -> delta		1008316	0					
ANR	1010978	Identifier	nmap		1008316	0					
ANR	1010979	Identifier	delta		1008316	1					
ANR	1010980	PrimaryExpression	0		1008316	1					
ANR	1010981	ExpressionStatement	"r_list_append ( list , nmap )"	984:6:31011:31037	1008316	8	True				
ANR	1010982	CallExpression	"r_list_append ( list , nmap )"		1008316	0					
ANR	1010983	Callee	r_list_append		1008316	0					
ANR	1010984	Identifier	r_list_append		1008316	0					
ANR	1010985	ArgumentList	list		1008316	1					
ANR	1010986	Argument	list		1008316	0					
ANR	1010987	Identifier	list		1008316	0					
ANR	1010988	Argument	nmap		1008316	1					
ANR	1010989	Identifier	nmap		1008316	0					
ANR	1010990	IfStatement	if ( first )		1008316	9					
ANR	1010991	Condition	first	985:10:31049:31053	1008316	0	True				
ANR	1010992	Identifier	first		1008316	0					
ANR	1010993	CompoundStatement		343:17:10296:10296	1008316	1					
ANR	1010994	BreakStatement	break ;	986:7:31065:31070	1008316	0	True				
ANR	1010995	ElseStatement	else		1008316	0					
ANR	1010996	CompoundStatement		350:8:10350:10350	1008316	0					
ANR	1010997	IfStatement	if ( core -> tmpseek )		1008316	0					
ANR	1010998	Condition	core -> tmpseek	994:6:31178:31190	1008316	0	True				
ANR	1010999	PtrMemberAccess	core -> tmpseek		1008316	0					
ANR	1011000	Identifier	core		1008316	0					
ANR	1011001	Identifier	tmpseek		1008316	1					
ANR	1011002	CompoundStatement		352:21:10433:10433	1008316	1					
ANR	1011003	ExpressionStatement	"append_bound ( list , core -> io , search_itv , core -> offset , core -> blocksize , 5 )"	995:3:31198:31273	1008316	0	True				
ANR	1011004	CallExpression	"append_bound ( list , core -> io , search_itv , core -> offset , core -> blocksize , 5 )"		1008316	0					
ANR	1011005	Callee	append_bound		1008316	0					
ANR	1011006	Identifier	append_bound		1008316	0					
ANR	1011007	ArgumentList	list		1008316	1					
ANR	1011008	Argument	list		1008316	0					
ANR	1011009	Identifier	list		1008316	0					
ANR	1011010	Argument	core -> io		1008316	1					
ANR	1011011	PtrMemberAccess	core -> io		1008316	0					
ANR	1011012	Identifier	core		1008316	0					
ANR	1011013	Identifier	io		1008316	1					
ANR	1011014	Argument	search_itv		1008316	2					
ANR	1011015	Identifier	search_itv		1008316	0					
ANR	1011016	Argument	core -> offset		1008316	3					
ANR	1011017	PtrMemberAccess	core -> offset		1008316	0					
ANR	1011018	Identifier	core		1008316	0					
ANR	1011019	Identifier	offset		1008316	1					
ANR	1011020	Argument	core -> blocksize		1008316	4					
ANR	1011021	PtrMemberAccess	core -> blocksize		1008316	0					
ANR	1011022	Identifier	core		1008316	0					
ANR	1011023	Identifier	blocksize		1008316	1					
ANR	1011024	Argument	5		1008316	5					
ANR	1011025	PrimaryExpression	5		1008316	0					
ANR	1011026	ElseStatement	else		1008316	0					
ANR	1011027	CompoundStatement		360:3:10695:10744	1008316	0					
ANR	1011028	IdentifierDeclStatement	"ut64 from = r_config_get_i ( core -> config , bound_from ) ;"	998:3:31340:31393	1008316	0	True				
ANR	1011029	IdentifierDecl	"from = r_config_get_i ( core -> config , bound_from )"		1008316	0					
ANR	1011030	IdentifierDeclType	ut64		1008316	0					
ANR	1011031	Identifier	from		1008316	1					
ANR	1011032	AssignmentExpression	"from = r_config_get_i ( core -> config , bound_from )"		1008316	2		=			
ANR	1011033	Identifier	from		1008316	0					
ANR	1011034	CallExpression	"r_config_get_i ( core -> config , bound_from )"		1008316	1					
ANR	1011035	Callee	r_config_get_i		1008316	0					
ANR	1011036	Identifier	r_config_get_i		1008316	0					
ANR	1011037	ArgumentList	core -> config		1008316	1					
ANR	1011038	Argument	core -> config		1008316	0					
ANR	1011039	PtrMemberAccess	core -> config		1008316	0					
ANR	1011040	Identifier	core		1008316	0					
ANR	1011041	Identifier	config		1008316	1					
ANR	1011042	Argument	bound_from		1008316	1					
ANR	1011043	Identifier	bound_from		1008316	0					
ANR	1011044	IfStatement	if ( from == UT64_MAX )		1008316	1					
ANR	1011045	Condition	from == UT64_MAX	999:7:31402:31417	1008316	0	True				
ANR	1011046	EqualityExpression	from == UT64_MAX		1008316	0		==			
ANR	1011047	Identifier	from		1008316	0					
ANR	1011048	Identifier	UT64_MAX		1008316	1					
ANR	1011049	CompoundStatement		357:25:10660:10660	1008316	1					
ANR	1011050	ExpressionStatement	from = core -> offset	1000:4:31426:31445	1008316	0	True				
ANR	1011051	AssignmentExpression	from = core -> offset		1008316	0		=			
ANR	1011052	Identifier	from		1008316	0					
ANR	1011053	PtrMemberAccess	core -> offset		1008316	1					
ANR	1011054	Identifier	core		1008316	0					
ANR	1011055	Identifier	offset		1008316	1					
ANR	1011056	IdentifierDeclStatement	"ut64 to = r_config_get_i ( core -> config , bound_to ) ;"	1002:3:31455:31504	1008316	2	True				
ANR	1011057	IdentifierDecl	"to = r_config_get_i ( core -> config , bound_to )"		1008316	0					
ANR	1011058	IdentifierDeclType	ut64		1008316	0					
ANR	1011059	Identifier	to		1008316	1					
ANR	1011060	AssignmentExpression	"to = r_config_get_i ( core -> config , bound_to )"		1008316	2		=			
ANR	1011061	Identifier	to		1008316	0					
ANR	1011062	CallExpression	"r_config_get_i ( core -> config , bound_to )"		1008316	1					
ANR	1011063	Callee	r_config_get_i		1008316	0					
ANR	1011064	Identifier	r_config_get_i		1008316	0					
ANR	1011065	ArgumentList	core -> config		1008316	1					
ANR	1011066	Argument	core -> config		1008316	0					
ANR	1011067	PtrMemberAccess	core -> config		1008316	0					
ANR	1011068	Identifier	core		1008316	0					
ANR	1011069	Identifier	config		1008316	1					
ANR	1011070	Argument	bound_to		1008316	1					
ANR	1011071	Identifier	bound_to		1008316	0					
ANR	1011072	IfStatement	if ( to == UT64_MAX )		1008316	3					
ANR	1011073	Condition	to == UT64_MAX	1003:7:31513:31526	1008316	0	True				
ANR	1011074	EqualityExpression	to == UT64_MAX		1008316	0		==			
ANR	1011075	Identifier	to		1008316	0					
ANR	1011076	Identifier	UT64_MAX		1008316	1					
ANR	1011077	CompoundStatement		361:23:10769:10769	1008316	1					
ANR	1011078	IfStatement	if ( core -> io -> va )		1008316	0					
ANR	1011079	Condition	core -> io -> va	1004:8:31539:31550	1008316	0	True				
ANR	1011080	PtrMemberAccess	core -> io -> va		1008316	0					
ANR	1011081	PtrMemberAccess	core -> io		1008316	0					
ANR	1011082	Identifier	core		1008316	0					
ANR	1011083	Identifier	io		1008316	1					
ANR	1011084	Identifier	va		1008316	1					
ANR	1011085	CompoundStatement		362:22:10793:10793	1008316	1					
ANR	1011086	ElseStatement	else		1008316	0					
ANR	1011087	CompoundStatement		364:11:10837:10837	1008316	0					
ANR	1011088	IfStatement	if ( core -> file )		1008316	0					
ANR	1011089	Condition	core -> file	1007:9:31608:31617	1008316	0	True				
ANR	1011090	PtrMemberAccess	core -> file		1008316	0					
ANR	1011091	Identifier	core		1008316	0					
ANR	1011092	Identifier	file		1008316	1					
ANR	1011093	CompoundStatement		365:21:10860:10860	1008316	1					
ANR	1011094	ExpressionStatement	"to = r_io_fd_size ( core -> io , core -> file -> fd )"	1008:6:31628:31672	1008316	0	True				
ANR	1011095	AssignmentExpression	"to = r_io_fd_size ( core -> io , core -> file -> fd )"		1008316	0		=			
ANR	1011096	Identifier	to		1008316	0					
ANR	1011097	CallExpression	"r_io_fd_size ( core -> io , core -> file -> fd )"		1008316	1					
ANR	1011098	Callee	r_io_fd_size		1008316	0					
ANR	1011099	Identifier	r_io_fd_size		1008316	0					
ANR	1011100	ArgumentList	core -> io		1008316	1					
ANR	1011101	Argument	core -> io		1008316	0					
ANR	1011102	PtrMemberAccess	core -> io		1008316	0					
ANR	1011103	Identifier	core		1008316	0					
ANR	1011104	Identifier	io		1008316	1					
ANR	1011105	Argument	core -> file -> fd		1008316	1					
ANR	1011106	PtrMemberAccess	core -> file -> fd		1008316	0					
ANR	1011107	PtrMemberAccess	core -> file		1008316	0					
ANR	1011108	Identifier	core		1008316	0					
ANR	1011109	Identifier	file		1008316	1					
ANR	1011110	Identifier	fd		1008316	1					
ANR	1011111	ExpressionStatement	"append_bound ( list , core -> io , search_itv , from , to - from , 5 )"	1012:3:31695:31756	1008316	4	True				
ANR	1011112	CallExpression	"append_bound ( list , core -> io , search_itv , from , to - from , 5 )"		1008316	0					
ANR	1011113	Callee	append_bound		1008316	0					
ANR	1011114	Identifier	append_bound		1008316	0					
ANR	1011115	ArgumentList	list		1008316	1					
ANR	1011116	Argument	list		1008316	0					
ANR	1011117	Identifier	list		1008316	0					
ANR	1011118	Argument	core -> io		1008316	1					
ANR	1011119	PtrMemberAccess	core -> io		1008316	0					
ANR	1011120	Identifier	core		1008316	0					
ANR	1011121	Identifier	io		1008316	1					
ANR	1011122	Argument	search_itv		1008316	2					
ANR	1011123	Identifier	search_itv		1008316	0					
ANR	1011124	Argument	from		1008316	3					
ANR	1011125	Identifier	from		1008316	0					
ANR	1011126	Argument	to - from		1008316	4					
ANR	1011127	AdditiveExpression	to - from		1008316	0		-			
ANR	1011128	Identifier	to		1008316	0					
ANR	1011129	Identifier	from		1008316	1					
ANR	1011130	Argument	5		1008316	5					
ANR	1011131	PrimaryExpression	5		1008316	0					
ANR	1011132	ReturnStatement	return list ;	1015:1:31766:31777	1008316	14	True				
ANR	1011133	Identifier	list		1008316	0					
ANR	1011134	ReturnType	R_API RList *		1008316	1					
ANR	1011135	Identifier	r_core_get_boundaries_prot		1008316	2					
ANR	1011136	ParameterList	"RCore * core , int perm , const char * mode , const char * prefix"		1008316	3					
ANR	1011137	Parameter	RCore * core	643:40:20698:20708	1008316	0	True				
ANR	1011138	ParameterType	RCore *		1008316	0					
ANR	1011139	Identifier	core		1008316	1					
ANR	1011140	Parameter	int perm	643:53:20711:20718	1008316	1	True				
ANR	1011141	ParameterType	int		1008316	0					
ANR	1011142	Identifier	perm		1008316	1					
ANR	1011143	Parameter	const char * mode	643:63:20721:20736	1008316	2	True				
ANR	1011144	ParameterType	const char *		1008316	0					
ANR	1011145	Identifier	mode		1008316	1					
ANR	1011146	Parameter	const char * prefix	643:81:20739:20756	1008316	3	True				
ANR	1011147	ParameterType	const char *		1008316	0					
ANR	1011148	Identifier	prefix		1008316	1					
ANR	1011149	CFGEntryNode	ENTRY		1008316		True				
ANR	1011150	CFGExitNode	EXIT		1008316		True				
ANR	1011151	CFGErrorNode	ERROR		1008316		True				
ANR	1011152	Symbol	s -> is_segment		1008316						
ANR	1011153	Symbol	stack		1008316						
ANR	1011154	Symbol	prefix		1008316						
ANR	1011155	Symbol	* map		1008316						
ANR	1011156	Symbol	R_ANAL_FCN_TYPE_FCN		1008316						
ANR	1011157	Symbol	core -> offset		1008316						
ANR	1011158	Symbol	part -> itv . addr		1008316						
ANR	1011159	Symbol	strncmp		1008316						
ANR	1011160	Symbol	len		1008316						
ANR	1011161	Symbol	core -> io -> debug		1008316						
ANR	1011162	Symbol	core -> bin		1008316						
ANR	1011163	Symbol	nmap		1008316						
ANR	1011164	Symbol	core -> blocksize		1008316						
ANR	1011165	Symbol	r_str_rwx		1008316						
ANR	1011166	Symbol	m -> itv		1008316						
ANR	1011167	Symbol	r_list_newf		1008316						
ANR	1011168	Symbol	iter		1008316						
ANR	1011169	Symbol	part -> itv . size		1008316						
ANR	1011170	Symbol	R_NEW0		1008316						
ANR	1011171	Symbol	at		1008316						
ANR	1011172	Symbol	search_from		1008316						
ANR	1011173	Symbol	size		1008316						
ANR	1011174	Symbol	bound_to		1008316						
ANR	1011175	Symbol	r_config_get_i		1008316						
ANR	1011176	Symbol	search_itv		1008316						
ANR	1011177	Symbol	begin		1008316						
ANR	1011178	Symbol	bb		1008316						
ANR	1011179	Symbol	s -> size		1008316						
ANR	1011180	Symbol	map -> addr		1008316						
ANR	1011181	Symbol	* core		1008316						
ANR	1011182	Symbol	r_config_get		1008316						
ANR	1011183	Symbol	skyline		1008316						
ANR	1011184	Symbol	r_pvector_len		1008316						
ANR	1011185	Symbol	s -> perm		1008316						
ANR	1011186	Symbol	core -> anal		1008316						
ANR	1011187	Symbol	R_PERM_X		1008316						
ANR	1011188	Symbol	RIOMap		1008316						
ANR	1011189	Symbol	map -> name		1008316						
ANR	1011190	Symbol	R_PERM_W		1008316						
ANR	1011191	Symbol	core -> io		1008316						
ANR	1011192	Symbol	part -> map		1008316						
ANR	1011193	Symbol	free		1008316						
ANR	1011194	Symbol	map		1008316						
ANR	1011195	Symbol	r_bin_cur_object		1008316						
ANR	1011196	Symbol	r_str_startswith		1008316						
ANR	1011197	Symbol	bound_from		1008316						
ANR	1011198	Symbol	* part -> map		1008316						
ANR	1011199	Symbol	f		1008316						
ANR	1011200	Symbol	s -> vsize		1008316						
ANR	1011201	Symbol	i		1008316						
ANR	1011202	Symbol	R_MIN		1008316						
ANR	1011203	Symbol	bound_in		1008316						
ANR	1011204	Symbol	m		1008316						
ANR	1011205	Symbol	r_itv_end		1008316						
ANR	1011206	Symbol	s -> vaddr		1008316						
ANR	1011207	Symbol	s		1008316						
ANR	1011208	Symbol	part -> map -> perm		1008316						
ANR	1011209	Symbol	* mode		1008316						
ANR	1011210	Symbol	R_MAX		1008316						
ANR	1011211	Symbol	to		1008316						
ANR	1011212	Symbol	first		1008316						
ANR	1011213	Symbol	* len		1008316						
ANR	1011214	Symbol	bb -> size		1008316						
ANR	1011215	Symbol	* * part		1008316						
ANR	1011216	Symbol	r_anal_fcn_size		1008316						
ANR	1011217	Symbol	r_itv_begin		1008316						
ANR	1011218	Symbol	bb -> addr		1008316						
ANR	1011219	Symbol	* part		1008316						
ANR	1011220	Symbol	search_to		1008316						
ANR	1011221	Symbol	mode		1008316						
ANR	1011222	Symbol	strlen		1008316						
ANR	1011223	Symbol	r_io_fd_size		1008316						
ANR	1011224	Symbol	only		1008316						
ANR	1011225	Symbol	R_ANAL_FCN_TYPE_SYM		1008316						
ANR	1011226	Symbol	from		1008316						
ANR	1011227	Symbol	R_PERM_RWX		1008316						
ANR	1011228	Symbol	core -> tmpseek		1008316						
ANR	1011229	Symbol	strcmp		1008316						
ANR	1011230	Symbol	add		1008316						
ANR	1011231	Symbol	all		1008316						
ANR	1011232	Symbol	NULL		1008316						
ANR	1011233	Symbol	R_BETWEEN		1008316						
ANR	1011234	Symbol	list		1008316						
ANR	1011235	Symbol	core -> io -> va		1008316						
ANR	1011236	Symbol	core		1008316						
ANR	1011237	Symbol	strstr		1008316						
ANR	1011238	Symbol	map -> addr_end		1008316						
ANR	1011239	Symbol	true		1008316						
ANR	1011240	Symbol	core -> file -> fd		1008316						
ANR	1011241	Symbol	map -> perm		1008316						
ANR	1011242	Symbol	maskMatches		1008316						
ANR	1011243	Symbol	map -> itv		1008316						
ANR	1011244	Symbol	perm		1008316						
ANR	1011245	Symbol	* nmap		1008316						
ANR	1011246	Symbol	part		1008316						
ANR	1011247	Symbol	m -> perm		1008316						
ANR	1011248	Symbol	m -> itv . size		1008316						
ANR	1011249	Symbol	nmap -> delta		1008316						
ANR	1011250	Symbol	rwx		1008316						
ANR	1011251	Symbol	nmap -> itv . addr		1008316						
ANR	1011252	Symbol	r_itv_size		1008316						
ANR	1011253	Symbol	nmap -> perm		1008316						
ANR	1011254	Symbol	f -> addr		1008316						
ANR	1011255	Symbol	end		1008316						
ANR	1011256	Symbol	UT64_MAX		1008316						
ANR	1011257	Symbol	addr		1008316						
ANR	1011258	Symbol	heap		1008316						
ANR	1011259	Symbol	* * core		1008316						
ANR	1011260	Symbol	mask		1008316						
ANR	1011261	Symbol	core -> config		1008316						
ANR	1011262	Symbol	core -> file		1008316						
ANR	1011263	Symbol	& core -> io -> map_skyline		1008316						
ANR	1011264	Symbol	r_pvector_at		1008316						
ANR	1011265	Symbol	* bb		1008316						
ANR	1011266	Symbol	part -> itv		1008316						
ANR	1011267	Symbol	false		1008316						
ANR	1011268	Symbol	nmap -> itv		1008316						
ANR	1011269	Symbol	s -> paddr		1008316						
ANR	1011270	Symbol	nmap -> itv . size		1008316						
ANR	1011271	Symbol	* f		1008316						
ANR	1011272	Symbol	* core -> io		1008316						
ANR	1011273	Symbol	* core -> file		1008316						
ANR	1011274	Symbol	r_anal_get_fcn_in		1008316						
ANR	1011275	Symbol	obj		1008316						
ANR	1011276	Symbol	* m		1008316						
ANR	1011277	Symbol	m -> itv . addr		1008316						
ANR	1011278	Symbol	r_io_size		1008316						
ANR	1011279	Symbol	* s		1008316						
ANR	1011280	Symbol	r_io_map_get		1008316						
ANR	1011281	Symbol	core -> dbg		1008316						
ANR	1011282	Function	is_end_gadget	1018:0:31782:32598							
ANR	1011283	FunctionDef	"is_end_gadget (const RAnalOp * aop , const ut8 crop)"		1011282	0					
ANR	1011284	CompoundStatement		1018:62:31844:32598	1011282	0					
ANR	1011285	IfStatement	if ( aop -> family == R_ANAL_OP_FAMILY_PAC )		1011282	0					
ANR	1011286	Condition	aop -> family == R_ANAL_OP_FAMILY_PAC	1019:5:31851:31885	1011282	0	True				
ANR	1011287	EqualityExpression	aop -> family == R_ANAL_OP_FAMILY_PAC		1011282	0		==			
ANR	1011288	PtrMemberAccess	aop -> family		1011282	0					
ANR	1011289	Identifier	aop		1011282	0					
ANR	1011290	Identifier	family		1011282	1					
ANR	1011291	Identifier	R_ANAL_OP_FAMILY_PAC		1011282	1					
ANR	1011292	CompoundStatement		2:42:43:43	1011282	1					
ANR	1011293	ReturnStatement	return false ;	1020:2:31892:31904	1011282	0	True				
ANR	1011294	Identifier	false		1011282	0					
ANR	1011295	SwitchStatement	switch ( aop -> type )		1011282	1					
ANR	1011296	Condition	aop -> type	1022:9:31918:31926	1011282	0	True				
ANR	1011297	PtrMemberAccess	aop -> type		1011282	0					
ANR	1011298	Identifier	aop		1011282	0					
ANR	1011299	Identifier	type		1011282	1					
ANR	1011300	CompoundStatement		5:20:84:84	1011282	1					
ANR	1011301	Label	case R_ANAL_OP_TYPE_TRAP :	1023:1:31932:31956	1011282	0	True				
ANR	1011302	Identifier	R_ANAL_OP_TYPE_TRAP		1011282	0					
ANR	1011303	Label	case R_ANAL_OP_TYPE_RET :	1024:1:31959:31982	1011282	1	True				
ANR	1011304	Identifier	R_ANAL_OP_TYPE_RET		1011282	0					
ANR	1011305	Label	case R_ANAL_OP_TYPE_UCALL :	1025:1:31985:32010	1011282	2	True				
ANR	1011306	Identifier	R_ANAL_OP_TYPE_UCALL		1011282	0					
ANR	1011307	Label	case R_ANAL_OP_TYPE_RCALL :	1026:1:32013:32038	1011282	3	True				
ANR	1011308	Identifier	R_ANAL_OP_TYPE_RCALL		1011282	0					
ANR	1011309	Label	case R_ANAL_OP_TYPE_ICALL :	1027:1:32041:32066	1011282	4	True				
ANR	1011310	Identifier	R_ANAL_OP_TYPE_ICALL		1011282	0					
ANR	1011311	Label	case R_ANAL_OP_TYPE_IRCALL :	1028:1:32069:32095	1011282	5	True				
ANR	1011312	Identifier	R_ANAL_OP_TYPE_IRCALL		1011282	0					
ANR	1011313	Label	case R_ANAL_OP_TYPE_UJMP :	1029:1:32098:32122	1011282	6	True				
ANR	1011314	Identifier	R_ANAL_OP_TYPE_UJMP		1011282	0					
ANR	1011315	Label	case R_ANAL_OP_TYPE_RJMP :	1030:1:32125:32149	1011282	7	True				
ANR	1011316	Identifier	R_ANAL_OP_TYPE_RJMP		1011282	0					
ANR	1011317	Label	case R_ANAL_OP_TYPE_IJMP :	1031:1:32152:32176	1011282	8	True				
ANR	1011318	Identifier	R_ANAL_OP_TYPE_IJMP		1011282	0					
ANR	1011319	Label	case R_ANAL_OP_TYPE_IRJMP :	1032:1:32179:32204	1011282	9	True				
ANR	1011320	Identifier	R_ANAL_OP_TYPE_IRJMP		1011282	0					
ANR	1011321	Label	case R_ANAL_OP_TYPE_JMP :	1033:1:32207:32230	1011282	10	True				
ANR	1011322	Identifier	R_ANAL_OP_TYPE_JMP		1011282	0					
ANR	1011323	Label	case R_ANAL_OP_TYPE_CALL :	1034:1:32233:32257	1011282	11	True				
ANR	1011324	Identifier	R_ANAL_OP_TYPE_CALL		1011282	0					
ANR	1011325	ReturnStatement	return true ;	1035:2:32261:32272	1011282	12	True				
ANR	1011326	Identifier	true		1011282	0					
ANR	1011327	IfStatement	if ( crop )		1011282	2					
ANR	1011328	Condition	crop	1037:5:32282:32285	1011282	0	True				
ANR	1011329	Identifier	crop		1011282	0					
ANR	1011330	CompoundStatement		20:11:443:443	1011282	1					
ANR	1011331	SwitchStatement	switch ( aop -> type )		1011282	0					
ANR	1011332	Condition	aop -> type	1038:10:32384:32392	1011282	0	True				
ANR	1011333	PtrMemberAccess	aop -> type		1011282	0					
ANR	1011334	Identifier	aop		1011282	0					
ANR	1011335	Identifier	type		1011282	1					
ANR	1011336	CompoundStatement		21:21:550:550	1011282	1					
ANR	1011337	Label	case R_ANAL_OP_TYPE_CJMP :	1039:2:32399:32423	1011282	0	True				
ANR	1011338	Identifier	R_ANAL_OP_TYPE_CJMP		1011282	0					
ANR	1011339	Label	case R_ANAL_OP_TYPE_UCJMP :	1040:2:32427:32452	1011282	1	True				
ANR	1011340	Identifier	R_ANAL_OP_TYPE_UCJMP		1011282	0					
ANR	1011341	Label	case R_ANAL_OP_TYPE_CCALL :	1041:2:32456:32481	1011282	2	True				
ANR	1011342	Identifier	R_ANAL_OP_TYPE_CCALL		1011282	0					
ANR	1011343	Label	case R_ANAL_OP_TYPE_UCCALL :	1042:2:32485:32511	1011282	3	True				
ANR	1011344	Identifier	R_ANAL_OP_TYPE_UCCALL		1011282	0					
ANR	1011345	Label	case R_ANAL_OP_TYPE_CRET :	1043:2:32515:32539	1011282	4	True				
ANR	1011346	Identifier	R_ANAL_OP_TYPE_CRET		1011282	0					
ANR	1011347	ReturnStatement	return true ;	1044:3:32563:32574	1011282	5	True				
ANR	1011348	Identifier	true		1011282	0					
ANR	1011349	ReturnStatement	return false ;	1047:1:32584:32596	1011282	3	True				
ANR	1011350	Identifier	false		1011282	0					
ANR	1011351	ReturnType	static bool		1011282	1					
ANR	1011352	Identifier	is_end_gadget		1011282	2					
ANR	1011353	ParameterList	"const RAnalOp * aop , const ut8 crop"		1011282	3					
ANR	1011354	Parameter	const RAnalOp * aop	1018:26:31808:31825	1011282	0	True				
ANR	1011355	ParameterType	const RAnalOp *		1011282	0					
ANR	1011356	Identifier	aop		1011282	1					
ANR	1011357	Parameter	const ut8 crop	1018:46:31828:31841	1011282	1	True				
ANR	1011358	ParameterType	const ut8		1011282	0					
ANR	1011359	Identifier	crop		1011282	1					
ANR	1011360	CFGEntryNode	ENTRY		1011282		True				
ANR	1011361	CFGExitNode	EXIT		1011282		True				
ANR	1011362	Symbol	aop		1011282						
ANR	1011363	Symbol	* aop		1011282						
ANR	1011364	Symbol	false		1011282						
ANR	1011365	Symbol	true		1011282						
ANR	1011366	Symbol	R_ANAL_OP_FAMILY_PAC		1011282						
ANR	1011367	Symbol	aop -> family		1011282						
ANR	1011368	Symbol	crop		1011282						
ANR	1011369	Symbol	aop -> type		1011282						
ANR	1011370	Function	insert_into	1050:0:32601:32733							
ANR	1011371	FunctionDef	"insert_into (void * user , const ut64 k , const ut64 v)"		1011370	0					
ANR	1011372	CompoundStatement		1050:64:32665:32733	1011370	0					
ANR	1011373	IdentifierDeclStatement	HtUU * ht = ( HtUU * ) user ;	1051:1:32668:32691	1011370	0	True				
ANR	1011374	IdentifierDecl	* ht = ( HtUU * ) user		1011370	0					
ANR	1011375	IdentifierDeclType	HtUU *		1011370	0					
ANR	1011376	Identifier	ht		1011370	1					
ANR	1011377	AssignmentExpression	* ht = ( HtUU * ) user		1011370	2		=			
ANR	1011378	Identifier	ht		1011370	0					
ANR	1011379	CastExpression	( HtUU * ) user		1011370	1					
ANR	1011380	CastTarget	HtUU *		1011370	0					
ANR	1011381	Identifier	user		1011370	1					
ANR	1011382	ExpressionStatement	"ht_uu_insert ( ht , k , v )"	1052:1:32694:32717	1011370	1	True				
ANR	1011383	CallExpression	"ht_uu_insert ( ht , k , v )"		1011370	0					
ANR	1011384	Callee	ht_uu_insert		1011370	0					
ANR	1011385	Identifier	ht_uu_insert		1011370	0					
ANR	1011386	ArgumentList	ht		1011370	1					
ANR	1011387	Argument	ht		1011370	0					
ANR	1011388	Identifier	ht		1011370	0					
ANR	1011389	Argument	k		1011370	1					
ANR	1011390	Identifier	k		1011370	0					
ANR	1011391	Argument	v		1011370	2					
ANR	1011392	Identifier	v		1011370	0					
ANR	1011393	ReturnStatement	return true ;	1053:1:32720:32731	1011370	2	True				
ANR	1011394	Identifier	true		1011370	0					
ANR	1011395	ReturnType	static bool		1011370	1					
ANR	1011396	Identifier	insert_into		1011370	2					
ANR	1011397	ParameterList	"void * user , const ut64 k , const ut64 v"		1011370	3					
ANR	1011398	Parameter	void * user	1050:24:32625:32634	1011370	0	True				
ANR	1011399	ParameterType	void *		1011370	0					
ANR	1011400	Identifier	user		1011370	1					
ANR	1011401	Parameter	const ut64 k	1050:36:32637:32648	1011370	1	True				
ANR	1011402	ParameterType	const ut64		1011370	0					
ANR	1011403	Identifier	k		1011370	1					
ANR	1011404	Parameter	const ut64 v	1050:50:32651:32662	1011370	2	True				
ANR	1011405	ParameterType	const ut64		1011370	0					
ANR	1011406	Identifier	v		1011370	1					
ANR	1011407	CFGEntryNode	ENTRY		1011370		True				
ANR	1011408	CFGExitNode	EXIT		1011370		True				
ANR	1011409	Symbol	v		1011370						
ANR	1011410	Symbol	true		1011370						
ANR	1011411	Symbol	k		1011370						
ANR	1011412	Symbol	ht		1011370						
ANR	1011413	Symbol	user		1011370						
ANR	1011414	Function	construct_rop_gadget	1057:0:32772:36297							
ANR	1011415	FunctionDef	"construct_rop_gadget (RCore * core , ut64 addr , ut8 * buf , int buflen , int idx , const char * grep , int regex , RList * rx_list , struct endlist_pair * end_gadget , HtUU * badstart)"		1011414	0					
ANR	1011416	CompoundStatement		1057:184:32956:36297	1011414	0					
ANR	1011417	IdentifierDeclStatement	int endaddr = end_gadget -> instr_offset ;	1058:1:32959:32997	1011414	0	True				
ANR	1011418	IdentifierDecl	endaddr = end_gadget -> instr_offset		1011414	0					
ANR	1011419	IdentifierDeclType	int		1011414	0					
ANR	1011420	Identifier	endaddr		1011414	1					
ANR	1011421	AssignmentExpression	endaddr = end_gadget -> instr_offset		1011414	2		=			
ANR	1011422	Identifier	endaddr		1011414	0					
ANR	1011423	PtrMemberAccess	end_gadget -> instr_offset		1011414	1					
ANR	1011424	Identifier	end_gadget		1011414	0					
ANR	1011425	Identifier	instr_offset		1011414	1					
ANR	1011426	IdentifierDeclStatement	int branch_delay = end_gadget -> delay_size ;	1059:1:33000:33041	1011414	1	True				
ANR	1011427	IdentifierDecl	branch_delay = end_gadget -> delay_size		1011414	0					
ANR	1011428	IdentifierDeclType	int		1011414	0					
ANR	1011429	Identifier	branch_delay		1011414	1					
ANR	1011430	AssignmentExpression	branch_delay = end_gadget -> delay_size		1011414	2		=			
ANR	1011431	Identifier	branch_delay		1011414	0					
ANR	1011432	PtrMemberAccess	end_gadget -> delay_size		1011414	1					
ANR	1011433	Identifier	end_gadget		1011414	0					
ANR	1011434	Identifier	delay_size		1011414	1					
ANR	1011435	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	1060:1:33044:33061	1011414	2	True				
ANR	1011436	IdentifierDecl	aop = { 0 }		1011414	0					
ANR	1011437	IdentifierDeclType	RAnalOp		1011414	0					
ANR	1011438	Identifier	aop		1011414	1					
ANR	1011439	AssignmentExpression	aop = { 0 }		1011414	2		=			
ANR	1011440	Identifier	aop		1011414	0					
ANR	1011441	InitializerList	0		1011414	1					
ANR	1011442	PrimaryExpression	0		1011414	0					
ANR	1011443	IdentifierDeclStatement	"const char * start = NULL , * end = NULL ;"	1061:1:33064:33101	1011414	3	True				
ANR	1011444	IdentifierDecl	* start = NULL		1011414	0					
ANR	1011445	IdentifierDeclType	const char *		1011414	0					
ANR	1011446	Identifier	start		1011414	1					
ANR	1011447	AssignmentExpression	* start = NULL		1011414	2		=			
ANR	1011448	Identifier	NULL		1011414	0					
ANR	1011449	Identifier	NULL		1011414	1					
ANR	1011450	IdentifierDecl	* end = NULL		1011414	1					
ANR	1011451	IdentifierDeclType	const char *		1011414	0					
ANR	1011452	Identifier	end		1011414	1					
ANR	1011453	AssignmentExpression	* end = NULL		1011414	2		=			
ANR	1011454	Identifier	NULL		1011414	0					
ANR	1011455	Identifier	NULL		1011414	1					
ANR	1011456	IdentifierDeclStatement	char * grep_str = NULL ;	1062:1:33104:33125	1011414	4	True				
ANR	1011457	IdentifierDecl	* grep_str = NULL		1011414	0					
ANR	1011458	IdentifierDeclType	char *		1011414	0					
ANR	1011459	Identifier	grep_str		1011414	1					
ANR	1011460	AssignmentExpression	* grep_str = NULL		1011414	2		=			
ANR	1011461	Identifier	NULL		1011414	0					
ANR	1011462	Identifier	NULL		1011414	1					
ANR	1011463	IdentifierDeclStatement	RCoreAsmHit * hit = NULL ;	1063:1:33128:33151	1011414	5	True				
ANR	1011464	IdentifierDecl	* hit = NULL		1011414	0					
ANR	1011465	IdentifierDeclType	RCoreAsmHit *		1011414	0					
ANR	1011466	Identifier	hit		1011414	1					
ANR	1011467	AssignmentExpression	* hit = NULL		1011414	2		=			
ANR	1011468	Identifier	NULL		1011414	0					
ANR	1011469	Identifier	NULL		1011414	1					
ANR	1011470	IdentifierDeclStatement	RList * hitlist = r_core_asm_hit_list_new ( ) ;	1064:1:33154:33197	1011414	6	True				
ANR	1011471	IdentifierDecl	* hitlist = r_core_asm_hit_list_new ( )		1011414	0					
ANR	1011472	IdentifierDeclType	RList *		1011414	0					
ANR	1011473	Identifier	hitlist		1011414	1					
ANR	1011474	AssignmentExpression	* hitlist = r_core_asm_hit_list_new ( )		1011414	2		=			
ANR	1011475	Identifier	hitlist		1011414	0					
ANR	1011476	CallExpression	r_core_asm_hit_list_new ( )		1011414	1					
ANR	1011477	Callee	r_core_asm_hit_list_new		1011414	0					
ANR	1011478	Identifier	r_core_asm_hit_list_new		1011414	0					
ANR	1011479	ArgumentList			1011414	1					
ANR	1011480	IdentifierDeclStatement	ut8 nb_instr = 0 ;	1065:1:33200:33216	1011414	7	True				
ANR	1011481	IdentifierDecl	nb_instr = 0		1011414	0					
ANR	1011482	IdentifierDeclType	ut8		1011414	0					
ANR	1011483	Identifier	nb_instr		1011414	1					
ANR	1011484	AssignmentExpression	nb_instr = 0		1011414	2		=			
ANR	1011485	Identifier	nb_instr		1011414	0					
ANR	1011486	PrimaryExpression	0		1011414	1					
ANR	1011487	IdentifierDeclStatement	"const ut8 max_instr = r_config_get_i ( core -> config , ""rop.len"" ) ;"	1066:1:33219:33281	1011414	8	True				
ANR	1011488	IdentifierDecl	"max_instr = r_config_get_i ( core -> config , ""rop.len"" )"		1011414	0					
ANR	1011489	IdentifierDeclType	const ut8		1011414	0					
ANR	1011490	Identifier	max_instr		1011414	1					
ANR	1011491	AssignmentExpression	"max_instr = r_config_get_i ( core -> config , ""rop.len"" )"		1011414	2		=			
ANR	1011492	Identifier	max_instr		1011414	0					
ANR	1011493	CallExpression	"r_config_get_i ( core -> config , ""rop.len"" )"		1011414	1					
ANR	1011494	Callee	r_config_get_i		1011414	0					
ANR	1011495	Identifier	r_config_get_i		1011414	0					
ANR	1011496	ArgumentList	core -> config		1011414	1					
ANR	1011497	Argument	core -> config		1011414	0					
ANR	1011498	PtrMemberAccess	core -> config		1011414	0					
ANR	1011499	Identifier	core		1011414	0					
ANR	1011500	Identifier	config		1011414	1					
ANR	1011501	Argument	"""rop.len"""		1011414	1					
ANR	1011502	PrimaryExpression	"""rop.len"""		1011414	0					
ANR	1011503	IdentifierDeclStatement	bool valid = false ;	1067:1:33284:33302	1011414	9	True				
ANR	1011504	IdentifierDecl	valid = false		1011414	0					
ANR	1011505	IdentifierDeclType	bool		1011414	0					
ANR	1011506	Identifier	valid		1011414	1					
ANR	1011507	AssignmentExpression	valid = false		1011414	2		=			
ANR	1011508	Identifier	false		1011414	0					
ANR	1011509	Identifier	false		1011414	1					
ANR	1011510	IdentifierDeclStatement	int grep_find ;	1068:1:33305:33318	1011414	10	True				
ANR	1011511	IdentifierDecl	grep_find		1011414	0					
ANR	1011512	IdentifierDeclType	int		1011414	0					
ANR	1011513	Identifier	grep_find		1011414	1					
ANR	1011514	IdentifierDeclStatement	int search_hit ;	1069:1:33321:33335	1011414	11	True				
ANR	1011515	IdentifierDecl	search_hit		1011414	0					
ANR	1011516	IdentifierDeclType	int		1011414	0					
ANR	1011517	Identifier	search_hit		1011414	1					
ANR	1011518	IdentifierDeclStatement	char * rx = NULL ;	1070:1:33338:33353	1011414	12	True				
ANR	1011519	IdentifierDecl	* rx = NULL		1011414	0					
ANR	1011520	IdentifierDeclType	char *		1011414	0					
ANR	1011521	Identifier	rx		1011414	1					
ANR	1011522	AssignmentExpression	* rx = NULL		1011414	2		=			
ANR	1011523	Identifier	NULL		1011414	0					
ANR	1011524	Identifier	NULL		1011414	1					
ANR	1011525	IdentifierDeclStatement	HtUUOptions opt = { 0 } ;	1071:1:33356:33379	1011414	13	True				
ANR	1011526	IdentifierDecl	opt = { 0 }		1011414	0					
ANR	1011527	IdentifierDeclType	HtUUOptions		1011414	0					
ANR	1011528	Identifier	opt		1011414	1					
ANR	1011529	AssignmentExpression	opt = { 0 }		1011414	2		=			
ANR	1011530	Identifier	opt		1011414	0					
ANR	1011531	InitializerList	0		1011414	1					
ANR	1011532	PrimaryExpression	0		1011414	0					
ANR	1011533	IdentifierDeclStatement	HtUU * localbadstart = ht_uu_new_opt ( & opt ) ;	1072:1:33382:33424	1011414	14	True				
ANR	1011534	IdentifierDecl	* localbadstart = ht_uu_new_opt ( & opt )		1011414	0					
ANR	1011535	IdentifierDeclType	HtUU *		1011414	0					
ANR	1011536	Identifier	localbadstart		1011414	1					
ANR	1011537	AssignmentExpression	* localbadstart = ht_uu_new_opt ( & opt )		1011414	2		=			
ANR	1011538	Identifier	localbadstart		1011414	0					
ANR	1011539	CallExpression	ht_uu_new_opt ( & opt )		1011414	1					
ANR	1011540	Callee	ht_uu_new_opt		1011414	0					
ANR	1011541	Identifier	ht_uu_new_opt		1011414	0					
ANR	1011542	ArgumentList	& opt		1011414	1					
ANR	1011543	Argument	& opt		1011414	0					
ANR	1011544	UnaryOperationExpression	& opt		1011414	0					
ANR	1011545	UnaryOperator	&		1011414	0					
ANR	1011546	Identifier	opt		1011414	1					
ANR	1011547	IdentifierDeclStatement	int count = 0 ;	1073:1:33427:33440	1011414	15	True				
ANR	1011548	IdentifierDecl	count = 0		1011414	0					
ANR	1011549	IdentifierDeclType	int		1011414	0					
ANR	1011550	Identifier	count		1011414	1					
ANR	1011551	AssignmentExpression	count = 0		1011414	2		=			
ANR	1011552	Identifier	count		1011414	0					
ANR	1011553	PrimaryExpression	0		1011414	1					
ANR	1011554	IfStatement	if ( grep )		1011414	16					
ANR	1011555	Condition	grep	1075:5:33448:33451	1011414	0	True				
ANR	1011556	Identifier	grep		1011414	0					
ANR	1011557	CompoundStatement		19:11:497:497	1011414	1					
ANR	1011558	ExpressionStatement	start = grep	1076:2:33458:33470	1011414	0	True				
ANR	1011559	AssignmentExpression	start = grep		1011414	0		=			
ANR	1011560	Identifier	start		1011414	0					
ANR	1011561	Identifier	grep		1011414	1					
ANR	1011562	ExpressionStatement	"end = strstr ( grep , "";"" )"	1077:2:33474:33498	1011414	1	True				
ANR	1011563	AssignmentExpression	"end = strstr ( grep , "";"" )"		1011414	0		=			
ANR	1011564	Identifier	end		1011414	0					
ANR	1011565	CallExpression	"strstr ( grep , "";"" )"		1011414	1					
ANR	1011566	Callee	strstr		1011414	0					
ANR	1011567	Identifier	strstr		1011414	0					
ANR	1011568	ArgumentList	grep		1011414	1					
ANR	1011569	Argument	grep		1011414	0					
ANR	1011570	Identifier	grep		1011414	0					
ANR	1011571	Argument	""";"""		1011414	1					
ANR	1011572	PrimaryExpression	""";"""		1011414	0					
ANR	1011573	IfStatement	if ( ! end )		1011414	2					
ANR	1011574	Condition	! end	1078:6:33506:33509	1011414	0	True				
ANR	1011575	UnaryOperationExpression	! end		1011414	0					
ANR	1011576	UnaryOperator	!		1011414	0					
ANR	1011577	Identifier	end		1011414	1					
ANR	1011578	CompoundStatement		22:12:555:555	1011414	1					
ANR	1011579	ExpressionStatement	end = start + strlen ( grep )	1079:3:33560:33587	1011414	0	True				
ANR	1011580	AssignmentExpression	end = start + strlen ( grep )		1011414	0		=			
ANR	1011581	Identifier	end		1011414	0					
ANR	1011582	AdditiveExpression	start + strlen ( grep )		1011414	1		+			
ANR	1011583	Identifier	start		1011414	0					
ANR	1011584	CallExpression	strlen ( grep )		1011414	1					
ANR	1011585	Callee	strlen		1011414	0					
ANR	1011586	Identifier	strlen		1011414	0					
ANR	1011587	ArgumentList	grep		1011414	1					
ANR	1011588	Argument	grep		1011414	0					
ANR	1011589	Identifier	grep		1011414	0					
ANR	1011590	ExpressionStatement	"grep_str = calloc ( 1 , end - start + 1 )"	1081:2:33595:33633	1011414	3	True				
ANR	1011591	AssignmentExpression	"grep_str = calloc ( 1 , end - start + 1 )"		1011414	0		=			
ANR	1011592	Identifier	grep_str		1011414	0					
ANR	1011593	CallExpression	"calloc ( 1 , end - start + 1 )"		1011414	1					
ANR	1011594	Callee	calloc		1011414	0					
ANR	1011595	Identifier	calloc		1011414	0					
ANR	1011596	ArgumentList	1		1011414	1					
ANR	1011597	Argument	1		1011414	0					
ANR	1011598	PrimaryExpression	1		1011414	0					
ANR	1011599	Argument	end - start + 1		1011414	1					
ANR	1011600	AdditiveExpression	end - start + 1		1011414	0		-			
ANR	1011601	Identifier	end		1011414	0					
ANR	1011602	AdditiveExpression	start + 1		1011414	1		+			
ANR	1011603	Identifier	start		1011414	0					
ANR	1011604	PrimaryExpression	1		1011414	1					
ANR	1011605	ExpressionStatement	"strncpy ( grep_str , start , end - start )"	1082:2:33637:33675	1011414	4	True				
ANR	1011606	CallExpression	"strncpy ( grep_str , start , end - start )"		1011414	0					
ANR	1011607	Callee	strncpy		1011414	0					
ANR	1011608	Identifier	strncpy		1011414	0					
ANR	1011609	ArgumentList	grep_str		1011414	1					
ANR	1011610	Argument	grep_str		1011414	0					
ANR	1011611	Identifier	grep_str		1011414	0					
ANR	1011612	Argument	start		1011414	1					
ANR	1011613	Identifier	start		1011414	0					
ANR	1011614	Argument	end - start		1011414	2					
ANR	1011615	AdditiveExpression	end - start		1011414	0		-			
ANR	1011616	Identifier	end		1011414	0					
ANR	1011617	Identifier	start		1011414	1					
ANR	1011618	IfStatement	if ( regex )		1011414	5					
ANR	1011619	Condition	regex	1083:6:33683:33687	1011414	0	True				
ANR	1011620	Identifier	regex		1011414	0					
ANR	1011621	CompoundStatement		27:13:733:733	1011414	1					
ANR	1011622	IfStatement	if ( r_list_length ( rx_list ) > 0 )		1011414	0					
ANR	1011623	Condition	r_list_length ( rx_list ) > 0	1085:7:33727:33753	1011414	0	True				
ANR	1011624	RelationalExpression	r_list_length ( rx_list ) > 0		1011414	0		>			
ANR	1011625	CallExpression	r_list_length ( rx_list )		1011414	0					
ANR	1011626	Callee	r_list_length		1011414	0					
ANR	1011627	Identifier	r_list_length		1011414	0					
ANR	1011628	ArgumentList	rx_list		1011414	1					
ANR	1011629	Argument	rx_list		1011414	0					
ANR	1011630	Identifier	rx_list		1011414	0					
ANR	1011631	PrimaryExpression	0		1011414	1					
ANR	1011632	CompoundStatement		29:36:799:799	1011414	1					
ANR	1011633	ExpressionStatement	"rx = r_list_get_n ( rx_list , count ++ )"	1086:4:33762:33798	1011414	0	True				
ANR	1011634	AssignmentExpression	"rx = r_list_get_n ( rx_list , count ++ )"		1011414	0		=			
ANR	1011635	Identifier	rx		1011414	0					
ANR	1011636	CallExpression	"r_list_get_n ( rx_list , count ++ )"		1011414	1					
ANR	1011637	Callee	r_list_get_n		1011414	0					
ANR	1011638	Identifier	r_list_get_n		1011414	0					
ANR	1011639	ArgumentList	rx_list		1011414	1					
ANR	1011640	Argument	rx_list		1011414	0					
ANR	1011641	Identifier	rx_list		1011414	0					
ANR	1011642	Argument	count ++		1011414	1					
ANR	1011643	PostIncDecOperationExpression	count ++		1011414	0					
ANR	1011644	Identifier	count		1011414	0					
ANR	1011645	IncDec	++		1011414	1					
ANR	1011646	IdentifierDeclStatement	bool found ;	1091:1:33814:33824	1011414	17	True				
ANR	1011647	IdentifierDecl	found		1011414	0					
ANR	1011648	IdentifierDeclType	bool		1011414	0					
ANR	1011649	Identifier	found		1011414	1					
ANR	1011650	ExpressionStatement	"ht_uu_find ( badstart , idx , & found )"	1092:1:33827:33861	1011414	18	True				
ANR	1011651	CallExpression	"ht_uu_find ( badstart , idx , & found )"		1011414	0					
ANR	1011652	Callee	ht_uu_find		1011414	0					
ANR	1011653	Identifier	ht_uu_find		1011414	0					
ANR	1011654	ArgumentList	badstart		1011414	1					
ANR	1011655	Argument	badstart		1011414	0					
ANR	1011656	Identifier	badstart		1011414	0					
ANR	1011657	Argument	idx		1011414	1					
ANR	1011658	Identifier	idx		1011414	0					
ANR	1011659	Argument	& found		1011414	2					
ANR	1011660	UnaryOperationExpression	& found		1011414	0					
ANR	1011661	UnaryOperator	&		1011414	0					
ANR	1011662	Identifier	found		1011414	1					
ANR	1011663	IfStatement	if ( found )		1011414	19					
ANR	1011664	Condition	found	1093:5:33868:33872	1011414	0	True				
ANR	1011665	Identifier	found		1011414	0					
ANR	1011666	CompoundStatement		37:12:918:918	1011414	1					
ANR	1011667	ExpressionStatement	valid = false	1094:2:33879:33892	1011414	0	True				
ANR	1011668	AssignmentExpression	valid = false		1011414	0		=			
ANR	1011669	Identifier	valid		1011414	0					
ANR	1011670	Identifier	false		1011414	1					
ANR	1011671	GotoStatement	goto ret ;	1095:2:33896:33904	1011414	1	True				
ANR	1011672	Identifier	ret		1011414	0					
ANR	1011673	WhileStatement	while ( nb_instr < max_instr )		1011414	20					
ANR	1011674	Condition	nb_instr < max_instr	1097:8:33917:33936	1011414	0	True				
ANR	1011675	RelationalExpression	nb_instr < max_instr		1011414	0		<			
ANR	1011676	Identifier	nb_instr		1011414	0					
ANR	1011677	Identifier	max_instr		1011414	1					
ANR	1011678	CompoundStatement		51:2:1304:1329	1011414	1					
ANR	1011679	ExpressionStatement	"ht_uu_insert ( localbadstart , idx , 1 )"	1098:2:33943:33979	1011414	0	True				
ANR	1011680	CallExpression	"ht_uu_insert ( localbadstart , idx , 1 )"		1011414	0					
ANR	1011681	Callee	ht_uu_insert		1011414	0					
ANR	1011682	Identifier	ht_uu_insert		1011414	0					
ANR	1011683	ArgumentList	localbadstart		1011414	1					
ANR	1011684	Argument	localbadstart		1011414	0					
ANR	1011685	Identifier	localbadstart		1011414	0					
ANR	1011686	Argument	idx		1011414	1					
ANR	1011687	Identifier	idx		1011414	0					
ANR	1011688	Argument	1		1011414	2					
ANR	1011689	PrimaryExpression	1		1011414	0					
ANR	1011690	ExpressionStatement	"r_anal_op ( core -> anal , & aop , addr , buf + idx , buflen - idx , R_ANAL_OP_MASK_DISASM )"	1099:2:33983:34065	1011414	1	True				
ANR	1011691	CallExpression	"r_anal_op ( core -> anal , & aop , addr , buf + idx , buflen - idx , R_ANAL_OP_MASK_DISASM )"		1011414	0					
ANR	1011692	Callee	r_anal_op		1011414	0					
ANR	1011693	Identifier	r_anal_op		1011414	0					
ANR	1011694	ArgumentList	core -> anal		1011414	1					
ANR	1011695	Argument	core -> anal		1011414	0					
ANR	1011696	PtrMemberAccess	core -> anal		1011414	0					
ANR	1011697	Identifier	core		1011414	0					
ANR	1011698	Identifier	anal		1011414	1					
ANR	1011699	Argument	& aop		1011414	1					
ANR	1011700	UnaryOperationExpression	& aop		1011414	0					
ANR	1011701	UnaryOperator	&		1011414	0					
ANR	1011702	Identifier	aop		1011414	1					
ANR	1011703	Argument	addr		1011414	2					
ANR	1011704	Identifier	addr		1011414	0					
ANR	1011705	Argument	buf + idx		1011414	3					
ANR	1011706	AdditiveExpression	buf + idx		1011414	0		+			
ANR	1011707	Identifier	buf		1011414	0					
ANR	1011708	Identifier	idx		1011414	1					
ANR	1011709	Argument	buflen - idx		1011414	4					
ANR	1011710	AdditiveExpression	buflen - idx		1011414	0		-			
ANR	1011711	Identifier	buflen		1011414	0					
ANR	1011712	Identifier	idx		1011414	1					
ANR	1011713	Argument	R_ANAL_OP_MASK_DISASM		1011414	5					
ANR	1011714	Identifier	R_ANAL_OP_MASK_DISASM		1011414	0					
ANR	1011715	IfStatement	"if ( nb_instr == 0 && ( is_end_gadget ( & aop , 0 ) || aop . type == R_ANAL_OP_TYPE_NOP ) )"		1011414	2					
ANR	1011716	Condition	"nb_instr == 0 && ( is_end_gadget ( & aop , 0 ) || aop . type == R_ANAL_OP_TYPE_NOP )"	1101:6:34074:34149	1011414	0	True				
ANR	1011717	AndExpression	"nb_instr == 0 && ( is_end_gadget ( & aop , 0 ) || aop . type == R_ANAL_OP_TYPE_NOP )"		1011414	0		&&			
ANR	1011718	EqualityExpression	nb_instr == 0		1011414	0		==			
ANR	1011719	Identifier	nb_instr		1011414	0					
ANR	1011720	PrimaryExpression	0		1011414	1					
ANR	1011721	OrExpression	"is_end_gadget ( & aop , 0 ) || aop . type == R_ANAL_OP_TYPE_NOP"		1011414	1		||			
ANR	1011722	CallExpression	"is_end_gadget ( & aop , 0 )"		1011414	0					
ANR	1011723	Callee	is_end_gadget		1011414	0					
ANR	1011724	Identifier	is_end_gadget		1011414	0					
ANR	1011725	ArgumentList	& aop		1011414	1					
ANR	1011726	Argument	& aop		1011414	0					
ANR	1011727	UnaryOperationExpression	& aop		1011414	0					
ANR	1011728	UnaryOperator	&		1011414	0					
ANR	1011729	Identifier	aop		1011414	1					
ANR	1011730	Argument	0		1011414	1					
ANR	1011731	PrimaryExpression	0		1011414	0					
ANR	1011732	EqualityExpression	aop . type == R_ANAL_OP_TYPE_NOP		1011414	1		==			
ANR	1011733	MemberAccess	aop . type		1011414	0					
ANR	1011734	Identifier	aop		1011414	0					
ANR	1011735	Identifier	type		1011414	1					
ANR	1011736	Identifier	R_ANAL_OP_TYPE_NOP		1011414	1					
ANR	1011737	CompoundStatement		45:84:1195:1195	1011414	1					
ANR	1011738	ExpressionStatement	valid = false	1102:3:34157:34170	1011414	0	True				
ANR	1011739	AssignmentExpression	valid = false		1011414	0		=			
ANR	1011740	Identifier	valid		1011414	0					
ANR	1011741	Identifier	false		1011414	1					
ANR	1011742	GotoStatement	goto ret ;	1103:3:34175:34183	1011414	1	True				
ANR	1011743	Identifier	ret		1011414	0					
ANR	1011744	IdentifierDeclStatement	const int opsz = aop . size ;	1105:2:34191:34216	1011414	3	True				
ANR	1011745	IdentifierDecl	opsz = aop . size		1011414	0					
ANR	1011746	IdentifierDeclType	const int		1011414	0					
ANR	1011747	Identifier	opsz		1011414	1					
ANR	1011748	AssignmentExpression	opsz = aop . size		1011414	2		=			
ANR	1011749	Identifier	opsz		1011414	0					
ANR	1011750	MemberAccess	aop . size		1011414	1					
ANR	1011751	Identifier	aop		1011414	0					
ANR	1011752	Identifier	size		1011414	1					
ANR	1011753	IdentifierDeclStatement	char * opst = aop . mnemonic ;	1107:2:34261:34286	1011414	4	True				
ANR	1011754	IdentifierDecl	* opst = aop . mnemonic		1011414	0					
ANR	1011755	IdentifierDeclType	char *		1011414	0					
ANR	1011756	Identifier	opst		1011414	1					
ANR	1011757	AssignmentExpression	* opst = aop . mnemonic		1011414	2		=			
ANR	1011758	Identifier	opst		1011414	0					
ANR	1011759	MemberAccess	aop . mnemonic		1011414	1					
ANR	1011760	Identifier	aop		1011414	0					
ANR	1011761	Identifier	mnemonic		1011414	1					
ANR	1011762	IfStatement	if ( ! opst )		1011414	5					
ANR	1011763	Condition	! opst	1108:6:34294:34298	1011414	0	True				
ANR	1011764	UnaryOperationExpression	! opst		1011414	0					
ANR	1011765	UnaryOperator	!		1011414	0					
ANR	1011766	Identifier	opst		1011414	1					
ANR	1011767	CompoundStatement		54:3:1435:1447	1011414	1					
ANR	1011768	ExpressionStatement	"R_LOG_WARN ( ""Anal plugin %s did not return disassembly\\n"" , core -> anal -> cur -> name )"	1109:3:34306:34387	1011414	0	True				
ANR	1011769	CallExpression	"R_LOG_WARN ( ""Anal plugin %s did not return disassembly\\n"" , core -> anal -> cur -> name )"		1011414	0					
ANR	1011770	Callee	R_LOG_WARN		1011414	0					
ANR	1011771	Identifier	R_LOG_WARN		1011414	0					
ANR	1011772	ArgumentList	"""Anal plugin %s did not return disassembly\\n"""		1011414	1					
ANR	1011773	Argument	"""Anal plugin %s did not return disassembly\\n"""		1011414	0					
ANR	1011774	PrimaryExpression	"""Anal plugin %s did not return disassembly\\n"""		1011414	0					
ANR	1011775	Argument	core -> anal -> cur -> name		1011414	1					
ANR	1011776	PtrMemberAccess	core -> anal -> cur -> name		1011414	0					
ANR	1011777	PtrMemberAccess	core -> anal -> cur		1011414	0					
ANR	1011778	PtrMemberAccess	core -> anal		1011414	0					
ANR	1011779	Identifier	core		1011414	0					
ANR	1011780	Identifier	anal		1011414	1					
ANR	1011781	Identifier	cur		1011414	1					
ANR	1011782	Identifier	name		1011414	1					
ANR	1011783	IdentifierDeclStatement	RAsmOp asmop ;	1110:3:34392:34404	1011414	1	True				
ANR	1011784	IdentifierDecl	asmop		1011414	0					
ANR	1011785	IdentifierDeclType	RAsmOp		1011414	0					
ANR	1011786	Identifier	asmop		1011414	1					
ANR	1011787	ExpressionStatement	"r_asm_set_pc ( core -> assembler , addr )"	1111:3:34409:34445	1011414	2	True				
ANR	1011788	CallExpression	"r_asm_set_pc ( core -> assembler , addr )"		1011414	0					
ANR	1011789	Callee	r_asm_set_pc		1011414	0					
ANR	1011790	Identifier	r_asm_set_pc		1011414	0					
ANR	1011791	ArgumentList	core -> assembler		1011414	1					
ANR	1011792	Argument	core -> assembler		1011414	0					
ANR	1011793	PtrMemberAccess	core -> assembler		1011414	0					
ANR	1011794	Identifier	core		1011414	0					
ANR	1011795	Identifier	assembler		1011414	1					
ANR	1011796	Argument	addr		1011414	1					
ANR	1011797	Identifier	addr		1011414	0					
ANR	1011798	IfStatement	"if ( ! r_asm_disassemble ( core -> assembler , & asmop , buf + idx , buflen - idx ) )"		1011414	3					
ANR	1011799	Condition	"! r_asm_disassemble ( core -> assembler , & asmop , buf + idx , buflen - idx )"	1112:7:34454:34522	1011414	0	True				
ANR	1011800	UnaryOperationExpression	"! r_asm_disassemble ( core -> assembler , & asmop , buf + idx , buflen - idx )"		1011414	0					
ANR	1011801	UnaryOperator	!		1011414	0					
ANR	1011802	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf + idx , buflen - idx )"		1011414	1					
ANR	1011803	Callee	r_asm_disassemble		1011414	0					
ANR	1011804	Identifier	r_asm_disassemble		1011414	0					
ANR	1011805	ArgumentList	core -> assembler		1011414	1					
ANR	1011806	Argument	core -> assembler		1011414	0					
ANR	1011807	PtrMemberAccess	core -> assembler		1011414	0					
ANR	1011808	Identifier	core		1011414	0					
ANR	1011809	Identifier	assembler		1011414	1					
ANR	1011810	Argument	& asmop		1011414	1					
ANR	1011811	UnaryOperationExpression	& asmop		1011414	0					
ANR	1011812	UnaryOperator	&		1011414	0					
ANR	1011813	Identifier	asmop		1011414	1					
ANR	1011814	Argument	buf + idx		1011414	2					
ANR	1011815	AdditiveExpression	buf + idx		1011414	0		+			
ANR	1011816	Identifier	buf		1011414	0					
ANR	1011817	Identifier	idx		1011414	1					
ANR	1011818	Argument	buflen - idx		1011414	3					
ANR	1011819	AdditiveExpression	buflen - idx		1011414	0		-			
ANR	1011820	Identifier	buflen		1011414	0					
ANR	1011821	Identifier	idx		1011414	1					
ANR	1011822	CompoundStatement		56:78:1568:1568	1011414	1					
ANR	1011823	ExpressionStatement	valid = false	1113:4:34531:34544	1011414	0	True				
ANR	1011824	AssignmentExpression	valid = false		1011414	0		=			
ANR	1011825	Identifier	valid		1011414	0					
ANR	1011826	Identifier	false		1011414	1					
ANR	1011827	GotoStatement	goto ret ;	1114:4:34550:34558	1011414	1	True				
ANR	1011828	Identifier	ret		1011414	0					
ANR	1011829	ExpressionStatement	opst = strdup ( r_asm_op_get_asm ( & asmop ) )	1116:3:34568:34609	1011414	4	True				
ANR	1011830	AssignmentExpression	opst = strdup ( r_asm_op_get_asm ( & asmop ) )		1011414	0		=			
ANR	1011831	Identifier	opst		1011414	0					
ANR	1011832	CallExpression	strdup ( r_asm_op_get_asm ( & asmop ) )		1011414	1					
ANR	1011833	Callee	strdup		1011414	0					
ANR	1011834	Identifier	strdup		1011414	0					
ANR	1011835	ArgumentList	r_asm_op_get_asm ( & asmop )		1011414	1					
ANR	1011836	Argument	r_asm_op_get_asm ( & asmop )		1011414	0					
ANR	1011837	CallExpression	r_asm_op_get_asm ( & asmop )		1011414	0					
ANR	1011838	Callee	r_asm_op_get_asm		1011414	0					
ANR	1011839	Identifier	r_asm_op_get_asm		1011414	0					
ANR	1011840	ArgumentList	& asmop		1011414	1					
ANR	1011841	Argument	& asmop		1011414	0					
ANR	1011842	UnaryOperationExpression	& asmop		1011414	0					
ANR	1011843	UnaryOperator	&		1011414	0					
ANR	1011844	Identifier	asmop		1011414	1					
ANR	1011845	ExpressionStatement	r_asm_op_fini ( & asmop )	1117:3:34614:34636	1011414	5	True				
ANR	1011846	CallExpression	r_asm_op_fini ( & asmop )		1011414	0					
ANR	1011847	Callee	r_asm_op_fini		1011414	0					
ANR	1011848	Identifier	r_asm_op_fini		1011414	0					
ANR	1011849	ArgumentList	& asmop		1011414	1					
ANR	1011850	Argument	& asmop		1011414	0					
ANR	1011851	UnaryOperationExpression	& asmop		1011414	0					
ANR	1011852	UnaryOperator	&		1011414	0					
ANR	1011853	Identifier	asmop		1011414	1					
ANR	1011854	IfStatement	"if ( ! r_str_ncasecmp ( opst , ""invalid"" , strlen ( ""invalid"" ) ) || ! r_str_ncasecmp ( opst , "".byte"" , strlen ( "".byte"" ) ) )"		1011414	6					
ANR	1011855	Condition	"! r_str_ncasecmp ( opst , ""invalid"" , strlen ( ""invalid"" ) ) || ! r_str_ncasecmp ( opst , "".byte"" , strlen ( "".byte"" ) )"	1119:6:34648:34759	1011414	0	True				
ANR	1011856	OrExpression	"! r_str_ncasecmp ( opst , ""invalid"" , strlen ( ""invalid"" ) ) || ! r_str_ncasecmp ( opst , "".byte"" , strlen ( "".byte"" ) )"		1011414	0		||			
ANR	1011857	UnaryOperationExpression	"! r_str_ncasecmp ( opst , ""invalid"" , strlen ( ""invalid"" ) )"		1011414	0					
ANR	1011858	UnaryOperator	!		1011414	0					
ANR	1011859	CallExpression	"r_str_ncasecmp ( opst , ""invalid"" , strlen ( ""invalid"" ) )"		1011414	1					
ANR	1011860	Callee	r_str_ncasecmp		1011414	0					
ANR	1011861	Identifier	r_str_ncasecmp		1011414	0					
ANR	1011862	ArgumentList	opst		1011414	1					
ANR	1011863	Argument	opst		1011414	0					
ANR	1011864	Identifier	opst		1011414	0					
ANR	1011865	Argument	"""invalid"""		1011414	1					
ANR	1011866	PrimaryExpression	"""invalid"""		1011414	0					
ANR	1011867	Argument	"strlen ( ""invalid"" )"		1011414	2					
ANR	1011868	CallExpression	"strlen ( ""invalid"" )"		1011414	0					
ANR	1011869	Callee	strlen		1011414	0					
ANR	1011870	Identifier	strlen		1011414	0					
ANR	1011871	ArgumentList	"""invalid"""		1011414	1					
ANR	1011872	Argument	"""invalid"""		1011414	0					
ANR	1011873	PrimaryExpression	"""invalid"""		1011414	0					
ANR	1011874	UnaryOperationExpression	"! r_str_ncasecmp ( opst , "".byte"" , strlen ( "".byte"" ) )"		1011414	1					
ANR	1011875	UnaryOperator	!		1011414	0					
ANR	1011876	CallExpression	"r_str_ncasecmp ( opst , "".byte"" , strlen ( "".byte"" ) )"		1011414	1					
ANR	1011877	Callee	r_str_ncasecmp		1011414	0					
ANR	1011878	Identifier	r_str_ncasecmp		1011414	0					
ANR	1011879	ArgumentList	opst		1011414	1					
ANR	1011880	Argument	opst		1011414	0					
ANR	1011881	Identifier	opst		1011414	0					
ANR	1011882	Argument	""".byte"""		1011414	1					
ANR	1011883	PrimaryExpression	""".byte"""		1011414	0					
ANR	1011884	Argument	"strlen ( "".byte"" )"		1011414	2					
ANR	1011885	CallExpression	"strlen ( "".byte"" )"		1011414	0					
ANR	1011886	Callee	strlen		1011414	0					
ANR	1011887	Identifier	strlen		1011414	0					
ANR	1011888	ArgumentList	""".byte"""		1011414	1					
ANR	1011889	Argument	""".byte"""		1011414	0					
ANR	1011890	PrimaryExpression	""".byte"""		1011414	0					
ANR	1011891	CompoundStatement		64:57:1805:1805	1011414	1					
ANR	1011892	ExpressionStatement	valid = false	1121:3:34767:34780	1011414	0	True				
ANR	1011893	AssignmentExpression	valid = false		1011414	0		=			
ANR	1011894	Identifier	valid		1011414	0					
ANR	1011895	Identifier	false		1011414	1					
ANR	1011896	GotoStatement	goto ret ;	1122:3:34785:34793	1011414	1	True				
ANR	1011897	Identifier	ret		1011414	0					
ANR	1011898	ExpressionStatement	hit = r_core_asm_hit_new ( )	1125:2:34802:34829	1011414	7	True				
ANR	1011899	AssignmentExpression	hit = r_core_asm_hit_new ( )		1011414	0		=			
ANR	1011900	Identifier	hit		1011414	0					
ANR	1011901	CallExpression	r_core_asm_hit_new ( )		1011414	1					
ANR	1011902	Callee	r_core_asm_hit_new		1011414	0					
ANR	1011903	Identifier	r_core_asm_hit_new		1011414	0					
ANR	1011904	ArgumentList			1011414	1					
ANR	1011905	IfStatement	if ( hit )		1011414	8					
ANR	1011906	Condition	hit	1126:6:34837:34839	1011414	0	True				
ANR	1011907	Identifier	hit		1011414	0					
ANR	1011908	CompoundStatement		70:11:1885:1885	1011414	1					
ANR	1011909	ExpressionStatement	hit -> addr = addr	1127:3:34847:34863	1011414	0	True				
ANR	1011910	AssignmentExpression	hit -> addr = addr		1011414	0		=			
ANR	1011911	PtrMemberAccess	hit -> addr		1011414	0					
ANR	1011912	Identifier	hit		1011414	0					
ANR	1011913	Identifier	addr		1011414	1					
ANR	1011914	Identifier	addr		1011414	1					
ANR	1011915	ExpressionStatement	hit -> len = opsz	1128:3:34868:34883	1011414	1	True				
ANR	1011916	AssignmentExpression	hit -> len = opsz		1011414	0		=			
ANR	1011917	PtrMemberAccess	hit -> len		1011414	0					
ANR	1011918	Identifier	hit		1011414	0					
ANR	1011919	Identifier	len		1011414	1					
ANR	1011920	Identifier	opsz		1011414	1					
ANR	1011921	ExpressionStatement	"r_list_append ( hitlist , hit )"	1129:3:34888:34916	1011414	2	True				
ANR	1011922	CallExpression	"r_list_append ( hitlist , hit )"		1011414	0					
ANR	1011923	Callee	r_list_append		1011414	0					
ANR	1011924	Identifier	r_list_append		1011414	0					
ANR	1011925	ArgumentList	hitlist		1011414	1					
ANR	1011926	Argument	hitlist		1011414	0					
ANR	1011927	Identifier	hitlist		1011414	0					
ANR	1011928	Argument	hit		1011414	1					
ANR	1011929	Identifier	hit		1011414	0					
ANR	1011930	ExpressionStatement	idx += opsz	1133:2:34962:34973	1011414	9	True				
ANR	1011931	AssignmentExpression	idx += opsz		1011414	0		+=			
ANR	1011932	Identifier	idx		1011414	0					
ANR	1011933	Identifier	opsz		1011414	1					
ANR	1011934	ExpressionStatement	addr += opsz	1134:2:34977:34989	1011414	10	True				
ANR	1011935	AssignmentExpression	addr += opsz		1011414	0		+=			
ANR	1011936	Identifier	addr		1011414	0					
ANR	1011937	Identifier	opsz		1011414	1					
ANR	1011938	IfStatement	if ( rx )		1011414	11					
ANR	1011939	Condition	rx	1135:6:34997:34998	1011414	0	True				
ANR	1011940	Identifier	rx		1011414	0					
ANR	1011941	CompoundStatement		79:10:2044:2044	1011414	1					
ANR	1011942	ExpressionStatement	"grep_find = ! r_regex_match ( rx , ""e"" , opst )"	1136:3:35006:35048	1011414	0	True				
ANR	1011943	AssignmentExpression	"grep_find = ! r_regex_match ( rx , ""e"" , opst )"		1011414	0		=			
ANR	1011944	Identifier	grep_find		1011414	0					
ANR	1011945	UnaryOperationExpression	"! r_regex_match ( rx , ""e"" , opst )"		1011414	1					
ANR	1011946	UnaryOperator	!		1011414	0					
ANR	1011947	CallExpression	"r_regex_match ( rx , ""e"" , opst )"		1011414	1					
ANR	1011948	Callee	r_regex_match		1011414	0					
ANR	1011949	Identifier	r_regex_match		1011414	0					
ANR	1011950	ArgumentList	rx		1011414	1					
ANR	1011951	Argument	rx		1011414	0					
ANR	1011952	Identifier	rx		1011414	0					
ANR	1011953	Argument	"""e"""		1011414	1					
ANR	1011954	PrimaryExpression	"""e"""		1011414	0					
ANR	1011955	Argument	opst		1011414	2					
ANR	1011956	Identifier	opst		1011414	0					
ANR	1011957	ExpressionStatement	search_hit = ( end && grep && ( grep_find < 1 ) )	1137:3:35053:35098	1011414	1	True				
ANR	1011958	AssignmentExpression	search_hit = ( end && grep && ( grep_find < 1 ) )		1011414	0		=			
ANR	1011959	Identifier	search_hit		1011414	0					
ANR	1011960	AndExpression	end && grep && ( grep_find < 1 )		1011414	1		&&			
ANR	1011961	Identifier	end		1011414	0					
ANR	1011962	AndExpression	grep && ( grep_find < 1 )		1011414	1		&&			
ANR	1011963	Identifier	grep		1011414	0					
ANR	1011964	RelationalExpression	grep_find < 1		1011414	1		<			
ANR	1011965	Identifier	grep_find		1011414	0					
ANR	1011966	PrimaryExpression	1		1011414	1					
ANR	1011967	ElseStatement	else		1011414	0					
ANR	1011968	CompoundStatement		82:9:2152:2152	1011414	0					
ANR	1011969	ExpressionStatement	"search_hit = ( end && grep && strstr ( opst , grep_str ) )"	1139:3:35114:35167	1011414	0	True				
ANR	1011970	AssignmentExpression	"search_hit = ( end && grep && strstr ( opst , grep_str ) )"		1011414	0		=			
ANR	1011971	Identifier	search_hit		1011414	0					
ANR	1011972	AndExpression	"end && grep && strstr ( opst , grep_str )"		1011414	1		&&			
ANR	1011973	Identifier	end		1011414	0					
ANR	1011974	AndExpression	"grep && strstr ( opst , grep_str )"		1011414	1		&&			
ANR	1011975	Identifier	grep		1011414	0					
ANR	1011976	CallExpression	"strstr ( opst , grep_str )"		1011414	1					
ANR	1011977	Callee	strstr		1011414	0					
ANR	1011978	Identifier	strstr		1011414	0					
ANR	1011979	ArgumentList	opst		1011414	1					
ANR	1011980	Argument	opst		1011414	0					
ANR	1011981	Identifier	opst		1011414	0					
ANR	1011982	Argument	grep_str		1011414	1					
ANR	1011983	Identifier	grep_str		1011414	0					
ANR	1011984	IfStatement	if ( search_hit )		1011414	12					
ANR	1011985	Condition	search_hit	1143:6:35208:35217	1011414	0	True				
ANR	1011986	Identifier	search_hit		1011414	0					
ANR	1011987	CompoundStatement		87:18:2263:2263	1011414	1					
ANR	1011988	IfStatement	if ( end [ 0 ] == ';' )		1011414	0					
ANR	1011989	Condition	end [ 0 ] == ';'	1144:7:35229:35241	1011414	0	True				
ANR	1011990	EqualityExpression	end [ 0 ] == ';'		1011414	0		==			
ANR	1011991	ArrayIndexing	end [ 0 ]		1011414	0					
ANR	1011992	Identifier	end		1011414	0					
ANR	1011993	PrimaryExpression	0		1011414	1					
ANR	1011994	PrimaryExpression	';'		1011414	1					
ANR	1011995	CompoundStatement		88:22:2287:2287	1011414	1					
ANR	1011996	ExpressionStatement	start = end + 1	1145:4:35284:35299	1011414	0	True				
ANR	1011997	AssignmentExpression	start = end + 1		1011414	0		=			
ANR	1011998	Identifier	start		1011414	0					
ANR	1011999	AdditiveExpression	end + 1		1011414	1		+			
ANR	1012000	Identifier	end		1011414	0					
ANR	1012001	PrimaryExpression	1		1011414	1					
ANR	1012002	ExpressionStatement	"end = strstr ( start , "";"" )"	1146:4:35319:35344	1011414	1	True				
ANR	1012003	AssignmentExpression	"end = strstr ( start , "";"" )"		1011414	0		=			
ANR	1012004	Identifier	end		1011414	0					
ANR	1012005	CallExpression	"strstr ( start , "";"" )"		1011414	1					
ANR	1012006	Callee	strstr		1011414	0					
ANR	1012007	Identifier	strstr		1011414	0					
ANR	1012008	ArgumentList	start		1011414	1					
ANR	1012009	Argument	start		1011414	0					
ANR	1012010	Identifier	start		1011414	0					
ANR	1012011	Argument	""";"""		1011414	1					
ANR	1012012	PrimaryExpression	""";"""		1011414	0					
ANR	1012013	ExpressionStatement	end = end ? end : start + strlen ( start )	1147:4:35350:35388	1011414	2	True				
ANR	1012014	AssignmentExpression	end = end ? end : start + strlen ( start )		1011414	0		=			
ANR	1012015	Identifier	end		1011414	0					
ANR	1012016	ConditionalExpression	end ? end : start + strlen ( start )		1011414	1					
ANR	1012017	Condition	end		1011414	0					
ANR	1012018	Identifier	end		1011414	0					
ANR	1012019	Identifier	end		1011414	1					
ANR	1012020	AdditiveExpression	start + strlen ( start )		1011414	2		+			
ANR	1012021	Identifier	start		1011414	0					
ANR	1012022	CallExpression	strlen ( start )		1011414	1					
ANR	1012023	Callee	strlen		1011414	0					
ANR	1012024	Identifier	strlen		1011414	0					
ANR	1012025	ArgumentList	start		1011414	1					
ANR	1012026	Argument	start		1011414	0					
ANR	1012027	Identifier	start		1011414	0					
ANR	1012028	ExpressionStatement	free ( grep_str )	1148:4:35411:35426	1011414	3	True				
ANR	1012029	CallExpression	free ( grep_str )		1011414	0					
ANR	1012030	Callee	free		1011414	0					
ANR	1012031	Identifier	free		1011414	0					
ANR	1012032	ArgumentList	grep_str		1011414	1					
ANR	1012033	Argument	grep_str		1011414	0					
ANR	1012034	Identifier	grep_str		1011414	0					
ANR	1012035	ExpressionStatement	"grep_str = calloc ( 1 , end - start + 1 )"	1149:4:35432:35470	1011414	4	True				
ANR	1012036	AssignmentExpression	"grep_str = calloc ( 1 , end - start + 1 )"		1011414	0		=			
ANR	1012037	Identifier	grep_str		1011414	0					
ANR	1012038	CallExpression	"calloc ( 1 , end - start + 1 )"		1011414	1					
ANR	1012039	Callee	calloc		1011414	0					
ANR	1012040	Identifier	calloc		1011414	0					
ANR	1012041	ArgumentList	1		1011414	1					
ANR	1012042	Argument	1		1011414	0					
ANR	1012043	PrimaryExpression	1		1011414	0					
ANR	1012044	Argument	end - start + 1		1011414	1					
ANR	1012045	AdditiveExpression	end - start + 1		1011414	0		-			
ANR	1012046	Identifier	end		1011414	0					
ANR	1012047	AdditiveExpression	start + 1		1011414	1		+			
ANR	1012048	Identifier	start		1011414	0					
ANR	1012049	PrimaryExpression	1		1011414	1					
ANR	1012050	IfStatement	if ( grep_str )		1011414	5					
ANR	1012051	Condition	grep_str	1150:8:35480:35487	1011414	0	True				
ANR	1012052	Identifier	grep_str		1011414	0					
ANR	1012053	CompoundStatement		94:18:2533:2533	1011414	1					
ANR	1012054	ExpressionStatement	"strncpy ( grep_str , start , end - start )"	1151:5:35497:35535	1011414	0	True				
ANR	1012055	CallExpression	"strncpy ( grep_str , start , end - start )"		1011414	0					
ANR	1012056	Callee	strncpy		1011414	0					
ANR	1012057	Identifier	strncpy		1011414	0					
ANR	1012058	ArgumentList	grep_str		1011414	1					
ANR	1012059	Argument	grep_str		1011414	0					
ANR	1012060	Identifier	grep_str		1011414	0					
ANR	1012061	Argument	start		1011414	1					
ANR	1012062	Identifier	start		1011414	0					
ANR	1012063	Argument	end - start		1011414	2					
ANR	1012064	AdditiveExpression	end - start		1011414	0		-			
ANR	1012065	Identifier	end		1011414	0					
ANR	1012066	Identifier	start		1011414	1					
ANR	1012067	ElseStatement	else		1011414	0					
ANR	1012068	CompoundStatement		97:10:2596:2596	1011414	0					
ANR	1012069	ExpressionStatement	end = NULL	1154:4:35559:35569	1011414	0	True				
ANR	1012070	AssignmentExpression	end = NULL		1011414	0		=			
ANR	1012071	Identifier	end		1011414	0					
ANR	1012072	Identifier	NULL		1011414	1					
ANR	1012073	IfStatement	if ( regex )		1011414	1					
ANR	1012074	Condition	regex	1156:7:35583:35587	1011414	0	True				
ANR	1012075	Identifier	regex		1011414	0					
ANR	1012076	CompoundStatement		100:14:2633:2633	1011414	1					
ANR	1012077	ExpressionStatement	"rx = r_list_get_n ( rx_list , count ++ )"	1157:4:35596:35632	1011414	0	True				
ANR	1012078	AssignmentExpression	"rx = r_list_get_n ( rx_list , count ++ )"		1011414	0		=			
ANR	1012079	Identifier	rx		1011414	0					
ANR	1012080	CallExpression	"r_list_get_n ( rx_list , count ++ )"		1011414	1					
ANR	1012081	Callee	r_list_get_n		1011414	0					
ANR	1012082	Identifier	r_list_get_n		1011414	0					
ANR	1012083	ArgumentList	rx_list		1011414	1					
ANR	1012084	Argument	rx_list		1011414	0					
ANR	1012085	Identifier	rx_list		1011414	0					
ANR	1012086	Argument	count ++		1011414	1					
ANR	1012087	PostIncDecOperationExpression	count ++		1011414	0					
ANR	1012088	Identifier	count		1011414	0					
ANR	1012089	IncDec	++		1011414	1					
ANR	1012090	IfStatement	if ( endaddr <= ( idx - opsz ) )		1011414	13					
ANR	1012091	Condition	endaddr <= ( idx - opsz )	1160:6:35649:35671	1011414	0	True				
ANR	1012092	RelationalExpression	endaddr <= ( idx - opsz )		1011414	0		<=			
ANR	1012093	Identifier	endaddr		1011414	0					
ANR	1012094	AdditiveExpression	idx - opsz		1011414	1		-			
ANR	1012095	Identifier	idx		1011414	0					
ANR	1012096	Identifier	opsz		1011414	1					
ANR	1012097	CompoundStatement		104:31:2717:2717	1011414	1					
ANR	1012098	ExpressionStatement	valid = ( endaddr == idx - opsz )	1161:3:35679:35710	1011414	0	True				
ANR	1012099	AssignmentExpression	valid = ( endaddr == idx - opsz )		1011414	0		=			
ANR	1012100	Identifier	valid		1011414	0					
ANR	1012101	EqualityExpression	endaddr == idx - opsz		1011414	1		==			
ANR	1012102	Identifier	endaddr		1011414	0					
ANR	1012103	AdditiveExpression	idx - opsz		1011414	1		-			
ANR	1012104	Identifier	idx		1011414	0					
ANR	1012105	Identifier	opsz		1011414	1					
ANR	1012106	GotoStatement	goto ret ;	1162:3:35715:35723	1011414	1	True				
ANR	1012107	Identifier	ret		1011414	0					
ANR	1012108	ExpressionStatement	free ( opst )	1164:2:35731:35742	1011414	14	True				
ANR	1012109	CallExpression	free ( opst )		1011414	0					
ANR	1012110	Callee	free		1011414	0					
ANR	1012111	Identifier	free		1011414	0					
ANR	1012112	ArgumentList	opst		1011414	1					
ANR	1012113	Argument	opst		1011414	0					
ANR	1012114	Identifier	opst		1011414	0					
ANR	1012115	ExpressionStatement	aop . mnemonic = NULL	1165:2:35746:35765	1011414	15	True				
ANR	1012116	AssignmentExpression	aop . mnemonic = NULL		1011414	0		=			
ANR	1012117	MemberAccess	aop . mnemonic		1011414	0					
ANR	1012118	Identifier	aop		1011414	0					
ANR	1012119	Identifier	mnemonic		1011414	1					
ANR	1012120	Identifier	NULL		1011414	1					
ANR	1012121	ExpressionStatement	nb_instr ++	1166:2:35769:35779	1011414	16	True				
ANR	1012122	PostIncDecOperationExpression	nb_instr ++		1011414	0					
ANR	1012123	Identifier	nb_instr		1011414	0					
ANR	1012124	IncDec	++		1011414	1					
ANR	1012125	Label	ret :	1168:0:35784:35787	1011414	21	True				
ANR	1012126	Identifier	ret		1011414	0					
ANR	1012127	ExpressionStatement	free ( aop . mnemonic )	1169:1:35790:35809	1011414	22	True				
ANR	1012128	CallExpression	free ( aop . mnemonic )		1011414	0					
ANR	1012129	Callee	free		1011414	0					
ANR	1012130	Identifier	free		1011414	0					
ANR	1012131	ArgumentList	aop . mnemonic		1011414	1					
ANR	1012132	Argument	aop . mnemonic		1011414	0					
ANR	1012133	MemberAccess	aop . mnemonic		1011414	0					
ANR	1012134	Identifier	aop		1011414	0					
ANR	1012135	Identifier	mnemonic		1011414	1					
ANR	1012136	ExpressionStatement	free ( grep_str )	1170:1:35812:35827	1011414	23	True				
ANR	1012137	CallExpression	free ( grep_str )		1011414	0					
ANR	1012138	Callee	free		1011414	0					
ANR	1012139	Identifier	free		1011414	0					
ANR	1012140	ArgumentList	grep_str		1011414	1					
ANR	1012141	Argument	grep_str		1011414	0					
ANR	1012142	Identifier	grep_str		1011414	0					
ANR	1012143	IfStatement	if ( regex && rx )		1011414	24					
ANR	1012144	Condition	regex && rx	1171:5:35834:35844	1011414	0	True				
ANR	1012145	AndExpression	regex && rx		1011414	0		&&			
ANR	1012146	Identifier	regex		1011414	0					
ANR	1012147	Identifier	rx		1011414	1					
ANR	1012148	CompoundStatement		115:18:2890:2890	1011414	1					
ANR	1012149	ExpressionStatement	r_list_free ( hitlist )	1172:2:35851:35872	1011414	0	True				
ANR	1012150	CallExpression	r_list_free ( hitlist )		1011414	0					
ANR	1012151	Callee	r_list_free		1011414	0					
ANR	1012152	Identifier	r_list_free		1011414	0					
ANR	1012153	ArgumentList	hitlist		1011414	1					
ANR	1012154	Argument	hitlist		1011414	0					
ANR	1012155	Identifier	hitlist		1011414	0					
ANR	1012156	ExpressionStatement	ht_uu_free ( localbadstart )	1173:2:35876:35902	1011414	1	True				
ANR	1012157	CallExpression	ht_uu_free ( localbadstart )		1011414	0					
ANR	1012158	Callee	ht_uu_free		1011414	0					
ANR	1012159	Identifier	ht_uu_free		1011414	0					
ANR	1012160	ArgumentList	localbadstart		1011414	1					
ANR	1012161	Argument	localbadstart		1011414	0					
ANR	1012162	Identifier	localbadstart		1011414	0					
ANR	1012163	ReturnStatement	return NULL ;	1174:2:35906:35917	1011414	2	True				
ANR	1012164	Identifier	NULL		1011414	0					
ANR	1012165	IfStatement	if ( ! valid || ( grep && end ) )		1011414	25					
ANR	1012166	Condition	! valid || ( grep && end )	1176:5:35927:35949	1011414	0	True				
ANR	1012167	OrExpression	! valid || ( grep && end )		1011414	0		||			
ANR	1012168	UnaryOperationExpression	! valid		1011414	0					
ANR	1012169	UnaryOperator	!		1011414	0					
ANR	1012170	Identifier	valid		1011414	1					
ANR	1012171	AndExpression	grep && end		1011414	1		&&			
ANR	1012172	Identifier	grep		1011414	0					
ANR	1012173	Identifier	end		1011414	1					
ANR	1012174	CompoundStatement		120:30:2995:2995	1011414	1					
ANR	1012175	ExpressionStatement	r_list_free ( hitlist )	1177:2:35956:35977	1011414	0	True				
ANR	1012176	CallExpression	r_list_free ( hitlist )		1011414	0					
ANR	1012177	Callee	r_list_free		1011414	0					
ANR	1012178	Identifier	r_list_free		1011414	0					
ANR	1012179	ArgumentList	hitlist		1011414	1					
ANR	1012180	Argument	hitlist		1011414	0					
ANR	1012181	Identifier	hitlist		1011414	0					
ANR	1012182	ExpressionStatement	ht_uu_free ( localbadstart )	1178:2:35981:36007	1011414	1	True				
ANR	1012183	CallExpression	ht_uu_free ( localbadstart )		1011414	0					
ANR	1012184	Callee	ht_uu_free		1011414	0					
ANR	1012185	Identifier	ht_uu_free		1011414	0					
ANR	1012186	ArgumentList	localbadstart		1011414	1					
ANR	1012187	Argument	localbadstart		1011414	0					
ANR	1012188	Identifier	localbadstart		1011414	0					
ANR	1012189	ReturnStatement	return NULL ;	1179:2:36011:36022	1011414	2	True				
ANR	1012190	Identifier	NULL		1011414	0					
ANR	1012191	ExpressionStatement	"ht_uu_foreach ( localbadstart , insert_into , badstart )"	1181:1:36028:36080	1011414	26	True				
ANR	1012192	CallExpression	"ht_uu_foreach ( localbadstart , insert_into , badstart )"		1011414	0					
ANR	1012193	Callee	ht_uu_foreach		1011414	0					
ANR	1012194	Identifier	ht_uu_foreach		1011414	0					
ANR	1012195	ArgumentList	localbadstart		1011414	1					
ANR	1012196	Argument	localbadstart		1011414	0					
ANR	1012197	Identifier	localbadstart		1011414	0					
ANR	1012198	Argument	insert_into		1011414	1					
ANR	1012199	Identifier	insert_into		1011414	0					
ANR	1012200	Argument	badstart		1011414	2					
ANR	1012201	Identifier	badstart		1011414	0					
ANR	1012202	ExpressionStatement	ht_uu_free ( localbadstart )	1182:1:36083:36109	1011414	27	True				
ANR	1012203	CallExpression	ht_uu_free ( localbadstart )		1011414	0					
ANR	1012204	Callee	ht_uu_free		1011414	0					
ANR	1012205	Identifier	ht_uu_free		1011414	0					
ANR	1012206	ArgumentList	localbadstart		1011414	1					
ANR	1012207	Argument	localbadstart		1011414	0					
ANR	1012208	Identifier	localbadstart		1011414	0					
ANR	1012209	IfStatement	if ( branch_delay && r_list_length ( hitlist ) < ( 1 + branch_delay ) )		1011414	28					
ANR	1012210	Condition	branch_delay && r_list_length ( hitlist ) < ( 1 + branch_delay )	1184:5:36173:36232	1011414	0	True				
ANR	1012211	AndExpression	branch_delay && r_list_length ( hitlist ) < ( 1 + branch_delay )		1011414	0		&&			
ANR	1012212	Identifier	branch_delay		1011414	0					
ANR	1012213	RelationalExpression	r_list_length ( hitlist ) < ( 1 + branch_delay )		1011414	1		<			
ANR	1012214	CallExpression	r_list_length ( hitlist )		1011414	0					
ANR	1012215	Callee	r_list_length		1011414	0					
ANR	1012216	Identifier	r_list_length		1011414	0					
ANR	1012217	ArgumentList	hitlist		1011414	1					
ANR	1012218	Argument	hitlist		1011414	0					
ANR	1012219	Identifier	hitlist		1011414	0					
ANR	1012220	AdditiveExpression	1 + branch_delay		1011414	1		+			
ANR	1012221	PrimaryExpression	1		1011414	0					
ANR	1012222	Identifier	branch_delay		1011414	1					
ANR	1012223	CompoundStatement		128:67:3278:3278	1011414	1					
ANR	1012224	ExpressionStatement	r_list_free ( hitlist )	1185:2:36239:36260	1011414	0	True				
ANR	1012225	CallExpression	r_list_free ( hitlist )		1011414	0					
ANR	1012226	Callee	r_list_free		1011414	0					
ANR	1012227	Identifier	r_list_free		1011414	0					
ANR	1012228	ArgumentList	hitlist		1011414	1					
ANR	1012229	Argument	hitlist		1011414	0					
ANR	1012230	Identifier	hitlist		1011414	0					
ANR	1012231	ReturnStatement	return NULL ;	1186:2:36264:36275	1011414	1	True				
ANR	1012232	Identifier	NULL		1011414	0					
ANR	1012233	ReturnStatement	return hitlist ;	1188:1:36281:36295	1011414	29	True				
ANR	1012234	Identifier	hitlist		1011414	0					
ANR	1012235	ReturnType	static RList *		1011414	1					
ANR	1012236	Identifier	construct_rop_gadget		1011414	2					
ANR	1012237	ParameterList	"RCore * core , ut64 addr , ut8 * buf , int buflen , int idx , const char * grep , int regex , RList * rx_list , struct endlist_pair * end_gadget , HtUU * badstart"		1011414	3					
ANR	1012238	Parameter	RCore * core	1057:35:32807:32817	1011414	0	True				
ANR	1012239	ParameterType	RCore *		1011414	0					
ANR	1012240	Identifier	core		1011414	1					
ANR	1012241	Parameter	ut64 addr	1057:48:32820:32828	1011414	1	True				
ANR	1012242	ParameterType	ut64		1011414	0					
ANR	1012243	Identifier	addr		1011414	1					
ANR	1012244	Parameter	ut8 * buf	1057:59:32831:32838	1011414	2	True				
ANR	1012245	ParameterType	ut8 *		1011414	0					
ANR	1012246	Identifier	buf		1011414	1					
ANR	1012247	Parameter	int buflen	1057:69:32841:32850	1011414	3	True				
ANR	1012248	ParameterType	int		1011414	0					
ANR	1012249	Identifier	buflen		1011414	1					
ANR	1012250	Parameter	int idx	1057:81:32853:32859	1011414	4	True				
ANR	1012251	ParameterType	int		1011414	0					
ANR	1012252	Identifier	idx		1011414	1					
ANR	1012253	Parameter	const char * grep	1057:90:32862:32877	1011414	5	True				
ANR	1012254	ParameterType	const char *		1011414	0					
ANR	1012255	Identifier	grep		1011414	1					
ANR	1012256	Parameter	int regex	1057:108:32880:32888	1011414	6	True				
ANR	1012257	ParameterType	int		1011414	0					
ANR	1012258	Identifier	regex		1011414	1					
ANR	1012259	Parameter	RList * rx_list	1057:119:32891:32904	1011414	7	True				
ANR	1012260	ParameterType	RList *		1011414	0					
ANR	1012261	Identifier	rx_list		1011414	1					
ANR	1012262	Parameter	struct endlist_pair * end_gadget	1057:135:32907:32937	1011414	8	True				
ANR	1012263	ParameterType	struct endlist_pair *		1011414	0					
ANR	1012264	Identifier	end_gadget		1011414	1					
ANR	1012265	Parameter	HtUU * badstart	1057:168:32940:32953	1011414	9	True				
ANR	1012266	ParameterType	HtUU *		1011414	0					
ANR	1012267	Identifier	badstart		1011414	1					
ANR	1012268	CFGEntryNode	ENTRY		1011414		True				
ANR	1012269	CFGExitNode	EXIT		1011414		True				
ANR	1012270	Symbol	aop		1011414						
ANR	1012271	Symbol	end_gadget -> delay_size		1011414						
ANR	1012272	Symbol	aop . type		1011414						
ANR	1012273	Symbol	core -> anal -> cur -> name		1011414						
ANR	1012274	Symbol	asmop		1011414						
ANR	1012275	Symbol	strlen		1011414						
ANR	1012276	Symbol	& found		1011414						
ANR	1012277	Symbol	aop . mnemonic		1011414						
ANR	1012278	Symbol	hit		1011414						
ANR	1012279	Symbol	hit -> addr		1011414						
ANR	1012280	Symbol	grep_str		1011414						
ANR	1012281	Symbol	buflen		1011414						
ANR	1012282	Symbol	* * core -> anal		1011414						
ANR	1012283	Symbol	is_end_gadget		1011414						
ANR	1012284	Symbol	& opt		1011414						
ANR	1012285	Symbol	NULL		1011414						
ANR	1012286	Symbol	* core -> anal -> cur		1011414						
ANR	1012287	Symbol	count		1011414						
ANR	1012288	Symbol	hit -> len		1011414						
ANR	1012289	Symbol	max_instr		1011414						
ANR	1012290	Symbol	r_list_get_n		1011414						
ANR	1012291	Symbol	r_regex_match		1011414						
ANR	1012292	Symbol	* end_gadget		1011414						
ANR	1012293	Symbol	grep_find		1011414						
ANR	1012294	Symbol	& aop		1011414						
ANR	1012295	Symbol	core		1011414						
ANR	1012296	Symbol	* * * core		1011414						
ANR	1012297	Symbol	regex		1011414						
ANR	1012298	Symbol	opt		1011414						
ANR	1012299	Symbol	strstr		1011414						
ANR	1012300	Symbol	R_ANAL_OP_MASK_DISASM		1011414						
ANR	1012301	Symbol	opst		1011414						
ANR	1012302	Symbol	r_config_get_i		1011414						
ANR	1012303	Symbol	r_core_asm_hit_new		1011414						
ANR	1012304	Symbol	* end		1011414						
ANR	1012305	Symbol	idx		1011414						
ANR	1012306	Symbol	opsz		1011414						
ANR	1012307	Symbol	end_gadget		1011414						
ANR	1012308	Symbol	r_core_asm_hit_list_new		1011414						
ANR	1012309	Symbol	* hit		1011414						
ANR	1012310	Symbol	rx		1011414						
ANR	1012311	Symbol	* core		1011414						
ANR	1012312	Symbol	core -> assembler		1011414						
ANR	1012313	Symbol	calloc		1011414						
ANR	1012314	Symbol	core -> anal		1011414						
ANR	1012315	Symbol	rx_list		1011414						
ANR	1012316	Symbol	r_asm_op_get_asm		1011414						
ANR	1012317	Symbol	valid		1011414						
ANR	1012318	Symbol	search_hit		1011414						
ANR	1012319	Symbol	found		1011414						
ANR	1012320	Symbol	aop . size		1011414						
ANR	1012321	Symbol	core -> anal -> cur		1011414						
ANR	1012322	Symbol	branch_delay		1011414						
ANR	1012323	Symbol	end		1011414						
ANR	1012324	Symbol	nb_instr		1011414						
ANR	1012325	Symbol	addr		1011414						
ANR	1012326	Symbol	r_str_ncasecmp		1011414						
ANR	1012327	Symbol	* * core		1011414						
ANR	1012328	Symbol	end_gadget -> instr_offset		1011414						
ANR	1012329	Symbol	core -> config		1011414						
ANR	1012330	Symbol	badstart		1011414						
ANR	1012331	Symbol	grep		1011414						
ANR	1012332	Symbol	start		1011414						
ANR	1012333	Symbol	false		1011414						
ANR	1012334	Symbol	R_ANAL_OP_TYPE_NOP		1011414						
ANR	1012335	Symbol	buf		1011414						
ANR	1012336	Symbol	* core -> anal		1011414						
ANR	1012337	Symbol	insert_into		1011414						
ANR	1012338	Symbol	endaddr		1011414						
ANR	1012339	Symbol	& asmop		1011414						
ANR	1012340	Symbol	ht_uu_new_opt		1011414						
ANR	1012341	Symbol	localbadstart		1011414						
ANR	1012342	Symbol	hitlist		1011414						
ANR	1012343	Symbol	strdup		1011414						
ANR	1012344	Symbol	r_asm_disassemble		1011414						
ANR	1012345	Symbol	r_list_length		1011414						
ANR	1012346	Function	print_rop	1191:0:36300:41781							
ANR	1012347	FunctionDef	"print_rop (RCore * core , RList * hitlist , char mode , bool * json_first)"		1012346	0					
ANR	1012348	CompoundStatement		1191:80:36380:41781	1012346	0					
ANR	1012349	IdentifierDeclStatement	const char * otype ;	1192:1:36383:36400	1012346	0	True				
ANR	1012350	IdentifierDecl	* otype		1012346	0					
ANR	1012351	IdentifierDeclType	const char *		1012346	0					
ANR	1012352	Identifier	otype		1012346	1					
ANR	1012353	IdentifierDeclStatement	RCoreAsmHit * hit = NULL ;	1193:1:36403:36426	1012346	1	True				
ANR	1012354	IdentifierDecl	* hit = NULL		1012346	0					
ANR	1012355	IdentifierDeclType	RCoreAsmHit *		1012346	0					
ANR	1012356	Identifier	hit		1012346	1					
ANR	1012357	AssignmentExpression	* hit = NULL		1012346	2		=			
ANR	1012358	Identifier	NULL		1012346	0					
ANR	1012359	Identifier	NULL		1012346	1					
ANR	1012360	IdentifierDeclStatement	RListIter * iter ;	1194:1:36429:36444	1012346	2	True				
ANR	1012361	IdentifierDecl	* iter		1012346	0					
ANR	1012362	IdentifierDeclType	RListIter *		1012346	0					
ANR	1012363	Identifier	iter		1012346	1					
ANR	1012364	IdentifierDeclStatement	RList * ropList = NULL ;	1195:1:36447:36468	1012346	3	True				
ANR	1012365	IdentifierDecl	* ropList = NULL		1012346	0					
ANR	1012366	IdentifierDeclType	RList *		1012346	0					
ANR	1012367	Identifier	ropList		1012346	1					
ANR	1012368	AssignmentExpression	* ropList = NULL		1012346	2		=			
ANR	1012369	Identifier	NULL		1012346	0					
ANR	1012370	Identifier	NULL		1012346	1					
ANR	1012371	IdentifierDeclStatement	char * buf_asm = NULL ;	1196:1:36471:36491	1012346	4	True				
ANR	1012372	IdentifierDecl	* buf_asm = NULL		1012346	0					
ANR	1012373	IdentifierDeclType	char *		1012346	0					
ANR	1012374	Identifier	buf_asm		1012346	1					
ANR	1012375	AssignmentExpression	* buf_asm = NULL		1012346	2		=			
ANR	1012376	Identifier	NULL		1012346	0					
ANR	1012377	Identifier	NULL		1012346	1					
ANR	1012378	IdentifierDeclStatement	unsigned int size = 0 ;	1197:1:36494:36515	1012346	5	True				
ANR	1012379	IdentifierDecl	size = 0		1012346	0					
ANR	1012380	IdentifierDeclType	unsigned int		1012346	0					
ANR	1012381	Identifier	size		1012346	1					
ANR	1012382	AssignmentExpression	size = 0		1012346	2		=			
ANR	1012383	Identifier	size		1012346	0					
ANR	1012384	PrimaryExpression	0		1012346	1					
ANR	1012385	IdentifierDeclStatement	RAnalOp analop = R_EMPTY ;	1198:1:36518:36542	1012346	6	True				
ANR	1012386	IdentifierDecl	analop = R_EMPTY		1012346	0					
ANR	1012387	IdentifierDeclType	RAnalOp		1012346	0					
ANR	1012388	Identifier	analop		1012346	1					
ANR	1012389	AssignmentExpression	analop = R_EMPTY		1012346	2		=			
ANR	1012390	Identifier	R_EMPTY		1012346	0					
ANR	1012391	Identifier	R_EMPTY		1012346	1					
ANR	1012392	IdentifierDeclStatement	RAsmOp asmop ;	1199:1:36545:36557	1012346	7	True				
ANR	1012393	IdentifierDecl	asmop		1012346	0					
ANR	1012394	IdentifierDeclType	RAsmOp		1012346	0					
ANR	1012395	Identifier	asmop		1012346	1					
ANR	1012396	IdentifierDeclStatement	Sdb * db = NULL ;	1200:1:36560:36574	1012346	8	True				
ANR	1012397	IdentifierDecl	* db = NULL		1012346	0					
ANR	1012398	IdentifierDeclType	Sdb *		1012346	0					
ANR	1012399	Identifier	db		1012346	1					
ANR	1012400	AssignmentExpression	* db = NULL		1012346	2		=			
ANR	1012401	Identifier	NULL		1012346	0					
ANR	1012402	Identifier	NULL		1012346	1					
ANR	1012403	IdentifierDeclStatement	"const bool colorize = r_config_get_i ( core -> config , ""scr.color"" ) ;"	1201:1:36577:36641	1012346	9	True				
ANR	1012404	IdentifierDecl	"colorize = r_config_get_i ( core -> config , ""scr.color"" )"		1012346	0					
ANR	1012405	IdentifierDeclType	const bool		1012346	0					
ANR	1012406	Identifier	colorize		1012346	1					
ANR	1012407	AssignmentExpression	"colorize = r_config_get_i ( core -> config , ""scr.color"" )"		1012346	2		=			
ANR	1012408	Identifier	colorize		1012346	0					
ANR	1012409	CallExpression	"r_config_get_i ( core -> config , ""scr.color"" )"		1012346	1					
ANR	1012410	Callee	r_config_get_i		1012346	0					
ANR	1012411	Identifier	r_config_get_i		1012346	0					
ANR	1012412	ArgumentList	core -> config		1012346	1					
ANR	1012413	Argument	core -> config		1012346	0					
ANR	1012414	PtrMemberAccess	core -> config		1012346	0					
ANR	1012415	Identifier	core		1012346	0					
ANR	1012416	Identifier	config		1012346	1					
ANR	1012417	Argument	"""scr.color"""		1012346	1					
ANR	1012418	PrimaryExpression	"""scr.color"""		1012346	0					
ANR	1012419	IdentifierDeclStatement	"const bool rop_comments = r_config_get_i ( core -> config , ""rop.comments"" ) ;"	1202:1:36644:36715	1012346	10	True				
ANR	1012420	IdentifierDecl	"rop_comments = r_config_get_i ( core -> config , ""rop.comments"" )"		1012346	0					
ANR	1012421	IdentifierDeclType	const bool		1012346	0					
ANR	1012422	Identifier	rop_comments		1012346	1					
ANR	1012423	AssignmentExpression	"rop_comments = r_config_get_i ( core -> config , ""rop.comments"" )"		1012346	2		=			
ANR	1012424	Identifier	rop_comments		1012346	0					
ANR	1012425	CallExpression	"r_config_get_i ( core -> config , ""rop.comments"" )"		1012346	1					
ANR	1012426	Callee	r_config_get_i		1012346	0					
ANR	1012427	Identifier	r_config_get_i		1012346	0					
ANR	1012428	ArgumentList	core -> config		1012346	1					
ANR	1012429	Argument	core -> config		1012346	0					
ANR	1012430	PtrMemberAccess	core -> config		1012346	0					
ANR	1012431	Identifier	core		1012346	0					
ANR	1012432	Identifier	config		1012346	1					
ANR	1012433	Argument	"""rop.comments"""		1012346	1					
ANR	1012434	PrimaryExpression	"""rop.comments"""		1012346	0					
ANR	1012435	IdentifierDeclStatement	"const bool esil = r_config_get_i ( core -> config , ""asm.esil"" ) ;"	1203:1:36718:36777	1012346	11	True				
ANR	1012436	IdentifierDecl	"esil = r_config_get_i ( core -> config , ""asm.esil"" )"		1012346	0					
ANR	1012437	IdentifierDeclType	const bool		1012346	0					
ANR	1012438	Identifier	esil		1012346	1					
ANR	1012439	AssignmentExpression	"esil = r_config_get_i ( core -> config , ""asm.esil"" )"		1012346	2		=			
ANR	1012440	Identifier	esil		1012346	0					
ANR	1012441	CallExpression	"r_config_get_i ( core -> config , ""asm.esil"" )"		1012346	1					
ANR	1012442	Callee	r_config_get_i		1012346	0					
ANR	1012443	Identifier	r_config_get_i		1012346	0					
ANR	1012444	ArgumentList	core -> config		1012346	1					
ANR	1012445	Argument	core -> config		1012346	0					
ANR	1012446	PtrMemberAccess	core -> config		1012346	0					
ANR	1012447	Identifier	core		1012346	0					
ANR	1012448	Identifier	config		1012346	1					
ANR	1012449	Argument	"""asm.esil"""		1012346	1					
ANR	1012450	PrimaryExpression	"""asm.esil"""		1012346	0					
ANR	1012451	IdentifierDeclStatement	"const bool rop_db = r_config_get_i ( core -> config , ""rop.db"" ) ;"	1204:1:36780:36839	1012346	12	True				
ANR	1012452	IdentifierDecl	"rop_db = r_config_get_i ( core -> config , ""rop.db"" )"		1012346	0					
ANR	1012453	IdentifierDeclType	const bool		1012346	0					
ANR	1012454	Identifier	rop_db		1012346	1					
ANR	1012455	AssignmentExpression	"rop_db = r_config_get_i ( core -> config , ""rop.db"" )"		1012346	2		=			
ANR	1012456	Identifier	rop_db		1012346	0					
ANR	1012457	CallExpression	"r_config_get_i ( core -> config , ""rop.db"" )"		1012346	1					
ANR	1012458	Callee	r_config_get_i		1012346	0					
ANR	1012459	Identifier	r_config_get_i		1012346	0					
ANR	1012460	ArgumentList	core -> config		1012346	1					
ANR	1012461	Argument	core -> config		1012346	0					
ANR	1012462	PtrMemberAccess	core -> config		1012346	0					
ANR	1012463	Identifier	core		1012346	0					
ANR	1012464	Identifier	config		1012346	1					
ANR	1012465	Argument	"""rop.db"""		1012346	1					
ANR	1012466	PrimaryExpression	"""rop.db"""		1012346	0					
ANR	1012467	IfStatement	if ( rop_db )		1012346	13					
ANR	1012468	Condition	rop_db	1206:5:36847:36852	1012346	0	True				
ANR	1012469	Identifier	rop_db		1012346	0					
ANR	1012470	CompoundStatement		16:13:474:474	1012346	1					
ANR	1012471	ExpressionStatement	"db = sdb_ns ( core -> sdb , ""rop"" , true )"	1207:2:36859:36895	1012346	0	True				
ANR	1012472	AssignmentExpression	"db = sdb_ns ( core -> sdb , ""rop"" , true )"		1012346	0		=			
ANR	1012473	Identifier	db		1012346	0					
ANR	1012474	CallExpression	"sdb_ns ( core -> sdb , ""rop"" , true )"		1012346	1					
ANR	1012475	Callee	sdb_ns		1012346	0					
ANR	1012476	Identifier	sdb_ns		1012346	0					
ANR	1012477	ArgumentList	core -> sdb		1012346	1					
ANR	1012478	Argument	core -> sdb		1012346	0					
ANR	1012479	PtrMemberAccess	core -> sdb		1012346	0					
ANR	1012480	Identifier	core		1012346	0					
ANR	1012481	Identifier	sdb		1012346	1					
ANR	1012482	Argument	"""rop"""		1012346	1					
ANR	1012483	PrimaryExpression	"""rop"""		1012346	0					
ANR	1012484	Argument	true		1012346	2					
ANR	1012485	Identifier	true		1012346	0					
ANR	1012486	ExpressionStatement	ropList = r_list_newf ( free )	1208:2:36899:36927	1012346	1	True				
ANR	1012487	AssignmentExpression	ropList = r_list_newf ( free )		1012346	0		=			
ANR	1012488	Identifier	ropList		1012346	0					
ANR	1012489	CallExpression	r_list_newf ( free )		1012346	1					
ANR	1012490	Callee	r_list_newf		1012346	0					
ANR	1012491	Identifier	r_list_newf		1012346	0					
ANR	1012492	ArgumentList	free		1012346	1					
ANR	1012493	Argument	free		1012346	0					
ANR	1012494	Identifier	free		1012346	0					
ANR	1012495	IfStatement	if ( ! db )		1012346	2					
ANR	1012496	Condition	! db	1209:6:36935:36937	1012346	0	True				
ANR	1012497	UnaryOperationExpression	! db		1012346	0					
ANR	1012498	UnaryOperator	!		1012346	0					
ANR	1012499	Identifier	db		1012346	1					
ANR	1012500	CompoundStatement		19:11:559:559	1012346	1					
ANR	1012501	ExpressionStatement	"eprintf ( ""Error: Could not create SDB 'rop' namespace\\n"" )"	1210:3:36945:37002	1012346	0	True				
ANR	1012502	CallExpression	"eprintf ( ""Error: Could not create SDB 'rop' namespace\\n"" )"		1012346	0					
ANR	1012503	Callee	eprintf		1012346	0					
ANR	1012504	Identifier	eprintf		1012346	0					
ANR	1012505	ArgumentList	"""Error: Could not create SDB 'rop' namespace\\n"""		1012346	1					
ANR	1012506	Argument	"""Error: Could not create SDB 'rop' namespace\\n"""		1012346	0					
ANR	1012507	PrimaryExpression	"""Error: Could not create SDB 'rop' namespace\\n"""		1012346	0					
ANR	1012508	ExpressionStatement	r_list_free ( ropList )	1211:3:37007:37028	1012346	1	True				
ANR	1012509	CallExpression	r_list_free ( ropList )		1012346	0					
ANR	1012510	Callee	r_list_free		1012346	0					
ANR	1012511	Identifier	r_list_free		1012346	0					
ANR	1012512	ArgumentList	ropList		1012346	1					
ANR	1012513	Argument	ropList		1012346	0					
ANR	1012514	Identifier	ropList		1012346	0					
ANR	1012515	ReturnStatement	return ;	1212:3:37033:37039	1012346	2	True				
ANR	1012516	SwitchStatement	switch ( mode )		1012346	14					
ANR	1012517	Condition	mode	1216:9:37058:37061	1012346	0	True				
ANR	1012518	Identifier	mode		1012346	0					
ANR	1012519	CompoundStatement		26:15:683:683	1012346	1					
ANR	1012520	Label	case 'j' :	1217:1:37067:37075	1012346	0	True				
ANR	1012521	IfStatement	if ( * json_first )		1012346	1					
ANR	1012522	Condition	* json_first	1219:6:37117:37127	1012346	0	True				
ANR	1012523	UnaryOperationExpression	* json_first		1012346	0					
ANR	1012524	UnaryOperator	*		1012346	0					
ANR	1012525	Identifier	json_first		1012346	1					
ANR	1012526	CompoundStatement		29:19:749:749	1012346	1					
ANR	1012527	ExpressionStatement	* json_first = 0	1220:3:37135:37150	1012346	0	True				
ANR	1012528	AssignmentExpression	* json_first = 0		1012346	0		=			
ANR	1012529	UnaryOperationExpression	* json_first		1012346	0					
ANR	1012530	UnaryOperator	*		1012346	0					
ANR	1012531	Identifier	json_first		1012346	1					
ANR	1012532	PrimaryExpression	0		1012346	1					
ANR	1012533	ElseStatement	else		1012346	0					
ANR	1012534	CompoundStatement		31:9:780:780	1012346	0					
ANR	1012535	ExpressionStatement	"r_cons_strcat ( "","" )"	1222:3:37166:37185	1012346	0	True				
ANR	1012536	CallExpression	"r_cons_strcat ( "","" )"		1012346	0					
ANR	1012537	Callee	r_cons_strcat		1012346	0					
ANR	1012538	Identifier	r_cons_strcat		1012346	0					
ANR	1012539	ArgumentList	""","""		1012346	1					
ANR	1012540	Argument	""","""		1012346	0					
ANR	1012541	PrimaryExpression	""","""		1012346	0					
ANR	1012542	ExpressionStatement	"r_cons_printf ( ""{\\""opcodes\\"":["" )"	1224:2:37193:37225	1012346	2	True				
ANR	1012543	CallExpression	"r_cons_printf ( ""{\\""opcodes\\"":["" )"		1012346	0					
ANR	1012544	Callee	r_cons_printf		1012346	0					
ANR	1012545	Identifier	r_cons_printf		1012346	0					
ANR	1012546	ArgumentList	"""{\\""opcodes\\"":["""		1012346	1					
ANR	1012547	Argument	"""{\\""opcodes\\"":["""		1012346	0					
ANR	1012548	PrimaryExpression	"""{\\""opcodes\\"":["""		1012346	0					
ANR	1012549	Statement	r_list_foreach	1225:2:37229:37242	1012346	3	True				
ANR	1012550	Statement	(	1225:17:37244:37244	1012346	4	True				
ANR	1012551	Statement	hitlist	1225:18:37245:37251	1012346	5	True				
ANR	1012552	Statement	","	1225:25:37252:37252	1012346	6	True				
ANR	1012553	Statement	iter	1225:27:37254:37257	1012346	7	True				
ANR	1012554	Statement	","	1225:31:37258:37258	1012346	8	True				
ANR	1012555	Statement	hit	1225:33:37260:37262	1012346	9	True				
ANR	1012556	Statement	)	1225:36:37263:37263	1012346	10	True				
ANR	1012557	CompoundStatement		36:3:889:917	1012346	11					
ANR	1012558	IdentifierDeclStatement	ut8 * buf = malloc ( hit -> len ) ;	1226:3:37270:37298	1012346	0	True				
ANR	1012559	IdentifierDecl	* buf = malloc ( hit -> len )		1012346	0					
ANR	1012560	IdentifierDeclType	ut8 *		1012346	0					
ANR	1012561	Identifier	buf		1012346	1					
ANR	1012562	AssignmentExpression	* buf = malloc ( hit -> len )		1012346	2		=			
ANR	1012563	Identifier	buf		1012346	0					
ANR	1012564	CallExpression	malloc ( hit -> len )		1012346	1					
ANR	1012565	Callee	malloc		1012346	0					
ANR	1012566	Identifier	malloc		1012346	0					
ANR	1012567	ArgumentList	hit -> len		1012346	1					
ANR	1012568	Argument	hit -> len		1012346	0					
ANR	1012569	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012570	Identifier	hit		1012346	0					
ANR	1012571	Identifier	len		1012346	1					
ANR	1012572	ExpressionStatement	"r_io_read_at ( core -> io , hit -> addr , buf , hit -> len )"	1227:3:37303:37352	1012346	1	True				
ANR	1012573	CallExpression	"r_io_read_at ( core -> io , hit -> addr , buf , hit -> len )"		1012346	0					
ANR	1012574	Callee	r_io_read_at		1012346	0					
ANR	1012575	Identifier	r_io_read_at		1012346	0					
ANR	1012576	ArgumentList	core -> io		1012346	1					
ANR	1012577	Argument	core -> io		1012346	0					
ANR	1012578	PtrMemberAccess	core -> io		1012346	0					
ANR	1012579	Identifier	core		1012346	0					
ANR	1012580	Identifier	io		1012346	1					
ANR	1012581	Argument	hit -> addr		1012346	1					
ANR	1012582	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1012583	Identifier	hit		1012346	0					
ANR	1012584	Identifier	addr		1012346	1					
ANR	1012585	Argument	buf		1012346	2					
ANR	1012586	Identifier	buf		1012346	0					
ANR	1012587	Argument	hit -> len		1012346	3					
ANR	1012588	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012589	Identifier	hit		1012346	0					
ANR	1012590	Identifier	len		1012346	1					
ANR	1012591	ExpressionStatement	"r_asm_set_pc ( core -> assembler , hit -> addr )"	1228:3:37357:37398	1012346	2	True				
ANR	1012592	CallExpression	"r_asm_set_pc ( core -> assembler , hit -> addr )"		1012346	0					
ANR	1012593	Callee	r_asm_set_pc		1012346	0					
ANR	1012594	Identifier	r_asm_set_pc		1012346	0					
ANR	1012595	ArgumentList	core -> assembler		1012346	1					
ANR	1012596	Argument	core -> assembler		1012346	0					
ANR	1012597	PtrMemberAccess	core -> assembler		1012346	0					
ANR	1012598	Identifier	core		1012346	0					
ANR	1012599	Identifier	assembler		1012346	1					
ANR	1012600	Argument	hit -> addr		1012346	1					
ANR	1012601	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1012602	Identifier	hit		1012346	0					
ANR	1012603	Identifier	addr		1012346	1					
ANR	1012604	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , hit -> len )"	1229:3:37403:37461	1012346	3	True				
ANR	1012605	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , hit -> len )"		1012346	0					
ANR	1012606	Callee	r_asm_disassemble		1012346	0					
ANR	1012607	Identifier	r_asm_disassemble		1012346	0					
ANR	1012608	ArgumentList	core -> assembler		1012346	1					
ANR	1012609	Argument	core -> assembler		1012346	0					
ANR	1012610	PtrMemberAccess	core -> assembler		1012346	0					
ANR	1012611	Identifier	core		1012346	0					
ANR	1012612	Identifier	assembler		1012346	1					
ANR	1012613	Argument	& asmop		1012346	1					
ANR	1012614	UnaryOperationExpression	& asmop		1012346	0					
ANR	1012615	UnaryOperator	&		1012346	0					
ANR	1012616	Identifier	asmop		1012346	1					
ANR	1012617	Argument	buf		1012346	2					
ANR	1012618	Identifier	buf		1012346	0					
ANR	1012619	Argument	hit -> len		1012346	3					
ANR	1012620	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012621	Identifier	hit		1012346	0					
ANR	1012622	Identifier	len		1012346	1					
ANR	1012623	ExpressionStatement	"r_anal_op ( core -> anal , & analop , hit -> addr , buf , hit -> len , R_ANAL_OP_MASK_ESIL )"	1230:3:37466:37544	1012346	4	True				
ANR	1012624	CallExpression	"r_anal_op ( core -> anal , & analop , hit -> addr , buf , hit -> len , R_ANAL_OP_MASK_ESIL )"		1012346	0					
ANR	1012625	Callee	r_anal_op		1012346	0					
ANR	1012626	Identifier	r_anal_op		1012346	0					
ANR	1012627	ArgumentList	core -> anal		1012346	1					
ANR	1012628	Argument	core -> anal		1012346	0					
ANR	1012629	PtrMemberAccess	core -> anal		1012346	0					
ANR	1012630	Identifier	core		1012346	0					
ANR	1012631	Identifier	anal		1012346	1					
ANR	1012632	Argument	& analop		1012346	1					
ANR	1012633	UnaryOperationExpression	& analop		1012346	0					
ANR	1012634	UnaryOperator	&		1012346	0					
ANR	1012635	Identifier	analop		1012346	1					
ANR	1012636	Argument	hit -> addr		1012346	2					
ANR	1012637	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1012638	Identifier	hit		1012346	0					
ANR	1012639	Identifier	addr		1012346	1					
ANR	1012640	Argument	buf		1012346	3					
ANR	1012641	Identifier	buf		1012346	0					
ANR	1012642	Argument	hit -> len		1012346	4					
ANR	1012643	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012644	Identifier	hit		1012346	0					
ANR	1012645	Identifier	len		1012346	1					
ANR	1012646	Argument	R_ANAL_OP_MASK_ESIL		1012346	5					
ANR	1012647	Identifier	R_ANAL_OP_MASK_ESIL		1012346	0					
ANR	1012648	ExpressionStatement	size += hit -> len	1231:3:37549:37565	1012346	5	True				
ANR	1012649	AssignmentExpression	size += hit -> len		1012346	0		+=			
ANR	1012650	Identifier	size		1012346	0					
ANR	1012651	PtrMemberAccess	hit -> len		1012346	1					
ANR	1012652	Identifier	hit		1012346	0					
ANR	1012653	Identifier	len		1012346	1					
ANR	1012654	IfStatement	if ( analop . type != R_ANAL_OP_TYPE_RET )		1012346	6					
ANR	1012655	Condition	analop . type != R_ANAL_OP_TYPE_RET	1232:7:37574:37606	1012346	0	True				
ANR	1012656	EqualityExpression	analop . type != R_ANAL_OP_TYPE_RET		1012346	0		!=			
ANR	1012657	MemberAccess	analop . type		1012346	0					
ANR	1012658	Identifier	analop		1012346	0					
ANR	1012659	Identifier	type		1012346	1					
ANR	1012660	Identifier	R_ANAL_OP_TYPE_RET		1012346	1					
ANR	1012661	CompoundStatement		43:4:1234:1301	1012346	1					
ANR	1012662	IdentifierDeclStatement	"char * opstr_n = r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) ) ;"	1233:4:37615:37682	1012346	0	True				
ANR	1012663	IdentifierDecl	"* opstr_n = r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) )"		1012346	0					
ANR	1012664	IdentifierDeclType	char *		1012346	0					
ANR	1012665	Identifier	opstr_n		1012346	1					
ANR	1012666	AssignmentExpression	"* opstr_n = r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) )"		1012346	2		=			
ANR	1012667	Identifier	opstr_n		1012346	0					
ANR	1012668	CallExpression	"r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) )"		1012346	1					
ANR	1012669	Callee	r_str_newf		1012346	0					
ANR	1012670	Identifier	r_str_newf		1012346	0					
ANR	1012671	ArgumentList	""" %s"""		1012346	1					
ANR	1012672	Argument	""" %s"""		1012346	0					
ANR	1012673	PrimaryExpression	""" %s"""		1012346	0					
ANR	1012674	Argument	R_STRBUF_SAFEGET ( & analop . esil )		1012346	1					
ANR	1012675	CallExpression	R_STRBUF_SAFEGET ( & analop . esil )		1012346	0					
ANR	1012676	Callee	R_STRBUF_SAFEGET		1012346	0					
ANR	1012677	Identifier	R_STRBUF_SAFEGET		1012346	0					
ANR	1012678	ArgumentList	& analop . esil		1012346	1					
ANR	1012679	Argument	& analop . esil		1012346	0					
ANR	1012680	UnaryOperationExpression	& analop . esil		1012346	0					
ANR	1012681	UnaryOperator	&		1012346	0					
ANR	1012682	MemberAccess	analop . esil		1012346	1					
ANR	1012683	Identifier	analop		1012346	0					
ANR	1012684	Identifier	esil		1012346	1					
ANR	1012685	ExpressionStatement	"r_list_append ( ropList , ( void * ) opstr_n )"	1234:4:37688:37729	1012346	1	True				
ANR	1012686	CallExpression	"r_list_append ( ropList , ( void * ) opstr_n )"		1012346	0					
ANR	1012687	Callee	r_list_append		1012346	0					
ANR	1012688	Identifier	r_list_append		1012346	0					
ANR	1012689	ArgumentList	ropList		1012346	1					
ANR	1012690	Argument	ropList		1012346	0					
ANR	1012691	Identifier	ropList		1012346	0					
ANR	1012692	Argument	( void * ) opstr_n		1012346	1					
ANR	1012693	CastExpression	( void * ) opstr_n		1012346	0					
ANR	1012694	CastTarget	void *		1012346	0					
ANR	1012695	Identifier	opstr_n		1012346	1					
ANR	1012696	Statement	r_cons_printf	1236:3:37739:37751	1012346	7	True				
ANR	1012697	Statement	(	1236:17:37753:37753	1012346	8	True				
ANR	1012698	Statement	"""{\\""offset\\"":%"""	1236:18:37754:37768	1012346	9	True				
ANR	1012699	Statement	PFMT64d	1236:33:37769:37775	1012346	10	True				
ANR	1012700	Statement	""",\\""size\\"":%d,"""	1236:41:37777:37791	1012346	11	True				
ANR	1012701	Statement	"""\\""opcode\\"":\\""%s\\"",\\""type\\"":\\""%s\\""}%s"""	1237:4:37797:37834	1012346	12	True				
ANR	1012702	Statement	","	1237:42:37835:37835	1012346	13	True				
ANR	1012703	Statement	hit	1238:4:37841:37843	1012346	14	True				
ANR	1012704	Statement	->	1238:7:37844:37845	1012346	15	True				
ANR	1012705	Statement	addr	1238:9:37846:37849	1012346	16	True				
ANR	1012706	Statement	","	1238:13:37850:37850	1012346	17	True				
ANR	1012707	Statement	hit	1238:15:37852:37854	1012346	18	True				
ANR	1012708	Statement	->	1238:18:37855:37856	1012346	19	True				
ANR	1012709	Statement	len	1238:20:37857:37859	1012346	20	True				
ANR	1012710	Statement	","	1238:23:37860:37860	1012346	21	True				
ANR	1012711	Statement	r_asm_op_get_asm	1238:25:37862:37877	1012346	22	True				
ANR	1012712	Statement	(	1238:42:37879:37879	1012346	23	True				
ANR	1012713	Statement	&	1238:43:37880:37880	1012346	24	True				
ANR	1012714	Statement	asmop	1238:44:37881:37885	1012346	25	True				
ANR	1012715	Statement	)	1238:49:37886:37886	1012346	26	True				
ANR	1012716	Statement	","	1238:50:37887:37887	1012346	27	True				
ANR	1012717	Statement	r_anal_optype_to_string	1239:4:37893:37915	1012346	28	True				
ANR	1012718	Statement	(	1239:28:37917:37917	1012346	29	True				
ANR	1012719	Statement	analop	1239:29:37918:37923	1012346	30	True				
ANR	1012720	Statement	.	1239:35:37924:37924	1012346	31	True				
ANR	1012721	Statement	type	1239:36:37925:37928	1012346	32	True				
ANR	1012722	Statement	)	1239:40:37929:37929	1012346	33	True				
ANR	1012723	Statement	","	1239:41:37930:37930	1012346	34	True				
ANR	1012724	Statement	iter	1240:4:37936:37939	1012346	35	True				
ANR	1012725	Statement	->	1240:8:37940:37941	1012346	36	True				
ANR	1012726	Statement	n	1240:10:37942:37942	1012346	37	True				
ANR	1012727	Statement	?	1240:11:37943:37943	1012346	38	True				
ANR	1012728	Statement	""","""	1240:13:37945:37947	1012346	39	True				
ANR	1012729	Statement	:	1240:16:37948:37948	1012346	40	True				
ANR	1012730	Statement	""""""	1240:18:37950:37951	1012346	41	True				
ANR	1012731	Statement	)	1240:20:37952:37952	1012346	42	True				
ANR	1012732	ExpressionStatement		1240:21:37953:37953	1012346	43	True				
ANR	1012733	ExpressionStatement	free ( buf )	1241:3:37958:37968	1012346	44	True				
ANR	1012734	CallExpression	free ( buf )		1012346	0					
ANR	1012735	Callee	free		1012346	0					
ANR	1012736	Identifier	free		1012346	0					
ANR	1012737	ArgumentList	buf		1012346	1					
ANR	1012738	Argument	buf		1012346	0					
ANR	1012739	Identifier	buf		1012346	0					
ANR	1012740	IfStatement	if ( db && hit )		1012346	12					
ANR	1012741	Condition	db && hit	1243:6:37980:37988	1012346	0	True				
ANR	1012742	AndExpression	db && hit		1012346	0		&&			
ANR	1012743	Identifier	db		1012346	0					
ANR	1012744	Identifier	hit		1012346	1					
ANR	1012745	CompoundStatement		54:3:1615:1676	1012346	1					
ANR	1012746	IdentifierDeclStatement	const ut64 addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr ;	1244:3:37996:38057	1012346	0	True				
ANR	1012747	IdentifierDecl	addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	0					
ANR	1012748	IdentifierDeclType	const ut64		1012346	0					
ANR	1012749	Identifier	addr		1012346	1					
ANR	1012750	AssignmentExpression	addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	2		=			
ANR	1012751	Identifier	addr		1012346	0					
ANR	1012752	PtrMemberAccess	( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	1					
ANR	1012753	CastExpression	( RCoreAsmHit * ) hitlist -> head -> data		1012346	0					
ANR	1012754	CastTarget	RCoreAsmHit *		1012346	0					
ANR	1012755	PtrMemberAccess	hitlist -> head -> data		1012346	1					
ANR	1012756	PtrMemberAccess	hitlist -> head		1012346	0					
ANR	1012757	Identifier	hitlist		1012346	0					
ANR	1012758	Identifier	head		1012346	1					
ANR	1012759	Identifier	data		1012346	1					
ANR	1012760	Identifier	addr		1012346	1					
ANR	1012761	Statement	const	1246:3:38116:38120	1012346	1	True				
ANR	1012762	Statement	char	1246:9:38122:38125	1012346	2	True				
ANR	1012763	Statement	*	1246:14:38127:38127	1012346	3	True				
ANR	1012764	Statement	key	1246:15:38128:38130	1012346	4	True				
ANR	1012765	Statement	=	1246:19:38132:38132	1012346	5	True				
ANR	1012766	Statement	sdb_fmt	1246:21:38134:38140	1012346	6	True				
ANR	1012767	Statement	(	1246:29:38142:38142	1012346	7	True				
ANR	1012768	Statement	"""0x%08"""	1246:30:38143:38149	1012346	8	True				
ANR	1012769	Statement	PFMT64x	1246:37:38150:38156	1012346	9	True				
ANR	1012770	Statement	","	1246:44:38157:38157	1012346	10	True				
ANR	1012771	Statement	addr	1246:46:38159:38162	1012346	11	True				
ANR	1012772	Statement	)	1246:50:38163:38163	1012346	12	True				
ANR	1012773	ExpressionStatement		1246:51:38164:38164	1012346	13	True				
ANR	1012774	ExpressionStatement	"rop_classify ( core , db , ropList , key , size )"	1247:3:38169:38212	1012346	14	True				
ANR	1012775	CallExpression	"rop_classify ( core , db , ropList , key , size )"		1012346	0					
ANR	1012776	Callee	rop_classify		1012346	0					
ANR	1012777	Identifier	rop_classify		1012346	0					
ANR	1012778	ArgumentList	core		1012346	1					
ANR	1012779	Argument	core		1012346	0					
ANR	1012780	Identifier	core		1012346	0					
ANR	1012781	Argument	db		1012346	1					
ANR	1012782	Identifier	db		1012346	0					
ANR	1012783	Argument	ropList		1012346	2					
ANR	1012784	Identifier	ropList		1012346	0					
ANR	1012785	Argument	key		1012346	3					
ANR	1012786	Identifier	key		1012346	0					
ANR	1012787	Argument	size		1012346	4					
ANR	1012788	Identifier	size		1012346	0					
ANR	1012789	Statement	r_cons_printf	1248:3:38217:38229	1012346	15	True				
ANR	1012790	Statement	(	1248:17:38231:38231	1012346	16	True				
ANR	1012791	Statement	"""],\\""retaddr\\"":%"""	1248:18:38232:38248	1012346	17	True				
ANR	1012792	Statement	PFMT64d	1248:35:38249:38255	1012346	18	True				
ANR	1012793	Statement	""",\\""size\\"":%d}"""	1248:43:38257:38271	1012346	19	True				
ANR	1012794	Statement	","	1248:58:38272:38272	1012346	20	True				
ANR	1012795	Statement	hit	1248:60:38274:38276	1012346	21	True				
ANR	1012796	Statement	->	1248:63:38277:38278	1012346	22	True				
ANR	1012797	Statement	addr	1248:65:38279:38282	1012346	23	True				
ANR	1012798	Statement	","	1248:69:38283:38283	1012346	24	True				
ANR	1012799	Statement	size	1248:71:38285:38288	1012346	25	True				
ANR	1012800	Statement	)	1248:75:38289:38289	1012346	26	True				
ANR	1012801	ExpressionStatement		1248:76:38290:38290	1012346	27	True				
ANR	1012802	ElseStatement	else		1012346	0					
ANR	1012803	IfStatement	if ( hit )		1012346	0					
ANR	1012804	Condition	hit	1249:13:38305:38307	1012346	0	True				
ANR	1012805	Identifier	hit		1012346	0					
ANR	1012806	CompoundStatement		59:18:1929:1929	1012346	1					
ANR	1012807	Statement	r_cons_printf	1250:3:38315:38327	1012346	0	True				
ANR	1012808	Statement	(	1250:17:38329:38329	1012346	1	True				
ANR	1012809	Statement	"""],\\""retaddr\\"":%"""	1250:18:38330:38346	1012346	2	True				
ANR	1012810	Statement	PFMT64d	1250:35:38347:38353	1012346	3	True				
ANR	1012811	Statement	""",\\""size\\"":%d}"""	1250:43:38355:38369	1012346	4	True				
ANR	1012812	Statement	","	1250:58:38370:38370	1012346	5	True				
ANR	1012813	Statement	hit	1250:60:38372:38374	1012346	6	True				
ANR	1012814	Statement	->	1250:63:38375:38376	1012346	7	True				
ANR	1012815	Statement	addr	1250:65:38377:38380	1012346	8	True				
ANR	1012816	Statement	","	1250:69:38381:38381	1012346	9	True				
ANR	1012817	Statement	size	1250:71:38383:38386	1012346	10	True				
ANR	1012818	Statement	)	1250:75:38387:38387	1012346	11	True				
ANR	1012819	ExpressionStatement		1250:76:38388:38388	1012346	12	True				
ANR	1012820	BreakStatement	break ;	1252:2:38396:38401	1012346	13	True				
ANR	1012821	Label	case 'q' :	1253:1:38404:38412	1012346	14	True				
ANR	1012822	Statement	r_cons_printf	1256:2:38489:38501	1012346	15	True				
ANR	1012823	Statement	(	1256:16:38503:38503	1012346	16	True				
ANR	1012824	Statement	"""0x%08"""	1256:17:38504:38510	1012346	17	True				
ANR	1012825	Statement	PFMT64x	1256:24:38511:38517	1012346	18	True				
ANR	1012826	Statement	""":"""	1256:32:38519:38521	1012346	19	True				
ANR	1012827	Statement	","	1256:35:38522:38522	1012346	20	True				
ANR	1012828	Statement	(	1257:3:38527:38527	1012346	21	True				
ANR	1012829	Statement	(	1257:4:38528:38528	1012346	22	True				
ANR	1012830	Statement	RCoreAsmHit	1257:5:38529:38539	1012346	23	True				
ANR	1012831	Statement	*	1257:17:38541:38541	1012346	24	True				
ANR	1012832	Statement	)	1257:18:38542:38542	1012346	25	True				
ANR	1012833	Statement	hitlist	1257:20:38544:38550	1012346	26	True				
ANR	1012834	Statement	->	1257:27:38551:38552	1012346	27	True				
ANR	1012835	Statement	head	1257:29:38553:38556	1012346	28	True				
ANR	1012836	Statement	->	1257:33:38557:38558	1012346	29	True				
ANR	1012837	Statement	data	1257:35:38559:38562	1012346	30	True				
ANR	1012838	Statement	)	1257:39:38563:38563	1012346	31	True				
ANR	1012839	Statement	->	1257:40:38564:38565	1012346	32	True				
ANR	1012840	Statement	addr	1257:42:38566:38569	1012346	33	True				
ANR	1012841	Statement	)	1257:46:38570:38570	1012346	34	True				
ANR	1012842	ExpressionStatement		1257:47:38571:38571	1012346	35	True				
ANR	1012843	Statement	r_list_foreach	1258:2:38575:38588	1012346	36	True				
ANR	1012844	Statement	(	1258:17:38590:38590	1012346	37	True				
ANR	1012845	Statement	hitlist	1258:18:38591:38597	1012346	38	True				
ANR	1012846	Statement	","	1258:25:38598:38598	1012346	39	True				
ANR	1012847	Statement	iter	1258:27:38600:38603	1012346	40	True				
ANR	1012848	Statement	","	1258:31:38604:38604	1012346	41	True				
ANR	1012849	Statement	hit	1258:33:38606:38608	1012346	42	True				
ANR	1012850	Statement	)	1258:36:38609:38609	1012346	43	True				
ANR	1012851	CompoundStatement		75:3:2536:2587	1012346	44					
ANR	1012852	IdentifierDeclStatement	ut8 * buf = malloc ( hit -> len ) ;	1259:3:38616:38644	1012346	0	True				
ANR	1012853	IdentifierDecl	* buf = malloc ( hit -> len )		1012346	0					
ANR	1012854	IdentifierDeclType	ut8 *		1012346	0					
ANR	1012855	Identifier	buf		1012346	1					
ANR	1012856	AssignmentExpression	* buf = malloc ( hit -> len )		1012346	2		=			
ANR	1012857	Identifier	buf		1012346	0					
ANR	1012858	CallExpression	malloc ( hit -> len )		1012346	1					
ANR	1012859	Callee	malloc		1012346	0					
ANR	1012860	Identifier	malloc		1012346	0					
ANR	1012861	ArgumentList	hit -> len		1012346	1					
ANR	1012862	Argument	hit -> len		1012346	0					
ANR	1012863	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012864	Identifier	hit		1012346	0					
ANR	1012865	Identifier	len		1012346	1					
ANR	1012866	ExpressionStatement	"r_io_read_at ( core -> io , hit -> addr , buf , hit -> len )"	1260:3:38649:38698	1012346	1	True				
ANR	1012867	CallExpression	"r_io_read_at ( core -> io , hit -> addr , buf , hit -> len )"		1012346	0					
ANR	1012868	Callee	r_io_read_at		1012346	0					
ANR	1012869	Identifier	r_io_read_at		1012346	0					
ANR	1012870	ArgumentList	core -> io		1012346	1					
ANR	1012871	Argument	core -> io		1012346	0					
ANR	1012872	PtrMemberAccess	core -> io		1012346	0					
ANR	1012873	Identifier	core		1012346	0					
ANR	1012874	Identifier	io		1012346	1					
ANR	1012875	Argument	hit -> addr		1012346	1					
ANR	1012876	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1012877	Identifier	hit		1012346	0					
ANR	1012878	Identifier	addr		1012346	1					
ANR	1012879	Argument	buf		1012346	2					
ANR	1012880	Identifier	buf		1012346	0					
ANR	1012881	Argument	hit -> len		1012346	3					
ANR	1012882	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012883	Identifier	hit		1012346	0					
ANR	1012884	Identifier	len		1012346	1					
ANR	1012885	ExpressionStatement	"r_asm_set_pc ( core -> assembler , hit -> addr )"	1261:3:38703:38744	1012346	2	True				
ANR	1012886	CallExpression	"r_asm_set_pc ( core -> assembler , hit -> addr )"		1012346	0					
ANR	1012887	Callee	r_asm_set_pc		1012346	0					
ANR	1012888	Identifier	r_asm_set_pc		1012346	0					
ANR	1012889	ArgumentList	core -> assembler		1012346	1					
ANR	1012890	Argument	core -> assembler		1012346	0					
ANR	1012891	PtrMemberAccess	core -> assembler		1012346	0					
ANR	1012892	Identifier	core		1012346	0					
ANR	1012893	Identifier	assembler		1012346	1					
ANR	1012894	Argument	hit -> addr		1012346	1					
ANR	1012895	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1012896	Identifier	hit		1012346	0					
ANR	1012897	Identifier	addr		1012346	1					
ANR	1012898	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , hit -> len )"	1262:3:38749:38807	1012346	3	True				
ANR	1012899	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , hit -> len )"		1012346	0					
ANR	1012900	Callee	r_asm_disassemble		1012346	0					
ANR	1012901	Identifier	r_asm_disassemble		1012346	0					
ANR	1012902	ArgumentList	core -> assembler		1012346	1					
ANR	1012903	Argument	core -> assembler		1012346	0					
ANR	1012904	PtrMemberAccess	core -> assembler		1012346	0					
ANR	1012905	Identifier	core		1012346	0					
ANR	1012906	Identifier	assembler		1012346	1					
ANR	1012907	Argument	& asmop		1012346	1					
ANR	1012908	UnaryOperationExpression	& asmop		1012346	0					
ANR	1012909	UnaryOperator	&		1012346	0					
ANR	1012910	Identifier	asmop		1012346	1					
ANR	1012911	Argument	buf		1012346	2					
ANR	1012912	Identifier	buf		1012346	0					
ANR	1012913	Argument	hit -> len		1012346	3					
ANR	1012914	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012915	Identifier	hit		1012346	0					
ANR	1012916	Identifier	len		1012346	1					
ANR	1012917	ExpressionStatement	"r_anal_op ( core -> anal , & analop , hit -> addr , buf , hit -> len , R_ANAL_OP_MASK_BASIC )"	1263:3:38812:38891	1012346	4	True				
ANR	1012918	CallExpression	"r_anal_op ( core -> anal , & analop , hit -> addr , buf , hit -> len , R_ANAL_OP_MASK_BASIC )"		1012346	0					
ANR	1012919	Callee	r_anal_op		1012346	0					
ANR	1012920	Identifier	r_anal_op		1012346	0					
ANR	1012921	ArgumentList	core -> anal		1012346	1					
ANR	1012922	Argument	core -> anal		1012346	0					
ANR	1012923	PtrMemberAccess	core -> anal		1012346	0					
ANR	1012924	Identifier	core		1012346	0					
ANR	1012925	Identifier	anal		1012346	1					
ANR	1012926	Argument	& analop		1012346	1					
ANR	1012927	UnaryOperationExpression	& analop		1012346	0					
ANR	1012928	UnaryOperator	&		1012346	0					
ANR	1012929	Identifier	analop		1012346	1					
ANR	1012930	Argument	hit -> addr		1012346	2					
ANR	1012931	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1012932	Identifier	hit		1012346	0					
ANR	1012933	Identifier	addr		1012346	1					
ANR	1012934	Argument	buf		1012346	3					
ANR	1012935	Identifier	buf		1012346	0					
ANR	1012936	Argument	hit -> len		1012346	4					
ANR	1012937	PtrMemberAccess	hit -> len		1012346	0					
ANR	1012938	Identifier	hit		1012346	0					
ANR	1012939	Identifier	len		1012346	1					
ANR	1012940	Argument	R_ANAL_OP_MASK_BASIC		1012346	5					
ANR	1012941	Identifier	R_ANAL_OP_MASK_BASIC		1012346	0					
ANR	1012942	ExpressionStatement	size += hit -> len	1264:3:38896:38912	1012346	5	True				
ANR	1012943	AssignmentExpression	size += hit -> len		1012346	0		+=			
ANR	1012944	Identifier	size		1012346	0					
ANR	1012945	PtrMemberAccess	hit -> len		1012346	1					
ANR	1012946	Identifier	hit		1012346	0					
ANR	1012947	Identifier	len		1012346	1					
ANR	1012948	IdentifierDeclStatement	const char * opstr = R_STRBUF_SAFEGET ( & analop . esil ) ;	1265:3:38917:38968	1012346	6	True				
ANR	1012949	IdentifierDecl	* opstr = R_STRBUF_SAFEGET ( & analop . esil )		1012346	0					
ANR	1012950	IdentifierDeclType	const char *		1012346	0					
ANR	1012951	Identifier	opstr		1012346	1					
ANR	1012952	AssignmentExpression	* opstr = R_STRBUF_SAFEGET ( & analop . esil )		1012346	2		=			
ANR	1012953	Identifier	opstr		1012346	0					
ANR	1012954	CallExpression	R_STRBUF_SAFEGET ( & analop . esil )		1012346	1					
ANR	1012955	Callee	R_STRBUF_SAFEGET		1012346	0					
ANR	1012956	Identifier	R_STRBUF_SAFEGET		1012346	0					
ANR	1012957	ArgumentList	& analop . esil		1012346	1					
ANR	1012958	Argument	& analop . esil		1012346	0					
ANR	1012959	UnaryOperationExpression	& analop . esil		1012346	0					
ANR	1012960	UnaryOperator	&		1012346	0					
ANR	1012961	MemberAccess	analop . esil		1012346	1					
ANR	1012962	Identifier	analop		1012346	0					
ANR	1012963	Identifier	esil		1012346	1					
ANR	1012964	IfStatement	if ( analop . type != R_ANAL_OP_TYPE_RET )		1012346	7					
ANR	1012965	Condition	analop . type != R_ANAL_OP_TYPE_RET	1266:7:38977:39009	1012346	0	True				
ANR	1012966	EqualityExpression	analop . type != R_ANAL_OP_TYPE_RET		1012346	0		!=			
ANR	1012967	MemberAccess	analop . type		1012346	0					
ANR	1012968	Identifier	analop		1012346	0					
ANR	1012969	Identifier	type		1012346	1					
ANR	1012970	Identifier	R_ANAL_OP_TYPE_RET		1012346	1					
ANR	1012971	CompoundStatement		76:42:2631:2631	1012346	1					
ANR	1012972	ExpressionStatement	"r_list_append ( ropList , r_str_newf ( "" %s"" , opstr ) )"	1267:4:39018:39068	1012346	0	True				
ANR	1012973	CallExpression	"r_list_append ( ropList , r_str_newf ( "" %s"" , opstr ) )"		1012346	0					
ANR	1012974	Callee	r_list_append		1012346	0					
ANR	1012975	Identifier	r_list_append		1012346	0					
ANR	1012976	ArgumentList	ropList		1012346	1					
ANR	1012977	Argument	ropList		1012346	0					
ANR	1012978	Identifier	ropList		1012346	0					
ANR	1012979	Argument	"r_str_newf ( "" %s"" , opstr )"		1012346	1					
ANR	1012980	CallExpression	"r_str_newf ( "" %s"" , opstr )"		1012346	0					
ANR	1012981	Callee	r_str_newf		1012346	0					
ANR	1012982	Identifier	r_str_newf		1012346	0					
ANR	1012983	ArgumentList	""" %s"""		1012346	1					
ANR	1012984	Argument	""" %s"""		1012346	0					
ANR	1012985	PrimaryExpression	""" %s"""		1012346	0					
ANR	1012986	Argument	opstr		1012346	1					
ANR	1012987	Identifier	opstr		1012346	0					
ANR	1012988	IfStatement	if ( esil )		1012346	8					
ANR	1012989	Condition	esil	1269:7:39082:39085	1012346	0	True				
ANR	1012990	Identifier	esil		1012346	0					
ANR	1012991	CompoundStatement		79:13:2707:2707	1012346	1					
ANR	1012992	ExpressionStatement	"r_cons_printf ( ""%s\\n"" , opstr )"	1270:4:39094:39123	1012346	0	True				
ANR	1012993	CallExpression	"r_cons_printf ( ""%s\\n"" , opstr )"		1012346	0					
ANR	1012994	Callee	r_cons_printf		1012346	0					
ANR	1012995	Identifier	r_cons_printf		1012346	0					
ANR	1012996	ArgumentList	"""%s\\n"""		1012346	1					
ANR	1012997	Argument	"""%s\\n"""		1012346	0					
ANR	1012998	PrimaryExpression	"""%s\\n"""		1012346	0					
ANR	1012999	Argument	opstr		1012346	1					
ANR	1013000	Identifier	opstr		1012346	0					
ANR	1013001	ElseStatement	else		1012346	0					
ANR	1013002	IfStatement	if ( colorize )		1012346	0					
ANR	1013003	Condition	colorize	1271:14:39139:39146	1012346	0	True				
ANR	1013004	Identifier	colorize		1012346	0					
ANR	1013005	CompoundStatement		81:24:2768:2768	1012346	1					
ANR	1013006	ExpressionStatement	"buf_asm = r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 )"	1272:4:39155:39304	1012346	0	True				
ANR	1013007	AssignmentExpression	"buf_asm = r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 )"		1012346	0		=			
ANR	1013008	Identifier	buf_asm		1012346	0					
ANR	1013009	CallExpression	"r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 )"		1012346	1					
ANR	1013010	Callee	r_print_colorize_opcode		1012346	0					
ANR	1013011	Identifier	r_print_colorize_opcode		1012346	0					
ANR	1013012	ArgumentList	core -> print		1012346	1					
ANR	1013013	Argument	core -> print		1012346	0					
ANR	1013014	PtrMemberAccess	core -> print		1012346	0					
ANR	1013015	Identifier	core		1012346	0					
ANR	1013016	Identifier	print		1012346	1					
ANR	1013017	Argument	r_asm_op_get_asm ( & asmop )		1012346	1					
ANR	1013018	CallExpression	r_asm_op_get_asm ( & asmop )		1012346	0					
ANR	1013019	Callee	r_asm_op_get_asm		1012346	0					
ANR	1013020	Identifier	r_asm_op_get_asm		1012346	0					
ANR	1013021	ArgumentList	& asmop		1012346	1					
ANR	1013022	Argument	& asmop		1012346	0					
ANR	1013023	UnaryOperationExpression	& asmop		1012346	0					
ANR	1013024	UnaryOperator	&		1012346	0					
ANR	1013025	Identifier	asmop		1012346	1					
ANR	1013026	Argument	core -> cons -> context -> pal . reg		1012346	2					
ANR	1013027	MemberAccess	core -> cons -> context -> pal . reg		1012346	0					
ANR	1013028	PtrMemberAccess	core -> cons -> context -> pal		1012346	0					
ANR	1013029	PtrMemberAccess	core -> cons -> context		1012346	0					
ANR	1013030	PtrMemberAccess	core -> cons		1012346	0					
ANR	1013031	Identifier	core		1012346	0					
ANR	1013032	Identifier	cons		1012346	1					
ANR	1013033	Identifier	context		1012346	1					
ANR	1013034	Identifier	pal		1012346	1					
ANR	1013035	Identifier	reg		1012346	1					
ANR	1013036	Argument	core -> cons -> context -> pal . num		1012346	3					
ANR	1013037	MemberAccess	core -> cons -> context -> pal . num		1012346	0					
ANR	1013038	PtrMemberAccess	core -> cons -> context -> pal		1012346	0					
ANR	1013039	PtrMemberAccess	core -> cons -> context		1012346	0					
ANR	1013040	PtrMemberAccess	core -> cons		1012346	0					
ANR	1013041	Identifier	core		1012346	0					
ANR	1013042	Identifier	cons		1012346	1					
ANR	1013043	Identifier	context		1012346	1					
ANR	1013044	Identifier	pal		1012346	1					
ANR	1013045	Identifier	num		1012346	1					
ANR	1013046	Argument	false		1012346	4					
ANR	1013047	Identifier	false		1012346	0					
ANR	1013048	Argument	0		1012346	5					
ANR	1013049	PrimaryExpression	0		1012346	0					
ANR	1013050	ExpressionStatement	"r_cons_printf ( "" %s%s;"" , buf_asm , Color_RESET )"	1274:4:39310:39356	1012346	1	True				
ANR	1013051	CallExpression	"r_cons_printf ( "" %s%s;"" , buf_asm , Color_RESET )"		1012346	0					
ANR	1013052	Callee	r_cons_printf		1012346	0					
ANR	1013053	Identifier	r_cons_printf		1012346	0					
ANR	1013054	ArgumentList	""" %s%s;"""		1012346	1					
ANR	1013055	Argument	""" %s%s;"""		1012346	0					
ANR	1013056	PrimaryExpression	""" %s%s;"""		1012346	0					
ANR	1013057	Argument	buf_asm		1012346	1					
ANR	1013058	Identifier	buf_asm		1012346	0					
ANR	1013059	Argument	Color_RESET		1012346	2					
ANR	1013060	Identifier	Color_RESET		1012346	0					
ANR	1013061	ExpressionStatement	free ( buf_asm )	1275:4:39362:39376	1012346	2	True				
ANR	1013062	CallExpression	free ( buf_asm )		1012346	0					
ANR	1013063	Callee	free		1012346	0					
ANR	1013064	Identifier	free		1012346	0					
ANR	1013065	ArgumentList	buf_asm		1012346	1					
ANR	1013066	Argument	buf_asm		1012346	0					
ANR	1013067	Identifier	buf_asm		1012346	0					
ANR	1013068	ElseStatement	else		1012346	0					
ANR	1013069	CompoundStatement		86:10:3007:3007	1012346	0					
ANR	1013070	ExpressionStatement	"r_cons_printf ( "" %s;"" , r_asm_op_get_asm ( & asmop ) )"	1277:4:39394:39443	1012346	0	True				
ANR	1013071	CallExpression	"r_cons_printf ( "" %s;"" , r_asm_op_get_asm ( & asmop ) )"		1012346	0					
ANR	1013072	Callee	r_cons_printf		1012346	0					
ANR	1013073	Identifier	r_cons_printf		1012346	0					
ANR	1013074	ArgumentList	""" %s;"""		1012346	1					
ANR	1013075	Argument	""" %s;"""		1012346	0					
ANR	1013076	PrimaryExpression	""" %s;"""		1012346	0					
ANR	1013077	Argument	r_asm_op_get_asm ( & asmop )		1012346	1					
ANR	1013078	CallExpression	r_asm_op_get_asm ( & asmop )		1012346	0					
ANR	1013079	Callee	r_asm_op_get_asm		1012346	0					
ANR	1013080	Identifier	r_asm_op_get_asm		1012346	0					
ANR	1013081	ArgumentList	& asmop		1012346	1					
ANR	1013082	Argument	& asmop		1012346	0					
ANR	1013083	UnaryOperationExpression	& asmop		1012346	0					
ANR	1013084	UnaryOperator	&		1012346	0					
ANR	1013085	Identifier	asmop		1012346	1					
ANR	1013086	ExpressionStatement	free ( buf )	1279:3:39453:39463	1012346	9	True				
ANR	1013087	CallExpression	free ( buf )		1012346	0					
ANR	1013088	Callee	free		1012346	0					
ANR	1013089	Identifier	free		1012346	0					
ANR	1013090	ArgumentList	buf		1012346	1					
ANR	1013091	Argument	buf		1012346	0					
ANR	1013092	Identifier	buf		1012346	0					
ANR	1013093	IfStatement	if ( db && hit )		1012346	45					
ANR	1013094	Condition	db && hit	1281:6:39475:39483	1012346	0	True				
ANR	1013095	AndExpression	db && hit		1012346	0		&&			
ANR	1013096	Identifier	db		1012346	0					
ANR	1013097	Identifier	hit		1012346	1					
ANR	1013098	CompoundStatement		92:3:3110:3171	1012346	1					
ANR	1013099	IdentifierDeclStatement	const ut64 addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr ;	1282:3:39491:39552	1012346	0	True				
ANR	1013100	IdentifierDecl	addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	0					
ANR	1013101	IdentifierDeclType	const ut64		1012346	0					
ANR	1013102	Identifier	addr		1012346	1					
ANR	1013103	AssignmentExpression	addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	2		=			
ANR	1013104	Identifier	addr		1012346	0					
ANR	1013105	PtrMemberAccess	( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	1					
ANR	1013106	CastExpression	( RCoreAsmHit * ) hitlist -> head -> data		1012346	0					
ANR	1013107	CastTarget	RCoreAsmHit *		1012346	0					
ANR	1013108	PtrMemberAccess	hitlist -> head -> data		1012346	1					
ANR	1013109	PtrMemberAccess	hitlist -> head		1012346	0					
ANR	1013110	Identifier	hitlist		1012346	0					
ANR	1013111	Identifier	head		1012346	1					
ANR	1013112	Identifier	data		1012346	1					
ANR	1013113	Identifier	addr		1012346	1					
ANR	1013114	Statement	const	1284:3:39611:39615	1012346	1	True				
ANR	1013115	Statement	char	1284:9:39617:39620	1012346	2	True				
ANR	1013116	Statement	*	1284:14:39622:39622	1012346	3	True				
ANR	1013117	Statement	key	1284:15:39623:39625	1012346	4	True				
ANR	1013118	Statement	=	1284:19:39627:39627	1012346	5	True				
ANR	1013119	Statement	sdb_fmt	1284:21:39629:39635	1012346	6	True				
ANR	1013120	Statement	(	1284:29:39637:39637	1012346	7	True				
ANR	1013121	Statement	"""0x%08"""	1284:30:39638:39644	1012346	8	True				
ANR	1013122	Statement	PFMT64x	1284:37:39645:39651	1012346	9	True				
ANR	1013123	Statement	","	1284:44:39652:39652	1012346	10	True				
ANR	1013124	Statement	addr	1284:46:39654:39657	1012346	11	True				
ANR	1013125	Statement	)	1284:50:39658:39658	1012346	12	True				
ANR	1013126	ExpressionStatement		1284:51:39659:39659	1012346	13	True				
ANR	1013127	ExpressionStatement	"rop_classify ( core , db , ropList , key , size )"	1285:3:39664:39707	1012346	14	True				
ANR	1013128	CallExpression	"rop_classify ( core , db , ropList , key , size )"		1012346	0					
ANR	1013129	Callee	rop_classify		1012346	0					
ANR	1013130	Identifier	rop_classify		1012346	0					
ANR	1013131	ArgumentList	core		1012346	1					
ANR	1013132	Argument	core		1012346	0					
ANR	1013133	Identifier	core		1012346	0					
ANR	1013134	Argument	db		1012346	1					
ANR	1013135	Identifier	db		1012346	0					
ANR	1013136	Argument	ropList		1012346	2					
ANR	1013137	Identifier	ropList		1012346	0					
ANR	1013138	Argument	key		1012346	3					
ANR	1013139	Identifier	key		1012346	0					
ANR	1013140	Argument	size		1012346	4					
ANR	1013141	Identifier	size		1012346	0					
ANR	1013142	BreakStatement	break ;	1287:2:39715:39720	1012346	46	True				
ANR	1013143	Label	default :	1288:1:39723:39730	1012346	47	True				
ANR	1013144	Identifier	default		1012346	0					
ANR	1013145	Statement	r_list_foreach	1290:2:39789:39802	1012346	48	True				
ANR	1013146	Statement	(	1290:17:39804:39804	1012346	49	True				
ANR	1013147	Statement	hitlist	1290:18:39805:39811	1012346	50	True				
ANR	1013148	Statement	","	1290:25:39812:39812	1012346	51	True				
ANR	1013149	Statement	iter	1290:27:39814:39817	1012346	52	True				
ANR	1013150	Statement	","	1290:31:39818:39818	1012346	53	True				
ANR	1013151	Statement	hit	1290:33:39820:39822	1012346	54	True				
ANR	1013152	Statement	)	1290:36:39823:39823	1012346	55	True				
ANR	1013153	CompoundStatement		121:3:4167:4211	1012346	56					
ANR	1013154	IdentifierDeclStatement	"char * comment = rop_comments ? r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , hit -> addr ) : NULL ;"	1291:3:39830:39932	1012346	0	True				
ANR	1013155	IdentifierDecl	"* comment = rop_comments ? r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , hit -> addr ) : NULL"		1012346	0					
ANR	1013156	IdentifierDeclType	char *		1012346	0					
ANR	1013157	Identifier	comment		1012346	1					
ANR	1013158	AssignmentExpression	"* comment = rop_comments ? r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , hit -> addr ) : NULL"		1012346	2		=			
ANR	1013159	Identifier	comment		1012346	0					
ANR	1013160	ConditionalExpression	"rop_comments ? r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , hit -> addr ) : NULL"		1012346	1					
ANR	1013161	Condition	rop_comments		1012346	0					
ANR	1013162	Identifier	rop_comments		1012346	0					
ANR	1013163	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , hit -> addr )"		1012346	1					
ANR	1013164	Callee	r_meta_get_string		1012346	0					
ANR	1013165	Identifier	r_meta_get_string		1012346	0					
ANR	1013166	ArgumentList	core -> anal		1012346	1					
ANR	1013167	Argument	core -> anal		1012346	0					
ANR	1013168	PtrMemberAccess	core -> anal		1012346	0					
ANR	1013169	Identifier	core		1012346	0					
ANR	1013170	Identifier	anal		1012346	1					
ANR	1013171	Argument	R_META_TYPE_COMMENT		1012346	1					
ANR	1013172	Identifier	R_META_TYPE_COMMENT		1012346	0					
ANR	1013173	Argument	hit -> addr		1012346	2					
ANR	1013174	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1013175	Identifier	hit		1012346	0					
ANR	1013176	Identifier	addr		1012346	1					
ANR	1013177	Identifier	NULL		1012346	2					
ANR	1013178	IfStatement	if ( hit -> len < 0 )		1012346	1					
ANR	1013179	Condition	hit -> len < 0	1293:7:39941:39952	1012346	0	True				
ANR	1013180	RelationalExpression	hit -> len < 0		1012346	0		<			
ANR	1013181	PtrMemberAccess	hit -> len		1012346	0					
ANR	1013182	Identifier	hit		1012346	0					
ANR	1013183	Identifier	len		1012346	1					
ANR	1013184	PrimaryExpression	0		1012346	1					
ANR	1013185	CompoundStatement		103:21:3574:3574	1012346	1					
ANR	1013186	ExpressionStatement	"eprintf ( ""Invalid hit length here\\n"" )"	1294:4:39961:39998	1012346	0	True				
ANR	1013187	CallExpression	"eprintf ( ""Invalid hit length here\\n"" )"		1012346	0					
ANR	1013188	Callee	eprintf		1012346	0					
ANR	1013189	Identifier	eprintf		1012346	0					
ANR	1013190	ArgumentList	"""Invalid hit length here\\n"""		1012346	1					
ANR	1013191	Argument	"""Invalid hit length here\\n"""		1012346	0					
ANR	1013192	PrimaryExpression	"""Invalid hit length here\\n"""		1012346	0					
ANR	1013193	ContinueStatement	continue ;	1295:4:40004:40012	1012346	1	True				
ANR	1013194	IdentifierDeclStatement	ut8 * buf = malloc ( 1 + hit -> len ) ;	1297:3:40022:40054	1012346	2	True				
ANR	1013195	IdentifierDecl	* buf = malloc ( 1 + hit -> len )		1012346	0					
ANR	1013196	IdentifierDeclType	ut8 *		1012346	0					
ANR	1013197	Identifier	buf		1012346	1					
ANR	1013198	AssignmentExpression	* buf = malloc ( 1 + hit -> len )		1012346	2		=			
ANR	1013199	Identifier	buf		1012346	0					
ANR	1013200	CallExpression	malloc ( 1 + hit -> len )		1012346	1					
ANR	1013201	Callee	malloc		1012346	0					
ANR	1013202	Identifier	malloc		1012346	0					
ANR	1013203	ArgumentList	1 + hit -> len		1012346	1					
ANR	1013204	Argument	1 + hit -> len		1012346	0					
ANR	1013205	AdditiveExpression	1 + hit -> len		1012346	0		+			
ANR	1013206	PrimaryExpression	1		1012346	0					
ANR	1013207	PtrMemberAccess	hit -> len		1012346	1					
ANR	1013208	Identifier	hit		1012346	0					
ANR	1013209	Identifier	len		1012346	1					
ANR	1013210	IfStatement	if ( ! buf )		1012346	3					
ANR	1013211	Condition	! buf	1298:7:40063:40066	1012346	0	True				
ANR	1013212	UnaryOperationExpression	! buf		1012346	0					
ANR	1013213	UnaryOperator	!		1012346	0					
ANR	1013214	Identifier	buf		1012346	1					
ANR	1013215	CompoundStatement		108:13:3688:3688	1012346	1					
ANR	1013216	BreakStatement	break ;	1299:4:40075:40080	1012346	0	True				
ANR	1013217	ExpressionStatement	buf [ hit -> len ] = 0	1301:3:40090:40107	1012346	4	True				
ANR	1013218	AssignmentExpression	buf [ hit -> len ] = 0		1012346	0		=			
ANR	1013219	ArrayIndexing	buf [ hit -> len ]		1012346	0					
ANR	1013220	Identifier	buf		1012346	0					
ANR	1013221	PtrMemberAccess	hit -> len		1012346	1					
ANR	1013222	Identifier	hit		1012346	0					
ANR	1013223	Identifier	len		1012346	1					
ANR	1013224	PrimaryExpression	0		1012346	1					
ANR	1013225	ExpressionStatement	"r_io_read_at ( core -> io , hit -> addr , buf , hit -> len )"	1302:3:40112:40161	1012346	5	True				
ANR	1013226	CallExpression	"r_io_read_at ( core -> io , hit -> addr , buf , hit -> len )"		1012346	0					
ANR	1013227	Callee	r_io_read_at		1012346	0					
ANR	1013228	Identifier	r_io_read_at		1012346	0					
ANR	1013229	ArgumentList	core -> io		1012346	1					
ANR	1013230	Argument	core -> io		1012346	0					
ANR	1013231	PtrMemberAccess	core -> io		1012346	0					
ANR	1013232	Identifier	core		1012346	0					
ANR	1013233	Identifier	io		1012346	1					
ANR	1013234	Argument	hit -> addr		1012346	1					
ANR	1013235	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1013236	Identifier	hit		1012346	0					
ANR	1013237	Identifier	addr		1012346	1					
ANR	1013238	Argument	buf		1012346	2					
ANR	1013239	Identifier	buf		1012346	0					
ANR	1013240	Argument	hit -> len		1012346	3					
ANR	1013241	PtrMemberAccess	hit -> len		1012346	0					
ANR	1013242	Identifier	hit		1012346	0					
ANR	1013243	Identifier	len		1012346	1					
ANR	1013244	ExpressionStatement	"r_asm_set_pc ( core -> assembler , hit -> addr )"	1303:3:40166:40207	1012346	6	True				
ANR	1013245	CallExpression	"r_asm_set_pc ( core -> assembler , hit -> addr )"		1012346	0					
ANR	1013246	Callee	r_asm_set_pc		1012346	0					
ANR	1013247	Identifier	r_asm_set_pc		1012346	0					
ANR	1013248	ArgumentList	core -> assembler		1012346	1					
ANR	1013249	Argument	core -> assembler		1012346	0					
ANR	1013250	PtrMemberAccess	core -> assembler		1012346	0					
ANR	1013251	Identifier	core		1012346	0					
ANR	1013252	Identifier	assembler		1012346	1					
ANR	1013253	Argument	hit -> addr		1012346	1					
ANR	1013254	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1013255	Identifier	hit		1012346	0					
ANR	1013256	Identifier	addr		1012346	1					
ANR	1013257	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , hit -> len )"	1304:3:40212:40270	1012346	7	True				
ANR	1013258	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , hit -> len )"		1012346	0					
ANR	1013259	Callee	r_asm_disassemble		1012346	0					
ANR	1013260	Identifier	r_asm_disassemble		1012346	0					
ANR	1013261	ArgumentList	core -> assembler		1012346	1					
ANR	1013262	Argument	core -> assembler		1012346	0					
ANR	1013263	PtrMemberAccess	core -> assembler		1012346	0					
ANR	1013264	Identifier	core		1012346	0					
ANR	1013265	Identifier	assembler		1012346	1					
ANR	1013266	Argument	& asmop		1012346	1					
ANR	1013267	UnaryOperationExpression	& asmop		1012346	0					
ANR	1013268	UnaryOperator	&		1012346	0					
ANR	1013269	Identifier	asmop		1012346	1					
ANR	1013270	Argument	buf		1012346	2					
ANR	1013271	Identifier	buf		1012346	0					
ANR	1013272	Argument	hit -> len		1012346	3					
ANR	1013273	PtrMemberAccess	hit -> len		1012346	0					
ANR	1013274	Identifier	hit		1012346	0					
ANR	1013275	Identifier	len		1012346	1					
ANR	1013276	ExpressionStatement	"r_anal_op ( core -> anal , & analop , hit -> addr , buf , hit -> len , R_ANAL_OP_MASK_ESIL )"	1305:3:40275:40353	1012346	8	True				
ANR	1013277	CallExpression	"r_anal_op ( core -> anal , & analop , hit -> addr , buf , hit -> len , R_ANAL_OP_MASK_ESIL )"		1012346	0					
ANR	1013278	Callee	r_anal_op		1012346	0					
ANR	1013279	Identifier	r_anal_op		1012346	0					
ANR	1013280	ArgumentList	core -> anal		1012346	1					
ANR	1013281	Argument	core -> anal		1012346	0					
ANR	1013282	PtrMemberAccess	core -> anal		1012346	0					
ANR	1013283	Identifier	core		1012346	0					
ANR	1013284	Identifier	anal		1012346	1					
ANR	1013285	Argument	& analop		1012346	1					
ANR	1013286	UnaryOperationExpression	& analop		1012346	0					
ANR	1013287	UnaryOperator	&		1012346	0					
ANR	1013288	Identifier	analop		1012346	1					
ANR	1013289	Argument	hit -> addr		1012346	2					
ANR	1013290	PtrMemberAccess	hit -> addr		1012346	0					
ANR	1013291	Identifier	hit		1012346	0					
ANR	1013292	Identifier	addr		1012346	1					
ANR	1013293	Argument	buf		1012346	3					
ANR	1013294	Identifier	buf		1012346	0					
ANR	1013295	Argument	hit -> len		1012346	4					
ANR	1013296	PtrMemberAccess	hit -> len		1012346	0					
ANR	1013297	Identifier	hit		1012346	0					
ANR	1013298	Identifier	len		1012346	1					
ANR	1013299	Argument	R_ANAL_OP_MASK_ESIL		1012346	5					
ANR	1013300	Identifier	R_ANAL_OP_MASK_ESIL		1012346	0					
ANR	1013301	ExpressionStatement	size += hit -> len	1306:3:40358:40374	1012346	9	True				
ANR	1013302	AssignmentExpression	size += hit -> len		1012346	0		+=			
ANR	1013303	Identifier	size		1012346	0					
ANR	1013304	PtrMemberAccess	hit -> len		1012346	1					
ANR	1013305	Identifier	hit		1012346	0					
ANR	1013306	Identifier	len		1012346	1					
ANR	1013307	IfStatement	if ( analop . type != R_ANAL_OP_TYPE_RET )		1012346	10					
ANR	1013308	Condition	analop . type != R_ANAL_OP_TYPE_RET	1307:7:40383:40415	1012346	0	True				
ANR	1013309	EqualityExpression	analop . type != R_ANAL_OP_TYPE_RET		1012346	0		!=			
ANR	1013310	MemberAccess	analop . type		1012346	0					
ANR	1013311	Identifier	analop		1012346	0					
ANR	1013312	Identifier	type		1012346	1					
ANR	1013313	Identifier	R_ANAL_OP_TYPE_RET		1012346	1					
ANR	1013314	CompoundStatement		118:4:4043:4110	1012346	1					
ANR	1013315	IdentifierDeclStatement	"char * opstr_n = r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) ) ;"	1308:4:40424:40491	1012346	0	True				
ANR	1013316	IdentifierDecl	"* opstr_n = r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) )"		1012346	0					
ANR	1013317	IdentifierDeclType	char *		1012346	0					
ANR	1013318	Identifier	opstr_n		1012346	1					
ANR	1013319	AssignmentExpression	"* opstr_n = r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) )"		1012346	2		=			
ANR	1013320	Identifier	opstr_n		1012346	0					
ANR	1013321	CallExpression	"r_str_newf ( "" %s"" , R_STRBUF_SAFEGET ( & analop . esil ) )"		1012346	1					
ANR	1013322	Callee	r_str_newf		1012346	0					
ANR	1013323	Identifier	r_str_newf		1012346	0					
ANR	1013324	ArgumentList	""" %s"""		1012346	1					
ANR	1013325	Argument	""" %s"""		1012346	0					
ANR	1013326	PrimaryExpression	""" %s"""		1012346	0					
ANR	1013327	Argument	R_STRBUF_SAFEGET ( & analop . esil )		1012346	1					
ANR	1013328	CallExpression	R_STRBUF_SAFEGET ( & analop . esil )		1012346	0					
ANR	1013329	Callee	R_STRBUF_SAFEGET		1012346	0					
ANR	1013330	Identifier	R_STRBUF_SAFEGET		1012346	0					
ANR	1013331	ArgumentList	& analop . esil		1012346	1					
ANR	1013332	Argument	& analop . esil		1012346	0					
ANR	1013333	UnaryOperationExpression	& analop . esil		1012346	0					
ANR	1013334	UnaryOperator	&		1012346	0					
ANR	1013335	MemberAccess	analop . esil		1012346	1					
ANR	1013336	Identifier	analop		1012346	0					
ANR	1013337	Identifier	esil		1012346	1					
ANR	1013338	ExpressionStatement	"r_list_append ( ropList , ( void * ) opstr_n )"	1309:4:40497:40538	1012346	1	True				
ANR	1013339	CallExpression	"r_list_append ( ropList , ( void * ) opstr_n )"		1012346	0					
ANR	1013340	Callee	r_list_append		1012346	0					
ANR	1013341	Identifier	r_list_append		1012346	0					
ANR	1013342	ArgumentList	ropList		1012346	1					
ANR	1013343	Argument	ropList		1012346	0					
ANR	1013344	Identifier	ropList		1012346	0					
ANR	1013345	Argument	( void * ) opstr_n		1012346	1					
ANR	1013346	CastExpression	( void * ) opstr_n		1012346	0					
ANR	1013347	CastTarget	void *		1012346	0					
ANR	1013348	Identifier	opstr_n		1012346	1					
ANR	1013349	IdentifierDeclStatement	char * asm_op_hex = r_asm_op_get_hex ( & asmop ) ;	1311:3:40548:40592	1012346	11	True				
ANR	1013350	IdentifierDecl	* asm_op_hex = r_asm_op_get_hex ( & asmop )		1012346	0					
ANR	1013351	IdentifierDeclType	char *		1012346	0					
ANR	1013352	Identifier	asm_op_hex		1012346	1					
ANR	1013353	AssignmentExpression	* asm_op_hex = r_asm_op_get_hex ( & asmop )		1012346	2		=			
ANR	1013354	Identifier	asm_op_hex		1012346	0					
ANR	1013355	CallExpression	r_asm_op_get_hex ( & asmop )		1012346	1					
ANR	1013356	Callee	r_asm_op_get_hex		1012346	0					
ANR	1013357	Identifier	r_asm_op_get_hex		1012346	0					
ANR	1013358	ArgumentList	& asmop		1012346	1					
ANR	1013359	Argument	& asmop		1012346	0					
ANR	1013360	UnaryOperationExpression	& asmop		1012346	0					
ANR	1013361	UnaryOperator	&		1012346	0					
ANR	1013362	Identifier	asmop		1012346	1					
ANR	1013363	IfStatement	if ( colorize )		1012346	12					
ANR	1013364	Condition	colorize	1312:7:40601:40608	1012346	0	True				
ANR	1013365	Identifier	colorize		1012346	0					
ANR	1013366	CompoundStatement		123:4:4236:4391	1012346	1					
ANR	1013367	IdentifierDeclStatement	"char * buf_asm = r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 ) ;"	1313:4:40617:40772	1012346	0	True				
ANR	1013368	IdentifierDecl	"* buf_asm = r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 )"		1012346	0					
ANR	1013369	IdentifierDeclType	char *		1012346	0					
ANR	1013370	Identifier	buf_asm		1012346	1					
ANR	1013371	AssignmentExpression	"* buf_asm = r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 )"		1012346	2		=			
ANR	1013372	Identifier	buf_asm		1012346	0					
ANR	1013373	CallExpression	"r_print_colorize_opcode ( core -> print , r_asm_op_get_asm ( & asmop ) , core -> cons -> context -> pal . reg , core -> cons -> context -> pal . num , false , 0 )"		1012346	1					
ANR	1013374	Callee	r_print_colorize_opcode		1012346	0					
ANR	1013375	Identifier	r_print_colorize_opcode		1012346	0					
ANR	1013376	ArgumentList	core -> print		1012346	1					
ANR	1013377	Argument	core -> print		1012346	0					
ANR	1013378	PtrMemberAccess	core -> print		1012346	0					
ANR	1013379	Identifier	core		1012346	0					
ANR	1013380	Identifier	print		1012346	1					
ANR	1013381	Argument	r_asm_op_get_asm ( & asmop )		1012346	1					
ANR	1013382	CallExpression	r_asm_op_get_asm ( & asmop )		1012346	0					
ANR	1013383	Callee	r_asm_op_get_asm		1012346	0					
ANR	1013384	Identifier	r_asm_op_get_asm		1012346	0					
ANR	1013385	ArgumentList	& asmop		1012346	1					
ANR	1013386	Argument	& asmop		1012346	0					
ANR	1013387	UnaryOperationExpression	& asmop		1012346	0					
ANR	1013388	UnaryOperator	&		1012346	0					
ANR	1013389	Identifier	asmop		1012346	1					
ANR	1013390	Argument	core -> cons -> context -> pal . reg		1012346	2					
ANR	1013391	MemberAccess	core -> cons -> context -> pal . reg		1012346	0					
ANR	1013392	PtrMemberAccess	core -> cons -> context -> pal		1012346	0					
ANR	1013393	PtrMemberAccess	core -> cons -> context		1012346	0					
ANR	1013394	PtrMemberAccess	core -> cons		1012346	0					
ANR	1013395	Identifier	core		1012346	0					
ANR	1013396	Identifier	cons		1012346	1					
ANR	1013397	Identifier	context		1012346	1					
ANR	1013398	Identifier	pal		1012346	1					
ANR	1013399	Identifier	reg		1012346	1					
ANR	1013400	Argument	core -> cons -> context -> pal . num		1012346	3					
ANR	1013401	MemberAccess	core -> cons -> context -> pal . num		1012346	0					
ANR	1013402	PtrMemberAccess	core -> cons -> context -> pal		1012346	0					
ANR	1013403	PtrMemberAccess	core -> cons -> context		1012346	0					
ANR	1013404	PtrMemberAccess	core -> cons		1012346	0					
ANR	1013405	Identifier	core		1012346	0					
ANR	1013406	Identifier	cons		1012346	1					
ANR	1013407	Identifier	context		1012346	1					
ANR	1013408	Identifier	pal		1012346	1					
ANR	1013409	Identifier	num		1012346	1					
ANR	1013410	Argument	false		1012346	4					
ANR	1013411	Identifier	false		1012346	0					
ANR	1013412	Argument	0		1012346	5					
ANR	1013413	PrimaryExpression	0		1012346	0					
ANR	1013414	ExpressionStatement	"otype = r_print_color_op_type ( core -> print , analop . type )"	1315:4:40778:40834	1012346	1	True				
ANR	1013415	AssignmentExpression	"otype = r_print_color_op_type ( core -> print , analop . type )"		1012346	0		=			
ANR	1013416	Identifier	otype		1012346	0					
ANR	1013417	CallExpression	"r_print_color_op_type ( core -> print , analop . type )"		1012346	1					
ANR	1013418	Callee	r_print_color_op_type		1012346	0					
ANR	1013419	Identifier	r_print_color_op_type		1012346	0					
ANR	1013420	ArgumentList	core -> print		1012346	1					
ANR	1013421	Argument	core -> print		1012346	0					
ANR	1013422	PtrMemberAccess	core -> print		1012346	0					
ANR	1013423	Identifier	core		1012346	0					
ANR	1013424	Identifier	print		1012346	1					
ANR	1013425	Argument	analop . type		1012346	1					
ANR	1013426	MemberAccess	analop . type		1012346	0					
ANR	1013427	Identifier	analop		1012346	0					
ANR	1013428	Identifier	type		1012346	1					
ANR	1013429	IfStatement	if ( comment )		1012346	2					
ANR	1013430	Condition	comment	1316:8:40844:40850	1012346	0	True				
ANR	1013431	Identifier	comment		1012346	0					
ANR	1013432	CompoundStatement		126:17:4472:4472	1012346	1					
ANR	1013433	Statement	r_cons_printf	1317:5:40860:40872	1012346	0	True				
ANR	1013434	Statement	(	1317:19:40874:40874	1012346	1	True				
ANR	1013435	Statement	"""  0x%08"""	1317:20:40875:40883	1012346	2	True				
ANR	1013436	Statement	PFMT64x	1317:29:40884:40890	1012346	3	True				
ANR	1013437	Statement	""" %18s%s  %s%s ; %s\\n"""	1317:37:40892:40913	1012346	4	True				
ANR	1013438	Statement	","	1317:59:40914:40914	1012346	5	True				
ANR	1013439	Statement	hit	1318:6:40922:40924	1012346	6	True				
ANR	1013440	Statement	->	1318:9:40925:40926	1012346	7	True				
ANR	1013441	Statement	addr	1318:11:40927:40930	1012346	8	True				
ANR	1013442	Statement	","	1318:15:40931:40931	1012346	9	True				
ANR	1013443	Statement	asm_op_hex	1318:17:40933:40942	1012346	10	True				
ANR	1013444	Statement	","	1318:27:40943:40943	1012346	11	True				
ANR	1013445	Statement	otype	1318:29:40945:40949	1012346	12	True				
ANR	1013446	Statement	","	1318:34:40950:40950	1012346	13	True				
ANR	1013447	Statement	buf_asm	1318:36:40952:40958	1012346	14	True				
ANR	1013448	Statement	","	1318:43:40959:40959	1012346	15	True				
ANR	1013449	Statement	Color_RESET	1318:45:40961:40971	1012346	16	True				
ANR	1013450	Statement	","	1318:56:40972:40972	1012346	17	True				
ANR	1013451	Statement	comment	1318:58:40974:40980	1012346	18	True				
ANR	1013452	Statement	)	1318:65:40981:40981	1012346	19	True				
ANR	1013453	ExpressionStatement		1318:66:40982:40982	1012346	20	True				
ANR	1013454	ElseStatement	else		1012346	0					
ANR	1013455	CompoundStatement		129:11:4614:4614	1012346	0					
ANR	1013456	Statement	r_cons_printf	1320:5:41002:41014	1012346	0	True				
ANR	1013457	Statement	(	1320:19:41016:41016	1012346	1	True				
ANR	1013458	Statement	"""  0x%08"""	1320:20:41017:41025	1012346	2	True				
ANR	1013459	Statement	PFMT64x	1320:29:41026:41032	1012346	3	True				
ANR	1013460	Statement	""" %18s%s  %s%s\\n"""	1320:37:41034:41050	1012346	4	True				
ANR	1013461	Statement	","	1320:54:41051:41051	1012346	5	True				
ANR	1013462	Statement	hit	1321:6:41059:41061	1012346	6	True				
ANR	1013463	Statement	->	1321:9:41062:41063	1012346	7	True				
ANR	1013464	Statement	addr	1321:11:41064:41067	1012346	8	True				
ANR	1013465	Statement	","	1321:15:41068:41068	1012346	9	True				
ANR	1013466	Statement	asm_op_hex	1321:17:41070:41079	1012346	10	True				
ANR	1013467	Statement	","	1321:27:41080:41080	1012346	11	True				
ANR	1013468	Statement	otype	1321:29:41082:41086	1012346	12	True				
ANR	1013469	Statement	","	1321:34:41087:41087	1012346	13	True				
ANR	1013470	Statement	buf_asm	1321:36:41089:41095	1012346	14	True				
ANR	1013471	Statement	","	1321:43:41096:41096	1012346	15	True				
ANR	1013472	Statement	Color_RESET	1321:45:41098:41108	1012346	16	True				
ANR	1013473	Statement	)	1321:56:41109:41109	1012346	17	True				
ANR	1013474	ExpressionStatement		1321:57:41110:41110	1012346	18	True				
ANR	1013475	ExpressionStatement	free ( buf_asm )	1323:4:41122:41136	1012346	3	True				
ANR	1013476	CallExpression	free ( buf_asm )		1012346	0					
ANR	1013477	Callee	free		1012346	0					
ANR	1013478	Identifier	free		1012346	0					
ANR	1013479	ArgumentList	buf_asm		1012346	1					
ANR	1013480	Argument	buf_asm		1012346	0					
ANR	1013481	Identifier	buf_asm		1012346	0					
ANR	1013482	ElseStatement	else		1012346	0					
ANR	1013483	CompoundStatement		134:10:4767:4767	1012346	0					
ANR	1013484	IfStatement	if ( comment )		1012346	0					
ANR	1013485	Condition	comment	1325:8:41158:41164	1012346	0	True				
ANR	1013486	Identifier	comment		1012346	0					
ANR	1013487	CompoundStatement		135:17:4786:4786	1012346	1					
ANR	1013488	Statement	r_cons_printf	1326:5:41174:41186	1012346	0	True				
ANR	1013489	Statement	(	1326:19:41188:41188	1012346	1	True				
ANR	1013490	Statement	"""  0x%08"""	1326:20:41189:41197	1012346	2	True				
ANR	1013491	Statement	PFMT64x	1326:29:41198:41204	1012346	3	True				
ANR	1013492	Statement	""" %18s  %s ; %s\\n"""	1326:37:41206:41223	1012346	4	True				
ANR	1013493	Statement	","	1326:55:41224:41224	1012346	5	True				
ANR	1013494	Statement	hit	1327:6:41232:41234	1012346	6	True				
ANR	1013495	Statement	->	1327:9:41235:41236	1012346	7	True				
ANR	1013496	Statement	addr	1327:11:41237:41240	1012346	8	True				
ANR	1013497	Statement	","	1327:15:41241:41241	1012346	9	True				
ANR	1013498	Statement	asm_op_hex	1327:17:41243:41252	1012346	10	True				
ANR	1013499	Statement	","	1327:27:41253:41253	1012346	11	True				
ANR	1013500	Statement	r_asm_op_get_asm	1327:29:41255:41270	1012346	12	True				
ANR	1013501	Statement	(	1327:46:41272:41272	1012346	13	True				
ANR	1013502	Statement	&	1327:47:41273:41273	1012346	14	True				
ANR	1013503	Statement	asmop	1327:48:41274:41278	1012346	15	True				
ANR	1013504	Statement	)	1327:53:41279:41279	1012346	16	True				
ANR	1013505	Statement	","	1327:54:41280:41280	1012346	17	True				
ANR	1013506	Statement	comment	1327:56:41282:41288	1012346	18	True				
ANR	1013507	Statement	)	1327:63:41289:41289	1012346	19	True				
ANR	1013508	ExpressionStatement		1327:64:41290:41290	1012346	20	True				
ANR	1013509	ElseStatement	else		1012346	0					
ANR	1013510	CompoundStatement		138:11:4922:4922	1012346	0					
ANR	1013511	Statement	r_cons_printf	1329:5:41310:41322	1012346	0	True				
ANR	1013512	Statement	(	1329:19:41324:41324	1012346	1	True				
ANR	1013513	Statement	"""  0x%08"""	1329:20:41325:41333	1012346	2	True				
ANR	1013514	Statement	PFMT64x	1329:29:41334:41340	1012346	3	True				
ANR	1013515	Statement	""" %18s  %s\\n"""	1329:37:41342:41354	1012346	4	True				
ANR	1013516	Statement	","	1329:50:41355:41355	1012346	5	True				
ANR	1013517	Statement	hit	1330:6:41363:41365	1012346	6	True				
ANR	1013518	Statement	->	1330:9:41366:41367	1012346	7	True				
ANR	1013519	Statement	addr	1330:11:41368:41371	1012346	8	True				
ANR	1013520	Statement	","	1330:15:41372:41372	1012346	9	True				
ANR	1013521	Statement	asm_op_hex	1330:17:41374:41383	1012346	10	True				
ANR	1013522	Statement	","	1330:27:41384:41384	1012346	11	True				
ANR	1013523	Statement	r_asm_op_get_asm	1330:29:41386:41401	1012346	12	True				
ANR	1013524	Statement	(	1330:46:41403:41403	1012346	13	True				
ANR	1013525	Statement	&	1330:47:41404:41404	1012346	14	True				
ANR	1013526	Statement	asmop	1330:48:41405:41409	1012346	15	True				
ANR	1013527	Statement	)	1330:53:41410:41410	1012346	16	True				
ANR	1013528	Statement	)	1330:54:41411:41411	1012346	17	True				
ANR	1013529	ExpressionStatement		1330:55:41412:41412	1012346	18	True				
ANR	1013530	ExpressionStatement	free ( asm_op_hex )	1333:3:41428:41445	1012346	13	True				
ANR	1013531	CallExpression	free ( asm_op_hex )		1012346	0					
ANR	1013532	Callee	free		1012346	0					
ANR	1013533	Identifier	free		1012346	0					
ANR	1013534	ArgumentList	asm_op_hex		1012346	1					
ANR	1013535	Argument	asm_op_hex		1012346	0					
ANR	1013536	Identifier	asm_op_hex		1012346	0					
ANR	1013537	ExpressionStatement	free ( buf )	1334:3:41450:41460	1012346	14	True				
ANR	1013538	CallExpression	free ( buf )		1012346	0					
ANR	1013539	Callee	free		1012346	0					
ANR	1013540	Identifier	free		1012346	0					
ANR	1013541	ArgumentList	buf		1012346	1					
ANR	1013542	Argument	buf		1012346	0					
ANR	1013543	Identifier	buf		1012346	0					
ANR	1013544	IfStatement	if ( db && hit )		1012346	57					
ANR	1013545	Condition	db && hit	1336:6:41472:41480	1012346	0	True				
ANR	1013546	AndExpression	db && hit		1012346	0		&&			
ANR	1013547	Identifier	db		1012346	0					
ANR	1013548	Identifier	hit		1012346	1					
ANR	1013549	CompoundStatement		147:3:5107:5168	1012346	1					
ANR	1013550	IdentifierDeclStatement	const ut64 addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr ;	1337:3:41488:41549	1012346	0	True				
ANR	1013551	IdentifierDecl	addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	0					
ANR	1013552	IdentifierDeclType	const ut64		1012346	0					
ANR	1013553	Identifier	addr		1012346	1					
ANR	1013554	AssignmentExpression	addr = ( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	2		=			
ANR	1013555	Identifier	addr		1012346	0					
ANR	1013556	PtrMemberAccess	( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346	1					
ANR	1013557	CastExpression	( RCoreAsmHit * ) hitlist -> head -> data		1012346	0					
ANR	1013558	CastTarget	RCoreAsmHit *		1012346	0					
ANR	1013559	PtrMemberAccess	hitlist -> head -> data		1012346	1					
ANR	1013560	PtrMemberAccess	hitlist -> head		1012346	0					
ANR	1013561	Identifier	hitlist		1012346	0					
ANR	1013562	Identifier	head		1012346	1					
ANR	1013563	Identifier	data		1012346	1					
ANR	1013564	Identifier	addr		1012346	1					
ANR	1013565	Statement	const	1339:3:41608:41612	1012346	1	True				
ANR	1013566	Statement	char	1339:9:41614:41617	1012346	2	True				
ANR	1013567	Statement	*	1339:14:41619:41619	1012346	3	True				
ANR	1013568	Statement	key	1339:15:41620:41622	1012346	4	True				
ANR	1013569	Statement	=	1339:19:41624:41624	1012346	5	True				
ANR	1013570	Statement	sdb_fmt	1339:21:41626:41632	1012346	6	True				
ANR	1013571	Statement	(	1339:29:41634:41634	1012346	7	True				
ANR	1013572	Statement	"""0x%08"""	1339:30:41635:41641	1012346	8	True				
ANR	1013573	Statement	PFMT64x	1339:37:41642:41648	1012346	9	True				
ANR	1013574	Statement	","	1339:44:41649:41649	1012346	10	True				
ANR	1013575	Statement	addr	1339:46:41651:41654	1012346	11	True				
ANR	1013576	Statement	)	1339:50:41655:41655	1012346	12	True				
ANR	1013577	ExpressionStatement		1339:51:41656:41656	1012346	13	True				
ANR	1013578	ExpressionStatement	"rop_classify ( core , db , ropList , key , size )"	1340:3:41661:41704	1012346	14	True				
ANR	1013579	CallExpression	"rop_classify ( core , db , ropList , key , size )"		1012346	0					
ANR	1013580	Callee	rop_classify		1012346	0					
ANR	1013581	Identifier	rop_classify		1012346	0					
ANR	1013582	ArgumentList	core		1012346	1					
ANR	1013583	Argument	core		1012346	0					
ANR	1013584	Identifier	core		1012346	0					
ANR	1013585	Argument	db		1012346	1					
ANR	1013586	Identifier	db		1012346	0					
ANR	1013587	Argument	ropList		1012346	2					
ANR	1013588	Identifier	ropList		1012346	0					
ANR	1013589	Argument	key		1012346	3					
ANR	1013590	Identifier	key		1012346	0					
ANR	1013591	Argument	size		1012346	4					
ANR	1013592	Identifier	size		1012346	0					
ANR	1013593	IfStatement	if ( mode != 'j' )		1012346	15					
ANR	1013594	Condition	mode != 'j'	1343:5:41718:41728	1012346	0	True				
ANR	1013595	EqualityExpression	mode != 'j'		1012346	0		!=			
ANR	1013596	Identifier	mode		1012346	0					
ANR	1013597	PrimaryExpression	'j'		1012346	1					
ANR	1013598	CompoundStatement		153:18:5350:5350	1012346	1					
ANR	1013599	ExpressionStatement	r_cons_newline ( )	1344:2:41735:41752	1012346	0	True				
ANR	1013600	CallExpression	r_cons_newline ( )		1012346	0					
ANR	1013601	Callee	r_cons_newline		1012346	0					
ANR	1013602	Identifier	r_cons_newline		1012346	0					
ANR	1013603	ArgumentList			1012346	1					
ANR	1013604	ExpressionStatement	r_list_free ( ropList )	1346:1:41758:41779	1012346	16	True				
ANR	1013605	CallExpression	r_list_free ( ropList )		1012346	0					
ANR	1013606	Callee	r_list_free		1012346	0					
ANR	1013607	Identifier	r_list_free		1012346	0					
ANR	1013608	ArgumentList	ropList		1012346	1					
ANR	1013609	Argument	ropList		1012346	0					
ANR	1013610	Identifier	ropList		1012346	0					
ANR	1013611	ReturnType	static void		1012346	1					
ANR	1013612	Identifier	print_rop		1012346	2					
ANR	1013613	ParameterList	"RCore * core , RList * hitlist , char mode , bool * json_first"		1012346	3					
ANR	1013614	Parameter	RCore * core	1191:22:36322:36332	1012346	0	True				
ANR	1013615	ParameterType	RCore *		1012346	0					
ANR	1013616	Identifier	core		1012346	1					
ANR	1013617	Parameter	RList * hitlist	1191:35:36335:36348	1012346	1	True				
ANR	1013618	ParameterType	RList *		1012346	0					
ANR	1013619	Identifier	hitlist		1012346	1					
ANR	1013620	Parameter	char mode	1191:51:36351:36359	1012346	2	True				
ANR	1013621	ParameterType	char		1012346	0					
ANR	1013622	Identifier	mode		1012346	1					
ANR	1013623	Parameter	bool * json_first	1191:62:36362:36377	1012346	3	True				
ANR	1013624	ParameterType	bool *		1012346	0					
ANR	1013625	Identifier	json_first		1012346	1					
ANR	1013626	CFGEntryNode	ENTRY		1012346		True				
ANR	1013627	CFGExitNode	EXIT		1012346		True				
ANR	1013628	CFGErrorNode	ERROR		1012346		True				
ANR	1013629	Symbol	rop_comments		1012346						
ANR	1013630	Symbol	mode		1012346						
ANR	1013631	Symbol	asmop		1012346						
ANR	1013632	Symbol	( ( RCoreAsmHit * ) hitlist -> head -> data ) -> addr		1012346						
ANR	1013633	Symbol	* hitlist		1012346						
ANR	1013634	Symbol	hit		1012346						
ANR	1013635	Symbol	* json_first		1012346						
ANR	1013636	Symbol	colorize		1012346						
ANR	1013637	Symbol	hit -> addr		1012346						
ANR	1013638	Symbol	hitlist -> head		1012346						
ANR	1013639	Symbol	* * hitlist		1012346						
ANR	1013640	Symbol	core -> cons -> context -> pal . reg		1012346						
ANR	1013641	Symbol	* buf		1012346						
ANR	1013642	Symbol	NULL		1012346						
ANR	1013643	Symbol	asm_op_hex		1012346						
ANR	1013644	Symbol	r_list_newf		1012346						
ANR	1013645	Symbol	* * core -> cons		1012346						
ANR	1013646	Symbol	hit -> len		1012346						
ANR	1013647	Symbol	iter		1012346						
ANR	1013648	Symbol	core -> cons -> context -> pal . num		1012346						
ANR	1013649	Symbol	r_asm_op_get_hex		1012346						
ANR	1013650	Symbol	r_print_color_op_type		1012346						
ANR	1013651	Symbol	ropList		1012346						
ANR	1013652	Symbol	core		1012346						
ANR	1013653	Symbol	* * * core		1012346						
ANR	1013654	Symbol	core -> cons -> context -> pal		1012346						
ANR	1013655	Symbol	rop_db		1012346						
ANR	1013656	Symbol	size		1012346						
ANR	1013657	Symbol	hitlist -> head -> data		1012346						
ANR	1013658	Symbol	r_config_get_i		1012346						
ANR	1013659	Symbol	json_first		1012346						
ANR	1013660	Symbol	analop		1012346						
ANR	1013661	Symbol	true		1012346						
ANR	1013662	Symbol	* hitlist -> head		1012346						
ANR	1013663	Symbol	buf_asm		1012346						
ANR	1013664	Symbol	core -> print		1012346						
ANR	1013665	Symbol	core -> cons -> context		1012346						
ANR	1013666	Symbol	R_ANAL_OP_MASK_ESIL		1012346						
ANR	1013667	Symbol	* hit -> len		1012346						
ANR	1013668	Symbol	& analop . esil		1012346						
ANR	1013669	Symbol	* hit		1012346						
ANR	1013670	Symbol	* core -> cons		1012346						
ANR	1013671	Symbol	& analop		1012346						
ANR	1013672	Symbol	core -> sdb		1012346						
ANR	1013673	Symbol	R_META_TYPE_COMMENT		1012346						
ANR	1013674	Symbol	* core		1012346						
ANR	1013675	Symbol	Color_RESET		1012346						
ANR	1013676	Symbol	core -> assembler		1012346						
ANR	1013677	Symbol	R_EMPTY		1012346						
ANR	1013678	Symbol	r_str_newf		1012346						
ANR	1013679	Symbol	core -> anal		1012346						
ANR	1013680	Symbol	R_ANAL_OP_MASK_BASIC		1012346						
ANR	1013681	Symbol	r_asm_op_get_asm		1012346						
ANR	1013682	Symbol	r_print_colorize_opcode		1012346						
ANR	1013683	Symbol	core -> cons		1012346						
ANR	1013684	Symbol	core -> io		1012346						
ANR	1013685	Symbol	* core -> cons -> context		1012346						
ANR	1013686	Symbol	free		1012346						
ANR	1013687	Symbol	addr		1012346						
ANR	1013688	Symbol	* * * hitlist		1012346						
ANR	1013689	Symbol	key		1012346						
ANR	1013690	Symbol	* * core		1012346						
ANR	1013691	Symbol	r_meta_get_string		1012346						
ANR	1013692	Symbol	R_ANAL_OP_TYPE_RET		1012346						
ANR	1013693	Symbol	core -> config		1012346						
ANR	1013694	Symbol	opstr		1012346						
ANR	1013695	Symbol	malloc		1012346						
ANR	1013696	Symbol	opstr_n		1012346						
ANR	1013697	Symbol	R_STRBUF_SAFEGET		1012346						
ANR	1013698	Symbol	* * hit		1012346						
ANR	1013699	Symbol	false		1012346						
ANR	1013700	Symbol	* hitlist -> head -> data		1012346						
ANR	1013701	Symbol	buf		1012346						
ANR	1013702	Symbol	* * hitlist -> head		1012346						
ANR	1013703	Symbol	& asmop		1012346						
ANR	1013704	Symbol	comment		1012346						
ANR	1013705	Symbol	hitlist		1012346						
ANR	1013706	Symbol	otype		1012346						
ANR	1013707	Symbol	db		1012346						
ANR	1013708	Symbol	esil		1012346						
ANR	1013709	Symbol	analop . type		1012346						
ANR	1013710	Symbol	sdb_ns		1012346						
ANR	1013711	Function	r_core_search_rop	1349:0:41784:49306							
ANR	1013712	FunctionDef	"r_core_search_rop (RCore * core , RInterval search_itv , int opt , const char * grep , int regexp , struct search_parameters * param)"		1013711	0					
ANR	1013713	CompoundStatement		1349:136:41920:49306	1013711	0					
ANR	1013714	IdentifierDeclStatement	"const ut8 crop = r_config_get_i ( core -> config , ""rop.conditional"" ) ;"	1350:1:41923:41988	1013711	0	True				
ANR	1013715	IdentifierDecl	"crop = r_config_get_i ( core -> config , ""rop.conditional"" )"		1013711	0					
ANR	1013716	IdentifierDeclType	const ut8		1013711	0					
ANR	1013717	Identifier	crop		1013711	1					
ANR	1013718	AssignmentExpression	"crop = r_config_get_i ( core -> config , ""rop.conditional"" )"		1013711	2		=			
ANR	1013719	Identifier	crop		1013711	0					
ANR	1013720	CallExpression	"r_config_get_i ( core -> config , ""rop.conditional"" )"		1013711	1					
ANR	1013721	Callee	r_config_get_i		1013711	0					
ANR	1013722	Identifier	r_config_get_i		1013711	0					
ANR	1013723	ArgumentList	core -> config		1013711	1					
ANR	1013724	Argument	core -> config		1013711	0					
ANR	1013725	PtrMemberAccess	core -> config		1013711	0					
ANR	1013726	Identifier	core		1013711	0					
ANR	1013727	Identifier	config		1013711	1					
ANR	1013728	Argument	"""rop.conditional"""		1013711	1					
ANR	1013729	PrimaryExpression	"""rop.conditional"""		1013711	0					
ANR	1013730	IdentifierDeclStatement	"const ut8 subchain = r_config_get_i ( core -> config , ""rop.subchains"" ) ;"	1351:1:42072:42139	1013711	1	True				
ANR	1013731	IdentifierDecl	"subchain = r_config_get_i ( core -> config , ""rop.subchains"" )"		1013711	0					
ANR	1013732	IdentifierDeclType	const ut8		1013711	0					
ANR	1013733	Identifier	subchain		1013711	1					
ANR	1013734	AssignmentExpression	"subchain = r_config_get_i ( core -> config , ""rop.subchains"" )"		1013711	2		=			
ANR	1013735	Identifier	subchain		1013711	0					
ANR	1013736	CallExpression	"r_config_get_i ( core -> config , ""rop.subchains"" )"		1013711	1					
ANR	1013737	Callee	r_config_get_i		1013711	0					
ANR	1013738	Identifier	r_config_get_i		1013711	0					
ANR	1013739	ArgumentList	core -> config		1013711	1					
ANR	1013740	Argument	core -> config		1013711	0					
ANR	1013741	PtrMemberAccess	core -> config		1013711	0					
ANR	1013742	Identifier	core		1013711	0					
ANR	1013743	Identifier	config		1013711	1					
ANR	1013744	Argument	"""rop.subchains"""		1013711	1					
ANR	1013745	PrimaryExpression	"""rop.subchains"""		1013711	0					
ANR	1013746	IdentifierDeclStatement	"const ut8 max_instr = r_config_get_i ( core -> config , ""rop.len"" ) ;"	1352:1:42142:42204	1013711	2	True				
ANR	1013747	IdentifierDecl	"max_instr = r_config_get_i ( core -> config , ""rop.len"" )"		1013711	0					
ANR	1013748	IdentifierDeclType	const ut8		1013711	0					
ANR	1013749	Identifier	max_instr		1013711	1					
ANR	1013750	AssignmentExpression	"max_instr = r_config_get_i ( core -> config , ""rop.len"" )"		1013711	2		=			
ANR	1013751	Identifier	max_instr		1013711	0					
ANR	1013752	CallExpression	"r_config_get_i ( core -> config , ""rop.len"" )"		1013711	1					
ANR	1013753	Callee	r_config_get_i		1013711	0					
ANR	1013754	Identifier	r_config_get_i		1013711	0					
ANR	1013755	ArgumentList	core -> config		1013711	1					
ANR	1013756	Argument	core -> config		1013711	0					
ANR	1013757	PtrMemberAccess	core -> config		1013711	0					
ANR	1013758	Identifier	core		1013711	0					
ANR	1013759	Identifier	config		1013711	1					
ANR	1013760	Argument	"""rop.len"""		1013711	1					
ANR	1013761	PrimaryExpression	"""rop.len"""		1013711	0					
ANR	1013762	IdentifierDeclStatement	"const char * arch = r_config_get ( core -> config , ""asm.arch"" ) ;"	1353:1:42207:42265	1013711	3	True				
ANR	1013763	IdentifierDecl	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		1013711	0					
ANR	1013764	IdentifierDeclType	const char *		1013711	0					
ANR	1013765	Identifier	arch		1013711	1					
ANR	1013766	AssignmentExpression	"* arch = r_config_get ( core -> config , ""asm.arch"" )"		1013711	2		=			
ANR	1013767	Identifier	arch		1013711	0					
ANR	1013768	CallExpression	"r_config_get ( core -> config , ""asm.arch"" )"		1013711	1					
ANR	1013769	Callee	r_config_get		1013711	0					
ANR	1013770	Identifier	r_config_get		1013711	0					
ANR	1013771	ArgumentList	core -> config		1013711	1					
ANR	1013772	Argument	core -> config		1013711	0					
ANR	1013773	PtrMemberAccess	core -> config		1013711	0					
ANR	1013774	Identifier	core		1013711	0					
ANR	1013775	Identifier	config		1013711	1					
ANR	1013776	Argument	"""asm.arch"""		1013711	1					
ANR	1013777	PrimaryExpression	"""asm.arch"""		1013711	0					
ANR	1013778	IdentifierDeclStatement	"int max_count = r_config_get_i ( core -> config , ""search.maxhits"" ) ;"	1354:1:42268:42331	1013711	4	True				
ANR	1013779	IdentifierDecl	"max_count = r_config_get_i ( core -> config , ""search.maxhits"" )"		1013711	0					
ANR	1013780	IdentifierDeclType	int		1013711	0					
ANR	1013781	Identifier	max_count		1013711	1					
ANR	1013782	AssignmentExpression	"max_count = r_config_get_i ( core -> config , ""search.maxhits"" )"		1013711	2		=			
ANR	1013783	Identifier	max_count		1013711	0					
ANR	1013784	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		1013711	1					
ANR	1013785	Callee	r_config_get_i		1013711	0					
ANR	1013786	Identifier	r_config_get_i		1013711	0					
ANR	1013787	ArgumentList	core -> config		1013711	1					
ANR	1013788	Argument	core -> config		1013711	0					
ANR	1013789	PtrMemberAccess	core -> config		1013711	0					
ANR	1013790	Identifier	core		1013711	0					
ANR	1013791	Identifier	config		1013711	1					
ANR	1013792	Argument	"""search.maxhits"""		1013711	1					
ANR	1013793	PrimaryExpression	"""search.maxhits"""		1013711	0					
ANR	1013794	IdentifierDeclStatement	"int i = 0 , end = 0 , mode = 0 , increment = 1 , ret , result = true ;"	1355:1:42334:42397	1013711	5	True				
ANR	1013795	IdentifierDecl	i = 0		1013711	0					
ANR	1013796	IdentifierDeclType	int		1013711	0					
ANR	1013797	Identifier	i		1013711	1					
ANR	1013798	AssignmentExpression	i = 0		1013711	2		=			
ANR	1013799	Identifier	i		1013711	0					
ANR	1013800	PrimaryExpression	0		1013711	1					
ANR	1013801	IdentifierDecl	end = 0		1013711	1					
ANR	1013802	IdentifierDeclType	int		1013711	0					
ANR	1013803	Identifier	end		1013711	1					
ANR	1013804	AssignmentExpression	end = 0		1013711	2		=			
ANR	1013805	Identifier	end		1013711	0					
ANR	1013806	PrimaryExpression	0		1013711	1					
ANR	1013807	IdentifierDecl	mode = 0		1013711	2					
ANR	1013808	IdentifierDeclType	int		1013711	0					
ANR	1013809	Identifier	mode		1013711	1					
ANR	1013810	AssignmentExpression	mode = 0		1013711	2		=			
ANR	1013811	Identifier	mode		1013711	0					
ANR	1013812	PrimaryExpression	0		1013711	1					
ANR	1013813	IdentifierDecl	increment = 1		1013711	3					
ANR	1013814	IdentifierDeclType	int		1013711	0					
ANR	1013815	Identifier	increment		1013711	1					
ANR	1013816	AssignmentExpression	increment = 1		1013711	2		=			
ANR	1013817	Identifier	increment		1013711	0					
ANR	1013818	PrimaryExpression	1		1013711	1					
ANR	1013819	IdentifierDecl	ret		1013711	4					
ANR	1013820	IdentifierDeclType	int		1013711	0					
ANR	1013821	Identifier	ret		1013711	1					
ANR	1013822	IdentifierDecl	result = true		1013711	5					
ANR	1013823	IdentifierDeclType	int		1013711	0					
ANR	1013824	Identifier	result		1013711	1					
ANR	1013825	AssignmentExpression	result = true		1013711	2		=			
ANR	1013826	Identifier	true		1013711	0					
ANR	1013827	Identifier	true		1013711	1					
ANR	1013828	IdentifierDeclStatement	RList * end_list = r_list_newf ( free ) ;	1356:1:42400:42455	1013711	6	True				
ANR	1013829	IdentifierDecl	* end_list = r_list_newf ( free )		1013711	0					
ANR	1013830	IdentifierDeclType	RList *		1013711	0					
ANR	1013831	Identifier	end_list		1013711	1					
ANR	1013832	AssignmentExpression	* end_list = r_list_newf ( free )		1013711	2		=			
ANR	1013833	Identifier	end_list		1013711	0					
ANR	1013834	CallExpression	r_list_newf ( free )		1013711	1					
ANR	1013835	Callee	r_list_newf		1013711	0					
ANR	1013836	Identifier	r_list_newf		1013711	0					
ANR	1013837	ArgumentList	free		1013711	1					
ANR	1013838	Argument	free		1013711	0					
ANR	1013839	Identifier	free		1013711	0					
ANR	1013840	IdentifierDeclStatement	RList * rx_list = NULL ;	1357:1:42458:42492	1013711	7	True				
ANR	1013841	IdentifierDecl	* rx_list = NULL		1013711	0					
ANR	1013842	IdentifierDeclType	RList *		1013711	0					
ANR	1013843	Identifier	rx_list		1013711	1					
ANR	1013844	AssignmentExpression	* rx_list = NULL		1013711	2		=			
ANR	1013845	Identifier	NULL		1013711	0					
ANR	1013846	Identifier	NULL		1013711	1					
ANR	1013847	IdentifierDeclStatement	int align = core -> search -> align ;	1358:1:42495:42526	1013711	8	True				
ANR	1013848	IdentifierDecl	align = core -> search -> align		1013711	0					
ANR	1013849	IdentifierDeclType	int		1013711	0					
ANR	1013850	Identifier	align		1013711	1					
ANR	1013851	AssignmentExpression	align = core -> search -> align		1013711	2		=			
ANR	1013852	Identifier	align		1013711	0					
ANR	1013853	PtrMemberAccess	core -> search -> align		1013711	1					
ANR	1013854	PtrMemberAccess	core -> search		1013711	0					
ANR	1013855	Identifier	core		1013711	0					
ANR	1013856	Identifier	search		1013711	1					
ANR	1013857	Identifier	align		1013711	1					
ANR	1013858	IdentifierDeclStatement	RListIter * itermap = NULL ;	1359:1:42529:42554	1013711	9	True				
ANR	1013859	IdentifierDecl	* itermap = NULL		1013711	0					
ANR	1013860	IdentifierDeclType	RListIter *		1013711	0					
ANR	1013861	Identifier	itermap		1013711	1					
ANR	1013862	AssignmentExpression	* itermap = NULL		1013711	2		=			
ANR	1013863	Identifier	NULL		1013711	0					
ANR	1013864	Identifier	NULL		1013711	1					
ANR	1013865	IdentifierDeclStatement	"char * tok , * gregexp = NULL ;"	1360:1:42557:42583	1013711	10	True				
ANR	1013866	IdentifierDecl	* tok		1013711	0					
ANR	1013867	IdentifierDeclType	char *		1013711	0					
ANR	1013868	Identifier	tok		1013711	1					
ANR	1013869	IdentifierDecl	* gregexp = NULL		1013711	1					
ANR	1013870	IdentifierDeclType	char *		1013711	0					
ANR	1013871	Identifier	gregexp		1013711	1					
ANR	1013872	AssignmentExpression	* gregexp = NULL		1013711	2		=			
ANR	1013873	Identifier	NULL		1013711	0					
ANR	1013874	Identifier	NULL		1013711	1					
ANR	1013875	IdentifierDeclStatement	char * grep_arg = NULL ;	1361:1:42586:42607	1013711	11	True				
ANR	1013876	IdentifierDecl	* grep_arg = NULL		1013711	0					
ANR	1013877	IdentifierDeclType	char *		1013711	0					
ANR	1013878	Identifier	grep_arg		1013711	1					
ANR	1013879	AssignmentExpression	* grep_arg = NULL		1013711	2		=			
ANR	1013880	Identifier	NULL		1013711	0					
ANR	1013881	Identifier	NULL		1013711	1					
ANR	1013882	IdentifierDeclStatement	bool json_first = true ;	1362:1:42610:42632	1013711	12	True				
ANR	1013883	IdentifierDecl	json_first = true		1013711	0					
ANR	1013884	IdentifierDeclType	bool		1013711	0					
ANR	1013885	Identifier	json_first		1013711	1					
ANR	1013886	AssignmentExpression	json_first = true		1013711	2		=			
ANR	1013887	Identifier	true		1013711	0					
ANR	1013888	Identifier	true		1013711	1					
ANR	1013889	IdentifierDeclStatement	char * rx = NULL ;	1363:1:42635:42650	1013711	13	True				
ANR	1013890	IdentifierDecl	* rx = NULL		1013711	0					
ANR	1013891	IdentifierDeclType	char *		1013711	0					
ANR	1013892	Identifier	rx		1013711	1					
ANR	1013893	AssignmentExpression	* rx = NULL		1013711	2		=			
ANR	1013894	Identifier	NULL		1013711	0					
ANR	1013895	Identifier	NULL		1013711	1					
ANR	1013896	IdentifierDeclStatement	int delta = 0 ;	1364:1:42653:42666	1013711	14	True				
ANR	1013897	IdentifierDecl	delta = 0		1013711	0					
ANR	1013898	IdentifierDeclType	int		1013711	0					
ANR	1013899	Identifier	delta		1013711	1					
ANR	1013900	AssignmentExpression	delta = 0		1013711	2		=			
ANR	1013901	Identifier	delta		1013711	0					
ANR	1013902	PrimaryExpression	0		1013711	1					
ANR	1013903	IdentifierDeclStatement	ut8 * buf ;	1365:1:42669:42677	1013711	15	True				
ANR	1013904	IdentifierDecl	* buf		1013711	0					
ANR	1013905	IdentifierDeclType	ut8 *		1013711	0					
ANR	1013906	Identifier	buf		1013711	1					
ANR	1013907	IdentifierDeclStatement	RIOMap * map ;	1366:1:42680:42691	1013711	16	True				
ANR	1013908	IdentifierDecl	* map		1013711	0					
ANR	1013909	IdentifierDeclType	RIOMap *		1013711	0					
ANR	1013910	Identifier	map		1013711	1					
ANR	1013911	IdentifierDeclStatement	RAsmOp asmop ;	1367:1:42694:42706	1013711	17	True				
ANR	1013912	IdentifierDecl	asmop		1013711	0					
ANR	1013913	IdentifierDeclType	RAsmOp		1013711	0					
ANR	1013914	Identifier	asmop		1013711	1					
ANR	1013915	IdentifierDeclStatement	Sdb * gadgetSdb = NULL ;	1369:1:42710:42731	1013711	18	True				
ANR	1013916	IdentifierDecl	* gadgetSdb = NULL		1013711	0					
ANR	1013917	IdentifierDeclType	Sdb *		1013711	0					
ANR	1013918	Identifier	gadgetSdb		1013711	1					
ANR	1013919	AssignmentExpression	* gadgetSdb = NULL		1013711	2		=			
ANR	1013920	Identifier	NULL		1013711	0					
ANR	1013921	Identifier	NULL		1013711	1					
ANR	1013922	IfStatement	"if ( r_config_get_i ( core -> config , ""rop.sdb"" ) )"		1013711	19					
ANR	1013923	Condition	"r_config_get_i ( core -> config , ""rop.sdb"" )"	1370:5:42738:42777	1013711	0	True				
ANR	1013924	CallExpression	"r_config_get_i ( core -> config , ""rop.sdb"" )"		1013711	0					
ANR	1013925	Callee	r_config_get_i		1013711	0					
ANR	1013926	Identifier	r_config_get_i		1013711	0					
ANR	1013927	ArgumentList	core -> config		1013711	1					
ANR	1013928	Argument	core -> config		1013711	0					
ANR	1013929	PtrMemberAccess	core -> config		1013711	0					
ANR	1013930	Identifier	core		1013711	0					
ANR	1013931	Identifier	config		1013711	1					
ANR	1013932	Argument	"""rop.sdb"""		1013711	1					
ANR	1013933	PrimaryExpression	"""rop.sdb"""		1013711	0					
ANR	1013934	CompoundStatement		22:47:859:859	1013711	1					
ANR	1013935	IfStatement	"if ( ! ( gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false ) ) )"		1013711	0					
ANR	1013936	Condition	"! ( gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false ) )"	1371:6:42788:42841	1013711	0	True				
ANR	1013937	UnaryOperationExpression	"! ( gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false ) )"		1013711	0					
ANR	1013938	UnaryOperator	!		1013711	0					
ANR	1013939	AssignmentExpression	"gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false )"		1013711	1		=			
ANR	1013940	Identifier	gadgetSdb		1013711	0					
ANR	1013941	CallExpression	"sdb_ns ( core -> sdb , ""gadget_sdb"" , false )"		1013711	1					
ANR	1013942	Callee	sdb_ns		1013711	0					
ANR	1013943	Identifier	sdb_ns		1013711	0					
ANR	1013944	ArgumentList	core -> sdb		1013711	1					
ANR	1013945	Argument	core -> sdb		1013711	0					
ANR	1013946	PtrMemberAccess	core -> sdb		1013711	0					
ANR	1013947	Identifier	core		1013711	0					
ANR	1013948	Identifier	sdb		1013711	1					
ANR	1013949	Argument	"""gadget_sdb"""		1013711	1					
ANR	1013950	PrimaryExpression	"""gadget_sdb"""		1013711	0					
ANR	1013951	Argument	false		1013711	2					
ANR	1013952	Identifier	false		1013711	0					
ANR	1013953	CompoundStatement		23:62:923:923	1013711	1					
ANR	1013954	ExpressionStatement	"gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , true )"	1372:3:42849:42899	1013711	0	True				
ANR	1013955	AssignmentExpression	"gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , true )"		1013711	0		=			
ANR	1013956	Identifier	gadgetSdb		1013711	0					
ANR	1013957	CallExpression	"sdb_ns ( core -> sdb , ""gadget_sdb"" , true )"		1013711	1					
ANR	1013958	Callee	sdb_ns		1013711	0					
ANR	1013959	Identifier	sdb_ns		1013711	0					
ANR	1013960	ArgumentList	core -> sdb		1013711	1					
ANR	1013961	Argument	core -> sdb		1013711	0					
ANR	1013962	PtrMemberAccess	core -> sdb		1013711	0					
ANR	1013963	Identifier	core		1013711	0					
ANR	1013964	Identifier	sdb		1013711	1					
ANR	1013965	Argument	"""gadget_sdb"""		1013711	1					
ANR	1013966	PrimaryExpression	"""gadget_sdb"""		1013711	0					
ANR	1013967	Argument	true		1013711	2					
ANR	1013968	Identifier	true		1013711	0					
ANR	1013969	IfStatement	if ( max_count == 0 )		1013711	20					
ANR	1013970	Condition	max_count == 0	1375:5:42913:42926	1013711	0	True				
ANR	1013971	EqualityExpression	max_count == 0		1013711	0		==			
ANR	1013972	Identifier	max_count		1013711	0					
ANR	1013973	PrimaryExpression	0		1013711	1					
ANR	1013974	CompoundStatement		27:21:1008:1008	1013711	1					
ANR	1013975	ExpressionStatement	max_count = - 1	1376:2:42933:42947	1013711	0	True				
ANR	1013976	AssignmentExpression	max_count = - 1		1013711	0		=			
ANR	1013977	Identifier	max_count		1013711	0					
ANR	1013978	UnaryOperationExpression	- 1		1013711	1					
ANR	1013979	UnaryOperator	-		1013711	0					
ANR	1013980	PrimaryExpression	1		1013711	1					
ANR	1013981	IfStatement	if ( max_instr <= 1 )		1013711	21					
ANR	1013982	Condition	max_instr <= 1	1378:5:42957:42970	1013711	0	True				
ANR	1013983	RelationalExpression	max_instr <= 1		1013711	0		<=			
ANR	1013984	Identifier	max_instr		1013711	0					
ANR	1013985	PrimaryExpression	1		1013711	1					
ANR	1013986	CompoundStatement		30:21:1052:1052	1013711	1					
ANR	1013987	ExpressionStatement	r_list_free ( end_list )	1379:2:42977:42999	1013711	0	True				
ANR	1013988	CallExpression	r_list_free ( end_list )		1013711	0					
ANR	1013989	Callee	r_list_free		1013711	0					
ANR	1013990	Identifier	r_list_free		1013711	0					
ANR	1013991	ArgumentList	end_list		1013711	1					
ANR	1013992	Argument	end_list		1013711	0					
ANR	1013993	Identifier	end_list		1013711	0					
ANR	1013994	ExpressionStatement	"eprintf ( ""ROP length (rop.len) must be greater than 1.\\n"" )"	1380:2:43003:43061	1013711	1	True				
ANR	1013995	CallExpression	"eprintf ( ""ROP length (rop.len) must be greater than 1.\\n"" )"		1013711	0					
ANR	1013996	Callee	eprintf		1013711	0					
ANR	1013997	Identifier	eprintf		1013711	0					
ANR	1013998	ArgumentList	"""ROP length (rop.len) must be greater than 1.\\n"""		1013711	1					
ANR	1013999	Argument	"""ROP length (rop.len) must be greater than 1.\\n"""		1013711	0					
ANR	1014000	PrimaryExpression	"""ROP length (rop.len) must be greater than 1.\\n"""		1013711	0					
ANR	1014001	IfStatement	if ( max_instr == 1 )		1013711	2					
ANR	1014002	Condition	max_instr == 1	1381:6:43069:43082	1013711	0	True				
ANR	1014003	EqualityExpression	max_instr == 1		1013711	0		==			
ANR	1014004	Identifier	max_instr		1013711	0					
ANR	1014005	PrimaryExpression	1		1013711	1					
ANR	1014006	CompoundStatement		33:22:1164:1164	1013711	1					
ANR	1014007	Statement	eprintf	1382:3:43090:43096	1013711	0	True				
ANR	1014008	Statement	(	1382:11:43098:43098	1013711	1	True				
ANR	1014009	Statement	"""For rop.len = 1, use /c to search for single """	1382:12:43099:43145	1013711	2	True				
ANR	1014010	Statement	"""instructions. See /c? for help.\\n"""	1383:4:43151:43185	1013711	3	True				
ANR	1014011	Statement	)	1383:39:43186:43186	1013711	4	True				
ANR	1014012	ExpressionStatement		1383:40:43187:43187	1013711	5	True				
ANR	1014013	ReturnStatement	return false ;	1385:2:43195:43207	1013711	3	True				
ANR	1014014	Identifier	false		1013711	0					
ANR	1014015	IfStatement	"if ( ! strcmp ( arch , ""mips"" ) )"		1013711	22					
ANR	1014016	Condition	"! strcmp ( arch , ""mips"" )"	1388:5:43218:43239	1013711	0	True				
ANR	1014017	UnaryOperationExpression	"! strcmp ( arch , ""mips"" )"		1013711	0					
ANR	1014018	UnaryOperator	!		1013711	0					
ANR	1014019	CallExpression	"strcmp ( arch , ""mips"" )"		1013711	1					
ANR	1014020	Callee	strcmp		1013711	0					
ANR	1014021	Identifier	strcmp		1013711	0					
ANR	1014022	ArgumentList	arch		1013711	1					
ANR	1014023	Argument	arch		1013711	0					
ANR	1014024	Identifier	arch		1013711	0					
ANR	1014025	Argument	"""mips"""		1013711	1					
ANR	1014026	PrimaryExpression	"""mips"""		1013711	0					
ANR	1014027	CompoundStatement		40:29:1321:1321	1013711	1					
ANR	1014028	ExpressionStatement	increment = 4	1389:2:43280:43293	1013711	0	True				
ANR	1014029	AssignmentExpression	increment = 4		1013711	0		=			
ANR	1014030	Identifier	increment		1013711	0					
ANR	1014031	PrimaryExpression	4		1013711	1					
ANR	1014032	ElseStatement	else		1013711	0					
ANR	1014033	IfStatement	"if ( ! strcmp ( arch , ""arm"" ) )"		1013711	0					
ANR	1014034	Condition	"! strcmp ( arch , ""arm"" )"	1390:12:43307:43327	1013711	0	True				
ANR	1014035	UnaryOperationExpression	"! strcmp ( arch , ""arm"" )"		1013711	0					
ANR	1014036	UnaryOperator	!		1013711	0					
ANR	1014037	CallExpression	"strcmp ( arch , ""arm"" )"		1013711	1					
ANR	1014038	Callee	strcmp		1013711	0					
ANR	1014039	Identifier	strcmp		1013711	0					
ANR	1014040	ArgumentList	arch		1013711	1					
ANR	1014041	Argument	arch		1013711	0					
ANR	1014042	Identifier	arch		1013711	0					
ANR	1014043	Argument	"""arm"""		1013711	1					
ANR	1014044	PrimaryExpression	"""arm"""		1013711	0					
ANR	1014045	CompoundStatement		42:35:1409:1409	1013711	1					
ANR	1014046	ExpressionStatement	"increment = r_config_get_i ( core -> config , ""asm.bits"" ) == 16 ? 2 : 4"	1391:2:43367:43432	1013711	0	True				
ANR	1014047	AssignmentExpression	"increment = r_config_get_i ( core -> config , ""asm.bits"" ) == 16 ? 2 : 4"		1013711	0		=			
ANR	1014048	Identifier	increment		1013711	0					
ANR	1014049	ConditionalExpression	"r_config_get_i ( core -> config , ""asm.bits"" ) == 16 ? 2 : 4"		1013711	1					
ANR	1014050	Condition	"r_config_get_i ( core -> config , ""asm.bits"" ) == 16"		1013711	0					
ANR	1014051	EqualityExpression	"r_config_get_i ( core -> config , ""asm.bits"" ) == 16"		1013711	0		==			
ANR	1014052	CallExpression	"r_config_get_i ( core -> config , ""asm.bits"" )"		1013711	0					
ANR	1014053	Callee	r_config_get_i		1013711	0					
ANR	1014054	Identifier	r_config_get_i		1013711	0					
ANR	1014055	ArgumentList	core -> config		1013711	1					
ANR	1014056	Argument	core -> config		1013711	0					
ANR	1014057	PtrMemberAccess	core -> config		1013711	0					
ANR	1014058	Identifier	core		1013711	0					
ANR	1014059	Identifier	config		1013711	1					
ANR	1014060	Argument	"""asm.bits"""		1013711	1					
ANR	1014061	PrimaryExpression	"""asm.bits"""		1013711	0					
ANR	1014062	PrimaryExpression	16		1013711	1					
ANR	1014063	PrimaryExpression	2		1013711	1					
ANR	1014064	PrimaryExpression	4		1013711	2					
ANR	1014065	ElseStatement	else		1013711	0					
ANR	1014066	IfStatement	"if ( ! strcmp ( arch , ""avr"" ) )"		1013711	0					
ANR	1014067	Condition	"! strcmp ( arch , ""avr"" )"	1392:12:43446:43466	1013711	0	True				
ANR	1014068	UnaryOperationExpression	"! strcmp ( arch , ""avr"" )"		1013711	0					
ANR	1014069	UnaryOperator	!		1013711	0					
ANR	1014070	CallExpression	"strcmp ( arch , ""avr"" )"		1013711	1					
ANR	1014071	Callee	strcmp		1013711	0					
ANR	1014072	Identifier	strcmp		1013711	0					
ANR	1014073	ArgumentList	arch		1013711	1					
ANR	1014074	Argument	arch		1013711	0					
ANR	1014075	Identifier	arch		1013711	0					
ANR	1014076	Argument	"""avr"""		1013711	1					
ANR	1014077	PrimaryExpression	"""avr"""		1013711	0					
ANR	1014078	CompoundStatement		44:35:1548:1548	1013711	1					
ANR	1014079	ExpressionStatement	increment = 2	1393:2:43501:43514	1013711	0	True				
ANR	1014080	AssignmentExpression	increment = 2		1013711	0		=			
ANR	1014081	Identifier	increment		1013711	0					
ANR	1014082	PrimaryExpression	2		1013711	1					
ANR	1014083	ExpressionStatement	"grep_arg = strchr ( grep , ' ' )"	1397:1:43557:43586	1013711	23	True				
ANR	1014084	AssignmentExpression	"grep_arg = strchr ( grep , ' ' )"		1013711	0		=			
ANR	1014085	Identifier	grep_arg		1013711	0					
ANR	1014086	CallExpression	"strchr ( grep , ' ' )"		1013711	1					
ANR	1014087	Callee	strchr		1013711	0					
ANR	1014088	Identifier	strchr		1013711	0					
ANR	1014089	ArgumentList	grep		1013711	1					
ANR	1014090	Argument	grep		1013711	0					
ANR	1014091	Identifier	grep		1013711	0					
ANR	1014092	Argument	' '		1013711	1					
ANR	1014093	PrimaryExpression	' '		1013711	0					
ANR	1014094	IfStatement	if ( * grep )		1013711	24					
ANR	1014095	Condition	* grep	1398:5:43593:43597	1013711	0	True				
ANR	1014096	UnaryOperationExpression	* grep		1013711	0					
ANR	1014097	UnaryOperator	*		1013711	0					
ANR	1014098	Identifier	grep		1013711	1					
ANR	1014099	CompoundStatement		50:12:1679:1679	1013711	1					
ANR	1014100	IfStatement	if ( grep_arg )		1013711	0					
ANR	1014101	Condition	grep_arg	1399:6:43608:43615	1013711	0	True				
ANR	1014102	Identifier	grep_arg		1013711	0					
ANR	1014103	CompoundStatement		51:16:1697:1697	1013711	1					
ANR	1014104	ExpressionStatement	mode = * ( grep_arg - 1 )	1400:3:43623:43645	1013711	0	True				
ANR	1014105	AssignmentExpression	mode = * ( grep_arg - 1 )		1013711	0		=			
ANR	1014106	Identifier	mode		1013711	0					
ANR	1014107	UnaryOperationExpression	* ( grep_arg - 1 )		1013711	1					
ANR	1014108	UnaryOperator	*		1013711	0					
ANR	1014109	AdditiveExpression	grep_arg - 1		1013711	1		-			
ANR	1014110	Identifier	grep_arg		1013711	0					
ANR	1014111	PrimaryExpression	1		1013711	1					
ANR	1014112	ElseStatement	else		1013711	0					
ANR	1014113	CompoundStatement		53:9:1735:1735	1013711	0					
ANR	1014114	ExpressionStatement	mode = * grep	1402:3:43661:43673	1013711	0	True				
ANR	1014115	AssignmentExpression	mode = * grep		1013711	0		=			
ANR	1014116	Identifier	mode		1013711	0					
ANR	1014117	UnaryOperationExpression	* grep		1013711	1					
ANR	1014118	UnaryOperator	*		1013711	0					
ANR	1014119	Identifier	grep		1013711	1					
ANR	1014120	ExpressionStatement	++ grep	1403:3:43678:43684	1013711	1	True				
ANR	1014121	UnaryExpression	++ grep		1013711	0					
ANR	1014122	IncDec	++		1013711	0					
ANR	1014123	Identifier	grep		1013711	1					
ANR	1014124	IfStatement	if ( grep_arg )		1013711	25					
ANR	1014125	Condition	grep_arg	1406:5:43698:43705	1013711	0	True				
ANR	1014126	Identifier	grep_arg		1013711	0					
ANR	1014127	CompoundStatement		58:15:1787:1787	1013711	1					
ANR	1014128	ExpressionStatement	grep_arg = strdup ( grep_arg )	1407:2:43712:43740	1013711	0	True				
ANR	1014129	AssignmentExpression	grep_arg = strdup ( grep_arg )		1013711	0		=			
ANR	1014130	Identifier	grep_arg		1013711	0					
ANR	1014131	CallExpression	strdup ( grep_arg )		1013711	1					
ANR	1014132	Callee	strdup		1013711	0					
ANR	1014133	Identifier	strdup		1013711	0					
ANR	1014134	ArgumentList	grep_arg		1013711	1					
ANR	1014135	Argument	grep_arg		1013711	0					
ANR	1014136	Identifier	grep_arg		1013711	0					
ANR	1014137	ExpressionStatement	"grep_arg = r_str_replace ( grep_arg , "",,"" , "";"" , true )"	1408:2:43744:43796	1013711	1	True				
ANR	1014138	AssignmentExpression	"grep_arg = r_str_replace ( grep_arg , "",,"" , "";"" , true )"		1013711	0		=			
ANR	1014139	Identifier	grep_arg		1013711	0					
ANR	1014140	CallExpression	"r_str_replace ( grep_arg , "",,"" , "";"" , true )"		1013711	1					
ANR	1014141	Callee	r_str_replace		1013711	0					
ANR	1014142	Identifier	r_str_replace		1013711	0					
ANR	1014143	ArgumentList	grep_arg		1013711	1					
ANR	1014144	Argument	grep_arg		1013711	0					
ANR	1014145	Identifier	grep_arg		1013711	0					
ANR	1014146	Argument	""",,"""		1013711	1					
ANR	1014147	PrimaryExpression	""",,"""		1013711	0					
ANR	1014148	Argument	""";"""		1013711	2					
ANR	1014149	PrimaryExpression	""";"""		1013711	0					
ANR	1014150	Argument	true		1013711	3					
ANR	1014151	Identifier	true		1013711	0					
ANR	1014152	ExpressionStatement	grep = grep_arg	1409:2:43800:43815	1013711	2	True				
ANR	1014153	AssignmentExpression	grep = grep_arg		1013711	0		=			
ANR	1014154	Identifier	grep		1013711	0					
ANR	1014155	Identifier	grep_arg		1013711	1					
ANR	1014156	IfStatement	if ( * grep == ' ' )		1013711	26					
ANR	1014157	Condition	* grep == ' '	1412:5:43826:43837	1013711	0	True				
ANR	1014158	EqualityExpression	* grep == ' '		1013711	0		==			
ANR	1014159	UnaryOperationExpression	* grep		1013711	0					
ANR	1014160	UnaryOperator	*		1013711	0					
ANR	1014161	Identifier	grep		1013711	1					
ANR	1014162	PrimaryExpression	' '		1013711	1					
ANR	1014163	CompoundStatement		64:19:1919:1919	1013711	1					
ANR	1014164	ForStatement	for ( ++ grep ; * grep == ' ' ; grep ++ )		1013711	0					
ANR	1014165	ForInit	++ grep ;	1413:7:43862:43868	1013711	0	True				
ANR	1014166	UnaryExpression	++ grep		1013711	0					
ANR	1014167	IncDec	++		1013711	0					
ANR	1014168	Identifier	grep		1013711	1					
ANR	1014169	Condition	* grep == ' '	1413:15:43870:43881	1013711	1	True				
ANR	1014170	EqualityExpression	* grep == ' '		1013711	0		==			
ANR	1014171	UnaryOperationExpression	* grep		1013711	0					
ANR	1014172	UnaryOperator	*		1013711	0					
ANR	1014173	Identifier	grep		1013711	1					
ANR	1014174	PrimaryExpression	' '		1013711	1					
ANR	1014175	PostIncDecOperationExpression	grep ++	1413:29:43884:43889	1013711	2	True				
ANR	1014176	Identifier	grep		1013711	0					
ANR	1014177	IncDec	++		1013711	1					
ANR	1014178	CompoundStatement		65:37:1971:1971	1013711	3					
ANR	1014179	ExpressionStatement		1414:3:43897:43897	1013711	0	True				
ANR	1014180	ElseStatement	else		1013711	0					
ANR	1014181	CompoundStatement		68:8:1990:1990	1013711	0					
ANR	1014182	ExpressionStatement	grep = NULL	1417:2:43915:43926	1013711	0	True				
ANR	1014183	AssignmentExpression	grep = NULL		1013711	0		=			
ANR	1014184	Identifier	grep		1013711	0					
ANR	1014185	Identifier	NULL		1013711	1					
ANR	1014186	IfStatement	if ( grep && regexp )		1013711	27					
ANR	1014187	Condition	grep && regexp	1421:5:43965:43978	1013711	0	True				
ANR	1014188	AndExpression	grep && regexp		1013711	0		&&			
ANR	1014189	Identifier	grep		1013711	0					
ANR	1014190	Identifier	regexp		1013711	1					
ANR	1014191	CompoundStatement		73:21:2060:2060	1013711	1					
ANR	1014192	IfStatement	if ( ! rx_list )		1013711	0					
ANR	1014193	Condition	! rx_list	1422:6:43989:43996	1013711	0	True				
ANR	1014194	UnaryOperationExpression	! rx_list		1013711	0					
ANR	1014195	UnaryOperator	!		1013711	0					
ANR	1014196	Identifier	rx_list		1013711	1					
ANR	1014197	CompoundStatement		74:16:2078:2078	1013711	1					
ANR	1014198	ExpressionStatement	rx_list = r_list_newf ( free )	1423:3:44004:44032	1013711	0	True				
ANR	1014199	AssignmentExpression	rx_list = r_list_newf ( free )		1013711	0		=			
ANR	1014200	Identifier	rx_list		1013711	0					
ANR	1014201	CallExpression	r_list_newf ( free )		1013711	1					
ANR	1014202	Callee	r_list_newf		1013711	0					
ANR	1014203	Identifier	r_list_newf		1013711	0					
ANR	1014204	ArgumentList	free		1013711	1					
ANR	1014205	Argument	free		1013711	0					
ANR	1014206	Identifier	free		1013711	0					
ANR	1014207	ExpressionStatement	gregexp = strdup ( grep )	1425:2:44040:44063	1013711	1	True				
ANR	1014208	AssignmentExpression	gregexp = strdup ( grep )		1013711	0		=			
ANR	1014209	Identifier	gregexp		1013711	0					
ANR	1014210	CallExpression	strdup ( grep )		1013711	1					
ANR	1014211	Callee	strdup		1013711	0					
ANR	1014212	Identifier	strdup		1013711	0					
ANR	1014213	ArgumentList	grep		1013711	1					
ANR	1014214	Argument	grep		1013711	0					
ANR	1014215	Identifier	grep		1013711	0					
ANR	1014216	ExpressionStatement	"tok = strtok ( gregexp , "";"" )"	1426:2:44067:44094	1013711	2	True				
ANR	1014217	AssignmentExpression	"tok = strtok ( gregexp , "";"" )"		1013711	0		=			
ANR	1014218	Identifier	tok		1013711	0					
ANR	1014219	CallExpression	"strtok ( gregexp , "";"" )"		1013711	1					
ANR	1014220	Callee	strtok		1013711	0					
ANR	1014221	Identifier	strtok		1013711	0					
ANR	1014222	ArgumentList	gregexp		1013711	1					
ANR	1014223	Argument	gregexp		1013711	0					
ANR	1014224	Identifier	gregexp		1013711	0					
ANR	1014225	Argument	""";"""		1013711	1					
ANR	1014226	PrimaryExpression	""";"""		1013711	0					
ANR	1014227	WhileStatement	while ( tok )		1013711	3					
ANR	1014228	Condition	tok	1427:9:44105:44107	1013711	0	True				
ANR	1014229	Identifier	tok		1013711	0					
ANR	1014230	CompoundStatement		79:14:2189:2189	1013711	1					
ANR	1014231	ExpressionStatement	rx = strdup ( tok )	1428:3:44115:44132	1013711	0	True				
ANR	1014232	AssignmentExpression	rx = strdup ( tok )		1013711	0		=			
ANR	1014233	Identifier	rx		1013711	0					
ANR	1014234	CallExpression	strdup ( tok )		1013711	1					
ANR	1014235	Callee	strdup		1013711	0					
ANR	1014236	Identifier	strdup		1013711	0					
ANR	1014237	ArgumentList	tok		1013711	1					
ANR	1014238	Argument	tok		1013711	0					
ANR	1014239	Identifier	tok		1013711	0					
ANR	1014240	ExpressionStatement	"r_list_append ( rx_list , rx )"	1429:3:44137:44164	1013711	1	True				
ANR	1014241	CallExpression	"r_list_append ( rx_list , rx )"		1013711	0					
ANR	1014242	Callee	r_list_append		1013711	0					
ANR	1014243	Identifier	r_list_append		1013711	0					
ANR	1014244	ArgumentList	rx_list		1013711	1					
ANR	1014245	Argument	rx_list		1013711	0					
ANR	1014246	Identifier	rx_list		1013711	0					
ANR	1014247	Argument	rx		1013711	1					
ANR	1014248	Identifier	rx		1013711	0					
ANR	1014249	ExpressionStatement	"tok = strtok ( NULL , "";"" )"	1430:3:44169:44193	1013711	2	True				
ANR	1014250	AssignmentExpression	"tok = strtok ( NULL , "";"" )"		1013711	0		=			
ANR	1014251	Identifier	tok		1013711	0					
ANR	1014252	CallExpression	"strtok ( NULL , "";"" )"		1013711	1					
ANR	1014253	Callee	strtok		1013711	0					
ANR	1014254	Identifier	strtok		1013711	0					
ANR	1014255	ArgumentList	NULL		1013711	1					
ANR	1014256	Argument	NULL		1013711	0					
ANR	1014257	Identifier	NULL		1013711	0					
ANR	1014258	Argument	""";"""		1013711	1					
ANR	1014259	PrimaryExpression	""";"""		1013711	0					
ANR	1014260	IfStatement	if ( json )		1013711	28					
ANR	1014261	Condition	json	1433:5:44207:44210	1013711	0	True				
ANR	1014262	Identifier	json		1013711	0					
ANR	1014263	CompoundStatement		85:11:2292:2292	1013711	1					
ANR	1014264	ExpressionStatement	"r_cons_printf ( ""["" )"	1434:2:44217:44236	1013711	0	True				
ANR	1014265	CallExpression	"r_cons_printf ( ""["" )"		1013711	0					
ANR	1014266	Callee	r_cons_printf		1013711	0					
ANR	1014267	Identifier	r_cons_printf		1013711	0					
ANR	1014268	ArgumentList	"""["""		1013711	1					
ANR	1014269	Argument	"""["""		1013711	0					
ANR	1014270	PrimaryExpression	"""["""		1013711	0					
ANR	1014271	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	1436:1:44242:44272	1013711	29	True				
ANR	1014272	CallExpression	"r_cons_break_push ( NULL , NULL )"		1013711	0					
ANR	1014273	Callee	r_cons_break_push		1013711	0					
ANR	1014274	Identifier	r_cons_break_push		1013711	0					
ANR	1014275	ArgumentList	NULL		1013711	1					
ANR	1014276	Argument	NULL		1013711	0					
ANR	1014277	Identifier	NULL		1013711	0					
ANR	1014278	Argument	NULL		1013711	1					
ANR	1014279	Identifier	NULL		1013711	0					
ANR	1014280	Statement	r_list_foreach	1438:1:44276:44289	1013711	30	True				
ANR	1014281	Statement	(	1438:16:44291:44291	1013711	31	True				
ANR	1014282	Statement	param	1438:17:44292:44296	1013711	32	True				
ANR	1014283	Statement	->	1438:22:44297:44298	1013711	33	True				
ANR	1014284	Statement	boundaries	1438:24:44299:44308	1013711	34	True				
ANR	1014285	Statement	","	1438:34:44309:44309	1013711	35	True				
ANR	1014286	Statement	itermap	1438:36:44311:44317	1013711	36	True				
ANR	1014287	Statement	","	1438:43:44318:44318	1013711	37	True				
ANR	1014288	Statement	map	1438:45:44320:44322	1013711	38	True				
ANR	1014289	Statement	)	1438:48:44323:44323	1013711	39	True				
ANR	1014290	CompoundStatement		97:2:2598:2640	1013711	40					
ANR	1014291	IdentifierDeclStatement	HtUUOptions opt = { 0 } ;	1439:2:44329:44352	1013711	0	True				
ANR	1014292	IdentifierDecl	opt = { 0 }		1013711	0					
ANR	1014293	IdentifierDeclType	HtUUOptions		1013711	0					
ANR	1014294	Identifier	opt		1013711	1					
ANR	1014295	AssignmentExpression	opt = { 0 }		1013711	2		=			
ANR	1014296	Identifier	opt		1013711	0					
ANR	1014297	InitializerList	0		1013711	1					
ANR	1014298	PrimaryExpression	0		1013711	0					
ANR	1014299	IdentifierDeclStatement	HtUU * badstart = ht_uu_new_opt ( & opt ) ;	1440:2:44356:44393	1013711	1	True				
ANR	1014300	IdentifierDecl	* badstart = ht_uu_new_opt ( & opt )		1013711	0					
ANR	1014301	IdentifierDeclType	HtUU *		1013711	0					
ANR	1014302	Identifier	badstart		1013711	1					
ANR	1014303	AssignmentExpression	* badstart = ht_uu_new_opt ( & opt )		1013711	2		=			
ANR	1014304	Identifier	badstart		1013711	0					
ANR	1014305	CallExpression	ht_uu_new_opt ( & opt )		1013711	1					
ANR	1014306	Callee	ht_uu_new_opt		1013711	0					
ANR	1014307	Identifier	ht_uu_new_opt		1013711	0					
ANR	1014308	ArgumentList	& opt		1013711	1					
ANR	1014309	Argument	& opt		1013711	0					
ANR	1014310	UnaryOperationExpression	& opt		1013711	0					
ANR	1014311	UnaryOperator	&		1013711	0					
ANR	1014312	Identifier	opt		1013711	1					
ANR	1014313	IfStatement	"if ( ! r_itv_overlap ( search_itv , map -> itv ) )"		1013711	2					
ANR	1014314	Condition	"! r_itv_overlap ( search_itv , map -> itv )"	1441:6:44401:44437	1013711	0	True				
ANR	1014315	UnaryOperationExpression	"! r_itv_overlap ( search_itv , map -> itv )"		1013711	0					
ANR	1014316	UnaryOperator	!		1013711	0					
ANR	1014317	CallExpression	"r_itv_overlap ( search_itv , map -> itv )"		1013711	1					
ANR	1014318	Callee	r_itv_overlap		1013711	0					
ANR	1014319	Identifier	r_itv_overlap		1013711	0					
ANR	1014320	ArgumentList	search_itv		1013711	1					
ANR	1014321	Argument	search_itv		1013711	0					
ANR	1014322	Identifier	search_itv		1013711	0					
ANR	1014323	Argument	map -> itv		1013711	1					
ANR	1014324	PtrMemberAccess	map -> itv		1013711	0					
ANR	1014325	Identifier	map		1013711	0					
ANR	1014326	Identifier	itv		1013711	1					
ANR	1014327	CompoundStatement		93:45:2519:2519	1013711	1					
ANR	1014328	ContinueStatement	continue ;	1442:3:44445:44453	1013711	0	True				
ANR	1014329	IdentifierDeclStatement	"RInterval itv = r_itv_intersect ( search_itv , map -> itv ) ;"	1444:2:44461:44515	1013711	3	True				
ANR	1014330	IdentifierDecl	"itv = r_itv_intersect ( search_itv , map -> itv )"		1013711	0					
ANR	1014331	IdentifierDeclType	RInterval		1013711	0					
ANR	1014332	Identifier	itv		1013711	1					
ANR	1014333	AssignmentExpression	"itv = r_itv_intersect ( search_itv , map -> itv )"		1013711	2		=			
ANR	1014334	Identifier	itv		1013711	0					
ANR	1014335	CallExpression	"r_itv_intersect ( search_itv , map -> itv )"		1013711	1					
ANR	1014336	Callee	r_itv_intersect		1013711	0					
ANR	1014337	Identifier	r_itv_intersect		1013711	0					
ANR	1014338	ArgumentList	search_itv		1013711	1					
ANR	1014339	Argument	search_itv		1013711	0					
ANR	1014340	Identifier	search_itv		1013711	0					
ANR	1014341	Argument	map -> itv		1013711	1					
ANR	1014342	PtrMemberAccess	map -> itv		1013711	0					
ANR	1014343	Identifier	map		1013711	0					
ANR	1014344	Identifier	itv		1013711	1					
ANR	1014345	IdentifierDeclStatement	"ut64 from = itv . addr , to = r_itv_end ( itv ) ;"	1445:2:44519:44561	1013711	4	True				
ANR	1014346	IdentifierDecl	from = itv . addr		1013711	0					
ANR	1014347	IdentifierDeclType	ut64		1013711	0					
ANR	1014348	Identifier	from		1013711	1					
ANR	1014349	AssignmentExpression	from = itv . addr		1013711	2		=			
ANR	1014350	Identifier	from		1013711	0					
ANR	1014351	MemberAccess	itv . addr		1013711	1					
ANR	1014352	Identifier	itv		1013711	0					
ANR	1014353	Identifier	addr		1013711	1					
ANR	1014354	IdentifierDecl	to = r_itv_end ( itv )		1013711	1					
ANR	1014355	IdentifierDeclType	ut64		1013711	0					
ANR	1014356	Identifier	to		1013711	1					
ANR	1014357	AssignmentExpression	to = r_itv_end ( itv )		1013711	2		=			
ANR	1014358	Identifier	to		1013711	0					
ANR	1014359	CallExpression	r_itv_end ( itv )		1013711	1					
ANR	1014360	Callee	r_itv_end		1013711	0					
ANR	1014361	Identifier	r_itv_end		1013711	0					
ANR	1014362	ArgumentList	itv		1013711	1					
ANR	1014363	Argument	itv		1013711	0					
ANR	1014364	Identifier	itv		1013711	0					
ANR	1014365	IfStatement	if ( r_cons_is_breaked ( ) )		1013711	5					
ANR	1014366	Condition	r_cons_is_breaked ( )	1446:6:44569:44588	1013711	0	True				
ANR	1014367	CallExpression	r_cons_is_breaked ( )		1013711	0					
ANR	1014368	Callee	r_cons_is_breaked		1013711	0					
ANR	1014369	Identifier	r_cons_is_breaked		1013711	0					
ANR	1014370	ArgumentList			1013711	1					
ANR	1014371	CompoundStatement		98:28:2670:2670	1013711	1					
ANR	1014372	BreakStatement	break ;	1447:3:44596:44601	1013711	0	True				
ANR	1014373	ExpressionStatement	delta = to - from	1449:2:44609:44626	1013711	6	True				
ANR	1014374	AssignmentExpression	delta = to - from		1013711	0		=			
ANR	1014375	Identifier	delta		1013711	0					
ANR	1014376	AdditiveExpression	to - from		1013711	1		-			
ANR	1014377	Identifier	to		1013711	0					
ANR	1014378	Identifier	from		1013711	1					
ANR	1014379	ExpressionStatement	"buf = calloc ( 1 , delta )"	1450:2:44630:44653	1013711	7	True				
ANR	1014380	AssignmentExpression	"buf = calloc ( 1 , delta )"		1013711	0		=			
ANR	1014381	Identifier	buf		1013711	0					
ANR	1014382	CallExpression	"calloc ( 1 , delta )"		1013711	1					
ANR	1014383	Callee	calloc		1013711	0					
ANR	1014384	Identifier	calloc		1013711	0					
ANR	1014385	ArgumentList	1		1013711	1					
ANR	1014386	Argument	1		1013711	0					
ANR	1014387	PrimaryExpression	1		1013711	0					
ANR	1014388	Argument	delta		1013711	1					
ANR	1014389	Identifier	delta		1013711	0					
ANR	1014390	IfStatement	if ( ! buf )		1013711	8					
ANR	1014391	Condition	! buf	1451:6:44661:44664	1013711	0	True				
ANR	1014392	UnaryOperationExpression	! buf		1013711	0					
ANR	1014393	UnaryOperator	!		1013711	0					
ANR	1014394	Identifier	buf		1013711	1					
ANR	1014395	CompoundStatement		103:12:2746:2746	1013711	1					
ANR	1014396	ExpressionStatement	result = false	1452:3:44672:44686	1013711	0	True				
ANR	1014397	AssignmentExpression	result = false		1013711	0		=			
ANR	1014398	Identifier	result		1013711	0					
ANR	1014399	Identifier	false		1013711	1					
ANR	1014400	GotoStatement	goto bad ;	1453:3:44691:44699	1013711	1	True				
ANR	1014401	Identifier	bad		1013711	0					
ANR	1014402	ExpressionStatement	"( void ) r_io_read_at ( core -> io , from , buf , delta )"	1455:2:44707:44755	1013711	9	True				
ANR	1014403	CastExpression	"( void ) r_io_read_at ( core -> io , from , buf , delta )"		1013711	0					
ANR	1014404	CastTarget	void		1013711	0					
ANR	1014405	CallExpression	"r_io_read_at ( core -> io , from , buf , delta )"		1013711	1					
ANR	1014406	Callee	r_io_read_at		1013711	0					
ANR	1014407	Identifier	r_io_read_at		1013711	0					
ANR	1014408	ArgumentList	core -> io		1013711	1					
ANR	1014409	Argument	core -> io		1013711	0					
ANR	1014410	PtrMemberAccess	core -> io		1013711	0					
ANR	1014411	Identifier	core		1013711	0					
ANR	1014412	Identifier	io		1013711	1					
ANR	1014413	Argument	from		1013711	1					
ANR	1014414	Identifier	from		1013711	0					
ANR	1014415	Argument	buf		1013711	2					
ANR	1014416	Identifier	buf		1013711	0					
ANR	1014417	Argument	delta		1013711	3					
ANR	1014418	Identifier	delta		1013711	0					
ANR	1014419	ForStatement	for ( i = 0 ; i + 32 < delta ; i += increment )		1013711	10					
ANR	1014420	ForInit	i = 0 ;	1458:7:44792:44797	1013711	0	True				
ANR	1014421	AssignmentExpression	i = 0		1013711	0		=			
ANR	1014422	Identifier	i		1013711	0					
ANR	1014423	PrimaryExpression	0		1013711	1					
ANR	1014424	Condition	i + 32 < delta	1458:14:44799:44812	1013711	1	True				
ANR	1014425	RelationalExpression	i + 32 < delta		1013711	0		<			
ANR	1014426	AdditiveExpression	i + 32		1013711	0		+			
ANR	1014427	Identifier	i		1013711	0					
ANR	1014428	PrimaryExpression	32		1013711	1					
ANR	1014429	Identifier	delta		1013711	1					
ANR	1014430	AssignmentExpression	i += increment	1458:30:44815:44828	1013711	2	True	+=			
ANR	1014431	Identifier	i		1013711	0					
ANR	1014432	Identifier	increment		1013711	1					
ANR	1014433	CompoundStatement		111:3:2915:2943	1013711	3					
ANR	1014434	IdentifierDeclStatement	RAnalOp end_gadget = R_EMPTY ;	1459:3:44836:44864	1013711	0	True				
ANR	1014435	IdentifierDecl	end_gadget = R_EMPTY		1013711	0					
ANR	1014436	IdentifierDeclType	RAnalOp		1013711	0					
ANR	1014437	Identifier	end_gadget		1013711	1					
ANR	1014438	AssignmentExpression	end_gadget = R_EMPTY		1013711	2		=			
ANR	1014439	Identifier	R_EMPTY		1013711	0					
ANR	1014440	Identifier	R_EMPTY		1013711	1					
ANR	1014441	IfStatement	"if ( r_anal_op ( core -> anal , & end_gadget , from + i , buf + i , delta - i , R_ANAL_OP_MASK_BASIC ) < 1 )"		1013711	1					
ANR	1014442	Condition	"r_anal_op ( core -> anal , & end_gadget , from + i , buf + i , delta - i , R_ANAL_OP_MASK_BASIC ) < 1"	1461:7:44896:44994	1013711	0	True				
ANR	1014443	RelationalExpression	"r_anal_op ( core -> anal , & end_gadget , from + i , buf + i , delta - i , R_ANAL_OP_MASK_BASIC ) < 1"		1013711	0		<			
ANR	1014444	CallExpression	"r_anal_op ( core -> anal , & end_gadget , from + i , buf + i , delta - i , R_ANAL_OP_MASK_BASIC )"		1013711	0					
ANR	1014445	Callee	r_anal_op		1013711	0					
ANR	1014446	Identifier	r_anal_op		1013711	0					
ANR	1014447	ArgumentList	core -> anal		1013711	1					
ANR	1014448	Argument	core -> anal		1013711	0					
ANR	1014449	PtrMemberAccess	core -> anal		1013711	0					
ANR	1014450	Identifier	core		1013711	0					
ANR	1014451	Identifier	anal		1013711	1					
ANR	1014452	Argument	& end_gadget		1013711	1					
ANR	1014453	UnaryOperationExpression	& end_gadget		1013711	0					
ANR	1014454	UnaryOperator	&		1013711	0					
ANR	1014455	Identifier	end_gadget		1013711	1					
ANR	1014456	Argument	from + i		1013711	2					
ANR	1014457	AdditiveExpression	from + i		1013711	0		+			
ANR	1014458	Identifier	from		1013711	0					
ANR	1014459	Identifier	i		1013711	1					
ANR	1014460	Argument	buf + i		1013711	3					
ANR	1014461	AdditiveExpression	buf + i		1013711	0		+			
ANR	1014462	Identifier	buf		1013711	0					
ANR	1014463	Identifier	i		1013711	1					
ANR	1014464	Argument	delta - i		1013711	4					
ANR	1014465	AdditiveExpression	delta - i		1013711	0		-			
ANR	1014466	Identifier	delta		1013711	0					
ANR	1014467	Identifier	i		1013711	1					
ANR	1014468	Argument	R_ANAL_OP_MASK_BASIC		1013711	5					
ANR	1014469	Identifier	R_ANAL_OP_MASK_BASIC		1013711	0					
ANR	1014470	PrimaryExpression	1		1013711	1					
ANR	1014471	CompoundStatement		114:46:3076:3076	1013711	1					
ANR	1014472	ExpressionStatement	r_anal_op_fini ( & end_gadget )	1463:4:45003:45031	1013711	0	True				
ANR	1014473	CallExpression	r_anal_op_fini ( & end_gadget )		1013711	0					
ANR	1014474	Callee	r_anal_op_fini		1013711	0					
ANR	1014475	Identifier	r_anal_op_fini		1013711	0					
ANR	1014476	ArgumentList	& end_gadget		1013711	1					
ANR	1014477	Argument	& end_gadget		1013711	0					
ANR	1014478	UnaryOperationExpression	& end_gadget		1013711	0					
ANR	1014479	UnaryOperator	&		1013711	0					
ANR	1014480	Identifier	end_gadget		1013711	1					
ANR	1014481	ContinueStatement	continue ;	1464:4:45037:45045	1013711	1	True				
ANR	1014482	IfStatement	"if ( is_end_gadget ( & end_gadget , crop ) )"		1013711	2					
ANR	1014483	Condition	"is_end_gadget ( & end_gadget , crop )"	1466:7:45059:45091	1013711	0	True				
ANR	1014484	CallExpression	"is_end_gadget ( & end_gadget , crop )"		1013711	0					
ANR	1014485	Callee	is_end_gadget		1013711	0					
ANR	1014486	Identifier	is_end_gadget		1013711	0					
ANR	1014487	ArgumentList	& end_gadget		1013711	1					
ANR	1014488	Argument	& end_gadget		1013711	0					
ANR	1014489	UnaryOperationExpression	& end_gadget		1013711	0					
ANR	1014490	UnaryOperator	&		1013711	0					
ANR	1014491	Identifier	end_gadget		1013711	1					
ANR	1014492	Argument	crop		1013711	1					
ANR	1014493	Identifier	crop		1013711	0					
ANR	1014494	CompoundStatement		118:42:3173:3173	1013711	1					
ANR	1014495	IfStatement	if ( search -> maxhits && r_list_length ( end_list ) >= search -> maxhits )		1013711	0					
ANR	1014496	Condition	search -> maxhits && r_list_length ( end_list ) >= search -> maxhits	1468:8:45110:45171	1013711	0	True				
ANR	1014497	AndExpression	search -> maxhits && r_list_length ( end_list ) >= search -> maxhits		1013711	0		&&			
ANR	1014498	PtrMemberAccess	search -> maxhits		1013711	0					
ANR	1014499	Identifier	search		1013711	0					
ANR	1014500	Identifier	maxhits		1013711	1					
ANR	1014501	RelationalExpression	r_list_length ( end_list ) >= search -> maxhits		1013711	1		>=			
ANR	1014502	CallExpression	r_list_length ( end_list )		1013711	0					
ANR	1014503	Callee	r_list_length		1013711	0					
ANR	1014504	Identifier	r_list_length		1013711	0					
ANR	1014505	ArgumentList	end_list		1013711	1					
ANR	1014506	Argument	end_list		1013711	0					
ANR	1014507	Identifier	end_list		1013711	0					
ANR	1014508	PtrMemberAccess	search -> maxhits		1013711	1					
ANR	1014509	Identifier	search		1013711	0					
ANR	1014510	Identifier	maxhits		1013711	1					
ANR	1014511	CompoundStatement		120:72:3253:3253	1013711	1					
ANR	1014512	ExpressionStatement	r_anal_op_fini ( & end_gadget )	1470:5:45235:45263	1013711	0	True				
ANR	1014513	CallExpression	r_anal_op_fini ( & end_gadget )		1013711	0					
ANR	1014514	Callee	r_anal_op_fini		1013711	0					
ANR	1014515	Identifier	r_anal_op_fini		1013711	0					
ANR	1014516	ArgumentList	& end_gadget		1013711	1					
ANR	1014517	Argument	& end_gadget		1013711	0					
ANR	1014518	UnaryOperationExpression	& end_gadget		1013711	0					
ANR	1014519	UnaryOperator	&		1013711	0					
ANR	1014520	Identifier	end_gadget		1013711	1					
ANR	1014521	BreakStatement	break ;	1471:5:45270:45275	1013711	1	True				
ANR	1014522	Statement	struct	1474:4:45294:45299	1013711	1	True				
ANR	1014523	Statement	endlist_pair	1474:11:45301:45312	1013711	2	True				
ANR	1014524	Statement	*	1474:24:45314:45314	1013711	3	True				
ANR	1014525	Statement	epair	1474:25:45315:45319	1013711	4	True				
ANR	1014526	Statement	=	1474:31:45321:45321	1013711	5	True				
ANR	1014527	Statement	R_NEW0	1474:33:45323:45328	1013711	6	True				
ANR	1014528	Statement	(	1474:40:45330:45330	1013711	7	True				
ANR	1014529	Statement	struct	1474:41:45331:45336	1013711	8	True				
ANR	1014530	Statement	endlist_pair	1474:48:45338:45349	1013711	9	True				
ANR	1014531	Statement	)	1474:60:45350:45350	1013711	10	True				
ANR	1014532	ExpressionStatement		1474:61:45351:45351	1013711	11	True				
ANR	1014533	IfStatement	if ( epair )		1013711	12					
ANR	1014534	Condition	epair	1475:8:45361:45365	1013711	0	True				
ANR	1014535	Identifier	epair		1013711	0					
ANR	1014536	CompoundStatement		127:15:3447:3447	1013711	1					
ANR	1014537	IfStatement	if ( end_gadget . delay )		1013711	0					
ANR	1014538	Condition	end_gadget . delay	1477:9:45451:45466	1013711	0	True				
ANR	1014539	MemberAccess	end_gadget . delay		1013711	0					
ANR	1014540	Identifier	end_gadget		1013711	0					
ANR	1014541	Identifier	delay		1013711	1					
ANR	1014542	CompoundStatement		129:27:3548:3548	1013711	1					
ANR	1014543	ExpressionStatement	epair -> instr_offset = i + increment	1478:6:45477:45512	1013711	0	True				
ANR	1014544	AssignmentExpression	epair -> instr_offset = i + increment		1013711	0		=			
ANR	1014545	PtrMemberAccess	epair -> instr_offset		1013711	0					
ANR	1014546	Identifier	epair		1013711	0					
ANR	1014547	Identifier	instr_offset		1013711	1					
ANR	1014548	AdditiveExpression	i + increment		1013711	1		+			
ANR	1014549	Identifier	i		1013711	0					
ANR	1014550	Identifier	increment		1013711	1					
ANR	1014551	ExpressionStatement	epair -> delay_size = end_gadget . delay	1479:6:45520:45556	1013711	1	True				
ANR	1014552	AssignmentExpression	epair -> delay_size = end_gadget . delay		1013711	0		=			
ANR	1014553	PtrMemberAccess	epair -> delay_size		1013711	0					
ANR	1014554	Identifier	epair		1013711	0					
ANR	1014555	Identifier	delay_size		1013711	1					
ANR	1014556	MemberAccess	end_gadget . delay		1013711	1					
ANR	1014557	Identifier	end_gadget		1013711	0					
ANR	1014558	Identifier	delay		1013711	1					
ANR	1014559	ElseStatement	else		1013711	0					
ANR	1014560	CompoundStatement		132:12:3649:3649	1013711	0					
ANR	1014561	ExpressionStatement	epair -> instr_offset = ( intptr_t ) i	1481:6:45578:45612	1013711	0	True				
ANR	1014562	AssignmentExpression	epair -> instr_offset = ( intptr_t ) i		1013711	0		=			
ANR	1014563	PtrMemberAccess	epair -> instr_offset		1013711	0					
ANR	1014564	Identifier	epair		1013711	0					
ANR	1014565	Identifier	instr_offset		1013711	1					
ANR	1014566	CastExpression	( intptr_t ) i		1013711	1					
ANR	1014567	CastTarget	intptr_t		1013711	0					
ANR	1014568	Identifier	i		1013711	1					
ANR	1014569	ExpressionStatement	epair -> delay_size = end_gadget . delay	1482:6:45620:45656	1013711	1	True				
ANR	1014570	AssignmentExpression	epair -> delay_size = end_gadget . delay		1013711	0		=			
ANR	1014571	PtrMemberAccess	epair -> delay_size		1013711	0					
ANR	1014572	Identifier	epair		1013711	0					
ANR	1014573	Identifier	delay_size		1013711	1					
ANR	1014574	MemberAccess	end_gadget . delay		1013711	1					
ANR	1014575	Identifier	end_gadget		1013711	0					
ANR	1014576	Identifier	delay		1013711	1					
ANR	1014577	ExpressionStatement	"r_list_append ( end_list , ( void * ) ( intptr_t ) epair )"	1484:5:45670:45721	1013711	1	True				
ANR	1014578	CallExpression	"r_list_append ( end_list , ( void * ) ( intptr_t ) epair )"		1013711	0					
ANR	1014579	Callee	r_list_append		1013711	0					
ANR	1014580	Identifier	r_list_append		1013711	0					
ANR	1014581	ArgumentList	end_list		1013711	1					
ANR	1014582	Argument	end_list		1013711	0					
ANR	1014583	Identifier	end_list		1013711	0					
ANR	1014584	Argument	( void * ) ( intptr_t ) epair		1013711	1					
ANR	1014585	CastExpression	( void * ) ( intptr_t ) epair		1013711	0					
ANR	1014586	CastTarget	void *		1013711	0					
ANR	1014587	CastExpression	( intptr_t ) epair		1013711	1					
ANR	1014588	CastTarget	intptr_t		1013711	0					
ANR	1014589	Identifier	epair		1013711	1					
ANR	1014590	ExpressionStatement	r_anal_op_fini ( & end_gadget )	1487:3:45737:45765	1013711	3	True				
ANR	1014591	CallExpression	r_anal_op_fini ( & end_gadget )		1013711	0					
ANR	1014592	Callee	r_anal_op_fini		1013711	0					
ANR	1014593	Identifier	r_anal_op_fini		1013711	0					
ANR	1014594	ArgumentList	& end_gadget		1013711	1					
ANR	1014595	Argument	& end_gadget		1013711	0					
ANR	1014596	UnaryOperationExpression	& end_gadget		1013711	0					
ANR	1014597	UnaryOperator	&		1013711	0					
ANR	1014598	Identifier	end_gadget		1013711	1					
ANR	1014599	IfStatement	if ( r_cons_is_breaked ( ) )		1013711	4					
ANR	1014600	Condition	r_cons_is_breaked ( )	1488:7:45774:45793	1013711	0	True				
ANR	1014601	CallExpression	r_cons_is_breaked ( )		1013711	0					
ANR	1014602	Callee	r_cons_is_breaked		1013711	0					
ANR	1014603	Identifier	r_cons_is_breaked		1013711	0					
ANR	1014604	ArgumentList			1013711	1					
ANR	1014605	CompoundStatement		140:29:3875:3875	1013711	1					
ANR	1014606	BreakStatement	break ;	1489:4:45802:45807	1013711	0	True				
ANR	1014607	ExpressionStatement	r_list_reverse ( end_list )	1494:2:45950:45975	1013711	11	True				
ANR	1014608	CallExpression	r_list_reverse ( end_list )		1013711	0					
ANR	1014609	Callee	r_list_reverse		1013711	0					
ANR	1014610	Identifier	r_list_reverse		1013711	0					
ANR	1014611	ArgumentList	end_list		1013711	1					
ANR	1014612	Argument	end_list		1013711	0					
ANR	1014613	Identifier	end_list		1013711	0					
ANR	1014614	IfStatement	if ( ! r_list_empty ( end_list ) )		1013711	12					
ANR	1014615	Condition	! r_list_empty ( end_list )	1496:6:46054:46077	1013711	0	True				
ANR	1014616	UnaryOperationExpression	! r_list_empty ( end_list )		1013711	0					
ANR	1014617	UnaryOperator	!		1013711	0					
ANR	1014618	CallExpression	r_list_empty ( end_list )		1013711	1					
ANR	1014619	Callee	r_list_empty		1013711	0					
ANR	1014620	Identifier	r_list_empty		1013711	0					
ANR	1014621	ArgumentList	end_list		1013711	1					
ANR	1014622	Argument	end_list		1013711	0					
ANR	1014623	Identifier	end_list		1013711	0					
ANR	1014624	CompoundStatement		160:3:4588:4667	1013711	1					
ANR	1014625	IdentifierDeclStatement	"int prev , next , ropdepth ;"	1497:3:46085:46109	1013711	0	True				
ANR	1014626	IdentifierDecl	prev		1013711	0					
ANR	1014627	IdentifierDeclType	int		1013711	0					
ANR	1014628	Identifier	prev		1013711	1					
ANR	1014629	IdentifierDecl	next		1013711	1					
ANR	1014630	IdentifierDeclType	int		1013711	0					
ANR	1014631	Identifier	next		1013711	1					
ANR	1014632	IdentifierDecl	ropdepth		1013711	2					
ANR	1014633	IdentifierDeclType	int		1013711	0					
ANR	1014634	Identifier	ropdepth		1013711	1					
ANR	1014635	IdentifierDeclStatement	const int max_inst_size_x86 = 15 ;	1498:3:46114:46146	1013711	1	True				
ANR	1014636	IdentifierDecl	max_inst_size_x86 = 15		1013711	0					
ANR	1014637	IdentifierDeclType	const int		1013711	0					
ANR	1014638	Identifier	max_inst_size_x86		1013711	1					
ANR	1014639	AssignmentExpression	max_inst_size_x86 = 15		1013711	2		=			
ANR	1014640	Identifier	max_inst_size_x86		1013711	0					
ANR	1014641	PrimaryExpression	15		1013711	1					
ANR	1014642	ExpressionStatement	ropdepth = increment == 1 ? max_instr * max_inst_size_x86 : max_instr * increment	1502:3:46327:46457	1013711	2	True				
ANR	1014643	AssignmentExpression	ropdepth = increment == 1 ? max_instr * max_inst_size_x86 : max_instr * increment		1013711	0		=			
ANR	1014644	Identifier	ropdepth		1013711	0					
ANR	1014645	ConditionalExpression	increment == 1 ? max_instr * max_inst_size_x86 : max_instr * increment		1013711	1					
ANR	1014646	Condition	increment == 1		1013711	0					
ANR	1014647	EqualityExpression	increment == 1		1013711	0		==			
ANR	1014648	Identifier	increment		1013711	0					
ANR	1014649	PrimaryExpression	1		1013711	1					
ANR	1014650	MultiplicativeExpression	max_instr * max_inst_size_x86		1013711	1		*			
ANR	1014651	Identifier	max_instr		1013711	0					
ANR	1014652	Identifier	max_inst_size_x86		1013711	1					
ANR	1014653	MultiplicativeExpression	max_instr * increment		1013711	2		*			
ANR	1014654	Identifier	max_instr		1013711	0					
ANR	1014655	Identifier	increment		1013711	1					
ANR	1014656	IfStatement	if ( r_cons_is_breaked ( ) )		1013711	3					
ANR	1014657	Condition	r_cons_is_breaked ( )	1505:7:46466:46485	1013711	0	True				
ANR	1014658	CallExpression	r_cons_is_breaked ( )		1013711	0					
ANR	1014659	Callee	r_cons_is_breaked		1013711	0					
ANR	1014660	Identifier	r_cons_is_breaked		1013711	0					
ANR	1014661	ArgumentList			1013711	1					
ANR	1014662	CompoundStatement		157:29:4567:4567	1013711	1					
ANR	1014663	BreakStatement	break ;	1506:4:46494:46499	1013711	0	True				
ANR	1014664	IdentifierDeclStatement	struct endlist_pair * end_gadget = ( struct endlist_pair * ) r_list_pop ( end_list ) ;	1508:3:46509:46588	1013711	4	True				
ANR	1014665	IdentifierDecl	* end_gadget = ( struct endlist_pair * ) r_list_pop ( end_list )		1013711	0					
ANR	1014666	IdentifierDeclType	struct endlist_pair *		1013711	0					
ANR	1014667	Identifier	end_gadget		1013711	1					
ANR	1014668	AssignmentExpression	* end_gadget = ( struct endlist_pair * ) r_list_pop ( end_list )		1013711	2		=			
ANR	1014669	Identifier	end_gadget		1013711	0					
ANR	1014670	CastExpression	( struct endlist_pair * ) r_list_pop ( end_list )		1013711	1					
ANR	1014671	CastTarget	struct endlist_pair *		1013711	0					
ANR	1014672	CallExpression	r_list_pop ( end_list )		1013711	1					
ANR	1014673	Callee	r_list_pop		1013711	0					
ANR	1014674	Identifier	r_list_pop		1013711	0					
ANR	1014675	ArgumentList	end_list		1013711	1					
ANR	1014676	Argument	end_list		1013711	0					
ANR	1014677	Identifier	end_list		1013711	0					
ANR	1014678	ExpressionStatement	next = end_gadget -> instr_offset	1509:3:46593:46624	1013711	5	True				
ANR	1014679	AssignmentExpression	next = end_gadget -> instr_offset		1013711	0		=			
ANR	1014680	Identifier	next		1013711	0					
ANR	1014681	PtrMemberAccess	end_gadget -> instr_offset		1013711	1					
ANR	1014682	Identifier	end_gadget		1013711	0					
ANR	1014683	Identifier	instr_offset		1013711	1					
ANR	1014684	ExpressionStatement	prev = 0	1510:3:46629:46637	1013711	6	True				
ANR	1014685	AssignmentExpression	prev = 0		1013711	0		=			
ANR	1014686	Identifier	prev		1013711	0					
ANR	1014687	PrimaryExpression	0		1013711	1					
ANR	1014688	ForStatement	for ( i = next - ropdepth ; i < ( delta - max_inst_size_x86 ) && max_count ; i += increment )		1013711	7					
ANR	1014689	ForInit	i = next - ropdepth ;	1512:8:46696:46715	1013711	0	True				
ANR	1014690	AssignmentExpression	i = next - ropdepth		1013711	0		=			
ANR	1014691	Identifier	i		1013711	0					
ANR	1014692	AdditiveExpression	next - ropdepth		1013711	1		-			
ANR	1014693	Identifier	next		1013711	0					
ANR	1014694	Identifier	ropdepth		1013711	1					
ANR	1014695	Condition	i < ( delta - max_inst_size_x86 ) && max_count	1512:29:46717:46760	1013711	1	True				
ANR	1014696	AndExpression	i < ( delta - max_inst_size_x86 ) && max_count		1013711	0		&&			
ANR	1014697	RelationalExpression	i < ( delta - max_inst_size_x86 )		1013711	0		<			
ANR	1014698	Identifier	i		1013711	0					
ANR	1014699	AdditiveExpression	delta - max_inst_size_x86		1013711	1		-			
ANR	1014700	Identifier	delta		1013711	0					
ANR	1014701	Identifier	max_inst_size_x86		1013711	1					
ANR	1014702	Identifier	max_count		1013711	1					
ANR	1014703	AssignmentExpression	i += increment	1512:75:46763:46776	1013711	2	True	+=			
ANR	1014704	Identifier	i		1013711	0					
ANR	1014705	Identifier	increment		1013711	1					
ANR	1014706	CompoundStatement		164:91:4858:4858	1013711	3					
ANR	1014707	IfStatement	if ( increment == 1 )		1013711	0					
ANR	1014708	Condition	increment == 1	1513:8:46789:46802	1013711	0	True				
ANR	1014709	EqualityExpression	increment == 1		1013711	0		==			
ANR	1014710	Identifier	increment		1013711	0					
ANR	1014711	PrimaryExpression	1		1013711	1					
ANR	1014712	CompoundStatement		165:24:4884:4884	1013711	1					
ANR	1014713	IfStatement	if ( i < prev - max_inst_size_x86 )		1013711	0					
ANR	1014714	Condition	i < prev - max_inst_size_x86	1515:9:46861:46888	1013711	0	True				
ANR	1014715	RelationalExpression	i < prev - max_inst_size_x86		1013711	0		<			
ANR	1014716	Identifier	i		1013711	0					
ANR	1014717	AdditiveExpression	prev - max_inst_size_x86		1013711	1		-			
ANR	1014718	Identifier	prev		1013711	0					
ANR	1014719	Identifier	max_inst_size_x86		1013711	1					
ANR	1014720	CompoundStatement		167:39:4970:4970	1013711	1					
ANR	1014721	ExpressionStatement	i = prev - max_inst_size_x86	1516:6:46899:46927	1013711	0	True				
ANR	1014722	AssignmentExpression	i = prev - max_inst_size_x86		1013711	0		=			
ANR	1014723	Identifier	i		1013711	0					
ANR	1014724	AdditiveExpression	prev - max_inst_size_x86		1013711	1		-			
ANR	1014725	Identifier	prev		1013711	0					
ANR	1014726	Identifier	max_inst_size_x86		1013711	1					
ANR	1014727	ElseStatement	else		1013711	0					
ANR	1014728	CompoundStatement		170:11:5026:5026	1013711	0					
ANR	1014729	IfStatement	if ( i < prev )		1013711	0					
ANR	1014730	Condition	i < prev	1519:9:46958:46965	1013711	0	True				
ANR	1014731	RelationalExpression	i < prev		1013711	0		<			
ANR	1014732	Identifier	i		1013711	0					
ANR	1014733	Identifier	prev		1013711	1					
ANR	1014734	CompoundStatement		171:19:5047:5047	1013711	1					
ANR	1014735	ExpressionStatement	i = prev	1520:6:46976:46984	1013711	0	True				
ANR	1014736	AssignmentExpression	i = prev		1013711	0		=			
ANR	1014737	Identifier	i		1013711	0					
ANR	1014738	Identifier	prev		1013711	1					
ANR	1014739	IfStatement	if ( i < 0 )		1013711	1					
ANR	1014740	Condition	i < 0	1523:8:47007:47011	1013711	0	True				
ANR	1014741	RelationalExpression	i < 0		1013711	0		<			
ANR	1014742	Identifier	i		1013711	0					
ANR	1014743	PrimaryExpression	0		1013711	1					
ANR	1014744	CompoundStatement		175:15:5093:5093	1013711	1					
ANR	1014745	ExpressionStatement	i = 0	1524:5:47021:47026	1013711	0	True				
ANR	1014746	AssignmentExpression	i = 0		1013711	0		=			
ANR	1014747	Identifier	i		1013711	0					
ANR	1014748	PrimaryExpression	0		1013711	1					
ANR	1014749	IfStatement	if ( r_cons_is_breaked ( ) )		1013711	2					
ANR	1014750	Condition	r_cons_is_breaked ( )	1526:8:47042:47061	1013711	0	True				
ANR	1014751	CallExpression	r_cons_is_breaked ( )		1013711	0					
ANR	1014752	Callee	r_cons_is_breaked		1013711	0					
ANR	1014753	Identifier	r_cons_is_breaked		1013711	0					
ANR	1014754	ArgumentList			1013711	1					
ANR	1014755	CompoundStatement		178:30:5143:5143	1013711	1					
ANR	1014756	BreakStatement	break ;	1527:5:47071:47076	1013711	0	True				
ANR	1014757	IfStatement	if ( i >= next )		1013711	3					
ANR	1014758	Condition	i >= next	1529:8:47092:47100	1013711	0	True				
ANR	1014759	RelationalExpression	i >= next		1013711	0		>=			
ANR	1014760	Identifier	i		1013711	0					
ANR	1014761	Identifier	next		1013711	1					
ANR	1014762	CompoundStatement		181:19:5182:5182	1013711	1					
ANR	1014763	ExpressionStatement	free ( end_gadget )	1532:5:47194:47211	1013711	0	True				
ANR	1014764	CallExpression	free ( end_gadget )		1013711	0					
ANR	1014765	Callee	free		1013711	0					
ANR	1014766	Identifier	free		1013711	0					
ANR	1014767	ArgumentList	end_gadget		1013711	1					
ANR	1014768	Argument	end_gadget		1013711	0					
ANR	1014769	Identifier	end_gadget		1013711	0					
ANR	1014770	IfStatement	"if ( r_list_get_n ( end_list , 0 ) )"		1013711	1					
ANR	1014771	Condition	"r_list_get_n ( end_list , 0 )"	1533:9:47222:47247	1013711	0	True				
ANR	1014772	CallExpression	"r_list_get_n ( end_list , 0 )"		1013711	0					
ANR	1014773	Callee	r_list_get_n		1013711	0					
ANR	1014774	Identifier	r_list_get_n		1013711	0					
ANR	1014775	ArgumentList	end_list		1013711	1					
ANR	1014776	Argument	end_list		1013711	0					
ANR	1014777	Identifier	end_list		1013711	0					
ANR	1014778	Argument	0		1013711	1					
ANR	1014779	PrimaryExpression	0		1013711	0					
ANR	1014780	CompoundStatement		185:37:5329:5329	1013711	1					
ANR	1014781	ExpressionStatement	prev = i	1534:6:47258:47266	1013711	0	True				
ANR	1014782	AssignmentExpression	prev = i		1013711	0		=			
ANR	1014783	Identifier	prev		1013711	0					
ANR	1014784	Identifier	i		1013711	1					
ANR	1014785	ExpressionStatement	end_gadget = ( struct endlist_pair * ) r_list_pop ( end_list )	1535:6:47274:47332	1013711	1	True				
ANR	1014786	AssignmentExpression	end_gadget = ( struct endlist_pair * ) r_list_pop ( end_list )		1013711	0		=			
ANR	1014787	Identifier	end_gadget		1013711	0					
ANR	1014788	CastExpression	( struct endlist_pair * ) r_list_pop ( end_list )		1013711	1					
ANR	1014789	CastTarget	struct endlist_pair *		1013711	0					
ANR	1014790	CallExpression	r_list_pop ( end_list )		1013711	1					
ANR	1014791	Callee	r_list_pop		1013711	0					
ANR	1014792	Identifier	r_list_pop		1013711	0					
ANR	1014793	ArgumentList	end_list		1013711	1					
ANR	1014794	Argument	end_list		1013711	0					
ANR	1014795	Identifier	end_list		1013711	0					
ANR	1014796	ExpressionStatement	next = end_gadget -> instr_offset	1536:6:47340:47371	1013711	2	True				
ANR	1014797	AssignmentExpression	next = end_gadget -> instr_offset		1013711	0		=			
ANR	1014798	Identifier	next		1013711	0					
ANR	1014799	PtrMemberAccess	end_gadget -> instr_offset		1013711	1					
ANR	1014800	Identifier	end_gadget		1013711	0					
ANR	1014801	Identifier	instr_offset		1013711	1					
ANR	1014802	ExpressionStatement	i = next - ropdepth	1537:6:47379:47398	1013711	3	True				
ANR	1014803	AssignmentExpression	i = next - ropdepth		1013711	0		=			
ANR	1014804	Identifier	i		1013711	0					
ANR	1014805	AdditiveExpression	next - ropdepth		1013711	1		-			
ANR	1014806	Identifier	next		1013711	0					
ANR	1014807	Identifier	ropdepth		1013711	1					
ANR	1014808	IfStatement	if ( i < 0 )		1013711	4					
ANR	1014809	Condition	i < 0	1538:10:47410:47414	1013711	0	True				
ANR	1014810	RelationalExpression	i < 0		1013711	0		<			
ANR	1014811	Identifier	i		1013711	0					
ANR	1014812	PrimaryExpression	0		1013711	1					
ANR	1014813	CompoundStatement		190:17:5496:5496	1013711	1					
ANR	1014814	ExpressionStatement	i = 0	1539:7:47426:47431	1013711	0	True				
ANR	1014815	AssignmentExpression	i = 0		1013711	0		=			
ANR	1014816	Identifier	i		1013711	0					
ANR	1014817	PrimaryExpression	0		1013711	1					
ANR	1014818	ElseStatement	else		1013711	0					
ANR	1014819	CompoundStatement		193:12:5532:5532	1013711	0					
ANR	1014820	BreakStatement	break ;	1542:6:47461:47466	1013711	0	True				
ANR	1014821	IfStatement	if ( i >= end )		1013711	4					
ANR	1014822	Condition	i >= end	1545:8:47489:47496	1013711	0	True				
ANR	1014823	RelationalExpression	i >= end		1013711	0		>=			
ANR	1014824	Identifier	i		1013711	0					
ANR	1014825	Identifier	end		1013711	1					
ANR	1014826	CompoundStatement		197:18:5578:5578	1013711	1					
ANR	1014827	ExpressionStatement	"r_io_read_at ( core -> io , from + i , buf + i , R_MIN ( ( delta - i ) , 4096 ) )"	1546:5:47529:47604	1013711	0	True				
ANR	1014828	CallExpression	"r_io_read_at ( core -> io , from + i , buf + i , R_MIN ( ( delta - i ) , 4096 ) )"		1013711	0					
ANR	1014829	Callee	r_io_read_at		1013711	0					
ANR	1014830	Identifier	r_io_read_at		1013711	0					
ANR	1014831	ArgumentList	core -> io		1013711	1					
ANR	1014832	Argument	core -> io		1013711	0					
ANR	1014833	PtrMemberAccess	core -> io		1013711	0					
ANR	1014834	Identifier	core		1013711	0					
ANR	1014835	Identifier	io		1013711	1					
ANR	1014836	Argument	from + i		1013711	1					
ANR	1014837	AdditiveExpression	from + i		1013711	0		+			
ANR	1014838	Identifier	from		1013711	0					
ANR	1014839	Identifier	i		1013711	1					
ANR	1014840	Argument	buf + i		1013711	2					
ANR	1014841	AdditiveExpression	buf + i		1013711	0		+			
ANR	1014842	Identifier	buf		1013711	0					
ANR	1014843	Identifier	i		1013711	1					
ANR	1014844	Argument	"R_MIN ( ( delta - i ) , 4096 )"		1013711	3					
ANR	1014845	CallExpression	"R_MIN ( ( delta - i ) , 4096 )"		1013711	0					
ANR	1014846	Callee	R_MIN		1013711	0					
ANR	1014847	Identifier	R_MIN		1013711	0					
ANR	1014848	ArgumentList	delta - i		1013711	1					
ANR	1014849	Argument	delta - i		1013711	0					
ANR	1014850	AdditiveExpression	delta - i		1013711	0		-			
ANR	1014851	Identifier	delta		1013711	0					
ANR	1014852	Identifier	i		1013711	1					
ANR	1014853	Argument	4096		1013711	1					
ANR	1014854	PrimaryExpression	4096		1013711	0					
ANR	1014855	ExpressionStatement	end = i + 2048	1548:5:47611:47625	1013711	1	True				
ANR	1014856	AssignmentExpression	end = i + 2048		1013711	0		=			
ANR	1014857	Identifier	end		1013711	0					
ANR	1014858	AdditiveExpression	i + 2048		1013711	1		+			
ANR	1014859	Identifier	i		1013711	0					
ANR	1014860	PrimaryExpression	2048		1013711	1					
ANR	1014861	ExpressionStatement	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf + i , delta - i )"	1550:4:47637:47706	1013711	5	True				
ANR	1014862	AssignmentExpression	"ret = r_asm_disassemble ( core -> assembler , & asmop , buf + i , delta - i )"		1013711	0		=			
ANR	1014863	Identifier	ret		1013711	0					
ANR	1014864	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf + i , delta - i )"		1013711	1					
ANR	1014865	Callee	r_asm_disassemble		1013711	0					
ANR	1014866	Identifier	r_asm_disassemble		1013711	0					
ANR	1014867	ArgumentList	core -> assembler		1013711	1					
ANR	1014868	Argument	core -> assembler		1013711	0					
ANR	1014869	PtrMemberAccess	core -> assembler		1013711	0					
ANR	1014870	Identifier	core		1013711	0					
ANR	1014871	Identifier	assembler		1013711	1					
ANR	1014872	Argument	& asmop		1013711	1					
ANR	1014873	UnaryOperationExpression	& asmop		1013711	0					
ANR	1014874	UnaryOperator	&		1013711	0					
ANR	1014875	Identifier	asmop		1013711	1					
ANR	1014876	Argument	buf + i		1013711	2					
ANR	1014877	AdditiveExpression	buf + i		1013711	0		+			
ANR	1014878	Identifier	buf		1013711	0					
ANR	1014879	Identifier	i		1013711	1					
ANR	1014880	Argument	delta - i		1013711	3					
ANR	1014881	AdditiveExpression	delta - i		1013711	0		-			
ANR	1014882	Identifier	delta		1013711	0					
ANR	1014883	Identifier	i		1013711	1					
ANR	1014884	IfStatement	if ( ret )		1013711	6					
ANR	1014885	Condition	ret	1551:8:47716:47718	1013711	0	True				
ANR	1014886	Identifier	ret		1013711	0					
ANR	1014887	CompoundStatement		205:5:5854:5980	1013711	1					
ANR	1014888	ExpressionStatement	"r_asm_set_pc ( core -> assembler , from + i )"	1552:5:47728:47768	1013711	0	True				
ANR	1014889	CallExpression	"r_asm_set_pc ( core -> assembler , from + i )"		1013711	0					
ANR	1014890	Callee	r_asm_set_pc		1013711	0					
ANR	1014891	Identifier	r_asm_set_pc		1013711	0					
ANR	1014892	ArgumentList	core -> assembler		1013711	1					
ANR	1014893	Argument	core -> assembler		1013711	0					
ANR	1014894	PtrMemberAccess	core -> assembler		1013711	0					
ANR	1014895	Identifier	core		1013711	0					
ANR	1014896	Identifier	assembler		1013711	1					
ANR	1014897	Argument	from + i		1013711	1					
ANR	1014898	AdditiveExpression	from + i		1013711	0		+			
ANR	1014899	Identifier	from		1013711	0					
ANR	1014900	Identifier	i		1013711	1					
ANR	1014901	IdentifierDeclStatement	"RList * hitlist = construct_rop_gadget ( core , from + i , buf , delta , i , grep , regexp , rx_list , end_gadget , badstart ) ;"	1553:5:47775:47901	1013711	1	True				
ANR	1014902	IdentifierDecl	"* hitlist = construct_rop_gadget ( core , from + i , buf , delta , i , grep , regexp , rx_list , end_gadget , badstart )"		1013711	0					
ANR	1014903	IdentifierDeclType	RList *		1013711	0					
ANR	1014904	Identifier	hitlist		1013711	1					
ANR	1014905	AssignmentExpression	"* hitlist = construct_rop_gadget ( core , from + i , buf , delta , i , grep , regexp , rx_list , end_gadget , badstart )"		1013711	2		=			
ANR	1014906	Identifier	hitlist		1013711	0					
ANR	1014907	CallExpression	"construct_rop_gadget ( core , from + i , buf , delta , i , grep , regexp , rx_list , end_gadget , badstart )"		1013711	1					
ANR	1014908	Callee	construct_rop_gadget		1013711	0					
ANR	1014909	Identifier	construct_rop_gadget		1013711	0					
ANR	1014910	ArgumentList	core		1013711	1					
ANR	1014911	Argument	core		1013711	0					
ANR	1014912	Identifier	core		1013711	0					
ANR	1014913	Argument	from + i		1013711	1					
ANR	1014914	AdditiveExpression	from + i		1013711	0		+			
ANR	1014915	Identifier	from		1013711	0					
ANR	1014916	Identifier	i		1013711	1					
ANR	1014917	Argument	buf		1013711	2					
ANR	1014918	Identifier	buf		1013711	0					
ANR	1014919	Argument	delta		1013711	3					
ANR	1014920	Identifier	delta		1013711	0					
ANR	1014921	Argument	i		1013711	4					
ANR	1014922	Identifier	i		1013711	0					
ANR	1014923	Argument	grep		1013711	5					
ANR	1014924	Identifier	grep		1013711	0					
ANR	1014925	Argument	regexp		1013711	6					
ANR	1014926	Identifier	regexp		1013711	0					
ANR	1014927	Argument	rx_list		1013711	7					
ANR	1014928	Identifier	rx_list		1013711	0					
ANR	1014929	Argument	end_gadget		1013711	8					
ANR	1014930	Identifier	end_gadget		1013711	0					
ANR	1014931	Argument	badstart		1013711	9					
ANR	1014932	Identifier	badstart		1013711	0					
ANR	1014933	IfStatement	if ( ! hitlist )		1013711	2					
ANR	1014934	Condition	! hitlist	1556:9:47912:47919	1013711	0	True				
ANR	1014935	UnaryOperationExpression	! hitlist		1013711	0					
ANR	1014936	UnaryOperator	!		1013711	0					
ANR	1014937	Identifier	hitlist		1013711	1					
ANR	1014938	CompoundStatement		208:19:6001:6001	1013711	1					
ANR	1014939	ContinueStatement	continue ;	1557:6:47930:47938	1013711	0	True				
ANR	1014940	IfStatement	if ( align && ( 0 != ( ( from + i ) % align ) ) )		1013711	3					
ANR	1014941	Condition	align && ( 0 != ( ( from + i ) % align ) )	1559:9:47956:47991	1013711	0	True				
ANR	1014942	AndExpression	align && ( 0 != ( ( from + i ) % align ) )		1013711	0		&&			
ANR	1014943	Identifier	align		1013711	0					
ANR	1014944	EqualityExpression	0 != ( ( from + i ) % align )		1013711	1		!=			
ANR	1014945	PrimaryExpression	0		1013711	0					
ANR	1014946	MultiplicativeExpression	( from + i ) % align		1013711	1		%			
ANR	1014947	AdditiveExpression	from + i		1013711	0		+			
ANR	1014948	Identifier	from		1013711	0					
ANR	1014949	Identifier	i		1013711	1					
ANR	1014950	Identifier	align		1013711	1					
ANR	1014951	CompoundStatement		211:47:6073:6073	1013711	1					
ANR	1014952	ContinueStatement	continue ;	1560:6:48002:48010	1013711	0	True				
ANR	1014953	IfStatement	if ( gadgetSdb )		1013711	4					
ANR	1014954	Condition	gadgetSdb	1562:9:48028:48036	1013711	0	True				
ANR	1014955	Identifier	gadgetSdb		1013711	0					
ANR	1014956	CompoundStatement		217:6:6150:6204	1013711	1					
ANR	1014957	IdentifierDeclStatement	RListIter * iter ;	1563:6:48047:48062	1013711	0	True				
ANR	1014958	IdentifierDecl	* iter		1013711	0					
ANR	1014959	IdentifierDeclType	RListIter *		1013711	0					
ANR	1014960	Identifier	iter		1013711	1					
ANR	1014961	IdentifierDeclStatement	RCoreAsmHit * hit = ( RCoreAsmHit * ) hitlist -> head -> data ;	1565:6:48071:48125	1013711	1	True				
ANR	1014962	IdentifierDecl	* hit = ( RCoreAsmHit * ) hitlist -> head -> data		1013711	0					
ANR	1014963	IdentifierDeclType	RCoreAsmHit *		1013711	0					
ANR	1014964	Identifier	hit		1013711	1					
ANR	1014965	AssignmentExpression	* hit = ( RCoreAsmHit * ) hitlist -> head -> data		1013711	2		=			
ANR	1014966	Identifier	hit		1013711	0					
ANR	1014967	CastExpression	( RCoreAsmHit * ) hitlist -> head -> data		1013711	1					
ANR	1014968	CastTarget	RCoreAsmHit *		1013711	0					
ANR	1014969	PtrMemberAccess	hitlist -> head -> data		1013711	1					
ANR	1014970	PtrMemberAccess	hitlist -> head		1013711	0					
ANR	1014971	Identifier	hitlist		1013711	0					
ANR	1014972	Identifier	head		1013711	1					
ANR	1014973	Identifier	data		1013711	1					
ANR	1014974	Statement	char	1566:6:48133:48136	1013711	2	True				
ANR	1014975	Statement	*	1566:11:48138:48138	1013711	3	True				
ANR	1014976	Statement	headAddr	1566:12:48139:48146	1013711	4	True				
ANR	1014977	Statement	=	1566:21:48148:48148	1013711	5	True				
ANR	1014978	Statement	r_str_newf	1566:23:48150:48159	1013711	6	True				
ANR	1014979	Statement	(	1566:34:48161:48161	1013711	7	True				
ANR	1014980	Statement	"""%"""	1566:35:48162:48164	1013711	8	True				
ANR	1014981	Statement	PFMT64x	1566:38:48165:48171	1013711	9	True				
ANR	1014982	Statement	","	1566:45:48172:48172	1013711	10	True				
ANR	1014983	Statement	hit	1566:47:48174:48176	1013711	11	True				
ANR	1014984	Statement	->	1566:50:48177:48178	1013711	12	True				
ANR	1014985	Statement	addr	1566:52:48179:48182	1013711	13	True				
ANR	1014986	Statement	)	1566:56:48183:48183	1013711	14	True				
ANR	1014987	ExpressionStatement		1566:57:48184:48184	1013711	15	True				
ANR	1014988	IfStatement	if ( ! headAddr )		1013711	16					
ANR	1014989	Condition	! headAddr	1567:10:48196:48204	1013711	0	True				
ANR	1014990	UnaryOperationExpression	! headAddr		1013711	0					
ANR	1014991	UnaryOperator	!		1013711	0					
ANR	1014992	Identifier	headAddr		1013711	1					
ANR	1014993	CompoundStatement		219:21:6286:6286	1013711	1					
ANR	1014994	ExpressionStatement	result = false	1568:7:48216:48230	1013711	0	True				
ANR	1014995	AssignmentExpression	result = false		1013711	0		=			
ANR	1014996	Identifier	result		1013711	0					
ANR	1014997	Identifier	false		1013711	1					
ANR	1014998	GotoStatement	goto bad ;	1569:7:48239:48247	1013711	1	True				
ANR	1014999	Identifier	bad		1013711	0					
ANR	1015000	Statement	r_list_foreach	1572:6:48264:48277	1013711	17	True				
ANR	1015001	Statement	(	1572:21:48279:48279	1013711	18	True				
ANR	1015002	Statement	hitlist	1572:22:48280:48286	1013711	19	True				
ANR	1015003	Statement	","	1572:29:48287:48287	1013711	20	True				
ANR	1015004	Statement	iter	1572:31:48289:48292	1013711	21	True				
ANR	1015005	Statement	","	1572:35:48293:48293	1013711	22	True				
ANR	1015006	Statement	hit	1572:37:48295:48297	1013711	23	True				
ANR	1015007	Statement	)	1572:40:48298:48298	1013711	24	True				
ANR	1015008	CompoundStatement		224:42:6379:6379	1013711	25					
ANR	1015009	Statement	char	1573:7:48309:48312	1013711	0	True				
ANR	1015010	Statement	*	1573:12:48314:48314	1013711	1	True				
ANR	1015011	Statement	addr	1573:13:48315:48318	1013711	2	True				
ANR	1015012	Statement	=	1573:18:48320:48320	1013711	3	True				
ANR	1015013	Statement	r_str_newf	1573:20:48322:48331	1013711	4	True				
ANR	1015014	Statement	(	1573:31:48333:48333	1013711	5	True				
ANR	1015015	Statement	"""%"""	1573:32:48334:48336	1013711	6	True				
ANR	1015016	Statement	PFMT64x	1573:35:48337:48343	1013711	7	True				
ANR	1015017	Statement	"""(%"""	1573:42:48344:48347	1013711	8	True				
ANR	1015018	Statement	PFMT32d	1573:46:48348:48354	1013711	9	True				
ANR	1015019	Statement	""")"""	1573:53:48355:48357	1013711	10	True				
ANR	1015020	Statement	","	1573:56:48358:48358	1013711	11	True				
ANR	1015021	Statement	hit	1573:58:48360:48362	1013711	12	True				
ANR	1015022	Statement	->	1573:61:48363:48364	1013711	13	True				
ANR	1015023	Statement	addr	1573:63:48365:48368	1013711	14	True				
ANR	1015024	Statement	","	1573:67:48369:48369	1013711	15	True				
ANR	1015025	Statement	hit	1573:69:48371:48373	1013711	16	True				
ANR	1015026	Statement	->	1573:72:48374:48375	1013711	17	True				
ANR	1015027	Statement	len	1573:74:48376:48378	1013711	18	True				
ANR	1015028	Statement	)	1573:77:48379:48379	1013711	19	True				
ANR	1015029	ExpressionStatement		1573:78:48380:48380	1013711	20	True				
ANR	1015030	IfStatement	if ( ! addr )		1013711	21					
ANR	1015031	Condition	! addr	1574:11:48393:48397	1013711	0	True				
ANR	1015032	UnaryOperationExpression	! addr		1013711	0					
ANR	1015033	UnaryOperator	!		1013711	0					
ANR	1015034	Identifier	addr		1013711	1					
ANR	1015035	CompoundStatement		226:18:6479:6479	1013711	1					
ANR	1015036	ExpressionStatement	free ( headAddr )	1575:8:48410:48425	1013711	0	True				
ANR	1015037	CallExpression	free ( headAddr )		1013711	0					
ANR	1015038	Callee	free		1013711	0					
ANR	1015039	Identifier	free		1013711	0					
ANR	1015040	ArgumentList	headAddr		1013711	1					
ANR	1015041	Argument	headAddr		1013711	0					
ANR	1015042	Identifier	headAddr		1013711	0					
ANR	1015043	ExpressionStatement	result = false	1576:8:48435:48449	1013711	1	True				
ANR	1015044	AssignmentExpression	result = false		1013711	0		=			
ANR	1015045	Identifier	result		1013711	0					
ANR	1015046	Identifier	false		1013711	1					
ANR	1015047	GotoStatement	goto bad ;	1577:8:48459:48467	1013711	2	True				
ANR	1015048	Identifier	bad		1013711	0					
ANR	1015049	ExpressionStatement	"sdb_concat ( gadgetSdb , headAddr , addr , 0 )"	1579:7:48485:48526	1013711	22	True				
ANR	1015050	CallExpression	"sdb_concat ( gadgetSdb , headAddr , addr , 0 )"		1013711	0					
ANR	1015051	Callee	sdb_concat		1013711	0					
ANR	1015052	Identifier	sdb_concat		1013711	0					
ANR	1015053	ArgumentList	gadgetSdb		1013711	1					
ANR	1015054	Argument	gadgetSdb		1013711	0					
ANR	1015055	Identifier	gadgetSdb		1013711	0					
ANR	1015056	Argument	headAddr		1013711	1					
ANR	1015057	Identifier	headAddr		1013711	0					
ANR	1015058	Argument	addr		1013711	2					
ANR	1015059	Identifier	addr		1013711	0					
ANR	1015060	Argument	0		1013711	3					
ANR	1015061	PrimaryExpression	0		1013711	0					
ANR	1015062	ExpressionStatement	free ( addr )	1580:7:48535:48546	1013711	23	True				
ANR	1015063	CallExpression	free ( addr )		1013711	0					
ANR	1015064	Callee	free		1013711	0					
ANR	1015065	Identifier	free		1013711	0					
ANR	1015066	ArgumentList	addr		1013711	1					
ANR	1015067	Argument	addr		1013711	0					
ANR	1015068	Identifier	addr		1013711	0					
ANR	1015069	ExpressionStatement	free ( headAddr )	1582:6:48562:48577	1013711	26	True				
ANR	1015070	CallExpression	free ( headAddr )		1013711	0					
ANR	1015071	Callee	free		1013711	0					
ANR	1015072	Identifier	free		1013711	0					
ANR	1015073	ArgumentList	headAddr		1013711	1					
ANR	1015074	Argument	headAddr		1013711	0					
ANR	1015075	Identifier	headAddr		1013711	0					
ANR	1015076	IfStatement	if ( json )		1013711	5					
ANR	1015077	Condition	json	1585:9:48596:48599	1013711	0	True				
ANR	1015078	Identifier	json		1013711	0					
ANR	1015079	CompoundStatement		237:15:6681:6681	1013711	1					
ANR	1015080	ExpressionStatement	mode = 'j'	1586:6:48610:48620	1013711	0	True				
ANR	1015081	AssignmentExpression	mode = 'j'		1013711	0		=			
ANR	1015082	Identifier	mode		1013711	0					
ANR	1015083	PrimaryExpression	'j'		1013711	1					
ANR	1015084	IfStatement	if ( ( mode == 'q' ) && subchain )		1013711	6					
ANR	1015085	Condition	( mode == 'q' ) && subchain	1588:9:48638:48662	1013711	0	True				
ANR	1015086	AndExpression	( mode == 'q' ) && subchain		1013711	0		&&			
ANR	1015087	EqualityExpression	mode == 'q'		1013711	0		==			
ANR	1015088	Identifier	mode		1013711	0					
ANR	1015089	PrimaryExpression	'q'		1013711	1					
ANR	1015090	Identifier	subchain		1013711	1					
ANR	1015091	CompoundStatement		240:36:6744:6744	1013711	1					
ANR	1015092	DoStatement	do		1013711	0					
ANR	1015093	CompoundStatement		241:9:6755:6755	1013711	0					
ANR	1015094	ExpressionStatement	"print_rop ( core , hitlist , mode , & json_first )"	1590:7:48685:48729	1013711	0	True				
ANR	1015095	CallExpression	"print_rop ( core , hitlist , mode , & json_first )"		1013711	0					
ANR	1015096	Callee	print_rop		1013711	0					
ANR	1015097	Identifier	print_rop		1013711	0					
ANR	1015098	ArgumentList	core		1013711	1					
ANR	1015099	Argument	core		1013711	0					
ANR	1015100	Identifier	core		1013711	0					
ANR	1015101	Argument	hitlist		1013711	1					
ANR	1015102	Identifier	hitlist		1013711	0					
ANR	1015103	Argument	mode		1013711	2					
ANR	1015104	Identifier	mode		1013711	0					
ANR	1015105	Argument	& json_first		1013711	3					
ANR	1015106	UnaryOperationExpression	& json_first		1013711	0					
ANR	1015107	UnaryOperator	&		1013711	0					
ANR	1015108	Identifier	json_first		1013711	1					
ANR	1015109	ExpressionStatement	hitlist -> head = hitlist -> head -> n	1591:7:48738:48770	1013711	1	True				
ANR	1015110	AssignmentExpression	hitlist -> head = hitlist -> head -> n		1013711	0		=			
ANR	1015111	PtrMemberAccess	hitlist -> head		1013711	0					
ANR	1015112	Identifier	hitlist		1013711	0					
ANR	1015113	Identifier	head		1013711	1					
ANR	1015114	PtrMemberAccess	hitlist -> head -> n		1013711	1					
ANR	1015115	PtrMemberAccess	hitlist -> head		1013711	0					
ANR	1015116	Identifier	hitlist		1013711	0					
ANR	1015117	Identifier	head		1013711	1					
ANR	1015118	Identifier	n		1013711	1					
ANR	1015119	Condition	hitlist -> head -> n	1592:15:48787:48802	1013711	1	True				
ANR	1015120	PtrMemberAccess	hitlist -> head -> n		1013711	0					
ANR	1015121	PtrMemberAccess	hitlist -> head		1013711	0					
ANR	1015122	Identifier	hitlist		1013711	0					
ANR	1015123	Identifier	head		1013711	1					
ANR	1015124	Identifier	n		1013711	1					
ANR	1015125	ElseStatement	else		1013711	0					
ANR	1015126	CompoundStatement		245:12:6897:6897	1013711	0					
ANR	1015127	ExpressionStatement	"print_rop ( core , hitlist , mode , & json_first )"	1594:6:48826:48870	1013711	0	True				
ANR	1015128	CallExpression	"print_rop ( core , hitlist , mode , & json_first )"		1013711	0					
ANR	1015129	Callee	print_rop		1013711	0					
ANR	1015130	Identifier	print_rop		1013711	0					
ANR	1015131	ArgumentList	core		1013711	1					
ANR	1015132	Argument	core		1013711	0					
ANR	1015133	Identifier	core		1013711	0					
ANR	1015134	Argument	hitlist		1013711	1					
ANR	1015135	Identifier	hitlist		1013711	0					
ANR	1015136	Argument	mode		1013711	2					
ANR	1015137	Identifier	mode		1013711	0					
ANR	1015138	Argument	& json_first		1013711	3					
ANR	1015139	UnaryOperationExpression	& json_first		1013711	0					
ANR	1015140	UnaryOperator	&		1013711	0					
ANR	1015141	Identifier	json_first		1013711	1					
ANR	1015142	ExpressionStatement	r_list_free ( hitlist )	1596:5:48884:48905	1013711	7	True				
ANR	1015143	CallExpression	r_list_free ( hitlist )		1013711	0					
ANR	1015144	Callee	r_list_free		1013711	0					
ANR	1015145	Identifier	r_list_free		1013711	0					
ANR	1015146	ArgumentList	hitlist		1013711	1					
ANR	1015147	Argument	hitlist		1013711	0					
ANR	1015148	Identifier	hitlist		1013711	0					
ANR	1015149	IfStatement	if ( max_count > 0 )		1013711	8					
ANR	1015150	Condition	max_count > 0	1597:9:48916:48928	1013711	0	True				
ANR	1015151	RelationalExpression	max_count > 0		1013711	0		>			
ANR	1015152	Identifier	max_count		1013711	0					
ANR	1015153	PrimaryExpression	0		1013711	1					
ANR	1015154	CompoundStatement		249:24:7010:7010	1013711	1					
ANR	1015155	ExpressionStatement	max_count --	1598:6:48939:48950	1013711	0	True				
ANR	1015156	PostIncDecOperationExpression	max_count --		1013711	0					
ANR	1015157	Identifier	max_count		1013711	0					
ANR	1015158	IncDec	--		1013711	1					
ANR	1015159	IfStatement	if ( max_count < 1 )		1013711	1					
ANR	1015160	Condition	max_count < 1	1599:10:48962:48974	1013711	0	True				
ANR	1015161	RelationalExpression	max_count < 1		1013711	0		<			
ANR	1015162	Identifier	max_count		1013711	0					
ANR	1015163	PrimaryExpression	1		1013711	1					
ANR	1015164	CompoundStatement		251:25:7056:7056	1013711	1					
ANR	1015165	BreakStatement	break ;	1600:7:48986:48991	1013711	0	True				
ANR	1015166	IfStatement	if ( increment != 1 )		1013711	7					
ANR	1015167	Condition	increment != 1	1604:8:49022:49035	1013711	0	True				
ANR	1015168	EqualityExpression	increment != 1		1013711	0		!=			
ANR	1015169	Identifier	increment		1013711	0					
ANR	1015170	PrimaryExpression	1		1013711	1					
ANR	1015171	CompoundStatement		256:24:7117:7117	1013711	1					
ANR	1015172	ExpressionStatement	i = next	1605:5:49045:49053	1013711	0	True				
ANR	1015173	AssignmentExpression	i = next		1013711	0		=			
ANR	1015174	Identifier	i		1013711	0					
ANR	1015175	Identifier	next		1013711	1					
ANR	1015176	ExpressionStatement	free ( buf )	1609:2:49072:49082	1013711	13	True				
ANR	1015177	CallExpression	free ( buf )		1013711	0					
ANR	1015178	Callee	free		1013711	0					
ANR	1015179	Identifier	free		1013711	0					
ANR	1015180	ArgumentList	buf		1013711	1					
ANR	1015181	Argument	buf		1013711	0					
ANR	1015182	Identifier	buf		1013711	0					
ANR	1015183	IfStatement	if ( r_cons_is_breaked ( ) )		1013711	41					
ANR	1015184	Condition	r_cons_is_breaked ( )	1611:5:49092:49111	1013711	0	True				
ANR	1015185	CallExpression	r_cons_is_breaked ( )		1013711	0					
ANR	1015186	Callee	r_cons_is_breaked		1013711	0					
ANR	1015187	Identifier	r_cons_is_breaked		1013711	0					
ANR	1015188	ArgumentList			1013711	1					
ANR	1015189	CompoundStatement		263:27:7193:7193	1013711	1					
ANR	1015190	ExpressionStatement	"eprintf ( ""\\n"" )"	1612:2:49118:49132	1013711	0	True				
ANR	1015191	CallExpression	"eprintf ( ""\\n"" )"		1013711	0					
ANR	1015192	Callee	eprintf		1013711	0					
ANR	1015193	Identifier	eprintf		1013711	0					
ANR	1015194	ArgumentList	"""\\n"""		1013711	1					
ANR	1015195	Argument	"""\\n"""		1013711	0					
ANR	1015196	PrimaryExpression	"""\\n"""		1013711	0					
ANR	1015197	ExpressionStatement	r_cons_break_pop ( )	1614:1:49138:49157	1013711	42	True				
ANR	1015198	CallExpression	r_cons_break_pop ( )		1013711	0					
ANR	1015199	Callee	r_cons_break_pop		1013711	0					
ANR	1015200	Identifier	r_cons_break_pop		1013711	0					
ANR	1015201	ArgumentList			1013711	1					
ANR	1015202	IfStatement	if ( json )		1013711	43					
ANR	1015203	Condition	json	1616:5:49165:49168	1013711	0	True				
ANR	1015204	Identifier	json		1013711	0					
ANR	1015205	CompoundStatement		268:11:7250:7250	1013711	1					
ANR	1015206	ExpressionStatement	"r_cons_printf ( ""]\\n"" )"	1617:2:49175:49196	1013711	0	True				
ANR	1015207	CallExpression	"r_cons_printf ( ""]\\n"" )"		1013711	0					
ANR	1015208	Callee	r_cons_printf		1013711	0					
ANR	1015209	Identifier	r_cons_printf		1013711	0					
ANR	1015210	ArgumentList	"""]\\n"""		1013711	1					
ANR	1015211	Argument	"""]\\n"""		1013711	0					
ANR	1015212	PrimaryExpression	"""]\\n"""		1013711	0					
ANR	1015213	Label	bad :	1619:0:49201:49204	1013711	44	True				
ANR	1015214	Identifier	bad		1013711	0					
ANR	1015215	ExpressionStatement	r_list_free ( rx_list )	1620:1:49207:49228	1013711	45	True				
ANR	1015216	CallExpression	r_list_free ( rx_list )		1013711	0					
ANR	1015217	Callee	r_list_free		1013711	0					
ANR	1015218	Identifier	r_list_free		1013711	0					
ANR	1015219	ArgumentList	rx_list		1013711	1					
ANR	1015220	Argument	rx_list		1013711	0					
ANR	1015221	Identifier	rx_list		1013711	0					
ANR	1015222	ExpressionStatement	r_list_free ( end_list )	1621:1:49231:49253	1013711	46	True				
ANR	1015223	CallExpression	r_list_free ( end_list )		1013711	0					
ANR	1015224	Callee	r_list_free		1013711	0					
ANR	1015225	Identifier	r_list_free		1013711	0					
ANR	1015226	ArgumentList	end_list		1013711	1					
ANR	1015227	Argument	end_list		1013711	0					
ANR	1015228	Identifier	end_list		1013711	0					
ANR	1015229	ExpressionStatement	free ( grep_arg )	1622:1:49256:49271	1013711	47	True				
ANR	1015230	CallExpression	free ( grep_arg )		1013711	0					
ANR	1015231	Callee	free		1013711	0					
ANR	1015232	Identifier	free		1013711	0					
ANR	1015233	ArgumentList	grep_arg		1013711	1					
ANR	1015234	Argument	grep_arg		1013711	0					
ANR	1015235	Identifier	grep_arg		1013711	0					
ANR	1015236	ExpressionStatement	free ( gregexp )	1623:1:49274:49288	1013711	48	True				
ANR	1015237	CallExpression	free ( gregexp )		1013711	0					
ANR	1015238	Callee	free		1013711	0					
ANR	1015239	Identifier	free		1013711	0					
ANR	1015240	ArgumentList	gregexp		1013711	1					
ANR	1015241	Argument	gregexp		1013711	0					
ANR	1015242	Identifier	gregexp		1013711	0					
ANR	1015243	ReturnStatement	return result ;	1624:1:49291:49304	1013711	49	True				
ANR	1015244	Identifier	result		1013711	0					
ANR	1015245	ReturnType	static int		1013711	1					
ANR	1015246	Identifier	r_core_search_rop		1013711	2					
ANR	1015247	ParameterList	"RCore * core , RInterval search_itv , int opt , const char * grep , int regexp , struct search_parameters * param"		1013711	3					
ANR	1015248	Parameter	RCore * core	1349:29:41813:41823	1013711	0	True				
ANR	1015249	ParameterType	RCore *		1013711	0					
ANR	1015250	Identifier	core		1013711	1					
ANR	1015251	Parameter	RInterval search_itv	1349:42:41826:41845	1013711	1	True				
ANR	1015252	ParameterType	RInterval		1013711	0					
ANR	1015253	Identifier	search_itv		1013711	1					
ANR	1015254	Parameter	int opt	1349:64:41848:41854	1013711	2	True				
ANR	1015255	ParameterType	int		1013711	0					
ANR	1015256	Identifier	opt		1013711	1					
ANR	1015257	Parameter	const char * grep	1349:73:41857:41872	1013711	3	True				
ANR	1015258	ParameterType	const char *		1013711	0					
ANR	1015259	Identifier	grep		1013711	1					
ANR	1015260	Parameter	int regexp	1349:91:41875:41884	1013711	4	True				
ANR	1015261	ParameterType	int		1013711	0					
ANR	1015262	Identifier	regexp		1013711	1					
ANR	1015263	Parameter	struct search_parameters * param	1349:103:41887:41917	1013711	5	True				
ANR	1015264	ParameterType	struct search_parameters *		1013711	0					
ANR	1015265	Identifier	param		1013711	1					
ANR	1015266	CFGEntryNode	ENTRY		1013711		True				
ANR	1015267	CFGExitNode	EXIT		1013711		True				
ANR	1015268	CFGErrorNode	ERROR		1013711		True				
ANR	1015269	Symbol	* map		1013711						
ANR	1015270	Symbol	prev		1013711						
ANR	1015271	Symbol	delta		1013711						
ANR	1015272	Symbol	strchr		1013711						
ANR	1015273	Symbol	r_itv_overlap		1013711						
ANR	1015274	Symbol	r_list_pop		1013711						
ANR	1015275	Symbol	asmop		1013711						
ANR	1015276	Symbol	* hitlist		1013711						
ANR	1015277	Symbol	* ( grep_arg - 1 )		1013711						
ANR	1015278	Symbol	gadgetSdb		1013711						
ANR	1015279	Symbol	hitlist -> head		1013711						
ANR	1015280	Symbol	* * hitlist		1013711						
ANR	1015281	Symbol	is_end_gadget		1013711						
ANR	1015282	Symbol	r_anal_op		1013711						
ANR	1015283	Symbol	r_list_newf		1013711						
ANR	1015284	Symbol	max_instr		1013711						
ANR	1015285	Symbol	end_gadget . delay		1013711						
ANR	1015286	Symbol	iter		1013711						
ANR	1015287	Symbol	* end_gadget		1013711						
ANR	1015288	Symbol	hitlist -> head -> data		1013711						
ANR	1015289	Symbol	r_config_get_i		1013711						
ANR	1015290	Symbol	search_itv		1013711						
ANR	1015291	Symbol	json_first		1013711						
ANR	1015292	Symbol	r_list_empty		1013711						
ANR	1015293	Symbol	ropdepth		1013711						
ANR	1015294	Symbol	* hitlist -> head		1013711						
ANR	1015295	Symbol	end_gadget		1013711						
ANR	1015296	Symbol	regexp		1013711						
ANR	1015297	Symbol	& json_first		1013711						
ANR	1015298	Symbol	rx		1013711						
ANR	1015299	Symbol	core -> sdb		1013711						
ANR	1015300	Symbol	* core		1013711						
ANR	1015301	Symbol	r_config_get		1013711						
ANR	1015302	Symbol	increment		1013711						
ANR	1015303	Symbol	core -> assembler		1013711						
ANR	1015304	Symbol	core -> anal		1013711						
ANR	1015305	Symbol	epair -> delay_size		1013711						
ANR	1015306	Symbol	rx_list		1013711						
ANR	1015307	Symbol	max_count		1013711						
ANR	1015308	Symbol	result		1013711						
ANR	1015309	Symbol	tok		1013711						
ANR	1015310	Symbol	r_cons_is_breaked		1013711						
ANR	1015311	Symbol	search		1013711						
ANR	1015312	Symbol	end_list		1013711						
ANR	1015313	Symbol	core -> io		1013711						
ANR	1015314	Symbol	free		1013711						
ANR	1015315	Symbol	map		1013711						
ANR	1015316	Symbol	itermap		1013711						
ANR	1015317	Symbol	i		1013711						
ANR	1015318	Symbol	R_MIN		1013711						
ANR	1015319	Symbol	* epair		1013711						
ANR	1015320	Symbol	& end_gadget		1013711						
ANR	1015321	Symbol	r_itv_end		1013711						
ANR	1015322	Symbol	buf		1013711						
ANR	1015323	Symbol	& asmop		1013711						
ANR	1015324	Symbol	arch		1013711						
ANR	1015325	Symbol	to		1013711						
ANR	1015326	Symbol	epair		1013711						
ANR	1015327	Symbol	r_list_length		1013711						
ANR	1015328	Symbol	sdb_ns		1013711						
ANR	1015329	Symbol	search -> maxhits		1013711						
ANR	1015330	Symbol	headAddr		1013711						
ANR	1015331	Symbol	align		1013711						
ANR	1015332	Symbol	hitlist -> head -> n		1013711						
ANR	1015333	Symbol	mode		1013711						
ANR	1015334	Symbol	hit		1013711						
ANR	1015335	Symbol	* grep		1013711						
ANR	1015336	Symbol	core -> search -> align		1013711						
ANR	1015337	Symbol	r_itv_intersect		1013711						
ANR	1015338	Symbol	from		1013711						
ANR	1015339	Symbol	itv . addr		1013711						
ANR	1015340	Symbol	& opt		1013711						
ANR	1015341	Symbol	ret		1013711						
ANR	1015342	Symbol	strcmp		1013711						
ANR	1015343	Symbol	grep_arg		1013711						
ANR	1015344	Symbol	NULL		1013711						
ANR	1015345	Symbol	r_list_get_n		1013711						
ANR	1015346	Symbol	* core -> search		1013711						
ANR	1015347	Symbol	strtok		1013711						
ANR	1015348	Symbol	itv		1013711						
ANR	1015349	Symbol	core		1013711						
ANR	1015350	Symbol	opt		1013711						
ANR	1015351	Symbol	true		1013711						
ANR	1015352	Symbol	crop		1013711						
ANR	1015353	Symbol	subchain		1013711						
ANR	1015354	Symbol	next		1013711						
ANR	1015355	Symbol	map -> itv		1013711						
ANR	1015356	Symbol	* grep_arg		1013711						
ANR	1015357	Symbol	max_inst_size_x86		1013711						
ANR	1015358	Symbol	calloc		1013711						
ANR	1015359	Symbol	R_EMPTY		1013711						
ANR	1015360	Symbol	R_ANAL_OP_MASK_BASIC		1013711						
ANR	1015361	Symbol	epair -> instr_offset		1013711						
ANR	1015362	Symbol	param		1013711						
ANR	1015363	Symbol	r_str_replace		1013711						
ANR	1015364	Symbol	gregexp		1013711						
ANR	1015365	Symbol	json		1013711						
ANR	1015366	Symbol	end		1013711						
ANR	1015367	Symbol	addr		1013711						
ANR	1015368	Symbol	core -> search		1013711						
ANR	1015369	Symbol	* * core		1013711						
ANR	1015370	Symbol	core -> config		1013711						
ANR	1015371	Symbol	end_gadget -> instr_offset		1013711						
ANR	1015372	Symbol	badstart		1013711						
ANR	1015373	Symbol	construct_rop_gadget		1013711						
ANR	1015374	Symbol	grep		1013711						
ANR	1015375	Symbol	false		1013711						
ANR	1015376	Symbol	* search		1013711						
ANR	1015377	Symbol	ht_uu_new_opt		1013711						
ANR	1015378	Symbol	strdup		1013711						
ANR	1015379	Symbol	hitlist		1013711						
ANR	1015380	Symbol	r_asm_disassemble		1013711						
ANR	1015381	Function	esil_addrinfo	1627:0:49309:49663							
ANR	1015382	FunctionDef	esil_addrinfo (RAnalEsil * esil)		1015381	0					
ANR	1015383	CompoundStatement		1627:43:49352:49663	1015381	0					
ANR	1015384	IdentifierDeclStatement	RCore * core = ( RCore * ) esil -> cb . user ;	1628:1:49355:49392	1015381	0	True				
ANR	1015385	IdentifierDecl	* core = ( RCore * ) esil -> cb . user		1015381	0					
ANR	1015386	IdentifierDeclType	RCore *		1015381	0					
ANR	1015387	Identifier	core		1015381	1					
ANR	1015388	AssignmentExpression	* core = ( RCore * ) esil -> cb . user		1015381	2		=			
ANR	1015389	Identifier	core		1015381	0					
ANR	1015390	CastExpression	( RCore * ) esil -> cb . user		1015381	1					
ANR	1015391	CastTarget	RCore *		1015381	0					
ANR	1015392	MemberAccess	esil -> cb . user		1015381	1					
ANR	1015393	PtrMemberAccess	esil -> cb		1015381	0					
ANR	1015394	Identifier	esil		1015381	0					
ANR	1015395	Identifier	cb		1015381	1					
ANR	1015396	Identifier	user		1015381	1					
ANR	1015397	IdentifierDeclStatement	ut64 num = 0 ;	1629:1:49395:49407	1015381	1	True				
ANR	1015398	IdentifierDecl	num = 0		1015381	0					
ANR	1015399	IdentifierDeclType	ut64		1015381	0					
ANR	1015400	Identifier	num		1015381	1					
ANR	1015401	AssignmentExpression	num = 0		1015381	2		=			
ANR	1015402	Identifier	num		1015381	0					
ANR	1015403	PrimaryExpression	0		1015381	1					
ANR	1015404	IdentifierDeclStatement	char * src = r_anal_esil_pop ( esil ) ;	1630:1:49410:49444	1015381	2	True				
ANR	1015405	IdentifierDecl	* src = r_anal_esil_pop ( esil )		1015381	0					
ANR	1015406	IdentifierDeclType	char *		1015381	0					
ANR	1015407	Identifier	src		1015381	1					
ANR	1015408	AssignmentExpression	* src = r_anal_esil_pop ( esil )		1015381	2		=			
ANR	1015409	Identifier	src		1015381	0					
ANR	1015410	CallExpression	r_anal_esil_pop ( esil )		1015381	1					
ANR	1015411	Callee	r_anal_esil_pop		1015381	0					
ANR	1015412	Identifier	r_anal_esil_pop		1015381	0					
ANR	1015413	ArgumentList	esil		1015381	1					
ANR	1015414	Argument	esil		1015381	0					
ANR	1015415	Identifier	esil		1015381	0					
ANR	1015416	IfStatement	"if ( src && * src && r_anal_esil_get_parm ( esil , src , & num ) )"		1015381	3					
ANR	1015417	Condition	"src && * src && r_anal_esil_get_parm ( esil , src , & num )"	1631:5:49451:49503	1015381	0	True				
ANR	1015418	AndExpression	"src && * src && r_anal_esil_get_parm ( esil , src , & num )"		1015381	0		&&			
ANR	1015419	Identifier	src		1015381	0					
ANR	1015420	AndExpression	"* src && r_anal_esil_get_parm ( esil , src , & num )"		1015381	1		&&			
ANR	1015421	UnaryOperationExpression	* src		1015381	0					
ANR	1015422	UnaryOperator	*		1015381	0					
ANR	1015423	Identifier	src		1015381	1					
ANR	1015424	CallExpression	"r_anal_esil_get_parm ( esil , src , & num )"		1015381	1					
ANR	1015425	Callee	r_anal_esil_get_parm		1015381	0					
ANR	1015426	Identifier	r_anal_esil_get_parm		1015381	0					
ANR	1015427	ArgumentList	esil		1015381	1					
ANR	1015428	Argument	esil		1015381	0					
ANR	1015429	Identifier	esil		1015381	0					
ANR	1015430	Argument	src		1015381	1					
ANR	1015431	Identifier	src		1015381	0					
ANR	1015432	Argument	& num		1015381	2					
ANR	1015433	UnaryOperationExpression	& num		1015381	0					
ANR	1015434	UnaryOperator	&		1015381	0					
ANR	1015435	Identifier	num		1015381	1					
ANR	1015436	CompoundStatement		5:60:153:153	1015381	1					
ANR	1015437	ExpressionStatement	"num = r_core_anal_address ( core , num )"	1632:2:49510:49547	1015381	0	True				
ANR	1015438	AssignmentExpression	"num = r_core_anal_address ( core , num )"		1015381	0		=			
ANR	1015439	Identifier	num		1015381	0					
ANR	1015440	CallExpression	"r_core_anal_address ( core , num )"		1015381	1					
ANR	1015441	Callee	r_core_anal_address		1015381	0					
ANR	1015442	Identifier	r_core_anal_address		1015381	0					
ANR	1015443	ArgumentList	core		1015381	1					
ANR	1015444	Argument	core		1015381	0					
ANR	1015445	Identifier	core		1015381	0					
ANR	1015446	Argument	num		1015381	1					
ANR	1015447	Identifier	num		1015381	0					
ANR	1015448	ExpressionStatement	"r_anal_esil_pushnum ( esil , num )"	1633:2:49551:49582	1015381	1	True				
ANR	1015449	CallExpression	"r_anal_esil_pushnum ( esil , num )"		1015381	0					
ANR	1015450	Callee	r_anal_esil_pushnum		1015381	0					
ANR	1015451	Identifier	r_anal_esil_pushnum		1015381	0					
ANR	1015452	ArgumentList	esil		1015381	1					
ANR	1015453	Argument	esil		1015381	0					
ANR	1015454	Identifier	esil		1015381	0					
ANR	1015455	Argument	num		1015381	1					
ANR	1015456	Identifier	num		1015381	0					
ANR	1015457	ElseStatement	else		1015381	0					
ANR	1015458	CompoundStatement		8:8:239:239	1015381	0					
ANR	1015459	ReturnStatement	return false ;	1636:2:49619:49631	1015381	0	True				
ANR	1015460	Identifier	false		1015381	0					
ANR	1015461	ExpressionStatement	free ( src )	1638:1:49637:49647	1015381	4	True				
ANR	1015462	CallExpression	free ( src )		1015381	0					
ANR	1015463	Callee	free		1015381	0					
ANR	1015464	Identifier	free		1015381	0					
ANR	1015465	ArgumentList	src		1015381	1					
ANR	1015466	Argument	src		1015381	0					
ANR	1015467	Identifier	src		1015381	0					
ANR	1015468	ReturnStatement	return true ;	1639:1:49650:49661	1015381	5	True				
ANR	1015469	Identifier	true		1015381	0					
ANR	1015470	ReturnType	static bool		1015381	1					
ANR	1015471	Identifier	esil_addrinfo		1015381	2					
ANR	1015472	ParameterList	RAnalEsil * esil		1015381	3					
ANR	1015473	Parameter	RAnalEsil * esil	1627:26:49335:49349	1015381	0	True				
ANR	1015474	ParameterType	RAnalEsil *		1015381	0					
ANR	1015475	Identifier	esil		1015381	1					
ANR	1015476	CFGEntryNode	ENTRY		1015381		True				
ANR	1015477	CFGExitNode	EXIT		1015381		True				
ANR	1015478	Symbol	src		1015381						
ANR	1015479	Symbol	num		1015381						
ANR	1015480	Symbol	r_anal_esil_pop		1015381						
ANR	1015481	Symbol	false		1015381						
ANR	1015482	Symbol	& num		1015381						
ANR	1015483	Symbol	* src		1015381						
ANR	1015484	Symbol	esil -> cb . user		1015381						
ANR	1015485	Symbol	core		1015381						
ANR	1015486	Symbol	r_core_anal_address		1015381						
ANR	1015487	Symbol	true		1015381						
ANR	1015488	Symbol	* esil		1015381						
ANR	1015489	Symbol	r_anal_esil_get_parm		1015381						
ANR	1015490	Symbol	esil -> cb		1015381						
ANR	1015491	Symbol	esil		1015381						
ANR	1015492	Function	do_esil_search	1642:0:49666:53160							
ANR	1015493	FunctionDef	"do_esil_search (RCore * core , struct search_parameters * param , const char * input)"		1015492	0					
ANR	1015494	CompoundStatement		1642:92:49758:53160	1015492	0					
ANR	1015495	IdentifierDeclStatement	"const int hit_combo_limit = r_config_get_i ( core -> config , ""search.esilcombo"" ) ;"	1643:1:49761:49838	1015492	0	True				
ANR	1015496	IdentifierDecl	"hit_combo_limit = r_config_get_i ( core -> config , ""search.esilcombo"" )"		1015492	0					
ANR	1015497	IdentifierDeclType	const int		1015492	0					
ANR	1015498	Identifier	hit_combo_limit		1015492	1					
ANR	1015499	AssignmentExpression	"hit_combo_limit = r_config_get_i ( core -> config , ""search.esilcombo"" )"		1015492	2		=			
ANR	1015500	Identifier	hit_combo_limit		1015492	0					
ANR	1015501	CallExpression	"r_config_get_i ( core -> config , ""search.esilcombo"" )"		1015492	1					
ANR	1015502	Callee	r_config_get_i		1015492	0					
ANR	1015503	Identifier	r_config_get_i		1015492	0					
ANR	1015504	ArgumentList	core -> config		1015492	1					
ANR	1015505	Argument	core -> config		1015492	0					
ANR	1015506	PtrMemberAccess	core -> config		1015492	0					
ANR	1015507	Identifier	core		1015492	0					
ANR	1015508	Identifier	config		1015492	1					
ANR	1015509	Argument	"""search.esilcombo"""		1015492	1					
ANR	1015510	PrimaryExpression	"""search.esilcombo"""		1015492	0					
ANR	1015511	IdentifierDeclStatement	"const bool cfgDebug = r_config_get_i ( core -> config , ""cfg.debug"" ) ;"	1644:1:49841:49905	1015492	1	True				
ANR	1015512	IdentifierDecl	"cfgDebug = r_config_get_i ( core -> config , ""cfg.debug"" )"		1015492	0					
ANR	1015513	IdentifierDeclType	const bool		1015492	0					
ANR	1015514	Identifier	cfgDebug		1015492	1					
ANR	1015515	AssignmentExpression	"cfgDebug = r_config_get_i ( core -> config , ""cfg.debug"" )"		1015492	2		=			
ANR	1015516	Identifier	cfgDebug		1015492	0					
ANR	1015517	CallExpression	"r_config_get_i ( core -> config , ""cfg.debug"" )"		1015492	1					
ANR	1015518	Callee	r_config_get_i		1015492	0					
ANR	1015519	Identifier	r_config_get_i		1015492	0					
ANR	1015520	ArgumentList	core -> config		1015492	1					
ANR	1015521	Argument	core -> config		1015492	0					
ANR	1015522	PtrMemberAccess	core -> config		1015492	0					
ANR	1015523	Identifier	core		1015492	0					
ANR	1015524	Identifier	config		1015492	1					
ANR	1015525	Argument	"""cfg.debug"""		1015492	1					
ANR	1015526	PrimaryExpression	"""cfg.debug"""		1015492	0					
ANR	1015527	IdentifierDeclStatement	RSearch * search = core -> search ;	1645:1:49908:49938	1015492	2	True				
ANR	1015528	IdentifierDecl	* search = core -> search		1015492	0					
ANR	1015529	IdentifierDeclType	RSearch *		1015492	0					
ANR	1015530	Identifier	search		1015492	1					
ANR	1015531	AssignmentExpression	* search = core -> search		1015492	2		=			
ANR	1015532	Identifier	search		1015492	0					
ANR	1015533	PtrMemberAccess	core -> search		1015492	1					
ANR	1015534	Identifier	core		1015492	0					
ANR	1015535	Identifier	search		1015492	1					
ANR	1015536	IdentifierDeclStatement	RSearchKeyword kw = R_EMPTY ;	1646:1:49941:49968	1015492	3	True				
ANR	1015537	IdentifierDecl	kw = R_EMPTY		1015492	0					
ANR	1015538	IdentifierDeclType	RSearchKeyword		1015492	0					
ANR	1015539	Identifier	kw		1015492	1					
ANR	1015540	AssignmentExpression	kw = R_EMPTY		1015492	2		=			
ANR	1015541	Identifier	R_EMPTY		1015492	0					
ANR	1015542	Identifier	R_EMPTY		1015492	1					
ANR	1015543	IfStatement	if ( input [ 0 ] == 'E' && input [ 1 ] != ' ' )		1015492	4					
ANR	1015544	Condition	input [ 0 ] == 'E' && input [ 1 ] != ' '	1647:5:49975:50008	1015492	0	True				
ANR	1015545	AndExpression	input [ 0 ] == 'E' && input [ 1 ] != ' '		1015492	0		&&			
ANR	1015546	EqualityExpression	input [ 0 ] == 'E'		1015492	0		==			
ANR	1015547	ArrayIndexing	input [ 0 ]		1015492	0					
ANR	1015548	Identifier	input		1015492	0					
ANR	1015549	PrimaryExpression	0		1015492	1					
ANR	1015550	PrimaryExpression	'E'		1015492	1					
ANR	1015551	EqualityExpression	input [ 1 ] != ' '		1015492	1		!=			
ANR	1015552	ArrayIndexing	input [ 1 ]		1015492	0					
ANR	1015553	Identifier	input		1015492	0					
ANR	1015554	PrimaryExpression	1		1015492	1					
ANR	1015555	PrimaryExpression	' '		1015492	1					
ANR	1015556	CompoundStatement		6:41:252:252	1015492	1					
ANR	1015557	ExpressionStatement	"eprintf ( ""Usage: /E [esil-expr]\\n"" )"	1648:2:50015:50050	1015492	0	True				
ANR	1015558	CallExpression	"eprintf ( ""Usage: /E [esil-expr]\\n"" )"		1015492	0					
ANR	1015559	Callee	eprintf		1015492	0					
ANR	1015560	Identifier	eprintf		1015492	0					
ANR	1015561	ArgumentList	"""Usage: /E [esil-expr]\\n"""		1015492	1					
ANR	1015562	Argument	"""Usage: /E [esil-expr]\\n"""		1015492	0					
ANR	1015563	PrimaryExpression	"""Usage: /E [esil-expr]\\n"""		1015492	0					
ANR	1015564	ReturnStatement	return ;	1649:2:50054:50060	1015492	1	True				
ANR	1015565	IfStatement	if ( ! core -> anal -> esil )		1015492	5					
ANR	1015566	Condition	! core -> anal -> esil	1651:5:50070:50086	1015492	0	True				
ANR	1015567	UnaryOperationExpression	! core -> anal -> esil		1015492	0					
ANR	1015568	UnaryOperator	!		1015492	0					
ANR	1015569	PtrMemberAccess	core -> anal -> esil		1015492	1					
ANR	1015570	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015571	Identifier	core		1015492	0					
ANR	1015572	Identifier	anal		1015492	1					
ANR	1015573	Identifier	esil		1015492	1					
ANR	1015574	CompoundStatement		10:24:330:330	1015492	1					
ANR	1015575	ExpressionStatement	"r_core_cmd0 ( core , ""aei"" )"	1653:2:50117:50142	1015492	0	True				
ANR	1015576	CallExpression	"r_core_cmd0 ( core , ""aei"" )"		1015492	0					
ANR	1015577	Callee	r_core_cmd0		1015492	0					
ANR	1015578	Identifier	r_core_cmd0		1015492	0					
ANR	1015579	ArgumentList	core		1015492	1					
ANR	1015580	Argument	core		1015492	0					
ANR	1015581	Identifier	core		1015492	0					
ANR	1015582	Argument	"""aei"""		1015492	1					
ANR	1015583	PrimaryExpression	"""aei"""		1015492	0					
ANR	1015584	IfStatement	if ( ! core -> anal -> esil )		1015492	1					
ANR	1015585	Condition	! core -> anal -> esil	1654:6:50150:50166	1015492	0	True				
ANR	1015586	UnaryOperationExpression	! core -> anal -> esil		1015492	0					
ANR	1015587	UnaryOperator	!		1015492	0					
ANR	1015588	PtrMemberAccess	core -> anal -> esil		1015492	1					
ANR	1015589	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015590	Identifier	core		1015492	0					
ANR	1015591	Identifier	anal		1015492	1					
ANR	1015592	Identifier	esil		1015492	1					
ANR	1015593	CompoundStatement		13:25:410:410	1015492	1					
ANR	1015594	ExpressionStatement	"eprintf ( ""Cannot initialize the ESIL vm\\n"" )"	1655:3:50174:50217	1015492	0	True				
ANR	1015595	CallExpression	"eprintf ( ""Cannot initialize the ESIL vm\\n"" )"		1015492	0					
ANR	1015596	Callee	eprintf		1015492	0					
ANR	1015597	Identifier	eprintf		1015492	0					
ANR	1015598	ArgumentList	"""Cannot initialize the ESIL vm\\n"""		1015492	1					
ANR	1015599	Argument	"""Cannot initialize the ESIL vm\\n"""		1015492	0					
ANR	1015600	PrimaryExpression	"""Cannot initialize the ESIL vm\\n"""		1015492	0					
ANR	1015601	ReturnStatement	return ;	1656:3:50222:50228	1015492	1	True				
ANR	1015602	IdentifierDeclStatement	RIOMap * map ;	1659:1:50238:50249	1015492	6	True				
ANR	1015603	IdentifierDecl	* map		1015492	0					
ANR	1015604	IdentifierDeclType	RIOMap *		1015492	0					
ANR	1015605	Identifier	map		1015492	1					
ANR	1015606	IdentifierDeclStatement	RListIter * iter ;	1660:1:50252:50267	1015492	7	True				
ANR	1015607	IdentifierDecl	* iter		1015492	0					
ANR	1015608	IdentifierDeclType	RListIter *		1015492	0					
ANR	1015609	Identifier	iter		1015492	1					
ANR	1015610	Statement	r_list_foreach	1661:1:50270:50283	1015492	8	True				
ANR	1015611	Statement	(	1661:16:50285:50285	1015492	9	True				
ANR	1015612	Statement	param	1661:17:50286:50290	1015492	10	True				
ANR	1015613	Statement	->	1661:22:50291:50292	1015492	11	True				
ANR	1015614	Statement	boundaries	1661:24:50293:50302	1015492	12	True				
ANR	1015615	Statement	","	1661:34:50303:50303	1015492	13	True				
ANR	1015616	Statement	iter	1661:36:50305:50308	1015492	14	True				
ANR	1015617	Statement	","	1661:40:50309:50309	1015492	15	True				
ANR	1015618	Statement	map	1661:42:50311:50313	1015492	16	True				
ANR	1015619	Statement	)	1661:45:50314:50314	1015492	17	True				
ANR	1015620	CompoundStatement		30:2:901:972	1015492	18					
ANR	1015621	IdentifierDeclStatement	"const int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	1662:2:50320:50383	1015492	0	True				
ANR	1015622	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		1015492	0					
ANR	1015623	IdentifierDeclType	const int		1015492	0					
ANR	1015624	Identifier	iotrap		1015492	1					
ANR	1015625	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		1015492	2		=			
ANR	1015626	Identifier	iotrap		1015492	0					
ANR	1015627	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		1015492	1					
ANR	1015628	Callee	r_config_get_i		1015492	0					
ANR	1015629	Identifier	r_config_get_i		1015492	0					
ANR	1015630	ArgumentList	core -> config		1015492	1					
ANR	1015631	Argument	core -> config		1015492	0					
ANR	1015632	PtrMemberAccess	core -> config		1015492	0					
ANR	1015633	Identifier	core		1015492	0					
ANR	1015634	Identifier	config		1015492	1					
ANR	1015635	Argument	"""esil.iotrap"""		1015492	1					
ANR	1015636	PrimaryExpression	"""esil.iotrap"""		1015492	0					
ANR	1015637	IdentifierDeclStatement	"const int stacksize = r_config_get_i ( core -> config , ""esil.stacksize"" ) ;"	1663:2:50387:50456	1015492	1	True				
ANR	1015638	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stacksize"" )"		1015492	0					
ANR	1015639	IdentifierDeclType	const int		1015492	0					
ANR	1015640	Identifier	stacksize		1015492	1					
ANR	1015641	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stacksize"" )"		1015492	2		=			
ANR	1015642	Identifier	stacksize		1015492	0					
ANR	1015643	CallExpression	"r_config_get_i ( core -> config , ""esil.stacksize"" )"		1015492	1					
ANR	1015644	Callee	r_config_get_i		1015492	0					
ANR	1015645	Identifier	r_config_get_i		1015492	0					
ANR	1015646	ArgumentList	core -> config		1015492	1					
ANR	1015647	Argument	core -> config		1015492	0					
ANR	1015648	PtrMemberAccess	core -> config		1015492	0					
ANR	1015649	Identifier	core		1015492	0					
ANR	1015650	Identifier	config		1015492	1					
ANR	1015651	Argument	"""esil.stacksize"""		1015492	1					
ANR	1015652	PrimaryExpression	"""esil.stacksize"""		1015492	0					
ANR	1015653	IdentifierDeclStatement	"int nonull = r_config_get_i ( core -> config , ""esil.nonull"" ) ;"	1664:2:50460:50517	1015492	2	True				
ANR	1015654	IdentifierDecl	"nonull = r_config_get_i ( core -> config , ""esil.nonull"" )"		1015492	0					
ANR	1015655	IdentifierDeclType	int		1015492	0					
ANR	1015656	Identifier	nonull		1015492	1					
ANR	1015657	AssignmentExpression	"nonull = r_config_get_i ( core -> config , ""esil.nonull"" )"		1015492	2		=			
ANR	1015658	Identifier	nonull		1015492	0					
ANR	1015659	CallExpression	"r_config_get_i ( core -> config , ""esil.nonull"" )"		1015492	1					
ANR	1015660	Callee	r_config_get_i		1015492	0					
ANR	1015661	Identifier	r_config_get_i		1015492	0					
ANR	1015662	ArgumentList	core -> config		1015492	1					
ANR	1015663	Argument	core -> config		1015492	0					
ANR	1015664	PtrMemberAccess	core -> config		1015492	0					
ANR	1015665	Identifier	core		1015492	0					
ANR	1015666	Identifier	config		1015492	1					
ANR	1015667	Argument	"""esil.nonull"""		1015492	1					
ANR	1015668	PrimaryExpression	"""esil.nonull"""		1015492	0					
ANR	1015669	IdentifierDeclStatement	int hit_happens = 0 ;	1665:2:50521:50540	1015492	3	True				
ANR	1015670	IdentifierDecl	hit_happens = 0		1015492	0					
ANR	1015671	IdentifierDeclType	int		1015492	0					
ANR	1015672	Identifier	hit_happens		1015492	1					
ANR	1015673	AssignmentExpression	hit_happens = 0		1015492	2		=			
ANR	1015674	Identifier	hit_happens		1015492	0					
ANR	1015675	PrimaryExpression	0		1015492	1					
ANR	1015676	IdentifierDeclStatement	int hit_combo = 0 ;	1666:2:50544:50561	1015492	4	True				
ANR	1015677	IdentifierDecl	hit_combo = 0		1015492	0					
ANR	1015678	IdentifierDeclType	int		1015492	0					
ANR	1015679	Identifier	hit_combo		1015492	1					
ANR	1015680	AssignmentExpression	hit_combo = 0		1015492	2		=			
ANR	1015681	Identifier	hit_combo		1015492	0					
ANR	1015682	PrimaryExpression	0		1015492	1					
ANR	1015683	IdentifierDeclStatement	char * res ;	1667:2:50565:50574	1015492	5	True				
ANR	1015684	IdentifierDecl	* res		1015492	0					
ANR	1015685	IdentifierDeclType	char *		1015492	0					
ANR	1015686	Identifier	res		1015492	1					
ANR	1015687	IdentifierDeclStatement	"ut64 nres , addr ;"	1668:2:50578:50593	1015492	6	True				
ANR	1015688	IdentifierDecl	nres		1015492	0					
ANR	1015689	IdentifierDeclType	ut64		1015492	0					
ANR	1015690	Identifier	nres		1015492	1					
ANR	1015691	IdentifierDecl	addr		1015492	1					
ANR	1015692	IdentifierDeclType	ut64		1015492	0					
ANR	1015693	Identifier	addr		1015492	1					
ANR	1015694	IdentifierDeclStatement	ut64 from = map -> itv . addr ;	1669:2:50597:50622	1015492	7	True				
ANR	1015695	IdentifierDecl	from = map -> itv . addr		1015492	0					
ANR	1015696	IdentifierDeclType	ut64		1015492	0					
ANR	1015697	Identifier	from		1015492	1					
ANR	1015698	AssignmentExpression	from = map -> itv . addr		1015492	2		=			
ANR	1015699	Identifier	from		1015492	0					
ANR	1015700	MemberAccess	map -> itv . addr		1015492	1					
ANR	1015701	PtrMemberAccess	map -> itv		1015492	0					
ANR	1015702	Identifier	map		1015492	0					
ANR	1015703	Identifier	itv		1015492	1					
ANR	1015704	Identifier	addr		1015492	1					
ANR	1015705	IdentifierDeclStatement	ut64 to = r_itv_end ( map -> itv ) ;	1670:2:50626:50656	1015492	8	True				
ANR	1015706	IdentifierDecl	to = r_itv_end ( map -> itv )		1015492	0					
ANR	1015707	IdentifierDeclType	ut64		1015492	0					
ANR	1015708	Identifier	to		1015492	1					
ANR	1015709	AssignmentExpression	to = r_itv_end ( map -> itv )		1015492	2		=			
ANR	1015710	Identifier	to		1015492	0					
ANR	1015711	CallExpression	r_itv_end ( map -> itv )		1015492	1					
ANR	1015712	Callee	r_itv_end		1015492	0					
ANR	1015713	Identifier	r_itv_end		1015492	0					
ANR	1015714	ArgumentList	map -> itv		1015492	1					
ANR	1015715	Argument	map -> itv		1015492	0					
ANR	1015716	PtrMemberAccess	map -> itv		1015492	0					
ANR	1015717	Identifier	map		1015492	0					
ANR	1015718	Identifier	itv		1015492	1					
ANR	1015719	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	1671:2:50660:50731	1015492	9	True				
ANR	1015720	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		1015492	0					
ANR	1015721	IdentifierDeclType	unsigned int		1015492	0					
ANR	1015722	Identifier	addrsize		1015492	1					
ANR	1015723	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		1015492	2		=			
ANR	1015724	Identifier	addrsize		1015492	0					
ANR	1015725	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		1015492	1					
ANR	1015726	Callee	r_config_get_i		1015492	0					
ANR	1015727	Identifier	r_config_get_i		1015492	0					
ANR	1015728	ArgumentList	core -> config		1015492	1					
ANR	1015729	Argument	core -> config		1015492	0					
ANR	1015730	PtrMemberAccess	core -> config		1015492	0					
ANR	1015731	Identifier	core		1015492	0					
ANR	1015732	Identifier	config		1015492	1					
ANR	1015733	Argument	"""esil.addr.size"""		1015492	1					
ANR	1015734	PrimaryExpression	"""esil.addr.size"""		1015492	0					
ANR	1015735	IfStatement	if ( ! core -> anal -> esil )		1015492	10					
ANR	1015736	Condition	! core -> anal -> esil	1672:6:50739:50755	1015492	0	True				
ANR	1015737	UnaryOperationExpression	! core -> anal -> esil		1015492	0					
ANR	1015738	UnaryOperator	!		1015492	0					
ANR	1015739	PtrMemberAccess	core -> anal -> esil		1015492	1					
ANR	1015740	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015741	Identifier	core		1015492	0					
ANR	1015742	Identifier	anal		1015492	1					
ANR	1015743	Identifier	esil		1015492	1					
ANR	1015744	CompoundStatement		31:25:999:999	1015492	1					
ANR	1015745	ExpressionStatement	"core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"	1673:3:50763:50827	1015492	0	True				
ANR	1015746	AssignmentExpression	"core -> anal -> esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		1015492	0		=			
ANR	1015747	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015748	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015749	Identifier	core		1015492	0					
ANR	1015750	Identifier	anal		1015492	1					
ANR	1015751	Identifier	esil		1015492	1					
ANR	1015752	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		1015492	1					
ANR	1015753	Callee	r_anal_esil_new		1015492	0					
ANR	1015754	Identifier	r_anal_esil_new		1015492	0					
ANR	1015755	ArgumentList	stacksize		1015492	1					
ANR	1015756	Argument	stacksize		1015492	0					
ANR	1015757	Identifier	stacksize		1015492	0					
ANR	1015758	Argument	iotrap		1015492	1					
ANR	1015759	Identifier	iotrap		1015492	0					
ANR	1015760	Argument	addrsize		1015492	2					
ANR	1015761	Identifier	addrsize		1015492	0					
ANR	1015762	ExpressionStatement	core -> anal -> esil -> cb . user = core	1676:2:50857:50889	1015492	11	True				
ANR	1015763	AssignmentExpression	core -> anal -> esil -> cb . user = core		1015492	0		=			
ANR	1015764	MemberAccess	core -> anal -> esil -> cb . user		1015492	0					
ANR	1015765	PtrMemberAccess	core -> anal -> esil -> cb		1015492	0					
ANR	1015766	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015767	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015768	Identifier	core		1015492	0					
ANR	1015769	Identifier	anal		1015492	1					
ANR	1015770	Identifier	esil		1015492	1					
ANR	1015771	Identifier	cb		1015492	1					
ANR	1015772	Identifier	user		1015492	1					
ANR	1015773	Identifier	core		1015492	1					
ANR	1015774	ExpressionStatement	"r_anal_esil_set_op ( core -> anal -> esil , ""AddrInfo"" , esil_addrinfo , 1 , 1 , R_ANAL_ESIL_OP_TYPE_UNKNOWN )"	1677:2:50893:50992	1015492	12	True				
ANR	1015775	CallExpression	"r_anal_esil_set_op ( core -> anal -> esil , ""AddrInfo"" , esil_addrinfo , 1 , 1 , R_ANAL_ESIL_OP_TYPE_UNKNOWN )"		1015492	0					
ANR	1015776	Callee	r_anal_esil_set_op		1015492	0					
ANR	1015777	Identifier	r_anal_esil_set_op		1015492	0					
ANR	1015778	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015779	Argument	core -> anal -> esil		1015492	0					
ANR	1015780	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015781	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015782	Identifier	core		1015492	0					
ANR	1015783	Identifier	anal		1015492	1					
ANR	1015784	Identifier	esil		1015492	1					
ANR	1015785	Argument	"""AddrInfo"""		1015492	1					
ANR	1015786	PrimaryExpression	"""AddrInfo"""		1015492	0					
ANR	1015787	Argument	esil_addrinfo		1015492	2					
ANR	1015788	Identifier	esil_addrinfo		1015492	0					
ANR	1015789	Argument	1		1015492	3					
ANR	1015790	PrimaryExpression	1		1015492	0					
ANR	1015791	Argument	1		1015492	4					
ANR	1015792	PrimaryExpression	1		1015492	0					
ANR	1015793	Argument	R_ANAL_ESIL_OP_TYPE_UNKNOWN		1015492	5					
ANR	1015794	Identifier	R_ANAL_ESIL_OP_TYPE_UNKNOWN		1015492	0					
ANR	1015795	ExpressionStatement	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , 1 , 0 , nonull )"	1679:2:51018:51080	1015492	13	True				
ANR	1015796	CallExpression	"r_anal_esil_setup ( core -> anal -> esil , core -> anal , 1 , 0 , nonull )"		1015492	0					
ANR	1015797	Callee	r_anal_esil_setup		1015492	0					
ANR	1015798	Identifier	r_anal_esil_setup		1015492	0					
ANR	1015799	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015800	Argument	core -> anal -> esil		1015492	0					
ANR	1015801	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015802	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015803	Identifier	core		1015492	0					
ANR	1015804	Identifier	anal		1015492	1					
ANR	1015805	Identifier	esil		1015492	1					
ANR	1015806	Argument	core -> anal		1015492	1					
ANR	1015807	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015808	Identifier	core		1015492	0					
ANR	1015809	Identifier	anal		1015492	1					
ANR	1015810	Argument	1		1015492	2					
ANR	1015811	PrimaryExpression	1		1015492	0					
ANR	1015812	Argument	0		1015492	3					
ANR	1015813	PrimaryExpression	0		1015492	0					
ANR	1015814	Argument	nonull		1015492	4					
ANR	1015815	Identifier	nonull		1015492	0					
ANR	1015816	ExpressionStatement	r_anal_esil_stack_free ( core -> anal -> esil )	1680:2:51084:51125	1015492	14	True				
ANR	1015817	CallExpression	r_anal_esil_stack_free ( core -> anal -> esil )		1015492	0					
ANR	1015818	Callee	r_anal_esil_stack_free		1015492	0					
ANR	1015819	Identifier	r_anal_esil_stack_free		1015492	0					
ANR	1015820	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015821	Argument	core -> anal -> esil		1015492	0					
ANR	1015822	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015823	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015824	Identifier	core		1015492	0					
ANR	1015825	Identifier	anal		1015492	1					
ANR	1015826	Identifier	esil		1015492	1					
ANR	1015827	ExpressionStatement	core -> anal -> esil -> verbose = 0	1681:2:51129:51158	1015492	15	True				
ANR	1015828	AssignmentExpression	core -> anal -> esil -> verbose = 0		1015492	0		=			
ANR	1015829	PtrMemberAccess	core -> anal -> esil -> verbose		1015492	0					
ANR	1015830	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015831	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015832	Identifier	core		1015492	0					
ANR	1015833	Identifier	anal		1015492	1					
ANR	1015834	Identifier	esil		1015492	1					
ANR	1015835	Identifier	verbose		1015492	1					
ANR	1015836	PrimaryExpression	0		1015492	1					
ANR	1015837	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	1683:2:51163:51193	1015492	16	True				
ANR	1015838	CallExpression	"r_cons_break_push ( NULL , NULL )"		1015492	0					
ANR	1015839	Callee	r_cons_break_push		1015492	0					
ANR	1015840	Identifier	r_cons_break_push		1015492	0					
ANR	1015841	ArgumentList	NULL		1015492	1					
ANR	1015842	Argument	NULL		1015492	0					
ANR	1015843	Identifier	NULL		1015492	0					
ANR	1015844	Argument	NULL		1015492	1					
ANR	1015845	Identifier	NULL		1015492	0					
ANR	1015846	ForStatement	for ( addr = from ; addr < to ; addr ++ )		1015492	17					
ANR	1015847	ForInit	addr = from ;	1684:7:51202:51213	1015492	0	True				
ANR	1015848	AssignmentExpression	addr = from		1015492	0		=			
ANR	1015849	Identifier	addr		1015492	0					
ANR	1015850	Identifier	from		1015492	1					
ANR	1015851	Condition	addr < to	1684:20:51215:51223	1015492	1	True				
ANR	1015852	RelationalExpression	addr < to		1015492	0		<			
ANR	1015853	Identifier	addr		1015492	0					
ANR	1015854	Identifier	to		1015492	1					
ANR	1015855	PostIncDecOperationExpression	addr ++	1684:31:51226:51231	1015492	2	True				
ANR	1015856	Identifier	addr		1015492	0					
ANR	1015857	IncDec	++		1015492	1					
ANR	1015858	CompoundStatement		43:39:1475:1475	1015492	3					
ANR	1015859	IfStatement	if ( core -> search -> align )		1015492	0					
ANR	1015860	Condition	core -> search -> align	1685:7:51243:51261	1015492	0	True				
ANR	1015861	PtrMemberAccess	core -> search -> align		1015492	0					
ANR	1015862	PtrMemberAccess	core -> search		1015492	0					
ANR	1015863	Identifier	core		1015492	0					
ANR	1015864	Identifier	search		1015492	1					
ANR	1015865	Identifier	align		1015492	1					
ANR	1015866	CompoundStatement		44:28:1505:1505	1015492	1					
ANR	1015867	IfStatement	if ( ( addr % core -> search -> align ) )		1015492	0					
ANR	1015868	Condition	addr % core -> search -> align	1686:8:51274:51301	1015492	0	True				
ANR	1015869	MultiplicativeExpression	addr % core -> search -> align		1015492	0		%			
ANR	1015870	Identifier	addr		1015492	0					
ANR	1015871	PtrMemberAccess	core -> search -> align		1015492	1					
ANR	1015872	PtrMemberAccess	core -> search		1015492	0					
ANR	1015873	Identifier	core		1015492	0					
ANR	1015874	Identifier	search		1015492	1					
ANR	1015875	Identifier	align		1015492	1					
ANR	1015876	CompoundStatement		45:38:1545:1545	1015492	1					
ANR	1015877	ContinueStatement	continue ;	1687:5:51311:51319	1015492	0	True				
ANR	1015878	ExpressionStatement	"r_anal_esil_set_op ( core -> anal -> esil , ""AddressInfo"" , esil_search_address_info )"	1699:3:51624:51702	1015492	1	True				
ANR	1015879	CallExpression	"r_anal_esil_set_op ( core -> anal -> esil , ""AddressInfo"" , esil_search_address_info )"		1015492	0					
ANR	1015880	Callee	r_anal_esil_set_op		1015492	0					
ANR	1015881	Identifier	r_anal_esil_set_op		1015492	0					
ANR	1015882	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015883	Argument	core -> anal -> esil		1015492	0					
ANR	1015884	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015885	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015886	Identifier	core		1015492	0					
ANR	1015887	Identifier	anal		1015492	1					
ANR	1015888	Identifier	esil		1015492	1					
ANR	1015889	Argument	"""AddressInfo"""		1015492	1					
ANR	1015890	PrimaryExpression	"""AddressInfo"""		1015492	0					
ANR	1015891	Argument	esil_search_address_info		1015492	2					
ANR	1015892	Identifier	esil_search_address_info		1015492	0					
ANR	1015893	IfStatement	if ( r_cons_is_breaked ( ) )		1015492	2					
ANR	1015894	Condition	r_cons_is_breaked ( )	1701:7:51718:51737	1015492	0	True				
ANR	1015895	CallExpression	r_cons_is_breaked ( )		1015492	0					
ANR	1015896	Callee	r_cons_is_breaked		1015492	0					
ANR	1015897	Identifier	r_cons_is_breaked		1015492	0					
ANR	1015898	ArgumentList			1015492	1					
ANR	1015899	CompoundStatement		60:29:1981:1981	1015492	1					
ANR	1015900	Statement	eprintf	1702:4:51746:51752	1015492	0	True				
ANR	1015901	Statement	(	1702:12:51754:51754	1015492	1	True				
ANR	1015902	Statement	"""Breaked at 0x%08"""	1702:13:51755:51772	1015492	2	True				
ANR	1015903	Statement	PFMT64x	1702:31:51773:51779	1015492	3	True				
ANR	1015904	Statement	"""\\n"""	1702:39:51781:51784	1015492	4	True				
ANR	1015905	Statement	","	1702:43:51785:51785	1015492	5	True				
ANR	1015906	Statement	addr	1702:45:51787:51790	1015492	6	True				
ANR	1015907	Statement	)	1702:49:51791:51791	1015492	7	True				
ANR	1015908	ExpressionStatement		1702:50:51792:51792	1015492	8	True				
ANR	1015909	BreakStatement	break ;	1703:4:51798:51803	1015492	9	True				
ANR	1015910	ExpressionStatement	"r_anal_esil_set_pc ( core -> anal -> esil , addr )"	1705:3:51813:51856	1015492	3	True				
ANR	1015911	CallExpression	"r_anal_esil_set_pc ( core -> anal -> esil , addr )"		1015492	0					
ANR	1015912	Callee	r_anal_esil_set_pc		1015492	0					
ANR	1015913	Identifier	r_anal_esil_set_pc		1015492	0					
ANR	1015914	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015915	Argument	core -> anal -> esil		1015492	0					
ANR	1015916	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015917	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015918	Identifier	core		1015492	0					
ANR	1015919	Identifier	anal		1015492	1					
ANR	1015920	Identifier	esil		1015492	1					
ANR	1015921	Argument	addr		1015492	1					
ANR	1015922	Identifier	addr		1015492	0					
ANR	1015923	IfStatement	"if ( ! r_anal_esil_parse ( core -> anal -> esil , input + 2 ) )"		1015492	4					
ANR	1015924	Condition	"! r_anal_esil_parse ( core -> anal -> esil , input + 2 )"	1706:7:51865:51912	1015492	0	True				
ANR	1015925	UnaryOperationExpression	"! r_anal_esil_parse ( core -> anal -> esil , input + 2 )"		1015492	0					
ANR	1015926	UnaryOperator	!		1015492	0					
ANR	1015927	CallExpression	"r_anal_esil_parse ( core -> anal -> esil , input + 2 )"		1015492	1					
ANR	1015928	Callee	r_anal_esil_parse		1015492	0					
ANR	1015929	Identifier	r_anal_esil_parse		1015492	0					
ANR	1015930	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015931	Argument	core -> anal -> esil		1015492	0					
ANR	1015932	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015933	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015934	Identifier	core		1015492	0					
ANR	1015935	Identifier	anal		1015492	1					
ANR	1015936	Identifier	esil		1015492	1					
ANR	1015937	Argument	input + 2		1015492	1					
ANR	1015938	AdditiveExpression	input + 2		1015492	0		+			
ANR	1015939	Identifier	input		1015492	0					
ANR	1015940	PrimaryExpression	2		1015492	1					
ANR	1015941	CompoundStatement		65:57:2156:2156	1015492	1					
ANR	1015942	ExpressionStatement	"eprintf ( ""Cannot parse esil (%s)\\n"" , input + 2 )"	1708:4:51978:52025	1015492	0	True				
ANR	1015943	CallExpression	"eprintf ( ""Cannot parse esil (%s)\\n"" , input + 2 )"		1015492	0					
ANR	1015944	Callee	eprintf		1015492	0					
ANR	1015945	Identifier	eprintf		1015492	0					
ANR	1015946	ArgumentList	"""Cannot parse esil (%s)\\n"""		1015492	1					
ANR	1015947	Argument	"""Cannot parse esil (%s)\\n"""		1015492	0					
ANR	1015948	PrimaryExpression	"""Cannot parse esil (%s)\\n"""		1015492	0					
ANR	1015949	Argument	input + 2		1015492	1					
ANR	1015950	AdditiveExpression	input + 2		1015492	0		+			
ANR	1015951	Identifier	input		1015492	0					
ANR	1015952	PrimaryExpression	2		1015492	1					
ANR	1015953	BreakStatement	break ;	1709:4:52031:52036	1015492	1	True				
ANR	1015954	ExpressionStatement	hit_happens = false	1711:3:52046:52065	1015492	5	True				
ANR	1015955	AssignmentExpression	hit_happens = false		1015492	0		=			
ANR	1015956	Identifier	hit_happens		1015492	0					
ANR	1015957	Identifier	false		1015492	1					
ANR	1015958	ExpressionStatement	res = r_anal_esil_pop ( core -> anal -> esil )	1712:3:52070:52110	1015492	6	True				
ANR	1015959	AssignmentExpression	res = r_anal_esil_pop ( core -> anal -> esil )		1015492	0		=			
ANR	1015960	Identifier	res		1015492	0					
ANR	1015961	CallExpression	r_anal_esil_pop ( core -> anal -> esil )		1015492	1					
ANR	1015962	Callee	r_anal_esil_pop		1015492	0					
ANR	1015963	Identifier	r_anal_esil_pop		1015492	0					
ANR	1015964	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015965	Argument	core -> anal -> esil		1015492	0					
ANR	1015966	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015967	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015968	Identifier	core		1015492	0					
ANR	1015969	Identifier	anal		1015492	1					
ANR	1015970	Identifier	esil		1015492	1					
ANR	1015971	IfStatement	"if ( r_anal_esil_get_parm ( core -> anal -> esil , res , & nres ) )"		1015492	7					
ANR	1015972	Condition	"r_anal_esil_get_parm ( core -> anal -> esil , res , & nres )"	1713:7:52119:52169	1015492	0	True				
ANR	1015973	CallExpression	"r_anal_esil_get_parm ( core -> anal -> esil , res , & nres )"		1015492	0					
ANR	1015974	Callee	r_anal_esil_get_parm		1015492	0					
ANR	1015975	Identifier	r_anal_esil_get_parm		1015492	0					
ANR	1015976	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1015977	Argument	core -> anal -> esil		1015492	0					
ANR	1015978	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1015979	PtrMemberAccess	core -> anal		1015492	0					
ANR	1015980	Identifier	core		1015492	0					
ANR	1015981	Identifier	anal		1015492	1					
ANR	1015982	Identifier	esil		1015492	1					
ANR	1015983	Argument	res		1015492	1					
ANR	1015984	Identifier	res		1015492	0					
ANR	1015985	Argument	& nres		1015492	2					
ANR	1015986	UnaryOperationExpression	& nres		1015492	0					
ANR	1015987	UnaryOperator	&		1015492	0					
ANR	1015988	Identifier	nres		1015492	1					
ANR	1015989	CompoundStatement		72:60:2413:2413	1015492	1					
ANR	1015990	IfStatement	if ( cfgDebug )		1015492	0					
ANR	1015991	Condition	cfgDebug	1714:8:52182:52189	1015492	0	True				
ANR	1015992	Identifier	cfgDebug		1015492	0					
ANR	1015993	CompoundStatement		73:18:2433:2433	1015492	1					
ANR	1015994	Statement	eprintf	1715:5:52199:52205	1015492	0	True				
ANR	1015995	Statement	(	1715:13:52207:52207	1015492	1	True				
ANR	1015996	Statement	"""RES 0x%08"""	1715:14:52208:52218	1015492	2	True				
ANR	1015997	Statement	PFMT64x	1715:25:52219:52225	1015492	3	True				
ANR	1015998	Statement	""" %"""	1715:32:52226:52229	1015492	4	True				
ANR	1015999	Statement	PFMT64d	1715:36:52230:52236	1015492	5	True				
ANR	1016000	Statement	"""\\n"""	1715:43:52237:52240	1015492	6	True				
ANR	1016001	Statement	","	1715:47:52241:52241	1015492	7	True				
ANR	1016002	Statement	addr	1715:49:52243:52246	1015492	8	True				
ANR	1016003	Statement	","	1715:53:52247:52247	1015492	9	True				
ANR	1016004	Statement	nres	1715:55:52249:52252	1015492	10	True				
ANR	1016005	Statement	)	1715:59:52253:52253	1015492	11	True				
ANR	1016006	ExpressionStatement		1715:60:52254:52254	1015492	12	True				
ANR	1016007	IfStatement	if ( nres )		1015492	1					
ANR	1016008	Condition	nres	1717:8:52270:52273	1015492	0	True				
ANR	1016009	Identifier	nres		1015492	0					
ANR	1016010	CompoundStatement		76:14:2517:2517	1015492	1					
ANR	1016011	IfStatement	"if ( ! _cb_hit ( & kw , param , addr ) )"		1015492	0					
ANR	1016012	Condition	"! _cb_hit ( & kw , param , addr )"	1718:9:52287:52313	1015492	0	True				
ANR	1016013	UnaryOperationExpression	"! _cb_hit ( & kw , param , addr )"		1015492	0					
ANR	1016014	UnaryOperator	!		1015492	0					
ANR	1016015	CallExpression	"_cb_hit ( & kw , param , addr )"		1015492	1					
ANR	1016016	Callee	_cb_hit		1015492	0					
ANR	1016017	Identifier	_cb_hit		1015492	0					
ANR	1016018	ArgumentList	& kw		1015492	1					
ANR	1016019	Argument	& kw		1015492	0					
ANR	1016020	UnaryOperationExpression	& kw		1015492	0					
ANR	1016021	UnaryOperator	&		1015492	0					
ANR	1016022	Identifier	kw		1015492	1					
ANR	1016023	Argument	param		1015492	1					
ANR	1016024	Identifier	param		1015492	0					
ANR	1016025	Argument	addr		1015492	2					
ANR	1016026	Identifier	addr		1015492	0					
ANR	1016027	CompoundStatement		77:38:2557:2557	1015492	1					
ANR	1016028	ExpressionStatement	free ( res )	1719:6:52324:52334	1015492	0	True				
ANR	1016029	CallExpression	free ( res )		1015492	0					
ANR	1016030	Callee	free		1015492	0					
ANR	1016031	Identifier	free		1015492	0					
ANR	1016032	ArgumentList	res		1015492	1					
ANR	1016033	Argument	res		1015492	0					
ANR	1016034	Identifier	res		1015492	0					
ANR	1016035	BreakStatement	break ;	1720:6:52342:52347	1015492	1	True				
ANR	1016036	ExpressionStatement	kw . type = 0	1723:5:52411:52422	1015492	1	True				
ANR	1016037	AssignmentExpression	kw . type = 0		1015492	0		=			
ANR	1016038	MemberAccess	kw . type		1015492	0					
ANR	1016039	Identifier	kw		1015492	0					
ANR	1016040	Identifier	type		1015492	1					
ANR	1016041	PrimaryExpression	0		1015492	1					
ANR	1016042	ExpressionStatement	kw . kwidx = search -> n_kws	1724:5:52452:52476	1015492	2	True				
ANR	1016043	AssignmentExpression	kw . kwidx = search -> n_kws		1015492	0		=			
ANR	1016044	MemberAccess	kw . kwidx		1015492	0					
ANR	1016045	Identifier	kw		1015492	0					
ANR	1016046	Identifier	kwidx		1015492	1					
ANR	1016047	PtrMemberAccess	search -> n_kws		1015492	1					
ANR	1016048	Identifier	search		1015492	0					
ANR	1016049	Identifier	n_kws		1015492	1					
ANR	1016050	ExpressionStatement	kw . count ++	1725:5:52483:52493	1015492	3	True				
ANR	1016051	PostIncDecOperationExpression	kw . count ++		1015492	0					
ANR	1016052	MemberAccess	kw . count		1015492	0					
ANR	1016053	Identifier	kw		1015492	0					
ANR	1016054	Identifier	count		1015492	1					
ANR	1016055	IncDec	++		1015492	1					
ANR	1016056	ExpressionStatement	"eprintf ( ""hits: %d\\r"" , kw . count )"	1726:5:52500:52532	1015492	4	True				
ANR	1016057	CallExpression	"eprintf ( ""hits: %d\\r"" , kw . count )"		1015492	0					
ANR	1016058	Callee	eprintf		1015492	0					
ANR	1016059	Identifier	eprintf		1015492	0					
ANR	1016060	ArgumentList	"""hits: %d\\r"""		1015492	1					
ANR	1016061	Argument	"""hits: %d\\r"""		1015492	0					
ANR	1016062	PrimaryExpression	"""hits: %d\\r"""		1015492	0					
ANR	1016063	Argument	kw . count		1015492	1					
ANR	1016064	MemberAccess	kw . count		1015492	0					
ANR	1016065	Identifier	kw		1015492	0					
ANR	1016066	Identifier	count		1015492	1					
ANR	1016067	ExpressionStatement	kw . keyword_length = 0	1727:5:52539:52560	1015492	5	True				
ANR	1016068	AssignmentExpression	kw . keyword_length = 0		1015492	0		=			
ANR	1016069	MemberAccess	kw . keyword_length		1015492	0					
ANR	1016070	Identifier	kw		1015492	0					
ANR	1016071	Identifier	keyword_length		1015492	1					
ANR	1016072	PrimaryExpression	0		1015492	1					
ANR	1016073	ExpressionStatement	hit_happens = true	1728:5:52567:52585	1015492	6	True				
ANR	1016074	AssignmentExpression	hit_happens = true		1015492	0		=			
ANR	1016075	Identifier	hit_happens		1015492	0					
ANR	1016076	Identifier	true		1015492	1					
ANR	1016077	ElseStatement	else		1015492	0					
ANR	1016078	CompoundStatement		89:10:2844:2844	1015492	0					
ANR	1016079	ExpressionStatement	"eprintf ( ""Cannot parse esil (%s)\\n"" , input + 2 )"	1731:4:52609:52656	1015492	0	True				
ANR	1016080	CallExpression	"eprintf ( ""Cannot parse esil (%s)\\n"" , input + 2 )"		1015492	0					
ANR	1016081	Callee	eprintf		1015492	0					
ANR	1016082	Identifier	eprintf		1015492	0					
ANR	1016083	ArgumentList	"""Cannot parse esil (%s)\\n"""		1015492	1					
ANR	1016084	Argument	"""Cannot parse esil (%s)\\n"""		1015492	0					
ANR	1016085	PrimaryExpression	"""Cannot parse esil (%s)\\n"""		1015492	0					
ANR	1016086	Argument	input + 2		1015492	1					
ANR	1016087	AdditiveExpression	input + 2		1015492	0		+			
ANR	1016088	Identifier	input		1015492	0					
ANR	1016089	PrimaryExpression	2		1015492	1					
ANR	1016090	ExpressionStatement	r_anal_esil_stack_free ( core -> anal -> esil )	1732:4:52662:52703	1015492	1	True				
ANR	1016091	CallExpression	r_anal_esil_stack_free ( core -> anal -> esil )		1015492	0					
ANR	1016092	Callee	r_anal_esil_stack_free		1015492	0					
ANR	1016093	Identifier	r_anal_esil_stack_free		1015492	0					
ANR	1016094	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1016095	Argument	core -> anal -> esil		1015492	0					
ANR	1016096	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1016097	PtrMemberAccess	core -> anal		1015492	0					
ANR	1016098	Identifier	core		1015492	0					
ANR	1016099	Identifier	anal		1015492	1					
ANR	1016100	Identifier	esil		1015492	1					
ANR	1016101	ExpressionStatement	free ( res )	1733:4:52709:52719	1015492	2	True				
ANR	1016102	CallExpression	free ( res )		1015492	0					
ANR	1016103	Callee	free		1015492	0					
ANR	1016104	Identifier	free		1015492	0					
ANR	1016105	ArgumentList	res		1015492	1					
ANR	1016106	Argument	res		1015492	0					
ANR	1016107	Identifier	res		1015492	0					
ANR	1016108	BreakStatement	break ;	1734:4:52725:52730	1015492	3	True				
ANR	1016109	ExpressionStatement	r_anal_esil_stack_free ( core -> anal -> esil )	1736:3:52740:52781	1015492	8	True				
ANR	1016110	CallExpression	r_anal_esil_stack_free ( core -> anal -> esil )		1015492	0					
ANR	1016111	Callee	r_anal_esil_stack_free		1015492	0					
ANR	1016112	Identifier	r_anal_esil_stack_free		1015492	0					
ANR	1016113	ArgumentList	core -> anal -> esil		1015492	1					
ANR	1016114	Argument	core -> anal -> esil		1015492	0					
ANR	1016115	PtrMemberAccess	core -> anal -> esil		1015492	0					
ANR	1016116	PtrMemberAccess	core -> anal		1015492	0					
ANR	1016117	Identifier	core		1015492	0					
ANR	1016118	Identifier	anal		1015492	1					
ANR	1016119	Identifier	esil		1015492	1					
ANR	1016120	ExpressionStatement	free ( res )	1737:3:52786:52796	1015492	9	True				
ANR	1016121	CallExpression	free ( res )		1015492	0					
ANR	1016122	Callee	free		1015492	0					
ANR	1016123	Identifier	free		1015492	0					
ANR	1016124	ArgumentList	res		1015492	1					
ANR	1016125	Argument	res		1015492	0					
ANR	1016126	Identifier	res		1015492	0					
ANR	1016127	IfStatement	if ( hit_happens )		1015492	10					
ANR	1016128	Condition	hit_happens	1739:7:52806:52816	1015492	0	True				
ANR	1016129	Identifier	hit_happens		1015492	0					
ANR	1016130	CompoundStatement		98:20:3060:3060	1015492	1					
ANR	1016131	ExpressionStatement	hit_combo ++	1740:4:52825:52836	1015492	0	True				
ANR	1016132	PostIncDecOperationExpression	hit_combo ++		1015492	0					
ANR	1016133	Identifier	hit_combo		1015492	0					
ANR	1016134	IncDec	++		1015492	1					
ANR	1016135	IfStatement	if ( hit_combo > hit_combo_limit )		1015492	1					
ANR	1016136	Condition	hit_combo > hit_combo_limit	1741:8:52846:52872	1015492	0	True				
ANR	1016137	RelationalExpression	hit_combo > hit_combo_limit		1015492	0		>			
ANR	1016138	Identifier	hit_combo		1015492	0					
ANR	1016139	Identifier	hit_combo_limit		1015492	1					
ANR	1016140	CompoundStatement		100:37:3116:3116	1015492	1					
ANR	1016141	ExpressionStatement	"eprintf ( ""Hit search.esilcombo reached (%d). Stopping search. Use f-\\n"" , hit_combo_limit )"	1742:5:52882:52971	1015492	0	True				
ANR	1016142	CallExpression	"eprintf ( ""Hit search.esilcombo reached (%d). Stopping search. Use f-\\n"" , hit_combo_limit )"		1015492	0					
ANR	1016143	Callee	eprintf		1015492	0					
ANR	1016144	Identifier	eprintf		1015492	0					
ANR	1016145	ArgumentList	"""Hit search.esilcombo reached (%d). Stopping search. Use f-\\n"""		1015492	1					
ANR	1016146	Argument	"""Hit search.esilcombo reached (%d). Stopping search. Use f-\\n"""		1015492	0					
ANR	1016147	PrimaryExpression	"""Hit search.esilcombo reached (%d). Stopping search. Use f-\\n"""		1015492	0					
ANR	1016148	Argument	hit_combo_limit		1015492	1					
ANR	1016149	Identifier	hit_combo_limit		1015492	0					
ANR	1016150	BreakStatement	break ;	1743:5:52978:52983	1015492	1	True				
ANR	1016151	ElseStatement	else		1015492	0					
ANR	1016152	CompoundStatement		104:10:3242:3242	1015492	0					
ANR	1016153	ExpressionStatement	hit_combo = 0	1746:4:53007:53020	1015492	0	True				
ANR	1016154	AssignmentExpression	hit_combo = 0		1015492	0		=			
ANR	1016155	Identifier	hit_combo		1015492	0					
ANR	1016156	PrimaryExpression	0		1015492	1					
ANR	1016157	ExpressionStatement	"r_config_set_i ( core -> config , ""search.kwidx"" , search -> n_kws )"	1749:2:53033:53093	1015492	18	True				
ANR	1016158	CallExpression	"r_config_set_i ( core -> config , ""search.kwidx"" , search -> n_kws )"		1015492	0					
ANR	1016159	Callee	r_config_set_i		1015492	0					
ANR	1016160	Identifier	r_config_set_i		1015492	0					
ANR	1016161	ArgumentList	core -> config		1015492	1					
ANR	1016162	Argument	core -> config		1015492	0					
ANR	1016163	PtrMemberAccess	core -> config		1015492	0					
ANR	1016164	Identifier	core		1015492	0					
ANR	1016165	Identifier	config		1015492	1					
ANR	1016166	Argument	"""search.kwidx"""		1015492	1					
ANR	1016167	PrimaryExpression	"""search.kwidx"""		1015492	0					
ANR	1016168	Argument	search -> n_kws		1015492	2					
ANR	1016169	PtrMemberAccess	search -> n_kws		1015492	0					
ANR	1016170	Identifier	search		1015492	0					
ANR	1016171	Identifier	n_kws		1015492	1					
ANR	1016172	ExpressionStatement	r_cons_break_pop ( )	1750:2:53112:53131	1015492	19	True				
ANR	1016173	CallExpression	r_cons_break_pop ( )		1015492	0					
ANR	1016174	Callee	r_cons_break_pop		1015492	0					
ANR	1016175	Identifier	r_cons_break_pop		1015492	0					
ANR	1016176	ArgumentList			1015492	1					
ANR	1016177	ExpressionStatement	r_cons_clear_line ( 1 )	1752:1:53137:53158	1015492	19	True				
ANR	1016178	CallExpression	r_cons_clear_line ( 1 )		1015492	0					
ANR	1016179	Callee	r_cons_clear_line		1015492	0					
ANR	1016180	Identifier	r_cons_clear_line		1015492	0					
ANR	1016181	ArgumentList	1		1015492	1					
ANR	1016182	Argument	1		1015492	0					
ANR	1016183	PrimaryExpression	1		1015492	0					
ANR	1016184	ReturnType	static void		1015492	1					
ANR	1016185	Identifier	do_esil_search		1015492	2					
ANR	1016186	ParameterList	"RCore * core , struct search_parameters * param , const char * input"		1015492	3					
ANR	1016187	Parameter	RCore * core	1642:27:49693:49703	1015492	0	True				
ANR	1016188	ParameterType	RCore *		1015492	0					
ANR	1016189	Identifier	core		1015492	1					
ANR	1016190	Parameter	struct search_parameters * param	1642:40:49706:49736	1015492	1	True				
ANR	1016191	ParameterType	struct search_parameters *		1015492	0					
ANR	1016192	Identifier	param		1015492	1					
ANR	1016193	Parameter	const char * input	1642:73:49739:49755	1015492	2	True				
ANR	1016194	ParameterType	const char *		1015492	0					
ANR	1016195	Identifier	input		1015492	1					
ANR	1016196	CFGEntryNode	ENTRY		1015492		True				
ANR	1016197	CFGExitNode	EXIT		1015492		True				
ANR	1016198	Symbol	stacksize		1015492						
ANR	1016199	Symbol	* map		1015492						
ANR	1016200	Symbol	hit_combo_limit		1015492						
ANR	1016201	Symbol	* input		1015492						
ANR	1016202	Symbol	r_anal_esil_pop		1015492						
ANR	1016203	Symbol	addrsize		1015492						
ANR	1016204	Symbol	core -> search -> align		1015492						
ANR	1016205	Symbol	* core -> anal -> esil		1015492						
ANR	1016206	Symbol	kw . kwidx		1015492						
ANR	1016207	Symbol	* * core -> anal		1015492						
ANR	1016208	Symbol	from		1015492						
ANR	1016209	Symbol	core -> anal -> esil		1015492						
ANR	1016210	Symbol	res		1015492						
ANR	1016211	Symbol	kw . count		1015492						
ANR	1016212	Symbol	NULL		1015492						
ANR	1016213	Symbol	_cb_hit		1015492						
ANR	1016214	Symbol	kw . type		1015492						
ANR	1016215	Symbol	iter		1015492						
ANR	1016216	Symbol	* core -> search		1015492						
ANR	1016217	Symbol	r_anal_esil_parse		1015492						
ANR	1016218	Symbol	search -> n_kws		1015492						
ANR	1016219	Symbol	iotrap		1015492						
ANR	1016220	Symbol	core		1015492						
ANR	1016221	Symbol	input		1015492						
ANR	1016222	Symbol	* * * core		1015492						
ANR	1016223	Symbol	core -> anal -> esil -> cb . user		1015492						
ANR	1016224	Symbol	kw . keyword_length		1015492						
ANR	1016225	Symbol	r_config_get_i		1015492						
ANR	1016226	Symbol	& kw		1015492						
ANR	1016227	Symbol	true		1015492						
ANR	1016228	Symbol	nres		1015492						
ANR	1016229	Symbol	core -> anal -> esil -> cb		1015492						
ANR	1016230	Symbol	map -> itv		1015492						
ANR	1016231	Symbol	esil_addrinfo		1015492						
ANR	1016232	Symbol	* core		1015492						
ANR	1016233	Symbol	R_EMPTY		1015492						
ANR	1016234	Symbol	R_ANAL_ESIL_OP_TYPE_UNKNOWN		1015492						
ANR	1016235	Symbol	core -> anal		1015492						
ANR	1016236	Symbol	nonull		1015492						
ANR	1016237	Symbol	cfgDebug		1015492						
ANR	1016238	Symbol	search		1015492						
ANR	1016239	Symbol	r_cons_is_breaked		1015492						
ANR	1016240	Symbol	param		1015492						
ANR	1016241	Symbol	r_anal_esil_get_parm		1015492						
ANR	1016242	Symbol	map -> itv . addr		1015492						
ANR	1016243	Symbol	hit_combo		1015492						
ANR	1016244	Symbol	addr		1015492						
ANR	1016245	Symbol	core -> search		1015492						
ANR	1016246	Symbol	map		1015492						
ANR	1016247	Symbol	* * core		1015492						
ANR	1016248	Symbol	core -> config		1015492						
ANR	1016249	Symbol	& nres		1015492						
ANR	1016250	Symbol	hit_happens		1015492						
ANR	1016251	Symbol	false		1015492						
ANR	1016252	Symbol	kw		1015492						
ANR	1016253	Symbol	esil_search_address_info		1015492						
ANR	1016254	Symbol	* search		1015492						
ANR	1016255	Symbol	r_itv_end		1015492						
ANR	1016256	Symbol	* core -> anal		1015492						
ANR	1016257	Symbol	core -> anal -> esil -> verbose		1015492						
ANR	1016258	Symbol	r_anal_esil_new		1015492						
ANR	1016259	Symbol	to		1015492						
ANR	1016260	Function	emulateSyscallPrelude	1760:0:53312:54746							
ANR	1016261	FunctionDef	"emulateSyscallPrelude (RCore * core , ut64 at , ut64 curpc)"		1016260	0					
ANR	1016262	CompoundStatement		1760:67:53379:54746	1016260	0					
ANR	1016263	IdentifierDeclStatement	"int i , inslen , bsize = R_MIN ( 64 , core -> blocksize ) ;"	1761:1:53382:53432	1016260	0	True				
ANR	1016264	IdentifierDecl	i		1016260	0					
ANR	1016265	IdentifierDeclType	int		1016260	0					
ANR	1016266	Identifier	i		1016260	1					
ANR	1016267	IdentifierDecl	inslen		1016260	1					
ANR	1016268	IdentifierDeclType	int		1016260	0					
ANR	1016269	Identifier	inslen		1016260	1					
ANR	1016270	IdentifierDecl	"bsize = R_MIN ( 64 , core -> blocksize )"		1016260	2					
ANR	1016271	IdentifierDeclType	int		1016260	0					
ANR	1016272	Identifier	bsize		1016260	1					
ANR	1016273	AssignmentExpression	"bsize = R_MIN ( 64 , core -> blocksize )"		1016260	2		=			
ANR	1016274	Identifier	bsize		1016260	0					
ANR	1016275	CallExpression	"R_MIN ( 64 , core -> blocksize )"		1016260	1					
ANR	1016276	Callee	R_MIN		1016260	0					
ANR	1016277	Identifier	R_MIN		1016260	0					
ANR	1016278	ArgumentList	64		1016260	1					
ANR	1016279	Argument	64		1016260	0					
ANR	1016280	PrimaryExpression	64		1016260	0					
ANR	1016281	Argument	core -> blocksize		1016260	1					
ANR	1016282	PtrMemberAccess	core -> blocksize		1016260	0					
ANR	1016283	Identifier	core		1016260	0					
ANR	1016284	Identifier	blocksize		1016260	1					
ANR	1016285	IdentifierDeclStatement	ut8 * arr ;	1762:1:53435:53443	1016260	1	True				
ANR	1016286	IdentifierDecl	* arr		1016260	0					
ANR	1016287	IdentifierDeclType	ut8 *		1016260	0					
ANR	1016288	Identifier	arr		1016260	1					
ANR	1016289	IdentifierDeclStatement	RAnalOp aop ;	1763:1:53446:53457	1016260	2	True				
ANR	1016290	IdentifierDecl	aop		1016260	0					
ANR	1016291	IdentifierDeclType	RAnalOp		1016260	0					
ANR	1016292	Identifier	aop		1016260	1					
ANR	1016293	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	1764:1:53460:53540	1016260	3	True				
ANR	1016294	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1016260	0					
ANR	1016295	IdentifierDeclType	const int		1016260	0					
ANR	1016296	Identifier	mininstrsz		1016260	1					
ANR	1016297	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1016260	2		=			
ANR	1016298	Identifier	mininstrsz		1016260	0					
ANR	1016299	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1016260	1					
ANR	1016300	Callee	r_anal_archinfo		1016260	0					
ANR	1016301	Identifier	r_anal_archinfo		1016260	0					
ANR	1016302	ArgumentList	core -> anal		1016260	1					
ANR	1016303	Argument	core -> anal		1016260	0					
ANR	1016304	PtrMemberAccess	core -> anal		1016260	0					
ANR	1016305	Identifier	core		1016260	0					
ANR	1016306	Identifier	anal		1016260	1					
ANR	1016307	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		1016260	1					
ANR	1016308	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		1016260	0					
ANR	1016309	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	1765:1:53543:53586	1016260	4	True				
ANR	1016310	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		1016260	0					
ANR	1016311	IdentifierDeclType	const int		1016260	0					
ANR	1016312	Identifier	minopcode		1016260	1					
ANR	1016313	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		1016260	2		=			
ANR	1016314	Identifier	minopcode		1016260	0					
ANR	1016315	CallExpression	"R_MAX ( 1 , mininstrsz )"		1016260	1					
ANR	1016316	Callee	R_MAX		1016260	0					
ANR	1016317	Identifier	R_MAX		1016260	0					
ANR	1016318	ArgumentList	1		1016260	1					
ANR	1016319	Argument	1		1016260	0					
ANR	1016320	PrimaryExpression	1		1016260	0					
ANR	1016321	Argument	mininstrsz		1016260	1					
ANR	1016322	Identifier	mininstrsz		1016260	0					
ANR	1016323	IdentifierDeclStatement	"const char * a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN ) ;"	1766:1:53589:53653	1016260	5	True				
ANR	1016324	IdentifierDecl	"* a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		1016260	0					
ANR	1016325	IdentifierDeclType	const char *		1016260	0					
ANR	1016326	Identifier	a0		1016260	1					
ANR	1016327	AssignmentExpression	"* a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		1016260	2		=			
ANR	1016328	Identifier	a0		1016260	0					
ANR	1016329	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		1016260	1					
ANR	1016330	Callee	r_reg_get_name		1016260	0					
ANR	1016331	Identifier	r_reg_get_name		1016260	0					
ANR	1016332	ArgumentList	core -> anal -> reg		1016260	1					
ANR	1016333	Argument	core -> anal -> reg		1016260	0					
ANR	1016334	PtrMemberAccess	core -> anal -> reg		1016260	0					
ANR	1016335	PtrMemberAccess	core -> anal		1016260	0					
ANR	1016336	Identifier	core		1016260	0					
ANR	1016337	Identifier	anal		1016260	1					
ANR	1016338	Identifier	reg		1016260	1					
ANR	1016339	Argument	R_REG_NAME_SN		1016260	1					
ANR	1016340	Identifier	R_REG_NAME_SN		1016260	0					
ANR	1016341	IdentifierDeclStatement	"const char * pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC ) ;"	1767:1:53656:53719	1016260	6	True				
ANR	1016342	IdentifierDecl	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		1016260	0					
ANR	1016343	IdentifierDeclType	const char *		1016260	0					
ANR	1016344	Identifier	pc		1016260	1					
ANR	1016345	AssignmentExpression	"* pc = r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		1016260	2		=			
ANR	1016346	Identifier	pc		1016260	0					
ANR	1016347	CallExpression	"r_reg_get_name ( core -> dbg -> reg , R_REG_NAME_PC )"		1016260	1					
ANR	1016348	Callee	r_reg_get_name		1016260	0					
ANR	1016349	Identifier	r_reg_get_name		1016260	0					
ANR	1016350	ArgumentList	core -> dbg -> reg		1016260	1					
ANR	1016351	Argument	core -> dbg -> reg		1016260	0					
ANR	1016352	PtrMemberAccess	core -> dbg -> reg		1016260	0					
ANR	1016353	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016354	Identifier	core		1016260	0					
ANR	1016355	Identifier	dbg		1016260	1					
ANR	1016356	Identifier	reg		1016260	1					
ANR	1016357	Argument	R_REG_NAME_PC		1016260	1					
ANR	1016358	Identifier	R_REG_NAME_PC		1016260	0					
ANR	1016359	IdentifierDeclStatement	"RRegItem * r = r_reg_get ( core -> dbg -> reg , pc , - 1 ) ;"	1768:1:53722:53770	1016260	7	True				
ANR	1016360	IdentifierDecl	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		1016260	0					
ANR	1016361	IdentifierDeclType	RRegItem *		1016260	0					
ANR	1016362	Identifier	r		1016260	1					
ANR	1016363	AssignmentExpression	"* r = r_reg_get ( core -> dbg -> reg , pc , - 1 )"		1016260	2		=			
ANR	1016364	Identifier	r		1016260	0					
ANR	1016365	CallExpression	"r_reg_get ( core -> dbg -> reg , pc , - 1 )"		1016260	1					
ANR	1016366	Callee	r_reg_get		1016260	0					
ANR	1016367	Identifier	r_reg_get		1016260	0					
ANR	1016368	ArgumentList	core -> dbg -> reg		1016260	1					
ANR	1016369	Argument	core -> dbg -> reg		1016260	0					
ANR	1016370	PtrMemberAccess	core -> dbg -> reg		1016260	0					
ANR	1016371	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016372	Identifier	core		1016260	0					
ANR	1016373	Identifier	dbg		1016260	1					
ANR	1016374	Identifier	reg		1016260	1					
ANR	1016375	Argument	pc		1016260	1					
ANR	1016376	Identifier	pc		1016260	0					
ANR	1016377	Argument	- 1		1016260	2					
ANR	1016378	UnaryOperationExpression	- 1		1016260	0					
ANR	1016379	UnaryOperator	-		1016260	0					
ANR	1016380	PrimaryExpression	1		1016260	1					
ANR	1016381	IdentifierDeclStatement	"RRegItem * reg_a0 = r_reg_get ( core -> dbg -> reg , a0 , - 1 ) ;"	1769:1:53773:53826	1016260	8	True				
ANR	1016382	IdentifierDecl	"* reg_a0 = r_reg_get ( core -> dbg -> reg , a0 , - 1 )"		1016260	0					
ANR	1016383	IdentifierDeclType	RRegItem *		1016260	0					
ANR	1016384	Identifier	reg_a0		1016260	1					
ANR	1016385	AssignmentExpression	"* reg_a0 = r_reg_get ( core -> dbg -> reg , a0 , - 1 )"		1016260	2		=			
ANR	1016386	Identifier	reg_a0		1016260	0					
ANR	1016387	CallExpression	"r_reg_get ( core -> dbg -> reg , a0 , - 1 )"		1016260	1					
ANR	1016388	Callee	r_reg_get		1016260	0					
ANR	1016389	Identifier	r_reg_get		1016260	0					
ANR	1016390	ArgumentList	core -> dbg -> reg		1016260	1					
ANR	1016391	Argument	core -> dbg -> reg		1016260	0					
ANR	1016392	PtrMemberAccess	core -> dbg -> reg		1016260	0					
ANR	1016393	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016394	Identifier	core		1016260	0					
ANR	1016395	Identifier	dbg		1016260	1					
ANR	1016396	Identifier	reg		1016260	1					
ANR	1016397	Argument	a0		1016260	1					
ANR	1016398	Identifier	a0		1016260	0					
ANR	1016399	Argument	- 1		1016260	2					
ANR	1016400	UnaryOperationExpression	- 1		1016260	0					
ANR	1016401	UnaryOperator	-		1016260	0					
ANR	1016402	PrimaryExpression	1		1016260	1					
ANR	1016403	ExpressionStatement	arr = malloc ( bsize )	1771:1:53831:53851	1016260	9	True				
ANR	1016404	AssignmentExpression	arr = malloc ( bsize )		1016260	0		=			
ANR	1016405	Identifier	arr		1016260	0					
ANR	1016406	CallExpression	malloc ( bsize )		1016260	1					
ANR	1016407	Callee	malloc		1016260	0					
ANR	1016408	Identifier	malloc		1016260	0					
ANR	1016409	ArgumentList	bsize		1016260	1					
ANR	1016410	Argument	bsize		1016260	0					
ANR	1016411	Identifier	bsize		1016260	0					
ANR	1016412	IfStatement	if ( ! arr )		1016260	10					
ANR	1016413	Condition	! arr	1772:5:53858:53861	1016260	0	True				
ANR	1016414	UnaryOperationExpression	! arr		1016260	0					
ANR	1016415	UnaryOperator	!		1016260	0					
ANR	1016416	Identifier	arr		1016260	1					
ANR	1016417	CompoundStatement		13:11:484:484	1016260	1					
ANR	1016418	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"	1773:2:53868:53915	1016260	0	True				
ANR	1016419	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"		1016260	0					
ANR	1016420	Callee	eprintf		1016260	0					
ANR	1016421	Identifier	eprintf		1016260	0					
ANR	1016422	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		1016260	1					
ANR	1016423	Argument	"""Cannot allocate %d byte(s)\\n"""		1016260	0					
ANR	1016424	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		1016260	0					
ANR	1016425	Argument	bsize		1016260	1					
ANR	1016426	Identifier	bsize		1016260	0					
ANR	1016427	ExpressionStatement	free ( arr )	1774:2:53919:53929	1016260	1	True				
ANR	1016428	CallExpression	free ( arr )		1016260	0					
ANR	1016429	Callee	free		1016260	0					
ANR	1016430	Identifier	free		1016260	0					
ANR	1016431	ArgumentList	arr		1016260	1					
ANR	1016432	Argument	arr		1016260	0					
ANR	1016433	Identifier	arr		1016260	0					
ANR	1016434	ReturnStatement	return - 1 ;	1775:2:53933:53942	1016260	2	True				
ANR	1016435	UnaryOperationExpression	- 1		1016260	0					
ANR	1016436	UnaryOperator	-		1016260	0					
ANR	1016437	PrimaryExpression	1		1016260	1					
ANR	1016438	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , curpc )"	1777:1:53948:53990	1016260	11	True				
ANR	1016439	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , curpc )"		1016260	0					
ANR	1016440	Callee	r_reg_set_value		1016260	0					
ANR	1016441	Identifier	r_reg_set_value		1016260	0					
ANR	1016442	ArgumentList	core -> dbg -> reg		1016260	1					
ANR	1016443	Argument	core -> dbg -> reg		1016260	0					
ANR	1016444	PtrMemberAccess	core -> dbg -> reg		1016260	0					
ANR	1016445	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016446	Identifier	core		1016260	0					
ANR	1016447	Identifier	dbg		1016260	1					
ANR	1016448	Identifier	reg		1016260	1					
ANR	1016449	Argument	r		1016260	1					
ANR	1016450	Identifier	r		1016260	0					
ANR	1016451	Argument	curpc		1016260	2					
ANR	1016452	Identifier	curpc		1016260	0					
ANR	1016453	ForStatement	"for ( i = 0 ; curpc < at ; curpc ++ , i ++ )"		1016260	12					
ANR	1016454	ForInit	i = 0 ;	1778:6:53998:54003	1016260	0	True				
ANR	1016455	AssignmentExpression	i = 0		1016260	0		=			
ANR	1016456	Identifier	i		1016260	0					
ANR	1016457	PrimaryExpression	0		1016260	1					
ANR	1016458	Condition	curpc < at	1778:13:54005:54014	1016260	1	True				
ANR	1016459	RelationalExpression	curpc < at		1016260	0		<			
ANR	1016460	Identifier	curpc		1016260	0					
ANR	1016461	Identifier	at		1016260	1					
ANR	1016462	Expression	"curpc ++ , i ++"	1778:25:54017:54028	1016260	2	True				
ANR	1016463	PostIncDecOperationExpression	curpc ++		1016260	0					
ANR	1016464	Identifier	curpc		1016260	0					
ANR	1016465	IncDec	++		1016260	1					
ANR	1016466	PostIncDecOperationExpression	i ++		1016260	1					
ANR	1016467	Identifier	i		1016260	0					
ANR	1016468	IncDec	++		1016260	1					
ANR	1016469	CompoundStatement		19:39:651:651	1016260	3					
ANR	1016470	IfStatement	if ( i >= ( bsize - 32 ) )		1016260	0					
ANR	1016471	Condition	i >= ( bsize - 32 )	1779:6:54039:54055	1016260	0	True				
ANR	1016472	RelationalExpression	i >= ( bsize - 32 )		1016260	0		>=			
ANR	1016473	Identifier	i		1016260	0					
ANR	1016474	AdditiveExpression	bsize - 32		1016260	1		-			
ANR	1016475	Identifier	bsize		1016260	0					
ANR	1016476	PrimaryExpression	32		1016260	1					
ANR	1016477	CompoundStatement		20:25:678:678	1016260	1					
ANR	1016478	ExpressionStatement	i = 0	1780:3:54063:54068	1016260	0	True				
ANR	1016479	AssignmentExpression	i = 0		1016260	0		=			
ANR	1016480	Identifier	i		1016260	0					
ANR	1016481	PrimaryExpression	0		1016260	1					
ANR	1016482	IfStatement	if ( ! i )		1016260	1					
ANR	1016483	Condition	! i	1782:6:54080:54081	1016260	0	True				
ANR	1016484	UnaryOperationExpression	! i		1016260	0					
ANR	1016485	UnaryOperator	!		1016260	0					
ANR	1016486	Identifier	i		1016260	1					
ANR	1016487	CompoundStatement		23:10:704:704	1016260	1					
ANR	1016488	ExpressionStatement	"r_io_read_at ( core -> io , curpc , arr , bsize )"	1783:3:54089:54131	1016260	0	True				
ANR	1016489	CallExpression	"r_io_read_at ( core -> io , curpc , arr , bsize )"		1016260	0					
ANR	1016490	Callee	r_io_read_at		1016260	0					
ANR	1016491	Identifier	r_io_read_at		1016260	0					
ANR	1016492	ArgumentList	core -> io		1016260	1					
ANR	1016493	Argument	core -> io		1016260	0					
ANR	1016494	PtrMemberAccess	core -> io		1016260	0					
ANR	1016495	Identifier	core		1016260	0					
ANR	1016496	Identifier	io		1016260	1					
ANR	1016497	Argument	curpc		1016260	1					
ANR	1016498	Identifier	curpc		1016260	0					
ANR	1016499	Argument	arr		1016260	2					
ANR	1016500	Identifier	arr		1016260	0					
ANR	1016501	Argument	bsize		1016260	3					
ANR	1016502	Identifier	bsize		1016260	0					
ANR	1016503	ExpressionStatement	"inslen = r_anal_op ( core -> anal , & aop , curpc , arr + i , bsize - i , R_ANAL_OP_MASK_BASIC )"	1785:2:54139:54225	1016260	2	True				
ANR	1016504	AssignmentExpression	"inslen = r_anal_op ( core -> anal , & aop , curpc , arr + i , bsize - i , R_ANAL_OP_MASK_BASIC )"		1016260	0		=			
ANR	1016505	Identifier	inslen		1016260	0					
ANR	1016506	CallExpression	"r_anal_op ( core -> anal , & aop , curpc , arr + i , bsize - i , R_ANAL_OP_MASK_BASIC )"		1016260	1					
ANR	1016507	Callee	r_anal_op		1016260	0					
ANR	1016508	Identifier	r_anal_op		1016260	0					
ANR	1016509	ArgumentList	core -> anal		1016260	1					
ANR	1016510	Argument	core -> anal		1016260	0					
ANR	1016511	PtrMemberAccess	core -> anal		1016260	0					
ANR	1016512	Identifier	core		1016260	0					
ANR	1016513	Identifier	anal		1016260	1					
ANR	1016514	Argument	& aop		1016260	1					
ANR	1016515	UnaryOperationExpression	& aop		1016260	0					
ANR	1016516	UnaryOperator	&		1016260	0					
ANR	1016517	Identifier	aop		1016260	1					
ANR	1016518	Argument	curpc		1016260	2					
ANR	1016519	Identifier	curpc		1016260	0					
ANR	1016520	Argument	arr + i		1016260	3					
ANR	1016521	AdditiveExpression	arr + i		1016260	0		+			
ANR	1016522	Identifier	arr		1016260	0					
ANR	1016523	Identifier	i		1016260	1					
ANR	1016524	Argument	bsize - i		1016260	4					
ANR	1016525	AdditiveExpression	bsize - i		1016260	0		-			
ANR	1016526	Identifier	bsize		1016260	0					
ANR	1016527	Identifier	i		1016260	1					
ANR	1016528	Argument	R_ANAL_OP_MASK_BASIC		1016260	5					
ANR	1016529	Identifier	R_ANAL_OP_MASK_BASIC		1016260	0					
ANR	1016530	IfStatement	if ( inslen )		1016260	3					
ANR	1016531	Condition	inslen	1786:6:54233:54238	1016260	0	True				
ANR	1016532	Identifier	inslen		1016260	0					
ANR	1016533	CompoundStatement		28:4:867:941	1016260	1					
ANR	1016534	IdentifierDeclStatement	int incr = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : inslen - 1 ;	1787:4:54247:54321	1016260	0	True				
ANR	1016535	IdentifierDecl	incr = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : inslen - 1		1016260	0					
ANR	1016536	IdentifierDeclType	int		1016260	0					
ANR	1016537	Identifier	incr		1016260	1					
ANR	1016538	AssignmentExpression	incr = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : inslen - 1		1016260	2		=			
ANR	1016539	Identifier	incr		1016260	0					
ANR	1016540	ConditionalExpression	( core -> search -> align > 0 ) ? core -> search -> align - 1 : inslen - 1		1016260	1					
ANR	1016541	Condition	core -> search -> align > 0		1016260	0					
ANR	1016542	RelationalExpression	core -> search -> align > 0		1016260	0		>			
ANR	1016543	PtrMemberAccess	core -> search -> align		1016260	0					
ANR	1016544	PtrMemberAccess	core -> search		1016260	0					
ANR	1016545	Identifier	core		1016260	0					
ANR	1016546	Identifier	search		1016260	1					
ANR	1016547	Identifier	align		1016260	1					
ANR	1016548	PrimaryExpression	0		1016260	1					
ANR	1016549	AdditiveExpression	core -> search -> align - 1		1016260	1		-			
ANR	1016550	PtrMemberAccess	core -> search -> align		1016260	0					
ANR	1016551	PtrMemberAccess	core -> search		1016260	0					
ANR	1016552	Identifier	core		1016260	0					
ANR	1016553	Identifier	search		1016260	1					
ANR	1016554	Identifier	align		1016260	1					
ANR	1016555	PrimaryExpression	1		1016260	1					
ANR	1016556	AdditiveExpression	inslen - 1		1016260	2		-			
ANR	1016557	Identifier	inslen		1016260	0					
ANR	1016558	PrimaryExpression	1		1016260	1					
ANR	1016559	IfStatement	if ( incr < 0 )		1016260	1					
ANR	1016560	Condition	incr < 0	1788:7:54330:54337	1016260	0	True				
ANR	1016561	RelationalExpression	incr < 0		1016260	0		<			
ANR	1016562	Identifier	incr		1016260	0					
ANR	1016563	PrimaryExpression	0		1016260	1					
ANR	1016564	CompoundStatement		29:17:960:960	1016260	1					
ANR	1016565	ExpressionStatement	incr = minopcode	1789:4:54346:54362	1016260	0	True				
ANR	1016566	AssignmentExpression	incr = minopcode		1016260	0		=			
ANR	1016567	Identifier	incr		1016260	0					
ANR	1016568	Identifier	minopcode		1016260	1					
ANR	1016569	ExpressionStatement	i += incr	1791:3:54372:54381	1016260	2	True				
ANR	1016570	AssignmentExpression	i += incr		1016260	0		+=			
ANR	1016571	Identifier	i		1016260	0					
ANR	1016572	Identifier	incr		1016260	1					
ANR	1016573	ExpressionStatement	curpc += incr	1792:3:54386:54399	1016260	3	True				
ANR	1016574	AssignmentExpression	curpc += incr		1016260	0		+=			
ANR	1016575	Identifier	curpc		1016260	0					
ANR	1016576	Identifier	incr		1016260	1					
ANR	1016577	IfStatement	if ( r_anal_op_nonlinear ( aop . type ) )		1016260	4					
ANR	1016578	Condition	r_anal_op_nonlinear ( aop . type )	1793:7:54408:54437	1016260	0	True				
ANR	1016579	CallExpression	r_anal_op_nonlinear ( aop . type )		1016260	0					
ANR	1016580	Callee	r_anal_op_nonlinear		1016260	0					
ANR	1016581	Identifier	r_anal_op_nonlinear		1016260	0					
ANR	1016582	ArgumentList	aop . type		1016260	1					
ANR	1016583	Argument	aop . type		1016260	0					
ANR	1016584	MemberAccess	aop . type		1016260	0					
ANR	1016585	Identifier	aop		1016260	0					
ANR	1016586	Identifier	type		1016260	1					
ANR	1016587	CompoundStatement		34:39:1060:1060	1016260	1					
ANR	1016588	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , r , curpc + 1 )"	1794:4:54464:54510	1016260	0	True				
ANR	1016589	CallExpression	"r_reg_set_value ( core -> dbg -> reg , r , curpc + 1 )"		1016260	0					
ANR	1016590	Callee	r_reg_set_value		1016260	0					
ANR	1016591	Identifier	r_reg_set_value		1016260	0					
ANR	1016592	ArgumentList	core -> dbg -> reg		1016260	1					
ANR	1016593	Argument	core -> dbg -> reg		1016260	0					
ANR	1016594	PtrMemberAccess	core -> dbg -> reg		1016260	0					
ANR	1016595	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016596	Identifier	core		1016260	0					
ANR	1016597	Identifier	dbg		1016260	1					
ANR	1016598	Identifier	reg		1016260	1					
ANR	1016599	Argument	r		1016260	1					
ANR	1016600	Identifier	r		1016260	0					
ANR	1016601	Argument	curpc + 1		1016260	2					
ANR	1016602	AdditiveExpression	curpc + 1		1016260	0		+			
ANR	1016603	Identifier	curpc		1016260	0					
ANR	1016604	PrimaryExpression	1		1016260	1					
ANR	1016605	ElseStatement	else		1016260	0					
ANR	1016606	CompoundStatement		36:10:1142:1142	1016260	0					
ANR	1016607	ExpressionStatement	"r_core_esil_step ( core , UT64_MAX , NULL , NULL )"	1796:4:54542:54587	1016260	0	True				
ANR	1016608	CallExpression	"r_core_esil_step ( core , UT64_MAX , NULL , NULL )"		1016260	0					
ANR	1016609	Callee	r_core_esil_step		1016260	0					
ANR	1016610	Identifier	r_core_esil_step		1016260	0					
ANR	1016611	ArgumentList	core		1016260	1					
ANR	1016612	Argument	core		1016260	0					
ANR	1016613	Identifier	core		1016260	0					
ANR	1016614	Argument	UT64_MAX		1016260	1					
ANR	1016615	Identifier	UT64_MAX		1016260	0					
ANR	1016616	Argument	NULL		1016260	2					
ANR	1016617	Identifier	NULL		1016260	0					
ANR	1016618	Argument	NULL		1016260	3					
ANR	1016619	Identifier	NULL		1016260	0					
ANR	1016620	ExpressionStatement	free ( arr )	1800:1:54602:54612	1016260	13	True				
ANR	1016621	CallExpression	free ( arr )		1016260	0					
ANR	1016622	Callee	free		1016260	0					
ANR	1016623	Identifier	free		1016260	0					
ANR	1016624	ArgumentList	arr		1016260	1					
ANR	1016625	Argument	arr		1016260	0					
ANR	1016626	Identifier	arr		1016260	0					
ANR	1016627	IdentifierDeclStatement	"int sysno = r_debug_reg_get ( core -> dbg , a0 ) ;"	1801:1:54615:54658	1016260	14	True				
ANR	1016628	IdentifierDecl	"sysno = r_debug_reg_get ( core -> dbg , a0 )"		1016260	0					
ANR	1016629	IdentifierDeclType	int		1016260	0					
ANR	1016630	Identifier	sysno		1016260	1					
ANR	1016631	AssignmentExpression	"sysno = r_debug_reg_get ( core -> dbg , a0 )"		1016260	2		=			
ANR	1016632	Identifier	sysno		1016260	0					
ANR	1016633	CallExpression	"r_debug_reg_get ( core -> dbg , a0 )"		1016260	1					
ANR	1016634	Callee	r_debug_reg_get		1016260	0					
ANR	1016635	Identifier	r_debug_reg_get		1016260	0					
ANR	1016636	ArgumentList	core -> dbg		1016260	1					
ANR	1016637	Argument	core -> dbg		1016260	0					
ANR	1016638	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016639	Identifier	core		1016260	0					
ANR	1016640	Identifier	dbg		1016260	1					
ANR	1016641	Argument	a0		1016260	1					
ANR	1016642	Identifier	a0		1016260	0					
ANR	1016643	ExpressionStatement	"r_reg_set_value ( core -> dbg -> reg , reg_a0 , - 2 )"	1802:1:54661:54705	1016260	15	True				
ANR	1016644	CallExpression	"r_reg_set_value ( core -> dbg -> reg , reg_a0 , - 2 )"		1016260	0					
ANR	1016645	Callee	r_reg_set_value		1016260	0					
ANR	1016646	Identifier	r_reg_set_value		1016260	0					
ANR	1016647	ArgumentList	core -> dbg -> reg		1016260	1					
ANR	1016648	Argument	core -> dbg -> reg		1016260	0					
ANR	1016649	PtrMemberAccess	core -> dbg -> reg		1016260	0					
ANR	1016650	PtrMemberAccess	core -> dbg		1016260	0					
ANR	1016651	Identifier	core		1016260	0					
ANR	1016652	Identifier	dbg		1016260	1					
ANR	1016653	Identifier	reg		1016260	1					
ANR	1016654	Argument	reg_a0		1016260	1					
ANR	1016655	Identifier	reg_a0		1016260	0					
ANR	1016656	Argument	- 2		1016260	2					
ANR	1016657	UnaryOperationExpression	- 2		1016260	0					
ANR	1016658	UnaryOperator	-		1016260	0					
ANR	1016659	PrimaryExpression	2		1016260	1					
ANR	1016660	ReturnStatement	return sysno ;	1803:1:54732:54744	1016260	16	True				
ANR	1016661	Identifier	sysno		1016260	0					
ANR	1016662	ReturnType	static int		1016260	1					
ANR	1016663	Identifier	emulateSyscallPrelude		1016260	2					
ANR	1016664	ParameterList	"RCore * core , ut64 at , ut64 curpc"		1016260	3					
ANR	1016665	Parameter	RCore * core	1760:33:53345:53355	1016260	0	True				
ANR	1016666	ParameterType	RCore *		1016260	0					
ANR	1016667	Identifier	core		1016260	1					
ANR	1016668	Parameter	ut64 at	1760:46:53358:53364	1016260	1	True				
ANR	1016669	ParameterType	ut64		1016260	0					
ANR	1016670	Identifier	at		1016260	1					
ANR	1016671	Parameter	ut64 curpc	1760:55:53367:53376	1016260	2	True				
ANR	1016672	ParameterType	ut64		1016260	0					
ANR	1016673	Identifier	curpc		1016260	1					
ANR	1016674	CFGEntryNode	ENTRY		1016260		True				
ANR	1016675	CFGExitNode	EXIT		1016260		True				
ANR	1016676	Symbol	core -> anal -> reg		1016260						
ANR	1016677	Symbol	aop		1016260						
ANR	1016678	Symbol	sysno		1016260						
ANR	1016679	Symbol	R_REG_NAME_PC		1016260						
ANR	1016680	Symbol	mininstrsz		1016260						
ANR	1016681	Symbol	r_anal_archinfo		1016260						
ANR	1016682	Symbol	r_debug_reg_get		1016260						
ANR	1016683	Symbol	* core		1016260						
ANR	1016684	Symbol	aop . type		1016260						
ANR	1016685	Symbol	core -> anal		1016260						
ANR	1016686	Symbol	R_ANAL_OP_MASK_BASIC		1016260						
ANR	1016687	Symbol	minopcode		1016260						
ANR	1016688	Symbol	core -> io		1016260						
ANR	1016689	Symbol	core -> search -> align		1016260						
ANR	1016690	Symbol	inslen		1016260						
ANR	1016691	Symbol	curpc		1016260						
ANR	1016692	Symbol	UT64_MAX		1016260						
ANR	1016693	Symbol	core -> search		1016260						
ANR	1016694	Symbol	* * core		1016260						
ANR	1016695	Symbol	r_reg_get		1016260						
ANR	1016696	Symbol	r_anal_op		1016260						
ANR	1016697	Symbol	core -> blocksize		1016260						
ANR	1016698	Symbol	arr		1016260						
ANR	1016699	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		1016260						
ANR	1016700	Symbol	malloc		1016260						
ANR	1016701	Symbol	NULL		1016260						
ANR	1016702	Symbol	incr		1016260						
ANR	1016703	Symbol	i		1016260						
ANR	1016704	Symbol	R_MIN		1016260						
ANR	1016705	Symbol	* core -> search		1016260						
ANR	1016706	Symbol	a0		1016260						
ANR	1016707	Symbol	& aop		1016260						
ANR	1016708	Symbol	core		1016260						
ANR	1016709	Symbol	r		1016260						
ANR	1016710	Symbol	at		1016260						
ANR	1016711	Symbol	* core -> anal		1016260						
ANR	1016712	Symbol	pc		1016260						
ANR	1016713	Symbol	r_reg_get_name		1016260						
ANR	1016714	Symbol	core -> dbg -> reg		1016260						
ANR	1016715	Symbol	R_MAX		1016260						
ANR	1016716	Symbol	bsize		1016260						
ANR	1016717	Symbol	r_anal_op_nonlinear		1016260						
ANR	1016718	Symbol	R_REG_NAME_SN		1016260						
ANR	1016719	Symbol	* core -> dbg		1016260						
ANR	1016720	Symbol	reg_a0		1016260						
ANR	1016721	Symbol	core -> dbg		1016260						
ANR	1016722	Function	do_syscall_search	1807:0:54756:58897							
ANR	1016723	FunctionDef	"do_syscall_search (RCore * core , struct search_parameters * param)"		1016722	0					
ANR	1016724	CompoundStatement		1807:76:54832:58897	1016722	0					
ANR	1016725	IdentifierDeclStatement	RSearch * search = core -> search ;	1808:1:54835:54865	1016722	0	True				
ANR	1016726	IdentifierDecl	* search = core -> search		1016722	0					
ANR	1016727	IdentifierDeclType	RSearch *		1016722	0					
ANR	1016728	Identifier	search		1016722	1					
ANR	1016729	AssignmentExpression	* search = core -> search		1016722	2		=			
ANR	1016730	Identifier	search		1016722	0					
ANR	1016731	PtrMemberAccess	core -> search		1016722	1					
ANR	1016732	Identifier	core		1016722	0					
ANR	1016733	Identifier	search		1016722	1					
ANR	1016734	IdentifierDeclStatement	ut64 at ;	1809:1:54868:54875	1016722	1	True				
ANR	1016735	IdentifierDecl	at		1016722	0					
ANR	1016736	IdentifierDeclType	ut64		1016722	0					
ANR	1016737	Identifier	at		1016722	1					
ANR	1016738	IdentifierDeclStatement	ut64 curpc ;	1811:1:54896:54906	1016722	2	True				
ANR	1016739	IdentifierDecl	curpc		1016722	0					
ANR	1016740	IdentifierDeclType	ut64		1016722	0					
ANR	1016741	Identifier	curpc		1016722	1					
ANR	1016742	IdentifierDeclStatement	ut8 * buf ;	1813:1:54916:54924	1016722	3	True				
ANR	1016743	IdentifierDecl	* buf		1016722	0					
ANR	1016744	IdentifierDeclType	ut8 *		1016722	0					
ANR	1016745	Identifier	buf		1016722	1					
ANR	1016746	IdentifierDeclStatement	"int curpos , idx = 0 , count = 0 ;"	1814:1:54927:54957	1016722	4	True				
ANR	1016747	IdentifierDecl	curpos		1016722	0					
ANR	1016748	IdentifierDeclType	int		1016722	0					
ANR	1016749	Identifier	curpos		1016722	1					
ANR	1016750	IdentifierDecl	idx = 0		1016722	1					
ANR	1016751	IdentifierDeclType	int		1016722	0					
ANR	1016752	Identifier	idx		1016722	1					
ANR	1016753	AssignmentExpression	idx = 0		1016722	2		=			
ANR	1016754	Identifier	idx		1016722	0					
ANR	1016755	PrimaryExpression	0		1016722	1					
ANR	1016756	IdentifierDecl	count = 0		1016722	2					
ANR	1016757	IdentifierDeclType	int		1016722	0					
ANR	1016758	Identifier	count		1016722	1					
ANR	1016759	AssignmentExpression	count = 0		1016722	2		=			
ANR	1016760	Identifier	count		1016722	0					
ANR	1016761	PrimaryExpression	0		1016722	1					
ANR	1016762	IdentifierDeclStatement	RAnalOp aop = { 0 } ;	1815:1:54960:54977	1016722	5	True				
ANR	1016763	IdentifierDecl	aop = { 0 }		1016722	0					
ANR	1016764	IdentifierDeclType	RAnalOp		1016722	0					
ANR	1016765	Identifier	aop		1016722	1					
ANR	1016766	AssignmentExpression	aop = { 0 }		1016722	2		=			
ANR	1016767	Identifier	aop		1016722	0					
ANR	1016768	InitializerList	0		1016722	1					
ANR	1016769	PrimaryExpression	0		1016722	0					
ANR	1016770	IdentifierDeclStatement	"int i , ret , bsize = R_MAX ( 64 , core -> blocksize ) ;"	1816:1:54980:55027	1016722	6	True				
ANR	1016771	IdentifierDecl	i		1016722	0					
ANR	1016772	IdentifierDeclType	int		1016722	0					
ANR	1016773	Identifier	i		1016722	1					
ANR	1016774	IdentifierDecl	ret		1016722	1					
ANR	1016775	IdentifierDeclType	int		1016722	0					
ANR	1016776	Identifier	ret		1016722	1					
ANR	1016777	IdentifierDecl	"bsize = R_MAX ( 64 , core -> blocksize )"		1016722	2					
ANR	1016778	IdentifierDeclType	int		1016722	0					
ANR	1016779	Identifier	bsize		1016722	1					
ANR	1016780	AssignmentExpression	"bsize = R_MAX ( 64 , core -> blocksize )"		1016722	2		=			
ANR	1016781	Identifier	bsize		1016722	0					
ANR	1016782	CallExpression	"R_MAX ( 64 , core -> blocksize )"		1016722	1					
ANR	1016783	Callee	R_MAX		1016722	0					
ANR	1016784	Identifier	R_MAX		1016722	0					
ANR	1016785	ArgumentList	64		1016722	1					
ANR	1016786	Argument	64		1016722	0					
ANR	1016787	PrimaryExpression	64		1016722	0					
ANR	1016788	Argument	core -> blocksize		1016722	1					
ANR	1016789	PtrMemberAccess	core -> blocksize		1016722	0					
ANR	1016790	Identifier	core		1016722	0					
ANR	1016791	Identifier	blocksize		1016722	1					
ANR	1016792	IdentifierDeclStatement	int kwidx = core -> search -> n_kws ;	1817:1:55030:55061	1016722	7	True				
ANR	1016793	IdentifierDecl	kwidx = core -> search -> n_kws		1016722	0					
ANR	1016794	IdentifierDeclType	int		1016722	0					
ANR	1016795	Identifier	kwidx		1016722	1					
ANR	1016796	AssignmentExpression	kwidx = core -> search -> n_kws		1016722	2		=			
ANR	1016797	Identifier	kwidx		1016722	0					
ANR	1016798	PtrMemberAccess	core -> search -> n_kws		1016722	1					
ANR	1016799	PtrMemberAccess	core -> search		1016722	0					
ANR	1016800	Identifier	core		1016722	0					
ANR	1016801	Identifier	search		1016722	1					
ANR	1016802	Identifier	n_kws		1016722	1					
ANR	1016803	IdentifierDeclStatement	RIOMap * map ;	1818:1:55064:55075	1016722	8	True				
ANR	1016804	IdentifierDecl	* map		1016722	0					
ANR	1016805	IdentifierDeclType	RIOMap *		1016722	0					
ANR	1016806	Identifier	map		1016722	1					
ANR	1016807	IdentifierDeclStatement	RListIter * iter ;	1819:1:55078:55093	1016722	9	True				
ANR	1016808	IdentifierDecl	* iter		1016722	0					
ANR	1016809	IdentifierDeclType	RListIter *		1016722	0					
ANR	1016810	Identifier	iter		1016722	1					
ANR	1016811	IdentifierDeclStatement	"const int mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE ) ;"	1820:1:55096:55176	1016722	10	True				
ANR	1016812	IdentifierDecl	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1016722	0					
ANR	1016813	IdentifierDeclType	const int		1016722	0					
ANR	1016814	Identifier	mininstrsz		1016722	1					
ANR	1016815	AssignmentExpression	"mininstrsz = r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1016722	2		=			
ANR	1016816	Identifier	mininstrsz		1016722	0					
ANR	1016817	CallExpression	"r_anal_archinfo ( core -> anal , R_ANAL_ARCHINFO_MIN_OP_SIZE )"		1016722	1					
ANR	1016818	Callee	r_anal_archinfo		1016722	0					
ANR	1016819	Identifier	r_anal_archinfo		1016722	0					
ANR	1016820	ArgumentList	core -> anal		1016722	1					
ANR	1016821	Argument	core -> anal		1016722	0					
ANR	1016822	PtrMemberAccess	core -> anal		1016722	0					
ANR	1016823	Identifier	core		1016722	0					
ANR	1016824	Identifier	anal		1016722	1					
ANR	1016825	Argument	R_ANAL_ARCHINFO_MIN_OP_SIZE		1016722	1					
ANR	1016826	Identifier	R_ANAL_ARCHINFO_MIN_OP_SIZE		1016722	0					
ANR	1016827	IdentifierDeclStatement	"const int minopcode = R_MAX ( 1 , mininstrsz ) ;"	1821:1:55179:55222	1016722	11	True				
ANR	1016828	IdentifierDecl	"minopcode = R_MAX ( 1 , mininstrsz )"		1016722	0					
ANR	1016829	IdentifierDeclType	const int		1016722	0					
ANR	1016830	Identifier	minopcode		1016722	1					
ANR	1016831	AssignmentExpression	"minopcode = R_MAX ( 1 , mininstrsz )"		1016722	2		=			
ANR	1016832	Identifier	minopcode		1016722	0					
ANR	1016833	CallExpression	"R_MAX ( 1 , mininstrsz )"		1016722	1					
ANR	1016834	Callee	R_MAX		1016722	0					
ANR	1016835	Identifier	R_MAX		1016722	0					
ANR	1016836	ArgumentList	1		1016722	1					
ANR	1016837	Argument	1		1016722	0					
ANR	1016838	PrimaryExpression	1		1016722	0					
ANR	1016839	Argument	mininstrsz		1016722	1					
ANR	1016840	Identifier	mininstrsz		1016722	0					
ANR	1016841	IdentifierDeclStatement	RAnalEsil * esil ;	1822:1:55225:55240	1016722	12	True				
ANR	1016842	IdentifierDecl	* esil		1016722	0					
ANR	1016843	IdentifierDeclType	RAnalEsil *		1016722	0					
ANR	1016844	Identifier	esil		1016722	1					
ANR	1016845	IdentifierDeclStatement	int align = core -> search -> align ;	1823:1:55243:55274	1016722	13	True				
ANR	1016846	IdentifierDecl	align = core -> search -> align		1016722	0					
ANR	1016847	IdentifierDeclType	int		1016722	0					
ANR	1016848	Identifier	align		1016722	1					
ANR	1016849	AssignmentExpression	align = core -> search -> align		1016722	2		=			
ANR	1016850	Identifier	align		1016722	0					
ANR	1016851	PtrMemberAccess	core -> search -> align		1016722	1					
ANR	1016852	PtrMemberAccess	core -> search		1016722	0					
ANR	1016853	Identifier	core		1016722	0					
ANR	1016854	Identifier	search		1016722	1					
ANR	1016855	Identifier	align		1016722	1					
ANR	1016856	IdentifierDeclStatement	"int stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" ) ;"	1824:1:55277:55342	1016722	14	True				
ANR	1016857	IdentifierDecl	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		1016722	0					
ANR	1016858	IdentifierDeclType	int		1016722	0					
ANR	1016859	Identifier	stacksize		1016722	1					
ANR	1016860	AssignmentExpression	"stacksize = r_config_get_i ( core -> config , ""esil.stack.depth"" )"		1016722	2		=			
ANR	1016861	Identifier	stacksize		1016722	0					
ANR	1016862	CallExpression	"r_config_get_i ( core -> config , ""esil.stack.depth"" )"		1016722	1					
ANR	1016863	Callee	r_config_get_i		1016722	0					
ANR	1016864	Identifier	r_config_get_i		1016722	0					
ANR	1016865	ArgumentList	core -> config		1016722	1					
ANR	1016866	Argument	core -> config		1016722	0					
ANR	1016867	PtrMemberAccess	core -> config		1016722	0					
ANR	1016868	Identifier	core		1016722	0					
ANR	1016869	Identifier	config		1016722	1					
ANR	1016870	Argument	"""esil.stack.depth"""		1016722	1					
ANR	1016871	PrimaryExpression	"""esil.stack.depth"""		1016722	0					
ANR	1016872	IdentifierDeclStatement	"int iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" ) ;"	1825:1:55345:55402	1016722	15	True				
ANR	1016873	IdentifierDecl	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		1016722	0					
ANR	1016874	IdentifierDeclType	int		1016722	0					
ANR	1016875	Identifier	iotrap		1016722	1					
ANR	1016876	AssignmentExpression	"iotrap = r_config_get_i ( core -> config , ""esil.iotrap"" )"		1016722	2		=			
ANR	1016877	Identifier	iotrap		1016722	0					
ANR	1016878	CallExpression	"r_config_get_i ( core -> config , ""esil.iotrap"" )"		1016722	1					
ANR	1016879	Callee	r_config_get_i		1016722	0					
ANR	1016880	Identifier	r_config_get_i		1016722	0					
ANR	1016881	ArgumentList	core -> config		1016722	1					
ANR	1016882	Argument	core -> config		1016722	0					
ANR	1016883	PtrMemberAccess	core -> config		1016722	0					
ANR	1016884	Identifier	core		1016722	0					
ANR	1016885	Identifier	config		1016722	1					
ANR	1016886	Argument	"""esil.iotrap"""		1016722	1					
ANR	1016887	PrimaryExpression	"""esil.iotrap"""		1016722	0					
ANR	1016888	IdentifierDeclStatement	"unsigned int addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" ) ;"	1826:1:55405:55476	1016722	16	True				
ANR	1016889	IdentifierDecl	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		1016722	0					
ANR	1016890	IdentifierDeclType	unsigned int		1016722	0					
ANR	1016891	Identifier	addrsize		1016722	1					
ANR	1016892	AssignmentExpression	"addrsize = r_config_get_i ( core -> config , ""esil.addr.size"" )"		1016722	2		=			
ANR	1016893	Identifier	addrsize		1016722	0					
ANR	1016894	CallExpression	"r_config_get_i ( core -> config , ""esil.addr.size"" )"		1016722	1					
ANR	1016895	Callee	r_config_get_i		1016722	0					
ANR	1016896	Identifier	r_config_get_i		1016722	0					
ANR	1016897	ArgumentList	core -> config		1016722	1					
ANR	1016898	Argument	core -> config		1016722	0					
ANR	1016899	PtrMemberAccess	core -> config		1016722	0					
ANR	1016900	Identifier	core		1016722	0					
ANR	1016901	Identifier	config		1016722	1					
ANR	1016902	Argument	"""esil.addr.size"""		1016722	1					
ANR	1016903	PrimaryExpression	"""esil.addr.size"""		1016722	0					
ANR	1016904	IfStatement	"if ( ! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) ) )"		1016722	17					
ANR	1016905	Condition	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"	1828:5:55484:55538	1016722	0	True				
ANR	1016906	UnaryOperationExpression	"! ( esil = r_anal_esil_new ( stacksize , iotrap , addrsize ) )"		1016722	0					
ANR	1016907	UnaryOperator	!		1016722	0					
ANR	1016908	AssignmentExpression	"esil = r_anal_esil_new ( stacksize , iotrap , addrsize )"		1016722	1		=			
ANR	1016909	Identifier	esil		1016722	0					
ANR	1016910	CallExpression	"r_anal_esil_new ( stacksize , iotrap , addrsize )"		1016722	1					
ANR	1016911	Callee	r_anal_esil_new		1016722	0					
ANR	1016912	Identifier	r_anal_esil_new		1016722	0					
ANR	1016913	ArgumentList	stacksize		1016722	1					
ANR	1016914	Argument	stacksize		1016722	0					
ANR	1016915	Identifier	stacksize		1016722	0					
ANR	1016916	Argument	iotrap		1016722	1					
ANR	1016917	Identifier	iotrap		1016722	0					
ANR	1016918	Argument	addrsize		1016722	2					
ANR	1016919	Identifier	addrsize		1016722	0					
ANR	1016920	CompoundStatement		22:62:708:708	1016722	1					
ANR	1016921	ReturnStatement	return ;	1829:2:55545:55551	1016722	0	True				
ANR	1016922	IdentifierDeclStatement	"int * previnstr = calloc ( MAXINSTR + 1 , sizeof ( int ) ) ;"	1831:1:55557:55609	1016722	18	True				
ANR	1016923	IdentifierDecl	"* previnstr = calloc ( MAXINSTR + 1 , sizeof ( int ) )"		1016722	0					
ANR	1016924	IdentifierDeclType	int *		1016722	0					
ANR	1016925	Identifier	previnstr		1016722	1					
ANR	1016926	AssignmentExpression	"* previnstr = calloc ( MAXINSTR + 1 , sizeof ( int ) )"		1016722	2		=			
ANR	1016927	Identifier	previnstr		1016722	0					
ANR	1016928	CallExpression	"calloc ( MAXINSTR + 1 , sizeof ( int ) )"		1016722	1					
ANR	1016929	Callee	calloc		1016722	0					
ANR	1016930	Identifier	calloc		1016722	0					
ANR	1016931	ArgumentList	MAXINSTR + 1		1016722	1					
ANR	1016932	Argument	MAXINSTR + 1		1016722	0					
ANR	1016933	AdditiveExpression	MAXINSTR + 1		1016722	0		+			
ANR	1016934	Identifier	MAXINSTR		1016722	0					
ANR	1016935	PrimaryExpression	1		1016722	1					
ANR	1016936	Argument	sizeof ( int )		1016722	1					
ANR	1016937	SizeofExpression	sizeof ( int )		1016722	0					
ANR	1016938	Sizeof	sizeof		1016722	0					
ANR	1016939	SizeofOperand	int		1016722	1					
ANR	1016940	IfStatement	if ( ! previnstr )		1016722	19					
ANR	1016941	Condition	! previnstr	1832:5:55616:55625	1016722	0	True				
ANR	1016942	UnaryOperationExpression	! previnstr		1016722	0					
ANR	1016943	UnaryOperator	!		1016722	0					
ANR	1016944	Identifier	previnstr		1016722	1					
ANR	1016945	CompoundStatement		26:17:795:795	1016722	1					
ANR	1016946	ExpressionStatement	r_anal_esil_free ( esil )	1833:2:55632:55655	1016722	0	True				
ANR	1016947	CallExpression	r_anal_esil_free ( esil )		1016722	0					
ANR	1016948	Callee	r_anal_esil_free		1016722	0					
ANR	1016949	Identifier	r_anal_esil_free		1016722	0					
ANR	1016950	ArgumentList	esil		1016722	1					
ANR	1016951	Argument	esil		1016722	0					
ANR	1016952	Identifier	esil		1016722	0					
ANR	1016953	ReturnStatement	return ;	1834:2:55659:55665	1016722	1	True				
ANR	1016954	ExpressionStatement	buf = malloc ( bsize )	1836:1:55671:55691	1016722	20	True				
ANR	1016955	AssignmentExpression	buf = malloc ( bsize )		1016722	0		=			
ANR	1016956	Identifier	buf		1016722	0					
ANR	1016957	CallExpression	malloc ( bsize )		1016722	1					
ANR	1016958	Callee	malloc		1016722	0					
ANR	1016959	Identifier	malloc		1016722	0					
ANR	1016960	ArgumentList	bsize		1016722	1					
ANR	1016961	Argument	bsize		1016722	0					
ANR	1016962	Identifier	bsize		1016722	0					
ANR	1016963	IfStatement	if ( ! buf )		1016722	21					
ANR	1016964	Condition	! buf	1837:5:55698:55701	1016722	0	True				
ANR	1016965	UnaryOperationExpression	! buf		1016722	0					
ANR	1016966	UnaryOperator	!		1016722	0					
ANR	1016967	Identifier	buf		1016722	1					
ANR	1016968	CompoundStatement		31:11:871:871	1016722	1					
ANR	1016969	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"	1838:2:55708:55755	1016722	0	True				
ANR	1016970	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"		1016722	0					
ANR	1016971	Callee	eprintf		1016722	0					
ANR	1016972	Identifier	eprintf		1016722	0					
ANR	1016973	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		1016722	1					
ANR	1016974	Argument	"""Cannot allocate %d byte(s)\\n"""		1016722	0					
ANR	1016975	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		1016722	0					
ANR	1016976	Argument	bsize		1016722	1					
ANR	1016977	Identifier	bsize		1016722	0					
ANR	1016978	ExpressionStatement	r_anal_esil_free ( esil )	1839:2:55759:55782	1016722	1	True				
ANR	1016979	CallExpression	r_anal_esil_free ( esil )		1016722	0					
ANR	1016980	Callee	r_anal_esil_free		1016722	0					
ANR	1016981	Identifier	r_anal_esil_free		1016722	0					
ANR	1016982	ArgumentList	esil		1016722	1					
ANR	1016983	Argument	esil		1016722	0					
ANR	1016984	Identifier	esil		1016722	0					
ANR	1016985	ExpressionStatement	free ( previnstr )	1840:2:55786:55802	1016722	2	True				
ANR	1016986	CallExpression	free ( previnstr )		1016722	0					
ANR	1016987	Callee	free		1016722	0					
ANR	1016988	Identifier	free		1016722	0					
ANR	1016989	ArgumentList	previnstr		1016722	1					
ANR	1016990	Argument	previnstr		1016722	0					
ANR	1016991	Identifier	previnstr		1016722	0					
ANR	1016992	ReturnStatement	return ;	1841:2:55806:55812	1016722	3	True				
ANR	1016993	IdentifierDeclStatement	ut64 oldoff = core -> offset ;	1843:1:55818:55844	1016722	22	True				
ANR	1016994	IdentifierDecl	oldoff = core -> offset		1016722	0					
ANR	1016995	IdentifierDeclType	ut64		1016722	0					
ANR	1016996	Identifier	oldoff		1016722	1					
ANR	1016997	AssignmentExpression	oldoff = core -> offset		1016722	2		=			
ANR	1016998	Identifier	oldoff		1016722	0					
ANR	1016999	PtrMemberAccess	core -> offset		1016722	1					
ANR	1017000	Identifier	core		1016722	0					
ANR	1017001	Identifier	offset		1016722	1					
ANR	1017002	IdentifierDeclStatement	int syscallNumber = 0 ;	1844:1:55847:55868	1016722	23	True				
ANR	1017003	IdentifierDecl	syscallNumber = 0		1016722	0					
ANR	1017004	IdentifierDeclType	int		1016722	0					
ANR	1017005	Identifier	syscallNumber		1016722	1					
ANR	1017006	AssignmentExpression	syscallNumber = 0		1016722	2		=			
ANR	1017007	Identifier	syscallNumber		1016722	0					
ANR	1017008	PrimaryExpression	0		1016722	1					
ANR	1017009	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	1845:1:55871:55901	1016722	24	True				
ANR	1017010	CallExpression	"r_cons_break_push ( NULL , NULL )"		1016722	0					
ANR	1017011	Callee	r_cons_break_push		1016722	0					
ANR	1017012	Identifier	r_cons_break_push		1016722	0					
ANR	1017013	ArgumentList	NULL		1016722	1					
ANR	1017014	Argument	NULL		1016722	0					
ANR	1017015	Identifier	NULL		1016722	0					
ANR	1017016	Argument	NULL		1016722	1					
ANR	1017017	Identifier	NULL		1016722	0					
ANR	1017018	IdentifierDeclStatement	"const char * a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN ) ;"	1846:1:55904:55968	1016722	25	True				
ANR	1017019	IdentifierDecl	"* a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		1016722	0					
ANR	1017020	IdentifierDeclType	const char *		1016722	0					
ANR	1017021	Identifier	a0		1016722	1					
ANR	1017022	AssignmentExpression	"* a0 = r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		1016722	2		=			
ANR	1017023	Identifier	a0		1016722	0					
ANR	1017024	CallExpression	"r_reg_get_name ( core -> anal -> reg , R_REG_NAME_SN )"		1016722	1					
ANR	1017025	Callee	r_reg_get_name		1016722	0					
ANR	1017026	Identifier	r_reg_get_name		1016722	0					
ANR	1017027	ArgumentList	core -> anal -> reg		1016722	1					
ANR	1017028	Argument	core -> anal -> reg		1016722	0					
ANR	1017029	PtrMemberAccess	core -> anal -> reg		1016722	0					
ANR	1017030	PtrMemberAccess	core -> anal		1016722	0					
ANR	1017031	Identifier	core		1016722	0					
ANR	1017032	Identifier	anal		1016722	1					
ANR	1017033	Identifier	reg		1016722	1					
ANR	1017034	Argument	R_REG_NAME_SN		1016722	1					
ANR	1017035	Identifier	R_REG_NAME_SN		1016722	0					
ANR	1017036	IdentifierDeclStatement	"char * esp = r_str_newf ( ""%s,="" , a0 ) ;"	1847:1:55971:56006	1016722	26	True				
ANR	1017037	IdentifierDecl	"* esp = r_str_newf ( ""%s,="" , a0 )"		1016722	0					
ANR	1017038	IdentifierDeclType	char *		1016722	0					
ANR	1017039	Identifier	esp		1016722	1					
ANR	1017040	AssignmentExpression	"* esp = r_str_newf ( ""%s,="" , a0 )"		1016722	2		=			
ANR	1017041	Identifier	esp		1016722	0					
ANR	1017042	CallExpression	"r_str_newf ( ""%s,="" , a0 )"		1016722	1					
ANR	1017043	Callee	r_str_newf		1016722	0					
ANR	1017044	Identifier	r_str_newf		1016722	0					
ANR	1017045	ArgumentList	"""%s,="""		1016722	1					
ANR	1017046	Argument	"""%s,="""		1016722	0					
ANR	1017047	PrimaryExpression	"""%s,="""		1016722	0					
ANR	1017048	Argument	a0		1016722	1					
ANR	1017049	Identifier	a0		1016722	0					
ANR	1017050	IdentifierDeclStatement	char * esp32 = NULL ;	1848:1:56009:56027	1016722	27	True				
ANR	1017051	IdentifierDecl	* esp32 = NULL		1016722	0					
ANR	1017052	IdentifierDeclType	char *		1016722	0					
ANR	1017053	Identifier	esp32		1016722	1					
ANR	1017054	AssignmentExpression	* esp32 = NULL		1016722	2		=			
ANR	1017055	Identifier	NULL		1016722	0					
ANR	1017056	Identifier	NULL		1016722	1					
ANR	1017057	IfStatement	if ( core -> anal -> bits == 64 )		1016722	28					
ANR	1017058	Condition	core -> anal -> bits == 64	1849:5:56034:56055	1016722	0	True				
ANR	1017059	EqualityExpression	core -> anal -> bits == 64		1016722	0		==			
ANR	1017060	PtrMemberAccess	core -> anal -> bits		1016722	0					
ANR	1017061	PtrMemberAccess	core -> anal		1016722	0					
ANR	1017062	Identifier	core		1016722	0					
ANR	1017063	Identifier	anal		1016722	1					
ANR	1017064	Identifier	bits		1016722	1					
ANR	1017065	PrimaryExpression	64		1016722	1					
ANR	1017066	CompoundStatement		44:2:1229:1283	1016722	1					
ANR	1017067	IdentifierDeclStatement	"const char * reg = r_reg_64_to_32 ( core -> anal -> reg , a0 ) ;"	1850:2:56062:56116	1016722	0	True				
ANR	1017068	IdentifierDecl	"* reg = r_reg_64_to_32 ( core -> anal -> reg , a0 )"		1016722	0					
ANR	1017069	IdentifierDeclType	const char *		1016722	0					
ANR	1017070	Identifier	reg		1016722	1					
ANR	1017071	AssignmentExpression	"* reg = r_reg_64_to_32 ( core -> anal -> reg , a0 )"		1016722	2		=			
ANR	1017072	Identifier	reg		1016722	0					
ANR	1017073	CallExpression	"r_reg_64_to_32 ( core -> anal -> reg , a0 )"		1016722	1					
ANR	1017074	Callee	r_reg_64_to_32		1016722	0					
ANR	1017075	Identifier	r_reg_64_to_32		1016722	0					
ANR	1017076	ArgumentList	core -> anal -> reg		1016722	1					
ANR	1017077	Argument	core -> anal -> reg		1016722	0					
ANR	1017078	PtrMemberAccess	core -> anal -> reg		1016722	0					
ANR	1017079	PtrMemberAccess	core -> anal		1016722	0					
ANR	1017080	Identifier	core		1016722	0					
ANR	1017081	Identifier	anal		1016722	1					
ANR	1017082	Identifier	reg		1016722	1					
ANR	1017083	Argument	a0		1016722	1					
ANR	1017084	Identifier	a0		1016722	0					
ANR	1017085	IfStatement	if ( reg )		1016722	1					
ANR	1017086	Condition	reg	1851:6:56124:56126	1016722	0	True				
ANR	1017087	Identifier	reg		1016722	0					
ANR	1017088	CompoundStatement		45:11:1296:1296	1016722	1					
ANR	1017089	ExpressionStatement	"esp32 = r_str_newf ( ""%s,="" , reg )"	1852:3:56134:56166	1016722	0	True				
ANR	1017090	AssignmentExpression	"esp32 = r_str_newf ( ""%s,="" , reg )"		1016722	0		=			
ANR	1017091	Identifier	esp32		1016722	0					
ANR	1017092	CallExpression	"r_str_newf ( ""%s,="" , reg )"		1016722	1					
ANR	1017093	Callee	r_str_newf		1016722	0					
ANR	1017094	Identifier	r_str_newf		1016722	0					
ANR	1017095	ArgumentList	"""%s,="""		1016722	1					
ANR	1017096	Argument	"""%s,="""		1016722	0					
ANR	1017097	PrimaryExpression	"""%s,="""		1016722	0					
ANR	1017098	Argument	reg		1016722	1					
ANR	1017099	Identifier	reg		1016722	0					
ANR	1017100	Statement	r_list_foreach	1855:1:56176:56189	1016722	29	True				
ANR	1017101	Statement	(	1855:16:56191:56191	1016722	30	True				
ANR	1017102	Statement	param	1855:17:56192:56196	1016722	31	True				
ANR	1017103	Statement	->	1855:22:56197:56198	1016722	32	True				
ANR	1017104	Statement	boundaries	1855:24:56199:56208	1016722	33	True				
ANR	1017105	Statement	","	1855:34:56209:56209	1016722	34	True				
ANR	1017106	Statement	iter	1855:36:56211:56214	1016722	35	True				
ANR	1017107	Statement	","	1855:40:56215:56215	1016722	36	True				
ANR	1017108	Statement	map	1855:42:56217:56219	1016722	37	True				
ANR	1017109	Statement	)	1855:45:56220:56220	1016722	38	True				
ANR	1017110	CompoundStatement		51:2:1422:1452	1016722	39					
ANR	1017111	IdentifierDeclStatement	ut64 from = map -> itv . addr ;	1856:2:56226:56251	1016722	0	True				
ANR	1017112	IdentifierDecl	from = map -> itv . addr		1016722	0					
ANR	1017113	IdentifierDeclType	ut64		1016722	0					
ANR	1017114	Identifier	from		1016722	1					
ANR	1017115	AssignmentExpression	from = map -> itv . addr		1016722	2		=			
ANR	1017116	Identifier	from		1016722	0					
ANR	1017117	MemberAccess	map -> itv . addr		1016722	1					
ANR	1017118	PtrMemberAccess	map -> itv		1016722	0					
ANR	1017119	Identifier	map		1016722	0					
ANR	1017120	Identifier	itv		1016722	1					
ANR	1017121	Identifier	addr		1016722	1					
ANR	1017122	IdentifierDeclStatement	ut64 to = r_itv_end ( map -> itv ) ;	1857:2:56255:56285	1016722	1	True				
ANR	1017123	IdentifierDecl	to = r_itv_end ( map -> itv )		1016722	0					
ANR	1017124	IdentifierDeclType	ut64		1016722	0					
ANR	1017125	Identifier	to		1016722	1					
ANR	1017126	AssignmentExpression	to = r_itv_end ( map -> itv )		1016722	2		=			
ANR	1017127	Identifier	to		1016722	0					
ANR	1017128	CallExpression	r_itv_end ( map -> itv )		1016722	1					
ANR	1017129	Callee	r_itv_end		1016722	0					
ANR	1017130	Identifier	r_itv_end		1016722	0					
ANR	1017131	ArgumentList	map -> itv		1016722	1					
ANR	1017132	Argument	map -> itv		1016722	0					
ANR	1017133	PtrMemberAccess	map -> itv		1016722	0					
ANR	1017134	Identifier	map		1016722	0					
ANR	1017135	Identifier	itv		1016722	1					
ANR	1017136	IfStatement	if ( from >= to )		1016722	2					
ANR	1017137	Condition	from >= to	1858:6:56293:56302	1016722	0	True				
ANR	1017138	RelationalExpression	from >= to		1016722	0		>=			
ANR	1017139	Identifier	from		1016722	0					
ANR	1017140	Identifier	to		1016722	1					
ANR	1017141	CompoundStatement		52:18:1472:1472	1016722	1					
ANR	1017142	ExpressionStatement	"eprintf ( ""Error: from must be lower than to\\n"" )"	1859:3:56310:56357	1016722	0	True				
ANR	1017143	CallExpression	"eprintf ( ""Error: from must be lower than to\\n"" )"		1016722	0					
ANR	1017144	Callee	eprintf		1016722	0					
ANR	1017145	Identifier	eprintf		1016722	0					
ANR	1017146	ArgumentList	"""Error: from must be lower than to\\n"""		1016722	1					
ANR	1017147	Argument	"""Error: from must be lower than to\\n"""		1016722	0					
ANR	1017148	PrimaryExpression	"""Error: from must be lower than to\\n"""		1016722	0					
ANR	1017149	GotoStatement	goto beach ;	1860:3:56362:56372	1016722	1	True				
ANR	1017150	Identifier	beach		1016722	0					
ANR	1017151	IfStatement	if ( to == UT64_MAX )		1016722	3					
ANR	1017152	Condition	to == UT64_MAX	1862:6:56384:56397	1016722	0	True				
ANR	1017153	EqualityExpression	to == UT64_MAX		1016722	0		==			
ANR	1017154	Identifier	to		1016722	0					
ANR	1017155	Identifier	UT64_MAX		1016722	1					
ANR	1017156	CompoundStatement		56:22:1567:1567	1016722	1					
ANR	1017157	ExpressionStatement	"eprintf ( ""Error: Invalid destination boundary\\n"" )"	1863:3:56405:56454	1016722	0	True				
ANR	1017158	CallExpression	"eprintf ( ""Error: Invalid destination boundary\\n"" )"		1016722	0					
ANR	1017159	Callee	eprintf		1016722	0					
ANR	1017160	Identifier	eprintf		1016722	0					
ANR	1017161	ArgumentList	"""Error: Invalid destination boundary\\n"""		1016722	1					
ANR	1017162	Argument	"""Error: Invalid destination boundary\\n"""		1016722	0					
ANR	1017163	PrimaryExpression	"""Error: Invalid destination boundary\\n"""		1016722	0					
ANR	1017164	GotoStatement	goto beach ;	1864:3:56459:56469	1016722	1	True				
ANR	1017165	Identifier	beach		1016722	0					
ANR	1017166	ForStatement	"for ( i = 0 , at = from ; at < to ; at ++ , i ++ )"		1016722	4					
ANR	1017167	ForInit	"i = 0 , at = from ;"	1866:7:56482:56498	1016722	0	True				
ANR	1017168	Expression	"i = 0 , at = from"		1016722	0					
ANR	1017169	AssignmentExpression	i = 0		1016722	0		=			
ANR	1017170	Identifier	i		1016722	0					
ANR	1017171	PrimaryExpression	0		1016722	1					
ANR	1017172	AssignmentExpression	at = from		1016722	1		=			
ANR	1017173	Identifier	at		1016722	0					
ANR	1017174	Identifier	from		1016722	1					
ANR	1017175	Condition	at < to	1866:25:56500:56506	1016722	1	True				
ANR	1017176	RelationalExpression	at < to		1016722	0		<			
ANR	1017177	Identifier	at		1016722	0					
ANR	1017178	Identifier	to		1016722	1					
ANR	1017179	Expression	"at ++ , i ++"	1866:34:56509:56517	1016722	2	True				
ANR	1017180	PostIncDecOperationExpression	at ++		1016722	0					
ANR	1017181	Identifier	at		1016722	0					
ANR	1017182	IncDec	++		1016722	1					
ANR	1017183	PostIncDecOperationExpression	i ++		1016722	1					
ANR	1017184	Identifier	i		1016722	0					
ANR	1017185	IncDec	++		1016722	1					
ANR	1017186	CompoundStatement		125:3:3761:3830	1016722	3					
ANR	1017187	IfStatement	if ( r_cons_is_breaked ( ) )		1016722	0					
ANR	1017188	Condition	r_cons_is_breaked ( )	1867:7:56529:56548	1016722	0	True				
ANR	1017189	CallExpression	r_cons_is_breaked ( )		1016722	0					
ANR	1017190	Callee	r_cons_is_breaked		1016722	0					
ANR	1017191	Identifier	r_cons_is_breaked		1016722	0					
ANR	1017192	ArgumentList			1016722	1					
ANR	1017193	CompoundStatement		61:29:1718:1718	1016722	1					
ANR	1017194	BreakStatement	break ;	1868:4:56557:56562	1016722	0	True				
ANR	1017195	IfStatement	if ( i >= ( bsize - 32 ) )		1016722	1					
ANR	1017196	Condition	i >= ( bsize - 32 )	1870:7:56576:56592	1016722	0	True				
ANR	1017197	RelationalExpression	i >= ( bsize - 32 )		1016722	0		>=			
ANR	1017198	Identifier	i		1016722	0					
ANR	1017199	AdditiveExpression	bsize - 32		1016722	1		-			
ANR	1017200	Identifier	bsize		1016722	0					
ANR	1017201	PrimaryExpression	32		1016722	1					
ANR	1017202	CompoundStatement		64:26:1762:1762	1016722	1					
ANR	1017203	ExpressionStatement	i = 0	1871:4:56601:56606	1016722	0	True				
ANR	1017204	AssignmentExpression	i = 0		1016722	0		=			
ANR	1017205	Identifier	i		1016722	0					
ANR	1017206	PrimaryExpression	0		1016722	1					
ANR	1017207	IfStatement	if ( align && ( at % align ) )		1016722	2					
ANR	1017208	Condition	align && ( at % align )	1873:7:56620:56640	1016722	0	True				
ANR	1017209	AndExpression	align && ( at % align )		1016722	0		&&			
ANR	1017210	Identifier	align		1016722	0					
ANR	1017211	MultiplicativeExpression	at % align		1016722	1		%			
ANR	1017212	Identifier	at		1016722	0					
ANR	1017213	Identifier	align		1016722	1					
ANR	1017214	CompoundStatement		67:30:1810:1810	1016722	1					
ANR	1017215	ContinueStatement	continue ;	1874:4:56649:56657	1016722	0	True				
ANR	1017216	IfStatement	if ( ! i )		1016722	3					
ANR	1017217	Condition	! i	1876:7:56671:56672	1016722	0	True				
ANR	1017218	UnaryOperationExpression	! i		1016722	0					
ANR	1017219	UnaryOperator	!		1016722	0					
ANR	1017220	Identifier	i		1016722	1					
ANR	1017221	CompoundStatement		70:11:1842:1842	1016722	1					
ANR	1017222	ExpressionStatement	"r_io_read_at ( core -> io , at , buf , bsize )"	1877:4:56681:56720	1016722	0	True				
ANR	1017223	CallExpression	"r_io_read_at ( core -> io , at , buf , bsize )"		1016722	0					
ANR	1017224	Callee	r_io_read_at		1016722	0					
ANR	1017225	Identifier	r_io_read_at		1016722	0					
ANR	1017226	ArgumentList	core -> io		1016722	1					
ANR	1017227	Argument	core -> io		1016722	0					
ANR	1017228	PtrMemberAccess	core -> io		1016722	0					
ANR	1017229	Identifier	core		1016722	0					
ANR	1017230	Identifier	io		1016722	1					
ANR	1017231	Argument	at		1016722	1					
ANR	1017232	Identifier	at		1016722	0					
ANR	1017233	Argument	buf		1016722	2					
ANR	1017234	Identifier	buf		1016722	0					
ANR	1017235	Argument	bsize		1016722	3					
ANR	1017236	Identifier	bsize		1016722	0					
ANR	1017237	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_ESIL )"	1879:3:56730:56809	1016722	4	True				
ANR	1017238	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_ESIL )"		1016722	0		=			
ANR	1017239	Identifier	ret		1016722	0					
ANR	1017240	CallExpression	"r_anal_op ( core -> anal , & aop , at , buf + i , bsize - i , R_ANAL_OP_MASK_ESIL )"		1016722	1					
ANR	1017241	Callee	r_anal_op		1016722	0					
ANR	1017242	Identifier	r_anal_op		1016722	0					
ANR	1017243	ArgumentList	core -> anal		1016722	1					
ANR	1017244	Argument	core -> anal		1016722	0					
ANR	1017245	PtrMemberAccess	core -> anal		1016722	0					
ANR	1017246	Identifier	core		1016722	0					
ANR	1017247	Identifier	anal		1016722	1					
ANR	1017248	Argument	& aop		1016722	1					
ANR	1017249	UnaryOperationExpression	& aop		1016722	0					
ANR	1017250	UnaryOperator	&		1016722	0					
ANR	1017251	Identifier	aop		1016722	1					
ANR	1017252	Argument	at		1016722	2					
ANR	1017253	Identifier	at		1016722	0					
ANR	1017254	Argument	buf + i		1016722	3					
ANR	1017255	AdditiveExpression	buf + i		1016722	0		+			
ANR	1017256	Identifier	buf		1016722	0					
ANR	1017257	Identifier	i		1016722	1					
ANR	1017258	Argument	bsize - i		1016722	4					
ANR	1017259	AdditiveExpression	bsize - i		1016722	0		-			
ANR	1017260	Identifier	bsize		1016722	0					
ANR	1017261	Identifier	i		1016722	1					
ANR	1017262	Argument	R_ANAL_OP_MASK_ESIL		1016722	5					
ANR	1017263	Identifier	R_ANAL_OP_MASK_ESIL		1016722	0					
ANR	1017264	ExpressionStatement	curpos = idx ++ % ( MAXINSTR + 1 )	1880:3:56814:56845	1016722	5	True				
ANR	1017265	AssignmentExpression	curpos = idx ++ % ( MAXINSTR + 1 )		1016722	0		=			
ANR	1017266	Identifier	curpos		1016722	0					
ANR	1017267	MultiplicativeExpression	idx ++ % ( MAXINSTR + 1 )		1016722	1		%			
ANR	1017268	PostIncDecOperationExpression	idx ++		1016722	0					
ANR	1017269	Identifier	idx		1016722	0					
ANR	1017270	IncDec	++		1016722	1					
ANR	1017271	AdditiveExpression	MAXINSTR + 1		1016722	1		+			
ANR	1017272	Identifier	MAXINSTR		1016722	0					
ANR	1017273	PrimaryExpression	1		1016722	1					
ANR	1017274	ExpressionStatement	previnstr [ curpos ] = ret	1881:3:56850:56873	1016722	6	True				
ANR	1017275	AssignmentExpression	previnstr [ curpos ] = ret		1016722	0		=			
ANR	1017276	ArrayIndexing	previnstr [ curpos ]		1016722	0					
ANR	1017277	Identifier	previnstr		1016722	0					
ANR	1017278	Identifier	curpos		1016722	1					
ANR	1017279	Identifier	ret		1016722	1					
ANR	1017280	IfStatement	if ( aop . type == R_ANAL_OP_TYPE_MOV )		1016722	7					
ANR	1017281	Condition	aop . type == R_ANAL_OP_TYPE_MOV	1882:7:56937:56966	1016722	0	True				
ANR	1017282	EqualityExpression	aop . type == R_ANAL_OP_TYPE_MOV		1016722	0		==			
ANR	1017283	MemberAccess	aop . type		1016722	0					
ANR	1017284	Identifier	aop		1016722	0					
ANR	1017285	Identifier	type		1016722	1					
ANR	1017286	Identifier	R_ANAL_OP_TYPE_MOV		1016722	1					
ANR	1017287	CompoundStatement		77:4:2142:2187	1016722	1					
ANR	1017288	IdentifierDeclStatement	const char * es = R_STRBUF_SAFEGET ( & aop . esil ) ;	1883:4:56975:57020	1016722	0	True				
ANR	1017289	IdentifierDecl	* es = R_STRBUF_SAFEGET ( & aop . esil )		1016722	0					
ANR	1017290	IdentifierDeclType	const char *		1016722	0					
ANR	1017291	Identifier	es		1016722	1					
ANR	1017292	AssignmentExpression	* es = R_STRBUF_SAFEGET ( & aop . esil )		1016722	2		=			
ANR	1017293	Identifier	es		1016722	0					
ANR	1017294	CallExpression	R_STRBUF_SAFEGET ( & aop . esil )		1016722	1					
ANR	1017295	Callee	R_STRBUF_SAFEGET		1016722	0					
ANR	1017296	Identifier	R_STRBUF_SAFEGET		1016722	0					
ANR	1017297	ArgumentList	& aop . esil		1016722	1					
ANR	1017298	Argument	& aop . esil		1016722	0					
ANR	1017299	UnaryOperationExpression	& aop . esil		1016722	0					
ANR	1017300	UnaryOperator	&		1016722	0					
ANR	1017301	MemberAccess	aop . esil		1016722	1					
ANR	1017302	Identifier	aop		1016722	0					
ANR	1017303	Identifier	esil		1016722	1					
ANR	1017304	IfStatement	"if ( strstr ( es , esp ) )"		1016722	1					
ANR	1017305	Condition	"strstr ( es , esp )"	1884:8:57030:57045	1016722	0	True				
ANR	1017306	CallExpression	"strstr ( es , esp )"		1016722	0					
ANR	1017307	Callee	strstr		1016722	0					
ANR	1017308	Identifier	strstr		1016722	0					
ANR	1017309	ArgumentList	es		1016722	1					
ANR	1017310	Argument	es		1016722	0					
ANR	1017311	Identifier	es		1016722	0					
ANR	1017312	Argument	esp		1016722	1					
ANR	1017313	Identifier	esp		1016722	0					
ANR	1017314	CompoundStatement		78:26:2215:2215	1016722	1					
ANR	1017315	IfStatement	if ( aop . val != - 1 )		1016722	0					
ANR	1017316	Condition	aop . val != - 1	1885:9:57059:57071	1016722	0	True				
ANR	1017317	EqualityExpression	aop . val != - 1		1016722	0		!=			
ANR	1017318	MemberAccess	aop . val		1016722	0					
ANR	1017319	Identifier	aop		1016722	0					
ANR	1017320	Identifier	val		1016722	1					
ANR	1017321	UnaryOperationExpression	- 1		1016722	1					
ANR	1017322	UnaryOperator	-		1016722	0					
ANR	1017323	PrimaryExpression	1		1016722	1					
ANR	1017324	CompoundStatement		79:24:2241:2241	1016722	1					
ANR	1017325	ExpressionStatement	syscallNumber = aop . val	1886:6:57082:57105	1016722	0	True				
ANR	1017326	AssignmentExpression	syscallNumber = aop . val		1016722	0		=			
ANR	1017327	Identifier	syscallNumber		1016722	0					
ANR	1017328	MemberAccess	aop . val		1016722	1					
ANR	1017329	Identifier	aop		1016722	0					
ANR	1017330	Identifier	val		1016722	1					
ANR	1017331	ElseStatement	else		1016722	0					
ANR	1017332	IfStatement	"if ( esp32 && strstr ( es , esp32 ) )"		1016722	0					
ANR	1017333	Condition	"esp32 && strstr ( es , esp32 )"	1888:15:57129:57155	1016722	0	True				
ANR	1017334	AndExpression	"esp32 && strstr ( es , esp32 )"		1016722	0		&&			
ANR	1017335	Identifier	esp32		1016722	0					
ANR	1017336	CallExpression	"strstr ( es , esp32 )"		1016722	1					
ANR	1017337	Callee	strstr		1016722	0					
ANR	1017338	Identifier	strstr		1016722	0					
ANR	1017339	ArgumentList	es		1016722	1					
ANR	1017340	Argument	es		1016722	0					
ANR	1017341	Identifier	es		1016722	0					
ANR	1017342	Argument	esp32		1016722	1					
ANR	1017343	Identifier	esp32		1016722	0					
ANR	1017344	CompoundStatement		82:43:2324:2324	1016722	1					
ANR	1017345	IfStatement	if ( aop . val != - 1 )		1016722	0					
ANR	1017346	Condition	aop . val != - 1	1889:9:57168:57180	1016722	0	True				
ANR	1017347	EqualityExpression	aop . val != - 1		1016722	0		!=			
ANR	1017348	MemberAccess	aop . val		1016722	0					
ANR	1017349	Identifier	aop		1016722	0					
ANR	1017350	Identifier	val		1016722	1					
ANR	1017351	UnaryOperationExpression	- 1		1016722	1					
ANR	1017352	UnaryOperator	-		1016722	0					
ANR	1017353	PrimaryExpression	1		1016722	1					
ANR	1017354	CompoundStatement		83:24:2350:2350	1016722	1					
ANR	1017355	ExpressionStatement	syscallNumber = aop . val	1890:6:57191:57214	1016722	0	True				
ANR	1017356	AssignmentExpression	syscallNumber = aop . val		1016722	0		=			
ANR	1017357	Identifier	syscallNumber		1016722	0					
ANR	1017358	MemberAccess	aop . val		1016722	1					
ANR	1017359	Identifier	aop		1016722	0					
ANR	1017360	Identifier	val		1016722	1					
ANR	1017361	IfStatement	if ( ( aop . type == R_ANAL_OP_TYPE_SWI ) && ret )		1016722	8					
ANR	1017362	Condition	( aop . type == R_ANAL_OP_TYPE_SWI ) && ret	1894:7:57241:57279	1016722	0	True				
ANR	1017363	AndExpression	( aop . type == R_ANAL_OP_TYPE_SWI ) && ret		1016722	0		&&			
ANR	1017364	EqualityExpression	aop . type == R_ANAL_OP_TYPE_SWI		1016722	0		==			
ANR	1017365	MemberAccess	aop . type		1016722	0					
ANR	1017366	Identifier	aop		1016722	0					
ANR	1017367	Identifier	type		1016722	1					
ANR	1017368	Identifier	R_ANAL_OP_TYPE_SWI		1016722	1					
ANR	1017369	Identifier	ret		1016722	1					
ANR	1017370	CompoundStatement		102:4:2986:3062	1016722	1					
ANR	1017371	IdentifierDeclStatement	int scVector = - 1 ;	1895:4:57312:57329	1016722	0	True				
ANR	1017372	IdentifierDecl	scVector = - 1		1016722	0					
ANR	1017373	IdentifierDeclType	int		1016722	0					
ANR	1017374	Identifier	scVector		1016722	1					
ANR	1017375	AssignmentExpression	scVector = - 1		1016722	2		=			
ANR	1017376	Identifier	scVector		1016722	0					
ANR	1017377	UnaryOperationExpression	- 1		1016722	1					
ANR	1017378	UnaryOperator	-		1016722	0					
ANR	1017379	PrimaryExpression	1		1016722	1					
ANR	1017380	IdentifierDeclStatement	int scNumber = 0 ;	1896:4:57362:57378	1016722	1	True				
ANR	1017381	IdentifierDecl	scNumber = 0		1016722	0					
ANR	1017382	IdentifierDeclType	int		1016722	0					
ANR	1017383	Identifier	scNumber		1016722	1					
ANR	1017384	AssignmentExpression	scNumber = 0		1016722	2		=			
ANR	1017385	Identifier	scNumber		1016722	0					
ANR	1017386	PrimaryExpression	0		1016722	1					
ANR	1017387	IdentifierDeclStatement	int nbytes = 0 ;	1899:4:57504:57518	1016722	2	True				
ANR	1017388	IdentifierDecl	nbytes = 0		1016722	0					
ANR	1017389	IdentifierDeclType	int		1016722	0					
ANR	1017390	Identifier	nbytes		1016722	1					
ANR	1017391	AssignmentExpression	nbytes = 0		1016722	2		=			
ANR	1017392	Identifier	nbytes		1016722	0					
ANR	1017393	PrimaryExpression	0		1016722	1					
ANR	1017394	IdentifierDeclStatement	int nb_opcodes = MAXINSTR ;	1900:4:57524:57549	1016722	3	True				
ANR	1017395	IdentifierDecl	nb_opcodes = MAXINSTR		1016722	0					
ANR	1017396	IdentifierDeclType	int		1016722	0					
ANR	1017397	Identifier	nb_opcodes		1016722	1					
ANR	1017398	AssignmentExpression	nb_opcodes = MAXINSTR		1016722	2		=			
ANR	1017399	Identifier	MAXINSTR		1016722	0					
ANR	1017400	Identifier	MAXINSTR		1016722	1					
ANR	1017401	ExpressionStatement	"SUMARRAY ( previnstr , nb_opcodes , nbytes )"	1901:4:57555:57595	1016722	4	True				
ANR	1017402	CallExpression	"SUMARRAY ( previnstr , nb_opcodes , nbytes )"		1016722	0					
ANR	1017403	Callee	SUMARRAY		1016722	0					
ANR	1017404	Identifier	SUMARRAY		1016722	0					
ANR	1017405	ArgumentList	previnstr		1016722	1					
ANR	1017406	Argument	previnstr		1016722	0					
ANR	1017407	Identifier	previnstr		1016722	0					
ANR	1017408	Argument	nb_opcodes		1016722	1					
ANR	1017409	Identifier	nb_opcodes		1016722	0					
ANR	1017410	Argument	nbytes		1016722	2					
ANR	1017411	Identifier	nbytes		1016722	0					
ANR	1017412	ExpressionStatement	curpc = at - ( nbytes - previnstr [ curpos ] )	1902:4:57601:57642	1016722	5	True				
ANR	1017413	AssignmentExpression	curpc = at - ( nbytes - previnstr [ curpos ] )		1016722	0		=			
ANR	1017414	Identifier	curpc		1016722	0					
ANR	1017415	AdditiveExpression	at - ( nbytes - previnstr [ curpos ] )		1016722	1		-			
ANR	1017416	Identifier	at		1016722	0					
ANR	1017417	AdditiveExpression	nbytes - previnstr [ curpos ]		1016722	1		-			
ANR	1017418	Identifier	nbytes		1016722	0					
ANR	1017419	ArrayIndexing	previnstr [ curpos ]		1016722	1					
ANR	1017420	Identifier	previnstr		1016722	0					
ANR	1017421	Identifier	curpos		1016722	1					
ANR	1017422	ExpressionStatement	"scNumber = emulateSyscallPrelude ( core , at , curpc )"	1903:4:57648:57698	1016722	6	True				
ANR	1017423	AssignmentExpression	"scNumber = emulateSyscallPrelude ( core , at , curpc )"		1016722	0		=			
ANR	1017424	Identifier	scNumber		1016722	0					
ANR	1017425	CallExpression	"emulateSyscallPrelude ( core , at , curpc )"		1016722	1					
ANR	1017426	Callee	emulateSyscallPrelude		1016722	0					
ANR	1017427	Identifier	emulateSyscallPrelude		1016722	0					
ANR	1017428	ArgumentList	core		1016722	1					
ANR	1017429	Argument	core		1016722	0					
ANR	1017430	Identifier	core		1016722	0					
ANR	1017431	Argument	at		1016722	1					
ANR	1017432	Identifier	at		1016722	0					
ANR	1017433	Argument	curpc		1016722	2					
ANR	1017434	Identifier	curpc		1016722	0					
ANR	1017435	ExpressionStatement	scVector = ( aop . val > 0 ) ? aop . val : - 1	1907:4:57747:57784	1016722	7	True				
ANR	1017436	AssignmentExpression	scVector = ( aop . val > 0 ) ? aop . val : - 1		1016722	0		=			
ANR	1017437	Identifier	scVector		1016722	0					
ANR	1017438	ConditionalExpression	( aop . val > 0 ) ? aop . val : - 1		1016722	1					
ANR	1017439	Condition	aop . val > 0		1016722	0					
ANR	1017440	RelationalExpression	aop . val > 0		1016722	0		>			
ANR	1017441	MemberAccess	aop . val		1016722	0					
ANR	1017442	Identifier	aop		1016722	0					
ANR	1017443	Identifier	val		1016722	1					
ANR	1017444	PrimaryExpression	0		1016722	1					
ANR	1017445	MemberAccess	aop . val		1016722	1					
ANR	1017446	Identifier	aop		1016722	0					
ANR	1017447	Identifier	val		1016722	1					
ANR	1017448	UnaryOperationExpression	- 1		1016722	2					
ANR	1017449	UnaryOperator	-		1016722	0					
ANR	1017450	PrimaryExpression	1		1016722	1					
ANR	1017451	IdentifierDeclStatement	"RSyscallItem * item = r_syscall_get ( core -> anal -> syscall , scNumber , scVector ) ;"	1908:4:57819:57895	1016722	8	True				
ANR	1017452	IdentifierDecl	"* item = r_syscall_get ( core -> anal -> syscall , scNumber , scVector )"		1016722	0					
ANR	1017453	IdentifierDeclType	RSyscallItem *		1016722	0					
ANR	1017454	Identifier	item		1016722	1					
ANR	1017455	AssignmentExpression	"* item = r_syscall_get ( core -> anal -> syscall , scNumber , scVector )"		1016722	2		=			
ANR	1017456	Identifier	item		1016722	0					
ANR	1017457	CallExpression	"r_syscall_get ( core -> anal -> syscall , scNumber , scVector )"		1016722	1					
ANR	1017458	Callee	r_syscall_get		1016722	0					
ANR	1017459	Identifier	r_syscall_get		1016722	0					
ANR	1017460	ArgumentList	core -> anal -> syscall		1016722	1					
ANR	1017461	Argument	core -> anal -> syscall		1016722	0					
ANR	1017462	PtrMemberAccess	core -> anal -> syscall		1016722	0					
ANR	1017463	PtrMemberAccess	core -> anal		1016722	0					
ANR	1017464	Identifier	core		1016722	0					
ANR	1017465	Identifier	anal		1016722	1					
ANR	1017466	Identifier	syscall		1016722	1					
ANR	1017467	Argument	scNumber		1016722	1					
ANR	1017468	Identifier	scNumber		1016722	0					
ANR	1017469	Argument	scVector		1016722	2					
ANR	1017470	Identifier	scVector		1016722	0					
ANR	1017471	IfStatement	if ( item )		1016722	9					
ANR	1017472	Condition	item	1909:8:57905:57908	1016722	0	True				
ANR	1017473	Identifier	item		1016722	0					
ANR	1017474	CompoundStatement		103:14:3078:3078	1016722	1					
ANR	1017475	Statement	r_cons_printf	1910:5:57918:57930	1016722	0	True				
ANR	1017476	Statement	(	1910:19:57932:57932	1016722	1	True				
ANR	1017477	Statement	"""0x%08"""	1910:20:57933:57939	1016722	2	True				
ANR	1017478	Statement	PFMT64x	1910:27:57940:57946	1016722	3	True				
ANR	1017479	Statement	""" %s\\n"""	1910:34:57947:57953	1016722	4	True				
ANR	1017480	Statement	","	1910:41:57954:57954	1016722	5	True				
ANR	1017481	Statement	at	1910:43:57956:57957	1016722	6	True				
ANR	1017482	Statement	","	1910:45:57958:57958	1016722	7	True				
ANR	1017483	Statement	item	1910:47:57960:57963	1016722	8	True				
ANR	1017484	Statement	->	1910:51:57964:57965	1016722	9	True				
ANR	1017485	Statement	name	1910:53:57966:57969	1016722	10	True				
ANR	1017486	Statement	)	1910:57:57970:57970	1016722	11	True				
ANR	1017487	ExpressionStatement		1910:58:57971:57971	1016722	12	True				
ANR	1017488	ExpressionStatement	"memset ( previnstr , 0 , sizeof ( previnstr ) * sizeof ( * previnstr ) )"	1912:4:57983:58046	1016722	10	True				
ANR	1017489	CallExpression	"memset ( previnstr , 0 , sizeof ( previnstr ) * sizeof ( * previnstr ) )"		1016722	0					
ANR	1017490	Callee	memset		1016722	0					
ANR	1017491	Identifier	memset		1016722	0					
ANR	1017492	ArgumentList	previnstr		1016722	1					
ANR	1017493	Argument	previnstr		1016722	0					
ANR	1017494	Identifier	previnstr		1016722	0					
ANR	1017495	Argument	0		1016722	1					
ANR	1017496	PrimaryExpression	0		1016722	0					
ANR	1017497	Argument	sizeof ( previnstr ) * sizeof ( * previnstr )		1016722	2					
ANR	1017498	MultiplicativeExpression	sizeof ( previnstr ) * sizeof ( * previnstr )		1016722	0		*			
ANR	1017499	SizeofExpression	sizeof ( previnstr )		1016722	0					
ANR	1017500	Sizeof	sizeof		1016722	0					
ANR	1017501	SizeofOperand	previnstr		1016722	1					
ANR	1017502	SizeofExpression	sizeof ( * previnstr )		1016722	1					
ANR	1017503	Sizeof	sizeof		1016722	0					
ANR	1017504	UnaryOperationExpression	* previnstr		1016722	1					
ANR	1017505	UnaryOperator	*		1016722	0					
ANR	1017506	Identifier	previnstr		1016722	1					
ANR	1017507	IfStatement	if ( searchflags )		1016722	11					
ANR	1017508	Condition	searchflags	1913:8:58079:58089	1016722	0	True				
ANR	1017509	Identifier	searchflags		1016722	0					
ANR	1017510	CompoundStatement		108:5:3266:3361	1016722	1					
ANR	1017511	IdentifierDeclStatement	"char * flag = r_str_newf ( ""%s%d_%d.%s"" , searchprefix , kwidx , count , item ? item -> name : ""syscall"" ) ;"	1914:5:58099:58194	1016722	0	True				
ANR	1017512	IdentifierDecl	"* flag = r_str_newf ( ""%s%d_%d.%s"" , searchprefix , kwidx , count , item ? item -> name : ""syscall"" )"		1016722	0					
ANR	1017513	IdentifierDeclType	char *		1016722	0					
ANR	1017514	Identifier	flag		1016722	1					
ANR	1017515	AssignmentExpression	"* flag = r_str_newf ( ""%s%d_%d.%s"" , searchprefix , kwidx , count , item ? item -> name : ""syscall"" )"		1016722	2		=			
ANR	1017516	Identifier	flag		1016722	0					
ANR	1017517	CallExpression	"r_str_newf ( ""%s%d_%d.%s"" , searchprefix , kwidx , count , item ? item -> name : ""syscall"" )"		1016722	1					
ANR	1017518	Callee	r_str_newf		1016722	0					
ANR	1017519	Identifier	r_str_newf		1016722	0					
ANR	1017520	ArgumentList	"""%s%d_%d.%s"""		1016722	1					
ANR	1017521	Argument	"""%s%d_%d.%s"""		1016722	0					
ANR	1017522	PrimaryExpression	"""%s%d_%d.%s"""		1016722	0					
ANR	1017523	Argument	searchprefix		1016722	1					
ANR	1017524	Identifier	searchprefix		1016722	0					
ANR	1017525	Argument	kwidx		1016722	2					
ANR	1017526	Identifier	kwidx		1016722	0					
ANR	1017527	Argument	count		1016722	3					
ANR	1017528	Identifier	count		1016722	0					
ANR	1017529	Argument	"item ? item -> name : ""syscall"""		1016722	4					
ANR	1017530	ConditionalExpression	"item ? item -> name : ""syscall"""		1016722	0					
ANR	1017531	Condition	item		1016722	0					
ANR	1017532	Identifier	item		1016722	0					
ANR	1017533	PtrMemberAccess	item -> name		1016722	1					
ANR	1017534	Identifier	item		1016722	0					
ANR	1017535	Identifier	name		1016722	1					
ANR	1017536	PrimaryExpression	"""syscall"""		1016722	2					
ANR	1017537	ExpressionStatement	"r_flag_set ( core -> flags , flag , at , ret )"	1915:5:58201:58240	1016722	1	True				
ANR	1017538	CallExpression	"r_flag_set ( core -> flags , flag , at , ret )"		1016722	0					
ANR	1017539	Callee	r_flag_set		1016722	0					
ANR	1017540	Identifier	r_flag_set		1016722	0					
ANR	1017541	ArgumentList	core -> flags		1016722	1					
ANR	1017542	Argument	core -> flags		1016722	0					
ANR	1017543	PtrMemberAccess	core -> flags		1016722	0					
ANR	1017544	Identifier	core		1016722	0					
ANR	1017545	Identifier	flags		1016722	1					
ANR	1017546	Argument	flag		1016722	1					
ANR	1017547	Identifier	flag		1016722	0					
ANR	1017548	Argument	at		1016722	2					
ANR	1017549	Identifier	at		1016722	0					
ANR	1017550	Argument	ret		1016722	3					
ANR	1017551	Identifier	ret		1016722	0					
ANR	1017552	ExpressionStatement	free ( flag )	1916:5:58247:58258	1016722	2	True				
ANR	1017553	CallExpression	free ( flag )		1016722	0					
ANR	1017554	Callee	free		1016722	0					
ANR	1017555	Identifier	free		1016722	0					
ANR	1017556	ArgumentList	flag		1016722	1					
ANR	1017557	Argument	flag		1016722	0					
ANR	1017558	Identifier	flag		1016722	0					
ANR	1017559	IfStatement	if ( * param -> cmd_hit )		1016722	12					
ANR	1017560	Condition	* param -> cmd_hit	1918:8:58274:58288	1016722	0	True				
ANR	1017561	UnaryOperationExpression	* param -> cmd_hit		1016722	0					
ANR	1017562	UnaryOperator	*		1016722	0					
ANR	1017563	PtrMemberAccess	param -> cmd_hit		1016722	1					
ANR	1017564	Identifier	param		1016722	0					
ANR	1017565	Identifier	cmd_hit		1016722	1					
ANR	1017566	CompoundStatement		113:5:3465:3489	1016722	1					
ANR	1017567	IdentifierDeclStatement	ut64 here = core -> offset ;	1919:5:58298:58322	1016722	0	True				
ANR	1017568	IdentifierDecl	here = core -> offset		1016722	0					
ANR	1017569	IdentifierDeclType	ut64		1016722	0					
ANR	1017570	Identifier	here		1016722	1					
ANR	1017571	AssignmentExpression	here = core -> offset		1016722	2		=			
ANR	1017572	Identifier	here		1016722	0					
ANR	1017573	PtrMemberAccess	core -> offset		1016722	1					
ANR	1017574	Identifier	core		1016722	0					
ANR	1017575	Identifier	offset		1016722	1					
ANR	1017576	ExpressionStatement	"r_core_seek ( core , at , true )"	1920:5:58329:58357	1016722	1	True				
ANR	1017577	CallExpression	"r_core_seek ( core , at , true )"		1016722	0					
ANR	1017578	Callee	r_core_seek		1016722	0					
ANR	1017579	Identifier	r_core_seek		1016722	0					
ANR	1017580	ArgumentList	core		1016722	1					
ANR	1017581	Argument	core		1016722	0					
ANR	1017582	Identifier	core		1016722	0					
ANR	1017583	Argument	at		1016722	1					
ANR	1017584	Identifier	at		1016722	0					
ANR	1017585	Argument	true		1016722	2					
ANR	1017586	Identifier	true		1016722	0					
ANR	1017587	ExpressionStatement	"r_core_cmd ( core , param -> cmd_hit , 0 )"	1921:5:58364:58400	1016722	2	True				
ANR	1017588	CallExpression	"r_core_cmd ( core , param -> cmd_hit , 0 )"		1016722	0					
ANR	1017589	Callee	r_core_cmd		1016722	0					
ANR	1017590	Identifier	r_core_cmd		1016722	0					
ANR	1017591	ArgumentList	core		1016722	1					
ANR	1017592	Argument	core		1016722	0					
ANR	1017593	Identifier	core		1016722	0					
ANR	1017594	Argument	param -> cmd_hit		1016722	1					
ANR	1017595	PtrMemberAccess	param -> cmd_hit		1016722	0					
ANR	1017596	Identifier	param		1016722	0					
ANR	1017597	Identifier	cmd_hit		1016722	1					
ANR	1017598	Argument	0		1016722	2					
ANR	1017599	PrimaryExpression	0		1016722	0					
ANR	1017600	ExpressionStatement	"r_core_seek ( core , here , true )"	1922:5:58407:58437	1016722	3	True				
ANR	1017601	CallExpression	"r_core_seek ( core , here , true )"		1016722	0					
ANR	1017602	Callee	r_core_seek		1016722	0					
ANR	1017603	Identifier	r_core_seek		1016722	0					
ANR	1017604	ArgumentList	core		1016722	1					
ANR	1017605	Argument	core		1016722	0					
ANR	1017606	Identifier	core		1016722	0					
ANR	1017607	Argument	here		1016722	1					
ANR	1017608	Identifier	here		1016722	0					
ANR	1017609	Argument	true		1016722	2					
ANR	1017610	Identifier	true		1016722	0					
ANR	1017611	ExpressionStatement	count ++	1924:4:58449:58456	1016722	13	True				
ANR	1017612	PostIncDecOperationExpression	count ++		1016722	0					
ANR	1017613	Identifier	count		1016722	0					
ANR	1017614	IncDec	++		1016722	1					
ANR	1017615	IfStatement	if ( search -> maxhits > 0 && count >= search -> maxhits )		1016722	14					
ANR	1017616	Condition	search -> maxhits > 0 && count >= search -> maxhits	1925:8:58466:58512	1016722	0	True				
ANR	1017617	AndExpression	search -> maxhits > 0 && count >= search -> maxhits		1016722	0		&&			
ANR	1017618	RelationalExpression	search -> maxhits > 0		1016722	0		>			
ANR	1017619	PtrMemberAccess	search -> maxhits		1016722	0					
ANR	1017620	Identifier	search		1016722	0					
ANR	1017621	Identifier	maxhits		1016722	1					
ANR	1017622	PrimaryExpression	0		1016722	1					
ANR	1017623	RelationalExpression	count >= search -> maxhits		1016722	1		>=			
ANR	1017624	Identifier	count		1016722	0					
ANR	1017625	PtrMemberAccess	search -> maxhits		1016722	1					
ANR	1017626	Identifier	search		1016722	0					
ANR	1017627	Identifier	maxhits		1016722	1					
ANR	1017628	CompoundStatement		119:57:3682:3682	1016722	1					
ANR	1017629	ExpressionStatement	r_anal_op_fini ( & aop )	1926:5:58522:58543	1016722	0	True				
ANR	1017630	CallExpression	r_anal_op_fini ( & aop )		1016722	0					
ANR	1017631	Callee	r_anal_op_fini		1016722	0					
ANR	1017632	Identifier	r_anal_op_fini		1016722	0					
ANR	1017633	ArgumentList	& aop		1016722	1					
ANR	1017634	Argument	& aop		1016722	0					
ANR	1017635	UnaryOperationExpression	& aop		1016722	0					
ANR	1017636	UnaryOperator	&		1016722	0					
ANR	1017637	Identifier	aop		1016722	1					
ANR	1017638	BreakStatement	break ;	1927:5:58550:58555	1016722	1	True				
ANR	1017639	ExpressionStatement	syscallNumber = 0	1929:4:58567:58584	1016722	15	True				
ANR	1017640	AssignmentExpression	syscallNumber = 0		1016722	0		=			
ANR	1017641	Identifier	syscallNumber		1016722	0					
ANR	1017642	PrimaryExpression	0		1016722	1					
ANR	1017643	IdentifierDeclStatement	int inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1 ;	1931:3:58594:58663	1016722	9	True				
ANR	1017644	IdentifierDecl	inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		1016722	0					
ANR	1017645	IdentifierDeclType	int		1016722	0					
ANR	1017646	Identifier	inc		1016722	1					
ANR	1017647	AssignmentExpression	inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		1016722	2		=			
ANR	1017648	Identifier	inc		1016722	0					
ANR	1017649	ConditionalExpression	( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		1016722	1					
ANR	1017650	Condition	core -> search -> align > 0		1016722	0					
ANR	1017651	RelationalExpression	core -> search -> align > 0		1016722	0		>			
ANR	1017652	PtrMemberAccess	core -> search -> align		1016722	0					
ANR	1017653	PtrMemberAccess	core -> search		1016722	0					
ANR	1017654	Identifier	core		1016722	0					
ANR	1017655	Identifier	search		1016722	1					
ANR	1017656	Identifier	align		1016722	1					
ANR	1017657	PrimaryExpression	0		1016722	1					
ANR	1017658	AdditiveExpression	core -> search -> align - 1		1016722	1		-			
ANR	1017659	PtrMemberAccess	core -> search -> align		1016722	0					
ANR	1017660	PtrMemberAccess	core -> search		1016722	0					
ANR	1017661	Identifier	core		1016722	0					
ANR	1017662	Identifier	search		1016722	1					
ANR	1017663	Identifier	align		1016722	1					
ANR	1017664	PrimaryExpression	1		1016722	1					
ANR	1017665	AdditiveExpression	ret - 1		1016722	2		-			
ANR	1017666	Identifier	ret		1016722	0					
ANR	1017667	PrimaryExpression	1		1016722	1					
ANR	1017668	IfStatement	if ( inc < 0 )		1016722	10					
ANR	1017669	Condition	inc < 0	1932:7:58672:58678	1016722	0	True				
ANR	1017670	RelationalExpression	inc < 0		1016722	0		<			
ANR	1017671	Identifier	inc		1016722	0					
ANR	1017672	PrimaryExpression	0		1016722	1					
ANR	1017673	CompoundStatement		126:16:3848:3848	1016722	1					
ANR	1017674	ExpressionStatement	inc = minopcode	1933:4:58687:58702	1016722	0	True				
ANR	1017675	AssignmentExpression	inc = minopcode		1016722	0		=			
ANR	1017676	Identifier	inc		1016722	0					
ANR	1017677	Identifier	minopcode		1016722	1					
ANR	1017678	ExpressionStatement	i += inc	1935:3:58712:58720	1016722	11	True				
ANR	1017679	AssignmentExpression	i += inc		1016722	0		+=			
ANR	1017680	Identifier	i		1016722	0					
ANR	1017681	Identifier	inc		1016722	1					
ANR	1017682	ExpressionStatement	at += inc	1936:3:58725:58734	1016722	12	True				
ANR	1017683	AssignmentExpression	at += inc		1016722	0		+=			
ANR	1017684	Identifier	at		1016722	0					
ANR	1017685	Identifier	inc		1016722	1					
ANR	1017686	ExpressionStatement	r_anal_op_fini ( & aop )	1937:3:58739:58760	1016722	13	True				
ANR	1017687	CallExpression	r_anal_op_fini ( & aop )		1016722	0					
ANR	1017688	Callee	r_anal_op_fini		1016722	0					
ANR	1017689	Identifier	r_anal_op_fini		1016722	0					
ANR	1017690	ArgumentList	& aop		1016722	1					
ANR	1017691	Argument	& aop		1016722	0					
ANR	1017692	UnaryOperationExpression	& aop		1016722	0					
ANR	1017693	UnaryOperator	&		1016722	0					
ANR	1017694	Identifier	aop		1016722	1					
ANR	1017695	Label	beach :	1940:0:58769:58774	1016722	40	True				
ANR	1017696	Identifier	beach		1016722	0					
ANR	1017697	ExpressionStatement	"r_core_seek ( core , oldoff , 1 )"	1941:1:58777:58806	1016722	41	True				
ANR	1017698	CallExpression	"r_core_seek ( core , oldoff , 1 )"		1016722	0					
ANR	1017699	Callee	r_core_seek		1016722	0					
ANR	1017700	Identifier	r_core_seek		1016722	0					
ANR	1017701	ArgumentList	core		1016722	1					
ANR	1017702	Argument	core		1016722	0					
ANR	1017703	Identifier	core		1016722	0					
ANR	1017704	Argument	oldoff		1016722	1					
ANR	1017705	Identifier	oldoff		1016722	0					
ANR	1017706	Argument	1		1016722	2					
ANR	1017707	PrimaryExpression	1		1016722	0					
ANR	1017708	ExpressionStatement	r_anal_esil_free ( esil )	1942:1:58809:58832	1016722	42	True				
ANR	1017709	CallExpression	r_anal_esil_free ( esil )		1016722	0					
ANR	1017710	Callee	r_anal_esil_free		1016722	0					
ANR	1017711	Identifier	r_anal_esil_free		1016722	0					
ANR	1017712	ArgumentList	esil		1016722	1					
ANR	1017713	Argument	esil		1016722	0					
ANR	1017714	Identifier	esil		1016722	0					
ANR	1017715	ExpressionStatement	r_cons_break_pop ( )	1943:1:58835:58854	1016722	43	True				
ANR	1017716	CallExpression	r_cons_break_pop ( )		1016722	0					
ANR	1017717	Callee	r_cons_break_pop		1016722	0					
ANR	1017718	Identifier	r_cons_break_pop		1016722	0					
ANR	1017719	ArgumentList			1016722	1					
ANR	1017720	ExpressionStatement	free ( buf )	1944:1:58857:58867	1016722	44	True				
ANR	1017721	CallExpression	free ( buf )		1016722	0					
ANR	1017722	Callee	free		1016722	0					
ANR	1017723	Identifier	free		1016722	0					
ANR	1017724	ArgumentList	buf		1016722	1					
ANR	1017725	Argument	buf		1016722	0					
ANR	1017726	Identifier	buf		1016722	0					
ANR	1017727	ExpressionStatement	free ( esp32 )	1945:1:58870:58882	1016722	45	True				
ANR	1017728	CallExpression	free ( esp32 )		1016722	0					
ANR	1017729	Callee	free		1016722	0					
ANR	1017730	Identifier	free		1016722	0					
ANR	1017731	ArgumentList	esp32		1016722	1					
ANR	1017732	Argument	esp32		1016722	0					
ANR	1017733	Identifier	esp32		1016722	0					
ANR	1017734	ExpressionStatement	free ( esp )	1946:1:58885:58895	1016722	46	True				
ANR	1017735	CallExpression	free ( esp )		1016722	0					
ANR	1017736	Callee	free		1016722	0					
ANR	1017737	Identifier	free		1016722	0					
ANR	1017738	ArgumentList	esp		1016722	1					
ANR	1017739	Argument	esp		1016722	0					
ANR	1017740	Identifier	esp		1016722	0					
ANR	1017741	ReturnType	static void		1016722	1					
ANR	1017742	Identifier	do_syscall_search		1016722	2					
ANR	1017743	ParameterList	"RCore * core , struct search_parameters * param"		1016722	3					
ANR	1017744	Parameter	RCore * core	1807:30:54786:54796	1016722	0	True				
ANR	1017745	ParameterType	RCore *		1016722	0					
ANR	1017746	Identifier	core		1016722	1					
ANR	1017747	Parameter	struct search_parameters * param	1807:43:54799:54829	1016722	1	True				
ANR	1017748	ParameterType	struct search_parameters *		1016722	0					
ANR	1017749	Identifier	param		1016722	1					
ANR	1017750	CFGEntryNode	ENTRY		1016722		True				
ANR	1017751	CFGExitNode	EXIT		1016722		True				
ANR	1017752	Symbol	aop		1016722						
ANR	1017753	Symbol	* map		1016722						
ANR	1017754	Symbol	mininstrsz		1016722						
ANR	1017755	Symbol	core -> offset		1016722						
ANR	1017756	Symbol	minopcode		1016722						
ANR	1017757	Symbol	addrsize		1016722						
ANR	1017758	Symbol	syscallNumber		1016722						
ANR	1017759	Symbol	scVector		1016722						
ANR	1017760	Symbol	r_anal_op		1016722						
ANR	1017761	Symbol	core -> blocksize		1016722						
ANR	1017762	Symbol	emulateSyscallPrelude		1016722						
ANR	1017763	Symbol	item		1016722						
ANR	1017764	Symbol	iter		1016722						
ANR	1017765	Symbol	& aop . esil		1016722						
ANR	1017766	Symbol	iotrap		1016722						
ANR	1017767	Symbol	& aop		1016722						
ANR	1017768	Symbol	at		1016722						
ANR	1017769	Symbol	* previnstr		1016722						
ANR	1017770	Symbol	r_config_get_i		1016722						
ANR	1017771	Symbol	* * param		1016722						
ANR	1017772	Symbol	R_ANAL_OP_TYPE_SWI		1016722						
ANR	1017773	Symbol	flag		1016722						
ANR	1017774	Symbol	r_syscall_get		1016722						
ANR	1017775	Symbol	* core		1016722						
ANR	1017776	Symbol	core -> anal		1016722						
ANR	1017777	Symbol	search		1016722						
ANR	1017778	Symbol	r_cons_is_breaked		1016722						
ANR	1017779	Symbol	* param -> cmd_hit		1016722						
ANR	1017780	Symbol	core -> io		1016722						
ANR	1017781	Symbol	scNumber		1016722						
ANR	1017782	Symbol	map		1016722						
ANR	1017783	Symbol	R_ANAL_ARCHINFO_MIN_OP_SIZE		1016722						
ANR	1017784	Symbol	malloc		1016722						
ANR	1017785	Symbol	oldoff		1016722						
ANR	1017786	Symbol	core -> anal -> bits		1016722						
ANR	1017787	Symbol	R_STRBUF_SAFEGET		1016722						
ANR	1017788	Symbol	i		1016722						
ANR	1017789	Symbol	core -> flags		1016722						
ANR	1017790	Symbol	r_itv_end		1016722						
ANR	1017791	Symbol	buf		1016722						
ANR	1017792	Symbol	* core -> anal		1016722						
ANR	1017793	Symbol	item -> name		1016722						
ANR	1017794	Symbol	core -> search -> n_kws		1016722						
ANR	1017795	Symbol	R_MAX		1016722						
ANR	1017796	Symbol	r_anal_esil_new		1016722						
ANR	1017797	Symbol	r_reg_64_to_32		1016722						
ANR	1017798	Symbol	to		1016722						
ANR	1017799	Symbol	esil		1016722						
ANR	1017800	Symbol	core -> anal -> reg		1016722						
ANR	1017801	Symbol	curpos		1016722						
ANR	1017802	Symbol	esp		1016722						
ANR	1017803	Symbol	* curpos		1016722						
ANR	1017804	Symbol	search -> maxhits		1016722						
ANR	1017805	Symbol	stacksize		1016722						
ANR	1017806	Symbol	r_anal_archinfo		1016722						
ANR	1017807	Symbol	aop . type		1016722						
ANR	1017808	Symbol	MAXINSTR		1016722						
ANR	1017809	Symbol	align		1016722						
ANR	1017810	Symbol	core -> search -> align		1016722						
ANR	1017811	Symbol	reg		1016722						
ANR	1017812	Symbol	curpc		1016722						
ANR	1017813	Symbol	from		1016722						
ANR	1017814	Symbol	ret		1016722						
ANR	1017815	Symbol	NULL		1016722						
ANR	1017816	Symbol	esp32		1016722						
ANR	1017817	Symbol	count		1016722						
ANR	1017818	Symbol	* core -> search		1016722						
ANR	1017819	Symbol	R_ANAL_OP_TYPE_MOV		1016722						
ANR	1017820	Symbol	es		1016722						
ANR	1017821	Symbol	* param		1016722						
ANR	1017822	Symbol	nb_opcodes		1016722						
ANR	1017823	Symbol	core		1016722						
ANR	1017824	Symbol	r_reg_get_name		1016722						
ANR	1017825	Symbol	strstr		1016722						
ANR	1017826	Symbol	true		1016722						
ANR	1017827	Symbol	idx		1016722						
ANR	1017828	Symbol	searchprefix		1016722						
ANR	1017829	Symbol	R_REG_NAME_SN		1016722						
ANR	1017830	Symbol	R_ANAL_OP_MASK_ESIL		1016722						
ANR	1017831	Symbol	here		1016722						
ANR	1017832	Symbol	map -> itv		1016722						
ANR	1017833	Symbol	kwidx		1016722						
ANR	1017834	Symbol	calloc		1016722						
ANR	1017835	Symbol	r_str_newf		1016722						
ANR	1017836	Symbol	param		1016722						
ANR	1017837	Symbol	* item		1016722						
ANR	1017838	Symbol	map -> itv . addr		1016722						
ANR	1017839	Symbol	UT64_MAX		1016722						
ANR	1017840	Symbol	core -> search		1016722						
ANR	1017841	Symbol	* * core		1016722						
ANR	1017842	Symbol	inc		1016722						
ANR	1017843	Symbol	core -> config		1016722						
ANR	1017844	Symbol	searchflags		1016722						
ANR	1017845	Symbol	core -> anal -> syscall		1016722						
ANR	1017846	Symbol	* search		1016722						
ANR	1017847	Symbol	a0		1016722						
ANR	1017848	Symbol	aop . val		1016722						
ANR	1017849	Symbol	nbytes		1016722						
ANR	1017850	Symbol	bsize		1016722						
ANR	1017851	Symbol	previnstr		1016722						
ANR	1017852	Symbol	param -> cmd_hit		1016722						
ANR	1017853	Function	do_ref_search	1949:0:58900:60336							
ANR	1017854	FunctionDef	"do_ref_search (RCore * core , ut64 addr , ut64 from , ut64 to , struct search_parameters * param)"		1017853	0					
ANR	1017855	CompoundStatement		1949:102:59002:60336	1017853	0					
ANR	1017856	IdentifierDeclStatement	const int size = 12 ;	1950:1:59005:59024	1017853	0	True				
ANR	1017857	IdentifierDecl	size = 12		1017853	0					
ANR	1017858	IdentifierDeclType	const int		1017853	0					
ANR	1017859	Identifier	size		1017853	1					
ANR	1017860	AssignmentExpression	size = 12		1017853	2		=			
ANR	1017861	Identifier	size		1017853	0					
ANR	1017862	PrimaryExpression	12		1017853	1					
ANR	1017863	IdentifierDeclStatement	char str [ 512 ] ;	1951:1:59027:59040	1017853	1	True				
ANR	1017864	IdentifierDecl	str [ 512 ]		1017853	0					
ANR	1017865	IdentifierDeclType	char [ 512 ]		1017853	0					
ANR	1017866	Identifier	str		1017853	1					
ANR	1017867	PrimaryExpression	512		1017853	2					
ANR	1017868	IdentifierDeclStatement	char * comment ;	1952:1:59043:59056	1017853	2	True				
ANR	1017869	IdentifierDecl	* comment		1017853	0					
ANR	1017870	IdentifierDeclType	char *		1017853	0					
ANR	1017871	Identifier	comment		1017853	1					
ANR	1017872	IdentifierDeclStatement	RAnalFunction * fcn ;	1953:1:59059:59077	1017853	3	True				
ANR	1017873	IdentifierDecl	* fcn		1017853	0					
ANR	1017874	IdentifierDeclType	RAnalFunction *		1017853	0					
ANR	1017875	Identifier	fcn		1017853	1					
ANR	1017876	IdentifierDeclStatement	RAnalRef * ref ;	1954:1:59080:59093	1017853	4	True				
ANR	1017877	IdentifierDecl	* ref		1017853	0					
ANR	1017878	IdentifierDeclType	RAnalRef *		1017853	0					
ANR	1017879	Identifier	ref		1017853	1					
ANR	1017880	IdentifierDeclStatement	RListIter * iter ;	1955:1:59096:59111	1017853	5	True				
ANR	1017881	IdentifierDecl	* iter		1017853	0					
ANR	1017882	IdentifierDeclType	RListIter *		1017853	0					
ANR	1017883	Identifier	iter		1017853	1					
ANR	1017884	IdentifierDeclStatement	ut8 buf [ 12 ] ;	1956:1:59114:59125	1017853	6	True				
ANR	1017885	IdentifierDecl	buf [ 12 ]		1017853	0					
ANR	1017886	IdentifierDeclType	ut8 [ 12 ]		1017853	0					
ANR	1017887	Identifier	buf		1017853	1					
ANR	1017888	PrimaryExpression	12		1017853	2					
ANR	1017889	IdentifierDeclStatement	RAsmOp asmop ;	1957:1:59128:59140	1017853	7	True				
ANR	1017890	IdentifierDecl	asmop		1017853	0					
ANR	1017891	IdentifierDeclType	RAsmOp		1017853	0					
ANR	1017892	Identifier	asmop		1017853	1					
ANR	1017893	IdentifierDeclStatement	"RList * list = r_anal_xrefs_get ( core -> anal , addr ) ;"	1958:1:59143:59192	1017853	8	True				
ANR	1017894	IdentifierDecl	"* list = r_anal_xrefs_get ( core -> anal , addr )"		1017853	0					
ANR	1017895	IdentifierDeclType	RList *		1017853	0					
ANR	1017896	Identifier	list		1017853	1					
ANR	1017897	AssignmentExpression	"* list = r_anal_xrefs_get ( core -> anal , addr )"		1017853	2		=			
ANR	1017898	Identifier	list		1017853	0					
ANR	1017899	CallExpression	"r_anal_xrefs_get ( core -> anal , addr )"		1017853	1					
ANR	1017900	Callee	r_anal_xrefs_get		1017853	0					
ANR	1017901	Identifier	r_anal_xrefs_get		1017853	0					
ANR	1017902	ArgumentList	core -> anal		1017853	1					
ANR	1017903	Argument	core -> anal		1017853	0					
ANR	1017904	PtrMemberAccess	core -> anal		1017853	0					
ANR	1017905	Identifier	core		1017853	0					
ANR	1017906	Identifier	anal		1017853	1					
ANR	1017907	Argument	addr		1017853	1					
ANR	1017908	Identifier	addr		1017853	0					
ANR	1017909	IfStatement	if ( list )		1017853	9					
ANR	1017910	Condition	list	1959:5:59199:59202	1017853	0	True				
ANR	1017911	Identifier	list		1017853	0					
ANR	1017912	CompoundStatement		11:11:202:202	1017853	1					
ANR	1017913	Statement	r_list_foreach	1960:2:59209:59222	1017853	0	True				
ANR	1017914	Statement	(	1960:17:59224:59224	1017853	1	True				
ANR	1017915	Statement	list	1960:18:59225:59228	1017853	2	True				
ANR	1017916	Statement	","	1960:22:59229:59229	1017853	3	True				
ANR	1017917	Statement	iter	1960:24:59231:59234	1017853	4	True				
ANR	1017918	Statement	","	1960:28:59235:59235	1017853	5	True				
ANR	1017919	Statement	ref	1960:30:59237:59239	1017853	6	True				
ANR	1017920	Statement	)	1960:33:59240:59240	1017853	7	True				
ANR	1017921	CompoundStatement		22:3:764:924	1017853	8					
ANR	1017922	ExpressionStatement	"r_io_read_at ( core -> io , ref -> addr , buf , size )"	1961:3:59247:59292	1017853	0	True				
ANR	1017923	CallExpression	"r_io_read_at ( core -> io , ref -> addr , buf , size )"		1017853	0					
ANR	1017924	Callee	r_io_read_at		1017853	0					
ANR	1017925	Identifier	r_io_read_at		1017853	0					
ANR	1017926	ArgumentList	core -> io		1017853	1					
ANR	1017927	Argument	core -> io		1017853	0					
ANR	1017928	PtrMemberAccess	core -> io		1017853	0					
ANR	1017929	Identifier	core		1017853	0					
ANR	1017930	Identifier	io		1017853	1					
ANR	1017931	Argument	ref -> addr		1017853	1					
ANR	1017932	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1017933	Identifier	ref		1017853	0					
ANR	1017934	Identifier	addr		1017853	1					
ANR	1017935	Argument	buf		1017853	2					
ANR	1017936	Identifier	buf		1017853	0					
ANR	1017937	Argument	size		1017853	3					
ANR	1017938	Identifier	size		1017853	0					
ANR	1017939	ExpressionStatement	"r_asm_set_pc ( core -> assembler , ref -> addr )"	1962:3:59297:59338	1017853	1	True				
ANR	1017940	CallExpression	"r_asm_set_pc ( core -> assembler , ref -> addr )"		1017853	0					
ANR	1017941	Callee	r_asm_set_pc		1017853	0					
ANR	1017942	Identifier	r_asm_set_pc		1017853	0					
ANR	1017943	ArgumentList	core -> assembler		1017853	1					
ANR	1017944	Argument	core -> assembler		1017853	0					
ANR	1017945	PtrMemberAccess	core -> assembler		1017853	0					
ANR	1017946	Identifier	core		1017853	0					
ANR	1017947	Identifier	assembler		1017853	1					
ANR	1017948	Argument	ref -> addr		1017853	1					
ANR	1017949	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1017950	Identifier	ref		1017853	0					
ANR	1017951	Identifier	addr		1017853	1					
ANR	1017952	ExpressionStatement	"r_asm_disassemble ( core -> assembler , & asmop , buf , size )"	1963:3:59343:59397	1017853	2	True				
ANR	1017953	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , size )"		1017853	0					
ANR	1017954	Callee	r_asm_disassemble		1017853	0					
ANR	1017955	Identifier	r_asm_disassemble		1017853	0					
ANR	1017956	ArgumentList	core -> assembler		1017853	1					
ANR	1017957	Argument	core -> assembler		1017853	0					
ANR	1017958	PtrMemberAccess	core -> assembler		1017853	0					
ANR	1017959	Identifier	core		1017853	0					
ANR	1017960	Identifier	assembler		1017853	1					
ANR	1017961	Argument	& asmop		1017853	1					
ANR	1017962	UnaryOperationExpression	& asmop		1017853	0					
ANR	1017963	UnaryOperator	&		1017853	0					
ANR	1017964	Identifier	asmop		1017853	1					
ANR	1017965	Argument	buf		1017853	2					
ANR	1017966	Identifier	buf		1017853	0					
ANR	1017967	Argument	size		1017853	3					
ANR	1017968	Identifier	size		1017853	0					
ANR	1017969	ExpressionStatement	"fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"	1964:3:59402:59452	1017853	3	True				
ANR	1017970	AssignmentExpression	"fcn = r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"		1017853	0		=			
ANR	1017971	Identifier	fcn		1017853	0					
ANR	1017972	CallExpression	"r_anal_get_fcn_in ( core -> anal , ref -> addr , 0 )"		1017853	1					
ANR	1017973	Callee	r_anal_get_fcn_in		1017853	0					
ANR	1017974	Identifier	r_anal_get_fcn_in		1017853	0					
ANR	1017975	ArgumentList	core -> anal		1017853	1					
ANR	1017976	Argument	core -> anal		1017853	0					
ANR	1017977	PtrMemberAccess	core -> anal		1017853	0					
ANR	1017978	Identifier	core		1017853	0					
ANR	1017979	Identifier	anal		1017853	1					
ANR	1017980	Argument	ref -> addr		1017853	1					
ANR	1017981	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1017982	Identifier	ref		1017853	0					
ANR	1017983	Identifier	addr		1017853	1					
ANR	1017984	Argument	0		1017853	2					
ANR	1017985	PrimaryExpression	0		1017853	0					
ANR	1017986	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( core -> anal , ref -> addr ) ;"	1965:3:59457:59514	1017853	4	True				
ANR	1017987	IdentifierDecl	"* hint = r_anal_hint_get ( core -> anal , ref -> addr )"		1017853	0					
ANR	1017988	IdentifierDeclType	RAnalHint *		1017853	0					
ANR	1017989	Identifier	hint		1017853	1					
ANR	1017990	AssignmentExpression	"* hint = r_anal_hint_get ( core -> anal , ref -> addr )"		1017853	2		=			
ANR	1017991	Identifier	hint		1017853	0					
ANR	1017992	CallExpression	"r_anal_hint_get ( core -> anal , ref -> addr )"		1017853	1					
ANR	1017993	Callee	r_anal_hint_get		1017853	0					
ANR	1017994	Identifier	r_anal_hint_get		1017853	0					
ANR	1017995	ArgumentList	core -> anal		1017853	1					
ANR	1017996	Argument	core -> anal		1017853	0					
ANR	1017997	PtrMemberAccess	core -> anal		1017853	0					
ANR	1017998	Identifier	core		1017853	0					
ANR	1017999	Identifier	anal		1017853	1					
ANR	1018000	Argument	ref -> addr		1017853	1					
ANR	1018001	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1018002	Identifier	ref		1017853	0					
ANR	1018003	Identifier	addr		1017853	1					
ANR	1018004	ExpressionStatement	"r_parse_filter ( core -> parser , ref -> addr , core -> flags , hint , r_strbuf_get ( & asmop . buf_asm ) , str , sizeof ( str ) , core -> print -> big_endian )"	1966:3:59519:59657	1017853	5	True				
ANR	1018005	CallExpression	"r_parse_filter ( core -> parser , ref -> addr , core -> flags , hint , r_strbuf_get ( & asmop . buf_asm ) , str , sizeof ( str ) , core -> print -> big_endian )"		1017853	0					
ANR	1018006	Callee	r_parse_filter		1017853	0					
ANR	1018007	Identifier	r_parse_filter		1017853	0					
ANR	1018008	ArgumentList	core -> parser		1017853	1					
ANR	1018009	Argument	core -> parser		1017853	0					
ANR	1018010	PtrMemberAccess	core -> parser		1017853	0					
ANR	1018011	Identifier	core		1017853	0					
ANR	1018012	Identifier	parser		1017853	1					
ANR	1018013	Argument	ref -> addr		1017853	1					
ANR	1018014	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1018015	Identifier	ref		1017853	0					
ANR	1018016	Identifier	addr		1017853	1					
ANR	1018017	Argument	core -> flags		1017853	2					
ANR	1018018	PtrMemberAccess	core -> flags		1017853	0					
ANR	1018019	Identifier	core		1017853	0					
ANR	1018020	Identifier	flags		1017853	1					
ANR	1018021	Argument	hint		1017853	3					
ANR	1018022	Identifier	hint		1017853	0					
ANR	1018023	Argument	r_strbuf_get ( & asmop . buf_asm )		1017853	4					
ANR	1018024	CallExpression	r_strbuf_get ( & asmop . buf_asm )		1017853	0					
ANR	1018025	Callee	r_strbuf_get		1017853	0					
ANR	1018026	Identifier	r_strbuf_get		1017853	0					
ANR	1018027	ArgumentList	& asmop . buf_asm		1017853	1					
ANR	1018028	Argument	& asmop . buf_asm		1017853	0					
ANR	1018029	UnaryOperationExpression	& asmop . buf_asm		1017853	0					
ANR	1018030	UnaryOperator	&		1017853	0					
ANR	1018031	MemberAccess	asmop . buf_asm		1017853	1					
ANR	1018032	Identifier	asmop		1017853	0					
ANR	1018033	Identifier	buf_asm		1017853	1					
ANR	1018034	Argument	str		1017853	5					
ANR	1018035	Identifier	str		1017853	0					
ANR	1018036	Argument	sizeof ( str )		1017853	6					
ANR	1018037	SizeofExpression	sizeof ( str )		1017853	0					
ANR	1018038	Sizeof	sizeof		1017853	0					
ANR	1018039	SizeofOperand	str		1017853	1					
ANR	1018040	Argument	core -> print -> big_endian		1017853	7					
ANR	1018041	PtrMemberAccess	core -> print -> big_endian		1017853	0					
ANR	1018042	PtrMemberAccess	core -> print		1017853	0					
ANR	1018043	Identifier	core		1017853	0					
ANR	1018044	Identifier	print		1017853	1					
ANR	1018045	Identifier	big_endian		1017853	1					
ANR	1018046	ExpressionStatement	r_anal_hint_free ( hint )	1968:3:59662:59685	1017853	6	True				
ANR	1018047	CallExpression	r_anal_hint_free ( hint )		1017853	0					
ANR	1018048	Callee	r_anal_hint_free		1017853	0					
ANR	1018049	Identifier	r_anal_hint_free		1017853	0					
ANR	1018050	ArgumentList	hint		1017853	1					
ANR	1018051	Argument	hint		1017853	0					
ANR	1018052	Identifier	hint		1017853	0					
ANR	1018053	ExpressionStatement	"comment = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , ref -> addr )"	1969:3:59690:59762	1017853	7	True				
ANR	1018054	AssignmentExpression	"comment = r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , ref -> addr )"		1017853	0		=			
ANR	1018055	Identifier	comment		1017853	0					
ANR	1018056	CallExpression	"r_meta_get_string ( core -> anal , R_META_TYPE_COMMENT , ref -> addr )"		1017853	1					
ANR	1018057	Callee	r_meta_get_string		1017853	0					
ANR	1018058	Identifier	r_meta_get_string		1017853	0					
ANR	1018059	ArgumentList	core -> anal		1017853	1					
ANR	1018060	Argument	core -> anal		1017853	0					
ANR	1018061	PtrMemberAccess	core -> anal		1017853	0					
ANR	1018062	Identifier	core		1017853	0					
ANR	1018063	Identifier	anal		1017853	1					
ANR	1018064	Argument	R_META_TYPE_COMMENT		1017853	1					
ANR	1018065	Identifier	R_META_TYPE_COMMENT		1017853	0					
ANR	1018066	Argument	ref -> addr		1017853	2					
ANR	1018067	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1018068	Identifier	ref		1017853	0					
ANR	1018069	Identifier	addr		1017853	1					
ANR	1018070	IdentifierDeclStatement	"char * buf_fcn = comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" ) ;"	1970:3:59767:59927	1017853	8	True				
ANR	1018071	IdentifierDecl	"* buf_fcn = comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		1017853	0					
ANR	1018072	IdentifierDeclType	char *		1017853	0					
ANR	1018073	Identifier	buf_fcn		1017853	1					
ANR	1018074	AssignmentExpression	"* buf_fcn = comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		1017853	2		=			
ANR	1018075	Identifier	buf_fcn		1017853	0					
ANR	1018076	ConditionalExpression	"comment ? r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) ) : r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		1017853	1					
ANR	1018077	Condition	comment		1017853	0					
ANR	1018078	Identifier	comment		1017853	0					
ANR	1018079	CallExpression	"r_str_newf ( ""%s; %s"" , fcn ? fcn -> name : ""(nofunc)"" , strtok ( comment , ""\\n"" ) )"		1017853	1					
ANR	1018080	Callee	r_str_newf		1017853	0					
ANR	1018081	Identifier	r_str_newf		1017853	0					
ANR	1018082	ArgumentList	"""%s; %s"""		1017853	1					
ANR	1018083	Argument	"""%s; %s"""		1017853	0					
ANR	1018084	PrimaryExpression	"""%s; %s"""		1017853	0					
ANR	1018085	Argument	"fcn ? fcn -> name : ""(nofunc)"""		1017853	1					
ANR	1018086	ConditionalExpression	"fcn ? fcn -> name : ""(nofunc)"""		1017853	0					
ANR	1018087	Condition	fcn		1017853	0					
ANR	1018088	Identifier	fcn		1017853	0					
ANR	1018089	PtrMemberAccess	fcn -> name		1017853	1					
ANR	1018090	Identifier	fcn		1017853	0					
ANR	1018091	Identifier	name		1017853	1					
ANR	1018092	PrimaryExpression	"""(nofunc)"""		1017853	2					
ANR	1018093	Argument	"strtok ( comment , ""\\n"" )"		1017853	2					
ANR	1018094	CallExpression	"strtok ( comment , ""\\n"" )"		1017853	0					
ANR	1018095	Callee	strtok		1017853	0					
ANR	1018096	Identifier	strtok		1017853	0					
ANR	1018097	ArgumentList	comment		1017853	1					
ANR	1018098	Argument	comment		1017853	0					
ANR	1018099	Identifier	comment		1017853	0					
ANR	1018100	Argument	"""\\n"""		1017853	1					
ANR	1018101	PrimaryExpression	"""\\n"""		1017853	0					
ANR	1018102	CallExpression	"r_str_newf ( ""%s"" , fcn ? fcn -> name : ""(nofunc)"" )"		1017853	2					
ANR	1018103	Callee	r_str_newf		1017853	0					
ANR	1018104	Identifier	r_str_newf		1017853	0					
ANR	1018105	ArgumentList	"""%s"""		1017853	1					
ANR	1018106	Argument	"""%s"""		1017853	0					
ANR	1018107	PrimaryExpression	"""%s"""		1017853	0					
ANR	1018108	Argument	"fcn ? fcn -> name : ""(nofunc)"""		1017853	1					
ANR	1018109	ConditionalExpression	"fcn ? fcn -> name : ""(nofunc)"""		1017853	0					
ANR	1018110	Condition	fcn		1017853	0					
ANR	1018111	Identifier	fcn		1017853	0					
ANR	1018112	PtrMemberAccess	fcn -> name		1017853	1					
ANR	1018113	Identifier	fcn		1017853	0					
ANR	1018114	Identifier	name		1017853	1					
ANR	1018115	PrimaryExpression	"""(nofunc)"""		1017853	2					
ANR	1018116	IfStatement	if ( from <= ref -> addr && to >= ref -> addr )		1017853	9					
ANR	1018117	Condition	from <= ref -> addr && to >= ref -> addr	1973:7:59936:59971	1017853	0	True				
ANR	1018118	AndExpression	from <= ref -> addr && to >= ref -> addr		1017853	0		&&			
ANR	1018119	RelationalExpression	from <= ref -> addr		1017853	0		<=			
ANR	1018120	Identifier	from		1017853	0					
ANR	1018121	PtrMemberAccess	ref -> addr		1017853	1					
ANR	1018122	Identifier	ref		1017853	0					
ANR	1018123	Identifier	addr		1017853	1					
ANR	1018124	RelationalExpression	to >= ref -> addr		1017853	1		>=			
ANR	1018125	Identifier	to		1017853	0					
ANR	1018126	PtrMemberAccess	ref -> addr		1017853	1					
ANR	1018127	Identifier	ref		1017853	0					
ANR	1018128	Identifier	addr		1017853	1					
ANR	1018129	CompoundStatement		25:45:971:971	1017853	1					
ANR	1018130	Statement	r_cons_printf	1974:4:59980:59992	1017853	0	True				
ANR	1018131	Statement	(	1974:18:59994:59994	1017853	1	True				
ANR	1018132	Statement	"""%s 0x%"""	1974:19:59995:60002	1017853	2	True				
ANR	1018133	Statement	PFMT64x	1974:28:60004:60010	1017853	3	True				
ANR	1018134	Statement	""" [%s] %s\\n"""	1974:36:60012:60023	1017853	4	True				
ANR	1018135	Statement	","	1974:48:60024:60024	1017853	5	True				
ANR	1018136	Statement	buf_fcn	1975:6:60032:60038	1017853	6	True				
ANR	1018137	Statement	","	1975:13:60039:60039	1017853	7	True				
ANR	1018138	Statement	ref	1975:15:60041:60043	1017853	8	True				
ANR	1018139	Statement	->	1975:18:60044:60045	1017853	9	True				
ANR	1018140	Statement	addr	1975:20:60046:60049	1017853	10	True				
ANR	1018141	Statement	","	1975:24:60050:60050	1017853	11	True				
ANR	1018142	Statement	r_anal_xrefs_type_tostring	1975:26:60052:60077	1017853	12	True				
ANR	1018143	Statement	(	1975:53:60079:60079	1017853	13	True				
ANR	1018144	Statement	ref	1975:54:60080:60082	1017853	14	True				
ANR	1018145	Statement	->	1975:57:60083:60084	1017853	15	True				
ANR	1018146	Statement	type	1975:59:60085:60088	1017853	16	True				
ANR	1018147	Statement	)	1975:63:60089:60089	1017853	17	True				
ANR	1018148	Statement	","	1975:64:60090:60090	1017853	18	True				
ANR	1018149	Statement	str	1975:66:60092:60094	1017853	19	True				
ANR	1018150	Statement	)	1975:69:60095:60095	1017853	20	True				
ANR	1018151	ExpressionStatement		1975:70:60096:60096	1017853	21	True				
ANR	1018152	IfStatement	if ( * param -> cmd_hit )		1017853	22					
ANR	1018153	Condition	* param -> cmd_hit	1976:8:60106:60120	1017853	0	True				
ANR	1018154	UnaryOperationExpression	* param -> cmd_hit		1017853	0					
ANR	1018155	UnaryOperator	*		1017853	0					
ANR	1018156	PtrMemberAccess	param -> cmd_hit		1017853	1					
ANR	1018157	Identifier	param		1017853	0					
ANR	1018158	Identifier	cmd_hit		1017853	1					
ANR	1018159	CompoundStatement		29:5:1127:1151	1017853	1					
ANR	1018160	IdentifierDeclStatement	ut64 here = core -> offset ;	1977:5:60130:60154	1017853	0	True				
ANR	1018161	IdentifierDecl	here = core -> offset		1017853	0					
ANR	1018162	IdentifierDeclType	ut64		1017853	0					
ANR	1018163	Identifier	here		1017853	1					
ANR	1018164	AssignmentExpression	here = core -> offset		1017853	2		=			
ANR	1018165	Identifier	here		1017853	0					
ANR	1018166	PtrMemberAccess	core -> offset		1017853	1					
ANR	1018167	Identifier	core		1017853	0					
ANR	1018168	Identifier	offset		1017853	1					
ANR	1018169	ExpressionStatement	"r_core_seek ( core , ref -> addr , true )"	1978:5:60161:60196	1017853	1	True				
ANR	1018170	CallExpression	"r_core_seek ( core , ref -> addr , true )"		1017853	0					
ANR	1018171	Callee	r_core_seek		1017853	0					
ANR	1018172	Identifier	r_core_seek		1017853	0					
ANR	1018173	ArgumentList	core		1017853	1					
ANR	1018174	Argument	core		1017853	0					
ANR	1018175	Identifier	core		1017853	0					
ANR	1018176	Argument	ref -> addr		1017853	1					
ANR	1018177	PtrMemberAccess	ref -> addr		1017853	0					
ANR	1018178	Identifier	ref		1017853	0					
ANR	1018179	Identifier	addr		1017853	1					
ANR	1018180	Argument	true		1017853	2					
ANR	1018181	Identifier	true		1017853	0					
ANR	1018182	ExpressionStatement	"r_core_cmd ( core , param -> cmd_hit , 0 )"	1979:5:60203:60239	1017853	2	True				
ANR	1018183	CallExpression	"r_core_cmd ( core , param -> cmd_hit , 0 )"		1017853	0					
ANR	1018184	Callee	r_core_cmd		1017853	0					
ANR	1018185	Identifier	r_core_cmd		1017853	0					
ANR	1018186	ArgumentList	core		1017853	1					
ANR	1018187	Argument	core		1017853	0					
ANR	1018188	Identifier	core		1017853	0					
ANR	1018189	Argument	param -> cmd_hit		1017853	1					
ANR	1018190	PtrMemberAccess	param -> cmd_hit		1017853	0					
ANR	1018191	Identifier	param		1017853	0					
ANR	1018192	Identifier	cmd_hit		1017853	1					
ANR	1018193	Argument	0		1017853	2					
ANR	1018194	PrimaryExpression	0		1017853	0					
ANR	1018195	ExpressionStatement	"r_core_seek ( core , here , true )"	1980:5:60246:60276	1017853	3	True				
ANR	1018196	CallExpression	"r_core_seek ( core , here , true )"		1017853	0					
ANR	1018197	Callee	r_core_seek		1017853	0					
ANR	1018198	Identifier	r_core_seek		1017853	0					
ANR	1018199	ArgumentList	core		1017853	1					
ANR	1018200	Argument	core		1017853	0					
ANR	1018201	Identifier	core		1017853	0					
ANR	1018202	Argument	here		1017853	1					
ANR	1018203	Identifier	here		1017853	0					
ANR	1018204	Argument	true		1017853	2					
ANR	1018205	Identifier	true		1017853	0					
ANR	1018206	ExpressionStatement	free ( buf_fcn )	1983:3:60292:60306	1017853	10	True				
ANR	1018207	CallExpression	free ( buf_fcn )		1017853	0					
ANR	1018208	Callee	free		1017853	0					
ANR	1018209	Identifier	free		1017853	0					
ANR	1018210	ArgumentList	buf_fcn		1017853	1					
ANR	1018211	Argument	buf_fcn		1017853	0					
ANR	1018212	Identifier	buf_fcn		1017853	0					
ANR	1018213	ExpressionStatement	r_list_free ( list )	1986:1:60316:60334	1017853	10	True				
ANR	1018214	CallExpression	r_list_free ( list )		1017853	0					
ANR	1018215	Callee	r_list_free		1017853	0					
ANR	1018216	Identifier	r_list_free		1017853	0					
ANR	1018217	ArgumentList	list		1017853	1					
ANR	1018218	Argument	list		1017853	0					
ANR	1018219	Identifier	list		1017853	0					
ANR	1018220	ReturnType	static void		1017853	1					
ANR	1018221	Identifier	do_ref_search		1017853	2					
ANR	1018222	ParameterList	"RCore * core , ut64 addr , ut64 from , ut64 to , struct search_parameters * param"		1017853	3					
ANR	1018223	Parameter	RCore * core	1949:26:58926:58936	1017853	0	True				
ANR	1018224	ParameterType	RCore *		1017853	0					
ANR	1018225	Identifier	core		1017853	1					
ANR	1018226	Parameter	ut64 addr	1949:39:58939:58947	1017853	1	True				
ANR	1018227	ParameterType	ut64		1017853	0					
ANR	1018228	Identifier	addr		1017853	1					
ANR	1018229	Parameter	ut64 from	1949:49:58949:58957	1017853	2	True				
ANR	1018230	ParameterType	ut64		1017853	0					
ANR	1018231	Identifier	from		1017853	1					
ANR	1018232	Parameter	ut64 to	1949:60:58960:58966	1017853	3	True				
ANR	1018233	ParameterType	ut64		1017853	0					
ANR	1018234	Identifier	to		1017853	1					
ANR	1018235	Parameter	struct search_parameters * param	1949:69:58969:58999	1017853	4	True				
ANR	1018236	ParameterType	struct search_parameters *		1017853	0					
ANR	1018237	Identifier	param		1017853	1					
ANR	1018238	CFGEntryNode	ENTRY		1017853		True				
ANR	1018239	CFGExitNode	EXIT		1017853		True				
ANR	1018240	Symbol	here		1017853						
ANR	1018241	Symbol	ref -> addr		1017853						
ANR	1018242	Symbol	* fcn		1017853						
ANR	1018243	Symbol	fcn -> name		1017853						
ANR	1018244	Symbol	R_META_TYPE_COMMENT		1017853						
ANR	1018245	Symbol	* core		1017853						
ANR	1018246	Symbol	core -> assembler		1017853						
ANR	1018247	Symbol	core -> offset		1017853						
ANR	1018248	Symbol	r_str_newf		1017853						
ANR	1018249	Symbol	core -> anal		1017853						
ANR	1018250	Symbol	fcn		1017853						
ANR	1018251	Symbol	asmop		1017853						
ANR	1018252	Symbol	ref		1017853						
ANR	1018253	Symbol	* param -> cmd_hit		1017853						
ANR	1018254	Symbol	core -> io		1017853						
ANR	1018255	Symbol	param		1017853						
ANR	1018256	Symbol	buf_fcn		1017853						
ANR	1018257	Symbol	r_anal_xrefs_get		1017853						
ANR	1018258	Symbol	from		1017853						
ANR	1018259	Symbol	addr		1017853						
ANR	1018260	Symbol	* * core		1017853						
ANR	1018261	Symbol	r_meta_get_string		1017853						
ANR	1018262	Symbol	iter		1017853						
ANR	1018263	Symbol	core -> flags		1017853						
ANR	1018264	Symbol	core -> print -> big_endian		1017853						
ANR	1018265	Symbol	strtok		1017853						
ANR	1018266	Symbol	r_anal_hint_get		1017853						
ANR	1018267	Symbol	list		1017853						
ANR	1018268	Symbol	* param		1017853						
ANR	1018269	Symbol	str		1017853						
ANR	1018270	Symbol	core		1017853						
ANR	1018271	Symbol	core -> parser		1017853						
ANR	1018272	Symbol	buf		1017853						
ANR	1018273	Symbol	* core -> print		1017853						
ANR	1018274	Symbol	r_anal_get_fcn_in		1017853						
ANR	1018275	Symbol	size		1017853						
ANR	1018276	Symbol	r_strbuf_get		1017853						
ANR	1018277	Symbol	& asmop		1017853						
ANR	1018278	Symbol	& asmop . buf_asm		1017853						
ANR	1018279	Symbol	hint		1017853						
ANR	1018280	Symbol	true		1017853						
ANR	1018281	Symbol	* * param		1017853						
ANR	1018282	Symbol	comment		1017853						
ANR	1018283	Symbol	to		1017853						
ANR	1018284	Symbol	core -> print		1017853						
ANR	1018285	Symbol	* ref		1017853						
ANR	1018286	Symbol	param -> cmd_hit		1017853						
ANR	1018287	Function	do_anal_search	1989:0:60339:64627							
ANR	1018288	FunctionDef	"do_anal_search (RCore * core , struct search_parameters * param , const char * input)"		1018287	0					
ANR	1018289	CompoundStatement		1989:92:60431:64627	1018287	0					
ANR	1018290	IdentifierDeclStatement	RSearch * search = core -> search ;	1990:1:60434:60464	1018287	0	True				
ANR	1018291	IdentifierDecl	* search = core -> search		1018287	0					
ANR	1018292	IdentifierDeclType	RSearch *		1018287	0					
ANR	1018293	Identifier	search		1018287	1					
ANR	1018294	AssignmentExpression	* search = core -> search		1018287	2		=			
ANR	1018295	Identifier	search		1018287	0					
ANR	1018296	PtrMemberAccess	core -> search		1018287	1					
ANR	1018297	Identifier	core		1018287	0					
ANR	1018298	Identifier	search		1018287	1					
ANR	1018299	IdentifierDeclStatement	ut64 at ;	1991:1:60467:60474	1018287	1	True				
ANR	1018300	IdentifierDecl	at		1018287	0					
ANR	1018301	IdentifierDeclType	ut64		1018287	0					
ANR	1018302	Identifier	at		1018287	1					
ANR	1018303	IdentifierDeclStatement	RAnalOp aop ;	1992:1:60477:60488	1018287	2	True				
ANR	1018304	IdentifierDecl	aop		1018287	0					
ANR	1018305	IdentifierDeclType	RAnalOp		1018287	0					
ANR	1018306	Identifier	aop		1018287	1					
ANR	1018307	IdentifierDeclStatement	int type = 0 ;	1993:1:60491:60503	1018287	3	True				
ANR	1018308	IdentifierDecl	type = 0		1018287	0					
ANR	1018309	IdentifierDeclType	int		1018287	0					
ANR	1018310	Identifier	type		1018287	1					
ANR	1018311	AssignmentExpression	type = 0		1018287	2		=			
ANR	1018312	Identifier	type		1018287	0					
ANR	1018313	PrimaryExpression	0		1018287	1					
ANR	1018314	IdentifierDeclStatement	int mode = 0 ;	1994:1:60506:60518	1018287	4	True				
ANR	1018315	IdentifierDecl	mode = 0		1018287	0					
ANR	1018316	IdentifierDeclType	int		1018287	0					
ANR	1018317	Identifier	mode		1018287	1					
ANR	1018318	AssignmentExpression	mode = 0		1018287	2		=			
ANR	1018319	Identifier	mode		1018287	0					
ANR	1018320	PrimaryExpression	0		1018287	1					
ANR	1018321	IdentifierDeclStatement	int kwidx = core -> search -> n_kws ;	1995:1:60521:60552	1018287	5	True				
ANR	1018322	IdentifierDecl	kwidx = core -> search -> n_kws		1018287	0					
ANR	1018323	IdentifierDeclType	int		1018287	0					
ANR	1018324	Identifier	kwidx		1018287	1					
ANR	1018325	AssignmentExpression	kwidx = core -> search -> n_kws		1018287	2		=			
ANR	1018326	Identifier	kwidx		1018287	0					
ANR	1018327	PtrMemberAccess	core -> search -> n_kws		1018287	1					
ANR	1018328	PtrMemberAccess	core -> search		1018287	0					
ANR	1018329	Identifier	core		1018287	0					
ANR	1018330	Identifier	search		1018287	1					
ANR	1018331	Identifier	n_kws		1018287	1					
ANR	1018332	IdentifierDeclStatement	"int i , ret , count = 0 ;"	1996:1:60555:60576	1018287	6	True				
ANR	1018333	IdentifierDecl	i		1018287	0					
ANR	1018334	IdentifierDeclType	int		1018287	0					
ANR	1018335	Identifier	i		1018287	1					
ANR	1018336	IdentifierDecl	ret		1018287	1					
ANR	1018337	IdentifierDeclType	int		1018287	0					
ANR	1018338	Identifier	ret		1018287	1					
ANR	1018339	IdentifierDecl	count = 0		1018287	2					
ANR	1018340	IdentifierDeclType	int		1018287	0					
ANR	1018341	Identifier	count		1018287	1					
ANR	1018342	AssignmentExpression	count = 0		1018287	2		=			
ANR	1018343	Identifier	count		1018287	0					
ANR	1018344	PrimaryExpression	0		1018287	1					
ANR	1018345	IdentifierDeclStatement	bool firstItem = true ;	1997:1:60579:60600	1018287	7	True				
ANR	1018346	IdentifierDecl	firstItem = true		1018287	0					
ANR	1018347	IdentifierDeclType	bool		1018287	0					
ANR	1018348	Identifier	firstItem		1018287	1					
ANR	1018349	AssignmentExpression	firstItem = true		1018287	2		=			
ANR	1018350	Identifier	true		1018287	0					
ANR	1018351	Identifier	true		1018287	1					
ANR	1018352	WhileStatement	while ( * input && * input != ' ' )		1018287	8					
ANR	1018353	Condition	* input && * input != ' '	1999:8:60611:60633	1018287	0	True				
ANR	1018354	AndExpression	* input && * input != ' '		1018287	0		&&			
ANR	1018355	UnaryOperationExpression	* input		1018287	0					
ANR	1018356	UnaryOperator	*		1018287	0					
ANR	1018357	Identifier	input		1018287	1					
ANR	1018358	EqualityExpression	* input != ' '		1018287	1		!=			
ANR	1018359	UnaryOperationExpression	* input		1018287	0					
ANR	1018360	UnaryOperator	*		1018287	0					
ANR	1018361	Identifier	input		1018287	1					
ANR	1018362	PrimaryExpression	' '		1018287	1					
ANR	1018363	CompoundStatement		11:33:204:204	1018287	1					
ANR	1018364	SwitchStatement	switch ( * input )		1018287	0					
ANR	1018365	Condition	* input	2000:10:60648:60653	1018287	0	True				
ANR	1018366	UnaryOperationExpression	* input		1018287	0					
ANR	1018367	UnaryOperator	*		1018287	0					
ANR	1018368	Identifier	input		1018287	1					
ANR	1018369	CompoundStatement		12:18:224:224	1018287	1					
ANR	1018370	Label	case 'j' :	2001:2:60660:60668	1018287	0	True				
ANR	1018371	Label	case 'q' :	2002:2:60672:60680	1018287	1	True				
ANR	1018372	ExpressionStatement	mode = * input	2003:3:60685:60698	1018287	2	True				
ANR	1018373	AssignmentExpression	mode = * input		1018287	0		=			
ANR	1018374	Identifier	mode		1018287	0					
ANR	1018375	UnaryOperationExpression	* input		1018287	1					
ANR	1018376	UnaryOperator	*		1018287	0					
ANR	1018377	Identifier	input		1018287	1					
ANR	1018378	BreakStatement	break ;	2004:3:60703:60708	1018287	3	True				
ANR	1018379	Label	case 'l' :	2005:2:60712:60720	1018287	4	True				
ANR	1018380	SwitchStatement	switch ( type )		1018287	5					
ANR	1018381	Condition	type	2006:11:60750:60753	1018287	0	True				
ANR	1018382	Identifier	type		1018287	0					
ANR	1018383	CompoundStatement		18:17:324:324	1018287	1					
ANR	1018384	Label	case 't' :	2007:3:60761:60769	1018287	0	True				
ANR	1018385	Label	case 'f' :	2008:3:60784:60792	1018287	1	True				
ANR	1018386	ForStatement	for ( i = 0 ; i < 64 ; i ++ )		1018287	2					
ANR	1018387	ForInit	i = 0 ;	2009:9:60813:60818	1018287	0	True				
ANR	1018388	AssignmentExpression	i = 0		1018287	0		=			
ANR	1018389	Identifier	i		1018287	0					
ANR	1018390	PrimaryExpression	0		1018287	1					
ANR	1018391	Condition	i < 64	2009:16:60820:60825	1018287	1	True				
ANR	1018392	RelationalExpression	i < 64		1018287	0		<			
ANR	1018393	Identifier	i		1018287	0					
ANR	1018394	PrimaryExpression	64		1018287	1					
ANR	1018395	PostIncDecOperationExpression	i ++	2009:24:60828:60830	1018287	2	True				
ANR	1018396	Identifier	i		1018287	0					
ANR	1018397	IncDec	++		1018287	1					
ANR	1018398	CompoundStatement		22:5:408:512	1018287	3					
ANR	1018399	IdentifierDeclStatement	const char * str = type == 'f' ? r_anal_op_family_to_string ( i ) : r_anal_optype_to_string ( i ) ;	2010:5:60840:60944	1018287	0	True				
ANR	1018400	IdentifierDecl	* str = type == 'f' ? r_anal_op_family_to_string ( i ) : r_anal_optype_to_string ( i )		1018287	0					
ANR	1018401	IdentifierDeclType	const char *		1018287	0					
ANR	1018402	Identifier	str		1018287	1					
ANR	1018403	AssignmentExpression	* str = type == 'f' ? r_anal_op_family_to_string ( i ) : r_anal_optype_to_string ( i )		1018287	2		=			
ANR	1018404	Identifier	str		1018287	0					
ANR	1018405	ConditionalExpression	type == 'f' ? r_anal_op_family_to_string ( i ) : r_anal_optype_to_string ( i )		1018287	1					
ANR	1018406	Condition	type == 'f'		1018287	0					
ANR	1018407	EqualityExpression	type == 'f'		1018287	0		==			
ANR	1018408	Identifier	type		1018287	0					
ANR	1018409	PrimaryExpression	'f'		1018287	1					
ANR	1018410	CallExpression	r_anal_op_family_to_string ( i )		1018287	1					
ANR	1018411	Callee	r_anal_op_family_to_string		1018287	0					
ANR	1018412	Identifier	r_anal_op_family_to_string		1018287	0					
ANR	1018413	ArgumentList	i		1018287	1					
ANR	1018414	Argument	i		1018287	0					
ANR	1018415	Identifier	i		1018287	0					
ANR	1018416	CallExpression	r_anal_optype_to_string ( i )		1018287	2					
ANR	1018417	Callee	r_anal_optype_to_string		1018287	0					
ANR	1018418	Identifier	r_anal_optype_to_string		1018287	0					
ANR	1018419	ArgumentList	i		1018287	1					
ANR	1018420	Argument	i		1018287	0					
ANR	1018421	Identifier	i		1018287	0					
ANR	1018422	IfStatement	if ( ! str || ! * str )		1018287	1					
ANR	1018423	Condition	! str || ! * str	2013:9:60955:60967	1018287	0	True				
ANR	1018424	OrExpression	! str || ! * str		1018287	0		||			
ANR	1018425	UnaryOperationExpression	! str		1018287	0					
ANR	1018426	UnaryOperator	!		1018287	0					
ANR	1018427	Identifier	str		1018287	1					
ANR	1018428	UnaryOperationExpression	! * str		1018287	1					
ANR	1018429	UnaryOperator	!		1018287	0					
ANR	1018430	UnaryOperationExpression	* str		1018287	1					
ANR	1018431	UnaryOperator	*		1018287	0					
ANR	1018432	Identifier	str		1018287	1					
ANR	1018433	CompoundStatement		25:24:538:538	1018287	1					
ANR	1018434	BreakStatement	break ;	2014:6:60978:60983	1018287	0	True				
ANR	1018435	IfStatement	"if ( ! strcmp ( str , ""undefined"" ) )"		1018287	2					
ANR	1018436	Condition	"! strcmp ( str , ""undefined"" )"	2016:9:61001:61026	1018287	0	True				
ANR	1018437	UnaryOperationExpression	"! strcmp ( str , ""undefined"" )"		1018287	0					
ANR	1018438	UnaryOperator	!		1018287	0					
ANR	1018439	CallExpression	"strcmp ( str , ""undefined"" )"		1018287	1					
ANR	1018440	Callee	strcmp		1018287	0					
ANR	1018441	Identifier	strcmp		1018287	0					
ANR	1018442	ArgumentList	str		1018287	1					
ANR	1018443	Argument	str		1018287	0					
ANR	1018444	Identifier	str		1018287	0					
ANR	1018445	Argument	"""undefined"""		1018287	1					
ANR	1018446	PrimaryExpression	"""undefined"""		1018287	0					
ANR	1018447	CompoundStatement		28:37:597:597	1018287	1					
ANR	1018448	ContinueStatement	continue ;	2017:6:61037:61045	1018287	0	True				
ANR	1018449	ExpressionStatement	r_cons_println ( str )	2019:5:61059:61079	1018287	3	True				
ANR	1018450	CallExpression	r_cons_println ( str )		1018287	0					
ANR	1018451	Callee	r_cons_println		1018287	0					
ANR	1018452	Identifier	r_cons_println		1018287	0					
ANR	1018453	ArgumentList	str		1018287	1					
ANR	1018454	Argument	str		1018287	0					
ANR	1018455	Identifier	str		1018287	0					
ANR	1018456	BreakStatement	break ;	2021:4:61091:61096	1018287	3	True				
ANR	1018457	Label	case 's' :	2022:3:61101:61109	1018287	4	True				
ANR	1018458	ExpressionStatement	"r_core_cmd0 ( core , ""asl"" )"	2023:4:61124:61149	1018287	5	True				
ANR	1018459	CallExpression	"r_core_cmd0 ( core , ""asl"" )"		1018287	0					
ANR	1018460	Callee	r_core_cmd0		1018287	0					
ANR	1018461	Identifier	r_core_cmd0		1018287	0					
ANR	1018462	ArgumentList	core		1018287	1					
ANR	1018463	Argument	core		1018287	0					
ANR	1018464	Identifier	core		1018287	0					
ANR	1018465	Argument	"""asl"""		1018287	1					
ANR	1018466	PrimaryExpression	"""asl"""		1018287	0					
ANR	1018467	BreakStatement	break ;	2024:4:61155:61160	1018287	6	True				
ANR	1018468	Label	case 0 :	2025:3:61165:61171	1018287	7	True				
ANR	1018469	ExpressionStatement	"r_core_cmd0 ( core , ""aoml"" )"	2026:4:61177:61203	1018287	8	True				
ANR	1018470	CallExpression	"r_core_cmd0 ( core , ""aoml"" )"		1018287	0					
ANR	1018471	Callee	r_core_cmd0		1018287	0					
ANR	1018472	Identifier	r_core_cmd0		1018287	0					
ANR	1018473	ArgumentList	core		1018287	1					
ANR	1018474	Argument	core		1018287	0					
ANR	1018475	Identifier	core		1018287	0					
ANR	1018476	Argument	"""aoml"""		1018287	1					
ANR	1018477	PrimaryExpression	"""aoml"""		1018287	0					
ANR	1018478	BreakStatement	break ;	2027:4:61209:61214	1018287	9	True				
ANR	1018479	Label	default :	2028:3:61219:61226	1018287	10	True				
ANR	1018480	Identifier	default		1018287	0					
ANR	1018481	ExpressionStatement	"eprintf ( ""wat\\n"" )"	2029:4:61232:61249	1018287	11	True				
ANR	1018482	CallExpression	"eprintf ( ""wat\\n"" )"		1018287	0					
ANR	1018483	Callee	eprintf		1018287	0					
ANR	1018484	Identifier	eprintf		1018287	0					
ANR	1018485	ArgumentList	"""wat\\n"""		1018287	1					
ANR	1018486	Argument	"""wat\\n"""		1018287	0					
ANR	1018487	PrimaryExpression	"""wat\\n"""		1018287	0					
ANR	1018488	BreakStatement	break ;	2030:4:61255:61260	1018287	12	True				
ANR	1018489	ReturnStatement	return false ;	2032:3:61270:61282	1018287	6	True				
ANR	1018490	Identifier	false		1018287	0					
ANR	1018491	Label	case 'f' :	2033:2:61286:61294	1018287	7	True				
ANR	1018492	Label	case 's' :	2034:2:61307:61315	1018287	8	True				
ANR	1018493	Label	case 't' :	2035:2:61328:61336	1018287	9	True				
ANR	1018494	Label	case 'm' :	2036:2:61349:61357	1018287	10	True				
ANR	1018495	Label	case ' ' :	2037:2:61370:61378	1018287	11	True				
ANR	1018496	ExpressionStatement	type = * input	2038:3:61383:61396	1018287	12	True				
ANR	1018497	AssignmentExpression	type = * input		1018287	0		=			
ANR	1018498	Identifier	type		1018287	0					
ANR	1018499	UnaryOperationExpression	* input		1018287	1					
ANR	1018500	UnaryOperator	*		1018287	0					
ANR	1018501	Identifier	input		1018287	1					
ANR	1018502	BreakStatement	break ;	2039:3:61401:61406	1018287	13	True				
ANR	1018503	Label	case 0 :	2040:2:61410:61416	1018287	14	True				
ANR	1018504	Label	case '?' :	2041:2:61420:61428	1018287	15	True				
ANR	1018505	Label	default :	2042:2:61432:61439	1018287	16	True				
ANR	1018506	Identifier	default		1018287	0					
ANR	1018507	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_a )"	2043:3:61444:61484	1018287	17	True				
ANR	1018508	CallExpression	"r_core_cmd_help ( core , help_msg_slash_a )"		1018287	0					
ANR	1018509	Callee	r_core_cmd_help		1018287	0					
ANR	1018510	Identifier	r_core_cmd_help		1018287	0					
ANR	1018511	ArgumentList	core		1018287	1					
ANR	1018512	Argument	core		1018287	0					
ANR	1018513	Identifier	core		1018287	0					
ANR	1018514	Argument	help_msg_slash_a		1018287	1					
ANR	1018515	Identifier	help_msg_slash_a		1018287	0					
ANR	1018516	ReturnStatement	return false ;	2044:3:61489:61501	1018287	18	True				
ANR	1018517	Identifier	false		1018287	0					
ANR	1018518	ExpressionStatement	input ++	2046:2:61509:61516	1018287	1	True				
ANR	1018519	PostIncDecOperationExpression	input ++		1018287	0					
ANR	1018520	Identifier	input		1018287	0					
ANR	1018521	IncDec	++		1018287	1					
ANR	1018522	IfStatement	if ( type == 's' )		1018287	9					
ANR	1018523	Condition	type == 's'	2048:5:61526:61536	1018287	0	True				
ANR	1018524	EqualityExpression	type == 's'		1018287	0		==			
ANR	1018525	Identifier	type		1018287	0					
ANR	1018526	PrimaryExpression	's'		1018287	1					
ANR	1018527	CompoundStatement		60:18:1107:1107	1018287	1					
ANR	1018528	ExpressionStatement	"eprintf ( ""Shouldn't reach\\n"" )"	2049:2:61543:61572	1018287	0	True				
ANR	1018529	CallExpression	"eprintf ( ""Shouldn't reach\\n"" )"		1018287	0					
ANR	1018530	Callee	eprintf		1018287	0					
ANR	1018531	Identifier	eprintf		1018287	0					
ANR	1018532	ArgumentList	"""Shouldn't reach\\n"""		1018287	1					
ANR	1018533	Argument	"""Shouldn't reach\\n"""		1018287	0					
ANR	1018534	PrimaryExpression	"""Shouldn't reach\\n"""		1018287	0					
ANR	1018535	Label	case 's' :	2052:1:61587:61595	1018287	1	True				
ANR	1018536	ExpressionStatement	"do_syscall_search ( core , & param )"	2053:2:61607:61639	1018287	2	True				
ANR	1018537	CallExpression	"do_syscall_search ( core , & param )"		1018287	0					
ANR	1018538	Callee	do_syscall_search		1018287	0					
ANR	1018539	Identifier	do_syscall_search		1018287	0					
ANR	1018540	ArgumentList	core		1018287	1					
ANR	1018541	Argument	core		1018287	0					
ANR	1018542	Identifier	core		1018287	0					
ANR	1018543	Argument	& param		1018287	1					
ANR	1018544	UnaryOperationExpression	& param		1018287	0					
ANR	1018545	UnaryOperator	&		1018287	0					
ANR	1018546	Identifier	param		1018287	1					
ANR	1018547	ExpressionStatement	dosearch = false	2054:2:61643:61659	1018287	3	True				
ANR	1018548	AssignmentExpression	dosearch = false		1018287	0		=			
ANR	1018549	Identifier	dosearch		1018287	0					
ANR	1018550	Identifier	false		1018287	1					
ANR	1018551	BreakStatement	break ;	2055:2:61663:61668	1018287	4	True				
ANR	1018552	ReturnStatement	return true ;	2057:2:61679:61690	1018287	5	True				
ANR	1018553	Identifier	true		1018287	0					
ANR	1018554	IfStatement	if ( mode == 'j' )		1018287	10					
ANR	1018555	Condition	mode == 'j'	2059:5:61700:61710	1018287	0	True				
ANR	1018556	EqualityExpression	mode == 'j'		1018287	0		==			
ANR	1018557	Identifier	mode		1018287	0					
ANR	1018558	PrimaryExpression	'j'		1018287	1					
ANR	1018559	CompoundStatement		71:18:1281:1281	1018287	1					
ANR	1018560	ExpressionStatement	"r_cons_printf ( ""["" )"	2060:2:61717:61736	1018287	0	True				
ANR	1018561	CallExpression	"r_cons_printf ( ""["" )"		1018287	0					
ANR	1018562	Callee	r_cons_printf		1018287	0					
ANR	1018563	Identifier	r_cons_printf		1018287	0					
ANR	1018564	ArgumentList	"""["""		1018287	1					
ANR	1018565	Argument	"""["""		1018287	0					
ANR	1018566	PrimaryExpression	"""["""		1018287	0					
ANR	1018567	ExpressionStatement	input = r_str_trim_ro ( input )	2062:1:61742:61771	1018287	11	True				
ANR	1018568	AssignmentExpression	input = r_str_trim_ro ( input )		1018287	0		=			
ANR	1018569	Identifier	input		1018287	0					
ANR	1018570	CallExpression	r_str_trim_ro ( input )		1018287	1					
ANR	1018571	Callee	r_str_trim_ro		1018287	0					
ANR	1018572	Identifier	r_str_trim_ro		1018287	0					
ANR	1018573	ArgumentList	input		1018287	1					
ANR	1018574	Argument	input		1018287	0					
ANR	1018575	Identifier	input		1018287	0					
ANR	1018576	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2063:1:61774:61804	1018287	12	True				
ANR	1018577	CallExpression	"r_cons_break_push ( NULL , NULL )"		1018287	0					
ANR	1018578	Callee	r_cons_break_push		1018287	0					
ANR	1018579	Identifier	r_cons_break_push		1018287	0					
ANR	1018580	ArgumentList	NULL		1018287	1					
ANR	1018581	Argument	NULL		1018287	0					
ANR	1018582	Identifier	NULL		1018287	0					
ANR	1018583	Argument	NULL		1018287	1					
ANR	1018584	Identifier	NULL		1018287	0					
ANR	1018585	IdentifierDeclStatement	RIOMap * map ;	2064:1:61807:61818	1018287	13	True				
ANR	1018586	IdentifierDecl	* map		1018287	0					
ANR	1018587	IdentifierDeclType	RIOMap *		1018287	0					
ANR	1018588	Identifier	map		1018287	1					
ANR	1018589	IdentifierDeclStatement	RListIter * iter ;	2065:1:61821:61836	1018287	14	True				
ANR	1018590	IdentifierDecl	* iter		1018287	0					
ANR	1018591	IdentifierDeclType	RListIter *		1018287	0					
ANR	1018592	Identifier	iter		1018287	1					
ANR	1018593	Statement	r_list_foreach	2066:1:61839:61852	1018287	15	True				
ANR	1018594	Statement	(	2066:16:61854:61854	1018287	16	True				
ANR	1018595	Statement	param	2066:17:61855:61859	1018287	17	True				
ANR	1018596	Statement	->	2066:22:61860:61861	1018287	18	True				
ANR	1018597	Statement	boundaries	2066:24:61862:61871	1018287	19	True				
ANR	1018598	Statement	","	2066:34:61872:61872	1018287	20	True				
ANR	1018599	Statement	iter	2066:36:61874:61877	1018287	21	True				
ANR	1018600	Statement	","	2066:40:61878:61878	1018287	22	True				
ANR	1018601	Statement	map	2066:42:61880:61882	1018287	23	True				
ANR	1018602	Statement	)	2066:45:61883:61883	1018287	24	True				
ANR	1018603	CompoundStatement		80:2:1486:1516	1018287	25					
ANR	1018604	IdentifierDeclStatement	ut64 from = map -> itv . addr ;	2067:2:61889:61914	1018287	0	True				
ANR	1018605	IdentifierDecl	from = map -> itv . addr		1018287	0					
ANR	1018606	IdentifierDeclType	ut64		1018287	0					
ANR	1018607	Identifier	from		1018287	1					
ANR	1018608	AssignmentExpression	from = map -> itv . addr		1018287	2		=			
ANR	1018609	Identifier	from		1018287	0					
ANR	1018610	MemberAccess	map -> itv . addr		1018287	1					
ANR	1018611	PtrMemberAccess	map -> itv		1018287	0					
ANR	1018612	Identifier	map		1018287	0					
ANR	1018613	Identifier	itv		1018287	1					
ANR	1018614	Identifier	addr		1018287	1					
ANR	1018615	IdentifierDeclStatement	ut64 to = r_itv_end ( map -> itv ) ;	2068:2:61918:61948	1018287	1	True				
ANR	1018616	IdentifierDecl	to = r_itv_end ( map -> itv )		1018287	0					
ANR	1018617	IdentifierDeclType	ut64		1018287	0					
ANR	1018618	Identifier	to		1018287	1					
ANR	1018619	AssignmentExpression	to = r_itv_end ( map -> itv )		1018287	2		=			
ANR	1018620	Identifier	to		1018287	0					
ANR	1018621	CallExpression	r_itv_end ( map -> itv )		1018287	1					
ANR	1018622	Callee	r_itv_end		1018287	0					
ANR	1018623	Identifier	r_itv_end		1018287	0					
ANR	1018624	ArgumentList	map -> itv		1018287	1					
ANR	1018625	Argument	map -> itv		1018287	0					
ANR	1018626	PtrMemberAccess	map -> itv		1018287	0					
ANR	1018627	Identifier	map		1018287	0					
ANR	1018628	Identifier	itv		1018287	1					
ANR	1018629	ForStatement	"for ( i = 0 , at = from ; at < to ; i ++ , at ++ )"		1018287	2					
ANR	1018630	ForInit	"i = 0 , at = from ;"	2069:7:61957:61973	1018287	0	True				
ANR	1018631	Expression	"i = 0 , at = from"		1018287	0					
ANR	1018632	AssignmentExpression	i = 0		1018287	0		=			
ANR	1018633	Identifier	i		1018287	0					
ANR	1018634	PrimaryExpression	0		1018287	1					
ANR	1018635	AssignmentExpression	at = from		1018287	1		=			
ANR	1018636	Identifier	at		1018287	0					
ANR	1018637	Identifier	from		1018287	1					
ANR	1018638	Condition	at < to	2069:25:61975:61981	1018287	1	True				
ANR	1018639	RelationalExpression	at < to		1018287	0		<			
ANR	1018640	Identifier	at		1018287	0					
ANR	1018641	Identifier	to		1018287	1					
ANR	1018642	Expression	"i ++ , at ++"	2069:34:61984:61992	1018287	2	True				
ANR	1018643	PostIncDecOperationExpression	i ++		1018287	0					
ANR	1018644	Identifier	i		1018287	0					
ANR	1018645	IncDec	++		1018287	1					
ANR	1018646	PostIncDecOperationExpression	at ++		1018287	1					
ANR	1018647	Identifier	at		1018287	0					
ANR	1018648	IncDec	++		1018287	1					
ANR	1018649	CompoundStatement		86:3:1633:1646	1018287	3					
ANR	1018650	IfStatement	if ( r_cons_is_breaked ( ) )		1018287	0					
ANR	1018651	Condition	r_cons_is_breaked ( )	2070:7:62004:62023	1018287	0	True				
ANR	1018652	CallExpression	r_cons_is_breaked ( )		1018287	0					
ANR	1018653	Callee	r_cons_is_breaked		1018287	0					
ANR	1018654	Identifier	r_cons_is_breaked		1018287	0					
ANR	1018655	ArgumentList			1018287	1					
ANR	1018656	CompoundStatement		82:29:1594:1594	1018287	1					
ANR	1018657	BreakStatement	break ;	2071:4:62032:62037	1018287	0	True				
ANR	1018658	ExpressionStatement	at = from + i	2073:3:62047:62060	1018287	1	True				
ANR	1018659	AssignmentExpression	at = from + i		1018287	0		=			
ANR	1018660	Identifier	at		1018287	0					
ANR	1018661	AdditiveExpression	from + i		1018287	1		+			
ANR	1018662	Identifier	from		1018287	0					
ANR	1018663	Identifier	i		1018287	1					
ANR	1018664	IdentifierDeclStatement	ut8 bufop [ 32 ] ;	2074:3:62065:62078	1018287	2	True				
ANR	1018665	IdentifierDecl	bufop [ 32 ]		1018287	0					
ANR	1018666	IdentifierDeclType	ut8 [ 32 ]		1018287	0					
ANR	1018667	Identifier	bufop		1018287	1					
ANR	1018668	PrimaryExpression	32		1018287	2					
ANR	1018669	ExpressionStatement	"r_io_read_at ( core -> io , at , bufop , sizeof ( bufop ) )"	2075:3:62083:62132	1018287	3	True				
ANR	1018670	CallExpression	"r_io_read_at ( core -> io , at , bufop , sizeof ( bufop ) )"		1018287	0					
ANR	1018671	Callee	r_io_read_at		1018287	0					
ANR	1018672	Identifier	r_io_read_at		1018287	0					
ANR	1018673	ArgumentList	core -> io		1018287	1					
ANR	1018674	Argument	core -> io		1018287	0					
ANR	1018675	PtrMemberAccess	core -> io		1018287	0					
ANR	1018676	Identifier	core		1018287	0					
ANR	1018677	Identifier	io		1018287	1					
ANR	1018678	Argument	at		1018287	1					
ANR	1018679	Identifier	at		1018287	0					
ANR	1018680	Argument	bufop		1018287	2					
ANR	1018681	Identifier	bufop		1018287	0					
ANR	1018682	Argument	sizeof ( bufop )		1018287	3					
ANR	1018683	SizeofExpression	sizeof ( bufop )		1018287	0					
ANR	1018684	Sizeof	sizeof		1018287	0					
ANR	1018685	SizeofOperand	bufop		1018287	1					
ANR	1018686	ExpressionStatement	"ret = r_anal_op ( core -> anal , & aop , at , bufop , sizeof ( bufop ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"	2076:3:62137:62243	1018287	4	True				
ANR	1018687	AssignmentExpression	"ret = r_anal_op ( core -> anal , & aop , at , bufop , sizeof ( bufop ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		1018287	0		=			
ANR	1018688	Identifier	ret		1018287	0					
ANR	1018689	CallExpression	"r_anal_op ( core -> anal , & aop , at , bufop , sizeof ( bufop ) , R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM )"		1018287	1					
ANR	1018690	Callee	r_anal_op		1018287	0					
ANR	1018691	Identifier	r_anal_op		1018287	0					
ANR	1018692	ArgumentList	core -> anal		1018287	1					
ANR	1018693	Argument	core -> anal		1018287	0					
ANR	1018694	PtrMemberAccess	core -> anal		1018287	0					
ANR	1018695	Identifier	core		1018287	0					
ANR	1018696	Identifier	anal		1018287	1					
ANR	1018697	Argument	& aop		1018287	1					
ANR	1018698	UnaryOperationExpression	& aop		1018287	0					
ANR	1018699	UnaryOperator	&		1018287	0					
ANR	1018700	Identifier	aop		1018287	1					
ANR	1018701	Argument	at		1018287	2					
ANR	1018702	Identifier	at		1018287	0					
ANR	1018703	Argument	bufop		1018287	3					
ANR	1018704	Identifier	bufop		1018287	0					
ANR	1018705	Argument	sizeof ( bufop )		1018287	4					
ANR	1018706	SizeofExpression	sizeof ( bufop )		1018287	0					
ANR	1018707	Sizeof	sizeof		1018287	0					
ANR	1018708	SizeofOperand	bufop		1018287	1					
ANR	1018709	Argument	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		1018287	5					
ANR	1018710	InclusiveOrExpression	R_ANAL_OP_MASK_BASIC | R_ANAL_OP_MASK_DISASM		1018287	0		|			
ANR	1018711	Identifier	R_ANAL_OP_MASK_BASIC		1018287	0					
ANR	1018712	Identifier	R_ANAL_OP_MASK_DISASM		1018287	1					
ANR	1018713	IfStatement	if ( ret )		1018287	5					
ANR	1018714	Condition	ret	2077:7:62252:62254	1018287	0	True				
ANR	1018715	Identifier	ret		1018287	0					
ANR	1018716	CompoundStatement		167:4:3950:4019	1018287	1					
ANR	1018717	IdentifierDeclStatement	bool match = false ;	2078:4:62263:62281	1018287	0	True				
ANR	1018718	IdentifierDecl	match = false		1018287	0					
ANR	1018719	IdentifierDeclType	bool		1018287	0					
ANR	1018720	Identifier	match		1018287	1					
ANR	1018721	AssignmentExpression	match = false		1018287	2		=			
ANR	1018722	Identifier	false		1018287	0					
ANR	1018723	Identifier	false		1018287	1					
ANR	1018724	IfStatement	if ( type == 'm' )		1018287	1					
ANR	1018725	Condition	type == 'm'	2079:8:62291:62301	1018287	0	True				
ANR	1018726	EqualityExpression	type == 'm'		1018287	0		==			
ANR	1018727	Identifier	type		1018287	0					
ANR	1018728	PrimaryExpression	'm'		1018287	1					
ANR	1018729	CompoundStatement		92:5:1879:1909	1018287	1					
ANR	1018730	IdentifierDeclStatement	const char * fam = aop . mnemonic ;	2080:5:62311:62341	1018287	0	True				
ANR	1018731	IdentifierDecl	* fam = aop . mnemonic		1018287	0					
ANR	1018732	IdentifierDeclType	const char *		1018287	0					
ANR	1018733	Identifier	fam		1018287	1					
ANR	1018734	AssignmentExpression	* fam = aop . mnemonic		1018287	2		=			
ANR	1018735	Identifier	fam		1018287	0					
ANR	1018736	MemberAccess	aop . mnemonic		1018287	1					
ANR	1018737	Identifier	aop		1018287	0					
ANR	1018738	Identifier	mnemonic		1018287	1					
ANR	1018739	IfStatement	"if ( fam && ( ! * input || r_str_startswith ( fam , input ) ) )"		1018287	1					
ANR	1018740	Condition	"fam && ( ! * input || r_str_startswith ( fam , input ) )"	2081:9:62352:62400	1018287	0	True				
ANR	1018741	AndExpression	"fam && ( ! * input || r_str_startswith ( fam , input ) )"		1018287	0		&&			
ANR	1018742	Identifier	fam		1018287	0					
ANR	1018743	OrExpression	"! * input || r_str_startswith ( fam , input )"		1018287	1		||			
ANR	1018744	UnaryOperationExpression	! * input		1018287	0					
ANR	1018745	UnaryOperator	!		1018287	0					
ANR	1018746	UnaryOperationExpression	* input		1018287	1					
ANR	1018747	UnaryOperator	*		1018287	0					
ANR	1018748	Identifier	input		1018287	1					
ANR	1018749	CallExpression	"r_str_startswith ( fam , input )"		1018287	1					
ANR	1018750	Callee	r_str_startswith		1018287	0					
ANR	1018751	Identifier	r_str_startswith		1018287	0					
ANR	1018752	ArgumentList	fam		1018287	1					
ANR	1018753	Argument	fam		1018287	0					
ANR	1018754	Identifier	fam		1018287	0					
ANR	1018755	Argument	input		1018287	1					
ANR	1018756	Identifier	input		1018287	0					
ANR	1018757	CompoundStatement		93:60:1971:1971	1018287	1					
ANR	1018758	ExpressionStatement	match = true	2082:6:62411:62423	1018287	0	True				
ANR	1018759	AssignmentExpression	match = true		1018287	0		=			
ANR	1018760	Identifier	match		1018287	0					
ANR	1018761	Identifier	true		1018287	1					
ANR	1018762	ElseStatement	else		1018287	0					
ANR	1018763	IfStatement	if ( type == 'f' )		1018287	0					
ANR	1018764	Condition	type == 'f'	2084:15:62447:62457	1018287	0	True				
ANR	1018765	EqualityExpression	type == 'f'		1018287	0		==			
ANR	1018766	Identifier	type		1018287	0					
ANR	1018767	PrimaryExpression	'f'		1018287	1					
ANR	1018768	CompoundStatement		97:5:2035:2092	1018287	1					
ANR	1018769	IdentifierDeclStatement	const char * fam = r_anal_op_family_to_string ( aop . family ) ;	2085:5:62467:62524	1018287	0	True				
ANR	1018770	IdentifierDecl	* fam = r_anal_op_family_to_string ( aop . family )		1018287	0					
ANR	1018771	IdentifierDeclType	const char *		1018287	0					
ANR	1018772	Identifier	fam		1018287	1					
ANR	1018773	AssignmentExpression	* fam = r_anal_op_family_to_string ( aop . family )		1018287	2		=			
ANR	1018774	Identifier	fam		1018287	0					
ANR	1018775	CallExpression	r_anal_op_family_to_string ( aop . family )		1018287	1					
ANR	1018776	Callee	r_anal_op_family_to_string		1018287	0					
ANR	1018777	Identifier	r_anal_op_family_to_string		1018287	0					
ANR	1018778	ArgumentList	aop . family		1018287	1					
ANR	1018779	Argument	aop . family		1018287	0					
ANR	1018780	MemberAccess	aop . family		1018287	0					
ANR	1018781	Identifier	aop		1018287	0					
ANR	1018782	Identifier	family		1018287	1					
ANR	1018783	IfStatement	"if ( fam && ( ! * input || ! strcmp ( input , fam ) ) )"		1018287	1					
ANR	1018784	Condition	"fam && ( ! * input || ! strcmp ( input , fam ) )"	2086:9:62535:62574	1018287	0	True				
ANR	1018785	AndExpression	"fam && ( ! * input || ! strcmp ( input , fam ) )"		1018287	0		&&			
ANR	1018786	Identifier	fam		1018287	0					
ANR	1018787	OrExpression	"! * input || ! strcmp ( input , fam )"		1018287	1		||			
ANR	1018788	UnaryOperationExpression	! * input		1018287	0					
ANR	1018789	UnaryOperator	!		1018287	0					
ANR	1018790	UnaryOperationExpression	* input		1018287	1					
ANR	1018791	UnaryOperator	*		1018287	0					
ANR	1018792	Identifier	input		1018287	1					
ANR	1018793	UnaryOperationExpression	"! strcmp ( input , fam )"		1018287	1					
ANR	1018794	UnaryOperator	!		1018287	0					
ANR	1018795	CallExpression	"strcmp ( input , fam )"		1018287	1					
ANR	1018796	Callee	strcmp		1018287	0					
ANR	1018797	Identifier	strcmp		1018287	0					
ANR	1018798	ArgumentList	input		1018287	1					
ANR	1018799	Argument	input		1018287	0					
ANR	1018800	Identifier	input		1018287	0					
ANR	1018801	Argument	fam		1018287	1					
ANR	1018802	Identifier	fam		1018287	0					
ANR	1018803	CompoundStatement		98:51:2145:2145	1018287	1					
ANR	1018804	ExpressionStatement	match = true	2087:6:62585:62597	1018287	0	True				
ANR	1018805	AssignmentExpression	match = true		1018287	0		=			
ANR	1018806	Identifier	match		1018287	0					
ANR	1018807	Identifier	true		1018287	1					
ANR	1018808	ElseStatement	else		1018287	0					
ANR	1018809	CompoundStatement		102:5:2192:2245	1018287	0					
ANR	1018810	IdentifierDeclStatement	const char * type = r_anal_optype_to_string ( aop . type ) ;	2090:5:62624:62677	1018287	0	True				
ANR	1018811	IdentifierDecl	* type = r_anal_optype_to_string ( aop . type )		1018287	0					
ANR	1018812	IdentifierDeclType	const char *		1018287	0					
ANR	1018813	Identifier	type		1018287	1					
ANR	1018814	AssignmentExpression	* type = r_anal_optype_to_string ( aop . type )		1018287	2		=			
ANR	1018815	Identifier	type		1018287	0					
ANR	1018816	CallExpression	r_anal_optype_to_string ( aop . type )		1018287	1					
ANR	1018817	Callee	r_anal_optype_to_string		1018287	0					
ANR	1018818	Identifier	r_anal_optype_to_string		1018287	0					
ANR	1018819	ArgumentList	aop . type		1018287	1					
ANR	1018820	Argument	aop . type		1018287	0					
ANR	1018821	MemberAccess	aop . type		1018287	0					
ANR	1018822	Identifier	aop		1018287	0					
ANR	1018823	Identifier	type		1018287	1					
ANR	1018824	IfStatement	if ( type )		1018287	1					
ANR	1018825	Condition	type	2091:9:62688:62691	1018287	0	True				
ANR	1018826	Identifier	type		1018287	0					
ANR	1018827	CompoundStatement		104:6:2270:2296	1018287	1					
ANR	1018828	IdentifierDeclStatement	bool isCandidate = ! * input ;	2092:6:62702:62728	1018287	0	True				
ANR	1018829	IdentifierDecl	isCandidate = ! * input		1018287	0					
ANR	1018830	IdentifierDeclType	bool		1018287	0					
ANR	1018831	Identifier	isCandidate		1018287	1					
ANR	1018832	AssignmentExpression	isCandidate = ! * input		1018287	2		=			
ANR	1018833	Identifier	isCandidate		1018287	0					
ANR	1018834	UnaryOperationExpression	! * input		1018287	1					
ANR	1018835	UnaryOperator	!		1018287	0					
ANR	1018836	UnaryOperationExpression	* input		1018287	1					
ANR	1018837	UnaryOperator	*		1018287	0					
ANR	1018838	Identifier	input		1018287	1					
ANR	1018839	IfStatement	"if ( ! strcmp ( input , ""cswi"" ) )"		1018287	1					
ANR	1018840	Condition	"! strcmp ( input , ""cswi"" )"	2093:10:62740:62762	1018287	0	True				
ANR	1018841	UnaryOperationExpression	"! strcmp ( input , ""cswi"" )"		1018287	0					
ANR	1018842	UnaryOperator	!		1018287	0					
ANR	1018843	CallExpression	"strcmp ( input , ""cswi"" )"		1018287	1					
ANR	1018844	Callee	strcmp		1018287	0					
ANR	1018845	Identifier	strcmp		1018287	0					
ANR	1018846	ArgumentList	input		1018287	1					
ANR	1018847	Argument	input		1018287	0					
ANR	1018848	Identifier	input		1018287	0					
ANR	1018849	Argument	"""cswi"""		1018287	1					
ANR	1018850	PrimaryExpression	"""cswi"""		1018287	0					
ANR	1018851	CompoundStatement		105:35:2333:2333	1018287	1					
ANR	1018852	IfStatement	"if ( ! strcmp ( input + 1 , type ) )"		1018287	0					
ANR	1018853	Condition	"! strcmp ( input + 1 , type )"	2094:11:62778:62802	1018287	0	True				
ANR	1018854	UnaryOperationExpression	"! strcmp ( input + 1 , type )"		1018287	0					
ANR	1018855	UnaryOperator	!		1018287	0					
ANR	1018856	CallExpression	"strcmp ( input + 1 , type )"		1018287	1					
ANR	1018857	Callee	strcmp		1018287	0					
ANR	1018858	Identifier	strcmp		1018287	0					
ANR	1018859	ArgumentList	input + 1		1018287	1					
ANR	1018860	Argument	input + 1		1018287	0					
ANR	1018861	AdditiveExpression	input + 1		1018287	0		+			
ANR	1018862	Identifier	input		1018287	0					
ANR	1018863	PrimaryExpression	1		1018287	1					
ANR	1018864	Argument	type		1018287	1					
ANR	1018865	Identifier	type		1018287	0					
ANR	1018866	CompoundStatement		106:38:2373:2373	1018287	1					
ANR	1018867	ExpressionStatement	isCandidate = true	2095:8:62815:62833	1018287	0	True				
ANR	1018868	AssignmentExpression	isCandidate = true		1018287	0		=			
ANR	1018869	Identifier	isCandidate		1018287	0					
ANR	1018870	Identifier	true		1018287	1					
ANR	1018871	ElseStatement	else		1018287	0					
ANR	1018872	CompoundStatement		109:13:2425:2425	1018287	0					
ANR	1018873	IfStatement	"if ( ! strcmp ( input , type ) )"		1018287	0					
ANR	1018874	Condition	"! strcmp ( input , type )"	2098:11:62870:62890	1018287	0	True				
ANR	1018875	UnaryOperationExpression	"! strcmp ( input , type )"		1018287	0					
ANR	1018876	UnaryOperator	!		1018287	0					
ANR	1018877	CallExpression	"strcmp ( input , type )"		1018287	1					
ANR	1018878	Callee	strcmp		1018287	0					
ANR	1018879	Identifier	strcmp		1018287	0					
ANR	1018880	ArgumentList	input		1018287	1					
ANR	1018881	Argument	input		1018287	0					
ANR	1018882	Identifier	input		1018287	0					
ANR	1018883	Argument	type		1018287	1					
ANR	1018884	Identifier	type		1018287	0					
ANR	1018885	CompoundStatement		110:34:2461:2461	1018287	1					
ANR	1018886	ExpressionStatement	isCandidate = true	2099:8:62903:62921	1018287	0	True				
ANR	1018887	AssignmentExpression	isCandidate = true		1018287	0		=			
ANR	1018888	Identifier	isCandidate		1018287	0					
ANR	1018889	Identifier	true		1018287	1					
ANR	1018890	IfStatement	if ( isCandidate )		1018287	2					
ANR	1018891	Condition	isCandidate	2102:10:62950:62960	1018287	0	True				
ANR	1018892	Identifier	isCandidate		1018287	0					
ANR	1018893	CompoundStatement		114:23:2531:2531	1018287	1					
ANR	1018894	IfStatement	"if ( strstr ( input , ""swi"" ) )"		1018287	0					
ANR	1018895	Condition	"strstr ( input , ""swi"" )"	2103:11:62976:62996	1018287	0	True				
ANR	1018896	CallExpression	"strstr ( input , ""swi"" )"		1018287	0					
ANR	1018897	Callee	strstr		1018287	0					
ANR	1018898	Identifier	strstr		1018287	0					
ANR	1018899	ArgumentList	input		1018287	1					
ANR	1018900	Argument	input		1018287	0					
ANR	1018901	Identifier	input		1018287	0					
ANR	1018902	Argument	"""swi"""		1018287	1					
ANR	1018903	PrimaryExpression	"""swi"""		1018287	0					
ANR	1018904	CompoundStatement		115:34:2567:2567	1018287	1					
ANR	1018905	IfStatement	if ( * input == 'c' )		1018287	0					
ANR	1018906	Condition	* input == 'c'	2104:12:63013:63026	1018287	0	True				
ANR	1018907	EqualityExpression	* input == 'c'		1018287	0		==			
ANR	1018908	UnaryOperationExpression	* input		1018287	0					
ANR	1018909	UnaryOperator	*		1018287	0					
ANR	1018910	Identifier	input		1018287	1					
ANR	1018911	PrimaryExpression	'c'		1018287	1					
ANR	1018912	CompoundStatement		116:28:2597:2597	1018287	1					
ANR	1018913	ExpressionStatement	match = true	2105:9:63040:63052	1018287	0	True				
ANR	1018914	AssignmentExpression	match = true		1018287	0		=			
ANR	1018915	Identifier	match		1018287	0					
ANR	1018916	Identifier	true		1018287	1					
ANR	1018917	ElseStatement	else		1018287	0					
ANR	1018918	CompoundStatement		118:15:2650:2650	1018287	0					
ANR	1018919	ExpressionStatement	match = ! aop . cond	2107:9:63093:63110	1018287	0	True				
ANR	1018920	AssignmentExpression	match = ! aop . cond		1018287	0		=			
ANR	1018921	Identifier	match		1018287	0					
ANR	1018922	UnaryOperationExpression	! aop . cond		1018287	1					
ANR	1018923	UnaryOperator	!		1018287	0					
ANR	1018924	MemberAccess	aop . cond		1018287	1					
ANR	1018925	Identifier	aop		1018287	0					
ANR	1018926	Identifier	cond		1018287	1					
ANR	1018927	ElseStatement	else		1018287	0					
ANR	1018928	CompoundStatement		121:14:2704:2704	1018287	0					
ANR	1018929	ExpressionStatement	match = true	2110:8:63146:63158	1018287	0	True				
ANR	1018930	AssignmentExpression	match = true		1018287	0		=			
ANR	1018931	Identifier	match		1018287	0					
ANR	1018932	Identifier	true		1018287	1					
ANR	1018933	IfStatement	if ( match )		1018287	2					
ANR	1018934	Condition	match	2115:8:63198:63202	1018287	0	True				
ANR	1018935	Identifier	match		1018287	0					
ANR	1018936	CompoundStatement		129:5:2842:2880	1018287	1					
ANR	1018937	IdentifierDeclStatement	"char * opstr = r_core_op_str ( core , at ) ;"	2117:5:63274:63312	1018287	0	True				
ANR	1018938	IdentifierDecl	"* opstr = r_core_op_str ( core , at )"		1018287	0					
ANR	1018939	IdentifierDeclType	char *		1018287	0					
ANR	1018940	Identifier	opstr		1018287	1					
ANR	1018941	AssignmentExpression	"* opstr = r_core_op_str ( core , at )"		1018287	2		=			
ANR	1018942	Identifier	opstr		1018287	0					
ANR	1018943	CallExpression	"r_core_op_str ( core , at )"		1018287	1					
ANR	1018944	Callee	r_core_op_str		1018287	0					
ANR	1018945	Identifier	r_core_op_str		1018287	0					
ANR	1018946	ArgumentList	core		1018287	1					
ANR	1018947	Argument	core		1018287	0					
ANR	1018948	Identifier	core		1018287	0					
ANR	1018949	Argument	at		1018287	1					
ANR	1018950	Identifier	at		1018287	0					
ANR	1018951	SwitchStatement	switch ( mode )		1018287	1					
ANR	1018952	Condition	mode	2118:13:63327:63330	1018287	0	True				
ANR	1018953	Identifier	mode		1018287	0					
ANR	1018954	CompoundStatement		130:19:2901:2901	1018287	1					
ANR	1018955	Label	case 'j' :	2119:5:63340:63348	1018287	0	True				
ANR	1018956	Statement	r_cons_printf	2120:6:63356:63368	1018287	1	True				
ANR	1018957	Statement	(	2120:20:63370:63370	1018287	2	True				
ANR	1018958	Statement	"""%s{\\""addr\\"":%"""	2120:21:63371:63385	1018287	3	True				
ANR	1018959	Statement	PFMT64d	2120:36:63386:63392	1018287	4	True				
ANR	1018960	Statement	""",\\""size\\"":%d,\\""opstr\\"":\\""%s\\""}"""	2120:44:63394:63425	1018287	5	True				
ANR	1018961	Statement	","	2120:76:63426:63426	1018287	6	True				
ANR	1018962	Statement	firstItem	2121:7:63435:63443	1018287	7	True				
ANR	1018963	Statement	?	2121:16:63444:63444	1018287	8	True				
ANR	1018964	Statement	""""""	2121:18:63446:63447	1018287	9	True				
ANR	1018965	Statement	:	2121:20:63448:63448	1018287	10	True				
ANR	1018966	Statement	""","""	2121:22:63450:63452	1018287	11	True				
ANR	1018967	Statement	","	2121:25:63453:63453	1018287	12	True				
ANR	1018968	Statement	at	2122:7:63462:63463	1018287	13	True				
ANR	1018969	Statement	","	2122:9:63464:63464	1018287	14	True				
ANR	1018970	Statement	ret	2122:11:63466:63468	1018287	15	True				
ANR	1018971	Statement	","	2122:14:63469:63469	1018287	16	True				
ANR	1018972	Statement	opstr	2122:16:63471:63475	1018287	17	True				
ANR	1018973	Statement	)	2122:21:63476:63476	1018287	18	True				
ANR	1018974	ExpressionStatement		2122:22:63477:63477	1018287	19	True				
ANR	1018975	BreakStatement	break ;	2123:6:63485:63490	1018287	20	True				
ANR	1018976	Label	case 'q' :	2124:5:63497:63505	1018287	21	True				
ANR	1018977	Statement	r_cons_printf	2125:6:63513:63525	1018287	22	True				
ANR	1018978	Statement	(	2125:20:63527:63527	1018287	23	True				
ANR	1018979	Statement	"""0x%08"""	2125:21:63528:63534	1018287	24	True				
ANR	1018980	Statement	PFMT64x	2125:28:63535:63541	1018287	25	True				
ANR	1018981	Statement	"""\\n"""	2125:36:63543:63546	1018287	26	True				
ANR	1018982	Statement	","	2125:40:63547:63547	1018287	27	True				
ANR	1018983	Statement	at	2125:42:63549:63550	1018287	28	True				
ANR	1018984	Statement	)	2125:44:63551:63551	1018287	29	True				
ANR	1018985	ExpressionStatement		2125:45:63552:63552	1018287	30	True				
ANR	1018986	BreakStatement	break ;	2126:6:63560:63565	1018287	31	True				
ANR	1018987	Label	default :	2127:5:63572:63579	1018287	32	True				
ANR	1018988	Identifier	default		1018287	0					
ANR	1018989	IfStatement	if ( type == 'f' )		1018287	33					
ANR	1018990	Condition	type == 'f'	2128:10:63591:63601	1018287	0	True				
ANR	1018991	EqualityExpression	type == 'f'		1018287	0		==			
ANR	1018992	Identifier	type		1018287	0					
ANR	1018993	PrimaryExpression	'f'		1018287	1					
ANR	1018994	CompoundStatement		141:7:3181:3238	1018287	1					
ANR	1018995	IdentifierDeclStatement	const char * fam = r_anal_op_family_to_string ( aop . family ) ;	2129:7:63613:63670	1018287	0	True				
ANR	1018996	IdentifierDecl	* fam = r_anal_op_family_to_string ( aop . family )		1018287	0					
ANR	1018997	IdentifierDeclType	const char *		1018287	0					
ANR	1018998	Identifier	fam		1018287	1					
ANR	1018999	AssignmentExpression	* fam = r_anal_op_family_to_string ( aop . family )		1018287	2		=			
ANR	1019000	Identifier	fam		1018287	0					
ANR	1019001	CallExpression	r_anal_op_family_to_string ( aop . family )		1018287	1					
ANR	1019002	Callee	r_anal_op_family_to_string		1018287	0					
ANR	1019003	Identifier	r_anal_op_family_to_string		1018287	0					
ANR	1019004	ArgumentList	aop . family		1018287	1					
ANR	1019005	Argument	aop . family		1018287	0					
ANR	1019006	MemberAccess	aop . family		1018287	0					
ANR	1019007	Identifier	aop		1018287	0					
ANR	1019008	Identifier	family		1018287	1					
ANR	1019009	Statement	r_cons_printf	2130:7:63679:63691	1018287	1	True				
ANR	1019010	Statement	(	2130:21:63693:63693	1018287	2	True				
ANR	1019011	Statement	"""0x%08"""	2130:22:63694:63700	1018287	3	True				
ANR	1019012	Statement	PFMT64x	2130:29:63701:63707	1018287	4	True				
ANR	1019013	Statement	""" %d %s %s\\n"""	2130:37:63709:63721	1018287	5	True				
ANR	1019014	Statement	","	2130:50:63722:63722	1018287	6	True				
ANR	1019015	Statement	at	2130:52:63724:63725	1018287	7	True				
ANR	1019016	Statement	","	2130:54:63726:63726	1018287	8	True				
ANR	1019017	Statement	ret	2130:56:63728:63730	1018287	9	True				
ANR	1019018	Statement	","	2130:59:63731:63731	1018287	10	True				
ANR	1019019	Statement	fam	2130:61:63733:63735	1018287	11	True				
ANR	1019020	Statement	","	2130:64:63736:63736	1018287	12	True				
ANR	1019021	Statement	opstr	2130:66:63738:63742	1018287	13	True				
ANR	1019022	Statement	)	2130:71:63743:63743	1018287	14	True				
ANR	1019023	ExpressionStatement		2130:72:63744:63744	1018287	15	True				
ANR	1019024	ElseStatement	else		1018287	0					
ANR	1019025	CompoundStatement		143:13:3327:3327	1018287	0					
ANR	1019026	Statement	r_cons_printf	2132:7:63768:63780	1018287	0	True				
ANR	1019027	Statement	(	2132:21:63782:63782	1018287	1	True				
ANR	1019028	Statement	"""0x%08"""	2132:22:63783:63789	1018287	2	True				
ANR	1019029	Statement	PFMT64x	2132:29:63790:63796	1018287	3	True				
ANR	1019030	Statement	""" %d %s\\n"""	2132:37:63798:63807	1018287	4	True				
ANR	1019031	Statement	","	2132:47:63808:63808	1018287	5	True				
ANR	1019032	Statement	at	2132:49:63810:63811	1018287	6	True				
ANR	1019033	Statement	","	2132:51:63812:63812	1018287	7	True				
ANR	1019034	Statement	ret	2132:53:63814:63816	1018287	8	True				
ANR	1019035	Statement	","	2132:56:63817:63817	1018287	9	True				
ANR	1019036	Statement	opstr	2132:58:63819:63823	1018287	10	True				
ANR	1019037	Statement	)	2132:63:63824:63824	1018287	11	True				
ANR	1019038	ExpressionStatement		2132:64:63825:63825	1018287	12	True				
ANR	1019039	BreakStatement	break ;	2134:6:63841:63846	1018287	34	True				
ANR	1019040	ExpressionStatement	R_FREE ( opstr )	2136:5:63860:63874	1018287	2	True				
ANR	1019041	CallExpression	R_FREE ( opstr )		1018287	0					
ANR	1019042	Callee	R_FREE		1018287	0					
ANR	1019043	Identifier	R_FREE		1018287	0					
ANR	1019044	ArgumentList	opstr		1018287	1					
ANR	1019045	Argument	opstr		1018287	0					
ANR	1019046	Identifier	opstr		1018287	0					
ANR	1019047	IfStatement	if ( * input && searchflags )		1018287	3					
ANR	1019048	Condition	* input && searchflags	2137:9:63885:63905	1018287	0	True				
ANR	1019049	AndExpression	* input && searchflags		1018287	0		&&			
ANR	1019050	UnaryOperationExpression	* input		1018287	0					
ANR	1019051	UnaryOperator	*		1018287	0					
ANR	1019052	Identifier	input		1018287	1					
ANR	1019053	Identifier	searchflags		1018287	1					
ANR	1019054	CompoundStatement		150:6:3484:3497	1018287	1					
ANR	1019055	IdentifierDeclStatement	char flag [ 64 ] ;	2138:6:63916:63929	1018287	0	True				
ANR	1019056	IdentifierDecl	flag [ 64 ]		1018287	0					
ANR	1019057	IdentifierDeclType	char [ 64 ]		1018287	0					
ANR	1019058	Identifier	flag		1018287	1					
ANR	1019059	PrimaryExpression	64		1018287	2					
ANR	1019060	ExpressionStatement	"snprintf ( flag , sizeof ( flag ) , ""%s%d_%d"" , searchprefix , kwidx , count )"	2139:6:63937:64013	1018287	1	True				
ANR	1019061	CallExpression	"snprintf ( flag , sizeof ( flag ) , ""%s%d_%d"" , searchprefix , kwidx , count )"		1018287	0					
ANR	1019062	Callee	snprintf		1018287	0					
ANR	1019063	Identifier	snprintf		1018287	0					
ANR	1019064	ArgumentList	flag		1018287	1					
ANR	1019065	Argument	flag		1018287	0					
ANR	1019066	Identifier	flag		1018287	0					
ANR	1019067	Argument	sizeof ( flag )		1018287	1					
ANR	1019068	SizeofExpression	sizeof ( flag )		1018287	0					
ANR	1019069	Sizeof	sizeof		1018287	0					
ANR	1019070	SizeofOperand	flag		1018287	1					
ANR	1019071	Argument	"""%s%d_%d"""		1018287	2					
ANR	1019072	PrimaryExpression	"""%s%d_%d"""		1018287	0					
ANR	1019073	Argument	searchprefix		1018287	3					
ANR	1019074	Identifier	searchprefix		1018287	0					
ANR	1019075	Argument	kwidx		1018287	4					
ANR	1019076	Identifier	kwidx		1018287	0					
ANR	1019077	Argument	count		1018287	5					
ANR	1019078	Identifier	count		1018287	0					
ANR	1019079	ExpressionStatement	"r_flag_set ( core -> flags , flag , at , ret )"	2141:6:64021:64060	1018287	2	True				
ANR	1019080	CallExpression	"r_flag_set ( core -> flags , flag , at , ret )"		1018287	0					
ANR	1019081	Callee	r_flag_set		1018287	0					
ANR	1019082	Identifier	r_flag_set		1018287	0					
ANR	1019083	ArgumentList	core -> flags		1018287	1					
ANR	1019084	Argument	core -> flags		1018287	0					
ANR	1019085	PtrMemberAccess	core -> flags		1018287	0					
ANR	1019086	Identifier	core		1018287	0					
ANR	1019087	Identifier	flags		1018287	1					
ANR	1019088	Argument	flag		1018287	1					
ANR	1019089	Identifier	flag		1018287	0					
ANR	1019090	Argument	at		1018287	2					
ANR	1019091	Identifier	at		1018287	0					
ANR	1019092	Argument	ret		1018287	3					
ANR	1019093	Identifier	ret		1018287	0					
ANR	1019094	IfStatement	if ( * param -> cmd_hit )		1018287	4					
ANR	1019095	Condition	* param -> cmd_hit	2143:9:64078:64092	1018287	0	True				
ANR	1019096	UnaryOperationExpression	* param -> cmd_hit		1018287	0					
ANR	1019097	UnaryOperator	*		1018287	0					
ANR	1019098	PtrMemberAccess	param -> cmd_hit		1018287	1					
ANR	1019099	Identifier	param		1018287	0					
ANR	1019100	Identifier	cmd_hit		1018287	1					
ANR	1019101	CompoundStatement		156:6:3671:3695	1018287	1					
ANR	1019102	IdentifierDeclStatement	ut64 here = core -> offset ;	2144:6:64103:64127	1018287	0	True				
ANR	1019103	IdentifierDecl	here = core -> offset		1018287	0					
ANR	1019104	IdentifierDeclType	ut64		1018287	0					
ANR	1019105	Identifier	here		1018287	1					
ANR	1019106	AssignmentExpression	here = core -> offset		1018287	2		=			
ANR	1019107	Identifier	here		1018287	0					
ANR	1019108	PtrMemberAccess	core -> offset		1018287	1					
ANR	1019109	Identifier	core		1018287	0					
ANR	1019110	Identifier	offset		1018287	1					
ANR	1019111	ExpressionStatement	"r_core_seek ( core , at , true )"	2145:6:64135:64163	1018287	1	True				
ANR	1019112	CallExpression	"r_core_seek ( core , at , true )"		1018287	0					
ANR	1019113	Callee	r_core_seek		1018287	0					
ANR	1019114	Identifier	r_core_seek		1018287	0					
ANR	1019115	ArgumentList	core		1018287	1					
ANR	1019116	Argument	core		1018287	0					
ANR	1019117	Identifier	core		1018287	0					
ANR	1019118	Argument	at		1018287	1					
ANR	1019119	Identifier	at		1018287	0					
ANR	1019120	Argument	true		1018287	2					
ANR	1019121	Identifier	true		1018287	0					
ANR	1019122	ExpressionStatement	"r_core_cmd ( core , param -> cmd_hit , 0 )"	2146:6:64171:64207	1018287	2	True				
ANR	1019123	CallExpression	"r_core_cmd ( core , param -> cmd_hit , 0 )"		1018287	0					
ANR	1019124	Callee	r_core_cmd		1018287	0					
ANR	1019125	Identifier	r_core_cmd		1018287	0					
ANR	1019126	ArgumentList	core		1018287	1					
ANR	1019127	Argument	core		1018287	0					
ANR	1019128	Identifier	core		1018287	0					
ANR	1019129	Argument	param -> cmd_hit		1018287	1					
ANR	1019130	PtrMemberAccess	param -> cmd_hit		1018287	0					
ANR	1019131	Identifier	param		1018287	0					
ANR	1019132	Identifier	cmd_hit		1018287	1					
ANR	1019133	Argument	0		1018287	2					
ANR	1019134	PrimaryExpression	0		1018287	0					
ANR	1019135	ExpressionStatement	"r_core_seek ( core , here , true )"	2147:6:64215:64245	1018287	3	True				
ANR	1019136	CallExpression	"r_core_seek ( core , here , true )"		1018287	0					
ANR	1019137	Callee	r_core_seek		1018287	0					
ANR	1019138	Identifier	r_core_seek		1018287	0					
ANR	1019139	ArgumentList	core		1018287	1					
ANR	1019140	Argument	core		1018287	0					
ANR	1019141	Identifier	core		1018287	0					
ANR	1019142	Argument	here		1018287	1					
ANR	1019143	Identifier	here		1018287	0					
ANR	1019144	Argument	true		1018287	2					
ANR	1019145	Identifier	true		1018287	0					
ANR	1019146	ExpressionStatement	count ++	2149:5:64259:64266	1018287	5	True				
ANR	1019147	PostIncDecOperationExpression	count ++		1018287	0					
ANR	1019148	Identifier	count		1018287	0					
ANR	1019149	IncDec	++		1018287	1					
ANR	1019150	IfStatement	if ( search -> maxhits && count >= search -> maxhits )		1018287	6					
ANR	1019151	Condition	search -> maxhits && count >= search -> maxhits	2150:9:64277:64319	1018287	0	True				
ANR	1019152	AndExpression	search -> maxhits && count >= search -> maxhits		1018287	0		&&			
ANR	1019153	PtrMemberAccess	search -> maxhits		1018287	0					
ANR	1019154	Identifier	search		1018287	0					
ANR	1019155	Identifier	maxhits		1018287	1					
ANR	1019156	RelationalExpression	count >= search -> maxhits		1018287	1		>=			
ANR	1019157	Identifier	count		1018287	0					
ANR	1019158	PtrMemberAccess	search -> maxhits		1018287	1					
ANR	1019159	Identifier	search		1018287	0					
ANR	1019160	Identifier	maxhits		1018287	1					
ANR	1019161	CompoundStatement		162:54:3890:3890	1018287	1					
ANR	1019162	GotoStatement	goto done ;	2151:6:64330:64339	1018287	0	True				
ANR	1019163	Identifier	done		1018287	0					
ANR	1019164	ExpressionStatement	firstItem = false	2153:5:64353:64370	1018287	7	True				
ANR	1019165	AssignmentExpression	firstItem = false		1018287	0		=			
ANR	1019166	Identifier	firstItem		1018287	0					
ANR	1019167	Identifier	false		1018287	1					
ANR	1019168	IdentifierDeclStatement	int inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1 ;	2155:4:64382:64451	1018287	3	True				
ANR	1019169	IdentifierDecl	inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		1018287	0					
ANR	1019170	IdentifierDeclType	int		1018287	0					
ANR	1019171	Identifier	inc		1018287	1					
ANR	1019172	AssignmentExpression	inc = ( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		1018287	2		=			
ANR	1019173	Identifier	inc		1018287	0					
ANR	1019174	ConditionalExpression	( core -> search -> align > 0 ) ? core -> search -> align - 1 : ret - 1		1018287	1					
ANR	1019175	Condition	core -> search -> align > 0		1018287	0					
ANR	1019176	RelationalExpression	core -> search -> align > 0		1018287	0		>			
ANR	1019177	PtrMemberAccess	core -> search -> align		1018287	0					
ANR	1019178	PtrMemberAccess	core -> search		1018287	0					
ANR	1019179	Identifier	core		1018287	0					
ANR	1019180	Identifier	search		1018287	1					
ANR	1019181	Identifier	align		1018287	1					
ANR	1019182	PrimaryExpression	0		1018287	1					
ANR	1019183	AdditiveExpression	core -> search -> align - 1		1018287	1		-			
ANR	1019184	PtrMemberAccess	core -> search -> align		1018287	0					
ANR	1019185	PtrMemberAccess	core -> search		1018287	0					
ANR	1019186	Identifier	core		1018287	0					
ANR	1019187	Identifier	search		1018287	1					
ANR	1019188	Identifier	align		1018287	1					
ANR	1019189	PrimaryExpression	1		1018287	1					
ANR	1019190	AdditiveExpression	ret - 1		1018287	2		-			
ANR	1019191	Identifier	ret		1018287	0					
ANR	1019192	PrimaryExpression	1		1018287	1					
ANR	1019193	IfStatement	if ( inc < 0 )		1018287	4					
ANR	1019194	Condition	inc < 0	2156:8:64461:64467	1018287	0	True				
ANR	1019195	RelationalExpression	inc < 0		1018287	0		<			
ANR	1019196	Identifier	inc		1018287	0					
ANR	1019197	PrimaryExpression	0		1018287	1					
ANR	1019198	CompoundStatement		168:17:4038:4038	1018287	1					
ANR	1019199	ExpressionStatement	inc = 0	2157:5:64477:64484	1018287	0	True				
ANR	1019200	AssignmentExpression	inc = 0		1018287	0		=			
ANR	1019201	Identifier	inc		1018287	0					
ANR	1019202	PrimaryExpression	0		1018287	1					
ANR	1019203	ExpressionStatement	i += inc	2159:5:64497:64505	1018287	5	True				
ANR	1019204	AssignmentExpression	i += inc		1018287	0		+=			
ANR	1019205	Identifier	i		1018287	0					
ANR	1019206	Identifier	inc		1018287	1					
ANR	1019207	ExpressionStatement	at += inc	2160:5:64512:64521	1018287	6	True				
ANR	1019208	AssignmentExpression	at += inc		1018287	0		+=			
ANR	1019209	Identifier	at		1018287	0					
ANR	1019210	Identifier	inc		1018287	1					
ANR	1019211	Label	done :	2164:0:64535:64539	1018287	26	True				
ANR	1019212	Identifier	done		1018287	0					
ANR	1019213	IfStatement	if ( mode == 'j' )		1018287	27					
ANR	1019214	Condition	mode == 'j'	2165:5:64546:64556	1018287	0	True				
ANR	1019215	EqualityExpression	mode == 'j'		1018287	0		==			
ANR	1019216	Identifier	mode		1018287	0					
ANR	1019217	PrimaryExpression	'j'		1018287	1					
ANR	1019218	CompoundStatement		177:18:4127:4127	1018287	1					
ANR	1019219	ExpressionStatement	"r_cons_println ( ""]\\n"" )"	2166:2:64563:64585	1018287	0	True				
ANR	1019220	CallExpression	"r_cons_println ( ""]\\n"" )"		1018287	0					
ANR	1019221	Callee	r_cons_println		1018287	0					
ANR	1019222	Identifier	r_cons_println		1018287	0					
ANR	1019223	ArgumentList	"""]\\n"""		1018287	1					
ANR	1019224	Argument	"""]\\n"""		1018287	0					
ANR	1019225	PrimaryExpression	"""]\\n"""		1018287	0					
ANR	1019226	ExpressionStatement	r_cons_break_pop ( )	2168:1:64591:64610	1018287	28	True				
ANR	1019227	CallExpression	r_cons_break_pop ( )		1018287	0					
ANR	1019228	Callee	r_cons_break_pop		1018287	0					
ANR	1019229	Identifier	r_cons_break_pop		1018287	0					
ANR	1019230	ArgumentList			1018287	1					
ANR	1019231	ReturnStatement	return false ;	2169:1:64613:64625	1018287	29	True				
ANR	1019232	Identifier	false		1018287	0					
ANR	1019233	ReturnType	static bool		1018287	1					
ANR	1019234	Identifier	do_anal_search		1018287	2					
ANR	1019235	ParameterList	"RCore * core , struct search_parameters * param , const char * input"		1018287	3					
ANR	1019236	Parameter	RCore * core	1989:27:60366:60376	1018287	0	True				
ANR	1019237	ParameterType	RCore *		1018287	0					
ANR	1019238	Identifier	core		1018287	1					
ANR	1019239	Parameter	struct search_parameters * param	1989:40:60379:60409	1018287	1	True				
ANR	1019240	ParameterType	struct search_parameters *		1018287	0					
ANR	1019241	Identifier	param		1018287	1					
ANR	1019242	Parameter	const char * input	1989:73:60412:60428	1018287	2	True				
ANR	1019243	ParameterType	const char *		1018287	0					
ANR	1019244	Identifier	input		1018287	1					
ANR	1019245	CFGEntryNode	ENTRY		1018287		True				
ANR	1019246	CFGExitNode	EXIT		1018287		True				
ANR	1019247	CFGErrorNode	ERROR		1018287		True				
ANR	1019248	Symbol	aop		1018287						
ANR	1019249	Symbol	search -> maxhits		1018287						
ANR	1019250	Symbol	* map		1018287						
ANR	1019251	Symbol	* input		1018287						
ANR	1019252	Symbol	aop . type		1018287						
ANR	1019253	Symbol	aop . cond		1018287						
ANR	1019254	Symbol	core -> offset		1018287						
ANR	1019255	Symbol	aop . family		1018287						
ANR	1019256	Symbol	firstItem		1018287						
ANR	1019257	Symbol	type		1018287						
ANR	1019258	Symbol	& param		1018287						
ANR	1019259	Symbol	bufop		1018287						
ANR	1019260	Symbol	mode		1018287						
ANR	1019261	Symbol	aop . mnemonic		1018287						
ANR	1019262	Symbol	fam		1018287						
ANR	1019263	Symbol	core -> search -> align		1018287						
ANR	1019264	Symbol	from		1018287						
ANR	1019265	Symbol	r_anal_op		1018287						
ANR	1019266	Symbol	ret		1018287						
ANR	1019267	Symbol	strcmp		1018287						
ANR	1019268	Symbol	NULL		1018287						
ANR	1019269	Symbol	count		1018287						
ANR	1019270	Symbol	iter		1018287						
ANR	1019271	Symbol	r_core_op_str		1018287						
ANR	1019272	Symbol	* core -> search		1018287						
ANR	1019273	Symbol	& aop		1018287						
ANR	1019274	Symbol	* param		1018287						
ANR	1019275	Symbol	str		1018287						
ANR	1019276	Symbol	dosearch		1018287						
ANR	1019277	Symbol	core		1018287						
ANR	1019278	Symbol	input		1018287						
ANR	1019279	Symbol	at		1018287						
ANR	1019280	Symbol	strstr		1018287						
ANR	1019281	Symbol	R_ANAL_OP_MASK_DISASM		1018287						
ANR	1019282	Symbol	true		1018287						
ANR	1019283	Symbol	r_str_trim_ro		1018287						
ANR	1019284	Symbol	* * param		1018287						
ANR	1019285	Symbol	searchprefix		1018287						
ANR	1019286	Symbol	help_msg_slash_a		1018287						
ANR	1019287	Symbol	here		1018287						
ANR	1019288	Symbol	map -> itv		1018287						
ANR	1019289	Symbol	flag		1018287						
ANR	1019290	Symbol	* core		1018287						
ANR	1019291	Symbol	r_anal_optype_to_string		1018287						
ANR	1019292	Symbol	kwidx		1018287						
ANR	1019293	Symbol	core -> anal		1018287						
ANR	1019294	Symbol	R_ANAL_OP_MASK_BASIC		1018287						
ANR	1019295	Symbol	search		1018287						
ANR	1019296	Symbol	r_cons_is_breaked		1018287						
ANR	1019297	Symbol	* param -> cmd_hit		1018287						
ANR	1019298	Symbol	core -> io		1018287						
ANR	1019299	Symbol	param		1018287						
ANR	1019300	Symbol	* str		1018287						
ANR	1019301	Symbol	map -> itv . addr		1018287						
ANR	1019302	Symbol	core -> search		1018287						
ANR	1019303	Symbol	map		1018287						
ANR	1019304	Symbol	* * core		1018287						
ANR	1019305	Symbol	inc		1018287						
ANR	1019306	Symbol	r_str_startswith		1018287						
ANR	1019307	Symbol	opstr		1018287						
ANR	1019308	Symbol	r_anal_op_family_to_string		1018287						
ANR	1019309	Symbol	searchflags		1018287						
ANR	1019310	Symbol	false		1018287						
ANR	1019311	Symbol	match		1018287						
ANR	1019312	Symbol	i		1018287						
ANR	1019313	Symbol	core -> flags		1018287						
ANR	1019314	Symbol	* search		1018287						
ANR	1019315	Symbol	r_itv_end		1018287						
ANR	1019316	Symbol	core -> search -> n_kws		1018287						
ANR	1019317	Symbol	isCandidate		1018287						
ANR	1019318	Symbol	to		1018287						
ANR	1019319	Symbol	param -> cmd_hit		1018287						
ANR	1019320	Function	do_section_search	2172:0:64630:66283							
ANR	1019321	FunctionDef	"do_section_search (RCore * core , struct search_parameters * param , const char * input)"		1019320	0					
ANR	1019322	CompoundStatement		2172:95:64725:66283	1019320	0					
ANR	1019323	IdentifierDeclStatement	double threshold = 1 ;	2173:1:64728:64748	1019320	0	True				
ANR	1019324	IdentifierDecl	threshold = 1		1019320	0					
ANR	1019325	IdentifierDeclType	double		1019320	0					
ANR	1019326	Identifier	threshold		1019320	1					
ANR	1019327	AssignmentExpression	threshold = 1		1019320	2		=			
ANR	1019328	Identifier	threshold		1019320	0					
ANR	1019329	PrimaryExpression	1		1019320	1					
ANR	1019330	IdentifierDeclStatement	bool r2mode = false ;	2174:1:64751:64770	1019320	1	True				
ANR	1019331	IdentifierDecl	r2mode = false		1019320	0					
ANR	1019332	IdentifierDeclType	bool		1019320	0					
ANR	1019333	Identifier	r2mode		1019320	1					
ANR	1019334	AssignmentExpression	r2mode = false		1019320	2		=			
ANR	1019335	Identifier	false		1019320	0					
ANR	1019336	Identifier	false		1019320	1					
ANR	1019337	IfStatement	if ( input && * input )		1019320	2					
ANR	1019338	Condition	input && * input	2175:5:64777:64791	1019320	0	True				
ANR	1019339	AndExpression	input && * input		1019320	0		&&			
ANR	1019340	Identifier	input		1019320	0					
ANR	1019341	UnaryOperationExpression	* input		1019320	1					
ANR	1019342	UnaryOperator	*		1019320	0					
ANR	1019343	Identifier	input		1019320	1					
ANR	1019344	CompoundStatement		4:22:68:68	1019320	1					
ANR	1019345	IfStatement	if ( * input == '*' )		1019320	0					
ANR	1019346	Condition	* input == '*'	2176:6:64802:64814	1019320	0	True				
ANR	1019347	EqualityExpression	* input == '*'		1019320	0		==			
ANR	1019348	UnaryOperationExpression	* input		1019320	0					
ANR	1019349	UnaryOperator	*		1019320	0					
ANR	1019350	Identifier	input		1019320	1					
ANR	1019351	PrimaryExpression	'*'		1019320	1					
ANR	1019352	CompoundStatement		5:21:91:91	1019320	1					
ANR	1019353	ExpressionStatement	r2mode = true	2177:3:64822:64835	1019320	0	True				
ANR	1019354	AssignmentExpression	r2mode = true		1019320	0		=			
ANR	1019355	Identifier	r2mode		1019320	0					
ANR	1019356	Identifier	true		1019320	1					
ANR	1019357	ExpressionStatement	"sscanf ( input , ""%lf"" , & threshold )"	2179:2:64843:64876	1019320	1	True				
ANR	1019358	CallExpression	"sscanf ( input , ""%lf"" , & threshold )"		1019320	0					
ANR	1019359	Callee	sscanf		1019320	0					
ANR	1019360	Identifier	sscanf		1019320	0					
ANR	1019361	ArgumentList	input		1019320	1					
ANR	1019362	Argument	input		1019320	0					
ANR	1019363	Identifier	input		1019320	0					
ANR	1019364	Argument	"""%lf"""		1019320	1					
ANR	1019365	PrimaryExpression	"""%lf"""		1019320	0					
ANR	1019366	Argument	& threshold		1019320	2					
ANR	1019367	UnaryOperationExpression	& threshold		1019320	0					
ANR	1019368	UnaryOperator	&		1019320	0					
ANR	1019369	Identifier	threshold		1019320	1					
ANR	1019370	IfStatement	if ( threshold < 1 )		1019320	2					
ANR	1019371	Condition	threshold < 1	2180:6:64884:64896	1019320	0	True				
ANR	1019372	RelationalExpression	threshold < 1		1019320	0		<			
ANR	1019373	Identifier	threshold		1019320	0					
ANR	1019374	PrimaryExpression	1		1019320	1					
ANR	1019375	CompoundStatement		9:21:173:173	1019320	1					
ANR	1019376	ExpressionStatement	threshold = 1	2181:3:64904:64917	1019320	0	True				
ANR	1019377	AssignmentExpression	threshold = 1		1019320	0		=			
ANR	1019378	Identifier	threshold		1019320	0					
ANR	1019379	PrimaryExpression	1		1019320	1					
ANR	1019380	IdentifierDeclStatement	int buf_size = core -> blocksize ;	2184:1:64927:64957	1019320	3	True				
ANR	1019381	IdentifierDecl	buf_size = core -> blocksize		1019320	0					
ANR	1019382	IdentifierDeclType	int		1019320	0					
ANR	1019383	Identifier	buf_size		1019320	1					
ANR	1019384	AssignmentExpression	buf_size = core -> blocksize		1019320	2		=			
ANR	1019385	Identifier	buf_size		1019320	0					
ANR	1019386	PtrMemberAccess	core -> blocksize		1019320	1					
ANR	1019387	Identifier	core		1019320	0					
ANR	1019388	Identifier	blocksize		1019320	1					
ANR	1019389	IdentifierDeclStatement	ut8 * buf = malloc ( buf_size ) ;	2185:1:64960:64988	1019320	4	True				
ANR	1019390	IdentifierDecl	* buf = malloc ( buf_size )		1019320	0					
ANR	1019391	IdentifierDeclType	ut8 *		1019320	0					
ANR	1019392	Identifier	buf		1019320	1					
ANR	1019393	AssignmentExpression	* buf = malloc ( buf_size )		1019320	2		=			
ANR	1019394	Identifier	buf		1019320	0					
ANR	1019395	CallExpression	malloc ( buf_size )		1019320	1					
ANR	1019396	Callee	malloc		1019320	0					
ANR	1019397	Identifier	malloc		1019320	0					
ANR	1019398	ArgumentList	buf_size		1019320	1					
ANR	1019399	Argument	buf_size		1019320	0					
ANR	1019400	Identifier	buf_size		1019320	0					
ANR	1019401	IfStatement	if ( ! buf )		1019320	5					
ANR	1019402	Condition	! buf	2186:5:64995:64998	1019320	0	True				
ANR	1019403	UnaryOperationExpression	! buf		1019320	0					
ANR	1019404	UnaryOperator	!		1019320	0					
ANR	1019405	Identifier	buf		1019320	1					
ANR	1019406	CompoundStatement		15:11:275:275	1019320	1					
ANR	1019407	ReturnStatement	return ;	2187:2:65005:65011	1019320	0	True				
ANR	1019408	IdentifierDeclStatement	double oe = 0 ;	2189:1:65017:65030	1019320	6	True				
ANR	1019409	IdentifierDecl	oe = 0		1019320	0					
ANR	1019410	IdentifierDeclType	double		1019320	0					
ANR	1019411	Identifier	oe		1019320	1					
ANR	1019412	AssignmentExpression	oe = 0		1019320	2		=			
ANR	1019413	Identifier	oe		1019320	0					
ANR	1019414	PrimaryExpression	0		1019320	1					
ANR	1019415	IdentifierDeclStatement	RListIter * iter ;	2190:1:65033:65048	1019320	7	True				
ANR	1019416	IdentifierDecl	* iter		1019320	0					
ANR	1019417	IdentifierDeclType	RListIter *		1019320	0					
ANR	1019418	Identifier	iter		1019320	1					
ANR	1019419	IdentifierDeclStatement	RIOMap * map ;	2191:1:65051:65062	1019320	8	True				
ANR	1019420	IdentifierDecl	* map		1019320	0					
ANR	1019421	IdentifierDeclType	RIOMap *		1019320	0					
ANR	1019422	Identifier	map		1019320	1					
ANR	1019423	IdentifierDeclStatement	ut64 begin = UT64_MAX ;	2192:1:65065:65086	1019320	9	True				
ANR	1019424	IdentifierDecl	begin = UT64_MAX		1019320	0					
ANR	1019425	IdentifierDeclType	ut64		1019320	0					
ANR	1019426	Identifier	begin		1019320	1					
ANR	1019427	AssignmentExpression	begin = UT64_MAX		1019320	2		=			
ANR	1019428	Identifier	UT64_MAX		1019320	0					
ANR	1019429	Identifier	UT64_MAX		1019320	1					
ANR	1019430	IdentifierDeclStatement	"ut64 at , end = 0 ;"	2193:1:65089:65105	1019320	10	True				
ANR	1019431	IdentifierDecl	at		1019320	0					
ANR	1019432	IdentifierDeclType	ut64		1019320	0					
ANR	1019433	Identifier	at		1019320	1					
ANR	1019434	IdentifierDecl	end = 0		1019320	1					
ANR	1019435	IdentifierDeclType	ut64		1019320	0					
ANR	1019436	Identifier	end		1019320	1					
ANR	1019437	AssignmentExpression	end = 0		1019320	2		=			
ANR	1019438	Identifier	end		1019320	0					
ANR	1019439	PrimaryExpression	0		1019320	1					
ANR	1019440	IdentifierDeclStatement	int index = 0 ;	2194:1:65108:65121	1019320	11	True				
ANR	1019441	IdentifierDecl	index = 0		1019320	0					
ANR	1019442	IdentifierDeclType	int		1019320	0					
ANR	1019443	Identifier	index		1019320	1					
ANR	1019444	AssignmentExpression	index = 0		1019320	2		=			
ANR	1019445	Identifier	index		1019320	0					
ANR	1019446	PrimaryExpression	0		1019320	1					
ANR	1019447	IdentifierDeclStatement	bool lastBlock = true ;	2195:1:65124:65145	1019320	12	True				
ANR	1019448	IdentifierDecl	lastBlock = true		1019320	0					
ANR	1019449	IdentifierDeclType	bool		1019320	0					
ANR	1019450	Identifier	lastBlock		1019320	1					
ANR	1019451	AssignmentExpression	lastBlock = true		1019320	2		=			
ANR	1019452	Identifier	true		1019320	0					
ANR	1019453	Identifier	true		1019320	1					
ANR	1019454	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2196:1:65148:65178	1019320	13	True				
ANR	1019455	CallExpression	"r_cons_break_push ( NULL , NULL )"		1019320	0					
ANR	1019456	Callee	r_cons_break_push		1019320	0					
ANR	1019457	Identifier	r_cons_break_push		1019320	0					
ANR	1019458	ArgumentList	NULL		1019320	1					
ANR	1019459	Argument	NULL		1019320	0					
ANR	1019460	Identifier	NULL		1019320	0					
ANR	1019461	Argument	NULL		1019320	1					
ANR	1019462	Identifier	NULL		1019320	0					
ANR	1019463	Statement	r_list_foreach	2197:1:65181:65194	1019320	14	True				
ANR	1019464	Statement	(	2197:16:65196:65196	1019320	15	True				
ANR	1019465	Statement	param	2197:17:65197:65201	1019320	16	True				
ANR	1019466	Statement	->	2197:22:65202:65203	1019320	17	True				
ANR	1019467	Statement	boundaries	2197:24:65204:65213	1019320	18	True				
ANR	1019468	Statement	","	2197:34:65214:65214	1019320	19	True				
ANR	1019469	Statement	iter	2197:36:65216:65219	1019320	20	True				
ANR	1019470	Statement	","	2197:40:65220:65220	1019320	21	True				
ANR	1019471	Statement	map	2197:42:65222:65224	1019320	22	True				
ANR	1019472	Statement	)	2197:45:65225:65225	1019320	23	True				
ANR	1019473	CompoundStatement		28:2:534:564	1019320	24					
ANR	1019474	IdentifierDeclStatement	ut64 from = map -> itv . addr ;	2198:2:65231:65256	1019320	0	True				
ANR	1019475	IdentifierDecl	from = map -> itv . addr		1019320	0					
ANR	1019476	IdentifierDeclType	ut64		1019320	0					
ANR	1019477	Identifier	from		1019320	1					
ANR	1019478	AssignmentExpression	from = map -> itv . addr		1019320	2		=			
ANR	1019479	Identifier	from		1019320	0					
ANR	1019480	MemberAccess	map -> itv . addr		1019320	1					
ANR	1019481	PtrMemberAccess	map -> itv		1019320	0					
ANR	1019482	Identifier	map		1019320	0					
ANR	1019483	Identifier	itv		1019320	1					
ANR	1019484	Identifier	addr		1019320	1					
ANR	1019485	IdentifierDeclStatement	ut64 to = r_itv_end ( map -> itv ) ;	2199:2:65260:65290	1019320	1	True				
ANR	1019486	IdentifierDecl	to = r_itv_end ( map -> itv )		1019320	0					
ANR	1019487	IdentifierDeclType	ut64		1019320	0					
ANR	1019488	Identifier	to		1019320	1					
ANR	1019489	AssignmentExpression	to = r_itv_end ( map -> itv )		1019320	2		=			
ANR	1019490	Identifier	to		1019320	0					
ANR	1019491	CallExpression	r_itv_end ( map -> itv )		1019320	1					
ANR	1019492	Callee	r_itv_end		1019320	0					
ANR	1019493	Identifier	r_itv_end		1019320	0					
ANR	1019494	ArgumentList	map -> itv		1019320	1					
ANR	1019495	Argument	map -> itv		1019320	0					
ANR	1019496	PtrMemberAccess	map -> itv		1019320	0					
ANR	1019497	Identifier	map		1019320	0					
ANR	1019498	Identifier	itv		1019320	1					
ANR	1019499	IfStatement	if ( r_cons_is_breaked ( ) )		1019320	2					
ANR	1019500	Condition	r_cons_is_breaked ( )	2200:6:65298:65317	1019320	0	True				
ANR	1019501	CallExpression	r_cons_is_breaked ( )		1019320	0					
ANR	1019502	Callee	r_cons_is_breaked		1019320	0					
ANR	1019503	Identifier	r_cons_is_breaked		1019320	0					
ANR	1019504	ArgumentList			1019320	1					
ANR	1019505	CompoundStatement		29:28:594:594	1019320	1					
ANR	1019506	BreakStatement	break ;	2201:3:65325:65330	1019320	0	True				
ANR	1019507	ForStatement	for ( at = from ; at < to ; at += buf_size )		1019320	3					
ANR	1019508	ForInit	at = from ;	2203:7:65343:65352	1019320	0	True				
ANR	1019509	AssignmentExpression	at = from		1019320	0		=			
ANR	1019510	Identifier	at		1019320	0					
ANR	1019511	Identifier	from		1019320	1					
ANR	1019512	Condition	at < to	2203:18:65354:65360	1019320	1	True				
ANR	1019513	RelationalExpression	at < to		1019320	0		<			
ANR	1019514	Identifier	at		1019320	0					
ANR	1019515	Identifier	to		1019320	1					
ANR	1019516	AssignmentExpression	at += buf_size	2203:27:65363:65376	1019320	2	True	+=			
ANR	1019517	Identifier	at		1019320	0					
ANR	1019518	Identifier	buf_size		1019320	1					
ANR	1019519	CompoundStatement		38:3:800:820	1019320	3					
ANR	1019520	IfStatement	if ( begin == UT64_MAX )		1019320	0					
ANR	1019521	Condition	begin == UT64_MAX	2204:7:65388:65404	1019320	0	True				
ANR	1019522	EqualityExpression	begin == UT64_MAX		1019320	0		==			
ANR	1019523	Identifier	begin		1019320	0					
ANR	1019524	Identifier	UT64_MAX		1019320	1					
ANR	1019525	CompoundStatement		33:26:681:681	1019320	1					
ANR	1019526	ExpressionStatement	begin = at	2205:4:65413:65423	1019320	0	True				
ANR	1019527	AssignmentExpression	begin = at		1019320	0		=			
ANR	1019528	Identifier	begin		1019320	0					
ANR	1019529	Identifier	at		1019320	1					
ANR	1019530	ExpressionStatement	"r_io_read_at ( core -> io , at , buf , buf_size )"	2207:3:65433:65475	1019320	1	True				
ANR	1019531	CallExpression	"r_io_read_at ( core -> io , at , buf , buf_size )"		1019320	0					
ANR	1019532	Callee	r_io_read_at		1019320	0					
ANR	1019533	Identifier	r_io_read_at		1019320	0					
ANR	1019534	ArgumentList	core -> io		1019320	1					
ANR	1019535	Argument	core -> io		1019320	0					
ANR	1019536	PtrMemberAccess	core -> io		1019320	0					
ANR	1019537	Identifier	core		1019320	0					
ANR	1019538	Identifier	io		1019320	1					
ANR	1019539	Argument	at		1019320	1					
ANR	1019540	Identifier	at		1019320	0					
ANR	1019541	Argument	buf		1019320	2					
ANR	1019542	Identifier	buf		1019320	0					
ANR	1019543	Argument	buf_size		1019320	3					
ANR	1019544	Identifier	buf_size		1019320	0					
ANR	1019545	IdentifierDeclStatement	"double e = r_hash_entropy ( buf , buf_size ) ;"	2208:3:65480:65521	1019320	2	True				
ANR	1019546	IdentifierDecl	"e = r_hash_entropy ( buf , buf_size )"		1019320	0					
ANR	1019547	IdentifierDeclType	double		1019320	0					
ANR	1019548	Identifier	e		1019320	1					
ANR	1019549	AssignmentExpression	"e = r_hash_entropy ( buf , buf_size )"		1019320	2		=			
ANR	1019550	Identifier	e		1019320	0					
ANR	1019551	CallExpression	"r_hash_entropy ( buf , buf_size )"		1019320	1					
ANR	1019552	Callee	r_hash_entropy		1019320	0					
ANR	1019553	Identifier	r_hash_entropy		1019320	0					
ANR	1019554	ArgumentList	buf		1019320	1					
ANR	1019555	Argument	buf		1019320	0					
ANR	1019556	Identifier	buf		1019320	0					
ANR	1019557	Argument	buf_size		1019320	1					
ANR	1019558	Identifier	buf_size		1019320	0					
ANR	1019559	IdentifierDeclStatement	double diff = oe - e ;	2209:3:65526:65546	1019320	3	True				
ANR	1019560	IdentifierDecl	diff = oe - e		1019320	0					
ANR	1019561	IdentifierDeclType	double		1019320	0					
ANR	1019562	Identifier	diff		1019320	1					
ANR	1019563	AssignmentExpression	diff = oe - e		1019320	2		=			
ANR	1019564	Identifier	diff		1019320	0					
ANR	1019565	AdditiveExpression	oe - e		1019320	1		-			
ANR	1019566	Identifier	oe		1019320	0					
ANR	1019567	Identifier	e		1019320	1					
ANR	1019568	ExpressionStatement	diff = R_ABS ( diff )	2210:3:65551:65570	1019320	4	True				
ANR	1019569	AssignmentExpression	diff = R_ABS ( diff )		1019320	0		=			
ANR	1019570	Identifier	diff		1019320	0					
ANR	1019571	CallExpression	R_ABS ( diff )		1019320	1					
ANR	1019572	Callee	R_ABS		1019320	0					
ANR	1019573	Identifier	R_ABS		1019320	0					
ANR	1019574	ArgumentList	diff		1019320	1					
ANR	1019575	Argument	diff		1019320	0					
ANR	1019576	Identifier	diff		1019320	0					
ANR	1019577	ExpressionStatement	end = at + buf_size	2211:3:65575:65594	1019320	5	True				
ANR	1019578	AssignmentExpression	end = at + buf_size		1019320	0		=			
ANR	1019579	Identifier	end		1019320	0					
ANR	1019580	AdditiveExpression	at + buf_size		1019320	1		+			
ANR	1019581	Identifier	at		1019320	0					
ANR	1019582	Identifier	buf_size		1019320	1					
ANR	1019583	IfStatement	if ( diff > threshold )		1019320	6					
ANR	1019584	Condition	diff > threshold	2212:7:65603:65618	1019320	0	True				
ANR	1019585	RelationalExpression	diff > threshold		1019320	0		>			
ANR	1019586	Identifier	diff		1019320	0					
ANR	1019587	Identifier	threshold		1019320	1					
ANR	1019588	CompoundStatement		41:25:895:895	1019320	1					
ANR	1019589	IfStatement	if ( r2mode )		1019320	0					
ANR	1019590	Condition	r2mode	2213:8:65631:65636	1019320	0	True				
ANR	1019591	Identifier	r2mode		1019320	0					
ANR	1019592	CompoundStatement		42:16:913:913	1019320	1					
ANR	1019593	Statement	r_cons_printf	2214:5:65646:65658	1019320	0	True				
ANR	1019594	Statement	(	2214:19:65660:65660	1019320	1	True				
ANR	1019595	Statement	"""f entropy_section_%d 0x%08"""	2214:20:65661:65688	1019320	2	True				
ANR	1019596	Statement	PFMT64x	2214:48:65689:65695	1019320	3	True				
ANR	1019597	Statement	""" 0x%08"""	2214:55:65696:65703	1019320	4	True				
ANR	1019598	Statement	PFMT64x	2214:63:65704:65710	1019320	5	True				
ANR	1019599	Statement	"""\\n"""	2214:70:65711:65714	1019320	6	True				
ANR	1019600	Statement	","	2214:74:65715:65715	1019320	7	True				
ANR	1019601	Statement	index	2214:76:65717:65721	1019320	8	True				
ANR	1019602	Statement	","	2214:81:65722:65722	1019320	9	True				
ANR	1019603	Statement	end	2214:83:65724:65726	1019320	10	True				
ANR	1019604	Statement	-	2214:87:65728:65728	1019320	11	True				
ANR	1019605	Statement	begin	2214:89:65730:65734	1019320	12	True				
ANR	1019606	Statement	","	2214:94:65735:65735	1019320	13	True				
ANR	1019607	Statement	begin	2214:96:65737:65741	1019320	14	True				
ANR	1019608	Statement	)	2214:101:65742:65742	1019320	15	True				
ANR	1019609	ExpressionStatement		2214:102:65743:65743	1019320	16	True				
ANR	1019610	ElseStatement	else		1019320	0					
ANR	1019611	CompoundStatement		44:11:1030:1030	1019320	0					
ANR	1019612	Statement	r_cons_printf	2216:5:65763:65775	1019320	0	True				
ANR	1019613	Statement	(	2216:19:65777:65777	1019320	1	True				
ANR	1019614	Statement	"""0x%08"""	2216:20:65778:65784	1019320	2	True				
ANR	1019615	Statement	PFMT64x	2216:27:65785:65791	1019320	3	True				
ANR	1019616	Statement	""" - 0x%08"""	2216:34:65792:65801	1019320	4	True				
ANR	1019617	Statement	PFMT64x	2216:44:65802:65808	1019320	5	True				
ANR	1019618	Statement	""" ~ %lf\\n"""	2216:51:65809:65818	1019320	6	True				
ANR	1019619	Statement	","	2216:61:65819:65819	1019320	7	True				
ANR	1019620	Statement	begin	2216:63:65821:65825	1019320	8	True				
ANR	1019621	Statement	","	2216:68:65826:65826	1019320	9	True				
ANR	1019622	Statement	end	2216:70:65828:65830	1019320	10	True				
ANR	1019623	Statement	","	2216:73:65831:65831	1019320	11	True				
ANR	1019624	Statement	e	2216:75:65833:65833	1019320	12	True				
ANR	1019625	Statement	)	2216:76:65834:65834	1019320	13	True				
ANR	1019626	ExpressionStatement		2216:77:65835:65835	1019320	14	True				
ANR	1019627	ExpressionStatement	begin = UT64_MAX	2218:4:65847:65863	1019320	1	True				
ANR	1019628	AssignmentExpression	begin = UT64_MAX		1019320	0		=			
ANR	1019629	Identifier	begin		1019320	0					
ANR	1019630	Identifier	UT64_MAX		1019320	1					
ANR	1019631	ExpressionStatement	index ++	2219:4:65869:65876	1019320	2	True				
ANR	1019632	PostIncDecOperationExpression	index ++		1019320	0					
ANR	1019633	Identifier	index		1019320	0					
ANR	1019634	IncDec	++		1019320	1					
ANR	1019635	ExpressionStatement	lastBlock = false	2220:4:65882:65899	1019320	3	True				
ANR	1019636	AssignmentExpression	lastBlock = false		1019320	0		=			
ANR	1019637	Identifier	lastBlock		1019320	0					
ANR	1019638	Identifier	false		1019320	1					
ANR	1019639	ElseStatement	else		1019320	0					
ANR	1019640	CompoundStatement		50:10:1185:1185	1019320	0					
ANR	1019641	ExpressionStatement	lastBlock = true	2222:4:65917:65933	1019320	0	True				
ANR	1019642	AssignmentExpression	lastBlock = true		1019320	0		=			
ANR	1019643	Identifier	lastBlock		1019320	0					
ANR	1019644	Identifier	true		1019320	1					
ANR	1019645	ExpressionStatement	oe = e	2224:3:65943:65949	1019320	7	True				
ANR	1019646	AssignmentExpression	oe = e		1019320	0		=			
ANR	1019647	Identifier	oe		1019320	0					
ANR	1019648	Identifier	e		1019320	1					
ANR	1019649	ExpressionStatement	begin = UT64_MAX	2226:2:65957:65973	1019320	4	True				
ANR	1019650	AssignmentExpression	begin = UT64_MAX		1019320	0		=			
ANR	1019651	Identifier	begin		1019320	0					
ANR	1019652	Identifier	UT64_MAX		1019320	1					
ANR	1019653	IfStatement	if ( begin != UT64_MAX && lastBlock )		1019320	25					
ANR	1019654	Condition	begin != UT64_MAX && lastBlock	2228:5:65983:66012	1019320	0	True				
ANR	1019655	AndExpression	begin != UT64_MAX && lastBlock		1019320	0		&&			
ANR	1019656	EqualityExpression	begin != UT64_MAX		1019320	0		!=			
ANR	1019657	Identifier	begin		1019320	0					
ANR	1019658	Identifier	UT64_MAX		1019320	1					
ANR	1019659	Identifier	lastBlock		1019320	1					
ANR	1019660	CompoundStatement		57:37:1289:1289	1019320	1					
ANR	1019661	IfStatement	if ( r2mode )		1019320	0					
ANR	1019662	Condition	r2mode	2229:6:66023:66028	1019320	0	True				
ANR	1019663	Identifier	r2mode		1019320	0					
ANR	1019664	CompoundStatement		58:14:1305:1305	1019320	1					
ANR	1019665	Statement	r_cons_printf	2230:3:66036:66048	1019320	0	True				
ANR	1019666	Statement	(	2230:17:66050:66050	1019320	1	True				
ANR	1019667	Statement	"""f entropy_section_%d 0x%08"""	2230:18:66051:66078	1019320	2	True				
ANR	1019668	Statement	PFMT64x	2230:46:66079:66085	1019320	3	True				
ANR	1019669	Statement	""" 0x%08"""	2230:53:66086:66093	1019320	4	True				
ANR	1019670	Statement	PFMT64x	2230:61:66094:66100	1019320	5	True				
ANR	1019671	Statement	"""\\n"""	2230:68:66101:66104	1019320	6	True				
ANR	1019672	Statement	","	2230:72:66105:66105	1019320	7	True				
ANR	1019673	Statement	index	2230:74:66107:66111	1019320	8	True				
ANR	1019674	Statement	","	2230:79:66112:66112	1019320	9	True				
ANR	1019675	Statement	end	2230:81:66114:66116	1019320	10	True				
ANR	1019676	Statement	-	2230:85:66118:66118	1019320	11	True				
ANR	1019677	Statement	begin	2230:87:66120:66124	1019320	12	True				
ANR	1019678	Statement	","	2230:92:66125:66125	1019320	13	True				
ANR	1019679	Statement	begin	2230:94:66127:66131	1019320	14	True				
ANR	1019680	Statement	)	2230:99:66132:66132	1019320	15	True				
ANR	1019681	ExpressionStatement		2230:100:66133:66133	1019320	16	True				
ANR	1019682	ElseStatement	else		1019320	0					
ANR	1019683	CompoundStatement		60:9:1418:1418	1019320	0					
ANR	1019684	Statement	r_cons_printf	2232:3:66149:66161	1019320	0	True				
ANR	1019685	Statement	(	2232:17:66163:66163	1019320	1	True				
ANR	1019686	Statement	"""0x%08"""	2232:18:66164:66170	1019320	2	True				
ANR	1019687	Statement	PFMT64x	2232:25:66171:66177	1019320	3	True				
ANR	1019688	Statement	""" - 0x%08"""	2232:32:66178:66187	1019320	4	True				
ANR	1019689	Statement	PFMT64x	2232:42:66188:66194	1019320	5	True				
ANR	1019690	Statement	""" ~ %lf .. last\\n"""	2232:49:66195:66212	1019320	6	True				
ANR	1019691	Statement	","	2232:67:66213:66213	1019320	7	True				
ANR	1019692	Statement	begin	2232:69:66215:66219	1019320	8	True				
ANR	1019693	Statement	","	2232:74:66220:66220	1019320	9	True				
ANR	1019694	Statement	end	2232:76:66222:66224	1019320	10	True				
ANR	1019695	Statement	","	2232:79:66225:66225	1019320	11	True				
ANR	1019696	Statement	0	2232:81:66227:66227	1019320	12	True				
ANR	1019697	Statement	)	2232:82:66228:66228	1019320	13	True				
ANR	1019698	ExpressionStatement		2232:83:66229:66229	1019320	14	True				
ANR	1019699	ExpressionStatement	index ++	2234:2:66237:66244	1019320	1	True				
ANR	1019700	PostIncDecOperationExpression	index ++		1019320	0					
ANR	1019701	Identifier	index		1019320	0					
ANR	1019702	IncDec	++		1019320	1					
ANR	1019703	ExpressionStatement	r_cons_break_pop ( )	2236:1:66250:66268	1019320	26	True				
ANR	1019704	CallExpression	r_cons_break_pop ( )		1019320	0					
ANR	1019705	Callee	r_cons_break_pop		1019320	0					
ANR	1019706	Identifier	r_cons_break_pop		1019320	0					
ANR	1019707	ArgumentList			1019320	1					
ANR	1019708	ExpressionStatement	free ( buf )	2237:1:66271:66281	1019320	27	True				
ANR	1019709	CallExpression	free ( buf )		1019320	0					
ANR	1019710	Callee	free		1019320	0					
ANR	1019711	Identifier	free		1019320	0					
ANR	1019712	ArgumentList	buf		1019320	1					
ANR	1019713	Argument	buf		1019320	0					
ANR	1019714	Identifier	buf		1019320	0					
ANR	1019715	ReturnType	static void		1019320	1					
ANR	1019716	Identifier	do_section_search		1019320	2					
ANR	1019717	ParameterList	"RCore * core , struct search_parameters * param , const char * input"		1019320	3					
ANR	1019718	Parameter	RCore * core	2172:30:64660:64670	1019320	0	True				
ANR	1019719	ParameterType	RCore *		1019320	0					
ANR	1019720	Identifier	core		1019320	1					
ANR	1019721	Parameter	struct search_parameters * param	2172:43:64673:64703	1019320	1	True				
ANR	1019722	ParameterType	struct search_parameters *		1019320	0					
ANR	1019723	Identifier	param		1019320	1					
ANR	1019724	Parameter	const char * input	2172:76:64706:64722	1019320	2	True				
ANR	1019725	ParameterType	const char *		1019320	0					
ANR	1019726	Identifier	input		1019320	1					
ANR	1019727	CFGEntryNode	ENTRY		1019320		True				
ANR	1019728	CFGExitNode	EXIT		1019320		True				
ANR	1019729	CFGErrorNode	ERROR		1019320		True				
ANR	1019730	Symbol	map -> itv		1019320						
ANR	1019731	Symbol	* map		1019320						
ANR	1019732	Symbol	* input		1019320						
ANR	1019733	Symbol	* core		1019320						
ANR	1019734	Symbol	threshold		1019320						
ANR	1019735	Symbol	R_ABS		1019320						
ANR	1019736	Symbol	r_cons_is_breaked		1019320						
ANR	1019737	Symbol	core -> io		1019320						
ANR	1019738	Symbol	param		1019320						
ANR	1019739	Symbol	oe		1019320						
ANR	1019740	Symbol	end		1019320						
ANR	1019741	Symbol	from		1019320						
ANR	1019742	Symbol	map -> itv . addr		1019320						
ANR	1019743	Symbol	UT64_MAX		1019320						
ANR	1019744	Symbol	map		1019320						
ANR	1019745	Symbol	r_hash_entropy		1019320						
ANR	1019746	Symbol	r2mode		1019320						
ANR	1019747	Symbol	core -> blocksize		1019320						
ANR	1019748	Symbol	malloc		1019320						
ANR	1019749	Symbol	NULL		1019320						
ANR	1019750	Symbol	e		1019320						
ANR	1019751	Symbol	buf_size		1019320						
ANR	1019752	Symbol	false		1019320						
ANR	1019753	Symbol	iter		1019320						
ANR	1019754	Symbol	index		1019320						
ANR	1019755	Symbol	diff		1019320						
ANR	1019756	Symbol	r_itv_end		1019320						
ANR	1019757	Symbol	core		1019320						
ANR	1019758	Symbol	input		1019320						
ANR	1019759	Symbol	buf		1019320						
ANR	1019760	Symbol	& threshold		1019320						
ANR	1019761	Symbol	at		1019320						
ANR	1019762	Symbol	lastBlock		1019320						
ANR	1019763	Symbol	true		1019320						
ANR	1019764	Symbol	to		1019320						
ANR	1019765	Symbol	begin		1019320						
ANR	1019766	Function	do_asm_search	2240:0:66286:69187							
ANR	1019767	FunctionDef	"do_asm_search (RCore * core , struct search_parameters * param , const char * input , int mode , RInterval search_itv)"		1019766	0					
ANR	1019768	CompoundStatement		2240:123:66409:69187	1019766	0					
ANR	1019769	IdentifierDeclStatement	RCoreAsmHit * hit ;	2241:1:66412:66428	1019766	0	True				
ANR	1019770	IdentifierDecl	* hit		1019766	0					
ANR	1019771	IdentifierDeclType	RCoreAsmHit *		1019766	0					
ANR	1019772	Identifier	hit		1019766	1					
ANR	1019773	IdentifierDeclStatement	"RListIter * iter , * itermap ;"	2242:1:66431:66456	1019766	1	True				
ANR	1019774	IdentifierDecl	* iter		1019766	0					
ANR	1019775	IdentifierDeclType	RListIter *		1019766	0					
ANR	1019776	Identifier	iter		1019766	1					
ANR	1019777	IdentifierDecl	* itermap		1019766	1					
ANR	1019778	IdentifierDeclType	RListIter *		1019766	0					
ANR	1019779	Identifier	itermap		1019766	1					
ANR	1019780	IdentifierDeclStatement	"int count = 0 , maxhits = 0 , filter = 0 ;"	2243:1:66459:66497	1019766	2	True				
ANR	1019781	IdentifierDecl	count = 0		1019766	0					
ANR	1019782	IdentifierDeclType	int		1019766	0					
ANR	1019783	Identifier	count		1019766	1					
ANR	1019784	AssignmentExpression	count = 0		1019766	2		=			
ANR	1019785	Identifier	count		1019766	0					
ANR	1019786	PrimaryExpression	0		1019766	1					
ANR	1019787	IdentifierDecl	maxhits = 0		1019766	1					
ANR	1019788	IdentifierDeclType	int		1019766	0					
ANR	1019789	Identifier	maxhits		1019766	1					
ANR	1019790	AssignmentExpression	maxhits = 0		1019766	2		=			
ANR	1019791	Identifier	maxhits		1019766	0					
ANR	1019792	PrimaryExpression	0		1019766	1					
ANR	1019793	IdentifierDecl	filter = 0		1019766	2					
ANR	1019794	IdentifierDeclType	int		1019766	0					
ANR	1019795	Identifier	filter		1019766	1					
ANR	1019796	AssignmentExpression	filter = 0		1019766	2		=			
ANR	1019797	Identifier	filter		1019766	0					
ANR	1019798	PrimaryExpression	0		1019766	1					
ANR	1019799	IdentifierDeclStatement	int kwidx = core -> search -> n_kws ;	2244:1:66500:66531	1019766	3	True				
ANR	1019800	IdentifierDecl	kwidx = core -> search -> n_kws		1019766	0					
ANR	1019801	IdentifierDeclType	int		1019766	0					
ANR	1019802	Identifier	kwidx		1019766	1					
ANR	1019803	AssignmentExpression	kwidx = core -> search -> n_kws		1019766	2		=			
ANR	1019804	Identifier	kwidx		1019766	0					
ANR	1019805	PtrMemberAccess	core -> search -> n_kws		1019766	1					
ANR	1019806	PtrMemberAccess	core -> search		1019766	0					
ANR	1019807	Identifier	core		1019766	0					
ANR	1019808	Identifier	search		1019766	1					
ANR	1019809	Identifier	n_kws		1019766	1					
ANR	1019810	IdentifierDeclStatement	RList * hits ;	2245:1:66591:66602	1019766	4	True				
ANR	1019811	IdentifierDecl	* hits		1019766	0					
ANR	1019812	IdentifierDeclType	RList *		1019766	0					
ANR	1019813	Identifier	hits		1019766	1					
ANR	1019814	IdentifierDeclStatement	RIOMap * map ;	2246:1:66605:66616	1019766	5	True				
ANR	1019815	IdentifierDecl	* map		1019766	0					
ANR	1019816	IdentifierDeclType	RIOMap *		1019766	0					
ANR	1019817	Identifier	map		1019766	1					
ANR	1019818	IdentifierDeclStatement	bool regexp = input [ 1 ] == '/' ;	2247:1:66619:66648	1019766	6	True				
ANR	1019819	IdentifierDecl	regexp = input [ 1 ] == '/'		1019766	0					
ANR	1019820	IdentifierDeclType	bool		1019766	0					
ANR	1019821	Identifier	regexp		1019766	1					
ANR	1019822	AssignmentExpression	regexp = input [ 1 ] == '/'		1019766	2		=			
ANR	1019823	Identifier	regexp		1019766	0					
ANR	1019824	EqualityExpression	input [ 1 ] == '/'		1019766	1		==			
ANR	1019825	ArrayIndexing	input [ 1 ]		1019766	0					
ANR	1019826	Identifier	input		1019766	0					
ANR	1019827	PrimaryExpression	1		1019766	1					
ANR	1019828	PrimaryExpression	'/'		1019766	1					
ANR	1019829	IdentifierDeclStatement	bool everyByte = regexp && input [ 2 ] == 'a' ;	2248:1:66660:66702	1019766	7	True				
ANR	1019830	IdentifierDecl	everyByte = regexp && input [ 2 ] == 'a'		1019766	0					
ANR	1019831	IdentifierDeclType	bool		1019766	0					
ANR	1019832	Identifier	everyByte		1019766	1					
ANR	1019833	AssignmentExpression	everyByte = regexp && input [ 2 ] == 'a'		1019766	2		=			
ANR	1019834	Identifier	everyByte		1019766	0					
ANR	1019835	AndExpression	regexp && input [ 2 ] == 'a'		1019766	1		&&			
ANR	1019836	Identifier	regexp		1019766	0					
ANR	1019837	EqualityExpression	input [ 2 ] == 'a'		1019766	1		==			
ANR	1019838	ArrayIndexing	input [ 2 ]		1019766	0					
ANR	1019839	Identifier	input		1019766	0					
ANR	1019840	PrimaryExpression	2		1019766	1					
ANR	1019841	PrimaryExpression	'a'		1019766	1					
ANR	1019842	IdentifierDeclStatement	"char * end_cmd = strstr ( input , "" "" ) ;"	2249:1:66705:66740	1019766	8	True				
ANR	1019843	IdentifierDecl	"* end_cmd = strstr ( input , "" "" )"		1019766	0					
ANR	1019844	IdentifierDeclType	char *		1019766	0					
ANR	1019845	Identifier	end_cmd		1019766	1					
ANR	1019846	AssignmentExpression	"* end_cmd = strstr ( input , "" "" )"		1019766	2		=			
ANR	1019847	Identifier	end_cmd		1019766	0					
ANR	1019848	CallExpression	"strstr ( input , "" "" )"		1019766	1					
ANR	1019849	Callee	strstr		1019766	0					
ANR	1019850	Identifier	strstr		1019766	0					
ANR	1019851	ArgumentList	input		1019766	1					
ANR	1019852	Argument	input		1019766	0					
ANR	1019853	Identifier	input		1019766	0					
ANR	1019854	Argument	""" """		1019766	1					
ANR	1019855	PrimaryExpression	""" """		1019766	0					
ANR	1019856	IdentifierDeclStatement	int outmode ;	2250:1:66743:66754	1019766	9	True				
ANR	1019857	IdentifierDecl	outmode		1019766	0					
ANR	1019858	IdentifierDeclType	int		1019766	0					
ANR	1019859	Identifier	outmode		1019766	1					
ANR	1019860	IfStatement	if ( mode == 'o' )		1019766	10					
ANR	1019861	Condition	mode == 'o'	2251:5:66761:66771	1019766	0	True				
ANR	1019862	EqualityExpression	mode == 'o'		1019766	0		==			
ANR	1019863	Identifier	mode		1019766	0					
ANR	1019864	PrimaryExpression	'o'		1019766	1					
ANR	1019865	CompoundStatement		12:18:364:364	1019766	1					
ANR	1019866	ExpressionStatement	everyByte = true	2252:2:66778:66794	1019766	0	True				
ANR	1019867	AssignmentExpression	everyByte = true		1019766	0		=			
ANR	1019868	Identifier	everyByte		1019766	0					
ANR	1019869	Identifier	true		1019766	1					
ANR	1019870	IfStatement	if ( input [ 0 ] && input [ 1 ] && input [ 2 ] == 'j' )		1019766	11					
ANR	1019871	Condition	input [ 0 ] && input [ 1 ] && input [ 2 ] == 'j'	2254:5:66804:66842	1019766	0	True				
ANR	1019872	AndExpression	input [ 0 ] && input [ 1 ] && input [ 2 ] == 'j'		1019766	0		&&			
ANR	1019873	ArrayIndexing	input [ 0 ]		1019766	0					
ANR	1019874	Identifier	input		1019766	0					
ANR	1019875	PrimaryExpression	0		1019766	1					
ANR	1019876	AndExpression	input [ 1 ] && input [ 2 ] == 'j'		1019766	1		&&			
ANR	1019877	ArrayIndexing	input [ 1 ]		1019766	0					
ANR	1019878	Identifier	input		1019766	0					
ANR	1019879	PrimaryExpression	1		1019766	1					
ANR	1019880	EqualityExpression	input [ 2 ] == 'j'		1019766	1		==			
ANR	1019881	ArrayIndexing	input [ 2 ]		1019766	0					
ANR	1019882	Identifier	input		1019766	0					
ANR	1019883	PrimaryExpression	2		1019766	1					
ANR	1019884	PrimaryExpression	'j'		1019766	1					
ANR	1019885	CompoundStatement		15:46:435:435	1019766	1					
ANR	1019886	ExpressionStatement	json = true	2255:2:66849:66860	1019766	0	True				
ANR	1019887	AssignmentExpression	json = true		1019766	0		=			
ANR	1019888	Identifier	json		1019766	0					
ANR	1019889	Identifier	true		1019766	1					
ANR	1019890	IfStatement	if ( input [ 1 ] && input [ 2 ] == 'j' )		1019766	12					
ANR	1019891	Condition	input [ 1 ] && input [ 2 ] == 'j'	2257:5:66870:66896	1019766	0	True				
ANR	1019892	AndExpression	input [ 1 ] && input [ 2 ] == 'j'		1019766	0		&&			
ANR	1019893	ArrayIndexing	input [ 1 ]		1019766	0					
ANR	1019894	Identifier	input		1019766	0					
ANR	1019895	PrimaryExpression	1		1019766	1					
ANR	1019896	EqualityExpression	input [ 2 ] == 'j'		1019766	1		==			
ANR	1019897	ArrayIndexing	input [ 2 ]		1019766	0					
ANR	1019898	Identifier	input		1019766	0					
ANR	1019899	PrimaryExpression	2		1019766	1					
ANR	1019900	PrimaryExpression	'j'		1019766	1					
ANR	1019901	CompoundStatement		18:34:489:489	1019766	1					
ANR	1019902	ExpressionStatement	json = true	2258:2:66903:66914	1019766	0	True				
ANR	1019903	AssignmentExpression	json = true		1019766	0		=			
ANR	1019904	Identifier	json		1019766	0					
ANR	1019905	Identifier	true		1019766	1					
ANR	1019906	IfStatement	if ( end_cmd )		1019766	13					
ANR	1019907	Condition	end_cmd	2260:5:66924:66930	1019766	0	True				
ANR	1019908	Identifier	end_cmd		1019766	0					
ANR	1019909	CompoundStatement		21:14:523:523	1019766	1					
ANR	1019910	ExpressionStatement	outmode = * ( end_cmd - 1 )	2261:2:66937:66961	1019766	0	True				
ANR	1019911	AssignmentExpression	outmode = * ( end_cmd - 1 )		1019766	0		=			
ANR	1019912	Identifier	outmode		1019766	0					
ANR	1019913	UnaryOperationExpression	* ( end_cmd - 1 )		1019766	1					
ANR	1019914	UnaryOperator	*		1019766	0					
ANR	1019915	AdditiveExpression	end_cmd - 1		1019766	1		-			
ANR	1019916	Identifier	end_cmd		1019766	0					
ANR	1019917	PrimaryExpression	1		1019766	1					
ANR	1019918	ElseStatement	else		1019766	0					
ANR	1019919	CompoundStatement		23:8:561:561	1019766	0					
ANR	1019920	ExpressionStatement	outmode = input [ 1 ]	2263:2:66975:66993	1019766	0	True				
ANR	1019921	AssignmentExpression	outmode = input [ 1 ]		1019766	0		=			
ANR	1019922	Identifier	outmode		1019766	0					
ANR	1019923	ArrayIndexing	input [ 1 ]		1019766	1					
ANR	1019924	Identifier	input		1019766	0					
ANR	1019925	PrimaryExpression	1		1019766	1					
ANR	1019926	IfStatement	if ( outmode != 'j' )		1019766	14					
ANR	1019927	Condition	outmode != 'j'	2265:5:67003:67016	1019766	0	True				
ANR	1019928	EqualityExpression	outmode != 'j'		1019766	0		!=			
ANR	1019929	Identifier	outmode		1019766	0					
ANR	1019930	PrimaryExpression	'j'		1019766	1					
ANR	1019931	CompoundStatement		26:21:609:609	1019766	1					
ANR	1019932	ExpressionStatement	json = 0	2266:2:67023:67031	1019766	0	True				
ANR	1019933	AssignmentExpression	json = 0		1019766	0		=			
ANR	1019934	Identifier	json		1019766	0					
ANR	1019935	PrimaryExpression	0		1019766	1					
ANR	1019936	IfStatement	if ( input [ 1 ] == 'j' )		1019766	15					
ANR	1019937	Condition	input [ 1 ] == 'j'	2268:5:67041:67055	1019766	0	True				
ANR	1019938	EqualityExpression	input [ 1 ] == 'j'		1019766	0		==			
ANR	1019939	ArrayIndexing	input [ 1 ]		1019766	0					
ANR	1019940	Identifier	input		1019766	0					
ANR	1019941	PrimaryExpression	1		1019766	1					
ANR	1019942	PrimaryExpression	'j'		1019766	1					
ANR	1019943	CompoundStatement		29:22:648:648	1019766	1					
ANR	1019944	ExpressionStatement	json = true	2269:2:67062:67073	1019766	0	True				
ANR	1019945	AssignmentExpression	json = true		1019766	0		=			
ANR	1019946	Identifier	json		1019766	0					
ANR	1019947	Identifier	true		1019766	1					
ANR	1019948	ExpressionStatement	"maxhits = ( int ) r_config_get_i ( core -> config , ""search.maxhits"" )"	2272:1:67080:67143	1019766	16	True				
ANR	1019949	AssignmentExpression	"maxhits = ( int ) r_config_get_i ( core -> config , ""search.maxhits"" )"		1019766	0		=			
ANR	1019950	Identifier	maxhits		1019766	0					
ANR	1019951	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.maxhits"" )"		1019766	1					
ANR	1019952	CastTarget	int		1019766	0					
ANR	1019953	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		1019766	1					
ANR	1019954	Callee	r_config_get_i		1019766	0					
ANR	1019955	Identifier	r_config_get_i		1019766	0					
ANR	1019956	ArgumentList	core -> config		1019766	1					
ANR	1019957	Argument	core -> config		1019766	0					
ANR	1019958	PtrMemberAccess	core -> config		1019766	0					
ANR	1019959	Identifier	core		1019766	0					
ANR	1019960	Identifier	config		1019766	1					
ANR	1019961	Argument	"""search.maxhits"""		1019766	1					
ANR	1019962	PrimaryExpression	"""search.maxhits"""		1019766	0					
ANR	1019963	ExpressionStatement	"filter = ( int ) r_config_get_i ( core -> config , ""asm.filter"" )"	2273:1:67146:67204	1019766	17	True				
ANR	1019964	AssignmentExpression	"filter = ( int ) r_config_get_i ( core -> config , ""asm.filter"" )"		1019766	0		=			
ANR	1019965	Identifier	filter		1019766	0					
ANR	1019966	CastExpression	"( int ) r_config_get_i ( core -> config , ""asm.filter"" )"		1019766	1					
ANR	1019967	CastTarget	int		1019766	0					
ANR	1019968	CallExpression	"r_config_get_i ( core -> config , ""asm.filter"" )"		1019766	1					
ANR	1019969	Callee	r_config_get_i		1019766	0					
ANR	1019970	Identifier	r_config_get_i		1019766	0					
ANR	1019971	ArgumentList	core -> config		1019766	1					
ANR	1019972	Argument	core -> config		1019766	0					
ANR	1019973	PtrMemberAccess	core -> config		1019766	0					
ANR	1019974	Identifier	core		1019766	0					
ANR	1019975	Identifier	config		1019766	1					
ANR	1019976	Argument	"""asm.filter"""		1019766	1					
ANR	1019977	PrimaryExpression	"""asm.filter"""		1019766	0					
ANR	1019978	IfStatement	if ( json )		1019766	18					
ANR	1019979	Condition	json	2274:5:67211:67214	1019766	0	True				
ANR	1019980	Identifier	json		1019766	0					
ANR	1019981	CompoundStatement		35:11:807:807	1019766	1					
ANR	1019982	ExpressionStatement	"r_cons_print ( ""["" )"	2275:2:67221:67239	1019766	0	True				
ANR	1019983	CallExpression	"r_cons_print ( ""["" )"		1019766	0					
ANR	1019984	Callee	r_cons_print		1019766	0					
ANR	1019985	Identifier	r_cons_print		1019766	0					
ANR	1019986	ArgumentList	"""["""		1019766	1					
ANR	1019987	Argument	"""["""		1019766	0					
ANR	1019988	PrimaryExpression	"""["""		1019766	0					
ANR	1019989	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2277:1:67245:67275	1019766	19	True				
ANR	1019990	CallExpression	"r_cons_break_push ( NULL , NULL )"		1019766	0					
ANR	1019991	Callee	r_cons_break_push		1019766	0					
ANR	1019992	Identifier	r_cons_break_push		1019766	0					
ANR	1019993	ArgumentList	NULL		1019766	1					
ANR	1019994	Argument	NULL		1019766	0					
ANR	1019995	Identifier	NULL		1019766	0					
ANR	1019996	Argument	NULL		1019766	1					
ANR	1019997	Identifier	NULL		1019766	0					
ANR	1019998	IfStatement	if ( everyByte )		1019766	20					
ANR	1019999	Condition	everyByte	2278:5:67282:67290	1019766	0	True				
ANR	1020000	Identifier	everyByte		1019766	0					
ANR	1020001	CompoundStatement		39:16:883:883	1019766	1					
ANR	1020002	ExpressionStatement	input ++	2279:2:67297:67305	1019766	0	True				
ANR	1020003	PostIncDecOperationExpression	input ++		1019766	0					
ANR	1020004	Identifier	input		1019766	0					
ANR	1020005	IncDec	++		1019766	1					
ANR	1020006	Statement	r_list_foreach	2281:1:67311:67324	1019766	21	True				
ANR	1020007	Statement	(	2281:16:67326:67326	1019766	22	True				
ANR	1020008	Statement	param	2281:17:67327:67331	1019766	23	True				
ANR	1020009	Statement	->	2281:22:67332:67333	1019766	24	True				
ANR	1020010	Statement	boundaries	2281:24:67334:67343	1019766	25	True				
ANR	1020011	Statement	","	2281:34:67344:67344	1019766	26	True				
ANR	1020012	Statement	itermap	2281:36:67346:67352	1019766	27	True				
ANR	1020013	Statement	","	2281:43:67353:67353	1019766	28	True				
ANR	1020014	Statement	map	2281:45:67355:67357	1019766	29	True				
ANR	1020015	Statement	)	2281:48:67358:67358	1019766	30	True				
ANR	1020016	CompoundStatement		47:2:1047:1077	1019766	31					
ANR	1020017	IfStatement	"if ( ! r_itv_overlap ( search_itv , map -> itv ) )"		1019766	0					
ANR	1020018	Condition	"! r_itv_overlap ( search_itv , map -> itv )"	2282:6:67368:67404	1019766	0	True				
ANR	1020019	UnaryOperationExpression	"! r_itv_overlap ( search_itv , map -> itv )"		1019766	0					
ANR	1020020	UnaryOperator	!		1019766	0					
ANR	1020021	CallExpression	"r_itv_overlap ( search_itv , map -> itv )"		1019766	1					
ANR	1020022	Callee	r_itv_overlap		1019766	0					
ANR	1020023	Identifier	r_itv_overlap		1019766	0					
ANR	1020024	ArgumentList	search_itv		1019766	1					
ANR	1020025	Argument	search_itv		1019766	0					
ANR	1020026	Identifier	search_itv		1019766	0					
ANR	1020027	Argument	map -> itv		1019766	1					
ANR	1020028	PtrMemberAccess	map -> itv		1019766	0					
ANR	1020029	Identifier	map		1019766	0					
ANR	1020030	Identifier	itv		1019766	1					
ANR	1020031	CompoundStatement		43:45:997:997	1019766	1					
ANR	1020032	ContinueStatement	continue ;	2283:3:67412:67420	1019766	0	True				
ANR	1020033	IdentifierDeclStatement	ut64 from = map -> itv . addr ;	2285:2:67428:67453	1019766	1	True				
ANR	1020034	IdentifierDecl	from = map -> itv . addr		1019766	0					
ANR	1020035	IdentifierDeclType	ut64		1019766	0					
ANR	1020036	Identifier	from		1019766	1					
ANR	1020037	AssignmentExpression	from = map -> itv . addr		1019766	2		=			
ANR	1020038	Identifier	from		1019766	0					
ANR	1020039	MemberAccess	map -> itv . addr		1019766	1					
ANR	1020040	PtrMemberAccess	map -> itv		1019766	0					
ANR	1020041	Identifier	map		1019766	0					
ANR	1020042	Identifier	itv		1019766	1					
ANR	1020043	Identifier	addr		1019766	1					
ANR	1020044	IdentifierDeclStatement	ut64 to = r_itv_end ( map -> itv ) ;	2286:2:67457:67487	1019766	2	True				
ANR	1020045	IdentifierDecl	to = r_itv_end ( map -> itv )		1019766	0					
ANR	1020046	IdentifierDeclType	ut64		1019766	0					
ANR	1020047	Identifier	to		1019766	1					
ANR	1020048	AssignmentExpression	to = r_itv_end ( map -> itv )		1019766	2		=			
ANR	1020049	Identifier	to		1019766	0					
ANR	1020050	CallExpression	r_itv_end ( map -> itv )		1019766	1					
ANR	1020051	Callee	r_itv_end		1019766	0					
ANR	1020052	Identifier	r_itv_end		1019766	0					
ANR	1020053	ArgumentList	map -> itv		1019766	1					
ANR	1020054	Argument	map -> itv		1019766	0					
ANR	1020055	PtrMemberAccess	map -> itv		1019766	0					
ANR	1020056	Identifier	map		1019766	0					
ANR	1020057	Identifier	itv		1019766	1					
ANR	1020058	IfStatement	if ( r_cons_is_breaked ( ) )		1019766	3					
ANR	1020059	Condition	r_cons_is_breaked ( )	2287:6:67495:67514	1019766	0	True				
ANR	1020060	CallExpression	r_cons_is_breaked ( )		1019766	0					
ANR	1020061	Callee	r_cons_is_breaked		1019766	0					
ANR	1020062	Identifier	r_cons_is_breaked		1019766	0					
ANR	1020063	ArgumentList			1019766	1					
ANR	1020064	CompoundStatement		48:28:1107:1107	1019766	1					
ANR	1020065	BreakStatement	break ;	2288:3:67522:67527	1019766	0	True				
ANR	1020066	IfStatement	if ( maxhits && count >= maxhits )		1019766	4					
ANR	1020067	Condition	maxhits && count >= maxhits	2290:6:67539:67565	1019766	0	True				
ANR	1020068	AndExpression	maxhits && count >= maxhits		1019766	0		&&			
ANR	1020069	Identifier	maxhits		1019766	0					
ANR	1020070	RelationalExpression	count >= maxhits		1019766	1		>=			
ANR	1020071	Identifier	count		1019766	0					
ANR	1020072	Identifier	maxhits		1019766	1					
ANR	1020073	CompoundStatement		51:35:1158:1158	1019766	1					
ANR	1020074	BreakStatement	break ;	2291:3:67573:67578	1019766	0	True				
ANR	1020075	IfStatement	if ( ! outmode )		1019766	5					
ANR	1020076	Condition	! outmode	2293:6:67590:67597	1019766	0	True				
ANR	1020077	UnaryOperationExpression	! outmode		1019766	0					
ANR	1020078	UnaryOperator	!		1019766	0					
ANR	1020079	Identifier	outmode		1019766	1					
ANR	1020080	CompoundStatement		54:16:1190:1190	1019766	1					
ANR	1020081	ExpressionStatement	hits = NULL	2294:3:67605:67616	1019766	0	True				
ANR	1020082	AssignmentExpression	hits = NULL		1019766	0		=			
ANR	1020083	Identifier	hits		1019766	0					
ANR	1020084	Identifier	NULL		1019766	1					
ANR	1020085	ElseStatement	else		1019766	0					
ANR	1020086	CompoundStatement		56:9:1217:1217	1019766	0					
ANR	1020087	ExpressionStatement	"hits = r_core_asm_strsearch ( core , end_cmd , from , to , maxhits , regexp , everyByte , mode )"	2296:3:67632:67724	1019766	0	True				
ANR	1020088	AssignmentExpression	"hits = r_core_asm_strsearch ( core , end_cmd , from , to , maxhits , regexp , everyByte , mode )"		1019766	0		=			
ANR	1020089	Identifier	hits		1019766	0					
ANR	1020090	CallExpression	"r_core_asm_strsearch ( core , end_cmd , from , to , maxhits , regexp , everyByte , mode )"		1019766	1					
ANR	1020091	Callee	r_core_asm_strsearch		1019766	0					
ANR	1020092	Identifier	r_core_asm_strsearch		1019766	0					
ANR	1020093	ArgumentList	core		1019766	1					
ANR	1020094	Argument	core		1019766	0					
ANR	1020095	Identifier	core		1019766	0					
ANR	1020096	Argument	end_cmd		1019766	1					
ANR	1020097	Identifier	end_cmd		1019766	0					
ANR	1020098	Argument	from		1019766	2					
ANR	1020099	Identifier	from		1019766	0					
ANR	1020100	Argument	to		1019766	3					
ANR	1020101	Identifier	to		1019766	0					
ANR	1020102	Argument	maxhits		1019766	4					
ANR	1020103	Identifier	maxhits		1019766	0					
ANR	1020104	Argument	regexp		1019766	5					
ANR	1020105	Identifier	regexp		1019766	0					
ANR	1020106	Argument	everyByte		1019766	6					
ANR	1020107	Identifier	everyByte		1019766	0					
ANR	1020108	Argument	mode		1019766	7					
ANR	1020109	Identifier	mode		1019766	0					
ANR	1020110	IfStatement	if ( hits )		1019766	6					
ANR	1020111	Condition	hits	2299:6:67736:67739	1019766	0	True				
ANR	1020112	Identifier	hits		1019766	0					
ANR	1020113	CompoundStatement		61:3:1337:1396	1019766	1					
ANR	1020114	IdentifierDeclStatement	"const char * cmdhit = r_config_get ( core -> config , ""cmd.hit"" ) ;"	2300:3:67747:67806	1019766	0	True				
ANR	1020115	IdentifierDecl	"* cmdhit = r_config_get ( core -> config , ""cmd.hit"" )"		1019766	0					
ANR	1020116	IdentifierDeclType	const char *		1019766	0					
ANR	1020117	Identifier	cmdhit		1019766	1					
ANR	1020118	AssignmentExpression	"* cmdhit = r_config_get ( core -> config , ""cmd.hit"" )"		1019766	2		=			
ANR	1020119	Identifier	cmdhit		1019766	0					
ANR	1020120	CallExpression	"r_config_get ( core -> config , ""cmd.hit"" )"		1019766	1					
ANR	1020121	Callee	r_config_get		1019766	0					
ANR	1020122	Identifier	r_config_get		1019766	0					
ANR	1020123	ArgumentList	core -> config		1019766	1					
ANR	1020124	Argument	core -> config		1019766	0					
ANR	1020125	PtrMemberAccess	core -> config		1019766	0					
ANR	1020126	Identifier	core		1019766	0					
ANR	1020127	Identifier	config		1019766	1					
ANR	1020128	Argument	"""cmd.hit"""		1019766	1					
ANR	1020129	PrimaryExpression	"""cmd.hit"""		1019766	0					
ANR	1020130	Statement	r_list_foreach	2301:3:67811:67824	1019766	1	True				
ANR	1020131	Statement	(	2301:18:67826:67826	1019766	2	True				
ANR	1020132	Statement	hits	2301:19:67827:67830	1019766	3	True				
ANR	1020133	Statement	","	2301:23:67831:67831	1019766	4	True				
ANR	1020134	Statement	iter	2301:25:67833:67836	1019766	5	True				
ANR	1020135	Statement	","	2301:29:67837:67837	1019766	6	True				
ANR	1020136	Statement	hit	2301:31:67839:67841	1019766	7	True				
ANR	1020137	Statement	)	2301:34:67842:67842	1019766	8	True				
ANR	1020138	CompoundStatement		62:36:1434:1434	1019766	9					
ANR	1020139	IfStatement	if ( r_cons_is_breaked ( ) )		1019766	0					
ANR	1020140	Condition	r_cons_is_breaked ( )	2302:8:67854:67873	1019766	0	True				
ANR	1020141	CallExpression	r_cons_is_breaked ( )		1019766	0					
ANR	1020142	Callee	r_cons_is_breaked		1019766	0					
ANR	1020143	Identifier	r_cons_is_breaked		1019766	0					
ANR	1020144	ArgumentList			1019766	1					
ANR	1020145	CompoundStatement		63:30:1466:1466	1019766	1					
ANR	1020146	BreakStatement	break ;	2303:5:67883:67888	1019766	0	True				
ANR	1020147	IfStatement	if ( cmdhit && * cmdhit )		1019766	1					
ANR	1020148	Condition	cmdhit && * cmdhit	2305:8:67904:67920	1019766	0	True				
ANR	1020149	AndExpression	cmdhit && * cmdhit		1019766	0		&&			
ANR	1020150	Identifier	cmdhit		1019766	0					
ANR	1020151	UnaryOperationExpression	* cmdhit		1019766	1					
ANR	1020152	UnaryOperator	*		1019766	0					
ANR	1020153	Identifier	cmdhit		1019766	1					
ANR	1020154	CompoundStatement		66:27:1513:1513	1019766	1					
ANR	1020155	Statement	r_core_cmdf	2306:5:67930:67940	1019766	0	True				
ANR	1020156	Statement	(	2306:17:67942:67942	1019766	1	True				
ANR	1020157	Statement	core	2306:18:67943:67946	1019766	2	True				
ANR	1020158	Statement	","	2306:22:67947:67947	1019766	3	True				
ANR	1020159	Statement	"""%s @ 0x%"""	2306:24:67949:67958	1019766	4	True				
ANR	1020160	Statement	PFMT64x	2306:34:67959:67965	1019766	5	True				
ANR	1020161	Statement	","	2306:41:67966:67966	1019766	6	True				
ANR	1020162	Statement	cmdhit	2306:43:67968:67973	1019766	7	True				
ANR	1020163	Statement	","	2306:49:67974:67974	1019766	8	True				
ANR	1020164	Statement	hit	2306:51:67976:67978	1019766	9	True				
ANR	1020165	Statement	->	2306:54:67979:67980	1019766	10	True				
ANR	1020166	Statement	addr	2306:56:67981:67984	1019766	11	True				
ANR	1020167	Statement	)	2306:60:67985:67985	1019766	12	True				
ANR	1020168	ExpressionStatement		2306:61:67986:67986	1019766	13	True				
ANR	1020169	SwitchStatement	switch ( outmode )		1019766	2					
ANR	1020170	Condition	outmode	2308:12:68006:68012	1019766	0	True				
ANR	1020171	Identifier	outmode		1019766	0					
ANR	1020172	CompoundStatement		69:21:1605:1605	1019766	1					
ANR	1020173	Label	case 'j' :	2309:4:68021:68029	1019766	0	True				
ANR	1020174	IfStatement	if ( count > 0 )		1019766	1					
ANR	1020175	Condition	count > 0	2310:9:68040:68048	1019766	0	True				
ANR	1020176	RelationalExpression	count > 0		1019766	0		>			
ANR	1020177	Identifier	count		1019766	0					
ANR	1020178	PrimaryExpression	0		1019766	1					
ANR	1020179	CompoundStatement		71:20:1641:1641	1019766	1					
ANR	1020180	ExpressionStatement	"r_cons_printf ( "","" )"	2311:6:68059:68078	1019766	0	True				
ANR	1020181	CallExpression	"r_cons_printf ( "","" )"		1019766	0					
ANR	1020182	Callee	r_cons_printf		1019766	0					
ANR	1020183	Identifier	r_cons_printf		1019766	0					
ANR	1020184	ArgumentList	""","""		1019766	1					
ANR	1020185	Argument	""","""		1019766	0					
ANR	1020186	PrimaryExpression	""","""		1019766	0					
ANR	1020187	Statement	r_cons_printf	2313:5:68092:68104	1019766	2	True				
ANR	1020188	Statement	(	2313:19:68106:68106	1019766	3	True				
ANR	1020189	Statement	"""{\\""offset\\"":%"""	2314:6:68114:68128	1019766	4	True				
ANR	1020190	Statement	PFMT64d	2314:21:68129:68135	1019766	5	True				
ANR	1020191	Statement	""",\\""len\\"":%d,\\""code\\"":\\""%s\\""}"""	2314:29:68137:68166	1019766	6	True				
ANR	1020192	Statement	","	2314:59:68167:68167	1019766	7	True				
ANR	1020193	Statement	hit	2315:6:68175:68177	1019766	8	True				
ANR	1020194	Statement	->	2315:9:68178:68179	1019766	9	True				
ANR	1020195	Statement	addr	2315:11:68180:68183	1019766	10	True				
ANR	1020196	Statement	","	2315:15:68184:68184	1019766	11	True				
ANR	1020197	Statement	hit	2315:17:68186:68188	1019766	12	True				
ANR	1020198	Statement	->	2315:20:68189:68190	1019766	13	True				
ANR	1020199	Statement	len	2315:22:68191:68193	1019766	14	True				
ANR	1020200	Statement	","	2315:25:68194:68194	1019766	15	True				
ANR	1020201	Statement	hit	2315:27:68196:68198	1019766	16	True				
ANR	1020202	Statement	->	2315:30:68199:68200	1019766	17	True				
ANR	1020203	Statement	code	2315:32:68201:68204	1019766	18	True				
ANR	1020204	Statement	)	2315:36:68205:68205	1019766	19	True				
ANR	1020205	ExpressionStatement		2315:37:68206:68206	1019766	20	True				
ANR	1020206	BreakStatement	break ;	2316:5:68213:68218	1019766	21	True				
ANR	1020207	Label	case '*' :	2317:4:68224:68232	1019766	22	True				
ANR	1020208	Statement	r_cons_printf	2318:5:68239:68251	1019766	23	True				
ANR	1020209	Statement	(	2318:19:68253:68253	1019766	24	True				
ANR	1020210	Statement	"""f %s%d_%i = 0x%08"""	2318:20:68254:68272	1019766	25	True				
ANR	1020211	Statement	PFMT64x	2318:39:68273:68279	1019766	26	True				
ANR	1020212	Statement	"""\\n"""	2318:47:68281:68284	1019766	27	True				
ANR	1020213	Statement	","	2318:51:68285:68285	1019766	28	True				
ANR	1020214	Statement	searchprefix	2319:6:68293:68304	1019766	29	True				
ANR	1020215	Statement	","	2319:18:68305:68305	1019766	30	True				
ANR	1020216	Statement	kwidx	2319:20:68307:68311	1019766	31	True				
ANR	1020217	Statement	","	2319:25:68312:68312	1019766	32	True				
ANR	1020218	Statement	count	2319:27:68314:68318	1019766	33	True				
ANR	1020219	Statement	","	2319:32:68319:68319	1019766	34	True				
ANR	1020220	Statement	hit	2319:34:68321:68323	1019766	35	True				
ANR	1020221	Statement	->	2319:37:68324:68325	1019766	36	True				
ANR	1020222	Statement	addr	2319:39:68326:68329	1019766	37	True				
ANR	1020223	Statement	)	2319:43:68330:68330	1019766	38	True				
ANR	1020224	ExpressionStatement		2319:44:68331:68331	1019766	39	True				
ANR	1020225	BreakStatement	break ;	2320:5:68338:68343	1019766	40	True				
ANR	1020226	Label	default :	2321:4:68349:68356	1019766	41	True				
ANR	1020227	Identifier	default		1019766	0					
ANR	1020228	IfStatement	if ( filter )		1019766	42					
ANR	1020229	Condition	filter	2322:9:68367:68372	1019766	0	True				
ANR	1020230	Identifier	filter		1019766	0					
ANR	1020231	CompoundStatement		87:6:2015:2072	1019766	1					
ANR	1020232	IdentifierDeclStatement	char tmp [ 128 ] = { 0 } ;	2323:6:68383:68417	1019766	0	True				
ANR	1020233	IdentifierDecl	tmp [ 128 ] = { 0 }		1019766	0					
ANR	1020234	IdentifierDeclType	char [ 128 ]		1019766	0					
ANR	1020235	Identifier	tmp		1019766	1					
ANR	1020236	PrimaryExpression	128		1019766	2					
ANR	1020237	AssignmentExpression	tmp [ 128 ] = { 0 }		1019766	3		=			
ANR	1020238	Identifier	tmp		1019766	0					
ANR	1020239	InitializerList	0		1019766	1					
ANR	1020240	PrimaryExpression	0		1019766	0					
ANR	1020241	IdentifierDeclStatement	"RAnalHint * hint = r_anal_hint_get ( core -> anal , hit -> addr ) ;"	2326:6:68425:68482	1019766	1	True				
ANR	1020242	IdentifierDecl	"* hint = r_anal_hint_get ( core -> anal , hit -> addr )"		1019766	0					
ANR	1020243	IdentifierDeclType	RAnalHint *		1019766	0					
ANR	1020244	Identifier	hint		1019766	1					
ANR	1020245	AssignmentExpression	"* hint = r_anal_hint_get ( core -> anal , hit -> addr )"		1019766	2		=			
ANR	1020246	Identifier	hint		1019766	0					
ANR	1020247	CallExpression	"r_anal_hint_get ( core -> anal , hit -> addr )"		1019766	1					
ANR	1020248	Callee	r_anal_hint_get		1019766	0					
ANR	1020249	Identifier	r_anal_hint_get		1019766	0					
ANR	1020250	ArgumentList	core -> anal		1019766	1					
ANR	1020251	Argument	core -> anal		1019766	0					
ANR	1020252	PtrMemberAccess	core -> anal		1019766	0					
ANR	1020253	Identifier	core		1019766	0					
ANR	1020254	Identifier	anal		1019766	1					
ANR	1020255	Argument	hit -> addr		1019766	1					
ANR	1020256	PtrMemberAccess	hit -> addr		1019766	0					
ANR	1020257	Identifier	hit		1019766	0					
ANR	1020258	Identifier	addr		1019766	1					
ANR	1020259	ExpressionStatement	"r_parse_filter ( core -> parser , hit -> addr , core -> flags , hint , hit -> code , tmp , sizeof ( tmp ) , core -> print -> big_endian )"	2327:6:68490:68612	1019766	2	True				
ANR	1020260	CallExpression	"r_parse_filter ( core -> parser , hit -> addr , core -> flags , hint , hit -> code , tmp , sizeof ( tmp ) , core -> print -> big_endian )"		1019766	0					
ANR	1020261	Callee	r_parse_filter		1019766	0					
ANR	1020262	Identifier	r_parse_filter		1019766	0					
ANR	1020263	ArgumentList	core -> parser		1019766	1					
ANR	1020264	Argument	core -> parser		1019766	0					
ANR	1020265	PtrMemberAccess	core -> parser		1019766	0					
ANR	1020266	Identifier	core		1019766	0					
ANR	1020267	Identifier	parser		1019766	1					
ANR	1020268	Argument	hit -> addr		1019766	1					
ANR	1020269	PtrMemberAccess	hit -> addr		1019766	0					
ANR	1020270	Identifier	hit		1019766	0					
ANR	1020271	Identifier	addr		1019766	1					
ANR	1020272	Argument	core -> flags		1019766	2					
ANR	1020273	PtrMemberAccess	core -> flags		1019766	0					
ANR	1020274	Identifier	core		1019766	0					
ANR	1020275	Identifier	flags		1019766	1					
ANR	1020276	Argument	hint		1019766	3					
ANR	1020277	Identifier	hint		1019766	0					
ANR	1020278	Argument	hit -> code		1019766	4					
ANR	1020279	PtrMemberAccess	hit -> code		1019766	0					
ANR	1020280	Identifier	hit		1019766	0					
ANR	1020281	Identifier	code		1019766	1					
ANR	1020282	Argument	tmp		1019766	5					
ANR	1020283	Identifier	tmp		1019766	0					
ANR	1020284	Argument	sizeof ( tmp )		1019766	6					
ANR	1020285	SizeofExpression	sizeof ( tmp )		1019766	0					
ANR	1020286	Sizeof	sizeof		1019766	0					
ANR	1020287	SizeofOperand	tmp		1019766	1					
ANR	1020288	Argument	core -> print -> big_endian		1019766	7					
ANR	1020289	PtrMemberAccess	core -> print -> big_endian		1019766	0					
ANR	1020290	PtrMemberAccess	core -> print		1019766	0					
ANR	1020291	Identifier	core		1019766	0					
ANR	1020292	Identifier	print		1019766	1					
ANR	1020293	Identifier	big_endian		1019766	1					
ANR	1020294	ExpressionStatement	r_anal_hint_free ( hint )	2329:6:68620:68643	1019766	3	True				
ANR	1020295	CallExpression	r_anal_hint_free ( hint )		1019766	0					
ANR	1020296	Callee	r_anal_hint_free		1019766	0					
ANR	1020297	Identifier	r_anal_hint_free		1019766	0					
ANR	1020298	ArgumentList	hint		1019766	1					
ANR	1020299	Argument	hint		1019766	0					
ANR	1020300	Identifier	hint		1019766	0					
ANR	1020301	Statement	r_cons_printf	2330:6:68651:68663	1019766	4	True				
ANR	1020302	Statement	(	2330:20:68665:68665	1019766	5	True				
ANR	1020303	Statement	"""0x%08"""	2330:21:68666:68672	1019766	6	True				
ANR	1020304	Statement	PFMT64x	2330:28:68673:68679	1019766	7	True				
ANR	1020305	Statement	"""   # %i: %s\\n"""	2330:36:68681:68695	1019766	8	True				
ANR	1020306	Statement	","	2330:51:68696:68696	1019766	9	True				
ANR	1020307	Statement	hit	2331:7:68705:68707	1019766	10	True				
ANR	1020308	Statement	->	2331:10:68708:68709	1019766	11	True				
ANR	1020309	Statement	addr	2331:12:68710:68713	1019766	12	True				
ANR	1020310	Statement	","	2331:16:68714:68714	1019766	13	True				
ANR	1020311	Statement	hit	2331:18:68716:68718	1019766	14	True				
ANR	1020312	Statement	->	2331:21:68719:68720	1019766	15	True				
ANR	1020313	Statement	len	2331:23:68721:68723	1019766	16	True				
ANR	1020314	Statement	","	2331:26:68724:68724	1019766	17	True				
ANR	1020315	Statement	tmp	2331:28:68726:68728	1019766	18	True				
ANR	1020316	Statement	)	2331:31:68729:68729	1019766	19	True				
ANR	1020317	ExpressionStatement		2331:32:68730:68730	1019766	20	True				
ANR	1020318	ElseStatement	else		1019766	0					
ANR	1020319	CompoundStatement		93:12:2334:2334	1019766	0					
ANR	1020320	Statement	r_cons_printf	2333:6:68752:68764	1019766	0	True				
ANR	1020321	Statement	(	2333:20:68766:68766	1019766	1	True				
ANR	1020322	Statement	"""0x%08"""	2333:21:68767:68773	1019766	2	True				
ANR	1020323	Statement	PFMT64x	2333:28:68774:68780	1019766	3	True				
ANR	1020324	Statement	"""   # %i: %s\\n"""	2333:36:68782:68796	1019766	4	True				
ANR	1020325	Statement	","	2333:51:68797:68797	1019766	5	True				
ANR	1020326	Statement	hit	2334:7:68806:68808	1019766	6	True				
ANR	1020327	Statement	->	2334:10:68809:68810	1019766	7	True				
ANR	1020328	Statement	addr	2334:12:68811:68814	1019766	8	True				
ANR	1020329	Statement	","	2334:16:68815:68815	1019766	9	True				
ANR	1020330	Statement	hit	2334:18:68817:68819	1019766	10	True				
ANR	1020331	Statement	->	2334:21:68820:68821	1019766	11	True				
ANR	1020332	Statement	len	2334:23:68822:68824	1019766	12	True				
ANR	1020333	Statement	","	2334:26:68825:68825	1019766	13	True				
ANR	1020334	Statement	hit	2334:28:68827:68829	1019766	14	True				
ANR	1020335	Statement	->	2334:31:68830:68831	1019766	15	True				
ANR	1020336	Statement	code	2334:33:68832:68835	1019766	16	True				
ANR	1020337	Statement	)	2334:37:68836:68836	1019766	17	True				
ANR	1020338	ExpressionStatement		2334:38:68837:68837	1019766	18	True				
ANR	1020339	BreakStatement	break ;	2336:5:68851:68856	1019766	43	True				
ANR	1020340	IfStatement	if ( searchflags )		1019766	3					
ANR	1020341	Condition	searchflags	2338:8:68872:68882	1019766	0	True				
ANR	1020342	Identifier	searchflags		1019766	0					
ANR	1020343	CompoundStatement		100:5:2482:2552	1019766	1					
ANR	1020344	IdentifierDeclStatement	"const char * flagname = sdb_fmt ( ""%s%d_%d"" , searchprefix , kwidx , count ) ;"	2339:5:68892:68962	1019766	0	True				
ANR	1020345	IdentifierDecl	"* flagname = sdb_fmt ( ""%s%d_%d"" , searchprefix , kwidx , count )"		1019766	0					
ANR	1020346	IdentifierDeclType	const char *		1019766	0					
ANR	1020347	Identifier	flagname		1019766	1					
ANR	1020348	AssignmentExpression	"* flagname = sdb_fmt ( ""%s%d_%d"" , searchprefix , kwidx , count )"		1019766	2		=			
ANR	1020349	Identifier	flagname		1019766	0					
ANR	1020350	CallExpression	"sdb_fmt ( ""%s%d_%d"" , searchprefix , kwidx , count )"		1019766	1					
ANR	1020351	Callee	sdb_fmt		1019766	0					
ANR	1020352	Identifier	sdb_fmt		1019766	0					
ANR	1020353	ArgumentList	"""%s%d_%d"""		1019766	1					
ANR	1020354	Argument	"""%s%d_%d"""		1019766	0					
ANR	1020355	PrimaryExpression	"""%s%d_%d"""		1019766	0					
ANR	1020356	Argument	searchprefix		1019766	1					
ANR	1020357	Identifier	searchprefix		1019766	0					
ANR	1020358	Argument	kwidx		1019766	2					
ANR	1020359	Identifier	kwidx		1019766	0					
ANR	1020360	Argument	count		1019766	3					
ANR	1020361	Identifier	count		1019766	0					
ANR	1020362	IfStatement	if ( flagname )		1019766	1					
ANR	1020363	Condition	flagname	2340:9:68973:68980	1019766	0	True				
ANR	1020364	Identifier	flagname		1019766	0					
ANR	1020365	CompoundStatement		101:19:2573:2573	1019766	1					
ANR	1020366	ExpressionStatement	"r_flag_set ( core -> flags , flagname , hit -> addr , hit -> len )"	2341:6:68991:69046	1019766	0	True				
ANR	1020367	CallExpression	"r_flag_set ( core -> flags , flagname , hit -> addr , hit -> len )"		1019766	0					
ANR	1020368	Callee	r_flag_set		1019766	0					
ANR	1020369	Identifier	r_flag_set		1019766	0					
ANR	1020370	ArgumentList	core -> flags		1019766	1					
ANR	1020371	Argument	core -> flags		1019766	0					
ANR	1020372	PtrMemberAccess	core -> flags		1019766	0					
ANR	1020373	Identifier	core		1019766	0					
ANR	1020374	Identifier	flags		1019766	1					
ANR	1020375	Argument	flagname		1019766	1					
ANR	1020376	Identifier	flagname		1019766	0					
ANR	1020377	Argument	hit -> addr		1019766	2					
ANR	1020378	PtrMemberAccess	hit -> addr		1019766	0					
ANR	1020379	Identifier	hit		1019766	0					
ANR	1020380	Identifier	addr		1019766	1					
ANR	1020381	Argument	hit -> len		1019766	3					
ANR	1020382	PtrMemberAccess	hit -> len		1019766	0					
ANR	1020383	Identifier	hit		1019766	0					
ANR	1020384	Identifier	len		1019766	1					
ANR	1020385	ExpressionStatement	count ++	2344:4:69065:69072	1019766	4	True				
ANR	1020386	PostIncDecOperationExpression	count ++		1019766	0					
ANR	1020387	Identifier	count		1019766	0					
ANR	1020388	IncDec	++		1019766	1					
ANR	1020389	ExpressionStatement	r_list_purge ( hits )	2346:3:69082:69101	1019766	10	True				
ANR	1020390	CallExpression	r_list_purge ( hits )		1019766	0					
ANR	1020391	Callee	r_list_purge		1019766	0					
ANR	1020392	Identifier	r_list_purge		1019766	0					
ANR	1020393	ArgumentList	hits		1019766	1					
ANR	1020394	Argument	hits		1019766	0					
ANR	1020395	Identifier	hits		1019766	0					
ANR	1020396	ExpressionStatement	free ( hits )	2347:3:69106:69117	1019766	11	True				
ANR	1020397	CallExpression	free ( hits )		1019766	0					
ANR	1020398	Callee	free		1019766	0					
ANR	1020399	Identifier	free		1019766	0					
ANR	1020400	ArgumentList	hits		1019766	1					
ANR	1020401	Argument	hits		1019766	0					
ANR	1020402	Identifier	hits		1019766	0					
ANR	1020403	IfStatement	if ( json )		1019766	32					
ANR	1020404	Condition	json	2350:5:69131:69134	1019766	0	True				
ANR	1020405	Identifier	json		1019766	0					
ANR	1020406	CompoundStatement		111:11:2727:2727	1019766	1					
ANR	1020407	ExpressionStatement	"r_cons_printf ( ""]"" )"	2351:2:69141:69160	1019766	0	True				
ANR	1020408	CallExpression	"r_cons_printf ( ""]"" )"		1019766	0					
ANR	1020409	Callee	r_cons_printf		1019766	0					
ANR	1020410	Identifier	r_cons_printf		1019766	0					
ANR	1020411	ArgumentList	"""]"""		1019766	1					
ANR	1020412	Argument	"""]"""		1019766	0					
ANR	1020413	PrimaryExpression	"""]"""		1019766	0					
ANR	1020414	ExpressionStatement	r_cons_break_pop ( )	2353:1:69166:69185	1019766	33	True				
ANR	1020415	CallExpression	r_cons_break_pop ( )		1019766	0					
ANR	1020416	Callee	r_cons_break_pop		1019766	0					
ANR	1020417	Identifier	r_cons_break_pop		1019766	0					
ANR	1020418	ArgumentList			1019766	1					
ANR	1020419	ReturnType	static void		1019766	1					
ANR	1020420	Identifier	do_asm_search		1019766	2					
ANR	1020421	ParameterList	"RCore * core , struct search_parameters * param , const char * input , int mode , RInterval search_itv"		1019766	3					
ANR	1020422	Parameter	RCore * core	2240:26:66312:66322	1019766	0	True				
ANR	1020423	ParameterType	RCore *		1019766	0					
ANR	1020424	Identifier	core		1019766	1					
ANR	1020425	Parameter	struct search_parameters * param	2240:39:66325:66355	1019766	1	True				
ANR	1020426	ParameterType	struct search_parameters *		1019766	0					
ANR	1020427	Identifier	param		1019766	1					
ANR	1020428	Parameter	const char * input	2240:72:66358:66374	1019766	2	True				
ANR	1020429	ParameterType	const char *		1019766	0					
ANR	1020430	Identifier	input		1019766	1					
ANR	1020431	Parameter	int mode	2240:91:66377:66384	1019766	3	True				
ANR	1020432	ParameterType	int		1019766	0					
ANR	1020433	Identifier	mode		1019766	1					
ANR	1020434	Parameter	RInterval search_itv	2240:101:66387:66406	1019766	4	True				
ANR	1020435	ParameterType	RInterval		1019766	0					
ANR	1020436	Identifier	search_itv		1019766	1					
ANR	1020437	CFGEntryNode	ENTRY		1019766		True				
ANR	1020438	CFGExitNode	EXIT		1019766		True				
ANR	1020439	CFGErrorNode	ERROR		1019766		True				
ANR	1020440	Symbol	* map		1019766						
ANR	1020441	Symbol	cmdhit		1019766						
ANR	1020442	Symbol	* input		1019766						
ANR	1020443	Symbol	hit -> code		1019766						
ANR	1020444	Symbol	r_itv_overlap		1019766						
ANR	1020445	Symbol	mode		1019766						
ANR	1020446	Symbol	hit		1019766						
ANR	1020447	Symbol	tmp		1019766						
ANR	1020448	Symbol	hit -> addr		1019766						
ANR	1020449	Symbol	* cmdhit		1019766						
ANR	1020450	Symbol	from		1019766						
ANR	1020451	Symbol	NULL		1019766						
ANR	1020452	Symbol	count		1019766						
ANR	1020453	Symbol	hit -> len		1019766						
ANR	1020454	Symbol	iter		1019766						
ANR	1020455	Symbol	r_core_asm_strsearch		1019766						
ANR	1020456	Symbol	* core -> search		1019766						
ANR	1020457	Symbol	core -> print -> big_endian		1019766						
ANR	1020458	Symbol	core		1019766						
ANR	1020459	Symbol	input		1019766						
ANR	1020460	Symbol	core -> parser		1019766						
ANR	1020461	Symbol	everyByte		1019766						
ANR	1020462	Symbol	strstr		1019766						
ANR	1020463	Symbol	r_config_get_i		1019766						
ANR	1020464	Symbol	hint		1019766						
ANR	1020465	Symbol	search_itv		1019766						
ANR	1020466	Symbol	true		1019766						
ANR	1020467	Symbol	core -> print		1019766						
ANR	1020468	Symbol	searchprefix		1019766						
ANR	1020469	Symbol	regexp		1019766						
ANR	1020470	Symbol	map -> itv		1019766						
ANR	1020471	Symbol	* hit		1019766						
ANR	1020472	Symbol	* core		1019766						
ANR	1020473	Symbol	r_config_get		1019766						
ANR	1020474	Symbol	kwidx		1019766						
ANR	1020475	Symbol	flagname		1019766						
ANR	1020476	Symbol	core -> anal		1019766						
ANR	1020477	Symbol	r_cons_is_breaked		1019766						
ANR	1020478	Symbol	param		1019766						
ANR	1020479	Symbol	json		1019766						
ANR	1020480	Symbol	map -> itv . addr		1019766						
ANR	1020481	Symbol	core -> search		1019766						
ANR	1020482	Symbol	map		1019766						
ANR	1020483	Symbol	sdb_fmt		1019766						
ANR	1020484	Symbol	* * core		1019766						
ANR	1020485	Symbol	core -> config		1019766						
ANR	1020486	Symbol	itermap		1019766						
ANR	1020487	Symbol	outmode		1019766						
ANR	1020488	Symbol	searchflags		1019766						
ANR	1020489	Symbol	core -> flags		1019766						
ANR	1020490	Symbol	* ( end_cmd - 1 )		1019766						
ANR	1020491	Symbol	r_anal_hint_get		1019766						
ANR	1020492	Symbol	end_cmd		1019766						
ANR	1020493	Symbol	r_itv_end		1019766						
ANR	1020494	Symbol	filter		1019766						
ANR	1020495	Symbol	hits		1019766						
ANR	1020496	Symbol	* core -> print		1019766						
ANR	1020497	Symbol	core -> search -> n_kws		1019766						
ANR	1020498	Symbol	* end_cmd		1019766						
ANR	1020499	Symbol	to		1019766						
ANR	1020500	Symbol	maxhits		1019766						
ANR	1020501	Function	do_string_search	2356:0:69190:72955							
ANR	1020502	FunctionDef	"do_string_search (RCore * core , RInterval search_itv , struct search_parameters * param)"		1020501	0					
ANR	1020503	CompoundStatement		2356:97:69287:72955	1020501	0					
ANR	1020504	IdentifierDeclStatement	ut64 at ;	2357:1:69290:69297	1020501	0	True				
ANR	1020505	IdentifierDecl	at		1020501	0					
ANR	1020506	IdentifierDeclType	ut64		1020501	0					
ANR	1020507	Identifier	at		1020501	1					
ANR	1020508	IdentifierDeclStatement	ut8 * buf ;	2358:1:69300:69308	1020501	1	True				
ANR	1020509	IdentifierDecl	* buf		1020501	0					
ANR	1020510	IdentifierDeclType	ut8 *		1020501	0					
ANR	1020511	Identifier	buf		1020501	1					
ANR	1020512	IdentifierDeclStatement	RSearch * search = core -> search ;	2359:1:69311:69341	1020501	2	True				
ANR	1020513	IdentifierDecl	* search = core -> search		1020501	0					
ANR	1020514	IdentifierDeclType	RSearch *		1020501	0					
ANR	1020515	Identifier	search		1020501	1					
ANR	1020516	AssignmentExpression	* search = core -> search		1020501	2		=			
ANR	1020517	Identifier	search		1020501	0					
ANR	1020518	PtrMemberAccess	core -> search		1020501	1					
ANR	1020519	Identifier	core		1020501	0					
ANR	1020520	Identifier	search		1020501	1					
ANR	1020521	IfStatement	if ( json )		1020501	3					
ANR	1020522	Condition	json	2361:5:69349:69352	1020501	0	True				
ANR	1020523	Identifier	json		1020501	0					
ANR	1020524	CompoundStatement		6:11:67:67	1020501	1					
ANR	1020525	ExpressionStatement	"r_cons_printf ( ""["" )"	2362:2:69359:69378	1020501	0	True				
ANR	1020526	CallExpression	"r_cons_printf ( ""["" )"		1020501	0					
ANR	1020527	Callee	r_cons_printf		1020501	0					
ANR	1020528	Identifier	r_cons_printf		1020501	0					
ANR	1020529	ArgumentList	"""["""		1020501	1					
ANR	1020530	Argument	"""["""		1020501	0					
ANR	1020531	PrimaryExpression	"""["""		1020501	0					
ANR	1020532	IdentifierDeclStatement	RListIter * iter ;	2364:1:69384:69399	1020501	4	True				
ANR	1020533	IdentifierDecl	* iter		1020501	0					
ANR	1020534	IdentifierDeclType	RListIter *		1020501	0					
ANR	1020535	Identifier	iter		1020501	1					
ANR	1020536	IdentifierDeclStatement	RIOMap * map ;	2365:1:69402:69413	1020501	5	True				
ANR	1020537	IdentifierDecl	* map		1020501	0					
ANR	1020538	IdentifierDeclType	RIOMap *		1020501	0					
ANR	1020539	Identifier	map		1020501	1					
ANR	1020540	IfStatement	if ( ! searchflags && ! json )		1020501	6					
ANR	1020541	Condition	! searchflags && ! json	2366:5:69420:69440	1020501	0	True				
ANR	1020542	AndExpression	! searchflags && ! json		1020501	0		&&			
ANR	1020543	UnaryOperationExpression	! searchflags		1020501	0					
ANR	1020544	UnaryOperator	!		1020501	0					
ANR	1020545	Identifier	searchflags		1020501	1					
ANR	1020546	UnaryOperationExpression	! json		1020501	1					
ANR	1020547	UnaryOperator	!		1020501	0					
ANR	1020548	Identifier	json		1020501	1					
ANR	1020549	CompoundStatement		11:28:155:155	1020501	1					
ANR	1020550	ExpressionStatement	"r_cons_printf ( ""fs hits\\n"" )"	2367:2:69447:69474	1020501	0	True				
ANR	1020551	CallExpression	"r_cons_printf ( ""fs hits\\n"" )"		1020501	0					
ANR	1020552	Callee	r_cons_printf		1020501	0					
ANR	1020553	Identifier	r_cons_printf		1020501	0					
ANR	1020554	ArgumentList	"""fs hits\\n"""		1020501	1					
ANR	1020555	Argument	"""fs hits\\n"""		1020501	0					
ANR	1020556	PrimaryExpression	"""fs hits\\n"""		1020501	0					
ANR	1020557	ExpressionStatement	core -> search -> inverse = param -> inverse	2369:1:69480:69518	1020501	7	True				
ANR	1020558	AssignmentExpression	core -> search -> inverse = param -> inverse		1020501	0		=			
ANR	1020559	PtrMemberAccess	core -> search -> inverse		1020501	0					
ANR	1020560	PtrMemberAccess	core -> search		1020501	0					
ANR	1020561	Identifier	core		1020501	0					
ANR	1020562	Identifier	search		1020501	1					
ANR	1020563	Identifier	inverse		1020501	1					
ANR	1020564	PtrMemberAccess	param -> inverse		1020501	1					
ANR	1020565	Identifier	param		1020501	0					
ANR	1020566	Identifier	inverse		1020501	1					
ANR	1020567	IfStatement	if ( param -> inverse )		1020501	8					
ANR	1020568	Condition	param -> inverse	2371:5:69587:69600	1020501	0	True				
ANR	1020569	PtrMemberAccess	param -> inverse		1020501	0					
ANR	1020570	Identifier	param		1020501	0					
ANR	1020571	Identifier	inverse		1020501	1					
ANR	1020572	CompoundStatement		16:21:315:315	1020501	1					
ANR	1020573	ExpressionStatement	core -> search -> maxhits = 1	2372:2:69607:69632	1020501	0	True				
ANR	1020574	AssignmentExpression	core -> search -> maxhits = 1		1020501	0		=			
ANR	1020575	PtrMemberAccess	core -> search -> maxhits		1020501	0					
ANR	1020576	PtrMemberAccess	core -> search		1020501	0					
ANR	1020577	Identifier	core		1020501	0					
ANR	1020578	Identifier	search		1020501	1					
ANR	1020579	Identifier	maxhits		1020501	1					
ANR	1020580	PrimaryExpression	1		1020501	1					
ANR	1020581	IfStatement	if ( core -> search -> n_kws > 0 || param -> crypto_search )		1020501	9					
ANR	1020582	Condition	core -> search -> n_kws > 0 || param -> crypto_search	2374:5:69642:69688	1020501	0	True				
ANR	1020583	OrExpression	core -> search -> n_kws > 0 || param -> crypto_search		1020501	0		||			
ANR	1020584	RelationalExpression	core -> search -> n_kws > 0		1020501	0		>			
ANR	1020585	PtrMemberAccess	core -> search -> n_kws		1020501	0					
ANR	1020586	PtrMemberAccess	core -> search		1020501	0					
ANR	1020587	Identifier	core		1020501	0					
ANR	1020588	Identifier	search		1020501	1					
ANR	1020589	Identifier	n_kws		1020501	1					
ANR	1020590	PrimaryExpression	0		1020501	1					
ANR	1020591	PtrMemberAccess	param -> crypto_search		1020501	1					
ANR	1020592	Identifier	param		1020501	0					
ANR	1020593	Identifier	crypto_search		1020501	1					
ANR	1020594	CompoundStatement		20:2:407:427	1020501	1					
ANR	1020595	IdentifierDeclStatement	RSearchKeyword aeskw ;	2375:2:69695:69715	1020501	0	True				
ANR	1020596	IdentifierDecl	aeskw		1020501	0					
ANR	1020597	IdentifierDeclType	RSearchKeyword		1020501	0					
ANR	1020598	Identifier	aeskw		1020501	1					
ANR	1020599	IfStatement	if ( param -> crypto_search )		1020501	1					
ANR	1020600	Condition	param -> crypto_search	2376:6:69723:69742	1020501	0	True				
ANR	1020601	PtrMemberAccess	param -> crypto_search		1020501	0					
ANR	1020602	Identifier	param		1020501	0					
ANR	1020603	Identifier	crypto_search		1020501	1					
ANR	1020604	CompoundStatement		21:28:457:457	1020501	1					
ANR	1020605	ExpressionStatement	"memset ( & aeskw , 0 , sizeof ( aeskw ) )"	2377:3:69750:69784	1020501	0	True				
ANR	1020606	CallExpression	"memset ( & aeskw , 0 , sizeof ( aeskw ) )"		1020501	0					
ANR	1020607	Callee	memset		1020501	0					
ANR	1020608	Identifier	memset		1020501	0					
ANR	1020609	ArgumentList	& aeskw		1020501	1					
ANR	1020610	Argument	& aeskw		1020501	0					
ANR	1020611	UnaryOperationExpression	& aeskw		1020501	0					
ANR	1020612	UnaryOperator	&		1020501	0					
ANR	1020613	Identifier	aeskw		1020501	1					
ANR	1020614	Argument	0		1020501	1					
ANR	1020615	PrimaryExpression	0		1020501	0					
ANR	1020616	Argument	sizeof ( aeskw )		1020501	2					
ANR	1020617	SizeofExpression	sizeof ( aeskw )		1020501	0					
ANR	1020618	Sizeof	sizeof		1020501	0					
ANR	1020619	SizeofOperand	aeskw		1020501	1					
ANR	1020620	ExpressionStatement	aeskw . keyword_length = 31	2378:3:69789:69814	1020501	1	True				
ANR	1020621	AssignmentExpression	aeskw . keyword_length = 31		1020501	0		=			
ANR	1020622	MemberAccess	aeskw . keyword_length		1020501	0					
ANR	1020623	Identifier	aeskw		1020501	0					
ANR	1020624	Identifier	keyword_length		1020501	1					
ANR	1020625	PrimaryExpression	31		1020501	1					
ANR	1020626	ExpressionStatement	"r_search_set_callback ( core -> search , & _cb_hit , param )"	2385:2:70054:70107	1020501	2	True				
ANR	1020627	CallExpression	"r_search_set_callback ( core -> search , & _cb_hit , param )"		1020501	0					
ANR	1020628	Callee	r_search_set_callback		1020501	0					
ANR	1020629	Identifier	r_search_set_callback		1020501	0					
ANR	1020630	ArgumentList	core -> search		1020501	1					
ANR	1020631	Argument	core -> search		1020501	0					
ANR	1020632	PtrMemberAccess	core -> search		1020501	0					
ANR	1020633	Identifier	core		1020501	0					
ANR	1020634	Identifier	search		1020501	1					
ANR	1020635	Argument	& _cb_hit		1020501	1					
ANR	1020636	UnaryOperationExpression	& _cb_hit		1020501	0					
ANR	1020637	UnaryOperator	&		1020501	0					
ANR	1020638	Identifier	_cb_hit		1020501	1					
ANR	1020639	Argument	param		1020501	2					
ANR	1020640	Identifier	param		1020501	0					
ANR	1020641	ExpressionStatement	"cmdhit = r_config_get ( core -> config , ""cmd.hit"" )"	2386:2:70111:70158	1020501	3	True				
ANR	1020642	AssignmentExpression	"cmdhit = r_config_get ( core -> config , ""cmd.hit"" )"		1020501	0		=			
ANR	1020643	Identifier	cmdhit		1020501	0					
ANR	1020644	CallExpression	"r_config_get ( core -> config , ""cmd.hit"" )"		1020501	1					
ANR	1020645	Callee	r_config_get		1020501	0					
ANR	1020646	Identifier	r_config_get		1020501	0					
ANR	1020647	ArgumentList	core -> config		1020501	1					
ANR	1020648	Argument	core -> config		1020501	0					
ANR	1020649	PtrMemberAccess	core -> config		1020501	0					
ANR	1020650	Identifier	core		1020501	0					
ANR	1020651	Identifier	config		1020501	1					
ANR	1020652	Argument	"""cmd.hit"""		1020501	1					
ANR	1020653	PrimaryExpression	"""cmd.hit"""		1020501	0					
ANR	1020654	IfStatement	if ( ! ( buf = malloc ( core -> blocksize ) ) )		1020501	4					
ANR	1020655	Condition	! ( buf = malloc ( core -> blocksize ) )	2387:6:70166:70198	1020501	0	True				
ANR	1020656	UnaryOperationExpression	! ( buf = malloc ( core -> blocksize ) )		1020501	0					
ANR	1020657	UnaryOperator	!		1020501	0					
ANR	1020658	AssignmentExpression	buf = malloc ( core -> blocksize )		1020501	1		=			
ANR	1020659	Identifier	buf		1020501	0					
ANR	1020660	CallExpression	malloc ( core -> blocksize )		1020501	1					
ANR	1020661	Callee	malloc		1020501	0					
ANR	1020662	Identifier	malloc		1020501	0					
ANR	1020663	ArgumentList	core -> blocksize		1020501	1					
ANR	1020664	Argument	core -> blocksize		1020501	0					
ANR	1020665	PtrMemberAccess	core -> blocksize		1020501	0					
ANR	1020666	Identifier	core		1020501	0					
ANR	1020667	Identifier	blocksize		1020501	1					
ANR	1020668	CompoundStatement		32:41:913:913	1020501	1					
ANR	1020669	ReturnStatement	return ;	2388:3:70206:70212	1020501	0	True				
ANR	1020670	IfStatement	if ( search -> bckwrds )		1020501	5					
ANR	1020671	Condition	search -> bckwrds	2390:6:70224:70238	1020501	0	True				
ANR	1020672	PtrMemberAccess	search -> bckwrds		1020501	0					
ANR	1020673	Identifier	search		1020501	0					
ANR	1020674	Identifier	bckwrds		1020501	1					
ANR	1020675	CompoundStatement		35:23:953:953	1020501	1					
ANR	1020676	ExpressionStatement	r_search_string_prepare_backward ( search )	2391:3:70246:70287	1020501	0	True				
ANR	1020677	CallExpression	r_search_string_prepare_backward ( search )		1020501	0					
ANR	1020678	Callee	r_search_string_prepare_backward		1020501	0					
ANR	1020679	Identifier	r_search_string_prepare_backward		1020501	0					
ANR	1020680	ArgumentList	search		1020501	1					
ANR	1020681	Argument	search		1020501	0					
ANR	1020682	Identifier	search		1020501	0					
ANR	1020683	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2393:2:70295:70325	1020501	6	True				
ANR	1020684	CallExpression	"r_cons_break_push ( NULL , NULL )"		1020501	0					
ANR	1020685	Callee	r_cons_break_push		1020501	0					
ANR	1020686	Identifier	r_cons_break_push		1020501	0					
ANR	1020687	ArgumentList	NULL		1020501	1					
ANR	1020688	Argument	NULL		1020501	0					
ANR	1020689	Identifier	NULL		1020501	0					
ANR	1020690	Argument	NULL		1020501	1					
ANR	1020691	Identifier	NULL		1020501	0					
ANR	1020692	Statement	r_list_foreach	2395:2:70361:70374	1020501	7	True				
ANR	1020693	Statement	(	2395:17:70376:70376	1020501	8	True				
ANR	1020694	Statement	param	2395:18:70377:70381	1020501	9	True				
ANR	1020695	Statement	->	2395:23:70382:70383	1020501	10	True				
ANR	1020696	Statement	boundaries	2395:25:70384:70393	1020501	11	True				
ANR	1020697	Statement	","	2395:35:70394:70394	1020501	12	True				
ANR	1020698	Statement	iter	2395:37:70396:70399	1020501	13	True				
ANR	1020699	Statement	","	2395:41:70400:70400	1020501	14	True				
ANR	1020700	Statement	map	2395:43:70402:70404	1020501	15	True				
ANR	1020701	Statement	)	2395:46:70405:70405	1020501	16	True				
ANR	1020702	CompoundStatement		71:3:2067:2075	1020501	17					
ANR	1020703	IfStatement	"if ( ! r_itv_overlap ( search_itv , map -> itv ) )"		1020501	0					
ANR	1020704	Condition	"! r_itv_overlap ( search_itv , map -> itv )"	2396:7:70416:70452	1020501	0	True				
ANR	1020705	UnaryOperationExpression	"! r_itv_overlap ( search_itv , map -> itv )"		1020501	0					
ANR	1020706	UnaryOperator	!		1020501	0					
ANR	1020707	CallExpression	"r_itv_overlap ( search_itv , map -> itv )"		1020501	1					
ANR	1020708	Callee	r_itv_overlap		1020501	0					
ANR	1020709	Identifier	r_itv_overlap		1020501	0					
ANR	1020710	ArgumentList	search_itv		1020501	1					
ANR	1020711	Argument	search_itv		1020501	0					
ANR	1020712	Identifier	search_itv		1020501	0					
ANR	1020713	Argument	map -> itv		1020501	1					
ANR	1020714	PtrMemberAccess	map -> itv		1020501	0					
ANR	1020715	Identifier	map		1020501	0					
ANR	1020716	Identifier	itv		1020501	1					
ANR	1020717	CompoundStatement		41:46:1167:1167	1020501	1					
ANR	1020718	ContinueStatement	continue ;	2397:4:70461:70469	1020501	0	True				
ANR	1020719	IdentifierDeclStatement	const ut64 saved_nhits = search -> nhits ;	2399:3:70479:70517	1020501	1	True				
ANR	1020720	IdentifierDecl	saved_nhits = search -> nhits		1020501	0					
ANR	1020721	IdentifierDeclType	const ut64		1020501	0					
ANR	1020722	Identifier	saved_nhits		1020501	1					
ANR	1020723	AssignmentExpression	saved_nhits = search -> nhits		1020501	2		=			
ANR	1020724	Identifier	saved_nhits		1020501	0					
ANR	1020725	PtrMemberAccess	search -> nhits		1020501	1					
ANR	1020726	Identifier	search		1020501	0					
ANR	1020727	Identifier	nhits		1020501	1					
ANR	1020728	IdentifierDeclStatement	"RInterval itv = r_itv_intersect ( search_itv , map -> itv ) ;"	2400:3:70522:70576	1020501	2	True				
ANR	1020729	IdentifierDecl	"itv = r_itv_intersect ( search_itv , map -> itv )"		1020501	0					
ANR	1020730	IdentifierDeclType	RInterval		1020501	0					
ANR	1020731	Identifier	itv		1020501	1					
ANR	1020732	AssignmentExpression	"itv = r_itv_intersect ( search_itv , map -> itv )"		1020501	2		=			
ANR	1020733	Identifier	itv		1020501	0					
ANR	1020734	CallExpression	"r_itv_intersect ( search_itv , map -> itv )"		1020501	1					
ANR	1020735	Callee	r_itv_intersect		1020501	0					
ANR	1020736	Identifier	r_itv_intersect		1020501	0					
ANR	1020737	ArgumentList	search_itv		1020501	1					
ANR	1020738	Argument	search_itv		1020501	0					
ANR	1020739	Identifier	search_itv		1020501	0					
ANR	1020740	Argument	map -> itv		1020501	1					
ANR	1020741	PtrMemberAccess	map -> itv		1020501	0					
ANR	1020742	Identifier	map		1020501	0					
ANR	1020743	Identifier	itv		1020501	1					
ANR	1020744	IfStatement	if ( r_cons_is_breaked ( ) )		1020501	3					
ANR	1020745	Condition	r_cons_is_breaked ( )	2401:7:70585:70604	1020501	0	True				
ANR	1020746	CallExpression	r_cons_is_breaked ( )		1020501	0					
ANR	1020747	Callee	r_cons_is_breaked		1020501	0					
ANR	1020748	Identifier	r_cons_is_breaked		1020501	0					
ANR	1020749	ArgumentList			1020501	1					
ANR	1020750	CompoundStatement		46:29:1319:1319	1020501	1					
ANR	1020751	BreakStatement	break ;	2402:4:70613:70618	1020501	0	True				
ANR	1020752	IfStatement	if ( ! json )		1020501	4					
ANR	1020753	Condition	! json	2404:7:70632:70636	1020501	0	True				
ANR	1020754	UnaryOperationExpression	! json		1020501	0					
ANR	1020755	UnaryOperator	!		1020501	0					
ANR	1020756	Identifier	json		1020501	1					
ANR	1020757	CompoundStatement		52:4:1460:1509	1020501	1					
ANR	1020758	IdentifierDeclStatement	RSearchKeyword * kw = r_list_first ( core -> search -> kws ) ;	2405:4:70645:70698	1020501	0	True				
ANR	1020759	IdentifierDecl	* kw = r_list_first ( core -> search -> kws )		1020501	0					
ANR	1020760	IdentifierDeclType	RSearchKeyword *		1020501	0					
ANR	1020761	Identifier	kw		1020501	1					
ANR	1020762	AssignmentExpression	* kw = r_list_first ( core -> search -> kws )		1020501	2		=			
ANR	1020763	Identifier	kw		1020501	0					
ANR	1020764	CallExpression	r_list_first ( core -> search -> kws )		1020501	1					
ANR	1020765	Callee	r_list_first		1020501	0					
ANR	1020766	Identifier	r_list_first		1020501	0					
ANR	1020767	ArgumentList	core -> search -> kws		1020501	1					
ANR	1020768	Argument	core -> search -> kws		1020501	0					
ANR	1020769	PtrMemberAccess	core -> search -> kws		1020501	0					
ANR	1020770	PtrMemberAccess	core -> search		1020501	0					
ANR	1020771	Identifier	core		1020501	0					
ANR	1020772	Identifier	search		1020501	1					
ANR	1020773	Identifier	kws		1020501	1					
ANR	1020774	IdentifierDeclStatement	int lenstr = kw ? kw -> keyword_length : 0 ;	2406:4:70704:70742	1020501	1	True				
ANR	1020775	IdentifierDecl	lenstr = kw ? kw -> keyword_length : 0		1020501	0					
ANR	1020776	IdentifierDeclType	int		1020501	0					
ANR	1020777	Identifier	lenstr		1020501	1					
ANR	1020778	AssignmentExpression	lenstr = kw ? kw -> keyword_length : 0		1020501	2		=			
ANR	1020779	Identifier	lenstr		1020501	0					
ANR	1020780	ConditionalExpression	kw ? kw -> keyword_length : 0		1020501	1					
ANR	1020781	Condition	kw		1020501	0					
ANR	1020782	Identifier	kw		1020501	0					
ANR	1020783	PtrMemberAccess	kw -> keyword_length		1020501	1					
ANR	1020784	Identifier	kw		1020501	0					
ANR	1020785	Identifier	keyword_length		1020501	1					
ANR	1020786	PrimaryExpression	0		1020501	2					
ANR	1020787	IdentifierDeclStatement	"const char * bytestr = lenstr > 1 ? ""bytes"" : ""byte"" ;"	2407:4:70748:70797	1020501	2	True				
ANR	1020788	IdentifierDecl	"* bytestr = lenstr > 1 ? ""bytes"" : ""byte"""		1020501	0					
ANR	1020789	IdentifierDeclType	const char *		1020501	0					
ANR	1020790	Identifier	bytestr		1020501	1					
ANR	1020791	AssignmentExpression	"* bytestr = lenstr > 1 ? ""bytes"" : ""byte"""		1020501	2		=			
ANR	1020792	Identifier	bytestr		1020501	0					
ANR	1020793	ConditionalExpression	"lenstr > 1 ? ""bytes"" : ""byte"""		1020501	1					
ANR	1020794	Condition	lenstr > 1		1020501	0					
ANR	1020795	RelationalExpression	lenstr > 1		1020501	0		>			
ANR	1020796	Identifier	lenstr		1020501	0					
ANR	1020797	PrimaryExpression	1		1020501	1					
ANR	1020798	PrimaryExpression	"""bytes"""		1020501	1					
ANR	1020799	PrimaryExpression	"""byte"""		1020501	2					
ANR	1020800	Statement	eprintf	2408:4:70803:70809	1020501	3	True				
ANR	1020801	Statement	(	2408:12:70811:70811	1020501	4	True				
ANR	1020802	Statement	"""Searching %d %s in [0x%"""	2408:13:70812:70836	1020501	5	True				
ANR	1020803	Statement	PFMT64x	2408:38:70837:70843	1020501	6	True				
ANR	1020804	Statement	"""-0x%"""	2408:46:70845:70850	1020501	7	True				
ANR	1020805	Statement	PFMT64x	2408:52:70851:70857	1020501	8	True				
ANR	1020806	Statement	"""]\\n"""	2408:60:70859:70863	1020501	9	True				
ANR	1020807	Statement	","	2408:65:70864:70864	1020501	10	True				
ANR	1020808	Statement	kw	2409:5:70871:70872	1020501	11	True				
ANR	1020809	Statement	?	2409:7:70873:70873	1020501	12	True				
ANR	1020810	Statement	kw	2409:9:70875:70876	1020501	13	True				
ANR	1020811	Statement	->	2409:11:70877:70878	1020501	14	True				
ANR	1020812	Label	keyword_length :	2409:13:70879:70893	1020501	15	True				
ANR	1020813	Identifier	keyword_length		1020501	0					
ANR	1020814	Statement	0	2409:29:70895:70895	1020501	16	True				
ANR	1020815	Statement	","	2409:30:70896:70896	1020501	17	True				
ANR	1020816	Statement	bytestr	2409:32:70898:70904	1020501	18	True				
ANR	1020817	Statement	","	2409:39:70905:70905	1020501	19	True				
ANR	1020818	Statement	itv	2409:41:70907:70909	1020501	20	True				
ANR	1020819	Statement	.	2409:44:70910:70910	1020501	21	True				
ANR	1020820	Statement	addr	2409:45:70911:70914	1020501	22	True				
ANR	1020821	Statement	","	2409:49:70915:70915	1020501	23	True				
ANR	1020822	Statement	r_itv_end	2409:51:70917:70925	1020501	24	True				
ANR	1020823	Statement	(	2409:61:70927:70927	1020501	25	True				
ANR	1020824	Statement	itv	2409:62:70928:70930	1020501	26	True				
ANR	1020825	Statement	)	2409:65:70931:70931	1020501	27	True				
ANR	1020826	Statement	)	2409:66:70932:70932	1020501	28	True				
ANR	1020827	ExpressionStatement		2409:67:70933:70933	1020501	29	True				
ANR	1020828	IfStatement	if ( r_sandbox_enable ( 0 ) && itv . size > 1024 * 64 )		1020501	5					
ANR	1020829	Condition	r_sandbox_enable ( 0 ) && itv . size > 1024 * 64	2411:7:70947:70990	1020501	0	True				
ANR	1020830	AndExpression	r_sandbox_enable ( 0 ) && itv . size > 1024 * 64		1020501	0		&&			
ANR	1020831	CallExpression	r_sandbox_enable ( 0 )		1020501	0					
ANR	1020832	Callee	r_sandbox_enable		1020501	0					
ANR	1020833	Identifier	r_sandbox_enable		1020501	0					
ANR	1020834	ArgumentList	0		1020501	1					
ANR	1020835	Argument	0		1020501	0					
ANR	1020836	PrimaryExpression	0		1020501	0					
ANR	1020837	RelationalExpression	itv . size > 1024 * 64		1020501	1		>			
ANR	1020838	MemberAccess	itv . size		1020501	0					
ANR	1020839	Identifier	itv		1020501	0					
ANR	1020840	Identifier	size		1020501	1					
ANR	1020841	MultiplicativeExpression	1024 * 64		1020501	1		*			
ANR	1020842	PrimaryExpression	1024		1020501	0					
ANR	1020843	PrimaryExpression	64		1020501	1					
ANR	1020844	CompoundStatement		56:53:1705:1705	1020501	1					
ANR	1020845	ExpressionStatement	"eprintf ( ""Sandbox restricts search range\\n"" )"	2412:4:70999:71043	1020501	0	True				
ANR	1020846	CallExpression	"eprintf ( ""Sandbox restricts search range\\n"" )"		1020501	0					
ANR	1020847	Callee	eprintf		1020501	0					
ANR	1020848	Identifier	eprintf		1020501	0					
ANR	1020849	ArgumentList	"""Sandbox restricts search range\\n"""		1020501	1					
ANR	1020850	Argument	"""Sandbox restricts search range\\n"""		1020501	0					
ANR	1020851	PrimaryExpression	"""Sandbox restricts search range\\n"""		1020501	0					
ANR	1020852	BreakStatement	break ;	2413:4:71049:71054	1020501	1	True				
ANR	1020853	IfStatement	if ( ! core -> search -> bckwrds )		1020501	6					
ANR	1020854	Condition	! core -> search -> bckwrds	2415:7:71068:71089	1020501	0	True				
ANR	1020855	UnaryOperationExpression	! core -> search -> bckwrds		1020501	0					
ANR	1020856	UnaryOperator	!		1020501	0					
ANR	1020857	PtrMemberAccess	core -> search -> bckwrds		1020501	1					
ANR	1020858	PtrMemberAccess	core -> search		1020501	0					
ANR	1020859	Identifier	core		1020501	0					
ANR	1020860	Identifier	search		1020501	1					
ANR	1020861	Identifier	bckwrds		1020501	1					
ANR	1020862	CompoundStatement		62:4:1829:1847	1020501	1					
ANR	1020863	IdentifierDeclStatement	RListIter * it ;	2416:4:71098:71111	1020501	0	True				
ANR	1020864	IdentifierDecl	* it		1020501	0					
ANR	1020865	IdentifierDeclType	RListIter *		1020501	0					
ANR	1020866	Identifier	it		1020501	1					
ANR	1020867	IdentifierDeclStatement	RSearchKeyword * kw ;	2417:4:71117:71135	1020501	1	True				
ANR	1020868	IdentifierDecl	* kw		1020501	0					
ANR	1020869	IdentifierDeclType	RSearchKeyword *		1020501	0					
ANR	1020870	Identifier	kw		1020501	1					
ANR	1020871	Statement	r_list_foreach	2418:4:71141:71154	1020501	2	True				
ANR	1020872	Statement	(	2418:19:71156:71156	1020501	3	True				
ANR	1020873	Statement	core	2418:20:71157:71160	1020501	4	True				
ANR	1020874	Statement	->	2418:24:71161:71162	1020501	5	True				
ANR	1020875	Statement	search	2418:26:71163:71168	1020501	6	True				
ANR	1020876	Statement	->	2418:32:71169:71170	1020501	7	True				
ANR	1020877	Statement	kws	2418:34:71171:71173	1020501	8	True				
ANR	1020878	Statement	","	2418:37:71174:71174	1020501	9	True				
ANR	1020879	Statement	it	2418:39:71176:71177	1020501	10	True				
ANR	1020880	Statement	","	2418:41:71178:71178	1020501	11	True				
ANR	1020881	Statement	kw	2418:43:71180:71181	1020501	12	True				
ANR	1020882	Statement	)	2418:45:71182:71182	1020501	13	True				
ANR	1020883	CompoundStatement		63:47:1896:1896	1020501	14					
ANR	1020884	ExpressionStatement	kw -> last = 0	2419:5:71191:71203	1020501	0	True				
ANR	1020885	AssignmentExpression	kw -> last = 0		1020501	0		=			
ANR	1020886	PtrMemberAccess	kw -> last		1020501	0					
ANR	1020887	Identifier	kw		1020501	0					
ANR	1020888	Identifier	last		1020501	1					
ANR	1020889	PrimaryExpression	0		1020501	1					
ANR	1020890	IdentifierDeclStatement	"const ut64 from = itv . addr , to = r_itv_end ( itv ) , from1 = search -> bckwrds ? to : from , to1 = search -> bckwrds ? from : to ;"	2423:3:71220:71350	1020501	7	True				
ANR	1020891	IdentifierDecl	from = itv . addr		1020501	0					
ANR	1020892	IdentifierDeclType	const ut64		1020501	0					
ANR	1020893	Identifier	from		1020501	1					
ANR	1020894	AssignmentExpression	from = itv . addr		1020501	2		=			
ANR	1020895	Identifier	from		1020501	0					
ANR	1020896	MemberAccess	itv . addr		1020501	1					
ANR	1020897	Identifier	itv		1020501	0					
ANR	1020898	Identifier	addr		1020501	1					
ANR	1020899	IdentifierDecl	to = r_itv_end ( itv )		1020501	1					
ANR	1020900	IdentifierDeclType	const ut64		1020501	0					
ANR	1020901	Identifier	to		1020501	1					
ANR	1020902	AssignmentExpression	to = r_itv_end ( itv )		1020501	2		=			
ANR	1020903	Identifier	to		1020501	0					
ANR	1020904	CallExpression	r_itv_end ( itv )		1020501	1					
ANR	1020905	Callee	r_itv_end		1020501	0					
ANR	1020906	Identifier	r_itv_end		1020501	0					
ANR	1020907	ArgumentList	itv		1020501	1					
ANR	1020908	Argument	itv		1020501	0					
ANR	1020909	Identifier	itv		1020501	0					
ANR	1020910	IdentifierDecl	from1 = search -> bckwrds ? to : from		1020501	2					
ANR	1020911	IdentifierDeclType	const ut64		1020501	0					
ANR	1020912	Identifier	from1		1020501	1					
ANR	1020913	AssignmentExpression	from1 = search -> bckwrds ? to : from		1020501	2		=			
ANR	1020914	Identifier	from1		1020501	0					
ANR	1020915	ConditionalExpression	search -> bckwrds ? to : from		1020501	1					
ANR	1020916	Condition	search -> bckwrds		1020501	0					
ANR	1020917	PtrMemberAccess	search -> bckwrds		1020501	0					
ANR	1020918	Identifier	search		1020501	0					
ANR	1020919	Identifier	bckwrds		1020501	1					
ANR	1020920	Identifier	to		1020501	1					
ANR	1020921	Identifier	from		1020501	2					
ANR	1020922	IdentifierDecl	to1 = search -> bckwrds ? from : to		1020501	3					
ANR	1020923	IdentifierDeclType	const ut64		1020501	0					
ANR	1020924	Identifier	to1		1020501	1					
ANR	1020925	AssignmentExpression	to1 = search -> bckwrds ? from : to		1020501	2		=			
ANR	1020926	Identifier	to1		1020501	0					
ANR	1020927	ConditionalExpression	search -> bckwrds ? from : to		1020501	1					
ANR	1020928	Condition	search -> bckwrds		1020501	0					
ANR	1020929	PtrMemberAccess	search -> bckwrds		1020501	0					
ANR	1020930	Identifier	search		1020501	0					
ANR	1020931	Identifier	bckwrds		1020501	1					
ANR	1020932	Identifier	from		1020501	1					
ANR	1020933	Identifier	to		1020501	2					
ANR	1020934	IdentifierDeclStatement	ut64 len ;	2426:3:71355:71363	1020501	8	True				
ANR	1020935	IdentifierDecl	len		1020501	0					
ANR	1020936	IdentifierDeclType	ut64		1020501	0					
ANR	1020937	Identifier	len		1020501	1					
ANR	1020938	ForStatement	for ( at = from1 ; at != to1 ; at = search -> bckwrds ? at - len : at + len )		1020501	9					
ANR	1020939	ForInit	at = from1 ;	2427:8:71373:71383	1020501	0	True				
ANR	1020940	AssignmentExpression	at = from1		1020501	0		=			
ANR	1020941	Identifier	at		1020501	0					
ANR	1020942	Identifier	from1		1020501	1					
ANR	1020943	Condition	at != to1	2427:20:71385:71393	1020501	1	True				
ANR	1020944	EqualityExpression	at != to1		1020501	0		!=			
ANR	1020945	Identifier	at		1020501	0					
ANR	1020946	Identifier	to1		1020501	1					
ANR	1020947	AssignmentExpression	at = search -> bckwrds ? at - len : at + len	2427:31:71396:71437	1020501	2	True	=			
ANR	1020948	Identifier	at		1020501	0					
ANR	1020949	ConditionalExpression	search -> bckwrds ? at - len : at + len		1020501	1					
ANR	1020950	Condition	search -> bckwrds		1020501	0					
ANR	1020951	PtrMemberAccess	search -> bckwrds		1020501	0					
ANR	1020952	Identifier	search		1020501	0					
ANR	1020953	Identifier	bckwrds		1020501	1					
ANR	1020954	AdditiveExpression	at - len		1020501	1		-			
ANR	1020955	Identifier	at		1020501	0					
ANR	1020956	Identifier	len		1020501	1					
ANR	1020957	AdditiveExpression	at + len		1020501	2		+			
ANR	1020958	Identifier	at		1020501	0					
ANR	1020959	Identifier	len		1020501	1					
ANR	1020960	CompoundStatement		72:75:2152:2152	1020501	3					
ANR	1020961	ExpressionStatement	"print_search_progress ( at , to1 , search -> nhits )"	2428:4:71446:71492	1020501	0	True				
ANR	1020962	CallExpression	"print_search_progress ( at , to1 , search -> nhits )"		1020501	0					
ANR	1020963	Callee	print_search_progress		1020501	0					
ANR	1020964	Identifier	print_search_progress		1020501	0					
ANR	1020965	ArgumentList	at		1020501	1					
ANR	1020966	Argument	at		1020501	0					
ANR	1020967	Identifier	at		1020501	0					
ANR	1020968	Argument	to1		1020501	1					
ANR	1020969	Identifier	to1		1020501	0					
ANR	1020970	Argument	search -> nhits		1020501	2					
ANR	1020971	PtrMemberAccess	search -> nhits		1020501	0					
ANR	1020972	Identifier	search		1020501	0					
ANR	1020973	Identifier	nhits		1020501	1					
ANR	1020974	IfStatement	if ( r_cons_is_breaked ( ) )		1020501	1					
ANR	1020975	Condition	r_cons_is_breaked ( )	2429:8:71502:71521	1020501	0	True				
ANR	1020976	CallExpression	r_cons_is_breaked ( )		1020501	0					
ANR	1020977	Callee	r_cons_is_breaked		1020501	0					
ANR	1020978	Identifier	r_cons_is_breaked		1020501	0					
ANR	1020979	ArgumentList			1020501	1					
ANR	1020980	CompoundStatement		74:30:2236:2236	1020501	1					
ANR	1020981	ExpressionStatement	"eprintf ( ""\\n\\n"" )"	2430:5:71531:71547	1020501	0	True				
ANR	1020982	CallExpression	"eprintf ( ""\\n\\n"" )"		1020501	0					
ANR	1020983	Callee	eprintf		1020501	0					
ANR	1020984	Identifier	eprintf		1020501	0					
ANR	1020985	ArgumentList	"""\\n\\n"""		1020501	1					
ANR	1020986	Argument	"""\\n\\n"""		1020501	0					
ANR	1020987	PrimaryExpression	"""\\n\\n"""		1020501	0					
ANR	1020988	BreakStatement	break ;	2431:5:71554:71559	1020501	1	True				
ANR	1020989	IfStatement	if ( search -> bckwrds )		1020501	2					
ANR	1020990	Condition	search -> bckwrds	2433:8:71575:71589	1020501	0	True				
ANR	1020991	PtrMemberAccess	search -> bckwrds		1020501	0					
ANR	1020992	Identifier	search		1020501	0					
ANR	1020993	Identifier	bckwrds		1020501	1					
ANR	1020994	CompoundStatement		78:25:2304:2304	1020501	1					
ANR	1020995	ExpressionStatement	"len = R_MIN ( core -> blocksize , at - from )"	2434:5:71599:71639	1020501	0	True				
ANR	1020996	AssignmentExpression	"len = R_MIN ( core -> blocksize , at - from )"		1020501	0		=			
ANR	1020997	Identifier	len		1020501	0					
ANR	1020998	CallExpression	"R_MIN ( core -> blocksize , at - from )"		1020501	1					
ANR	1020999	Callee	R_MIN		1020501	0					
ANR	1021000	Identifier	R_MIN		1020501	0					
ANR	1021001	ArgumentList	core -> blocksize		1020501	1					
ANR	1021002	Argument	core -> blocksize		1020501	0					
ANR	1021003	PtrMemberAccess	core -> blocksize		1020501	0					
ANR	1021004	Identifier	core		1020501	0					
ANR	1021005	Identifier	blocksize		1020501	1					
ANR	1021006	Argument	at - from		1020501	1					
ANR	1021007	AdditiveExpression	at - from		1020501	0		-			
ANR	1021008	Identifier	at		1020501	0					
ANR	1021009	Identifier	from		1020501	1					
ANR	1021010	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at - len , 0 ) )"		1020501	1					
ANR	1021011	Condition	"! r_io_is_valid_offset ( core -> io , at - len , 0 )"	2436:9:71678:71722	1020501	0	True				
ANR	1021012	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at - len , 0 )"		1020501	0					
ANR	1021013	UnaryOperator	!		1020501	0					
ANR	1021014	CallExpression	"r_io_is_valid_offset ( core -> io , at - len , 0 )"		1020501	1					
ANR	1021015	Callee	r_io_is_valid_offset		1020501	0					
ANR	1021016	Identifier	r_io_is_valid_offset		1020501	0					
ANR	1021017	ArgumentList	core -> io		1020501	1					
ANR	1021018	Argument	core -> io		1020501	0					
ANR	1021019	PtrMemberAccess	core -> io		1020501	0					
ANR	1021020	Identifier	core		1020501	0					
ANR	1021021	Identifier	io		1020501	1					
ANR	1021022	Argument	at - len		1020501	1					
ANR	1021023	AdditiveExpression	at - len		1020501	0		-			
ANR	1021024	Identifier	at		1020501	0					
ANR	1021025	Identifier	len		1020501	1					
ANR	1021026	Argument	0		1020501	2					
ANR	1021027	PrimaryExpression	0		1020501	0					
ANR	1021028	CompoundStatement		81:56:2437:2437	1020501	1					
ANR	1021029	BreakStatement	break ;	2437:6:71733:71738	1020501	0	True				
ANR	1021030	ExpressionStatement	"( void ) r_io_read_at ( core -> io , at - len , buf , len )"	2439:5:71752:71801	1020501	2	True				
ANR	1021031	CastExpression	"( void ) r_io_read_at ( core -> io , at - len , buf , len )"		1020501	0					
ANR	1021032	CastTarget	void		1020501	0					
ANR	1021033	CallExpression	"r_io_read_at ( core -> io , at - len , buf , len )"		1020501	1					
ANR	1021034	Callee	r_io_read_at		1020501	0					
ANR	1021035	Identifier	r_io_read_at		1020501	0					
ANR	1021036	ArgumentList	core -> io		1020501	1					
ANR	1021037	Argument	core -> io		1020501	0					
ANR	1021038	PtrMemberAccess	core -> io		1020501	0					
ANR	1021039	Identifier	core		1020501	0					
ANR	1021040	Identifier	io		1020501	1					
ANR	1021041	Argument	at - len		1020501	1					
ANR	1021042	AdditiveExpression	at - len		1020501	0		-			
ANR	1021043	Identifier	at		1020501	0					
ANR	1021044	Identifier	len		1020501	1					
ANR	1021045	Argument	buf		1020501	2					
ANR	1021046	Identifier	buf		1020501	0					
ANR	1021047	Argument	len		1020501	3					
ANR	1021048	Identifier	len		1020501	0					
ANR	1021049	ElseStatement	else		1020501	0					
ANR	1021050	CompoundStatement		85:11:2526:2526	1020501	0					
ANR	1021051	ExpressionStatement	"len = R_MIN ( core -> blocksize , to - at )"	2441:5:71821:71859	1020501	0	True				
ANR	1021052	AssignmentExpression	"len = R_MIN ( core -> blocksize , to - at )"		1020501	0		=			
ANR	1021053	Identifier	len		1020501	0					
ANR	1021054	CallExpression	"R_MIN ( core -> blocksize , to - at )"		1020501	1					
ANR	1021055	Callee	R_MIN		1020501	0					
ANR	1021056	Identifier	R_MIN		1020501	0					
ANR	1021057	ArgumentList	core -> blocksize		1020501	1					
ANR	1021058	Argument	core -> blocksize		1020501	0					
ANR	1021059	PtrMemberAccess	core -> blocksize		1020501	0					
ANR	1021060	Identifier	core		1020501	0					
ANR	1021061	Identifier	blocksize		1020501	1					
ANR	1021062	Argument	to - at		1020501	1					
ANR	1021063	AdditiveExpression	to - at		1020501	0		-			
ANR	1021064	Identifier	to		1020501	0					
ANR	1021065	Identifier	at		1020501	1					
ANR	1021066	IfStatement	"if ( ! r_io_is_valid_offset ( core -> io , at , 0 ) )"		1020501	1					
ANR	1021067	Condition	"! r_io_is_valid_offset ( core -> io , at , 0 )"	2442:9:71870:71908	1020501	0	True				
ANR	1021068	UnaryOperationExpression	"! r_io_is_valid_offset ( core -> io , at , 0 )"		1020501	0					
ANR	1021069	UnaryOperator	!		1020501	0					
ANR	1021070	CallExpression	"r_io_is_valid_offset ( core -> io , at , 0 )"		1020501	1					
ANR	1021071	Callee	r_io_is_valid_offset		1020501	0					
ANR	1021072	Identifier	r_io_is_valid_offset		1020501	0					
ANR	1021073	ArgumentList	core -> io		1020501	1					
ANR	1021074	Argument	core -> io		1020501	0					
ANR	1021075	PtrMemberAccess	core -> io		1020501	0					
ANR	1021076	Identifier	core		1020501	0					
ANR	1021077	Identifier	io		1020501	1					
ANR	1021078	Argument	at		1020501	1					
ANR	1021079	Identifier	at		1020501	0					
ANR	1021080	Argument	0		1020501	2					
ANR	1021081	PrimaryExpression	0		1020501	0					
ANR	1021082	CompoundStatement		87:50:2623:2623	1020501	1					
ANR	1021083	BreakStatement	break ;	2443:6:71919:71924	1020501	0	True				
ANR	1021084	ExpressionStatement	"( void ) r_io_read_at ( core -> io , at , buf , len )"	2445:5:71938:71981	1020501	2	True				
ANR	1021085	CastExpression	"( void ) r_io_read_at ( core -> io , at , buf , len )"		1020501	0					
ANR	1021086	CastTarget	void		1020501	0					
ANR	1021087	CallExpression	"r_io_read_at ( core -> io , at , buf , len )"		1020501	1					
ANR	1021088	Callee	r_io_read_at		1020501	0					
ANR	1021089	Identifier	r_io_read_at		1020501	0					
ANR	1021090	ArgumentList	core -> io		1020501	1					
ANR	1021091	Argument	core -> io		1020501	0					
ANR	1021092	PtrMemberAccess	core -> io		1020501	0					
ANR	1021093	Identifier	core		1020501	0					
ANR	1021094	Identifier	io		1020501	1					
ANR	1021095	Argument	at		1020501	1					
ANR	1021096	Identifier	at		1020501	0					
ANR	1021097	Argument	buf		1020501	2					
ANR	1021098	Identifier	buf		1020501	0					
ANR	1021099	Argument	len		1020501	3					
ANR	1021100	Identifier	len		1020501	0					
ANR	1021101	IfStatement	if ( param -> crypto_search )		1020501	3					
ANR	1021102	Condition	param -> crypto_search	2447:8:71997:72016	1020501	0	True				
ANR	1021103	PtrMemberAccess	param -> crypto_search		1020501	0					
ANR	1021104	Identifier	param		1020501	0					
ANR	1021105	Identifier	crypto_search		1020501	1					
ANR	1021106	CompoundStatement		94:5:2775:2788	1020501	1					
ANR	1021107	IdentifierDeclStatement	int delta = 0 ;	2449:5:72063:72076	1020501	0	True				
ANR	1021108	IdentifierDecl	delta = 0		1020501	0					
ANR	1021109	IdentifierDeclType	int		1020501	0					
ANR	1021110	Identifier	delta		1020501	1					
ANR	1021111	AssignmentExpression	delta = 0		1020501	2		=			
ANR	1021112	Identifier	delta		1020501	0					
ANR	1021113	PrimaryExpression	0		1020501	1					
ANR	1021114	IfStatement	if ( param -> aes_search )		1020501	1					
ANR	1021115	Condition	param -> aes_search	2450:9:72087:72103	1020501	0	True				
ANR	1021116	PtrMemberAccess	param -> aes_search		1020501	0					
ANR	1021117	Identifier	param		1020501	0					
ANR	1021118	Identifier	aes_search		1020501	1					
ANR	1021119	CompoundStatement		95:28:2818:2818	1020501	1					
ANR	1021120	ExpressionStatement	"delta = r_search_aes_update ( core -> search , at , buf , len )"	2451:6:72114:72170	1020501	0	True				
ANR	1021121	AssignmentExpression	"delta = r_search_aes_update ( core -> search , at , buf , len )"		1020501	0		=			
ANR	1021122	Identifier	delta		1020501	0					
ANR	1021123	CallExpression	"r_search_aes_update ( core -> search , at , buf , len )"		1020501	1					
ANR	1021124	Callee	r_search_aes_update		1020501	0					
ANR	1021125	Identifier	r_search_aes_update		1020501	0					
ANR	1021126	ArgumentList	core -> search		1020501	1					
ANR	1021127	Argument	core -> search		1020501	0					
ANR	1021128	PtrMemberAccess	core -> search		1020501	0					
ANR	1021129	Identifier	core		1020501	0					
ANR	1021130	Identifier	search		1020501	1					
ANR	1021131	Argument	at		1020501	1					
ANR	1021132	Identifier	at		1020501	0					
ANR	1021133	Argument	buf		1020501	2					
ANR	1021134	Identifier	buf		1020501	0					
ANR	1021135	Argument	len		1020501	3					
ANR	1021136	Identifier	len		1020501	0					
ANR	1021137	ElseStatement	else		1020501	0					
ANR	1021138	IfStatement	if ( param -> rsa_search )		1020501	0					
ANR	1021139	Condition	param -> rsa_search	2452:16:72188:72204	1020501	0	True				
ANR	1021140	PtrMemberAccess	param -> rsa_search		1020501	0					
ANR	1021141	Identifier	param		1020501	0					
ANR	1021142	Identifier	rsa_search		1020501	1					
ANR	1021143	CompoundStatement		97:35:2919:2919	1020501	1					
ANR	1021144	ExpressionStatement	"delta = r_search_rsa_update ( core -> search , at , buf , len )"	2453:6:72215:72271	1020501	0	True				
ANR	1021145	AssignmentExpression	"delta = r_search_rsa_update ( core -> search , at , buf , len )"		1020501	0		=			
ANR	1021146	Identifier	delta		1020501	0					
ANR	1021147	CallExpression	"r_search_rsa_update ( core -> search , at , buf , len )"		1020501	1					
ANR	1021148	Callee	r_search_rsa_update		1020501	0					
ANR	1021149	Identifier	r_search_rsa_update		1020501	0					
ANR	1021150	ArgumentList	core -> search		1020501	1					
ANR	1021151	Argument	core -> search		1020501	0					
ANR	1021152	PtrMemberAccess	core -> search		1020501	0					
ANR	1021153	Identifier	core		1020501	0					
ANR	1021154	Identifier	search		1020501	1					
ANR	1021155	Argument	at		1020501	1					
ANR	1021156	Identifier	at		1020501	0					
ANR	1021157	Argument	buf		1020501	2					
ANR	1021158	Identifier	buf		1020501	0					
ANR	1021159	Argument	len		1020501	3					
ANR	1021160	Identifier	len		1020501	0					
ANR	1021161	IfStatement	if ( delta != - 1 )		1020501	2					
ANR	1021162	Condition	delta != - 1	2455:9:72289:72299	1020501	0	True				
ANR	1021163	EqualityExpression	delta != - 1		1020501	0		!=			
ANR	1021164	Identifier	delta		1020501	0					
ANR	1021165	UnaryOperationExpression	- 1		1020501	1					
ANR	1021166	UnaryOperator	-		1020501	0					
ANR	1021167	PrimaryExpression	1		1020501	1					
ANR	1021168	CompoundStatement		101:6:3022:3081	1020501	1					
ANR	1021169	IdentifierDeclStatement	"int t = r_search_hit_new ( core -> search , & aeskw , at + delta ) ;"	2456:6:72310:72369	1020501	0	True				
ANR	1021170	IdentifierDecl	"t = r_search_hit_new ( core -> search , & aeskw , at + delta )"		1020501	0					
ANR	1021171	IdentifierDeclType	int		1020501	0					
ANR	1021172	Identifier	t		1020501	1					
ANR	1021173	AssignmentExpression	"t = r_search_hit_new ( core -> search , & aeskw , at + delta )"		1020501	2		=			
ANR	1021174	Identifier	t		1020501	0					
ANR	1021175	CallExpression	"r_search_hit_new ( core -> search , & aeskw , at + delta )"		1020501	1					
ANR	1021176	Callee	r_search_hit_new		1020501	0					
ANR	1021177	Identifier	r_search_hit_new		1020501	0					
ANR	1021178	ArgumentList	core -> search		1020501	1					
ANR	1021179	Argument	core -> search		1020501	0					
ANR	1021180	PtrMemberAccess	core -> search		1020501	0					
ANR	1021181	Identifier	core		1020501	0					
ANR	1021182	Identifier	search		1020501	1					
ANR	1021183	Argument	& aeskw		1020501	1					
ANR	1021184	UnaryOperationExpression	& aeskw		1020501	0					
ANR	1021185	UnaryOperator	&		1020501	0					
ANR	1021186	Identifier	aeskw		1020501	1					
ANR	1021187	Argument	at + delta		1020501	2					
ANR	1021188	AdditiveExpression	at + delta		1020501	0		+			
ANR	1021189	Identifier	at		1020501	0					
ANR	1021190	Identifier	delta		1020501	1					
ANR	1021191	IfStatement	if ( ! t || t > 1 )		1020501	1					
ANR	1021192	Condition	! t || t > 1	2457:10:72381:72391	1020501	0	True				
ANR	1021193	OrExpression	! t || t > 1		1020501	0		||			
ANR	1021194	UnaryOperationExpression	! t		1020501	0					
ANR	1021195	UnaryOperator	!		1020501	0					
ANR	1021196	Identifier	t		1020501	1					
ANR	1021197	RelationalExpression	t > 1		1020501	1		>			
ANR	1021198	Identifier	t		1020501	0					
ANR	1021199	PrimaryExpression	1		1020501	1					
ANR	1021200	CompoundStatement		102:23:3106:3106	1020501	1					
ANR	1021201	BreakStatement	break ;	2458:7:72403:72408	1020501	0	True				
ANR	1021202	ElseStatement	else		1020501	0					
ANR	1021203	CompoundStatement		106:11:3148:3148	1020501	0					
ANR	1021204	ExpressionStatement	"( void ) r_search_update ( core -> search , at , buf , len )"	2462:5:72443:72493	1020501	0	True				
ANR	1021205	CastExpression	"( void ) r_search_update ( core -> search , at , buf , len )"		1020501	0					
ANR	1021206	CastTarget	void		1020501	0					
ANR	1021207	CallExpression	"r_search_update ( core -> search , at , buf , len )"		1020501	1					
ANR	1021208	Callee	r_search_update		1020501	0					
ANR	1021209	Identifier	r_search_update		1020501	0					
ANR	1021210	ArgumentList	core -> search		1020501	1					
ANR	1021211	Argument	core -> search		1020501	0					
ANR	1021212	PtrMemberAccess	core -> search		1020501	0					
ANR	1021213	Identifier	core		1020501	0					
ANR	1021214	Identifier	search		1020501	1					
ANR	1021215	Argument	at		1020501	1					
ANR	1021216	Identifier	at		1020501	0					
ANR	1021217	Argument	buf		1020501	2					
ANR	1021218	Identifier	buf		1020501	0					
ANR	1021219	Argument	len		1020501	3					
ANR	1021220	Identifier	len		1020501	0					
ANR	1021221	IfStatement	if ( core -> search -> maxhits > 0 && core -> search -> nhits >= core -> search -> maxhits )		1020501	1					
ANR	1021222	Condition	core -> search -> maxhits > 0 && core -> search -> nhits >= core -> search -> maxhits	2463:9:72504:72576	1020501	0	True				
ANR	1021223	AndExpression	core -> search -> maxhits > 0 && core -> search -> nhits >= core -> search -> maxhits		1020501	0		&&			
ANR	1021224	RelationalExpression	core -> search -> maxhits > 0		1020501	0		>			
ANR	1021225	PtrMemberAccess	core -> search -> maxhits		1020501	0					
ANR	1021226	PtrMemberAccess	core -> search		1020501	0					
ANR	1021227	Identifier	core		1020501	0					
ANR	1021228	Identifier	search		1020501	1					
ANR	1021229	Identifier	maxhits		1020501	1					
ANR	1021230	PrimaryExpression	0		1020501	1					
ANR	1021231	RelationalExpression	core -> search -> nhits >= core -> search -> maxhits		1020501	1		>=			
ANR	1021232	PtrMemberAccess	core -> search -> nhits		1020501	0					
ANR	1021233	PtrMemberAccess	core -> search		1020501	0					
ANR	1021234	Identifier	core		1020501	0					
ANR	1021235	Identifier	search		1020501	1					
ANR	1021236	Identifier	nhits		1020501	1					
ANR	1021237	PtrMemberAccess	core -> search -> maxhits		1020501	1					
ANR	1021238	PtrMemberAccess	core -> search		1020501	0					
ANR	1021239	Identifier	core		1020501	0					
ANR	1021240	Identifier	search		1020501	1					
ANR	1021241	Identifier	maxhits		1020501	1					
ANR	1021242	CompoundStatement		108:84:3291:3291	1020501	1					
ANR	1021243	GotoStatement	goto done ;	2464:6:72587:72596	1020501	0	True				
ANR	1021244	Identifier	done		1020501	0					
ANR	1021245	ExpressionStatement	"print_search_progress ( at , to1 , search -> nhits )"	2468:3:72619:72665	1020501	10	True				
ANR	1021246	CallExpression	"print_search_progress ( at , to1 , search -> nhits )"		1020501	0					
ANR	1021247	Callee	print_search_progress		1020501	0					
ANR	1021248	Identifier	print_search_progress		1020501	0					
ANR	1021249	ArgumentList	at		1020501	1					
ANR	1021250	Argument	at		1020501	0					
ANR	1021251	Identifier	at		1020501	0					
ANR	1021252	Argument	to1		1020501	1					
ANR	1021253	Identifier	to1		1020501	0					
ANR	1021254	Argument	search -> nhits		1020501	2					
ANR	1021255	PtrMemberAccess	search -> nhits		1020501	0					
ANR	1021256	Identifier	search		1020501	0					
ANR	1021257	Identifier	nhits		1020501	1					
ANR	1021258	ExpressionStatement	r_cons_clear_line ( 1 )	2469:3:72670:72691	1020501	11	True				
ANR	1021259	CallExpression	r_cons_clear_line ( 1 )		1020501	0					
ANR	1021260	Callee	r_cons_clear_line		1020501	0					
ANR	1021261	Identifier	r_cons_clear_line		1020501	0					
ANR	1021262	ArgumentList	1		1020501	1					
ANR	1021263	Argument	1		1020501	0					
ANR	1021264	PrimaryExpression	1		1020501	0					
ANR	1021265	ExpressionStatement	core -> num -> value = search -> nhits	2470:3:72696:72728	1020501	12	True				
ANR	1021266	AssignmentExpression	core -> num -> value = search -> nhits		1020501	0		=			
ANR	1021267	PtrMemberAccess	core -> num -> value		1020501	0					
ANR	1021268	PtrMemberAccess	core -> num		1020501	0					
ANR	1021269	Identifier	core		1020501	0					
ANR	1021270	Identifier	num		1020501	1					
ANR	1021271	Identifier	value		1020501	1					
ANR	1021272	PtrMemberAccess	search -> nhits		1020501	1					
ANR	1021273	Identifier	search		1020501	0					
ANR	1021274	Identifier	nhits		1020501	1					
ANR	1021275	IfStatement	if ( ! json )		1020501	13					
ANR	1021276	Condition	! json	2471:7:72737:72741	1020501	0	True				
ANR	1021277	UnaryOperationExpression	! json		1020501	0					
ANR	1021278	UnaryOperator	!		1020501	0					
ANR	1021279	Identifier	json		1020501	1					
ANR	1021280	CompoundStatement		116:14:3456:3456	1020501	1					
ANR	1021281	Statement	eprintf	2472:4:72750:72756	1020501	0	True				
ANR	1021282	Statement	(	2472:12:72758:72758	1020501	1	True				
ANR	1021283	Statement	"""hits: %"""	2472:13:72759:72767	1020501	2	True				
ANR	1021284	Statement	PFMT64d	2472:23:72769:72775	1020501	3	True				
ANR	1021285	Statement	"""\\n"""	2472:31:72777:72780	1020501	4	True				
ANR	1021286	Statement	","	2472:35:72781:72781	1020501	5	True				
ANR	1021287	Statement	search	2472:37:72783:72788	1020501	6	True				
ANR	1021288	Statement	->	2472:43:72789:72790	1020501	7	True				
ANR	1021289	Statement	nhits	2472:45:72791:72795	1020501	8	True				
ANR	1021290	Statement	-	2472:51:72797:72797	1020501	9	True				
ANR	1021291	Statement	saved_nhits	2472:53:72799:72809	1020501	10	True				
ANR	1021292	Statement	)	2472:64:72810:72810	1020501	11	True				
ANR	1021293	ExpressionStatement		2472:65:72811:72811	1020501	12	True				
ANR	1021294	Label	done :	2475:0:72822:72826	1020501	18	True				
ANR	1021295	Identifier	done		1020501	0					
ANR	1021296	ExpressionStatement	r_cons_break_pop ( )	2476:2:72830:72849	1020501	19	True				
ANR	1021297	CallExpression	r_cons_break_pop ( )		1020501	0					
ANR	1021298	Callee	r_cons_break_pop		1020501	0					
ANR	1021299	Identifier	r_cons_break_pop		1020501	0					
ANR	1021300	ArgumentList			1020501	1					
ANR	1021301	ExpressionStatement	free ( buf )	2477:2:72853:72863	1020501	20	True				
ANR	1021302	CallExpression	free ( buf )		1020501	0					
ANR	1021303	Callee	free		1020501	0					
ANR	1021304	Identifier	free		1020501	0					
ANR	1021305	ArgumentList	buf		1020501	1					
ANR	1021306	Argument	buf		1020501	0					
ANR	1021307	Identifier	buf		1020501	0					
ANR	1021308	ElseStatement	else		1020501	0					
ANR	1021309	CompoundStatement		123:8:3585:3585	1020501	0					
ANR	1021310	ExpressionStatement	"eprintf ( ""No keywords defined\\n"" )"	2479:2:72877:72910	1020501	0	True				
ANR	1021311	CallExpression	"eprintf ( ""No keywords defined\\n"" )"		1020501	0					
ANR	1021312	Callee	eprintf		1020501	0					
ANR	1021313	Identifier	eprintf		1020501	0					
ANR	1021314	ArgumentList	"""No keywords defined\\n"""		1020501	1					
ANR	1021315	Argument	"""No keywords defined\\n"""		1020501	0					
ANR	1021316	PrimaryExpression	"""No keywords defined\\n"""		1020501	0					
ANR	1021317	IfStatement	if ( json )		1020501	10					
ANR	1021318	Condition	json	2482:5:72921:72924	1020501	0	True				
ANR	1021319	Identifier	json		1020501	0					
ANR	1021320	CompoundStatement		127:11:3639:3639	1020501	1					
ANR	1021321	ExpressionStatement	"r_cons_printf ( ""]"" )"	2483:2:72931:72950	1020501	0	True				
ANR	1021322	CallExpression	"r_cons_printf ( ""]"" )"		1020501	0					
ANR	1021323	Callee	r_cons_printf		1020501	0					
ANR	1021324	Identifier	r_cons_printf		1020501	0					
ANR	1021325	ArgumentList	"""]"""		1020501	1					
ANR	1021326	Argument	"""]"""		1020501	0					
ANR	1021327	PrimaryExpression	"""]"""		1020501	0					
ANR	1021328	ReturnType	static void		1020501	1					
ANR	1021329	Identifier	do_string_search		1020501	2					
ANR	1021330	ParameterList	"RCore * core , RInterval search_itv , struct search_parameters * param"		1020501	3					
ANR	1021331	Parameter	RCore * core	2356:29:69219:69229	1020501	0	True				
ANR	1021332	ParameterType	RCore *		1020501	0					
ANR	1021333	Identifier	core		1020501	1					
ANR	1021334	Parameter	RInterval search_itv	2356:42:69232:69251	1020501	1	True				
ANR	1021335	ParameterType	RInterval		1020501	0					
ANR	1021336	Identifier	search_itv		1020501	1					
ANR	1021337	Parameter	struct search_parameters * param	2356:64:69254:69284	1020501	2	True				
ANR	1021338	ParameterType	struct search_parameters *		1020501	0					
ANR	1021339	Identifier	param		1020501	1					
ANR	1021340	CFGEntryNode	ENTRY		1020501		True				
ANR	1021341	CFGExitNode	EXIT		1020501		True				
ANR	1021342	CFGErrorNode	ERROR		1020501		True				
ANR	1021343	Symbol	search -> bckwrds		1020501						
ANR	1021344	Symbol	* map		1020501						
ANR	1021345	Symbol	bytestr		1020501						
ANR	1021346	Symbol	cmdhit		1020501						
ANR	1021347	Symbol	delta		1020501						
ANR	1021348	Symbol	core -> num -> value		1020501						
ANR	1021349	Symbol	core -> search -> kws		1020501						
ANR	1021350	Symbol	core -> search -> inverse		1020501						
ANR	1021351	Symbol	r_itv_overlap		1020501						
ANR	1021352	Symbol	kw -> last		1020501						
ANR	1021353	Symbol	len		1020501						
ANR	1021354	Symbol	from1		1020501						
ANR	1021355	Symbol	to1		1020501						
ANR	1021356	Symbol	r_itv_intersect		1020501						
ANR	1021357	Symbol	from		1020501						
ANR	1021358	Symbol	* core -> num		1020501						
ANR	1021359	Symbol	itv . addr		1020501						
ANR	1021360	Symbol	core -> num		1020501						
ANR	1021361	Symbol	core -> blocksize		1020501						
ANR	1021362	Symbol	r_io_is_valid_offset		1020501						
ANR	1021363	Symbol	NULL		1020501						
ANR	1021364	Symbol	iter		1020501						
ANR	1021365	Symbol	r_search_hit_new		1020501						
ANR	1021366	Symbol	* core -> search		1020501						
ANR	1021367	Symbol	itv		1020501						
ANR	1021368	Symbol	it		1020501						
ANR	1021369	Symbol	* param		1020501						
ANR	1021370	Symbol	search -> nhits		1020501						
ANR	1021371	Symbol	param -> rsa_search		1020501						
ANR	1021372	Symbol	core		1020501						
ANR	1021373	Symbol	core -> search -> maxhits		1020501						
ANR	1021374	Symbol	* kw		1020501						
ANR	1021375	Symbol	at		1020501						
ANR	1021376	Symbol	kw -> keyword_length		1020501						
ANR	1021377	Symbol	search_itv		1020501						
ANR	1021378	Symbol	r_search_rsa_update		1020501						
ANR	1021379	Symbol	aeskw . keyword_length		1020501						
ANR	1021380	Symbol	param -> inverse		1020501						
ANR	1021381	Symbol	map -> itv		1020501						
ANR	1021382	Symbol	r_sandbox_enable		1020501						
ANR	1021383	Symbol	r_search_aes_update		1020501						
ANR	1021384	Symbol	* core		1020501						
ANR	1021385	Symbol	r_config_get		1020501						
ANR	1021386	Symbol	saved_nhits		1020501						
ANR	1021387	Symbol	& aeskw		1020501						
ANR	1021388	Symbol	r_list_first		1020501						
ANR	1021389	Symbol	search		1020501						
ANR	1021390	Symbol	r_cons_is_breaked		1020501						
ANR	1021391	Symbol	core -> io		1020501						
ANR	1021392	Symbol	param		1020501						
ANR	1021393	Symbol	json		1020501						
ANR	1021394	Symbol	core -> search		1020501						
ANR	1021395	Symbol	map		1020501						
ANR	1021396	Symbol	* * core		1020501						
ANR	1021397	Symbol	core -> config		1020501						
ANR	1021398	Symbol	malloc		1020501						
ANR	1021399	Symbol	itv . size		1020501						
ANR	1021400	Symbol	core -> search -> nhits		1020501						
ANR	1021401	Symbol	searchflags		1020501						
ANR	1021402	Symbol	& _cb_hit		1020501						
ANR	1021403	Symbol	R_MIN		1020501						
ANR	1021404	Symbol	param -> crypto_search		1020501						
ANR	1021405	Symbol	kw		1020501						
ANR	1021406	Symbol	core -> search -> bckwrds		1020501						
ANR	1021407	Symbol	* search		1020501						
ANR	1021408	Symbol	r_itv_end		1020501						
ANR	1021409	Symbol	buf		1020501						
ANR	1021410	Symbol	lenstr		1020501						
ANR	1021411	Symbol	t		1020501						
ANR	1021412	Symbol	core -> search -> n_kws		1020501						
ANR	1021413	Symbol	to		1020501						
ANR	1021414	Symbol	aeskw		1020501						
ANR	1021415	Symbol	param -> aes_search		1020501						
ANR	1021416	Function	rop_kuery	2487:0:72958:75254							
ANR	1021417	FunctionDef	"rop_kuery (void * data , const char * input)"		1021416	0					
ANR	1021418	CompoundStatement		2487:53:73011:75254	1021416	0					
ANR	1021419	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	2488:1:73014:73042	1021416	0	True				
ANR	1021420	IdentifierDecl	* core = ( RCore * ) data		1021416	0					
ANR	1021421	IdentifierDeclType	RCore *		1021416	0					
ANR	1021422	Identifier	core		1021416	1					
ANR	1021423	AssignmentExpression	* core = ( RCore * ) data		1021416	2		=			
ANR	1021424	Identifier	core		1021416	0					
ANR	1021425	CastExpression	( RCore * ) data		1021416	1					
ANR	1021426	CastTarget	RCore *		1021416	0					
ANR	1021427	Identifier	data		1021416	1					
ANR	1021428	IdentifierDeclStatement	"Sdb * db_rop = sdb_ns ( core -> sdb , ""rop"" , false ) ;"	2489:1:73045:73091	1021416	1	True				
ANR	1021429	IdentifierDecl	"* db_rop = sdb_ns ( core -> sdb , ""rop"" , false )"		1021416	0					
ANR	1021430	IdentifierDeclType	Sdb *		1021416	0					
ANR	1021431	Identifier	db_rop		1021416	1					
ANR	1021432	AssignmentExpression	"* db_rop = sdb_ns ( core -> sdb , ""rop"" , false )"		1021416	2		=			
ANR	1021433	Identifier	db_rop		1021416	0					
ANR	1021434	CallExpression	"sdb_ns ( core -> sdb , ""rop"" , false )"		1021416	1					
ANR	1021435	Callee	sdb_ns		1021416	0					
ANR	1021436	Identifier	sdb_ns		1021416	0					
ANR	1021437	ArgumentList	core -> sdb		1021416	1					
ANR	1021438	Argument	core -> sdb		1021416	0					
ANR	1021439	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021440	Identifier	core		1021416	0					
ANR	1021441	Identifier	sdb		1021416	1					
ANR	1021442	Argument	"""rop"""		1021416	1					
ANR	1021443	PrimaryExpression	"""rop"""		1021416	0					
ANR	1021444	Argument	false		1021416	2					
ANR	1021445	Identifier	false		1021416	0					
ANR	1021446	IdentifierDeclStatement	bool json_first = true ;	2490:1:73094:73116	1021416	2	True				
ANR	1021447	IdentifierDecl	json_first = true		1021416	0					
ANR	1021448	IdentifierDeclType	bool		1021416	0					
ANR	1021449	Identifier	json_first		1021416	1					
ANR	1021450	AssignmentExpression	json_first = true		1021416	2		=			
ANR	1021451	Identifier	true		1021416	0					
ANR	1021452	Identifier	true		1021416	1					
ANR	1021453	IdentifierDeclStatement	"SdbListIter * sdb_iter , * it ;"	2491:1:73119:73145	1021416	3	True				
ANR	1021454	IdentifierDecl	* sdb_iter		1021416	0					
ANR	1021455	IdentifierDeclType	SdbListIter *		1021416	0					
ANR	1021456	Identifier	sdb_iter		1021416	1					
ANR	1021457	IdentifierDecl	* it		1021416	1					
ANR	1021458	IdentifierDeclType	SdbListIter *		1021416	0					
ANR	1021459	Identifier	it		1021416	1					
ANR	1021460	IdentifierDeclStatement	SdbList * sdb_list ;	2492:1:73148:73165	1021416	4	True				
ANR	1021461	IdentifierDecl	* sdb_list		1021416	0					
ANR	1021462	IdentifierDeclType	SdbList *		1021416	0					
ANR	1021463	Identifier	sdb_list		1021416	1					
ANR	1021464	IdentifierDeclStatement	SdbNs * ns ;	2493:1:73168:73177	1021416	5	True				
ANR	1021465	IdentifierDecl	* ns		1021416	0					
ANR	1021466	IdentifierDeclType	SdbNs *		1021416	0					
ANR	1021467	Identifier	ns		1021416	1					
ANR	1021468	IdentifierDeclStatement	SdbKv * kv ;	2494:1:73180:73189	1021416	6	True				
ANR	1021469	IdentifierDecl	* kv		1021416	0					
ANR	1021470	IdentifierDeclType	SdbKv *		1021416	0					
ANR	1021471	Identifier	kv		1021416	1					
ANR	1021472	IdentifierDeclStatement	char * out ;	2495:1:73192:73201	1021416	7	True				
ANR	1021473	IdentifierDecl	* out		1021416	0					
ANR	1021474	IdentifierDeclType	char *		1021416	0					
ANR	1021475	Identifier	out		1021416	1					
ANR	1021476	IfStatement	if ( ! db_rop )		1021416	8					
ANR	1021477	Condition	! db_rop	2497:5:73209:73215	1021416	0	True				
ANR	1021478	UnaryOperationExpression	! db_rop		1021416	0					
ANR	1021479	UnaryOperator	!		1021416	0					
ANR	1021480	Identifier	db_rop		1021416	1					
ANR	1021481	CompoundStatement		11:14:206:206	1021416	1					
ANR	1021482	ExpressionStatement	"eprintf ( ""Error: could not find SDB 'rop' namespace\\n"" )"	2498:2:73222:73277	1021416	0	True				
ANR	1021483	CallExpression	"eprintf ( ""Error: could not find SDB 'rop' namespace\\n"" )"		1021416	0					
ANR	1021484	Callee	eprintf		1021416	0					
ANR	1021485	Identifier	eprintf		1021416	0					
ANR	1021486	ArgumentList	"""Error: could not find SDB 'rop' namespace\\n"""		1021416	1					
ANR	1021487	Argument	"""Error: could not find SDB 'rop' namespace\\n"""		1021416	0					
ANR	1021488	PrimaryExpression	"""Error: could not find SDB 'rop' namespace\\n"""		1021416	0					
ANR	1021489	ReturnStatement	return ;	2499:2:73281:73287	1021416	1	True				
ANR	1021490	SwitchStatement	switch ( * input )		1021416	9					
ANR	1021491	Condition	* input	2502:9:73302:73307	1021416	0	True				
ANR	1021492	UnaryOperationExpression	* input		1021416	0					
ANR	1021493	UnaryOperator	*		1021416	0					
ANR	1021494	Identifier	input		1021416	1					
ANR	1021495	CompoundStatement		16:17:298:298	1021416	1					
ANR	1021496	Label	case 'q' :	2503:1:73313:73321	1021416	0	True				
ANR	1021497	Statement	ls_foreach	2504:2:73325:73334	1021416	1	True				
ANR	1021498	Statement	(	2504:13:73336:73336	1021416	2	True				
ANR	1021499	Statement	db_rop	2504:14:73337:73342	1021416	3	True				
ANR	1021500	Statement	->	2504:20:73343:73344	1021416	4	True				
ANR	1021501	Statement	ns	2504:22:73345:73346	1021416	5	True				
ANR	1021502	Statement	","	2504:24:73347:73347	1021416	6	True				
ANR	1021503	Statement	it	2504:26:73349:73350	1021416	7	True				
ANR	1021504	Statement	","	2504:28:73351:73351	1021416	8	True				
ANR	1021505	Statement	ns	2504:30:73353:73354	1021416	9	True				
ANR	1021506	Statement	)	2504:32:73355:73355	1021416	10	True				
ANR	1021507	CompoundStatement		18:34:345:345	1021416	11					
ANR	1021508	ExpressionStatement	"sdb_list = sdb_foreach_list ( ns -> sdb , false )"	2505:3:73362:73406	1021416	0	True				
ANR	1021509	AssignmentExpression	"sdb_list = sdb_foreach_list ( ns -> sdb , false )"		1021416	0		=			
ANR	1021510	Identifier	sdb_list		1021416	0					
ANR	1021511	CallExpression	"sdb_foreach_list ( ns -> sdb , false )"		1021416	1					
ANR	1021512	Callee	sdb_foreach_list		1021416	0					
ANR	1021513	Identifier	sdb_foreach_list		1021416	0					
ANR	1021514	ArgumentList	ns -> sdb		1021416	1					
ANR	1021515	Argument	ns -> sdb		1021416	0					
ANR	1021516	PtrMemberAccess	ns -> sdb		1021416	0					
ANR	1021517	Identifier	ns		1021416	0					
ANR	1021518	Identifier	sdb		1021416	1					
ANR	1021519	Argument	false		1021416	1					
ANR	1021520	Identifier	false		1021416	0					
ANR	1021521	Statement	ls_foreach	2506:3:73411:73420	1021416	1	True				
ANR	1021522	Statement	(	2506:14:73422:73422	1021416	2	True				
ANR	1021523	Statement	sdb_list	2506:15:73423:73430	1021416	3	True				
ANR	1021524	Statement	","	2506:23:73431:73431	1021416	4	True				
ANR	1021525	Statement	sdb_iter	2506:25:73433:73440	1021416	5	True				
ANR	1021526	Statement	","	2506:33:73441:73441	1021416	6	True				
ANR	1021527	Statement	kv	2506:35:73443:73444	1021416	7	True				
ANR	1021528	Statement	)	2506:37:73445:73445	1021416	8	True				
ANR	1021529	CompoundStatement		20:39:435:435	1021416	9					
ANR	1021530	ExpressionStatement	"r_cons_printf ( ""%s "" , sdbkv_key ( kv ) )"	2507:4:73453:73490	1021416	0	True				
ANR	1021531	CallExpression	"r_cons_printf ( ""%s "" , sdbkv_key ( kv ) )"		1021416	0					
ANR	1021532	Callee	r_cons_printf		1021416	0					
ANR	1021533	Identifier	r_cons_printf		1021416	0					
ANR	1021534	ArgumentList	"""%s """		1021416	1					
ANR	1021535	Argument	"""%s """		1021416	0					
ANR	1021536	PrimaryExpression	"""%s """		1021416	0					
ANR	1021537	Argument	sdbkv_key ( kv )		1021416	1					
ANR	1021538	CallExpression	sdbkv_key ( kv )		1021416	0					
ANR	1021539	Callee	sdbkv_key		1021416	0					
ANR	1021540	Identifier	sdbkv_key		1021416	0					
ANR	1021541	ArgumentList	kv		1021416	1					
ANR	1021542	Argument	kv		1021416	0					
ANR	1021543	Identifier	kv		1021416	0					
ANR	1021544	BreakStatement	break ;	2510:2:73503:73508	1021416	12	True				
ANR	1021545	Label	case 'j' :	2511:1:73511:73519	1021416	13	True				
ANR	1021546	ExpressionStatement	"r_cons_print ( ""{\\""gadgets\\"":["" )"	2512:2:73523:73554	1021416	14	True				
ANR	1021547	CallExpression	"r_cons_print ( ""{\\""gadgets\\"":["" )"		1021416	0					
ANR	1021548	Callee	r_cons_print		1021416	0					
ANR	1021549	Identifier	r_cons_print		1021416	0					
ANR	1021550	ArgumentList	"""{\\""gadgets\\"":["""		1021416	1					
ANR	1021551	Argument	"""{\\""gadgets\\"":["""		1021416	0					
ANR	1021552	PrimaryExpression	"""{\\""gadgets\\"":["""		1021416	0					
ANR	1021553	Statement	ls_foreach	2513:2:73558:73567	1021416	15	True				
ANR	1021554	Statement	(	2513:13:73569:73569	1021416	16	True				
ANR	1021555	Statement	db_rop	2513:14:73570:73575	1021416	17	True				
ANR	1021556	Statement	->	2513:20:73576:73577	1021416	18	True				
ANR	1021557	Statement	ns	2513:22:73578:73579	1021416	19	True				
ANR	1021558	Statement	","	2513:24:73580:73580	1021416	20	True				
ANR	1021559	Statement	it	2513:26:73582:73583	1021416	21	True				
ANR	1021560	Statement	","	2513:28:73584:73584	1021416	22	True				
ANR	1021561	Statement	ns	2513:30:73586:73587	1021416	23	True				
ANR	1021562	Statement	)	2513:32:73588:73588	1021416	24	True				
ANR	1021563	CompoundStatement		27:34:578:578	1021416	25					
ANR	1021564	ExpressionStatement	"sdb_list = sdb_foreach_list ( ns -> sdb , false )"	2514:3:73595:73639	1021416	0	True				
ANR	1021565	AssignmentExpression	"sdb_list = sdb_foreach_list ( ns -> sdb , false )"		1021416	0		=			
ANR	1021566	Identifier	sdb_list		1021416	0					
ANR	1021567	CallExpression	"sdb_foreach_list ( ns -> sdb , false )"		1021416	1					
ANR	1021568	Callee	sdb_foreach_list		1021416	0					
ANR	1021569	Identifier	sdb_foreach_list		1021416	0					
ANR	1021570	ArgumentList	ns -> sdb		1021416	1					
ANR	1021571	Argument	ns -> sdb		1021416	0					
ANR	1021572	PtrMemberAccess	ns -> sdb		1021416	0					
ANR	1021573	Identifier	ns		1021416	0					
ANR	1021574	Identifier	sdb		1021416	1					
ANR	1021575	Argument	false		1021416	1					
ANR	1021576	Identifier	false		1021416	0					
ANR	1021577	Statement	ls_foreach	2515:3:73644:73653	1021416	1	True				
ANR	1021578	Statement	(	2515:14:73655:73655	1021416	2	True				
ANR	1021579	Statement	sdb_list	2515:15:73656:73663	1021416	3	True				
ANR	1021580	Statement	","	2515:23:73664:73664	1021416	4	True				
ANR	1021581	Statement	sdb_iter	2515:25:73666:73673	1021416	5	True				
ANR	1021582	Statement	","	2515:33:73674:73674	1021416	6	True				
ANR	1021583	Statement	kv	2515:35:73676:73677	1021416	7	True				
ANR	1021584	Statement	)	2515:37:73678:73678	1021416	8	True				
ANR	1021585	CompoundStatement		33:4:809:840	1021416	9					
ANR	1021586	IdentifierDeclStatement	char * dup = strdup ( sdbkv_value ( kv ) ) ;	2516:4:73686:73723	1021416	0	True				
ANR	1021587	IdentifierDecl	* dup = strdup ( sdbkv_value ( kv ) )		1021416	0					
ANR	1021588	IdentifierDeclType	char *		1021416	0					
ANR	1021589	Identifier	dup		1021416	1					
ANR	1021590	AssignmentExpression	* dup = strdup ( sdbkv_value ( kv ) )		1021416	2		=			
ANR	1021591	Identifier	dup		1021416	0					
ANR	1021592	CallExpression	strdup ( sdbkv_value ( kv ) )		1021416	1					
ANR	1021593	Callee	strdup		1021416	0					
ANR	1021594	Identifier	strdup		1021416	0					
ANR	1021595	ArgumentList	sdbkv_value ( kv )		1021416	1					
ANR	1021596	Argument	sdbkv_value ( kv )		1021416	0					
ANR	1021597	CallExpression	sdbkv_value ( kv )		1021416	0					
ANR	1021598	Callee	sdbkv_value		1021416	0					
ANR	1021599	Identifier	sdbkv_value		1021416	0					
ANR	1021600	ArgumentList	kv		1021416	1					
ANR	1021601	Argument	kv		1021416	0					
ANR	1021602	Identifier	kv		1021416	0					
ANR	1021603	IdentifierDeclStatement	bool flag = false ;	2517:4:73729:73746	1021416	1	True				
ANR	1021604	IdentifierDecl	flag = false		1021416	0					
ANR	1021605	IdentifierDeclType	bool		1021416	0					
ANR	1021606	Identifier	flag		1021416	1					
ANR	1021607	AssignmentExpression	flag = false		1021416	2		=			
ANR	1021608	Identifier	false		1021416	0					
ANR	1021609	Identifier	false		1021416	1					
ANR	1021610	IdentifierDeclStatement	"char * size = strtok ( dup , "" "" ) ;"	2518:4:73785:73815	1021416	2	True				
ANR	1021611	IdentifierDecl	"* size = strtok ( dup , "" "" )"		1021416	0					
ANR	1021612	IdentifierDeclType	char *		1021416	0					
ANR	1021613	Identifier	size		1021416	1					
ANR	1021614	AssignmentExpression	"* size = strtok ( dup , "" "" )"		1021416	2		=			
ANR	1021615	Identifier	size		1021416	0					
ANR	1021616	CallExpression	"strtok ( dup , "" "" )"		1021416	1					
ANR	1021617	Callee	strtok		1021416	0					
ANR	1021618	Identifier	strtok		1021416	0					
ANR	1021619	ArgumentList	dup		1021416	1					
ANR	1021620	Argument	dup		1021416	0					
ANR	1021621	Identifier	dup		1021416	0					
ANR	1021622	Argument	""" """		1021416	1					
ANR	1021623	PrimaryExpression	""" """		1021416	0					
ANR	1021624	IdentifierDeclStatement	"char * tok = strtok ( NULL , ""{}"" ) ;"	2519:4:73821:73852	1021416	3	True				
ANR	1021625	IdentifierDecl	"* tok = strtok ( NULL , ""{}"" )"		1021416	0					
ANR	1021626	IdentifierDeclType	char *		1021416	0					
ANR	1021627	Identifier	tok		1021416	1					
ANR	1021628	AssignmentExpression	"* tok = strtok ( NULL , ""{}"" )"		1021416	2		=			
ANR	1021629	Identifier	tok		1021416	0					
ANR	1021630	CallExpression	"strtok ( NULL , ""{}"" )"		1021416	1					
ANR	1021631	Callee	strtok		1021416	0					
ANR	1021632	Identifier	strtok		1021416	0					
ANR	1021633	ArgumentList	NULL		1021416	1					
ANR	1021634	Argument	NULL		1021416	0					
ANR	1021635	Identifier	NULL		1021416	0					
ANR	1021636	Argument	"""{}"""		1021416	1					
ANR	1021637	PrimaryExpression	"""{}"""		1021416	0					
ANR	1021638	IfStatement	if ( ! tok )		1021416	4					
ANR	1021639	Condition	! tok	2520:8:73862:73865	1021416	0	True				
ANR	1021640	UnaryOperationExpression	! tok		1021416	0					
ANR	1021641	UnaryOperator	!		1021416	0					
ANR	1021642	Identifier	tok		1021416	1					
ANR	1021643	CompoundStatement		34:14:856:856	1021416	1					
ANR	1021644	ExpressionStatement	"tok = strdup ( ""NOP"" )"	2521:5:73875:73895	1021416	0	True				
ANR	1021645	AssignmentExpression	"tok = strdup ( ""NOP"" )"		1021416	0		=			
ANR	1021646	Identifier	tok		1021416	0					
ANR	1021647	CallExpression	"strdup ( ""NOP"" )"		1021416	1					
ANR	1021648	Callee	strdup		1021416	0					
ANR	1021649	Identifier	strdup		1021416	0					
ANR	1021650	ArgumentList	"""NOP"""		1021416	1					
ANR	1021651	Argument	"""NOP"""		1021416	0					
ANR	1021652	PrimaryExpression	"""NOP"""		1021416	0					
ANR	1021653	ExpressionStatement	flag = true	2522:5:73902:73913	1021416	1	True				
ANR	1021654	AssignmentExpression	flag = true		1021416	0		=			
ANR	1021655	Identifier	flag		1021416	0					
ANR	1021656	Identifier	true		1021416	1					
ANR	1021657	IfStatement	if ( json_first )		1021416	5					
ANR	1021658	Condition	json_first	2524:8:73929:73938	1021416	0	True				
ANR	1021659	Identifier	json_first		1021416	0					
ANR	1021660	CompoundStatement		38:20:929:929	1021416	1					
ANR	1021661	ExpressionStatement	json_first = false	2525:5:73948:73966	1021416	0	True				
ANR	1021662	AssignmentExpression	json_first = false		1021416	0		=			
ANR	1021663	Identifier	json_first		1021416	0					
ANR	1021664	Identifier	false		1021416	1					
ANR	1021665	ElseStatement	else		1021416	0					
ANR	1021666	CompoundStatement		40:11:967:967	1021416	0					
ANR	1021667	ExpressionStatement	"r_cons_print ( "","" )"	2527:5:73986:74004	1021416	0	True				
ANR	1021668	CallExpression	"r_cons_print ( "","" )"		1021416	0					
ANR	1021669	Callee	r_cons_print		1021416	0					
ANR	1021670	Identifier	r_cons_print		1021416	0					
ANR	1021671	ArgumentList	""","""		1021416	1					
ANR	1021672	Argument	""","""		1021416	0					
ANR	1021673	PrimaryExpression	""","""		1021416	0					
ANR	1021674	ExpressionStatement	"r_cons_printf ( ""{\\""address\\"":%s, \\""size\\"":%s, \\""type\\"":\\""%s\\"", \\""effect\\"":\\""%s\\""}"" , sdbkv_key ( kv ) , size , ns -> name , tok )"	2529:4:74016:74141	1021416	6	True				
ANR	1021675	CallExpression	"r_cons_printf ( ""{\\""address\\"":%s, \\""size\\"":%s, \\""type\\"":\\""%s\\"", \\""effect\\"":\\""%s\\""}"" , sdbkv_key ( kv ) , size , ns -> name , tok )"		1021416	0					
ANR	1021676	Callee	r_cons_printf		1021416	0					
ANR	1021677	Identifier	r_cons_printf		1021416	0					
ANR	1021678	ArgumentList	"""{\\""address\\"":%s, \\""size\\"":%s, \\""type\\"":\\""%s\\"", \\""effect\\"":\\""%s\\""}"""		1021416	1					
ANR	1021679	Argument	"""{\\""address\\"":%s, \\""size\\"":%s, \\""type\\"":\\""%s\\"", \\""effect\\"":\\""%s\\""}"""		1021416	0					
ANR	1021680	PrimaryExpression	"""{\\""address\\"":%s, \\""size\\"":%s, \\""type\\"":\\""%s\\"", \\""effect\\"":\\""%s\\""}"""		1021416	0					
ANR	1021681	Argument	sdbkv_key ( kv )		1021416	1					
ANR	1021682	CallExpression	sdbkv_key ( kv )		1021416	0					
ANR	1021683	Callee	sdbkv_key		1021416	0					
ANR	1021684	Identifier	sdbkv_key		1021416	0					
ANR	1021685	ArgumentList	kv		1021416	1					
ANR	1021686	Argument	kv		1021416	0					
ANR	1021687	Identifier	kv		1021416	0					
ANR	1021688	Argument	size		1021416	2					
ANR	1021689	Identifier	size		1021416	0					
ANR	1021690	Argument	ns -> name		1021416	3					
ANR	1021691	PtrMemberAccess	ns -> name		1021416	0					
ANR	1021692	Identifier	ns		1021416	0					
ANR	1021693	Identifier	name		1021416	1					
ANR	1021694	Argument	tok		1021416	4					
ANR	1021695	Identifier	tok		1021416	0					
ANR	1021696	ExpressionStatement	free ( dup )	2531:4:74147:74157	1021416	7	True				
ANR	1021697	CallExpression	free ( dup )		1021416	0					
ANR	1021698	Callee	free		1021416	0					
ANR	1021699	Identifier	free		1021416	0					
ANR	1021700	ArgumentList	dup		1021416	1					
ANR	1021701	Argument	dup		1021416	0					
ANR	1021702	Identifier	dup		1021416	0					
ANR	1021703	IfStatement	if ( flag )		1021416	8					
ANR	1021704	Condition	flag	2532:8:74167:74170	1021416	0	True				
ANR	1021705	Identifier	flag		1021416	0					
ANR	1021706	CompoundStatement		46:14:1161:1161	1021416	1					
ANR	1021707	ExpressionStatement	free ( tok )	2533:5:74180:74190	1021416	0	True				
ANR	1021708	CallExpression	free ( tok )		1021416	0					
ANR	1021709	Callee	free		1021416	0					
ANR	1021710	Identifier	free		1021416	0					
ANR	1021711	ArgumentList	tok		1021416	1					
ANR	1021712	Argument	tok		1021416	0					
ANR	1021713	Identifier	tok		1021416	0					
ANR	1021714	ExpressionStatement	"r_cons_printf ( ""]}\\n"" )"	2537:2:74209:74231	1021416	26	True				
ANR	1021715	CallExpression	"r_cons_printf ( ""]}\\n"" )"		1021416	0					
ANR	1021716	Callee	r_cons_printf		1021416	0					
ANR	1021717	Identifier	r_cons_printf		1021416	0					
ANR	1021718	ArgumentList	"""]}\\n"""		1021416	1					
ANR	1021719	Argument	"""]}\\n"""		1021416	0					
ANR	1021720	PrimaryExpression	"""]}\\n"""		1021416	0					
ANR	1021721	BreakStatement	break ;	2538:2:74235:74240	1021416	27	True				
ANR	1021722	Label	case ' ' :	2539:1:74243:74251	1021416	28	True				
ANR	1021723	IfStatement	"if ( ! strcmp ( input + 1 , ""nop"" ) )"		1021416	29					
ANR	1021724	Condition	"! strcmp ( input + 1 , ""nop"" )"	2540:6:74259:74284	1021416	0	True				
ANR	1021725	UnaryOperationExpression	"! strcmp ( input + 1 , ""nop"" )"		1021416	0					
ANR	1021726	UnaryOperator	!		1021416	0					
ANR	1021727	CallExpression	"strcmp ( input + 1 , ""nop"" )"		1021416	1					
ANR	1021728	Callee	strcmp		1021416	0					
ANR	1021729	Identifier	strcmp		1021416	0					
ANR	1021730	ArgumentList	input + 1		1021416	1					
ANR	1021731	Argument	input + 1		1021416	0					
ANR	1021732	AdditiveExpression	input + 1		1021416	0		+			
ANR	1021733	Identifier	input		1021416	0					
ANR	1021734	PrimaryExpression	1		1021416	1					
ANR	1021735	Argument	"""nop"""		1021416	1					
ANR	1021736	PrimaryExpression	"""nop"""		1021416	0					
ANR	1021737	CompoundStatement		54:34:1275:1275	1021416	1					
ANR	1021738	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/nop/*"" )"	2541:3:74292:74342	1021416	0	True				
ANR	1021739	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/nop/*"" )"		1021416	0		=			
ANR	1021740	Identifier	out		1021416	0					
ANR	1021741	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ""rop/nop/*"" )"		1021416	1					
ANR	1021742	Callee	sdb_querys		1021416	0					
ANR	1021743	Identifier	sdb_querys		1021416	0					
ANR	1021744	ArgumentList	core -> sdb		1021416	1					
ANR	1021745	Argument	core -> sdb		1021416	0					
ANR	1021746	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021747	Identifier	core		1021416	0					
ANR	1021748	Identifier	sdb		1021416	1					
ANR	1021749	Argument	NULL		1021416	1					
ANR	1021750	Identifier	NULL		1021416	0					
ANR	1021751	Argument	0		1021416	2					
ANR	1021752	PrimaryExpression	0		1021416	0					
ANR	1021753	Argument	"""rop/nop/*"""		1021416	3					
ANR	1021754	PrimaryExpression	"""rop/nop/*"""		1021416	0					
ANR	1021755	IfStatement	if ( out )		1021416	1					
ANR	1021756	Condition	out	2542:7:74351:74353	1021416	0	True				
ANR	1021757	Identifier	out		1021416	0					
ANR	1021758	CompoundStatement		56:12:1344:1344	1021416	1					
ANR	1021759	ExpressionStatement	r_cons_println ( out )	2543:4:74362:74382	1021416	0	True				
ANR	1021760	CallExpression	r_cons_println ( out )		1021416	0					
ANR	1021761	Callee	r_cons_println		1021416	0					
ANR	1021762	Identifier	r_cons_println		1021416	0					
ANR	1021763	ArgumentList	out		1021416	1					
ANR	1021764	Argument	out		1021416	0					
ANR	1021765	Identifier	out		1021416	0					
ANR	1021766	ExpressionStatement	free ( out )	2544:4:74388:74398	1021416	1	True				
ANR	1021767	CallExpression	free ( out )		1021416	0					
ANR	1021768	Callee	free		1021416	0					
ANR	1021769	Identifier	free		1021416	0					
ANR	1021770	ArgumentList	out		1021416	1					
ANR	1021771	Argument	out		1021416	0					
ANR	1021772	Identifier	out		1021416	0					
ANR	1021773	ElseStatement	else		1021416	0					
ANR	1021774	IfStatement	"if ( ! strcmp ( input + 1 , ""mov"" ) )"		1021416	0					
ANR	1021775	Condition	"! strcmp ( input + 1 , ""mov"" )"	2546:13:74418:74443	1021416	0	True				
ANR	1021776	UnaryOperationExpression	"! strcmp ( input + 1 , ""mov"" )"		1021416	0					
ANR	1021777	UnaryOperator	!		1021416	0					
ANR	1021778	CallExpression	"strcmp ( input + 1 , ""mov"" )"		1021416	1					
ANR	1021779	Callee	strcmp		1021416	0					
ANR	1021780	Identifier	strcmp		1021416	0					
ANR	1021781	ArgumentList	input + 1		1021416	1					
ANR	1021782	Argument	input + 1		1021416	0					
ANR	1021783	AdditiveExpression	input + 1		1021416	0		+			
ANR	1021784	Identifier	input		1021416	0					
ANR	1021785	PrimaryExpression	1		1021416	1					
ANR	1021786	Argument	"""mov"""		1021416	1					
ANR	1021787	PrimaryExpression	"""mov"""		1021416	0					
ANR	1021788	CompoundStatement		60:41:1434:1434	1021416	1					
ANR	1021789	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/mov/*"" )"	2547:3:74451:74501	1021416	0	True				
ANR	1021790	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/mov/*"" )"		1021416	0		=			
ANR	1021791	Identifier	out		1021416	0					
ANR	1021792	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ""rop/mov/*"" )"		1021416	1					
ANR	1021793	Callee	sdb_querys		1021416	0					
ANR	1021794	Identifier	sdb_querys		1021416	0					
ANR	1021795	ArgumentList	core -> sdb		1021416	1					
ANR	1021796	Argument	core -> sdb		1021416	0					
ANR	1021797	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021798	Identifier	core		1021416	0					
ANR	1021799	Identifier	sdb		1021416	1					
ANR	1021800	Argument	NULL		1021416	1					
ANR	1021801	Identifier	NULL		1021416	0					
ANR	1021802	Argument	0		1021416	2					
ANR	1021803	PrimaryExpression	0		1021416	0					
ANR	1021804	Argument	"""rop/mov/*"""		1021416	3					
ANR	1021805	PrimaryExpression	"""rop/mov/*"""		1021416	0					
ANR	1021806	IfStatement	if ( out )		1021416	1					
ANR	1021807	Condition	out	2548:7:74510:74512	1021416	0	True				
ANR	1021808	Identifier	out		1021416	0					
ANR	1021809	CompoundStatement		62:12:1503:1503	1021416	1					
ANR	1021810	ExpressionStatement	r_cons_println ( out )	2549:4:74521:74541	1021416	0	True				
ANR	1021811	CallExpression	r_cons_println ( out )		1021416	0					
ANR	1021812	Callee	r_cons_println		1021416	0					
ANR	1021813	Identifier	r_cons_println		1021416	0					
ANR	1021814	ArgumentList	out		1021416	1					
ANR	1021815	Argument	out		1021416	0					
ANR	1021816	Identifier	out		1021416	0					
ANR	1021817	ExpressionStatement	free ( out )	2550:4:74547:74557	1021416	1	True				
ANR	1021818	CallExpression	free ( out )		1021416	0					
ANR	1021819	Callee	free		1021416	0					
ANR	1021820	Identifier	free		1021416	0					
ANR	1021821	ArgumentList	out		1021416	1					
ANR	1021822	Argument	out		1021416	0					
ANR	1021823	Identifier	out		1021416	0					
ANR	1021824	ElseStatement	else		1021416	0					
ANR	1021825	IfStatement	"if ( ! strcmp ( input + 1 , ""const"" ) )"		1021416	0					
ANR	1021826	Condition	"! strcmp ( input + 1 , ""const"" )"	2552:13:74577:74604	1021416	0	True				
ANR	1021827	UnaryOperationExpression	"! strcmp ( input + 1 , ""const"" )"		1021416	0					
ANR	1021828	UnaryOperator	!		1021416	0					
ANR	1021829	CallExpression	"strcmp ( input + 1 , ""const"" )"		1021416	1					
ANR	1021830	Callee	strcmp		1021416	0					
ANR	1021831	Identifier	strcmp		1021416	0					
ANR	1021832	ArgumentList	input + 1		1021416	1					
ANR	1021833	Argument	input + 1		1021416	0					
ANR	1021834	AdditiveExpression	input + 1		1021416	0		+			
ANR	1021835	Identifier	input		1021416	0					
ANR	1021836	PrimaryExpression	1		1021416	1					
ANR	1021837	Argument	"""const"""		1021416	1					
ANR	1021838	PrimaryExpression	"""const"""		1021416	0					
ANR	1021839	CompoundStatement		66:43:1595:1595	1021416	1					
ANR	1021840	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/const/*"" )"	2553:3:74612:74664	1021416	0	True				
ANR	1021841	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/const/*"" )"		1021416	0		=			
ANR	1021842	Identifier	out		1021416	0					
ANR	1021843	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ""rop/const/*"" )"		1021416	1					
ANR	1021844	Callee	sdb_querys		1021416	0					
ANR	1021845	Identifier	sdb_querys		1021416	0					
ANR	1021846	ArgumentList	core -> sdb		1021416	1					
ANR	1021847	Argument	core -> sdb		1021416	0					
ANR	1021848	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021849	Identifier	core		1021416	0					
ANR	1021850	Identifier	sdb		1021416	1					
ANR	1021851	Argument	NULL		1021416	1					
ANR	1021852	Identifier	NULL		1021416	0					
ANR	1021853	Argument	0		1021416	2					
ANR	1021854	PrimaryExpression	0		1021416	0					
ANR	1021855	Argument	"""rop/const/*"""		1021416	3					
ANR	1021856	PrimaryExpression	"""rop/const/*"""		1021416	0					
ANR	1021857	IfStatement	if ( out )		1021416	1					
ANR	1021858	Condition	out	2554:7:74673:74675	1021416	0	True				
ANR	1021859	Identifier	out		1021416	0					
ANR	1021860	CompoundStatement		68:12:1666:1666	1021416	1					
ANR	1021861	ExpressionStatement	r_cons_println ( out )	2555:4:74684:74704	1021416	0	True				
ANR	1021862	CallExpression	r_cons_println ( out )		1021416	0					
ANR	1021863	Callee	r_cons_println		1021416	0					
ANR	1021864	Identifier	r_cons_println		1021416	0					
ANR	1021865	ArgumentList	out		1021416	1					
ANR	1021866	Argument	out		1021416	0					
ANR	1021867	Identifier	out		1021416	0					
ANR	1021868	ExpressionStatement	free ( out )	2556:4:74710:74720	1021416	1	True				
ANR	1021869	CallExpression	free ( out )		1021416	0					
ANR	1021870	Callee	free		1021416	0					
ANR	1021871	Identifier	free		1021416	0					
ANR	1021872	ArgumentList	out		1021416	1					
ANR	1021873	Argument	out		1021416	0					
ANR	1021874	Identifier	out		1021416	0					
ANR	1021875	ElseStatement	else		1021416	0					
ANR	1021876	IfStatement	"if ( ! strcmp ( input + 1 , ""arithm"" ) )"		1021416	0					
ANR	1021877	Condition	"! strcmp ( input + 1 , ""arithm"" )"	2558:13:74740:74768	1021416	0	True				
ANR	1021878	UnaryOperationExpression	"! strcmp ( input + 1 , ""arithm"" )"		1021416	0					
ANR	1021879	UnaryOperator	!		1021416	0					
ANR	1021880	CallExpression	"strcmp ( input + 1 , ""arithm"" )"		1021416	1					
ANR	1021881	Callee	strcmp		1021416	0					
ANR	1021882	Identifier	strcmp		1021416	0					
ANR	1021883	ArgumentList	input + 1		1021416	1					
ANR	1021884	Argument	input + 1		1021416	0					
ANR	1021885	AdditiveExpression	input + 1		1021416	0		+			
ANR	1021886	Identifier	input		1021416	0					
ANR	1021887	PrimaryExpression	1		1021416	1					
ANR	1021888	Argument	"""arithm"""		1021416	1					
ANR	1021889	PrimaryExpression	"""arithm"""		1021416	0					
ANR	1021890	CompoundStatement		72:44:1759:1759	1021416	1					
ANR	1021891	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/arithm/*"" )"	2559:3:74776:74829	1021416	0	True				
ANR	1021892	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/arithm/*"" )"		1021416	0		=			
ANR	1021893	Identifier	out		1021416	0					
ANR	1021894	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ""rop/arithm/*"" )"		1021416	1					
ANR	1021895	Callee	sdb_querys		1021416	0					
ANR	1021896	Identifier	sdb_querys		1021416	0					
ANR	1021897	ArgumentList	core -> sdb		1021416	1					
ANR	1021898	Argument	core -> sdb		1021416	0					
ANR	1021899	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021900	Identifier	core		1021416	0					
ANR	1021901	Identifier	sdb		1021416	1					
ANR	1021902	Argument	NULL		1021416	1					
ANR	1021903	Identifier	NULL		1021416	0					
ANR	1021904	Argument	0		1021416	2					
ANR	1021905	PrimaryExpression	0		1021416	0					
ANR	1021906	Argument	"""rop/arithm/*"""		1021416	3					
ANR	1021907	PrimaryExpression	"""rop/arithm/*"""		1021416	0					
ANR	1021908	IfStatement	if ( out )		1021416	1					
ANR	1021909	Condition	out	2560:7:74838:74840	1021416	0	True				
ANR	1021910	Identifier	out		1021416	0					
ANR	1021911	CompoundStatement		74:12:1831:1831	1021416	1					
ANR	1021912	ExpressionStatement	r_cons_println ( out )	2561:4:74849:74869	1021416	0	True				
ANR	1021913	CallExpression	r_cons_println ( out )		1021416	0					
ANR	1021914	Callee	r_cons_println		1021416	0					
ANR	1021915	Identifier	r_cons_println		1021416	0					
ANR	1021916	ArgumentList	out		1021416	1					
ANR	1021917	Argument	out		1021416	0					
ANR	1021918	Identifier	out		1021416	0					
ANR	1021919	ExpressionStatement	free ( out )	2562:4:74875:74885	1021416	1	True				
ANR	1021920	CallExpression	free ( out )		1021416	0					
ANR	1021921	Callee	free		1021416	0					
ANR	1021922	Identifier	free		1021416	0					
ANR	1021923	ArgumentList	out		1021416	1					
ANR	1021924	Argument	out		1021416	0					
ANR	1021925	Identifier	out		1021416	0					
ANR	1021926	ElseStatement	else		1021416	0					
ANR	1021927	IfStatement	"if ( ! strcmp ( input + 1 , ""arithm_ct"" ) )"		1021416	0					
ANR	1021928	Condition	"! strcmp ( input + 1 , ""arithm_ct"" )"	2564:13:74905:74936	1021416	0	True				
ANR	1021929	UnaryOperationExpression	"! strcmp ( input + 1 , ""arithm_ct"" )"		1021416	0					
ANR	1021930	UnaryOperator	!		1021416	0					
ANR	1021931	CallExpression	"strcmp ( input + 1 , ""arithm_ct"" )"		1021416	1					
ANR	1021932	Callee	strcmp		1021416	0					
ANR	1021933	Identifier	strcmp		1021416	0					
ANR	1021934	ArgumentList	input + 1		1021416	1					
ANR	1021935	Argument	input + 1		1021416	0					
ANR	1021936	AdditiveExpression	input + 1		1021416	0		+			
ANR	1021937	Identifier	input		1021416	0					
ANR	1021938	PrimaryExpression	1		1021416	1					
ANR	1021939	Argument	"""arithm_ct"""		1021416	1					
ANR	1021940	PrimaryExpression	"""arithm_ct"""		1021416	0					
ANR	1021941	CompoundStatement		78:47:1927:1927	1021416	1					
ANR	1021942	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/arithm_ct/*"" )"	2565:3:74944:75000	1021416	0	True				
ANR	1021943	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/arithm_ct/*"" )"		1021416	0		=			
ANR	1021944	Identifier	out		1021416	0					
ANR	1021945	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ""rop/arithm_ct/*"" )"		1021416	1					
ANR	1021946	Callee	sdb_querys		1021416	0					
ANR	1021947	Identifier	sdb_querys		1021416	0					
ANR	1021948	ArgumentList	core -> sdb		1021416	1					
ANR	1021949	Argument	core -> sdb		1021416	0					
ANR	1021950	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021951	Identifier	core		1021416	0					
ANR	1021952	Identifier	sdb		1021416	1					
ANR	1021953	Argument	NULL		1021416	1					
ANR	1021954	Identifier	NULL		1021416	0					
ANR	1021955	Argument	0		1021416	2					
ANR	1021956	PrimaryExpression	0		1021416	0					
ANR	1021957	Argument	"""rop/arithm_ct/*"""		1021416	3					
ANR	1021958	PrimaryExpression	"""rop/arithm_ct/*"""		1021416	0					
ANR	1021959	IfStatement	if ( out )		1021416	1					
ANR	1021960	Condition	out	2566:7:75009:75011	1021416	0	True				
ANR	1021961	Identifier	out		1021416	0					
ANR	1021962	CompoundStatement		80:12:2002:2002	1021416	1					
ANR	1021963	ExpressionStatement	r_cons_println ( out )	2567:4:75020:75040	1021416	0	True				
ANR	1021964	CallExpression	r_cons_println ( out )		1021416	0					
ANR	1021965	Callee	r_cons_println		1021416	0					
ANR	1021966	Identifier	r_cons_println		1021416	0					
ANR	1021967	ArgumentList	out		1021416	1					
ANR	1021968	Argument	out		1021416	0					
ANR	1021969	Identifier	out		1021416	0					
ANR	1021970	ExpressionStatement	free ( out )	2568:4:75046:75056	1021416	1	True				
ANR	1021971	CallExpression	free ( out )		1021416	0					
ANR	1021972	Callee	free		1021416	0					
ANR	1021973	Identifier	free		1021416	0					
ANR	1021974	ArgumentList	out		1021416	1					
ANR	1021975	Argument	out		1021416	0					
ANR	1021976	Identifier	out		1021416	0					
ANR	1021977	ElseStatement	else		1021416	0					
ANR	1021978	CompoundStatement		84:9:2060:2060	1021416	0					
ANR	1021979	ExpressionStatement	"eprintf ( ""Invalid ROP class\\n"" )"	2571:3:75077:75108	1021416	0	True				
ANR	1021980	CallExpression	"eprintf ( ""Invalid ROP class\\n"" )"		1021416	0					
ANR	1021981	Callee	eprintf		1021416	0					
ANR	1021982	Identifier	eprintf		1021416	0					
ANR	1021983	ArgumentList	"""Invalid ROP class\\n"""		1021416	1					
ANR	1021984	Argument	"""Invalid ROP class\\n"""		1021416	0					
ANR	1021985	PrimaryExpression	"""Invalid ROP class\\n"""		1021416	0					
ANR	1021986	BreakStatement	break ;	2573:2:75116:75121	1021416	30	True				
ANR	1021987	Label	default :	2574:1:75124:75131	1021416	31	True				
ANR	1021988	Identifier	default		1021416	0					
ANR	1021989	ExpressionStatement	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/***"" )"	2575:2:75135:75183	1021416	32	True				
ANR	1021990	AssignmentExpression	"out = sdb_querys ( core -> sdb , NULL , 0 , ""rop/***"" )"		1021416	0		=			
ANR	1021991	Identifier	out		1021416	0					
ANR	1021992	CallExpression	"sdb_querys ( core -> sdb , NULL , 0 , ""rop/***"" )"		1021416	1					
ANR	1021993	Callee	sdb_querys		1021416	0					
ANR	1021994	Identifier	sdb_querys		1021416	0					
ANR	1021995	ArgumentList	core -> sdb		1021416	1					
ANR	1021996	Argument	core -> sdb		1021416	0					
ANR	1021997	PtrMemberAccess	core -> sdb		1021416	0					
ANR	1021998	Identifier	core		1021416	0					
ANR	1021999	Identifier	sdb		1021416	1					
ANR	1022000	Argument	NULL		1021416	1					
ANR	1022001	Identifier	NULL		1021416	0					
ANR	1022002	Argument	0		1021416	2					
ANR	1022003	PrimaryExpression	0		1021416	0					
ANR	1022004	Argument	"""rop/***"""		1021416	3					
ANR	1022005	PrimaryExpression	"""rop/***"""		1021416	0					
ANR	1022006	IfStatement	if ( out )		1021416	33					
ANR	1022007	Condition	out	2576:6:75191:75193	1021416	0	True				
ANR	1022008	Identifier	out		1021416	0					
ANR	1022009	CompoundStatement		90:11:2184:2184	1021416	1					
ANR	1022010	ExpressionStatement	r_cons_println ( out )	2577:3:75201:75221	1021416	0	True				
ANR	1022011	CallExpression	r_cons_println ( out )		1021416	0					
ANR	1022012	Callee	r_cons_println		1021416	0					
ANR	1022013	Identifier	r_cons_println		1021416	0					
ANR	1022014	ArgumentList	out		1021416	1					
ANR	1022015	Argument	out		1021416	0					
ANR	1022016	Identifier	out		1021416	0					
ANR	1022017	ExpressionStatement	free ( out )	2578:3:75226:75236	1021416	1	True				
ANR	1022018	CallExpression	free ( out )		1021416	0					
ANR	1022019	Callee	free		1021416	0					
ANR	1022020	Identifier	free		1021416	0					
ANR	1022021	ArgumentList	out		1021416	1					
ANR	1022022	Argument	out		1021416	0					
ANR	1022023	Identifier	out		1021416	0					
ANR	1022024	BreakStatement	break ;	2580:2:75244:75249	1021416	34	True				
ANR	1022025	ReturnType	static void		1021416	1					
ANR	1022026	Identifier	rop_kuery		1021416	2					
ANR	1022027	ParameterList	"void * data , const char * input"		1021416	3					
ANR	1022028	Parameter	void * data	2487:22:72980:72989	1021416	0	True				
ANR	1022029	ParameterType	void *		1021416	0					
ANR	1022030	Identifier	data		1021416	1					
ANR	1022031	Parameter	const char * input	2487:34:72992:73008	1021416	1	True				
ANR	1022032	ParameterType	const char *		1021416	0					
ANR	1022033	Identifier	input		1021416	1					
ANR	1022034	CFGEntryNode	ENTRY		1021416		True				
ANR	1022035	CFGExitNode	EXIT		1021416		True				
ANR	1022036	Symbol	flag		1021416						
ANR	1022037	Symbol	data		1021416						
ANR	1022038	Symbol	ns		1021416						
ANR	1022039	Symbol	core -> sdb		1021416						
ANR	1022040	Symbol	* core		1021416						
ANR	1022041	Symbol	* input		1021416						
ANR	1022042	Symbol	out		1021416						
ANR	1022043	Symbol	tok		1021416						
ANR	1022044	Symbol	sdb_list		1021416						
ANR	1022045	Symbol	ns -> name		1021416						
ANR	1022046	Symbol	sdb_iter		1021416						
ANR	1022047	Symbol	strcmp		1021416						
ANR	1022048	Symbol	NULL		1021416						
ANR	1022049	Symbol	db_rop		1021416						
ANR	1022050	Symbol	sdbkv_key		1021416						
ANR	1022051	Symbol	ns -> sdb		1021416						
ANR	1022052	Symbol	false		1021416						
ANR	1022053	Symbol	* ns		1021416						
ANR	1022054	Symbol	sdb_foreach_list		1021416						
ANR	1022055	Symbol	sdb_querys		1021416						
ANR	1022056	Symbol	strtok		1021416						
ANR	1022057	Symbol	it		1021416						
ANR	1022058	Symbol	kv		1021416						
ANR	1022059	Symbol	sdbkv_value		1021416						
ANR	1022060	Symbol	input		1021416						
ANR	1022061	Symbol	core		1021416						
ANR	1022062	Symbol	size		1021416						
ANR	1022063	Symbol	json_first		1021416						
ANR	1022064	Symbol	true		1021416						
ANR	1022065	Symbol	strdup		1021416						
ANR	1022066	Symbol	dup		1021416						
ANR	1022067	Symbol	sdb_ns		1021416						
ANR	1022068	Function	memcmpdiff	2584:0:75257:75486							
ANR	1022069	FunctionDef	"memcmpdiff (const ut8 * a , const ut8 * b , int len)"		1022068	0					
ANR	1022070	CompoundStatement		2584:59:75316:75486	1022068	0					
ANR	1022071	IdentifierDeclStatement	"int i , diff = 0 ;"	2585:1:75319:75334	1022068	0	True				
ANR	1022072	IdentifierDecl	i		1022068	0					
ANR	1022073	IdentifierDeclType	int		1022068	0					
ANR	1022074	Identifier	i		1022068	1					
ANR	1022075	IdentifierDecl	diff = 0		1022068	1					
ANR	1022076	IdentifierDeclType	int		1022068	0					
ANR	1022077	Identifier	diff		1022068	1					
ANR	1022078	AssignmentExpression	diff = 0		1022068	2		=			
ANR	1022079	Identifier	diff		1022068	0					
ANR	1022080	PrimaryExpression	0		1022068	1					
ANR	1022081	ForStatement	for ( i = 0 ; i < len ; i ++ )		1022068	1					
ANR	1022082	ForInit	i = 0 ;	2586:6:75342:75347	1022068	0	True				
ANR	1022083	AssignmentExpression	i = 0		1022068	0		=			
ANR	1022084	Identifier	i		1022068	0					
ANR	1022085	PrimaryExpression	0		1022068	1					
ANR	1022086	Condition	i < len	2586:13:75349:75355	1022068	1	True				
ANR	1022087	RelationalExpression	i < len		1022068	0		<			
ANR	1022088	Identifier	i		1022068	0					
ANR	1022089	Identifier	len		1022068	1					
ANR	1022090	PostIncDecOperationExpression	i ++	2586:22:75358:75360	1022068	2	True				
ANR	1022091	Identifier	i		1022068	0					
ANR	1022092	IncDec	++		1022068	1					
ANR	1022093	CompoundStatement		3:27:46:46	1022068	3					
ANR	1022094	IfStatement	if ( a [ i ] == b [ i ] && a [ i ] == 0x00 )		1022068	0					
ANR	1022095	Condition	a [ i ] == b [ i ] && a [ i ] == 0x00	2587:6:75371:75398	1022068	0	True				
ANR	1022096	AndExpression	a [ i ] == b [ i ] && a [ i ] == 0x00		1022068	0		&&			
ANR	1022097	EqualityExpression	a [ i ] == b [ i ]		1022068	0		==			
ANR	1022098	ArrayIndexing	a [ i ]		1022068	0					
ANR	1022099	Identifier	a		1022068	0					
ANR	1022100	Identifier	i		1022068	1					
ANR	1022101	ArrayIndexing	b [ i ]		1022068	1					
ANR	1022102	Identifier	b		1022068	0					
ANR	1022103	Identifier	i		1022068	1					
ANR	1022104	EqualityExpression	a [ i ] == 0x00		1022068	1		==			
ANR	1022105	ArrayIndexing	a [ i ]		1022068	0					
ANR	1022106	Identifier	a		1022068	0					
ANR	1022107	Identifier	i		1022068	1					
ANR	1022108	PrimaryExpression	0x00		1022068	1					
ANR	1022109	CompoundStatement		4:36:84:84	1022068	1					
ANR	1022110	ElseStatement	else		1022068	0					
ANR	1022111	IfStatement	if ( a [ i ] != b [ i ] )		1022068	0					
ANR	1022112	Condition	a [ i ] != b [ i ]	2589:13:75438:75449	1022068	0	True				
ANR	1022113	EqualityExpression	a [ i ] != b [ i ]		1022068	0		!=			
ANR	1022114	ArrayIndexing	a [ i ]		1022068	0					
ANR	1022115	Identifier	a		1022068	0					
ANR	1022116	Identifier	i		1022068	1					
ANR	1022117	ArrayIndexing	b [ i ]		1022068	1					
ANR	1022118	Identifier	b		1022068	0					
ANR	1022119	Identifier	i		1022068	1					
ANR	1022120	CompoundStatement		6:27:135:135	1022068	1					
ANR	1022121	ExpressionStatement	diff ++	2590:3:75457:75463	1022068	0	True				
ANR	1022122	PostIncDecOperationExpression	diff ++		1022068	0					
ANR	1022123	Identifier	diff		1022068	0					
ANR	1022124	IncDec	++		1022068	1					
ANR	1022125	ReturnStatement	return diff ;	2593:1:75473:75484	1022068	2	True				
ANR	1022126	Identifier	diff		1022068	0					
ANR	1022127	ReturnType	static int		1022068	1					
ANR	1022128	Identifier	memcmpdiff		1022068	2					
ANR	1022129	ParameterList	"const ut8 * a , const ut8 * b , int len"		1022068	3					
ANR	1022130	Parameter	const ut8 * a	2584:22:75279:75290	1022068	0	True				
ANR	1022131	ParameterType	const ut8 *		1022068	0					
ANR	1022132	Identifier	a		1022068	1					
ANR	1022133	Parameter	const ut8 * b	2584:36:75293:75304	1022068	1	True				
ANR	1022134	ParameterType	const ut8 *		1022068	0					
ANR	1022135	Identifier	b		1022068	1					
ANR	1022136	Parameter	int len	2584:50:75307:75313	1022068	2	True				
ANR	1022137	ParameterType	int		1022068	0					
ANR	1022138	Identifier	len		1022068	1					
ANR	1022139	CFGEntryNode	ENTRY		1022068		True				
ANR	1022140	CFGExitNode	EXIT		1022068		True				
ANR	1022141	Symbol	a		1022068						
ANR	1022142	Symbol	b		1022068						
ANR	1022143	Symbol	* i		1022068						
ANR	1022144	Symbol	len		1022068						
ANR	1022145	Symbol	i		1022068						
ANR	1022146	Symbol	diff		1022068						
ANR	1022147	Symbol	* a		1022068						
ANR	1022148	Symbol	* b		1022068						
ANR	1022149	Function	search_similar_pattern_in	2596:0:75489:76211							
ANR	1022150	FunctionDef	"search_similar_pattern_in (RCore * core , int count , ut64 from , ut64 to)"		1022149	0					
ANR	1022151	CompoundStatement		2596:82:75571:76211	1022149	0					
ANR	1022152	IdentifierDeclStatement	ut64 addr = from ;	2597:1:75574:75590	1022149	0	True				
ANR	1022153	IdentifierDecl	addr = from		1022149	0					
ANR	1022154	IdentifierDeclType	ut64		1022149	0					
ANR	1022155	Identifier	addr		1022149	1					
ANR	1022156	AssignmentExpression	addr = from		1022149	2		=			
ANR	1022157	Identifier	from		1022149	0					
ANR	1022158	Identifier	from		1022149	1					
ANR	1022159	IdentifierDeclStatement	"ut8 * block = calloc ( core -> blocksize , 1 ) ;"	2598:1:75593:75633	1022149	1	True				
ANR	1022160	IdentifierDecl	"* block = calloc ( core -> blocksize , 1 )"		1022149	0					
ANR	1022161	IdentifierDeclType	ut8 *		1022149	0					
ANR	1022162	Identifier	block		1022149	1					
ANR	1022163	AssignmentExpression	"* block = calloc ( core -> blocksize , 1 )"		1022149	2		=			
ANR	1022164	Identifier	block		1022149	0					
ANR	1022165	CallExpression	"calloc ( core -> blocksize , 1 )"		1022149	1					
ANR	1022166	Callee	calloc		1022149	0					
ANR	1022167	Identifier	calloc		1022149	0					
ANR	1022168	ArgumentList	core -> blocksize		1022149	1					
ANR	1022169	Argument	core -> blocksize		1022149	0					
ANR	1022170	PtrMemberAccess	core -> blocksize		1022149	0					
ANR	1022171	Identifier	core		1022149	0					
ANR	1022172	Identifier	blocksize		1022149	1					
ANR	1022173	Argument	1		1022149	1					
ANR	1022174	PrimaryExpression	1		1022149	0					
ANR	1022175	IfStatement	if ( ! block )		1022149	2					
ANR	1022176	Condition	! block	2599:5:75640:75645	1022149	0	True				
ANR	1022177	UnaryOperationExpression	! block		1022149	0					
ANR	1022178	UnaryOperator	!		1022149	0					
ANR	1022179	Identifier	block		1022149	1					
ANR	1022180	CompoundStatement		4:13:76:76	1022149	1					
ANR	1022181	ReturnStatement	return ;	2600:2:75652:75658	1022149	0	True				
ANR	1022182	WhileStatement	while ( addr < to )		1022149	3					
ANR	1022183	Condition	addr < to	2602:8:75671:75679	1022149	0	True				
ANR	1022184	RelationalExpression	addr < to		1022149	0		<			
ANR	1022185	Identifier	addr		1022149	0					
ANR	1022186	Identifier	to		1022149	1					
ANR	1022187	CompoundStatement		13:2:285:319	1022149	1					
ANR	1022188	ExpressionStatement	"( void ) r_io_read_at ( core -> io , addr , block , core -> blocksize )"	2603:2:75686:75746	1022149	0	True				
ANR	1022189	CastExpression	"( void ) r_io_read_at ( core -> io , addr , block , core -> blocksize )"		1022149	0					
ANR	1022190	CastTarget	void		1022149	0					
ANR	1022191	CallExpression	"r_io_read_at ( core -> io , addr , block , core -> blocksize )"		1022149	1					
ANR	1022192	Callee	r_io_read_at		1022149	0					
ANR	1022193	Identifier	r_io_read_at		1022149	0					
ANR	1022194	ArgumentList	core -> io		1022149	1					
ANR	1022195	Argument	core -> io		1022149	0					
ANR	1022196	PtrMemberAccess	core -> io		1022149	0					
ANR	1022197	Identifier	core		1022149	0					
ANR	1022198	Identifier	io		1022149	1					
ANR	1022199	Argument	addr		1022149	1					
ANR	1022200	Identifier	addr		1022149	0					
ANR	1022201	Argument	block		1022149	2					
ANR	1022202	Identifier	block		1022149	0					
ANR	1022203	Argument	core -> blocksize		1022149	3					
ANR	1022204	PtrMemberAccess	core -> blocksize		1022149	0					
ANR	1022205	Identifier	core		1022149	0					
ANR	1022206	Identifier	blocksize		1022149	1					
ANR	1022207	IfStatement	if ( r_cons_is_breaked ( ) )		1022149	1					
ANR	1022208	Condition	r_cons_is_breaked ( )	2604:6:75754:75773	1022149	0	True				
ANR	1022209	CallExpression	r_cons_is_breaked ( )		1022149	0					
ANR	1022210	Callee	r_cons_is_breaked		1022149	0					
ANR	1022211	Identifier	r_cons_is_breaked		1022149	0					
ANR	1022212	ArgumentList			1022149	1					
ANR	1022213	CompoundStatement		9:28:204:204	1022149	1					
ANR	1022214	BreakStatement	break ;	2605:3:75781:75786	1022149	0	True				
ANR	1022215	IdentifierDeclStatement	"int diff = memcmpdiff ( core -> block , block , core -> blocksize ) ;"	2607:2:75794:75853	1022149	2	True				
ANR	1022216	IdentifierDecl	"diff = memcmpdiff ( core -> block , block , core -> blocksize )"		1022149	0					
ANR	1022217	IdentifierDeclType	int		1022149	0					
ANR	1022218	Identifier	diff		1022149	1					
ANR	1022219	AssignmentExpression	"diff = memcmpdiff ( core -> block , block , core -> blocksize )"		1022149	2		=			
ANR	1022220	Identifier	diff		1022149	0					
ANR	1022221	CallExpression	"memcmpdiff ( core -> block , block , core -> blocksize )"		1022149	1					
ANR	1022222	Callee	memcmpdiff		1022149	0					
ANR	1022223	Identifier	memcmpdiff		1022149	0					
ANR	1022224	ArgumentList	core -> block		1022149	1					
ANR	1022225	Argument	core -> block		1022149	0					
ANR	1022226	PtrMemberAccess	core -> block		1022149	0					
ANR	1022227	Identifier	core		1022149	0					
ANR	1022228	Identifier	block		1022149	1					
ANR	1022229	Argument	block		1022149	1					
ANR	1022230	Identifier	block		1022149	0					
ANR	1022231	Argument	core -> blocksize		1022149	2					
ANR	1022232	PtrMemberAccess	core -> blocksize		1022149	0					
ANR	1022233	Identifier	core		1022149	0					
ANR	1022234	Identifier	blocksize		1022149	1					
ANR	1022235	IdentifierDeclStatement	int equal = core -> blocksize - diff ;	2608:2:75857:75891	1022149	3	True				
ANR	1022236	IdentifierDecl	equal = core -> blocksize - diff		1022149	0					
ANR	1022237	IdentifierDeclType	int		1022149	0					
ANR	1022238	Identifier	equal		1022149	1					
ANR	1022239	AssignmentExpression	equal = core -> blocksize - diff		1022149	2		=			
ANR	1022240	Identifier	equal		1022149	0					
ANR	1022241	AdditiveExpression	core -> blocksize - diff		1022149	1		-			
ANR	1022242	PtrMemberAccess	core -> blocksize		1022149	0					
ANR	1022243	Identifier	core		1022149	0					
ANR	1022244	Identifier	blocksize		1022149	1					
ANR	1022245	Identifier	diff		1022149	1					
ANR	1022246	IfStatement	if ( equal >= count )		1022149	4					
ANR	1022247	Condition	equal >= count	2609:6:75899:75912	1022149	0	True				
ANR	1022248	RelationalExpression	equal >= count		1022149	0		>=			
ANR	1022249	Identifier	equal		1022149	0					
ANR	1022250	Identifier	count		1022149	1					
ANR	1022251	CompoundStatement		17:3:480:522	1022149	1					
ANR	1022252	IdentifierDeclStatement	int pc = ( equal * 100 ) / core -> blocksize ;	2610:3:75920:75960	1022149	0	True				
ANR	1022253	IdentifierDecl	pc = ( equal * 100 ) / core -> blocksize		1022149	0					
ANR	1022254	IdentifierDeclType	int		1022149	0					
ANR	1022255	Identifier	pc		1022149	1					
ANR	1022256	AssignmentExpression	pc = ( equal * 100 ) / core -> blocksize		1022149	2		=			
ANR	1022257	Identifier	pc		1022149	0					
ANR	1022258	MultiplicativeExpression	( equal * 100 ) / core -> blocksize		1022149	1		/			
ANR	1022259	MultiplicativeExpression	equal * 100		1022149	0		*			
ANR	1022260	Identifier	equal		1022149	0					
ANR	1022261	PrimaryExpression	100		1022149	1					
ANR	1022262	PtrMemberAccess	core -> blocksize		1022149	1					
ANR	1022263	Identifier	core		1022149	0					
ANR	1022264	Identifier	blocksize		1022149	1					
ANR	1022265	Statement	r_cons_printf	2611:3:75965:75977	1022149	1	True				
ANR	1022266	Statement	(	2611:17:75979:75979	1022149	2	True				
ANR	1022267	Statement	"""0x%08"""	2611:18:75980:75986	1022149	3	True				
ANR	1022268	Statement	PFMT64x	2611:25:75987:75993	1022149	4	True				
ANR	1022269	Statement	""" %4d/%d %3d%%  """	2611:33:75995:76011	1022149	5	True				
ANR	1022270	Statement	","	2611:50:76012:76012	1022149	6	True				
ANR	1022271	Statement	addr	2611:52:76014:76017	1022149	7	True				
ANR	1022272	Statement	","	2611:56:76018:76018	1022149	8	True				
ANR	1022273	Statement	equal	2611:58:76020:76024	1022149	9	True				
ANR	1022274	Statement	","	2611:63:76025:76025	1022149	10	True				
ANR	1022275	Statement	core	2611:65:76027:76030	1022149	11	True				
ANR	1022276	Statement	->	2611:69:76031:76032	1022149	12	True				
ANR	1022277	Statement	blocksize	2611:71:76033:76041	1022149	13	True				
ANR	1022278	Statement	","	2611:80:76042:76042	1022149	14	True				
ANR	1022279	Statement	pc	2611:82:76044:76045	1022149	15	True				
ANR	1022280	Statement	)	2611:84:76046:76046	1022149	16	True				
ANR	1022281	ExpressionStatement		2611:85:76047:76047	1022149	17	True				
ANR	1022282	IdentifierDeclStatement	"ut8 ptr [ 2 ] = { ( ut8 ) ( pc * 2.5 ) , 0 } ;"	2612:3:76052:76094	1022149	18	True				
ANR	1022283	IdentifierDecl	"ptr [ 2 ] = { ( ut8 ) ( pc * 2.5 ) , 0 }"		1022149	0					
ANR	1022284	IdentifierDeclType	ut8 [ 2 ]		1022149	0					
ANR	1022285	Identifier	ptr		1022149	1					
ANR	1022286	PrimaryExpression	2		1022149	2					
ANR	1022287	AssignmentExpression	"ptr [ 2 ] = { ( ut8 ) ( pc * 2.5 ) , 0 }"		1022149	3		=			
ANR	1022288	Identifier	ptr		1022149	0					
ANR	1022289	InitializerList	( ut8 ) ( pc * 2.5 )		1022149	1					
ANR	1022290	CastExpression	( ut8 ) ( pc * 2.5 )		1022149	0					
ANR	1022291	CastTarget	ut8		1022149	0					
ANR	1022292	MultiplicativeExpression	pc * 2.5		1022149	1		*			
ANR	1022293	Identifier	pc		1022149	0					
ANR	1022294	PrimaryExpression	2.5		1022149	1					
ANR	1022295	PrimaryExpression	0		1022149	1					
ANR	1022296	ExpressionStatement	"r_print_fill ( core -> print , ptr , 1 , UT64_MAX , core -> blocksize )"	2615:3:76099:76160	1022149	19	True				
ANR	1022297	CallExpression	"r_print_fill ( core -> print , ptr , 1 , UT64_MAX , core -> blocksize )"		1022149	0					
ANR	1022298	Callee	r_print_fill		1022149	0					
ANR	1022299	Identifier	r_print_fill		1022149	0					
ANR	1022300	ArgumentList	core -> print		1022149	1					
ANR	1022301	Argument	core -> print		1022149	0					
ANR	1022302	PtrMemberAccess	core -> print		1022149	0					
ANR	1022303	Identifier	core		1022149	0					
ANR	1022304	Identifier	print		1022149	1					
ANR	1022305	Argument	ptr		1022149	1					
ANR	1022306	Identifier	ptr		1022149	0					
ANR	1022307	Argument	1		1022149	2					
ANR	1022308	PrimaryExpression	1		1022149	0					
ANR	1022309	Argument	UT64_MAX		1022149	3					
ANR	1022310	Identifier	UT64_MAX		1022149	0					
ANR	1022311	Argument	core -> blocksize		1022149	4					
ANR	1022312	PtrMemberAccess	core -> blocksize		1022149	0					
ANR	1022313	Identifier	core		1022149	0					
ANR	1022314	Identifier	blocksize		1022149	1					
ANR	1022315	ExpressionStatement	addr += core -> blocksize	2617:2:76168:76191	1022149	5	True				
ANR	1022316	AssignmentExpression	addr += core -> blocksize		1022149	0		+=			
ANR	1022317	Identifier	addr		1022149	0					
ANR	1022318	PtrMemberAccess	core -> blocksize		1022149	1					
ANR	1022319	Identifier	core		1022149	0					
ANR	1022320	Identifier	blocksize		1022149	1					
ANR	1022321	ExpressionStatement	free ( block )	2619:1:76197:76209	1022149	4	True				
ANR	1022322	CallExpression	free ( block )		1022149	0					
ANR	1022323	Callee	free		1022149	0					
ANR	1022324	Identifier	free		1022149	0					
ANR	1022325	ArgumentList	block		1022149	1					
ANR	1022326	Argument	block		1022149	0					
ANR	1022327	Identifier	block		1022149	0					
ANR	1022328	ReturnType	static void		1022149	1					
ANR	1022329	Identifier	search_similar_pattern_in		1022149	2					
ANR	1022330	ParameterList	"RCore * core , int count , ut64 from , ut64 to"		1022149	3					
ANR	1022331	Parameter	RCore * core	2596:38:75527:75537	1022149	0	True				
ANR	1022332	ParameterType	RCore *		1022149	0					
ANR	1022333	Identifier	core		1022149	1					
ANR	1022334	Parameter	int count	2596:51:75540:75548	1022149	1	True				
ANR	1022335	ParameterType	int		1022149	0					
ANR	1022336	Identifier	count		1022149	1					
ANR	1022337	Parameter	ut64 from	2596:62:75551:75559	1022149	2	True				
ANR	1022338	ParameterType	ut64		1022149	0					
ANR	1022339	Identifier	from		1022149	1					
ANR	1022340	Parameter	ut64 to	2596:73:75562:75568	1022149	3	True				
ANR	1022341	ParameterType	ut64		1022149	0					
ANR	1022342	Identifier	to		1022149	1					
ANR	1022343	CFGEntryNode	ENTRY		1022149		True				
ANR	1022344	CFGExitNode	EXIT		1022149		True				
ANR	1022345	Symbol	core -> blocksize		1022149						
ANR	1022346	Symbol	core -> block		1022149						
ANR	1022347	Symbol	count		1022149						
ANR	1022348	Symbol	* core		1022149						
ANR	1022349	Symbol	diff		1022149						
ANR	1022350	Symbol	calloc		1022149						
ANR	1022351	Symbol	ptr		1022149						
ANR	1022352	Symbol	equal		1022149						
ANR	1022353	Symbol	core		1022149						
ANR	1022354	Symbol	memcmpdiff		1022149						
ANR	1022355	Symbol	r_cons_is_breaked		1022149						
ANR	1022356	Symbol	pc		1022149						
ANR	1022357	Symbol	core -> io		1022149						
ANR	1022358	Symbol	from		1022149						
ANR	1022359	Symbol	block		1022149						
ANR	1022360	Symbol	to		1022149						
ANR	1022361	Symbol	addr		1022149						
ANR	1022362	Symbol	core -> print		1022149						
ANR	1022363	Symbol	UT64_MAX		1022149						
ANR	1022364	Function	search_similar_pattern	2622:0:76214:76520							
ANR	1022365	FunctionDef	"search_similar_pattern (RCore * core , int count , struct search_parameters * param)"		1022364	0					
ANR	1022366	CompoundStatement		2622:92:76306:76520	1022364	0					
ANR	1022367	IdentifierDeclStatement	RIOMap * p ;	2623:1:76309:76318	1022364	0	True				
ANR	1022368	IdentifierDecl	* p		1022364	0					
ANR	1022369	IdentifierDeclType	RIOMap *		1022364	0					
ANR	1022370	Identifier	p		1022364	1					
ANR	1022371	IdentifierDeclStatement	RListIter * iter ;	2624:1:76321:76336	1022364	1	True				
ANR	1022372	IdentifierDecl	* iter		1022364	0					
ANR	1022373	IdentifierDeclType	RListIter *		1022364	0					
ANR	1022374	Identifier	iter		1022364	1					
ANR	1022375	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2626:1:76340:76370	1022364	2	True				
ANR	1022376	CallExpression	"r_cons_break_push ( NULL , NULL )"		1022364	0					
ANR	1022377	Callee	r_cons_break_push		1022364	0					
ANR	1022378	Identifier	r_cons_break_push		1022364	0					
ANR	1022379	ArgumentList	NULL		1022364	1					
ANR	1022380	Argument	NULL		1022364	0					
ANR	1022381	Identifier	NULL		1022364	0					
ANR	1022382	Argument	NULL		1022364	1					
ANR	1022383	Identifier	NULL		1022364	0					
ANR	1022384	Statement	r_list_foreach	2627:1:76373:76386	1022364	3	True				
ANR	1022385	Statement	(	2627:16:76388:76388	1022364	4	True				
ANR	1022386	Statement	param	2627:17:76389:76393	1022364	5	True				
ANR	1022387	Statement	->	2627:22:76394:76395	1022364	6	True				
ANR	1022388	Statement	boundaries	2627:24:76396:76405	1022364	7	True				
ANR	1022389	Statement	","	2627:34:76406:76406	1022364	8	True				
ANR	1022390	Statement	iter	2627:36:76408:76411	1022364	9	True				
ANR	1022391	Statement	","	2627:40:76412:76412	1022364	10	True				
ANR	1022392	Statement	p	2627:42:76414:76414	1022364	11	True				
ANR	1022393	Statement	)	2627:43:76415:76415	1022364	12	True				
ANR	1022394	CompoundStatement		6:45:110:110	1022364	13					
ANR	1022395	ExpressionStatement	"search_similar_pattern_in ( core , count , p -> itv . addr , r_itv_end ( p -> itv ) )"	2628:2:76421:76493	1022364	0	True				
ANR	1022396	CallExpression	"search_similar_pattern_in ( core , count , p -> itv . addr , r_itv_end ( p -> itv ) )"		1022364	0					
ANR	1022397	Callee	search_similar_pattern_in		1022364	0					
ANR	1022398	Identifier	search_similar_pattern_in		1022364	0					
ANR	1022399	ArgumentList	core		1022364	1					
ANR	1022400	Argument	core		1022364	0					
ANR	1022401	Identifier	core		1022364	0					
ANR	1022402	Argument	count		1022364	1					
ANR	1022403	Identifier	count		1022364	0					
ANR	1022404	Argument	p -> itv . addr		1022364	2					
ANR	1022405	MemberAccess	p -> itv . addr		1022364	0					
ANR	1022406	PtrMemberAccess	p -> itv		1022364	0					
ANR	1022407	Identifier	p		1022364	0					
ANR	1022408	Identifier	itv		1022364	1					
ANR	1022409	Identifier	addr		1022364	1					
ANR	1022410	Argument	r_itv_end ( p -> itv )		1022364	3					
ANR	1022411	CallExpression	r_itv_end ( p -> itv )		1022364	0					
ANR	1022412	Callee	r_itv_end		1022364	0					
ANR	1022413	Identifier	r_itv_end		1022364	0					
ANR	1022414	ArgumentList	p -> itv		1022364	1					
ANR	1022415	Argument	p -> itv		1022364	0					
ANR	1022416	PtrMemberAccess	p -> itv		1022364	0					
ANR	1022417	Identifier	p		1022364	0					
ANR	1022418	Identifier	itv		1022364	1					
ANR	1022419	ExpressionStatement	r_cons_break_pop ( )	2630:1:76499:76518	1022364	14	True				
ANR	1022420	CallExpression	r_cons_break_pop ( )		1022364	0					
ANR	1022421	Callee	r_cons_break_pop		1022364	0					
ANR	1022422	Identifier	r_cons_break_pop		1022364	0					
ANR	1022423	ArgumentList			1022364	1					
ANR	1022424	ReturnType	static void		1022364	1					
ANR	1022425	Identifier	search_similar_pattern		1022364	2					
ANR	1022426	ParameterList	"RCore * core , int count , struct search_parameters * param"		1022364	3					
ANR	1022427	Parameter	RCore * core	2622:35:76249:76259	1022364	0	True				
ANR	1022428	ParameterType	RCore *		1022364	0					
ANR	1022429	Identifier	core		1022364	1					
ANR	1022430	Parameter	int count	2622:48:76262:76270	1022364	1	True				
ANR	1022431	ParameterType	int		1022364	0					
ANR	1022432	Identifier	count		1022364	1					
ANR	1022433	Parameter	struct search_parameters * param	2622:59:76273:76303	1022364	2	True				
ANR	1022434	ParameterType	struct search_parameters *		1022364	0					
ANR	1022435	Identifier	param		1022364	1					
ANR	1022436	CFGEntryNode	ENTRY		1022364		True				
ANR	1022437	CFGExitNode	EXIT		1022364		True				
ANR	1022438	Symbol	p		1022364						
ANR	1022439	Symbol	core		1022364						
ANR	1022440	Symbol	p -> itv		1022364						
ANR	1022441	Symbol	NULL		1022364						
ANR	1022442	Symbol	param		1022364						
ANR	1022443	Symbol	count		1022364						
ANR	1022444	Symbol	p -> itv . addr		1022364						
ANR	1022445	Symbol	iter		1022364						
ANR	1022446	Symbol	* p		1022364						
ANR	1022447	Symbol	r_itv_end		1022364						
ANR	1022448	Function	isArm	2633:0:76523:76760							
ANR	1022449	FunctionDef	isArm (RCore * core)		1022448	0					
ANR	1022450	CompoundStatement		2633:31:76554:76760	1022448	0					
ANR	1022451	IdentifierDeclStatement	RAsm * as = core ? core -> assembler : NULL ;	2634:1:76557:76597	1022448	0	True				
ANR	1022452	IdentifierDecl	* as = core ? core -> assembler : NULL		1022448	0					
ANR	1022453	IdentifierDeclType	RAsm *		1022448	0					
ANR	1022454	Identifier	as		1022448	1					
ANR	1022455	AssignmentExpression	* as = core ? core -> assembler : NULL		1022448	2		=			
ANR	1022456	Identifier	as		1022448	0					
ANR	1022457	ConditionalExpression	core ? core -> assembler : NULL		1022448	1					
ANR	1022458	Condition	core		1022448	0					
ANR	1022459	Identifier	core		1022448	0					
ANR	1022460	PtrMemberAccess	core -> assembler		1022448	1					
ANR	1022461	Identifier	core		1022448	0					
ANR	1022462	Identifier	assembler		1022448	1					
ANR	1022463	Identifier	NULL		1022448	2					
ANR	1022464	IfStatement	if ( as && as -> cur && as -> cur -> arch )		1022448	1					
ANR	1022465	Condition	as && as -> cur && as -> cur -> arch	2635:5:76604:76633	1022448	0	True				
ANR	1022466	AndExpression	as && as -> cur && as -> cur -> arch		1022448	0		&&			
ANR	1022467	Identifier	as		1022448	0					
ANR	1022468	AndExpression	as -> cur && as -> cur -> arch		1022448	1		&&			
ANR	1022469	PtrMemberAccess	as -> cur		1022448	0					
ANR	1022470	Identifier	as		1022448	0					
ANR	1022471	Identifier	cur		1022448	1					
ANR	1022472	PtrMemberAccess	as -> cur -> arch		1022448	1					
ANR	1022473	PtrMemberAccess	as -> cur		1022448	0					
ANR	1022474	Identifier	as		1022448	0					
ANR	1022475	Identifier	cur		1022448	1					
ANR	1022476	Identifier	arch		1022448	1					
ANR	1022477	CompoundStatement		3:37:81:81	1022448	1					
ANR	1022478	IfStatement	"if ( r_str_startswith ( as -> cur -> arch , ""arm"" ) )"		1022448	0					
ANR	1022479	Condition	"r_str_startswith ( as -> cur -> arch , ""arm"" )"	2636:6:76644:76682	1022448	0	True				
ANR	1022480	CallExpression	"r_str_startswith ( as -> cur -> arch , ""arm"" )"		1022448	0					
ANR	1022481	Callee	r_str_startswith		1022448	0					
ANR	1022482	Identifier	r_str_startswith		1022448	0					
ANR	1022483	ArgumentList	as -> cur -> arch		1022448	1					
ANR	1022484	Argument	as -> cur -> arch		1022448	0					
ANR	1022485	PtrMemberAccess	as -> cur -> arch		1022448	0					
ANR	1022486	PtrMemberAccess	as -> cur		1022448	0					
ANR	1022487	Identifier	as		1022448	0					
ANR	1022488	Identifier	cur		1022448	1					
ANR	1022489	Identifier	arch		1022448	1					
ANR	1022490	Argument	"""arm"""		1022448	1					
ANR	1022491	PrimaryExpression	"""arm"""		1022448	0					
ANR	1022492	CompoundStatement		4:47:130:130	1022448	1					
ANR	1022493	IfStatement	if ( as -> cur -> bits < 64 )		1022448	0					
ANR	1022494	Condition	as -> cur -> bits < 64	2637:7:76694:76711	1022448	0	True				
ANR	1022495	RelationalExpression	as -> cur -> bits < 64		1022448	0		<			
ANR	1022496	PtrMemberAccess	as -> cur -> bits		1022448	0					
ANR	1022497	PtrMemberAccess	as -> cur		1022448	0					
ANR	1022498	Identifier	as		1022448	0					
ANR	1022499	Identifier	cur		1022448	1					
ANR	1022500	Identifier	bits		1022448	1					
ANR	1022501	PrimaryExpression	64		1022448	1					
ANR	1022502	CompoundStatement		5:27:159:159	1022448	1					
ANR	1022503	ReturnStatement	return true ;	2638:4:76720:76731	1022448	0	True				
ANR	1022504	Identifier	true		1022448	0					
ANR	1022505	ReturnStatement	return false ;	2642:1:76746:76758	1022448	2	True				
ANR	1022506	Identifier	false		1022448	0					
ANR	1022507	ReturnType	static bool		1022448	1					
ANR	1022508	Identifier	isArm		1022448	2					
ANR	1022509	ParameterList	RCore * core		1022448	3					
ANR	1022510	Parameter	RCore * core	2633:18:76541:76551	1022448	0	True				
ANR	1022511	ParameterType	RCore *		1022448	0					
ANR	1022512	Identifier	core		1022448	1					
ANR	1022513	CFGEntryNode	ENTRY		1022448		True				
ANR	1022514	CFGExitNode	EXIT		1022448		True				
ANR	1022515	Symbol	r_str_startswith		1022448						
ANR	1022516	Symbol	as -> cur -> bits		1022448						
ANR	1022517	Symbol	NULL		1022448						
ANR	1022518	Symbol	* core		1022448						
ANR	1022519	Symbol	false		1022448						
ANR	1022520	Symbol	core -> assembler		1022448						
ANR	1022521	Symbol	as -> cur -> arch		1022448						
ANR	1022522	Symbol	core		1022448						
ANR	1022523	Symbol	as		1022448						
ANR	1022524	Symbol	true		1022448						
ANR	1022525	Symbol	* as -> cur		1022448						
ANR	1022526	Symbol	* as		1022448						
ANR	1022527	Symbol	* * as		1022448						
ANR	1022528	Symbol	as -> cur		1022448						
ANR	1022529	Function	_CbInRangeSearchV	2645:0:76763:77792							
ANR	1022530	FunctionDef	"_CbInRangeSearchV (RCore * core , ut64 from , ut64 to , int vsize , bool asterisk , int count)"		1022529	0					
ANR	1022531	CompoundStatement		2645:93:76856:77792	1022529	0					
ANR	1022532	IdentifierDeclStatement	bool isarm = isArm ( core ) ;	2646:1:76859:76884	1022529	0	True				
ANR	1022533	IdentifierDecl	isarm = isArm ( core )		1022529	0					
ANR	1022534	IdentifierDeclType	bool		1022529	0					
ANR	1022535	Identifier	isarm		1022529	1					
ANR	1022536	AssignmentExpression	isarm = isArm ( core )		1022529	2		=			
ANR	1022537	Identifier	isarm		1022529	0					
ANR	1022538	CallExpression	isArm ( core )		1022529	1					
ANR	1022539	Callee	isArm		1022529	0					
ANR	1022540	Identifier	isArm		1022529	0					
ANR	1022541	ArgumentList	core		1022529	1					
ANR	1022542	Argument	core		1022529	0					
ANR	1022543	Identifier	core		1022529	0					
ANR	1022544	IdentifierDeclStatement	"const char * prefix = r_config_get ( core -> config , ""search.prefix"" ) ;"	2649:1:77001:77066	1022529	1	True				
ANR	1022545	IdentifierDecl	"* prefix = r_config_get ( core -> config , ""search.prefix"" )"		1022529	0					
ANR	1022546	IdentifierDeclType	const char *		1022529	0					
ANR	1022547	Identifier	prefix		1022529	1					
ANR	1022548	AssignmentExpression	"* prefix = r_config_get ( core -> config , ""search.prefix"" )"		1022529	2		=			
ANR	1022549	Identifier	prefix		1022529	0					
ANR	1022550	CallExpression	"r_config_get ( core -> config , ""search.prefix"" )"		1022529	1					
ANR	1022551	Callee	r_config_get		1022529	0					
ANR	1022552	Identifier	r_config_get		1022529	0					
ANR	1022553	ArgumentList	core -> config		1022529	1					
ANR	1022554	Argument	core -> config		1022529	0					
ANR	1022555	PtrMemberAccess	core -> config		1022529	0					
ANR	1022556	Identifier	core		1022529	0					
ANR	1022557	Identifier	config		1022529	1					
ANR	1022558	Argument	"""search.prefix"""		1022529	1					
ANR	1022559	PrimaryExpression	"""search.prefix"""		1022529	0					
ANR	1022560	IfStatement	if ( isarm )		1022529	2					
ANR	1022561	Condition	isarm	2650:5:77073:77077	1022529	0	True				
ANR	1022562	Identifier	isarm		1022529	0					
ANR	1022563	CompoundStatement		6:12:223:223	1022529	1					
ANR	1022564	IfStatement	if ( to & 1 )		1022529	0					
ANR	1022565	Condition	to & 1	2651:6:77088:77093	1022529	0	True				
ANR	1022566	BitAndExpression	to & 1		1022529	0		&			
ANR	1022567	Identifier	to		1022529	0					
ANR	1022568	PrimaryExpression	1		1022529	1					
ANR	1022569	CompoundStatement		7:14:239:239	1022529	1					
ANR	1022570	ExpressionStatement	to --	2652:3:77101:77105	1022529	0	True				
ANR	1022571	PostIncDecOperationExpression	to --		1022529	0					
ANR	1022572	Identifier	to		1022529	0					
ANR	1022573	IncDec	--		1022529	1					
ANR	1022574	IfStatement	if ( ! json )		1022529	3					
ANR	1022575	Condition	! json	2655:5:77119:77123	1022529	0	True				
ANR	1022576	UnaryOperationExpression	! json		1022529	0					
ANR	1022577	UnaryOperator	!		1022529	0					
ANR	1022578	Identifier	json		1022529	1					
ANR	1022579	CompoundStatement		11:12:269:269	1022529	1					
ANR	1022580	Statement	r_cons_printf	2656:2:77130:77142	1022529	0	True				
ANR	1022581	Statement	(	2656:16:77144:77144	1022529	1	True				
ANR	1022582	Statement	"""0x%"""	2656:17:77145:77149	1022529	2	True				
ANR	1022583	Statement	PFMT64x	2656:22:77150:77156	1022529	3	True				
ANR	1022584	Statement	""": 0x%"""	2656:30:77158:77164	1022529	4	True				
ANR	1022585	Statement	PFMT64x	2656:37:77165:77171	1022529	5	True				
ANR	1022586	Statement	"""\\n"""	2656:44:77172:77175	1022529	6	True				
ANR	1022587	Statement	","	2656:48:77176:77176	1022529	7	True				
ANR	1022588	Statement	from	2656:50:77178:77181	1022529	8	True				
ANR	1022589	Statement	","	2656:54:77182:77182	1022529	9	True				
ANR	1022590	Statement	to	2656:56:77184:77185	1022529	10	True				
ANR	1022591	Statement	)	2656:58:77186:77186	1022529	11	True				
ANR	1022592	ExpressionStatement		2656:59:77187:77187	1022529	12	True				
ANR	1022593	ElseStatement	else		1022529	0					
ANR	1022594	CompoundStatement		13:8:340:340	1022529	0					
ANR	1022595	IfStatement	if ( count >= 1 )		1022529	0					
ANR	1022596	Condition	count >= 1	2658:6:77205:77214	1022529	0	True				
ANR	1022597	RelationalExpression	count >= 1		1022529	0		>=			
ANR	1022598	Identifier	count		1022529	0					
ANR	1022599	PrimaryExpression	1		1022529	1					
ANR	1022600	CompoundStatement		14:18:360:360	1022529	1					
ANR	1022601	ExpressionStatement	"r_cons_printf ( "","" )"	2659:3:77222:77241	1022529	0	True				
ANR	1022602	CallExpression	"r_cons_printf ( "","" )"		1022529	0					
ANR	1022603	Callee	r_cons_printf		1022529	0					
ANR	1022604	Identifier	r_cons_printf		1022529	0					
ANR	1022605	ArgumentList	""","""		1022529	1					
ANR	1022606	Argument	""","""		1022529	0					
ANR	1022607	PrimaryExpression	""","""		1022529	0					
ANR	1022608	Statement	r_cons_printf	2661:2:77249:77261	1022529	1	True				
ANR	1022609	Statement	(	2661:16:77263:77263	1022529	2	True				
ANR	1022610	Statement	"""{\\""offset\\"":%"""	2661:17:77264:77278	1022529	3	True				
ANR	1022611	Statement	PFMT64d	2661:32:77279:77285	1022529	4	True				
ANR	1022612	Statement	""",\\""value\\"":%"""	2661:40:77287:77300	1022529	5	True				
ANR	1022613	Statement	PFMT64d	2661:54:77301:77307	1022529	6	True				
ANR	1022614	Statement	"""}"""	2661:62:77309:77311	1022529	7	True				
ANR	1022615	Statement	","	2661:65:77312:77312	1022529	8	True				
ANR	1022616	Statement	from	2662:4:77318:77321	1022529	9	True				
ANR	1022617	Statement	","	2662:8:77322:77322	1022529	10	True				
ANR	1022618	Statement	to	2662:10:77324:77325	1022529	11	True				
ANR	1022619	Statement	)	2662:12:77326:77326	1022529	12	True				
ANR	1022620	ExpressionStatement		2662:13:77327:77327	1022529	13	True				
ANR	1022621	Statement	r_core_cmdf	2664:1:77333:77343	1022529	4	True				
ANR	1022622	Statement	(	2664:13:77345:77345	1022529	5	True				
ANR	1022623	Statement	core	2664:14:77346:77349	1022529	6	True				
ANR	1022624	Statement	","	2664:18:77350:77350	1022529	7	True				
ANR	1022625	Statement	"""f %s.value.0x%08"""	2664:20:77352:77369	1022529	8	True				
ANR	1022626	Statement	PFMT64x	2664:38:77370:77376	1022529	9	True				
ANR	1022627	Statement	""" %d = 0x%08"""	2664:45:77377:77389	1022529	10	True				
ANR	1022628	Statement	PFMT64x	2664:58:77390:77396	1022529	11	True				
ANR	1022629	Statement	""" \\n"""	2664:65:77397:77401	1022529	12	True				
ANR	1022630	Statement	","	2664:70:77402:77402	1022529	13	True				
ANR	1022631	Statement	prefix	2664:72:77404:77409	1022529	14	True				
ANR	1022632	Statement	","	2664:78:77410:77410	1022529	15	True				
ANR	1022633	Statement	to	2664:80:77412:77413	1022529	16	True				
ANR	1022634	Statement	","	2664:82:77414:77414	1022529	17	True				
ANR	1022635	Statement	vsize	2664:84:77416:77420	1022529	18	True				
ANR	1022636	Statement	","	2664:89:77421:77421	1022529	19	True				
ANR	1022637	Statement	to	2664:91:77423:77424	1022529	20	True				
ANR	1022638	Statement	)	2664:93:77425:77425	1022529	21	True				
ANR	1022639	ExpressionStatement		2664:94:77426:77426	1022529	22	True				
ANR	1022640	Statement	r_core_cmdf	2665:1:77453:77463	1022529	23	True				
ANR	1022641	Statement	(	2665:13:77465:77465	1022529	24	True				
ANR	1022642	Statement	core	2665:14:77466:77469	1022529	25	True				
ANR	1022643	Statement	","	2665:18:77470:77470	1022529	26	True				
ANR	1022644	Statement	"""f %s.offset.0x%08"""	2665:20:77472:77490	1022529	27	True				
ANR	1022645	Statement	PFMT64x	2665:39:77491:77497	1022529	28	True				
ANR	1022646	Statement	""" %d = 0x%08"""	2665:46:77498:77510	1022529	29	True				
ANR	1022647	Statement	PFMT64x	2665:59:77511:77517	1022529	30	True				
ANR	1022648	Statement	""" \\n"""	2665:67:77519:77523	1022529	31	True				
ANR	1022649	Statement	","	2665:72:77524:77524	1022529	32	True				
ANR	1022650	Statement	prefix	2665:74:77526:77531	1022529	33	True				
ANR	1022651	Statement	","	2665:80:77532:77532	1022529	34	True				
ANR	1022652	Statement	from	2665:82:77534:77537	1022529	35	True				
ANR	1022653	Statement	","	2665:86:77538:77538	1022529	36	True				
ANR	1022654	Statement	vsize	2665:88:77540:77544	1022529	37	True				
ANR	1022655	Statement	","	2665:93:77545:77545	1022529	38	True				
ANR	1022656	Statement	from	2665:95:77547:77550	1022529	39	True				
ANR	1022657	Statement	)	2665:99:77551:77551	1022529	40	True				
ANR	1022658	ExpressionStatement		2665:100:77552:77552	1022529	41	True				
ANR	1022659	IdentifierDeclStatement	"const char * cmdHit = r_config_get ( core -> config , ""cmd.hit"" ) ;"	2666:1:77580:77639	1022529	42	True				
ANR	1022660	IdentifierDecl	"* cmdHit = r_config_get ( core -> config , ""cmd.hit"" )"		1022529	0					
ANR	1022661	IdentifierDeclType	const char *		1022529	0					
ANR	1022662	Identifier	cmdHit		1022529	1					
ANR	1022663	AssignmentExpression	"* cmdHit = r_config_get ( core -> config , ""cmd.hit"" )"		1022529	2		=			
ANR	1022664	Identifier	cmdHit		1022529	0					
ANR	1022665	CallExpression	"r_config_get ( core -> config , ""cmd.hit"" )"		1022529	1					
ANR	1022666	Callee	r_config_get		1022529	0					
ANR	1022667	Identifier	r_config_get		1022529	0					
ANR	1022668	ArgumentList	core -> config		1022529	1					
ANR	1022669	Argument	core -> config		1022529	0					
ANR	1022670	PtrMemberAccess	core -> config		1022529	0					
ANR	1022671	Identifier	core		1022529	0					
ANR	1022672	Identifier	config		1022529	1					
ANR	1022673	Argument	"""cmd.hit"""		1022529	1					
ANR	1022674	PrimaryExpression	"""cmd.hit"""		1022529	0					
ANR	1022675	IfStatement	if ( cmdHit && * cmdHit )		1022529	43					
ANR	1022676	Condition	cmdHit && * cmdHit	2667:5:77646:77662	1022529	0	True				
ANR	1022677	AndExpression	cmdHit && * cmdHit		1022529	0		&&			
ANR	1022678	Identifier	cmdHit		1022529	0					
ANR	1022679	UnaryOperationExpression	* cmdHit		1022529	1					
ANR	1022680	UnaryOperator	*		1022529	0					
ANR	1022681	Identifier	cmdHit		1022529	1					
ANR	1022682	CompoundStatement		24:2:812:836	1022529	1					
ANR	1022683	IdentifierDeclStatement	ut64 addr = core -> offset ;	2668:2:77669:77693	1022529	0	True				
ANR	1022684	IdentifierDecl	addr = core -> offset		1022529	0					
ANR	1022685	IdentifierDeclType	ut64		1022529	0					
ANR	1022686	Identifier	addr		1022529	1					
ANR	1022687	AssignmentExpression	addr = core -> offset		1022529	2		=			
ANR	1022688	Identifier	addr		1022529	0					
ANR	1022689	PtrMemberAccess	core -> offset		1022529	1					
ANR	1022690	Identifier	core		1022529	0					
ANR	1022691	Identifier	offset		1022529	1					
ANR	1022692	ExpressionStatement	"r_core_seek ( core , from , 1 )"	2669:2:77697:77724	1022529	1	True				
ANR	1022693	CallExpression	"r_core_seek ( core , from , 1 )"		1022529	0					
ANR	1022694	Callee	r_core_seek		1022529	0					
ANR	1022695	Identifier	r_core_seek		1022529	0					
ANR	1022696	ArgumentList	core		1022529	1					
ANR	1022697	Argument	core		1022529	0					
ANR	1022698	Identifier	core		1022529	0					
ANR	1022699	Argument	from		1022529	1					
ANR	1022700	Identifier	from		1022529	0					
ANR	1022701	Argument	1		1022529	2					
ANR	1022702	PrimaryExpression	1		1022529	0					
ANR	1022703	ExpressionStatement	"r_core_cmd ( core , cmdHit , 0 )"	2670:2:77728:77756	1022529	2	True				
ANR	1022704	CallExpression	"r_core_cmd ( core , cmdHit , 0 )"		1022529	0					
ANR	1022705	Callee	r_core_cmd		1022529	0					
ANR	1022706	Identifier	r_core_cmd		1022529	0					
ANR	1022707	ArgumentList	core		1022529	1					
ANR	1022708	Argument	core		1022529	0					
ANR	1022709	Identifier	core		1022529	0					
ANR	1022710	Argument	cmdHit		1022529	1					
ANR	1022711	Identifier	cmdHit		1022529	0					
ANR	1022712	Argument	0		1022529	2					
ANR	1022713	PrimaryExpression	0		1022529	0					
ANR	1022714	ExpressionStatement	"r_core_seek ( core , addr , 1 )"	2671:2:77760:77787	1022529	3	True				
ANR	1022715	CallExpression	"r_core_seek ( core , addr , 1 )"		1022529	0					
ANR	1022716	Callee	r_core_seek		1022529	0					
ANR	1022717	Identifier	r_core_seek		1022529	0					
ANR	1022718	ArgumentList	core		1022529	1					
ANR	1022719	Argument	core		1022529	0					
ANR	1022720	Identifier	core		1022529	0					
ANR	1022721	Argument	addr		1022529	1					
ANR	1022722	Identifier	addr		1022529	0					
ANR	1022723	Argument	1		1022529	2					
ANR	1022724	PrimaryExpression	1		1022529	0					
ANR	1022725	ReturnType	void		1022529	1					
ANR	1022726	Identifier	_CbInRangeSearchV		1022529	2					
ANR	1022727	ParameterList	"RCore * core , ut64 from , ut64 to , int vsize , bool asterisk , int count"		1022529	3					
ANR	1022728	Parameter	RCore * core	2645:23:76786:76796	1022529	0	True				
ANR	1022729	ParameterType	RCore *		1022529	0					
ANR	1022730	Identifier	core		1022529	1					
ANR	1022731	Parameter	ut64 from	2645:36:76799:76807	1022529	1	True				
ANR	1022732	ParameterType	ut64		1022529	0					
ANR	1022733	Identifier	from		1022529	1					
ANR	1022734	Parameter	ut64 to	2645:47:76810:76816	1022529	2	True				
ANR	1022735	ParameterType	ut64		1022529	0					
ANR	1022736	Identifier	to		1022529	1					
ANR	1022737	Parameter	int vsize	2645:56:76819:76827	1022529	3	True				
ANR	1022738	ParameterType	int		1022529	0					
ANR	1022739	Identifier	vsize		1022529	1					
ANR	1022740	Parameter	bool asterisk	2645:67:76830:76842	1022529	4	True				
ANR	1022741	ParameterType	bool		1022529	0					
ANR	1022742	Identifier	asterisk		1022529	1					
ANR	1022743	Parameter	int count	2645:82:76845:76853	1022529	5	True				
ANR	1022744	ParameterType	int		1022529	0					
ANR	1022745	Identifier	count		1022529	1					
ANR	1022746	CFGEntryNode	ENTRY		1022529		True				
ANR	1022747	CFGExitNode	EXIT		1022529		True				
ANR	1022748	Symbol	core -> config		1022529						
ANR	1022749	Symbol	vsize		1022529						
ANR	1022750	Symbol	prefix		1022529						
ANR	1022751	Symbol	asterisk		1022529						
ANR	1022752	Symbol	cmdHit		1022529						
ANR	1022753	Symbol	count		1022529						
ANR	1022754	Symbol	r_config_get		1022529						
ANR	1022755	Symbol	* core		1022529						
ANR	1022756	Symbol	core -> offset		1022529						
ANR	1022757	Symbol	isArm		1022529						
ANR	1022758	Symbol	isarm		1022529						
ANR	1022759	Symbol	core		1022529						
ANR	1022760	Symbol	* cmdHit		1022529						
ANR	1022761	Symbol	json		1022529						
ANR	1022762	Symbol	from		1022529						
ANR	1022763	Symbol	to		1022529						
ANR	1022764	Symbol	addr		1022529						
ANR	1022765	Function	v_writebuf	2675:0:77795:78784							
ANR	1022766	FunctionDef	"v_writebuf (RCore * core , RList * nums , int len , char ch , int bsize)"		1022765	0					
ANR	1022767	CompoundStatement		2675:78:77873:78784	1022765	0					
ANR	1022768	IdentifierDeclStatement	ut8 * ptr ;	2676:1:77876:77884	1022765	0	True				
ANR	1022769	IdentifierDecl	* ptr		1022765	0					
ANR	1022770	IdentifierDeclType	ut8 *		1022765	0					
ANR	1022771	Identifier	ptr		1022765	1					
ANR	1022772	IdentifierDeclStatement	ut64 n64 ;	2677:1:77887:77895	1022765	1	True				
ANR	1022773	IdentifierDecl	n64		1022765	0					
ANR	1022774	IdentifierDeclType	ut64		1022765	0					
ANR	1022775	Identifier	n64		1022765	1					
ANR	1022776	IdentifierDeclStatement	ut32 n32 ;	2678:1:77898:77906	1022765	2	True				
ANR	1022777	IdentifierDecl	n32		1022765	0					
ANR	1022778	IdentifierDeclType	ut32		1022765	0					
ANR	1022779	Identifier	n32		1022765	1					
ANR	1022780	IdentifierDeclStatement	ut16 n16 ;	2679:1:77909:77917	1022765	3	True				
ANR	1022781	IdentifierDecl	n16		1022765	0					
ANR	1022782	IdentifierDeclType	ut16		1022765	0					
ANR	1022783	Identifier	n16		1022765	1					
ANR	1022784	IdentifierDeclStatement	ut8 n8 ;	2680:1:77920:77926	1022765	4	True				
ANR	1022785	IdentifierDecl	n8		1022765	0					
ANR	1022786	IdentifierDeclType	ut8		1022765	0					
ANR	1022787	Identifier	n8		1022765	1					
ANR	1022788	IdentifierDeclStatement	int i = 0 ;	2681:1:77929:77938	1022765	5	True				
ANR	1022789	IdentifierDecl	i = 0		1022765	0					
ANR	1022790	IdentifierDeclType	int		1022765	0					
ANR	1022791	Identifier	i		1022765	1					
ANR	1022792	AssignmentExpression	i = 0		1022765	2		=			
ANR	1022793	Identifier	i		1022765	0					
ANR	1022794	PrimaryExpression	0		1022765	1					
ANR	1022795	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 , bsize ) ;"	2682:1:77941:77969	1022765	6	True				
ANR	1022796	IdentifierDecl	"* buf = calloc ( 1 , bsize )"		1022765	0					
ANR	1022797	IdentifierDeclType	ut8 *		1022765	0					
ANR	1022798	Identifier	buf		1022765	1					
ANR	1022799	AssignmentExpression	"* buf = calloc ( 1 , bsize )"		1022765	2		=			
ANR	1022800	Identifier	buf		1022765	0					
ANR	1022801	CallExpression	"calloc ( 1 , bsize )"		1022765	1					
ANR	1022802	Callee	calloc		1022765	0					
ANR	1022803	Identifier	calloc		1022765	0					
ANR	1022804	ArgumentList	1		1022765	1					
ANR	1022805	Argument	1		1022765	0					
ANR	1022806	PrimaryExpression	1		1022765	0					
ANR	1022807	Argument	bsize		1022765	1					
ANR	1022808	Identifier	bsize		1022765	0					
ANR	1022809	IfStatement	if ( ! buf )		1022765	7					
ANR	1022810	Condition	! buf	2683:5:77976:77979	1022765	0	True				
ANR	1022811	UnaryOperationExpression	! buf		1022765	0					
ANR	1022812	UnaryOperator	!		1022765	0					
ANR	1022813	Identifier	buf		1022765	1					
ANR	1022814	CompoundStatement		9:11:108:108	1022765	1					
ANR	1022815	ExpressionStatement	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"	2684:2:77986:78033	1022765	0	True				
ANR	1022816	CallExpression	"eprintf ( ""Cannot allocate %d byte(s)\\n"" , bsize )"		1022765	0					
ANR	1022817	Callee	eprintf		1022765	0					
ANR	1022818	Identifier	eprintf		1022765	0					
ANR	1022819	ArgumentList	"""Cannot allocate %d byte(s)\\n"""		1022765	1					
ANR	1022820	Argument	"""Cannot allocate %d byte(s)\\n"""		1022765	0					
ANR	1022821	PrimaryExpression	"""Cannot allocate %d byte(s)\\n"""		1022765	0					
ANR	1022822	Argument	bsize		1022765	1					
ANR	1022823	Identifier	bsize		1022765	0					
ANR	1022824	ExpressionStatement	free ( buf )	2685:2:78037:78047	1022765	1	True				
ANR	1022825	CallExpression	free ( buf )		1022765	0					
ANR	1022826	Callee	free		1022765	0					
ANR	1022827	Identifier	free		1022765	0					
ANR	1022828	ArgumentList	buf		1022765	1					
ANR	1022829	Argument	buf		1022765	0					
ANR	1022830	Identifier	buf		1022765	0					
ANR	1022831	ReturnStatement	return NULL ;	2686:2:78051:78062	1022765	2	True				
ANR	1022832	Identifier	NULL		1022765	0					
ANR	1022833	ExpressionStatement	ptr = buf	2688:1:78068:78077	1022765	8	True				
ANR	1022834	AssignmentExpression	ptr = buf		1022765	0		=			
ANR	1022835	Identifier	ptr		1022765	0					
ANR	1022836	Identifier	buf		1022765	1					
ANR	1022837	ForStatement	for ( i = 0 ; i < len ; i ++ )		1022765	9					
ANR	1022838	ForInit	i = 0 ;	2689:6:78085:78090	1022765	0	True				
ANR	1022839	AssignmentExpression	i = 0		1022765	0		=			
ANR	1022840	Identifier	i		1022765	0					
ANR	1022841	PrimaryExpression	0		1022765	1					
ANR	1022842	Condition	i < len	2689:13:78092:78098	1022765	1	True				
ANR	1022843	RelationalExpression	i < len		1022765	0		<			
ANR	1022844	Identifier	i		1022765	0					
ANR	1022845	Identifier	len		1022765	1					
ANR	1022846	PostIncDecOperationExpression	i ++	2689:22:78101:78103	1022765	2	True				
ANR	1022847	Identifier	i		1022765	0					
ANR	1022848	IncDec	++		1022765	1					
ANR	1022849	CompoundStatement		15:27:232:232	1022765	3					
ANR	1022850	SwitchStatement	switch ( ch )		1022765	0					
ANR	1022851	Condition	ch	2690:10:78118:78119	1022765	0	True				
ANR	1022852	Identifier	ch		1022765	0					
ANR	1022853	CompoundStatement		16:14:248:248	1022765	1					
ANR	1022854	Label	case '1' :	2691:2:78126:78134	1022765	0	True				
ANR	1022855	ExpressionStatement	"n8 = r_num_math ( core -> num , r_list_pop_head ( nums ) )"	2692:3:78139:78190	1022765	1	True				
ANR	1022856	AssignmentExpression	"n8 = r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	0		=			
ANR	1022857	Identifier	n8		1022765	0					
ANR	1022858	CallExpression	"r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	1					
ANR	1022859	Callee	r_num_math		1022765	0					
ANR	1022860	Identifier	r_num_math		1022765	0					
ANR	1022861	ArgumentList	core -> num		1022765	1					
ANR	1022862	Argument	core -> num		1022765	0					
ANR	1022863	PtrMemberAccess	core -> num		1022765	0					
ANR	1022864	Identifier	core		1022765	0					
ANR	1022865	Identifier	num		1022765	1					
ANR	1022866	Argument	r_list_pop_head ( nums )		1022765	1					
ANR	1022867	CallExpression	r_list_pop_head ( nums )		1022765	0					
ANR	1022868	Callee	r_list_pop_head		1022765	0					
ANR	1022869	Identifier	r_list_pop_head		1022765	0					
ANR	1022870	ArgumentList	nums		1022765	1					
ANR	1022871	Argument	nums		1022765	0					
ANR	1022872	Identifier	nums		1022765	0					
ANR	1022873	ExpressionStatement	"r_write_le8 ( ptr , n8 )"	2693:3:78195:78216	1022765	2	True				
ANR	1022874	CallExpression	"r_write_le8 ( ptr , n8 )"		1022765	0					
ANR	1022875	Callee	r_write_le8		1022765	0					
ANR	1022876	Identifier	r_write_le8		1022765	0					
ANR	1022877	ArgumentList	ptr		1022765	1					
ANR	1022878	Argument	ptr		1022765	0					
ANR	1022879	Identifier	ptr		1022765	0					
ANR	1022880	Argument	n8		1022765	1					
ANR	1022881	Identifier	n8		1022765	0					
ANR	1022882	ExpressionStatement	ptr = ( ut8 * ) ptr + sizeof ( ut8 )	2694:3:78221:78253	1022765	3	True				
ANR	1022883	AssignmentExpression	ptr = ( ut8 * ) ptr + sizeof ( ut8 )		1022765	0		=			
ANR	1022884	Identifier	ptr		1022765	0					
ANR	1022885	AdditiveExpression	( ut8 * ) ptr + sizeof ( ut8 )		1022765	1		+			
ANR	1022886	CastExpression	( ut8 * ) ptr		1022765	0					
ANR	1022887	CastTarget	ut8 *		1022765	0					
ANR	1022888	Identifier	ptr		1022765	1					
ANR	1022889	SizeofExpression	sizeof ( ut8 )		1022765	1					
ANR	1022890	Sizeof	sizeof		1022765	0					
ANR	1022891	SizeofOperand	ut8		1022765	1					
ANR	1022892	BreakStatement	break ;	2695:3:78258:78263	1022765	4	True				
ANR	1022893	Label	case '2' :	2696:2:78267:78275	1022765	5	True				
ANR	1022894	ExpressionStatement	"n16 = r_num_math ( core -> num , r_list_pop_head ( nums ) )"	2697:3:78280:78332	1022765	6	True				
ANR	1022895	AssignmentExpression	"n16 = r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	0		=			
ANR	1022896	Identifier	n16		1022765	0					
ANR	1022897	CallExpression	"r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	1					
ANR	1022898	Callee	r_num_math		1022765	0					
ANR	1022899	Identifier	r_num_math		1022765	0					
ANR	1022900	ArgumentList	core -> num		1022765	1					
ANR	1022901	Argument	core -> num		1022765	0					
ANR	1022902	PtrMemberAccess	core -> num		1022765	0					
ANR	1022903	Identifier	core		1022765	0					
ANR	1022904	Identifier	num		1022765	1					
ANR	1022905	Argument	r_list_pop_head ( nums )		1022765	1					
ANR	1022906	CallExpression	r_list_pop_head ( nums )		1022765	0					
ANR	1022907	Callee	r_list_pop_head		1022765	0					
ANR	1022908	Identifier	r_list_pop_head		1022765	0					
ANR	1022909	ArgumentList	nums		1022765	1					
ANR	1022910	Argument	nums		1022765	0					
ANR	1022911	Identifier	nums		1022765	0					
ANR	1022912	ExpressionStatement	"r_write_le16 ( ptr , n16 )"	2698:3:78337:78360	1022765	7	True				
ANR	1022913	CallExpression	"r_write_le16 ( ptr , n16 )"		1022765	0					
ANR	1022914	Callee	r_write_le16		1022765	0					
ANR	1022915	Identifier	r_write_le16		1022765	0					
ANR	1022916	ArgumentList	ptr		1022765	1					
ANR	1022917	Argument	ptr		1022765	0					
ANR	1022918	Identifier	ptr		1022765	0					
ANR	1022919	Argument	n16		1022765	1					
ANR	1022920	Identifier	n16		1022765	0					
ANR	1022921	ExpressionStatement	ptr = ( ut8 * ) ptr + sizeof ( ut16 )	2699:3:78365:78398	1022765	8	True				
ANR	1022922	AssignmentExpression	ptr = ( ut8 * ) ptr + sizeof ( ut16 )		1022765	0		=			
ANR	1022923	Identifier	ptr		1022765	0					
ANR	1022924	AdditiveExpression	( ut8 * ) ptr + sizeof ( ut16 )		1022765	1		+			
ANR	1022925	CastExpression	( ut8 * ) ptr		1022765	0					
ANR	1022926	CastTarget	ut8 *		1022765	0					
ANR	1022927	Identifier	ptr		1022765	1					
ANR	1022928	SizeofExpression	sizeof ( ut16 )		1022765	1					
ANR	1022929	Sizeof	sizeof		1022765	0					
ANR	1022930	SizeofOperand	ut16		1022765	1					
ANR	1022931	BreakStatement	break ;	2700:3:78403:78408	1022765	9	True				
ANR	1022932	Label	case '4' :	2701:2:78412:78420	1022765	10	True				
ANR	1022933	ExpressionStatement	"n32 = ( ut32 ) r_num_math ( core -> num , r_list_pop_head ( nums ) )"	2702:3:78425:78483	1022765	11	True				
ANR	1022934	AssignmentExpression	"n32 = ( ut32 ) r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	0		=			
ANR	1022935	Identifier	n32		1022765	0					
ANR	1022936	CastExpression	"( ut32 ) r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	1					
ANR	1022937	CastTarget	ut32		1022765	0					
ANR	1022938	CallExpression	"r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	1					
ANR	1022939	Callee	r_num_math		1022765	0					
ANR	1022940	Identifier	r_num_math		1022765	0					
ANR	1022941	ArgumentList	core -> num		1022765	1					
ANR	1022942	Argument	core -> num		1022765	0					
ANR	1022943	PtrMemberAccess	core -> num		1022765	0					
ANR	1022944	Identifier	core		1022765	0					
ANR	1022945	Identifier	num		1022765	1					
ANR	1022946	Argument	r_list_pop_head ( nums )		1022765	1					
ANR	1022947	CallExpression	r_list_pop_head ( nums )		1022765	0					
ANR	1022948	Callee	r_list_pop_head		1022765	0					
ANR	1022949	Identifier	r_list_pop_head		1022765	0					
ANR	1022950	ArgumentList	nums		1022765	1					
ANR	1022951	Argument	nums		1022765	0					
ANR	1022952	Identifier	nums		1022765	0					
ANR	1022953	ExpressionStatement	"r_write_le32 ( ptr , n32 )"	2703:3:78488:78511	1022765	12	True				
ANR	1022954	CallExpression	"r_write_le32 ( ptr , n32 )"		1022765	0					
ANR	1022955	Callee	r_write_le32		1022765	0					
ANR	1022956	Identifier	r_write_le32		1022765	0					
ANR	1022957	ArgumentList	ptr		1022765	1					
ANR	1022958	Argument	ptr		1022765	0					
ANR	1022959	Identifier	ptr		1022765	0					
ANR	1022960	Argument	n32		1022765	1					
ANR	1022961	Identifier	n32		1022765	0					
ANR	1022962	ExpressionStatement	ptr = ( ut8 * ) ptr + sizeof ( ut32 )	2704:3:78516:78549	1022765	13	True				
ANR	1022963	AssignmentExpression	ptr = ( ut8 * ) ptr + sizeof ( ut32 )		1022765	0		=			
ANR	1022964	Identifier	ptr		1022765	0					
ANR	1022965	AdditiveExpression	( ut8 * ) ptr + sizeof ( ut32 )		1022765	1		+			
ANR	1022966	CastExpression	( ut8 * ) ptr		1022765	0					
ANR	1022967	CastTarget	ut8 *		1022765	0					
ANR	1022968	Identifier	ptr		1022765	1					
ANR	1022969	SizeofExpression	sizeof ( ut32 )		1022765	1					
ANR	1022970	Sizeof	sizeof		1022765	0					
ANR	1022971	SizeofOperand	ut32		1022765	1					
ANR	1022972	BreakStatement	break ;	2705:3:78554:78559	1022765	14	True				
ANR	1022973	Label	default :	2706:2:78563:78570	1022765	15	True				
ANR	1022974	Identifier	default		1022765	0					
ANR	1022975	Label	case '8' :	2707:2:78574:78582	1022765	16	True				
ANR	1022976	ExpressionStatement	"n64 = r_num_math ( core -> num , r_list_pop_head ( nums ) )"	2708:3:78587:78639	1022765	17	True				
ANR	1022977	AssignmentExpression	"n64 = r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	0		=			
ANR	1022978	Identifier	n64		1022765	0					
ANR	1022979	CallExpression	"r_num_math ( core -> num , r_list_pop_head ( nums ) )"		1022765	1					
ANR	1022980	Callee	r_num_math		1022765	0					
ANR	1022981	Identifier	r_num_math		1022765	0					
ANR	1022982	ArgumentList	core -> num		1022765	1					
ANR	1022983	Argument	core -> num		1022765	0					
ANR	1022984	PtrMemberAccess	core -> num		1022765	0					
ANR	1022985	Identifier	core		1022765	0					
ANR	1022986	Identifier	num		1022765	1					
ANR	1022987	Argument	r_list_pop_head ( nums )		1022765	1					
ANR	1022988	CallExpression	r_list_pop_head ( nums )		1022765	0					
ANR	1022989	Callee	r_list_pop_head		1022765	0					
ANR	1022990	Identifier	r_list_pop_head		1022765	0					
ANR	1022991	ArgumentList	nums		1022765	1					
ANR	1022992	Argument	nums		1022765	0					
ANR	1022993	Identifier	nums		1022765	0					
ANR	1022994	ExpressionStatement	"r_write_le64 ( ptr , n64 )"	2709:3:78644:78667	1022765	18	True				
ANR	1022995	CallExpression	"r_write_le64 ( ptr , n64 )"		1022765	0					
ANR	1022996	Callee	r_write_le64		1022765	0					
ANR	1022997	Identifier	r_write_le64		1022765	0					
ANR	1022998	ArgumentList	ptr		1022765	1					
ANR	1022999	Argument	ptr		1022765	0					
ANR	1023000	Identifier	ptr		1022765	0					
ANR	1023001	Argument	n64		1022765	1					
ANR	1023002	Identifier	n64		1022765	0					
ANR	1023003	ExpressionStatement	ptr = ( ut8 * ) ptr + sizeof ( ut64 )	2710:3:78672:78705	1022765	19	True				
ANR	1023004	AssignmentExpression	ptr = ( ut8 * ) ptr + sizeof ( ut64 )		1022765	0		=			
ANR	1023005	Identifier	ptr		1022765	0					
ANR	1023006	AdditiveExpression	( ut8 * ) ptr + sizeof ( ut64 )		1022765	1		+			
ANR	1023007	CastExpression	( ut8 * ) ptr		1022765	0					
ANR	1023008	CastTarget	ut8 *		1022765	0					
ANR	1023009	Identifier	ptr		1022765	1					
ANR	1023010	SizeofExpression	sizeof ( ut64 )		1022765	1					
ANR	1023011	Sizeof	sizeof		1022765	0					
ANR	1023012	SizeofOperand	ut64		1022765	1					
ANR	1023013	BreakStatement	break ;	2711:3:78710:78715	1022765	20	True				
ANR	1023014	IfStatement	if ( ptr > ptr + bsize )		1022765	1					
ANR	1023015	Condition	ptr > ptr + bsize	2713:6:78727:78743	1022765	0	True				
ANR	1023016	RelationalExpression	ptr > ptr + bsize		1022765	0		>			
ANR	1023017	Identifier	ptr		1022765	0					
ANR	1023018	AdditiveExpression	ptr + bsize		1022765	1		+			
ANR	1023019	Identifier	ptr		1022765	0					
ANR	1023020	Identifier	bsize		1022765	1					
ANR	1023021	CompoundStatement		39:25:872:872	1022765	1					
ANR	1023022	ReturnStatement	return NULL ;	2714:3:78751:78762	1022765	0	True				
ANR	1023023	Identifier	NULL		1022765	0					
ANR	1023024	ReturnStatement	return buf ;	2717:1:78772:78782	1022765	10	True				
ANR	1023025	Identifier	buf		1022765	0					
ANR	1023026	ReturnType	static ut8 *		1022765	1					
ANR	1023027	Identifier	v_writebuf		1022765	2					
ANR	1023028	ParameterList	"RCore * core , RList * nums , int len , char ch , int bsize"		1022765	3					
ANR	1023029	Parameter	RCore * core	2675:23:77818:77828	1022765	0	True				
ANR	1023030	ParameterType	RCore *		1022765	0					
ANR	1023031	Identifier	core		1022765	1					
ANR	1023032	Parameter	RList * nums	2675:36:77831:77841	1022765	1	True				
ANR	1023033	ParameterType	RList *		1022765	0					
ANR	1023034	Identifier	nums		1022765	1					
ANR	1023035	Parameter	int len	2675:49:77844:77850	1022765	2	True				
ANR	1023036	ParameterType	int		1022765	0					
ANR	1023037	Identifier	len		1022765	1					
ANR	1023038	Parameter	char ch	2675:58:77853:77859	1022765	3	True				
ANR	1023039	ParameterType	char		1022765	0					
ANR	1023040	Identifier	ch		1022765	1					
ANR	1023041	Parameter	int bsize	2675:67:77862:77870	1022765	4	True				
ANR	1023042	ParameterType	int		1022765	0					
ANR	1023043	Identifier	bsize		1022765	1					
ANR	1023044	CFGEntryNode	ENTRY		1022765		True				
ANR	1023045	CFGExitNode	EXIT		1022765		True				
ANR	1023046	Symbol	NULL		1022765						
ANR	1023047	Symbol	ch		1022765						
ANR	1023048	Symbol	* core		1022765						
ANR	1023049	Symbol	i		1022765						
ANR	1023050	Symbol	n8		1022765						
ANR	1023051	Symbol	calloc		1022765						
ANR	1023052	Symbol	n32		1022765						
ANR	1023053	Symbol	n64		1022765						
ANR	1023054	Symbol	ptr		1022765						
ANR	1023055	Symbol	r_num_math		1022765						
ANR	1023056	Symbol	core		1022765						
ANR	1023057	Symbol	n16		1022765						
ANR	1023058	Symbol	buf		1022765						
ANR	1023059	Symbol	r_list_pop_head		1022765						
ANR	1023060	Symbol	len		1022765						
ANR	1023061	Symbol	bsize		1022765						
ANR	1023062	Symbol	core -> num		1022765						
ANR	1023063	Symbol	nums		1022765						
ANR	1023064	Function	incBuffer	2721:0:78823:79012							
ANR	1023065	FunctionDef	"incBuffer (ut8 * buf , int bufsz)"		1023064	0					
ANR	1023066	CompoundStatement		2721:43:78866:79012	1023064	0					
ANR	1023067	IdentifierDeclStatement	int i = 0 ;	2722:1:78869:78878	1023064	0	True				
ANR	1023068	IdentifierDecl	i = 0		1023064	0					
ANR	1023069	IdentifierDeclType	int		1023064	0					
ANR	1023070	Identifier	i		1023064	1					
ANR	1023071	AssignmentExpression	i = 0		1023064	2		=			
ANR	1023072	Identifier	i		1023064	0					
ANR	1023073	PrimaryExpression	0		1023064	1					
ANR	1023074	WhileStatement	while ( i < bufsz )		1023064	1					
ANR	1023075	Condition	i < bufsz	2723:8:78888:78896	1023064	0	True				
ANR	1023076	RelationalExpression	i < bufsz		1023064	0		<			
ANR	1023077	Identifier	i		1023064	0					
ANR	1023078	Identifier	bufsz		1023064	1					
ANR	1023079	CompoundStatement		3:19:32:32	1023064	1					
ANR	1023080	ExpressionStatement	buf [ i ] ++	2724:2:78903:78911	1023064	0	True				
ANR	1023081	PostIncDecOperationExpression	buf [ i ] ++		1023064	0					
ANR	1023082	ArrayIndexing	buf [ i ]		1023064	0					
ANR	1023083	Identifier	buf		1023064	0					
ANR	1023084	Identifier	i		1023064	1					
ANR	1023085	IncDec	++		1023064	1					
ANR	1023086	IfStatement	if ( ! buf [ i ] )		1023064	1					
ANR	1023087	Condition	! buf [ i ]	2725:6:78919:78925	1023064	0	True				
ANR	1023088	UnaryOperationExpression	! buf [ i ]		1023064	0					
ANR	1023089	UnaryOperator	!		1023064	0					
ANR	1023090	ArrayIndexing	buf [ i ]		1023064	1					
ANR	1023091	Identifier	buf		1023064	0					
ANR	1023092	Identifier	i		1023064	1					
ANR	1023093	CompoundStatement		5:15:61:61	1023064	1					
ANR	1023094	ExpressionStatement	i ++	2726:3:78933:78936	1023064	0	True				
ANR	1023095	PostIncDecOperationExpression	i ++		1023064	0					
ANR	1023096	Identifier	i		1023064	0					
ANR	1023097	IncDec	++		1023064	1					
ANR	1023098	ContinueStatement	continue ;	2727:3:78941:78949	1023064	1	True				
ANR	1023099	BreakStatement	break ;	2729:2:78957:78962	1023064	2	True				
ANR	1023100	ReturnType	static void		1023064	1					
ANR	1023101	Identifier	incBuffer		1023064	2					
ANR	1023102	ParameterList	"ut8 * buf , int bufsz"		1023064	3					
ANR	1023103	Parameter	ut8 * buf	2721:22:78845:78852	1023064	0	True				
ANR	1023104	ParameterType	ut8 *		1023064	0					
ANR	1023105	Identifier	buf		1023064	1					
ANR	1023106	Parameter	int bufsz	2721:32:78855:78863	1023064	1	True				
ANR	1023107	ParameterType	int		1023064	0					
ANR	1023108	Identifier	bufsz		1023064	1					
ANR	1023109	CFGEntryNode	ENTRY		1023064		True				
ANR	1023110	CFGExitNode	EXIT		1023064		True				
ANR	1023111	Symbol	bufsz		1023064						
ANR	1023112	Symbol	buf		1023064						
ANR	1023113	Symbol	* buf		1023064						
ANR	1023114	Symbol	* i		1023064						
ANR	1023115	Symbol	i		1023064						
ANR	1023116	Function	incPrintBuffer	2734:0:79015:79200							
ANR	1023117	FunctionDef	"incPrintBuffer (ut8 * buf , int bufsz)"		1023116	0					
ANR	1023118	CompoundStatement		2734:48:79063:79200	1023116	0					
ANR	1023119	IdentifierDeclStatement	int i = 0 ;	2735:1:79066:79075	1023116	0	True				
ANR	1023120	IdentifierDecl	i = 0		1023116	0					
ANR	1023121	IdentifierDeclType	int		1023116	0					
ANR	1023122	Identifier	i		1023116	1					
ANR	1023123	AssignmentExpression	i = 0		1023116	2		=			
ANR	1023124	Identifier	i		1023116	0					
ANR	1023125	PrimaryExpression	0		1023116	1					
ANR	1023126	WhileStatement	while ( i < bufsz )		1023116	1					
ANR	1023127	Condition	i < bufsz	2736:8:79085:79093	1023116	0	True				
ANR	1023128	RelationalExpression	i < bufsz		1023116	0		<			
ANR	1023129	Identifier	i		1023116	0					
ANR	1023130	Identifier	bufsz		1023116	1					
ANR	1023131	CompoundStatement		3:19:32:32	1023116	1					
ANR	1023132	ExpressionStatement	buf [ i ] ++	2737:2:79100:79108	1023116	0	True				
ANR	1023133	PostIncDecOperationExpression	buf [ i ] ++		1023116	0					
ANR	1023134	ArrayIndexing	buf [ i ]		1023116	0					
ANR	1023135	Identifier	buf		1023116	0					
ANR	1023136	Identifier	i		1023116	1					
ANR	1023137	IncDec	++		1023116	1					
ANR	1023138	IfStatement	if ( ! buf [ i ] )		1023116	1					
ANR	1023139	Condition	! buf [ i ]	2738:6:79116:79122	1023116	0	True				
ANR	1023140	UnaryOperationExpression	! buf [ i ]		1023116	0					
ANR	1023141	UnaryOperator	!		1023116	0					
ANR	1023142	ArrayIndexing	buf [ i ]		1023116	1					
ANR	1023143	Identifier	buf		1023116	0					
ANR	1023144	Identifier	i		1023116	1					
ANR	1023145	CompoundStatement		5:15:61:61	1023116	1					
ANR	1023146	ExpressionStatement	i ++	2739:3:79130:79133	1023116	0	True				
ANR	1023147	PostIncDecOperationExpression	i ++		1023116	0					
ANR	1023148	Identifier	i		1023116	0					
ANR	1023149	IncDec	++		1023116	1					
ANR	1023150	ContinueStatement	continue ;	2740:3:79138:79146	1023116	1	True				
ANR	1023151	IfStatement	if ( IS_PRINTABLE ( buf [ i ] ) )		1023116	2					
ANR	1023152	Condition	IS_PRINTABLE ( buf [ i ] )	2742:6:79158:79178	1023116	0	True				
ANR	1023153	CallExpression	IS_PRINTABLE ( buf [ i ] )		1023116	0					
ANR	1023154	Callee	IS_PRINTABLE		1023116	0					
ANR	1023155	Identifier	IS_PRINTABLE		1023116	0					
ANR	1023156	ArgumentList	buf [ i ]		1023116	1					
ANR	1023157	Argument	buf [ i ]		1023116	0					
ANR	1023158	ArrayIndexing	buf [ i ]		1023116	0					
ANR	1023159	Identifier	buf		1023116	0					
ANR	1023160	Identifier	i		1023116	1					
ANR	1023161	CompoundStatement		9:29:117:117	1023116	1					
ANR	1023162	BreakStatement	break ;	2743:3:79186:79191	1023116	0	True				
ANR	1023163	ReturnType	static void		1023116	1					
ANR	1023164	Identifier	incPrintBuffer		1023116	2					
ANR	1023165	ParameterList	"ut8 * buf , int bufsz"		1023116	3					
ANR	1023166	Parameter	ut8 * buf	2734:27:79042:79049	1023116	0	True				
ANR	1023167	ParameterType	ut8 *		1023116	0					
ANR	1023168	Identifier	buf		1023116	1					
ANR	1023169	Parameter	int bufsz	2734:37:79052:79060	1023116	1	True				
ANR	1023170	ParameterType	int		1023116	0					
ANR	1023171	Identifier	bufsz		1023116	1					
ANR	1023172	CFGEntryNode	ENTRY		1023116		True				
ANR	1023173	CFGExitNode	EXIT		1023116		True				
ANR	1023174	Symbol	bufsz		1023116						
ANR	1023175	Symbol	buf		1023116						
ANR	1023176	Symbol	* buf		1023116						
ANR	1023177	Symbol	* i		1023116						
ANR	1023178	Symbol	IS_PRINTABLE		1023116						
ANR	1023179	Symbol	i		1023116						
ANR	1023180	Function	incLowerBuffer	2748:0:79203:79413							
ANR	1023181	FunctionDef	"incLowerBuffer (ut8 * buf , int bufsz)"		1023180	0					
ANR	1023182	CompoundStatement		2748:48:79251:79413	1023180	0					
ANR	1023183	IdentifierDeclStatement	int i = 0 ;	2749:1:79254:79263	1023180	0	True				
ANR	1023184	IdentifierDecl	i = 0		1023180	0					
ANR	1023185	IdentifierDeclType	int		1023180	0					
ANR	1023186	Identifier	i		1023180	1					
ANR	1023187	AssignmentExpression	i = 0		1023180	2		=			
ANR	1023188	Identifier	i		1023180	0					
ANR	1023189	PrimaryExpression	0		1023180	1					
ANR	1023190	WhileStatement	while ( i < bufsz )		1023180	1					
ANR	1023191	Condition	i < bufsz	2750:8:79273:79281	1023180	0	True				
ANR	1023192	RelationalExpression	i < bufsz		1023180	0		<			
ANR	1023193	Identifier	i		1023180	0					
ANR	1023194	Identifier	bufsz		1023180	1					
ANR	1023195	CompoundStatement		3:19:32:32	1023180	1					
ANR	1023196	ExpressionStatement	buf [ i ] ++	2751:2:79288:79296	1023180	0	True				
ANR	1023197	PostIncDecOperationExpression	buf [ i ] ++		1023180	0					
ANR	1023198	ArrayIndexing	buf [ i ]		1023180	0					
ANR	1023199	Identifier	buf		1023180	0					
ANR	1023200	Identifier	i		1023180	1					
ANR	1023201	IncDec	++		1023180	1					
ANR	1023202	IfStatement	if ( buf [ i ] && isalpha ( buf [ i ] ) && islower ( buf [ i ] ) )		1023180	1					
ANR	1023203	Condition	buf [ i ] && isalpha ( buf [ i ] ) && islower ( buf [ i ] )	2752:6:79304:79349	1023180	0	True				
ANR	1023204	AndExpression	buf [ i ] && isalpha ( buf [ i ] ) && islower ( buf [ i ] )		1023180	0		&&			
ANR	1023205	ArrayIndexing	buf [ i ]		1023180	0					
ANR	1023206	Identifier	buf		1023180	0					
ANR	1023207	Identifier	i		1023180	1					
ANR	1023208	AndExpression	isalpha ( buf [ i ] ) && islower ( buf [ i ] )		1023180	1		&&			
ANR	1023209	CallExpression	isalpha ( buf [ i ] )		1023180	0					
ANR	1023210	Callee	isalpha		1023180	0					
ANR	1023211	Identifier	isalpha		1023180	0					
ANR	1023212	ArgumentList	buf [ i ]		1023180	1					
ANR	1023213	Argument	buf [ i ]		1023180	0					
ANR	1023214	ArrayIndexing	buf [ i ]		1023180	0					
ANR	1023215	Identifier	buf		1023180	0					
ANR	1023216	Identifier	i		1023180	1					
ANR	1023217	CallExpression	islower ( buf [ i ] )		1023180	1					
ANR	1023218	Callee	islower		1023180	0					
ANR	1023219	Identifier	islower		1023180	0					
ANR	1023220	ArgumentList	buf [ i ]		1023180	1					
ANR	1023221	Argument	buf [ i ]		1023180	0					
ANR	1023222	ArrayIndexing	buf [ i ]		1023180	0					
ANR	1023223	Identifier	buf		1023180	0					
ANR	1023224	Identifier	i		1023180	1					
ANR	1023225	CompoundStatement		5:54:100:100	1023180	1					
ANR	1023226	BreakStatement	break ;	2753:3:79357:79362	1023180	0	True				
ANR	1023227	IfStatement	if ( ! buf [ i ] )		1023180	2					
ANR	1023228	Condition	! buf [ i ]	2755:6:79374:79380	1023180	0	True				
ANR	1023229	UnaryOperationExpression	! buf [ i ]		1023180	0					
ANR	1023230	UnaryOperator	!		1023180	0					
ANR	1023231	ArrayIndexing	buf [ i ]		1023180	1					
ANR	1023232	Identifier	buf		1023180	0					
ANR	1023233	Identifier	i		1023180	1					
ANR	1023234	CompoundStatement		8:15:131:131	1023180	1					
ANR	1023235	ExpressionStatement	i ++	2756:3:79388:79391	1023180	0	True				
ANR	1023236	PostIncDecOperationExpression	i ++		1023180	0					
ANR	1023237	Identifier	i		1023180	0					
ANR	1023238	IncDec	++		1023180	1					
ANR	1023239	ContinueStatement	continue ;	2757:3:79396:79404	1023180	1	True				
ANR	1023240	ReturnType	static void		1023180	1					
ANR	1023241	Identifier	incLowerBuffer		1023180	2					
ANR	1023242	ParameterList	"ut8 * buf , int bufsz"		1023180	3					
ANR	1023243	Parameter	ut8 * buf	2748:27:79230:79237	1023180	0	True				
ANR	1023244	ParameterType	ut8 *		1023180	0					
ANR	1023245	Identifier	buf		1023180	1					
ANR	1023246	Parameter	int bufsz	2748:37:79240:79248	1023180	1	True				
ANR	1023247	ParameterType	int		1023180	0					
ANR	1023248	Identifier	bufsz		1023180	1					
ANR	1023249	CFGEntryNode	ENTRY		1023180		True				
ANR	1023250	CFGExitNode	EXIT		1023180		True				
ANR	1023251	Symbol	bufsz		1023180						
ANR	1023252	Symbol	isalpha		1023180						
ANR	1023253	Symbol	buf		1023180						
ANR	1023254	Symbol	* buf		1023180						
ANR	1023255	Symbol	* i		1023180						
ANR	1023256	Symbol	islower		1023180						
ANR	1023257	Symbol	i		1023180						
ANR	1023258	Function	incUpperBuffer	2762:0:79416:79626							
ANR	1023259	FunctionDef	"incUpperBuffer (ut8 * buf , int bufsz)"		1023258	0					
ANR	1023260	CompoundStatement		2762:48:79464:79626	1023258	0					
ANR	1023261	IdentifierDeclStatement	int i = 0 ;	2763:1:79467:79476	1023258	0	True				
ANR	1023262	IdentifierDecl	i = 0		1023258	0					
ANR	1023263	IdentifierDeclType	int		1023258	0					
ANR	1023264	Identifier	i		1023258	1					
ANR	1023265	AssignmentExpression	i = 0		1023258	2		=			
ANR	1023266	Identifier	i		1023258	0					
ANR	1023267	PrimaryExpression	0		1023258	1					
ANR	1023268	WhileStatement	while ( i < bufsz )		1023258	1					
ANR	1023269	Condition	i < bufsz	2764:8:79486:79494	1023258	0	True				
ANR	1023270	RelationalExpression	i < bufsz		1023258	0		<			
ANR	1023271	Identifier	i		1023258	0					
ANR	1023272	Identifier	bufsz		1023258	1					
ANR	1023273	CompoundStatement		3:19:32:32	1023258	1					
ANR	1023274	ExpressionStatement	buf [ i ] ++	2765:2:79501:79509	1023258	0	True				
ANR	1023275	PostIncDecOperationExpression	buf [ i ] ++		1023258	0					
ANR	1023276	ArrayIndexing	buf [ i ]		1023258	0					
ANR	1023277	Identifier	buf		1023258	0					
ANR	1023278	Identifier	i		1023258	1					
ANR	1023279	IncDec	++		1023258	1					
ANR	1023280	IfStatement	if ( buf [ i ] && isalpha ( buf [ i ] ) && isupper ( buf [ i ] ) )		1023258	1					
ANR	1023281	Condition	buf [ i ] && isalpha ( buf [ i ] ) && isupper ( buf [ i ] )	2766:6:79517:79562	1023258	0	True				
ANR	1023282	AndExpression	buf [ i ] && isalpha ( buf [ i ] ) && isupper ( buf [ i ] )		1023258	0		&&			
ANR	1023283	ArrayIndexing	buf [ i ]		1023258	0					
ANR	1023284	Identifier	buf		1023258	0					
ANR	1023285	Identifier	i		1023258	1					
ANR	1023286	AndExpression	isalpha ( buf [ i ] ) && isupper ( buf [ i ] )		1023258	1		&&			
ANR	1023287	CallExpression	isalpha ( buf [ i ] )		1023258	0					
ANR	1023288	Callee	isalpha		1023258	0					
ANR	1023289	Identifier	isalpha		1023258	0					
ANR	1023290	ArgumentList	buf [ i ]		1023258	1					
ANR	1023291	Argument	buf [ i ]		1023258	0					
ANR	1023292	ArrayIndexing	buf [ i ]		1023258	0					
ANR	1023293	Identifier	buf		1023258	0					
ANR	1023294	Identifier	i		1023258	1					
ANR	1023295	CallExpression	isupper ( buf [ i ] )		1023258	1					
ANR	1023296	Callee	isupper		1023258	0					
ANR	1023297	Identifier	isupper		1023258	0					
ANR	1023298	ArgumentList	buf [ i ]		1023258	1					
ANR	1023299	Argument	buf [ i ]		1023258	0					
ANR	1023300	ArrayIndexing	buf [ i ]		1023258	0					
ANR	1023301	Identifier	buf		1023258	0					
ANR	1023302	Identifier	i		1023258	1					
ANR	1023303	CompoundStatement		5:54:100:100	1023258	1					
ANR	1023304	BreakStatement	break ;	2767:3:79570:79575	1023258	0	True				
ANR	1023305	IfStatement	if ( ! buf [ i ] )		1023258	2					
ANR	1023306	Condition	! buf [ i ]	2769:6:79587:79593	1023258	0	True				
ANR	1023307	UnaryOperationExpression	! buf [ i ]		1023258	0					
ANR	1023308	UnaryOperator	!		1023258	0					
ANR	1023309	ArrayIndexing	buf [ i ]		1023258	1					
ANR	1023310	Identifier	buf		1023258	0					
ANR	1023311	Identifier	i		1023258	1					
ANR	1023312	CompoundStatement		8:15:131:131	1023258	1					
ANR	1023313	ExpressionStatement	i ++	2770:3:79601:79604	1023258	0	True				
ANR	1023314	PostIncDecOperationExpression	i ++		1023258	0					
ANR	1023315	Identifier	i		1023258	0					
ANR	1023316	IncDec	++		1023258	1					
ANR	1023317	ContinueStatement	continue ;	2771:3:79609:79617	1023258	1	True				
ANR	1023318	ReturnType	static void		1023258	1					
ANR	1023319	Identifier	incUpperBuffer		1023258	2					
ANR	1023320	ParameterList	"ut8 * buf , int bufsz"		1023258	3					
ANR	1023321	Parameter	ut8 * buf	2762:27:79443:79450	1023258	0	True				
ANR	1023322	ParameterType	ut8 *		1023258	0					
ANR	1023323	Identifier	buf		1023258	1					
ANR	1023324	Parameter	int bufsz	2762:37:79453:79461	1023258	1	True				
ANR	1023325	ParameterType	int		1023258	0					
ANR	1023326	Identifier	bufsz		1023258	1					
ANR	1023327	CFGEntryNode	ENTRY		1023258		True				
ANR	1023328	CFGExitNode	EXIT		1023258		True				
ANR	1023329	Symbol	bufsz		1023258						
ANR	1023330	Symbol	isalpha		1023258						
ANR	1023331	Symbol	buf		1023258						
ANR	1023332	Symbol	* buf		1023258						
ANR	1023333	Symbol	* i		1023258						
ANR	1023334	Symbol	isupper		1023258						
ANR	1023335	Symbol	i		1023258						
ANR	1023336	Function	incAlphaBuffer	2776:0:79629:79864							
ANR	1023337	FunctionDef	"incAlphaBuffer (ut8 * buf , int bufsz)"		1023336	0					
ANR	1023338	CompoundStatement		2776:48:79677:79864	1023336	0					
ANR	1023339	IdentifierDeclStatement	int i = 0 ;	2777:1:79680:79689	1023336	0	True				
ANR	1023340	IdentifierDecl	i = 0		1023336	0					
ANR	1023341	IdentifierDeclType	int		1023336	0					
ANR	1023342	Identifier	i		1023336	1					
ANR	1023343	AssignmentExpression	i = 0		1023336	2		=			
ANR	1023344	Identifier	i		1023336	0					
ANR	1023345	PrimaryExpression	0		1023336	1					
ANR	1023346	WhileStatement	while ( i < bufsz )		1023336	1					
ANR	1023347	Condition	i < bufsz	2778:8:79699:79707	1023336	0	True				
ANR	1023348	RelationalExpression	i < bufsz		1023336	0		<			
ANR	1023349	Identifier	i		1023336	0					
ANR	1023350	Identifier	bufsz		1023336	1					
ANR	1023351	CompoundStatement		3:19:32:32	1023336	1					
ANR	1023352	ExpressionStatement	buf [ i ] ++	2779:2:79714:79722	1023336	0	True				
ANR	1023353	PostIncDecOperationExpression	buf [ i ] ++		1023336	0					
ANR	1023354	ArrayIndexing	buf [ i ]		1023336	0					
ANR	1023355	Identifier	buf		1023336	0					
ANR	1023356	Identifier	i		1023336	1					
ANR	1023357	IncDec	++		1023336	1					
ANR	1023358	IfStatement	if ( buf [ i ] && isalpha ( buf [ i ] ) )		1023336	1					
ANR	1023359	Condition	buf [ i ] && isalpha ( buf [ i ] )	2780:6:79730:79755	1023336	0	True				
ANR	1023360	AndExpression	buf [ i ] && isalpha ( buf [ i ] )		1023336	0		&&			
ANR	1023361	ArrayIndexing	buf [ i ]		1023336	0					
ANR	1023362	Identifier	buf		1023336	0					
ANR	1023363	Identifier	i		1023336	1					
ANR	1023364	CallExpression	isalpha ( buf [ i ] )		1023336	1					
ANR	1023365	Callee	isalpha		1023336	0					
ANR	1023366	Identifier	isalpha		1023336	0					
ANR	1023367	ArgumentList	buf [ i ]		1023336	1					
ANR	1023368	Argument	buf [ i ]		1023336	0					
ANR	1023369	ArrayIndexing	buf [ i ]		1023336	0					
ANR	1023370	Identifier	buf		1023336	0					
ANR	1023371	Identifier	i		1023336	1					
ANR	1023372	CompoundStatement		5:34:80:80	1023336	1					
ANR	1023373	BreakStatement	break ;	2781:3:79763:79768	1023336	0	True				
ANR	1023374	IfStatement	if ( ! buf [ i ] )		1023336	2					
ANR	1023375	Condition	! buf [ i ]	2783:6:79780:79786	1023336	0	True				
ANR	1023376	UnaryOperationExpression	! buf [ i ]		1023336	0					
ANR	1023377	UnaryOperator	!		1023336	0					
ANR	1023378	ArrayIndexing	buf [ i ]		1023336	1					
ANR	1023379	Identifier	buf		1023336	0					
ANR	1023380	Identifier	i		1023336	1					
ANR	1023381	CompoundStatement		8:15:111:111	1023336	1					
ANR	1023382	ExpressionStatement	i ++	2784:3:79794:79797	1023336	0	True				
ANR	1023383	PostIncDecOperationExpression	i ++		1023336	0					
ANR	1023384	Identifier	i		1023336	0					
ANR	1023385	IncDec	++		1023336	1					
ANR	1023386	ContinueStatement	continue ;	2785:3:79802:79810	1023336	1	True				
ANR	1023387	ReturnType	static void		1023336	1					
ANR	1023388	Identifier	incAlphaBuffer		1023336	2					
ANR	1023389	ParameterList	"ut8 * buf , int bufsz"		1023336	3					
ANR	1023390	Parameter	ut8 * buf	2776:27:79656:79663	1023336	0	True				
ANR	1023391	ParameterType	ut8 *		1023336	0					
ANR	1023392	Identifier	buf		1023336	1					
ANR	1023393	Parameter	int bufsz	2776:37:79666:79674	1023336	1	True				
ANR	1023394	ParameterType	int		1023336	0					
ANR	1023395	Identifier	bufsz		1023336	1					
ANR	1023396	CFGEntryNode	ENTRY		1023336		True				
ANR	1023397	CFGExitNode	EXIT		1023336		True				
ANR	1023398	Symbol	bufsz		1023336						
ANR	1023399	Symbol	isalpha		1023336						
ANR	1023400	Symbol	buf		1023336						
ANR	1023401	Symbol	* buf		1023336						
ANR	1023402	Symbol	* i		1023336						
ANR	1023403	Symbol	i		1023336						
ANR	1023404	Function	incDigitBuffer	2791:0:79867:80102							
ANR	1023405	FunctionDef	"incDigitBuffer (ut8 * buf , int bufsz)"		1023404	0					
ANR	1023406	CompoundStatement		2791:48:79915:80102	1023404	0					
ANR	1023407	IdentifierDeclStatement	int i = 0 ;	2792:1:79918:79927	1023404	0	True				
ANR	1023408	IdentifierDecl	i = 0		1023404	0					
ANR	1023409	IdentifierDeclType	int		1023404	0					
ANR	1023410	Identifier	i		1023404	1					
ANR	1023411	AssignmentExpression	i = 0		1023404	2		=			
ANR	1023412	Identifier	i		1023404	0					
ANR	1023413	PrimaryExpression	0		1023404	1					
ANR	1023414	WhileStatement	while ( i < bufsz )		1023404	1					
ANR	1023415	Condition	i < bufsz	2793:8:79937:79945	1023404	0	True				
ANR	1023416	RelationalExpression	i < bufsz		1023404	0		<			
ANR	1023417	Identifier	i		1023404	0					
ANR	1023418	Identifier	bufsz		1023404	1					
ANR	1023419	CompoundStatement		3:19:32:32	1023404	1					
ANR	1023420	ExpressionStatement	buf [ i ] ++	2794:2:79952:79960	1023404	0	True				
ANR	1023421	PostIncDecOperationExpression	buf [ i ] ++		1023404	0					
ANR	1023422	ArrayIndexing	buf [ i ]		1023404	0					
ANR	1023423	Identifier	buf		1023404	0					
ANR	1023424	Identifier	i		1023404	1					
ANR	1023425	IncDec	++		1023404	1					
ANR	1023426	IfStatement	if ( buf [ i ] && isdigit ( buf [ i ] ) )		1023404	1					
ANR	1023427	Condition	buf [ i ] && isdigit ( buf [ i ] )	2795:6:79968:79993	1023404	0	True				
ANR	1023428	AndExpression	buf [ i ] && isdigit ( buf [ i ] )		1023404	0		&&			
ANR	1023429	ArrayIndexing	buf [ i ]		1023404	0					
ANR	1023430	Identifier	buf		1023404	0					
ANR	1023431	Identifier	i		1023404	1					
ANR	1023432	CallExpression	isdigit ( buf [ i ] )		1023404	1					
ANR	1023433	Callee	isdigit		1023404	0					
ANR	1023434	Identifier	isdigit		1023404	0					
ANR	1023435	ArgumentList	buf [ i ]		1023404	1					
ANR	1023436	Argument	buf [ i ]		1023404	0					
ANR	1023437	ArrayIndexing	buf [ i ]		1023404	0					
ANR	1023438	Identifier	buf		1023404	0					
ANR	1023439	Identifier	i		1023404	1					
ANR	1023440	CompoundStatement		5:34:80:80	1023404	1					
ANR	1023441	BreakStatement	break ;	2796:3:80001:80006	1023404	0	True				
ANR	1023442	IfStatement	if ( ! buf [ i ] )		1023404	2					
ANR	1023443	Condition	! buf [ i ]	2798:6:80018:80024	1023404	0	True				
ANR	1023444	UnaryOperationExpression	! buf [ i ]		1023404	0					
ANR	1023445	UnaryOperator	!		1023404	0					
ANR	1023446	ArrayIndexing	buf [ i ]		1023404	1					
ANR	1023447	Identifier	buf		1023404	0					
ANR	1023448	Identifier	i		1023404	1					
ANR	1023449	CompoundStatement		8:15:111:111	1023404	1					
ANR	1023450	ExpressionStatement	i ++	2799:3:80032:80035	1023404	0	True				
ANR	1023451	PostIncDecOperationExpression	i ++		1023404	0					
ANR	1023452	Identifier	i		1023404	0					
ANR	1023453	IncDec	++		1023404	1					
ANR	1023454	ContinueStatement	continue ;	2800:3:80040:80048	1023404	1	True				
ANR	1023455	ReturnType	static void		1023404	1					
ANR	1023456	Identifier	incDigitBuffer		1023404	2					
ANR	1023457	ParameterList	"ut8 * buf , int bufsz"		1023404	3					
ANR	1023458	Parameter	ut8 * buf	2791:27:79894:79901	1023404	0	True				
ANR	1023459	ParameterType	ut8 *		1023404	0					
ANR	1023460	Identifier	buf		1023404	1					
ANR	1023461	Parameter	int bufsz	2791:37:79904:79912	1023404	1	True				
ANR	1023462	ParameterType	int		1023404	0					
ANR	1023463	Identifier	bufsz		1023404	1					
ANR	1023464	CFGEntryNode	ENTRY		1023404		True				
ANR	1023465	CFGExitNode	EXIT		1023404		True				
ANR	1023466	Symbol	bufsz		1023404						
ANR	1023467	Symbol	buf		1023404						
ANR	1023468	Symbol	* buf		1023404						
ANR	1023469	Symbol	* i		1023404						
ANR	1023470	Symbol	i		1023404						
ANR	1023471	Symbol	isdigit		1023404						
ANR	1023472	Function	search_collisions	2806:0:80105:82237							
ANR	1023473	FunctionDef	"search_collisions (RCore * core , const char * hashName , const ut8 * hashValue , int hashLength , int mode)"		1023472	0					
ANR	1023474	CompoundStatement		2806:113:80218:82237	1023472	0					
ANR	1023475	Statement	ut8	2807:1:80221:80223	1023472	0	True				
ANR	1023476	Statement	R_ALIGNED	2807:5:80225:80233	1023472	1	True				
ANR	1023477	Statement	(	2807:14:80234:80234	1023472	2	True				
ANR	1023478	Statement	8	2807:15:80235:80235	1023472	3	True				
ANR	1023479	Statement	)	2807:16:80236:80236	1023472	4	True				
ANR	1023480	ExpressionStatement	cmphash [ 128 ]	2807:18:80238:80250	1023472	5	True				
ANR	1023481	ArrayIndexing	cmphash [ 128 ]		1023472	0					
ANR	1023482	Identifier	cmphash		1023472	0					
ANR	1023483	PrimaryExpression	128		1023472	1					
ANR	1023484	IdentifierDeclStatement	"int i , algoType = R_HASH_CRC32 ;"	2808:1:80253:80283	1023472	6	True				
ANR	1023485	IdentifierDecl	i		1023472	0					
ANR	1023486	IdentifierDeclType	int		1023472	0					
ANR	1023487	Identifier	i		1023472	1					
ANR	1023488	IdentifierDecl	algoType = R_HASH_CRC32		1023472	1					
ANR	1023489	IdentifierDeclType	int		1023472	0					
ANR	1023490	Identifier	algoType		1023472	1					
ANR	1023491	AssignmentExpression	algoType = R_HASH_CRC32		1023472	2		=			
ANR	1023492	Identifier	R_HASH_CRC32		1023472	0					
ANR	1023493	Identifier	R_HASH_CRC32		1023472	1					
ANR	1023494	IdentifierDeclStatement	int bufsz = core -> blocksize ;	2809:1:80286:80313	1023472	7	True				
ANR	1023495	IdentifierDecl	bufsz = core -> blocksize		1023472	0					
ANR	1023496	IdentifierDeclType	int		1023472	0					
ANR	1023497	Identifier	bufsz		1023472	1					
ANR	1023498	AssignmentExpression	bufsz = core -> blocksize		1023472	2		=			
ANR	1023499	Identifier	bufsz		1023472	0					
ANR	1023500	PtrMemberAccess	core -> blocksize		1023472	1					
ANR	1023501	Identifier	core		1023472	0					
ANR	1023502	Identifier	blocksize		1023472	1					
ANR	1023503	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 , bufsz ) ;"	2810:1:80316:80344	1023472	8	True				
ANR	1023504	IdentifierDecl	"* buf = calloc ( 1 , bufsz )"		1023472	0					
ANR	1023505	IdentifierDeclType	ut8 *		1023472	0					
ANR	1023506	Identifier	buf		1023472	1					
ANR	1023507	AssignmentExpression	"* buf = calloc ( 1 , bufsz )"		1023472	2		=			
ANR	1023508	Identifier	buf		1023472	0					
ANR	1023509	CallExpression	"calloc ( 1 , bufsz )"		1023472	1					
ANR	1023510	Callee	calloc		1023472	0					
ANR	1023511	Identifier	calloc		1023472	0					
ANR	1023512	ArgumentList	1		1023472	1					
ANR	1023513	Argument	1		1023472	0					
ANR	1023514	PrimaryExpression	1		1023472	0					
ANR	1023515	Argument	bufsz		1023472	1					
ANR	1023516	Identifier	bufsz		1023472	0					
ANR	1023517	IfStatement	if ( ! buf )		1023472	9					
ANR	1023518	Condition	! buf	2811:5:80351:80354	1023472	0	True				
ANR	1023519	UnaryOperationExpression	! buf		1023472	0					
ANR	1023520	UnaryOperator	!		1023472	0					
ANR	1023521	Identifier	buf		1023472	1					
ANR	1023522	CompoundStatement		6:11:138:138	1023472	1					
ANR	1023523	ReturnStatement	return ;	2812:2:80361:80367	1023472	0	True				
ANR	1023524	ExpressionStatement	"memcpy ( buf , core -> block , bufsz )"	2814:1:80373:80405	1023472	10	True				
ANR	1023525	CallExpression	"memcpy ( buf , core -> block , bufsz )"		1023472	0					
ANR	1023526	Callee	memcpy		1023472	0					
ANR	1023527	Identifier	memcpy		1023472	0					
ANR	1023528	ArgumentList	buf		1023472	1					
ANR	1023529	Argument	buf		1023472	0					
ANR	1023530	Identifier	buf		1023472	0					
ANR	1023531	Argument	core -> block		1023472	1					
ANR	1023532	PtrMemberAccess	core -> block		1023472	0					
ANR	1023533	Identifier	core		1023472	0					
ANR	1023534	Identifier	block		1023472	1					
ANR	1023535	Argument	bufsz		1023472	2					
ANR	1023536	Identifier	bufsz		1023472	0					
ANR	1023537	IfStatement	if ( hashLength > sizeof ( cmphash ) )		1023472	11					
ANR	1023538	Condition	hashLength > sizeof ( cmphash )	2815:5:80412:80440	1023472	0	True				
ANR	1023539	RelationalExpression	hashLength > sizeof ( cmphash )		1023472	0		>			
ANR	1023540	Identifier	hashLength		1023472	0					
ANR	1023541	SizeofExpression	sizeof ( cmphash )		1023472	1					
ANR	1023542	Sizeof	sizeof		1023472	0					
ANR	1023543	SizeofOperand	cmphash		1023472	1					
ANR	1023544	CompoundStatement		10:36:224:224	1023472	1					
ANR	1023545	ExpressionStatement	"eprintf ( ""Hashlength mismatch %d %d\\n"" , hashLength , ( int ) sizeof ( cmphash ) )"	2816:2:80447:80521	1023472	0	True				
ANR	1023546	CallExpression	"eprintf ( ""Hashlength mismatch %d %d\\n"" , hashLength , ( int ) sizeof ( cmphash ) )"		1023472	0					
ANR	1023547	Callee	eprintf		1023472	0					
ANR	1023548	Identifier	eprintf		1023472	0					
ANR	1023549	ArgumentList	"""Hashlength mismatch %d %d\\n"""		1023472	1					
ANR	1023550	Argument	"""Hashlength mismatch %d %d\\n"""		1023472	0					
ANR	1023551	PrimaryExpression	"""Hashlength mismatch %d %d\\n"""		1023472	0					
ANR	1023552	Argument	hashLength		1023472	1					
ANR	1023553	Identifier	hashLength		1023472	0					
ANR	1023554	Argument	( int ) sizeof ( cmphash )		1023472	2					
ANR	1023555	CastExpression	( int ) sizeof ( cmphash )		1023472	0					
ANR	1023556	CastTarget	int		1023472	0					
ANR	1023557	SizeofExpression	sizeof ( cmphash )		1023472	1					
ANR	1023558	Sizeof	sizeof		1023472	0					
ANR	1023559	SizeofOperand	cmphash		1023472	1					
ANR	1023560	ReturnStatement	return ;	2817:2:80525:80531	1023472	1	True				
ANR	1023561	ExpressionStatement	"memcpy ( cmphash , hashValue , hashLength )"	2819:1:80537:80576	1023472	12	True				
ANR	1023562	CallExpression	"memcpy ( cmphash , hashValue , hashLength )"		1023472	0					
ANR	1023563	Callee	memcpy		1023472	0					
ANR	1023564	Identifier	memcpy		1023472	0					
ANR	1023565	ArgumentList	cmphash		1023472	1					
ANR	1023566	Argument	cmphash		1023472	0					
ANR	1023567	Identifier	cmphash		1023472	0					
ANR	1023568	Argument	hashValue		1023472	1					
ANR	1023569	Identifier	hashValue		1023472	0					
ANR	1023570	Argument	hashLength		1023472	2					
ANR	1023571	Identifier	hashLength		1023472	0					
ANR	1023572	IdentifierDeclStatement	ut64 hashBits = r_hash_name_to_bits ( hashName ) ;	2821:1:80580:80626	1023472	13	True				
ANR	1023573	IdentifierDecl	hashBits = r_hash_name_to_bits ( hashName )		1023472	0					
ANR	1023574	IdentifierDeclType	ut64		1023472	0					
ANR	1023575	Identifier	hashBits		1023472	1					
ANR	1023576	AssignmentExpression	hashBits = r_hash_name_to_bits ( hashName )		1023472	2		=			
ANR	1023577	Identifier	hashBits		1023472	0					
ANR	1023578	CallExpression	r_hash_name_to_bits ( hashName )		1023472	1					
ANR	1023579	Callee	r_hash_name_to_bits		1023472	0					
ANR	1023580	Identifier	r_hash_name_to_bits		1023472	0					
ANR	1023581	ArgumentList	hashName		1023472	1					
ANR	1023582	Argument	hashName		1023472	0					
ANR	1023583	Identifier	hashName		1023472	0					
ANR	1023584	IdentifierDeclStatement	int hashSize = r_hash_size ( hashBits ) ;	2822:1:80629:80666	1023472	14	True				
ANR	1023585	IdentifierDecl	hashSize = r_hash_size ( hashBits )		1023472	0					
ANR	1023586	IdentifierDeclType	int		1023472	0					
ANR	1023587	Identifier	hashSize		1023472	1					
ANR	1023588	AssignmentExpression	hashSize = r_hash_size ( hashBits )		1023472	2		=			
ANR	1023589	Identifier	hashSize		1023472	0					
ANR	1023590	CallExpression	r_hash_size ( hashBits )		1023472	1					
ANR	1023591	Callee	r_hash_size		1023472	0					
ANR	1023592	Identifier	r_hash_size		1023472	0					
ANR	1023593	ArgumentList	hashBits		1023472	1					
ANR	1023594	Argument	hashBits		1023472	0					
ANR	1023595	Identifier	hashBits		1023472	0					
ANR	1023596	IfStatement	if ( hashLength != hashSize )		1023472	15					
ANR	1023597	Condition	hashLength != hashSize	2823:5:80673:80694	1023472	0	True				
ANR	1023598	EqualityExpression	hashLength != hashSize		1023472	0		!=			
ANR	1023599	Identifier	hashLength		1023472	0					
ANR	1023600	Identifier	hashSize		1023472	1					
ANR	1023601	CompoundStatement		18:29:478:478	1023472	1					
ANR	1023602	ExpressionStatement	"eprintf ( ""Invalid hash size %d vs %d\\n"" , hashLength , hashSize )"	2824:2:80701:80763	1023472	0	True				
ANR	1023603	CallExpression	"eprintf ( ""Invalid hash size %d vs %d\\n"" , hashLength , hashSize )"		1023472	0					
ANR	1023604	Callee	eprintf		1023472	0					
ANR	1023605	Identifier	eprintf		1023472	0					
ANR	1023606	ArgumentList	"""Invalid hash size %d vs %d\\n"""		1023472	1					
ANR	1023607	Argument	"""Invalid hash size %d vs %d\\n"""		1023472	0					
ANR	1023608	PrimaryExpression	"""Invalid hash size %d vs %d\\n"""		1023472	0					
ANR	1023609	Argument	hashLength		1023472	1					
ANR	1023610	Identifier	hashLength		1023472	0					
ANR	1023611	Argument	hashSize		1023472	2					
ANR	1023612	Identifier	hashSize		1023472	0					
ANR	1023613	ReturnStatement	return ;	2825:2:80767:80773	1023472	1	True				
ANR	1023614	IdentifierDeclStatement	"RHash * ctx = r_hash_new ( true , algoType ) ;"	2828:1:80780:80820	1023472	16	True				
ANR	1023615	IdentifierDecl	"* ctx = r_hash_new ( true , algoType )"		1023472	0					
ANR	1023616	IdentifierDeclType	RHash *		1023472	0					
ANR	1023617	Identifier	ctx		1023472	1					
ANR	1023618	AssignmentExpression	"* ctx = r_hash_new ( true , algoType )"		1023472	2		=			
ANR	1023619	Identifier	ctx		1023472	0					
ANR	1023620	CallExpression	"r_hash_new ( true , algoType )"		1023472	1					
ANR	1023621	Callee	r_hash_new		1023472	0					
ANR	1023622	Identifier	r_hash_new		1023472	0					
ANR	1023623	ArgumentList	true		1023472	1					
ANR	1023624	Argument	true		1023472	0					
ANR	1023625	Identifier	true		1023472	0					
ANR	1023626	Argument	algoType		1023472	1					
ANR	1023627	Identifier	algoType		1023472	0					
ANR	1023628	IfStatement	if ( ! ctx )		1023472	17					
ANR	1023629	Condition	! ctx	2829:5:80827:80830	1023472	0	True				
ANR	1023630	UnaryOperationExpression	! ctx		1023472	0					
ANR	1023631	UnaryOperator	!		1023472	0					
ANR	1023632	Identifier	ctx		1023472	1					
ANR	1023633	CompoundStatement		24:11:614:614	1023472	1					
ANR	1023634	ReturnStatement	return ;	2830:2:80837:80843	1023472	0	True				
ANR	1023635	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	2832:1:80849:80879	1023472	18	True				
ANR	1023636	CallExpression	"r_cons_break_push ( NULL , NULL )"		1023472	0					
ANR	1023637	Callee	r_cons_break_push		1023472	0					
ANR	1023638	Identifier	r_cons_break_push		1023472	0					
ANR	1023639	ArgumentList	NULL		1023472	1					
ANR	1023640	Argument	NULL		1023472	0					
ANR	1023641	Identifier	NULL		1023472	0					
ANR	1023642	Argument	NULL		1023472	1					
ANR	1023643	Identifier	NULL		1023472	0					
ANR	1023644	IdentifierDeclStatement	ut64 prev = r_sys_now ( ) ;	2833:1:80882:80906	1023472	19	True				
ANR	1023645	IdentifierDecl	prev = r_sys_now ( )		1023472	0					
ANR	1023646	IdentifierDeclType	ut64		1023472	0					
ANR	1023647	Identifier	prev		1023472	1					
ANR	1023648	AssignmentExpression	prev = r_sys_now ( )		1023472	2		=			
ANR	1023649	Identifier	prev		1023472	0					
ANR	1023650	CallExpression	r_sys_now ( )		1023472	1					
ANR	1023651	Callee	r_sys_now		1023472	0					
ANR	1023652	Identifier	r_sys_now		1023472	0					
ANR	1023653	ArgumentList			1023472	1					
ANR	1023654	IdentifierDeclStatement	ut64 inc = 0 ;	2834:1:80909:80921	1023472	20	True				
ANR	1023655	IdentifierDecl	inc = 0		1023472	0					
ANR	1023656	IdentifierDeclType	ut64		1023472	0					
ANR	1023657	Identifier	inc		1023472	1					
ANR	1023658	AssignmentExpression	inc = 0		1023472	2		=			
ANR	1023659	Identifier	inc		1023472	0					
ANR	1023660	PrimaryExpression	0		1023472	1					
ANR	1023661	IdentifierDeclStatement	int amount = 0 ;	2835:1:80924:80938	1023472	21	True				
ANR	1023662	IdentifierDecl	amount = 0		1023472	0					
ANR	1023663	IdentifierDeclType	int		1023472	0					
ANR	1023664	Identifier	amount		1023472	1					
ANR	1023665	AssignmentExpression	amount = 0		1023472	2		=			
ANR	1023666	Identifier	amount		1023472	0					
ANR	1023667	PrimaryExpression	0		1023472	1					
ANR	1023668	IdentifierDeclStatement	int mount = 0 ;	2836:1:80941:80954	1023472	22	True				
ANR	1023669	IdentifierDecl	mount = 0		1023472	0					
ANR	1023670	IdentifierDeclType	int		1023472	0					
ANR	1023671	Identifier	mount		1023472	1					
ANR	1023672	AssignmentExpression	mount = 0		1023472	2		=			
ANR	1023673	Identifier	mount		1023472	0					
ANR	1023674	PrimaryExpression	0		1023472	1					
ANR	1023675	WhileStatement	while ( ! r_cons_is_breaked ( ) )		1023472	23					
ANR	1023676	Condition	! r_cons_is_breaked ( )	2837:8:80964:80984	1023472	0	True				
ANR	1023677	UnaryOperationExpression	! r_cons_is_breaked ( )		1023472	0					
ANR	1023678	UnaryOperator	!		1023472	0					
ANR	1023679	CallExpression	r_cons_is_breaked ( )		1023472	1					
ANR	1023680	Callee	r_cons_is_breaked		1023472	0					
ANR	1023681	Identifier	r_cons_is_breaked		1023472	0					
ANR	1023682	ArgumentList			1023472	1					
ANR	1023683	CompoundStatement		33:2:772:795	1023472	1					
ANR	1023684	IdentifierDeclStatement	ut64 now = r_sys_now ( ) ;	2838:2:80991:81014	1023472	0	True				
ANR	1023685	IdentifierDecl	now = r_sys_now ( )		1023472	0					
ANR	1023686	IdentifierDeclType	ut64		1023472	0					
ANR	1023687	Identifier	now		1023472	1					
ANR	1023688	AssignmentExpression	now = r_sys_now ( )		1023472	2		=			
ANR	1023689	Identifier	now		1023472	0					
ANR	1023690	CallExpression	r_sys_now ( )		1023472	1					
ANR	1023691	Callee	r_sys_now		1023472	0					
ANR	1023692	Identifier	r_sys_now		1023472	0					
ANR	1023693	ArgumentList			1023472	1					
ANR	1023694	IfStatement	if ( now < ( prev + 1000000 ) )		1023472	1					
ANR	1023695	Condition	now < ( prev + 1000000 )	2839:6:81022:81043	1023472	0	True				
ANR	1023696	RelationalExpression	now < ( prev + 1000000 )		1023472	0		<			
ANR	1023697	Identifier	now		1023472	0					
ANR	1023698	AdditiveExpression	prev + 1000000		1023472	1		+			
ANR	1023699	Identifier	prev		1023472	0					
ANR	1023700	PrimaryExpression	1000000		1023472	1					
ANR	1023701	CompoundStatement		34:30:827:827	1023472	1					
ANR	1023702	ExpressionStatement	amount ++	2840:3:81051:81059	1023472	0	True				
ANR	1023703	PostIncDecOperationExpression	amount ++		1023472	0					
ANR	1023704	Identifier	amount		1023472	0					
ANR	1023705	IncDec	++		1023472	1					
ANR	1023706	ElseStatement	else		1023472	0					
ANR	1023707	CompoundStatement		36:9:851:851	1023472	0					
ANR	1023708	ExpressionStatement	mount += amount	2842:3:81075:81090	1023472	0	True				
ANR	1023709	AssignmentExpression	mount += amount		1023472	0		+=			
ANR	1023710	Identifier	mount		1023472	0					
ANR	1023711	Identifier	amount		1023472	1					
ANR	1023712	ExpressionStatement	mount /= 2	2843:3:81095:81105	1023472	1	True				
ANR	1023713	AssignmentExpression	mount /= 2		1023472	0		/=			
ANR	1023714	Identifier	mount		1023472	0					
ANR	1023715	PrimaryExpression	2		1023472	1					
ANR	1023716	ExpressionStatement	amount = 0	2844:3:81110:81120	1023472	2	True				
ANR	1023717	AssignmentExpression	amount = 0		1023472	0		=			
ANR	1023718	Identifier	amount		1023472	0					
ANR	1023719	PrimaryExpression	0		1023472	1					
ANR	1023720	ExpressionStatement	prev = now	2845:3:81125:81135	1023472	3	True				
ANR	1023721	AssignmentExpression	prev = now		1023472	0		=			
ANR	1023722	Identifier	prev		1023472	0					
ANR	1023723	Identifier	now		1023472	1					
ANR	1023724	SwitchStatement	switch ( mode )		1023472	2					
ANR	1023725	Condition	mode	2847:10:81151:81154	1023472	0	True				
ANR	1023726	Identifier	mode		1023472	0					
ANR	1023727	CompoundStatement		42:16:938:938	1023472	1					
ANR	1023728	Label	case 'p' :	2848:2:81161:81169	1023472	0	True				
ANR	1023729	ExpressionStatement	"incPrintBuffer ( buf , bufsz )"	2849:3:81190:81217	1023472	1	True				
ANR	1023730	CallExpression	"incPrintBuffer ( buf , bufsz )"		1023472	0					
ANR	1023731	Callee	incPrintBuffer		1023472	0					
ANR	1023732	Identifier	incPrintBuffer		1023472	0					
ANR	1023733	ArgumentList	buf		1023472	1					
ANR	1023734	Argument	buf		1023472	0					
ANR	1023735	Identifier	buf		1023472	0					
ANR	1023736	Argument	bufsz		1023472	1					
ANR	1023737	Identifier	bufsz		1023472	0					
ANR	1023738	BreakStatement	break ;	2850:3:81222:81227	1023472	2	True				
ANR	1023739	Label	case 'a' :	2851:2:81231:81239	1023472	3	True				
ANR	1023740	ExpressionStatement	"incLowerBuffer ( buf , bufsz )"	2852:3:81263:81290	1023472	4	True				
ANR	1023741	CallExpression	"incLowerBuffer ( buf , bufsz )"		1023472	0					
ANR	1023742	Callee	incLowerBuffer		1023472	0					
ANR	1023743	Identifier	incLowerBuffer		1023472	0					
ANR	1023744	ArgumentList	buf		1023472	1					
ANR	1023745	Argument	buf		1023472	0					
ANR	1023746	Identifier	buf		1023472	0					
ANR	1023747	Argument	bufsz		1023472	1					
ANR	1023748	Identifier	bufsz		1023472	0					
ANR	1023749	BreakStatement	break ;	2853:3:81295:81300	1023472	5	True				
ANR	1023750	Label	case 'A' :	2854:2:81304:81312	1023472	6	True				
ANR	1023751	ExpressionStatement	"incUpperBuffer ( buf , bufsz )"	2855:3:81336:81363	1023472	7	True				
ANR	1023752	CallExpression	"incUpperBuffer ( buf , bufsz )"		1023472	0					
ANR	1023753	Callee	incUpperBuffer		1023472	0					
ANR	1023754	Identifier	incUpperBuffer		1023472	0					
ANR	1023755	ArgumentList	buf		1023472	1					
ANR	1023756	Argument	buf		1023472	0					
ANR	1023757	Identifier	buf		1023472	0					
ANR	1023758	Argument	bufsz		1023472	1					
ANR	1023759	Identifier	bufsz		1023472	0					
ANR	1023760	BreakStatement	break ;	2856:3:81368:81373	1023472	8	True				
ANR	1023761	Label	case 'l' :	2857:2:81377:81385	1023472	9	True				
ANR	1023762	ExpressionStatement	"incAlphaBuffer ( buf , bufsz )"	2858:3:81401:81428	1023472	10	True				
ANR	1023763	CallExpression	"incAlphaBuffer ( buf , bufsz )"		1023472	0					
ANR	1023764	Callee	incAlphaBuffer		1023472	0					
ANR	1023765	Identifier	incAlphaBuffer		1023472	0					
ANR	1023766	ArgumentList	buf		1023472	1					
ANR	1023767	Argument	buf		1023472	0					
ANR	1023768	Identifier	buf		1023472	0					
ANR	1023769	Argument	bufsz		1023472	1					
ANR	1023770	Identifier	bufsz		1023472	0					
ANR	1023771	BreakStatement	break ;	2859:3:81433:81438	1023472	11	True				
ANR	1023772	Label	case 'd' :	2860:2:81442:81450	1023472	12	True				
ANR	1023773	ExpressionStatement	"incDigitBuffer ( buf , bufsz )"	2861:3:81465:81492	1023472	13	True				
ANR	1023774	CallExpression	"incDigitBuffer ( buf , bufsz )"		1023472	0					
ANR	1023775	Callee	incDigitBuffer		1023472	0					
ANR	1023776	Identifier	incDigitBuffer		1023472	0					
ANR	1023777	ArgumentList	buf		1023472	1					
ANR	1023778	Argument	buf		1023472	0					
ANR	1023779	Identifier	buf		1023472	0					
ANR	1023780	Argument	bufsz		1023472	1					
ANR	1023781	Identifier	bufsz		1023472	0					
ANR	1023782	BreakStatement	break ;	2862:3:81497:81502	1023472	14	True				
ANR	1023783	Label	default :	2863:2:81506:81513	1023472	15	True				
ANR	1023784	Identifier	default		1023472	0					
ANR	1023785	ExpressionStatement	"incBuffer ( buf , bufsz )"	2864:3:81528:81550	1023472	16	True				
ANR	1023786	CallExpression	"incBuffer ( buf , bufsz )"		1023472	0					
ANR	1023787	Callee	incBuffer		1023472	0					
ANR	1023788	Identifier	incBuffer		1023472	0					
ANR	1023789	ArgumentList	buf		1023472	1					
ANR	1023790	Argument	buf		1023472	0					
ANR	1023791	Identifier	buf		1023472	0					
ANR	1023792	Argument	bufsz		1023472	1					
ANR	1023793	Identifier	bufsz		1023472	0					
ANR	1023794	BreakStatement	break ;	2865:3:81555:81560	1023472	17	True				
ANR	1023795	Statement	eprintf	2868:2:81569:81575	1023472	3	True				
ANR	1023796	Statement	(	2868:10:81577:81577	1023472	4	True				
ANR	1023797	Statement	"""0x%08"""	2868:11:81578:81584	1023472	5	True				
ANR	1023798	Statement	PFMT64x	2868:19:81586:81592	1023472	6	True				
ANR	1023799	Statement	""" input:"""	2868:27:81594:81602	1023472	7	True				
ANR	1023800	Statement	","	2868:36:81603:81603	1023472	8	True				
ANR	1023801	Statement	inc	2868:38:81605:81607	1023472	9	True				
ANR	1023802	Statement	)	2868:41:81608:81608	1023472	10	True				
ANR	1023803	ExpressionStatement		2868:42:81609:81609	1023472	11	True				
ANR	1023804	ForStatement	for ( i = 0 ; i < bufsz ; i ++ )		1023472	12					
ANR	1023805	ForInit	i = 0 ;	2869:7:81618:81623	1023472	0	True				
ANR	1023806	AssignmentExpression	i = 0		1023472	0		=			
ANR	1023807	Identifier	i		1023472	0					
ANR	1023808	PrimaryExpression	0		1023472	1					
ANR	1023809	Condition	i < bufsz	2869:14:81625:81633	1023472	1	True				
ANR	1023810	RelationalExpression	i < bufsz		1023472	0		<			
ANR	1023811	Identifier	i		1023472	0					
ANR	1023812	Identifier	bufsz		1023472	1					
ANR	1023813	PostIncDecOperationExpression	i ++	2869:25:81636:81638	1023472	2	True				
ANR	1023814	Identifier	i		1023472	0					
ANR	1023815	IncDec	++		1023472	1					
ANR	1023816	CompoundStatement		64:30:1422:1422	1023472	3					
ANR	1023817	ExpressionStatement	"eprintf ( ""%02x"" , buf [ i ] )"	2870:3:81646:81670	1023472	0	True				
ANR	1023818	CallExpression	"eprintf ( ""%02x"" , buf [ i ] )"		1023472	0					
ANR	1023819	Callee	eprintf		1023472	0					
ANR	1023820	Identifier	eprintf		1023472	0					
ANR	1023821	ArgumentList	"""%02x"""		1023472	1					
ANR	1023822	Argument	"""%02x"""		1023472	0					
ANR	1023823	PrimaryExpression	"""%02x"""		1023472	0					
ANR	1023824	Argument	buf [ i ]		1023472	1					
ANR	1023825	ArrayIndexing	buf [ i ]		1023472	0					
ANR	1023826	Identifier	buf		1023472	0					
ANR	1023827	Identifier	i		1023472	1					
ANR	1023828	IfStatement	if ( mode )		1023472	13					
ANR	1023829	Condition	mode	2872:6:81682:81685	1023472	0	True				
ANR	1023830	Identifier	mode		1023472	0					
ANR	1023831	CompoundStatement		67:12:1469:1469	1023472	1					
ANR	1023832	ExpressionStatement	"eprintf ( "" \\""%s\\"""" , buf )"	2873:3:81693:81717	1023472	0	True				
ANR	1023833	CallExpression	"eprintf ( "" \\""%s\\"""" , buf )"		1023472	0					
ANR	1023834	Callee	eprintf		1023472	0					
ANR	1023835	Identifier	eprintf		1023472	0					
ANR	1023836	ArgumentList	""" \\""%s\\"""""		1023472	1					
ANR	1023837	Argument	""" \\""%s\\"""""		1023472	0					
ANR	1023838	PrimaryExpression	""" \\""%s\\"""""		1023472	0					
ANR	1023839	Argument	buf		1023472	1					
ANR	1023840	Identifier	buf		1023472	0					
ANR	1023841	ExpressionStatement	"r_hash_do_begin ( ctx , hashBits )"	2876:2:81726:81757	1023472	14	True				
ANR	1023842	CallExpression	"r_hash_do_begin ( ctx , hashBits )"		1023472	0					
ANR	1023843	Callee	r_hash_do_begin		1023472	0					
ANR	1023844	Identifier	r_hash_do_begin		1023472	0					
ANR	1023845	ArgumentList	ctx		1023472	1					
ANR	1023846	Argument	ctx		1023472	0					
ANR	1023847	Identifier	ctx		1023472	0					
ANR	1023848	Argument	hashBits		1023472	1					
ANR	1023849	Identifier	hashBits		1023472	0					
ANR	1023850	ExpressionStatement	"( void ) r_hash_calculate ( ctx , hashBits , buf , bufsz )"	2877:2:81761:81811	1023472	15	True				
ANR	1023851	CastExpression	"( void ) r_hash_calculate ( ctx , hashBits , buf , bufsz )"		1023472	0					
ANR	1023852	CastTarget	void		1023472	0					
ANR	1023853	CallExpression	"r_hash_calculate ( ctx , hashBits , buf , bufsz )"		1023472	1					
ANR	1023854	Callee	r_hash_calculate		1023472	0					
ANR	1023855	Identifier	r_hash_calculate		1023472	0					
ANR	1023856	ArgumentList	ctx		1023472	1					
ANR	1023857	Argument	ctx		1023472	0					
ANR	1023858	Identifier	ctx		1023472	0					
ANR	1023859	Argument	hashBits		1023472	1					
ANR	1023860	Identifier	hashBits		1023472	0					
ANR	1023861	Argument	buf		1023472	2					
ANR	1023862	Identifier	buf		1023472	0					
ANR	1023863	Argument	bufsz		1023472	3					
ANR	1023864	Identifier	bufsz		1023472	0					
ANR	1023865	ExpressionStatement	"r_hash_do_end ( ctx , hashBits )"	2878:2:81815:81844	1023472	16	True				
ANR	1023866	CallExpression	"r_hash_do_end ( ctx , hashBits )"		1023472	0					
ANR	1023867	Callee	r_hash_do_end		1023472	0					
ANR	1023868	Identifier	r_hash_do_end		1023472	0					
ANR	1023869	ArgumentList	ctx		1023472	1					
ANR	1023870	Argument	ctx		1023472	0					
ANR	1023871	Identifier	ctx		1023472	0					
ANR	1023872	Argument	hashBits		1023472	1					
ANR	1023873	Identifier	hashBits		1023472	0					
ANR	1023874	ExpressionStatement	"eprintf ( "" digest:"" )"	2880:2:81849:81869	1023472	17	True				
ANR	1023875	CallExpression	"eprintf ( "" digest:"" )"		1023472	0					
ANR	1023876	Callee	eprintf		1023472	0					
ANR	1023877	Identifier	eprintf		1023472	0					
ANR	1023878	ArgumentList	""" digest:"""		1023472	1					
ANR	1023879	Argument	""" digest:"""		1023472	0					
ANR	1023880	PrimaryExpression	""" digest:"""		1023472	0					
ANR	1023881	ForStatement	for ( i = 0 ; i < hashLength ; i ++ )		1023472	18					
ANR	1023882	ForInit	i = 0 ;	2881:7:81878:81883	1023472	0	True				
ANR	1023883	AssignmentExpression	i = 0		1023472	0		=			
ANR	1023884	Identifier	i		1023472	0					
ANR	1023885	PrimaryExpression	0		1023472	1					
ANR	1023886	Condition	i < hashLength	2881:14:81885:81898	1023472	1	True				
ANR	1023887	RelationalExpression	i < hashLength		1023472	0		<			
ANR	1023888	Identifier	i		1023472	0					
ANR	1023889	Identifier	hashLength		1023472	1					
ANR	1023890	PostIncDecOperationExpression	i ++	2881:30:81901:81903	1023472	2	True				
ANR	1023891	Identifier	i		1023472	0					
ANR	1023892	IncDec	++		1023472	1					
ANR	1023893	CompoundStatement		76:35:1687:1687	1023472	3					
ANR	1023894	ExpressionStatement	"eprintf ( ""%02x"" , ctx -> digest [ i ] )"	2882:3:81911:81943	1023472	0	True				
ANR	1023895	CallExpression	"eprintf ( ""%02x"" , ctx -> digest [ i ] )"		1023472	0					
ANR	1023896	Callee	eprintf		1023472	0					
ANR	1023897	Identifier	eprintf		1023472	0					
ANR	1023898	ArgumentList	"""%02x"""		1023472	1					
ANR	1023899	Argument	"""%02x"""		1023472	0					
ANR	1023900	PrimaryExpression	"""%02x"""		1023472	0					
ANR	1023901	Argument	ctx -> digest [ i ]		1023472	1					
ANR	1023902	ArrayIndexing	ctx -> digest [ i ]		1023472	0					
ANR	1023903	PtrMemberAccess	ctx -> digest		1023472	0					
ANR	1023904	Identifier	ctx		1023472	0					
ANR	1023905	Identifier	digest		1023472	1					
ANR	1023906	Identifier	i		1023472	1					
ANR	1023907	ExpressionStatement	"eprintf ( "" (%d h/s)  \\r"" , mount )"	2884:2:81951:81983	1023472	19	True				
ANR	1023908	CallExpression	"eprintf ( "" (%d h/s)  \\r"" , mount )"		1023472	0					
ANR	1023909	Callee	eprintf		1023472	0					
ANR	1023910	Identifier	eprintf		1023472	0					
ANR	1023911	ArgumentList	""" (%d h/s)  \\r"""		1023472	1					
ANR	1023912	Argument	""" (%d h/s)  \\r"""		1023472	0					
ANR	1023913	PrimaryExpression	""" (%d h/s)  \\r"""		1023472	0					
ANR	1023914	Argument	mount		1023472	1					
ANR	1023915	Identifier	mount		1023472	0					
ANR	1023916	IfStatement	"if ( ! memcmp ( hashValue , ctx -> digest , hashLength ) )"		1023472	20					
ANR	1023917	Condition	"! memcmp ( hashValue , ctx -> digest , hashLength )"	2885:6:81991:82034	1023472	0	True				
ANR	1023918	UnaryOperationExpression	"! memcmp ( hashValue , ctx -> digest , hashLength )"		1023472	0					
ANR	1023919	UnaryOperator	!		1023472	0					
ANR	1023920	CallExpression	"memcmp ( hashValue , ctx -> digest , hashLength )"		1023472	1					
ANR	1023921	Callee	memcmp		1023472	0					
ANR	1023922	Identifier	memcmp		1023472	0					
ANR	1023923	ArgumentList	hashValue		1023472	1					
ANR	1023924	Argument	hashValue		1023472	0					
ANR	1023925	Identifier	hashValue		1023472	0					
ANR	1023926	Argument	ctx -> digest		1023472	1					
ANR	1023927	PtrMemberAccess	ctx -> digest		1023472	0					
ANR	1023928	Identifier	ctx		1023472	0					
ANR	1023929	Identifier	digest		1023472	1					
ANR	1023930	Argument	hashLength		1023472	2					
ANR	1023931	Identifier	hashLength		1023472	0					
ANR	1023932	CompoundStatement		80:52:1818:1818	1023472	1					
ANR	1023933	ExpressionStatement	"eprintf ( ""\\nCOLLISION FOUND!\\n"" )"	2886:3:82042:82074	1023472	0	True				
ANR	1023934	CallExpression	"eprintf ( ""\\nCOLLISION FOUND!\\n"" )"		1023472	0					
ANR	1023935	Callee	eprintf		1023472	0					
ANR	1023936	Identifier	eprintf		1023472	0					
ANR	1023937	ArgumentList	"""\\nCOLLISION FOUND!\\n"""		1023472	1					
ANR	1023938	Argument	"""\\nCOLLISION FOUND!\\n"""		1023472	0					
ANR	1023939	PrimaryExpression	"""\\nCOLLISION FOUND!\\n"""		1023472	0					
ANR	1023940	ExpressionStatement	"r_print_hexdump ( core -> print , core -> offset , buf , bufsz , 0 , 16 , 0 )"	2887:3:82079:82144	1023472	1	True				
ANR	1023941	CallExpression	"r_print_hexdump ( core -> print , core -> offset , buf , bufsz , 0 , 16 , 0 )"		1023472	0					
ANR	1023942	Callee	r_print_hexdump		1023472	0					
ANR	1023943	Identifier	r_print_hexdump		1023472	0					
ANR	1023944	ArgumentList	core -> print		1023472	1					
ANR	1023945	Argument	core -> print		1023472	0					
ANR	1023946	PtrMemberAccess	core -> print		1023472	0					
ANR	1023947	Identifier	core		1023472	0					
ANR	1023948	Identifier	print		1023472	1					
ANR	1023949	Argument	core -> offset		1023472	1					
ANR	1023950	PtrMemberAccess	core -> offset		1023472	0					
ANR	1023951	Identifier	core		1023472	0					
ANR	1023952	Identifier	offset		1023472	1					
ANR	1023953	Argument	buf		1023472	2					
ANR	1023954	Identifier	buf		1023472	0					
ANR	1023955	Argument	bufsz		1023472	3					
ANR	1023956	Identifier	bufsz		1023472	0					
ANR	1023957	Argument	0		1023472	4					
ANR	1023958	PrimaryExpression	0		1023472	0					
ANR	1023959	Argument	16		1023472	5					
ANR	1023960	PrimaryExpression	16		1023472	0					
ANR	1023961	Argument	0		1023472	6					
ANR	1023962	PrimaryExpression	0		1023472	0					
ANR	1023963	ExpressionStatement	r_cons_flush ( )	2888:3:82149:82164	1023472	2	True				
ANR	1023964	CallExpression	r_cons_flush ( )		1023472	0					
ANR	1023965	Callee	r_cons_flush		1023472	0					
ANR	1023966	Identifier	r_cons_flush		1023472	0					
ANR	1023967	ArgumentList			1023472	1					
ANR	1023968	ExpressionStatement	inc ++	2890:2:82172:82177	1023472	21	True				
ANR	1023969	PostIncDecOperationExpression	inc ++		1023472	0					
ANR	1023970	Identifier	inc		1023472	0					
ANR	1023971	IncDec	++		1023472	1					
ANR	1023972	ExpressionStatement	r_cons_break_pop ( )	2892:1:82183:82202	1023472	24	True				
ANR	1023973	CallExpression	r_cons_break_pop ( )		1023472	0					
ANR	1023974	Callee	r_cons_break_pop		1023472	0					
ANR	1023975	Identifier	r_cons_break_pop		1023472	0					
ANR	1023976	ArgumentList			1023472	1					
ANR	1023977	ExpressionStatement	free ( buf )	2893:1:82205:82215	1023472	25	True				
ANR	1023978	CallExpression	free ( buf )		1023472	0					
ANR	1023979	Callee	free		1023472	0					
ANR	1023980	Identifier	free		1023472	0					
ANR	1023981	ArgumentList	buf		1023472	1					
ANR	1023982	Argument	buf		1023472	0					
ANR	1023983	Identifier	buf		1023472	0					
ANR	1023984	ExpressionStatement	r_hash_free ( ctx )	2894:1:82218:82235	1023472	26	True				
ANR	1023985	CallExpression	r_hash_free ( ctx )		1023472	0					
ANR	1023986	Callee	r_hash_free		1023472	0					
ANR	1023987	Identifier	r_hash_free		1023472	0					
ANR	1023988	ArgumentList	ctx		1023472	1					
ANR	1023989	Argument	ctx		1023472	0					
ANR	1023990	Identifier	ctx		1023472	0					
ANR	1023991	ReturnType	static void		1023472	1					
ANR	1023992	Identifier	search_collisions		1023472	2					
ANR	1023993	ParameterList	"RCore * core , const char * hashName , const ut8 * hashValue , int hashLength , int mode"		1023472	3					
ANR	1023994	Parameter	RCore * core	2806:30:80135:80145	1023472	0	True				
ANR	1023995	ParameterType	RCore *		1023472	0					
ANR	1023996	Identifier	core		1023472	1					
ANR	1023997	Parameter	const char * hashName	2806:43:80148:80167	1023472	1	True				
ANR	1023998	ParameterType	const char *		1023472	0					
ANR	1023999	Identifier	hashName		1023472	1					
ANR	1024000	Parameter	const ut8 * hashValue	2806:65:80170:80189	1023472	2	True				
ANR	1024001	ParameterType	const ut8 *		1023472	0					
ANR	1024002	Identifier	hashValue		1023472	1					
ANR	1024003	Parameter	int hashLength	2806:87:80192:80205	1023472	3	True				
ANR	1024004	ParameterType	int		1023472	0					
ANR	1024005	Identifier	hashLength		1023472	1					
ANR	1024006	Parameter	int mode	2806:103:80208:80215	1023472	4	True				
ANR	1024007	ParameterType	int		1023472	0					
ANR	1024008	Identifier	mode		1023472	1					
ANR	1024009	CFGEntryNode	ENTRY		1023472		True				
ANR	1024010	CFGExitNode	EXIT		1023472		True				
ANR	1024011	Symbol	bufsz		1023472						
ANR	1024012	Symbol	prev		1023472						
ANR	1024013	Symbol	* core		1023472						
ANR	1024014	Symbol	r_hash_size		1023472						
ANR	1024015	Symbol	core -> offset		1023472						
ANR	1024016	Symbol	calloc		1023472						
ANR	1024017	Symbol	mode		1023472						
ANR	1024018	Symbol	r_hash_name_to_bits		1023472						
ANR	1024019	Symbol	r_cons_is_breaked		1023472						
ANR	1024020	Symbol	memcmp		1023472						
ANR	1024021	Symbol	algoType		1023472						
ANR	1024022	Symbol	now		1023472						
ANR	1024023	Symbol	ctx -> digest		1023472						
ANR	1024024	Symbol	* ctx -> digest		1023472						
ANR	1024025	Symbol	inc		1023472						
ANR	1024026	Symbol	core -> blocksize		1023472						
ANR	1024027	Symbol	amount		1023472						
ANR	1024028	Symbol	* buf		1023472						
ANR	1024029	Symbol	NULL		1023472						
ANR	1024030	Symbol	core -> block		1023472						
ANR	1024031	Symbol	ctx		1023472						
ANR	1024032	Symbol	r_sys_now		1023472						
ANR	1024033	Symbol	i		1023472						
ANR	1024034	Symbol	hashName		1023472						
ANR	1024035	Symbol	R_HASH_CRC32		1023472						
ANR	1024036	Symbol	mount		1023472						
ANR	1024037	Symbol	hashValue		1023472						
ANR	1024038	Symbol	* ctx		1023472						
ANR	1024039	Symbol	r_hash_new		1023472						
ANR	1024040	Symbol	cmphash		1023472						
ANR	1024041	Symbol	core		1023472						
ANR	1024042	Symbol	hashLength		1023472						
ANR	1024043	Symbol	buf		1023472						
ANR	1024044	Symbol	* i		1023472						
ANR	1024045	Symbol	true		1023472						
ANR	1024046	Symbol	hashBits		1023472						
ANR	1024047	Symbol	hashSize		1023472						
ANR	1024048	Symbol	* * ctx		1023472						
ANR	1024049	Symbol	core -> print		1023472						
ANR	1024050	Function	__core_cmd_search_asm_infinite	2897:0:82240:83102							
ANR	1024051	FunctionDef	"__core_cmd_search_asm_infinite (RCore * core , const char * arg)"		1024050	0					
ANR	1024052	CompoundStatement		2897:74:82314:83102	1024050	0					
ANR	1024053	IdentifierDeclStatement	"const char * search_in = r_config_get ( core -> config , ""search.in"" ) ;"	2898:1:82317:82381	1024050	0	True				
ANR	1024054	IdentifierDecl	"* search_in = r_config_get ( core -> config , ""search.in"" )"		1024050	0					
ANR	1024055	IdentifierDeclType	const char *		1024050	0					
ANR	1024056	Identifier	search_in		1024050	1					
ANR	1024057	AssignmentExpression	"* search_in = r_config_get ( core -> config , ""search.in"" )"		1024050	2		=			
ANR	1024058	Identifier	search_in		1024050	0					
ANR	1024059	CallExpression	"r_config_get ( core -> config , ""search.in"" )"		1024050	1					
ANR	1024060	Callee	r_config_get		1024050	0					
ANR	1024061	Identifier	r_config_get		1024050	0					
ANR	1024062	ArgumentList	core -> config		1024050	1					
ANR	1024063	Argument	core -> config		1024050	0					
ANR	1024064	PtrMemberAccess	core -> config		1024050	0					
ANR	1024065	Identifier	core		1024050	0					
ANR	1024066	Identifier	config		1024050	1					
ANR	1024067	Argument	"""search.in"""		1024050	1					
ANR	1024068	PrimaryExpression	"""search.in"""		1024050	0					
ANR	1024069	IdentifierDeclStatement	"RList * boundaries = r_core_get_boundaries_prot ( core , - 1 , search_in , ""search"" ) ;"	2899:1:82384:82462	1024050	1	True				
ANR	1024070	IdentifierDecl	"* boundaries = r_core_get_boundaries_prot ( core , - 1 , search_in , ""search"" )"		1024050	0					
ANR	1024071	IdentifierDeclType	RList *		1024050	0					
ANR	1024072	Identifier	boundaries		1024050	1					
ANR	1024073	AssignmentExpression	"* boundaries = r_core_get_boundaries_prot ( core , - 1 , search_in , ""search"" )"		1024050	2		=			
ANR	1024074	Identifier	boundaries		1024050	0					
ANR	1024075	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , search_in , ""search"" )"		1024050	1					
ANR	1024076	Callee	r_core_get_boundaries_prot		1024050	0					
ANR	1024077	Identifier	r_core_get_boundaries_prot		1024050	0					
ANR	1024078	ArgumentList	core		1024050	1					
ANR	1024079	Argument	core		1024050	0					
ANR	1024080	Identifier	core		1024050	0					
ANR	1024081	Argument	- 1		1024050	1					
ANR	1024082	UnaryOperationExpression	- 1		1024050	0					
ANR	1024083	UnaryOperator	-		1024050	0					
ANR	1024084	PrimaryExpression	1		1024050	1					
ANR	1024085	Argument	search_in		1024050	2					
ANR	1024086	Identifier	search_in		1024050	0					
ANR	1024087	Argument	"""search"""		1024050	3					
ANR	1024088	PrimaryExpression	"""search"""		1024050	0					
ANR	1024089	IdentifierDeclStatement	RListIter * iter ;	2900:1:82465:82480	1024050	2	True				
ANR	1024090	IdentifierDecl	* iter		1024050	0					
ANR	1024091	IdentifierDeclType	RListIter *		1024050	0					
ANR	1024092	Identifier	iter		1024050	1					
ANR	1024093	IdentifierDeclStatement	RIOMap * map ;	2901:1:82483:82494	1024050	3	True				
ANR	1024094	IdentifierDecl	* map		1024050	0					
ANR	1024095	IdentifierDeclType	RIOMap *		1024050	0					
ANR	1024096	Identifier	map		1024050	1					
ANR	1024097	IdentifierDeclStatement	RAnalOp analop ;	2902:1:82497:82511	1024050	4	True				
ANR	1024098	IdentifierDecl	analop		1024050	0					
ANR	1024099	IdentifierDeclType	RAnalOp		1024050	0					
ANR	1024100	Identifier	analop		1024050	1					
ANR	1024101	IdentifierDeclStatement	ut64 at ;	2903:1:82514:82521	1024050	5	True				
ANR	1024102	IdentifierDecl	at		1024050	0					
ANR	1024103	IdentifierDeclType	ut64		1024050	0					
ANR	1024104	Identifier	at		1024050	1					
ANR	1024105	Statement	r_list_foreach	2904:1:82524:82537	1024050	6	True				
ANR	1024106	Statement	(	2904:16:82539:82539	1024050	7	True				
ANR	1024107	Statement	boundaries	2904:17:82540:82549	1024050	8	True				
ANR	1024108	Statement	","	2904:27:82550:82550	1024050	9	True				
ANR	1024109	Statement	iter	2904:29:82552:82555	1024050	10	True				
ANR	1024110	Statement	","	2904:33:82556:82556	1024050	11	True				
ANR	1024111	Statement	map	2904:35:82558:82560	1024050	12	True				
ANR	1024112	Statement	)	2904:38:82561:82561	1024050	13	True				
ANR	1024113	CompoundStatement		12:2:358:400	1024050	14					
ANR	1024114	IdentifierDeclStatement	ut64 map_begin = map -> itv . addr ;	2905:2:82567:82597	1024050	0	True				
ANR	1024115	IdentifierDecl	map_begin = map -> itv . addr		1024050	0					
ANR	1024116	IdentifierDeclType	ut64		1024050	0					
ANR	1024117	Identifier	map_begin		1024050	1					
ANR	1024118	AssignmentExpression	map_begin = map -> itv . addr		1024050	2		=			
ANR	1024119	Identifier	map_begin		1024050	0					
ANR	1024120	MemberAccess	map -> itv . addr		1024050	1					
ANR	1024121	PtrMemberAccess	map -> itv		1024050	0					
ANR	1024122	Identifier	map		1024050	0					
ANR	1024123	Identifier	itv		1024050	1					
ANR	1024124	Identifier	addr		1024050	1					
ANR	1024125	IdentifierDeclStatement	ut64 map_size = map -> itv . size ;	2906:2:82601:82630	1024050	1	True				
ANR	1024126	IdentifierDecl	map_size = map -> itv . size		1024050	0					
ANR	1024127	IdentifierDeclType	ut64		1024050	0					
ANR	1024128	Identifier	map_size		1024050	1					
ANR	1024129	AssignmentExpression	map_size = map -> itv . size		1024050	2		=			
ANR	1024130	Identifier	map_size		1024050	0					
ANR	1024131	MemberAccess	map -> itv . size		1024050	1					
ANR	1024132	PtrMemberAccess	map -> itv		1024050	0					
ANR	1024133	Identifier	map		1024050	0					
ANR	1024134	Identifier	itv		1024050	1					
ANR	1024135	Identifier	size		1024050	1					
ANR	1024136	IdentifierDeclStatement	ut64 map_end = map_begin + map_size ;	2907:2:82634:82669	1024050	2	True				
ANR	1024137	IdentifierDecl	map_end = map_begin + map_size		1024050	0					
ANR	1024138	IdentifierDeclType	ut64		1024050	0					
ANR	1024139	Identifier	map_end		1024050	1					
ANR	1024140	AssignmentExpression	map_end = map_begin + map_size		1024050	2		=			
ANR	1024141	Identifier	map_end		1024050	0					
ANR	1024142	AdditiveExpression	map_begin + map_size		1024050	1		+			
ANR	1024143	Identifier	map_begin		1024050	0					
ANR	1024144	Identifier	map_size		1024050	1					
ANR	1024145	IdentifierDeclStatement	"ut8 * buf = calloc ( map_end - map_begin , 1 ) ;"	2908:2:82673:82715	1024050	3	True				
ANR	1024146	IdentifierDecl	"* buf = calloc ( map_end - map_begin , 1 )"		1024050	0					
ANR	1024147	IdentifierDeclType	ut8 *		1024050	0					
ANR	1024148	Identifier	buf		1024050	1					
ANR	1024149	AssignmentExpression	"* buf = calloc ( map_end - map_begin , 1 )"		1024050	2		=			
ANR	1024150	Identifier	buf		1024050	0					
ANR	1024151	CallExpression	"calloc ( map_end - map_begin , 1 )"		1024050	1					
ANR	1024152	Callee	calloc		1024050	0					
ANR	1024153	Identifier	calloc		1024050	0					
ANR	1024154	ArgumentList	map_end - map_begin		1024050	1					
ANR	1024155	Argument	map_end - map_begin		1024050	0					
ANR	1024156	AdditiveExpression	map_end - map_begin		1024050	0		-			
ANR	1024157	Identifier	map_end		1024050	0					
ANR	1024158	Identifier	map_begin		1024050	1					
ANR	1024159	Argument	1		1024050	1					
ANR	1024160	PrimaryExpression	1		1024050	0					
ANR	1024161	IfStatement	if ( ! buf )		1024050	4					
ANR	1024162	Condition	! buf	2909:6:82723:82726	1024050	0	True				
ANR	1024163	UnaryOperationExpression	! buf		1024050	0					
ANR	1024164	UnaryOperator	!		1024050	0					
ANR	1024165	Identifier	buf		1024050	1					
ANR	1024166	CompoundStatement		13:12:414:414	1024050	1					
ANR	1024167	ContinueStatement	continue ;	2910:3:82734:82742	1024050	0	True				
ANR	1024168	ExpressionStatement	"( void ) r_io_read_at ( core -> io , map_begin , buf , map_size )"	2912:2:82750:82806	1024050	5	True				
ANR	1024169	CastExpression	"( void ) r_io_read_at ( core -> io , map_begin , buf , map_size )"		1024050	0					
ANR	1024170	CastTarget	void		1024050	0					
ANR	1024171	CallExpression	"r_io_read_at ( core -> io , map_begin , buf , map_size )"		1024050	1					
ANR	1024172	Callee	r_io_read_at		1024050	0					
ANR	1024173	Identifier	r_io_read_at		1024050	0					
ANR	1024174	ArgumentList	core -> io		1024050	1					
ANR	1024175	Argument	core -> io		1024050	0					
ANR	1024176	PtrMemberAccess	core -> io		1024050	0					
ANR	1024177	Identifier	core		1024050	0					
ANR	1024178	Identifier	io		1024050	1					
ANR	1024179	Argument	map_begin		1024050	1					
ANR	1024180	Identifier	map_begin		1024050	0					
ANR	1024181	Argument	buf		1024050	2					
ANR	1024182	Identifier	buf		1024050	0					
ANR	1024183	Argument	map_size		1024050	3					
ANR	1024184	Identifier	map_size		1024050	0					
ANR	1024185	ForStatement	for ( at = map -> itv . addr ; at + 24 < map_end ; at += 1 )		1024050	6					
ANR	1024186	ForInit	at = map -> itv . addr ;	2913:7:82815:82833	1024050	0	True				
ANR	1024187	AssignmentExpression	at = map -> itv . addr		1024050	0		=			
ANR	1024188	Identifier	at		1024050	0					
ANR	1024189	MemberAccess	map -> itv . addr		1024050	1					
ANR	1024190	PtrMemberAccess	map -> itv		1024050	0					
ANR	1024191	Identifier	map		1024050	0					
ANR	1024192	Identifier	itv		1024050	1					
ANR	1024193	Identifier	addr		1024050	1					
ANR	1024194	Condition	at + 24 < map_end	2913:27:82835:82850	1024050	1	True				
ANR	1024195	RelationalExpression	at + 24 < map_end		1024050	0		<			
ANR	1024196	AdditiveExpression	at + 24		1024050	0		+			
ANR	1024197	Identifier	at		1024050	0					
ANR	1024198	PrimaryExpression	24		1024050	1					
ANR	1024199	Identifier	map_end		1024050	1					
ANR	1024200	AssignmentExpression	at += 1	2913:45:82853:82859	1024050	2	True	+=			
ANR	1024201	Identifier	at		1024050	0					
ANR	1024202	PrimaryExpression	1		1024050	1					
ANR	1024203	CompoundStatement		17:54:547:547	1024050	3					
ANR	1024204	ExpressionStatement	"r_anal_op ( core -> anal , & analop , at , buf + ( at - map_begin ) , 24 , R_ANAL_OP_MASK_HINT )"	2914:3:82867:82951	1024050	0	True				
ANR	1024205	CallExpression	"r_anal_op ( core -> anal , & analop , at , buf + ( at - map_begin ) , 24 , R_ANAL_OP_MASK_HINT )"		1024050	0					
ANR	1024206	Callee	r_anal_op		1024050	0					
ANR	1024207	Identifier	r_anal_op		1024050	0					
ANR	1024208	ArgumentList	core -> anal		1024050	1					
ANR	1024209	Argument	core -> anal		1024050	0					
ANR	1024210	PtrMemberAccess	core -> anal		1024050	0					
ANR	1024211	Identifier	core		1024050	0					
ANR	1024212	Identifier	anal		1024050	1					
ANR	1024213	Argument	& analop		1024050	1					
ANR	1024214	UnaryOperationExpression	& analop		1024050	0					
ANR	1024215	UnaryOperator	&		1024050	0					
ANR	1024216	Identifier	analop		1024050	1					
ANR	1024217	Argument	at		1024050	2					
ANR	1024218	Identifier	at		1024050	0					
ANR	1024219	Argument	buf + ( at - map_begin )		1024050	3					
ANR	1024220	AdditiveExpression	buf + ( at - map_begin )		1024050	0		+			
ANR	1024221	Identifier	buf		1024050	0					
ANR	1024222	AdditiveExpression	at - map_begin		1024050	1		-			
ANR	1024223	Identifier	at		1024050	0					
ANR	1024224	Identifier	map_begin		1024050	1					
ANR	1024225	Argument	24		1024050	4					
ANR	1024226	PrimaryExpression	24		1024050	0					
ANR	1024227	Argument	R_ANAL_OP_MASK_HINT		1024050	5					
ANR	1024228	Identifier	R_ANAL_OP_MASK_HINT		1024050	0					
ANR	1024229	IfStatement	if ( at == analop . jump )		1024050	1					
ANR	1024230	Condition	at == analop . jump	2915:7:82960:82976	1024050	0	True				
ANR	1024231	EqualityExpression	at == analop . jump		1024050	0		==			
ANR	1024232	Identifier	at		1024050	0					
ANR	1024233	MemberAccess	analop . jump		1024050	1					
ANR	1024234	Identifier	analop		1024050	0					
ANR	1024235	Identifier	jump		1024050	1					
ANR	1024236	CompoundStatement		19:26:664:664	1024050	1					
ANR	1024237	Statement	r_cons_printf	2916:4:82985:82997	1024050	0	True				
ANR	1024238	Statement	(	2916:18:82999:82999	1024050	1	True				
ANR	1024239	Statement	"""0x%08"""	2916:19:83000:83006	1024050	2	True				
ANR	1024240	Statement	PFMT64x	2916:26:83007:83013	1024050	3	True				
ANR	1024241	Statement	"""\\n"""	2916:33:83014:83017	1024050	4	True				
ANR	1024242	Statement	","	2916:37:83018:83018	1024050	5	True				
ANR	1024243	Statement	at	2916:39:83020:83021	1024050	6	True				
ANR	1024244	Statement	)	2916:41:83022:83022	1024050	7	True				
ANR	1024245	ExpressionStatement		2916:42:83023:83023	1024050	8	True				
ANR	1024246	ExpressionStatement	at += analop . size	2918:3:83033:83050	1024050	2	True				
ANR	1024247	AssignmentExpression	at += analop . size		1024050	0		+=			
ANR	1024248	Identifier	at		1024050	0					
ANR	1024249	MemberAccess	analop . size		1024050	1					
ANR	1024250	Identifier	analop		1024050	0					
ANR	1024251	Identifier	size		1024050	1					
ANR	1024252	ExpressionStatement	r_anal_op_fini ( & analop )	2919:3:83055:83079	1024050	3	True				
ANR	1024253	CallExpression	r_anal_op_fini ( & analop )		1024050	0					
ANR	1024254	Callee	r_anal_op_fini		1024050	0					
ANR	1024255	Identifier	r_anal_op_fini		1024050	0					
ANR	1024256	ArgumentList	& analop		1024050	1					
ANR	1024257	Argument	& analop		1024050	0					
ANR	1024258	UnaryOperationExpression	& analop		1024050	0					
ANR	1024259	UnaryOperator	&		1024050	0					
ANR	1024260	Identifier	analop		1024050	1					
ANR	1024261	ExpressionStatement	free ( buf )	2921:2:83087:83097	1024050	7	True				
ANR	1024262	CallExpression	free ( buf )		1024050	0					
ANR	1024263	Callee	free		1024050	0					
ANR	1024264	Identifier	free		1024050	0					
ANR	1024265	ArgumentList	buf		1024050	1					
ANR	1024266	Argument	buf		1024050	0					
ANR	1024267	Identifier	buf		1024050	0					
ANR	1024268	ReturnType	static void		1024050	1					
ANR	1024269	Identifier	__core_cmd_search_asm_infinite		1024050	2					
ANR	1024270	ParameterList	"RCore * core , const char * arg"		1024050	3					
ANR	1024271	Parameter	RCore * core	2897:44:82284:82294	1024050	0	True				
ANR	1024272	ParameterType	RCore *		1024050	0					
ANR	1024273	Identifier	core		1024050	1					
ANR	1024274	Parameter	const char * arg	2897:57:82297:82311	1024050	1	True				
ANR	1024275	ParameterType	const char *		1024050	0					
ANR	1024276	Identifier	arg		1024050	1					
ANR	1024277	CFGEntryNode	ENTRY		1024050		True				
ANR	1024278	CFGExitNode	EXIT		1024050		True				
ANR	1024279	CFGErrorNode	ERROR		1024050		True				
ANR	1024280	Symbol	map -> itv		1024050						
ANR	1024281	Symbol	* map		1024050						
ANR	1024282	Symbol	& analop		1024050						
ANR	1024283	Symbol	* core		1024050						
ANR	1024284	Symbol	r_config_get		1024050						
ANR	1024285	Symbol	calloc		1024050						
ANR	1024286	Symbol	core -> anal		1024050						
ANR	1024287	Symbol	core -> io		1024050						
ANR	1024288	Symbol	arg		1024050						
ANR	1024289	Symbol	boundaries		1024050						
ANR	1024290	Symbol	map -> itv . addr		1024050						
ANR	1024291	Symbol	map_end		1024050						
ANR	1024292	Symbol	map		1024050						
ANR	1024293	Symbol	core -> config		1024050						
ANR	1024294	Symbol	search_in		1024050						
ANR	1024295	Symbol	map_begin		1024050						
ANR	1024296	Symbol	iter		1024050						
ANR	1024297	Symbol	map_size		1024050						
ANR	1024298	Symbol	analop . jump		1024050						
ANR	1024299	Symbol	core		1024050						
ANR	1024300	Symbol	buf		1024050						
ANR	1024301	Symbol	at		1024050						
ANR	1024302	Symbol	map -> itv . size		1024050						
ANR	1024303	Symbol	R_ANAL_OP_MASK_HINT		1024050						
ANR	1024304	Symbol	analop . size		1024050						
ANR	1024305	Symbol	analop		1024050						
ANR	1024306	Symbol	r_core_get_boundaries_prot		1024050						
ANR	1024307	Function	__core_cmd_search_asm_byteswap	2925:0:83105:83620							
ANR	1024308	FunctionDef	"__core_cmd_search_asm_byteswap (RCore * core , int nth)"		1024307	0					
ANR	1024309	CompoundStatement		2925:66:83171:83620	1024307	0					
ANR	1024310	IdentifierDeclStatement	RAsmOp asmop ;	2926:1:83174:83186	1024307	0	True				
ANR	1024311	IdentifierDecl	asmop		1024307	0					
ANR	1024312	IdentifierDeclType	RAsmOp		1024307	0					
ANR	1024313	Identifier	asmop		1024307	1					
ANR	1024314	IdentifierDeclStatement	ut8 buf [ 32 ] ;	2927:1:83189:83200	1024307	1	True				
ANR	1024315	IdentifierDecl	buf [ 32 ]		1024307	0					
ANR	1024316	IdentifierDeclType	ut8 [ 32 ]		1024307	0					
ANR	1024317	Identifier	buf		1024307	1					
ANR	1024318	PrimaryExpression	32		1024307	2					
ANR	1024319	IdentifierDeclStatement	int i ;	2928:1:83203:83208	1024307	2	True				
ANR	1024320	IdentifierDecl	i		1024307	0					
ANR	1024321	IdentifierDeclType	int		1024307	0					
ANR	1024322	Identifier	i		1024307	1					
ANR	1024323	ExpressionStatement	"r_io_read_at ( core -> io , 0 , buf , sizeof ( buf ) )"	2929:1:83211:83256	1024307	3	True				
ANR	1024324	CallExpression	"r_io_read_at ( core -> io , 0 , buf , sizeof ( buf ) )"		1024307	0					
ANR	1024325	Callee	r_io_read_at		1024307	0					
ANR	1024326	Identifier	r_io_read_at		1024307	0					
ANR	1024327	ArgumentList	core -> io		1024307	1					
ANR	1024328	Argument	core -> io		1024307	0					
ANR	1024329	PtrMemberAccess	core -> io		1024307	0					
ANR	1024330	Identifier	core		1024307	0					
ANR	1024331	Identifier	io		1024307	1					
ANR	1024332	Argument	0		1024307	1					
ANR	1024333	PrimaryExpression	0		1024307	0					
ANR	1024334	Argument	buf		1024307	2					
ANR	1024335	Identifier	buf		1024307	0					
ANR	1024336	Argument	sizeof ( buf )		1024307	3					
ANR	1024337	SizeofExpression	sizeof ( buf )		1024307	0					
ANR	1024338	Sizeof	sizeof		1024307	0					
ANR	1024339	SizeofOperand	buf		1024307	1					
ANR	1024340	IfStatement	if ( nth < 0 || nth >= sizeof ( buf ) - 1 )		1024307	4					
ANR	1024341	Condition	nth < 0 || nth >= sizeof ( buf ) - 1	2930:5:83263:83296	1024307	0	True				
ANR	1024342	OrExpression	nth < 0 || nth >= sizeof ( buf ) - 1		1024307	0		||			
ANR	1024343	RelationalExpression	nth < 0		1024307	0		<			
ANR	1024344	Identifier	nth		1024307	0					
ANR	1024345	PrimaryExpression	0		1024307	1					
ANR	1024346	RelationalExpression	nth >= sizeof ( buf ) - 1		1024307	1		>=			
ANR	1024347	Identifier	nth		1024307	0					
ANR	1024348	AdditiveExpression	sizeof ( buf ) - 1		1024307	1		-			
ANR	1024349	SizeofExpression	sizeof ( buf )		1024307	0					
ANR	1024350	Sizeof	sizeof		1024307	0					
ANR	1024351	SizeofOperand	buf		1024307	1					
ANR	1024352	PrimaryExpression	1		1024307	1					
ANR	1024353	CompoundStatement		6:41:127:127	1024307	1					
ANR	1024354	ReturnStatement	return ;	2931:2:83303:83309	1024307	0	True				
ANR	1024355	ForStatement	for ( i = 0 ; i <= 0xff ; i ++ )		1024307	5					
ANR	1024356	ForInit	i = 0 ;	2933:6:83320:83325	1024307	0	True				
ANR	1024357	AssignmentExpression	i = 0		1024307	0		=			
ANR	1024358	Identifier	i		1024307	0					
ANR	1024359	PrimaryExpression	0		1024307	1					
ANR	1024360	Condition	i <= 0xff	2933:13:83327:83335	1024307	1	True				
ANR	1024361	RelationalExpression	i <= 0xff		1024307	0		<=			
ANR	1024362	Identifier	i		1024307	0					
ANR	1024363	PrimaryExpression	0xff		1024307	1					
ANR	1024364	PostIncDecOperationExpression	i ++	2933:24:83338:83340	1024307	2	True				
ANR	1024365	Identifier	i		1024307	0					
ANR	1024366	IncDec	++		1024307	1					
ANR	1024367	CompoundStatement		9:29:171:171	1024307	3					
ANR	1024368	ExpressionStatement	buf [ nth ] = i	2934:2:83347:83359	1024307	0	True				
ANR	1024369	AssignmentExpression	buf [ nth ] = i		1024307	0		=			
ANR	1024370	ArrayIndexing	buf [ nth ]		1024307	0					
ANR	1024371	Identifier	buf		1024307	0					
ANR	1024372	Identifier	nth		1024307	1					
ANR	1024373	Identifier	i		1024307	1					
ANR	1024374	IfStatement	"if ( r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) ) > 0 )"		1024307	1					
ANR	1024375	Condition	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) ) > 0"	2935:6:83367:83432	1024307	0	True				
ANR	1024376	RelationalExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) ) > 0"		1024307	0		>			
ANR	1024377	CallExpression	"r_asm_disassemble ( core -> assembler , & asmop , buf , sizeof ( buf ) )"		1024307	0					
ANR	1024378	Callee	r_asm_disassemble		1024307	0					
ANR	1024379	Identifier	r_asm_disassemble		1024307	0					
ANR	1024380	ArgumentList	core -> assembler		1024307	1					
ANR	1024381	Argument	core -> assembler		1024307	0					
ANR	1024382	PtrMemberAccess	core -> assembler		1024307	0					
ANR	1024383	Identifier	core		1024307	0					
ANR	1024384	Identifier	assembler		1024307	1					
ANR	1024385	Argument	& asmop		1024307	1					
ANR	1024386	UnaryOperationExpression	& asmop		1024307	0					
ANR	1024387	UnaryOperator	&		1024307	0					
ANR	1024388	Identifier	asmop		1024307	1					
ANR	1024389	Argument	buf		1024307	2					
ANR	1024390	Identifier	buf		1024307	0					
ANR	1024391	Argument	sizeof ( buf )		1024307	3					
ANR	1024392	SizeofExpression	sizeof ( buf )		1024307	0					
ANR	1024393	Sizeof	sizeof		1024307	0					
ANR	1024394	SizeofOperand	buf		1024307	1					
ANR	1024395	PrimaryExpression	0		1024307	1					
ANR	1024396	CompoundStatement		12:3:268:318	1024307	1					
ANR	1024397	IdentifierDeclStatement	const char * asmstr = r_strbuf_get ( & asmop . buf_asm ) ;	2936:3:83440:83490	1024307	0	True				
ANR	1024398	IdentifierDecl	* asmstr = r_strbuf_get ( & asmop . buf_asm )		1024307	0					
ANR	1024399	IdentifierDeclType	const char *		1024307	0					
ANR	1024400	Identifier	asmstr		1024307	1					
ANR	1024401	AssignmentExpression	* asmstr = r_strbuf_get ( & asmop . buf_asm )		1024307	2		=			
ANR	1024402	Identifier	asmstr		1024307	0					
ANR	1024403	CallExpression	r_strbuf_get ( & asmop . buf_asm )		1024307	1					
ANR	1024404	Callee	r_strbuf_get		1024307	0					
ANR	1024405	Identifier	r_strbuf_get		1024307	0					
ANR	1024406	ArgumentList	& asmop . buf_asm		1024307	1					
ANR	1024407	Argument	& asmop . buf_asm		1024307	0					
ANR	1024408	UnaryOperationExpression	& asmop . buf_asm		1024307	0					
ANR	1024409	UnaryOperator	&		1024307	0					
ANR	1024410	MemberAccess	asmop . buf_asm		1024307	1					
ANR	1024411	Identifier	asmop		1024307	0					
ANR	1024412	Identifier	buf_asm		1024307	1					
ANR	1024413	IfStatement	"if ( ! strstr ( asmstr , ""invalid"" ) && ! strstr ( asmstr , ""unaligned"" ) )"		1024307	1					
ANR	1024414	Condition	"! strstr ( asmstr , ""invalid"" ) && ! strstr ( asmstr , ""unaligned"" )"	2937:7:83499:83558	1024307	0	True				
ANR	1024415	AndExpression	"! strstr ( asmstr , ""invalid"" ) && ! strstr ( asmstr , ""unaligned"" )"		1024307	0		&&			
ANR	1024416	UnaryOperationExpression	"! strstr ( asmstr , ""invalid"" )"		1024307	0					
ANR	1024417	UnaryOperator	!		1024307	0					
ANR	1024418	CallExpression	"strstr ( asmstr , ""invalid"" )"		1024307	1					
ANR	1024419	Callee	strstr		1024307	0					
ANR	1024420	Identifier	strstr		1024307	0					
ANR	1024421	ArgumentList	asmstr		1024307	1					
ANR	1024422	Argument	asmstr		1024307	0					
ANR	1024423	Identifier	asmstr		1024307	0					
ANR	1024424	Argument	"""invalid"""		1024307	1					
ANR	1024425	PrimaryExpression	"""invalid"""		1024307	0					
ANR	1024426	UnaryOperationExpression	"! strstr ( asmstr , ""unaligned"" )"		1024307	1					
ANR	1024427	UnaryOperator	!		1024307	0					
ANR	1024428	CallExpression	"strstr ( asmstr , ""unaligned"" )"		1024307	1					
ANR	1024429	Callee	strstr		1024307	0					
ANR	1024430	Identifier	strstr		1024307	0					
ANR	1024431	ArgumentList	asmstr		1024307	1					
ANR	1024432	Argument	asmstr		1024307	0					
ANR	1024433	Identifier	asmstr		1024307	0					
ANR	1024434	Argument	"""unaligned"""		1024307	1					
ANR	1024435	PrimaryExpression	"""unaligned"""		1024307	0					
ANR	1024436	CompoundStatement		13:69:389:389	1024307	1					
ANR	1024437	ExpressionStatement	"r_cons_printf ( ""%02x  %s\\n"" , i , asmstr )"	2938:4:83567:83606	1024307	0	True				
ANR	1024438	CallExpression	"r_cons_printf ( ""%02x  %s\\n"" , i , asmstr )"		1024307	0					
ANR	1024439	Callee	r_cons_printf		1024307	0					
ANR	1024440	Identifier	r_cons_printf		1024307	0					
ANR	1024441	ArgumentList	"""%02x  %s\\n"""		1024307	1					
ANR	1024442	Argument	"""%02x  %s\\n"""		1024307	0					
ANR	1024443	PrimaryExpression	"""%02x  %s\\n"""		1024307	0					
ANR	1024444	Argument	i		1024307	1					
ANR	1024445	Identifier	i		1024307	0					
ANR	1024446	Argument	asmstr		1024307	2					
ANR	1024447	Identifier	asmstr		1024307	0					
ANR	1024448	ReturnType	static void		1024307	1					
ANR	1024449	Identifier	__core_cmd_search_asm_byteswap		1024307	2					
ANR	1024450	ParameterList	"RCore * core , int nth"		1024307	3					
ANR	1024451	Parameter	RCore * core	2925:44:83149:83159	1024307	0	True				
ANR	1024452	ParameterType	RCore *		1024307	0					
ANR	1024453	Identifier	core		1024307	1					
ANR	1024454	Parameter	int nth	2925:57:83162:83168	1024307	1	True				
ANR	1024455	ParameterType	int		1024307	0					
ANR	1024456	Identifier	nth		1024307	1					
ANR	1024457	CFGEntryNode	ENTRY		1024307		True				
ANR	1024458	CFGExitNode	EXIT		1024307		True				
ANR	1024459	Symbol	* buf		1024307						
ANR	1024460	Symbol	nth		1024307						
ANR	1024461	Symbol	* core		1024307						
ANR	1024462	Symbol	i		1024307						
ANR	1024463	Symbol	core -> assembler		1024307						
ANR	1024464	Symbol	* nth		1024307						
ANR	1024465	Symbol	asmop		1024307						
ANR	1024466	Symbol	core		1024307						
ANR	1024467	Symbol	buf		1024307						
ANR	1024468	Symbol	core -> io		1024307						
ANR	1024469	Symbol	r_strbuf_get		1024307						
ANR	1024470	Symbol	strstr		1024307						
ANR	1024471	Symbol	& asmop		1024307						
ANR	1024472	Symbol	& asmop . buf_asm		1024307						
ANR	1024473	Symbol	asmstr		1024307						
ANR	1024474	Symbol	r_asm_disassemble		1024307						
ANR	1024475	Function	cmd_search	2944:0:83623:111809							
ANR	1024476	FunctionDef	"cmd_search (void * data , const char * input)"		1024475	0					
ANR	1024477	CompoundStatement		2944:53:83676:111809	1024475	0					
ANR	1024478	IdentifierDeclStatement	bool dosearch = false ;	2945:1:83679:83700	1024475	0	True				
ANR	1024479	IdentifierDecl	dosearch = false		1024475	0					
ANR	1024480	IdentifierDeclType	bool		1024475	0					
ANR	1024481	Identifier	dosearch		1024475	1					
ANR	1024482	AssignmentExpression	dosearch = false		1024475	2		=			
ANR	1024483	Identifier	false		1024475	0					
ANR	1024484	Identifier	false		1024475	1					
ANR	1024485	IdentifierDeclStatement	int ret = true ;	2946:1:83703:83717	1024475	1	True				
ANR	1024486	IdentifierDecl	ret = true		1024475	0					
ANR	1024487	IdentifierDeclType	int		1024475	0					
ANR	1024488	Identifier	ret		1024475	1					
ANR	1024489	AssignmentExpression	ret = true		1024475	2		=			
ANR	1024490	Identifier	true		1024475	0					
ANR	1024491	Identifier	true		1024475	1					
ANR	1024492	IdentifierDeclStatement	RCore * core = ( RCore * ) data ;	2947:1:83720:83748	1024475	2	True				
ANR	1024493	IdentifierDecl	* core = ( RCore * ) data		1024475	0					
ANR	1024494	IdentifierDeclType	RCore *		1024475	0					
ANR	1024495	Identifier	core		1024475	1					
ANR	1024496	AssignmentExpression	* core = ( RCore * ) data		1024475	2		=			
ANR	1024497	Identifier	core		1024475	0					
ANR	1024498	CastExpression	( RCore * ) data		1024475	1					
ANR	1024499	CastTarget	RCore *		1024475	0					
ANR	1024500	Identifier	data		1024475	1					
ANR	1024501	Statement	struct	2948:1:83751:83756	1024475	3	True				
ANR	1024502	Statement	search_parameters	2948:8:83758:83774	1024475	4	True				
ANR	1024503	Statement	param	2948:26:83776:83780	1024475	5	True				
ANR	1024504	Statement	=	2948:32:83782:83782	1024475	6	True				
ANR	1024505	CompoundStatement		5:34:107:107	1024475	7					
ANR	1024506	Statement	.	2949:2:83788:83788	1024475	0	True				
ANR	1024507	Statement	core	2949:3:83789:83792	1024475	1	True				
ANR	1024508	Statement	=	2949:8:83794:83794	1024475	2	True				
ANR	1024509	Statement	core	2949:10:83796:83799	1024475	3	True				
ANR	1024510	Statement	","	2949:14:83800:83800	1024475	4	True				
ANR	1024511	Statement	.	2950:2:83804:83804	1024475	5	True				
ANR	1024512	Statement	cmd_hit	2950:3:83805:83811	1024475	6	True				
ANR	1024513	Statement	=	2950:11:83813:83813	1024475	7	True				
ANR	1024514	Statement	r_config_get	2950:13:83815:83826	1024475	8	True				
ANR	1024515	Statement	(	2950:26:83828:83828	1024475	9	True				
ANR	1024516	Statement	core	2950:27:83829:83832	1024475	10	True				
ANR	1024517	Statement	->	2950:31:83833:83834	1024475	11	True				
ANR	1024518	Statement	config	2950:33:83835:83840	1024475	12	True				
ANR	1024519	Statement	","	2950:39:83841:83841	1024475	13	True				
ANR	1024520	Statement	"""cmd.hit"""	2950:41:83843:83851	1024475	14	True				
ANR	1024521	Statement	)	2950:50:83852:83852	1024475	15	True				
ANR	1024522	Statement	","	2950:51:83853:83853	1024475	16	True				
ANR	1024523	Statement	.	2951:2:83857:83857	1024475	17	True				
ANR	1024524	Statement	inverse	2951:3:83858:83864	1024475	18	True				
ANR	1024525	Statement	=	2951:11:83866:83866	1024475	19	True				
ANR	1024526	Statement	false	2951:13:83868:83872	1024475	20	True				
ANR	1024527	Statement	","	2951:18:83873:83873	1024475	21	True				
ANR	1024528	Statement	.	2952:2:83877:83877	1024475	22	True				
ANR	1024529	Statement	crypto_search	2952:3:83878:83890	1024475	23	True				
ANR	1024530	Statement	=	2952:17:83892:83892	1024475	24	True				
ANR	1024531	Statement	false	2952:19:83894:83898	1024475	25	True				
ANR	1024532	Statement	","	2952:24:83899:83899	1024475	26	True				
ANR	1024533	Statement	.	2953:2:83903:83903	1024475	27	True				
ANR	1024534	Statement	aes_search	2953:3:83904:83913	1024475	28	True				
ANR	1024535	Statement	=	2953:14:83915:83915	1024475	29	True				
ANR	1024536	Statement	false	2953:16:83917:83921	1024475	30	True				
ANR	1024537	Statement	","	2953:21:83922:83922	1024475	31	True				
ANR	1024538	Statement	.	2954:2:83926:83926	1024475	32	True				
ANR	1024539	Statement	rsa_search	2954:3:83927:83936	1024475	33	True				
ANR	1024540	Statement	=	2954:14:83938:83938	1024475	34	True				
ANR	1024541	Statement	false	2954:16:83940:83944	1024475	35	True				
ANR	1024542	Statement	","	2954:21:83945:83945	1024475	36	True				
ANR	1024543	ExpressionStatement		2955:2:83949:83949	1024475	8	True				
ANR	1024544	IfStatement	if ( ! param . cmd_hit )		1024475	9					
ANR	1024545	Condition	! param . cmd_hit	2956:5:83956:83969	1024475	0	True				
ANR	1024546	UnaryOperationExpression	! param . cmd_hit		1024475	0					
ANR	1024547	UnaryOperator	!		1024475	0					
ANR	1024548	MemberAccess	param . cmd_hit		1024475	1					
ANR	1024549	Identifier	param		1024475	0					
ANR	1024550	Identifier	cmd_hit		1024475	1					
ANR	1024551	CompoundStatement		13:21:295:295	1024475	1					
ANR	1024552	ExpressionStatement	"param . cmd_hit = """""	2957:2:83976:83994	1024475	0	True				
ANR	1024553	AssignmentExpression	"param . cmd_hit = """""		1024475	0		=			
ANR	1024554	MemberAccess	param . cmd_hit		1024475	0					
ANR	1024555	Identifier	param		1024475	0					
ANR	1024556	Identifier	cmd_hit		1024475	1					
ANR	1024557	PrimaryExpression	""""""		1024475	1					
ANR	1024558	IdentifierDeclStatement	RSearch * search = core -> search ;	2959:1:84000:84030	1024475	10	True				
ANR	1024559	IdentifierDecl	* search = core -> search		1024475	0					
ANR	1024560	IdentifierDeclType	RSearch *		1024475	0					
ANR	1024561	Identifier	search		1024475	1					
ANR	1024562	AssignmentExpression	* search = core -> search		1024475	2		=			
ANR	1024563	Identifier	search		1024475	0					
ANR	1024564	PtrMemberAccess	core -> search		1024475	1					
ANR	1024565	Identifier	core		1024475	0					
ANR	1024566	Identifier	search		1024475	1					
ANR	1024567	IdentifierDeclStatement	int ignorecase = false ;	2960:1:84033:84055	1024475	11	True				
ANR	1024568	IdentifierDecl	ignorecase = false		1024475	0					
ANR	1024569	IdentifierDeclType	int		1024475	0					
ANR	1024570	Identifier	ignorecase		1024475	1					
ANR	1024571	AssignmentExpression	ignorecase = false		1024475	2		=			
ANR	1024572	Identifier	false		1024475	0					
ANR	1024573	Identifier	false		1024475	1					
ANR	1024574	IdentifierDeclStatement	int param_offset = 2 ;	2961:1:84058:84078	1024475	12	True				
ANR	1024575	IdentifierDecl	param_offset = 2		1024475	0					
ANR	1024576	IdentifierDeclType	int		1024475	0					
ANR	1024577	Identifier	param_offset		1024475	1					
ANR	1024578	AssignmentExpression	param_offset = 2		1024475	2		=			
ANR	1024579	Identifier	param_offset		1024475	0					
ANR	1024580	PrimaryExpression	2		1024475	1					
ANR	1024581	IdentifierDeclStatement	char * inp ;	2962:1:84081:84090	1024475	13	True				
ANR	1024582	IdentifierDecl	* inp		1024475	0					
ANR	1024583	IdentifierDeclType	char *		1024475	0					
ANR	1024584	Identifier	inp		1024475	1					
ANR	1024585	IfStatement	if ( ! core || ! core -> io )		1024475	14					
ANR	1024586	Condition	! core || ! core -> io	2963:5:84097:84114	1024475	0	True				
ANR	1024587	OrExpression	! core || ! core -> io		1024475	0		||			
ANR	1024588	UnaryOperationExpression	! core		1024475	0					
ANR	1024589	UnaryOperator	!		1024475	0					
ANR	1024590	Identifier	core		1024475	1					
ANR	1024591	UnaryOperationExpression	! core -> io		1024475	1					
ANR	1024592	UnaryOperator	!		1024475	0					
ANR	1024593	PtrMemberAccess	core -> io		1024475	1					
ANR	1024594	Identifier	core		1024475	0					
ANR	1024595	Identifier	io		1024475	1					
ANR	1024596	CompoundStatement		20:25:440:440	1024475	1					
ANR	1024597	ExpressionStatement	"eprintf ( ""Can't search if we don't have an open file.\\n"" )"	2964:2:84121:84178	1024475	0	True				
ANR	1024598	CallExpression	"eprintf ( ""Can't search if we don't have an open file.\\n"" )"		1024475	0					
ANR	1024599	Callee	eprintf		1024475	0					
ANR	1024600	Identifier	eprintf		1024475	0					
ANR	1024601	ArgumentList	"""Can't search if we don't have an open file.\\n"""		1024475	1					
ANR	1024602	Argument	"""Can't search if we don't have an open file.\\n"""		1024475	0					
ANR	1024603	PrimaryExpression	"""Can't search if we don't have an open file.\\n"""		1024475	0					
ANR	1024604	ReturnStatement	return false ;	2965:2:84182:84194	1024475	1	True				
ANR	1024605	Identifier	false		1024475	0					
ANR	1024606	IfStatement	if ( core -> in_search )		1024475	15					
ANR	1024607	Condition	core -> in_search	2967:5:84204:84218	1024475	0	True				
ANR	1024608	PtrMemberAccess	core -> in_search		1024475	0					
ANR	1024609	Identifier	core		1024475	0					
ANR	1024610	Identifier	in_search		1024475	1					
ANR	1024611	CompoundStatement		24:22:544:544	1024475	1					
ANR	1024612	ExpressionStatement	"eprintf ( ""Can't search from within a search.\\n"" )"	2968:2:84225:84273	1024475	0	True				
ANR	1024613	CallExpression	"eprintf ( ""Can't search from within a search.\\n"" )"		1024475	0					
ANR	1024614	Callee	eprintf		1024475	0					
ANR	1024615	Identifier	eprintf		1024475	0					
ANR	1024616	ArgumentList	"""Can't search from within a search.\\n"""		1024475	1					
ANR	1024617	Argument	"""Can't search from within a search.\\n"""		1024475	0					
ANR	1024618	PrimaryExpression	"""Can't search from within a search.\\n"""		1024475	0					
ANR	1024619	ReturnStatement	return false ;	2969:2:84277:84289	1024475	1	True				
ANR	1024620	Identifier	false		1024475	0					
ANR	1024621	IfStatement	if ( input [ 0 ] == '/' )		1024475	16					
ANR	1024622	Condition	input [ 0 ] == '/'	2971:5:84299:84313	1024475	0	True				
ANR	1024623	EqualityExpression	input [ 0 ] == '/'		1024475	0		==			
ANR	1024624	ArrayIndexing	input [ 0 ]		1024475	0					
ANR	1024625	Identifier	input		1024475	0					
ANR	1024626	PrimaryExpression	0		1024475	1					
ANR	1024627	PrimaryExpression	'/'		1024475	1					
ANR	1024628	CompoundStatement		28:22:639:639	1024475	1					
ANR	1024629	IfStatement	if ( core -> lastsearch )		1024475	0					
ANR	1024630	Condition	core -> lastsearch	2972:6:84324:84339	1024475	0	True				
ANR	1024631	PtrMemberAccess	core -> lastsearch		1024475	0					
ANR	1024632	Identifier	core		1024475	0					
ANR	1024633	Identifier	lastsearch		1024475	1					
ANR	1024634	CompoundStatement		29:24:665:665	1024475	1					
ANR	1024635	ExpressionStatement	input = core -> lastsearch	2973:3:84347:84371	1024475	0	True				
ANR	1024636	AssignmentExpression	input = core -> lastsearch		1024475	0		=			
ANR	1024637	Identifier	input		1024475	0					
ANR	1024638	PtrMemberAccess	core -> lastsearch		1024475	1					
ANR	1024639	Identifier	core		1024475	0					
ANR	1024640	Identifier	lastsearch		1024475	1					
ANR	1024641	ElseStatement	else		1024475	0					
ANR	1024642	CompoundStatement		31:9:705:705	1024475	0					
ANR	1024643	ExpressionStatement	"eprintf ( ""No previous search done\\n"" )"	2975:3:84387:84424	1024475	0	True				
ANR	1024644	CallExpression	"eprintf ( ""No previous search done\\n"" )"		1024475	0					
ANR	1024645	Callee	eprintf		1024475	0					
ANR	1024646	Identifier	eprintf		1024475	0					
ANR	1024647	ArgumentList	"""No previous search done\\n"""		1024475	1					
ANR	1024648	Argument	"""No previous search done\\n"""		1024475	0					
ANR	1024649	PrimaryExpression	"""No previous search done\\n"""		1024475	0					
ANR	1024650	ReturnStatement	return false ;	2976:3:84429:84441	1024475	1	True				
ANR	1024651	Identifier	false		1024475	0					
ANR	1024652	ElseStatement	else		1024475	0					
ANR	1024653	CompoundStatement		35:8:778:778	1024475	0					
ANR	1024654	ExpressionStatement	free ( core -> lastsearch )	2979:2:84459:84482	1024475	0	True				
ANR	1024655	CallExpression	free ( core -> lastsearch )		1024475	0					
ANR	1024656	Callee	free		1024475	0					
ANR	1024657	Identifier	free		1024475	0					
ANR	1024658	ArgumentList	core -> lastsearch		1024475	1					
ANR	1024659	Argument	core -> lastsearch		1024475	0					
ANR	1024660	PtrMemberAccess	core -> lastsearch		1024475	0					
ANR	1024661	Identifier	core		1024475	0					
ANR	1024662	Identifier	lastsearch		1024475	1					
ANR	1024663	ExpressionStatement	core -> lastsearch = strdup ( input )	2980:2:84486:84519	1024475	1	True				
ANR	1024664	AssignmentExpression	core -> lastsearch = strdup ( input )		1024475	0		=			
ANR	1024665	PtrMemberAccess	core -> lastsearch		1024475	0					
ANR	1024666	Identifier	core		1024475	0					
ANR	1024667	Identifier	lastsearch		1024475	1					
ANR	1024668	CallExpression	strdup ( input )		1024475	1					
ANR	1024669	Callee	strdup		1024475	0					
ANR	1024670	Identifier	strdup		1024475	0					
ANR	1024671	ArgumentList	input		1024475	1					
ANR	1024672	Argument	input		1024475	0					
ANR	1024673	Identifier	input		1024475	0					
ANR	1024674	ExpressionStatement	core -> in_search = true	2983:1:84526:84548	1024475	17	True				
ANR	1024675	AssignmentExpression	core -> in_search = true		1024475	0		=			
ANR	1024676	PtrMemberAccess	core -> in_search		1024475	0					
ANR	1024677	Identifier	core		1024475	0					
ANR	1024678	Identifier	in_search		1024475	1					
ANR	1024679	Identifier	true		1024475	1					
ANR	1024680	ExpressionStatement	"r_flag_space_push ( core -> flags , ""search"" )"	2984:1:84551:84592	1024475	18	True				
ANR	1024681	CallExpression	"r_flag_space_push ( core -> flags , ""search"" )"		1024475	0					
ANR	1024682	Callee	r_flag_space_push		1024475	0					
ANR	1024683	Identifier	r_flag_space_push		1024475	0					
ANR	1024684	ArgumentList	core -> flags		1024475	1					
ANR	1024685	Argument	core -> flags		1024475	0					
ANR	1024686	PtrMemberAccess	core -> flags		1024475	0					
ANR	1024687	Identifier	core		1024475	0					
ANR	1024688	Identifier	flags		1024475	1					
ANR	1024689	Argument	"""search"""		1024475	1					
ANR	1024690	PrimaryExpression	"""search"""		1024475	0					
ANR	1024691	IdentifierDeclStatement	"const ut64 search_from = r_config_get_i ( core -> config , ""search.from"" ) , search_to = r_config_get_i ( core -> config , ""search.to"" ) ;"	2985:1:84595:84723	1024475	19	True				
ANR	1024692	IdentifierDecl	"search_from = r_config_get_i ( core -> config , ""search.from"" )"		1024475	0					
ANR	1024693	IdentifierDeclType	const ut64		1024475	0					
ANR	1024694	Identifier	search_from		1024475	1					
ANR	1024695	AssignmentExpression	"search_from = r_config_get_i ( core -> config , ""search.from"" )"		1024475	2		=			
ANR	1024696	Identifier	search_from		1024475	0					
ANR	1024697	CallExpression	"r_config_get_i ( core -> config , ""search.from"" )"		1024475	1					
ANR	1024698	Callee	r_config_get_i		1024475	0					
ANR	1024699	Identifier	r_config_get_i		1024475	0					
ANR	1024700	ArgumentList	core -> config		1024475	1					
ANR	1024701	Argument	core -> config		1024475	0					
ANR	1024702	PtrMemberAccess	core -> config		1024475	0					
ANR	1024703	Identifier	core		1024475	0					
ANR	1024704	Identifier	config		1024475	1					
ANR	1024705	Argument	"""search.from"""		1024475	1					
ANR	1024706	PrimaryExpression	"""search.from"""		1024475	0					
ANR	1024707	IdentifierDecl	"search_to = r_config_get_i ( core -> config , ""search.to"" )"		1024475	1					
ANR	1024708	IdentifierDeclType	const ut64		1024475	0					
ANR	1024709	Identifier	search_to		1024475	1					
ANR	1024710	AssignmentExpression	"search_to = r_config_get_i ( core -> config , ""search.to"" )"		1024475	2		=			
ANR	1024711	Identifier	search_to		1024475	0					
ANR	1024712	CallExpression	"r_config_get_i ( core -> config , ""search.to"" )"		1024475	1					
ANR	1024713	Callee	r_config_get_i		1024475	0					
ANR	1024714	Identifier	r_config_get_i		1024475	0					
ANR	1024715	ArgumentList	core -> config		1024475	1					
ANR	1024716	Argument	core -> config		1024475	0					
ANR	1024717	PtrMemberAccess	core -> config		1024475	0					
ANR	1024718	Identifier	core		1024475	0					
ANR	1024719	Identifier	config		1024475	1					
ANR	1024720	Argument	"""search.to"""		1024475	1					
ANR	1024721	PrimaryExpression	"""search.to"""		1024475	0					
ANR	1024722	IfStatement	if ( search_from > search_to && search_to )		1024475	20					
ANR	1024723	Condition	search_from > search_to && search_to	2987:5:84730:84765	1024475	0	True				
ANR	1024724	AndExpression	search_from > search_to && search_to		1024475	0		&&			
ANR	1024725	RelationalExpression	search_from > search_to		1024475	0		>			
ANR	1024726	Identifier	search_from		1024475	0					
ANR	1024727	Identifier	search_to		1024475	1					
ANR	1024728	Identifier	search_to		1024475	1					
ANR	1024729	CompoundStatement		44:43:1091:1091	1024475	1					
ANR	1024730	ExpressionStatement	"eprintf ( ""search.from > search.to is not supported\\n"" )"	2988:2:84772:84826	1024475	0	True				
ANR	1024731	CallExpression	"eprintf ( ""search.from > search.to is not supported\\n"" )"		1024475	0					
ANR	1024732	Callee	eprintf		1024475	0					
ANR	1024733	Identifier	eprintf		1024475	0					
ANR	1024734	ArgumentList	"""search.from > search.to is not supported\\n"""		1024475	1					
ANR	1024735	Argument	"""search.from > search.to is not supported\\n"""		1024475	0					
ANR	1024736	PrimaryExpression	"""search.from > search.to is not supported\\n"""		1024475	0					
ANR	1024737	ExpressionStatement	ret = false	2989:2:84830:84841	1024475	1	True				
ANR	1024738	AssignmentExpression	ret = false		1024475	0		=			
ANR	1024739	Identifier	ret		1024475	0					
ANR	1024740	Identifier	false		1024475	1					
ANR	1024741	GotoStatement	goto beach ;	2990:2:84845:84855	1024475	2	True				
ANR	1024742	Identifier	beach		1024475	0					
ANR	1024743	IdentifierDeclStatement	"RInterval search_itv = { search_from , search_to - search_from } ;"	2993:1:84929:84990	1024475	21	True				
ANR	1024744	IdentifierDecl	"search_itv = { search_from , search_to - search_from }"		1024475	0					
ANR	1024745	IdentifierDeclType	RInterval		1024475	0					
ANR	1024746	Identifier	search_itv		1024475	1					
ANR	1024747	AssignmentExpression	"search_itv = { search_from , search_to - search_from }"		1024475	2		=			
ANR	1024748	Identifier	search_itv		1024475	0					
ANR	1024749	InitializerList	search_from		1024475	1					
ANR	1024750	Identifier	search_from		1024475	0					
ANR	1024751	AdditiveExpression	search_to - search_from		1024475	1		-			
ANR	1024752	Identifier	search_to		1024475	0					
ANR	1024753	Identifier	search_from		1024475	1					
ANR	1024754	IdentifierDeclStatement	bool empty_search_itv = search_from == search_to && search_from != UT64_MAX ;	2994:1:84993:85068	1024475	22	True				
ANR	1024755	IdentifierDecl	empty_search_itv = search_from == search_to && search_from != UT64_MAX		1024475	0					
ANR	1024756	IdentifierDeclType	bool		1024475	0					
ANR	1024757	Identifier	empty_search_itv		1024475	1					
ANR	1024758	AssignmentExpression	empty_search_itv = search_from == search_to && search_from != UT64_MAX		1024475	2		=			
ANR	1024759	Identifier	empty_search_itv		1024475	0					
ANR	1024760	AndExpression	search_from == search_to && search_from != UT64_MAX		1024475	1		&&			
ANR	1024761	EqualityExpression	search_from == search_to		1024475	0		==			
ANR	1024762	Identifier	search_from		1024475	0					
ANR	1024763	Identifier	search_to		1024475	1					
ANR	1024764	EqualityExpression	search_from != UT64_MAX		1024475	1		!=			
ANR	1024765	Identifier	search_from		1024475	0					
ANR	1024766	Identifier	UT64_MAX		1024475	1					
ANR	1024767	IfStatement	if ( search_from == UT64_MAX && search_to == UT64_MAX )		1024475	23					
ANR	1024768	Condition	search_from == UT64_MAX && search_to == UT64_MAX	2996:5:85151:85198	1024475	0	True				
ANR	1024769	AndExpression	search_from == UT64_MAX && search_to == UT64_MAX		1024475	0		&&			
ANR	1024770	EqualityExpression	search_from == UT64_MAX		1024475	0		==			
ANR	1024771	Identifier	search_from		1024475	0					
ANR	1024772	Identifier	UT64_MAX		1024475	1					
ANR	1024773	EqualityExpression	search_to == UT64_MAX		1024475	1		==			
ANR	1024774	Identifier	search_to		1024475	0					
ANR	1024775	Identifier	UT64_MAX		1024475	1					
ANR	1024776	CompoundStatement		53:55:1524:1524	1024475	1					
ANR	1024777	ExpressionStatement	search_itv . addr = 0	2997:2:85205:85224	1024475	0	True				
ANR	1024778	AssignmentExpression	search_itv . addr = 0		1024475	0		=			
ANR	1024779	MemberAccess	search_itv . addr		1024475	0					
ANR	1024780	Identifier	search_itv		1024475	0					
ANR	1024781	Identifier	addr		1024475	1					
ANR	1024782	PrimaryExpression	0		1024475	1					
ANR	1024783	ExpressionStatement	search_itv . size = UT64_MAX	2998:2:85228:85254	1024475	1	True				
ANR	1024784	AssignmentExpression	search_itv . size = UT64_MAX		1024475	0		=			
ANR	1024785	MemberAccess	search_itv . size		1024475	0					
ANR	1024786	Identifier	search_itv		1024475	0					
ANR	1024787	Identifier	size		1024475	1					
ANR	1024788	Identifier	UT64_MAX		1024475	1					
ANR	1024789	ExpressionStatement	c = 0	3001:1:85261:85266	1024475	24	True				
ANR	1024790	AssignmentExpression	c = 0		1024475	0		=			
ANR	1024791	Identifier	c		1024475	0					
ANR	1024792	PrimaryExpression	0		1024475	1					
ANR	1024793	ExpressionStatement	json = false	3002:1:85269:85281	1024475	25	True				
ANR	1024794	AssignmentExpression	json = false		1024475	0		=			
ANR	1024795	Identifier	json		1024475	0					
ANR	1024796	Identifier	false		1024475	1					
ANR	1024797	ExpressionStatement	"searchshow = r_config_get_i ( core -> config , ""search.show"" )"	3004:1:85285:85342	1024475	26	True				
ANR	1024798	AssignmentExpression	"searchshow = r_config_get_i ( core -> config , ""search.show"" )"		1024475	0		=			
ANR	1024799	Identifier	searchshow		1024475	0					
ANR	1024800	CallExpression	"r_config_get_i ( core -> config , ""search.show"" )"		1024475	1					
ANR	1024801	Callee	r_config_get_i		1024475	0					
ANR	1024802	Identifier	r_config_get_i		1024475	0					
ANR	1024803	ArgumentList	core -> config		1024475	1					
ANR	1024804	Argument	core -> config		1024475	0					
ANR	1024805	PtrMemberAccess	core -> config		1024475	0					
ANR	1024806	Identifier	core		1024475	0					
ANR	1024807	Identifier	config		1024475	1					
ANR	1024808	Argument	"""search.show"""		1024475	1					
ANR	1024809	PrimaryExpression	"""search.show"""		1024475	0					
ANR	1024810	ExpressionStatement	"param . mode = r_config_get ( core -> config , ""search.in"" )"	3005:1:85345:85398	1024475	27	True				
ANR	1024811	AssignmentExpression	"param . mode = r_config_get ( core -> config , ""search.in"" )"		1024475	0		=			
ANR	1024812	MemberAccess	param . mode		1024475	0					
ANR	1024813	Identifier	param		1024475	0					
ANR	1024814	Identifier	mode		1024475	1					
ANR	1024815	CallExpression	"r_config_get ( core -> config , ""search.in"" )"		1024475	1					
ANR	1024816	Callee	r_config_get		1024475	0					
ANR	1024817	Identifier	r_config_get		1024475	0					
ANR	1024818	ArgumentList	core -> config		1024475	1					
ANR	1024819	Argument	core -> config		1024475	0					
ANR	1024820	PtrMemberAccess	core -> config		1024475	0					
ANR	1024821	Identifier	core		1024475	0					
ANR	1024822	Identifier	config		1024475	1					
ANR	1024823	Argument	"""search.in"""		1024475	1					
ANR	1024824	PrimaryExpression	"""search.in"""		1024475	0					
ANR	1024825	ExpressionStatement	"param . boundaries = r_core_get_boundaries_prot ( core , - 1 , param . mode , ""search"" )"	3006:1:85401:85479	1024475	28	True				
ANR	1024826	AssignmentExpression	"param . boundaries = r_core_get_boundaries_prot ( core , - 1 , param . mode , ""search"" )"		1024475	0		=			
ANR	1024827	MemberAccess	param . boundaries		1024475	0					
ANR	1024828	Identifier	param		1024475	0					
ANR	1024829	Identifier	boundaries		1024475	1					
ANR	1024830	CallExpression	"r_core_get_boundaries_prot ( core , - 1 , param . mode , ""search"" )"		1024475	1					
ANR	1024831	Callee	r_core_get_boundaries_prot		1024475	0					
ANR	1024832	Identifier	r_core_get_boundaries_prot		1024475	0					
ANR	1024833	ArgumentList	core		1024475	1					
ANR	1024834	Argument	core		1024475	0					
ANR	1024835	Identifier	core		1024475	0					
ANR	1024836	Argument	- 1		1024475	1					
ANR	1024837	UnaryOperationExpression	- 1		1024475	0					
ANR	1024838	UnaryOperator	-		1024475	0					
ANR	1024839	PrimaryExpression	1		1024475	1					
ANR	1024840	Argument	param . mode		1024475	2					
ANR	1024841	MemberAccess	param . mode		1024475	0					
ANR	1024842	Identifier	param		1024475	0					
ANR	1024843	Identifier	mode		1024475	1					
ANR	1024844	Argument	"""search"""		1024475	3					
ANR	1024845	PrimaryExpression	"""search"""		1024475	0					
ANR	1024846	ExpressionStatement	"core -> search -> align = r_config_get_i ( core -> config , ""search.align"" )"	3020:1:85864:85931	1024475	29	True				
ANR	1024847	AssignmentExpression	"core -> search -> align = r_config_get_i ( core -> config , ""search.align"" )"		1024475	0		=			
ANR	1024848	PtrMemberAccess	core -> search -> align		1024475	0					
ANR	1024849	PtrMemberAccess	core -> search		1024475	0					
ANR	1024850	Identifier	core		1024475	0					
ANR	1024851	Identifier	search		1024475	1					
ANR	1024852	Identifier	align		1024475	1					
ANR	1024853	CallExpression	"r_config_get_i ( core -> config , ""search.align"" )"		1024475	1					
ANR	1024854	Callee	r_config_get_i		1024475	0					
ANR	1024855	Identifier	r_config_get_i		1024475	0					
ANR	1024856	ArgumentList	core -> config		1024475	1					
ANR	1024857	Argument	core -> config		1024475	0					
ANR	1024858	PtrMemberAccess	core -> config		1024475	0					
ANR	1024859	Identifier	core		1024475	0					
ANR	1024860	Identifier	config		1024475	1					
ANR	1024861	Argument	"""search.align"""		1024475	1					
ANR	1024862	PrimaryExpression	"""search.align"""		1024475	0					
ANR	1024863	ExpressionStatement	"searchflags = r_config_get_i ( core -> config , ""search.flags"" )"	3021:1:85934:85993	1024475	30	True				
ANR	1024864	AssignmentExpression	"searchflags = r_config_get_i ( core -> config , ""search.flags"" )"		1024475	0		=			
ANR	1024865	Identifier	searchflags		1024475	0					
ANR	1024866	CallExpression	"r_config_get_i ( core -> config , ""search.flags"" )"		1024475	1					
ANR	1024867	Callee	r_config_get_i		1024475	0					
ANR	1024868	Identifier	r_config_get_i		1024475	0					
ANR	1024869	ArgumentList	core -> config		1024475	1					
ANR	1024870	Argument	core -> config		1024475	0					
ANR	1024871	PtrMemberAccess	core -> config		1024475	0					
ANR	1024872	Identifier	core		1024475	0					
ANR	1024873	Identifier	config		1024475	1					
ANR	1024874	Argument	"""search.flags"""		1024475	1					
ANR	1024875	PrimaryExpression	"""search.flags"""		1024475	0					
ANR	1024876	ExpressionStatement	"core -> search -> maxhits = r_config_get_i ( core -> config , ""search.maxhits"" )"	3022:1:85996:86067	1024475	31	True				
ANR	1024877	AssignmentExpression	"core -> search -> maxhits = r_config_get_i ( core -> config , ""search.maxhits"" )"		1024475	0		=			
ANR	1024878	PtrMemberAccess	core -> search -> maxhits		1024475	0					
ANR	1024879	PtrMemberAccess	core -> search		1024475	0					
ANR	1024880	Identifier	core		1024475	0					
ANR	1024881	Identifier	search		1024475	1					
ANR	1024882	Identifier	maxhits		1024475	1					
ANR	1024883	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		1024475	1					
ANR	1024884	Callee	r_config_get_i		1024475	0					
ANR	1024885	Identifier	r_config_get_i		1024475	0					
ANR	1024886	ArgumentList	core -> config		1024475	1					
ANR	1024887	Argument	core -> config		1024475	0					
ANR	1024888	PtrMemberAccess	core -> config		1024475	0					
ANR	1024889	Identifier	core		1024475	0					
ANR	1024890	Identifier	config		1024475	1					
ANR	1024891	Argument	"""search.maxhits"""		1024475	1					
ANR	1024892	PrimaryExpression	"""search.maxhits"""		1024475	0					
ANR	1024893	ExpressionStatement	"searchprefix = r_config_get ( core -> config , ""search.prefix"" )"	3023:1:86070:86129	1024475	32	True				
ANR	1024894	AssignmentExpression	"searchprefix = r_config_get ( core -> config , ""search.prefix"" )"		1024475	0		=			
ANR	1024895	Identifier	searchprefix		1024475	0					
ANR	1024896	CallExpression	"r_config_get ( core -> config , ""search.prefix"" )"		1024475	1					
ANR	1024897	Callee	r_config_get		1024475	0					
ANR	1024898	Identifier	r_config_get		1024475	0					
ANR	1024899	ArgumentList	core -> config		1024475	1					
ANR	1024900	Argument	core -> config		1024475	0					
ANR	1024901	PtrMemberAccess	core -> config		1024475	0					
ANR	1024902	Identifier	core		1024475	0					
ANR	1024903	Identifier	config		1024475	1					
ANR	1024904	Argument	"""search.prefix"""		1024475	1					
ANR	1024905	PrimaryExpression	"""search.prefix"""		1024475	0					
ANR	1024906	ExpressionStatement	"core -> search -> overlap = r_config_get_i ( core -> config , ""search.overlap"" )"	3024:1:86132:86203	1024475	33	True				
ANR	1024907	AssignmentExpression	"core -> search -> overlap = r_config_get_i ( core -> config , ""search.overlap"" )"		1024475	0		=			
ANR	1024908	PtrMemberAccess	core -> search -> overlap		1024475	0					
ANR	1024909	PtrMemberAccess	core -> search		1024475	0					
ANR	1024910	Identifier	core		1024475	0					
ANR	1024911	Identifier	search		1024475	1					
ANR	1024912	Identifier	overlap		1024475	1					
ANR	1024913	CallExpression	"r_config_get_i ( core -> config , ""search.overlap"" )"		1024475	1					
ANR	1024914	Callee	r_config_get_i		1024475	0					
ANR	1024915	Identifier	r_config_get_i		1024475	0					
ANR	1024916	ArgumentList	core -> config		1024475	1					
ANR	1024917	Argument	core -> config		1024475	0					
ANR	1024918	PtrMemberAccess	core -> config		1024475	0					
ANR	1024919	Identifier	core		1024475	0					
ANR	1024920	Identifier	config		1024475	1					
ANR	1024921	Argument	"""search.overlap"""		1024475	1					
ANR	1024922	PrimaryExpression	"""search.overlap"""		1024475	0					
ANR	1024923	IfStatement	if ( ! core -> io -> va )		1024475	34					
ANR	1024924	Condition	! core -> io -> va	3025:5:86210:86222	1024475	0	True				
ANR	1024925	UnaryOperationExpression	! core -> io -> va		1024475	0					
ANR	1024926	UnaryOperator	!		1024475	0					
ANR	1024927	PtrMemberAccess	core -> io -> va		1024475	1					
ANR	1024928	PtrMemberAccess	core -> io		1024475	0					
ANR	1024929	Identifier	core		1024475	0					
ANR	1024930	Identifier	io		1024475	1					
ANR	1024931	Identifier	va		1024475	1					
ANR	1024932	CompoundStatement		83:2:2552:2593	1024475	1					
ANR	1024933	IdentifierDeclStatement	"RInterval itv = { 0 , r_io_size ( core -> io ) } ;"	3026:2:86229:86270	1024475	0	True				
ANR	1024934	IdentifierDecl	"itv = { 0 , r_io_size ( core -> io ) }"		1024475	0					
ANR	1024935	IdentifierDeclType	RInterval		1024475	0					
ANR	1024936	Identifier	itv		1024475	1					
ANR	1024937	AssignmentExpression	"itv = { 0 , r_io_size ( core -> io ) }"		1024475	2		=			
ANR	1024938	Identifier	itv		1024475	0					
ANR	1024939	InitializerList	0		1024475	1					
ANR	1024940	PrimaryExpression	0		1024475	0					
ANR	1024941	CallExpression	r_io_size ( core -> io )		1024475	1					
ANR	1024942	Callee	r_io_size		1024475	0					
ANR	1024943	Identifier	r_io_size		1024475	0					
ANR	1024944	ArgumentList	core -> io		1024475	1					
ANR	1024945	Argument	core -> io		1024475	0					
ANR	1024946	PtrMemberAccess	core -> io		1024475	0					
ANR	1024947	Identifier	core		1024475	0					
ANR	1024948	Identifier	io		1024475	1					
ANR	1024949	IfStatement	"if ( ! r_itv_overlap ( search_itv , itv ) )"		1024475	1					
ANR	1024950	Condition	"! r_itv_overlap ( search_itv , itv )"	3027:6:86278:86309	1024475	0	True				
ANR	1024951	UnaryOperationExpression	"! r_itv_overlap ( search_itv , itv )"		1024475	0					
ANR	1024952	UnaryOperator	!		1024475	0					
ANR	1024953	CallExpression	"r_itv_overlap ( search_itv , itv )"		1024475	1					
ANR	1024954	Callee	r_itv_overlap		1024475	0					
ANR	1024955	Identifier	r_itv_overlap		1024475	0					
ANR	1024956	ArgumentList	search_itv		1024475	1					
ANR	1024957	Argument	search_itv		1024475	0					
ANR	1024958	Identifier	search_itv		1024475	0					
ANR	1024959	Argument	itv		1024475	1					
ANR	1024960	Identifier	itv		1024475	0					
ANR	1024961	CompoundStatement		84:40:2635:2635	1024475	1					
ANR	1024962	ExpressionStatement	empty_search_itv = true	3028:3:86317:86340	1024475	0	True				
ANR	1024963	AssignmentExpression	empty_search_itv = true		1024475	0		=			
ANR	1024964	Identifier	empty_search_itv		1024475	0					
ANR	1024965	Identifier	true		1024475	1					
ANR	1024966	ElseStatement	else		1024475	0					
ANR	1024967	CompoundStatement		86:9:2674:2674	1024475	0					
ANR	1024968	ExpressionStatement	"search_itv = r_itv_intersect ( search_itv , itv )"	3030:3:86356:86402	1024475	0	True				
ANR	1024969	AssignmentExpression	"search_itv = r_itv_intersect ( search_itv , itv )"		1024475	0		=			
ANR	1024970	Identifier	search_itv		1024475	0					
ANR	1024971	CallExpression	"r_itv_intersect ( search_itv , itv )"		1024475	1					
ANR	1024972	Callee	r_itv_intersect		1024475	0					
ANR	1024973	Identifier	r_itv_intersect		1024475	0					
ANR	1024974	ArgumentList	search_itv		1024475	1					
ANR	1024975	Argument	search_itv		1024475	0					
ANR	1024976	Identifier	search_itv		1024475	0					
ANR	1024977	Argument	itv		1024475	1					
ANR	1024978	Identifier	itv		1024475	0					
ANR	1024979	ExpressionStatement	core -> search -> bckwrds = false	3033:1:86412:86441	1024475	35	True				
ANR	1024980	AssignmentExpression	core -> search -> bckwrds = false		1024475	0		=			
ANR	1024981	PtrMemberAccess	core -> search -> bckwrds		1024475	0					
ANR	1024982	PtrMemberAccess	core -> search		1024475	0					
ANR	1024983	Identifier	core		1024475	0					
ANR	1024984	Identifier	search		1024475	1					
ANR	1024985	Identifier	bckwrds		1024475	1					
ANR	1024986	Identifier	false		1024475	1					
ANR	1024987	IfStatement	if ( empty_search_itv )		1024475	36					
ANR	1024988	Condition	empty_search_itv	3035:5:86449:86464	1024475	0	True				
ANR	1024989	Identifier	empty_search_itv		1024475	0					
ANR	1024990	CompoundStatement		92:23:2790:2790	1024475	1					
ANR	1024991	ExpressionStatement	"eprintf ( ""WARNING from == to?\\n"" )"	3036:2:86471:86504	1024475	0	True				
ANR	1024992	CallExpression	"eprintf ( ""WARNING from == to?\\n"" )"		1024475	0					
ANR	1024993	Callee	eprintf		1024475	0					
ANR	1024994	Identifier	eprintf		1024475	0					
ANR	1024995	ArgumentList	"""WARNING from == to?\\n"""		1024475	1					
ANR	1024996	Argument	"""WARNING from == to?\\n"""		1024475	0					
ANR	1024997	PrimaryExpression	"""WARNING from == to?\\n"""		1024475	0					
ANR	1024998	ExpressionStatement	ret = false	3037:2:86508:86519	1024475	1	True				
ANR	1024999	AssignmentExpression	ret = false		1024475	0		=			
ANR	1025000	Identifier	ret		1024475	0					
ANR	1025001	Identifier	false		1024475	1					
ANR	1025002	GotoStatement	goto beach ;	3038:2:86523:86533	1024475	2	True				
ANR	1025003	Identifier	beach		1024475	0					
ANR	1025004	IfStatement	if ( input [ 0 ] && ( input [ 1 ] == 'j' ) && ( input [ 0 ] != ' ' ) )		1024475	37					
ANR	1025005	Condition	input [ 0 ] && ( input [ 1 ] == 'j' ) && ( input [ 0 ] != ' ' )	3041:5:86586:86635	1024475	0	True				
ANR	1025006	AndExpression	input [ 0 ] && ( input [ 1 ] == 'j' ) && ( input [ 0 ] != ' ' )		1024475	0		&&			
ANR	1025007	ArrayIndexing	input [ 0 ]		1024475	0					
ANR	1025008	Identifier	input		1024475	0					
ANR	1025009	PrimaryExpression	0		1024475	1					
ANR	1025010	AndExpression	( input [ 1 ] == 'j' ) && ( input [ 0 ] != ' ' )		1024475	1		&&			
ANR	1025011	EqualityExpression	input [ 1 ] == 'j'		1024475	0		==			
ANR	1025012	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025013	Identifier	input		1024475	0					
ANR	1025014	PrimaryExpression	1		1024475	1					
ANR	1025015	PrimaryExpression	'j'		1024475	1					
ANR	1025016	EqualityExpression	input [ 0 ] != ' '		1024475	1		!=			
ANR	1025017	ArrayIndexing	input [ 0 ]		1024475	0					
ANR	1025018	Identifier	input		1024475	0					
ANR	1025019	PrimaryExpression	0		1024475	1					
ANR	1025020	PrimaryExpression	' '		1024475	1					
ANR	1025021	CompoundStatement		98:57:2961:2961	1024475	1					
ANR	1025022	ExpressionStatement	json = true	3042:2:86642:86653	1024475	0	True				
ANR	1025023	AssignmentExpression	json = true		1024475	0		=			
ANR	1025024	Identifier	json		1024475	0					
ANR	1025025	Identifier	true		1024475	1					
ANR	1025026	ExpressionStatement	param_offset ++	3043:2:86657:86671	1024475	1	True				
ANR	1025027	PostIncDecOperationExpression	param_offset ++		1024475	0					
ANR	1025028	Identifier	param_offset		1024475	0					
ANR	1025029	IncDec	++		1024475	1					
ANR	1025030	Label	reread :	3046:0:86677:86683	1024475	38	True				
ANR	1025031	Identifier	reread		1024475	0					
ANR	1025032	SwitchStatement	switch ( * input )		1024475	39					
ANR	1025033	Condition	* input	3047:9:86694:86699	1024475	0	True				
ANR	1025034	UnaryOperationExpression	* input		1024475	0					
ANR	1025035	UnaryOperator	*		1024475	0					
ANR	1025036	Identifier	input		1024475	1					
ANR	1025037	CompoundStatement		609:2:17504:17521	1024475	1					
ANR	1025038	Label	case '!' :	3048:1:86705:86713	1024475	0	True				
ANR	1025039	ExpressionStatement	input ++	3049:2:86717:86724	1024475	1	True				
ANR	1025040	PostIncDecOperationExpression	input ++		1024475	0					
ANR	1025041	Identifier	input		1024475	0					
ANR	1025042	IncDec	++		1024475	1					
ANR	1025043	ExpressionStatement	param . inverse = true	3050:2:86728:86748	1024475	2	True				
ANR	1025044	AssignmentExpression	param . inverse = true		1024475	0		=			
ANR	1025045	MemberAccess	param . inverse		1024475	0					
ANR	1025046	Identifier	param		1024475	0					
ANR	1025047	Identifier	inverse		1024475	1					
ANR	1025048	Identifier	true		1024475	1					
ANR	1025049	GotoStatement	goto reread ;	3051:2:86752:86763	1024475	3	True				
ANR	1025050	Identifier	reread		1024475	0					
ANR	1025051	Label	case 'b' :	3052:1:86766:86774	1024475	4	True				
ANR	1025052	IfStatement	if ( * ( ++ input ) == '?' )		1024475	5					
ANR	1025053	Condition	* ( ++ input ) == '?'	3053:6:86851:86867	1024475	0	True				
ANR	1025054	EqualityExpression	* ( ++ input ) == '?'		1024475	0		==			
ANR	1025055	UnaryOperationExpression	* ( ++ input )		1024475	0					
ANR	1025056	UnaryOperator	*		1024475	0					
ANR	1025057	UnaryExpression	++ input		1024475	1					
ANR	1025058	IncDec	++		1024475	0					
ANR	1025059	Identifier	input		1024475	1					
ANR	1025060	PrimaryExpression	'?'		1024475	1					
ANR	1025061	CompoundStatement		110:25:3193:3193	1024475	1					
ANR	1025062	ExpressionStatement	"eprintf ( ""Usage: /b<command> [value] backward search, see '/?'\\n"" )"	3054:3:86875:86941	1024475	0	True				
ANR	1025063	CallExpression	"eprintf ( ""Usage: /b<command> [value] backward search, see '/?'\\n"" )"		1024475	0					
ANR	1025064	Callee	eprintf		1024475	0					
ANR	1025065	Identifier	eprintf		1024475	0					
ANR	1025066	ArgumentList	"""Usage: /b<command> [value] backward search, see '/?'\\n"""		1024475	1					
ANR	1025067	Argument	"""Usage: /b<command> [value] backward search, see '/?'\\n"""		1024475	0					
ANR	1025068	PrimaryExpression	"""Usage: /b<command> [value] backward search, see '/?'\\n"""		1024475	0					
ANR	1025069	GotoStatement	goto beach ;	3055:3:86946:86956	1024475	1	True				
ANR	1025070	Identifier	beach		1024475	0					
ANR	1025071	ExpressionStatement	search -> bckwrds = true	3057:2:86964:86986	1024475	6	True				
ANR	1025072	AssignmentExpression	search -> bckwrds = true		1024475	0		=			
ANR	1025073	PtrMemberAccess	search -> bckwrds		1024475	0					
ANR	1025074	Identifier	search		1024475	0					
ANR	1025075	Identifier	bckwrds		1024475	1					
ANR	1025076	Identifier	true		1024475	1					
ANR	1025077	IfStatement	if ( core -> offset )		1024475	7					
ANR	1025078	Condition	core -> offset	3058:6:86994:87005	1024475	0	True				
ANR	1025079	PtrMemberAccess	core -> offset		1024475	0					
ANR	1025080	Identifier	core		1024475	0					
ANR	1025081	Identifier	offset		1024475	1					
ANR	1025082	CompoundStatement		116:3:3336:3369	1024475	1					
ANR	1025083	IdentifierDeclStatement	"RInterval itv = { 0 , core -> offset } ;"	3059:3:87013:87046	1024475	0	True				
ANR	1025084	IdentifierDecl	"itv = { 0 , core -> offset }"		1024475	0					
ANR	1025085	IdentifierDeclType	RInterval		1024475	0					
ANR	1025086	Identifier	itv		1024475	1					
ANR	1025087	AssignmentExpression	"itv = { 0 , core -> offset }"		1024475	2		=			
ANR	1025088	Identifier	itv		1024475	0					
ANR	1025089	InitializerList	0		1024475	1					
ANR	1025090	PrimaryExpression	0		1024475	0					
ANR	1025091	PtrMemberAccess	core -> offset		1024475	1					
ANR	1025092	Identifier	core		1024475	0					
ANR	1025093	Identifier	offset		1024475	1					
ANR	1025094	IfStatement	"if ( ! r_itv_overlap ( search_itv , itv ) )"		1024475	1					
ANR	1025095	Condition	"! r_itv_overlap ( search_itv , itv )"	3060:7:87055:87086	1024475	0	True				
ANR	1025096	UnaryOperationExpression	"! r_itv_overlap ( search_itv , itv )"		1024475	0					
ANR	1025097	UnaryOperator	!		1024475	0					
ANR	1025098	CallExpression	"r_itv_overlap ( search_itv , itv )"		1024475	1					
ANR	1025099	Callee	r_itv_overlap		1024475	0					
ANR	1025100	Identifier	r_itv_overlap		1024475	0					
ANR	1025101	ArgumentList	search_itv		1024475	1					
ANR	1025102	Argument	search_itv		1024475	0					
ANR	1025103	Identifier	search_itv		1024475	0					
ANR	1025104	Argument	itv		1024475	1					
ANR	1025105	Identifier	itv		1024475	0					
ANR	1025106	CompoundStatement		117:41:3412:3412	1024475	1					
ANR	1025107	ExpressionStatement	ret = false	3061:4:87095:87106	1024475	0	True				
ANR	1025108	AssignmentExpression	ret = false		1024475	0		=			
ANR	1025109	Identifier	ret		1024475	0					
ANR	1025110	Identifier	false		1024475	1					
ANR	1025111	GotoStatement	goto beach ;	3062:4:87112:87122	1024475	1	True				
ANR	1025112	Identifier	beach		1024475	0					
ANR	1025113	ElseStatement	else		1024475	0					
ANR	1025114	CompoundStatement		120:10:3457:3457	1024475	0					
ANR	1025115	ExpressionStatement	"search_itv = r_itv_intersect ( search_itv , itv )"	3064:4:87140:87186	1024475	0	True				
ANR	1025116	AssignmentExpression	"search_itv = r_itv_intersect ( search_itv , itv )"		1024475	0		=			
ANR	1025117	Identifier	search_itv		1024475	0					
ANR	1025118	CallExpression	"r_itv_intersect ( search_itv , itv )"		1024475	1					
ANR	1025119	Callee	r_itv_intersect		1024475	0					
ANR	1025120	Identifier	r_itv_intersect		1024475	0					
ANR	1025121	ArgumentList	search_itv		1024475	1					
ANR	1025122	Argument	search_itv		1024475	0					
ANR	1025123	Identifier	search_itv		1024475	0					
ANR	1025124	Argument	itv		1024475	1					
ANR	1025125	Identifier	itv		1024475	0					
ANR	1025126	GotoStatement	goto reread ;	3067:2:87199:87210	1024475	8	True				
ANR	1025127	Identifier	reread		1024475	0					
ANR	1025128	Label	case 'o' :	3068:1:87213:87221	1024475	9	True				
ANR	1025129	CompoundStatement		126:2:3598:3687	1024475	10					
ANR	1025130	IdentifierDeclStatement	"ut64 addr , n = input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1 ;"	3069:2:87275:87364	1024475	0	True				
ANR	1025131	IdentifierDecl	addr		1024475	0					
ANR	1025132	IdentifierDeclType	ut64		1024475	0					
ANR	1025133	Identifier	addr		1024475	1					
ANR	1025134	IdentifierDecl	"n = input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1"		1024475	1					
ANR	1025135	IdentifierDeclType	ut64		1024475	0					
ANR	1025136	Identifier	n		1024475	1					
ANR	1025137	AssignmentExpression	"n = input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1"		1024475	2		=			
ANR	1025138	Identifier	n		1024475	0					
ANR	1025139	ConditionalExpression	"input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1"		1024475	1					
ANR	1025140	Condition	input [ param_offset - 1 ]		1024475	0					
ANR	1025141	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1025142	Identifier	input		1024475	0					
ANR	1025143	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1025144	Identifier	param_offset		1024475	0					
ANR	1025145	PrimaryExpression	1		1024475	1					
ANR	1025146	CallExpression	"r_num_math ( core -> num , input + param_offset )"		1024475	1					
ANR	1025147	Callee	r_num_math		1024475	0					
ANR	1025148	Identifier	r_num_math		1024475	0					
ANR	1025149	ArgumentList	core -> num		1024475	1					
ANR	1025150	Argument	core -> num		1024475	0					
ANR	1025151	PtrMemberAccess	core -> num		1024475	0					
ANR	1025152	Identifier	core		1024475	0					
ANR	1025153	Identifier	num		1024475	1					
ANR	1025154	Argument	input + param_offset		1024475	1					
ANR	1025155	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1025156	Identifier	input		1024475	0					
ANR	1025157	Identifier	param_offset		1024475	1					
ANR	1025158	PrimaryExpression	1		1024475	2					
ANR	1025159	ExpressionStatement	n = R_ABS ( ( st64 ) n )	3070:2:87368:87386	1024475	1	True				
ANR	1025160	AssignmentExpression	n = R_ABS ( ( st64 ) n )		1024475	0		=			
ANR	1025161	Identifier	n		1024475	0					
ANR	1025162	CallExpression	R_ABS ( ( st64 ) n )		1024475	1					
ANR	1025163	Callee	R_ABS		1024475	0					
ANR	1025164	Identifier	R_ABS		1024475	0					
ANR	1025165	ArgumentList	( st64 ) n		1024475	1					
ANR	1025166	Argument	( st64 ) n		1024475	0					
ANR	1025167	CastExpression	( st64 ) n		1024475	0					
ANR	1025168	CastTarget	st64		1024475	0					
ANR	1025169	Identifier	n		1024475	1					
ANR	1025170	IfStatement	if ( ( ( st64 ) n ) < 1 )		1024475	2					
ANR	1025171	Condition	( ( st64 ) n ) < 1	3071:6:87394:87406	1024475	0	True				
ANR	1025172	RelationalExpression	( ( st64 ) n ) < 1		1024475	0		<			
ANR	1025173	CastExpression	( st64 ) n		1024475	0					
ANR	1025174	CastTarget	st64		1024475	0					
ANR	1025175	Identifier	n		1024475	1					
ANR	1025176	PrimaryExpression	1		1024475	1					
ANR	1025177	CompoundStatement		128:21:3732:3732	1024475	1					
ANR	1025178	ExpressionStatement	n = 1	3072:3:87414:87419	1024475	0	True				
ANR	1025179	AssignmentExpression	n = 1		1024475	0		=			
ANR	1025180	Identifier	n		1024475	0					
ANR	1025181	PrimaryExpression	1		1024475	1					
ANR	1025182	IfStatement	"if ( ! r_core_prevop_addr ( core , core -> offset , n , & addr ) )"		1024475	3					
ANR	1025183	Condition	"! r_core_prevop_addr ( core , core -> offset , n , & addr )"	3074:6:87431:87480	1024475	0	True				
ANR	1025184	UnaryOperationExpression	"! r_core_prevop_addr ( core , core -> offset , n , & addr )"		1024475	0					
ANR	1025185	UnaryOperator	!		1024475	0					
ANR	1025186	CallExpression	"r_core_prevop_addr ( core , core -> offset , n , & addr )"		1024475	1					
ANR	1025187	Callee	r_core_prevop_addr		1024475	0					
ANR	1025188	Identifier	r_core_prevop_addr		1024475	0					
ANR	1025189	ArgumentList	core		1024475	1					
ANR	1025190	Argument	core		1024475	0					
ANR	1025191	Identifier	core		1024475	0					
ANR	1025192	Argument	core -> offset		1024475	1					
ANR	1025193	PtrMemberAccess	core -> offset		1024475	0					
ANR	1025194	Identifier	core		1024475	0					
ANR	1025195	Identifier	offset		1024475	1					
ANR	1025196	Argument	n		1024475	2					
ANR	1025197	Identifier	n		1024475	0					
ANR	1025198	Argument	& addr		1024475	3					
ANR	1025199	UnaryOperationExpression	& addr		1024475	0					
ANR	1025200	UnaryOperator	&		1024475	0					
ANR	1025201	Identifier	addr		1024475	1					
ANR	1025202	CompoundStatement		131:58:3806:3806	1024475	1					
ANR	1025203	ExpressionStatement	addr = UT64_MAX	3075:3:87488:87503	1024475	0	True				
ANR	1025204	AssignmentExpression	addr = UT64_MAX		1024475	0		=			
ANR	1025205	Identifier	addr		1024475	0					
ANR	1025206	Identifier	UT64_MAX		1024475	1					
ANR	1025207	ExpressionStatement	"( void ) r_core_asm_bwdis_len ( core , NULL , & addr , n )"	3076:3:87508:87557	1024475	1	True				
ANR	1025208	CastExpression	"( void ) r_core_asm_bwdis_len ( core , NULL , & addr , n )"		1024475	0					
ANR	1025209	CastTarget	void		1024475	0					
ANR	1025210	CallExpression	"r_core_asm_bwdis_len ( core , NULL , & addr , n )"		1024475	1					
ANR	1025211	Callee	r_core_asm_bwdis_len		1024475	0					
ANR	1025212	Identifier	r_core_asm_bwdis_len		1024475	0					
ANR	1025213	ArgumentList	core		1024475	1					
ANR	1025214	Argument	core		1024475	0					
ANR	1025215	Identifier	core		1024475	0					
ANR	1025216	Argument	NULL		1024475	1					
ANR	1025217	Identifier	NULL		1024475	0					
ANR	1025218	Argument	& addr		1024475	2					
ANR	1025219	UnaryOperationExpression	& addr		1024475	0					
ANR	1025220	UnaryOperator	&		1024475	0					
ANR	1025221	Identifier	addr		1024475	1					
ANR	1025222	Argument	n		1024475	3					
ANR	1025223	Identifier	n		1024475	0					
ANR	1025224	IfStatement	if ( json )		1024475	4					
ANR	1025225	Condition	json	3078:6:87569:87572	1024475	0	True				
ANR	1025226	Identifier	json		1024475	0					
ANR	1025227	CompoundStatement		135:12:3898:3898	1024475	1					
ANR	1025228	Statement	r_cons_printf	3079:3:87580:87592	1024475	0	True				
ANR	1025229	Statement	(	3079:17:87594:87594	1024475	1	True				
ANR	1025230	Statement	"""[%"""	3079:18:87595:87598	1024475	2	True				
ANR	1025231	Statement	PFMT64u	3079:22:87599:87605	1024475	3	True				
ANR	1025232	Statement	"""]"""	3079:30:87607:87609	1024475	4	True				
ANR	1025233	Statement	","	3079:33:87610:87610	1024475	5	True				
ANR	1025234	Statement	addr	3079:35:87612:87615	1024475	6	True				
ANR	1025235	Statement	)	3079:39:87616:87616	1024475	7	True				
ANR	1025236	ExpressionStatement		3079:40:87617:87617	1024475	8	True				
ANR	1025237	ElseStatement	else		1024475	0					
ANR	1025238	CompoundStatement		137:9:3951:3951	1024475	0					
ANR	1025239	Statement	r_cons_printf	3081:3:87633:87645	1024475	0	True				
ANR	1025240	Statement	(	3081:17:87647:87647	1024475	1	True				
ANR	1025241	Statement	"""0x%08"""	3081:18:87648:87654	1024475	2	True				
ANR	1025242	Statement	PFMT64x	3081:25:87655:87661	1024475	3	True				
ANR	1025243	Statement	"""\\n"""	3081:33:87663:87666	1024475	4	True				
ANR	1025244	Statement	","	3081:37:87667:87667	1024475	5	True				
ANR	1025245	Statement	addr	3081:39:87669:87672	1024475	6	True				
ANR	1025246	Statement	)	3081:43:87673:87673	1024475	7	True				
ANR	1025247	ExpressionStatement		3081:44:87674:87674	1024475	8	True				
ANR	1025248	BreakStatement	break ;	3083:2:87682:87687	1024475	5	True				
ANR	1025249	Label	case 'O' :	3085:1:87693:87701	1024475	11	True				
ANR	1025250	CompoundStatement		143:2:4058:4147	1024475	12					
ANR	1025251	IdentifierDeclStatement	"ut64 addr , n = input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1 ;"	3086:2:87735:87824	1024475	0	True				
ANR	1025252	IdentifierDecl	addr		1024475	0					
ANR	1025253	IdentifierDeclType	ut64		1024475	0					
ANR	1025254	Identifier	addr		1024475	1					
ANR	1025255	IdentifierDecl	"n = input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1"		1024475	1					
ANR	1025256	IdentifierDeclType	ut64		1024475	0					
ANR	1025257	Identifier	n		1024475	1					
ANR	1025258	AssignmentExpression	"n = input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1"		1024475	2		=			
ANR	1025259	Identifier	n		1024475	0					
ANR	1025260	ConditionalExpression	"input [ param_offset - 1 ] ? r_num_math ( core -> num , input + param_offset ) : 1"		1024475	1					
ANR	1025261	Condition	input [ param_offset - 1 ]		1024475	0					
ANR	1025262	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1025263	Identifier	input		1024475	0					
ANR	1025264	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1025265	Identifier	param_offset		1024475	0					
ANR	1025266	PrimaryExpression	1		1024475	1					
ANR	1025267	CallExpression	"r_num_math ( core -> num , input + param_offset )"		1024475	1					
ANR	1025268	Callee	r_num_math		1024475	0					
ANR	1025269	Identifier	r_num_math		1024475	0					
ANR	1025270	ArgumentList	core -> num		1024475	1					
ANR	1025271	Argument	core -> num		1024475	0					
ANR	1025272	PtrMemberAccess	core -> num		1024475	0					
ANR	1025273	Identifier	core		1024475	0					
ANR	1025274	Identifier	num		1024475	1					
ANR	1025275	Argument	input + param_offset		1024475	1					
ANR	1025276	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1025277	Identifier	input		1024475	0					
ANR	1025278	Identifier	param_offset		1024475	1					
ANR	1025279	PrimaryExpression	1		1024475	2					
ANR	1025280	IfStatement	if ( ! n )		1024475	1					
ANR	1025281	Condition	! n	3087:6:87832:87833	1024475	0	True				
ANR	1025282	UnaryOperationExpression	! n		1024475	0					
ANR	1025283	UnaryOperator	!		1024475	0					
ANR	1025284	Identifier	n		1024475	1					
ANR	1025285	CompoundStatement		144:10:4159:4159	1024475	1					
ANR	1025286	ExpressionStatement	n = 1	3088:3:87841:87846	1024475	0	True				
ANR	1025287	AssignmentExpression	n = 1		1024475	0		=			
ANR	1025288	Identifier	n		1024475	0					
ANR	1025289	PrimaryExpression	1		1024475	1					
ANR	1025290	ExpressionStatement	"addr = r_core_prevop_addr_force ( core , core -> offset , n )"	3090:2:87854:87909	1024475	2	True				
ANR	1025291	AssignmentExpression	"addr = r_core_prevop_addr_force ( core , core -> offset , n )"		1024475	0		=			
ANR	1025292	Identifier	addr		1024475	0					
ANR	1025293	CallExpression	"r_core_prevop_addr_force ( core , core -> offset , n )"		1024475	1					
ANR	1025294	Callee	r_core_prevop_addr_force		1024475	0					
ANR	1025295	Identifier	r_core_prevop_addr_force		1024475	0					
ANR	1025296	ArgumentList	core		1024475	1					
ANR	1025297	Argument	core		1024475	0					
ANR	1025298	Identifier	core		1024475	0					
ANR	1025299	Argument	core -> offset		1024475	1					
ANR	1025300	PtrMemberAccess	core -> offset		1024475	0					
ANR	1025301	Identifier	core		1024475	0					
ANR	1025302	Identifier	offset		1024475	1					
ANR	1025303	Argument	n		1024475	2					
ANR	1025304	Identifier	n		1024475	0					
ANR	1025305	IfStatement	if ( json )		1024475	3					
ANR	1025306	Condition	json	3091:6:87917:87920	1024475	0	True				
ANR	1025307	Identifier	json		1024475	0					
ANR	1025308	CompoundStatement		148:12:4246:4246	1024475	1					
ANR	1025309	Statement	r_cons_printf	3092:3:87928:87940	1024475	0	True				
ANR	1025310	Statement	(	3092:17:87942:87942	1024475	1	True				
ANR	1025311	Statement	"""[%"""	3092:18:87943:87946	1024475	2	True				
ANR	1025312	Statement	PFMT64u	3092:22:87947:87953	1024475	3	True				
ANR	1025313	Statement	"""]"""	3092:30:87955:87957	1024475	4	True				
ANR	1025314	Statement	","	3092:33:87958:87958	1024475	5	True				
ANR	1025315	Statement	addr	3092:35:87960:87963	1024475	6	True				
ANR	1025316	Statement	)	3092:39:87964:87964	1024475	7	True				
ANR	1025317	ExpressionStatement		3092:40:87965:87965	1024475	8	True				
ANR	1025318	ElseStatement	else		1024475	0					
ANR	1025319	CompoundStatement		150:9:4299:4299	1024475	0					
ANR	1025320	Statement	r_cons_printf	3094:3:87981:87993	1024475	0	True				
ANR	1025321	Statement	(	3094:17:87995:87995	1024475	1	True				
ANR	1025322	Statement	"""0x%08"""	3094:18:87996:88002	1024475	2	True				
ANR	1025323	Statement	PFMT64x	3094:25:88003:88009	1024475	3	True				
ANR	1025324	Statement	"""\\n"""	3094:33:88011:88014	1024475	4	True				
ANR	1025325	Statement	","	3094:37:88015:88015	1024475	5	True				
ANR	1025326	Statement	addr	3094:39:88017:88020	1024475	6	True				
ANR	1025327	Statement	)	3094:43:88021:88021	1024475	7	True				
ANR	1025328	ExpressionStatement		3094:44:88022:88022	1024475	8	True				
ANR	1025329	BreakStatement	break ;	3096:2:88030:88035	1024475	4	True				
ANR	1025330	Label	case 'R' :	3098:1:88041:88049	1024475	13	True				
ANR	1025331	IfStatement	if ( input [ 1 ] == '?' )		1024475	14					
ANR	1025332	Condition	input [ 1 ] == '?'	3099:6:88065:88079	1024475	0	True				
ANR	1025333	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1025334	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025335	Identifier	input		1024475	0					
ANR	1025336	PrimaryExpression	1		1024475	1					
ANR	1025337	PrimaryExpression	'?'		1024475	1					
ANR	1025338	CompoundStatement		156:23:4405:4405	1024475	1					
ANR	1025339	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_R )"	3100:3:88087:88127	1024475	0	True				
ANR	1025340	CallExpression	"r_core_cmd_help ( core , help_msg_slash_R )"		1024475	0					
ANR	1025341	Callee	r_core_cmd_help		1024475	0					
ANR	1025342	Identifier	r_core_cmd_help		1024475	0					
ANR	1025343	ArgumentList	core		1024475	1					
ANR	1025344	Argument	core		1024475	0					
ANR	1025345	Identifier	core		1024475	0					
ANR	1025346	Argument	help_msg_slash_R		1024475	1					
ANR	1025347	Identifier	help_msg_slash_R		1024475	0					
ANR	1025348	ElseStatement	else		1024475	0					
ANR	1025349	IfStatement	if ( input [ 1 ] == '/' )		1024475	0					
ANR	1025350	Condition	input [ 1 ] == '/'	3101:13:88142:88156	1024475	0	True				
ANR	1025351	EqualityExpression	input [ 1 ] == '/'		1024475	0		==			
ANR	1025352	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025353	Identifier	input		1024475	0					
ANR	1025354	PrimaryExpression	1		1024475	1					
ANR	1025355	PrimaryExpression	'/'		1024475	1					
ANR	1025356	CompoundStatement		158:30:4482:4482	1024475	1					
ANR	1025357	ExpressionStatement	"r_core_search_rop ( core , search_itv , 0 , input + 1 , 1 , & param )"	3102:3:88164:88225	1024475	0	True				
ANR	1025358	CallExpression	"r_core_search_rop ( core , search_itv , 0 , input + 1 , 1 , & param )"		1024475	0					
ANR	1025359	Callee	r_core_search_rop		1024475	0					
ANR	1025360	Identifier	r_core_search_rop		1024475	0					
ANR	1025361	ArgumentList	core		1024475	1					
ANR	1025362	Argument	core		1024475	0					
ANR	1025363	Identifier	core		1024475	0					
ANR	1025364	Argument	search_itv		1024475	1					
ANR	1025365	Identifier	search_itv		1024475	0					
ANR	1025366	Argument	0		1024475	2					
ANR	1025367	PrimaryExpression	0		1024475	0					
ANR	1025368	Argument	input + 1		1024475	3					
ANR	1025369	AdditiveExpression	input + 1		1024475	0		+			
ANR	1025370	Identifier	input		1024475	0					
ANR	1025371	PrimaryExpression	1		1024475	1					
ANR	1025372	Argument	1		1024475	4					
ANR	1025373	PrimaryExpression	1		1024475	0					
ANR	1025374	Argument	& param		1024475	5					
ANR	1025375	UnaryOperationExpression	& param		1024475	0					
ANR	1025376	UnaryOperator	&		1024475	0					
ANR	1025377	Identifier	param		1024475	1					
ANR	1025378	ElseStatement	else		1024475	0					
ANR	1025379	IfStatement	if ( input [ 1 ] == 'k' )		1024475	0					
ANR	1025380	Condition	input [ 1 ] == 'k'	3103:13:88240:88254	1024475	0	True				
ANR	1025381	EqualityExpression	input [ 1 ] == 'k'		1024475	0		==			
ANR	1025382	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025383	Identifier	input		1024475	0					
ANR	1025384	PrimaryExpression	1		1024475	1					
ANR	1025385	PrimaryExpression	'k'		1024475	1					
ANR	1025386	CompoundStatement		160:30:4580:4580	1024475	1					
ANR	1025387	IfStatement	if ( input [ 2 ] == '?' )		1024475	0					
ANR	1025388	Condition	input [ 2 ] == '?'	3104:7:88266:88280	1024475	0	True				
ANR	1025389	EqualityExpression	input [ 2 ] == '?'		1024475	0		==			
ANR	1025390	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1025391	Identifier	input		1024475	0					
ANR	1025392	PrimaryExpression	2		1024475	1					
ANR	1025393	PrimaryExpression	'?'		1024475	1					
ANR	1025394	CompoundStatement		161:24:4606:4606	1024475	1					
ANR	1025395	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_Rk )"	3105:4:88289:88330	1024475	0	True				
ANR	1025396	CallExpression	"r_core_cmd_help ( core , help_msg_slash_Rk )"		1024475	0					
ANR	1025397	Callee	r_core_cmd_help		1024475	0					
ANR	1025398	Identifier	r_core_cmd_help		1024475	0					
ANR	1025399	ArgumentList	core		1024475	1					
ANR	1025400	Argument	core		1024475	0					
ANR	1025401	Identifier	core		1024475	0					
ANR	1025402	Argument	help_msg_slash_Rk		1024475	1					
ANR	1025403	Identifier	help_msg_slash_Rk		1024475	0					
ANR	1025404	ElseStatement	else		1024475	0					
ANR	1025405	CompoundStatement		163:10:4665:4665	1024475	0					
ANR	1025406	ExpressionStatement	"rop_kuery ( core , input + 2 )"	3107:4:88348:88375	1024475	0	True				
ANR	1025407	CallExpression	"rop_kuery ( core , input + 2 )"		1024475	0					
ANR	1025408	Callee	rop_kuery		1024475	0					
ANR	1025409	Identifier	rop_kuery		1024475	0					
ANR	1025410	ArgumentList	core		1024475	1					
ANR	1025411	Argument	core		1024475	0					
ANR	1025412	Identifier	core		1024475	0					
ANR	1025413	Argument	input + 2		1024475	1					
ANR	1025414	AdditiveExpression	input + 2		1024475	0		+			
ANR	1025415	Identifier	input		1024475	0					
ANR	1025416	PrimaryExpression	2		1024475	1					
ANR	1025417	ElseStatement	else		1024475	0					
ANR	1025418	CompoundStatement		167:3:4719:4775	1024475	0					
ANR	1025419	IdentifierDeclStatement	"Sdb * gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false ) ;"	3110:3:88396:88452	1024475	0	True				
ANR	1025420	IdentifierDecl	"* gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false )"		1024475	0					
ANR	1025421	IdentifierDeclType	Sdb *		1024475	0					
ANR	1025422	Identifier	gadgetSdb		1024475	1					
ANR	1025423	AssignmentExpression	"* gadgetSdb = sdb_ns ( core -> sdb , ""gadget_sdb"" , false )"		1024475	2		=			
ANR	1025424	Identifier	gadgetSdb		1024475	0					
ANR	1025425	CallExpression	"sdb_ns ( core -> sdb , ""gadget_sdb"" , false )"		1024475	1					
ANR	1025426	Callee	sdb_ns		1024475	0					
ANR	1025427	Identifier	sdb_ns		1024475	0					
ANR	1025428	ArgumentList	core -> sdb		1024475	1					
ANR	1025429	Argument	core -> sdb		1024475	0					
ANR	1025430	PtrMemberAccess	core -> sdb		1024475	0					
ANR	1025431	Identifier	core		1024475	0					
ANR	1025432	Identifier	sdb		1024475	1					
ANR	1025433	Argument	"""gadget_sdb"""		1024475	1					
ANR	1025434	PrimaryExpression	"""gadget_sdb"""		1024475	0					
ANR	1025435	Argument	false		1024475	2					
ANR	1025436	Identifier	false		1024475	0					
ANR	1025437	IfStatement	if ( ! gadgetSdb )		1024475	1					
ANR	1025438	Condition	! gadgetSdb	3112:7:88462:88471	1024475	0	True				
ANR	1025439	UnaryOperationExpression	! gadgetSdb		1024475	0					
ANR	1025440	UnaryOperator	!		1024475	0					
ANR	1025441	Identifier	gadgetSdb		1024475	1					
ANR	1025442	CompoundStatement		169:19:4797:4797	1024475	1					
ANR	1025443	ExpressionStatement	"r_core_search_rop ( core , search_itv , 0 , input + 1 , 0 , & param )"	3113:4:88480:88541	1024475	0	True				
ANR	1025444	CallExpression	"r_core_search_rop ( core , search_itv , 0 , input + 1 , 0 , & param )"		1024475	0					
ANR	1025445	Callee	r_core_search_rop		1024475	0					
ANR	1025446	Identifier	r_core_search_rop		1024475	0					
ANR	1025447	ArgumentList	core		1024475	1					
ANR	1025448	Argument	core		1024475	0					
ANR	1025449	Identifier	core		1024475	0					
ANR	1025450	Argument	search_itv		1024475	1					
ANR	1025451	Identifier	search_itv		1024475	0					
ANR	1025452	Argument	0		1024475	2					
ANR	1025453	PrimaryExpression	0		1024475	0					
ANR	1025454	Argument	input + 1		1024475	3					
ANR	1025455	AdditiveExpression	input + 1		1024475	0		+			
ANR	1025456	Identifier	input		1024475	0					
ANR	1025457	PrimaryExpression	1		1024475	1					
ANR	1025458	Argument	0		1024475	4					
ANR	1025459	PrimaryExpression	0		1024475	0					
ANR	1025460	Argument	& param		1024475	5					
ANR	1025461	UnaryOperationExpression	& param		1024475	0					
ANR	1025462	UnaryOperator	&		1024475	0					
ANR	1025463	Identifier	param		1024475	1					
ANR	1025464	ElseStatement	else		1024475	0					
ANR	1025465	CompoundStatement		174:4:4924:4978	1024475	0					
ANR	1025466	IdentifierDeclStatement	SdbKv * kv ;	3115:4:88559:88568	1024475	0	True				
ANR	1025467	IdentifierDecl	* kv		1024475	0					
ANR	1025468	IdentifierDeclType	SdbKv *		1024475	0					
ANR	1025469	Identifier	kv		1024475	1					
ANR	1025470	IdentifierDeclStatement	SdbListIter * sdb_iter ;	3116:4:88574:88595	1024475	1	True				
ANR	1025471	IdentifierDecl	* sdb_iter		1024475	0					
ANR	1025472	IdentifierDeclType	SdbListIter *		1024475	0					
ANR	1025473	Identifier	sdb_iter		1024475	1					
ANR	1025474	IdentifierDeclStatement	"SdbList * sdb_list = sdb_foreach_list ( gadgetSdb , true ) ;"	3117:4:88601:88655	1024475	2	True				
ANR	1025475	IdentifierDecl	"* sdb_list = sdb_foreach_list ( gadgetSdb , true )"		1024475	0					
ANR	1025476	IdentifierDeclType	SdbList *		1024475	0					
ANR	1025477	Identifier	sdb_list		1024475	1					
ANR	1025478	AssignmentExpression	"* sdb_list = sdb_foreach_list ( gadgetSdb , true )"		1024475	2		=			
ANR	1025479	Identifier	sdb_list		1024475	0					
ANR	1025480	CallExpression	"sdb_foreach_list ( gadgetSdb , true )"		1024475	1					
ANR	1025481	Callee	sdb_foreach_list		1024475	0					
ANR	1025482	Identifier	sdb_foreach_list		1024475	0					
ANR	1025483	ArgumentList	gadgetSdb		1024475	1					
ANR	1025484	Argument	gadgetSdb		1024475	0					
ANR	1025485	Identifier	gadgetSdb		1024475	0					
ANR	1025486	Argument	true		1024475	1					
ANR	1025487	Identifier	true		1024475	0					
ANR	1025488	Statement	ls_foreach	3119:4:88662:88671	1024475	3	True				
ANR	1025489	Statement	(	3119:15:88673:88673	1024475	4	True				
ANR	1025490	Statement	sdb_list	3119:16:88674:88681	1024475	5	True				
ANR	1025491	Statement	","	3119:24:88682:88682	1024475	6	True				
ANR	1025492	Statement	sdb_iter	3119:26:88684:88691	1024475	7	True				
ANR	1025493	Statement	","	3119:34:88692:88692	1024475	8	True				
ANR	1025494	Statement	kv	3119:36:88694:88695	1024475	9	True				
ANR	1025495	Statement	)	3119:38:88696:88696	1024475	10	True				
ANR	1025496	CompoundStatement		186:5:5208:5230	1024475	11					
ANR	1025497	IdentifierDeclStatement	RList * hitlist = r_core_asm_hit_list_new ( ) ;	3120:5:88705:88748	1024475	0	True				
ANR	1025498	IdentifierDecl	* hitlist = r_core_asm_hit_list_new ( )		1024475	0					
ANR	1025499	IdentifierDeclType	RList *		1024475	0					
ANR	1025500	Identifier	hitlist		1024475	1					
ANR	1025501	AssignmentExpression	* hitlist = r_core_asm_hit_list_new ( )		1024475	2		=			
ANR	1025502	Identifier	hitlist		1024475	0					
ANR	1025503	CallExpression	r_core_asm_hit_list_new ( )		1024475	1					
ANR	1025504	Callee	r_core_asm_hit_list_new		1024475	0					
ANR	1025505	Identifier	r_core_asm_hit_list_new		1024475	0					
ANR	1025506	ArgumentList			1024475	1					
ANR	1025507	IfStatement	if ( ! hitlist )		1024475	1					
ANR	1025508	Condition	! hitlist	3121:9:88759:88766	1024475	0	True				
ANR	1025509	UnaryOperationExpression	! hitlist		1024475	0					
ANR	1025510	UnaryOperator	!		1024475	0					
ANR	1025511	Identifier	hitlist		1024475	1					
ANR	1025512	CompoundStatement		178:19:5092:5092	1024475	1					
ANR	1025513	GotoStatement	goto beach ;	3122:6:88777:88787	1024475	0	True				
ANR	1025514	Identifier	beach		1024475	0					
ANR	1025515	IdentifierDeclStatement	char * s = sdbkv_value ( kv ) ;	3125:5:88802:88828	1024475	2	True				
ANR	1025516	IdentifierDecl	* s = sdbkv_value ( kv )		1024475	0					
ANR	1025517	IdentifierDeclType	char *		1024475	0					
ANR	1025518	Identifier	s		1024475	1					
ANR	1025519	AssignmentExpression	* s = sdbkv_value ( kv )		1024475	2		=			
ANR	1025520	Identifier	s		1024475	0					
ANR	1025521	CallExpression	sdbkv_value ( kv )		1024475	1					
ANR	1025522	Callee	sdbkv_value		1024475	0					
ANR	1025523	Identifier	sdbkv_value		1024475	0					
ANR	1025524	ArgumentList	kv		1024475	1					
ANR	1025525	Argument	kv		1024475	0					
ANR	1025526	Identifier	kv		1024475	0					
ANR	1025527	IdentifierDeclStatement	ut64 addr ;	3126:5:88835:88844	1024475	3	True				
ANR	1025528	IdentifierDecl	addr		1024475	0					
ANR	1025529	IdentifierDeclType	ut64		1024475	0					
ANR	1025530	Identifier	addr		1024475	1					
ANR	1025531	IdentifierDeclStatement	int opsz ;	3127:5:88851:88859	1024475	4	True				
ANR	1025532	IdentifierDecl	opsz		1024475	0					
ANR	1025533	IdentifierDeclType	int		1024475	0					
ANR	1025534	Identifier	opsz		1024475	1					
ANR	1025535	IdentifierDeclStatement	int mode = 0 ;	3128:5:88866:88878	1024475	5	True				
ANR	1025536	IdentifierDecl	mode = 0		1024475	0					
ANR	1025537	IdentifierDeclType	int		1024475	0					
ANR	1025538	Identifier	mode		1024475	1					
ANR	1025539	AssignmentExpression	mode = 0		1024475	2		=			
ANR	1025540	Identifier	mode		1024475	0					
ANR	1025541	PrimaryExpression	0		1024475	1					
ANR	1025542	IdentifierDeclStatement	bool json_first = true ;	3129:5:88885:88907	1024475	6	True				
ANR	1025543	IdentifierDecl	json_first = true		1024475	0					
ANR	1025544	IdentifierDeclType	bool		1024475	0					
ANR	1025545	Identifier	json_first		1024475	1					
ANR	1025546	AssignmentExpression	json_first = true		1024475	2		=			
ANR	1025547	Identifier	true		1024475	0					
ANR	1025548	Identifier	true		1024475	1					
ANR	1025549	IfStatement	if ( input + 1 )		1024475	7					
ANR	1025550	Condition	input + 1	3132:9:88959:88967	1024475	0	True				
ANR	1025551	AdditiveExpression	input + 1		1024475	0		+			
ANR	1025552	Identifier	input		1024475	0					
ANR	1025553	PrimaryExpression	1		1024475	1					
ANR	1025554	CompoundStatement		189:20:5293:5293	1024475	1					
ANR	1025555	ExpressionStatement	mode = * ( input + 1 )	3133:6:88978:88997	1024475	0	True				
ANR	1025556	AssignmentExpression	mode = * ( input + 1 )		1024475	0		=			
ANR	1025557	Identifier	mode		1024475	0					
ANR	1025558	UnaryOperationExpression	* ( input + 1 )		1024475	1					
ANR	1025559	UnaryOperator	*		1024475	0					
ANR	1025560	AdditiveExpression	input + 1		1024475	1		+			
ANR	1025561	Identifier	input		1024475	0					
ANR	1025562	PrimaryExpression	1		1024475	1					
ANR	1025563	DoStatement	do		1024475	8					
ANR	1025564	CompoundStatement		194:6:5346:5386	1024475	0					
ANR	1025565	IdentifierDeclStatement	RCoreAsmHit * hit = r_core_asm_hit_new ( ) ;	3137:6:89023:89063	1024475	0	True				
ANR	1025566	IdentifierDecl	* hit = r_core_asm_hit_new ( )		1024475	0					
ANR	1025567	IdentifierDeclType	RCoreAsmHit *		1024475	0					
ANR	1025568	Identifier	hit		1024475	1					
ANR	1025569	AssignmentExpression	* hit = r_core_asm_hit_new ( )		1024475	2		=			
ANR	1025570	Identifier	hit		1024475	0					
ANR	1025571	CallExpression	r_core_asm_hit_new ( )		1024475	1					
ANR	1025572	Callee	r_core_asm_hit_new		1024475	0					
ANR	1025573	Identifier	r_core_asm_hit_new		1024475	0					
ANR	1025574	ArgumentList			1024475	1					
ANR	1025575	IfStatement	if ( ! hit )		1024475	1					
ANR	1025576	Condition	! hit	3138:10:89075:89078	1024475	0	True				
ANR	1025577	UnaryOperationExpression	! hit		1024475	0					
ANR	1025578	UnaryOperator	!		1024475	0					
ANR	1025579	Identifier	hit		1024475	1					
ANR	1025580	CompoundStatement		195:16:5404:5404	1024475	1					
ANR	1025581	ExpressionStatement	r_list_free ( hitlist )	3139:7:89090:89111	1024475	0	True				
ANR	1025582	CallExpression	r_list_free ( hitlist )		1024475	0					
ANR	1025583	Callee	r_list_free		1024475	0					
ANR	1025584	Identifier	r_list_free		1024475	0					
ANR	1025585	ArgumentList	hitlist		1024475	1					
ANR	1025586	Argument	hitlist		1024475	0					
ANR	1025587	Identifier	hitlist		1024475	0					
ANR	1025588	GotoStatement	goto beach ;	3140:7:89120:89130	1024475	1	True				
ANR	1025589	Identifier	beach		1024475	0					
ANR	1025590	Statement	sscanf	3142:6:89146:89151	1024475	2	True				
ANR	1025591	Statement	(	3142:13:89153:89153	1024475	3	True				
ANR	1025592	Statement	s	3142:14:89154:89154	1024475	4	True				
ANR	1025593	Statement	","	3142:15:89155:89155	1024475	5	True				
ANR	1025594	Statement	"""%"""	3142:17:89157:89159	1024475	6	True				
ANR	1025595	Statement	PFMT64x	3142:20:89160:89166	1024475	7	True				
ANR	1025596	Statement	"""(%"""	3142:27:89167:89170	1024475	8	True				
ANR	1025597	Statement	PFMT32d	3142:31:89171:89177	1024475	9	True				
ANR	1025598	Statement	""")"""	3142:38:89178:89180	1024475	10	True				
ANR	1025599	Statement	","	3142:41:89181:89181	1024475	11	True				
ANR	1025600	Statement	&	3142:43:89183:89183	1024475	12	True				
ANR	1025601	Statement	addr	3142:44:89184:89187	1024475	13	True				
ANR	1025602	Statement	","	3142:48:89188:89188	1024475	14	True				
ANR	1025603	Statement	&	3142:50:89190:89190	1024475	15	True				
ANR	1025604	Statement	opsz	3142:51:89191:89194	1024475	16	True				
ANR	1025605	Statement	)	3142:55:89195:89195	1024475	17	True				
ANR	1025606	ExpressionStatement		3142:56:89196:89196	1024475	18	True				
ANR	1025607	ExpressionStatement	hit -> addr = addr	3143:6:89204:89220	1024475	19	True				
ANR	1025608	AssignmentExpression	hit -> addr = addr		1024475	0		=			
ANR	1025609	PtrMemberAccess	hit -> addr		1024475	0					
ANR	1025610	Identifier	hit		1024475	0					
ANR	1025611	Identifier	addr		1024475	1					
ANR	1025612	Identifier	addr		1024475	1					
ANR	1025613	ExpressionStatement	hit -> len = opsz	3144:6:89228:89243	1024475	20	True				
ANR	1025614	AssignmentExpression	hit -> len = opsz		1024475	0		=			
ANR	1025615	PtrMemberAccess	hit -> len		1024475	0					
ANR	1025616	Identifier	hit		1024475	0					
ANR	1025617	Identifier	len		1024475	1					
ANR	1025618	Identifier	opsz		1024475	1					
ANR	1025619	ExpressionStatement	"r_list_append ( hitlist , hit )"	3145:6:89251:89279	1024475	21	True				
ANR	1025620	CallExpression	"r_list_append ( hitlist , hit )"		1024475	0					
ANR	1025621	Callee	r_list_append		1024475	0					
ANR	1025622	Identifier	r_list_append		1024475	0					
ANR	1025623	ArgumentList	hitlist		1024475	1					
ANR	1025624	Argument	hitlist		1024475	0					
ANR	1025625	Identifier	hitlist		1024475	0					
ANR	1025626	Argument	hit		1024475	1					
ANR	1025627	Identifier	hit		1024475	0					
ANR	1025628	Condition	"* ( s = strchr ( s , ')' ) + 1 ) != '\\0'"	3146:14:89295:89328	1024475	1	True				
ANR	1025629	EqualityExpression	"* ( s = strchr ( s , ')' ) + 1 ) != '\\0'"		1024475	0		!=			
ANR	1025630	UnaryOperationExpression	"* ( s = strchr ( s , ')' ) + 1 )"		1024475	0					
ANR	1025631	UnaryOperator	*		1024475	0					
ANR	1025632	AssignmentExpression	"s = strchr ( s , ')' ) + 1"		1024475	1		=			
ANR	1025633	Identifier	s		1024475	0					
ANR	1025634	AdditiveExpression	"strchr ( s , ')' ) + 1"		1024475	1		+			
ANR	1025635	CallExpression	"strchr ( s , ')' )"		1024475	0					
ANR	1025636	Callee	strchr		1024475	0					
ANR	1025637	Identifier	strchr		1024475	0					
ANR	1025638	ArgumentList	s		1024475	1					
ANR	1025639	Argument	s		1024475	0					
ANR	1025640	Identifier	s		1024475	0					
ANR	1025641	Argument	')'		1024475	1					
ANR	1025642	PrimaryExpression	')'		1024475	0					
ANR	1025643	PrimaryExpression	1		1024475	1					
ANR	1025644	PrimaryExpression	'\\0'		1024475	1					
ANR	1025645	ExpressionStatement	"print_rop ( core , hitlist , mode , & json_first )"	3148:5:89338:89382	1024475	9	True				
ANR	1025646	CallExpression	"print_rop ( core , hitlist , mode , & json_first )"		1024475	0					
ANR	1025647	Callee	print_rop		1024475	0					
ANR	1025648	Identifier	print_rop		1024475	0					
ANR	1025649	ArgumentList	core		1024475	1					
ANR	1025650	Argument	core		1024475	0					
ANR	1025651	Identifier	core		1024475	0					
ANR	1025652	Argument	hitlist		1024475	1					
ANR	1025653	Identifier	hitlist		1024475	0					
ANR	1025654	Argument	mode		1024475	2					
ANR	1025655	Identifier	mode		1024475	0					
ANR	1025656	Argument	& json_first		1024475	3					
ANR	1025657	UnaryOperationExpression	& json_first		1024475	0					
ANR	1025658	UnaryOperator	&		1024475	0					
ANR	1025659	Identifier	json_first		1024475	1					
ANR	1025660	ExpressionStatement	r_list_free ( hitlist )	3149:5:89389:89410	1024475	10	True				
ANR	1025661	CallExpression	r_list_free ( hitlist )		1024475	0					
ANR	1025662	Callee	r_list_free		1024475	0					
ANR	1025663	Identifier	r_list_free		1024475	0					
ANR	1025664	ArgumentList	hitlist		1024475	1					
ANR	1025665	Argument	hitlist		1024475	0					
ANR	1025666	Identifier	hitlist		1024475	0					
ANR	1025667	GotoStatement	goto beach ;	3153:2:89429:89439	1024475	15	True				
ANR	1025668	Identifier	beach		1024475	0					
ANR	1025669	Label	case 'r' :	3154:1:89442:89450	1024475	16	True				
ANR	1025670	CompoundStatement		213:2:5799:5905	1024475	17					
ANR	1025671	IdentifierDeclStatement	"ut64 n = ( input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' ) ) ? r_num_math ( core -> num , input + 2 ) : UT64_MAX ;"	3156:2:89476:89582	1024475	0	True				
ANR	1025672	IdentifierDecl	"n = ( input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' ) ) ? r_num_math ( core -> num , input + 2 ) : UT64_MAX"		1024475	0					
ANR	1025673	IdentifierDeclType	ut64		1024475	0					
ANR	1025674	Identifier	n		1024475	1					
ANR	1025675	AssignmentExpression	"n = ( input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' ) ) ? r_num_math ( core -> num , input + 2 ) : UT64_MAX"		1024475	2		=			
ANR	1025676	Identifier	n		1024475	0					
ANR	1025677	ConditionalExpression	"( input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' ) ) ? r_num_math ( core -> num , input + 2 ) : UT64_MAX"		1024475	1					
ANR	1025678	Condition	input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' )		1024475	0					
ANR	1025679	OrExpression	input [ 1 ] == ' ' || ( input [ 1 ] && input [ 2 ] == ' ' )		1024475	0		||			
ANR	1025680	EqualityExpression	input [ 1 ] == ' '		1024475	0		==			
ANR	1025681	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025682	Identifier	input		1024475	0					
ANR	1025683	PrimaryExpression	1		1024475	1					
ANR	1025684	PrimaryExpression	' '		1024475	1					
ANR	1025685	AndExpression	input [ 1 ] && input [ 2 ] == ' '		1024475	1		&&			
ANR	1025686	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025687	Identifier	input		1024475	0					
ANR	1025688	PrimaryExpression	1		1024475	1					
ANR	1025689	EqualityExpression	input [ 2 ] == ' '		1024475	1		==			
ANR	1025690	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1025691	Identifier	input		1024475	0					
ANR	1025692	PrimaryExpression	2		1024475	1					
ANR	1025693	PrimaryExpression	' '		1024475	1					
ANR	1025694	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1025695	Callee	r_num_math		1024475	0					
ANR	1025696	Identifier	r_num_math		1024475	0					
ANR	1025697	ArgumentList	core -> num		1024475	1					
ANR	1025698	Argument	core -> num		1024475	0					
ANR	1025699	PtrMemberAccess	core -> num		1024475	0					
ANR	1025700	Identifier	core		1024475	0					
ANR	1025701	Identifier	num		1024475	1					
ANR	1025702	Argument	input + 2		1024475	1					
ANR	1025703	AdditiveExpression	input + 2		1024475	0		+			
ANR	1025704	Identifier	input		1024475	0					
ANR	1025705	PrimaryExpression	2		1024475	1					
ANR	1025706	Identifier	UT64_MAX		1024475	2					
ANR	1025707	Statement	if	3158:2:89586:89587	1024475	1	True				
ANR	1025708	Statement	(	3158:5:89589:89589	1024475	2	True				
ANR	1025709	Statement	n	3158:6:89590:89590	1024475	3	True				
ANR	1025710	Statement	==	3158:8:89592:89593	1024475	4	True				
ANR	1025711	Statement	0L	3158:11:89595:89596	1024475	5	True				
ANR	1025712	Statement	L	3158:13:89597:89597	1024475	6	True				
ANR	1025713	Statement	)	3158:14:89598:89598	1024475	7	True				
ANR	1025714	CompoundStatement		215:16:5923:5923	1024475	8					
ANR	1025715	ExpressionStatement	"eprintf ( ""Cannot find null references.\\n"" )"	3159:3:89605:89647	1024475	0	True				
ANR	1025716	CallExpression	"eprintf ( ""Cannot find null references.\\n"" )"		1024475	0					
ANR	1025717	Callee	eprintf		1024475	0					
ANR	1025718	Identifier	eprintf		1024475	0					
ANR	1025719	ArgumentList	"""Cannot find null references.\\n"""		1024475	1					
ANR	1025720	Argument	"""Cannot find null references.\\n"""		1024475	0					
ANR	1025721	PrimaryExpression	"""Cannot find null references.\\n"""		1024475	0					
ANR	1025722	BreakStatement	break ;	3160:3:89652:89657	1024475	1	True				
ANR	1025723	SwitchStatement	switch ( input [ 1 ] )		1024475	9					
ANR	1025724	Condition	input [ 1 ]	3162:10:89673:89680	1024475	0	True				
ANR	1025725	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1025726	Identifier	input		1024475	0					
ANR	1025727	PrimaryExpression	1		1024475	1					
ANR	1025728	CompoundStatement		219:20:6006:6006	1024475	1					
ANR	1025729	Label	case 'c' :	3163:2:89687:89695	1024475	0	True				
ANR	1025730	CompoundStatement		223:4:6059:6070	1024475	1					
ANR	1025731	IdentifierDeclStatement	RListIter * iter ;	3165:4:89715:89730	1024475	0	True				
ANR	1025732	IdentifierDecl	* iter		1024475	0					
ANR	1025733	IdentifierDeclType	RListIter *		1024475	0					
ANR	1025734	Identifier	iter		1024475	1					
ANR	1025735	IdentifierDeclStatement	RIOMap * map ;	3166:4:89736:89747	1024475	1	True				
ANR	1025736	IdentifierDecl	* map		1024475	0					
ANR	1025737	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1025738	Identifier	map		1024475	1					
ANR	1025739	Statement	r_list_foreach	3167:4:89753:89766	1024475	2	True				
ANR	1025740	Statement	(	3167:19:89768:89768	1024475	3	True				
ANR	1025741	Statement	param	3167:20:89769:89773	1024475	4	True				
ANR	1025742	Statement	.	3167:25:89774:89774	1024475	5	True				
ANR	1025743	Statement	boundaries	3167:26:89775:89784	1024475	6	True				
ANR	1025744	Statement	","	3167:36:89785:89785	1024475	7	True				
ANR	1025745	Statement	iter	3167:38:89787:89790	1024475	8	True				
ANR	1025746	Statement	","	3167:42:89791:89791	1024475	9	True				
ANR	1025747	Statement	map	3167:44:89793:89795	1024475	10	True				
ANR	1025748	Statement	)	3167:47:89796:89796	1024475	11	True				
ANR	1025749	CompoundStatement		224:49:6121:6121	1024475	12					
ANR	1025750	Statement	eprintf	3168:5:89805:89811	1024475	0	True				
ANR	1025751	Statement	(	3168:13:89813:89813	1024475	1	True				
ANR	1025752	Statement	"""-- 0x%"""	3168:14:89814:89821	1024475	2	True				
ANR	1025753	Statement	PFMT64x	3168:22:89822:89828	1024475	3	True				
ANR	1025754	Statement	""" 0x%"""	3168:29:89829:89834	1024475	4	True				
ANR	1025755	Statement	PFMT64x	3168:35:89835:89841	1024475	5	True				
ANR	1025756	Statement	"""\\n"""	3168:42:89842:89845	1024475	6	True				
ANR	1025757	Statement	","	3168:46:89846:89846	1024475	7	True				
ANR	1025758	Statement	map	3168:48:89848:89850	1024475	8	True				
ANR	1025759	Statement	->	3168:51:89851:89852	1024475	9	True				
ANR	1025760	Statement	itv	3168:53:89853:89855	1024475	10	True				
ANR	1025761	Statement	.	3168:56:89856:89856	1024475	11	True				
ANR	1025762	Statement	addr	3168:57:89857:89860	1024475	12	True				
ANR	1025763	Statement	","	3168:61:89861:89861	1024475	13	True				
ANR	1025764	Statement	r_itv_end	3168:63:89863:89871	1024475	14	True				
ANR	1025765	Statement	(	3168:73:89873:89873	1024475	15	True				
ANR	1025766	Statement	map	3168:74:89874:89876	1024475	16	True				
ANR	1025767	Statement	->	3168:77:89877:89878	1024475	17	True				
ANR	1025768	Statement	itv	3168:79:89879:89881	1024475	18	True				
ANR	1025769	Statement	)	3168:82:89882:89882	1024475	19	True				
ANR	1025770	Statement	)	3168:83:89883:89883	1024475	20	True				
ANR	1025771	ExpressionStatement		3168:84:89884:89884	1024475	21	True				
ANR	1025772	ExpressionStatement	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 'c' )"	3169:5:89891:89961	1024475	22	True				
ANR	1025773	CallExpression	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 'c' )"		1024475	0					
ANR	1025774	Callee	r_core_anal_search		1024475	0					
ANR	1025775	Identifier	r_core_anal_search		1024475	0					
ANR	1025776	ArgumentList	core		1024475	1					
ANR	1025777	Argument	core		1024475	0					
ANR	1025778	Identifier	core		1024475	0					
ANR	1025779	Argument	map -> itv . addr		1024475	1					
ANR	1025780	MemberAccess	map -> itv . addr		1024475	0					
ANR	1025781	PtrMemberAccess	map -> itv		1024475	0					
ANR	1025782	Identifier	map		1024475	0					
ANR	1025783	Identifier	itv		1024475	1					
ANR	1025784	Identifier	addr		1024475	1					
ANR	1025785	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1025786	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1025787	Callee	r_itv_end		1024475	0					
ANR	1025788	Identifier	r_itv_end		1024475	0					
ANR	1025789	ArgumentList	map -> itv		1024475	1					
ANR	1025790	Argument	map -> itv		1024475	0					
ANR	1025791	PtrMemberAccess	map -> itv		1024475	0					
ANR	1025792	Identifier	map		1024475	0					
ANR	1025793	Identifier	itv		1024475	1					
ANR	1025794	Argument	n		1024475	3					
ANR	1025795	Identifier	n		1024475	0					
ANR	1025796	Argument	'c'		1024475	4					
ANR	1025797	PrimaryExpression	'c'		1024475	0					
ANR	1025798	BreakStatement	break ;	3172:3:89977:89982	1024475	2	True				
ANR	1025799	Label	case 'a' :	3173:2:89986:89994	1024475	3	True				
ANR	1025800	CompoundStatement		233:4:6358:6369	1024475	4					
ANR	1025801	IdentifierDeclStatement	RListIter * iter ;	3175:4:90014:90029	1024475	0	True				
ANR	1025802	IdentifierDecl	* iter		1024475	0					
ANR	1025803	IdentifierDeclType	RListIter *		1024475	0					
ANR	1025804	Identifier	iter		1024475	1					
ANR	1025805	IdentifierDeclStatement	RIOMap * map ;	3176:4:90035:90046	1024475	1	True				
ANR	1025806	IdentifierDecl	* map		1024475	0					
ANR	1025807	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1025808	Identifier	map		1024475	1					
ANR	1025809	Statement	r_list_foreach	3177:4:90052:90065	1024475	2	True				
ANR	1025810	Statement	(	3177:19:90067:90067	1024475	3	True				
ANR	1025811	Statement	param	3177:20:90068:90072	1024475	4	True				
ANR	1025812	Statement	.	3177:25:90073:90073	1024475	5	True				
ANR	1025813	Statement	boundaries	3177:26:90074:90083	1024475	6	True				
ANR	1025814	Statement	","	3177:36:90084:90084	1024475	7	True				
ANR	1025815	Statement	iter	3177:38:90086:90089	1024475	8	True				
ANR	1025816	Statement	","	3177:42:90090:90090	1024475	9	True				
ANR	1025817	Statement	map	3177:44:90092:90094	1024475	10	True				
ANR	1025818	Statement	)	3177:47:90095:90095	1024475	11	True				
ANR	1025819	CompoundStatement		234:49:6420:6420	1024475	12					
ANR	1025820	Statement	eprintf	3178:5:90104:90110	1024475	0	True				
ANR	1025821	Statement	(	3178:13:90112:90112	1024475	1	True				
ANR	1025822	Statement	"""-- 0x%"""	3178:14:90113:90120	1024475	2	True				
ANR	1025823	Statement	PFMT64x	3178:22:90121:90127	1024475	3	True				
ANR	1025824	Statement	""" 0x%"""	3178:29:90128:90133	1024475	4	True				
ANR	1025825	Statement	PFMT64x	3178:35:90134:90140	1024475	5	True				
ANR	1025826	Statement	"""\\n"""	3178:42:90141:90144	1024475	6	True				
ANR	1025827	Statement	","	3178:46:90145:90145	1024475	7	True				
ANR	1025828	Statement	map	3178:48:90147:90149	1024475	8	True				
ANR	1025829	Statement	->	3178:51:90150:90151	1024475	9	True				
ANR	1025830	Statement	itv	3178:53:90152:90154	1024475	10	True				
ANR	1025831	Statement	.	3178:56:90155:90155	1024475	11	True				
ANR	1025832	Statement	addr	3178:57:90156:90159	1024475	12	True				
ANR	1025833	Statement	","	3178:61:90160:90160	1024475	13	True				
ANR	1025834	Statement	r_itv_end	3178:63:90162:90170	1024475	14	True				
ANR	1025835	Statement	(	3178:73:90172:90172	1024475	15	True				
ANR	1025836	Statement	map	3178:74:90173:90175	1024475	16	True				
ANR	1025837	Statement	->	3178:77:90176:90177	1024475	17	True				
ANR	1025838	Statement	itv	3178:79:90178:90180	1024475	18	True				
ANR	1025839	Statement	)	3178:82:90181:90181	1024475	19	True				
ANR	1025840	Statement	)	3178:83:90182:90182	1024475	20	True				
ANR	1025841	ExpressionStatement		3178:84:90183:90183	1024475	21	True				
ANR	1025842	ExpressionStatement	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 0 )"	3179:5:90190:90258	1024475	22	True				
ANR	1025843	CallExpression	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 0 )"		1024475	0					
ANR	1025844	Callee	r_core_anal_search		1024475	0					
ANR	1025845	Identifier	r_core_anal_search		1024475	0					
ANR	1025846	ArgumentList	core		1024475	1					
ANR	1025847	Argument	core		1024475	0					
ANR	1025848	Identifier	core		1024475	0					
ANR	1025849	Argument	map -> itv . addr		1024475	1					
ANR	1025850	MemberAccess	map -> itv . addr		1024475	0					
ANR	1025851	PtrMemberAccess	map -> itv		1024475	0					
ANR	1025852	Identifier	map		1024475	0					
ANR	1025853	Identifier	itv		1024475	1					
ANR	1025854	Identifier	addr		1024475	1					
ANR	1025855	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1025856	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1025857	Callee	r_itv_end		1024475	0					
ANR	1025858	Identifier	r_itv_end		1024475	0					
ANR	1025859	ArgumentList	map -> itv		1024475	1					
ANR	1025860	Argument	map -> itv		1024475	0					
ANR	1025861	PtrMemberAccess	map -> itv		1024475	0					
ANR	1025862	Identifier	map		1024475	0					
ANR	1025863	Identifier	itv		1024475	1					
ANR	1025864	Argument	n		1024475	3					
ANR	1025865	Identifier	n		1024475	0					
ANR	1025866	Argument	0		1024475	4					
ANR	1025867	PrimaryExpression	0		1024475	0					
ANR	1025868	BreakStatement	break ;	3182:3:90274:90279	1024475	5	True				
ANR	1025869	Label	case 'e' :	3183:2:90283:90291	1024475	6	True				
ANR	1025870	IfStatement	if ( input [ 2 ] == '?' )		1024475	7					
ANR	1025871	Condition	input [ 2 ] == '?'	3184:7:90309:90323	1024475	0	True				
ANR	1025872	EqualityExpression	input [ 2 ] == '?'		1024475	0		==			
ANR	1025873	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1025874	Identifier	input		1024475	0					
ANR	1025875	PrimaryExpression	2		1024475	1					
ANR	1025876	PrimaryExpression	'?'		1024475	1					
ANR	1025877	CompoundStatement		241:24:6649:6649	1024475	1					
ANR	1025878	ExpressionStatement	"eprintf ( ""Usage: /re $$ - to find references to current address\\n"" )"	3185:4:90332:90399	1024475	0	True				
ANR	1025879	CallExpression	"eprintf ( ""Usage: /re $$ - to find references to current address\\n"" )"		1024475	0					
ANR	1025880	Callee	eprintf		1024475	0					
ANR	1025881	Identifier	eprintf		1024475	0					
ANR	1025882	ArgumentList	"""Usage: /re $$ - to find references to current address\\n"""		1024475	1					
ANR	1025883	Argument	"""Usage: /re $$ - to find references to current address\\n"""		1024475	0					
ANR	1025884	PrimaryExpression	"""Usage: /re $$ - to find references to current address\\n"""		1024475	0					
ANR	1025885	ElseStatement	else		1024475	0					
ANR	1025886	CompoundStatement		245:4:6761:6772	1024475	0					
ANR	1025887	IdentifierDeclStatement	RListIter * iter ;	3187:4:90417:90432	1024475	0	True				
ANR	1025888	IdentifierDecl	* iter		1024475	0					
ANR	1025889	IdentifierDeclType	RListIter *		1024475	0					
ANR	1025890	Identifier	iter		1024475	1					
ANR	1025891	IdentifierDeclStatement	RIOMap * map ;	3188:4:90438:90449	1024475	1	True				
ANR	1025892	IdentifierDecl	* map		1024475	0					
ANR	1025893	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1025894	Identifier	map		1024475	1					
ANR	1025895	Statement	r_list_foreach	3189:4:90455:90468	1024475	2	True				
ANR	1025896	Statement	(	3189:19:90470:90470	1024475	3	True				
ANR	1025897	Statement	param	3189:20:90471:90475	1024475	4	True				
ANR	1025898	Statement	.	3189:25:90476:90476	1024475	5	True				
ANR	1025899	Statement	boundaries	3189:26:90477:90486	1024475	6	True				
ANR	1025900	Statement	","	3189:36:90487:90487	1024475	7	True				
ANR	1025901	Statement	iter	3189:38:90489:90492	1024475	8	True				
ANR	1025902	Statement	","	3189:42:90493:90493	1024475	9	True				
ANR	1025903	Statement	map	3189:44:90495:90497	1024475	10	True				
ANR	1025904	Statement	)	3189:47:90498:90498	1024475	11	True				
ANR	1025905	CompoundStatement		249:5:6970:6997	1024475	12					
ANR	1025906	Statement	eprintf	3190:5:90507:90513	1024475	0	True				
ANR	1025907	Statement	(	3190:13:90515:90515	1024475	1	True				
ANR	1025908	Statement	"""-- 0x%"""	3190:14:90516:90523	1024475	2	True				
ANR	1025909	Statement	PFMT64x	3190:22:90524:90530	1024475	3	True				
ANR	1025910	Statement	""" 0x%"""	3190:29:90531:90536	1024475	4	True				
ANR	1025911	Statement	PFMT64x	3190:35:90537:90543	1024475	5	True				
ANR	1025912	Statement	"""\\n"""	3190:42:90544:90547	1024475	6	True				
ANR	1025913	Statement	","	3190:46:90548:90548	1024475	7	True				
ANR	1025914	Statement	map	3190:48:90550:90552	1024475	8	True				
ANR	1025915	Statement	->	3190:51:90553:90554	1024475	9	True				
ANR	1025916	Statement	itv	3190:53:90555:90557	1024475	10	True				
ANR	1025917	Statement	.	3190:56:90558:90558	1024475	11	True				
ANR	1025918	Statement	addr	3190:57:90559:90562	1024475	12	True				
ANR	1025919	Statement	","	3190:61:90563:90563	1024475	13	True				
ANR	1025920	Statement	r_itv_end	3190:63:90565:90573	1024475	14	True				
ANR	1025921	Statement	(	3190:73:90575:90575	1024475	15	True				
ANR	1025922	Statement	map	3190:74:90576:90578	1024475	16	True				
ANR	1025923	Statement	->	3190:77:90579:90580	1024475	17	True				
ANR	1025924	Statement	itv	3190:79:90581:90583	1024475	18	True				
ANR	1025925	Statement	)	3190:82:90584:90584	1024475	19	True				
ANR	1025926	Statement	)	3190:83:90585:90585	1024475	20	True				
ANR	1025927	ExpressionStatement		3190:84:90586:90586	1024475	21	True				
ANR	1025928	IdentifierDeclStatement	"ut64 refptr = r_num_math ( core -> num , input + 2 ) ;"	3191:5:90593:90640	1024475	22	True				
ANR	1025929	IdentifierDecl	"refptr = r_num_math ( core -> num , input + 2 )"		1024475	0					
ANR	1025930	IdentifierDeclType	ut64		1024475	0					
ANR	1025931	Identifier	refptr		1024475	1					
ANR	1025932	AssignmentExpression	"refptr = r_num_math ( core -> num , input + 2 )"		1024475	2		=			
ANR	1025933	Identifier	refptr		1024475	0					
ANR	1025934	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1025935	Callee	r_num_math		1024475	0					
ANR	1025936	Identifier	r_num_math		1024475	0					
ANR	1025937	ArgumentList	core -> num		1024475	1					
ANR	1025938	Argument	core -> num		1024475	0					
ANR	1025939	PtrMemberAccess	core -> num		1024475	0					
ANR	1025940	Identifier	core		1024475	0					
ANR	1025941	Identifier	num		1024475	1					
ANR	1025942	Argument	input + 2		1024475	1					
ANR	1025943	AdditiveExpression	input + 2		1024475	0		+			
ANR	1025944	Identifier	input		1024475	0					
ANR	1025945	PrimaryExpression	2		1024475	1					
ANR	1025946	IdentifierDeclStatement	ut64 curseek = core -> offset ;	3192:5:90647:90674	1024475	23	True				
ANR	1025947	IdentifierDecl	curseek = core -> offset		1024475	0					
ANR	1025948	IdentifierDeclType	ut64		1024475	0					
ANR	1025949	Identifier	curseek		1024475	1					
ANR	1025950	AssignmentExpression	curseek = core -> offset		1024475	2		=			
ANR	1025951	Identifier	curseek		1024475	0					
ANR	1025952	PtrMemberAccess	core -> offset		1024475	1					
ANR	1025953	Identifier	core		1024475	0					
ANR	1025954	Identifier	offset		1024475	1					
ANR	1025955	ExpressionStatement	"r_core_seek ( core , map -> itv . addr , 1 )"	3193:5:90681:90717	1024475	24	True				
ANR	1025956	CallExpression	"r_core_seek ( core , map -> itv . addr , 1 )"		1024475	0					
ANR	1025957	Callee	r_core_seek		1024475	0					
ANR	1025958	Identifier	r_core_seek		1024475	0					
ANR	1025959	ArgumentList	core		1024475	1					
ANR	1025960	Argument	core		1024475	0					
ANR	1025961	Identifier	core		1024475	0					
ANR	1025962	Argument	map -> itv . addr		1024475	1					
ANR	1025963	MemberAccess	map -> itv . addr		1024475	0					
ANR	1025964	PtrMemberAccess	map -> itv		1024475	0					
ANR	1025965	Identifier	map		1024475	0					
ANR	1025966	Identifier	itv		1024475	1					
ANR	1025967	Identifier	addr		1024475	1					
ANR	1025968	Argument	1		1024475	2					
ANR	1025969	PrimaryExpression	1		1024475	0					
ANR	1025970	Statement	char	3194:5:90724:90727	1024475	25	True				
ANR	1025971	Statement	*	3194:10:90729:90729	1024475	26	True				
ANR	1025972	Statement	arg	3194:11:90730:90732	1024475	27	True				
ANR	1025973	Statement	=	3194:15:90734:90734	1024475	28	True				
ANR	1025974	Statement	r_str_newf	3194:17:90736:90745	1024475	29	True				
ANR	1025975	Statement	(	3194:28:90747:90747	1024475	30	True				
ANR	1025976	Statement	""" %"""	3194:29:90748:90751	1024475	31	True				
ANR	1025977	Statement	PFMT64d	3194:33:90752:90758	1024475	32	True				
ANR	1025978	Statement	","	3194:40:90759:90759	1024475	33	True				
ANR	1025979	Statement	r_itv_end	3194:42:90761:90769	1024475	34	True				
ANR	1025980	Statement	(	3194:52:90771:90771	1024475	35	True				
ANR	1025981	Statement	map	3194:53:90772:90774	1024475	36	True				
ANR	1025982	Statement	->	3194:56:90775:90776	1024475	37	True				
ANR	1025983	Statement	itv	3194:58:90777:90779	1024475	38	True				
ANR	1025984	Statement	)	3194:61:90780:90780	1024475	39	True				
ANR	1025985	Statement	-	3194:63:90782:90782	1024475	40	True				
ANR	1025986	Statement	map	3194:65:90784:90786	1024475	41	True				
ANR	1025987	Statement	->	3194:68:90787:90788	1024475	42	True				
ANR	1025988	Statement	itv	3194:70:90789:90791	1024475	43	True				
ANR	1025989	Statement	.	3194:73:90792:90792	1024475	44	True				
ANR	1025990	Statement	addr	3194:74:90793:90796	1024475	45	True				
ANR	1025991	Statement	)	3194:78:90797:90797	1024475	46	True				
ANR	1025992	ExpressionStatement		3194:79:90798:90798	1024475	47	True				
ANR	1025993	Statement	char	3195:5:90805:90808	1024475	48	True				
ANR	1025994	Statement	*	3195:10:90810:90810	1024475	49	True				
ANR	1025995	Statement	trg	3195:11:90811:90813	1024475	50	True				
ANR	1025996	Statement	=	3195:15:90815:90815	1024475	51	True				
ANR	1025997	Statement	refptr	3195:17:90817:90822	1024475	52	True				
ANR	1025998	Statement	?	3195:23:90823:90823	1024475	53	True				
ANR	1025999	Statement	r_str_newf	3195:25:90825:90834	1024475	54	True				
ANR	1026000	Statement	(	3195:36:90836:90836	1024475	55	True				
ANR	1026001	Statement	""" %"""	3195:37:90837:90840	1024475	56	True				
ANR	1026002	Statement	PFMT64d	3195:41:90841:90847	1024475	57	True				
ANR	1026003	Statement	","	3195:48:90848:90848	1024475	58	True				
ANR	1026004	Statement	refptr	3195:50:90850:90855	1024475	59	True				
ANR	1026005	Statement	)	3195:56:90856:90856	1024475	60	True				
ANR	1026006	Statement	:	3195:57:90857:90857	1024475	61	True				
ANR	1026007	ExpressionStatement	"strdup ( """" )"	3195:59:90859:90870	1024475	62	True				
ANR	1026008	CallExpression	"strdup ( """" )"		1024475	0					
ANR	1026009	Callee	strdup		1024475	0					
ANR	1026010	Identifier	strdup		1024475	0					
ANR	1026011	ArgumentList	""""""		1024475	1					
ANR	1026012	Argument	""""""		1024475	0					
ANR	1026013	PrimaryExpression	""""""		1024475	0					
ANR	1026014	ExpressionStatement	"r_core_anal_esil ( core , arg , trg )"	3196:5:90877:90910	1024475	63	True				
ANR	1026015	CallExpression	"r_core_anal_esil ( core , arg , trg )"		1024475	0					
ANR	1026016	Callee	r_core_anal_esil		1024475	0					
ANR	1026017	Identifier	r_core_anal_esil		1024475	0					
ANR	1026018	ArgumentList	core		1024475	1					
ANR	1026019	Argument	core		1024475	0					
ANR	1026020	Identifier	core		1024475	0					
ANR	1026021	Argument	arg		1024475	1					
ANR	1026022	Identifier	arg		1024475	0					
ANR	1026023	Argument	trg		1024475	2					
ANR	1026024	Identifier	trg		1024475	0					
ANR	1026025	ExpressionStatement	free ( arg )	3197:5:90917:90927	1024475	64	True				
ANR	1026026	CallExpression	free ( arg )		1024475	0					
ANR	1026027	Callee	free		1024475	0					
ANR	1026028	Identifier	free		1024475	0					
ANR	1026029	ArgumentList	arg		1024475	1					
ANR	1026030	Argument	arg		1024475	0					
ANR	1026031	Identifier	arg		1024475	0					
ANR	1026032	ExpressionStatement	free ( trg )	3198:5:90934:90944	1024475	65	True				
ANR	1026033	CallExpression	free ( trg )		1024475	0					
ANR	1026034	Callee	free		1024475	0					
ANR	1026035	Identifier	free		1024475	0					
ANR	1026036	ArgumentList	trg		1024475	1					
ANR	1026037	Argument	trg		1024475	0					
ANR	1026038	Identifier	trg		1024475	0					
ANR	1026039	ExpressionStatement	"r_core_seek ( core , curseek , 1 )"	3199:5:90951:90981	1024475	66	True				
ANR	1026040	CallExpression	"r_core_seek ( core , curseek , 1 )"		1024475	0					
ANR	1026041	Callee	r_core_seek		1024475	0					
ANR	1026042	Identifier	r_core_seek		1024475	0					
ANR	1026043	ArgumentList	core		1024475	1					
ANR	1026044	Argument	core		1024475	0					
ANR	1026045	Identifier	core		1024475	0					
ANR	1026046	Argument	curseek		1024475	1					
ANR	1026047	Identifier	curseek		1024475	0					
ANR	1026048	Argument	1		1024475	2					
ANR	1026049	PrimaryExpression	1		1024475	0					
ANR	1026050	BreakStatement	break ;	3202:3:90997:91002	1024475	8	True				
ANR	1026051	Label	case 'r' :	3203:2:91006:91014	1024475	9	True				
ANR	1026052	CompoundStatement		263:4:7390:7401	1024475	10					
ANR	1026053	IdentifierDeclStatement	RListIter * iter ;	3205:4:91046:91061	1024475	0	True				
ANR	1026054	IdentifierDecl	* iter		1024475	0					
ANR	1026055	IdentifierDeclType	RListIter *		1024475	0					
ANR	1026056	Identifier	iter		1024475	1					
ANR	1026057	IdentifierDeclStatement	RIOMap * map ;	3206:4:91067:91078	1024475	1	True				
ANR	1026058	IdentifierDecl	* map		1024475	0					
ANR	1026059	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1026060	Identifier	map		1024475	1					
ANR	1026061	Statement	r_list_foreach	3207:4:91084:91097	1024475	2	True				
ANR	1026062	Statement	(	3207:19:91099:91099	1024475	3	True				
ANR	1026063	Statement	param	3207:20:91100:91104	1024475	4	True				
ANR	1026064	Statement	.	3207:25:91105:91105	1024475	5	True				
ANR	1026065	Statement	boundaries	3207:26:91106:91115	1024475	6	True				
ANR	1026066	Statement	","	3207:36:91116:91116	1024475	7	True				
ANR	1026067	Statement	iter	3207:38:91118:91121	1024475	8	True				
ANR	1026068	Statement	","	3207:42:91122:91122	1024475	9	True				
ANR	1026069	Statement	map	3207:44:91124:91126	1024475	10	True				
ANR	1026070	Statement	)	3207:47:91127:91127	1024475	11	True				
ANR	1026071	CompoundStatement		264:49:7452:7452	1024475	12					
ANR	1026072	Statement	eprintf	3208:5:91136:91142	1024475	0	True				
ANR	1026073	Statement	(	3208:13:91144:91144	1024475	1	True				
ANR	1026074	Statement	"""-- 0x%"""	3208:14:91145:91152	1024475	2	True				
ANR	1026075	Statement	PFMT64x	3208:22:91153:91159	1024475	3	True				
ANR	1026076	Statement	""" 0x%"""	3208:29:91160:91165	1024475	4	True				
ANR	1026077	Statement	PFMT64x	3208:35:91166:91172	1024475	5	True				
ANR	1026078	Statement	"""\\n"""	3208:42:91173:91176	1024475	6	True				
ANR	1026079	Statement	","	3208:46:91177:91177	1024475	7	True				
ANR	1026080	Statement	map	3208:48:91179:91181	1024475	8	True				
ANR	1026081	Statement	->	3208:51:91182:91183	1024475	9	True				
ANR	1026082	Statement	itv	3208:53:91184:91186	1024475	10	True				
ANR	1026083	Statement	.	3208:56:91187:91187	1024475	11	True				
ANR	1026084	Statement	addr	3208:57:91188:91191	1024475	12	True				
ANR	1026085	Statement	","	3208:61:91192:91192	1024475	13	True				
ANR	1026086	Statement	r_itv_end	3208:63:91194:91202	1024475	14	True				
ANR	1026087	Statement	(	3208:73:91204:91204	1024475	15	True				
ANR	1026088	Statement	map	3208:74:91205:91207	1024475	16	True				
ANR	1026089	Statement	->	3208:77:91208:91209	1024475	17	True				
ANR	1026090	Statement	itv	3208:79:91210:91212	1024475	18	True				
ANR	1026091	Statement	)	3208:82:91213:91213	1024475	19	True				
ANR	1026092	Statement	)	3208:83:91214:91214	1024475	20	True				
ANR	1026093	ExpressionStatement		3208:84:91215:91215	1024475	21	True				
ANR	1026094	ExpressionStatement	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 'r' )"	3209:5:91222:91292	1024475	22	True				
ANR	1026095	CallExpression	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 'r' )"		1024475	0					
ANR	1026096	Callee	r_core_anal_search		1024475	0					
ANR	1026097	Identifier	r_core_anal_search		1024475	0					
ANR	1026098	ArgumentList	core		1024475	1					
ANR	1026099	Argument	core		1024475	0					
ANR	1026100	Identifier	core		1024475	0					
ANR	1026101	Argument	map -> itv . addr		1024475	1					
ANR	1026102	MemberAccess	map -> itv . addr		1024475	0					
ANR	1026103	PtrMemberAccess	map -> itv		1024475	0					
ANR	1026104	Identifier	map		1024475	0					
ANR	1026105	Identifier	itv		1024475	1					
ANR	1026106	Identifier	addr		1024475	1					
ANR	1026107	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1026108	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1026109	Callee	r_itv_end		1024475	0					
ANR	1026110	Identifier	r_itv_end		1024475	0					
ANR	1026111	ArgumentList	map -> itv		1024475	1					
ANR	1026112	Argument	map -> itv		1024475	0					
ANR	1026113	PtrMemberAccess	map -> itv		1024475	0					
ANR	1026114	Identifier	map		1024475	0					
ANR	1026115	Identifier	itv		1024475	1					
ANR	1026116	Argument	n		1024475	3					
ANR	1026117	Identifier	n		1024475	0					
ANR	1026118	Argument	'r'		1024475	4					
ANR	1026119	PrimaryExpression	'r'		1024475	0					
ANR	1026120	BreakStatement	break ;	3212:3:91308:91313	1024475	11	True				
ANR	1026121	Label	case 'w' :	3213:2:91317:91325	1024475	12	True				
ANR	1026122	CompoundStatement		273:4:7702:7713	1024475	13					
ANR	1026123	IdentifierDeclStatement	RListIter * iter ;	3215:4:91358:91373	1024475	0	True				
ANR	1026124	IdentifierDecl	* iter		1024475	0					
ANR	1026125	IdentifierDeclType	RListIter *		1024475	0					
ANR	1026126	Identifier	iter		1024475	1					
ANR	1026127	IdentifierDeclStatement	RIOMap * map ;	3216:4:91379:91390	1024475	1	True				
ANR	1026128	IdentifierDecl	* map		1024475	0					
ANR	1026129	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1026130	Identifier	map		1024475	1					
ANR	1026131	Statement	r_list_foreach	3217:4:91396:91409	1024475	2	True				
ANR	1026132	Statement	(	3217:19:91411:91411	1024475	3	True				
ANR	1026133	Statement	param	3217:20:91412:91416	1024475	4	True				
ANR	1026134	Statement	.	3217:25:91417:91417	1024475	5	True				
ANR	1026135	Statement	boundaries	3217:26:91418:91427	1024475	6	True				
ANR	1026136	Statement	","	3217:36:91428:91428	1024475	7	True				
ANR	1026137	Statement	iter	3217:38:91430:91433	1024475	8	True				
ANR	1026138	Statement	","	3217:42:91434:91434	1024475	9	True				
ANR	1026139	Statement	map	3217:44:91436:91438	1024475	10	True				
ANR	1026140	Statement	)	3217:47:91439:91439	1024475	11	True				
ANR	1026141	CompoundStatement		274:49:7764:7764	1024475	12					
ANR	1026142	Statement	eprintf	3218:5:91448:91454	1024475	0	True				
ANR	1026143	Statement	(	3218:13:91456:91456	1024475	1	True				
ANR	1026144	Statement	"""-- 0x%"""	3218:14:91457:91464	1024475	2	True				
ANR	1026145	Statement	PFMT64x	3218:22:91465:91471	1024475	3	True				
ANR	1026146	Statement	""" 0x%"""	3218:29:91472:91477	1024475	4	True				
ANR	1026147	Statement	PFMT64x	3218:35:91478:91484	1024475	5	True				
ANR	1026148	Statement	"""\\n"""	3218:42:91485:91488	1024475	6	True				
ANR	1026149	Statement	","	3218:46:91489:91489	1024475	7	True				
ANR	1026150	Statement	map	3218:48:91491:91493	1024475	8	True				
ANR	1026151	Statement	->	3218:51:91494:91495	1024475	9	True				
ANR	1026152	Statement	itv	3218:53:91496:91498	1024475	10	True				
ANR	1026153	Statement	.	3218:56:91499:91499	1024475	11	True				
ANR	1026154	Statement	addr	3218:57:91500:91503	1024475	12	True				
ANR	1026155	Statement	","	3218:61:91504:91504	1024475	13	True				
ANR	1026156	Statement	r_itv_end	3218:63:91506:91514	1024475	14	True				
ANR	1026157	Statement	(	3218:73:91516:91516	1024475	15	True				
ANR	1026158	Statement	map	3218:74:91517:91519	1024475	16	True				
ANR	1026159	Statement	->	3218:77:91520:91521	1024475	17	True				
ANR	1026160	Statement	itv	3218:79:91522:91524	1024475	18	True				
ANR	1026161	Statement	)	3218:82:91525:91525	1024475	19	True				
ANR	1026162	Statement	)	3218:83:91526:91526	1024475	20	True				
ANR	1026163	ExpressionStatement		3218:84:91527:91527	1024475	21	True				
ANR	1026164	ExpressionStatement	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 'w' )"	3219:5:91534:91604	1024475	22	True				
ANR	1026165	CallExpression	"r_core_anal_search ( core , map -> itv . addr , r_itv_end ( map -> itv ) , n , 'w' )"		1024475	0					
ANR	1026166	Callee	r_core_anal_search		1024475	0					
ANR	1026167	Identifier	r_core_anal_search		1024475	0					
ANR	1026168	ArgumentList	core		1024475	1					
ANR	1026169	Argument	core		1024475	0					
ANR	1026170	Identifier	core		1024475	0					
ANR	1026171	Argument	map -> itv . addr		1024475	1					
ANR	1026172	MemberAccess	map -> itv . addr		1024475	0					
ANR	1026173	PtrMemberAccess	map -> itv		1024475	0					
ANR	1026174	Identifier	map		1024475	0					
ANR	1026175	Identifier	itv		1024475	1					
ANR	1026176	Identifier	addr		1024475	1					
ANR	1026177	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1026178	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1026179	Callee	r_itv_end		1024475	0					
ANR	1026180	Identifier	r_itv_end		1024475	0					
ANR	1026181	ArgumentList	map -> itv		1024475	1					
ANR	1026182	Argument	map -> itv		1024475	0					
ANR	1026183	PtrMemberAccess	map -> itv		1024475	0					
ANR	1026184	Identifier	map		1024475	0					
ANR	1026185	Identifier	itv		1024475	1					
ANR	1026186	Argument	n		1024475	3					
ANR	1026187	Identifier	n		1024475	0					
ANR	1026188	Argument	'w'		1024475	4					
ANR	1026189	PrimaryExpression	'w'		1024475	0					
ANR	1026190	BreakStatement	break ;	3222:3:91620:91625	1024475	14	True				
ANR	1026191	Label	case ' ' :	3223:2:91629:91637	1024475	15	True				
ANR	1026192	Label	case 0 :	3224:2:91652:91658	1024475	16	True				
ANR	1026193	CompoundStatement		284:4:8021:8032	1024475	17					
ANR	1026194	IdentifierDeclStatement	RListIter * iter ;	3226:4:91677:91692	1024475	0	True				
ANR	1026195	IdentifierDecl	* iter		1024475	0					
ANR	1026196	IdentifierDeclType	RListIter *		1024475	0					
ANR	1026197	Identifier	iter		1024475	1					
ANR	1026198	IdentifierDeclStatement	RIOMap * map ;	3227:4:91698:91709	1024475	1	True				
ANR	1026199	IdentifierDecl	* map		1024475	0					
ANR	1026200	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1026201	Identifier	map		1024475	1					
ANR	1026202	Statement	r_list_foreach	3228:4:91715:91728	1024475	2	True				
ANR	1026203	Statement	(	3228:19:91730:91730	1024475	3	True				
ANR	1026204	Statement	param	3228:20:91731:91735	1024475	4	True				
ANR	1026205	Statement	.	3228:25:91736:91736	1024475	5	True				
ANR	1026206	Statement	boundaries	3228:26:91737:91746	1024475	6	True				
ANR	1026207	Statement	","	3228:36:91747:91747	1024475	7	True				
ANR	1026208	Statement	iter	3228:38:91749:91752	1024475	8	True				
ANR	1026209	Statement	","	3228:42:91753:91753	1024475	9	True				
ANR	1026210	Statement	map	3228:44:91755:91757	1024475	10	True				
ANR	1026211	Statement	)	3228:47:91758:91758	1024475	11	True				
ANR	1026212	CompoundStatement		287:5:8122:8152	1024475	12					
ANR	1026213	IdentifierDeclStatement	ut64 from = map -> itv . addr ;	3229:5:91767:91792	1024475	0	True				
ANR	1026214	IdentifierDecl	from = map -> itv . addr		1024475	0					
ANR	1026215	IdentifierDeclType	ut64		1024475	0					
ANR	1026216	Identifier	from		1024475	1					
ANR	1026217	AssignmentExpression	from = map -> itv . addr		1024475	2		=			
ANR	1026218	Identifier	from		1024475	0					
ANR	1026219	MemberAccess	map -> itv . addr		1024475	1					
ANR	1026220	PtrMemberAccess	map -> itv		1024475	0					
ANR	1026221	Identifier	map		1024475	0					
ANR	1026222	Identifier	itv		1024475	1					
ANR	1026223	Identifier	addr		1024475	1					
ANR	1026224	IdentifierDeclStatement	ut64 to = r_itv_end ( map -> itv ) ;	3230:5:91799:91829	1024475	1	True				
ANR	1026225	IdentifierDecl	to = r_itv_end ( map -> itv )		1024475	0					
ANR	1026226	IdentifierDeclType	ut64		1024475	0					
ANR	1026227	Identifier	to		1024475	1					
ANR	1026228	AssignmentExpression	to = r_itv_end ( map -> itv )		1024475	2		=			
ANR	1026229	Identifier	to		1024475	0					
ANR	1026230	CallExpression	r_itv_end ( map -> itv )		1024475	1					
ANR	1026231	Callee	r_itv_end		1024475	0					
ANR	1026232	Identifier	r_itv_end		1024475	0					
ANR	1026233	ArgumentList	map -> itv		1024475	1					
ANR	1026234	Argument	map -> itv		1024475	0					
ANR	1026235	PtrMemberAccess	map -> itv		1024475	0					
ANR	1026236	Identifier	map		1024475	0					
ANR	1026237	Identifier	itv		1024475	1					
ANR	1026238	IfStatement	if ( input [ param_offset - 1 ] == ' ' )		1024475	2					
ANR	1026239	Condition	input [ param_offset - 1 ] == ' '	3231:9:91840:91869	1024475	0	True				
ANR	1026240	EqualityExpression	input [ param_offset - 1 ] == ' '		1024475	0		==			
ANR	1026241	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1026242	Identifier	input		1024475	0					
ANR	1026243	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1026244	Identifier	param_offset		1024475	0					
ANR	1026245	PrimaryExpression	1		1024475	1					
ANR	1026246	PrimaryExpression	' '		1024475	1					
ANR	1026247	CompoundStatement		288:41:8195:8195	1024475	1					
ANR	1026248	ExpressionStatement	"r_core_anal_search ( core , from , to , r_num_math ( core -> num , input + 2 ) , 0 )"	3232:6:91880:91961	1024475	0	True				
ANR	1026249	CallExpression	"r_core_anal_search ( core , from , to , r_num_math ( core -> num , input + 2 ) , 0 )"		1024475	0					
ANR	1026250	Callee	r_core_anal_search		1024475	0					
ANR	1026251	Identifier	r_core_anal_search		1024475	0					
ANR	1026252	ArgumentList	core		1024475	1					
ANR	1026253	Argument	core		1024475	0					
ANR	1026254	Identifier	core		1024475	0					
ANR	1026255	Argument	from		1024475	1					
ANR	1026256	Identifier	from		1024475	0					
ANR	1026257	Argument	to		1024475	2					
ANR	1026258	Identifier	to		1024475	0					
ANR	1026259	Argument	"r_num_math ( core -> num , input + 2 )"		1024475	3					
ANR	1026260	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	0					
ANR	1026261	Callee	r_num_math		1024475	0					
ANR	1026262	Identifier	r_num_math		1024475	0					
ANR	1026263	ArgumentList	core -> num		1024475	1					
ANR	1026264	Argument	core -> num		1024475	0					
ANR	1026265	PtrMemberAccess	core -> num		1024475	0					
ANR	1026266	Identifier	core		1024475	0					
ANR	1026267	Identifier	num		1024475	1					
ANR	1026268	Argument	input + 2		1024475	1					
ANR	1026269	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026270	Identifier	input		1024475	0					
ANR	1026271	PrimaryExpression	2		1024475	1					
ANR	1026272	Argument	0		1024475	4					
ANR	1026273	PrimaryExpression	0		1024475	0					
ANR	1026274	ExpressionStatement	"do_ref_search ( core , r_num_math ( core -> num , input + 2 ) , from , to , & param )"	3234:6:91969:92042	1024475	1	True				
ANR	1026275	CallExpression	"do_ref_search ( core , r_num_math ( core -> num , input + 2 ) , from , to , & param )"		1024475	0					
ANR	1026276	Callee	do_ref_search		1024475	0					
ANR	1026277	Identifier	do_ref_search		1024475	0					
ANR	1026278	ArgumentList	core		1024475	1					
ANR	1026279	Argument	core		1024475	0					
ANR	1026280	Identifier	core		1024475	0					
ANR	1026281	Argument	"r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1026282	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	0					
ANR	1026283	Callee	r_num_math		1024475	0					
ANR	1026284	Identifier	r_num_math		1024475	0					
ANR	1026285	ArgumentList	core -> num		1024475	1					
ANR	1026286	Argument	core -> num		1024475	0					
ANR	1026287	PtrMemberAccess	core -> num		1024475	0					
ANR	1026288	Identifier	core		1024475	0					
ANR	1026289	Identifier	num		1024475	1					
ANR	1026290	Argument	input + 2		1024475	1					
ANR	1026291	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026292	Identifier	input		1024475	0					
ANR	1026293	PrimaryExpression	2		1024475	1					
ANR	1026294	Argument	from		1024475	2					
ANR	1026295	Identifier	from		1024475	0					
ANR	1026296	Argument	to		1024475	3					
ANR	1026297	Identifier	to		1024475	0					
ANR	1026298	Argument	& param		1024475	4					
ANR	1026299	UnaryOperationExpression	& param		1024475	0					
ANR	1026300	UnaryOperator	&		1024475	0					
ANR	1026301	Identifier	param		1024475	1					
ANR	1026302	ElseStatement	else		1024475	0					
ANR	1026303	CompoundStatement		292:12:8379:8379	1024475	0					
ANR	1026304	ExpressionStatement	"r_core_anal_search ( core , from , to , core -> offset , 0 )"	3236:6:92064:92116	1024475	0	True				
ANR	1026305	CallExpression	"r_core_anal_search ( core , from , to , core -> offset , 0 )"		1024475	0					
ANR	1026306	Callee	r_core_anal_search		1024475	0					
ANR	1026307	Identifier	r_core_anal_search		1024475	0					
ANR	1026308	ArgumentList	core		1024475	1					
ANR	1026309	Argument	core		1024475	0					
ANR	1026310	Identifier	core		1024475	0					
ANR	1026311	Argument	from		1024475	1					
ANR	1026312	Identifier	from		1024475	0					
ANR	1026313	Argument	to		1024475	2					
ANR	1026314	Identifier	to		1024475	0					
ANR	1026315	Argument	core -> offset		1024475	3					
ANR	1026316	PtrMemberAccess	core -> offset		1024475	0					
ANR	1026317	Identifier	core		1024475	0					
ANR	1026318	Identifier	offset		1024475	1					
ANR	1026319	Argument	0		1024475	4					
ANR	1026320	PrimaryExpression	0		1024475	0					
ANR	1026321	ExpressionStatement	"do_ref_search ( core , core -> offset , from , to , & param )"	3237:6:92124:92176	1024475	1	True				
ANR	1026322	CallExpression	"do_ref_search ( core , core -> offset , from , to , & param )"		1024475	0					
ANR	1026323	Callee	do_ref_search		1024475	0					
ANR	1026324	Identifier	do_ref_search		1024475	0					
ANR	1026325	ArgumentList	core		1024475	1					
ANR	1026326	Argument	core		1024475	0					
ANR	1026327	Identifier	core		1024475	0					
ANR	1026328	Argument	core -> offset		1024475	1					
ANR	1026329	PtrMemberAccess	core -> offset		1024475	0					
ANR	1026330	Identifier	core		1024475	0					
ANR	1026331	Identifier	offset		1024475	1					
ANR	1026332	Argument	from		1024475	2					
ANR	1026333	Identifier	from		1024475	0					
ANR	1026334	Argument	to		1024475	3					
ANR	1026335	Identifier	to		1024475	0					
ANR	1026336	Argument	& param		1024475	4					
ANR	1026337	UnaryOperationExpression	& param		1024475	0					
ANR	1026338	UnaryOperator	&		1024475	0					
ANR	1026339	Identifier	param		1024475	1					
ANR	1026340	IfStatement	if ( r_cons_is_breaked ( ) )		1024475	3					
ANR	1026341	Condition	r_cons_is_breaked ( )	3239:9:92194:92213	1024475	0	True				
ANR	1026342	CallExpression	r_cons_is_breaked ( )		1024475	0					
ANR	1026343	Callee	r_cons_is_breaked		1024475	0					
ANR	1026344	Identifier	r_cons_is_breaked		1024475	0					
ANR	1026345	ArgumentList			1024475	1					
ANR	1026346	CompoundStatement		296:31:8539:8539	1024475	1					
ANR	1026347	BreakStatement	break ;	3240:6:92224:92229	1024475	0	True				
ANR	1026348	BreakStatement	break ;	3244:3:92252:92257	1024475	18	True				
ANR	1026349	Label	case '?' :	3245:2:92261:92269	1024475	19	True				
ANR	1026350	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_r )"	3246:3:92274:92314	1024475	20	True				
ANR	1026351	CallExpression	"r_core_cmd_help ( core , help_msg_slash_r )"		1024475	0					
ANR	1026352	Callee	r_core_cmd_help		1024475	0					
ANR	1026353	Identifier	r_core_cmd_help		1024475	0					
ANR	1026354	ArgumentList	core		1024475	1					
ANR	1026355	Argument	core		1024475	0					
ANR	1026356	Identifier	core		1024475	0					
ANR	1026357	Argument	help_msg_slash_r		1024475	1					
ANR	1026358	Identifier	help_msg_slash_r		1024475	0					
ANR	1026359	BreakStatement	break ;	3247:3:92319:92324	1024475	21	True				
ANR	1026360	BreakStatement	break ;	3250:2:92336:92341	1024475	18	True				
ANR	1026361	Label	case 'a' :	3251:1:92344:92352	1024475	19	True				
ANR	1026362	IfStatement	if ( input [ 1 ] == '?' )		1024475	20					
ANR	1026363	Condition	input [ 1 ] == '?'	3252:6:92368:92382	1024475	0	True				
ANR	1026364	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1026365	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026366	Identifier	input		1024475	0					
ANR	1026367	PrimaryExpression	1		1024475	1					
ANR	1026368	PrimaryExpression	'?'		1024475	1					
ANR	1026369	CompoundStatement		309:23:8708:8708	1024475	1					
ANR	1026370	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_a )"	3253:3:92390:92430	1024475	0	True				
ANR	1026371	CallExpression	"r_core_cmd_help ( core , help_msg_slash_a )"		1024475	0					
ANR	1026372	Callee	r_core_cmd_help		1024475	0					
ANR	1026373	Identifier	r_core_cmd_help		1024475	0					
ANR	1026374	ArgumentList	core		1024475	1					
ANR	1026375	Argument	core		1024475	0					
ANR	1026376	Identifier	core		1024475	0					
ANR	1026377	Argument	help_msg_slash_a		1024475	1					
ANR	1026378	Identifier	help_msg_slash_a		1024475	0					
ANR	1026379	ElseStatement	else		1024475	0					
ANR	1026380	IfStatement	if ( input [ 1 ] == 'd' )		1024475	0					
ANR	1026381	Condition	input [ 1 ] == 'd'	3254:13:92445:92459	1024475	0	True				
ANR	1026382	EqualityExpression	input [ 1 ] == 'd'		1024475	0		==			
ANR	1026383	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026384	Identifier	input		1024475	0					
ANR	1026385	PrimaryExpression	1		1024475	1					
ANR	1026386	PrimaryExpression	'd'		1024475	1					
ANR	1026387	CompoundStatement		311:30:8785:8785	1024475	1					
ANR	1026388	ExpressionStatement	dosearch = 0	3255:3:92475:92487	1024475	0	True				
ANR	1026389	AssignmentExpression	dosearch = 0		1024475	0		=			
ANR	1026390	Identifier	dosearch		1024475	0					
ANR	1026391	PrimaryExpression	0		1024475	1					
ANR	1026392	ExpressionStatement	"do_asm_search ( core , & param , input + 1 , 0 , search_itv )"	3256:3:92492:92546	1024475	1	True				
ANR	1026393	CallExpression	"do_asm_search ( core , & param , input + 1 , 0 , search_itv )"		1024475	0					
ANR	1026394	Callee	do_asm_search		1024475	0					
ANR	1026395	Identifier	do_asm_search		1024475	0					
ANR	1026396	ArgumentList	core		1024475	1					
ANR	1026397	Argument	core		1024475	0					
ANR	1026398	Identifier	core		1024475	0					
ANR	1026399	Argument	& param		1024475	1					
ANR	1026400	UnaryOperationExpression	& param		1024475	0					
ANR	1026401	UnaryOperator	&		1024475	0					
ANR	1026402	Identifier	param		1024475	1					
ANR	1026403	Argument	input + 1		1024475	2					
ANR	1026404	AdditiveExpression	input + 1		1024475	0		+			
ANR	1026405	Identifier	input		1024475	0					
ANR	1026406	PrimaryExpression	1		1024475	1					
ANR	1026407	Argument	0		1024475	3					
ANR	1026408	PrimaryExpression	0		1024475	0					
ANR	1026409	Argument	search_itv		1024475	4					
ANR	1026410	Identifier	search_itv		1024475	0					
ANR	1026411	ElseStatement	else		1024475	0					
ANR	1026412	IfStatement	if ( input [ 1 ] == 'e' )		1024475	0					
ANR	1026413	Condition	input [ 1 ] == 'e'	3257:13:92561:92575	1024475	0	True				
ANR	1026414	EqualityExpression	input [ 1 ] == 'e'		1024475	0		==			
ANR	1026415	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026416	Identifier	input		1024475	0					
ANR	1026417	PrimaryExpression	1		1024475	1					
ANR	1026418	PrimaryExpression	'e'		1024475	1					
ANR	1026419	CompoundStatement		314:30:8901:8901	1024475	1					
ANR	1026420	ExpressionStatement	dosearch = 0	3258:3:92591:92603	1024475	0	True				
ANR	1026421	AssignmentExpression	dosearch = 0		1024475	0		=			
ANR	1026422	Identifier	dosearch		1024475	0					
ANR	1026423	PrimaryExpression	0		1024475	1					
ANR	1026424	ExpressionStatement	"do_asm_search ( core , & param , input + 2 , 'e' , search_itv )"	3259:3:92608:92664	1024475	1	True				
ANR	1026425	CallExpression	"do_asm_search ( core , & param , input + 2 , 'e' , search_itv )"		1024475	0					
ANR	1026426	Callee	do_asm_search		1024475	0					
ANR	1026427	Identifier	do_asm_search		1024475	0					
ANR	1026428	ArgumentList	core		1024475	1					
ANR	1026429	Argument	core		1024475	0					
ANR	1026430	Identifier	core		1024475	0					
ANR	1026431	Argument	& param		1024475	1					
ANR	1026432	UnaryOperationExpression	& param		1024475	0					
ANR	1026433	UnaryOperator	&		1024475	0					
ANR	1026434	Identifier	param		1024475	1					
ANR	1026435	Argument	input + 2		1024475	2					
ANR	1026436	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026437	Identifier	input		1024475	0					
ANR	1026438	PrimaryExpression	2		1024475	1					
ANR	1026439	Argument	'e'		1024475	3					
ANR	1026440	PrimaryExpression	'e'		1024475	0					
ANR	1026441	Argument	search_itv		1024475	4					
ANR	1026442	Identifier	search_itv		1024475	0					
ANR	1026443	ElseStatement	else		1024475	0					
ANR	1026444	IfStatement	if ( input [ 1 ] == 'c' )		1024475	0					
ANR	1026445	Condition	input [ 1 ] == 'c'	3260:13:92679:92693	1024475	0	True				
ANR	1026446	EqualityExpression	input [ 1 ] == 'c'		1024475	0		==			
ANR	1026447	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026448	Identifier	input		1024475	0					
ANR	1026449	PrimaryExpression	1		1024475	1					
ANR	1026450	PrimaryExpression	'c'		1024475	1					
ANR	1026451	CompoundStatement		317:30:9019:9019	1024475	1					
ANR	1026452	ExpressionStatement	dosearch = 0	3261:3:92710:92722	1024475	0	True				
ANR	1026453	AssignmentExpression	dosearch = 0		1024475	0		=			
ANR	1026454	Identifier	dosearch		1024475	0					
ANR	1026455	PrimaryExpression	0		1024475	1					
ANR	1026456	ExpressionStatement	"do_asm_search ( core , & param , input + 2 , 'c' , search_itv )"	3262:3:92727:92783	1024475	1	True				
ANR	1026457	CallExpression	"do_asm_search ( core , & param , input + 2 , 'c' , search_itv )"		1024475	0					
ANR	1026458	Callee	do_asm_search		1024475	0					
ANR	1026459	Identifier	do_asm_search		1024475	0					
ANR	1026460	ArgumentList	core		1024475	1					
ANR	1026461	Argument	core		1024475	0					
ANR	1026462	Identifier	core		1024475	0					
ANR	1026463	Argument	& param		1024475	1					
ANR	1026464	UnaryOperationExpression	& param		1024475	0					
ANR	1026465	UnaryOperator	&		1024475	0					
ANR	1026466	Identifier	param		1024475	1					
ANR	1026467	Argument	input + 2		1024475	2					
ANR	1026468	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026469	Identifier	input		1024475	0					
ANR	1026470	PrimaryExpression	2		1024475	1					
ANR	1026471	Argument	'c'		1024475	3					
ANR	1026472	PrimaryExpression	'c'		1024475	0					
ANR	1026473	Argument	search_itv		1024475	4					
ANR	1026474	Identifier	search_itv		1024475	0					
ANR	1026475	ElseStatement	else		1024475	0					
ANR	1026476	IfStatement	if ( input [ 1 ] == 'o' )		1024475	0					
ANR	1026477	Condition	input [ 1 ] == 'o'	3263:13:92798:92812	1024475	0	True				
ANR	1026478	EqualityExpression	input [ 1 ] == 'o'		1024475	0		==			
ANR	1026479	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026480	Identifier	input		1024475	0					
ANR	1026481	PrimaryExpression	1		1024475	1					
ANR	1026482	PrimaryExpression	'o'		1024475	1					
ANR	1026483	CompoundStatement		320:30:9138:9138	1024475	1					
ANR	1026484	ExpressionStatement	dosearch = 0	3264:3:92829:92841	1024475	0	True				
ANR	1026485	AssignmentExpression	dosearch = 0		1024475	0		=			
ANR	1026486	Identifier	dosearch		1024475	0					
ANR	1026487	PrimaryExpression	0		1024475	1					
ANR	1026488	ExpressionStatement	"do_asm_search ( core , & param , input + 2 , 'o' , search_itv )"	3265:3:92846:92902	1024475	1	True				
ANR	1026489	CallExpression	"do_asm_search ( core , & param , input + 2 , 'o' , search_itv )"		1024475	0					
ANR	1026490	Callee	do_asm_search		1024475	0					
ANR	1026491	Identifier	do_asm_search		1024475	0					
ANR	1026492	ArgumentList	core		1024475	1					
ANR	1026493	Argument	core		1024475	0					
ANR	1026494	Identifier	core		1024475	0					
ANR	1026495	Argument	& param		1024475	1					
ANR	1026496	UnaryOperationExpression	& param		1024475	0					
ANR	1026497	UnaryOperator	&		1024475	0					
ANR	1026498	Identifier	param		1024475	1					
ANR	1026499	Argument	input + 2		1024475	2					
ANR	1026500	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026501	Identifier	input		1024475	0					
ANR	1026502	PrimaryExpression	2		1024475	1					
ANR	1026503	Argument	'o'		1024475	3					
ANR	1026504	PrimaryExpression	'o'		1024475	0					
ANR	1026505	Argument	search_itv		1024475	4					
ANR	1026506	Identifier	search_itv		1024475	0					
ANR	1026507	ElseStatement	else		1024475	0					
ANR	1026508	IfStatement	if ( input [ 1 ] == 'a' )		1024475	0					
ANR	1026509	Condition	input [ 1 ] == 'a'	3266:13:92917:92931	1024475	0	True				
ANR	1026510	EqualityExpression	input [ 1 ] == 'a'		1024475	0		==			
ANR	1026511	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026512	Identifier	input		1024475	0					
ANR	1026513	PrimaryExpression	1		1024475	1					
ANR	1026514	PrimaryExpression	'a'		1024475	1					
ANR	1026515	CompoundStatement		323:30:9257:9257	1024475	1					
ANR	1026516	ExpressionStatement	dosearch = 0	3267:3:92948:92960	1024475	0	True				
ANR	1026517	AssignmentExpression	dosearch = 0		1024475	0		=			
ANR	1026518	Identifier	dosearch		1024475	0					
ANR	1026519	PrimaryExpression	0		1024475	1					
ANR	1026520	ExpressionStatement	"do_asm_search ( core , & param , input + 2 , 'a' , search_itv )"	3268:3:92965:93021	1024475	1	True				
ANR	1026521	CallExpression	"do_asm_search ( core , & param , input + 2 , 'a' , search_itv )"		1024475	0					
ANR	1026522	Callee	do_asm_search		1024475	0					
ANR	1026523	Identifier	do_asm_search		1024475	0					
ANR	1026524	ArgumentList	core		1024475	1					
ANR	1026525	Argument	core		1024475	0					
ANR	1026526	Identifier	core		1024475	0					
ANR	1026527	Argument	& param		1024475	1					
ANR	1026528	UnaryOperationExpression	& param		1024475	0					
ANR	1026529	UnaryOperator	&		1024475	0					
ANR	1026530	Identifier	param		1024475	1					
ANR	1026531	Argument	input + 2		1024475	2					
ANR	1026532	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026533	Identifier	input		1024475	0					
ANR	1026534	PrimaryExpression	2		1024475	1					
ANR	1026535	Argument	'a'		1024475	3					
ANR	1026536	PrimaryExpression	'a'		1024475	0					
ANR	1026537	Argument	search_itv		1024475	4					
ANR	1026538	Identifier	search_itv		1024475	0					
ANR	1026539	ElseStatement	else		1024475	0					
ANR	1026540	IfStatement	if ( input [ 1 ] == 'i' )		1024475	0					
ANR	1026541	Condition	input [ 1 ] == 'i'	3269:13:93036:93050	1024475	0	True				
ANR	1026542	EqualityExpression	input [ 1 ] == 'i'		1024475	0		==			
ANR	1026543	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026544	Identifier	input		1024475	0					
ANR	1026545	PrimaryExpression	1		1024475	1					
ANR	1026546	PrimaryExpression	'i'		1024475	1					
ANR	1026547	CompoundStatement		326:30:9376:9376	1024475	1					
ANR	1026548	ExpressionStatement	"do_asm_search ( core , & param , input + 2 , 'i' , search_itv )"	3270:3:93067:93123	1024475	0	True				
ANR	1026549	CallExpression	"do_asm_search ( core , & param , input + 2 , 'i' , search_itv )"		1024475	0					
ANR	1026550	Callee	do_asm_search		1024475	0					
ANR	1026551	Identifier	do_asm_search		1024475	0					
ANR	1026552	ArgumentList	core		1024475	1					
ANR	1026553	Argument	core		1024475	0					
ANR	1026554	Identifier	core		1024475	0					
ANR	1026555	Argument	& param		1024475	1					
ANR	1026556	UnaryOperationExpression	& param		1024475	0					
ANR	1026557	UnaryOperator	&		1024475	0					
ANR	1026558	Identifier	param		1024475	1					
ANR	1026559	Argument	input + 2		1024475	2					
ANR	1026560	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026561	Identifier	input		1024475	0					
ANR	1026562	PrimaryExpression	2		1024475	1					
ANR	1026563	Argument	'i'		1024475	3					
ANR	1026564	PrimaryExpression	'i'		1024475	0					
ANR	1026565	Argument	search_itv		1024475	4					
ANR	1026566	Identifier	search_itv		1024475	0					
ANR	1026567	ElseStatement	else		1024475	0					
ANR	1026568	IfStatement	if ( input [ 1 ] == '1' )		1024475	0					
ANR	1026569	Condition	input [ 1 ] == '1'	3271:13:93138:93152	1024475	0	True				
ANR	1026570	EqualityExpression	input [ 1 ] == '1'		1024475	0		==			
ANR	1026571	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026572	Identifier	input		1024475	0					
ANR	1026573	PrimaryExpression	1		1024475	1					
ANR	1026574	PrimaryExpression	'1'		1024475	1					
ANR	1026575	CompoundStatement		328:30:9478:9478	1024475	1					
ANR	1026576	ExpressionStatement	"__core_cmd_search_asm_byteswap ( core , ( int ) r_num_math ( core -> num , input + 2 ) )"	3272:3:93168:93245	1024475	0	True				
ANR	1026577	CallExpression	"__core_cmd_search_asm_byteswap ( core , ( int ) r_num_math ( core -> num , input + 2 ) )"		1024475	0					
ANR	1026578	Callee	__core_cmd_search_asm_byteswap		1024475	0					
ANR	1026579	Identifier	__core_cmd_search_asm_byteswap		1024475	0					
ANR	1026580	ArgumentList	core		1024475	1					
ANR	1026581	Argument	core		1024475	0					
ANR	1026582	Identifier	core		1024475	0					
ANR	1026583	Argument	"( int ) r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1026584	CastExpression	"( int ) r_num_math ( core -> num , input + 2 )"		1024475	0					
ANR	1026585	CastTarget	int		1024475	0					
ANR	1026586	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1026587	Callee	r_num_math		1024475	0					
ANR	1026588	Identifier	r_num_math		1024475	0					
ANR	1026589	ArgumentList	core -> num		1024475	1					
ANR	1026590	Argument	core -> num		1024475	0					
ANR	1026591	PtrMemberAccess	core -> num		1024475	0					
ANR	1026592	Identifier	core		1024475	0					
ANR	1026593	Identifier	num		1024475	1					
ANR	1026594	Argument	input + 2		1024475	1					
ANR	1026595	AdditiveExpression	input + 2		1024475	0		+			
ANR	1026596	Identifier	input		1024475	0					
ANR	1026597	PrimaryExpression	2		1024475	1					
ANR	1026598	ElseStatement	else		1024475	0					
ANR	1026599	IfStatement	if ( input [ 1 ] == 'I' )		1024475	0					
ANR	1026600	Condition	input [ 1 ] == 'I'	3273:13:93260:93274	1024475	0	True				
ANR	1026601	EqualityExpression	input [ 1 ] == 'I'		1024475	0		==			
ANR	1026602	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026603	Identifier	input		1024475	0					
ANR	1026604	PrimaryExpression	1		1024475	1					
ANR	1026605	PrimaryExpression	'I'		1024475	1					
ANR	1026606	CompoundStatement		330:30:9600:9600	1024475	1					
ANR	1026607	ExpressionStatement	"__core_cmd_search_asm_infinite ( core , r_str_trim_ro ( input + 1 ) )"	3274:3:93302:93366	1024475	0	True				
ANR	1026608	CallExpression	"__core_cmd_search_asm_infinite ( core , r_str_trim_ro ( input + 1 ) )"		1024475	0					
ANR	1026609	Callee	__core_cmd_search_asm_infinite		1024475	0					
ANR	1026610	Identifier	__core_cmd_search_asm_infinite		1024475	0					
ANR	1026611	ArgumentList	core		1024475	1					
ANR	1026612	Argument	core		1024475	0					
ANR	1026613	Identifier	core		1024475	0					
ANR	1026614	Argument	r_str_trim_ro ( input + 1 )		1024475	1					
ANR	1026615	CallExpression	r_str_trim_ro ( input + 1 )		1024475	0					
ANR	1026616	Callee	r_str_trim_ro		1024475	0					
ANR	1026617	Identifier	r_str_trim_ro		1024475	0					
ANR	1026618	ArgumentList	input + 1		1024475	1					
ANR	1026619	Argument	input + 1		1024475	0					
ANR	1026620	AdditiveExpression	input + 1		1024475	0		+			
ANR	1026621	Identifier	input		1024475	0					
ANR	1026622	PrimaryExpression	1		1024475	1					
ANR	1026623	ElseStatement	else		1024475	0					
ANR	1026624	IfStatement	if ( input [ 1 ] == ' ' )		1024475	0					
ANR	1026625	Condition	input [ 1 ] == ' '	3275:13:93381:93395	1024475	0	True				
ANR	1026626	EqualityExpression	input [ 1 ] == ' '		1024475	0		==			
ANR	1026627	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026628	Identifier	input		1024475	0					
ANR	1026629	PrimaryExpression	1		1024475	1					
ANR	1026630	PrimaryExpression	' '		1024475	1					
ANR	1026631	CompoundStatement		332:30:9721:9721	1024475	1					
ANR	1026632	IfStatement	if ( input [ param_offset - 1 ] )		1024475	0					
ANR	1026633	Condition	input [ param_offset - 1 ]	3276:7:93407:93429	1024475	0	True				
ANR	1026634	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1026635	Identifier	input		1024475	0					
ANR	1026636	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1026637	Identifier	param_offset		1024475	0					
ANR	1026638	PrimaryExpression	1		1024475	1					
ANR	1026639	CompoundStatement		334:4:9761:9819	1024475	1					
ANR	1026640	IdentifierDeclStatement	"char * kwd = r_core_asm_search ( core , input + param_offset ) ;"	3277:4:93438:93496	1024475	0	True				
ANR	1026641	IdentifierDecl	"* kwd = r_core_asm_search ( core , input + param_offset )"		1024475	0					
ANR	1026642	IdentifierDeclType	char *		1024475	0					
ANR	1026643	Identifier	kwd		1024475	1					
ANR	1026644	AssignmentExpression	"* kwd = r_core_asm_search ( core , input + param_offset )"		1024475	2		=			
ANR	1026645	Identifier	kwd		1024475	0					
ANR	1026646	CallExpression	"r_core_asm_search ( core , input + param_offset )"		1024475	1					
ANR	1026647	Callee	r_core_asm_search		1024475	0					
ANR	1026648	Identifier	r_core_asm_search		1024475	0					
ANR	1026649	ArgumentList	core		1024475	1					
ANR	1026650	Argument	core		1024475	0					
ANR	1026651	Identifier	core		1024475	0					
ANR	1026652	Argument	input + param_offset		1024475	1					
ANR	1026653	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1026654	Identifier	input		1024475	0					
ANR	1026655	Identifier	param_offset		1024475	1					
ANR	1026656	IfStatement	if ( ! kwd )		1024475	1					
ANR	1026657	Condition	! kwd	3278:8:93506:93509	1024475	0	True				
ANR	1026658	UnaryOperationExpression	! kwd		1024475	0					
ANR	1026659	UnaryOperator	!		1024475	0					
ANR	1026660	Identifier	kwd		1024475	1					
ANR	1026661	CompoundStatement		335:14:9835:9835	1024475	1					
ANR	1026662	ExpressionStatement	ret = false	3279:5:93519:93530	1024475	0	True				
ANR	1026663	AssignmentExpression	ret = false		1024475	0		=			
ANR	1026664	Identifier	ret		1024475	0					
ANR	1026665	Identifier	false		1024475	1					
ANR	1026666	GotoStatement	goto beach ;	3280:5:93537:93547	1024475	1	True				
ANR	1026667	Identifier	beach		1024475	0					
ANR	1026668	ExpressionStatement	dosearch = true	3282:4:93559:93574	1024475	2	True				
ANR	1026669	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1026670	Identifier	dosearch		1024475	0					
ANR	1026671	Identifier	true		1024475	1					
ANR	1026672	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	3283:4:93580:93627	1024475	3	True				
ANR	1026673	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1024475	0					
ANR	1026674	Callee	r_search_reset		1024475	0					
ANR	1026675	Identifier	r_search_reset		1024475	0					
ANR	1026676	ArgumentList	core -> search		1024475	1					
ANR	1026677	Argument	core -> search		1024475	0					
ANR	1026678	PtrMemberAccess	core -> search		1024475	0					
ANR	1026679	Identifier	core		1024475	0					
ANR	1026680	Identifier	search		1024475	1					
ANR	1026681	Argument	R_SEARCH_KEYWORD		1024475	1					
ANR	1026682	Identifier	R_SEARCH_KEYWORD		1024475	0					
ANR	1026683	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3284:4:93633:93731	1024475	4	True				
ANR	1026684	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1026685	Callee	r_search_set_distance		1024475	0					
ANR	1026686	Identifier	r_search_set_distance		1024475	0					
ANR	1026687	ArgumentList	core -> search		1024475	1					
ANR	1026688	Argument	core -> search		1024475	0					
ANR	1026689	PtrMemberAccess	core -> search		1024475	0					
ANR	1026690	Identifier	core		1024475	0					
ANR	1026691	Identifier	search		1024475	1					
ANR	1026692	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1026693	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1026694	CastTarget	int		1024475	0					
ANR	1026695	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1026696	Callee	r_config_get_i		1024475	0					
ANR	1026697	Identifier	r_config_get_i		1024475	0					
ANR	1026698	ArgumentList	core -> config		1024475	1					
ANR	1026699	Argument	core -> config		1024475	0					
ANR	1026700	PtrMemberAccess	core -> config		1024475	0					
ANR	1026701	Identifier	core		1024475	0					
ANR	1026702	Identifier	config		1024475	1					
ANR	1026703	Argument	"""search.distance"""		1024475	1					
ANR	1026704	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1026705	ExpressionStatement	"r_search_kw_add ( core -> search , r_search_keyword_new_hexmask ( kwd , NULL ) )"	3286:4:93737:93815	1024475	5	True				
ANR	1026706	CallExpression	"r_search_kw_add ( core -> search , r_search_keyword_new_hexmask ( kwd , NULL ) )"		1024475	0					
ANR	1026707	Callee	r_search_kw_add		1024475	0					
ANR	1026708	Identifier	r_search_kw_add		1024475	0					
ANR	1026709	ArgumentList	core -> search		1024475	1					
ANR	1026710	Argument	core -> search		1024475	0					
ANR	1026711	PtrMemberAccess	core -> search		1024475	0					
ANR	1026712	Identifier	core		1024475	0					
ANR	1026713	Identifier	search		1024475	1					
ANR	1026714	Argument	"r_search_keyword_new_hexmask ( kwd , NULL )"		1024475	1					
ANR	1026715	CallExpression	"r_search_keyword_new_hexmask ( kwd , NULL )"		1024475	0					
ANR	1026716	Callee	r_search_keyword_new_hexmask		1024475	0					
ANR	1026717	Identifier	r_search_keyword_new_hexmask		1024475	0					
ANR	1026718	ArgumentList	kwd		1024475	1					
ANR	1026719	Argument	kwd		1024475	0					
ANR	1026720	Identifier	kwd		1024475	0					
ANR	1026721	Argument	NULL		1024475	1					
ANR	1026722	Identifier	NULL		1024475	0					
ANR	1026723	ExpressionStatement	free ( kwd )	3288:4:93821:93831	1024475	6	True				
ANR	1026724	CallExpression	free ( kwd )		1024475	0					
ANR	1026725	Callee	free		1024475	0					
ANR	1026726	Identifier	free		1024475	0					
ANR	1026727	ArgumentList	kwd		1024475	1					
ANR	1026728	Argument	kwd		1024475	0					
ANR	1026729	Identifier	kwd		1024475	0					
ANR	1026730	ElseStatement	else		1024475	0					
ANR	1026731	IfStatement	if ( input [ 1 ] == 's' )		1024475	0					
ANR	1026732	Condition	input [ 1 ] == 's'	3290:13:93851:93865	1024475	0	True				
ANR	1026733	EqualityExpression	input [ 1 ] == 's'		1024475	0		==			
ANR	1026734	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026735	Identifier	input		1024475	0					
ANR	1026736	PrimaryExpression	1		1024475	1					
ANR	1026737	PrimaryExpression	's'		1024475	1					
ANR	1026738	CompoundStatement		347:30:10191:10191	1024475	1					
ANR	1026739	IfStatement	if ( input [ 2 ] == 'l' )		1024475	0					
ANR	1026740	Condition	input [ 2 ] == 'l'	3291:7:93877:93891	1024475	0	True				
ANR	1026741	EqualityExpression	input [ 2 ] == 'l'		1024475	0		==			
ANR	1026742	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1026743	Identifier	input		1024475	0					
ANR	1026744	PrimaryExpression	2		1024475	1					
ANR	1026745	PrimaryExpression	'l'		1024475	1					
ANR	1026746	CompoundStatement		348:24:10217:10217	1024475	1					
ANR	1026747	ExpressionStatement	"r_core_cmd0 ( core , ""asl"" )"	3292:4:93909:93934	1024475	0	True				
ANR	1026748	CallExpression	"r_core_cmd0 ( core , ""asl"" )"		1024475	0					
ANR	1026749	Callee	r_core_cmd0		1024475	0					
ANR	1026750	Identifier	r_core_cmd0		1024475	0					
ANR	1026751	ArgumentList	core		1024475	1					
ANR	1026752	Argument	core		1024475	0					
ANR	1026753	Identifier	core		1024475	0					
ANR	1026754	Argument	"""asl"""		1024475	1					
ANR	1026755	PrimaryExpression	"""asl"""		1024475	0					
ANR	1026756	ElseStatement	else		1024475	0					
ANR	1026757	CompoundStatement		350:10:10269:10269	1024475	0					
ANR	1026758	ExpressionStatement	"do_syscall_search ( core , & param )"	3294:4:93960:93992	1024475	0	True				
ANR	1026759	CallExpression	"do_syscall_search ( core , & param )"		1024475	0					
ANR	1026760	Callee	do_syscall_search		1024475	0					
ANR	1026761	Identifier	do_syscall_search		1024475	0					
ANR	1026762	ArgumentList	core		1024475	1					
ANR	1026763	Argument	core		1024475	0					
ANR	1026764	Identifier	core		1024475	0					
ANR	1026765	Argument	& param		1024475	1					
ANR	1026766	UnaryOperationExpression	& param		1024475	0					
ANR	1026767	UnaryOperator	&		1024475	0					
ANR	1026768	Identifier	param		1024475	1					
ANR	1026769	ExpressionStatement	dosearch = false	3296:3:94002:94018	1024475	1	True				
ANR	1026770	AssignmentExpression	dosearch = false		1024475	0		=			
ANR	1026771	Identifier	dosearch		1024475	0					
ANR	1026772	Identifier	false		1024475	1					
ANR	1026773	ElseStatement	else		1024475	0					
ANR	1026774	CompoundStatement		354:9:10352:10352	1024475	0					
ANR	1026775	ExpressionStatement	"dosearch = do_anal_search ( core , & param , input + 1 )"	3298:3:94034:94085	1024475	0	True				
ANR	1026776	AssignmentExpression	"dosearch = do_anal_search ( core , & param , input + 1 )"		1024475	0		=			
ANR	1026777	Identifier	dosearch		1024475	0					
ANR	1026778	CallExpression	"do_anal_search ( core , & param , input + 1 )"		1024475	1					
ANR	1026779	Callee	do_anal_search		1024475	0					
ANR	1026780	Identifier	do_anal_search		1024475	0					
ANR	1026781	ArgumentList	core		1024475	1					
ANR	1026782	Argument	core		1024475	0					
ANR	1026783	Identifier	core		1024475	0					
ANR	1026784	Argument	& param		1024475	1					
ANR	1026785	UnaryOperationExpression	& param		1024475	0					
ANR	1026786	UnaryOperator	&		1024475	0					
ANR	1026787	Identifier	param		1024475	1					
ANR	1026788	Argument	input + 1		1024475	2					
ANR	1026789	AdditiveExpression	input + 1		1024475	0		+			
ANR	1026790	Identifier	input		1024475	0					
ANR	1026791	PrimaryExpression	1		1024475	1					
ANR	1026792	BreakStatement	break ;	3300:2:94093:94098	1024475	21	True				
ANR	1026793	Label	case 'c' :	3301:1:94101:94109	1024475	22	True				
ANR	1026794	CompoundStatement		358:11:10434:10434	1024475	23					
ANR	1026795	ExpressionStatement	dosearch = true	3302:2:94123:94138	1024475	0	True				
ANR	1026796	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1026797	Identifier	dosearch		1024475	0					
ANR	1026798	Identifier	true		1024475	1					
ANR	1026799	ExpressionStatement	param . crypto_search = true	3303:2:94142:94168	1024475	1	True				
ANR	1026800	AssignmentExpression	param . crypto_search = true		1024475	0		=			
ANR	1026801	MemberAccess	param . crypto_search		1024475	0					
ANR	1026802	Identifier	param		1024475	0					
ANR	1026803	Identifier	crypto_search		1024475	1					
ANR	1026804	Identifier	true		1024475	1					
ANR	1026805	SwitchStatement	switch ( input [ 1 ] )		1024475	2					
ANR	1026806	Condition	input [ 1 ]	3304:10:94180:94187	1024475	0	True				
ANR	1026807	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1026808	Identifier	input		1024475	0					
ANR	1026809	PrimaryExpression	1		1024475	1					
ANR	1026810	CompoundStatement		361:20:10513:10513	1024475	1					
ANR	1026811	Label	case 'c' :	3305:2:94194:94202	1024475	0	True				
ANR	1026812	CompoundStatement		379:4:11194:11213	1024475	1					
ANR	1026813	ExpressionStatement	ret = false	3307:4:94222:94233	1024475	0	True				
ANR	1026814	AssignmentExpression	ret = false		1024475	0		=			
ANR	1026815	Identifier	ret		1024475	0					
ANR	1026816	Identifier	false		1024475	1					
ANR	1026817	IdentifierDeclStatement	"char * space = strchr ( input , ' ' ) ;"	3308:4:94239:94272	1024475	1	True				
ANR	1026818	IdentifierDecl	"* space = strchr ( input , ' ' )"		1024475	0					
ANR	1026819	IdentifierDeclType	char *		1024475	0					
ANR	1026820	Identifier	space		1024475	1					
ANR	1026821	AssignmentExpression	"* space = strchr ( input , ' ' )"		1024475	2		=			
ANR	1026822	Identifier	space		1024475	0					
ANR	1026823	CallExpression	"strchr ( input , ' ' )"		1024475	1					
ANR	1026824	Callee	strchr		1024475	0					
ANR	1026825	Identifier	strchr		1024475	0					
ANR	1026826	ArgumentList	input		1024475	1					
ANR	1026827	Argument	input		1024475	0					
ANR	1026828	Identifier	input		1024475	0					
ANR	1026829	Argument	' '		1024475	1					
ANR	1026830	PrimaryExpression	' '		1024475	0					
ANR	1026831	IdentifierDeclStatement	const char * arg = space ? r_str_trim_ro ( space + 1 ) : NULL ;	3309:4:94278:94334	1024475	2	True				
ANR	1026832	IdentifierDecl	* arg = space ? r_str_trim_ro ( space + 1 ) : NULL		1024475	0					
ANR	1026833	IdentifierDeclType	const char *		1024475	0					
ANR	1026834	Identifier	arg		1024475	1					
ANR	1026835	AssignmentExpression	* arg = space ? r_str_trim_ro ( space + 1 ) : NULL		1024475	2		=			
ANR	1026836	Identifier	arg		1024475	0					
ANR	1026837	ConditionalExpression	space ? r_str_trim_ro ( space + 1 ) : NULL		1024475	1					
ANR	1026838	Condition	space		1024475	0					
ANR	1026839	Identifier	space		1024475	0					
ANR	1026840	CallExpression	r_str_trim_ro ( space + 1 )		1024475	1					
ANR	1026841	Callee	r_str_trim_ro		1024475	0					
ANR	1026842	Identifier	r_str_trim_ro		1024475	0					
ANR	1026843	ArgumentList	space + 1		1024475	1					
ANR	1026844	Argument	space + 1		1024475	0					
ANR	1026845	AdditiveExpression	space + 1		1024475	0		+			
ANR	1026846	Identifier	space		1024475	0					
ANR	1026847	PrimaryExpression	1		1024475	1					
ANR	1026848	Identifier	NULL		1024475	2					
ANR	1026849	IfStatement	if ( ! arg || input [ 2 ] == '?' )		1024475	3					
ANR	1026850	Condition	! arg || input [ 2 ] == '?'	3310:8:94344:94366	1024475	0	True				
ANR	1026851	OrExpression	! arg || input [ 2 ] == '?'		1024475	0		||			
ANR	1026852	UnaryOperationExpression	! arg		1024475	0					
ANR	1026853	UnaryOperator	!		1024475	0					
ANR	1026854	Identifier	arg		1024475	1					
ANR	1026855	EqualityExpression	input [ 2 ] == '?'		1024475	1		==			
ANR	1026856	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1026857	Identifier	input		1024475	0					
ANR	1026858	PrimaryExpression	2		1024475	1					
ANR	1026859	PrimaryExpression	'?'		1024475	1					
ANR	1026860	CompoundStatement		367:33:10692:10692	1024475	1					
ANR	1026861	ExpressionStatement	"eprintf ( ""Usage: /cc[aAdlpb] [hashname] [hexpairhashvalue]\\n"" )"	3311:5:94376:94438	1024475	0	True				
ANR	1026862	CallExpression	"eprintf ( ""Usage: /cc[aAdlpb] [hashname] [hexpairhashvalue]\\n"" )"		1024475	0					
ANR	1026863	Callee	eprintf		1024475	0					
ANR	1026864	Identifier	eprintf		1024475	0					
ANR	1026865	ArgumentList	"""Usage: /cc[aAdlpb] [hashname] [hexpairhashvalue]\\n"""		1024475	1					
ANR	1026866	Argument	"""Usage: /cc[aAdlpb] [hashname] [hexpairhashvalue]\\n"""		1024475	0					
ANR	1026867	PrimaryExpression	"""Usage: /cc[aAdlpb] [hashname] [hexpairhashvalue]\\n"""		1024475	0					
ANR	1026868	ExpressionStatement	"eprintf ( "" /cca - lowercase alphabet chars only\\n"" )"	3312:5:94445:94496	1024475	1	True				
ANR	1026869	CallExpression	"eprintf ( "" /cca - lowercase alphabet chars only\\n"" )"		1024475	0					
ANR	1026870	Callee	eprintf		1024475	0					
ANR	1026871	Identifier	eprintf		1024475	0					
ANR	1026872	ArgumentList	""" /cca - lowercase alphabet chars only\\n"""		1024475	1					
ANR	1026873	Argument	""" /cca - lowercase alphabet chars only\\n"""		1024475	0					
ANR	1026874	PrimaryExpression	""" /cca - lowercase alphabet chars only\\n"""		1024475	0					
ANR	1026875	ExpressionStatement	"eprintf ( "" /ccA - uppercase alphabet chars only\\n"" )"	3313:5:94503:94554	1024475	2	True				
ANR	1026876	CallExpression	"eprintf ( "" /ccA - uppercase alphabet chars only\\n"" )"		1024475	0					
ANR	1026877	Callee	eprintf		1024475	0					
ANR	1026878	Identifier	eprintf		1024475	0					
ANR	1026879	ArgumentList	""" /ccA - uppercase alphabet chars only\\n"""		1024475	1					
ANR	1026880	Argument	""" /ccA - uppercase alphabet chars only\\n"""		1024475	0					
ANR	1026881	PrimaryExpression	""" /ccA - uppercase alphabet chars only\\n"""		1024475	0					
ANR	1026882	ExpressionStatement	"eprintf ( "" /ccl - letters (lower + upper alphabet chars)\\n"" )"	3314:5:94561:94621	1024475	3	True				
ANR	1026883	CallExpression	"eprintf ( "" /ccl - letters (lower + upper alphabet chars)\\n"" )"		1024475	0					
ANR	1026884	Callee	eprintf		1024475	0					
ANR	1026885	Identifier	eprintf		1024475	0					
ANR	1026886	ArgumentList	""" /ccl - letters (lower + upper alphabet chars)\\n"""		1024475	1					
ANR	1026887	Argument	""" /ccl - letters (lower + upper alphabet chars)\\n"""		1024475	0					
ANR	1026888	PrimaryExpression	""" /ccl - letters (lower + upper alphabet chars)\\n"""		1024475	0					
ANR	1026889	ExpressionStatement	"eprintf ( "" /ccd - digits (only numbers)\\n"" )"	3315:5:94628:94671	1024475	4	True				
ANR	1026890	CallExpression	"eprintf ( "" /ccd - digits (only numbers)\\n"" )"		1024475	0					
ANR	1026891	Callee	eprintf		1024475	0					
ANR	1026892	Identifier	eprintf		1024475	0					
ANR	1026893	ArgumentList	""" /ccd - digits (only numbers)\\n"""		1024475	1					
ANR	1026894	Argument	""" /ccd - digits (only numbers)\\n"""		1024475	0					
ANR	1026895	PrimaryExpression	""" /ccd - digits (only numbers)\\n"""		1024475	0					
ANR	1026896	ExpressionStatement	"eprintf ( "" /ccp - printable (alpha + digit)\\n"" )"	3316:5:94678:94725	1024475	5	True				
ANR	1026897	CallExpression	"eprintf ( "" /ccp - printable (alpha + digit)\\n"" )"		1024475	0					
ANR	1026898	Callee	eprintf		1024475	0					
ANR	1026899	Identifier	eprintf		1024475	0					
ANR	1026900	ArgumentList	""" /ccp - printable (alpha + digit)\\n"""		1024475	1					
ANR	1026901	Argument	""" /ccp - printable (alpha + digit)\\n"""		1024475	0					
ANR	1026902	PrimaryExpression	""" /ccp - printable (alpha + digit)\\n"""		1024475	0					
ANR	1026903	ExpressionStatement	"eprintf ( "" /ccb - binary (any number is valid)\\n"" )"	3317:5:94732:94782	1024475	6	True				
ANR	1026904	CallExpression	"eprintf ( "" /ccb - binary (any number is valid)\\n"" )"		1024475	0					
ANR	1026905	Callee	eprintf		1024475	0					
ANR	1026906	Identifier	eprintf		1024475	0					
ANR	1026907	ArgumentList	""" /ccb - binary (any number is valid)\\n"""		1024475	1					
ANR	1026908	Argument	""" /ccb - binary (any number is valid)\\n"""		1024475	0					
ANR	1026909	PrimaryExpression	""" /ccb - binary (any number is valid)\\n"""		1024475	0					
ANR	1026910	GotoStatement	goto beach ;	3318:5:94789:94799	1024475	7	True				
ANR	1026911	Identifier	beach		1024475	0					
ANR	1026912	IdentifierDeclStatement	char * s = strdup ( arg ) ;	3320:4:94811:94833	1024475	4	True				
ANR	1026913	IdentifierDecl	* s = strdup ( arg )		1024475	0					
ANR	1026914	IdentifierDeclType	char *		1024475	0					
ANR	1026915	Identifier	s		1024475	1					
ANR	1026916	AssignmentExpression	* s = strdup ( arg )		1024475	2		=			
ANR	1026917	Identifier	s		1024475	0					
ANR	1026918	CallExpression	strdup ( arg )		1024475	1					
ANR	1026919	Callee	strdup		1024475	0					
ANR	1026920	Identifier	strdup		1024475	0					
ANR	1026921	ArgumentList	arg		1024475	1					
ANR	1026922	Argument	arg		1024475	0					
ANR	1026923	Identifier	arg		1024475	0					
ANR	1026924	IdentifierDeclStatement	"char * sp = strchr ( s , ' ' ) ;"	3321:4:94839:94865	1024475	5	True				
ANR	1026925	IdentifierDecl	"* sp = strchr ( s , ' ' )"		1024475	0					
ANR	1026926	IdentifierDeclType	char *		1024475	0					
ANR	1026927	Identifier	sp		1024475	1					
ANR	1026928	AssignmentExpression	"* sp = strchr ( s , ' ' )"		1024475	2		=			
ANR	1026929	Identifier	sp		1024475	0					
ANR	1026930	CallExpression	"strchr ( s , ' ' )"		1024475	1					
ANR	1026931	Callee	strchr		1024475	0					
ANR	1026932	Identifier	strchr		1024475	0					
ANR	1026933	ArgumentList	s		1024475	1					
ANR	1026934	Argument	s		1024475	0					
ANR	1026935	Identifier	s		1024475	0					
ANR	1026936	Argument	' '		1024475	1					
ANR	1026937	PrimaryExpression	' '		1024475	0					
ANR	1026938	IdentifierDeclStatement	int mode = input [ 2 ] ;	3322:4:94871:94890	1024475	6	True				
ANR	1026939	IdentifierDecl	mode = input [ 2 ]		1024475	0					
ANR	1026940	IdentifierDeclType	int		1024475	0					
ANR	1026941	Identifier	mode		1024475	1					
ANR	1026942	AssignmentExpression	mode = input [ 2 ]		1024475	2		=			
ANR	1026943	Identifier	mode		1024475	0					
ANR	1026944	ArrayIndexing	input [ 2 ]		1024475	1					
ANR	1026945	Identifier	input		1024475	0					
ANR	1026946	PrimaryExpression	2		1024475	1					
ANR	1026947	IfStatement	if ( sp )		1024475	7					
ANR	1026948	Condition	sp	3323:8:94900:94901	1024475	0	True				
ANR	1026949	Identifier	sp		1024475	0					
ANR	1026950	CompoundStatement		384:5:11284:11318	1024475	1					
ANR	1026951	ExpressionStatement	* sp = 0	3324:5:94911:94918	1024475	0	True				
ANR	1026952	AssignmentExpression	* sp = 0		1024475	0		=			
ANR	1026953	UnaryOperationExpression	* sp		1024475	0					
ANR	1026954	UnaryOperator	*		1024475	0					
ANR	1026955	Identifier	sp		1024475	1					
ANR	1026956	PrimaryExpression	0		1024475	1					
ANR	1026957	ExpressionStatement	sp ++	3325:5:94925:94929	1024475	1	True				
ANR	1026958	PostIncDecOperationExpression	sp ++		1024475	0					
ANR	1026959	Identifier	sp		1024475	0					
ANR	1026960	IncDec	++		1024475	1					
ANR	1026961	IdentifierDeclStatement	char * hashName = s ;	3326:5:94936:94954	1024475	2	True				
ANR	1026962	IdentifierDecl	* hashName = s		1024475	0					
ANR	1026963	IdentifierDeclType	char *		1024475	0					
ANR	1026964	Identifier	hashName		1024475	1					
ANR	1026965	AssignmentExpression	* hashName = s		1024475	2		=			
ANR	1026966	Identifier	s		1024475	0					
ANR	1026967	Identifier	s		1024475	1					
ANR	1026968	IdentifierDeclStatement	ut8 * hashValue = ( ut8 * ) strdup ( sp ) ;	3327:5:94961:94995	1024475	3	True				
ANR	1026969	IdentifierDecl	* hashValue = ( ut8 * ) strdup ( sp )		1024475	0					
ANR	1026970	IdentifierDeclType	ut8 *		1024475	0					
ANR	1026971	Identifier	hashValue		1024475	1					
ANR	1026972	AssignmentExpression	* hashValue = ( ut8 * ) strdup ( sp )		1024475	2		=			
ANR	1026973	Identifier	hashValue		1024475	0					
ANR	1026974	CastExpression	( ut8 * ) strdup ( sp )		1024475	1					
ANR	1026975	CastTarget	ut8 *		1024475	0					
ANR	1026976	CallExpression	strdup ( sp )		1024475	1					
ANR	1026977	Callee	strdup		1024475	0					
ANR	1026978	Identifier	strdup		1024475	0					
ANR	1026979	ArgumentList	sp		1024475	1					
ANR	1026980	Argument	sp		1024475	0					
ANR	1026981	Identifier	sp		1024475	0					
ANR	1026982	IfStatement	if ( hashValue )		1024475	4					
ANR	1026983	Condition	hashValue	3328:9:95006:95014	1024475	0	True				
ANR	1026984	Identifier	hashValue		1024475	0					
ANR	1026985	CompoundStatement		385:20:11340:11340	1024475	1					
ANR	1026986	IfStatement	"if ( ! r_str_startswith ( ( const char * ) hashValue , ""0x"" ) )"		1024475	0					
ANR	1026987	Condition	"! r_str_startswith ( ( const char * ) hashValue , ""0x"" )"	3329:10:95029:95077	1024475	0	True				
ANR	1026988	UnaryOperationExpression	"! r_str_startswith ( ( const char * ) hashValue , ""0x"" )"		1024475	0					
ANR	1026989	UnaryOperator	!		1024475	0					
ANR	1026990	CallExpression	"r_str_startswith ( ( const char * ) hashValue , ""0x"" )"		1024475	1					
ANR	1026991	Callee	r_str_startswith		1024475	0					
ANR	1026992	Identifier	r_str_startswith		1024475	0					
ANR	1026993	ArgumentList	( const char * ) hashValue		1024475	1					
ANR	1026994	Argument	( const char * ) hashValue		1024475	0					
ANR	1026995	CastExpression	( const char * ) hashValue		1024475	0					
ANR	1026996	CastTarget	const char *		1024475	0					
ANR	1026997	Identifier	hashValue		1024475	1					
ANR	1026998	Argument	"""0x"""		1024475	1					
ANR	1026999	PrimaryExpression	"""0x"""		1024475	0					
ANR	1027000	CompoundStatement		389:7:11477:11533	1024475	1					
ANR	1027001	IdentifierDeclStatement	int hashLength = 4 ;	3331:7:95127:95145	1024475	0	True				
ANR	1027002	IdentifierDecl	hashLength = 4		1024475	0					
ANR	1027003	IdentifierDeclType	int		1024475	0					
ANR	1027004	Identifier	hashLength		1024475	1					
ANR	1027005	AssignmentExpression	hashLength = 4		1024475	2		=			
ANR	1027006	Identifier	hashLength		1024475	0					
ANR	1027007	PrimaryExpression	4		1024475	1					
ANR	1027008	IdentifierDeclStatement	"ut32 n = ( ut32 ) r_num_get ( NULL , ( const char * ) hashValue ) ;"	3332:7:95154:95210	1024475	1	True				
ANR	1027009	IdentifierDecl	"n = ( ut32 ) r_num_get ( NULL , ( const char * ) hashValue )"		1024475	0					
ANR	1027010	IdentifierDeclType	ut32		1024475	0					
ANR	1027011	Identifier	n		1024475	1					
ANR	1027012	AssignmentExpression	"n = ( ut32 ) r_num_get ( NULL , ( const char * ) hashValue )"		1024475	2		=			
ANR	1027013	Identifier	n		1024475	0					
ANR	1027014	CastExpression	"( ut32 ) r_num_get ( NULL , ( const char * ) hashValue )"		1024475	1					
ANR	1027015	CastTarget	ut32		1024475	0					
ANR	1027016	CallExpression	"r_num_get ( NULL , ( const char * ) hashValue )"		1024475	1					
ANR	1027017	Callee	r_num_get		1024475	0					
ANR	1027018	Identifier	r_num_get		1024475	0					
ANR	1027019	ArgumentList	NULL		1024475	1					
ANR	1027020	Argument	NULL		1024475	0					
ANR	1027021	Identifier	NULL		1024475	0					
ANR	1027022	Argument	( const char * ) hashValue		1024475	1					
ANR	1027023	CastExpression	( const char * ) hashValue		1024475	0					
ANR	1027024	CastTarget	const char *		1024475	0					
ANR	1027025	Identifier	hashValue		1024475	1					
ANR	1027026	ExpressionStatement	"memcpy ( hashValue , ( const ut8 * ) & n , sizeof ( ut32 ) )"	3333:7:95219:95268	1024475	2	True				
ANR	1027027	CallExpression	"memcpy ( hashValue , ( const ut8 * ) & n , sizeof ( ut32 ) )"		1024475	0					
ANR	1027028	Callee	memcpy		1024475	0					
ANR	1027029	Identifier	memcpy		1024475	0					
ANR	1027030	ArgumentList	hashValue		1024475	1					
ANR	1027031	Argument	hashValue		1024475	0					
ANR	1027032	Identifier	hashValue		1024475	0					
ANR	1027033	Argument	( const ut8 * ) & n		1024475	1					
ANR	1027034	CastExpression	( const ut8 * ) & n		1024475	0					
ANR	1027035	CastTarget	const ut8 *		1024475	0					
ANR	1027036	UnaryOperationExpression	& n		1024475	1					
ANR	1027037	UnaryOperator	&		1024475	0					
ANR	1027038	Identifier	n		1024475	1					
ANR	1027039	Argument	sizeof ( ut32 )		1024475	2					
ANR	1027040	SizeofExpression	sizeof ( ut32 )		1024475	0					
ANR	1027041	Sizeof	sizeof		1024475	0					
ANR	1027042	SizeofOperand	ut32		1024475	1					
ANR	1027043	ExpressionStatement	"search_collisions ( core , hashName , hashValue , hashLength , mode )"	3334:7:95277:95340	1024475	3	True				
ANR	1027044	CallExpression	"search_collisions ( core , hashName , hashValue , hashLength , mode )"		1024475	0					
ANR	1027045	Callee	search_collisions		1024475	0					
ANR	1027046	Identifier	search_collisions		1024475	0					
ANR	1027047	ArgumentList	core		1024475	1					
ANR	1027048	Argument	core		1024475	0					
ANR	1027049	Identifier	core		1024475	0					
ANR	1027050	Argument	hashName		1024475	1					
ANR	1027051	Identifier	hashName		1024475	0					
ANR	1027052	Argument	hashValue		1024475	2					
ANR	1027053	Identifier	hashValue		1024475	0					
ANR	1027054	Argument	hashLength		1024475	3					
ANR	1027055	Identifier	hashLength		1024475	0					
ANR	1027056	Argument	mode		1024475	4					
ANR	1027057	Identifier	mode		1024475	0					
ANR	1027058	ElseStatement	else		1024475	0					
ANR	1027059	CompoundStatement		393:7:11687:11733	1024475	0					
ANR	1027060	IdentifierDeclStatement	"int hashLength = r_hex_str2bin ( sp , hashValue ) ;"	3336:7:95364:95410	1024475	0	True				
ANR	1027061	IdentifierDecl	"hashLength = r_hex_str2bin ( sp , hashValue )"		1024475	0					
ANR	1027062	IdentifierDeclType	int		1024475	0					
ANR	1027063	Identifier	hashLength		1024475	1					
ANR	1027064	AssignmentExpression	"hashLength = r_hex_str2bin ( sp , hashValue )"		1024475	2		=			
ANR	1027065	Identifier	hashLength		1024475	0					
ANR	1027066	CallExpression	"r_hex_str2bin ( sp , hashValue )"		1024475	1					
ANR	1027067	Callee	r_hex_str2bin		1024475	0					
ANR	1027068	Identifier	r_hex_str2bin		1024475	0					
ANR	1027069	ArgumentList	sp		1024475	1					
ANR	1027070	Argument	sp		1024475	0					
ANR	1027071	Identifier	sp		1024475	0					
ANR	1027072	Argument	hashValue		1024475	1					
ANR	1027073	Identifier	hashValue		1024475	0					
ANR	1027074	IfStatement	if ( hashLength > 0 )		1024475	1					
ANR	1027075	Condition	hashLength > 0	3337:11:95423:95436	1024475	0	True				
ANR	1027076	RelationalExpression	hashLength > 0		1024475	0		>			
ANR	1027077	Identifier	hashLength		1024475	0					
ANR	1027078	PrimaryExpression	0		1024475	1					
ANR	1027079	CompoundStatement		394:27:11762:11762	1024475	1					
ANR	1027080	ExpressionStatement	"search_collisions ( core , hashName , hashValue , hashLength , mode )"	3338:8:95449:95512	1024475	0	True				
ANR	1027081	CallExpression	"search_collisions ( core , hashName , hashValue , hashLength , mode )"		1024475	0					
ANR	1027082	Callee	search_collisions		1024475	0					
ANR	1027083	Identifier	search_collisions		1024475	0					
ANR	1027084	ArgumentList	core		1024475	1					
ANR	1027085	Argument	core		1024475	0					
ANR	1027086	Identifier	core		1024475	0					
ANR	1027087	Argument	hashName		1024475	1					
ANR	1027088	Identifier	hashName		1024475	0					
ANR	1027089	Argument	hashValue		1024475	2					
ANR	1027090	Identifier	hashValue		1024475	0					
ANR	1027091	Argument	hashLength		1024475	3					
ANR	1027092	Identifier	hashLength		1024475	0					
ANR	1027093	Argument	mode		1024475	4					
ANR	1027094	Identifier	mode		1024475	0					
ANR	1027095	ElseStatement	else		1024475	0					
ANR	1027096	CompoundStatement		396:14:11851:11851	1024475	0					
ANR	1027097	ExpressionStatement	"eprintf ( ""Invalid expected hash hexpairs.\\n"" )"	3340:8:95538:95583	1024475	0	True				
ANR	1027098	CallExpression	"eprintf ( ""Invalid expected hash hexpairs.\\n"" )"		1024475	0					
ANR	1027099	Callee	eprintf		1024475	0					
ANR	1027100	Identifier	eprintf		1024475	0					
ANR	1027101	ArgumentList	"""Invalid expected hash hexpairs.\\n"""		1024475	1					
ANR	1027102	Argument	"""Invalid expected hash hexpairs.\\n"""		1024475	0					
ANR	1027103	PrimaryExpression	"""Invalid expected hash hexpairs.\\n"""		1024475	0					
ANR	1027104	ExpressionStatement	free ( hashValue )	3343:6:95608:95624	1024475	1	True				
ANR	1027105	CallExpression	free ( hashValue )		1024475	0					
ANR	1027106	Callee	free		1024475	0					
ANR	1027107	Identifier	free		1024475	0					
ANR	1027108	ArgumentList	hashValue		1024475	1					
ANR	1027109	Argument	hashValue		1024475	0					
ANR	1027110	Identifier	hashValue		1024475	0					
ANR	1027111	ElseStatement	else		1024475	0					
ANR	1027112	CompoundStatement		401:12:11961:11961	1024475	0					
ANR	1027113	ExpressionStatement	"eprintf ( ""Cannot allocate memory.\\n"" )"	3345:6:95646:95683	1024475	0	True				
ANR	1027114	CallExpression	"eprintf ( ""Cannot allocate memory.\\n"" )"		1024475	0					
ANR	1027115	Callee	eprintf		1024475	0					
ANR	1027116	Identifier	eprintf		1024475	0					
ANR	1027117	ArgumentList	"""Cannot allocate memory.\\n"""		1024475	1					
ANR	1027118	Argument	"""Cannot allocate memory.\\n"""		1024475	0					
ANR	1027119	PrimaryExpression	"""Cannot allocate memory.\\n"""		1024475	0					
ANR	1027120	ExpressionStatement	ret = true	3347:5:95697:95707	1024475	5	True				
ANR	1027121	AssignmentExpression	ret = true		1024475	0		=			
ANR	1027122	Identifier	ret		1024475	0					
ANR	1027123	Identifier	true		1024475	1					
ANR	1027124	GotoStatement	goto beach ;	3348:5:95714:95724	1024475	6	True				
ANR	1027125	Identifier	beach		1024475	0					
ANR	1027126	ElseStatement	else		1024475	0					
ANR	1027127	CompoundStatement		406:11:12060:12060	1024475	0					
ANR	1027128	ExpressionStatement	"eprintf ( ""Usage: /cc [hashname] [hexpairhashvalue]\\n"" )"	3350:5:95744:95798	1024475	0	True				
ANR	1027129	CallExpression	"eprintf ( ""Usage: /cc [hashname] [hexpairhashvalue]\\n"" )"		1024475	0					
ANR	1027130	Callee	eprintf		1024475	0					
ANR	1027131	Identifier	eprintf		1024475	0					
ANR	1027132	ArgumentList	"""Usage: /cc [hashname] [hexpairhashvalue]\\n"""		1024475	1					
ANR	1027133	Argument	"""Usage: /cc [hashname] [hexpairhashvalue]\\n"""		1024475	0					
ANR	1027134	PrimaryExpression	"""Usage: /cc [hashname] [hexpairhashvalue]\\n"""		1024475	0					
ANR	1027135	ExpressionStatement	"eprintf ( ""Usage: /CC to search ascii collisions\\n"" )"	3351:5:95805:95856	1024475	1	True				
ANR	1027136	CallExpression	"eprintf ( ""Usage: /CC to search ascii collisions\\n"" )"		1024475	0					
ANR	1027137	Callee	eprintf		1024475	0					
ANR	1027138	Identifier	eprintf		1024475	0					
ANR	1027139	ArgumentList	"""Usage: /CC to search ascii collisions\\n"""		1024475	1					
ANR	1027140	Argument	"""Usage: /CC to search ascii collisions\\n"""		1024475	0					
ANR	1027141	PrimaryExpression	"""Usage: /CC to search ascii collisions\\n"""		1024475	0					
ANR	1027142	GotoStatement	goto beach ;	3352:5:95863:95873	1024475	2	True				
ANR	1027143	Identifier	beach		1024475	0					
ANR	1027144	ExpressionStatement	free ( s )	3354:4:95885:95893	1024475	8	True				
ANR	1027145	CallExpression	free ( s )		1024475	0					
ANR	1027146	Callee	free		1024475	0					
ANR	1027147	Identifier	free		1024475	0					
ANR	1027148	ArgumentList	s		1024475	1					
ANR	1027149	Argument	s		1024475	0					
ANR	1027150	Identifier	s		1024475	0					
ANR	1027151	GotoStatement	goto beach ;	3355:4:95899:95909	1024475	9	True				
ANR	1027152	Identifier	beach		1024475	0					
ANR	1027153	BreakStatement	break ;	3357:3:95919:95924	1024475	2	True				
ANR	1027154	Label	case 'd' :	3358:2:95928:95936	1024475	3	True				
ANR	1027155	CompoundStatement		418:4:12311:12329	1024475	4					
ANR	1027156	ExpressionStatement	param . crypto_search = false	3360:4:95955:95982	1024475	0	True				
ANR	1027157	AssignmentExpression	param . crypto_search = false		1024475	0		=			
ANR	1027158	MemberAccess	param . crypto_search		1024475	0					
ANR	1027159	Identifier	param		1024475	0					
ANR	1027160	Identifier	crypto_search		1024475	1					
ANR	1027161	Identifier	false		1024475	1					
ANR	1027162	IdentifierDeclStatement	RSearchKeyword * kw ;	3361:4:95988:96006	1024475	1	True				
ANR	1027163	IdentifierDecl	* kw		1024475	0					
ANR	1027164	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1027165	Identifier	kw		1024475	1					
ANR	1027166	ExpressionStatement	"kw = r_search_keyword_new_hex ( ""308200003082"" , ""ffff0000ffff"" , NULL )"	3362:4:96012:96080	1024475	2	True				
ANR	1027167	AssignmentExpression	"kw = r_search_keyword_new_hex ( ""308200003082"" , ""ffff0000ffff"" , NULL )"		1024475	0		=			
ANR	1027168	Identifier	kw		1024475	0					
ANR	1027169	CallExpression	"r_search_keyword_new_hex ( ""308200003082"" , ""ffff0000ffff"" , NULL )"		1024475	1					
ANR	1027170	Callee	r_search_keyword_new_hex		1024475	0					
ANR	1027171	Identifier	r_search_keyword_new_hex		1024475	0					
ANR	1027172	ArgumentList	"""308200003082"""		1024475	1					
ANR	1027173	Argument	"""308200003082"""		1024475	0					
ANR	1027174	PrimaryExpression	"""308200003082"""		1024475	0					
ANR	1027175	Argument	"""ffff0000ffff"""		1024475	1					
ANR	1027176	PrimaryExpression	"""ffff0000ffff"""		1024475	0					
ANR	1027177	Argument	NULL		1024475	2					
ANR	1027178	Identifier	NULL		1024475	0					
ANR	1027179	IfStatement	if ( kw )		1024475	3					
ANR	1027180	Condition	kw	3363:8:96090:96091	1024475	0	True				
ANR	1027181	Identifier	kw		1024475	0					
ANR	1027182	CompoundStatement		420:12:12417:12417	1024475	1					
ANR	1027183	ExpressionStatement	"r_search_kw_add ( core -> search , kw )"	3364:5:96101:96135	1024475	0	True				
ANR	1027184	CallExpression	"r_search_kw_add ( core -> search , kw )"		1024475	0					
ANR	1027185	Callee	r_search_kw_add		1024475	0					
ANR	1027186	Identifier	r_search_kw_add		1024475	0					
ANR	1027187	ArgumentList	core -> search		1024475	1					
ANR	1027188	Argument	core -> search		1024475	0					
ANR	1027189	PtrMemberAccess	core -> search		1024475	0					
ANR	1027190	Identifier	core		1024475	0					
ANR	1027191	Identifier	search		1024475	1					
ANR	1027192	Argument	kw		1024475	1					
ANR	1027193	Identifier	kw		1024475	0					
ANR	1027194	ExpressionStatement	r_search_begin ( core -> search )	3366:5:96209:96238	1024475	1	True				
ANR	1027195	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1027196	Callee	r_search_begin		1024475	0					
ANR	1027197	Identifier	r_search_begin		1024475	0					
ANR	1027198	ArgumentList	core -> search		1024475	1					
ANR	1027199	Argument	core -> search		1024475	0					
ANR	1027200	PtrMemberAccess	core -> search		1024475	0					
ANR	1027201	Identifier	core		1024475	0					
ANR	1027202	Identifier	search		1024475	1					
ANR	1027203	ElseStatement	else		1024475	0					
ANR	1027204	CompoundStatement		424:11:12574:12574	1024475	0					
ANR	1027205	ExpressionStatement	"eprintf ( ""bad pointer\\n"" )"	3368:5:96258:96283	1024475	0	True				
ANR	1027206	CallExpression	"eprintf ( ""bad pointer\\n"" )"		1024475	0					
ANR	1027207	Callee	eprintf		1024475	0					
ANR	1027208	Identifier	eprintf		1024475	0					
ANR	1027209	ArgumentList	"""bad pointer\\n"""		1024475	1					
ANR	1027210	Argument	"""bad pointer\\n"""		1024475	0					
ANR	1027211	PrimaryExpression	"""bad pointer\\n"""		1024475	0					
ANR	1027212	ExpressionStatement	dosearch = false	3369:5:96290:96306	1024475	1	True				
ANR	1027213	AssignmentExpression	dosearch = false		1024475	0		=			
ANR	1027214	Identifier	dosearch		1024475	0					
ANR	1027215	Identifier	false		1024475	1					
ANR	1027216	BreakStatement	break ;	3372:3:96322:96327	1024475	5	True				
ANR	1027217	Label	case 'a' :	3373:2:96331:96339	1024475	6	True				
ANR	1027218	ExpressionStatement	param . aes_search = true	3374:3:96344:96367	1024475	7	True				
ANR	1027219	AssignmentExpression	param . aes_search = true		1024475	0		=			
ANR	1027220	MemberAccess	param . aes_search		1024475	0					
ANR	1027221	Identifier	param		1024475	0					
ANR	1027222	Identifier	aes_search		1024475	1					
ANR	1027223	Identifier	true		1024475	1					
ANR	1027224	BreakStatement	break ;	3375:3:96372:96377	1024475	8	True				
ANR	1027225	Label	case 'r' :	3376:2:96381:96389	1024475	9	True				
ANR	1027226	ExpressionStatement	param . rsa_search = true	3377:3:96394:96417	1024475	10	True				
ANR	1027227	AssignmentExpression	param . rsa_search = true		1024475	0		=			
ANR	1027228	MemberAccess	param . rsa_search		1024475	0					
ANR	1027229	Identifier	param		1024475	0					
ANR	1027230	Identifier	rsa_search		1024475	1					
ANR	1027231	Identifier	true		1024475	1					
ANR	1027232	BreakStatement	break ;	3378:3:96422:96427	1024475	11	True				
ANR	1027233	Label	default :	3379:2:96431:96438	1024475	12	True				
ANR	1027234	Identifier	default		1024475	0					
ANR	1027235	CompoundStatement		436:11:12763:12763	1024475	13					
ANR	1027236	ExpressionStatement	dosearch = false	3380:3:96445:96461	1024475	0	True				
ANR	1027237	AssignmentExpression	dosearch = false		1024475	0		=			
ANR	1027238	Identifier	dosearch		1024475	0					
ANR	1027239	Identifier	false		1024475	1					
ANR	1027240	ExpressionStatement	param . crypto_search = false	3381:3:96466:96493	1024475	1	True				
ANR	1027241	AssignmentExpression	param . crypto_search = false		1024475	0		=			
ANR	1027242	MemberAccess	param . crypto_search		1024475	0					
ANR	1027243	Identifier	param		1024475	0					
ANR	1027244	Identifier	crypto_search		1024475	1					
ANR	1027245	Identifier	false		1024475	1					
ANR	1027246	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_c )"	3382:3:96498:96538	1024475	2	True				
ANR	1027247	CallExpression	"r_core_cmd_help ( core , help_msg_slash_c )"		1024475	0					
ANR	1027248	Callee	r_core_cmd_help		1024475	0					
ANR	1027249	Identifier	r_core_cmd_help		1024475	0					
ANR	1027250	ArgumentList	core		1024475	1					
ANR	1027251	Argument	core		1024475	0					
ANR	1027252	Identifier	core		1024475	0					
ANR	1027253	Argument	help_msg_slash_c		1024475	1					
ANR	1027254	Identifier	help_msg_slash_c		1024475	0					
ANR	1027255	BreakStatement	break ;	3385:3:96551:96556	1024475	24	True				
ANR	1027256	Label	case 'm' :	3386:1:96559:96567	1024475	25	True				
ANR	1027257	ExpressionStatement	dosearch = false	3387:2:96579:96595	1024475	26	True				
ANR	1027258	AssignmentExpression	dosearch = false		1024475	0		=			
ANR	1027259	Identifier	dosearch		1024475	0					
ANR	1027260	Identifier	false		1024475	1					
ANR	1027261	IfStatement	if ( input [ 1 ] == '?' )		1024475	27					
ANR	1027262	Condition	input [ 1 ] == '?'	3388:6:96603:96617	1024475	0	True				
ANR	1027263	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1027264	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1027265	Identifier	input		1024475	0					
ANR	1027266	PrimaryExpression	1		1024475	1					
ANR	1027267	PrimaryExpression	'?'		1024475	1					
ANR	1027268	CompoundStatement		445:23:12943:12943	1024475	1					
ANR	1027269	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_m )"	3389:3:96634:96674	1024475	0	True				
ANR	1027270	CallExpression	"r_core_cmd_help ( core , help_msg_slash_m )"		1024475	0					
ANR	1027271	Callee	r_core_cmd_help		1024475	0					
ANR	1027272	Identifier	r_core_cmd_help		1024475	0					
ANR	1027273	ArgumentList	core		1024475	1					
ANR	1027274	Argument	core		1024475	0					
ANR	1027275	Identifier	core		1024475	0					
ANR	1027276	Argument	help_msg_slash_m		1024475	1					
ANR	1027277	Identifier	help_msg_slash_m		1024475	0					
ANR	1027278	ElseStatement	else		1024475	0					
ANR	1027279	IfStatement	if ( input [ 1 ] == 'b' )		1024475	0					
ANR	1027280	Condition	input [ 1 ] == 'b'	3390:13:96689:96703	1024475	0	True				
ANR	1027281	EqualityExpression	input [ 1 ] == 'b'		1024475	0		==			
ANR	1027282	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1027283	Identifier	input		1024475	0					
ANR	1027284	PrimaryExpression	1		1024475	1					
ANR	1027285	PrimaryExpression	'b'		1024475	1					
ANR	1027286	CompoundStatement		448:3:13043:13106	1024475	1					
ANR	1027287	IdentifierDeclStatement	"bool bin_verbose = r_config_get_i ( core -> config , ""bin.verbose"" ) ;"	3391:3:96720:96783	1024475	0	True				
ANR	1027288	IdentifierDecl	"bin_verbose = r_config_get_i ( core -> config , ""bin.verbose"" )"		1024475	0					
ANR	1027289	IdentifierDeclType	bool		1024475	0					
ANR	1027290	Identifier	bin_verbose		1024475	1					
ANR	1027291	AssignmentExpression	"bin_verbose = r_config_get_i ( core -> config , ""bin.verbose"" )"		1024475	2		=			
ANR	1027292	Identifier	bin_verbose		1024475	0					
ANR	1027293	CallExpression	"r_config_get_i ( core -> config , ""bin.verbose"" )"		1024475	1					
ANR	1027294	Callee	r_config_get_i		1024475	0					
ANR	1027295	Identifier	r_config_get_i		1024475	0					
ANR	1027296	ArgumentList	core -> config		1024475	1					
ANR	1027297	Argument	core -> config		1024475	0					
ANR	1027298	PtrMemberAccess	core -> config		1024475	0					
ANR	1027299	Identifier	core		1024475	0					
ANR	1027300	Identifier	config		1024475	1					
ANR	1027301	Argument	"""bin.verbose"""		1024475	1					
ANR	1027302	PrimaryExpression	"""bin.verbose"""		1024475	0					
ANR	1027303	ExpressionStatement	"r_config_set_i ( core -> config , ""bin.verbose"" , false )"	3392:3:96788:96839	1024475	1	True				
ANR	1027304	CallExpression	"r_config_set_i ( core -> config , ""bin.verbose"" , false )"		1024475	0					
ANR	1027305	Callee	r_config_set_i		1024475	0					
ANR	1027306	Identifier	r_config_set_i		1024475	0					
ANR	1027307	ArgumentList	core -> config		1024475	1					
ANR	1027308	Argument	core -> config		1024475	0					
ANR	1027309	PtrMemberAccess	core -> config		1024475	0					
ANR	1027310	Identifier	core		1024475	0					
ANR	1027311	Identifier	config		1024475	1					
ANR	1027312	Argument	"""bin.verbose"""		1024475	1					
ANR	1027313	PrimaryExpression	"""bin.verbose"""		1024475	0					
ANR	1027314	Argument	false		1024475	2					
ANR	1027315	Identifier	false		1024475	0					
ANR	1027316	ExpressionStatement	"cmd_search_bin ( core , search_itv )"	3394:3:96868:96901	1024475	2	True				
ANR	1027317	CallExpression	"cmd_search_bin ( core , search_itv )"		1024475	0					
ANR	1027318	Callee	cmd_search_bin		1024475	0					
ANR	1027319	Identifier	cmd_search_bin		1024475	0					
ANR	1027320	ArgumentList	core		1024475	1					
ANR	1027321	Argument	core		1024475	0					
ANR	1027322	Identifier	core		1024475	0					
ANR	1027323	Argument	search_itv		1024475	1					
ANR	1027324	Identifier	search_itv		1024475	0					
ANR	1027325	ExpressionStatement	"r_config_set_i ( core -> config , ""bin.verbose"" , bin_verbose )"	3395:3:96906:96963	1024475	3	True				
ANR	1027326	CallExpression	"r_config_set_i ( core -> config , ""bin.verbose"" , bin_verbose )"		1024475	0					
ANR	1027327	Callee	r_config_set_i		1024475	0					
ANR	1027328	Identifier	r_config_set_i		1024475	0					
ANR	1027329	ArgumentList	core -> config		1024475	1					
ANR	1027330	Argument	core -> config		1024475	0					
ANR	1027331	PtrMemberAccess	core -> config		1024475	0					
ANR	1027332	Identifier	core		1024475	0					
ANR	1027333	Identifier	config		1024475	1					
ANR	1027334	Argument	"""bin.verbose"""		1024475	1					
ANR	1027335	PrimaryExpression	"""bin.verbose"""		1024475	0					
ANR	1027336	Argument	bin_verbose		1024475	2					
ANR	1027337	Identifier	bin_verbose		1024475	0					
ANR	1027338	ElseStatement	else		1024475	0					
ANR	1027339	IfStatement	if ( input [ 1 ] == 'm' )		1024475	0					
ANR	1027340	Condition	input [ 1 ] == 'm'	3396:13:96978:96992	1024475	0	True				
ANR	1027341	EqualityExpression	input [ 1 ] == 'm'		1024475	0		==			
ANR	1027342	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1027343	Identifier	input		1024475	0					
ANR	1027344	PrimaryExpression	1		1024475	1					
ANR	1027345	PrimaryExpression	'm'		1024475	1					
ANR	1027346	CompoundStatement		458:3:13418:13455	1024475	1					
ANR	1027347	IdentifierDeclStatement	ut64 addr = search_itv . addr ;	3397:3:97009:97036	1024475	0	True				
ANR	1027348	IdentifierDecl	addr = search_itv . addr		1024475	0					
ANR	1027349	IdentifierDeclType	ut64		1024475	0					
ANR	1027350	Identifier	addr		1024475	1					
ANR	1027351	AssignmentExpression	addr = search_itv . addr		1024475	2		=			
ANR	1027352	Identifier	addr		1024475	0					
ANR	1027353	MemberAccess	search_itv . addr		1024475	1					
ANR	1027354	Identifier	search_itv		1024475	0					
ANR	1027355	Identifier	addr		1024475	1					
ANR	1027356	IdentifierDeclStatement	RListIter * iter ;	3398:3:97041:97056	1024475	1	True				
ANR	1027357	IdentifierDecl	* iter		1024475	0					
ANR	1027358	IdentifierDeclType	RListIter *		1024475	0					
ANR	1027359	Identifier	iter		1024475	1					
ANR	1027360	IdentifierDeclStatement	RIOMap * map ;	3399:3:97061:97072	1024475	2	True				
ANR	1027361	IdentifierDecl	* map		1024475	0					
ANR	1027362	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1027363	Identifier	map		1024475	1					
ANR	1027364	IdentifierDeclStatement	int count = 0 ;	3400:3:97077:97090	1024475	3	True				
ANR	1027365	IdentifierDecl	count = 0		1024475	0					
ANR	1027366	IdentifierDeclType	int		1024475	0					
ANR	1027367	Identifier	count		1024475	1					
ANR	1027368	AssignmentExpression	count = 0		1024475	2		=			
ANR	1027369	Identifier	count		1024475	0					
ANR	1027370	PrimaryExpression	0		1024475	1					
ANR	1027371	IdentifierDeclStatement	const int align = core -> search -> align ;	3401:3:97095:97132	1024475	4	True				
ANR	1027372	IdentifierDecl	align = core -> search -> align		1024475	0					
ANR	1027373	IdentifierDeclType	const int		1024475	0					
ANR	1027374	Identifier	align		1024475	1					
ANR	1027375	AssignmentExpression	align = core -> search -> align		1024475	2		=			
ANR	1027376	Identifier	align		1024475	0					
ANR	1027377	PtrMemberAccess	core -> search -> align		1024475	1					
ANR	1027378	PtrMemberAccess	core -> search		1024475	0					
ANR	1027379	Identifier	core		1024475	0					
ANR	1027380	Identifier	search		1024475	1					
ANR	1027381	Identifier	align		1024475	1					
ANR	1027382	Statement	r_list_foreach	3402:3:97137:97150	1024475	5	True				
ANR	1027383	Statement	(	3402:18:97152:97152	1024475	6	True				
ANR	1027384	Statement	param	3402:19:97153:97157	1024475	7	True				
ANR	1027385	Statement	.	3402:24:97158:97158	1024475	8	True				
ANR	1027386	Statement	boundaries	3402:25:97159:97168	1024475	9	True				
ANR	1027387	Statement	","	3402:35:97169:97169	1024475	10	True				
ANR	1027388	Statement	iter	3402:37:97171:97174	1024475	11	True				
ANR	1027389	Statement	","	3402:41:97175:97175	1024475	12	True				
ANR	1027390	Statement	map	3402:43:97177:97179	1024475	13	True				
ANR	1027391	Statement	)	3402:46:97180:97180	1024475	14	True				
ANR	1027392	CompoundStatement		459:48:13505:13505	1024475	15					
ANR	1027393	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3404:4:97260:97290	1024475	0	True				
ANR	1027394	CallExpression	"r_cons_break_push ( NULL , NULL )"		1024475	0					
ANR	1027395	Callee	r_cons_break_push		1024475	0					
ANR	1027396	Identifier	r_cons_break_push		1024475	0					
ANR	1027397	ArgumentList	NULL		1024475	1					
ANR	1027398	Argument	NULL		1024475	0					
ANR	1027399	Identifier	NULL		1024475	0					
ANR	1027400	Argument	NULL		1024475	1					
ANR	1027401	Identifier	NULL		1024475	0					
ANR	1027402	ForStatement	for ( addr = map -> itv . addr ; addr < r_itv_end ( map -> itv ) ; addr ++ )		1024475	1					
ANR	1027403	ForInit	addr = map -> itv . addr ;	3405:9:97301:97321	1024475	0	True				
ANR	1027404	AssignmentExpression	addr = map -> itv . addr		1024475	0		=			
ANR	1027405	Identifier	addr		1024475	0					
ANR	1027406	MemberAccess	map -> itv . addr		1024475	1					
ANR	1027407	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027408	Identifier	map		1024475	0					
ANR	1027409	Identifier	itv		1024475	1					
ANR	1027410	Identifier	addr		1024475	1					
ANR	1027411	Condition	addr < r_itv_end ( map -> itv )	3405:31:97323:97349	1024475	1	True				
ANR	1027412	RelationalExpression	addr < r_itv_end ( map -> itv )		1024475	0		<			
ANR	1027413	Identifier	addr		1024475	0					
ANR	1027414	CallExpression	r_itv_end ( map -> itv )		1024475	1					
ANR	1027415	Callee	r_itv_end		1024475	0					
ANR	1027416	Identifier	r_itv_end		1024475	0					
ANR	1027417	ArgumentList	map -> itv		1024475	1					
ANR	1027418	Argument	map -> itv		1024475	0					
ANR	1027419	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027420	Identifier	map		1024475	0					
ANR	1027421	Identifier	itv		1024475	1					
ANR	1027422	PostIncDecOperationExpression	addr ++	3405:60:97352:97357	1024475	2	True				
ANR	1027423	Identifier	addr		1024475	0					
ANR	1027424	IncDec	++		1024475	1					
ANR	1027425	CompoundStatement		470:5:13843:13882	1024475	3					
ANR	1027426	IfStatement	if ( r_cons_is_breaked ( ) )		1024475	0					
ANR	1027427	Condition	r_cons_is_breaked ( )	3406:9:97371:97390	1024475	0	True				
ANR	1027428	CallExpression	r_cons_is_breaked ( )		1024475	0					
ANR	1027429	Callee	r_cons_is_breaked		1024475	0					
ANR	1027430	Identifier	r_cons_is_breaked		1024475	0					
ANR	1027431	ArgumentList			1024475	1					
ANR	1027432	CompoundStatement		463:31:13716:13716	1024475	1					
ANR	1027433	BreakStatement	break ;	3407:6:97401:97406	1024475	0	True				
ANR	1027434	IfStatement	if ( align && ( 0 != ( addr % align ) ) )		1024475	1					
ANR	1027435	Condition	align && ( 0 != ( addr % align ) )	3409:9:97424:97453	1024475	0	True				
ANR	1027436	AndExpression	align && ( 0 != ( addr % align ) )		1024475	0		&&			
ANR	1027437	Identifier	align		1024475	0					
ANR	1027438	EqualityExpression	0 != ( addr % align )		1024475	1		!=			
ANR	1027439	PrimaryExpression	0		1024475	0					
ANR	1027440	MultiplicativeExpression	addr % align		1024475	1		%			
ANR	1027441	Identifier	addr		1024475	0					
ANR	1027442	Identifier	align		1024475	1					
ANR	1027443	CompoundStatement		466:41:13779:13779	1024475	1					
ANR	1027444	ExpressionStatement	addr += ( addr % align ) - 1	3410:6:97464:97490	1024475	0	True				
ANR	1027445	AssignmentExpression	addr += ( addr % align ) - 1		1024475	0		+=			
ANR	1027446	Identifier	addr		1024475	0					
ANR	1027447	AdditiveExpression	( addr % align ) - 1		1024475	1		-			
ANR	1027448	MultiplicativeExpression	addr % align		1024475	0		%			
ANR	1027449	Identifier	addr		1024475	0					
ANR	1027450	Identifier	align		1024475	1					
ANR	1027451	PrimaryExpression	1		1024475	1					
ANR	1027452	ContinueStatement	continue ;	3411:6:97498:97506	1024475	1	True				
ANR	1027453	IdentifierDeclStatement	"char * mp = r_str_newf ( ""/mnt%d"" , count ) ;"	3413:5:97520:97559	1024475	2	True				
ANR	1027454	IdentifierDecl	"* mp = r_str_newf ( ""/mnt%d"" , count )"		1024475	0					
ANR	1027455	IdentifierDeclType	char *		1024475	0					
ANR	1027456	Identifier	mp		1024475	1					
ANR	1027457	AssignmentExpression	"* mp = r_str_newf ( ""/mnt%d"" , count )"		1024475	2		=			
ANR	1027458	Identifier	mp		1024475	0					
ANR	1027459	CallExpression	"r_str_newf ( ""/mnt%d"" , count )"		1024475	1					
ANR	1027460	Callee	r_str_newf		1024475	0					
ANR	1027461	Identifier	r_str_newf		1024475	0					
ANR	1027462	ArgumentList	"""/mnt%d"""		1024475	1					
ANR	1027463	Argument	"""/mnt%d"""		1024475	0					
ANR	1027464	PrimaryExpression	"""/mnt%d"""		1024475	0					
ANR	1027465	Argument	count		1024475	1					
ANR	1027466	Identifier	count		1024475	0					
ANR	1027467	Statement	eprintf	3414:5:97566:97572	1024475	3	True				
ANR	1027468	Statement	(	3414:13:97574:97574	1024475	4	True				
ANR	1027469	Statement	"""[*] Trying to mount at 0x%08"""	3414:14:97575:97604	1024475	5	True				
ANR	1027470	Statement	PFMT64x	3414:44:97605:97611	1024475	6	True				
ANR	1027471	Statement	"""\\r["""	3414:51:97612:97616	1024475	7	True				
ANR	1027472	Statement	","	3414:56:97617:97617	1024475	8	True				
ANR	1027473	Statement	addr	3414:58:97619:97622	1024475	9	True				
ANR	1027474	Statement	)	3414:62:97623:97623	1024475	10	True				
ANR	1027475	ExpressionStatement		3414:63:97624:97624	1024475	11	True				
ANR	1027476	IfStatement	"if ( r_fs_mount ( core -> fs , NULL , mp , addr ) )"		1024475	12					
ANR	1027477	Condition	"r_fs_mount ( core -> fs , NULL , mp , addr )"	3415:9:97635:97671	1024475	0	True				
ANR	1027478	CallExpression	"r_fs_mount ( core -> fs , NULL , mp , addr )"		1024475	0					
ANR	1027479	Callee	r_fs_mount		1024475	0					
ANR	1027480	Identifier	r_fs_mount		1024475	0					
ANR	1027481	ArgumentList	core -> fs		1024475	1					
ANR	1027482	Argument	core -> fs		1024475	0					
ANR	1027483	PtrMemberAccess	core -> fs		1024475	0					
ANR	1027484	Identifier	core		1024475	0					
ANR	1027485	Identifier	fs		1024475	1					
ANR	1027486	Argument	NULL		1024475	1					
ANR	1027487	Identifier	NULL		1024475	0					
ANR	1027488	Argument	mp		1024475	2					
ANR	1027489	Identifier	mp		1024475	0					
ANR	1027490	Argument	addr		1024475	3					
ANR	1027491	Identifier	addr		1024475	0					
ANR	1027492	CompoundStatement		472:48:13997:13997	1024475	1					
ANR	1027493	ExpressionStatement	count ++	3416:6:97682:97690	1024475	0	True				
ANR	1027494	PostIncDecOperationExpression	count ++		1024475	0					
ANR	1027495	Identifier	count		1024475	0					
ANR	1027496	IncDec	++		1024475	1					
ANR	1027497	Statement	eprintf	3417:6:97698:97704	1024475	1	True				
ANR	1027498	Statement	(	3417:14:97706:97706	1024475	2	True				
ANR	1027499	Statement	"""Mounted %s at 0x%08"""	3417:15:97707:97727	1024475	3	True				
ANR	1027500	Statement	PFMT64x	3417:36:97728:97734	1024475	4	True				
ANR	1027501	Statement	"""\\n"""	3417:43:97735:97738	1024475	5	True				
ANR	1027502	Statement	","	3417:47:97739:97739	1024475	6	True				
ANR	1027503	Statement	mp	3417:49:97741:97742	1024475	7	True				
ANR	1027504	Statement	","	3417:51:97743:97743	1024475	8	True				
ANR	1027505	Statement	addr	3417:53:97745:97748	1024475	9	True				
ANR	1027506	Statement	)	3417:57:97749:97749	1024475	10	True				
ANR	1027507	ExpressionStatement		3417:58:97750:97750	1024475	11	True				
ANR	1027508	ExpressionStatement	free ( mp )	3419:5:97764:97773	1024475	13	True				
ANR	1027509	CallExpression	free ( mp )		1024475	0					
ANR	1027510	Callee	free		1024475	0					
ANR	1027511	Identifier	free		1024475	0					
ANR	1027512	ArgumentList	mp		1024475	1					
ANR	1027513	Argument	mp		1024475	0					
ANR	1027514	Identifier	mp		1024475	0					
ANR	1027515	ExpressionStatement	r_cons_clear_line ( 1 )	3421:4:97785:97806	1024475	2	True				
ANR	1027516	CallExpression	r_cons_clear_line ( 1 )		1024475	0					
ANR	1027517	Callee	r_cons_clear_line		1024475	0					
ANR	1027518	Identifier	r_cons_clear_line		1024475	0					
ANR	1027519	ArgumentList	1		1024475	1					
ANR	1027520	Argument	1		1024475	0					
ANR	1027521	PrimaryExpression	1		1024475	0					
ANR	1027522	ExpressionStatement	r_cons_break_pop ( )	3422:4:97812:97831	1024475	3	True				
ANR	1027523	CallExpression	r_cons_break_pop ( )		1024475	0					
ANR	1027524	Callee	r_cons_break_pop		1024475	0					
ANR	1027525	Identifier	r_cons_break_pop		1024475	0					
ANR	1027526	ArgumentList			1024475	1					
ANR	1027527	ExpressionStatement	"eprintf ( ""\\n"" )"	3424:3:97841:97855	1024475	16	True				
ANR	1027528	CallExpression	"eprintf ( ""\\n"" )"		1024475	0					
ANR	1027529	Callee	eprintf		1024475	0					
ANR	1027530	Identifier	eprintf		1024475	0					
ANR	1027531	ArgumentList	"""\\n"""		1024475	1					
ANR	1027532	Argument	"""\\n"""		1024475	0					
ANR	1027533	PrimaryExpression	"""\\n"""		1024475	0					
ANR	1027534	ElseStatement	else		1024475	0					
ANR	1027535	IfStatement	if ( input [ 1 ] == 'e' )		1024475	0					
ANR	1027536	Condition	input [ 1 ] == 'e'	3425:13:97870:97884	1024475	0	True				
ANR	1027537	EqualityExpression	input [ 1 ] == 'e'		1024475	0		==			
ANR	1027538	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1027539	Identifier	input		1024475	0					
ANR	1027540	PrimaryExpression	1		1024475	1					
ANR	1027541	PrimaryExpression	'e'		1024475	1					
ANR	1027542	CompoundStatement		482:30:14210:14210	1024475	1					
ANR	1027543	ExpressionStatement	"r_cons_printf ( ""* r2 thinks%s\\n"" , input + 2 )"	3426:3:97901:97945	1024475	0	True				
ANR	1027544	CallExpression	"r_cons_printf ( ""* r2 thinks%s\\n"" , input + 2 )"		1024475	0					
ANR	1027545	Callee	r_cons_printf		1024475	0					
ANR	1027546	Identifier	r_cons_printf		1024475	0					
ANR	1027547	ArgumentList	"""* r2 thinks%s\\n"""		1024475	1					
ANR	1027548	Argument	"""* r2 thinks%s\\n"""		1024475	0					
ANR	1027549	PrimaryExpression	"""* r2 thinks%s\\n"""		1024475	0					
ANR	1027550	Argument	input + 2		1024475	1					
ANR	1027551	AdditiveExpression	input + 2		1024475	0		+			
ANR	1027552	Identifier	input		1024475	0					
ANR	1027553	PrimaryExpression	2		1024475	1					
ANR	1027554	ElseStatement	else		1024475	0					
ANR	1027555	IfStatement	if ( input [ 1 ] == ' ' || input [ 1 ] == '\\0' || json )		1024475	0					
ANR	1027556	Condition	input [ 1 ] == ' ' || input [ 1 ] == '\\0' || json	3427:13:97960:98002	1024475	0	True				
ANR	1027557	OrExpression	input [ 1 ] == ' ' || input [ 1 ] == '\\0' || json		1024475	0		||			
ANR	1027558	EqualityExpression	input [ 1 ] == ' '		1024475	0		==			
ANR	1027559	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1027560	Identifier	input		1024475	0					
ANR	1027561	PrimaryExpression	1		1024475	1					
ANR	1027562	PrimaryExpression	' '		1024475	1					
ANR	1027563	OrExpression	input [ 1 ] == '\\0' || json		1024475	1		||			
ANR	1027564	EqualityExpression	input [ 1 ] == '\\0'		1024475	0		==			
ANR	1027565	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1027566	Identifier	input		1024475	0					
ANR	1027567	PrimaryExpression	1		1024475	1					
ANR	1027568	PrimaryExpression	'\\0'		1024475	1					
ANR	1027569	Identifier	json		1024475	1					
ANR	1027570	CompoundStatement		495:3:14629:14641	1024475	1					
ANR	1027571	IdentifierDeclStatement	int ret ;	3428:3:98010:98017	1024475	0	True				
ANR	1027572	IdentifierDecl	ret		1024475	0					
ANR	1027573	IdentifierDeclType	int		1024475	0					
ANR	1027574	Identifier	ret		1024475	1					
ANR	1027575	IdentifierDeclStatement	const char * file = input [ param_offset - 1 ] ? input + param_offset : NULL ;	3429:3:98022:98092	1024475	1	True				
ANR	1027576	IdentifierDecl	* file = input [ param_offset - 1 ] ? input + param_offset : NULL		1024475	0					
ANR	1027577	IdentifierDeclType	const char *		1024475	0					
ANR	1027578	Identifier	file		1024475	1					
ANR	1027579	AssignmentExpression	* file = input [ param_offset - 1 ] ? input + param_offset : NULL		1024475	2		=			
ANR	1027580	Identifier	file		1024475	0					
ANR	1027581	ConditionalExpression	input [ param_offset - 1 ] ? input + param_offset : NULL		1024475	1					
ANR	1027582	Condition	input [ param_offset - 1 ]		1024475	0					
ANR	1027583	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1027584	Identifier	input		1024475	0					
ANR	1027585	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1027586	Identifier	param_offset		1024475	0					
ANR	1027587	PrimaryExpression	1		1024475	1					
ANR	1027588	AdditiveExpression	input + param_offset		1024475	1		+			
ANR	1027589	Identifier	input		1024475	0					
ANR	1027590	Identifier	param_offset		1024475	1					
ANR	1027591	Identifier	NULL		1024475	2					
ANR	1027592	IdentifierDeclStatement	ut64 addr = search_itv . addr ;	3430:3:98097:98124	1024475	2	True				
ANR	1027593	IdentifierDecl	addr = search_itv . addr		1024475	0					
ANR	1027594	IdentifierDeclType	ut64		1024475	0					
ANR	1027595	Identifier	addr		1024475	1					
ANR	1027596	AssignmentExpression	addr = search_itv . addr		1024475	2		=			
ANR	1027597	Identifier	addr		1024475	0					
ANR	1027598	MemberAccess	search_itv . addr		1024475	1					
ANR	1027599	Identifier	search_itv		1024475	0					
ANR	1027600	Identifier	addr		1024475	1					
ANR	1027601	IdentifierDeclStatement	RListIter * iter ;	3431:3:98129:98144	1024475	3	True				
ANR	1027602	IdentifierDecl	* iter		1024475	0					
ANR	1027603	IdentifierDeclType	RListIter *		1024475	0					
ANR	1027604	Identifier	iter		1024475	1					
ANR	1027605	IdentifierDeclStatement	RIOMap * map ;	3432:3:98149:98160	1024475	4	True				
ANR	1027606	IdentifierDecl	* map		1024475	0					
ANR	1027607	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1027608	Identifier	map		1024475	1					
ANR	1027609	IfStatement	if ( json )		1024475	5					
ANR	1027610	Condition	json	3433:7:98169:98172	1024475	0	True				
ANR	1027611	Identifier	json		1024475	0					
ANR	1027612	CompoundStatement		490:13:14498:14498	1024475	1					
ANR	1027613	ExpressionStatement	"r_cons_printf ( ""["" )"	3434:4:98181:98200	1024475	0	True				
ANR	1027614	CallExpression	"r_cons_printf ( ""["" )"		1024475	0					
ANR	1027615	Callee	r_cons_printf		1024475	0					
ANR	1027616	Identifier	r_cons_printf		1024475	0					
ANR	1027617	ArgumentList	"""["""		1024475	1					
ANR	1027618	Argument	"""["""		1024475	0					
ANR	1027619	PrimaryExpression	"""["""		1024475	0					
ANR	1027620	ExpressionStatement	r_core_magic_reset ( core )	3436:3:98210:98235	1024475	6	True				
ANR	1027621	CallExpression	r_core_magic_reset ( core )		1024475	0					
ANR	1027622	Callee	r_core_magic_reset		1024475	0					
ANR	1027623	Identifier	r_core_magic_reset		1024475	0					
ANR	1027624	ArgumentList	core		1024475	1					
ANR	1027625	Argument	core		1024475	0					
ANR	1027626	Identifier	core		1024475	0					
ANR	1027627	IdentifierDeclStatement	"int maxHits = r_config_get_i ( core -> config , ""search.maxhits"" ) ;"	3437:3:98240:98301	1024475	7	True				
ANR	1027628	IdentifierDecl	"maxHits = r_config_get_i ( core -> config , ""search.maxhits"" )"		1024475	0					
ANR	1027629	IdentifierDeclType	int		1024475	0					
ANR	1027630	Identifier	maxHits		1024475	1					
ANR	1027631	AssignmentExpression	"maxHits = r_config_get_i ( core -> config , ""search.maxhits"" )"		1024475	2		=			
ANR	1027632	Identifier	maxHits		1024475	0					
ANR	1027633	CallExpression	"r_config_get_i ( core -> config , ""search.maxhits"" )"		1024475	1					
ANR	1027634	Callee	r_config_get_i		1024475	0					
ANR	1027635	Identifier	r_config_get_i		1024475	0					
ANR	1027636	ArgumentList	core -> config		1024475	1					
ANR	1027637	Argument	core -> config		1024475	0					
ANR	1027638	PtrMemberAccess	core -> config		1024475	0					
ANR	1027639	Identifier	core		1024475	0					
ANR	1027640	Identifier	config		1024475	1					
ANR	1027641	Argument	"""search.maxhits"""		1024475	1					
ANR	1027642	PrimaryExpression	"""search.maxhits"""		1024475	0					
ANR	1027643	IdentifierDeclStatement	int hits = 0 ;	3438:3:98306:98318	1024475	8	True				
ANR	1027644	IdentifierDecl	hits = 0		1024475	0					
ANR	1027645	IdentifierDeclType	int		1024475	0					
ANR	1027646	Identifier	hits		1024475	1					
ANR	1027647	AssignmentExpression	hits = 0		1024475	2		=			
ANR	1027648	Identifier	hits		1024475	0					
ANR	1027649	PrimaryExpression	0		1024475	1					
ANR	1027650	Statement	r_list_foreach	3439:3:98323:98336	1024475	9	True				
ANR	1027651	Statement	(	3439:18:98338:98338	1024475	10	True				
ANR	1027652	Statement	param	3439:19:98339:98343	1024475	11	True				
ANR	1027653	Statement	.	3439:24:98344:98344	1024475	12	True				
ANR	1027654	Statement	boundaries	3439:25:98345:98354	1024475	13	True				
ANR	1027655	Statement	","	3439:35:98355:98355	1024475	14	True				
ANR	1027656	Statement	iter	3439:37:98357:98360	1024475	15	True				
ANR	1027657	Statement	","	3439:41:98361:98361	1024475	16	True				
ANR	1027658	Statement	map	3439:43:98363:98365	1024475	17	True				
ANR	1027659	Statement	)	3439:46:98366:98366	1024475	18	True				
ANR	1027660	CompoundStatement		496:48:14691:14691	1024475	19					
ANR	1027661	IfStatement	if ( ! json )		1024475	0					
ANR	1027662	Condition	! json	3440:8:98378:98382	1024475	0	True				
ANR	1027663	UnaryOperationExpression	! json		1024475	0					
ANR	1027664	UnaryOperator	!		1024475	0					
ANR	1027665	Identifier	json		1024475	1					
ANR	1027666	CompoundStatement		497:15:14708:14708	1024475	1					
ANR	1027667	ExpressionStatement	"eprintf ( ""-- %llx %llx\\n"" , map -> itv . addr , r_itv_end ( map -> itv ) )"	3441:5:98392:98455	1024475	0	True				
ANR	1027668	CallExpression	"eprintf ( ""-- %llx %llx\\n"" , map -> itv . addr , r_itv_end ( map -> itv ) )"		1024475	0					
ANR	1027669	Callee	eprintf		1024475	0					
ANR	1027670	Identifier	eprintf		1024475	0					
ANR	1027671	ArgumentList	"""-- %llx %llx\\n"""		1024475	1					
ANR	1027672	Argument	"""-- %llx %llx\\n"""		1024475	0					
ANR	1027673	PrimaryExpression	"""-- %llx %llx\\n"""		1024475	0					
ANR	1027674	Argument	map -> itv . addr		1024475	1					
ANR	1027675	MemberAccess	map -> itv . addr		1024475	0					
ANR	1027676	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027677	Identifier	map		1024475	0					
ANR	1027678	Identifier	itv		1024475	1					
ANR	1027679	Identifier	addr		1024475	1					
ANR	1027680	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1027681	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1027682	Callee	r_itv_end		1024475	0					
ANR	1027683	Identifier	r_itv_end		1024475	0					
ANR	1027684	ArgumentList	map -> itv		1024475	1					
ANR	1027685	Argument	map -> itv		1024475	0					
ANR	1027686	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027687	Identifier	map		1024475	0					
ANR	1027688	Identifier	itv		1024475	1					
ANR	1027689	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3443:4:98467:98497	1024475	1	True				
ANR	1027690	CallExpression	"r_cons_break_push ( NULL , NULL )"		1024475	0					
ANR	1027691	Callee	r_cons_break_push		1024475	0					
ANR	1027692	Identifier	r_cons_break_push		1024475	0					
ANR	1027693	ArgumentList	NULL		1024475	1					
ANR	1027694	Argument	NULL		1024475	0					
ANR	1027695	Identifier	NULL		1024475	0					
ANR	1027696	Argument	NULL		1024475	1					
ANR	1027697	Identifier	NULL		1024475	0					
ANR	1027698	ForStatement	for ( addr = map -> itv . addr ; addr < r_itv_end ( map -> itv ) ; addr ++ )		1024475	2					
ANR	1027699	ForInit	addr = map -> itv . addr ;	3444:9:98508:98528	1024475	0	True				
ANR	1027700	AssignmentExpression	addr = map -> itv . addr		1024475	0		=			
ANR	1027701	Identifier	addr		1024475	0					
ANR	1027702	MemberAccess	map -> itv . addr		1024475	1					
ANR	1027703	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027704	Identifier	map		1024475	0					
ANR	1027705	Identifier	itv		1024475	1					
ANR	1027706	Identifier	addr		1024475	1					
ANR	1027707	Condition	addr < r_itv_end ( map -> itv )	3444:31:98530:98556	1024475	1	True				
ANR	1027708	RelationalExpression	addr < r_itv_end ( map -> itv )		1024475	0		<			
ANR	1027709	Identifier	addr		1024475	0					
ANR	1027710	CallExpression	r_itv_end ( map -> itv )		1024475	1					
ANR	1027711	Callee	r_itv_end		1024475	0					
ANR	1027712	Identifier	r_itv_end		1024475	0					
ANR	1027713	ArgumentList	map -> itv		1024475	1					
ANR	1027714	Argument	map -> itv		1024475	0					
ANR	1027715	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027716	Identifier	map		1024475	0					
ANR	1027717	Identifier	itv		1024475	1					
ANR	1027718	PostIncDecOperationExpression	addr ++	3444:60:98559:98564	1024475	2	True				
ANR	1027719	Identifier	addr		1024475	0					
ANR	1027720	IncDec	++		1024475	1					
ANR	1027721	CompoundStatement		501:68:14890:14890	1024475	3					
ANR	1027722	IfStatement	if ( r_cons_is_breaked ( ) )		1024475	0					
ANR	1027723	Condition	r_cons_is_breaked ( )	3445:9:98578:98597	1024475	0	True				
ANR	1027724	CallExpression	r_cons_is_breaked ( )		1024475	0					
ANR	1027725	Callee	r_cons_is_breaked		1024475	0					
ANR	1027726	Identifier	r_cons_is_breaked		1024475	0					
ANR	1027727	ArgumentList			1024475	1					
ANR	1027728	CompoundStatement		502:31:14923:14923	1024475	1					
ANR	1027729	BreakStatement	break ;	3446:6:98608:98613	1024475	0	True				
ANR	1027730	ExpressionStatement	"ret = r_core_magic_at ( core , file , addr , 99 , false , json , & hits )"	3448:5:98627:98691	1024475	1	True				
ANR	1027731	AssignmentExpression	"ret = r_core_magic_at ( core , file , addr , 99 , false , json , & hits )"		1024475	0		=			
ANR	1027732	Identifier	ret		1024475	0					
ANR	1027733	CallExpression	"r_core_magic_at ( core , file , addr , 99 , false , json , & hits )"		1024475	1					
ANR	1027734	Callee	r_core_magic_at		1024475	0					
ANR	1027735	Identifier	r_core_magic_at		1024475	0					
ANR	1027736	ArgumentList	core		1024475	1					
ANR	1027737	Argument	core		1024475	0					
ANR	1027738	Identifier	core		1024475	0					
ANR	1027739	Argument	file		1024475	1					
ANR	1027740	Identifier	file		1024475	0					
ANR	1027741	Argument	addr		1024475	2					
ANR	1027742	Identifier	addr		1024475	0					
ANR	1027743	Argument	99		1024475	3					
ANR	1027744	PrimaryExpression	99		1024475	0					
ANR	1027745	Argument	false		1024475	4					
ANR	1027746	Identifier	false		1024475	0					
ANR	1027747	Argument	json		1024475	5					
ANR	1027748	Identifier	json		1024475	0					
ANR	1027749	Argument	& hits		1024475	6					
ANR	1027750	UnaryOperationExpression	& hits		1024475	0					
ANR	1027751	UnaryOperator	&		1024475	0					
ANR	1027752	Identifier	hits		1024475	1					
ANR	1027753	IfStatement	if ( ret == - 1 )		1024475	2					
ANR	1027754	Condition	ret == - 1	3449:9:98702:98710	1024475	0	True				
ANR	1027755	EqualityExpression	ret == - 1		1024475	0		==			
ANR	1027756	Identifier	ret		1024475	0					
ANR	1027757	UnaryOperationExpression	- 1		1024475	1					
ANR	1027758	UnaryOperator	-		1024475	0					
ANR	1027759	PrimaryExpression	1		1024475	1					
ANR	1027760	CompoundStatement		506:20:15036:15036	1024475	1					
ANR	1027761	BreakStatement	break ;	3451:6:98761:98766	1024475	0	True				
ANR	1027762	IfStatement	if ( maxHits && hits >= maxHits )		1024475	3					
ANR	1027763	Condition	maxHits && hits >= maxHits	3453:9:98784:98809	1024475	0	True				
ANR	1027764	AndExpression	maxHits && hits >= maxHits		1024475	0		&&			
ANR	1027765	Identifier	maxHits		1024475	0					
ANR	1027766	RelationalExpression	hits >= maxHits		1024475	1		>=			
ANR	1027767	Identifier	hits		1024475	0					
ANR	1027768	Identifier	maxHits		1024475	1					
ANR	1027769	CompoundStatement		510:37:15135:15135	1024475	1					
ANR	1027770	BreakStatement	break ;	3454:6:98820:98825	1024475	0	True				
ANR	1027771	ExpressionStatement	addr += ret - 1	3456:5:98839:98854	1024475	4	True				
ANR	1027772	AssignmentExpression	addr += ret - 1		1024475	0		+=			
ANR	1027773	Identifier	addr		1024475	0					
ANR	1027774	AdditiveExpression	ret - 1		1024475	1		-			
ANR	1027775	Identifier	ret		1024475	0					
ANR	1027776	PrimaryExpression	1		1024475	1					
ANR	1027777	ExpressionStatement	r_cons_clear_line ( 1 )	3458:4:98866:98887	1024475	3	True				
ANR	1027778	CallExpression	r_cons_clear_line ( 1 )		1024475	0					
ANR	1027779	Callee	r_cons_clear_line		1024475	0					
ANR	1027780	Identifier	r_cons_clear_line		1024475	0					
ANR	1027781	ArgumentList	1		1024475	1					
ANR	1027782	Argument	1		1024475	0					
ANR	1027783	PrimaryExpression	1		1024475	0					
ANR	1027784	ExpressionStatement	r_cons_break_pop ( )	3459:4:98893:98912	1024475	4	True				
ANR	1027785	CallExpression	r_cons_break_pop ( )		1024475	0					
ANR	1027786	Callee	r_cons_break_pop		1024475	0					
ANR	1027787	Identifier	r_cons_break_pop		1024475	0					
ANR	1027788	ArgumentList			1024475	1					
ANR	1027789	IfStatement	if ( json )		1024475	20					
ANR	1027790	Condition	json	3461:7:98926:98929	1024475	0	True				
ANR	1027791	Identifier	json		1024475	0					
ANR	1027792	CompoundStatement		518:13:15255:15255	1024475	1					
ANR	1027793	ExpressionStatement	"r_cons_printf ( ""]"" )"	3462:4:98938:98957	1024475	0	True				
ANR	1027794	CallExpression	"r_cons_printf ( ""]"" )"		1024475	0					
ANR	1027795	Callee	r_cons_printf		1024475	0					
ANR	1027796	Identifier	r_cons_printf		1024475	0					
ANR	1027797	ArgumentList	"""]"""		1024475	1					
ANR	1027798	Argument	"""]"""		1024475	0					
ANR	1027799	PrimaryExpression	"""]"""		1024475	0					
ANR	1027800	ElseStatement	else		1024475	0					
ANR	1027801	CompoundStatement		521:9:15296:15296	1024475	0					
ANR	1027802	ExpressionStatement	"eprintf ( ""Usage: /m [file]\\n"" )"	3465:3:98978:99008	1024475	0	True				
ANR	1027803	CallExpression	"eprintf ( ""Usage: /m [file]\\n"" )"		1024475	0					
ANR	1027804	Callee	eprintf		1024475	0					
ANR	1027805	Identifier	eprintf		1024475	0					
ANR	1027806	ArgumentList	"""Usage: /m [file]\\n"""		1024475	1					
ANR	1027807	Argument	"""Usage: /m [file]\\n"""		1024475	0					
ANR	1027808	PrimaryExpression	"""Usage: /m [file]\\n"""		1024475	0					
ANR	1027809	ExpressionStatement	r_cons_clear_line ( 1 )	3467:2:99016:99037	1024475	28	True				
ANR	1027810	CallExpression	r_cons_clear_line ( 1 )		1024475	0					
ANR	1027811	Callee	r_cons_clear_line		1024475	0					
ANR	1027812	Identifier	r_cons_clear_line		1024475	0					
ANR	1027813	ArgumentList	1		1024475	1					
ANR	1027814	Argument	1		1024475	0					
ANR	1027815	PrimaryExpression	1		1024475	0					
ANR	1027816	BreakStatement	break ;	3468:2:99041:99046	1024475	29	True				
ANR	1027817	Label	case 'p' :	3469:1:99049:99057	1024475	30	True				
ANR	1027818	CompoundStatement		527:1:15391:15391	1024475	31					
ANR	1027819	IfStatement	if ( input [ param_offset - 1 ] )		1024475	0					
ANR	1027820	Condition	input [ param_offset - 1 ]	3471:6:99076:99098	1024475	0	True				
ANR	1027821	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1027822	Identifier	input		1024475	0					
ANR	1027823	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1027824	Identifier	param_offset		1024475	0					
ANR	1027825	PrimaryExpression	1		1024475	1					
ANR	1027826	CompoundStatement		529:3:15429:15465	1024475	1					
ANR	1027827	IdentifierDeclStatement	int ps = atoi ( input + param_offset ) ;	3472:3:99106:99142	1024475	0	True				
ANR	1027828	IdentifierDecl	ps = atoi ( input + param_offset )		1024475	0					
ANR	1027829	IdentifierDeclType	int		1024475	0					
ANR	1027830	Identifier	ps		1024475	1					
ANR	1027831	AssignmentExpression	ps = atoi ( input + param_offset )		1024475	2		=			
ANR	1027832	Identifier	ps		1024475	0					
ANR	1027833	CallExpression	atoi ( input + param_offset )		1024475	1					
ANR	1027834	Callee	atoi		1024475	0					
ANR	1027835	Identifier	atoi		1024475	0					
ANR	1027836	ArgumentList	input + param_offset		1024475	1					
ANR	1027837	Argument	input + param_offset		1024475	0					
ANR	1027838	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1027839	Identifier	input		1024475	0					
ANR	1027840	Identifier	param_offset		1024475	1					
ANR	1027841	IfStatement	if ( ps > 1 )		1024475	1					
ANR	1027842	Condition	ps > 1	3473:7:99151:99156	1024475	0	True				
ANR	1027843	RelationalExpression	ps > 1		1024475	0		>			
ANR	1027844	Identifier	ps		1024475	0					
ANR	1027845	PrimaryExpression	1		1024475	1					
ANR	1027846	CompoundStatement		532:4:15509:15520	1024475	1					
ANR	1027847	IdentifierDeclStatement	RListIter * iter ;	3474:4:99165:99180	1024475	0	True				
ANR	1027848	IdentifierDecl	* iter		1024475	0					
ANR	1027849	IdentifierDeclType	RListIter *		1024475	0					
ANR	1027850	Identifier	iter		1024475	1					
ANR	1027851	IdentifierDeclStatement	RIOMap * map ;	3475:4:99186:99197	1024475	1	True				
ANR	1027852	IdentifierDecl	* map		1024475	0					
ANR	1027853	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1027854	Identifier	map		1024475	1					
ANR	1027855	Statement	r_list_foreach	3476:4:99203:99216	1024475	2	True				
ANR	1027856	Statement	(	3476:19:99218:99218	1024475	3	True				
ANR	1027857	Statement	param	3476:20:99219:99223	1024475	4	True				
ANR	1027858	Statement	.	3476:25:99224:99224	1024475	5	True				
ANR	1027859	Statement	boundaries	3476:26:99225:99234	1024475	6	True				
ANR	1027860	Statement	","	3476:36:99235:99235	1024475	7	True				
ANR	1027861	Statement	iter	3476:38:99237:99240	1024475	8	True				
ANR	1027862	Statement	","	3476:42:99241:99241	1024475	9	True				
ANR	1027863	Statement	map	3476:44:99243:99245	1024475	10	True				
ANR	1027864	Statement	)	3476:47:99246:99246	1024475	11	True				
ANR	1027865	CompoundStatement		533:49:15571:15571	1024475	12					
ANR	1027866	ExpressionStatement	"eprintf ( ""-- %llx %llx\\n"" , map -> itv . addr , r_itv_end ( map -> itv ) )"	3477:5:99255:99318	1024475	0	True				
ANR	1027867	CallExpression	"eprintf ( ""-- %llx %llx\\n"" , map -> itv . addr , r_itv_end ( map -> itv ) )"		1024475	0					
ANR	1027868	Callee	eprintf		1024475	0					
ANR	1027869	Identifier	eprintf		1024475	0					
ANR	1027870	ArgumentList	"""-- %llx %llx\\n"""		1024475	1					
ANR	1027871	Argument	"""-- %llx %llx\\n"""		1024475	0					
ANR	1027872	PrimaryExpression	"""-- %llx %llx\\n"""		1024475	0					
ANR	1027873	Argument	map -> itv . addr		1024475	1					
ANR	1027874	MemberAccess	map -> itv . addr		1024475	0					
ANR	1027875	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027876	Identifier	map		1024475	0					
ANR	1027877	Identifier	itv		1024475	1					
ANR	1027878	Identifier	addr		1024475	1					
ANR	1027879	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1027880	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1027881	Callee	r_itv_end		1024475	0					
ANR	1027882	Identifier	r_itv_end		1024475	0					
ANR	1027883	ArgumentList	map -> itv		1024475	1					
ANR	1027884	Argument	map -> itv		1024475	0					
ANR	1027885	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027886	Identifier	map		1024475	0					
ANR	1027887	Identifier	itv		1024475	1					
ANR	1027888	ExpressionStatement	"r_cons_break_push ( NULL , NULL )"	3478:5:99325:99355	1024475	1	True				
ANR	1027889	CallExpression	"r_cons_break_push ( NULL , NULL )"		1024475	0					
ANR	1027890	Callee	r_cons_break_push		1024475	0					
ANR	1027891	Identifier	r_cons_break_push		1024475	0					
ANR	1027892	ArgumentList	NULL		1024475	1					
ANR	1027893	Argument	NULL		1024475	0					
ANR	1027894	Identifier	NULL		1024475	0					
ANR	1027895	Argument	NULL		1024475	1					
ANR	1027896	Identifier	NULL		1024475	0					
ANR	1027897	ExpressionStatement	"r_search_pattern_size ( core -> search , ps )"	3479:5:99362:99402	1024475	2	True				
ANR	1027898	CallExpression	"r_search_pattern_size ( core -> search , ps )"		1024475	0					
ANR	1027899	Callee	r_search_pattern_size		1024475	0					
ANR	1027900	Identifier	r_search_pattern_size		1024475	0					
ANR	1027901	ArgumentList	core -> search		1024475	1					
ANR	1027902	Argument	core -> search		1024475	0					
ANR	1027903	PtrMemberAccess	core -> search		1024475	0					
ANR	1027904	Identifier	core		1024475	0					
ANR	1027905	Identifier	search		1024475	1					
ANR	1027906	Argument	ps		1024475	1					
ANR	1027907	Identifier	ps		1024475	0					
ANR	1027908	ExpressionStatement	"r_search_pattern ( core -> search , map -> itv . addr , r_itv_end ( map -> itv ) )"	3480:5:99409:99477	1024475	3	True				
ANR	1027909	CallExpression	"r_search_pattern ( core -> search , map -> itv . addr , r_itv_end ( map -> itv ) )"		1024475	0					
ANR	1027910	Callee	r_search_pattern		1024475	0					
ANR	1027911	Identifier	r_search_pattern		1024475	0					
ANR	1027912	ArgumentList	core -> search		1024475	1					
ANR	1027913	Argument	core -> search		1024475	0					
ANR	1027914	PtrMemberAccess	core -> search		1024475	0					
ANR	1027915	Identifier	core		1024475	0					
ANR	1027916	Identifier	search		1024475	1					
ANR	1027917	Argument	map -> itv . addr		1024475	1					
ANR	1027918	MemberAccess	map -> itv . addr		1024475	0					
ANR	1027919	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027920	Identifier	map		1024475	0					
ANR	1027921	Identifier	itv		1024475	1					
ANR	1027922	Identifier	addr		1024475	1					
ANR	1027923	Argument	r_itv_end ( map -> itv )		1024475	2					
ANR	1027924	CallExpression	r_itv_end ( map -> itv )		1024475	0					
ANR	1027925	Callee	r_itv_end		1024475	0					
ANR	1027926	Identifier	r_itv_end		1024475	0					
ANR	1027927	ArgumentList	map -> itv		1024475	1					
ANR	1027928	Argument	map -> itv		1024475	0					
ANR	1027929	PtrMemberAccess	map -> itv		1024475	0					
ANR	1027930	Identifier	map		1024475	0					
ANR	1027931	Identifier	itv		1024475	1					
ANR	1027932	ExpressionStatement	r_cons_break_pop ( )	3481:5:99484:99503	1024475	4	True				
ANR	1027933	CallExpression	r_cons_break_pop ( )		1024475	0					
ANR	1027934	Callee	r_cons_break_pop		1024475	0					
ANR	1027935	Identifier	r_cons_break_pop		1024475	0					
ANR	1027936	ArgumentList			1024475	1					
ANR	1027937	BreakStatement	break ;	3483:4:99515:99520	1024475	13	True				
ANR	1027938	ExpressionStatement	"eprintf ( ""Invalid pattern size (must be > 0)\\n"" )"	3486:2:99533:99581	1024475	1	True				
ANR	1027939	CallExpression	"eprintf ( ""Invalid pattern size (must be > 0)\\n"" )"		1024475	0					
ANR	1027940	Callee	eprintf		1024475	0					
ANR	1027941	Identifier	eprintf		1024475	0					
ANR	1027942	ArgumentList	"""Invalid pattern size (must be > 0)\\n"""		1024475	1					
ANR	1027943	Argument	"""Invalid pattern size (must be > 0)\\n"""		1024475	0					
ANR	1027944	PrimaryExpression	"""Invalid pattern size (must be > 0)\\n"""		1024475	0					
ANR	1027945	BreakStatement	break ;	3488:1:99587:99592	1024475	32	True				
ANR	1027946	Label	case 'P' :	3489:1:99595:99603	1024475	33	True				
ANR	1027947	ExpressionStatement	"search_similar_pattern ( core , atoi ( input + 1 ) , & param )"	3490:2:99615:99670	1024475	34	True				
ANR	1027948	CallExpression	"search_similar_pattern ( core , atoi ( input + 1 ) , & param )"		1024475	0					
ANR	1027949	Callee	search_similar_pattern		1024475	0					
ANR	1027950	Identifier	search_similar_pattern		1024475	0					
ANR	1027951	ArgumentList	core		1024475	1					
ANR	1027952	Argument	core		1024475	0					
ANR	1027953	Identifier	core		1024475	0					
ANR	1027954	Argument	atoi ( input + 1 )		1024475	1					
ANR	1027955	CallExpression	atoi ( input + 1 )		1024475	0					
ANR	1027956	Callee	atoi		1024475	0					
ANR	1027957	Identifier	atoi		1024475	0					
ANR	1027958	ArgumentList	input + 1		1024475	1					
ANR	1027959	Argument	input + 1		1024475	0					
ANR	1027960	AdditiveExpression	input + 1		1024475	0		+			
ANR	1027961	Identifier	input		1024475	0					
ANR	1027962	PrimaryExpression	1		1024475	1					
ANR	1027963	Argument	& param		1024475	2					
ANR	1027964	UnaryOperationExpression	& param		1024475	0					
ANR	1027965	UnaryOperator	&		1024475	0					
ANR	1027966	Identifier	param		1024475	1					
ANR	1027967	BreakStatement	break ;	3491:2:99674:99679	1024475	35	True				
ANR	1027968	Label	case 'V' :	3492:1:99682:99690	1024475	36	True				
ANR	1027969	CompoundStatement		557:3:16184:16230	1024475	37					
ANR	1027970	IfStatement	if ( input [ 2 ] == 'j' )		1024475	0					
ANR	1027971	Condition	input [ 2 ] == 'j'	3494:7:99711:99725	1024475	0	True				
ANR	1027972	EqualityExpression	input [ 2 ] == 'j'		1024475	0		==			
ANR	1027973	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1027974	Identifier	input		1024475	0					
ANR	1027975	PrimaryExpression	2		1024475	1					
ANR	1027976	PrimaryExpression	'j'		1024475	1					
ANR	1027977	CompoundStatement		551:24:16051:16051	1024475	1					
ANR	1027978	ExpressionStatement	json = true	3495:4:99734:99745	1024475	0	True				
ANR	1027979	AssignmentExpression	json = true		1024475	0		=			
ANR	1027980	Identifier	json		1024475	0					
ANR	1027981	Identifier	true		1024475	1					
ANR	1027982	ExpressionStatement	param_offset ++	3496:4:99751:99765	1024475	1	True				
ANR	1027983	PostIncDecOperationExpression	param_offset ++		1024475	0					
ANR	1027984	Identifier	param_offset		1024475	0					
ANR	1027985	IncDec	++		1024475	1					
ANR	1027986	IdentifierDeclStatement	"int err = 1 , vsize = atoi ( input + 1 ) ;"	3498:3:99775:99812	1024475	1	True				
ANR	1027987	IdentifierDecl	err = 1		1024475	0					
ANR	1027988	IdentifierDeclType	int		1024475	0					
ANR	1027989	Identifier	err		1024475	1					
ANR	1027990	AssignmentExpression	err = 1		1024475	2		=			
ANR	1027991	Identifier	err		1024475	0					
ANR	1027992	PrimaryExpression	1		1024475	1					
ANR	1027993	IdentifierDecl	vsize = atoi ( input + 1 )		1024475	1					
ANR	1027994	IdentifierDeclType	int		1024475	0					
ANR	1027995	Identifier	vsize		1024475	1					
ANR	1027996	AssignmentExpression	vsize = atoi ( input + 1 )		1024475	2		=			
ANR	1027997	Identifier	vsize		1024475	0					
ANR	1027998	CallExpression	atoi ( input + 1 )		1024475	1					
ANR	1027999	Callee	atoi		1024475	0					
ANR	1028000	Identifier	atoi		1024475	0					
ANR	1028001	ArgumentList	input + 1		1024475	1					
ANR	1028002	Argument	input + 1		1024475	0					
ANR	1028003	AdditiveExpression	input + 1		1024475	0		+			
ANR	1028004	Identifier	input		1024475	0					
ANR	1028005	PrimaryExpression	1		1024475	1					
ANR	1028006	IdentifierDeclStatement	"bool asterisk = strchr ( input + 1 , '*' ) ;"	3499:3:99817:99856	1024475	2	True				
ANR	1028007	IdentifierDecl	"asterisk = strchr ( input + 1 , '*' )"		1024475	0					
ANR	1028008	IdentifierDeclType	bool		1024475	0					
ANR	1028009	Identifier	asterisk		1024475	1					
ANR	1028010	AssignmentExpression	"asterisk = strchr ( input + 1 , '*' )"		1024475	2		=			
ANR	1028011	Identifier	asterisk		1024475	0					
ANR	1028012	CallExpression	"strchr ( input + 1 , '*' )"		1024475	1					
ANR	1028013	Callee	strchr		1024475	0					
ANR	1028014	Identifier	strchr		1024475	0					
ANR	1028015	ArgumentList	input + 1		1024475	1					
ANR	1028016	Argument	input + 1		1024475	0					
ANR	1028017	AdditiveExpression	input + 1		1024475	0		+			
ANR	1028018	Identifier	input		1024475	0					
ANR	1028019	PrimaryExpression	1		1024475	1					
ANR	1028020	Argument	'*'		1024475	1					
ANR	1028021	PrimaryExpression	'*'		1024475	0					
ANR	1028022	IdentifierDeclStatement	const char * num_str = input + param_offset + 1 ;	3500:3:99861:99907	1024475	3	True				
ANR	1028023	IdentifierDecl	* num_str = input + param_offset + 1		1024475	0					
ANR	1028024	IdentifierDeclType	const char *		1024475	0					
ANR	1028025	Identifier	num_str		1024475	1					
ANR	1028026	AssignmentExpression	* num_str = input + param_offset + 1		1024475	2		=			
ANR	1028027	Identifier	num_str		1024475	0					
ANR	1028028	AdditiveExpression	input + param_offset + 1		1024475	1		+			
ANR	1028029	Identifier	input		1024475	0					
ANR	1028030	AdditiveExpression	param_offset + 1		1024475	1		+			
ANR	1028031	Identifier	param_offset		1024475	0					
ANR	1028032	PrimaryExpression	1		1024475	1					
ANR	1028033	IfStatement	if ( vsize && input [ 2 ] && num_str )		1024475	4					
ANR	1028034	Condition	vsize && input [ 2 ] && num_str	3501:7:99916:99943	1024475	0	True				
ANR	1028035	AndExpression	vsize && input [ 2 ] && num_str		1024475	0		&&			
ANR	1028036	Identifier	vsize		1024475	0					
ANR	1028037	AndExpression	input [ 2 ] && num_str		1024475	1		&&			
ANR	1028038	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1028039	Identifier	input		1024475	0					
ANR	1028040	PrimaryExpression	2		1024475	1					
ANR	1028041	Identifier	num_str		1024475	1					
ANR	1028042	CompoundStatement		562:4:16323:16354	1024475	1					
ANR	1028043	IfStatement	if ( json )		1024475	0					
ANR	1028044	Condition	json	3502:8:99956:99959	1024475	0	True				
ANR	1028045	Identifier	json		1024475	0					
ANR	1028046	CompoundStatement		559:14:16285:16285	1024475	1					
ANR	1028047	ExpressionStatement	"r_cons_printf ( ""["" )"	3503:5:99969:99988	1024475	0	True				
ANR	1028048	CallExpression	"r_cons_printf ( ""["" )"		1024475	0					
ANR	1028049	Callee	r_cons_printf		1024475	0					
ANR	1028050	Identifier	r_cons_printf		1024475	0					
ANR	1028051	ArgumentList	"""["""		1024475	1					
ANR	1028052	Argument	"""["""		1024475	0					
ANR	1028053	PrimaryExpression	"""["""		1024475	0					
ANR	1028054	IdentifierDeclStatement	"char * w = strchr ( num_str , ' ' ) ;"	3505:4:100000:100031	1024475	1	True				
ANR	1028055	IdentifierDecl	"* w = strchr ( num_str , ' ' )"		1024475	0					
ANR	1028056	IdentifierDeclType	char *		1024475	0					
ANR	1028057	Identifier	w		1024475	1					
ANR	1028058	AssignmentExpression	"* w = strchr ( num_str , ' ' )"		1024475	2		=			
ANR	1028059	Identifier	w		1024475	0					
ANR	1028060	CallExpression	"strchr ( num_str , ' ' )"		1024475	1					
ANR	1028061	Callee	strchr		1024475	0					
ANR	1028062	Identifier	strchr		1024475	0					
ANR	1028063	ArgumentList	num_str		1024475	1					
ANR	1028064	Argument	num_str		1024475	0					
ANR	1028065	Identifier	num_str		1024475	0					
ANR	1028066	Argument	' '		1024475	1					
ANR	1028067	PrimaryExpression	' '		1024475	0					
ANR	1028068	IfStatement	if ( w )		1024475	2					
ANR	1028069	Condition	w	3506:8:100041:100041	1024475	0	True				
ANR	1028070	Identifier	w		1024475	0					
ANR	1028071	CompoundStatement		566:5:16439:16476	1024475	1					
ANR	1028072	ExpressionStatement	* w ++ = 0	3507:5:100051:100059	1024475	0	True				
ANR	1028073	AssignmentExpression	* w ++ = 0		1024475	0		=			
ANR	1028074	UnaryOperationExpression	* w ++		1024475	0					
ANR	1028075	UnaryOperator	*		1024475	0					
ANR	1028076	PostIncDecOperationExpression	w ++		1024475	1					
ANR	1028077	Identifier	w		1024475	0					
ANR	1028078	IncDec	++		1024475	1					
ANR	1028079	PrimaryExpression	0		1024475	1					
ANR	1028080	IdentifierDeclStatement	"ut64 vmin = r_num_math ( core -> num , num_str ) ;"	3508:5:100066:100109	1024475	1	True				
ANR	1028081	IdentifierDecl	"vmin = r_num_math ( core -> num , num_str )"		1024475	0					
ANR	1028082	IdentifierDeclType	ut64		1024475	0					
ANR	1028083	Identifier	vmin		1024475	1					
ANR	1028084	AssignmentExpression	"vmin = r_num_math ( core -> num , num_str )"		1024475	2		=			
ANR	1028085	Identifier	vmin		1024475	0					
ANR	1028086	CallExpression	"r_num_math ( core -> num , num_str )"		1024475	1					
ANR	1028087	Callee	r_num_math		1024475	0					
ANR	1028088	Identifier	r_num_math		1024475	0					
ANR	1028089	ArgumentList	core -> num		1024475	1					
ANR	1028090	Argument	core -> num		1024475	0					
ANR	1028091	PtrMemberAccess	core -> num		1024475	0					
ANR	1028092	Identifier	core		1024475	0					
ANR	1028093	Identifier	num		1024475	1					
ANR	1028094	Argument	num_str		1024475	1					
ANR	1028095	Identifier	num_str		1024475	0					
ANR	1028096	IdentifierDeclStatement	"ut64 vmax = r_num_math ( core -> num , w ) ;"	3509:5:100116:100153	1024475	2	True				
ANR	1028097	IdentifierDecl	"vmax = r_num_math ( core -> num , w )"		1024475	0					
ANR	1028098	IdentifierDeclType	ut64		1024475	0					
ANR	1028099	Identifier	vmax		1024475	1					
ANR	1028100	AssignmentExpression	"vmax = r_num_math ( core -> num , w )"		1024475	2		=			
ANR	1028101	Identifier	vmax		1024475	0					
ANR	1028102	CallExpression	"r_num_math ( core -> num , w )"		1024475	1					
ANR	1028103	Callee	r_num_math		1024475	0					
ANR	1028104	Identifier	r_num_math		1024475	0					
ANR	1028105	ArgumentList	core -> num		1024475	1					
ANR	1028106	Argument	core -> num		1024475	0					
ANR	1028107	PtrMemberAccess	core -> num		1024475	0					
ANR	1028108	Identifier	core		1024475	0					
ANR	1028109	Identifier	num		1024475	1					
ANR	1028110	Argument	w		1024475	1					
ANR	1028111	Identifier	w		1024475	0					
ANR	1028112	IfStatement	if ( vsize > 0 )		1024475	3					
ANR	1028113	Condition	vsize > 0	3510:9:100164:100172	1024475	0	True				
ANR	1028114	RelationalExpression	vsize > 0		1024475	0		>			
ANR	1028115	Identifier	vsize		1024475	0					
ANR	1028116	PrimaryExpression	0		1024475	1					
ANR	1028117	CompoundStatement		569:6:16525:16540	1024475	1					
ANR	1028118	IdentifierDeclStatement	RIOMap * map ;	3511:6:100183:100194	1024475	0	True				
ANR	1028119	IdentifierDecl	* map		1024475	0					
ANR	1028120	IdentifierDeclType	RIOMap *		1024475	0					
ANR	1028121	Identifier	map		1024475	1					
ANR	1028122	IdentifierDeclStatement	RListIter * iter ;	3512:6:100202:100217	1024475	1	True				
ANR	1028123	IdentifierDecl	* iter		1024475	0					
ANR	1028124	IdentifierDeclType	RListIter *		1024475	0					
ANR	1028125	Identifier	iter		1024475	1					
ANR	1028126	Statement	r_list_foreach	3513:6:100225:100238	1024475	2	True				
ANR	1028127	Statement	(	3513:21:100240:100240	1024475	3	True				
ANR	1028128	Statement	param	3513:22:100241:100245	1024475	4	True				
ANR	1028129	Statement	.	3513:27:100246:100246	1024475	5	True				
ANR	1028130	Statement	boundaries	3513:28:100247:100256	1024475	6	True				
ANR	1028131	Statement	","	3513:38:100257:100257	1024475	7	True				
ANR	1028132	Statement	iter	3513:40:100259:100262	1024475	8	True				
ANR	1028133	Statement	","	3513:44:100263:100263	1024475	9	True				
ANR	1028134	Statement	map	3513:46:100265:100267	1024475	10	True				
ANR	1028135	Statement	)	3513:49:100268:100268	1024475	11	True				
ANR	1028136	CompoundStatement		572:7:16618:16740	1024475	12					
ANR	1028137	ExpressionStatement	err = 0	3514:7:100279:100286	1024475	0	True				
ANR	1028138	AssignmentExpression	err = 0		1024475	0		=			
ANR	1028139	Identifier	err		1024475	0					
ANR	1028140	PrimaryExpression	0		1024475	1					
ANR	1028141	IdentifierDeclStatement	"int hits = r_core_search_value_in_range ( core , map -> itv , vmin , vmax , vsize , asterisk , _CbInRangeSearchV ) ;"	3515:7:100295:100417	1024475	1	True				
ANR	1028142	IdentifierDecl	"hits = r_core_search_value_in_range ( core , map -> itv , vmin , vmax , vsize , asterisk , _CbInRangeSearchV )"		1024475	0					
ANR	1028143	IdentifierDeclType	int		1024475	0					
ANR	1028144	Identifier	hits		1024475	1					
ANR	1028145	AssignmentExpression	"hits = r_core_search_value_in_range ( core , map -> itv , vmin , vmax , vsize , asterisk , _CbInRangeSearchV )"		1024475	2		=			
ANR	1028146	Identifier	hits		1024475	0					
ANR	1028147	CallExpression	"r_core_search_value_in_range ( core , map -> itv , vmin , vmax , vsize , asterisk , _CbInRangeSearchV )"		1024475	1					
ANR	1028148	Callee	r_core_search_value_in_range		1024475	0					
ANR	1028149	Identifier	r_core_search_value_in_range		1024475	0					
ANR	1028150	ArgumentList	core		1024475	1					
ANR	1028151	Argument	core		1024475	0					
ANR	1028152	Identifier	core		1024475	0					
ANR	1028153	Argument	map -> itv		1024475	1					
ANR	1028154	PtrMemberAccess	map -> itv		1024475	0					
ANR	1028155	Identifier	map		1024475	0					
ANR	1028156	Identifier	itv		1024475	1					
ANR	1028157	Argument	vmin		1024475	2					
ANR	1028158	Identifier	vmin		1024475	0					
ANR	1028159	Argument	vmax		1024475	3					
ANR	1028160	Identifier	vmax		1024475	0					
ANR	1028161	Argument	vsize		1024475	4					
ANR	1028162	Identifier	vsize		1024475	0					
ANR	1028163	Argument	asterisk		1024475	5					
ANR	1028164	Identifier	asterisk		1024475	0					
ANR	1028165	Argument	_CbInRangeSearchV		1024475	6					
ANR	1028166	Identifier	_CbInRangeSearchV		1024475	0					
ANR	1028167	IfStatement	if ( ! json )		1024475	2					
ANR	1028168	Condition	! json	3518:11:100430:100434	1024475	0	True				
ANR	1028169	UnaryOperationExpression	! json		1024475	0					
ANR	1028170	UnaryOperator	!		1024475	0					
ANR	1028171	Identifier	json		1024475	1					
ANR	1028172	CompoundStatement		575:18:16760:16760	1024475	1					
ANR	1028173	ExpressionStatement	"eprintf ( ""hits: %d\\n"" , hits )"	3519:8:100447:100475	1024475	0	True				
ANR	1028174	CallExpression	"eprintf ( ""hits: %d\\n"" , hits )"		1024475	0					
ANR	1028175	Callee	eprintf		1024475	0					
ANR	1028176	Identifier	eprintf		1024475	0					
ANR	1028177	ArgumentList	"""hits: %d\\n"""		1024475	1					
ANR	1028178	Argument	"""hits: %d\\n"""		1024475	0					
ANR	1028179	PrimaryExpression	"""hits: %d\\n"""		1024475	0					
ANR	1028180	Argument	hits		1024475	1					
ANR	1028181	Identifier	hits		1024475	0					
ANR	1028182	IfStatement	if ( json )		1024475	3					
ANR	1028183	Condition	json	3524:8:100515:100518	1024475	0	True				
ANR	1028184	Identifier	json		1024475	0					
ANR	1028185	CompoundStatement		581:14:16844:16844	1024475	1					
ANR	1028186	ExpressionStatement	"r_cons_printf ( ""]"" )"	3525:5:100528:100547	1024475	0	True				
ANR	1028187	CallExpression	"r_cons_printf ( ""]"" )"		1024475	0					
ANR	1028188	Callee	r_cons_printf		1024475	0					
ANR	1028189	Identifier	r_cons_printf		1024475	0					
ANR	1028190	ArgumentList	"""]"""		1024475	1					
ANR	1028191	Argument	"""]"""		1024475	0					
ANR	1028192	PrimaryExpression	"""]"""		1024475	0					
ANR	1028193	IfStatement	if ( err )		1024475	5					
ANR	1028194	Condition	err	3528:7:100567:100569	1024475	0	True				
ANR	1028195	Identifier	err		1024475	0					
ANR	1028196	CompoundStatement		585:12:16895:16895	1024475	1					
ANR	1028197	ExpressionStatement	"eprintf ( ""Usage: /V[1|2|4|8] [minval] [maxval]\\n"" )"	3529:4:100578:100628	1024475	0	True				
ANR	1028198	CallExpression	"eprintf ( ""Usage: /V[1|2|4|8] [minval] [maxval]\\n"" )"		1024475	0					
ANR	1028199	Callee	eprintf		1024475	0					
ANR	1028200	Identifier	eprintf		1024475	0					
ANR	1028201	ArgumentList	"""Usage: /V[1|2|4|8] [minval] [maxval]\\n"""		1024475	1					
ANR	1028202	Argument	"""Usage: /V[1|2|4|8] [minval] [maxval]\\n"""		1024475	0					
ANR	1028203	PrimaryExpression	"""Usage: /V[1|2|4|8] [minval] [maxval]\\n"""		1024475	0					
ANR	1028204	ExpressionStatement	dosearch = false	3532:2:100641:100657	1024475	38	True				
ANR	1028205	AssignmentExpression	dosearch = false		1024475	0		=			
ANR	1028206	Identifier	dosearch		1024475	0					
ANR	1028207	Identifier	false		1024475	1					
ANR	1028208	BreakStatement	break ;	3533:2:100661:100666	1024475	39	True				
ANR	1028209	Label	case 'v' :	3534:1:100669:100677	1024475	40	True				
ANR	1028210	IfStatement	if ( input [ 1 ] )		1024475	41					
ANR	1028211	Condition	input [ 1 ]	3535:6:100693:100700	1024475	0	True				
ANR	1028212	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1028213	Identifier	input		1024475	0					
ANR	1028214	PrimaryExpression	1		1024475	1					
ANR	1028215	CompoundStatement		592:16:17026:17026	1024475	1					
ANR	1028216	IfStatement	if ( input [ 1 ] == '?' )		1024475	0					
ANR	1028217	Condition	input [ 1 ] == '?'	3536:7:100712:100726	1024475	0	True				
ANR	1028218	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1028219	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1028220	Identifier	input		1024475	0					
ANR	1028221	PrimaryExpression	1		1024475	1					
ANR	1028222	PrimaryExpression	'?'		1024475	1					
ANR	1028223	CompoundStatement		593:24:17052:17052	1024475	1					
ANR	1028224	ExpressionStatement	"r_cons_print ( ""Usage: /v[1|2|4|8] [value]\\n"" )"	3537:4:100735:100780	1024475	0	True				
ANR	1028225	CallExpression	"r_cons_print ( ""Usage: /v[1|2|4|8] [value]\\n"" )"		1024475	0					
ANR	1028226	Callee	r_cons_print		1024475	0					
ANR	1028227	Identifier	r_cons_print		1024475	0					
ANR	1028228	ArgumentList	"""Usage: /v[1|2|4|8] [value]\\n"""		1024475	1					
ANR	1028229	Argument	"""Usage: /v[1|2|4|8] [value]\\n"""		1024475	0					
ANR	1028230	PrimaryExpression	"""Usage: /v[1|2|4|8] [value]\\n"""		1024475	0					
ANR	1028231	BreakStatement	break ;	3538:4:100786:100791	1024475	1	True				
ANR	1028232	IfStatement	if ( input [ 2 ] == 'j' )		1024475	1					
ANR	1028233	Condition	input [ 2 ] == 'j'	3540:7:100805:100819	1024475	0	True				
ANR	1028234	EqualityExpression	input [ 2 ] == 'j'		1024475	0		==			
ANR	1028235	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1028236	Identifier	input		1024475	0					
ANR	1028237	PrimaryExpression	2		1024475	1					
ANR	1028238	PrimaryExpression	'j'		1024475	1					
ANR	1028239	CompoundStatement		597:24:17145:17145	1024475	1					
ANR	1028240	ExpressionStatement	json = true	3541:4:100828:100839	1024475	0	True				
ANR	1028241	AssignmentExpression	json = true		1024475	0		=			
ANR	1028242	Identifier	json		1024475	0					
ANR	1028243	Identifier	true		1024475	1					
ANR	1028244	ExpressionStatement	param_offset ++	3542:4:100845:100859	1024475	1	True				
ANR	1028245	PostIncDecOperationExpression	param_offset ++		1024475	0					
ANR	1028246	Identifier	param_offset		1024475	0					
ANR	1028247	IncDec	++		1024475	1					
ANR	1028248	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	3545:2:100872:100919	1024475	42	True				
ANR	1028249	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1024475	0					
ANR	1028250	Callee	r_search_reset		1024475	0					
ANR	1028251	Identifier	r_search_reset		1024475	0					
ANR	1028252	ArgumentList	core -> search		1024475	1					
ANR	1028253	Argument	core -> search		1024475	0					
ANR	1028254	PtrMemberAccess	core -> search		1024475	0					
ANR	1028255	Identifier	core		1024475	0					
ANR	1028256	Identifier	search		1024475	1					
ANR	1028257	Argument	R_SEARCH_KEYWORD		1024475	1					
ANR	1028258	Identifier	R_SEARCH_KEYWORD		1024475	0					
ANR	1028259	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3546:2:100923:101018	1024475	43	True				
ANR	1028260	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1028261	Callee	r_search_set_distance		1024475	0					
ANR	1028262	Identifier	r_search_set_distance		1024475	0					
ANR	1028263	ArgumentList	core -> search		1024475	1					
ANR	1028264	Argument	core -> search		1024475	0					
ANR	1028265	PtrMemberAccess	core -> search		1024475	0					
ANR	1028266	Identifier	core		1024475	0					
ANR	1028267	Identifier	search		1024475	1					
ANR	1028268	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1028269	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1028270	CastTarget	int		1024475	0					
ANR	1028271	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1028272	Callee	r_config_get_i		1024475	0					
ANR	1028273	Identifier	r_config_get_i		1024475	0					
ANR	1028274	ArgumentList	core -> config		1024475	1					
ANR	1028275	Argument	core -> config		1024475	0					
ANR	1028276	PtrMemberAccess	core -> config		1024475	0					
ANR	1028277	Identifier	core		1024475	0					
ANR	1028278	Identifier	config		1024475	1					
ANR	1028279	Argument	"""search.distance"""		1024475	1					
ANR	1028280	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1028281	IdentifierDeclStatement	char * v_str = ( char * ) r_str_trim_ro ( input + param_offset ) ;	3548:2:101022:101080	1024475	44	True				
ANR	1028282	IdentifierDecl	* v_str = ( char * ) r_str_trim_ro ( input + param_offset )		1024475	0					
ANR	1028283	IdentifierDeclType	char *		1024475	0					
ANR	1028284	Identifier	v_str		1024475	1					
ANR	1028285	AssignmentExpression	* v_str = ( char * ) r_str_trim_ro ( input + param_offset )		1024475	2		=			
ANR	1028286	Identifier	v_str		1024475	0					
ANR	1028287	CastExpression	( char * ) r_str_trim_ro ( input + param_offset )		1024475	1					
ANR	1028288	CastTarget	char *		1024475	0					
ANR	1028289	CallExpression	r_str_trim_ro ( input + param_offset )		1024475	1					
ANR	1028290	Callee	r_str_trim_ro		1024475	0					
ANR	1028291	Identifier	r_str_trim_ro		1024475	0					
ANR	1028292	ArgumentList	input + param_offset		1024475	1					
ANR	1028293	Argument	input + param_offset		1024475	0					
ANR	1028294	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1028295	Identifier	input		1024475	0					
ANR	1028296	Identifier	param_offset		1024475	1					
ANR	1028297	IdentifierDeclStatement	RList * nums = r_num_str_split_list ( v_str ) ;	3549:2:101084:101126	1024475	45	True				
ANR	1028298	IdentifierDecl	* nums = r_num_str_split_list ( v_str )		1024475	0					
ANR	1028299	IdentifierDeclType	RList *		1024475	0					
ANR	1028300	Identifier	nums		1024475	1					
ANR	1028301	AssignmentExpression	* nums = r_num_str_split_list ( v_str )		1024475	2		=			
ANR	1028302	Identifier	nums		1024475	0					
ANR	1028303	CallExpression	r_num_str_split_list ( v_str )		1024475	1					
ANR	1028304	Callee	r_num_str_split_list		1024475	0					
ANR	1028305	Identifier	r_num_str_split_list		1024475	0					
ANR	1028306	ArgumentList	v_str		1024475	1					
ANR	1028307	Argument	v_str		1024475	0					
ANR	1028308	Identifier	v_str		1024475	0					
ANR	1028309	IdentifierDeclStatement	int len = r_list_length ( nums ) ;	3550:2:101130:101160	1024475	46	True				
ANR	1028310	IdentifierDecl	len = r_list_length ( nums )		1024475	0					
ANR	1028311	IdentifierDeclType	int		1024475	0					
ANR	1028312	Identifier	len		1024475	1					
ANR	1028313	AssignmentExpression	len = r_list_length ( nums )		1024475	2		=			
ANR	1028314	Identifier	len		1024475	0					
ANR	1028315	CallExpression	r_list_length ( nums )		1024475	1					
ANR	1028316	Callee	r_list_length		1024475	0					
ANR	1028317	Identifier	r_list_length		1024475	0					
ANR	1028318	ArgumentList	nums		1024475	1					
ANR	1028319	Argument	nums		1024475	0					
ANR	1028320	Identifier	nums		1024475	0					
ANR	1028321	IdentifierDeclStatement	int bsize = 0 ;	3551:2:101164:101177	1024475	47	True				
ANR	1028322	IdentifierDecl	bsize = 0		1024475	0					
ANR	1028323	IdentifierDeclType	int		1024475	0					
ANR	1028324	Identifier	bsize		1024475	1					
ANR	1028325	AssignmentExpression	bsize = 0		1024475	2		=			
ANR	1028326	Identifier	bsize		1024475	0					
ANR	1028327	PrimaryExpression	0		1024475	1					
ANR	1028328	IdentifierDeclStatement	ut8 * v_buf = NULL ;	3552:2:101181:101198	1024475	48	True				
ANR	1028329	IdentifierDecl	* v_buf = NULL		1024475	0					
ANR	1028330	IdentifierDeclType	ut8 *		1024475	0					
ANR	1028331	Identifier	v_buf		1024475	1					
ANR	1028332	AssignmentExpression	* v_buf = NULL		1024475	2		=			
ANR	1028333	Identifier	NULL		1024475	0					
ANR	1028334	Identifier	NULL		1024475	1					
ANR	1028335	SwitchStatement	switch ( input [ 1 ] )		1024475	49					
ANR	1028336	Condition	input [ 1 ]	3553:10:101210:101217	1024475	0	True				
ANR	1028337	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1028338	Identifier	input		1024475	0					
ANR	1028339	PrimaryExpression	1		1024475	1					
ANR	1028340	CompoundStatement		610:20:17543:17543	1024475	1					
ANR	1028341	Label	case '8' :	3554:2:101224:101232	1024475	0	True				
ANR	1028342	IfStatement	if ( input [ param_offset ] )		1024475	1					
ANR	1028343	Condition	input [ param_offset ]	3555:7:101241:101259	1024475	0	True				
ANR	1028344	ArrayIndexing	input [ param_offset ]		1024475	0					
ANR	1028345	Identifier	input		1024475	0					
ANR	1028346	Identifier	param_offset		1024475	1					
ANR	1028347	CompoundStatement		612:28:17585:17585	1024475	1					
ANR	1028348	ExpressionStatement	bsize = sizeof ( ut64 ) * len	3556:4:101268:101295	1024475	0	True				
ANR	1028349	AssignmentExpression	bsize = sizeof ( ut64 ) * len		1024475	0		=			
ANR	1028350	Identifier	bsize		1024475	0					
ANR	1028351	MultiplicativeExpression	sizeof ( ut64 ) * len		1024475	1		*			
ANR	1028352	SizeofExpression	sizeof ( ut64 )		1024475	0					
ANR	1028353	Sizeof	sizeof		1024475	0					
ANR	1028354	SizeofOperand	ut64		1024475	1					
ANR	1028355	Identifier	len		1024475	1					
ANR	1028356	ExpressionStatement	"v_buf = v_writebuf ( core , nums , len , '8' , bsize )"	3557:4:101301:101349	1024475	1	True				
ANR	1028357	AssignmentExpression	"v_buf = v_writebuf ( core , nums , len , '8' , bsize )"		1024475	0		=			
ANR	1028358	Identifier	v_buf		1024475	0					
ANR	1028359	CallExpression	"v_writebuf ( core , nums , len , '8' , bsize )"		1024475	1					
ANR	1028360	Callee	v_writebuf		1024475	0					
ANR	1028361	Identifier	v_writebuf		1024475	0					
ANR	1028362	ArgumentList	core		1024475	1					
ANR	1028363	Argument	core		1024475	0					
ANR	1028364	Identifier	core		1024475	0					
ANR	1028365	Argument	nums		1024475	1					
ANR	1028366	Identifier	nums		1024475	0					
ANR	1028367	Argument	len		1024475	2					
ANR	1028368	Identifier	len		1024475	0					
ANR	1028369	Argument	'8'		1024475	3					
ANR	1028370	PrimaryExpression	'8'		1024475	0					
ANR	1028371	Argument	bsize		1024475	4					
ANR	1028372	Identifier	bsize		1024475	0					
ANR	1028373	ElseStatement	else		1024475	0					
ANR	1028374	CompoundStatement		615:10:17684:17684	1024475	0					
ANR	1028375	ExpressionStatement	"eprintf ( ""Usage: /v8 value\\n"" )"	3559:4:101367:101397	1024475	0	True				
ANR	1028376	CallExpression	"eprintf ( ""Usage: /v8 value\\n"" )"		1024475	0					
ANR	1028377	Callee	eprintf		1024475	0					
ANR	1028378	Identifier	eprintf		1024475	0					
ANR	1028379	ArgumentList	"""Usage: /v8 value\\n"""		1024475	1					
ANR	1028380	Argument	"""Usage: /v8 value\\n"""		1024475	0					
ANR	1028381	PrimaryExpression	"""Usage: /v8 value\\n"""		1024475	0					
ANR	1028382	BreakStatement	break ;	3561:3:101407:101412	1024475	2	True				
ANR	1028383	Label	case '1' :	3562:2:101416:101424	1024475	3	True				
ANR	1028384	IfStatement	if ( input [ param_offset ] )		1024475	4					
ANR	1028385	Condition	input [ param_offset ]	3563:7:101433:101451	1024475	0	True				
ANR	1028386	ArrayIndexing	input [ param_offset ]		1024475	0					
ANR	1028387	Identifier	input		1024475	0					
ANR	1028388	Identifier	param_offset		1024475	1					
ANR	1028389	CompoundStatement		620:28:17777:17777	1024475	1					
ANR	1028390	ExpressionStatement	bsize = sizeof ( ut8 ) * len	3564:4:101460:101486	1024475	0	True				
ANR	1028391	AssignmentExpression	bsize = sizeof ( ut8 ) * len		1024475	0		=			
ANR	1028392	Identifier	bsize		1024475	0					
ANR	1028393	MultiplicativeExpression	sizeof ( ut8 ) * len		1024475	1		*			
ANR	1028394	SizeofExpression	sizeof ( ut8 )		1024475	0					
ANR	1028395	Sizeof	sizeof		1024475	0					
ANR	1028396	SizeofOperand	ut8		1024475	1					
ANR	1028397	Identifier	len		1024475	1					
ANR	1028398	ExpressionStatement	"v_buf = v_writebuf ( core , nums , len , '1' , bsize )"	3565:4:101492:101540	1024475	1	True				
ANR	1028399	AssignmentExpression	"v_buf = v_writebuf ( core , nums , len , '1' , bsize )"		1024475	0		=			
ANR	1028400	Identifier	v_buf		1024475	0					
ANR	1028401	CallExpression	"v_writebuf ( core , nums , len , '1' , bsize )"		1024475	1					
ANR	1028402	Callee	v_writebuf		1024475	0					
ANR	1028403	Identifier	v_writebuf		1024475	0					
ANR	1028404	ArgumentList	core		1024475	1					
ANR	1028405	Argument	core		1024475	0					
ANR	1028406	Identifier	core		1024475	0					
ANR	1028407	Argument	nums		1024475	1					
ANR	1028408	Identifier	nums		1024475	0					
ANR	1028409	Argument	len		1024475	2					
ANR	1028410	Identifier	len		1024475	0					
ANR	1028411	Argument	'1'		1024475	3					
ANR	1028412	PrimaryExpression	'1'		1024475	0					
ANR	1028413	Argument	bsize		1024475	4					
ANR	1028414	Identifier	bsize		1024475	0					
ANR	1028415	ElseStatement	else		1024475	0					
ANR	1028416	CompoundStatement		623:10:17875:17875	1024475	0					
ANR	1028417	ExpressionStatement	"eprintf ( ""Usage: /v1 value\\n"" )"	3567:4:101558:101588	1024475	0	True				
ANR	1028418	CallExpression	"eprintf ( ""Usage: /v1 value\\n"" )"		1024475	0					
ANR	1028419	Callee	eprintf		1024475	0					
ANR	1028420	Identifier	eprintf		1024475	0					
ANR	1028421	ArgumentList	"""Usage: /v1 value\\n"""		1024475	1					
ANR	1028422	Argument	"""Usage: /v1 value\\n"""		1024475	0					
ANR	1028423	PrimaryExpression	"""Usage: /v1 value\\n"""		1024475	0					
ANR	1028424	BreakStatement	break ;	3569:3:101598:101603	1024475	5	True				
ANR	1028425	Label	case '2' :	3570:2:101607:101615	1024475	6	True				
ANR	1028426	IfStatement	if ( input [ param_offset ] )		1024475	7					
ANR	1028427	Condition	input [ param_offset ]	3571:7:101624:101642	1024475	0	True				
ANR	1028428	ArrayIndexing	input [ param_offset ]		1024475	0					
ANR	1028429	Identifier	input		1024475	0					
ANR	1028430	Identifier	param_offset		1024475	1					
ANR	1028431	CompoundStatement		628:28:17968:17968	1024475	1					
ANR	1028432	ExpressionStatement	bsize = sizeof ( ut16 ) * len	3572:4:101651:101678	1024475	0	True				
ANR	1028433	AssignmentExpression	bsize = sizeof ( ut16 ) * len		1024475	0		=			
ANR	1028434	Identifier	bsize		1024475	0					
ANR	1028435	MultiplicativeExpression	sizeof ( ut16 ) * len		1024475	1		*			
ANR	1028436	SizeofExpression	sizeof ( ut16 )		1024475	0					
ANR	1028437	Sizeof	sizeof		1024475	0					
ANR	1028438	SizeofOperand	ut16		1024475	1					
ANR	1028439	Identifier	len		1024475	1					
ANR	1028440	ExpressionStatement	"v_buf = v_writebuf ( core , nums , len , '2' , bsize )"	3573:4:101684:101732	1024475	1	True				
ANR	1028441	AssignmentExpression	"v_buf = v_writebuf ( core , nums , len , '2' , bsize )"		1024475	0		=			
ANR	1028442	Identifier	v_buf		1024475	0					
ANR	1028443	CallExpression	"v_writebuf ( core , nums , len , '2' , bsize )"		1024475	1					
ANR	1028444	Callee	v_writebuf		1024475	0					
ANR	1028445	Identifier	v_writebuf		1024475	0					
ANR	1028446	ArgumentList	core		1024475	1					
ANR	1028447	Argument	core		1024475	0					
ANR	1028448	Identifier	core		1024475	0					
ANR	1028449	Argument	nums		1024475	1					
ANR	1028450	Identifier	nums		1024475	0					
ANR	1028451	Argument	len		1024475	2					
ANR	1028452	Identifier	len		1024475	0					
ANR	1028453	Argument	'2'		1024475	3					
ANR	1028454	PrimaryExpression	'2'		1024475	0					
ANR	1028455	Argument	bsize		1024475	4					
ANR	1028456	Identifier	bsize		1024475	0					
ANR	1028457	ElseStatement	else		1024475	0					
ANR	1028458	CompoundStatement		631:10:18067:18067	1024475	0					
ANR	1028459	ExpressionStatement	"eprintf ( ""Usage: /v2 value\\n"" )"	3575:4:101750:101780	1024475	0	True				
ANR	1028460	CallExpression	"eprintf ( ""Usage: /v2 value\\n"" )"		1024475	0					
ANR	1028461	Callee	eprintf		1024475	0					
ANR	1028462	Identifier	eprintf		1024475	0					
ANR	1028463	ArgumentList	"""Usage: /v2 value\\n"""		1024475	1					
ANR	1028464	Argument	"""Usage: /v2 value\\n"""		1024475	0					
ANR	1028465	PrimaryExpression	"""Usage: /v2 value\\n"""		1024475	0					
ANR	1028466	BreakStatement	break ;	3577:3:101790:101795	1024475	8	True				
ANR	1028467	Label	default :	3578:2:101799:101806	1024475	9	True				
ANR	1028468	Identifier	default		1024475	0					
ANR	1028469	Label	case '4' :	3579:2:101826:101834	1024475	10	True				
ANR	1028470	IfStatement	if ( input [ param_offset - 1 ] )		1024475	11					
ANR	1028471	Condition	input [ param_offset - 1 ]	3580:7:101843:101865	1024475	0	True				
ANR	1028472	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1028473	Identifier	input		1024475	0					
ANR	1028474	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1028475	Identifier	param_offset		1024475	0					
ANR	1028476	PrimaryExpression	1		1024475	1					
ANR	1028477	CompoundStatement		637:32:18191:18191	1024475	1					
ANR	1028478	IfStatement	if ( input [ param_offset ] )		1024475	0					
ANR	1028479	Condition	input [ param_offset ]	3581:8:101878:101896	1024475	0	True				
ANR	1028480	ArrayIndexing	input [ param_offset ]		1024475	0					
ANR	1028481	Identifier	input		1024475	0					
ANR	1028482	Identifier	param_offset		1024475	1					
ANR	1028483	CompoundStatement		638:29:18222:18222	1024475	1					
ANR	1028484	ExpressionStatement	bsize = sizeof ( ut32 ) * len	3582:5:101906:101933	1024475	0	True				
ANR	1028485	AssignmentExpression	bsize = sizeof ( ut32 ) * len		1024475	0		=			
ANR	1028486	Identifier	bsize		1024475	0					
ANR	1028487	MultiplicativeExpression	sizeof ( ut32 ) * len		1024475	1		*			
ANR	1028488	SizeofExpression	sizeof ( ut32 )		1024475	0					
ANR	1028489	Sizeof	sizeof		1024475	0					
ANR	1028490	SizeofOperand	ut32		1024475	1					
ANR	1028491	Identifier	len		1024475	1					
ANR	1028492	ExpressionStatement	"v_buf = v_writebuf ( core , nums , len , '4' , bsize )"	3583:5:101940:101988	1024475	1	True				
ANR	1028493	AssignmentExpression	"v_buf = v_writebuf ( core , nums , len , '4' , bsize )"		1024475	0		=			
ANR	1028494	Identifier	v_buf		1024475	0					
ANR	1028495	CallExpression	"v_writebuf ( core , nums , len , '4' , bsize )"		1024475	1					
ANR	1028496	Callee	v_writebuf		1024475	0					
ANR	1028497	Identifier	v_writebuf		1024475	0					
ANR	1028498	ArgumentList	core		1024475	1					
ANR	1028499	Argument	core		1024475	0					
ANR	1028500	Identifier	core		1024475	0					
ANR	1028501	Argument	nums		1024475	1					
ANR	1028502	Identifier	nums		1024475	0					
ANR	1028503	Argument	len		1024475	2					
ANR	1028504	Identifier	len		1024475	0					
ANR	1028505	Argument	'4'		1024475	3					
ANR	1028506	PrimaryExpression	'4'		1024475	0					
ANR	1028507	Argument	bsize		1024475	4					
ANR	1028508	Identifier	bsize		1024475	0					
ANR	1028509	ElseStatement	else		1024475	0					
ANR	1028510	CompoundStatement		642:10:18329:18329	1024475	0					
ANR	1028511	ExpressionStatement	"eprintf ( ""Usage: /v4 value\\n"" )"	3586:4:102012:102042	1024475	0	True				
ANR	1028512	CallExpression	"eprintf ( ""Usage: /v4 value\\n"" )"		1024475	0					
ANR	1028513	Callee	eprintf		1024475	0					
ANR	1028514	Identifier	eprintf		1024475	0					
ANR	1028515	ArgumentList	"""Usage: /v4 value\\n"""		1024475	1					
ANR	1028516	Argument	"""Usage: /v4 value\\n"""		1024475	0					
ANR	1028517	PrimaryExpression	"""Usage: /v4 value\\n"""		1024475	0					
ANR	1028518	BreakStatement	break ;	3588:3:102052:102057	1024475	12	True				
ANR	1028519	IfStatement	if ( v_buf )		1024475	50					
ANR	1028520	Condition	v_buf	3590:6:102069:102073	1024475	0	True				
ANR	1028521	Identifier	v_buf		1024475	0					
ANR	1028522	CompoundStatement		647:13:18399:18399	1024475	1					
ANR	1028523	ExpressionStatement	"r_search_kw_add ( core -> search , r_search_keyword_new ( ( const ut8 * ) v_buf , bsize , NULL , 0 , NULL ) )"	3591:3:102081:102182	1024475	0	True				
ANR	1028524	CallExpression	"r_search_kw_add ( core -> search , r_search_keyword_new ( ( const ut8 * ) v_buf , bsize , NULL , 0 , NULL ) )"		1024475	0					
ANR	1028525	Callee	r_search_kw_add		1024475	0					
ANR	1028526	Identifier	r_search_kw_add		1024475	0					
ANR	1028527	ArgumentList	core -> search		1024475	1					
ANR	1028528	Argument	core -> search		1024475	0					
ANR	1028529	PtrMemberAccess	core -> search		1024475	0					
ANR	1028530	Identifier	core		1024475	0					
ANR	1028531	Identifier	search		1024475	1					
ANR	1028532	Argument	"r_search_keyword_new ( ( const ut8 * ) v_buf , bsize , NULL , 0 , NULL )"		1024475	1					
ANR	1028533	CallExpression	"r_search_keyword_new ( ( const ut8 * ) v_buf , bsize , NULL , 0 , NULL )"		1024475	0					
ANR	1028534	Callee	r_search_keyword_new		1024475	0					
ANR	1028535	Identifier	r_search_keyword_new		1024475	0					
ANR	1028536	ArgumentList	( const ut8 * ) v_buf		1024475	1					
ANR	1028537	Argument	( const ut8 * ) v_buf		1024475	0					
ANR	1028538	CastExpression	( const ut8 * ) v_buf		1024475	0					
ANR	1028539	CastTarget	const ut8 *		1024475	0					
ANR	1028540	Identifier	v_buf		1024475	1					
ANR	1028541	Argument	bsize		1024475	1					
ANR	1028542	Identifier	bsize		1024475	0					
ANR	1028543	Argument	NULL		1024475	2					
ANR	1028544	Identifier	NULL		1024475	0					
ANR	1028545	Argument	0		1024475	3					
ANR	1028546	PrimaryExpression	0		1024475	0					
ANR	1028547	Argument	NULL		1024475	4					
ANR	1028548	Identifier	NULL		1024475	0					
ANR	1028549	ExpressionStatement	free ( v_buf )	3593:3:102187:102199	1024475	1	True				
ANR	1028550	CallExpression	free ( v_buf )		1024475	0					
ANR	1028551	Callee	free		1024475	0					
ANR	1028552	Identifier	free		1024475	0					
ANR	1028553	ArgumentList	v_buf		1024475	1					
ANR	1028554	Argument	v_buf		1024475	0					
ANR	1028555	Identifier	v_buf		1024475	0					
ANR	1028556	ExpressionStatement	r_search_begin ( core -> search )	3595:2:102207:102236	1024475	51	True				
ANR	1028557	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1028558	Callee	r_search_begin		1024475	0					
ANR	1028559	Identifier	r_search_begin		1024475	0					
ANR	1028560	ArgumentList	core -> search		1024475	1					
ANR	1028561	Argument	core -> search		1024475	0					
ANR	1028562	PtrMemberAccess	core -> search		1024475	0					
ANR	1028563	Identifier	core		1024475	0					
ANR	1028564	Identifier	search		1024475	1					
ANR	1028565	ExpressionStatement	dosearch = true	3596:2:102240:102255	1024475	52	True				
ANR	1028566	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1028567	Identifier	dosearch		1024475	0					
ANR	1028568	Identifier	true		1024475	1					
ANR	1028569	BreakStatement	break ;	3597:2:102259:102264	1024475	53	True				
ANR	1028570	Label	case 'w' :	3598:1:102267:102275	1024475	54	True				
ANR	1028571	IfStatement	if ( input [ 1 ] )		1024475	55					
ANR	1028572	Condition	input [ 1 ]	3599:6:102363:102370	1024475	0	True				
ANR	1028573	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1028574	Identifier	input		1024475	0					
ANR	1028575	PrimaryExpression	1		1024475	1					
ANR	1028576	CompoundStatement		656:16:18696:18696	1024475	1					
ANR	1028577	IfStatement	if ( input [ 2 ] )		1024475	0					
ANR	1028578	Condition	input [ 2 ]	3600:7:102382:102389	1024475	0	True				
ANR	1028579	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1028580	Identifier	input		1024475	0					
ANR	1028581	PrimaryExpression	2		1024475	1					
ANR	1028582	CompoundStatement		657:17:18715:18715	1024475	1					
ANR	1028583	IfStatement	if ( input [ 1 ] == 'j' || input [ 2 ] == 'j' )		1024475	0					
ANR	1028584	Condition	input [ 1 ] == 'j' || input [ 2 ] == 'j'	3601:8:102402:102435	1024475	0	True				
ANR	1028585	OrExpression	input [ 1 ] == 'j' || input [ 2 ] == 'j'		1024475	0		||			
ANR	1028586	EqualityExpression	input [ 1 ] == 'j'		1024475	0		==			
ANR	1028587	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1028588	Identifier	input		1024475	0					
ANR	1028589	PrimaryExpression	1		1024475	1					
ANR	1028590	PrimaryExpression	'j'		1024475	1					
ANR	1028591	EqualityExpression	input [ 2 ] == 'j'		1024475	1		==			
ANR	1028592	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1028593	Identifier	input		1024475	0					
ANR	1028594	PrimaryExpression	2		1024475	1					
ANR	1028595	PrimaryExpression	'j'		1024475	1					
ANR	1028596	CompoundStatement		658:44:18761:18761	1024475	1					
ANR	1028597	ExpressionStatement	json = true	3602:5:102445:102456	1024475	0	True				
ANR	1028598	AssignmentExpression	json = true		1024475	0		=			
ANR	1028599	Identifier	json		1024475	0					
ANR	1028600	Identifier	true		1024475	1					
ANR	1028601	IfStatement	if ( input [ 1 ] == 'i' || input [ 2 ] == 'i' )		1024475	1					
ANR	1028602	Condition	input [ 1 ] == 'i' || input [ 2 ] == 'i'	3604:8:102472:102505	1024475	0	True				
ANR	1028603	OrExpression	input [ 1 ] == 'i' || input [ 2 ] == 'i'		1024475	0		||			
ANR	1028604	EqualityExpression	input [ 1 ] == 'i'		1024475	0		==			
ANR	1028605	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1028606	Identifier	input		1024475	0					
ANR	1028607	PrimaryExpression	1		1024475	1					
ANR	1028608	PrimaryExpression	'i'		1024475	1					
ANR	1028609	EqualityExpression	input [ 2 ] == 'i'		1024475	1		==			
ANR	1028610	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1028611	Identifier	input		1024475	0					
ANR	1028612	PrimaryExpression	2		1024475	1					
ANR	1028613	PrimaryExpression	'i'		1024475	1					
ANR	1028614	CompoundStatement		661:44:18831:18831	1024475	1					
ANR	1028615	ExpressionStatement	ignorecase = true	3605:5:102515:102532	1024475	0	True				
ANR	1028616	AssignmentExpression	ignorecase = true		1024475	0		=			
ANR	1028617	Identifier	ignorecase		1024475	0					
ANR	1028618	Identifier	true		1024475	1					
ANR	1028619	IfStatement	if ( input [ 1 + json + ignorecase ] == ' ' )		1024475	1					
ANR	1028620	Condition	input [ 1 + json + ignorecase ] == ' '	3609:7:102553:102587	1024475	0	True				
ANR	1028621	EqualityExpression	input [ 1 + json + ignorecase ] == ' '		1024475	0		==			
ANR	1028622	ArrayIndexing	input [ 1 + json + ignorecase ]		1024475	0					
ANR	1028623	Identifier	input		1024475	0					
ANR	1028624	AdditiveExpression	1 + json + ignorecase		1024475	1		+			
ANR	1028625	PrimaryExpression	1		1024475	0					
ANR	1028626	AdditiveExpression	json + ignorecase		1024475	1		+			
ANR	1028627	Identifier	json		1024475	0					
ANR	1028628	Identifier	ignorecase		1024475	1					
ANR	1028629	PrimaryExpression	' '		1024475	1					
ANR	1028630	CompoundStatement		684:4:19430:19449	1024475	1					
ANR	1028631	IdentifierDeclStatement	"int strstart , len ;"	3610:4:102596:102613	1024475	0	True				
ANR	1028632	IdentifierDecl	strstart		1024475	0					
ANR	1028633	IdentifierDeclType	int		1024475	0					
ANR	1028634	Identifier	strstart		1024475	1					
ANR	1028635	IdentifierDecl	len		1024475	1					
ANR	1028636	IdentifierDeclType	int		1024475	0					
ANR	1028637	Identifier	len		1024475	1					
ANR	1028638	IdentifierDeclStatement	const char * p2 ;	3611:4:102619:102633	1024475	1	True				
ANR	1028639	IdentifierDecl	* p2		1024475	0					
ANR	1028640	IdentifierDeclType	const char *		1024475	0					
ANR	1028641	Identifier	p2		1024475	1					
ANR	1028642	IdentifierDeclStatement	"char * p , * str ;"	3612:4:102639:102652	1024475	2	True				
ANR	1028643	IdentifierDecl	* p		1024475	0					
ANR	1028644	IdentifierDeclType	char *		1024475	0					
ANR	1028645	Identifier	p		1024475	1					
ANR	1028646	IdentifierDecl	* str		1024475	1					
ANR	1028647	IdentifierDeclType	char *		1024475	0					
ANR	1028648	Identifier	str		1024475	1					
ANR	1028649	ExpressionStatement	strstart = 2 + json + ignorecase	3613:4:102658:102690	1024475	3	True				
ANR	1028650	AssignmentExpression	strstart = 2 + json + ignorecase		1024475	0		=			
ANR	1028651	Identifier	strstart		1024475	0					
ANR	1028652	AdditiveExpression	2 + json + ignorecase		1024475	1		+			
ANR	1028653	PrimaryExpression	2		1024475	0					
ANR	1028654	AdditiveExpression	json + ignorecase		1024475	1		+			
ANR	1028655	Identifier	json		1024475	0					
ANR	1028656	Identifier	ignorecase		1024475	1					
ANR	1028657	ExpressionStatement	len = strlen ( input + strstart )	3614:4:102696:102727	1024475	4	True				
ANR	1028658	AssignmentExpression	len = strlen ( input + strstart )		1024475	0		=			
ANR	1028659	Identifier	len		1024475	0					
ANR	1028660	CallExpression	strlen ( input + strstart )		1024475	1					
ANR	1028661	Callee	strlen		1024475	0					
ANR	1028662	Identifier	strlen		1024475	0					
ANR	1028663	ArgumentList	input + strstart		1024475	1					
ANR	1028664	Argument	input + strstart		1024475	0					
ANR	1028665	AdditiveExpression	input + strstart		1024475	0		+			
ANR	1028666	Identifier	input		1024475	0					
ANR	1028667	Identifier	strstart		1024475	1					
ANR	1028668	ExpressionStatement	"str = calloc ( ( len + 1 ) , 2 )"	3615:4:102733:102760	1024475	5	True				
ANR	1028669	AssignmentExpression	"str = calloc ( ( len + 1 ) , 2 )"		1024475	0		=			
ANR	1028670	Identifier	str		1024475	0					
ANR	1028671	CallExpression	"calloc ( ( len + 1 ) , 2 )"		1024475	1					
ANR	1028672	Callee	calloc		1024475	0					
ANR	1028673	Identifier	calloc		1024475	0					
ANR	1028674	ArgumentList	len + 1		1024475	1					
ANR	1028675	Argument	len + 1		1024475	0					
ANR	1028676	AdditiveExpression	len + 1		1024475	0		+			
ANR	1028677	Identifier	len		1024475	0					
ANR	1028678	PrimaryExpression	1		1024475	1					
ANR	1028679	Argument	2		1024475	1					
ANR	1028680	PrimaryExpression	2		1024475	0					
ANR	1028681	ForStatement	"for ( p2 = input + strstart , p = str ; * p2 ; p += 2 , p2 ++ )"		1024475	6					
ANR	1028682	ForInit	"p2 = input + strstart , p = str ;"	3616:9:102771:102801	1024475	0	True				
ANR	1028683	Expression	"p2 = input + strstart , p = str"		1024475	0					
ANR	1028684	AssignmentExpression	p2 = input + strstart		1024475	0		=			
ANR	1028685	Identifier	p2		1024475	0					
ANR	1028686	AdditiveExpression	input + strstart		1024475	1		+			
ANR	1028687	Identifier	input		1024475	0					
ANR	1028688	Identifier	strstart		1024475	1					
ANR	1028689	AssignmentExpression	p = str		1024475	1		=			
ANR	1028690	Identifier	p		1024475	0					
ANR	1028691	Identifier	str		1024475	1					
ANR	1028692	Condition	* p2	3616:41:102803:102805	1024475	1	True				
ANR	1028693	UnaryOperationExpression	* p2		1024475	0					
ANR	1028694	UnaryOperator	*		1024475	0					
ANR	1028695	Identifier	p2		1024475	1					
ANR	1028696	Expression	"p += 2 , p2 ++"	3616:46:102808:102819	1024475	2	True				
ANR	1028697	AssignmentExpression	p += 2		1024475	0		+=			
ANR	1028698	Identifier	p		1024475	0					
ANR	1028699	PrimaryExpression	2		1024475	1					
ANR	1028700	PostIncDecOperationExpression	p2 ++		1024475	1					
ANR	1028701	Identifier	p2		1024475	0					
ANR	1028702	IncDec	++		1024475	1					
ANR	1028703	CompoundStatement		673:60:19145:19145	1024475	3					
ANR	1028704	IfStatement	if ( ignorecase )		1024475	0					
ANR	1028705	Condition	ignorecase	3617:9:102833:102842	1024475	0	True				
ANR	1028706	Identifier	ignorecase		1024475	0					
ANR	1028707	CompoundStatement		674:21:19168:19168	1024475	1					
ANR	1028708	ExpressionStatement	p [ 0 ] = tolower ( ( const ut8 ) * p2 )	3618:6:102853:102885	1024475	0	True				
ANR	1028709	AssignmentExpression	p [ 0 ] = tolower ( ( const ut8 ) * p2 )		1024475	0		=			
ANR	1028710	ArrayIndexing	p [ 0 ]		1024475	0					
ANR	1028711	Identifier	p		1024475	0					
ANR	1028712	PrimaryExpression	0		1024475	1					
ANR	1028713	CallExpression	tolower ( ( const ut8 ) * p2 )		1024475	1					
ANR	1028714	Callee	tolower		1024475	0					
ANR	1028715	Identifier	tolower		1024475	0					
ANR	1028716	ArgumentList	( const ut8 ) * p2		1024475	1					
ANR	1028717	Argument	( const ut8 ) * p2		1024475	0					
ANR	1028718	CastExpression	( const ut8 ) * p2		1024475	0					
ANR	1028719	CastTarget	const ut8		1024475	0					
ANR	1028720	UnaryOperationExpression	* p2		1024475	1					
ANR	1028721	UnaryOperator	*		1024475	0					
ANR	1028722	Identifier	p2		1024475	1					
ANR	1028723	ElseStatement	else		1024475	0					
ANR	1028724	CompoundStatement		676:12:19222:19222	1024475	0					
ANR	1028725	ExpressionStatement	p [ 0 ] = * p2	3620:6:102907:102917	1024475	0	True				
ANR	1028726	AssignmentExpression	p [ 0 ] = * p2		1024475	0		=			
ANR	1028727	ArrayIndexing	p [ 0 ]		1024475	0					
ANR	1028728	Identifier	p		1024475	0					
ANR	1028729	PrimaryExpression	0		1024475	1					
ANR	1028730	UnaryOperationExpression	* p2		1024475	1					
ANR	1028731	UnaryOperator	*		1024475	0					
ANR	1028732	Identifier	p2		1024475	1					
ANR	1028733	ExpressionStatement	p [ 1 ] = 0	3622:5:102931:102939	1024475	1	True				
ANR	1028734	AssignmentExpression	p [ 1 ] = 0		1024475	0		=			
ANR	1028735	ArrayIndexing	p [ 1 ]		1024475	0					
ANR	1028736	Identifier	p		1024475	0					
ANR	1028737	PrimaryExpression	1		1024475	1					
ANR	1028738	PrimaryExpression	0		1024475	1					
ANR	1028739	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	3624:4:102951:102998	1024475	7	True				
ANR	1028740	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1024475	0					
ANR	1028741	Callee	r_search_reset		1024475	0					
ANR	1028742	Identifier	r_search_reset		1024475	0					
ANR	1028743	ArgumentList	core -> search		1024475	1					
ANR	1028744	Argument	core -> search		1024475	0					
ANR	1028745	PtrMemberAccess	core -> search		1024475	0					
ANR	1028746	Identifier	core		1024475	0					
ANR	1028747	Identifier	search		1024475	1					
ANR	1028748	Argument	R_SEARCH_KEYWORD		1024475	1					
ANR	1028749	Identifier	R_SEARCH_KEYWORD		1024475	0					
ANR	1028750	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3625:4:103004:103101	1024475	8	True				
ANR	1028751	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1028752	Callee	r_search_set_distance		1024475	0					
ANR	1028753	Identifier	r_search_set_distance		1024475	0					
ANR	1028754	ArgumentList	core -> search		1024475	1					
ANR	1028755	Argument	core -> search		1024475	0					
ANR	1028756	PtrMemberAccess	core -> search		1024475	0					
ANR	1028757	Identifier	core		1024475	0					
ANR	1028758	Identifier	search		1024475	1					
ANR	1028759	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1028760	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1028761	CastTarget	int		1024475	0					
ANR	1028762	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1028763	Callee	r_config_get_i		1024475	0					
ANR	1028764	Identifier	r_config_get_i		1024475	0					
ANR	1028765	ArgumentList	core -> config		1024475	1					
ANR	1028766	Argument	core -> config		1024475	0					
ANR	1028767	PtrMemberAccess	core -> config		1024475	0					
ANR	1028768	Identifier	core		1024475	0					
ANR	1028769	Identifier	config		1024475	1					
ANR	1028770	Argument	"""search.distance"""		1024475	1					
ANR	1028771	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1028772	IdentifierDeclStatement	RSearchKeyword * skw ;	3627:4:103107:103126	1024475	9	True				
ANR	1028773	IdentifierDecl	* skw		1024475	0					
ANR	1028774	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1028775	Identifier	skw		1024475	1					
ANR	1028776	ExpressionStatement	"skw = r_search_keyword_new ( ( const ut8 * ) str , len * 2 , NULL , 0 , NULL )"	3628:4:103132:103202	1024475	10	True				
ANR	1028777	AssignmentExpression	"skw = r_search_keyword_new ( ( const ut8 * ) str , len * 2 , NULL , 0 , NULL )"		1024475	0		=			
ANR	1028778	Identifier	skw		1024475	0					
ANR	1028779	CallExpression	"r_search_keyword_new ( ( const ut8 * ) str , len * 2 , NULL , 0 , NULL )"		1024475	1					
ANR	1028780	Callee	r_search_keyword_new		1024475	0					
ANR	1028781	Identifier	r_search_keyword_new		1024475	0					
ANR	1028782	ArgumentList	( const ut8 * ) str		1024475	1					
ANR	1028783	Argument	( const ut8 * ) str		1024475	0					
ANR	1028784	CastExpression	( const ut8 * ) str		1024475	0					
ANR	1028785	CastTarget	const ut8 *		1024475	0					
ANR	1028786	Identifier	str		1024475	1					
ANR	1028787	Argument	len * 2		1024475	1					
ANR	1028788	MultiplicativeExpression	len * 2		1024475	0		*			
ANR	1028789	Identifier	len		1024475	0					
ANR	1028790	PrimaryExpression	2		1024475	1					
ANR	1028791	Argument	NULL		1024475	2					
ANR	1028792	Identifier	NULL		1024475	0					
ANR	1028793	Argument	0		1024475	3					
ANR	1028794	PrimaryExpression	0		1024475	0					
ANR	1028795	Argument	NULL		1024475	4					
ANR	1028796	Identifier	NULL		1024475	0					
ANR	1028797	ExpressionStatement	free ( str )	3629:4:103208:103218	1024475	11	True				
ANR	1028798	CallExpression	free ( str )		1024475	0					
ANR	1028799	Callee	free		1024475	0					
ANR	1028800	Identifier	free		1024475	0					
ANR	1028801	ArgumentList	str		1024475	1					
ANR	1028802	Argument	str		1024475	0					
ANR	1028803	Identifier	str		1024475	0					
ANR	1028804	IfStatement	if ( skw )		1024475	12					
ANR	1028805	Condition	skw	3630:8:103228:103230	1024475	0	True				
ANR	1028806	Identifier	skw		1024475	0					
ANR	1028807	CompoundStatement		687:13:19556:19556	1024475	1					
ANR	1028808	ExpressionStatement	skw -> icase = ignorecase	3631:5:103240:103263	1024475	0	True				
ANR	1028809	AssignmentExpression	skw -> icase = ignorecase		1024475	0		=			
ANR	1028810	PtrMemberAccess	skw -> icase		1024475	0					
ANR	1028811	Identifier	skw		1024475	0					
ANR	1028812	Identifier	icase		1024475	1					
ANR	1028813	Identifier	ignorecase		1024475	1					
ANR	1028814	ExpressionStatement	"r_search_kw_add ( core -> search , skw )"	3632:5:103270:103305	1024475	1	True				
ANR	1028815	CallExpression	"r_search_kw_add ( core -> search , skw )"		1024475	0					
ANR	1028816	Callee	r_search_kw_add		1024475	0					
ANR	1028817	Identifier	r_search_kw_add		1024475	0					
ANR	1028818	ArgumentList	core -> search		1024475	1					
ANR	1028819	Argument	core -> search		1024475	0					
ANR	1028820	PtrMemberAccess	core -> search		1024475	0					
ANR	1028821	Identifier	core		1024475	0					
ANR	1028822	Identifier	search		1024475	1					
ANR	1028823	Argument	skw		1024475	1					
ANR	1028824	Identifier	skw		1024475	0					
ANR	1028825	ExpressionStatement	r_search_begin ( core -> search )	3633:5:103312:103341	1024475	2	True				
ANR	1028826	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1028827	Callee	r_search_begin		1024475	0					
ANR	1028828	Identifier	r_search_begin		1024475	0					
ANR	1028829	ArgumentList	core -> search		1024475	1					
ANR	1028830	Argument	core -> search		1024475	0					
ANR	1028831	PtrMemberAccess	core -> search		1024475	0					
ANR	1028832	Identifier	core		1024475	0					
ANR	1028833	Identifier	search		1024475	1					
ANR	1028834	ExpressionStatement	dosearch = true	3634:5:103348:103363	1024475	3	True				
ANR	1028835	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1028836	Identifier	dosearch		1024475	0					
ANR	1028837	Identifier	true		1024475	1					
ANR	1028838	ElseStatement	else		1024475	0					
ANR	1028839	CompoundStatement		692:11:19699:19699	1024475	0					
ANR	1028840	ExpressionStatement	"eprintf ( ""Invalid keyword\\n"" )"	3636:5:103383:103412	1024475	0	True				
ANR	1028841	CallExpression	"eprintf ( ""Invalid keyword\\n"" )"		1024475	0					
ANR	1028842	Callee	eprintf		1024475	0					
ANR	1028843	Identifier	eprintf		1024475	0					
ANR	1028844	ArgumentList	"""Invalid keyword\\n"""		1024475	1					
ANR	1028845	Argument	"""Invalid keyword\\n"""		1024475	0					
ANR	1028846	PrimaryExpression	"""Invalid keyword\\n"""		1024475	0					
ANR	1028847	BreakStatement	break ;	3637:5:103419:103424	1024475	1	True				
ANR	1028848	BreakStatement	break ;	3641:2:103443:103448	1024475	56	True				
ANR	1028849	Label	case 'i' :	3642:1:103451:103459	1024475	57	True				
ANR	1028850	IfStatement	if ( input [ param_offset - 1 ] != ' ' )		1024475	58					
ANR	1028851	Condition	input [ param_offset - 1 ] != ' '	3643:6:103475:103504	1024475	0	True				
ANR	1028852	EqualityExpression	input [ param_offset - 1 ] != ' '		1024475	0		!=			
ANR	1028853	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1028854	Identifier	input		1024475	0					
ANR	1028855	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1028856	Identifier	param_offset		1024475	0					
ANR	1028857	PrimaryExpression	1		1024475	1					
ANR	1028858	PrimaryExpression	' '		1024475	1					
ANR	1028859	CompoundStatement		700:38:19830:19830	1024475	1					
ANR	1028860	ExpressionStatement	"eprintf ( ""Missing ' ' after /i\\n"" )"	3644:3:103512:103546	1024475	0	True				
ANR	1028861	CallExpression	"eprintf ( ""Missing ' ' after /i\\n"" )"		1024475	0					
ANR	1028862	Callee	eprintf		1024475	0					
ANR	1028863	Identifier	eprintf		1024475	0					
ANR	1028864	ArgumentList	"""Missing ' ' after /i\\n"""		1024475	1					
ANR	1028865	Argument	"""Missing ' ' after /i\\n"""		1024475	0					
ANR	1028866	PrimaryExpression	"""Missing ' ' after /i\\n"""		1024475	0					
ANR	1028867	ExpressionStatement	ret = false	3645:3:103551:103562	1024475	1	True				
ANR	1028868	AssignmentExpression	ret = false		1024475	0		=			
ANR	1028869	Identifier	ret		1024475	0					
ANR	1028870	Identifier	false		1024475	1					
ANR	1028871	GotoStatement	goto beach ;	3646:3:103567:103577	1024475	2	True				
ANR	1028872	Identifier	beach		1024475	0					
ANR	1028873	ExpressionStatement	ignorecase = true	3648:2:103585:103602	1024475	59	True				
ANR	1028874	AssignmentExpression	ignorecase = true		1024475	0		=			
ANR	1028875	Identifier	ignorecase		1024475	0					
ANR	1028876	Identifier	true		1024475	1					
ANR	1028877	Label	case 'j' :	3649:1:103605:103613	1024475	60	True				
ANR	1028878	IfStatement	if ( input [ 0 ] == 'j' )		1024475	61					
ANR	1028879	Condition	input [ 0 ] == 'j'	3650:6:103629:103643	1024475	0	True				
ANR	1028880	EqualityExpression	input [ 0 ] == 'j'		1024475	0		==			
ANR	1028881	ArrayIndexing	input [ 0 ]		1024475	0					
ANR	1028882	Identifier	input		1024475	0					
ANR	1028883	PrimaryExpression	0		1024475	1					
ANR	1028884	PrimaryExpression	'j'		1024475	1					
ANR	1028885	CompoundStatement		707:23:19969:19969	1024475	1					
ANR	1028886	ExpressionStatement	json = true	3651:3:103651:103662	1024475	0	True				
ANR	1028887	AssignmentExpression	json = true		1024475	0		=			
ANR	1028888	Identifier	json		1024475	0					
ANR	1028889	Identifier	true		1024475	1					
ANR	1028890	Label	case ' ' :	3654:1:103686:103694	1024475	62	True				
ANR	1028891	ExpressionStatement	inp = strdup ( input + 1 + ignorecase + json )	3655:2:103720:103764	1024475	63	True				
ANR	1028892	AssignmentExpression	inp = strdup ( input + 1 + ignorecase + json )		1024475	0		=			
ANR	1028893	Identifier	inp		1024475	0					
ANR	1028894	CallExpression	strdup ( input + 1 + ignorecase + json )		1024475	1					
ANR	1028895	Callee	strdup		1024475	0					
ANR	1028896	Identifier	strdup		1024475	0					
ANR	1028897	ArgumentList	input + 1 + ignorecase + json		1024475	1					
ANR	1028898	Argument	input + 1 + ignorecase + json		1024475	0					
ANR	1028899	AdditiveExpression	input + 1 + ignorecase + json		1024475	0		+			
ANR	1028900	Identifier	input		1024475	0					
ANR	1028901	AdditiveExpression	1 + ignorecase + json		1024475	1		+			
ANR	1028902	PrimaryExpression	1		1024475	0					
ANR	1028903	AdditiveExpression	ignorecase + json		1024475	1		+			
ANR	1028904	Identifier	ignorecase		1024475	0					
ANR	1028905	Identifier	json		1024475	1					
ANR	1028906	ExpressionStatement	len = r_str_unescape ( inp )	3656:2:103768:103794	1024475	64	True				
ANR	1028907	AssignmentExpression	len = r_str_unescape ( inp )		1024475	0		=			
ANR	1028908	Identifier	len		1024475	0					
ANR	1028909	CallExpression	r_str_unescape ( inp )		1024475	1					
ANR	1028910	Callee	r_str_unescape		1024475	0					
ANR	1028911	Identifier	r_str_unescape		1024475	0					
ANR	1028912	ArgumentList	inp		1024475	1					
ANR	1028913	Argument	inp		1024475	0					
ANR	1028914	Identifier	inp		1024475	0					
ANR	1028915	IfStatement	if ( ! json )		1024475	65					
ANR	1028916	Condition	! json	3658:6:103808:103812	1024475	0	True				
ANR	1028917	UnaryOperationExpression	! json		1024475	0					
ANR	1028918	UnaryOperator	!		1024475	0					
ANR	1028919	Identifier	json		1024475	1					
ANR	1028920	CompoundStatement		715:13:20138:20138	1024475	1					
ANR	1028921	Statement	eprintf	3659:3:103820:103826	1024475	0	True				
ANR	1028922	Statement	(	3659:11:103828:103828	1024475	1	True				
ANR	1028923	Statement	"""Searching %d byte(s) from 0x%08"""	3659:12:103829:103861	1024475	2	True				
ANR	1028924	Statement	PFMT64x	3659:45:103862:103868	1024475	3	True				
ANR	1028925	Statement	""" to 0x%08"""	3659:53:103870:103880	1024475	4	True				
ANR	1028926	Statement	PFMT64x	3659:64:103881:103887	1024475	5	True				
ANR	1028927	Statement	""": """	3659:72:103889:103892	1024475	6	True				
ANR	1028928	Statement	","	3659:76:103893:103893	1024475	7	True				
ANR	1028929	Statement	len	3660:5:103900:103902	1024475	8	True				
ANR	1028930	Statement	","	3660:8:103903:103903	1024475	9	True				
ANR	1028931	Statement	search_itv	3660:10:103905:103914	1024475	10	True				
ANR	1028932	Statement	.	3660:20:103915:103915	1024475	11	True				
ANR	1028933	Statement	addr	3660:21:103916:103919	1024475	12	True				
ANR	1028934	Statement	","	3660:25:103920:103920	1024475	13	True				
ANR	1028935	Statement	r_itv_end	3660:27:103922:103930	1024475	14	True				
ANR	1028936	Statement	(	3660:37:103932:103932	1024475	15	True				
ANR	1028937	Statement	search_itv	3660:38:103933:103942	1024475	16	True				
ANR	1028938	Statement	)	3660:48:103943:103943	1024475	17	True				
ANR	1028939	Statement	)	3660:49:103944:103944	1024475	18	True				
ANR	1028940	ExpressionStatement		3660:50:103945:103945	1024475	19	True				
ANR	1028941	ForStatement	for ( i = 0 ; i < len ; i ++ )		1024475	20					
ANR	1028942	ForInit	i = 0 ;	3661:8:103955:103960	1024475	0	True				
ANR	1028943	AssignmentExpression	i = 0		1024475	0		=			
ANR	1028944	Identifier	i		1024475	0					
ANR	1028945	PrimaryExpression	0		1024475	1					
ANR	1028946	Condition	i < len	3661:15:103962:103968	1024475	1	True				
ANR	1028947	RelationalExpression	i < len		1024475	0		<			
ANR	1028948	Identifier	i		1024475	0					
ANR	1028949	Identifier	len		1024475	1					
ANR	1028950	PostIncDecOperationExpression	i ++	3661:24:103971:103973	1024475	2	True				
ANR	1028951	Identifier	i		1024475	0					
ANR	1028952	IncDec	++		1024475	1					
ANR	1028953	CompoundStatement		718:29:20299:20299	1024475	3					
ANR	1028954	ExpressionStatement	"eprintf ( ""%02x "" , ( ut8 ) inp [ i ] )"	3662:4:103982:104013	1024475	0	True				
ANR	1028955	CallExpression	"eprintf ( ""%02x "" , ( ut8 ) inp [ i ] )"		1024475	0					
ANR	1028956	Callee	eprintf		1024475	0					
ANR	1028957	Identifier	eprintf		1024475	0					
ANR	1028958	ArgumentList	"""%02x """		1024475	1					
ANR	1028959	Argument	"""%02x """		1024475	0					
ANR	1028960	PrimaryExpression	"""%02x """		1024475	0					
ANR	1028961	Argument	( ut8 ) inp [ i ]		1024475	1					
ANR	1028962	CastExpression	( ut8 ) inp [ i ]		1024475	0					
ANR	1028963	CastTarget	ut8		1024475	0					
ANR	1028964	ArrayIndexing	inp [ i ]		1024475	1					
ANR	1028965	Identifier	inp		1024475	0					
ANR	1028966	Identifier	i		1024475	1					
ANR	1028967	ExpressionStatement	"eprintf ( ""\\n"" )"	3664:3:104023:104037	1024475	21	True				
ANR	1028968	CallExpression	"eprintf ( ""\\n"" )"		1024475	0					
ANR	1028969	Callee	eprintf		1024475	0					
ANR	1028970	Identifier	eprintf		1024475	0					
ANR	1028971	ArgumentList	"""\\n"""		1024475	1					
ANR	1028972	Argument	"""\\n"""		1024475	0					
ANR	1028973	PrimaryExpression	"""\\n"""		1024475	0					
ANR	1028974	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	3667:2:104052:104099	1024475	66	True				
ANR	1028975	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1024475	0					
ANR	1028976	Callee	r_search_reset		1024475	0					
ANR	1028977	Identifier	r_search_reset		1024475	0					
ANR	1028978	ArgumentList	core -> search		1024475	1					
ANR	1028979	Argument	core -> search		1024475	0					
ANR	1028980	PtrMemberAccess	core -> search		1024475	0					
ANR	1028981	Identifier	core		1024475	0					
ANR	1028982	Identifier	search		1024475	1					
ANR	1028983	Argument	R_SEARCH_KEYWORD		1024475	1					
ANR	1028984	Identifier	R_SEARCH_KEYWORD		1024475	0					
ANR	1028985	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3668:2:104103:104198	1024475	67	True				
ANR	1028986	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1028987	Callee	r_search_set_distance		1024475	0					
ANR	1028988	Identifier	r_search_set_distance		1024475	0					
ANR	1028989	ArgumentList	core -> search		1024475	1					
ANR	1028990	Argument	core -> search		1024475	0					
ANR	1028991	PtrMemberAccess	core -> search		1024475	0					
ANR	1028992	Identifier	core		1024475	0					
ANR	1028993	Identifier	search		1024475	1					
ANR	1028994	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1028995	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1028996	CastTarget	int		1024475	0					
ANR	1028997	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1028998	Callee	r_config_get_i		1024475	0					
ANR	1028999	Identifier	r_config_get_i		1024475	0					
ANR	1029000	ArgumentList	core -> config		1024475	1					
ANR	1029001	Argument	core -> config		1024475	0					
ANR	1029002	PtrMemberAccess	core -> config		1024475	0					
ANR	1029003	Identifier	core		1024475	0					
ANR	1029004	Identifier	config		1024475	1					
ANR	1029005	Argument	"""search.distance"""		1024475	1					
ANR	1029006	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1029007	CompoundStatement		728:3:20530:20549	1024475	68					
ANR	1029008	IdentifierDeclStatement	RSearchKeyword * skw ;	3671:3:104207:104226	1024475	0	True				
ANR	1029009	IdentifierDecl	* skw		1024475	0					
ANR	1029010	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1029011	Identifier	skw		1024475	1					
ANR	1029012	ExpressionStatement	"skw = r_search_keyword_new ( ( const ut8 * ) inp , len , NULL , 0 , NULL )"	3672:3:104231:104297	1024475	1	True				
ANR	1029013	AssignmentExpression	"skw = r_search_keyword_new ( ( const ut8 * ) inp , len , NULL , 0 , NULL )"		1024475	0		=			
ANR	1029014	Identifier	skw		1024475	0					
ANR	1029015	CallExpression	"r_search_keyword_new ( ( const ut8 * ) inp , len , NULL , 0 , NULL )"		1024475	1					
ANR	1029016	Callee	r_search_keyword_new		1024475	0					
ANR	1029017	Identifier	r_search_keyword_new		1024475	0					
ANR	1029018	ArgumentList	( const ut8 * ) inp		1024475	1					
ANR	1029019	Argument	( const ut8 * ) inp		1024475	0					
ANR	1029020	CastExpression	( const ut8 * ) inp		1024475	0					
ANR	1029021	CastTarget	const ut8 *		1024475	0					
ANR	1029022	Identifier	inp		1024475	1					
ANR	1029023	Argument	len		1024475	1					
ANR	1029024	Identifier	len		1024475	0					
ANR	1029025	Argument	NULL		1024475	2					
ANR	1029026	Identifier	NULL		1024475	0					
ANR	1029027	Argument	0		1024475	3					
ANR	1029028	PrimaryExpression	0		1024475	0					
ANR	1029029	Argument	NULL		1024475	4					
ANR	1029030	Identifier	NULL		1024475	0					
ANR	1029031	ExpressionStatement	free ( inp )	3673:3:104302:104312	1024475	2	True				
ANR	1029032	CallExpression	free ( inp )		1024475	0					
ANR	1029033	Callee	free		1024475	0					
ANR	1029034	Identifier	free		1024475	0					
ANR	1029035	ArgumentList	inp		1024475	1					
ANR	1029036	Argument	inp		1024475	0					
ANR	1029037	Identifier	inp		1024475	0					
ANR	1029038	IfStatement	if ( skw )		1024475	3					
ANR	1029039	Condition	skw	3674:7:104321:104323	1024475	0	True				
ANR	1029040	Identifier	skw		1024475	0					
ANR	1029041	CompoundStatement		731:12:20649:20649	1024475	1					
ANR	1029042	ExpressionStatement	skw -> icase = ignorecase	3675:4:104332:104355	1024475	0	True				
ANR	1029043	AssignmentExpression	skw -> icase = ignorecase		1024475	0		=			
ANR	1029044	PtrMemberAccess	skw -> icase		1024475	0					
ANR	1029045	Identifier	skw		1024475	0					
ANR	1029046	Identifier	icase		1024475	1					
ANR	1029047	Identifier	ignorecase		1024475	1					
ANR	1029048	ExpressionStatement	skw -> type = R_SEARCH_KEYWORD_TYPE_STRING	3676:4:104361:104401	1024475	1	True				
ANR	1029049	AssignmentExpression	skw -> type = R_SEARCH_KEYWORD_TYPE_STRING		1024475	0		=			
ANR	1029050	PtrMemberAccess	skw -> type		1024475	0					
ANR	1029051	Identifier	skw		1024475	0					
ANR	1029052	Identifier	type		1024475	1					
ANR	1029053	Identifier	R_SEARCH_KEYWORD_TYPE_STRING		1024475	1					
ANR	1029054	ExpressionStatement	"r_search_kw_add ( core -> search , skw )"	3677:4:104407:104442	1024475	2	True				
ANR	1029055	CallExpression	"r_search_kw_add ( core -> search , skw )"		1024475	0					
ANR	1029056	Callee	r_search_kw_add		1024475	0					
ANR	1029057	Identifier	r_search_kw_add		1024475	0					
ANR	1029058	ArgumentList	core -> search		1024475	1					
ANR	1029059	Argument	core -> search		1024475	0					
ANR	1029060	PtrMemberAccess	core -> search		1024475	0					
ANR	1029061	Identifier	core		1024475	0					
ANR	1029062	Identifier	search		1024475	1					
ANR	1029063	Argument	skw		1024475	1					
ANR	1029064	Identifier	skw		1024475	0					
ANR	1029065	ElseStatement	else		1024475	0					
ANR	1029066	CompoundStatement		735:10:20777:20777	1024475	0					
ANR	1029067	ExpressionStatement	"eprintf ( ""Invalid keyword\\n"" )"	3679:4:104460:104489	1024475	0	True				
ANR	1029068	CallExpression	"eprintf ( ""Invalid keyword\\n"" )"		1024475	0					
ANR	1029069	Callee	eprintf		1024475	0					
ANR	1029070	Identifier	eprintf		1024475	0					
ANR	1029071	ArgumentList	"""Invalid keyword\\n"""		1024475	1					
ANR	1029072	Argument	"""Invalid keyword\\n"""		1024475	0					
ANR	1029073	PrimaryExpression	"""Invalid keyword\\n"""		1024475	0					
ANR	1029074	BreakStatement	break ;	3680:4:104495:104500	1024475	1	True				
ANR	1029075	ExpressionStatement	r_search_begin ( core -> search )	3683:2:104513:104542	1024475	69	True				
ANR	1029076	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1029077	Callee	r_search_begin		1024475	0					
ANR	1029078	Identifier	r_search_begin		1024475	0					
ANR	1029079	ArgumentList	core -> search		1024475	1					
ANR	1029080	Argument	core -> search		1024475	0					
ANR	1029081	PtrMemberAccess	core -> search		1024475	0					
ANR	1029082	Identifier	core		1024475	0					
ANR	1029083	Identifier	search		1024475	1					
ANR	1029084	ExpressionStatement	dosearch = true	3684:2:104546:104561	1024475	70	True				
ANR	1029085	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1029086	Identifier	dosearch		1024475	0					
ANR	1029087	Identifier	true		1024475	1					
ANR	1029088	BreakStatement	break ;	3685:2:104565:104570	1024475	71	True				
ANR	1029089	Label	case 'e' :	3686:1:104573:104581	1024475	72	True				
ANR	1029090	IfStatement	if ( input [ 1 ] == '?' )		1024475	73					
ANR	1029091	Condition	input [ 1 ] == '?'	3687:6:104610:104624	1024475	0	True				
ANR	1029092	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1029093	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029094	Identifier	input		1024475	0					
ANR	1029095	PrimaryExpression	1		1024475	1					
ANR	1029096	PrimaryExpression	'?'		1024475	1					
ANR	1029097	CompoundStatement		744:23:20950:20950	1024475	1					
ANR	1029098	ExpressionStatement	"eprintf ( ""Usage: /e /foo/i or /e/foo/i\\n"" )"	3688:3:104632:104674	1024475	0	True				
ANR	1029099	CallExpression	"eprintf ( ""Usage: /e /foo/i or /e/foo/i\\n"" )"		1024475	0					
ANR	1029100	Callee	eprintf		1024475	0					
ANR	1029101	Identifier	eprintf		1024475	0					
ANR	1029102	ArgumentList	"""Usage: /e /foo/i or /e/foo/i\\n"""		1024475	1					
ANR	1029103	Argument	"""Usage: /e /foo/i or /e/foo/i\\n"""		1024475	0					
ANR	1029104	PrimaryExpression	"""Usage: /e /foo/i or /e/foo/i\\n"""		1024475	0					
ANR	1029105	ElseStatement	else		1024475	0					
ANR	1029106	IfStatement	if ( input [ 1 ] )		1024475	0					
ANR	1029107	Condition	input [ 1 ]	3689:13:104689:104696	1024475	0	True				
ANR	1029108	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029109	Identifier	input		1024475	0					
ANR	1029110	PrimaryExpression	1		1024475	1					
ANR	1029111	CompoundStatement		747:3:21027:21045	1024475	1					
ANR	1029112	IdentifierDeclStatement	RSearchKeyword * kw ;	3690:3:104704:104722	1024475	0	True				
ANR	1029113	IdentifierDecl	* kw		1024475	0					
ANR	1029114	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1029115	Identifier	kw		1024475	1					
ANR	1029116	ExpressionStatement	"kw = r_search_keyword_new_regexp ( input + 1 , NULL )"	3691:3:104727:104777	1024475	1	True				
ANR	1029117	AssignmentExpression	"kw = r_search_keyword_new_regexp ( input + 1 , NULL )"		1024475	0		=			
ANR	1029118	Identifier	kw		1024475	0					
ANR	1029119	CallExpression	"r_search_keyword_new_regexp ( input + 1 , NULL )"		1024475	1					
ANR	1029120	Callee	r_search_keyword_new_regexp		1024475	0					
ANR	1029121	Identifier	r_search_keyword_new_regexp		1024475	0					
ANR	1029122	ArgumentList	input + 1		1024475	1					
ANR	1029123	Argument	input + 1		1024475	0					
ANR	1029124	AdditiveExpression	input + 1		1024475	0		+			
ANR	1029125	Identifier	input		1024475	0					
ANR	1029126	PrimaryExpression	1		1024475	1					
ANR	1029127	Argument	NULL		1024475	1					
ANR	1029128	Identifier	NULL		1024475	0					
ANR	1029129	IfStatement	if ( ! kw )		1024475	2					
ANR	1029130	Condition	! kw	3692:7:104786:104788	1024475	0	True				
ANR	1029131	UnaryOperationExpression	! kw		1024475	0					
ANR	1029132	UnaryOperator	!		1024475	0					
ANR	1029133	Identifier	kw		1024475	1					
ANR	1029134	CompoundStatement		749:12:21114:21114	1024475	1					
ANR	1029135	ExpressionStatement	"eprintf ( ""Invalid regexp specified\\n"" )"	3693:4:104797:104835	1024475	0	True				
ANR	1029136	CallExpression	"eprintf ( ""Invalid regexp specified\\n"" )"		1024475	0					
ANR	1029137	Callee	eprintf		1024475	0					
ANR	1029138	Identifier	eprintf		1024475	0					
ANR	1029139	ArgumentList	"""Invalid regexp specified\\n"""		1024475	1					
ANR	1029140	Argument	"""Invalid regexp specified\\n"""		1024475	0					
ANR	1029141	PrimaryExpression	"""Invalid regexp specified\\n"""		1024475	0					
ANR	1029142	BreakStatement	break ;	3694:4:104841:104846	1024475	1	True				
ANR	1029143	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_REGEXP )"	3696:3:104856:104902	1024475	3	True				
ANR	1029144	CallExpression	"r_search_reset ( core -> search , R_SEARCH_REGEXP )"		1024475	0					
ANR	1029145	Callee	r_search_reset		1024475	0					
ANR	1029146	Identifier	r_search_reset		1024475	0					
ANR	1029147	ArgumentList	core -> search		1024475	1					
ANR	1029148	Argument	core -> search		1024475	0					
ANR	1029149	PtrMemberAccess	core -> search		1024475	0					
ANR	1029150	Identifier	core		1024475	0					
ANR	1029151	Identifier	search		1024475	1					
ANR	1029152	Argument	R_SEARCH_REGEXP		1024475	1					
ANR	1029153	Identifier	R_SEARCH_REGEXP		1024475	0					
ANR	1029154	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3698:3:104937:105033	1024475	4	True				
ANR	1029155	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1029156	Callee	r_search_set_distance		1024475	0					
ANR	1029157	Identifier	r_search_set_distance		1024475	0					
ANR	1029158	ArgumentList	core -> search		1024475	1					
ANR	1029159	Argument	core -> search		1024475	0					
ANR	1029160	PtrMemberAccess	core -> search		1024475	0					
ANR	1029161	Identifier	core		1024475	0					
ANR	1029162	Identifier	search		1024475	1					
ANR	1029163	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1029164	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1029165	CastTarget	int		1024475	0					
ANR	1029166	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1029167	Callee	r_config_get_i		1024475	0					
ANR	1029168	Identifier	r_config_get_i		1024475	0					
ANR	1029169	ArgumentList	core -> config		1024475	1					
ANR	1029170	Argument	core -> config		1024475	0					
ANR	1029171	PtrMemberAccess	core -> config		1024475	0					
ANR	1029172	Identifier	core		1024475	0					
ANR	1029173	Identifier	config		1024475	1					
ANR	1029174	Argument	"""search.distance"""		1024475	1					
ANR	1029175	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1029176	ExpressionStatement	"r_search_kw_add ( core -> search , kw )"	3700:3:105038:105072	1024475	5	True				
ANR	1029177	CallExpression	"r_search_kw_add ( core -> search , kw )"		1024475	0					
ANR	1029178	Callee	r_search_kw_add		1024475	0					
ANR	1029179	Identifier	r_search_kw_add		1024475	0					
ANR	1029180	ArgumentList	core -> search		1024475	1					
ANR	1029181	Argument	core -> search		1024475	0					
ANR	1029182	PtrMemberAccess	core -> search		1024475	0					
ANR	1029183	Identifier	core		1024475	0					
ANR	1029184	Identifier	search		1024475	1					
ANR	1029185	Argument	kw		1024475	1					
ANR	1029186	Identifier	kw		1024475	0					
ANR	1029187	ExpressionStatement	r_search_begin ( core -> search )	3701:3:105077:105106	1024475	6	True				
ANR	1029188	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1029189	Callee	r_search_begin		1024475	0					
ANR	1029190	Identifier	r_search_begin		1024475	0					
ANR	1029191	ArgumentList	core -> search		1024475	1					
ANR	1029192	Argument	core -> search		1024475	0					
ANR	1029193	PtrMemberAccess	core -> search		1024475	0					
ANR	1029194	Identifier	core		1024475	0					
ANR	1029195	Identifier	search		1024475	1					
ANR	1029196	ExpressionStatement	dosearch = true	3702:3:105111:105126	1024475	7	True				
ANR	1029197	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1029198	Identifier	dosearch		1024475	0					
ANR	1029199	Identifier	true		1024475	1					
ANR	1029200	ElseStatement	else		1024475	0					
ANR	1029201	CompoundStatement		760:9:21460:21460	1024475	0					
ANR	1029202	ExpressionStatement	"eprintf ( ""Missing regex\\n"" )"	3704:3:105142:105169	1024475	0	True				
ANR	1029203	CallExpression	"eprintf ( ""Missing regex\\n"" )"		1024475	0					
ANR	1029204	Callee	eprintf		1024475	0					
ANR	1029205	Identifier	eprintf		1024475	0					
ANR	1029206	ArgumentList	"""Missing regex\\n"""		1024475	1					
ANR	1029207	Argument	"""Missing regex\\n"""		1024475	0					
ANR	1029208	PrimaryExpression	"""Missing regex\\n"""		1024475	0					
ANR	1029209	BreakStatement	break ;	3706:2:105177:105182	1024475	74	True				
ANR	1029210	Label	case 'E' :	3707:1:105185:105193	1024475	75	True				
ANR	1029211	IfStatement	if ( core -> io && core -> io -> debug )		1024475	76					
ANR	1029212	Condition	core -> io && core -> io -> debug	3708:6:105209:105235	1024475	0	True				
ANR	1029213	AndExpression	core -> io && core -> io -> debug		1024475	0		&&			
ANR	1029214	PtrMemberAccess	core -> io		1024475	0					
ANR	1029215	Identifier	core		1024475	0					
ANR	1029216	Identifier	io		1024475	1					
ANR	1029217	PtrMemberAccess	core -> io -> debug		1024475	1					
ANR	1029218	PtrMemberAccess	core -> io		1024475	0					
ANR	1029219	Identifier	core		1024475	0					
ANR	1029220	Identifier	io		1024475	1					
ANR	1029221	Identifier	debug		1024475	1					
ANR	1029222	CompoundStatement		765:35:21561:21561	1024475	1					
ANR	1029223	ExpressionStatement	r_debug_map_sync ( core -> dbg )	3709:3:105243:105271	1024475	0	True				
ANR	1029224	CallExpression	r_debug_map_sync ( core -> dbg )		1024475	0					
ANR	1029225	Callee	r_debug_map_sync		1024475	0					
ANR	1029226	Identifier	r_debug_map_sync		1024475	0					
ANR	1029227	ArgumentList	core -> dbg		1024475	1					
ANR	1029228	Argument	core -> dbg		1024475	0					
ANR	1029229	PtrMemberAccess	core -> dbg		1024475	0					
ANR	1029230	Identifier	core		1024475	0					
ANR	1029231	Identifier	dbg		1024475	1					
ANR	1029232	ExpressionStatement	"do_esil_search ( core , & param , input )"	3711:2:105279:105315	1024475	77	True				
ANR	1029233	CallExpression	"do_esil_search ( core , & param , input )"		1024475	0					
ANR	1029234	Callee	do_esil_search		1024475	0					
ANR	1029235	Identifier	do_esil_search		1024475	0					
ANR	1029236	ArgumentList	core		1024475	1					
ANR	1029237	Argument	core		1024475	0					
ANR	1029238	Identifier	core		1024475	0					
ANR	1029239	Argument	& param		1024475	1					
ANR	1029240	UnaryOperationExpression	& param		1024475	0					
ANR	1029241	UnaryOperator	&		1024475	0					
ANR	1029242	Identifier	param		1024475	1					
ANR	1029243	Argument	input		1024475	2					
ANR	1029244	Identifier	input		1024475	0					
ANR	1029245	GotoStatement	goto beach ;	3712:2:105319:105329	1024475	78	True				
ANR	1029246	Identifier	beach		1024475	0					
ANR	1029247	Label	case 'd' :	3713:1:105332:105340	1024475	79	True				
ANR	1029248	IfStatement	if ( input [ 1 ] )		1024475	80					
ANR	1029249	Condition	input [ 1 ]	3714:6:105373:105380	1024475	0	True				
ANR	1029250	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029251	Identifier	input		1024475	0					
ANR	1029252	PrimaryExpression	1		1024475	1					
ANR	1029253	CompoundStatement		771:16:21706:21706	1024475	1					
ANR	1029254	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_DELTAKEY )"	3715:3:105388:105436	1024475	0	True				
ANR	1029255	CallExpression	"r_search_reset ( core -> search , R_SEARCH_DELTAKEY )"		1024475	0					
ANR	1029256	Callee	r_search_reset		1024475	0					
ANR	1029257	Identifier	r_search_reset		1024475	0					
ANR	1029258	ArgumentList	core -> search		1024475	1					
ANR	1029259	Argument	core -> search		1024475	0					
ANR	1029260	PtrMemberAccess	core -> search		1024475	0					
ANR	1029261	Identifier	core		1024475	0					
ANR	1029262	Identifier	search		1024475	1					
ANR	1029263	Argument	R_SEARCH_DELTAKEY		1024475	1					
ANR	1029264	Identifier	R_SEARCH_DELTAKEY		1024475	0					
ANR	1029265	ExpressionStatement	"r_search_kw_add ( core -> search , r_search_keyword_new_hexmask ( input + param_offset , NULL ) )"	3716:3:105441:105534	1024475	1	True				
ANR	1029266	CallExpression	"r_search_kw_add ( core -> search , r_search_keyword_new_hexmask ( input + param_offset , NULL ) )"		1024475	0					
ANR	1029267	Callee	r_search_kw_add		1024475	0					
ANR	1029268	Identifier	r_search_kw_add		1024475	0					
ANR	1029269	ArgumentList	core -> search		1024475	1					
ANR	1029270	Argument	core -> search		1024475	0					
ANR	1029271	PtrMemberAccess	core -> search		1024475	0					
ANR	1029272	Identifier	core		1024475	0					
ANR	1029273	Identifier	search		1024475	1					
ANR	1029274	Argument	"r_search_keyword_new_hexmask ( input + param_offset , NULL )"		1024475	1					
ANR	1029275	CallExpression	"r_search_keyword_new_hexmask ( input + param_offset , NULL )"		1024475	0					
ANR	1029276	Callee	r_search_keyword_new_hexmask		1024475	0					
ANR	1029277	Identifier	r_search_keyword_new_hexmask		1024475	0					
ANR	1029278	ArgumentList	input + param_offset		1024475	1					
ANR	1029279	Argument	input + param_offset		1024475	0					
ANR	1029280	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1029281	Identifier	input		1024475	0					
ANR	1029282	Identifier	param_offset		1024475	1					
ANR	1029283	Argument	NULL		1024475	1					
ANR	1029284	Identifier	NULL		1024475	0					
ANR	1029285	ExpressionStatement	r_search_begin ( core -> search )	3718:3:105539:105568	1024475	2	True				
ANR	1029286	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1029287	Callee	r_search_begin		1024475	0					
ANR	1029288	Identifier	r_search_begin		1024475	0					
ANR	1029289	ArgumentList	core -> search		1024475	1					
ANR	1029290	Argument	core -> search		1024475	0					
ANR	1029291	PtrMemberAccess	core -> search		1024475	0					
ANR	1029292	Identifier	core		1024475	0					
ANR	1029293	Identifier	search		1024475	1					
ANR	1029294	ExpressionStatement	dosearch = true	3719:3:105573:105588	1024475	3	True				
ANR	1029295	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1029296	Identifier	dosearch		1024475	0					
ANR	1029297	Identifier	true		1024475	1					
ANR	1029298	ElseStatement	else		1024475	0					
ANR	1029299	CompoundStatement		777:9:21922:21922	1024475	0					
ANR	1029300	ExpressionStatement	"eprintf ( ""Missing delta\\n"" )"	3721:3:105604:105631	1024475	0	True				
ANR	1029301	CallExpression	"eprintf ( ""Missing delta\\n"" )"		1024475	0					
ANR	1029302	Callee	eprintf		1024475	0					
ANR	1029303	Identifier	eprintf		1024475	0					
ANR	1029304	ArgumentList	"""Missing delta\\n"""		1024475	1					
ANR	1029305	Argument	"""Missing delta\\n"""		1024475	0					
ANR	1029306	PrimaryExpression	"""Missing delta\\n"""		1024475	0					
ANR	1029307	BreakStatement	break ;	3723:2:105639:105644	1024475	81	True				
ANR	1029308	Label	case 'h' :	3724:1:105647:105655	1024475	82	True				
ANR	1029309	CompoundStatement		783:2:21993:22035	1024475	83					
ANR	1029310	IdentifierDeclStatement	"char * p , * arg = r_str_trim_dup ( input + 1 ) ;"	3726:2:105670:105712	1024475	0	True				
ANR	1029311	IdentifierDecl	* p		1024475	0					
ANR	1029312	IdentifierDeclType	char *		1024475	0					
ANR	1029313	Identifier	p		1024475	1					
ANR	1029314	IdentifierDecl	* arg = r_str_trim_dup ( input + 1 )		1024475	1					
ANR	1029315	IdentifierDeclType	char *		1024475	0					
ANR	1029316	Identifier	arg		1024475	1					
ANR	1029317	AssignmentExpression	* arg = r_str_trim_dup ( input + 1 )		1024475	2		=			
ANR	1029318	Identifier	arg		1024475	0					
ANR	1029319	CallExpression	r_str_trim_dup ( input + 1 )		1024475	1					
ANR	1029320	Callee	r_str_trim_dup		1024475	0					
ANR	1029321	Identifier	r_str_trim_dup		1024475	0					
ANR	1029322	ArgumentList	input + 1		1024475	1					
ANR	1029323	Argument	input + 1		1024475	0					
ANR	1029324	AdditiveExpression	input + 1		1024475	0		+			
ANR	1029325	Identifier	input		1024475	0					
ANR	1029326	PrimaryExpression	1		1024475	1					
ANR	1029327	ExpressionStatement	"p = strchr ( arg , ' ' )"	3727:2:105716:105737	1024475	1	True				
ANR	1029328	AssignmentExpression	"p = strchr ( arg , ' ' )"		1024475	0		=			
ANR	1029329	Identifier	p		1024475	0					
ANR	1029330	CallExpression	"strchr ( arg , ' ' )"		1024475	1					
ANR	1029331	Callee	strchr		1024475	0					
ANR	1029332	Identifier	strchr		1024475	0					
ANR	1029333	ArgumentList	arg		1024475	1					
ANR	1029334	Argument	arg		1024475	0					
ANR	1029335	Identifier	arg		1024475	0					
ANR	1029336	Argument	' '		1024475	1					
ANR	1029337	PrimaryExpression	' '		1024475	0					
ANR	1029338	IfStatement	if ( p )		1024475	2					
ANR	1029339	Condition	p	3728:6:105745:105745	1024475	0	True				
ANR	1029340	Identifier	p		1024475	0					
ANR	1029341	CompoundStatement		785:9:22071:22071	1024475	1					
ANR	1029342	ExpressionStatement	* p ++ = 0	3729:3:105753:105761	1024475	0	True				
ANR	1029343	AssignmentExpression	* p ++ = 0		1024475	0		=			
ANR	1029344	UnaryOperationExpression	* p ++		1024475	0					
ANR	1029345	UnaryOperator	*		1024475	0					
ANR	1029346	PostIncDecOperationExpression	p ++		1024475	1					
ANR	1029347	Identifier	p		1024475	0					
ANR	1029348	IncDec	++		1024475	1					
ANR	1029349	PrimaryExpression	0		1024475	1					
ANR	1029350	IfStatement	if ( * arg == '?' )		1024475	1					
ANR	1029351	Condition	* arg == '?'	3730:7:105770:105780	1024475	0	True				
ANR	1029352	EqualityExpression	* arg == '?'		1024475	0		==			
ANR	1029353	UnaryOperationExpression	* arg		1024475	0					
ANR	1029354	UnaryOperator	*		1024475	0					
ANR	1029355	Identifier	arg		1024475	1					
ANR	1029356	PrimaryExpression	'?'		1024475	1					
ANR	1029357	CompoundStatement		787:20:22106:22106	1024475	1					
ANR	1029358	ExpressionStatement	"eprintf ( ""Usage: /h md5 [hash] [datalen]\\n"" )"	3731:4:105789:105833	1024475	0	True				
ANR	1029359	CallExpression	"eprintf ( ""Usage: /h md5 [hash] [datalen]\\n"" )"		1024475	0					
ANR	1029360	Callee	eprintf		1024475	0					
ANR	1029361	Identifier	eprintf		1024475	0					
ANR	1029362	ArgumentList	"""Usage: /h md5 [hash] [datalen]\\n"""		1024475	1					
ANR	1029363	Argument	"""Usage: /h md5 [hash] [datalen]\\n"""		1024475	0					
ANR	1029364	PrimaryExpression	"""Usage: /h md5 [hash] [datalen]\\n"""		1024475	0					
ANR	1029365	ElseStatement	else		1024475	0					
ANR	1029366	CompoundStatement		792:4:22224:22259	1024475	0					
ANR	1029367	IdentifierDeclStatement	ut32 min = UT32_MAX ;	3733:4:105851:105870	1024475	0	True				
ANR	1029368	IdentifierDecl	min = UT32_MAX		1024475	0					
ANR	1029369	IdentifierDeclType	ut32		1024475	0					
ANR	1029370	Identifier	min		1024475	1					
ANR	1029371	AssignmentExpression	min = UT32_MAX		1024475	2		=			
ANR	1029372	Identifier	UT32_MAX		1024475	0					
ANR	1029373	Identifier	UT32_MAX		1024475	1					
ANR	1029374	IdentifierDeclStatement	ut32 max = UT32_MAX ;	3734:4:105876:105895	1024475	1	True				
ANR	1029375	IdentifierDecl	max = UT32_MAX		1024475	0					
ANR	1029376	IdentifierDeclType	ut32		1024475	0					
ANR	1029377	Identifier	max		1024475	1					
ANR	1029378	AssignmentExpression	max = UT32_MAX		1024475	2		=			
ANR	1029379	Identifier	UT32_MAX		1024475	0					
ANR	1029380	Identifier	UT32_MAX		1024475	1					
ANR	1029381	IdentifierDeclStatement	"char * pmax , * pmin = strchr ( p , ' ' ) ;"	3735:4:105901:105936	1024475	2	True				
ANR	1029382	IdentifierDecl	* pmax		1024475	0					
ANR	1029383	IdentifierDeclType	char *		1024475	0					
ANR	1029384	Identifier	pmax		1024475	1					
ANR	1029385	IdentifierDecl	"* pmin = strchr ( p , ' ' )"		1024475	1					
ANR	1029386	IdentifierDeclType	char *		1024475	0					
ANR	1029387	Identifier	pmin		1024475	1					
ANR	1029388	AssignmentExpression	"* pmin = strchr ( p , ' ' )"		1024475	2		=			
ANR	1029389	Identifier	pmin		1024475	0					
ANR	1029390	CallExpression	"strchr ( p , ' ' )"		1024475	1					
ANR	1029391	Callee	strchr		1024475	0					
ANR	1029392	Identifier	strchr		1024475	0					
ANR	1029393	ArgumentList	p		1024475	1					
ANR	1029394	Argument	p		1024475	0					
ANR	1029395	Identifier	p		1024475	0					
ANR	1029396	Argument	' '		1024475	1					
ANR	1029397	PrimaryExpression	' '		1024475	0					
ANR	1029398	IfStatement	if ( pmin )		1024475	3					
ANR	1029399	Condition	pmin	3736:8:105946:105949	1024475	0	True				
ANR	1029400	Identifier	pmin		1024475	0					
ANR	1029401	CompoundStatement		793:14:22275:22275	1024475	1					
ANR	1029402	ExpressionStatement	* pmin ++ = 0	3737:5:105959:105970	1024475	0	True				
ANR	1029403	AssignmentExpression	* pmin ++ = 0		1024475	0		=			
ANR	1029404	UnaryOperationExpression	* pmin ++		1024475	0					
ANR	1029405	UnaryOperator	*		1024475	0					
ANR	1029406	PostIncDecOperationExpression	pmin ++		1024475	1					
ANR	1029407	Identifier	pmin		1024475	0					
ANR	1029408	IncDec	++		1024475	1					
ANR	1029409	PrimaryExpression	0		1024475	1					
ANR	1029410	ExpressionStatement	"pmax = strchr ( pmin , ' ' )"	3738:5:105977:106002	1024475	1	True				
ANR	1029411	AssignmentExpression	"pmax = strchr ( pmin , ' ' )"		1024475	0		=			
ANR	1029412	Identifier	pmax		1024475	0					
ANR	1029413	CallExpression	"strchr ( pmin , ' ' )"		1024475	1					
ANR	1029414	Callee	strchr		1024475	0					
ANR	1029415	Identifier	strchr		1024475	0					
ANR	1029416	ArgumentList	pmin		1024475	1					
ANR	1029417	Argument	pmin		1024475	0					
ANR	1029418	Identifier	pmin		1024475	0					
ANR	1029419	Argument	' '		1024475	1					
ANR	1029420	PrimaryExpression	' '		1024475	0					
ANR	1029421	IfStatement	if ( pmax )		1024475	2					
ANR	1029422	Condition	pmax	3739:9:106013:106016	1024475	0	True				
ANR	1029423	Identifier	pmax		1024475	0					
ANR	1029424	CompoundStatement		796:15:22342:22342	1024475	1					
ANR	1029425	ExpressionStatement	* pmax ++ = 0	3740:6:106027:106038	1024475	0	True				
ANR	1029426	AssignmentExpression	* pmax ++ = 0		1024475	0		=			
ANR	1029427	UnaryOperationExpression	* pmax ++		1024475	0					
ANR	1029428	UnaryOperator	*		1024475	0					
ANR	1029429	PostIncDecOperationExpression	pmax ++		1024475	1					
ANR	1029430	Identifier	pmax		1024475	0					
ANR	1029431	IncDec	++		1024475	1					
ANR	1029432	PrimaryExpression	0		1024475	1					
ANR	1029433	ExpressionStatement	"max = r_num_math ( core -> num , pmax )"	3741:6:106046:106080	1024475	1	True				
ANR	1029434	AssignmentExpression	"max = r_num_math ( core -> num , pmax )"		1024475	0		=			
ANR	1029435	Identifier	max		1024475	0					
ANR	1029436	CallExpression	"r_num_math ( core -> num , pmax )"		1024475	1					
ANR	1029437	Callee	r_num_math		1024475	0					
ANR	1029438	Identifier	r_num_math		1024475	0					
ANR	1029439	ArgumentList	core -> num		1024475	1					
ANR	1029440	Argument	core -> num		1024475	0					
ANR	1029441	PtrMemberAccess	core -> num		1024475	0					
ANR	1029442	Identifier	core		1024475	0					
ANR	1029443	Identifier	num		1024475	1					
ANR	1029444	Argument	pmax		1024475	1					
ANR	1029445	Identifier	pmax		1024475	0					
ANR	1029446	ExpressionStatement	"min = r_num_math ( core -> num , pmin )"	3743:5:106094:106128	1024475	3	True				
ANR	1029447	AssignmentExpression	"min = r_num_math ( core -> num , pmin )"		1024475	0		=			
ANR	1029448	Identifier	min		1024475	0					
ANR	1029449	CallExpression	"r_num_math ( core -> num , pmin )"		1024475	1					
ANR	1029450	Callee	r_num_math		1024475	0					
ANR	1029451	Identifier	r_num_math		1024475	0					
ANR	1029452	ArgumentList	core -> num		1024475	1					
ANR	1029453	Argument	core -> num		1024475	0					
ANR	1029454	PtrMemberAccess	core -> num		1024475	0					
ANR	1029455	Identifier	core		1024475	0					
ANR	1029456	Identifier	num		1024475	1					
ANR	1029457	Argument	pmin		1024475	1					
ANR	1029458	Identifier	pmin		1024475	0					
ANR	1029459	ExpressionStatement	"search_hash ( core , arg , p , min , max , & param )"	3745:4:106140:106184	1024475	4	True				
ANR	1029460	CallExpression	"search_hash ( core , arg , p , min , max , & param )"		1024475	0					
ANR	1029461	Callee	search_hash		1024475	0					
ANR	1029462	Identifier	search_hash		1024475	0					
ANR	1029463	ArgumentList	core		1024475	1					
ANR	1029464	Argument	core		1024475	0					
ANR	1029465	Identifier	core		1024475	0					
ANR	1029466	Argument	arg		1024475	1					
ANR	1029467	Identifier	arg		1024475	0					
ANR	1029468	Argument	p		1024475	2					
ANR	1029469	Identifier	p		1024475	0					
ANR	1029470	Argument	min		1024475	3					
ANR	1029471	Identifier	min		1024475	0					
ANR	1029472	Argument	max		1024475	4					
ANR	1029473	Identifier	max		1024475	0					
ANR	1029474	Argument	& param		1024475	5					
ANR	1029475	UnaryOperationExpression	& param		1024475	0					
ANR	1029476	UnaryOperator	&		1024475	0					
ANR	1029477	Identifier	param		1024475	1					
ANR	1029478	ElseStatement	else		1024475	0					
ANR	1029479	CompoundStatement		804:9:22523:22523	1024475	0					
ANR	1029480	ExpressionStatement	"eprintf ( ""Missing hash. See ph?\\n"" )"	3748:3:106205:106240	1024475	0	True				
ANR	1029481	CallExpression	"eprintf ( ""Missing hash. See ph?\\n"" )"		1024475	0					
ANR	1029482	Callee	eprintf		1024475	0					
ANR	1029483	Identifier	eprintf		1024475	0					
ANR	1029484	ArgumentList	"""Missing hash. See ph?\\n"""		1024475	1					
ANR	1029485	Argument	"""Missing hash. See ph?\\n"""		1024475	0					
ANR	1029486	PrimaryExpression	"""Missing hash. See ph?\\n"""		1024475	0					
ANR	1029487	ExpressionStatement	free ( arg )	3750:2:106248:106258	1024475	3	True				
ANR	1029488	CallExpression	free ( arg )		1024475	0					
ANR	1029489	Callee	free		1024475	0					
ANR	1029490	Identifier	free		1024475	0					
ANR	1029491	ArgumentList	arg		1024475	1					
ANR	1029492	Argument	arg		1024475	0					
ANR	1029493	Identifier	arg		1024475	0					
ANR	1029494	BreakStatement	break ;	3752:1:106264:106269	1024475	84	True				
ANR	1029495	Label	case 'f' :	3753:1:106272:106280	1024475	85	True				
ANR	1029496	IfStatement	if ( core -> offset )		1024475	86					
ANR	1029497	Condition	core -> offset	3754:6:106311:106322	1024475	0	True				
ANR	1029498	PtrMemberAccess	core -> offset		1024475	0					
ANR	1029499	Identifier	core		1024475	0					
ANR	1029500	Identifier	offset		1024475	1					
ANR	1029501	CompoundStatement		812:3:22653:22698	1024475	1					
ANR	1029502	IdentifierDeclStatement	"RInterval itv = { core -> offset , - core -> offset } ;"	3755:3:106330:106375	1024475	0	True				
ANR	1029503	IdentifierDecl	"itv = { core -> offset , - core -> offset }"		1024475	0					
ANR	1029504	IdentifierDeclType	RInterval		1024475	0					
ANR	1029505	Identifier	itv		1024475	1					
ANR	1029506	AssignmentExpression	"itv = { core -> offset , - core -> offset }"		1024475	2		=			
ANR	1029507	Identifier	itv		1024475	0					
ANR	1029508	InitializerList	core -> offset		1024475	1					
ANR	1029509	PtrMemberAccess	core -> offset		1024475	0					
ANR	1029510	Identifier	core		1024475	0					
ANR	1029511	Identifier	offset		1024475	1					
ANR	1029512	UnaryOperationExpression	- core -> offset		1024475	1					
ANR	1029513	UnaryOperator	-		1024475	0					
ANR	1029514	PtrMemberAccess	core -> offset		1024475	1					
ANR	1029515	Identifier	core		1024475	0					
ANR	1029516	Identifier	offset		1024475	1					
ANR	1029517	IfStatement	"if ( ! r_itv_overlap ( search_itv , itv ) )"		1024475	1					
ANR	1029518	Condition	"! r_itv_overlap ( search_itv , itv )"	3756:7:106384:106415	1024475	0	True				
ANR	1029519	UnaryOperationExpression	"! r_itv_overlap ( search_itv , itv )"		1024475	0					
ANR	1029520	UnaryOperator	!		1024475	0					
ANR	1029521	CallExpression	"r_itv_overlap ( search_itv , itv )"		1024475	1					
ANR	1029522	Callee	r_itv_overlap		1024475	0					
ANR	1029523	Identifier	r_itv_overlap		1024475	0					
ANR	1029524	ArgumentList	search_itv		1024475	1					
ANR	1029525	Argument	search_itv		1024475	0					
ANR	1029526	Identifier	search_itv		1024475	0					
ANR	1029527	Argument	itv		1024475	1					
ANR	1029528	Identifier	itv		1024475	0					
ANR	1029529	CompoundStatement		813:41:22741:22741	1024475	1					
ANR	1029530	ExpressionStatement	ret = false	3757:4:106424:106435	1024475	0	True				
ANR	1029531	AssignmentExpression	ret = false		1024475	0		=			
ANR	1029532	Identifier	ret		1024475	0					
ANR	1029533	Identifier	false		1024475	1					
ANR	1029534	GotoStatement	goto beach ;	3758:4:106441:106451	1024475	1	True				
ANR	1029535	Identifier	beach		1024475	0					
ANR	1029536	ElseStatement	else		1024475	0					
ANR	1029537	CompoundStatement		816:10:22786:22786	1024475	0					
ANR	1029538	ExpressionStatement	"search_itv = r_itv_intersect ( search_itv , itv )"	3760:4:106469:106515	1024475	0	True				
ANR	1029539	AssignmentExpression	"search_itv = r_itv_intersect ( search_itv , itv )"		1024475	0		=			
ANR	1029540	Identifier	search_itv		1024475	0					
ANR	1029541	CallExpression	"r_itv_intersect ( search_itv , itv )"		1024475	1					
ANR	1029542	Callee	r_itv_intersect		1024475	0					
ANR	1029543	Identifier	r_itv_intersect		1024475	0					
ANR	1029544	ArgumentList	search_itv		1024475	1					
ANR	1029545	Argument	search_itv		1024475	0					
ANR	1029546	Identifier	search_itv		1024475	0					
ANR	1029547	Argument	itv		1024475	1					
ANR	1029548	Identifier	itv		1024475	0					
ANR	1029549	BreakStatement	break ;	3763:2:106528:106533	1024475	87	True				
ANR	1029550	Label	case 'g' :	3764:1:106536:106544	1024475	88	True				
ANR	1029551	IfStatement	if ( input [ 1 ] == '?' )		1024475	89					
ANR	1029552	Condition	input [ 1 ] == '?'	3765:6:106573:106587	1024475	0	True				
ANR	1029553	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1029554	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029555	Identifier	input		1024475	0					
ANR	1029556	PrimaryExpression	1		1024475	1					
ANR	1029557	PrimaryExpression	'?'		1024475	1					
ANR	1029558	CompoundStatement		822:23:22913:22913	1024475	1					
ANR	1029559	ExpressionStatement	"r_cons_printf ( ""Usage: /g[g] [fromaddr] @ [toaddr]\\n"" )"	3766:3:106595:106649	1024475	0	True				
ANR	1029560	CallExpression	"r_cons_printf ( ""Usage: /g[g] [fromaddr] @ [toaddr]\\n"" )"		1024475	0					
ANR	1029561	Callee	r_cons_printf		1024475	0					
ANR	1029562	Identifier	r_cons_printf		1024475	0					
ANR	1029563	ArgumentList	"""Usage: /g[g] [fromaddr] @ [toaddr]\\n"""		1024475	1					
ANR	1029564	Argument	"""Usage: /g[g] [fromaddr] @ [toaddr]\\n"""		1024475	0					
ANR	1029565	PrimaryExpression	"""Usage: /g[g] [fromaddr] @ [toaddr]\\n"""		1024475	0					
ANR	1029566	ExpressionStatement	"r_cons_printf ( ""(find all graph paths A to B (/gg follow jumps, see search.count and anal.depth)"" )"	3767:3:106654:106752	1024475	1	True				
ANR	1029567	CallExpression	"r_cons_printf ( ""(find all graph paths A to B (/gg follow jumps, see search.count and anal.depth)"" )"		1024475	0					
ANR	1029568	Callee	r_cons_printf		1024475	0					
ANR	1029569	Identifier	r_cons_printf		1024475	0					
ANR	1029570	ArgumentList	"""(find all graph paths A to B (/gg follow jumps, see search.count and anal.depth)"""		1024475	1					
ANR	1029571	Argument	"""(find all graph paths A to B (/gg follow jumps, see search.count and anal.depth)"""		1024475	0					
ANR	1029572	PrimaryExpression	"""(find all graph paths A to B (/gg follow jumps, see search.count and anal.depth)"""		1024475	0					
ANR	1029573	ElseStatement	else		1024475	0					
ANR	1029574	CompoundStatement		837:3:23347:23408	1024475	0					
ANR	1029575	IdentifierDeclStatement	ut64 addr = UT64_MAX ;	3769:3:106768:106788	1024475	0	True				
ANR	1029576	IdentifierDecl	addr = UT64_MAX		1024475	0					
ANR	1029577	IdentifierDeclType	ut64		1024475	0					
ANR	1029578	Identifier	addr		1024475	1					
ANR	1029579	AssignmentExpression	addr = UT64_MAX		1024475	2		=			
ANR	1029580	Identifier	UT64_MAX		1024475	0					
ANR	1029581	Identifier	UT64_MAX		1024475	1					
ANR	1029582	IfStatement	if ( input [ 1 ] )		1024475	1					
ANR	1029583	Condition	input [ 1 ]	3770:7:106797:106804	1024475	0	True				
ANR	1029584	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029585	Identifier	input		1024475	0					
ANR	1029586	PrimaryExpression	1		1024475	1					
ANR	1029587	CompoundStatement		827:17:23130:23130	1024475	1					
ANR	1029588	ExpressionStatement	"addr = r_num_math ( core -> num , input + 2 )"	3771:4:106813:106853	1024475	0	True				
ANR	1029589	AssignmentExpression	"addr = r_num_math ( core -> num , input + 2 )"		1024475	0		=			
ANR	1029590	Identifier	addr		1024475	0					
ANR	1029591	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1029592	Callee	r_num_math		1024475	0					
ANR	1029593	Identifier	r_num_math		1024475	0					
ANR	1029594	ArgumentList	core -> num		1024475	1					
ANR	1029595	Argument	core -> num		1024475	0					
ANR	1029596	PtrMemberAccess	core -> num		1024475	0					
ANR	1029597	Identifier	core		1024475	0					
ANR	1029598	Identifier	num		1024475	1					
ANR	1029599	Argument	input + 2		1024475	1					
ANR	1029600	AdditiveExpression	input + 2		1024475	0		+			
ANR	1029601	Identifier	input		1024475	0					
ANR	1029602	PrimaryExpression	2		1024475	1					
ANR	1029603	ElseStatement	else		1024475	0					
ANR	1029604	CompoundStatement		830:4:23194:23254	1024475	0					
ANR	1029605	IdentifierDeclStatement	"RAnalFunction * fcn = r_anal_get_fcn_at ( core -> anal , addr , 0 ) ;"	3773:4:106871:106931	1024475	0	True				
ANR	1029606	IdentifierDecl	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , 0 )"		1024475	0					
ANR	1029607	IdentifierDeclType	RAnalFunction *		1024475	0					
ANR	1029608	Identifier	fcn		1024475	1					
ANR	1029609	AssignmentExpression	"* fcn = r_anal_get_fcn_at ( core -> anal , addr , 0 )"		1024475	2		=			
ANR	1029610	Identifier	fcn		1024475	0					
ANR	1029611	CallExpression	"r_anal_get_fcn_at ( core -> anal , addr , 0 )"		1024475	1					
ANR	1029612	Callee	r_anal_get_fcn_at		1024475	0					
ANR	1029613	Identifier	r_anal_get_fcn_at		1024475	0					
ANR	1029614	ArgumentList	core -> anal		1024475	1					
ANR	1029615	Argument	core -> anal		1024475	0					
ANR	1029616	PtrMemberAccess	core -> anal		1024475	0					
ANR	1029617	Identifier	core		1024475	0					
ANR	1029618	Identifier	anal		1024475	1					
ANR	1029619	Argument	addr		1024475	1					
ANR	1029620	Identifier	addr		1024475	0					
ANR	1029621	Argument	0		1024475	2					
ANR	1029622	PrimaryExpression	0		1024475	0					
ANR	1029623	IfStatement	if ( fcn )		1024475	1					
ANR	1029624	Condition	fcn	3774:8:106941:106943	1024475	0	True				
ANR	1029625	Identifier	fcn		1024475	0					
ANR	1029626	CompoundStatement		831:13:23269:23269	1024475	1					
ANR	1029627	ExpressionStatement	addr = fcn -> addr	3775:5:106953:106969	1024475	0	True				
ANR	1029628	AssignmentExpression	addr = fcn -> addr		1024475	0		=			
ANR	1029629	Identifier	addr		1024475	0					
ANR	1029630	PtrMemberAccess	fcn -> addr		1024475	1					
ANR	1029631	Identifier	fcn		1024475	0					
ANR	1029632	Identifier	addr		1024475	1					
ANR	1029633	ElseStatement	else		1024475	0					
ANR	1029634	CompoundStatement		833:11:23305:23305	1024475	0					
ANR	1029635	ExpressionStatement	addr = core -> offset	3777:5:106989:107008	1024475	0	True				
ANR	1029636	AssignmentExpression	addr = core -> offset		1024475	0		=			
ANR	1029637	Identifier	addr		1024475	0					
ANR	1029638	PtrMemberAccess	core -> offset		1024475	1					
ANR	1029639	Identifier	core		1024475	0					
ANR	1029640	Identifier	offset		1024475	1					
ANR	1029641	IdentifierDeclStatement	"const int depth = r_config_get_i ( core -> config , ""anal.depth"" ) ;"	3780:3:107024:107085	1024475	2	True				
ANR	1029642	IdentifierDecl	"depth = r_config_get_i ( core -> config , ""anal.depth"" )"		1024475	0					
ANR	1029643	IdentifierDeclType	const int		1024475	0					
ANR	1029644	Identifier	depth		1024475	1					
ANR	1029645	AssignmentExpression	"depth = r_config_get_i ( core -> config , ""anal.depth"" )"		1024475	2		=			
ANR	1029646	Identifier	depth		1024475	0					
ANR	1029647	CallExpression	"r_config_get_i ( core -> config , ""anal.depth"" )"		1024475	1					
ANR	1029648	Callee	r_config_get_i		1024475	0					
ANR	1029649	Identifier	r_config_get_i		1024475	0					
ANR	1029650	ArgumentList	core -> config		1024475	1					
ANR	1029651	Argument	core -> config		1024475	0					
ANR	1029652	PtrMemberAccess	core -> config		1024475	0					
ANR	1029653	Identifier	core		1024475	0					
ANR	1029654	Identifier	config		1024475	1					
ANR	1029655	Argument	"""anal.depth"""		1024475	1					
ANR	1029656	PrimaryExpression	"""anal.depth"""		1024475	0					
ANR	1029657	IfStatement	if ( input [ 1 ] != '\\0' )		1024475	3					
ANR	1029658	Condition	input [ 1 ] != '\\0'	3782:7:107122:107137	1024475	0	True				
ANR	1029659	EqualityExpression	input [ 1 ] != '\\0'		1024475	0		!=			
ANR	1029660	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029661	Identifier	input		1024475	0					
ANR	1029662	PrimaryExpression	1		1024475	1					
ANR	1029663	PrimaryExpression	'\\0'		1024475	1					
ANR	1029664	CompoundStatement		839:25:23463:23463	1024475	1					
ANR	1029665	ExpressionStatement	"r_core_anal_paths ( core , addr , core -> offset , input [ 1 ] == 'g' , depth , ( input [ 1 ] == 'j' || input [ 2 ] == 'j' ) )"	3783:4:107146:107252	1024475	0	True				
ANR	1029666	CallExpression	"r_core_anal_paths ( core , addr , core -> offset , input [ 1 ] == 'g' , depth , ( input [ 1 ] == 'j' || input [ 2 ] == 'j' ) )"		1024475	0					
ANR	1029667	Callee	r_core_anal_paths		1024475	0					
ANR	1029668	Identifier	r_core_anal_paths		1024475	0					
ANR	1029669	ArgumentList	core		1024475	1					
ANR	1029670	Argument	core		1024475	0					
ANR	1029671	Identifier	core		1024475	0					
ANR	1029672	Argument	addr		1024475	1					
ANR	1029673	Identifier	addr		1024475	0					
ANR	1029674	Argument	core -> offset		1024475	2					
ANR	1029675	PtrMemberAccess	core -> offset		1024475	0					
ANR	1029676	Identifier	core		1024475	0					
ANR	1029677	Identifier	offset		1024475	1					
ANR	1029678	Argument	input [ 1 ] == 'g'		1024475	3					
ANR	1029679	EqualityExpression	input [ 1 ] == 'g'		1024475	0		==			
ANR	1029680	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029681	Identifier	input		1024475	0					
ANR	1029682	PrimaryExpression	1		1024475	1					
ANR	1029683	PrimaryExpression	'g'		1024475	1					
ANR	1029684	Argument	depth		1024475	4					
ANR	1029685	Identifier	depth		1024475	0					
ANR	1029686	Argument	input [ 1 ] == 'j' || input [ 2 ] == 'j'		1024475	5					
ANR	1029687	OrExpression	input [ 1 ] == 'j' || input [ 2 ] == 'j'		1024475	0		||			
ANR	1029688	EqualityExpression	input [ 1 ] == 'j'		1024475	0		==			
ANR	1029689	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1029690	Identifier	input		1024475	0					
ANR	1029691	PrimaryExpression	1		1024475	1					
ANR	1029692	PrimaryExpression	'j'		1024475	1					
ANR	1029693	EqualityExpression	input [ 2 ] == 'j'		1024475	1		==			
ANR	1029694	ArrayIndexing	input [ 2 ]		1024475	0					
ANR	1029695	Identifier	input		1024475	0					
ANR	1029696	PrimaryExpression	2		1024475	1					
ANR	1029697	PrimaryExpression	'j'		1024475	1					
ANR	1029698	BreakStatement	break ;	3786:2:107265:107270	1024475	90	True				
ANR	1029699	Label	case 'F' :	3787:1:107273:107281	1024475	91	True				
ANR	1029700	IfStatement	if ( input [ param_offset - 1 ] == ' ' )		1024475	92					
ANR	1029701	Condition	input [ param_offset - 1 ] == ' '	3788:6:107337:107366	1024475	0	True				
ANR	1029702	EqualityExpression	input [ param_offset - 1 ] == ' '		1024475	0		==			
ANR	1029703	ArrayIndexing	input [ param_offset - 1 ]		1024475	0					
ANR	1029704	Identifier	input		1024475	0					
ANR	1029705	AdditiveExpression	param_offset - 1		1024475	1		-			
ANR	1029706	Identifier	param_offset		1024475	0					
ANR	1029707	PrimaryExpression	1		1024475	1					
ANR	1029708	PrimaryExpression	' '		1024475	1					
ANR	1029709	CompoundStatement		877:3:24409:24427	1024475	1					
ANR	1029710	IdentifierDeclStatement	int n_args ;	3789:3:107374:107384	1024475	0	True				
ANR	1029711	IdentifierDecl	n_args		1024475	0					
ANR	1029712	IdentifierDeclType	int		1024475	0					
ANR	1029713	Identifier	n_args		1024475	1					
ANR	1029714	IdentifierDeclStatement	"char * * args = r_str_argv ( input + param_offset , & n_args ) ;"	3790:3:107389:107445	1024475	1	True				
ANR	1029715	IdentifierDecl	"* * args = r_str_argv ( input + param_offset , & n_args )"		1024475	0					
ANR	1029716	IdentifierDeclType	char * *		1024475	0					
ANR	1029717	Identifier	args		1024475	1					
ANR	1029718	AssignmentExpression	"* * args = r_str_argv ( input + param_offset , & n_args )"		1024475	2		=			
ANR	1029719	Identifier	args		1024475	0					
ANR	1029720	CallExpression	"r_str_argv ( input + param_offset , & n_args )"		1024475	1					
ANR	1029721	Callee	r_str_argv		1024475	0					
ANR	1029722	Identifier	r_str_argv		1024475	0					
ANR	1029723	ArgumentList	input + param_offset		1024475	1					
ANR	1029724	Argument	input + param_offset		1024475	0					
ANR	1029725	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1029726	Identifier	input		1024475	0					
ANR	1029727	Identifier	param_offset		1024475	1					
ANR	1029728	Argument	& n_args		1024475	1					
ANR	1029729	UnaryOperationExpression	& n_args		1024475	0					
ANR	1029730	UnaryOperator	&		1024475	0					
ANR	1029731	Identifier	n_args		1024475	1					
ANR	1029732	IdentifierDeclStatement	ut8 * buf = NULL ;	3791:3:107450:107465	1024475	2	True				
ANR	1029733	IdentifierDecl	* buf = NULL		1024475	0					
ANR	1029734	IdentifierDeclType	ut8 *		1024475	0					
ANR	1029735	Identifier	buf		1024475	1					
ANR	1029736	AssignmentExpression	* buf = NULL		1024475	2		=			
ANR	1029737	Identifier	NULL		1024475	0					
ANR	1029738	Identifier	NULL		1024475	1					
ANR	1029739	IdentifierDeclStatement	ut64 offset = 0 ;	3792:3:107470:107485	1024475	3	True				
ANR	1029740	IdentifierDecl	offset = 0		1024475	0					
ANR	1029741	IdentifierDeclType	ut64		1024475	0					
ANR	1029742	Identifier	offset		1024475	1					
ANR	1029743	AssignmentExpression	offset = 0		1024475	2		=			
ANR	1029744	Identifier	offset		1024475	0					
ANR	1029745	PrimaryExpression	0		1024475	1					
ANR	1029746	IdentifierDeclStatement	int size ;	3793:3:107490:107498	1024475	4	True				
ANR	1029747	IdentifierDecl	size		1024475	0					
ANR	1029748	IdentifierDeclType	int		1024475	0					
ANR	1029749	Identifier	size		1024475	1					
ANR	1029750	ExpressionStatement	"buf = ( ut8 * ) r_file_slurp ( args [ 0 ] , & size )"	3794:3:107503:107545	1024475	5	True				
ANR	1029751	AssignmentExpression	"buf = ( ut8 * ) r_file_slurp ( args [ 0 ] , & size )"		1024475	0		=			
ANR	1029752	Identifier	buf		1024475	0					
ANR	1029753	CastExpression	"( ut8 * ) r_file_slurp ( args [ 0 ] , & size )"		1024475	1					
ANR	1029754	CastTarget	ut8 *		1024475	0					
ANR	1029755	CallExpression	"r_file_slurp ( args [ 0 ] , & size )"		1024475	1					
ANR	1029756	Callee	r_file_slurp		1024475	0					
ANR	1029757	Identifier	r_file_slurp		1024475	0					
ANR	1029758	ArgumentList	args [ 0 ]		1024475	1					
ANR	1029759	Argument	args [ 0 ]		1024475	0					
ANR	1029760	ArrayIndexing	args [ 0 ]		1024475	0					
ANR	1029761	Identifier	args		1024475	0					
ANR	1029762	PrimaryExpression	0		1024475	1					
ANR	1029763	Argument	& size		1024475	1					
ANR	1029764	UnaryOperationExpression	& size		1024475	0					
ANR	1029765	UnaryOperator	&		1024475	0					
ANR	1029766	Identifier	size		1024475	1					
ANR	1029767	IfStatement	if ( ! buf )		1024475	6					
ANR	1029768	Condition	! buf	3795:7:107554:107557	1024475	0	True				
ANR	1029769	UnaryOperationExpression	! buf		1024475	0					
ANR	1029770	UnaryOperator	!		1024475	0					
ANR	1029771	Identifier	buf		1024475	1					
ANR	1029772	CompoundStatement		852:13:23883:23883	1024475	1					
ANR	1029773	ExpressionStatement	"eprintf ( ""Cannot open '%s'\\n"" , args [ 0 ] )"	3796:4:107566:107605	1024475	0	True				
ANR	1029774	CallExpression	"eprintf ( ""Cannot open '%s'\\n"" , args [ 0 ] )"		1024475	0					
ANR	1029775	Callee	eprintf		1024475	0					
ANR	1029776	Identifier	eprintf		1024475	0					
ANR	1029777	ArgumentList	"""Cannot open '%s'\\n"""		1024475	1					
ANR	1029778	Argument	"""Cannot open '%s'\\n"""		1024475	0					
ANR	1029779	PrimaryExpression	"""Cannot open '%s'\\n"""		1024475	0					
ANR	1029780	Argument	args [ 0 ]		1024475	1					
ANR	1029781	ArrayIndexing	args [ 0 ]		1024475	0					
ANR	1029782	Identifier	args		1024475	0					
ANR	1029783	PrimaryExpression	0		1024475	1					
ANR	1029784	ExpressionStatement	r_str_argv_free ( args )	3797:4:107611:107633	1024475	1	True				
ANR	1029785	CallExpression	r_str_argv_free ( args )		1024475	0					
ANR	1029786	Callee	r_str_argv_free		1024475	0					
ANR	1029787	Identifier	r_str_argv_free		1024475	0					
ANR	1029788	ArgumentList	args		1024475	1					
ANR	1029789	Argument	args		1024475	0					
ANR	1029790	Identifier	args		1024475	0					
ANR	1029791	BreakStatement	break ;	3798:4:107639:107644	1024475	2	True				
ANR	1029792	IfStatement	if ( n_args > 1 )		1024475	7					
ANR	1029793	Condition	n_args > 1	3800:7:107658:107667	1024475	0	True				
ANR	1029794	RelationalExpression	n_args > 1		1024475	0		>			
ANR	1029795	Identifier	n_args		1024475	0					
ANR	1029796	PrimaryExpression	1		1024475	1					
ANR	1029797	CompoundStatement		857:19:23993:23993	1024475	1					
ANR	1029798	ExpressionStatement	"offset = r_num_math ( core -> num , args [ 1 ] )"	3801:4:107676:107716	1024475	0	True				
ANR	1029799	AssignmentExpression	"offset = r_num_math ( core -> num , args [ 1 ] )"		1024475	0		=			
ANR	1029800	Identifier	offset		1024475	0					
ANR	1029801	CallExpression	"r_num_math ( core -> num , args [ 1 ] )"		1024475	1					
ANR	1029802	Callee	r_num_math		1024475	0					
ANR	1029803	Identifier	r_num_math		1024475	0					
ANR	1029804	ArgumentList	core -> num		1024475	1					
ANR	1029805	Argument	core -> num		1024475	0					
ANR	1029806	PtrMemberAccess	core -> num		1024475	0					
ANR	1029807	Identifier	core		1024475	0					
ANR	1029808	Identifier	num		1024475	1					
ANR	1029809	Argument	args [ 1 ]		1024475	1					
ANR	1029810	ArrayIndexing	args [ 1 ]		1024475	0					
ANR	1029811	Identifier	args		1024475	0					
ANR	1029812	PrimaryExpression	1		1024475	1					
ANR	1029813	IfStatement	if ( size <= offset )		1024475	1					
ANR	1029814	Condition	size <= offset	3802:8:107726:107739	1024475	0	True				
ANR	1029815	RelationalExpression	size <= offset		1024475	0		<=			
ANR	1029816	Identifier	size		1024475	0					
ANR	1029817	Identifier	offset		1024475	1					
ANR	1029818	CompoundStatement		859:24:24065:24065	1024475	1					
ANR	1029819	ExpressionStatement	"eprintf ( ""size <= offset\\n"" )"	3803:5:107749:107777	1024475	0	True				
ANR	1029820	CallExpression	"eprintf ( ""size <= offset\\n"" )"		1024475	0					
ANR	1029821	Callee	eprintf		1024475	0					
ANR	1029822	Identifier	eprintf		1024475	0					
ANR	1029823	ArgumentList	"""size <= offset\\n"""		1024475	1					
ANR	1029824	Argument	"""size <= offset\\n"""		1024475	0					
ANR	1029825	PrimaryExpression	"""size <= offset\\n"""		1024475	0					
ANR	1029826	ExpressionStatement	r_str_argv_free ( args )	3804:5:107784:107806	1024475	1	True				
ANR	1029827	CallExpression	r_str_argv_free ( args )		1024475	0					
ANR	1029828	Callee	r_str_argv_free		1024475	0					
ANR	1029829	Identifier	r_str_argv_free		1024475	0					
ANR	1029830	ArgumentList	args		1024475	1					
ANR	1029831	Argument	args		1024475	0					
ANR	1029832	Identifier	args		1024475	0					
ANR	1029833	ExpressionStatement	free ( buf )	3805:5:107813:107823	1024475	2	True				
ANR	1029834	CallExpression	free ( buf )		1024475	0					
ANR	1029835	Callee	free		1024475	0					
ANR	1029836	Identifier	free		1024475	0					
ANR	1029837	ArgumentList	buf		1024475	1					
ANR	1029838	Argument	buf		1024475	0					
ANR	1029839	Identifier	buf		1024475	0					
ANR	1029840	BreakStatement	break ;	3806:5:107830:107835	1024475	3	True				
ANR	1029841	IfStatement	if ( n_args > 2 )		1024475	8					
ANR	1029842	Condition	n_args > 2	3809:7:107855:107864	1024475	0	True				
ANR	1029843	RelationalExpression	n_args > 2		1024475	0		>			
ANR	1029844	Identifier	n_args		1024475	0					
ANR	1029845	PrimaryExpression	2		1024475	1					
ANR	1029846	CompoundStatement		866:19:24190:24190	1024475	1					
ANR	1029847	ExpressionStatement	"len = r_num_math ( core -> num , args [ 2 ] )"	3810:4:107873:107910	1024475	0	True				
ANR	1029848	AssignmentExpression	"len = r_num_math ( core -> num , args [ 2 ] )"		1024475	0		=			
ANR	1029849	Identifier	len		1024475	0					
ANR	1029850	CallExpression	"r_num_math ( core -> num , args [ 2 ] )"		1024475	1					
ANR	1029851	Callee	r_num_math		1024475	0					
ANR	1029852	Identifier	r_num_math		1024475	0					
ANR	1029853	ArgumentList	core -> num		1024475	1					
ANR	1029854	Argument	core -> num		1024475	0					
ANR	1029855	PtrMemberAccess	core -> num		1024475	0					
ANR	1029856	Identifier	core		1024475	0					
ANR	1029857	Identifier	num		1024475	1					
ANR	1029858	Argument	args [ 2 ]		1024475	1					
ANR	1029859	ArrayIndexing	args [ 2 ]		1024475	0					
ANR	1029860	Identifier	args		1024475	0					
ANR	1029861	PrimaryExpression	2		1024475	1					
ANR	1029862	IfStatement	if ( len > size - offset )		1024475	1					
ANR	1029863	Condition	len > size - offset	3811:8:107920:107938	1024475	0	True				
ANR	1029864	RelationalExpression	len > size - offset		1024475	0		>			
ANR	1029865	Identifier	len		1024475	0					
ANR	1029866	AdditiveExpression	size - offset		1024475	1		-			
ANR	1029867	Identifier	size		1024475	0					
ANR	1029868	Identifier	offset		1024475	1					
ANR	1029869	CompoundStatement		868:29:24264:24264	1024475	1					
ANR	1029870	ExpressionStatement	"eprintf ( ""len too large\\n"" )"	3812:5:107948:107975	1024475	0	True				
ANR	1029871	CallExpression	"eprintf ( ""len too large\\n"" )"		1024475	0					
ANR	1029872	Callee	eprintf		1024475	0					
ANR	1029873	Identifier	eprintf		1024475	0					
ANR	1029874	ArgumentList	"""len too large\\n"""		1024475	1					
ANR	1029875	Argument	"""len too large\\n"""		1024475	0					
ANR	1029876	PrimaryExpression	"""len too large\\n"""		1024475	0					
ANR	1029877	ExpressionStatement	r_str_argv_free ( args )	3813:5:107982:108004	1024475	1	True				
ANR	1029878	CallExpression	r_str_argv_free ( args )		1024475	0					
ANR	1029879	Callee	r_str_argv_free		1024475	0					
ANR	1029880	Identifier	r_str_argv_free		1024475	0					
ANR	1029881	ArgumentList	args		1024475	1					
ANR	1029882	Argument	args		1024475	0					
ANR	1029883	Identifier	args		1024475	0					
ANR	1029884	ExpressionStatement	free ( buf )	3814:5:108011:108021	1024475	2	True				
ANR	1029885	CallExpression	free ( buf )		1024475	0					
ANR	1029886	Callee	free		1024475	0					
ANR	1029887	Identifier	free		1024475	0					
ANR	1029888	ArgumentList	buf		1024475	1					
ANR	1029889	Argument	buf		1024475	0					
ANR	1029890	Identifier	buf		1024475	0					
ANR	1029891	BreakStatement	break ;	3815:5:108028:108033	1024475	3	True				
ANR	1029892	ElseStatement	else		1024475	0					
ANR	1029893	CompoundStatement		874:10:24374:24374	1024475	0					
ANR	1029894	ExpressionStatement	len = size - offset	3818:4:108057:108076	1024475	0	True				
ANR	1029895	AssignmentExpression	len = size - offset		1024475	0		=			
ANR	1029896	Identifier	len		1024475	0					
ANR	1029897	AdditiveExpression	size - offset		1024475	1		-			
ANR	1029898	Identifier	size		1024475	0					
ANR	1029899	Identifier	offset		1024475	1					
ANR	1029900	IdentifierDeclStatement	RSearchKeyword * kw ;	3820:3:108086:108104	1024475	9	True				
ANR	1029901	IdentifierDecl	* kw		1024475	0					
ANR	1029902	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1029903	Identifier	kw		1024475	1					
ANR	1029904	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	3821:3:108109:108156	1024475	10	True				
ANR	1029905	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1024475	0					
ANR	1029906	Callee	r_search_reset		1024475	0					
ANR	1029907	Identifier	r_search_reset		1024475	0					
ANR	1029908	ArgumentList	core -> search		1024475	1					
ANR	1029909	Argument	core -> search		1024475	0					
ANR	1029910	PtrMemberAccess	core -> search		1024475	0					
ANR	1029911	Identifier	core		1024475	0					
ANR	1029912	Identifier	search		1024475	1					
ANR	1029913	Argument	R_SEARCH_KEYWORD		1024475	1					
ANR	1029914	Identifier	R_SEARCH_KEYWORD		1024475	0					
ANR	1029915	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3822:3:108161:108252	1024475	11	True				
ANR	1029916	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1029917	Callee	r_search_set_distance		1024475	0					
ANR	1029918	Identifier	r_search_set_distance		1024475	0					
ANR	1029919	ArgumentList	core -> search		1024475	1					
ANR	1029920	Argument	core -> search		1024475	0					
ANR	1029921	PtrMemberAccess	core -> search		1024475	0					
ANR	1029922	Identifier	core		1024475	0					
ANR	1029923	Identifier	search		1024475	1					
ANR	1029924	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1029925	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1029926	CastTarget	int		1024475	0					
ANR	1029927	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1029928	Callee	r_config_get_i		1024475	0					
ANR	1029929	Identifier	r_config_get_i		1024475	0					
ANR	1029930	ArgumentList	core -> config		1024475	1					
ANR	1029931	Argument	core -> config		1024475	0					
ANR	1029932	PtrMemberAccess	core -> config		1024475	0					
ANR	1029933	Identifier	core		1024475	0					
ANR	1029934	Identifier	config		1024475	1					
ANR	1029935	Argument	"""search.distance"""		1024475	1					
ANR	1029936	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1029937	ExpressionStatement	"kw = r_search_keyword_new ( buf + offset , len , NULL , 0 , NULL )"	3823:3:108257:108317	1024475	12	True				
ANR	1029938	AssignmentExpression	"kw = r_search_keyword_new ( buf + offset , len , NULL , 0 , NULL )"		1024475	0		=			
ANR	1029939	Identifier	kw		1024475	0					
ANR	1029940	CallExpression	"r_search_keyword_new ( buf + offset , len , NULL , 0 , NULL )"		1024475	1					
ANR	1029941	Callee	r_search_keyword_new		1024475	0					
ANR	1029942	Identifier	r_search_keyword_new		1024475	0					
ANR	1029943	ArgumentList	buf + offset		1024475	1					
ANR	1029944	Argument	buf + offset		1024475	0					
ANR	1029945	AdditiveExpression	buf + offset		1024475	0		+			
ANR	1029946	Identifier	buf		1024475	0					
ANR	1029947	Identifier	offset		1024475	1					
ANR	1029948	Argument	len		1024475	1					
ANR	1029949	Identifier	len		1024475	0					
ANR	1029950	Argument	NULL		1024475	2					
ANR	1029951	Identifier	NULL		1024475	0					
ANR	1029952	Argument	0		1024475	3					
ANR	1029953	PrimaryExpression	0		1024475	0					
ANR	1029954	Argument	NULL		1024475	4					
ANR	1029955	Identifier	NULL		1024475	0					
ANR	1029956	IfStatement	if ( kw )		1024475	13					
ANR	1029957	Condition	kw	3824:7:108326:108327	1024475	0	True				
ANR	1029958	Identifier	kw		1024475	0					
ANR	1029959	CompoundStatement		881:11:24653:24653	1024475	1					
ANR	1029960	ExpressionStatement	"r_search_kw_add ( core -> search , kw )"	3825:4:108336:108370	1024475	0	True				
ANR	1029961	CallExpression	"r_search_kw_add ( core -> search , kw )"		1024475	0					
ANR	1029962	Callee	r_search_kw_add		1024475	0					
ANR	1029963	Identifier	r_search_kw_add		1024475	0					
ANR	1029964	ArgumentList	core -> search		1024475	1					
ANR	1029965	Argument	core -> search		1024475	0					
ANR	1029966	PtrMemberAccess	core -> search		1024475	0					
ANR	1029967	Identifier	core		1024475	0					
ANR	1029968	Identifier	search		1024475	1					
ANR	1029969	Argument	kw		1024475	1					
ANR	1029970	Identifier	kw		1024475	0					
ANR	1029971	ExpressionStatement	r_search_begin ( core -> search )	3827:4:108442:108471	1024475	1	True				
ANR	1029972	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1029973	Callee	r_search_begin		1024475	0					
ANR	1029974	Identifier	r_search_begin		1024475	0					
ANR	1029975	ArgumentList	core -> search		1024475	1					
ANR	1029976	Argument	core -> search		1024475	0					
ANR	1029977	PtrMemberAccess	core -> search		1024475	0					
ANR	1029978	Identifier	core		1024475	0					
ANR	1029979	Identifier	search		1024475	1					
ANR	1029980	ExpressionStatement	dosearch = true	3828:4:108477:108492	1024475	2	True				
ANR	1029981	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1029982	Identifier	dosearch		1024475	0					
ANR	1029983	Identifier	true		1024475	1					
ANR	1029984	ElseStatement	else		1024475	0					
ANR	1029985	CompoundStatement		886:10:24827:24827	1024475	0					
ANR	1029986	ExpressionStatement	"eprintf ( ""no keyword\\n"" )"	3830:4:108510:108534	1024475	0	True				
ANR	1029987	CallExpression	"eprintf ( ""no keyword\\n"" )"		1024475	0					
ANR	1029988	Callee	eprintf		1024475	0					
ANR	1029989	Identifier	eprintf		1024475	0					
ANR	1029990	ArgumentList	"""no keyword\\n"""		1024475	1					
ANR	1029991	Argument	"""no keyword\\n"""		1024475	0					
ANR	1029992	PrimaryExpression	"""no keyword\\n"""		1024475	0					
ANR	1029993	ExpressionStatement	r_str_argv_free ( args )	3833:3:108545:108567	1024475	14	True				
ANR	1029994	CallExpression	r_str_argv_free ( args )		1024475	0					
ANR	1029995	Callee	r_str_argv_free		1024475	0					
ANR	1029996	Identifier	r_str_argv_free		1024475	0					
ANR	1029997	ArgumentList	args		1024475	1					
ANR	1029998	Argument	args		1024475	0					
ANR	1029999	Identifier	args		1024475	0					
ANR	1030000	ExpressionStatement	free ( buf )	3834:3:108572:108582	1024475	15	True				
ANR	1030001	CallExpression	free ( buf )		1024475	0					
ANR	1030002	Callee	free		1024475	0					
ANR	1030003	Identifier	free		1024475	0					
ANR	1030004	ArgumentList	buf		1024475	1					
ANR	1030005	Argument	buf		1024475	0					
ANR	1030006	Identifier	buf		1024475	0					
ANR	1030007	ElseStatement	else		1024475	0					
ANR	1030008	CompoundStatement		892:9:24916:24916	1024475	0					
ANR	1030009	ExpressionStatement	"eprintf ( ""Usage: /F[j] [file]??([offset] ([sz]))\\n"" )"	3836:3:108598:108650	1024475	0	True				
ANR	1030010	CallExpression	"eprintf ( ""Usage: /F[j] [file]??([offset] ([sz]))\\n"" )"		1024475	0					
ANR	1030011	Callee	eprintf		1024475	0					
ANR	1030012	Identifier	eprintf		1024475	0					
ANR	1030013	ArgumentList	"""Usage: /F[j] [file]??([offset] ([sz]))\\n"""		1024475	1					
ANR	1030014	Argument	"""Usage: /F[j] [file]??([offset] ([sz]))\\n"""		1024475	0					
ANR	1030015	PrimaryExpression	"""Usage: /F[j] [file]??([offset] ([sz]))\\n"""		1024475	0					
ANR	1030016	BreakStatement	break ;	3838:2:108658:108663	1024475	93	True				
ANR	1030017	Label	case 'x' :	3839:1:108666:108674	1024475	94	True				
ANR	1030018	IfStatement	if ( input [ 1 ] == '?' )		1024475	95					
ANR	1030019	Condition	input [ 1 ] == '?'	3840:6:108701:108715	1024475	0	True				
ANR	1030020	EqualityExpression	input [ 1 ] == '?'		1024475	0		==			
ANR	1030021	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1030022	Identifier	input		1024475	0					
ANR	1030023	PrimaryExpression	1		1024475	1					
ANR	1030024	PrimaryExpression	'?'		1024475	1					
ANR	1030025	CompoundStatement		897:23:25041:25041	1024475	1					
ANR	1030026	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash_x )"	3841:3:108723:108763	1024475	0	True				
ANR	1030027	CallExpression	"r_core_cmd_help ( core , help_msg_slash_x )"		1024475	0					
ANR	1030028	Callee	r_core_cmd_help		1024475	0					
ANR	1030029	Identifier	r_core_cmd_help		1024475	0					
ANR	1030030	ArgumentList	core		1024475	1					
ANR	1030031	Argument	core		1024475	0					
ANR	1030032	Identifier	core		1024475	0					
ANR	1030033	Argument	help_msg_slash_x		1024475	1					
ANR	1030034	Identifier	help_msg_slash_x		1024475	0					
ANR	1030035	ElseStatement	else		1024475	0					
ANR	1030036	CompoundStatement		901:3:25125:25168	1024475	0					
ANR	1030037	IdentifierDeclStatement	RSearchKeyword * kw ;	3843:3:108779:108797	1024475	0	True				
ANR	1030038	IdentifierDecl	* kw		1024475	0					
ANR	1030039	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1030040	Identifier	kw		1024475	1					
ANR	1030041	IdentifierDeclStatement	"char * s , * p = strdup ( input + param_offset ) ;"	3844:3:108802:108845	1024475	1	True				
ANR	1030042	IdentifierDecl	* s		1024475	0					
ANR	1030043	IdentifierDeclType	char *		1024475	0					
ANR	1030044	Identifier	s		1024475	1					
ANR	1030045	IdentifierDecl	* p = strdup ( input + param_offset )		1024475	1					
ANR	1030046	IdentifierDeclType	char *		1024475	0					
ANR	1030047	Identifier	p		1024475	1					
ANR	1030048	AssignmentExpression	* p = strdup ( input + param_offset )		1024475	2		=			
ANR	1030049	Identifier	p		1024475	0					
ANR	1030050	CallExpression	strdup ( input + param_offset )		1024475	1					
ANR	1030051	Callee	strdup		1024475	0					
ANR	1030052	Identifier	strdup		1024475	0					
ANR	1030053	ArgumentList	input + param_offset		1024475	1					
ANR	1030054	Argument	input + param_offset		1024475	0					
ANR	1030055	AdditiveExpression	input + param_offset		1024475	0		+			
ANR	1030056	Identifier	input		1024475	0					
ANR	1030057	Identifier	param_offset		1024475	1					
ANR	1030058	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"	3845:3:108850:108897	1024475	2	True				
ANR	1030059	CallExpression	"r_search_reset ( core -> search , R_SEARCH_KEYWORD )"		1024475	0					
ANR	1030060	Callee	r_search_reset		1024475	0					
ANR	1030061	Identifier	r_search_reset		1024475	0					
ANR	1030062	ArgumentList	core -> search		1024475	1					
ANR	1030063	Argument	core -> search		1024475	0					
ANR	1030064	PtrMemberAccess	core -> search		1024475	0					
ANR	1030065	Identifier	core		1024475	0					
ANR	1030066	Identifier	search		1024475	1					
ANR	1030067	Argument	R_SEARCH_KEYWORD		1024475	1					
ANR	1030068	Identifier	R_SEARCH_KEYWORD		1024475	0					
ANR	1030069	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3846:3:108902:108993	1024475	3	True				
ANR	1030070	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1030071	Callee	r_search_set_distance		1024475	0					
ANR	1030072	Identifier	r_search_set_distance		1024475	0					
ANR	1030073	ArgumentList	core -> search		1024475	1					
ANR	1030074	Argument	core -> search		1024475	0					
ANR	1030075	PtrMemberAccess	core -> search		1024475	0					
ANR	1030076	Identifier	core		1024475	0					
ANR	1030077	Identifier	search		1024475	1					
ANR	1030078	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1030079	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1030080	CastTarget	int		1024475	0					
ANR	1030081	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1030082	Callee	r_config_get_i		1024475	0					
ANR	1030083	Identifier	r_config_get_i		1024475	0					
ANR	1030084	ArgumentList	core -> config		1024475	1					
ANR	1030085	Argument	core -> config		1024475	0					
ANR	1030086	PtrMemberAccess	core -> config		1024475	0					
ANR	1030087	Identifier	core		1024475	0					
ANR	1030088	Identifier	config		1024475	1					
ANR	1030089	Argument	"""search.distance"""		1024475	1					
ANR	1030090	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1030091	ExpressionStatement	"s = strchr ( p , ':' )"	3847:3:108998:109017	1024475	4	True				
ANR	1030092	AssignmentExpression	"s = strchr ( p , ':' )"		1024475	0		=			
ANR	1030093	Identifier	s		1024475	0					
ANR	1030094	CallExpression	"strchr ( p , ':' )"		1024475	1					
ANR	1030095	Callee	strchr		1024475	0					
ANR	1030096	Identifier	strchr		1024475	0					
ANR	1030097	ArgumentList	p		1024475	1					
ANR	1030098	Argument	p		1024475	0					
ANR	1030099	Identifier	p		1024475	0					
ANR	1030100	Argument	':'		1024475	1					
ANR	1030101	PrimaryExpression	':'		1024475	0					
ANR	1030102	IfStatement	if ( s )		1024475	5					
ANR	1030103	Condition	s	3848:7:109026:109026	1024475	0	True				
ANR	1030104	Identifier	s		1024475	0					
ANR	1030105	CompoundStatement		905:10:25352:25352	1024475	1					
ANR	1030106	ExpressionStatement	* s ++ = 0	3849:4:109035:109043	1024475	0	True				
ANR	1030107	AssignmentExpression	* s ++ = 0		1024475	0		=			
ANR	1030108	UnaryOperationExpression	* s ++		1024475	0					
ANR	1030109	UnaryOperator	*		1024475	0					
ANR	1030110	PostIncDecOperationExpression	s ++		1024475	1					
ANR	1030111	Identifier	s		1024475	0					
ANR	1030112	IncDec	++		1024475	1					
ANR	1030113	PrimaryExpression	0		1024475	1					
ANR	1030114	ExpressionStatement	"kw = r_search_keyword_new_hex ( p , s , NULL )"	3850:4:109049:109091	1024475	1	True				
ANR	1030115	AssignmentExpression	"kw = r_search_keyword_new_hex ( p , s , NULL )"		1024475	0		=			
ANR	1030116	Identifier	kw		1024475	0					
ANR	1030117	CallExpression	"r_search_keyword_new_hex ( p , s , NULL )"		1024475	1					
ANR	1030118	Callee	r_search_keyword_new_hex		1024475	0					
ANR	1030119	Identifier	r_search_keyword_new_hex		1024475	0					
ANR	1030120	ArgumentList	p		1024475	1					
ANR	1030121	Argument	p		1024475	0					
ANR	1030122	Identifier	p		1024475	0					
ANR	1030123	Argument	s		1024475	1					
ANR	1030124	Identifier	s		1024475	0					
ANR	1030125	Argument	NULL		1024475	2					
ANR	1030126	Identifier	NULL		1024475	0					
ANR	1030127	ElseStatement	else		1024475	0					
ANR	1030128	CompoundStatement		908:10:25426:25426	1024475	0					
ANR	1030129	ExpressionStatement	"kw = r_search_keyword_new_hexmask ( p , NULL )"	3852:4:109109:109152	1024475	0	True				
ANR	1030130	AssignmentExpression	"kw = r_search_keyword_new_hexmask ( p , NULL )"		1024475	0		=			
ANR	1030131	Identifier	kw		1024475	0					
ANR	1030132	CallExpression	"r_search_keyword_new_hexmask ( p , NULL )"		1024475	1					
ANR	1030133	Callee	r_search_keyword_new_hexmask		1024475	0					
ANR	1030134	Identifier	r_search_keyword_new_hexmask		1024475	0					
ANR	1030135	ArgumentList	p		1024475	1					
ANR	1030136	Argument	p		1024475	0					
ANR	1030137	Identifier	p		1024475	0					
ANR	1030138	Argument	NULL		1024475	1					
ANR	1030139	Identifier	NULL		1024475	0					
ANR	1030140	IfStatement	if ( kw )		1024475	6					
ANR	1030141	Condition	kw	3854:7:109166:109167	1024475	0	True				
ANR	1030142	Identifier	kw		1024475	0					
ANR	1030143	CompoundStatement		911:11:25493:25493	1024475	1					
ANR	1030144	ExpressionStatement	"r_search_kw_add ( core -> search , kw )"	3855:4:109176:109210	1024475	0	True				
ANR	1030145	CallExpression	"r_search_kw_add ( core -> search , kw )"		1024475	0					
ANR	1030146	Callee	r_search_kw_add		1024475	0					
ANR	1030147	Identifier	r_search_kw_add		1024475	0					
ANR	1030148	ArgumentList	core -> search		1024475	1					
ANR	1030149	Argument	core -> search		1024475	0					
ANR	1030150	PtrMemberAccess	core -> search		1024475	0					
ANR	1030151	Identifier	core		1024475	0					
ANR	1030152	Identifier	search		1024475	1					
ANR	1030153	Argument	kw		1024475	1					
ANR	1030154	Identifier	kw		1024475	0					
ANR	1030155	ExpressionStatement	r_search_begin ( core -> search )	3857:4:109282:109311	1024475	1	True				
ANR	1030156	CallExpression	r_search_begin ( core -> search )		1024475	0					
ANR	1030157	Callee	r_search_begin		1024475	0					
ANR	1030158	Identifier	r_search_begin		1024475	0					
ANR	1030159	ArgumentList	core -> search		1024475	1					
ANR	1030160	Argument	core -> search		1024475	0					
ANR	1030161	PtrMemberAccess	core -> search		1024475	0					
ANR	1030162	Identifier	core		1024475	0					
ANR	1030163	Identifier	search		1024475	1					
ANR	1030164	ExpressionStatement	dosearch = true	3858:4:109317:109332	1024475	2	True				
ANR	1030165	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1030166	Identifier	dosearch		1024475	0					
ANR	1030167	Identifier	true		1024475	1					
ANR	1030168	ElseStatement	else		1024475	0					
ANR	1030169	CompoundStatement		916:10:25667:25667	1024475	0					
ANR	1030170	ExpressionStatement	"eprintf ( ""no keyword\\n"" )"	3860:4:109350:109374	1024475	0	True				
ANR	1030171	CallExpression	"eprintf ( ""no keyword\\n"" )"		1024475	0					
ANR	1030172	Callee	eprintf		1024475	0					
ANR	1030173	Identifier	eprintf		1024475	0					
ANR	1030174	ArgumentList	"""no keyword\\n"""		1024475	1					
ANR	1030175	Argument	"""no keyword\\n"""		1024475	0					
ANR	1030176	PrimaryExpression	"""no keyword\\n"""		1024475	0					
ANR	1030177	ExpressionStatement	free ( p )	3862:3:109384:109392	1024475	7	True				
ANR	1030178	CallExpression	free ( p )		1024475	0					
ANR	1030179	Callee	free		1024475	0					
ANR	1030180	Identifier	free		1024475	0					
ANR	1030181	ArgumentList	p		1024475	1					
ANR	1030182	Argument	p		1024475	0					
ANR	1030183	Identifier	p		1024475	0					
ANR	1030184	BreakStatement	break ;	3864:2:109400:109405	1024475	96	True				
ANR	1030185	Label	case 's' :	3865:1:109408:109416	1024475	97	True				
ANR	1030186	ExpressionStatement	"do_section_search ( core , & param , input + 1 )"	3866:2:109428:109471	1024475	98	True				
ANR	1030187	CallExpression	"do_section_search ( core , & param , input + 1 )"		1024475	0					
ANR	1030188	Callee	do_section_search		1024475	0					
ANR	1030189	Identifier	do_section_search		1024475	0					
ANR	1030190	ArgumentList	core		1024475	1					
ANR	1030191	Argument	core		1024475	0					
ANR	1030192	Identifier	core		1024475	0					
ANR	1030193	Argument	& param		1024475	1					
ANR	1030194	UnaryOperationExpression	& param		1024475	0					
ANR	1030195	UnaryOperator	&		1024475	0					
ANR	1030196	Identifier	param		1024475	1					
ANR	1030197	Argument	input + 1		1024475	2					
ANR	1030198	AdditiveExpression	input + 1		1024475	0		+			
ANR	1030199	Identifier	input		1024475	0					
ANR	1030200	PrimaryExpression	1		1024475	1					
ANR	1030201	BreakStatement	break ;	3867:2:109475:109480	1024475	99	True				
ANR	1030202	Label	case '+' :	3868:1:109483:109491	1024475	100	True				
ANR	1030203	IfStatement	if ( input [ 1 ] == ' ' )		1024475	101					
ANR	1030204	Condition	input [ 1 ] == ' '	3869:6:109507:109521	1024475	0	True				
ANR	1030205	EqualityExpression	input [ 1 ] == ' '		1024475	0		==			
ANR	1030206	ArrayIndexing	input [ 1 ]		1024475	0					
ANR	1030207	Identifier	input		1024475	0					
ANR	1030208	PrimaryExpression	1		1024475	1					
ANR	1030209	PrimaryExpression	' '		1024475	1					
ANR	1030210	CompoundStatement		931:3:25974:26043	1024475	1					
ANR	1030211	IdentifierDeclStatement	char * buf = malloc ( strlen ( input ) * 2 ) ;	3871:3:109553:109592	1024475	0	True				
ANR	1030212	IdentifierDecl	* buf = malloc ( strlen ( input ) * 2 )		1024475	0					
ANR	1030213	IdentifierDeclType	char *		1024475	0					
ANR	1030214	Identifier	buf		1024475	1					
ANR	1030215	AssignmentExpression	* buf = malloc ( strlen ( input ) * 2 )		1024475	2		=			
ANR	1030216	Identifier	buf		1024475	0					
ANR	1030217	CallExpression	malloc ( strlen ( input ) * 2 )		1024475	1					
ANR	1030218	Callee	malloc		1024475	0					
ANR	1030219	Identifier	malloc		1024475	0					
ANR	1030220	ArgumentList	strlen ( input ) * 2		1024475	1					
ANR	1030221	Argument	strlen ( input ) * 2		1024475	0					
ANR	1030222	MultiplicativeExpression	strlen ( input ) * 2		1024475	0		*			
ANR	1030223	CallExpression	strlen ( input )		1024475	0					
ANR	1030224	Callee	strlen		1024475	0					
ANR	1030225	Identifier	strlen		1024475	0					
ANR	1030226	ArgumentList	input		1024475	1					
ANR	1030227	Argument	input		1024475	0					
ANR	1030228	Identifier	input		1024475	0					
ANR	1030229	PrimaryExpression	2		1024475	1					
ANR	1030230	IdentifierDeclStatement	char * str = strdup ( input + 2 ) ;	3872:3:109597:109627	1024475	1	True				
ANR	1030231	IdentifierDecl	* str = strdup ( input + 2 )		1024475	0					
ANR	1030232	IdentifierDeclType	char *		1024475	0					
ANR	1030233	Identifier	str		1024475	1					
ANR	1030234	AssignmentExpression	* str = strdup ( input + 2 )		1024475	2		=			
ANR	1030235	Identifier	str		1024475	0					
ANR	1030236	CallExpression	strdup ( input + 2 )		1024475	1					
ANR	1030237	Callee	strdup		1024475	0					
ANR	1030238	Identifier	strdup		1024475	0					
ANR	1030239	ArgumentList	input + 2		1024475	1					
ANR	1030240	Argument	input + 2		1024475	0					
ANR	1030241	AdditiveExpression	input + 2		1024475	0		+			
ANR	1030242	Identifier	input		1024475	0					
ANR	1030243	PrimaryExpression	2		1024475	1					
ANR	1030244	IdentifierDeclStatement	int ochunksize ;	3873:3:109632:109646	1024475	2	True				
ANR	1030245	IdentifierDecl	ochunksize		1024475	0					
ANR	1030246	IdentifierDeclType	int		1024475	0					
ANR	1030247	Identifier	ochunksize		1024475	1					
ANR	1030248	IdentifierDeclStatement	"int i , len , chunksize = r_config_get_i ( core -> config , ""search.chunk"" ) ;"	3874:3:109651:109720	1024475	3	True				
ANR	1030249	IdentifierDecl	i		1024475	0					
ANR	1030250	IdentifierDeclType	int		1024475	0					
ANR	1030251	Identifier	i		1024475	1					
ANR	1030252	IdentifierDecl	len		1024475	1					
ANR	1030253	IdentifierDeclType	int		1024475	0					
ANR	1030254	Identifier	len		1024475	1					
ANR	1030255	IdentifierDecl	"chunksize = r_config_get_i ( core -> config , ""search.chunk"" )"		1024475	2					
ANR	1030256	IdentifierDeclType	int		1024475	0					
ANR	1030257	Identifier	chunksize		1024475	1					
ANR	1030258	AssignmentExpression	"chunksize = r_config_get_i ( core -> config , ""search.chunk"" )"		1024475	2		=			
ANR	1030259	Identifier	chunksize		1024475	0					
ANR	1030260	CallExpression	"r_config_get_i ( core -> config , ""search.chunk"" )"		1024475	1					
ANR	1030261	Callee	r_config_get_i		1024475	0					
ANR	1030262	Identifier	r_config_get_i		1024475	0					
ANR	1030263	ArgumentList	core -> config		1024475	1					
ANR	1030264	Argument	core -> config		1024475	0					
ANR	1030265	PtrMemberAccess	core -> config		1024475	0					
ANR	1030266	Identifier	core		1024475	0					
ANR	1030267	Identifier	config		1024475	1					
ANR	1030268	Argument	"""search.chunk"""		1024475	1					
ANR	1030269	PrimaryExpression	"""search.chunk"""		1024475	0					
ANR	1030270	IfStatement	if ( chunksize < 1 )		1024475	4					
ANR	1030271	Condition	chunksize < 1	3875:7:109729:109741	1024475	0	True				
ANR	1030272	RelationalExpression	chunksize < 1		1024475	0		<			
ANR	1030273	Identifier	chunksize		1024475	0					
ANR	1030274	PrimaryExpression	1		1024475	1					
ANR	1030275	CompoundStatement		932:22:26067:26067	1024475	1					
ANR	1030276	ExpressionStatement	chunksize = core -> assembler -> bits / 8	3876:4:109750:109787	1024475	0	True				
ANR	1030277	AssignmentExpression	chunksize = core -> assembler -> bits / 8		1024475	0		=			
ANR	1030278	Identifier	chunksize		1024475	0					
ANR	1030279	MultiplicativeExpression	core -> assembler -> bits / 8		1024475	1		/			
ANR	1030280	PtrMemberAccess	core -> assembler -> bits		1024475	0					
ANR	1030281	PtrMemberAccess	core -> assembler		1024475	0					
ANR	1030282	Identifier	core		1024475	0					
ANR	1030283	Identifier	assembler		1024475	1					
ANR	1030284	Identifier	bits		1024475	1					
ANR	1030285	PrimaryExpression	8		1024475	1					
ANR	1030286	ExpressionStatement	len = r_str_unescape ( str )	3878:3:109797:109823	1024475	5	True				
ANR	1030287	AssignmentExpression	len = r_str_unescape ( str )		1024475	0		=			
ANR	1030288	Identifier	len		1024475	0					
ANR	1030289	CallExpression	r_str_unescape ( str )		1024475	1					
ANR	1030290	Callee	r_str_unescape		1024475	0					
ANR	1030291	Identifier	r_str_unescape		1024475	0					
ANR	1030292	ArgumentList	str		1024475	1					
ANR	1030293	Argument	str		1024475	0					
ANR	1030294	Identifier	str		1024475	0					
ANR	1030295	ExpressionStatement	"ochunksize = chunksize = R_MIN ( len , chunksize )"	3879:3:109828:109875	1024475	6	True				
ANR	1030296	AssignmentExpression	"ochunksize = chunksize = R_MIN ( len , chunksize )"		1024475	0		=			
ANR	1030297	Identifier	ochunksize		1024475	0					
ANR	1030298	AssignmentExpression	"chunksize = R_MIN ( len , chunksize )"		1024475	1		=			
ANR	1030299	Identifier	chunksize		1024475	0					
ANR	1030300	CallExpression	"R_MIN ( len , chunksize )"		1024475	1					
ANR	1030301	Callee	R_MIN		1024475	0					
ANR	1030302	Identifier	R_MIN		1024475	0					
ANR	1030303	ArgumentList	len		1024475	1					
ANR	1030304	Argument	len		1024475	0					
ANR	1030305	Identifier	len		1024475	0					
ANR	1030306	Argument	chunksize		1024475	1					
ANR	1030307	Identifier	chunksize		1024475	0					
ANR	1030308	ExpressionStatement	"eprintf ( ""Using chunksize: %d\\n"" , chunksize )"	3880:3:109880:109924	1024475	7	True				
ANR	1030309	CallExpression	"eprintf ( ""Using chunksize: %d\\n"" , chunksize )"		1024475	0					
ANR	1030310	Callee	eprintf		1024475	0					
ANR	1030311	Identifier	eprintf		1024475	0					
ANR	1030312	ArgumentList	"""Using chunksize: %d\\n"""		1024475	1					
ANR	1030313	Argument	"""Using chunksize: %d\\n"""		1024475	0					
ANR	1030314	PrimaryExpression	"""Using chunksize: %d\\n"""		1024475	0					
ANR	1030315	Argument	chunksize		1024475	1					
ANR	1030316	Identifier	chunksize		1024475	0					
ANR	1030317	ExpressionStatement	core -> in_search = false	3881:3:109929:109952	1024475	8	True				
ANR	1030318	AssignmentExpression	core -> in_search = false		1024475	0		=			
ANR	1030319	PtrMemberAccess	core -> in_search		1024475	0					
ANR	1030320	Identifier	core		1024475	0					
ANR	1030321	Identifier	in_search		1024475	1					
ANR	1030322	Identifier	false		1024475	1					
ANR	1030323	ForStatement	for ( i = 0 ; i < len ; i += chunksize )		1024475	9					
ANR	1030324	ForInit	i = 0 ;	3882:8:109962:109967	1024475	0	True				
ANR	1030325	AssignmentExpression	i = 0		1024475	0		=			
ANR	1030326	Identifier	i		1024475	0					
ANR	1030327	PrimaryExpression	0		1024475	1					
ANR	1030328	Condition	i < len	3882:15:109969:109975	1024475	1	True				
ANR	1030329	RelationalExpression	i < len		1024475	0		<			
ANR	1030330	Identifier	i		1024475	0					
ANR	1030331	Identifier	len		1024475	1					
ANR	1030332	AssignmentExpression	i += chunksize	3882:24:109978:109991	1024475	2	True	+=			
ANR	1030333	Identifier	i		1024475	0					
ANR	1030334	Identifier	chunksize		1024475	1					
ANR	1030335	CompoundStatement		939:40:26317:26317	1024475	3					
ANR	1030336	ExpressionStatement	chunksize = ochunksize	3883:4:110000:110022	1024475	0	True				
ANR	1030337	AssignmentExpression	chunksize = ochunksize		1024475	0		=			
ANR	1030338	Identifier	chunksize		1024475	0					
ANR	1030339	Identifier	ochunksize		1024475	1					
ANR	1030340	Label	again :	3884:0:110024:110029	1024475	1	True				
ANR	1030341	Identifier	again		1024475	0					
ANR	1030342	ExpressionStatement	"r_hex_bin2str ( ( ut8 * ) str + i , R_MIN ( chunksize , len - i ) , buf )"	3885:4:110035:110099	1024475	2	True				
ANR	1030343	CallExpression	"r_hex_bin2str ( ( ut8 * ) str + i , R_MIN ( chunksize , len - i ) , buf )"		1024475	0					
ANR	1030344	Callee	r_hex_bin2str		1024475	0					
ANR	1030345	Identifier	r_hex_bin2str		1024475	0					
ANR	1030346	ArgumentList	( ut8 * ) str + i		1024475	1					
ANR	1030347	Argument	( ut8 * ) str + i		1024475	0					
ANR	1030348	AdditiveExpression	( ut8 * ) str + i		1024475	0		+			
ANR	1030349	CastExpression	( ut8 * ) str		1024475	0					
ANR	1030350	CastTarget	ut8 *		1024475	0					
ANR	1030351	Identifier	str		1024475	1					
ANR	1030352	Identifier	i		1024475	1					
ANR	1030353	Argument	"R_MIN ( chunksize , len - i )"		1024475	1					
ANR	1030354	CallExpression	"R_MIN ( chunksize , len - i )"		1024475	0					
ANR	1030355	Callee	R_MIN		1024475	0					
ANR	1030356	Identifier	R_MIN		1024475	0					
ANR	1030357	ArgumentList	chunksize		1024475	1					
ANR	1030358	Argument	chunksize		1024475	0					
ANR	1030359	Identifier	chunksize		1024475	0					
ANR	1030360	Argument	len - i		1024475	1					
ANR	1030361	AdditiveExpression	len - i		1024475	0		-			
ANR	1030362	Identifier	len		1024475	0					
ANR	1030363	Identifier	i		1024475	1					
ANR	1030364	Argument	buf		1024475	2					
ANR	1030365	Identifier	buf		1024475	0					
ANR	1030366	ExpressionStatement	"eprintf ( ""/x %s\\n"" , buf )"	3886:4:110105:110129	1024475	3	True				
ANR	1030367	CallExpression	"eprintf ( ""/x %s\\n"" , buf )"		1024475	0					
ANR	1030368	Callee	eprintf		1024475	0					
ANR	1030369	Identifier	eprintf		1024475	0					
ANR	1030370	ArgumentList	"""/x %s\\n"""		1024475	1					
ANR	1030371	Argument	"""/x %s\\n"""		1024475	0					
ANR	1030372	PrimaryExpression	"""/x %s\\n"""		1024475	0					
ANR	1030373	Argument	buf		1024475	1					
ANR	1030374	Identifier	buf		1024475	0					
ANR	1030375	ExpressionStatement	"r_core_cmdf ( core , ""/x %s"" , buf )"	3887:4:110135:110167	1024475	4	True				
ANR	1030376	CallExpression	"r_core_cmdf ( core , ""/x %s"" , buf )"		1024475	0					
ANR	1030377	Callee	r_core_cmdf		1024475	0					
ANR	1030378	Identifier	r_core_cmdf		1024475	0					
ANR	1030379	ArgumentList	core		1024475	1					
ANR	1030380	Argument	core		1024475	0					
ANR	1030381	Identifier	core		1024475	0					
ANR	1030382	Argument	"""/x %s"""		1024475	1					
ANR	1030383	PrimaryExpression	"""/x %s"""		1024475	0					
ANR	1030384	Argument	buf		1024475	2					
ANR	1030385	Identifier	buf		1024475	0					
ANR	1030386	IfStatement	if ( core -> num -> value == 0 )		1024475	5					
ANR	1030387	Condition	core -> num -> value == 0	3888:8:110177:110197	1024475	0	True				
ANR	1030388	EqualityExpression	core -> num -> value == 0		1024475	0		==			
ANR	1030389	PtrMemberAccess	core -> num -> value		1024475	0					
ANR	1030390	PtrMemberAccess	core -> num		1024475	0					
ANR	1030391	Identifier	core		1024475	0					
ANR	1030392	Identifier	num		1024475	1					
ANR	1030393	Identifier	value		1024475	1					
ANR	1030394	PrimaryExpression	0		1024475	1					
ANR	1030395	CompoundStatement		945:31:26523:26523	1024475	1					
ANR	1030396	ExpressionStatement	chunksize --	3889:5:110207:110218	1024475	0	True				
ANR	1030397	PostIncDecOperationExpression	chunksize --		1024475	0					
ANR	1030398	Identifier	chunksize		1024475	0					
ANR	1030399	IncDec	--		1024475	1					
ANR	1030400	IfStatement	if ( chunksize < 1 )		1024475	1					
ANR	1030401	Condition	chunksize < 1	3890:9:110229:110241	1024475	0	True				
ANR	1030402	RelationalExpression	chunksize < 1		1024475	0		<			
ANR	1030403	Identifier	chunksize		1024475	0					
ANR	1030404	PrimaryExpression	1		1024475	1					
ANR	1030405	CompoundStatement		947:24:26567:26567	1024475	1					
ANR	1030406	ExpressionStatement	"eprintf ( ""Oops\\n"" )"	3891:6:110252:110270	1024475	0	True				
ANR	1030407	CallExpression	"eprintf ( ""Oops\\n"" )"		1024475	0					
ANR	1030408	Callee	eprintf		1024475	0					
ANR	1030409	Identifier	eprintf		1024475	0					
ANR	1030410	ArgumentList	"""Oops\\n"""		1024475	1					
ANR	1030411	Argument	"""Oops\\n"""		1024475	0					
ANR	1030412	PrimaryExpression	"""Oops\\n"""		1024475	0					
ANR	1030413	ExpressionStatement	free ( buf )	3892:6:110278:110288	1024475	1	True				
ANR	1030414	CallExpression	free ( buf )		1024475	0					
ANR	1030415	Callee	free		1024475	0					
ANR	1030416	Identifier	free		1024475	0					
ANR	1030417	ArgumentList	buf		1024475	1					
ANR	1030418	Argument	buf		1024475	0					
ANR	1030419	Identifier	buf		1024475	0					
ANR	1030420	ExpressionStatement	free ( str )	3893:6:110296:110306	1024475	2	True				
ANR	1030421	CallExpression	free ( str )		1024475	0					
ANR	1030422	Callee	free		1024475	0					
ANR	1030423	Identifier	free		1024475	0					
ANR	1030424	ArgumentList	str		1024475	1					
ANR	1030425	Argument	str		1024475	0					
ANR	1030426	Identifier	str		1024475	0					
ANR	1030427	GotoStatement	goto beach ;	3894:6:110314:110324	1024475	3	True				
ANR	1030428	Identifier	beach		1024475	0					
ANR	1030429	ExpressionStatement	"eprintf ( ""Repeat with chunk size %d\\n"" , chunksize )"	3896:5:110338:110388	1024475	2	True				
ANR	1030430	CallExpression	"eprintf ( ""Repeat with chunk size %d\\n"" , chunksize )"		1024475	0					
ANR	1030431	Callee	eprintf		1024475	0					
ANR	1030432	Identifier	eprintf		1024475	0					
ANR	1030433	ArgumentList	"""Repeat with chunk size %d\\n"""		1024475	1					
ANR	1030434	Argument	"""Repeat with chunk size %d\\n"""		1024475	0					
ANR	1030435	PrimaryExpression	"""Repeat with chunk size %d\\n"""		1024475	0					
ANR	1030436	Argument	chunksize		1024475	1					
ANR	1030437	Identifier	chunksize		1024475	0					
ANR	1030438	GotoStatement	goto again ;	3897:5:110395:110405	1024475	3	True				
ANR	1030439	Identifier	again		1024475	0					
ANR	1030440	ExpressionStatement	free ( str )	3900:3:110421:110431	1024475	10	True				
ANR	1030441	CallExpression	free ( str )		1024475	0					
ANR	1030442	Callee	free		1024475	0					
ANR	1030443	Identifier	free		1024475	0					
ANR	1030444	ArgumentList	str		1024475	1					
ANR	1030445	Argument	str		1024475	0					
ANR	1030446	Identifier	str		1024475	0					
ANR	1030447	ExpressionStatement	free ( buf )	3901:3:110436:110446	1024475	11	True				
ANR	1030448	CallExpression	free ( buf )		1024475	0					
ANR	1030449	Callee	free		1024475	0					
ANR	1030450	Identifier	free		1024475	0					
ANR	1030451	ArgumentList	buf		1024475	1					
ANR	1030452	Argument	buf		1024475	0					
ANR	1030453	Identifier	buf		1024475	0					
ANR	1030454	ElseStatement	else		1024475	0					
ANR	1030455	CompoundStatement		959:9:26780:26780	1024475	0					
ANR	1030456	ExpressionStatement	"eprintf ( ""Usage: /+ [string]\\n"" )"	3903:3:110462:110494	1024475	0	True				
ANR	1030457	CallExpression	"eprintf ( ""Usage: /+ [string]\\n"" )"		1024475	0					
ANR	1030458	Callee	eprintf		1024475	0					
ANR	1030459	Identifier	eprintf		1024475	0					
ANR	1030460	ArgumentList	"""Usage: /+ [string]\\n"""		1024475	1					
ANR	1030461	Argument	"""Usage: /+ [string]\\n"""		1024475	0					
ANR	1030462	PrimaryExpression	"""Usage: /+ [string]\\n"""		1024475	0					
ANR	1030463	BreakStatement	break ;	3905:2:110502:110507	1024475	102	True				
ANR	1030464	Label	case 'z' :	3906:1:110510:110518	1024475	103	True				
ANR	1030465	CompoundStatement		966:2:26899:26912	1024475	104					
ANR	1030466	IdentifierDeclStatement	char * p ;	3908:2:110565:110572	1024475	0	True				
ANR	1030467	IdentifierDecl	* p		1024475	0					
ANR	1030468	IdentifierDeclType	char *		1024475	0					
ANR	1030469	Identifier	p		1024475	1					
ANR	1030470	IdentifierDeclStatement	"ut32 min , max ;"	3909:2:110576:110589	1024475	1	True				
ANR	1030471	IdentifierDecl	min		1024475	0					
ANR	1030472	IdentifierDeclType	ut32		1024475	0					
ANR	1030473	Identifier	min		1024475	1					
ANR	1030474	IdentifierDecl	max		1024475	1					
ANR	1030475	IdentifierDeclType	ut32		1024475	0					
ANR	1030476	Identifier	max		1024475	1					
ANR	1030477	IfStatement	if ( ! input [ 1 ] )		1024475	2					
ANR	1030478	Condition	! input [ 1 ]	3910:6:110597:110605	1024475	0	True				
ANR	1030479	UnaryOperationExpression	! input [ 1 ]		1024475	0					
ANR	1030480	UnaryOperator	!		1024475	0					
ANR	1030481	ArrayIndexing	input [ 1 ]		1024475	1					
ANR	1030482	Identifier	input		1024475	0					
ANR	1030483	PrimaryExpression	1		1024475	1					
ANR	1030484	CompoundStatement		967:17:26931:26931	1024475	1					
ANR	1030485	ExpressionStatement	"eprintf ( ""Usage: /z min max\\n"" )"	3911:3:110613:110644	1024475	0	True				
ANR	1030486	CallExpression	"eprintf ( ""Usage: /z min max\\n"" )"		1024475	0					
ANR	1030487	Callee	eprintf		1024475	0					
ANR	1030488	Identifier	eprintf		1024475	0					
ANR	1030489	ArgumentList	"""Usage: /z min max\\n"""		1024475	1					
ANR	1030490	Argument	"""Usage: /z min max\\n"""		1024475	0					
ANR	1030491	PrimaryExpression	"""Usage: /z min max\\n"""		1024475	0					
ANR	1030492	BreakStatement	break ;	3912:3:110649:110654	1024475	1	True				
ANR	1030493	IfStatement	"if ( ( p = strchr ( input + 2 , ' ' ) ) )"		1024475	3					
ANR	1030494	Condition	"p = strchr ( input + 2 , ' ' )"	3914:6:110666:110694	1024475	0	True				
ANR	1030495	AssignmentExpression	"p = strchr ( input + 2 , ' ' )"		1024475	0		=			
ANR	1030496	Identifier	p		1024475	0					
ANR	1030497	CallExpression	"strchr ( input + 2 , ' ' )"		1024475	1					
ANR	1030498	Callee	strchr		1024475	0					
ANR	1030499	Identifier	strchr		1024475	0					
ANR	1030500	ArgumentList	input + 2		1024475	1					
ANR	1030501	Argument	input + 2		1024475	0					
ANR	1030502	AdditiveExpression	input + 2		1024475	0		+			
ANR	1030503	Identifier	input		1024475	0					
ANR	1030504	PrimaryExpression	2		1024475	1					
ANR	1030505	Argument	' '		1024475	1					
ANR	1030506	PrimaryExpression	' '		1024475	0					
ANR	1030507	CompoundStatement		971:37:27020:27020	1024475	1					
ANR	1030508	ExpressionStatement	* p = 0	3915:3:110702:110708	1024475	0	True				
ANR	1030509	AssignmentExpression	* p = 0		1024475	0		=			
ANR	1030510	UnaryOperationExpression	* p		1024475	0					
ANR	1030511	UnaryOperator	*		1024475	0					
ANR	1030512	Identifier	p		1024475	1					
ANR	1030513	PrimaryExpression	0		1024475	1					
ANR	1030514	ExpressionStatement	"max = r_num_math ( core -> num , p + 1 )"	3916:3:110713:110748	1024475	1	True				
ANR	1030515	AssignmentExpression	"max = r_num_math ( core -> num , p + 1 )"		1024475	0		=			
ANR	1030516	Identifier	max		1024475	0					
ANR	1030517	CallExpression	"r_num_math ( core -> num , p + 1 )"		1024475	1					
ANR	1030518	Callee	r_num_math		1024475	0					
ANR	1030519	Identifier	r_num_math		1024475	0					
ANR	1030520	ArgumentList	core -> num		1024475	1					
ANR	1030521	Argument	core -> num		1024475	0					
ANR	1030522	PtrMemberAccess	core -> num		1024475	0					
ANR	1030523	Identifier	core		1024475	0					
ANR	1030524	Identifier	num		1024475	1					
ANR	1030525	Argument	p + 1		1024475	1					
ANR	1030526	AdditiveExpression	p + 1		1024475	0		+			
ANR	1030527	Identifier	p		1024475	0					
ANR	1030528	PrimaryExpression	1		1024475	1					
ANR	1030529	ElseStatement	else		1024475	0					
ANR	1030530	CompoundStatement		974:9:27082:27082	1024475	0					
ANR	1030531	ExpressionStatement	"eprintf ( ""Usage: /z min max\\n"" )"	3918:3:110764:110795	1024475	0	True				
ANR	1030532	CallExpression	"eprintf ( ""Usage: /z min max\\n"" )"		1024475	0					
ANR	1030533	Callee	eprintf		1024475	0					
ANR	1030534	Identifier	eprintf		1024475	0					
ANR	1030535	ArgumentList	"""Usage: /z min max\\n"""		1024475	1					
ANR	1030536	Argument	"""Usage: /z min max\\n"""		1024475	0					
ANR	1030537	PrimaryExpression	"""Usage: /z min max\\n"""		1024475	0					
ANR	1030538	BreakStatement	break ;	3919:3:110800:110805	1024475	1	True				
ANR	1030539	ExpressionStatement	"min = r_num_math ( core -> num , input + 2 )"	3921:2:110813:110852	1024475	4	True				
ANR	1030540	AssignmentExpression	"min = r_num_math ( core -> num , input + 2 )"		1024475	0		=			
ANR	1030541	Identifier	min		1024475	0					
ANR	1030542	CallExpression	"r_num_math ( core -> num , input + 2 )"		1024475	1					
ANR	1030543	Callee	r_num_math		1024475	0					
ANR	1030544	Identifier	r_num_math		1024475	0					
ANR	1030545	ArgumentList	core -> num		1024475	1					
ANR	1030546	Argument	core -> num		1024475	0					
ANR	1030547	PtrMemberAccess	core -> num		1024475	0					
ANR	1030548	Identifier	core		1024475	0					
ANR	1030549	Identifier	num		1024475	1					
ANR	1030550	Argument	input + 2		1024475	1					
ANR	1030551	AdditiveExpression	input + 2		1024475	0		+			
ANR	1030552	Identifier	input		1024475	0					
ANR	1030553	PrimaryExpression	2		1024475	1					
ANR	1030554	IfStatement	"if ( ! r_search_set_string_limits ( core -> search , min , max ) )"		1024475	5					
ANR	1030555	Condition	"! r_search_set_string_limits ( core -> search , min , max )"	3922:6:110860:110911	1024475	0	True				
ANR	1030556	UnaryOperationExpression	"! r_search_set_string_limits ( core -> search , min , max )"		1024475	0					
ANR	1030557	UnaryOperator	!		1024475	0					
ANR	1030558	CallExpression	"r_search_set_string_limits ( core -> search , min , max )"		1024475	1					
ANR	1030559	Callee	r_search_set_string_limits		1024475	0					
ANR	1030560	Identifier	r_search_set_string_limits		1024475	0					
ANR	1030561	ArgumentList	core -> search		1024475	1					
ANR	1030562	Argument	core -> search		1024475	0					
ANR	1030563	PtrMemberAccess	core -> search		1024475	0					
ANR	1030564	Identifier	core		1024475	0					
ANR	1030565	Identifier	search		1024475	1					
ANR	1030566	Argument	min		1024475	1					
ANR	1030567	Identifier	min		1024475	0					
ANR	1030568	Argument	max		1024475	2					
ANR	1030569	Identifier	max		1024475	0					
ANR	1030570	CompoundStatement		979:60:27237:27237	1024475	1					
ANR	1030571	ExpressionStatement	"eprintf ( ""Error: min must be lower than max\\n"" )"	3923:3:110919:110966	1024475	0	True				
ANR	1030572	CallExpression	"eprintf ( ""Error: min must be lower than max\\n"" )"		1024475	0					
ANR	1030573	Callee	eprintf		1024475	0					
ANR	1030574	Identifier	eprintf		1024475	0					
ANR	1030575	ArgumentList	"""Error: min must be lower than max\\n"""		1024475	1					
ANR	1030576	Argument	"""Error: min must be lower than max\\n"""		1024475	0					
ANR	1030577	PrimaryExpression	"""Error: min must be lower than max\\n"""		1024475	0					
ANR	1030578	BreakStatement	break ;	3924:3:110971:110976	1024475	1	True				
ANR	1030579	ExpressionStatement	"r_search_reset ( core -> search , R_SEARCH_STRING )"	3926:2:110984:111030	1024475	6	True				
ANR	1030580	CallExpression	"r_search_reset ( core -> search , R_SEARCH_STRING )"		1024475	0					
ANR	1030581	Callee	r_search_reset		1024475	0					
ANR	1030582	Identifier	r_search_reset		1024475	0					
ANR	1030583	ArgumentList	core -> search		1024475	1					
ANR	1030584	Argument	core -> search		1024475	0					
ANR	1030585	PtrMemberAccess	core -> search		1024475	0					
ANR	1030586	Identifier	core		1024475	0					
ANR	1030587	Identifier	search		1024475	1					
ANR	1030588	Argument	R_SEARCH_STRING		1024475	1					
ANR	1030589	Identifier	R_SEARCH_STRING		1024475	0					
ANR	1030590	ExpressionStatement	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"	3927:2:111034:111129	1024475	7	True				
ANR	1030591	CallExpression	"r_search_set_distance ( core -> search , ( int ) r_config_get_i ( core -> config , ""search.distance"" ) )"		1024475	0					
ANR	1030592	Callee	r_search_set_distance		1024475	0					
ANR	1030593	Identifier	r_search_set_distance		1024475	0					
ANR	1030594	ArgumentList	core -> search		1024475	1					
ANR	1030595	Argument	core -> search		1024475	0					
ANR	1030596	PtrMemberAccess	core -> search		1024475	0					
ANR	1030597	Identifier	core		1024475	0					
ANR	1030598	Identifier	search		1024475	1					
ANR	1030599	Argument	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1030600	CastExpression	"( int ) r_config_get_i ( core -> config , ""search.distance"" )"		1024475	0					
ANR	1030601	CastTarget	int		1024475	0					
ANR	1030602	CallExpression	"r_config_get_i ( core -> config , ""search.distance"" )"		1024475	1					
ANR	1030603	Callee	r_config_get_i		1024475	0					
ANR	1030604	Identifier	r_config_get_i		1024475	0					
ANR	1030605	ArgumentList	core -> config		1024475	1					
ANR	1030606	Argument	core -> config		1024475	0					
ANR	1030607	PtrMemberAccess	core -> config		1024475	0					
ANR	1030608	Identifier	core		1024475	0					
ANR	1030609	Identifier	config		1024475	1					
ANR	1030610	Argument	"""search.distance"""		1024475	1					
ANR	1030611	PrimaryExpression	"""search.distance"""		1024475	0					
ANR	1030612	CompoundStatement		987:3:27461:27523	1024475	8					
ANR	1030613	IdentifierDeclStatement	"RSearchKeyword * kw = r_search_keyword_new_hexmask ( ""00"" , NULL ) ;"	3930:3:111138:111200	1024475	0	True				
ANR	1030614	IdentifierDecl	"* kw = r_search_keyword_new_hexmask ( ""00"" , NULL )"		1024475	0					
ANR	1030615	IdentifierDeclType	RSearchKeyword *		1024475	0					
ANR	1030616	Identifier	kw		1024475	1					
ANR	1030617	AssignmentExpression	"* kw = r_search_keyword_new_hexmask ( ""00"" , NULL )"		1024475	2		=			
ANR	1030618	Identifier	kw		1024475	0					
ANR	1030619	CallExpression	"r_search_keyword_new_hexmask ( ""00"" , NULL )"		1024475	1					
ANR	1030620	Callee	r_search_keyword_new_hexmask		1024475	0					
ANR	1030621	Identifier	r_search_keyword_new_hexmask		1024475	0					
ANR	1030622	ArgumentList	"""00"""		1024475	1					
ANR	1030623	Argument	"""00"""		1024475	0					
ANR	1030624	PrimaryExpression	"""00"""		1024475	0					
ANR	1030625	Argument	NULL		1024475	1					
ANR	1030626	Identifier	NULL		1024475	0					
ANR	1030627	ExpressionStatement	kw -> type = R_SEARCH_KEYWORD_TYPE_STRING	3931:3:111205:111244	1024475	1	True				
ANR	1030628	AssignmentExpression	kw -> type = R_SEARCH_KEYWORD_TYPE_STRING		1024475	0		=			
ANR	1030629	PtrMemberAccess	kw -> type		1024475	0					
ANR	1030630	Identifier	kw		1024475	0					
ANR	1030631	Identifier	type		1024475	1					
ANR	1030632	Identifier	R_SEARCH_KEYWORD_TYPE_STRING		1024475	1					
ANR	1030633	ExpressionStatement	"r_search_kw_add ( search , kw )"	3932:3:111249:111277	1024475	2	True				
ANR	1030634	CallExpression	"r_search_kw_add ( search , kw )"		1024475	0					
ANR	1030635	Callee	r_search_kw_add		1024475	0					
ANR	1030636	Identifier	r_search_kw_add		1024475	0					
ANR	1030637	ArgumentList	search		1024475	1					
ANR	1030638	Argument	search		1024475	0					
ANR	1030639	Identifier	search		1024475	0					
ANR	1030640	Argument	kw		1024475	1					
ANR	1030641	Identifier	kw		1024475	0					
ANR	1030642	ExpressionStatement	r_search_begin ( search )	3934:2:111285:111308	1024475	9	True				
ANR	1030643	CallExpression	r_search_begin ( search )		1024475	0					
ANR	1030644	Callee	r_search_begin		1024475	0					
ANR	1030645	Identifier	r_search_begin		1024475	0					
ANR	1030646	ArgumentList	search		1024475	1					
ANR	1030647	Argument	search		1024475	0					
ANR	1030648	Identifier	search		1024475	0					
ANR	1030649	ExpressionStatement	dosearch = true	3935:2:111312:111327	1024475	10	True				
ANR	1030650	AssignmentExpression	dosearch = true		1024475	0		=			
ANR	1030651	Identifier	dosearch		1024475	0					
ANR	1030652	Identifier	true		1024475	1					
ANR	1030653	BreakStatement	break ;	3937:1:111333:111338	1024475	105	True				
ANR	1030654	Label	case '?' :	3938:1:111341:111349	1024475	106	True				
ANR	1030655	ExpressionStatement	"r_core_cmd_help ( core , help_msg_slash )"	3939:2:111361:111399	1024475	107	True				
ANR	1030656	CallExpression	"r_core_cmd_help ( core , help_msg_slash )"		1024475	0					
ANR	1030657	Callee	r_core_cmd_help		1024475	0					
ANR	1030658	Identifier	r_core_cmd_help		1024475	0					
ANR	1030659	ArgumentList	core		1024475	1					
ANR	1030660	Argument	core		1024475	0					
ANR	1030661	Identifier	core		1024475	0					
ANR	1030662	Argument	help_msg_slash		1024475	1					
ANR	1030663	Identifier	help_msg_slash		1024475	0					
ANR	1030664	BreakStatement	break ;	3940:2:111403:111408	1024475	108	True				
ANR	1030665	Label	default :	3941:1:111411:111418	1024475	109	True				
ANR	1030666	Identifier	default		1024475	0					
ANR	1030667	ExpressionStatement	"eprintf ( ""See /? for help.\\n"" )"	3942:2:111422:111452	1024475	110	True				
ANR	1030668	CallExpression	"eprintf ( ""See /? for help.\\n"" )"		1024475	0					
ANR	1030669	Callee	eprintf		1024475	0					
ANR	1030670	Identifier	eprintf		1024475	0					
ANR	1030671	ArgumentList	"""See /? for help.\\n"""		1024475	1					
ANR	1030672	Argument	"""See /? for help.\\n"""		1024475	0					
ANR	1030673	PrimaryExpression	"""See /? for help.\\n"""		1024475	0					
ANR	1030674	BreakStatement	break ;	3943:2:111456:111461	1024475	111	True				
ANR	1030675	ExpressionStatement	"r_config_set_i ( core -> config , ""search.kwidx"" , search -> n_kws )"	3945:1:111467:111527	1024475	40	True				
ANR	1030676	CallExpression	"r_config_set_i ( core -> config , ""search.kwidx"" , search -> n_kws )"		1024475	0					
ANR	1030677	Callee	r_config_set_i		1024475	0					
ANR	1030678	Identifier	r_config_set_i		1024475	0					
ANR	1030679	ArgumentList	core -> config		1024475	1					
ANR	1030680	Argument	core -> config		1024475	0					
ANR	1030681	PtrMemberAccess	core -> config		1024475	0					
ANR	1030682	Identifier	core		1024475	0					
ANR	1030683	Identifier	config		1024475	1					
ANR	1030684	Argument	"""search.kwidx"""		1024475	1					
ANR	1030685	PrimaryExpression	"""search.kwidx"""		1024475	0					
ANR	1030686	Argument	search -> n_kws		1024475	2					
ANR	1030687	PtrMemberAccess	search -> n_kws		1024475	0					
ANR	1030688	Identifier	search		1024475	0					
ANR	1030689	Identifier	n_kws		1024475	1					
ANR	1030690	IfStatement	if ( dosearch )		1024475	41					
ANR	1030691	Condition	dosearch	3946:5:111534:111541	1024475	0	True				
ANR	1030692	Identifier	dosearch		1024475	0					
ANR	1030693	CompoundStatement		1003:15:27867:27867	1024475	1					
ANR	1030694	ExpressionStatement	"do_string_search ( core , search_itv , & param )"	3947:2:111548:111591	1024475	0	True				
ANR	1030695	CallExpression	"do_string_search ( core , search_itv , & param )"		1024475	0					
ANR	1030696	Callee	do_string_search		1024475	0					
ANR	1030697	Identifier	do_string_search		1024475	0					
ANR	1030698	ArgumentList	core		1024475	1					
ANR	1030699	Argument	core		1024475	0					
ANR	1030700	Identifier	core		1024475	0					
ANR	1030701	Argument	search_itv		1024475	1					
ANR	1030702	Identifier	search_itv		1024475	0					
ANR	1030703	Argument	& param		1024475	2					
ANR	1030704	UnaryOperationExpression	& param		1024475	0					
ANR	1030705	UnaryOperator	&		1024475	0					
ANR	1030706	Identifier	param		1024475	1					
ANR	1030707	Label	beach :	3949:0:111596:111601	1024475	42	True				
ANR	1030708	Identifier	beach		1024475	0					
ANR	1030709	ExpressionStatement	core -> num -> value = search -> nhits	3950:1:111604:111636	1024475	43	True				
ANR	1030710	AssignmentExpression	core -> num -> value = search -> nhits		1024475	0		=			
ANR	1030711	PtrMemberAccess	core -> num -> value		1024475	0					
ANR	1030712	PtrMemberAccess	core -> num		1024475	0					
ANR	1030713	Identifier	core		1024475	0					
ANR	1030714	Identifier	num		1024475	1					
ANR	1030715	Identifier	value		1024475	1					
ANR	1030716	PtrMemberAccess	search -> nhits		1024475	1					
ANR	1030717	Identifier	search		1024475	0					
ANR	1030718	Identifier	nhits		1024475	1					
ANR	1030719	ExpressionStatement	core -> in_search = false	3951:1:111639:111662	1024475	44	True				
ANR	1030720	AssignmentExpression	core -> in_search = false		1024475	0		=			
ANR	1030721	PtrMemberAccess	core -> in_search		1024475	0					
ANR	1030722	Identifier	core		1024475	0					
ANR	1030723	Identifier	in_search		1024475	1					
ANR	1030724	Identifier	false		1024475	1					
ANR	1030725	ExpressionStatement	r_flag_space_pop ( core -> flags )	3952:1:111665:111695	1024475	45	True				
ANR	1030726	CallExpression	r_flag_space_pop ( core -> flags )		1024475	0					
ANR	1030727	Callee	r_flag_space_pop		1024475	0					
ANR	1030728	Identifier	r_flag_space_pop		1024475	0					
ANR	1030729	ArgumentList	core -> flags		1024475	1					
ANR	1030730	Argument	core -> flags		1024475	0					
ANR	1030731	PtrMemberAccess	core -> flags		1024475	0					
ANR	1030732	Identifier	core		1024475	0					
ANR	1030733	Identifier	flags		1024475	1					
ANR	1030734	IfStatement	if ( json )		1024475	46					
ANR	1030735	Condition	json	3953:5:111702:111705	1024475	0	True				
ANR	1030736	Identifier	json		1024475	0					
ANR	1030737	CompoundStatement		1010:11:28031:28031	1024475	1					
ANR	1030738	ExpressionStatement	r_cons_newline ( )	3954:2:111712:111729	1024475	0	True				
ANR	1030739	CallExpression	r_cons_newline ( )		1024475	0					
ANR	1030740	Callee	r_cons_newline		1024475	0					
ANR	1030741	Identifier	r_cons_newline		1024475	0					
ANR	1030742	ArgumentList			1024475	1					
ANR	1030743	ExpressionStatement	r_list_free ( param . boundaries )	3956:1:111735:111765	1024475	47	True				
ANR	1030744	CallExpression	r_list_free ( param . boundaries )		1024475	0					
ANR	1030745	Callee	r_list_free		1024475	0					
ANR	1030746	Identifier	r_list_free		1024475	0					
ANR	1030747	ArgumentList	param . boundaries		1024475	1					
ANR	1030748	Argument	param . boundaries		1024475	0					
ANR	1030749	MemberAccess	param . boundaries		1024475	0					
ANR	1030750	Identifier	param		1024475	0					
ANR	1030751	Identifier	boundaries		1024475	1					
ANR	1030752	ExpressionStatement	r_search_kw_reset ( search )	3957:1:111768:111794	1024475	48	True				
ANR	1030753	CallExpression	r_search_kw_reset ( search )		1024475	0					
ANR	1030754	Callee	r_search_kw_reset		1024475	0					
ANR	1030755	Identifier	r_search_kw_reset		1024475	0					
ANR	1030756	ArgumentList	search		1024475	1					
ANR	1030757	Argument	search		1024475	0					
ANR	1030758	Identifier	search		1024475	0					
ANR	1030759	ReturnStatement	return ret ;	3958:1:111797:111807	1024475	49	True				
ANR	1030760	Identifier	ret		1024475	0					
ANR	1030761	ReturnType	static int		1024475	1					
ANR	1030762	Identifier	cmd_search		1024475	2					
ANR	1030763	ParameterList	"void * data , const char * input"		1024475	3					
ANR	1030764	Parameter	void * data	2944:22:83645:83654	1024475	0	True				
ANR	1030765	ParameterType	void *		1024475	0					
ANR	1030766	Identifier	data		1024475	1					
ANR	1030767	Parameter	const char * input	2944:34:83657:83673	1024475	1	True				
ANR	1030768	ParameterType	const char *		1024475	0					
ANR	1030769	Identifier	input		1024475	1					
ANR	1030770	CFGEntryNode	ENTRY		1024475		True				
ANR	1030771	CFGExitNode	EXIT		1024475		True				
ANR	1030772	Symbol	* sp		1024475						
ANR	1030773	Symbol	search -> bckwrds		1024475						
ANR	1030774	Symbol	ps		1024475						
ANR	1030775	Symbol	* fcn		1024475						
ANR	1030776	Symbol	* map		1024475						
ANR	1030777	Symbol	asterisk		1024475						
ANR	1030778	Symbol	* input		1024475						
ANR	1030779	Symbol	core -> offset		1024475						
ANR	1030780	Symbol	strchr		1024475						
ANR	1030781	Symbol	param_offset		1024475						
ANR	1030782	Symbol	* core -> assembler		1024475						
ANR	1030783	Symbol	len		1024475						
ANR	1030784	Symbol	do_anal_search		1024475						
ANR	1030785	Symbol	& n_args		1024475						
ANR	1030786	Symbol	* core -> num		1024475						
ANR	1030787	Symbol	r_file_slurp		1024475						
ANR	1030788	Symbol	vmin		1024475						
ANR	1030789	Symbol	param . cmd_hit		1024475						
ANR	1030790	Symbol	search -> nhits		1024475						
ANR	1030791	Symbol	dosearch		1024475						
ANR	1030792	Symbol	str		1024475						
ANR	1030793	Symbol	input		1024475						
ANR	1030794	Symbol	& hits		1024475						
ANR	1030795	Symbol	search_from		1024475						
ANR	1030796	Symbol	size		1024475						
ANR	1030797	Symbol	skw -> icase		1024475						
ANR	1030798	Symbol	r_config_get_i		1024475						
ANR	1030799	Symbol	search_itv		1024475						
ANR	1030800	Symbol	json_first		1024475						
ANR	1030801	Symbol	r_str_trim_ro		1024475						
ANR	1030802	Symbol	opsz		1024475						
ANR	1030803	Symbol	v_str		1024475						
ANR	1030804	Symbol	param . boundaries		1024475						
ANR	1030805	Symbol	* core		1024475						
ANR	1030806	Symbol	* skw		1024475						
ANR	1030807	Symbol	R_ABS		1024475						
ANR	1030808	Symbol	r_core_asm_search		1024475						
ANR	1030809	Symbol	core -> anal		1024475						
ANR	1030810	Symbol	search		1024475						
ANR	1030811	Symbol	r_cons_is_breaked		1024475						
ANR	1030812	Symbol	min		1024475						
ANR	1030813	Symbol	core -> io		1024475						
ANR	1030814	Symbol	param . mode		1024475						
ANR	1030815	Symbol	arg		1024475						
ANR	1030816	Symbol	r_core_magic_at		1024475						
ANR	1030817	Symbol	* ( ++ input )		1024475						
ANR	1030818	Symbol	sp		1024475						
ANR	1030819	Symbol	r_hex_str2bin		1024475						
ANR	1030820	Symbol	r_str_startswith		1024475						
ANR	1030821	Symbol	c		1024475						
ANR	1030822	Symbol	i		1024475						
ANR	1030823	Symbol	core -> flags		1024475						
ANR	1030824	Symbol	R_MIN		1024475						
ANR	1030825	Symbol	hashName		1024475						
ANR	1030826	Symbol	n		1024475						
ANR	1030827	Symbol	r_itv_end		1024475						
ANR	1030828	Symbol	p		1024475						
ANR	1030829	Symbol	buf		1024475						
ANR	1030830	Symbol	s		1024475						
ANR	1030831	Symbol	w		1024475						
ANR	1030832	Symbol	kwd		1024475						
ANR	1030833	Symbol	fcn -> addr		1024475						
ANR	1030834	Symbol	* w ++		1024475						
ANR	1030835	Symbol	to		1024475						
ANR	1030836	Symbol	* pmin ++		1024475						
ANR	1030837	Symbol	R_SEARCH_KEYWORD_TYPE_STRING		1024475						
ANR	1030838	Symbol	ignorecase		1024475						
ANR	1030839	Symbol	tolower		1024475						
ANR	1030840	Symbol	align		1024475						
ANR	1030841	Symbol	maxHits		1024475						
ANR	1030842	Symbol	r_str_trim_dup		1024475						
ANR	1030843	Symbol	ochunksize		1024475						
ANR	1030844	Symbol	* args		1024475						
ANR	1030845	Symbol	strlen		1024475						
ANR	1030846	Symbol	r_itv_intersect		1024475						
ANR	1030847	Symbol	core -> lastsearch		1024475						
ANR	1030848	Symbol	ret		1024475						
ANR	1030849	Symbol	param . rsa_search		1024475						
ANR	1030850	Symbol	R_SEARCH_DELTAKEY		1024475						
ANR	1030851	Symbol	hit -> len		1024475						
ANR	1030852	Symbol	count		1024475						
ANR	1030853	Symbol	* core -> search		1024475						
ANR	1030854	Symbol	itv		1024475						
ANR	1030855	Symbol	* inp		1024475						
ANR	1030856	Symbol	core -> search -> maxhits		1024475						
ANR	1030857	Symbol	core -> in_search		1024475						
ANR	1030858	Symbol	searchprefix		1024475						
ANR	1030859	Symbol	* json		1024475						
ANR	1030860	Symbol	pmax		1024475						
ANR	1030861	Symbol	r_core_asm_hit_list_new		1024475						
ANR	1030862	Symbol	* hit		1024475						
ANR	1030863	Symbol	calloc		1024475						
ANR	1030864	Symbol	r_str_unescape		1024475						
ANR	1030865	Symbol	r_num_math		1024475						
ANR	1030866	Symbol	param		1024475						
ANR	1030867	Symbol	json		1024475						
ANR	1030868	Symbol	bin_verbose		1024475						
ANR	1030869	Symbol	r_fs_mount		1024475						
ANR	1030870	Symbol	sdb_iter		1024475						
ANR	1030871	Symbol	map -> itv . addr		1024475						
ANR	1030872	Symbol	core -> search		1024475						
ANR	1030873	Symbol	* p ++		1024475						
ANR	1030874	Symbol	false		1024475						
ANR	1030875	Symbol	param . inverse		1024475						
ANR	1030876	Symbol	v_writebuf		1024475						
ANR	1030877	Symbol	hashValue		1024475						
ANR	1030878	Symbol	args		1024475						
ANR	1030879	Symbol	& n		1024475						
ANR	1030880	Symbol	bsize		1024475						
ANR	1030881	Symbol	strdup		1024475						
ANR	1030882	Symbol	help_msg_slash_Rk		1024475						
ANR	1030883	Symbol	R_SEARCH_STRING		1024475						
ANR	1030884	Symbol	r_io_size		1024475						
ANR	1030885	Symbol	param . aes_search		1024475						
ANR	1030886	Symbol	help_msg_slash_R		1024475						
ANR	1030887	Symbol	& param		1024475						
ANR	1030888	Symbol	r_itv_overlap		1024475						
ANR	1030889	Symbol	searchshow		1024475						
ANR	1030890	Symbol	n_args		1024475						
ANR	1030891	Symbol	hit -> addr		1024475						
ANR	1030892	Symbol	core -> io -> debug		1024475						
ANR	1030893	Symbol	gadgetSdb		1024475						
ANR	1030894	Symbol	chunksize		1024475						
ANR	1030895	Symbol	vmax		1024475						
ANR	1030896	Symbol	search_itv . size		1024475						
ANR	1030897	Symbol	skw		1024475						
ANR	1030898	Symbol	help_msg_slash_x		1024475						
ANR	1030899	Symbol	r_search_keyword_new_regexp		1024475						
ANR	1030900	Symbol	empty_search_itv		1024475						
ANR	1030901	Symbol	iter		1024475						
ANR	1030902	Symbol	help_msg_slash_r		1024475						
ANR	1030903	Symbol	help_msg_slash_m		1024475						
ANR	1030904	Symbol	* kw		1024475						
ANR	1030905	Symbol	search_itv . addr		1024475						
ANR	1030906	Symbol	r_core_asm_hit_new		1024475						
ANR	1030907	Symbol	num_str		1024475						
ANR	1030908	Symbol	help_msg_slash_c		1024475						
ANR	1030909	Symbol	refptr		1024475						
ANR	1030910	Symbol	help_msg_slash_a		1024475						
ANR	1030911	Symbol	* arg		1024475						
ANR	1030912	Symbol	R_SEARCH_REGEXP		1024475						
ANR	1030913	Symbol	& json_first		1024475						
ANR	1030914	Symbol	core -> sdb		1024475						
ANR	1030915	Symbol	r_config_get		1024475						
ANR	1030916	Symbol	core -> assembler -> bits		1024475						
ANR	1030917	Symbol	core -> assembler		1024475						
ANR	1030918	Symbol	fcn		1024475						
ANR	1030919	Symbol	sdb_list		1024475						
ANR	1030920	Symbol	file		1024475						
ANR	1030921	Symbol	r_search_keyword_new_hex		1024475						
ANR	1030922	Symbol	r_core_prevop_addr		1024475						
ANR	1030923	Symbol	strstart		1024475						
ANR	1030924	Symbol	map		1024475						
ANR	1030925	Symbol	help_msg_slash		1024475						
ANR	1030926	Symbol	atoi		1024475						
ANR	1030927	Symbol	malloc		1024475						
ANR	1030928	Symbol	& addr		1024475						
ANR	1030929	Symbol	"* ( s = strchr ( s , ')' ) + 1 )"		1024475						
ANR	1030930	Symbol	err		1024475						
ANR	1030931	Symbol	max		1024475						
ANR	1030932	Symbol	sdb_foreach_list		1024475						
ANR	1030933	Symbol	kv		1024475						
ANR	1030934	Symbol	sdbkv_value		1024475						
ANR	1030935	Symbol	* p2		1024475						
ANR	1030936	Symbol	& size		1024475						
ANR	1030937	Symbol	core -> search -> bckwrds		1024475						
ANR	1030938	Symbol	kw		1024475						
ANR	1030939	Symbol	hits		1024475						
ANR	1030940	Symbol	r_search_set_string_limits		1024475						
ANR	1030941	Symbol	kw -> type		1024475						
ANR	1030942	Symbol	hashLength		1024475						
ANR	1030943	Symbol	depth		1024475						
ANR	1030944	Symbol	r_core_search_value_in_range		1024475						
ANR	1030945	Symbol	r_core_get_boundaries_prot		1024475						
ANR	1030946	Symbol	r_list_length		1024475						
ANR	1030947	Symbol	r_search_keyword_new		1024475						
ANR	1030948	Symbol	sdb_ns		1024475						
ANR	1030949	Symbol	UT32_MAX		1024475						
ANR	1030950	Symbol	v_buf		1024475						
ANR	1030951	Symbol	data		1024475						
ANR	1030952	Symbol	* ignorecase		1024475						
ANR	1030953	Symbol	core -> num -> value		1024475						
ANR	1030954	Symbol	core -> search -> overlap		1024475						
ANR	1030955	Symbol	space		1024475						
ANR	1030956	Symbol	search_to		1024475						
ANR	1030957	Symbol	mode		1024475						
ANR	1030958	Symbol	hit		1024475						
ANR	1030959	Symbol	core -> search -> align		1024475						
ANR	1030960	Symbol	curseek		1024475						
ANR	1030961	Symbol	from		1024475						
ANR	1030962	Symbol	r_num_get		1024475						
ANR	1030963	Symbol	core -> num		1024475						
ANR	1030964	Symbol	nums		1024475						
ANR	1030965	Symbol	NULL		1024475						
ANR	1030966	Symbol	mp		1024475						
ANR	1030967	Symbol	offset		1024475						
ANR	1030968	Symbol	trg		1024475						
ANR	1030969	Symbol	search -> n_kws		1024475						
ANR	1030970	Symbol	core -> io -> va		1024475						
ANR	1030971	Symbol	core		1024475						
ANR	1030972	Symbol	* pmax ++		1024475						
ANR	1030973	Symbol	r_core_prevop_addr_force		1024475						
ANR	1030974	Symbol	* ( input + 1 )		1024475						
ANR	1030975	Symbol	true		1024475						
ANR	1030976	Symbol	core -> fs		1024475						
ANR	1030977	Symbol	R_SEARCH_KEYWORD		1024475						
ANR	1030978	Symbol	* s ++		1024475						
ANR	1030979	Symbol	r_anal_get_fcn_at		1024475						
ANR	1030980	Symbol	map -> itv		1024475						
ANR	1030981	Symbol	p2		1024475						
ANR	1030982	Symbol	vsize		1024475						
ANR	1030983	Symbol	param . crypto_search		1024475						
ANR	1030984	Symbol	r_str_newf		1024475						
ANR	1030985	Symbol	pmin		1024475						
ANR	1030986	Symbol	UT64_MAX		1024475						
ANR	1030987	Symbol	addr		1024475						
ANR	1030988	Symbol	* * core		1024475						
ANR	1030989	Symbol	r_str_argv		1024475						
ANR	1030990	Symbol	core -> config		1024475						
ANR	1030991	Symbol	searchflags		1024475						
ANR	1030992	Symbol	inp		1024475						
ANR	1030993	Symbol	skw -> type		1024475						
ANR	1030994	Symbol	* search		1024475						
ANR	1030995	Symbol	r_num_str_split_list		1024475						
ANR	1030996	Symbol	* core -> io		1024475						
ANR	1030997	Symbol	_CbInRangeSearchV		1024475						
ANR	1030998	Symbol	* i		1024475						
ANR	1030999	Symbol	r_search_keyword_new_hexmask		1024475						
ANR	1031000	Symbol	* param_offset		1024475						
ANR	1031001	Symbol	* p		1024475						
ANR	1031002	Symbol	hitlist		1024475						
ANR	1031003	Symbol	core -> dbg		1024475						
