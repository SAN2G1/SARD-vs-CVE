command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1189091	File	data/converged/CVE-2019-16718~_radare2/ctype.c								
ANR	1189092	ClassDef	r_parse_ctype_t	7:8:100:285							
ANR	1189093	DeclStmt									
ANR	1189094	Decl							mpc_parser_t	mpc_parser_t *	integerlit
ANR	1189095	DeclStmt									
ANR	1189096	Decl							mpc_parser_t	mpc_parser_t *	identifier
ANR	1189097	DeclStmt									
ANR	1189098	Decl							mpc_parser_t	mpc_parser_t *	qualifier
ANR	1189099	DeclStmt									
ANR	1189100	Decl							mpc_parser_t	mpc_parser_t *	pointer
ANR	1189101	DeclStmt									
ANR	1189102	Decl							mpc_parser_t	mpc_parser_t *	array
ANR	1189103	DeclStmt									
ANR	1189104	Decl							mpc_parser_t	mpc_parser_t *	type
ANR	1189105	DeclStmt									
ANR	1189106	Decl							r_parse_ctype_t	r_parse_ctype_t	RParseCType
ANR	1189107	DeclStmt									
ANR	1189108	Decl							const char	const char *	lang
ANR	1189109	Function	r_parse_ctype_new	28:0:760:1324							
ANR	1189110	FunctionDef	r_parse_ctype_new ()		1189109	0					
ANR	1189111	CompoundStatement		28:39:799:1324	1189109	0					
ANR	1189112	IdentifierDeclStatement	RParseCType * ctype = R_NEW ( RParseCType ) ;	29:1:802:842	1189109	0	True				
ANR	1189113	IdentifierDecl	* ctype = R_NEW ( RParseCType )		1189109	0					
ANR	1189114	IdentifierDeclType	RParseCType *		1189109	0					
ANR	1189115	Identifier	ctype		1189109	1					
ANR	1189116	AssignmentExpression	* ctype = R_NEW ( RParseCType )		1189109	2		=			
ANR	1189117	Identifier	ctype		1189109	0					
ANR	1189118	CallExpression	R_NEW ( RParseCType )		1189109	1					
ANR	1189119	Callee	R_NEW		1189109	0					
ANR	1189120	Identifier	R_NEW		1189109	0					
ANR	1189121	ArgumentList	RParseCType		1189109	1					
ANR	1189122	Argument	RParseCType		1189109	0					
ANR	1189123	Identifier	RParseCType		1189109	0					
ANR	1189124	IfStatement	if ( ! ctype )		1189109	1					
ANR	1189125	Condition	! ctype	30:5:849:854	1189109	0	True				
ANR	1189126	UnaryOperationExpression	! ctype		1189109	0					
ANR	1189127	UnaryOperator	!		1189109	0					
ANR	1189128	Identifier	ctype		1189109	1					
ANR	1189129	CompoundStatement		3:13:57:57	1189109	1					
ANR	1189130	ReturnStatement	return NULL ;	31:2:861:872	1189109	0	True				
ANR	1189131	Identifier	NULL		1189109	0					
ANR	1189132	ExpressionStatement	"ctype -> integerlit = mpc_new ( ""integerlit"" )"	34:1:879:921	1189109	2	True				
ANR	1189133	AssignmentExpression	"ctype -> integerlit = mpc_new ( ""integerlit"" )"		1189109	0		=			
ANR	1189134	PtrMemberAccess	ctype -> integerlit		1189109	0					
ANR	1189135	Identifier	ctype		1189109	0					
ANR	1189136	Identifier	integerlit		1189109	1					
ANR	1189137	CallExpression	"mpc_new ( ""integerlit"" )"		1189109	1					
ANR	1189138	Callee	mpc_new		1189109	0					
ANR	1189139	Identifier	mpc_new		1189109	0					
ANR	1189140	ArgumentList	"""integerlit"""		1189109	1					
ANR	1189141	Argument	"""integerlit"""		1189109	0					
ANR	1189142	PrimaryExpression	"""integerlit"""		1189109	0					
ANR	1189143	ExpressionStatement	"ctype -> identifier = mpc_new ( ""identifier"" )"	35:1:924:966	1189109	3	True				
ANR	1189144	AssignmentExpression	"ctype -> identifier = mpc_new ( ""identifier"" )"		1189109	0		=			
ANR	1189145	PtrMemberAccess	ctype -> identifier		1189109	0					
ANR	1189146	Identifier	ctype		1189109	0					
ANR	1189147	Identifier	identifier		1189109	1					
ANR	1189148	CallExpression	"mpc_new ( ""identifier"" )"		1189109	1					
ANR	1189149	Callee	mpc_new		1189109	0					
ANR	1189150	Identifier	mpc_new		1189109	0					
ANR	1189151	ArgumentList	"""identifier"""		1189109	1					
ANR	1189152	Argument	"""identifier"""		1189109	0					
ANR	1189153	PrimaryExpression	"""identifier"""		1189109	0					
ANR	1189154	ExpressionStatement	"ctype -> qualifier = mpc_new ( ""qualifier"" )"	36:1:969:1009	1189109	4	True				
ANR	1189155	AssignmentExpression	"ctype -> qualifier = mpc_new ( ""qualifier"" )"		1189109	0		=			
ANR	1189156	PtrMemberAccess	ctype -> qualifier		1189109	0					
ANR	1189157	Identifier	ctype		1189109	0					
ANR	1189158	Identifier	qualifier		1189109	1					
ANR	1189159	CallExpression	"mpc_new ( ""qualifier"" )"		1189109	1					
ANR	1189160	Callee	mpc_new		1189109	0					
ANR	1189161	Identifier	mpc_new		1189109	0					
ANR	1189162	ArgumentList	"""qualifier"""		1189109	1					
ANR	1189163	Argument	"""qualifier"""		1189109	0					
ANR	1189164	PrimaryExpression	"""qualifier"""		1189109	0					
ANR	1189165	ExpressionStatement	"ctype -> pointer = mpc_new ( ""pointer"" )"	37:1:1012:1048	1189109	5	True				
ANR	1189166	AssignmentExpression	"ctype -> pointer = mpc_new ( ""pointer"" )"		1189109	0		=			
ANR	1189167	PtrMemberAccess	ctype -> pointer		1189109	0					
ANR	1189168	Identifier	ctype		1189109	0					
ANR	1189169	Identifier	pointer		1189109	1					
ANR	1189170	CallExpression	"mpc_new ( ""pointer"" )"		1189109	1					
ANR	1189171	Callee	mpc_new		1189109	0					
ANR	1189172	Identifier	mpc_new		1189109	0					
ANR	1189173	ArgumentList	"""pointer"""		1189109	1					
ANR	1189174	Argument	"""pointer"""		1189109	0					
ANR	1189175	PrimaryExpression	"""pointer"""		1189109	0					
ANR	1189176	ExpressionStatement	"ctype -> array = mpc_new ( ""array"" )"	38:1:1051:1083	1189109	6	True				
ANR	1189177	AssignmentExpression	"ctype -> array = mpc_new ( ""array"" )"		1189109	0		=			
ANR	1189178	PtrMemberAccess	ctype -> array		1189109	0					
ANR	1189179	Identifier	ctype		1189109	0					
ANR	1189180	Identifier	array		1189109	1					
ANR	1189181	CallExpression	"mpc_new ( ""array"" )"		1189109	1					
ANR	1189182	Callee	mpc_new		1189109	0					
ANR	1189183	Identifier	mpc_new		1189109	0					
ANR	1189184	ArgumentList	"""array"""		1189109	1					
ANR	1189185	Argument	"""array"""		1189109	0					
ANR	1189186	PrimaryExpression	"""array"""		1189109	0					
ANR	1189187	ExpressionStatement	"ctype -> type = mpc_new ( ""type"" )"	39:1:1086:1116	1189109	7	True				
ANR	1189188	AssignmentExpression	"ctype -> type = mpc_new ( ""type"" )"		1189109	0		=			
ANR	1189189	PtrMemberAccess	ctype -> type		1189109	0					
ANR	1189190	Identifier	ctype		1189109	0					
ANR	1189191	Identifier	type		1189109	1					
ANR	1189192	CallExpression	"mpc_new ( ""type"" )"		1189109	1					
ANR	1189193	Callee	mpc_new		1189109	0					
ANR	1189194	Identifier	mpc_new		1189109	0					
ANR	1189195	ArgumentList	"""type"""		1189109	1					
ANR	1189196	Argument	"""type"""		1189109	0					
ANR	1189197	PrimaryExpression	"""type"""		1189109	0					
ANR	1189198	IdentifierDeclStatement	"mpc_err_t * err = mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL ) ;"	41:1:1120:1199	1189109	8	True				
ANR	1189199	IdentifierDecl	"* err = mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL )"		1189109	0					
ANR	1189200	IdentifierDeclType	mpc_err_t *		1189109	0					
ANR	1189201	Identifier	err		1189109	1					
ANR	1189202	AssignmentExpression	"* err = mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL )"		1189109	2		=			
ANR	1189203	Identifier	err		1189109	0					
ANR	1189204	CallExpression	"mpca_lang ( MPCA_LANG_DEFAULT , lang , ALL_PARSERS ( ctype ) , NULL )"		1189109	1					
ANR	1189205	Callee	mpca_lang		1189109	0					
ANR	1189206	Identifier	mpca_lang		1189109	0					
ANR	1189207	ArgumentList	MPCA_LANG_DEFAULT		1189109	1					
ANR	1189208	Argument	MPCA_LANG_DEFAULT		1189109	0					
ANR	1189209	Identifier	MPCA_LANG_DEFAULT		1189109	0					
ANR	1189210	Argument	lang		1189109	1					
ANR	1189211	Identifier	lang		1189109	0					
ANR	1189212	Argument	ALL_PARSERS ( ctype )		1189109	2					
ANR	1189213	CallExpression	ALL_PARSERS ( ctype )		1189109	0					
ANR	1189214	Callee	ALL_PARSERS		1189109	0					
ANR	1189215	Identifier	ALL_PARSERS		1189109	0					
ANR	1189216	ArgumentList	ctype		1189109	1					
ANR	1189217	Argument	ctype		1189109	0					
ANR	1189218	Identifier	ctype		1189109	0					
ANR	1189219	Argument	NULL		1189109	3					
ANR	1189220	Identifier	NULL		1189109	0					
ANR	1189221	IfStatement	if ( err )		1189109	9					
ANR	1189222	Condition	err	42:5:1206:1208	1189109	0	True				
ANR	1189223	Identifier	err		1189109	0					
ANR	1189224	CompoundStatement		15:10:411:411	1189109	1					
ANR	1189225	ExpressionStatement	mpc_err_print ( err )	43:2:1215:1234	1189109	0	True				
ANR	1189226	CallExpression	mpc_err_print ( err )		1189109	0					
ANR	1189227	Callee	mpc_err_print		1189109	0					
ANR	1189228	Identifier	mpc_err_print		1189109	0					
ANR	1189229	ArgumentList	err		1189109	1					
ANR	1189230	Argument	err		1189109	0					
ANR	1189231	Identifier	err		1189109	0					
ANR	1189232	ExpressionStatement	mpc_err_delete ( err )	44:2:1238:1258	1189109	1	True				
ANR	1189233	CallExpression	mpc_err_delete ( err )		1189109	0					
ANR	1189234	Callee	mpc_err_delete		1189109	0					
ANR	1189235	Identifier	mpc_err_delete		1189109	0					
ANR	1189236	ArgumentList	err		1189109	1					
ANR	1189237	Argument	err		1189109	0					
ANR	1189238	Identifier	err		1189109	0					
ANR	1189239	ExpressionStatement	r_parse_ctype_free ( ctype )	45:2:1262:1288	1189109	2	True				
ANR	1189240	CallExpression	r_parse_ctype_free ( ctype )		1189109	0					
ANR	1189241	Callee	r_parse_ctype_free		1189109	0					
ANR	1189242	Identifier	r_parse_ctype_free		1189109	0					
ANR	1189243	ArgumentList	ctype		1189109	1					
ANR	1189244	Argument	ctype		1189109	0					
ANR	1189245	Identifier	ctype		1189109	0					
ANR	1189246	ReturnStatement	return NULL ;	46:2:1292:1303	1189109	3	True				
ANR	1189247	Identifier	NULL		1189109	0					
ANR	1189248	ReturnStatement	return ctype ;	49:1:1310:1322	1189109	10	True				
ANR	1189249	Identifier	ctype		1189109	0					
ANR	1189250	ReturnType	R_API RParseCType *		1189109	1					
ANR	1189251	Identifier	r_parse_ctype_new		1189109	2					
ANR	1189252	ParameterList			1189109	3					
ANR	1189253	CFGEntryNode	ENTRY		1189109		True				
ANR	1189254	CFGExitNode	EXIT		1189109		True				
ANR	1189255	Symbol	ctype -> qualifier		1189109						
ANR	1189256	Symbol	ctype -> array		1189109						
ANR	1189257	Symbol	NULL		1189109						
ANR	1189258	Symbol	mpc_new		1189109						
ANR	1189259	Symbol	err		1189109						
ANR	1189260	Symbol	ctype -> identifier		1189109						
ANR	1189261	Symbol	MPCA_LANG_DEFAULT		1189109						
ANR	1189262	Symbol	* ctype		1189109						
ANR	1189263	Symbol	ctype -> type		1189109						
ANR	1189264	Symbol	mpca_lang		1189109						
ANR	1189265	Symbol	ctype -> integerlit		1189109						
ANR	1189266	Symbol	ALL_PARSERS		1189109						
ANR	1189267	Symbol	ctype		1189109						
ANR	1189268	Symbol	ctype -> pointer		1189109						
ANR	1189269	Symbol	RParseCType		1189109						
ANR	1189270	Symbol	R_NEW		1189109						
ANR	1189271	Symbol	lang		1189109						
ANR	1189272	Function	r_parse_ctype_free	52:0:1327:1477							
ANR	1189273	FunctionDef	r_parse_ctype_free (RParseCType * ctype)		1189272	0					
ANR	1189274	CompoundStatement		52:50:1377:1477	1189272	0					
ANR	1189275	IfStatement	if ( ! ctype )		1189272	0					
ANR	1189276	Condition	! ctype	53:5:1384:1389	1189272	0	True				
ANR	1189277	UnaryOperationExpression	! ctype		1189272	0					
ANR	1189278	UnaryOperator	!		1189272	0					
ANR	1189279	Identifier	ctype		1189272	1					
ANR	1189280	CompoundStatement		2:13:14:14	1189272	1					
ANR	1189281	ReturnStatement	return ;	54:2:1396:1402	1189272	0	True				
ANR	1189282	ExpressionStatement	"mpc_cleanup ( ALL_PARSERS_COUNT , ALL_PARSERS ( ctype ) )"	56:1:1408:1460	1189272	1	True				
ANR	1189283	CallExpression	"mpc_cleanup ( ALL_PARSERS_COUNT , ALL_PARSERS ( ctype ) )"		1189272	0					
ANR	1189284	Callee	mpc_cleanup		1189272	0					
ANR	1189285	Identifier	mpc_cleanup		1189272	0					
ANR	1189286	ArgumentList	ALL_PARSERS_COUNT		1189272	1					
ANR	1189287	Argument	ALL_PARSERS_COUNT		1189272	0					
ANR	1189288	Identifier	ALL_PARSERS_COUNT		1189272	0					
ANR	1189289	Argument	ALL_PARSERS ( ctype )		1189272	1					
ANR	1189290	CallExpression	ALL_PARSERS ( ctype )		1189272	0					
ANR	1189291	Callee	ALL_PARSERS		1189272	0					
ANR	1189292	Identifier	ALL_PARSERS		1189272	0					
ANR	1189293	ArgumentList	ctype		1189272	1					
ANR	1189294	Argument	ctype		1189272	0					
ANR	1189295	Identifier	ctype		1189272	0					
ANR	1189296	ExpressionStatement	free ( ctype )	57:1:1463:1475	1189272	2	True				
ANR	1189297	CallExpression	free ( ctype )		1189272	0					
ANR	1189298	Callee	free		1189272	0					
ANR	1189299	Identifier	free		1189272	0					
ANR	1189300	ArgumentList	ctype		1189272	1					
ANR	1189301	Argument	ctype		1189272	0					
ANR	1189302	Identifier	ctype		1189272	0					
ANR	1189303	ReturnType	R_API void		1189272	1					
ANR	1189304	Identifier	r_parse_ctype_free		1189272	2					
ANR	1189305	ParameterList	RParseCType * ctype		1189272	3					
ANR	1189306	Parameter	RParseCType * ctype	52:30:1357:1374	1189272	0	True				
ANR	1189307	ParameterType	RParseCType *		1189272	0					
ANR	1189308	Identifier	ctype		1189272	1					
ANR	1189309	CFGEntryNode	ENTRY		1189272		True				
ANR	1189310	CFGExitNode	EXIT		1189272		True				
ANR	1189311	Symbol	ALL_PARSERS		1189272						
ANR	1189312	Symbol	ALL_PARSERS_COUNT		1189272						
ANR	1189313	Symbol	ctype		1189272						
ANR	1189314	Function	is_qualifier_const	60:0:1480:1634							
ANR	1189315	FunctionDef	is_qualifier_const (mpc_ast_t * a)		1189314	0					
ANR	1189316	CompoundStatement		60:45:1525:1634	1189314	0					
ANR	1189317	ReturnStatement	"return strcmp ( a -> tag , ""qualifier|string"" ) == 0 && a -> contents && strcmp ( a -> contents , ""const"" ) == 0 ;"	61:1:1528:1632	1189314	0	True				
ANR	1189318	AndExpression	"strcmp ( a -> tag , ""qualifier|string"" ) == 0 && a -> contents && strcmp ( a -> contents , ""const"" ) == 0"		1189314	0		&&			
ANR	1189319	EqualityExpression	"strcmp ( a -> tag , ""qualifier|string"" ) == 0"		1189314	0		==			
ANR	1189320	CallExpression	"strcmp ( a -> tag , ""qualifier|string"" )"		1189314	0					
ANR	1189321	Callee	strcmp		1189314	0					
ANR	1189322	Identifier	strcmp		1189314	0					
ANR	1189323	ArgumentList	a -> tag		1189314	1					
ANR	1189324	Argument	a -> tag		1189314	0					
ANR	1189325	PtrMemberAccess	a -> tag		1189314	0					
ANR	1189326	Identifier	a		1189314	0					
ANR	1189327	Identifier	tag		1189314	1					
ANR	1189328	Argument	"""qualifier|string"""		1189314	1					
ANR	1189329	PrimaryExpression	"""qualifier|string"""		1189314	0					
ANR	1189330	PrimaryExpression	0		1189314	1					
ANR	1189331	AndExpression	"a -> contents && strcmp ( a -> contents , ""const"" ) == 0"		1189314	1		&&			
ANR	1189332	PtrMemberAccess	a -> contents		1189314	0					
ANR	1189333	Identifier	a		1189314	0					
ANR	1189334	Identifier	contents		1189314	1					
ANR	1189335	EqualityExpression	"strcmp ( a -> contents , ""const"" ) == 0"		1189314	1		==			
ANR	1189336	CallExpression	"strcmp ( a -> contents , ""const"" )"		1189314	0					
ANR	1189337	Callee	strcmp		1189314	0					
ANR	1189338	Identifier	strcmp		1189314	0					
ANR	1189339	ArgumentList	a -> contents		1189314	1					
ANR	1189340	Argument	a -> contents		1189314	0					
ANR	1189341	PtrMemberAccess	a -> contents		1189314	0					
ANR	1189342	Identifier	a		1189314	0					
ANR	1189343	Identifier	contents		1189314	1					
ANR	1189344	Argument	"""const"""		1189314	1					
ANR	1189345	PrimaryExpression	"""const"""		1189314	0					
ANR	1189346	PrimaryExpression	0		1189314	1					
ANR	1189347	ReturnType	static bool		1189314	1					
ANR	1189348	Identifier	is_qualifier_const		1189314	2					
ANR	1189349	ParameterList	mpc_ast_t * a		1189314	3					
ANR	1189350	Parameter	mpc_ast_t * a	60:31:1511:1522	1189314	0	True				
ANR	1189351	ParameterType	mpc_ast_t *		1189314	0					
ANR	1189352	Identifier	a		1189314	1					
ANR	1189353	CFGEntryNode	ENTRY		1189314		True				
ANR	1189354	CFGExitNode	EXIT		1189314		True				
ANR	1189355	Symbol	strcmp		1189314						
ANR	1189356	Symbol	a		1189314						
ANR	1189357	Symbol	a -> tag		1189314						
ANR	1189358	Symbol	* a		1189314						
ANR	1189359	Symbol	a -> contents		1189314						
ANR	1189360	Function	is_identifier_string	66:0:1637:1753							
ANR	1189361	FunctionDef	is_identifier_string (mpc_ast_t * a)		1189360	0					
ANR	1189362	CompoundStatement		66:47:1684:1753	1189360	0					
ANR	1189363	ReturnStatement	"return strcmp ( a -> tag , ""identifier|regex"" ) == 0 && a -> contents ;"	67:1:1687:1751	1189360	0	True				
ANR	1189364	AndExpression	"strcmp ( a -> tag , ""identifier|regex"" ) == 0 && a -> contents"		1189360	0		&&			
ANR	1189365	EqualityExpression	"strcmp ( a -> tag , ""identifier|regex"" ) == 0"		1189360	0		==			
ANR	1189366	CallExpression	"strcmp ( a -> tag , ""identifier|regex"" )"		1189360	0					
ANR	1189367	Callee	strcmp		1189360	0					
ANR	1189368	Identifier	strcmp		1189360	0					
ANR	1189369	ArgumentList	a -> tag		1189360	1					
ANR	1189370	Argument	a -> tag		1189360	0					
ANR	1189371	PtrMemberAccess	a -> tag		1189360	0					
ANR	1189372	Identifier	a		1189360	0					
ANR	1189373	Identifier	tag		1189360	1					
ANR	1189374	Argument	"""identifier|regex"""		1189360	1					
ANR	1189375	PrimaryExpression	"""identifier|regex"""		1189360	0					
ANR	1189376	PrimaryExpression	0		1189360	1					
ANR	1189377	PtrMemberAccess	a -> contents		1189360	1					
ANR	1189378	Identifier	a		1189360	0					
ANR	1189379	Identifier	contents		1189360	1					
ANR	1189380	ReturnType	static bool		1189360	1					
ANR	1189381	Identifier	is_identifier_string		1189360	2					
ANR	1189382	ParameterList	mpc_ast_t * a		1189360	3					
ANR	1189383	Parameter	mpc_ast_t * a	66:33:1670:1681	1189360	0	True				
ANR	1189384	ParameterType	mpc_ast_t *		1189360	0					
ANR	1189385	Identifier	a		1189360	1					
ANR	1189386	CFGEntryNode	ENTRY		1189360		True				
ANR	1189387	CFGExitNode	EXIT		1189360		True				
ANR	1189388	Symbol	strcmp		1189360						
ANR	1189389	Symbol	a		1189360						
ANR	1189390	Symbol	a -> tag		1189360						
ANR	1189391	Symbol	* a		1189360						
ANR	1189392	Symbol	a -> contents		1189360						
ANR	1189393	Function	is_identifier_kind	71:0:1756:2032							
ANR	1189394	FunctionDef	is_identifier_kind (mpc_ast_t * a)		1189393	0					
ANR	1189395	CompoundStatement		71:45:1801:2032	1189393	0					
ANR	1189396	ReturnStatement	"return strcmp ( a -> tag , ""identifier|>"" ) == 0 && a -> children_num == 2 && strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents ;"	72:1:1804:2030	1189393	0	True				
ANR	1189397	AndExpression	"strcmp ( a -> tag , ""identifier|>"" ) == 0 && a -> children_num == 2 && strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		1189393	0		&&			
ANR	1189398	EqualityExpression	"strcmp ( a -> tag , ""identifier|>"" ) == 0"		1189393	0		==			
ANR	1189399	CallExpression	"strcmp ( a -> tag , ""identifier|>"" )"		1189393	0					
ANR	1189400	Callee	strcmp		1189393	0					
ANR	1189401	Identifier	strcmp		1189393	0					
ANR	1189402	ArgumentList	a -> tag		1189393	1					
ANR	1189403	Argument	a -> tag		1189393	0					
ANR	1189404	PtrMemberAccess	a -> tag		1189393	0					
ANR	1189405	Identifier	a		1189393	0					
ANR	1189406	Identifier	tag		1189393	1					
ANR	1189407	Argument	"""identifier|>"""		1189393	1					
ANR	1189408	PrimaryExpression	"""identifier|>"""		1189393	0					
ANR	1189409	PrimaryExpression	0		1189393	1					
ANR	1189410	AndExpression	"a -> children_num == 2 && strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		1189393	1		&&			
ANR	1189411	EqualityExpression	a -> children_num == 2		1189393	0		==			
ANR	1189412	PtrMemberAccess	a -> children_num		1189393	0					
ANR	1189413	Identifier	a		1189393	0					
ANR	1189414	Identifier	children_num		1189393	1					
ANR	1189415	PrimaryExpression	2		1189393	1					
ANR	1189416	AndExpression	"strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		1189393	1		&&			
ANR	1189417	EqualityExpression	"strcmp ( a -> children [ 0 ] -> tag , ""string"" ) == 0"		1189393	0		==			
ANR	1189418	CallExpression	"strcmp ( a -> children [ 0 ] -> tag , ""string"" )"		1189393	0					
ANR	1189419	Callee	strcmp		1189393	0					
ANR	1189420	Identifier	strcmp		1189393	0					
ANR	1189421	ArgumentList	a -> children [ 0 ] -> tag		1189393	1					
ANR	1189422	Argument	a -> children [ 0 ] -> tag		1189393	0					
ANR	1189423	PtrMemberAccess	a -> children [ 0 ] -> tag		1189393	0					
ANR	1189424	ArrayIndexing	a -> children [ 0 ]		1189393	0					
ANR	1189425	PtrMemberAccess	a -> children		1189393	0					
ANR	1189426	Identifier	a		1189393	0					
ANR	1189427	Identifier	children		1189393	1					
ANR	1189428	PrimaryExpression	0		1189393	1					
ANR	1189429	Identifier	tag		1189393	1					
ANR	1189430	Argument	"""string"""		1189393	1					
ANR	1189431	PrimaryExpression	"""string"""		1189393	0					
ANR	1189432	PrimaryExpression	0		1189393	1					
ANR	1189433	AndExpression	"a -> children [ 0 ] -> contents && strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		1189393	1		&&			
ANR	1189434	PtrMemberAccess	a -> children [ 0 ] -> contents		1189393	0					
ANR	1189435	ArrayIndexing	a -> children [ 0 ]		1189393	0					
ANR	1189436	PtrMemberAccess	a -> children		1189393	0					
ANR	1189437	Identifier	a		1189393	0					
ANR	1189438	Identifier	children		1189393	1					
ANR	1189439	PrimaryExpression	0		1189393	1					
ANR	1189440	Identifier	contents		1189393	1					
ANR	1189441	AndExpression	"strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0 && a -> children [ 1 ] -> contents"		1189393	1		&&			
ANR	1189442	EqualityExpression	"strcmp ( a -> children [ 1 ] -> tag , ""regex"" ) == 0"		1189393	0		==			
ANR	1189443	CallExpression	"strcmp ( a -> children [ 1 ] -> tag , ""regex"" )"		1189393	0					
ANR	1189444	Callee	strcmp		1189393	0					
ANR	1189445	Identifier	strcmp		1189393	0					
ANR	1189446	ArgumentList	a -> children [ 1 ] -> tag		1189393	1					
ANR	1189447	Argument	a -> children [ 1 ] -> tag		1189393	0					
ANR	1189448	PtrMemberAccess	a -> children [ 1 ] -> tag		1189393	0					
ANR	1189449	ArrayIndexing	a -> children [ 1 ]		1189393	0					
ANR	1189450	PtrMemberAccess	a -> children		1189393	0					
ANR	1189451	Identifier	a		1189393	0					
ANR	1189452	Identifier	children		1189393	1					
ANR	1189453	PrimaryExpression	1		1189393	1					
ANR	1189454	Identifier	tag		1189393	1					
ANR	1189455	Argument	"""regex"""		1189393	1					
ANR	1189456	PrimaryExpression	"""regex"""		1189393	0					
ANR	1189457	PrimaryExpression	0		1189393	1					
ANR	1189458	PtrMemberAccess	a -> children [ 1 ] -> contents		1189393	1					
ANR	1189459	ArrayIndexing	a -> children [ 1 ]		1189393	0					
ANR	1189460	PtrMemberAccess	a -> children		1189393	0					
ANR	1189461	Identifier	a		1189393	0					
ANR	1189462	Identifier	children		1189393	1					
ANR	1189463	PrimaryExpression	1		1189393	1					
ANR	1189464	Identifier	contents		1189393	1					
ANR	1189465	ReturnType	static bool		1189393	1					
ANR	1189466	Identifier	is_identifier_kind		1189393	2					
ANR	1189467	ParameterList	mpc_ast_t * a		1189393	3					
ANR	1189468	Parameter	mpc_ast_t * a	71:31:1787:1798	1189393	0	True				
ANR	1189469	ParameterType	mpc_ast_t *		1189393	0					
ANR	1189470	Identifier	a		1189393	1					
ANR	1189471	CFGEntryNode	ENTRY		1189393		True				
ANR	1189472	CFGExitNode	EXIT		1189393		True				
ANR	1189473	Symbol	a -> children		1189393						
ANR	1189474	Symbol	* * * a		1189393						
ANR	1189475	Symbol	strcmp		1189393						
ANR	1189476	Symbol	a		1189393						
ANR	1189477	Symbol	* * a -> children		1189393						
ANR	1189478	Symbol	a -> children [ 1 ] -> tag		1189393						
ANR	1189479	Symbol	* * a		1189393						
ANR	1189480	Symbol	* a		1189393						
ANR	1189481	Symbol	a -> children [ 1 ] -> contents		1189393						
ANR	1189482	Symbol	a -> tag		1189393						
ANR	1189483	Symbol	a -> children [ 0 ] -> tag		1189393						
ANR	1189484	Symbol	a -> children [ 0 ] -> contents		1189393						
ANR	1189485	Symbol	a -> children_num		1189393						
ANR	1189486	Symbol	* a -> children		1189393						
ANR	1189487	Function	is_non_const_pointer	80:0:2035:2183							
ANR	1189488	FunctionDef	is_non_const_pointer (mpc_ast_t * a)		1189487	0					
ANR	1189489	CompoundStatement		80:47:2082:2183	1189487	0					
ANR	1189490	ReturnStatement	"return strcmp ( a -> tag , ""pointer|char"" ) == 0 && a -> contents && strcmp ( a -> contents , ""*"" ) == 0 ;"	81:1:2085:2181	1189487	0	True				
ANR	1189491	AndExpression	"strcmp ( a -> tag , ""pointer|char"" ) == 0 && a -> contents && strcmp ( a -> contents , ""*"" ) == 0"		1189487	0		&&			
ANR	1189492	EqualityExpression	"strcmp ( a -> tag , ""pointer|char"" ) == 0"		1189487	0		==			
ANR	1189493	CallExpression	"strcmp ( a -> tag , ""pointer|char"" )"		1189487	0					
ANR	1189494	Callee	strcmp		1189487	0					
ANR	1189495	Identifier	strcmp		1189487	0					
ANR	1189496	ArgumentList	a -> tag		1189487	1					
ANR	1189497	Argument	a -> tag		1189487	0					
ANR	1189498	PtrMemberAccess	a -> tag		1189487	0					
ANR	1189499	Identifier	a		1189487	0					
ANR	1189500	Identifier	tag		1189487	1					
ANR	1189501	Argument	"""pointer|char"""		1189487	1					
ANR	1189502	PrimaryExpression	"""pointer|char"""		1189487	0					
ANR	1189503	PrimaryExpression	0		1189487	1					
ANR	1189504	AndExpression	"a -> contents && strcmp ( a -> contents , ""*"" ) == 0"		1189487	1		&&			
ANR	1189505	PtrMemberAccess	a -> contents		1189487	0					
ANR	1189506	Identifier	a		1189487	0					
ANR	1189507	Identifier	contents		1189487	1					
ANR	1189508	EqualityExpression	"strcmp ( a -> contents , ""*"" ) == 0"		1189487	1		==			
ANR	1189509	CallExpression	"strcmp ( a -> contents , ""*"" )"		1189487	0					
ANR	1189510	Callee	strcmp		1189487	0					
ANR	1189511	Identifier	strcmp		1189487	0					
ANR	1189512	ArgumentList	a -> contents		1189487	1					
ANR	1189513	Argument	a -> contents		1189487	0					
ANR	1189514	PtrMemberAccess	a -> contents		1189487	0					
ANR	1189515	Identifier	a		1189487	0					
ANR	1189516	Identifier	contents		1189487	1					
ANR	1189517	Argument	"""*"""		1189487	1					
ANR	1189518	PrimaryExpression	"""*"""		1189487	0					
ANR	1189519	PrimaryExpression	0		1189487	1					
ANR	1189520	ReturnType	static bool		1189487	1					
ANR	1189521	Identifier	is_non_const_pointer		1189487	2					
ANR	1189522	ParameterList	mpc_ast_t * a		1189487	3					
ANR	1189523	Parameter	mpc_ast_t * a	80:33:2068:2079	1189487	0	True				
ANR	1189524	ParameterType	mpc_ast_t *		1189487	0					
ANR	1189525	Identifier	a		1189487	1					
ANR	1189526	CFGEntryNode	ENTRY		1189487		True				
ANR	1189527	CFGExitNode	EXIT		1189487		True				
ANR	1189528	Symbol	strcmp		1189487						
ANR	1189529	Symbol	a		1189487						
ANR	1189530	Symbol	a -> tag		1189487						
ANR	1189531	Symbol	* a		1189487						
ANR	1189532	Symbol	a -> contents		1189487						
ANR	1189533	Function	is_const_pointer	86:0:2186:2467							
ANR	1189534	FunctionDef	is_const_pointer (mpc_ast_t * a)		1189533	0					
ANR	1189535	CompoundStatement		86:43:2229:2467	1189533	0					
ANR	1189536	ReturnStatement	"return strcmp ( a -> tag , ""pointer|>"" ) == 0 && a -> children_num == 2 && is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0 ;"	87:1:2232:2465	1189533	0	True				
ANR	1189537	AndExpression	"strcmp ( a -> tag , ""pointer|>"" ) == 0 && a -> children_num == 2 && is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		1189533	0		&&			
ANR	1189538	EqualityExpression	"strcmp ( a -> tag , ""pointer|>"" ) == 0"		1189533	0		==			
ANR	1189539	CallExpression	"strcmp ( a -> tag , ""pointer|>"" )"		1189533	0					
ANR	1189540	Callee	strcmp		1189533	0					
ANR	1189541	Identifier	strcmp		1189533	0					
ANR	1189542	ArgumentList	a -> tag		1189533	1					
ANR	1189543	Argument	a -> tag		1189533	0					
ANR	1189544	PtrMemberAccess	a -> tag		1189533	0					
ANR	1189545	Identifier	a		1189533	0					
ANR	1189546	Identifier	tag		1189533	1					
ANR	1189547	Argument	"""pointer|>"""		1189533	1					
ANR	1189548	PrimaryExpression	"""pointer|>"""		1189533	0					
ANR	1189549	PrimaryExpression	0		1189533	1					
ANR	1189550	AndExpression	"a -> children_num == 2 && is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		1189533	1		&&			
ANR	1189551	EqualityExpression	a -> children_num == 2		1189533	0		==			
ANR	1189552	PtrMemberAccess	a -> children_num		1189533	0					
ANR	1189553	Identifier	a		1189533	0					
ANR	1189554	Identifier	children_num		1189533	1					
ANR	1189555	PrimaryExpression	2		1189533	1					
ANR	1189556	AndExpression	"is_qualifier_const ( a -> children [ 0 ] ) && strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		1189533	1		&&			
ANR	1189557	CallExpression	is_qualifier_const ( a -> children [ 0 ] )		1189533	0					
ANR	1189558	Callee	is_qualifier_const		1189533	0					
ANR	1189559	Identifier	is_qualifier_const		1189533	0					
ANR	1189560	ArgumentList	a -> children [ 0 ]		1189533	1					
ANR	1189561	Argument	a -> children [ 0 ]		1189533	0					
ANR	1189562	ArrayIndexing	a -> children [ 0 ]		1189533	0					
ANR	1189563	PtrMemberAccess	a -> children		1189533	0					
ANR	1189564	Identifier	a		1189533	0					
ANR	1189565	Identifier	children		1189533	1					
ANR	1189566	PrimaryExpression	0		1189533	1					
ANR	1189567	AndExpression	"strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		1189533	1		&&			
ANR	1189568	EqualityExpression	"strcmp ( a -> children [ 1 ] -> tag , ""char"" ) == 0"		1189533	0		==			
ANR	1189569	CallExpression	"strcmp ( a -> children [ 1 ] -> tag , ""char"" )"		1189533	0					
ANR	1189570	Callee	strcmp		1189533	0					
ANR	1189571	Identifier	strcmp		1189533	0					
ANR	1189572	ArgumentList	a -> children [ 1 ] -> tag		1189533	1					
ANR	1189573	Argument	a -> children [ 1 ] -> tag		1189533	0					
ANR	1189574	PtrMemberAccess	a -> children [ 1 ] -> tag		1189533	0					
ANR	1189575	ArrayIndexing	a -> children [ 1 ]		1189533	0					
ANR	1189576	PtrMemberAccess	a -> children		1189533	0					
ANR	1189577	Identifier	a		1189533	0					
ANR	1189578	Identifier	children		1189533	1					
ANR	1189579	PrimaryExpression	1		1189533	1					
ANR	1189580	Identifier	tag		1189533	1					
ANR	1189581	Argument	"""char"""		1189533	1					
ANR	1189582	PrimaryExpression	"""char"""		1189533	0					
ANR	1189583	PrimaryExpression	0		1189533	1					
ANR	1189584	AndExpression	"a -> children [ 1 ] -> contents && strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		1189533	1		&&			
ANR	1189585	PtrMemberAccess	a -> children [ 1 ] -> contents		1189533	0					
ANR	1189586	ArrayIndexing	a -> children [ 1 ]		1189533	0					
ANR	1189587	PtrMemberAccess	a -> children		1189533	0					
ANR	1189588	Identifier	a		1189533	0					
ANR	1189589	Identifier	children		1189533	1					
ANR	1189590	PrimaryExpression	1		1189533	1					
ANR	1189591	Identifier	contents		1189533	1					
ANR	1189592	EqualityExpression	"strcmp ( a -> children [ 1 ] -> contents , ""*"" ) == 0"		1189533	1		==			
ANR	1189593	CallExpression	"strcmp ( a -> children [ 1 ] -> contents , ""*"" )"		1189533	0					
ANR	1189594	Callee	strcmp		1189533	0					
ANR	1189595	Identifier	strcmp		1189533	0					
ANR	1189596	ArgumentList	a -> children [ 1 ] -> contents		1189533	1					
ANR	1189597	Argument	a -> children [ 1 ] -> contents		1189533	0					
ANR	1189598	PtrMemberAccess	a -> children [ 1 ] -> contents		1189533	0					
ANR	1189599	ArrayIndexing	a -> children [ 1 ]		1189533	0					
ANR	1189600	PtrMemberAccess	a -> children		1189533	0					
ANR	1189601	Identifier	a		1189533	0					
ANR	1189602	Identifier	children		1189533	1					
ANR	1189603	PrimaryExpression	1		1189533	1					
ANR	1189604	Identifier	contents		1189533	1					
ANR	1189605	Argument	"""*"""		1189533	1					
ANR	1189606	PrimaryExpression	"""*"""		1189533	0					
ANR	1189607	PrimaryExpression	0		1189533	1					
ANR	1189608	ReturnType	static bool		1189533	1					
ANR	1189609	Identifier	is_const_pointer		1189533	2					
ANR	1189610	ParameterList	mpc_ast_t * a		1189533	3					
ANR	1189611	Parameter	mpc_ast_t * a	86:29:2215:2226	1189533	0	True				
ANR	1189612	ParameterType	mpc_ast_t *		1189533	0					
ANR	1189613	Identifier	a		1189533	1					
ANR	1189614	CFGEntryNode	ENTRY		1189533		True				
ANR	1189615	CFGExitNode	EXIT		1189533		True				
ANR	1189616	Symbol	* * * a		1189533						
ANR	1189617	Symbol	a -> children		1189533						
ANR	1189618	Symbol	strcmp		1189533						
ANR	1189619	Symbol	a		1189533						
ANR	1189620	Symbol	* * a -> children		1189533						
ANR	1189621	Symbol	a -> children [ 1 ] -> tag		1189533						
ANR	1189622	Symbol	* * a		1189533						
ANR	1189623	Symbol	* a		1189533						
ANR	1189624	Symbol	is_qualifier_const		1189533						
ANR	1189625	Symbol	a -> children [ 1 ] -> contents		1189533						
ANR	1189626	Symbol	a -> tag		1189533						
ANR	1189627	Symbol	a -> children_num		1189533						
ANR	1189628	Symbol	* a -> children		1189533						
ANR	1189629	Function	is_array	95:0:2470:2915							
ANR	1189630	FunctionDef	is_array (mpc_ast_t * a)		1189629	0					
ANR	1189631	CompoundStatement		95:35:2505:2915	1189629	0					
ANR	1189632	ReturnStatement	"return strcmp ( a -> tag , ""array|>"" ) == 0 && a -> children_num == 3 && strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0 ;"	96:1:2508:2913	1189629	0	True				
ANR	1189633	AndExpression	"strcmp ( a -> tag , ""array|>"" ) == 0 && a -> children_num == 3 && strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	0		&&			
ANR	1189634	EqualityExpression	"strcmp ( a -> tag , ""array|>"" ) == 0"		1189629	0		==			
ANR	1189635	CallExpression	"strcmp ( a -> tag , ""array|>"" )"		1189629	0					
ANR	1189636	Callee	strcmp		1189629	0					
ANR	1189637	Identifier	strcmp		1189629	0					
ANR	1189638	ArgumentList	a -> tag		1189629	1					
ANR	1189639	Argument	a -> tag		1189629	0					
ANR	1189640	PtrMemberAccess	a -> tag		1189629	0					
ANR	1189641	Identifier	a		1189629	0					
ANR	1189642	Identifier	tag		1189629	1					
ANR	1189643	Argument	"""array|>"""		1189629	1					
ANR	1189644	PrimaryExpression	"""array|>"""		1189629	0					
ANR	1189645	PrimaryExpression	0		1189629	1					
ANR	1189646	AndExpression	"a -> children_num == 3 && strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189647	EqualityExpression	a -> children_num == 3		1189629	0		==			
ANR	1189648	PtrMemberAccess	a -> children_num		1189629	0					
ANR	1189649	Identifier	a		1189629	0					
ANR	1189650	Identifier	children_num		1189629	1					
ANR	1189651	PrimaryExpression	3		1189629	1					
ANR	1189652	AndExpression	"strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0 && a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189653	EqualityExpression	"strcmp ( a -> children [ 0 ] -> tag , ""char"" ) == 0"		1189629	0		==			
ANR	1189654	CallExpression	"strcmp ( a -> children [ 0 ] -> tag , ""char"" )"		1189629	0					
ANR	1189655	Callee	strcmp		1189629	0					
ANR	1189656	Identifier	strcmp		1189629	0					
ANR	1189657	ArgumentList	a -> children [ 0 ] -> tag		1189629	1					
ANR	1189658	Argument	a -> children [ 0 ] -> tag		1189629	0					
ANR	1189659	PtrMemberAccess	a -> children [ 0 ] -> tag		1189629	0					
ANR	1189660	ArrayIndexing	a -> children [ 0 ]		1189629	0					
ANR	1189661	PtrMemberAccess	a -> children		1189629	0					
ANR	1189662	Identifier	a		1189629	0					
ANR	1189663	Identifier	children		1189629	1					
ANR	1189664	PrimaryExpression	0		1189629	1					
ANR	1189665	Identifier	tag		1189629	1					
ANR	1189666	Argument	"""char"""		1189629	1					
ANR	1189667	PrimaryExpression	"""char"""		1189629	0					
ANR	1189668	PrimaryExpression	0		1189629	1					
ANR	1189669	AndExpression	"a -> children [ 0 ] -> contents && strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189670	PtrMemberAccess	a -> children [ 0 ] -> contents		1189629	0					
ANR	1189671	ArrayIndexing	a -> children [ 0 ]		1189629	0					
ANR	1189672	PtrMemberAccess	a -> children		1189629	0					
ANR	1189673	Identifier	a		1189629	0					
ANR	1189674	Identifier	children		1189629	1					
ANR	1189675	PrimaryExpression	0		1189629	1					
ANR	1189676	Identifier	contents		1189629	1					
ANR	1189677	AndExpression	"strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0 && strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189678	EqualityExpression	"strcmp ( a -> children [ 0 ] -> contents , ""["" ) == 0"		1189629	0		==			
ANR	1189679	CallExpression	"strcmp ( a -> children [ 0 ] -> contents , ""["" )"		1189629	0					
ANR	1189680	Callee	strcmp		1189629	0					
ANR	1189681	Identifier	strcmp		1189629	0					
ANR	1189682	ArgumentList	a -> children [ 0 ] -> contents		1189629	1					
ANR	1189683	Argument	a -> children [ 0 ] -> contents		1189629	0					
ANR	1189684	PtrMemberAccess	a -> children [ 0 ] -> contents		1189629	0					
ANR	1189685	ArrayIndexing	a -> children [ 0 ]		1189629	0					
ANR	1189686	PtrMemberAccess	a -> children		1189629	0					
ANR	1189687	Identifier	a		1189629	0					
ANR	1189688	Identifier	children		1189629	1					
ANR	1189689	PrimaryExpression	0		1189629	1					
ANR	1189690	Identifier	contents		1189629	1					
ANR	1189691	Argument	"""["""		1189629	1					
ANR	1189692	PrimaryExpression	"""["""		1189629	0					
ANR	1189693	PrimaryExpression	0		1189629	1					
ANR	1189694	AndExpression	"strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0 && a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189695	EqualityExpression	"strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" ) == 0"		1189629	0		==			
ANR	1189696	CallExpression	"strcmp ( a -> children [ 1 ] -> tag , ""integerlit|regex"" )"		1189629	0					
ANR	1189697	Callee	strcmp		1189629	0					
ANR	1189698	Identifier	strcmp		1189629	0					
ANR	1189699	ArgumentList	a -> children [ 1 ] -> tag		1189629	1					
ANR	1189700	Argument	a -> children [ 1 ] -> tag		1189629	0					
ANR	1189701	PtrMemberAccess	a -> children [ 1 ] -> tag		1189629	0					
ANR	1189702	ArrayIndexing	a -> children [ 1 ]		1189629	0					
ANR	1189703	PtrMemberAccess	a -> children		1189629	0					
ANR	1189704	Identifier	a		1189629	0					
ANR	1189705	Identifier	children		1189629	1					
ANR	1189706	PrimaryExpression	1		1189629	1					
ANR	1189707	Identifier	tag		1189629	1					
ANR	1189708	Argument	"""integerlit|regex"""		1189629	1					
ANR	1189709	PrimaryExpression	"""integerlit|regex"""		1189629	0					
ANR	1189710	PrimaryExpression	0		1189629	1					
ANR	1189711	AndExpression	"a -> children [ 1 ] -> contents && strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189712	PtrMemberAccess	a -> children [ 1 ] -> contents		1189629	0					
ANR	1189713	ArrayIndexing	a -> children [ 1 ]		1189629	0					
ANR	1189714	PtrMemberAccess	a -> children		1189629	0					
ANR	1189715	Identifier	a		1189629	0					
ANR	1189716	Identifier	children		1189629	1					
ANR	1189717	PrimaryExpression	1		1189629	1					
ANR	1189718	Identifier	contents		1189629	1					
ANR	1189719	AndExpression	"strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0 && a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189720	EqualityExpression	"strcmp ( a -> children [ 2 ] -> tag , ""char"" ) == 0"		1189629	0		==			
ANR	1189721	CallExpression	"strcmp ( a -> children [ 2 ] -> tag , ""char"" )"		1189629	0					
ANR	1189722	Callee	strcmp		1189629	0					
ANR	1189723	Identifier	strcmp		1189629	0					
ANR	1189724	ArgumentList	a -> children [ 2 ] -> tag		1189629	1					
ANR	1189725	Argument	a -> children [ 2 ] -> tag		1189629	0					
ANR	1189726	PtrMemberAccess	a -> children [ 2 ] -> tag		1189629	0					
ANR	1189727	ArrayIndexing	a -> children [ 2 ]		1189629	0					
ANR	1189728	PtrMemberAccess	a -> children		1189629	0					
ANR	1189729	Identifier	a		1189629	0					
ANR	1189730	Identifier	children		1189629	1					
ANR	1189731	PrimaryExpression	2		1189629	1					
ANR	1189732	Identifier	tag		1189629	1					
ANR	1189733	Argument	"""char"""		1189629	1					
ANR	1189734	PrimaryExpression	"""char"""		1189629	0					
ANR	1189735	PrimaryExpression	0		1189629	1					
ANR	1189736	AndExpression	"a -> children [ 2 ] -> contents && strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		&&			
ANR	1189737	PtrMemberAccess	a -> children [ 2 ] -> contents		1189629	0					
ANR	1189738	ArrayIndexing	a -> children [ 2 ]		1189629	0					
ANR	1189739	PtrMemberAccess	a -> children		1189629	0					
ANR	1189740	Identifier	a		1189629	0					
ANR	1189741	Identifier	children		1189629	1					
ANR	1189742	PrimaryExpression	2		1189629	1					
ANR	1189743	Identifier	contents		1189629	1					
ANR	1189744	EqualityExpression	"strcmp ( a -> children [ 2 ] -> contents , ""]"" ) == 0"		1189629	1		==			
ANR	1189745	CallExpression	"strcmp ( a -> children [ 2 ] -> contents , ""]"" )"		1189629	0					
ANR	1189746	Callee	strcmp		1189629	0					
ANR	1189747	Identifier	strcmp		1189629	0					
ANR	1189748	ArgumentList	a -> children [ 2 ] -> contents		1189629	1					
ANR	1189749	Argument	a -> children [ 2 ] -> contents		1189629	0					
ANR	1189750	PtrMemberAccess	a -> children [ 2 ] -> contents		1189629	0					
ANR	1189751	ArrayIndexing	a -> children [ 2 ]		1189629	0					
ANR	1189752	PtrMemberAccess	a -> children		1189629	0					
ANR	1189753	Identifier	a		1189629	0					
ANR	1189754	Identifier	children		1189629	1					
ANR	1189755	PrimaryExpression	2		1189629	1					
ANR	1189756	Identifier	contents		1189629	1					
ANR	1189757	Argument	"""]"""		1189629	1					
ANR	1189758	PrimaryExpression	"""]"""		1189629	0					
ANR	1189759	PrimaryExpression	0		1189629	1					
ANR	1189760	ReturnType	static bool		1189629	1					
ANR	1189761	Identifier	is_array		1189629	2					
ANR	1189762	ParameterList	mpc_ast_t * a		1189629	3					
ANR	1189763	Parameter	mpc_ast_t * a	95:21:2491:2502	1189629	0	True				
ANR	1189764	ParameterType	mpc_ast_t *		1189629	0					
ANR	1189765	Identifier	a		1189629	1					
ANR	1189766	CFGEntryNode	ENTRY		1189629		True				
ANR	1189767	CFGExitNode	EXIT		1189629		True				
ANR	1189768	Symbol	a -> children		1189629						
ANR	1189769	Symbol	* * * a		1189629						
ANR	1189770	Symbol	strcmp		1189629						
ANR	1189771	Symbol	a		1189629						
ANR	1189772	Symbol	* * a -> children		1189629						
ANR	1189773	Symbol	a -> children [ 1 ] -> tag		1189629						
ANR	1189774	Symbol	* * a		1189629						
ANR	1189775	Symbol	* a		1189629						
ANR	1189776	Symbol	a -> children [ 2 ] -> tag		1189629						
ANR	1189777	Symbol	a -> children [ 2 ] -> contents		1189629						
ANR	1189778	Symbol	a -> children [ 1 ] -> contents		1189629						
ANR	1189779	Symbol	a -> tag		1189629						
ANR	1189780	Symbol	a -> children [ 0 ] -> tag		1189629						
ANR	1189781	Symbol	a -> children [ 0 ] -> contents		1189629						
ANR	1189782	Symbol	a -> children_num		1189629						
ANR	1189783	Symbol	* a -> children		1189629						
ANR	1189784	Function	ctype_convert_ast	108:0:2918:5825							
ANR	1189785	FunctionDef	ctype_convert_ast (mpc_ast_t * a)		1189784	0					
ANR	1189786	CompoundStatement		108:56:2974:5825	1189784	0					
ANR	1189787	IdentifierDeclStatement	bool is_const = false ;	109:1:2977:2998	1189784	0	True				
ANR	1189788	IdentifierDecl	is_const = false		1189784	0					
ANR	1189789	IdentifierDeclType	bool		1189784	0					
ANR	1189790	Identifier	is_const		1189784	1					
ANR	1189791	AssignmentExpression	is_const = false		1189784	2		=			
ANR	1189792	Identifier	false		1189784	0					
ANR	1189793	Identifier	false		1189784	1					
ANR	1189794	IdentifierDeclStatement	RParseCTypeType * cur = NULL ;	110:1:3001:3028	1189784	1	True				
ANR	1189795	IdentifierDecl	* cur = NULL		1189784	0					
ANR	1189796	IdentifierDeclType	RParseCTypeType *		1189784	0					
ANR	1189797	Identifier	cur		1189784	1					
ANR	1189798	AssignmentExpression	* cur = NULL		1189784	2		=			
ANR	1189799	Identifier	NULL		1189784	0					
ANR	1189800	Identifier	NULL		1189784	1					
ANR	1189801	IdentifierDeclStatement	int i ;	111:1:3031:3036	1189784	2	True				
ANR	1189802	IdentifierDecl	i		1189784	0					
ANR	1189803	IdentifierDeclType	int		1189784	0					
ANR	1189804	Identifier	i		1189784	1					
ANR	1189805	ForStatement	for ( i = 0 ; i < a -> children_num ; i ++ )		1189784	3					
ANR	1189806	ForInit	i = 0 ;	112:6:3044:3049	1189784	0	True				
ANR	1189807	AssignmentExpression	i = 0		1189784	0		=			
ANR	1189808	Identifier	i		1189784	0					
ANR	1189809	PrimaryExpression	0		1189784	1					
ANR	1189810	Condition	i < a -> children_num	112:13:3051:3069	1189784	1	True				
ANR	1189811	RelationalExpression	i < a -> children_num		1189784	0		<			
ANR	1189812	Identifier	i		1189784	0					
ANR	1189813	PtrMemberAccess	a -> children_num		1189784	1					
ANR	1189814	Identifier	a		1189784	0					
ANR	1189815	Identifier	children_num		1189784	1					
ANR	1189816	PostIncDecOperationExpression	i ++	112:34:3072:3074	1189784	2	True				
ANR	1189817	Identifier	i		1189784	0					
ANR	1189818	IncDec	++		1189784	1					
ANR	1189819	CompoundStatement		6:2:106:139	1189784	3					
ANR	1189820	IdentifierDeclStatement	mpc_ast_t * child = a -> children [ i ] ;	113:2:3081:3114	1189784	0	True				
ANR	1189821	IdentifierDecl	* child = a -> children [ i ]		1189784	0					
ANR	1189822	IdentifierDeclType	mpc_ast_t *		1189784	0					
ANR	1189823	Identifier	child		1189784	1					
ANR	1189824	AssignmentExpression	* child = a -> children [ i ]		1189784	2		=			
ANR	1189825	Identifier	child		1189784	0					
ANR	1189826	ArrayIndexing	a -> children [ i ]		1189784	1					
ANR	1189827	PtrMemberAccess	a -> children		1189784	0					
ANR	1189828	Identifier	a		1189784	0					
ANR	1189829	Identifier	children		1189784	1					
ANR	1189830	Identifier	i		1189784	1					
ANR	1189831	IfStatement	if ( is_qualifier_const ( child ) )		1189784	1					
ANR	1189832	Condition	is_qualifier_const ( child )	116:6:3134:3159	1189784	0	True				
ANR	1189833	CallExpression	is_qualifier_const ( child )		1189784	0					
ANR	1189834	Callee	is_qualifier_const		1189784	0					
ANR	1189835	Identifier	is_qualifier_const		1189784	0					
ANR	1189836	ArgumentList	child		1189784	1					
ANR	1189837	Argument	child		1189784	0					
ANR	1189838	Identifier	child		1189784	0					
ANR	1189839	CompoundStatement		9:34:187:187	1189784	1					
ANR	1189840	ExpressionStatement	is_const = true	117:3:3167:3182	1189784	0	True				
ANR	1189841	AssignmentExpression	is_const = true		1189784	0		=			
ANR	1189842	Identifier	is_const		1189784	0					
ANR	1189843	Identifier	true		1189784	1					
ANR	1189844	ElseStatement	else		1189784	0					
ANR	1189845	IfStatement	"if ( r_str_startswith ( child -> tag , ""identifier|"" ) )"		1189784	0					
ANR	1189846	Condition	"r_str_startswith ( child -> tag , ""identifier|"" )"	121:11:3239:3282	1189784	0	True				
ANR	1189847	CallExpression	"r_str_startswith ( child -> tag , ""identifier|"" )"		1189784	0					
ANR	1189848	Callee	r_str_startswith		1189784	0					
ANR	1189849	Identifier	r_str_startswith		1189784	0					
ANR	1189850	ArgumentList	child -> tag		1189784	1					
ANR	1189851	Argument	child -> tag		1189784	0					
ANR	1189852	PtrMemberAccess	child -> tag		1189784	0					
ANR	1189853	Identifier	child		1189784	0					
ANR	1189854	Identifier	tag		1189784	1					
ANR	1189855	Argument	"""identifier|"""		1189784	1					
ANR	1189856	PrimaryExpression	"""identifier|"""		1189784	0					
ANR	1189857	CompoundStatement		14:57:310:310	1189784	1					
ANR	1189858	IfStatement	if ( cur )		1189784	0					
ANR	1189859	Condition	cur	122:7:3294:3296	1189784	0	True				
ANR	1189860	Identifier	cur		1189784	0					
ANR	1189861	CompoundStatement		15:12:324:324	1189784	1					
ANR	1189862	GotoStatement	goto beach ;	124:4:3359:3369	1189784	0	True				
ANR	1189863	Identifier	beach		1189784	0					
ANR	1189864	ExpressionStatement	cur = R_NEW0 ( RParseCTypeType )	126:3:3379:3409	1189784	1	True				
ANR	1189865	AssignmentExpression	cur = R_NEW0 ( RParseCTypeType )		1189784	0		=			
ANR	1189866	Identifier	cur		1189784	0					
ANR	1189867	CallExpression	R_NEW0 ( RParseCTypeType )		1189784	1					
ANR	1189868	Callee	R_NEW0		1189784	0					
ANR	1189869	Identifier	R_NEW0		1189784	0					
ANR	1189870	ArgumentList	RParseCTypeType		1189784	1					
ANR	1189871	Argument	RParseCTypeType		1189784	0					
ANR	1189872	Identifier	RParseCTypeType		1189784	0					
ANR	1189873	IfStatement	if ( ! cur )		1189784	2					
ANR	1189874	Condition	! cur	127:7:3418:3421	1189784	0	True				
ANR	1189875	UnaryOperationExpression	! cur		1189784	0					
ANR	1189876	UnaryOperator	!		1189784	0					
ANR	1189877	Identifier	cur		1189784	1					
ANR	1189878	CompoundStatement		20:13:449:449	1189784	1					
ANR	1189879	GotoStatement	goto beach ;	128:4:3430:3440	1189784	0	True				
ANR	1189880	Identifier	beach		1189784	0					
ANR	1189881	ExpressionStatement	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER	130:3:3450:3496	1189784	3	True				
ANR	1189882	AssignmentExpression	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		1189784	0		=			
ANR	1189883	PtrMemberAccess	cur -> kind		1189784	0					
ANR	1189884	Identifier	cur		1189784	0					
ANR	1189885	Identifier	kind		1189784	1					
ANR	1189886	Identifier	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		1189784	1					
ANR	1189887	ExpressionStatement	cur -> identifier . is_const = is_const	131:3:3501:3536	1189784	4	True				
ANR	1189888	AssignmentExpression	cur -> identifier . is_const = is_const		1189784	0		=			
ANR	1189889	MemberAccess	cur -> identifier . is_const		1189784	0					
ANR	1189890	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1189891	Identifier	cur		1189784	0					
ANR	1189892	Identifier	identifier		1189784	1					
ANR	1189893	Identifier	is_const		1189784	1					
ANR	1189894	Identifier	is_const		1189784	1					
ANR	1189895	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED	132:3:3541:3605	1189784	5	True				
ANR	1189896	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		1189784	0		=			
ANR	1189897	MemberAccess	cur -> identifier . kind		1189784	0					
ANR	1189898	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1189899	Identifier	cur		1189784	0					
ANR	1189900	Identifier	identifier		1189784	1					
ANR	1189901	Identifier	kind		1189784	1					
ANR	1189902	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		1189784	1					
ANR	1189903	IfStatement	if ( is_identifier_string ( child ) )		1189784	6					
ANR	1189904	Condition	is_identifier_string ( child )	133:7:3614:3641	1189784	0	True				
ANR	1189905	CallExpression	is_identifier_string ( child )		1189784	0					
ANR	1189906	Callee	is_identifier_string		1189784	0					
ANR	1189907	Identifier	is_identifier_string		1189784	0					
ANR	1189908	ArgumentList	child		1189784	1					
ANR	1189909	Argument	child		1189784	0					
ANR	1189910	Identifier	child		1189784	0					
ANR	1189911	CompoundStatement		26:37:669:669	1189784	1					
ANR	1189912	ExpressionStatement	cur -> identifier . name = strdup ( child -> contents )	134:4:3650:3697	1189784	0	True				
ANR	1189913	AssignmentExpression	cur -> identifier . name = strdup ( child -> contents )		1189784	0		=			
ANR	1189914	MemberAccess	cur -> identifier . name		1189784	0					
ANR	1189915	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1189916	Identifier	cur		1189784	0					
ANR	1189917	Identifier	identifier		1189784	1					
ANR	1189918	Identifier	name		1189784	1					
ANR	1189919	CallExpression	strdup ( child -> contents )		1189784	1					
ANR	1189920	Callee	strdup		1189784	0					
ANR	1189921	Identifier	strdup		1189784	0					
ANR	1189922	ArgumentList	child -> contents		1189784	1					
ANR	1189923	Argument	child -> contents		1189784	0					
ANR	1189924	PtrMemberAccess	child -> contents		1189784	0					
ANR	1189925	Identifier	child		1189784	0					
ANR	1189926	Identifier	contents		1189784	1					
ANR	1189927	ElseStatement	else		1189784	0					
ANR	1189928	IfStatement	if ( is_identifier_kind ( child ) )		1189784	0					
ANR	1189929	Condition	is_identifier_kind ( child )	135:14:3713:3738	1189784	0	True				
ANR	1189930	CallExpression	is_identifier_kind ( child )		1189784	0					
ANR	1189931	Callee	is_identifier_kind		1189784	0					
ANR	1189932	Identifier	is_identifier_kind		1189784	0					
ANR	1189933	ArgumentList	child		1189784	1					
ANR	1189934	Argument	child		1189784	0					
ANR	1189935	Identifier	child		1189784	0					
ANR	1189936	CompoundStatement		28:42:766:766	1189784	1					
ANR	1189937	IfStatement	"if ( strcmp ( child -> children [ 0 ] -> contents , ""struct"" ) == 0 )"		1189784	0					
ANR	1189938	Condition	"strcmp ( child -> children [ 0 ] -> contents , ""struct"" ) == 0"	136:8:3751:3802	1189784	0	True				
ANR	1189939	EqualityExpression	"strcmp ( child -> children [ 0 ] -> contents , ""struct"" ) == 0"		1189784	0		==			
ANR	1189940	CallExpression	"strcmp ( child -> children [ 0 ] -> contents , ""struct"" )"		1189784	0					
ANR	1189941	Callee	strcmp		1189784	0					
ANR	1189942	Identifier	strcmp		1189784	0					
ANR	1189943	ArgumentList	child -> children [ 0 ] -> contents		1189784	1					
ANR	1189944	Argument	child -> children [ 0 ] -> contents		1189784	0					
ANR	1189945	PtrMemberAccess	child -> children [ 0 ] -> contents		1189784	0					
ANR	1189946	ArrayIndexing	child -> children [ 0 ]		1189784	0					
ANR	1189947	PtrMemberAccess	child -> children		1189784	0					
ANR	1189948	Identifier	child		1189784	0					
ANR	1189949	Identifier	children		1189784	1					
ANR	1189950	PrimaryExpression	0		1189784	1					
ANR	1189951	Identifier	contents		1189784	1					
ANR	1189952	Argument	"""struct"""		1189784	1					
ANR	1189953	PrimaryExpression	"""struct"""		1189784	0					
ANR	1189954	PrimaryExpression	0		1189784	1					
ANR	1189955	CompoundStatement		29:62:830:830	1189784	1					
ANR	1189956	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT	137:5:3812:3871	1189784	0	True				
ANR	1189957	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT		1189784	0		=			
ANR	1189958	MemberAccess	cur -> identifier . kind		1189784	0					
ANR	1189959	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1189960	Identifier	cur		1189784	0					
ANR	1189961	Identifier	identifier		1189784	1					
ANR	1189962	Identifier	kind		1189784	1					
ANR	1189963	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT		1189784	1					
ANR	1189964	ElseStatement	else		1189784	0					
ANR	1189965	IfStatement	"if ( strcmp ( child -> children [ 0 ] -> contents , ""union"" ) == 0 )"		1189784	0					
ANR	1189966	Condition	"strcmp ( child -> children [ 0 ] -> contents , ""union"" ) == 0"	138:15:3888:3938	1189784	0	True				
ANR	1189967	EqualityExpression	"strcmp ( child -> children [ 0 ] -> contents , ""union"" ) == 0"		1189784	0		==			
ANR	1189968	CallExpression	"strcmp ( child -> children [ 0 ] -> contents , ""union"" )"		1189784	0					
ANR	1189969	Callee	strcmp		1189784	0					
ANR	1189970	Identifier	strcmp		1189784	0					
ANR	1189971	ArgumentList	child -> children [ 0 ] -> contents		1189784	1					
ANR	1189972	Argument	child -> children [ 0 ] -> contents		1189784	0					
ANR	1189973	PtrMemberAccess	child -> children [ 0 ] -> contents		1189784	0					
ANR	1189974	ArrayIndexing	child -> children [ 0 ]		1189784	0					
ANR	1189975	PtrMemberAccess	child -> children		1189784	0					
ANR	1189976	Identifier	child		1189784	0					
ANR	1189977	Identifier	children		1189784	1					
ANR	1189978	PrimaryExpression	0		1189784	1					
ANR	1189979	Identifier	contents		1189784	1					
ANR	1189980	Argument	"""union"""		1189784	1					
ANR	1189981	PrimaryExpression	"""union"""		1189784	0					
ANR	1189982	PrimaryExpression	0		1189784	1					
ANR	1189983	CompoundStatement		31:68:966:966	1189784	1					
ANR	1189984	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNION	139:5:3948:4006	1189784	0	True				
ANR	1189985	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNION		1189784	0		=			
ANR	1189986	MemberAccess	cur -> identifier . kind		1189784	0					
ANR	1189987	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1189988	Identifier	cur		1189784	0					
ANR	1189989	Identifier	identifier		1189784	1					
ANR	1189990	Identifier	kind		1189784	1					
ANR	1189991	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_UNION		1189784	1					
ANR	1189992	ElseStatement	else		1189784	0					
ANR	1189993	IfStatement	"if ( strcmp ( child -> children [ 0 ] -> contents , ""enum"" ) == 0 )"		1189784	0					
ANR	1189994	Condition	"strcmp ( child -> children [ 0 ] -> contents , ""enum"" ) == 0"	140:15:4023:4072	1189784	0	True				
ANR	1189995	EqualityExpression	"strcmp ( child -> children [ 0 ] -> contents , ""enum"" ) == 0"		1189784	0		==			
ANR	1189996	CallExpression	"strcmp ( child -> children [ 0 ] -> contents , ""enum"" )"		1189784	0					
ANR	1189997	Callee	strcmp		1189784	0					
ANR	1189998	Identifier	strcmp		1189784	0					
ANR	1189999	ArgumentList	child -> children [ 0 ] -> contents		1189784	1					
ANR	1190000	Argument	child -> children [ 0 ] -> contents		1189784	0					
ANR	1190001	PtrMemberAccess	child -> children [ 0 ] -> contents		1189784	0					
ANR	1190002	ArrayIndexing	child -> children [ 0 ]		1189784	0					
ANR	1190003	PtrMemberAccess	child -> children		1189784	0					
ANR	1190004	Identifier	child		1189784	0					
ANR	1190005	Identifier	children		1189784	1					
ANR	1190006	PrimaryExpression	0		1189784	1					
ANR	1190007	Identifier	contents		1189784	1					
ANR	1190008	Argument	"""enum"""		1189784	1					
ANR	1190009	PrimaryExpression	"""enum"""		1189784	0					
ANR	1190010	PrimaryExpression	0		1189784	1					
ANR	1190011	CompoundStatement		33:67:1100:1100	1189784	1					
ANR	1190012	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM	141:5:4082:4139	1189784	0	True				
ANR	1190013	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM		1189784	0		=			
ANR	1190014	MemberAccess	cur -> identifier . kind		1189784	0					
ANR	1190015	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190016	Identifier	cur		1189784	0					
ANR	1190017	Identifier	identifier		1189784	1					
ANR	1190018	Identifier	kind		1189784	1					
ANR	1190019	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM		1189784	1					
ANR	1190020	ExpressionStatement	cur -> identifier . name = strdup ( child -> children [ 1 ] -> contents )	143:4:4151:4211	1189784	1	True				
ANR	1190021	AssignmentExpression	cur -> identifier . name = strdup ( child -> children [ 1 ] -> contents )		1189784	0		=			
ANR	1190022	MemberAccess	cur -> identifier . name		1189784	0					
ANR	1190023	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190024	Identifier	cur		1189784	0					
ANR	1190025	Identifier	identifier		1189784	1					
ANR	1190026	Identifier	name		1189784	1					
ANR	1190027	CallExpression	strdup ( child -> children [ 1 ] -> contents )		1189784	1					
ANR	1190028	Callee	strdup		1189784	0					
ANR	1190029	Identifier	strdup		1189784	0					
ANR	1190030	ArgumentList	child -> children [ 1 ] -> contents		1189784	1					
ANR	1190031	Argument	child -> children [ 1 ] -> contents		1189784	0					
ANR	1190032	PtrMemberAccess	child -> children [ 1 ] -> contents		1189784	0					
ANR	1190033	ArrayIndexing	child -> children [ 1 ]		1189784	0					
ANR	1190034	PtrMemberAccess	child -> children		1189784	0					
ANR	1190035	Identifier	child		1189784	0					
ANR	1190036	Identifier	children		1189784	1					
ANR	1190037	PrimaryExpression	1		1189784	1					
ANR	1190038	Identifier	contents		1189784	1					
ANR	1190039	ElseStatement	else		1189784	0					
ANR	1190040	CompoundStatement		37:10:1248:1248	1189784	0					
ANR	1190041	GotoStatement	goto beach ;	145:4:4229:4239	1189784	0	True				
ANR	1190042	Identifier	beach		1189784	0					
ANR	1190043	IfStatement	if ( ! cur -> identifier . name )		1189784	7					
ANR	1190044	Condition	! cur -> identifier . name	147:7:4253:4273	1189784	0	True				
ANR	1190045	UnaryOperationExpression	! cur -> identifier . name		1189784	0					
ANR	1190046	UnaryOperator	!		1189784	0					
ANR	1190047	MemberAccess	cur -> identifier . name		1189784	1					
ANR	1190048	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190049	Identifier	cur		1189784	0					
ANR	1190050	Identifier	identifier		1189784	1					
ANR	1190051	Identifier	name		1189784	1					
ANR	1190052	CompoundStatement		40:30:1301:1301	1189784	1					
ANR	1190053	GotoStatement	goto beach ;	148:4:4282:4292	1189784	0	True				
ANR	1190054	Identifier	beach		1189784	0					
ANR	1190055	ExpressionStatement	is_const = false	150:3:4302:4318	1189784	8	True				
ANR	1190056	AssignmentExpression	is_const = false		1189784	0		=			
ANR	1190057	Identifier	is_const		1189784	0					
ANR	1190058	Identifier	false		1189784	1					
ANR	1190059	ElseStatement	else		1189784	0					
ANR	1190060	IfStatement	if ( is_identifier_string ( child ) )		1189784	0					
ANR	1190061	Condition	is_identifier_string ( child )	154:11:4354:4381	1189784	0	True				
ANR	1190062	CallExpression	is_identifier_string ( child )		1189784	0					
ANR	1190063	Callee	is_identifier_string		1189784	0					
ANR	1190064	Identifier	is_identifier_string		1189784	0					
ANR	1190065	ArgumentList	child		1189784	1					
ANR	1190066	Argument	child		1189784	0					
ANR	1190067	Identifier	child		1189784	0					
ANR	1190068	CompoundStatement		47:41:1409:1409	1189784	1					
ANR	1190069	IfStatement	if ( cur )		1189784	0					
ANR	1190070	Condition	cur	155:7:4393:4395	1189784	0	True				
ANR	1190071	Identifier	cur		1189784	0					
ANR	1190072	CompoundStatement		48:12:1423:1423	1189784	1					
ANR	1190073	GotoStatement	goto beach ;	157:4:4458:4468	1189784	0	True				
ANR	1190074	Identifier	beach		1189784	0					
ANR	1190075	ExpressionStatement	cur = R_NEW0 ( RParseCTypeType )	159:3:4478:4508	1189784	1	True				
ANR	1190076	AssignmentExpression	cur = R_NEW0 ( RParseCTypeType )		1189784	0		=			
ANR	1190077	Identifier	cur		1189784	0					
ANR	1190078	CallExpression	R_NEW0 ( RParseCTypeType )		1189784	1					
ANR	1190079	Callee	R_NEW0		1189784	0					
ANR	1190080	Identifier	R_NEW0		1189784	0					
ANR	1190081	ArgumentList	RParseCTypeType		1189784	1					
ANR	1190082	Argument	RParseCTypeType		1189784	0					
ANR	1190083	Identifier	RParseCTypeType		1189784	0					
ANR	1190084	IfStatement	if ( ! cur )		1189784	2					
ANR	1190085	Condition	! cur	160:7:4517:4520	1189784	0	True				
ANR	1190086	UnaryOperationExpression	! cur		1189784	0					
ANR	1190087	UnaryOperator	!		1189784	0					
ANR	1190088	Identifier	cur		1189784	1					
ANR	1190089	CompoundStatement		53:13:1548:1548	1189784	1					
ANR	1190090	GotoStatement	goto beach ;	161:4:4529:4539	1189784	0	True				
ANR	1190091	Identifier	beach		1189784	0					
ANR	1190092	ExpressionStatement	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER	163:3:4549:4595	1189784	3	True				
ANR	1190093	AssignmentExpression	cur -> kind = R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		1189784	0		=			
ANR	1190094	PtrMemberAccess	cur -> kind		1189784	0					
ANR	1190095	Identifier	cur		1189784	0					
ANR	1190096	Identifier	kind		1189784	1					
ANR	1190097	Identifier	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		1189784	1					
ANR	1190098	ExpressionStatement	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED	164:3:4600:4664	1189784	4	True				
ANR	1190099	AssignmentExpression	cur -> identifier . kind = R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		1189784	0		=			
ANR	1190100	MemberAccess	cur -> identifier . kind		1189784	0					
ANR	1190101	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190102	Identifier	cur		1189784	0					
ANR	1190103	Identifier	identifier		1189784	1					
ANR	1190104	Identifier	kind		1189784	1					
ANR	1190105	Identifier	R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		1189784	1					
ANR	1190106	ExpressionStatement	cur -> identifier . is_const = is_const	165:3:4669:4704	1189784	5	True				
ANR	1190107	AssignmentExpression	cur -> identifier . is_const = is_const		1189784	0		=			
ANR	1190108	MemberAccess	cur -> identifier . is_const		1189784	0					
ANR	1190109	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190110	Identifier	cur		1189784	0					
ANR	1190111	Identifier	identifier		1189784	1					
ANR	1190112	Identifier	is_const		1189784	1					
ANR	1190113	Identifier	is_const		1189784	1					
ANR	1190114	ExpressionStatement	cur -> identifier . name = strdup ( child -> contents )	166:3:4709:4756	1189784	6	True				
ANR	1190115	AssignmentExpression	cur -> identifier . name = strdup ( child -> contents )		1189784	0		=			
ANR	1190116	MemberAccess	cur -> identifier . name		1189784	0					
ANR	1190117	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190118	Identifier	cur		1189784	0					
ANR	1190119	Identifier	identifier		1189784	1					
ANR	1190120	Identifier	name		1189784	1					
ANR	1190121	CallExpression	strdup ( child -> contents )		1189784	1					
ANR	1190122	Callee	strdup		1189784	0					
ANR	1190123	Identifier	strdup		1189784	0					
ANR	1190124	ArgumentList	child -> contents		1189784	1					
ANR	1190125	Argument	child -> contents		1189784	0					
ANR	1190126	PtrMemberAccess	child -> contents		1189784	0					
ANR	1190127	Identifier	child		1189784	0					
ANR	1190128	Identifier	contents		1189784	1					
ANR	1190129	IfStatement	if ( ! cur -> identifier . name )		1189784	7					
ANR	1190130	Condition	! cur -> identifier . name	167:7:4765:4785	1189784	0	True				
ANR	1190131	UnaryOperationExpression	! cur -> identifier . name		1189784	0					
ANR	1190132	UnaryOperator	!		1189784	0					
ANR	1190133	MemberAccess	cur -> identifier . name		1189784	1					
ANR	1190134	PtrMemberAccess	cur -> identifier		1189784	0					
ANR	1190135	Identifier	cur		1189784	0					
ANR	1190136	Identifier	identifier		1189784	1					
ANR	1190137	Identifier	name		1189784	1					
ANR	1190138	CompoundStatement		60:30:1813:1813	1189784	1					
ANR	1190139	GotoStatement	goto beach ;	168:4:4794:4804	1189784	0	True				
ANR	1190140	Identifier	beach		1189784	0					
ANR	1190141	ExpressionStatement	is_const = false	170:3:4814:4830	1189784	8	True				
ANR	1190142	AssignmentExpression	is_const = false		1189784	0		=			
ANR	1190143	Identifier	is_const		1189784	0					
ANR	1190144	Identifier	false		1189784	1					
ANR	1190145	ElseStatement	else		1189784	0					
ANR	1190146	IfStatement	if ( is_non_const_pointer ( child ) )		1189784	0					
ANR	1190147	Condition	is_non_const_pointer ( child )	174:11:4855:4882	1189784	0	True				
ANR	1190148	CallExpression	is_non_const_pointer ( child )		1189784	0					
ANR	1190149	Callee	is_non_const_pointer		1189784	0					
ANR	1190150	Identifier	is_non_const_pointer		1189784	0					
ANR	1190151	ArgumentList	child		1189784	1					
ANR	1190152	Argument	child		1189784	0					
ANR	1190153	Identifier	child		1189784	0					
ANR	1190154	CompoundStatement		68:3:1915:1966	1189784	1					
ANR	1190155	IdentifierDeclStatement	RParseCTypeType * pointer = R_NEW0 ( RParseCTypeType ) ;	175:3:4890:4941	1189784	0	True				
ANR	1190156	IdentifierDecl	* pointer = R_NEW0 ( RParseCTypeType )		1189784	0					
ANR	1190157	IdentifierDeclType	RParseCTypeType *		1189784	0					
ANR	1190158	Identifier	pointer		1189784	1					
ANR	1190159	AssignmentExpression	* pointer = R_NEW0 ( RParseCTypeType )		1189784	2		=			
ANR	1190160	Identifier	pointer		1189784	0					
ANR	1190161	CallExpression	R_NEW0 ( RParseCTypeType )		1189784	1					
ANR	1190162	Callee	R_NEW0		1189784	0					
ANR	1190163	Identifier	R_NEW0		1189784	0					
ANR	1190164	ArgumentList	RParseCTypeType		1189784	1					
ANR	1190165	Argument	RParseCTypeType		1189784	0					
ANR	1190166	Identifier	RParseCTypeType		1189784	0					
ANR	1190167	IfStatement	if ( ! pointer )		1189784	1					
ANR	1190168	Condition	! pointer	176:7:4950:4957	1189784	0	True				
ANR	1190169	UnaryOperationExpression	! pointer		1189784	0					
ANR	1190170	UnaryOperator	!		1189784	0					
ANR	1190171	Identifier	pointer		1189784	1					
ANR	1190172	CompoundStatement		69:17:1985:1985	1189784	1					
ANR	1190173	GotoStatement	goto beach ;	177:4:4966:4976	1189784	0	True				
ANR	1190174	Identifier	beach		1189784	0					
ANR	1190175	ExpressionStatement	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER	179:3:4986:5033	1189784	2	True				
ANR	1190176	AssignmentExpression	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER		1189784	0		=			
ANR	1190177	PtrMemberAccess	pointer -> kind		1189784	0					
ANR	1190178	Identifier	pointer		1189784	0					
ANR	1190179	Identifier	kind		1189784	1					
ANR	1190180	Identifier	R_PARSE_CTYPE_TYPE_KIND_POINTER		1189784	1					
ANR	1190181	ExpressionStatement	pointer -> pointer . is_const = false	180:3:5038:5071	1189784	3	True				
ANR	1190182	AssignmentExpression	pointer -> pointer . is_const = false		1189784	0		=			
ANR	1190183	MemberAccess	pointer -> pointer . is_const		1189784	0					
ANR	1190184	PtrMemberAccess	pointer -> pointer		1189784	0					
ANR	1190185	Identifier	pointer		1189784	0					
ANR	1190186	Identifier	pointer		1189784	1					
ANR	1190187	Identifier	is_const		1189784	1					
ANR	1190188	Identifier	false		1189784	1					
ANR	1190189	ExpressionStatement	pointer -> pointer . type = cur	181:3:5076:5103	1189784	4	True				
ANR	1190190	AssignmentExpression	pointer -> pointer . type = cur		1189784	0		=			
ANR	1190191	MemberAccess	pointer -> pointer . type		1189784	0					
ANR	1190192	PtrMemberAccess	pointer -> pointer		1189784	0					
ANR	1190193	Identifier	pointer		1189784	0					
ANR	1190194	Identifier	pointer		1189784	1					
ANR	1190195	Identifier	type		1189784	1					
ANR	1190196	Identifier	cur		1189784	1					
ANR	1190197	ExpressionStatement	cur = pointer	182:3:5108:5121	1189784	5	True				
ANR	1190198	AssignmentExpression	cur = pointer		1189784	0		=			
ANR	1190199	Identifier	cur		1189784	0					
ANR	1190200	Identifier	pointer		1189784	1					
ANR	1190201	ElseStatement	else		1189784	0					
ANR	1190202	IfStatement	if ( is_const_pointer ( child ) )		1189784	0					
ANR	1190203	Condition	is_const_pointer ( child )	186:11:5152:5175	1189784	0	True				
ANR	1190204	CallExpression	is_const_pointer ( child )		1189784	0					
ANR	1190205	Callee	is_const_pointer		1189784	0					
ANR	1190206	Identifier	is_const_pointer		1189784	0					
ANR	1190207	ArgumentList	child		1189784	1					
ANR	1190208	Argument	child		1189784	0					
ANR	1190209	Identifier	child		1189784	0					
ANR	1190210	CompoundStatement		80:3:2208:2259	1189784	1					
ANR	1190211	IdentifierDeclStatement	RParseCTypeType * pointer = R_NEW0 ( RParseCTypeType ) ;	187:3:5183:5234	1189784	0	True				
ANR	1190212	IdentifierDecl	* pointer = R_NEW0 ( RParseCTypeType )		1189784	0					
ANR	1190213	IdentifierDeclType	RParseCTypeType *		1189784	0					
ANR	1190214	Identifier	pointer		1189784	1					
ANR	1190215	AssignmentExpression	* pointer = R_NEW0 ( RParseCTypeType )		1189784	2		=			
ANR	1190216	Identifier	pointer		1189784	0					
ANR	1190217	CallExpression	R_NEW0 ( RParseCTypeType )		1189784	1					
ANR	1190218	Callee	R_NEW0		1189784	0					
ANR	1190219	Identifier	R_NEW0		1189784	0					
ANR	1190220	ArgumentList	RParseCTypeType		1189784	1					
ANR	1190221	Argument	RParseCTypeType		1189784	0					
ANR	1190222	Identifier	RParseCTypeType		1189784	0					
ANR	1190223	IfStatement	if ( ! pointer )		1189784	1					
ANR	1190224	Condition	! pointer	188:7:5243:5250	1189784	0	True				
ANR	1190225	UnaryOperationExpression	! pointer		1189784	0					
ANR	1190226	UnaryOperator	!		1189784	0					
ANR	1190227	Identifier	pointer		1189784	1					
ANR	1190228	CompoundStatement		81:17:2278:2278	1189784	1					
ANR	1190229	GotoStatement	goto beach ;	189:4:5259:5269	1189784	0	True				
ANR	1190230	Identifier	beach		1189784	0					
ANR	1190231	ExpressionStatement	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER	191:3:5279:5326	1189784	2	True				
ANR	1190232	AssignmentExpression	pointer -> kind = R_PARSE_CTYPE_TYPE_KIND_POINTER		1189784	0		=			
ANR	1190233	PtrMemberAccess	pointer -> kind		1189784	0					
ANR	1190234	Identifier	pointer		1189784	0					
ANR	1190235	Identifier	kind		1189784	1					
ANR	1190236	Identifier	R_PARSE_CTYPE_TYPE_KIND_POINTER		1189784	1					
ANR	1190237	ExpressionStatement	pointer -> pointer . is_const = true	192:3:5331:5363	1189784	3	True				
ANR	1190238	AssignmentExpression	pointer -> pointer . is_const = true		1189784	0		=			
ANR	1190239	MemberAccess	pointer -> pointer . is_const		1189784	0					
ANR	1190240	PtrMemberAccess	pointer -> pointer		1189784	0					
ANR	1190241	Identifier	pointer		1189784	0					
ANR	1190242	Identifier	pointer		1189784	1					
ANR	1190243	Identifier	is_const		1189784	1					
ANR	1190244	Identifier	true		1189784	1					
ANR	1190245	ExpressionStatement	pointer -> pointer . type = cur	193:3:5368:5395	1189784	4	True				
ANR	1190246	AssignmentExpression	pointer -> pointer . type = cur		1189784	0		=			
ANR	1190247	MemberAccess	pointer -> pointer . type		1189784	0					
ANR	1190248	PtrMemberAccess	pointer -> pointer		1189784	0					
ANR	1190249	Identifier	pointer		1189784	0					
ANR	1190250	Identifier	pointer		1189784	1					
ANR	1190251	Identifier	type		1189784	1					
ANR	1190252	Identifier	cur		1189784	1					
ANR	1190253	ExpressionStatement	cur = pointer	194:3:5400:5413	1189784	5	True				
ANR	1190254	AssignmentExpression	cur = pointer		1189784	0		=			
ANR	1190255	Identifier	cur		1189784	0					
ANR	1190256	Identifier	pointer		1189784	1					
ANR	1190257	ElseStatement	else		1189784	0					
ANR	1190258	IfStatement	if ( is_array ( child ) )		1189784	0					
ANR	1190259	Condition	is_array ( child )	198:11:5444:5459	1189784	0	True				
ANR	1190260	CallExpression	is_array ( child )		1189784	0					
ANR	1190261	Callee	is_array		1189784	0					
ANR	1190262	Identifier	is_array		1189784	0					
ANR	1190263	ArgumentList	child		1189784	1					
ANR	1190264	Argument	child		1189784	0					
ANR	1190265	Identifier	child		1189784	0					
ANR	1190266	CompoundStatement		92:3:2492:2541	1189784	1					
ANR	1190267	IdentifierDeclStatement	RParseCTypeType * array = R_NEW0 ( RParseCTypeType ) ;	199:3:5467:5516	1189784	0	True				
ANR	1190268	IdentifierDecl	* array = R_NEW0 ( RParseCTypeType )		1189784	0					
ANR	1190269	IdentifierDeclType	RParseCTypeType *		1189784	0					
ANR	1190270	Identifier	array		1189784	1					
ANR	1190271	AssignmentExpression	* array = R_NEW0 ( RParseCTypeType )		1189784	2		=			
ANR	1190272	Identifier	array		1189784	0					
ANR	1190273	CallExpression	R_NEW0 ( RParseCTypeType )		1189784	1					
ANR	1190274	Callee	R_NEW0		1189784	0					
ANR	1190275	Identifier	R_NEW0		1189784	0					
ANR	1190276	ArgumentList	RParseCTypeType		1189784	1					
ANR	1190277	Argument	RParseCTypeType		1189784	0					
ANR	1190278	Identifier	RParseCTypeType		1189784	0					
ANR	1190279	IfStatement	if ( ! array )		1189784	1					
ANR	1190280	Condition	! array	200:7:5525:5530	1189784	0	True				
ANR	1190281	UnaryOperationExpression	! array		1189784	0					
ANR	1190282	UnaryOperator	!		1189784	0					
ANR	1190283	Identifier	array		1189784	1					
ANR	1190284	CompoundStatement		93:15:2558:2558	1189784	1					
ANR	1190285	GotoStatement	goto beach ;	201:4:5539:5549	1189784	0	True				
ANR	1190286	Identifier	beach		1189784	0					
ANR	1190287	ExpressionStatement	array -> kind = R_PARSE_CTYPE_TYPE_KIND_ARRAY	203:3:5559:5602	1189784	2	True				
ANR	1190288	AssignmentExpression	array -> kind = R_PARSE_CTYPE_TYPE_KIND_ARRAY		1189784	0		=			
ANR	1190289	PtrMemberAccess	array -> kind		1189784	0					
ANR	1190290	Identifier	array		1189784	0					
ANR	1190291	Identifier	kind		1189784	1					
ANR	1190292	Identifier	R_PARSE_CTYPE_TYPE_KIND_ARRAY		1189784	1					
ANR	1190293	ExpressionStatement	"array -> array . count = strtoull ( child -> children [ 1 ] -> contents , NULL , 0 )"	204:3:5607:5676	1189784	3	True				
ANR	1190294	AssignmentExpression	"array -> array . count = strtoull ( child -> children [ 1 ] -> contents , NULL , 0 )"		1189784	0		=			
ANR	1190295	MemberAccess	array -> array . count		1189784	0					
ANR	1190296	PtrMemberAccess	array -> array		1189784	0					
ANR	1190297	Identifier	array		1189784	0					
ANR	1190298	Identifier	array		1189784	1					
ANR	1190299	Identifier	count		1189784	1					
ANR	1190300	CallExpression	"strtoull ( child -> children [ 1 ] -> contents , NULL , 0 )"		1189784	1					
ANR	1190301	Callee	strtoull		1189784	0					
ANR	1190302	Identifier	strtoull		1189784	0					
ANR	1190303	ArgumentList	child -> children [ 1 ] -> contents		1189784	1					
ANR	1190304	Argument	child -> children [ 1 ] -> contents		1189784	0					
ANR	1190305	PtrMemberAccess	child -> children [ 1 ] -> contents		1189784	0					
ANR	1190306	ArrayIndexing	child -> children [ 1 ]		1189784	0					
ANR	1190307	PtrMemberAccess	child -> children		1189784	0					
ANR	1190308	Identifier	child		1189784	0					
ANR	1190309	Identifier	children		1189784	1					
ANR	1190310	PrimaryExpression	1		1189784	1					
ANR	1190311	Identifier	contents		1189784	1					
ANR	1190312	Argument	NULL		1189784	1					
ANR	1190313	Identifier	NULL		1189784	0					
ANR	1190314	Argument	0		1189784	2					
ANR	1190315	PrimaryExpression	0		1189784	0					
ANR	1190316	ExpressionStatement	array -> array . type = cur	205:3:5681:5704	1189784	4	True				
ANR	1190317	AssignmentExpression	array -> array . type = cur		1189784	0		=			
ANR	1190318	MemberAccess	array -> array . type		1189784	0					
ANR	1190319	PtrMemberAccess	array -> array		1189784	0					
ANR	1190320	Identifier	array		1189784	0					
ANR	1190321	Identifier	array		1189784	1					
ANR	1190322	Identifier	type		1189784	1					
ANR	1190323	Identifier	cur		1189784	1					
ANR	1190324	ExpressionStatement	cur = array	206:3:5709:5720	1189784	5	True				
ANR	1190325	AssignmentExpression	cur = array		1189784	0		=			
ANR	1190326	Identifier	cur		1189784	0					
ANR	1190327	Identifier	array		1189784	1					
ANR	1190328	ElseStatement	else		1189784	0					
ANR	1190329	CompoundStatement		102:7:2759:2759	1189784	0					
ANR	1190330	GotoStatement	goto beach ;	210:3:5739:5749	1189784	0	True				
ANR	1190331	Identifier	beach		1189784	0					
ANR	1190332	ReturnStatement	return cur ;	214:1:5760:5770	1189784	4	True				
ANR	1190333	Identifier	cur		1189784	0					
ANR	1190334	Label	beach :	215:0:5772:5777	1189784	5	True				
ANR	1190335	Identifier	beach		1189784	0					
ANR	1190336	ExpressionStatement	r_parse_ctype_type_free ( cur )	216:1:5780:5809	1189784	6	True				
ANR	1190337	CallExpression	r_parse_ctype_type_free ( cur )		1189784	0					
ANR	1190338	Callee	r_parse_ctype_type_free		1189784	0					
ANR	1190339	Identifier	r_parse_ctype_type_free		1189784	0					
ANR	1190340	ArgumentList	cur		1189784	1					
ANR	1190341	Argument	cur		1189784	0					
ANR	1190342	Identifier	cur		1189784	0					
ANR	1190343	ReturnStatement	return NULL ;	217:1:5812:5823	1189784	7	True				
ANR	1190344	Identifier	NULL		1189784	0					
ANR	1190345	ReturnType	static RParseCTypeType *		1189784	1					
ANR	1190346	Identifier	ctype_convert_ast		1189784	2					
ANR	1190347	ParameterList	mpc_ast_t * a		1189784	3					
ANR	1190348	Parameter	mpc_ast_t * a	108:42:2960:2971	1189784	0	True				
ANR	1190349	ParameterType	mpc_ast_t *		1189784	0					
ANR	1190350	Identifier	a		1189784	1					
ANR	1190351	CFGEntryNode	ENTRY		1189784		True				
ANR	1190352	CFGExitNode	EXIT		1189784		True				
ANR	1190353	Symbol	a -> children		1189784						
ANR	1190354	Symbol	pointer -> pointer . is_const		1189784						
ANR	1190355	Symbol	is_const		1189784						
ANR	1190356	Symbol	is_identifier_string		1189784						
ANR	1190357	Symbol	array -> array . type		1189784						
ANR	1190358	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_ENUM		1189784						
ANR	1190359	Symbol	* array		1189784						
ANR	1190360	Symbol	* cur		1189784						
ANR	1190361	Symbol	RParseCTypeType		1189784						
ANR	1190362	Symbol	cur -> kind		1189784						
ANR	1190363	Symbol	* child -> children		1189784						
ANR	1190364	Symbol	is_non_const_pointer		1189784						
ANR	1190365	Symbol	pointer -> pointer . type		1189784						
ANR	1190366	Symbol	strcmp		1189784						
ANR	1190367	Symbol	cur -> identifier . name		1189784						
ANR	1190368	Symbol	* child		1189784						
ANR	1190369	Symbol	* * * child		1189784						
ANR	1190370	Symbol	pointer		1189784						
ANR	1190371	Symbol	NULL		1189784						
ANR	1190372	Symbol	cur -> identifier . is_const		1189784						
ANR	1190373	Symbol	pointer -> pointer		1189784						
ANR	1190374	Symbol	R_PARSE_CTYPE_TYPE_KIND_POINTER		1189784						
ANR	1190375	Symbol	* * a		1189784						
ANR	1190376	Symbol	array -> array . count		1189784						
ANR	1190377	Symbol	cur -> identifier . kind		1189784						
ANR	1190378	Symbol	is_qualifier_const		1189784						
ANR	1190379	Symbol	R_NEW0		1189784						
ANR	1190380	Symbol	child -> tag		1189784						
ANR	1190381	Symbol	true		1189784						
ANR	1190382	Symbol	* pointer		1189784						
ANR	1190383	Symbol	child -> contents		1189784						
ANR	1190384	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_UNSPECIFIED		1189784						
ANR	1190385	Symbol	child		1189784						
ANR	1190386	Symbol	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		1189784						
ANR	1190387	Symbol	* * child -> children		1189784						
ANR	1190388	Symbol	cur		1189784						
ANR	1190389	Symbol	is_identifier_kind		1189784						
ANR	1190390	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_UNION		1189784						
ANR	1190391	Symbol	child -> children		1189784						
ANR	1190392	Symbol	strtoull		1189784						
ANR	1190393	Symbol	* * child		1189784						
ANR	1190394	Symbol	is_const_pointer		1189784						
ANR	1190395	Symbol	array		1189784						
ANR	1190396	Symbol	* a -> children		1189784						
ANR	1190397	Symbol	child -> children [ 0 ] -> contents		1189784						
ANR	1190398	Symbol	r_str_startswith		1189784						
ANR	1190399	Symbol	a		1189784						
ANR	1190400	Symbol	false		1189784						
ANR	1190401	Symbol	i		1189784						
ANR	1190402	Symbol	R_PARSE_CTYPE_TYPE_KIND_ARRAY		1189784						
ANR	1190403	Symbol	* a		1189784						
ANR	1190404	Symbol	cur -> identifier		1189784						
ANR	1190405	Symbol	pointer -> kind		1189784						
ANR	1190406	Symbol	* i		1189784						
ANR	1190407	Symbol	R_PARSE_CTYPE_IDENTIFIER_KIND_STRUCT		1189784						
ANR	1190408	Symbol	is_array		1189784						
ANR	1190409	Symbol	array -> kind		1189784						
ANR	1190410	Symbol	array -> array		1189784						
ANR	1190411	Symbol	a -> children_num		1189784						
ANR	1190412	Symbol	strdup		1189784						
ANR	1190413	Symbol	child -> children [ 1 ] -> contents		1189784						
ANR	1190414	Function	r_parse_ctype_parse	220:0:5828:6277							
ANR	1190415	FunctionDef	"r_parse_ctype_parse (RParseCType * ctype , const char * str , char * * error)"		1190414	0					
ANR	1190416	CompoundStatement		220:94:5922:6277	1190414	0					
ANR	1190417	IdentifierDeclStatement	mpc_result_t r ;	221:1:5925:5939	1190414	0	True				
ANR	1190418	IdentifierDecl	r		1190414	0					
ANR	1190419	IdentifierDeclType	mpc_result_t		1190414	0					
ANR	1190420	Identifier	r		1190414	1					
ANR	1190421	IfStatement	"if ( mpc_parse ( ""<string>"" , str , ctype -> type , & r ) )"		1190414	1					
ANR	1190422	Condition	"mpc_parse ( ""<string>"" , str , ctype -> type , & r )"	222:5:5946:5989	1190414	0	True				
ANR	1190423	CallExpression	"mpc_parse ( ""<string>"" , str , ctype -> type , & r )"		1190414	0					
ANR	1190424	Callee	mpc_parse		1190414	0					
ANR	1190425	Identifier	mpc_parse		1190414	0					
ANR	1190426	ArgumentList	"""<string>"""		1190414	1					
ANR	1190427	Argument	"""<string>"""		1190414	0					
ANR	1190428	PrimaryExpression	"""<string>"""		1190414	0					
ANR	1190429	Argument	str		1190414	1					
ANR	1190430	Identifier	str		1190414	0					
ANR	1190431	Argument	ctype -> type		1190414	2					
ANR	1190432	PtrMemberAccess	ctype -> type		1190414	0					
ANR	1190433	Identifier	ctype		1190414	0					
ANR	1190434	Identifier	type		1190414	1					
ANR	1190435	Argument	& r		1190414	3					
ANR	1190436	UnaryOperationExpression	& r		1190414	0					
ANR	1190437	UnaryOperator	&		1190414	0					
ANR	1190438	Identifier	r		1190414	1					
ANR	1190439	CompoundStatement		4:2:73:124	1190414	1					
ANR	1190440	IdentifierDeclStatement	RParseCTypeType * ret = ctype_convert_ast ( r . output ) ;	223:2:5996:6047	1190414	0	True				
ANR	1190441	IdentifierDecl	* ret = ctype_convert_ast ( r . output )		1190414	0					
ANR	1190442	IdentifierDeclType	RParseCTypeType *		1190414	0					
ANR	1190443	Identifier	ret		1190414	1					
ANR	1190444	AssignmentExpression	* ret = ctype_convert_ast ( r . output )		1190414	2		=			
ANR	1190445	Identifier	ret		1190414	0					
ANR	1190446	CallExpression	ctype_convert_ast ( r . output )		1190414	1					
ANR	1190447	Callee	ctype_convert_ast		1190414	0					
ANR	1190448	Identifier	ctype_convert_ast		1190414	0					
ANR	1190449	ArgumentList	r . output		1190414	1					
ANR	1190450	Argument	r . output		1190414	0					
ANR	1190451	MemberAccess	r . output		1190414	0					
ANR	1190452	Identifier	r		1190414	0					
ANR	1190453	Identifier	output		1190414	1					
ANR	1190454	IfStatement	if ( error )		1190414	1					
ANR	1190455	Condition	error	224:6:6055:6059	1190414	0	True				
ANR	1190456	Identifier	error		1190414	0					
ANR	1190457	CompoundStatement		5:13:139:139	1190414	1					
ANR	1190458	ExpressionStatement	"* error = ! ret ? strdup ( ""internal error"" ) : NULL"	225:3:6067:6115	1190414	0	True				
ANR	1190459	AssignmentExpression	"* error = ! ret ? strdup ( ""internal error"" ) : NULL"		1190414	0		=			
ANR	1190460	UnaryOperationExpression	* error		1190414	0					
ANR	1190461	UnaryOperator	*		1190414	0					
ANR	1190462	Identifier	error		1190414	1					
ANR	1190463	ConditionalExpression	"! ret ? strdup ( ""internal error"" ) : NULL"		1190414	1					
ANR	1190464	Condition	! ret		1190414	0					
ANR	1190465	UnaryOperationExpression	! ret		1190414	0					
ANR	1190466	UnaryOperator	!		1190414	0					
ANR	1190467	Identifier	ret		1190414	1					
ANR	1190468	CallExpression	"strdup ( ""internal error"" )"		1190414	1					
ANR	1190469	Callee	strdup		1190414	0					
ANR	1190470	Identifier	strdup		1190414	0					
ANR	1190471	ArgumentList	"""internal error"""		1190414	1					
ANR	1190472	Argument	"""internal error"""		1190414	0					
ANR	1190473	PrimaryExpression	"""internal error"""		1190414	0					
ANR	1190474	Identifier	NULL		1190414	2					
ANR	1190475	ExpressionStatement	mpc_ast_delete ( r . output )	227:2:6123:6148	1190414	2	True				
ANR	1190476	CallExpression	mpc_ast_delete ( r . output )		1190414	0					
ANR	1190477	Callee	mpc_ast_delete		1190414	0					
ANR	1190478	Identifier	mpc_ast_delete		1190414	0					
ANR	1190479	ArgumentList	r . output		1190414	1					
ANR	1190480	Argument	r . output		1190414	0					
ANR	1190481	MemberAccess	r . output		1190414	0					
ANR	1190482	Identifier	r		1190414	0					
ANR	1190483	Identifier	output		1190414	1					
ANR	1190484	ReturnStatement	return ret ;	228:2:6152:6162	1190414	3	True				
ANR	1190485	Identifier	ret		1190414	0					
ANR	1190486	ElseStatement	else		1190414	0					
ANR	1190487	CompoundStatement		10:8:249:249	1190414	0					
ANR	1190488	IfStatement	if ( error )		1190414	0					
ANR	1190489	Condition	error	230:6:6180:6184	1190414	0	True				
ANR	1190490	Identifier	error		1190414	0					
ANR	1190491	CompoundStatement		11:13:264:264	1190414	1					
ANR	1190492	ExpressionStatement	* error = mpc_err_string ( r . error )	231:3:6192:6225	1190414	0	True				
ANR	1190493	AssignmentExpression	* error = mpc_err_string ( r . error )		1190414	0		=			
ANR	1190494	UnaryOperationExpression	* error		1190414	0					
ANR	1190495	UnaryOperator	*		1190414	0					
ANR	1190496	Identifier	error		1190414	1					
ANR	1190497	CallExpression	mpc_err_string ( r . error )		1190414	1					
ANR	1190498	Callee	mpc_err_string		1190414	0					
ANR	1190499	Identifier	mpc_err_string		1190414	0					
ANR	1190500	ArgumentList	r . error		1190414	1					
ANR	1190501	Argument	r . error		1190414	0					
ANR	1190502	MemberAccess	r . error		1190414	0					
ANR	1190503	Identifier	r		1190414	0					
ANR	1190504	Identifier	error		1190414	1					
ANR	1190505	ExpressionStatement	mpc_err_delete ( r . error )	233:2:6233:6257	1190414	1	True				
ANR	1190506	CallExpression	mpc_err_delete ( r . error )		1190414	0					
ANR	1190507	Callee	mpc_err_delete		1190414	0					
ANR	1190508	Identifier	mpc_err_delete		1190414	0					
ANR	1190509	ArgumentList	r . error		1190414	1					
ANR	1190510	Argument	r . error		1190414	0					
ANR	1190511	MemberAccess	r . error		1190414	0					
ANR	1190512	Identifier	r		1190414	0					
ANR	1190513	Identifier	error		1190414	1					
ANR	1190514	ReturnStatement	return NULL ;	234:2:6261:6272	1190414	2	True				
ANR	1190515	Identifier	NULL		1190414	0					
ANR	1190516	ReturnType	R_API RParseCTypeType *		1190414	1					
ANR	1190517	Identifier	r_parse_ctype_parse		1190414	2					
ANR	1190518	ParameterList	"RParseCType * ctype , const char * str , char * * error"		1190414	3					
ANR	1190519	Parameter	RParseCType * ctype	220:43:5871:5888	1190414	0	True				
ANR	1190520	ParameterType	RParseCType *		1190414	0					
ANR	1190521	Identifier	ctype		1190414	1					
ANR	1190522	Parameter	const char * str	220:63:5891:5905	1190414	1	True				
ANR	1190523	ParameterType	const char *		1190414	0					
ANR	1190524	Identifier	str		1190414	1					
ANR	1190525	Parameter	char * * error	220:80:5908:5919	1190414	2	True				
ANR	1190526	ParameterType	char * *		1190414	0					
ANR	1190527	Identifier	error		1190414	1					
ANR	1190528	CFGEntryNode	ENTRY		1190414		True				
ANR	1190529	CFGExitNode	EXIT		1190414		True				
ANR	1190530	Symbol	ret		1190414						
ANR	1190531	Symbol	NULL		1190414						
ANR	1190532	Symbol	error		1190414						
ANR	1190533	Symbol	* ctype		1190414						
ANR	1190534	Symbol	ctype -> type		1190414						
ANR	1190535	Symbol	str		1190414						
ANR	1190536	Symbol	mpc_parse		1190414						
ANR	1190537	Symbol	r . output		1190414						
ANR	1190538	Symbol	r		1190414						
ANR	1190539	Symbol	ctype		1190414						
ANR	1190540	Symbol	r . error		1190414						
ANR	1190541	Symbol	* error		1190414						
ANR	1190542	Symbol	& r		1190414						
ANR	1190543	Symbol	ctype_convert_ast		1190414						
ANR	1190544	Symbol	strdup		1190414						
ANR	1190545	Symbol	mpc_err_string		1190414						
ANR	1190546	Function	r_parse_ctype_type_free	238:0:6280:6678							
ANR	1190547	FunctionDef	r_parse_ctype_type_free (RParseCTypeType * type)		1190546	0					
ANR	1190548	CompoundStatement		238:58:6338:6678	1190546	0					
ANR	1190549	IfStatement	if ( ! type )		1190546	0					
ANR	1190550	Condition	! type	239:5:6345:6349	1190546	0	True				
ANR	1190551	UnaryOperationExpression	! type		1190546	0					
ANR	1190552	UnaryOperator	!		1190546	0					
ANR	1190553	Identifier	type		1190546	1					
ANR	1190554	CompoundStatement		2:12:13:13	1190546	1					
ANR	1190555	ReturnStatement	return ;	240:2:6356:6362	1190546	0	True				
ANR	1190556	SwitchStatement	switch ( type -> kind )		1190546	1					
ANR	1190557	Condition	type -> kind	242:9:6376:6385	1190546	0	True				
ANR	1190558	PtrMemberAccess	type -> kind		1190546	0					
ANR	1190559	Identifier	type		1190546	0					
ANR	1190560	Identifier	kind		1190546	1					
ANR	1190561	CompoundStatement		5:21:49:49	1190546	1					
ANR	1190562	Label	case R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER :	243:1:6391:6430	1190546	0	True				
ANR	1190563	Identifier	R_PARSE_CTYPE_TYPE_KIND_IDENTIFIER		1190546	0					
ANR	1190564	ExpressionStatement	free ( type -> identifier . name )	244:2:6434:6462	1190546	1	True				
ANR	1190565	CallExpression	free ( type -> identifier . name )		1190546	0					
ANR	1190566	Callee	free		1190546	0					
ANR	1190567	Identifier	free		1190546	0					
ANR	1190568	ArgumentList	type -> identifier . name		1190546	1					
ANR	1190569	Argument	type -> identifier . name		1190546	0					
ANR	1190570	MemberAccess	type -> identifier . name		1190546	0					
ANR	1190571	PtrMemberAccess	type -> identifier		1190546	0					
ANR	1190572	Identifier	type		1190546	0					
ANR	1190573	Identifier	identifier		1190546	1					
ANR	1190574	Identifier	name		1190546	1					
ANR	1190575	BreakStatement	break ;	245:2:6466:6471	1190546	2	True				
ANR	1190576	Label	case R_PARSE_CTYPE_TYPE_KIND_POINTER :	246:1:6474:6510	1190546	3	True				
ANR	1190577	Identifier	R_PARSE_CTYPE_TYPE_KIND_POINTER		1190546	0					
ANR	1190578	ExpressionStatement	r_parse_ctype_type_free ( type -> pointer . type )	247:2:6514:6558	1190546	4	True				
ANR	1190579	CallExpression	r_parse_ctype_type_free ( type -> pointer . type )		1190546	0					
ANR	1190580	Callee	r_parse_ctype_type_free		1190546	0					
ANR	1190581	Identifier	r_parse_ctype_type_free		1190546	0					
ANR	1190582	ArgumentList	type -> pointer . type		1190546	1					
ANR	1190583	Argument	type -> pointer . type		1190546	0					
ANR	1190584	MemberAccess	type -> pointer . type		1190546	0					
ANR	1190585	PtrMemberAccess	type -> pointer		1190546	0					
ANR	1190586	Identifier	type		1190546	0					
ANR	1190587	Identifier	pointer		1190546	1					
ANR	1190588	Identifier	type		1190546	1					
ANR	1190589	BreakStatement	break ;	248:2:6562:6567	1190546	5	True				
ANR	1190590	Label	case R_PARSE_CTYPE_TYPE_KIND_ARRAY :	249:1:6570:6604	1190546	6	True				
ANR	1190591	Identifier	R_PARSE_CTYPE_TYPE_KIND_ARRAY		1190546	0					
ANR	1190592	ExpressionStatement	r_parse_ctype_type_free ( type -> array . type )	250:2:6608:6650	1190546	7	True				
ANR	1190593	CallExpression	r_parse_ctype_type_free ( type -> array . type )		1190546	0					
ANR	1190594	Callee	r_parse_ctype_type_free		1190546	0					
ANR	1190595	Identifier	r_parse_ctype_type_free		1190546	0					
ANR	1190596	ArgumentList	type -> array . type		1190546	1					
ANR	1190597	Argument	type -> array . type		1190546	0					
ANR	1190598	MemberAccess	type -> array . type		1190546	0					
ANR	1190599	PtrMemberAccess	type -> array		1190546	0					
ANR	1190600	Identifier	type		1190546	0					
ANR	1190601	Identifier	array		1190546	1					
ANR	1190602	Identifier	type		1190546	1					
ANR	1190603	BreakStatement	break ;	251:2:6654:6659	1190546	8	True				
ANR	1190604	ExpressionStatement	free ( type )	253:1:6665:6676	1190546	2	True				
ANR	1190605	CallExpression	free ( type )		1190546	0					
ANR	1190606	Callee	free		1190546	0					
ANR	1190607	Identifier	free		1190546	0					
ANR	1190608	ArgumentList	type		1190546	1					
ANR	1190609	Argument	type		1190546	0					
ANR	1190610	Identifier	type		1190546	0					
ANR	1190611	ReturnType	R_API void		1190546	1					
ANR	1190612	Identifier	r_parse_ctype_type_free		1190546	2					
ANR	1190613	ParameterList	RParseCTypeType * type		1190546	3					
ANR	1190614	Parameter	RParseCTypeType * type	238:35:6315:6335	1190546	0	True				
ANR	1190615	ParameterType	RParseCTypeType *		1190546	0					
ANR	1190616	Identifier	type		1190546	1					
ANR	1190617	CFGEntryNode	ENTRY		1190546		True				
ANR	1190618	CFGExitNode	EXIT		1190546		True				
ANR	1190619	Symbol	type -> pointer . type		1190546						
ANR	1190620	Symbol	type -> pointer		1190546						
ANR	1190621	Symbol	* type		1190546						
ANR	1190622	Symbol	type -> kind		1190546						
ANR	1190623	Symbol	type -> array		1190546						
ANR	1190624	Symbol	type		1190546						
ANR	1190625	Symbol	type -> identifier . name		1190546						
ANR	1190626	Symbol	type -> array . type		1190546						
ANR	1190627	Symbol	type -> identifier		1190546						
