command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5320291	File	data/converged/CVE-2019-16718~_radare2/ls.c								
ANR	5320292	Function	ls_newf	6:0:94:222							
ANR	5320293	FunctionDef	ls_newf (SdbListFree freefn)		5320292	0					
ANR	5320294	CompoundStatement		6:45:139:222	5320292	0					
ANR	5320295	IdentifierDeclStatement	SdbList * list = ls_new ( ) ;	7:1:142:167	5320292	0	True				
ANR	5320296	IdentifierDecl	* list = ls_new ( )		5320292	0					
ANR	5320297	IdentifierDeclType	SdbList *		5320292	0					
ANR	5320298	Identifier	list		5320292	1					
ANR	5320299	AssignmentExpression	* list = ls_new ( )		5320292	2		=			
ANR	5320300	Identifier	list		5320292	0					
ANR	5320301	CallExpression	ls_new ( )		5320292	1					
ANR	5320302	Callee	ls_new		5320292	0					
ANR	5320303	Identifier	ls_new		5320292	0					
ANR	5320304	ArgumentList			5320292	1					
ANR	5320305	IfStatement	if ( list )		5320292	1					
ANR	5320306	Condition	list	8:5:174:177	5320292	0	True				
ANR	5320307	Identifier	list		5320292	0					
ANR	5320308	CompoundStatement		3:11:40:40	5320292	1					
ANR	5320309	ExpressionStatement	list -> free = freefn	9:2:184:203	5320292	0	True				
ANR	5320310	AssignmentExpression	list -> free = freefn		5320292	0		=			
ANR	5320311	PtrMemberAccess	list -> free		5320292	0					
ANR	5320312	Identifier	list		5320292	0					
ANR	5320313	Identifier	free		5320292	1					
ANR	5320314	Identifier	freefn		5320292	1					
ANR	5320315	ReturnStatement	return list ;	11:1:209:220	5320292	2	True				
ANR	5320316	Identifier	list		5320292	0					
ANR	5320317	ReturnType	SDB_API SdbList *		5320292	1					
ANR	5320318	Identifier	ls_newf		5320292	2					
ANR	5320319	ParameterList	SdbListFree freefn		5320292	3					
ANR	5320320	Parameter	SdbListFree freefn	6:25:119:136	5320292	0	True				
ANR	5320321	ParameterType	SdbListFree		5320292	0					
ANR	5320322	Identifier	freefn		5320292	1					
ANR	5320323	CFGEntryNode	ENTRY		5320292		True				
ANR	5320324	CFGExitNode	EXIT		5320292		True				
ANR	5320325	Symbol	freefn		5320292						
ANR	5320326	Symbol	ls_new		5320292						
ANR	5320327	Symbol	* list		5320292						
ANR	5320328	Symbol	list -> free		5320292						
ANR	5320329	Symbol	list		5320292						
ANR	5320330	Function	ls_new	14:0:225:334							
ANR	5320331	FunctionDef	ls_new ()		5320330	0					
ANR	5320332	CompoundStatement		14:26:251:334	5320330	0					
ANR	5320333	IdentifierDeclStatement	SdbList * list = R_NEW0 ( SdbList ) ;	15:1:254:286	5320330	0	True				
ANR	5320334	IdentifierDecl	* list = R_NEW0 ( SdbList )		5320330	0					
ANR	5320335	IdentifierDeclType	SdbList *		5320330	0					
ANR	5320336	Identifier	list		5320330	1					
ANR	5320337	AssignmentExpression	* list = R_NEW0 ( SdbList )		5320330	2		=			
ANR	5320338	Identifier	list		5320330	0					
ANR	5320339	CallExpression	R_NEW0 ( SdbList )		5320330	1					
ANR	5320340	Callee	R_NEW0		5320330	0					
ANR	5320341	Identifier	R_NEW0		5320330	0					
ANR	5320342	ArgumentList	SdbList		5320330	1					
ANR	5320343	Argument	SdbList		5320330	0					
ANR	5320344	Identifier	SdbList		5320330	0					
ANR	5320345	IfStatement	if ( ! list )		5320330	1					
ANR	5320346	Condition	! list	16:5:293:297	5320330	0	True				
ANR	5320347	UnaryOperationExpression	! list		5320330	0					
ANR	5320348	UnaryOperator	!		5320330	0					
ANR	5320349	Identifier	list		5320330	1					
ANR	5320350	CompoundStatement		3:12:48:48	5320330	1					
ANR	5320351	ReturnStatement	return NULL ;	17:2:304:315	5320330	0	True				
ANR	5320352	Identifier	NULL		5320330	0					
ANR	5320353	ReturnStatement	return list ;	19:1:321:332	5320330	2	True				
ANR	5320354	Identifier	list		5320330	0					
ANR	5320355	ReturnType	SDB_API SdbList *		5320330	1					
ANR	5320356	Identifier	ls_new		5320330	2					
ANR	5320357	ParameterList			5320330	3					
ANR	5320358	CFGEntryNode	ENTRY		5320330		True				
ANR	5320359	CFGExitNode	EXIT		5320330		True				
ANR	5320360	Symbol	R_NEW0		5320330						
ANR	5320361	Symbol	NULL		5320330						
ANR	5320362	Symbol	list		5320330						
ANR	5320363	Symbol	SdbList		5320330						
ANR	5320364	Function	ls_insertion_sort_iter	22:0:337:662							
ANR	5320365	FunctionDef	"ls_insertion_sort_iter (SdbListIter * iter , SdbListComparator cmp)"		5320364	0					
ANR	5320366	CompoundStatement		22:77:414:662	5320364	0					
ANR	5320367	IdentifierDeclStatement	"SdbListIter * it , * it2 ;"	23:1:417:438	5320364	0	True				
ANR	5320368	IdentifierDecl	* it		5320364	0					
ANR	5320369	IdentifierDeclType	SdbListIter *		5320364	0					
ANR	5320370	Identifier	it		5320364	1					
ANR	5320371	IdentifierDecl	* it2		5320364	1					
ANR	5320372	IdentifierDeclType	SdbListIter *		5320364	0					
ANR	5320373	Identifier	it2		5320364	1					
ANR	5320374	ForStatement	for ( it = iter ; it && it -> data ; it = it -> n )		5320364	1					
ANR	5320375	ForInit	it = iter ;	24:6:446:455	5320364	0	True				
ANR	5320376	AssignmentExpression	it = iter		5320364	0		=			
ANR	5320377	Identifier	it		5320364	0					
ANR	5320378	Identifier	iter		5320364	1					
ANR	5320379	Condition	it && it -> data	24:17:457:470	5320364	1	True				
ANR	5320380	AndExpression	it && it -> data		5320364	0		&&			
ANR	5320381	Identifier	it		5320364	0					
ANR	5320382	PtrMemberAccess	it -> data		5320364	1					
ANR	5320383	Identifier	it		5320364	0					
ANR	5320384	Identifier	data		5320364	1					
ANR	5320385	AssignmentExpression	it = it -> n	24:33:473:482	5320364	2	True	=			
ANR	5320386	Identifier	it		5320364	0					
ANR	5320387	PtrMemberAccess	it -> n		5320364	1					
ANR	5320388	Identifier	it		5320364	0					
ANR	5320389	Identifier	n		5320364	1					
ANR	5320390	CompoundStatement		3:45:70:70	5320364	3					
ANR	5320391	ForStatement	for ( it2 = it -> n ; it2 && it2 -> data ; it2 = it2 -> n )		5320364	0					
ANR	5320392	ForInit	it2 = it -> n ;	25:7:494:505	5320364	0	True				
ANR	5320393	AssignmentExpression	it2 = it -> n		5320364	0		=			
ANR	5320394	Identifier	it2		5320364	0					
ANR	5320395	PtrMemberAccess	it -> n		5320364	1					
ANR	5320396	Identifier	it		5320364	0					
ANR	5320397	Identifier	n		5320364	1					
ANR	5320398	Condition	it2 && it2 -> data	25:20:507:522	5320364	1	True				
ANR	5320399	AndExpression	it2 && it2 -> data		5320364	0		&&			
ANR	5320400	Identifier	it2		5320364	0					
ANR	5320401	PtrMemberAccess	it2 -> data		5320364	1					
ANR	5320402	Identifier	it2		5320364	0					
ANR	5320403	Identifier	data		5320364	1					
ANR	5320404	AssignmentExpression	it2 = it2 -> n	25:38:525:536	5320364	2	True	=			
ANR	5320405	Identifier	it2		5320364	0					
ANR	5320406	PtrMemberAccess	it2 -> n		5320364	1					
ANR	5320407	Identifier	it2		5320364	0					
ANR	5320408	Identifier	n		5320364	1					
ANR	5320409	CompoundStatement		4:52:124:124	5320364	3					
ANR	5320410	IfStatement	"if ( cmp ( it -> data , it2 -> data ) > 0 )"		5320364	0					
ANR	5320411	Condition	"cmp ( it -> data , it2 -> data ) > 0"	26:7:548:576	5320364	0	True				
ANR	5320412	RelationalExpression	"cmp ( it -> data , it2 -> data ) > 0"		5320364	0		>			
ANR	5320413	CallExpression	"cmp ( it -> data , it2 -> data )"		5320364	0					
ANR	5320414	Callee	cmp		5320364	0					
ANR	5320415	Identifier	cmp		5320364	0					
ANR	5320416	ArgumentList	it -> data		5320364	1					
ANR	5320417	Argument	it -> data		5320364	0					
ANR	5320418	PtrMemberAccess	it -> data		5320364	0					
ANR	5320419	Identifier	it		5320364	0					
ANR	5320420	Identifier	data		5320364	1					
ANR	5320421	Argument	it2 -> data		5320364	1					
ANR	5320422	PtrMemberAccess	it2 -> data		5320364	0					
ANR	5320423	Identifier	it2		5320364	0					
ANR	5320424	Identifier	data		5320364	1					
ANR	5320425	PrimaryExpression	0		5320364	1					
ANR	5320426	CompoundStatement		6:4:170:188	5320364	1					
ANR	5320427	IdentifierDeclStatement	void * t = it -> data ;	27:4:585:603	5320364	0	True				
ANR	5320428	IdentifierDecl	* t = it -> data		5320364	0					
ANR	5320429	IdentifierDeclType	void *		5320364	0					
ANR	5320430	Identifier	t		5320364	1					
ANR	5320431	AssignmentExpression	* t = it -> data		5320364	2		=			
ANR	5320432	Identifier	t		5320364	0					
ANR	5320433	PtrMemberAccess	it -> data		5320364	1					
ANR	5320434	Identifier	it		5320364	0					
ANR	5320435	Identifier	data		5320364	1					
ANR	5320436	ExpressionStatement	it -> data = it2 -> data	28:4:609:629	5320364	1	True				
ANR	5320437	AssignmentExpression	it -> data = it2 -> data		5320364	0		=			
ANR	5320438	PtrMemberAccess	it -> data		5320364	0					
ANR	5320439	Identifier	it		5320364	0					
ANR	5320440	Identifier	data		5320364	1					
ANR	5320441	PtrMemberAccess	it2 -> data		5320364	1					
ANR	5320442	Identifier	it2		5320364	0					
ANR	5320443	Identifier	data		5320364	1					
ANR	5320444	ExpressionStatement	it2 -> data = t	29:4:635:648	5320364	2	True				
ANR	5320445	AssignmentExpression	it2 -> data = t		5320364	0		=			
ANR	5320446	PtrMemberAccess	it2 -> data		5320364	0					
ANR	5320447	Identifier	it2		5320364	0					
ANR	5320448	Identifier	data		5320364	1					
ANR	5320449	Identifier	t		5320364	1					
ANR	5320450	ReturnType	static void		5320364	1					
ANR	5320451	Identifier	ls_insertion_sort_iter		5320364	2					
ANR	5320452	ParameterList	"SdbListIter * iter , SdbListComparator cmp"		5320364	3					
ANR	5320453	Parameter	SdbListIter * iter	22:35:372:388	5320364	0	True				
ANR	5320454	ParameterType	SdbListIter *		5320364	0					
ANR	5320455	Identifier	iter		5320364	1					
ANR	5320456	Parameter	SdbListComparator cmp	22:54:391:411	5320364	1	True				
ANR	5320457	ParameterType	SdbListComparator		5320364	0					
ANR	5320458	Identifier	cmp		5320364	1					
ANR	5320459	CFGEntryNode	ENTRY		5320364		True				
ANR	5320460	CFGExitNode	EXIT		5320364		True				
ANR	5320461	Symbol	it2 -> n		5320364						
ANR	5320462	Symbol	* it		5320364						
ANR	5320463	Symbol	t		5320364						
ANR	5320464	Symbol	it2		5320364						
ANR	5320465	Symbol	cmp		5320364						
ANR	5320466	Symbol	iter		5320364						
ANR	5320467	Symbol	it -> data		5320364						
ANR	5320468	Symbol	it		5320364						
ANR	5320469	Symbol	it -> n		5320364						
ANR	5320470	Symbol	* it2		5320364						
ANR	5320471	Symbol	it2 -> data		5320364						
ANR	5320472	Function	ls_insertion_sort	35:0:665:778							
ANR	5320473	FunctionDef	"ls_insertion_sort (SdbList * list , SdbListComparator cmp)"		5320472	0					
ANR	5320474	CompoundStatement		35:68:733:778	5320472	0					
ANR	5320475	ExpressionStatement	"ls_insertion_sort_iter ( list -> head , cmp )"	36:1:736:776	5320472	0	True				
ANR	5320476	CallExpression	"ls_insertion_sort_iter ( list -> head , cmp )"		5320472	0					
ANR	5320477	Callee	ls_insertion_sort_iter		5320472	0					
ANR	5320478	Identifier	ls_insertion_sort_iter		5320472	0					
ANR	5320479	ArgumentList	list -> head		5320472	1					
ANR	5320480	Argument	list -> head		5320472	0					
ANR	5320481	PtrMemberAccess	list -> head		5320472	0					
ANR	5320482	Identifier	list		5320472	0					
ANR	5320483	Identifier	head		5320472	1					
ANR	5320484	Argument	cmp		5320472	1					
ANR	5320485	Identifier	cmp		5320472	0					
ANR	5320486	ReturnType	static void		5320472	1					
ANR	5320487	Identifier	ls_insertion_sort		5320472	2					
ANR	5320488	ParameterList	"SdbList * list , SdbListComparator cmp"		5320472	3					
ANR	5320489	Parameter	SdbList * list	35:30:695:707	5320472	0	True				
ANR	5320490	ParameterType	SdbList *		5320472	0					
ANR	5320491	Identifier	list		5320472	1					
ANR	5320492	Parameter	SdbListComparator cmp	35:45:710:730	5320472	1	True				
ANR	5320493	ParameterType	SdbListComparator		5320472	0					
ANR	5320494	Identifier	cmp		5320472	1					
ANR	5320495	CFGEntryNode	ENTRY		5320472		True				
ANR	5320496	CFGExitNode	EXIT		5320472		True				
ANR	5320497	Symbol	list -> head		5320472						
ANR	5320498	Symbol	* list		5320472						
ANR	5320499	Symbol	cmp		5320472						
ANR	5320500	Symbol	list		5320472						
ANR	5320501	Function	_merge	39:0:781:1424							
ANR	5320502	FunctionDef	"_merge (SdbListIter * first , SdbListIter * second , SdbListComparator cmp)"		5320501	0					
ANR	5320503	CompoundStatement		39:91:872:1424	5320501	0					
ANR	5320504	IdentifierDeclStatement	"SdbListIter * next = NULL , * result = NULL , * head = NULL ;"	40:1:875:929	5320501	0	True				
ANR	5320505	IdentifierDecl	* next = NULL		5320501	0					
ANR	5320506	IdentifierDeclType	SdbListIter *		5320501	0					
ANR	5320507	Identifier	next		5320501	1					
ANR	5320508	AssignmentExpression	* next = NULL		5320501	2		=			
ANR	5320509	Identifier	NULL		5320501	0					
ANR	5320510	Identifier	NULL		5320501	1					
ANR	5320511	IdentifierDecl	* result = NULL		5320501	1					
ANR	5320512	IdentifierDeclType	SdbListIter *		5320501	0					
ANR	5320513	Identifier	result		5320501	1					
ANR	5320514	AssignmentExpression	* result = NULL		5320501	2		=			
ANR	5320515	Identifier	NULL		5320501	0					
ANR	5320516	Identifier	NULL		5320501	1					
ANR	5320517	IdentifierDecl	* head = NULL		5320501	2					
ANR	5320518	IdentifierDeclType	SdbListIter *		5320501	0					
ANR	5320519	Identifier	head		5320501	1					
ANR	5320520	AssignmentExpression	* head = NULL		5320501	2		=			
ANR	5320521	Identifier	NULL		5320501	0					
ANR	5320522	Identifier	NULL		5320501	1					
ANR	5320523	WhileStatement	while ( first || second )		5320501	1					
ANR	5320524	Condition	first || second	41:8:939:953	5320501	0	True				
ANR	5320525	OrExpression	first || second		5320501	0		||			
ANR	5320526	Identifier	first		5320501	0					
ANR	5320527	Identifier	second		5320501	1					
ANR	5320528	CompoundStatement		3:25:83:83	5320501	1					
ANR	5320529	IfStatement	if ( ! second )		5320501	0					
ANR	5320530	Condition	! second	42:6:964:970	5320501	0	True				
ANR	5320531	UnaryOperationExpression	! second		5320501	0					
ANR	5320532	UnaryOperator	!		5320501	0					
ANR	5320533	Identifier	second		5320501	1					
ANR	5320534	CompoundStatement		4:15:100:100	5320501	1					
ANR	5320535	ExpressionStatement	next = first	43:3:978:990	5320501	0	True				
ANR	5320536	AssignmentExpression	next = first		5320501	0		=			
ANR	5320537	Identifier	next		5320501	0					
ANR	5320538	Identifier	first		5320501	1					
ANR	5320539	ExpressionStatement	first = first -> n	44:3:995:1011	5320501	1	True				
ANR	5320540	AssignmentExpression	first = first -> n		5320501	0		=			
ANR	5320541	Identifier	first		5320501	0					
ANR	5320542	PtrMemberAccess	first -> n		5320501	1					
ANR	5320543	Identifier	first		5320501	0					
ANR	5320544	Identifier	n		5320501	1					
ANR	5320545	ElseStatement	else		5320501	0					
ANR	5320546	IfStatement	if ( ! first )		5320501	0					
ANR	5320547	Condition	! first	45:13:1026:1031	5320501	0	True				
ANR	5320548	UnaryOperationExpression	! first		5320501	0					
ANR	5320549	UnaryOperator	!		5320501	0					
ANR	5320550	Identifier	first		5320501	1					
ANR	5320551	CompoundStatement		7:21:161:161	5320501	1					
ANR	5320552	ExpressionStatement	next = second	46:3:1039:1052	5320501	0	True				
ANR	5320553	AssignmentExpression	next = second		5320501	0		=			
ANR	5320554	Identifier	next		5320501	0					
ANR	5320555	Identifier	second		5320501	1					
ANR	5320556	ExpressionStatement	second = second -> n	47:3:1057:1075	5320501	1	True				
ANR	5320557	AssignmentExpression	second = second -> n		5320501	0		=			
ANR	5320558	Identifier	second		5320501	0					
ANR	5320559	PtrMemberAccess	second -> n		5320501	1					
ANR	5320560	Identifier	second		5320501	0					
ANR	5320561	Identifier	n		5320501	1					
ANR	5320562	ElseStatement	else		5320501	0					
ANR	5320563	IfStatement	"if ( cmp ( first -> data , second -> data ) < 0 )"		5320501	0					
ANR	5320564	Condition	"cmp ( first -> data , second -> data ) < 0"	48:13:1090:1124	5320501	0	True				
ANR	5320565	RelationalExpression	"cmp ( first -> data , second -> data ) < 0"		5320501	0		<			
ANR	5320566	CallExpression	"cmp ( first -> data , second -> data )"		5320501	0					
ANR	5320567	Callee	cmp		5320501	0					
ANR	5320568	Identifier	cmp		5320501	0					
ANR	5320569	ArgumentList	first -> data		5320501	1					
ANR	5320570	Argument	first -> data		5320501	0					
ANR	5320571	PtrMemberAccess	first -> data		5320501	0					
ANR	5320572	Identifier	first		5320501	0					
ANR	5320573	Identifier	data		5320501	1					
ANR	5320574	Argument	second -> data		5320501	1					
ANR	5320575	PtrMemberAccess	second -> data		5320501	0					
ANR	5320576	Identifier	second		5320501	0					
ANR	5320577	Identifier	data		5320501	1					
ANR	5320578	PrimaryExpression	0		5320501	1					
ANR	5320579	CompoundStatement		10:50:254:254	5320501	1					
ANR	5320580	ExpressionStatement	next = first	49:3:1132:1144	5320501	0	True				
ANR	5320581	AssignmentExpression	next = first		5320501	0		=			
ANR	5320582	Identifier	next		5320501	0					
ANR	5320583	Identifier	first		5320501	1					
ANR	5320584	ExpressionStatement	first = first -> n	50:3:1149:1165	5320501	1	True				
ANR	5320585	AssignmentExpression	first = first -> n		5320501	0		=			
ANR	5320586	Identifier	first		5320501	0					
ANR	5320587	PtrMemberAccess	first -> n		5320501	1					
ANR	5320588	Identifier	first		5320501	0					
ANR	5320589	Identifier	n		5320501	1					
ANR	5320590	ElseStatement	else		5320501	0					
ANR	5320591	CompoundStatement		13:9:303:303	5320501	0					
ANR	5320592	ExpressionStatement	next = second	52:3:1181:1194	5320501	0	True				
ANR	5320593	AssignmentExpression	next = second		5320501	0		=			
ANR	5320594	Identifier	next		5320501	0					
ANR	5320595	Identifier	second		5320501	1					
ANR	5320596	ExpressionStatement	second = second -> n	53:3:1199:1217	5320501	1	True				
ANR	5320597	AssignmentExpression	second = second -> n		5320501	0		=			
ANR	5320598	Identifier	second		5320501	0					
ANR	5320599	PtrMemberAccess	second -> n		5320501	1					
ANR	5320600	Identifier	second		5320501	0					
ANR	5320601	Identifier	n		5320501	1					
ANR	5320602	IfStatement	if ( ! head )		5320501	1					
ANR	5320603	Condition	! head	55:6:1229:1233	5320501	0	True				
ANR	5320604	UnaryOperationExpression	! head		5320501	0					
ANR	5320605	UnaryOperator	!		5320501	0					
ANR	5320606	Identifier	head		5320501	1					
ANR	5320607	CompoundStatement		17:13:363:363	5320501	1					
ANR	5320608	ExpressionStatement	result = next	56:3:1241:1254	5320501	0	True				
ANR	5320609	AssignmentExpression	result = next		5320501	0		=			
ANR	5320610	Identifier	result		5320501	0					
ANR	5320611	Identifier	next		5320501	1					
ANR	5320612	ExpressionStatement	head = result	57:3:1259:1272	5320501	1	True				
ANR	5320613	AssignmentExpression	head = result		5320501	0		=			
ANR	5320614	Identifier	head		5320501	0					
ANR	5320615	Identifier	result		5320501	1					
ANR	5320616	ExpressionStatement	head -> p = NULL	58:3:1277:1291	5320501	2	True				
ANR	5320617	AssignmentExpression	head -> p = NULL		5320501	0		=			
ANR	5320618	PtrMemberAccess	head -> p		5320501	0					
ANR	5320619	Identifier	head		5320501	0					
ANR	5320620	Identifier	p		5320501	1					
ANR	5320621	Identifier	NULL		5320501	1					
ANR	5320622	ElseStatement	else		5320501	0					
ANR	5320623	CompoundStatement		21:9:429:429	5320501	0					
ANR	5320624	ExpressionStatement	result -> n = next	60:3:1307:1323	5320501	0	True				
ANR	5320625	AssignmentExpression	result -> n = next		5320501	0		=			
ANR	5320626	PtrMemberAccess	result -> n		5320501	0					
ANR	5320627	Identifier	result		5320501	0					
ANR	5320628	Identifier	n		5320501	1					
ANR	5320629	Identifier	next		5320501	1					
ANR	5320630	ExpressionStatement	next -> p = result	61:3:1328:1344	5320501	1	True				
ANR	5320631	AssignmentExpression	next -> p = result		5320501	0		=			
ANR	5320632	PtrMemberAccess	next -> p		5320501	0					
ANR	5320633	Identifier	next		5320501	0					
ANR	5320634	Identifier	p		5320501	1					
ANR	5320635	Identifier	result		5320501	1					
ANR	5320636	ExpressionStatement	result = result -> n	62:3:1349:1367	5320501	2	True				
ANR	5320637	AssignmentExpression	result = result -> n		5320501	0		=			
ANR	5320638	Identifier	result		5320501	0					
ANR	5320639	PtrMemberAccess	result -> n		5320501	1					
ANR	5320640	Identifier	result		5320501	0					
ANR	5320641	Identifier	n		5320501	1					
ANR	5320642	ExpressionStatement	head -> p = NULL	65:1:1377:1391	5320501	2	True				
ANR	5320643	AssignmentExpression	head -> p = NULL		5320501	0		=			
ANR	5320644	PtrMemberAccess	head -> p		5320501	0					
ANR	5320645	Identifier	head		5320501	0					
ANR	5320646	Identifier	p		5320501	1					
ANR	5320647	Identifier	NULL		5320501	1					
ANR	5320648	ExpressionStatement	next -> n = NULL	66:1:1394:1408	5320501	3	True				
ANR	5320649	AssignmentExpression	next -> n = NULL		5320501	0		=			
ANR	5320650	PtrMemberAccess	next -> n		5320501	0					
ANR	5320651	Identifier	next		5320501	0					
ANR	5320652	Identifier	n		5320501	1					
ANR	5320653	Identifier	NULL		5320501	1					
ANR	5320654	ReturnStatement	return head ;	67:1:1411:1422	5320501	4	True				
ANR	5320655	Identifier	head		5320501	0					
ANR	5320656	ReturnType	static SdbListIter *		5320501	1					
ANR	5320657	Identifier	_merge		5320501	2					
ANR	5320658	ParameterList	"SdbListIter * first , SdbListIter * second , SdbListComparator cmp"		5320501	3					
ANR	5320659	Parameter	SdbListIter * first	39:27:808:825	5320501	0	True				
ANR	5320660	ParameterType	SdbListIter *		5320501	0					
ANR	5320661	Identifier	first		5320501	1					
ANR	5320662	Parameter	SdbListIter * second	39:47:828:846	5320501	1	True				
ANR	5320663	ParameterType	SdbListIter *		5320501	0					
ANR	5320664	Identifier	second		5320501	1					
ANR	5320665	Parameter	SdbListComparator cmp	39:68:849:869	5320501	2	True				
ANR	5320666	ParameterType	SdbListComparator		5320501	0					
ANR	5320667	Identifier	cmp		5320501	1					
ANR	5320668	CFGEntryNode	ENTRY		5320501		True				
ANR	5320669	CFGExitNode	EXIT		5320501		True				
ANR	5320670	Symbol	next		5320501						
ANR	5320671	Symbol	NULL		5320501						
ANR	5320672	Symbol	result -> n		5320501						
ANR	5320673	Symbol	cmp		5320501						
ANR	5320674	Symbol	* head		5320501						
ANR	5320675	Symbol	* next		5320501						
ANR	5320676	Symbol	first -> data		5320501						
ANR	5320677	Symbol	second		5320501						
ANR	5320678	Symbol	result		5320501						
ANR	5320679	Symbol	head		5320501						
ANR	5320680	Symbol	second -> n		5320501						
ANR	5320681	Symbol	* first		5320501						
ANR	5320682	Symbol	* result		5320501						
ANR	5320683	Symbol	second -> data		5320501						
ANR	5320684	Symbol	next -> n		5320501						
ANR	5320685	Symbol	next -> p		5320501						
ANR	5320686	Symbol	head -> p		5320501						
ANR	5320687	Symbol	first		5320501						
ANR	5320688	Symbol	first -> n		5320501						
ANR	5320689	Symbol	* second		5320501						
ANR	5320690	Function	_sdb_list_split	70:0:1427:1746							
ANR	5320691	FunctionDef	_sdb_list_split (SdbListIter * head)		5320690	0					
ANR	5320692	CompoundStatement		70:56:1483:1746	5320690	0					
ANR	5320693	IdentifierDeclStatement	SdbListIter * tmp ;	71:1:1486:1502	5320690	0	True				
ANR	5320694	IdentifierDecl	* tmp		5320690	0					
ANR	5320695	IdentifierDeclType	SdbListIter *		5320690	0					
ANR	5320696	Identifier	tmp		5320690	1					
ANR	5320697	IdentifierDeclStatement	SdbListIter * fast ;	72:1:1505:1522	5320690	1	True				
ANR	5320698	IdentifierDecl	* fast		5320690	0					
ANR	5320699	IdentifierDeclType	SdbListIter *		5320690	0					
ANR	5320700	Identifier	fast		5320690	1					
ANR	5320701	IdentifierDeclStatement	SdbListIter * slow ;	73:1:1525:1542	5320690	2	True				
ANR	5320702	IdentifierDecl	* slow		5320690	0					
ANR	5320703	IdentifierDeclType	SdbListIter *		5320690	0					
ANR	5320704	Identifier	slow		5320690	1					
ANR	5320705	IfStatement	if ( ! head || ! head -> n )		5320690	3					
ANR	5320706	Condition	! head || ! head -> n	74:5:1549:1565	5320690	0	True				
ANR	5320707	OrExpression	! head || ! head -> n		5320690	0		||			
ANR	5320708	UnaryOperationExpression	! head		5320690	0					
ANR	5320709	UnaryOperator	!		5320690	0					
ANR	5320710	Identifier	head		5320690	1					
ANR	5320711	UnaryOperationExpression	! head -> n		5320690	1					
ANR	5320712	UnaryOperator	!		5320690	0					
ANR	5320713	PtrMemberAccess	head -> n		5320690	1					
ANR	5320714	Identifier	head		5320690	0					
ANR	5320715	Identifier	n		5320690	1					
ANR	5320716	CompoundStatement		5:24:84:84	5320690	1					
ANR	5320717	ReturnStatement	return head ;	75:2:1572:1583	5320690	0	True				
ANR	5320718	Identifier	head		5320690	0					
ANR	5320719	ExpressionStatement	slow = head	77:1:1590:1601	5320690	4	True				
ANR	5320720	AssignmentExpression	slow = head		5320690	0		=			
ANR	5320721	Identifier	slow		5320690	0					
ANR	5320722	Identifier	head		5320690	1					
ANR	5320723	ExpressionStatement	fast = head	78:1:1604:1615	5320690	5	True				
ANR	5320724	AssignmentExpression	fast = head		5320690	0		=			
ANR	5320725	Identifier	fast		5320690	0					
ANR	5320726	Identifier	head		5320690	1					
ANR	5320727	WhileStatement	while ( fast && fast -> n && fast -> n -> n )		5320690	6					
ANR	5320728	Condition	fast && fast -> n && fast -> n -> n	79:8:1625:1653	5320690	0	True				
ANR	5320729	AndExpression	fast && fast -> n && fast -> n -> n		5320690	0		&&			
ANR	5320730	Identifier	fast		5320690	0					
ANR	5320731	AndExpression	fast -> n && fast -> n -> n		5320690	1		&&			
ANR	5320732	PtrMemberAccess	fast -> n		5320690	0					
ANR	5320733	Identifier	fast		5320690	0					
ANR	5320734	Identifier	n		5320690	1					
ANR	5320735	PtrMemberAccess	fast -> n -> n		5320690	1					
ANR	5320736	PtrMemberAccess	fast -> n		5320690	0					
ANR	5320737	Identifier	fast		5320690	0					
ANR	5320738	Identifier	n		5320690	1					
ANR	5320739	Identifier	n		5320690	1					
ANR	5320740	CompoundStatement		10:39:172:172	5320690	1					
ANR	5320741	ExpressionStatement	fast = fast -> n -> n	80:2:1660:1677	5320690	0	True				
ANR	5320742	AssignmentExpression	fast = fast -> n -> n		5320690	0		=			
ANR	5320743	Identifier	fast		5320690	0					
ANR	5320744	PtrMemberAccess	fast -> n -> n		5320690	1					
ANR	5320745	PtrMemberAccess	fast -> n		5320690	0					
ANR	5320746	Identifier	fast		5320690	0					
ANR	5320747	Identifier	n		5320690	1					
ANR	5320748	Identifier	n		5320690	1					
ANR	5320749	ExpressionStatement	slow = slow -> n	81:2:1681:1695	5320690	1	True				
ANR	5320750	AssignmentExpression	slow = slow -> n		5320690	0		=			
ANR	5320751	Identifier	slow		5320690	0					
ANR	5320752	PtrMemberAccess	slow -> n		5320690	1					
ANR	5320753	Identifier	slow		5320690	0					
ANR	5320754	Identifier	n		5320690	1					
ANR	5320755	ExpressionStatement	tmp = slow -> n	83:1:1701:1714	5320690	7	True				
ANR	5320756	AssignmentExpression	tmp = slow -> n		5320690	0		=			
ANR	5320757	Identifier	tmp		5320690	0					
ANR	5320758	PtrMemberAccess	slow -> n		5320690	1					
ANR	5320759	Identifier	slow		5320690	0					
ANR	5320760	Identifier	n		5320690	1					
ANR	5320761	ExpressionStatement	slow -> n = NULL	84:1:1717:1731	5320690	8	True				
ANR	5320762	AssignmentExpression	slow -> n = NULL		5320690	0		=			
ANR	5320763	PtrMemberAccess	slow -> n		5320690	0					
ANR	5320764	Identifier	slow		5320690	0					
ANR	5320765	Identifier	n		5320690	1					
ANR	5320766	Identifier	NULL		5320690	1					
ANR	5320767	ReturnStatement	return tmp ;	85:1:1734:1744	5320690	9	True				
ANR	5320768	Identifier	tmp		5320690	0					
ANR	5320769	ReturnType	static SdbListIter *		5320690	1					
ANR	5320770	Identifier	_sdb_list_split		5320690	2					
ANR	5320771	ParameterList	SdbListIter * head		5320690	3					
ANR	5320772	Parameter	SdbListIter * head	70:37:1464:1480	5320690	0	True				
ANR	5320773	ParameterType	SdbListIter *		5320690	0					
ANR	5320774	Identifier	head		5320690	1					
ANR	5320775	CFGEntryNode	ENTRY		5320690		True				
ANR	5320776	CFGExitNode	EXIT		5320690		True				
ANR	5320777	Symbol	head -> n		5320690						
ANR	5320778	Symbol	NULL		5320690						
ANR	5320779	Symbol	slow -> n		5320690						
ANR	5320780	Symbol	* head		5320690						
ANR	5320781	Symbol	* fast		5320690						
ANR	5320782	Symbol	* fast -> n		5320690						
ANR	5320783	Symbol	fast -> n		5320690						
ANR	5320784	Symbol	head		5320690						
ANR	5320785	Symbol	fast		5320690						
ANR	5320786	Symbol	* slow		5320690						
ANR	5320787	Symbol	slow		5320690						
ANR	5320788	Symbol	tmp		5320690						
ANR	5320789	Symbol	fast -> n -> n		5320690						
ANR	5320790	Symbol	* * fast		5320690						
ANR	5320791	Function	_merge_sort	88:0:1749:2032							
ANR	5320792	FunctionDef	"_merge_sort (SdbListIter * head , SdbListComparator cmp)"		5320791	0					
ANR	5320793	CompoundStatement		88:75:1824:2032	5320791	0					
ANR	5320794	IdentifierDeclStatement	SdbListIter * second ;	89:1:1827:1846	5320791	0	True				
ANR	5320795	IdentifierDecl	* second		5320791	0					
ANR	5320796	IdentifierDeclType	SdbListIter *		5320791	0					
ANR	5320797	Identifier	second		5320791	1					
ANR	5320798	IfStatement	if ( ! head || ! head -> n )		5320791	1					
ANR	5320799	Condition	! head || ! head -> n	90:5:1853:1869	5320791	0	True				
ANR	5320800	OrExpression	! head || ! head -> n		5320791	0		||			
ANR	5320801	UnaryOperationExpression	! head		5320791	0					
ANR	5320802	UnaryOperator	!		5320791	0					
ANR	5320803	Identifier	head		5320791	1					
ANR	5320804	UnaryOperationExpression	! head -> n		5320791	1					
ANR	5320805	UnaryOperator	!		5320791	0					
ANR	5320806	PtrMemberAccess	head -> n		5320791	1					
ANR	5320807	Identifier	head		5320791	0					
ANR	5320808	Identifier	n		5320791	1					
ANR	5320809	CompoundStatement		3:24:47:47	5320791	1					
ANR	5320810	ReturnStatement	return head ;	91:2:1876:1887	5320791	0	True				
ANR	5320811	Identifier	head		5320791	0					
ANR	5320812	ExpressionStatement	second = _sdb_list_split ( head )	93:1:1893:1924	5320791	2	True				
ANR	5320813	AssignmentExpression	second = _sdb_list_split ( head )		5320791	0		=			
ANR	5320814	Identifier	second		5320791	0					
ANR	5320815	CallExpression	_sdb_list_split ( head )		5320791	1					
ANR	5320816	Callee	_sdb_list_split		5320791	0					
ANR	5320817	Identifier	_sdb_list_split		5320791	0					
ANR	5320818	ArgumentList	head		5320791	1					
ANR	5320819	Argument	head		5320791	0					
ANR	5320820	Identifier	head		5320791	0					
ANR	5320821	ExpressionStatement	"head = _merge_sort ( head , cmp )"	94:1:1927:1957	5320791	3	True				
ANR	5320822	AssignmentExpression	"head = _merge_sort ( head , cmp )"		5320791	0		=			
ANR	5320823	Identifier	head		5320791	0					
ANR	5320824	CallExpression	"_merge_sort ( head , cmp )"		5320791	1					
ANR	5320825	Callee	_merge_sort		5320791	0					
ANR	5320826	Identifier	_merge_sort		5320791	0					
ANR	5320827	ArgumentList	head		5320791	1					
ANR	5320828	Argument	head		5320791	0					
ANR	5320829	Identifier	head		5320791	0					
ANR	5320830	Argument	cmp		5320791	1					
ANR	5320831	Identifier	cmp		5320791	0					
ANR	5320832	ExpressionStatement	"second = _merge_sort ( second , cmp )"	95:1:1960:1994	5320791	4	True				
ANR	5320833	AssignmentExpression	"second = _merge_sort ( second , cmp )"		5320791	0		=			
ANR	5320834	Identifier	second		5320791	0					
ANR	5320835	CallExpression	"_merge_sort ( second , cmp )"		5320791	1					
ANR	5320836	Callee	_merge_sort		5320791	0					
ANR	5320837	Identifier	_merge_sort		5320791	0					
ANR	5320838	ArgumentList	second		5320791	1					
ANR	5320839	Argument	second		5320791	0					
ANR	5320840	Identifier	second		5320791	0					
ANR	5320841	Argument	cmp		5320791	1					
ANR	5320842	Identifier	cmp		5320791	0					
ANR	5320843	ReturnStatement	"return _merge ( head , second , cmp ) ;"	96:1:1997:2030	5320791	5	True				
ANR	5320844	CallExpression	"_merge ( head , second , cmp )"		5320791	0					
ANR	5320845	Callee	_merge		5320791	0					
ANR	5320846	Identifier	_merge		5320791	0					
ANR	5320847	ArgumentList	head		5320791	1					
ANR	5320848	Argument	head		5320791	0					
ANR	5320849	Identifier	head		5320791	0					
ANR	5320850	Argument	second		5320791	1					
ANR	5320851	Identifier	second		5320791	0					
ANR	5320852	Argument	cmp		5320791	2					
ANR	5320853	Identifier	cmp		5320791	0					
ANR	5320854	ReturnType	static SdbListIter *		5320791	1					
ANR	5320855	Identifier	_merge_sort		5320791	2					
ANR	5320856	ParameterList	"SdbListIter * head , SdbListComparator cmp"		5320791	3					
ANR	5320857	Parameter	SdbListIter * head	88:33:1782:1798	5320791	0	True				
ANR	5320858	ParameterType	SdbListIter *		5320791	0					
ANR	5320859	Identifier	head		5320791	1					
ANR	5320860	Parameter	SdbListComparator cmp	88:52:1801:1821	5320791	1	True				
ANR	5320861	ParameterType	SdbListComparator		5320791	0					
ANR	5320862	Identifier	cmp		5320791	1					
ANR	5320863	CFGEntryNode	ENTRY		5320791		True				
ANR	5320864	CFGExitNode	EXIT		5320791		True				
ANR	5320865	Symbol	head		5320791						
ANR	5320866	Symbol	_merge_sort		5320791						
ANR	5320867	Symbol	head -> n		5320791						
ANR	5320868	Symbol	_merge		5320791						
ANR	5320869	Symbol	cmp		5320791						
ANR	5320870	Symbol	* head		5320791						
ANR	5320871	Symbol	_sdb_list_split		5320791						
ANR	5320872	Symbol	second		5320791						
ANR	5320873	Function	ls_merge_sort	99:0:2035:2394							
ANR	5320874	FunctionDef	"ls_merge_sort (SdbList * list , SdbListComparator cmp)"		5320873	0					
ANR	5320875	CompoundStatement		99:65:2100:2394	5320873	0					
ANR	5320876	IfStatement	if ( ! cmp )		5320873	0					
ANR	5320877	Condition	! cmp	100:5:2107:2110	5320873	0	True				
ANR	5320878	UnaryOperationExpression	! cmp		5320873	0					
ANR	5320879	UnaryOperator	!		5320873	0					
ANR	5320880	Identifier	cmp		5320873	1					
ANR	5320881	CompoundStatement		2:11:12:12	5320873	1					
ANR	5320882	ReturnStatement	return false ;	101:2:2117:2129	5320873	0	True				
ANR	5320883	Identifier	false		5320873	0					
ANR	5320884	IfStatement	if ( list && list -> head && cmp )		5320873	1					
ANR	5320885	Condition	list && list -> head && cmp	103:5:2139:2163	5320873	0	True				
ANR	5320886	AndExpression	list && list -> head && cmp		5320873	0		&&			
ANR	5320887	Identifier	list		5320873	0					
ANR	5320888	AndExpression	list -> head && cmp		5320873	1		&&			
ANR	5320889	PtrMemberAccess	list -> head		5320873	0					
ANR	5320890	Identifier	list		5320873	0					
ANR	5320891	Identifier	head		5320873	1					
ANR	5320892	Identifier	cmp		5320873	1					
ANR	5320893	CompoundStatement		6:2:69:86	5320873	1					
ANR	5320894	IdentifierDeclStatement	SdbListIter * iter ;	104:2:2170:2187	5320873	0	True				
ANR	5320895	IdentifierDecl	* iter		5320873	0					
ANR	5320896	IdentifierDeclType	SdbListIter *		5320873	0					
ANR	5320897	Identifier	iter		5320873	1					
ANR	5320898	ExpressionStatement	"list -> head = _merge_sort ( list -> head , cmp )"	105:2:2191:2233	5320873	1	True				
ANR	5320899	AssignmentExpression	"list -> head = _merge_sort ( list -> head , cmp )"		5320873	0		=			
ANR	5320900	PtrMemberAccess	list -> head		5320873	0					
ANR	5320901	Identifier	list		5320873	0					
ANR	5320902	Identifier	head		5320873	1					
ANR	5320903	CallExpression	"_merge_sort ( list -> head , cmp )"		5320873	1					
ANR	5320904	Callee	_merge_sort		5320873	0					
ANR	5320905	Identifier	_merge_sort		5320873	0					
ANR	5320906	ArgumentList	list -> head		5320873	1					
ANR	5320907	Argument	list -> head		5320873	0					
ANR	5320908	PtrMemberAccess	list -> head		5320873	0					
ANR	5320909	Identifier	list		5320873	0					
ANR	5320910	Identifier	head		5320873	1					
ANR	5320911	Argument	cmp		5320873	1					
ANR	5320912	Identifier	cmp		5320873	0					
ANR	5320913	ExpressionStatement	iter = list -> head	107:2:2263:2280	5320873	2	True				
ANR	5320914	AssignmentExpression	iter = list -> head		5320873	0		=			
ANR	5320915	Identifier	iter		5320873	0					
ANR	5320916	PtrMemberAccess	list -> head		5320873	1					
ANR	5320917	Identifier	list		5320873	0					
ANR	5320918	Identifier	head		5320873	1					
ANR	5320919	WhileStatement	while ( iter && iter -> n )		5320873	3					
ANR	5320920	Condition	iter && iter -> n	108:9:2291:2305	5320873	0	True				
ANR	5320921	AndExpression	iter && iter -> n		5320873	0		&&			
ANR	5320922	Identifier	iter		5320873	0					
ANR	5320923	PtrMemberAccess	iter -> n		5320873	1					
ANR	5320924	Identifier	iter		5320873	0					
ANR	5320925	Identifier	n		5320873	1					
ANR	5320926	CompoundStatement		10:26:207:207	5320873	1					
ANR	5320927	ExpressionStatement	iter = iter -> n	109:3:2313:2327	5320873	0	True				
ANR	5320928	AssignmentExpression	iter = iter -> n		5320873	0		=			
ANR	5320929	Identifier	iter		5320873	0					
ANR	5320930	PtrMemberAccess	iter -> n		5320873	1					
ANR	5320931	Identifier	iter		5320873	0					
ANR	5320932	Identifier	n		5320873	1					
ANR	5320933	ExpressionStatement	list -> tail = iter	111:2:2335:2352	5320873	4	True				
ANR	5320934	AssignmentExpression	list -> tail = iter		5320873	0		=			
ANR	5320935	PtrMemberAccess	list -> tail		5320873	0					
ANR	5320936	Identifier	list		5320873	0					
ANR	5320937	Identifier	tail		5320873	1					
ANR	5320938	Identifier	iter		5320873	1					
ANR	5320939	ExpressionStatement	list -> sorted = true	112:2:2356:2375	5320873	5	True				
ANR	5320940	AssignmentExpression	list -> sorted = true		5320873	0		=			
ANR	5320941	PtrMemberAccess	list -> sorted		5320873	0					
ANR	5320942	Identifier	list		5320873	0					
ANR	5320943	Identifier	sorted		5320873	1					
ANR	5320944	Identifier	true		5320873	1					
ANR	5320945	ReturnStatement	return true ;	114:1:2381:2392	5320873	2	True				
ANR	5320946	Identifier	true		5320873	0					
ANR	5320947	ReturnType	SDB_API bool		5320873	1					
ANR	5320948	Identifier	ls_merge_sort		5320873	2					
ANR	5320949	ParameterList	"SdbList * list , SdbListComparator cmp"		5320873	3					
ANR	5320950	Parameter	SdbList * list	99:27:2062:2074	5320873	0	True				
ANR	5320951	ParameterType	SdbList *		5320873	0					
ANR	5320952	Identifier	list		5320873	1					
ANR	5320953	Parameter	SdbListComparator cmp	99:42:2077:2097	5320873	1	True				
ANR	5320954	ParameterType	SdbListComparator		5320873	0					
ANR	5320955	Identifier	cmp		5320873	1					
ANR	5320956	CFGEntryNode	ENTRY		5320873		True				
ANR	5320957	CFGExitNode	EXIT		5320873		True				
ANR	5320958	Symbol	list -> head		5320873						
ANR	5320959	Symbol	_merge_sort		5320873						
ANR	5320960	Symbol	* iter		5320873						
ANR	5320961	Symbol	* list		5320873						
ANR	5320962	Symbol	cmp		5320873						
ANR	5320963	Symbol	iter -> n		5320873						
ANR	5320964	Symbol	false		5320873						
ANR	5320965	Symbol	true		5320873						
ANR	5320966	Symbol	list -> sorted		5320873						
ANR	5320967	Symbol	iter		5320873						
ANR	5320968	Symbol	list		5320873						
ANR	5320969	Symbol	list -> tail		5320873						
ANR	5320970	Function	ls_sort	117:0:2397:2665							
ANR	5320971	FunctionDef	"ls_sort (SdbList * list , SdbListComparator cmp)"		5320970	0					
ANR	5320972	CompoundStatement		117:59:2456:2665	5320970	0					
ANR	5320973	IfStatement	if ( ! cmp || list -> cmp == cmp )		5320970	0					
ANR	5320974	Condition	! cmp || list -> cmp == cmp	118:5:2463:2486	5320970	0	True				
ANR	5320975	OrExpression	! cmp || list -> cmp == cmp		5320970	0		||			
ANR	5320976	UnaryOperationExpression	! cmp		5320970	0					
ANR	5320977	UnaryOperator	!		5320970	0					
ANR	5320978	Identifier	cmp		5320970	1					
ANR	5320979	EqualityExpression	list -> cmp == cmp		5320970	1		==			
ANR	5320980	PtrMemberAccess	list -> cmp		5320970	0					
ANR	5320981	Identifier	list		5320970	0					
ANR	5320982	Identifier	cmp		5320970	1					
ANR	5320983	Identifier	cmp		5320970	1					
ANR	5320984	CompoundStatement		2:31:32:32	5320970	1					
ANR	5320985	ReturnStatement	return false ;	119:2:2493:2505	5320970	0	True				
ANR	5320986	Identifier	false		5320970	0					
ANR	5320987	IfStatement	if ( list -> length > 43 )		5320970	1					
ANR	5320988	Condition	list -> length > 43	121:5:2515:2531	5320970	0	True				
ANR	5320989	RelationalExpression	list -> length > 43		5320970	0		>			
ANR	5320990	PtrMemberAccess	list -> length		5320970	0					
ANR	5320991	Identifier	list		5320970	0					
ANR	5320992	Identifier	length		5320970	1					
ANR	5320993	PrimaryExpression	43		5320970	1					
ANR	5320994	CompoundStatement		5:24:77:77	5320970	1					
ANR	5320995	ExpressionStatement	"ls_merge_sort ( list , cmp )"	122:2:2538:2563	5320970	0	True				
ANR	5320996	CallExpression	"ls_merge_sort ( list , cmp )"		5320970	0					
ANR	5320997	Callee	ls_merge_sort		5320970	0					
ANR	5320998	Identifier	ls_merge_sort		5320970	0					
ANR	5320999	ArgumentList	list		5320970	1					
ANR	5321000	Argument	list		5320970	0					
ANR	5321001	Identifier	list		5320970	0					
ANR	5321002	Argument	cmp		5320970	1					
ANR	5321003	Identifier	cmp		5320970	0					
ANR	5321004	ElseStatement	else		5320970	0					
ANR	5321005	CompoundStatement		7:8:116:116	5320970	0					
ANR	5321006	ExpressionStatement	"ls_insertion_sort ( list , cmp )"	124:2:2577:2606	5320970	0	True				
ANR	5321007	CallExpression	"ls_insertion_sort ( list , cmp )"		5320970	0					
ANR	5321008	Callee	ls_insertion_sort		5320970	0					
ANR	5321009	Identifier	ls_insertion_sort		5320970	0					
ANR	5321010	ArgumentList	list		5320970	1					
ANR	5321011	Argument	list		5320970	0					
ANR	5321012	Identifier	list		5320970	0					
ANR	5321013	Argument	cmp		5320970	1					
ANR	5321014	Identifier	cmp		5320970	0					
ANR	5321015	ExpressionStatement	list -> cmp = cmp	126:1:2612:2627	5320970	2	True				
ANR	5321016	AssignmentExpression	list -> cmp = cmp		5320970	0		=			
ANR	5321017	PtrMemberAccess	list -> cmp		5320970	0					
ANR	5321018	Identifier	list		5320970	0					
ANR	5321019	Identifier	cmp		5320970	1					
ANR	5321020	Identifier	cmp		5320970	1					
ANR	5321021	ExpressionStatement	list -> sorted = true	127:1:2630:2649	5320970	3	True				
ANR	5321022	AssignmentExpression	list -> sorted = true		5320970	0		=			
ANR	5321023	PtrMemberAccess	list -> sorted		5320970	0					
ANR	5321024	Identifier	list		5320970	0					
ANR	5321025	Identifier	sorted		5320970	1					
ANR	5321026	Identifier	true		5320970	1					
ANR	5321027	ReturnStatement	return true ;	128:1:2652:2663	5320970	4	True				
ANR	5321028	Identifier	true		5320970	0					
ANR	5321029	ReturnType	SDB_API bool		5320970	1					
ANR	5321030	Identifier	ls_sort		5320970	2					
ANR	5321031	ParameterList	"SdbList * list , SdbListComparator cmp"		5320970	3					
ANR	5321032	Parameter	SdbList * list	117:21:2418:2430	5320970	0	True				
ANR	5321033	ParameterType	SdbList *		5320970	0					
ANR	5321034	Identifier	list		5320970	1					
ANR	5321035	Parameter	SdbListComparator cmp	117:36:2433:2453	5320970	1	True				
ANR	5321036	ParameterType	SdbListComparator		5320970	0					
ANR	5321037	Identifier	cmp		5320970	1					
ANR	5321038	CFGEntryNode	ENTRY		5320970		True				
ANR	5321039	CFGExitNode	EXIT		5320970		True				
ANR	5321040	Symbol	list -> length		5320970						
ANR	5321041	Symbol	* list		5320970						
ANR	5321042	Symbol	list -> cmp		5320970						
ANR	5321043	Symbol	cmp		5320970						
ANR	5321044	Symbol	false		5320970						
ANR	5321045	Symbol	list -> sorted		5320970						
ANR	5321046	Symbol	true		5320970						
ANR	5321047	Symbol	list		5320970						
ANR	5321048	Function	ls_delete	131:0:2668:2890							
ANR	5321049	FunctionDef	"ls_delete (SdbList * list , SdbListIter * iter)"		5321048	0					
ANR	5321050	CompoundStatement		131:57:2725:2890	5321048	0					
ANR	5321051	IfStatement	if ( ! list || ! iter )		5321048	0					
ANR	5321052	Condition	! list || ! iter	132:5:2732:2745	5321048	0	True				
ANR	5321053	OrExpression	! list || ! iter		5321048	0		||			
ANR	5321054	UnaryOperationExpression	! list		5321048	0					
ANR	5321055	UnaryOperator	!		5321048	0					
ANR	5321056	Identifier	list		5321048	1					
ANR	5321057	UnaryOperationExpression	! iter		5321048	1					
ANR	5321058	UnaryOperator	!		5321048	0					
ANR	5321059	Identifier	iter		5321048	1					
ANR	5321060	CompoundStatement		2:21:22:22	5321048	1					
ANR	5321061	ReturnStatement	return ;	133:2:2752:2758	5321048	0	True				
ANR	5321062	ExpressionStatement	"ls_split_iter ( list , iter )"	135:1:2764:2790	5321048	1	True				
ANR	5321063	CallExpression	"ls_split_iter ( list , iter )"		5321048	0					
ANR	5321064	Callee	ls_split_iter		5321048	0					
ANR	5321065	Identifier	ls_split_iter		5321048	0					
ANR	5321066	ArgumentList	list		5321048	1					
ANR	5321067	Argument	list		5321048	0					
ANR	5321068	Identifier	list		5321048	0					
ANR	5321069	Argument	iter		5321048	1					
ANR	5321070	Identifier	iter		5321048	0					
ANR	5321071	IfStatement	if ( list -> free && iter -> data )		5321048	2					
ANR	5321072	Condition	list -> free && iter -> data	136:5:2797:2820	5321048	0	True				
ANR	5321073	AndExpression	list -> free && iter -> data		5321048	0		&&			
ANR	5321074	PtrMemberAccess	list -> free		5321048	0					
ANR	5321075	Identifier	list		5321048	0					
ANR	5321076	Identifier	free		5321048	1					
ANR	5321077	PtrMemberAccess	iter -> data		5321048	1					
ANR	5321078	Identifier	iter		5321048	0					
ANR	5321079	Identifier	data		5321048	1					
ANR	5321080	CompoundStatement		6:31:97:97	5321048	1					
ANR	5321081	ExpressionStatement	list -> free ( iter -> data )	137:2:2827:2850	5321048	0	True				
ANR	5321082	CallExpression	list -> free ( iter -> data )		5321048	0					
ANR	5321083	Callee	list -> free		5321048	0					
ANR	5321084	PtrMemberAccess	list -> free		5321048	0					
ANR	5321085	Identifier	list		5321048	0					
ANR	5321086	Identifier	free		5321048	1					
ANR	5321087	ArgumentList	iter -> data		5321048	1					
ANR	5321088	Argument	iter -> data		5321048	0					
ANR	5321089	PtrMemberAccess	iter -> data		5321048	0					
ANR	5321090	Identifier	iter		5321048	0					
ANR	5321091	Identifier	data		5321048	1					
ANR	5321092	ExpressionStatement	iter -> data = NULL	138:2:2854:2871	5321048	1	True				
ANR	5321093	AssignmentExpression	iter -> data = NULL		5321048	0		=			
ANR	5321094	PtrMemberAccess	iter -> data		5321048	0					
ANR	5321095	Identifier	iter		5321048	0					
ANR	5321096	Identifier	data		5321048	1					
ANR	5321097	Identifier	NULL		5321048	1					
ANR	5321098	ExpressionStatement	free ( iter )	140:1:2877:2888	5321048	3	True				
ANR	5321099	CallExpression	free ( iter )		5321048	0					
ANR	5321100	Callee	free		5321048	0					
ANR	5321101	Identifier	free		5321048	0					
ANR	5321102	ArgumentList	iter		5321048	1					
ANR	5321103	Argument	iter		5321048	0					
ANR	5321104	Identifier	iter		5321048	0					
ANR	5321105	ReturnType	SDB_API void		5321048	1					
ANR	5321106	Identifier	ls_delete		5321048	2					
ANR	5321107	ParameterList	"SdbList * list , SdbListIter * iter"		5321048	3					
ANR	5321108	Parameter	SdbList * list	131:23:2691:2703	5321048	0	True				
ANR	5321109	ParameterType	SdbList *		5321048	0					
ANR	5321110	Identifier	list		5321048	1					
ANR	5321111	Parameter	SdbListIter * iter	131:38:2706:2722	5321048	1	True				
ANR	5321112	ParameterType	SdbListIter *		5321048	0					
ANR	5321113	Identifier	iter		5321048	1					
ANR	5321114	CFGEntryNode	ENTRY		5321048		True				
ANR	5321115	CFGExitNode	EXIT		5321048		True				
ANR	5321116	Symbol	* iter		5321048						
ANR	5321117	Symbol	NULL		5321048						
ANR	5321118	Symbol	* list		5321048						
ANR	5321119	Symbol	list -> free		5321048						
ANR	5321120	Symbol	iter		5321048						
ANR	5321121	Symbol	list		5321048						
ANR	5321122	Symbol	iter -> data		5321048						
ANR	5321123	Function	ls_delete_data	143:0:2893:3098							
ANR	5321124	FunctionDef	"ls_delete_data (SdbList * list , void * ptr)"		5321123	0					
ANR	5321125	CompoundStatement		143:54:2947:3098	5321123	0					
ANR	5321126	IdentifierDeclStatement	void * kvp ;	144:1:2950:2959	5321123	0	True				
ANR	5321127	IdentifierDecl	* kvp		5321123	0					
ANR	5321128	IdentifierDeclType	void *		5321123	0					
ANR	5321129	Identifier	kvp		5321123	1					
ANR	5321130	IdentifierDeclStatement	SdbListIter * iter ;	145:1:2962:2979	5321123	1	True				
ANR	5321131	IdentifierDecl	* iter		5321123	0					
ANR	5321132	IdentifierDeclType	SdbListIter *		5321123	0					
ANR	5321133	Identifier	iter		5321123	1					
ANR	5321134	Statement	ls_foreach	146:1:2982:2991	5321123	2	True				
ANR	5321135	Statement	(	146:12:2993:2993	5321123	3	True				
ANR	5321136	Statement	list	146:13:2994:2997	5321123	4	True				
ANR	5321137	Statement	","	146:17:2998:2998	5321123	5	True				
ANR	5321138	Statement	iter	146:19:3000:3003	5321123	6	True				
ANR	5321139	Statement	","	146:23:3004:3004	5321123	7	True				
ANR	5321140	Statement	kvp	146:25:3006:3008	5321123	8	True				
ANR	5321141	Statement	)	146:28:3009:3009	5321123	9	True				
ANR	5321142	CompoundStatement		4:30:63:63	5321123	10					
ANR	5321143	IfStatement	if ( ptr == kvp )		5321123	0					
ANR	5321144	Condition	ptr == kvp	147:6:3019:3028	5321123	0	True				
ANR	5321145	EqualityExpression	ptr == kvp		5321123	0		==			
ANR	5321146	Identifier	ptr		5321123	0					
ANR	5321147	Identifier	kvp		5321123	1					
ANR	5321148	CompoundStatement		5:18:83:83	5321123	1					
ANR	5321149	ExpressionStatement	"ls_delete ( list , iter )"	148:3:3036:3058	5321123	0	True				
ANR	5321150	CallExpression	"ls_delete ( list , iter )"		5321123	0					
ANR	5321151	Callee	ls_delete		5321123	0					
ANR	5321152	Identifier	ls_delete		5321123	0					
ANR	5321153	ArgumentList	list		5321123	1					
ANR	5321154	Argument	list		5321123	0					
ANR	5321155	Identifier	list		5321123	0					
ANR	5321156	Argument	iter		5321123	1					
ANR	5321157	Identifier	iter		5321123	0					
ANR	5321158	ReturnStatement	return true ;	149:3:3063:3074	5321123	1	True				
ANR	5321159	Identifier	true		5321123	0					
ANR	5321160	ReturnStatement	return false ;	152:1:3084:3096	5321123	11	True				
ANR	5321161	Identifier	false		5321123	0					
ANR	5321162	ReturnType	SDB_API bool		5321123	1					
ANR	5321163	Identifier	ls_delete_data		5321123	2					
ANR	5321164	ParameterList	"SdbList * list , void * ptr"		5321123	3					
ANR	5321165	Parameter	SdbList * list	143:28:2921:2933	5321123	0	True				
ANR	5321166	ParameterType	SdbList *		5321123	0					
ANR	5321167	Identifier	list		5321123	1					
ANR	5321168	Parameter	void * ptr	143:43:2936:2944	5321123	1	True				
ANR	5321169	ParameterType	void *		5321123	0					
ANR	5321170	Identifier	ptr		5321123	1					
ANR	5321171	CFGEntryNode	ENTRY		5321123		True				
ANR	5321172	CFGExitNode	EXIT		5321123		True				
ANR	5321173	Symbol	kvp		5321123						
ANR	5321174	Symbol	true		5321123						
ANR	5321175	Symbol	false		5321123						
ANR	5321176	Symbol	iter		5321123						
ANR	5321177	Symbol	list		5321123						
ANR	5321178	Symbol	ptr		5321123						
ANR	5321179	Function	ls_split_iter	155:0:3101:3411							
ANR	5321180	FunctionDef	"ls_split_iter (SdbList * list , SdbListIter * iter)"		5321179	0					
ANR	5321181	CompoundStatement		155:61:3162:3411	5321179	0					
ANR	5321182	IfStatement	if ( ! list || ! iter )		5321179	0					
ANR	5321183	Condition	! list || ! iter	156:5:3169:3182	5321179	0	True				
ANR	5321184	OrExpression	! list || ! iter		5321179	0		||			
ANR	5321185	UnaryOperationExpression	! list		5321179	0					
ANR	5321186	UnaryOperator	!		5321179	0					
ANR	5321187	Identifier	list		5321179	1					
ANR	5321188	UnaryOperationExpression	! iter		5321179	1					
ANR	5321189	UnaryOperator	!		5321179	0					
ANR	5321190	Identifier	iter		5321179	1					
ANR	5321191	CompoundStatement		2:21:22:22	5321179	1					
ANR	5321192	ReturnStatement	return ;	157:2:3189:3195	5321179	0	True				
ANR	5321193	IfStatement	if ( list -> head == iter )		5321179	1					
ANR	5321194	Condition	list -> head == iter	159:5:3205:3222	5321179	0	True				
ANR	5321195	EqualityExpression	list -> head == iter		5321179	0		==			
ANR	5321196	PtrMemberAccess	list -> head		5321179	0					
ANR	5321197	Identifier	list		5321179	0					
ANR	5321198	Identifier	head		5321179	1					
ANR	5321199	Identifier	iter		5321179	1					
ANR	5321200	CompoundStatement		5:25:62:62	5321179	1					
ANR	5321201	ExpressionStatement	list -> head = iter -> n	160:2:3229:3249	5321179	0	True				
ANR	5321202	AssignmentExpression	list -> head = iter -> n		5321179	0		=			
ANR	5321203	PtrMemberAccess	list -> head		5321179	0					
ANR	5321204	Identifier	list		5321179	0					
ANR	5321205	Identifier	head		5321179	1					
ANR	5321206	PtrMemberAccess	iter -> n		5321179	1					
ANR	5321207	Identifier	iter		5321179	0					
ANR	5321208	Identifier	n		5321179	1					
ANR	5321209	IfStatement	if ( list -> tail == iter )		5321179	2					
ANR	5321210	Condition	list -> tail == iter	162:5:3259:3276	5321179	0	True				
ANR	5321211	EqualityExpression	list -> tail == iter		5321179	0		==			
ANR	5321212	PtrMemberAccess	list -> tail		5321179	0					
ANR	5321213	Identifier	list		5321179	0					
ANR	5321214	Identifier	tail		5321179	1					
ANR	5321215	Identifier	iter		5321179	1					
ANR	5321216	CompoundStatement		8:25:116:116	5321179	1					
ANR	5321217	ExpressionStatement	list -> tail = iter -> p	163:2:3283:3303	5321179	0	True				
ANR	5321218	AssignmentExpression	list -> tail = iter -> p		5321179	0		=			
ANR	5321219	PtrMemberAccess	list -> tail		5321179	0					
ANR	5321220	Identifier	list		5321179	0					
ANR	5321221	Identifier	tail		5321179	1					
ANR	5321222	PtrMemberAccess	iter -> p		5321179	1					
ANR	5321223	Identifier	iter		5321179	0					
ANR	5321224	Identifier	p		5321179	1					
ANR	5321225	IfStatement	if ( iter -> p )		5321179	3					
ANR	5321226	Condition	iter -> p	165:5:3313:3319	5321179	0	True				
ANR	5321227	PtrMemberAccess	iter -> p		5321179	0					
ANR	5321228	Identifier	iter		5321179	0					
ANR	5321229	Identifier	p		5321179	1					
ANR	5321230	CompoundStatement		11:14:159:159	5321179	1					
ANR	5321231	ExpressionStatement	iter -> p -> n = iter -> n	166:2:3326:3346	5321179	0	True				
ANR	5321232	AssignmentExpression	iter -> p -> n = iter -> n		5321179	0		=			
ANR	5321233	PtrMemberAccess	iter -> p -> n		5321179	0					
ANR	5321234	PtrMemberAccess	iter -> p		5321179	0					
ANR	5321235	Identifier	iter		5321179	0					
ANR	5321236	Identifier	p		5321179	1					
ANR	5321237	Identifier	n		5321179	1					
ANR	5321238	PtrMemberAccess	iter -> n		5321179	1					
ANR	5321239	Identifier	iter		5321179	0					
ANR	5321240	Identifier	n		5321179	1					
ANR	5321241	IfStatement	if ( iter -> n )		5321179	4					
ANR	5321242	Condition	iter -> n	168:5:3356:3362	5321179	0	True				
ANR	5321243	PtrMemberAccess	iter -> n		5321179	0					
ANR	5321244	Identifier	iter		5321179	0					
ANR	5321245	Identifier	n		5321179	1					
ANR	5321246	CompoundStatement		14:14:202:202	5321179	1					
ANR	5321247	ExpressionStatement	iter -> n -> p = iter -> p	169:2:3369:3389	5321179	0	True				
ANR	5321248	AssignmentExpression	iter -> n -> p = iter -> p		5321179	0		=			
ANR	5321249	PtrMemberAccess	iter -> n -> p		5321179	0					
ANR	5321250	PtrMemberAccess	iter -> n		5321179	0					
ANR	5321251	Identifier	iter		5321179	0					
ANR	5321252	Identifier	n		5321179	1					
ANR	5321253	Identifier	p		5321179	1					
ANR	5321254	PtrMemberAccess	iter -> p		5321179	1					
ANR	5321255	Identifier	iter		5321179	0					
ANR	5321256	Identifier	p		5321179	1					
ANR	5321257	ExpressionStatement	list -> length --	171:1:3395:3409	5321179	5	True				
ANR	5321258	PostIncDecOperationExpression	list -> length --		5321179	0					
ANR	5321259	PtrMemberAccess	list -> length		5321179	0					
ANR	5321260	Identifier	list		5321179	0					
ANR	5321261	Identifier	length		5321179	1					
ANR	5321262	IncDec	--		5321179	1					
ANR	5321263	ReturnType	SDB_API void		5321179	1					
ANR	5321264	Identifier	ls_split_iter		5321179	2					
ANR	5321265	ParameterList	"SdbList * list , SdbListIter * iter"		5321179	3					
ANR	5321266	Parameter	SdbList * list	155:27:3128:3140	5321179	0	True				
ANR	5321267	ParameterType	SdbList *		5321179	0					
ANR	5321268	Identifier	list		5321179	1					
ANR	5321269	Parameter	SdbListIter * iter	155:42:3143:3159	5321179	1	True				
ANR	5321270	ParameterType	SdbListIter *		5321179	0					
ANR	5321271	Identifier	iter		5321179	1					
ANR	5321272	CFGEntryNode	ENTRY		5321179		True				
ANR	5321273	CFGExitNode	EXIT		5321179		True				
ANR	5321274	Symbol	list -> length		5321179						
ANR	5321275	Symbol	iter		5321179						
ANR	5321276	Symbol	list		5321179						
ANR	5321277	Symbol	iter -> n -> p		5321179						
ANR	5321278	Symbol	list -> head		5321179						
ANR	5321279	Symbol	* iter -> p		5321179						
ANR	5321280	Symbol	* iter		5321179						
ANR	5321281	Symbol	* iter -> n		5321179						
ANR	5321282	Symbol	* list		5321179						
ANR	5321283	Symbol	iter -> n		5321179						
ANR	5321284	Symbol	iter -> p -> n		5321179						
ANR	5321285	Symbol	iter -> p		5321179						
ANR	5321286	Symbol	* * iter		5321179						
ANR	5321287	Symbol	list -> tail		5321179						
ANR	5321288	Function	ls_destroy	174:0:3414:3653							
ANR	5321289	FunctionDef	ls_destroy (SdbList * list)		5321288	0					
ANR	5321290	CompoundStatement		174:39:3453:3653	5321288	0					
ANR	5321291	IdentifierDeclStatement	SdbListIter * it ;	175:1:3456:3471	5321288	0	True				
ANR	5321292	IdentifierDecl	* it		5321288	0					
ANR	5321293	IdentifierDeclType	SdbListIter *		5321288	0					
ANR	5321294	Identifier	it		5321288	1					
ANR	5321295	IfStatement	if ( ! list )		5321288	1					
ANR	5321296	Condition	! list	176:5:3478:3482	5321288	0	True				
ANR	5321297	UnaryOperationExpression	! list		5321288	0					
ANR	5321298	UnaryOperator	!		5321288	0					
ANR	5321299	Identifier	list		5321288	1					
ANR	5321300	CompoundStatement		3:12:31:31	5321288	1					
ANR	5321301	ReturnStatement	return ;	177:2:3489:3495	5321288	0	True				
ANR	5321302	ExpressionStatement	it = list -> head	179:1:3501:3516	5321288	2	True				
ANR	5321303	AssignmentExpression	it = list -> head		5321288	0		=			
ANR	5321304	Identifier	it		5321288	0					
ANR	5321305	PtrMemberAccess	list -> head		5321288	1					
ANR	5321306	Identifier	list		5321288	0					
ANR	5321307	Identifier	head		5321288	1					
ANR	5321308	WhileStatement	while ( it )		5321288	3					
ANR	5321309	Condition	it	180:8:3526:3527	5321288	0	True				
ANR	5321310	Identifier	it		5321288	0					
ANR	5321311	CompoundStatement		8:2:80:105	5321288	1					
ANR	5321312	IdentifierDeclStatement	SdbListIter * next = it -> n ;	181:2:3534:3559	5321288	0	True				
ANR	5321313	IdentifierDecl	* next = it -> n		5321288	0					
ANR	5321314	IdentifierDeclType	SdbListIter *		5321288	0					
ANR	5321315	Identifier	next		5321288	1					
ANR	5321316	AssignmentExpression	* next = it -> n		5321288	2		=			
ANR	5321317	Identifier	next		5321288	0					
ANR	5321318	PtrMemberAccess	it -> n		5321288	1					
ANR	5321319	Identifier	it		5321288	0					
ANR	5321320	Identifier	n		5321288	1					
ANR	5321321	ExpressionStatement	"ls_delete ( list , it )"	182:2:3563:3583	5321288	1	True				
ANR	5321322	CallExpression	"ls_delete ( list , it )"		5321288	0					
ANR	5321323	Callee	ls_delete		5321288	0					
ANR	5321324	Identifier	ls_delete		5321288	0					
ANR	5321325	ArgumentList	list		5321288	1					
ANR	5321326	Argument	list		5321288	0					
ANR	5321327	Identifier	list		5321288	0					
ANR	5321328	Argument	it		5321288	1					
ANR	5321329	Identifier	it		5321288	0					
ANR	5321330	ExpressionStatement	it = next	183:2:3587:3596	5321288	2	True				
ANR	5321331	AssignmentExpression	it = next		5321288	0		=			
ANR	5321332	Identifier	it		5321288	0					
ANR	5321333	Identifier	next		5321288	1					
ANR	5321334	ExpressionStatement	list -> head = list -> tail = NULL	185:1:3602:3632	5321288	4	True				
ANR	5321335	AssignmentExpression	list -> head = list -> tail = NULL		5321288	0		=			
ANR	5321336	PtrMemberAccess	list -> head		5321288	0					
ANR	5321337	Identifier	list		5321288	0					
ANR	5321338	Identifier	head		5321288	1					
ANR	5321339	AssignmentExpression	list -> tail = NULL		5321288	1		=			
ANR	5321340	PtrMemberAccess	list -> tail		5321288	0					
ANR	5321341	Identifier	list		5321288	0					
ANR	5321342	Identifier	tail		5321288	1					
ANR	5321343	Identifier	NULL		5321288	1					
ANR	5321344	ExpressionStatement	list -> length = 0	186:1:3635:3651	5321288	5	True				
ANR	5321345	AssignmentExpression	list -> length = 0		5321288	0		=			
ANR	5321346	PtrMemberAccess	list -> length		5321288	0					
ANR	5321347	Identifier	list		5321288	0					
ANR	5321348	Identifier	length		5321288	1					
ANR	5321349	PrimaryExpression	0		5321288	1					
ANR	5321350	ReturnType	SDB_API void		5321288	1					
ANR	5321351	Identifier	ls_destroy		5321288	2					
ANR	5321352	ParameterList	SdbList * list		5321288	3					
ANR	5321353	Parameter	SdbList * list	174:24:3438:3450	5321288	0	True				
ANR	5321354	ParameterType	SdbList *		5321288	0					
ANR	5321355	Identifier	list		5321288	1					
ANR	5321356	CFGEntryNode	ENTRY		5321288		True				
ANR	5321357	CFGExitNode	EXIT		5321288		True				
ANR	5321358	Symbol	list -> head		5321288						
ANR	5321359	Symbol	next		5321288						
ANR	5321360	Symbol	* it		5321288						
ANR	5321361	Symbol	list -> length		5321288						
ANR	5321362	Symbol	NULL		5321288						
ANR	5321363	Symbol	* list		5321288						
ANR	5321364	Symbol	it		5321288						
ANR	5321365	Symbol	list		5321288						
ANR	5321366	Symbol	it -> n		5321288						
ANR	5321367	Symbol	list -> tail		5321288						
ANR	5321368	Function	ls_free	189:0:3656:3775							
ANR	5321369	FunctionDef	ls_free (SdbList * list)		5321368	0					
ANR	5321370	CompoundStatement		189:36:3692:3775	5321368	0					
ANR	5321371	IfStatement	if ( ! list )		5321368	0					
ANR	5321372	Condition	! list	190:5:3699:3703	5321368	0	True				
ANR	5321373	UnaryOperationExpression	! list		5321368	0					
ANR	5321374	UnaryOperator	!		5321368	0					
ANR	5321375	Identifier	list		5321368	1					
ANR	5321376	CompoundStatement		2:12:13:13	5321368	1					
ANR	5321377	ReturnStatement	return ;	191:2:3710:3716	5321368	0	True				
ANR	5321378	ExpressionStatement	ls_destroy ( list )	193:1:3722:3739	5321368	1	True				
ANR	5321379	CallExpression	ls_destroy ( list )		5321368	0					
ANR	5321380	Callee	ls_destroy		5321368	0					
ANR	5321381	Identifier	ls_destroy		5321368	0					
ANR	5321382	ArgumentList	list		5321368	1					
ANR	5321383	Argument	list		5321368	0					
ANR	5321384	Identifier	list		5321368	0					
ANR	5321385	ExpressionStatement	list -> free = NULL	194:1:3742:3759	5321368	2	True				
ANR	5321386	AssignmentExpression	list -> free = NULL		5321368	0		=			
ANR	5321387	PtrMemberAccess	list -> free		5321368	0					
ANR	5321388	Identifier	list		5321368	0					
ANR	5321389	Identifier	free		5321368	1					
ANR	5321390	Identifier	NULL		5321368	1					
ANR	5321391	ExpressionStatement	free ( list )	195:1:3762:3773	5321368	3	True				
ANR	5321392	CallExpression	free ( list )		5321368	0					
ANR	5321393	Callee	free		5321368	0					
ANR	5321394	Identifier	free		5321368	0					
ANR	5321395	ArgumentList	list		5321368	1					
ANR	5321396	Argument	list		5321368	0					
ANR	5321397	Identifier	list		5321368	0					
ANR	5321398	ReturnType	SDB_API void		5321368	1					
ANR	5321399	Identifier	ls_free		5321368	2					
ANR	5321400	ParameterList	SdbList * list		5321368	3					
ANR	5321401	Parameter	SdbList * list	189:21:3677:3689	5321368	0	True				
ANR	5321402	ParameterType	SdbList *		5321368	0					
ANR	5321403	Identifier	list		5321368	1					
ANR	5321404	CFGEntryNode	ENTRY		5321368		True				
ANR	5321405	CFGExitNode	EXIT		5321368		True				
ANR	5321406	Symbol	NULL		5321368						
ANR	5321407	Symbol	list -> free		5321368						
ANR	5321408	Symbol	* list		5321368						
ANR	5321409	Symbol	list		5321368						
ANR	5321410	Function	ls_append	198:0:3778:4156							
ANR	5321411	FunctionDef	"ls_append (SdbList * list , void * data)"		5321410	0					
ANR	5321412	CompoundStatement		198:58:3836:4156	5321410	0					
ANR	5321413	IdentifierDeclStatement	SdbListIter * it ;	199:1:3839:3854	5321410	0	True				
ANR	5321414	IdentifierDecl	* it		5321410	0					
ANR	5321415	IdentifierDeclType	SdbListIter *		5321410	0					
ANR	5321416	Identifier	it		5321410	1					
ANR	5321417	IfStatement	if ( ! list )		5321410	1					
ANR	5321418	Condition	! list	200:5:3861:3865	5321410	0	True				
ANR	5321419	UnaryOperationExpression	! list		5321410	0					
ANR	5321420	UnaryOperator	!		5321410	0					
ANR	5321421	Identifier	list		5321410	1					
ANR	5321422	CompoundStatement		3:12:31:31	5321410	1					
ANR	5321423	ReturnStatement	return NULL ;	201:2:3872:3883	5321410	0	True				
ANR	5321424	Identifier	NULL		5321410	0					
ANR	5321425	ExpressionStatement	it = R_NEW ( SdbListIter )	203:1:3889:3913	5321410	2	True				
ANR	5321426	AssignmentExpression	it = R_NEW ( SdbListIter )		5321410	0		=			
ANR	5321427	Identifier	it		5321410	0					
ANR	5321428	CallExpression	R_NEW ( SdbListIter )		5321410	1					
ANR	5321429	Callee	R_NEW		5321410	0					
ANR	5321430	Identifier	R_NEW		5321410	0					
ANR	5321431	ArgumentList	SdbListIter		5321410	1					
ANR	5321432	Argument	SdbListIter		5321410	0					
ANR	5321433	Identifier	SdbListIter		5321410	0					
ANR	5321434	IfStatement	if ( ! it )		5321410	3					
ANR	5321435	Condition	! it	204:5:3920:3922	5321410	0	True				
ANR	5321436	UnaryOperationExpression	! it		5321410	0					
ANR	5321437	UnaryOperator	!		5321410	0					
ANR	5321438	Identifier	it		5321410	1					
ANR	5321439	CompoundStatement		7:10:88:88	5321410	1					
ANR	5321440	ReturnStatement	return NULL ;	205:2:3929:3940	5321410	0	True				
ANR	5321441	Identifier	NULL		5321410	0					
ANR	5321442	IfStatement	if ( list -> tail )		5321410	4					
ANR	5321443	Condition	list -> tail	207:5:3951:3960	5321410	0	True				
ANR	5321444	PtrMemberAccess	list -> tail		5321410	0					
ANR	5321445	Identifier	list		5321410	0					
ANR	5321446	Identifier	tail		5321410	1					
ANR	5321447	CompoundStatement		10:17:126:126	5321410	1					
ANR	5321448	ExpressionStatement	list -> tail -> n = it	208:2:3967:3985	5321410	0	True				
ANR	5321449	AssignmentExpression	list -> tail -> n = it		5321410	0		=			
ANR	5321450	PtrMemberAccess	list -> tail -> n		5321410	0					
ANR	5321451	PtrMemberAccess	list -> tail		5321410	0					
ANR	5321452	Identifier	list		5321410	0					
ANR	5321453	Identifier	tail		5321410	1					
ANR	5321454	Identifier	n		5321410	1					
ANR	5321455	Identifier	it		5321410	1					
ANR	5321456	ExpressionStatement	it -> data = data	210:1:3991:4006	5321410	5	True				
ANR	5321457	AssignmentExpression	it -> data = data		5321410	0		=			
ANR	5321458	PtrMemberAccess	it -> data		5321410	0					
ANR	5321459	Identifier	it		5321410	0					
ANR	5321460	Identifier	data		5321410	1					
ANR	5321461	Identifier	data		5321410	1					
ANR	5321462	ExpressionStatement	it -> p = list -> tail	211:1:4009:4027	5321410	6	True				
ANR	5321463	AssignmentExpression	it -> p = list -> tail		5321410	0		=			
ANR	5321464	PtrMemberAccess	it -> p		5321410	0					
ANR	5321465	Identifier	it		5321410	0					
ANR	5321466	Identifier	p		5321410	1					
ANR	5321467	PtrMemberAccess	list -> tail		5321410	1					
ANR	5321468	Identifier	list		5321410	0					
ANR	5321469	Identifier	tail		5321410	1					
ANR	5321470	ExpressionStatement	it -> n = NULL	212:1:4030:4042	5321410	7	True				
ANR	5321471	AssignmentExpression	it -> n = NULL		5321410	0		=			
ANR	5321472	PtrMemberAccess	it -> n		5321410	0					
ANR	5321473	Identifier	it		5321410	0					
ANR	5321474	Identifier	n		5321410	1					
ANR	5321475	Identifier	NULL		5321410	1					
ANR	5321476	ExpressionStatement	list -> tail = it	213:1:4045:4060	5321410	8	True				
ANR	5321477	AssignmentExpression	list -> tail = it		5321410	0		=			
ANR	5321478	PtrMemberAccess	list -> tail		5321410	0					
ANR	5321479	Identifier	list		5321410	0					
ANR	5321480	Identifier	tail		5321410	1					
ANR	5321481	Identifier	it		5321410	1					
ANR	5321482	IfStatement	if ( ! list -> head )		5321410	9					
ANR	5321483	Condition	! list -> head	214:5:4067:4077	5321410	0	True				
ANR	5321484	UnaryOperationExpression	! list -> head		5321410	0					
ANR	5321485	UnaryOperator	!		5321410	0					
ANR	5321486	PtrMemberAccess	list -> head		5321410	1					
ANR	5321487	Identifier	list		5321410	0					
ANR	5321488	Identifier	head		5321410	1					
ANR	5321489	CompoundStatement		17:18:243:243	5321410	1					
ANR	5321490	ExpressionStatement	list -> head = it	215:2:4084:4099	5321410	0	True				
ANR	5321491	AssignmentExpression	list -> head = it		5321410	0		=			
ANR	5321492	PtrMemberAccess	list -> head		5321410	0					
ANR	5321493	Identifier	list		5321410	0					
ANR	5321494	Identifier	head		5321410	1					
ANR	5321495	Identifier	it		5321410	1					
ANR	5321496	ExpressionStatement	list -> length ++	217:1:4105:4119	5321410	10	True				
ANR	5321497	PostIncDecOperationExpression	list -> length ++		5321410	0					
ANR	5321498	PtrMemberAccess	list -> length		5321410	0					
ANR	5321499	Identifier	list		5321410	0					
ANR	5321500	Identifier	length		5321410	1					
ANR	5321501	IncDec	++		5321410	1					
ANR	5321502	ExpressionStatement	list -> sorted = false	218:1:4122:4142	5321410	11	True				
ANR	5321503	AssignmentExpression	list -> sorted = false		5321410	0		=			
ANR	5321504	PtrMemberAccess	list -> sorted		5321410	0					
ANR	5321505	Identifier	list		5321410	0					
ANR	5321506	Identifier	sorted		5321410	1					
ANR	5321507	Identifier	false		5321410	1					
ANR	5321508	ReturnStatement	return it ;	219:1:4145:4154	5321410	12	True				
ANR	5321509	Identifier	it		5321410	0					
ANR	5321510	ReturnType	SDB_API SdbListIter *		5321410	1					
ANR	5321511	Identifier	ls_append		5321410	2					
ANR	5321512	ParameterList	"SdbList * list , void * data"		5321410	3					
ANR	5321513	Parameter	SdbList * list	198:31:3809:3821	5321410	0	True				
ANR	5321514	ParameterType	SdbList *		5321410	0					
ANR	5321515	Identifier	list		5321410	1					
ANR	5321516	Parameter	void * data	198:46:3824:3833	5321410	1	True				
ANR	5321517	ParameterType	void *		5321410	0					
ANR	5321518	Identifier	data		5321410	1					
ANR	5321519	CFGEntryNode	ENTRY		5321410		True				
ANR	5321520	CFGExitNode	EXIT		5321410		True				
ANR	5321521	Symbol	list -> tail -> n		5321410						
ANR	5321522	Symbol	list -> length		5321410						
ANR	5321523	Symbol	NULL		5321410						
ANR	5321524	Symbol	data		5321410						
ANR	5321525	Symbol	false		5321410						
ANR	5321526	Symbol	it		5321410						
ANR	5321527	Symbol	list		5321410						
ANR	5321528	Symbol	it -> n		5321410						
ANR	5321529	Symbol	it -> p		5321410						
ANR	5321530	Symbol	list -> head		5321410						
ANR	5321531	Symbol	* it		5321410						
ANR	5321532	Symbol	* * list		5321410						
ANR	5321533	Symbol	SdbListIter		5321410						
ANR	5321534	Symbol	* list		5321410						
ANR	5321535	Symbol	* list -> tail		5321410						
ANR	5321536	Symbol	list -> sorted		5321410						
ANR	5321537	Symbol	it -> data		5321410						
ANR	5321538	Symbol	R_NEW		5321410						
ANR	5321539	Symbol	list -> tail		5321410						
ANR	5321540	Function	ls_prepend	222:0:4159:4500							
ANR	5321541	FunctionDef	"ls_prepend (SdbList * list , void * data)"		5321540	0					
ANR	5321542	CompoundStatement		222:59:4218:4500	5321540	0					
ANR	5321543	IdentifierDeclStatement	SdbListIter * it = R_NEW ( SdbListIter ) ;	223:1:4221:4258	5321540	0	True				
ANR	5321544	IdentifierDecl	* it = R_NEW ( SdbListIter )		5321540	0					
ANR	5321545	IdentifierDeclType	SdbListIter *		5321540	0					
ANR	5321546	Identifier	it		5321540	1					
ANR	5321547	AssignmentExpression	* it = R_NEW ( SdbListIter )		5321540	2		=			
ANR	5321548	Identifier	it		5321540	0					
ANR	5321549	CallExpression	R_NEW ( SdbListIter )		5321540	1					
ANR	5321550	Callee	R_NEW		5321540	0					
ANR	5321551	Identifier	R_NEW		5321540	0					
ANR	5321552	ArgumentList	SdbListIter		5321540	1					
ANR	5321553	Argument	SdbListIter		5321540	0					
ANR	5321554	Identifier	SdbListIter		5321540	0					
ANR	5321555	IfStatement	if ( ! it )		5321540	1					
ANR	5321556	Condition	! it	224:5:4265:4267	5321540	0	True				
ANR	5321557	UnaryOperationExpression	! it		5321540	0					
ANR	5321558	UnaryOperator	!		5321540	0					
ANR	5321559	Identifier	it		5321540	1					
ANR	5321560	CompoundStatement		3:10:51:51	5321540	1					
ANR	5321561	ReturnStatement	return NULL ;	225:2:4274:4285	5321540	0	True				
ANR	5321562	Identifier	NULL		5321540	0					
ANR	5321563	IfStatement	if ( list -> head )		5321540	2					
ANR	5321564	Condition	list -> head	227:5:4295:4304	5321540	0	True				
ANR	5321565	PtrMemberAccess	list -> head		5321540	0					
ANR	5321566	Identifier	list		5321540	0					
ANR	5321567	Identifier	head		5321540	1					
ANR	5321568	CompoundStatement		6:17:88:88	5321540	1					
ANR	5321569	ExpressionStatement	list -> head -> p = it	228:2:4311:4329	5321540	0	True				
ANR	5321570	AssignmentExpression	list -> head -> p = it		5321540	0		=			
ANR	5321571	PtrMemberAccess	list -> head -> p		5321540	0					
ANR	5321572	PtrMemberAccess	list -> head		5321540	0					
ANR	5321573	Identifier	list		5321540	0					
ANR	5321574	Identifier	head		5321540	1					
ANR	5321575	Identifier	p		5321540	1					
ANR	5321576	Identifier	it		5321540	1					
ANR	5321577	ExpressionStatement	it -> data = data	230:1:4335:4350	5321540	3	True				
ANR	5321578	AssignmentExpression	it -> data = data		5321540	0		=			
ANR	5321579	PtrMemberAccess	it -> data		5321540	0					
ANR	5321580	Identifier	it		5321540	0					
ANR	5321581	Identifier	data		5321540	1					
ANR	5321582	Identifier	data		5321540	1					
ANR	5321583	ExpressionStatement	it -> n = list -> head	231:1:4353:4371	5321540	4	True				
ANR	5321584	AssignmentExpression	it -> n = list -> head		5321540	0		=			
ANR	5321585	PtrMemberAccess	it -> n		5321540	0					
ANR	5321586	Identifier	it		5321540	0					
ANR	5321587	Identifier	n		5321540	1					
ANR	5321588	PtrMemberAccess	list -> head		5321540	1					
ANR	5321589	Identifier	list		5321540	0					
ANR	5321590	Identifier	head		5321540	1					
ANR	5321591	ExpressionStatement	it -> p = NULL	232:1:4374:4386	5321540	5	True				
ANR	5321592	AssignmentExpression	it -> p = NULL		5321540	0		=			
ANR	5321593	PtrMemberAccess	it -> p		5321540	0					
ANR	5321594	Identifier	it		5321540	0					
ANR	5321595	Identifier	p		5321540	1					
ANR	5321596	Identifier	NULL		5321540	1					
ANR	5321597	ExpressionStatement	list -> head = it	233:1:4389:4404	5321540	6	True				
ANR	5321598	AssignmentExpression	list -> head = it		5321540	0		=			
ANR	5321599	PtrMemberAccess	list -> head		5321540	0					
ANR	5321600	Identifier	list		5321540	0					
ANR	5321601	Identifier	head		5321540	1					
ANR	5321602	Identifier	it		5321540	1					
ANR	5321603	IfStatement	if ( ! list -> tail )		5321540	7					
ANR	5321604	Condition	! list -> tail	234:5:4411:4421	5321540	0	True				
ANR	5321605	UnaryOperationExpression	! list -> tail		5321540	0					
ANR	5321606	UnaryOperator	!		5321540	0					
ANR	5321607	PtrMemberAccess	list -> tail		5321540	1					
ANR	5321608	Identifier	list		5321540	0					
ANR	5321609	Identifier	tail		5321540	1					
ANR	5321610	CompoundStatement		13:18:205:205	5321540	1					
ANR	5321611	ExpressionStatement	list -> tail = it	235:2:4428:4443	5321540	0	True				
ANR	5321612	AssignmentExpression	list -> tail = it		5321540	0		=			
ANR	5321613	PtrMemberAccess	list -> tail		5321540	0					
ANR	5321614	Identifier	list		5321540	0					
ANR	5321615	Identifier	tail		5321540	1					
ANR	5321616	Identifier	it		5321540	1					
ANR	5321617	ExpressionStatement	list -> length ++	237:1:4449:4463	5321540	8	True				
ANR	5321618	PostIncDecOperationExpression	list -> length ++		5321540	0					
ANR	5321619	PtrMemberAccess	list -> length		5321540	0					
ANR	5321620	Identifier	list		5321540	0					
ANR	5321621	Identifier	length		5321540	1					
ANR	5321622	IncDec	++		5321540	1					
ANR	5321623	ExpressionStatement	list -> sorted = false	238:1:4466:4486	5321540	9	True				
ANR	5321624	AssignmentExpression	list -> sorted = false		5321540	0		=			
ANR	5321625	PtrMemberAccess	list -> sorted		5321540	0					
ANR	5321626	Identifier	list		5321540	0					
ANR	5321627	Identifier	sorted		5321540	1					
ANR	5321628	Identifier	false		5321540	1					
ANR	5321629	ReturnStatement	return it ;	239:1:4489:4498	5321540	10	True				
ANR	5321630	Identifier	it		5321540	0					
ANR	5321631	ReturnType	SDB_API SdbListIter *		5321540	1					
ANR	5321632	Identifier	ls_prepend		5321540	2					
ANR	5321633	ParameterList	"SdbList * list , void * data"		5321540	3					
ANR	5321634	Parameter	SdbList * list	222:32:4191:4203	5321540	0	True				
ANR	5321635	ParameterType	SdbList *		5321540	0					
ANR	5321636	Identifier	list		5321540	1					
ANR	5321637	Parameter	void * data	222:47:4206:4215	5321540	1	True				
ANR	5321638	ParameterType	void *		5321540	0					
ANR	5321639	Identifier	data		5321540	1					
ANR	5321640	CFGEntryNode	ENTRY		5321540		True				
ANR	5321641	CFGExitNode	EXIT		5321540		True				
ANR	5321642	Symbol	* list -> head		5321540						
ANR	5321643	Symbol	list -> length		5321540						
ANR	5321644	Symbol	NULL		5321540						
ANR	5321645	Symbol	list -> head -> p		5321540						
ANR	5321646	Symbol	data		5321540						
ANR	5321647	Symbol	false		5321540						
ANR	5321648	Symbol	it		5321540						
ANR	5321649	Symbol	list		5321540						
ANR	5321650	Symbol	it -> n		5321540						
ANR	5321651	Symbol	it -> p		5321540						
ANR	5321652	Symbol	list -> head		5321540						
ANR	5321653	Symbol	* it		5321540						
ANR	5321654	Symbol	* * list		5321540						
ANR	5321655	Symbol	SdbListIter		5321540						
ANR	5321656	Symbol	* list		5321540						
ANR	5321657	Symbol	list -> sorted		5321540						
ANR	5321658	Symbol	it -> data		5321540						
ANR	5321659	Symbol	R_NEW		5321540						
ANR	5321660	Symbol	list -> tail		5321540						
ANR	5321661	Function	ls_pop	242:0:4503:4869							
ANR	5321662	FunctionDef	ls_pop (SdbList * list)		5321661	0					
ANR	5321663	CompoundStatement		242:36:4539:4869	5321661	0					
ANR	5321664	IdentifierDeclStatement	void * data = NULL ;	243:1:4542:4559	5321661	0	True				
ANR	5321665	IdentifierDecl	* data = NULL		5321661	0					
ANR	5321666	IdentifierDeclType	void *		5321661	0					
ANR	5321667	Identifier	data		5321661	1					
ANR	5321668	AssignmentExpression	* data = NULL		5321661	2		=			
ANR	5321669	Identifier	NULL		5321661	0					
ANR	5321670	Identifier	NULL		5321661	1					
ANR	5321671	IdentifierDeclStatement	SdbListIter * iter ;	244:1:4562:4579	5321661	1	True				
ANR	5321672	IdentifierDecl	* iter		5321661	0					
ANR	5321673	IdentifierDeclType	SdbListIter *		5321661	0					
ANR	5321674	Identifier	iter		5321661	1					
ANR	5321675	IfStatement	if ( list )		5321661	2					
ANR	5321676	Condition	list	245:5:4586:4589	5321661	0	True				
ANR	5321677	Identifier	list		5321661	0					
ANR	5321678	CompoundStatement		4:11:52:52	5321661	1					
ANR	5321679	IfStatement	if ( list -> tail )		5321661	0					
ANR	5321680	Condition	list -> tail	246:6:4600:4609	5321661	0	True				
ANR	5321681	PtrMemberAccess	list -> tail		5321661	0					
ANR	5321682	Identifier	list		5321661	0					
ANR	5321683	Identifier	tail		5321661	1					
ANR	5321684	CompoundStatement		5:18:72:72	5321661	1					
ANR	5321685	ExpressionStatement	iter = list -> tail	247:3:4617:4634	5321661	0	True				
ANR	5321686	AssignmentExpression	iter = list -> tail		5321661	0		=			
ANR	5321687	Identifier	iter		5321661	0					
ANR	5321688	PtrMemberAccess	list -> tail		5321661	1					
ANR	5321689	Identifier	list		5321661	0					
ANR	5321690	Identifier	tail		5321661	1					
ANR	5321691	IfStatement	if ( list -> head == list -> tail )		5321661	1					
ANR	5321692	Condition	list -> head == list -> tail	248:7:4643:4666	5321661	0	True				
ANR	5321693	EqualityExpression	list -> head == list -> tail		5321661	0		==			
ANR	5321694	PtrMemberAccess	list -> head		5321661	0					
ANR	5321695	Identifier	list		5321661	0					
ANR	5321696	Identifier	head		5321661	1					
ANR	5321697	PtrMemberAccess	list -> tail		5321661	1					
ANR	5321698	Identifier	list		5321661	0					
ANR	5321699	Identifier	tail		5321661	1					
ANR	5321700	CompoundStatement		7:33:129:129	5321661	1					
ANR	5321701	ExpressionStatement	list -> head = list -> tail = NULL	249:4:4675:4705	5321661	0	True				
ANR	5321702	AssignmentExpression	list -> head = list -> tail = NULL		5321661	0		=			
ANR	5321703	PtrMemberAccess	list -> head		5321661	0					
ANR	5321704	Identifier	list		5321661	0					
ANR	5321705	Identifier	head		5321661	1					
ANR	5321706	AssignmentExpression	list -> tail = NULL		5321661	1		=			
ANR	5321707	PtrMemberAccess	list -> tail		5321661	0					
ANR	5321708	Identifier	list		5321661	0					
ANR	5321709	Identifier	tail		5321661	1					
ANR	5321710	Identifier	NULL		5321661	1					
ANR	5321711	ElseStatement	else		5321661	0					
ANR	5321712	CompoundStatement		9:10:177:177	5321661	0					
ANR	5321713	ExpressionStatement	list -> tail = iter -> p	251:4:4723:4743	5321661	0	True				
ANR	5321714	AssignmentExpression	list -> tail = iter -> p		5321661	0		=			
ANR	5321715	PtrMemberAccess	list -> tail		5321661	0					
ANR	5321716	Identifier	list		5321661	0					
ANR	5321717	Identifier	tail		5321661	1					
ANR	5321718	PtrMemberAccess	iter -> p		5321661	1					
ANR	5321719	Identifier	iter		5321661	0					
ANR	5321720	Identifier	p		5321661	1					
ANR	5321721	ExpressionStatement	list -> tail -> n = NULL	252:4:4749:4769	5321661	1	True				
ANR	5321722	AssignmentExpression	list -> tail -> n = NULL		5321661	0		=			
ANR	5321723	PtrMemberAccess	list -> tail -> n		5321661	0					
ANR	5321724	PtrMemberAccess	list -> tail		5321661	0					
ANR	5321725	Identifier	list		5321661	0					
ANR	5321726	Identifier	tail		5321661	1					
ANR	5321727	Identifier	n		5321661	1					
ANR	5321728	Identifier	NULL		5321661	1					
ANR	5321729	ExpressionStatement	data = iter -> data	254:3:4779:4796	5321661	2	True				
ANR	5321730	AssignmentExpression	data = iter -> data		5321661	0		=			
ANR	5321731	Identifier	data		5321661	0					
ANR	5321732	PtrMemberAccess	iter -> data		5321661	1					
ANR	5321733	Identifier	iter		5321661	0					
ANR	5321734	Identifier	data		5321661	1					
ANR	5321735	ExpressionStatement	free ( iter )	255:3:4801:4812	5321661	3	True				
ANR	5321736	CallExpression	free ( iter )		5321661	0					
ANR	5321737	Callee	free		5321661	0					
ANR	5321738	Identifier	free		5321661	0					
ANR	5321739	ArgumentList	iter		5321661	1					
ANR	5321740	Argument	iter		5321661	0					
ANR	5321741	Identifier	iter		5321661	0					
ANR	5321742	ExpressionStatement	list -> length --	256:3:4817:4831	5321661	4	True				
ANR	5321743	PostIncDecOperationExpression	list -> length --		5321661	0					
ANR	5321744	PtrMemberAccess	list -> length		5321661	0					
ANR	5321745	Identifier	list		5321661	0					
ANR	5321746	Identifier	length		5321661	1					
ANR	5321747	IncDec	--		5321661	1					
ANR	5321748	ReturnStatement	return data ;	258:2:4839:4850	5321661	1	True				
ANR	5321749	Identifier	data		5321661	0					
ANR	5321750	ReturnStatement	return NULL ;	260:1:4856:4867	5321661	3	True				
ANR	5321751	Identifier	NULL		5321661	0					
ANR	5321752	ReturnType	SDB_API void *		5321661	1					
ANR	5321753	Identifier	ls_pop		5321661	2					
ANR	5321754	ParameterList	SdbList * list		5321661	3					
ANR	5321755	Parameter	SdbList * list	242:21:4524:4536	5321661	0	True				
ANR	5321756	ParameterType	SdbList *		5321661	0					
ANR	5321757	Identifier	list		5321661	1					
ANR	5321758	CFGEntryNode	ENTRY		5321661		True				
ANR	5321759	CFGExitNode	EXIT		5321661		True				
ANR	5321760	Symbol	list -> tail -> n		5321661						
ANR	5321761	Symbol	list -> length		5321661						
ANR	5321762	Symbol	NULL		5321661						
ANR	5321763	Symbol	data		5321661						
ANR	5321764	Symbol	iter		5321661						
ANR	5321765	Symbol	list		5321661						
ANR	5321766	Symbol	list -> head		5321661						
ANR	5321767	Symbol	* iter		5321661						
ANR	5321768	Symbol	* * list		5321661						
ANR	5321769	Symbol	* list		5321661						
ANR	5321770	Symbol	* list -> tail		5321661						
ANR	5321771	Symbol	iter -> p		5321661						
ANR	5321772	Symbol	iter -> data		5321661						
ANR	5321773	Symbol	list -> tail		5321661						
ANR	5321774	Function	ls_join	264:0:4873:5324							
ANR	5321775	FunctionDef	"ls_join (SdbList * list1 , SdbList * list2)"		5321774	0					
ANR	5321776	CompoundStatement		264:52:4925:5324	5321774	0					
ANR	5321777	IfStatement	if ( ! list1 || ! list2 )		5321774	0					
ANR	5321778	Condition	! list1 || ! list2	265:5:4932:4947	5321774	0	True				
ANR	5321779	OrExpression	! list1 || ! list2		5321774	0		||			
ANR	5321780	UnaryOperationExpression	! list1		5321774	0					
ANR	5321781	UnaryOperator	!		5321774	0					
ANR	5321782	Identifier	list1		5321774	1					
ANR	5321783	UnaryOperationExpression	! list2		5321774	1					
ANR	5321784	UnaryOperator	!		5321774	0					
ANR	5321785	Identifier	list2		5321774	1					
ANR	5321786	CompoundStatement		2:23:24:24	5321774	1					
ANR	5321787	ReturnStatement	return 0 ;	266:2:4954:4962	5321774	0	True				
ANR	5321788	PrimaryExpression	0		5321774	0					
ANR	5321789	IfStatement	if ( ! ( list2 -> length ) )		5321774	1					
ANR	5321790	Condition	! ( list2 -> length )	268:5:4972:4987	5321774	0	True				
ANR	5321791	UnaryOperationExpression	! ( list2 -> length )		5321774	0					
ANR	5321792	UnaryOperator	!		5321774	0					
ANR	5321793	PtrMemberAccess	list2 -> length		5321774	1					
ANR	5321794	Identifier	list2		5321774	0					
ANR	5321795	Identifier	length		5321774	1					
ANR	5321796	CompoundStatement		5:23:64:64	5321774	1					
ANR	5321797	ReturnStatement	return 0 ;	269:2:4994:5002	5321774	0	True				
ANR	5321798	PrimaryExpression	0		5321774	0					
ANR	5321799	IfStatement	if ( ! ( list1 -> length ) )		5321774	2					
ANR	5321800	Condition	! ( list1 -> length )	271:5:5012:5027	5321774	0	True				
ANR	5321801	UnaryOperationExpression	! ( list1 -> length )		5321774	0					
ANR	5321802	UnaryOperator	!		5321774	0					
ANR	5321803	PtrMemberAccess	list1 -> length		5321774	1					
ANR	5321804	Identifier	list1		5321774	0					
ANR	5321805	Identifier	length		5321774	1					
ANR	5321806	CompoundStatement		8:23:104:104	5321774	1					
ANR	5321807	ExpressionStatement	list1 -> head = list2 -> head	272:2:5034:5059	5321774	0	True				
ANR	5321808	AssignmentExpression	list1 -> head = list2 -> head		5321774	0		=			
ANR	5321809	PtrMemberAccess	list1 -> head		5321774	0					
ANR	5321810	Identifier	list1		5321774	0					
ANR	5321811	Identifier	head		5321774	1					
ANR	5321812	PtrMemberAccess	list2 -> head		5321774	1					
ANR	5321813	Identifier	list2		5321774	0					
ANR	5321814	Identifier	head		5321774	1					
ANR	5321815	ExpressionStatement	list1 -> tail = list2 -> tail	273:2:5063:5088	5321774	1	True				
ANR	5321816	AssignmentExpression	list1 -> tail = list2 -> tail		5321774	0		=			
ANR	5321817	PtrMemberAccess	list1 -> tail		5321774	0					
ANR	5321818	Identifier	list1		5321774	0					
ANR	5321819	Identifier	tail		5321774	1					
ANR	5321820	PtrMemberAccess	list2 -> tail		5321774	1					
ANR	5321821	Identifier	list2		5321774	0					
ANR	5321822	Identifier	tail		5321774	1					
ANR	5321823	ElseStatement	else		5321774	0					
ANR	5321824	CompoundStatement		11:8:172:172	5321774	0					
ANR	5321825	ExpressionStatement	list1 -> tail -> n = list2 -> head	275:2:5102:5130	5321774	0	True				
ANR	5321826	AssignmentExpression	list1 -> tail -> n = list2 -> head		5321774	0		=			
ANR	5321827	PtrMemberAccess	list1 -> tail -> n		5321774	0					
ANR	5321828	PtrMemberAccess	list1 -> tail		5321774	0					
ANR	5321829	Identifier	list1		5321774	0					
ANR	5321830	Identifier	tail		5321774	1					
ANR	5321831	Identifier	n		5321774	1					
ANR	5321832	PtrMemberAccess	list2 -> head		5321774	1					
ANR	5321833	Identifier	list2		5321774	0					
ANR	5321834	Identifier	head		5321774	1					
ANR	5321835	ExpressionStatement	list2 -> head -> p = list1 -> tail	276:2:5134:5162	5321774	1	True				
ANR	5321836	AssignmentExpression	list2 -> head -> p = list1 -> tail		5321774	0		=			
ANR	5321837	PtrMemberAccess	list2 -> head -> p		5321774	0					
ANR	5321838	PtrMemberAccess	list2 -> head		5321774	0					
ANR	5321839	Identifier	list2		5321774	0					
ANR	5321840	Identifier	head		5321774	1					
ANR	5321841	Identifier	p		5321774	1					
ANR	5321842	PtrMemberAccess	list1 -> tail		5321774	1					
ANR	5321843	Identifier	list1		5321774	0					
ANR	5321844	Identifier	tail		5321774	1					
ANR	5321845	ExpressionStatement	list1 -> tail = list2 -> tail	277:2:5166:5191	5321774	2	True				
ANR	5321846	AssignmentExpression	list1 -> tail = list2 -> tail		5321774	0		=			
ANR	5321847	PtrMemberAccess	list1 -> tail		5321774	0					
ANR	5321848	Identifier	list1		5321774	0					
ANR	5321849	Identifier	tail		5321774	1					
ANR	5321850	PtrMemberAccess	list2 -> tail		5321774	1					
ANR	5321851	Identifier	list2		5321774	0					
ANR	5321852	Identifier	tail		5321774	1					
ANR	5321853	ExpressionStatement	list1 -> tail -> n = NULL	278:2:5195:5216	5321774	3	True				
ANR	5321854	AssignmentExpression	list1 -> tail -> n = NULL		5321774	0		=			
ANR	5321855	PtrMemberAccess	list1 -> tail -> n		5321774	0					
ANR	5321856	PtrMemberAccess	list1 -> tail		5321774	0					
ANR	5321857	Identifier	list1		5321774	0					
ANR	5321858	Identifier	tail		5321774	1					
ANR	5321859	Identifier	n		5321774	1					
ANR	5321860	Identifier	NULL		5321774	1					
ANR	5321861	ExpressionStatement	list1 -> length += list2 -> length	280:1:5222:5252	5321774	3	True				
ANR	5321862	AssignmentExpression	list1 -> length += list2 -> length		5321774	0		+=			
ANR	5321863	PtrMemberAccess	list1 -> length		5321774	0					
ANR	5321864	Identifier	list1		5321774	0					
ANR	5321865	Identifier	length		5321774	1					
ANR	5321866	PtrMemberAccess	list2 -> length		5321774	1					
ANR	5321867	Identifier	list2		5321774	0					
ANR	5321868	Identifier	length		5321774	1					
ANR	5321869	ExpressionStatement	list2 -> head = list2 -> tail = NULL	281:1:5255:5287	5321774	4	True				
ANR	5321870	AssignmentExpression	list2 -> head = list2 -> tail = NULL		5321774	0		=			
ANR	5321871	PtrMemberAccess	list2 -> head		5321774	0					
ANR	5321872	Identifier	list2		5321774	0					
ANR	5321873	Identifier	head		5321774	1					
ANR	5321874	AssignmentExpression	list2 -> tail = NULL		5321774	1		=			
ANR	5321875	PtrMemberAccess	list2 -> tail		5321774	0					
ANR	5321876	Identifier	list2		5321774	0					
ANR	5321877	Identifier	tail		5321774	1					
ANR	5321878	Identifier	NULL		5321774	1					
ANR	5321879	ExpressionStatement	list1 -> sorted = false	282:1:5290:5311	5321774	5	True				
ANR	5321880	AssignmentExpression	list1 -> sorted = false		5321774	0		=			
ANR	5321881	PtrMemberAccess	list1 -> sorted		5321774	0					
ANR	5321882	Identifier	list1		5321774	0					
ANR	5321883	Identifier	sorted		5321774	1					
ANR	5321884	Identifier	false		5321774	1					
ANR	5321885	ReturnStatement	return 1 ;	283:1:5314:5322	5321774	6	True				
ANR	5321886	PrimaryExpression	1		5321774	0					
ANR	5321887	ReturnType	SDB_API int		5321774	1					
ANR	5321888	Identifier	ls_join		5321774	2					
ANR	5321889	ParameterList	"SdbList * list1 , SdbList * list2"		5321774	3					
ANR	5321890	Parameter	SdbList * list1	264:20:4893:4906	5321774	0	True				
ANR	5321891	ParameterType	SdbList *		5321774	0					
ANR	5321892	Identifier	list1		5321774	1					
ANR	5321893	Parameter	SdbList * list2	264:36:4909:4922	5321774	1	True				
ANR	5321894	ParameterType	SdbList *		5321774	0					
ANR	5321895	Identifier	list2		5321774	1					
ANR	5321896	CFGEntryNode	ENTRY		5321774		True				
ANR	5321897	CFGExitNode	EXIT		5321774		True				
ANR	5321898	Symbol	list2 -> head		5321774						
ANR	5321899	Symbol	* list1 -> tail		5321774						
ANR	5321900	Symbol	list1 -> sorted		5321774						
ANR	5321901	Symbol	* * list1		5321774						
ANR	5321902	Symbol	NULL		5321774						
ANR	5321903	Symbol	false		5321774						
ANR	5321904	Symbol	list2 -> length		5321774						
ANR	5321905	Symbol	* * list2		5321774						
ANR	5321906	Symbol	list1		5321774						
ANR	5321907	Symbol	list1 -> length		5321774						
ANR	5321908	Symbol	list1 -> tail		5321774						
ANR	5321909	Symbol	* list2 -> head		5321774						
ANR	5321910	Symbol	list2		5321774						
ANR	5321911	Symbol	* list1		5321774						
ANR	5321912	Symbol	* list2		5321774						
ANR	5321913	Symbol	list2 -> tail		5321774						
ANR	5321914	Symbol	list2 -> head -> p		5321774						
ANR	5321915	Symbol	list1 -> head		5321774						
ANR	5321916	Symbol	list1 -> tail -> n		5321774						
ANR	5321917	Function	ls_insert	287:0:5328:5896							
ANR	5321918	FunctionDef	"ls_insert (SdbList * list , int n , void * data)"		5321917	0					
ANR	5321919	CompoundStatement		287:65:5393:5896	5321917	0					
ANR	5321920	IdentifierDeclStatement	"SdbListIter * it , * item ;"	288:1:5396:5418	5321917	0	True				
ANR	5321921	IdentifierDecl	* it		5321917	0					
ANR	5321922	IdentifierDeclType	SdbListIter *		5321917	0					
ANR	5321923	Identifier	it		5321917	1					
ANR	5321924	IdentifierDecl	* item		5321917	1					
ANR	5321925	IdentifierDeclType	SdbListIter *		5321917	0					
ANR	5321926	Identifier	item		5321917	1					
ANR	5321927	IdentifierDeclStatement	int i ;	289:1:5421:5426	5321917	1	True				
ANR	5321928	IdentifierDecl	i		5321917	0					
ANR	5321929	IdentifierDeclType	int		5321917	0					
ANR	5321930	Identifier	i		5321917	1					
ANR	5321931	IfStatement	if ( list )		5321917	2					
ANR	5321932	Condition	list	290:5:5433:5436	5321917	0	True				
ANR	5321933	Identifier	list		5321917	0					
ANR	5321934	CompoundStatement		4:11:45:45	5321917	1					
ANR	5321935	IfStatement	if ( ! list -> head || ! n )		5321917	0					
ANR	5321936	Condition	! list -> head || ! n	291:6:5447:5463	5321917	0	True				
ANR	5321937	OrExpression	! list -> head || ! n		5321917	0		||			
ANR	5321938	UnaryOperationExpression	! list -> head		5321917	0					
ANR	5321939	UnaryOperator	!		5321917	0					
ANR	5321940	PtrMemberAccess	list -> head		5321917	1					
ANR	5321941	Identifier	list		5321917	0					
ANR	5321942	Identifier	head		5321917	1					
ANR	5321943	UnaryOperationExpression	! n		5321917	1					
ANR	5321944	UnaryOperator	!		5321917	0					
ANR	5321945	Identifier	n		5321917	1					
ANR	5321946	CompoundStatement		5:25:72:72	5321917	1					
ANR	5321947	ReturnStatement	"return ls_prepend ( list , data ) ;"	292:3:5471:5501	5321917	0	True				
ANR	5321948	CallExpression	"ls_prepend ( list , data )"		5321917	0					
ANR	5321949	Callee	ls_prepend		5321917	0					
ANR	5321950	Identifier	ls_prepend		5321917	0					
ANR	5321951	ArgumentList	list		5321917	1					
ANR	5321952	Argument	list		5321917	0					
ANR	5321953	Identifier	list		5321917	0					
ANR	5321954	Argument	data		5321917	1					
ANR	5321955	Identifier	data		5321917	0					
ANR	5321956	ForStatement	"for ( it = list -> head , i = 0 ; it && it -> data ; it = it -> n , i ++ )"		5321917	1					
ANR	5321957	ForInit	"it = list -> head , i = 0 ;"	294:7:5514:5536	5321917	0	True				
ANR	5321958	Expression	"it = list -> head , i = 0"		5321917	0					
ANR	5321959	AssignmentExpression	it = list -> head		5321917	0		=			
ANR	5321960	Identifier	it		5321917	0					
ANR	5321961	PtrMemberAccess	list -> head		5321917	1					
ANR	5321962	Identifier	list		5321917	0					
ANR	5321963	Identifier	head		5321917	1					
ANR	5321964	AssignmentExpression	i = 0		5321917	1		=			
ANR	5321965	Identifier	i		5321917	0					
ANR	5321966	PrimaryExpression	0		5321917	1					
ANR	5321967	Condition	it && it -> data	294:31:5538:5551	5321917	1	True				
ANR	5321968	AndExpression	it && it -> data		5321917	0		&&			
ANR	5321969	Identifier	it		5321917	0					
ANR	5321970	PtrMemberAccess	it -> data		5321917	1					
ANR	5321971	Identifier	it		5321917	0					
ANR	5321972	Identifier	data		5321917	1					
ANR	5321973	Expression	"it = it -> n , i ++"	294:47:5554:5568	5321917	2	True				
ANR	5321974	AssignmentExpression	it = it -> n		5321917	0		=			
ANR	5321975	Identifier	it		5321917	0					
ANR	5321976	PtrMemberAccess	it -> n		5321917	1					
ANR	5321977	Identifier	it		5321917	0					
ANR	5321978	Identifier	n		5321917	1					
ANR	5321979	PostIncDecOperationExpression	i ++		5321917	1					
ANR	5321980	Identifier	i		5321917	0					
ANR	5321981	IncDec	++		5321917	1					
ANR	5321982	CompoundStatement		8:64:177:177	5321917	3					
ANR	5321983	IfStatement	if ( i == n )		5321917	0					
ANR	5321984	Condition	i == n	295:7:5580:5585	5321917	0	True				
ANR	5321985	EqualityExpression	i == n		5321917	0		==			
ANR	5321986	Identifier	i		5321917	0					
ANR	5321987	Identifier	n		5321917	1					
ANR	5321988	CompoundStatement		9:15:194:194	5321917	1					
ANR	5321989	ExpressionStatement	item = R_NEW0 ( SdbListIter )	296:4:5594:5621	5321917	0	True				
ANR	5321990	AssignmentExpression	item = R_NEW0 ( SdbListIter )		5321917	0		=			
ANR	5321991	Identifier	item		5321917	0					
ANR	5321992	CallExpression	R_NEW0 ( SdbListIter )		5321917	1					
ANR	5321993	Callee	R_NEW0		5321917	0					
ANR	5321994	Identifier	R_NEW0		5321917	0					
ANR	5321995	ArgumentList	SdbListIter		5321917	1					
ANR	5321996	Argument	SdbListIter		5321917	0					
ANR	5321997	Identifier	SdbListIter		5321917	0					
ANR	5321998	IfStatement	if ( ! item )		5321917	1					
ANR	5321999	Condition	! item	297:8:5631:5635	5321917	0	True				
ANR	5322000	UnaryOperationExpression	! item		5321917	0					
ANR	5322001	UnaryOperator	!		5321917	0					
ANR	5322002	Identifier	item		5321917	1					
ANR	5322003	CompoundStatement		11:15:244:244	5321917	1					
ANR	5322004	ReturnStatement	return NULL ;	298:5:5645:5656	5321917	0	True				
ANR	5322005	Identifier	NULL		5321917	0					
ANR	5322006	ExpressionStatement	item -> data = data	300:4:5668:5685	5321917	2	True				
ANR	5322007	AssignmentExpression	item -> data = data		5321917	0		=			
ANR	5322008	PtrMemberAccess	item -> data		5321917	0					
ANR	5322009	Identifier	item		5321917	0					
ANR	5322010	Identifier	data		5321917	1					
ANR	5322011	Identifier	data		5321917	1					
ANR	5322012	ExpressionStatement	item -> n = it	301:4:5691:5703	5321917	3	True				
ANR	5322013	AssignmentExpression	item -> n = it		5321917	0		=			
ANR	5322014	PtrMemberAccess	item -> n		5321917	0					
ANR	5322015	Identifier	item		5321917	0					
ANR	5322016	Identifier	n		5321917	1					
ANR	5322017	Identifier	it		5321917	1					
ANR	5322018	ExpressionStatement	item -> p = it -> p	302:4:5709:5724	5321917	4	True				
ANR	5322019	AssignmentExpression	item -> p = it -> p		5321917	0		=			
ANR	5322020	PtrMemberAccess	item -> p		5321917	0					
ANR	5322021	Identifier	item		5321917	0					
ANR	5322022	Identifier	p		5321917	1					
ANR	5322023	PtrMemberAccess	it -> p		5321917	1					
ANR	5322024	Identifier	it		5321917	0					
ANR	5322025	Identifier	p		5321917	1					
ANR	5322026	IfStatement	if ( it -> p )		5321917	5					
ANR	5322027	Condition	it -> p	303:8:5734:5738	5321917	0	True				
ANR	5322028	PtrMemberAccess	it -> p		5321917	0					
ANR	5322029	Identifier	it		5321917	0					
ANR	5322030	Identifier	p		5321917	1					
ANR	5322031	CompoundStatement		17:15:347:347	5321917	1					
ANR	5322032	ExpressionStatement	it -> p -> n = item	304:5:5748:5763	5321917	0	True				
ANR	5322033	AssignmentExpression	it -> p -> n = item		5321917	0		=			
ANR	5322034	PtrMemberAccess	it -> p -> n		5321917	0					
ANR	5322035	PtrMemberAccess	it -> p		5321917	0					
ANR	5322036	Identifier	it		5321917	0					
ANR	5322037	Identifier	p		5321917	1					
ANR	5322038	Identifier	n		5321917	1					
ANR	5322039	Identifier	item		5321917	1					
ANR	5322040	ExpressionStatement	it -> p = item	306:4:5775:5787	5321917	6	True				
ANR	5322041	AssignmentExpression	it -> p = item		5321917	0		=			
ANR	5322042	PtrMemberAccess	it -> p		5321917	0					
ANR	5322043	Identifier	it		5321917	0					
ANR	5322044	Identifier	p		5321917	1					
ANR	5322045	Identifier	item		5321917	1					
ANR	5322046	ExpressionStatement	list -> length ++	307:4:5793:5807	5321917	7	True				
ANR	5322047	PostIncDecOperationExpression	list -> length ++		5321917	0					
ANR	5322048	PtrMemberAccess	list -> length		5321917	0					
ANR	5322049	Identifier	list		5321917	0					
ANR	5322050	Identifier	length		5321917	1					
ANR	5322051	IncDec	++		5321917	1					
ANR	5322052	ExpressionStatement	list -> sorted = false	308:4:5813:5833	5321917	8	True				
ANR	5322053	AssignmentExpression	list -> sorted = false		5321917	0		=			
ANR	5322054	PtrMemberAccess	list -> sorted		5321917	0					
ANR	5322055	Identifier	list		5321917	0					
ANR	5322056	Identifier	sorted		5321917	1					
ANR	5322057	Identifier	false		5321917	1					
ANR	5322058	ReturnStatement	return item ;	309:4:5839:5850	5321917	9	True				
ANR	5322059	Identifier	item		5321917	0					
ANR	5322060	ReturnStatement	"return ls_append ( list , data ) ;"	313:1:5865:5894	5321917	3	True				
ANR	5322061	CallExpression	"ls_append ( list , data )"		5321917	0					
ANR	5322062	Callee	ls_append		5321917	0					
ANR	5322063	Identifier	ls_append		5321917	0					
ANR	5322064	ArgumentList	list		5321917	1					
ANR	5322065	Argument	list		5321917	0					
ANR	5322066	Identifier	list		5321917	0					
ANR	5322067	Argument	data		5321917	1					
ANR	5322068	Identifier	data		5321917	0					
ANR	5322069	ReturnType	SDB_API SdbListIter *		5321917	1					
ANR	5322070	Identifier	ls_insert		5321917	2					
ANR	5322071	ParameterList	"SdbList * list , int n , void * data"		5321917	3					
ANR	5322072	Parameter	SdbList * list	287:31:5359:5371	5321917	0	True				
ANR	5322073	ParameterType	SdbList *		5321917	0					
ANR	5322074	Identifier	list		5321917	1					
ANR	5322075	Parameter	int n	287:46:5374:5378	5321917	1	True				
ANR	5322076	ParameterType	int		5321917	0					
ANR	5322077	Identifier	n		5321917	1					
ANR	5322078	Parameter	void * data	287:53:5381:5390	5321917	2	True				
ANR	5322079	ParameterType	void *		5321917	0					
ANR	5322080	Identifier	data		5321917	1					
ANR	5322081	CFGEntryNode	ENTRY		5321917		True				
ANR	5322082	CFGExitNode	EXIT		5321917		True				
ANR	5322083	Symbol	data		5321917						
ANR	5322084	Symbol	ls_append		5321917						
ANR	5322085	Symbol	SdbListIter		5321917						
ANR	5322086	Symbol	* * it		5321917						
ANR	5322087	Symbol	* item		5321917						
ANR	5322088	Symbol	list -> sorted		5321917						
ANR	5322089	Symbol	ls_prepend		5321917						
ANR	5322090	Symbol	item -> data		5321917						
ANR	5322091	Symbol	item		5321917						
ANR	5322092	Symbol	list -> length		5321917						
ANR	5322093	Symbol	NULL		5321917						
ANR	5322094	Symbol	false		5321917						
ANR	5322095	Symbol	i		5321917						
ANR	5322096	Symbol	item -> p		5321917						
ANR	5322097	Symbol	it		5321917						
ANR	5322098	Symbol	item -> n		5321917						
ANR	5322099	Symbol	list		5321917						
ANR	5322100	Symbol	it -> n		5321917						
ANR	5322101	Symbol	n		5321917						
ANR	5322102	Symbol	it -> p		5321917						
ANR	5322103	Symbol	list -> head		5321917						
ANR	5322104	Symbol	R_NEW0		5321917						
ANR	5322105	Symbol	* it		5321917						
ANR	5322106	Symbol	it -> p -> n		5321917						
ANR	5322107	Symbol	* list		5321917						
ANR	5322108	Symbol	* it -> p		5321917						
ANR	5322109	Symbol	it -> data		5321917						
ANR	5322110	Function	ls_pop_head	317:0:5900:6270							
ANR	5322111	FunctionDef	ls_pop_head (SdbList * list)		5322110	0					
ANR	5322112	CompoundStatement		317:41:5941:6270	5322110	0					
ANR	5322113	IdentifierDeclStatement	void * data = NULL ;	318:1:5944:5961	5322110	0	True				
ANR	5322114	IdentifierDecl	* data = NULL		5322110	0					
ANR	5322115	IdentifierDeclType	void *		5322110	0					
ANR	5322116	Identifier	data		5322110	1					
ANR	5322117	AssignmentExpression	* data = NULL		5322110	2		=			
ANR	5322118	Identifier	NULL		5322110	0					
ANR	5322119	Identifier	NULL		5322110	1					
ANR	5322120	IdentifierDeclStatement	SdbListIter * iter ;	319:1:5964:5981	5322110	1	True				
ANR	5322121	IdentifierDecl	* iter		5322110	0					
ANR	5322122	IdentifierDeclType	SdbListIter *		5322110	0					
ANR	5322123	Identifier	iter		5322110	1					
ANR	5322124	IfStatement	if ( list )		5322110	2					
ANR	5322125	Condition	list	320:5:5988:5991	5322110	0	True				
ANR	5322126	Identifier	list		5322110	0					
ANR	5322127	CompoundStatement		4:11:52:52	5322110	1					
ANR	5322128	IfStatement	if ( list -> head )		5322110	0					
ANR	5322129	Condition	list -> head	321:6:6002:6011	5322110	0	True				
ANR	5322130	PtrMemberAccess	list -> head		5322110	0					
ANR	5322131	Identifier	list		5322110	0					
ANR	5322132	Identifier	head		5322110	1					
ANR	5322133	CompoundStatement		5:18:72:72	5322110	1					
ANR	5322134	ExpressionStatement	iter = list -> head	322:3:6019:6036	5322110	0	True				
ANR	5322135	AssignmentExpression	iter = list -> head		5322110	0		=			
ANR	5322136	Identifier	iter		5322110	0					
ANR	5322137	PtrMemberAccess	list -> head		5322110	1					
ANR	5322138	Identifier	list		5322110	0					
ANR	5322139	Identifier	head		5322110	1					
ANR	5322140	IfStatement	if ( list -> head == list -> tail )		5322110	1					
ANR	5322141	Condition	list -> head == list -> tail	323:7:6045:6068	5322110	0	True				
ANR	5322142	EqualityExpression	list -> head == list -> tail		5322110	0		==			
ANR	5322143	PtrMemberAccess	list -> head		5322110	0					
ANR	5322144	Identifier	list		5322110	0					
ANR	5322145	Identifier	head		5322110	1					
ANR	5322146	PtrMemberAccess	list -> tail		5322110	1					
ANR	5322147	Identifier	list		5322110	0					
ANR	5322148	Identifier	tail		5322110	1					
ANR	5322149	CompoundStatement		7:33:129:129	5322110	1					
ANR	5322150	ExpressionStatement	list -> head = list -> tail = NULL	324:4:6077:6107	5322110	0	True				
ANR	5322151	AssignmentExpression	list -> head = list -> tail = NULL		5322110	0		=			
ANR	5322152	PtrMemberAccess	list -> head		5322110	0					
ANR	5322153	Identifier	list		5322110	0					
ANR	5322154	Identifier	head		5322110	1					
ANR	5322155	AssignmentExpression	list -> tail = NULL		5322110	1		=			
ANR	5322156	PtrMemberAccess	list -> tail		5322110	0					
ANR	5322157	Identifier	list		5322110	0					
ANR	5322158	Identifier	tail		5322110	1					
ANR	5322159	Identifier	NULL		5322110	1					
ANR	5322160	ElseStatement	else		5322110	0					
ANR	5322161	CompoundStatement		9:10:177:177	5322110	0					
ANR	5322162	ExpressionStatement	list -> head = iter -> n	326:4:6125:6145	5322110	0	True				
ANR	5322163	AssignmentExpression	list -> head = iter -> n		5322110	0		=			
ANR	5322164	PtrMemberAccess	list -> head		5322110	0					
ANR	5322165	Identifier	list		5322110	0					
ANR	5322166	Identifier	head		5322110	1					
ANR	5322167	PtrMemberAccess	iter -> n		5322110	1					
ANR	5322168	Identifier	iter		5322110	0					
ANR	5322169	Identifier	n		5322110	1					
ANR	5322170	ExpressionStatement	list -> head -> p = NULL	327:4:6151:6171	5322110	1	True				
ANR	5322171	AssignmentExpression	list -> head -> p = NULL		5322110	0		=			
ANR	5322172	PtrMemberAccess	list -> head -> p		5322110	0					
ANR	5322173	PtrMemberAccess	list -> head		5322110	0					
ANR	5322174	Identifier	list		5322110	0					
ANR	5322175	Identifier	head		5322110	1					
ANR	5322176	Identifier	p		5322110	1					
ANR	5322177	Identifier	NULL		5322110	1					
ANR	5322178	ExpressionStatement	data = iter -> data	329:3:6181:6198	5322110	2	True				
ANR	5322179	AssignmentExpression	data = iter -> data		5322110	0		=			
ANR	5322180	Identifier	data		5322110	0					
ANR	5322181	PtrMemberAccess	iter -> data		5322110	1					
ANR	5322182	Identifier	iter		5322110	0					
ANR	5322183	Identifier	data		5322110	1					
ANR	5322184	ExpressionStatement	free ( iter )	330:3:6203:6214	5322110	3	True				
ANR	5322185	CallExpression	free ( iter )		5322110	0					
ANR	5322186	Callee	free		5322110	0					
ANR	5322187	Identifier	free		5322110	0					
ANR	5322188	ArgumentList	iter		5322110	1					
ANR	5322189	Argument	iter		5322110	0					
ANR	5322190	Identifier	iter		5322110	0					
ANR	5322191	ExpressionStatement	list -> length --	332:2:6222:6236	5322110	1	True				
ANR	5322192	PostIncDecOperationExpression	list -> length --		5322110	0					
ANR	5322193	PtrMemberAccess	list -> length		5322110	0					
ANR	5322194	Identifier	list		5322110	0					
ANR	5322195	Identifier	length		5322110	1					
ANR	5322196	IncDec	--		5322110	1					
ANR	5322197	ReturnStatement	return data ;	333:2:6240:6251	5322110	2	True				
ANR	5322198	Identifier	data		5322110	0					
ANR	5322199	ReturnStatement	return NULL ;	335:1:6257:6268	5322110	3	True				
ANR	5322200	Identifier	NULL		5322110	0					
ANR	5322201	ReturnType	SDB_API void *		5322110	1					
ANR	5322202	Identifier	ls_pop_head		5322110	2					
ANR	5322203	ParameterList	SdbList * list		5322110	3					
ANR	5322204	Parameter	SdbList * list	317:26:5926:5938	5322110	0	True				
ANR	5322205	ParameterType	SdbList *		5322110	0					
ANR	5322206	Identifier	list		5322110	1					
ANR	5322207	CFGEntryNode	ENTRY		5322110		True				
ANR	5322208	CFGExitNode	EXIT		5322110		True				
ANR	5322209	Symbol	* list -> head		5322110						
ANR	5322210	Symbol	list -> length		5322110						
ANR	5322211	Symbol	NULL		5322110						
ANR	5322212	Symbol	list -> head -> p		5322110						
ANR	5322213	Symbol	data		5322110						
ANR	5322214	Symbol	iter		5322110						
ANR	5322215	Symbol	list		5322110						
ANR	5322216	Symbol	list -> head		5322110						
ANR	5322217	Symbol	* iter		5322110						
ANR	5322218	Symbol	* * list		5322110						
ANR	5322219	Symbol	* list		5322110						
ANR	5322220	Symbol	iter -> n		5322110						
ANR	5322221	Symbol	iter -> data		5322110						
ANR	5322222	Symbol	list -> tail		5322110						
ANR	5322223	Function	ls_del_n	339:0:6274:6787							
ANR	5322224	FunctionDef	"ls_del_n (SdbList * list , int n)"		5322223	0					
ANR	5322225	CompoundStatement		339:43:6317:6787	5322223	0					
ANR	5322226	IdentifierDeclStatement	SdbListIter * it ;	340:1:6320:6335	5322223	0	True				
ANR	5322227	IdentifierDecl	* it		5322223	0					
ANR	5322228	IdentifierDeclType	SdbListIter *		5322223	0					
ANR	5322229	Identifier	it		5322223	1					
ANR	5322230	IdentifierDeclStatement	int i ;	341:1:6338:6343	5322223	1	True				
ANR	5322231	IdentifierDecl	i		5322223	0					
ANR	5322232	IdentifierDeclType	int		5322223	0					
ANR	5322233	Identifier	i		5322223	1					
ANR	5322234	IfStatement	if ( ! list )		5322223	2					
ANR	5322235	Condition	! list	342:5:6350:6354	5322223	0	True				
ANR	5322236	UnaryOperationExpression	! list		5322223	0					
ANR	5322237	UnaryOperator	!		5322223	0					
ANR	5322238	Identifier	list		5322223	1					
ANR	5322239	CompoundStatement		4:12:39:39	5322223	1					
ANR	5322240	ReturnStatement	return false ;	343:2:6361:6373	5322223	0	True				
ANR	5322241	Identifier	false		5322223	0					
ANR	5322242	ForStatement	"for ( it = list -> head , i = 0 ; it && it -> data ; it = it -> n , i ++ )"		5322223	3					
ANR	5322243	ForInit	"it = list -> head , i = 0 ;"	345:6:6384:6406	5322223	0	True				
ANR	5322244	Expression	"it = list -> head , i = 0"		5322223	0					
ANR	5322245	AssignmentExpression	it = list -> head		5322223	0		=			
ANR	5322246	Identifier	it		5322223	0					
ANR	5322247	PtrMemberAccess	list -> head		5322223	1					
ANR	5322248	Identifier	list		5322223	0					
ANR	5322249	Identifier	head		5322223	1					
ANR	5322250	AssignmentExpression	i = 0		5322223	1		=			
ANR	5322251	Identifier	i		5322223	0					
ANR	5322252	PrimaryExpression	0		5322223	1					
ANR	5322253	Condition	it && it -> data	345:30:6408:6421	5322223	1	True				
ANR	5322254	AndExpression	it && it -> data		5322223	0		&&			
ANR	5322255	Identifier	it		5322223	0					
ANR	5322256	PtrMemberAccess	it -> data		5322223	1					
ANR	5322257	Identifier	it		5322223	0					
ANR	5322258	Identifier	data		5322223	1					
ANR	5322259	Expression	"it = it -> n , i ++"	345:46:6424:6438	5322223	2	True				
ANR	5322260	AssignmentExpression	it = it -> n		5322223	0		=			
ANR	5322261	Identifier	it		5322223	0					
ANR	5322262	PtrMemberAccess	it -> n		5322223	1					
ANR	5322263	Identifier	it		5322223	0					
ANR	5322264	Identifier	n		5322223	1					
ANR	5322265	PostIncDecOperationExpression	i ++		5322223	1					
ANR	5322266	Identifier	i		5322223	0					
ANR	5322267	IncDec	++		5322223	1					
ANR	5322268	IfStatement	if ( i == n )		5322223	3					
ANR	5322269	Condition	i == n	346:6:6447:6452	5322223	0	True				
ANR	5322270	EqualityExpression	i == n		5322223	0		==			
ANR	5322271	Identifier	i		5322223	0					
ANR	5322272	Identifier	n		5322223	1					
ANR	5322273	CompoundStatement		8:14:137:137	5322223	1					
ANR	5322274	IfStatement	if ( ! it -> p && ! it -> n )		5322223	0					
ANR	5322275	Condition	! it -> p && ! it -> n	347:7:6464:6479	5322223	0	True				
ANR	5322276	AndExpression	! it -> p && ! it -> n		5322223	0		&&			
ANR	5322277	UnaryOperationExpression	! it -> p		5322223	0					
ANR	5322278	UnaryOperator	!		5322223	0					
ANR	5322279	PtrMemberAccess	it -> p		5322223	1					
ANR	5322280	Identifier	it		5322223	0					
ANR	5322281	Identifier	p		5322223	1					
ANR	5322282	UnaryOperationExpression	! it -> n		5322223	1					
ANR	5322283	UnaryOperator	!		5322223	0					
ANR	5322284	PtrMemberAccess	it -> n		5322223	1					
ANR	5322285	Identifier	it		5322223	0					
ANR	5322286	Identifier	n		5322223	1					
ANR	5322287	CompoundStatement		9:25:164:164	5322223	1					
ANR	5322288	ExpressionStatement	list -> head = list -> tail = NULL	348:4:6488:6518	5322223	0	True				
ANR	5322289	AssignmentExpression	list -> head = list -> tail = NULL		5322223	0		=			
ANR	5322290	PtrMemberAccess	list -> head		5322223	0					
ANR	5322291	Identifier	list		5322223	0					
ANR	5322292	Identifier	head		5322223	1					
ANR	5322293	AssignmentExpression	list -> tail = NULL		5322223	1		=			
ANR	5322294	PtrMemberAccess	list -> tail		5322223	0					
ANR	5322295	Identifier	list		5322223	0					
ANR	5322296	Identifier	tail		5322223	1					
ANR	5322297	Identifier	NULL		5322223	1					
ANR	5322298	ElseStatement	else		5322223	0					
ANR	5322299	IfStatement	if ( ! it -> p )		5322223	0					
ANR	5322300	Condition	! it -> p	349:14:6534:6539	5322223	0	True				
ANR	5322301	UnaryOperationExpression	! it -> p		5322223	0					
ANR	5322302	UnaryOperator	!		5322223	0					
ANR	5322303	PtrMemberAccess	it -> p		5322223	1					
ANR	5322304	Identifier	it		5322223	0					
ANR	5322305	Identifier	p		5322223	1					
ANR	5322306	CompoundStatement		11:22:224:224	5322223	1					
ANR	5322307	ExpressionStatement	it -> n -> p = NULL	350:4:6548:6563	5322223	0	True				
ANR	5322308	AssignmentExpression	it -> n -> p = NULL		5322223	0		=			
ANR	5322309	PtrMemberAccess	it -> n -> p		5322223	0					
ANR	5322310	PtrMemberAccess	it -> n		5322223	0					
ANR	5322311	Identifier	it		5322223	0					
ANR	5322312	Identifier	n		5322223	1					
ANR	5322313	Identifier	p		5322223	1					
ANR	5322314	Identifier	NULL		5322223	1					
ANR	5322315	ExpressionStatement	list -> head = it -> n	351:4:6569:6587	5322223	1	True				
ANR	5322316	AssignmentExpression	list -> head = it -> n		5322223	0		=			
ANR	5322317	PtrMemberAccess	list -> head		5322223	0					
ANR	5322318	Identifier	list		5322223	0					
ANR	5322319	Identifier	head		5322223	1					
ANR	5322320	PtrMemberAccess	it -> n		5322223	1					
ANR	5322321	Identifier	it		5322223	0					
ANR	5322322	Identifier	n		5322223	1					
ANR	5322323	ElseStatement	else		5322223	0					
ANR	5322324	IfStatement	if ( ! it -> n )		5322223	0					
ANR	5322325	Condition	! it -> n	352:14:6603:6608	5322223	0	True				
ANR	5322326	UnaryOperationExpression	! it -> n		5322223	0					
ANR	5322327	UnaryOperator	!		5322223	0					
ANR	5322328	PtrMemberAccess	it -> n		5322223	1					
ANR	5322329	Identifier	it		5322223	0					
ANR	5322330	Identifier	n		5322223	1					
ANR	5322331	CompoundStatement		14:22:293:293	5322223	1					
ANR	5322332	ExpressionStatement	it -> p -> n = NULL	353:4:6617:6632	5322223	0	True				
ANR	5322333	AssignmentExpression	it -> p -> n = NULL		5322223	0		=			
ANR	5322334	PtrMemberAccess	it -> p -> n		5322223	0					
ANR	5322335	PtrMemberAccess	it -> p		5322223	0					
ANR	5322336	Identifier	it		5322223	0					
ANR	5322337	Identifier	p		5322223	1					
ANR	5322338	Identifier	n		5322223	1					
ANR	5322339	Identifier	NULL		5322223	1					
ANR	5322340	ExpressionStatement	list -> tail = it -> p	354:4:6638:6656	5322223	1	True				
ANR	5322341	AssignmentExpression	list -> tail = it -> p		5322223	0		=			
ANR	5322342	PtrMemberAccess	list -> tail		5322223	0					
ANR	5322343	Identifier	list		5322223	0					
ANR	5322344	Identifier	tail		5322223	1					
ANR	5322345	PtrMemberAccess	it -> p		5322223	1					
ANR	5322346	Identifier	it		5322223	0					
ANR	5322347	Identifier	p		5322223	1					
ANR	5322348	ElseStatement	else		5322223	0					
ANR	5322349	CompoundStatement		17:10:350:350	5322223	0					
ANR	5322350	ExpressionStatement	it -> p -> n = it -> n	356:4:6674:6690	5322223	0	True				
ANR	5322351	AssignmentExpression	it -> p -> n = it -> n		5322223	0		=			
ANR	5322352	PtrMemberAccess	it -> p -> n		5322223	0					
ANR	5322353	PtrMemberAccess	it -> p		5322223	0					
ANR	5322354	Identifier	it		5322223	0					
ANR	5322355	Identifier	p		5322223	1					
ANR	5322356	Identifier	n		5322223	1					
ANR	5322357	PtrMemberAccess	it -> n		5322223	1					
ANR	5322358	Identifier	it		5322223	0					
ANR	5322359	Identifier	n		5322223	1					
ANR	5322360	ExpressionStatement	it -> n -> p = it -> p	357:4:6696:6712	5322223	1	True				
ANR	5322361	AssignmentExpression	it -> n -> p = it -> p		5322223	0		=			
ANR	5322362	PtrMemberAccess	it -> n -> p		5322223	0					
ANR	5322363	PtrMemberAccess	it -> n		5322223	0					
ANR	5322364	Identifier	it		5322223	0					
ANR	5322365	Identifier	n		5322223	1					
ANR	5322366	Identifier	p		5322223	1					
ANR	5322367	PtrMemberAccess	it -> p		5322223	1					
ANR	5322368	Identifier	it		5322223	0					
ANR	5322369	Identifier	p		5322223	1					
ANR	5322370	ExpressionStatement	free ( it )	359:3:6722:6731	5322223	1	True				
ANR	5322371	CallExpression	free ( it )		5322223	0					
ANR	5322372	Callee	free		5322223	0					
ANR	5322373	Identifier	free		5322223	0					
ANR	5322374	ArgumentList	it		5322223	1					
ANR	5322375	Argument	it		5322223	0					
ANR	5322376	Identifier	it		5322223	0					
ANR	5322377	ExpressionStatement	list -> length --	360:3:6736:6750	5322223	2	True				
ANR	5322378	PostIncDecOperationExpression	list -> length --		5322223	0					
ANR	5322379	PtrMemberAccess	list -> length		5322223	0					
ANR	5322380	Identifier	list		5322223	0					
ANR	5322381	Identifier	length		5322223	1					
ANR	5322382	IncDec	--		5322223	1					
ANR	5322383	ReturnStatement	return true ;	361:3:6755:6766	5322223	3	True				
ANR	5322384	Identifier	true		5322223	0					
ANR	5322385	ReturnStatement	return false ;	363:1:6773:6785	5322223	4	True				
ANR	5322386	Identifier	false		5322223	0					
ANR	5322387	ReturnType	SDB_API int		5322223	1					
ANR	5322388	Identifier	ls_del_n		5322223	2					
ANR	5322389	ParameterList	"SdbList * list , int n"		5322223	3					
ANR	5322390	Parameter	SdbList * list	339:21:6295:6307	5322223	0	True				
ANR	5322391	ParameterType	SdbList *		5322223	0					
ANR	5322392	Identifier	list		5322223	1					
ANR	5322393	Parameter	int n	339:36:6310:6314	5322223	1	True				
ANR	5322394	ParameterType	int		5322223	0					
ANR	5322395	Identifier	n		5322223	1					
ANR	5322396	CFGEntryNode	ENTRY		5322223		True				
ANR	5322397	CFGExitNode	EXIT		5322223		True				
ANR	5322398	Symbol	list -> length		5322223						
ANR	5322399	Symbol	NULL		5322223						
ANR	5322400	Symbol	* it -> n		5322223						
ANR	5322401	Symbol	false		5322223						
ANR	5322402	Symbol	i		5322223						
ANR	5322403	Symbol	it		5322223						
ANR	5322404	Symbol	list		5322223						
ANR	5322405	Symbol	it -> n		5322223						
ANR	5322406	Symbol	n		5322223						
ANR	5322407	Symbol	it -> p		5322223						
ANR	5322408	Symbol	list -> head		5322223						
ANR	5322409	Symbol	* it		5322223						
ANR	5322410	Symbol	it -> p -> n		5322223						
ANR	5322411	Symbol	* list		5322223						
ANR	5322412	Symbol	* * it		5322223						
ANR	5322413	Symbol	* it -> p		5322223						
ANR	5322414	Symbol	true		5322223						
ANR	5322415	Symbol	it -> data		5322223						
ANR	5322416	Symbol	it -> n -> p		5322223						
ANR	5322417	Symbol	list -> tail		5322223						
