command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5042504	File	data/converged/CVE-2019-16718~_radare2/libr_reg_cond.c								
ANR	5042505	Function	r_reg_cond_get	14:13:191:486							
ANR	5042506	FunctionDef	"r_reg_cond_get (RReg * reg , const char * name)"		5042505	0					
ANR	5042507	CompoundStatement		16:60:254:486	5042505	0					
ANR	5042508	IdentifierDeclStatement	int i = R_REG_TYPE_GPR ;	17:1:257:279	5042505	0	True				
ANR	5042509	IdentifierDecl	i = R_REG_TYPE_GPR		5042505	0					
ANR	5042510	IdentifierDeclType	int		5042505	0					
ANR	5042511	Identifier	i		5042505	1					
ANR	5042512	AssignmentExpression	i = R_REG_TYPE_GPR		5042505	2		=			
ANR	5042513	Identifier	R_REG_TYPE_GPR		5042505	0					
ANR	5042514	Identifier	R_REG_TYPE_GPR		5042505	1					
ANR	5042515	IdentifierDeclStatement	RListIter * iter ;	18:1:282:297	5042505	1	True				
ANR	5042516	IdentifierDecl	* iter		5042505	0					
ANR	5042517	IdentifierDeclType	RListIter *		5042505	0					
ANR	5042518	Identifier	iter		5042505	1					
ANR	5042519	IdentifierDeclStatement	RRegItem * r ;	19:1:300:311	5042505	2	True				
ANR	5042520	IdentifierDecl	* r		5042505	0					
ANR	5042521	IdentifierDeclType	RRegItem *		5042505	0					
ANR	5042522	Identifier	r		5042505	1					
ANR	5042523	ExpressionStatement	"r_return_val_if_fail ( reg && name , NULL )"	20:1:314:354	5042505	3	True				
ANR	5042524	CallExpression	"r_return_val_if_fail ( reg && name , NULL )"		5042505	0					
ANR	5042525	Callee	r_return_val_if_fail		5042505	0					
ANR	5042526	Identifier	r_return_val_if_fail		5042505	0					
ANR	5042527	ArgumentList	reg && name		5042505	1					
ANR	5042528	Argument	reg && name		5042505	0					
ANR	5042529	AndExpression	reg && name		5042505	0		&&			
ANR	5042530	Identifier	reg		5042505	0					
ANR	5042531	Identifier	name		5042505	1					
ANR	5042532	Argument	NULL		5042505	1					
ANR	5042533	Identifier	NULL		5042505	0					
ANR	5042534	Statement	r_list_foreach	22:1:358:371	5042505	4	True				
ANR	5042535	Statement	(	22:16:373:373	5042505	5	True				
ANR	5042536	Statement	reg	22:17:374:376	5042505	6	True				
ANR	5042537	Statement	->	22:20:377:378	5042505	7	True				
ANR	5042538	Statement	regset	22:22:379:384	5042505	8	True				
ANR	5042539	Statement	[	22:28:385:385	5042505	9	True				
ANR	5042540	Statement	i	22:29:386:386	5042505	10	True				
ANR	5042541	Statement	]	22:30:387:387	5042505	11	True				
ANR	5042542	Statement	.	22:31:388:388	5042505	12	True				
ANR	5042543	Statement	regs	22:32:389:392	5042505	13	True				
ANR	5042544	Statement	","	22:36:393:393	5042505	14	True				
ANR	5042545	Statement	iter	22:38:395:398	5042505	15	True				
ANR	5042546	Statement	","	22:42:399:399	5042505	16	True				
ANR	5042547	Statement	r	22:44:401:401	5042505	17	True				
ANR	5042548	Statement	)	22:45:402:402	5042505	18	True				
ANR	5042549	CompoundStatement		7:47:149:149	5042505	19					
ANR	5042550	IfStatement	"if ( r -> flags && ! strcmp ( name , r -> flags ) )"		5042505	0					
ANR	5042551	Condition	"r -> flags && ! strcmp ( name , r -> flags )"	23:6:412:447	5042505	0	True				
ANR	5042552	AndExpression	"r -> flags && ! strcmp ( name , r -> flags )"		5042505	0		&&			
ANR	5042553	PtrMemberAccess	r -> flags		5042505	0					
ANR	5042554	Identifier	r		5042505	0					
ANR	5042555	Identifier	flags		5042505	1					
ANR	5042556	UnaryOperationExpression	"! strcmp ( name , r -> flags )"		5042505	1					
ANR	5042557	UnaryOperator	!		5042505	0					
ANR	5042558	CallExpression	"strcmp ( name , r -> flags )"		5042505	1					
ANR	5042559	Callee	strcmp		5042505	0					
ANR	5042560	Identifier	strcmp		5042505	0					
ANR	5042561	ArgumentList	name		5042505	1					
ANR	5042562	Argument	name		5042505	0					
ANR	5042563	Identifier	name		5042505	0					
ANR	5042564	Argument	r -> flags		5042505	1					
ANR	5042565	PtrMemberAccess	r -> flags		5042505	0					
ANR	5042566	Identifier	r		5042505	0					
ANR	5042567	Identifier	flags		5042505	1					
ANR	5042568	CompoundStatement		8:44:195:195	5042505	1					
ANR	5042569	ReturnStatement	return r ;	24:3:455:463	5042505	0	True				
ANR	5042570	Identifier	r		5042505	0					
ANR	5042571	ReturnStatement	return NULL ;	27:1:473:484	5042505	20	True				
ANR	5042572	Identifier	NULL		5042505	0					
ANR	5042573	ReturnType	p R_API RRegItem *		5042505	1					
ANR	5042574	Identifier	r_reg_cond_get		5042505	2					
ANR	5042575	ParameterList	"RReg * reg , const char * name"		5042505	3					
ANR	5042576	Parameter	RReg * reg	16:31:225:233	5042505	0	True				
ANR	5042577	ParameterType	RReg *		5042505	0					
ANR	5042578	Identifier	reg		5042505	1					
ANR	5042579	Parameter	const char * name	16:42:236:251	5042505	1	True				
ANR	5042580	ParameterType	const char *		5042505	0					
ANR	5042581	Identifier	name		5042505	1					
ANR	5042582	CFGEntryNode	ENTRY		5042505		True				
ANR	5042583	CFGExitNode	EXIT		5042505		True				
ANR	5042584	Symbol	strcmp		5042505						
ANR	5042585	Symbol	r		5042505						
ANR	5042586	Symbol	r -> flags		5042505						
ANR	5042587	Symbol	NULL		5042505						
ANR	5042588	Symbol	reg		5042505						
ANR	5042589	Symbol	name		5042505						
ANR	5042590	Symbol	i		5042505						
ANR	5042591	Symbol	iter		5042505						
ANR	5042592	Symbol	* r		5042505						
ANR	5042593	Symbol	R_REG_TYPE_GPR		5042505						
ANR	5042594	Function	r_reg_cond_get_value	30:0:489:617							
ANR	5042595	FunctionDef	"r_reg_cond_get_value (RReg * r , const char * name)"		5042594	0					
ANR	5042596	CompoundStatement		30:58:547:617	5042594	0					
ANR	5042597	ReturnStatement	"return ( int ) r_reg_get_value ( r , r_reg_cond_get ( r , name ) ) ? 1 : 0 ;"	31:1:550:615	5042594	0	True				
ANR	5042598	ConditionalExpression	"( int ) r_reg_get_value ( r , r_reg_cond_get ( r , name ) ) ? 1 : 0"		5042594	0					
ANR	5042599	Condition	"( int ) r_reg_get_value ( r , r_reg_cond_get ( r , name ) )"		5042594	0					
ANR	5042600	CastExpression	"( int ) r_reg_get_value ( r , r_reg_cond_get ( r , name ) )"		5042594	0					
ANR	5042601	CastTarget	int		5042594	0					
ANR	5042602	CallExpression	"r_reg_get_value ( r , r_reg_cond_get ( r , name ) )"		5042594	1					
ANR	5042603	Callee	r_reg_get_value		5042594	0					
ANR	5042604	Identifier	r_reg_get_value		5042594	0					
ANR	5042605	ArgumentList	r		5042594	1					
ANR	5042606	Argument	r		5042594	0					
ANR	5042607	Identifier	r		5042594	0					
ANR	5042608	Argument	"r_reg_cond_get ( r , name )"		5042594	1					
ANR	5042609	CallExpression	"r_reg_cond_get ( r , name )"		5042594	0					
ANR	5042610	Callee	r_reg_cond_get		5042594	0					
ANR	5042611	Identifier	r_reg_cond_get		5042594	0					
ANR	5042612	ArgumentList	r		5042594	1					
ANR	5042613	Argument	r		5042594	0					
ANR	5042614	Identifier	r		5042594	0					
ANR	5042615	Argument	name		5042594	1					
ANR	5042616	Identifier	name		5042594	0					
ANR	5042617	PrimaryExpression	1		5042594	1					
ANR	5042618	PrimaryExpression	0		5042594	2					
ANR	5042619	ReturnType	R_API int		5042594	1					
ANR	5042620	Identifier	r_reg_cond_get_value		5042594	2					
ANR	5042621	ParameterList	"RReg * r , const char * name"		5042594	3					
ANR	5042622	Parameter	RReg * r	30:31:520:526	5042594	0	True				
ANR	5042623	ParameterType	RReg *		5042594	0					
ANR	5042624	Identifier	r		5042594	1					
ANR	5042625	Parameter	const char * name	30:40:529:544	5042594	1	True				
ANR	5042626	ParameterType	const char *		5042594	0					
ANR	5042627	Identifier	name		5042594	1					
ANR	5042628	CFGEntryNode	ENTRY		5042594		True				
ANR	5042629	CFGExitNode	EXIT		5042594		True				
ANR	5042630	Symbol	r		5042594						
ANR	5042631	Symbol	r_reg_get_value		5042594						
ANR	5042632	Symbol	r_reg_cond_get		5042594						
ANR	5042633	Symbol	name		5042594						
ANR	5042634	Function	r_reg_cond_set	34:0:620:851							
ANR	5042635	FunctionDef	"r_reg_cond_set (RReg * r , const char * name , bool val)"		5042634	0					
ANR	5042636	CompoundStatement		34:63:683:851	5042634	0					
ANR	5042637	IdentifierDeclStatement	"RRegItem * item = r_reg_cond_get ( r , name ) ;"	35:1:686:727	5042634	0	True				
ANR	5042638	IdentifierDecl	"* item = r_reg_cond_get ( r , name )"		5042634	0					
ANR	5042639	IdentifierDeclType	RRegItem *		5042634	0					
ANR	5042640	Identifier	item		5042634	1					
ANR	5042641	AssignmentExpression	"* item = r_reg_cond_get ( r , name )"		5042634	2		=			
ANR	5042642	Identifier	item		5042634	0					
ANR	5042643	CallExpression	"r_reg_cond_get ( r , name )"		5042634	1					
ANR	5042644	Callee	r_reg_cond_get		5042634	0					
ANR	5042645	Identifier	r_reg_cond_get		5042634	0					
ANR	5042646	ArgumentList	r		5042634	1					
ANR	5042647	Argument	r		5042634	0					
ANR	5042648	Identifier	r		5042634	0					
ANR	5042649	Argument	name		5042634	1					
ANR	5042650	Identifier	name		5042634	0					
ANR	5042651	IfStatement	if ( item )		5042634	1					
ANR	5042652	Condition	item	36:5:734:737	5042634	0	True				
ANR	5042653	Identifier	item		5042634	0					
ANR	5042654	CompoundStatement		3:11:56:56	5042634	1					
ANR	5042655	ExpressionStatement	"r_reg_set_value ( r , item , val )"	37:2:744:774	5042634	0	True				
ANR	5042656	CallExpression	"r_reg_set_value ( r , item , val )"		5042634	0					
ANR	5042657	Callee	r_reg_set_value		5042634	0					
ANR	5042658	Identifier	r_reg_set_value		5042634	0					
ANR	5042659	ArgumentList	r		5042634	1					
ANR	5042660	Argument	r		5042634	0					
ANR	5042661	Identifier	r		5042634	0					
ANR	5042662	Argument	item		5042634	1					
ANR	5042663	Identifier	item		5042634	0					
ANR	5042664	Argument	val		5042634	2					
ANR	5042665	Identifier	val		5042634	0					
ANR	5042666	ReturnStatement	return true ;	38:2:778:789	5042634	1	True				
ANR	5042667	Identifier	true		5042634	0					
ANR	5042668	ReturnStatement	return false ;	41:1:837:849	5042634	2	True				
ANR	5042669	Identifier	false		5042634	0					
ANR	5042670	ReturnType	R_API bool		5042634	1					
ANR	5042671	Identifier	r_reg_cond_set		5042634	2					
ANR	5042672	ParameterList	"RReg * r , const char * name , bool val"		5042634	3					
ANR	5042673	Parameter	RReg * r	34:26:646:652	5042634	0	True				
ANR	5042674	ParameterType	RReg *		5042634	0					
ANR	5042675	Identifier	r		5042634	1					
ANR	5042676	Parameter	const char * name	34:35:655:670	5042634	1	True				
ANR	5042677	ParameterType	const char *		5042634	0					
ANR	5042678	Identifier	name		5042634	1					
ANR	5042679	Parameter	bool val	34:53:673:680	5042634	2	True				
ANR	5042680	ParameterType	bool		5042634	0					
ANR	5042681	Identifier	val		5042634	1					
ANR	5042682	CFGEntryNode	ENTRY		5042634		True				
ANR	5042683	CFGExitNode	EXIT		5042634		True				
ANR	5042684	Symbol	val		5042634						
ANR	5042685	Symbol	r		5042634						
ANR	5042686	Symbol	item		5042634						
ANR	5042687	Symbol	r_reg_cond_get		5042634						
ANR	5042688	Symbol	name		5042634						
ANR	5042689	Symbol	true		5042634						
ANR	5042690	Symbol	false		5042634						
ANR	5042691	Function	r_reg_cond_to_string	44:6:860:1100							
ANR	5042692	FunctionDef	r_reg_cond_to_string (int n)		5042691	0					
ANR	5042693	CompoundStatement		44:46:900:1100	5042691	0					
ANR	5042694	IdentifierDeclStatement	"const char * cs [ ] = { ""eq"" , ""ne"" , ""cf"" , ""neg"" , ""of"" , ""hi"" , ""he"" , ""lo"" , ""loe"" , ""ge"" , ""gt"" , ""lt"" , ""le"" } ;"	45:1:903:1009	5042691	0	True				
ANR	5042695	IdentifierDecl	"* cs [ ] = { ""eq"" , ""ne"" , ""cf"" , ""neg"" , ""of"" , ""hi"" , ""he"" , ""lo"" , ""loe"" , ""ge"" , ""gt"" , ""lt"" , ""le"" }"		5042691	0					
ANR	5042696	IdentifierDeclType	const char * [ ]		5042691	0					
ANR	5042697	Identifier	cs		5042691	1					
ANR	5042698	AssignmentExpression	"* cs [ ] = { ""eq"" , ""ne"" , ""cf"" , ""neg"" , ""of"" , ""hi"" , ""he"" , ""lo"" , ""loe"" , ""ge"" , ""gt"" , ""lt"" , ""le"" }"		5042691	2		=			
ANR	5042699	Identifier	cs		5042691	0					
ANR	5042700	InitializerList	"""eq"""		5042691	1					
ANR	5042701	PrimaryExpression	"""eq"""		5042691	0					
ANR	5042702	PrimaryExpression	"""ne"""		5042691	1					
ANR	5042703	PrimaryExpression	"""cf"""		5042691	2					
ANR	5042704	PrimaryExpression	"""neg"""		5042691	3					
ANR	5042705	PrimaryExpression	"""of"""		5042691	4					
ANR	5042706	PrimaryExpression	"""hi"""		5042691	5					
ANR	5042707	PrimaryExpression	"""he"""		5042691	6					
ANR	5042708	PrimaryExpression	"""lo"""		5042691	7					
ANR	5042709	PrimaryExpression	"""loe"""		5042691	8					
ANR	5042710	PrimaryExpression	"""ge"""		5042691	9					
ANR	5042711	PrimaryExpression	"""gt"""		5042691	10					
ANR	5042712	PrimaryExpression	"""lt"""		5042691	11					
ANR	5042713	PrimaryExpression	"""le"""		5042691	12					
ANR	5042714	IfStatement	if ( n < 0 || ( n > ( sizeof ( cs ) / sizeof ( * cs ) ) - 1 ) )		5042691	1					
ANR	5042715	Condition	n < 0 || ( n > ( sizeof ( cs ) / sizeof ( * cs ) ) - 1 )	49:5:1016:1062	5042691	0	True				
ANR	5042716	OrExpression	n < 0 || ( n > ( sizeof ( cs ) / sizeof ( * cs ) ) - 1 )		5042691	0		||			
ANR	5042717	RelationalExpression	n < 0		5042691	0		<			
ANR	5042718	Identifier	n		5042691	0					
ANR	5042719	PrimaryExpression	0		5042691	1					
ANR	5042720	RelationalExpression	n > ( sizeof ( cs ) / sizeof ( * cs ) ) - 1		5042691	1		>			
ANR	5042721	Identifier	n		5042691	0					
ANR	5042722	AdditiveExpression	( sizeof ( cs ) / sizeof ( * cs ) ) - 1		5042691	1		-			
ANR	5042723	MultiplicativeExpression	sizeof ( cs ) / sizeof ( * cs )		5042691	0		/			
ANR	5042724	SizeofExpression	sizeof ( cs )		5042691	0					
ANR	5042725	Sizeof	sizeof		5042691	0					
ANR	5042726	SizeofOperand	cs		5042691	1					
ANR	5042727	SizeofExpression	sizeof ( * cs )		5042691	1					
ANR	5042728	Sizeof	sizeof		5042691	0					
ANR	5042729	UnaryOperationExpression	* cs		5042691	1					
ANR	5042730	UnaryOperator	*		5042691	0					
ANR	5042731	Identifier	cs		5042691	1					
ANR	5042732	PrimaryExpression	1		5042691	1					
ANR	5042733	CompoundStatement		6:54:164:164	5042691	1					
ANR	5042734	ReturnStatement	return NULL ;	50:2:1069:1080	5042691	0	True				
ANR	5042735	Identifier	NULL		5042691	0					
ANR	5042736	ReturnStatement	return cs [ n ] ;	52:1:1086:1098	5042691	2	True				
ANR	5042737	ArrayIndexing	cs [ n ]		5042691	0					
ANR	5042738	Identifier	cs		5042691	0					
ANR	5042739	Identifier	n		5042691	1					
ANR	5042740	ReturnType	const char *		5042691	1					
ANR	5042741	Identifier	r_reg_cond_to_string		5042691	2					
ANR	5042742	ParameterList	int n		5042691	3					
ANR	5042743	Parameter	int n	44:39:893:897	5042691	0	True				
ANR	5042744	ParameterType	int		5042691	0					
ANR	5042745	Identifier	n		5042691	1					
ANR	5042746	CFGEntryNode	ENTRY		5042691		True				
ANR	5042747	CFGExitNode	EXIT		5042691		True				
ANR	5042748	Symbol	cs		5042691						
ANR	5042749	Symbol	NULL		5042691						
ANR	5042750	Symbol	* cs		5042691						
ANR	5042751	Symbol	* n		5042691						
ANR	5042752	Symbol	n		5042691						
ANR	5042753	Function	r_reg_cond_from_string	55:0:1103:2359							
ANR	5042754	FunctionDef	r_reg_cond_from_string (const char * str)		5042753	0					
ANR	5042755	CompoundStatement		55:50:1153:2359	5042753	0					
ANR	5042756	IfStatement	"if ( ! strcmp ( str , ""eq"" ) )"		5042753	0					
ANR	5042757	Condition	"! strcmp ( str , ""eq"" )"	56:5:1160:1178	5042753	0	True				
ANR	5042758	UnaryOperationExpression	"! strcmp ( str , ""eq"" )"		5042753	0					
ANR	5042759	UnaryOperator	!		5042753	0					
ANR	5042760	CallExpression	"strcmp ( str , ""eq"" )"		5042753	1					
ANR	5042761	Callee	strcmp		5042753	0					
ANR	5042762	Identifier	strcmp		5042753	0					
ANR	5042763	ArgumentList	str		5042753	1					
ANR	5042764	Argument	str		5042753	0					
ANR	5042765	Identifier	str		5042753	0					
ANR	5042766	Argument	"""eq"""		5042753	1					
ANR	5042767	PrimaryExpression	"""eq"""		5042753	0					
ANR	5042768	CompoundStatement		2:26:27:27	5042753	1					
ANR	5042769	ReturnStatement	return R_REG_COND_EQ ;	57:2:1185:1205	5042753	0	True				
ANR	5042770	Identifier	R_REG_COND_EQ		5042753	0					
ANR	5042771	IfStatement	"if ( ! strcmp ( str , ""ne"" ) )"		5042753	1					
ANR	5042772	Condition	"! strcmp ( str , ""ne"" )"	59:5:1215:1233	5042753	0	True				
ANR	5042773	UnaryOperationExpression	"! strcmp ( str , ""ne"" )"		5042753	0					
ANR	5042774	UnaryOperator	!		5042753	0					
ANR	5042775	CallExpression	"strcmp ( str , ""ne"" )"		5042753	1					
ANR	5042776	Callee	strcmp		5042753	0					
ANR	5042777	Identifier	strcmp		5042753	0					
ANR	5042778	ArgumentList	str		5042753	1					
ANR	5042779	Argument	str		5042753	0					
ANR	5042780	Identifier	str		5042753	0					
ANR	5042781	Argument	"""ne"""		5042753	1					
ANR	5042782	PrimaryExpression	"""ne"""		5042753	0					
ANR	5042783	CompoundStatement		5:26:82:82	5042753	1					
ANR	5042784	ReturnStatement	return R_REG_COND_NE ;	60:2:1240:1260	5042753	0	True				
ANR	5042785	Identifier	R_REG_COND_NE		5042753	0					
ANR	5042786	IfStatement	"if ( ! strcmp ( str , ""cf"" ) )"		5042753	2					
ANR	5042787	Condition	"! strcmp ( str , ""cf"" )"	62:5:1270:1288	5042753	0	True				
ANR	5042788	UnaryOperationExpression	"! strcmp ( str , ""cf"" )"		5042753	0					
ANR	5042789	UnaryOperator	!		5042753	0					
ANR	5042790	CallExpression	"strcmp ( str , ""cf"" )"		5042753	1					
ANR	5042791	Callee	strcmp		5042753	0					
ANR	5042792	Identifier	strcmp		5042753	0					
ANR	5042793	ArgumentList	str		5042753	1					
ANR	5042794	Argument	str		5042753	0					
ANR	5042795	Identifier	str		5042753	0					
ANR	5042796	Argument	"""cf"""		5042753	1					
ANR	5042797	PrimaryExpression	"""cf"""		5042753	0					
ANR	5042798	CompoundStatement		8:26:137:137	5042753	1					
ANR	5042799	ReturnStatement	return R_REG_COND_CF ;	63:2:1295:1315	5042753	0	True				
ANR	5042800	Identifier	R_REG_COND_CF		5042753	0					
ANR	5042801	IfStatement	"if ( ! strcmp ( str , ""neg"" ) )"		5042753	3					
ANR	5042802	Condition	"! strcmp ( str , ""neg"" )"	65:5:1325:1344	5042753	0	True				
ANR	5042803	UnaryOperationExpression	"! strcmp ( str , ""neg"" )"		5042753	0					
ANR	5042804	UnaryOperator	!		5042753	0					
ANR	5042805	CallExpression	"strcmp ( str , ""neg"" )"		5042753	1					
ANR	5042806	Callee	strcmp		5042753	0					
ANR	5042807	Identifier	strcmp		5042753	0					
ANR	5042808	ArgumentList	str		5042753	1					
ANR	5042809	Argument	str		5042753	0					
ANR	5042810	Identifier	str		5042753	0					
ANR	5042811	Argument	"""neg"""		5042753	1					
ANR	5042812	PrimaryExpression	"""neg"""		5042753	0					
ANR	5042813	CompoundStatement		11:27:193:193	5042753	1					
ANR	5042814	ReturnStatement	return R_REG_COND_NEG ;	66:2:1351:1372	5042753	0	True				
ANR	5042815	Identifier	R_REG_COND_NEG		5042753	0					
ANR	5042816	IfStatement	"if ( ! strcmp ( str , ""of"" ) )"		5042753	4					
ANR	5042817	Condition	"! strcmp ( str , ""of"" )"	68:5:1382:1400	5042753	0	True				
ANR	5042818	UnaryOperationExpression	"! strcmp ( str , ""of"" )"		5042753	0					
ANR	5042819	UnaryOperator	!		5042753	0					
ANR	5042820	CallExpression	"strcmp ( str , ""of"" )"		5042753	1					
ANR	5042821	Callee	strcmp		5042753	0					
ANR	5042822	Identifier	strcmp		5042753	0					
ANR	5042823	ArgumentList	str		5042753	1					
ANR	5042824	Argument	str		5042753	0					
ANR	5042825	Identifier	str		5042753	0					
ANR	5042826	Argument	"""of"""		5042753	1					
ANR	5042827	PrimaryExpression	"""of"""		5042753	0					
ANR	5042828	CompoundStatement		14:26:249:249	5042753	1					
ANR	5042829	ReturnStatement	return R_REG_COND_OF ;	69:2:1407:1427	5042753	0	True				
ANR	5042830	Identifier	R_REG_COND_OF		5042753	0					
ANR	5042831	IfStatement	"if ( ! strcmp ( str , ""hi"" ) )"		5042753	5					
ANR	5042832	Condition	"! strcmp ( str , ""hi"" )"	71:5:1437:1455	5042753	0	True				
ANR	5042833	UnaryOperationExpression	"! strcmp ( str , ""hi"" )"		5042753	0					
ANR	5042834	UnaryOperator	!		5042753	0					
ANR	5042835	CallExpression	"strcmp ( str , ""hi"" )"		5042753	1					
ANR	5042836	Callee	strcmp		5042753	0					
ANR	5042837	Identifier	strcmp		5042753	0					
ANR	5042838	ArgumentList	str		5042753	1					
ANR	5042839	Argument	str		5042753	0					
ANR	5042840	Identifier	str		5042753	0					
ANR	5042841	Argument	"""hi"""		5042753	1					
ANR	5042842	PrimaryExpression	"""hi"""		5042753	0					
ANR	5042843	CompoundStatement		17:26:304:304	5042753	1					
ANR	5042844	ReturnStatement	return R_REG_COND_HI ;	72:2:1462:1482	5042753	0	True				
ANR	5042845	Identifier	R_REG_COND_HI		5042753	0					
ANR	5042846	IfStatement	"if ( ! strcmp ( str , ""he"" ) )"		5042753	6					
ANR	5042847	Condition	"! strcmp ( str , ""he"" )"	74:5:1492:1510	5042753	0	True				
ANR	5042848	UnaryOperationExpression	"! strcmp ( str , ""he"" )"		5042753	0					
ANR	5042849	UnaryOperator	!		5042753	0					
ANR	5042850	CallExpression	"strcmp ( str , ""he"" )"		5042753	1					
ANR	5042851	Callee	strcmp		5042753	0					
ANR	5042852	Identifier	strcmp		5042753	0					
ANR	5042853	ArgumentList	str		5042753	1					
ANR	5042854	Argument	str		5042753	0					
ANR	5042855	Identifier	str		5042753	0					
ANR	5042856	Argument	"""he"""		5042753	1					
ANR	5042857	PrimaryExpression	"""he"""		5042753	0					
ANR	5042858	CompoundStatement		20:26:359:359	5042753	1					
ANR	5042859	ReturnStatement	return R_REG_COND_HE ;	75:2:1517:1537	5042753	0	True				
ANR	5042860	Identifier	R_REG_COND_HE		5042753	0					
ANR	5042861	IfStatement	"if ( ! strcmp ( str , ""lo"" ) )"		5042753	7					
ANR	5042862	Condition	"! strcmp ( str , ""lo"" )"	77:5:1547:1565	5042753	0	True				
ANR	5042863	UnaryOperationExpression	"! strcmp ( str , ""lo"" )"		5042753	0					
ANR	5042864	UnaryOperator	!		5042753	0					
ANR	5042865	CallExpression	"strcmp ( str , ""lo"" )"		5042753	1					
ANR	5042866	Callee	strcmp		5042753	0					
ANR	5042867	Identifier	strcmp		5042753	0					
ANR	5042868	ArgumentList	str		5042753	1					
ANR	5042869	Argument	str		5042753	0					
ANR	5042870	Identifier	str		5042753	0					
ANR	5042871	Argument	"""lo"""		5042753	1					
ANR	5042872	PrimaryExpression	"""lo"""		5042753	0					
ANR	5042873	CompoundStatement		23:26:414:414	5042753	1					
ANR	5042874	ReturnStatement	return R_REG_COND_LO ;	78:2:1572:1592	5042753	0	True				
ANR	5042875	Identifier	R_REG_COND_LO		5042753	0					
ANR	5042876	IfStatement	"if ( ! strcmp ( str , ""loe"" ) )"		5042753	8					
ANR	5042877	Condition	"! strcmp ( str , ""loe"" )"	80:5:1602:1621	5042753	0	True				
ANR	5042878	UnaryOperationExpression	"! strcmp ( str , ""loe"" )"		5042753	0					
ANR	5042879	UnaryOperator	!		5042753	0					
ANR	5042880	CallExpression	"strcmp ( str , ""loe"" )"		5042753	1					
ANR	5042881	Callee	strcmp		5042753	0					
ANR	5042882	Identifier	strcmp		5042753	0					
ANR	5042883	ArgumentList	str		5042753	1					
ANR	5042884	Argument	str		5042753	0					
ANR	5042885	Identifier	str		5042753	0					
ANR	5042886	Argument	"""loe"""		5042753	1					
ANR	5042887	PrimaryExpression	"""loe"""		5042753	0					
ANR	5042888	CompoundStatement		26:27:470:470	5042753	1					
ANR	5042889	ReturnStatement	return R_REG_COND_LOE ;	81:2:1628:1649	5042753	0	True				
ANR	5042890	Identifier	R_REG_COND_LOE		5042753	0					
ANR	5042891	IfStatement	"if ( ! strcmp ( str , ""ge"" ) )"		5042753	9					
ANR	5042892	Condition	"! strcmp ( str , ""ge"" )"	83:5:1659:1677	5042753	0	True				
ANR	5042893	UnaryOperationExpression	"! strcmp ( str , ""ge"" )"		5042753	0					
ANR	5042894	UnaryOperator	!		5042753	0					
ANR	5042895	CallExpression	"strcmp ( str , ""ge"" )"		5042753	1					
ANR	5042896	Callee	strcmp		5042753	0					
ANR	5042897	Identifier	strcmp		5042753	0					
ANR	5042898	ArgumentList	str		5042753	1					
ANR	5042899	Argument	str		5042753	0					
ANR	5042900	Identifier	str		5042753	0					
ANR	5042901	Argument	"""ge"""		5042753	1					
ANR	5042902	PrimaryExpression	"""ge"""		5042753	0					
ANR	5042903	CompoundStatement		29:26:526:526	5042753	1					
ANR	5042904	ReturnStatement	return R_REG_COND_GE ;	84:2:1684:1704	5042753	0	True				
ANR	5042905	Identifier	R_REG_COND_GE		5042753	0					
ANR	5042906	IfStatement	"if ( ! strcmp ( str , ""gt"" ) )"		5042753	10					
ANR	5042907	Condition	"! strcmp ( str , ""gt"" )"	86:5:1714:1732	5042753	0	True				
ANR	5042908	UnaryOperationExpression	"! strcmp ( str , ""gt"" )"		5042753	0					
ANR	5042909	UnaryOperator	!		5042753	0					
ANR	5042910	CallExpression	"strcmp ( str , ""gt"" )"		5042753	1					
ANR	5042911	Callee	strcmp		5042753	0					
ANR	5042912	Identifier	strcmp		5042753	0					
ANR	5042913	ArgumentList	str		5042753	1					
ANR	5042914	Argument	str		5042753	0					
ANR	5042915	Identifier	str		5042753	0					
ANR	5042916	Argument	"""gt"""		5042753	1					
ANR	5042917	PrimaryExpression	"""gt"""		5042753	0					
ANR	5042918	CompoundStatement		32:26:581:581	5042753	1					
ANR	5042919	ReturnStatement	return R_REG_COND_GT ;	87:2:1739:1759	5042753	0	True				
ANR	5042920	Identifier	R_REG_COND_GT		5042753	0					
ANR	5042921	IfStatement	"if ( ! strcmp ( str , ""lt"" ) )"		5042753	11					
ANR	5042922	Condition	"! strcmp ( str , ""lt"" )"	89:5:1769:1787	5042753	0	True				
ANR	5042923	UnaryOperationExpression	"! strcmp ( str , ""lt"" )"		5042753	0					
ANR	5042924	UnaryOperator	!		5042753	0					
ANR	5042925	CallExpression	"strcmp ( str , ""lt"" )"		5042753	1					
ANR	5042926	Callee	strcmp		5042753	0					
ANR	5042927	Identifier	strcmp		5042753	0					
ANR	5042928	ArgumentList	str		5042753	1					
ANR	5042929	Argument	str		5042753	0					
ANR	5042930	Identifier	str		5042753	0					
ANR	5042931	Argument	"""lt"""		5042753	1					
ANR	5042932	PrimaryExpression	"""lt"""		5042753	0					
ANR	5042933	CompoundStatement		35:26:636:636	5042753	1					
ANR	5042934	ReturnStatement	return R_REG_COND_LT ;	90:2:1794:1814	5042753	0	True				
ANR	5042935	Identifier	R_REG_COND_LT		5042753	0					
ANR	5042936	IfStatement	"if ( ! strcmp ( str , ""le"" ) )"		5042753	12					
ANR	5042937	Condition	"! strcmp ( str , ""le"" )"	92:5:1824:1842	5042753	0	True				
ANR	5042938	UnaryOperationExpression	"! strcmp ( str , ""le"" )"		5042753	0					
ANR	5042939	UnaryOperator	!		5042753	0					
ANR	5042940	CallExpression	"strcmp ( str , ""le"" )"		5042753	1					
ANR	5042941	Callee	strcmp		5042753	0					
ANR	5042942	Identifier	strcmp		5042753	0					
ANR	5042943	ArgumentList	str		5042753	1					
ANR	5042944	Argument	str		5042753	0					
ANR	5042945	Identifier	str		5042753	0					
ANR	5042946	Argument	"""le"""		5042753	1					
ANR	5042947	PrimaryExpression	"""le"""		5042753	0					
ANR	5042948	CompoundStatement		38:26:691:691	5042753	1					
ANR	5042949	ReturnStatement	return R_REG_COND_LE ;	93:2:1849:1869	5042753	0	True				
ANR	5042950	Identifier	R_REG_COND_LE		5042753	0					
ANR	5042951	Statement	eprintf	96:1:1905:1911	5042753	13	True				
ANR	5042952	Statement	(	96:9:1913:1913	5042753	14	True				
ANR	5042953	Statement	"""| Usage: drc[=] [condition](=1,0)\\n"""	96:10:1914:1950	5042753	15	True				
ANR	5042954	Statement	"""| eq    equal\\n"""	97:3:1955:1971	5042753	16	True				
ANR	5042955	Statement	"""| ne    not equal\\n"""	98:3:1976:1996	5042753	17	True				
ANR	5042956	Statement	"""| cf    carry flag set\\n"""	99:3:2001:2026	5042753	18	True				
ANR	5042957	Statement	"""| neg   negative value (has sign)\\n"""	100:3:2031:2067	5042753	19	True				
ANR	5042958	Statement	"""| of    overflow\\n"""	101:3:2072:2091	5042753	20	True				
ANR	5042959	Statement	"""|unsigned:\\n"""	102:3:2096:2109	5042753	21	True				
ANR	5042960	Statement	"""| hi    higher\\n"""	103:3:2114:2131	5042753	22	True				
ANR	5042961	Statement	"""| he    higher or equal\\n"""	104:3:2136:2162	5042753	23	True				
ANR	5042962	Statement	"""| lo    lower\\n"""	105:3:2167:2183	5042753	24	True				
ANR	5042963	Statement	"""| loe   lower or equal\\n"""	106:3:2188:2213	5042753	25	True				
ANR	5042964	Statement	"""|signed:\\n"""	107:3:2218:2229	5042753	26	True				
ANR	5042965	Statement	"""| ge    greater or equal\\n"""	108:3:2234:2261	5042753	27	True				
ANR	5042966	Statement	"""| gt    greater than\\n"""	109:3:2266:2289	5042753	28	True				
ANR	5042967	Statement	"""| le    less or equal\\n"""	110:3:2294:2318	5042753	29	True				
ANR	5042968	Statement	"""| lt    less than\\n"""	111:3:2323:2343	5042753	30	True				
ANR	5042969	Statement	)	111:24:2344:2344	5042753	31	True				
ANR	5042970	ExpressionStatement		111:25:2345:2345	5042753	32	True				
ANR	5042971	ReturnStatement	return - 1 ;	112:1:2348:2357	5042753	33	True				
ANR	5042972	UnaryOperationExpression	- 1		5042753	0					
ANR	5042973	UnaryOperator	-		5042753	0					
ANR	5042974	PrimaryExpression	1		5042753	1					
ANR	5042975	ReturnType	R_API int		5042753	1					
ANR	5042976	Identifier	r_reg_cond_from_string		5042753	2					
ANR	5042977	ParameterList	const char * str		5042753	3					
ANR	5042978	Parameter	const char * str	55:33:1136:1150	5042753	0	True				
ANR	5042979	ParameterType	const char *		5042753	0					
ANR	5042980	Identifier	str		5042753	1					
ANR	5042981	CFGEntryNode	ENTRY		5042753		True				
ANR	5042982	CFGExitNode	EXIT		5042753		True				
ANR	5042983	Symbol	strcmp		5042753						
ANR	5042984	Symbol	R_REG_COND_LOE		5042753						
ANR	5042985	Symbol	R_REG_COND_GT		5042753						
ANR	5042986	Symbol	R_REG_COND_EQ		5042753						
ANR	5042987	Symbol	R_REG_COND_LE		5042753						
ANR	5042988	Symbol	R_REG_COND_NE		5042753						
ANR	5042989	Symbol	R_REG_COND_OF		5042753						
ANR	5042990	Symbol	str		5042753						
ANR	5042991	Symbol	R_REG_COND_HI		5042753						
ANR	5042992	Symbol	R_REG_COND_NEG		5042753						
ANR	5042993	Symbol	R_REG_COND_GE		5042753						
ANR	5042994	Symbol	R_REG_COND_HE		5042753						
ANR	5042995	Symbol	R_REG_COND_LT		5042753						
ANR	5042996	Symbol	R_REG_COND_CF		5042753						
ANR	5042997	Symbol	R_REG_COND_LO		5042753						
ANR	5042998	Function	r_reg_cond_bits	115:0:2362:3094							
ANR	5042999	FunctionDef	"r_reg_cond_bits (RReg * r , int type , RRegFlags * f)"		5042998	0					
ANR	5043000	CompoundStatement		115:59:2421:3094	5042998	0					
ANR	5043001	SwitchStatement	switch ( type )		5042998	0					
ANR	5043002	Condition	type	116:9:2432:2435	5042998	0	True				
ANR	5043003	Identifier	type		5042998	0					
ANR	5043004	CompoundStatement		2:15:16:16	5042998	1					
ANR	5043005	Label	case R_REG_COND_EQ :	117:1:2441:2459	5042998	0	True				
ANR	5043006	Identifier	R_REG_COND_EQ		5042998	0					
ANR	5043007	ReturnStatement	return Z ;	117:21:2461:2469	5042998	1	True				
ANR	5043008	Identifier	Z		5042998	0					
ANR	5043009	Label	case R_REG_COND_NE :	118:1:2472:2490	5042998	2	True				
ANR	5043010	Identifier	R_REG_COND_NE		5042998	0					
ANR	5043011	ReturnStatement	return ! Z ;	118:21:2492:2501	5042998	3	True				
ANR	5043012	UnaryOperationExpression	! Z		5042998	0					
ANR	5043013	UnaryOperator	!		5042998	0					
ANR	5043014	Identifier	Z		5042998	1					
ANR	5043015	Label	case R_REG_COND_CF :	119:1:2504:2522	5042998	4	True				
ANR	5043016	Identifier	R_REG_COND_CF		5042998	0					
ANR	5043017	ReturnStatement	return C ;	119:21:2524:2532	5042998	5	True				
ANR	5043018	Identifier	C		5042998	0					
ANR	5043019	Label	case R_REG_COND_NEG :	120:1:2535:2554	5042998	6	True				
ANR	5043020	Identifier	R_REG_COND_NEG		5042998	0					
ANR	5043021	ReturnStatement	return S ;	120:22:2556:2564	5042998	7	True				
ANR	5043022	Identifier	S		5042998	0					
ANR	5043023	Label	case R_REG_COND_OF :	121:1:2567:2585	5042998	8	True				
ANR	5043024	Identifier	R_REG_COND_OF		5042998	0					
ANR	5043025	ReturnStatement	return O ;	122:2:2589:2597	5042998	9	True				
ANR	5043026	Identifier	O		5042998	0					
ANR	5043027	Label	case R_REG_COND_HI :	124:1:2613:2631	5042998	10	True				
ANR	5043028	Identifier	R_REG_COND_HI		5042998	0					
ANR	5043029	ReturnStatement	return ( ! Z && C ) ;	124:21:2633:2649	5042998	11	True				
ANR	5043030	AndExpression	! Z && C		5042998	0		&&			
ANR	5043031	UnaryOperationExpression	! Z		5042998	0					
ANR	5043032	UnaryOperator	!		5042998	0					
ANR	5043033	Identifier	Z		5042998	1					
ANR	5043034	Identifier	C		5042998	1					
ANR	5043035	Label	case R_REG_COND_HE :	125:1:2662:2680	5042998	12	True				
ANR	5043036	Identifier	R_REG_COND_HE		5042998	0					
ANR	5043037	ReturnStatement	return Z || ( ! Z && C ) ;	125:21:2682:2703	5042998	13	True				
ANR	5043038	OrExpression	Z || ( ! Z && C )		5042998	0		||			
ANR	5043039	Identifier	Z		5042998	0					
ANR	5043040	AndExpression	! Z && C		5042998	1		&&			
ANR	5043041	UnaryOperationExpression	! Z		5042998	0					
ANR	5043042	UnaryOperator	!		5042998	0					
ANR	5043043	Identifier	Z		5042998	1					
ANR	5043044	Identifier	C		5042998	1					
ANR	5043045	Label	case R_REG_COND_LO :	126:1:2725:2743	5042998	14	True				
ANR	5043046	Identifier	R_REG_COND_LO		5042998	0					
ANR	5043047	ReturnStatement	return ( Z || ! C ) ;	126:21:2745:2761	5042998	15	True				
ANR	5043048	OrExpression	Z || ! C		5042998	0		||			
ANR	5043049	Identifier	Z		5042998	0					
ANR	5043050	UnaryOperationExpression	! C		5042998	1					
ANR	5043051	UnaryOperator	!		5042998	0					
ANR	5043052	Identifier	C		5042998	1					
ANR	5043053	Label	case R_REG_COND_LOE :	127:1:2773:2792	5042998	16	True				
ANR	5043054	Identifier	R_REG_COND_LOE		5042998	0					
ANR	5043055	ReturnStatement	return ( Z || ! C ) ;	128:2:2796:2812	5042998	17	True				
ANR	5043056	OrExpression	Z || ! C		5042998	0		||			
ANR	5043057	Identifier	Z		5042998	0					
ANR	5043058	UnaryOperationExpression	! C		5042998	1					
ANR	5043059	UnaryOperator	!		5042998	0					
ANR	5043060	Identifier	C		5042998	1					
ANR	5043061	Label	case R_REG_COND_GE :	130:1:2844:2862	5042998	18	True				
ANR	5043062	Identifier	R_REG_COND_GE		5042998	0					
ANR	5043063	ReturnStatement	return ( ( S && O ) || ( ! S && ! O ) ) ;	130:21:2864:2895	5042998	19	True				
ANR	5043064	OrExpression	( S && O ) || ( ! S && ! O )		5042998	0		||			
ANR	5043065	AndExpression	S && O		5042998	0		&&			
ANR	5043066	Identifier	S		5042998	0					
ANR	5043067	Identifier	O		5042998	1					
ANR	5043068	AndExpression	! S && ! O		5042998	1		&&			
ANR	5043069	UnaryOperationExpression	! S		5042998	0					
ANR	5043070	UnaryOperator	!		5042998	0					
ANR	5043071	Identifier	S		5042998	1					
ANR	5043072	UnaryOperationExpression	! O		5042998	1					
ANR	5043073	UnaryOperator	!		5042998	0					
ANR	5043074	Identifier	O		5042998	1					
ANR	5043075	Label	case R_REG_COND_GT :	131:1:2898:2916	5042998	20	True				
ANR	5043076	Identifier	R_REG_COND_GT		5042998	0					
ANR	5043077	ReturnStatement	return ( ( S && ! Z && O ) || ( ! S && ! Z && ! O ) ) ;	131:21:2918:2961	5042998	21	True				
ANR	5043078	OrExpression	( S && ! Z && O ) || ( ! S && ! Z && ! O )		5042998	0		||			
ANR	5043079	AndExpression	S && ! Z && O		5042998	0		&&			
ANR	5043080	Identifier	S		5042998	0					
ANR	5043081	AndExpression	! Z && O		5042998	1		&&			
ANR	5043082	UnaryOperationExpression	! Z		5042998	0					
ANR	5043083	UnaryOperator	!		5042998	0					
ANR	5043084	Identifier	Z		5042998	1					
ANR	5043085	Identifier	O		5042998	1					
ANR	5043086	AndExpression	! S && ! Z && ! O		5042998	1		&&			
ANR	5043087	UnaryOperationExpression	! S		5042998	0					
ANR	5043088	UnaryOperator	!		5042998	0					
ANR	5043089	Identifier	S		5042998	1					
ANR	5043090	AndExpression	! Z && ! O		5042998	1		&&			
ANR	5043091	UnaryOperationExpression	! Z		5042998	0					
ANR	5043092	UnaryOperator	!		5042998	0					
ANR	5043093	Identifier	Z		5042998	1					
ANR	5043094	UnaryOperationExpression	! O		5042998	1					
ANR	5043095	UnaryOperator	!		5042998	0					
ANR	5043096	Identifier	O		5042998	1					
ANR	5043097	Label	case R_REG_COND_LT :	132:1:2964:2982	5042998	22	True				
ANR	5043098	Identifier	R_REG_COND_LT		5042998	0					
ANR	5043099	ReturnStatement	return ( ( S && ! O ) || ( ! S && O ) ) ;	132:21:2984:3015	5042998	23	True				
ANR	5043100	OrExpression	( S && ! O ) || ( ! S && O )		5042998	0		||			
ANR	5043101	AndExpression	S && ! O		5042998	0		&&			
ANR	5043102	Identifier	S		5042998	0					
ANR	5043103	UnaryOperationExpression	! O		5042998	1					
ANR	5043104	UnaryOperator	!		5042998	0					
ANR	5043105	Identifier	O		5042998	1					
ANR	5043106	AndExpression	! S && O		5042998	1		&&			
ANR	5043107	UnaryOperationExpression	! S		5042998	0					
ANR	5043108	UnaryOperator	!		5042998	0					
ANR	5043109	Identifier	S		5042998	1					
ANR	5043110	Identifier	O		5042998	1					
ANR	5043111	Label	case R_REG_COND_LE :	133:1:3018:3036	5042998	24	True				
ANR	5043112	Identifier	R_REG_COND_LE		5042998	0					
ANR	5043113	ReturnStatement	return ( Z || ( S && ! O ) || ( ! S && O ) ) ;	133:21:3038:3074	5042998	25	True				
ANR	5043114	OrExpression	Z || ( S && ! O ) || ( ! S && O )		5042998	0		||			
ANR	5043115	Identifier	Z		5042998	0					
ANR	5043116	OrExpression	( S && ! O ) || ( ! S && O )		5042998	1		||			
ANR	5043117	AndExpression	S && ! O		5042998	0		&&			
ANR	5043118	Identifier	S		5042998	0					
ANR	5043119	UnaryOperationExpression	! O		5042998	1					
ANR	5043120	UnaryOperator	!		5042998	0					
ANR	5043121	Identifier	O		5042998	1					
ANR	5043122	AndExpression	! S && O		5042998	1		&&			
ANR	5043123	UnaryOperationExpression	! S		5042998	0					
ANR	5043124	UnaryOperator	!		5042998	0					
ANR	5043125	Identifier	S		5042998	1					
ANR	5043126	Identifier	O		5042998	1					
ANR	5043127	ReturnStatement	return false ;	135:1:3080:3092	5042998	1	True				
ANR	5043128	Identifier	false		5042998	0					
ANR	5043129	ReturnType	R_API int		5042998	1					
ANR	5043130	Identifier	r_reg_cond_bits		5042998	2					
ANR	5043131	ParameterList	"RReg * r , int type , RRegFlags * f"		5042998	3					
ANR	5043132	Parameter	RReg * r	115:26:2388:2394	5042998	0	True				
ANR	5043133	ParameterType	RReg *		5042998	0					
ANR	5043134	Identifier	r		5042998	1					
ANR	5043135	Parameter	int type	115:35:2397:2404	5042998	1	True				
ANR	5043136	ParameterType	int		5042998	0					
ANR	5043137	Identifier	type		5042998	1					
ANR	5043138	Parameter	RRegFlags * f	115:45:2407:2418	5042998	2	True				
ANR	5043139	ParameterType	RRegFlags *		5042998	0					
ANR	5043140	Identifier	f		5042998	1					
ANR	5043141	CFGEntryNode	ENTRY		5042998		True				
ANR	5043142	CFGExitNode	EXIT		5042998		True				
ANR	5043143	Symbol	r		5042998						
ANR	5043144	Symbol	C		5042998						
ANR	5043145	Symbol	S		5042998						
ANR	5043146	Symbol	f		5042998						
ANR	5043147	Symbol	false		5042998						
ANR	5043148	Symbol	Z		5042998						
ANR	5043149	Symbol	type		5042998						
ANR	5043150	Symbol	O		5042998						
ANR	5043151	Function	r_reg_cond_bits_set	138:0:3097:4212							
ANR	5043152	FunctionDef	"r_reg_cond_bits_set (RReg * r , int type , RRegFlags * f , bool v)"		5043151	0					
ANR	5043153	CompoundStatement		138:72:3169:4212	5043151	0					
ANR	5043154	SwitchStatement	switch ( type )		5043151	0					
ANR	5043155	Condition	type	139:9:3180:3183	5043151	0	True				
ANR	5043156	Identifier	type		5043151	0					
ANR	5043157	CompoundStatement		2:15:16:16	5043151	1					
ANR	5043158	Label	case R_REG_COND_EQ :	140:1:3189:3207	5043151	0	True				
ANR	5043159	Identifier	R_REG_COND_EQ		5043151	0					
ANR	5043160	ExpressionStatement	Z = v	140:21:3209:3214	5043151	1	True				
ANR	5043161	AssignmentExpression	Z = v		5043151	0		=			
ANR	5043162	Identifier	Z		5043151	0					
ANR	5043163	Identifier	v		5043151	1					
ANR	5043164	BreakStatement	break ;	140:28:3216:3221	5043151	2	True				
ANR	5043165	Label	case R_REG_COND_NE :	141:1:3224:3242	5043151	3	True				
ANR	5043166	Identifier	R_REG_COND_NE		5043151	0					
ANR	5043167	ExpressionStatement	Z = ! v	141:21:3244:3250	5043151	4	True				
ANR	5043168	AssignmentExpression	Z = ! v		5043151	0		=			
ANR	5043169	Identifier	Z		5043151	0					
ANR	5043170	UnaryOperationExpression	! v		5043151	1					
ANR	5043171	UnaryOperator	!		5043151	0					
ANR	5043172	Identifier	v		5043151	1					
ANR	5043173	BreakStatement	break ;	141:29:3252:3257	5043151	5	True				
ANR	5043174	Label	case R_REG_COND_CF :	142:1:3260:3278	5043151	6	True				
ANR	5043175	Identifier	R_REG_COND_CF		5043151	0					
ANR	5043176	ExpressionStatement	C = v	142:21:3280:3285	5043151	7	True				
ANR	5043177	AssignmentExpression	C = v		5043151	0		=			
ANR	5043178	Identifier	C		5043151	0					
ANR	5043179	Identifier	v		5043151	1					
ANR	5043180	BreakStatement	break ;	142:28:3287:3292	5043151	8	True				
ANR	5043181	Label	case R_REG_COND_NEG :	143:1:3295:3314	5043151	9	True				
ANR	5043182	Identifier	R_REG_COND_NEG		5043151	0					
ANR	5043183	ExpressionStatement	S = v	143:22:3316:3321	5043151	10	True				
ANR	5043184	AssignmentExpression	S = v		5043151	0		=			
ANR	5043185	Identifier	S		5043151	0					
ANR	5043186	Identifier	v		5043151	1					
ANR	5043187	BreakStatement	break ;	143:29:3323:3328	5043151	11	True				
ANR	5043188	Label	case R_REG_COND_OF :	144:1:3331:3349	5043151	12	True				
ANR	5043189	Identifier	R_REG_COND_OF		5043151	0					
ANR	5043190	ExpressionStatement	O = v	144:21:3351:3356	5043151	13	True				
ANR	5043191	AssignmentExpression	O = v		5043151	0		=			
ANR	5043192	Identifier	O		5043151	0					
ANR	5043193	Identifier	v		5043151	1					
ANR	5043194	BreakStatement	break ;	144:28:3358:3363	5043151	14	True				
ANR	5043195	Label	case R_REG_COND_HI :	145:1:3366:3384	5043151	15	True				
ANR	5043196	Identifier	R_REG_COND_HI		5043151	0					
ANR	5043197	IfStatement	if ( v )		5043151	16					
ANR	5043198	Condition	v	146:6:3392:3392	5043151	0	True				
ANR	5043199	Identifier	v		5043151	0					
ANR	5043200	CompoundStatement		9:9:225:225	5043151	1					
ANR	5043201	ExpressionStatement	Z = 0	147:3:3400:3405	5043151	0	True				
ANR	5043202	AssignmentExpression	Z = 0		5043151	0		=			
ANR	5043203	Identifier	Z		5043151	0					
ANR	5043204	PrimaryExpression	0		5043151	1					
ANR	5043205	ExpressionStatement	C = 1	148:3:3410:3415	5043151	1	True				
ANR	5043206	AssignmentExpression	C = 1		5043151	0		=			
ANR	5043207	Identifier	C		5043151	0					
ANR	5043208	PrimaryExpression	1		5043151	1					
ANR	5043209	ElseStatement	else		5043151	0					
ANR	5043210	CompoundStatement		12:9:256:256	5043151	0					
ANR	5043211	ExpressionStatement	Z = 1	150:3:3431:3436	5043151	0	True				
ANR	5043212	AssignmentExpression	Z = 1		5043151	0		=			
ANR	5043213	Identifier	Z		5043151	0					
ANR	5043214	PrimaryExpression	1		5043151	1					
ANR	5043215	ExpressionStatement	C = 0	151:3:3441:3446	5043151	1	True				
ANR	5043216	AssignmentExpression	C = 0		5043151	0		=			
ANR	5043217	Identifier	C		5043151	0					
ANR	5043218	PrimaryExpression	0		5043151	1					
ANR	5043219	BreakStatement	break ;	153:2:3454:3459	5043151	17	True				
ANR	5043220	Label	case R_REG_COND_HE :	154:1:3462:3480	5043151	18	True				
ANR	5043221	Identifier	R_REG_COND_HE		5043151	0					
ANR	5043222	IfStatement	if ( v )		5043151	19					
ANR	5043223	Condition	v	155:6:3488:3488	5043151	0	True				
ANR	5043224	Identifier	v		5043151	0					
ANR	5043225	CompoundStatement		18:9:321:321	5043151	1					
ANR	5043226	ExpressionStatement	Z = 1	156:3:3496:3501	5043151	0	True				
ANR	5043227	AssignmentExpression	Z = 1		5043151	0		=			
ANR	5043228	Identifier	Z		5043151	0					
ANR	5043229	PrimaryExpression	1		5043151	1					
ANR	5043230	ElseStatement	else		5043151	0					
ANR	5043231	CompoundStatement		20:9:342:342	5043151	0					
ANR	5043232	ExpressionStatement	Z = 0	158:3:3517:3522	5043151	0	True				
ANR	5043233	AssignmentExpression	Z = 0		5043151	0		=			
ANR	5043234	Identifier	Z		5043151	0					
ANR	5043235	PrimaryExpression	0		5043151	1					
ANR	5043236	ExpressionStatement	C = 1	159:3:3527:3532	5043151	1	True				
ANR	5043237	AssignmentExpression	C = 1		5043151	0		=			
ANR	5043238	Identifier	C		5043151	0					
ANR	5043239	PrimaryExpression	1		5043151	1					
ANR	5043240	BreakStatement	break ;	161:2:3540:3545	5043151	20	True				
ANR	5043241	Label	case R_REG_COND_LO :	162:1:3548:3566	5043151	21	True				
ANR	5043242	Identifier	R_REG_COND_LO		5043151	0					
ANR	5043243	IfStatement	if ( v )		5043151	22					
ANR	5043244	Condition	v	163:6:3574:3574	5043151	0	True				
ANR	5043245	Identifier	v		5043151	0					
ANR	5043246	CompoundStatement		26:9:407:407	5043151	1					
ANR	5043247	ExpressionStatement	Z = 1	164:3:3582:3587	5043151	0	True				
ANR	5043248	AssignmentExpression	Z = 1		5043151	0		=			
ANR	5043249	Identifier	Z		5043151	0					
ANR	5043250	PrimaryExpression	1		5043151	1					
ANR	5043251	ExpressionStatement	C = 0	165:3:3592:3597	5043151	1	True				
ANR	5043252	AssignmentExpression	C = 0		5043151	0		=			
ANR	5043253	Identifier	C		5043151	0					
ANR	5043254	PrimaryExpression	0		5043151	1					
ANR	5043255	ElseStatement	else		5043151	0					
ANR	5043256	CompoundStatement		29:9:438:438	5043151	0					
ANR	5043257	ExpressionStatement	Z = 0	167:3:3613:3618	5043151	0	True				
ANR	5043258	AssignmentExpression	Z = 0		5043151	0		=			
ANR	5043259	Identifier	Z		5043151	0					
ANR	5043260	PrimaryExpression	0		5043151	1					
ANR	5043261	ExpressionStatement	C = 1	168:3:3623:3628	5043151	1	True				
ANR	5043262	AssignmentExpression	C = 1		5043151	0		=			
ANR	5043263	Identifier	C		5043151	0					
ANR	5043264	PrimaryExpression	1		5043151	1					
ANR	5043265	BreakStatement	break ;	170:2:3636:3641	5043151	23	True				
ANR	5043266	Label	case R_REG_COND_LOE :	171:1:3644:3663	5043151	24	True				
ANR	5043267	Identifier	R_REG_COND_LOE		5043151	0					
ANR	5043268	IfStatement	if ( v )		5043151	25					
ANR	5043269	Condition	v	172:6:3671:3671	5043151	0	True				
ANR	5043270	Identifier	v		5043151	0					
ANR	5043271	CompoundStatement		35:9:504:504	5043151	1					
ANR	5043272	ExpressionStatement	Z = 1	173:3:3679:3684	5043151	0	True				
ANR	5043273	AssignmentExpression	Z = 1		5043151	0		=			
ANR	5043274	Identifier	Z		5043151	0					
ANR	5043275	PrimaryExpression	1		5043151	1					
ANR	5043276	ExpressionStatement	C = 0	174:3:3689:3694	5043151	1	True				
ANR	5043277	AssignmentExpression	C = 0		5043151	0		=			
ANR	5043278	Identifier	C		5043151	0					
ANR	5043279	PrimaryExpression	0		5043151	1					
ANR	5043280	ElseStatement	else		5043151	0					
ANR	5043281	CompoundStatement		38:9:535:535	5043151	0					
ANR	5043282	ExpressionStatement	Z = 0	176:3:3710:3715	5043151	0	True				
ANR	5043283	AssignmentExpression	Z = 0		5043151	0		=			
ANR	5043284	Identifier	Z		5043151	0					
ANR	5043285	PrimaryExpression	0		5043151	1					
ANR	5043286	ExpressionStatement	C = 1	177:3:3720:3725	5043151	1	True				
ANR	5043287	AssignmentExpression	C = 1		5043151	0		=			
ANR	5043288	Identifier	C		5043151	0					
ANR	5043289	PrimaryExpression	1		5043151	1					
ANR	5043290	BreakStatement	break ;	179:2:3733:3738	5043151	26	True				
ANR	5043291	Label	case R_REG_COND_GE :	181:1:3752:3770	5043151	27	True				
ANR	5043292	Identifier	R_REG_COND_GE		5043151	0					
ANR	5043293	IfStatement	if ( v )		5043151	28					
ANR	5043294	Condition	v	182:6:3778:3778	5043151	0	True				
ANR	5043295	Identifier	v		5043151	0					
ANR	5043296	CompoundStatement		45:9:611:611	5043151	1					
ANR	5043297	ExpressionStatement	S = O = 1	183:3:3786:3795	5043151	0	True				
ANR	5043298	AssignmentExpression	S = O = 1		5043151	0		=			
ANR	5043299	Identifier	S		5043151	0					
ANR	5043300	AssignmentExpression	O = 1		5043151	1		=			
ANR	5043301	Identifier	O		5043151	0					
ANR	5043302	PrimaryExpression	1		5043151	1					
ANR	5043303	ElseStatement	else		5043151	0					
ANR	5043304	CompoundStatement		47:9:636:636	5043151	0					
ANR	5043305	ExpressionStatement	S = 1	185:3:3811:3816	5043151	0	True				
ANR	5043306	AssignmentExpression	S = 1		5043151	0		=			
ANR	5043307	Identifier	S		5043151	0					
ANR	5043308	PrimaryExpression	1		5043151	1					
ANR	5043309	ExpressionStatement	O = 0	186:3:3821:3826	5043151	1	True				
ANR	5043310	AssignmentExpression	O = 0		5043151	0		=			
ANR	5043311	Identifier	O		5043151	0					
ANR	5043312	PrimaryExpression	0		5043151	1					
ANR	5043313	BreakStatement	break ;	188:2:3834:3839	5043151	29	True				
ANR	5043314	Label	case R_REG_COND_GT :	189:1:3842:3860	5043151	30	True				
ANR	5043315	Identifier	R_REG_COND_GT		5043151	0					
ANR	5043316	IfStatement	if ( v )		5043151	31					
ANR	5043317	Condition	v	190:6:3868:3868	5043151	0	True				
ANR	5043318	Identifier	v		5043151	0					
ANR	5043319	CompoundStatement		53:9:701:701	5043151	1					
ANR	5043320	ExpressionStatement	S = 1	191:3:3876:3881	5043151	0	True				
ANR	5043321	AssignmentExpression	S = 1		5043151	0		=			
ANR	5043322	Identifier	S		5043151	0					
ANR	5043323	PrimaryExpression	1		5043151	1					
ANR	5043324	ExpressionStatement	Z = 0	192:3:3886:3891	5043151	1	True				
ANR	5043325	AssignmentExpression	Z = 0		5043151	0		=			
ANR	5043326	Identifier	Z		5043151	0					
ANR	5043327	PrimaryExpression	0		5043151	1					
ANR	5043328	ExpressionStatement	O = 1	193:3:3896:3901	5043151	2	True				
ANR	5043329	AssignmentExpression	O = 1		5043151	0		=			
ANR	5043330	Identifier	O		5043151	0					
ANR	5043331	PrimaryExpression	1		5043151	1					
ANR	5043332	ElseStatement	else		5043151	0					
ANR	5043333	CompoundStatement		57:9:742:742	5043151	0					
ANR	5043334	ExpressionStatement	S = 0	195:3:3917:3922	5043151	0	True				
ANR	5043335	AssignmentExpression	S = 0		5043151	0		=			
ANR	5043336	Identifier	S		5043151	0					
ANR	5043337	PrimaryExpression	0		5043151	1					
ANR	5043338	ExpressionStatement	Z = 1	196:3:3927:3932	5043151	1	True				
ANR	5043339	AssignmentExpression	Z = 1		5043151	0		=			
ANR	5043340	Identifier	Z		5043151	0					
ANR	5043341	PrimaryExpression	1		5043151	1					
ANR	5043342	ExpressionStatement	O = 0	197:3:3937:3942	5043151	2	True				
ANR	5043343	AssignmentExpression	O = 0		5043151	0		=			
ANR	5043344	Identifier	O		5043151	0					
ANR	5043345	PrimaryExpression	0		5043151	1					
ANR	5043346	BreakStatement	break ;	199:2:3950:3955	5043151	32	True				
ANR	5043347	Label	case R_REG_COND_LT :	200:1:3958:3976	5043151	33	True				
ANR	5043348	Identifier	R_REG_COND_LT		5043151	0					
ANR	5043349	IfStatement	if ( v )		5043151	34					
ANR	5043350	Condition	v	201:6:3984:3984	5043151	0	True				
ANR	5043351	Identifier	v		5043151	0					
ANR	5043352	CompoundStatement		64:9:817:817	5043151	1					
ANR	5043353	ExpressionStatement	S = 1	202:3:3992:3997	5043151	0	True				
ANR	5043354	AssignmentExpression	S = 1		5043151	0		=			
ANR	5043355	Identifier	S		5043151	0					
ANR	5043356	PrimaryExpression	1		5043151	1					
ANR	5043357	ExpressionStatement	O = 0	203:3:4002:4007	5043151	1	True				
ANR	5043358	AssignmentExpression	O = 0		5043151	0		=			
ANR	5043359	Identifier	O		5043151	0					
ANR	5043360	PrimaryExpression	0		5043151	1					
ANR	5043361	ElseStatement	else		5043151	0					
ANR	5043362	CompoundStatement		67:9:848:848	5043151	0					
ANR	5043363	ExpressionStatement	S = 1	205:3:4023:4028	5043151	0	True				
ANR	5043364	AssignmentExpression	S = 1		5043151	0		=			
ANR	5043365	Identifier	S		5043151	0					
ANR	5043366	PrimaryExpression	1		5043151	1					
ANR	5043367	ExpressionStatement	O = 1	206:3:4033:4038	5043151	1	True				
ANR	5043368	AssignmentExpression	O = 1		5043151	0		=			
ANR	5043369	Identifier	O		5043151	0					
ANR	5043370	PrimaryExpression	1		5043151	1					
ANR	5043371	BreakStatement	break ;	208:2:4046:4051	5043151	35	True				
ANR	5043372	Label	case R_REG_COND_LE :	209:1:4054:4072	5043151	36	True				
ANR	5043373	Identifier	R_REG_COND_LE		5043151	0					
ANR	5043374	IfStatement	if ( v )		5043151	37					
ANR	5043375	Condition	v	210:6:4080:4080	5043151	0	True				
ANR	5043376	Identifier	v		5043151	0					
ANR	5043377	CompoundStatement		73:9:913:913	5043151	1					
ANR	5043378	ExpressionStatement	S = 0	211:3:4088:4093	5043151	0	True				
ANR	5043379	AssignmentExpression	S = 0		5043151	0		=			
ANR	5043380	Identifier	S		5043151	0					
ANR	5043381	PrimaryExpression	0		5043151	1					
ANR	5043382	ExpressionStatement	Z = 1	212:3:4098:4103	5043151	1	True				
ANR	5043383	AssignmentExpression	Z = 1		5043151	0		=			
ANR	5043384	Identifier	Z		5043151	0					
ANR	5043385	PrimaryExpression	1		5043151	1					
ANR	5043386	ExpressionStatement	O = 0	213:3:4108:4113	5043151	2	True				
ANR	5043387	AssignmentExpression	O = 0		5043151	0		=			
ANR	5043388	Identifier	O		5043151	0					
ANR	5043389	PrimaryExpression	0		5043151	1					
ANR	5043390	ElseStatement	else		5043151	0					
ANR	5043391	CompoundStatement		77:9:954:954	5043151	0					
ANR	5043392	ExpressionStatement	S = 1	215:3:4129:4134	5043151	0	True				
ANR	5043393	AssignmentExpression	S = 1		5043151	0		=			
ANR	5043394	Identifier	S		5043151	0					
ANR	5043395	PrimaryExpression	1		5043151	1					
ANR	5043396	ExpressionStatement	Z = 0	216:3:4139:4144	5043151	1	True				
ANR	5043397	AssignmentExpression	Z = 0		5043151	0		=			
ANR	5043398	Identifier	Z		5043151	0					
ANR	5043399	PrimaryExpression	0		5043151	1					
ANR	5043400	ExpressionStatement	O = 1	217:3:4149:4154	5043151	2	True				
ANR	5043401	AssignmentExpression	O = 1		5043151	0		=			
ANR	5043402	Identifier	O		5043151	0					
ANR	5043403	PrimaryExpression	1		5043151	1					
ANR	5043404	BreakStatement	break ;	219:2:4162:4167	5043151	38	True				
ANR	5043405	Label	default :	220:1:4170:4177	5043151	39	True				
ANR	5043406	Identifier	default		5043151	0					
ANR	5043407	ReturnStatement	return false ;	221:2:4181:4193	5043151	40	True				
ANR	5043408	Identifier	false		5043151	0					
ANR	5043409	ReturnStatement	return true ;	223:1:4199:4210	5043151	1	True				
ANR	5043410	Identifier	true		5043151	0					
ANR	5043411	ReturnType	R_API bool		5043151	1					
ANR	5043412	Identifier	r_reg_cond_bits_set		5043151	2					
ANR	5043413	ParameterList	"RReg * r , int type , RRegFlags * f , bool v"		5043151	3					
ANR	5043414	Parameter	RReg * r	138:31:3128:3134	5043151	0	True				
ANR	5043415	ParameterType	RReg *		5043151	0					
ANR	5043416	Identifier	r		5043151	1					
ANR	5043417	Parameter	int type	138:40:3137:3144	5043151	1	True				
ANR	5043418	ParameterType	int		5043151	0					
ANR	5043419	Identifier	type		5043151	1					
ANR	5043420	Parameter	RRegFlags * f	138:50:3147:3158	5043151	2	True				
ANR	5043421	ParameterType	RRegFlags *		5043151	0					
ANR	5043422	Identifier	f		5043151	1					
ANR	5043423	Parameter	bool v	138:64:3161:3166	5043151	3	True				
ANR	5043424	ParameterType	bool		5043151	0					
ANR	5043425	Identifier	v		5043151	1					
ANR	5043426	CFGEntryNode	ENTRY		5043151		True				
ANR	5043427	CFGExitNode	EXIT		5043151		True				
ANR	5043428	Symbol	r		5043151						
ANR	5043429	Symbol	C		5043151						
ANR	5043430	Symbol	S		5043151						
ANR	5043431	Symbol	f		5043151						
ANR	5043432	Symbol	v		5043151						
ANR	5043433	Symbol	false		5043151						
ANR	5043434	Symbol	true		5043151						
ANR	5043435	Symbol	Z		5043151						
ANR	5043436	Symbol	type		5043151						
ANR	5043437	Symbol	O		5043151						
ANR	5043438	Function	r_reg_cond	226:0:4215:4348							
ANR	5043439	FunctionDef	"r_reg_cond (RReg * r , int type)"		5043438	0					
ANR	5043440	CompoundStatement		226:40:4255:4348	5043438	0					
ANR	5043441	IdentifierDeclStatement	RRegFlags f = { 0 } ;	227:1:4258:4277	5043438	0	True				
ANR	5043442	IdentifierDecl	f = { 0 }		5043438	0					
ANR	5043443	IdentifierDeclType	RRegFlags		5043438	0					
ANR	5043444	Identifier	f		5043438	1					
ANR	5043445	AssignmentExpression	f = { 0 }		5043438	2		=			
ANR	5043446	Identifier	f		5043438	0					
ANR	5043447	InitializerList	0		5043438	1					
ANR	5043448	PrimaryExpression	0		5043438	0					
ANR	5043449	ExpressionStatement	"r_reg_cond_retrieve ( r , & f )"	228:1:4280:4307	5043438	1	True				
ANR	5043450	CallExpression	"r_reg_cond_retrieve ( r , & f )"		5043438	0					
ANR	5043451	Callee	r_reg_cond_retrieve		5043438	0					
ANR	5043452	Identifier	r_reg_cond_retrieve		5043438	0					
ANR	5043453	ArgumentList	r		5043438	1					
ANR	5043454	Argument	r		5043438	0					
ANR	5043455	Identifier	r		5043438	0					
ANR	5043456	Argument	& f		5043438	1					
ANR	5043457	UnaryOperationExpression	& f		5043438	0					
ANR	5043458	UnaryOperator	&		5043438	0					
ANR	5043459	Identifier	f		5043438	1					
ANR	5043460	ReturnStatement	"return r_reg_cond_bits ( r , type , & f ) ;"	229:1:4310:4346	5043438	2	True				
ANR	5043461	CallExpression	"r_reg_cond_bits ( r , type , & f )"		5043438	0					
ANR	5043462	Callee	r_reg_cond_bits		5043438	0					
ANR	5043463	Identifier	r_reg_cond_bits		5043438	0					
ANR	5043464	ArgumentList	r		5043438	1					
ANR	5043465	Argument	r		5043438	0					
ANR	5043466	Identifier	r		5043438	0					
ANR	5043467	Argument	type		5043438	1					
ANR	5043468	Identifier	type		5043438	0					
ANR	5043469	Argument	& f		5043438	2					
ANR	5043470	UnaryOperationExpression	& f		5043438	0					
ANR	5043471	UnaryOperator	&		5043438	0					
ANR	5043472	Identifier	f		5043438	1					
ANR	5043473	ReturnType	R_API int		5043438	1					
ANR	5043474	Identifier	r_reg_cond		5043438	2					
ANR	5043475	ParameterList	"RReg * r , int type"		5043438	3					
ANR	5043476	Parameter	RReg * r	226:21:4236:4242	5043438	0	True				
ANR	5043477	ParameterType	RReg *		5043438	0					
ANR	5043478	Identifier	r		5043438	1					
ANR	5043479	Parameter	int type	226:30:4245:4252	5043438	1	True				
ANR	5043480	ParameterType	int		5043438	0					
ANR	5043481	Identifier	type		5043438	1					
ANR	5043482	CFGEntryNode	ENTRY		5043438		True				
ANR	5043483	CFGExitNode	EXIT		5043438		True				
ANR	5043484	Symbol	r_reg_cond_bits		5043438						
ANR	5043485	Symbol	r		5043438						
ANR	5043486	Symbol	f		5043438						
ANR	5043487	Symbol	type		5043438						
ANR	5043488	Symbol	& f		5043438						
ANR	5043489	Function	r_reg_cond_retrieve	232:0:4351:4815							
ANR	5043490	FunctionDef	"r_reg_cond_retrieve (RReg * r , RRegFlags * f)"		5043489	0					
ANR	5043491	CompoundStatement		232:60:4411:4815	5043489	0					
ANR	5043492	IfStatement	if ( ! f )		5043489	0					
ANR	5043493	Condition	! f	233:5:4418:4419	5043489	0	True				
ANR	5043494	UnaryOperationExpression	! f		5043489	0					
ANR	5043495	UnaryOperator	!		5043489	0					
ANR	5043496	Identifier	f		5043489	1					
ANR	5043497	CompoundStatement		2:9:10:10	5043489	1					
ANR	5043498	ExpressionStatement	f = R_NEW0 ( RRegFlags )	234:2:4426:4448	5043489	0	True				
ANR	5043499	AssignmentExpression	f = R_NEW0 ( RRegFlags )		5043489	0		=			
ANR	5043500	Identifier	f		5043489	0					
ANR	5043501	CallExpression	R_NEW0 ( RRegFlags )		5043489	1					
ANR	5043502	Callee	R_NEW0		5043489	0					
ANR	5043503	Identifier	R_NEW0		5043489	0					
ANR	5043504	ArgumentList	RRegFlags		5043489	1					
ANR	5043505	Argument	RRegFlags		5043489	0					
ANR	5043506	Identifier	RRegFlags		5043489	0					
ANR	5043507	IfStatement	if ( ! f )		5043489	1					
ANR	5043508	Condition	! f	236:5:4458:4459	5043489	0	True				
ANR	5043509	UnaryOperationExpression	! f		5043489	0					
ANR	5043510	UnaryOperator	!		5043489	0					
ANR	5043511	Identifier	f		5043489	1					
ANR	5043512	CompoundStatement		5:9:50:50	5043489	1					
ANR	5043513	ReturnStatement	return NULL ;	237:2:4466:4477	5043489	0	True				
ANR	5043514	Identifier	NULL		5043489	0					
ANR	5043515	ExpressionStatement	"f -> s = r_reg_cond_get_value ( r , ""sign"" )"	239:1:4483:4522	5043489	2	True				
ANR	5043516	AssignmentExpression	"f -> s = r_reg_cond_get_value ( r , ""sign"" )"		5043489	0		=			
ANR	5043517	PtrMemberAccess	f -> s		5043489	0					
ANR	5043518	Identifier	f		5043489	0					
ANR	5043519	Identifier	s		5043489	1					
ANR	5043520	CallExpression	"r_reg_cond_get_value ( r , ""sign"" )"		5043489	1					
ANR	5043521	Callee	r_reg_cond_get_value		5043489	0					
ANR	5043522	Identifier	r_reg_cond_get_value		5043489	0					
ANR	5043523	ArgumentList	r		5043489	1					
ANR	5043524	Argument	r		5043489	0					
ANR	5043525	Identifier	r		5043489	0					
ANR	5043526	Argument	"""sign"""		5043489	1					
ANR	5043527	PrimaryExpression	"""sign"""		5043489	0					
ANR	5043528	ExpressionStatement	"f -> z = r_reg_cond_get_value ( r , ""zero"" )"	240:1:4562:4601	5043489	3	True				
ANR	5043529	AssignmentExpression	"f -> z = r_reg_cond_get_value ( r , ""zero"" )"		5043489	0		=			
ANR	5043530	PtrMemberAccess	f -> z		5043489	0					
ANR	5043531	Identifier	f		5043489	0					
ANR	5043532	Identifier	z		5043489	1					
ANR	5043533	CallExpression	"r_reg_cond_get_value ( r , ""zero"" )"		5043489	1					
ANR	5043534	Callee	r_reg_cond_get_value		5043489	0					
ANR	5043535	Identifier	r_reg_cond_get_value		5043489	0					
ANR	5043536	ArgumentList	r		5043489	1					
ANR	5043537	Argument	r		5043489	0					
ANR	5043538	Identifier	r		5043489	0					
ANR	5043539	Argument	"""zero"""		5043489	1					
ANR	5043540	PrimaryExpression	"""zero"""		5043489	0					
ANR	5043541	ExpressionStatement	"f -> c = r_reg_cond_get_value ( r , ""carry"" )"	241:1:4617:4657	5043489	4	True				
ANR	5043542	AssignmentExpression	"f -> c = r_reg_cond_get_value ( r , ""carry"" )"		5043489	0		=			
ANR	5043543	PtrMemberAccess	f -> c		5043489	0					
ANR	5043544	Identifier	f		5043489	0					
ANR	5043545	Identifier	c		5043489	1					
ANR	5043546	CallExpression	"r_reg_cond_get_value ( r , ""carry"" )"		5043489	1					
ANR	5043547	Callee	r_reg_cond_get_value		5043489	0					
ANR	5043548	Identifier	r_reg_cond_get_value		5043489	0					
ANR	5043549	ArgumentList	r		5043489	1					
ANR	5043550	Argument	r		5043489	0					
ANR	5043551	Identifier	r		5043489	0					
ANR	5043552	Argument	"""carry"""		5043489	1					
ANR	5043553	PrimaryExpression	"""carry"""		5043489	0					
ANR	5043554	ExpressionStatement	"f -> o = r_reg_cond_get_value ( r , ""overflow"" )"	242:1:4674:4717	5043489	5	True				
ANR	5043555	AssignmentExpression	"f -> o = r_reg_cond_get_value ( r , ""overflow"" )"		5043489	0		=			
ANR	5043556	PtrMemberAccess	f -> o		5043489	0					
ANR	5043557	Identifier	f		5043489	0					
ANR	5043558	Identifier	o		5043489	1					
ANR	5043559	CallExpression	"r_reg_cond_get_value ( r , ""overflow"" )"		5043489	1					
ANR	5043560	Callee	r_reg_cond_get_value		5043489	0					
ANR	5043561	Identifier	r_reg_cond_get_value		5043489	0					
ANR	5043562	ArgumentList	r		5043489	1					
ANR	5043563	Argument	r		5043489	0					
ANR	5043564	Identifier	r		5043489	0					
ANR	5043565	Argument	"""overflow"""		5043489	1					
ANR	5043566	PrimaryExpression	"""overflow"""		5043489	0					
ANR	5043567	ExpressionStatement	"f -> p = r_reg_cond_get_value ( r , ""parity"" )"	243:1:4737:4778	5043489	6	True				
ANR	5043568	AssignmentExpression	"f -> p = r_reg_cond_get_value ( r , ""parity"" )"		5043489	0		=			
ANR	5043569	PtrMemberAccess	f -> p		5043489	0					
ANR	5043570	Identifier	f		5043489	0					
ANR	5043571	Identifier	p		5043489	1					
ANR	5043572	CallExpression	"r_reg_cond_get_value ( r , ""parity"" )"		5043489	1					
ANR	5043573	Callee	r_reg_cond_get_value		5043489	0					
ANR	5043574	Identifier	r_reg_cond_get_value		5043489	0					
ANR	5043575	ArgumentList	r		5043489	1					
ANR	5043576	Argument	r		5043489	0					
ANR	5043577	Identifier	r		5043489	0					
ANR	5043578	Argument	"""parity"""		5043489	1					
ANR	5043579	PrimaryExpression	"""parity"""		5043489	0					
ANR	5043580	ReturnStatement	return f ;	244:1:4805:4813	5043489	7	True				
ANR	5043581	Identifier	f		5043489	0					
ANR	5043582	ReturnType	R_API RRegFlags *		5043489	1					
ANR	5043583	Identifier	r_reg_cond_retrieve		5043489	2					
ANR	5043584	ParameterList	"RReg * r , RRegFlags * f"		5043489	3					
ANR	5043585	Parameter	RReg * r	232:37:4388:4394	5043489	0	True				
ANR	5043586	ParameterType	RReg *		5043489	0					
ANR	5043587	Identifier	r		5043489	1					
ANR	5043588	Parameter	RRegFlags * f	232:46:4397:4408	5043489	1	True				
ANR	5043589	ParameterType	RRegFlags *		5043489	0					
ANR	5043590	Identifier	f		5043489	1					
ANR	5043591	CFGEntryNode	ENTRY		5043489		True				
ANR	5043592	CFGExitNode	EXIT		5043489		True				
ANR	5043593	Symbol	* f		5043489						
ANR	5043594	Symbol	R_NEW0		5043489						
ANR	5043595	Symbol	r		5043489						
ANR	5043596	Symbol	NULL		5043489						
ANR	5043597	Symbol	f -> z		5043489						
ANR	5043598	Symbol	RRegFlags		5043489						
ANR	5043599	Symbol	f		5043489						
ANR	5043600	Symbol	f -> s		5043489						
ANR	5043601	Symbol	f -> c		5043489						
ANR	5043602	Symbol	r_reg_cond_get_value		5043489						
ANR	5043603	Symbol	f -> o		5043489						
ANR	5043604	Symbol	f -> p		5043489						
ANR	5043605	Function	r_reg_cond_apply	247:0:4818:5081							
ANR	5043606	FunctionDef	"r_reg_cond_apply (RReg * r , RRegFlags * f)"		5043605	0					
ANR	5043607	CompoundStatement		247:51:4869:5081	5043605	0					
ANR	5043608	ExpressionStatement	r_return_if_fail ( r && f )	248:1:4872:4897	5043605	0	True				
ANR	5043609	CallExpression	r_return_if_fail ( r && f )		5043605	0					
ANR	5043610	Callee	r_return_if_fail		5043605	0					
ANR	5043611	Identifier	r_return_if_fail		5043605	0					
ANR	5043612	ArgumentList	r && f		5043605	1					
ANR	5043613	Argument	r && f		5043605	0					
ANR	5043614	AndExpression	r && f		5043605	0		&&			
ANR	5043615	Identifier	r		5043605	0					
ANR	5043616	Identifier	f		5043605	1					
ANR	5043617	ExpressionStatement	"r_reg_cond_set ( r , ""sign"" , f -> s )"	249:1:4900:4932	5043605	1	True				
ANR	5043618	CallExpression	"r_reg_cond_set ( r , ""sign"" , f -> s )"		5043605	0					
ANR	5043619	Callee	r_reg_cond_set		5043605	0					
ANR	5043620	Identifier	r_reg_cond_set		5043605	0					
ANR	5043621	ArgumentList	r		5043605	1					
ANR	5043622	Argument	r		5043605	0					
ANR	5043623	Identifier	r		5043605	0					
ANR	5043624	Argument	"""sign"""		5043605	1					
ANR	5043625	PrimaryExpression	"""sign"""		5043605	0					
ANR	5043626	Argument	f -> s		5043605	2					
ANR	5043627	PtrMemberAccess	f -> s		5043605	0					
ANR	5043628	Identifier	f		5043605	0					
ANR	5043629	Identifier	s		5043605	1					
ANR	5043630	ExpressionStatement	"r_reg_cond_set ( r , ""zero"" , f -> z )"	250:1:4935:4967	5043605	2	True				
ANR	5043631	CallExpression	"r_reg_cond_set ( r , ""zero"" , f -> z )"		5043605	0					
ANR	5043632	Callee	r_reg_cond_set		5043605	0					
ANR	5043633	Identifier	r_reg_cond_set		5043605	0					
ANR	5043634	ArgumentList	r		5043605	1					
ANR	5043635	Argument	r		5043605	0					
ANR	5043636	Identifier	r		5043605	0					
ANR	5043637	Argument	"""zero"""		5043605	1					
ANR	5043638	PrimaryExpression	"""zero"""		5043605	0					
ANR	5043639	Argument	f -> z		5043605	2					
ANR	5043640	PtrMemberAccess	f -> z		5043605	0					
ANR	5043641	Identifier	f		5043605	0					
ANR	5043642	Identifier	z		5043605	1					
ANR	5043643	ExpressionStatement	"r_reg_cond_set ( r , ""carry"" , f -> c )"	251:1:4970:5003	5043605	3	True				
ANR	5043644	CallExpression	"r_reg_cond_set ( r , ""carry"" , f -> c )"		5043605	0					
ANR	5043645	Callee	r_reg_cond_set		5043605	0					
ANR	5043646	Identifier	r_reg_cond_set		5043605	0					
ANR	5043647	ArgumentList	r		5043605	1					
ANR	5043648	Argument	r		5043605	0					
ANR	5043649	Identifier	r		5043605	0					
ANR	5043650	Argument	"""carry"""		5043605	1					
ANR	5043651	PrimaryExpression	"""carry"""		5043605	0					
ANR	5043652	Argument	f -> c		5043605	2					
ANR	5043653	PtrMemberAccess	f -> c		5043605	0					
ANR	5043654	Identifier	f		5043605	0					
ANR	5043655	Identifier	c		5043605	1					
ANR	5043656	ExpressionStatement	"r_reg_cond_set ( r , ""overflow"" , f -> o )"	252:1:5006:5042	5043605	4	True				
ANR	5043657	CallExpression	"r_reg_cond_set ( r , ""overflow"" , f -> o )"		5043605	0					
ANR	5043658	Callee	r_reg_cond_set		5043605	0					
ANR	5043659	Identifier	r_reg_cond_set		5043605	0					
ANR	5043660	ArgumentList	r		5043605	1					
ANR	5043661	Argument	r		5043605	0					
ANR	5043662	Identifier	r		5043605	0					
ANR	5043663	Argument	"""overflow"""		5043605	1					
ANR	5043664	PrimaryExpression	"""overflow"""		5043605	0					
ANR	5043665	Argument	f -> o		5043605	2					
ANR	5043666	PtrMemberAccess	f -> o		5043605	0					
ANR	5043667	Identifier	f		5043605	0					
ANR	5043668	Identifier	o		5043605	1					
ANR	5043669	ExpressionStatement	"r_reg_cond_set ( r , ""parity"" , f -> p )"	253:1:5045:5079	5043605	5	True				
ANR	5043670	CallExpression	"r_reg_cond_set ( r , ""parity"" , f -> p )"		5043605	0					
ANR	5043671	Callee	r_reg_cond_set		5043605	0					
ANR	5043672	Identifier	r_reg_cond_set		5043605	0					
ANR	5043673	ArgumentList	r		5043605	1					
ANR	5043674	Argument	r		5043605	0					
ANR	5043675	Identifier	r		5043605	0					
ANR	5043676	Argument	"""parity"""		5043605	1					
ANR	5043677	PrimaryExpression	"""parity"""		5043605	0					
ANR	5043678	Argument	f -> p		5043605	2					
ANR	5043679	PtrMemberAccess	f -> p		5043605	0					
ANR	5043680	Identifier	f		5043605	0					
ANR	5043681	Identifier	p		5043605	1					
ANR	5043682	ReturnType	R_API void		5043605	1					
ANR	5043683	Identifier	r_reg_cond_apply		5043605	2					
ANR	5043684	ParameterList	"RReg * r , RRegFlags * f"		5043605	3					
ANR	5043685	Parameter	RReg * r	247:28:4846:4852	5043605	0	True				
ANR	5043686	ParameterType	RReg *		5043605	0					
ANR	5043687	Identifier	r		5043605	1					
ANR	5043688	Parameter	RRegFlags * f	247:37:4855:4866	5043605	1	True				
ANR	5043689	ParameterType	RRegFlags *		5043605	0					
ANR	5043690	Identifier	f		5043605	1					
ANR	5043691	CFGEntryNode	ENTRY		5043605		True				
ANR	5043692	CFGExitNode	EXIT		5043605		True				
ANR	5043693	Symbol	* f		5043605						
ANR	5043694	Symbol	r		5043605						
ANR	5043695	Symbol	f -> z		5043605						
ANR	5043696	Symbol	f		5043605						
ANR	5043697	Symbol	f -> s		5043605						
ANR	5043698	Symbol	f -> c		5043605						
ANR	5043699	Symbol	f -> o		5043605						
ANR	5043700	Symbol	f -> p		5043605						
