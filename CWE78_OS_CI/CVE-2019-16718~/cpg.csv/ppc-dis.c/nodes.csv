command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5591360	File	data/converged/CVE-2019-16718~_radare2/ppc-dis.c								
ANR	5591361	DeclStmt									
ANR	5591362	Decl							int	"int ( bfd_vma , struct disassemble_info * , int , ppc_cpu_t )"	print_insn_powerpc
ANR	5591363	Function	__bfd_getb32	38:0:1491:1741							
ANR	5591364	FunctionDef	__bfd_getb32 (const void * p)		5591363	0					
ANR	5591365	CompoundStatement		38:44:1535:1741	5591363	0					
ANR	5591366	IdentifierDeclStatement	const bfd_byte * addr = p ;	39:2:1539:1563	5591363	0	True				
ANR	5591367	IdentifierDecl	* addr = p		5591363	0					
ANR	5591368	IdentifierDeclType	const bfd_byte *		5591363	0					
ANR	5591369	Identifier	addr		5591363	1					
ANR	5591370	AssignmentExpression	* addr = p		5591363	2		=			
ANR	5591371	Identifier	p		5591363	0					
ANR	5591372	Identifier	p		5591363	1					
ANR	5591373	IdentifierDeclStatement	unsigned long v ;	40:2:1567:1582	5591363	1	True				
ANR	5591374	IdentifierDecl	v		5591363	0					
ANR	5591375	IdentifierDeclType	unsigned long		5591363	0					
ANR	5591376	Identifier	v		5591363	1					
ANR	5591377	ExpressionStatement	v = ( unsigned long ) addr [ 0 ] << 24	42:2:1587:1620	5591363	2	True				
ANR	5591378	AssignmentExpression	v = ( unsigned long ) addr [ 0 ] << 24		5591363	0		=			
ANR	5591379	Identifier	v		5591363	0					
ANR	5591380	ShiftExpression	( unsigned long ) addr [ 0 ] << 24		5591363	1		<<			
ANR	5591381	CastExpression	( unsigned long ) addr [ 0 ]		5591363	0					
ANR	5591382	CastTarget	unsigned long		5591363	0					
ANR	5591383	ArrayIndexing	addr [ 0 ]		5591363	1					
ANR	5591384	Identifier	addr		5591363	0					
ANR	5591385	PrimaryExpression	0		5591363	1					
ANR	5591386	PrimaryExpression	24		5591363	1					
ANR	5591387	ExpressionStatement	v |= ( unsigned long ) addr [ 1 ] << 16	43:2:1624:1658	5591363	3	True				
ANR	5591388	AssignmentExpression	v |= ( unsigned long ) addr [ 1 ] << 16		5591363	0		|=			
ANR	5591389	Identifier	v		5591363	0					
ANR	5591390	ShiftExpression	( unsigned long ) addr [ 1 ] << 16		5591363	1		<<			
ANR	5591391	CastExpression	( unsigned long ) addr [ 1 ]		5591363	0					
ANR	5591392	CastTarget	unsigned long		5591363	0					
ANR	5591393	ArrayIndexing	addr [ 1 ]		5591363	1					
ANR	5591394	Identifier	addr		5591363	0					
ANR	5591395	PrimaryExpression	1		5591363	1					
ANR	5591396	PrimaryExpression	16		5591363	1					
ANR	5591397	ExpressionStatement	v |= ( unsigned long ) addr [ 2 ] << 8	44:2:1662:1695	5591363	4	True				
ANR	5591398	AssignmentExpression	v |= ( unsigned long ) addr [ 2 ] << 8		5591363	0		|=			
ANR	5591399	Identifier	v		5591363	0					
ANR	5591400	ShiftExpression	( unsigned long ) addr [ 2 ] << 8		5591363	1		<<			
ANR	5591401	CastExpression	( unsigned long ) addr [ 2 ]		5591363	0					
ANR	5591402	CastTarget	unsigned long		5591363	0					
ANR	5591403	ArrayIndexing	addr [ 2 ]		5591363	1					
ANR	5591404	Identifier	addr		5591363	0					
ANR	5591405	PrimaryExpression	2		5591363	1					
ANR	5591406	PrimaryExpression	8		5591363	1					
ANR	5591407	ExpressionStatement	v |= ( unsigned long ) addr [ 3 ]	45:2:1699:1727	5591363	5	True				
ANR	5591408	AssignmentExpression	v |= ( unsigned long ) addr [ 3 ]		5591363	0		|=			
ANR	5591409	Identifier	v		5591363	0					
ANR	5591410	CastExpression	( unsigned long ) addr [ 3 ]		5591363	1					
ANR	5591411	CastTarget	unsigned long		5591363	0					
ANR	5591412	ArrayIndexing	addr [ 3 ]		5591363	1					
ANR	5591413	Identifier	addr		5591363	0					
ANR	5591414	PrimaryExpression	3		5591363	1					
ANR	5591415	ReturnStatement	return v ;	46:2:1731:1739	5591363	6	True				
ANR	5591416	Identifier	v		5591363	0					
ANR	5591417	ReturnType	static bfd_vma		5591363	1					
ANR	5591418	Identifier	__bfd_getb32		5591363	2					
ANR	5591419	ParameterList	const void * p		5591363	3					
ANR	5591420	Parameter	const void * p	38:29:1520:1532	5591363	0	True				
ANR	5591421	ParameterType	const void *		5591363	0					
ANR	5591422	Identifier	p		5591363	1					
ANR	5591423	CFGEntryNode	ENTRY		5591363		True				
ANR	5591424	CFGExitNode	EXIT		5591363		True				
ANR	5591425	Symbol	p		5591363						
ANR	5591426	Symbol	v		5591363						
ANR	5591427	Symbol	* addr		5591363						
ANR	5591428	Symbol	addr		5591363						
ANR	5591429	Function	__bfd_getl32	49:0:1744:1994							
ANR	5591430	FunctionDef	__bfd_getl32 (const void * p)		5591429	0					
ANR	5591431	CompoundStatement		49:44:1788:1994	5591429	0					
ANR	5591432	IdentifierDeclStatement	const bfd_byte * addr = p ;	50:2:1792:1816	5591429	0	True				
ANR	5591433	IdentifierDecl	* addr = p		5591429	0					
ANR	5591434	IdentifierDeclType	const bfd_byte *		5591429	0					
ANR	5591435	Identifier	addr		5591429	1					
ANR	5591436	AssignmentExpression	* addr = p		5591429	2		=			
ANR	5591437	Identifier	p		5591429	0					
ANR	5591438	Identifier	p		5591429	1					
ANR	5591439	IdentifierDeclStatement	unsigned long v ;	51:2:1820:1835	5591429	1	True				
ANR	5591440	IdentifierDecl	v		5591429	0					
ANR	5591441	IdentifierDeclType	unsigned long		5591429	0					
ANR	5591442	Identifier	v		5591429	1					
ANR	5591443	ExpressionStatement	v = ( unsigned long ) addr [ 0 ]	53:2:1840:1867	5591429	2	True				
ANR	5591444	AssignmentExpression	v = ( unsigned long ) addr [ 0 ]		5591429	0		=			
ANR	5591445	Identifier	v		5591429	0					
ANR	5591446	CastExpression	( unsigned long ) addr [ 0 ]		5591429	1					
ANR	5591447	CastTarget	unsigned long		5591429	0					
ANR	5591448	ArrayIndexing	addr [ 0 ]		5591429	1					
ANR	5591449	Identifier	addr		5591429	0					
ANR	5591450	PrimaryExpression	0		5591429	1					
ANR	5591451	ExpressionStatement	v |= ( unsigned long ) addr [ 1 ] << 8	54:2:1871:1904	5591429	3	True				
ANR	5591452	AssignmentExpression	v |= ( unsigned long ) addr [ 1 ] << 8		5591429	0		|=			
ANR	5591453	Identifier	v		5591429	0					
ANR	5591454	ShiftExpression	( unsigned long ) addr [ 1 ] << 8		5591429	1		<<			
ANR	5591455	CastExpression	( unsigned long ) addr [ 1 ]		5591429	0					
ANR	5591456	CastTarget	unsigned long		5591429	0					
ANR	5591457	ArrayIndexing	addr [ 1 ]		5591429	1					
ANR	5591458	Identifier	addr		5591429	0					
ANR	5591459	PrimaryExpression	1		5591429	1					
ANR	5591460	PrimaryExpression	8		5591429	1					
ANR	5591461	ExpressionStatement	v |= ( unsigned long ) addr [ 2 ] << 16	55:2:1908:1942	5591429	4	True				
ANR	5591462	AssignmentExpression	v |= ( unsigned long ) addr [ 2 ] << 16		5591429	0		|=			
ANR	5591463	Identifier	v		5591429	0					
ANR	5591464	ShiftExpression	( unsigned long ) addr [ 2 ] << 16		5591429	1		<<			
ANR	5591465	CastExpression	( unsigned long ) addr [ 2 ]		5591429	0					
ANR	5591466	CastTarget	unsigned long		5591429	0					
ANR	5591467	ArrayIndexing	addr [ 2 ]		5591429	1					
ANR	5591468	Identifier	addr		5591429	0					
ANR	5591469	PrimaryExpression	2		5591429	1					
ANR	5591470	PrimaryExpression	16		5591429	1					
ANR	5591471	ExpressionStatement	v |= ( unsigned long ) addr [ 3 ] << 24	56:2:1946:1980	5591429	5	True				
ANR	5591472	AssignmentExpression	v |= ( unsigned long ) addr [ 3 ] << 24		5591429	0		|=			
ANR	5591473	Identifier	v		5591429	0					
ANR	5591474	ShiftExpression	( unsigned long ) addr [ 3 ] << 24		5591429	1		<<			
ANR	5591475	CastExpression	( unsigned long ) addr [ 3 ]		5591429	0					
ANR	5591476	CastTarget	unsigned long		5591429	0					
ANR	5591477	ArrayIndexing	addr [ 3 ]		5591429	1					
ANR	5591478	Identifier	addr		5591429	0					
ANR	5591479	PrimaryExpression	3		5591429	1					
ANR	5591480	PrimaryExpression	24		5591429	1					
ANR	5591481	ReturnStatement	return v ;	57:2:1984:1992	5591429	6	True				
ANR	5591482	Identifier	v		5591429	0					
ANR	5591483	ReturnType	static bfd_vma		5591429	1					
ANR	5591484	Identifier	__bfd_getl32		5591429	2					
ANR	5591485	ParameterList	const void * p		5591429	3					
ANR	5591486	Parameter	const void * p	49:29:1773:1785	5591429	0	True				
ANR	5591487	ParameterType	const void *		5591429	0					
ANR	5591488	Identifier	p		5591429	1					
ANR	5591489	CFGEntryNode	ENTRY		5591429		True				
ANR	5591490	CFGExitNode	EXIT		5591429		True				
ANR	5591491	Symbol	p		5591429						
ANR	5591492	Symbol	v		5591429						
ANR	5591493	Symbol	* addr		5591429						
ANR	5591494	Symbol	addr		5591429						
ANR	5591495	ClassDef	dis_private	60:0:1997:2103							
ANR	5591496	DeclStmt									
ANR	5591497	Decl							ppc_cpu_t	ppc_cpu_t	dialect
ANR	5591498	Function	powerpc_init_dialect	73:0:2375:5622							
ANR	5591499	FunctionDef	powerpc_init_dialect (struct disassemble_info * info)		5591498	0					
ANR	5591500	CompoundStatement		75:0:2439:5622	5591498	0					
ANR	5591501	IdentifierDeclStatement	ppc_cpu_t dialect = PPC_OPCODE_PPC ;	76:2:2443:2477	5591498	0	True				
ANR	5591502	IdentifierDecl	dialect = PPC_OPCODE_PPC		5591498	0					
ANR	5591503	IdentifierDeclType	ppc_cpu_t		5591498	0					
ANR	5591504	Identifier	dialect		5591498	1					
ANR	5591505	AssignmentExpression	dialect = PPC_OPCODE_PPC		5591498	2		=			
ANR	5591506	Identifier	PPC_OPCODE_PPC		5591498	0					
ANR	5591507	Identifier	PPC_OPCODE_PPC		5591498	1					
ANR	5591508	IdentifierDeclStatement	"struct dis_private * priv = calloc ( sizeof ( * priv ) , 1 ) ;"	77:2:2481:2534	5591498	1	True				
ANR	5591509	IdentifierDecl	"* priv = calloc ( sizeof ( * priv ) , 1 )"		5591498	0					
ANR	5591510	IdentifierDeclType	struct dis_private *		5591498	0					
ANR	5591511	Identifier	priv		5591498	1					
ANR	5591512	AssignmentExpression	"* priv = calloc ( sizeof ( * priv ) , 1 )"		5591498	2		=			
ANR	5591513	Identifier	priv		5591498	0					
ANR	5591514	CallExpression	"calloc ( sizeof ( * priv ) , 1 )"		5591498	1					
ANR	5591515	Callee	calloc		5591498	0					
ANR	5591516	Identifier	calloc		5591498	0					
ANR	5591517	ArgumentList	sizeof ( * priv )		5591498	1					
ANR	5591518	Argument	sizeof ( * priv )		5591498	0					
ANR	5591519	SizeofExpression	sizeof ( * priv )		5591498	0					
ANR	5591520	Sizeof	sizeof		5591498	0					
ANR	5591521	UnaryOperationExpression	* priv		5591498	1					
ANR	5591522	UnaryOperator	*		5591498	0					
ANR	5591523	Identifier	priv		5591498	1					
ANR	5591524	Argument	1		5591498	1					
ANR	5591525	PrimaryExpression	1		5591498	0					
ANR	5591526	IfStatement	if ( priv == NULL )		5591498	2					
ANR	5591527	Condition	priv == NULL	79:6:2543:2554	5591498	0	True				
ANR	5591528	EqualityExpression	priv == NULL		5591498	0		==			
ANR	5591529	Identifier	priv		5591498	0					
ANR	5591530	Identifier	NULL		5591498	1					
ANR	5591531	CompoundStatement		5:20:117:117	5591498	1					
ANR	5591532	ReturnStatement	return FALSE ;	80:3:2562:2574	5591498	0	True				
ANR	5591533	Identifier	FALSE		5591498	0					
ANR	5591534	IfStatement	if ( BFD_DEFAULT_TARGET_SIZE == 64 )		5591498	3					
ANR	5591535	Condition	BFD_DEFAULT_TARGET_SIZE == 64	83:6:2587:2615	5591498	0	True				
ANR	5591536	EqualityExpression	BFD_DEFAULT_TARGET_SIZE == 64		5591498	0		==			
ANR	5591537	Identifier	BFD_DEFAULT_TARGET_SIZE		5591498	0					
ANR	5591538	PrimaryExpression	64		5591498	1					
ANR	5591539	CompoundStatement		9:37:178:178	5591498	1					
ANR	5591540	ExpressionStatement	dialect |= PPC_OPCODE_64	84:3:2623:2647	5591498	0	True				
ANR	5591541	AssignmentExpression	dialect |= PPC_OPCODE_64		5591498	0		|=			
ANR	5591542	Identifier	dialect		5591498	0					
ANR	5591543	Identifier	PPC_OPCODE_64		5591498	1					
ANR	5591544	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""ppcps"" ) != NULL )"		5591498	4					
ANR	5591545	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""ppcps"" ) != NULL"	87:6:2660:2741	5591498	0	True				
ANR	5591546	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""ppcps"" ) != NULL"		5591498	0		&&			
ANR	5591547	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591548	Identifier	info		5591498	0					
ANR	5591549	Identifier	disassembler_options		5591498	1					
ANR	5591550	EqualityExpression	"strstr ( info -> disassembler_options , ""ppcps"" ) != NULL"		5591498	1		!=			
ANR	5591551	CallExpression	"strstr ( info -> disassembler_options , ""ppcps"" )"		5591498	0					
ANR	5591552	Callee	strstr		5591498	0					
ANR	5591553	Identifier	strstr		5591498	0					
ANR	5591554	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591555	Argument	info -> disassembler_options		5591498	0					
ANR	5591556	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591557	Identifier	info		5591498	0					
ANR	5591558	Identifier	disassembler_options		5591498	1					
ANR	5591559	Argument	"""ppcps"""		5591498	1					
ANR	5591560	PrimaryExpression	"""ppcps"""		5591498	0					
ANR	5591561	Identifier	NULL		5591498	1					
ANR	5591562	CompoundStatement		13:90:304:304	5591498	1					
ANR	5591563	ExpressionStatement	dialect |= PPC_OPCODE_PPCPS	88:3:2749:2776	5591498	0	True				
ANR	5591564	AssignmentExpression	dialect |= PPC_OPCODE_PPCPS		5591498	0		|=			
ANR	5591565	Identifier	dialect		5591498	0					
ANR	5591566	Identifier	PPC_OPCODE_PPCPS		5591498	1					
ANR	5591567	ElseStatement	else		5591498	0					
ANR	5591568	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""booke"" ) != NULL )"		5591498	0					
ANR	5591569	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""booke"" ) != NULL"	89:13:2791:2872	5591498	0	True				
ANR	5591570	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""booke"" ) != NULL"		5591498	0		&&			
ANR	5591571	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591572	Identifier	info		5591498	0					
ANR	5591573	Identifier	disassembler_options		5591498	1					
ANR	5591574	EqualityExpression	"strstr ( info -> disassembler_options , ""booke"" ) != NULL"		5591498	1		!=			
ANR	5591575	CallExpression	"strstr ( info -> disassembler_options , ""booke"" )"		5591498	0					
ANR	5591576	Callee	strstr		5591498	0					
ANR	5591577	Identifier	strstr		5591498	0					
ANR	5591578	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591579	Argument	info -> disassembler_options		5591498	0					
ANR	5591580	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591581	Identifier	info		5591498	0					
ANR	5591582	Identifier	disassembler_options		5591498	1					
ANR	5591583	Argument	"""booke"""		5591498	1					
ANR	5591584	PrimaryExpression	"""booke"""		5591498	0					
ANR	5591585	Identifier	NULL		5591498	1					
ANR	5591586	CompoundStatement		15:97:435:435	5591498	1					
ANR	5591587	ExpressionStatement	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_BOOKE64	90:3:2880:2928	5591498	0	True				
ANR	5591588	AssignmentExpression	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_BOOKE64		5591498	0		|=			
ANR	5591589	Identifier	dialect		5591498	0					
ANR	5591590	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_BOOKE64		5591498	1		|			
ANR	5591591	Identifier	PPC_OPCODE_BOOKE		5591498	0					
ANR	5591592	Identifier	PPC_OPCODE_BOOKE64		5591498	1					
ANR	5591593	ElseStatement	else		5591498	0					
ANR	5591594	IfStatement	"if ( ( info -> mach == bfd_mach_ppc_e500mc ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL ) )"		5591498	0					
ANR	5591595	Condition	"( info -> mach == bfd_mach_ppc_e500mc ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL )"	91:13:2943:3066	5591498	0	True				
ANR	5591596	OrExpression	"( info -> mach == bfd_mach_ppc_e500mc ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL )"		5591498	0		||			
ANR	5591597	EqualityExpression	info -> mach == bfd_mach_ppc_e500mc		5591498	0		==			
ANR	5591598	PtrMemberAccess	info -> mach		5591498	0					
ANR	5591599	Identifier	info		5591498	0					
ANR	5591600	Identifier	mach		5591498	1					
ANR	5591601	Identifier	bfd_mach_ppc_e500mc		5591498	1					
ANR	5591602	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e500mc"" ) != NULL"		5591498	1		&&			
ANR	5591603	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591604	Identifier	info		5591498	0					
ANR	5591605	Identifier	disassembler_options		5591498	1					
ANR	5591606	EqualityExpression	"strstr ( info -> disassembler_options , ""e500mc"" ) != NULL"		5591498	1		!=			
ANR	5591607	CallExpression	"strstr ( info -> disassembler_options , ""e500mc"" )"		5591498	0					
ANR	5591608	Callee	strstr		5591498	0					
ANR	5591609	Identifier	strstr		5591498	0					
ANR	5591610	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591611	Argument	info -> disassembler_options		5591498	0					
ANR	5591612	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591613	Identifier	info		5591498	0					
ANR	5591614	Identifier	disassembler_options		5591498	1					
ANR	5591615	Argument	"""e500mc"""		5591498	1					
ANR	5591616	PrimaryExpression	"""e500mc"""		5591498	0					
ANR	5591617	Identifier	NULL		5591498	1					
ANR	5591618	CompoundStatement		17:139:629:629	5591498	1					
ANR	5591619	ExpressionStatement	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )	92:3:3074:3199	5591498	0	True				
ANR	5591620	AssignmentExpression	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )		5591498	0		|=			
ANR	5591621	Identifier	dialect		5591498	0					
ANR	5591622	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591623	Identifier	PPC_OPCODE_BOOKE		5591498	0					
ANR	5591624	InclusiveOrExpression	PPC_OPCODE_ISEL | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591625	Identifier	PPC_OPCODE_ISEL		5591498	0					
ANR	5591626	InclusiveOrExpression	PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591627	Identifier	PPC_OPCODE_PMR		5591498	0					
ANR	5591628	InclusiveOrExpression	PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591629	Identifier	PPC_OPCODE_CACHELCK		5591498	0					
ANR	5591630	InclusiveOrExpression	PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591631	Identifier	PPC_OPCODE_RFMCI		5591498	0					
ANR	5591632	Identifier	PPC_OPCODE_E500MC		5591498	1					
ANR	5591633	ElseStatement	else		5591498	0					
ANR	5591634	IfStatement	"if ( ( info -> mach == bfd_mach_ppc_e500 ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL ) )"		5591498	0					
ANR	5591635	Condition	"( info -> mach == bfd_mach_ppc_e500 ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL )"	93:13:3214:3333	5591498	0	True				
ANR	5591636	OrExpression	"( info -> mach == bfd_mach_ppc_e500 ) || ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL )"		5591498	0		||			
ANR	5591637	EqualityExpression	info -> mach == bfd_mach_ppc_e500		5591498	0		==			
ANR	5591638	PtrMemberAccess	info -> mach		5591498	0					
ANR	5591639	Identifier	info		5591498	0					
ANR	5591640	Identifier	mach		5591498	1					
ANR	5591641	Identifier	bfd_mach_ppc_e500		5591498	1					
ANR	5591642	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e500"" ) != NULL"		5591498	1		&&			
ANR	5591643	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591644	Identifier	info		5591498	0					
ANR	5591645	Identifier	disassembler_options		5591498	1					
ANR	5591646	EqualityExpression	"strstr ( info -> disassembler_options , ""e500"" ) != NULL"		5591498	1		!=			
ANR	5591647	CallExpression	"strstr ( info -> disassembler_options , ""e500"" )"		5591498	0					
ANR	5591648	Callee	strstr		5591498	0					
ANR	5591649	Identifier	strstr		5591498	0					
ANR	5591650	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591651	Argument	info -> disassembler_options		5591498	0					
ANR	5591652	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591653	Identifier	info		5591498	0					
ANR	5591654	Identifier	disassembler_options		5591498	1					
ANR	5591655	Argument	"""e500"""		5591498	1					
ANR	5591656	PrimaryExpression	"""e500"""		5591498	0					
ANR	5591657	Identifier	NULL		5591498	1					
ANR	5591658	CompoundStatement		19:135:896:896	5591498	1					
ANR	5591659	ExpressionStatement	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )	94:3:3341:3520	5591498	0	True				
ANR	5591660	AssignmentExpression	dialect |= ( PPC_OPCODE_BOOKE | PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC )		5591498	0		|=			
ANR	5591661	Identifier	dialect		5591498	0					
ANR	5591662	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591663	Identifier	PPC_OPCODE_BOOKE		5591498	0					
ANR	5591664	InclusiveOrExpression	PPC_OPCODE_SPE | PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591665	Identifier	PPC_OPCODE_SPE		5591498	0					
ANR	5591666	InclusiveOrExpression	PPC_OPCODE_ISEL | PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591667	Identifier	PPC_OPCODE_ISEL		5591498	0					
ANR	5591668	InclusiveOrExpression	PPC_OPCODE_EFS | PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591669	Identifier	PPC_OPCODE_EFS		5591498	0					
ANR	5591670	InclusiveOrExpression	PPC_OPCODE_BRLOCK | PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591671	Identifier	PPC_OPCODE_BRLOCK		5591498	0					
ANR	5591672	InclusiveOrExpression	PPC_OPCODE_PMR | PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591673	Identifier	PPC_OPCODE_PMR		5591498	0					
ANR	5591674	InclusiveOrExpression	PPC_OPCODE_CACHELCK | PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591675	Identifier	PPC_OPCODE_CACHELCK		5591498	0					
ANR	5591676	InclusiveOrExpression	PPC_OPCODE_RFMCI | PPC_OPCODE_E500MC		5591498	1		|			
ANR	5591677	Identifier	PPC_OPCODE_RFMCI		5591498	0					
ANR	5591678	Identifier	PPC_OPCODE_E500MC		5591498	1					
ANR	5591679	ElseStatement	else		5591498	0					
ANR	5591680	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""efs"" ) != NULL )"		5591498	0					
ANR	5591681	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""efs"" ) != NULL"	95:13:3535:3614	5591498	0	True				
ANR	5591682	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""efs"" ) != NULL"		5591498	0		&&			
ANR	5591683	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591684	Identifier	info		5591498	0					
ANR	5591685	Identifier	disassembler_options		5591498	1					
ANR	5591686	EqualityExpression	"strstr ( info -> disassembler_options , ""efs"" ) != NULL"		5591498	1		!=			
ANR	5591687	CallExpression	"strstr ( info -> disassembler_options , ""efs"" )"		5591498	0					
ANR	5591688	Callee	strstr		5591498	0					
ANR	5591689	Identifier	strstr		5591498	0					
ANR	5591690	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591691	Argument	info -> disassembler_options		5591498	0					
ANR	5591692	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591693	Identifier	info		5591498	0					
ANR	5591694	Identifier	disassembler_options		5591498	1					
ANR	5591695	Argument	"""efs"""		5591498	1					
ANR	5591696	PrimaryExpression	"""efs"""		5591498	0					
ANR	5591697	Identifier	NULL		5591498	1					
ANR	5591698	CompoundStatement		21:95:1177:1177	5591498	1					
ANR	5591699	ExpressionStatement	dialect |= PPC_OPCODE_EFS	96:3:3622:3647	5591498	0	True				
ANR	5591700	AssignmentExpression	dialect |= PPC_OPCODE_EFS		5591498	0		|=			
ANR	5591701	Identifier	dialect		5591498	0					
ANR	5591702	Identifier	PPC_OPCODE_EFS		5591498	1					
ANR	5591703	ElseStatement	else		5591498	0					
ANR	5591704	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""e300"" ) != NULL )"		5591498	0					
ANR	5591705	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e300"" ) != NULL"	97:13:3662:3742	5591498	0	True				
ANR	5591706	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""e300"" ) != NULL"		5591498	0		&&			
ANR	5591707	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591708	Identifier	info		5591498	0					
ANR	5591709	Identifier	disassembler_options		5591498	1					
ANR	5591710	EqualityExpression	"strstr ( info -> disassembler_options , ""e300"" ) != NULL"		5591498	1		!=			
ANR	5591711	CallExpression	"strstr ( info -> disassembler_options , ""e300"" )"		5591498	0					
ANR	5591712	Callee	strstr		5591498	0					
ANR	5591713	Identifier	strstr		5591498	0					
ANR	5591714	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591715	Argument	info -> disassembler_options		5591498	0					
ANR	5591716	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591717	Identifier	info		5591498	0					
ANR	5591718	Identifier	disassembler_options		5591498	1					
ANR	5591719	Argument	"""e300"""		5591498	1					
ANR	5591720	PrimaryExpression	"""e300"""		5591498	0					
ANR	5591721	Identifier	NULL		5591498	1					
ANR	5591722	CompoundStatement		23:96:1305:1305	5591498	1					
ANR	5591723	ExpressionStatement	dialect |= PPC_OPCODE_E300 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON	98:3:3750:3817	5591498	0	True				
ANR	5591724	AssignmentExpression	dialect |= PPC_OPCODE_E300 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON		5591498	0		|=			
ANR	5591725	Identifier	dialect		5591498	0					
ANR	5591726	InclusiveOrExpression	PPC_OPCODE_E300 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON		5591498	1		|			
ANR	5591727	Identifier	PPC_OPCODE_E300		5591498	0					
ANR	5591728	InclusiveOrExpression	PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON		5591498	1		|			
ANR	5591729	Identifier	PPC_OPCODE_CLASSIC		5591498	0					
ANR	5591730	Identifier	PPC_OPCODE_COMMON		5591498	1					
ANR	5591731	ElseStatement	else		5591498	0					
ANR	5591732	IfStatement	"if ( info -> disassembler_options && ( strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL ) )"		5591498	0					
ANR	5591733	Condition	"info -> disassembler_options && ( strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL )"	99:13:3832:3967	5591498	0	True				
ANR	5591734	AndExpression	"info -> disassembler_options && ( strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL )"		5591498	0		&&			
ANR	5591735	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591736	Identifier	info		5591498	0					
ANR	5591737	Identifier	disassembler_options		5591498	1					
ANR	5591738	OrExpression	"strstr ( info -> disassembler_options , ""440"" ) != NULL || strstr ( info -> disassembler_options , ""464"" ) != NULL"		5591498	1		||			
ANR	5591739	EqualityExpression	"strstr ( info -> disassembler_options , ""440"" ) != NULL"		5591498	0		!=			
ANR	5591740	CallExpression	"strstr ( info -> disassembler_options , ""440"" )"		5591498	0					
ANR	5591741	Callee	strstr		5591498	0					
ANR	5591742	Identifier	strstr		5591498	0					
ANR	5591743	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591744	Argument	info -> disassembler_options		5591498	0					
ANR	5591745	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591746	Identifier	info		5591498	0					
ANR	5591747	Identifier	disassembler_options		5591498	1					
ANR	5591748	Argument	"""440"""		5591498	1					
ANR	5591749	PrimaryExpression	"""440"""		5591498	0					
ANR	5591750	Identifier	NULL		5591498	1					
ANR	5591751	EqualityExpression	"strstr ( info -> disassembler_options , ""464"" ) != NULL"		5591498	1		!=			
ANR	5591752	CallExpression	"strstr ( info -> disassembler_options , ""464"" )"		5591498	0					
ANR	5591753	Callee	strstr		5591498	0					
ANR	5591754	Identifier	strstr		5591498	0					
ANR	5591755	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591756	Argument	info -> disassembler_options		5591498	0					
ANR	5591757	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591758	Identifier	info		5591498	0					
ANR	5591759	Identifier	disassembler_options		5591498	1					
ANR	5591760	Argument	"""464"""		5591498	1					
ANR	5591761	PrimaryExpression	"""464"""		5591498	0					
ANR	5591762	Identifier	NULL		5591498	1					
ANR	5591763	CompoundStatement		25:151:1530:1530	5591498	1					
ANR	5591764	ExpressionStatement	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI	100:3:3975:4072	5591498	0	True				
ANR	5591765	AssignmentExpression	dialect |= PPC_OPCODE_BOOKE | PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		5591498	0		|=			
ANR	5591766	Identifier	dialect		5591498	0					
ANR	5591767	InclusiveOrExpression	PPC_OPCODE_BOOKE | PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		5591498	1		|			
ANR	5591768	Identifier	PPC_OPCODE_BOOKE		5591498	0					
ANR	5591769	InclusiveOrExpression	PPC_OPCODE_32 | PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		5591498	1		|			
ANR	5591770	Identifier	PPC_OPCODE_32		5591498	0					
ANR	5591771	InclusiveOrExpression	PPC_OPCODE_440 | PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		5591498	1		|			
ANR	5591772	Identifier	PPC_OPCODE_440		5591498	0					
ANR	5591773	InclusiveOrExpression	PPC_OPCODE_ISEL | PPC_OPCODE_RFMCI		5591498	1		|			
ANR	5591774	Identifier	PPC_OPCODE_ISEL		5591498	0					
ANR	5591775	Identifier	PPC_OPCODE_RFMCI		5591498	1					
ANR	5591776	ElseStatement	else		5591498	0					
ANR	5591777	CompoundStatement		27:9:1643:1643	5591498	0					
ANR	5591778	ExpressionStatement	dialect |= ( PPC_OPCODE_403 | PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC )	102:3:4088:4194	5591498	0	True				
ANR	5591779	AssignmentExpression	dialect |= ( PPC_OPCODE_403 | PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC )		5591498	0		|=			
ANR	5591780	Identifier	dialect		5591498	0					
ANR	5591781	InclusiveOrExpression	PPC_OPCODE_403 | PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591782	Identifier	PPC_OPCODE_403		5591498	0					
ANR	5591783	InclusiveOrExpression	PPC_OPCODE_601 | PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591784	Identifier	PPC_OPCODE_601		5591498	0					
ANR	5591785	InclusiveOrExpression	PPC_OPCODE_CLASSIC | PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591786	Identifier	PPC_OPCODE_CLASSIC		5591498	0					
ANR	5591787	InclusiveOrExpression	PPC_OPCODE_COMMON | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591788	Identifier	PPC_OPCODE_COMMON		5591498	0					
ANR	5591789	Identifier	PPC_OPCODE_ALTIVEC		5591498	1					
ANR	5591790	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power4"" ) != NULL )"		5591498	5					
ANR	5591791	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power4"" ) != NULL"	105:6:4207:4289	5591498	0	True				
ANR	5591792	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power4"" ) != NULL"		5591498	0		&&			
ANR	5591793	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591794	Identifier	info		5591498	0					
ANR	5591795	Identifier	disassembler_options		5591498	1					
ANR	5591796	EqualityExpression	"strstr ( info -> disassembler_options , ""power4"" ) != NULL"		5591498	1		!=			
ANR	5591797	CallExpression	"strstr ( info -> disassembler_options , ""power4"" )"		5591498	0					
ANR	5591798	Callee	strstr		5591498	0					
ANR	5591799	Identifier	strstr		5591498	0					
ANR	5591800	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591801	Argument	info -> disassembler_options		5591498	0					
ANR	5591802	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591803	Identifier	info		5591498	0					
ANR	5591804	Identifier	disassembler_options		5591498	1					
ANR	5591805	Argument	"""power4"""		5591498	1					
ANR	5591806	PrimaryExpression	"""power4"""		5591498	0					
ANR	5591807	Identifier	NULL		5591498	1					
ANR	5591808	CompoundStatement		31:91:1852:1852	5591498	1					
ANR	5591809	ExpressionStatement	dialect |= PPC_OPCODE_POWER4	106:3:4297:4325	5591498	0	True				
ANR	5591810	AssignmentExpression	dialect |= PPC_OPCODE_POWER4		5591498	0		|=			
ANR	5591811	Identifier	dialect		5591498	0					
ANR	5591812	Identifier	PPC_OPCODE_POWER4		5591498	1					
ANR	5591813	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power5"" ) != NULL )"		5591498	6					
ANR	5591814	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power5"" ) != NULL"	109:6:4338:4420	5591498	0	True				
ANR	5591815	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power5"" ) != NULL"		5591498	0		&&			
ANR	5591816	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591817	Identifier	info		5591498	0					
ANR	5591818	Identifier	disassembler_options		5591498	1					
ANR	5591819	EqualityExpression	"strstr ( info -> disassembler_options , ""power5"" ) != NULL"		5591498	1		!=			
ANR	5591820	CallExpression	"strstr ( info -> disassembler_options , ""power5"" )"		5591498	0					
ANR	5591821	Callee	strstr		5591498	0					
ANR	5591822	Identifier	strstr		5591498	0					
ANR	5591823	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591824	Argument	info -> disassembler_options		5591498	0					
ANR	5591825	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591826	Identifier	info		5591498	0					
ANR	5591827	Identifier	disassembler_options		5591498	1					
ANR	5591828	Argument	"""power5"""		5591498	1					
ANR	5591829	PrimaryExpression	"""power5"""		5591498	0					
ANR	5591830	Identifier	NULL		5591498	1					
ANR	5591831	CompoundStatement		35:91:1983:1983	5591498	1					
ANR	5591832	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5	110:3:4428:4476	5591498	0	True				
ANR	5591833	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5		5591498	0		|=			
ANR	5591834	Identifier	dialect		5591498	0					
ANR	5591835	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5		5591498	1		|			
ANR	5591836	Identifier	PPC_OPCODE_POWER4		5591498	0					
ANR	5591837	Identifier	PPC_OPCODE_POWER5		5591498	1					
ANR	5591838	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""cell"" ) != NULL )"		5591498	7					
ANR	5591839	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""cell"" ) != NULL"	113:6:4489:4569	5591498	0	True				
ANR	5591840	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""cell"" ) != NULL"		5591498	0		&&			
ANR	5591841	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591842	Identifier	info		5591498	0					
ANR	5591843	Identifier	disassembler_options		5591498	1					
ANR	5591844	EqualityExpression	"strstr ( info -> disassembler_options , ""cell"" ) != NULL"		5591498	1		!=			
ANR	5591845	CallExpression	"strstr ( info -> disassembler_options , ""cell"" )"		5591498	0					
ANR	5591846	Callee	strstr		5591498	0					
ANR	5591847	Identifier	strstr		5591498	0					
ANR	5591848	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591849	Argument	info -> disassembler_options		5591498	0					
ANR	5591850	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591851	Identifier	info		5591498	0					
ANR	5591852	Identifier	disassembler_options		5591498	1					
ANR	5591853	Argument	"""cell"""		5591498	1					
ANR	5591854	PrimaryExpression	"""cell"""		5591498	0					
ANR	5591855	Identifier	NULL		5591498	1					
ANR	5591856	CompoundStatement		39:89:2132:2132	5591498	1					
ANR	5591857	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC	114:3:4577:4644	5591498	0	True				
ANR	5591858	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC		5591498	0		|=			
ANR	5591859	Identifier	dialect		5591498	0					
ANR	5591860	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591861	Identifier	PPC_OPCODE_POWER4		5591498	0					
ANR	5591862	InclusiveOrExpression	PPC_OPCODE_CELL | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591863	Identifier	PPC_OPCODE_CELL		5591498	0					
ANR	5591864	Identifier	PPC_OPCODE_ALTIVEC		5591498	1					
ANR	5591865	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power6"" ) != NULL )"		5591498	8					
ANR	5591866	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power6"" ) != NULL"	117:6:4657:4739	5591498	0	True				
ANR	5591867	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power6"" ) != NULL"		5591498	0		&&			
ANR	5591868	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591869	Identifier	info		5591498	0					
ANR	5591870	Identifier	disassembler_options		5591498	1					
ANR	5591871	EqualityExpression	"strstr ( info -> disassembler_options , ""power6"" ) != NULL"		5591498	1		!=			
ANR	5591872	CallExpression	"strstr ( info -> disassembler_options , ""power6"" )"		5591498	0					
ANR	5591873	Callee	strstr		5591498	0					
ANR	5591874	Identifier	strstr		5591498	0					
ANR	5591875	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591876	Argument	info -> disassembler_options		5591498	0					
ANR	5591877	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591878	Identifier	info		5591498	0					
ANR	5591879	Identifier	disassembler_options		5591498	1					
ANR	5591880	Argument	"""power6"""		5591498	1					
ANR	5591881	PrimaryExpression	"""power6"""		5591498	0					
ANR	5591882	Identifier	NULL		5591498	1					
ANR	5591883	CompoundStatement		43:91:2302:2302	5591498	1					
ANR	5591884	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC	118:3:4747:4836	5591498	0	True				
ANR	5591885	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		5591498	0		|=			
ANR	5591886	Identifier	dialect		5591498	0					
ANR	5591887	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591888	Identifier	PPC_OPCODE_POWER4		5591498	0					
ANR	5591889	InclusiveOrExpression	PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591890	Identifier	PPC_OPCODE_POWER5		5591498	0					
ANR	5591891	InclusiveOrExpression	PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC		5591498	1		|			
ANR	5591892	Identifier	PPC_OPCODE_POWER6		5591498	0					
ANR	5591893	Identifier	PPC_OPCODE_ALTIVEC		5591498	1					
ANR	5591894	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""power7"" ) != NULL )"		5591498	9					
ANR	5591895	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power7"" ) != NULL"	121:6:4849:4931	5591498	0	True				
ANR	5591896	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""power7"" ) != NULL"		5591498	0		&&			
ANR	5591897	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591898	Identifier	info		5591498	0					
ANR	5591899	Identifier	disassembler_options		5591498	1					
ANR	5591900	EqualityExpression	"strstr ( info -> disassembler_options , ""power7"" ) != NULL"		5591498	1		!=			
ANR	5591901	CallExpression	"strstr ( info -> disassembler_options , ""power7"" )"		5591498	0					
ANR	5591902	Callee	strstr		5591498	0					
ANR	5591903	Identifier	strstr		5591498	0					
ANR	5591904	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591905	Argument	info -> disassembler_options		5591498	0					
ANR	5591906	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591907	Identifier	info		5591498	0					
ANR	5591908	Identifier	disassembler_options		5591498	1					
ANR	5591909	Argument	"""power7"""		5591498	1					
ANR	5591910	PrimaryExpression	"""power7"""		5591498	0					
ANR	5591911	Identifier	NULL		5591498	1					
ANR	5591912	CompoundStatement		47:91:2494:2494	5591498	1					
ANR	5591913	ExpressionStatement	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX	122:3:4939:5045	5591498	0	True				
ANR	5591914	AssignmentExpression	dialect |= PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		5591498	0		|=			
ANR	5591915	Identifier	dialect		5591498	0					
ANR	5591916	InclusiveOrExpression	PPC_OPCODE_POWER4 | PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		5591498	1		|			
ANR	5591917	Identifier	PPC_OPCODE_POWER4		5591498	0					
ANR	5591918	InclusiveOrExpression	PPC_OPCODE_POWER5 | PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		5591498	1		|			
ANR	5591919	Identifier	PPC_OPCODE_POWER5		5591498	0					
ANR	5591920	InclusiveOrExpression	PPC_OPCODE_POWER6 | PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		5591498	1		|			
ANR	5591921	Identifier	PPC_OPCODE_POWER6		5591498	0					
ANR	5591922	InclusiveOrExpression	PPC_OPCODE_ALTIVEC | PPC_OPCODE_VSX		5591498	1		|			
ANR	5591923	Identifier	PPC_OPCODE_ALTIVEC		5591498	0					
ANR	5591924	Identifier	PPC_OPCODE_VSX		5591498	1					
ANR	5591925	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""vsx"" ) != NULL )"		5591498	10					
ANR	5591926	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""vsx"" ) != NULL"	125:6:5058:5137	5591498	0	True				
ANR	5591927	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""vsx"" ) != NULL"		5591498	0		&&			
ANR	5591928	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591929	Identifier	info		5591498	0					
ANR	5591930	Identifier	disassembler_options		5591498	1					
ANR	5591931	EqualityExpression	"strstr ( info -> disassembler_options , ""vsx"" ) != NULL"		5591498	1		!=			
ANR	5591932	CallExpression	"strstr ( info -> disassembler_options , ""vsx"" )"		5591498	0					
ANR	5591933	Callee	strstr		5591498	0					
ANR	5591934	Identifier	strstr		5591498	0					
ANR	5591935	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591936	Argument	info -> disassembler_options		5591498	0					
ANR	5591937	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591938	Identifier	info		5591498	0					
ANR	5591939	Identifier	disassembler_options		5591498	1					
ANR	5591940	Argument	"""vsx"""		5591498	1					
ANR	5591941	PrimaryExpression	"""vsx"""		5591498	0					
ANR	5591942	Identifier	NULL		5591498	1					
ANR	5591943	CompoundStatement		51:88:2700:2700	5591498	1					
ANR	5591944	ExpressionStatement	dialect |= PPC_OPCODE_VSX	126:3:5145:5170	5591498	0	True				
ANR	5591945	AssignmentExpression	dialect |= PPC_OPCODE_VSX		5591498	0		|=			
ANR	5591946	Identifier	dialect		5591498	0					
ANR	5591947	Identifier	PPC_OPCODE_VSX		5591498	1					
ANR	5591948	IfStatement	"if ( info -> disassembler_options && strstr ( info -> disassembler_options , ""any"" ) != NULL )"		5591498	11					
ANR	5591949	Condition	"info -> disassembler_options && strstr ( info -> disassembler_options , ""any"" ) != NULL"	129:6:5183:5262	5591498	0	True				
ANR	5591950	AndExpression	"info -> disassembler_options && strstr ( info -> disassembler_options , ""any"" ) != NULL"		5591498	0		&&			
ANR	5591951	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591952	Identifier	info		5591498	0					
ANR	5591953	Identifier	disassembler_options		5591498	1					
ANR	5591954	EqualityExpression	"strstr ( info -> disassembler_options , ""any"" ) != NULL"		5591498	1		!=			
ANR	5591955	CallExpression	"strstr ( info -> disassembler_options , ""any"" )"		5591498	0					
ANR	5591956	Callee	strstr		5591498	0					
ANR	5591957	Identifier	strstr		5591498	0					
ANR	5591958	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591959	Argument	info -> disassembler_options		5591498	0					
ANR	5591960	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591961	Identifier	info		5591498	0					
ANR	5591962	Identifier	disassembler_options		5591498	1					
ANR	5591963	Argument	"""any"""		5591498	1					
ANR	5591964	PrimaryExpression	"""any"""		5591498	0					
ANR	5591965	Identifier	NULL		5591498	1					
ANR	5591966	CompoundStatement		55:88:2825:2825	5591498	1					
ANR	5591967	ExpressionStatement	dialect |= PPC_OPCODE_ANY	130:3:5270:5295	5591498	0	True				
ANR	5591968	AssignmentExpression	dialect |= PPC_OPCODE_ANY		5591498	0		|=			
ANR	5591969	Identifier	dialect		5591498	0					
ANR	5591970	Identifier	PPC_OPCODE_ANY		5591498	1					
ANR	5591971	IfStatement	if ( info -> disassembler_options )		5591498	12					
ANR	5591972	Condition	info -> disassembler_options	133:6:5308:5333	5591498	0	True				
ANR	5591973	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591974	Identifier	info		5591498	0					
ANR	5591975	Identifier	disassembler_options		5591498	1					
ANR	5591976	CompoundStatement		60:4:2900:2900	5591498	1					
ANR	5591977	IfStatement	"if ( strstr ( info -> disassembler_options , ""32"" ) != NULL )"		5591498	0					
ANR	5591978	Condition	"strstr ( info -> disassembler_options , ""32"" ) != NULL"	135:7:5349:5397	5591498	0	True				
ANR	5591979	EqualityExpression	"strstr ( info -> disassembler_options , ""32"" ) != NULL"		5591498	0		!=			
ANR	5591980	CallExpression	"strstr ( info -> disassembler_options , ""32"" )"		5591498	0					
ANR	5591981	Callee	strstr		5591498	0					
ANR	5591982	Identifier	strstr		5591498	0					
ANR	5591983	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5591984	Argument	info -> disassembler_options		5591498	0					
ANR	5591985	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5591986	Identifier	info		5591498	0					
ANR	5591987	Identifier	disassembler_options		5591498	1					
ANR	5591988	Argument	"""32"""		5591498	1					
ANR	5591989	PrimaryExpression	"""32"""		5591498	0					
ANR	5591990	Identifier	NULL		5591498	1					
ANR	5591991	CompoundStatement		61:58:2960:2960	5591498	1					
ANR	5591992	ExpressionStatement	dialect &= ~PPC_OPCODE_64	136:4:5406:5431	5591498	0	True				
ANR	5591993	AssignmentExpression	dialect &= ~PPC_OPCODE_64		5591498	0		&=			
ANR	5591994	Identifier	dialect		5591498	0					
ANR	5591995	Identifier	~PPC_OPCODE_64		5591498	1					
ANR	5591996	ElseStatement	else		5591498	0					
ANR	5591997	IfStatement	"if ( strstr ( info -> disassembler_options , ""64"" ) != NULL )"		5591498	0					
ANR	5591998	Condition	"strstr ( info -> disassembler_options , ""64"" ) != NULL"	137:14:5447:5495	5591498	0	True				
ANR	5591999	EqualityExpression	"strstr ( info -> disassembler_options , ""64"" ) != NULL"		5591498	0		!=			
ANR	5592000	CallExpression	"strstr ( info -> disassembler_options , ""64"" )"		5591498	0					
ANR	5592001	Callee	strstr		5591498	0					
ANR	5592002	Identifier	strstr		5591498	0					
ANR	5592003	ArgumentList	info -> disassembler_options		5591498	1					
ANR	5592004	Argument	info -> disassembler_options		5591498	0					
ANR	5592005	PtrMemberAccess	info -> disassembler_options		5591498	0					
ANR	5592006	Identifier	info		5591498	0					
ANR	5592007	Identifier	disassembler_options		5591498	1					
ANR	5592008	Argument	"""64"""		5591498	1					
ANR	5592009	PrimaryExpression	"""64"""		5591498	0					
ANR	5592010	Identifier	NULL		5591498	1					
ANR	5592011	CompoundStatement		63:65:3058:3058	5591498	1					
ANR	5592012	ExpressionStatement	dialect |= PPC_OPCODE_64	138:4:5504:5528	5591498	0	True				
ANR	5592013	AssignmentExpression	dialect |= PPC_OPCODE_64		5591498	0		|=			
ANR	5592014	Identifier	dialect		5591498	0					
ANR	5592015	Identifier	PPC_OPCODE_64		5591498	1					
ANR	5592016	ExpressionStatement	info -> private_data = priv	142:2:5544:5569	5591498	13	True				
ANR	5592017	AssignmentExpression	info -> private_data = priv		5591498	0		=			
ANR	5592018	PtrMemberAccess	info -> private_data		5591498	0					
ANR	5592019	Identifier	info		5591498	0					
ANR	5592020	Identifier	private_data		5591498	1					
ANR	5592021	Identifier	priv		5591498	1					
ANR	5592022	ExpressionStatement	POWERPC_DIALECT ( info ) = dialect	143:2:5573:5604	5591498	14	True				
ANR	5592023	AssignmentExpression	POWERPC_DIALECT ( info ) = dialect		5591498	0		=			
ANR	5592024	CallExpression	POWERPC_DIALECT ( info )		5591498	0					
ANR	5592025	Callee	POWERPC_DIALECT		5591498	0					
ANR	5592026	Identifier	POWERPC_DIALECT		5591498	0					
ANR	5592027	ArgumentList	info		5591498	1					
ANR	5592028	Argument	info		5591498	0					
ANR	5592029	Identifier	info		5591498	0					
ANR	5592030	Identifier	dialect		5591498	1					
ANR	5592031	ReturnStatement	return TRUE ;	145:2:5609:5620	5591498	15	True				
ANR	5592032	Identifier	TRUE		5591498	0					
ANR	5592033	ReturnType	static int		5591498	1					
ANR	5592034	Identifier	powerpc_init_dialect		5591498	2					
ANR	5592035	ParameterList	struct disassemble_info * info		5591498	3					
ANR	5592036	Parameter	struct disassemble_info * info	74:22:2408:2436	5591498	0	True				
ANR	5592037	ParameterType	struct disassemble_info *		5591498	0					
ANR	5592038	Identifier	info		5591498	1					
ANR	5592039	CFGEntryNode	ENTRY		5591498		True				
ANR	5592040	CFGExitNode	EXIT		5591498		True				
ANR	5592041	Symbol	dialect		5591498						
ANR	5592042	Symbol	* priv		5591498						
ANR	5592043	Symbol	PPC_OPCODE_32		5591498						
ANR	5592044	Symbol	calloc		5591498						
ANR	5592045	Symbol	PPC_OPCODE_E500MC		5591498						
ANR	5592046	Symbol	POWERPC_DIALECT		5591498						
ANR	5592047	Symbol	PPC_OPCODE_CLASSIC		5591498						
ANR	5592048	Symbol	priv		5591498						
ANR	5592049	Symbol	PPC_OPCODE_RFMCI		5591498						
ANR	5592050	Symbol	PPC_OPCODE_440		5591498						
ANR	5592051	Symbol	BFD_DEFAULT_TARGET_SIZE		5591498						
ANR	5592052	Symbol	info		5591498						
ANR	5592053	Symbol	PPC_OPCODE_ISEL		5591498						
ANR	5592054	Symbol	PPC_OPCODE_BOOKE64		5591498						
ANR	5592055	Symbol	PPC_OPCODE_VSX		5591498						
ANR	5592056	Symbol	info -> disassembler_options		5591498						
ANR	5592057	Symbol	PPC_OPCODE_BRLOCK		5591498						
ANR	5592058	Symbol	NULL		5591498						
ANR	5592059	Symbol	PPC_OPCODE_601		5591498						
ANR	5592060	Symbol	PPC_OPCODE_403		5591498						
ANR	5592061	Symbol	info -> private_data		5591498						
ANR	5592062	Symbol	info -> mach		5591498						
ANR	5592063	Symbol	PPC_OPCODE_PMR		5591498						
ANR	5592064	Symbol	PPC_OPCODE_E300		5591498						
ANR	5592065	Symbol	PPC_OPCODE_PPCPS		5591498						
ANR	5592066	Symbol	PPC_OPCODE_PPC		5591498						
ANR	5592067	Symbol	TRUE		5591498						
ANR	5592068	Symbol	PPC_OPCODE_CACHELCK		5591498						
ANR	5592069	Symbol	PPC_OPCODE_64		5591498						
ANR	5592070	Symbol	PPC_OPCODE_ANY		5591498						
ANR	5592071	Symbol	PPC_OPCODE_CELL		5591498						
ANR	5592072	Symbol	~PPC_OPCODE_64		5591498						
ANR	5592073	Symbol	PPC_OPCODE_BOOKE		5591498						
ANR	5592074	Symbol	PPC_OPCODE_SPE		5591498						
ANR	5592075	Symbol	PPC_OPCODE_POWER4		5591498						
ANR	5592076	Symbol	strstr		5591498						
ANR	5592077	Symbol	PPC_OPCODE_POWER5		5591498						
ANR	5592078	Symbol	bfd_mach_ppc_e500		5591498						
ANR	5592079	Symbol	PPC_OPCODE_POWER6		5591498						
ANR	5592080	Symbol	bfd_mach_ppc_e500mc		5591498						
ANR	5592081	Symbol	FALSE		5591498						
ANR	5592082	Symbol	PPC_OPCODE_EFS		5591498						
ANR	5592083	Symbol	PPC_OPCODE_ALTIVEC		5591498						
ANR	5592084	Symbol	* info		5591498						
ANR	5592085	Symbol	PPC_OPCODE_COMMON		5591498						
ANR	5592086	Function	print_insn_big_powerpc	150:0:5673:5905							
ANR	5592087	FunctionDef	"print_insn_big_powerpc (bfd_vma memaddr , struct disassemble_info * info)"		5592086	0					
ANR	5592088	CompoundStatement		152:0:5749:5905	5592086	0					
ANR	5592089	IfStatement	if ( info -> private_data == NULL && ! powerpc_init_dialect ( info ) )		5592086	0					
ANR	5592090	Condition	info -> private_data == NULL && ! powerpc_init_dialect ( info )	153:5:5756:5813	5592086	0	True				
ANR	5592091	AndExpression	info -> private_data == NULL && ! powerpc_init_dialect ( info )		5592086	0		&&			
ANR	5592092	EqualityExpression	info -> private_data == NULL		5592086	0		==			
ANR	5592093	PtrMemberAccess	info -> private_data		5592086	0					
ANR	5592094	Identifier	info		5592086	0					
ANR	5592095	Identifier	private_data		5592086	1					
ANR	5592096	Identifier	NULL		5592086	1					
ANR	5592097	UnaryOperationExpression	! powerpc_init_dialect ( info )		5592086	1					
ANR	5592098	UnaryOperator	!		5592086	0					
ANR	5592099	CallExpression	powerpc_init_dialect ( info )		5592086	1					
ANR	5592100	Callee	powerpc_init_dialect		5592086	0					
ANR	5592101	Identifier	powerpc_init_dialect		5592086	0					
ANR	5592102	ArgumentList	info		5592086	1					
ANR	5592103	Argument	info		5592086	0					
ANR	5592104	Identifier	info		5592086	0					
ANR	5592105	CompoundStatement		2:65:66:66	5592086	1					
ANR	5592106	ReturnStatement	return - 1 ;	154:2:5820:5829	5592086	0	True				
ANR	5592107	UnaryOperationExpression	- 1		5592086	0					
ANR	5592108	UnaryOperator	-		5592086	0					
ANR	5592109	PrimaryExpression	1		5592086	1					
ANR	5592110	ReturnStatement	"return print_insn_powerpc ( memaddr , info , 1 , POWERPC_DIALECT ( info ) ) ;"	156:1:5835:5903	5592086	1	True				
ANR	5592111	CallExpression	"print_insn_powerpc ( memaddr , info , 1 , POWERPC_DIALECT ( info ) )"		5592086	0					
ANR	5592112	Callee	print_insn_powerpc		5592086	0					
ANR	5592113	Identifier	print_insn_powerpc		5592086	0					
ANR	5592114	ArgumentList	memaddr		5592086	1					
ANR	5592115	Argument	memaddr		5592086	0					
ANR	5592116	Identifier	memaddr		5592086	0					
ANR	5592117	Argument	info		5592086	1					
ANR	5592118	Identifier	info		5592086	0					
ANR	5592119	Argument	1		5592086	2					
ANR	5592120	PrimaryExpression	1		5592086	0					
ANR	5592121	Argument	POWERPC_DIALECT ( info )		5592086	3					
ANR	5592122	CallExpression	POWERPC_DIALECT ( info )		5592086	0					
ANR	5592123	Callee	POWERPC_DIALECT		5592086	0					
ANR	5592124	Identifier	POWERPC_DIALECT		5592086	0					
ANR	5592125	ArgumentList	info		5592086	1					
ANR	5592126	Argument	info		5592086	0					
ANR	5592127	Identifier	info		5592086	0					
ANR	5592128	ReturnType	int		5592086	1					
ANR	5592129	Identifier	print_insn_big_powerpc		5592086	2					
ANR	5592130	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		5592086	3					
ANR	5592131	Parameter	bfd_vma memaddr	151:24:5701:5715	5592086	0	True				
ANR	5592132	ParameterType	bfd_vma		5592086	0					
ANR	5592133	Identifier	memaddr		5592086	1					
ANR	5592134	Parameter	struct disassemble_info * info	151:41:5718:5746	5592086	1	True				
ANR	5592135	ParameterType	struct disassemble_info *		5592086	0					
ANR	5592136	Identifier	info		5592086	1					
ANR	5592137	CFGEntryNode	ENTRY		5592086		True				
ANR	5592138	CFGExitNode	EXIT		5592086		True				
ANR	5592139	Symbol	print_insn_powerpc		5592086						
ANR	5592140	Symbol	NULL		5592086						
ANR	5592141	Symbol	info -> private_data		5592086						
ANR	5592142	Symbol	POWERPC_DIALECT		5592086						
ANR	5592143	Symbol	memaddr		5592086						
ANR	5592144	Symbol	* info		5592086						
ANR	5592145	Symbol	powerpc_init_dialect		5592086						
ANR	5592146	Symbol	info		5592086						
ANR	5592147	Function	print_insn_little_powerpc	161:0:5959:6194							
ANR	5592148	FunctionDef	"print_insn_little_powerpc (bfd_vma memaddr , struct disassemble_info * info)"		5592147	0					
ANR	5592149	CompoundStatement		163:0:6038:6194	5592147	0					
ANR	5592150	IfStatement	if ( info -> private_data == NULL && ! powerpc_init_dialect ( info ) )		5592147	0					
ANR	5592151	Condition	info -> private_data == NULL && ! powerpc_init_dialect ( info )	164:5:6045:6102	5592147	0	True				
ANR	5592152	AndExpression	info -> private_data == NULL && ! powerpc_init_dialect ( info )		5592147	0		&&			
ANR	5592153	EqualityExpression	info -> private_data == NULL		5592147	0		==			
ANR	5592154	PtrMemberAccess	info -> private_data		5592147	0					
ANR	5592155	Identifier	info		5592147	0					
ANR	5592156	Identifier	private_data		5592147	1					
ANR	5592157	Identifier	NULL		5592147	1					
ANR	5592158	UnaryOperationExpression	! powerpc_init_dialect ( info )		5592147	1					
ANR	5592159	UnaryOperator	!		5592147	0					
ANR	5592160	CallExpression	powerpc_init_dialect ( info )		5592147	1					
ANR	5592161	Callee	powerpc_init_dialect		5592147	0					
ANR	5592162	Identifier	powerpc_init_dialect		5592147	0					
ANR	5592163	ArgumentList	info		5592147	1					
ANR	5592164	Argument	info		5592147	0					
ANR	5592165	Identifier	info		5592147	0					
ANR	5592166	CompoundStatement		2:65:66:66	5592147	1					
ANR	5592167	ReturnStatement	return - 1 ;	165:2:6109:6118	5592147	0	True				
ANR	5592168	UnaryOperationExpression	- 1		5592147	0					
ANR	5592169	UnaryOperator	-		5592147	0					
ANR	5592170	PrimaryExpression	1		5592147	1					
ANR	5592171	ReturnStatement	"return print_insn_powerpc ( memaddr , info , 0 , POWERPC_DIALECT ( info ) ) ;"	167:1:6124:6192	5592147	1	True				
ANR	5592172	CallExpression	"print_insn_powerpc ( memaddr , info , 0 , POWERPC_DIALECT ( info ) )"		5592147	0					
ANR	5592173	Callee	print_insn_powerpc		5592147	0					
ANR	5592174	Identifier	print_insn_powerpc		5592147	0					
ANR	5592175	ArgumentList	memaddr		5592147	1					
ANR	5592176	Argument	memaddr		5592147	0					
ANR	5592177	Identifier	memaddr		5592147	0					
ANR	5592178	Argument	info		5592147	1					
ANR	5592179	Identifier	info		5592147	0					
ANR	5592180	Argument	0		5592147	2					
ANR	5592181	PrimaryExpression	0		5592147	0					
ANR	5592182	Argument	POWERPC_DIALECT ( info )		5592147	3					
ANR	5592183	CallExpression	POWERPC_DIALECT ( info )		5592147	0					
ANR	5592184	Callee	POWERPC_DIALECT		5592147	0					
ANR	5592185	Identifier	POWERPC_DIALECT		5592147	0					
ANR	5592186	ArgumentList	info		5592147	1					
ANR	5592187	Argument	info		5592147	0					
ANR	5592188	Identifier	info		5592147	0					
ANR	5592189	ReturnType	int		5592147	1					
ANR	5592190	Identifier	print_insn_little_powerpc		5592147	2					
ANR	5592191	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		5592147	3					
ANR	5592192	Parameter	bfd_vma memaddr	162:27:5990:6004	5592147	0	True				
ANR	5592193	ParameterType	bfd_vma		5592147	0					
ANR	5592194	Identifier	memaddr		5592147	1					
ANR	5592195	Parameter	struct disassemble_info * info	162:44:6007:6035	5592147	1	True				
ANR	5592196	ParameterType	struct disassemble_info *		5592147	0					
ANR	5592197	Identifier	info		5592147	1					
ANR	5592198	CFGEntryNode	ENTRY		5592147		True				
ANR	5592199	CFGExitNode	EXIT		5592147		True				
ANR	5592200	Symbol	print_insn_powerpc		5592147						
ANR	5592201	Symbol	NULL		5592147						
ANR	5592202	Symbol	info -> private_data		5592147						
ANR	5592203	Symbol	POWERPC_DIALECT		5592147						
ANR	5592204	Symbol	memaddr		5592147						
ANR	5592205	Symbol	* info		5592147						
ANR	5592206	Symbol	powerpc_init_dialect		5592147						
ANR	5592207	Symbol	info		5592147						
ANR	5592208	Function	print_insn_rs6000	172:0:6242:6381							
ANR	5592209	FunctionDef	"print_insn_rs6000 (bfd_vma memaddr , struct disassemble_info * info)"		5592208	0					
ANR	5592210	CompoundStatement		174:0:6313:6381	5592208	0					
ANR	5592211	ReturnStatement	"return print_insn_powerpc ( memaddr , info , 1 , PPC_OPCODE_POWER ) ;"	175:2:6317:6379	5592208	0	True				
ANR	5592212	CallExpression	"print_insn_powerpc ( memaddr , info , 1 , PPC_OPCODE_POWER )"		5592208	0					
ANR	5592213	Callee	print_insn_powerpc		5592208	0					
ANR	5592214	Identifier	print_insn_powerpc		5592208	0					
ANR	5592215	ArgumentList	memaddr		5592208	1					
ANR	5592216	Argument	memaddr		5592208	0					
ANR	5592217	Identifier	memaddr		5592208	0					
ANR	5592218	Argument	info		5592208	1					
ANR	5592219	Identifier	info		5592208	0					
ANR	5592220	Argument	1		5592208	2					
ANR	5592221	PrimaryExpression	1		5592208	0					
ANR	5592222	Argument	PPC_OPCODE_POWER		5592208	3					
ANR	5592223	Identifier	PPC_OPCODE_POWER		5592208	0					
ANR	5592224	ReturnType	int		5592208	1					
ANR	5592225	Identifier	print_insn_rs6000		5592208	2					
ANR	5592226	ParameterList	"bfd_vma memaddr , struct disassemble_info * info"		5592208	3					
ANR	5592227	Parameter	bfd_vma memaddr	173:19:6265:6279	5592208	0	True				
ANR	5592228	ParameterType	bfd_vma		5592208	0					
ANR	5592229	Identifier	memaddr		5592208	1					
ANR	5592230	Parameter	struct disassemble_info * info	173:36:6282:6310	5592208	1	True				
ANR	5592231	ParameterType	struct disassemble_info *		5592208	0					
ANR	5592232	Identifier	info		5592208	1					
ANR	5592233	CFGEntryNode	ENTRY		5592208		True				
ANR	5592234	CFGExitNode	EXIT		5592208		True				
ANR	5592235	Symbol	print_insn_powerpc		5592208						
ANR	5592236	Symbol	memaddr		5592208						
ANR	5592237	Symbol	PPC_OPCODE_POWER		5592208						
ANR	5592238	Symbol	info		5592208						
ANR	5592239	Function	operand_value_powerpc	180:0:6457:7224							
ANR	5592240	FunctionDef	"operand_value_powerpc (const struct powerpc_operand * operand , unsigned long insn , ppc_cpu_t dialect)"		5592239	0					
ANR	5592241	CompoundStatement		183:0:6579:7224	5592239	0					
ANR	5592242	IdentifierDeclStatement	long value ;	184:2:6583:6593	5592239	0	True				
ANR	5592243	IdentifierDecl	value		5592239	0					
ANR	5592244	IdentifierDeclType	long		5592239	0					
ANR	5592245	Identifier	value		5592239	1					
ANR	5592246	IdentifierDeclStatement	int invalid ;	185:2:6597:6608	5592239	1	True				
ANR	5592247	IdentifierDecl	invalid		5592239	0					
ANR	5592248	IdentifierDeclType	int		5592239	0					
ANR	5592249	Identifier	invalid		5592239	1					
ANR	5592250	IfStatement	if ( operand -> extract )		5592239	2					
ANR	5592251	Condition	operand -> extract	187:6:6665:6680	5592239	0	True				
ANR	5592252	PtrMemberAccess	operand -> extract		5592239	0					
ANR	5592253	Identifier	operand		5592239	0					
ANR	5592254	Identifier	extract		5592239	1					
ANR	5592255	CompoundStatement		5:24:103:103	5592239	1					
ANR	5592256	ExpressionStatement	"value = ( * operand -> extract ) ( insn , dialect , & invalid )"	188:3:6688:6741	5592239	0	True				
ANR	5592257	AssignmentExpression	"value = ( * operand -> extract ) ( insn , dialect , & invalid )"		5592239	0		=			
ANR	5592258	Identifier	value		5592239	0					
ANR	5592259	CallExpression	"( * operand -> extract ) ( insn , dialect , & invalid )"		5592239	1					
ANR	5592260	Callee	* operand -> extract		5592239	0					
ANR	5592261	UnaryOperationExpression	* operand -> extract		5592239	0					
ANR	5592262	UnaryOperator	*		5592239	0					
ANR	5592263	PtrMemberAccess	operand -> extract		5592239	1					
ANR	5592264	Identifier	operand		5592239	0					
ANR	5592265	Identifier	extract		5592239	1					
ANR	5592266	ArgumentList	insn		5592239	1					
ANR	5592267	Argument	insn		5592239	0					
ANR	5592268	Identifier	insn		5592239	0					
ANR	5592269	Argument	dialect		5592239	1					
ANR	5592270	Identifier	dialect		5592239	0					
ANR	5592271	Argument	& invalid		5592239	2					
ANR	5592272	UnaryOperationExpression	& invalid		5592239	0					
ANR	5592273	UnaryOperator	&		5592239	0					
ANR	5592274	Identifier	invalid		5592239	1					
ANR	5592275	ElseStatement	else		5592239	0					
ANR	5592276	CompoundStatement		7:9:172:172	5592239	0					
ANR	5592277	ExpressionStatement	value = ( insn >> operand -> shift ) & operand -> bitm	190:3:6757:6805	5592239	0	True				
ANR	5592278	AssignmentExpression	value = ( insn >> operand -> shift ) & operand -> bitm		5592239	0		=			
ANR	5592279	Identifier	value		5592239	0					
ANR	5592280	BitAndExpression	( insn >> operand -> shift ) & operand -> bitm		5592239	1		&			
ANR	5592281	ShiftExpression	insn >> operand -> shift		5592239	0		>>			
ANR	5592282	Identifier	insn		5592239	0					
ANR	5592283	PtrMemberAccess	operand -> shift		5592239	1					
ANR	5592284	Identifier	operand		5592239	0					
ANR	5592285	Identifier	shift		5592239	1					
ANR	5592286	PtrMemberAccess	operand -> bitm		5592239	1					
ANR	5592287	Identifier	operand		5592239	0					
ANR	5592288	Identifier	bitm		5592239	1					
ANR	5592289	IfStatement	if ( ( operand -> flags & PPC_OPERAND_SIGNED ) != 0 )		5592239	1					
ANR	5592290	Condition	( operand -> flags & PPC_OPERAND_SIGNED ) != 0	191:7:6814:6855	5592239	0	True				
ANR	5592291	EqualityExpression	( operand -> flags & PPC_OPERAND_SIGNED ) != 0		5592239	0		!=			
ANR	5592292	BitAndExpression	operand -> flags & PPC_OPERAND_SIGNED		5592239	0		&			
ANR	5592293	PtrMemberAccess	operand -> flags		5592239	0					
ANR	5592294	Identifier	operand		5592239	0					
ANR	5592295	Identifier	flags		5592239	1					
ANR	5592296	Identifier	PPC_OPERAND_SIGNED		5592239	1					
ANR	5592297	PrimaryExpression	0		5592239	1					
ANR	5592298	CompoundStatement		12:4:403:436	5592239	1					
ANR	5592299	IdentifierDeclStatement	unsigned long top = operand -> bitm ;	194:4:6983:7016	5592239	0	True				
ANR	5592300	IdentifierDecl	top = operand -> bitm		5592239	0					
ANR	5592301	IdentifierDeclType	unsigned long		5592239	0					
ANR	5592302	Identifier	top		5592239	1					
ANR	5592303	AssignmentExpression	top = operand -> bitm		5592239	2		=			
ANR	5592304	Identifier	top		5592239	0					
ANR	5592305	PtrMemberAccess	operand -> bitm		5592239	1					
ANR	5592306	Identifier	operand		5592239	0					
ANR	5592307	Identifier	bitm		5592239	1					
ANR	5592308	ExpressionStatement	top |= ( top & - top ) - 1	197:4:7114:7137	5592239	1	True				
ANR	5592309	AssignmentExpression	top |= ( top & - top ) - 1		5592239	0		|=			
ANR	5592310	Identifier	top		5592239	0					
ANR	5592311	AdditiveExpression	( top & - top ) - 1		5592239	1		-			
ANR	5592312	BitAndExpression	top & - top		5592239	0		&			
ANR	5592313	Identifier	top		5592239	0					
ANR	5592314	UnaryOperationExpression	- top		5592239	1					
ANR	5592315	UnaryOperator	-		5592239	0					
ANR	5592316	Identifier	top		5592239	1					
ANR	5592317	PrimaryExpression	1		5592239	1					
ANR	5592318	ExpressionStatement	top &= ~ ( top >> 1 )	198:4:7143:7161	5592239	2	True				
ANR	5592319	AssignmentExpression	top &= ~ ( top >> 1 )		5592239	0		&=			
ANR	5592320	Identifier	top		5592239	0					
ANR	5592321	UnaryOperationExpression	~ ( top >> 1 )		5592239	1					
ANR	5592322	UnaryOperator	~		5592239	0					
ANR	5592323	ShiftExpression	top >> 1		5592239	1		>>			
ANR	5592324	Identifier	top		5592239	0					
ANR	5592325	PrimaryExpression	1		5592239	1					
ANR	5592326	ExpressionStatement	value = ( value ^ top ) - top	199:4:7167:7194	5592239	3	True				
ANR	5592327	AssignmentExpression	value = ( value ^ top ) - top		5592239	0		=			
ANR	5592328	Identifier	value		5592239	0					
ANR	5592329	AdditiveExpression	( value ^ top ) - top		5592239	1		-			
ANR	5592330	ExclusiveOrExpression	value ^ top		5592239	0		^			
ANR	5592331	Identifier	value		5592239	0					
ANR	5592332	Identifier	top		5592239	1					
ANR	5592333	Identifier	top		5592239	1					
ANR	5592334	ReturnStatement	return value ;	203:2:7210:7222	5592239	3	True				
ANR	5592335	Identifier	value		5592239	0					
ANR	5592336	ReturnType	static long		5592239	1					
ANR	5592337	Identifier	operand_value_powerpc		5592239	2					
ANR	5592338	ParameterList	"const struct powerpc_operand * operand , unsigned long insn , ppc_cpu_t dialect"		5592239	3					
ANR	5592339	Parameter	const struct powerpc_operand * operand	181:23:6492:6528	5592239	0	True				
ANR	5592340	ParameterType	const struct powerpc_operand *		5592239	0					
ANR	5592341	Identifier	operand		5592239	1					
ANR	5592342	Parameter	unsigned long insn	182:9:6540:6557	5592239	1	True				
ANR	5592343	ParameterType	unsigned long		5592239	0					
ANR	5592344	Identifier	insn		5592239	1					
ANR	5592345	Parameter	ppc_cpu_t dialect	182:29:6560:6576	5592239	2	True				
ANR	5592346	ParameterType	ppc_cpu_t		5592239	0					
ANR	5592347	Identifier	dialect		5592239	1					
ANR	5592348	CFGEntryNode	ENTRY		5592239		True				
ANR	5592349	CFGExitNode	EXIT		5592239		True				
ANR	5592350	Symbol	dialect		5592239						
ANR	5592351	Symbol	& invalid		5592239						
ANR	5592352	Symbol	operand -> flags		5592239						
ANR	5592353	Symbol	* operand		5592239						
ANR	5592354	Symbol	operand -> shift		5592239						
ANR	5592355	Symbol	* operand -> extract		5592239						
ANR	5592356	Symbol	operand -> extract		5592239						
ANR	5592357	Symbol	insn		5592239						
ANR	5592358	Symbol	top		5592239						
ANR	5592359	Symbol	* * operand		5592239						
ANR	5592360	Symbol	invalid		5592239						
ANR	5592361	Symbol	value		5592239						
ANR	5592362	Symbol	operand -> bitm		5592239						
ANR	5592363	Symbol	PPC_OPERAND_SIGNED		5592239						
ANR	5592364	Symbol	operand		5592239						
ANR	5592365	Function	skip_optional_operands	208:0:7296:7736							
ANR	5592366	FunctionDef	"skip_optional_operands (const unsigned char * opindex , unsigned long insn , ppc_cpu_t dialect)"		5592365	0					
ANR	5592367	CompoundStatement		211:0:7403:7736	5592365	0					
ANR	5592368	IdentifierDeclStatement	const struct powerpc_operand * operand ;	212:2:7407:7444	5592365	0	True				
ANR	5592369	IdentifierDecl	* operand		5592365	0					
ANR	5592370	IdentifierDeclType	const struct powerpc_operand *		5592365	0					
ANR	5592371	Identifier	operand		5592365	1					
ANR	5592372	ForStatement	for ( ; * opindex != 0 ; opindex ++ )		5592365	1					
ANR	5592373	Condition	* opindex != 0	214:9:7456:7468	5592365	0	True				
ANR	5592374	EqualityExpression	* opindex != 0		5592365	0		!=			
ANR	5592375	UnaryOperationExpression	* opindex		5592365	0					
ANR	5592376	UnaryOperator	*		5592365	0					
ANR	5592377	Identifier	opindex		5592365	1					
ANR	5592378	PrimaryExpression	0		5592365	1					
ANR	5592379	PostIncDecOperationExpression	opindex ++	214:24:7471:7479	5592365	1	True				
ANR	5592380	Identifier	opindex		5592365	0					
ANR	5592381	IncDec	++		5592365	1					
ANR	5592382	CompoundStatement		5:4:82:82	5592365	2					
ANR	5592383	ExpressionStatement	operand = & powerpc_operands [ * opindex ]	216:6:7494:7531	5592365	0	True				
ANR	5592384	AssignmentExpression	operand = & powerpc_operands [ * opindex ]		5592365	0		=			
ANR	5592385	Identifier	operand		5592365	0					
ANR	5592386	UnaryOperationExpression	& powerpc_operands [ * opindex ]		5592365	1					
ANR	5592387	UnaryOperator	&		5592365	0					
ANR	5592388	ArrayIndexing	powerpc_operands [ * opindex ]		5592365	1					
ANR	5592389	Identifier	powerpc_operands		5592365	0					
ANR	5592390	UnaryOperationExpression	* opindex		5592365	1					
ANR	5592391	UnaryOperator	*		5592365	0					
ANR	5592392	Identifier	opindex		5592365	1					
ANR	5592393	IfStatement	"if ( ( operand -> flags & PPC_OPERAND_NEXT ) != 0 || ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0 ) )"		5592365	1					
ANR	5592394	Condition	"( operand -> flags & PPC_OPERAND_NEXT ) != 0 || ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0 )"	217:10:7543:7687	5592365	0	True				
ANR	5592395	OrExpression	"( operand -> flags & PPC_OPERAND_NEXT ) != 0 || ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0 )"		5592365	0		||			
ANR	5592396	EqualityExpression	( operand -> flags & PPC_OPERAND_NEXT ) != 0		5592365	0		!=			
ANR	5592397	BitAndExpression	operand -> flags & PPC_OPERAND_NEXT		5592365	0		&			
ANR	5592398	PtrMemberAccess	operand -> flags		5592365	0					
ANR	5592399	Identifier	operand		5592365	0					
ANR	5592400	Identifier	flags		5592365	1					
ANR	5592401	Identifier	PPC_OPERAND_NEXT		5592365	1					
ANR	5592402	PrimaryExpression	0		5592365	1					
ANR	5592403	AndExpression	"( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 && operand_value_powerpc ( operand , insn , dialect ) != 0"		5592365	1		&&			
ANR	5592404	EqualityExpression	( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0		5592365	0		!=			
ANR	5592405	BitAndExpression	operand -> flags & PPC_OPERAND_OPTIONAL		5592365	0		&			
ANR	5592406	PtrMemberAccess	operand -> flags		5592365	0					
ANR	5592407	Identifier	operand		5592365	0					
ANR	5592408	Identifier	flags		5592365	1					
ANR	5592409	Identifier	PPC_OPERAND_OPTIONAL		5592365	1					
ANR	5592410	PrimaryExpression	0		5592365	1					
ANR	5592411	EqualityExpression	"operand_value_powerpc ( operand , insn , dialect ) != 0"		5592365	1		!=			
ANR	5592412	CallExpression	"operand_value_powerpc ( operand , insn , dialect )"		5592365	0					
ANR	5592413	Callee	operand_value_powerpc		5592365	0					
ANR	5592414	Identifier	operand_value_powerpc		5592365	0					
ANR	5592415	ArgumentList	operand		5592365	1					
ANR	5592416	Argument	operand		5592365	0					
ANR	5592417	Identifier	operand		5592365	0					
ANR	5592418	Argument	insn		5592365	1					
ANR	5592419	Identifier	insn		5592365	0					
ANR	5592420	Argument	dialect		5592365	2					
ANR	5592421	Identifier	dialect		5592365	0					
ANR	5592422	PrimaryExpression	0		5592365	1					
ANR	5592423	CompoundStatement		7:157:286:286	5592365	1					
ANR	5592424	ReturnStatement	return 0 ;	218:7:7699:7707	5592365	0	True				
ANR	5592425	PrimaryExpression	0		5592365	0					
ANR	5592426	ReturnStatement	return 1 ;	222:2:7726:7734	5592365	2	True				
ANR	5592427	PrimaryExpression	1		5592365	0					
ANR	5592428	ReturnType	static int		5592365	1					
ANR	5592429	Identifier	skip_optional_operands		5592365	2					
ANR	5592430	ParameterList	"const unsigned char * opindex , unsigned long insn , ppc_cpu_t dialect"		5592365	3					
ANR	5592431	Parameter	const unsigned char * opindex	209:24:7331:7358	5592365	0	True				
ANR	5592432	ParameterType	const unsigned char *		5592365	0					
ANR	5592433	Identifier	opindex		5592365	1					
ANR	5592434	Parameter	unsigned long insn	210:3:7364:7381	5592365	1	True				
ANR	5592435	ParameterType	unsigned long		5592365	0					
ANR	5592436	Identifier	insn		5592365	1					
ANR	5592437	Parameter	ppc_cpu_t dialect	210:23:7384:7400	5592365	2	True				
ANR	5592438	ParameterType	ppc_cpu_t		5592365	0					
ANR	5592439	Identifier	dialect		5592365	1					
ANR	5592440	CFGEntryNode	ENTRY		5592365		True				
ANR	5592441	CFGExitNode	EXIT		5592365		True				
ANR	5592442	Symbol	insn		5592365						
ANR	5592443	Symbol	dialect		5592365						
ANR	5592444	Symbol	operand -> flags		5592365						
ANR	5592445	Symbol	* operand		5592365						
ANR	5592446	Symbol	* opindex		5592365						
ANR	5592447	Symbol	PPC_OPERAND_NEXT		5592365						
ANR	5592448	Symbol	operand_value_powerpc		5592365						
ANR	5592449	Symbol	opindex		5592365						
ANR	5592450	Symbol	PPC_OPERAND_OPTIONAL		5592365						
ANR	5592451	Symbol	operand		5592365						
ANR	5592452	Symbol	powerpc_operands		5592365						
ANR	5592453	Function	print_insn_powerpc	227:0:7785:12896							
ANR	5592454	FunctionDef	"print_insn_powerpc (bfd_vma memaddr , struct disassemble_info * info , int bigendian , ppc_cpu_t dialect)"		5592453	0					
ANR	5592455	CompoundStatement		232:0:7916:12896	5592453	0					
ANR	5592456	IdentifierDeclStatement	bfd_byte buffer [ 4 ] ;	233:2:7920:7938	5592453	0	True				
ANR	5592457	IdentifierDecl	buffer [ 4 ]		5592453	0					
ANR	5592458	IdentifierDeclType	bfd_byte [ 4 ]		5592453	0					
ANR	5592459	Identifier	buffer		5592453	1					
ANR	5592460	PrimaryExpression	4		5592453	2					
ANR	5592461	IdentifierDeclStatement	int status ;	234:2:7942:7952	5592453	1	True				
ANR	5592462	IdentifierDecl	status		5592453	0					
ANR	5592463	IdentifierDeclType	int		5592453	0					
ANR	5592464	Identifier	status		5592453	1					
ANR	5592465	IdentifierDeclStatement	unsigned long insn ;	235:2:7956:7974	5592453	2	True				
ANR	5592466	IdentifierDecl	insn		5592453	0					
ANR	5592467	IdentifierDeclType	unsigned long		5592453	0					
ANR	5592468	Identifier	insn		5592453	1					
ANR	5592469	IdentifierDeclStatement	const struct powerpc_opcode * opcode ;	236:2:7978:8013	5592453	3	True				
ANR	5592470	IdentifierDecl	* opcode		5592453	0					
ANR	5592471	IdentifierDeclType	const struct powerpc_opcode *		5592453	0					
ANR	5592472	Identifier	opcode		5592453	1					
ANR	5592473	IdentifierDeclStatement	const struct powerpc_opcode * opcode_end ;	237:2:8017:8056	5592453	4	True				
ANR	5592474	IdentifierDecl	* opcode_end		5592453	0					
ANR	5592475	IdentifierDeclType	const struct powerpc_opcode *		5592453	0					
ANR	5592476	Identifier	opcode_end		5592453	1					
ANR	5592477	IdentifierDeclStatement	unsigned long op ;	238:2:8060:8076	5592453	5	True				
ANR	5592478	IdentifierDecl	op		5592453	0					
ANR	5592479	IdentifierDeclType	unsigned long		5592453	0					
ANR	5592480	Identifier	op		5592453	1					
ANR	5592481	ExpressionStatement	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 4 , info )"	240:2:8081:8142	5592453	6	True				
ANR	5592482	AssignmentExpression	"status = ( * info -> read_memory_func ) ( memaddr , buffer , 4 , info )"		5592453	0		=			
ANR	5592483	Identifier	status		5592453	0					
ANR	5592484	CallExpression	"( * info -> read_memory_func ) ( memaddr , buffer , 4 , info )"		5592453	1					
ANR	5592485	Callee	* info -> read_memory_func		5592453	0					
ANR	5592486	UnaryOperationExpression	* info -> read_memory_func		5592453	0					
ANR	5592487	UnaryOperator	*		5592453	0					
ANR	5592488	PtrMemberAccess	info -> read_memory_func		5592453	1					
ANR	5592489	Identifier	info		5592453	0					
ANR	5592490	Identifier	read_memory_func		5592453	1					
ANR	5592491	ArgumentList	memaddr		5592453	1					
ANR	5592492	Argument	memaddr		5592453	0					
ANR	5592493	Identifier	memaddr		5592453	0					
ANR	5592494	Argument	buffer		5592453	1					
ANR	5592495	Identifier	buffer		5592453	0					
ANR	5592496	Argument	4		5592453	2					
ANR	5592497	PrimaryExpression	4		5592453	0					
ANR	5592498	Argument	info		5592453	3					
ANR	5592499	Identifier	info		5592453	0					
ANR	5592500	IfStatement	if ( status != 0 )		5592453	7					
ANR	5592501	Condition	status != 0	241:6:8150:8160	5592453	0	True				
ANR	5592502	EqualityExpression	status != 0		5592453	0		!=			
ANR	5592503	Identifier	status		5592453	0					
ANR	5592504	PrimaryExpression	0		5592453	1					
ANR	5592505	CompoundStatement		11:4:250:250	5592453	1					
ANR	5592506	ExpressionStatement	"( * info -> memory_error_func ) ( status , memaddr , info )"	243:6:8175:8225	5592453	0	True				
ANR	5592507	CallExpression	"( * info -> memory_error_func ) ( status , memaddr , info )"		5592453	0					
ANR	5592508	Callee	* info -> memory_error_func		5592453	0					
ANR	5592509	UnaryOperationExpression	* info -> memory_error_func		5592453	0					
ANR	5592510	UnaryOperator	*		5592453	0					
ANR	5592511	PtrMemberAccess	info -> memory_error_func		5592453	1					
ANR	5592512	Identifier	info		5592453	0					
ANR	5592513	Identifier	memory_error_func		5592453	1					
ANR	5592514	ArgumentList	status		5592453	1					
ANR	5592515	Argument	status		5592453	0					
ANR	5592516	Identifier	status		5592453	0					
ANR	5592517	Argument	memaddr		5592453	1					
ANR	5592518	Identifier	memaddr		5592453	0					
ANR	5592519	Argument	info		5592453	2					
ANR	5592520	Identifier	info		5592453	0					
ANR	5592521	ReturnStatement	return - 1 ;	244:6:8233:8242	5592453	1	True				
ANR	5592522	UnaryOperationExpression	- 1		5592453	0					
ANR	5592523	UnaryOperator	-		5592453	0					
ANR	5592524	PrimaryExpression	1		5592453	1					
ANR	5592525	IfStatement	if ( bigendian )		5592453	8					
ANR	5592526	Condition	bigendian	247:8:8259:8267	5592453	0	True				
ANR	5592527	Identifier	bigendian		5592453	0					
ANR	5592528	CompoundStatement		16:19:353:353	5592453	1					
ANR	5592529	ExpressionStatement	insn = __bfd_getb32 ( buffer )	248:5:8277:8305	5592453	0	True				
ANR	5592530	AssignmentExpression	insn = __bfd_getb32 ( buffer )		5592453	0		=			
ANR	5592531	Identifier	insn		5592453	0					
ANR	5592532	CallExpression	__bfd_getb32 ( buffer )		5592453	1					
ANR	5592533	Callee	__bfd_getb32		5592453	0					
ANR	5592534	Identifier	__bfd_getb32		5592453	0					
ANR	5592535	ArgumentList	buffer		5592453	1					
ANR	5592536	Argument	buffer		5592453	0					
ANR	5592537	Identifier	buffer		5592453	0					
ANR	5592538	ElseStatement	else		5592453	0					
ANR	5592539	CompoundStatement		18:11:401:401	5592453	0					
ANR	5592540	ExpressionStatement	insn = __bfd_getl32 ( buffer )	250:5:8325:8353	5592453	0	True				
ANR	5592541	AssignmentExpression	insn = __bfd_getl32 ( buffer )		5592453	0		=			
ANR	5592542	Identifier	insn		5592453	0					
ANR	5592543	CallExpression	__bfd_getl32 ( buffer )		5592453	1					
ANR	5592544	Callee	__bfd_getl32		5592453	0					
ANR	5592545	Identifier	__bfd_getl32		5592453	0					
ANR	5592546	ArgumentList	buffer		5592453	1					
ANR	5592547	Argument	buffer		5592453	0					
ANR	5592548	Identifier	buffer		5592453	0					
ANR	5592549	ExpressionStatement	op = PPC_OP ( insn )	254:4:8418:8436	5592453	9	True				
ANR	5592550	AssignmentExpression	op = PPC_OP ( insn )		5592453	0		=			
ANR	5592551	Identifier	op		5592453	0					
ANR	5592552	CallExpression	PPC_OP ( insn )		5592453	1					
ANR	5592553	Callee	PPC_OP		5592453	0					
ANR	5592554	Identifier	PPC_OP		5592453	0					
ANR	5592555	ArgumentList	insn		5592453	1					
ANR	5592556	Argument	insn		5592453	0					
ANR	5592557	Identifier	insn		5592453	0					
ANR	5592558	ExpressionStatement	opcode_end = powerpc_opcodes + powerpc_num_opcodes	258:4:8577:8627	5592453	10	True				
ANR	5592559	AssignmentExpression	opcode_end = powerpc_opcodes + powerpc_num_opcodes		5592453	0		=			
ANR	5592560	Identifier	opcode_end		5592453	0					
ANR	5592561	AdditiveExpression	powerpc_opcodes + powerpc_num_opcodes		5592453	1		+			
ANR	5592562	Identifier	powerpc_opcodes		5592453	0					
ANR	5592563	Identifier	powerpc_num_opcodes		5592453	1					
ANR	5592564	Label	again :	259:1:8630:8635	5592453	11	True				
ANR	5592565	Identifier	again		5592453	0					
ANR	5592566	ForStatement	for ( opcode = powerpc_opcodes ; opcode < opcode_end ; opcode ++ )		5592453	12					
ANR	5592567	ForInit	opcode = powerpc_opcodes ;	260:7:8644:8668	5592453	0	True				
ANR	5592568	AssignmentExpression	opcode = powerpc_opcodes		5592453	0		=			
ANR	5592569	Identifier	opcode		5592453	0					
ANR	5592570	Identifier	powerpc_opcodes		5592453	1					
ANR	5592571	Condition	opcode < opcode_end	260:33:8670:8688	5592453	1	True				
ANR	5592572	RelationalExpression	opcode < opcode_end		5592453	0		<			
ANR	5592573	Identifier	opcode		5592453	0					
ANR	5592574	Identifier	opcode_end		5592453	1					
ANR	5592575	PostIncDecOperationExpression	opcode ++	260:54:8691:8698	5592453	2	True				
ANR	5592576	Identifier	opcode		5592453	0					
ANR	5592577	IncDec	++		5592453	1					
ANR	5592578	CompoundStatement		37:6:970:987	5592453	3					
ANR	5592579	IdentifierDeclStatement	unsigned long table_op ;	262:6:8713:8735	5592453	0	True				
ANR	5592580	IdentifierDecl	table_op		5592453	0					
ANR	5592581	IdentifierDeclType	unsigned long		5592453	0					
ANR	5592582	Identifier	table_op		5592453	1					
ANR	5592583	IdentifierDeclStatement	const unsigned char * opindex ;	263:6:8743:8771	5592453	1	True				
ANR	5592584	IdentifierDecl	* opindex		5592453	0					
ANR	5592585	IdentifierDeclType	const unsigned char *		5592453	0					
ANR	5592586	Identifier	opindex		5592453	1					
ANR	5592587	IdentifierDeclStatement	const struct powerpc_operand * operand ;	264:6:8779:8816	5592453	2	True				
ANR	5592588	IdentifierDecl	* operand		5592453	0					
ANR	5592589	IdentifierDeclType	const struct powerpc_operand *		5592453	0					
ANR	5592590	Identifier	operand		5592453	1					
ANR	5592591	IdentifierDeclStatement	int invalid ;	265:6:8824:8835	5592453	3	True				
ANR	5592592	IdentifierDecl	invalid		5592453	0					
ANR	5592593	IdentifierDeclType	int		5592453	0					
ANR	5592594	Identifier	invalid		5592453	1					
ANR	5592595	IdentifierDeclStatement	int need_comma ;	266:6:8843:8857	5592453	4	True				
ANR	5592596	IdentifierDecl	need_comma		5592453	0					
ANR	5592597	IdentifierDeclType	int		5592453	0					
ANR	5592598	Identifier	need_comma		5592453	1					
ANR	5592599	IdentifierDeclStatement	int need_paren ;	267:6:8865:8879	5592453	5	True				
ANR	5592600	IdentifierDecl	need_paren		5592453	0					
ANR	5592601	IdentifierDeclType	int		5592453	0					
ANR	5592602	Identifier	need_paren		5592453	1					
ANR	5592603	IdentifierDeclStatement	int skip_optional ;	268:6:8887:8904	5592453	6	True				
ANR	5592604	IdentifierDecl	skip_optional		5592453	0					
ANR	5592605	IdentifierDeclType	int		5592453	0					
ANR	5592606	Identifier	skip_optional		5592453	1					
ANR	5592607	ExpressionStatement	table_op = PPC_OP ( opcode -> opcode )	270:6:8913:8947	5592453	7	True				
ANR	5592608	AssignmentExpression	table_op = PPC_OP ( opcode -> opcode )		5592453	0		=			
ANR	5592609	Identifier	table_op		5592453	0					
ANR	5592610	CallExpression	PPC_OP ( opcode -> opcode )		5592453	1					
ANR	5592611	Callee	PPC_OP		5592453	0					
ANR	5592612	Identifier	PPC_OP		5592453	0					
ANR	5592613	ArgumentList	opcode -> opcode		5592453	1					
ANR	5592614	Argument	opcode -> opcode		5592453	0					
ANR	5592615	PtrMemberAccess	opcode -> opcode		5592453	0					
ANR	5592616	Identifier	opcode		5592453	0					
ANR	5592617	Identifier	opcode		5592453	1					
ANR	5592618	IfStatement	if ( op < table_op )		5592453	8					
ANR	5592619	Condition	op < table_op	271:10:8959:8971	5592453	0	True				
ANR	5592620	RelationalExpression	op < table_op		5592453	0		<			
ANR	5592621	Identifier	op		5592453	0					
ANR	5592622	Identifier	table_op		5592453	1					
ANR	5592623	CompoundStatement		40:25:1057:1057	5592453	1					
ANR	5592624	BreakStatement	break ;	272:7:8983:8988	5592453	0	True				
ANR	5592625	IfStatement	if ( op > table_op )		5592453	9					
ANR	5592626	Condition	op > table_op	274:10:9008:9020	5592453	0	True				
ANR	5592627	RelationalExpression	op > table_op		5592453	0		>			
ANR	5592628	Identifier	op		5592453	0					
ANR	5592629	Identifier	table_op		5592453	1					
ANR	5592630	CompoundStatement		43:25:1106:1106	5592453	1					
ANR	5592631	ContinueStatement	continue ;	275:7:9032:9040	5592453	0	True				
ANR	5592632	IfStatement	if ( ( insn & opcode -> mask ) != opcode -> opcode || ( opcode -> flags & dialect ) == 0 )		5592453	10					
ANR	5592633	Condition	( insn & opcode -> mask ) != opcode -> opcode || ( opcode -> flags & dialect ) == 0	278:10:9061:9133	5592453	0	True				
ANR	5592634	OrExpression	( insn & opcode -> mask ) != opcode -> opcode || ( opcode -> flags & dialect ) == 0		5592453	0		||			
ANR	5592635	EqualityExpression	( insn & opcode -> mask ) != opcode -> opcode		5592453	0		!=			
ANR	5592636	BitAndExpression	insn & opcode -> mask		5592453	0		&			
ANR	5592637	Identifier	insn		5592453	0					
ANR	5592638	PtrMemberAccess	opcode -> mask		5592453	1					
ANR	5592639	Identifier	opcode		5592453	0					
ANR	5592640	Identifier	mask		5592453	1					
ANR	5592641	PtrMemberAccess	opcode -> opcode		5592453	1					
ANR	5592642	Identifier	opcode		5592453	0					
ANR	5592643	Identifier	opcode		5592453	1					
ANR	5592644	EqualityExpression	( opcode -> flags & dialect ) == 0		5592453	1		==			
ANR	5592645	BitAndExpression	opcode -> flags & dialect		5592453	0		&			
ANR	5592646	PtrMemberAccess	opcode -> flags		5592453	0					
ANR	5592647	Identifier	opcode		5592453	0					
ANR	5592648	Identifier	flags		5592453	1					
ANR	5592649	Identifier	dialect		5592453	1					
ANR	5592650	PrimaryExpression	0		5592453	1					
ANR	5592651	CompoundStatement		47:85:1219:1219	5592453	1					
ANR	5592652	ContinueStatement	continue ;	279:7:9145:9153	5592453	0	True				
ANR	5592653	ExpressionStatement	invalid = 0	285:6:9328:9339	5592453	11	True				
ANR	5592654	AssignmentExpression	invalid = 0		5592453	0		=			
ANR	5592655	Identifier	invalid		5592453	0					
ANR	5592656	PrimaryExpression	0		5592453	1					
ANR	5592657	ForStatement	for ( opindex = opcode -> operands ; * opindex != 0 ; opindex ++ )		5592453	12					
ANR	5592658	ForInit	opindex = opcode -> operands ;	286:11:9352:9378	5592453	0	True				
ANR	5592659	AssignmentExpression	opindex = opcode -> operands		5592453	0		=			
ANR	5592660	Identifier	opindex		5592453	0					
ANR	5592661	PtrMemberAccess	opcode -> operands		5592453	1					
ANR	5592662	Identifier	opcode		5592453	0					
ANR	5592663	Identifier	operands		5592453	1					
ANR	5592664	Condition	* opindex != 0	286:39:9380:9392	5592453	1	True				
ANR	5592665	EqualityExpression	* opindex != 0		5592453	0		!=			
ANR	5592666	UnaryOperationExpression	* opindex		5592453	0					
ANR	5592667	UnaryOperator	*		5592453	0					
ANR	5592668	Identifier	opindex		5592453	1					
ANR	5592669	PrimaryExpression	0		5592453	1					
ANR	5592670	PostIncDecOperationExpression	opindex ++	286:54:9395:9403	5592453	2	True				
ANR	5592671	Identifier	opindex		5592453	0					
ANR	5592672	IncDec	++		5592453	1					
ANR	5592673	CompoundStatement		56:1:1490:1490	5592453	3					
ANR	5592674	ExpressionStatement	operand = powerpc_operands + * opindex	288:3:9412:9449	5592453	0	True				
ANR	5592675	AssignmentExpression	operand = powerpc_operands + * opindex		5592453	0		=			
ANR	5592676	Identifier	operand		5592453	0					
ANR	5592677	AdditiveExpression	powerpc_operands + * opindex		5592453	1		+			
ANR	5592678	Identifier	powerpc_operands		5592453	0					
ANR	5592679	UnaryOperationExpression	* opindex		5592453	1					
ANR	5592680	UnaryOperator	*		5592453	0					
ANR	5592681	Identifier	opindex		5592453	1					
ANR	5592682	IfStatement	if ( operand -> extract )		5592453	1					
ANR	5592683	Condition	operand -> extract	289:7:9458:9473	5592453	0	True				
ANR	5592684	PtrMemberAccess	operand -> extract		5592453	0					
ANR	5592685	Identifier	operand		5592453	0					
ANR	5592686	Identifier	extract		5592453	1					
ANR	5592687	CompoundStatement		58:25:1559:1559	5592453	1					
ANR	5592688	ExpressionStatement	"( * operand -> extract ) ( insn , dialect , & invalid )"	290:4:9482:9527	5592453	0	True				
ANR	5592689	CallExpression	"( * operand -> extract ) ( insn , dialect , & invalid )"		5592453	0					
ANR	5592690	Callee	* operand -> extract		5592453	0					
ANR	5592691	UnaryOperationExpression	* operand -> extract		5592453	0					
ANR	5592692	UnaryOperator	*		5592453	0					
ANR	5592693	PtrMemberAccess	operand -> extract		5592453	1					
ANR	5592694	Identifier	operand		5592453	0					
ANR	5592695	Identifier	extract		5592453	1					
ANR	5592696	ArgumentList	insn		5592453	1					
ANR	5592697	Argument	insn		5592453	0					
ANR	5592698	Identifier	insn		5592453	0					
ANR	5592699	Argument	dialect		5592453	1					
ANR	5592700	Identifier	dialect		5592453	0					
ANR	5592701	Argument	& invalid		5592453	2					
ANR	5592702	UnaryOperationExpression	& invalid		5592453	0					
ANR	5592703	UnaryOperator	&		5592453	0					
ANR	5592704	Identifier	invalid		5592453	1					
ANR	5592705	IfStatement	if ( invalid )		5592453	13					
ANR	5592706	Condition	invalid	293:5:9542:9548	5592453	0	True				
ANR	5592707	Identifier	invalid		5592453	0					
ANR	5592708	CompoundStatement		62:14:1634:1634	5592453	1					
ANR	5592709	ContinueStatement	continue ;	294:2:9555:9563	5592453	0	True				
ANR	5592710	IfStatement	if ( opcode -> operands [ 0 ] != 0 )		5592453	14					
ANR	5592711	Condition	opcode -> operands [ 0 ] != 0	298:5:9608:9631	5592453	0	True				
ANR	5592712	EqualityExpression	opcode -> operands [ 0 ] != 0		5592453	0		!=			
ANR	5592713	ArrayIndexing	opcode -> operands [ 0 ]		5592453	0					
ANR	5592714	PtrMemberAccess	opcode -> operands		5592453	0					
ANR	5592715	Identifier	opcode		5592453	0					
ANR	5592716	Identifier	operands		5592453	1					
ANR	5592717	PrimaryExpression	0		5592453	1					
ANR	5592718	PrimaryExpression	0		5592453	1					
ANR	5592719	CompoundStatement		67:31:1717:1717	5592453	1					
ANR	5592720	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s "" , opcode -> name )"	299:2:9638:9695	5592453	0	True				
ANR	5592721	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s "" , opcode -> name )"		5592453	0					
ANR	5592722	Callee	* info -> fprintf_func		5592453	0					
ANR	5592723	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592724	UnaryOperator	*		5592453	0					
ANR	5592725	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592726	Identifier	info		5592453	0					
ANR	5592727	Identifier	fprintf_func		5592453	1					
ANR	5592728	ArgumentList	info -> stream		5592453	1					
ANR	5592729	Argument	info -> stream		5592453	0					
ANR	5592730	PtrMemberAccess	info -> stream		5592453	0					
ANR	5592731	Identifier	info		5592453	0					
ANR	5592732	Identifier	stream		5592453	1					
ANR	5592733	Argument	"""%s """		5592453	1					
ANR	5592734	PrimaryExpression	"""%s """		5592453	0					
ANR	5592735	Argument	opcode -> name		5592453	2					
ANR	5592736	PtrMemberAccess	opcode -> name		5592453	0					
ANR	5592737	Identifier	opcode		5592453	0					
ANR	5592738	Identifier	name		5592453	1					
ANR	5592739	ElseStatement	else		5592453	0					
ANR	5592740	CompoundStatement		69:8:1788:1788	5592453	0					
ANR	5592741	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcode -> name )"	301:2:9709:9765	5592453	0	True				
ANR	5592742	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , opcode -> name )"		5592453	0					
ANR	5592743	Callee	* info -> fprintf_func		5592453	0					
ANR	5592744	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592745	UnaryOperator	*		5592453	0					
ANR	5592746	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592747	Identifier	info		5592453	0					
ANR	5592748	Identifier	fprintf_func		5592453	1					
ANR	5592749	ArgumentList	info -> stream		5592453	1					
ANR	5592750	Argument	info -> stream		5592453	0					
ANR	5592751	PtrMemberAccess	info -> stream		5592453	0					
ANR	5592752	Identifier	info		5592453	0					
ANR	5592753	Identifier	stream		5592453	1					
ANR	5592754	Argument	"""%s"""		5592453	1					
ANR	5592755	PrimaryExpression	"""%s"""		5592453	0					
ANR	5592756	Argument	opcode -> name		5592453	2					
ANR	5592757	PtrMemberAccess	opcode -> name		5592453	0					
ANR	5592758	Identifier	opcode		5592453	0					
ANR	5592759	Identifier	name		5592453	1					
ANR	5592760	ExpressionStatement	need_comma = 0	305:1:9816:9830	5592453	15	True				
ANR	5592761	AssignmentExpression	need_comma = 0		5592453	0		=			
ANR	5592762	Identifier	need_comma		5592453	0					
ANR	5592763	PrimaryExpression	0		5592453	1					
ANR	5592764	ExpressionStatement	need_paren = 0	306:1:9833:9847	5592453	16	True				
ANR	5592765	AssignmentExpression	need_paren = 0		5592453	0		=			
ANR	5592766	Identifier	need_paren		5592453	0					
ANR	5592767	PrimaryExpression	0		5592453	1					
ANR	5592768	ExpressionStatement	skip_optional = - 1	307:1:9850:9868	5592453	17	True				
ANR	5592769	AssignmentExpression	skip_optional = - 1		5592453	0		=			
ANR	5592770	Identifier	skip_optional		5592453	0					
ANR	5592771	UnaryOperationExpression	- 1		5592453	1					
ANR	5592772	UnaryOperator	-		5592453	0					
ANR	5592773	PrimaryExpression	1		5592453	1					
ANR	5592774	ForStatement	for ( opindex = opcode -> operands ; * opindex != 0 ; opindex ++ )		5592453	18					
ANR	5592775	ForInit	opindex = opcode -> operands ;	308:6:9876:9902	5592453	0	True				
ANR	5592776	AssignmentExpression	opindex = opcode -> operands		5592453	0		=			
ANR	5592777	Identifier	opindex		5592453	0					
ANR	5592778	PtrMemberAccess	opcode -> operands		5592453	1					
ANR	5592779	Identifier	opcode		5592453	0					
ANR	5592780	Identifier	operands		5592453	1					
ANR	5592781	Condition	* opindex != 0	308:34:9904:9916	5592453	1	True				
ANR	5592782	EqualityExpression	* opindex != 0		5592453	0		!=			
ANR	5592783	UnaryOperationExpression	* opindex		5592453	0					
ANR	5592784	UnaryOperator	*		5592453	0					
ANR	5592785	Identifier	opindex		5592453	1					
ANR	5592786	PrimaryExpression	0		5592453	1					
ANR	5592787	PostIncDecOperationExpression	opindex ++	308:49:9919:9927	5592453	2	True				
ANR	5592788	Identifier	opindex		5592453	0					
ANR	5592789	IncDec	++		5592453	1					
ANR	5592790	CompoundStatement		78:2:2017:2027	5592453	3					
ANR	5592791	IdentifierDeclStatement	long value ;	309:2:9934:9944	5592453	0	True				
ANR	5592792	IdentifierDecl	value		5592453	0					
ANR	5592793	IdentifierDeclType	long		5592453	0					
ANR	5592794	Identifier	value		5592453	1					
ANR	5592795	ExpressionStatement	operand = powerpc_operands + * opindex	311:2:9949:9986	5592453	1	True				
ANR	5592796	AssignmentExpression	operand = powerpc_operands + * opindex		5592453	0		=			
ANR	5592797	Identifier	operand		5592453	0					
ANR	5592798	AdditiveExpression	powerpc_operands + * opindex		5592453	1		+			
ANR	5592799	Identifier	powerpc_operands		5592453	0					
ANR	5592800	UnaryOperationExpression	* opindex		5592453	1					
ANR	5592801	UnaryOperator	*		5592453	0					
ANR	5592802	Identifier	opindex		5592453	1					
ANR	5592803	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FAKE ) != 0 )		5592453	2					
ANR	5592804	Condition	( operand -> flags & PPC_OPERAND_FAKE ) != 0	316:6:10154:10193	5592453	0	True				
ANR	5592805	EqualityExpression	( operand -> flags & PPC_OPERAND_FAKE ) != 0		5592453	0		!=			
ANR	5592806	BitAndExpression	operand -> flags & PPC_OPERAND_FAKE		5592453	0		&			
ANR	5592807	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592808	Identifier	operand		5592453	0					
ANR	5592809	Identifier	flags		5592453	1					
ANR	5592810	Identifier	PPC_OPERAND_FAKE		5592453	1					
ANR	5592811	PrimaryExpression	0		5592453	1					
ANR	5592812	CompoundStatement		85:48:2279:2279	5592453	1					
ANR	5592813	ContinueStatement	continue ;	317:3:10201:10209	5592453	0	True				
ANR	5592814	IfStatement	if ( ( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0 )		5592453	3					
ANR	5592815	Condition	( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0	322:6:10320:10363	5592453	0	True				
ANR	5592816	EqualityExpression	( operand -> flags & PPC_OPERAND_OPTIONAL ) != 0		5592453	0		!=			
ANR	5592817	BitAndExpression	operand -> flags & PPC_OPERAND_OPTIONAL		5592453	0		&			
ANR	5592818	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592819	Identifier	operand		5592453	0					
ANR	5592820	Identifier	flags		5592453	1					
ANR	5592821	Identifier	PPC_OPERAND_OPTIONAL		5592453	1					
ANR	5592822	PrimaryExpression	0		5592453	1					
ANR	5592823	CompoundStatement		91:52:2449:2449	5592453	1					
ANR	5592824	IfStatement	if ( skip_optional < 0 )		5592453	0					
ANR	5592825	Condition	skip_optional < 0	323:7:10375:10391	5592453	0	True				
ANR	5592826	RelationalExpression	skip_optional < 0		5592453	0		<			
ANR	5592827	Identifier	skip_optional		5592453	0					
ANR	5592828	PrimaryExpression	0		5592453	1					
ANR	5592829	CompoundStatement		92:26:2477:2477	5592453	1					
ANR	5592830	ExpressionStatement	"skip_optional = skip_optional_operands ( opindex , insn , dialect )"	324:4:10400:10468	5592453	0	True				
ANR	5592831	AssignmentExpression	"skip_optional = skip_optional_operands ( opindex , insn , dialect )"		5592453	0		=			
ANR	5592832	Identifier	skip_optional		5592453	0					
ANR	5592833	CallExpression	"skip_optional_operands ( opindex , insn , dialect )"		5592453	1					
ANR	5592834	Callee	skip_optional_operands		5592453	0					
ANR	5592835	Identifier	skip_optional_operands		5592453	0					
ANR	5592836	ArgumentList	opindex		5592453	1					
ANR	5592837	Argument	opindex		5592453	0					
ANR	5592838	Identifier	opindex		5592453	0					
ANR	5592839	Argument	insn		5592453	1					
ANR	5592840	Identifier	insn		5592453	0					
ANR	5592841	Argument	dialect		5592453	2					
ANR	5592842	Identifier	dialect		5592453	0					
ANR	5592843	IfStatement	if ( skip_optional )		5592453	1					
ANR	5592844	Condition	skip_optional	327:7:10482:10494	5592453	0	True				
ANR	5592845	Identifier	skip_optional		5592453	0					
ANR	5592846	CompoundStatement		96:22:2580:2580	5592453	1					
ANR	5592847	ContinueStatement	continue ;	328:4:10503:10511	5592453	0	True				
ANR	5592848	ExpressionStatement	"value = operand_value_powerpc ( operand , insn , dialect )"	332:2:10525:10579	5592453	4	True				
ANR	5592849	AssignmentExpression	"value = operand_value_powerpc ( operand , insn , dialect )"		5592453	0		=			
ANR	5592850	Identifier	value		5592453	0					
ANR	5592851	CallExpression	"operand_value_powerpc ( operand , insn , dialect )"		5592453	1					
ANR	5592852	Callee	operand_value_powerpc		5592453	0					
ANR	5592853	Identifier	operand_value_powerpc		5592453	0					
ANR	5592854	ArgumentList	operand		5592453	1					
ANR	5592855	Argument	operand		5592453	0					
ANR	5592856	Identifier	operand		5592453	0					
ANR	5592857	Argument	insn		5592453	1					
ANR	5592858	Identifier	insn		5592453	0					
ANR	5592859	Argument	dialect		5592453	2					
ANR	5592860	Identifier	dialect		5592453	0					
ANR	5592861	IfStatement	if ( need_comma )		5592453	5					
ANR	5592862	Condition	need_comma	334:6:10588:10597	5592453	0	True				
ANR	5592863	Identifier	need_comma		5592453	0					
ANR	5592864	CompoundStatement		103:18:2683:2683	5592453	1					
ANR	5592865	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "", "" )"	335:3:10605:10647	5592453	0	True				
ANR	5592866	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "", "" )"		5592453	0					
ANR	5592867	Callee	* info -> fprintf_func		5592453	0					
ANR	5592868	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592869	UnaryOperator	*		5592453	0					
ANR	5592870	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592871	Identifier	info		5592453	0					
ANR	5592872	Identifier	fprintf_func		5592453	1					
ANR	5592873	ArgumentList	info -> stream		5592453	1					
ANR	5592874	Argument	info -> stream		5592453	0					
ANR	5592875	PtrMemberAccess	info -> stream		5592453	0					
ANR	5592876	Identifier	info		5592453	0					
ANR	5592877	Identifier	stream		5592453	1					
ANR	5592878	Argument	""", """		5592453	1					
ANR	5592879	PrimaryExpression	""", """		5592453	0					
ANR	5592880	ExpressionStatement	need_comma = 0	336:3:10652:10666	5592453	1	True				
ANR	5592881	AssignmentExpression	need_comma = 0		5592453	0		=			
ANR	5592882	Identifier	need_comma		5592453	0					
ANR	5592883	PrimaryExpression	0		5592453	1					
ANR	5592884	IfStatement	if ( ( operand -> flags & PPC_OPERAND_GPR ) != 0 || ( ( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0 ) )		5592453	6					
ANR	5592885	Condition	( operand -> flags & PPC_OPERAND_GPR ) != 0 || ( ( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0 )	340:6:10732:10831	5592453	0	True				
ANR	5592886	OrExpression	( operand -> flags & PPC_OPERAND_GPR ) != 0 || ( ( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0 )		5592453	0		||			
ANR	5592887	EqualityExpression	( operand -> flags & PPC_OPERAND_GPR ) != 0		5592453	0		!=			
ANR	5592888	BitAndExpression	operand -> flags & PPC_OPERAND_GPR		5592453	0		&			
ANR	5592889	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592890	Identifier	operand		5592453	0					
ANR	5592891	Identifier	flags		5592453	1					
ANR	5592892	Identifier	PPC_OPERAND_GPR		5592453	1					
ANR	5592893	PrimaryExpression	0		5592453	1					
ANR	5592894	AndExpression	( operand -> flags & PPC_OPERAND_GPR_0 ) != 0 && value != 0		5592453	1		&&			
ANR	5592895	EqualityExpression	( operand -> flags & PPC_OPERAND_GPR_0 ) != 0		5592453	0		!=			
ANR	5592896	BitAndExpression	operand -> flags & PPC_OPERAND_GPR_0		5592453	0		&			
ANR	5592897	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592898	Identifier	operand		5592453	0					
ANR	5592899	Identifier	flags		5592453	1					
ANR	5592900	Identifier	PPC_OPERAND_GPR_0		5592453	1					
ANR	5592901	PrimaryExpression	0		5592453	1					
ANR	5592902	EqualityExpression	value != 0		5592453	1		!=			
ANR	5592903	Identifier	value		5592453	0					
ANR	5592904	PrimaryExpression	0		5592453	1					
ANR	5592905	CompoundStatement		109:108:2917:2917	5592453	1					
ANR	5592906	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""r%ld"" , value )"	341:3:10839:10890	5592453	0	True				
ANR	5592907	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""r%ld"" , value )"		5592453	0					
ANR	5592908	Callee	* info -> fprintf_func		5592453	0					
ANR	5592909	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592910	UnaryOperator	*		5592453	0					
ANR	5592911	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592912	Identifier	info		5592453	0					
ANR	5592913	Identifier	fprintf_func		5592453	1					
ANR	5592914	ArgumentList	info -> stream		5592453	1					
ANR	5592915	Argument	info -> stream		5592453	0					
ANR	5592916	PtrMemberAccess	info -> stream		5592453	0					
ANR	5592917	Identifier	info		5592453	0					
ANR	5592918	Identifier	stream		5592453	1					
ANR	5592919	Argument	"""r%ld"""		5592453	1					
ANR	5592920	PrimaryExpression	"""r%ld"""		5592453	0					
ANR	5592921	Argument	value		5592453	2					
ANR	5592922	Identifier	value		5592453	0					
ANR	5592923	ElseStatement	else		5592453	0					
ANR	5592924	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FPR ) != 0 )		5592453	0					
ANR	5592925	Condition	( operand -> flags & PPC_OPERAND_FPR ) != 0	342:13:10905:10943	5592453	0	True				
ANR	5592926	EqualityExpression	( operand -> flags & PPC_OPERAND_FPR ) != 0		5592453	0		!=			
ANR	5592927	BitAndExpression	operand -> flags & PPC_OPERAND_FPR		5592453	0		&			
ANR	5592928	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592929	Identifier	operand		5592453	0					
ANR	5592930	Identifier	flags		5592453	1					
ANR	5592931	Identifier	PPC_OPERAND_FPR		5592453	1					
ANR	5592932	PrimaryExpression	0		5592453	1					
ANR	5592933	CompoundStatement		111:54:3029:3029	5592453	1					
ANR	5592934	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""f%ld"" , value )"	343:3:10951:11002	5592453	0	True				
ANR	5592935	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""f%ld"" , value )"		5592453	0					
ANR	5592936	Callee	* info -> fprintf_func		5592453	0					
ANR	5592937	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592938	UnaryOperator	*		5592453	0					
ANR	5592939	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592940	Identifier	info		5592453	0					
ANR	5592941	Identifier	fprintf_func		5592453	1					
ANR	5592942	ArgumentList	info -> stream		5592453	1					
ANR	5592943	Argument	info -> stream		5592453	0					
ANR	5592944	PtrMemberAccess	info -> stream		5592453	0					
ANR	5592945	Identifier	info		5592453	0					
ANR	5592946	Identifier	stream		5592453	1					
ANR	5592947	Argument	"""f%ld"""		5592453	1					
ANR	5592948	PrimaryExpression	"""f%ld"""		5592453	0					
ANR	5592949	Argument	value		5592453	2					
ANR	5592950	Identifier	value		5592453	0					
ANR	5592951	ElseStatement	else		5592453	0					
ANR	5592952	IfStatement	if ( ( operand -> flags & PPC_OPERAND_VR ) != 0 )		5592453	0					
ANR	5592953	Condition	( operand -> flags & PPC_OPERAND_VR ) != 0	344:13:11017:11054	5592453	0	True				
ANR	5592954	EqualityExpression	( operand -> flags & PPC_OPERAND_VR ) != 0		5592453	0		!=			
ANR	5592955	BitAndExpression	operand -> flags & PPC_OPERAND_VR		5592453	0		&			
ANR	5592956	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592957	Identifier	operand		5592453	0					
ANR	5592958	Identifier	flags		5592453	1					
ANR	5592959	Identifier	PPC_OPERAND_VR		5592453	1					
ANR	5592960	PrimaryExpression	0		5592453	1					
ANR	5592961	CompoundStatement		113:53:3140:3140	5592453	1					
ANR	5592962	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""v%ld"" , value )"	345:3:11062:11113	5592453	0	True				
ANR	5592963	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""v%ld"" , value )"		5592453	0					
ANR	5592964	Callee	* info -> fprintf_func		5592453	0					
ANR	5592965	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592966	UnaryOperator	*		5592453	0					
ANR	5592967	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592968	Identifier	info		5592453	0					
ANR	5592969	Identifier	fprintf_func		5592453	1					
ANR	5592970	ArgumentList	info -> stream		5592453	1					
ANR	5592971	Argument	info -> stream		5592453	0					
ANR	5592972	PtrMemberAccess	info -> stream		5592453	0					
ANR	5592973	Identifier	info		5592453	0					
ANR	5592974	Identifier	stream		5592453	1					
ANR	5592975	Argument	"""v%ld"""		5592453	1					
ANR	5592976	PrimaryExpression	"""v%ld"""		5592453	0					
ANR	5592977	Argument	value		5592453	2					
ANR	5592978	Identifier	value		5592453	0					
ANR	5592979	ElseStatement	else		5592453	0					
ANR	5592980	IfStatement	if ( ( operand -> flags & PPC_OPERAND_VSR ) != 0 )		5592453	0					
ANR	5592981	Condition	( operand -> flags & PPC_OPERAND_VSR ) != 0	346:13:11128:11166	5592453	0	True				
ANR	5592982	EqualityExpression	( operand -> flags & PPC_OPERAND_VSR ) != 0		5592453	0		!=			
ANR	5592983	BitAndExpression	operand -> flags & PPC_OPERAND_VSR		5592453	0		&			
ANR	5592984	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5592985	Identifier	operand		5592453	0					
ANR	5592986	Identifier	flags		5592453	1					
ANR	5592987	Identifier	PPC_OPERAND_VSR		5592453	1					
ANR	5592988	PrimaryExpression	0		5592453	1					
ANR	5592989	CompoundStatement		115:54:3252:3252	5592453	1					
ANR	5592990	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""vs%ld"" , value )"	347:3:11174:11226	5592453	0	True				
ANR	5592991	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""vs%ld"" , value )"		5592453	0					
ANR	5592992	Callee	* info -> fprintf_func		5592453	0					
ANR	5592993	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5592994	UnaryOperator	*		5592453	0					
ANR	5592995	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5592996	Identifier	info		5592453	0					
ANR	5592997	Identifier	fprintf_func		5592453	1					
ANR	5592998	ArgumentList	info -> stream		5592453	1					
ANR	5592999	Argument	info -> stream		5592453	0					
ANR	5593000	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593001	Identifier	info		5592453	0					
ANR	5593002	Identifier	stream		5592453	1					
ANR	5593003	Argument	"""vs%ld"""		5592453	1					
ANR	5593004	PrimaryExpression	"""vs%ld"""		5592453	0					
ANR	5593005	Argument	value		5592453	2					
ANR	5593006	Identifier	value		5592453	0					
ANR	5593007	ElseStatement	else		5592453	0					
ANR	5593008	IfStatement	if ( ( operand -> flags & PPC_OPERAND_RELATIVE ) != 0 )		5592453	0					
ANR	5593009	Condition	( operand -> flags & PPC_OPERAND_RELATIVE ) != 0	348:13:11241:11284	5592453	0	True				
ANR	5593010	EqualityExpression	( operand -> flags & PPC_OPERAND_RELATIVE ) != 0		5592453	0		!=			
ANR	5593011	BitAndExpression	operand -> flags & PPC_OPERAND_RELATIVE		5592453	0		&			
ANR	5593012	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593013	Identifier	operand		5592453	0					
ANR	5593014	Identifier	flags		5592453	1					
ANR	5593015	Identifier	PPC_OPERAND_RELATIVE		5592453	1					
ANR	5593016	PrimaryExpression	0		5592453	1					
ANR	5593017	CompoundStatement		117:59:3370:3370	5592453	1					
ANR	5593018	ExpressionStatement	"( * info -> print_address_func ) ( memaddr + value , info )"	349:3:11292:11343	5592453	0	True				
ANR	5593019	CallExpression	"( * info -> print_address_func ) ( memaddr + value , info )"		5592453	0					
ANR	5593020	Callee	* info -> print_address_func		5592453	0					
ANR	5593021	UnaryOperationExpression	* info -> print_address_func		5592453	0					
ANR	5593022	UnaryOperator	*		5592453	0					
ANR	5593023	PtrMemberAccess	info -> print_address_func		5592453	1					
ANR	5593024	Identifier	info		5592453	0					
ANR	5593025	Identifier	print_address_func		5592453	1					
ANR	5593026	ArgumentList	memaddr + value		5592453	1					
ANR	5593027	Argument	memaddr + value		5592453	0					
ANR	5593028	AdditiveExpression	memaddr + value		5592453	0		+			
ANR	5593029	Identifier	memaddr		5592453	0					
ANR	5593030	Identifier	value		5592453	1					
ANR	5593031	Argument	info		5592453	1					
ANR	5593032	Identifier	info		5592453	0					
ANR	5593033	ElseStatement	else		5592453	0					
ANR	5593034	IfStatement	if ( ( operand -> flags & PPC_OPERAND_ABSOLUTE ) != 0 )		5592453	0					
ANR	5593035	Condition	( operand -> flags & PPC_OPERAND_ABSOLUTE ) != 0	350:13:11358:11401	5592453	0	True				
ANR	5593036	EqualityExpression	( operand -> flags & PPC_OPERAND_ABSOLUTE ) != 0		5592453	0		!=			
ANR	5593037	BitAndExpression	operand -> flags & PPC_OPERAND_ABSOLUTE		5592453	0		&			
ANR	5593038	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593039	Identifier	operand		5592453	0					
ANR	5593040	Identifier	flags		5592453	1					
ANR	5593041	Identifier	PPC_OPERAND_ABSOLUTE		5592453	1					
ANR	5593042	PrimaryExpression	0		5592453	1					
ANR	5593043	CompoundStatement		119:59:3487:3487	5592453	1					
ANR	5593044	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) value & 0xffffffff , info )"	351:3:11409:11472	5592453	0	True				
ANR	5593045	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) value & 0xffffffff , info )"		5592453	0					
ANR	5593046	Callee	* info -> print_address_func		5592453	0					
ANR	5593047	UnaryOperationExpression	* info -> print_address_func		5592453	0					
ANR	5593048	UnaryOperator	*		5592453	0					
ANR	5593049	PtrMemberAccess	info -> print_address_func		5592453	1					
ANR	5593050	Identifier	info		5592453	0					
ANR	5593051	Identifier	print_address_func		5592453	1					
ANR	5593052	ArgumentList	( bfd_vma ) value & 0xffffffff		5592453	1					
ANR	5593053	Argument	( bfd_vma ) value & 0xffffffff		5592453	0					
ANR	5593054	BitAndExpression	( bfd_vma ) value & 0xffffffff		5592453	0		&			
ANR	5593055	CastExpression	( bfd_vma ) value		5592453	0					
ANR	5593056	CastTarget	bfd_vma		5592453	0					
ANR	5593057	Identifier	value		5592453	1					
ANR	5593058	PrimaryExpression	0xffffffff		5592453	1					
ANR	5593059	Argument	info		5592453	1					
ANR	5593060	Identifier	info		5592453	0					
ANR	5593061	ElseStatement	else		5592453	0					
ANR	5593062	IfStatement	if ( ( operand -> flags & PPC_OPERAND_CR ) == 0 || ( dialect & PPC_OPCODE_PPC ) == 0 )		5592453	0					
ANR	5593063	Condition	( operand -> flags & PPC_OPERAND_CR ) == 0 || ( dialect & PPC_OPCODE_PPC ) == 0	352:13:11487:11559	5592453	0	True				
ANR	5593064	OrExpression	( operand -> flags & PPC_OPERAND_CR ) == 0 || ( dialect & PPC_OPCODE_PPC ) == 0		5592453	0		||			
ANR	5593065	EqualityExpression	( operand -> flags & PPC_OPERAND_CR ) == 0		5592453	0		==			
ANR	5593066	BitAndExpression	operand -> flags & PPC_OPERAND_CR		5592453	0		&			
ANR	5593067	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593068	Identifier	operand		5592453	0					
ANR	5593069	Identifier	flags		5592453	1					
ANR	5593070	Identifier	PPC_OPERAND_CR		5592453	1					
ANR	5593071	PrimaryExpression	0		5592453	1					
ANR	5593072	EqualityExpression	( dialect & PPC_OPCODE_PPC ) == 0		5592453	1		==			
ANR	5593073	BitAndExpression	dialect & PPC_OPCODE_PPC		5592453	0		&			
ANR	5593074	Identifier	dialect		5592453	0					
ANR	5593075	Identifier	PPC_OPCODE_PPC		5592453	1					
ANR	5593076	PrimaryExpression	0		5592453	1					
ANR	5593077	CompoundStatement		121:88:3645:3645	5592453	1					
ANR	5593078	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"	353:3:11567:11617	5592453	0	True				
ANR	5593079	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"		5592453	0					
ANR	5593080	Callee	* info -> fprintf_func		5592453	0					
ANR	5593081	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593082	UnaryOperator	*		5592453	0					
ANR	5593083	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593084	Identifier	info		5592453	0					
ANR	5593085	Identifier	fprintf_func		5592453	1					
ANR	5593086	ArgumentList	info -> stream		5592453	1					
ANR	5593087	Argument	info -> stream		5592453	0					
ANR	5593088	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593089	Identifier	info		5592453	0					
ANR	5593090	Identifier	stream		5592453	1					
ANR	5593091	Argument	"""%ld"""		5592453	1					
ANR	5593092	PrimaryExpression	"""%ld"""		5592453	0					
ANR	5593093	Argument	value		5592453	2					
ANR	5593094	Identifier	value		5592453	0					
ANR	5593095	ElseStatement	else		5592453	0					
ANR	5593096	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FSL ) != 0 )		5592453	0					
ANR	5593097	Condition	( operand -> flags & PPC_OPERAND_FSL ) != 0	354:13:11632:11670	5592453	0	True				
ANR	5593098	EqualityExpression	( operand -> flags & PPC_OPERAND_FSL ) != 0		5592453	0		!=			
ANR	5593099	BitAndExpression	operand -> flags & PPC_OPERAND_FSL		5592453	0		&			
ANR	5593100	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593101	Identifier	operand		5592453	0					
ANR	5593102	Identifier	flags		5592453	1					
ANR	5593103	Identifier	PPC_OPERAND_FSL		5592453	1					
ANR	5593104	PrimaryExpression	0		5592453	1					
ANR	5593105	CompoundStatement		123:54:3756:3756	5592453	1					
ANR	5593106	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""fsl%ld"" , value )"	355:3:11678:11731	5592453	0	True				
ANR	5593107	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""fsl%ld"" , value )"		5592453	0					
ANR	5593108	Callee	* info -> fprintf_func		5592453	0					
ANR	5593109	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593110	UnaryOperator	*		5592453	0					
ANR	5593111	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593112	Identifier	info		5592453	0					
ANR	5593113	Identifier	fprintf_func		5592453	1					
ANR	5593114	ArgumentList	info -> stream		5592453	1					
ANR	5593115	Argument	info -> stream		5592453	0					
ANR	5593116	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593117	Identifier	info		5592453	0					
ANR	5593118	Identifier	stream		5592453	1					
ANR	5593119	Argument	"""fsl%ld"""		5592453	1					
ANR	5593120	PrimaryExpression	"""fsl%ld"""		5592453	0					
ANR	5593121	Argument	value		5592453	2					
ANR	5593122	Identifier	value		5592453	0					
ANR	5593123	ElseStatement	else		5592453	0					
ANR	5593124	IfStatement	if ( ( operand -> flags & PPC_OPERAND_FCR ) != 0 )		5592453	0					
ANR	5593125	Condition	( operand -> flags & PPC_OPERAND_FCR ) != 0	356:13:11746:11784	5592453	0	True				
ANR	5593126	EqualityExpression	( operand -> flags & PPC_OPERAND_FCR ) != 0		5592453	0		!=			
ANR	5593127	BitAndExpression	operand -> flags & PPC_OPERAND_FCR		5592453	0		&			
ANR	5593128	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593129	Identifier	operand		5592453	0					
ANR	5593130	Identifier	flags		5592453	1					
ANR	5593131	Identifier	PPC_OPERAND_FCR		5592453	1					
ANR	5593132	PrimaryExpression	0		5592453	1					
ANR	5593133	CompoundStatement		125:54:3870:3870	5592453	1					
ANR	5593134	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""fcr%ld"" , value )"	357:3:11792:11845	5592453	0	True				
ANR	5593135	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""fcr%ld"" , value )"		5592453	0					
ANR	5593136	Callee	* info -> fprintf_func		5592453	0					
ANR	5593137	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593138	UnaryOperator	*		5592453	0					
ANR	5593139	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593140	Identifier	info		5592453	0					
ANR	5593141	Identifier	fprintf_func		5592453	1					
ANR	5593142	ArgumentList	info -> stream		5592453	1					
ANR	5593143	Argument	info -> stream		5592453	0					
ANR	5593144	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593145	Identifier	info		5592453	0					
ANR	5593146	Identifier	stream		5592453	1					
ANR	5593147	Argument	"""fcr%ld"""		5592453	1					
ANR	5593148	PrimaryExpression	"""fcr%ld"""		5592453	0					
ANR	5593149	Argument	value		5592453	2					
ANR	5593150	Identifier	value		5592453	0					
ANR	5593151	ElseStatement	else		5592453	0					
ANR	5593152	IfStatement	if ( ( operand -> flags & PPC_OPERAND_UDI ) != 0 )		5592453	0					
ANR	5593153	Condition	( operand -> flags & PPC_OPERAND_UDI ) != 0	358:13:11860:11898	5592453	0	True				
ANR	5593154	EqualityExpression	( operand -> flags & PPC_OPERAND_UDI ) != 0		5592453	0		!=			
ANR	5593155	BitAndExpression	operand -> flags & PPC_OPERAND_UDI		5592453	0		&			
ANR	5593156	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593157	Identifier	operand		5592453	0					
ANR	5593158	Identifier	flags		5592453	1					
ANR	5593159	Identifier	PPC_OPERAND_UDI		5592453	1					
ANR	5593160	PrimaryExpression	0		5592453	1					
ANR	5593161	CompoundStatement		127:54:3984:3984	5592453	1					
ANR	5593162	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"	359:3:11906:11956	5592453	0	True				
ANR	5593163	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%ld"" , value )"		5592453	0					
ANR	5593164	Callee	* info -> fprintf_func		5592453	0					
ANR	5593165	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593166	UnaryOperator	*		5592453	0					
ANR	5593167	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593168	Identifier	info		5592453	0					
ANR	5593169	Identifier	fprintf_func		5592453	1					
ANR	5593170	ArgumentList	info -> stream		5592453	1					
ANR	5593171	Argument	info -> stream		5592453	0					
ANR	5593172	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593173	Identifier	info		5592453	0					
ANR	5593174	Identifier	stream		5592453	1					
ANR	5593175	Argument	"""%ld"""		5592453	1					
ANR	5593176	PrimaryExpression	"""%ld"""		5592453	0					
ANR	5593177	Argument	value		5592453	2					
ANR	5593178	Identifier	value		5592453	0					
ANR	5593179	ElseStatement	else		5592453	0					
ANR	5593180	CompoundStatement		129:9:4050:4050	5592453	0					
ANR	5593181	IfStatement	if ( operand -> bitm == 7 )		5592453	0					
ANR	5593182	Condition	operand -> bitm == 7	361:7:11976:11993	5592453	0	True				
ANR	5593183	EqualityExpression	operand -> bitm == 7		5592453	0		==			
ANR	5593184	PtrMemberAccess	operand -> bitm		5592453	0					
ANR	5593185	Identifier	operand		5592453	0					
ANR	5593186	Identifier	bitm		5592453	1					
ANR	5593187	PrimaryExpression	7		5592453	1					
ANR	5593188	CompoundStatement		130:27:4079:4079	5592453	1					
ANR	5593189	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""cr%ld"" , value )"	362:4:12002:12054	5592453	0	True				
ANR	5593190	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""cr%ld"" , value )"		5592453	0					
ANR	5593191	Callee	* info -> fprintf_func		5592453	0					
ANR	5593192	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593193	UnaryOperator	*		5592453	0					
ANR	5593194	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593195	Identifier	info		5592453	0					
ANR	5593196	Identifier	fprintf_func		5592453	1					
ANR	5593197	ArgumentList	info -> stream		5592453	1					
ANR	5593198	Argument	info -> stream		5592453	0					
ANR	5593199	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593200	Identifier	info		5592453	0					
ANR	5593201	Identifier	stream		5592453	1					
ANR	5593202	Argument	"""cr%ld"""		5592453	1					
ANR	5593203	PrimaryExpression	"""cr%ld"""		5592453	0					
ANR	5593204	Argument	value		5592453	2					
ANR	5593205	Identifier	value		5592453	0					
ANR	5593206	ElseStatement	else		5592453	0					
ANR	5593207	CompoundStatement		135:4:4229:4235	5592453	0					
ANR	5593208	Statement	static	364:4:12072:12077	5592453	0	True				
ANR	5593209	IdentifierDeclStatement	"const char * cbnames [ 4 ] = { ""lt"" , ""gt"" , ""eq"" , ""so"" } ;"	364:11:12079:12128	5592453	1	True				
ANR	5593210	IdentifierDecl	"* cbnames [ 4 ] = { ""lt"" , ""gt"" , ""eq"" , ""so"" }"		5592453	0					
ANR	5593211	IdentifierDeclType	const char * [ 4 ]		5592453	0					
ANR	5593212	Identifier	cbnames		5592453	1					
ANR	5593213	PrimaryExpression	4		5592453	2					
ANR	5593214	AssignmentExpression	"* cbnames [ 4 ] = { ""lt"" , ""gt"" , ""eq"" , ""so"" }"		5592453	3		=			
ANR	5593215	Identifier	cbnames		5592453	0					
ANR	5593216	InitializerList	"""lt"""		5592453	1					
ANR	5593217	PrimaryExpression	"""lt"""		5592453	0					
ANR	5593218	PrimaryExpression	"""gt"""		5592453	1					
ANR	5593219	PrimaryExpression	"""eq"""		5592453	2					
ANR	5593220	PrimaryExpression	"""so"""		5592453	3					
ANR	5593221	IdentifierDeclStatement	int cr ;	365:4:12134:12140	5592453	2	True				
ANR	5593222	IdentifierDecl	cr		5592453	0					
ANR	5593223	IdentifierDeclType	int		5592453	0					
ANR	5593224	Identifier	cr		5592453	1					
ANR	5593225	IdentifierDeclStatement	int cc ;	366:4:12146:12152	5592453	3	True				
ANR	5593226	IdentifierDecl	cc		5592453	0					
ANR	5593227	IdentifierDeclType	int		5592453	0					
ANR	5593228	Identifier	cc		5592453	1					
ANR	5593229	ExpressionStatement	cr = value >> 2	368:4:12159:12174	5592453	4	True				
ANR	5593230	AssignmentExpression	cr = value >> 2		5592453	0		=			
ANR	5593231	Identifier	cr		5592453	0					
ANR	5593232	ShiftExpression	value >> 2		5592453	1		>>			
ANR	5593233	Identifier	value		5592453	0					
ANR	5593234	PrimaryExpression	2		5592453	1					
ANR	5593235	IfStatement	if ( cr != 0 )		5592453	5					
ANR	5593236	Condition	cr != 0	369:8:12184:12190	5592453	0	True				
ANR	5593237	EqualityExpression	cr != 0		5592453	0		!=			
ANR	5593238	Identifier	cr		5592453	0					
ANR	5593239	PrimaryExpression	0		5592453	1					
ANR	5593240	CompoundStatement		138:17:4276:4276	5592453	1					
ANR	5593241	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""4*cr%d+"" , cr )"	370:5:12200:12251	5592453	0	True				
ANR	5593242	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""4*cr%d+"" , cr )"		5592453	0					
ANR	5593243	Callee	* info -> fprintf_func		5592453	0					
ANR	5593244	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593245	UnaryOperator	*		5592453	0					
ANR	5593246	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593247	Identifier	info		5592453	0					
ANR	5593248	Identifier	fprintf_func		5592453	1					
ANR	5593249	ArgumentList	info -> stream		5592453	1					
ANR	5593250	Argument	info -> stream		5592453	0					
ANR	5593251	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593252	Identifier	info		5592453	0					
ANR	5593253	Identifier	stream		5592453	1					
ANR	5593254	Argument	"""4*cr%d+"""		5592453	1					
ANR	5593255	PrimaryExpression	"""4*cr%d+"""		5592453	0					
ANR	5593256	Argument	cr		5592453	2					
ANR	5593257	Identifier	cr		5592453	0					
ANR	5593258	ExpressionStatement	cc = value & 3	372:4:12263:12277	5592453	6	True				
ANR	5593259	AssignmentExpression	cc = value & 3		5592453	0		=			
ANR	5593260	Identifier	cc		5592453	0					
ANR	5593261	BitAndExpression	value & 3		5592453	1		&			
ANR	5593262	Identifier	value		5592453	0					
ANR	5593263	PrimaryExpression	3		5592453	1					
ANR	5593264	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , cbnames [ cc ] )"	373:4:12283:12338	5592453	7	True				
ANR	5593265	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""%s"" , cbnames [ cc ] )"		5592453	0					
ANR	5593266	Callee	* info -> fprintf_func		5592453	0					
ANR	5593267	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593268	UnaryOperator	*		5592453	0					
ANR	5593269	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593270	Identifier	info		5592453	0					
ANR	5593271	Identifier	fprintf_func		5592453	1					
ANR	5593272	ArgumentList	info -> stream		5592453	1					
ANR	5593273	Argument	info -> stream		5592453	0					
ANR	5593274	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593275	Identifier	info		5592453	0					
ANR	5593276	Identifier	stream		5592453	1					
ANR	5593277	Argument	"""%s"""		5592453	1					
ANR	5593278	PrimaryExpression	"""%s"""		5592453	0					
ANR	5593279	Argument	cbnames [ cc ]		5592453	2					
ANR	5593280	ArrayIndexing	cbnames [ cc ]		5592453	0					
ANR	5593281	Identifier	cbnames		5592453	0					
ANR	5593282	Identifier	cc		5592453	1					
ANR	5593283	IfStatement	if ( need_paren )		5592453	7					
ANR	5593284	Condition	need_paren	377:6:12356:12365	5592453	0	True				
ANR	5593285	Identifier	need_paren		5592453	0					
ANR	5593286	CompoundStatement		146:18:4451:4451	5592453	1					
ANR	5593287	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , "")"" )"	378:3:12373:12414	5592453	0	True				
ANR	5593288	CallExpression	"( * info -> fprintf_func ) ( info -> stream , "")"" )"		5592453	0					
ANR	5593289	Callee	* info -> fprintf_func		5592453	0					
ANR	5593290	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593291	UnaryOperator	*		5592453	0					
ANR	5593292	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593293	Identifier	info		5592453	0					
ANR	5593294	Identifier	fprintf_func		5592453	1					
ANR	5593295	ArgumentList	info -> stream		5592453	1					
ANR	5593296	Argument	info -> stream		5592453	0					
ANR	5593297	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593298	Identifier	info		5592453	0					
ANR	5593299	Identifier	stream		5592453	1					
ANR	5593300	Argument	""")"""		5592453	1					
ANR	5593301	PrimaryExpression	""")"""		5592453	0					
ANR	5593302	ExpressionStatement	need_paren = 0	379:3:12419:12433	5592453	1	True				
ANR	5593303	AssignmentExpression	need_paren = 0		5592453	0		=			
ANR	5593304	Identifier	need_paren		5592453	0					
ANR	5593305	PrimaryExpression	0		5592453	1					
ANR	5593306	IfStatement	if ( ( operand -> flags & PPC_OPERAND_PARENS ) == 0 )		5592453	8					
ANR	5593307	Condition	( operand -> flags & PPC_OPERAND_PARENS ) == 0	382:6:12446:12487	5592453	0	True				
ANR	5593308	EqualityExpression	( operand -> flags & PPC_OPERAND_PARENS ) == 0		5592453	0		==			
ANR	5593309	BitAndExpression	operand -> flags & PPC_OPERAND_PARENS		5592453	0		&			
ANR	5593310	PtrMemberAccess	operand -> flags		5592453	0					
ANR	5593311	Identifier	operand		5592453	0					
ANR	5593312	Identifier	flags		5592453	1					
ANR	5593313	Identifier	PPC_OPERAND_PARENS		5592453	1					
ANR	5593314	PrimaryExpression	0		5592453	1					
ANR	5593315	CompoundStatement		151:50:4573:4573	5592453	1					
ANR	5593316	ExpressionStatement	need_comma = 1	383:3:12495:12509	5592453	0	True				
ANR	5593317	AssignmentExpression	need_comma = 1		5592453	0		=			
ANR	5593318	Identifier	need_comma		5592453	0					
ANR	5593319	PrimaryExpression	1		5592453	1					
ANR	5593320	ElseStatement	else		5592453	0					
ANR	5593321	CompoundStatement		153:9:4603:4603	5592453	0					
ANR	5593322	ExpressionStatement	"( * info -> fprintf_func ) ( info -> stream , ""("" )"	385:3:12525:12566	5592453	0	True				
ANR	5593323	CallExpression	"( * info -> fprintf_func ) ( info -> stream , ""("" )"		5592453	0					
ANR	5593324	Callee	* info -> fprintf_func		5592453	0					
ANR	5593325	UnaryOperationExpression	* info -> fprintf_func		5592453	0					
ANR	5593326	UnaryOperator	*		5592453	0					
ANR	5593327	PtrMemberAccess	info -> fprintf_func		5592453	1					
ANR	5593328	Identifier	info		5592453	0					
ANR	5593329	Identifier	fprintf_func		5592453	1					
ANR	5593330	ArgumentList	info -> stream		5592453	1					
ANR	5593331	Argument	info -> stream		5592453	0					
ANR	5593332	PtrMemberAccess	info -> stream		5592453	0					
ANR	5593333	Identifier	info		5592453	0					
ANR	5593334	Identifier	stream		5592453	1					
ANR	5593335	Argument	"""("""		5592453	1					
ANR	5593336	PrimaryExpression	"""("""		5592453	0					
ANR	5593337	ExpressionStatement	need_paren = 1	386:3:12571:12585	5592453	1	True				
ANR	5593338	AssignmentExpression	need_paren = 1		5592453	0		=			
ANR	5593339	Identifier	need_paren		5592453	0					
ANR	5593340	PrimaryExpression	1		5592453	1					
ANR	5593341	ReturnStatement	return 4 ;	391:6:12664:12672	5592453	19	True				
ANR	5593342	PrimaryExpression	4		5592453	0					
ANR	5593343	IfStatement	if ( ( dialect & PPC_OPCODE_ANY ) != 0 )		5592453	13					
ANR	5593344	Condition	( dialect & PPC_OPCODE_ANY ) != 0	394:6:12687:12717	5592453	0	True				
ANR	5593345	EqualityExpression	( dialect & PPC_OPCODE_ANY ) != 0		5592453	0		!=			
ANR	5593346	BitAndExpression	dialect & PPC_OPCODE_ANY		5592453	0		&			
ANR	5593347	Identifier	dialect		5592453	0					
ANR	5593348	Identifier	PPC_OPCODE_ANY		5592453	1					
ANR	5593349	PrimaryExpression	0		5592453	1					
ANR	5593350	CompoundStatement		164:4:4807:4807	5592453	1					
ANR	5593351	ExpressionStatement	dialect = ~PPC_OPCODE_ANY	396:6:12732:12757	5592453	0	True				
ANR	5593352	AssignmentExpression	dialect = ~PPC_OPCODE_ANY		5592453	0		=			
ANR	5593353	Identifier	dialect		5592453	0					
ANR	5593354	Identifier	~PPC_OPCODE_ANY		5592453	1					
ANR	5593355	GotoStatement	goto again ;	397:6:12765:12775	5592453	1	True				
ANR	5593356	Identifier	again		5592453	0					
ANR	5593357	ReturnStatement	return 4 ;	403:2:12886:12894	5592453	14	True				
ANR	5593358	PrimaryExpression	4		5592453	0					
ANR	5593359	ReturnType	static int		5592453	1					
ANR	5593360	Identifier	print_insn_powerpc		5592453	2					
ANR	5593361	ParameterList	"bfd_vma memaddr , struct disassemble_info * info , int bigendian , ppc_cpu_t dialect"		5592453	3					
ANR	5593362	Parameter	bfd_vma memaddr	228:20:7816:7830	5592453	0	True				
ANR	5593363	ParameterType	bfd_vma		5592453	0					
ANR	5593364	Identifier	memaddr		5592453	1					
ANR	5593365	Parameter	struct disassemble_info * info	229:6:7839:7867	5592453	1	True				
ANR	5593366	ParameterType	struct disassemble_info *		5592453	0					
ANR	5593367	Identifier	info		5592453	1					
ANR	5593368	Parameter	int bigendian	230:6:7876:7888	5592453	2	True				
ANR	5593369	ParameterType	int		5592453	0					
ANR	5593370	Identifier	bigendian		5592453	1					
ANR	5593371	Parameter	ppc_cpu_t dialect	231:6:7897:7913	5592453	3	True				
ANR	5593372	ParameterType	ppc_cpu_t		5592453	0					
ANR	5593373	Identifier	dialect		5592453	1					
ANR	5593374	CFGEntryNode	ENTRY		5592453		True				
ANR	5593375	CFGExitNode	EXIT		5592453		True				
ANR	5593376	Symbol	dialect		5592453						
ANR	5593377	Symbol	* cc		5592453						
ANR	5593378	Symbol	* opcode -> operands		5592453						
ANR	5593379	Symbol	PPC_OPERAND_VSR		5592453						
ANR	5593380	Symbol	PPC_OPERAND_FCR		5592453						
ANR	5593381	Symbol	opcode		5592453						
ANR	5593382	Symbol	* cbnames		5592453						
ANR	5593383	Symbol	info -> fprintf_func		5592453						
ANR	5593384	Symbol	__bfd_getl32		5592453						
ANR	5593385	Symbol	__bfd_getb32		5592453						
ANR	5593386	Symbol	opcode -> flags		5592453						
ANR	5593387	Symbol	skip_optional		5592453						
ANR	5593388	Symbol	buffer		5592453						
ANR	5593389	Symbol	powerpc_opcodes		5592453						
ANR	5593390	Symbol	info		5592453						
ANR	5593391	Symbol	PPC_OPERAND_FPR		5592453						
ANR	5593392	Symbol	PPC_OPERAND_UDI		5592453						
ANR	5593393	Symbol	opcode -> name		5592453						
ANR	5593394	Symbol	PPC_OPERAND_FSL		5592453						
ANR	5593395	Symbol	* * opcode		5592453						
ANR	5593396	Symbol	PPC_OPERAND_FAKE		5592453						
ANR	5593397	Symbol	powerpc_operands		5592453						
ANR	5593398	Symbol	operand -> extract		5592453						
ANR	5593399	Symbol	PPC_OPERAND_CR		5592453						
ANR	5593400	Symbol	PPC_OPERAND_PARENS		5592453						
ANR	5593401	Symbol	cbnames		5592453						
ANR	5593402	Symbol	info -> read_memory_func		5592453						
ANR	5593403	Symbol	invalid		5592453						
ANR	5593404	Symbol	PPC_OPERAND_GPR_0		5592453						
ANR	5593405	Symbol	PPC_OPERAND_RELATIVE		5592453						
ANR	5593406	Symbol	status		5592453						
ANR	5593407	Symbol	* * info		5592453						
ANR	5593408	Symbol	opcode -> mask		5592453						
ANR	5593409	Symbol	* operand		5592453						
ANR	5593410	Symbol	memaddr		5592453						
ANR	5593411	Symbol	skip_optional_operands		5592453						
ANR	5593412	Symbol	info -> stream		5592453						
ANR	5593413	Symbol	PPC_OPERAND_OPTIONAL		5592453						
ANR	5593414	Symbol	table_op		5592453						
ANR	5593415	Symbol	* opindex		5592453						
ANR	5593416	Symbol	PPC_OP		5592453						
ANR	5593417	Symbol	info -> print_address_func		5592453						
ANR	5593418	Symbol	opcode -> operands		5592453						
ANR	5593419	Symbol	bigendian		5592453						
ANR	5593420	Symbol	value		5592453						
ANR	5593421	Symbol	PPC_OPERAND_GPR		5592453						
ANR	5593422	Symbol	* info -> read_memory_func		5592453						
ANR	5593423	Symbol	powerpc_num_opcodes		5592453						
ANR	5593424	Symbol	cc		5592453						
ANR	5593425	Symbol	op		5592453						
ANR	5593426	Symbol	& invalid		5592453						
ANR	5593427	Symbol	operand -> flags		5592453						
ANR	5593428	Symbol	need_paren		5592453						
ANR	5593429	Symbol	PPC_OPCODE_PPC		5592453						
ANR	5593430	Symbol	info -> memory_error_func		5592453						
ANR	5593431	Symbol	cr		5592453						
ANR	5593432	Symbol	PPC_OPCODE_ANY		5592453						
ANR	5593433	Symbol	~PPC_OPCODE_ANY		5592453						
ANR	5593434	Symbol	insn		5592453						
ANR	5593435	Symbol	opcode -> opcode		5592453						
ANR	5593436	Symbol	operand_value_powerpc		5592453						
ANR	5593437	Symbol	opcode_end		5592453						
ANR	5593438	Symbol	* info		5592453						
ANR	5593439	Symbol	need_comma		5592453						
ANR	5593440	Symbol	opindex		5592453						
ANR	5593441	Symbol	PPC_OPERAND_ABSOLUTE		5592453						
ANR	5593442	Symbol	operand -> bitm		5592453						
ANR	5593443	Symbol	operand		5592453						
ANR	5593444	Symbol	PPC_OPERAND_VR		5592453						
ANR	5593445	Symbol	* opcode		5592453						
ANR	5593446	Function	print_ppc_disassembler_options	406:0:12899:14418							
ANR	5593447	FunctionDef	print_ppc_disassembler_options (FILE * stream)		5593446	0					
ANR	5593448	CompoundStatement		408:0:12950:14418	5593446	0					
ANR	5593449	ExpressionStatement	"fprintf ( stream , ""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" )"	409:2:12954:13072	5593446	0	True				
ANR	5593450	CallExpression	"fprintf ( stream , ""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"" )"		5593446	0					
ANR	5593451	Callee	fprintf		5593446	0					
ANR	5593452	Identifier	fprintf		5593446	0					
ANR	5593453	ArgumentList	stream		5593446	1					
ANR	5593454	Argument	stream		5593446	0					
ANR	5593455	Identifier	stream		5593446	0					
ANR	5593456	Argument	"""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		5593446	1					
ANR	5593457	PrimaryExpression	"""\\n\\\\nThe following PPC specific disassembler options are supported for use with\\n\\\\nthe -M switch:\\n"""		5593446	0					
ANR	5593458	ExpressionStatement	"fprintf ( stream , ""  booke|booke32|booke64    Disassemble the BookE instructions\\n"" )"	413:2:13077:13160	5593446	1	True				
ANR	5593459	CallExpression	"fprintf ( stream , ""  booke|booke32|booke64    Disassemble the BookE instructions\\n"" )"		5593446	0					
ANR	5593460	Callee	fprintf		5593446	0					
ANR	5593461	Identifier	fprintf		5593446	0					
ANR	5593462	ArgumentList	stream		5593446	1					
ANR	5593463	Argument	stream		5593446	0					
ANR	5593464	Identifier	stream		5593446	0					
ANR	5593465	Argument	"""  booke|booke32|booke64    Disassemble the BookE instructions\\n"""		5593446	1					
ANR	5593466	PrimaryExpression	"""  booke|booke32|booke64    Disassemble the BookE instructions\\n"""		5593446	0					
ANR	5593467	ExpressionStatement	"fprintf ( stream , ""  e300                     Disassemble the e300 instructions\\n"" )"	414:2:13164:13246	5593446	2	True				
ANR	5593468	CallExpression	"fprintf ( stream , ""  e300                     Disassemble the e300 instructions\\n"" )"		5593446	0					
ANR	5593469	Callee	fprintf		5593446	0					
ANR	5593470	Identifier	fprintf		5593446	0					
ANR	5593471	ArgumentList	stream		5593446	1					
ANR	5593472	Argument	stream		5593446	0					
ANR	5593473	Identifier	stream		5593446	0					
ANR	5593474	Argument	"""  e300                     Disassemble the e300 instructions\\n"""		5593446	1					
ANR	5593475	PrimaryExpression	"""  e300                     Disassemble the e300 instructions\\n"""		5593446	0					
ANR	5593476	ExpressionStatement	"fprintf ( stream , ""  e500|e500x2              Disassemble the e500 instructions\\n"" )"	415:2:13250:13332	5593446	3	True				
ANR	5593477	CallExpression	"fprintf ( stream , ""  e500|e500x2              Disassemble the e500 instructions\\n"" )"		5593446	0					
ANR	5593478	Callee	fprintf		5593446	0					
ANR	5593479	Identifier	fprintf		5593446	0					
ANR	5593480	ArgumentList	stream		5593446	1					
ANR	5593481	Argument	stream		5593446	0					
ANR	5593482	Identifier	stream		5593446	0					
ANR	5593483	Argument	"""  e500|e500x2              Disassemble the e500 instructions\\n"""		5593446	1					
ANR	5593484	PrimaryExpression	"""  e500|e500x2              Disassemble the e500 instructions\\n"""		5593446	0					
ANR	5593485	ExpressionStatement	"fprintf ( stream , ""  e500mc                   Disassemble the e500mc instructions\\n"" )"	416:2:13336:13420	5593446	4	True				
ANR	5593486	CallExpression	"fprintf ( stream , ""  e500mc                   Disassemble the e500mc instructions\\n"" )"		5593446	0					
ANR	5593487	Callee	fprintf		5593446	0					
ANR	5593488	Identifier	fprintf		5593446	0					
ANR	5593489	ArgumentList	stream		5593446	1					
ANR	5593490	Argument	stream		5593446	0					
ANR	5593491	Identifier	stream		5593446	0					
ANR	5593492	Argument	"""  e500mc                   Disassemble the e500mc instructions\\n"""		5593446	1					
ANR	5593493	PrimaryExpression	"""  e500mc                   Disassemble the e500mc instructions\\n"""		5593446	0					
ANR	5593494	ExpressionStatement	"fprintf ( stream , ""  440                      Disassemble the 440 instructions\\n"" )"	417:2:13424:13505	5593446	5	True				
ANR	5593495	CallExpression	"fprintf ( stream , ""  440                      Disassemble the 440 instructions\\n"" )"		5593446	0					
ANR	5593496	Callee	fprintf		5593446	0					
ANR	5593497	Identifier	fprintf		5593446	0					
ANR	5593498	ArgumentList	stream		5593446	1					
ANR	5593499	Argument	stream		5593446	0					
ANR	5593500	Identifier	stream		5593446	0					
ANR	5593501	Argument	"""  440                      Disassemble the 440 instructions\\n"""		5593446	1					
ANR	5593502	PrimaryExpression	"""  440                      Disassemble the 440 instructions\\n"""		5593446	0					
ANR	5593503	ExpressionStatement	"fprintf ( stream , ""  464                      Disassemble the 464 instructions\\n"" )"	418:2:13509:13590	5593446	6	True				
ANR	5593504	CallExpression	"fprintf ( stream , ""  464                      Disassemble the 464 instructions\\n"" )"		5593446	0					
ANR	5593505	Callee	fprintf		5593446	0					
ANR	5593506	Identifier	fprintf		5593446	0					
ANR	5593507	ArgumentList	stream		5593446	1					
ANR	5593508	Argument	stream		5593446	0					
ANR	5593509	Identifier	stream		5593446	0					
ANR	5593510	Argument	"""  464                      Disassemble the 464 instructions\\n"""		5593446	1					
ANR	5593511	PrimaryExpression	"""  464                      Disassemble the 464 instructions\\n"""		5593446	0					
ANR	5593512	ExpressionStatement	"fprintf ( stream , ""  efs                      Disassemble the EFS instructions\\n"" )"	419:2:13594:13675	5593446	7	True				
ANR	5593513	CallExpression	"fprintf ( stream , ""  efs                      Disassemble the EFS instructions\\n"" )"		5593446	0					
ANR	5593514	Callee	fprintf		5593446	0					
ANR	5593515	Identifier	fprintf		5593446	0					
ANR	5593516	ArgumentList	stream		5593446	1					
ANR	5593517	Argument	stream		5593446	0					
ANR	5593518	Identifier	stream		5593446	0					
ANR	5593519	Argument	"""  efs                      Disassemble the EFS instructions\\n"""		5593446	1					
ANR	5593520	PrimaryExpression	"""  efs                      Disassemble the EFS instructions\\n"""		5593446	0					
ANR	5593521	ExpressionStatement	"fprintf ( stream , ""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"" )"	420:2:13679:13779	5593446	8	True				
ANR	5593522	CallExpression	"fprintf ( stream , ""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"" )"		5593446	0					
ANR	5593523	Callee	fprintf		5593446	0					
ANR	5593524	Identifier	fprintf		5593446	0					
ANR	5593525	ArgumentList	stream		5593446	1					
ANR	5593526	Argument	stream		5593446	0					
ANR	5593527	Identifier	stream		5593446	0					
ANR	5593528	Argument	"""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"""		5593446	1					
ANR	5593529	PrimaryExpression	"""  ppcps                    Disassemble the PowerPC paired singles instructions\\n"""		5593446	0					
ANR	5593530	ExpressionStatement	"fprintf ( stream , ""  power4                   Disassemble the Power4 instructions\\n"" )"	421:2:13783:13867	5593446	9	True				
ANR	5593531	CallExpression	"fprintf ( stream , ""  power4                   Disassemble the Power4 instructions\\n"" )"		5593446	0					
ANR	5593532	Callee	fprintf		5593446	0					
ANR	5593533	Identifier	fprintf		5593446	0					
ANR	5593534	ArgumentList	stream		5593446	1					
ANR	5593535	Argument	stream		5593446	0					
ANR	5593536	Identifier	stream		5593446	0					
ANR	5593537	Argument	"""  power4                   Disassemble the Power4 instructions\\n"""		5593446	1					
ANR	5593538	PrimaryExpression	"""  power4                   Disassemble the Power4 instructions\\n"""		5593446	0					
ANR	5593539	ExpressionStatement	"fprintf ( stream , ""  power5                   Disassemble the Power5 instructions\\n"" )"	422:2:13871:13955	5593446	10	True				
ANR	5593540	CallExpression	"fprintf ( stream , ""  power5                   Disassemble the Power5 instructions\\n"" )"		5593446	0					
ANR	5593541	Callee	fprintf		5593446	0					
ANR	5593542	Identifier	fprintf		5593446	0					
ANR	5593543	ArgumentList	stream		5593446	1					
ANR	5593544	Argument	stream		5593446	0					
ANR	5593545	Identifier	stream		5593446	0					
ANR	5593546	Argument	"""  power5                   Disassemble the Power5 instructions\\n"""		5593446	1					
ANR	5593547	PrimaryExpression	"""  power5                   Disassemble the Power5 instructions\\n"""		5593446	0					
ANR	5593548	ExpressionStatement	"fprintf ( stream , ""  power6                   Disassemble the Power6 instructions\\n"" )"	423:2:13959:14043	5593446	11	True				
ANR	5593549	CallExpression	"fprintf ( stream , ""  power6                   Disassemble the Power6 instructions\\n"" )"		5593446	0					
ANR	5593550	Callee	fprintf		5593446	0					
ANR	5593551	Identifier	fprintf		5593446	0					
ANR	5593552	ArgumentList	stream		5593446	1					
ANR	5593553	Argument	stream		5593446	0					
ANR	5593554	Identifier	stream		5593446	0					
ANR	5593555	Argument	"""  power6                   Disassemble the Power6 instructions\\n"""		5593446	1					
ANR	5593556	PrimaryExpression	"""  power6                   Disassemble the Power6 instructions\\n"""		5593446	0					
ANR	5593557	ExpressionStatement	"fprintf ( stream , ""  power7                   Disassemble the Power7 instructions\\n"" )"	424:2:14047:14131	5593446	12	True				
ANR	5593558	CallExpression	"fprintf ( stream , ""  power7                   Disassemble the Power7 instructions\\n"" )"		5593446	0					
ANR	5593559	Callee	fprintf		5593446	0					
ANR	5593560	Identifier	fprintf		5593446	0					
ANR	5593561	ArgumentList	stream		5593446	1					
ANR	5593562	Argument	stream		5593446	0					
ANR	5593563	Identifier	stream		5593446	0					
ANR	5593564	Argument	"""  power7                   Disassemble the Power7 instructions\\n"""		5593446	1					
ANR	5593565	PrimaryExpression	"""  power7                   Disassemble the Power7 instructions\\n"""		5593446	0					
ANR	5593566	ExpressionStatement	"fprintf ( stream , ""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"" )"	425:2:14135:14232	5593446	13	True				
ANR	5593567	CallExpression	"fprintf ( stream , ""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"" )"		5593446	0					
ANR	5593568	Callee	fprintf		5593446	0					
ANR	5593569	Identifier	fprintf		5593446	0					
ANR	5593570	ArgumentList	stream		5593446	1					
ANR	5593571	Argument	stream		5593446	0					
ANR	5593572	Identifier	stream		5593446	0					
ANR	5593573	Argument	"""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"""		5593446	1					
ANR	5593574	PrimaryExpression	"""  vsx                      Disassemble the Vector-Scalar (VSX) instructions\\n"""		5593446	0					
ANR	5593575	ExpressionStatement	"fprintf ( stream , ""  32                       Do not disassemble 64-bit instructions\\n"" )"	426:2:14236:14323	5593446	14	True				
ANR	5593576	CallExpression	"fprintf ( stream , ""  32                       Do not disassemble 64-bit instructions\\n"" )"		5593446	0					
ANR	5593577	Callee	fprintf		5593446	0					
ANR	5593578	Identifier	fprintf		5593446	0					
ANR	5593579	ArgumentList	stream		5593446	1					
ANR	5593580	Argument	stream		5593446	0					
ANR	5593581	Identifier	stream		5593446	0					
ANR	5593582	Argument	"""  32                       Do not disassemble 64-bit instructions\\n"""		5593446	1					
ANR	5593583	PrimaryExpression	"""  32                       Do not disassemble 64-bit instructions\\n"""		5593446	0					
ANR	5593584	ExpressionStatement	"fprintf ( stream , ""  64                       Allow disassembly of 64-bit instructions\\n"" )"	427:2:14327:14416	5593446	15	True				
ANR	5593585	CallExpression	"fprintf ( stream , ""  64                       Allow disassembly of 64-bit instructions\\n"" )"		5593446	0					
ANR	5593586	Callee	fprintf		5593446	0					
ANR	5593587	Identifier	fprintf		5593446	0					
ANR	5593588	ArgumentList	stream		5593446	1					
ANR	5593589	Argument	stream		5593446	0					
ANR	5593590	Identifier	stream		5593446	0					
ANR	5593591	Argument	"""  64                       Allow disassembly of 64-bit instructions\\n"""		5593446	1					
ANR	5593592	PrimaryExpression	"""  64                       Allow disassembly of 64-bit instructions\\n"""		5593446	0					
ANR	5593593	ReturnType	void		5593446	1					
ANR	5593594	Identifier	print_ppc_disassembler_options		5593446	2					
ANR	5593595	ParameterList	FILE * stream		5593446	3					
ANR	5593596	Parameter	FILE * stream	407:32:12936:12947	5593446	0	True				
ANR	5593597	ParameterType	FILE *		5593446	0					
ANR	5593598	Identifier	stream		5593446	1					
ANR	5593599	CFGEntryNode	ENTRY		5593446		True				
ANR	5593600	CFGExitNode	EXIT		5593446		True				
ANR	5593601	Symbol	stream		5593446						
