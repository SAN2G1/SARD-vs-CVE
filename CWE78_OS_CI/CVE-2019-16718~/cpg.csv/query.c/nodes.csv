command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5621165	File	data/converged/CVE-2019-16718~_radare2/query.c								
ANR	5621166	ClassDef	<unnamed>	11:8:192:242							
ANR	5621167	DeclStmt									
ANR	5621168	Decl							char	char *	buf
ANR	5621169	DeclStmt									
ANR	5621170	Decl							int	int	len
ANR	5621171	DeclStmt									
ANR	5621172	Decl							int	int	size
ANR	5621173	DeclStmt									
ANR	5621174	Decl									StrBuf
ANR	5621175	Function	strbuf_new	17:0:245:312							
ANR	5621176	FunctionDef	strbuf_new ()		5621175	0					
ANR	5621177	CompoundStatement		17:28:273:312	5621175	0					
ANR	5621178	ReturnStatement	"return calloc ( sizeof ( StrBuf ) , 1 ) ;"	18:1:276:310	5621175	0	True				
ANR	5621179	CallExpression	"calloc ( sizeof ( StrBuf ) , 1 )"		5621175	0					
ANR	5621180	Callee	calloc		5621175	0					
ANR	5621181	Identifier	calloc		5621175	0					
ANR	5621182	ArgumentList	sizeof ( StrBuf )		5621175	1					
ANR	5621183	Argument	sizeof ( StrBuf )		5621175	0					
ANR	5621184	SizeofExpression	sizeof ( StrBuf )		5621175	0					
ANR	5621185	Sizeof	sizeof		5621175	0					
ANR	5621186	SizeofOperand	StrBuf		5621175	1					
ANR	5621187	Argument	1		5621175	1					
ANR	5621188	PrimaryExpression	1		5621175	0					
ANR	5621189	ReturnType	static StrBuf *		5621175	1					
ANR	5621190	Identifier	strbuf_new		5621175	2					
ANR	5621191	ParameterList			5621175	3					
ANR	5621192	CFGEntryNode	ENTRY		5621175		True				
ANR	5621193	CFGExitNode	EXIT		5621175		True				
ANR	5621194	Symbol	calloc		5621175						
ANR	5621195	Function	strbuf_append	23:0:346:979							
ANR	5621196	FunctionDef	"strbuf_append (StrBuf * sb , const char * str , const int nl)"		5621195	0					
ANR	5621197	CompoundStatement		23:72:418:979	5621195	0					
ANR	5621198	IfStatement	if ( ! sb || ! str || nl < 0 )		5621195	0					
ANR	5621199	Condition	! sb || ! str || nl < 0	24:5:425:445	5621195	0	True				
ANR	5621200	OrExpression	! sb || ! str || nl < 0		5621195	0		||			
ANR	5621201	UnaryOperationExpression	! sb		5621195	0					
ANR	5621202	UnaryOperator	!		5621195	0					
ANR	5621203	Identifier	sb		5621195	1					
ANR	5621204	OrExpression	! str || nl < 0		5621195	1		||			
ANR	5621205	UnaryOperationExpression	! str		5621195	0					
ANR	5621206	UnaryOperator	!		5621195	0					
ANR	5621207	Identifier	str		5621195	1					
ANR	5621208	RelationalExpression	nl < 0		5621195	1		<			
ANR	5621209	Identifier	nl		5621195	0					
ANR	5621210	PrimaryExpression	0		5621195	1					
ANR	5621211	CompoundStatement		2:28:29:29	5621195	1					
ANR	5621212	ReturnStatement	return sb ;	25:2:452:461	5621195	0	True				
ANR	5621213	Identifier	sb		5621195	0					
ANR	5621214	IdentifierDeclStatement	int len = strlen ( str ) ;	27:1:467:489	5621195	1	True				
ANR	5621215	IdentifierDecl	len = strlen ( str )		5621195	0					
ANR	5621216	IdentifierDeclType	int		5621195	0					
ANR	5621217	Identifier	len		5621195	1					
ANR	5621218	AssignmentExpression	len = strlen ( str )		5621195	2		=			
ANR	5621219	Identifier	len		5621195	0					
ANR	5621220	CallExpression	strlen ( str )		5621195	1					
ANR	5621221	Callee	strlen		5621195	0					
ANR	5621222	Identifier	strlen		5621195	0					
ANR	5621223	ArgumentList	str		5621195	1					
ANR	5621224	Argument	str		5621195	0					
ANR	5621225	Identifier	str		5621195	0					
ANR	5621226	IfStatement	if ( ( sb -> len + len + 2 ) >= sb -> size )		5621195	2					
ANR	5621227	Condition	( sb -> len + len + 2 ) >= sb -> size	28:5:496:526	5621195	0	True				
ANR	5621228	RelationalExpression	( sb -> len + len + 2 ) >= sb -> size		5621195	0		>=			
ANR	5621229	AdditiveExpression	sb -> len + len + 2		5621195	0		+			
ANR	5621230	PtrMemberAccess	sb -> len		5621195	0					
ANR	5621231	Identifier	sb		5621195	0					
ANR	5621232	Identifier	len		5621195	1					
ANR	5621233	AdditiveExpression	len + 2		5621195	1		+			
ANR	5621234	Identifier	len		5621195	0					
ANR	5621235	PrimaryExpression	2		5621195	1					
ANR	5621236	PtrMemberAccess	sb -> size		5621195	1					
ANR	5621237	Identifier	sb		5621195	0					
ANR	5621238	Identifier	size		5621195	1					
ANR	5621239	CompoundStatement		8:2:152:188	5621195	1					
ANR	5621240	IdentifierDeclStatement	int newsize = sb -> size + len + 256 ;	29:2:533:567	5621195	0	True				
ANR	5621241	IdentifierDecl	newsize = sb -> size + len + 256		5621195	0					
ANR	5621242	IdentifierDeclType	int		5621195	0					
ANR	5621243	Identifier	newsize		5621195	1					
ANR	5621244	AssignmentExpression	newsize = sb -> size + len + 256		5621195	2		=			
ANR	5621245	Identifier	newsize		5621195	0					
ANR	5621246	AdditiveExpression	sb -> size + len + 256		5621195	1		+			
ANR	5621247	PtrMemberAccess	sb -> size		5621195	0					
ANR	5621248	Identifier	sb		5621195	0					
ANR	5621249	Identifier	size		5621195	1					
ANR	5621250	AdditiveExpression	len + 256		5621195	1		+			
ANR	5621251	Identifier	len		5621195	0					
ANR	5621252	PrimaryExpression	256		5621195	1					
ANR	5621253	IdentifierDeclStatement	"char * b = realloc ( sb -> buf , newsize ) ;"	30:2:571:607	5621195	1	True				
ANR	5621254	IdentifierDecl	"* b = realloc ( sb -> buf , newsize )"		5621195	0					
ANR	5621255	IdentifierDeclType	char *		5621195	0					
ANR	5621256	Identifier	b		5621195	1					
ANR	5621257	AssignmentExpression	"* b = realloc ( sb -> buf , newsize )"		5621195	2		=			
ANR	5621258	Identifier	b		5621195	0					
ANR	5621259	CallExpression	"realloc ( sb -> buf , newsize )"		5621195	1					
ANR	5621260	Callee	realloc		5621195	0					
ANR	5621261	Identifier	realloc		5621195	0					
ANR	5621262	ArgumentList	sb -> buf		5621195	1					
ANR	5621263	Argument	sb -> buf		5621195	0					
ANR	5621264	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621265	Identifier	sb		5621195	0					
ANR	5621266	Identifier	buf		5621195	1					
ANR	5621267	Argument	newsize		5621195	1					
ANR	5621268	Identifier	newsize		5621195	0					
ANR	5621269	IfStatement	if ( ! b )		5621195	2					
ANR	5621270	Condition	! b	32:6:680:681	5621195	0	True				
ANR	5621271	UnaryOperationExpression	! b		5621195	0					
ANR	5621272	UnaryOperator	!		5621195	0					
ANR	5621273	Identifier	b		5621195	1					
ANR	5621274	CompoundStatement		10:10:265:265	5621195	1					
ANR	5621275	ReturnStatement	return NULL ;	33:3:689:700	5621195	0	True				
ANR	5621276	Identifier	NULL		5621195	0					
ANR	5621277	ExpressionStatement	sb -> buf = b	35:2:708:719	5621195	3	True				
ANR	5621278	AssignmentExpression	sb -> buf = b		5621195	0		=			
ANR	5621279	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621280	Identifier	sb		5621195	0					
ANR	5621281	Identifier	buf		5621195	1					
ANR	5621282	Identifier	b		5621195	1					
ANR	5621283	ExpressionStatement	sb -> size = newsize	36:2:723:741	5621195	4	True				
ANR	5621284	AssignmentExpression	sb -> size = newsize		5621195	0		=			
ANR	5621285	PtrMemberAccess	sb -> size		5621195	0					
ANR	5621286	Identifier	sb		5621195	0					
ANR	5621287	Identifier	size		5621195	1					
ANR	5621288	Identifier	newsize		5621195	1					
ANR	5621289	IfStatement	if ( sb -> buf && str )		5621195	3					
ANR	5621290	Condition	sb -> buf && str	38:5:751:764	5621195	0	True				
ANR	5621291	AndExpression	sb -> buf && str		5621195	0		&&			
ANR	5621292	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621293	Identifier	sb		5621195	0					
ANR	5621294	Identifier	buf		5621195	1					
ANR	5621295	Identifier	str		5621195	1					
ANR	5621296	CompoundStatement		16:21:348:348	5621195	1					
ANR	5621297	ExpressionStatement	"memcpy ( sb -> buf + sb -> len , str , len )"	39:2:771:807	5621195	0	True				
ANR	5621298	CallExpression	"memcpy ( sb -> buf + sb -> len , str , len )"		5621195	0					
ANR	5621299	Callee	memcpy		5621195	0					
ANR	5621300	Identifier	memcpy		5621195	0					
ANR	5621301	ArgumentList	sb -> buf + sb -> len		5621195	1					
ANR	5621302	Argument	sb -> buf + sb -> len		5621195	0					
ANR	5621303	AdditiveExpression	sb -> buf + sb -> len		5621195	0		+			
ANR	5621304	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621305	Identifier	sb		5621195	0					
ANR	5621306	Identifier	buf		5621195	1					
ANR	5621307	PtrMemberAccess	sb -> len		5621195	1					
ANR	5621308	Identifier	sb		5621195	0					
ANR	5621309	Identifier	len		5621195	1					
ANR	5621310	Argument	str		5621195	1					
ANR	5621311	Identifier	str		5621195	0					
ANR	5621312	Argument	len		5621195	2					
ANR	5621313	Identifier	len		5621195	0					
ANR	5621314	ExpressionStatement	sb -> len += len	40:2:811:825	5621195	1	True				
ANR	5621315	AssignmentExpression	sb -> len += len		5621195	0		+=			
ANR	5621316	PtrMemberAccess	sb -> len		5621195	0					
ANR	5621317	Identifier	sb		5621195	0					
ANR	5621318	Identifier	len		5621195	1					
ANR	5621319	Identifier	len		5621195	1					
ANR	5621320	IfStatement	if ( sb -> buf && nl )		5621195	4					
ANR	5621321	Condition	sb -> buf && nl	43:5:859:871	5621195	0	True				
ANR	5621322	AndExpression	sb -> buf && nl		5621195	0		&&			
ANR	5621323	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621324	Identifier	sb		5621195	0					
ANR	5621325	Identifier	buf		5621195	1					
ANR	5621326	Identifier	nl		5621195	1					
ANR	5621327	CompoundStatement		21:20:455:455	5621195	1					
ANR	5621328	ExpressionStatement	sb -> buf [ sb -> len ++ ] = '\\n'	44:2:878:903	5621195	0	True				
ANR	5621329	AssignmentExpression	sb -> buf [ sb -> len ++ ] = '\\n'		5621195	0		=			
ANR	5621330	ArrayIndexing	sb -> buf [ sb -> len ++ ]		5621195	0					
ANR	5621331	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621332	Identifier	sb		5621195	0					
ANR	5621333	Identifier	buf		5621195	1					
ANR	5621334	PostIncDecOperationExpression	sb -> len ++		5621195	1					
ANR	5621335	PtrMemberAccess	sb -> len		5621195	0					
ANR	5621336	Identifier	sb		5621195	0					
ANR	5621337	Identifier	len		5621195	1					
ANR	5621338	IncDec	++		5621195	1					
ANR	5621339	PrimaryExpression	'\\n'		5621195	1					
ANR	5621340	ExpressionStatement	len ++	45:2:907:912	5621195	1	True				
ANR	5621341	PostIncDecOperationExpression	len ++		5621195	0					
ANR	5621342	Identifier	len		5621195	0					
ANR	5621343	IncDec	++		5621195	1					
ANR	5621344	IfStatement	if ( sb -> buf )		5621195	5					
ANR	5621345	Condition	sb -> buf	48:5:929:935	5621195	0	True				
ANR	5621346	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621347	Identifier	sb		5621195	0					
ANR	5621348	Identifier	buf		5621195	1					
ANR	5621349	CompoundStatement		26:14:519:519	5621195	1					
ANR	5621350	ExpressionStatement	sb -> buf [ sb -> len ] = 0	49:2:942:962	5621195	0	True				
ANR	5621351	AssignmentExpression	sb -> buf [ sb -> len ] = 0		5621195	0		=			
ANR	5621352	ArrayIndexing	sb -> buf [ sb -> len ]		5621195	0					
ANR	5621353	PtrMemberAccess	sb -> buf		5621195	0					
ANR	5621354	Identifier	sb		5621195	0					
ANR	5621355	Identifier	buf		5621195	1					
ANR	5621356	PtrMemberAccess	sb -> len		5621195	1					
ANR	5621357	Identifier	sb		5621195	0					
ANR	5621358	Identifier	len		5621195	1					
ANR	5621359	PrimaryExpression	0		5621195	1					
ANR	5621360	ReturnStatement	return sb ;	51:1:968:977	5621195	6	True				
ANR	5621361	Identifier	sb		5621195	0					
ANR	5621362	ReturnType	static StrBuf *		5621195	1					
ANR	5621363	Identifier	strbuf_append		5621195	2					
ANR	5621364	ParameterList	"StrBuf * sb , const char * str , const int nl"		5621195	3					
ANR	5621365	Parameter	StrBuf * sb	23:29:375:384	5621195	0	True				
ANR	5621366	ParameterType	StrBuf *		5621195	0					
ANR	5621367	Identifier	sb		5621195	1					
ANR	5621368	Parameter	const char * str	23:41:387:401	5621195	1	True				
ANR	5621369	ParameterType	const char *		5621195	0					
ANR	5621370	Identifier	str		5621195	1					
ANR	5621371	Parameter	const int nl	23:58:404:415	5621195	2	True				
ANR	5621372	ParameterType	const int		5621195	0					
ANR	5621373	Identifier	nl		5621195	1					
ANR	5621374	CFGEntryNode	ENTRY		5621195		True				
ANR	5621375	CFGExitNode	EXIT		5621195		True				
ANR	5621376	Symbol	b		5621195						
ANR	5621377	Symbol	NULL		5621195						
ANR	5621378	Symbol	newsize		5621195						
ANR	5621379	Symbol	sb -> buf		5621195						
ANR	5621380	Symbol	sb -> len		5621195						
ANR	5621381	Symbol	realloc		5621195						
ANR	5621382	Symbol	sb -> size		5621195						
ANR	5621383	Symbol	* sb -> len		5621195						
ANR	5621384	Symbol	sb		5621195						
ANR	5621385	Symbol	str		5621195						
ANR	5621386	Symbol	* sb -> buf		5621195						
ANR	5621387	Symbol	strlen		5621195						
ANR	5621388	Symbol	len		5621195						
ANR	5621389	Symbol	* sb		5621195						
ANR	5621390	Symbol	* * sb		5621195						
ANR	5621391	Symbol	nl		5621195						
ANR	5621392	Function	strbuf_free	54:0:982:1066							
ANR	5621393	FunctionDef	strbuf_free (StrBuf * sb)		5621392	0					
ANR	5621394	CompoundStatement		54:39:1021:1066	5621392	0					
ANR	5621395	ExpressionStatement	free ( sb -> buf )	55:1:1024:1038	5621392	0	True				
ANR	5621396	CallExpression	free ( sb -> buf )		5621392	0					
ANR	5621397	Callee	free		5621392	0					
ANR	5621398	Identifier	free		5621392	0					
ANR	5621399	ArgumentList	sb -> buf		5621392	1					
ANR	5621400	Argument	sb -> buf		5621392	0					
ANR	5621401	PtrMemberAccess	sb -> buf		5621392	0					
ANR	5621402	Identifier	sb		5621392	0					
ANR	5621403	Identifier	buf		5621392	1					
ANR	5621404	ExpressionStatement	free ( sb )	56:1:1041:1050	5621392	1	True				
ANR	5621405	CallExpression	free ( sb )		5621392	0					
ANR	5621406	Callee	free		5621392	0					
ANR	5621407	Identifier	free		5621392	0					
ANR	5621408	ArgumentList	sb		5621392	1					
ANR	5621409	Argument	sb		5621392	0					
ANR	5621410	Identifier	sb		5621392	0					
ANR	5621411	ReturnStatement	return NULL ;	57:1:1053:1064	5621392	2	True				
ANR	5621412	Identifier	NULL		5621392	0					
ANR	5621413	ReturnType	static StrBuf *		5621392	1					
ANR	5621414	Identifier	strbuf_free		5621392	2					
ANR	5621415	ParameterList	StrBuf * sb		5621392	3					
ANR	5621416	Parameter	StrBuf * sb	54:27:1009:1018	5621392	0	True				
ANR	5621417	ParameterType	StrBuf *		5621392	0					
ANR	5621418	Identifier	sb		5621392	1					
ANR	5621419	CFGEntryNode	ENTRY		5621392		True				
ANR	5621420	CFGExitNode	EXIT		5621392		True				
ANR	5621421	Symbol	NULL		5621392						
ANR	5621422	Symbol	* sb		5621392						
ANR	5621423	Symbol	sb -> buf		5621392						
ANR	5621424	Symbol	sb		5621392						
ANR	5621425	Function	sdb_queryf	60:0:1069:1349							
ANR	5621426	FunctionDef	"sdb_queryf (Sdb * s , const char * fmt)"		5621425	0					
ANR	5621427	CompoundStatement		60:54:1123:1349	5621425	0					
ANR	5621428	IdentifierDeclStatement	char string [ 4096 ] ;	61:8:1133:1150	5621425	0	True				
ANR	5621429	IdentifierDecl	string [ 4096 ]		5621425	0					
ANR	5621430	IdentifierDeclType	char [ 4096 ]		5621425	0					
ANR	5621431	Identifier	string		5621425	1					
ANR	5621432	PrimaryExpression	4096		5621425	2					
ANR	5621433	IdentifierDeclStatement	int ret ;	62:8:1160:1167	5621425	1	True				
ANR	5621434	IdentifierDecl	ret		5621425	0					
ANR	5621435	IdentifierDeclType	int		5621425	0					
ANR	5621436	Identifier	ret		5621425	1					
ANR	5621437	IdentifierDeclStatement	va_list ap ;	63:8:1177:1187	5621425	2	True				
ANR	5621438	IdentifierDecl	ap		5621425	0					
ANR	5621439	IdentifierDeclType	va_list		5621425	0					
ANR	5621440	Identifier	ap		5621425	1					
ANR	5621441	ExpressionStatement	"va_start ( ap , fmt )"	64:8:1197:1215	5621425	3	True				
ANR	5621442	CallExpression	"va_start ( ap , fmt )"		5621425	0					
ANR	5621443	Callee	va_start		5621425	0					
ANR	5621444	Identifier	va_start		5621425	0					
ANR	5621445	ArgumentList	ap		5621425	1					
ANR	5621446	Argument	ap		5621425	0					
ANR	5621447	Identifier	ap		5621425	0					
ANR	5621448	Argument	fmt		5621425	1					
ANR	5621449	Identifier	fmt		5621425	0					
ANR	5621450	ExpressionStatement	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"	65:8:1225:1269	5621425	4	True				
ANR	5621451	CallExpression	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"		5621425	0					
ANR	5621452	Callee	vsnprintf		5621425	0					
ANR	5621453	Identifier	vsnprintf		5621425	0					
ANR	5621454	ArgumentList	string		5621425	1					
ANR	5621455	Argument	string		5621425	0					
ANR	5621456	Identifier	string		5621425	0					
ANR	5621457	Argument	sizeof ( string )		5621425	1					
ANR	5621458	SizeofExpression	sizeof ( string )		5621425	0					
ANR	5621459	Sizeof	sizeof		5621425	0					
ANR	5621460	SizeofOperand	string		5621425	1					
ANR	5621461	Argument	fmt		5621425	2					
ANR	5621462	Identifier	fmt		5621425	0					
ANR	5621463	Argument	ap		5621425	3					
ANR	5621464	Identifier	ap		5621425	0					
ANR	5621465	ExpressionStatement	"ret = sdb_query ( s , string )"	66:8:1279:1306	5621425	5	True				
ANR	5621466	AssignmentExpression	"ret = sdb_query ( s , string )"		5621425	0		=			
ANR	5621467	Identifier	ret		5621425	0					
ANR	5621468	CallExpression	"sdb_query ( s , string )"		5621425	1					
ANR	5621469	Callee	sdb_query		5621425	0					
ANR	5621470	Identifier	sdb_query		5621425	0					
ANR	5621471	ArgumentList	s		5621425	1					
ANR	5621472	Argument	s		5621425	0					
ANR	5621473	Identifier	s		5621425	0					
ANR	5621474	Argument	string		5621425	1					
ANR	5621475	Identifier	string		5621425	0					
ANR	5621476	ExpressionStatement	va_end ( ap )	67:8:1316:1327	5621425	6	True				
ANR	5621477	CallExpression	va_end ( ap )		5621425	0					
ANR	5621478	Callee	va_end		5621425	0					
ANR	5621479	Identifier	va_end		5621425	0					
ANR	5621480	ArgumentList	ap		5621425	1					
ANR	5621481	Argument	ap		5621425	0					
ANR	5621482	Identifier	ap		5621425	0					
ANR	5621483	ReturnStatement	return ret ;	68:8:1337:1347	5621425	7	True				
ANR	5621484	Identifier	ret		5621425	0					
ANR	5621485	ReturnType	SDB_API int		5621425	1					
ANR	5621486	Identifier	sdb_queryf		5621425	2					
ANR	5621487	ParameterList	"Sdb * s , const char * fmt"		5621425	3					
ANR	5621488	Parameter	Sdb * s	60:24:1093:1098	5621425	0	True				
ANR	5621489	ParameterType	Sdb *		5621425	0					
ANR	5621490	Identifier	s		5621425	1					
ANR	5621491	Parameter	const char * fmt	60:32:1101:1115	5621425	1	True				
ANR	5621492	ParameterType	const char *		5621425	0					
ANR	5621493	Identifier	fmt		5621425	1					
ANR	5621494	CFGEntryNode	ENTRY		5621425		True				
ANR	5621495	CFGExitNode	EXIT		5621425		True				
ANR	5621496	Symbol	ret		5621425						
ANR	5621497	Symbol	s		5621425						
ANR	5621498	Symbol	string		5621425						
ANR	5621499	Symbol	sdb_query		5621425						
ANR	5621500	Symbol	fmt		5621425						
ANR	5621501	Symbol	ap		5621425						
ANR	5621502	Function	sdb_querysf	71:0:1352:1677							
ANR	5621503	FunctionDef	"sdb_querysf (Sdb * s , char * buf , size_t buflen , const char * fmt)"		5621502	0					
ANR	5621504	CompoundStatement		71:83:1435:1677	5621502	0					
ANR	5621505	IdentifierDeclStatement	char string [ 4096 ] ;	72:8:1445:1462	5621502	0	True				
ANR	5621506	IdentifierDecl	string [ 4096 ]		5621502	0					
ANR	5621507	IdentifierDeclType	char [ 4096 ]		5621502	0					
ANR	5621508	Identifier	string		5621502	1					
ANR	5621509	PrimaryExpression	4096		5621502	2					
ANR	5621510	IdentifierDeclStatement	char * ret ;	73:8:1472:1481	5621502	1	True				
ANR	5621511	IdentifierDecl	* ret		5621502	0					
ANR	5621512	IdentifierDeclType	char *		5621502	0					
ANR	5621513	Identifier	ret		5621502	1					
ANR	5621514	IdentifierDeclStatement	va_list ap ;	74:8:1491:1501	5621502	2	True				
ANR	5621515	IdentifierDecl	ap		5621502	0					
ANR	5621516	IdentifierDeclType	va_list		5621502	0					
ANR	5621517	Identifier	ap		5621502	1					
ANR	5621518	ExpressionStatement	"va_start ( ap , fmt )"	75:8:1511:1529	5621502	3	True				
ANR	5621519	CallExpression	"va_start ( ap , fmt )"		5621502	0					
ANR	5621520	Callee	va_start		5621502	0					
ANR	5621521	Identifier	va_start		5621502	0					
ANR	5621522	ArgumentList	ap		5621502	1					
ANR	5621523	Argument	ap		5621502	0					
ANR	5621524	Identifier	ap		5621502	0					
ANR	5621525	Argument	fmt		5621502	1					
ANR	5621526	Identifier	fmt		5621502	0					
ANR	5621527	ExpressionStatement	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"	76:8:1539:1583	5621502	4	True				
ANR	5621528	CallExpression	"vsnprintf ( string , sizeof ( string ) , fmt , ap )"		5621502	0					
ANR	5621529	Callee	vsnprintf		5621502	0					
ANR	5621530	Identifier	vsnprintf		5621502	0					
ANR	5621531	ArgumentList	string		5621502	1					
ANR	5621532	Argument	string		5621502	0					
ANR	5621533	Identifier	string		5621502	0					
ANR	5621534	Argument	sizeof ( string )		5621502	1					
ANR	5621535	SizeofExpression	sizeof ( string )		5621502	0					
ANR	5621536	Sizeof	sizeof		5621502	0					
ANR	5621537	SizeofOperand	string		5621502	1					
ANR	5621538	Argument	fmt		5621502	2					
ANR	5621539	Identifier	fmt		5621502	0					
ANR	5621540	Argument	ap		5621502	3					
ANR	5621541	Identifier	ap		5621502	0					
ANR	5621542	ExpressionStatement	"ret = sdb_querys ( s , buf , buflen , string )"	77:8:1593:1634	5621502	5	True				
ANR	5621543	AssignmentExpression	"ret = sdb_querys ( s , buf , buflen , string )"		5621502	0		=			
ANR	5621544	Identifier	ret		5621502	0					
ANR	5621545	CallExpression	"sdb_querys ( s , buf , buflen , string )"		5621502	1					
ANR	5621546	Callee	sdb_querys		5621502	0					
ANR	5621547	Identifier	sdb_querys		5621502	0					
ANR	5621548	ArgumentList	s		5621502	1					
ANR	5621549	Argument	s		5621502	0					
ANR	5621550	Identifier	s		5621502	0					
ANR	5621551	Argument	buf		5621502	1					
ANR	5621552	Identifier	buf		5621502	0					
ANR	5621553	Argument	buflen		5621502	2					
ANR	5621554	Identifier	buflen		5621502	0					
ANR	5621555	Argument	string		5621502	3					
ANR	5621556	Identifier	string		5621502	0					
ANR	5621557	ExpressionStatement	va_end ( ap )	78:8:1644:1655	5621502	6	True				
ANR	5621558	CallExpression	va_end ( ap )		5621502	0					
ANR	5621559	Callee	va_end		5621502	0					
ANR	5621560	Identifier	va_end		5621502	0					
ANR	5621561	ArgumentList	ap		5621502	1					
ANR	5621562	Argument	ap		5621502	0					
ANR	5621563	Identifier	ap		5621502	0					
ANR	5621564	ReturnStatement	return ret ;	79:8:1665:1675	5621502	7	True				
ANR	5621565	Identifier	ret		5621502	0					
ANR	5621566	ReturnType	SDB_API char *		5621502	1					
ANR	5621567	Identifier	sdb_querysf		5621502	2					
ANR	5621568	ParameterList	"Sdb * s , char * buf , size_t buflen , const char * fmt"		5621502	3					
ANR	5621569	Parameter	Sdb * s	71:27:1379:1384	5621502	0	True				
ANR	5621570	ParameterType	Sdb *		5621502	0					
ANR	5621571	Identifier	s		5621502	1					
ANR	5621572	Parameter	char * buf	71:35:1387:1395	5621502	1	True				
ANR	5621573	ParameterType	char *		5621502	0					
ANR	5621574	Identifier	buf		5621502	1					
ANR	5621575	Parameter	size_t buflen	71:46:1398:1410	5621502	2	True				
ANR	5621576	ParameterType	size_t		5621502	0					
ANR	5621577	Identifier	buflen		5621502	1					
ANR	5621578	Parameter	const char * fmt	71:61:1413:1427	5621502	3	True				
ANR	5621579	ParameterType	const char *		5621502	0					
ANR	5621580	Identifier	fmt		5621502	1					
ANR	5621581	CFGEntryNode	ENTRY		5621502		True				
ANR	5621582	CFGExitNode	EXIT		5621502		True				
ANR	5621583	Symbol	ret		5621502						
ANR	5621584	Symbol	buf		5621502						
ANR	5621585	Symbol	s		5621502						
ANR	5621586	Symbol	string		5621502						
ANR	5621587	Symbol	buflen		5621502						
ANR	5621588	Symbol	sdb_querys		5621502						
ANR	5621589	Symbol	fmt		5621502						
ANR	5621590	Symbol	ap		5621502						
ANR	5621591	ClassDef	<unnamed>	87:8:1815:1881							
ANR	5621592	DeclStmt									
ANR	5621593	Decl							StrBuf	StrBuf *	out
ANR	5621594	DeclStmt									
ANR	5621595	Decl							int	int	encode
ANR	5621596	DeclStmt									
ANR	5621597	Decl							char	char *	root
ANR	5621598	DeclStmt									
ANR	5621599	Decl									ForeachListUser
ANR	5621600	Function	foreach_list_cb	93:0:1884:2815							
ANR	5621601	FunctionDef	"foreach_list_cb (void * user , const char * k , const char * v)"		5621600	0					
ANR	5621602	CompoundStatement		93:69:1953:2815	5621600	0					
ANR	5621603	IdentifierDeclStatement	ForeachListUser * rlu = user ;	94:1:1956:1983	5621600	0	True				
ANR	5621604	IdentifierDecl	* rlu = user		5621600	0					
ANR	5621605	IdentifierDeclType	ForeachListUser *		5621600	0					
ANR	5621606	Identifier	rlu		5621600	1					
ANR	5621607	AssignmentExpression	* rlu = user		5621600	2		=			
ANR	5621608	Identifier	user		5621600	0					
ANR	5621609	Identifier	user		5621600	1					
ANR	5621610	IdentifierDeclStatement	"char * line , * root ;"	95:1:1986:2003	5621600	1	True				
ANR	5621611	IdentifierDecl	* line		5621600	0					
ANR	5621612	IdentifierDeclType	char *		5621600	0					
ANR	5621613	Identifier	line		5621600	1					
ANR	5621614	IdentifierDecl	* root		5621600	1					
ANR	5621615	IdentifierDeclType	char *		5621600	0					
ANR	5621616	Identifier	root		5621600	1					
ANR	5621617	IdentifierDeclStatement	"int rlen , klen , vlen ;"	96:1:2006:2026	5621600	2	True				
ANR	5621618	IdentifierDecl	rlen		5621600	0					
ANR	5621619	IdentifierDeclType	int		5621600	0					
ANR	5621620	Identifier	rlen		5621600	1					
ANR	5621621	IdentifierDecl	klen		5621600	1					
ANR	5621622	IdentifierDeclType	int		5621600	0					
ANR	5621623	Identifier	klen		5621600	1					
ANR	5621624	IdentifierDecl	vlen		5621600	2					
ANR	5621625	IdentifierDeclType	int		5621600	0					
ANR	5621626	Identifier	vlen		5621600	1					
ANR	5621627	IdentifierDeclStatement	ut8 * v2 = NULL ;	97:1:2029:2043	5621600	3	True				
ANR	5621628	IdentifierDecl	* v2 = NULL		5621600	0					
ANR	5621629	IdentifierDeclType	ut8 *		5621600	0					
ANR	5621630	Identifier	v2		5621600	1					
ANR	5621631	AssignmentExpression	* v2 = NULL		5621600	2		=			
ANR	5621632	Identifier	NULL		5621600	0					
ANR	5621633	Identifier	NULL		5621600	1					
ANR	5621634	IfStatement	if ( ! rlu )		5621600	4					
ANR	5621635	Condition	! rlu	98:5:2050:2053	5621600	0	True				
ANR	5621636	UnaryOperationExpression	! rlu		5621600	0					
ANR	5621637	UnaryOperator	!		5621600	0					
ANR	5621638	Identifier	rlu		5621600	1					
ANR	5621639	CompoundStatement		6:11:102:102	5621600	1					
ANR	5621640	ReturnStatement	return 0 ;	99:2:2060:2068	5621600	0	True				
ANR	5621641	PrimaryExpression	0		5621600	0					
ANR	5621642	ExpressionStatement	root = rlu -> root	101:1:2074:2090	5621600	5	True				
ANR	5621643	AssignmentExpression	root = rlu -> root		5621600	0		=			
ANR	5621644	Identifier	root		5621600	0					
ANR	5621645	PtrMemberAccess	rlu -> root		5621600	1					
ANR	5621646	Identifier	rlu		5621600	0					
ANR	5621647	Identifier	root		5621600	1					
ANR	5621648	ExpressionStatement	klen = strlen ( k )	102:1:2093:2110	5621600	6	True				
ANR	5621649	AssignmentExpression	klen = strlen ( k )		5621600	0		=			
ANR	5621650	Identifier	klen		5621600	0					
ANR	5621651	CallExpression	strlen ( k )		5621600	1					
ANR	5621652	Callee	strlen		5621600	0					
ANR	5621653	Identifier	strlen		5621600	0					
ANR	5621654	ArgumentList	k		5621600	1					
ANR	5621655	Argument	k		5621600	0					
ANR	5621656	Identifier	k		5621600	0					
ANR	5621657	IfStatement	if ( rlu -> encode )		5621600	7					
ANR	5621658	Condition	rlu -> encode	103:5:2117:2127	5621600	0	True				
ANR	5621659	PtrMemberAccess	rlu -> encode		5621600	0					
ANR	5621660	Identifier	rlu		5621600	0					
ANR	5621661	Identifier	encode		5621600	1					
ANR	5621662	CompoundStatement		11:18:176:176	5621600	1					
ANR	5621663	ExpressionStatement	"v2 = sdb_decode ( v , NULL )"	104:2:2134:2159	5621600	0	True				
ANR	5621664	AssignmentExpression	"v2 = sdb_decode ( v , NULL )"		5621600	0		=			
ANR	5621665	Identifier	v2		5621600	0					
ANR	5621666	CallExpression	"sdb_decode ( v , NULL )"		5621600	1					
ANR	5621667	Callee	sdb_decode		5621600	0					
ANR	5621668	Identifier	sdb_decode		5621600	0					
ANR	5621669	ArgumentList	v		5621600	1					
ANR	5621670	Argument	v		5621600	0					
ANR	5621671	Identifier	v		5621600	0					
ANR	5621672	Argument	NULL		5621600	1					
ANR	5621673	Identifier	NULL		5621600	0					
ANR	5621674	IfStatement	if ( v2 )		5621600	1					
ANR	5621675	Condition	v2	105:6:2167:2168	5621600	0	True				
ANR	5621676	Identifier	v2		5621600	0					
ANR	5621677	CompoundStatement		13:10:217:217	5621600	1					
ANR	5621678	ExpressionStatement	v = ( const char * ) v2	106:3:2176:2196	5621600	0	True				
ANR	5621679	AssignmentExpression	v = ( const char * ) v2		5621600	0		=			
ANR	5621680	Identifier	v		5621600	0					
ANR	5621681	CastExpression	( const char * ) v2		5621600	1					
ANR	5621682	CastTarget	const char *		5621600	0					
ANR	5621683	Identifier	v2		5621600	1					
ANR	5621684	ExpressionStatement	vlen = strlen ( v )	109:1:2206:2223	5621600	8	True				
ANR	5621685	AssignmentExpression	vlen = strlen ( v )		5621600	0		=			
ANR	5621686	Identifier	vlen		5621600	0					
ANR	5621687	CallExpression	strlen ( v )		5621600	1					
ANR	5621688	Callee	strlen		5621600	0					
ANR	5621689	Identifier	strlen		5621600	0					
ANR	5621690	ArgumentList	v		5621600	1					
ANR	5621691	Argument	v		5621600	0					
ANR	5621692	Identifier	v		5621600	0					
ANR	5621693	IfStatement	if ( root )		5621600	9					
ANR	5621694	Condition	root	110:5:2230:2233	5621600	0	True				
ANR	5621695	Identifier	root		5621600	0					
ANR	5621696	CompoundStatement		18:11:282:282	5621600	1					
ANR	5621697	ExpressionStatement	rlen = strlen ( root )	111:2:2240:2260	5621600	0	True				
ANR	5621698	AssignmentExpression	rlen = strlen ( root )		5621600	0		=			
ANR	5621699	Identifier	rlen		5621600	0					
ANR	5621700	CallExpression	strlen ( root )		5621600	1					
ANR	5621701	Callee	strlen		5621600	0					
ANR	5621702	Identifier	strlen		5621600	0					
ANR	5621703	ArgumentList	root		5621600	1					
ANR	5621704	Argument	root		5621600	0					
ANR	5621705	Identifier	root		5621600	0					
ANR	5621706	ExpressionStatement	line = malloc ( klen + vlen + rlen + 3 )	112:2:2264:2302	5621600	1	True				
ANR	5621707	AssignmentExpression	line = malloc ( klen + vlen + rlen + 3 )		5621600	0		=			
ANR	5621708	Identifier	line		5621600	0					
ANR	5621709	CallExpression	malloc ( klen + vlen + rlen + 3 )		5621600	1					
ANR	5621710	Callee	malloc		5621600	0					
ANR	5621711	Identifier	malloc		5621600	0					
ANR	5621712	ArgumentList	klen + vlen + rlen + 3		5621600	1					
ANR	5621713	Argument	klen + vlen + rlen + 3		5621600	0					
ANR	5621714	AdditiveExpression	klen + vlen + rlen + 3		5621600	0		+			
ANR	5621715	Identifier	klen		5621600	0					
ANR	5621716	AdditiveExpression	vlen + rlen + 3		5621600	1		+			
ANR	5621717	Identifier	vlen		5621600	0					
ANR	5621718	AdditiveExpression	rlen + 3		5621600	1		+			
ANR	5621719	Identifier	rlen		5621600	0					
ANR	5621720	PrimaryExpression	3		5621600	1					
ANR	5621721	IfStatement	if ( ! line )		5621600	2					
ANR	5621722	Condition	! line	113:6:2310:2314	5621600	0	True				
ANR	5621723	UnaryOperationExpression	! line		5621600	0					
ANR	5621724	UnaryOperator	!		5621600	0					
ANR	5621725	Identifier	line		5621600	1					
ANR	5621726	CompoundStatement		21:13:363:363	5621600	1					
ANR	5621727	ExpressionStatement	free ( v2 )	114:3:2322:2331	5621600	0	True				
ANR	5621728	CallExpression	free ( v2 )		5621600	0					
ANR	5621729	Callee	free		5621600	0					
ANR	5621730	Identifier	free		5621600	0					
ANR	5621731	ArgumentList	v2		5621600	1					
ANR	5621732	Argument	v2		5621600	0					
ANR	5621733	Identifier	v2		5621600	0					
ANR	5621734	ReturnStatement	return 0 ;	115:3:2336:2344	5621600	1	True				
ANR	5621735	PrimaryExpression	0		5621600	0					
ANR	5621736	ExpressionStatement	"memcpy ( line , root , rlen )"	117:2:2352:2377	5621600	3	True				
ANR	5621737	CallExpression	"memcpy ( line , root , rlen )"		5621600	0					
ANR	5621738	Callee	memcpy		5621600	0					
ANR	5621739	Identifier	memcpy		5621600	0					
ANR	5621740	ArgumentList	line		5621600	1					
ANR	5621741	Argument	line		5621600	0					
ANR	5621742	Identifier	line		5621600	0					
ANR	5621743	Argument	root		5621600	1					
ANR	5621744	Identifier	root		5621600	0					
ANR	5621745	Argument	rlen		5621600	2					
ANR	5621746	Identifier	rlen		5621600	0					
ANR	5621747	ExpressionStatement	line [ rlen ] = '/'	118:2:2381:2395	5621600	4	True				
ANR	5621748	AssignmentExpression	line [ rlen ] = '/'		5621600	0		=			
ANR	5621749	ArrayIndexing	line [ rlen ]		5621600	0					
ANR	5621750	Identifier	line		5621600	0					
ANR	5621751	Identifier	rlen		5621600	1					
ANR	5621752	PrimaryExpression	'/'		5621600	1					
ANR	5621753	ExpressionStatement	"memcpy ( line + rlen + 1 , k , klen )"	119:2:2447:2480	5621600	5	True				
ANR	5621754	CallExpression	"memcpy ( line + rlen + 1 , k , klen )"		5621600	0					
ANR	5621755	Callee	memcpy		5621600	0					
ANR	5621756	Identifier	memcpy		5621600	0					
ANR	5621757	ArgumentList	line + rlen + 1		5621600	1					
ANR	5621758	Argument	line + rlen + 1		5621600	0					
ANR	5621759	AdditiveExpression	line + rlen + 1		5621600	0		+			
ANR	5621760	Identifier	line		5621600	0					
ANR	5621761	AdditiveExpression	rlen + 1		5621600	1		+			
ANR	5621762	Identifier	rlen		5621600	0					
ANR	5621763	PrimaryExpression	1		5621600	1					
ANR	5621764	Argument	k		5621600	1					
ANR	5621765	Identifier	k		5621600	0					
ANR	5621766	Argument	klen		5621600	2					
ANR	5621767	Identifier	klen		5621600	0					
ANR	5621768	ExpressionStatement	line [ rlen + klen + 1 ] = '='	120:2:2484:2511	5621600	6	True				
ANR	5621769	AssignmentExpression	line [ rlen + klen + 1 ] = '='		5621600	0		=			
ANR	5621770	ArrayIndexing	line [ rlen + klen + 1 ]		5621600	0					
ANR	5621771	Identifier	line		5621600	0					
ANR	5621772	AdditiveExpression	rlen + klen + 1		5621600	1		+			
ANR	5621773	Identifier	rlen		5621600	0					
ANR	5621774	AdditiveExpression	klen + 1		5621600	1		+			
ANR	5621775	Identifier	klen		5621600	0					
ANR	5621776	PrimaryExpression	1		5621600	1					
ANR	5621777	PrimaryExpression	'='		5621600	1					
ANR	5621778	ExpressionStatement	"memcpy ( line + rlen + klen + 2 , v , vlen + 1 )"	121:2:2515:2559	5621600	7	True				
ANR	5621779	CallExpression	"memcpy ( line + rlen + klen + 2 , v , vlen + 1 )"		5621600	0					
ANR	5621780	Callee	memcpy		5621600	0					
ANR	5621781	Identifier	memcpy		5621600	0					
ANR	5621782	ArgumentList	line + rlen + klen + 2		5621600	1					
ANR	5621783	Argument	line + rlen + klen + 2		5621600	0					
ANR	5621784	AdditiveExpression	line + rlen + klen + 2		5621600	0		+			
ANR	5621785	Identifier	line		5621600	0					
ANR	5621786	AdditiveExpression	rlen + klen + 2		5621600	1		+			
ANR	5621787	Identifier	rlen		5621600	0					
ANR	5621788	AdditiveExpression	klen + 2		5621600	1		+			
ANR	5621789	Identifier	klen		5621600	0					
ANR	5621790	PrimaryExpression	2		5621600	1					
ANR	5621791	Argument	v		5621600	1					
ANR	5621792	Identifier	v		5621600	0					
ANR	5621793	Argument	vlen + 1		5621600	2					
ANR	5621794	AdditiveExpression	vlen + 1		5621600	0		+			
ANR	5621795	Identifier	vlen		5621600	0					
ANR	5621796	PrimaryExpression	1		5621600	1					
ANR	5621797	ElseStatement	else		5621600	0					
ANR	5621798	CompoundStatement		30:8:615:615	5621600	0					
ANR	5621799	ExpressionStatement	line = malloc ( klen + vlen + 2 )	123:2:2573:2604	5621600	0	True				
ANR	5621800	AssignmentExpression	line = malloc ( klen + vlen + 2 )		5621600	0		=			
ANR	5621801	Identifier	line		5621600	0					
ANR	5621802	CallExpression	malloc ( klen + vlen + 2 )		5621600	1					
ANR	5621803	Callee	malloc		5621600	0					
ANR	5621804	Identifier	malloc		5621600	0					
ANR	5621805	ArgumentList	klen + vlen + 2		5621600	1					
ANR	5621806	Argument	klen + vlen + 2		5621600	0					
ANR	5621807	AdditiveExpression	klen + vlen + 2		5621600	0		+			
ANR	5621808	Identifier	klen		5621600	0					
ANR	5621809	AdditiveExpression	vlen + 2		5621600	1		+			
ANR	5621810	Identifier	vlen		5621600	0					
ANR	5621811	PrimaryExpression	2		5621600	1					
ANR	5621812	IfStatement	if ( ! line )		5621600	1					
ANR	5621813	Condition	! line	124:6:2612:2616	5621600	0	True				
ANR	5621814	UnaryOperationExpression	! line		5621600	0					
ANR	5621815	UnaryOperator	!		5621600	0					
ANR	5621816	Identifier	line		5621600	1					
ANR	5621817	CompoundStatement		32:13:665:665	5621600	1					
ANR	5621818	ExpressionStatement	free ( v2 )	125:3:2624:2633	5621600	0	True				
ANR	5621819	CallExpression	free ( v2 )		5621600	0					
ANR	5621820	Callee	free		5621600	0					
ANR	5621821	Identifier	free		5621600	0					
ANR	5621822	ArgumentList	v2		5621600	1					
ANR	5621823	Argument	v2		5621600	0					
ANR	5621824	Identifier	v2		5621600	0					
ANR	5621825	ReturnStatement	return 0 ;	126:3:2638:2646	5621600	1	True				
ANR	5621826	PrimaryExpression	0		5621600	0					
ANR	5621827	ExpressionStatement	"memcpy ( line , k , klen )"	128:2:2654:2676	5621600	2	True				
ANR	5621828	CallExpression	"memcpy ( line , k , klen )"		5621600	0					
ANR	5621829	Callee	memcpy		5621600	0					
ANR	5621830	Identifier	memcpy		5621600	0					
ANR	5621831	ArgumentList	line		5621600	1					
ANR	5621832	Argument	line		5621600	0					
ANR	5621833	Identifier	line		5621600	0					
ANR	5621834	Argument	k		5621600	1					
ANR	5621835	Identifier	k		5621600	0					
ANR	5621836	Argument	klen		5621600	2					
ANR	5621837	Identifier	klen		5621600	0					
ANR	5621838	ExpressionStatement	line [ klen ] = '='	129:2:2680:2696	5621600	3	True				
ANR	5621839	AssignmentExpression	line [ klen ] = '='		5621600	0		=			
ANR	5621840	ArrayIndexing	line [ klen ]		5621600	0					
ANR	5621841	Identifier	line		5621600	0					
ANR	5621842	Identifier	klen		5621600	1					
ANR	5621843	PrimaryExpression	'='		5621600	1					
ANR	5621844	ExpressionStatement	"memcpy ( line + klen + 1 , v , vlen + 1 )"	130:2:2700:2737	5621600	4	True				
ANR	5621845	CallExpression	"memcpy ( line + klen + 1 , v , vlen + 1 )"		5621600	0					
ANR	5621846	Callee	memcpy		5621600	0					
ANR	5621847	Identifier	memcpy		5621600	0					
ANR	5621848	ArgumentList	line + klen + 1		5621600	1					
ANR	5621849	Argument	line + klen + 1		5621600	0					
ANR	5621850	AdditiveExpression	line + klen + 1		5621600	0		+			
ANR	5621851	Identifier	line		5621600	0					
ANR	5621852	AdditiveExpression	klen + 1		5621600	1		+			
ANR	5621853	Identifier	klen		5621600	0					
ANR	5621854	PrimaryExpression	1		5621600	1					
ANR	5621855	Argument	v		5621600	1					
ANR	5621856	Identifier	v		5621600	0					
ANR	5621857	Argument	vlen + 1		5621600	2					
ANR	5621858	AdditiveExpression	vlen + 1		5621600	0		+			
ANR	5621859	Identifier	vlen		5621600	0					
ANR	5621860	PrimaryExpression	1		5621600	1					
ANR	5621861	ExpressionStatement	"strbuf_append ( rlu -> out , line , 1 )"	132:1:2743:2776	5621600	10	True				
ANR	5621862	CallExpression	"strbuf_append ( rlu -> out , line , 1 )"		5621600	0					
ANR	5621863	Callee	strbuf_append		5621600	0					
ANR	5621864	Identifier	strbuf_append		5621600	0					
ANR	5621865	ArgumentList	rlu -> out		5621600	1					
ANR	5621866	Argument	rlu -> out		5621600	0					
ANR	5621867	PtrMemberAccess	rlu -> out		5621600	0					
ANR	5621868	Identifier	rlu		5621600	0					
ANR	5621869	Identifier	out		5621600	1					
ANR	5621870	Argument	line		5621600	1					
ANR	5621871	Identifier	line		5621600	0					
ANR	5621872	Argument	1		5621600	2					
ANR	5621873	PrimaryExpression	1		5621600	0					
ANR	5621874	ExpressionStatement	free ( v2 )	133:1:2779:2788	5621600	11	True				
ANR	5621875	CallExpression	free ( v2 )		5621600	0					
ANR	5621876	Callee	free		5621600	0					
ANR	5621877	Identifier	free		5621600	0					
ANR	5621878	ArgumentList	v2		5621600	1					
ANR	5621879	Argument	v2		5621600	0					
ANR	5621880	Identifier	v2		5621600	0					
ANR	5621881	ExpressionStatement	free ( line )	134:1:2791:2802	5621600	12	True				
ANR	5621882	CallExpression	free ( line )		5621600	0					
ANR	5621883	Callee	free		5621600	0					
ANR	5621884	Identifier	free		5621600	0					
ANR	5621885	ArgumentList	line		5621600	1					
ANR	5621886	Argument	line		5621600	0					
ANR	5621887	Identifier	line		5621600	0					
ANR	5621888	ReturnStatement	return 1 ;	135:1:2805:2813	5621600	13	True				
ANR	5621889	PrimaryExpression	1		5621600	0					
ANR	5621890	ReturnType	static int		5621600	1					
ANR	5621891	Identifier	foreach_list_cb		5621600	2					
ANR	5621892	ParameterList	"void * user , const char * k , const char * v"		5621600	3					
ANR	5621893	Parameter	void * user	93:27:1911:1920	5621600	0	True				
ANR	5621894	ParameterType	void *		5621600	0					
ANR	5621895	Identifier	user		5621600	1					
ANR	5621896	Parameter	const char * k	93:39:1923:1935	5621600	1	True				
ANR	5621897	ParameterType	const char *		5621600	0					
ANR	5621898	Identifier	k		5621600	1					
ANR	5621899	Parameter	const char * v	93:54:1938:1950	5621600	2	True				
ANR	5621900	ParameterType	const char *		5621600	0					
ANR	5621901	Identifier	v		5621600	1					
ANR	5621902	CFGEntryNode	ENTRY		5621600		True				
ANR	5621903	CFGExitNode	EXIT		5621600		True				
ANR	5621904	Symbol	* klen		5621600						
ANR	5621905	Symbol	malloc		5621600						
ANR	5621906	Symbol	sdb_decode		5621600						
ANR	5621907	Symbol	NULL		5621600						
ANR	5621908	Symbol	* rlu		5621600						
ANR	5621909	Symbol	line		5621600						
ANR	5621910	Symbol	vlen		5621600						
ANR	5621911	Symbol	k		5621600						
ANR	5621912	Symbol	* line		5621600						
ANR	5621913	Symbol	rlu -> encode		5621600						
ANR	5621914	Symbol	rlu -> out		5621600						
ANR	5621915	Symbol	rlu -> root		5621600						
ANR	5621916	Symbol	strlen		5621600						
ANR	5621917	Symbol	v		5621600						
ANR	5621918	Symbol	rlen		5621600						
ANR	5621919	Symbol	root		5621600						
ANR	5621920	Symbol	klen		5621600						
ANR	5621921	Symbol	rlu		5621600						
ANR	5621922	Symbol	* rlen		5621600						
ANR	5621923	Symbol	v2		5621600						
ANR	5621924	Symbol	user		5621600						
ANR	5621925	Function	walk_namespace	138:0:2818:3460							
ANR	5621926	FunctionDef	"walk_namespace (StrBuf * sb , char * root , int left , char * p , SdbNs * ns , int encode)"		5621925	0					
ANR	5621927	CompoundStatement		138:94:2912:3460	5621925	0					
ANR	5621928	IdentifierDeclStatement	int len ;	139:1:2915:2922	5621925	0	True				
ANR	5621929	IdentifierDecl	len		5621925	0					
ANR	5621930	IdentifierDeclType	int		5621925	0					
ANR	5621931	Identifier	len		5621925	1					
ANR	5621932	IdentifierDeclStatement	SdbListIter * it ;	140:1:2925:2940	5621925	1	True				
ANR	5621933	IdentifierDecl	* it		5621925	0					
ANR	5621934	IdentifierDeclType	SdbListIter *		5621925	0					
ANR	5621935	Identifier	it		5621925	1					
ANR	5621936	IdentifierDeclStatement	"char * _out , * out = sb -> buf ;"	141:1:2943:2969	5621925	2	True				
ANR	5621937	IdentifierDecl	* _out		5621925	0					
ANR	5621938	IdentifierDeclType	char *		5621925	0					
ANR	5621939	Identifier	_out		5621925	1					
ANR	5621940	IdentifierDecl	* out = sb -> buf		5621925	1					
ANR	5621941	IdentifierDeclType	char *		5621925	0					
ANR	5621942	Identifier	out		5621925	1					
ANR	5621943	AssignmentExpression	* out = sb -> buf		5621925	2		=			
ANR	5621944	Identifier	out		5621925	0					
ANR	5621945	PtrMemberAccess	sb -> buf		5621925	1					
ANR	5621946	Identifier	sb		5621925	0					
ANR	5621947	Identifier	buf		5621925	1					
ANR	5621948	IdentifierDeclStatement	SdbNs * n ;	142:1:2972:2980	5621925	3	True				
ANR	5621949	IdentifierDecl	* n		5621925	0					
ANR	5621950	IdentifierDeclType	SdbNs *		5621925	0					
ANR	5621951	Identifier	n		5621925	1					
ANR	5621952	IdentifierDeclStatement	"ForeachListUser user = { sb , encode , root } ;"	143:1:2983:3026	5621925	4	True				
ANR	5621953	IdentifierDecl	"user = { sb , encode , root }"		5621925	0					
ANR	5621954	IdentifierDeclType	ForeachListUser		5621925	0					
ANR	5621955	Identifier	user		5621925	1					
ANR	5621956	AssignmentExpression	"user = { sb , encode , root }"		5621925	2		=			
ANR	5621957	Identifier	user		5621925	0					
ANR	5621958	InitializerList	sb		5621925	1					
ANR	5621959	Identifier	sb		5621925	0					
ANR	5621960	Identifier	encode		5621925	1					
ANR	5621961	Identifier	root		5621925	2					
ANR	5621962	IdentifierDeclStatement	char * roote = root + strlen ( root ) ;	144:1:3029:3063	5621925	5	True				
ANR	5621963	IdentifierDecl	* roote = root + strlen ( root )		5621925	0					
ANR	5621964	IdentifierDeclType	char *		5621925	0					
ANR	5621965	Identifier	roote		5621925	1					
ANR	5621966	AssignmentExpression	* roote = root + strlen ( root )		5621925	2		=			
ANR	5621967	Identifier	roote		5621925	0					
ANR	5621968	AdditiveExpression	root + strlen ( root )		5621925	1		+			
ANR	5621969	Identifier	root		5621925	0					
ANR	5621970	CallExpression	strlen ( root )		5621925	1					
ANR	5621971	Callee	strlen		5621925	0					
ANR	5621972	Identifier	strlen		5621925	0					
ANR	5621973	ArgumentList	root		5621925	1					
ANR	5621974	Argument	root		5621925	0					
ANR	5621975	Identifier	root		5621925	0					
ANR	5621976	IfStatement	if ( ! ns -> sdb )		5621925	6					
ANR	5621977	Condition	! ns -> sdb	145:5:3070:3077	5621925	0	True				
ANR	5621978	UnaryOperationExpression	! ns -> sdb		5621925	0					
ANR	5621979	UnaryOperator	!		5621925	0					
ANR	5621980	PtrMemberAccess	ns -> sdb		5621925	1					
ANR	5621981	Identifier	ns		5621925	0					
ANR	5621982	Identifier	sdb		5621925	1					
ANR	5621983	CompoundStatement		8:15:167:167	5621925	1					
ANR	5621984	ReturnStatement	return ;	146:2:3084:3090	5621925	0	True				
ANR	5621985	ExpressionStatement	"sdb_foreach ( ns -> sdb , foreach_list_cb , & user )"	149:1:3136:3181	5621925	7	True				
ANR	5621986	CallExpression	"sdb_foreach ( ns -> sdb , foreach_list_cb , & user )"		5621925	0					
ANR	5621987	Callee	sdb_foreach		5621925	0					
ANR	5621988	Identifier	sdb_foreach		5621925	0					
ANR	5621989	ArgumentList	ns -> sdb		5621925	1					
ANR	5621990	Argument	ns -> sdb		5621925	0					
ANR	5621991	PtrMemberAccess	ns -> sdb		5621925	0					
ANR	5621992	Identifier	ns		5621925	0					
ANR	5621993	Identifier	sdb		5621925	1					
ANR	5621994	Argument	foreach_list_cb		5621925	1					
ANR	5621995	Identifier	foreach_list_cb		5621925	0					
ANR	5621996	Argument	& user		5621925	2					
ANR	5621997	UnaryOperationExpression	& user		5621925	0					
ANR	5621998	UnaryOperator	&		5621925	0					
ANR	5621999	Identifier	user		5621925	1					
ANR	5622000	Statement	ls_foreach	152:1:3204:3213	5621925	8	True				
ANR	5622001	Statement	(	152:12:3215:3215	5621925	9	True				
ANR	5622002	Statement	ns	152:13:3216:3217	5621925	10	True				
ANR	5622003	Statement	->	152:15:3218:3219	5621925	11	True				
ANR	5622004	Statement	sdb	152:17:3220:3222	5621925	12	True				
ANR	5622005	Statement	->	152:20:3223:3224	5621925	13	True				
ANR	5622006	Statement	ns	152:22:3225:3226	5621925	14	True				
ANR	5622007	Statement	","	152:24:3227:3227	5621925	15	True				
ANR	5622008	Statement	it	152:26:3229:3230	5621925	16	True				
ANR	5622009	Statement	","	152:28:3231:3231	5621925	17	True				
ANR	5622010	Statement	n	152:30:3233:3233	5621925	18	True				
ANR	5622011	Statement	)	152:31:3234:3234	5621925	19	True				
ANR	5622012	CompoundStatement		15:33:323:323	5621925	20					
ANR	5622013	ExpressionStatement	len = strlen ( n -> name )	153:2:3240:3262	5621925	0	True				
ANR	5622014	AssignmentExpression	len = strlen ( n -> name )		5621925	0		=			
ANR	5622015	Identifier	len		5621925	0					
ANR	5622016	CallExpression	strlen ( n -> name )		5621925	1					
ANR	5622017	Callee	strlen		5621925	0					
ANR	5622018	Identifier	strlen		5621925	0					
ANR	5622019	ArgumentList	n -> name		5621925	1					
ANR	5622020	Argument	n -> name		5621925	0					
ANR	5622021	PtrMemberAccess	n -> name		5621925	0					
ANR	5622022	Identifier	n		5621925	0					
ANR	5622023	Identifier	name		5621925	1					
ANR	5622024	ExpressionStatement	p [ 0 ] = '/'	154:2:3266:3276	5621925	1	True				
ANR	5622025	AssignmentExpression	p [ 0 ] = '/'		5621925	0		=			
ANR	5622026	ArrayIndexing	p [ 0 ]		5621925	0					
ANR	5622027	Identifier	p		5621925	0					
ANR	5622028	PrimaryExpression	0		5621925	1					
ANR	5622029	PrimaryExpression	'/'		5621925	1					
ANR	5622030	IfStatement	if ( len + 2 < left )		5621925	2					
ANR	5622031	Condition	len + 2 < left	155:6:3284:3297	5621925	0	True				
ANR	5622032	RelationalExpression	len + 2 < left		5621925	0		<			
ANR	5622033	AdditiveExpression	len + 2		5621925	0		+			
ANR	5622034	Identifier	len		5621925	0					
ANR	5622035	PrimaryExpression	2		5621925	1					
ANR	5622036	Identifier	left		5621925	1					
ANR	5622037	CompoundStatement		18:22:387:387	5621925	1					
ANR	5622038	ExpressionStatement	"memcpy ( p + 1 , n -> name , len + 1 )"	156:3:3305:3337	5621925	0	True				
ANR	5622039	CallExpression	"memcpy ( p + 1 , n -> name , len + 1 )"		5621925	0					
ANR	5622040	Callee	memcpy		5621925	0					
ANR	5622041	Identifier	memcpy		5621925	0					
ANR	5622042	ArgumentList	p + 1		5621925	1					
ANR	5622043	Argument	p + 1		5621925	0					
ANR	5622044	AdditiveExpression	p + 1		5621925	0		+			
ANR	5622045	Identifier	p		5621925	0					
ANR	5622046	PrimaryExpression	1		5621925	1					
ANR	5622047	Argument	n -> name		5621925	1					
ANR	5622048	PtrMemberAccess	n -> name		5621925	0					
ANR	5622049	Identifier	n		5621925	0					
ANR	5622050	Identifier	name		5621925	1					
ANR	5622051	Argument	len + 1		5621925	2					
ANR	5622052	AdditiveExpression	len + 1		5621925	0		+			
ANR	5622053	Identifier	len		5621925	0					
ANR	5622054	PrimaryExpression	1		5621925	1					
ANR	5622055	ExpressionStatement	left -= len + 2	157:3:3342:3357	5621925	1	True				
ANR	5622056	AssignmentExpression	left -= len + 2		5621925	0		-=			
ANR	5622057	Identifier	left		5621925	0					
ANR	5622058	AdditiveExpression	len + 2		5621925	1		+			
ANR	5622059	Identifier	len		5621925	0					
ANR	5622060	PrimaryExpression	2		5621925	1					
ANR	5622061	ExpressionStatement	_out = out	159:2:3365:3375	5621925	3	True				
ANR	5622062	AssignmentExpression	_out = out		5621925	0		=			
ANR	5622063	Identifier	_out		5621925	0					
ANR	5622064	Identifier	out		5621925	1					
ANR	5622065	ExpressionStatement	"walk_namespace ( sb , root , left , roote + len + 1 , n , encode )"	160:2:3379:3441	5621925	4	True				
ANR	5622066	CallExpression	"walk_namespace ( sb , root , left , roote + len + 1 , n , encode )"		5621925	0					
ANR	5622067	Callee	walk_namespace		5621925	0					
ANR	5622068	Identifier	walk_namespace		5621925	0					
ANR	5622069	ArgumentList	sb		5621925	1					
ANR	5622070	Argument	sb		5621925	0					
ANR	5622071	Identifier	sb		5621925	0					
ANR	5622072	Argument	root		5621925	1					
ANR	5622073	Identifier	root		5621925	0					
ANR	5622074	Argument	left		5621925	2					
ANR	5622075	Identifier	left		5621925	0					
ANR	5622076	Argument	roote + len + 1		5621925	3					
ANR	5622077	AdditiveExpression	roote + len + 1		5621925	0		+			
ANR	5622078	Identifier	roote		5621925	0					
ANR	5622079	AdditiveExpression	len + 1		5621925	1		+			
ANR	5622080	Identifier	len		5621925	0					
ANR	5622081	PrimaryExpression	1		5621925	1					
ANR	5622082	Argument	n		5621925	4					
ANR	5622083	Identifier	n		5621925	0					
ANR	5622084	Argument	encode		5621925	5					
ANR	5622085	Identifier	encode		5621925	0					
ANR	5622086	ExpressionStatement	out = _out	162:2:3445:3455	5621925	5	True				
ANR	5622087	AssignmentExpression	out = _out		5621925	0		=			
ANR	5622088	Identifier	out		5621925	0					
ANR	5622089	Identifier	_out		5621925	1					
ANR	5622090	ReturnType	static void		5621925	1					
ANR	5622091	Identifier	walk_namespace		5621925	2					
ANR	5622092	ParameterList	"StrBuf * sb , char * root , int left , char * p , SdbNs * ns , int encode"		5621925	3					
ANR	5622093	Parameter	StrBuf * sb	138:28:2846:2855	5621925	0	True				
ANR	5622094	ParameterType	StrBuf *		5621925	0					
ANR	5622095	Identifier	sb		5621925	1					
ANR	5622096	Parameter	char * root	138:40:2858:2867	5621925	1	True				
ANR	5622097	ParameterType	char *		5621925	0					
ANR	5622098	Identifier	root		5621925	1					
ANR	5622099	Parameter	int left	138:52:2870:2877	5621925	2	True				
ANR	5622100	ParameterType	int		5621925	0					
ANR	5622101	Identifier	left		5621925	1					
ANR	5622102	Parameter	char * p	138:62:2880:2886	5621925	3	True				
ANR	5622103	ParameterType	char *		5621925	0					
ANR	5622104	Identifier	p		5621925	1					
ANR	5622105	Parameter	SdbNs * ns	138:71:2889:2897	5621925	4	True				
ANR	5622106	ParameterType	SdbNs *		5621925	0					
ANR	5622107	Identifier	ns		5621925	1					
ANR	5622108	Parameter	int encode	138:82:2900:2909	5621925	5	True				
ANR	5622109	ParameterType	int		5621925	0					
ANR	5622110	Identifier	encode		5621925	1					
ANR	5622111	CFGEntryNode	ENTRY		5621925		True				
ANR	5622112	CFGExitNode	EXIT		5621925		True				
ANR	5622113	Symbol	encode		5621925						
ANR	5622114	Symbol	n -> name		5621925						
ANR	5622115	Symbol	foreach_list_cb		5621925						
ANR	5622116	Symbol	_out		5621925						
ANR	5622117	Symbol	ns		5621925						
ANR	5622118	Symbol	ns -> sdb		5621925						
ANR	5622119	Symbol	* ns		5621925						
ANR	5622120	Symbol	sb -> buf		5621925						
ANR	5622121	Symbol	it		5621925						
ANR	5622122	Symbol	n		5621925						
ANR	5622123	Symbol	sb		5621925						
ANR	5622124	Symbol	out		5621925						
ANR	5622125	Symbol	p		5621925						
ANR	5622126	Symbol	strlen		5621925						
ANR	5622127	Symbol	len		5621925						
ANR	5622128	Symbol	left		5621925						
ANR	5622129	Symbol	* sb		5621925						
ANR	5622130	Symbol	root		5621925						
ANR	5622131	Symbol	& user		5621925						
ANR	5622132	Symbol	* n		5621925						
ANR	5622133	Symbol	roote		5621925						
ANR	5622134	Symbol	* p		5621925						
ANR	5622135	Symbol	user		5621925						
ANR	5622136	Function	sdb_querys	166:0:3463:17863							
ANR	5622137	FunctionDef	"sdb_querys (Sdb * r , char * buf , size_t len , const char * _cmd)"		5622136	0					
ANR	5622138	CompoundStatement		166:75:3538:17863	5622136	0					
ANR	5622139	IdentifierDeclStatement	"int i , d , ok , w , alength , bufset = 0 , is_ref = 0 , encode = 0 ;"	167:1:3541:3601	5622136	0	True				
ANR	5622140	IdentifierDecl	i		5622136	0					
ANR	5622141	IdentifierDeclType	int		5622136	0					
ANR	5622142	Identifier	i		5622136	1					
ANR	5622143	IdentifierDecl	d		5622136	1					
ANR	5622144	IdentifierDeclType	int		5622136	0					
ANR	5622145	Identifier	d		5622136	1					
ANR	5622146	IdentifierDecl	ok		5622136	2					
ANR	5622147	IdentifierDeclType	int		5622136	0					
ANR	5622148	Identifier	ok		5622136	1					
ANR	5622149	IdentifierDecl	w		5622136	3					
ANR	5622150	IdentifierDeclType	int		5622136	0					
ANR	5622151	Identifier	w		5622136	1					
ANR	5622152	IdentifierDecl	alength		5622136	4					
ANR	5622153	IdentifierDeclType	int		5622136	0					
ANR	5622154	Identifier	alength		5622136	1					
ANR	5622155	IdentifierDecl	bufset = 0		5622136	5					
ANR	5622156	IdentifierDeclType	int		5622136	0					
ANR	5622157	Identifier	bufset		5622136	1					
ANR	5622158	AssignmentExpression	bufset = 0		5622136	2		=			
ANR	5622159	Identifier	bufset		5622136	0					
ANR	5622160	PrimaryExpression	0		5622136	1					
ANR	5622161	IdentifierDecl	is_ref = 0		5622136	6					
ANR	5622162	IdentifierDeclType	int		5622136	0					
ANR	5622163	Identifier	is_ref		5622136	1					
ANR	5622164	AssignmentExpression	is_ref = 0		5622136	2		=			
ANR	5622165	Identifier	is_ref		5622136	0					
ANR	5622166	PrimaryExpression	0		5622136	1					
ANR	5622167	IdentifierDecl	encode = 0		5622136	7					
ANR	5622168	IdentifierDeclType	int		5622136	0					
ANR	5622169	Identifier	encode		5622136	1					
ANR	5622170	AssignmentExpression	encode = 0		5622136	2		=			
ANR	5622171	Identifier	encode		5622136	0					
ANR	5622172	PrimaryExpression	0		5622136	1					
ANR	5622173	IdentifierDeclStatement	"const char * p , * q , * val = NULL ;"	168:1:3604:3634	5622136	1	True				
ANR	5622174	IdentifierDecl	* p		5622136	0					
ANR	5622175	IdentifierDeclType	const char *		5622136	0					
ANR	5622176	Identifier	p		5622136	1					
ANR	5622177	IdentifierDecl	* q		5622136	1					
ANR	5622178	IdentifierDeclType	const char *		5622136	0					
ANR	5622179	Identifier	q		5622136	1					
ANR	5622180	IdentifierDecl	* val = NULL		5622136	2					
ANR	5622181	IdentifierDeclType	const char *		5622136	0					
ANR	5622182	Identifier	val		5622136	1					
ANR	5622183	AssignmentExpression	* val = NULL		5622136	2		=			
ANR	5622184	Identifier	NULL		5622136	0					
ANR	5622185	Identifier	NULL		5622136	1					
ANR	5622186	IdentifierDeclStatement	"char * eq , * tmp , * json , * next , * quot , * arroba , * res , * cmd , * newcmd = NULL , * original_cmd = NULL ;"	169:1:3637:3733	5622136	2	True				
ANR	5622187	IdentifierDecl	* eq		5622136	0					
ANR	5622188	IdentifierDeclType	char *		5622136	0					
ANR	5622189	Identifier	eq		5622136	1					
ANR	5622190	IdentifierDecl	* tmp		5622136	1					
ANR	5622191	IdentifierDeclType	char *		5622136	0					
ANR	5622192	Identifier	tmp		5622136	1					
ANR	5622193	IdentifierDecl	* json		5622136	2					
ANR	5622194	IdentifierDeclType	char *		5622136	0					
ANR	5622195	Identifier	json		5622136	1					
ANR	5622196	IdentifierDecl	* next		5622136	3					
ANR	5622197	IdentifierDeclType	char *		5622136	0					
ANR	5622198	Identifier	next		5622136	1					
ANR	5622199	IdentifierDecl	* quot		5622136	4					
ANR	5622200	IdentifierDeclType	char *		5622136	0					
ANR	5622201	Identifier	quot		5622136	1					
ANR	5622202	IdentifierDecl	* arroba		5622136	5					
ANR	5622203	IdentifierDeclType	char *		5622136	0					
ANR	5622204	Identifier	arroba		5622136	1					
ANR	5622205	IdentifierDecl	* res		5622136	6					
ANR	5622206	IdentifierDeclType	char *		5622136	0					
ANR	5622207	Identifier	res		5622136	1					
ANR	5622208	IdentifierDecl	* cmd		5622136	7					
ANR	5622209	IdentifierDeclType	char *		5622136	0					
ANR	5622210	Identifier	cmd		5622136	1					
ANR	5622211	IdentifierDecl	* newcmd = NULL		5622136	8					
ANR	5622212	IdentifierDeclType	char *		5622136	0					
ANR	5622213	Identifier	newcmd		5622136	1					
ANR	5622214	AssignmentExpression	* newcmd = NULL		5622136	2		=			
ANR	5622215	Identifier	NULL		5622136	0					
ANR	5622216	Identifier	NULL		5622136	1					
ANR	5622217	IdentifierDecl	* original_cmd = NULL		5622136	9					
ANR	5622218	IdentifierDeclType	char *		5622136	0					
ANR	5622219	Identifier	original_cmd		5622136	1					
ANR	5622220	AssignmentExpression	* original_cmd = NULL		5622136	2		=			
ANR	5622221	Identifier	NULL		5622136	0					
ANR	5622222	Identifier	NULL		5622136	1					
ANR	5622223	IdentifierDeclStatement	StrBuf * out ;	171:1:3736:3747	5622136	3	True				
ANR	5622224	IdentifierDecl	* out		5622136	0					
ANR	5622225	IdentifierDeclType	StrBuf *		5622136	0					
ANR	5622226	Identifier	out		5622136	1					
ANR	5622227	IdentifierDeclStatement	Sdb * s = r ;	172:1:3750:3760	5622136	4	True				
ANR	5622228	IdentifierDecl	* s = r		5622136	0					
ANR	5622229	IdentifierDeclType	Sdb *		5622136	0					
ANR	5622230	Identifier	s		5622136	1					
ANR	5622231	AssignmentExpression	* s = r		5622136	2		=			
ANR	5622232	Identifier	r		5622136	0					
ANR	5622233	Identifier	r		5622136	1					
ANR	5622234	IdentifierDeclStatement	ut64 n ;	173:1:3763:3769	5622136	5	True				
ANR	5622235	IdentifierDecl	n		5622136	0					
ANR	5622236	IdentifierDeclType	ut64		5622136	0					
ANR	5622237	Identifier	n		5622136	1					
ANR	5622238	IfStatement	if ( ! s || ( ! _cmd && ! buf ) )		5622136	6					
ANR	5622239	Condition	! s || ( ! _cmd && ! buf )	174:5:3776:3796	5622136	0	True				
ANR	5622240	OrExpression	! s || ( ! _cmd && ! buf )		5622136	0		||			
ANR	5622241	UnaryOperationExpression	! s		5622136	0					
ANR	5622242	UnaryOperator	!		5622136	0					
ANR	5622243	Identifier	s		5622136	1					
ANR	5622244	AndExpression	! _cmd && ! buf		5622136	1		&&			
ANR	5622245	UnaryOperationExpression	! _cmd		5622136	0					
ANR	5622246	UnaryOperator	!		5622136	0					
ANR	5622247	Identifier	_cmd		5622136	1					
ANR	5622248	UnaryOperationExpression	! buf		5622136	1					
ANR	5622249	UnaryOperator	!		5622136	0					
ANR	5622250	Identifier	buf		5622136	1					
ANR	5622251	CompoundStatement		9:28:260:260	5622136	1					
ANR	5622252	ReturnStatement	return NULL ;	175:2:3803:3814	5622136	0	True				
ANR	5622253	Identifier	NULL		5622136	0					
ANR	5622254	ExpressionStatement	out = strbuf_new ( )	177:1:3820:3839	5622136	7	True				
ANR	5622255	AssignmentExpression	out = strbuf_new ( )		5622136	0		=			
ANR	5622256	Identifier	out		5622136	0					
ANR	5622257	CallExpression	strbuf_new ( )		5622136	1					
ANR	5622258	Callee	strbuf_new		5622136	0					
ANR	5622259	Identifier	strbuf_new		5622136	0					
ANR	5622260	ArgumentList			5622136	1					
ANR	5622261	IfStatement	if ( ( int ) len < 1 || ! buf )		5622136	8					
ANR	5622262	Condition	( int ) len < 1 || ! buf	178:5:3846:3865	5622136	0	True				
ANR	5622263	OrExpression	( int ) len < 1 || ! buf		5622136	0		||			
ANR	5622264	RelationalExpression	( int ) len < 1		5622136	0		<			
ANR	5622265	CastExpression	( int ) len		5622136	0					
ANR	5622266	CastTarget	int		5622136	0					
ANR	5622267	Identifier	len		5622136	1					
ANR	5622268	PrimaryExpression	1		5622136	1					
ANR	5622269	UnaryOperationExpression	! buf		5622136	1					
ANR	5622270	UnaryOperator	!		5622136	0					
ANR	5622271	Identifier	buf		5622136	1					
ANR	5622272	CompoundStatement		13:27:329:329	5622136	1					
ANR	5622273	ExpressionStatement	bufset = 1	179:2:3872:3882	5622136	0	True				
ANR	5622274	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5622275	Identifier	bufset		5622136	0					
ANR	5622276	PrimaryExpression	1		5622136	1					
ANR	5622277	ExpressionStatement	buf = malloc ( ( len = 64 ) )	180:2:3886:3911	5622136	1	True				
ANR	5622278	AssignmentExpression	buf = malloc ( ( len = 64 ) )		5622136	0		=			
ANR	5622279	Identifier	buf		5622136	0					
ANR	5622280	CallExpression	malloc ( ( len = 64 ) )		5622136	1					
ANR	5622281	Callee	malloc		5622136	0					
ANR	5622282	Identifier	malloc		5622136	0					
ANR	5622283	ArgumentList	len = 64		5622136	1					
ANR	5622284	Argument	len = 64		5622136	0					
ANR	5622285	AssignmentExpression	len = 64		5622136	0		=			
ANR	5622286	Identifier	len		5622136	0					
ANR	5622287	PrimaryExpression	64		5622136	1					
ANR	5622288	IfStatement	if ( ! buf )		5622136	2					
ANR	5622289	Condition	! buf	181:6:3919:3922	5622136	0	True				
ANR	5622290	UnaryOperationExpression	! buf		5622136	0					
ANR	5622291	UnaryOperator	!		5622136	0					
ANR	5622292	Identifier	buf		5622136	1					
ANR	5622293	CompoundStatement		16:12:386:386	5622136	1					
ANR	5622294	ExpressionStatement	strbuf_free ( out )	182:3:3930:3947	5622136	0	True				
ANR	5622295	CallExpression	strbuf_free ( out )		5622136	0					
ANR	5622296	Callee	strbuf_free		5622136	0					
ANR	5622297	Identifier	strbuf_free		5622136	0					
ANR	5622298	ArgumentList	out		5622136	1					
ANR	5622299	Argument	out		5622136	0					
ANR	5622300	Identifier	out		5622136	0					
ANR	5622301	ReturnStatement	return NULL ;	183:3:3952:3963	5622136	1	True				
ANR	5622302	Identifier	NULL		5622136	0					
ANR	5622303	IfStatement	if ( _cmd )		5622136	9					
ANR	5622304	Condition	_cmd	186:5:3977:3980	5622136	0	True				
ANR	5622305	Identifier	_cmd		5622136	0					
ANR	5622306	CompoundStatement		21:11:444:444	5622136	1					
ANR	5622307	ExpressionStatement	cmd = original_cmd = strdup ( _cmd )	187:2:3987:4021	5622136	0	True				
ANR	5622308	AssignmentExpression	cmd = original_cmd = strdup ( _cmd )		5622136	0		=			
ANR	5622309	Identifier	cmd		5622136	0					
ANR	5622310	AssignmentExpression	original_cmd = strdup ( _cmd )		5622136	1		=			
ANR	5622311	Identifier	original_cmd		5622136	0					
ANR	5622312	CallExpression	strdup ( _cmd )		5622136	1					
ANR	5622313	Callee	strdup		5622136	0					
ANR	5622314	Identifier	strdup		5622136	0					
ANR	5622315	ArgumentList	_cmd		5622136	1					
ANR	5622316	Argument	_cmd		5622136	0					
ANR	5622317	Identifier	_cmd		5622136	0					
ANR	5622318	IfStatement	if ( ! cmd )		5622136	1					
ANR	5622319	Condition	! cmd	188:6:4029:4032	5622136	0	True				
ANR	5622320	UnaryOperationExpression	! cmd		5622136	0					
ANR	5622321	UnaryOperator	!		5622136	0					
ANR	5622322	Identifier	cmd		5622136	1					
ANR	5622323	CompoundStatement		23:12:496:496	5622136	1					
ANR	5622324	ExpressionStatement	free ( out )	189:3:4040:4050	5622136	0	True				
ANR	5622325	CallExpression	free ( out )		5622136	0					
ANR	5622326	Callee	free		5622136	0					
ANR	5622327	Identifier	free		5622136	0					
ANR	5622328	ArgumentList	out		5622136	1					
ANR	5622329	Argument	out		5622136	0					
ANR	5622330	Identifier	out		5622136	0					
ANR	5622331	IfStatement	if ( bufset )		5622136	1					
ANR	5622332	Condition	bufset	190:7:4059:4064	5622136	0	True				
ANR	5622333	Identifier	bufset		5622136	0					
ANR	5622334	CompoundStatement		25:15:528:528	5622136	1					
ANR	5622335	ExpressionStatement	free ( buf )	191:4:4073:4083	5622136	0	True				
ANR	5622336	CallExpression	free ( buf )		5622136	0					
ANR	5622337	Callee	free		5622136	0					
ANR	5622338	Identifier	free		5622136	0					
ANR	5622339	ArgumentList	buf		5622136	1					
ANR	5622340	Argument	buf		5622136	0					
ANR	5622341	Identifier	buf		5622136	0					
ANR	5622342	ReturnStatement	return NULL ;	193:3:4093:4104	5622136	2	True				
ANR	5622343	Identifier	NULL		5622136	0					
ANR	5622344	ElseStatement	else		5622136	0					
ANR	5622345	CompoundStatement		30:8:579:579	5622136	0					
ANR	5622346	ExpressionStatement	cmd = buf	196:2:4122:4131	5622136	0	True				
ANR	5622347	AssignmentExpression	cmd = buf		5622136	0		=			
ANR	5622348	Identifier	cmd		5622136	0					
ANR	5622349	Identifier	buf		5622136	1					
ANR	5622350	ExpressionStatement	next = NULL	199:1:4176:4187	5622136	10	True				
ANR	5622351	AssignmentExpression	next = NULL		5622136	0		=			
ANR	5622352	Identifier	next		5622136	0					
ANR	5622353	Identifier	NULL		5622136	1					
ANR	5622354	Label	repeat :	200:0:4189:4195	5622136	11	True				
ANR	5622355	Identifier	repeat		5622136	0					
ANR	5622356	WhileStatement	while ( * cmd && ( * cmd == ' ' || * cmd == '\\t' ) )		5622136	12					
ANR	5622357	Condition	* cmd && ( * cmd == ' ' || * cmd == '\\t' )	202:8:4224:4260	5622136	0	True				
ANR	5622358	AndExpression	* cmd && ( * cmd == ' ' || * cmd == '\\t' )		5622136	0		&&			
ANR	5622359	UnaryOperationExpression	* cmd		5622136	0					
ANR	5622360	UnaryOperator	*		5622136	0					
ANR	5622361	Identifier	cmd		5622136	1					
ANR	5622362	OrExpression	* cmd == ' ' || * cmd == '\\t'		5622136	1		||			
ANR	5622363	EqualityExpression	* cmd == ' '		5622136	0		==			
ANR	5622364	UnaryOperationExpression	* cmd		5622136	0					
ANR	5622365	UnaryOperator	*		5622136	0					
ANR	5622366	Identifier	cmd		5622136	1					
ANR	5622367	PrimaryExpression	' '		5622136	1					
ANR	5622368	EqualityExpression	* cmd == '\\t'		5622136	1		==			
ANR	5622369	UnaryOperationExpression	* cmd		5622136	0					
ANR	5622370	UnaryOperator	*		5622136	0					
ANR	5622371	Identifier	cmd		5622136	1					
ANR	5622372	PrimaryExpression	'\\t'		5622136	1					
ANR	5622373	CompoundStatement		37:47:724:724	5622136	1					
ANR	5622374	ExpressionStatement	cmd ++	203:2:4267:4272	5622136	0	True				
ANR	5622375	PostIncDecOperationExpression	cmd ++		5622136	0					
ANR	5622376	Identifier	cmd		5622136	0					
ANR	5622377	IncDec	++		5622136	1					
ANR	5622378	ExpressionStatement	s = r	205:1:4278:4283	5622136	13	True				
ANR	5622379	AssignmentExpression	s = r		5622136	0		=			
ANR	5622380	Identifier	s		5622136	0					
ANR	5622381	Identifier	r		5622136	1					
ANR	5622382	ExpressionStatement	p = cmd	206:1:4286:4293	5622136	14	True				
ANR	5622383	AssignmentExpression	p = cmd		5622136	0		=			
ANR	5622384	Identifier	p		5622136	0					
ANR	5622385	Identifier	cmd		5622136	1					
ANR	5622386	ExpressionStatement	eq = NULL	207:1:4296:4305	5622136	15	True				
ANR	5622387	AssignmentExpression	eq = NULL		5622136	0		=			
ANR	5622388	Identifier	eq		5622136	0					
ANR	5622389	Identifier	NULL		5622136	1					
ANR	5622390	ExpressionStatement	encode = 0	208:1:4308:4318	5622136	16	True				
ANR	5622391	AssignmentExpression	encode = 0		5622136	0		=			
ANR	5622392	Identifier	encode		5622136	0					
ANR	5622393	PrimaryExpression	0		5622136	1					
ANR	5622394	ExpressionStatement	is_ref = 0	209:1:4321:4331	5622136	17	True				
ANR	5622395	AssignmentExpression	is_ref = 0		5622136	0		=			
ANR	5622396	Identifier	is_ref		5622136	0					
ANR	5622397	PrimaryExpression	0		5622136	1					
ANR	5622398	ExpressionStatement	quot = NULL	210:1:4334:4345	5622136	18	True				
ANR	5622399	AssignmentExpression	quot = NULL		5622136	0		=			
ANR	5622400	Identifier	quot		5622136	0					
ANR	5622401	Identifier	NULL		5622136	1					
ANR	5622402	ExpressionStatement	json = NULL	211:1:4348:4359	5622136	19	True				
ANR	5622403	AssignmentExpression	json = NULL		5622136	0		=			
ANR	5622404	Identifier	json		5622136	0					
ANR	5622405	Identifier	NULL		5622136	1					
ANR	5622406	IfStatement	if ( * p == '#' )		5622136	20					
ANR	5622407	Condition	* p == '#'	212:5:4366:4374	5622136	0	True				
ANR	5622408	EqualityExpression	* p == '#'		5622136	0		==			
ANR	5622409	UnaryOperationExpression	* p		5622136	0					
ANR	5622410	UnaryOperator	*		5622136	0					
ANR	5622411	Identifier	p		5622136	1					
ANR	5622412	PrimaryExpression	'#'		5622136	1					
ANR	5622413	CompoundStatement		47:16:838:838	5622136	1					
ANR	5622414	ExpressionStatement	p ++	213:2:4381:4384	5622136	0	True				
ANR	5622415	PostIncDecOperationExpression	p ++		5622136	0					
ANR	5622416	Identifier	p		5622136	0					
ANR	5622417	IncDec	++		5622136	1					
ANR	5622418	ExpressionStatement	"next = strchr ( p , ';' )"	214:2:4388:4410	5622136	1	True				
ANR	5622419	AssignmentExpression	"next = strchr ( p , ';' )"		5622136	0		=			
ANR	5622420	Identifier	next		5622136	0					
ANR	5622421	CallExpression	"strchr ( p , ';' )"		5622136	1					
ANR	5622422	Callee	strchr		5622136	0					
ANR	5622423	Identifier	strchr		5622136	0					
ANR	5622424	ArgumentList	p		5622136	1					
ANR	5622425	Argument	p		5622136	0					
ANR	5622426	Identifier	p		5622136	0					
ANR	5622427	Argument	';'		5622136	1					
ANR	5622428	PrimaryExpression	';'		5622136	0					
ANR	5622429	IfStatement	if ( next )		5622136	2					
ANR	5622430	Condition	next	215:6:4418:4421	5622136	0	True				
ANR	5622431	Identifier	next		5622136	0					
ANR	5622432	CompoundStatement		50:12:885:885	5622136	1					
ANR	5622433	ExpressionStatement	* next = 0	216:3:4429:4438	5622136	0	True				
ANR	5622434	AssignmentExpression	* next = 0		5622136	0		=			
ANR	5622435	UnaryOperationExpression	* next		5622136	0					
ANR	5622436	UnaryOperator	*		5622136	0					
ANR	5622437	Identifier	next		5622136	1					
ANR	5622438	PrimaryExpression	0		5622136	1					
ANR	5622439	ExpressionStatement	"out_concat ( sdb_fmt ( ""0x%08x\\n"" , sdb_hash ( p ) ) )"	218:2:4446:4493	5622136	3	True				
ANR	5622440	CallExpression	"out_concat ( sdb_fmt ( ""0x%08x\\n"" , sdb_hash ( p ) ) )"		5622136	0					
ANR	5622441	Callee	out_concat		5622136	0					
ANR	5622442	Identifier	out_concat		5622136	0					
ANR	5622443	ArgumentList	"sdb_fmt ( ""0x%08x\\n"" , sdb_hash ( p ) )"		5622136	1					
ANR	5622444	Argument	"sdb_fmt ( ""0x%08x\\n"" , sdb_hash ( p ) )"		5622136	0					
ANR	5622445	CallExpression	"sdb_fmt ( ""0x%08x\\n"" , sdb_hash ( p ) )"		5622136	0					
ANR	5622446	Callee	sdb_fmt		5622136	0					
ANR	5622447	Identifier	sdb_fmt		5622136	0					
ANR	5622448	ArgumentList	"""0x%08x\\n"""		5622136	1					
ANR	5622449	Argument	"""0x%08x\\n"""		5622136	0					
ANR	5622450	PrimaryExpression	"""0x%08x\\n"""		5622136	0					
ANR	5622451	Argument	sdb_hash ( p )		5622136	1					
ANR	5622452	CallExpression	sdb_hash ( p )		5622136	0					
ANR	5622453	Callee	sdb_hash		5622136	0					
ANR	5622454	Identifier	sdb_hash		5622136	0					
ANR	5622455	ArgumentList	p		5622136	1					
ANR	5622456	Argument	p		5622136	0					
ANR	5622457	Identifier	p		5622136	0					
ANR	5622458	IfStatement	if ( next )		5622136	4					
ANR	5622459	Condition	next	219:6:4501:4504	5622136	0	True				
ANR	5622460	Identifier	next		5622136	0					
ANR	5622461	CompoundStatement		54:12:968:968	5622136	1					
ANR	5622462	ExpressionStatement	* next = ';'	220:3:4512:4523	5622136	0	True				
ANR	5622463	AssignmentExpression	* next = ';'		5622136	0		=			
ANR	5622464	UnaryOperationExpression	* next		5622136	0					
ANR	5622465	UnaryOperator	*		5622136	0					
ANR	5622466	Identifier	next		5622136	1					
ANR	5622467	PrimaryExpression	';'		5622136	1					
ANR	5622468	GotoStatement	goto runNext ;	222:2:4531:4543	5622136	5	True				
ANR	5622469	Identifier	runNext		5622136	0					
ANR	5622470	ElseStatement	else		5622136	0					
ANR	5622471	IfStatement	if ( * p == '%' )		5622136	0					
ANR	5622472	Condition	* p == '%'	224:5:4558:4566	5622136	0	True				
ANR	5622473	EqualityExpression	* p == '%'		5622136	0		==			
ANR	5622474	UnaryOperationExpression	* p		5622136	0					
ANR	5622475	UnaryOperator	*		5622136	0					
ANR	5622476	Identifier	p		5622136	1					
ANR	5622477	PrimaryExpression	'%'		5622136	1					
ANR	5622478	CompoundStatement		59:16:1030:1030	5622136	1					
ANR	5622479	ExpressionStatement	encode = 1	225:2:4573:4583	5622136	0	True				
ANR	5622480	AssignmentExpression	encode = 1		5622136	0		=			
ANR	5622481	Identifier	encode		5622136	0					
ANR	5622482	PrimaryExpression	1		5622136	1					
ANR	5622483	ExpressionStatement	cmd ++	226:2:4587:4592	5622136	1	True				
ANR	5622484	PostIncDecOperationExpression	cmd ++		5622136	0					
ANR	5622485	Identifier	cmd		5622136	0					
ANR	5622486	IncDec	++		5622136	1					
ANR	5622487	ExpressionStatement	p ++	227:2:4596:4599	5622136	2	True				
ANR	5622488	PostIncDecOperationExpression	p ++		5622136	0					
ANR	5622489	Identifier	p		5622136	0					
ANR	5622490	IncDec	++		5622136	1					
ANR	5622491	IfStatement	if ( next )		5622136	21					
ANR	5622492	Condition	next	229:5:4609:4612	5622136	0	True				
ANR	5622493	Identifier	next		5622136	0					
ANR	5622494	ExpressionStatement	* next = ';'	229:11:4615:4626	5622136	1	True				
ANR	5622495	AssignmentExpression	* next = ';'		5622136	0		=			
ANR	5622496	UnaryOperationExpression	* next		5622136	0					
ANR	5622497	UnaryOperator	*		5622136	0					
ANR	5622498	Identifier	next		5622136	1					
ANR	5622499	PrimaryExpression	';'		5622136	1					
ANR	5622500	ExpressionStatement	"eq = strchr ( p , '=' )"	230:1:4629:4649	5622136	22	True				
ANR	5622501	AssignmentExpression	"eq = strchr ( p , '=' )"		5622136	0		=			
ANR	5622502	Identifier	eq		5622136	0					
ANR	5622503	CallExpression	"strchr ( p , '=' )"		5622136	1					
ANR	5622504	Callee	strchr		5622136	0					
ANR	5622505	Identifier	strchr		5622136	0					
ANR	5622506	ArgumentList	p		5622136	1					
ANR	5622507	Argument	p		5622136	0					
ANR	5622508	Identifier	p		5622136	0					
ANR	5622509	Argument	'='		5622136	1					
ANR	5622510	PrimaryExpression	'='		5622136	0					
ANR	5622511	IfStatement	if ( eq )		5622136	23					
ANR	5622512	Condition	eq	231:5:4656:4657	5622136	0	True				
ANR	5622513	Identifier	eq		5622136	0					
ANR	5622514	CompoundStatement		66:9:1121:1121	5622136	1					
ANR	5622515	ExpressionStatement	d = 1	232:2:4664:4669	5622136	0	True				
ANR	5622516	AssignmentExpression	d = 1		5622136	0		=			
ANR	5622517	Identifier	d		5622136	0					
ANR	5622518	PrimaryExpression	1		5622136	1					
ANR	5622519	ExpressionStatement	* eq ++ = 0	233:2:4673:4682	5622136	1	True				
ANR	5622520	AssignmentExpression	* eq ++ = 0		5622136	0		=			
ANR	5622521	UnaryOperationExpression	* eq ++		5622136	0					
ANR	5622522	UnaryOperator	*		5622136	0					
ANR	5622523	PostIncDecOperationExpression	eq ++		5622136	1					
ANR	5622524	Identifier	eq		5622136	0					
ANR	5622525	IncDec	++		5622136	1					
ANR	5622526	PrimaryExpression	0		5622136	1					
ANR	5622527	IfStatement	if ( * eq == '$' )		5622136	2					
ANR	5622528	Condition	* eq == '$'	234:6:4690:4699	5622136	0	True				
ANR	5622529	EqualityExpression	* eq == '$'		5622136	0		==			
ANR	5622530	UnaryOperationExpression	* eq		5622136	0					
ANR	5622531	UnaryOperator	*		5622136	0					
ANR	5622532	Identifier	eq		5622136	1					
ANR	5622533	PrimaryExpression	'$'		5622136	1					
ANR	5622534	CompoundStatement		69:18:1163:1163	5622136	1					
ANR	5622535	ExpressionStatement	"next = strchr ( eq + 1 , ';' )"	235:3:4707:4734	5622136	0	True				
ANR	5622536	AssignmentExpression	"next = strchr ( eq + 1 , ';' )"		5622136	0		=			
ANR	5622537	Identifier	next		5622136	0					
ANR	5622538	CallExpression	"strchr ( eq + 1 , ';' )"		5622136	1					
ANR	5622539	Callee	strchr		5622136	0					
ANR	5622540	Identifier	strchr		5622136	0					
ANR	5622541	ArgumentList	eq + 1		5622136	1					
ANR	5622542	Argument	eq + 1		5622136	0					
ANR	5622543	AdditiveExpression	eq + 1		5622136	0		+			
ANR	5622544	Identifier	eq		5622136	0					
ANR	5622545	PrimaryExpression	1		5622136	1					
ANR	5622546	Argument	';'		5622136	1					
ANR	5622547	PrimaryExpression	';'		5622136	0					
ANR	5622548	IfStatement	if ( next )		5622136	1					
ANR	5622549	Condition	next	236:7:4743:4746	5622136	0	True				
ANR	5622550	Identifier	next		5622136	0					
ANR	5622551	ExpressionStatement	* next = 0	236:13:4749:4758	5622136	1	True				
ANR	5622552	AssignmentExpression	* next = 0		5622136	0		=			
ANR	5622553	UnaryOperationExpression	* next		5622136	0					
ANR	5622554	UnaryOperator	*		5622136	0					
ANR	5622555	Identifier	next		5622136	1					
ANR	5622556	PrimaryExpression	0		5622136	1					
ANR	5622557	ExpressionStatement	"val = sdb_const_get ( s , eq + 1 , 0 )"	237:3:4763:4797	5622136	2	True				
ANR	5622558	AssignmentExpression	"val = sdb_const_get ( s , eq + 1 , 0 )"		5622136	0		=			
ANR	5622559	Identifier	val		5622136	0					
ANR	5622560	CallExpression	"sdb_const_get ( s , eq + 1 , 0 )"		5622136	1					
ANR	5622561	Callee	sdb_const_get		5622136	0					
ANR	5622562	Identifier	sdb_const_get		5622136	0					
ANR	5622563	ArgumentList	s		5622136	1					
ANR	5622564	Argument	s		5622136	0					
ANR	5622565	Identifier	s		5622136	0					
ANR	5622566	Argument	eq + 1		5622136	1					
ANR	5622567	AdditiveExpression	eq + 1		5622136	0		+			
ANR	5622568	Identifier	eq		5622136	0					
ANR	5622569	PrimaryExpression	1		5622136	1					
ANR	5622570	Argument	0		5622136	2					
ANR	5622571	PrimaryExpression	0		5622136	0					
ANR	5622572	IfStatement	if ( ! val )		5622136	3					
ANR	5622573	Condition	! val	238:7:4806:4809	5622136	0	True				
ANR	5622574	UnaryOperationExpression	! val		5622136	0					
ANR	5622575	UnaryOperator	!		5622136	0					
ANR	5622576	Identifier	val		5622136	1					
ANR	5622577	CompoundStatement		73:13:1273:1273	5622136	1					
ANR	5622578	ExpressionStatement	"eprintf ( ""No value for '%s'\\n"" , eq + 1 )"	239:4:4818:4857	5622136	0	True				
ANR	5622579	CallExpression	"eprintf ( ""No value for '%s'\\n"" , eq + 1 )"		5622136	0					
ANR	5622580	Callee	eprintf		5622136	0					
ANR	5622581	Identifier	eprintf		5622136	0					
ANR	5622582	ArgumentList	"""No value for '%s'\\n"""		5622136	1					
ANR	5622583	Argument	"""No value for '%s'\\n"""		5622136	0					
ANR	5622584	PrimaryExpression	"""No value for '%s'\\n"""		5622136	0					
ANR	5622585	Argument	eq + 1		5622136	1					
ANR	5622586	AdditiveExpression	eq + 1		5622136	0		+			
ANR	5622587	Identifier	eq		5622136	0					
ANR	5622588	PrimaryExpression	1		5622136	1					
ANR	5622589	GotoStatement	goto fail ;	240:4:4863:4872	5622136	1	True				
ANR	5622590	Identifier	fail		5622136	0					
ANR	5622591	IfStatement	if ( next )		5622136	4					
ANR	5622592	Condition	next	242:7:4886:4889	5622136	0	True				
ANR	5622593	Identifier	next		5622136	0					
ANR	5622594	ExpressionStatement	* next = ';'	242:13:4892:4903	5622136	1	True				
ANR	5622595	AssignmentExpression	* next = ';'		5622136	0		=			
ANR	5622596	UnaryOperationExpression	* next		5622136	0					
ANR	5622597	UnaryOperator	*		5622136	0					
ANR	5622598	Identifier	next		5622136	1					
ANR	5622599	PrimaryExpression	';'		5622136	1					
ANR	5622600	ExpressionStatement	is_ref = 1	243:3:4908:4918	5622136	5	True				
ANR	5622601	AssignmentExpression	is_ref = 1		5622136	0		=			
ANR	5622602	Identifier	is_ref		5622136	0					
ANR	5622603	PrimaryExpression	1		5622136	1					
ANR	5622604	ElseStatement	else		5622136	0					
ANR	5622605	CompoundStatement		79:9:1438:1438	5622136	0					
ANR	5622606	ExpressionStatement	val = eq	245:3:4982:4990	5622136	0	True				
ANR	5622607	AssignmentExpression	val = eq		5622136	0		=			
ANR	5622608	Identifier	val		5622136	0					
ANR	5622609	Identifier	eq		5622136	1					
ANR	5622610	ElseStatement	else		5622136	0					
ANR	5622611	CompoundStatement		82:8:1465:1465	5622136	0					
ANR	5622612	ExpressionStatement	val = NULL	248:2:5008:5018	5622136	0	True				
ANR	5622613	AssignmentExpression	val = NULL		5622136	0		=			
ANR	5622614	Identifier	val		5622136	0					
ANR	5622615	Identifier	NULL		5622136	1					
ANR	5622616	ExpressionStatement	d = 0	249:2:5022:5027	5622136	1	True				
ANR	5622617	AssignmentExpression	d = 0		5622136	0		=			
ANR	5622618	Identifier	d		5622136	0					
ANR	5622619	PrimaryExpression	0		5622136	1					
ANR	5622620	IfStatement	if ( ! is_ref )		5622136	24					
ANR	5622621	Condition	! is_ref	251:5:5037:5043	5622136	0	True				
ANR	5622622	UnaryOperationExpression	! is_ref		5622136	0					
ANR	5622623	UnaryOperator	!		5622136	0					
ANR	5622624	Identifier	is_ref		5622136	1					
ANR	5622625	CompoundStatement		86:14:1507:1507	5622136	1					
ANR	5622626	ExpressionStatement	"next = strchr ( val ? val : cmd , ';' )"	252:2:5050:5084	5622136	0	True				
ANR	5622627	AssignmentExpression	"next = strchr ( val ? val : cmd , ';' )"		5622136	0		=			
ANR	5622628	Identifier	next		5622136	0					
ANR	5622629	CallExpression	"strchr ( val ? val : cmd , ';' )"		5622136	1					
ANR	5622630	Callee	strchr		5622136	0					
ANR	5622631	Identifier	strchr		5622136	0					
ANR	5622632	ArgumentList	val ? val : cmd		5622136	1					
ANR	5622633	Argument	val ? val : cmd		5622136	0					
ANR	5622634	ConditionalExpression	val ? val : cmd		5622136	0					
ANR	5622635	Condition	val		5622136	0					
ANR	5622636	Identifier	val		5622136	0					
ANR	5622637	Identifier	val		5622136	1					
ANR	5622638	Identifier	cmd		5622136	2					
ANR	5622639	Argument	';'		5622136	1					
ANR	5622640	PrimaryExpression	';'		5622136	0					
ANR	5622641	IfStatement	"if ( ! is_ref && val && * val == '""' )"		5622136	25					
ANR	5622642	Condition	"! is_ref && val && * val == '""'"	255:5:5117:5145	5622136	0	True				
ANR	5622643	AndExpression	"! is_ref && val && * val == '""'"		5622136	0		&&			
ANR	5622644	UnaryOperationExpression	! is_ref		5622136	0					
ANR	5622645	UnaryOperator	!		5622136	0					
ANR	5622646	Identifier	is_ref		5622136	1					
ANR	5622647	AndExpression	"val && * val == '""'"		5622136	1		&&			
ANR	5622648	Identifier	val		5622136	0					
ANR	5622649	EqualityExpression	"* val == '""'"		5622136	1		==			
ANR	5622650	UnaryOperationExpression	* val		5622136	0					
ANR	5622651	UnaryOperator	*		5622136	0					
ANR	5622652	Identifier	val		5622136	1					
ANR	5622653	PrimaryExpression	"'""'"		5622136	1					
ANR	5622654	CompoundStatement		90:36:1609:1609	5622136	1					
ANR	5622655	ExpressionStatement	val ++	256:2:5152:5157	5622136	0	True				
ANR	5622656	PostIncDecOperationExpression	val ++		5622136	0					
ANR	5622657	Identifier	val		5622136	0					
ANR	5622658	IncDec	++		5622136	1					
ANR	5622659	ExpressionStatement	quot = ( char * ) val	258:2:5186:5203	5622136	1	True				
ANR	5622660	AssignmentExpression	quot = ( char * ) val		5622136	0		=			
ANR	5622661	Identifier	quot		5622136	0					
ANR	5622662	CastExpression	( char * ) val		5622136	1					
ANR	5622663	CastTarget	char *		5622136	0					
ANR	5622664	Identifier	val		5622136	1					
ANR	5622665	Label	next_quote :	259:0:5205:5215	5622136	2	True				
ANR	5622666	Identifier	next_quote		5622136	0					
ANR	5622667	ExpressionStatement	"quot = strchr ( quot , '""' )"	260:2:5219:5244	5622136	3	True				
ANR	5622668	AssignmentExpression	"quot = strchr ( quot , '""' )"		5622136	0		=			
ANR	5622669	Identifier	quot		5622136	0					
ANR	5622670	CallExpression	"strchr ( quot , '""' )"		5622136	1					
ANR	5622671	Callee	strchr		5622136	0					
ANR	5622672	Identifier	strchr		5622136	0					
ANR	5622673	ArgumentList	quot		5622136	1					
ANR	5622674	Argument	quot		5622136	0					
ANR	5622675	Identifier	quot		5622136	0					
ANR	5622676	Argument	"'""'"		5622136	1					
ANR	5622677	PrimaryExpression	"'""'"		5622136	0					
ANR	5622678	IfStatement	if ( quot )		5622136	4					
ANR	5622679	Condition	quot	261:6:5252:5255	5622136	0	True				
ANR	5622680	Identifier	quot		5622136	0					
ANR	5622681	CompoundStatement		96:12:1719:1719	5622136	1					
ANR	5622682	ExpressionStatement	quot --	262:3:5263:5269	5622136	0	True				
ANR	5622683	PostIncDecOperationExpression	quot --		5622136	0					
ANR	5622684	Identifier	quot		5622136	0					
ANR	5622685	IncDec	--		5622136	1					
ANR	5622686	IfStatement	if ( * quot == '\\\\' )		5622136	1					
ANR	5622687	Condition	* quot == '\\\\'	263:7:5278:5288	5622136	0	True				
ANR	5622688	EqualityExpression	* quot == '\\\\'		5622136	0		==			
ANR	5622689	UnaryOperationExpression	* quot		5622136	0					
ANR	5622690	UnaryOperator	*		5622136	0					
ANR	5622691	Identifier	quot		5622136	1					
ANR	5622692	PrimaryExpression	'\\\\'		5622136	1					
ANR	5622693	CompoundStatement		98:20:1752:1752	5622136	1					
ANR	5622694	ExpressionStatement	"memmove ( quot , quot + 1 , strlen ( quot ) )"	264:4:5297:5336	5622136	0	True				
ANR	5622695	CallExpression	"memmove ( quot , quot + 1 , strlen ( quot ) )"		5622136	0					
ANR	5622696	Callee	memmove		5622136	0					
ANR	5622697	Identifier	memmove		5622136	0					
ANR	5622698	ArgumentList	quot		5622136	1					
ANR	5622699	Argument	quot		5622136	0					
ANR	5622700	Identifier	quot		5622136	0					
ANR	5622701	Argument	quot + 1		5622136	1					
ANR	5622702	AdditiveExpression	quot + 1		5622136	0		+			
ANR	5622703	Identifier	quot		5622136	0					
ANR	5622704	PrimaryExpression	1		5622136	1					
ANR	5622705	Argument	strlen ( quot )		5622136	2					
ANR	5622706	CallExpression	strlen ( quot )		5622136	0					
ANR	5622707	Callee	strlen		5622136	0					
ANR	5622708	Identifier	strlen		5622136	0					
ANR	5622709	ArgumentList	quot		5622136	1					
ANR	5622710	Argument	quot		5622136	0					
ANR	5622711	Identifier	quot		5622136	0					
ANR	5622712	ExpressionStatement	quot += 2	265:4:5342:5351	5622136	1	True				
ANR	5622713	AssignmentExpression	quot += 2		5622136	0		+=			
ANR	5622714	Identifier	quot		5622136	0					
ANR	5622715	PrimaryExpression	2		5622136	1					
ANR	5622716	GotoStatement	goto next_quote ;	266:4:5357:5372	5622136	2	True				
ANR	5622717	Identifier	next_quote		5622136	0					
ANR	5622718	ExpressionStatement	quot ++	268:3:5382:5388	5622136	2	True				
ANR	5622719	PostIncDecOperationExpression	quot ++		5622136	0					
ANR	5622720	Identifier	quot		5622136	0					
ANR	5622721	IncDec	++		5622136	1					
ANR	5622722	ExpressionStatement	* quot ++ = 0	269:3:5393:5404	5622136	3	True				
ANR	5622723	AssignmentExpression	* quot ++ = 0		5622136	0		=			
ANR	5622724	UnaryOperationExpression	* quot ++		5622136	0					
ANR	5622725	UnaryOperator	*		5622136	0					
ANR	5622726	PostIncDecOperationExpression	quot ++		5622136	1					
ANR	5622727	Identifier	quot		5622136	0					
ANR	5622728	IncDec	++		5622136	1					
ANR	5622729	PrimaryExpression	0		5622136	1					
ANR	5622730	ElseStatement	else		5622136	0					
ANR	5622731	CompoundStatement		105:9:1904:1904	5622136	0					
ANR	5622732	ExpressionStatement	"eprintf ( ""Missing quote\\n"" )"	271:3:5448:5475	5622136	0	True				
ANR	5622733	CallExpression	"eprintf ( ""Missing quote\\n"" )"		5622136	0					
ANR	5622734	Callee	eprintf		5622136	0					
ANR	5622735	Identifier	eprintf		5622136	0					
ANR	5622736	ArgumentList	"""Missing quote\\n"""		5622136	1					
ANR	5622737	Argument	"""Missing quote\\n"""		5622136	0					
ANR	5622738	PrimaryExpression	"""Missing quote\\n"""		5622136	0					
ANR	5622739	ExpressionStatement	* eq ++ = 0	272:3:5480:5489	5622136	1	True				
ANR	5622740	AssignmentExpression	* eq ++ = 0		5622136	0		=			
ANR	5622741	UnaryOperationExpression	* eq ++		5622136	0					
ANR	5622742	UnaryOperator	*		5622136	0					
ANR	5622743	PostIncDecOperationExpression	eq ++		5622136	1					
ANR	5622744	Identifier	eq		5622136	0					
ANR	5622745	IncDec	++		5622136	1					
ANR	5622746	PrimaryExpression	0		5622136	1					
ANR	5622747	ExpressionStatement	out = strbuf_free ( out )	273:3:5494:5517	5622136	2	True				
ANR	5622748	AssignmentExpression	out = strbuf_free ( out )		5622136	0		=			
ANR	5622749	Identifier	out		5622136	0					
ANR	5622750	CallExpression	strbuf_free ( out )		5622136	1					
ANR	5622751	Callee	strbuf_free		5622136	0					
ANR	5622752	Identifier	strbuf_free		5622136	0					
ANR	5622753	ArgumentList	out		5622136	1					
ANR	5622754	Argument	out		5622136	0					
ANR	5622755	Identifier	out		5622136	0					
ANR	5622756	GotoStatement	goto fail ;	274:3:5522:5531	5622136	3	True				
ANR	5622757	Identifier	fail		5622136	0					
ANR	5622758	ExpressionStatement	"next = strchr ( quot , ';' )"	276:2:5539:5564	5622136	5	True				
ANR	5622759	AssignmentExpression	"next = strchr ( quot , ';' )"		5622136	0		=			
ANR	5622760	Identifier	next		5622136	0					
ANR	5622761	CallExpression	"strchr ( quot , ';' )"		5622136	1					
ANR	5622762	Callee	strchr		5622136	0					
ANR	5622763	Identifier	strchr		5622136	0					
ANR	5622764	ArgumentList	quot		5622136	1					
ANR	5622765	Argument	quot		5622136	0					
ANR	5622766	Identifier	quot		5622136	0					
ANR	5622767	Argument	';'		5622136	1					
ANR	5622768	PrimaryExpression	';'		5622136	0					
ANR	5622769	ElseStatement	else		5622136	0					
ANR	5622770	CompoundStatement		112:8:2035:2035	5622136	0					
ANR	5622771	ExpressionStatement	quot = NULL	278:2:5578:5589	5622136	0	True				
ANR	5622772	AssignmentExpression	quot = NULL		5622136	0		=			
ANR	5622773	Identifier	quot		5622136	0					
ANR	5622774	Identifier	NULL		5622136	1					
ANR	5622775	IfStatement	if ( next )		5622136	26					
ANR	5622776	Condition	next	280:5:5599:5602	5622136	0	True				
ANR	5622777	Identifier	next		5622136	0					
ANR	5622778	CompoundStatement		115:11:2066:2066	5622136	1					
ANR	5622779	ExpressionStatement	* next = 0	281:2:5609:5618	5622136	0	True				
ANR	5622780	AssignmentExpression	* next = 0		5622136	0		=			
ANR	5622781	UnaryOperationExpression	* next		5622136	0					
ANR	5622782	UnaryOperator	*		5622136	0					
ANR	5622783	Identifier	next		5622136	1					
ANR	5622784	PrimaryExpression	0		5622136	1					
ANR	5622785	ExpressionStatement	"arroba = strchr ( cmd , '/' )"	283:1:5624:5650	5622136	27	True				
ANR	5622786	AssignmentExpression	"arroba = strchr ( cmd , '/' )"		5622136	0		=			
ANR	5622787	Identifier	arroba		5622136	0					
ANR	5622788	CallExpression	"strchr ( cmd , '/' )"		5622136	1					
ANR	5622789	Callee	strchr		5622136	0					
ANR	5622790	Identifier	strchr		5622136	0					
ANR	5622791	ArgumentList	cmd		5622136	1					
ANR	5622792	Argument	cmd		5622136	0					
ANR	5622793	Identifier	cmd		5622136	0					
ANR	5622794	Argument	'/'		5622136	1					
ANR	5622795	PrimaryExpression	'/'		5622136	0					
ANR	5622796	IfStatement	if ( arroba )		5622136	28					
ANR	5622797	Condition	arroba	284:5:5657:5662	5622136	0	True				
ANR	5622798	Identifier	arroba		5622136	0					
ANR	5622799	CompoundStatement		119:13:2126:2126	5622136	1					
ANR	5622800	Label	next_arroba :	285:1:5668:5679	5622136	0	True				
ANR	5622801	Identifier	next_arroba		5622136	0					
ANR	5622802	ExpressionStatement	* arroba = 0	286:2:5683:5694	5622136	1	True				
ANR	5622803	AssignmentExpression	* arroba = 0		5622136	0		=			
ANR	5622804	UnaryOperationExpression	* arroba		5622136	0					
ANR	5622805	UnaryOperator	*		5622136	0					
ANR	5622806	Identifier	arroba		5622136	1					
ANR	5622807	PrimaryExpression	0		5622136	1					
ANR	5622808	ExpressionStatement	"s = sdb_ns ( s , cmd , eq ? 1 : 0 )"	287:2:5698:5727	5622136	2	True				
ANR	5622809	AssignmentExpression	"s = sdb_ns ( s , cmd , eq ? 1 : 0 )"		5622136	0		=			
ANR	5622810	Identifier	s		5622136	0					
ANR	5622811	CallExpression	"sdb_ns ( s , cmd , eq ? 1 : 0 )"		5622136	1					
ANR	5622812	Callee	sdb_ns		5622136	0					
ANR	5622813	Identifier	sdb_ns		5622136	0					
ANR	5622814	ArgumentList	s		5622136	1					
ANR	5622815	Argument	s		5622136	0					
ANR	5622816	Identifier	s		5622136	0					
ANR	5622817	Argument	cmd		5622136	1					
ANR	5622818	Identifier	cmd		5622136	0					
ANR	5622819	Argument	eq ? 1 : 0		5622136	2					
ANR	5622820	ConditionalExpression	eq ? 1 : 0		5622136	0					
ANR	5622821	Condition	eq		5622136	0					
ANR	5622822	Identifier	eq		5622136	0					
ANR	5622823	PrimaryExpression	1		5622136	1					
ANR	5622824	PrimaryExpression	0		5622136	2					
ANR	5622825	IfStatement	if ( ! s )		5622136	3					
ANR	5622826	Condition	! s	288:6:5735:5736	5622136	0	True				
ANR	5622827	UnaryOperationExpression	! s		5622136	0					
ANR	5622828	UnaryOperator	!		5622136	0					
ANR	5622829	Identifier	s		5622136	1					
ANR	5622830	CompoundStatement		123:10:2200:2200	5622136	1					
ANR	5622831	ExpressionStatement	"eprintf ( ""Cant find namespace %s\\n"" , cmd )"	289:3:5744:5785	5622136	0	True				
ANR	5622832	CallExpression	"eprintf ( ""Cant find namespace %s\\n"" , cmd )"		5622136	0					
ANR	5622833	Callee	eprintf		5622136	0					
ANR	5622834	Identifier	eprintf		5622136	0					
ANR	5622835	ArgumentList	"""Cant find namespace %s\\n"""		5622136	1					
ANR	5622836	Argument	"""Cant find namespace %s\\n"""		5622136	0					
ANR	5622837	PrimaryExpression	"""Cant find namespace %s\\n"""		5622136	0					
ANR	5622838	Argument	cmd		5622136	1					
ANR	5622839	Identifier	cmd		5622136	0					
ANR	5622840	ExpressionStatement	out = strbuf_free ( out )	290:3:5790:5813	5622136	1	True				
ANR	5622841	AssignmentExpression	out = strbuf_free ( out )		5622136	0		=			
ANR	5622842	Identifier	out		5622136	0					
ANR	5622843	CallExpression	strbuf_free ( out )		5622136	1					
ANR	5622844	Callee	strbuf_free		5622136	0					
ANR	5622845	Identifier	strbuf_free		5622136	0					
ANR	5622846	ArgumentList	out		5622136	1					
ANR	5622847	Argument	out		5622136	0					
ANR	5622848	Identifier	out		5622136	0					
ANR	5622849	GotoStatement	goto fail ;	291:3:5818:5827	5622136	2	True				
ANR	5622850	Identifier	fail		5622136	0					
ANR	5622851	ExpressionStatement	cmd = arroba + 1	293:2:5835:5851	5622136	4	True				
ANR	5622852	AssignmentExpression	cmd = arroba + 1		5622136	0		=			
ANR	5622853	Identifier	cmd		5622136	0					
ANR	5622854	AdditiveExpression	arroba + 1		5622136	1		+			
ANR	5622855	Identifier	arroba		5622136	0					
ANR	5622856	PrimaryExpression	1		5622136	1					
ANR	5622857	ExpressionStatement	"arroba = strchr ( cmd , '/' )"	294:2:5855:5881	5622136	5	True				
ANR	5622858	AssignmentExpression	"arroba = strchr ( cmd , '/' )"		5622136	0		=			
ANR	5622859	Identifier	arroba		5622136	0					
ANR	5622860	CallExpression	"strchr ( cmd , '/' )"		5622136	1					
ANR	5622861	Callee	strchr		5622136	0					
ANR	5622862	Identifier	strchr		5622136	0					
ANR	5622863	ArgumentList	cmd		5622136	1					
ANR	5622864	Argument	cmd		5622136	0					
ANR	5622865	Identifier	cmd		5622136	0					
ANR	5622866	Argument	'/'		5622136	1					
ANR	5622867	PrimaryExpression	'/'		5622136	0					
ANR	5622868	IfStatement	if ( arroba )		5622136	6					
ANR	5622869	Condition	arroba	295:6:5889:5894	5622136	0	True				
ANR	5622870	Identifier	arroba		5622136	0					
ANR	5622871	CompoundStatement		130:14:2358:2358	5622136	1					
ANR	5622872	GotoStatement	goto next_arroba ;	296:3:5902:5918	5622136	0	True				
ANR	5622873	Identifier	next_arroba		5622136	0					
ANR	5622874	IfStatement	if ( * cmd == '?' )		5622136	29					
ANR	5622875	Condition	* cmd == '?'	299:5:5932:5940	5622136	0	True				
ANR	5622876	EqualityExpression	* cmd == '?'		5622136	0		==			
ANR	5622877	UnaryOperationExpression	* cmd		5622136	0					
ANR	5622878	UnaryOperator	*		5622136	0					
ANR	5622879	Identifier	cmd		5622136	1					
ANR	5622880	PrimaryExpression	'?'		5622136	1					
ANR	5622881	CompoundStatement		136:2:2457:2490	5622136	1					
ANR	5622882	IdentifierDeclStatement	"const char * val = sdb_const_get ( s , cmd + 1 , 0 ) ;"	300:2:5947:5992	5622136	0	True				
ANR	5622883	IdentifierDecl	"* val = sdb_const_get ( s , cmd + 1 , 0 )"		5622136	0					
ANR	5622884	IdentifierDeclType	const char *		5622136	0					
ANR	5622885	Identifier	val		5622136	1					
ANR	5622886	AssignmentExpression	"* val = sdb_const_get ( s , cmd + 1 , 0 )"		5622136	2		=			
ANR	5622887	Identifier	val		5622136	0					
ANR	5622888	CallExpression	"sdb_const_get ( s , cmd + 1 , 0 )"		5622136	1					
ANR	5622889	Callee	sdb_const_get		5622136	0					
ANR	5622890	Identifier	sdb_const_get		5622136	0					
ANR	5622891	ArgumentList	s		5622136	1					
ANR	5622892	Argument	s		5622136	0					
ANR	5622893	Identifier	s		5622136	0					
ANR	5622894	Argument	cmd + 1		5622136	1					
ANR	5622895	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5622896	Identifier	cmd		5622136	0					
ANR	5622897	PrimaryExpression	1		5622136	1					
ANR	5622898	Argument	0		5622136	2					
ANR	5622899	PrimaryExpression	0		5622136	0					
ANR	5622900	IdentifierDeclStatement	const char * type = sdb_type ( val ) ;	301:2:5996:6029	5622136	1	True				
ANR	5622901	IdentifierDecl	* type = sdb_type ( val )		5622136	0					
ANR	5622902	IdentifierDeclType	const char *		5622136	0					
ANR	5622903	Identifier	type		5622136	1					
ANR	5622904	AssignmentExpression	* type = sdb_type ( val )		5622136	2		=			
ANR	5622905	Identifier	type		5622136	0					
ANR	5622906	CallExpression	sdb_type ( val )		5622136	1					
ANR	5622907	Callee	sdb_type		5622136	0					
ANR	5622908	Identifier	sdb_type		5622136	0					
ANR	5622909	ArgumentList	val		5622136	1					
ANR	5622910	Argument	val		5622136	0					
ANR	5622911	Identifier	val		5622136	0					
ANR	5622912	ExpressionStatement	out_concat ( type )	302:2:6033:6050	5622136	2	True				
ANR	5622913	CallExpression	out_concat ( type )		5622136	0					
ANR	5622914	Callee	out_concat		5622136	0					
ANR	5622915	Identifier	out_concat		5622136	0					
ANR	5622916	ArgumentList	type		5622136	1					
ANR	5622917	Argument	type		5622136	0					
ANR	5622918	Identifier	type		5622136	0					
ANR	5622919	ElseStatement	else		5622136	0					
ANR	5622920	IfStatement	if ( * cmd == '*' )		5622136	0					
ANR	5622921	Condition	* cmd == '*'	304:5:6065:6075	5622136	0	True				
ANR	5622922	EqualityExpression	* cmd == '*'		5622136	0		==			
ANR	5622923	UnaryOperationExpression	* cmd		5622136	0					
ANR	5622924	UnaryOperator	*		5622136	0					
ANR	5622925	Identifier	cmd		5622136	1					
ANR	5622926	PrimaryExpression	'*'		5622136	1					
ANR	5622927	CompoundStatement		139:18:2539:2539	5622136	1					
ANR	5622928	IfStatement	"if ( ! strcmp ( cmd , ""***"" ) )"		5622136	0					
ANR	5622929	Condition	"! strcmp ( cmd , ""***"" )"	305:6:6086:6105	5622136	0	True				
ANR	5622930	UnaryOperationExpression	"! strcmp ( cmd , ""***"" )"		5622136	0					
ANR	5622931	UnaryOperator	!		5622136	0					
ANR	5622932	CallExpression	"strcmp ( cmd , ""***"" )"		5622136	1					
ANR	5622933	Callee	strcmp		5622136	0					
ANR	5622934	Identifier	strcmp		5622136	0					
ANR	5622935	ArgumentList	cmd		5622136	1					
ANR	5622936	Argument	cmd		5622136	0					
ANR	5622937	Identifier	cmd		5622136	0					
ANR	5622938	Argument	"""***"""		5622136	1					
ANR	5622939	PrimaryExpression	"""***"""		5622136	0					
ANR	5622940	CompoundStatement		143:3:2641:2650	5622136	1					
ANR	5622941	IdentifierDeclStatement	char root [ 1024 ] ;	306:3:6113:6128	5622136	0	True				
ANR	5622942	IdentifierDecl	root [ 1024 ]		5622136	0					
ANR	5622943	IdentifierDeclType	char [ 1024 ]		5622136	0					
ANR	5622944	Identifier	root		5622136	1					
ANR	5622945	PrimaryExpression	1024		5622136	2					
ANR	5622946	IdentifierDeclStatement	SdbListIter * it ;	307:3:6160:6175	5622136	1	True				
ANR	5622947	IdentifierDecl	* it		5622136	0					
ANR	5622948	IdentifierDeclType	SdbListIter *		5622136	0					
ANR	5622949	Identifier	it		5622136	1					
ANR	5622950	IdentifierDeclStatement	SdbNs * ns ;	308:3:6180:6189	5622136	2	True				
ANR	5622951	IdentifierDecl	* ns		5622136	0					
ANR	5622952	IdentifierDeclType	SdbNs *		5622136	0					
ANR	5622953	Identifier	ns		5622136	1					
ANR	5622954	Statement	ls_foreach	309:3:6194:6203	5622136	3	True				
ANR	5622955	Statement	(	309:14:6205:6205	5622136	4	True				
ANR	5622956	Statement	s	309:15:6206:6206	5622136	5	True				
ANR	5622957	Statement	->	309:16:6207:6208	5622136	6	True				
ANR	5622958	Statement	ns	309:18:6209:6210	5622136	7	True				
ANR	5622959	Statement	","	309:20:6211:6211	5622136	8	True				
ANR	5622960	Statement	it	309:22:6213:6214	5622136	9	True				
ANR	5622961	Statement	","	309:24:6215:6215	5622136	10	True				
ANR	5622962	Statement	ns	309:26:6217:6218	5622136	11	True				
ANR	5622963	Statement	)	309:28:6219:6219	5622136	12	True				
ANR	5622964	CompoundStatement		145:4:2688:2720	5622136	13					
ANR	5622965	IdentifierDeclStatement	int name_len = strlen ( ns -> name ) ;	310:4:6227:6259	5622136	0	True				
ANR	5622966	IdentifierDecl	name_len = strlen ( ns -> name )		5622136	0					
ANR	5622967	IdentifierDeclType	int		5622136	0					
ANR	5622968	Identifier	name_len		5622136	1					
ANR	5622969	AssignmentExpression	name_len = strlen ( ns -> name )		5622136	2		=			
ANR	5622970	Identifier	name_len		5622136	0					
ANR	5622971	CallExpression	strlen ( ns -> name )		5622136	1					
ANR	5622972	Callee	strlen		5622136	0					
ANR	5622973	Identifier	strlen		5622136	0					
ANR	5622974	ArgumentList	ns -> name		5622136	1					
ANR	5622975	Argument	ns -> name		5622136	0					
ANR	5622976	PtrMemberAccess	ns -> name		5622136	0					
ANR	5622977	Identifier	ns		5622136	0					
ANR	5622978	Identifier	name		5622136	1					
ANR	5622979	IfStatement	if ( name_len < ( long ) sizeof ( root ) )		5622136	1					
ANR	5622980	Condition	name_len < ( long ) sizeof ( root )	311:8:6269:6298	5622136	0	True				
ANR	5622981	RelationalExpression	name_len < ( long ) sizeof ( root )		5622136	0		<			
ANR	5622982	Identifier	name_len		5622136	0					
ANR	5622983	CastExpression	( long ) sizeof ( root )		5622136	1					
ANR	5622984	CastTarget	long		5622136	0					
ANR	5622985	SizeofExpression	sizeof ( root )		5622136	1					
ANR	5622986	Sizeof	sizeof		5622136	0					
ANR	5622987	SizeofOperand	root		5622136	1					
ANR	5622988	CompoundStatement		146:40:2762:2762	5622136	1					
ANR	5622989	ExpressionStatement	"memcpy ( root , ns -> name , name_len + 1 )"	312:5:6308:6345	5622136	0	True				
ANR	5622990	CallExpression	"memcpy ( root , ns -> name , name_len + 1 )"		5622136	0					
ANR	5622991	Callee	memcpy		5622136	0					
ANR	5622992	Identifier	memcpy		5622136	0					
ANR	5622993	ArgumentList	root		5622136	1					
ANR	5622994	Argument	root		5622136	0					
ANR	5622995	Identifier	root		5622136	0					
ANR	5622996	Argument	ns -> name		5622136	1					
ANR	5622997	PtrMemberAccess	ns -> name		5622136	0					
ANR	5622998	Identifier	ns		5622136	0					
ANR	5622999	Identifier	name		5622136	1					
ANR	5623000	Argument	name_len + 1		5622136	2					
ANR	5623001	AdditiveExpression	name_len + 1		5622136	0		+			
ANR	5623002	Identifier	name_len		5622136	0					
ANR	5623003	PrimaryExpression	1		5622136	1					
ANR	5623004	ExpressionStatement	"walk_namespace ( out , root , sizeof ( root ) - name_len , root + name_len , ns , encode )"	313:5:6352:6445	5622136	1	True				
ANR	5623005	CallExpression	"walk_namespace ( out , root , sizeof ( root ) - name_len , root + name_len , ns , encode )"		5622136	0					
ANR	5623006	Callee	walk_namespace		5622136	0					
ANR	5623007	Identifier	walk_namespace		5622136	0					
ANR	5623008	ArgumentList	out		5622136	1					
ANR	5623009	Argument	out		5622136	0					
ANR	5623010	Identifier	out		5622136	0					
ANR	5623011	Argument	root		5622136	1					
ANR	5623012	Identifier	root		5622136	0					
ANR	5623013	Argument	sizeof ( root ) - name_len		5622136	2					
ANR	5623014	AdditiveExpression	sizeof ( root ) - name_len		5622136	0		-			
ANR	5623015	SizeofExpression	sizeof ( root )		5622136	0					
ANR	5623016	Sizeof	sizeof		5622136	0					
ANR	5623017	SizeofOperand	root		5622136	1					
ANR	5623018	Identifier	name_len		5622136	1					
ANR	5623019	Argument	root + name_len		5622136	3					
ANR	5623020	AdditiveExpression	root + name_len		5622136	0		+			
ANR	5623021	Identifier	root		5622136	0					
ANR	5623022	Identifier	name_len		5622136	1					
ANR	5623023	Argument	ns		5622136	4					
ANR	5623024	Identifier	ns		5622136	0					
ANR	5623025	Argument	encode		5622136	5					
ANR	5623026	Identifier	encode		5622136	0					
ANR	5623027	ElseStatement	else		5622136	0					
ANR	5623028	CompoundStatement		151:11:2919:2919	5622136	0					
ANR	5623029	ExpressionStatement	"eprintf ( ""TODO: Namespace too long\\n"" )"	317:5:6465:6503	5622136	0	True				
ANR	5623030	CallExpression	"eprintf ( ""TODO: Namespace too long\\n"" )"		5622136	0					
ANR	5623031	Callee	eprintf		5622136	0					
ANR	5623032	Identifier	eprintf		5622136	0					
ANR	5623033	ArgumentList	"""TODO: Namespace too long\\n"""		5622136	1					
ANR	5623034	Argument	"""TODO: Namespace too long\\n"""		5622136	0					
ANR	5623035	PrimaryExpression	"""TODO: Namespace too long\\n"""		5622136	0					
ANR	5623036	GotoStatement	goto fail ;	320:3:6519:6528	5622136	14	True				
ANR	5623037	Identifier	fail		5622136	0					
ANR	5623038	ElseStatement	else		5622136	0					
ANR	5623039	IfStatement	"if ( ! strcmp ( cmd , ""**"" ) )"		5622136	0					
ANR	5623040	Condition	"! strcmp ( cmd , ""**"" )"	322:6:6545:6563	5622136	0	True				
ANR	5623041	UnaryOperationExpression	"! strcmp ( cmd , ""**"" )"		5622136	0					
ANR	5623042	UnaryOperator	!		5622136	0					
ANR	5623043	CallExpression	"strcmp ( cmd , ""**"" )"		5622136	1					
ANR	5623044	Callee	strcmp		5622136	0					
ANR	5623045	Identifier	strcmp		5622136	0					
ANR	5623046	ArgumentList	cmd		5622136	1					
ANR	5623047	Argument	cmd		5622136	0					
ANR	5623048	Identifier	cmd		5622136	0					
ANR	5623049	Argument	"""**"""		5622136	1					
ANR	5623050	PrimaryExpression	"""**"""		5622136	0					
ANR	5623051	CompoundStatement		159:3:3052:3061	5622136	1					
ANR	5623052	IdentifierDeclStatement	SdbListIter * it ;	323:3:6571:6586	5622136	0	True				
ANR	5623053	IdentifierDecl	* it		5622136	0					
ANR	5623054	IdentifierDeclType	SdbListIter *		5622136	0					
ANR	5623055	Identifier	it		5622136	1					
ANR	5623056	IdentifierDeclStatement	SdbNs * ns ;	324:3:6591:6600	5622136	1	True				
ANR	5623057	IdentifierDecl	* ns		5622136	0					
ANR	5623058	IdentifierDeclType	SdbNs *		5622136	0					
ANR	5623059	Identifier	ns		5622136	1					
ANR	5623060	Statement	ls_foreach	325:3:6605:6614	5622136	2	True				
ANR	5623061	Statement	(	325:14:6616:6616	5622136	3	True				
ANR	5623062	Statement	s	325:15:6617:6617	5622136	4	True				
ANR	5623063	Statement	->	325:16:6618:6619	5622136	5	True				
ANR	5623064	Statement	ns	325:18:6620:6621	5622136	6	True				
ANR	5623065	Statement	","	325:20:6622:6622	5622136	7	True				
ANR	5623066	Statement	it	325:22:6624:6625	5622136	8	True				
ANR	5623067	Statement	","	325:24:6626:6626	5622136	9	True				
ANR	5623068	Statement	ns	325:26:6628:6629	5622136	10	True				
ANR	5623069	Statement	)	325:28:6630:6630	5622136	11	True				
ANR	5623070	CompoundStatement		160:30:3093:3093	5622136	12					
ANR	5623071	ExpressionStatement	out_concat ( ns -> name )	326:4:6638:6659	5622136	0	True				
ANR	5623072	CallExpression	out_concat ( ns -> name )		5622136	0					
ANR	5623073	Callee	out_concat		5622136	0					
ANR	5623074	Identifier	out_concat		5622136	0					
ANR	5623075	ArgumentList	ns -> name		5622136	1					
ANR	5623076	Argument	ns -> name		5622136	0					
ANR	5623077	PtrMemberAccess	ns -> name		5622136	0					
ANR	5623078	Identifier	ns		5622136	0					
ANR	5623079	Identifier	name		5622136	1					
ANR	5623080	GotoStatement	goto fail ;	328:3:6669:6678	5622136	13	True				
ANR	5623081	Identifier	fail		5622136	0					
ANR	5623082	ElseStatement	else		5622136	0					
ANR	5623083	IfStatement	"if ( ! strcmp ( cmd , ""*"" ) )"		5622136	0					
ANR	5623084	Condition	"! strcmp ( cmd , ""*"" )"	330:6:6695:6712	5622136	0	True				
ANR	5623085	UnaryOperationExpression	"! strcmp ( cmd , ""*"" )"		5622136	0					
ANR	5623086	UnaryOperator	!		5622136	0					
ANR	5623087	CallExpression	"strcmp ( cmd , ""*"" )"		5622136	1					
ANR	5623088	Callee	strcmp		5622136	0					
ANR	5623089	Identifier	strcmp		5622136	0					
ANR	5623090	ArgumentList	cmd		5622136	1					
ANR	5623091	Argument	cmd		5622136	0					
ANR	5623092	Identifier	cmd		5622136	0					
ANR	5623093	Argument	"""*"""		5622136	1					
ANR	5623094	PrimaryExpression	"""*"""		5622136	0					
ANR	5623095	CompoundStatement		169:3:3299:3308	5622136	1					
ANR	5623096	IdentifierDeclStatement	"ForeachListUser user = { out , encode , NULL } ;"	331:3:6720:6764	5622136	0	True				
ANR	5623097	IdentifierDecl	"user = { out , encode , NULL }"		5622136	0					
ANR	5623098	IdentifierDeclType	ForeachListUser		5622136	0					
ANR	5623099	Identifier	user		5622136	1					
ANR	5623100	AssignmentExpression	"user = { out , encode , NULL }"		5622136	2		=			
ANR	5623101	Identifier	user		5622136	0					
ANR	5623102	InitializerList	out		5622136	1					
ANR	5623103	Identifier	out		5622136	0					
ANR	5623104	Identifier	encode		5622136	1					
ANR	5623105	Identifier	NULL		5622136	2					
ANR	5623106	IdentifierDeclStatement	"SdbList * list = sdb_foreach_list ( s , true ) ;"	332:3:6769:6811	5622136	1	True				
ANR	5623107	IdentifierDecl	"* list = sdb_foreach_list ( s , true )"		5622136	0					
ANR	5623108	IdentifierDeclType	SdbList *		5622136	0					
ANR	5623109	Identifier	list		5622136	1					
ANR	5623110	AssignmentExpression	"* list = sdb_foreach_list ( s , true )"		5622136	2		=			
ANR	5623111	Identifier	list		5622136	0					
ANR	5623112	CallExpression	"sdb_foreach_list ( s , true )"		5622136	1					
ANR	5623113	Callee	sdb_foreach_list		5622136	0					
ANR	5623114	Identifier	sdb_foreach_list		5622136	0					
ANR	5623115	ArgumentList	s		5622136	1					
ANR	5623116	Argument	s		5622136	0					
ANR	5623117	Identifier	s		5622136	0					
ANR	5623118	Argument	true		5622136	1					
ANR	5623119	Identifier	true		5622136	0					
ANR	5623120	IdentifierDeclStatement	SdbListIter * iter ;	333:3:6816:6833	5622136	2	True				
ANR	5623121	IdentifierDecl	* iter		5622136	0					
ANR	5623122	IdentifierDeclType	SdbListIter *		5622136	0					
ANR	5623123	Identifier	iter		5622136	1					
ANR	5623124	IdentifierDeclStatement	SdbKv * kv ;	334:3:6838:6847	5622136	3	True				
ANR	5623125	IdentifierDecl	* kv		5622136	0					
ANR	5623126	IdentifierDeclType	SdbKv *		5622136	0					
ANR	5623127	Identifier	kv		5622136	1					
ANR	5623128	Statement	ls_foreach	335:3:6852:6861	5622136	4	True				
ANR	5623129	Statement	(	335:14:6863:6863	5622136	5	True				
ANR	5623130	Statement	list	335:15:6864:6867	5622136	6	True				
ANR	5623131	Statement	","	335:19:6868:6868	5622136	7	True				
ANR	5623132	Statement	iter	335:21:6870:6873	5622136	8	True				
ANR	5623133	Statement	","	335:25:6874:6874	5622136	9	True				
ANR	5623134	Statement	kv	335:27:6876:6877	5622136	10	True				
ANR	5623135	Statement	)	335:29:6878:6878	5622136	11	True				
ANR	5623136	CompoundStatement		170:31:3341:3341	5622136	12					
ANR	5623137	ExpressionStatement	"foreach_list_cb ( & user , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"	336:4:6886:6943	5622136	0	True				
ANR	5623138	CallExpression	"foreach_list_cb ( & user , sdbkv_key ( kv ) , sdbkv_value ( kv ) )"		5622136	0					
ANR	5623139	Callee	foreach_list_cb		5622136	0					
ANR	5623140	Identifier	foreach_list_cb		5622136	0					
ANR	5623141	ArgumentList	& user		5622136	1					
ANR	5623142	Argument	& user		5622136	0					
ANR	5623143	UnaryOperationExpression	& user		5622136	0					
ANR	5623144	UnaryOperator	&		5622136	0					
ANR	5623145	Identifier	user		5622136	1					
ANR	5623146	Argument	sdbkv_key ( kv )		5622136	1					
ANR	5623147	CallExpression	sdbkv_key ( kv )		5622136	0					
ANR	5623148	Callee	sdbkv_key		5622136	0					
ANR	5623149	Identifier	sdbkv_key		5622136	0					
ANR	5623150	ArgumentList	kv		5622136	1					
ANR	5623151	Argument	kv		5622136	0					
ANR	5623152	Identifier	kv		5622136	0					
ANR	5623153	Argument	sdbkv_value ( kv )		5622136	2					
ANR	5623154	CallExpression	sdbkv_value ( kv )		5622136	0					
ANR	5623155	Callee	sdbkv_value		5622136	0					
ANR	5623156	Identifier	sdbkv_value		5622136	0					
ANR	5623157	ArgumentList	kv		5622136	1					
ANR	5623158	Argument	kv		5622136	0					
ANR	5623159	Identifier	kv		5622136	0					
ANR	5623160	ExpressionStatement	ls_free ( list )	338:3:6953:6967	5622136	13	True				
ANR	5623161	CallExpression	ls_free ( list )		5622136	0					
ANR	5623162	Callee	ls_free		5622136	0					
ANR	5623163	Identifier	ls_free		5622136	0					
ANR	5623164	ArgumentList	list		5622136	1					
ANR	5623165	Argument	list		5622136	0					
ANR	5623166	Identifier	list		5622136	0					
ANR	5623167	GotoStatement	goto fail ;	339:3:6972:6981	5622136	14	True				
ANR	5623168	Identifier	fail		5622136	0					
ANR	5623169	ExpressionStatement	"json = strchr ( cmd , ':' )"	342:1:6991:7015	5622136	30	True				
ANR	5623170	AssignmentExpression	"json = strchr ( cmd , ':' )"		5622136	0		=			
ANR	5623171	Identifier	json		5622136	0					
ANR	5623172	CallExpression	"strchr ( cmd , ':' )"		5622136	1					
ANR	5623173	Callee	strchr		5622136	0					
ANR	5623174	Identifier	strchr		5622136	0					
ANR	5623175	ArgumentList	cmd		5622136	1					
ANR	5623176	Argument	cmd		5622136	0					
ANR	5623177	Identifier	cmd		5622136	0					
ANR	5623178	Argument	':'		5622136	1					
ANR	5623179	PrimaryExpression	':'		5622136	0					
ANR	5623180	IfStatement	if ( * cmd == '[' )		5622136	31					
ANR	5623181	Condition	* cmd == '['	343:5:7022:7032	5622136	0	True				
ANR	5623182	EqualityExpression	* cmd == '['		5622136	0		==			
ANR	5623183	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623184	UnaryOperator	*		5622136	0					
ANR	5623185	Identifier	cmd		5622136	1					
ANR	5623186	PrimaryExpression	'['		5622136	1					
ANR	5623187	CompoundStatement		179:2:3500:3528	5622136	1					
ANR	5623188	IdentifierDeclStatement	"char * tp = strchr ( cmd , ']' ) ;"	344:2:7039:7067	5622136	0	True				
ANR	5623189	IdentifierDecl	"* tp = strchr ( cmd , ']' )"		5622136	0					
ANR	5623190	IdentifierDeclType	char *		5622136	0					
ANR	5623191	Identifier	tp		5622136	1					
ANR	5623192	AssignmentExpression	"* tp = strchr ( cmd , ']' )"		5622136	2		=			
ANR	5623193	Identifier	tp		5622136	0					
ANR	5623194	CallExpression	"strchr ( cmd , ']' )"		5622136	1					
ANR	5623195	Callee	strchr		5622136	0					
ANR	5623196	Identifier	strchr		5622136	0					
ANR	5623197	ArgumentList	cmd		5622136	1					
ANR	5623198	Argument	cmd		5622136	0					
ANR	5623199	Identifier	cmd		5622136	0					
ANR	5623200	Argument	']'		5622136	1					
ANR	5623201	PrimaryExpression	']'		5622136	0					
ANR	5623202	IfStatement	if ( ! tp )		5622136	1					
ANR	5623203	Condition	! tp	345:6:7075:7077	5622136	0	True				
ANR	5623204	UnaryOperationExpression	! tp		5622136	0					
ANR	5623205	UnaryOperator	!		5622136	0					
ANR	5623206	Identifier	tp		5622136	1					
ANR	5623207	CompoundStatement		180:11:3541:3541	5622136	1					
ANR	5623208	ExpressionStatement	"eprintf ( ""Missing ']'.\\n"" )"	346:3:7085:7111	5622136	0	True				
ANR	5623209	CallExpression	"eprintf ( ""Missing ']'.\\n"" )"		5622136	0					
ANR	5623210	Callee	eprintf		5622136	0					
ANR	5623211	Identifier	eprintf		5622136	0					
ANR	5623212	ArgumentList	"""Missing ']'.\\n"""		5622136	1					
ANR	5623213	Argument	"""Missing ']'.\\n"""		5622136	0					
ANR	5623214	PrimaryExpression	"""Missing ']'.\\n"""		5622136	0					
ANR	5623215	GotoStatement	goto fail ;	347:3:7116:7125	5622136	1	True				
ANR	5623216	Identifier	fail		5622136	0					
ANR	5623217	ExpressionStatement	* tp ++ = 0	349:2:7133:7142	5622136	2	True				
ANR	5623218	AssignmentExpression	* tp ++ = 0		5622136	0		=			
ANR	5623219	UnaryOperationExpression	* tp ++		5622136	0					
ANR	5623220	UnaryOperator	*		5622136	0					
ANR	5623221	PostIncDecOperationExpression	tp ++		5622136	1					
ANR	5623222	Identifier	tp		5622136	0					
ANR	5623223	IncDec	++		5622136	1					
ANR	5623224	PrimaryExpression	0		5622136	1					
ANR	5623225	ExpressionStatement	p = ( const char * ) tp	350:2:7146:7166	5622136	3	True				
ANR	5623226	AssignmentExpression	p = ( const char * ) tp		5622136	0		=			
ANR	5623227	Identifier	p		5622136	0					
ANR	5623228	CastExpression	( const char * ) tp		5622136	1					
ANR	5623229	CastTarget	const char *		5622136	0					
ANR	5623230	Identifier	tp		5622136	1					
ANR	5623231	ElseStatement	else		5622136	0					
ANR	5623232	CompoundStatement		186:8:3637:3637	5622136	0					
ANR	5623233	ExpressionStatement	p = cmd	352:2:7180:7187	5622136	0	True				
ANR	5623234	AssignmentExpression	p = cmd		5622136	0		=			
ANR	5623235	Identifier	p		5622136	0					
ANR	5623236	Identifier	cmd		5622136	1					
ANR	5623237	IfStatement	if ( * cmd == '$' )		5622136	32					
ANR	5623238	Condition	* cmd == '$'	354:5:7197:7207	5622136	0	True				
ANR	5623239	EqualityExpression	* cmd == '$'		5622136	0		==			
ANR	5623240	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623241	UnaryOperator	*		5622136	0					
ANR	5623242	Identifier	cmd		5622136	1					
ANR	5623243	PrimaryExpression	'$'		5622136	1					
ANR	5623244	CompoundStatement		191:2:3692:3726	5622136	1					
ANR	5623245	ExpressionStatement	free ( newcmd )	355:2:7214:7227	5622136	0	True				
ANR	5623246	CallExpression	free ( newcmd )		5622136	0					
ANR	5623247	Callee	free		5622136	0					
ANR	5623248	Identifier	free		5622136	0					
ANR	5623249	ArgumentList	newcmd		5622136	1					
ANR	5623250	Argument	newcmd		5622136	0					
ANR	5623251	Identifier	newcmd		5622136	0					
ANR	5623252	IdentifierDeclStatement	"char * nc = sdb_get ( s , cmd + 1 , 0 ) ;"	356:2:7231:7265	5622136	1	True				
ANR	5623253	IdentifierDecl	"* nc = sdb_get ( s , cmd + 1 , 0 )"		5622136	0					
ANR	5623254	IdentifierDeclType	char *		5622136	0					
ANR	5623255	Identifier	nc		5622136	1					
ANR	5623256	AssignmentExpression	"* nc = sdb_get ( s , cmd + 1 , 0 )"		5622136	2		=			
ANR	5623257	Identifier	nc		5622136	0					
ANR	5623258	CallExpression	"sdb_get ( s , cmd + 1 , 0 )"		5622136	1					
ANR	5623259	Callee	sdb_get		5622136	0					
ANR	5623260	Identifier	sdb_get		5622136	0					
ANR	5623261	ArgumentList	s		5622136	1					
ANR	5623262	Argument	s		5622136	0					
ANR	5623263	Identifier	s		5622136	0					
ANR	5623264	Argument	cmd + 1		5622136	1					
ANR	5623265	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623266	Identifier	cmd		5622136	0					
ANR	5623267	PrimaryExpression	1		5622136	1					
ANR	5623268	Argument	0		5622136	2					
ANR	5623269	PrimaryExpression	0		5622136	0					
ANR	5623270	ExpressionStatement	"cmd = newcmd = ( nc ) ? nc : strdup ( """" )"	357:2:7269:7307	5622136	2	True				
ANR	5623271	AssignmentExpression	"cmd = newcmd = ( nc ) ? nc : strdup ( """" )"		5622136	0		=			
ANR	5623272	Identifier	cmd		5622136	0					
ANR	5623273	AssignmentExpression	"newcmd = ( nc ) ? nc : strdup ( """" )"		5622136	1		=			
ANR	5623274	Identifier	newcmd		5622136	0					
ANR	5623275	ConditionalExpression	"( nc ) ? nc : strdup ( """" )"		5622136	1					
ANR	5623276	Condition	nc		5622136	0					
ANR	5623277	Identifier	nc		5622136	0					
ANR	5623278	Identifier	nc		5622136	1					
ANR	5623279	CallExpression	"strdup ( """" )"		5622136	2					
ANR	5623280	Callee	strdup		5622136	0					
ANR	5623281	Identifier	strdup		5622136	0					
ANR	5623282	ArgumentList	""""""		5622136	1					
ANR	5623283	Argument	""""""		5622136	0					
ANR	5623284	PrimaryExpression	""""""		5622136	0					
ANR	5623285	IfStatement	if ( * cmd == '.' )		5622136	33					
ANR	5623286	Condition	* cmd == '.'	361:5:7363:7373	5622136	0	True				
ANR	5623287	EqualityExpression	* cmd == '.'		5622136	0		==			
ANR	5623288	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623289	UnaryOperator	*		5622136	0					
ANR	5623290	Identifier	cmd		5622136	1					
ANR	5623291	PrimaryExpression	'.'		5622136	1					
ANR	5623292	CompoundStatement		196:18:3837:3837	5622136	1					
ANR	5623293	IfStatement	if ( s -> options & SDB_OPTION_FS )		5622136	0					
ANR	5623294	Condition	s -> options & SDB_OPTION_FS	362:6:7384:7409	5622136	0	True				
ANR	5623295	BitAndExpression	s -> options & SDB_OPTION_FS		5622136	0		&			
ANR	5623296	PtrMemberAccess	s -> options		5622136	0					
ANR	5623297	Identifier	s		5622136	0					
ANR	5623298	Identifier	options		5622136	1					
ANR	5623299	Identifier	SDB_OPTION_FS		5622136	1					
ANR	5623300	CompoundStatement		197:34:3873:3873	5622136	1					
ANR	5623301	IfStatement	"if ( ! sdb_query_file ( s , cmd + 1 ) )"		5622136	0					
ANR	5623302	Condition	"! sdb_query_file ( s , cmd + 1 )"	363:7:7421:7448	5622136	0	True				
ANR	5623303	UnaryOperationExpression	"! sdb_query_file ( s , cmd + 1 )"		5622136	0					
ANR	5623304	UnaryOperator	!		5622136	0					
ANR	5623305	CallExpression	"sdb_query_file ( s , cmd + 1 )"		5622136	1					
ANR	5623306	Callee	sdb_query_file		5622136	0					
ANR	5623307	Identifier	sdb_query_file		5622136	0					
ANR	5623308	ArgumentList	s		5622136	1					
ANR	5623309	Argument	s		5622136	0					
ANR	5623310	Identifier	s		5622136	0					
ANR	5623311	Argument	cmd + 1		5622136	1					
ANR	5623312	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623313	Identifier	cmd		5622136	0					
ANR	5623314	PrimaryExpression	1		5622136	1					
ANR	5623315	CompoundStatement		198:37:3912:3912	5622136	1					
ANR	5623316	ExpressionStatement	"eprintf ( ""sdb: cannot open '%s'\\n"" , cmd + 1 )"	364:4:7457:7499	5622136	0	True				
ANR	5623317	CallExpression	"eprintf ( ""sdb: cannot open '%s'\\n"" , cmd + 1 )"		5622136	0					
ANR	5623318	Callee	eprintf		5622136	0					
ANR	5623319	Identifier	eprintf		5622136	0					
ANR	5623320	ArgumentList	"""sdb: cannot open '%s'\\n"""		5622136	1					
ANR	5623321	Argument	"""sdb: cannot open '%s'\\n"""		5622136	0					
ANR	5623322	PrimaryExpression	"""sdb: cannot open '%s'\\n"""		5622136	0					
ANR	5623323	Argument	cmd + 1		5622136	1					
ANR	5623324	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623325	Identifier	cmd		5622136	0					
ANR	5623326	PrimaryExpression	1		5622136	1					
ANR	5623327	GotoStatement	goto fail ;	365:4:7505:7514	5622136	1	True				
ANR	5623328	Identifier	fail		5622136	0					
ANR	5623329	ElseStatement	else		5622136	0					
ANR	5623330	CompoundStatement		202:9:3991:3991	5622136	0					
ANR	5623331	ExpressionStatement	"eprintf ( ""sdb: filesystem access disabled in config\\n"" )"	368:3:7535:7590	5622136	0	True				
ANR	5623332	CallExpression	"eprintf ( ""sdb: filesystem access disabled in config\\n"" )"		5622136	0					
ANR	5623333	Callee	eprintf		5622136	0					
ANR	5623334	Identifier	eprintf		5622136	0					
ANR	5623335	ArgumentList	"""sdb: filesystem access disabled in config\\n"""		5622136	1					
ANR	5623336	Argument	"""sdb: filesystem access disabled in config\\n"""		5622136	0					
ANR	5623337	PrimaryExpression	"""sdb: filesystem access disabled in config\\n"""		5622136	0					
ANR	5623338	ElseStatement	else		5622136	0					
ANR	5623339	IfStatement	if ( * cmd == '~' )		5622136	0					
ANR	5623340	Condition	* cmd == '~'	370:12:7608:7618	5622136	0	True				
ANR	5623341	EqualityExpression	* cmd == '~'		5622136	0		==			
ANR	5623342	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623343	UnaryOperator	*		5622136	0					
ANR	5623344	Identifier	cmd		5622136	1					
ANR	5623345	PrimaryExpression	'~'		5622136	1					
ANR	5623346	CompoundStatement		205:25:4082:4082	5622136	1					
ANR	5623347	IfStatement	if ( cmd [ 1 ] == '~' )		5622136	0					
ANR	5623348	Condition	cmd [ 1 ] == '~'	371:6:7639:7651	5622136	0	True				
ANR	5623349	EqualityExpression	cmd [ 1 ] == '~'		5622136	0		==			
ANR	5623350	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5623351	Identifier	cmd		5622136	0					
ANR	5623352	PrimaryExpression	1		5622136	1					
ANR	5623353	PrimaryExpression	'~'		5622136	1					
ANR	5623354	CompoundStatement		209:3:4162:4212	5622136	1					
ANR	5623355	IdentifierDeclStatement	SdbKv * kv ;	372:3:7667:7676	5622136	0	True				
ANR	5623356	IdentifierDecl	* kv		5622136	0					
ANR	5623357	IdentifierDeclType	SdbKv *		5622136	0					
ANR	5623358	Identifier	kv		5622136	1					
ANR	5623359	IdentifierDeclStatement	SdbListIter * li ;	373:3:7681:7696	5622136	1	True				
ANR	5623360	IdentifierDecl	* li		5622136	0					
ANR	5623361	IdentifierDeclType	SdbListIter *		5622136	0					
ANR	5623362	Identifier	li		5622136	1					
ANR	5623363	IdentifierDeclStatement	"SdbList * l = sdb_foreach_match ( s , cmd + 2 , false ) ;"	374:3:7701:7751	5622136	2	True				
ANR	5623364	IdentifierDecl	"* l = sdb_foreach_match ( s , cmd + 2 , false )"		5622136	0					
ANR	5623365	IdentifierDeclType	SdbList *		5622136	0					
ANR	5623366	Identifier	l		5622136	1					
ANR	5623367	AssignmentExpression	"* l = sdb_foreach_match ( s , cmd + 2 , false )"		5622136	2		=			
ANR	5623368	Identifier	l		5622136	0					
ANR	5623369	CallExpression	"sdb_foreach_match ( s , cmd + 2 , false )"		5622136	1					
ANR	5623370	Callee	sdb_foreach_match		5622136	0					
ANR	5623371	Identifier	sdb_foreach_match		5622136	0					
ANR	5623372	ArgumentList	s		5622136	1					
ANR	5623373	Argument	s		5622136	0					
ANR	5623374	Identifier	s		5622136	0					
ANR	5623375	Argument	cmd + 2		5622136	1					
ANR	5623376	AdditiveExpression	cmd + 2		5622136	0		+			
ANR	5623377	Identifier	cmd		5622136	0					
ANR	5623378	PrimaryExpression	2		5622136	1					
ANR	5623379	Argument	false		5622136	2					
ANR	5623380	Identifier	false		5622136	0					
ANR	5623381	Statement	ls_foreach	375:3:7756:7765	5622136	3	True				
ANR	5623382	Statement	(	375:14:7767:7767	5622136	4	True				
ANR	5623383	Statement	l	375:15:7768:7768	5622136	5	True				
ANR	5623384	Statement	","	375:16:7769:7769	5622136	6	True				
ANR	5623385	Statement	li	375:18:7771:7772	5622136	7	True				
ANR	5623386	Statement	","	375:20:7773:7773	5622136	8	True				
ANR	5623387	Statement	kv	375:22:7775:7776	5622136	9	True				
ANR	5623388	Statement	)	375:24:7777:7777	5622136	10	True				
ANR	5623389	CompoundStatement		210:26:4240:4240	5622136	11					
ANR	5623390	ExpressionStatement	"strbuf_append ( out , sdbkv_key ( kv ) , 0 )"	376:4:7785:7823	5622136	0	True				
ANR	5623391	CallExpression	"strbuf_append ( out , sdbkv_key ( kv ) , 0 )"		5622136	0					
ANR	5623392	Callee	strbuf_append		5622136	0					
ANR	5623393	Identifier	strbuf_append		5622136	0					
ANR	5623394	ArgumentList	out		5622136	1					
ANR	5623395	Argument	out		5622136	0					
ANR	5623396	Identifier	out		5622136	0					
ANR	5623397	Argument	sdbkv_key ( kv )		5622136	1					
ANR	5623398	CallExpression	sdbkv_key ( kv )		5622136	0					
ANR	5623399	Callee	sdbkv_key		5622136	0					
ANR	5623400	Identifier	sdbkv_key		5622136	0					
ANR	5623401	ArgumentList	kv		5622136	1					
ANR	5623402	Argument	kv		5622136	0					
ANR	5623403	Identifier	kv		5622136	0					
ANR	5623404	Argument	0		5622136	2					
ANR	5623405	PrimaryExpression	0		5622136	0					
ANR	5623406	ExpressionStatement	"strbuf_append ( out , ""="" , 0 )"	377:4:7829:7856	5622136	1	True				
ANR	5623407	CallExpression	"strbuf_append ( out , ""="" , 0 )"		5622136	0					
ANR	5623408	Callee	strbuf_append		5622136	0					
ANR	5623409	Identifier	strbuf_append		5622136	0					
ANR	5623410	ArgumentList	out		5622136	1					
ANR	5623411	Argument	out		5622136	0					
ANR	5623412	Identifier	out		5622136	0					
ANR	5623413	Argument	"""="""		5622136	1					
ANR	5623414	PrimaryExpression	"""="""		5622136	0					
ANR	5623415	Argument	0		5622136	2					
ANR	5623416	PrimaryExpression	0		5622136	0					
ANR	5623417	ExpressionStatement	"strbuf_append ( out , sdbkv_value ( kv ) , 1 )"	378:4:7862:7902	5622136	2	True				
ANR	5623418	CallExpression	"strbuf_append ( out , sdbkv_value ( kv ) , 1 )"		5622136	0					
ANR	5623419	Callee	strbuf_append		5622136	0					
ANR	5623420	Identifier	strbuf_append		5622136	0					
ANR	5623421	ArgumentList	out		5622136	1					
ANR	5623422	Argument	out		5622136	0					
ANR	5623423	Identifier	out		5622136	0					
ANR	5623424	Argument	sdbkv_value ( kv )		5622136	1					
ANR	5623425	CallExpression	sdbkv_value ( kv )		5622136	0					
ANR	5623426	Callee	sdbkv_value		5622136	0					
ANR	5623427	Identifier	sdbkv_value		5622136	0					
ANR	5623428	ArgumentList	kv		5622136	1					
ANR	5623429	Argument	kv		5622136	0					
ANR	5623430	Identifier	kv		5622136	0					
ANR	5623431	Argument	1		5622136	2					
ANR	5623432	PrimaryExpression	1		5622136	0					
ANR	5623433	ExpressionStatement	fflush ( stdout )	380:3:7912:7927	5622136	12	True				
ANR	5623434	CallExpression	fflush ( stdout )		5622136	0					
ANR	5623435	Callee	fflush		5622136	0					
ANR	5623436	Identifier	fflush		5622136	0					
ANR	5623437	ArgumentList	stdout		5622136	1					
ANR	5623438	Argument	stdout		5622136	0					
ANR	5623439	Identifier	stdout		5622136	0					
ANR	5623440	ExpressionStatement	ls_free ( l )	381:3:7932:7943	5622136	13	True				
ANR	5623441	CallExpression	ls_free ( l )		5622136	0					
ANR	5623442	Callee	ls_free		5622136	0					
ANR	5623443	Identifier	ls_free		5622136	0					
ANR	5623444	ArgumentList	l		5622136	1					
ANR	5623445	Argument	l		5622136	0					
ANR	5623446	Identifier	l		5622136	0					
ANR	5623447	ElseStatement	else		5622136	0					
ANR	5623448	CompoundStatement		217:9:4415:4415	5622136	0					
ANR	5623449	ExpressionStatement	d = 1	383:3:7959:7964	5622136	0	True				
ANR	5623450	AssignmentExpression	d = 1		5622136	0		=			
ANR	5623451	Identifier	d		5622136	0					
ANR	5623452	PrimaryExpression	1		5622136	1					
ANR	5623453	ExpressionStatement	"sdb_unset_like ( s , cmd + 1 )"	384:3:7969:7996	5622136	1	True				
ANR	5623454	CallExpression	"sdb_unset_like ( s , cmd + 1 )"		5622136	0					
ANR	5623455	Callee	sdb_unset_like		5622136	0					
ANR	5623456	Identifier	sdb_unset_like		5622136	0					
ANR	5623457	ArgumentList	s		5622136	1					
ANR	5623458	Argument	s		5622136	0					
ANR	5623459	Identifier	s		5622136	0					
ANR	5623460	Argument	cmd + 1		5622136	1					
ANR	5623461	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623462	Identifier	cmd		5622136	0					
ANR	5623463	PrimaryExpression	1		5622136	1					
ANR	5623464	ElseStatement	else		5622136	0					
ANR	5623465	IfStatement	if ( * cmd == '+' || * cmd == '-' )		5622136	0					
ANR	5623466	Condition	* cmd == '+' || * cmd == '-'	386:12:8014:8039	5622136	0	True				
ANR	5623467	OrExpression	* cmd == '+' || * cmd == '-'		5622136	0		||			
ANR	5623468	EqualityExpression	* cmd == '+'		5622136	0		==			
ANR	5623469	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623470	UnaryOperator	*		5622136	0					
ANR	5623471	Identifier	cmd		5622136	1					
ANR	5623472	PrimaryExpression	'+'		5622136	1					
ANR	5623473	EqualityExpression	* cmd == '-'		5622136	1		==			
ANR	5623474	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623475	UnaryOperator	*		5622136	0					
ANR	5623476	Identifier	cmd		5622136	1					
ANR	5623477	PrimaryExpression	'-'		5622136	1					
ANR	5623478	CompoundStatement		221:40:4503:4503	5622136	1					
ANR	5623479	ExpressionStatement	d = 1	387:2:8046:8051	5622136	0	True				
ANR	5623480	AssignmentExpression	d = 1		5622136	0		=			
ANR	5623481	Identifier	d		5622136	0					
ANR	5623482	PrimaryExpression	1		5622136	1					
ANR	5623483	IfStatement	if ( ! buf )		5622136	1					
ANR	5623484	Condition	! buf	388:6:8059:8062	5622136	0	True				
ANR	5623485	UnaryOperationExpression	! buf		5622136	0					
ANR	5623486	UnaryOperator	!		5622136	0					
ANR	5623487	Identifier	buf		5622136	1					
ANR	5623488	CompoundStatement		223:12:4526:4526	5622136	1					
ANR	5623489	ExpressionStatement	"buf = calloc ( 1 , len )"	389:3:8070:8091	5622136	0	True				
ANR	5623490	AssignmentExpression	"buf = calloc ( 1 , len )"		5622136	0		=			
ANR	5623491	Identifier	buf		5622136	0					
ANR	5623492	CallExpression	"calloc ( 1 , len )"		5622136	1					
ANR	5623493	Callee	calloc		5622136	0					
ANR	5623494	Identifier	calloc		5622136	0					
ANR	5623495	ArgumentList	1		5622136	1					
ANR	5623496	Argument	1		5622136	0					
ANR	5623497	PrimaryExpression	1		5622136	0					
ANR	5623498	Argument	len		5622136	1					
ANR	5623499	Identifier	len		5622136	0					
ANR	5623500	IfStatement	if ( ! buf )		5622136	1					
ANR	5623501	Condition	! buf	390:7:8100:8103	5622136	0	True				
ANR	5623502	UnaryOperationExpression	! buf		5622136	0					
ANR	5623503	UnaryOperator	!		5622136	0					
ANR	5623504	Identifier	buf		5622136	1					
ANR	5623505	CompoundStatement		225:13:4567:4567	5622136	1					
ANR	5623506	GotoStatement	goto fail ;	391:4:8112:8121	5622136	0	True				
ANR	5623507	Identifier	fail		5622136	0					
ANR	5623508	ExpressionStatement	bufset = 1	393:3:8131:8141	5622136	2	True				
ANR	5623509	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5623510	Identifier	bufset		5622136	0					
ANR	5623511	PrimaryExpression	1		5622136	1					
ANR	5623512	ExpressionStatement	* buf = 0	395:2:8149:8157	5622136	2	True				
ANR	5623513	AssignmentExpression	* buf = 0		5622136	0		=			
ANR	5623514	UnaryOperationExpression	* buf		5622136	0					
ANR	5623515	UnaryOperator	*		5622136	0					
ANR	5623516	Identifier	buf		5622136	1					
ANR	5623517	PrimaryExpression	0		5622136	1					
ANR	5623518	IfStatement	if ( cmd [ 1 ] == '[' )		5622136	3					
ANR	5623519	Condition	cmd [ 1 ] == '['	396:6:8165:8175	5622136	0	True				
ANR	5623520	EqualityExpression	cmd [ 1 ] == '['		5622136	0		==			
ANR	5623521	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5623522	Identifier	cmd		5622136	0					
ANR	5623523	PrimaryExpression	1		5622136	1					
ANR	5623524	PrimaryExpression	'['		5622136	1					
ANR	5623525	CompoundStatement		240:3:4824:4879	5622136	1					
ANR	5623526	IdentifierDeclStatement	"const char * eb = strchr ( cmd , ']' ) ;"	397:3:8183:8217	5622136	0	True				
ANR	5623527	IdentifierDecl	"* eb = strchr ( cmd , ']' )"		5622136	0					
ANR	5623528	IdentifierDeclType	const char *		5622136	0					
ANR	5623529	Identifier	eb		5622136	1					
ANR	5623530	AssignmentExpression	"* eb = strchr ( cmd , ']' )"		5622136	2		=			
ANR	5623531	Identifier	eb		5622136	0					
ANR	5623532	CallExpression	"strchr ( cmd , ']' )"		5622136	1					
ANR	5623533	Callee	strchr		5622136	0					
ANR	5623534	Identifier	strchr		5622136	0					
ANR	5623535	ArgumentList	cmd		5622136	1					
ANR	5623536	Argument	cmd		5622136	0					
ANR	5623537	Identifier	cmd		5622136	0					
ANR	5623538	Argument	']'		5622136	1					
ANR	5623539	PrimaryExpression	']'		5622136	0					
ANR	5623540	IfStatement	if ( ! eb )		5622136	1					
ANR	5623541	Condition	! eb	398:7:8226:8228	5622136	0	True				
ANR	5623542	UnaryOperationExpression	! eb		5622136	0					
ANR	5623543	UnaryOperator	!		5622136	0					
ANR	5623544	Identifier	eb		5622136	1					
ANR	5623545	CompoundStatement		233:12:4692:4692	5622136	1					
ANR	5623546	ExpressionStatement	"eprintf ( ""Missing ']'.\\n"" )"	399:4:8237:8263	5622136	0	True				
ANR	5623547	CallExpression	"eprintf ( ""Missing ']'.\\n"" )"		5622136	0					
ANR	5623548	Callee	eprintf		5622136	0					
ANR	5623549	Identifier	eprintf		5622136	0					
ANR	5623550	ArgumentList	"""Missing ']'.\\n"""		5622136	1					
ANR	5623551	Argument	"""Missing ']'.\\n"""		5622136	0					
ANR	5623552	PrimaryExpression	"""Missing ']'.\\n"""		5622136	0					
ANR	5623553	GotoStatement	goto fail ;	400:4:8269:8278	5622136	1	True				
ANR	5623554	Identifier	fail		5622136	0					
ANR	5623555	IdentifierDeclStatement	int idx = sdb_atoi ( cmd + 2 ) ;	402:3:8288:8316	5622136	2	True				
ANR	5623556	IdentifierDecl	idx = sdb_atoi ( cmd + 2 )		5622136	0					
ANR	5623557	IdentifierDeclType	int		5622136	0					
ANR	5623558	Identifier	idx		5622136	1					
ANR	5623559	AssignmentExpression	idx = sdb_atoi ( cmd + 2 )		5622136	2		=			
ANR	5623560	Identifier	idx		5622136	0					
ANR	5623561	CallExpression	sdb_atoi ( cmd + 2 )		5622136	1					
ANR	5623562	Callee	sdb_atoi		5622136	0					
ANR	5623563	Identifier	sdb_atoi		5622136	0					
ANR	5623564	ArgumentList	cmd + 2		5622136	1					
ANR	5623565	Argument	cmd + 2		5622136	0					
ANR	5623566	AdditiveExpression	cmd + 2		5622136	0		+			
ANR	5623567	Identifier	cmd		5622136	0					
ANR	5623568	PrimaryExpression	2		5622136	1					
ANR	5623569	IdentifierDeclStatement	"ut64 curnum = sdb_array_get_num ( s , eb + 1 , idx , 0 ) ;"	405:3:8363:8418	5622136	3	True				
ANR	5623570	IdentifierDecl	"curnum = sdb_array_get_num ( s , eb + 1 , idx , 0 )"		5622136	0					
ANR	5623571	IdentifierDeclType	ut64		5622136	0					
ANR	5623572	Identifier	curnum		5622136	1					
ANR	5623573	AssignmentExpression	"curnum = sdb_array_get_num ( s , eb + 1 , idx , 0 )"		5622136	2		=			
ANR	5623574	Identifier	curnum		5622136	0					
ANR	5623575	CallExpression	"sdb_array_get_num ( s , eb + 1 , idx , 0 )"		5622136	1					
ANR	5623576	Callee	sdb_array_get_num		5622136	0					
ANR	5623577	Identifier	sdb_array_get_num		5622136	0					
ANR	5623578	ArgumentList	s		5622136	1					
ANR	5623579	Argument	s		5622136	0					
ANR	5623580	Identifier	s		5622136	0					
ANR	5623581	Argument	eb + 1		5622136	1					
ANR	5623582	AdditiveExpression	eb + 1		5622136	0		+			
ANR	5623583	Identifier	eb		5622136	0					
ANR	5623584	PrimaryExpression	1		5622136	1					
ANR	5623585	Argument	idx		5622136	2					
ANR	5623586	Identifier	idx		5622136	0					
ANR	5623587	Argument	0		5622136	3					
ANR	5623588	PrimaryExpression	0		5622136	0					
ANR	5623589	IfStatement	if ( eq )		5622136	4					
ANR	5623590	Condition	eq	407:7:8427:8428	5622136	0	True				
ANR	5623591	Identifier	eq		5622136	0					
ANR	5623592	CompoundStatement		245:4:4982:5004	5622136	1					
ANR	5623593	IdentifierDeclStatement	st64 n = sdb_atoi ( eq ) ;	410:4:8521:8543	5622136	0	True				
ANR	5623594	IdentifierDecl	n = sdb_atoi ( eq )		5622136	0					
ANR	5623595	IdentifierDeclType	st64		5622136	0					
ANR	5623596	Identifier	n		5622136	1					
ANR	5623597	AssignmentExpression	n = sdb_atoi ( eq )		5622136	2		=			
ANR	5623598	Identifier	n		5622136	0					
ANR	5623599	CallExpression	sdb_atoi ( eq )		5622136	1					
ANR	5623600	Callee	sdb_atoi		5622136	0					
ANR	5623601	Identifier	sdb_atoi		5622136	0					
ANR	5623602	ArgumentList	eq		5622136	1					
ANR	5623603	Argument	eq		5622136	0					
ANR	5623604	Identifier	eq		5622136	0					
ANR	5623605	IfStatement	if ( * cmd == '+' )		5622136	1					
ANR	5623606	Condition	* cmd == '+'	411:8:8553:8561	5622136	0	True				
ANR	5623607	EqualityExpression	* cmd == '+'		5622136	0		==			
ANR	5623608	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623609	UnaryOperator	*		5622136	0					
ANR	5623610	Identifier	cmd		5622136	1					
ANR	5623611	PrimaryExpression	'+'		5622136	1					
ANR	5623612	CompoundStatement		246:19:5025:5025	5622136	1					
ANR	5623613	ExpressionStatement	curnum += n	412:5:8571:8582	5622136	0	True				
ANR	5623614	AssignmentExpression	curnum += n		5622136	0		+=			
ANR	5623615	Identifier	curnum		5622136	0					
ANR	5623616	Identifier	n		5622136	1					
ANR	5623617	ElseStatement	else		5622136	0					
ANR	5623618	IfStatement	if ( * cmd == '-' )		5622136	0					
ANR	5623619	Condition	* cmd == '-'	413:15:8599:8607	5622136	0	True				
ANR	5623620	EqualityExpression	* cmd == '-'		5622136	0		==			
ANR	5623621	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623622	UnaryOperator	*		5622136	0					
ANR	5623623	Identifier	cmd		5622136	1					
ANR	5623624	PrimaryExpression	'-'		5622136	1					
ANR	5623625	CompoundStatement		248:26:5071:5071	5622136	1					
ANR	5623626	ExpressionStatement	curnum -= n	414:5:8617:8628	5622136	0	True				
ANR	5623627	AssignmentExpression	curnum -= n		5622136	0		-=			
ANR	5623628	Identifier	curnum		5622136	0					
ANR	5623629	Identifier	n		5622136	1					
ANR	5623630	ElseStatement	else		5622136	0					
ANR	5623631	CompoundStatement		250:11:5102:5102	5622136	0					
ANR	5623632	ExpressionStatement	"sdb_array_set_num ( s , eb + 1 , idx , curnum , 0 )"	418:4:8675:8718	5622136	2	True				
ANR	5623633	CallExpression	"sdb_array_set_num ( s , eb + 1 , idx , curnum , 0 )"		5622136	0					
ANR	5623634	Callee	sdb_array_set_num		5622136	0					
ANR	5623635	Identifier	sdb_array_set_num		5622136	0					
ANR	5623636	ArgumentList	s		5622136	1					
ANR	5623637	Argument	s		5622136	0					
ANR	5623638	Identifier	s		5622136	0					
ANR	5623639	Argument	eb + 1		5622136	1					
ANR	5623640	AdditiveExpression	eb + 1		5622136	0		+			
ANR	5623641	Identifier	eb		5622136	0					
ANR	5623642	PrimaryExpression	1		5622136	1					
ANR	5623643	Argument	idx		5622136	2					
ANR	5623644	Identifier	idx		5622136	0					
ANR	5623645	Argument	curnum		5622136	3					
ANR	5623646	Identifier	curnum		5622136	0					
ANR	5623647	Argument	0		5622136	4					
ANR	5623648	PrimaryExpression	0		5622136	0					
ANR	5623649	ElseStatement	else		5622136	0					
ANR	5623650	CompoundStatement		257:4:5279:5302	5622136	0					
ANR	5623651	IdentifierDeclStatement	"char * nstr , numstr [ 128 ] ;"	422:4:8818:8841	5622136	0	True				
ANR	5623652	IdentifierDecl	* nstr		5622136	0					
ANR	5623653	IdentifierDeclType	char *		5622136	0					
ANR	5623654	Identifier	nstr		5622136	1					
ANR	5623655	IdentifierDecl	numstr [ 128 ]		5622136	1					
ANR	5623656	IdentifierDeclType	char [ 128 ]		5622136	0					
ANR	5623657	Identifier	numstr		5622136	1					
ANR	5623658	PrimaryExpression	128		5622136	2					
ANR	5623659	IfStatement	if ( * cmd == '+' )		5622136	1					
ANR	5623660	Condition	* cmd == '+'	423:8:8851:8859	5622136	0	True				
ANR	5623661	EqualityExpression	* cmd == '+'		5622136	0		==			
ANR	5623662	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623663	UnaryOperator	*		5622136	0					
ANR	5623664	Identifier	cmd		5622136	1					
ANR	5623665	PrimaryExpression	'+'		5622136	1					
ANR	5623666	CompoundStatement		258:19:5323:5323	5622136	1					
ANR	5623667	ExpressionStatement	curnum ++	424:5:8869:8878	5622136	0	True				
ANR	5623668	PostIncDecOperationExpression	curnum ++		5622136	0					
ANR	5623669	Identifier	curnum		5622136	0					
ANR	5623670	IncDec	++		5622136	1					
ANR	5623671	ElseStatement	else		5622136	0					
ANR	5623672	IfStatement	if ( * cmd == '-' )		5622136	0					
ANR	5623673	Condition	* cmd == '-'	425:15:8895:8903	5622136	0	True				
ANR	5623674	EqualityExpression	* cmd == '-'		5622136	0		==			
ANR	5623675	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623676	UnaryOperator	*		5622136	0					
ANR	5623677	Identifier	cmd		5622136	1					
ANR	5623678	PrimaryExpression	'-'		5622136	1					
ANR	5623679	CompoundStatement		260:26:5367:5367	5622136	1					
ANR	5623680	ExpressionStatement	curnum --	426:5:8913:8922	5622136	0	True				
ANR	5623681	PostIncDecOperationExpression	curnum --		5622136	0					
ANR	5623682	Identifier	curnum		5622136	0					
ANR	5623683	IncDec	--		5622136	1					
ANR	5623684	ElseStatement	else		5622136	0					
ANR	5623685	CompoundStatement		262:11:5396:5396	5622136	0					
ANR	5623686	ExpressionStatement	"nstr = sdb_itoa ( curnum , numstr , 10 )"	430:4:8969:9005	5622136	2	True				
ANR	5623687	AssignmentExpression	"nstr = sdb_itoa ( curnum , numstr , 10 )"		5622136	0		=			
ANR	5623688	Identifier	nstr		5622136	0					
ANR	5623689	CallExpression	"sdb_itoa ( curnum , numstr , 10 )"		5622136	1					
ANR	5623690	Callee	sdb_itoa		5622136	0					
ANR	5623691	Identifier	sdb_itoa		5622136	0					
ANR	5623692	ArgumentList	curnum		5622136	1					
ANR	5623693	Argument	curnum		5622136	0					
ANR	5623694	Identifier	curnum		5622136	0					
ANR	5623695	Argument	numstr		5622136	1					
ANR	5623696	Identifier	numstr		5622136	0					
ANR	5623697	Argument	10		5622136	2					
ANR	5623698	PrimaryExpression	10		5622136	0					
ANR	5623699	ExpressionStatement	"strbuf_append ( out , nstr , 1 )"	431:4:9011:9039	5622136	3	True				
ANR	5623700	CallExpression	"strbuf_append ( out , nstr , 1 )"		5622136	0					
ANR	5623701	Callee	strbuf_append		5622136	0					
ANR	5623702	Identifier	strbuf_append		5622136	0					
ANR	5623703	ArgumentList	out		5622136	1					
ANR	5623704	Argument	out		5622136	0					
ANR	5623705	Identifier	out		5622136	0					
ANR	5623706	Argument	nstr		5622136	1					
ANR	5623707	Identifier	nstr		5622136	0					
ANR	5623708	Argument	1		5622136	2					
ANR	5623709	PrimaryExpression	1		5622136	0					
ANR	5623710	ElseStatement	else		5622136	0					
ANR	5623711	IfStatement	if ( val )		5622136	0					
ANR	5623712	Condition	val	433:13:9059:9061	5622136	0	True				
ANR	5623713	Identifier	val		5622136	0					
ANR	5623714	CompoundStatement		268:18:5525:5525	5622136	1					
ANR	5623715	IfStatement	if ( sdb_isnum ( val ) )		5622136	0					
ANR	5623716	Condition	sdb_isnum ( val )	434:7:9073:9087	5622136	0	True				
ANR	5623717	CallExpression	sdb_isnum ( val )		5622136	0					
ANR	5623718	Callee	sdb_isnum		5622136	0					
ANR	5623719	Identifier	sdb_isnum		5622136	0					
ANR	5623720	ArgumentList	val		5622136	1					
ANR	5623721	Argument	val		5622136	0					
ANR	5623722	Identifier	val		5622136	0					
ANR	5623723	CompoundStatement		270:4:5557:5570	5622136	1					
ANR	5623724	IdentifierDeclStatement	int op = * cmd ;	435:4:9096:9109	5622136	0	True				
ANR	5623725	IdentifierDecl	op = * cmd		5622136	0					
ANR	5623726	IdentifierDeclType	int		5622136	0					
ANR	5623727	Identifier	op		5622136	1					
ANR	5623728	AssignmentExpression	op = * cmd		5622136	2		=			
ANR	5623729	Identifier	op		5622136	0					
ANR	5623730	UnaryOperationExpression	* cmd		5622136	1					
ANR	5623731	UnaryOperator	*		5622136	0					
ANR	5623732	Identifier	cmd		5622136	1					
ANR	5623733	IfStatement	if ( * val == '-' )		5622136	1					
ANR	5623734	Condition	* val == '-'	436:8:9119:9129	5622136	0	True				
ANR	5623735	EqualityExpression	* val == '-'		5622136	0		==			
ANR	5623736	UnaryOperationExpression	* val		5622136	0					
ANR	5623737	UnaryOperator	*		5622136	0					
ANR	5623738	Identifier	val		5622136	1					
ANR	5623739	PrimaryExpression	'-'		5622136	1					
ANR	5623740	CompoundStatement		271:21:5593:5593	5622136	1					
ANR	5623741	IfStatement	if ( * cmd == '-' )		5622136	0					
ANR	5623742	Condition	* cmd == '-'	437:9:9143:9153	5622136	0	True				
ANR	5623743	EqualityExpression	* cmd == '-'		5622136	0		==			
ANR	5623744	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623745	UnaryOperator	*		5622136	0					
ANR	5623746	Identifier	cmd		5622136	1					
ANR	5623747	PrimaryExpression	'-'		5622136	1					
ANR	5623748	CompoundStatement		272:22:5617:5617	5622136	1					
ANR	5623749	ExpressionStatement	op = '+'	438:6:9164:9172	5622136	0	True				
ANR	5623750	AssignmentExpression	op = '+'		5622136	0		=			
ANR	5623751	Identifier	op		5622136	0					
ANR	5623752	PrimaryExpression	'+'		5622136	1					
ANR	5623753	ElseStatement	else		5622136	0					
ANR	5623754	CompoundStatement		274:12:5647:5647	5622136	0					
ANR	5623755	ExpressionStatement	op = '-'	440:6:9194:9202	5622136	0	True				
ANR	5623756	AssignmentExpression	op = '-'		5622136	0		=			
ANR	5623757	Identifier	op		5622136	0					
ANR	5623758	PrimaryExpression	'-'		5622136	1					
ANR	5623759	ExpressionStatement	d = sdb_atoi ( val + 1 )	442:5:9216:9238	5622136	1	True				
ANR	5623760	AssignmentExpression	d = sdb_atoi ( val + 1 )		5622136	0		=			
ANR	5623761	Identifier	d		5622136	0					
ANR	5623762	CallExpression	sdb_atoi ( val + 1 )		5622136	1					
ANR	5623763	Callee	sdb_atoi		5622136	0					
ANR	5623764	Identifier	sdb_atoi		5622136	0					
ANR	5623765	ArgumentList	val + 1		5622136	1					
ANR	5623766	Argument	val + 1		5622136	0					
ANR	5623767	AdditiveExpression	val + 1		5622136	0		+			
ANR	5623768	Identifier	val		5622136	0					
ANR	5623769	PrimaryExpression	1		5622136	1					
ANR	5623770	ElseStatement	else		5622136	0					
ANR	5623771	CompoundStatement		278:11:5712:5712	5622136	0					
ANR	5623772	ExpressionStatement	d = sdb_atoi ( val )	444:5:9258:9276	5622136	0	True				
ANR	5623773	AssignmentExpression	d = sdb_atoi ( val )		5622136	0		=			
ANR	5623774	Identifier	d		5622136	0					
ANR	5623775	CallExpression	sdb_atoi ( val )		5622136	1					
ANR	5623776	Callee	sdb_atoi		5622136	0					
ANR	5623777	Identifier	sdb_atoi		5622136	0					
ANR	5623778	ArgumentList	val		5622136	1					
ANR	5623779	Argument	val		5622136	0					
ANR	5623780	Identifier	val		5622136	0					
ANR	5623781	IfStatement	if ( op == '+' )		5622136	2					
ANR	5623782	Condition	op == '+'	446:8:9292:9298	5622136	0	True				
ANR	5623783	EqualityExpression	op == '+'		5622136	0		==			
ANR	5623784	Identifier	op		5622136	0					
ANR	5623785	PrimaryExpression	'+'		5622136	1					
ANR	5623786	CompoundStatement		281:17:5762:5762	5622136	1					
ANR	5623787	ExpressionStatement	"sdb_num_inc ( s , cmd + 1 , d , 0 )"	447:5:9308:9336	5622136	0	True				
ANR	5623788	CallExpression	"sdb_num_inc ( s , cmd + 1 , d , 0 )"		5622136	0					
ANR	5623789	Callee	sdb_num_inc		5622136	0					
ANR	5623790	Identifier	sdb_num_inc		5622136	0					
ANR	5623791	ArgumentList	s		5622136	1					
ANR	5623792	Argument	s		5622136	0					
ANR	5623793	Identifier	s		5622136	0					
ANR	5623794	Argument	cmd + 1		5622136	1					
ANR	5623795	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623796	Identifier	cmd		5622136	0					
ANR	5623797	PrimaryExpression	1		5622136	1					
ANR	5623798	Argument	d		5622136	2					
ANR	5623799	Identifier	d		5622136	0					
ANR	5623800	Argument	0		5622136	3					
ANR	5623801	PrimaryExpression	0		5622136	0					
ANR	5623802	ElseStatement	else		5622136	0					
ANR	5623803	CompoundStatement		283:11:5810:5810	5622136	0					
ANR	5623804	ExpressionStatement	"sdb_num_dec ( s , cmd + 1 , d , 0 )"	449:5:9356:9384	5622136	0	True				
ANR	5623805	CallExpression	"sdb_num_dec ( s , cmd + 1 , d , 0 )"		5622136	0					
ANR	5623806	Callee	sdb_num_dec		5622136	0					
ANR	5623807	Identifier	sdb_num_dec		5622136	0					
ANR	5623808	ArgumentList	s		5622136	1					
ANR	5623809	Argument	s		5622136	0					
ANR	5623810	Identifier	s		5622136	0					
ANR	5623811	Argument	cmd + 1		5622136	1					
ANR	5623812	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623813	Identifier	cmd		5622136	0					
ANR	5623814	PrimaryExpression	1		5622136	1					
ANR	5623815	Argument	d		5622136	2					
ANR	5623816	Identifier	d		5622136	0					
ANR	5623817	Argument	0		5622136	3					
ANR	5623818	PrimaryExpression	0		5622136	0					
ANR	5623819	ElseStatement	else		5622136	0					
ANR	5623820	CompoundStatement		286:10:5863:5863	5622136	0					
ANR	5623821	IfStatement	if ( * cmd == '+' )		5622136	0					
ANR	5623822	Condition	* cmd == '+'	452:8:9412:9422	5622136	0	True				
ANR	5623823	EqualityExpression	* cmd == '+'		5622136	0		==			
ANR	5623824	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623825	UnaryOperator	*		5622136	0					
ANR	5623826	Identifier	cmd		5622136	1					
ANR	5623827	PrimaryExpression	'+'		5622136	1					
ANR	5623828	CompoundStatement		287:21:5886:5886	5622136	1					
ANR	5623829	ExpressionStatement	"sdb_concat ( s , cmd + 1 , val , 0 )"	453:5:9432:9463	5622136	0	True				
ANR	5623830	CallExpression	"sdb_concat ( s , cmd + 1 , val , 0 )"		5622136	0					
ANR	5623831	Callee	sdb_concat		5622136	0					
ANR	5623832	Identifier	sdb_concat		5622136	0					
ANR	5623833	ArgumentList	s		5622136	1					
ANR	5623834	Argument	s		5622136	0					
ANR	5623835	Identifier	s		5622136	0					
ANR	5623836	Argument	cmd + 1		5622136	1					
ANR	5623837	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623838	Identifier	cmd		5622136	0					
ANR	5623839	PrimaryExpression	1		5622136	1					
ANR	5623840	Argument	val		5622136	2					
ANR	5623841	Identifier	val		5622136	0					
ANR	5623842	Argument	0		5622136	3					
ANR	5623843	PrimaryExpression	0		5622136	0					
ANR	5623844	ElseStatement	else		5622136	0					
ANR	5623845	CompoundStatement		289:11:5937:5937	5622136	0					
ANR	5623846	ExpressionStatement	"sdb_uncat ( s , cmd + 1 , val , 0 )"	455:5:9483:9513	5622136	0	True				
ANR	5623847	CallExpression	"sdb_uncat ( s , cmd + 1 , val , 0 )"		5622136	0					
ANR	5623848	Callee	sdb_uncat		5622136	0					
ANR	5623849	Identifier	sdb_uncat		5622136	0					
ANR	5623850	ArgumentList	s		5622136	1					
ANR	5623851	Argument	s		5622136	0					
ANR	5623852	Identifier	s		5622136	0					
ANR	5623853	Argument	cmd + 1		5622136	1					
ANR	5623854	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623855	Identifier	cmd		5622136	0					
ANR	5623856	PrimaryExpression	1		5622136	1					
ANR	5623857	Argument	val		5622136	2					
ANR	5623858	Identifier	val		5622136	0					
ANR	5623859	Argument	0		5622136	3					
ANR	5623860	PrimaryExpression	0		5622136	0					
ANR	5623861	ElseStatement	else		5622136	0					
ANR	5623862	CompoundStatement		294:3:6001:6054	5622136	0					
ANR	5623863	IdentifierDeclStatement	"int base = sdb_num_base ( sdb_const_get ( s , cmd + 1 , 0 ) ) ;"	459:3:9540:9593	5622136	0	True				
ANR	5623864	IdentifierDecl	"base = sdb_num_base ( sdb_const_get ( s , cmd + 1 , 0 ) )"		5622136	0					
ANR	5623865	IdentifierDeclType	int		5622136	0					
ANR	5623866	Identifier	base		5622136	1					
ANR	5623867	AssignmentExpression	"base = sdb_num_base ( sdb_const_get ( s , cmd + 1 , 0 ) )"		5622136	2		=			
ANR	5623868	Identifier	base		5622136	0					
ANR	5623869	CallExpression	"sdb_num_base ( sdb_const_get ( s , cmd + 1 , 0 ) )"		5622136	1					
ANR	5623870	Callee	sdb_num_base		5622136	0					
ANR	5623871	Identifier	sdb_num_base		5622136	0					
ANR	5623872	ArgumentList	"sdb_const_get ( s , cmd + 1 , 0 )"		5622136	1					
ANR	5623873	Argument	"sdb_const_get ( s , cmd + 1 , 0 )"		5622136	0					
ANR	5623874	CallExpression	"sdb_const_get ( s , cmd + 1 , 0 )"		5622136	0					
ANR	5623875	Callee	sdb_const_get		5622136	0					
ANR	5623876	Identifier	sdb_const_get		5622136	0					
ANR	5623877	ArgumentList	s		5622136	1					
ANR	5623878	Argument	s		5622136	0					
ANR	5623879	Identifier	s		5622136	0					
ANR	5623880	Argument	cmd + 1		5622136	1					
ANR	5623881	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623882	Identifier	cmd		5622136	0					
ANR	5623883	PrimaryExpression	1		5622136	1					
ANR	5623884	Argument	0		5622136	2					
ANR	5623885	PrimaryExpression	0		5622136	0					
ANR	5623886	IfStatement	if ( json )		5622136	1					
ANR	5623887	Condition	json	460:7:9602:9605	5622136	0	True				
ANR	5623888	Identifier	json		5622136	0					
ANR	5623889	CompoundStatement		295:13:6069:6069	5622136	1					
ANR	5623890	ExpressionStatement	base = 10	461:4:9614:9623	5622136	0	True				
ANR	5623891	AssignmentExpression	base = 10		5622136	0		=			
ANR	5623892	Identifier	base		5622136	0					
ANR	5623893	PrimaryExpression	10		5622136	1					
ANR	5623894	ExpressionStatement	* json = 0	462:4:9658:9667	5622136	1	True				
ANR	5623895	AssignmentExpression	* json = 0		5622136	0		=			
ANR	5623896	UnaryOperationExpression	* json		5622136	0					
ANR	5623897	UnaryOperator	*		5622136	0					
ANR	5623898	Identifier	json		5622136	1					
ANR	5623899	PrimaryExpression	0		5622136	1					
ANR	5623900	IfStatement	if ( * cmd == '+' )		5622136	2					
ANR	5623901	Condition	* cmd == '+'	463:8:9677:9685	5622136	0	True				
ANR	5623902	EqualityExpression	* cmd == '+'		5622136	0		==			
ANR	5623903	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623904	UnaryOperator	*		5622136	0					
ANR	5623905	Identifier	cmd		5622136	1					
ANR	5623906	PrimaryExpression	'+'		5622136	1					
ANR	5623907	CompoundStatement		298:19:6149:6149	5622136	1					
ANR	5623908	ExpressionStatement	"n = sdb_json_num_inc ( s , cmd + 1 , json + 1 , d , 0 )"	464:5:9695:9744	5622136	0	True				
ANR	5623909	AssignmentExpression	"n = sdb_json_num_inc ( s , cmd + 1 , json + 1 , d , 0 )"		5622136	0		=			
ANR	5623910	Identifier	n		5622136	0					
ANR	5623911	CallExpression	"sdb_json_num_inc ( s , cmd + 1 , json + 1 , d , 0 )"		5622136	1					
ANR	5623912	Callee	sdb_json_num_inc		5622136	0					
ANR	5623913	Identifier	sdb_json_num_inc		5622136	0					
ANR	5623914	ArgumentList	s		5622136	1					
ANR	5623915	Argument	s		5622136	0					
ANR	5623916	Identifier	s		5622136	0					
ANR	5623917	Argument	cmd + 1		5622136	1					
ANR	5623918	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623919	Identifier	cmd		5622136	0					
ANR	5623920	PrimaryExpression	1		5622136	1					
ANR	5623921	Argument	json + 1		5622136	2					
ANR	5623922	AdditiveExpression	json + 1		5622136	0		+			
ANR	5623923	Identifier	json		5622136	0					
ANR	5623924	PrimaryExpression	1		5622136	1					
ANR	5623925	Argument	d		5622136	3					
ANR	5623926	Identifier	d		5622136	0					
ANR	5623927	Argument	0		5622136	4					
ANR	5623928	PrimaryExpression	0		5622136	0					
ANR	5623929	ElseStatement	else		5622136	0					
ANR	5623930	CompoundStatement		300:11:6218:6218	5622136	0					
ANR	5623931	ExpressionStatement	"n = sdb_json_num_dec ( s , cmd + 1 , json + 1 , d , 0 )"	466:5:9764:9813	5622136	0	True				
ANR	5623932	AssignmentExpression	"n = sdb_json_num_dec ( s , cmd + 1 , json + 1 , d , 0 )"		5622136	0		=			
ANR	5623933	Identifier	n		5622136	0					
ANR	5623934	CallExpression	"sdb_json_num_dec ( s , cmd + 1 , json + 1 , d , 0 )"		5622136	1					
ANR	5623935	Callee	sdb_json_num_dec		5622136	0					
ANR	5623936	Identifier	sdb_json_num_dec		5622136	0					
ANR	5623937	ArgumentList	s		5622136	1					
ANR	5623938	Argument	s		5622136	0					
ANR	5623939	Identifier	s		5622136	0					
ANR	5623940	Argument	cmd + 1		5622136	1					
ANR	5623941	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623942	Identifier	cmd		5622136	0					
ANR	5623943	PrimaryExpression	1		5622136	1					
ANR	5623944	Argument	json + 1		5622136	2					
ANR	5623945	AdditiveExpression	json + 1		5622136	0		+			
ANR	5623946	Identifier	json		5622136	0					
ANR	5623947	PrimaryExpression	1		5622136	1					
ANR	5623948	Argument	d		5622136	3					
ANR	5623949	Identifier	d		5622136	0					
ANR	5623950	Argument	0		5622136	4					
ANR	5623951	PrimaryExpression	0		5622136	0					
ANR	5623952	ExpressionStatement	* json = ':'	468:4:9825:9836	5622136	3	True				
ANR	5623953	AssignmentExpression	* json = ':'		5622136	0		=			
ANR	5623954	UnaryOperationExpression	* json		5622136	0					
ANR	5623955	UnaryOperator	*		5622136	0					
ANR	5623956	Identifier	json		5622136	1					
ANR	5623957	PrimaryExpression	':'		5622136	1					
ANR	5623958	ElseStatement	else		5622136	0					
ANR	5623959	CompoundStatement		304:10:6309:6309	5622136	0					
ANR	5623960	IfStatement	if ( * cmd == '+' )		5622136	0					
ANR	5623961	Condition	* cmd == '+'	470:8:9858:9866	5622136	0	True				
ANR	5623962	EqualityExpression	* cmd == '+'		5622136	0		==			
ANR	5623963	UnaryOperationExpression	* cmd		5622136	0					
ANR	5623964	UnaryOperator	*		5622136	0					
ANR	5623965	Identifier	cmd		5622136	1					
ANR	5623966	PrimaryExpression	'+'		5622136	1					
ANR	5623967	CompoundStatement		305:19:6330:6330	5622136	1					
ANR	5623968	ExpressionStatement	"n = sdb_num_inc ( s , cmd + 1 , d , 0 )"	471:5:9876:9910	5622136	0	True				
ANR	5623969	AssignmentExpression	"n = sdb_num_inc ( s , cmd + 1 , d , 0 )"		5622136	0		=			
ANR	5623970	Identifier	n		5622136	0					
ANR	5623971	CallExpression	"sdb_num_inc ( s , cmd + 1 , d , 0 )"		5622136	1					
ANR	5623972	Callee	sdb_num_inc		5622136	0					
ANR	5623973	Identifier	sdb_num_inc		5622136	0					
ANR	5623974	ArgumentList	s		5622136	1					
ANR	5623975	Argument	s		5622136	0					
ANR	5623976	Identifier	s		5622136	0					
ANR	5623977	Argument	cmd + 1		5622136	1					
ANR	5623978	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623979	Identifier	cmd		5622136	0					
ANR	5623980	PrimaryExpression	1		5622136	1					
ANR	5623981	Argument	d		5622136	2					
ANR	5623982	Identifier	d		5622136	0					
ANR	5623983	Argument	0		5622136	3					
ANR	5623984	PrimaryExpression	0		5622136	0					
ANR	5623985	ElseStatement	else		5622136	0					
ANR	5623986	CompoundStatement		307:11:6384:6384	5622136	0					
ANR	5623987	ExpressionStatement	"n = sdb_num_dec ( s , cmd + 1 , d , 0 )"	473:5:9930:9964	5622136	0	True				
ANR	5623988	AssignmentExpression	"n = sdb_num_dec ( s , cmd + 1 , d , 0 )"		5622136	0		=			
ANR	5623989	Identifier	n		5622136	0					
ANR	5623990	CallExpression	"sdb_num_dec ( s , cmd + 1 , d , 0 )"		5622136	1					
ANR	5623991	Callee	sdb_num_dec		5622136	0					
ANR	5623992	Identifier	sdb_num_dec		5622136	0					
ANR	5623993	ArgumentList	s		5622136	1					
ANR	5623994	Argument	s		5622136	0					
ANR	5623995	Identifier	s		5622136	0					
ANR	5623996	Argument	cmd + 1		5622136	1					
ANR	5623997	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5623998	Identifier	cmd		5622136	0					
ANR	5623999	PrimaryExpression	1		5622136	1					
ANR	5624000	Argument	d		5622136	2					
ANR	5624001	Identifier	d		5622136	0					
ANR	5624002	Argument	0		5622136	3					
ANR	5624003	PrimaryExpression	0		5622136	0					
ANR	5624004	IfStatement	if ( base == 16 )		5622136	2					
ANR	5624005	Condition	base == 16	477:7:10000:10009	5622136	0	True				
ANR	5624006	EqualityExpression	base == 16		5622136	0		==			
ANR	5624007	Identifier	base		5622136	0					
ANR	5624008	PrimaryExpression	16		5622136	1					
ANR	5624009	CompoundStatement		312:19:6473:6473	5622136	1					
ANR	5624010	Statement	w	478:4:10018:10018	5622136	0	True				
ANR	5624011	Statement	=	478:6:10020:10020	5622136	1	True				
ANR	5624012	Statement	snprintf	478:8:10022:10029	5622136	2	True				
ANR	5624013	Statement	(	478:17:10031:10031	5622136	3	True				
ANR	5624014	Statement	buf	478:18:10032:10034	5622136	4	True				
ANR	5624015	Statement	","	478:21:10035:10035	5622136	5	True				
ANR	5624016	Statement	len	478:23:10037:10039	5622136	6	True				
ANR	5624017	Statement	-	478:27:10041:10041	5622136	7	True				
ANR	5624018	Statement	1	478:29:10043:10043	5622136	8	True				
ANR	5624019	Statement	","	478:30:10044:10044	5622136	9	True				
ANR	5624020	Statement	"""0x%"""	478:32:10046:10050	5622136	10	True				
ANR	5624021	Statement	ULLFMT	478:37:10051:10056	5622136	11	True				
ANR	5624022	Statement	"""x"""	478:43:10057:10059	5622136	12	True				
ANR	5624023	Statement	","	478:46:10060:10060	5622136	13	True				
ANR	5624024	Statement	n	478:48:10062:10062	5622136	14	True				
ANR	5624025	Statement	)	478:49:10063:10063	5622136	15	True				
ANR	5624026	ExpressionStatement		478:50:10064:10064	5622136	16	True				
ANR	5624027	IfStatement	if ( w < 0 || ( size_t ) w > len )		5622136	17					
ANR	5624028	Condition	w < 0 || ( size_t ) w > len	479:8:10074:10097	5622136	0	True				
ANR	5624029	OrExpression	w < 0 || ( size_t ) w > len		5622136	0		||			
ANR	5624030	RelationalExpression	w < 0		5622136	0		<			
ANR	5624031	Identifier	w		5622136	0					
ANR	5624032	PrimaryExpression	0		5622136	1					
ANR	5624033	RelationalExpression	( size_t ) w > len		5622136	1		>			
ANR	5624034	CastExpression	( size_t ) w		5622136	0					
ANR	5624035	CastTarget	size_t		5622136	0					
ANR	5624036	Identifier	w		5622136	1					
ANR	5624037	Identifier	len		5622136	1					
ANR	5624038	CompoundStatement		314:34:6561:6561	5622136	1					
ANR	5624039	IfStatement	if ( bufset && len < 0xff )		5622136	0					
ANR	5624040	Condition	bufset && len < 0xff	480:9:10111:10130	5622136	0	True				
ANR	5624041	AndExpression	bufset && len < 0xff		5622136	0		&&			
ANR	5624042	Identifier	bufset		5622136	0					
ANR	5624043	RelationalExpression	len < 0xff		5622136	1		<			
ANR	5624044	Identifier	len		5622136	0					
ANR	5624045	PrimaryExpression	0xff		5622136	1					
ANR	5624046	CompoundStatement		315:31:6594:6594	5622136	1					
ANR	5624047	ExpressionStatement	free ( buf )	481:6:10141:10151	5622136	0	True				
ANR	5624048	CallExpression	free ( buf )		5622136	0					
ANR	5624049	Callee	free		5622136	0					
ANR	5624050	Identifier	free		5622136	0					
ANR	5624051	ArgumentList	buf		5622136	1					
ANR	5624052	Argument	buf		5622136	0					
ANR	5624053	Identifier	buf		5622136	0					
ANR	5624054	ExpressionStatement	buf = malloc ( len = 0xff )	482:6:10159:10184	5622136	1	True				
ANR	5624055	AssignmentExpression	buf = malloc ( len = 0xff )		5622136	0		=			
ANR	5624056	Identifier	buf		5622136	0					
ANR	5624057	CallExpression	malloc ( len = 0xff )		5622136	1					
ANR	5624058	Callee	malloc		5622136	0					
ANR	5624059	Identifier	malloc		5622136	0					
ANR	5624060	ArgumentList	len = 0xff		5622136	1					
ANR	5624061	Argument	len = 0xff		5622136	0					
ANR	5624062	AssignmentExpression	len = 0xff		5622136	0		=			
ANR	5624063	Identifier	len		5622136	0					
ANR	5624064	PrimaryExpression	0xff		5622136	1					
ANR	5624065	IfStatement	if ( ! buf )		5622136	2					
ANR	5624066	Condition	! buf	483:10:10196:10199	5622136	0	True				
ANR	5624067	UnaryOperationExpression	! buf		5622136	0					
ANR	5624068	UnaryOperator	!		5622136	0					
ANR	5624069	Identifier	buf		5622136	1					
ANR	5624070	CompoundStatement		318:16:6663:6663	5622136	1					
ANR	5624071	GotoStatement	goto fail ;	484:7:10211:10220	5622136	0	True				
ANR	5624072	Identifier	fail		5622136	0					
ANR	5624073	ExpressionStatement	bufset = 1	487:5:10242:10252	5622136	1	True				
ANR	5624074	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5624075	Identifier	bufset		5622136	0					
ANR	5624076	PrimaryExpression	1		5622136	1					
ANR	5624077	Statement	snprintf	488:5:10259:10266	5622136	2	True				
ANR	5624078	Statement	(	488:14:10268:10268	5622136	3	True				
ANR	5624079	Statement	buf	488:15:10269:10271	5622136	4	True				
ANR	5624080	Statement	","	488:18:10272:10272	5622136	5	True				
ANR	5624081	Statement	0xff	488:20:10274:10277	5622136	6	True				
ANR	5624082	Statement	","	488:24:10278:10278	5622136	7	True				
ANR	5624083	Statement	"""0x%"""	488:26:10280:10284	5622136	8	True				
ANR	5624084	Statement	ULLFMT	488:31:10285:10290	5622136	9	True				
ANR	5624085	Statement	"""x"""	488:37:10291:10293	5622136	10	True				
ANR	5624086	Statement	","	488:40:10294:10294	5622136	11	True				
ANR	5624087	Statement	n	488:42:10296:10296	5622136	12	True				
ANR	5624088	Statement	)	488:43:10297:10297	5622136	13	True				
ANR	5624089	ExpressionStatement		488:44:10298:10298	5622136	14	True				
ANR	5624090	ElseStatement	else		5622136	0					
ANR	5624091	CompoundStatement		325:10:6777:6777	5622136	0					
ANR	5624092	Statement	w	491:4:10322:10322	5622136	0	True				
ANR	5624093	Statement	=	491:6:10324:10324	5622136	1	True				
ANR	5624094	Statement	snprintf	491:8:10326:10333	5622136	2	True				
ANR	5624095	Statement	(	491:17:10335:10335	5622136	3	True				
ANR	5624096	Statement	buf	491:18:10336:10338	5622136	4	True				
ANR	5624097	Statement	","	491:21:10339:10339	5622136	5	True				
ANR	5624098	Statement	len	491:23:10341:10343	5622136	6	True				
ANR	5624099	Statement	-	491:26:10344:10344	5622136	7	True				
ANR	5624100	Statement	1	491:27:10345:10345	5622136	8	True				
ANR	5624101	Statement	","	491:28:10346:10346	5622136	9	True				
ANR	5624102	Statement	"""%"""	491:30:10348:10350	5622136	10	True				
ANR	5624103	Statement	ULLFMT	491:33:10351:10356	5622136	11	True				
ANR	5624104	Statement	"""d"""	491:39:10357:10359	5622136	12	True				
ANR	5624105	Statement	","	491:42:10360:10360	5622136	13	True				
ANR	5624106	Statement	n	491:44:10362:10362	5622136	14	True				
ANR	5624107	Statement	)	491:45:10363:10363	5622136	15	True				
ANR	5624108	ExpressionStatement		491:46:10364:10364	5622136	16	True				
ANR	5624109	IfStatement	if ( w < 0 || ( size_t ) w > len )		5622136	17					
ANR	5624110	Condition	w < 0 || ( size_t ) w > len	492:8:10374:10397	5622136	0	True				
ANR	5624111	OrExpression	w < 0 || ( size_t ) w > len		5622136	0		||			
ANR	5624112	RelationalExpression	w < 0		5622136	0		<			
ANR	5624113	Identifier	w		5622136	0					
ANR	5624114	PrimaryExpression	0		5622136	1					
ANR	5624115	RelationalExpression	( size_t ) w > len		5622136	1		>			
ANR	5624116	CastExpression	( size_t ) w		5622136	0					
ANR	5624117	CastTarget	size_t		5622136	0					
ANR	5624118	Identifier	w		5622136	1					
ANR	5624119	Identifier	len		5622136	1					
ANR	5624120	CompoundStatement		327:34:6861:6861	5622136	1					
ANR	5624121	IfStatement	if ( bufset && len < 0xff )		5622136	0					
ANR	5624122	Condition	bufset && len < 0xff	493:9:10411:10430	5622136	0	True				
ANR	5624123	AndExpression	bufset && len < 0xff		5622136	0		&&			
ANR	5624124	Identifier	bufset		5622136	0					
ANR	5624125	RelationalExpression	len < 0xff		5622136	1		<			
ANR	5624126	Identifier	len		5622136	0					
ANR	5624127	PrimaryExpression	0xff		5622136	1					
ANR	5624128	CompoundStatement		328:31:6894:6894	5622136	1					
ANR	5624129	ExpressionStatement	free ( buf )	494:6:10441:10451	5622136	0	True				
ANR	5624130	CallExpression	free ( buf )		5622136	0					
ANR	5624131	Callee	free		5622136	0					
ANR	5624132	Identifier	free		5622136	0					
ANR	5624133	ArgumentList	buf		5622136	1					
ANR	5624134	Argument	buf		5622136	0					
ANR	5624135	Identifier	buf		5622136	0					
ANR	5624136	ExpressionStatement	buf = malloc ( len = 0xff )	495:6:10459:10484	5622136	1	True				
ANR	5624137	AssignmentExpression	buf = malloc ( len = 0xff )		5622136	0		=			
ANR	5624138	Identifier	buf		5622136	0					
ANR	5624139	CallExpression	malloc ( len = 0xff )		5622136	1					
ANR	5624140	Callee	malloc		5622136	0					
ANR	5624141	Identifier	malloc		5622136	0					
ANR	5624142	ArgumentList	len = 0xff		5622136	1					
ANR	5624143	Argument	len = 0xff		5622136	0					
ANR	5624144	AssignmentExpression	len = 0xff		5622136	0		=			
ANR	5624145	Identifier	len		5622136	0					
ANR	5624146	PrimaryExpression	0xff		5622136	1					
ANR	5624147	IfStatement	if ( ! buf )		5622136	2					
ANR	5624148	Condition	! buf	496:10:10496:10499	5622136	0	True				
ANR	5624149	UnaryOperationExpression	! buf		5622136	0					
ANR	5624150	UnaryOperator	!		5622136	0					
ANR	5624151	Identifier	buf		5622136	1					
ANR	5624152	CompoundStatement		331:16:6963:6963	5622136	1					
ANR	5624153	GotoStatement	goto fail ;	497:7:10511:10520	5622136	0	True				
ANR	5624154	Identifier	fail		5622136	0					
ANR	5624155	ExpressionStatement	bufset = 1	500:5:10542:10552	5622136	1	True				
ANR	5624156	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5624157	Identifier	bufset		5622136	0					
ANR	5624158	PrimaryExpression	1		5622136	1					
ANR	5624159	Statement	snprintf	501:5:10559:10566	5622136	2	True				
ANR	5624160	Statement	(	501:14:10568:10568	5622136	3	True				
ANR	5624161	Statement	buf	501:15:10569:10571	5622136	4	True				
ANR	5624162	Statement	","	501:18:10572:10572	5622136	5	True				
ANR	5624163	Statement	0xff	501:20:10574:10577	5622136	6	True				
ANR	5624164	Statement	","	501:24:10578:10578	5622136	7	True				
ANR	5624165	Statement	"""%"""	501:26:10580:10582	5622136	8	True				
ANR	5624166	Statement	ULLFMT	501:29:10583:10588	5622136	9	True				
ANR	5624167	Statement	"""d"""	501:35:10589:10591	5622136	10	True				
ANR	5624168	Statement	","	501:38:10592:10592	5622136	11	True				
ANR	5624169	Statement	n	501:40:10594:10594	5622136	12	True				
ANR	5624170	Statement	)	501:41:10595:10595	5622136	13	True				
ANR	5624171	ExpressionStatement		501:42:10596:10596	5622136	14	True				
ANR	5624172	ExpressionStatement	out_concat ( buf )	505:2:10615:10631	5622136	4	True				
ANR	5624173	CallExpression	out_concat ( buf )		5622136	0					
ANR	5624174	Callee	out_concat		5622136	0					
ANR	5624175	Identifier	out_concat		5622136	0					
ANR	5624176	ArgumentList	buf		5622136	1					
ANR	5624177	Argument	buf		5622136	0					
ANR	5624178	Identifier	buf		5622136	0					
ANR	5624179	ElseStatement	else		5622136	0					
ANR	5624180	IfStatement	if ( * cmd == '[' )		5622136	0					
ANR	5624181	Condition	* cmd == '['	506:12:10645:10655	5622136	0	True				
ANR	5624182	EqualityExpression	* cmd == '['		5622136	0		==			
ANR	5624183	UnaryOperationExpression	* cmd		5622136	0					
ANR	5624184	UnaryOperator	*		5622136	0					
ANR	5624185	Identifier	cmd		5622136	1					
ANR	5624186	PrimaryExpression	'['		5622136	1					
ANR	5624187	CompoundStatement		341:25:7119:7119	5622136	1					
ANR	5624188	IfStatement	if ( cmd [ 1 ] == '?' )		5622136	0					
ANR	5624189	Condition	cmd [ 1 ] == '?'	508:6:10701:10713	5622136	0	True				
ANR	5624190	EqualityExpression	cmd [ 1 ] == '?'		5622136	0		==			
ANR	5624191	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624192	Identifier	cmd		5622136	0					
ANR	5624193	PrimaryExpression	1		5622136	1					
ANR	5624194	PrimaryExpression	'?'		5622136	1					
ANR	5624195	CompoundStatement		343:21:7177:7177	5622136	1					
ANR	5624196	ExpressionStatement	"alength = sdb_array_length ( s , p )"	510:3:10740:10773	5622136	0	True				
ANR	5624197	AssignmentExpression	"alength = sdb_array_length ( s , p )"		5622136	0		=			
ANR	5624198	Identifier	alength		5622136	0					
ANR	5624199	CallExpression	"sdb_array_length ( s , p )"		5622136	1					
ANR	5624200	Callee	sdb_array_length		5622136	0					
ANR	5624201	Identifier	sdb_array_length		5622136	0					
ANR	5624202	ArgumentList	s		5622136	1					
ANR	5624203	Argument	s		5622136	0					
ANR	5624204	Identifier	s		5622136	0					
ANR	5624205	Argument	p		5622136	1					
ANR	5624206	Identifier	p		5622136	0					
ANR	5624207	IfStatement	if ( ! buf )		5622136	1					
ANR	5624208	Condition	! buf	511:7:10782:10785	5622136	0	True				
ANR	5624209	UnaryOperationExpression	! buf		5622136	0					
ANR	5624210	UnaryOperator	!		5622136	0					
ANR	5624211	Identifier	buf		5622136	1					
ANR	5624212	CompoundStatement		346:13:7249:7249	5622136	1					
ANR	5624213	ExpressionStatement	buf = malloc ( ++ len )	512:4:10794:10814	5622136	0	True				
ANR	5624214	AssignmentExpression	buf = malloc ( ++ len )		5622136	0		=			
ANR	5624215	Identifier	buf		5622136	0					
ANR	5624216	CallExpression	malloc ( ++ len )		5622136	1					
ANR	5624217	Callee	malloc		5622136	0					
ANR	5624218	Identifier	malloc		5622136	0					
ANR	5624219	ArgumentList	++ len		5622136	1					
ANR	5624220	Argument	++ len		5622136	0					
ANR	5624221	UnaryExpression	++ len		5622136	0					
ANR	5624222	IncDec	++		5622136	0					
ANR	5624223	Identifier	len		5622136	1					
ANR	5624224	IfStatement	if ( ! buf )		5622136	1					
ANR	5624225	Condition	! buf	513:8:10824:10827	5622136	0	True				
ANR	5624226	UnaryOperationExpression	! buf		5622136	0					
ANR	5624227	UnaryOperator	!		5622136	0					
ANR	5624228	Identifier	buf		5622136	1					
ANR	5624229	CompoundStatement		348:14:7291:7291	5622136	1					
ANR	5624230	GotoStatement	goto fail ;	514:5:10837:10846	5622136	0	True				
ANR	5624231	Identifier	fail		5622136	0					
ANR	5624232	ExpressionStatement	bufset = 1	516:4:10858:10868	5622136	2	True				
ANR	5624233	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5624234	Identifier	bufset		5622136	0					
ANR	5624235	PrimaryExpression	1		5622136	1					
ANR	5624236	ExpressionStatement	"w = snprintf ( buf , len , ""%d"" , alength )"	518:3:10878:10916	5622136	2	True				
ANR	5624237	AssignmentExpression	"w = snprintf ( buf , len , ""%d"" , alength )"		5622136	0		=			
ANR	5624238	Identifier	w		5622136	0					
ANR	5624239	CallExpression	"snprintf ( buf , len , ""%d"" , alength )"		5622136	1					
ANR	5624240	Callee	snprintf		5622136	0					
ANR	5624241	Identifier	snprintf		5622136	0					
ANR	5624242	ArgumentList	buf		5622136	1					
ANR	5624243	Argument	buf		5622136	0					
ANR	5624244	Identifier	buf		5622136	0					
ANR	5624245	Argument	len		5622136	1					
ANR	5624246	Identifier	len		5622136	0					
ANR	5624247	Argument	"""%d"""		5622136	2					
ANR	5624248	PrimaryExpression	"""%d"""		5622136	0					
ANR	5624249	Argument	alength		5622136	3					
ANR	5624250	Identifier	alength		5622136	0					
ANR	5624251	IfStatement	if ( w < 0 || ( size_t ) w > len )		5622136	3					
ANR	5624252	Condition	w < 0 || ( size_t ) w > len	519:7:10925:10948	5622136	0	True				
ANR	5624253	OrExpression	w < 0 || ( size_t ) w > len		5622136	0		||			
ANR	5624254	RelationalExpression	w < 0		5622136	0		<			
ANR	5624255	Identifier	w		5622136	0					
ANR	5624256	PrimaryExpression	0		5622136	1					
ANR	5624257	RelationalExpression	( size_t ) w > len		5622136	1		>			
ANR	5624258	CastExpression	( size_t ) w		5622136	0					
ANR	5624259	CastTarget	size_t		5622136	0					
ANR	5624260	Identifier	w		5622136	1					
ANR	5624261	Identifier	len		5622136	1					
ANR	5624262	CompoundStatement		354:33:7412:7412	5622136	1					
ANR	5624263	IfStatement	if ( bufset )		5622136	0					
ANR	5624264	Condition	bufset	520:8:10961:10966	5622136	0	True				
ANR	5624265	Identifier	bufset		5622136	0					
ANR	5624266	CompoundStatement		355:16:7430:7430	5622136	1					
ANR	5624267	ExpressionStatement	free ( buf )	521:5:10976:10986	5622136	0	True				
ANR	5624268	CallExpression	free ( buf )		5622136	0					
ANR	5624269	Callee	free		5622136	0					
ANR	5624270	Identifier	free		5622136	0					
ANR	5624271	ArgumentList	buf		5622136	1					
ANR	5624272	Argument	buf		5622136	0					
ANR	5624273	Identifier	buf		5622136	0					
ANR	5624274	ExpressionStatement	buf = malloc ( len = 32 )	523:4:10998:11021	5622136	1	True				
ANR	5624275	AssignmentExpression	buf = malloc ( len = 32 )		5622136	0		=			
ANR	5624276	Identifier	buf		5622136	0					
ANR	5624277	CallExpression	malloc ( len = 32 )		5622136	1					
ANR	5624278	Callee	malloc		5622136	0					
ANR	5624279	Identifier	malloc		5622136	0					
ANR	5624280	ArgumentList	len = 32		5622136	1					
ANR	5624281	Argument	len = 32		5622136	0					
ANR	5624282	AssignmentExpression	len = 32		5622136	0		=			
ANR	5624283	Identifier	len		5622136	0					
ANR	5624284	PrimaryExpression	32		5622136	1					
ANR	5624285	ExpressionStatement	bufset = 1	524:4:11027:11037	5622136	2	True				
ANR	5624286	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5624287	Identifier	bufset		5622136	0					
ANR	5624288	PrimaryExpression	1		5622136	1					
ANR	5624289	ExpressionStatement	"snprintf ( buf , 31 , ""%d"" , alength )"	525:4:11043:11076	5622136	3	True				
ANR	5624290	CallExpression	"snprintf ( buf , 31 , ""%d"" , alength )"		5622136	0					
ANR	5624291	Callee	snprintf		5622136	0					
ANR	5624292	Identifier	snprintf		5622136	0					
ANR	5624293	ArgumentList	buf		5622136	1					
ANR	5624294	Argument	buf		5622136	0					
ANR	5624295	Identifier	buf		5622136	0					
ANR	5624296	Argument	31		5622136	1					
ANR	5624297	PrimaryExpression	31		5622136	0					
ANR	5624298	Argument	"""%d"""		5622136	2					
ANR	5624299	PrimaryExpression	"""%d"""		5622136	0					
ANR	5624300	Argument	alength		5622136	3					
ANR	5624301	Identifier	alength		5622136	0					
ANR	5624302	ExpressionStatement	out_concat ( buf )	527:3:11086:11102	5622136	4	True				
ANR	5624303	CallExpression	out_concat ( buf )		5622136	0					
ANR	5624304	Callee	out_concat		5622136	0					
ANR	5624305	Identifier	out_concat		5622136	0					
ANR	5624306	ArgumentList	buf		5622136	1					
ANR	5624307	Argument	buf		5622136	0					
ANR	5624308	Identifier	buf		5622136	0					
ANR	5624309	ElseStatement	else		5622136	0					
ANR	5624310	IfStatement	if ( cmd [ 1 ] == '!' )		5622136	0					
ANR	5624311	Condition	cmd [ 1 ] == '!'	528:13:11117:11127	5622136	0	True				
ANR	5624312	EqualityExpression	cmd [ 1 ] == '!'		5622136	0		==			
ANR	5624313	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624314	Identifier	cmd		5622136	0					
ANR	5624315	PrimaryExpression	1		5622136	1					
ANR	5624316	PrimaryExpression	'!'		5622136	1					
ANR	5624317	CompoundStatement		363:26:7591:7591	5622136	1					
ANR	5624318	IfStatement	if ( cmd [ 2 ] == '+' )		5622136	0					
ANR	5624319	Condition	cmd [ 2 ] == '+'	529:7:11139:11149	5622136	0	True				
ANR	5624320	EqualityExpression	cmd [ 2 ] == '+'		5622136	0		==			
ANR	5624321	ArrayIndexing	cmd [ 2 ]		5622136	0					
ANR	5624322	Identifier	cmd		5622136	0					
ANR	5624323	PrimaryExpression	2		5622136	1					
ANR	5624324	PrimaryExpression	'+'		5622136	1					
ANR	5624325	CompoundStatement		364:20:7613:7613	5622136	1					
ANR	5624326	ExpressionStatement	"sdb_array_add_sorted ( s , p , val , 0 )"	531:4:11189:11224	5622136	0	True				
ANR	5624327	CallExpression	"sdb_array_add_sorted ( s , p , val , 0 )"		5622136	0					
ANR	5624328	Callee	sdb_array_add_sorted		5622136	0					
ANR	5624329	Identifier	sdb_array_add_sorted		5622136	0					
ANR	5624330	ArgumentList	s		5622136	1					
ANR	5624331	Argument	s		5622136	0					
ANR	5624332	Identifier	s		5622136	0					
ANR	5624333	Argument	p		5622136	1					
ANR	5624334	Identifier	p		5622136	0					
ANR	5624335	Argument	val		5622136	2					
ANR	5624336	Identifier	val		5622136	0					
ANR	5624337	Argument	0		5622136	3					
ANR	5624338	PrimaryExpression	0		5622136	0					
ANR	5624339	ElseStatement	else		5622136	0					
ANR	5624340	CompoundStatement		367:10:7697:7697	5622136	0					
ANR	5624341	ExpressionStatement	"sdb_array_sort ( s , p , 0 )"	534:4:11264:11288	5622136	0	True				
ANR	5624342	CallExpression	"sdb_array_sort ( s , p , 0 )"		5622136	0					
ANR	5624343	Callee	sdb_array_sort		5622136	0					
ANR	5624344	Identifier	sdb_array_sort		5622136	0					
ANR	5624345	ArgumentList	s		5622136	1					
ANR	5624346	Argument	s		5622136	0					
ANR	5624347	Identifier	s		5622136	0					
ANR	5624348	Argument	p		5622136	1					
ANR	5624349	Identifier	p		5622136	0					
ANR	5624350	Argument	0		5622136	2					
ANR	5624351	PrimaryExpression	0		5622136	0					
ANR	5624352	ElseStatement	else		5622136	0					
ANR	5624353	IfStatement	if ( cmd [ 1 ] == '#' )		5622136	0					
ANR	5624354	Condition	cmd [ 1 ] == '#'	536:13:11308:11318	5622136	0	True				
ANR	5624355	EqualityExpression	cmd [ 1 ] == '#'		5622136	0		==			
ANR	5624356	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624357	Identifier	cmd		5622136	0					
ANR	5624358	PrimaryExpression	1		5622136	1					
ANR	5624359	PrimaryExpression	'#'		5622136	1					
ANR	5624360	CompoundStatement		371:26:7782:7782	5622136	1					
ANR	5624361	IfStatement	if ( cmd [ 2 ] == '+' )		5622136	0					
ANR	5624362	Condition	cmd [ 2 ] == '+'	538:7:11366:11376	5622136	0	True				
ANR	5624363	EqualityExpression	cmd [ 2 ] == '+'		5622136	0		==			
ANR	5624364	ArrayIndexing	cmd [ 2 ]		5622136	0					
ANR	5624365	Identifier	cmd		5622136	0					
ANR	5624366	PrimaryExpression	2		5622136	1					
ANR	5624367	PrimaryExpression	'+'		5622136	1					
ANR	5624368	CompoundStatement		373:20:7840:7840	5622136	1					
ANR	5624369	ExpressionStatement	"sdb_array_add_sorted_num ( s , p , sdb_atoi ( val ) , 0 )"	540:4:11411:11461	5622136	0	True				
ANR	5624370	CallExpression	"sdb_array_add_sorted_num ( s , p , sdb_atoi ( val ) , 0 )"		5622136	0					
ANR	5624371	Callee	sdb_array_add_sorted_num		5622136	0					
ANR	5624372	Identifier	sdb_array_add_sorted_num		5622136	0					
ANR	5624373	ArgumentList	s		5622136	1					
ANR	5624374	Argument	s		5622136	0					
ANR	5624375	Identifier	s		5622136	0					
ANR	5624376	Argument	p		5622136	1					
ANR	5624377	Identifier	p		5622136	0					
ANR	5624378	Argument	sdb_atoi ( val )		5622136	2					
ANR	5624379	CallExpression	sdb_atoi ( val )		5622136	0					
ANR	5624380	Callee	sdb_atoi		5622136	0					
ANR	5624381	Identifier	sdb_atoi		5622136	0					
ANR	5624382	ArgumentList	val		5622136	1					
ANR	5624383	Argument	val		5622136	0					
ANR	5624384	Identifier	val		5622136	0					
ANR	5624385	Argument	0		5622136	3					
ANR	5624386	PrimaryExpression	0		5622136	0					
ANR	5624387	ElseStatement	else		5622136	0					
ANR	5624388	CompoundStatement		376:10:7934:7934	5622136	0					
ANR	5624389	ExpressionStatement	"sdb_array_sort_num ( s , p , 0 )"	542:4:11479:11507	5622136	0	True				
ANR	5624390	CallExpression	"sdb_array_sort_num ( s , p , 0 )"		5622136	0					
ANR	5624391	Callee	sdb_array_sort_num		5622136	0					
ANR	5624392	Identifier	sdb_array_sort_num		5622136	0					
ANR	5624393	ArgumentList	s		5622136	1					
ANR	5624394	Argument	s		5622136	0					
ANR	5624395	Identifier	s		5622136	0					
ANR	5624396	Argument	p		5622136	1					
ANR	5624397	Identifier	p		5622136	0					
ANR	5624398	Argument	0		5622136	2					
ANR	5624399	PrimaryExpression	0		5622136	0					
ANR	5624400	ElseStatement	else		5622136	0					
ANR	5624401	IfStatement	if ( cmd [ 1 ] == '+' || cmd [ 1 ] == '-' )		5622136	0					
ANR	5624402	Condition	cmd [ 1 ] == '+' || cmd [ 1 ] == '-'	544:13:11527:11556	5622136	0	True				
ANR	5624403	OrExpression	cmd [ 1 ] == '+' || cmd [ 1 ] == '-'		5622136	0		||			
ANR	5624404	EqualityExpression	cmd [ 1 ] == '+'		5622136	0		==			
ANR	5624405	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624406	Identifier	cmd		5622136	0					
ANR	5624407	PrimaryExpression	1		5622136	1					
ANR	5624408	PrimaryExpression	'+'		5622136	1					
ANR	5624409	EqualityExpression	cmd [ 1 ] == '-'		5622136	1		==			
ANR	5624410	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624411	Identifier	cmd		5622136	0					
ANR	5624412	PrimaryExpression	1		5622136	1					
ANR	5624413	PrimaryExpression	'-'		5622136	1					
ANR	5624414	CompoundStatement		379:45:8020:8020	5622136	1					
ANR	5624415	IfStatement	if ( cmd [ 1 ] == cmd [ 2 ] )		5622136	0					
ANR	5624416	Condition	cmd [ 1 ] == cmd [ 2 ]	545:7:11568:11583	5622136	0	True				
ANR	5624417	EqualityExpression	cmd [ 1 ] == cmd [ 2 ]		5622136	0		==			
ANR	5624418	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624419	Identifier	cmd		5622136	0					
ANR	5624420	PrimaryExpression	1		5622136	1					
ANR	5624421	ArrayIndexing	cmd [ 2 ]		5622136	1					
ANR	5624422	Identifier	cmd		5622136	0					
ANR	5624423	PrimaryExpression	2		5622136	1					
ANR	5624424	CompoundStatement		380:25:8047:8047	5622136	1					
ANR	5624425	Statement	[	548:4:11611:11611	5622136	0	True				
ANR	5624426	Statement	++	548:5:11612:11613	5622136	1	True				
ANR	5624427	Statement	]	548:7:11614:11614	5622136	2	True				
ANR	5624428	Statement	foo	548:8:11615:11617	5622136	3	True				
ANR	5624429	Statement	=	548:11:11618:11618	5622136	4	True				
ANR	5624430	Statement	33	548:12:11619:11620	5622136	5	True				
ANR	5624431	Statement	push	548:17:11624:11627	5622136	6	True				
ANR	5624432	Statement	[	549:4:11633:11633	5622136	7	True				
ANR	5624433	Statement	++	549:5:11634:11635	5622136	8	True				
ANR	5624434	Statement	]	549:7:11636:11636	5622136	9	True				
ANR	5624435	Statement	foo	549:8:11637:11639	5622136	10	True				
ANR	5624436	Statement	<	549:17:11646:11646	5622136	11	True				
ANR	5624437	Statement	invalid	549:18:11647:11653	5622136	12	True				
ANR	5624438	Statement	>	549:25:11654:11654	5622136	13	True				
ANR	5624439	Statement	[	550:4:11660:11660	5622136	14	True				
ANR	5624440	Statement	--	550:5:11661:11662	5622136	15	True				
ANR	5624441	Statement	]	550:7:11663:11663	5622136	16	True				
ANR	5624442	Statement	foo	550:8:11664:11666	5622136	17	True				
ANR	5624443	Statement	pop	550:17:11673:11675	5622136	18	True				
ANR	5624444	Statement	[	551:4:11681:11681	5622136	19	True				
ANR	5624445	Statement	--	551:5:11682:11683	5622136	20	True				
ANR	5624446	Statement	]	551:7:11684:11684	5622136	21	True				
ANR	5624447	Statement	foo	551:8:11685:11687	5622136	22	True				
ANR	5624448	Statement	=	551:11:11688:11688	5622136	23	True				
ANR	5624449	Statement	b	551:12:11689:11689	5622136	24	True				
ANR	5624450	Statement	<	551:17:11694:11694	5622136	25	True				
ANR	5624451	Statement	invalid	551:18:11695:11701	5622136	26	True				
ANR	5624452	Statement	>	551:25:11702:11702	5622136	27	True				
ANR	5624453	IfStatement	if ( cmd [ 1 ] == '-' && eq )		5622136	28					
ANR	5624454	Condition	cmd [ 1 ] == '-' && eq	553:8:11719:11737	5622136	0	True				
ANR	5624455	AndExpression	cmd [ 1 ] == '-' && eq		5622136	0		&&			
ANR	5624456	EqualityExpression	cmd [ 1 ] == '-'		5622136	0		==			
ANR	5624457	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624458	Identifier	cmd		5622136	0					
ANR	5624459	PrimaryExpression	1		5622136	1					
ANR	5624460	PrimaryExpression	'-'		5622136	1					
ANR	5624461	Identifier	eq		5622136	1					
ANR	5624462	CompoundStatement		388:29:8201:8201	5622136	1					
ANR	5624463	ElseStatement	else		5622136	0					
ANR	5624464	IfStatement	if ( cmd [ 1 ] == '+' && ! eq )		5622136	0					
ANR	5624465	Condition	cmd [ 1 ] == '+' && ! eq	555:15:11783:11802	5622136	0	True				
ANR	5624466	AndExpression	cmd [ 1 ] == '+' && ! eq		5622136	0		&&			
ANR	5624467	EqualityExpression	cmd [ 1 ] == '+'		5622136	0		==			
ANR	5624468	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624469	Identifier	cmd		5622136	0					
ANR	5624470	PrimaryExpression	1		5622136	1					
ANR	5624471	PrimaryExpression	'+'		5622136	1					
ANR	5624472	UnaryOperationExpression	! eq		5622136	1					
ANR	5624473	UnaryOperator	!		5622136	0					
ANR	5624474	Identifier	eq		5622136	1					
ANR	5624475	CompoundStatement		390:37:8266:8266	5622136	1					
ANR	5624476	ElseStatement	else		5622136	0					
ANR	5624477	CompoundStatement		392:11:8305:8305	5622136	0					
ANR	5624478	IfStatement	if ( eq )		5622136	0					
ANR	5624479	Condition	eq	558:9:11855:11856	5622136	0	True				
ANR	5624480	Identifier	eq		5622136	0					
ANR	5624481	CompoundStatement		393:13:8320:8320	5622136	1					
ANR	5624482	ExpressionStatement	"sdb_array_push ( s , p , val , 0 )"	559:6:11867:11896	5622136	0	True				
ANR	5624483	CallExpression	"sdb_array_push ( s , p , val , 0 )"		5622136	0					
ANR	5624484	Callee	sdb_array_push		5622136	0					
ANR	5624485	Identifier	sdb_array_push		5622136	0					
ANR	5624486	ArgumentList	s		5622136	1					
ANR	5624487	Argument	s		5622136	0					
ANR	5624488	Identifier	s		5622136	0					
ANR	5624489	Argument	p		5622136	1					
ANR	5624490	Identifier	p		5622136	0					
ANR	5624491	Argument	val		5622136	2					
ANR	5624492	Identifier	val		5622136	0					
ANR	5624493	Argument	0		5622136	3					
ANR	5624494	PrimaryExpression	0		5622136	0					
ANR	5624495	ElseStatement	else		5622136	0					
ANR	5624496	CompoundStatement		396:6:8379:8414	5622136	0					
ANR	5624497	IdentifierDeclStatement	"char * ret = sdb_array_pop ( s , p , 0 ) ;"	561:6:11918:11953	5622136	0	True				
ANR	5624498	IdentifierDecl	"* ret = sdb_array_pop ( s , p , 0 )"		5622136	0					
ANR	5624499	IdentifierDeclType	char *		5622136	0					
ANR	5624500	Identifier	ret		5622136	1					
ANR	5624501	AssignmentExpression	"* ret = sdb_array_pop ( s , p , 0 )"		5622136	2		=			
ANR	5624502	Identifier	ret		5622136	0					
ANR	5624503	CallExpression	"sdb_array_pop ( s , p , 0 )"		5622136	1					
ANR	5624504	Callee	sdb_array_pop		5622136	0					
ANR	5624505	Identifier	sdb_array_pop		5622136	0					
ANR	5624506	ArgumentList	s		5622136	1					
ANR	5624507	Argument	s		5622136	0					
ANR	5624508	Identifier	s		5622136	0					
ANR	5624509	Argument	p		5622136	1					
ANR	5624510	Identifier	p		5622136	0					
ANR	5624511	Argument	0		5622136	2					
ANR	5624512	PrimaryExpression	0		5622136	0					
ANR	5624513	ExpressionStatement	out_concat ( ret )	562:6:11961:11977	5622136	1	True				
ANR	5624514	CallExpression	out_concat ( ret )		5622136	0					
ANR	5624515	Callee	out_concat		5622136	0					
ANR	5624516	Identifier	out_concat		5622136	0					
ANR	5624517	ArgumentList	ret		5622136	1					
ANR	5624518	Argument	ret		5622136	0					
ANR	5624519	Identifier	ret		5622136	0					
ANR	5624520	ExpressionStatement	free ( ret )	563:6:11985:11995	5622136	2	True				
ANR	5624521	CallExpression	free ( ret )		5622136	0					
ANR	5624522	Callee	free		5622136	0					
ANR	5624523	Identifier	free		5622136	0					
ANR	5624524	ArgumentList	ret		5622136	1					
ANR	5624525	Argument	ret		5622136	0					
ANR	5624526	Identifier	ret		5622136	0					
ANR	5624527	ElseStatement	else		5622136	0					
ANR	5624528	IfStatement	if ( ! cmd [ 2 ] || cmd [ 2 ] == ']' )		5622136	0					
ANR	5624529	Condition	! cmd [ 2 ] || cmd [ 2 ] == ']'	571:7:12169:12192	5622136	0	True				
ANR	5624530	OrExpression	! cmd [ 2 ] || cmd [ 2 ] == ']'		5622136	0		||			
ANR	5624531	UnaryOperationExpression	! cmd [ 2 ]		5622136	0					
ANR	5624532	UnaryOperator	!		5622136	0					
ANR	5624533	ArrayIndexing	cmd [ 2 ]		5622136	1					
ANR	5624534	Identifier	cmd		5622136	0					
ANR	5624535	PrimaryExpression	2		5622136	1					
ANR	5624536	EqualityExpression	cmd [ 2 ] == ']'		5622136	1		==			
ANR	5624537	ArrayIndexing	cmd [ 2 ]		5622136	0					
ANR	5624538	Identifier	cmd		5622136	0					
ANR	5624539	PrimaryExpression	2		5622136	1					
ANR	5624540	PrimaryExpression	']'		5622136	1					
ANR	5624541	CompoundStatement		406:33:8656:8656	5622136	1					
ANR	5624542	IfStatement	if ( eq )		5622136	0					
ANR	5624543	Condition	eq	573:8:12219:12220	5622136	0	True				
ANR	5624544	Identifier	eq		5622136	0					
ANR	5624545	CompoundStatement		408:12:8684:8684	5622136	1					
ANR	5624546	IfStatement	if ( cmd [ 1 ] == '+' )		5622136	0					
ANR	5624547	Condition	cmd [ 1 ] == '+'	574:9:12234:12246	5622136	0	True				
ANR	5624548	EqualityExpression	cmd [ 1 ] == '+'		5622136	0		==			
ANR	5624549	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624550	Identifier	cmd		5622136	0					
ANR	5624551	PrimaryExpression	1		5622136	1					
ANR	5624552	PrimaryExpression	'+'		5622136	1					
ANR	5624553	CompoundStatement		409:24:8710:8710	5622136	1					
ANR	5624554	ExpressionStatement	"sdb_array_add ( s , p , val , 0 )"	576:6:12273:12301	5622136	0	True				
ANR	5624555	CallExpression	"sdb_array_add ( s , p , val , 0 )"		5622136	0					
ANR	5624556	Callee	sdb_array_add		5622136	0					
ANR	5624557	Identifier	sdb_array_add		5622136	0					
ANR	5624558	ArgumentList	s		5622136	1					
ANR	5624559	Argument	s		5622136	0					
ANR	5624560	Identifier	s		5622136	0					
ANR	5624561	Argument	p		5622136	1					
ANR	5624562	Identifier	p		5622136	0					
ANR	5624563	Argument	val		5622136	2					
ANR	5624564	Identifier	val		5622136	0					
ANR	5624565	Argument	0		5622136	3					
ANR	5624566	PrimaryExpression	0		5622136	0					
ANR	5624567	ElseStatement	else		5622136	0					
ANR	5624568	CompoundStatement		412:12:8776:8776	5622136	0					
ANR	5624569	ExpressionStatement	"sdb_array_remove ( s , p , val , 0 )"	579:6:12361:12392	5622136	0	True				
ANR	5624570	CallExpression	"sdb_array_remove ( s , p , val , 0 )"		5622136	0					
ANR	5624571	Callee	sdb_array_remove		5622136	0					
ANR	5624572	Identifier	sdb_array_remove		5622136	0					
ANR	5624573	ArgumentList	s		5622136	1					
ANR	5624574	Argument	s		5622136	0					
ANR	5624575	Identifier	s		5622136	0					
ANR	5624576	Argument	p		5622136	1					
ANR	5624577	Identifier	p		5622136	0					
ANR	5624578	Argument	val		5622136	2					
ANR	5624579	Identifier	val		5622136	0					
ANR	5624580	Argument	0		5622136	3					
ANR	5624581	PrimaryExpression	0		5622136	0					
ANR	5624582	ElseStatement	else		5622136	0					
ANR	5624583	CompoundStatement		418:5:8900:8909	5622136	0					
ANR	5624584	IdentifierDeclStatement	char * ret ;	583:5:12439:12448	5622136	0	True				
ANR	5624585	IdentifierDecl	* ret		5622136	0					
ANR	5624586	IdentifierDeclType	char *		5622136	0					
ANR	5624587	Identifier	ret		5622136	1					
ANR	5624588	IfStatement	if ( cmd [ 1 ] == '+' )		5622136	1					
ANR	5624589	Condition	cmd [ 1 ] == '+'	584:9:12459:12471	5622136	0	True				
ANR	5624590	EqualityExpression	cmd [ 1 ] == '+'		5622136	0		==			
ANR	5624591	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624592	Identifier	cmd		5622136	0					
ANR	5624593	PrimaryExpression	1		5622136	1					
ANR	5624594	PrimaryExpression	'+'		5622136	1					
ANR	5624595	CompoundStatement		419:24:8935:8935	5622136	1					
ANR	5624596	ExpressionStatement	"ret = sdb_array_get ( s , p , 0 , 0 )"	587:6:12583:12615	5622136	0	True				
ANR	5624597	AssignmentExpression	"ret = sdb_array_get ( s , p , 0 , 0 )"		5622136	0		=			
ANR	5624598	Identifier	ret		5622136	0					
ANR	5624599	CallExpression	"sdb_array_get ( s , p , 0 , 0 )"		5622136	1					
ANR	5624600	Callee	sdb_array_get		5622136	0					
ANR	5624601	Identifier	sdb_array_get		5622136	0					
ANR	5624602	ArgumentList	s		5622136	1					
ANR	5624603	Argument	s		5622136	0					
ANR	5624604	Identifier	s		5622136	0					
ANR	5624605	Argument	p		5622136	1					
ANR	5624606	Identifier	p		5622136	0					
ANR	5624607	Argument	0		5622136	2					
ANR	5624608	PrimaryExpression	0		5622136	0					
ANR	5624609	Argument	0		5622136	3					
ANR	5624610	PrimaryExpression	0		5622136	0					
ANR	5624611	IfStatement	if ( ret && * ret )		5622136	1					
ANR	5624612	Condition	ret && * ret	588:10:12627:12637	5622136	0	True				
ANR	5624613	AndExpression	ret && * ret		5622136	0		&&			
ANR	5624614	Identifier	ret		5622136	0					
ANR	5624615	UnaryOperationExpression	* ret		5622136	1					
ANR	5624616	UnaryOperator	*		5622136	0					
ANR	5624617	Identifier	ret		5622136	1					
ANR	5624618	CompoundStatement		423:23:9101:9101	5622136	1					
ANR	5624619	ExpressionStatement	out_concat ( ret )	589:7:12649:12665	5622136	0	True				
ANR	5624620	CallExpression	out_concat ( ret )		5622136	0					
ANR	5624621	Callee	out_concat		5622136	0					
ANR	5624622	Identifier	out_concat		5622136	0					
ANR	5624623	ArgumentList	ret		5622136	1					
ANR	5624624	Argument	ret		5622136	0					
ANR	5624625	Identifier	ret		5622136	0					
ANR	5624626	ExpressionStatement	"sdb_array_delete ( s , p , 0 , 0 )"	592:6:12721:12750	5622136	2	True				
ANR	5624627	CallExpression	"sdb_array_delete ( s , p , 0 , 0 )"		5622136	0					
ANR	5624628	Callee	sdb_array_delete		5622136	0					
ANR	5624629	Identifier	sdb_array_delete		5622136	0					
ANR	5624630	ArgumentList	s		5622136	1					
ANR	5624631	Argument	s		5622136	0					
ANR	5624632	Identifier	s		5622136	0					
ANR	5624633	Argument	p		5622136	1					
ANR	5624634	Identifier	p		5622136	0					
ANR	5624635	Argument	0		5622136	2					
ANR	5624636	PrimaryExpression	0		5622136	0					
ANR	5624637	Argument	0		5622136	3					
ANR	5624638	PrimaryExpression	0		5622136	0					
ANR	5624639	ElseStatement	else		5622136	0					
ANR	5624640	CompoundStatement		428:12:9225:9225	5622136	0					
ANR	5624641	ExpressionStatement	"ret = sdb_array_get ( s , p , - 1 , 0 )"	595:6:12808:12841	5622136	0	True				
ANR	5624642	AssignmentExpression	"ret = sdb_array_get ( s , p , - 1 , 0 )"		5622136	0		=			
ANR	5624643	Identifier	ret		5622136	0					
ANR	5624644	CallExpression	"sdb_array_get ( s , p , - 1 , 0 )"		5622136	1					
ANR	5624645	Callee	sdb_array_get		5622136	0					
ANR	5624646	Identifier	sdb_array_get		5622136	0					
ANR	5624647	ArgumentList	s		5622136	1					
ANR	5624648	Argument	s		5622136	0					
ANR	5624649	Identifier	s		5622136	0					
ANR	5624650	Argument	p		5622136	1					
ANR	5624651	Identifier	p		5622136	0					
ANR	5624652	Argument	- 1		5622136	2					
ANR	5624653	UnaryOperationExpression	- 1		5622136	0					
ANR	5624654	UnaryOperator	-		5622136	0					
ANR	5624655	PrimaryExpression	1		5622136	1					
ANR	5624656	Argument	0		5622136	3					
ANR	5624657	PrimaryExpression	0		5622136	0					
ANR	5624658	IfStatement	if ( ret && * ret )		5622136	1					
ANR	5624659	Condition	ret && * ret	596:10:12853:12863	5622136	0	True				
ANR	5624660	AndExpression	ret && * ret		5622136	0		&&			
ANR	5624661	Identifier	ret		5622136	0					
ANR	5624662	UnaryOperationExpression	* ret		5622136	1					
ANR	5624663	UnaryOperator	*		5622136	0					
ANR	5624664	Identifier	ret		5622136	1					
ANR	5624665	CompoundStatement		431:23:9327:9327	5622136	1					
ANR	5624666	ExpressionStatement	out_concat ( ret )	597:7:12875:12891	5622136	0	True				
ANR	5624667	CallExpression	out_concat ( ret )		5622136	0					
ANR	5624668	Callee	out_concat		5622136	0					
ANR	5624669	Identifier	out_concat		5622136	0					
ANR	5624670	ArgumentList	ret		5622136	1					
ANR	5624671	Argument	ret		5622136	0					
ANR	5624672	Identifier	ret		5622136	0					
ANR	5624673	ExpressionStatement	"sdb_array_delete ( s , p , - 1 , 0 )"	600:6:12946:12976	5622136	2	True				
ANR	5624674	CallExpression	"sdb_array_delete ( s , p , - 1 , 0 )"		5622136	0					
ANR	5624675	Callee	sdb_array_delete		5622136	0					
ANR	5624676	Identifier	sdb_array_delete		5622136	0					
ANR	5624677	ArgumentList	s		5622136	1					
ANR	5624678	Argument	s		5622136	0					
ANR	5624679	Identifier	s		5622136	0					
ANR	5624680	Argument	p		5622136	1					
ANR	5624681	Identifier	p		5622136	0					
ANR	5624682	Argument	- 1		5622136	2					
ANR	5624683	UnaryOperationExpression	- 1		5622136	0					
ANR	5624684	UnaryOperator	-		5622136	0					
ANR	5624685	PrimaryExpression	1		5622136	1					
ANR	5624686	Argument	0		5622136	3					
ANR	5624687	PrimaryExpression	0		5622136	0					
ANR	5624688	ExpressionStatement	free ( ret )	602:5:12990:13000	5622136	2	True				
ANR	5624689	CallExpression	free ( ret )		5622136	0					
ANR	5624690	Callee	free		5622136	0					
ANR	5624691	Identifier	free		5622136	0					
ANR	5624692	ArgumentList	ret		5622136	1					
ANR	5624693	Argument	ret		5622136	0					
ANR	5624694	Identifier	ret		5622136	0					
ANR	5624695	ElseStatement	else		5622136	0					
ANR	5624696	CompoundStatement		439:10:9479:9479	5622136	0					
ANR	5624697	ExpressionStatement	i = atoi ( cmd + 1 )	606:4:13065:13083	5622136	0	True				
ANR	5624698	AssignmentExpression	i = atoi ( cmd + 1 )		5622136	0		=			
ANR	5624699	Identifier	i		5622136	0					
ANR	5624700	CallExpression	atoi ( cmd + 1 )		5622136	1					
ANR	5624701	Callee	atoi		5622136	0					
ANR	5624702	Identifier	atoi		5622136	0					
ANR	5624703	ArgumentList	cmd + 1		5622136	1					
ANR	5624704	Argument	cmd + 1		5622136	0					
ANR	5624705	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5624706	Identifier	cmd		5622136	0					
ANR	5624707	PrimaryExpression	1		5622136	1					
ANR	5624708	IfStatement	if ( eq )		5622136	1					
ANR	5624709	Condition	eq	607:8:13093:13094	5622136	0	True				
ANR	5624710	Identifier	eq		5622136	0					
ANR	5624711	CompoundStatement		442:12:9558:9558	5622136	1					
ANR	5624712	IfStatement	if ( i < 0 )		5622136	0					
ANR	5624713	Condition	i < 0	609:9:13131:13135	5622136	0	True				
ANR	5624714	RelationalExpression	i < 0		5622136	0		<			
ANR	5624715	Identifier	i		5622136	0					
ANR	5624716	PrimaryExpression	0		5622136	1					
ANR	5624717	CompoundStatement		445:6:9607:9649	5622136	1					
ANR	5624718	IdentifierDeclStatement	"char * tmp = sdb_array_get ( s , p , - i , NULL ) ;"	610:6:13146:13188	5622136	0	True				
ANR	5624719	IdentifierDecl	"* tmp = sdb_array_get ( s , p , - i , NULL )"		5622136	0					
ANR	5624720	IdentifierDeclType	char *		5622136	0					
ANR	5624721	Identifier	tmp		5622136	1					
ANR	5624722	AssignmentExpression	"* tmp = sdb_array_get ( s , p , - i , NULL )"		5622136	2		=			
ANR	5624723	Identifier	tmp		5622136	0					
ANR	5624724	CallExpression	"sdb_array_get ( s , p , - i , NULL )"		5622136	1					
ANR	5624725	Callee	sdb_array_get		5622136	0					
ANR	5624726	Identifier	sdb_array_get		5622136	0					
ANR	5624727	ArgumentList	s		5622136	1					
ANR	5624728	Argument	s		5622136	0					
ANR	5624729	Identifier	s		5622136	0					
ANR	5624730	Argument	p		5622136	1					
ANR	5624731	Identifier	p		5622136	0					
ANR	5624732	Argument	- i		5622136	2					
ANR	5624733	UnaryOperationExpression	- i		5622136	0					
ANR	5624734	UnaryOperator	-		5622136	0					
ANR	5624735	Identifier	i		5622136	1					
ANR	5624736	Argument	NULL		5622136	3					
ANR	5624737	Identifier	NULL		5622136	0					
ANR	5624738	IfStatement	if ( tmp )		5622136	1					
ANR	5624739	Condition	tmp	611:10:13200:13202	5622136	0	True				
ANR	5624740	Identifier	tmp		5622136	0					
ANR	5624741	CompoundStatement		446:15:9666:9666	5622136	1					
ANR	5624742	IfStatement	if ( encode )		5622136	0					
ANR	5624743	Condition	encode	612:11:13218:13223	5622136	0	True				
ANR	5624744	Identifier	encode		5622136	0					
ANR	5624745	CompoundStatement		448:8:9697:9741	5622136	1					
ANR	5624746	IdentifierDeclStatement	"char * newtmp = ( void * ) sdb_decode ( tmp , NULL ) ;"	613:8:13236:13280	5622136	0	True				
ANR	5624747	IdentifierDecl	"* newtmp = ( void * ) sdb_decode ( tmp , NULL )"		5622136	0					
ANR	5624748	IdentifierDeclType	char *		5622136	0					
ANR	5624749	Identifier	newtmp		5622136	1					
ANR	5624750	AssignmentExpression	"* newtmp = ( void * ) sdb_decode ( tmp , NULL )"		5622136	2		=			
ANR	5624751	Identifier	newtmp		5622136	0					
ANR	5624752	CastExpression	"( void * ) sdb_decode ( tmp , NULL )"		5622136	1					
ANR	5624753	CastTarget	void *		5622136	0					
ANR	5624754	CallExpression	"sdb_decode ( tmp , NULL )"		5622136	1					
ANR	5624755	Callee	sdb_decode		5622136	0					
ANR	5624756	Identifier	sdb_decode		5622136	0					
ANR	5624757	ArgumentList	tmp		5622136	1					
ANR	5624758	Argument	tmp		5622136	0					
ANR	5624759	Identifier	tmp		5622136	0					
ANR	5624760	Argument	NULL		5622136	1					
ANR	5624761	Identifier	NULL		5622136	0					
ANR	5624762	IfStatement	if ( ! newtmp )		5622136	1					
ANR	5624763	Condition	! newtmp	614:12:13294:13300	5622136	0	True				
ANR	5624764	UnaryOperationExpression	! newtmp		5622136	0					
ANR	5624765	UnaryOperator	!		5622136	0					
ANR	5624766	Identifier	newtmp		5622136	1					
ANR	5624767	CompoundStatement		449:21:9764:9764	5622136	1					
ANR	5624768	GotoStatement	goto fail ;	615:9:13314:13323	5622136	0	True				
ANR	5624769	Identifier	fail		5622136	0					
ANR	5624770	ExpressionStatement	free ( tmp )	617:8:13343:13353	5622136	2	True				
ANR	5624771	CallExpression	free ( tmp )		5622136	0					
ANR	5624772	Callee	free		5622136	0					
ANR	5624773	Identifier	free		5622136	0					
ANR	5624774	ArgumentList	tmp		5622136	1					
ANR	5624775	Argument	tmp		5622136	0					
ANR	5624776	Identifier	tmp		5622136	0					
ANR	5624777	ExpressionStatement	tmp = newtmp	618:8:13363:13375	5622136	3	True				
ANR	5624778	AssignmentExpression	tmp = newtmp		5622136	0		=			
ANR	5624779	Identifier	tmp		5622136	0					
ANR	5624780	Identifier	newtmp		5622136	1					
ANR	5624781	ExpressionStatement	ok = 0	620:7:13393:13399	5622136	1	True				
ANR	5624782	AssignmentExpression	ok = 0		5622136	0		=			
ANR	5624783	Identifier	ok		5622136	0					
ANR	5624784	PrimaryExpression	0		5622136	1					
ANR	5624785	ExpressionStatement	out_concat ( tmp )	621:7:13408:13424	5622136	2	True				
ANR	5624786	CallExpression	out_concat ( tmp )		5622136	0					
ANR	5624787	Callee	out_concat		5622136	0					
ANR	5624788	Identifier	out_concat		5622136	0					
ANR	5624789	ArgumentList	tmp		5622136	1					
ANR	5624790	Argument	tmp		5622136	0					
ANR	5624791	Identifier	tmp		5622136	0					
ANR	5624792	ExpressionStatement	"sdb_array_delete ( s , p , - i , 0 )"	622:7:13433:13463	5622136	3	True				
ANR	5624793	CallExpression	"sdb_array_delete ( s , p , - i , 0 )"		5622136	0					
ANR	5624794	Callee	sdb_array_delete		5622136	0					
ANR	5624795	Identifier	sdb_array_delete		5622136	0					
ANR	5624796	ArgumentList	s		5622136	1					
ANR	5624797	Argument	s		5622136	0					
ANR	5624798	Identifier	s		5622136	0					
ANR	5624799	Argument	p		5622136	1					
ANR	5624800	Identifier	p		5622136	0					
ANR	5624801	Argument	- i		5622136	2					
ANR	5624802	UnaryOperationExpression	- i		5622136	0					
ANR	5624803	UnaryOperator	-		5622136	0					
ANR	5624804	Identifier	i		5622136	1					
ANR	5624805	Argument	0		5622136	3					
ANR	5624806	PrimaryExpression	0		5622136	0					
ANR	5624807	ExpressionStatement	free ( tmp )	623:7:13472:13482	5622136	4	True				
ANR	5624808	CallExpression	free ( tmp )		5622136	0					
ANR	5624809	Callee	free		5622136	0					
ANR	5624810	Identifier	free		5622136	0					
ANR	5624811	ArgumentList	tmp		5622136	1					
ANR	5624812	Argument	tmp		5622136	0					
ANR	5624813	Identifier	tmp		5622136	0					
ANR	5624814	ElseStatement	else		5622136	0					
ANR	5624815	GotoStatement	goto fail ;	624:13:13497:13506	5622136	0	True				
ANR	5624816	Identifier	fail		5622136	0					
ANR	5624817	ElseStatement	else		5622136	0					
ANR	5624818	CompoundStatement		460:12:9981:9981	5622136	0					
ANR	5624819	IfStatement	if ( encode )		5622136	0					
ANR	5624820	Condition	encode	626:10:13532:13537	5622136	0	True				
ANR	5624821	Identifier	encode		5622136	0					
ANR	5624822	CompoundStatement		461:18:10001:10001	5622136	1					
ANR	5624823	ExpressionStatement	"val = sdb_encode ( ( const ut8 * ) val , - 1 )"	627:7:13549:13587	5622136	0	True				
ANR	5624824	AssignmentExpression	"val = sdb_encode ( ( const ut8 * ) val , - 1 )"		5622136	0		=			
ANR	5624825	Identifier	val		5622136	0					
ANR	5624826	CallExpression	"sdb_encode ( ( const ut8 * ) val , - 1 )"		5622136	1					
ANR	5624827	Callee	sdb_encode		5622136	0					
ANR	5624828	Identifier	sdb_encode		5622136	0					
ANR	5624829	ArgumentList	( const ut8 * ) val		5622136	1					
ANR	5624830	Argument	( const ut8 * ) val		5622136	0					
ANR	5624831	CastExpression	( const ut8 * ) val		5622136	0					
ANR	5624832	CastTarget	const ut8 *		5622136	0					
ANR	5624833	Identifier	val		5622136	1					
ANR	5624834	Argument	- 1		5622136	1					
ANR	5624835	UnaryOperationExpression	- 1		5622136	0					
ANR	5624836	UnaryOperator	-		5622136	0					
ANR	5624837	PrimaryExpression	1		5622136	1					
ANR	5624838	ExpressionStatement	"ok = cmd [ 1 ] ? ( ( cmd [ 1 ] == '+' ) ? sdb_array_insert ( s , p , i , val , 0 ) : sdb_array_set ( s , p , i , val , 0 ) ) : sdb_array_delete ( s , p , i , 0 )"	629:6:13603:13753	5622136	1	True				
ANR	5624839	AssignmentExpression	"ok = cmd [ 1 ] ? ( ( cmd [ 1 ] == '+' ) ? sdb_array_insert ( s , p , i , val , 0 ) : sdb_array_set ( s , p , i , val , 0 ) ) : sdb_array_delete ( s , p , i , 0 )"		5622136	0		=			
ANR	5624840	Identifier	ok		5622136	0					
ANR	5624841	ConditionalExpression	"cmd [ 1 ] ? ( ( cmd [ 1 ] == '+' ) ? sdb_array_insert ( s , p , i , val , 0 ) : sdb_array_set ( s , p , i , val , 0 ) ) : sdb_array_delete ( s , p , i , 0 )"		5622136	1					
ANR	5624842	Condition	cmd [ 1 ]		5622136	0					
ANR	5624843	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624844	Identifier	cmd		5622136	0					
ANR	5624845	PrimaryExpression	1		5622136	1					
ANR	5624846	ConditionalExpression	"( cmd [ 1 ] == '+' ) ? sdb_array_insert ( s , p , i , val , 0 ) : sdb_array_set ( s , p , i , val , 0 )"		5622136	1					
ANR	5624847	Condition	cmd [ 1 ] == '+'		5622136	0					
ANR	5624848	EqualityExpression	cmd [ 1 ] == '+'		5622136	0		==			
ANR	5624849	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624850	Identifier	cmd		5622136	0					
ANR	5624851	PrimaryExpression	1		5622136	1					
ANR	5624852	PrimaryExpression	'+'		5622136	1					
ANR	5624853	CallExpression	"sdb_array_insert ( s , p , i , val , 0 )"		5622136	1					
ANR	5624854	Callee	sdb_array_insert		5622136	0					
ANR	5624855	Identifier	sdb_array_insert		5622136	0					
ANR	5624856	ArgumentList	s		5622136	1					
ANR	5624857	Argument	s		5622136	0					
ANR	5624858	Identifier	s		5622136	0					
ANR	5624859	Argument	p		5622136	1					
ANR	5624860	Identifier	p		5622136	0					
ANR	5624861	Argument	i		5622136	2					
ANR	5624862	Identifier	i		5622136	0					
ANR	5624863	Argument	val		5622136	3					
ANR	5624864	Identifier	val		5622136	0					
ANR	5624865	Argument	0		5622136	4					
ANR	5624866	PrimaryExpression	0		5622136	0					
ANR	5624867	CallExpression	"sdb_array_set ( s , p , i , val , 0 )"		5622136	2					
ANR	5624868	Callee	sdb_array_set		5622136	0					
ANR	5624869	Identifier	sdb_array_set		5622136	0					
ANR	5624870	ArgumentList	s		5622136	1					
ANR	5624871	Argument	s		5622136	0					
ANR	5624872	Identifier	s		5622136	0					
ANR	5624873	Argument	p		5622136	1					
ANR	5624874	Identifier	p		5622136	0					
ANR	5624875	Argument	i		5622136	2					
ANR	5624876	Identifier	i		5622136	0					
ANR	5624877	Argument	val		5622136	3					
ANR	5624878	Identifier	val		5622136	0					
ANR	5624879	Argument	0		5622136	4					
ANR	5624880	PrimaryExpression	0		5622136	0					
ANR	5624881	CallExpression	"sdb_array_delete ( s , p , i , 0 )"		5622136	2					
ANR	5624882	Callee	sdb_array_delete		5622136	0					
ANR	5624883	Identifier	sdb_array_delete		5622136	0					
ANR	5624884	ArgumentList	s		5622136	1					
ANR	5624885	Argument	s		5622136	0					
ANR	5624886	Identifier	s		5622136	0					
ANR	5624887	Argument	p		5622136	1					
ANR	5624888	Identifier	p		5622136	0					
ANR	5624889	Argument	i		5622136	2					
ANR	5624890	Identifier	i		5622136	0					
ANR	5624891	Argument	0		5622136	3					
ANR	5624892	PrimaryExpression	0		5622136	0					
ANR	5624893	IfStatement	if ( encode )		5622136	2					
ANR	5624894	Condition	encode	633:10:13765:13770	5622136	0	True				
ANR	5624895	Identifier	encode		5622136	0					
ANR	5624896	CompoundStatement		468:18:10234:10234	5622136	1					
ANR	5624897	ExpressionStatement	free ( ( void * ) val )	634:7:13782:13799	5622136	0	True				
ANR	5624898	CallExpression	free ( ( void * ) val )		5622136	0					
ANR	5624899	Callee	free		5622136	0					
ANR	5624900	Identifier	free		5622136	0					
ANR	5624901	ArgumentList	( void * ) val		5622136	1					
ANR	5624902	Argument	( void * ) val		5622136	0					
ANR	5624903	CastExpression	( void * ) val		5622136	0					
ANR	5624904	CastTarget	void *		5622136	0					
ANR	5624905	Identifier	val		5622136	1					
ANR	5624906	ExpressionStatement	val = NULL	635:7:13808:13818	5622136	1	True				
ANR	5624907	AssignmentExpression	val = NULL		5622136	0		=			
ANR	5624908	Identifier	val		5622136	0					
ANR	5624909	Identifier	NULL		5622136	1					
ANR	5624910	IfStatement	if ( ok && buf )		5622136	1					
ANR	5624911	Condition	ok && buf	638:9:13844:13852	5622136	0	True				
ANR	5624912	AndExpression	ok && buf		5622136	0		&&			
ANR	5624913	Identifier	ok		5622136	0					
ANR	5624914	Identifier	buf		5622136	1					
ANR	5624915	ExpressionStatement	* buf = 0	638:20:13855:13863	5622136	1	True				
ANR	5624916	AssignmentExpression	* buf = 0		5622136	0		=			
ANR	5624917	UnaryOperationExpression	* buf		5622136	0					
ANR	5624918	UnaryOperator	*		5622136	0					
ANR	5624919	Identifier	buf		5622136	1					
ANR	5624920	PrimaryExpression	0		5622136	1					
ANR	5624921	ElseStatement	else		5622136	0					
ANR	5624922	ExpressionStatement	buf = NULL	639:10:13875:13885	5622136	0	True				
ANR	5624923	AssignmentExpression	buf = NULL		5622136	0		=			
ANR	5624924	Identifier	buf		5622136	0					
ANR	5624925	Identifier	NULL		5622136	1					
ANR	5624926	ElseStatement	else		5622136	0					
ANR	5624927	CompoundStatement		475:11:10359:10359	5622136	0					
ANR	5624928	IfStatement	if ( i == 0 )		5622136	0					
ANR	5624929	Condition	i == 0	641:9:13909:13912	5622136	0	True				
ANR	5624930	EqualityExpression	i == 0		5622136	0		==			
ANR	5624931	Identifier	i		5622136	0					
ANR	5624932	PrimaryExpression	0		5622136	1					
ANR	5624933	CompoundStatement		476:15:10376:10376	5622136	1					
ANR	5624934	IfStatement	if ( cmd [ 1 ] == '-' )		5622136	0					
ANR	5624935	Condition	cmd [ 1 ] == '-'	643:10:13947:13957	5622136	0	True				
ANR	5624936	EqualityExpression	cmd [ 1 ] == '-'		5622136	0		==			
ANR	5624937	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5624938	Identifier	cmd		5622136	0					
ANR	5624939	PrimaryExpression	1		5622136	1					
ANR	5624940	PrimaryExpression	'-'		5622136	1					
ANR	5624941	CompoundStatement		478:23:10421:10421	5622136	1					
ANR	5624942	ExpressionStatement	"sdb_array_remove ( s , p , cmd + 2 , 0 )"	644:7:13969:14002	5622136	0	True				
ANR	5624943	CallExpression	"sdb_array_remove ( s , p , cmd + 2 , 0 )"		5622136	0					
ANR	5624944	Callee	sdb_array_remove		5622136	0					
ANR	5624945	Identifier	sdb_array_remove		5622136	0					
ANR	5624946	ArgumentList	s		5622136	1					
ANR	5624947	Argument	s		5622136	0					
ANR	5624948	Identifier	s		5622136	0					
ANR	5624949	Argument	p		5622136	1					
ANR	5624950	Identifier	p		5622136	0					
ANR	5624951	Argument	cmd + 2		5622136	2					
ANR	5624952	AdditiveExpression	cmd + 2		5622136	0		+			
ANR	5624953	Identifier	cmd		5622136	0					
ANR	5624954	PrimaryExpression	2		5622136	1					
ANR	5624955	Argument	0		5622136	3					
ANR	5624956	PrimaryExpression	0		5622136	0					
ANR	5624957	ElseStatement	else		5622136	0					
ANR	5624958	CompoundStatement		480:13:10478:10478	5622136	0					
ANR	5624959	ExpressionStatement	"eprintf ( ""TODO: [b]foo -> get index of b key inside foo array\\n"" )"	646:7:14026:14091	5622136	0	True				
ANR	5624960	CallExpression	"eprintf ( ""TODO: [b]foo -> get index of b key inside foo array\\n"" )"		5622136	0					
ANR	5624961	Callee	eprintf		5622136	0					
ANR	5624962	Identifier	eprintf		5622136	0					
ANR	5624963	ArgumentList	"""TODO: [b]foo -> get index of b key inside foo array\\n"""		5622136	1					
ANR	5624964	Argument	"""TODO: [b]foo -> get index of b key inside foo array\\n"""		5622136	0					
ANR	5624965	PrimaryExpression	"""TODO: [b]foo -> get index of b key inside foo array\\n"""		5622136	0					
ANR	5624966	ElseStatement	else		5622136	0					
ANR	5624967	IfStatement	if ( i < 0 )		5622136	0					
ANR	5624968	Condition	i < 0	649:16:14159:14161	5622136	0	True				
ANR	5624969	RelationalExpression	i < 0		5622136	0		<			
ANR	5624970	Identifier	i		5622136	0					
ANR	5624971	PrimaryExpression	0		5622136	1					
ANR	5624972	CompoundStatement		486:6:10653:10695	5622136	1					
ANR	5624973	IdentifierDeclStatement	"char * tmp = sdb_array_get ( s , p , - i , NULL ) ;"	651:6:14192:14234	5622136	0	True				
ANR	5624974	IdentifierDecl	"* tmp = sdb_array_get ( s , p , - i , NULL )"		5622136	0					
ANR	5624975	IdentifierDeclType	char *		5622136	0					
ANR	5624976	Identifier	tmp		5622136	1					
ANR	5624977	AssignmentExpression	"* tmp = sdb_array_get ( s , p , - i , NULL )"		5622136	2		=			
ANR	5624978	Identifier	tmp		5622136	0					
ANR	5624979	CallExpression	"sdb_array_get ( s , p , - i , NULL )"		5622136	1					
ANR	5624980	Callee	sdb_array_get		5622136	0					
ANR	5624981	Identifier	sdb_array_get		5622136	0					
ANR	5624982	ArgumentList	s		5622136	1					
ANR	5624983	Argument	s		5622136	0					
ANR	5624984	Identifier	s		5622136	0					
ANR	5624985	Argument	p		5622136	1					
ANR	5624986	Identifier	p		5622136	0					
ANR	5624987	Argument	- i		5622136	2					
ANR	5624988	UnaryOperationExpression	- i		5622136	0					
ANR	5624989	UnaryOperator	-		5622136	0					
ANR	5624990	Identifier	i		5622136	1					
ANR	5624991	Argument	NULL		5622136	3					
ANR	5624992	Identifier	NULL		5622136	0					
ANR	5624993	IfStatement	if ( tmp && * tmp )		5622136	1					
ANR	5624994	Condition	tmp && * tmp	652:10:14246:14256	5622136	0	True				
ANR	5624995	AndExpression	tmp && * tmp		5622136	0		&&			
ANR	5624996	Identifier	tmp		5622136	0					
ANR	5624997	UnaryOperationExpression	* tmp		5622136	1					
ANR	5624998	UnaryOperator	*		5622136	0					
ANR	5624999	Identifier	tmp		5622136	1					
ANR	5625000	CompoundStatement		487:23:10720:10720	5622136	1					
ANR	5625001	ExpressionStatement	out_concat ( tmp )	653:7:14268:14284	5622136	0	True				
ANR	5625002	CallExpression	out_concat ( tmp )		5622136	0					
ANR	5625003	Callee	out_concat		5622136	0					
ANR	5625004	Identifier	out_concat		5622136	0					
ANR	5625005	ArgumentList	tmp		5622136	1					
ANR	5625006	Argument	tmp		5622136	0					
ANR	5625007	Identifier	tmp		5622136	0					
ANR	5625008	ExpressionStatement	"sdb_array_delete ( s , p , - i , 0 )"	654:7:14293:14323	5622136	1	True				
ANR	5625009	CallExpression	"sdb_array_delete ( s , p , - i , 0 )"		5622136	0					
ANR	5625010	Callee	sdb_array_delete		5622136	0					
ANR	5625011	Identifier	sdb_array_delete		5622136	0					
ANR	5625012	ArgumentList	s		5622136	1					
ANR	5625013	Argument	s		5622136	0					
ANR	5625014	Identifier	s		5622136	0					
ANR	5625015	Argument	p		5622136	1					
ANR	5625016	Identifier	p		5622136	0					
ANR	5625017	Argument	- i		5622136	2					
ANR	5625018	UnaryOperationExpression	- i		5622136	0					
ANR	5625019	UnaryOperator	-		5622136	0					
ANR	5625020	Identifier	i		5622136	1					
ANR	5625021	Argument	0		5622136	3					
ANR	5625022	PrimaryExpression	0		5622136	0					
ANR	5625023	ExpressionStatement	free ( tmp )	656:6:14339:14349	5622136	2	True				
ANR	5625024	CallExpression	free ( tmp )		5622136	0					
ANR	5625025	Callee	free		5622136	0					
ANR	5625026	Identifier	free		5622136	0					
ANR	5625027	ArgumentList	tmp		5622136	1					
ANR	5625028	Argument	tmp		5622136	0					
ANR	5625029	Identifier	tmp		5622136	0					
ANR	5625030	ElseStatement	else		5622136	0					
ANR	5625031	CompoundStatement		494:6:10852:10893	5622136	0					
ANR	5625032	IdentifierDeclStatement	"char * tmp = sdb_array_get ( s , p , i , NULL ) ;"	659:6:14391:14432	5622136	0	True				
ANR	5625033	IdentifierDecl	"* tmp = sdb_array_get ( s , p , i , NULL )"		5622136	0					
ANR	5625034	IdentifierDeclType	char *		5622136	0					
ANR	5625035	Identifier	tmp		5622136	1					
ANR	5625036	AssignmentExpression	"* tmp = sdb_array_get ( s , p , i , NULL )"		5622136	2		=			
ANR	5625037	Identifier	tmp		5622136	0					
ANR	5625038	CallExpression	"sdb_array_get ( s , p , i , NULL )"		5622136	1					
ANR	5625039	Callee	sdb_array_get		5622136	0					
ANR	5625040	Identifier	sdb_array_get		5622136	0					
ANR	5625041	ArgumentList	s		5622136	1					
ANR	5625042	Argument	s		5622136	0					
ANR	5625043	Identifier	s		5622136	0					
ANR	5625044	Argument	p		5622136	1					
ANR	5625045	Identifier	p		5622136	0					
ANR	5625046	Argument	i		5622136	2					
ANR	5625047	Identifier	i		5622136	0					
ANR	5625048	Argument	NULL		5622136	3					
ANR	5625049	Identifier	NULL		5622136	0					
ANR	5625050	IfStatement	if ( tmp && * tmp )		5622136	1					
ANR	5625051	Condition	tmp && * tmp	660:10:14444:14454	5622136	0	True				
ANR	5625052	AndExpression	tmp && * tmp		5622136	0		&&			
ANR	5625053	Identifier	tmp		5622136	0					
ANR	5625054	UnaryOperationExpression	* tmp		5622136	1					
ANR	5625055	UnaryOperator	*		5622136	0					
ANR	5625056	Identifier	tmp		5622136	1					
ANR	5625057	CompoundStatement		495:23:10918:10918	5622136	1					
ANR	5625058	ExpressionStatement	out_concat ( tmp )	661:7:14466:14482	5622136	0	True				
ANR	5625059	CallExpression	out_concat ( tmp )		5622136	0					
ANR	5625060	Callee	out_concat		5622136	0					
ANR	5625061	Identifier	out_concat		5622136	0					
ANR	5625062	ArgumentList	tmp		5622136	1					
ANR	5625063	Argument	tmp		5622136	0					
ANR	5625064	Identifier	tmp		5622136	0					
ANR	5625065	ExpressionStatement	free ( tmp )	663:6:14498:14508	5622136	2	True				
ANR	5625066	CallExpression	free ( tmp )		5622136	0					
ANR	5625067	Callee	free		5622136	0					
ANR	5625068	Identifier	free		5622136	0					
ANR	5625069	ArgumentList	tmp		5622136	1					
ANR	5625070	Argument	tmp		5622136	0					
ANR	5625071	Identifier	tmp		5622136	0					
ANR	5625072	ElseStatement	else		5622136	0					
ANR	5625073	CompoundStatement		502:9:10998:10998	5622136	0					
ANR	5625074	IfStatement	if ( eq )		5622136	0					
ANR	5625075	Condition	eq	668:7:14546:14547	5622136	0	True				
ANR	5625076	Identifier	eq		5622136	0					
ANR	5625077	CompoundStatement		505:4:11038:11061	5622136	1					
ANR	5625078	IdentifierDeclStatement	char * sval = ( char * ) val ;	670:4:14577:14600	5622136	0	True				
ANR	5625079	IdentifierDecl	* sval = ( char * ) val		5622136	0					
ANR	5625080	IdentifierDeclType	char *		5622136	0					
ANR	5625081	Identifier	sval		5622136	1					
ANR	5625082	AssignmentExpression	* sval = ( char * ) val		5622136	2		=			
ANR	5625083	Identifier	sval		5622136	0					
ANR	5625084	CastExpression	( char * ) val		5622136	1					
ANR	5625085	CastTarget	char *		5622136	0					
ANR	5625086	Identifier	val		5622136	1					
ANR	5625087	IfStatement	if ( encode )		5622136	1					
ANR	5625088	Condition	encode	671:8:14610:14615	5622136	0	True				
ANR	5625089	Identifier	encode		5622136	0					
ANR	5625090	CompoundStatement		506:16:11079:11079	5622136	1					
ANR	5625091	ExpressionStatement	"sval = sdb_encode ( ( const ut8 * ) val , - 1 )"	672:5:14625:14664	5622136	0	True				
ANR	5625092	AssignmentExpression	"sval = sdb_encode ( ( const ut8 * ) val , - 1 )"		5622136	0		=			
ANR	5625093	Identifier	sval		5622136	0					
ANR	5625094	CallExpression	"sdb_encode ( ( const ut8 * ) val , - 1 )"		5622136	1					
ANR	5625095	Callee	sdb_encode		5622136	0					
ANR	5625096	Identifier	sdb_encode		5622136	0					
ANR	5625097	ArgumentList	( const ut8 * ) val		5622136	1					
ANR	5625098	Argument	( const ut8 * ) val		5622136	0					
ANR	5625099	CastExpression	( const ut8 * ) val		5622136	0					
ANR	5625100	CastTarget	const ut8 *		5622136	0					
ANR	5625101	Identifier	val		5622136	1					
ANR	5625102	Argument	- 1		5622136	1					
ANR	5625103	UnaryOperationExpression	- 1		5622136	0					
ANR	5625104	UnaryOperator	-		5622136	0					
ANR	5625105	PrimaryExpression	1		5622136	1					
ANR	5625106	IfStatement	if ( cmd [ 1 ] )		5622136	2					
ANR	5625107	Condition	cmd [ 1 ]	674:8:14680:14685	5622136	0	True				
ANR	5625108	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5625109	Identifier	cmd		5622136	0					
ANR	5625110	PrimaryExpression	1		5622136	1					
ANR	5625111	CompoundStatement		510:5:11156:11178	5622136	1					
ANR	5625112	IdentifierDeclStatement	int idx = atoi ( cmd + 1 ) ;	675:5:14695:14717	5622136	0	True				
ANR	5625113	IdentifierDecl	idx = atoi ( cmd + 1 )		5622136	0					
ANR	5625114	IdentifierDeclType	int		5622136	0					
ANR	5625115	Identifier	idx		5622136	1					
ANR	5625116	AssignmentExpression	idx = atoi ( cmd + 1 )		5622136	2		=			
ANR	5625117	Identifier	idx		5622136	0					
ANR	5625118	CallExpression	atoi ( cmd + 1 )		5622136	1					
ANR	5625119	Callee	atoi		5622136	0					
ANR	5625120	Identifier	atoi		5622136	0					
ANR	5625121	ArgumentList	cmd + 1		5622136	1					
ANR	5625122	Argument	cmd + 1		5622136	0					
ANR	5625123	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5625124	Identifier	cmd		5622136	0					
ANR	5625125	PrimaryExpression	1		5622136	1					
ANR	5625126	ExpressionStatement	"ok = sdb_array_set ( s , p , idx , sval , 0 )"	676:5:14724:14763	5622136	1	True				
ANR	5625127	AssignmentExpression	"ok = sdb_array_set ( s , p , idx , sval , 0 )"		5622136	0		=			
ANR	5625128	Identifier	ok		5622136	0					
ANR	5625129	CallExpression	"sdb_array_set ( s , p , idx , sval , 0 )"		5622136	1					
ANR	5625130	Callee	sdb_array_set		5622136	0					
ANR	5625131	Identifier	sdb_array_set		5622136	0					
ANR	5625132	ArgumentList	s		5622136	1					
ANR	5625133	Argument	s		5622136	0					
ANR	5625134	Identifier	s		5622136	0					
ANR	5625135	Argument	p		5622136	1					
ANR	5625136	Identifier	p		5622136	0					
ANR	5625137	Argument	idx		5622136	2					
ANR	5625138	Identifier	idx		5622136	0					
ANR	5625139	Argument	sval		5622136	3					
ANR	5625140	Identifier	sval		5622136	0					
ANR	5625141	Argument	0		5622136	4					
ANR	5625142	PrimaryExpression	0		5622136	0					
ANR	5625143	IfStatement	if ( encode )		5622136	2					
ANR	5625144	Condition	encode	678:9:14810:14815	5622136	0	True				
ANR	5625145	Identifier	encode		5622136	0					
ANR	5625146	ExpressionStatement	free ( sval )	679:6:14824:14835	5622136	1	True				
ANR	5625147	CallExpression	free ( sval )		5622136	0					
ANR	5625148	Callee	free		5622136	0					
ANR	5625149	Identifier	free		5622136	0					
ANR	5625150	ArgumentList	sval		5622136	1					
ANR	5625151	Argument	sval		5622136	0					
ANR	5625152	Identifier	sval		5622136	0					
ANR	5625153	ElseStatement	else		5622136	0					
ANR	5625154	CompoundStatement		515:11:11309:11309	5622136	0					
ANR	5625155	IfStatement	if ( encode )		5622136	0					
ANR	5625156	Condition	encode	681:9:14859:14864	5622136	0	True				
ANR	5625157	Identifier	encode		5622136	0					
ANR	5625158	CompoundStatement		516:17:11328:11328	5622136	1					
ANR	5625159	ExpressionStatement	"ok = sdb_set_owned ( s , p , sval , 0 )"	682:6:14875:14909	5622136	0	True				
ANR	5625160	AssignmentExpression	"ok = sdb_set_owned ( s , p , sval , 0 )"		5622136	0		=			
ANR	5625161	Identifier	ok		5622136	0					
ANR	5625162	CallExpression	"sdb_set_owned ( s , p , sval , 0 )"		5622136	1					
ANR	5625163	Callee	sdb_set_owned		5622136	0					
ANR	5625164	Identifier	sdb_set_owned		5622136	0					
ANR	5625165	ArgumentList	s		5622136	1					
ANR	5625166	Argument	s		5622136	0					
ANR	5625167	Identifier	s		5622136	0					
ANR	5625168	Argument	p		5622136	1					
ANR	5625169	Identifier	p		5622136	0					
ANR	5625170	Argument	sval		5622136	2					
ANR	5625171	Identifier	sval		5622136	0					
ANR	5625172	Argument	0		5622136	3					
ANR	5625173	PrimaryExpression	0		5622136	0					
ANR	5625174	ElseStatement	else		5622136	0					
ANR	5625175	CompoundStatement		518:12:11384:11384	5622136	0					
ANR	5625176	ExpressionStatement	"ok = sdb_set ( s , p , sval , 0 )"	684:6:14931:14959	5622136	0	True				
ANR	5625177	AssignmentExpression	"ok = sdb_set ( s , p , sval , 0 )"		5622136	0		=			
ANR	5625178	Identifier	ok		5622136	0					
ANR	5625179	CallExpression	"sdb_set ( s , p , sval , 0 )"		5622136	1					
ANR	5625180	Callee	sdb_set		5622136	0					
ANR	5625181	Identifier	sdb_set		5622136	0					
ANR	5625182	ArgumentList	s		5622136	1					
ANR	5625183	Argument	s		5622136	0					
ANR	5625184	Identifier	s		5622136	0					
ANR	5625185	Argument	p		5622136	1					
ANR	5625186	Identifier	p		5622136	0					
ANR	5625187	Argument	sval		5622136	2					
ANR	5625188	Identifier	sval		5622136	0					
ANR	5625189	Argument	0		5622136	3					
ANR	5625190	PrimaryExpression	0		5622136	0					
ANR	5625191	IfStatement	if ( ok && buf )		5622136	3					
ANR	5625192	Condition	ok && buf	687:8:14982:14990	5622136	0	True				
ANR	5625193	AndExpression	ok && buf		5622136	0		&&			
ANR	5625194	Identifier	ok		5622136	0					
ANR	5625195	Identifier	buf		5622136	1					
ANR	5625196	CompoundStatement		522:19:11454:11454	5622136	1					
ANR	5625197	ExpressionStatement	* buf = 0	688:5:15000:15008	5622136	0	True				
ANR	5625198	AssignmentExpression	* buf = 0		5622136	0		=			
ANR	5625199	UnaryOperationExpression	* buf		5622136	0					
ANR	5625200	UnaryOperator	*		5622136	0					
ANR	5625201	Identifier	buf		5622136	1					
ANR	5625202	PrimaryExpression	0		5622136	1					
ANR	5625203	ElseStatement	else		5622136	0					
ANR	5625204	CompoundStatement		528:4:11558:11567	5622136	0					
ANR	5625205	IdentifierDeclStatement	"const char * sval = sdb_const_get ( s , p , 0 ) ;"	692:4:15049:15091	5622136	0	True				
ANR	5625206	IdentifierDecl	"* sval = sdb_const_get ( s , p , 0 )"		5622136	0					
ANR	5625207	IdentifierDeclType	const char *		5622136	0					
ANR	5625208	Identifier	sval		5622136	1					
ANR	5625209	AssignmentExpression	"* sval = sdb_const_get ( s , p , 0 )"		5622136	2		=			
ANR	5625210	Identifier	sval		5622136	0					
ANR	5625211	CallExpression	"sdb_const_get ( s , p , 0 )"		5622136	1					
ANR	5625212	Callee	sdb_const_get		5622136	0					
ANR	5625213	Identifier	sdb_const_get		5622136	0					
ANR	5625214	ArgumentList	s		5622136	1					
ANR	5625215	Argument	s		5622136	0					
ANR	5625216	Identifier	s		5622136	0					
ANR	5625217	Argument	p		5622136	1					
ANR	5625218	Identifier	p		5622136	0					
ANR	5625219	Argument	0		5622136	2					
ANR	5625220	PrimaryExpression	0		5622136	0					
ANR	5625221	IdentifierDeclStatement	size_t wl ;	693:4:15097:15106	5622136	1	True				
ANR	5625222	IdentifierDecl	wl		5622136	0					
ANR	5625223	IdentifierDeclType	size_t		5622136	0					
ANR	5625224	Identifier	wl		5622136	1					
ANR	5625225	IfStatement	if ( cmd [ 1 ] )		5622136	2					
ANR	5625226	Condition	cmd [ 1 ]	694:8:15116:15121	5622136	0	True				
ANR	5625227	ArrayIndexing	cmd [ 1 ]		5622136	0					
ANR	5625228	Identifier	cmd		5622136	0					
ANR	5625229	PrimaryExpression	1		5622136	1					
ANR	5625230	CompoundStatement		529:16:11585:11585	5622136	1					
ANR	5625231	ExpressionStatement	i = atoi ( cmd + 1 )	695:5:15131:15149	5622136	0	True				
ANR	5625232	AssignmentExpression	i = atoi ( cmd + 1 )		5622136	0		=			
ANR	5625233	Identifier	i		5622136	0					
ANR	5625234	CallExpression	atoi ( cmd + 1 )		5622136	1					
ANR	5625235	Callee	atoi		5622136	0					
ANR	5625236	Identifier	atoi		5622136	0					
ANR	5625237	ArgumentList	cmd + 1		5622136	1					
ANR	5625238	Argument	cmd + 1		5622136	0					
ANR	5625239	AdditiveExpression	cmd + 1		5622136	0		+			
ANR	5625240	Identifier	cmd		5622136	0					
ANR	5625241	PrimaryExpression	1		5622136	1					
ANR	5625242	ExpressionStatement	"buf = sdb_array_get ( s , p , i , NULL )"	696:5:15156:15191	5622136	1	True				
ANR	5625243	AssignmentExpression	"buf = sdb_array_get ( s , p , i , NULL )"		5622136	0		=			
ANR	5625244	Identifier	buf		5622136	0					
ANR	5625245	CallExpression	"sdb_array_get ( s , p , i , NULL )"		5622136	1					
ANR	5625246	Callee	sdb_array_get		5622136	0					
ANR	5625247	Identifier	sdb_array_get		5622136	0					
ANR	5625248	ArgumentList	s		5622136	1					
ANR	5625249	Argument	s		5622136	0					
ANR	5625250	Identifier	s		5622136	0					
ANR	5625251	Argument	p		5622136	1					
ANR	5625252	Identifier	p		5622136	0					
ANR	5625253	Argument	i		5622136	2					
ANR	5625254	Identifier	i		5622136	0					
ANR	5625255	Argument	NULL		5622136	3					
ANR	5625256	Identifier	NULL		5622136	0					
ANR	5625257	IfStatement	if ( buf )		5622136	2					
ANR	5625258	Condition	buf	697:9:15202:15204	5622136	0	True				
ANR	5625259	Identifier	buf		5622136	0					
ANR	5625260	CompoundStatement		532:14:11668:11668	5622136	1					
ANR	5625261	ExpressionStatement	bufset = 1	698:6:15215:15225	5622136	0	True				
ANR	5625262	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5625263	Identifier	bufset		5622136	0					
ANR	5625264	PrimaryExpression	1		5622136	1					
ANR	5625265	ExpressionStatement	len = strlen ( buf ) + 1	699:6:15233:15254	5622136	1	True				
ANR	5625266	AssignmentExpression	len = strlen ( buf ) + 1		5622136	0		=			
ANR	5625267	Identifier	len		5622136	0					
ANR	5625268	AdditiveExpression	strlen ( buf ) + 1		5622136	1		+			
ANR	5625269	CallExpression	strlen ( buf )		5622136	0					
ANR	5625270	Callee	strlen		5622136	0					
ANR	5625271	Identifier	strlen		5622136	0					
ANR	5625272	ArgumentList	buf		5622136	1					
ANR	5625273	Argument	buf		5622136	0					
ANR	5625274	Identifier	buf		5622136	0					
ANR	5625275	PrimaryExpression	1		5622136	1					
ANR	5625276	IfStatement	if ( encode )		5622136	3					
ANR	5625277	Condition	encode	701:9:15272:15277	5622136	0	True				
ANR	5625278	Identifier	encode		5622136	0					
ANR	5625279	CompoundStatement		537:6:11749:11793	5622136	1					
ANR	5625280	IdentifierDeclStatement	"char * newbuf = ( void * ) sdb_decode ( buf , NULL ) ;"	702:6:15288:15332	5622136	0	True				
ANR	5625281	IdentifierDecl	"* newbuf = ( void * ) sdb_decode ( buf , NULL )"		5622136	0					
ANR	5625282	IdentifierDeclType	char *		5622136	0					
ANR	5625283	Identifier	newbuf		5622136	1					
ANR	5625284	AssignmentExpression	"* newbuf = ( void * ) sdb_decode ( buf , NULL )"		5622136	2		=			
ANR	5625285	Identifier	newbuf		5622136	0					
ANR	5625286	CastExpression	"( void * ) sdb_decode ( buf , NULL )"		5622136	1					
ANR	5625287	CastTarget	void *		5622136	0					
ANR	5625288	CallExpression	"sdb_decode ( buf , NULL )"		5622136	1					
ANR	5625289	Callee	sdb_decode		5622136	0					
ANR	5625290	Identifier	sdb_decode		5622136	0					
ANR	5625291	ArgumentList	buf		5622136	1					
ANR	5625292	Argument	buf		5622136	0					
ANR	5625293	Identifier	buf		5622136	0					
ANR	5625294	Argument	NULL		5622136	1					
ANR	5625295	Identifier	NULL		5622136	0					
ANR	5625296	IfStatement	if ( newbuf )		5622136	1					
ANR	5625297	Condition	newbuf	703:10:15344:15349	5622136	0	True				
ANR	5625298	Identifier	newbuf		5622136	0					
ANR	5625299	CompoundStatement		538:18:11813:11813	5622136	1					
ANR	5625300	ExpressionStatement	free ( buf )	704:7:15361:15371	5622136	0	True				
ANR	5625301	CallExpression	free ( buf )		5622136	0					
ANR	5625302	Callee	free		5622136	0					
ANR	5625303	Identifier	free		5622136	0					
ANR	5625304	ArgumentList	buf		5622136	1					
ANR	5625305	Argument	buf		5622136	0					
ANR	5625306	Identifier	buf		5622136	0					
ANR	5625307	ExpressionStatement	buf = newbuf	705:7:15380:15392	5622136	1	True				
ANR	5625308	AssignmentExpression	buf = newbuf		5622136	0		=			
ANR	5625309	Identifier	buf		5622136	0					
ANR	5625310	Identifier	newbuf		5622136	1					
ANR	5625311	ExpressionStatement	len = strlen ( buf ) + 1	706:7:15401:15422	5622136	2	True				
ANR	5625312	AssignmentExpression	len = strlen ( buf ) + 1		5622136	0		=			
ANR	5625313	Identifier	len		5622136	0					
ANR	5625314	AdditiveExpression	strlen ( buf ) + 1		5622136	1		+			
ANR	5625315	CallExpression	strlen ( buf )		5622136	0					
ANR	5625316	Callee	strlen		5622136	0					
ANR	5625317	Identifier	strlen		5622136	0					
ANR	5625318	ArgumentList	buf		5622136	1					
ANR	5625319	Argument	buf		5622136	0					
ANR	5625320	Identifier	buf		5622136	0					
ANR	5625321	PrimaryExpression	1		5622136	1					
ANR	5625322	ExpressionStatement	out_concat ( buf )	709:5:15444:15460	5622136	4	True				
ANR	5625323	CallExpression	out_concat ( buf )		5622136	0					
ANR	5625324	Callee	out_concat		5622136	0					
ANR	5625325	Identifier	out_concat		5622136	0					
ANR	5625326	ArgumentList	buf		5622136	1					
ANR	5625327	Argument	buf		5622136	0					
ANR	5625328	Identifier	buf		5622136	0					
ANR	5625329	ElseStatement	else		5622136	0					
ANR	5625330	CompoundStatement		545:11:11934:11934	5622136	0					
ANR	5625331	IfStatement	if ( ! sval )		5622136	0					
ANR	5625332	Condition	! sval	711:9:15484:15488	5622136	0	True				
ANR	5625333	UnaryOperationExpression	! sval		5622136	0					
ANR	5625334	UnaryOperator	!		5622136	0					
ANR	5625335	Identifier	sval		5622136	1					
ANR	5625336	CompoundStatement		546:16:11952:11952	5622136	1					
ANR	5625337	GotoStatement	goto fail ;	712:6:15499:15508	5622136	0	True				
ANR	5625338	Identifier	fail		5622136	0					
ANR	5625339	ExpressionStatement	wl = strlen ( sval )	714:5:15522:15540	5622136	1	True				
ANR	5625340	AssignmentExpression	wl = strlen ( sval )		5622136	0		=			
ANR	5625341	Identifier	wl		5622136	0					
ANR	5625342	CallExpression	strlen ( sval )		5622136	1					
ANR	5625343	Callee	strlen		5622136	0					
ANR	5625344	Identifier	strlen		5622136	0					
ANR	5625345	ArgumentList	sval		5622136	1					
ANR	5625346	Argument	sval		5622136	0					
ANR	5625347	Identifier	sval		5622136	0					
ANR	5625348	IfStatement	if ( ! buf || wl >= len )		5622136	2					
ANR	5625349	Condition	! buf || wl >= len	715:9:15551:15567	5622136	0	True				
ANR	5625350	OrExpression	! buf || wl >= len		5622136	0		||			
ANR	5625351	UnaryOperationExpression	! buf		5622136	0					
ANR	5625352	UnaryOperator	!		5622136	0					
ANR	5625353	Identifier	buf		5622136	1					
ANR	5625354	RelationalExpression	wl >= len		5622136	1		>=			
ANR	5625355	Identifier	wl		5622136	0					
ANR	5625356	Identifier	len		5622136	1					
ANR	5625357	CompoundStatement		550:28:12031:12031	5622136	1					
ANR	5625358	ExpressionStatement	buf = malloc ( wl + 2 )	716:6:15578:15599	5622136	0	True				
ANR	5625359	AssignmentExpression	buf = malloc ( wl + 2 )		5622136	0		=			
ANR	5625360	Identifier	buf		5622136	0					
ANR	5625361	CallExpression	malloc ( wl + 2 )		5622136	1					
ANR	5625362	Callee	malloc		5622136	0					
ANR	5625363	Identifier	malloc		5622136	0					
ANR	5625364	ArgumentList	wl + 2		5622136	1					
ANR	5625365	Argument	wl + 2		5622136	0					
ANR	5625366	AdditiveExpression	wl + 2		5622136	0		+			
ANR	5625367	Identifier	wl		5622136	0					
ANR	5625368	PrimaryExpression	2		5622136	1					
ANR	5625369	IfStatement	if ( ! buf )		5622136	1					
ANR	5625370	Condition	! buf	717:10:15611:15614	5622136	0	True				
ANR	5625371	UnaryOperationExpression	! buf		5622136	0					
ANR	5625372	UnaryOperator	!		5622136	0					
ANR	5625373	Identifier	buf		5622136	1					
ANR	5625374	CompoundStatement		552:16:12078:12078	5622136	1					
ANR	5625375	ExpressionStatement	free ( out -> buf )	718:7:15626:15641	5622136	0	True				
ANR	5625376	CallExpression	free ( out -> buf )		5622136	0					
ANR	5625377	Callee	free		5622136	0					
ANR	5625378	Identifier	free		5622136	0					
ANR	5625379	ArgumentList	out -> buf		5622136	1					
ANR	5625380	Argument	out -> buf		5622136	0					
ANR	5625381	PtrMemberAccess	out -> buf		5622136	0					
ANR	5625382	Identifier	out		5622136	0					
ANR	5625383	Identifier	buf		5622136	1					
ANR	5625384	ExpressionStatement	out -> buf = NULL	719:7:15650:15665	5622136	1	True				
ANR	5625385	AssignmentExpression	out -> buf = NULL		5622136	0		=			
ANR	5625386	PtrMemberAccess	out -> buf		5622136	0					
ANR	5625387	Identifier	out		5622136	0					
ANR	5625388	Identifier	buf		5622136	1					
ANR	5625389	Identifier	NULL		5622136	1					
ANR	5625390	GotoStatement	goto fail ;	720:7:15674:15683	5622136	2	True				
ANR	5625391	Identifier	fail		5622136	0					
ANR	5625392	ExpressionStatement	bufset = 1	722:6:15699:15709	5622136	2	True				
ANR	5625393	AssignmentExpression	bufset = 1		5622136	0		=			
ANR	5625394	Identifier	bufset		5622136	0					
ANR	5625395	PrimaryExpression	1		5622136	1					
ANR	5625396	ExpressionStatement	len = wl + 2	723:6:15717:15729	5622136	3	True				
ANR	5625397	AssignmentExpression	len = wl + 2		5622136	0		=			
ANR	5625398	Identifier	len		5622136	0					
ANR	5625399	AdditiveExpression	wl + 2		5622136	1		+			
ANR	5625400	Identifier	wl		5622136	0					
ANR	5625401	PrimaryExpression	2		5622136	1					
ANR	5625402	ForStatement	for ( i = 0 ; sval [ i ] ; i ++ )		5622136	3					
ANR	5625403	ForInit	i = 0 ;	725:10:15748:15753	5622136	0	True				
ANR	5625404	AssignmentExpression	i = 0		5622136	0		=			
ANR	5625405	Identifier	i		5622136	0					
ANR	5625406	PrimaryExpression	0		5622136	1					
ANR	5625407	Condition	sval [ i ]	725:17:15755:15761	5622136	1	True				
ANR	5625408	ArrayIndexing	sval [ i ]		5622136	0					
ANR	5625409	Identifier	sval		5622136	0					
ANR	5625410	Identifier	i		5622136	1					
ANR	5625411	PostIncDecOperationExpression	i ++	725:26:15764:15766	5622136	2	True				
ANR	5625412	Identifier	i		5622136	0					
ANR	5625413	IncDec	++		5622136	1					
ANR	5625414	CompoundStatement		560:31:12230:12230	5622136	3					
ANR	5625415	IfStatement	if ( sval [ i + 1 ] )		5622136	0					
ANR	5625416	Condition	sval [ i + 1 ]	726:10:15781:15791	5622136	0	True				
ANR	5625417	ArrayIndexing	sval [ i + 1 ]		5622136	0					
ANR	5625418	Identifier	sval		5622136	0					
ANR	5625419	AdditiveExpression	i + 1		5622136	1		+			
ANR	5625420	Identifier	i		5622136	0					
ANR	5625421	PrimaryExpression	1		5622136	1					
ANR	5625422	CompoundStatement		561:23:12255:12255	5622136	1					
ANR	5625423	ExpressionStatement	buf [ i ] = ( sval [ i ] == SDB_RS ) ? '\\n' : sval [ i ]	727:7:15803:15855	5622136	0	True				
ANR	5625424	AssignmentExpression	buf [ i ] = ( sval [ i ] == SDB_RS ) ? '\\n' : sval [ i ]		5622136	0		=			
ANR	5625425	ArrayIndexing	buf [ i ]		5622136	0					
ANR	5625426	Identifier	buf		5622136	0					
ANR	5625427	Identifier	i		5622136	1					
ANR	5625428	ConditionalExpression	( sval [ i ] == SDB_RS ) ? '\\n' : sval [ i ]		5622136	1					
ANR	5625429	Condition	sval [ i ] == SDB_RS		5622136	0					
ANR	5625430	EqualityExpression	sval [ i ] == SDB_RS		5622136	0		==			
ANR	5625431	ArrayIndexing	sval [ i ]		5622136	0					
ANR	5625432	Identifier	sval		5622136	0					
ANR	5625433	Identifier	i		5622136	1					
ANR	5625434	Identifier	SDB_RS		5622136	1					
ANR	5625435	PrimaryExpression	'\\n'		5622136	1					
ANR	5625436	ArrayIndexing	sval [ i ]		5622136	2					
ANR	5625437	Identifier	sval		5622136	0					
ANR	5625438	Identifier	i		5622136	1					
ANR	5625439	ElseStatement	else		5622136	0					
ANR	5625440	CompoundStatement		564:13:12331:12331	5622136	0					
ANR	5625441	ExpressionStatement	buf [ i ] = sval [ i ]	730:7:15879:15895	5622136	0	True				
ANR	5625442	AssignmentExpression	buf [ i ] = sval [ i ]		5622136	0		=			
ANR	5625443	ArrayIndexing	buf [ i ]		5622136	0					
ANR	5625444	Identifier	buf		5622136	0					
ANR	5625445	Identifier	i		5622136	1					
ANR	5625446	ArrayIndexing	sval [ i ]		5622136	1					
ANR	5625447	Identifier	sval		5622136	0					
ANR	5625448	Identifier	i		5622136	1					
ANR	5625449	ExpressionStatement	buf [ i ] = 0	733:5:15917:15927	5622136	4	True				
ANR	5625450	AssignmentExpression	buf [ i ] = 0		5622136	0		=			
ANR	5625451	ArrayIndexing	buf [ i ]		5622136	0					
ANR	5625452	Identifier	buf		5622136	0					
ANR	5625453	Identifier	i		5622136	1					
ANR	5625454	PrimaryExpression	0		5622136	1					
ANR	5625455	IfStatement	if ( encode )		5622136	5					
ANR	5625456	Condition	encode	734:9:15938:15943	5622136	0	True				
ANR	5625457	Identifier	encode		5622136	0					
ANR	5625458	CompoundStatement		570:6:12415:12459	5622136	1					
ANR	5625459	IdentifierDeclStatement	"char * newbuf = ( void * ) sdb_decode ( buf , NULL ) ;"	735:6:15954:15998	5622136	0	True				
ANR	5625460	IdentifierDecl	"* newbuf = ( void * ) sdb_decode ( buf , NULL )"		5622136	0					
ANR	5625461	IdentifierDeclType	char *		5622136	0					
ANR	5625462	Identifier	newbuf		5622136	1					
ANR	5625463	AssignmentExpression	"* newbuf = ( void * ) sdb_decode ( buf , NULL )"		5622136	2		=			
ANR	5625464	Identifier	newbuf		5622136	0					
ANR	5625465	CastExpression	"( void * ) sdb_decode ( buf , NULL )"		5622136	1					
ANR	5625466	CastTarget	void *		5622136	0					
ANR	5625467	CallExpression	"sdb_decode ( buf , NULL )"		5622136	1					
ANR	5625468	Callee	sdb_decode		5622136	0					
ANR	5625469	Identifier	sdb_decode		5622136	0					
ANR	5625470	ArgumentList	buf		5622136	1					
ANR	5625471	Argument	buf		5622136	0					
ANR	5625472	Identifier	buf		5622136	0					
ANR	5625473	Argument	NULL		5622136	1					
ANR	5625474	Identifier	NULL		5622136	0					
ANR	5625475	IfStatement	if ( newbuf )		5622136	1					
ANR	5625476	Condition	newbuf	736:10:16010:16015	5622136	0	True				
ANR	5625477	Identifier	newbuf		5622136	0					
ANR	5625478	CompoundStatement		571:18:12479:12479	5622136	1					
ANR	5625479	IfStatement	if ( bufset )		5622136	0					
ANR	5625480	Condition	bufset	737:11:16031:16036	5622136	0	True				
ANR	5625481	Identifier	bufset		5622136	0					
ANR	5625482	CompoundStatement		572:19:12500:12500	5622136	1					
ANR	5625483	ExpressionStatement	free ( buf )	738:8:16049:16059	5622136	0	True				
ANR	5625484	CallExpression	free ( buf )		5622136	0					
ANR	5625485	Callee	free		5622136	0					
ANR	5625486	Identifier	free		5622136	0					
ANR	5625487	ArgumentList	buf		5622136	1					
ANR	5625488	Argument	buf		5622136	0					
ANR	5625489	Identifier	buf		5622136	0					
ANR	5625490	ExpressionStatement	buf = newbuf	740:7:16077:16089	5622136	1	True				
ANR	5625491	AssignmentExpression	buf = newbuf		5622136	0		=			
ANR	5625492	Identifier	buf		5622136	0					
ANR	5625493	Identifier	newbuf		5622136	1					
ANR	5625494	ExpressionStatement	len = strlen ( buf ) + 1	741:7:16098:16120	5622136	2	True				
ANR	5625495	AssignmentExpression	len = strlen ( buf ) + 1		5622136	0		=			
ANR	5625496	Identifier	len		5622136	0					
ANR	5625497	AdditiveExpression	strlen ( buf ) + 1		5622136	1		+			
ANR	5625498	CallExpression	strlen ( buf )		5622136	0					
ANR	5625499	Callee	strlen		5622136	0					
ANR	5625500	Identifier	strlen		5622136	0					
ANR	5625501	ArgumentList	buf		5622136	1					
ANR	5625502	Argument	buf		5622136	0					
ANR	5625503	Identifier	buf		5622136	0					
ANR	5625504	PrimaryExpression	1		5622136	1					
ANR	5625505	ExpressionStatement	out_concat ( buf )	744:5:16142:16158	5622136	6	True				
ANR	5625506	CallExpression	out_concat ( buf )		5622136	0					
ANR	5625507	Callee	out_concat		5622136	0					
ANR	5625508	Identifier	out_concat		5622136	0					
ANR	5625509	ArgumentList	buf		5622136	1					
ANR	5625510	Argument	buf		5622136	0					
ANR	5625511	Identifier	buf		5622136	0					
ANR	5625512	ElseStatement	else		5622136	0					
ANR	5625513	CompoundStatement		583:8:12644:12644	5622136	0					
ANR	5625514	IfStatement	if ( eq )		5622136	0					
ANR	5625515	Condition	eq	749:6:16191:16192	5622136	0	True				
ANR	5625516	Identifier	eq		5622136	0					
ANR	5625517	CompoundStatement		584:10:12656:12656	5622136	1					
ANR	5625518	IfStatement	if ( encode )		5622136	0					
ANR	5625519	Condition	encode	752:7:16257:16262	5622136	0	True				
ANR	5625520	Identifier	encode		5622136	0					
ANR	5625521	CompoundStatement		587:15:12726:12726	5622136	1					
ANR	5625522	ExpressionStatement	"val = sdb_encode ( ( const ut8 * ) val , - 1 )"	753:4:16271:16309	5622136	0	True				
ANR	5625523	AssignmentExpression	"val = sdb_encode ( ( const ut8 * ) val , - 1 )"		5622136	0		=			
ANR	5625524	Identifier	val		5622136	0					
ANR	5625525	CallExpression	"sdb_encode ( ( const ut8 * ) val , - 1 )"		5622136	1					
ANR	5625526	Callee	sdb_encode		5622136	0					
ANR	5625527	Identifier	sdb_encode		5622136	0					
ANR	5625528	ArgumentList	( const ut8 * ) val		5622136	1					
ANR	5625529	Argument	( const ut8 * ) val		5622136	0					
ANR	5625530	CastExpression	( const ut8 * ) val		5622136	0					
ANR	5625531	CastTarget	const ut8 *		5622136	0					
ANR	5625532	Identifier	val		5622136	1					
ANR	5625533	Argument	- 1		5622136	1					
ANR	5625534	UnaryOperationExpression	- 1		5622136	0					
ANR	5625535	UnaryOperator	-		5622136	0					
ANR	5625536	PrimaryExpression	1		5622136	1					
ANR	5625537	IfStatement	if ( json > eq )		5622136	1					
ANR	5625538	Condition	json > eq	755:7:16323:16331	5622136	0	True				
ANR	5625539	RelationalExpression	json > eq		5622136	0		>			
ANR	5625540	Identifier	json		5622136	0					
ANR	5625541	Identifier	eq		5622136	1					
ANR	5625542	CompoundStatement		590:18:12795:12795	5622136	1					
ANR	5625543	ExpressionStatement	json = NULL	756:4:16340:16351	5622136	0	True				
ANR	5625544	AssignmentExpression	json = NULL		5622136	0		=			
ANR	5625545	Identifier	json		5622136	0					
ANR	5625546	Identifier	NULL		5622136	1					
ANR	5625547	IfStatement	if ( json )		5622136	2					
ANR	5625548	Condition	json	759:7:16366:16369	5622136	0	True				
ANR	5625549	Identifier	json		5622136	0					
ANR	5625550	CompoundStatement		594:13:12833:12833	5622136	1					
ANR	5625551	ExpressionStatement	* json ++ = 0	760:4:16378:16389	5622136	0	True				
ANR	5625552	AssignmentExpression	* json ++ = 0		5622136	0		=			
ANR	5625553	UnaryOperationExpression	* json ++		5622136	0					
ANR	5625554	UnaryOperator	*		5622136	0					
ANR	5625555	PostIncDecOperationExpression	json ++		5622136	1					
ANR	5625556	Identifier	json		5622136	0					
ANR	5625557	IncDec	++		5622136	1					
ANR	5625558	PrimaryExpression	0		5622136	1					
ANR	5625559	ExpressionStatement	"ok = sdb_json_set ( s , cmd , json , val , 0 )"	761:4:16395:16435	5622136	1	True				
ANR	5625560	AssignmentExpression	"ok = sdb_json_set ( s , cmd , json , val , 0 )"		5622136	0		=			
ANR	5625561	Identifier	ok		5622136	0					
ANR	5625562	CallExpression	"sdb_json_set ( s , cmd , json , val , 0 )"		5622136	1					
ANR	5625563	Callee	sdb_json_set		5622136	0					
ANR	5625564	Identifier	sdb_json_set		5622136	0					
ANR	5625565	ArgumentList	s		5622136	1					
ANR	5625566	Argument	s		5622136	0					
ANR	5625567	Identifier	s		5622136	0					
ANR	5625568	Argument	cmd		5622136	1					
ANR	5625569	Identifier	cmd		5622136	0					
ANR	5625570	Argument	json		5622136	2					
ANR	5625571	Identifier	json		5622136	0					
ANR	5625572	Argument	val		5622136	3					
ANR	5625573	Identifier	val		5622136	0					
ANR	5625574	Argument	0		5622136	4					
ANR	5625575	PrimaryExpression	0		5622136	0					
ANR	5625576	ElseStatement	else		5622136	0					
ANR	5625577	CompoundStatement		601:4:12969:12993	5622136	0					
ANR	5625578	WhileStatement	while ( * val && isspace ( * val ) )		5622136	0					
ANR	5625579	Condition	* val && isspace ( * val )	763:11:16460:16481	5622136	0	True				
ANR	5625580	AndExpression	* val && isspace ( * val )		5622136	0		&&			
ANR	5625581	UnaryOperationExpression	* val		5622136	0					
ANR	5625582	UnaryOperator	*		5622136	0					
ANR	5625583	Identifier	val		5622136	1					
ANR	5625584	CallExpression	isspace ( * val )		5622136	1					
ANR	5625585	Callee	isspace		5622136	0					
ANR	5625586	Identifier	isspace		5622136	0					
ANR	5625587	ArgumentList	* val		5622136	1					
ANR	5625588	Argument	* val		5622136	0					
ANR	5625589	UnaryOperationExpression	* val		5622136	0					
ANR	5625590	UnaryOperator	*		5622136	0					
ANR	5625591	Identifier	val		5622136	1					
ANR	5625592	CompoundStatement		598:35:12945:12945	5622136	1					
ANR	5625593	ExpressionStatement	val ++	764:5:16491:16496	5622136	0	True				
ANR	5625594	PostIncDecOperationExpression	val ++		5622136	0					
ANR	5625595	Identifier	val		5622136	0					
ANR	5625596	IncDec	++		5622136	1					
ANR	5625597	IdentifierDeclStatement	int i = strlen ( cmd ) - 1 ;	766:4:16508:16532	5622136	1	True				
ANR	5625598	IdentifierDecl	i = strlen ( cmd ) - 1		5622136	0					
ANR	5625599	IdentifierDeclType	int		5622136	0					
ANR	5625600	Identifier	i		5622136	1					
ANR	5625601	AssignmentExpression	i = strlen ( cmd ) - 1		5622136	2		=			
ANR	5625602	Identifier	i		5622136	0					
ANR	5625603	AdditiveExpression	strlen ( cmd ) - 1		5622136	1		-			
ANR	5625604	CallExpression	strlen ( cmd )		5622136	0					
ANR	5625605	Callee	strlen		5622136	0					
ANR	5625606	Identifier	strlen		5622136	0					
ANR	5625607	ArgumentList	cmd		5622136	1					
ANR	5625608	Argument	cmd		5622136	0					
ANR	5625609	Identifier	cmd		5622136	0					
ANR	5625610	PrimaryExpression	1		5622136	1					
ANR	5625611	WhileStatement	while ( i >= 0 && isspace ( cmd [ i ] ) )		5622136	2					
ANR	5625612	Condition	i >= 0 && isspace ( cmd [ i ] )	767:11:16545:16570	5622136	0	True				
ANR	5625613	AndExpression	i >= 0 && isspace ( cmd [ i ] )		5622136	0		&&			
ANR	5625614	RelationalExpression	i >= 0		5622136	0		>=			
ANR	5625615	Identifier	i		5622136	0					
ANR	5625616	PrimaryExpression	0		5622136	1					
ANR	5625617	CallExpression	isspace ( cmd [ i ] )		5622136	1					
ANR	5625618	Callee	isspace		5622136	0					
ANR	5625619	Identifier	isspace		5622136	0					
ANR	5625620	ArgumentList	cmd [ i ]		5622136	1					
ANR	5625621	Argument	cmd [ i ]		5622136	0					
ANR	5625622	ArrayIndexing	cmd [ i ]		5622136	0					
ANR	5625623	Identifier	cmd		5622136	0					
ANR	5625624	Identifier	i		5622136	1					
ANR	5625625	CompoundStatement		602:39:13034:13034	5622136	1					
ANR	5625626	ExpressionStatement	cmd [ i ] = '\\0'	768:5:16580:16593	5622136	0	True				
ANR	5625627	AssignmentExpression	cmd [ i ] = '\\0'		5622136	0		=			
ANR	5625628	ArrayIndexing	cmd [ i ]		5622136	0					
ANR	5625629	Identifier	cmd		5622136	0					
ANR	5625630	Identifier	i		5622136	1					
ANR	5625631	PrimaryExpression	'\\0'		5622136	1					
ANR	5625632	ExpressionStatement	i --	769:5:16600:16603	5622136	1	True				
ANR	5625633	PostIncDecOperationExpression	i --		5622136	0					
ANR	5625634	Identifier	i		5622136	0					
ANR	5625635	IncDec	--		5622136	1					
ANR	5625636	ExpressionStatement	"ok = sdb_set ( s , cmd , val , 0 )"	771:4:16615:16644	5622136	3	True				
ANR	5625637	AssignmentExpression	"ok = sdb_set ( s , cmd , val , 0 )"		5622136	0		=			
ANR	5625638	Identifier	ok		5622136	0					
ANR	5625639	CallExpression	"sdb_set ( s , cmd , val , 0 )"		5622136	1					
ANR	5625640	Callee	sdb_set		5622136	0					
ANR	5625641	Identifier	sdb_set		5622136	0					
ANR	5625642	ArgumentList	s		5622136	1					
ANR	5625643	Argument	s		5622136	0					
ANR	5625644	Identifier	s		5622136	0					
ANR	5625645	Argument	cmd		5622136	1					
ANR	5625646	Identifier	cmd		5622136	0					
ANR	5625647	Argument	val		5622136	2					
ANR	5625648	Identifier	val		5622136	0					
ANR	5625649	Argument	0		5622136	3					
ANR	5625650	PrimaryExpression	0		5622136	0					
ANR	5625651	IfStatement	if ( encode )		5622136	3					
ANR	5625652	Condition	encode	773:7:16658:16663	5622136	0	True				
ANR	5625653	Identifier	encode		5622136	0					
ANR	5625654	CompoundStatement		608:15:13127:13127	5622136	1					
ANR	5625655	ExpressionStatement	free ( ( void * ) val )	774:4:16672:16689	5622136	0	True				
ANR	5625656	CallExpression	free ( ( void * ) val )		5622136	0					
ANR	5625657	Callee	free		5622136	0					
ANR	5625658	Identifier	free		5622136	0					
ANR	5625659	ArgumentList	( void * ) val		5622136	1					
ANR	5625660	Argument	( void * ) val		5622136	0					
ANR	5625661	CastExpression	( void * ) val		5622136	0					
ANR	5625662	CastTarget	void *		5622136	0					
ANR	5625663	Identifier	val		5622136	1					
ANR	5625664	ExpressionStatement	val = NULL	775:4:16695:16705	5622136	1	True				
ANR	5625665	AssignmentExpression	val = NULL		5622136	0		=			
ANR	5625666	Identifier	val		5622136	0					
ANR	5625667	Identifier	NULL		5622136	1					
ANR	5625668	IfStatement	if ( ok && buf )		5622136	4					
ANR	5625669	Condition	ok && buf	777:7:16719:16727	5622136	0	True				
ANR	5625670	AndExpression	ok && buf		5622136	0		&&			
ANR	5625671	Identifier	ok		5622136	0					
ANR	5625672	Identifier	buf		5622136	1					
ANR	5625673	CompoundStatement		612:18:13191:13191	5622136	1					
ANR	5625674	ExpressionStatement	* buf = 0	778:4:16736:16744	5622136	0	True				
ANR	5625675	AssignmentExpression	* buf = 0		5622136	0		=			
ANR	5625676	UnaryOperationExpression	* buf		5622136	0					
ANR	5625677	UnaryOperator	*		5622136	0					
ANR	5625678	Identifier	buf		5622136	1					
ANR	5625679	PrimaryExpression	0		5622136	1					
ANR	5625680	ElseStatement	else		5622136	0					
ANR	5625681	CompoundStatement		615:9:13221:13221	5622136	0					
ANR	5625682	IfStatement	if ( json )		5622136	0					
ANR	5625683	Condition	json	783:7:16810:16813	5622136	0	True				
ANR	5625684	Identifier	json		5622136	0					
ANR	5625685	CompoundStatement		618:13:13277:13277	5622136	1					
ANR	5625686	ExpressionStatement	* json ++ = 0	784:4:16822:16833	5622136	0	True				
ANR	5625687	AssignmentExpression	* json ++ = 0		5622136	0		=			
ANR	5625688	UnaryOperationExpression	* json ++		5622136	0					
ANR	5625689	UnaryOperator	*		5622136	0					
ANR	5625690	PostIncDecOperationExpression	json ++		5622136	1					
ANR	5625691	Identifier	json		5622136	0					
ANR	5625692	IncDec	++		5622136	1					
ANR	5625693	PrimaryExpression	0		5622136	1					
ANR	5625694	IfStatement	if ( * json )		5622136	1					
ANR	5625695	Condition	* json	785:8:16843:16847	5622136	0	True				
ANR	5625696	UnaryOperationExpression	* json		5622136	0					
ANR	5625697	UnaryOperator	*		5622136	0					
ANR	5625698	Identifier	json		5622136	1					
ANR	5625699	CompoundStatement		620:15:13311:13311	5622136	1					
ANR	5625700	IfStatement	"if ( ( tmp = sdb_json_get ( s , cmd , json , 0 ) ) )"		5622136	0					
ANR	5625701	Condition	"tmp = sdb_json_get ( s , cmd , json , 0 )"	787:9:16904:16941	5622136	0	True				
ANR	5625702	AssignmentExpression	"tmp = sdb_json_get ( s , cmd , json , 0 )"		5622136	0		=			
ANR	5625703	Identifier	tmp		5622136	0					
ANR	5625704	CallExpression	"sdb_json_get ( s , cmd , json , 0 )"		5622136	1					
ANR	5625705	Callee	sdb_json_get		5622136	0					
ANR	5625706	Identifier	sdb_json_get		5622136	0					
ANR	5625707	ArgumentList	s		5622136	1					
ANR	5625708	Argument	s		5622136	0					
ANR	5625709	Identifier	s		5622136	0					
ANR	5625710	Argument	cmd		5622136	1					
ANR	5625711	Identifier	cmd		5622136	0					
ANR	5625712	Argument	json		5622136	2					
ANR	5625713	Identifier	json		5622136	0					
ANR	5625714	Argument	0		5622136	3					
ANR	5625715	PrimaryExpression	0		5622136	0					
ANR	5625716	CompoundStatement		622:49:13405:13405	5622136	1					
ANR	5625717	IfStatement	if ( encode )		5622136	0					
ANR	5625718	Condition	encode	788:10:16956:16961	5622136	0	True				
ANR	5625719	Identifier	encode		5622136	0					
ANR	5625720	CompoundStatement		624:7:13434:13478	5622136	1					
ANR	5625721	IdentifierDeclStatement	"char * newtmp = ( void * ) sdb_decode ( tmp , NULL ) ;"	789:7:16973:17017	5622136	0	True				
ANR	5625722	IdentifierDecl	"* newtmp = ( void * ) sdb_decode ( tmp , NULL )"		5622136	0					
ANR	5625723	IdentifierDeclType	char *		5622136	0					
ANR	5625724	Identifier	newtmp		5622136	1					
ANR	5625725	AssignmentExpression	"* newtmp = ( void * ) sdb_decode ( tmp , NULL )"		5622136	2		=			
ANR	5625726	Identifier	newtmp		5622136	0					
ANR	5625727	CastExpression	"( void * ) sdb_decode ( tmp , NULL )"		5622136	1					
ANR	5625728	CastTarget	void *		5622136	0					
ANR	5625729	CallExpression	"sdb_decode ( tmp , NULL )"		5622136	1					
ANR	5625730	Callee	sdb_decode		5622136	0					
ANR	5625731	Identifier	sdb_decode		5622136	0					
ANR	5625732	ArgumentList	tmp		5622136	1					
ANR	5625733	Argument	tmp		5622136	0					
ANR	5625734	Identifier	tmp		5622136	0					
ANR	5625735	Argument	NULL		5622136	1					
ANR	5625736	Identifier	NULL		5622136	0					
ANR	5625737	IfStatement	if ( ! newtmp )		5622136	1					
ANR	5625738	Condition	! newtmp	790:11:17030:17036	5622136	0	True				
ANR	5625739	UnaryOperationExpression	! newtmp		5622136	0					
ANR	5625740	UnaryOperator	!		5622136	0					
ANR	5625741	Identifier	newtmp		5622136	1					
ANR	5625742	GotoStatement	goto fail ;	791:8:17047:17056	5622136	1	True				
ANR	5625743	Identifier	fail		5622136	0					
ANR	5625744	ExpressionStatement	free ( tmp )	792:7:17065:17075	5622136	2	True				
ANR	5625745	CallExpression	free ( tmp )		5622136	0					
ANR	5625746	Callee	free		5622136	0					
ANR	5625747	Identifier	free		5622136	0					
ANR	5625748	ArgumentList	tmp		5622136	1					
ANR	5625749	Argument	tmp		5622136	0					
ANR	5625750	Identifier	tmp		5622136	0					
ANR	5625751	ExpressionStatement	tmp = newtmp	793:7:17084:17096	5622136	3	True				
ANR	5625752	AssignmentExpression	tmp = newtmp		5622136	0		=			
ANR	5625753	Identifier	tmp		5622136	0					
ANR	5625754	Identifier	newtmp		5622136	1					
ANR	5625755	ExpressionStatement	out_concat ( tmp )	795:6:17112:17128	5622136	1	True				
ANR	5625756	CallExpression	out_concat ( tmp )		5622136	0					
ANR	5625757	Callee	out_concat		5622136	0					
ANR	5625758	Identifier	out_concat		5622136	0					
ANR	5625759	ArgumentList	tmp		5622136	1					
ANR	5625760	Argument	tmp		5622136	0					
ANR	5625761	Identifier	tmp		5622136	0					
ANR	5625762	ExpressionStatement	free ( tmp )	796:6:17136:17146	5622136	2	True				
ANR	5625763	CallExpression	free ( tmp )		5622136	0					
ANR	5625764	Callee	free		5622136	0					
ANR	5625765	Identifier	free		5622136	0					
ANR	5625766	ArgumentList	tmp		5622136	1					
ANR	5625767	Argument	tmp		5622136	0					
ANR	5625768	Identifier	tmp		5622136	0					
ANR	5625769	ElseStatement	else		5622136	0					
ANR	5625770	CompoundStatement		635:5:13673:13732	5622136	0					
ANR	5625771	IdentifierDeclStatement	"char * o = sdb_json_indent ( sdb_const_get ( s , cmd , 0 ) , ""  "" ) ;"	800:5:17212:17271	5622136	0	True				
ANR	5625772	IdentifierDecl	"* o = sdb_json_indent ( sdb_const_get ( s , cmd , 0 ) , ""  "" )"		5622136	0					
ANR	5625773	IdentifierDeclType	char *		5622136	0					
ANR	5625774	Identifier	o		5622136	1					
ANR	5625775	AssignmentExpression	"* o = sdb_json_indent ( sdb_const_get ( s , cmd , 0 ) , ""  "" )"		5622136	2		=			
ANR	5625776	Identifier	o		5622136	0					
ANR	5625777	CallExpression	"sdb_json_indent ( sdb_const_get ( s , cmd , 0 ) , ""  "" )"		5622136	1					
ANR	5625778	Callee	sdb_json_indent		5622136	0					
ANR	5625779	Identifier	sdb_json_indent		5622136	0					
ANR	5625780	ArgumentList	"sdb_const_get ( s , cmd , 0 )"		5622136	1					
ANR	5625781	Argument	"sdb_const_get ( s , cmd , 0 )"		5622136	0					
ANR	5625782	CallExpression	"sdb_const_get ( s , cmd , 0 )"		5622136	0					
ANR	5625783	Callee	sdb_const_get		5622136	0					
ANR	5625784	Identifier	sdb_const_get		5622136	0					
ANR	5625785	ArgumentList	s		5622136	1					
ANR	5625786	Argument	s		5622136	0					
ANR	5625787	Identifier	s		5622136	0					
ANR	5625788	Argument	cmd		5622136	1					
ANR	5625789	Identifier	cmd		5622136	0					
ANR	5625790	Argument	0		5622136	2					
ANR	5625791	PrimaryExpression	0		5622136	0					
ANR	5625792	Argument	"""  """		5622136	1					
ANR	5625793	PrimaryExpression	"""  """		5622136	0					
ANR	5625794	ExpressionStatement	out_concat ( o )	801:5:17278:17292	5622136	1	True				
ANR	5625795	CallExpression	out_concat ( o )		5622136	0					
ANR	5625796	Callee	out_concat		5622136	0					
ANR	5625797	Identifier	out_concat		5622136	0					
ANR	5625798	ArgumentList	o		5622136	1					
ANR	5625799	Argument	o		5622136	0					
ANR	5625800	Identifier	o		5622136	0					
ANR	5625801	ExpressionStatement	free ( o )	802:5:17299:17307	5622136	2	True				
ANR	5625802	CallExpression	free ( o )		5622136	0					
ANR	5625803	Callee	free		5622136	0					
ANR	5625804	Identifier	free		5622136	0					
ANR	5625805	ArgumentList	o		5622136	1					
ANR	5625806	Argument	o		5622136	0					
ANR	5625807	Identifier	o		5622136	0					
ANR	5625808	ElseStatement	else		5622136	0					
ANR	5625809	CompoundStatement		639:10:13786:13786	5622136	0					
ANR	5625810	IfStatement	"if ( ( q = sdb_const_get ( s , cmd , 0 ) ) )"		5622136	0					
ANR	5625811	Condition	"q = sdb_const_get ( s , cmd , 0 )"	806:8:17349:17379	5622136	0	True				
ANR	5625812	AssignmentExpression	"q = sdb_const_get ( s , cmd , 0 )"		5622136	0		=			
ANR	5625813	Identifier	q		5622136	0					
ANR	5625814	CallExpression	"sdb_const_get ( s , cmd , 0 )"		5622136	1					
ANR	5625815	Callee	sdb_const_get		5622136	0					
ANR	5625816	Identifier	sdb_const_get		5622136	0					
ANR	5625817	ArgumentList	s		5622136	1					
ANR	5625818	Argument	s		5622136	0					
ANR	5625819	Identifier	s		5622136	0					
ANR	5625820	Argument	cmd		5622136	1					
ANR	5625821	Identifier	cmd		5622136	0					
ANR	5625822	Argument	0		5622136	2					
ANR	5625823	PrimaryExpression	0		5622136	0					
ANR	5625824	CompoundStatement		641:41:13843:13843	5622136	1					
ANR	5625825	IfStatement	if ( encode )		5622136	0					
ANR	5625826	Condition	encode	807:9:17393:17398	5622136	0	True				
ANR	5625827	Identifier	encode		5622136	0					
ANR	5625828	CompoundStatement		642:17:13862:13862	5622136	1					
ANR	5625829	ExpressionStatement	"q = ( void * ) sdb_decode ( q , NULL )"	808:6:17409:17440	5622136	0	True				
ANR	5625830	AssignmentExpression	"q = ( void * ) sdb_decode ( q , NULL )"		5622136	0		=			
ANR	5625831	Identifier	q		5622136	0					
ANR	5625832	CastExpression	"( void * ) sdb_decode ( q , NULL )"		5622136	1					
ANR	5625833	CastTarget	void *		5622136	0					
ANR	5625834	CallExpression	"sdb_decode ( q , NULL )"		5622136	1					
ANR	5625835	Callee	sdb_decode		5622136	0					
ANR	5625836	Identifier	sdb_decode		5622136	0					
ANR	5625837	ArgumentList	q		5622136	1					
ANR	5625838	Argument	q		5622136	0					
ANR	5625839	Identifier	q		5622136	0					
ANR	5625840	Argument	NULL		5622136	1					
ANR	5625841	Identifier	NULL		5622136	0					
ANR	5625842	ExpressionStatement	out_concat ( q )	810:5:17454:17468	5622136	1	True				
ANR	5625843	CallExpression	out_concat ( q )		5622136	0					
ANR	5625844	Callee	out_concat		5622136	0					
ANR	5625845	Identifier	out_concat		5622136	0					
ANR	5625846	ArgumentList	q		5622136	1					
ANR	5625847	Argument	q		5622136	0					
ANR	5625848	Identifier	q		5622136	0					
ANR	5625849	IfStatement	if ( encode )		5622136	2					
ANR	5625850	Condition	encode	811:9:17479:17484	5622136	0	True				
ANR	5625851	Identifier	encode		5622136	0					
ANR	5625852	CompoundStatement		646:17:13948:13948	5622136	1					
ANR	5625853	ExpressionStatement	free ( ( void * ) q )	812:6:17495:17510	5622136	0	True				
ANR	5625854	CallExpression	free ( ( void * ) q )		5622136	0					
ANR	5625855	Callee	free		5622136	0					
ANR	5625856	Identifier	free		5622136	0					
ANR	5625857	ArgumentList	( void * ) q		5622136	1					
ANR	5625858	Argument	( void * ) q		5622136	0					
ANR	5625859	CastExpression	( void * ) q		5622136	0					
ANR	5625860	CastTarget	void *		5622136	0					
ANR	5625861	Identifier	q		5622136	1					
ANR	5625862	Label	runNext :	818:0:17537:17544	5622136	34	True				
ANR	5625863	Identifier	runNext		5622136	0					
ANR	5625864	IfStatement	if ( next )		5622136	35					
ANR	5625865	Condition	next	819:5:17551:17554	5622136	0	True				
ANR	5625866	Identifier	next		5622136	0					
ANR	5625867	CompoundStatement		654:11:14018:14018	5622136	1					
ANR	5625868	IfStatement	if ( bufset )		5622136	0					
ANR	5625869	Condition	bufset	820:6:17565:17570	5622136	0	True				
ANR	5625870	Identifier	bufset		5622136	0					
ANR	5625871	CompoundStatement		655:14:14034:14034	5622136	1					
ANR	5625872	ExpressionStatement	free ( buf )	821:3:17578:17588	5622136	0	True				
ANR	5625873	CallExpression	free ( buf )		5622136	0					
ANR	5625874	Callee	free		5622136	0					
ANR	5625875	Identifier	free		5622136	0					
ANR	5625876	ArgumentList	buf		5622136	1					
ANR	5625877	Argument	buf		5622136	0					
ANR	5625878	Identifier	buf		5622136	0					
ANR	5625879	ExpressionStatement	buf = NULL	822:3:17593:17603	5622136	1	True				
ANR	5625880	AssignmentExpression	buf = NULL		5622136	0		=			
ANR	5625881	Identifier	buf		5622136	0					
ANR	5625882	Identifier	NULL		5622136	1					
ANR	5625883	ExpressionStatement	bufset = 0	823:3:17608:17618	5622136	2	True				
ANR	5625884	AssignmentExpression	bufset = 0		5622136	0		=			
ANR	5625885	Identifier	bufset		5622136	0					
ANR	5625886	PrimaryExpression	0		5622136	1					
ANR	5625887	ExpressionStatement	cmd = next + 1	825:2:17626:17640	5622136	1	True				
ANR	5625888	AssignmentExpression	cmd = next + 1		5622136	0		=			
ANR	5625889	Identifier	cmd		5622136	0					
ANR	5625890	AdditiveExpression	next + 1		5622136	1		+			
ANR	5625891	Identifier	next		5622136	0					
ANR	5625892	PrimaryExpression	1		5622136	1					
ANR	5625893	ExpressionStatement	encode = 0	826:2:17644:17654	5622136	2	True				
ANR	5625894	AssignmentExpression	encode = 0		5622136	0		=			
ANR	5625895	Identifier	encode		5622136	0					
ANR	5625896	PrimaryExpression	0		5622136	1					
ANR	5625897	GotoStatement	goto repeat ;	827:2:17658:17669	5622136	3	True				
ANR	5625898	Identifier	repeat		5622136	0					
ANR	5625899	IfStatement	if ( eq )		5622136	36					
ANR	5625900	Condition	eq	829:5:17679:17680	5622136	0	True				
ANR	5625901	Identifier	eq		5622136	0					
ANR	5625902	CompoundStatement		664:9:14144:14144	5622136	1					
ANR	5625903	ExpressionStatement	* -- eq = '='	830:2:17687:17698	5622136	0	True				
ANR	5625904	AssignmentExpression	* -- eq = '='		5622136	0		=			
ANR	5625905	UnaryOperationExpression	* -- eq		5622136	0					
ANR	5625906	UnaryOperator	*		5622136	0					
ANR	5625907	UnaryExpression	-- eq		5622136	1					
ANR	5625908	IncDec	--		5622136	0					
ANR	5625909	Identifier	eq		5622136	1					
ANR	5625910	PrimaryExpression	'='		5622136	1					
ANR	5625911	Label	fail :	832:0:17703:17707	5622136	37	True				
ANR	5625912	Identifier	fail		5622136	0					
ANR	5625913	IfStatement	if ( bufset )		5622136	38					
ANR	5625914	Condition	bufset	833:5:17714:17719	5622136	0	True				
ANR	5625915	Identifier	bufset		5622136	0					
ANR	5625916	CompoundStatement		668:13:14183:14183	5622136	1					
ANR	5625917	ExpressionStatement	free ( buf )	834:2:17726:17736	5622136	0	True				
ANR	5625918	CallExpression	free ( buf )		5622136	0					
ANR	5625919	Callee	free		5622136	0					
ANR	5625920	Identifier	free		5622136	0					
ANR	5625921	ArgumentList	buf		5622136	1					
ANR	5625922	Argument	buf		5622136	0					
ANR	5625923	Identifier	buf		5622136	0					
ANR	5625924	IfStatement	if ( out )		5622136	39					
ANR	5625925	Condition	out	836:5:17746:17748	5622136	0	True				
ANR	5625926	Identifier	out		5622136	0					
ANR	5625927	CompoundStatement		671:10:14212:14212	5622136	1					
ANR	5625928	ExpressionStatement	res = out -> buf	837:2:17755:17769	5622136	0	True				
ANR	5625929	AssignmentExpression	res = out -> buf		5622136	0		=			
ANR	5625930	Identifier	res		5622136	0					
ANR	5625931	PtrMemberAccess	out -> buf		5622136	1					
ANR	5625932	Identifier	out		5622136	0					
ANR	5625933	Identifier	buf		5622136	1					
ANR	5625934	ExpressionStatement	free ( out )	838:2:17773:17783	5622136	1	True				
ANR	5625935	CallExpression	free ( out )		5622136	0					
ANR	5625936	Callee	free		5622136	0					
ANR	5625937	Identifier	free		5622136	0					
ANR	5625938	ArgumentList	out		5622136	1					
ANR	5625939	Argument	out		5622136	0					
ANR	5625940	Identifier	out		5622136	0					
ANR	5625941	ElseStatement	else		5622136	0					
ANR	5625942	CompoundStatement		674:8:14254:14254	5622136	0					
ANR	5625943	ExpressionStatement	res = NULL	840:2:17797:17807	5622136	0	True				
ANR	5625944	AssignmentExpression	res = NULL		5622136	0		=			
ANR	5625945	Identifier	res		5622136	0					
ANR	5625946	Identifier	NULL		5622136	1					
ANR	5625947	ExpressionStatement	free ( original_cmd )	842:1:17813:17832	5622136	40	True				
ANR	5625948	CallExpression	free ( original_cmd )		5622136	0					
ANR	5625949	Callee	free		5622136	0					
ANR	5625950	Identifier	free		5622136	0					
ANR	5625951	ArgumentList	original_cmd		5622136	1					
ANR	5625952	Argument	original_cmd		5622136	0					
ANR	5625953	Identifier	original_cmd		5622136	0					
ANR	5625954	ExpressionStatement	free ( newcmd )	843:1:17835:17848	5622136	41	True				
ANR	5625955	CallExpression	free ( newcmd )		5622136	0					
ANR	5625956	Callee	free		5622136	0					
ANR	5625957	Identifier	free		5622136	0					
ANR	5625958	ArgumentList	newcmd		5622136	1					
ANR	5625959	Argument	newcmd		5622136	0					
ANR	5625960	Identifier	newcmd		5622136	0					
ANR	5625961	ReturnStatement	return res ;	844:1:17851:17861	5622136	42	True				
ANR	5625962	Identifier	res		5622136	0					
ANR	5625963	ReturnType	SDB_API char *		5622136	1					
ANR	5625964	Identifier	sdb_querys		5622136	2					
ANR	5625965	ParameterList	"Sdb * r , char * buf , size_t len , const char * _cmd"		5622136	3					
ANR	5625966	Parameter	Sdb * r	166:26:3489:3494	5622136	0	True				
ANR	5625967	ParameterType	Sdb *		5622136	0					
ANR	5625968	Identifier	r		5622136	1					
ANR	5625969	Parameter	char * buf	166:34:3497:3505	5622136	1	True				
ANR	5625970	ParameterType	char *		5622136	0					
ANR	5625971	Identifier	buf		5622136	1					
ANR	5625972	Parameter	size_t len	166:45:3508:3517	5622136	2	True				
ANR	5625973	ParameterType	size_t		5622136	0					
ANR	5625974	Identifier	len		5622136	1					
ANR	5625975	Parameter	const char * _cmd	166:57:3520:3535	5622136	3	True				
ANR	5625976	ParameterType	const char *		5622136	0					
ANR	5625977	Identifier	_cmd		5622136	1					
ANR	5625978	CFGEntryNode	ENTRY		5622136		True				
ANR	5625979	CFGExitNode	EXIT		5622136		True				
ANR	5625980	Symbol	sdb_json_num_inc		5622136						
ANR	5625981	Symbol	sdb_decode		5622136						
ANR	5625982	Symbol	strchr		5622136						
ANR	5625983	Symbol	newtmp		5622136						
ANR	5625984	Symbol	type		5622136						
ANR	5625985	Symbol	sdb_const_get		5622136						
ANR	5625986	Symbol	len		5622136						
ANR	5625987	Symbol	tmp		5622136						
ANR	5625988	Symbol	sdb_encode		5622136						
ANR	5625989	Symbol	* quot ++		5622136						
ANR	5625990	Symbol	* arroba		5622136						
ANR	5625991	Symbol	* cmd		5622136						
ANR	5625992	Symbol	val		5622136						
ANR	5625993	Symbol	* buf		5622136						
ANR	5625994	Symbol	sdb_atoi		5622136						
ANR	5625995	Symbol	isspace		5622136						
ANR	5625996	Symbol	iter		5622136						
ANR	5625997	Symbol	sdb_json_set		5622136						
ANR	5625998	Symbol	it		5622136						
ANR	5625999	Symbol	nstr		5622136						
ANR	5626000	Symbol	sdb_num_base		5622136						
ANR	5626001	Symbol	sdb_itoa		5622136						
ANR	5626002	Symbol	* out		5622136						
ANR	5626003	Symbol	cmd		5622136						
ANR	5626004	Symbol	quot		5622136						
ANR	5626005	Symbol	sdb_json_get		5622136						
ANR	5626006	Symbol	* tmp		5622136						
ANR	5626007	Symbol	sdb_type		5622136						
ANR	5626008	Symbol	* val		5622136						
ANR	5626009	Symbol	sdb_array_delete		5622136						
ANR	5626010	Symbol	out		5622136						
ANR	5626011	Symbol	is_ref		5622136						
ANR	5626012	Symbol	SDB_RS		5622136						
ANR	5626013	Symbol	sdb_num_dec		5622136						
ANR	5626014	Symbol	_cmd		5622136						
ANR	5626015	Symbol	& user		5622136						
ANR	5626016	Symbol	* -- eq		5622136						
ANR	5626017	Symbol	strbuf_new		5622136						
ANR	5626018	Symbol	sdb_json_num_dec		5622136						
ANR	5626019	Symbol	atoi		5622136						
ANR	5626020	Symbol	malloc		5622136						
ANR	5626021	Symbol	d		5622136						
ANR	5626022	Symbol	* ns		5622136						
ANR	5626023	Symbol	i		5622136						
ANR	5626024	Symbol	sdb_foreach_list		5622136						
ANR	5626025	Symbol	kv		5622136						
ANR	5626026	Symbol	sdbkv_value		5622136						
ANR	5626027	Symbol	l		5622136						
ANR	5626028	Symbol	n		5622136						
ANR	5626029	Symbol	o		5622136						
ANR	5626030	Symbol	p		5622136						
ANR	5626031	Symbol	q		5622136						
ANR	5626032	Symbol	* eq		5622136						
ANR	5626033	Symbol	r		5622136						
ANR	5626034	Symbol	buf		5622136						
ANR	5626035	Symbol	s		5622136						
ANR	5626036	Symbol	sdb_foreach_match		5622136						
ANR	5626037	Symbol	sdb_array_insert		5622136						
ANR	5626038	Symbol	w		5622136						
ANR	5626039	Symbol	s -> options		5622136						
ANR	5626040	Symbol	sdb_num_inc		5622136						
ANR	5626041	Symbol	tp		5622136						
ANR	5626042	Symbol	li		5622136						
ANR	5626043	Symbol	sdb_isnum		5622136						
ANR	5626044	Symbol	sdb_ns		5622136						
ANR	5626045	Symbol	encode		5622136						
ANR	5626046	Symbol	stdout		5622136						
ANR	5626047	Symbol	* next		5622136						
ANR	5626048	Symbol	strbuf_free		5622136						
ANR	5626049	Symbol	strlen		5622136						
ANR	5626050	Symbol	ns -> name		5622136						
ANR	5626051	Symbol	* quot		5622136						
ANR	5626052	Symbol	eb		5622136						
ANR	5626053	Symbol	sdb_set_owned		5622136						
ANR	5626054	Symbol	strcmp		5622136						
ANR	5626055	Symbol	ret		5622136						
ANR	5626056	Symbol	* sval		5622136						
ANR	5626057	Symbol	res		5622136						
ANR	5626058	Symbol	sdb_array_length		5622136						
ANR	5626059	Symbol	NULL		5622136						
ANR	5626060	Symbol	out -> buf		5622136						
ANR	5626061	Symbol	newbuf		5622136						
ANR	5626062	Symbol	eq		5622136						
ANR	5626063	Symbol	list		5622136						
ANR	5626064	Symbol	numstr		5622136						
ANR	5626065	Symbol	nc		5622136						
ANR	5626066	Symbol	true		5622136						
ANR	5626067	Symbol	idx		5622136						
ANR	5626068	Symbol	* json		5622136						
ANR	5626069	Symbol	original_cmd		5622136						
ANR	5626070	Symbol	next		5622136						
ANR	5626071	Symbol	sdb_query_file		5622136						
ANR	5626072	Symbol	ns		5622136						
ANR	5626073	Symbol	sdb_array_get		5622136						
ANR	5626074	Symbol	sdb_array_set		5622136						
ANR	5626075	Symbol	calloc		5622136						
ANR	5626076	Symbol	* ret		5622136						
ANR	5626077	Symbol	alength		5622136						
ANR	5626078	Symbol	SDB_OPTION_FS		5622136						
ANR	5626079	Symbol	curnum		5622136						
ANR	5626080	Symbol	bufset		5622136						
ANR	5626081	Symbol	wl		5622136						
ANR	5626082	Symbol	root		5622136						
ANR	5626083	Symbol	json		5622136						
ANR	5626084	Symbol	name_len		5622136						
ANR	5626085	Symbol	ok		5622136						
ANR	5626086	Symbol	sdb_array_get_num		5622136						
ANR	5626087	Symbol	sdb_fmt		5622136						
ANR	5626088	Symbol	snprintf		5622136						
ANR	5626089	Symbol	sdb_hash		5622136						
ANR	5626090	Symbol	newcmd		5622136						
ANR	5626091	Symbol	op		5622136						
ANR	5626092	Symbol	* json ++		5622136						
ANR	5626093	Symbol	sdbkv_key		5622136						
ANR	5626094	Symbol	false		5622136						
ANR	5626095	Symbol	sdb_get		5622136						
ANR	5626096	Symbol	sdb_json_indent		5622136						
ANR	5626097	Symbol	arroba		5622136						
ANR	5626098	Symbol	* i		5622136						
ANR	5626099	Symbol	sdb_set		5622136						
ANR	5626100	Symbol	* tp ++		5622136						
ANR	5626101	Symbol	sval		5622136						
ANR	5626102	Symbol	sdb_array_pop		5622136						
ANR	5626103	Symbol	* p		5622136						
ANR	5626104	Symbol	strdup		5622136						
ANR	5626105	Symbol	* eq ++		5622136						
ANR	5626106	Symbol	user		5622136						
ANR	5626107	Symbol	* s		5622136						
ANR	5626108	Symbol	base		5622136						
ANR	5626109	Function	sdb_query	847:0:17866:18149							
ANR	5626110	FunctionDef	"sdb_query (Sdb * s , const char * cmd)"		5626109	0					
ANR	5626111	CompoundStatement		847:48:17914:18149	5626109	0					
ANR	5626112	IdentifierDeclStatement	"char buf [ 1024 ] , * out ;"	848:1:17917:17937	5626109	0	True				
ANR	5626113	IdentifierDecl	buf [ 1024 ]		5626109	0					
ANR	5626114	IdentifierDeclType	char [ 1024 ]		5626109	0					
ANR	5626115	Identifier	buf		5626109	1					
ANR	5626116	PrimaryExpression	1024		5626109	2					
ANR	5626117	IdentifierDecl	* out		5626109	1					
ANR	5626118	IdentifierDeclType	char *		5626109	0					
ANR	5626119	Identifier	out		5626109	1					
ANR	5626120	IdentifierDeclStatement	"int must_save = ( ( * cmd == '~' ) || strchr ( cmd , '=' ) ) ;"	849:1:17940:17990	5626109	1	True				
ANR	5626121	IdentifierDecl	"must_save = ( ( * cmd == '~' ) || strchr ( cmd , '=' ) )"		5626109	0					
ANR	5626122	IdentifierDeclType	int		5626109	0					
ANR	5626123	Identifier	must_save		5626109	1					
ANR	5626124	AssignmentExpression	"must_save = ( ( * cmd == '~' ) || strchr ( cmd , '=' ) )"		5626109	2		=			
ANR	5626125	Identifier	must_save		5626109	0					
ANR	5626126	OrExpression	"( * cmd == '~' ) || strchr ( cmd , '=' )"		5626109	1		||			
ANR	5626127	EqualityExpression	* cmd == '~'		5626109	0		==			
ANR	5626128	UnaryOperationExpression	* cmd		5626109	0					
ANR	5626129	UnaryOperator	*		5626109	0					
ANR	5626130	Identifier	cmd		5626109	1					
ANR	5626131	PrimaryExpression	'~'		5626109	1					
ANR	5626132	CallExpression	"strchr ( cmd , '=' )"		5626109	1					
ANR	5626133	Callee	strchr		5626109	0					
ANR	5626134	Identifier	strchr		5626109	0					
ANR	5626135	ArgumentList	cmd		5626109	1					
ANR	5626136	Argument	cmd		5626109	0					
ANR	5626137	Identifier	cmd		5626109	0					
ANR	5626138	Argument	'='		5626109	1					
ANR	5626139	PrimaryExpression	'='		5626109	0					
ANR	5626140	ExpressionStatement	"out = sdb_querys ( s , buf , sizeof ( buf ) - 1 , cmd )"	850:1:17993:18041	5626109	2	True				
ANR	5626141	AssignmentExpression	"out = sdb_querys ( s , buf , sizeof ( buf ) - 1 , cmd )"		5626109	0		=			
ANR	5626142	Identifier	out		5626109	0					
ANR	5626143	CallExpression	"sdb_querys ( s , buf , sizeof ( buf ) - 1 , cmd )"		5626109	1					
ANR	5626144	Callee	sdb_querys		5626109	0					
ANR	5626145	Identifier	sdb_querys		5626109	0					
ANR	5626146	ArgumentList	s		5626109	1					
ANR	5626147	Argument	s		5626109	0					
ANR	5626148	Identifier	s		5626109	0					
ANR	5626149	Argument	buf		5626109	1					
ANR	5626150	Identifier	buf		5626109	0					
ANR	5626151	Argument	sizeof ( buf ) - 1		5626109	2					
ANR	5626152	AdditiveExpression	sizeof ( buf ) - 1		5626109	0		-			
ANR	5626153	SizeofExpression	sizeof ( buf )		5626109	0					
ANR	5626154	Sizeof	sizeof		5626109	0					
ANR	5626155	SizeofOperand	buf		5626109	1					
ANR	5626156	PrimaryExpression	1		5626109	1					
ANR	5626157	Argument	cmd		5626109	3					
ANR	5626158	Identifier	cmd		5626109	0					
ANR	5626159	IfStatement	if ( out )		5626109	3					
ANR	5626160	Condition	out	851:5:18048:18050	5626109	0	True				
ANR	5626161	Identifier	out		5626109	0					
ANR	5626162	CompoundStatement		5:10:138:138	5626109	1					
ANR	5626163	IfStatement	if ( * out )		5626109	0					
ANR	5626164	Condition	* out	852:6:18061:18064	5626109	0	True				
ANR	5626165	UnaryOperationExpression	* out		5626109	0					
ANR	5626166	UnaryOperator	*		5626109	0					
ANR	5626167	Identifier	out		5626109	1					
ANR	5626168	CompoundStatement		6:12:152:152	5626109	1					
ANR	5626169	ExpressionStatement	puts ( out )	853:3:18072:18082	5626109	0	True				
ANR	5626170	CallExpression	puts ( out )		5626109	0					
ANR	5626171	Callee	puts		5626109	0					
ANR	5626172	Identifier	puts		5626109	0					
ANR	5626173	ArgumentList	out		5626109	1					
ANR	5626174	Argument	out		5626109	0					
ANR	5626175	Identifier	out		5626109	0					
ANR	5626176	IfStatement	if ( out != buf )		5626109	1					
ANR	5626177	Condition	out != buf	855:6:18094:18103	5626109	0	True				
ANR	5626178	EqualityExpression	out != buf		5626109	0		!=			
ANR	5626179	Identifier	out		5626109	0					
ANR	5626180	Identifier	buf		5626109	1					
ANR	5626181	CompoundStatement		9:18:191:191	5626109	1					
ANR	5626182	ExpressionStatement	free ( out )	856:3:18111:18121	5626109	0	True				
ANR	5626183	CallExpression	free ( out )		5626109	0					
ANR	5626184	Callee	free		5626109	0					
ANR	5626185	Identifier	free		5626109	0					
ANR	5626186	ArgumentList	out		5626109	1					
ANR	5626187	Argument	out		5626109	0					
ANR	5626188	Identifier	out		5626109	0					
ANR	5626189	ReturnStatement	return must_save ;	859:1:18131:18147	5626109	4	True				
ANR	5626190	Identifier	must_save		5626109	0					
ANR	5626191	ReturnType	SDB_API int		5626109	1					
ANR	5626192	Identifier	sdb_query		5626109	2					
ANR	5626193	ParameterList	"Sdb * s , const char * cmd"		5626109	3					
ANR	5626194	Parameter	Sdb * s	847:23:17889:17894	5626109	0	True				
ANR	5626195	ParameterType	Sdb *		5626109	0					
ANR	5626196	Identifier	s		5626109	1					
ANR	5626197	Parameter	const char * cmd	847:31:17897:17911	5626109	1	True				
ANR	5626198	ParameterType	const char *		5626109	0					
ANR	5626199	Identifier	cmd		5626109	1					
ANR	5626200	CFGEntryNode	ENTRY		5626109		True				
ANR	5626201	CFGExitNode	EXIT		5626109		True				
ANR	5626202	Symbol	buf		5626109						
ANR	5626203	Symbol	s		5626109						
ANR	5626204	Symbol	* out		5626109						
ANR	5626205	Symbol	strchr		5626109						
ANR	5626206	Symbol	sdb_querys		5626109						
ANR	5626207	Symbol	cmd		5626109						
ANR	5626208	Symbol	* cmd		5626109						
ANR	5626209	Symbol	out		5626109						
ANR	5626210	Symbol	must_save		5626109						
ANR	5626211	Function	sdb_query_lines	862:0:18152:18465							
ANR	5626212	FunctionDef	"sdb_query_lines (Sdb * s , const char * cmd)"		5626211	0					
ANR	5626213	CompoundStatement		862:54:18206:18465	5626211	0					
ANR	5626214	IdentifierDeclStatement	"char * o , * p , * op ;"	863:1:18209:18225	5626211	0	True				
ANR	5626215	IdentifierDecl	* o		5626211	0					
ANR	5626216	IdentifierDeclType	char *		5626211	0					
ANR	5626217	Identifier	o		5626211	1					
ANR	5626218	IdentifierDecl	* p		5626211	1					
ANR	5626219	IdentifierDeclType	char *		5626211	0					
ANR	5626220	Identifier	p		5626211	1					
ANR	5626221	IdentifierDecl	* op		5626211	2					
ANR	5626222	IdentifierDeclType	char *		5626211	0					
ANR	5626223	Identifier	op		5626211	1					
ANR	5626224	IfStatement	if ( ! s || ! cmd )		5626211	1					
ANR	5626225	Condition	! s || ! cmd	864:5:18232:18241	5626211	0	True				
ANR	5626226	OrExpression	! s || ! cmd		5626211	0		||			
ANR	5626227	UnaryOperationExpression	! s		5626211	0					
ANR	5626228	UnaryOperator	!		5626211	0					
ANR	5626229	Identifier	s		5626211	1					
ANR	5626230	UnaryOperationExpression	! cmd		5626211	1					
ANR	5626231	UnaryOperator	!		5626211	0					
ANR	5626232	Identifier	cmd		5626211	1					
ANR	5626233	CompoundStatement		3:17:37:37	5626211	1					
ANR	5626234	ReturnStatement	return 0 ;	865:2:18248:18256	5626211	0	True				
ANR	5626235	PrimaryExpression	0		5626211	0					
ANR	5626236	ExpressionStatement	op = strdup ( cmd )	867:1:18262:18279	5626211	2	True				
ANR	5626237	AssignmentExpression	op = strdup ( cmd )		5626211	0		=			
ANR	5626238	Identifier	op		5626211	0					
ANR	5626239	CallExpression	strdup ( cmd )		5626211	1					
ANR	5626240	Callee	strdup		5626211	0					
ANR	5626241	Identifier	strdup		5626211	0					
ANR	5626242	ArgumentList	cmd		5626211	1					
ANR	5626243	Argument	cmd		5626211	0					
ANR	5626244	Identifier	cmd		5626211	0					
ANR	5626245	IfStatement	if ( ! op )		5626211	3					
ANR	5626246	Condition	! op	868:5:18286:18288	5626211	0	True				
ANR	5626247	UnaryOperationExpression	! op		5626211	0					
ANR	5626248	UnaryOperator	!		5626211	0					
ANR	5626249	Identifier	op		5626211	1					
ANR	5626250	CompoundStatement		7:10:84:84	5626211	1					
ANR	5626251	ReturnStatement	return 0 ;	869:2:18295:18303	5626211	0	True				
ANR	5626252	PrimaryExpression	0		5626211	0					
ANR	5626253	ExpressionStatement	p = op	871:1:18309:18315	5626211	4	True				
ANR	5626254	AssignmentExpression	p = op		5626211	0		=			
ANR	5626255	Identifier	p		5626211	0					
ANR	5626256	Identifier	op		5626211	1					
ANR	5626257	DoStatement	do		5626211	5					
ANR	5626258	CompoundStatement		11:4:114:114	5626211	0					
ANR	5626259	ExpressionStatement	"o = strchr ( p , '\\n' )"	873:2:18325:18345	5626211	0	True				
ANR	5626260	AssignmentExpression	"o = strchr ( p , '\\n' )"		5626211	0		=			
ANR	5626261	Identifier	o		5626211	0					
ANR	5626262	CallExpression	"strchr ( p , '\\n' )"		5626211	1					
ANR	5626263	Callee	strchr		5626211	0					
ANR	5626264	Identifier	strchr		5626211	0					
ANR	5626265	ArgumentList	p		5626211	1					
ANR	5626266	Argument	p		5626211	0					
ANR	5626267	Identifier	p		5626211	0					
ANR	5626268	Argument	'\\n'		5626211	1					
ANR	5626269	PrimaryExpression	'\\n'		5626211	0					
ANR	5626270	IfStatement	if ( o )		5626211	1					
ANR	5626271	Condition	o	874:6:18353:18353	5626211	0	True				
ANR	5626272	Identifier	o		5626211	0					
ANR	5626273	CompoundStatement		13:9:149:149	5626211	1					
ANR	5626274	ExpressionStatement	* o = 0	875:3:18361:18367	5626211	0	True				
ANR	5626275	AssignmentExpression	* o = 0		5626211	0		=			
ANR	5626276	UnaryOperationExpression	* o		5626211	0					
ANR	5626277	UnaryOperator	*		5626211	0					
ANR	5626278	Identifier	o		5626211	1					
ANR	5626279	PrimaryExpression	0		5626211	1					
ANR	5626280	ExpressionStatement	"( void ) sdb_query ( s , p )"	877:2:18375:18397	5626211	2	True				
ANR	5626281	CastExpression	"( void ) sdb_query ( s , p )"		5626211	0					
ANR	5626282	CastTarget	void		5626211	0					
ANR	5626283	CallExpression	"sdb_query ( s , p )"		5626211	1					
ANR	5626284	Callee	sdb_query		5626211	0					
ANR	5626285	Identifier	sdb_query		5626211	0					
ANR	5626286	ArgumentList	s		5626211	1					
ANR	5626287	Argument	s		5626211	0					
ANR	5626288	Identifier	s		5626211	0					
ANR	5626289	Argument	p		5626211	1					
ANR	5626290	Identifier	p		5626211	0					
ANR	5626291	IfStatement	if ( o )		5626211	3					
ANR	5626292	Condition	o	878:6:18405:18405	5626211	0	True				
ANR	5626293	Identifier	o		5626211	0					
ANR	5626294	CompoundStatement		17:9:201:201	5626211	1					
ANR	5626295	ExpressionStatement	p = o + 1	879:3:18413:18422	5626211	0	True				
ANR	5626296	AssignmentExpression	p = o + 1		5626211	0		=			
ANR	5626297	Identifier	p		5626211	0					
ANR	5626298	AdditiveExpression	o + 1		5626211	1		+			
ANR	5626299	Identifier	o		5626211	0					
ANR	5626300	PrimaryExpression	1		5626211	1					
ANR	5626301	Condition	o	881:10:18438:18438	5626211	1	True				
ANR	5626302	Identifier	o		5626211	0					
ANR	5626303	ExpressionStatement	free ( op )	882:1:18443:18452	5626211	6	True				
ANR	5626304	CallExpression	free ( op )		5626211	0					
ANR	5626305	Callee	free		5626211	0					
ANR	5626306	Identifier	free		5626211	0					
ANR	5626307	ArgumentList	op		5626211	1					
ANR	5626308	Argument	op		5626211	0					
ANR	5626309	Identifier	op		5626211	0					
ANR	5626310	ReturnStatement	return 1 ;	883:1:18455:18463	5626211	7	True				
ANR	5626311	PrimaryExpression	1		5626211	0					
ANR	5626312	ReturnType	SDB_API int		5626211	1					
ANR	5626313	Identifier	sdb_query_lines		5626211	2					
ANR	5626314	ParameterList	"Sdb * s , const char * cmd"		5626211	3					
ANR	5626315	Parameter	Sdb * s	862:29:18181:18186	5626211	0	True				
ANR	5626316	ParameterType	Sdb *		5626211	0					
ANR	5626317	Identifier	s		5626211	1					
ANR	5626318	Parameter	const char * cmd	862:37:18189:18203	5626211	1	True				
ANR	5626319	ParameterType	const char *		5626211	0					
ANR	5626320	Identifier	cmd		5626211	1					
ANR	5626321	CFGEntryNode	ENTRY		5626211		True				
ANR	5626322	CFGExitNode	EXIT		5626211		True				
ANR	5626323	Symbol	p		5626211						
ANR	5626324	Symbol	op		5626211						
ANR	5626325	Symbol	s		5626211						
ANR	5626326	Symbol	strchr		5626211						
ANR	5626327	Symbol	* o		5626211						
ANR	5626328	Symbol	cmd		5626211						
ANR	5626329	Symbol	strdup		5626211						
ANR	5626330	Symbol	o		5626211						
ANR	5626331	Function	slurp	886:0:18468:18951							
ANR	5626332	FunctionDef	slurp (const char * file)		5626331	0					
ANR	5626333	CompoundStatement		886:37:18505:18951	5626331	0					
ANR	5626334	IdentifierDeclStatement	"int ret , fd ;"	887:1:18508:18519	5626331	0	True				
ANR	5626335	IdentifierDecl	ret		5626331	0					
ANR	5626336	IdentifierDeclType	int		5626331	0					
ANR	5626337	Identifier	ret		5626331	1					
ANR	5626338	IdentifierDecl	fd		5626331	1					
ANR	5626339	IdentifierDeclType	int		5626331	0					
ANR	5626340	Identifier	fd		5626331	1					
ANR	5626341	IdentifierDeclStatement	char * text ;	888:1:18522:18532	5626331	1	True				
ANR	5626342	IdentifierDecl	* text		5626331	0					
ANR	5626343	IdentifierDeclType	char *		5626331	0					
ANR	5626344	Identifier	text		5626331	1					
ANR	5626345	IdentifierDeclStatement	long sz ;	889:1:18535:18542	5626331	2	True				
ANR	5626346	IdentifierDecl	sz		5626331	0					
ANR	5626347	IdentifierDeclType	long		5626331	0					
ANR	5626348	Identifier	sz		5626331	1					
ANR	5626349	IfStatement	if ( ! file || ! * file )		5626331	3					
ANR	5626350	Condition	! file || ! * file	890:5:18549:18563	5626331	0	True				
ANR	5626351	OrExpression	! file || ! * file		5626331	0		||			
ANR	5626352	UnaryOperationExpression	! file		5626331	0					
ANR	5626353	UnaryOperator	!		5626331	0					
ANR	5626354	Identifier	file		5626331	1					
ANR	5626355	UnaryOperationExpression	! * file		5626331	1					
ANR	5626356	UnaryOperator	!		5626331	0					
ANR	5626357	UnaryOperationExpression	* file		5626331	1					
ANR	5626358	UnaryOperator	*		5626331	0					
ANR	5626359	Identifier	file		5626331	1					
ANR	5626360	ReturnStatement	return NULL ;	891:2:18568:18579	5626331	1	True				
ANR	5626361	Identifier	NULL		5626331	0					
ANR	5626362	ExpressionStatement	"fd = open ( file , O_RDONLY )"	892:1:18582:18608	5626331	4	True				
ANR	5626363	AssignmentExpression	"fd = open ( file , O_RDONLY )"		5626331	0		=			
ANR	5626364	Identifier	fd		5626331	0					
ANR	5626365	CallExpression	"open ( file , O_RDONLY )"		5626331	1					
ANR	5626366	Callee	open		5626331	0					
ANR	5626367	Identifier	open		5626331	0					
ANR	5626368	ArgumentList	file		5626331	1					
ANR	5626369	Argument	file		5626331	0					
ANR	5626370	Identifier	file		5626331	0					
ANR	5626371	Argument	O_RDONLY		5626331	1					
ANR	5626372	Identifier	O_RDONLY		5626331	0					
ANR	5626373	IfStatement	if ( fd == - 1 )		5626331	5					
ANR	5626374	Condition	fd == - 1	893:5:18615:18622	5626331	0	True				
ANR	5626375	EqualityExpression	fd == - 1		5626331	0		==			
ANR	5626376	Identifier	fd		5626331	0					
ANR	5626377	UnaryOperationExpression	- 1		5626331	1					
ANR	5626378	UnaryOperator	-		5626331	0					
ANR	5626379	PrimaryExpression	1		5626331	1					
ANR	5626380	CompoundStatement		8:15:119:119	5626331	1					
ANR	5626381	ReturnStatement	return NULL ;	894:2:18629:18640	5626331	0	True				
ANR	5626382	Identifier	NULL		5626331	0					
ANR	5626383	ExpressionStatement	"sz = lseek ( fd , 0 , SEEK_END )"	896:1:18646:18674	5626331	6	True				
ANR	5626384	AssignmentExpression	"sz = lseek ( fd , 0 , SEEK_END )"		5626331	0		=			
ANR	5626385	Identifier	sz		5626331	0					
ANR	5626386	CallExpression	"lseek ( fd , 0 , SEEK_END )"		5626331	1					
ANR	5626387	Callee	lseek		5626331	0					
ANR	5626388	Identifier	lseek		5626331	0					
ANR	5626389	ArgumentList	fd		5626331	1					
ANR	5626390	Argument	fd		5626331	0					
ANR	5626391	Identifier	fd		5626331	0					
ANR	5626392	Argument	0		5626331	1					
ANR	5626393	PrimaryExpression	0		5626331	0					
ANR	5626394	Argument	SEEK_END		5626331	2					
ANR	5626395	Identifier	SEEK_END		5626331	0					
ANR	5626396	IfStatement	if ( sz < 0 )		5626331	7					
ANR	5626397	Condition	sz < 0	897:5:18681:18686	5626331	0	True				
ANR	5626398	RelationalExpression	sz < 0		5626331	0		<			
ANR	5626399	Identifier	sz		5626331	0					
ANR	5626400	PrimaryExpression	0		5626331	1					
ANR	5626401	CompoundStatement		12:12:182:182	5626331	1					
ANR	5626402	ExpressionStatement	close ( fd )	898:2:18692:18702	5626331	0	True				
ANR	5626403	CallExpression	close ( fd )		5626331	0					
ANR	5626404	Callee	close		5626331	0					
ANR	5626405	Identifier	close		5626331	0					
ANR	5626406	ArgumentList	fd		5626331	1					
ANR	5626407	Argument	fd		5626331	0					
ANR	5626408	Identifier	fd		5626331	0					
ANR	5626409	ReturnStatement	return NULL ;	899:2:18706:18717	5626331	1	True				
ANR	5626410	Identifier	NULL		5626331	0					
ANR	5626411	ExpressionStatement	"lseek ( fd , 0 , SEEK_SET )"	901:1:18723:18746	5626331	8	True				
ANR	5626412	CallExpression	"lseek ( fd , 0 , SEEK_SET )"		5626331	0					
ANR	5626413	Callee	lseek		5626331	0					
ANR	5626414	Identifier	lseek		5626331	0					
ANR	5626415	ArgumentList	fd		5626331	1					
ANR	5626416	Argument	fd		5626331	0					
ANR	5626417	Identifier	fd		5626331	0					
ANR	5626418	Argument	0		5626331	1					
ANR	5626419	PrimaryExpression	0		5626331	0					
ANR	5626420	Argument	SEEK_SET		5626331	2					
ANR	5626421	Identifier	SEEK_SET		5626331	0					
ANR	5626422	ExpressionStatement	text = malloc ( sz + 1 )	902:1:18749:18771	5626331	9	True				
ANR	5626423	AssignmentExpression	text = malloc ( sz + 1 )		5626331	0		=			
ANR	5626424	Identifier	text		5626331	0					
ANR	5626425	CallExpression	malloc ( sz + 1 )		5626331	1					
ANR	5626426	Callee	malloc		5626331	0					
ANR	5626427	Identifier	malloc		5626331	0					
ANR	5626428	ArgumentList	sz + 1		5626331	1					
ANR	5626429	Argument	sz + 1		5626331	0					
ANR	5626430	AdditiveExpression	sz + 1		5626331	0		+			
ANR	5626431	Identifier	sz		5626331	0					
ANR	5626432	PrimaryExpression	1		5626331	1					
ANR	5626433	IfStatement	if ( ! text )		5626331	10					
ANR	5626434	Condition	! text	903:5:18778:18782	5626331	0	True				
ANR	5626435	UnaryOperationExpression	! text		5626331	0					
ANR	5626436	UnaryOperator	!		5626331	0					
ANR	5626437	Identifier	text		5626331	1					
ANR	5626438	CompoundStatement		18:12:279:279	5626331	1					
ANR	5626439	ExpressionStatement	close ( fd )	904:2:18789:18799	5626331	0	True				
ANR	5626440	CallExpression	close ( fd )		5626331	0					
ANR	5626441	Callee	close		5626331	0					
ANR	5626442	Identifier	close		5626331	0					
ANR	5626443	ArgumentList	fd		5626331	1					
ANR	5626444	Argument	fd		5626331	0					
ANR	5626445	Identifier	fd		5626331	0					
ANR	5626446	ReturnStatement	return NULL ;	905:2:18803:18814	5626331	1	True				
ANR	5626447	Identifier	NULL		5626331	0					
ANR	5626448	ExpressionStatement	"ret = read ( fd , text , sz )"	907:1:18820:18845	5626331	11	True				
ANR	5626449	AssignmentExpression	"ret = read ( fd , text , sz )"		5626331	0		=			
ANR	5626450	Identifier	ret		5626331	0					
ANR	5626451	CallExpression	"read ( fd , text , sz )"		5626331	1					
ANR	5626452	Callee	read		5626331	0					
ANR	5626453	Identifier	read		5626331	0					
ANR	5626454	ArgumentList	fd		5626331	1					
ANR	5626455	Argument	fd		5626331	0					
ANR	5626456	Identifier	fd		5626331	0					
ANR	5626457	Argument	text		5626331	1					
ANR	5626458	Identifier	text		5626331	0					
ANR	5626459	Argument	sz		5626331	2					
ANR	5626460	Identifier	sz		5626331	0					
ANR	5626461	IfStatement	if ( ret != sz )		5626331	12					
ANR	5626462	Condition	ret != sz	908:5:18852:18860	5626331	0	True				
ANR	5626463	EqualityExpression	ret != sz		5626331	0		!=			
ANR	5626464	Identifier	ret		5626331	0					
ANR	5626465	Identifier	sz		5626331	1					
ANR	5626466	CompoundStatement		23:16:357:357	5626331	1					
ANR	5626467	ExpressionStatement	free ( text )	909:2:18867:18878	5626331	0	True				
ANR	5626468	CallExpression	free ( text )		5626331	0					
ANR	5626469	Callee	free		5626331	0					
ANR	5626470	Identifier	free		5626331	0					
ANR	5626471	ArgumentList	text		5626331	1					
ANR	5626472	Argument	text		5626331	0					
ANR	5626473	Identifier	text		5626331	0					
ANR	5626474	ExpressionStatement	text = NULL	910:2:18882:18893	5626331	1	True				
ANR	5626475	AssignmentExpression	text = NULL		5626331	0		=			
ANR	5626476	Identifier	text		5626331	0					
ANR	5626477	Identifier	NULL		5626331	1					
ANR	5626478	ElseStatement	else		5626331	0					
ANR	5626479	CompoundStatement		26:8:397:397	5626331	0					
ANR	5626480	ExpressionStatement	text [ sz ] = 0	912:2:18907:18919	5626331	0	True				
ANR	5626481	AssignmentExpression	text [ sz ] = 0		5626331	0		=			
ANR	5626482	ArrayIndexing	text [ sz ]		5626331	0					
ANR	5626483	Identifier	text		5626331	0					
ANR	5626484	Identifier	sz		5626331	1					
ANR	5626485	PrimaryExpression	0		5626331	1					
ANR	5626486	ExpressionStatement	close ( fd )	914:1:18925:18935	5626331	13	True				
ANR	5626487	CallExpression	close ( fd )		5626331	0					
ANR	5626488	Callee	close		5626331	0					
ANR	5626489	Identifier	close		5626331	0					
ANR	5626490	ArgumentList	fd		5626331	1					
ANR	5626491	Argument	fd		5626331	0					
ANR	5626492	Identifier	fd		5626331	0					
ANR	5626493	ReturnStatement	return text ;	915:1:18938:18949	5626331	14	True				
ANR	5626494	Identifier	text		5626331	0					
ANR	5626495	ReturnType	static char *		5626331	1					
ANR	5626496	Identifier	slurp		5626331	2					
ANR	5626497	ParameterList	const char * file		5626331	3					
ANR	5626498	Parameter	const char * file	886:19:18487:18502	5626331	0	True				
ANR	5626499	ParameterType	const char *		5626331	0					
ANR	5626500	Identifier	file		5626331	1					
ANR	5626501	CFGEntryNode	ENTRY		5626331		True				
ANR	5626502	CFGExitNode	EXIT		5626331		True				
ANR	5626503	Symbol	ret		5626331						
ANR	5626504	Symbol	SEEK_SET		5626331						
ANR	5626505	Symbol	malloc		5626331						
ANR	5626506	Symbol	NULL		5626331						
ANR	5626507	Symbol	lseek		5626331						
ANR	5626508	Symbol	read		5626331						
ANR	5626509	Symbol	sz		5626331						
ANR	5626510	Symbol	* text		5626331						
ANR	5626511	Symbol	* file		5626331						
ANR	5626512	Symbol	* sz		5626331						
ANR	5626513	Symbol	SEEK_END		5626331						
ANR	5626514	Symbol	file		5626331						
ANR	5626515	Symbol	O_RDONLY		5626331						
ANR	5626516	Symbol	text		5626331						
ANR	5626517	Symbol	fd		5626331						
ANR	5626518	Symbol	open		5626331						
ANR	5626519	Function	sdb_query_file	918:0:18954:19126							
ANR	5626520	FunctionDef	"sdb_query_file (Sdb * s , const char * file)"		5626519	0					
ANR	5626521	CompoundStatement		918:53:19007:19126	5626519	0					
ANR	5626522	IdentifierDeclStatement	int ret = 0 ;	919:1:19010:19021	5626519	0	True				
ANR	5626523	IdentifierDecl	ret = 0		5626519	0					
ANR	5626524	IdentifierDeclType	int		5626519	0					
ANR	5626525	Identifier	ret		5626519	1					
ANR	5626526	AssignmentExpression	ret = 0		5626519	2		=			
ANR	5626527	Identifier	ret		5626519	0					
ANR	5626528	PrimaryExpression	0		5626519	1					
ANR	5626529	IdentifierDeclStatement	char * txt = slurp ( file ) ;	920:1:19024:19048	5626519	1	True				
ANR	5626530	IdentifierDecl	* txt = slurp ( file )		5626519	0					
ANR	5626531	IdentifierDeclType	char *		5626519	0					
ANR	5626532	Identifier	txt		5626519	1					
ANR	5626533	AssignmentExpression	* txt = slurp ( file )		5626519	2		=			
ANR	5626534	Identifier	txt		5626519	0					
ANR	5626535	CallExpression	slurp ( file )		5626519	1					
ANR	5626536	Callee	slurp		5626519	0					
ANR	5626537	Identifier	slurp		5626519	0					
ANR	5626538	ArgumentList	file		5626519	1					
ANR	5626539	Argument	file		5626519	0					
ANR	5626540	Identifier	file		5626519	0					
ANR	5626541	IfStatement	if ( txt )		5626519	2					
ANR	5626542	Condition	txt	921:5:19055:19057	5626519	0	True				
ANR	5626543	Identifier	txt		5626519	0					
ANR	5626544	CompoundStatement		4:10:52:52	5626519	1					
ANR	5626545	ExpressionStatement	"ret = sdb_query_lines ( s , txt )"	922:2:19064:19094	5626519	0	True				
ANR	5626546	AssignmentExpression	"ret = sdb_query_lines ( s , txt )"		5626519	0		=			
ANR	5626547	Identifier	ret		5626519	0					
ANR	5626548	CallExpression	"sdb_query_lines ( s , txt )"		5626519	1					
ANR	5626549	Callee	sdb_query_lines		5626519	0					
ANR	5626550	Identifier	sdb_query_lines		5626519	0					
ANR	5626551	ArgumentList	s		5626519	1					
ANR	5626552	Argument	s		5626519	0					
ANR	5626553	Identifier	s		5626519	0					
ANR	5626554	Argument	txt		5626519	1					
ANR	5626555	Identifier	txt		5626519	0					
ANR	5626556	ExpressionStatement	free ( txt )	923:2:19098:19108	5626519	1	True				
ANR	5626557	CallExpression	free ( txt )		5626519	0					
ANR	5626558	Callee	free		5626519	0					
ANR	5626559	Identifier	free		5626519	0					
ANR	5626560	ArgumentList	txt		5626519	1					
ANR	5626561	Argument	txt		5626519	0					
ANR	5626562	Identifier	txt		5626519	0					
ANR	5626563	ReturnStatement	return ret ;	925:1:19114:19124	5626519	3	True				
ANR	5626564	Identifier	ret		5626519	0					
ANR	5626565	ReturnType	SDB_API int		5626519	1					
ANR	5626566	Identifier	sdb_query_file		5626519	2					
ANR	5626567	ParameterList	"Sdb * s , const char * file"		5626519	3					
ANR	5626568	Parameter	Sdb * s	918:27:18981:18986	5626519	0	True				
ANR	5626569	ParameterType	Sdb *		5626519	0					
ANR	5626570	Identifier	s		5626519	1					
ANR	5626571	Parameter	const char * file	918:35:18989:19004	5626519	1	True				
ANR	5626572	ParameterType	const char *		5626519	0					
ANR	5626573	Identifier	file		5626519	1					
ANR	5626574	CFGEntryNode	ENTRY		5626519		True				
ANR	5626575	CFGExitNode	EXIT		5626519		True				
ANR	5626576	Symbol	ret		5626519						
ANR	5626577	Symbol	txt		5626519						
ANR	5626578	Symbol	s		5626519						
ANR	5626579	Symbol	file		5626519						
ANR	5626580	Symbol	sdb_query_lines		5626519						
ANR	5626581	Symbol	slurp		5626519						
