command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	285208	File	data/converged/CVE-2019-16718~_radare2/arc-dis.c								
ANR	285209	ClassDef	<unnamed>	54:8:1578:1938							
ANR	285210	DeclStmt									
ANR	285211	Decl									a4_decoding_class
ANR	285212	DeclStmt									
ANR	285213	Decl							field	field	isReg
ANR	285214	DeclStmt									
ANR	285215	Decl							field	field	isReg
ANR	285216	Function	core_reg_name	183:0:5188:5355							
ANR	285217	FunctionDef	"core_reg_name (struct arcDisState * state , int val)"		285216	0					
ANR	285218	CompoundStatement		185:0:5260:5355	285216	0					
ANR	285219	IfStatement	if ( state -> coreRegName )		285216	0					
ANR	285220	Condition	state -> coreRegName	186:5:5267:5284	285216	0	True				
ANR	285221	PtrMemberAccess	state -> coreRegName		285216	0					
ANR	285222	Identifier	state		285216	0					
ANR	285223	Identifier	coreRegName		285216	1					
ANR	285224	CompoundStatement		2:25:26:26	285216	1					
ANR	285225	ReturnStatement	"return ( * state -> coreRegName ) ( state -> _this , val ) ;"	187:2:5291:5339	285216	0	True				
ANR	285226	CallExpression	"( * state -> coreRegName ) ( state -> _this , val )"		285216	0					
ANR	285227	Callee	* state -> coreRegName		285216	0					
ANR	285228	UnaryOperationExpression	* state -> coreRegName		285216	0					
ANR	285229	UnaryOperator	*		285216	0					
ANR	285230	PtrMemberAccess	state -> coreRegName		285216	1					
ANR	285231	Identifier	state		285216	0					
ANR	285232	Identifier	coreRegName		285216	1					
ANR	285233	ArgumentList	state -> _this		285216	1					
ANR	285234	Argument	state -> _this		285216	0					
ANR	285235	PtrMemberAccess	state -> _this		285216	0					
ANR	285236	Identifier	state		285216	0					
ANR	285237	Identifier	_this		285216	1					
ANR	285238	Argument	val		285216	1					
ANR	285239	Identifier	val		285216	0					
ANR	285240	ReturnStatement	return 0 ;	189:1:5345:5353	285216	1	True				
ANR	285241	PrimaryExpression	0		285216	0					
ANR	285242	ReturnType	static const char *		285216	1					
ANR	285243	Identifier	core_reg_name		285216	2					
ANR	285244	ParameterList	"struct arcDisState * state , int val"		285216	3					
ANR	285245	Parameter	struct arcDisState * state	184:15:5223:5248	285216	0	True				
ANR	285246	ParameterType	struct arcDisState *		285216	0					
ANR	285247	Identifier	state		285216	1					
ANR	285248	Parameter	int val	184:43:5251:5257	285216	1	True				
ANR	285249	ParameterType	int		285216	0					
ANR	285250	Identifier	val		285216	1					
ANR	285251	CFGEntryNode	ENTRY		285216		True				
ANR	285252	CFGExitNode	EXIT		285216		True				
ANR	285253	Symbol	val		285216						
ANR	285254	Symbol	* state		285216						
ANR	285255	Symbol	state -> _this		285216						
ANR	285256	Symbol	* state -> coreRegName		285216						
ANR	285257	Symbol	state		285216						
ANR	285258	Symbol	* * state		285216						
ANR	285259	Symbol	state -> coreRegName		285216						
ANR	285260	Function	aux_reg_name	192:0:5358:5522							
ANR	285261	FunctionDef	"aux_reg_name (struct arcDisState * state , int val)"		285260	0					
ANR	285262	CompoundStatement		194:0:5429:5522	285260	0					
ANR	285263	IfStatement	if ( state -> auxRegName )		285260	0					
ANR	285264	Condition	state -> auxRegName	195:5:5436:5452	285260	0	True				
ANR	285265	PtrMemberAccess	state -> auxRegName		285260	0					
ANR	285266	Identifier	state		285260	0					
ANR	285267	Identifier	auxRegName		285260	1					
ANR	285268	CompoundStatement		2:24:25:25	285260	1					
ANR	285269	ReturnStatement	"return ( * state -> auxRegName ) ( state -> _this , val ) ;"	196:2:5459:5506	285260	0	True				
ANR	285270	CallExpression	"( * state -> auxRegName ) ( state -> _this , val )"		285260	0					
ANR	285271	Callee	* state -> auxRegName		285260	0					
ANR	285272	UnaryOperationExpression	* state -> auxRegName		285260	0					
ANR	285273	UnaryOperator	*		285260	0					
ANR	285274	PtrMemberAccess	state -> auxRegName		285260	1					
ANR	285275	Identifier	state		285260	0					
ANR	285276	Identifier	auxRegName		285260	1					
ANR	285277	ArgumentList	state -> _this		285260	1					
ANR	285278	Argument	state -> _this		285260	0					
ANR	285279	PtrMemberAccess	state -> _this		285260	0					
ANR	285280	Identifier	state		285260	0					
ANR	285281	Identifier	_this		285260	1					
ANR	285282	Argument	val		285260	1					
ANR	285283	Identifier	val		285260	0					
ANR	285284	ReturnStatement	return 0 ;	198:1:5512:5520	285260	1	True				
ANR	285285	PrimaryExpression	0		285260	0					
ANR	285286	ReturnType	static const char *		285260	1					
ANR	285287	Identifier	aux_reg_name		285260	2					
ANR	285288	ParameterList	"struct arcDisState * state , int val"		285260	3					
ANR	285289	Parameter	struct arcDisState * state	193:14:5392:5417	285260	0	True				
ANR	285290	ParameterType	struct arcDisState *		285260	0					
ANR	285291	Identifier	state		285260	1					
ANR	285292	Parameter	int val	193:42:5420:5426	285260	1	True				
ANR	285293	ParameterType	int		285260	0					
ANR	285294	Identifier	val		285260	1					
ANR	285295	CFGEntryNode	ENTRY		285260		True				
ANR	285296	CFGExitNode	EXIT		285260		True				
ANR	285297	Symbol	val		285260						
ANR	285298	Symbol	* state		285260						
ANR	285299	Symbol	state -> _this		285260						
ANR	285300	Symbol	state -> auxRegName		285260						
ANR	285301	Symbol	* state -> auxRegName		285260						
ANR	285302	Symbol	state		285260						
ANR	285303	Symbol	* * state		285260						
ANR	285304	Function	cond_code_name	201:0:5525:5695							
ANR	285305	FunctionDef	"cond_code_name (struct arcDisState * state , int val)"		285304	0					
ANR	285306	CompoundStatement		203:0:5598:5695	285304	0					
ANR	285307	IfStatement	if ( state -> condCodeName )		285304	0					
ANR	285308	Condition	state -> condCodeName	204:5:5605:5623	285304	0	True				
ANR	285309	PtrMemberAccess	state -> condCodeName		285304	0					
ANR	285310	Identifier	state		285304	0					
ANR	285311	Identifier	condCodeName		285304	1					
ANR	285312	CompoundStatement		2:26:27:27	285304	1					
ANR	285313	ReturnStatement	"return ( * state -> condCodeName ) ( state -> _this , val ) ;"	205:2:5630:5679	285304	0	True				
ANR	285314	CallExpression	"( * state -> condCodeName ) ( state -> _this , val )"		285304	0					
ANR	285315	Callee	* state -> condCodeName		285304	0					
ANR	285316	UnaryOperationExpression	* state -> condCodeName		285304	0					
ANR	285317	UnaryOperator	*		285304	0					
ANR	285318	PtrMemberAccess	state -> condCodeName		285304	1					
ANR	285319	Identifier	state		285304	0					
ANR	285320	Identifier	condCodeName		285304	1					
ANR	285321	ArgumentList	state -> _this		285304	1					
ANR	285322	Argument	state -> _this		285304	0					
ANR	285323	PtrMemberAccess	state -> _this		285304	0					
ANR	285324	Identifier	state		285304	0					
ANR	285325	Identifier	_this		285304	1					
ANR	285326	Argument	val		285304	1					
ANR	285327	Identifier	val		285304	0					
ANR	285328	ReturnStatement	return 0 ;	207:1:5685:5693	285304	1	True				
ANR	285329	PrimaryExpression	0		285304	0					
ANR	285330	ReturnType	static const char *		285304	1					
ANR	285331	Identifier	cond_code_name		285304	2					
ANR	285332	ParameterList	"struct arcDisState * state , int val"		285304	3					
ANR	285333	Parameter	struct arcDisState * state	202:16:5561:5586	285304	0	True				
ANR	285334	ParameterType	struct arcDisState *		285304	0					
ANR	285335	Identifier	state		285304	1					
ANR	285336	Parameter	int val	202:44:5589:5595	285304	1	True				
ANR	285337	ParameterType	int		285304	0					
ANR	285338	Identifier	val		285304	1					
ANR	285339	CFGEntryNode	ENTRY		285304		True				
ANR	285340	CFGExitNode	EXIT		285304		True				
ANR	285341	Symbol	val		285304						
ANR	285342	Symbol	* state		285304						
ANR	285343	Symbol	state -> _this		285304						
ANR	285344	Symbol	state -> condCodeName		285304						
ANR	285345	Symbol	state		285304						
ANR	285346	Symbol	* state -> condCodeName		285304						
ANR	285347	Symbol	* * state		285304						
ANR	285348	Function	instruction_name	210:0:5698:5915							
ANR	285349	FunctionDef	"instruction_name (struct arcDisState * state , int op1 , int op2 , int * flags)"		285348	0					
ANR	285350	CompoundStatement		215:0:5814:5915	285348	0					
ANR	285351	IfStatement	if ( state -> instName )		285348	0					
ANR	285352	Condition	state -> instName	216:5:5821:5835	285348	0	True				
ANR	285353	PtrMemberAccess	state -> instName		285348	0					
ANR	285354	Identifier	state		285348	0					
ANR	285355	Identifier	instName		285348	1					
ANR	285356	CompoundStatement		2:22:23:23	285348	1					
ANR	285357	ReturnStatement	"return ( * state -> instName ) ( state -> _this , op1 , op2 , flags ) ;"	217:2:5842:5899	285348	0	True				
ANR	285358	CallExpression	"( * state -> instName ) ( state -> _this , op1 , op2 , flags )"		285348	0					
ANR	285359	Callee	* state -> instName		285348	0					
ANR	285360	UnaryOperationExpression	* state -> instName		285348	0					
ANR	285361	UnaryOperator	*		285348	0					
ANR	285362	PtrMemberAccess	state -> instName		285348	1					
ANR	285363	Identifier	state		285348	0					
ANR	285364	Identifier	instName		285348	1					
ANR	285365	ArgumentList	state -> _this		285348	1					
ANR	285366	Argument	state -> _this		285348	0					
ANR	285367	PtrMemberAccess	state -> _this		285348	0					
ANR	285368	Identifier	state		285348	0					
ANR	285369	Identifier	_this		285348	1					
ANR	285370	Argument	op1		285348	1					
ANR	285371	Identifier	op1		285348	0					
ANR	285372	Argument	op2		285348	2					
ANR	285373	Identifier	op2		285348	0					
ANR	285374	Argument	flags		285348	3					
ANR	285375	Identifier	flags		285348	0					
ANR	285376	ReturnStatement	return 0 ;	219:1:5905:5913	285348	1	True				
ANR	285377	PrimaryExpression	0		285348	0					
ANR	285378	ReturnType	static const char *		285348	1					
ANR	285379	Identifier	instruction_name		285348	2					
ANR	285380	ParameterList	"struct arcDisState * state , int op1 , int op2 , int * flags"		285348	3					
ANR	285381	Parameter	struct arcDisState * state	211:18:5736:5761	285348	0	True				
ANR	285382	ParameterType	struct arcDisState *		285348	0					
ANR	285383	Identifier	state		285348	1					
ANR	285384	Parameter	int op1	212:4:5768:5777	285348	1	True				
ANR	285385	ParameterType	int		285348	0					
ANR	285386	Identifier	op1		285348	1					
ANR	285387	Parameter	int op2	213:4:5784:5793	285348	2	True				
ANR	285388	ParameterType	int		285348	0					
ANR	285389	Identifier	op2		285348	1					
ANR	285390	Parameter	int * flags	214:4:5800:5811	285348	3	True				
ANR	285391	ParameterType	int *		285348	0					
ANR	285392	Identifier	flags		285348	1					
ANR	285393	CFGEntryNode	ENTRY		285348		True				
ANR	285394	CFGExitNode	EXIT		285348		True				
ANR	285395	Symbol	op2		285348						
ANR	285396	Symbol	* state		285348						
ANR	285397	Symbol	op1		285348						
ANR	285398	Symbol	state -> _this		285348						
ANR	285399	Symbol	* state -> instName		285348						
ANR	285400	Symbol	flags		285348						
ANR	285401	Symbol	state -> instName		285348						
ANR	285402	Symbol	state		285348						
ANR	285403	Symbol	* * state		285348						
ANR	285404	Function	mwerror	222:0:5918:6053							
ANR	285405	FunctionDef	"mwerror (struct arcDisState * state , const char * msg)"		285404	0					
ANR	285406	CompoundStatement		224:0:5985:6053	285404	0					
ANR	285407	IfStatement	if ( state -> err != 0 )		285404	0					
ANR	285408	Condition	state -> err != 0	225:5:5992:6006	285404	0	True				
ANR	285409	EqualityExpression	state -> err != 0		285404	0		!=			
ANR	285410	PtrMemberAccess	state -> err		285404	0					
ANR	285411	Identifier	state		285404	0					
ANR	285412	Identifier	err		285404	1					
ANR	285413	PrimaryExpression	0		285404	1					
ANR	285414	CompoundStatement		2:22:23:23	285404	1					
ANR	285415	ExpressionStatement	"( * state -> err ) ( state -> _this , ( msg ) )"	226:2:6013:6048	285404	0	True				
ANR	285416	CallExpression	"( * state -> err ) ( state -> _this , ( msg ) )"		285404	0					
ANR	285417	Callee	* state -> err		285404	0					
ANR	285418	UnaryOperationExpression	* state -> err		285404	0					
ANR	285419	UnaryOperator	*		285404	0					
ANR	285420	PtrMemberAccess	state -> err		285404	1					
ANR	285421	Identifier	state		285404	0					
ANR	285422	Identifier	err		285404	1					
ANR	285423	ArgumentList	state -> _this		285404	1					
ANR	285424	Argument	state -> _this		285404	0					
ANR	285425	PtrMemberAccess	state -> _this		285404	0					
ANR	285426	Identifier	state		285404	0					
ANR	285427	Identifier	_this		285404	1					
ANR	285428	Argument	msg		285404	1					
ANR	285429	Identifier	msg		285404	0					
ANR	285430	ReturnType	static void		285404	1					
ANR	285431	Identifier	mwerror		285404	2					
ANR	285432	ParameterList	"struct arcDisState * state , const char * msg"		285404	3					
ANR	285433	Parameter	struct arcDisState * state	223:9:5939:5964	285404	0	True				
ANR	285434	ParameterType	struct arcDisState *		285404	0					
ANR	285435	Identifier	state		285404	1					
ANR	285436	Parameter	const char * msg	223:37:5967:5982	285404	1	True				
ANR	285437	ParameterType	const char *		285404	0					
ANR	285438	Identifier	msg		285404	1					
ANR	285439	CFGEntryNode	ENTRY		285404		True				
ANR	285440	CFGExitNode	EXIT		285404		True				
ANR	285441	Symbol	msg		285404						
ANR	285442	Symbol	* state		285404						
ANR	285443	Symbol	state -> _this		285404						
ANR	285444	Symbol	state -> err		285404						
ANR	285445	Symbol	state		285404						
ANR	285446	Function	post_address	230:0:6056:6440							
ANR	285447	FunctionDef	"post_address (struct arcDisState * state , int addr)"		285446	0					
ANR	285448	CompoundStatement		232:0:6128:6440	285446	0					
ANR	285449	Statement	static	233:2:6132:6137	285446	0	True				
ANR	285450	IdentifierDeclStatement	char id [ 3 * ARRAY_SIZE ( state -> addresses ) ] ;	233:9:6139:6181	285446	1	True				
ANR	285451	IdentifierDecl	id [ 3 * ARRAY_SIZE ( state -> addresses ) ]		285446	0					
ANR	285452	IdentifierDeclType	char [ 3 * ARRAY_SIZE ( state -> addresses ) ]		285446	0					
ANR	285453	Identifier	id		285446	1					
ANR	285454	MultiplicativeExpression	3 * ARRAY_SIZE ( state -> addresses )		285446	2		*			
ANR	285455	PrimaryExpression	3		285446	0					
ANR	285456	CallExpression	ARRAY_SIZE ( state -> addresses )		285446	1					
ANR	285457	Callee	ARRAY_SIZE		285446	0					
ANR	285458	Identifier	ARRAY_SIZE		285446	0					
ANR	285459	ArgumentList	state -> addresses		285446	1					
ANR	285460	Argument	state -> addresses		285446	0					
ANR	285461	PtrMemberAccess	state -> addresses		285446	0					
ANR	285462	Identifier	state		285446	0					
ANR	285463	Identifier	addresses		285446	1					
ANR	285464	IdentifierDeclStatement	"unsigned int j , i = state -> acnt ;"	234:2:6185:6216	285446	2	True				
ANR	285465	IdentifierDecl	j		285446	0					
ANR	285466	IdentifierDeclType	unsigned int		285446	0					
ANR	285467	Identifier	j		285446	1					
ANR	285468	IdentifierDecl	i = state -> acnt		285446	1					
ANR	285469	IdentifierDeclType	unsigned int		285446	0					
ANR	285470	Identifier	i		285446	1					
ANR	285471	AssignmentExpression	i = state -> acnt		285446	2		=			
ANR	285472	Identifier	i		285446	0					
ANR	285473	PtrMemberAccess	state -> acnt		285446	1					
ANR	285474	Identifier	state		285446	0					
ANR	285475	Identifier	acnt		285446	1					
ANR	285476	IfStatement	if ( i < ARRAY_SIZE ( state -> addresses ) )		285446	3					
ANR	285477	Condition	i < ARRAY_SIZE ( state -> addresses )	236:6:6225:6257	285446	0	True				
ANR	285478	RelationalExpression	i < ARRAY_SIZE ( state -> addresses )		285446	0		<			
ANR	285479	Identifier	i		285446	0					
ANR	285480	CallExpression	ARRAY_SIZE ( state -> addresses )		285446	1					
ANR	285481	Callee	ARRAY_SIZE		285446	0					
ANR	285482	Identifier	ARRAY_SIZE		285446	0					
ANR	285483	ArgumentList	state -> addresses		285446	1					
ANR	285484	Argument	state -> addresses		285446	0					
ANR	285485	PtrMemberAccess	state -> addresses		285446	0					
ANR	285486	Identifier	state		285446	0					
ANR	285487	Identifier	addresses		285446	1					
ANR	285488	CompoundStatement		6:4:135:135	285446	1					
ANR	285489	ExpressionStatement	state -> addresses [ i ] = addr	238:6:6272:6298	285446	0	True				
ANR	285490	AssignmentExpression	state -> addresses [ i ] = addr		285446	0		=			
ANR	285491	ArrayIndexing	state -> addresses [ i ]		285446	0					
ANR	285492	PtrMemberAccess	state -> addresses		285446	0					
ANR	285493	Identifier	state		285446	0					
ANR	285494	Identifier	addresses		285446	1					
ANR	285495	Identifier	i		285446	1					
ANR	285496	Identifier	addr		285446	1					
ANR	285497	ExpressionStatement	++ state -> acnt	239:6:6306:6319	285446	1	True				
ANR	285498	UnaryExpression	++ state -> acnt		285446	0					
ANR	285499	IncDec	++		285446	0					
ANR	285500	PtrMemberAccess	state -> acnt		285446	1					
ANR	285501	Identifier	state		285446	0					
ANR	285502	Identifier	acnt		285446	1					
ANR	285503	ExpressionStatement	j = i * 3	240:6:6327:6334	285446	2	True				
ANR	285504	AssignmentExpression	j = i * 3		285446	0		=			
ANR	285505	Identifier	j		285446	0					
ANR	285506	MultiplicativeExpression	i * 3		285446	1		*			
ANR	285507	Identifier	i		285446	0					
ANR	285508	PrimaryExpression	3		285446	1					
ANR	285509	ExpressionStatement	id [ j + 0 ] = '@'	241:6:6342:6355	285446	3	True				
ANR	285510	AssignmentExpression	id [ j + 0 ] = '@'		285446	0		=			
ANR	285511	ArrayIndexing	id [ j + 0 ]		285446	0					
ANR	285512	Identifier	id		285446	0					
ANR	285513	AdditiveExpression	j + 0		285446	1		+			
ANR	285514	Identifier	j		285446	0					
ANR	285515	PrimaryExpression	0		285446	1					
ANR	285516	PrimaryExpression	'@'		285446	1					
ANR	285517	ExpressionStatement	id [ j + 1 ] = '0' + i	242:6:6363:6378	285446	4	True				
ANR	285518	AssignmentExpression	id [ j + 1 ] = '0' + i		285446	0		=			
ANR	285519	ArrayIndexing	id [ j + 1 ]		285446	0					
ANR	285520	Identifier	id		285446	0					
ANR	285521	AdditiveExpression	j + 1		285446	1		+			
ANR	285522	Identifier	j		285446	0					
ANR	285523	PrimaryExpression	1		285446	1					
ANR	285524	AdditiveExpression	'0' + i		285446	1		+			
ANR	285525	PrimaryExpression	'0'		285446	0					
ANR	285526	Identifier	i		285446	1					
ANR	285527	ExpressionStatement	id [ j + 2 ] = 0	243:6:6386:6397	285446	5	True				
ANR	285528	AssignmentExpression	id [ j + 2 ] = 0		285446	0		=			
ANR	285529	ArrayIndexing	id [ j + 2 ]		285446	0					
ANR	285530	Identifier	id		285446	0					
ANR	285531	AdditiveExpression	j + 2		285446	1		+			
ANR	285532	Identifier	j		285446	0					
ANR	285533	PrimaryExpression	2		285446	1					
ANR	285534	PrimaryExpression	0		285446	1					
ANR	285535	ReturnStatement	return id + j ;	245:6:6406:6419	285446	6	True				
ANR	285536	AdditiveExpression	id + j		285446	0		+			
ANR	285537	Identifier	id		285446	0					
ANR	285538	Identifier	j		285446	1					
ANR	285539	ReturnStatement	"return """" ;"	247:2:6429:6438	285446	4	True				
ANR	285540	PrimaryExpression	""""""		285446	0					
ANR	285541	ReturnType	static const char *		285446	1					
ANR	285542	Identifier	post_address		285446	2					
ANR	285543	ParameterList	"struct arcDisState * state , int addr"		285446	3					
ANR	285544	Parameter	struct arcDisState * state	231:14:6090:6115	285446	0	True				
ANR	285545	ParameterType	struct arcDisState *		285446	0					
ANR	285546	Identifier	state		285446	1					
ANR	285547	Parameter	int addr	231:42:6118:6125	285446	1	True				
ANR	285548	ParameterType	int		285446	0					
ANR	285549	Identifier	addr		285446	1					
ANR	285550	CFGEntryNode	ENTRY		285446		True				
ANR	285551	CFGExitNode	EXIT		285446		True				
ANR	285552	Symbol	ARRAY_SIZE		285446						
ANR	285553	Symbol	* state -> addresses		285446						
ANR	285554	Symbol	* id		285446						
ANR	285555	Symbol	i		285446						
ANR	285556	Symbol	j		285446						
ANR	285557	Symbol	state -> acnt		285446						
ANR	285558	Symbol	* * state		285446						
ANR	285559	Symbol	* state		285446						
ANR	285560	Symbol	* i		285446						
ANR	285561	Symbol	* j		285446						
ANR	285562	Symbol	state		285446						
ANR	285563	Symbol	id		285446						
ANR	285564	Symbol	addr		285446						
ANR	285565	Symbol	state -> addresses		285446						
ANR	285566	Function	arc_sprintf	250:0:6443:9518							
ANR	285567	FunctionDef	"arc_sprintf (struct arcDisState * state , char * buf , const char * format)"		285566	0					
ANR	285568	CompoundStatement		252:0:6531:9518	285566	0					
ANR	285569	IdentifierDeclStatement	char * bp ;	253:2:6535:6543	285566	0	True				
ANR	285570	IdentifierDecl	* bp		285566	0					
ANR	285571	IdentifierDeclType	char *		285566	0					
ANR	285572	Identifier	bp		285566	1					
ANR	285573	IdentifierDeclStatement	const char * p ;	254:2:6547:6560	285566	1	True				
ANR	285574	IdentifierDecl	* p		285566	0					
ANR	285575	IdentifierDeclType	const char *		285566	0					
ANR	285576	Identifier	p		285566	1					
ANR	285577	IdentifierDeclStatement	"int size , leading_zero , regMap [ 2 ] ;"	255:2:6564:6597	285566	2	True				
ANR	285578	IdentifierDecl	size		285566	0					
ANR	285579	IdentifierDeclType	int		285566	0					
ANR	285580	Identifier	size		285566	1					
ANR	285581	IdentifierDecl	leading_zero		285566	1					
ANR	285582	IdentifierDeclType	int		285566	0					
ANR	285583	Identifier	leading_zero		285566	1					
ANR	285584	IdentifierDecl	regMap [ 2 ]		285566	2					
ANR	285585	IdentifierDeclType	int [ 2 ]		285566	0					
ANR	285586	Identifier	regMap		285566	1					
ANR	285587	PrimaryExpression	2		285566	2					
ANR	285588	IdentifierDeclStatement	va_list ap ;	256:2:6601:6611	285566	3	True				
ANR	285589	IdentifierDecl	ap		285566	0					
ANR	285590	IdentifierDeclType	va_list		285566	0					
ANR	285591	Identifier	ap		285566	1					
ANR	285592	ExpressionStatement	"va_start ( ap , format )"	258:2:6616:6637	285566	4	True				
ANR	285593	CallExpression	"va_start ( ap , format )"		285566	0					
ANR	285594	Callee	va_start		285566	0					
ANR	285595	Identifier	va_start		285566	0					
ANR	285596	ArgumentList	ap		285566	1					
ANR	285597	Argument	ap		285566	0					
ANR	285598	Identifier	ap		285566	0					
ANR	285599	Argument	format		285566	1					
ANR	285600	Identifier	format		285566	0					
ANR	285601	ExpressionStatement	bp = buf	260:2:6642:6650	285566	5	True				
ANR	285602	AssignmentExpression	bp = buf		285566	0		=			
ANR	285603	Identifier	bp		285566	0					
ANR	285604	Identifier	buf		285566	1					
ANR	285605	ExpressionStatement	* bp = 0	261:2:6654:6661	285566	6	True				
ANR	285606	AssignmentExpression	* bp = 0		285566	0		=			
ANR	285607	UnaryOperationExpression	* bp		285566	0					
ANR	285608	UnaryOperator	*		285566	0					
ANR	285609	Identifier	bp		285566	1					
ANR	285610	PrimaryExpression	0		285566	1					
ANR	285611	ExpressionStatement	p = format	262:2:6665:6675	285566	7	True				
ANR	285612	AssignmentExpression	p = format		285566	0		=			
ANR	285613	Identifier	p		285566	0					
ANR	285614	Identifier	format		285566	1					
ANR	285615	ExpressionStatement	regMap [ 0 ] = 0	263:2:6679:6692	285566	8	True				
ANR	285616	AssignmentExpression	regMap [ 0 ] = 0		285566	0		=			
ANR	285617	ArrayIndexing	regMap [ 0 ]		285566	0					
ANR	285618	Identifier	regMap		285566	0					
ANR	285619	PrimaryExpression	0		285566	1					
ANR	285620	PrimaryExpression	0		285566	1					
ANR	285621	ExpressionStatement	regMap [ 1 ] = 0	264:2:6696:6709	285566	9	True				
ANR	285622	AssignmentExpression	regMap [ 1 ] = 0		285566	0		=			
ANR	285623	ArrayIndexing	regMap [ 1 ]		285566	0					
ANR	285624	Identifier	regMap		285566	0					
ANR	285625	PrimaryExpression	1		285566	1					
ANR	285626	PrimaryExpression	0		285566	1					
ANR	285627	WhileStatement	while ( 1 )		285566	10					
ANR	285628	Condition	1	266:9:6721:6721	285566	0	True				
ANR	285629	PrimaryExpression	1		285566	0					
ANR	285630	CompoundStatement		15:12:192:192	285566	1					
ANR	285631	SwitchStatement	switch ( * p ++ )		285566	0					
ANR	285632	Condition	* p ++	267:11:6737:6740	285566	0	True				
ANR	285633	UnaryOperationExpression	* p ++		285566	0					
ANR	285634	UnaryOperator	*		285566	0					
ANR	285635	PostIncDecOperationExpression	p ++		285566	1					
ANR	285636	Identifier	p		285566	0					
ANR	285637	IncDec	++		285566	1					
ANR	285638	CompoundStatement		16:17:211:211	285566	1					
ANR	285639	Label	case 0 :	268:3:6748:6754	285566	0	True				
ANR	285640	GotoStatement	goto DOCOMM ;	269:4:6760:6771	285566	1	True				
ANR	285641	Identifier	DOCOMM		285566	0					
ANR	285642	Label	default :	270:3:6791:6798	285566	2	True				
ANR	285643	Identifier	default		285566	0					
ANR	285644	ExpressionStatement	* bp ++ = p [ - 1 ]	271:4:6804:6817	285566	3	True				
ANR	285645	AssignmentExpression	* bp ++ = p [ - 1 ]		285566	0		=			
ANR	285646	UnaryOperationExpression	* bp ++		285566	0					
ANR	285647	UnaryOperator	*		285566	0					
ANR	285648	PostIncDecOperationExpression	bp ++		285566	1					
ANR	285649	Identifier	bp		285566	0					
ANR	285650	IncDec	++		285566	1					
ANR	285651	ArrayIndexing	p [ - 1 ]		285566	1					
ANR	285652	Identifier	p		285566	0					
ANR	285653	UnaryOperationExpression	- 1		285566	1					
ANR	285654	UnaryOperator	-		285566	0					
ANR	285655	PrimaryExpression	1		285566	1					
ANR	285656	BreakStatement	break ;	272:4:6823:6828	285566	4	True				
ANR	285657	Label	case '%' :	273:3:6833:6841	285566	5	True				
ANR	285658	ExpressionStatement	size = 0	274:4:6847:6855	285566	6	True				
ANR	285659	AssignmentExpression	size = 0		285566	0		=			
ANR	285660	Identifier	size		285566	0					
ANR	285661	PrimaryExpression	0		285566	1					
ANR	285662	ExpressionStatement	leading_zero = 0	275:4:6861:6877	285566	7	True				
ANR	285663	AssignmentExpression	leading_zero = 0		285566	0		=			
ANR	285664	Identifier	leading_zero		285566	0					
ANR	285665	PrimaryExpression	0		285566	1					
ANR	285666	Label	RETRY :	276:3:6882:6887	285566	8	True				
ANR	285667	Identifier	RETRY		285566	0					
ANR	285668	ExpressionStatement		276:9:6888:6888	285566	9	True				
ANR	285669	SwitchStatement	switch ( * p ++ )		285566	10					
ANR	285670	Condition	* p ++	277:12:6902:6905	285566	0	True				
ANR	285671	UnaryOperationExpression	* p ++		285566	0					
ANR	285672	UnaryOperator	*		285566	0					
ANR	285673	PostIncDecOperationExpression	p ++		285566	1					
ANR	285674	Identifier	p		285566	0					
ANR	285675	IncDec	++		285566	1					
ANR	285676	CompoundStatement		26:18:376:376	285566	1					
ANR	285677	Label	case '0' :	278:4:6914:6922	285566	0	True				
ANR	285678	Label	case '1' :	279:4:6928:6936	285566	1	True				
ANR	285679	Label	case '2' :	280:4:6942:6950	285566	2	True				
ANR	285680	Label	case '3' :	281:4:6956:6964	285566	3	True				
ANR	285681	Label	case '4' :	282:4:6970:6978	285566	4	True				
ANR	285682	Label	case '5' :	283:4:6984:6992	285566	5	True				
ANR	285683	Label	case '6' :	284:4:6998:7006	285566	6	True				
ANR	285684	Label	case '7' :	285:4:7012:7020	285566	7	True				
ANR	285685	Label	case '8' :	286:4:7026:7034	285566	8	True				
ANR	285686	Label	case '9' :	287:4:7040:7048	285566	9	True				
ANR	285687	CompoundStatement		36:14:518:518	285566	10					
ANR	285688	ExpressionStatement	size = p [ - 1 ] - '0'	289:5:7075:7093	285566	0	True				
ANR	285689	AssignmentExpression	size = p [ - 1 ] - '0'		285566	0		=			
ANR	285690	Identifier	size		285566	0					
ANR	285691	AdditiveExpression	p [ - 1 ] - '0'		285566	1		-			
ANR	285692	ArrayIndexing	p [ - 1 ]		285566	0					
ANR	285693	Identifier	p		285566	0					
ANR	285694	UnaryOperationExpression	- 1		285566	1					
ANR	285695	UnaryOperator	-		285566	0					
ANR	285696	PrimaryExpression	1		285566	1					
ANR	285697	PrimaryExpression	'0'		285566	1					
ANR	285698	IfStatement	if ( size == 0 )		285566	1					
ANR	285699	Condition	size == 0	290:9:7104:7112	285566	0	True				
ANR	285700	EqualityExpression	size == 0		285566	0		==			
ANR	285701	Identifier	size		285566	0					
ANR	285702	PrimaryExpression	0		285566	1					
ANR	285703	CompoundStatement		39:20:583:583	285566	1					
ANR	285704	ExpressionStatement	leading_zero = 1	291:6:7123:7139	285566	0	True				
ANR	285705	AssignmentExpression	leading_zero = 1		285566	0		=			
ANR	285706	Identifier	leading_zero		285566	0					
ANR	285707	PrimaryExpression	1		285566	1					
ANR	285708	WhileStatement	while ( * p >= '0' && * p <= '9' )		285566	2					
ANR	285709	Condition	* p >= '0' && * p <= '9'	293:12:7176:7197	285566	0	True				
ANR	285710	AndExpression	* p >= '0' && * p <= '9'		285566	0		&&			
ANR	285711	RelationalExpression	* p >= '0'		285566	0		>=			
ANR	285712	UnaryOperationExpression	* p		285566	0					
ANR	285713	UnaryOperator	*		285566	0					
ANR	285714	Identifier	p		285566	1					
ANR	285715	PrimaryExpression	'0'		285566	1					
ANR	285716	RelationalExpression	* p <= '9'		285566	1		<=			
ANR	285717	UnaryOperationExpression	* p		285566	0					
ANR	285718	UnaryOperator	*		285566	0					
ANR	285719	Identifier	p		285566	1					
ANR	285720	PrimaryExpression	'9'		285566	1					
ANR	285721	CompoundStatement		42:36:668:668	285566	1					
ANR	285722	ExpressionStatement	size = size * 10 + * p - '0'	294:6:7208:7235	285566	0	True				
ANR	285723	AssignmentExpression	size = size * 10 + * p - '0'		285566	0		=			
ANR	285724	Identifier	size		285566	0					
ANR	285725	AdditiveExpression	size * 10 + * p - '0'		285566	1		+			
ANR	285726	MultiplicativeExpression	size * 10		285566	0		*			
ANR	285727	Identifier	size		285566	0					
ANR	285728	PrimaryExpression	10		285566	1					
ANR	285729	AdditiveExpression	* p - '0'		285566	1		-			
ANR	285730	UnaryOperationExpression	* p		285566	0					
ANR	285731	UnaryOperator	*		285566	0					
ANR	285732	Identifier	p		285566	1					
ANR	285733	PrimaryExpression	'0'		285566	1					
ANR	285734	ExpressionStatement	p ++	295:6:7243:7246	285566	1	True				
ANR	285735	PostIncDecOperationExpression	p ++		285566	0					
ANR	285736	Identifier	p		285566	0					
ANR	285737	IncDec	++		285566	1					
ANR	285738	GotoStatement	goto RETRY ;	297:5:7260:7270	285566	3	True				
ANR	285739	Identifier	RETRY		285566	0					
ANR	285740	Statement	define	299:1:7279:7284	285566	11	True				
ANR	285741	Statement	inc_bp	299:8:7286:7291	285566	12	True				
ANR	285742	Statement	(	299:14:7292:7292	285566	13	True				
ANR	285743	Statement	)	299:15:7293:7293	285566	14	True				
ANR	285744	Statement	bp	299:17:7295:7296	285566	15	True				
ANR	285745	Statement	=	299:20:7298:7298	285566	16	True				
ANR	285746	Statement	bp	299:22:7300:7301	285566	17	True				
ANR	285747	Statement	+	299:25:7303:7303	285566	18	True				
ANR	285748	Statement	strlen	299:27:7305:7310	285566	19	True				
ANR	285749	Statement	(	299:34:7312:7312	285566	20	True				
ANR	285750	Statement	bp	299:35:7313:7314	285566	21	True				
ANR	285751	Statement	)	299:37:7315:7315	285566	22	True				
ANR	285752	Label	case 'h' :	301:3:7321:7329	285566	23	True				
ANR	285753	CompoundStatement		52:7:813:842	285566	24					
ANR	285754	IdentifierDeclStatement	"unsigned u = va_arg ( ap , int ) ;"	303:7:7345:7374	285566	0	True				
ANR	285755	IdentifierDecl	"u = va_arg ( ap , int )"		285566	0					
ANR	285756	IdentifierDeclType	unsigned		285566	0					
ANR	285757	Identifier	u		285566	1					
ANR	285758	AssignmentExpression	"u = va_arg ( ap , int )"		285566	2		=			
ANR	285759	Identifier	u		285566	0					
ANR	285760	CallExpression	"va_arg ( ap , int )"		285566	1					
ANR	285761	Callee	va_arg		285566	0					
ANR	285762	Identifier	va_arg		285566	0					
ANR	285763	ArgumentList	ap		285566	1					
ANR	285764	Argument	ap		285566	0					
ANR	285765	Identifier	ap		285566	0					
ANR	285766	Argument	int		285566	1					
ANR	285767	Identifier	int		285566	0					
ANR	285768	ExpressionStatement	"sprintf ( bp , ""0x%x"" , u )"	304:4:7380:7403	285566	1	True				
ANR	285769	CallExpression	"sprintf ( bp , ""0x%x"" , u )"		285566	0					
ANR	285770	Callee	sprintf		285566	0					
ANR	285771	Identifier	sprintf		285566	0					
ANR	285772	ArgumentList	bp		285566	1					
ANR	285773	Argument	bp		285566	0					
ANR	285774	Identifier	bp		285566	0					
ANR	285775	Argument	"""0x%x"""		285566	1					
ANR	285776	PrimaryExpression	"""0x%x"""		285566	0					
ANR	285777	Argument	u		285566	2					
ANR	285778	Identifier	u		285566	0					
ANR	285779	ExpressionStatement	inc_bp ( )	305:7:7412:7421	285566	2	True				
ANR	285780	CallExpression	inc_bp ( )		285566	0					
ANR	285781	Callee	inc_bp		285566	0					
ANR	285782	Identifier	inc_bp		285566	0					
ANR	285783	ArgumentList			285566	1					
ANR	285784	BreakStatement	break ;	307:5:7435:7440	285566	25	True				
ANR	285785	Label	case 'X' :	308:3:7445:7453	285566	26	True				
ANR	285786	Label	case 'x' :	308:13:7455:7463	285566	27	True				
ANR	285787	CompoundStatement		59:7:947:973	285566	28					
ANR	285788	IdentifierDeclStatement	"int val = va_arg ( ap , int ) ;"	310:7:7479:7505	285566	0	True				
ANR	285789	IdentifierDecl	"val = va_arg ( ap , int )"		285566	0					
ANR	285790	IdentifierDeclType	int		285566	0					
ANR	285791	Identifier	val		285566	1					
ANR	285792	AssignmentExpression	"val = va_arg ( ap , int )"		285566	2		=			
ANR	285793	Identifier	val		285566	0					
ANR	285794	CallExpression	"va_arg ( ap , int )"		285566	1					
ANR	285795	Callee	va_arg		285566	0					
ANR	285796	Identifier	va_arg		285566	0					
ANR	285797	ArgumentList	ap		285566	1					
ANR	285798	Argument	ap		285566	0					
ANR	285799	Identifier	ap		285566	0					
ANR	285800	Argument	int		285566	1					
ANR	285801	Identifier	int		285566	0					
ANR	285802	IfStatement	if ( size != 0 )		285566	1					
ANR	285803	Condition	size != 0	312:11:7519:7527	285566	0	True				
ANR	285804	EqualityExpression	size != 0		285566	0		!=			
ANR	285805	Identifier	size		285566	0					
ANR	285806	PrimaryExpression	0		285566	1					
ANR	285807	CompoundStatement		61:22:998:998	285566	1					
ANR	285808	IfStatement	if ( leading_zero )		285566	0					
ANR	285809	Condition	leading_zero	313:12:7544:7555	285566	0	True				
ANR	285810	Identifier	leading_zero		285566	0					
ANR	285811	CompoundStatement		62:26:1026:1026	285566	1					
ANR	285812	ExpressionStatement	"sprintf ( bp , ""%0*x"" , size , val )"	314:9:7569:7600	285566	0	True				
ANR	285813	CallExpression	"sprintf ( bp , ""%0*x"" , size , val )"		285566	0					
ANR	285814	Callee	sprintf		285566	0					
ANR	285815	Identifier	sprintf		285566	0					
ANR	285816	ArgumentList	bp		285566	1					
ANR	285817	Argument	bp		285566	0					
ANR	285818	Identifier	bp		285566	0					
ANR	285819	Argument	"""%0*x"""		285566	1					
ANR	285820	PrimaryExpression	"""%0*x"""		285566	0					
ANR	285821	Argument	size		285566	2					
ANR	285822	Identifier	size		285566	0					
ANR	285823	Argument	val		285566	3					
ANR	285824	Identifier	val		285566	0					
ANR	285825	ElseStatement	else		285566	0					
ANR	285826	CompoundStatement		64:15:1085:1085	285566	0					
ANR	285827	ExpressionStatement	"sprintf ( bp , ""%*x"" , size , val )"	316:9:7628:7658	285566	0	True				
ANR	285828	CallExpression	"sprintf ( bp , ""%*x"" , size , val )"		285566	0					
ANR	285829	Callee	sprintf		285566	0					
ANR	285830	Identifier	sprintf		285566	0					
ANR	285831	ArgumentList	bp		285566	1					
ANR	285832	Argument	bp		285566	0					
ANR	285833	Identifier	bp		285566	0					
ANR	285834	Argument	"""%*x"""		285566	1					
ANR	285835	PrimaryExpression	"""%*x"""		285566	0					
ANR	285836	Argument	size		285566	2					
ANR	285837	Identifier	size		285566	0					
ANR	285838	Argument	val		285566	3					
ANR	285839	Identifier	val		285566	0					
ANR	285840	ElseStatement	else		285566	0					
ANR	285841	CompoundStatement		67:14:1152:1152	285566	0					
ANR	285842	ExpressionStatement	"sprintf ( bp , ""%x"" , val )"	319:8:7694:7717	285566	0	True				
ANR	285843	CallExpression	"sprintf ( bp , ""%x"" , val )"		285566	0					
ANR	285844	Callee	sprintf		285566	0					
ANR	285845	Identifier	sprintf		285566	0					
ANR	285846	ArgumentList	bp		285566	1					
ANR	285847	Argument	bp		285566	0					
ANR	285848	Identifier	bp		285566	0					
ANR	285849	Argument	"""%x"""		285566	1					
ANR	285850	PrimaryExpression	"""%x"""		285566	0					
ANR	285851	Argument	val		285566	2					
ANR	285852	Identifier	val		285566	0					
ANR	285853	ExpressionStatement	inc_bp ( )	321:7:7735:7744	285566	2	True				
ANR	285854	CallExpression	inc_bp ( )		285566	0					
ANR	285855	Callee	inc_bp		285566	0					
ANR	285856	Identifier	inc_bp		285566	0					
ANR	285857	ArgumentList			285566	1					
ANR	285858	BreakStatement	break ;	323:5:7758:7763	285566	29	True				
ANR	285859	Label	case 'd' :	324:3:7768:7776	285566	30	True				
ANR	285860	CompoundStatement		75:7:1260:1286	285566	31					
ANR	285861	IdentifierDeclStatement	"int val = va_arg ( ap , int ) ;"	326:7:7792:7818	285566	0	True				
ANR	285862	IdentifierDecl	"val = va_arg ( ap , int )"		285566	0					
ANR	285863	IdentifierDeclType	int		285566	0					
ANR	285864	Identifier	val		285566	1					
ANR	285865	AssignmentExpression	"val = va_arg ( ap , int )"		285566	2		=			
ANR	285866	Identifier	val		285566	0					
ANR	285867	CallExpression	"va_arg ( ap , int )"		285566	1					
ANR	285868	Callee	va_arg		285566	0					
ANR	285869	Identifier	va_arg		285566	0					
ANR	285870	ArgumentList	ap		285566	1					
ANR	285871	Argument	ap		285566	0					
ANR	285872	Identifier	ap		285566	0					
ANR	285873	Argument	int		285566	1					
ANR	285874	Identifier	int		285566	0					
ANR	285875	IfStatement	if ( size != 0 )		285566	1					
ANR	285876	Condition	size != 0	328:11:7832:7840	285566	0	True				
ANR	285877	EqualityExpression	size != 0		285566	0		!=			
ANR	285878	Identifier	size		285566	0					
ANR	285879	PrimaryExpression	0		285566	1					
ANR	285880	CompoundStatement		77:22:1311:1311	285566	1					
ANR	285881	ExpressionStatement	"sprintf ( bp , ""%*d"" , size , val )"	329:8:7853:7883	285566	0	True				
ANR	285882	CallExpression	"sprintf ( bp , ""%*d"" , size , val )"		285566	0					
ANR	285883	Callee	sprintf		285566	0					
ANR	285884	Identifier	sprintf		285566	0					
ANR	285885	ArgumentList	bp		285566	1					
ANR	285886	Argument	bp		285566	0					
ANR	285887	Identifier	bp		285566	0					
ANR	285888	Argument	"""%*d"""		285566	1					
ANR	285889	PrimaryExpression	"""%*d"""		285566	0					
ANR	285890	Argument	size		285566	2					
ANR	285891	Identifier	size		285566	0					
ANR	285892	Argument	val		285566	3					
ANR	285893	Identifier	val		285566	0					
ANR	285894	ElseStatement	else		285566	0					
ANR	285895	CompoundStatement		79:14:1367:1367	285566	0					
ANR	285896	ExpressionStatement	"sprintf ( bp , ""%d"" , val )"	331:8:7909:7932	285566	0	True				
ANR	285897	CallExpression	"sprintf ( bp , ""%d"" , val )"		285566	0					
ANR	285898	Callee	sprintf		285566	0					
ANR	285899	Identifier	sprintf		285566	0					
ANR	285900	ArgumentList	bp		285566	1					
ANR	285901	Argument	bp		285566	0					
ANR	285902	Identifier	bp		285566	0					
ANR	285903	Argument	"""%d"""		285566	1					
ANR	285904	PrimaryExpression	"""%d"""		285566	0					
ANR	285905	Argument	val		285566	2					
ANR	285906	Identifier	val		285566	0					
ANR	285907	ExpressionStatement	inc_bp ( )	333:7:7950:7959	285566	2	True				
ANR	285908	CallExpression	inc_bp ( )		285566	0					
ANR	285909	Callee	inc_bp		285566	0					
ANR	285910	Identifier	inc_bp		285566	0					
ANR	285911	ArgumentList			285566	1					
ANR	285912	BreakStatement	break ;	335:5:7973:7978	285566	32	True				
ANR	285913	Label	case 'r' :	336:3:7983:7991	285566	33	True				
ANR	285914	CompoundStatement		88:7:1499:1525	285566	34					
ANR	285915	IdentifierDeclStatement	"int val = va_arg ( ap , int ) ;"	339:7:8031:8057	285566	0	True				
ANR	285916	IdentifierDecl	"val = va_arg ( ap , int )"		285566	0					
ANR	285917	IdentifierDeclType	int		285566	0					
ANR	285918	Identifier	val		285566	1					
ANR	285919	AssignmentExpression	"val = va_arg ( ap , int )"		285566	2		=			
ANR	285920	Identifier	val		285566	0					
ANR	285921	CallExpression	"va_arg ( ap , int )"		285566	1					
ANR	285922	Callee	va_arg		285566	0					
ANR	285923	Identifier	va_arg		285566	0					
ANR	285924	ArgumentList	ap		285566	1					
ANR	285925	Argument	ap		285566	0					
ANR	285926	Identifier	ap		285566	0					
ANR	285927	Argument	int		285566	1					
ANR	285928	Identifier	int		285566	0					
ANR	285929	Statement	define	341:1:8061:8066	285566	1	True				
ANR	285930	Statement	REG2NAME	341:8:8068:8075	285566	2	True				
ANR	285931	Statement	(	341:16:8076:8076	285566	3	True				
ANR	285932	Statement	num	341:17:8077:8079	285566	4	True				
ANR	285933	Statement	","	341:20:8080:8080	285566	5	True				
ANR	285934	Statement	name	341:22:8082:8085	285566	6	True				
ANR	285935	Statement	)	341:26:8086:8086	285566	7	True				
ANR	285936	Label	case num :	341:28:8088:8096	285566	8	True				
ANR	285937	Identifier	num		285566	0					
ANR	285938	Statement	sprintf	341:38:8098:8104	285566	9	True				
ANR	285939	Statement	(	341:46:8106:8106	285566	10	True				
ANR	285940	Statement	bp	341:47:8107:8108	285566	11	True				
ANR	285941	Statement	","	341:49:8109:8109	285566	12	True				
ANR	285942	Statement	""""""	341:51:8111:8112	285566	13	True				
ANR	285943	Statement	name	341:53:8113:8116	285566	14	True				
ANR	285944	Statement	)	341:57:8117:8117	285566	15	True				
ANR	285945	ExpressionStatement		341:58:8118:8118	285566	16	True				
ANR	285946	ExpressionStatement	regMap [ ( ( num ) < 32 ) ? 0 : 1 ] |= 1 << ( ( num ) - ( ( ( num ) < 32 ) ? 0 : 32 ) )	342:2:8124:8194	285566	17	True				
ANR	285947	AssignmentExpression	regMap [ ( ( num ) < 32 ) ? 0 : 1 ] |= 1 << ( ( num ) - ( ( ( num ) < 32 ) ? 0 : 32 ) )		285566	0		|=			
ANR	285948	ArrayIndexing	regMap [ ( ( num ) < 32 ) ? 0 : 1 ]		285566	0					
ANR	285949	Identifier	regMap		285566	0					
ANR	285950	ConditionalExpression	( ( num ) < 32 ) ? 0 : 1		285566	1					
ANR	285951	Condition	( num ) < 32		285566	0					
ANR	285952	RelationalExpression	( num ) < 32		285566	0		<			
ANR	285953	Identifier	num		285566	0					
ANR	285954	PrimaryExpression	32		285566	1					
ANR	285955	PrimaryExpression	0		285566	1					
ANR	285956	PrimaryExpression	1		285566	2					
ANR	285957	ShiftExpression	1 << ( ( num ) - ( ( ( num ) < 32 ) ? 0 : 32 ) )		285566	1		<<			
ANR	285958	PrimaryExpression	1		285566	0					
ANR	285959	CastExpression	( num ) - ( ( ( num ) < 32 ) ? 0 : 32 )		285566	1					
ANR	285960	CastTarget	num		285566	0					
ANR	285961	UnaryOperationExpression	- ( ( ( num ) < 32 ) ? 0 : 32 )		285566	1					
ANR	285962	UnaryOperator	-		285566	0					
ANR	285963	ConditionalExpression	( ( num ) < 32 ) ? 0 : 32		285566	1					
ANR	285964	Condition	( num ) < 32		285566	0					
ANR	285965	RelationalExpression	( num ) < 32		285566	0		<			
ANR	285966	Identifier	num		285566	0					
ANR	285967	PrimaryExpression	32		285566	1					
ANR	285968	PrimaryExpression	0		285566	1					
ANR	285969	PrimaryExpression	32		285566	2					
ANR	285970	BreakStatement	break ;	342:74:8196:8201	285566	18	True				
ANR	285971	SwitchStatement	switch ( val )		285566	19					
ANR	285972	Condition	val	343:15:8218:8220	285566	0	True				
ANR	285973	Identifier	val		285566	0					
ANR	285974	CompoundStatement		93:2:1693:1693	285566	1					
ANR	285975	ExpressionStatement	"REG2NAME ( 26 , ""gp"" )"	345:4:8231:8250	285566	0	True				
ANR	285976	CallExpression	"REG2NAME ( 26 , ""gp"" )"		285566	0					
ANR	285977	Callee	REG2NAME		285566	0					
ANR	285978	Identifier	REG2NAME		285566	0					
ANR	285979	ArgumentList	26		285566	1					
ANR	285980	Argument	26		285566	0					
ANR	285981	PrimaryExpression	26		285566	0					
ANR	285982	Argument	"""gp"""		285566	1					
ANR	285983	PrimaryExpression	"""gp"""		285566	0					
ANR	285984	ExpressionStatement	"REG2NAME ( 27 , ""fp"" )"	346:4:8256:8275	285566	1	True				
ANR	285985	CallExpression	"REG2NAME ( 27 , ""fp"" )"		285566	0					
ANR	285986	Callee	REG2NAME		285566	0					
ANR	285987	Identifier	REG2NAME		285566	0					
ANR	285988	ArgumentList	27		285566	1					
ANR	285989	Argument	27		285566	0					
ANR	285990	PrimaryExpression	27		285566	0					
ANR	285991	Argument	"""fp"""		285566	1					
ANR	285992	PrimaryExpression	"""fp"""		285566	0					
ANR	285993	ExpressionStatement	"REG2NAME ( 28 , ""sp"" )"	347:4:8281:8300	285566	2	True				
ANR	285994	CallExpression	"REG2NAME ( 28 , ""sp"" )"		285566	0					
ANR	285995	Callee	REG2NAME		285566	0					
ANR	285996	Identifier	REG2NAME		285566	0					
ANR	285997	ArgumentList	28		285566	1					
ANR	285998	Argument	28		285566	0					
ANR	285999	PrimaryExpression	28		285566	0					
ANR	286000	Argument	"""sp"""		285566	1					
ANR	286001	PrimaryExpression	"""sp"""		285566	0					
ANR	286002	ExpressionStatement	"REG2NAME ( 29 , ""ilink1"" )"	348:4:8306:8329	285566	3	True				
ANR	286003	CallExpression	"REG2NAME ( 29 , ""ilink1"" )"		285566	0					
ANR	286004	Callee	REG2NAME		285566	0					
ANR	286005	Identifier	REG2NAME		285566	0					
ANR	286006	ArgumentList	29		285566	1					
ANR	286007	Argument	29		285566	0					
ANR	286008	PrimaryExpression	29		285566	0					
ANR	286009	Argument	"""ilink1"""		285566	1					
ANR	286010	PrimaryExpression	"""ilink1"""		285566	0					
ANR	286011	ExpressionStatement	"REG2NAME ( 30 , ""ilink2"" )"	349:4:8335:8358	285566	4	True				
ANR	286012	CallExpression	"REG2NAME ( 30 , ""ilink2"" )"		285566	0					
ANR	286013	Callee	REG2NAME		285566	0					
ANR	286014	Identifier	REG2NAME		285566	0					
ANR	286015	ArgumentList	30		285566	1					
ANR	286016	Argument	30		285566	0					
ANR	286017	PrimaryExpression	30		285566	0					
ANR	286018	Argument	"""ilink2"""		285566	1					
ANR	286019	PrimaryExpression	"""ilink2"""		285566	0					
ANR	286020	ExpressionStatement	"REG2NAME ( 31 , ""blink"" )"	350:4:8364:8386	285566	5	True				
ANR	286021	CallExpression	"REG2NAME ( 31 , ""blink"" )"		285566	0					
ANR	286022	Callee	REG2NAME		285566	0					
ANR	286023	Identifier	REG2NAME		285566	0					
ANR	286024	ArgumentList	31		285566	1					
ANR	286025	Argument	31		285566	0					
ANR	286026	PrimaryExpression	31		285566	0					
ANR	286027	Argument	"""blink"""		285566	1					
ANR	286028	PrimaryExpression	"""blink"""		285566	0					
ANR	286029	ExpressionStatement	"REG2NAME ( 60 , ""lp_count"" )"	351:4:8392:8417	285566	6	True				
ANR	286030	CallExpression	"REG2NAME ( 60 , ""lp_count"" )"		285566	0					
ANR	286031	Callee	REG2NAME		285566	0					
ANR	286032	Identifier	REG2NAME		285566	0					
ANR	286033	ArgumentList	60		285566	1					
ANR	286034	Argument	60		285566	0					
ANR	286035	PrimaryExpression	60		285566	0					
ANR	286036	Argument	"""lp_count"""		285566	1					
ANR	286037	PrimaryExpression	"""lp_count"""		285566	0					
ANR	286038	Label	default :	352:2:8421:8428	285566	7	True				
ANR	286039	Identifier	default		285566	0					
ANR	286040	CompoundStatement		103:6:1910:1925	285566	8					
ANR	286041	IdentifierDeclStatement	const char * ext ;	354:6:8442:8457	285566	0	True				
ANR	286042	IdentifierDecl	* ext		285566	0					
ANR	286043	IdentifierDeclType	const char *		285566	0					
ANR	286044	Identifier	ext		285566	1					
ANR	286045	ExpressionStatement	"ext = core_reg_name ( state , val )"	356:6:8466:8498	285566	1	True				
ANR	286046	AssignmentExpression	"ext = core_reg_name ( state , val )"		285566	0		=			
ANR	286047	Identifier	ext		285566	0					
ANR	286048	CallExpression	"core_reg_name ( state , val )"		285566	1					
ANR	286049	Callee	core_reg_name		285566	0					
ANR	286050	Identifier	core_reg_name		285566	0					
ANR	286051	ArgumentList	state		285566	1					
ANR	286052	Argument	state		285566	0					
ANR	286053	Identifier	state		285566	0					
ANR	286054	Argument	val		285566	1					
ANR	286055	Identifier	val		285566	0					
ANR	286056	IfStatement	if ( ext )		285566	2					
ANR	286057	Condition	ext	357:10:8510:8512	285566	0	True				
ANR	286058	Identifier	ext		285566	0					
ANR	286059	CompoundStatement		106:15:1983:1983	285566	1					
ANR	286060	ExpressionStatement	"sprintf ( bp , ""%s"" , ext )"	358:7:8524:8547	285566	0	True				
ANR	286061	CallExpression	"sprintf ( bp , ""%s"" , ext )"		285566	0					
ANR	286062	Callee	sprintf		285566	0					
ANR	286063	Identifier	sprintf		285566	0					
ANR	286064	ArgumentList	bp		285566	1					
ANR	286065	Argument	bp		285566	0					
ANR	286066	Identifier	bp		285566	0					
ANR	286067	Argument	"""%s"""		285566	1					
ANR	286068	PrimaryExpression	"""%s"""		285566	0					
ANR	286069	Argument	ext		285566	2					
ANR	286070	Identifier	ext		285566	0					
ANR	286071	ElseStatement	else		285566	0					
ANR	286072	CompoundStatement		108:13:2030:2030	285566	0					
ANR	286073	ExpressionStatement	"sprintf ( bp , ""r%d"" , val )"	360:7:8571:8595	285566	0	True				
ANR	286074	CallExpression	"sprintf ( bp , ""r%d"" , val )"		285566	0					
ANR	286075	Callee	sprintf		285566	0					
ANR	286076	Identifier	sprintf		285566	0					
ANR	286077	ArgumentList	bp		285566	1					
ANR	286078	Argument	bp		285566	0					
ANR	286079	Identifier	bp		285566	0					
ANR	286080	Argument	"""r%d"""		285566	1					
ANR	286081	PrimaryExpression	"""r%d"""		285566	0					
ANR	286082	Argument	val		285566	2					
ANR	286083	Identifier	val		285566	0					
ANR	286084	BreakStatement	break ;	363:4:8615:8620	285566	9	True				
ANR	286085	ExpressionStatement	inc_bp ( )	365:7:8633:8642	285566	20	True				
ANR	286086	CallExpression	inc_bp ( )		285566	0					
ANR	286087	Callee	inc_bp		285566	0					
ANR	286088	Identifier	inc_bp		285566	0					
ANR	286089	ArgumentList			285566	1					
ANR	286090	BreakStatement	break ;	366:7:8651:8656	285566	35	True				
ANR	286091	Label	case 'a' :	368:3:8662:8670	285566	36	True				
ANR	286092	CompoundStatement		120:7:2182:2208	285566	37					
ANR	286093	IdentifierDeclStatement	"int val = va_arg ( ap , int ) ;"	371:7:8714:8740	285566	0	True				
ANR	286094	IdentifierDecl	"val = va_arg ( ap , int )"		285566	0					
ANR	286095	IdentifierDeclType	int		285566	0					
ANR	286096	Identifier	val		285566	1					
ANR	286097	AssignmentExpression	"val = va_arg ( ap , int )"		285566	2		=			
ANR	286098	Identifier	val		285566	0					
ANR	286099	CallExpression	"va_arg ( ap , int )"		285566	1					
ANR	286100	Callee	va_arg		285566	0					
ANR	286101	Identifier	va_arg		285566	0					
ANR	286102	ArgumentList	ap		285566	1					
ANR	286103	Argument	ap		285566	0					
ANR	286104	Identifier	ap		285566	0					
ANR	286105	Argument	int		285566	1					
ANR	286106	Identifier	int		285566	0					
ANR	286107	Statement	define	372:1:8743:8748	285566	1	True				
ANR	286108	Statement	AUXREG2NAME	372:8:8750:8760	285566	2	True				
ANR	286109	Statement	(	372:19:8761:8761	285566	3	True				
ANR	286110	Statement	num	372:20:8762:8764	285566	4	True				
ANR	286111	Statement	","	372:23:8765:8765	285566	5	True				
ANR	286112	Statement	name	372:25:8767:8770	285566	6	True				
ANR	286113	Statement	)	372:29:8771:8771	285566	7	True				
ANR	286114	Label	case num :	372:31:8773:8781	285566	8	True				
ANR	286115	Identifier	num		285566	0					
ANR	286116	Statement	sprintf	372:41:8783:8789	285566	9	True				
ANR	286117	Statement	(	372:49:8791:8791	285566	10	True				
ANR	286118	Statement	bp	372:50:8792:8793	285566	11	True				
ANR	286119	Statement	","	372:52:8794:8794	285566	12	True				
ANR	286120	Statement	""""""	372:53:8795:8796	285566	13	True				
ANR	286121	Statement	name	372:55:8797:8800	285566	14	True				
ANR	286122	Statement	)	372:59:8801:8801	285566	15	True				
ANR	286123	ExpressionStatement		372:60:8802:8802	285566	16	True				
ANR	286124	BreakStatement	break ;	372:62:8804:8809	285566	17	True				
ANR	286125	SwitchStatement	switch ( val )		285566	18					
ANR	286126	Condition	val	373:15:8826:8828	285566	0	True				
ANR	286127	Identifier	val		285566	0					
ANR	286128	CompoundStatement		123:2:2301:2301	285566	1					
ANR	286129	ExpressionStatement	"AUXREG2NAME ( 0x0 , ""status"" )"	375:4:8839:8866	285566	0	True				
ANR	286130	CallExpression	"AUXREG2NAME ( 0x0 , ""status"" )"		285566	0					
ANR	286131	Callee	AUXREG2NAME		285566	0					
ANR	286132	Identifier	AUXREG2NAME		285566	0					
ANR	286133	ArgumentList	0x0		285566	1					
ANR	286134	Argument	0x0		285566	0					
ANR	286135	PrimaryExpression	0x0		285566	0					
ANR	286136	Argument	"""status"""		285566	1					
ANR	286137	PrimaryExpression	"""status"""		285566	0					
ANR	286138	ExpressionStatement	"AUXREG2NAME ( 0x1 , ""semaphore"" )"	376:4:8872:8902	285566	1	True				
ANR	286139	CallExpression	"AUXREG2NAME ( 0x1 , ""semaphore"" )"		285566	0					
ANR	286140	Callee	AUXREG2NAME		285566	0					
ANR	286141	Identifier	AUXREG2NAME		285566	0					
ANR	286142	ArgumentList	0x1		285566	1					
ANR	286143	Argument	0x1		285566	0					
ANR	286144	PrimaryExpression	0x1		285566	0					
ANR	286145	Argument	"""semaphore"""		285566	1					
ANR	286146	PrimaryExpression	"""semaphore"""		285566	0					
ANR	286147	ExpressionStatement	"AUXREG2NAME ( 0x2 , ""lp_start"" )"	377:4:8908:8937	285566	2	True				
ANR	286148	CallExpression	"AUXREG2NAME ( 0x2 , ""lp_start"" )"		285566	0					
ANR	286149	Callee	AUXREG2NAME		285566	0					
ANR	286150	Identifier	AUXREG2NAME		285566	0					
ANR	286151	ArgumentList	0x2		285566	1					
ANR	286152	Argument	0x2		285566	0					
ANR	286153	PrimaryExpression	0x2		285566	0					
ANR	286154	Argument	"""lp_start"""		285566	1					
ANR	286155	PrimaryExpression	"""lp_start"""		285566	0					
ANR	286156	ExpressionStatement	"AUXREG2NAME ( 0x3 , ""lp_end"" )"	378:4:8943:8970	285566	3	True				
ANR	286157	CallExpression	"AUXREG2NAME ( 0x3 , ""lp_end"" )"		285566	0					
ANR	286158	Callee	AUXREG2NAME		285566	0					
ANR	286159	Identifier	AUXREG2NAME		285566	0					
ANR	286160	ArgumentList	0x3		285566	1					
ANR	286161	Argument	0x3		285566	0					
ANR	286162	PrimaryExpression	0x3		285566	0					
ANR	286163	Argument	"""lp_end"""		285566	1					
ANR	286164	PrimaryExpression	"""lp_end"""		285566	0					
ANR	286165	ExpressionStatement	"AUXREG2NAME ( 0x4 , ""identity"" )"	379:4:8976:9005	285566	4	True				
ANR	286166	CallExpression	"AUXREG2NAME ( 0x4 , ""identity"" )"		285566	0					
ANR	286167	Callee	AUXREG2NAME		285566	0					
ANR	286168	Identifier	AUXREG2NAME		285566	0					
ANR	286169	ArgumentList	0x4		285566	1					
ANR	286170	Argument	0x4		285566	0					
ANR	286171	PrimaryExpression	0x4		285566	0					
ANR	286172	Argument	"""identity"""		285566	1					
ANR	286173	PrimaryExpression	"""identity"""		285566	0					
ANR	286174	ExpressionStatement	"AUXREG2NAME ( 0x5 , ""debug"" )"	380:4:9011:9037	285566	5	True				
ANR	286175	CallExpression	"AUXREG2NAME ( 0x5 , ""debug"" )"		285566	0					
ANR	286176	Callee	AUXREG2NAME		285566	0					
ANR	286177	Identifier	AUXREG2NAME		285566	0					
ANR	286178	ArgumentList	0x5		285566	1					
ANR	286179	Argument	0x5		285566	0					
ANR	286180	PrimaryExpression	0x5		285566	0					
ANR	286181	Argument	"""debug"""		285566	1					
ANR	286182	PrimaryExpression	"""debug"""		285566	0					
ANR	286183	Label	default :	382:2:9042:9049	285566	6	True				
ANR	286184	Identifier	default		285566	0					
ANR	286185	CompoundStatement		133:6:2531:2546	285566	7					
ANR	286186	IdentifierDeclStatement	const char * ext ;	384:6:9063:9078	285566	0	True				
ANR	286187	IdentifierDecl	* ext		285566	0					
ANR	286188	IdentifierDeclType	const char *		285566	0					
ANR	286189	Identifier	ext		285566	1					
ANR	286190	ExpressionStatement	"ext = aux_reg_name ( state , val )"	386:6:9087:9118	285566	1	True				
ANR	286191	AssignmentExpression	"ext = aux_reg_name ( state , val )"		285566	0		=			
ANR	286192	Identifier	ext		285566	0					
ANR	286193	CallExpression	"aux_reg_name ( state , val )"		285566	1					
ANR	286194	Callee	aux_reg_name		285566	0					
ANR	286195	Identifier	aux_reg_name		285566	0					
ANR	286196	ArgumentList	state		285566	1					
ANR	286197	Argument	state		285566	0					
ANR	286198	Identifier	state		285566	0					
ANR	286199	Argument	val		285566	1					
ANR	286200	Identifier	val		285566	0					
ANR	286201	IfStatement	if ( ext )		285566	2					
ANR	286202	Condition	ext	387:10:9130:9132	285566	0	True				
ANR	286203	Identifier	ext		285566	0					
ANR	286204	CompoundStatement		136:15:2603:2603	285566	1					
ANR	286205	ExpressionStatement	"sprintf ( bp , ""%s"" , ext )"	388:7:9144:9167	285566	0	True				
ANR	286206	CallExpression	"sprintf ( bp , ""%s"" , ext )"		285566	0					
ANR	286207	Callee	sprintf		285566	0					
ANR	286208	Identifier	sprintf		285566	0					
ANR	286209	ArgumentList	bp		285566	1					
ANR	286210	Argument	bp		285566	0					
ANR	286211	Identifier	bp		285566	0					
ANR	286212	Argument	"""%s"""		285566	1					
ANR	286213	PrimaryExpression	"""%s"""		285566	0					
ANR	286214	Argument	ext		285566	2					
ANR	286215	Identifier	ext		285566	0					
ANR	286216	ElseStatement	else		285566	0					
ANR	286217	CompoundStatement		138:13:2650:2650	285566	0					
ANR	286218	ExpressionStatement	"arc_sprintf ( state , bp , ""%h"" , val )"	390:7:9191:9225	285566	0	True				
ANR	286219	CallExpression	"arc_sprintf ( state , bp , ""%h"" , val )"		285566	0					
ANR	286220	Callee	arc_sprintf		285566	0					
ANR	286221	Identifier	arc_sprintf		285566	0					
ANR	286222	ArgumentList	state		285566	1					
ANR	286223	Argument	state		285566	0					
ANR	286224	Identifier	state		285566	0					
ANR	286225	Argument	bp		285566	1					
ANR	286226	Identifier	bp		285566	0					
ANR	286227	Argument	"""%h"""		285566	2					
ANR	286228	PrimaryExpression	"""%h"""		285566	0					
ANR	286229	Argument	val		285566	3					
ANR	286230	Identifier	val		285566	0					
ANR	286231	BreakStatement	break ;	393:4:9245:9250	285566	8	True				
ANR	286232	ExpressionStatement	inc_bp ( )	395:7:9263:9272	285566	19	True				
ANR	286233	CallExpression	inc_bp ( )		285566	0					
ANR	286234	Callee	inc_bp		285566	0					
ANR	286235	Identifier	inc_bp		285566	0					
ANR	286236	ArgumentList			285566	1					
ANR	286237	BreakStatement	break ;	397:5:9286:9291	285566	38	True				
ANR	286238	Label	case 's' :	398:3:9296:9304	285566	39	True				
ANR	286239	CompoundStatement		148:5:2779:2779	285566	40					
ANR	286240	Statement	sprintf	400:7:9320:9326	285566	0	True				
ANR	286241	Statement	(	400:15:9328:9328	285566	1	True				
ANR	286242	Statement	bp	400:16:9329:9330	285566	2	True				
ANR	286243	Statement	","	400:18:9331:9331	285566	3	True				
ANR	286244	Statement	"""%s"""	400:20:9333:9336	285566	4	True				
ANR	286245	Statement	","	400:24:9337:9337	285566	5	True				
ANR	286246	Statement	va_arg	400:26:9339:9344	285566	6	True				
ANR	286247	Statement	(	400:33:9346:9346	285566	7	True				
ANR	286248	Statement	ap	400:34:9347:9348	285566	8	True				
ANR	286249	Statement	","	400:36:9349:9349	285566	9	True				
ANR	286250	Statement	char	400:38:9351:9354	285566	10	True				
ANR	286251	Statement	*	400:43:9356:9356	285566	11	True				
ANR	286252	Statement	)	400:44:9357:9357	285566	12	True				
ANR	286253	Statement	)	400:45:9358:9358	285566	13	True				
ANR	286254	ExpressionStatement		400:46:9359:9359	285566	14	True				
ANR	286255	ExpressionStatement	inc_bp ( )	401:7:9368:9377	285566	15	True				
ANR	286256	CallExpression	inc_bp ( )		285566	0					
ANR	286257	Callee	inc_bp		285566	0					
ANR	286258	Identifier	inc_bp		285566	0					
ANR	286259	ArgumentList			285566	1					
ANR	286260	BreakStatement	break ;	403:5:9391:9396	285566	41	True				
ANR	286261	Label	default :	404:3:9401:9408	285566	42	True				
ANR	286262	Identifier	default		285566	0					
ANR	286263	ExpressionStatement	"fprintf ( stderr , ""?? format %c\\n"" , p [ - 1 ] )"	405:5:9415:9456	285566	43	True				
ANR	286264	CallExpression	"fprintf ( stderr , ""?? format %c\\n"" , p [ - 1 ] )"		285566	0					
ANR	286265	Callee	fprintf		285566	0					
ANR	286266	Identifier	fprintf		285566	0					
ANR	286267	ArgumentList	stderr		285566	1					
ANR	286268	Argument	stderr		285566	0					
ANR	286269	Identifier	stderr		285566	0					
ANR	286270	Argument	"""?? format %c\\n"""		285566	1					
ANR	286271	PrimaryExpression	"""?? format %c\\n"""		285566	0					
ANR	286272	Argument	p [ - 1 ]		285566	2					
ANR	286273	ArrayIndexing	p [ - 1 ]		285566	0					
ANR	286274	Identifier	p		285566	0					
ANR	286275	UnaryOperationExpression	- 1		285566	1					
ANR	286276	UnaryOperator	-		285566	0					
ANR	286277	PrimaryExpression	1		285566	1					
ANR	286278	BreakStatement	break ;	406:5:9463:9468	285566	44	True				
ANR	286279	Label	DOCOMM :	411:1:9486:9492	285566	11	True				
ANR	286280	Identifier	DOCOMM		285566	0					
ANR	286281	ExpressionStatement	* bp = 0	411:9:9494:9501	285566	12	True				
ANR	286282	AssignmentExpression	* bp = 0		285566	0		=			
ANR	286283	UnaryOperationExpression	* bp		285566	0					
ANR	286284	UnaryOperator	*		285566	0					
ANR	286285	Identifier	bp		285566	1					
ANR	286286	PrimaryExpression	0		285566	1					
ANR	286287	ExpressionStatement	va_end ( ap )	412:2:9505:9516	285566	13	True				
ANR	286288	CallExpression	va_end ( ap )		285566	0					
ANR	286289	Callee	va_end		285566	0					
ANR	286290	Identifier	va_end		285566	0					
ANR	286291	ArgumentList	ap		285566	1					
ANR	286292	Argument	ap		285566	0					
ANR	286293	Identifier	ap		285566	0					
ANR	286294	ReturnType	static void		285566	1					
ANR	286295	Identifier	arc_sprintf		285566	2					
ANR	286296	ParameterList	"struct arcDisState * state , char * buf , const char * format"		285566	3					
ANR	286297	Parameter	struct arcDisState * state	251:13:6468:6492	285566	0	True				
ANR	286298	ParameterType	struct arcDisState *		285566	0					
ANR	286299	Identifier	state		285566	1					
ANR	286300	Parameter	char * buf	251:40:6495:6503	285566	1	True				
ANR	286301	ParameterType	char *		285566	0					
ANR	286302	Identifier	buf		285566	1					
ANR	286303	Parameter	const char * format	251:51:6506:6523	285566	2	True				
ANR	286304	ParameterType	const char *		285566	0					
ANR	286305	Identifier	format		285566	1					
ANR	286306	CFGEntryNode	ENTRY		285566		True				
ANR	286307	CFGExitNode	EXIT		285566		True				
ANR	286308	Symbol	val		285566						
ANR	286309	Symbol	ext		285566						
ANR	286310	Symbol	core_reg_name		285566						
ANR	286311	Symbol	* bp ++		285566						
ANR	286312	Symbol	aux_reg_name		285566						
ANR	286313	Symbol	* p ++		285566						
ANR	286314	Symbol	num		285566						
ANR	286315	Symbol	format		285566						
ANR	286316	Symbol	stderr		285566						
ANR	286317	Symbol	bp		285566						
ANR	286318	Symbol	int		285566						
ANR	286319	Symbol	regMap		285566						
ANR	286320	Symbol	ap		285566						
ANR	286321	Symbol	p		285566						
ANR	286322	Symbol	* num		285566						
ANR	286323	Symbol	buf		285566						
ANR	286324	Symbol	size		285566						
ANR	286325	Symbol	u		285566						
ANR	286326	Symbol	* bp		285566						
ANR	286327	Symbol	leading_zero		285566						
ANR	286328	Symbol	* p		285566						
ANR	286329	Symbol	state		285566						
ANR	286330	Symbol	va_arg		285566						
ANR	286331	Symbol	* regMap		285566						
ANR	286332	DeclStmt									
ANR	286333	Decl							const char	const char * [ ]	condName
ANR	286334	Function	write_instr_name_	422:0:9690:10825							
ANR	286335	FunctionDef	"write_instr_name_ (struct arcDisState * state , const char * instrName , int cond , int condCodeIsPartOfName , int flag , int signExtend , int addrWriteBack , int directMem)"		286334	0					
ANR	286336	CompoundStatement		431:0:9896:10825	286334	0					
ANR	286337	ExpressionStatement	"strncpy ( state -> instrBuffer , instrName , sizeof ( state -> instrBuffer ) - 1 )"	432:2:9900:9970	286334	0	True				
ANR	286338	CallExpression	"strncpy ( state -> instrBuffer , instrName , sizeof ( state -> instrBuffer ) - 1 )"		286334	0					
ANR	286339	Callee	strncpy		286334	0					
ANR	286340	Identifier	strncpy		286334	0					
ANR	286341	ArgumentList	state -> instrBuffer		286334	1					
ANR	286342	Argument	state -> instrBuffer		286334	0					
ANR	286343	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286344	Identifier	state		286334	0					
ANR	286345	Identifier	instrBuffer		286334	1					
ANR	286346	Argument	instrName		286334	1					
ANR	286347	Identifier	instrName		286334	0					
ANR	286348	Argument	sizeof ( state -> instrBuffer ) - 1		286334	2					
ANR	286349	AdditiveExpression	sizeof ( state -> instrBuffer ) - 1		286334	0		-			
ANR	286350	SizeofExpression	sizeof ( state -> instrBuffer )		286334	0					
ANR	286351	Sizeof	sizeof		286334	0					
ANR	286352	PtrMemberAccess	state -> instrBuffer		286334	1					
ANR	286353	Identifier	state		286334	0					
ANR	286354	Identifier	instrBuffer		286334	1					
ANR	286355	PrimaryExpression	1		286334	1					
ANR	286356	IfStatement	if ( cond > 0 )		286334	1					
ANR	286357	Condition	cond > 0	433:6:9978:9985	286334	0	True				
ANR	286358	RelationalExpression	cond > 0		286334	0		>			
ANR	286359	Identifier	cond		286334	0					
ANR	286360	PrimaryExpression	0		286334	1					
ANR	286361	CompoundStatement		5:6:103:121	286334	1					
ANR	286362	IdentifierDeclStatement	const char * cc = 0 ;	435:6:10000:10018	286334	0	True				
ANR	286363	IdentifierDecl	* cc = 0		286334	0					
ANR	286364	IdentifierDeclType	const char *		286334	0					
ANR	286365	Identifier	cc		286334	1					
ANR	286366	AssignmentExpression	* cc = 0		286334	2		=			
ANR	286367	Identifier	cc		286334	0					
ANR	286368	PrimaryExpression	0		286334	1					
ANR	286369	IfStatement	if ( ! condCodeIsPartOfName )		286334	1					
ANR	286370	Condition	! condCodeIsPartOfName	437:10:10031:10051	286334	0	True				
ANR	286371	UnaryOperationExpression	! condCodeIsPartOfName		286334	0					
ANR	286372	UnaryOperator	!		286334	0					
ANR	286373	Identifier	condCodeIsPartOfName		286334	1					
ANR	286374	CompoundStatement		7:33:157:157	286334	1					
ANR	286375	ExpressionStatement	"strcat ( state -> instrBuffer , ""."" )"	438:7:10063:10095	286334	0	True				
ANR	286376	CallExpression	"strcat ( state -> instrBuffer , ""."" )"		286334	0					
ANR	286377	Callee	strcat		286334	0					
ANR	286378	Identifier	strcat		286334	0					
ANR	286379	ArgumentList	state -> instrBuffer		286334	1					
ANR	286380	Argument	state -> instrBuffer		286334	0					
ANR	286381	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286382	Identifier	state		286334	0					
ANR	286383	Identifier	instrBuffer		286334	1					
ANR	286384	Argument	"""."""		286334	1					
ANR	286385	PrimaryExpression	"""."""		286334	0					
ANR	286386	IfStatement	if ( cond < 16 )		286334	2					
ANR	286387	Condition	cond < 16	440:10:10115:10123	286334	0	True				
ANR	286388	RelationalExpression	cond < 16		286334	0		<			
ANR	286389	Identifier	cond		286334	0					
ANR	286390	PrimaryExpression	16		286334	1					
ANR	286391	CompoundStatement		10:21:229:229	286334	1					
ANR	286392	ExpressionStatement	cc = condName [ cond ]	441:7:10135:10154	286334	0	True				
ANR	286393	AssignmentExpression	cc = condName [ cond ]		286334	0		=			
ANR	286394	Identifier	cc		286334	0					
ANR	286395	ArrayIndexing	condName [ cond ]		286334	1					
ANR	286396	Identifier	condName		286334	0					
ANR	286397	Identifier	cond		286334	1					
ANR	286398	ElseStatement	else		286334	0					
ANR	286399	CompoundStatement		12:13:272:272	286334	0					
ANR	286400	ExpressionStatement	"cc = cond_code_name ( state , cond )"	443:7:10178:10211	286334	0	True				
ANR	286401	AssignmentExpression	"cc = cond_code_name ( state , cond )"		286334	0		=			
ANR	286402	Identifier	cc		286334	0					
ANR	286403	CallExpression	"cond_code_name ( state , cond )"		286334	1					
ANR	286404	Callee	cond_code_name		286334	0					
ANR	286405	Identifier	cond_code_name		286334	0					
ANR	286406	ArgumentList	state		286334	1					
ANR	286407	Argument	state		286334	0					
ANR	286408	Identifier	state		286334	0					
ANR	286409	Argument	cond		286334	1					
ANR	286410	Identifier	cond		286334	0					
ANR	286411	IfStatement	if ( ! cc )		286334	3					
ANR	286412	Condition	! cc	445:10:10231:10233	286334	0	True				
ANR	286413	UnaryOperationExpression	! cc		286334	0					
ANR	286414	UnaryOperator	!		286334	0					
ANR	286415	Identifier	cc		286334	1					
ANR	286416	CompoundStatement		15:15:339:339	286334	1					
ANR	286417	ExpressionStatement	"cc = ""???"""	446:7:10245:10255	286334	0	True				
ANR	286418	AssignmentExpression	"cc = ""???"""		286334	0		=			
ANR	286419	Identifier	cc		286334	0					
ANR	286420	PrimaryExpression	"""???"""		286334	1					
ANR	286421	ExpressionStatement	"strcat ( state -> instrBuffer , cc )"	448:6:10271:10302	286334	4	True				
ANR	286422	CallExpression	"strcat ( state -> instrBuffer , cc )"		286334	0					
ANR	286423	Callee	strcat		286334	0					
ANR	286424	Identifier	strcat		286334	0					
ANR	286425	ArgumentList	state -> instrBuffer		286334	1					
ANR	286426	Argument	state -> instrBuffer		286334	0					
ANR	286427	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286428	Identifier	state		286334	0					
ANR	286429	Identifier	instrBuffer		286334	1					
ANR	286430	Argument	cc		286334	1					
ANR	286431	Identifier	cc		286334	0					
ANR	286432	IfStatement	if ( flag )		286334	2					
ANR	286433	Condition	flag	450:8:10318:10321	286334	0	True				
ANR	286434	Identifier	flag		286334	0					
ANR	286435	CompoundStatement		20:14:427:427	286334	1					
ANR	286436	ExpressionStatement	"strcat ( state -> instrBuffer , "".f"" )"	451:5:10331:10364	286334	0	True				
ANR	286437	CallExpression	"strcat ( state -> instrBuffer , "".f"" )"		286334	0					
ANR	286438	Callee	strcat		286334	0					
ANR	286439	Identifier	strcat		286334	0					
ANR	286440	ArgumentList	state -> instrBuffer		286334	1					
ANR	286441	Argument	state -> instrBuffer		286334	0					
ANR	286442	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286443	Identifier	state		286334	0					
ANR	286444	Identifier	instrBuffer		286334	1					
ANR	286445	Argument	""".f"""		286334	1					
ANR	286446	PrimaryExpression	""".f"""		286334	0					
ANR	286447	SwitchStatement	switch ( state -> nullifyMode )		286334	3					
ANR	286448	Condition	state -> nullifyMode	453:12:10384:10401	286334	0	True				
ANR	286449	PtrMemberAccess	state -> nullifyMode		286334	0					
ANR	286450	Identifier	state		286334	0					
ANR	286451	Identifier	nullifyMode		286334	1					
ANR	286452	CompoundStatement		23:32:507:507	286334	1					
ANR	286453	Label	case BR_exec_always :	454:4:10410:10429	286334	0	True				
ANR	286454	Identifier	BR_exec_always		286334	0					
ANR	286455	ExpressionStatement	"strcat ( state -> instrBuffer , "".d"" )"	455:6:10437:10470	286334	1	True				
ANR	286456	CallExpression	"strcat ( state -> instrBuffer , "".d"" )"		286334	0					
ANR	286457	Callee	strcat		286334	0					
ANR	286458	Identifier	strcat		286334	0					
ANR	286459	ArgumentList	state -> instrBuffer		286334	1					
ANR	286460	Argument	state -> instrBuffer		286334	0					
ANR	286461	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286462	Identifier	state		286334	0					
ANR	286463	Identifier	instrBuffer		286334	1					
ANR	286464	Argument	""".d"""		286334	1					
ANR	286465	PrimaryExpression	""".d"""		286334	0					
ANR	286466	BreakStatement	break ;	456:6:10478:10483	286334	2	True				
ANR	286467	Label	case BR_exec_when_jump :	457:4:10489:10511	286334	3	True				
ANR	286468	Identifier	BR_exec_when_jump		286334	0					
ANR	286469	ExpressionStatement	"strcat ( state -> instrBuffer , "".jd"" )"	458:6:10519:10553	286334	4	True				
ANR	286470	CallExpression	"strcat ( state -> instrBuffer , "".jd"" )"		286334	0					
ANR	286471	Callee	strcat		286334	0					
ANR	286472	Identifier	strcat		286334	0					
ANR	286473	ArgumentList	state -> instrBuffer		286334	1					
ANR	286474	Argument	state -> instrBuffer		286334	0					
ANR	286475	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286476	Identifier	state		286334	0					
ANR	286477	Identifier	instrBuffer		286334	1					
ANR	286478	Argument	""".jd"""		286334	1					
ANR	286479	PrimaryExpression	""".jd"""		286334	0					
ANR	286480	BreakStatement	break ;	459:6:10561:10566	286334	5	True				
ANR	286481	Label	case BR_exec_when_no_jump :	460:4:10572:10597	286334	6	True				
ANR	286482	Identifier	BR_exec_when_no_jump		286334	0					
ANR	286483	BreakStatement	break ;	461:6:10605:10610	286334	7	True				
ANR	286484	IfStatement	if ( signExtend )		286334	4					
ANR	286485	Condition	signExtend	463:8:10626:10635	286334	0	True				
ANR	286486	Identifier	signExtend		286334	0					
ANR	286487	CompoundStatement		33:20:741:741	286334	1					
ANR	286488	ExpressionStatement	"strcat ( state -> instrBuffer , "".x"" )"	464:5:10645:10678	286334	0	True				
ANR	286489	CallExpression	"strcat ( state -> instrBuffer , "".x"" )"		286334	0					
ANR	286490	Callee	strcat		286334	0					
ANR	286491	Identifier	strcat		286334	0					
ANR	286492	ArgumentList	state -> instrBuffer		286334	1					
ANR	286493	Argument	state -> instrBuffer		286334	0					
ANR	286494	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286495	Identifier	state		286334	0					
ANR	286496	Identifier	instrBuffer		286334	1					
ANR	286497	Argument	""".x"""		286334	1					
ANR	286498	PrimaryExpression	""".x"""		286334	0					
ANR	286499	IfStatement	if ( addrWriteBack )		286334	5					
ANR	286500	Condition	addrWriteBack	466:8:10694:10706	286334	0	True				
ANR	286501	Identifier	addrWriteBack		286334	0					
ANR	286502	CompoundStatement		36:23:812:812	286334	1					
ANR	286503	ExpressionStatement	"strcat ( state -> instrBuffer , "".a"" )"	467:5:10716:10749	286334	0	True				
ANR	286504	CallExpression	"strcat ( state -> instrBuffer , "".a"" )"		286334	0					
ANR	286505	Callee	strcat		286334	0					
ANR	286506	Identifier	strcat		286334	0					
ANR	286507	ArgumentList	state -> instrBuffer		286334	1					
ANR	286508	Argument	state -> instrBuffer		286334	0					
ANR	286509	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286510	Identifier	state		286334	0					
ANR	286511	Identifier	instrBuffer		286334	1					
ANR	286512	Argument	""".a"""		286334	1					
ANR	286513	PrimaryExpression	""".a"""		286334	0					
ANR	286514	IfStatement	if ( directMem )		286334	6					
ANR	286515	Condition	directMem	469:8:10765:10773	286334	0	True				
ANR	286516	Identifier	directMem		286334	0					
ANR	286517	CompoundStatement		39:19:879:879	286334	1					
ANR	286518	ExpressionStatement	"strcat ( state -> instrBuffer , "".di"" )"	470:5:10783:10817	286334	0	True				
ANR	286519	CallExpression	"strcat ( state -> instrBuffer , "".di"" )"		286334	0					
ANR	286520	Callee	strcat		286334	0					
ANR	286521	Identifier	strcat		286334	0					
ANR	286522	ArgumentList	state -> instrBuffer		286334	1					
ANR	286523	Argument	state -> instrBuffer		286334	0					
ANR	286524	PtrMemberAccess	state -> instrBuffer		286334	0					
ANR	286525	Identifier	state		286334	0					
ANR	286526	Identifier	instrBuffer		286334	1					
ANR	286527	Argument	""".di"""		286334	1					
ANR	286528	PrimaryExpression	""".di"""		286334	0					
ANR	286529	ReturnType	static void		286334	1					
ANR	286530	Identifier	write_instr_name_		286334	2					
ANR	286531	ParameterList	"struct arcDisState * state , const char * instrName , int cond , int condCodeIsPartOfName , int flag , int signExtend , int addrWriteBack , int directMem"		286334	3					
ANR	286532	Parameter	struct arcDisState * state	423:18:9720:9745	286334	0	True				
ANR	286533	ParameterType	struct arcDisState *		286334	0					
ANR	286534	Identifier	state		286334	1					
ANR	286535	Parameter	const char * instrName	424:4:9752:9773	286334	1	True				
ANR	286536	ParameterType	const char *		286334	0					
ANR	286537	Identifier	instrName		286334	1					
ANR	286538	Parameter	int cond	425:4:9780:9787	286334	2	True				
ANR	286539	ParameterType	int		286334	0					
ANR	286540	Identifier	cond		286334	1					
ANR	286541	Parameter	int condCodeIsPartOfName	426:4:9794:9817	286334	3	True				
ANR	286542	ParameterType	int		286334	0					
ANR	286543	Identifier	condCodeIsPartOfName		286334	1					
ANR	286544	Parameter	int flag	427:4:9824:9831	286334	4	True				
ANR	286545	ParameterType	int		286334	0					
ANR	286546	Identifier	flag		286334	1					
ANR	286547	Parameter	int signExtend	428:4:9838:9851	286334	5	True				
ANR	286548	ParameterType	int		286334	0					
ANR	286549	Identifier	signExtend		286334	1					
ANR	286550	Parameter	int addrWriteBack	429:4:9858:9874	286334	6	True				
ANR	286551	ParameterType	int		286334	0					
ANR	286552	Identifier	addrWriteBack		286334	1					
ANR	286553	Parameter	int directMem	430:4:9881:9893	286334	7	True				
ANR	286554	ParameterType	int		286334	0					
ANR	286555	Identifier	directMem		286334	1					
ANR	286556	CFGEntryNode	ENTRY		286334		True				
ANR	286557	CFGExitNode	EXIT		286334		True				
ANR	286558	Symbol	cc		286334						
ANR	286559	Symbol	flag		286334						
ANR	286560	Symbol	* cond		286334						
ANR	286561	Symbol	instrName		286334						
ANR	286562	Symbol	cond		286334						
ANR	286563	Symbol	condName		286334						
ANR	286564	Symbol	* state		286334						
ANR	286565	Symbol	cond_code_name		286334						
ANR	286566	Symbol	signExtend		286334						
ANR	286567	Symbol	directMem		286334						
ANR	286568	Symbol	state -> nullifyMode		286334						
ANR	286569	Symbol	condCodeIsPartOfName		286334						
ANR	286570	Symbol	state -> instrBuffer		286334						
ANR	286571	Symbol	state		286334						
ANR	286572	Symbol	addrWriteBack		286334						
ANR	286573	Symbol	* condName		286334						
ANR	286574	ClassDef	<unnamed>	483:0:11081:11293							
ANR	286575	DeclStmt									
ANR	286576	Decl							extern disassemble_info	extern disassemble_info	tm_print_insn_info
ANR	286577	Function	dsmOneArcInst	493:0:11342:25241							
ANR	286578	FunctionDef	"dsmOneArcInst (bfd_vma addr , struct arcDisState * state)"		286577	0					
ANR	286579	CompoundStatement		495:0:11410:25241	286577	0					
ANR	286580	IdentifierDeclStatement	int condCodeIsPartOfName = 0 ;	496:2:11414:11442	286577	0	True				
ANR	286581	IdentifierDecl	condCodeIsPartOfName = 0		286577	0					
ANR	286582	IdentifierDeclType	int		286577	0					
ANR	286583	Identifier	condCodeIsPartOfName		286577	1					
ANR	286584	AssignmentExpression	condCodeIsPartOfName = 0		286577	2		=			
ANR	286585	Identifier	condCodeIsPartOfName		286577	0					
ANR	286586	PrimaryExpression	0		286577	1					
ANR	286587	IdentifierDeclStatement	a4_decoding_class decodingClass ;	497:2:11446:11477	286577	1	True				
ANR	286588	IdentifierDecl	decodingClass		286577	0					
ANR	286589	IdentifierDeclType	a4_decoding_class		286577	0					
ANR	286590	Identifier	decodingClass		286577	1					
ANR	286591	IdentifierDeclStatement	const char * instrName ;	498:2:11481:11502	286577	2	True				
ANR	286592	IdentifierDecl	* instrName		286577	0					
ANR	286593	IdentifierDeclType	const char *		286577	0					
ANR	286594	Identifier	instrName		286577	1					
ANR	286595	IdentifierDeclStatement	int repeatsOp = 0 ;	499:2:11506:11523	286577	3	True				
ANR	286596	IdentifierDecl	repeatsOp = 0		286577	0					
ANR	286597	IdentifierDeclType	int		286577	0					
ANR	286598	Identifier	repeatsOp		286577	1					
ANR	286599	AssignmentExpression	repeatsOp = 0		286577	2		=			
ANR	286600	Identifier	repeatsOp		286577	0					
ANR	286601	PrimaryExpression	0		286577	1					
ANR	286602	IdentifierDeclStatement	"int fieldAisReg = 1 , fieldBisReg = 1 , fieldCisReg = 1 ;"	500:2:11527:11580	286577	4	True				
ANR	286603	IdentifierDecl	fieldAisReg = 1		286577	0					
ANR	286604	IdentifierDeclType	int		286577	0					
ANR	286605	Identifier	fieldAisReg		286577	1					
ANR	286606	AssignmentExpression	fieldAisReg = 1		286577	2		=			
ANR	286607	Identifier	fieldAisReg		286577	0					
ANR	286608	PrimaryExpression	1		286577	1					
ANR	286609	IdentifierDecl	fieldBisReg = 1		286577	1					
ANR	286610	IdentifierDeclType	int		286577	0					
ANR	286611	Identifier	fieldBisReg		286577	1					
ANR	286612	AssignmentExpression	fieldBisReg = 1		286577	2		=			
ANR	286613	Identifier	fieldBisReg		286577	0					
ANR	286614	PrimaryExpression	1		286577	1					
ANR	286615	IdentifierDecl	fieldCisReg = 1		286577	2					
ANR	286616	IdentifierDeclType	int		286577	0					
ANR	286617	Identifier	fieldCisReg		286577	1					
ANR	286618	AssignmentExpression	fieldCisReg = 1		286577	2		=			
ANR	286619	Identifier	fieldCisReg		286577	0					
ANR	286620	PrimaryExpression	1		286577	1					
ANR	286621	IdentifierDeclStatement	"int fieldA , fieldB , fieldC = 0 ;"	501:2:11584:11614	286577	5	True				
ANR	286622	IdentifierDecl	fieldA		286577	0					
ANR	286623	IdentifierDeclType	int		286577	0					
ANR	286624	Identifier	fieldA		286577	1					
ANR	286625	IdentifierDecl	fieldB		286577	1					
ANR	286626	IdentifierDeclType	int		286577	0					
ANR	286627	Identifier	fieldB		286577	1					
ANR	286628	IdentifierDecl	fieldC = 0		286577	2					
ANR	286629	IdentifierDeclType	int		286577	0					
ANR	286630	Identifier	fieldC		286577	1					
ANR	286631	AssignmentExpression	fieldC = 0		286577	2		=			
ANR	286632	Identifier	fieldC		286577	0					
ANR	286633	PrimaryExpression	0		286577	1					
ANR	286634	IdentifierDeclStatement	"int flag = 0 , cond = 0 , is_shimm = 0 , is_limm = 0 ;"	502:2:11618:11667	286577	6	True				
ANR	286635	IdentifierDecl	flag = 0		286577	0					
ANR	286636	IdentifierDeclType	int		286577	0					
ANR	286637	Identifier	flag		286577	1					
ANR	286638	AssignmentExpression	flag = 0		286577	2		=			
ANR	286639	Identifier	flag		286577	0					
ANR	286640	PrimaryExpression	0		286577	1					
ANR	286641	IdentifierDecl	cond = 0		286577	1					
ANR	286642	IdentifierDeclType	int		286577	0					
ANR	286643	Identifier	cond		286577	1					
ANR	286644	AssignmentExpression	cond = 0		286577	2		=			
ANR	286645	Identifier	cond		286577	0					
ANR	286646	PrimaryExpression	0		286577	1					
ANR	286647	IdentifierDecl	is_shimm = 0		286577	2					
ANR	286648	IdentifierDeclType	int		286577	0					
ANR	286649	Identifier	is_shimm		286577	1					
ANR	286650	AssignmentExpression	is_shimm = 0		286577	2		=			
ANR	286651	Identifier	is_shimm		286577	0					
ANR	286652	PrimaryExpression	0		286577	1					
ANR	286653	IdentifierDecl	is_limm = 0		286577	3					
ANR	286654	IdentifierDeclType	int		286577	0					
ANR	286655	Identifier	is_limm		286577	1					
ANR	286656	AssignmentExpression	is_limm = 0		286577	2		=			
ANR	286657	Identifier	is_limm		286577	0					
ANR	286658	PrimaryExpression	0		286577	1					
ANR	286659	IdentifierDeclStatement	"int signExtend = 0 , addrWriteBack = 0 , directMem = 0 ;"	503:2:11671:11723	286577	7	True				
ANR	286660	IdentifierDecl	signExtend = 0		286577	0					
ANR	286661	IdentifierDeclType	int		286577	0					
ANR	286662	Identifier	signExtend		286577	1					
ANR	286663	AssignmentExpression	signExtend = 0		286577	2		=			
ANR	286664	Identifier	signExtend		286577	0					
ANR	286665	PrimaryExpression	0		286577	1					
ANR	286666	IdentifierDecl	addrWriteBack = 0		286577	1					
ANR	286667	IdentifierDeclType	int		286577	0					
ANR	286668	Identifier	addrWriteBack		286577	1					
ANR	286669	AssignmentExpression	addrWriteBack = 0		286577	2		=			
ANR	286670	Identifier	addrWriteBack		286577	0					
ANR	286671	PrimaryExpression	0		286577	1					
ANR	286672	IdentifierDecl	directMem = 0		286577	2					
ANR	286673	IdentifierDeclType	int		286577	0					
ANR	286674	Identifier	directMem		286577	1					
ANR	286675	AssignmentExpression	directMem = 0		286577	2		=			
ANR	286676	Identifier	directMem		286577	0					
ANR	286677	PrimaryExpression	0		286577	1					
ANR	286678	IdentifierDeclStatement	int is_linked = 0 ;	504:2:11727:11744	286577	8	True				
ANR	286679	IdentifierDecl	is_linked = 0		286577	0					
ANR	286680	IdentifierDeclType	int		286577	0					
ANR	286681	Identifier	is_linked		286577	1					
ANR	286682	AssignmentExpression	is_linked = 0		286577	2		=			
ANR	286683	Identifier	is_linked		286577	0					
ANR	286684	PrimaryExpression	0		286577	1					
ANR	286685	IdentifierDeclStatement	int offset = 0 ;	505:2:11748:11762	286577	9	True				
ANR	286686	IdentifierDecl	offset = 0		286577	0					
ANR	286687	IdentifierDeclType	int		286577	0					
ANR	286688	Identifier	offset		286577	1					
ANR	286689	AssignmentExpression	offset = 0		286577	2		=			
ANR	286690	Identifier	offset		286577	0					
ANR	286691	PrimaryExpression	0		286577	1					
ANR	286692	IdentifierDeclStatement	int usesAuxReg = 0 ;	506:2:11766:11784	286577	10	True				
ANR	286693	IdentifierDecl	usesAuxReg = 0		286577	0					
ANR	286694	IdentifierDeclType	int		286577	0					
ANR	286695	Identifier	usesAuxReg		286577	1					
ANR	286696	AssignmentExpression	usesAuxReg = 0		286577	2		=			
ANR	286697	Identifier	usesAuxReg		286577	0					
ANR	286698	PrimaryExpression	0		286577	1					
ANR	286699	IdentifierDeclStatement	int ignoreFirstOpd ;	507:2:11788:11806	286577	11	True				
ANR	286700	IdentifierDecl	ignoreFirstOpd		286577	0					
ANR	286701	IdentifierDeclType	int		286577	0					
ANR	286702	Identifier	ignoreFirstOpd		286577	1					
ANR	286703	IdentifierDeclStatement	char formatString [ 60 ] ;	508:2:11810:11831	286577	12	True				
ANR	286704	IdentifierDecl	formatString [ 60 ]		286577	0					
ANR	286705	IdentifierDeclType	char [ 60 ]		286577	0					
ANR	286706	Identifier	formatString		286577	1					
ANR	286707	PrimaryExpression	60		286577	2					
ANR	286708	IdentifierDeclStatement	int flags = E_ARC_MACH_A4 ;	509:2:11835:11860	286577	13	True				
ANR	286709	IdentifierDecl	flags = E_ARC_MACH_A4		286577	0					
ANR	286710	IdentifierDeclType	int		286577	0					
ANR	286711	Identifier	flags		286577	1					
ANR	286712	AssignmentExpression	flags = E_ARC_MACH_A4		286577	2		=			
ANR	286713	Identifier	E_ARC_MACH_A4		286577	0					
ANR	286714	Identifier	E_ARC_MACH_A4		286577	1					
ANR	286715	ExpressionStatement	state -> instructionLen = 4	511:2:11865:11890	286577	14	True				
ANR	286716	AssignmentExpression	state -> instructionLen = 4		286577	0		=			
ANR	286717	PtrMemberAccess	state -> instructionLen		286577	0					
ANR	286718	Identifier	state		286577	0					
ANR	286719	Identifier	instructionLen		286577	1					
ANR	286720	PrimaryExpression	4		286577	1					
ANR	286721	ExpressionStatement	state -> nullifyMode = BR_exec_when_no_jump	512:2:11894:11935	286577	15	True				
ANR	286722	AssignmentExpression	state -> nullifyMode = BR_exec_when_no_jump		286577	0		=			
ANR	286723	PtrMemberAccess	state -> nullifyMode		286577	0					
ANR	286724	Identifier	state		286577	0					
ANR	286725	Identifier	nullifyMode		286577	1					
ANR	286726	Identifier	BR_exec_when_no_jump		286577	1					
ANR	286727	ExpressionStatement	state -> opWidth = 12	513:2:11939:11958	286577	16	True				
ANR	286728	AssignmentExpression	state -> opWidth = 12		286577	0		=			
ANR	286729	PtrMemberAccess	state -> opWidth		286577	0					
ANR	286730	Identifier	state		286577	0					
ANR	286731	Identifier	opWidth		286577	1					
ANR	286732	PrimaryExpression	12		286577	1					
ANR	286733	ExpressionStatement	state -> isBranch = 0	514:2:11962:11981	286577	17	True				
ANR	286734	AssignmentExpression	state -> isBranch = 0		286577	0		=			
ANR	286735	PtrMemberAccess	state -> isBranch		286577	0					
ANR	286736	Identifier	state		286577	0					
ANR	286737	Identifier	isBranch		286577	1					
ANR	286738	PrimaryExpression	0		286577	1					
ANR	286739	ExpressionStatement	state -> _mem_load = 0	516:2:11986:12006	286577	18	True				
ANR	286740	AssignmentExpression	state -> _mem_load = 0		286577	0		=			
ANR	286741	PtrMemberAccess	state -> _mem_load		286577	0					
ANR	286742	Identifier	state		286577	0					
ANR	286743	Identifier	_mem_load		286577	1					
ANR	286744	PrimaryExpression	0		286577	1					
ANR	286745	ExpressionStatement	state -> _ea_present = 0	517:2:12010:12032	286577	19	True				
ANR	286746	AssignmentExpression	state -> _ea_present = 0		286577	0		=			
ANR	286747	PtrMemberAccess	state -> _ea_present		286577	0					
ANR	286748	Identifier	state		286577	0					
ANR	286749	Identifier	_ea_present		286577	1					
ANR	286750	PrimaryExpression	0		286577	1					
ANR	286751	ExpressionStatement	state -> _load_len = 0	518:2:12036:12056	286577	20	True				
ANR	286752	AssignmentExpression	state -> _load_len = 0		286577	0		=			
ANR	286753	PtrMemberAccess	state -> _load_len		286577	0					
ANR	286754	Identifier	state		286577	0					
ANR	286755	Identifier	_load_len		286577	1					
ANR	286756	PrimaryExpression	0		286577	1					
ANR	286757	ExpressionStatement	state -> ea_reg1 = no_reg	519:2:12060:12083	286577	21	True				
ANR	286758	AssignmentExpression	state -> ea_reg1 = no_reg		286577	0		=			
ANR	286759	PtrMemberAccess	state -> ea_reg1		286577	0					
ANR	286760	Identifier	state		286577	0					
ANR	286761	Identifier	ea_reg1		286577	1					
ANR	286762	Identifier	no_reg		286577	1					
ANR	286763	ExpressionStatement	state -> ea_reg2 = no_reg	520:2:12087:12110	286577	22	True				
ANR	286764	AssignmentExpression	state -> ea_reg2 = no_reg		286577	0		=			
ANR	286765	PtrMemberAccess	state -> ea_reg2		286577	0					
ANR	286766	Identifier	state		286577	0					
ANR	286767	Identifier	ea_reg2		286577	1					
ANR	286768	Identifier	no_reg		286577	1					
ANR	286769	ExpressionStatement	state -> _offset = 0	521:2:12114:12132	286577	23	True				
ANR	286770	AssignmentExpression	state -> _offset = 0		286577	0		=			
ANR	286771	PtrMemberAccess	state -> _offset		286577	0					
ANR	286772	Identifier	state		286577	0					
ANR	286773	Identifier	_offset		286577	1					
ANR	286774	PrimaryExpression	0		286577	1					
ANR	286775	IfStatement	if ( ! NEXT_WORD ( 0 ) )		286577	24					
ANR	286776	Condition	! NEXT_WORD ( 0 )	523:6:12141:12154	286577	0	True				
ANR	286777	UnaryOperationExpression	! NEXT_WORD ( 0 )		286577	0					
ANR	286778	UnaryOperator	!		286577	0					
ANR	286779	CallExpression	NEXT_WORD ( 0 )		286577	1					
ANR	286780	Callee	NEXT_WORD		286577	0					
ANR	286781	Identifier	NEXT_WORD		286577	0					
ANR	286782	ArgumentList	0		286577	1					
ANR	286783	Argument	0		286577	0					
ANR	286784	PrimaryExpression	0		286577	0					
ANR	286785	CompoundStatement		29:22:746:746	286577	1					
ANR	286786	ReturnStatement	return 0 ;	524:3:12162:12170	286577	0	True				
ANR	286787	PrimaryExpression	0		286577	0					
ANR	286788	ExpressionStatement	state -> _opcode = OPCODE ( state -> words [ 0 ] )	527:2:12179:12220	286577	25	True				
ANR	286789	AssignmentExpression	state -> _opcode = OPCODE ( state -> words [ 0 ] )		286577	0		=			
ANR	286790	PtrMemberAccess	state -> _opcode		286577	0					
ANR	286791	Identifier	state		286577	0					
ANR	286792	Identifier	_opcode		286577	1					
ANR	286793	CallExpression	OPCODE ( state -> words [ 0 ] )		286577	1					
ANR	286794	Callee	OPCODE		286577	0					
ANR	286795	Identifier	OPCODE		286577	0					
ANR	286796	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	286797	Argument	state -> words [ 0 ]		286577	0					
ANR	286798	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	286799	PtrMemberAccess	state -> words		286577	0					
ANR	286800	Identifier	state		286577	0					
ANR	286801	Identifier	words		286577	1					
ANR	286802	PrimaryExpression	0		286577	1					
ANR	286803	ExpressionStatement	instrName = 0	528:2:12224:12237	286577	26	True				
ANR	286804	AssignmentExpression	instrName = 0		286577	0		=			
ANR	286805	Identifier	instrName		286577	0					
ANR	286806	PrimaryExpression	0		286577	1					
ANR	286807	ExpressionStatement	decodingClass = CLASS_A4_ARITH	529:2:12241:12271	286577	27	True				
ANR	286808	AssignmentExpression	decodingClass = CLASS_A4_ARITH		286577	0		=			
ANR	286809	Identifier	decodingClass		286577	0					
ANR	286810	Identifier	CLASS_A4_ARITH		286577	1					
ANR	286811	ExpressionStatement	repeatsOp = 0	530:2:12291:12304	286577	28	True				
ANR	286812	AssignmentExpression	repeatsOp = 0		286577	0		=			
ANR	286813	Identifier	repeatsOp		286577	0					
ANR	286814	PrimaryExpression	0		286577	1					
ANR	286815	ExpressionStatement	condCodeIsPartOfName = 0	531:2:12308:12330	286577	29	True				
ANR	286816	AssignmentExpression	condCodeIsPartOfName = 0		286577	0		=			
ANR	286817	Identifier	condCodeIsPartOfName		286577	0					
ANR	286818	PrimaryExpression	0		286577	1					
ANR	286819	ExpressionStatement	state -> commNum = 0	532:2:12334:12352	286577	30	True				
ANR	286820	AssignmentExpression	state -> commNum = 0		286577	0		=			
ANR	286821	PtrMemberAccess	state -> commNum		286577	0					
ANR	286822	Identifier	state		286577	0					
ANR	286823	Identifier	commNum		286577	1					
ANR	286824	PrimaryExpression	0		286577	1					
ANR	286825	ExpressionStatement	state -> tcnt = 0	533:2:12356:12371	286577	31	True				
ANR	286826	AssignmentExpression	state -> tcnt = 0		286577	0		=			
ANR	286827	PtrMemberAccess	state -> tcnt		286577	0					
ANR	286828	Identifier	state		286577	0					
ANR	286829	Identifier	tcnt		286577	1					
ANR	286830	PrimaryExpression	0		286577	1					
ANR	286831	ExpressionStatement	state -> acnt = 0	534:2:12375:12390	286577	32	True				
ANR	286832	AssignmentExpression	state -> acnt = 0		286577	0		=			
ANR	286833	PtrMemberAccess	state -> acnt		286577	0					
ANR	286834	Identifier	state		286577	0					
ANR	286835	Identifier	acnt		286577	1					
ANR	286836	PrimaryExpression	0		286577	1					
ANR	286837	ExpressionStatement	state -> flow = noflow	535:2:12394:12414	286577	33	True				
ANR	286838	AssignmentExpression	state -> flow = noflow		286577	0		=			
ANR	286839	PtrMemberAccess	state -> flow		286577	0					
ANR	286840	Identifier	state		286577	0					
ANR	286841	Identifier	flow		286577	1					
ANR	286842	Identifier	noflow		286577	1					
ANR	286843	ExpressionStatement	ignoreFirstOpd = 0	536:2:12418:12436	286577	34	True				
ANR	286844	AssignmentExpression	ignoreFirstOpd = 0		286577	0		=			
ANR	286845	Identifier	ignoreFirstOpd		286577	0					
ANR	286846	PrimaryExpression	0		286577	1					
ANR	286847	SwitchStatement	switch ( state -> _opcode )		286577	35					
ANR	286848	Condition	state -> _opcode	538:10:12449:12462	286577	0	True				
ANR	286849	PtrMemberAccess	state -> _opcode		286577	0					
ANR	286850	Identifier	state		286577	0					
ANR	286851	Identifier	_opcode		286577	1					
ANR	286852	CompoundStatement		45:4:1058:1058	286577	1					
ANR	286853	Label	case op_LD0 :	540:4:12475:12486	286577	0	True				
ANR	286854	Identifier	op_LD0		286577	0					
ANR	286855	SwitchStatement	"switch ( BITS ( state -> words [ 0 ] , 1 , 2 ) )"		286577	1					
ANR	286856	Condition	"BITS ( state -> words [ 0 ] , 1 , 2 )"	541:14:12502:12527	286577	0	True				
ANR	286857	CallExpression	"BITS ( state -> words [ 0 ] , 1 , 2 )"		286577	0					
ANR	286858	Callee	BITS		286577	0					
ANR	286859	Identifier	BITS		286577	0					
ANR	286860	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	286861	Argument	state -> words [ 0 ]		286577	0					
ANR	286862	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	286863	PtrMemberAccess	state -> words		286577	0					
ANR	286864	Identifier	state		286577	0					
ANR	286865	Identifier	words		286577	1					
ANR	286866	PrimaryExpression	0		286577	1					
ANR	286867	Argument	1		286577	1					
ANR	286868	PrimaryExpression	1		286577	0					
ANR	286869	Argument	2		286577	2					
ANR	286870	PrimaryExpression	2		286577	0					
ANR	286871	CompoundStatement		48:1:1120:1120	286577	1					
ANR	286872	Label	case 0 :	543:1:12534:12540	286577	0	True				
ANR	286873	ExpressionStatement	"instrName = ""ld"""	544:3:12545:12561	286577	1	True				
ANR	286874	AssignmentExpression	"instrName = ""ld"""		286577	0		=			
ANR	286875	Identifier	instrName		286577	0					
ANR	286876	PrimaryExpression	"""ld"""		286577	1					
ANR	286877	ExpressionStatement	state -> _load_len = 4	545:3:12566:12586	286577	2	True				
ANR	286878	AssignmentExpression	state -> _load_len = 4		286577	0		=			
ANR	286879	PtrMemberAccess	state -> _load_len		286577	0					
ANR	286880	Identifier	state		286577	0					
ANR	286881	Identifier	_load_len		286577	1					
ANR	286882	PrimaryExpression	4		286577	1					
ANR	286883	BreakStatement	break ;	546:3:12591:12596	286577	3	True				
ANR	286884	Label	case 1 :	547:1:12599:12605	286577	4	True				
ANR	286885	ExpressionStatement	"instrName = ""ldb"""	548:3:12610:12627	286577	5	True				
ANR	286886	AssignmentExpression	"instrName = ""ldb"""		286577	0		=			
ANR	286887	Identifier	instrName		286577	0					
ANR	286888	PrimaryExpression	"""ldb"""		286577	1					
ANR	286889	ExpressionStatement	state -> _load_len = 1	549:3:12632:12652	286577	6	True				
ANR	286890	AssignmentExpression	state -> _load_len = 1		286577	0		=			
ANR	286891	PtrMemberAccess	state -> _load_len		286577	0					
ANR	286892	Identifier	state		286577	0					
ANR	286893	Identifier	_load_len		286577	1					
ANR	286894	PrimaryExpression	1		286577	1					
ANR	286895	BreakStatement	break ;	550:3:12657:12662	286577	7	True				
ANR	286896	Label	case 2 :	551:1:12665:12671	286577	8	True				
ANR	286897	ExpressionStatement	"instrName = ""ldw"""	552:3:12676:12693	286577	9	True				
ANR	286898	AssignmentExpression	"instrName = ""ldw"""		286577	0		=			
ANR	286899	Identifier	instrName		286577	0					
ANR	286900	PrimaryExpression	"""ldw"""		286577	1					
ANR	286901	ExpressionStatement	state -> _load_len = 2	553:3:12698:12718	286577	10	True				
ANR	286902	AssignmentExpression	state -> _load_len = 2		286577	0		=			
ANR	286903	PtrMemberAccess	state -> _load_len		286577	0					
ANR	286904	Identifier	state		286577	0					
ANR	286905	Identifier	_load_len		286577	1					
ANR	286906	PrimaryExpression	2		286577	1					
ANR	286907	BreakStatement	break ;	554:3:12723:12728	286577	11	True				
ANR	286908	Label	default :	555:1:12731:12738	286577	12	True				
ANR	286909	Identifier	default		286577	0					
ANR	286910	ExpressionStatement	"instrName = ""??? (0[3])"""	556:3:12743:12767	286577	13	True				
ANR	286911	AssignmentExpression	"instrName = ""??? (0[3])"""		286577	0		=			
ANR	286912	Identifier	instrName		286577	0					
ANR	286913	PrimaryExpression	"""??? (0[3])"""		286577	1					
ANR	286914	ExpressionStatement	state -> flow = invalid_instr	557:3:12772:12799	286577	14	True				
ANR	286915	AssignmentExpression	state -> flow = invalid_instr		286577	0		=			
ANR	286916	PtrMemberAccess	state -> flow		286577	0					
ANR	286917	Identifier	state		286577	0					
ANR	286918	Identifier	flow		286577	1					
ANR	286919	Identifier	invalid_instr		286577	1					
ANR	286920	BreakStatement	break ;	558:3:12804:12809	286577	15	True				
ANR	286921	ExpressionStatement	decodingClass = CLASS_A4_LD0	560:6:12820:12848	286577	2	True				
ANR	286922	AssignmentExpression	decodingClass = CLASS_A4_LD0		286577	0		=			
ANR	286923	Identifier	decodingClass		286577	0					
ANR	286924	Identifier	CLASS_A4_LD0		286577	1					
ANR	286925	BreakStatement	break ;	561:6:12856:12861	286577	3	True				
ANR	286926	Label	case op_LD1 :	563:4:12868:12879	286577	4	True				
ANR	286927	Identifier	op_LD1		286577	0					
ANR	286928	IfStatement	"if ( BIT ( state -> words [ 0 ] , 13 ) )"		286577	5					
ANR	286929	Condition	"BIT ( state -> words [ 0 ] , 13 )"	564:10:12891:12914	286577	0	True				
ANR	286930	CallExpression	"BIT ( state -> words [ 0 ] , 13 )"		286577	0					
ANR	286931	Callee	BIT		286577	0					
ANR	286932	Identifier	BIT		286577	0					
ANR	286933	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	286934	Argument	state -> words [ 0 ]		286577	0					
ANR	286935	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	286936	PtrMemberAccess	state -> words		286577	0					
ANR	286937	Identifier	state		286577	0					
ANR	286938	Identifier	words		286577	1					
ANR	286939	PrimaryExpression	0		286577	1					
ANR	286940	Argument	13		286577	1					
ANR	286941	PrimaryExpression	13		286577	0					
ANR	286942	CompoundStatement		71:1:1507:1507	286577	1					
ANR	286943	ExpressionStatement	"instrName = ""lr"""	566:3:12923:12939	286577	0	True				
ANR	286944	AssignmentExpression	"instrName = ""lr"""		286577	0		=			
ANR	286945	Identifier	instrName		286577	0					
ANR	286946	PrimaryExpression	"""lr"""		286577	1					
ANR	286947	ExpressionStatement	decodingClass = CLASS_A4_LR	567:3:12944:12971	286577	1	True				
ANR	286948	AssignmentExpression	decodingClass = CLASS_A4_LR		286577	0		=			
ANR	286949	Identifier	decodingClass		286577	0					
ANR	286950	Identifier	CLASS_A4_LR		286577	1					
ANR	286951	ElseStatement	else		286577	0					
ANR	286952	CompoundStatement		76:1:1577:1577	286577	0					
ANR	286953	SwitchStatement	"switch ( BITS ( state -> words [ 0 ] , 10 , 11 ) )"		286577	0					
ANR	286954	Condition	"BITS ( state -> words [ 0 ] , 10 , 11 )"	571:11:13001:13030	286577	0	True				
ANR	286955	CallExpression	"BITS ( state -> words [ 0 ] , 10 , 11 )"		286577	0					
ANR	286956	Callee	BITS		286577	0					
ANR	286957	Identifier	BITS		286577	0					
ANR	286958	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	286959	Argument	state -> words [ 0 ]		286577	0					
ANR	286960	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	286961	PtrMemberAccess	state -> words		286577	0					
ANR	286962	Identifier	state		286577	0					
ANR	286963	Identifier	words		286577	1					
ANR	286964	PrimaryExpression	0		286577	1					
ANR	286965	Argument	10		286577	1					
ANR	286966	PrimaryExpression	10		286577	0					
ANR	286967	Argument	11		286577	2					
ANR	286968	PrimaryExpression	11		286577	0					
ANR	286969	CompoundStatement		78:5:1627:1627	286577	1					
ANR	286970	Label	case 0 :	573:5:13045:13051	286577	0	True				
ANR	286971	ExpressionStatement	"instrName = ""ld"""	573:13:13053:13069	286577	1	True				
ANR	286972	AssignmentExpression	"instrName = ""ld"""		286577	0		=			
ANR	286973	Identifier	instrName		286577	0					
ANR	286974	PrimaryExpression	"""ld"""		286577	1					
ANR	286975	ExpressionStatement	state -> _load_len = 4	573:37:13077:13097	286577	2	True				
ANR	286976	AssignmentExpression	state -> _load_len = 4		286577	0		=			
ANR	286977	PtrMemberAccess	state -> _load_len		286577	0					
ANR	286978	Identifier	state		286577	0					
ANR	286979	Identifier	_load_len		286577	1					
ANR	286980	PrimaryExpression	4		286577	1					
ANR	286981	BreakStatement	break ;	573:59:13099:13104	286577	3	True				
ANR	286982	Label	case 1 :	574:5:13111:13117	286577	4	True				
ANR	286983	ExpressionStatement	"instrName = ""ldb"""	574:13:13119:13136	286577	5	True				
ANR	286984	AssignmentExpression	"instrName = ""ldb"""		286577	0		=			
ANR	286985	Identifier	instrName		286577	0					
ANR	286986	PrimaryExpression	"""ldb"""		286577	1					
ANR	286987	ExpressionStatement	state -> _load_len = 1	574:37:13143:13163	286577	6	True				
ANR	286988	AssignmentExpression	state -> _load_len = 1		286577	0		=			
ANR	286989	PtrMemberAccess	state -> _load_len		286577	0					
ANR	286990	Identifier	state		286577	0					
ANR	286991	Identifier	_load_len		286577	1					
ANR	286992	PrimaryExpression	1		286577	1					
ANR	286993	BreakStatement	break ;	574:59:13165:13170	286577	7	True				
ANR	286994	Label	case 2 :	575:5:13177:13183	286577	8	True				
ANR	286995	ExpressionStatement	"instrName = ""ldw"""	575:13:13185:13202	286577	9	True				
ANR	286996	AssignmentExpression	"instrName = ""ldw"""		286577	0		=			
ANR	286997	Identifier	instrName		286577	0					
ANR	286998	PrimaryExpression	"""ldw"""		286577	1					
ANR	286999	ExpressionStatement	state -> _load_len = 2	575:37:13209:13229	286577	10	True				
ANR	287000	AssignmentExpression	state -> _load_len = 2		286577	0		=			
ANR	287001	PtrMemberAccess	state -> _load_len		286577	0					
ANR	287002	Identifier	state		286577	0					
ANR	287003	Identifier	_load_len		286577	1					
ANR	287004	PrimaryExpression	2		286577	1					
ANR	287005	BreakStatement	break ;	575:59:13231:13236	286577	11	True				
ANR	287006	Label	default :	576:5:13243:13250	286577	12	True				
ANR	287007	Identifier	default		286577	0					
ANR	287008	ExpressionStatement	"instrName = ""??? (1[3])"""	576:14:13252:13276	286577	13	True				
ANR	287009	AssignmentExpression	"instrName = ""??? (1[3])"""		286577	0		=			
ANR	287010	Identifier	instrName		286577	0					
ANR	287011	PrimaryExpression	"""??? (1[3])"""		286577	1					
ANR	287012	ExpressionStatement	state -> flow = invalid_instr	577:7:13285:13312	286577	14	True				
ANR	287013	AssignmentExpression	state -> flow = invalid_instr		286577	0		=			
ANR	287014	PtrMemberAccess	state -> flow		286577	0					
ANR	287015	Identifier	state		286577	0					
ANR	287016	Identifier	flow		286577	1					
ANR	287017	Identifier	invalid_instr		286577	1					
ANR	287018	BreakStatement	break ;	577:36:13314:13319	286577	15	True				
ANR	287019	ExpressionStatement	decodingClass = CLASS_A4_LD1	579:3:13331:13359	286577	1	True				
ANR	287020	AssignmentExpression	decodingClass = CLASS_A4_LD1		286577	0		=			
ANR	287021	Identifier	decodingClass		286577	0					
ANR	287022	Identifier	CLASS_A4_LD1		286577	1					
ANR	287023	BreakStatement	break ;	581:6:13370:13375	286577	6	True				
ANR	287024	Label	case op_ST :	583:4:13382:13392	286577	7	True				
ANR	287025	Identifier	op_ST		286577	0					
ANR	287026	IfStatement	"if ( BIT ( state -> words [ 0 ] , 25 ) )"		286577	8					
ANR	287027	Condition	"BIT ( state -> words [ 0 ] , 25 )"	584:10:13404:13428	286577	0	True				
ANR	287028	CallExpression	"BIT ( state -> words [ 0 ] , 25 )"		286577	0					
ANR	287029	Callee	BIT		286577	0					
ANR	287030	Identifier	BIT		286577	0					
ANR	287031	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287032	Argument	state -> words [ 0 ]		286577	0					
ANR	287033	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287034	PtrMemberAccess	state -> words		286577	0					
ANR	287035	Identifier	state		286577	0					
ANR	287036	Identifier	words		286577	1					
ANR	287037	PrimaryExpression	0		286577	1					
ANR	287038	Argument	25		286577	1					
ANR	287039	PrimaryExpression	25		286577	0					
ANR	287040	CompoundStatement		91:1:2021:2021	286577	1					
ANR	287041	ExpressionStatement	"instrName = ""sr"""	586:3:13437:13453	286577	0	True				
ANR	287042	AssignmentExpression	"instrName = ""sr"""		286577	0		=			
ANR	287043	Identifier	instrName		286577	0					
ANR	287044	PrimaryExpression	"""sr"""		286577	1					
ANR	287045	ExpressionStatement	decodingClass = CLASS_A4_SR	587:3:13458:13485	286577	1	True				
ANR	287046	AssignmentExpression	decodingClass = CLASS_A4_SR		286577	0		=			
ANR	287047	Identifier	decodingClass		286577	0					
ANR	287048	Identifier	CLASS_A4_SR		286577	1					
ANR	287049	ElseStatement	else		286577	0					
ANR	287050	CompoundStatement		96:1:2091:2091	286577	0					
ANR	287051	SwitchStatement	"switch ( BITS ( state -> words [ 0 ] , 22 , 23 ) )"		286577	0					
ANR	287052	Condition	"BITS ( state -> words [ 0 ] , 22 , 23 )"	591:11:13515:13544	286577	0	True				
ANR	287053	CallExpression	"BITS ( state -> words [ 0 ] , 22 , 23 )"		286577	0					
ANR	287054	Callee	BITS		286577	0					
ANR	287055	Identifier	BITS		286577	0					
ANR	287056	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287057	Argument	state -> words [ 0 ]		286577	0					
ANR	287058	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287059	PtrMemberAccess	state -> words		286577	0					
ANR	287060	Identifier	state		286577	0					
ANR	287061	Identifier	words		286577	1					
ANR	287062	PrimaryExpression	0		286577	1					
ANR	287063	Argument	22		286577	1					
ANR	287064	PrimaryExpression	22		286577	0					
ANR	287065	Argument	23		286577	2					
ANR	287066	PrimaryExpression	23		286577	0					
ANR	287067	CompoundStatement		98:5:2141:2141	286577	1					
ANR	287068	Label	case 0 :	593:5:13559:13565	286577	0	True				
ANR	287069	ExpressionStatement	"instrName = ""st"""	593:13:13567:13583	286577	1	True				
ANR	287070	AssignmentExpression	"instrName = ""st"""		286577	0		=			
ANR	287071	Identifier	instrName		286577	0					
ANR	287072	PrimaryExpression	"""st"""		286577	1					
ANR	287073	BreakStatement	break ;	593:37:13591:13596	286577	2	True				
ANR	287074	Label	case 1 :	594:5:13603:13609	286577	3	True				
ANR	287075	ExpressionStatement	"instrName = ""stb"""	594:13:13611:13628	286577	4	True				
ANR	287076	AssignmentExpression	"instrName = ""stb"""		286577	0		=			
ANR	287077	Identifier	instrName		286577	0					
ANR	287078	PrimaryExpression	"""stb"""		286577	1					
ANR	287079	BreakStatement	break ;	594:37:13635:13640	286577	5	True				
ANR	287080	Label	case 2 :	595:5:13647:13653	286577	6	True				
ANR	287081	ExpressionStatement	"instrName = ""stw"""	595:13:13655:13672	286577	7	True				
ANR	287082	AssignmentExpression	"instrName = ""stw"""		286577	0		=			
ANR	287083	Identifier	instrName		286577	0					
ANR	287084	PrimaryExpression	"""stw"""		286577	1					
ANR	287085	BreakStatement	break ;	595:37:13679:13684	286577	8	True				
ANR	287086	Label	default :	596:5:13691:13698	286577	9	True				
ANR	287087	Identifier	default		286577	0					
ANR	287088	ExpressionStatement	"instrName = ""??? (2[3])"""	596:14:13700:13724	286577	10	True				
ANR	287089	AssignmentExpression	"instrName = ""??? (2[3])"""		286577	0		=			
ANR	287090	Identifier	instrName		286577	0					
ANR	287091	PrimaryExpression	"""??? (2[3])"""		286577	1					
ANR	287092	ExpressionStatement	state -> flow = invalid_instr	597:7:13733:13760	286577	11	True				
ANR	287093	AssignmentExpression	state -> flow = invalid_instr		286577	0		=			
ANR	287094	PtrMemberAccess	state -> flow		286577	0					
ANR	287095	Identifier	state		286577	0					
ANR	287096	Identifier	flow		286577	1					
ANR	287097	Identifier	invalid_instr		286577	1					
ANR	287098	BreakStatement	break ;	597:36:13762:13767	286577	12	True				
ANR	287099	ExpressionStatement	decodingClass = CLASS_A4_ST	599:3:13779:13806	286577	1	True				
ANR	287100	AssignmentExpression	decodingClass = CLASS_A4_ST		286577	0		=			
ANR	287101	Identifier	decodingClass		286577	0					
ANR	287102	Identifier	CLASS_A4_ST		286577	1					
ANR	287103	BreakStatement	break ;	601:6:13817:13822	286577	9	True				
ANR	287104	Label	case op_3 :	603:4:13829:13838	286577	10	True				
ANR	287105	Identifier	op_3		286577	0					
ANR	287106	ExpressionStatement	decodingClass = CLASS_A4_OP3_GENERAL	604:6:13846:13882	286577	11	True				
ANR	287107	AssignmentExpression	decodingClass = CLASS_A4_OP3_GENERAL		286577	0		=			
ANR	287108	Identifier	decodingClass		286577	0					
ANR	287109	Identifier	CLASS_A4_OP3_GENERAL		286577	1					
ANR	287110	SwitchStatement	switch ( FIELDC ( state -> words [ 0 ] ) )		286577	12					
ANR	287111	Condition	FIELDC ( state -> words [ 0 ] )	605:14:13930:13953	286577	0	True				
ANR	287112	CallExpression	FIELDC ( state -> words [ 0 ] )		286577	0					
ANR	287113	Callee	FIELDC		286577	0					
ANR	287114	Identifier	FIELDC		286577	0					
ANR	287115	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287116	Argument	state -> words [ 0 ]		286577	0					
ANR	287117	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287118	PtrMemberAccess	state -> words		286577	0					
ANR	287119	Identifier	state		286577	0					
ANR	287120	Identifier	words		286577	1					
ANR	287121	PrimaryExpression	0		286577	1					
ANR	287122	CompoundStatement		112:1:2546:2546	286577	1					
ANR	287123	Label	case 0 :	607:1:13960:13967	286577	0	True				
ANR	287124	ExpressionStatement	"instrName = ""flag"""	608:3:13972:13990	286577	1	True				
ANR	287125	AssignmentExpression	"instrName = ""flag"""		286577	0		=			
ANR	287126	Identifier	instrName		286577	0					
ANR	287127	PrimaryExpression	"""flag"""		286577	1					
ANR	287128	ExpressionStatement	decodingClass = CLASS_A4_FLAG	609:3:13995:14024	286577	2	True				
ANR	287129	AssignmentExpression	decodingClass = CLASS_A4_FLAG		286577	0		=			
ANR	287130	Identifier	decodingClass		286577	0					
ANR	287131	Identifier	CLASS_A4_FLAG		286577	1					
ANR	287132	BreakStatement	break ;	610:3:14029:14034	286577	3	True				
ANR	287133	Label	case 1 :	611:1:14037:14044	286577	4	True				
ANR	287134	ExpressionStatement	"instrName = ""asr"""	612:3:14049:14066	286577	5	True				
ANR	287135	AssignmentExpression	"instrName = ""asr"""		286577	0		=			
ANR	287136	Identifier	instrName		286577	0					
ANR	287137	PrimaryExpression	"""asr"""		286577	1					
ANR	287138	BreakStatement	break ;	613:3:14071:14076	286577	6	True				
ANR	287139	Label	case 2 :	614:1:14079:14086	286577	7	True				
ANR	287140	ExpressionStatement	"instrName = ""lsr"""	615:3:14091:14108	286577	8	True				
ANR	287141	AssignmentExpression	"instrName = ""lsr"""		286577	0		=			
ANR	287142	Identifier	instrName		286577	0					
ANR	287143	PrimaryExpression	"""lsr"""		286577	1					
ANR	287144	BreakStatement	break ;	616:3:14113:14118	286577	9	True				
ANR	287145	Label	case 3 :	617:1:14121:14128	286577	10	True				
ANR	287146	ExpressionStatement	"instrName = ""ror"""	618:3:14133:14150	286577	11	True				
ANR	287147	AssignmentExpression	"instrName = ""ror"""		286577	0		=			
ANR	287148	Identifier	instrName		286577	0					
ANR	287149	PrimaryExpression	"""ror"""		286577	1					
ANR	287150	BreakStatement	break ;	619:3:14155:14160	286577	12	True				
ANR	287151	Label	case 4 :	620:1:14163:14170	286577	13	True				
ANR	287152	ExpressionStatement	"instrName = ""rrc"""	621:3:14175:14192	286577	14	True				
ANR	287153	AssignmentExpression	"instrName = ""rrc"""		286577	0		=			
ANR	287154	Identifier	instrName		286577	0					
ANR	287155	PrimaryExpression	"""rrc"""		286577	1					
ANR	287156	BreakStatement	break ;	622:3:14197:14202	286577	15	True				
ANR	287157	Label	case 5 :	623:1:14205:14212	286577	16	True				
ANR	287158	ExpressionStatement	"instrName = ""sexb"""	624:3:14217:14235	286577	17	True				
ANR	287159	AssignmentExpression	"instrName = ""sexb"""		286577	0		=			
ANR	287160	Identifier	instrName		286577	0					
ANR	287161	PrimaryExpression	"""sexb"""		286577	1					
ANR	287162	BreakStatement	break ;	625:3:14240:14245	286577	18	True				
ANR	287163	Label	case 6 :	626:1:14248:14255	286577	19	True				
ANR	287164	ExpressionStatement	"instrName = ""sexw"""	627:3:14260:14278	286577	20	True				
ANR	287165	AssignmentExpression	"instrName = ""sexw"""		286577	0		=			
ANR	287166	Identifier	instrName		286577	0					
ANR	287167	PrimaryExpression	"""sexw"""		286577	1					
ANR	287168	BreakStatement	break ;	628:3:14283:14288	286577	21	True				
ANR	287169	Label	case 7 :	629:1:14291:14298	286577	22	True				
ANR	287170	ExpressionStatement	"instrName = ""extb"""	630:3:14303:14321	286577	23	True				
ANR	287171	AssignmentExpression	"instrName = ""extb"""		286577	0		=			
ANR	287172	Identifier	instrName		286577	0					
ANR	287173	PrimaryExpression	"""extb"""		286577	1					
ANR	287174	BreakStatement	break ;	631:3:14326:14331	286577	24	True				
ANR	287175	Label	case 8 :	632:1:14334:14341	286577	25	True				
ANR	287176	ExpressionStatement	"instrName = ""extw"""	633:3:14346:14364	286577	26	True				
ANR	287177	AssignmentExpression	"instrName = ""extw"""		286577	0		=			
ANR	287178	Identifier	instrName		286577	0					
ANR	287179	PrimaryExpression	"""extw"""		286577	1					
ANR	287180	BreakStatement	break ;	634:3:14369:14374	286577	27	True				
ANR	287181	Label	case 0x3f :	635:1:14377:14387	286577	28	True				
ANR	287182	CompoundStatement		142:3:2981:2981	286577	29					
ANR	287183	ExpressionStatement	decodingClass = CLASS_A4_OP3_SUBOPC3F	637:5:14399:14436	286577	0	True				
ANR	287184	AssignmentExpression	decodingClass = CLASS_A4_OP3_SUBOPC3F		286577	0		=			
ANR	287185	Identifier	decodingClass		286577	0					
ANR	287186	Identifier	CLASS_A4_OP3_SUBOPC3F		286577	1					
ANR	287187	SwitchStatement	switch ( FIELDD ( state -> words [ 0 ] ) )		286577	1					
ANR	287188	Condition	FIELDD ( state -> words [ 0 ] )	638:13:14451:14474	286577	0	True				
ANR	287189	CallExpression	FIELDD ( state -> words [ 0 ] )		286577	0					
ANR	287190	Callee	FIELDD		286577	0					
ANR	287191	Identifier	FIELDD		286577	0					
ANR	287192	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287193	Argument	state -> words [ 0 ]		286577	0					
ANR	287194	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287195	PtrMemberAccess	state -> words		286577	0					
ANR	287196	Identifier	state		286577	0					
ANR	287197	Identifier	words		286577	1					
ANR	287198	PrimaryExpression	0		286577	1					
ANR	287199	CompoundStatement		145:7:3073:3073	286577	1					
ANR	287200	Label	case 0 :	640:7:14493:14499	286577	0	True				
ANR	287201	ExpressionStatement	"instrName = ""brk"""	641:2:14503:14520	286577	1	True				
ANR	287202	AssignmentExpression	"instrName = ""brk"""		286577	0		=			
ANR	287203	Identifier	instrName		286577	0					
ANR	287204	PrimaryExpression	"""brk"""		286577	1					
ANR	287205	BreakStatement	break ;	642:2:14524:14529	286577	2	True				
ANR	287206	Label	case 1 :	643:7:14538:14544	286577	3	True				
ANR	287207	ExpressionStatement	"instrName = ""sleep"""	644:2:14548:14567	286577	4	True				
ANR	287208	AssignmentExpression	"instrName = ""sleep"""		286577	0		=			
ANR	287209	Identifier	instrName		286577	0					
ANR	287210	PrimaryExpression	"""sleep"""		286577	1					
ANR	287211	BreakStatement	break ;	645:2:14571:14576	286577	5	True				
ANR	287212	Label	case 2 :	646:7:14585:14591	286577	6	True				
ANR	287213	ExpressionStatement	"instrName = ""swi"""	647:2:14595:14612	286577	7	True				
ANR	287214	AssignmentExpression	"instrName = ""swi"""		286577	0		=			
ANR	287215	Identifier	instrName		286577	0					
ANR	287216	PrimaryExpression	"""swi"""		286577	1					
ANR	287217	BreakStatement	break ;	648:2:14616:14621	286577	8	True				
ANR	287218	Label	default :	649:7:14630:14637	286577	9	True				
ANR	287219	Identifier	default		286577	0					
ANR	287220	ExpressionStatement	"instrName = ""???"""	650:2:14641:14658	286577	10	True				
ANR	287221	AssignmentExpression	"instrName = ""???"""		286577	0		=			
ANR	287222	Identifier	instrName		286577	0					
ANR	287223	PrimaryExpression	"""???"""		286577	1					
ANR	287224	ExpressionStatement	state -> flow = invalid_instr	651:2:14662:14687	286577	11	True				
ANR	287225	AssignmentExpression	state -> flow = invalid_instr		286577	0		=			
ANR	287226	PtrMemberAccess	state -> flow		286577	0					
ANR	287227	Identifier	state		286577	0					
ANR	287228	Identifier	flow		286577	1					
ANR	287229	Identifier	invalid_instr		286577	1					
ANR	287230	BreakStatement	break ;	652:2:14691:14696	286577	12	True				
ANR	287231	BreakStatement	break ;	655:3:14715:14720	286577	30	True				
ANR	287232	Label	default :	659:1:14830:14837	286577	31	True				
ANR	287233	Identifier	default		286577	0					
ANR	287234	ExpressionStatement	"instrName = instruction_name ( state , state -> _opcode , FIELDC ( state -> words [ 0 ] ) , & flags )"	660:3:14842:14943	286577	32	True				
ANR	287235	AssignmentExpression	"instrName = instruction_name ( state , state -> _opcode , FIELDC ( state -> words [ 0 ] ) , & flags )"		286577	0		=			
ANR	287236	Identifier	instrName		286577	0					
ANR	287237	CallExpression	"instruction_name ( state , state -> _opcode , FIELDC ( state -> words [ 0 ] ) , & flags )"		286577	1					
ANR	287238	Callee	instruction_name		286577	0					
ANR	287239	Identifier	instruction_name		286577	0					
ANR	287240	ArgumentList	state		286577	1					
ANR	287241	Argument	state		286577	0					
ANR	287242	Identifier	state		286577	0					
ANR	287243	Argument	state -> _opcode		286577	1					
ANR	287244	PtrMemberAccess	state -> _opcode		286577	0					
ANR	287245	Identifier	state		286577	0					
ANR	287246	Identifier	_opcode		286577	1					
ANR	287247	Argument	FIELDC ( state -> words [ 0 ] )		286577	2					
ANR	287248	CallExpression	FIELDC ( state -> words [ 0 ] )		286577	0					
ANR	287249	Callee	FIELDC		286577	0					
ANR	287250	Identifier	FIELDC		286577	0					
ANR	287251	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287252	Argument	state -> words [ 0 ]		286577	0					
ANR	287253	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287254	PtrMemberAccess	state -> words		286577	0					
ANR	287255	Identifier	state		286577	0					
ANR	287256	Identifier	words		286577	1					
ANR	287257	PrimaryExpression	0		286577	1					
ANR	287258	Argument	& flags		286577	3					
ANR	287259	UnaryOperationExpression	& flags		286577	0					
ANR	287260	UnaryOperator	&		286577	0					
ANR	287261	Identifier	flags		286577	1					
ANR	287262	IfStatement	if ( ! instrName )		286577	33					
ANR	287263	Condition	! instrName	664:7:14952:14961	286577	0	True				
ANR	287264	UnaryOperationExpression	! instrName		286577	0					
ANR	287265	UnaryOperator	!		286577	0					
ANR	287266	Identifier	instrName		286577	1					
ANR	287267	CompoundStatement		171:5:3558:3558	286577	1					
ANR	287268	ExpressionStatement	"instrName = ""???"""	666:7:14978:14995	286577	0	True				
ANR	287269	AssignmentExpression	"instrName = ""???"""		286577	0		=			
ANR	287270	Identifier	instrName		286577	0					
ANR	287271	PrimaryExpression	"""???"""		286577	1					
ANR	287272	ExpressionStatement	state -> flow = invalid_instr	667:7:15004:15031	286577	1	True				
ANR	287273	AssignmentExpression	state -> flow = invalid_instr		286577	0		=			
ANR	287274	PtrMemberAccess	state -> flow		286577	0					
ANR	287275	Identifier	state		286577	0					
ANR	287276	Identifier	flow		286577	1					
ANR	287277	Identifier	invalid_instr		286577	1					
ANR	287278	IfStatement	if ( flags & IGNORE_FIRST_OPD )		286577	34					
ANR	287279	Condition	flags & IGNORE_FIRST_OPD	669:9:15049:15072	286577	0	True				
ANR	287280	BitAndExpression	flags & IGNORE_FIRST_OPD		286577	0		&			
ANR	287281	Identifier	flags		286577	0					
ANR	287282	Identifier	IGNORE_FIRST_OPD		286577	1					
ANR	287283	CompoundStatement		175:35:3664:3664	286577	1					
ANR	287284	ExpressionStatement	ignoreFirstOpd = 1	670:6:15083:15101	286577	0	True				
ANR	287285	AssignmentExpression	ignoreFirstOpd = 1		286577	0		=			
ANR	287286	Identifier	ignoreFirstOpd		286577	0					
ANR	287287	PrimaryExpression	1		286577	1					
ANR	287288	BreakStatement	break ;	672:5:15115:15120	286577	35	True				
ANR	287289	BreakStatement	break ;	675:6:15132:15137	286577	13	True				
ANR	287290	Label	case op_BC :	677:4:15144:15154	286577	14	True				
ANR	287291	Identifier	op_BC		286577	0					
ANR	287292	ExpressionStatement	"instrName = ""b"""	677:17:15157:15172	286577	15	True				
ANR	287293	AssignmentExpression	"instrName = ""b"""		286577	0		=			
ANR	287294	Identifier	instrName		286577	0					
ANR	287295	PrimaryExpression	"""b"""		286577	1					
ANR	287296	Label	case op_BLC :	678:4:15178:15189	286577	16	True				
ANR	287297	Identifier	op_BLC		286577	0					
ANR	287298	IfStatement	if ( ! instrName )		286577	17					
ANR	287299	Condition	! instrName	679:9:15200:15209	286577	0	True				
ANR	287300	UnaryOperationExpression	! instrName		286577	0					
ANR	287301	UnaryOperator	!		286577	0					
ANR	287302	Identifier	instrName		286577	1					
ANR	287303	CompoundStatement		185:21:3801:3801	286577	1					
ANR	287304	ExpressionStatement	"instrName = ""bl"""	680:6:15220:15236	286577	0	True				
ANR	287305	AssignmentExpression	"instrName = ""bl"""		286577	0		=			
ANR	287306	Identifier	instrName		286577	0					
ANR	287307	PrimaryExpression	"""bl"""		286577	1					
ANR	287308	Label	case op_LPC :	682:4:15249:15260	286577	18	True				
ANR	287309	Identifier	op_LPC		286577	0					
ANR	287310	IfStatement	if ( ! instrName )		286577	19					
ANR	287311	Condition	! instrName	683:9:15271:15280	286577	0	True				
ANR	287312	UnaryOperationExpression	! instrName		286577	0					
ANR	287313	UnaryOperator	!		286577	0					
ANR	287314	Identifier	instrName		286577	1					
ANR	287315	CompoundStatement		189:21:3872:3872	286577	1					
ANR	287316	ExpressionStatement	"instrName = ""lp"""	684:6:15291:15307	286577	0	True				
ANR	287317	AssignmentExpression	"instrName = ""lp"""		286577	0		=			
ANR	287318	Identifier	instrName		286577	0					
ANR	287319	PrimaryExpression	"""lp"""		286577	1					
ANR	287320	Label	case op_JC :	686:4:15320:15330	286577	20	True				
ANR	287321	Identifier	op_JC		286577	0					
ANR	287322	IfStatement	if ( ! instrName )		286577	21					
ANR	287323	Condition	! instrName	687:10:15342:15351	286577	0	True				
ANR	287324	UnaryOperationExpression	! instrName		286577	0					
ANR	287325	UnaryOperator	!		286577	0					
ANR	287326	Identifier	instrName		286577	1					
ANR	287327	CompoundStatement		194:1:3944:3944	286577	1					
ANR	287328	IfStatement	"if ( BITS ( state -> words [ 0 ] , 9 , 9 ) )"		286577	0					
ANR	287329	Condition	"BITS ( state -> words [ 0 ] , 9 , 9 )"	689:7:15364:15389	286577	0	True				
ANR	287330	CallExpression	"BITS ( state -> words [ 0 ] , 9 , 9 )"		286577	0					
ANR	287331	Callee	BITS		286577	0					
ANR	287332	Identifier	BITS		286577	0					
ANR	287333	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287334	Argument	state -> words [ 0 ]		286577	0					
ANR	287335	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287336	PtrMemberAccess	state -> words		286577	0					
ANR	287337	Identifier	state		286577	0					
ANR	287338	Identifier	words		286577	1					
ANR	287339	PrimaryExpression	0		286577	1					
ANR	287340	Argument	9		286577	1					
ANR	287341	PrimaryExpression	9		286577	0					
ANR	287342	Argument	9		286577	2					
ANR	287343	PrimaryExpression	9		286577	0					
ANR	287344	CompoundStatement		196:5:3986:3986	286577	1					
ANR	287345	ExpressionStatement	"instrName = ""jl"""	691:7:15406:15422	286577	0	True				
ANR	287346	AssignmentExpression	"instrName = ""jl"""		286577	0		=			
ANR	287347	Identifier	instrName		286577	0					
ANR	287348	PrimaryExpression	"""jl"""		286577	1					
ANR	287349	ExpressionStatement	is_linked = 1	692:7:15431:15444	286577	1	True				
ANR	287350	AssignmentExpression	is_linked = 1		286577	0		=			
ANR	287351	Identifier	is_linked		286577	0					
ANR	287352	PrimaryExpression	1		286577	1					
ANR	287353	ElseStatement	else		286577	0					
ANR	287354	CompoundStatement		201:5:4055:4055	286577	0					
ANR	287355	ExpressionStatement	"instrName = ""j"""	696:7:15475:15490	286577	0	True				
ANR	287356	AssignmentExpression	"instrName = ""j"""		286577	0		=			
ANR	287357	Identifier	instrName		286577	0					
ANR	287358	PrimaryExpression	"""j"""		286577	1					
ANR	287359	ExpressionStatement	is_linked = 0	697:7:15499:15512	286577	1	True				
ANR	287360	AssignmentExpression	is_linked = 0		286577	0		=			
ANR	287361	Identifier	is_linked		286577	0					
ANR	287362	PrimaryExpression	0		286577	1					
ANR	287363	ExpressionStatement	condCodeIsPartOfName = 1	700:6:15530:15554	286577	22	True				
ANR	287364	AssignmentExpression	condCodeIsPartOfName = 1		286577	0		=			
ANR	287365	Identifier	condCodeIsPartOfName		286577	0					
ANR	287366	PrimaryExpression	1		286577	1					
ANR	287367	ExpressionStatement	decodingClass = ( ( state -> _opcode == op_JC ) ? CLASS_A4_JC : CLASS_A4_BRANCH )	701:6:15562:15638	286577	23	True				
ANR	287368	AssignmentExpression	decodingClass = ( ( state -> _opcode == op_JC ) ? CLASS_A4_JC : CLASS_A4_BRANCH )		286577	0		=			
ANR	287369	Identifier	decodingClass		286577	0					
ANR	287370	ConditionalExpression	( state -> _opcode == op_JC ) ? CLASS_A4_JC : CLASS_A4_BRANCH		286577	1					
ANR	287371	Condition	state -> _opcode == op_JC		286577	0					
ANR	287372	EqualityExpression	state -> _opcode == op_JC		286577	0		==			
ANR	287373	PtrMemberAccess	state -> _opcode		286577	0					
ANR	287374	Identifier	state		286577	0					
ANR	287375	Identifier	_opcode		286577	1					
ANR	287376	Identifier	op_JC		286577	1					
ANR	287377	Identifier	CLASS_A4_JC		286577	1					
ANR	287378	Identifier	CLASS_A4_BRANCH		286577	2					
ANR	287379	ExpressionStatement	state -> isBranch = 1	702:6:15646:15665	286577	24	True				
ANR	287380	AssignmentExpression	state -> isBranch = 1		286577	0		=			
ANR	287381	PtrMemberAccess	state -> isBranch		286577	0					
ANR	287382	Identifier	state		286577	0					
ANR	287383	Identifier	isBranch		286577	1					
ANR	287384	PrimaryExpression	1		286577	1					
ANR	287385	BreakStatement	break ;	703:6:15673:15678	286577	25	True				
ANR	287386	Label	case op_ADD :	705:4:15685:15696	286577	26	True				
ANR	287387	Identifier	op_ADD		286577	0					
ANR	287388	Label	case op_ADC :	706:4:15702:15713	286577	27	True				
ANR	287389	Identifier	op_ADC		286577	0					
ANR	287390	Label	case op_AND :	707:4:15719:15730	286577	28	True				
ANR	287391	Identifier	op_AND		286577	0					
ANR	287392	ExpressionStatement	repeatsOp = ( FIELDC ( state -> words [ 0 ] ) == FIELDB ( state -> words [ 0 ] ) )	708:6:15738:15804	286577	29	True				
ANR	287393	AssignmentExpression	repeatsOp = ( FIELDC ( state -> words [ 0 ] ) == FIELDB ( state -> words [ 0 ] ) )		286577	0		=			
ANR	287394	Identifier	repeatsOp		286577	0					
ANR	287395	EqualityExpression	FIELDC ( state -> words [ 0 ] ) == FIELDB ( state -> words [ 0 ] )		286577	1		==			
ANR	287396	CallExpression	FIELDC ( state -> words [ 0 ] )		286577	0					
ANR	287397	Callee	FIELDC		286577	0					
ANR	287398	Identifier	FIELDC		286577	0					
ANR	287399	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287400	Argument	state -> words [ 0 ]		286577	0					
ANR	287401	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287402	PtrMemberAccess	state -> words		286577	0					
ANR	287403	Identifier	state		286577	0					
ANR	287404	Identifier	words		286577	1					
ANR	287405	PrimaryExpression	0		286577	1					
ANR	287406	CallExpression	FIELDB ( state -> words [ 0 ] )		286577	1					
ANR	287407	Callee	FIELDB		286577	0					
ANR	287408	Identifier	FIELDB		286577	0					
ANR	287409	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287410	Argument	state -> words [ 0 ]		286577	0					
ANR	287411	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287412	PtrMemberAccess	state -> words		286577	0					
ANR	287413	Identifier	state		286577	0					
ANR	287414	Identifier	words		286577	1					
ANR	287415	PrimaryExpression	0		286577	1					
ANR	287416	SwitchStatement	switch ( state -> _opcode )		286577	30					
ANR	287417	Condition	state -> _opcode	709:14:15820:15833	286577	0	True				
ANR	287418	PtrMemberAccess	state -> _opcode		286577	0					
ANR	287419	Identifier	state		286577	0					
ANR	287420	Identifier	_opcode		286577	1					
ANR	287421	CompoundStatement		216:1:4426:4426	286577	1					
ANR	287422	Label	case op_ADD :	711:1:15840:15851	286577	0	True				
ANR	287423	Identifier	op_ADD		286577	0					
ANR	287424	ExpressionStatement	"instrName = ( repeatsOp ? ""asl"" : ""add"" )"	711:14:15853:15892	286577	1	True				
ANR	287425	AssignmentExpression	"instrName = ( repeatsOp ? ""asl"" : ""add"" )"		286577	0		=			
ANR	287426	Identifier	instrName		286577	0					
ANR	287427	ConditionalExpression	"repeatsOp ? ""asl"" : ""add"""		286577	1					
ANR	287428	Condition	repeatsOp		286577	0					
ANR	287429	Identifier	repeatsOp		286577	0					
ANR	287430	PrimaryExpression	"""asl"""		286577	1					
ANR	287431	PrimaryExpression	"""add"""		286577	2					
ANR	287432	BreakStatement	break ;	711:55:15894:15899	286577	2	True				
ANR	287433	Label	case op_ADC :	712:1:15902:15913	286577	3	True				
ANR	287434	Identifier	op_ADC		286577	0					
ANR	287435	ExpressionStatement	"instrName = ( repeatsOp ? ""rlc"" : ""adc"" )"	712:14:15915:15954	286577	4	True				
ANR	287436	AssignmentExpression	"instrName = ( repeatsOp ? ""rlc"" : ""adc"" )"		286577	0		=			
ANR	287437	Identifier	instrName		286577	0					
ANR	287438	ConditionalExpression	"repeatsOp ? ""rlc"" : ""adc"""		286577	1					
ANR	287439	Condition	repeatsOp		286577	0					
ANR	287440	Identifier	repeatsOp		286577	0					
ANR	287441	PrimaryExpression	"""rlc"""		286577	1					
ANR	287442	PrimaryExpression	"""adc"""		286577	2					
ANR	287443	BreakStatement	break ;	712:55:15956:15961	286577	5	True				
ANR	287444	Label	case op_AND :	713:1:15964:15975	286577	6	True				
ANR	287445	Identifier	op_AND		286577	0					
ANR	287446	ExpressionStatement	"instrName = ( repeatsOp ? ""mov"" : ""and"" )"	713:14:15977:16016	286577	7	True				
ANR	287447	AssignmentExpression	"instrName = ( repeatsOp ? ""mov"" : ""and"" )"		286577	0		=			
ANR	287448	Identifier	instrName		286577	0					
ANR	287449	ConditionalExpression	"repeatsOp ? ""mov"" : ""and"""		286577	1					
ANR	287450	Condition	repeatsOp		286577	0					
ANR	287451	Identifier	repeatsOp		286577	0					
ANR	287452	PrimaryExpression	"""mov"""		286577	1					
ANR	287453	PrimaryExpression	"""and"""		286577	2					
ANR	287454	BreakStatement	break ;	713:55:16018:16023	286577	8	True				
ANR	287455	BreakStatement	break ;	715:6:16034:16039	286577	31	True				
ANR	287456	Label	case op_SUB :	718:4:16047:16058	286577	32	True				
ANR	287457	Identifier	op_SUB		286577	0					
ANR	287458	ExpressionStatement	"instrName = ""sub"""	718:17:16060:16077	286577	33	True				
ANR	287459	AssignmentExpression	"instrName = ""sub"""		286577	0		=			
ANR	287460	Identifier	instrName		286577	0					
ANR	287461	PrimaryExpression	"""sub"""		286577	1					
ANR	287462	BreakStatement	break ;	718:36:16079:16084	286577	34	True				
ANR	287463	Label	case op_SBC :	719:4:16090:16101	286577	35	True				
ANR	287464	Identifier	op_SBC		286577	0					
ANR	287465	ExpressionStatement	"instrName = ""sbc"""	719:17:16103:16120	286577	36	True				
ANR	287466	AssignmentExpression	"instrName = ""sbc"""		286577	0		=			
ANR	287467	Identifier	instrName		286577	0					
ANR	287468	PrimaryExpression	"""sbc"""		286577	1					
ANR	287469	BreakStatement	break ;	719:36:16122:16127	286577	37	True				
ANR	287470	Label	case op_OR :	720:4:16133:16143	286577	38	True				
ANR	287471	Identifier	op_OR		286577	0					
ANR	287472	ExpressionStatement	"instrName = ""or"""	720:17:16146:16162	286577	39	True				
ANR	287473	AssignmentExpression	"instrName = ""or"""		286577	0		=			
ANR	287474	Identifier	instrName		286577	0					
ANR	287475	PrimaryExpression	"""or"""		286577	1					
ANR	287476	BreakStatement	break ;	720:36:16165:16170	286577	40	True				
ANR	287477	Label	case op_BIC :	721:4:16176:16187	286577	41	True				
ANR	287478	Identifier	op_BIC		286577	0					
ANR	287479	ExpressionStatement	"instrName = ""bic"""	721:17:16189:16206	286577	42	True				
ANR	287480	AssignmentExpression	"instrName = ""bic"""		286577	0		=			
ANR	287481	Identifier	instrName		286577	0					
ANR	287482	PrimaryExpression	"""bic"""		286577	1					
ANR	287483	BreakStatement	break ;	721:36:16208:16213	286577	43	True				
ANR	287484	Label	case op_XOR :	723:4:16220:16231	286577	44	True				
ANR	287485	Identifier	op_XOR		286577	0					
ANR	287486	IfStatement	if ( state -> words [ 0 ] == 0x7fffffff )		286577	45					
ANR	287487	Condition	state -> words [ 0 ] == 0x7fffffff	724:10:16243:16271	286577	0	True				
ANR	287488	EqualityExpression	state -> words [ 0 ] == 0x7fffffff		286577	0		==			
ANR	287489	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287490	PtrMemberAccess	state -> words		286577	0					
ANR	287491	Identifier	state		286577	0					
ANR	287492	Identifier	words		286577	1					
ANR	287493	PrimaryExpression	0		286577	1					
ANR	287494	PrimaryExpression	0x7fffffff		286577	1					
ANR	287495	CompoundStatement		231:1:4864:4864	286577	1					
ANR	287496	ExpressionStatement	"instrName = ""nop"""	729:3:16400:16417	286577	0	True				
ANR	287497	AssignmentExpression	"instrName = ""nop"""		286577	0		=			
ANR	287498	Identifier	instrName		286577	0					
ANR	287499	PrimaryExpression	"""nop"""		286577	1					
ANR	287500	ExpressionStatement	decodingClass = CLASS_A4_OP3_SUBOPC3F	730:3:16422:16459	286577	1	True				
ANR	287501	AssignmentExpression	decodingClass = CLASS_A4_OP3_SUBOPC3F		286577	0		=			
ANR	287502	Identifier	decodingClass		286577	0					
ANR	287503	Identifier	CLASS_A4_OP3_SUBOPC3F		286577	1					
ANR	287504	ElseStatement	else		286577	0					
ANR	287505	CompoundStatement		237:13:5063:5063	286577	0					
ANR	287506	ExpressionStatement	"instrName = ""xor"""	732:7:16483:16500	286577	0	True				
ANR	287507	AssignmentExpression	"instrName = ""xor"""		286577	0		=			
ANR	287508	Identifier	instrName		286577	0					
ANR	287509	PrimaryExpression	"""xor"""		286577	1					
ANR	287510	BreakStatement	break ;	734:6:16516:16521	286577	46	True				
ANR	287511	Label	default :	736:4:16528:16535	286577	47	True				
ANR	287512	Identifier	default		286577	0					
ANR	287513	ExpressionStatement	"instrName = instruction_name ( state , state -> _opcode , 0 , & flags )"	737:6:16543:16603	286577	48	True				
ANR	287514	AssignmentExpression	"instrName = instruction_name ( state , state -> _opcode , 0 , & flags )"		286577	0		=			
ANR	287515	Identifier	instrName		286577	0					
ANR	287516	CallExpression	"instruction_name ( state , state -> _opcode , 0 , & flags )"		286577	1					
ANR	287517	Callee	instruction_name		286577	0					
ANR	287518	Identifier	instruction_name		286577	0					
ANR	287519	ArgumentList	state		286577	1					
ANR	287520	Argument	state		286577	0					
ANR	287521	Identifier	state		286577	0					
ANR	287522	Argument	state -> _opcode		286577	1					
ANR	287523	PtrMemberAccess	state -> _opcode		286577	0					
ANR	287524	Identifier	state		286577	0					
ANR	287525	Identifier	_opcode		286577	1					
ANR	287526	Argument	0		286577	2					
ANR	287527	PrimaryExpression	0		286577	0					
ANR	287528	Argument	& flags		286577	3					
ANR	287529	UnaryOperationExpression	& flags		286577	0					
ANR	287530	UnaryOperator	&		286577	0					
ANR	287531	Identifier	flags		286577	1					
ANR	287532	IfStatement	if ( ! instrName )		286577	49					
ANR	287533	Condition	! instrName	739:10:16674:16683	286577	0	True				
ANR	287534	UnaryOperationExpression	! instrName		286577	0					
ANR	287535	UnaryOperator	!		286577	0					
ANR	287536	Identifier	instrName		286577	1					
ANR	287537	CompoundStatement		246:1:5276:5276	286577	1					
ANR	287538	ExpressionStatement	"instrName = ""???"""	741:3:16692:16709	286577	0	True				
ANR	287539	AssignmentExpression	"instrName = ""???"""		286577	0		=			
ANR	287540	Identifier	instrName		286577	0					
ANR	287541	PrimaryExpression	"""???"""		286577	1					
ANR	287542	ExpressionStatement	state -> flow = invalid_instr	742:3:16714:16739	286577	1	True				
ANR	287543	AssignmentExpression	state -> flow = invalid_instr		286577	0		=			
ANR	287544	PtrMemberAccess	state -> flow		286577	0					
ANR	287545	Identifier	state		286577	0					
ANR	287546	Identifier	flow		286577	1					
ANR	287547	Identifier	invalid_instr		286577	1					
ANR	287548	IfStatement	if ( flags & IGNORE_FIRST_OPD )		286577	50					
ANR	287549	Condition	flags & IGNORE_FIRST_OPD	744:5:16749:16772	286577	0	True				
ANR	287550	BitAndExpression	flags & IGNORE_FIRST_OPD		286577	0		&			
ANR	287551	Identifier	flags		286577	0					
ANR	287552	Identifier	IGNORE_FIRST_OPD		286577	1					
ANR	287553	CompoundStatement		250:31:5364:5364	286577	1					
ANR	287554	ExpressionStatement	ignoreFirstOpd = 1	745:2:16779:16797	286577	0	True				
ANR	287555	AssignmentExpression	ignoreFirstOpd = 1		286577	0		=			
ANR	287556	Identifier	ignoreFirstOpd		286577	0					
ANR	287557	PrimaryExpression	1		286577	1					
ANR	287558	BreakStatement	break ;	747:1:16803:16808	286577	51	True				
ANR	287559	ExpressionStatement	fieldAisReg = fieldBisReg = fieldCisReg = 1	750:2:16819:16862	286577	36	True				
ANR	287560	AssignmentExpression	fieldAisReg = fieldBisReg = fieldCisReg = 1		286577	0		=			
ANR	287561	Identifier	fieldAisReg		286577	0					
ANR	287562	AssignmentExpression	fieldBisReg = fieldCisReg = 1		286577	1		=			
ANR	287563	Identifier	fieldBisReg		286577	0					
ANR	287564	AssignmentExpression	fieldCisReg = 1		286577	1		=			
ANR	287565	Identifier	fieldCisReg		286577	0					
ANR	287566	PrimaryExpression	1		286577	1					
ANR	287567	ExpressionStatement	flag = cond = is_shimm = is_limm = 0	751:2:16894:16930	286577	37	True				
ANR	287568	AssignmentExpression	flag = cond = is_shimm = is_limm = 0		286577	0		=			
ANR	287569	Identifier	flag		286577	0					
ANR	287570	AssignmentExpression	cond = is_shimm = is_limm = 0		286577	1		=			
ANR	287571	Identifier	cond		286577	0					
ANR	287572	AssignmentExpression	is_shimm = is_limm = 0		286577	1		=			
ANR	287573	Identifier	is_shimm		286577	0					
ANR	287574	AssignmentExpression	is_limm = 0		286577	1		=			
ANR	287575	Identifier	is_limm		286577	0					
ANR	287576	PrimaryExpression	0		286577	1					
ANR	287577	ExpressionStatement	state -> nullifyMode = BR_exec_when_no_jump	752:2:16934:16975	286577	38	True				
ANR	287578	AssignmentExpression	state -> nullifyMode = BR_exec_when_no_jump		286577	0		=			
ANR	287579	PtrMemberAccess	state -> nullifyMode		286577	0					
ANR	287580	Identifier	state		286577	0					
ANR	287581	Identifier	nullifyMode		286577	1					
ANR	287582	Identifier	BR_exec_when_no_jump		286577	1					
ANR	287583	ExpressionStatement	signExtend = addrWriteBack = directMem = 0	753:2:16987:17029	286577	39	True				
ANR	287584	AssignmentExpression	signExtend = addrWriteBack = directMem = 0		286577	0		=			
ANR	287585	Identifier	signExtend		286577	0					
ANR	287586	AssignmentExpression	addrWriteBack = directMem = 0		286577	1		=			
ANR	287587	Identifier	addrWriteBack		286577	0					
ANR	287588	AssignmentExpression	directMem = 0		286577	1		=			
ANR	287589	Identifier	directMem		286577	0					
ANR	287590	PrimaryExpression	0		286577	1					
ANR	287591	ExpressionStatement	usesAuxReg = 0	754:2:17033:17047	286577	40	True				
ANR	287592	AssignmentExpression	usesAuxReg = 0		286577	0		=			
ANR	287593	Identifier	usesAuxReg		286577	0					
ANR	287594	PrimaryExpression	0		286577	1					
ANR	287595	SwitchStatement	switch ( decodingClass )		286577	41					
ANR	287596	Condition	decodingClass	756:10:17060:17072	286577	0	True				
ANR	287597	Identifier	decodingClass		286577	0					
ANR	287598	CompoundStatement		263:4:5668:5668	286577	1					
ANR	287599	Label	case CLASS_A4_ARITH :	758:4:17085:17104	286577	0	True				
ANR	287600	Identifier	CLASS_A4_ARITH		286577	0					
ANR	287601	ExpressionStatement	CHECK_FIELD_A ( )	759:6:17112:17128	286577	1	True				
ANR	287602	CallExpression	CHECK_FIELD_A ( )		286577	0					
ANR	287603	Callee	CHECK_FIELD_A		286577	0					
ANR	287604	Identifier	CHECK_FIELD_A		286577	0					
ANR	287605	ArgumentList			286577	1					
ANR	287606	ExpressionStatement	CHECK_FIELD_B ( )	760:6:17136:17152	286577	2	True				
ANR	287607	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	287608	Callee	CHECK_FIELD_B		286577	0					
ANR	287609	Identifier	CHECK_FIELD_B		286577	0					
ANR	287610	ArgumentList			286577	1					
ANR	287611	IfStatement	if ( ! repeatsOp )		286577	3					
ANR	287612	Condition	! repeatsOp	761:10:17164:17173	286577	0	True				
ANR	287613	UnaryOperationExpression	! repeatsOp		286577	0					
ANR	287614	UnaryOperator	!		286577	0					
ANR	287615	Identifier	repeatsOp		286577	1					
ANR	287616	CompoundStatement		267:22:5765:5765	286577	1					
ANR	287617	ExpressionStatement	CHECK_FIELD_C ( )	762:7:17185:17201	286577	0	True				
ANR	287618	CallExpression	CHECK_FIELD_C ( )		286577	0					
ANR	287619	Callee	CHECK_FIELD_C		286577	0					
ANR	287620	Identifier	CHECK_FIELD_C		286577	0					
ANR	287621	ArgumentList			286577	1					
ANR	287622	ExpressionStatement	CHECK_FLAG_COND_NULLIFY ( )	764:6:17217:17243	286577	4	True				
ANR	287623	CallExpression	CHECK_FLAG_COND_NULLIFY ( )		286577	0					
ANR	287624	Callee	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287625	Identifier	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287626	ArgumentList			286577	1					
ANR	287627	ExpressionStatement	write_instr_name ( )	766:6:17252:17271	286577	5	True				
ANR	287628	CallExpression	write_instr_name ( )		286577	0					
ANR	287629	Callee	write_instr_name		286577	0					
ANR	287630	Identifier	write_instr_name		286577	0					
ANR	287631	ArgumentList			286577	1					
ANR	287632	IfStatement	if ( ! ignoreFirstOpd )		286577	6					
ANR	287633	Condition	! ignoreFirstOpd	767:10:17283:17297	286577	0	True				
ANR	287634	UnaryOperationExpression	! ignoreFirstOpd		286577	0					
ANR	287635	UnaryOperator	!		286577	0					
ANR	287636	Identifier	ignoreFirstOpd		286577	1					
ANR	287637	CompoundStatement		274:1:5890:5890	286577	1					
ANR	287638	ExpressionStatement	WRITE_FORMAT_x ( A )	769:3:17306:17324	286577	0	True				
ANR	287639	CallExpression	WRITE_FORMAT_x ( A )		286577	0					
ANR	287640	Callee	WRITE_FORMAT_x		286577	0					
ANR	287641	Identifier	WRITE_FORMAT_x		286577	0					
ANR	287642	ArgumentList	A		286577	1					
ANR	287643	Argument	A		286577	0					
ANR	287644	Identifier	A		286577	0					
ANR	287645	ExpressionStatement	WRITE_FORMAT_COMMA_x ( B )	770:3:17329:17353	286577	1	True				
ANR	287646	CallExpression	WRITE_FORMAT_COMMA_x ( B )		286577	0					
ANR	287647	Callee	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287648	Identifier	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287649	ArgumentList	B		286577	1					
ANR	287650	Argument	B		286577	0					
ANR	287651	Identifier	B		286577	0					
ANR	287652	IfStatement	if ( ! repeatsOp )		286577	2					
ANR	287653	Condition	! repeatsOp	771:7:17362:17371	286577	0	True				
ANR	287654	UnaryOperationExpression	! repeatsOp		286577	0					
ANR	287655	UnaryOperator	!		286577	0					
ANR	287656	Identifier	repeatsOp		286577	1					
ANR	287657	CompoundStatement		277:19:5963:5963	286577	1					
ANR	287658	ExpressionStatement	WRITE_FORMAT_COMMA_x ( C )	772:4:17380:17404	286577	0	True				
ANR	287659	CallExpression	WRITE_FORMAT_COMMA_x ( C )		286577	0					
ANR	287660	Callee	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287661	Identifier	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287662	ArgumentList	C		286577	1					
ANR	287663	Argument	C		286577	0					
ANR	287664	Identifier	C		286577	0					
ANR	287665	ExpressionStatement	WRITE_NOP_COMMENT ( )	774:3:17414:17434	286577	3	True				
ANR	287666	CallExpression	WRITE_NOP_COMMENT ( )		286577	0					
ANR	287667	Callee	WRITE_NOP_COMMENT		286577	0					
ANR	287668	Identifier	WRITE_NOP_COMMENT		286577	0					
ANR	287669	ArgumentList			286577	1					
ANR	287670	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB , fieldC )"	775:3:17439:17526	286577	4	True				
ANR	287671	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB , fieldC )"		286577	0					
ANR	287672	Callee	arc_sprintf		286577	0					
ANR	287673	Identifier	arc_sprintf		286577	0					
ANR	287674	ArgumentList	state		286577	1					
ANR	287675	Argument	state		286577	0					
ANR	287676	Identifier	state		286577	0					
ANR	287677	Argument	state -> operandBuffer		286577	1					
ANR	287678	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	287679	Identifier	state		286577	0					
ANR	287680	Identifier	operandBuffer		286577	1					
ANR	287681	Argument	formatString		286577	2					
ANR	287682	Identifier	formatString		286577	0					
ANR	287683	Argument	fieldA		286577	3					
ANR	287684	Identifier	fieldA		286577	0					
ANR	287685	Argument	fieldB		286577	4					
ANR	287686	Identifier	fieldB		286577	0					
ANR	287687	Argument	fieldC		286577	5					
ANR	287688	Identifier	fieldC		286577	0					
ANR	287689	ElseStatement	else		286577	0					
ANR	287690	CompoundStatement		285:1:6132:6132	286577	0					
ANR	287691	ExpressionStatement	WRITE_FORMAT_x ( B )	780:3:17548:17566	286577	0	True				
ANR	287692	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	287693	Callee	WRITE_FORMAT_x		286577	0					
ANR	287694	Identifier	WRITE_FORMAT_x		286577	0					
ANR	287695	ArgumentList	B		286577	1					
ANR	287696	Argument	B		286577	0					
ANR	287697	Identifier	B		286577	0					
ANR	287698	IfStatement	if ( ! repeatsOp )		286577	1					
ANR	287699	Condition	! repeatsOp	781:7:17575:17584	286577	0	True				
ANR	287700	UnaryOperationExpression	! repeatsOp		286577	0					
ANR	287701	UnaryOperator	!		286577	0					
ANR	287702	Identifier	repeatsOp		286577	1					
ANR	287703	CompoundStatement		287:19:6176:6176	286577	1					
ANR	287704	ExpressionStatement	WRITE_FORMAT_COMMA_x ( C )	782:4:17593:17617	286577	0	True				
ANR	287705	CallExpression	WRITE_FORMAT_COMMA_x ( C )		286577	0					
ANR	287706	Callee	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287707	Identifier	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287708	ArgumentList	C		286577	1					
ANR	287709	Argument	C		286577	0					
ANR	287710	Identifier	C		286577	0					
ANR	287711	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB , fieldC )"	784:3:17627:17706	286577	2	True				
ANR	287712	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB , fieldC )"		286577	0					
ANR	287713	Callee	arc_sprintf		286577	0					
ANR	287714	Identifier	arc_sprintf		286577	0					
ANR	287715	ArgumentList	state		286577	1					
ANR	287716	Argument	state		286577	0					
ANR	287717	Identifier	state		286577	0					
ANR	287718	Argument	state -> operandBuffer		286577	1					
ANR	287719	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	287720	Identifier	state		286577	0					
ANR	287721	Identifier	operandBuffer		286577	1					
ANR	287722	Argument	formatString		286577	2					
ANR	287723	Identifier	formatString		286577	0					
ANR	287724	Argument	fieldB		286577	3					
ANR	287725	Identifier	fieldB		286577	0					
ANR	287726	Argument	fieldC		286577	4					
ANR	287727	Identifier	fieldC		286577	0					
ANR	287728	BreakStatement	break ;	787:6:17717:17722	286577	7	True				
ANR	287729	Label	case CLASS_A4_OP3_GENERAL :	789:4:17729:17754	286577	8	True				
ANR	287730	Identifier	CLASS_A4_OP3_GENERAL		286577	0					
ANR	287731	ExpressionStatement	CHECK_FIELD_A ( )	790:6:17762:17778	286577	9	True				
ANR	287732	CallExpression	CHECK_FIELD_A ( )		286577	0					
ANR	287733	Callee	CHECK_FIELD_A		286577	0					
ANR	287734	Identifier	CHECK_FIELD_A		286577	0					
ANR	287735	ArgumentList			286577	1					
ANR	287736	ExpressionStatement	CHECK_FIELD_B ( )	791:6:17786:17802	286577	10	True				
ANR	287737	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	287738	Callee	CHECK_FIELD_B		286577	0					
ANR	287739	Identifier	CHECK_FIELD_B		286577	0					
ANR	287740	ArgumentList			286577	1					
ANR	287741	ExpressionStatement	CHECK_FLAG_COND_NULLIFY ( )	792:6:17810:17836	286577	11	True				
ANR	287742	CallExpression	CHECK_FLAG_COND_NULLIFY ( )		286577	0					
ANR	287743	Callee	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287744	Identifier	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287745	ArgumentList			286577	1					
ANR	287746	ExpressionStatement	write_instr_name ( )	794:6:17845:17864	286577	12	True				
ANR	287747	CallExpression	write_instr_name ( )		286577	0					
ANR	287748	Callee	write_instr_name		286577	0					
ANR	287749	Identifier	write_instr_name		286577	0					
ANR	287750	ArgumentList			286577	1					
ANR	287751	IfStatement	if ( ! ignoreFirstOpd )		286577	13					
ANR	287752	Condition	! ignoreFirstOpd	795:10:17876:17890	286577	0	True				
ANR	287753	UnaryOperationExpression	! ignoreFirstOpd		286577	0					
ANR	287754	UnaryOperator	!		286577	0					
ANR	287755	Identifier	ignoreFirstOpd		286577	1					
ANR	287756	CompoundStatement		302:1:6483:6483	286577	1					
ANR	287757	ExpressionStatement	WRITE_FORMAT_x ( A )	797:3:17899:17917	286577	0	True				
ANR	287758	CallExpression	WRITE_FORMAT_x ( A )		286577	0					
ANR	287759	Callee	WRITE_FORMAT_x		286577	0					
ANR	287760	Identifier	WRITE_FORMAT_x		286577	0					
ANR	287761	ArgumentList	A		286577	1					
ANR	287762	Argument	A		286577	0					
ANR	287763	Identifier	A		286577	0					
ANR	287764	ExpressionStatement	WRITE_FORMAT_COMMA_x ( B )	798:3:17922:17946	286577	1	True				
ANR	287765	CallExpression	WRITE_FORMAT_COMMA_x ( B )		286577	0					
ANR	287766	Callee	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287767	Identifier	WRITE_FORMAT_COMMA_x		286577	0					
ANR	287768	ArgumentList	B		286577	1					
ANR	287769	Argument	B		286577	0					
ANR	287770	Identifier	B		286577	0					
ANR	287771	ExpressionStatement	WRITE_NOP_COMMENT ( )	799:3:17951:17971	286577	2	True				
ANR	287772	CallExpression	WRITE_NOP_COMMENT ( )		286577	0					
ANR	287773	Callee	WRITE_NOP_COMMENT		286577	0					
ANR	287774	Identifier	WRITE_NOP_COMMENT		286577	0					
ANR	287775	ArgumentList			286577	1					
ANR	287776	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB )"	800:3:17976:18055	286577	3	True				
ANR	287777	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB )"		286577	0					
ANR	287778	Callee	arc_sprintf		286577	0					
ANR	287779	Identifier	arc_sprintf		286577	0					
ANR	287780	ArgumentList	state		286577	1					
ANR	287781	Argument	state		286577	0					
ANR	287782	Identifier	state		286577	0					
ANR	287783	Argument	state -> operandBuffer		286577	1					
ANR	287784	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	287785	Identifier	state		286577	0					
ANR	287786	Identifier	operandBuffer		286577	1					
ANR	287787	Argument	formatString		286577	2					
ANR	287788	Identifier	formatString		286577	0					
ANR	287789	Argument	fieldA		286577	3					
ANR	287790	Identifier	fieldA		286577	0					
ANR	287791	Argument	fieldB		286577	4					
ANR	287792	Identifier	fieldB		286577	0					
ANR	287793	ElseStatement	else		286577	0					
ANR	287794	CompoundStatement		310:1:6661:6661	286577	0					
ANR	287795	ExpressionStatement	WRITE_FORMAT_x ( B )	805:3:18077:18095	286577	0	True				
ANR	287796	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	287797	Callee	WRITE_FORMAT_x		286577	0					
ANR	287798	Identifier	WRITE_FORMAT_x		286577	0					
ANR	287799	ArgumentList	B		286577	1					
ANR	287800	Argument	B		286577	0					
ANR	287801	Identifier	B		286577	0					
ANR	287802	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB )"	806:3:18100:18163	286577	1	True				
ANR	287803	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB )"		286577	0					
ANR	287804	Callee	arc_sprintf		286577	0					
ANR	287805	Identifier	arc_sprintf		286577	0					
ANR	287806	ArgumentList	state		286577	1					
ANR	287807	Argument	state		286577	0					
ANR	287808	Identifier	state		286577	0					
ANR	287809	Argument	state -> operandBuffer		286577	1					
ANR	287810	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	287811	Identifier	state		286577	0					
ANR	287812	Identifier	operandBuffer		286577	1					
ANR	287813	Argument	formatString		286577	2					
ANR	287814	Identifier	formatString		286577	0					
ANR	287815	Argument	fieldB		286577	3					
ANR	287816	Identifier	fieldB		286577	0					
ANR	287817	BreakStatement	break ;	808:6:18174:18179	286577	14	True				
ANR	287818	Label	case CLASS_A4_FLAG :	810:4:18186:18204	286577	15	True				
ANR	287819	Identifier	CLASS_A4_FLAG		286577	0					
ANR	287820	ExpressionStatement	CHECK_FIELD_B ( )	811:6:18212:18228	286577	16	True				
ANR	287821	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	287822	Callee	CHECK_FIELD_B		286577	0					
ANR	287823	Identifier	CHECK_FIELD_B		286577	0					
ANR	287824	ArgumentList			286577	1					
ANR	287825	ExpressionStatement	CHECK_FLAG_COND_NULLIFY ( )	812:6:18236:18262	286577	17	True				
ANR	287826	CallExpression	CHECK_FLAG_COND_NULLIFY ( )		286577	0					
ANR	287827	Callee	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287828	Identifier	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287829	ArgumentList			286577	1					
ANR	287830	ExpressionStatement	flag = 0	813:6:18270:18278	286577	18	True				
ANR	287831	AssignmentExpression	flag = 0		286577	0		=			
ANR	287832	Identifier	flag		286577	0					
ANR	287833	PrimaryExpression	0		286577	1					
ANR	287834	ExpressionStatement	write_instr_name ( )	815:6:18342:18361	286577	19	True				
ANR	287835	CallExpression	write_instr_name ( )		286577	0					
ANR	287836	Callee	write_instr_name		286577	0					
ANR	287837	Identifier	write_instr_name		286577	0					
ANR	287838	ArgumentList			286577	1					
ANR	287839	ExpressionStatement	WRITE_FORMAT_x ( B )	816:6:18369:18387	286577	20	True				
ANR	287840	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	287841	Callee	WRITE_FORMAT_x		286577	0					
ANR	287842	Identifier	WRITE_FORMAT_x		286577	0					
ANR	287843	ArgumentList	B		286577	1					
ANR	287844	Argument	B		286577	0					
ANR	287845	Identifier	B		286577	0					
ANR	287846	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB )"	817:6:18395:18458	286577	21	True				
ANR	287847	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB )"		286577	0					
ANR	287848	Callee	arc_sprintf		286577	0					
ANR	287849	Identifier	arc_sprintf		286577	0					
ANR	287850	ArgumentList	state		286577	1					
ANR	287851	Argument	state		286577	0					
ANR	287852	Identifier	state		286577	0					
ANR	287853	Argument	state -> operandBuffer		286577	1					
ANR	287854	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	287855	Identifier	state		286577	0					
ANR	287856	Identifier	operandBuffer		286577	1					
ANR	287857	Argument	formatString		286577	2					
ANR	287858	Identifier	formatString		286577	0					
ANR	287859	Argument	fieldB		286577	3					
ANR	287860	Identifier	fieldB		286577	0					
ANR	287861	BreakStatement	break ;	818:6:18466:18471	286577	22	True				
ANR	287862	Label	case CLASS_A4_BRANCH :	820:4:18478:18498	286577	23	True				
ANR	287863	Identifier	CLASS_A4_BRANCH		286577	0					
ANR	287864	ExpressionStatement	"fieldA = BITS ( state -> words [ 0 ] , 7 , 26 ) << 2"	821:6:18506:18547	286577	24	True				
ANR	287865	AssignmentExpression	"fieldA = BITS ( state -> words [ 0 ] , 7 , 26 ) << 2"		286577	0		=			
ANR	287866	Identifier	fieldA		286577	0					
ANR	287867	ShiftExpression	"BITS ( state -> words [ 0 ] , 7 , 26 ) << 2"		286577	1		<<			
ANR	287868	CallExpression	"BITS ( state -> words [ 0 ] , 7 , 26 )"		286577	0					
ANR	287869	Callee	BITS		286577	0					
ANR	287870	Identifier	BITS		286577	0					
ANR	287871	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	287872	Argument	state -> words [ 0 ]		286577	0					
ANR	287873	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	287874	PtrMemberAccess	state -> words		286577	0					
ANR	287875	Identifier	state		286577	0					
ANR	287876	Identifier	words		286577	1					
ANR	287877	PrimaryExpression	0		286577	1					
ANR	287878	Argument	7		286577	1					
ANR	287879	PrimaryExpression	7		286577	0					
ANR	287880	Argument	26		286577	2					
ANR	287881	PrimaryExpression	26		286577	0					
ANR	287882	PrimaryExpression	2		286577	1					
ANR	287883	ExpressionStatement	fieldA = ( fieldA << 10 ) >> 10	822:6:18555:18584	286577	25	True				
ANR	287884	AssignmentExpression	fieldA = ( fieldA << 10 ) >> 10		286577	0		=			
ANR	287885	Identifier	fieldA		286577	0					
ANR	287886	ShiftExpression	( fieldA << 10 ) >> 10		286577	1		>>			
ANR	287887	ShiftExpression	fieldA << 10		286577	0		<<			
ANR	287888	Identifier	fieldA		286577	0					
ANR	287889	PrimaryExpression	10		286577	1					
ANR	287890	PrimaryExpression	10		286577	1					
ANR	287891	ExpressionStatement	fieldA += addr + 4	823:6:18615:18633	286577	26	True				
ANR	287892	AssignmentExpression	fieldA += addr + 4		286577	0		+=			
ANR	287893	Identifier	fieldA		286577	0					
ANR	287894	AdditiveExpression	addr + 4		286577	1		+			
ANR	287895	Identifier	addr		286577	0					
ANR	287896	PrimaryExpression	4		286577	1					
ANR	287897	ExpressionStatement	CHECK_FLAG_COND_NULLIFY ( )	824:6:18641:18667	286577	27	True				
ANR	287898	CallExpression	CHECK_FLAG_COND_NULLIFY ( )		286577	0					
ANR	287899	Callee	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287900	Identifier	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287901	ArgumentList			286577	1					
ANR	287902	ExpressionStatement	flag = 0	825:6:18675:18683	286577	28	True				
ANR	287903	AssignmentExpression	flag = 0		286577	0		=			
ANR	287904	Identifier	flag		286577	0					
ANR	287905	PrimaryExpression	0		286577	1					
ANR	287906	ExpressionStatement	write_instr_name ( )	827:6:18692:18711	286577	29	True				
ANR	287907	CallExpression	write_instr_name ( )		286577	0					
ANR	287908	Callee	write_instr_name		286577	0					
ANR	287909	Identifier	write_instr_name		286577	0					
ANR	287910	ArgumentList			286577	1					
ANR	287911	IfStatement	if ( state -> _opcode != op_LPC )		286577	30					
ANR	287912	Condition	state -> _opcode != op_LPC	829:10:18788:18811	286577	0	True				
ANR	287913	EqualityExpression	state -> _opcode != op_LPC		286577	0		!=			
ANR	287914	PtrMemberAccess	state -> _opcode		286577	0					
ANR	287915	Identifier	state		286577	0					
ANR	287916	Identifier	_opcode		286577	1					
ANR	287917	Identifier	op_LPC		286577	1					
ANR	287918	CompoundStatement		336:1:7413:7413	286577	1					
ANR	287919	ExpressionStatement	add_target ( fieldA )	831:3:18829:18848	286577	0	True				
ANR	287920	CallExpression	add_target ( fieldA )		286577	0					
ANR	287921	Callee	add_target		286577	0					
ANR	287922	Identifier	add_target		286577	0					
ANR	287923	ArgumentList	fieldA		286577	1					
ANR	287924	Argument	fieldA		286577	0					
ANR	287925	Identifier	fieldA		286577	0					
ANR	287926	ExpressionStatement	state -> flow = state -> _opcode == op_BLC ? direct_call : direct_jump	832:3:18874:18954	286577	1	True				
ANR	287927	AssignmentExpression	state -> flow = state -> _opcode == op_BLC ? direct_call : direct_jump		286577	0		=			
ANR	287928	PtrMemberAccess	state -> flow		286577	0					
ANR	287929	Identifier	state		286577	0					
ANR	287930	Identifier	flow		286577	1					
ANR	287931	ConditionalExpression	state -> _opcode == op_BLC ? direct_call : direct_jump		286577	1					
ANR	287932	Condition	state -> _opcode == op_BLC		286577	0					
ANR	287933	EqualityExpression	state -> _opcode == op_BLC		286577	0		==			
ANR	287934	PtrMemberAccess	state -> _opcode		286577	0					
ANR	287935	Identifier	state		286577	0					
ANR	287936	Identifier	_opcode		286577	1					
ANR	287937	Identifier	op_BLC		286577	1					
ANR	287938	Identifier	direct_call		286577	1					
ANR	287939	Identifier	direct_jump		286577	2					
ANR	287940	ExpressionStatement	"strcat ( formatString , ""%s"" )"	838:6:19064:19091	286577	31	True				
ANR	287941	CallExpression	"strcat ( formatString , ""%s"" )"		286577	0					
ANR	287942	Callee	strcat		286577	0					
ANR	287943	Identifier	strcat		286577	0					
ANR	287944	ArgumentList	formatString		286577	1					
ANR	287945	Argument	formatString		286577	0					
ANR	287946	Identifier	formatString		286577	0					
ANR	287947	Argument	"""%s"""		286577	1					
ANR	287948	PrimaryExpression	"""%s"""		286577	0					
ANR	287949	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , post_address ( state , fieldA ) )"	839:6:19126:19215	286577	32	True				
ANR	287950	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , post_address ( state , fieldA ) )"		286577	0					
ANR	287951	Callee	arc_sprintf		286577	0					
ANR	287952	Identifier	arc_sprintf		286577	0					
ANR	287953	ArgumentList	state		286577	1					
ANR	287954	Argument	state		286577	0					
ANR	287955	Identifier	state		286577	0					
ANR	287956	Argument	state -> operandBuffer		286577	1					
ANR	287957	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	287958	Identifier	state		286577	0					
ANR	287959	Identifier	operandBuffer		286577	1					
ANR	287960	Argument	formatString		286577	2					
ANR	287961	Identifier	formatString		286577	0					
ANR	287962	Argument	"post_address ( state , fieldA )"		286577	3					
ANR	287963	CallExpression	"post_address ( state , fieldA )"		286577	0					
ANR	287964	Callee	post_address		286577	0					
ANR	287965	Identifier	post_address		286577	0					
ANR	287966	ArgumentList	state		286577	1					
ANR	287967	Argument	state		286577	0					
ANR	287968	Identifier	state		286577	0					
ANR	287969	Argument	fieldA		286577	1					
ANR	287970	Identifier	fieldA		286577	0					
ANR	287971	BreakStatement	break ;	841:6:19223:19228	286577	33	True				
ANR	287972	Label	case CLASS_A4_JC :	843:4:19235:19251	286577	34	True				
ANR	287973	Identifier	CLASS_A4_JC		286577	0					
ANR	287974	ExpressionStatement	fieldA = 0	847:6:19423:19433	286577	35	True				
ANR	287975	AssignmentExpression	fieldA = 0		286577	0		=			
ANR	287976	Identifier	fieldA		286577	0					
ANR	287977	PrimaryExpression	0		286577	1					
ANR	287978	ExpressionStatement	CHECK_FIELD_B ( )	848:6:19441:19457	286577	36	True				
ANR	287979	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	287980	Callee	CHECK_FIELD_B		286577	0					
ANR	287981	Identifier	CHECK_FIELD_B		286577	0					
ANR	287982	ArgumentList			286577	1					
ANR	287983	ExpressionStatement	CHECK_FLAG_COND_NULLIFY ( )	849:6:19465:19491	286577	37	True				
ANR	287984	CallExpression	CHECK_FLAG_COND_NULLIFY ( )		286577	0					
ANR	287985	Callee	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287986	Identifier	CHECK_FLAG_COND_NULLIFY		286577	0					
ANR	287987	ArgumentList			286577	1					
ANR	287988	IfStatement	if ( ! fieldBisReg )		286577	38					
ANR	287989	Condition	! fieldBisReg	851:10:19504:19515	286577	0	True				
ANR	287990	UnaryOperationExpression	! fieldBisReg		286577	0					
ANR	287991	UnaryOperator	!		286577	0					
ANR	287992	Identifier	fieldBisReg		286577	1					
ANR	287993	CompoundStatement		358:1:8108:8108	286577	1					
ANR	287994	ExpressionStatement	fieldAisReg = 0	853:3:19524:19539	286577	0	True				
ANR	287995	AssignmentExpression	fieldAisReg = 0		286577	0		=			
ANR	287996	Identifier	fieldAisReg		286577	0					
ANR	287997	PrimaryExpression	0		286577	1					
ANR	287998	ExpressionStatement	fieldA = ( fieldB >> 25 ) & 0x7F	854:3:19544:19574	286577	1	True				
ANR	287999	AssignmentExpression	fieldA = ( fieldB >> 25 ) & 0x7F		286577	0		=			
ANR	288000	Identifier	fieldA		286577	0					
ANR	288001	BitAndExpression	( fieldB >> 25 ) & 0x7F		286577	1		&			
ANR	288002	ShiftExpression	fieldB >> 25		286577	0		>>			
ANR	288003	Identifier	fieldB		286577	0					
ANR	288004	PrimaryExpression	25		286577	1					
ANR	288005	PrimaryExpression	0x7F		286577	1					
ANR	288006	ExpressionStatement	fieldB = ( fieldB & 0xFFFFFF ) << 2	855:3:19593:19626	286577	2	True				
ANR	288007	AssignmentExpression	fieldB = ( fieldB & 0xFFFFFF ) << 2		286577	0		=			
ANR	288008	Identifier	fieldB		286577	0					
ANR	288009	ShiftExpression	( fieldB & 0xFFFFFF ) << 2		286577	1		<<			
ANR	288010	BitAndExpression	fieldB & 0xFFFFFF		286577	0		&			
ANR	288011	Identifier	fieldB		286577	0					
ANR	288012	PrimaryExpression	0xFFFFFF		286577	1					
ANR	288013	PrimaryExpression	2		286577	1					
ANR	288014	ExpressionStatement	state -> flow = is_linked ? direct_call : direct_jump	856:3:19631:19682	286577	3	True				
ANR	288015	AssignmentExpression	state -> flow = is_linked ? direct_call : direct_jump		286577	0		=			
ANR	288016	PtrMemberAccess	state -> flow		286577	0					
ANR	288017	Identifier	state		286577	0					
ANR	288018	Identifier	flow		286577	1					
ANR	288019	ConditionalExpression	is_linked ? direct_call : direct_jump		286577	1					
ANR	288020	Condition	is_linked		286577	0					
ANR	288021	Identifier	is_linked		286577	0					
ANR	288022	Identifier	direct_call		286577	1					
ANR	288023	Identifier	direct_jump		286577	2					
ANR	288024	ExpressionStatement	add_target ( fieldB )	857:3:19687:19706	286577	4	True				
ANR	288025	CallExpression	add_target ( fieldB )		286577	0					
ANR	288026	Callee	add_target		286577	0					
ANR	288027	Identifier	add_target		286577	0					
ANR	288028	ArgumentList	fieldB		286577	1					
ANR	288029	Argument	fieldB		286577	0					
ANR	288030	Identifier	fieldB		286577	0					
ANR	288031	IfStatement	if ( is_linked && state -> nullifyMode == BR_exec_when_jump )		286577	5					
ANR	288032	Condition	is_linked && state -> nullifyMode == BR_exec_when_jump	860:7:19824:19875	286577	0	True				
ANR	288033	AndExpression	is_linked && state -> nullifyMode == BR_exec_when_jump		286577	0		&&			
ANR	288034	Identifier	is_linked		286577	0					
ANR	288035	EqualityExpression	state -> nullifyMode == BR_exec_when_jump		286577	1		==			
ANR	288036	PtrMemberAccess	state -> nullifyMode		286577	0					
ANR	288037	Identifier	state		286577	0					
ANR	288038	Identifier	nullifyMode		286577	1					
ANR	288039	Identifier	BR_exec_when_jump		286577	1					
ANR	288040	CompoundStatement		366:61:8467:8467	286577	1					
ANR	288041	ExpressionStatement	state -> nullifyMode = BR_exec_when_no_jump	861:4:19884:19925	286577	0	True				
ANR	288042	AssignmentExpression	state -> nullifyMode = BR_exec_when_no_jump		286577	0		=			
ANR	288043	PtrMemberAccess	state -> nullifyMode		286577	0					
ANR	288044	Identifier	state		286577	0					
ANR	288045	Identifier	nullifyMode		286577	1					
ANR	288046	Identifier	BR_exec_when_no_jump		286577	1					
ANR	288047	ElseStatement	else		286577	0					
ANR	288048	CompoundStatement		371:1:8536:8536	286577	0					
ANR	288049	ExpressionStatement	state -> flow = is_linked ? indirect_call : indirect_jump	866:3:19952:20007	286577	0	True				
ANR	288050	AssignmentExpression	state -> flow = is_linked ? indirect_call : indirect_jump		286577	0		=			
ANR	288051	PtrMemberAccess	state -> flow		286577	0					
ANR	288052	Identifier	state		286577	0					
ANR	288053	Identifier	flow		286577	1					
ANR	288054	ConditionalExpression	is_linked ? indirect_call : indirect_jump		286577	1					
ANR	288055	Condition	is_linked		286577	0					
ANR	288056	Identifier	is_linked		286577	0					
ANR	288057	Identifier	indirect_call		286577	1					
ANR	288058	Identifier	indirect_jump		286577	2					
ANR	288059	ExpressionStatement	state -> register_for_indirect_jump = fieldB	871:3:20234:20276	286577	1	True				
ANR	288060	AssignmentExpression	state -> register_for_indirect_jump = fieldB		286577	0		=			
ANR	288061	PtrMemberAccess	state -> register_for_indirect_jump		286577	0					
ANR	288062	Identifier	state		286577	0					
ANR	288063	Identifier	register_for_indirect_jump		286577	1					
ANR	288064	Identifier	fieldB		286577	1					
ANR	288065	ExpressionStatement	write_instr_name ( )	874:6:20288:20307	286577	39	True				
ANR	288066	CallExpression	write_instr_name ( )		286577	0					
ANR	288067	Callee	write_instr_name		286577	0					
ANR	288068	Identifier	write_instr_name		286577	0					
ANR	288069	ArgumentList			286577	1					
ANR	288070	ExpressionStatement	"strcat ( formatString , IS_REG ( B ) ? ""[%r]"" : ""%s"" )"	875:6:20315:20371	286577	40	True				
ANR	288071	CallExpression	"strcat ( formatString , IS_REG ( B ) ? ""[%r]"" : ""%s"" )"		286577	0					
ANR	288072	Callee	strcat		286577	0					
ANR	288073	Identifier	strcat		286577	0					
ANR	288074	ArgumentList	formatString		286577	1					
ANR	288075	Argument	formatString		286577	0					
ANR	288076	Identifier	formatString		286577	0					
ANR	288077	Argument	"IS_REG ( B ) ? ""[%r]"" : ""%s"""		286577	1					
ANR	288078	ConditionalExpression	"IS_REG ( B ) ? ""[%r]"" : ""%s"""		286577	0					
ANR	288079	Condition	IS_REG ( B )		286577	0					
ANR	288080	CallExpression	IS_REG ( B )		286577	0					
ANR	288081	Callee	IS_REG		286577	0					
ANR	288082	Identifier	IS_REG		286577	0					
ANR	288083	ArgumentList	B		286577	1					
ANR	288084	Argument	B		286577	0					
ANR	288085	Identifier	B		286577	0					
ANR	288086	PrimaryExpression	"""[%r]"""		286577	1					
ANR	288087	PrimaryExpression	"""%s"""		286577	2					
ANR	288088	IfStatement	if ( fieldA != 0 )		286577	41					
ANR	288089	Condition	fieldA != 0	877:10:20410:20420	286577	0	True				
ANR	288090	EqualityExpression	fieldA != 0		286577	0		!=			
ANR	288091	Identifier	fieldA		286577	0					
ANR	288092	PrimaryExpression	0		286577	1					
ANR	288093	CompoundStatement		384:1:9013:9013	286577	1					
ANR	288094	ExpressionStatement	fieldAisReg = 0	879:3:20429:20444	286577	0	True				
ANR	288095	AssignmentExpression	fieldAisReg = 0		286577	0		=			
ANR	288096	Identifier	fieldAisReg		286577	0					
ANR	288097	PrimaryExpression	0		286577	1					
ANR	288098	ExpressionStatement	WRITE_FORMAT_COMMA_x ( A )	880:3:20449:20473	286577	1	True				
ANR	288099	CallExpression	WRITE_FORMAT_COMMA_x ( A )		286577	0					
ANR	288100	Callee	WRITE_FORMAT_COMMA_x		286577	0					
ANR	288101	Identifier	WRITE_FORMAT_COMMA_x		286577	0					
ANR	288102	ArgumentList	A		286577	1					
ANR	288103	Argument	A		286577	0					
ANR	288104	Identifier	A		286577	0					
ANR	288105	IfStatement	if ( IS_REG ( B ) )		286577	42					
ANR	288106	Condition	IS_REG ( B )	882:5:20483:20492	286577	0	True				
ANR	288107	CallExpression	IS_REG ( B )		286577	0					
ANR	288108	Callee	IS_REG		286577	0					
ANR	288109	Identifier	IS_REG		286577	0					
ANR	288110	ArgumentList	B		286577	1					
ANR	288111	Argument	B		286577	0					
ANR	288112	Identifier	B		286577	0					
ANR	288113	CompoundStatement		388:17:9084:9084	286577	1					
ANR	288114	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB , fieldA )"	883:2:20499:20570	286577	0	True				
ANR	288115	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldB , fieldA )"		286577	0					
ANR	288116	Callee	arc_sprintf		286577	0					
ANR	288117	Identifier	arc_sprintf		286577	0					
ANR	288118	ArgumentList	state		286577	1					
ANR	288119	Argument	state		286577	0					
ANR	288120	Identifier	state		286577	0					
ANR	288121	Argument	state -> operandBuffer		286577	1					
ANR	288122	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288123	Identifier	state		286577	0					
ANR	288124	Identifier	operandBuffer		286577	1					
ANR	288125	Argument	formatString		286577	2					
ANR	288126	Identifier	formatString		286577	0					
ANR	288127	Argument	fieldB		286577	3					
ANR	288128	Identifier	fieldB		286577	0					
ANR	288129	Argument	fieldA		286577	4					
ANR	288130	Identifier	fieldA		286577	0					
ANR	288131	ElseStatement	else		286577	0					
ANR	288132	CompoundStatement		390:8:9169:9169	286577	0					
ANR	288133	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , post_address ( state , fieldB ) , fieldA )"	885:2:20584:20680	286577	0	True				
ANR	288134	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , post_address ( state , fieldB ) , fieldA )"		286577	0					
ANR	288135	Callee	arc_sprintf		286577	0					
ANR	288136	Identifier	arc_sprintf		286577	0					
ANR	288137	ArgumentList	state		286577	1					
ANR	288138	Argument	state		286577	0					
ANR	288139	Identifier	state		286577	0					
ANR	288140	Argument	state -> operandBuffer		286577	1					
ANR	288141	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288142	Identifier	state		286577	0					
ANR	288143	Identifier	operandBuffer		286577	1					
ANR	288144	Argument	formatString		286577	2					
ANR	288145	Identifier	formatString		286577	0					
ANR	288146	Argument	"post_address ( state , fieldB )"		286577	3					
ANR	288147	CallExpression	"post_address ( state , fieldB )"		286577	0					
ANR	288148	Callee	post_address		286577	0					
ANR	288149	Identifier	post_address		286577	0					
ANR	288150	ArgumentList	state		286577	1					
ANR	288151	Argument	state		286577	0					
ANR	288152	Identifier	state		286577	0					
ANR	288153	Argument	fieldB		286577	1					
ANR	288154	Identifier	fieldB		286577	0					
ANR	288155	Argument	fieldA		286577	4					
ANR	288156	Identifier	fieldA		286577	0					
ANR	288157	BreakStatement	break ;	888:1:20686:20691	286577	43	True				
ANR	288158	Label	case CLASS_A4_LD0 :	890:4:20698:20715	286577	44	True				
ANR	288159	Identifier	CLASS_A4_LD0		286577	0					
ANR	288160	ExpressionStatement	CHECK_FIELD_A ( )	892:6:20802:20818	286577	45	True				
ANR	288161	CallExpression	CHECK_FIELD_A ( )		286577	0					
ANR	288162	Callee	CHECK_FIELD_A		286577	0					
ANR	288163	Identifier	CHECK_FIELD_A		286577	0					
ANR	288164	ArgumentList			286577	1					
ANR	288165	ExpressionStatement	CHECK_FIELD_B ( )	893:6:20826:20842	286577	46	True				
ANR	288166	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	288167	Callee	CHECK_FIELD_B		286577	0					
ANR	288168	Identifier	CHECK_FIELD_B		286577	0					
ANR	288169	ArgumentList			286577	1					
ANR	288170	ExpressionStatement	CHECK_FIELD_C ( )	894:6:20850:20866	286577	47	True				
ANR	288171	CallExpression	CHECK_FIELD_C ( )		286577	0					
ANR	288172	Callee	CHECK_FIELD_C		286577	0					
ANR	288173	Identifier	CHECK_FIELD_C		286577	0					
ANR	288174	ArgumentList			286577	1					
ANR	288175	IfStatement	if ( dbg )		286577	48					
ANR	288176	Condition	dbg	895:10:20878:20880	286577	0	True				
ANR	288177	Identifier	dbg		286577	0					
ANR	288178	CompoundStatement		401:15:9472:9472	286577	1					
ANR	288179	ExpressionStatement	"printf ( ""5:b reg %d %d c reg %d %d  \\n"" , fieldBisReg , fieldB , fieldCisReg , fieldC )"	896:7:20892:20982	286577	0	True				
ANR	288180	CallExpression	"printf ( ""5:b reg %d %d c reg %d %d  \\n"" , fieldBisReg , fieldB , fieldCisReg , fieldC )"		286577	0					
ANR	288181	Callee	printf		286577	0					
ANR	288182	Identifier	printf		286577	0					
ANR	288183	ArgumentList	"""5:b reg %d %d c reg %d %d  \\n"""		286577	1					
ANR	288184	Argument	"""5:b reg %d %d c reg %d %d  \\n"""		286577	0					
ANR	288185	PrimaryExpression	"""5:b reg %d %d c reg %d %d  \\n"""		286577	0					
ANR	288186	Argument	fieldBisReg		286577	1					
ANR	288187	Identifier	fieldBisReg		286577	0					
ANR	288188	Argument	fieldB		286577	2					
ANR	288189	Identifier	fieldB		286577	0					
ANR	288190	Argument	fieldCisReg		286577	3					
ANR	288191	Identifier	fieldCisReg		286577	0					
ANR	288192	Argument	fieldC		286577	4					
ANR	288193	Identifier	fieldC		286577	0					
ANR	288194	ExpressionStatement	state -> _offset = 0	899:6:20998:21016	286577	49	True				
ANR	288195	AssignmentExpression	state -> _offset = 0		286577	0		=			
ANR	288196	PtrMemberAccess	state -> _offset		286577	0					
ANR	288197	Identifier	state		286577	0					
ANR	288198	Identifier	_offset		286577	1					
ANR	288199	PrimaryExpression	0		286577	1					
ANR	288200	ExpressionStatement	state -> _ea_present = 1	900:6:21024:21046	286577	50	True				
ANR	288201	AssignmentExpression	state -> _ea_present = 1		286577	0		=			
ANR	288202	PtrMemberAccess	state -> _ea_present		286577	0					
ANR	288203	Identifier	state		286577	0					
ANR	288204	Identifier	_ea_present		286577	1					
ANR	288205	PrimaryExpression	1		286577	1					
ANR	288206	IfStatement	if ( fieldBisReg )		286577	51					
ANR	288207	Condition	fieldBisReg	901:10:21058:21068	286577	0	True				
ANR	288208	Identifier	fieldBisReg		286577	0					
ANR	288209	CompoundStatement		407:23:9660:9660	286577	1					
ANR	288210	ExpressionStatement	state -> ea_reg1 = fieldB	902:7:21080:21103	286577	0	True				
ANR	288211	AssignmentExpression	state -> ea_reg1 = fieldB		286577	0		=			
ANR	288212	PtrMemberAccess	state -> ea_reg1		286577	0					
ANR	288213	Identifier	state		286577	0					
ANR	288214	Identifier	ea_reg1		286577	1					
ANR	288215	Identifier	fieldB		286577	1					
ANR	288216	ElseStatement	else		286577	0					
ANR	288217	CompoundStatement		409:13:9707:9707	286577	0					
ANR	288218	ExpressionStatement	state -> _offset += fieldB	904:7:21127:21151	286577	0	True				
ANR	288219	AssignmentExpression	state -> _offset += fieldB		286577	0		+=			
ANR	288220	PtrMemberAccess	state -> _offset		286577	0					
ANR	288221	Identifier	state		286577	0					
ANR	288222	Identifier	_offset		286577	1					
ANR	288223	Identifier	fieldB		286577	1					
ANR	288224	IfStatement	if ( fieldCisReg )		286577	52					
ANR	288225	Condition	fieldCisReg	906:10:21171:21181	286577	0	True				
ANR	288226	Identifier	fieldCisReg		286577	0					
ANR	288227	CompoundStatement		412:23:9773:9773	286577	1					
ANR	288228	ExpressionStatement	state -> ea_reg2 = fieldC	907:7:21193:21216	286577	0	True				
ANR	288229	AssignmentExpression	state -> ea_reg2 = fieldC		286577	0		=			
ANR	288230	PtrMemberAccess	state -> ea_reg2		286577	0					
ANR	288231	Identifier	state		286577	0					
ANR	288232	Identifier	ea_reg2		286577	1					
ANR	288233	Identifier	fieldC		286577	1					
ANR	288234	ElseStatement	else		286577	0					
ANR	288235	CompoundStatement		414:13:9820:9820	286577	0					
ANR	288236	ExpressionStatement	state -> _offset += fieldC	909:7:21240:21264	286577	0	True				
ANR	288237	AssignmentExpression	state -> _offset += fieldC		286577	0		+=			
ANR	288238	PtrMemberAccess	state -> _offset		286577	0					
ANR	288239	Identifier	state		286577	0					
ANR	288240	Identifier	_offset		286577	1					
ANR	288241	Identifier	fieldC		286577	1					
ANR	288242	ExpressionStatement	state -> _mem_load = 1	911:6:21280:21300	286577	53	True				
ANR	288243	AssignmentExpression	state -> _mem_load = 1		286577	0		=			
ANR	288244	PtrMemberAccess	state -> _mem_load		286577	0					
ANR	288245	Identifier	state		286577	0					
ANR	288246	Identifier	_mem_load		286577	1					
ANR	288247	PrimaryExpression	1		286577	1					
ANR	288248	ExpressionStatement	"directMem = BIT ( state -> words [ 0 ] , 5 )"	913:6:21309:21349	286577	54	True				
ANR	288249	AssignmentExpression	"directMem = BIT ( state -> words [ 0 ] , 5 )"		286577	0		=			
ANR	288250	Identifier	directMem		286577	0					
ANR	288251	CallExpression	"BIT ( state -> words [ 0 ] , 5 )"		286577	1					
ANR	288252	Callee	BIT		286577	0					
ANR	288253	Identifier	BIT		286577	0					
ANR	288254	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288255	Argument	state -> words [ 0 ]		286577	0					
ANR	288256	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288257	PtrMemberAccess	state -> words		286577	0					
ANR	288258	Identifier	state		286577	0					
ANR	288259	Identifier	words		286577	1					
ANR	288260	PrimaryExpression	0		286577	1					
ANR	288261	Argument	5		286577	1					
ANR	288262	PrimaryExpression	5		286577	0					
ANR	288263	ExpressionStatement	"addrWriteBack = BIT ( state -> words [ 0 ] , 3 )"	914:6:21357:21397	286577	55	True				
ANR	288264	AssignmentExpression	"addrWriteBack = BIT ( state -> words [ 0 ] , 3 )"		286577	0		=			
ANR	288265	Identifier	addrWriteBack		286577	0					
ANR	288266	CallExpression	"BIT ( state -> words [ 0 ] , 3 )"		286577	1					
ANR	288267	Callee	BIT		286577	0					
ANR	288268	Identifier	BIT		286577	0					
ANR	288269	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288270	Argument	state -> words [ 0 ]		286577	0					
ANR	288271	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288272	PtrMemberAccess	state -> words		286577	0					
ANR	288273	Identifier	state		286577	0					
ANR	288274	Identifier	words		286577	1					
ANR	288275	PrimaryExpression	0		286577	1					
ANR	288276	Argument	3		286577	1					
ANR	288277	PrimaryExpression	3		286577	0					
ANR	288278	ExpressionStatement	"signExtend = BIT ( state -> words [ 0 ] , 0 )"	915:6:21405:21445	286577	56	True				
ANR	288279	AssignmentExpression	"signExtend = BIT ( state -> words [ 0 ] , 0 )"		286577	0		=			
ANR	288280	Identifier	signExtend		286577	0					
ANR	288281	CallExpression	"BIT ( state -> words [ 0 ] , 0 )"		286577	1					
ANR	288282	Callee	BIT		286577	0					
ANR	288283	Identifier	BIT		286577	0					
ANR	288284	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288285	Argument	state -> words [ 0 ]		286577	0					
ANR	288286	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288287	PtrMemberAccess	state -> words		286577	0					
ANR	288288	Identifier	state		286577	0					
ANR	288289	Identifier	words		286577	1					
ANR	288290	PrimaryExpression	0		286577	1					
ANR	288291	Argument	0		286577	1					
ANR	288292	PrimaryExpression	0		286577	0					
ANR	288293	ExpressionStatement	write_instr_name ( )	917:6:21454:21473	286577	57	True				
ANR	288294	CallExpression	write_instr_name ( )		286577	0					
ANR	288295	Callee	write_instr_name		286577	0					
ANR	288296	Identifier	write_instr_name		286577	0					
ANR	288297	ArgumentList			286577	1					
ANR	288298	ExpressionStatement	WRITE_FORMAT_x_COMMA_LB ( A )	918:6:21481:21507	286577	58	True				
ANR	288299	CallExpression	WRITE_FORMAT_x_COMMA_LB ( A )		286577	0					
ANR	288300	Callee	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288301	Identifier	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288302	ArgumentList	A		286577	1					
ANR	288303	Argument	A		286577	0					
ANR	288304	Identifier	A		286577	0					
ANR	288305	IfStatement	if ( fieldBisReg || fieldB != 0 )		286577	59					
ANR	288306	Condition	fieldBisReg || fieldB != 0	919:10:21519:21544	286577	0	True				
ANR	288307	OrExpression	fieldBisReg || fieldB != 0		286577	0		||			
ANR	288308	Identifier	fieldBisReg		286577	0					
ANR	288309	EqualityExpression	fieldB != 0		286577	1		!=			
ANR	288310	Identifier	fieldB		286577	0					
ANR	288311	PrimaryExpression	0		286577	1					
ANR	288312	CompoundStatement		425:38:10136:10136	286577	1					
ANR	288313	ExpressionStatement	WRITE_FORMAT_x_COMMA ( B )	920:7:21556:21580	286577	0	True				
ANR	288314	CallExpression	WRITE_FORMAT_x_COMMA ( B )		286577	0					
ANR	288315	Callee	WRITE_FORMAT_x_COMMA		286577	0					
ANR	288316	Identifier	WRITE_FORMAT_x_COMMA		286577	0					
ANR	288317	ArgumentList	B		286577	1					
ANR	288318	Argument	B		286577	0					
ANR	288319	Identifier	B		286577	0					
ANR	288320	ElseStatement	else		286577	0					
ANR	288321	CompoundStatement		427:13:10184:10184	286577	0					
ANR	288322	ExpressionStatement	fieldB = fieldC	922:7:21604:21619	286577	0	True				
ANR	288323	AssignmentExpression	fieldB = fieldC		286577	0		=			
ANR	288324	Identifier	fieldB		286577	0					
ANR	288325	Identifier	fieldC		286577	1					
ANR	288326	ExpressionStatement	WRITE_FORMAT_x_RB ( C )	925:6:21636:21657	286577	60	True				
ANR	288327	CallExpression	WRITE_FORMAT_x_RB ( C )		286577	0					
ANR	288328	Callee	WRITE_FORMAT_x_RB		286577	0					
ANR	288329	Identifier	WRITE_FORMAT_x_RB		286577	0					
ANR	288330	ArgumentList	C		286577	1					
ANR	288331	Argument	C		286577	0					
ANR	288332	Identifier	C		286577	0					
ANR	288333	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB , fieldC )"	926:6:21665:21748	286577	61	True				
ANR	288334	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB , fieldC )"		286577	0					
ANR	288335	Callee	arc_sprintf		286577	0					
ANR	288336	Identifier	arc_sprintf		286577	0					
ANR	288337	ArgumentList	state		286577	1					
ANR	288338	Argument	state		286577	0					
ANR	288339	Identifier	state		286577	0					
ANR	288340	Argument	state -> operandBuffer		286577	1					
ANR	288341	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288342	Identifier	state		286577	0					
ANR	288343	Identifier	operandBuffer		286577	1					
ANR	288344	Argument	formatString		286577	2					
ANR	288345	Identifier	formatString		286577	0					
ANR	288346	Argument	fieldA		286577	3					
ANR	288347	Identifier	fieldA		286577	0					
ANR	288348	Argument	fieldB		286577	4					
ANR	288349	Identifier	fieldB		286577	0					
ANR	288350	Argument	fieldC		286577	5					
ANR	288351	Identifier	fieldC		286577	0					
ANR	288352	BreakStatement	break ;	928:6:21756:21761	286577	62	True				
ANR	288353	Label	case CLASS_A4_LD1 :	930:4:21768:21785	286577	63	True				
ANR	288354	Identifier	CLASS_A4_LD1		286577	0					
ANR	288355	ExpressionStatement	CHECK_FIELD_B ( )	932:6:21822:21838	286577	64	True				
ANR	288356	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	288357	Callee	CHECK_FIELD_B		286577	0					
ANR	288358	Identifier	CHECK_FIELD_B		286577	0					
ANR	288359	ArgumentList			286577	1					
ANR	288360	ExpressionStatement	CHECK_FIELD_A ( )	933:6:21846:21862	286577	65	True				
ANR	288361	CallExpression	CHECK_FIELD_A ( )		286577	0					
ANR	288362	Callee	CHECK_FIELD_A		286577	0					
ANR	288363	Identifier	CHECK_FIELD_A		286577	0					
ANR	288364	ArgumentList			286577	1					
ANR	288365	ExpressionStatement	fieldC = FIELDD ( state -> words [ 0 ] )	934:6:21870:21903	286577	66	True				
ANR	288366	AssignmentExpression	fieldC = FIELDD ( state -> words [ 0 ] )		286577	0		=			
ANR	288367	Identifier	fieldC		286577	0					
ANR	288368	CallExpression	FIELDD ( state -> words [ 0 ] )		286577	1					
ANR	288369	Callee	FIELDD		286577	0					
ANR	288370	Identifier	FIELDD		286577	0					
ANR	288371	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288372	Argument	state -> words [ 0 ]		286577	0					
ANR	288373	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288374	PtrMemberAccess	state -> words		286577	0					
ANR	288375	Identifier	state		286577	0					
ANR	288376	Identifier	words		286577	1					
ANR	288377	PrimaryExpression	0		286577	1					
ANR	288378	IfStatement	if ( dbg )		286577	67					
ANR	288379	Condition	dbg	936:10:21916:21918	286577	0	True				
ANR	288380	Identifier	dbg		286577	0					
ANR	288381	CompoundStatement		442:15:10510:10510	286577	1					
ANR	288382	ExpressionStatement	"eprintf ( ""6:b reg %d %d c 0x%x  \\n"" , fieldBisReg , fieldB , fieldC )"	937:7:21930:22003	286577	0	True				
ANR	288383	CallExpression	"eprintf ( ""6:b reg %d %d c 0x%x  \\n"" , fieldBisReg , fieldB , fieldC )"		286577	0					
ANR	288384	Callee	eprintf		286577	0					
ANR	288385	Identifier	eprintf		286577	0					
ANR	288386	ArgumentList	"""6:b reg %d %d c 0x%x  \\n"""		286577	1					
ANR	288387	Argument	"""6:b reg %d %d c 0x%x  \\n"""		286577	0					
ANR	288388	PrimaryExpression	"""6:b reg %d %d c 0x%x  \\n"""		286577	0					
ANR	288389	Argument	fieldBisReg		286577	1					
ANR	288390	Identifier	fieldBisReg		286577	0					
ANR	288391	Argument	fieldB		286577	2					
ANR	288392	Identifier	fieldB		286577	0					
ANR	288393	Argument	fieldC		286577	3					
ANR	288394	Identifier	fieldC		286577	0					
ANR	288395	ExpressionStatement	state -> _ea_present = 1	940:6:22019:22041	286577	68	True				
ANR	288396	AssignmentExpression	state -> _ea_present = 1		286577	0		=			
ANR	288397	PtrMemberAccess	state -> _ea_present		286577	0					
ANR	288398	Identifier	state		286577	0					
ANR	288399	Identifier	_ea_present		286577	1					
ANR	288400	PrimaryExpression	1		286577	1					
ANR	288401	ExpressionStatement	state -> _offset = fieldC	941:6:22049:22072	286577	69	True				
ANR	288402	AssignmentExpression	state -> _offset = fieldC		286577	0		=			
ANR	288403	PtrMemberAccess	state -> _offset		286577	0					
ANR	288404	Identifier	state		286577	0					
ANR	288405	Identifier	_offset		286577	1					
ANR	288406	Identifier	fieldC		286577	1					
ANR	288407	ExpressionStatement	state -> _mem_load = 1	942:6:22080:22100	286577	70	True				
ANR	288408	AssignmentExpression	state -> _mem_load = 1		286577	0		=			
ANR	288409	PtrMemberAccess	state -> _mem_load		286577	0					
ANR	288410	Identifier	state		286577	0					
ANR	288411	Identifier	_mem_load		286577	1					
ANR	288412	PrimaryExpression	1		286577	1					
ANR	288413	IfStatement	if ( fieldBisReg )		286577	71					
ANR	288414	Condition	fieldBisReg	943:10:22112:22122	286577	0	True				
ANR	288415	Identifier	fieldBisReg		286577	0					
ANR	288416	CompoundStatement		449:23:10714:10714	286577	1					
ANR	288417	ExpressionStatement	state -> ea_reg1 = fieldB	944:7:22134:22157	286577	0	True				
ANR	288418	AssignmentExpression	state -> ea_reg1 = fieldB		286577	0		=			
ANR	288419	PtrMemberAccess	state -> ea_reg1		286577	0					
ANR	288420	Identifier	state		286577	0					
ANR	288421	Identifier	ea_reg1		286577	1					
ANR	288422	Identifier	fieldB		286577	1					
ANR	288423	ElseStatement	else		286577	0					
ANR	288424	CompoundStatement		453:13:10907:10907	286577	0					
ANR	288425	ExpressionStatement	"state -> _offset += fieldB , state -> _ea_present = 0"	948:7:22327:22375	286577	0	True				
ANR	288426	Expression	"state -> _offset += fieldB , state -> _ea_present = 0"		286577	0					
ANR	288427	AssignmentExpression	state -> _offset += fieldB		286577	0		+=			
ANR	288428	PtrMemberAccess	state -> _offset		286577	0					
ANR	288429	Identifier	state		286577	0					
ANR	288430	Identifier	_offset		286577	1					
ANR	288431	Identifier	fieldB		286577	1					
ANR	288432	AssignmentExpression	state -> _ea_present = 0		286577	1		=			
ANR	288433	PtrMemberAccess	state -> _ea_present		286577	0					
ANR	288434	Identifier	state		286577	0					
ANR	288435	Identifier	_ea_present		286577	1					
ANR	288436	PrimaryExpression	0		286577	1					
ANR	288437	ExpressionStatement	"directMem = BIT ( state -> words [ 0 ] , 14 )"	951:6:22392:22432	286577	72	True				
ANR	288438	AssignmentExpression	"directMem = BIT ( state -> words [ 0 ] , 14 )"		286577	0		=			
ANR	288439	Identifier	directMem		286577	0					
ANR	288440	CallExpression	"BIT ( state -> words [ 0 ] , 14 )"		286577	1					
ANR	288441	Callee	BIT		286577	0					
ANR	288442	Identifier	BIT		286577	0					
ANR	288443	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288444	Argument	state -> words [ 0 ]		286577	0					
ANR	288445	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288446	PtrMemberAccess	state -> words		286577	0					
ANR	288447	Identifier	state		286577	0					
ANR	288448	Identifier	words		286577	1					
ANR	288449	PrimaryExpression	0		286577	1					
ANR	288450	Argument	14		286577	1					
ANR	288451	PrimaryExpression	14		286577	0					
ANR	288452	ExpressionStatement	"addrWriteBack = BIT ( state -> words [ 0 ] , 12 )"	952:6:22440:22480	286577	73	True				
ANR	288453	AssignmentExpression	"addrWriteBack = BIT ( state -> words [ 0 ] , 12 )"		286577	0		=			
ANR	288454	Identifier	addrWriteBack		286577	0					
ANR	288455	CallExpression	"BIT ( state -> words [ 0 ] , 12 )"		286577	1					
ANR	288456	Callee	BIT		286577	0					
ANR	288457	Identifier	BIT		286577	0					
ANR	288458	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288459	Argument	state -> words [ 0 ]		286577	0					
ANR	288460	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288461	PtrMemberAccess	state -> words		286577	0					
ANR	288462	Identifier	state		286577	0					
ANR	288463	Identifier	words		286577	1					
ANR	288464	PrimaryExpression	0		286577	1					
ANR	288465	Argument	12		286577	1					
ANR	288466	PrimaryExpression	12		286577	0					
ANR	288467	ExpressionStatement	"signExtend = BIT ( state -> words [ 0 ] , 9 )"	953:6:22488:22527	286577	74	True				
ANR	288468	AssignmentExpression	"signExtend = BIT ( state -> words [ 0 ] , 9 )"		286577	0		=			
ANR	288469	Identifier	signExtend		286577	0					
ANR	288470	CallExpression	"BIT ( state -> words [ 0 ] , 9 )"		286577	1					
ANR	288471	Callee	BIT		286577	0					
ANR	288472	Identifier	BIT		286577	0					
ANR	288473	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288474	Argument	state -> words [ 0 ]		286577	0					
ANR	288475	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288476	PtrMemberAccess	state -> words		286577	0					
ANR	288477	Identifier	state		286577	0					
ANR	288478	Identifier	words		286577	1					
ANR	288479	PrimaryExpression	0		286577	1					
ANR	288480	Argument	9		286577	1					
ANR	288481	PrimaryExpression	9		286577	0					
ANR	288482	ExpressionStatement	write_instr_name ( )	955:6:22536:22555	286577	75	True				
ANR	288483	CallExpression	write_instr_name ( )		286577	0					
ANR	288484	Callee	write_instr_name		286577	0					
ANR	288485	Identifier	write_instr_name		286577	0					
ANR	288486	ArgumentList			286577	1					
ANR	288487	ExpressionStatement	WRITE_FORMAT_x_COMMA_LB ( A )	956:6:22563:22590	286577	76	True				
ANR	288488	CallExpression	WRITE_FORMAT_x_COMMA_LB ( A )		286577	0					
ANR	288489	Callee	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288490	Identifier	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288491	ArgumentList	A		286577	1					
ANR	288492	Argument	A		286577	0					
ANR	288493	Identifier	A		286577	0					
ANR	288494	IfStatement	if ( ! fieldBisReg )		286577	77					
ANR	288495	Condition	! fieldBisReg	957:10:22602:22613	286577	0	True				
ANR	288496	UnaryOperationExpression	! fieldBisReg		286577	0					
ANR	288497	UnaryOperator	!		286577	0					
ANR	288498	Identifier	fieldBisReg		286577	1					
ANR	288499	CompoundStatement		464:1:11206:11206	286577	1					
ANR	288500	ExpressionStatement	fieldB = state -> _offset	959:3:22622:22645	286577	0	True				
ANR	288501	AssignmentExpression	fieldB = state -> _offset		286577	0		=			
ANR	288502	Identifier	fieldB		286577	0					
ANR	288503	PtrMemberAccess	state -> _offset		286577	1					
ANR	288504	Identifier	state		286577	0					
ANR	288505	Identifier	_offset		286577	1					
ANR	288506	ExpressionStatement	WRITE_FORMAT_x_RB ( B )	960:3:22650:22671	286577	1	True				
ANR	288507	CallExpression	WRITE_FORMAT_x_RB ( B )		286577	0					
ANR	288508	Callee	WRITE_FORMAT_x_RB		286577	0					
ANR	288509	Identifier	WRITE_FORMAT_x_RB		286577	0					
ANR	288510	ArgumentList	B		286577	1					
ANR	288511	Argument	B		286577	0					
ANR	288512	Identifier	B		286577	0					
ANR	288513	ElseStatement	else		286577	0					
ANR	288514	CompoundStatement		469:1:11277:11277	286577	0					
ANR	288515	ExpressionStatement	WRITE_FORMAT_x ( B )	964:3:22693:22711	286577	0	True				
ANR	288516	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	288517	Callee	WRITE_FORMAT_x		286577	0					
ANR	288518	Identifier	WRITE_FORMAT_x		286577	0					
ANR	288519	ArgumentList	B		286577	1					
ANR	288520	Argument	B		286577	0					
ANR	288521	Identifier	B		286577	0					
ANR	288522	IfStatement	"if ( fieldC != 0 && ! BIT ( state -> words [ 0 ] , 13 ) )"		286577	1					
ANR	288523	Condition	"fieldC != 0 && ! BIT ( state -> words [ 0 ] , 13 )"	965:7:22720:22759	286577	0	True				
ANR	288524	AndExpression	"fieldC != 0 && ! BIT ( state -> words [ 0 ] , 13 )"		286577	0		&&			
ANR	288525	EqualityExpression	fieldC != 0		286577	0		!=			
ANR	288526	Identifier	fieldC		286577	0					
ANR	288527	PrimaryExpression	0		286577	1					
ANR	288528	UnaryOperationExpression	"! BIT ( state -> words [ 0 ] , 13 )"		286577	1					
ANR	288529	UnaryOperator	!		286577	0					
ANR	288530	CallExpression	"BIT ( state -> words [ 0 ] , 13 )"		286577	1					
ANR	288531	Callee	BIT		286577	0					
ANR	288532	Identifier	BIT		286577	0					
ANR	288533	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288534	Argument	state -> words [ 0 ]		286577	0					
ANR	288535	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288536	PtrMemberAccess	state -> words		286577	0					
ANR	288537	Identifier	state		286577	0					
ANR	288538	Identifier	words		286577	1					
ANR	288539	PrimaryExpression	0		286577	1					
ANR	288540	Argument	13		286577	1					
ANR	288541	PrimaryExpression	13		286577	0					
ANR	288542	CompoundStatement		472:5:11356:11356	286577	1					
ANR	288543	ExpressionStatement	fieldCisReg = 0	967:7:22776:22791	286577	0	True				
ANR	288544	AssignmentExpression	fieldCisReg = 0		286577	0		=			
ANR	288545	Identifier	fieldCisReg		286577	0					
ANR	288546	PrimaryExpression	0		286577	1					
ANR	288547	ExpressionStatement	WRITE_FORMAT_COMMA_x_RB ( C )	968:7:22800:22827	286577	1	True				
ANR	288548	CallExpression	WRITE_FORMAT_COMMA_x_RB ( C )		286577	0					
ANR	288549	Callee	WRITE_FORMAT_COMMA_x_RB		286577	0					
ANR	288550	Identifier	WRITE_FORMAT_COMMA_x_RB		286577	0					
ANR	288551	ArgumentList	C		286577	1					
ANR	288552	Argument	C		286577	0					
ANR	288553	Identifier	C		286577	0					
ANR	288554	ElseStatement	else		286577	0					
ANR	288555	CompoundStatement		475:10:11428:11428	286577	0					
ANR	288556	ExpressionStatement	WRITE_FORMAT_RB ( )	970:4:22845:22863	286577	0	True				
ANR	288557	CallExpression	WRITE_FORMAT_RB ( )		286577	0					
ANR	288558	Callee	WRITE_FORMAT_RB		286577	0					
ANR	288559	Identifier	WRITE_FORMAT_RB		286577	0					
ANR	288560	ArgumentList			286577	1					
ANR	288561	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB , fieldC )"	973:6:22879:22962	286577	78	True				
ANR	288562	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB , fieldC )"		286577	0					
ANR	288563	Callee	arc_sprintf		286577	0					
ANR	288564	Identifier	arc_sprintf		286577	0					
ANR	288565	ArgumentList	state		286577	1					
ANR	288566	Argument	state		286577	0					
ANR	288567	Identifier	state		286577	0					
ANR	288568	Argument	state -> operandBuffer		286577	1					
ANR	288569	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288570	Identifier	state		286577	0					
ANR	288571	Identifier	operandBuffer		286577	1					
ANR	288572	Argument	formatString		286577	2					
ANR	288573	Identifier	formatString		286577	0					
ANR	288574	Argument	fieldA		286577	3					
ANR	288575	Identifier	fieldA		286577	0					
ANR	288576	Argument	fieldB		286577	4					
ANR	288577	Identifier	fieldB		286577	0					
ANR	288578	Argument	fieldC		286577	5					
ANR	288579	Identifier	fieldC		286577	0					
ANR	288580	BreakStatement	break ;	975:6:22970:22975	286577	79	True				
ANR	288581	Label	case CLASS_A4_ST :	977:4:22982:22998	286577	80	True				
ANR	288582	Identifier	CLASS_A4_ST		286577	0					
ANR	288583	ExpressionStatement	CHECK_FIELD_B ( )	979:6:23035:23050	286577	81	True				
ANR	288584	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	288585	Callee	CHECK_FIELD_B		286577	0					
ANR	288586	Identifier	CHECK_FIELD_B		286577	0					
ANR	288587	ArgumentList			286577	1					
ANR	288588	ExpressionStatement	CHECK_FIELD_C ( )	980:6:23058:23073	286577	82	True				
ANR	288589	CallExpression	CHECK_FIELD_C ( )		286577	0					
ANR	288590	Callee	CHECK_FIELD_C		286577	0					
ANR	288591	Identifier	CHECK_FIELD_C		286577	0					
ANR	288592	ArgumentList			286577	1					
ANR	288593	ExpressionStatement	fieldA = FIELDD ( state -> words [ 0 ] )	981:6:23081:23113	286577	83	True				
ANR	288594	AssignmentExpression	fieldA = FIELDD ( state -> words [ 0 ] )		286577	0		=			
ANR	288595	Identifier	fieldA		286577	0					
ANR	288596	CallExpression	FIELDD ( state -> words [ 0 ] )		286577	1					
ANR	288597	Callee	FIELDD		286577	0					
ANR	288598	Identifier	FIELDD		286577	0					
ANR	288599	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288600	Argument	state -> words [ 0 ]		286577	0					
ANR	288601	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288602	PtrMemberAccess	state -> words		286577	0					
ANR	288603	Identifier	state		286577	0					
ANR	288604	Identifier	words		286577	1					
ANR	288605	PrimaryExpression	0		286577	1					
ANR	288606	IfStatement	if ( dbg )		286577	84					
ANR	288607	Condition	dbg	984:10:23163:23165	286577	0	True				
ANR	288608	Identifier	dbg		286577	0					
ANR	288609	CompoundStatement		490:15:11757:11757	286577	1					
ANR	288610	ExpressionStatement	"eprintf ( ""7:b reg %d %x off %x\\n"" , fieldBisReg , fieldB , fieldA )"	985:7:23177:23248	286577	0	True				
ANR	288611	CallExpression	"eprintf ( ""7:b reg %d %x off %x\\n"" , fieldBisReg , fieldB , fieldA )"		286577	0					
ANR	288612	Callee	eprintf		286577	0					
ANR	288613	Identifier	eprintf		286577	0					
ANR	288614	ArgumentList	"""7:b reg %d %x off %x\\n"""		286577	1					
ANR	288615	Argument	"""7:b reg %d %x off %x\\n"""		286577	0					
ANR	288616	PrimaryExpression	"""7:b reg %d %x off %x\\n"""		286577	0					
ANR	288617	Argument	fieldBisReg		286577	1					
ANR	288618	Identifier	fieldBisReg		286577	0					
ANR	288619	Argument	fieldB		286577	2					
ANR	288620	Identifier	fieldB		286577	0					
ANR	288621	Argument	fieldA		286577	3					
ANR	288622	Identifier	fieldA		286577	0					
ANR	288623	ExpressionStatement	state -> _ea_present = 1	988:6:23264:23286	286577	85	True				
ANR	288624	AssignmentExpression	state -> _ea_present = 1		286577	0		=			
ANR	288625	PtrMemberAccess	state -> _ea_present		286577	0					
ANR	288626	Identifier	state		286577	0					
ANR	288627	Identifier	_ea_present		286577	1					
ANR	288628	PrimaryExpression	1		286577	1					
ANR	288629	ExpressionStatement	state -> _offset = fieldA	989:6:23294:23317	286577	86	True				
ANR	288630	AssignmentExpression	state -> _offset = fieldA		286577	0		=			
ANR	288631	PtrMemberAccess	state -> _offset		286577	0					
ANR	288632	Identifier	state		286577	0					
ANR	288633	Identifier	_offset		286577	1					
ANR	288634	Identifier	fieldA		286577	1					
ANR	288635	IfStatement	if ( fieldBisReg )		286577	87					
ANR	288636	Condition	fieldBisReg	990:10:23329:23339	286577	0	True				
ANR	288637	Identifier	fieldBisReg		286577	0					
ANR	288638	CompoundStatement		496:23:11931:11931	286577	1					
ANR	288639	ExpressionStatement	state -> ea_reg1 = fieldB	991:7:23351:23374	286577	0	True				
ANR	288640	AssignmentExpression	state -> ea_reg1 = fieldB		286577	0		=			
ANR	288641	PtrMemberAccess	state -> ea_reg1		286577	0					
ANR	288642	Identifier	state		286577	0					
ANR	288643	Identifier	ea_reg1		286577	1					
ANR	288644	Identifier	fieldB		286577	1					
ANR	288645	ElseStatement	else		286577	0					
ANR	288646	CompoundStatement		501:13:12173:12173	286577	0					
ANR	288647	ExpressionStatement	"state -> _offset += fieldB , state -> _ea_present = 0"	996:7:23593:23641	286577	0	True				
ANR	288648	Expression	"state -> _offset += fieldB , state -> _ea_present = 0"		286577	0					
ANR	288649	AssignmentExpression	state -> _offset += fieldB		286577	0		+=			
ANR	288650	PtrMemberAccess	state -> _offset		286577	0					
ANR	288651	Identifier	state		286577	0					
ANR	288652	Identifier	_offset		286577	1					
ANR	288653	Identifier	fieldB		286577	1					
ANR	288654	AssignmentExpression	state -> _ea_present = 0		286577	1		=			
ANR	288655	PtrMemberAccess	state -> _ea_present		286577	0					
ANR	288656	Identifier	state		286577	0					
ANR	288657	Identifier	_ea_present		286577	1					
ANR	288658	PrimaryExpression	0		286577	1					
ANR	288659	ExpressionStatement	"directMem = BIT ( state -> words [ 0 ] , 26 )"	999:6:23658:23699	286577	88	True				
ANR	288660	AssignmentExpression	"directMem = BIT ( state -> words [ 0 ] , 26 )"		286577	0		=			
ANR	288661	Identifier	directMem		286577	0					
ANR	288662	CallExpression	"BIT ( state -> words [ 0 ] , 26 )"		286577	1					
ANR	288663	Callee	BIT		286577	0					
ANR	288664	Identifier	BIT		286577	0					
ANR	288665	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288666	Argument	state -> words [ 0 ]		286577	0					
ANR	288667	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288668	PtrMemberAccess	state -> words		286577	0					
ANR	288669	Identifier	state		286577	0					
ANR	288670	Identifier	words		286577	1					
ANR	288671	PrimaryExpression	0		286577	1					
ANR	288672	Argument	26		286577	1					
ANR	288673	PrimaryExpression	26		286577	0					
ANR	288674	ExpressionStatement	"addrWriteBack = BIT ( state -> words [ 0 ] , 24 )"	1000:6:23707:23748	286577	89	True				
ANR	288675	AssignmentExpression	"addrWriteBack = BIT ( state -> words [ 0 ] , 24 )"		286577	0		=			
ANR	288676	Identifier	addrWriteBack		286577	0					
ANR	288677	CallExpression	"BIT ( state -> words [ 0 ] , 24 )"		286577	1					
ANR	288678	Callee	BIT		286577	0					
ANR	288679	Identifier	BIT		286577	0					
ANR	288680	ArgumentList	state -> words [ 0 ]		286577	1					
ANR	288681	Argument	state -> words [ 0 ]		286577	0					
ANR	288682	ArrayIndexing	state -> words [ 0 ]		286577	0					
ANR	288683	PtrMemberAccess	state -> words		286577	0					
ANR	288684	Identifier	state		286577	0					
ANR	288685	Identifier	words		286577	1					
ANR	288686	PrimaryExpression	0		286577	1					
ANR	288687	Argument	24		286577	1					
ANR	288688	PrimaryExpression	24		286577	0					
ANR	288689	ExpressionStatement	write_instr_name ( )	1002:6:23757:23776	286577	90	True				
ANR	288690	CallExpression	write_instr_name ( )		286577	0					
ANR	288691	Callee	write_instr_name		286577	0					
ANR	288692	Identifier	write_instr_name		286577	0					
ANR	288693	ArgumentList			286577	1					
ANR	288694	ExpressionStatement	WRITE_FORMAT_x_COMMA_LB ( C )	1003:6:23784:23810	286577	91	True				
ANR	288695	CallExpression	WRITE_FORMAT_x_COMMA_LB ( C )		286577	0					
ANR	288696	Callee	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288697	Identifier	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288698	ArgumentList	C		286577	1					
ANR	288699	Argument	C		286577	0					
ANR	288700	Identifier	C		286577	0					
ANR	288701	IfStatement	if ( ! fieldBisReg )		286577	92					
ANR	288702	Condition	! fieldBisReg	1005:10:23823:23834	286577	0	True				
ANR	288703	UnaryOperationExpression	! fieldBisReg		286577	0					
ANR	288704	UnaryOperator	!		286577	0					
ANR	288705	Identifier	fieldBisReg		286577	1					
ANR	288706	CompoundStatement		512:1:12427:12427	286577	1					
ANR	288707	ExpressionStatement	fieldB = state -> _offset	1007:3:23843:23866	286577	0	True				
ANR	288708	AssignmentExpression	fieldB = state -> _offset		286577	0		=			
ANR	288709	Identifier	fieldB		286577	0					
ANR	288710	PtrMemberAccess	state -> _offset		286577	1					
ANR	288711	Identifier	state		286577	0					
ANR	288712	Identifier	_offset		286577	1					
ANR	288713	ExpressionStatement	WRITE_FORMAT_x_RB ( B )	1008:3:23871:23892	286577	1	True				
ANR	288714	CallExpression	WRITE_FORMAT_x_RB ( B )		286577	0					
ANR	288715	Callee	WRITE_FORMAT_x_RB		286577	0					
ANR	288716	Identifier	WRITE_FORMAT_x_RB		286577	0					
ANR	288717	ArgumentList	B		286577	1					
ANR	288718	Argument	B		286577	0					
ANR	288719	Identifier	B		286577	0					
ANR	288720	ElseStatement	else		286577	0					
ANR	288721	CompoundStatement		517:1:12498:12498	286577	0					
ANR	288722	ExpressionStatement	WRITE_FORMAT_x ( B )	1012:3:23914:23932	286577	0	True				
ANR	288723	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	288724	Callee	WRITE_FORMAT_x		286577	0					
ANR	288725	Identifier	WRITE_FORMAT_x		286577	0					
ANR	288726	ArgumentList	B		286577	1					
ANR	288727	Argument	B		286577	0					
ANR	288728	Identifier	B		286577	0					
ANR	288729	IfStatement	if ( fieldBisReg && fieldA != 0 )		286577	1					
ANR	288730	Condition	fieldBisReg && fieldA != 0	1013:7:23941:23966	286577	0	True				
ANR	288731	AndExpression	fieldBisReg && fieldA != 0		286577	0		&&			
ANR	288732	Identifier	fieldBisReg		286577	0					
ANR	288733	EqualityExpression	fieldA != 0		286577	1		!=			
ANR	288734	Identifier	fieldA		286577	0					
ANR	288735	PrimaryExpression	0		286577	1					
ANR	288736	CompoundStatement		520:5:12563:12563	286577	1					
ANR	288737	ExpressionStatement	fieldAisReg = 0	1015:7:23983:23998	286577	0	True				
ANR	288738	AssignmentExpression	fieldAisReg = 0		286577	0		=			
ANR	288739	Identifier	fieldAisReg		286577	0					
ANR	288740	PrimaryExpression	0		286577	1					
ANR	288741	ExpressionStatement	WRITE_FORMAT_COMMA_x_RB ( A )	1016:7:24007:24033	286577	1	True				
ANR	288742	CallExpression	WRITE_FORMAT_COMMA_x_RB ( A )		286577	0					
ANR	288743	Callee	WRITE_FORMAT_COMMA_x_RB		286577	0					
ANR	288744	Identifier	WRITE_FORMAT_COMMA_x_RB		286577	0					
ANR	288745	ArgumentList	A		286577	1					
ANR	288746	Argument	A		286577	0					
ANR	288747	Identifier	A		286577	0					
ANR	288748	ElseStatement	else		286577	0					
ANR	288749	CompoundStatement		523:10:12634:12634	286577	0					
ANR	288750	ExpressionStatement	WRITE_FORMAT_RB ( )	1018:4:24051:24069	286577	0	True				
ANR	288751	CallExpression	WRITE_FORMAT_RB ( )		286577	0					
ANR	288752	Callee	WRITE_FORMAT_RB		286577	0					
ANR	288753	Identifier	WRITE_FORMAT_RB		286577	0					
ANR	288754	ArgumentList			286577	1					
ANR	288755	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldC , fieldB , fieldA )"	1021:6:24085:24168	286577	93	True				
ANR	288756	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldC , fieldB , fieldA )"		286577	0					
ANR	288757	Callee	arc_sprintf		286577	0					
ANR	288758	Identifier	arc_sprintf		286577	0					
ANR	288759	ArgumentList	state		286577	1					
ANR	288760	Argument	state		286577	0					
ANR	288761	Identifier	state		286577	0					
ANR	288762	Argument	state -> operandBuffer		286577	1					
ANR	288763	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288764	Identifier	state		286577	0					
ANR	288765	Identifier	operandBuffer		286577	1					
ANR	288766	Argument	formatString		286577	2					
ANR	288767	Identifier	formatString		286577	0					
ANR	288768	Argument	fieldC		286577	3					
ANR	288769	Identifier	fieldC		286577	0					
ANR	288770	Argument	fieldB		286577	4					
ANR	288771	Identifier	fieldB		286577	0					
ANR	288772	Argument	fieldA		286577	5					
ANR	288773	Identifier	fieldA		286577	0					
ANR	288774	BreakStatement	break ;	1023:6:24176:24181	286577	94	True				
ANR	288775	Label	case CLASS_A4_SR :	1025:4:24188:24204	286577	95	True				
ANR	288776	Identifier	CLASS_A4_SR		286577	0					
ANR	288777	ExpressionStatement	CHECK_FIELD_B ( )	1027:6:24239:24254	286577	96	True				
ANR	288778	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	288779	Callee	CHECK_FIELD_B		286577	0					
ANR	288780	Identifier	CHECK_FIELD_B		286577	0					
ANR	288781	ArgumentList			286577	1					
ANR	288782	ExpressionStatement	CHECK_FIELD_C ( )	1028:6:24262:24277	286577	97	True				
ANR	288783	CallExpression	CHECK_FIELD_C ( )		286577	0					
ANR	288784	Callee	CHECK_FIELD_C		286577	0					
ANR	288785	Identifier	CHECK_FIELD_C		286577	0					
ANR	288786	ArgumentList			286577	1					
ANR	288787	ExpressionStatement	write_instr_name ( )	1030:6:24286:24305	286577	98	True				
ANR	288788	CallExpression	write_instr_name ( )		286577	0					
ANR	288789	Callee	write_instr_name		286577	0					
ANR	288790	Identifier	write_instr_name		286577	0					
ANR	288791	ArgumentList			286577	1					
ANR	288792	ExpressionStatement	WRITE_FORMAT_x_COMMA_LB ( C )	1031:6:24313:24339	286577	99	True				
ANR	288793	CallExpression	WRITE_FORMAT_x_COMMA_LB ( C )		286577	0					
ANR	288794	Callee	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288795	Identifier	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288796	ArgumentList	C		286577	1					
ANR	288797	Argument	C		286577	0					
ANR	288798	Identifier	C		286577	0					
ANR	288799	ExpressionStatement	usesAuxReg = 1	1033:6:24414:24428	286577	100	True				
ANR	288800	AssignmentExpression	usesAuxReg = 1		286577	0		=			
ANR	288801	Identifier	usesAuxReg		286577	0					
ANR	288802	PrimaryExpression	1		286577	1					
ANR	288803	ExpressionStatement	WRITE_FORMAT_x ( B )	1034:6:24436:24454	286577	101	True				
ANR	288804	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	288805	Callee	WRITE_FORMAT_x		286577	0					
ANR	288806	Identifier	WRITE_FORMAT_x		286577	0					
ANR	288807	ArgumentList	B		286577	1					
ANR	288808	Argument	B		286577	0					
ANR	288809	Identifier	B		286577	0					
ANR	288810	ExpressionStatement	WRITE_FORMAT_RB ( )	1035:6:24462:24480	286577	102	True				
ANR	288811	CallExpression	WRITE_FORMAT_RB ( )		286577	0					
ANR	288812	Callee	WRITE_FORMAT_RB		286577	0					
ANR	288813	Identifier	WRITE_FORMAT_RB		286577	0					
ANR	288814	ArgumentList			286577	1					
ANR	288815	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldC , fieldB )"	1036:6:24488:24559	286577	103	True				
ANR	288816	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldC , fieldB )"		286577	0					
ANR	288817	Callee	arc_sprintf		286577	0					
ANR	288818	Identifier	arc_sprintf		286577	0					
ANR	288819	ArgumentList	state		286577	1					
ANR	288820	Argument	state		286577	0					
ANR	288821	Identifier	state		286577	0					
ANR	288822	Argument	state -> operandBuffer		286577	1					
ANR	288823	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288824	Identifier	state		286577	0					
ANR	288825	Identifier	operandBuffer		286577	1					
ANR	288826	Argument	formatString		286577	2					
ANR	288827	Identifier	formatString		286577	0					
ANR	288828	Argument	fieldC		286577	3					
ANR	288829	Identifier	fieldC		286577	0					
ANR	288830	Argument	fieldB		286577	4					
ANR	288831	Identifier	fieldB		286577	0					
ANR	288832	BreakStatement	break ;	1037:6:24567:24572	286577	104	True				
ANR	288833	Label	case CLASS_A4_OP3_SUBOPC3F :	1039:4:24579:24605	286577	105	True				
ANR	288834	Identifier	CLASS_A4_OP3_SUBOPC3F		286577	0					
ANR	288835	ExpressionStatement	write_instr_name ( )	1040:6:24613:24632	286577	106	True				
ANR	288836	CallExpression	write_instr_name ( )		286577	0					
ANR	288837	Callee	write_instr_name		286577	0					
ANR	288838	Identifier	write_instr_name		286577	0					
ANR	288839	ArgumentList			286577	1					
ANR	288840	ExpressionStatement	state -> operandBuffer [ 0 ] = '\\0'	1041:6:24640:24670	286577	107	True				
ANR	288841	AssignmentExpression	state -> operandBuffer [ 0 ] = '\\0'		286577	0		=			
ANR	288842	ArrayIndexing	state -> operandBuffer [ 0 ]		286577	0					
ANR	288843	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288844	Identifier	state		286577	0					
ANR	288845	Identifier	operandBuffer		286577	1					
ANR	288846	PrimaryExpression	0		286577	1					
ANR	288847	PrimaryExpression	'\\0'		286577	1					
ANR	288848	BreakStatement	break ;	1042:6:24678:24683	286577	108	True				
ANR	288849	Label	case CLASS_A4_LR :	1044:4:24690:24706	286577	109	True				
ANR	288850	Identifier	CLASS_A4_LR		286577	0					
ANR	288851	ExpressionStatement	CHECK_FIELD_A ( )	1046:6:24741:24757	286577	110	True				
ANR	288852	CallExpression	CHECK_FIELD_A ( )		286577	0					
ANR	288853	Callee	CHECK_FIELD_A		286577	0					
ANR	288854	Identifier	CHECK_FIELD_A		286577	0					
ANR	288855	ArgumentList			286577	1					
ANR	288856	ExpressionStatement	CHECK_FIELD_B ( )	1047:6:24765:24781	286577	111	True				
ANR	288857	CallExpression	CHECK_FIELD_B ( )		286577	0					
ANR	288858	Callee	CHECK_FIELD_B		286577	0					
ANR	288859	Identifier	CHECK_FIELD_B		286577	0					
ANR	288860	ArgumentList			286577	1					
ANR	288861	ExpressionStatement	write_instr_name ( )	1049:6:24790:24809	286577	112	True				
ANR	288862	CallExpression	write_instr_name ( )		286577	0					
ANR	288863	Callee	write_instr_name		286577	0					
ANR	288864	Identifier	write_instr_name		286577	0					
ANR	288865	ArgumentList			286577	1					
ANR	288866	ExpressionStatement	WRITE_FORMAT_x_COMMA_LB ( A )	1050:6:24817:24844	286577	113	True				
ANR	288867	CallExpression	WRITE_FORMAT_x_COMMA_LB ( A )		286577	0					
ANR	288868	Callee	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288869	Identifier	WRITE_FORMAT_x_COMMA_LB		286577	0					
ANR	288870	ArgumentList	A		286577	1					
ANR	288871	Argument	A		286577	0					
ANR	288872	Identifier	A		286577	0					
ANR	288873	ExpressionStatement	usesAuxReg = 1	1052:6:24918:24932	286577	114	True				
ANR	288874	AssignmentExpression	usesAuxReg = 1		286577	0		=			
ANR	288875	Identifier	usesAuxReg		286577	0					
ANR	288876	PrimaryExpression	1		286577	1					
ANR	288877	ExpressionStatement	WRITE_FORMAT_x ( B )	1053:6:24940:24958	286577	115	True				
ANR	288878	CallExpression	WRITE_FORMAT_x ( B )		286577	0					
ANR	288879	Callee	WRITE_FORMAT_x		286577	0					
ANR	288880	Identifier	WRITE_FORMAT_x		286577	0					
ANR	288881	ArgumentList	B		286577	1					
ANR	288882	Argument	B		286577	0					
ANR	288883	Identifier	B		286577	0					
ANR	288884	ExpressionStatement	WRITE_FORMAT_RB ( )	1054:6:24966:24984	286577	116	True				
ANR	288885	CallExpression	WRITE_FORMAT_RB ( )		286577	0					
ANR	288886	Callee	WRITE_FORMAT_RB		286577	0					
ANR	288887	Identifier	WRITE_FORMAT_RB		286577	0					
ANR	288888	ArgumentList			286577	1					
ANR	288889	ExpressionStatement	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB )"	1055:6:24992:25063	286577	117	True				
ANR	288890	CallExpression	"arc_sprintf ( state , state -> operandBuffer , formatString , fieldA , fieldB )"		286577	0					
ANR	288891	Callee	arc_sprintf		286577	0					
ANR	288892	Identifier	arc_sprintf		286577	0					
ANR	288893	ArgumentList	state		286577	1					
ANR	288894	Argument	state		286577	0					
ANR	288895	Identifier	state		286577	0					
ANR	288896	Argument	state -> operandBuffer		286577	1					
ANR	288897	PtrMemberAccess	state -> operandBuffer		286577	0					
ANR	288898	Identifier	state		286577	0					
ANR	288899	Identifier	operandBuffer		286577	1					
ANR	288900	Argument	formatString		286577	2					
ANR	288901	Identifier	formatString		286577	0					
ANR	288902	Argument	fieldA		286577	3					
ANR	288903	Identifier	fieldA		286577	0					
ANR	288904	Argument	fieldB		286577	4					
ANR	288905	Identifier	fieldB		286577	0					
ANR	288906	BreakStatement	break ;	1056:6:25071:25076	286577	118	True				
ANR	288907	Label	default :	1058:4:25083:25090	286577	119	True				
ANR	288908	Identifier	default		286577	0					
ANR	288909	ExpressionStatement	"mwerror ( state , ""Bad decoding class in ARC disassembler"" )"	1059:6:25098:25155	286577	120	True				
ANR	288910	CallExpression	"mwerror ( state , ""Bad decoding class in ARC disassembler"" )"		286577	0					
ANR	288911	Callee	mwerror		286577	0					
ANR	288912	Identifier	mwerror		286577	0					
ANR	288913	ArgumentList	state		286577	1					
ANR	288914	Argument	state		286577	0					
ANR	288915	Identifier	state		286577	0					
ANR	288916	Argument	"""Bad decoding class in ARC disassembler"""		286577	1					
ANR	288917	PrimaryExpression	"""Bad decoding class in ARC disassembler"""		286577	0					
ANR	288918	BreakStatement	break ;	1060:6:25163:25168	286577	121	True				
ANR	288919	ExpressionStatement	state -> _cond = cond	1063:2:25179:25198	286577	42	True				
ANR	288920	AssignmentExpression	state -> _cond = cond		286577	0		=			
ANR	288921	PtrMemberAccess	state -> _cond		286577	0					
ANR	288922	Identifier	state		286577	0					
ANR	288923	Identifier	_cond		286577	1					
ANR	288924	Identifier	cond		286577	1					
ANR	288925	ReturnStatement	return state -> instructionLen = offset ;	1064:2:25202:25239	286577	43	True				
ANR	288926	AssignmentExpression	state -> instructionLen = offset		286577	0		=			
ANR	288927	PtrMemberAccess	state -> instructionLen		286577	0					
ANR	288928	Identifier	state		286577	0					
ANR	288929	Identifier	instructionLen		286577	1					
ANR	288930	Identifier	offset		286577	1					
ANR	288931	ReturnType	static int		286577	1					
ANR	288932	Identifier	dsmOneArcInst		286577	2					
ANR	288933	ParameterList	"bfd_vma addr , struct arcDisState * state"		286577	3					
ANR	288934	Parameter	bfd_vma addr	494:15:11368:11379	286577	0	True				
ANR	288935	ParameterType	bfd_vma		286577	0					
ANR	288936	Identifier	addr		286577	1					
ANR	288937	Parameter	struct arcDisState * state	494:29:11382:11407	286577	1	True				
ANR	288938	ParameterType	struct arcDisState *		286577	0					
ANR	288939	Identifier	state		286577	1					
ANR	288940	CFGEntryNode	ENTRY		286577		True				
ANR	288941	CFGExitNode	EXIT		286577		True				
ANR	288942	Symbol	fieldA		286577						
ANR	288943	Symbol	CLASS_A4_FLAG		286577						
ANR	288944	Symbol	state -> words		286577						
ANR	288945	Symbol	op_JC		286577						
ANR	288946	Symbol	state -> _mem_load		286577						
ANR	288947	Symbol	state -> flow		286577						
ANR	288948	Symbol	instrName		286577						
ANR	288949	Symbol	fieldC		286577						
ANR	288950	Symbol	cond		286577						
ANR	288951	Symbol	fieldB		286577						
ANR	288952	Symbol	IS_REG		286577						
ANR	288953	Symbol	signExtend		286577						
ANR	288954	Symbol	indirect_call		286577						
ANR	288955	Symbol	state -> ea_reg1		286577						
ANR	288956	Symbol	state -> commNum		286577						
ANR	288957	Symbol	state -> ea_reg2		286577						
ANR	288958	Symbol	is_shimm		286577						
ANR	288959	Symbol	BITS		286577						
ANR	288960	Symbol	& flags		286577						
ANR	288961	Symbol	state		286577						
ANR	288962	Symbol	OPCODE		286577						
ANR	288963	Symbol	op_BLC		286577						
ANR	288964	Symbol	CLASS_A4_SR		286577						
ANR	288965	Symbol	CLASS_A4_ST		286577						
ANR	288966	Symbol	is_linked		286577						
ANR	288967	Symbol	op_LPC		286577						
ANR	288968	Symbol	offset		286577						
ANR	288969	Symbol	dbg		286577						
ANR	288970	Symbol	CLASS_A4_ARITH		286577						
ANR	288971	Symbol	ignoreFirstOpd		286577						
ANR	288972	Symbol	FIELDB		286577						
ANR	288973	Symbol	FIELDC		286577						
ANR	288974	Symbol	FIELDD		286577						
ANR	288975	Symbol	directMem		286577						
ANR	288976	Symbol	decodingClass		286577						
ANR	288977	Symbol	state -> _opcode		286577						
ANR	288978	Symbol	invalid_instr		286577						
ANR	288979	Symbol	usesAuxReg		286577						
ANR	288980	Symbol	state -> register_for_indirect_jump		286577						
ANR	288981	Symbol	state -> isBranch		286577						
ANR	288982	Symbol	NEXT_WORD		286577						
ANR	288983	Symbol	formatString		286577						
ANR	288984	Symbol	indirect_jump		286577						
ANR	288985	Symbol	A		286577						
ANR	288986	Symbol	B		286577						
ANR	288987	Symbol	flag		286577						
ANR	288988	Symbol	C		286577						
ANR	288989	Symbol	CLASS_A4_JC		286577						
ANR	288990	Symbol	flags		286577						
ANR	288991	Symbol	repeatsOp		286577						
ANR	288992	Symbol	CLASS_A4_LD1		286577						
ANR	288993	Symbol	fieldBisReg		286577						
ANR	288994	Symbol	is_limm		286577						
ANR	288995	Symbol	state -> acnt		286577						
ANR	288996	Symbol	CLASS_A4_LD0		286577						
ANR	288997	Symbol	CLASS_A4_OP3_GENERAL		286577						
ANR	288998	Symbol	state -> _load_len		286577						
ANR	288999	Symbol	BR_exec_when_jump		286577						
ANR	289000	Symbol	state -> nullifyMode		286577						
ANR	289001	Symbol	state -> _cond		286577						
ANR	289002	Symbol	E_ARC_MACH_A4		286577						
ANR	289003	Symbol	* state -> words		286577						
ANR	289004	Symbol	state -> tcnt		286577						
ANR	289005	Symbol	CLASS_A4_OP3_SUBOPC3F		286577						
ANR	289006	Symbol	addr		286577						
ANR	289007	Symbol	BR_exec_when_no_jump		286577						
ANR	289008	Symbol	post_address		286577						
ANR	289009	Symbol	state -> _ea_present		286577						
ANR	289010	Symbol	direct_call		286577						
ANR	289011	Symbol	addrWriteBack		286577						
ANR	289012	Symbol	fieldCisReg		286577						
ANR	289013	Symbol	state -> operandBuffer		286577						
ANR	289014	Symbol	* state -> operandBuffer		286577						
ANR	289015	Symbol	state -> _offset		286577						
ANR	289016	Symbol	instruction_name		286577						
ANR	289017	Symbol	no_reg		286577						
ANR	289018	Symbol	direct_jump		286577						
ANR	289019	Symbol	state -> instructionLen		286577						
ANR	289020	Symbol	BIT		286577						
ANR	289021	Symbol	* * state		286577						
ANR	289022	Symbol	noflow		286577						
ANR	289023	Symbol	* state		286577						
ANR	289024	Symbol	state -> opWidth		286577						
ANR	289025	Symbol	CLASS_A4_LR		286577						
ANR	289026	Symbol	fieldAisReg		286577						
ANR	289027	Symbol	condCodeIsPartOfName		286577						
ANR	289028	Symbol	IGNORE_FIRST_OPD		286577						
ANR	289029	Symbol	CLASS_A4_BRANCH		286577						
ANR	289030	Function	ARCTangent_decodeInstr	1110:0:26466:28122							
ANR	289031	FunctionDef	"ARCTangent_decodeInstr (bfd_vma address , disassemble_info * info)"		289030	0					
ANR	289032	CompoundStatement		1112:0:26535:28122	289030	0					
ANR	289033	IdentifierDeclStatement	int status ;	1113:2:26539:26549	289030	0	True				
ANR	289034	IdentifierDecl	status		289030	0					
ANR	289035	IdentifierDeclType	int		289030	0					
ANR	289036	Identifier	status		289030	1					
ANR	289037	IdentifierDeclStatement	bfd_byte buffer [ 4 ] ;	1114:2:26553:26571	289030	1	True				
ANR	289038	IdentifierDecl	buffer [ 4 ]		289030	0					
ANR	289039	IdentifierDeclType	bfd_byte [ 4 ]		289030	0					
ANR	289040	Identifier	buffer		289030	1					
ANR	289041	PrimaryExpression	4		289030	2					
ANR	289042	IdentifierDeclStatement	struct arcDisState s ;	1115:2:26575:26595	289030	2	True				
ANR	289043	IdentifierDecl	s		289030	0					
ANR	289044	IdentifierDeclType	struct arcDisState		289030	0					
ANR	289045	Identifier	s		289030	1					
ANR	289046	IdentifierDeclStatement	void * stream = info -> stream ;	1116:2:26631:26658	289030	3	True				
ANR	289047	IdentifierDecl	* stream = info -> stream		289030	0					
ANR	289048	IdentifierDeclType	void *		289030	0					
ANR	289049	Identifier	stream		289030	1					
ANR	289050	AssignmentExpression	* stream = info -> stream		289030	2		=			
ANR	289051	Identifier	stream		289030	0					
ANR	289052	PtrMemberAccess	info -> stream		289030	1					
ANR	289053	Identifier	info		289030	0					
ANR	289054	Identifier	stream		289030	1					
ANR	289055	IdentifierDeclStatement	fprintf_ftype func = info -> fprintf_func ;	1117:2:26685:26724	289030	4	True				
ANR	289056	IdentifierDecl	func = info -> fprintf_func		289030	0					
ANR	289057	IdentifierDeclType	fprintf_ftype		289030	0					
ANR	289058	Identifier	func		289030	1					
ANR	289059	AssignmentExpression	func = info -> fprintf_func		289030	2		=			
ANR	289060	Identifier	func		289030	0					
ANR	289061	PtrMemberAccess	info -> fprintf_func		289030	1					
ANR	289062	Identifier	info		289030	0					
ANR	289063	Identifier	fprintf_func		289030	1					
ANR	289064	ExpressionStatement	"memset ( & s , 0 , sizeof ( struct arcDisState ) )"	1119:2:26729:26771	289030	5	True				
ANR	289065	CallExpression	"memset ( & s , 0 , sizeof ( struct arcDisState ) )"		289030	0					
ANR	289066	Callee	memset		289030	0					
ANR	289067	Identifier	memset		289030	0					
ANR	289068	ArgumentList	& s		289030	1					
ANR	289069	Argument	& s		289030	0					
ANR	289070	UnaryOperationExpression	& s		289030	0					
ANR	289071	UnaryOperator	&		289030	0					
ANR	289072	Identifier	s		289030	1					
ANR	289073	Argument	0		289030	1					
ANR	289074	PrimaryExpression	0		289030	0					
ANR	289075	Argument	sizeof ( struct arcDisState )		289030	2					
ANR	289076	SizeofExpression	sizeof ( struct arcDisState )		289030	0					
ANR	289077	Sizeof	sizeof		289030	0					
ANR	289078	SizeofOperand	struct arcDisState		289030	1					
ANR	289079	ExpressionStatement	"status = ( * info -> read_memory_func ) ( address , buffer , 4 , info )"	1122:2:26809:26870	289030	6	True				
ANR	289080	AssignmentExpression	"status = ( * info -> read_memory_func ) ( address , buffer , 4 , info )"		289030	0		=			
ANR	289081	Identifier	status		289030	0					
ANR	289082	CallExpression	"( * info -> read_memory_func ) ( address , buffer , 4 , info )"		289030	1					
ANR	289083	Callee	* info -> read_memory_func		289030	0					
ANR	289084	UnaryOperationExpression	* info -> read_memory_func		289030	0					
ANR	289085	UnaryOperator	*		289030	0					
ANR	289086	PtrMemberAccess	info -> read_memory_func		289030	1					
ANR	289087	Identifier	info		289030	0					
ANR	289088	Identifier	read_memory_func		289030	1					
ANR	289089	ArgumentList	address		289030	1					
ANR	289090	Argument	address		289030	0					
ANR	289091	Identifier	address		289030	0					
ANR	289092	Argument	buffer		289030	1					
ANR	289093	Identifier	buffer		289030	0					
ANR	289094	Argument	4		289030	2					
ANR	289095	PrimaryExpression	4		289030	0					
ANR	289096	Argument	info		289030	3					
ANR	289097	Identifier	info		289030	0					
ANR	289098	IfStatement	if ( status != 0 )		289030	7					
ANR	289099	Condition	status != 0	1123:6:26878:26888	289030	0	True				
ANR	289100	EqualityExpression	status != 0		289030	0		!=			
ANR	289101	Identifier	status		289030	0					
ANR	289102	PrimaryExpression	0		289030	1					
ANR	289103	CompoundStatement		13:4:359:359	289030	1					
ANR	289104	ExpressionStatement	"( * info -> memory_error_func ) ( status , address , info )"	1125:6:26903:26953	289030	0	True				
ANR	289105	CallExpression	"( * info -> memory_error_func ) ( status , address , info )"		289030	0					
ANR	289106	Callee	* info -> memory_error_func		289030	0					
ANR	289107	UnaryOperationExpression	* info -> memory_error_func		289030	0					
ANR	289108	UnaryOperator	*		289030	0					
ANR	289109	PtrMemberAccess	info -> memory_error_func		289030	1					
ANR	289110	Identifier	info		289030	0					
ANR	289111	Identifier	memory_error_func		289030	1					
ANR	289112	ArgumentList	status		289030	1					
ANR	289113	Argument	status		289030	0					
ANR	289114	Identifier	status		289030	0					
ANR	289115	Argument	address		289030	1					
ANR	289116	Identifier	address		289030	0					
ANR	289117	Argument	info		289030	2					
ANR	289118	Identifier	info		289030	0					
ANR	289119	ReturnStatement	return - 1 ;	1126:6:26961:26970	289030	1	True				
ANR	289120	UnaryOperationExpression	- 1		289030	0					
ANR	289121	UnaryOperator	-		289030	0					
ANR	289122	PrimaryExpression	1		289030	1					
ANR	289123	IfStatement	if ( info -> endian == BFD_ENDIAN_LITTLE )		289030	8					
ANR	289124	Condition	info -> endian == BFD_ENDIAN_LITTLE	1128:8:26986:27018	289030	0	True				
ANR	289125	EqualityExpression	info -> endian == BFD_ENDIAN_LITTLE		289030	0		==			
ANR	289126	PtrMemberAccess	info -> endian		289030	0					
ANR	289127	Identifier	info		289030	0					
ANR	289128	Identifier	endian		289030	1					
ANR	289129	Identifier	BFD_ENDIAN_LITTLE		289030	1					
ANR	289130	CompoundStatement		17:43:485:485	289030	1					
ANR	289131	ExpressionStatement	s . words [ 0 ] = bfd_getl32 ( buffer )	1129:5:27028:27060	289030	0	True				
ANR	289132	AssignmentExpression	s . words [ 0 ] = bfd_getl32 ( buffer )		289030	0		=			
ANR	289133	ArrayIndexing	s . words [ 0 ]		289030	0					
ANR	289134	MemberAccess	s . words		289030	0					
ANR	289135	Identifier	s		289030	0					
ANR	289136	Identifier	words		289030	1					
ANR	289137	PrimaryExpression	0		289030	1					
ANR	289138	CallExpression	bfd_getl32 ( buffer )		289030	1					
ANR	289139	Callee	bfd_getl32		289030	0					
ANR	289140	Identifier	bfd_getl32		289030	0					
ANR	289141	ArgumentList	buffer		289030	1					
ANR	289142	Argument	buffer		289030	0					
ANR	289143	Identifier	buffer		289030	0					
ANR	289144	ElseStatement	else		289030	0					
ANR	289145	CompoundStatement		19:11:537:537	289030	0					
ANR	289146	ExpressionStatement	s . words [ 0 ] = bfd_getb32 ( buffer )	1131:5:27080:27112	289030	0	True				
ANR	289147	AssignmentExpression	s . words [ 0 ] = bfd_getb32 ( buffer )		289030	0		=			
ANR	289148	ArrayIndexing	s . words [ 0 ]		289030	0					
ANR	289149	MemberAccess	s . words		289030	0					
ANR	289150	Identifier	s		289030	0					
ANR	289151	Identifier	words		289030	1					
ANR	289152	PrimaryExpression	0		289030	1					
ANR	289153	CallExpression	bfd_getb32 ( buffer )		289030	1					
ANR	289154	Callee	bfd_getb32		289030	0					
ANR	289155	Identifier	bfd_getb32		289030	0					
ANR	289156	ArgumentList	buffer		289030	1					
ANR	289157	Argument	buffer		289030	0					
ANR	289158	Identifier	buffer		289030	0					
ANR	289159	ExpressionStatement	"status = ( * info -> read_memory_func ) ( address + 4 , buffer , 4 , info )"	1135:4:27245:27310	289030	9	True				
ANR	289160	AssignmentExpression	"status = ( * info -> read_memory_func ) ( address + 4 , buffer , 4 , info )"		289030	0		=			
ANR	289161	Identifier	status		289030	0					
ANR	289162	CallExpression	"( * info -> read_memory_func ) ( address + 4 , buffer , 4 , info )"		289030	1					
ANR	289163	Callee	* info -> read_memory_func		289030	0					
ANR	289164	UnaryOperationExpression	* info -> read_memory_func		289030	0					
ANR	289165	UnaryOperator	*		289030	0					
ANR	289166	PtrMemberAccess	info -> read_memory_func		289030	1					
ANR	289167	Identifier	info		289030	0					
ANR	289168	Identifier	read_memory_func		289030	1					
ANR	289169	ArgumentList	address + 4		289030	1					
ANR	289170	Argument	address + 4		289030	0					
ANR	289171	AdditiveExpression	address + 4		289030	0		+			
ANR	289172	Identifier	address		289030	0					
ANR	289173	PrimaryExpression	4		289030	1					
ANR	289174	Argument	buffer		289030	1					
ANR	289175	Identifier	buffer		289030	0					
ANR	289176	Argument	4		289030	2					
ANR	289177	PrimaryExpression	4		289030	0					
ANR	289178	Argument	info		289030	3					
ANR	289179	Identifier	info		289030	0					
ANR	289180	IfStatement	if ( info -> endian == BFD_ENDIAN_LITTLE )		289030	10					
ANR	289181	Condition	info -> endian == BFD_ENDIAN_LITTLE	1136:8:27320:27352	289030	0	True				
ANR	289182	EqualityExpression	info -> endian == BFD_ENDIAN_LITTLE		289030	0		==			
ANR	289183	PtrMemberAccess	info -> endian		289030	0					
ANR	289184	Identifier	info		289030	0					
ANR	289185	Identifier	endian		289030	1					
ANR	289186	Identifier	BFD_ENDIAN_LITTLE		289030	1					
ANR	289187	CompoundStatement		25:43:819:819	289030	1					
ANR	289188	ExpressionStatement	s . words [ 1 ] = bfd_getl32 ( buffer )	1137:5:27362:27394	289030	0	True				
ANR	289189	AssignmentExpression	s . words [ 1 ] = bfd_getl32 ( buffer )		289030	0		=			
ANR	289190	ArrayIndexing	s . words [ 1 ]		289030	0					
ANR	289191	MemberAccess	s . words		289030	0					
ANR	289192	Identifier	s		289030	0					
ANR	289193	Identifier	words		289030	1					
ANR	289194	PrimaryExpression	1		289030	1					
ANR	289195	CallExpression	bfd_getl32 ( buffer )		289030	1					
ANR	289196	Callee	bfd_getl32		289030	0					
ANR	289197	Identifier	bfd_getl32		289030	0					
ANR	289198	ArgumentList	buffer		289030	1					
ANR	289199	Argument	buffer		289030	0					
ANR	289200	Identifier	buffer		289030	0					
ANR	289201	ElseStatement	else		289030	0					
ANR	289202	CompoundStatement		27:11:871:871	289030	0					
ANR	289203	ExpressionStatement	s . words [ 1 ] = bfd_getb32 ( buffer )	1139:5:27414:27446	289030	0	True				
ANR	289204	AssignmentExpression	s . words [ 1 ] = bfd_getb32 ( buffer )		289030	0		=			
ANR	289205	ArrayIndexing	s . words [ 1 ]		289030	0					
ANR	289206	MemberAccess	s . words		289030	0					
ANR	289207	Identifier	s		289030	0					
ANR	289208	Identifier	words		289030	1					
ANR	289209	PrimaryExpression	1		289030	1					
ANR	289210	CallExpression	bfd_getb32 ( buffer )		289030	1					
ANR	289211	Callee	bfd_getb32		289030	0					
ANR	289212	Identifier	bfd_getb32		289030	0					
ANR	289213	ArgumentList	buffer		289030	1					
ANR	289214	Argument	buffer		289030	0					
ANR	289215	Identifier	buffer		289030	0					
ANR	289216	ExpressionStatement	s . _this = & s	1142:4:27459:27471	289030	11	True				
ANR	289217	AssignmentExpression	s . _this = & s		289030	0		=			
ANR	289218	MemberAccess	s . _this		289030	0					
ANR	289219	Identifier	s		289030	0					
ANR	289220	Identifier	_this		289030	1					
ANR	289221	UnaryOperationExpression	& s		289030	1					
ANR	289222	UnaryOperator	&		289030	0					
ANR	289223	Identifier	s		289030	1					
ANR	289224	ExpressionStatement	s . coreRegName = _coreRegName	1143:4:27477:27505	289030	12	True				
ANR	289225	AssignmentExpression	s . coreRegName = _coreRegName		289030	0		=			
ANR	289226	MemberAccess	s . coreRegName		289030	0					
ANR	289227	Identifier	s		289030	0					
ANR	289228	Identifier	coreRegName		289030	1					
ANR	289229	Identifier	_coreRegName		289030	1					
ANR	289230	ExpressionStatement	s . auxRegName = _auxRegName	1144:4:27511:27537	289030	13	True				
ANR	289231	AssignmentExpression	s . auxRegName = _auxRegName		289030	0		=			
ANR	289232	MemberAccess	s . auxRegName		289030	0					
ANR	289233	Identifier	s		289030	0					
ANR	289234	Identifier	auxRegName		289030	1					
ANR	289235	Identifier	_auxRegName		289030	1					
ANR	289236	ExpressionStatement	s . condCodeName = _condCodeName	1145:4:27543:27573	289030	14	True				
ANR	289237	AssignmentExpression	s . condCodeName = _condCodeName		289030	0		=			
ANR	289238	MemberAccess	s . condCodeName		289030	0					
ANR	289239	Identifier	s		289030	0					
ANR	289240	Identifier	condCodeName		289030	1					
ANR	289241	Identifier	_condCodeName		289030	1					
ANR	289242	ExpressionStatement	s . instName = _instName	1146:4:27579:27601	289030	15	True				
ANR	289243	AssignmentExpression	s . instName = _instName		289030	0		=			
ANR	289244	MemberAccess	s . instName		289030	0					
ANR	289245	Identifier	s		289030	0					
ANR	289246	Identifier	instName		289030	1					
ANR	289247	Identifier	_instName		289030	1					
ANR	289248	ExpressionStatement	"dsmOneArcInst ( address , ( void * ) & s )"	1149:4:27632:27667	289030	16	True				
ANR	289249	CallExpression	"dsmOneArcInst ( address , ( void * ) & s )"		289030	0					
ANR	289250	Callee	dsmOneArcInst		289030	0					
ANR	289251	Identifier	dsmOneArcInst		289030	0					
ANR	289252	ArgumentList	address		289030	1					
ANR	289253	Argument	address		289030	0					
ANR	289254	Identifier	address		289030	0					
ANR	289255	Argument	( void * ) & s		289030	1					
ANR	289256	CastExpression	( void * ) & s		289030	0					
ANR	289257	CastTarget	void *		289030	0					
ANR	289258	UnaryOperationExpression	& s		289030	1					
ANR	289259	UnaryOperator	&		289030	0					
ANR	289260	Identifier	s		289030	1					
ANR	289261	ExpressionStatement	"( * func ) ( stream , ""%s "" , s . instrBuffer )"	1156:4:27800:27838	289030	17	True				
ANR	289262	CallExpression	"( * func ) ( stream , ""%s "" , s . instrBuffer )"		289030	0					
ANR	289263	Callee	* func		289030	0					
ANR	289264	UnaryOperationExpression	* func		289030	0					
ANR	289265	UnaryOperator	*		289030	0					
ANR	289266	Identifier	func		289030	1					
ANR	289267	ArgumentList	stream		289030	1					
ANR	289268	Argument	stream		289030	0					
ANR	289269	Identifier	stream		289030	0					
ANR	289270	Argument	"""%s """		289030	1					
ANR	289271	PrimaryExpression	"""%s """		289030	0					
ANR	289272	Argument	s . instrBuffer		289030	2					
ANR	289273	MemberAccess	s . instrBuffer		289030	0					
ANR	289274	Identifier	s		289030	0					
ANR	289275	Identifier	instrBuffer		289030	1					
ANR	289276	IfStatement	if ( __TRANSLATION_REQUIRED ( s ) )		289030	18					
ANR	289277	Condition	__TRANSLATION_REQUIRED ( s )	1158:8:27849:27874	289030	0	True				
ANR	289278	CallExpression	__TRANSLATION_REQUIRED ( s )		289030	0					
ANR	289279	Callee	__TRANSLATION_REQUIRED		289030	0					
ANR	289280	Identifier	__TRANSLATION_REQUIRED		289030	0					
ANR	289281	ArgumentList	s		289030	1					
ANR	289282	Argument	s		289030	0					
ANR	289283	Identifier	s		289030	0					
ANR	289284	CompoundStatement		48:5:1348:1400	289030	1					
ANR	289285	IdentifierDeclStatement	bfd_vma addr = s . addresses [ s . operandBuffer [ 1 ] - '0' ] ;	1159:5:27884:27936	289030	0	True				
ANR	289286	IdentifierDecl	addr = s . addresses [ s . operandBuffer [ 1 ] - '0' ]		289030	0					
ANR	289287	IdentifierDeclType	bfd_vma		289030	0					
ANR	289288	Identifier	addr		289030	1					
ANR	289289	AssignmentExpression	addr = s . addresses [ s . operandBuffer [ 1 ] - '0' ]		289030	2		=			
ANR	289290	Identifier	addr		289030	0					
ANR	289291	ArrayIndexing	s . addresses [ s . operandBuffer [ 1 ] - '0' ]		289030	1					
ANR	289292	MemberAccess	s . addresses		289030	0					
ANR	289293	Identifier	s		289030	0					
ANR	289294	Identifier	addresses		289030	1					
ANR	289295	AdditiveExpression	s . operandBuffer [ 1 ] - '0'		289030	1		-			
ANR	289296	ArrayIndexing	s . operandBuffer [ 1 ]		289030	0					
ANR	289297	MemberAccess	s . operandBuffer		289030	0					
ANR	289298	Identifier	s		289030	0					
ANR	289299	Identifier	operandBuffer		289030	1					
ANR	289300	PrimaryExpression	1		289030	1					
ANR	289301	PrimaryExpression	'0'		289030	1					
ANR	289302	ExpressionStatement	"( * info -> print_address_func ) ( ( bfd_vma ) addr , info )"	1161:5:27944:27993	289030	1	True				
ANR	289303	CallExpression	"( * info -> print_address_func ) ( ( bfd_vma ) addr , info )"		289030	0					
ANR	289304	Callee	* info -> print_address_func		289030	0					
ANR	289305	UnaryOperationExpression	* info -> print_address_func		289030	0					
ANR	289306	UnaryOperator	*		289030	0					
ANR	289307	PtrMemberAccess	info -> print_address_func		289030	1					
ANR	289308	Identifier	info		289030	0					
ANR	289309	Identifier	print_address_func		289030	1					
ANR	289310	ArgumentList	( bfd_vma ) addr		289030	1					
ANR	289311	Argument	( bfd_vma ) addr		289030	0					
ANR	289312	CastExpression	( bfd_vma ) addr		289030	0					
ANR	289313	CastTarget	bfd_vma		289030	0					
ANR	289314	Identifier	addr		289030	1					
ANR	289315	Argument	info		289030	1					
ANR	289316	Identifier	info		289030	0					
ANR	289317	ElseStatement	else		289030	0					
ANR	289318	CompoundStatement		52:11:1501:1501	289030	0					
ANR	289319	ExpressionStatement	"( * func ) ( stream , ""%s"" , s . operandBuffer )"	1164:5:28044:28083	289030	0	True				
ANR	289320	CallExpression	"( * func ) ( stream , ""%s"" , s . operandBuffer )"		289030	0					
ANR	289321	Callee	* func		289030	0					
ANR	289322	UnaryOperationExpression	* func		289030	0					
ANR	289323	UnaryOperator	*		289030	0					
ANR	289324	Identifier	func		289030	1					
ANR	289325	ArgumentList	stream		289030	1					
ANR	289326	Argument	stream		289030	0					
ANR	289327	Identifier	stream		289030	0					
ANR	289328	Argument	"""%s"""		289030	1					
ANR	289329	PrimaryExpression	"""%s"""		289030	0					
ANR	289330	Argument	s . operandBuffer		289030	2					
ANR	289331	MemberAccess	s . operandBuffer		289030	0					
ANR	289332	Identifier	s		289030	0					
ANR	289333	Identifier	operandBuffer		289030	1					
ANR	289334	ReturnStatement	return s . instructionLen ;	1167:4:28096:28119	289030	19	True				
ANR	289335	MemberAccess	s . instructionLen		289030	0					
ANR	289336	Identifier	s		289030	0					
ANR	289337	Identifier	instructionLen		289030	1					
ANR	289338	ReturnType	int		289030	1					
ANR	289339	Identifier	ARCTangent_decodeInstr		289030	2					
ANR	289340	ParameterList	"bfd_vma address , disassemble_info * info"		289030	3					
ANR	289341	Parameter	bfd_vma address	1111:24:26494:26508	289030	0	True				
ANR	289342	ParameterType	bfd_vma		289030	0					
ANR	289343	Identifier	address		289030	1					
ANR	289344	Parameter	disassemble_info * info	1111:41:26511:26532	289030	1	True				
ANR	289345	ParameterType	disassemble_info *		289030	0					
ANR	289346	Identifier	info		289030	1					
ANR	289347	CFGEntryNode	ENTRY		289030		True				
ANR	289348	CFGExitNode	EXIT		289030		True				
ANR	289349	Symbol	s . instName		289030						
ANR	289350	Symbol	* * info		289030						
ANR	289351	Symbol	* s . words		289030						
ANR	289352	Symbol	s . coreRegName		289030						
ANR	289353	Symbol	info -> stream		289030						
ANR	289354	Symbol	s . operandBuffer		289030						
ANR	289355	Symbol	info -> fprintf_func		289030						
ANR	289356	Symbol	s . auxRegName		289030						
ANR	289357	Symbol	_coreRegName		289030						
ANR	289358	Symbol	s . _this		289030						
ANR	289359	Symbol	s . words		289030						
ANR	289360	Symbol	_auxRegName		289030						
ANR	289361	Symbol	* * s . operandBuffer		289030						
ANR	289362	Symbol	stream		289030						
ANR	289363	Symbol	info -> print_address_func		289030						
ANR	289364	Symbol	_condCodeName		289030						
ANR	289365	Symbol	* * s		289030						
ANR	289366	Symbol	buffer		289030						
ANR	289367	Symbol	addr		289030						
ANR	289368	Symbol	s . instructionLen		289030						
ANR	289369	Symbol	info		289030						
ANR	289370	Symbol	* info -> read_memory_func		289030						
ANR	289371	Symbol	s . instrBuffer		289030						
ANR	289372	Symbol	_instName		289030						
ANR	289373	Symbol	* s . addresses		289030						
ANR	289374	Symbol	address		289030						
ANR	289375	Symbol	* s . operandBuffer		289030						
ANR	289376	Symbol	bfd_getb32		289030						
ANR	289377	Symbol	s . condCodeName		289030						
ANR	289378	Symbol	info -> endian		289030						
ANR	289379	Symbol	info -> memory_error_func		289030						
ANR	289380	Symbol	s		289030						
ANR	289381	Symbol	func		289030						
ANR	289382	Symbol	s . addresses		289030						
ANR	289383	Symbol	BFD_ENDIAN_LITTLE		289030						
ANR	289384	Symbol	info -> read_memory_func		289030						
ANR	289385	Symbol	& s		289030						
ANR	289386	Symbol	* info		289030						
ANR	289387	Symbol	bfd_getl32		289030						
ANR	289388	Symbol	__TRANSLATION_REQUIRED		289030						
ANR	289389	Symbol	* s		289030						
ANR	289390	Symbol	status		289030						
