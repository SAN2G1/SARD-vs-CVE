command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1272180	File	data/converged/CVE-2019-16718~_radare2/dreg.c								
ANR	1272181	Function	r_debug_reg_sync	8:0:169:2667							
ANR	1272182	FunctionDef	"r_debug_reg_sync (RDebug * dbg , int type , int write)"		1272181	0					
ANR	1272183	CompoundStatement		8:61:230:2667	1272181	0					
ANR	1272184	IdentifierDeclStatement	"int i , n , size ;"	9:1:233:247	1272181	0	True				
ANR	1272185	IdentifierDecl	i		1272181	0					
ANR	1272186	IdentifierDeclType	int		1272181	0					
ANR	1272187	Identifier	i		1272181	1					
ANR	1272188	IdentifierDecl	n		1272181	1					
ANR	1272189	IdentifierDeclType	int		1272181	0					
ANR	1272190	Identifier	n		1272181	1					
ANR	1272191	IdentifierDecl	size		1272181	2					
ANR	1272192	IdentifierDeclType	int		1272181	0					
ANR	1272193	Identifier	size		1272181	1					
ANR	1272194	IfStatement	if ( ! dbg || ! dbg -> reg || ! dbg -> h )		1272181	1					
ANR	1272195	Condition	! dbg || ! dbg -> reg || ! dbg -> h	10:5:254:281	1272181	0	True				
ANR	1272196	OrExpression	! dbg || ! dbg -> reg || ! dbg -> h		1272181	0		||			
ANR	1272197	UnaryOperationExpression	! dbg		1272181	0					
ANR	1272198	UnaryOperator	!		1272181	0					
ANR	1272199	Identifier	dbg		1272181	1					
ANR	1272200	OrExpression	! dbg -> reg || ! dbg -> h		1272181	1		||			
ANR	1272201	UnaryOperationExpression	! dbg -> reg		1272181	0					
ANR	1272202	UnaryOperator	!		1272181	0					
ANR	1272203	PtrMemberAccess	dbg -> reg		1272181	1					
ANR	1272204	Identifier	dbg		1272181	0					
ANR	1272205	Identifier	reg		1272181	1					
ANR	1272206	UnaryOperationExpression	! dbg -> h		1272181	1					
ANR	1272207	UnaryOperator	!		1272181	0					
ANR	1272208	PtrMemberAccess	dbg -> h		1272181	1					
ANR	1272209	Identifier	dbg		1272181	0					
ANR	1272210	Identifier	h		1272181	1					
ANR	1272211	CompoundStatement		3:35:53:53	1272181	1					
ANR	1272212	ReturnStatement	return false ;	11:2:288:300	1272181	0	True				
ANR	1272213	Identifier	false		1272181	0					
ANR	1272214	IfStatement	if ( r_debug_is_dead ( dbg ) )		1272181	2					
ANR	1272215	Condition	r_debug_is_dead ( dbg )	14:5:356:376	1272181	0	True				
ANR	1272216	CallExpression	r_debug_is_dead ( dbg )		1272181	0					
ANR	1272217	Callee	r_debug_is_dead		1272181	0					
ANR	1272218	Identifier	r_debug_is_dead		1272181	0					
ANR	1272219	ArgumentList	dbg		1272181	1					
ANR	1272220	Argument	dbg		1272181	0					
ANR	1272221	Identifier	dbg		1272181	0					
ANR	1272222	CompoundStatement		7:28:148:148	1272181	1					
ANR	1272223	ReturnStatement	return false ;	15:2:383:395	1272181	0	True				
ANR	1272224	Identifier	false		1272181	0					
ANR	1272225	IfStatement	if ( write && ! dbg -> h -> reg_write )		1272181	3					
ANR	1272226	Condition	write && ! dbg -> h -> reg_write	18:5:453:479	1272181	0	True				
ANR	1272227	AndExpression	write && ! dbg -> h -> reg_write		1272181	0		&&			
ANR	1272228	Identifier	write		1272181	0					
ANR	1272229	UnaryOperationExpression	! dbg -> h -> reg_write		1272181	1					
ANR	1272230	UnaryOperator	!		1272181	0					
ANR	1272231	PtrMemberAccess	dbg -> h -> reg_write		1272181	1					
ANR	1272232	PtrMemberAccess	dbg -> h		1272181	0					
ANR	1272233	Identifier	dbg		1272181	0					
ANR	1272234	Identifier	h		1272181	1					
ANR	1272235	Identifier	reg_write		1272181	1					
ANR	1272236	CompoundStatement		11:34:251:251	1272181	1					
ANR	1272237	ReturnStatement	return false ;	19:2:486:498	1272181	0	True				
ANR	1272238	Identifier	false		1272181	0					
ANR	1272239	IfStatement	if ( ! write && ! dbg -> h -> reg_read )		1272181	4					
ANR	1272240	Condition	! write && ! dbg -> h -> reg_read	21:5:508:534	1272181	0	True				
ANR	1272241	AndExpression	! write && ! dbg -> h -> reg_read		1272181	0		&&			
ANR	1272242	UnaryOperationExpression	! write		1272181	0					
ANR	1272243	UnaryOperator	!		1272181	0					
ANR	1272244	Identifier	write		1272181	1					
ANR	1272245	UnaryOperationExpression	! dbg -> h -> reg_read		1272181	1					
ANR	1272246	UnaryOperator	!		1272181	0					
ANR	1272247	PtrMemberAccess	dbg -> h -> reg_read		1272181	1					
ANR	1272248	PtrMemberAccess	dbg -> h		1272181	0					
ANR	1272249	Identifier	dbg		1272181	0					
ANR	1272250	Identifier	h		1272181	1					
ANR	1272251	Identifier	reg_read		1272181	1					
ANR	1272252	CompoundStatement		14:34:306:306	1272181	1					
ANR	1272253	ReturnStatement	return false ;	22:2:541:553	1272181	0	True				
ANR	1272254	Identifier	false		1272181	0					
ANR	1272255	ExpressionStatement	i = ( type == R_REG_TYPE_ALL ) ? R_REG_TYPE_GPR : type	25:1:604:654	1272181	5	True				
ANR	1272256	AssignmentExpression	i = ( type == R_REG_TYPE_ALL ) ? R_REG_TYPE_GPR : type		1272181	0		=			
ANR	1272257	Identifier	i		1272181	0					
ANR	1272258	ConditionalExpression	( type == R_REG_TYPE_ALL ) ? R_REG_TYPE_GPR : type		1272181	1					
ANR	1272259	Condition	type == R_REG_TYPE_ALL		1272181	0					
ANR	1272260	EqualityExpression	type == R_REG_TYPE_ALL		1272181	0		==			
ANR	1272261	Identifier	type		1272181	0					
ANR	1272262	Identifier	R_REG_TYPE_ALL		1272181	1					
ANR	1272263	Identifier	R_REG_TYPE_GPR		1272181	1					
ANR	1272264	Identifier	type		1272181	2					
ANR	1272265	IfStatement	if ( i >= R_REG_TYPE_GPR && dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length )		1272181	6					
ANR	1272266	Condition	i >= R_REG_TYPE_GPR && dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length	28:5:811:894	1272181	0	True				
ANR	1272267	AndExpression	i >= R_REG_TYPE_GPR && dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length		1272181	0		&&			
ANR	1272268	RelationalExpression	i >= R_REG_TYPE_GPR		1272181	0		>=			
ANR	1272269	Identifier	i		1272181	0					
ANR	1272270	Identifier	R_REG_TYPE_GPR		1272181	1					
ANR	1272271	AndExpression	dbg -> reg -> regset [ i ] . regs && ! dbg -> reg -> regset [ i ] . regs -> length		1272181	1		&&			
ANR	1272272	MemberAccess	dbg -> reg -> regset [ i ] . regs		1272181	0					
ANR	1272273	ArrayIndexing	dbg -> reg -> regset [ i ]		1272181	0					
ANR	1272274	PtrMemberAccess	dbg -> reg -> regset		1272181	0					
ANR	1272275	PtrMemberAccess	dbg -> reg		1272181	0					
ANR	1272276	Identifier	dbg		1272181	0					
ANR	1272277	Identifier	reg		1272181	1					
ANR	1272278	Identifier	regset		1272181	1					
ANR	1272279	Identifier	i		1272181	1					
ANR	1272280	Identifier	regs		1272181	1					
ANR	1272281	UnaryOperationExpression	! dbg -> reg -> regset [ i ] . regs -> length		1272181	1					
ANR	1272282	UnaryOperator	!		1272181	0					
ANR	1272283	PtrMemberAccess	dbg -> reg -> regset [ i ] . regs -> length		1272181	1					
ANR	1272284	MemberAccess	dbg -> reg -> regset [ i ] . regs		1272181	0					
ANR	1272285	ArrayIndexing	dbg -> reg -> regset [ i ]		1272181	0					
ANR	1272286	PtrMemberAccess	dbg -> reg -> regset		1272181	0					
ANR	1272287	PtrMemberAccess	dbg -> reg		1272181	0					
ANR	1272288	Identifier	dbg		1272181	0					
ANR	1272289	Identifier	reg		1272181	1					
ANR	1272290	Identifier	regset		1272181	1					
ANR	1272291	Identifier	i		1272181	1					
ANR	1272292	Identifier	regs		1272181	1					
ANR	1272293	Identifier	length		1272181	1					
ANR	1272294	CompoundStatement		21:91:666:666	1272181	1					
ANR	1272295	ForStatement	for ( n = R_REG_TYPE_GPR ; n < R_REG_TYPE_LAST ; n ++ )		1272181	0					
ANR	1272296	ForInit	n = R_REG_TYPE_GPR ;	30:7:955:973	1272181	0	True				
ANR	1272297	AssignmentExpression	n = R_REG_TYPE_GPR		1272181	0		=			
ANR	1272298	Identifier	n		1272181	0					
ANR	1272299	Identifier	R_REG_TYPE_GPR		1272181	1					
ANR	1272300	Condition	n < R_REG_TYPE_LAST	30:27:975:993	1272181	1	True				
ANR	1272301	RelationalExpression	n < R_REG_TYPE_LAST		1272181	0		<			
ANR	1272302	Identifier	n		1272181	0					
ANR	1272303	Identifier	R_REG_TYPE_LAST		1272181	1					
ANR	1272304	PostIncDecOperationExpression	n ++	30:48:996:998	1272181	2	True				
ANR	1272305	Identifier	n		1272181	0					
ANR	1272306	IncDec	++		1272181	1					
ANR	1272307	CompoundStatement		27:3:887:908	1272181	3					
ANR	1272308	IdentifierDeclStatement	int mask = dbg -> reg -> regset [ n ] . maskregstype ;	32:3:1028:1071	1272181	0	True				
ANR	1272309	IdentifierDecl	mask = dbg -> reg -> regset [ n ] . maskregstype		1272181	0					
ANR	1272310	IdentifierDeclType	int		1272181	0					
ANR	1272311	Identifier	mask		1272181	1					
ANR	1272312	AssignmentExpression	mask = dbg -> reg -> regset [ n ] . maskregstype		1272181	2		=			
ANR	1272313	Identifier	mask		1272181	0					
ANR	1272314	MemberAccess	dbg -> reg -> regset [ n ] . maskregstype		1272181	1					
ANR	1272315	ArrayIndexing	dbg -> reg -> regset [ n ]		1272181	0					
ANR	1272316	PtrMemberAccess	dbg -> reg -> regset		1272181	0					
ANR	1272317	PtrMemberAccess	dbg -> reg		1272181	0					
ANR	1272318	Identifier	dbg		1272181	0					
ANR	1272319	Identifier	reg		1272181	1					
ANR	1272320	Identifier	regset		1272181	1					
ANR	1272321	Identifier	n		1272181	1					
ANR	1272322	Identifier	maskregstype		1272181	1					
ANR	1272323	IdentifierDeclStatement	int v = ( ( int ) 1 << i ) ;	34:3:1118:1139	1272181	1	True				
ANR	1272324	IdentifierDecl	v = ( ( int ) 1 << i )		1272181	0					
ANR	1272325	IdentifierDeclType	int		1272181	0					
ANR	1272326	Identifier	v		1272181	1					
ANR	1272327	AssignmentExpression	v = ( ( int ) 1 << i )		1272181	2		=			
ANR	1272328	Identifier	v		1272181	0					
ANR	1272329	ShiftExpression	( int ) 1 << i		1272181	1		<<			
ANR	1272330	CastExpression	( int ) 1		1272181	0					
ANR	1272331	CastTarget	int		1272181	0					
ANR	1272332	PrimaryExpression	1		1272181	1					
ANR	1272333	Identifier	i		1272181	1					
ANR	1272334	IfStatement	if ( n != i && ( mask & v ) )		1272181	2					
ANR	1272335	Condition	n != i && ( mask & v )	36:7:1247:1266	1272181	0	True				
ANR	1272336	AndExpression	n != i && ( mask & v )		1272181	0		&&			
ANR	1272337	EqualityExpression	n != i		1272181	0		!=			
ANR	1272338	Identifier	n		1272181	0					
ANR	1272339	Identifier	i		1272181	1					
ANR	1272340	BitAndExpression	mask & v		1272181	1		&			
ANR	1272341	Identifier	mask		1272181	0					
ANR	1272342	Identifier	v		1272181	1					
ANR	1272343	CompoundStatement		29:29:1038:1038	1272181	1					
ANR	1272344	ExpressionStatement	i = n	40:4:1492:1497	1272181	0	True				
ANR	1272345	AssignmentExpression	i = n		1272181	0		=			
ANR	1272346	Identifier	i		1272181	0					
ANR	1272347	Identifier	n		1272181	1					
ANR	1272348	BreakStatement	break ;	41:4:1503:1508	1272181	1	True				
ANR	1272349	DoStatement	do		1272181	7					
ANR	1272350	CompoundStatement		38:4:1295:1295	1272181	0					
ANR	1272351	IfStatement	if ( write )		1272181	0					
ANR	1272352	Condition	write	46:6:1534:1538	1272181	0	True				
ANR	1272353	Identifier	write		1272181	0					
ANR	1272354	CompoundStatement		40:3:1315:1362	1272181	1					
ANR	1272355	IdentifierDeclStatement	"ut8 * buf = r_reg_get_bytes ( dbg -> reg , i , & size ) ;"	47:3:1546:1593	1272181	0	True				
ANR	1272356	IdentifierDecl	"* buf = r_reg_get_bytes ( dbg -> reg , i , & size )"		1272181	0					
ANR	1272357	IdentifierDeclType	ut8 *		1272181	0					
ANR	1272358	Identifier	buf		1272181	1					
ANR	1272359	AssignmentExpression	"* buf = r_reg_get_bytes ( dbg -> reg , i , & size )"		1272181	2		=			
ANR	1272360	Identifier	buf		1272181	0					
ANR	1272361	CallExpression	"r_reg_get_bytes ( dbg -> reg , i , & size )"		1272181	1					
ANR	1272362	Callee	r_reg_get_bytes		1272181	0					
ANR	1272363	Identifier	r_reg_get_bytes		1272181	0					
ANR	1272364	ArgumentList	dbg -> reg		1272181	1					
ANR	1272365	Argument	dbg -> reg		1272181	0					
ANR	1272366	PtrMemberAccess	dbg -> reg		1272181	0					
ANR	1272367	Identifier	dbg		1272181	0					
ANR	1272368	Identifier	reg		1272181	1					
ANR	1272369	Argument	i		1272181	1					
ANR	1272370	Identifier	i		1272181	0					
ANR	1272371	Argument	& size		1272181	2					
ANR	1272372	UnaryOperationExpression	& size		1272181	0					
ANR	1272373	UnaryOperator	&		1272181	0					
ANR	1272374	Identifier	size		1272181	1					
ANR	1272375	IfStatement	"if ( ! buf || ! dbg -> h -> reg_write ( dbg , i , buf , size ) )"		1272181	1					
ANR	1272376	Condition	"! buf || ! dbg -> h -> reg_write ( dbg , i , buf , size )"	48:7:1602:1647	1272181	0	True				
ANR	1272377	OrExpression	"! buf || ! dbg -> h -> reg_write ( dbg , i , buf , size )"		1272181	0		||			
ANR	1272378	UnaryOperationExpression	! buf		1272181	0					
ANR	1272379	UnaryOperator	!		1272181	0					
ANR	1272380	Identifier	buf		1272181	1					
ANR	1272381	UnaryOperationExpression	"! dbg -> h -> reg_write ( dbg , i , buf , size )"		1272181	1					
ANR	1272382	UnaryOperator	!		1272181	0					
ANR	1272383	CallExpression	"dbg -> h -> reg_write ( dbg , i , buf , size )"		1272181	1					
ANR	1272384	Callee	dbg -> h -> reg_write		1272181	0					
ANR	1272385	PtrMemberAccess	dbg -> h -> reg_write		1272181	0					
ANR	1272386	PtrMemberAccess	dbg -> h		1272181	0					
ANR	1272387	Identifier	dbg		1272181	0					
ANR	1272388	Identifier	h		1272181	1					
ANR	1272389	Identifier	reg_write		1272181	1					
ANR	1272390	ArgumentList	dbg		1272181	1					
ANR	1272391	Argument	dbg		1272181	0					
ANR	1272392	Identifier	dbg		1272181	0					
ANR	1272393	Argument	i		1272181	1					
ANR	1272394	Identifier	i		1272181	0					
ANR	1272395	Argument	buf		1272181	2					
ANR	1272396	Identifier	buf		1272181	0					
ANR	1272397	Argument	size		1272181	3					
ANR	1272398	Identifier	size		1272181	0					
ANR	1272399	CompoundStatement		41:55:1419:1419	1272181	1					
ANR	1272400	IfStatement	if ( ! i )		1272181	0					
ANR	1272401	Condition	! i	49:8:1660:1661	1272181	0	True				
ANR	1272402	UnaryOperationExpression	! i		1272181	0					
ANR	1272403	UnaryOperator	!		1272181	0					
ANR	1272404	Identifier	i		1272181	1					
ANR	1272405	CompoundStatement		42:12:1433:1433	1272181	1					
ANR	1272406	Statement	eprintf	50:5:1671:1677	1272181	0	True				
ANR	1272407	Statement	(	50:13:1679:1679	1272181	1	True				
ANR	1272408	Statement	"""r_debug_reg: error writing """	50:14:1680:1708	1272181	2	True				
ANR	1272409	Statement	"""registers %d to %d\\n"""	51:6:1716:1737	1272181	3	True				
ANR	1272410	Statement	","	51:28:1738:1738	1272181	4	True				
ANR	1272411	Statement	i	51:30:1740:1740	1272181	5	True				
ANR	1272412	Statement	","	51:31:1741:1741	1272181	6	True				
ANR	1272413	Statement	dbg	51:33:1743:1745	1272181	7	True				
ANR	1272414	Statement	->	51:36:1746:1747	1272181	8	True				
ANR	1272415	Statement	tid	51:38:1748:1750	1272181	9	True				
ANR	1272416	Statement	)	51:41:1751:1751	1272181	10	True				
ANR	1272417	ExpressionStatement		51:42:1752:1752	1272181	11	True				
ANR	1272418	ExpressionStatement	free ( buf )	53:4:1764:1774	1272181	1	True				
ANR	1272419	CallExpression	free ( buf )		1272181	0					
ANR	1272420	Callee	free		1272181	0					
ANR	1272421	Identifier	free		1272181	0					
ANR	1272422	ArgumentList	buf		1272181	1					
ANR	1272423	Argument	buf		1272181	0					
ANR	1272424	Identifier	buf		1272181	0					
ANR	1272425	ReturnStatement	return false ;	54:4:1780:1792	1272181	2	True				
ANR	1272426	Identifier	false		1272181	0					
ANR	1272427	ExpressionStatement	free ( buf )	56:3:1802:1812	1272181	2	True				
ANR	1272428	CallExpression	free ( buf )		1272181	0					
ANR	1272429	Callee	free		1272181	0					
ANR	1272430	Identifier	free		1272181	0					
ANR	1272431	ArgumentList	buf		1272181	1					
ANR	1272432	Argument	buf		1272181	0					
ANR	1272433	Identifier	buf		1272181	0					
ANR	1272434	ElseStatement	else		1272181	0					
ANR	1272435	CompoundStatement		52:3:1670:1698	1272181	0					
ANR	1272436	IdentifierDeclStatement	int bufsize = dbg -> reg -> size ;	59:3:1901:1929	1272181	0	True				
ANR	1272437	IdentifierDecl	bufsize = dbg -> reg -> size		1272181	0					
ANR	1272438	IdentifierDeclType	int		1272181	0					
ANR	1272439	Identifier	bufsize		1272181	1					
ANR	1272440	AssignmentExpression	bufsize = dbg -> reg -> size		1272181	2		=			
ANR	1272441	Identifier	bufsize		1272181	0					
ANR	1272442	PtrMemberAccess	dbg -> reg -> size		1272181	1					
ANR	1272443	PtrMemberAccess	dbg -> reg		1272181	0					
ANR	1272444	Identifier	dbg		1272181	0					
ANR	1272445	Identifier	reg		1272181	1					
ANR	1272446	Identifier	size		1272181	1					
ANR	1272447	IfStatement	if ( bufsize > 0 )		1272181	1					
ANR	1272448	Condition	bufsize > 0	61:7:1990:2000	1272181	0	True				
ANR	1272449	RelationalExpression	bufsize > 0		1272181	0		>			
ANR	1272450	Identifier	bufsize		1272181	0					
ANR	1272451	PrimaryExpression	0		1272181	1					
ANR	1272452	CompoundStatement		55:4:1778:1812	1272181	1					
ANR	1272453	IdentifierDeclStatement	"ut8 * buf = calloc ( 1 + 1 , bufsize ) ;"	62:4:2009:2043	1272181	0	True				
ANR	1272454	IdentifierDecl	"* buf = calloc ( 1 + 1 , bufsize )"		1272181	0					
ANR	1272455	IdentifierDeclType	ut8 *		1272181	0					
ANR	1272456	Identifier	buf		1272181	1					
ANR	1272457	AssignmentExpression	"* buf = calloc ( 1 + 1 , bufsize )"		1272181	2		=			
ANR	1272458	Identifier	buf		1272181	0					
ANR	1272459	CallExpression	"calloc ( 1 + 1 , bufsize )"		1272181	1					
ANR	1272460	Callee	calloc		1272181	0					
ANR	1272461	Identifier	calloc		1272181	0					
ANR	1272462	ArgumentList	1 + 1		1272181	1					
ANR	1272463	Argument	1 + 1		1272181	0					
ANR	1272464	AdditiveExpression	1 + 1		1272181	0		+			
ANR	1272465	PrimaryExpression	1		1272181	0					
ANR	1272466	PrimaryExpression	1		1272181	1					
ANR	1272467	Argument	bufsize		1272181	1					
ANR	1272468	Identifier	bufsize		1272181	0					
ANR	1272469	IfStatement	if ( ! buf )		1272181	1					
ANR	1272470	Condition	! buf	63:8:2053:2056	1272181	0	True				
ANR	1272471	UnaryOperationExpression	! buf		1272181	0					
ANR	1272472	UnaryOperator	!		1272181	0					
ANR	1272473	Identifier	buf		1272181	1					
ANR	1272474	CompoundStatement		56:14:1828:1828	1272181	1					
ANR	1272475	ReturnStatement	return false ;	64:5:2066:2078	1272181	0	True				
ANR	1272476	Identifier	false		1272181	0					
ANR	1272477	ExpressionStatement	"size = dbg -> h -> reg_read ( dbg , i , buf , bufsize )"	67:4:2154:2200	1272181	2	True				
ANR	1272478	AssignmentExpression	"size = dbg -> h -> reg_read ( dbg , i , buf , bufsize )"		1272181	0		=			
ANR	1272479	Identifier	size		1272181	0					
ANR	1272480	CallExpression	"dbg -> h -> reg_read ( dbg , i , buf , bufsize )"		1272181	1					
ANR	1272481	Callee	dbg -> h -> reg_read		1272181	0					
ANR	1272482	PtrMemberAccess	dbg -> h -> reg_read		1272181	0					
ANR	1272483	PtrMemberAccess	dbg -> h		1272181	0					
ANR	1272484	Identifier	dbg		1272181	0					
ANR	1272485	Identifier	h		1272181	1					
ANR	1272486	Identifier	reg_read		1272181	1					
ANR	1272487	ArgumentList	dbg		1272181	1					
ANR	1272488	Argument	dbg		1272181	0					
ANR	1272489	Identifier	dbg		1272181	0					
ANR	1272490	Argument	i		1272181	1					
ANR	1272491	Identifier	i		1272181	0					
ANR	1272492	Argument	buf		1272181	2					
ANR	1272493	Identifier	buf		1272181	0					
ANR	1272494	Argument	bufsize		1272181	3					
ANR	1272495	Identifier	bufsize		1272181	0					
ANR	1272496	IfStatement	if ( size > 0 )		1272181	3					
ANR	1272497	Condition	size > 0	69:8:2281:2288	1272181	0	True				
ANR	1272498	RelationalExpression	size > 0		1272181	0		>			
ANR	1272499	Identifier	size		1272181	0					
ANR	1272500	PrimaryExpression	0		1272181	1					
ANR	1272501	CompoundStatement		62:18:2060:2060	1272181	1					
ANR	1272502	ExpressionStatement	"r_reg_set_bytes ( dbg -> reg , i , buf , size )"	70:5:2298:2338	1272181	0	True				
ANR	1272503	CallExpression	"r_reg_set_bytes ( dbg -> reg , i , buf , size )"		1272181	0					
ANR	1272504	Callee	r_reg_set_bytes		1272181	0					
ANR	1272505	Identifier	r_reg_set_bytes		1272181	0					
ANR	1272506	ArgumentList	dbg -> reg		1272181	1					
ANR	1272507	Argument	dbg -> reg		1272181	0					
ANR	1272508	PtrMemberAccess	dbg -> reg		1272181	0					
ANR	1272509	Identifier	dbg		1272181	0					
ANR	1272510	Identifier	reg		1272181	1					
ANR	1272511	Argument	i		1272181	1					
ANR	1272512	Identifier	i		1272181	0					
ANR	1272513	Argument	buf		1272181	2					
ANR	1272514	Identifier	buf		1272181	0					
ANR	1272515	Argument	size		1272181	3					
ANR	1272516	Identifier	size		1272181	0					
ANR	1272517	ExpressionStatement	free ( buf )	74:4:2415:2425	1272181	4	True				
ANR	1272518	CallExpression	free ( buf )		1272181	0					
ANR	1272519	Callee	free		1272181	0					
ANR	1272520	Identifier	free		1272181	0					
ANR	1272521	ArgumentList	buf		1272181	1					
ANR	1272522	Argument	buf		1272181	0					
ANR	1272523	Identifier	buf		1272181	0					
ANR	1272524	ExpressionStatement	i ++	80:2:2586:2589	1272181	1	True				
ANR	1272525	PostIncDecOperationExpression	i ++		1272181	0					
ANR	1272526	Identifier	i		1272181	0					
ANR	1272527	IncDec	++		1272181	1					
ANR	1272528	Condition	( type == R_REG_TYPE_ALL ) && ( i < R_REG_TYPE_LAST )	81:10:2601:2649	1272181	1	True				
ANR	1272529	AndExpression	( type == R_REG_TYPE_ALL ) && ( i < R_REG_TYPE_LAST )		1272181	0		&&			
ANR	1272530	EqualityExpression	type == R_REG_TYPE_ALL		1272181	0		==			
ANR	1272531	Identifier	type		1272181	0					
ANR	1272532	Identifier	R_REG_TYPE_ALL		1272181	1					
ANR	1272533	RelationalExpression	i < R_REG_TYPE_LAST		1272181	1		<			
ANR	1272534	Identifier	i		1272181	0					
ANR	1272535	Identifier	R_REG_TYPE_LAST		1272181	1					
ANR	1272536	ReturnStatement	return true ;	82:1:2654:2665	1272181	8	True				
ANR	1272537	Identifier	true		1272181	0					
ANR	1272538	ReturnType	R_API int		1272181	1					
ANR	1272539	Identifier	r_debug_reg_sync		1272181	2					
ANR	1272540	ParameterList	"RDebug * dbg , int type , int write"		1272181	3					
ANR	1272541	Parameter	RDebug * dbg	8:27:196:206	1272181	0	True				
ANR	1272542	ParameterType	RDebug *		1272181	0					
ANR	1272543	Identifier	dbg		1272181	1					
ANR	1272544	Parameter	int type	8:40:209:216	1272181	1	True				
ANR	1272545	ParameterType	int		1272181	0					
ANR	1272546	Identifier	type		1272181	1					
ANR	1272547	Parameter	int write	8:50:219:227	1272181	2	True				
ANR	1272548	ParameterType	int		1272181	0					
ANR	1272549	Identifier	write		1272181	1					
ANR	1272550	CFGEntryNode	ENTRY		1272181		True				
ANR	1272551	CFGExitNode	EXIT		1272181		True				
ANR	1272552	Symbol	* * dbg -> reg -> regset		1272181						
ANR	1272553	Symbol	* * * * dbg		1272181						
ANR	1272554	Symbol	* dbg -> h		1272181						
ANR	1272555	Symbol	dbg -> h -> reg_read		1272181						
ANR	1272556	Symbol	dbg -> reg -> regset [ n ] . maskregstype		1272181						
ANR	1272557	Symbol	calloc		1272181						
ANR	1272558	Symbol	type		1272181						
ANR	1272559	Symbol	R_REG_TYPE_ALL		1272181						
ANR	1272560	Symbol	dbg -> reg -> regset		1272181						
ANR	1272561	Symbol	dbg -> reg -> regset [ i ] . regs		1272181						
ANR	1272562	Symbol	write		1272181						
ANR	1272563	Symbol	R_REG_TYPE_GPR		1272181						
ANR	1272564	Symbol	* dbg -> reg -> regset		1272181						
ANR	1272565	Symbol	mask		1272181						
ANR	1272566	Symbol	* * i		1272181						
ANR	1272567	Symbol	dbg -> h		1272181						
ANR	1272568	Symbol	dbg -> h -> reg_write		1272181						
ANR	1272569	Symbol	dbg -> reg -> size		1272181						
ANR	1272570	Symbol	* * * dbg		1272181						
ANR	1272571	Symbol	dbg		1272181						
ANR	1272572	Symbol	false		1272181						
ANR	1272573	Symbol	bufsize		1272181						
ANR	1272574	Symbol	i		1272181						
ANR	1272575	Symbol	R_REG_TYPE_LAST		1272181						
ANR	1272576	Symbol	r_reg_get_bytes		1272181						
ANR	1272577	Symbol	& size		1272181						
ANR	1272578	Symbol	* dbg		1272181						
ANR	1272579	Symbol	n		1272181						
ANR	1272580	Symbol	* * dbg -> reg		1272181						
ANR	1272581	Symbol	* dbg -> reg		1272181						
ANR	1272582	Symbol	r_debug_is_dead		1272181						
ANR	1272583	Symbol	buf		1272181						
ANR	1272584	Symbol	* i		1272181						
ANR	1272585	Symbol	size		1272181						
ANR	1272586	Symbol	* dbg -> reg -> regset [ i ] . regs		1272181						
ANR	1272587	Symbol	v		1272181						
ANR	1272588	Symbol	* n		1272181						
ANR	1272589	Symbol	true		1272181						
ANR	1272590	Symbol	dbg -> reg		1272181						
ANR	1272591	Symbol	* * * dbg -> reg		1272181						
ANR	1272592	Symbol	* * dbg		1272181						
ANR	1272593	Symbol	dbg -> reg -> regset [ i ] . regs -> length		1272181						
ANR	1272594	Function	r_debug_reg_list	85:0:2670:8214							
ANR	1272595	FunctionDef	"r_debug_reg_list (RDebug * dbg , int type , int size , int rad , const char * use_color)"		1272594	0					
ANR	1272596	CompoundStatement		85:92:2762:8214	1272594	0					
ANR	1272597	IdentifierDeclStatement	"int i , delta , from , to , cols , n = 0 ;"	86:1:2765:2800	1272594	0	True				
ANR	1272598	IdentifierDecl	i		1272594	0					
ANR	1272599	IdentifierDeclType	int		1272594	0					
ANR	1272600	Identifier	i		1272594	1					
ANR	1272601	IdentifierDecl	delta		1272594	1					
ANR	1272602	IdentifierDeclType	int		1272594	0					
ANR	1272603	Identifier	delta		1272594	1					
ANR	1272604	IdentifierDecl	from		1272594	2					
ANR	1272605	IdentifierDeclType	int		1272594	0					
ANR	1272606	Identifier	from		1272594	1					
ANR	1272607	IdentifierDecl	to		1272594	3					
ANR	1272608	IdentifierDeclType	int		1272594	0					
ANR	1272609	Identifier	to		1272594	1					
ANR	1272610	IdentifierDecl	cols		1272594	4					
ANR	1272611	IdentifierDeclType	int		1272594	0					
ANR	1272612	Identifier	cols		1272594	1					
ANR	1272613	IdentifierDecl	n = 0		1272594	5					
ANR	1272614	IdentifierDeclType	int		1272594	0					
ANR	1272615	Identifier	n		1272594	1					
ANR	1272616	AssignmentExpression	n = 0		1272594	2		=			
ANR	1272617	Identifier	n		1272594	0					
ANR	1272618	PrimaryExpression	0		1272594	1					
ANR	1272619	IdentifierDeclStatement	"const char * fmt , * fmt2 , * kwhites ;"	87:1:2803:2835	1272594	1	True				
ANR	1272620	IdentifierDecl	* fmt		1272594	0					
ANR	1272621	IdentifierDeclType	const char *		1272594	0					
ANR	1272622	Identifier	fmt		1272594	1					
ANR	1272623	IdentifierDecl	* fmt2		1272594	1					
ANR	1272624	IdentifierDeclType	const char *		1272594	0					
ANR	1272625	Identifier	fmt2		1272594	1					
ANR	1272626	IdentifierDecl	* kwhites		1272594	2					
ANR	1272627	IdentifierDeclType	const char *		1272594	0					
ANR	1272628	Identifier	kwhites		1272594	1					
ANR	1272629	IdentifierDeclStatement	RPrint * pr = NULL ;	88:1:2838:2855	1272594	2	True				
ANR	1272630	IdentifierDecl	* pr = NULL		1272594	0					
ANR	1272631	IdentifierDeclType	RPrint *		1272594	0					
ANR	1272632	Identifier	pr		1272594	1					
ANR	1272633	AssignmentExpression	* pr = NULL		1272594	2		=			
ANR	1272634	Identifier	NULL		1272594	0					
ANR	1272635	Identifier	NULL		1272594	1					
ANR	1272636	IdentifierDeclStatement	int colwidth = 20 ;	89:1:2858:2875	1272594	3	True				
ANR	1272637	IdentifierDecl	colwidth = 20		1272594	0					
ANR	1272638	IdentifierDeclType	int		1272594	0					
ANR	1272639	Identifier	colwidth		1272594	1					
ANR	1272640	AssignmentExpression	colwidth = 20		1272594	2		=			
ANR	1272641	Identifier	colwidth		1272594	0					
ANR	1272642	PrimaryExpression	20		1272594	1					
ANR	1272643	IdentifierDeclStatement	RListIter * iter ;	90:1:2878:2893	1272594	4	True				
ANR	1272644	IdentifierDecl	* iter		1272594	0					
ANR	1272645	IdentifierDeclType	RListIter *		1272594	0					
ANR	1272646	Identifier	iter		1272594	1					
ANR	1272647	IdentifierDeclStatement	RRegItem * item ;	91:1:2896:2910	1272594	5	True				
ANR	1272648	IdentifierDecl	* item		1272594	0					
ANR	1272649	IdentifierDeclType	RRegItem *		1272594	0					
ANR	1272650	Identifier	item		1272594	1					
ANR	1272651	IdentifierDeclStatement	RList * head ;	92:1:2913:2924	1272594	6	True				
ANR	1272652	IdentifierDecl	* head		1272594	0					
ANR	1272653	IdentifierDeclType	RList *		1272594	0					
ANR	1272654	Identifier	head		1272594	1					
ANR	1272655	IdentifierDeclStatement	ut64 diff ;	93:1:2927:2936	1272594	7	True				
ANR	1272656	IdentifierDecl	diff		1272594	0					
ANR	1272657	IdentifierDeclType	ut64		1272594	0					
ANR	1272658	Identifier	diff		1272594	1					
ANR	1272659	IdentifierDeclStatement	char strvalue [ 256 ] ;	94:1:2939:2957	1272594	8	True				
ANR	1272660	IdentifierDecl	strvalue [ 256 ]		1272594	0					
ANR	1272661	IdentifierDeclType	char [ 256 ]		1272594	0					
ANR	1272662	Identifier	strvalue		1272594	1					
ANR	1272663	PrimaryExpression	256		1272594	2					
ANR	1272664	IfStatement	if ( ! dbg || ! dbg -> reg )		1272594	9					
ANR	1272665	Condition	! dbg || ! dbg -> reg	95:5:2964:2980	1272594	0	True				
ANR	1272666	OrExpression	! dbg || ! dbg -> reg		1272594	0		||			
ANR	1272667	UnaryOperationExpression	! dbg		1272594	0					
ANR	1272668	UnaryOperator	!		1272594	0					
ANR	1272669	Identifier	dbg		1272594	1					
ANR	1272670	UnaryOperationExpression	! dbg -> reg		1272594	1					
ANR	1272671	UnaryOperator	!		1272594	0					
ANR	1272672	PtrMemberAccess	dbg -> reg		1272594	1					
ANR	1272673	Identifier	dbg		1272594	0					
ANR	1272674	Identifier	reg		1272594	1					
ANR	1272675	CompoundStatement		11:24:220:220	1272594	1					
ANR	1272676	ReturnStatement	return false ;	96:2:2987:2999	1272594	0	True				
ANR	1272677	Identifier	false		1272594	0					
ANR	1272678	IfStatement	if ( dbg -> corebind . core )		1272594	10					
ANR	1272679	Condition	dbg -> corebind . core	98:5:3009:3026	1272594	0	True				
ANR	1272680	MemberAccess	dbg -> corebind . core		1272594	0					
ANR	1272681	PtrMemberAccess	dbg -> corebind		1272594	0					
ANR	1272682	Identifier	dbg		1272594	0					
ANR	1272683	Identifier	corebind		1272594	1					
ANR	1272684	Identifier	core		1272594	1					
ANR	1272685	CompoundStatement		14:25:266:266	1272594	1					
ANR	1272686	ExpressionStatement	pr = ( ( RCore * ) dbg -> corebind . core ) -> print	99:2:3033:3073	1272594	0	True				
ANR	1272687	AssignmentExpression	pr = ( ( RCore * ) dbg -> corebind . core ) -> print		1272594	0		=			
ANR	1272688	Identifier	pr		1272594	0					
ANR	1272689	PtrMemberAccess	( ( RCore * ) dbg -> corebind . core ) -> print		1272594	1					
ANR	1272690	CastExpression	( RCore * ) dbg -> corebind . core		1272594	0					
ANR	1272691	CastTarget	RCore *		1272594	0					
ANR	1272692	MemberAccess	dbg -> corebind . core		1272594	1					
ANR	1272693	PtrMemberAccess	dbg -> corebind		1272594	0					
ANR	1272694	Identifier	dbg		1272594	0					
ANR	1272695	Identifier	corebind		1272594	1					
ANR	1272696	Identifier	core		1272594	1					
ANR	1272697	Identifier	print		1272594	1					
ANR	1272698	IfStatement	if ( size != 0 && ! ( dbg -> reg -> bits & size ) )		1272594	11					
ANR	1272699	Condition	size != 0 && ! ( dbg -> reg -> bits & size )	101:5:3083:3119	1272594	0	True				
ANR	1272700	AndExpression	size != 0 && ! ( dbg -> reg -> bits & size )		1272594	0		&&			
ANR	1272701	EqualityExpression	size != 0		1272594	0		!=			
ANR	1272702	Identifier	size		1272594	0					
ANR	1272703	PrimaryExpression	0		1272594	1					
ANR	1272704	UnaryOperationExpression	! ( dbg -> reg -> bits & size )		1272594	1					
ANR	1272705	UnaryOperator	!		1272594	0					
ANR	1272706	BitAndExpression	dbg -> reg -> bits & size		1272594	1		&			
ANR	1272707	PtrMemberAccess	dbg -> reg -> bits		1272594	0					
ANR	1272708	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1272709	Identifier	dbg		1272594	0					
ANR	1272710	Identifier	reg		1272594	1					
ANR	1272711	Identifier	bits		1272594	1					
ANR	1272712	Identifier	size		1272594	1					
ANR	1272713	CompoundStatement		17:44:359:359	1272594	1					
ANR	1272714	ExpressionStatement	size = 32	103:2:3184:3193	1272594	0	True				
ANR	1272715	AssignmentExpression	size = 32		1272594	0		=			
ANR	1272716	Identifier	size		1272594	0					
ANR	1272717	PrimaryExpression	32		1272594	1					
ANR	1272718	IfStatement	if ( dbg -> bits & R_SYS_BITS_64 )		1272594	12					
ANR	1272719	Condition	dbg -> bits & R_SYS_BITS_64	105:5:3203:3227	1272594	0	True				
ANR	1272720	BitAndExpression	dbg -> bits & R_SYS_BITS_64		1272594	0		&			
ANR	1272721	PtrMemberAccess	dbg -> bits		1272594	0					
ANR	1272722	Identifier	dbg		1272594	0					
ANR	1272723	Identifier	bits		1272594	1					
ANR	1272724	Identifier	R_SYS_BITS_64		1272594	1					
ANR	1272725	CompoundStatement		21:32:467:467	1272594	1					
ANR	1272726	ExpressionStatement	"fmt = ""%s = %s%s"""	107:2:3269:3286	1272594	0	True				
ANR	1272727	AssignmentExpression	"fmt = ""%s = %s%s"""		1272594	0		=			
ANR	1272728	Identifier	fmt		1272594	0					
ANR	1272729	PrimaryExpression	"""%s = %s%s"""		1272594	1					
ANR	1272730	ExpressionStatement	"fmt2 = ""%s%4s%s %s%s"""	108:2:3290:3311	1272594	1	True				
ANR	1272731	AssignmentExpression	"fmt2 = ""%s%4s%s %s%s"""		1272594	0		=			
ANR	1272732	Identifier	fmt2		1272594	0					
ANR	1272733	PrimaryExpression	"""%s%4s%s %s%s"""		1272594	1					
ANR	1272734	ExpressionStatement	"kwhites = ""         """	109:2:3315:3336	1272594	2	True				
ANR	1272735	AssignmentExpression	"kwhites = ""         """		1272594	0		=			
ANR	1272736	Identifier	kwhites		1272594	0					
ANR	1272737	PrimaryExpression	"""         """		1272594	1					
ANR	1272738	ExpressionStatement	colwidth = dbg -> regcols ? 20 : 25	110:2:3340:3371	1272594	3	True				
ANR	1272739	AssignmentExpression	colwidth = dbg -> regcols ? 20 : 25		1272594	0		=			
ANR	1272740	Identifier	colwidth		1272594	0					
ANR	1272741	ConditionalExpression	dbg -> regcols ? 20 : 25		1272594	1					
ANR	1272742	Condition	dbg -> regcols		1272594	0					
ANR	1272743	PtrMemberAccess	dbg -> regcols		1272594	0					
ANR	1272744	Identifier	dbg		1272594	0					
ANR	1272745	Identifier	regcols		1272594	1					
ANR	1272746	PrimaryExpression	20		1272594	1					
ANR	1272747	PrimaryExpression	25		1272594	2					
ANR	1272748	ExpressionStatement	cols = 3	111:2:3375:3383	1272594	4	True				
ANR	1272749	AssignmentExpression	cols = 3		1272594	0		=			
ANR	1272750	Identifier	cols		1272594	0					
ANR	1272751	PrimaryExpression	3		1272594	1					
ANR	1272752	ElseStatement	else		1272594	0					
ANR	1272753	CompoundStatement		28:8:630:630	1272594	0					
ANR	1272754	ExpressionStatement	"fmt = ""%s = %s%s"""	114:2:3432:3449	1272594	0	True				
ANR	1272755	AssignmentExpression	"fmt = ""%s = %s%s"""		1272594	0		=			
ANR	1272756	Identifier	fmt		1272594	0					
ANR	1272757	PrimaryExpression	"""%s = %s%s"""		1272594	1					
ANR	1272758	ExpressionStatement	"fmt2 = ""%s%4s%s %s%s"""	115:2:3453:3474	1272594	1	True				
ANR	1272759	AssignmentExpression	"fmt2 = ""%s%4s%s %s%s"""		1272594	0		=			
ANR	1272760	Identifier	fmt2		1272594	0					
ANR	1272761	PrimaryExpression	"""%s%4s%s %s%s"""		1272594	1					
ANR	1272762	ExpressionStatement	"kwhites = ""    """	116:2:3478:3494	1272594	2	True				
ANR	1272763	AssignmentExpression	"kwhites = ""    """		1272594	0		=			
ANR	1272764	Identifier	kwhites		1272594	0					
ANR	1272765	PrimaryExpression	"""    """		1272594	1					
ANR	1272766	ExpressionStatement	colwidth = 20	117:2:3498:3511	1272594	3	True				
ANR	1272767	AssignmentExpression	colwidth = 20		1272594	0		=			
ANR	1272768	Identifier	colwidth		1272594	0					
ANR	1272769	PrimaryExpression	20		1272594	1					
ANR	1272770	ExpressionStatement	cols = 4	118:2:3515:3523	1272594	4	True				
ANR	1272771	AssignmentExpression	cols = 4		1272594	0		=			
ANR	1272772	Identifier	cols		1272594	0					
ANR	1272773	PrimaryExpression	4		1272594	1					
ANR	1272774	IfStatement	if ( dbg -> regcols )		1272594	13					
ANR	1272775	Condition	dbg -> regcols	120:5:3533:3544	1272594	0	True				
ANR	1272776	PtrMemberAccess	dbg -> regcols		1272594	0					
ANR	1272777	Identifier	dbg		1272594	0					
ANR	1272778	Identifier	regcols		1272594	1					
ANR	1272779	CompoundStatement		36:19:784:784	1272594	1					
ANR	1272780	ExpressionStatement	cols = dbg -> regcols	121:2:3551:3570	1272594	0	True				
ANR	1272781	AssignmentExpression	cols = dbg -> regcols		1272594	0		=			
ANR	1272782	Identifier	cols		1272594	0					
ANR	1272783	PtrMemberAccess	dbg -> regcols		1272594	1					
ANR	1272784	Identifier	dbg		1272594	0					
ANR	1272785	Identifier	regcols		1272594	1					
ANR	1272786	IfStatement	if ( rad == 'j' )		1272594	14					
ANR	1272787	Condition	rad == 'j'	123:5:3580:3589	1272594	0	True				
ANR	1272788	EqualityExpression	rad == 'j'		1272594	0		==			
ANR	1272789	Identifier	rad		1272594	0					
ANR	1272790	PrimaryExpression	'j'		1272594	1					
ANR	1272791	CompoundStatement		39:17:829:829	1272594	1					
ANR	1272792	ExpressionStatement	"dbg -> cb_printf ( ""{"" )"	124:2:3596:3616	1272594	0	True				
ANR	1272793	CallExpression	"dbg -> cb_printf ( ""{"" )"		1272594	0					
ANR	1272794	Callee	dbg -> cb_printf		1272594	0					
ANR	1272795	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1272796	Identifier	dbg		1272594	0					
ANR	1272797	Identifier	cb_printf		1272594	1					
ANR	1272798	ArgumentList	"""{"""		1272594	1					
ANR	1272799	Argument	"""{"""		1272594	0					
ANR	1272800	PrimaryExpression	"""{"""		1272594	0					
ANR	1272801	ExpressionStatement	from = 0	128:1:3700:3708	1272594	15	True				
ANR	1272802	AssignmentExpression	from = 0		1272594	0		=			
ANR	1272803	Identifier	from		1272594	0					
ANR	1272804	PrimaryExpression	0		1272594	1					
ANR	1272805	ExpressionStatement	to = R_REG_TYPE_LAST	129:1:3711:3731	1272594	16	True				
ANR	1272806	AssignmentExpression	to = R_REG_TYPE_LAST		1272594	0		=			
ANR	1272807	Identifier	to		1272594	0					
ANR	1272808	Identifier	R_REG_TYPE_LAST		1272594	1					
ANR	1272809	IdentifierDeclStatement	int itmidx = - 1 ;	131:1:3735:3750	1272594	17	True				
ANR	1272810	IdentifierDecl	itmidx = - 1		1272594	0					
ANR	1272811	IdentifierDeclType	int		1272594	0					
ANR	1272812	Identifier	itmidx		1272594	1					
ANR	1272813	AssignmentExpression	itmidx = - 1		1272594	2		=			
ANR	1272814	Identifier	itmidx		1272594	0					
ANR	1272815	UnaryOperationExpression	- 1		1272594	1					
ANR	1272816	UnaryOperator	-		1272594	0					
ANR	1272817	PrimaryExpression	1		1272594	1					
ANR	1272818	ExpressionStatement	dbg -> creg = NULL	132:1:3753:3769	1272594	18	True				
ANR	1272819	AssignmentExpression	dbg -> creg = NULL		1272594	0		=			
ANR	1272820	PtrMemberAccess	dbg -> creg		1272594	0					
ANR	1272821	Identifier	dbg		1272594	0					
ANR	1272822	Identifier	creg		1272594	1					
ANR	1272823	Identifier	NULL		1272594	1					
ANR	1272824	ForStatement	for ( i = from ; i < to ; i ++ )		1272594	19					
ANR	1272825	ForInit	i = from ;	133:6:3777:3785	1272594	0	True				
ANR	1272826	AssignmentExpression	i = from		1272594	0		=			
ANR	1272827	Identifier	i		1272594	0					
ANR	1272828	Identifier	from		1272594	1					
ANR	1272829	Condition	i < to	133:16:3787:3792	1272594	1	True				
ANR	1272830	RelationalExpression	i < to		1272594	0		<			
ANR	1272831	Identifier	i		1272594	0					
ANR	1272832	Identifier	to		1272594	1					
ANR	1272833	PostIncDecOperationExpression	i ++	133:24:3795:3797	1272594	2	True				
ANR	1272834	Identifier	i		1272594	0					
ANR	1272835	IncDec	++		1272594	1					
ANR	1272836	CompoundStatement		49:29:1037:1037	1272594	3					
ANR	1272837	ExpressionStatement	"head = r_reg_get_list ( dbg -> reg , i )"	134:2:3804:3839	1272594	0	True				
ANR	1272838	AssignmentExpression	"head = r_reg_get_list ( dbg -> reg , i )"		1272594	0		=			
ANR	1272839	Identifier	head		1272594	0					
ANR	1272840	CallExpression	"r_reg_get_list ( dbg -> reg , i )"		1272594	1					
ANR	1272841	Callee	r_reg_get_list		1272594	0					
ANR	1272842	Identifier	r_reg_get_list		1272594	0					
ANR	1272843	ArgumentList	dbg -> reg		1272594	1					
ANR	1272844	Argument	dbg -> reg		1272594	0					
ANR	1272845	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1272846	Identifier	dbg		1272594	0					
ANR	1272847	Identifier	reg		1272594	1					
ANR	1272848	Argument	i		1272594	1					
ANR	1272849	Identifier	i		1272594	0					
ANR	1272850	IfStatement	if ( ! head )		1272594	1					
ANR	1272851	Condition	! head	135:6:3847:3851	1272594	0	True				
ANR	1272852	UnaryOperationExpression	! head		1272594	0					
ANR	1272853	UnaryOperator	!		1272594	0					
ANR	1272854	Identifier	head		1272594	1					
ANR	1272855	CompoundStatement		51:13:1091:1091	1272594	1					
ANR	1272856	ContinueStatement	continue ;	136:3:3859:3867	1272594	0	True				
ANR	1272857	Statement	r_list_foreach	138:2:3875:3888	1272594	2	True				
ANR	1272858	Statement	(	138:17:3890:3890	1272594	3	True				
ANR	1272859	Statement	head	138:18:3891:3894	1272594	4	True				
ANR	1272860	Statement	","	138:22:3895:3895	1272594	5	True				
ANR	1272861	Statement	iter	138:24:3897:3900	1272594	6	True				
ANR	1272862	Statement	","	138:28:3901:3901	1272594	7	True				
ANR	1272863	Statement	item	138:30:3903:3906	1272594	8	True				
ANR	1272864	Statement	)	138:34:3907:3907	1272594	9	True				
ANR	1272865	CompoundStatement		87:3:1897:1921	1272594	10					
ANR	1272866	IdentifierDeclStatement	ut64 value ;	139:3:3914:3924	1272594	0	True				
ANR	1272867	IdentifierDecl	value		1272594	0					
ANR	1272868	IdentifierDeclType	ut64		1272594	0					
ANR	1272869	Identifier	value		1272594	1					
ANR	1272870	IdentifierDeclStatement	utX valueBig ;	140:3:3929:3941	1272594	1	True				
ANR	1272871	IdentifierDecl	valueBig		1272594	0					
ANR	1272872	IdentifierDeclType	utX		1272594	0					
ANR	1272873	Identifier	valueBig		1272594	1					
ANR	1272874	IfStatement	if ( type != - 1 )		1272594	2					
ANR	1272875	Condition	type != - 1	141:7:3950:3959	1272594	0	True				
ANR	1272876	EqualityExpression	type != - 1		1272594	0		!=			
ANR	1272877	Identifier	type		1272594	0					
ANR	1272878	UnaryOperationExpression	- 1		1272594	1					
ANR	1272879	UnaryOperator	-		1272594	0					
ANR	1272880	PrimaryExpression	1		1272594	1					
ANR	1272881	CompoundStatement		57:19:1199:1199	1272594	1					
ANR	1272882	IfStatement	if ( type != item -> type && R_REG_TYPE_FLG != item -> type )		1272594	0					
ANR	1272883	Condition	type != item -> type && R_REG_TYPE_FLG != item -> type	142:8:3972:4021	1272594	0	True				
ANR	1272884	AndExpression	type != item -> type && R_REG_TYPE_FLG != item -> type		1272594	0		&&			
ANR	1272885	EqualityExpression	type != item -> type		1272594	0		!=			
ANR	1272886	Identifier	type		1272594	0					
ANR	1272887	PtrMemberAccess	item -> type		1272594	1					
ANR	1272888	Identifier	item		1272594	0					
ANR	1272889	Identifier	type		1272594	1					
ANR	1272890	EqualityExpression	R_REG_TYPE_FLG != item -> type		1272594	1		!=			
ANR	1272891	Identifier	R_REG_TYPE_FLG		1272594	0					
ANR	1272892	PtrMemberAccess	item -> type		1272594	1					
ANR	1272893	Identifier	item		1272594	0					
ANR	1272894	Identifier	type		1272594	1					
ANR	1272895	CompoundStatement		58:60:1261:1261	1272594	1					
ANR	1272896	ContinueStatement	continue ;	143:5:4031:4039	1272594	0	True				
ANR	1272897	IfStatement	if ( size != 0 && size != item -> size )		1272594	1					
ANR	1272898	Condition	size != 0 && size != item -> size	145:8:4055:4085	1272594	0	True				
ANR	1272899	AndExpression	size != 0 && size != item -> size		1272594	0		&&			
ANR	1272900	EqualityExpression	size != 0		1272594	0		!=			
ANR	1272901	Identifier	size		1272594	0					
ANR	1272902	PrimaryExpression	0		1272594	1					
ANR	1272903	EqualityExpression	size != item -> size		1272594	1		!=			
ANR	1272904	Identifier	size		1272594	0					
ANR	1272905	PtrMemberAccess	item -> size		1272594	1					
ANR	1272906	Identifier	item		1272594	0					
ANR	1272907	Identifier	size		1272594	1					
ANR	1272908	CompoundStatement		61:41:1325:1325	1272594	1					
ANR	1272909	ContinueStatement	continue ;	146:5:4095:4103	1272594	0	True				
ANR	1272910	IfStatement	if ( dbg -> q_regs )		1272594	3					
ANR	1272911	Condition	dbg -> q_regs	150:7:4159:4169	1272594	0	True				
ANR	1272912	PtrMemberAccess	dbg -> q_regs		1272594	0					
ANR	1272913	Identifier	dbg		1272594	0					
ANR	1272914	Identifier	q_regs		1272594	1					
ANR	1272915	CompoundStatement		66:20:1409:1409	1272594	1					
ANR	1272916	IfStatement	if ( ! r_list_empty ( dbg -> q_regs ) )		1272594	0					
ANR	1272917	Condition	! r_list_empty ( dbg -> q_regs )	151:8:4182:4208	1272594	0	True				
ANR	1272918	UnaryOperationExpression	! r_list_empty ( dbg -> q_regs )		1272594	0					
ANR	1272919	UnaryOperator	!		1272594	0					
ANR	1272920	CallExpression	r_list_empty ( dbg -> q_regs )		1272594	1					
ANR	1272921	Callee	r_list_empty		1272594	0					
ANR	1272922	Identifier	r_list_empty		1272594	0					
ANR	1272923	ArgumentList	dbg -> q_regs		1272594	1					
ANR	1272924	Argument	dbg -> q_regs		1272594	0					
ANR	1272925	PtrMemberAccess	dbg -> q_regs		1272594	0					
ANR	1272926	Identifier	dbg		1272594	0					
ANR	1272927	Identifier	q_regs		1272594	1					
ANR	1272928	CompoundStatement		71:5:1532:1550	1272594	1					
ANR	1272929	IdentifierDeclStatement	RListIter * iterreg ;	152:5:4218:4236	1272594	0	True				
ANR	1272930	IdentifierDecl	* iterreg		1272594	0					
ANR	1272931	IdentifierDeclType	RListIter *		1272594	0					
ANR	1272932	Identifier	iterreg		1272594	1					
ANR	1272933	IdentifierDeclStatement	RList * q_reg = dbg -> q_regs ;	153:5:4243:4269	1272594	1	True				
ANR	1272934	IdentifierDecl	* q_reg = dbg -> q_regs		1272594	0					
ANR	1272935	IdentifierDeclType	RList *		1272594	0					
ANR	1272936	Identifier	q_reg		1272594	1					
ANR	1272937	AssignmentExpression	* q_reg = dbg -> q_regs		1272594	2		=			
ANR	1272938	Identifier	q_reg		1272594	0					
ANR	1272939	PtrMemberAccess	dbg -> q_regs		1272594	1					
ANR	1272940	Identifier	dbg		1272594	0					
ANR	1272941	Identifier	q_regs		1272594	1					
ANR	1272942	IdentifierDeclStatement	char * q_name ;	154:5:4276:4288	1272594	2	True				
ANR	1272943	IdentifierDecl	* q_name		1272594	0					
ANR	1272944	IdentifierDeclType	char *		1272594	0					
ANR	1272945	Identifier	q_name		1272594	1					
ANR	1272946	IdentifierDeclStatement	bool found = false ;	155:5:4295:4313	1272594	3	True				
ANR	1272947	IdentifierDecl	found = false		1272594	0					
ANR	1272948	IdentifierDeclType	bool		1272594	0					
ANR	1272949	Identifier	found		1272594	1					
ANR	1272950	AssignmentExpression	found = false		1272594	2		=			
ANR	1272951	Identifier	false		1272594	0					
ANR	1272952	Identifier	false		1272594	1					
ANR	1272953	Statement	r_list_foreach	156:5:4320:4333	1272594	4	True				
ANR	1272954	Statement	(	156:20:4335:4335	1272594	5	True				
ANR	1272955	Statement	q_reg	156:21:4336:4340	1272594	6	True				
ANR	1272956	Statement	","	156:26:4341:4341	1272594	7	True				
ANR	1272957	Statement	iterreg	156:28:4343:4349	1272594	8	True				
ANR	1272958	Statement	","	156:35:4350:4350	1272594	9	True				
ANR	1272959	Statement	q_name	156:37:4352:4357	1272594	10	True				
ANR	1272960	Statement	)	156:43:4358:4358	1272594	11	True				
ANR	1272961	CompoundStatement		72:45:1597:1597	1272594	12					
ANR	1272962	IfStatement	"if ( ! strcmp ( item -> name , q_name ) )"		1272594	0					
ANR	1272963	Condition	"! strcmp ( item -> name , q_name )"	157:10:4372:4399	1272594	0	True				
ANR	1272964	UnaryOperationExpression	"! strcmp ( item -> name , q_name )"		1272594	0					
ANR	1272965	UnaryOperator	!		1272594	0					
ANR	1272966	CallExpression	"strcmp ( item -> name , q_name )"		1272594	1					
ANR	1272967	Callee	strcmp		1272594	0					
ANR	1272968	Identifier	strcmp		1272594	0					
ANR	1272969	ArgumentList	item -> name		1272594	1					
ANR	1272970	Argument	item -> name		1272594	0					
ANR	1272971	PtrMemberAccess	item -> name		1272594	0					
ANR	1272972	Identifier	item		1272594	0					
ANR	1272973	Identifier	name		1272594	1					
ANR	1272974	Argument	q_name		1272594	1					
ANR	1272975	Identifier	q_name		1272594	0					
ANR	1272976	CompoundStatement		73:40:1639:1639	1272594	1					
ANR	1272977	ExpressionStatement	found = true	158:7:4411:4423	1272594	0	True				
ANR	1272978	AssignmentExpression	found = true		1272594	0		=			
ANR	1272979	Identifier	found		1272594	0					
ANR	1272980	Identifier	true		1272594	1					
ANR	1272981	BreakStatement	break ;	159:7:4432:4437	1272594	1	True				
ANR	1272982	IfStatement	if ( ! found )		1272594	13					
ANR	1272983	Condition	! found	162:9:4463:4468	1272594	0	True				
ANR	1272984	UnaryOperationExpression	! found		1272594	0					
ANR	1272985	UnaryOperator	!		1272594	0					
ANR	1272986	Identifier	found		1272594	1					
ANR	1272987	CompoundStatement		78:17:1708:1708	1272594	1					
ANR	1272988	ContinueStatement	continue ;	163:13:4486:4494	1272594	0	True				
ANR	1272989	ExpressionStatement	"r_list_delete ( q_reg , iterreg )"	165:5:4508:4538	1272594	14	True				
ANR	1272990	CallExpression	"r_list_delete ( q_reg , iterreg )"		1272594	0					
ANR	1272991	Callee	r_list_delete		1272594	0					
ANR	1272992	Identifier	r_list_delete		1272594	0					
ANR	1272993	ArgumentList	q_reg		1272594	1					
ANR	1272994	Argument	q_reg		1272594	0					
ANR	1272995	Identifier	q_reg		1272594	0					
ANR	1272996	Argument	iterreg		1272594	1					
ANR	1272997	Identifier	iterreg		1272594	0					
ANR	1272998	ElseStatement	else		1272594	0					
ANR	1272999	CompoundStatement		82:11:1788:1788	1272594	0					
ANR	1273000	GotoStatement	goto beach ;	168:5:4634:4644	1272594	0	True				
ANR	1273001	Identifier	beach		1272594	0					
ANR	1273002	IdentifierDeclStatement	int regSize = item -> size ;	171:3:4660:4684	1272594	4	True				
ANR	1273003	IdentifierDecl	regSize = item -> size		1272594	0					
ANR	1273004	IdentifierDeclType	int		1272594	0					
ANR	1273005	Identifier	regSize		1272594	1					
ANR	1273006	AssignmentExpression	regSize = item -> size		1272594	2		=			
ANR	1273007	Identifier	regSize		1272594	0					
ANR	1273008	PtrMemberAccess	item -> size		1272594	1					
ANR	1273009	Identifier	item		1272594	0					
ANR	1273010	Identifier	size		1272594	1					
ANR	1273011	IfStatement	if ( regSize < 80 )		1272594	5					
ANR	1273012	Condition	regSize < 80	172:7:4693:4704	1272594	0	True				
ANR	1273013	RelationalExpression	regSize < 80		1272594	0		<			
ANR	1273014	Identifier	regSize		1272594	0					
ANR	1273015	PrimaryExpression	80		1272594	1					
ANR	1273016	CompoundStatement		88:21:1944:1944	1272594	1					
ANR	1273017	ExpressionStatement	"value = r_reg_get_value ( dbg -> reg , item )"	173:4:4713:4753	1272594	0	True				
ANR	1273018	AssignmentExpression	"value = r_reg_get_value ( dbg -> reg , item )"		1272594	0		=			
ANR	1273019	Identifier	value		1272594	0					
ANR	1273020	CallExpression	"r_reg_get_value ( dbg -> reg , item )"		1272594	1					
ANR	1273021	Callee	r_reg_get_value		1272594	0					
ANR	1273022	Identifier	r_reg_get_value		1272594	0					
ANR	1273023	ArgumentList	dbg -> reg		1272594	1					
ANR	1273024	Argument	dbg -> reg		1272594	0					
ANR	1273025	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1273026	Identifier	dbg		1272594	0					
ANR	1273027	Identifier	reg		1272594	1					
ANR	1273028	Argument	item		1272594	1					
ANR	1273029	Identifier	item		1272594	0					
ANR	1273030	ExpressionStatement	"r_reg_arena_swap ( dbg -> reg , false )"	174:4:4759:4793	1272594	1	True				
ANR	1273031	CallExpression	"r_reg_arena_swap ( dbg -> reg , false )"		1272594	0					
ANR	1273032	Callee	r_reg_arena_swap		1272594	0					
ANR	1273033	Identifier	r_reg_arena_swap		1272594	0					
ANR	1273034	ArgumentList	dbg -> reg		1272594	1					
ANR	1273035	Argument	dbg -> reg		1272594	0					
ANR	1273036	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1273037	Identifier	dbg		1272594	0					
ANR	1273038	Identifier	reg		1272594	1					
ANR	1273039	Argument	false		1272594	1					
ANR	1273040	Identifier	false		1272594	0					
ANR	1273041	ExpressionStatement	"diff = r_reg_get_value ( dbg -> reg , item )"	175:4:4799:4838	1272594	2	True				
ANR	1273042	AssignmentExpression	"diff = r_reg_get_value ( dbg -> reg , item )"		1272594	0		=			
ANR	1273043	Identifier	diff		1272594	0					
ANR	1273044	CallExpression	"r_reg_get_value ( dbg -> reg , item )"		1272594	1					
ANR	1273045	Callee	r_reg_get_value		1272594	0					
ANR	1273046	Identifier	r_reg_get_value		1272594	0					
ANR	1273047	ArgumentList	dbg -> reg		1272594	1					
ANR	1273048	Argument	dbg -> reg		1272594	0					
ANR	1273049	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1273050	Identifier	dbg		1272594	0					
ANR	1273051	Identifier	reg		1272594	1					
ANR	1273052	Argument	item		1272594	1					
ANR	1273053	Identifier	item		1272594	0					
ANR	1273054	ExpressionStatement	"r_reg_arena_swap ( dbg -> reg , false )"	176:4:4844:4878	1272594	3	True				
ANR	1273055	CallExpression	"r_reg_arena_swap ( dbg -> reg , false )"		1272594	0					
ANR	1273056	Callee	r_reg_arena_swap		1272594	0					
ANR	1273057	Identifier	r_reg_arena_swap		1272594	0					
ANR	1273058	ArgumentList	dbg -> reg		1272594	1					
ANR	1273059	Argument	dbg -> reg		1272594	0					
ANR	1273060	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1273061	Identifier	dbg		1272594	0					
ANR	1273062	Identifier	reg		1272594	1					
ANR	1273063	Argument	false		1272594	1					
ANR	1273064	Identifier	false		1272594	0					
ANR	1273065	ExpressionStatement	delta = value - diff	177:4:4884:4902	1272594	4	True				
ANR	1273066	AssignmentExpression	delta = value - diff		1272594	0		=			
ANR	1273067	Identifier	delta		1272594	0					
ANR	1273068	AdditiveExpression	value - diff		1272594	1		-			
ANR	1273069	Identifier	value		1272594	0					
ANR	1273070	Identifier	diff		1272594	1					
ANR	1273071	IfStatement	if ( tolower ( ( ut8 ) rad ) == 'j' )		1272594	5					
ANR	1273072	Condition	tolower ( ( ut8 ) rad ) == 'j'	178:8:4912:4936	1272594	0	True				
ANR	1273073	EqualityExpression	tolower ( ( ut8 ) rad ) == 'j'		1272594	0		==			
ANR	1273074	CallExpression	tolower ( ( ut8 ) rad )		1272594	0					
ANR	1273075	Callee	tolower		1272594	0					
ANR	1273076	Identifier	tolower		1272594	0					
ANR	1273077	ArgumentList	( ut8 ) rad		1272594	1					
ANR	1273078	Argument	( ut8 ) rad		1272594	0					
ANR	1273079	CastExpression	( ut8 ) rad		1272594	0					
ANR	1273080	CastTarget	ut8		1272594	0					
ANR	1273081	Identifier	rad		1272594	1					
ANR	1273082	PrimaryExpression	'j'		1272594	1					
ANR	1273083	CompoundStatement		94:35:2176:2176	1272594	1					
ANR	1273084	Statement	snprintf	179:5:4946:4953	1272594	0	True				
ANR	1273085	Statement	(	179:14:4955:4955	1272594	1	True				
ANR	1273086	Statement	strvalue	179:15:4956:4963	1272594	2	True				
ANR	1273087	Statement	","	179:23:4964:4964	1272594	3	True				
ANR	1273088	Statement	sizeof	179:25:4966:4971	1272594	4	True				
ANR	1273089	Statement	(	179:32:4973:4973	1272594	5	True				
ANR	1273090	Statement	strvalue	179:33:4974:4981	1272594	6	True				
ANR	1273091	Statement	)	179:41:4982:4982	1272594	7	True				
ANR	1273092	Statement	","	179:42:4983:4983	1272594	8	True				
ANR	1273093	Statement	"""%"""	179:43:4984:4986	1272594	9	True				
ANR	1273094	Statement	PFMT64u	179:46:4987:4993	1272594	10	True				
ANR	1273095	Statement	","	179:53:4994:4994	1272594	11	True				
ANR	1273096	Statement	value	179:55:4996:5000	1272594	12	True				
ANR	1273097	Statement	)	179:60:5001:5001	1272594	13	True				
ANR	1273098	ExpressionStatement		179:61:5002:5002	1272594	14	True				
ANR	1273099	ElseStatement	else		1272594	0					
ANR	1273100	CompoundStatement		96:11:2252:2252	1272594	0					
ANR	1273101	IfStatement	if ( pr && pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64 )		1272594	0					
ANR	1273102	Condition	pr && pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64	181:9:5026:5076	1272594	0	True				
ANR	1273103	AndExpression	pr && pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64		1272594	0		&&			
ANR	1273104	Identifier	pr		1272594	0					
ANR	1273105	AndExpression	pr -> wide_offsets && dbg -> bits & R_SYS_BITS_64		1272594	1		&&			
ANR	1273106	PtrMemberAccess	pr -> wide_offsets		1272594	0					
ANR	1273107	Identifier	pr		1272594	0					
ANR	1273108	Identifier	wide_offsets		1272594	1					
ANR	1273109	BitAndExpression	dbg -> bits & R_SYS_BITS_64		1272594	1		&			
ANR	1273110	PtrMemberAccess	dbg -> bits		1272594	0					
ANR	1273111	Identifier	dbg		1272594	0					
ANR	1273112	Identifier	bits		1272594	1					
ANR	1273113	Identifier	R_SYS_BITS_64		1272594	1					
ANR	1273114	CompoundStatement		97:62:2316:2316	1272594	1					
ANR	1273115	Statement	snprintf	182:6:5087:5094	1272594	0	True				
ANR	1273116	Statement	(	182:15:5096:5096	1272594	1	True				
ANR	1273117	Statement	strvalue	182:16:5097:5104	1272594	2	True				
ANR	1273118	Statement	","	182:24:5105:5105	1272594	3	True				
ANR	1273119	Statement	sizeof	182:26:5107:5112	1272594	4	True				
ANR	1273120	Statement	(	182:33:5114:5114	1272594	5	True				
ANR	1273121	Statement	strvalue	182:34:5115:5122	1272594	6	True				
ANR	1273122	Statement	)	182:42:5123:5123	1272594	7	True				
ANR	1273123	Statement	","	182:43:5124:5124	1272594	8	True				
ANR	1273124	Statement	"""0x%016"""	182:44:5125:5132	1272594	9	True				
ANR	1273125	Statement	PFMT64x	182:52:5133:5139	1272594	10	True				
ANR	1273126	Statement	","	182:59:5140:5140	1272594	11	True				
ANR	1273127	Statement	value	182:61:5142:5146	1272594	12	True				
ANR	1273128	Statement	)	182:66:5147:5147	1272594	13	True				
ANR	1273129	ExpressionStatement		182:67:5148:5148	1272594	14	True				
ANR	1273130	ElseStatement	else		1272594	0					
ANR	1273131	CompoundStatement		99:12:2399:2399	1272594	0					
ANR	1273132	Statement	snprintf	184:6:5170:5177	1272594	0	True				
ANR	1273133	Statement	(	184:15:5179:5179	1272594	1	True				
ANR	1273134	Statement	strvalue	184:16:5180:5187	1272594	2	True				
ANR	1273135	Statement	","	184:24:5188:5188	1272594	3	True				
ANR	1273136	Statement	sizeof	184:26:5190:5195	1272594	4	True				
ANR	1273137	Statement	(	184:33:5197:5197	1272594	5	True				
ANR	1273138	Statement	strvalue	184:34:5198:5205	1272594	6	True				
ANR	1273139	Statement	)	184:42:5206:5206	1272594	7	True				
ANR	1273140	Statement	","	184:43:5207:5207	1272594	8	True				
ANR	1273141	Statement	"""0x%08"""	184:44:5208:5214	1272594	9	True				
ANR	1273142	Statement	PFMT64x	184:51:5215:5221	1272594	10	True				
ANR	1273143	Statement	","	184:58:5222:5222	1272594	11	True				
ANR	1273144	Statement	value	184:60:5224:5228	1272594	12	True				
ANR	1273145	Statement	)	184:65:5229:5229	1272594	13	True				
ANR	1273146	ExpressionStatement		184:66:5230:5230	1272594	14	True				
ANR	1273147	ElseStatement	else		1272594	0					
ANR	1273148	CompoundStatement		103:10:2492:2492	1272594	0					
ANR	1273149	ExpressionStatement	"value = r_reg_get_value_big ( dbg -> reg , item , & valueBig )"	188:4:5261:5316	1272594	0	True				
ANR	1273150	AssignmentExpression	"value = r_reg_get_value_big ( dbg -> reg , item , & valueBig )"		1272594	0		=			
ANR	1273151	Identifier	value		1272594	0					
ANR	1273152	CallExpression	"r_reg_get_value_big ( dbg -> reg , item , & valueBig )"		1272594	1					
ANR	1273153	Callee	r_reg_get_value_big		1272594	0					
ANR	1273154	Identifier	r_reg_get_value_big		1272594	0					
ANR	1273155	ArgumentList	dbg -> reg		1272594	1					
ANR	1273156	Argument	dbg -> reg		1272594	0					
ANR	1273157	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1273158	Identifier	dbg		1272594	0					
ANR	1273159	Identifier	reg		1272594	1					
ANR	1273160	Argument	item		1272594	1					
ANR	1273161	Identifier	item		1272594	0					
ANR	1273162	Argument	& valueBig		1272594	2					
ANR	1273163	UnaryOperationExpression	& valueBig		1272594	0					
ANR	1273164	UnaryOperator	&		1272594	0					
ANR	1273165	Identifier	valueBig		1272594	1					
ANR	1273166	SwitchStatement	switch ( regSize )		1272594	1					
ANR	1273167	Condition	regSize	189:12:5330:5336	1272594	0	True				
ANR	1273168	Identifier	regSize		1272594	0					
ANR	1273169	CompoundStatement		105:21:2576:2576	1272594	1					
ANR	1273170	Label	case 80 :	190:4:5345:5352	1272594	0	True				
ANR	1273171	Statement	snprintf	191:5:5359:5366	1272594	1	True				
ANR	1273172	Statement	(	191:14:5368:5368	1272594	2	True				
ANR	1273173	Statement	strvalue	191:15:5369:5376	1272594	3	True				
ANR	1273174	Statement	","	191:23:5377:5377	1272594	4	True				
ANR	1273175	Statement	sizeof	191:25:5379:5384	1272594	5	True				
ANR	1273176	Statement	(	191:32:5386:5386	1272594	6	True				
ANR	1273177	Statement	strvalue	191:33:5387:5394	1272594	7	True				
ANR	1273178	Statement	)	191:41:5395:5395	1272594	8	True				
ANR	1273179	Statement	","	191:42:5396:5396	1272594	9	True				
ANR	1273180	Statement	"""0x%04x%016"""	191:44:5398:5409	1272594	10	True				
ANR	1273181	Statement	PFMT64x	191:56:5410:5416	1272594	11	True				
ANR	1273182	Statement	""""""	191:63:5417:5418	1272594	12	True				
ANR	1273183	Statement	","	191:65:5419:5419	1272594	13	True				
ANR	1273184	Statement	valueBig	191:67:5421:5428	1272594	14	True				
ANR	1273185	Statement	.	191:75:5429:5429	1272594	15	True				
ANR	1273186	Statement	v80	191:76:5430:5432	1272594	16	True				
ANR	1273187	Statement	.	191:79:5433:5433	1272594	17	True				
ANR	1273188	Statement	High	191:80:5434:5437	1272594	18	True				
ANR	1273189	Statement	","	191:84:5438:5438	1272594	19	True				
ANR	1273190	Statement	valueBig	191:86:5440:5447	1272594	20	True				
ANR	1273191	Statement	.	191:94:5448:5448	1272594	21	True				
ANR	1273192	Statement	v80	191:95:5449:5451	1272594	22	True				
ANR	1273193	Statement	.	191:98:5452:5452	1272594	23	True				
ANR	1273194	Statement	Low	191:99:5453:5455	1272594	24	True				
ANR	1273195	Statement	)	191:102:5456:5456	1272594	25	True				
ANR	1273196	ExpressionStatement		191:103:5457:5457	1272594	26	True				
ANR	1273197	BreakStatement	break ;	192:5:5464:5469	1272594	27	True				
ANR	1273198	Label	case 96 :	193:4:5475:5482	1272594	28	True				
ANR	1273199	Statement	snprintf	194:5:5489:5496	1272594	29	True				
ANR	1273200	Statement	(	194:14:5498:5498	1272594	30	True				
ANR	1273201	Statement	strvalue	194:15:5499:5506	1272594	31	True				
ANR	1273202	Statement	","	194:23:5507:5507	1272594	32	True				
ANR	1273203	Statement	sizeof	194:25:5509:5514	1272594	33	True				
ANR	1273204	Statement	(	194:32:5516:5516	1272594	34	True				
ANR	1273205	Statement	strvalue	194:33:5517:5524	1272594	35	True				
ANR	1273206	Statement	)	194:41:5525:5525	1272594	36	True				
ANR	1273207	Statement	","	194:42:5526:5526	1272594	37	True				
ANR	1273208	Statement	"""0x%08x%016"""	194:44:5528:5539	1272594	38	True				
ANR	1273209	Statement	PFMT64x	194:56:5540:5546	1272594	39	True				
ANR	1273210	Statement	""""""	194:63:5547:5548	1272594	40	True				
ANR	1273211	Statement	","	194:65:5549:5549	1272594	41	True				
ANR	1273212	Statement	valueBig	194:67:5551:5558	1272594	42	True				
ANR	1273213	Statement	.	194:75:5559:5559	1272594	43	True				
ANR	1273214	Statement	v96	194:76:5560:5562	1272594	44	True				
ANR	1273215	Statement	.	194:79:5563:5563	1272594	45	True				
ANR	1273216	Statement	High	194:80:5564:5567	1272594	46	True				
ANR	1273217	Statement	","	194:84:5568:5568	1272594	47	True				
ANR	1273218	Statement	valueBig	194:86:5570:5577	1272594	48	True				
ANR	1273219	Statement	.	194:94:5578:5578	1272594	49	True				
ANR	1273220	Statement	v96	194:95:5579:5581	1272594	50	True				
ANR	1273221	Statement	.	194:98:5582:5582	1272594	51	True				
ANR	1273222	Statement	Low	194:99:5583:5585	1272594	52	True				
ANR	1273223	Statement	)	194:102:5586:5586	1272594	53	True				
ANR	1273224	ExpressionStatement		194:103:5587:5587	1272594	54	True				
ANR	1273225	BreakStatement	break ;	195:5:5594:5599	1272594	55	True				
ANR	1273226	Label	case 128 :	196:4:5605:5613	1272594	56	True				
ANR	1273227	Statement	snprintf	197:5:5620:5627	1272594	57	True				
ANR	1273228	Statement	(	197:14:5629:5629	1272594	58	True				
ANR	1273229	Statement	strvalue	197:15:5630:5637	1272594	59	True				
ANR	1273230	Statement	","	197:23:5638:5638	1272594	60	True				
ANR	1273231	Statement	sizeof	197:25:5640:5645	1272594	61	True				
ANR	1273232	Statement	(	197:32:5647:5647	1272594	62	True				
ANR	1273233	Statement	strvalue	197:33:5648:5655	1272594	63	True				
ANR	1273234	Statement	)	197:41:5656:5656	1272594	64	True				
ANR	1273235	Statement	","	197:42:5657:5657	1272594	65	True				
ANR	1273236	Statement	"""0x%016"""	197:44:5659:5666	1272594	66	True				
ANR	1273237	Statement	PFMT64x	197:52:5667:5673	1272594	67	True				
ANR	1273238	Statement	"""%016"""	197:59:5674:5679	1272594	68	True				
ANR	1273239	Statement	PFMT64x	197:65:5680:5686	1272594	69	True				
ANR	1273240	Statement	""""""	197:72:5687:5688	1272594	70	True				
ANR	1273241	Statement	","	197:74:5689:5689	1272594	71	True				
ANR	1273242	Statement	valueBig	197:76:5691:5698	1272594	72	True				
ANR	1273243	Statement	.	197:84:5699:5699	1272594	73	True				
ANR	1273244	Statement	v128	197:85:5700:5703	1272594	74	True				
ANR	1273245	Statement	.	197:89:5704:5704	1272594	75	True				
ANR	1273246	Statement	High	197:90:5705:5708	1272594	76	True				
ANR	1273247	Statement	","	197:94:5709:5709	1272594	77	True				
ANR	1273248	Statement	valueBig	197:96:5711:5718	1272594	78	True				
ANR	1273249	Statement	.	197:104:5719:5719	1272594	79	True				
ANR	1273250	Statement	v128	197:105:5720:5723	1272594	80	True				
ANR	1273251	Statement	.	197:109:5724:5724	1272594	81	True				
ANR	1273252	Statement	Low	197:110:5725:5727	1272594	82	True				
ANR	1273253	Statement	)	197:113:5728:5728	1272594	83	True				
ANR	1273254	ExpressionStatement		197:114:5729:5729	1272594	84	True				
ANR	1273255	BreakStatement	break ;	198:5:5736:5741	1272594	85	True				
ANR	1273256	Label	default :	199:4:5747:5754	1272594	86	True				
ANR	1273257	Identifier	default		1272594	0					
ANR	1273258	ExpressionStatement	"snprintf ( strvalue , sizeof ( strvalue ) , ""ERROR"" )"	200:5:5761:5808	1272594	87	True				
ANR	1273259	CallExpression	"snprintf ( strvalue , sizeof ( strvalue ) , ""ERROR"" )"		1272594	0					
ANR	1273260	Callee	snprintf		1272594	0					
ANR	1273261	Identifier	snprintf		1272594	0					
ANR	1273262	ArgumentList	strvalue		1272594	1					
ANR	1273263	Argument	strvalue		1272594	0					
ANR	1273264	Identifier	strvalue		1272594	0					
ANR	1273265	Argument	sizeof ( strvalue )		1272594	1					
ANR	1273266	SizeofExpression	sizeof ( strvalue )		1272594	0					
ANR	1273267	Sizeof	sizeof		1272594	0					
ANR	1273268	SizeofOperand	strvalue		1272594	1					
ANR	1273269	Argument	"""ERROR"""		1272594	2					
ANR	1273270	PrimaryExpression	"""ERROR"""		1272594	0					
ANR	1273271	ExpressionStatement	delta = 0	202:4:5820:5829	1272594	2	True				
ANR	1273272	AssignmentExpression	delta = 0		1272594	0		=			
ANR	1273273	Identifier	delta		1272594	0					
ANR	1273274	PrimaryExpression	0		1272594	1					
ANR	1273275	ExpressionStatement	itmidx ++	204:3:5881:5889	1272594	6	True				
ANR	1273276	PostIncDecOperationExpression	itmidx ++		1272594	0					
ANR	1273277	Identifier	itmidx		1272594	0					
ANR	1273278	IncDec	++		1272594	1					
ANR	1273279	SwitchStatement	switch ( rad )		1272594	7					
ANR	1273280	Condition	rad	206:11:5903:5905	1272594	0	True				
ANR	1273281	Identifier	rad		1272594	0					
ANR	1273282	CompoundStatement		122:16:3145:3145	1272594	1					
ANR	1273283	Label	case 'J' :	207:3:5913:5921	1272594	0	True				
ANR	1273284	Label	case 'j' :	208:3:5926:5934	1272594	1	True				
ANR	1273285	ExpressionStatement	"dbg -> cb_printf ( ""%s\\""%s\\"":%s"" , n ? "","" : """" , item -> name , strvalue )"	209:4:5940:6007	1272594	2	True				
ANR	1273286	CallExpression	"dbg -> cb_printf ( ""%s\\""%s\\"":%s"" , n ? "","" : """" , item -> name , strvalue )"		1272594	0					
ANR	1273287	Callee	dbg -> cb_printf		1272594	0					
ANR	1273288	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273289	Identifier	dbg		1272594	0					
ANR	1273290	Identifier	cb_printf		1272594	1					
ANR	1273291	ArgumentList	"""%s\\""%s\\"":%s"""		1272594	1					
ANR	1273292	Argument	"""%s\\""%s\\"":%s"""		1272594	0					
ANR	1273293	PrimaryExpression	"""%s\\""%s\\"":%s"""		1272594	0					
ANR	1273294	Argument	"n ? "","" : """""		1272594	1					
ANR	1273295	ConditionalExpression	"n ? "","" : """""		1272594	0					
ANR	1273296	Condition	n		1272594	0					
ANR	1273297	Identifier	n		1272594	0					
ANR	1273298	PrimaryExpression	""","""		1272594	1					
ANR	1273299	PrimaryExpression	""""""		1272594	2					
ANR	1273300	Argument	item -> name		1272594	2					
ANR	1273301	PtrMemberAccess	item -> name		1272594	0					
ANR	1273302	Identifier	item		1272594	0					
ANR	1273303	Identifier	name		1272594	1					
ANR	1273304	Argument	strvalue		1272594	3					
ANR	1273305	Identifier	strvalue		1272594	0					
ANR	1273306	BreakStatement	break ;	211:4:6013:6018	1272594	3	True				
ANR	1273307	Label	case '-' :	212:3:6023:6031	1272594	4	True				
ANR	1273308	ExpressionStatement	"dbg -> cb_printf ( ""f-%s\\n"" , item -> name )"	213:4:6037:6074	1272594	5	True				
ANR	1273309	CallExpression	"dbg -> cb_printf ( ""f-%s\\n"" , item -> name )"		1272594	0					
ANR	1273310	Callee	dbg -> cb_printf		1272594	0					
ANR	1273311	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273312	Identifier	dbg		1272594	0					
ANR	1273313	Identifier	cb_printf		1272594	1					
ANR	1273314	ArgumentList	"""f-%s\\n"""		1272594	1					
ANR	1273315	Argument	"""f-%s\\n"""		1272594	0					
ANR	1273316	PrimaryExpression	"""f-%s\\n"""		1272594	0					
ANR	1273317	Argument	item -> name		1272594	1					
ANR	1273318	PtrMemberAccess	item -> name		1272594	0					
ANR	1273319	Identifier	item		1272594	0					
ANR	1273320	Identifier	name		1272594	1					
ANR	1273321	BreakStatement	break ;	214:4:6080:6085	1272594	6	True				
ANR	1273322	Label	case 'R' :	215:3:6090:6098	1272594	7	True				
ANR	1273323	ExpressionStatement	"dbg -> cb_printf ( ""aer %s = %s\\n"" , item -> name , strvalue )"	216:4:6104:6158	1272594	8	True				
ANR	1273324	CallExpression	"dbg -> cb_printf ( ""aer %s = %s\\n"" , item -> name , strvalue )"		1272594	0					
ANR	1273325	Callee	dbg -> cb_printf		1272594	0					
ANR	1273326	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273327	Identifier	dbg		1272594	0					
ANR	1273328	Identifier	cb_printf		1272594	1					
ANR	1273329	ArgumentList	"""aer %s = %s\\n"""		1272594	1					
ANR	1273330	Argument	"""aer %s = %s\\n"""		1272594	0					
ANR	1273331	PrimaryExpression	"""aer %s = %s\\n"""		1272594	0					
ANR	1273332	Argument	item -> name		1272594	1					
ANR	1273333	PtrMemberAccess	item -> name		1272594	0					
ANR	1273334	Identifier	item		1272594	0					
ANR	1273335	Identifier	name		1272594	1					
ANR	1273336	Argument	strvalue		1272594	2					
ANR	1273337	Identifier	strvalue		1272594	0					
ANR	1273338	BreakStatement	break ;	217:4:6164:6169	1272594	9	True				
ANR	1273339	Label	case 1 :	218:3:6174:6180	1272594	10	True				
ANR	1273340	Label	case '*' :	219:3:6185:6193	1272594	11	True				
ANR	1273341	ExpressionStatement	"dbg -> cb_printf ( ""f %s %d %s\\n"" , item -> name , item -> size / 8 , strvalue )"	220:4:6199:6268	1272594	12	True				
ANR	1273342	CallExpression	"dbg -> cb_printf ( ""f %s %d %s\\n"" , item -> name , item -> size / 8 , strvalue )"		1272594	0					
ANR	1273343	Callee	dbg -> cb_printf		1272594	0					
ANR	1273344	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273345	Identifier	dbg		1272594	0					
ANR	1273346	Identifier	cb_printf		1272594	1					
ANR	1273347	ArgumentList	"""f %s %d %s\\n"""		1272594	1					
ANR	1273348	Argument	"""f %s %d %s\\n"""		1272594	0					
ANR	1273349	PrimaryExpression	"""f %s %d %s\\n"""		1272594	0					
ANR	1273350	Argument	item -> name		1272594	1					
ANR	1273351	PtrMemberAccess	item -> name		1272594	0					
ANR	1273352	Identifier	item		1272594	0					
ANR	1273353	Identifier	name		1272594	1					
ANR	1273354	Argument	item -> size / 8		1272594	2					
ANR	1273355	MultiplicativeExpression	item -> size / 8		1272594	0		/			
ANR	1273356	PtrMemberAccess	item -> size		1272594	0					
ANR	1273357	Identifier	item		1272594	0					
ANR	1273358	Identifier	size		1272594	1					
ANR	1273359	PrimaryExpression	8		1272594	1					
ANR	1273360	Argument	strvalue		1272594	3					
ANR	1273361	Identifier	strvalue		1272594	0					
ANR	1273362	BreakStatement	break ;	221:4:6274:6279	1272594	13	True				
ANR	1273363	Label	case '.' :	222:3:6284:6292	1272594	14	True				
ANR	1273364	ExpressionStatement	"dbg -> cb_printf ( ""dr %s=%s\\n"" , item -> name , strvalue )"	223:4:6298:6349	1272594	15	True				
ANR	1273365	CallExpression	"dbg -> cb_printf ( ""dr %s=%s\\n"" , item -> name , strvalue )"		1272594	0					
ANR	1273366	Callee	dbg -> cb_printf		1272594	0					
ANR	1273367	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273368	Identifier	dbg		1272594	0					
ANR	1273369	Identifier	cb_printf		1272594	1					
ANR	1273370	ArgumentList	"""dr %s=%s\\n"""		1272594	1					
ANR	1273371	Argument	"""dr %s=%s\\n"""		1272594	0					
ANR	1273372	PrimaryExpression	"""dr %s=%s\\n"""		1272594	0					
ANR	1273373	Argument	item -> name		1272594	1					
ANR	1273374	PtrMemberAccess	item -> name		1272594	0					
ANR	1273375	Identifier	item		1272594	0					
ANR	1273376	Identifier	name		1272594	1					
ANR	1273377	Argument	strvalue		1272594	2					
ANR	1273378	Identifier	strvalue		1272594	0					
ANR	1273379	BreakStatement	break ;	224:4:6355:6360	1272594	16	True				
ANR	1273380	Label	case 'd' :	225:3:6365:6373	1272594	17	True				
ANR	1273381	Label	case 2 :	226:3:6378:6384	1272594	18	True				
ANR	1273382	CompoundStatement		146:5:3759:3786	1272594	19					
ANR	1273383	IdentifierDeclStatement	"int len , highlight = use_color && pr && pr -> cur_enabled && itmidx == pr -> cur ;"	228:5:6397:6473	1272594	0	True				
ANR	1273384	IdentifierDecl	len		1272594	0					
ANR	1273385	IdentifierDeclType	int		1272594	0					
ANR	1273386	Identifier	len		1272594	1					
ANR	1273387	IdentifierDecl	highlight = use_color && pr && pr -> cur_enabled && itmidx == pr -> cur		1272594	1					
ANR	1273388	IdentifierDeclType	int		1272594	0					
ANR	1273389	Identifier	highlight		1272594	1					
ANR	1273390	AssignmentExpression	highlight = use_color && pr && pr -> cur_enabled && itmidx == pr -> cur		1272594	2		=			
ANR	1273391	Identifier	highlight		1272594	0					
ANR	1273392	AndExpression	use_color && pr && pr -> cur_enabled && itmidx == pr -> cur		1272594	1		&&			
ANR	1273393	Identifier	use_color		1272594	0					
ANR	1273394	AndExpression	pr && pr -> cur_enabled && itmidx == pr -> cur		1272594	1		&&			
ANR	1273395	Identifier	pr		1272594	0					
ANR	1273396	AndExpression	pr -> cur_enabled && itmidx == pr -> cur		1272594	1		&&			
ANR	1273397	PtrMemberAccess	pr -> cur_enabled		1272594	0					
ANR	1273398	Identifier	pr		1272594	0					
ANR	1273399	Identifier	cur_enabled		1272594	1					
ANR	1273400	EqualityExpression	itmidx == pr -> cur		1272594	1		==			
ANR	1273401	Identifier	itmidx		1272594	0					
ANR	1273402	PtrMemberAccess	pr -> cur		1272594	1					
ANR	1273403	Identifier	pr		1272594	0					
ANR	1273404	Identifier	cur		1272594	1					
ANR	1273405	IdentifierDeclStatement	"char * str , whites [ 32 ] , content [ 300 ] ;"	229:5:6480:6515	1272594	1	True				
ANR	1273406	IdentifierDecl	* str		1272594	0					
ANR	1273407	IdentifierDeclType	char *		1272594	0					
ANR	1273408	Identifier	str		1272594	1					
ANR	1273409	IdentifierDecl	whites [ 32 ]		1272594	1					
ANR	1273410	IdentifierDeclType	char [ 32 ]		1272594	0					
ANR	1273411	Identifier	whites		1272594	1					
ANR	1273412	PrimaryExpression	32		1272594	2					
ANR	1273413	IdentifierDecl	content [ 300 ]		1272594	2					
ANR	1273414	IdentifierDeclType	char [ 300 ]		1272594	0					
ANR	1273415	Identifier	content		1272594	1					
ANR	1273416	PrimaryExpression	300		1272594	2					
ANR	1273417	IdentifierDeclStatement	"const char * a = """" , * b = """" ;"	230:5:6522:6549	1272594	2	True				
ANR	1273418	IdentifierDecl	"* a = """""		1272594	0					
ANR	1273419	IdentifierDeclType	const char *		1272594	0					
ANR	1273420	Identifier	a		1272594	1					
ANR	1273421	AssignmentExpression	"* a = """""		1272594	2		=			
ANR	1273422	Identifier	a		1272594	0					
ANR	1273423	PrimaryExpression	""""""		1272594	1					
ANR	1273424	IdentifierDecl	"* b = """""		1272594	1					
ANR	1273425	IdentifierDeclType	const char *		1272594	0					
ANR	1273426	Identifier	b		1272594	1					
ANR	1273427	AssignmentExpression	"* b = """""		1272594	2		=			
ANR	1273428	Identifier	b		1272594	0					
ANR	1273429	PrimaryExpression	""""""		1272594	1					
ANR	1273430	IfStatement	if ( highlight )		1272594	3					
ANR	1273431	Condition	highlight	231:9:6560:6568	1272594	0	True				
ANR	1273432	Identifier	highlight		1272594	0					
ANR	1273433	CompoundStatement		147:20:3808:3808	1272594	1					
ANR	1273434	ExpressionStatement	a = Color_INVERT	232:6:6579:6595	1272594	0	True				
ANR	1273435	AssignmentExpression	a = Color_INVERT		1272594	0		=			
ANR	1273436	Identifier	a		1272594	0					
ANR	1273437	Identifier	Color_INVERT		1272594	1					
ANR	1273438	ExpressionStatement	b = Color_INVERT_RESET	233:6:6603:6625	1272594	1	True				
ANR	1273439	AssignmentExpression	b = Color_INVERT_RESET		1272594	0		=			
ANR	1273440	Identifier	b		1272594	0					
ANR	1273441	Identifier	Color_INVERT_RESET		1272594	1					
ANR	1273442	ExpressionStatement	dbg -> creg = item -> name	234:6:6633:6655	1272594	2	True				
ANR	1273443	AssignmentExpression	dbg -> creg = item -> name		1272594	0		=			
ANR	1273444	PtrMemberAccess	dbg -> creg		1272594	0					
ANR	1273445	Identifier	dbg		1272594	0					
ANR	1273446	Identifier	creg		1272594	1					
ANR	1273447	PtrMemberAccess	item -> name		1272594	1					
ANR	1273448	Identifier	item		1272594	0					
ANR	1273449	Identifier	name		1272594	1					
ANR	1273450	ExpressionStatement	"strcpy ( whites , kwhites )"	236:5:6669:6693	1272594	4	True				
ANR	1273451	CallExpression	"strcpy ( whites , kwhites )"		1272594	0					
ANR	1273452	Callee	strcpy		1272594	0					
ANR	1273453	Identifier	strcpy		1272594	0					
ANR	1273454	ArgumentList	whites		1272594	1					
ANR	1273455	Argument	whites		1272594	0					
ANR	1273456	Identifier	whites		1272594	0					
ANR	1273457	Argument	kwhites		1272594	1					
ANR	1273458	Identifier	kwhites		1272594	0					
ANR	1273459	IfStatement	if ( delta && use_color )		1272594	5					
ANR	1273460	Condition	delta && use_color	237:9:6704:6721	1272594	0	True				
ANR	1273461	AndExpression	delta && use_color		1272594	0		&&			
ANR	1273462	Identifier	delta		1272594	0					
ANR	1273463	Identifier	use_color		1272594	1					
ANR	1273464	CompoundStatement		153:29:3961:3961	1272594	1					
ANR	1273465	ExpressionStatement	"dbg -> cb_printf ( ""%s"" , use_color )"	238:6:6732:6764	1272594	0	True				
ANR	1273466	CallExpression	"dbg -> cb_printf ( ""%s"" , use_color )"		1272594	0					
ANR	1273467	Callee	dbg -> cb_printf		1272594	0					
ANR	1273468	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273469	Identifier	dbg		1272594	0					
ANR	1273470	Identifier	cb_printf		1272594	1					
ANR	1273471	ArgumentList	"""%s"""		1272594	1					
ANR	1273472	Argument	"""%s"""		1272594	0					
ANR	1273473	PrimaryExpression	"""%s"""		1272594	0					
ANR	1273474	Argument	use_color		1272594	1					
ANR	1273475	Identifier	use_color		1272594	0					
ANR	1273476	IfStatement	if ( item -> flags )		1272594	6					
ANR	1273477	Condition	item -> flags	240:9:6782:6792	1272594	0	True				
ANR	1273478	PtrMemberAccess	item -> flags		1272594	0					
ANR	1273479	Identifier	item		1272594	0					
ANR	1273480	Identifier	flags		1272594	1					
ANR	1273481	CompoundStatement		156:22:4032:4032	1272594	1					
ANR	1273482	ExpressionStatement	"str = r_reg_get_bvalue ( dbg -> reg , item )"	241:6:6803:6842	1272594	0	True				
ANR	1273483	AssignmentExpression	"str = r_reg_get_bvalue ( dbg -> reg , item )"		1272594	0		=			
ANR	1273484	Identifier	str		1272594	0					
ANR	1273485	CallExpression	"r_reg_get_bvalue ( dbg -> reg , item )"		1272594	1					
ANR	1273486	Callee	r_reg_get_bvalue		1272594	0					
ANR	1273487	Identifier	r_reg_get_bvalue		1272594	0					
ANR	1273488	ArgumentList	dbg -> reg		1272594	1					
ANR	1273489	Argument	dbg -> reg		1272594	0					
ANR	1273490	PtrMemberAccess	dbg -> reg		1272594	0					
ANR	1273491	Identifier	dbg		1272594	0					
ANR	1273492	Identifier	reg		1272594	1					
ANR	1273493	Argument	item		1272594	1					
ANR	1273494	Identifier	item		1272594	0					
ANR	1273495	ExpressionStatement	len = 12 - strlen ( str )	242:6:6850:6873	1272594	1	True				
ANR	1273496	AssignmentExpression	len = 12 - strlen ( str )		1272594	0		=			
ANR	1273497	Identifier	len		1272594	0					
ANR	1273498	AdditiveExpression	12 - strlen ( str )		1272594	1		-			
ANR	1273499	PrimaryExpression	12		1272594	0					
ANR	1273500	CallExpression	strlen ( str )		1272594	1					
ANR	1273501	Callee	strlen		1272594	0					
ANR	1273502	Identifier	strlen		1272594	0					
ANR	1273503	ArgumentList	str		1272594	1					
ANR	1273504	Argument	str		1272594	0					
ANR	1273505	Identifier	str		1272594	0					
ANR	1273506	ExpressionStatement	"memset ( whites , ' ' , sizeof ( whites ) )"	243:6:6881:6918	1272594	2	True				
ANR	1273507	CallExpression	"memset ( whites , ' ' , sizeof ( whites ) )"		1272594	0					
ANR	1273508	Callee	memset		1272594	0					
ANR	1273509	Identifier	memset		1272594	0					
ANR	1273510	ArgumentList	whites		1272594	1					
ANR	1273511	Argument	whites		1272594	0					
ANR	1273512	Identifier	whites		1272594	0					
ANR	1273513	Argument	' '		1272594	1					
ANR	1273514	PrimaryExpression	' '		1272594	0					
ANR	1273515	Argument	sizeof ( whites )		1272594	2					
ANR	1273516	SizeofExpression	sizeof ( whites )		1272594	0					
ANR	1273517	Sizeof	sizeof		1272594	0					
ANR	1273518	SizeofOperand	whites		1272594	1					
ANR	1273519	ExpressionStatement	whites [ len ] = 0	244:6:6926:6941	1272594	3	True				
ANR	1273520	AssignmentExpression	whites [ len ] = 0		1272594	0		=			
ANR	1273521	ArrayIndexing	whites [ len ]		1272594	0					
ANR	1273522	Identifier	whites		1272594	0					
ANR	1273523	Identifier	len		1272594	1					
ANR	1273524	PrimaryExpression	0		1272594	1					
ANR	1273525	ExpressionStatement	"dbg -> cb_printf ( "" %s%s%s %s%s"" , a , item -> name , b , str , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"	245:6:6949:7038	1272594	4	True				
ANR	1273526	CallExpression	"dbg -> cb_printf ( "" %s%s%s %s%s"" , a , item -> name , b , str , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"		1272594	0					
ANR	1273527	Callee	dbg -> cb_printf		1272594	0					
ANR	1273528	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273529	Identifier	dbg		1272594	0					
ANR	1273530	Identifier	cb_printf		1272594	1					
ANR	1273531	ArgumentList	""" %s%s%s %s%s"""		1272594	1					
ANR	1273532	Argument	""" %s%s%s %s%s"""		1272594	0					
ANR	1273533	PrimaryExpression	""" %s%s%s %s%s"""		1272594	0					
ANR	1273534	Argument	a		1272594	1					
ANR	1273535	Identifier	a		1272594	0					
ANR	1273536	Argument	item -> name		1272594	2					
ANR	1273537	PtrMemberAccess	item -> name		1272594	0					
ANR	1273538	Identifier	item		1272594	0					
ANR	1273539	Identifier	name		1272594	1					
ANR	1273540	Argument	b		1272594	3					
ANR	1273541	Identifier	b		1272594	0					
ANR	1273542	Argument	str		1272594	4					
ANR	1273543	Identifier	str		1272594	0					
ANR	1273544	Argument	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		1272594	5					
ANR	1273545	ConditionalExpression	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		1272594	0					
ANR	1273546	Condition	( n + 1 ) % cols		1272594	0					
ANR	1273547	MultiplicativeExpression	( n + 1 ) % cols		1272594	0		%			
ANR	1273548	AdditiveExpression	n + 1		1272594	0		+			
ANR	1273549	Identifier	n		1272594	0					
ANR	1273550	PrimaryExpression	1		1272594	1					
ANR	1273551	Identifier	cols		1272594	1					
ANR	1273552	Identifier	whites		1272594	1					
ANR	1273553	PrimaryExpression	"""\\n"""		1272594	2					
ANR	1273554	ExpressionStatement	free ( str )	247:6:7046:7056	1272594	5	True				
ANR	1273555	CallExpression	free ( str )		1272594	0					
ANR	1273556	Callee	free		1272594	0					
ANR	1273557	Identifier	free		1272594	0					
ANR	1273558	ArgumentList	str		1272594	1					
ANR	1273559	Argument	str		1272594	0					
ANR	1273560	Identifier	str		1272594	0					
ANR	1273561	ElseStatement	else		1272594	0					
ANR	1273562	CompoundStatement		164:12:4307:4307	1272594	0					
ANR	1273563	ExpressionStatement	"snprintf ( content , sizeof ( content ) , fmt2 , """" , item -> name , """" , strvalue , """" )"	249:6:7078:7161	1272594	0	True				
ANR	1273564	CallExpression	"snprintf ( content , sizeof ( content ) , fmt2 , """" , item -> name , """" , strvalue , """" )"		1272594	0					
ANR	1273565	Callee	snprintf		1272594	0					
ANR	1273566	Identifier	snprintf		1272594	0					
ANR	1273567	ArgumentList	content		1272594	1					
ANR	1273568	Argument	content		1272594	0					
ANR	1273569	Identifier	content		1272594	0					
ANR	1273570	Argument	sizeof ( content )		1272594	1					
ANR	1273571	SizeofExpression	sizeof ( content )		1272594	0					
ANR	1273572	Sizeof	sizeof		1272594	0					
ANR	1273573	SizeofOperand	content		1272594	1					
ANR	1273574	Argument	fmt2		1272594	2					
ANR	1273575	Identifier	fmt2		1272594	0					
ANR	1273576	Argument	""""""		1272594	3					
ANR	1273577	PrimaryExpression	""""""		1272594	0					
ANR	1273578	Argument	item -> name		1272594	4					
ANR	1273579	PtrMemberAccess	item -> name		1272594	0					
ANR	1273580	Identifier	item		1272594	0					
ANR	1273581	Identifier	name		1272594	1					
ANR	1273582	Argument	""""""		1272594	5					
ANR	1273583	PrimaryExpression	""""""		1272594	0					
ANR	1273584	Argument	strvalue		1272594	6					
ANR	1273585	Identifier	strvalue		1272594	0					
ANR	1273586	Argument	""""""		1272594	7					
ANR	1273587	PrimaryExpression	""""""		1272594	0					
ANR	1273588	ExpressionStatement	len = colwidth - strlen ( content )	251:6:7169:7202	1272594	1	True				
ANR	1273589	AssignmentExpression	len = colwidth - strlen ( content )		1272594	0		=			
ANR	1273590	Identifier	len		1272594	0					
ANR	1273591	AdditiveExpression	colwidth - strlen ( content )		1272594	1		-			
ANR	1273592	Identifier	colwidth		1272594	0					
ANR	1273593	CallExpression	strlen ( content )		1272594	1					
ANR	1273594	Callee	strlen		1272594	0					
ANR	1273595	Identifier	strlen		1272594	0					
ANR	1273596	ArgumentList	content		1272594	1					
ANR	1273597	Argument	content		1272594	0					
ANR	1273598	Identifier	content		1272594	0					
ANR	1273599	IfStatement	if ( len < 0 )		1272594	2					
ANR	1273600	Condition	len < 0	252:10:7214:7220	1272594	0	True				
ANR	1273601	RelationalExpression	len < 0		1272594	0		<			
ANR	1273602	Identifier	len		1272594	0					
ANR	1273603	PrimaryExpression	0		1272594	1					
ANR	1273604	CompoundStatement		168:19:4460:4460	1272594	1					
ANR	1273605	ExpressionStatement	len = 0	253:7:7232:7239	1272594	0	True				
ANR	1273606	AssignmentExpression	len = 0		1272594	0		=			
ANR	1273607	Identifier	len		1272594	0					
ANR	1273608	PrimaryExpression	0		1272594	1					
ANR	1273609	ExpressionStatement	"memset ( whites , ' ' , sizeof ( whites ) )"	255:6:7255:7292	1272594	3	True				
ANR	1273610	CallExpression	"memset ( whites , ' ' , sizeof ( whites ) )"		1272594	0					
ANR	1273611	Callee	memset		1272594	0					
ANR	1273612	Identifier	memset		1272594	0					
ANR	1273613	ArgumentList	whites		1272594	1					
ANR	1273614	Argument	whites		1272594	0					
ANR	1273615	Identifier	whites		1272594	0					
ANR	1273616	Argument	' '		1272594	1					
ANR	1273617	PrimaryExpression	' '		1272594	0					
ANR	1273618	Argument	sizeof ( whites )		1272594	2					
ANR	1273619	SizeofExpression	sizeof ( whites )		1272594	0					
ANR	1273620	Sizeof	sizeof		1272594	0					
ANR	1273621	SizeofOperand	whites		1272594	1					
ANR	1273622	ExpressionStatement	whites [ len ] = 0	256:6:7300:7315	1272594	4	True				
ANR	1273623	AssignmentExpression	whites [ len ] = 0		1272594	0		=			
ANR	1273624	ArrayIndexing	whites [ len ]		1272594	0					
ANR	1273625	Identifier	whites		1272594	0					
ANR	1273626	Identifier	len		1272594	1					
ANR	1273627	PrimaryExpression	0		1272594	1					
ANR	1273628	ExpressionStatement	"dbg -> cb_printf ( fmt2 , a , item -> name , b , strvalue , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"	257:6:7323:7407	1272594	5	True				
ANR	1273629	CallExpression	"dbg -> cb_printf ( fmt2 , a , item -> name , b , strvalue , ( ( n + 1 ) % cols ) ? whites : ""\\n"" )"		1272594	0					
ANR	1273630	Callee	dbg -> cb_printf		1272594	0					
ANR	1273631	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273632	Identifier	dbg		1272594	0					
ANR	1273633	Identifier	cb_printf		1272594	1					
ANR	1273634	ArgumentList	fmt2		1272594	1					
ANR	1273635	Argument	fmt2		1272594	0					
ANR	1273636	Identifier	fmt2		1272594	0					
ANR	1273637	Argument	a		1272594	1					
ANR	1273638	Identifier	a		1272594	0					
ANR	1273639	Argument	item -> name		1272594	2					
ANR	1273640	PtrMemberAccess	item -> name		1272594	0					
ANR	1273641	Identifier	item		1272594	0					
ANR	1273642	Identifier	name		1272594	1					
ANR	1273643	Argument	b		1272594	3					
ANR	1273644	Identifier	b		1272594	0					
ANR	1273645	Argument	strvalue		1272594	4					
ANR	1273646	Identifier	strvalue		1272594	0					
ANR	1273647	Argument	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		1272594	5					
ANR	1273648	ConditionalExpression	"( ( n + 1 ) % cols ) ? whites : ""\\n"""		1272594	0					
ANR	1273649	Condition	( n + 1 ) % cols		1272594	0					
ANR	1273650	MultiplicativeExpression	( n + 1 ) % cols		1272594	0		%			
ANR	1273651	AdditiveExpression	n + 1		1272594	0		+			
ANR	1273652	Identifier	n		1272594	0					
ANR	1273653	PrimaryExpression	1		1272594	1					
ANR	1273654	Identifier	cols		1272594	1					
ANR	1273655	Identifier	whites		1272594	1					
ANR	1273656	PrimaryExpression	"""\\n"""		1272594	2					
ANR	1273657	IfStatement	if ( highlight )		1272594	7					
ANR	1273658	Condition	highlight	260:9:7425:7433	1272594	0	True				
ANR	1273659	Identifier	highlight		1272594	0					
ANR	1273660	CompoundStatement		176:20:4673:4673	1272594	1					
ANR	1273661	ExpressionStatement	dbg -> cb_printf ( Color_INVERT_RESET )	261:6:7444:7479	1272594	0	True				
ANR	1273662	CallExpression	dbg -> cb_printf ( Color_INVERT_RESET )		1272594	0					
ANR	1273663	Callee	dbg -> cb_printf		1272594	0					
ANR	1273664	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273665	Identifier	dbg		1272594	0					
ANR	1273666	Identifier	cb_printf		1272594	1					
ANR	1273667	ArgumentList	Color_INVERT_RESET		1272594	1					
ANR	1273668	Argument	Color_INVERT_RESET		1272594	0					
ANR	1273669	Identifier	Color_INVERT_RESET		1272594	0					
ANR	1273670	IfStatement	if ( delta && use_color )		1272594	8					
ANR	1273671	Condition	delta && use_color	263:9:7497:7514	1272594	0	True				
ANR	1273672	AndExpression	delta && use_color		1272594	0		&&			
ANR	1273673	Identifier	delta		1272594	0					
ANR	1273674	Identifier	use_color		1272594	1					
ANR	1273675	CompoundStatement		179:29:4754:4754	1272594	1					
ANR	1273676	ExpressionStatement	dbg -> cb_printf ( Color_RESET )	264:6:7525:7553	1272594	0	True				
ANR	1273677	CallExpression	dbg -> cb_printf ( Color_RESET )		1272594	0					
ANR	1273678	Callee	dbg -> cb_printf		1272594	0					
ANR	1273679	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273680	Identifier	dbg		1272594	0					
ANR	1273681	Identifier	cb_printf		1272594	1					
ANR	1273682	ArgumentList	Color_RESET		1272594	1					
ANR	1273683	Argument	Color_RESET		1272594	0					
ANR	1273684	Identifier	Color_RESET		1272594	0					
ANR	1273685	BreakStatement	break ;	267:4:7572:7577	1272594	20	True				
ANR	1273686	Label	case 3 :	268:3:7582:7588	1272594	21	True				
ANR	1273687	IfStatement	if ( delta )		1272594	22					
ANR	1273688	Condition	delta	269:8:7598:7602	1272594	0	True				
ANR	1273689	Identifier	delta		1272594	0					
ANR	1273690	CompoundStatement		186:5:4849:4863	1272594	1					
ANR	1273691	IdentifierDeclStatement	char woot [ 512 ] ;	270:5:7612:7626	1272594	0	True				
ANR	1273692	IdentifierDecl	woot [ 512 ]		1272594	0					
ANR	1273693	IdentifierDeclType	char [ 512 ]		1272594	0					
ANR	1273694	Identifier	woot		1272594	1					
ANR	1273695	PrimaryExpression	512		1272594	2					
ANR	1273696	Statement	snprintf	271:5:7633:7640	1272594	1	True				
ANR	1273697	Statement	(	271:14:7642:7642	1272594	2	True				
ANR	1273698	Statement	woot	271:15:7643:7646	1272594	3	True				
ANR	1273699	Statement	","	271:19:7647:7647	1272594	4	True				
ANR	1273700	Statement	sizeof	271:21:7649:7654	1272594	5	True				
ANR	1273701	Statement	(	271:28:7656:7656	1272594	6	True				
ANR	1273702	Statement	woot	271:29:7657:7660	1272594	7	True				
ANR	1273703	Statement	)	271:33:7661:7661	1272594	8	True				
ANR	1273704	Statement	","	271:34:7662:7662	1272594	9	True				
ANR	1273705	Statement	""" was 0x%"""	272:6:7670:7679	1272594	10	True				
ANR	1273706	Statement	PFMT64x	272:16:7680:7686	1272594	11	True				
ANR	1273707	Statement	""" delta %d\\n"""	272:23:7687:7699	1272594	12	True				
ANR	1273708	Statement	","	272:36:7700:7700	1272594	13	True				
ANR	1273709	Statement	diff	272:38:7702:7705	1272594	14	True				
ANR	1273710	Statement	","	272:42:7706:7706	1272594	15	True				
ANR	1273711	Statement	delta	272:44:7708:7712	1272594	16	True				
ANR	1273712	Statement	)	272:49:7713:7713	1272594	17	True				
ANR	1273713	ExpressionStatement		272:50:7714:7714	1272594	18	True				
ANR	1273714	ExpressionStatement	"dbg -> cb_printf ( fmt , item -> name , strvalue , woot )"	273:5:7721:7769	1272594	19	True				
ANR	1273715	CallExpression	"dbg -> cb_printf ( fmt , item -> name , strvalue , woot )"		1272594	0					
ANR	1273716	Callee	dbg -> cb_printf		1272594	0					
ANR	1273717	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273718	Identifier	dbg		1272594	0					
ANR	1273719	Identifier	cb_printf		1272594	1					
ANR	1273720	ArgumentList	fmt		1272594	1					
ANR	1273721	Argument	fmt		1272594	0					
ANR	1273722	Identifier	fmt		1272594	0					
ANR	1273723	Argument	item -> name		1272594	1					
ANR	1273724	PtrMemberAccess	item -> name		1272594	0					
ANR	1273725	Identifier	item		1272594	0					
ANR	1273726	Identifier	name		1272594	1					
ANR	1273727	Argument	strvalue		1272594	2					
ANR	1273728	Identifier	strvalue		1272594	0					
ANR	1273729	Argument	woot		1272594	3					
ANR	1273730	Identifier	woot		1272594	0					
ANR	1273731	BreakStatement	break ;	275:4:7781:7786	1272594	23	True				
ANR	1273732	Label	default :	276:3:7791:7798	1272594	24	True				
ANR	1273733	Identifier	default		1272594	0					
ANR	1273734	IfStatement	if ( delta && use_color )		1272594	25					
ANR	1273735	Condition	delta && use_color	277:8:7808:7825	1272594	0	True				
ANR	1273736	AndExpression	delta && use_color		1272594	0		&&			
ANR	1273737	Identifier	delta		1272594	0					
ANR	1273738	Identifier	use_color		1272594	1					
ANR	1273739	CompoundStatement		193:28:5065:5065	1272594	1					
ANR	1273740	ExpressionStatement	dbg -> cb_printf ( use_color )	278:5:7835:7861	1272594	0	True				
ANR	1273741	CallExpression	dbg -> cb_printf ( use_color )		1272594	0					
ANR	1273742	Callee	dbg -> cb_printf		1272594	0					
ANR	1273743	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273744	Identifier	dbg		1272594	0					
ANR	1273745	Identifier	cb_printf		1272594	1					
ANR	1273746	ArgumentList	use_color		1272594	1					
ANR	1273747	Argument	use_color		1272594	0					
ANR	1273748	Identifier	use_color		1272594	0					
ANR	1273749	Statement	dbg	279:5:7868:7870	1272594	1	True				
ANR	1273750	Statement	->	279:8:7871:7872	1272594	2	True				
ANR	1273751	Statement	cb_printf	279:10:7873:7881	1272594	3	True				
ANR	1273752	Statement	(	279:20:7883:7883	1272594	4	True				
ANR	1273753	Statement	fmt	279:21:7884:7886	1272594	5	True				
ANR	1273754	Statement	","	279:24:7887:7887	1272594	6	True				
ANR	1273755	Statement	item	279:26:7889:7892	1272594	7	True				
ANR	1273756	Statement	->	279:30:7893:7894	1272594	8	True				
ANR	1273757	Statement	name	279:32:7895:7898	1272594	9	True				
ANR	1273758	Statement	","	279:36:7899:7899	1272594	10	True				
ANR	1273759	Statement	strvalue	279:38:7901:7908	1272594	11	True				
ANR	1273760	Statement	","	279:46:7909:7909	1272594	12	True				
ANR	1273761	Statement	Color_RESET	279:48:7911:7921	1272594	13	True				
ANR	1273762	Statement	"""\\n"""	279:59:7922:7925	1272594	14	True				
ANR	1273763	Statement	)	279:63:7926:7926	1272594	15	True				
ANR	1273764	ExpressionStatement		279:64:7927:7927	1272594	16	True				
ANR	1273765	ElseStatement	else		1272594	0					
ANR	1273766	CompoundStatement		196:11:5177:5177	1272594	0					
ANR	1273767	ExpressionStatement	"dbg -> cb_printf ( fmt , item -> name , strvalue , ""\\n"" )"	281:5:7947:7995	1272594	0	True				
ANR	1273768	CallExpression	"dbg -> cb_printf ( fmt , item -> name , strvalue , ""\\n"" )"		1272594	0					
ANR	1273769	Callee	dbg -> cb_printf		1272594	0					
ANR	1273770	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273771	Identifier	dbg		1272594	0					
ANR	1273772	Identifier	cb_printf		1272594	1					
ANR	1273773	ArgumentList	fmt		1272594	1					
ANR	1273774	Argument	fmt		1272594	0					
ANR	1273775	Identifier	fmt		1272594	0					
ANR	1273776	Argument	item -> name		1272594	1					
ANR	1273777	PtrMemberAccess	item -> name		1272594	0					
ANR	1273778	Identifier	item		1272594	0					
ANR	1273779	Identifier	name		1272594	1					
ANR	1273780	Argument	strvalue		1272594	2					
ANR	1273781	Identifier	strvalue		1272594	0					
ANR	1273782	Argument	"""\\n"""		1272594	3					
ANR	1273783	PrimaryExpression	"""\\n"""		1272594	0					
ANR	1273784	BreakStatement	break ;	283:4:8007:8012	1272594	26	True				
ANR	1273785	ExpressionStatement	n ++	285:3:8022:8025	1272594	8	True				
ANR	1273786	PostIncDecOperationExpression	n ++		1272594	0					
ANR	1273787	Identifier	n		1272594	0					
ANR	1273788	IncDec	++		1272594	1					
ANR	1273789	Label	beach :	288:0:8034:8039	1272594	20	True				
ANR	1273790	Identifier	beach		1272594	0					
ANR	1273791	IfStatement	if ( rad == 'j' )		1272594	21					
ANR	1273792	Condition	rad == 'j'	289:5:8046:8055	1272594	0	True				
ANR	1273793	EqualityExpression	rad == 'j'		1272594	0		==			
ANR	1273794	Identifier	rad		1272594	0					
ANR	1273795	PrimaryExpression	'j'		1272594	1					
ANR	1273796	CompoundStatement		205:17:5295:5295	1272594	1					
ANR	1273797	ExpressionStatement	"dbg -> cb_printf ( ""}\\n"" )"	290:2:8062:8084	1272594	0	True				
ANR	1273798	CallExpression	"dbg -> cb_printf ( ""}\\n"" )"		1272594	0					
ANR	1273799	Callee	dbg -> cb_printf		1272594	0					
ANR	1273800	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273801	Identifier	dbg		1272594	0					
ANR	1273802	Identifier	cb_printf		1272594	1					
ANR	1273803	ArgumentList	"""}\\n"""		1272594	1					
ANR	1273804	Argument	"""}\\n"""		1272594	0					
ANR	1273805	PrimaryExpression	"""}\\n"""		1272594	0					
ANR	1273806	ElseStatement	else		1272594	0					
ANR	1273807	IfStatement	if ( rad == 'J' )		1272594	0					
ANR	1273808	Condition	rad == 'J'	291:12:8098:8107	1272594	0	True				
ANR	1273809	EqualityExpression	rad == 'J'		1272594	0		==			
ANR	1273810	Identifier	rad		1272594	0					
ANR	1273811	PrimaryExpression	'J'		1272594	1					
ANR	1273812	CompoundStatement		207:24:5347:5347	1272594	1					
ANR	1273813	ElseStatement	else		1272594	0					
ANR	1273814	IfStatement	if ( n > 0 && rad == 2 && ( ( n % cols ) ) )		1272594	0					
ANR	1273815	Condition	n > 0 && rad == 2 && ( ( n % cols ) )	293:12:8140:8170	1272594	0	True				
ANR	1273816	AndExpression	n > 0 && rad == 2 && ( ( n % cols ) )		1272594	0		&&			
ANR	1273817	RelationalExpression	n > 0		1272594	0		>			
ANR	1273818	Identifier	n		1272594	0					
ANR	1273819	PrimaryExpression	0		1272594	1					
ANR	1273820	AndExpression	rad == 2 && ( ( n % cols ) )		1272594	1		&&			
ANR	1273821	EqualityExpression	rad == 2		1272594	0		==			
ANR	1273822	Identifier	rad		1272594	0					
ANR	1273823	PrimaryExpression	2		1272594	1					
ANR	1273824	MultiplicativeExpression	n % cols		1272594	1		%			
ANR	1273825	Identifier	n		1272594	0					
ANR	1273826	Identifier	cols		1272594	1					
ANR	1273827	CompoundStatement		209:45:5410:5410	1272594	1					
ANR	1273828	ExpressionStatement	"dbg -> cb_printf ( ""\\n"" )"	294:2:8177:8198	1272594	0	True				
ANR	1273829	CallExpression	"dbg -> cb_printf ( ""\\n"" )"		1272594	0					
ANR	1273830	Callee	dbg -> cb_printf		1272594	0					
ANR	1273831	PtrMemberAccess	dbg -> cb_printf		1272594	0					
ANR	1273832	Identifier	dbg		1272594	0					
ANR	1273833	Identifier	cb_printf		1272594	1					
ANR	1273834	ArgumentList	"""\\n"""		1272594	1					
ANR	1273835	Argument	"""\\n"""		1272594	0					
ANR	1273836	PrimaryExpression	"""\\n"""		1272594	0					
ANR	1273837	ReturnStatement	return n ;	296:1:8204:8212	1272594	22	True				
ANR	1273838	Identifier	n		1272594	0					
ANR	1273839	ReturnType	R_API int		1272594	1					
ANR	1273840	Identifier	r_debug_reg_list		1272594	2					
ANR	1273841	ParameterList	"RDebug * dbg , int type , int size , int rad , const char * use_color"		1272594	3					
ANR	1273842	Parameter	RDebug * dbg	85:27:2697:2707	1272594	0	True				
ANR	1273843	ParameterType	RDebug *		1272594	0					
ANR	1273844	Identifier	dbg		1272594	1					
ANR	1273845	Parameter	int type	85:40:2710:2717	1272594	1	True				
ANR	1273846	ParameterType	int		1272594	0					
ANR	1273847	Identifier	type		1272594	1					
ANR	1273848	Parameter	int size	85:50:2720:2727	1272594	2	True				
ANR	1273849	ParameterType	int		1272594	0					
ANR	1273850	Identifier	size		1272594	1					
ANR	1273851	Parameter	int rad	85:60:2730:2736	1272594	3	True				
ANR	1273852	ParameterType	int		1272594	0					
ANR	1273853	Identifier	rad		1272594	1					
ANR	1273854	Parameter	const char * use_color	85:69:2739:2759	1272594	4	True				
ANR	1273855	ParameterType	const char *		1272594	0					
ANR	1273856	Identifier	use_color		1272594	1					
ANR	1273857	CFGEntryNode	ENTRY		1272594		True				
ANR	1273858	CFGExitNode	EXIT		1272594		True				
ANR	1273859	Symbol	pr		1272594						
ANR	1273860	Symbol	tolower		1272594						
ANR	1273861	Symbol	regSize		1272594						
ANR	1273862	Symbol	delta		1272594						
ANR	1273863	Symbol	woot		1272594						
ANR	1273864	Symbol	pr -> cur_enabled		1272594						
ANR	1273865	Symbol	type		1272594						
ANR	1273866	Symbol	fmt		1272594						
ANR	1273867	Symbol	dbg -> corebind . core		1272594						
ANR	1273868	Symbol	whites		1272594						
ANR	1273869	Symbol	strlen		1272594						
ANR	1273870	Symbol	rad		1272594						
ANR	1273871	Symbol	len		1272594						
ANR	1273872	Symbol	* whites		1272594						
ANR	1273873	Symbol	R_REG_TYPE_FLG		1272594						
ANR	1273874	Symbol	itmidx		1272594						
ANR	1273875	Symbol	from		1272594						
ANR	1273876	Symbol	R_SYS_BITS_64		1272594						
ANR	1273877	Symbol	strcmp		1272594						
ANR	1273878	Symbol	item		1272594						
ANR	1273879	Symbol	kwhites		1272594						
ANR	1273880	Symbol	NULL		1272594						
ANR	1273881	Symbol	q_reg		1272594						
ANR	1273882	Symbol	* dbg -> corebind		1272594						
ANR	1273883	Symbol	r_reg_get_list		1272594						
ANR	1273884	Symbol	dbg		1272594						
ANR	1273885	Symbol	iter		1272594						
ANR	1273886	Symbol	R_REG_TYPE_LAST		1272594						
ANR	1273887	Symbol	diff		1272594						
ANR	1273888	Symbol	* pr		1272594						
ANR	1273889	Symbol	use_color		1272594						
ANR	1273890	Symbol	str		1272594						
ANR	1273891	Symbol	dbg -> reg -> bits		1272594						
ANR	1273892	Symbol	size		1272594						
ANR	1273893	Symbol	dbg -> corebind		1272594						
ANR	1273894	Symbol	colwidth		1272594						
ANR	1273895	Symbol	true		1272594						
ANR	1273896	Symbol	r_list_empty		1272594						
ANR	1273897	Symbol	valueBig		1272594						
ANR	1273898	Symbol	dbg -> creg		1272594						
ANR	1273899	Symbol	item -> type		1272594						
ANR	1273900	Symbol	Color_INVERT_RESET		1272594						
ANR	1273901	Symbol	Color_RESET		1272594						
ANR	1273902	Symbol	dbg -> bits		1272594						
ANR	1273903	Symbol	item -> flags		1272594						
ANR	1273904	Symbol	r_reg_get_bvalue		1272594						
ANR	1273905	Symbol	r_reg_get_value_big		1272594						
ANR	1273906	Symbol	content		1272594						
ANR	1273907	Symbol	strvalue		1272594						
ANR	1273908	Symbol	head		1272594						
ANR	1273909	Symbol	highlight		1272594						
ANR	1273910	Symbol	* dbg -> corebind . core		1272594						
ANR	1273911	Symbol	found		1272594						
ANR	1273912	Symbol	* item		1272594						
ANR	1273913	Symbol	( ( RCore * ) dbg -> corebind . core ) -> print		1272594						
ANR	1273914	Symbol	q_name		1272594						
ANR	1273915	Symbol	Color_INVERT		1272594						
ANR	1273916	Symbol	dbg -> regcols		1272594						
ANR	1273917	Symbol	iterreg		1272594						
ANR	1273918	Symbol	cols		1272594						
ANR	1273919	Symbol	value		1272594						
ANR	1273920	Symbol	a		1272594						
ANR	1273921	Symbol	r_reg_get_value		1272594						
ANR	1273922	Symbol	b		1272594						
ANR	1273923	Symbol	false		1272594						
ANR	1273924	Symbol	i		1272594						
ANR	1273925	Symbol	* dbg		1272594						
ANR	1273926	Symbol	n		1272594						
ANR	1273927	Symbol	pr -> cur		1272594						
ANR	1273928	Symbol	& valueBig		1272594						
ANR	1273929	Symbol	* dbg -> reg		1272594						
ANR	1273930	Symbol	fmt2		1272594						
ANR	1273931	Symbol	item -> name		1272594						
ANR	1273932	Symbol	pr -> wide_offsets		1272594						
ANR	1273933	Symbol	dbg -> q_regs		1272594						
ANR	1273934	Symbol	to		1272594						
ANR	1273935	Symbol	dbg -> reg		1272594						
ANR	1273936	Symbol	* * dbg		1272594						
ANR	1273937	Symbol	item -> size		1272594						
ANR	1273938	Symbol	* len		1272594						
ANR	1273939	Function	r_debug_reg_set	299:0:8217:8632							
ANR	1273940	FunctionDef	"r_debug_reg_set (struct r_debug_t * dbg , const char * name , ut64 num)"		1273939	0					
ANR	1273941	CompoundStatement		299:77:8294:8632	1273939	0					
ANR	1273942	IdentifierDeclStatement	RRegItem * ri ;	300:1:8297:8309	1273939	0	True				
ANR	1273943	IdentifierDecl	* ri		1273939	0					
ANR	1273944	IdentifierDeclType	RRegItem *		1273939	0					
ANR	1273945	Identifier	ri		1273939	1					
ANR	1273946	IdentifierDeclStatement	int role = r_reg_get_name_idx ( name ) ;	301:1:8312:8348	1273939	1	True				
ANR	1273947	IdentifierDecl	role = r_reg_get_name_idx ( name )		1273939	0					
ANR	1273948	IdentifierDeclType	int		1273939	0					
ANR	1273949	Identifier	role		1273939	1					
ANR	1273950	AssignmentExpression	role = r_reg_get_name_idx ( name )		1273939	2		=			
ANR	1273951	Identifier	role		1273939	0					
ANR	1273952	CallExpression	r_reg_get_name_idx ( name )		1273939	1					
ANR	1273953	Callee	r_reg_get_name_idx		1273939	0					
ANR	1273954	Identifier	r_reg_get_name_idx		1273939	0					
ANR	1273955	ArgumentList	name		1273939	1					
ANR	1273956	Argument	name		1273939	0					
ANR	1273957	Identifier	name		1273939	0					
ANR	1273958	IfStatement	if ( ! dbg || ! dbg -> reg )		1273939	2					
ANR	1273959	Condition	! dbg || ! dbg -> reg	302:5:8355:8371	1273939	0	True				
ANR	1273960	OrExpression	! dbg || ! dbg -> reg		1273939	0		||			
ANR	1273961	UnaryOperationExpression	! dbg		1273939	0					
ANR	1273962	UnaryOperator	!		1273939	0					
ANR	1273963	Identifier	dbg		1273939	1					
ANR	1273964	UnaryOperationExpression	! dbg -> reg		1273939	1					
ANR	1273965	UnaryOperator	!		1273939	0					
ANR	1273966	PtrMemberAccess	dbg -> reg		1273939	1					
ANR	1273967	Identifier	dbg		1273939	0					
ANR	1273968	Identifier	reg		1273939	1					
ANR	1273969	CompoundStatement		4:24:79:79	1273939	1					
ANR	1273970	ReturnStatement	return false ;	303:2:8378:8390	1273939	0	True				
ANR	1273971	Identifier	false		1273939	0					
ANR	1273972	IfStatement	if ( role != - 1 )		1273939	3					
ANR	1273973	Condition	role != - 1	305:5:8400:8409	1273939	0	True				
ANR	1273974	EqualityExpression	role != - 1		1273939	0		!=			
ANR	1273975	Identifier	role		1273939	0					
ANR	1273976	UnaryOperationExpression	- 1		1273939	1					
ANR	1273977	UnaryOperator	-		1273939	0					
ANR	1273978	PrimaryExpression	1		1273939	1					
ANR	1273979	CompoundStatement		7:17:117:117	1273939	1					
ANR	1273980	ExpressionStatement	"name = r_reg_get_name ( dbg -> reg , role )"	306:2:8416:8454	1273939	0	True				
ANR	1273981	AssignmentExpression	"name = r_reg_get_name ( dbg -> reg , role )"		1273939	0		=			
ANR	1273982	Identifier	name		1273939	0					
ANR	1273983	CallExpression	"r_reg_get_name ( dbg -> reg , role )"		1273939	1					
ANR	1273984	Callee	r_reg_get_name		1273939	0					
ANR	1273985	Identifier	r_reg_get_name		1273939	0					
ANR	1273986	ArgumentList	dbg -> reg		1273939	1					
ANR	1273987	Argument	dbg -> reg		1273939	0					
ANR	1273988	PtrMemberAccess	dbg -> reg		1273939	0					
ANR	1273989	Identifier	dbg		1273939	0					
ANR	1273990	Identifier	reg		1273939	1					
ANR	1273991	Argument	role		1273939	1					
ANR	1273992	Identifier	role		1273939	0					
ANR	1273993	ExpressionStatement	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"	308:1:8460:8507	1273939	4	True				
ANR	1273994	AssignmentExpression	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		1273939	0		=			
ANR	1273995	Identifier	ri		1273939	0					
ANR	1273996	CallExpression	"r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		1273939	1					
ANR	1273997	Callee	r_reg_get		1273939	0					
ANR	1273998	Identifier	r_reg_get		1273939	0					
ANR	1273999	ArgumentList	dbg -> reg		1273939	1					
ANR	1274000	Argument	dbg -> reg		1273939	0					
ANR	1274001	PtrMemberAccess	dbg -> reg		1273939	0					
ANR	1274002	Identifier	dbg		1273939	0					
ANR	1274003	Identifier	reg		1273939	1					
ANR	1274004	Argument	name		1273939	1					
ANR	1274005	Identifier	name		1273939	0					
ANR	1274006	Argument	R_REG_TYPE_ALL		1273939	2					
ANR	1274007	Identifier	R_REG_TYPE_ALL		1273939	0					
ANR	1274008	IfStatement	if ( ri )		1273939	5					
ANR	1274009	Condition	ri	309:5:8514:8515	1273939	0	True				
ANR	1274010	Identifier	ri		1273939	0					
ANR	1274011	CompoundStatement		11:9:223:223	1273939	1					
ANR	1274012	ExpressionStatement	"r_reg_set_value ( dbg -> reg , ri , num )"	310:2:8522:8557	1273939	0	True				
ANR	1274013	CallExpression	"r_reg_set_value ( dbg -> reg , ri , num )"		1273939	0					
ANR	1274014	Callee	r_reg_set_value		1273939	0					
ANR	1274015	Identifier	r_reg_set_value		1273939	0					
ANR	1274016	ArgumentList	dbg -> reg		1273939	1					
ANR	1274017	Argument	dbg -> reg		1273939	0					
ANR	1274018	PtrMemberAccess	dbg -> reg		1273939	0					
ANR	1274019	Identifier	dbg		1273939	0					
ANR	1274020	Identifier	reg		1273939	1					
ANR	1274021	Argument	ri		1273939	1					
ANR	1274022	Identifier	ri		1273939	0					
ANR	1274023	Argument	num		1273939	2					
ANR	1274024	Identifier	num		1273939	0					
ANR	1274025	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , true )"	311:2:8561:8605	1273939	1	True				
ANR	1274026	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , true )"		1273939	0					
ANR	1274027	Callee	r_debug_reg_sync		1273939	0					
ANR	1274028	Identifier	r_debug_reg_sync		1273939	0					
ANR	1274029	ArgumentList	dbg		1273939	1					
ANR	1274030	Argument	dbg		1273939	0					
ANR	1274031	Identifier	dbg		1273939	0					
ANR	1274032	Argument	R_REG_TYPE_ALL		1273939	1					
ANR	1274033	Identifier	R_REG_TYPE_ALL		1273939	0					
ANR	1274034	Argument	true		1273939	2					
ANR	1274035	Identifier	true		1273939	0					
ANR	1274036	ReturnStatement	return ( ri != NULL ) ;	313:1:8611:8630	1273939	6	True				
ANR	1274037	EqualityExpression	ri != NULL		1273939	0		!=			
ANR	1274038	Identifier	ri		1273939	0					
ANR	1274039	Identifier	NULL		1273939	1					
ANR	1274040	ReturnType	R_API int		1273939	1					
ANR	1274041	Identifier	r_debug_reg_set		1273939	2					
ANR	1274042	ParameterList	"struct r_debug_t * dbg , const char * name , ut64 num"		1273939	3					
ANR	1274043	Parameter	struct r_debug_t * dbg	299:26:8243:8263	1273939	0	True				
ANR	1274044	ParameterType	struct r_debug_t *		1273939	0					
ANR	1274045	Identifier	dbg		1273939	1					
ANR	1274046	Parameter	const char * name	299:49:8266:8281	1273939	1	True				
ANR	1274047	ParameterType	const char *		1273939	0					
ANR	1274048	Identifier	name		1273939	1					
ANR	1274049	Parameter	ut64 num	299:67:8284:8291	1273939	2	True				
ANR	1274050	ParameterType	ut64		1273939	0					
ANR	1274051	Identifier	num		1273939	1					
ANR	1274052	CFGEntryNode	ENTRY		1273939		True				
ANR	1274053	CFGExitNode	EXIT		1273939		True				
ANR	1274054	Symbol	role		1273939						
ANR	1274055	Symbol	NULL		1273939						
ANR	1274056	Symbol	num		1273939						
ANR	1274057	Symbol	dbg		1273939						
ANR	1274058	Symbol	false		1273939						
ANR	1274059	Symbol	* dbg		1273939						
ANR	1274060	Symbol	r_reg_get_name_idx		1273939						
ANR	1274061	Symbol	r_reg_get_name		1273939						
ANR	1274062	Symbol	R_REG_TYPE_ALL		1273939						
ANR	1274063	Symbol	ri		1273939						
ANR	1274064	Symbol	name		1273939						
ANR	1274065	Symbol	true		1273939						
ANR	1274066	Symbol	dbg -> reg		1273939						
ANR	1274067	Symbol	r_reg_get		1273939						
ANR	1274068	Function	r_debug_reg_get	316:0:8635:8767							
ANR	1274069	FunctionDef	"r_debug_reg_get (RDebug * dbg , const char * name)"		1274068	0					
ANR	1274070	CompoundStatement		316:58:8693:8767	1274068	0					
ANR	1274071	ReturnStatement	"return r_debug_reg_get_err ( dbg , name , NULL , NULL ) ;"	318:1:8715:8765	1274068	0	True				
ANR	1274072	CallExpression	"r_debug_reg_get_err ( dbg , name , NULL , NULL )"		1274068	0					
ANR	1274073	Callee	r_debug_reg_get_err		1274068	0					
ANR	1274074	Identifier	r_debug_reg_get_err		1274068	0					
ANR	1274075	ArgumentList	dbg		1274068	1					
ANR	1274076	Argument	dbg		1274068	0					
ANR	1274077	Identifier	dbg		1274068	0					
ANR	1274078	Argument	name		1274068	1					
ANR	1274079	Identifier	name		1274068	0					
ANR	1274080	Argument	NULL		1274068	2					
ANR	1274081	Identifier	NULL		1274068	0					
ANR	1274082	Argument	NULL		1274068	3					
ANR	1274083	Identifier	NULL		1274068	0					
ANR	1274084	ReturnType	R_API ut64		1274068	1					
ANR	1274085	Identifier	r_debug_reg_get		1274068	2					
ANR	1274086	ParameterList	"RDebug * dbg , const char * name"		1274068	3					
ANR	1274087	Parameter	RDebug * dbg	316:27:8662:8672	1274068	0	True				
ANR	1274088	ParameterType	RDebug *		1274068	0					
ANR	1274089	Identifier	dbg		1274068	1					
ANR	1274090	Parameter	const char * name	316:40:8675:8690	1274068	1	True				
ANR	1274091	ParameterType	const char *		1274068	0					
ANR	1274092	Identifier	name		1274068	1					
ANR	1274093	CFGEntryNode	ENTRY		1274068		True				
ANR	1274094	CFGExitNode	EXIT		1274068		True				
ANR	1274095	Symbol	NULL		1274068						
ANR	1274096	Symbol	r_debug_reg_get_err		1274068						
ANR	1274097	Symbol	dbg		1274068						
ANR	1274098	Symbol	name		1274068						
ANR	1274099	Function	r_debug_reg_get_err	321:0:8770:9637							
ANR	1274100	FunctionDef	"r_debug_reg_get_err (RDebug * dbg , const char * name , int * err , utX * value)"		1274099	0					
ANR	1274101	CompoundStatement		321:84:8854:9637	1274099	0					
ANR	1274102	IdentifierDeclStatement	RRegItem * ri = NULL ;	322:1:8857:8876	1274099	0	True				
ANR	1274103	IdentifierDecl	* ri = NULL		1274099	0					
ANR	1274104	IdentifierDeclType	RRegItem *		1274099	0					
ANR	1274105	Identifier	ri		1274099	1					
ANR	1274106	AssignmentExpression	* ri = NULL		1274099	2		=			
ANR	1274107	Identifier	NULL		1274099	0					
ANR	1274108	Identifier	NULL		1274099	1					
ANR	1274109	Statement	ut64	323:1:8879:8882	1274099	1	True				
ANR	1274110	Statement	ret	323:6:8884:8886	1274099	2	True				
ANR	1274111	Statement	=	323:10:8888:8888	1274099	3	True				
ANR	1274112	Statement	0L	323:12:8890:8891	1274099	4	True				
ANR	1274113	ExpressionStatement	L	323:14:8892:8893	1274099	5	True				
ANR	1274114	Identifier	L		1274099	0					
ANR	1274115	IdentifierDeclStatement	int role = r_reg_get_name_idx ( name ) ;	324:1:8896:8932	1274099	6	True				
ANR	1274116	IdentifierDecl	role = r_reg_get_name_idx ( name )		1274099	0					
ANR	1274117	IdentifierDeclType	int		1274099	0					
ANR	1274118	Identifier	role		1274099	1					
ANR	1274119	AssignmentExpression	role = r_reg_get_name_idx ( name )		1274099	2		=			
ANR	1274120	Identifier	role		1274099	0					
ANR	1274121	CallExpression	r_reg_get_name_idx ( name )		1274099	1					
ANR	1274122	Callee	r_reg_get_name_idx		1274099	0					
ANR	1274123	Identifier	r_reg_get_name_idx		1274099	0					
ANR	1274124	ArgumentList	name		1274099	1					
ANR	1274125	Argument	name		1274099	0					
ANR	1274126	Identifier	name		1274099	0					
ANR	1274127	IdentifierDeclStatement	const char * pname = name ;	325:1:8935:8959	1274099	7	True				
ANR	1274128	IdentifierDecl	* pname = name		1274099	0					
ANR	1274129	IdentifierDeclType	const char *		1274099	0					
ANR	1274130	Identifier	pname		1274099	1					
ANR	1274131	AssignmentExpression	* pname = name		1274099	2		=			
ANR	1274132	Identifier	name		1274099	0					
ANR	1274133	Identifier	name		1274099	1					
ANR	1274134	IfStatement	if ( err )		1274099	8					
ANR	1274135	Condition	err	326:5:8966:8968	1274099	0	True				
ANR	1274136	Identifier	err		1274099	0					
ANR	1274137	CompoundStatement		6:10:116:116	1274099	1					
ANR	1274138	ExpressionStatement	* err = 0	327:2:8975:8983	1274099	0	True				
ANR	1274139	AssignmentExpression	* err = 0		1274099	0		=			
ANR	1274140	UnaryOperationExpression	* err		1274099	0					
ANR	1274141	UnaryOperator	*		1274099	0					
ANR	1274142	Identifier	err		1274099	1					
ANR	1274143	PrimaryExpression	0		1274099	1					
ANR	1274144	IfStatement	if ( ! dbg || ! dbg -> reg )		1274099	9					
ANR	1274145	Condition	! dbg || ! dbg -> reg	329:5:8993:9009	1274099	0	True				
ANR	1274146	OrExpression	! dbg || ! dbg -> reg		1274099	0		||			
ANR	1274147	UnaryOperationExpression	! dbg		1274099	0					
ANR	1274148	UnaryOperator	!		1274099	0					
ANR	1274149	Identifier	dbg		1274099	1					
ANR	1274150	UnaryOperationExpression	! dbg -> reg		1274099	1					
ANR	1274151	UnaryOperator	!		1274099	0					
ANR	1274152	PtrMemberAccess	dbg -> reg		1274099	1					
ANR	1274153	Identifier	dbg		1274099	0					
ANR	1274154	Identifier	reg		1274099	1					
ANR	1274155	CompoundStatement		9:24:157:157	1274099	1					
ANR	1274156	IfStatement	if ( err )		1274099	0					
ANR	1274157	Condition	err	330:6:9020:9022	1274099	0	True				
ANR	1274158	Identifier	err		1274099	0					
ANR	1274159	CompoundStatement		10:11:170:170	1274099	1					
ANR	1274160	ExpressionStatement	* err = 1	331:3:9030:9038	1274099	0	True				
ANR	1274161	AssignmentExpression	* err = 1		1274099	0		=			
ANR	1274162	UnaryOperationExpression	* err		1274099	0					
ANR	1274163	UnaryOperator	*		1274099	0					
ANR	1274164	Identifier	err		1274099	1					
ANR	1274165	PrimaryExpression	1		1274099	1					
ANR	1274166	ReturnStatement	return UT64_MAX ;	333:2:9046:9061	1274099	1	True				
ANR	1274167	Identifier	UT64_MAX		1274099	0					
ANR	1274168	IfStatement	if ( role != - 1 )		1274099	10					
ANR	1274169	Condition	role != - 1	335:5:9071:9080	1274099	0	True				
ANR	1274170	EqualityExpression	role != - 1		1274099	0		!=			
ANR	1274171	Identifier	role		1274099	0					
ANR	1274172	UnaryOperationExpression	- 1		1274099	1					
ANR	1274173	UnaryOperator	-		1274099	0					
ANR	1274174	PrimaryExpression	1		1274099	1					
ANR	1274175	CompoundStatement		15:17:228:228	1274099	1					
ANR	1274176	ExpressionStatement	"name = r_reg_get_name ( dbg -> reg , role )"	336:2:9087:9125	1274099	0	True				
ANR	1274177	AssignmentExpression	"name = r_reg_get_name ( dbg -> reg , role )"		1274099	0		=			
ANR	1274178	Identifier	name		1274099	0					
ANR	1274179	CallExpression	"r_reg_get_name ( dbg -> reg , role )"		1274099	1					
ANR	1274180	Callee	r_reg_get_name		1274099	0					
ANR	1274181	Identifier	r_reg_get_name		1274099	0					
ANR	1274182	ArgumentList	dbg -> reg		1274099	1					
ANR	1274183	Argument	dbg -> reg		1274099	0					
ANR	1274184	PtrMemberAccess	dbg -> reg		1274099	0					
ANR	1274185	Identifier	dbg		1274099	0					
ANR	1274186	Identifier	reg		1274099	1					
ANR	1274187	Argument	role		1274099	1					
ANR	1274188	Identifier	role		1274099	0					
ANR	1274189	IfStatement	if ( ! name || * name == '\\0' )		1274099	1					
ANR	1274190	Condition	! name || * name == '\\0'	337:6:9133:9154	1274099	0	True				
ANR	1274191	OrExpression	! name || * name == '\\0'		1274099	0		||			
ANR	1274192	UnaryOperationExpression	! name		1274099	0					
ANR	1274193	UnaryOperator	!		1274099	0					
ANR	1274194	Identifier	name		1274099	1					
ANR	1274195	EqualityExpression	* name == '\\0'		1274099	1		==			
ANR	1274196	UnaryOperationExpression	* name		1274099	0					
ANR	1274197	UnaryOperator	*		1274099	0					
ANR	1274198	Identifier	name		1274099	1					
ANR	1274199	PrimaryExpression	'\\0'		1274099	1					
ANR	1274200	CompoundStatement		17:30:302:302	1274099	1					
ANR	1274201	ExpressionStatement	"eprintf ( ""No debug register profile defined for '%s'.\\n"" , pname )"	338:3:9162:9226	1274099	0	True				
ANR	1274202	CallExpression	"eprintf ( ""No debug register profile defined for '%s'.\\n"" , pname )"		1274099	0					
ANR	1274203	Callee	eprintf		1274099	0					
ANR	1274204	Identifier	eprintf		1274099	0					
ANR	1274205	ArgumentList	"""No debug register profile defined for '%s'.\\n"""		1274099	1					
ANR	1274206	Argument	"""No debug register profile defined for '%s'.\\n"""		1274099	0					
ANR	1274207	PrimaryExpression	"""No debug register profile defined for '%s'.\\n"""		1274099	0					
ANR	1274208	Argument	pname		1274099	1					
ANR	1274209	Identifier	pname		1274099	0					
ANR	1274210	IfStatement	if ( err )		1274099	1					
ANR	1274211	Condition	err	339:7:9235:9237	1274099	0	True				
ANR	1274212	Identifier	err		1274099	0					
ANR	1274213	CompoundStatement		19:12:385:385	1274099	1					
ANR	1274214	ExpressionStatement	* err = 1	340:4:9246:9254	1274099	0	True				
ANR	1274215	AssignmentExpression	* err = 1		1274099	0		=			
ANR	1274216	UnaryOperationExpression	* err		1274099	0					
ANR	1274217	UnaryOperator	*		1274099	0					
ANR	1274218	Identifier	err		1274099	1					
ANR	1274219	PrimaryExpression	1		1274099	1					
ANR	1274220	ReturnStatement	return UT64_MAX ;	342:3:9264:9279	1274099	2	True				
ANR	1274221	Identifier	UT64_MAX		1274099	0					
ANR	1274222	ExpressionStatement	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"	345:1:9289:9336	1274099	11	True				
ANR	1274223	AssignmentExpression	"ri = r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		1274099	0		=			
ANR	1274224	Identifier	ri		1274099	0					
ANR	1274225	CallExpression	"r_reg_get ( dbg -> reg , name , R_REG_TYPE_ALL )"		1274099	1					
ANR	1274226	Callee	r_reg_get		1274099	0					
ANR	1274227	Identifier	r_reg_get		1274099	0					
ANR	1274228	ArgumentList	dbg -> reg		1274099	1					
ANR	1274229	Argument	dbg -> reg		1274099	0					
ANR	1274230	PtrMemberAccess	dbg -> reg		1274099	0					
ANR	1274231	Identifier	dbg		1274099	0					
ANR	1274232	Identifier	reg		1274099	1					
ANR	1274233	Argument	name		1274099	1					
ANR	1274234	Identifier	name		1274099	0					
ANR	1274235	Argument	R_REG_TYPE_ALL		1274099	2					
ANR	1274236	Identifier	R_REG_TYPE_ALL		1274099	0					
ANR	1274237	IfStatement	if ( ri )		1274099	12					
ANR	1274238	Condition	ri	346:5:9343:9344	1274099	0	True				
ANR	1274239	Identifier	ri		1274099	0					
ANR	1274240	CompoundStatement		26:9:492:492	1274099	1					
ANR	1274241	ExpressionStatement	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , false )"	347:2:9351:9396	1274099	0	True				
ANR	1274242	CallExpression	"r_debug_reg_sync ( dbg , R_REG_TYPE_ALL , false )"		1274099	0					
ANR	1274243	Callee	r_debug_reg_sync		1274099	0					
ANR	1274244	Identifier	r_debug_reg_sync		1274099	0					
ANR	1274245	ArgumentList	dbg		1274099	1					
ANR	1274246	Argument	dbg		1274099	0					
ANR	1274247	Identifier	dbg		1274099	0					
ANR	1274248	Argument	R_REG_TYPE_ALL		1274099	1					
ANR	1274249	Identifier	R_REG_TYPE_ALL		1274099	0					
ANR	1274250	Argument	false		1274099	2					
ANR	1274251	Identifier	false		1274099	0					
ANR	1274252	IfStatement	if ( value && ri -> size > 64 )		1274099	1					
ANR	1274253	Condition	value && ri -> size > 64	348:6:9404:9425	1274099	0	True				
ANR	1274254	AndExpression	value && ri -> size > 64		1274099	0		&&			
ANR	1274255	Identifier	value		1274099	0					
ANR	1274256	RelationalExpression	ri -> size > 64		1274099	1		>			
ANR	1274257	PtrMemberAccess	ri -> size		1274099	0					
ANR	1274258	Identifier	ri		1274099	0					
ANR	1274259	Identifier	size		1274099	1					
ANR	1274260	PrimaryExpression	64		1274099	1					
ANR	1274261	CompoundStatement		28:30:573:573	1274099	1					
ANR	1274262	IfStatement	if ( err )		1274099	0					
ANR	1274263	Condition	err	349:7:9437:9439	1274099	0	True				
ANR	1274264	Identifier	err		1274099	0					
ANR	1274265	CompoundStatement		29:12:587:587	1274099	1					
ANR	1274266	ExpressionStatement	* err = ri -> size	350:4:9448:9463	1274099	0	True				
ANR	1274267	AssignmentExpression	* err = ri -> size		1274099	0		=			
ANR	1274268	UnaryOperationExpression	* err		1274099	0					
ANR	1274269	UnaryOperator	*		1274099	0					
ANR	1274270	Identifier	err		1274099	1					
ANR	1274271	PtrMemberAccess	ri -> size		1274099	1					
ANR	1274272	Identifier	ri		1274099	0					
ANR	1274273	Identifier	size		1274099	1					
ANR	1274274	ExpressionStatement	"ret = r_reg_get_value_big ( dbg -> reg , ri , value )"	352:3:9473:9520	1274099	1	True				
ANR	1274275	AssignmentExpression	"ret = r_reg_get_value_big ( dbg -> reg , ri , value )"		1274099	0		=			
ANR	1274276	Identifier	ret		1274099	0					
ANR	1274277	CallExpression	"r_reg_get_value_big ( dbg -> reg , ri , value )"		1274099	1					
ANR	1274278	Callee	r_reg_get_value_big		1274099	0					
ANR	1274279	Identifier	r_reg_get_value_big		1274099	0					
ANR	1274280	ArgumentList	dbg -> reg		1274099	1					
ANR	1274281	Argument	dbg -> reg		1274099	0					
ANR	1274282	PtrMemberAccess	dbg -> reg		1274099	0					
ANR	1274283	Identifier	dbg		1274099	0					
ANR	1274284	Identifier	reg		1274099	1					
ANR	1274285	Argument	ri		1274099	1					
ANR	1274286	Identifier	ri		1274099	0					
ANR	1274287	Argument	value		1274099	2					
ANR	1274288	Identifier	value		1274099	0					
ANR	1274289	ElseStatement	else		1274099	0					
ANR	1274290	CompoundStatement		33:9:676:676	1274099	0					
ANR	1274291	ExpressionStatement	"ret = r_reg_get_value ( dbg -> reg , ri )"	354:6:9539:9575	1274099	0	True				
ANR	1274292	AssignmentExpression	"ret = r_reg_get_value ( dbg -> reg , ri )"		1274099	0		=			
ANR	1274293	Identifier	ret		1274099	0					
ANR	1274294	CallExpression	"r_reg_get_value ( dbg -> reg , ri )"		1274099	1					
ANR	1274295	Callee	r_reg_get_value		1274099	0					
ANR	1274296	Identifier	r_reg_get_value		1274099	0					
ANR	1274297	ArgumentList	dbg -> reg		1274099	1					
ANR	1274298	Argument	dbg -> reg		1274099	0					
ANR	1274299	PtrMemberAccess	dbg -> reg		1274099	0					
ANR	1274300	Identifier	dbg		1274099	0					
ANR	1274301	Identifier	reg		1274099	1					
ANR	1274302	Argument	ri		1274099	1					
ANR	1274303	Identifier	ri		1274099	0					
ANR	1274304	ElseStatement	else		1274099	0					
ANR	1274305	CompoundStatement		36:8:734:734	1274099	0					
ANR	1274306	IfStatement	if ( err )		1274099	0					
ANR	1274307	Condition	err	357:6:9597:9599	1274099	0	True				
ANR	1274308	Identifier	err		1274099	0					
ANR	1274309	CompoundStatement		37:11:747:747	1274099	1					
ANR	1274310	ExpressionStatement	* err = 1	358:3:9607:9615	1274099	0	True				
ANR	1274311	AssignmentExpression	* err = 1		1274099	0		=			
ANR	1274312	UnaryOperationExpression	* err		1274099	0					
ANR	1274313	UnaryOperator	*		1274099	0					
ANR	1274314	Identifier	err		1274099	1					
ANR	1274315	PrimaryExpression	1		1274099	1					
ANR	1274316	ReturnStatement	return ret ;	361:1:9625:9635	1274099	13	True				
ANR	1274317	Identifier	ret		1274099	0					
ANR	1274318	ReturnType	R_API ut64		1274099	1					
ANR	1274319	Identifier	r_debug_reg_get_err		1274099	2					
ANR	1274320	ParameterList	"RDebug * dbg , const char * name , int * err , utX * value"		1274099	3					
ANR	1274321	Parameter	RDebug * dbg	321:31:8801:8811	1274099	0	True				
ANR	1274322	ParameterType	RDebug *		1274099	0					
ANR	1274323	Identifier	dbg		1274099	1					
ANR	1274324	Parameter	const char * name	321:44:8814:8829	1274099	1	True				
ANR	1274325	ParameterType	const char *		1274099	0					
ANR	1274326	Identifier	name		1274099	1					
ANR	1274327	Parameter	int * err	321:62:8832:8839	1274099	2	True				
ANR	1274328	ParameterType	int *		1274099	0					
ANR	1274329	Identifier	err		1274099	1					
ANR	1274330	Parameter	utX * value	321:72:8842:8851	1274099	3	True				
ANR	1274331	ParameterType	utX *		1274099	0					
ANR	1274332	Identifier	value		1274099	1					
ANR	1274333	CFGEntryNode	ENTRY		1274099		True				
ANR	1274334	CFGExitNode	EXIT		1274099		True				
ANR	1274335	Symbol	* name		1274099						
ANR	1274336	Symbol	ret		1274099						
ANR	1274337	Symbol	r_reg_get_value		1274099						
ANR	1274338	Symbol	NULL		1274099						
ANR	1274339	Symbol	role		1274099						
ANR	1274340	Symbol	err		1274099						
ANR	1274341	Symbol	pname		1274099						
ANR	1274342	Symbol	dbg		1274099						
ANR	1274343	Symbol	false		1274099						
ANR	1274344	Symbol	r_reg_get_value_big		1274099						
ANR	1274345	Symbol	* dbg		1274099						
ANR	1274346	Symbol	ri -> size		1274099						
ANR	1274347	Symbol	* err		1274099						
ANR	1274348	Symbol	r_reg_get_name_idx		1274099						
ANR	1274349	Symbol	r_reg_get_name		1274099						
ANR	1274350	Symbol	R_REG_TYPE_ALL		1274099						
ANR	1274351	Symbol	ri		1274099						
ANR	1274352	Symbol	name		1274099						
ANR	1274353	Symbol	dbg -> reg		1274099						
ANR	1274354	Symbol	UT64_MAX		1274099						
ANR	1274355	Symbol	value		1274099						
ANR	1274356	Symbol	* ri		1274099						
ANR	1274357	Symbol	r_reg_get		1274099						
ANR	1274358	Function	r_debug_num_callback	365:0:9665:9848							
ANR	1274359	FunctionDef	"r_debug_num_callback (RNum * userptr , const char * str , int * ok)"		1274358	0					
ANR	1274360	CompoundStatement		365:73:9738:9848	1274358	0					
ANR	1274361	IdentifierDeclStatement	RDebug * dbg = ( RDebug * ) userptr ;	366:1:9741:9772	1274358	0	True				
ANR	1274362	IdentifierDecl	* dbg = ( RDebug * ) userptr		1274358	0					
ANR	1274363	IdentifierDeclType	RDebug *		1274358	0					
ANR	1274364	Identifier	dbg		1274358	1					
ANR	1274365	AssignmentExpression	* dbg = ( RDebug * ) userptr		1274358	2		=			
ANR	1274366	Identifier	dbg		1274358	0					
ANR	1274367	CastExpression	( RDebug * ) userptr		1274358	1					
ANR	1274368	CastTarget	RDebug *		1274358	0					
ANR	1274369	Identifier	userptr		1274358	1					
ANR	1274370	ReturnStatement	"return r_debug_reg_get_err ( dbg , str , ok , NULL ) ;"	368:1:9799:9846	1274358	1	True				
ANR	1274371	CallExpression	"r_debug_reg_get_err ( dbg , str , ok , NULL )"		1274358	0					
ANR	1274372	Callee	r_debug_reg_get_err		1274358	0					
ANR	1274373	Identifier	r_debug_reg_get_err		1274358	0					
ANR	1274374	ArgumentList	dbg		1274358	1					
ANR	1274375	Argument	dbg		1274358	0					
ANR	1274376	Identifier	dbg		1274358	0					
ANR	1274377	Argument	str		1274358	1					
ANR	1274378	Identifier	str		1274358	0					
ANR	1274379	Argument	ok		1274358	2					
ANR	1274380	Identifier	ok		1274358	0					
ANR	1274381	Argument	NULL		1274358	3					
ANR	1274382	Identifier	NULL		1274358	0					
ANR	1274383	ReturnType	R_API ut64		1274358	1					
ANR	1274384	Identifier	r_debug_num_callback		1274358	2					
ANR	1274385	ParameterList	"RNum * userptr , const char * str , int * ok"		1274358	3					
ANR	1274386	Parameter	RNum * userptr	365:32:9697:9709	1274358	0	True				
ANR	1274387	ParameterType	RNum *		1274358	0					
ANR	1274388	Identifier	userptr		1274358	1					
ANR	1274389	Parameter	const char * str	365:47:9712:9726	1274358	1	True				
ANR	1274390	ParameterType	const char *		1274358	0					
ANR	1274391	Identifier	str		1274358	1					
ANR	1274392	Parameter	int * ok	365:64:9729:9735	1274358	2	True				
ANR	1274393	ParameterType	int *		1274358	0					
ANR	1274394	Identifier	ok		1274358	1					
ANR	1274395	CFGEntryNode	ENTRY		1274358		True				
ANR	1274396	CFGExitNode	EXIT		1274358		True				
ANR	1274397	Symbol	str		1274358						
ANR	1274398	Symbol	NULL		1274358						
ANR	1274399	Symbol	r_debug_reg_get_err		1274358						
ANR	1274400	Symbol	userptr		1274358						
ANR	1274401	Symbol	dbg		1274358						
ANR	1274402	Symbol	ok		1274358						
