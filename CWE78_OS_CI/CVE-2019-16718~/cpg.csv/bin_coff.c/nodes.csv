command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	502654	File	data/converged/CVE-2019-16718~_radare2/bin_coff.c								
ANR	502655	Function	get_sdb	10:0:164:372							
ANR	502656	FunctionDef	get_sdb (RBinFile * bf)		502655	0					
ANR	502657	CompoundStatement		10:34:198:372	502655	0					
ANR	502658	IdentifierDeclStatement	RBinObject * o = bf -> o ;	11:1:201:222	502655	0	True				
ANR	502659	IdentifierDecl	* o = bf -> o		502655	0					
ANR	502660	IdentifierDeclType	RBinObject *		502655	0					
ANR	502661	Identifier	o		502655	1					
ANR	502662	AssignmentExpression	* o = bf -> o		502655	2		=			
ANR	502663	Identifier	o		502655	0					
ANR	502664	PtrMemberAccess	bf -> o		502655	1					
ANR	502665	Identifier	bf		502655	0					
ANR	502666	Identifier	o		502655	1					
ANR	502667	IfStatement	if ( ! o )		502655	1					
ANR	502668	Condition	! o	12:5:229:230	502655	0	True				
ANR	502669	UnaryOperationExpression	! o		502655	0					
ANR	502670	UnaryOperator	!		502655	0					
ANR	502671	Identifier	o		502655	1					
ANR	502672	CompoundStatement		3:9:34:34	502655	1					
ANR	502673	ReturnStatement	return NULL ;	13:2:237:248	502655	0	True				
ANR	502674	Identifier	NULL		502655	0					
ANR	502675	IdentifierDeclStatement	struct r_bin_coff_obj * bin = ( struct r_bin_coff_obj * ) o -> bin_obj ;	15:1:254:319	502655	2	True				
ANR	502676	IdentifierDecl	* bin = ( struct r_bin_coff_obj * ) o -> bin_obj		502655	0					
ANR	502677	IdentifierDeclType	struct r_bin_coff_obj *		502655	0					
ANR	502678	Identifier	bin		502655	1					
ANR	502679	AssignmentExpression	* bin = ( struct r_bin_coff_obj * ) o -> bin_obj		502655	2		=			
ANR	502680	Identifier	bin		502655	0					
ANR	502681	CastExpression	( struct r_bin_coff_obj * ) o -> bin_obj		502655	1					
ANR	502682	CastTarget	struct r_bin_coff_obj *		502655	0					
ANR	502683	PtrMemberAccess	o -> bin_obj		502655	1					
ANR	502684	Identifier	o		502655	0					
ANR	502685	Identifier	bin_obj		502655	1					
ANR	502686	IfStatement	if ( bin -> kv )		502655	3					
ANR	502687	Condition	bin -> kv	16:5:326:332	502655	0	True				
ANR	502688	PtrMemberAccess	bin -> kv		502655	0					
ANR	502689	Identifier	bin		502655	0					
ANR	502690	Identifier	kv		502655	1					
ANR	502691	CompoundStatement		7:14:136:136	502655	1					
ANR	502692	ReturnStatement	return bin -> kv ;	17:2:339:353	502655	0	True				
ANR	502693	PtrMemberAccess	bin -> kv		502655	0					
ANR	502694	Identifier	bin		502655	0					
ANR	502695	Identifier	kv		502655	1					
ANR	502696	ReturnStatement	return NULL ;	19:1:359:370	502655	4	True				
ANR	502697	Identifier	NULL		502655	0					
ANR	502698	ReturnType	static Sdb *		502655	1					
ANR	502699	Identifier	get_sdb		502655	2					
ANR	502700	ParameterList	RBinFile * bf		502655	3					
ANR	502701	Parameter	RBinFile * bf	10:20:184:195	502655	0	True				
ANR	502702	ParameterType	RBinFile *		502655	0					
ANR	502703	Identifier	bf		502655	1					
ANR	502704	CFGEntryNode	ENTRY		502655		True				
ANR	502705	CFGExitNode	EXIT		502655		True				
ANR	502706	Symbol	NULL		502655						
ANR	502707	Symbol	bf		502655						
ANR	502708	Symbol	bf -> o		502655						
ANR	502709	Symbol	bin		502655						
ANR	502710	Symbol	* bf		502655						
ANR	502711	Symbol	* o		502655						
ANR	502712	Symbol	o -> bin_obj		502655						
ANR	502713	Symbol	bin -> kv		502655						
ANR	502714	Symbol	* bin		502655						
ANR	502715	Symbol	o		502655						
ANR	502716	Function	r_coff_is_stripped	22:0:375:544							
ANR	502717	FunctionDef	r_coff_is_stripped (struct r_bin_coff_obj * obj)		502716	0					
ANR	502718	CompoundStatement		22:59:434:544	502716	0					
ANR	502719	ReturnStatement	return ! ! ( obj -> hdr . f_flags & ( COFF_FLAGS_TI_F_RELFLG | COFF_FLAGS_TI_F_LNNO | COFF_FLAGS_TI_F_LSYMS ) ) ;	23:1:437:542	502716	0	True				
ANR	502720	UnaryOperationExpression	! ! ( obj -> hdr . f_flags & ( COFF_FLAGS_TI_F_RELFLG | COFF_FLAGS_TI_F_LNNO | COFF_FLAGS_TI_F_LSYMS ) )		502716	0					
ANR	502721	UnaryOperator	!		502716	0					
ANR	502722	UnaryOperationExpression	! ( obj -> hdr . f_flags & ( COFF_FLAGS_TI_F_RELFLG | COFF_FLAGS_TI_F_LNNO | COFF_FLAGS_TI_F_LSYMS ) )		502716	1					
ANR	502723	UnaryOperator	!		502716	0					
ANR	502724	BitAndExpression	obj -> hdr . f_flags & ( COFF_FLAGS_TI_F_RELFLG | COFF_FLAGS_TI_F_LNNO | COFF_FLAGS_TI_F_LSYMS )		502716	1		&			
ANR	502725	MemberAccess	obj -> hdr . f_flags		502716	0					
ANR	502726	PtrMemberAccess	obj -> hdr		502716	0					
ANR	502727	Identifier	obj		502716	0					
ANR	502728	Identifier	hdr		502716	1					
ANR	502729	Identifier	f_flags		502716	1					
ANR	502730	InclusiveOrExpression	COFF_FLAGS_TI_F_RELFLG | COFF_FLAGS_TI_F_LNNO | COFF_FLAGS_TI_F_LSYMS		502716	1		|			
ANR	502731	Identifier	COFF_FLAGS_TI_F_RELFLG		502716	0					
ANR	502732	InclusiveOrExpression	COFF_FLAGS_TI_F_LNNO | COFF_FLAGS_TI_F_LSYMS		502716	1		|			
ANR	502733	Identifier	COFF_FLAGS_TI_F_LNNO		502716	0					
ANR	502734	Identifier	COFF_FLAGS_TI_F_LSYMS		502716	1					
ANR	502735	ReturnType	static bool		502716	1					
ANR	502736	Identifier	r_coff_is_stripped		502716	2					
ANR	502737	ParameterList	struct r_bin_coff_obj * obj		502716	3					
ANR	502738	Parameter	struct r_bin_coff_obj * obj	22:31:406:431	502716	0	True				
ANR	502739	ParameterType	struct r_bin_coff_obj *		502716	0					
ANR	502740	Identifier	obj		502716	1					
ANR	502741	CFGEntryNode	ENTRY		502716		True				
ANR	502742	CFGExitNode	EXIT		502716		True				
ANR	502743	Symbol	COFF_FLAGS_TI_F_LNNO		502716						
ANR	502744	Symbol	* obj		502716						
ANR	502745	Symbol	obj -> hdr		502716						
ANR	502746	Symbol	obj -> hdr . f_flags		502716						
ANR	502747	Symbol	COFF_FLAGS_TI_F_LSYMS		502716						
ANR	502748	Symbol	obj		502716						
ANR	502749	Symbol	COFF_FLAGS_TI_F_RELFLG		502716						
ANR	502750	Function	load_buffer	27:0:547:725							
ANR	502751	FunctionDef	"load_buffer (RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb)"		502750	0					
ANR	502752	CompoundStatement		27:93:640:725	502750	0					
ANR	502753	ExpressionStatement	"* bin_obj = r_bin_coff_new_buf ( buf , bf -> rbin -> verbose )"	28:1:643:697	502750	0	True				
ANR	502754	AssignmentExpression	"* bin_obj = r_bin_coff_new_buf ( buf , bf -> rbin -> verbose )"		502750	0		=			
ANR	502755	UnaryOperationExpression	* bin_obj		502750	0					
ANR	502756	UnaryOperator	*		502750	0					
ANR	502757	Identifier	bin_obj		502750	1					
ANR	502758	CallExpression	"r_bin_coff_new_buf ( buf , bf -> rbin -> verbose )"		502750	1					
ANR	502759	Callee	r_bin_coff_new_buf		502750	0					
ANR	502760	Identifier	r_bin_coff_new_buf		502750	0					
ANR	502761	ArgumentList	buf		502750	1					
ANR	502762	Argument	buf		502750	0					
ANR	502763	Identifier	buf		502750	0					
ANR	502764	Argument	bf -> rbin -> verbose		502750	1					
ANR	502765	PtrMemberAccess	bf -> rbin -> verbose		502750	0					
ANR	502766	PtrMemberAccess	bf -> rbin		502750	0					
ANR	502767	Identifier	bf		502750	0					
ANR	502768	Identifier	rbin		502750	1					
ANR	502769	Identifier	verbose		502750	1					
ANR	502770	ReturnStatement	return * bin_obj != NULL ;	29:1:700:723	502750	1	True				
ANR	502771	EqualityExpression	* bin_obj != NULL		502750	0		!=			
ANR	502772	UnaryOperationExpression	* bin_obj		502750	0					
ANR	502773	UnaryOperator	*		502750	0					
ANR	502774	Identifier	bin_obj		502750	1					
ANR	502775	Identifier	NULL		502750	1					
ANR	502776	ReturnType	static bool		502750	1					
ANR	502777	Identifier	load_buffer		502750	2					
ANR	502778	ParameterList	"RBinFile * bf , void * * bin_obj , RBuffer * buf , ut64 loadaddr , Sdb * sdb"		502750	3					
ANR	502779	Parameter	RBinFile * bf	27:24:571:582	502750	0	True				
ANR	502780	ParameterType	RBinFile *		502750	0					
ANR	502781	Identifier	bf		502750	1					
ANR	502782	Parameter	void * * bin_obj	27:38:585:598	502750	1	True				
ANR	502783	ParameterType	void * *		502750	0					
ANR	502784	Identifier	bin_obj		502750	1					
ANR	502785	Parameter	RBuffer * buf	27:54:601:612	502750	2	True				
ANR	502786	ParameterType	RBuffer *		502750	0					
ANR	502787	Identifier	buf		502750	1					
ANR	502788	Parameter	ut64 loadaddr	27:68:615:627	502750	3	True				
ANR	502789	ParameterType	ut64		502750	0					
ANR	502790	Identifier	loadaddr		502750	1					
ANR	502791	Parameter	Sdb * sdb	27:83:630:637	502750	4	True				
ANR	502792	ParameterType	Sdb *		502750	0					
ANR	502793	Identifier	sdb		502750	1					
ANR	502794	CFGEntryNode	ENTRY		502750		True				
ANR	502795	CFGExitNode	EXIT		502750		True				
ANR	502796	Symbol	* bf -> rbin		502750						
ANR	502797	Symbol	* bin_obj		502750						
ANR	502798	Symbol	NULL		502750						
ANR	502799	Symbol	bf		502750						
ANR	502800	Symbol	bf -> rbin -> verbose		502750						
ANR	502801	Symbol	* bf		502750						
ANR	502802	Symbol	bf -> rbin		502750						
ANR	502803	Symbol	loadaddr		502750						
ANR	502804	Symbol	sdb		502750						
ANR	502805	Symbol	buf		502750						
ANR	502806	Symbol	* * bf		502750						
ANR	502807	Symbol	r_bin_coff_new_buf		502750						
ANR	502808	Symbol	bin_obj		502750						
ANR	502809	Function	destroy	32:0:728:823							
ANR	502810	FunctionDef	destroy (RBinFile * bf)		502809	0					
ANR	502811	CompoundStatement		32:34:762:823	502809	0					
ANR	502812	ExpressionStatement	r_bin_coff_free ( ( struct r_bin_coff_obj * ) bf -> o -> bin_obj )	33:1:765:821	502809	0	True				
ANR	502813	CallExpression	r_bin_coff_free ( ( struct r_bin_coff_obj * ) bf -> o -> bin_obj )		502809	0					
ANR	502814	Callee	r_bin_coff_free		502809	0					
ANR	502815	Identifier	r_bin_coff_free		502809	0					
ANR	502816	ArgumentList	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		502809	1					
ANR	502817	Argument	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		502809	0					
ANR	502818	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		502809	0					
ANR	502819	CastTarget	struct r_bin_coff_obj *		502809	0					
ANR	502820	PtrMemberAccess	bf -> o -> bin_obj		502809	1					
ANR	502821	PtrMemberAccess	bf -> o		502809	0					
ANR	502822	Identifier	bf		502809	0					
ANR	502823	Identifier	o		502809	1					
ANR	502824	Identifier	bin_obj		502809	1					
ANR	502825	ReturnType	static void		502809	1					
ANR	502826	Identifier	destroy		502809	2					
ANR	502827	ParameterList	RBinFile * bf		502809	3					
ANR	502828	Parameter	RBinFile * bf	32:20:748:759	502809	0	True				
ANR	502829	ParameterType	RBinFile *		502809	0					
ANR	502830	Identifier	bf		502809	1					
ANR	502831	CFGEntryNode	ENTRY		502809		True				
ANR	502832	CFGExitNode	EXIT		502809		True				
ANR	502833	Symbol	bf -> o -> bin_obj		502809						
ANR	502834	Symbol	* * bf		502809						
ANR	502835	Symbol	bf		502809						
ANR	502836	Symbol	bf -> o		502809						
ANR	502837	Symbol	* bf		502809						
ANR	502838	Symbol	* bf -> o		502809						
ANR	502839	Function	baddr	36:0:826:871							
ANR	502840	FunctionDef	baddr (RBinFile * bf)		502839	0					
ANR	502841	CompoundStatement		36:32:858:871	502839	0					
ANR	502842	ReturnStatement	return 0 ;	37:1:861:869	502839	0	True				
ANR	502843	PrimaryExpression	0		502839	0					
ANR	502844	ReturnType	static ut64		502839	1					
ANR	502845	Identifier	baddr		502839	2					
ANR	502846	ParameterList	RBinFile * bf		502839	3					
ANR	502847	Parameter	RBinFile * bf	36:18:844:855	502839	0	True				
ANR	502848	ParameterType	RBinFile *		502839	0					
ANR	502849	Identifier	bf		502839	1					
ANR	502850	CFGEntryNode	ENTRY		502839		True				
ANR	502851	CFGExitNode	EXIT		502839		True				
ANR	502852	Symbol	bf		502839						
ANR	502853	Function	binsym	40:0:874:937							
ANR	502854	FunctionDef	"binsym (RBinFile * bf , int sym)"		502853	0					
ANR	502855	CompoundStatement		40:47:921:937	502853	0					
ANR	502856	ReturnStatement	return NULL ;	41:1:924:935	502853	0	True				
ANR	502857	Identifier	NULL		502853	0					
ANR	502858	ReturnType	static RBinAddr *		502853	1					
ANR	502859	Identifier	binsym		502853	2					
ANR	502860	ParameterList	"RBinFile * bf , int sym"		502853	3					
ANR	502861	Parameter	RBinFile * bf	40:24:898:909	502853	0	True				
ANR	502862	ParameterType	RBinFile *		502853	0					
ANR	502863	Identifier	bf		502853	1					
ANR	502864	Parameter	int sym	40:38:912:918	502853	1	True				
ANR	502865	ParameterType	int		502853	0					
ANR	502866	Identifier	sym		502853	1					
ANR	502867	CFGEntryNode	ENTRY		502853		True				
ANR	502868	CFGExitNode	EXIT		502853		True				
ANR	502869	Symbol	NULL		502853						
ANR	502870	Symbol	bf		502853						
ANR	502871	Symbol	sym		502853						
ANR	502872	Function	_fill_bin_symbol	44:0:940:2282							
ANR	502873	FunctionDef	"_fill_bin_symbol (struct r_bin_coff_obj * bin , int idx , RBinSymbol * * sym)"		502872	0					
ANR	502874	CompoundStatement		44:84:1024:2282	502872	0					
ANR	502875	IdentifierDeclStatement	RBinSymbol * ptr = * sym ;	45:1:1027:1049	502872	0	True				
ANR	502876	IdentifierDecl	* ptr = * sym		502872	0					
ANR	502877	IdentifierDeclType	RBinSymbol *		502872	0					
ANR	502878	Identifier	ptr		502872	1					
ANR	502879	AssignmentExpression	* ptr = * sym		502872	2		=			
ANR	502880	Identifier	ptr		502872	0					
ANR	502881	UnaryOperationExpression	* sym		502872	1					
ANR	502882	UnaryOperator	*		502872	0					
ANR	502883	Identifier	sym		502872	1					
ANR	502884	IdentifierDeclStatement	struct coff_symbol * s = NULL ;	46:1:1052:1080	502872	1	True				
ANR	502885	IdentifierDecl	* s = NULL		502872	0					
ANR	502886	IdentifierDeclType	struct coff_symbol *		502872	0					
ANR	502887	Identifier	s		502872	1					
ANR	502888	AssignmentExpression	* s = NULL		502872	2		=			
ANR	502889	Identifier	NULL		502872	0					
ANR	502890	Identifier	NULL		502872	1					
ANR	502891	IfStatement	if ( idx < 0 || idx > bin -> hdr . f_nsyms )		502872	2					
ANR	502892	Condition	idx < 0 || idx > bin -> hdr . f_nsyms	47:5:1087:1119	502872	0	True				
ANR	502893	OrExpression	idx < 0 || idx > bin -> hdr . f_nsyms		502872	0		||			
ANR	502894	RelationalExpression	idx < 0		502872	0		<			
ANR	502895	Identifier	idx		502872	0					
ANR	502896	PrimaryExpression	0		502872	1					
ANR	502897	RelationalExpression	idx > bin -> hdr . f_nsyms		502872	1		>			
ANR	502898	Identifier	idx		502872	0					
ANR	502899	MemberAccess	bin -> hdr . f_nsyms		502872	1					
ANR	502900	PtrMemberAccess	bin -> hdr		502872	0					
ANR	502901	Identifier	bin		502872	0					
ANR	502902	Identifier	hdr		502872	1					
ANR	502903	Identifier	f_nsyms		502872	1					
ANR	502904	CompoundStatement		4:40:97:97	502872	1					
ANR	502905	ReturnStatement	return false ;	48:2:1126:1138	502872	0	True				
ANR	502906	Identifier	false		502872	0					
ANR	502907	IfStatement	if ( ! bin -> symbols )		502872	3					
ANR	502908	Condition	! bin -> symbols	50:5:1148:1160	502872	0	True				
ANR	502909	UnaryOperationExpression	! bin -> symbols		502872	0					
ANR	502910	UnaryOperator	!		502872	0					
ANR	502911	PtrMemberAccess	bin -> symbols		502872	1					
ANR	502912	Identifier	bin		502872	0					
ANR	502913	Identifier	symbols		502872	1					
ANR	502914	CompoundStatement		7:20:138:138	502872	1					
ANR	502915	ReturnStatement	return false ;	51:2:1167:1179	502872	0	True				
ANR	502916	Identifier	false		502872	0					
ANR	502917	ExpressionStatement	s = & bin -> symbols [ idx ]	53:1:1185:1207	502872	4	True				
ANR	502918	AssignmentExpression	s = & bin -> symbols [ idx ]		502872	0		=			
ANR	502919	Identifier	s		502872	0					
ANR	502920	UnaryOperationExpression	& bin -> symbols [ idx ]		502872	1					
ANR	502921	UnaryOperator	&		502872	0					
ANR	502922	ArrayIndexing	bin -> symbols [ idx ]		502872	1					
ANR	502923	PtrMemberAccess	bin -> symbols		502872	0					
ANR	502924	Identifier	bin		502872	0					
ANR	502925	Identifier	symbols		502872	1					
ANR	502926	Identifier	idx		502872	1					
ANR	502927	IdentifierDeclStatement	"char * coffname = r_coff_symbol_name ( bin , s ) ;"	54:1:1210:1254	502872	5	True				
ANR	502928	IdentifierDecl	"* coffname = r_coff_symbol_name ( bin , s )"		502872	0					
ANR	502929	IdentifierDeclType	char *		502872	0					
ANR	502930	Identifier	coffname		502872	1					
ANR	502931	AssignmentExpression	"* coffname = r_coff_symbol_name ( bin , s )"		502872	2		=			
ANR	502932	Identifier	coffname		502872	0					
ANR	502933	CallExpression	"r_coff_symbol_name ( bin , s )"		502872	1					
ANR	502934	Callee	r_coff_symbol_name		502872	0					
ANR	502935	Identifier	r_coff_symbol_name		502872	0					
ANR	502936	ArgumentList	bin		502872	1					
ANR	502937	Argument	bin		502872	0					
ANR	502938	Identifier	bin		502872	0					
ANR	502939	Argument	s		502872	1					
ANR	502940	Identifier	s		502872	0					
ANR	502941	IfStatement	if ( ! coffname )		502872	6					
ANR	502942	Condition	! coffname	55:5:1261:1269	502872	0	True				
ANR	502943	UnaryOperationExpression	! coffname		502872	0					
ANR	502944	UnaryOperator	!		502872	0					
ANR	502945	Identifier	coffname		502872	1					
ANR	502946	CompoundStatement		12:16:247:247	502872	1					
ANR	502947	ReturnStatement	return false ;	56:2:1276:1288	502872	0	True				
ANR	502948	Identifier	false		502872	0					
ANR	502949	ExpressionStatement	ptr -> name = strdup ( coffname )	58:1:1294:1323	502872	7	True				
ANR	502950	AssignmentExpression	ptr -> name = strdup ( coffname )		502872	0		=			
ANR	502951	PtrMemberAccess	ptr -> name		502872	0					
ANR	502952	Identifier	ptr		502872	0					
ANR	502953	Identifier	name		502872	1					
ANR	502954	CallExpression	strdup ( coffname )		502872	1					
ANR	502955	Callee	strdup		502872	0					
ANR	502956	Identifier	strdup		502872	0					
ANR	502957	ArgumentList	coffname		502872	1					
ANR	502958	Argument	coffname		502872	0					
ANR	502959	Identifier	coffname		502872	0					
ANR	502960	ExpressionStatement	free ( coffname )	59:1:1326:1341	502872	8	True				
ANR	502961	CallExpression	free ( coffname )		502872	0					
ANR	502962	Callee	free		502872	0					
ANR	502963	Identifier	free		502872	0					
ANR	502964	ArgumentList	coffname		502872	1					
ANR	502965	Argument	coffname		502872	0					
ANR	502966	Identifier	coffname		502872	0					
ANR	502967	ExpressionStatement	"ptr -> forwarder = r_str_const ( ""NONE"" )"	60:1:1344:1381	502872	9	True				
ANR	502968	AssignmentExpression	"ptr -> forwarder = r_str_const ( ""NONE"" )"		502872	0		=			
ANR	502969	PtrMemberAccess	ptr -> forwarder		502872	0					
ANR	502970	Identifier	ptr		502872	0					
ANR	502971	Identifier	forwarder		502872	1					
ANR	502972	CallExpression	"r_str_const ( ""NONE"" )"		502872	1					
ANR	502973	Callee	r_str_const		502872	0					
ANR	502974	Identifier	r_str_const		502872	0					
ANR	502975	ArgumentList	"""NONE"""		502872	1					
ANR	502976	Argument	"""NONE"""		502872	0					
ANR	502977	PrimaryExpression	"""NONE"""		502872	0					
ANR	502978	SwitchStatement	switch ( s -> n_sclass )		502872	10					
ANR	502979	Condition	s -> n_sclass	62:9:1393:1403	502872	0	True				
ANR	502980	PtrMemberAccess	s -> n_sclass		502872	0					
ANR	502981	Identifier	s		502872	0					
ANR	502982	Identifier	n_sclass		502872	1					
ANR	502983	CompoundStatement		19:22:381:381	502872	1					
ANR	502984	Label	case COFF_SYM_CLASS_FUNCTION :	63:1:1409:1437	502872	0	True				
ANR	502985	Identifier	COFF_SYM_CLASS_FUNCTION		502872	0					
ANR	502986	ExpressionStatement	ptr -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )	64:2:1441:1486	502872	1	True				
ANR	502987	AssignmentExpression	ptr -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )		502872	0		=			
ANR	502988	PtrMemberAccess	ptr -> type		502872	0					
ANR	502989	Identifier	ptr		502872	0					
ANR	502990	Identifier	type		502872	1					
ANR	502991	CallExpression	r_str_const ( R_BIN_TYPE_FUNC_STR )		502872	1					
ANR	502992	Callee	r_str_const		502872	0					
ANR	502993	Identifier	r_str_const		502872	0					
ANR	502994	ArgumentList	R_BIN_TYPE_FUNC_STR		502872	1					
ANR	502995	Argument	R_BIN_TYPE_FUNC_STR		502872	0					
ANR	502996	Identifier	R_BIN_TYPE_FUNC_STR		502872	0					
ANR	502997	BreakStatement	break ;	65:2:1490:1495	502872	2	True				
ANR	502998	Label	case COFF_SYM_CLASS_FILE :	66:1:1498:1522	502872	3	True				
ANR	502999	Identifier	COFF_SYM_CLASS_FILE		502872	0					
ANR	503000	ExpressionStatement	"ptr -> type = r_str_const ( ""FILE"" )"	67:2:1526:1558	502872	4	True				
ANR	503001	AssignmentExpression	"ptr -> type = r_str_const ( ""FILE"" )"		502872	0		=			
ANR	503002	PtrMemberAccess	ptr -> type		502872	0					
ANR	503003	Identifier	ptr		502872	0					
ANR	503004	Identifier	type		502872	1					
ANR	503005	CallExpression	"r_str_const ( ""FILE"" )"		502872	1					
ANR	503006	Callee	r_str_const		502872	0					
ANR	503007	Identifier	r_str_const		502872	0					
ANR	503008	ArgumentList	"""FILE"""		502872	1					
ANR	503009	Argument	"""FILE"""		502872	0					
ANR	503010	PrimaryExpression	"""FILE"""		502872	0					
ANR	503011	BreakStatement	break ;	68:2:1562:1567	502872	5	True				
ANR	503012	Label	case COFF_SYM_CLASS_SECTION :	69:1:1570:1597	502872	6	True				
ANR	503013	Identifier	COFF_SYM_CLASS_SECTION		502872	0					
ANR	503014	ExpressionStatement	ptr -> type = r_str_const ( R_BIN_TYPE_SECTION_STR )	70:2:1601:1649	502872	7	True				
ANR	503015	AssignmentExpression	ptr -> type = r_str_const ( R_BIN_TYPE_SECTION_STR )		502872	0		=			
ANR	503016	PtrMemberAccess	ptr -> type		502872	0					
ANR	503017	Identifier	ptr		502872	0					
ANR	503018	Identifier	type		502872	1					
ANR	503019	CallExpression	r_str_const ( R_BIN_TYPE_SECTION_STR )		502872	1					
ANR	503020	Callee	r_str_const		502872	0					
ANR	503021	Identifier	r_str_const		502872	0					
ANR	503022	ArgumentList	R_BIN_TYPE_SECTION_STR		502872	1					
ANR	503023	Argument	R_BIN_TYPE_SECTION_STR		502872	0					
ANR	503024	Identifier	R_BIN_TYPE_SECTION_STR		502872	0					
ANR	503025	BreakStatement	break ;	71:2:1653:1658	502872	8	True				
ANR	503026	Label	case COFF_SYM_CLASS_EXTERNAL :	72:1:1661:1689	502872	9	True				
ANR	503027	Identifier	COFF_SYM_CLASS_EXTERNAL		502872	0					
ANR	503028	IfStatement	if ( bin -> symbols [ idx ] . n_scnum )		502872	10					
ANR	503029	Condition	bin -> symbols [ idx ] . n_scnum	73:6:1732:1756	502872	0	True				
ANR	503030	MemberAccess	bin -> symbols [ idx ] . n_scnum		502872	0					
ANR	503031	ArrayIndexing	bin -> symbols [ idx ]		502872	0					
ANR	503032	PtrMemberAccess	bin -> symbols		502872	0					
ANR	503033	Identifier	bin		502872	0					
ANR	503034	Identifier	symbols		502872	1					
ANR	503035	Identifier	idx		502872	1					
ANR	503036	Identifier	n_scnum		502872	1					
ANR	503037	CompoundStatement		30:33:734:734	502872	1					
ANR	503038	ExpressionStatement	ptr -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )	74:3:1764:1809	502872	0	True				
ANR	503039	AssignmentExpression	ptr -> type = r_str_const ( R_BIN_TYPE_FUNC_STR )		502872	0		=			
ANR	503040	PtrMemberAccess	ptr -> type		502872	0					
ANR	503041	Identifier	ptr		502872	0					
ANR	503042	Identifier	type		502872	1					
ANR	503043	CallExpression	r_str_const ( R_BIN_TYPE_FUNC_STR )		502872	1					
ANR	503044	Callee	r_str_const		502872	0					
ANR	503045	Identifier	r_str_const		502872	0					
ANR	503046	ArgumentList	R_BIN_TYPE_FUNC_STR		502872	1					
ANR	503047	Argument	R_BIN_TYPE_FUNC_STR		502872	0					
ANR	503048	Identifier	R_BIN_TYPE_FUNC_STR		502872	0					
ANR	503049	ElseStatement	else		502872	0					
ANR	503050	CompoundStatement		32:9:795:795	502872	0					
ANR	503051	ExpressionStatement	"ptr -> type = r_str_const ( ""EXTERNAL"" )"	76:3:1825:1861	502872	0	True				
ANR	503052	AssignmentExpression	"ptr -> type = r_str_const ( ""EXTERNAL"" )"		502872	0		=			
ANR	503053	PtrMemberAccess	ptr -> type		502872	0					
ANR	503054	Identifier	ptr		502872	0					
ANR	503055	Identifier	type		502872	1					
ANR	503056	CallExpression	"r_str_const ( ""EXTERNAL"" )"		502872	1					
ANR	503057	Callee	r_str_const		502872	0					
ANR	503058	Identifier	r_str_const		502872	0					
ANR	503059	ArgumentList	"""EXTERNAL"""		502872	1					
ANR	503060	Argument	"""EXTERNAL"""		502872	0					
ANR	503061	PrimaryExpression	"""EXTERNAL"""		502872	0					
ANR	503062	BreakStatement	break ;	78:2:1869:1874	502872	11	True				
ANR	503063	Label	case COFF_SYM_CLASS_STATIC :	79:1:1877:1903	502872	12	True				
ANR	503064	Identifier	COFF_SYM_CLASS_STATIC		502872	0					
ANR	503065	ExpressionStatement	"ptr -> type = r_str_const ( ""STATIC"" )"	80:2:1907:1941	502872	13	True				
ANR	503066	AssignmentExpression	"ptr -> type = r_str_const ( ""STATIC"" )"		502872	0		=			
ANR	503067	PtrMemberAccess	ptr -> type		502872	0					
ANR	503068	Identifier	ptr		502872	0					
ANR	503069	Identifier	type		502872	1					
ANR	503070	CallExpression	"r_str_const ( ""STATIC"" )"		502872	1					
ANR	503071	Callee	r_str_const		502872	0					
ANR	503072	Identifier	r_str_const		502872	0					
ANR	503073	ArgumentList	"""STATIC"""		502872	1					
ANR	503074	Argument	"""STATIC"""		502872	0					
ANR	503075	PrimaryExpression	"""STATIC"""		502872	0					
ANR	503076	BreakStatement	break ;	81:2:1945:1950	502872	14	True				
ANR	503077	Label	default :	82:1:1953:1960	502872	15	True				
ANR	503078	Identifier	default		502872	0					
ANR	503079	ExpressionStatement	"ptr -> type = r_str_const ( sdb_fmt ( ""%i"" , s -> n_sclass ) )"	83:2:1964:2017	502872	16	True				
ANR	503080	AssignmentExpression	"ptr -> type = r_str_const ( sdb_fmt ( ""%i"" , s -> n_sclass ) )"		502872	0		=			
ANR	503081	PtrMemberAccess	ptr -> type		502872	0					
ANR	503082	Identifier	ptr		502872	0					
ANR	503083	Identifier	type		502872	1					
ANR	503084	CallExpression	"r_str_const ( sdb_fmt ( ""%i"" , s -> n_sclass ) )"		502872	1					
ANR	503085	Callee	r_str_const		502872	0					
ANR	503086	Identifier	r_str_const		502872	0					
ANR	503087	ArgumentList	"sdb_fmt ( ""%i"" , s -> n_sclass )"		502872	1					
ANR	503088	Argument	"sdb_fmt ( ""%i"" , s -> n_sclass )"		502872	0					
ANR	503089	CallExpression	"sdb_fmt ( ""%i"" , s -> n_sclass )"		502872	0					
ANR	503090	Callee	sdb_fmt		502872	0					
ANR	503091	Identifier	sdb_fmt		502872	0					
ANR	503092	ArgumentList	"""%i"""		502872	1					
ANR	503093	Argument	"""%i"""		502872	0					
ANR	503094	PrimaryExpression	"""%i"""		502872	0					
ANR	503095	Argument	s -> n_sclass		502872	1					
ANR	503096	PtrMemberAccess	s -> n_sclass		502872	0					
ANR	503097	Identifier	s		502872	0					
ANR	503098	Identifier	n_sclass		502872	1					
ANR	503099	BreakStatement	break ;	84:2:2021:2026	502872	17	True				
ANR	503100	IfStatement	if ( bin -> symbols [ idx ] . n_scnum < bin -> hdr . f_nscns + 1 && bin -> symbols [ idx ] . n_scnum > 0 )		502872	11					
ANR	503101	Condition	bin -> symbols [ idx ] . n_scnum < bin -> hdr . f_nscns + 1 && bin -> symbols [ idx ] . n_scnum > 0	86:5:2036:2121	502872	0	True				
ANR	503102	AndExpression	bin -> symbols [ idx ] . n_scnum < bin -> hdr . f_nscns + 1 && bin -> symbols [ idx ] . n_scnum > 0		502872	0		&&			
ANR	503103	RelationalExpression	bin -> symbols [ idx ] . n_scnum < bin -> hdr . f_nscns + 1		502872	0		<			
ANR	503104	MemberAccess	bin -> symbols [ idx ] . n_scnum		502872	0					
ANR	503105	ArrayIndexing	bin -> symbols [ idx ]		502872	0					
ANR	503106	PtrMemberAccess	bin -> symbols		502872	0					
ANR	503107	Identifier	bin		502872	0					
ANR	503108	Identifier	symbols		502872	1					
ANR	503109	Identifier	idx		502872	1					
ANR	503110	Identifier	n_scnum		502872	1					
ANR	503111	AdditiveExpression	bin -> hdr . f_nscns + 1		502872	1		+			
ANR	503112	MemberAccess	bin -> hdr . f_nscns		502872	0					
ANR	503113	PtrMemberAccess	bin -> hdr		502872	0					
ANR	503114	Identifier	bin		502872	0					
ANR	503115	Identifier	hdr		502872	1					
ANR	503116	Identifier	f_nscns		502872	1					
ANR	503117	PrimaryExpression	1		502872	1					
ANR	503118	RelationalExpression	bin -> symbols [ idx ] . n_scnum > 0		502872	1		>			
ANR	503119	MemberAccess	bin -> symbols [ idx ] . n_scnum		502872	0					
ANR	503120	ArrayIndexing	bin -> symbols [ idx ]		502872	0					
ANR	503121	PtrMemberAccess	bin -> symbols		502872	0					
ANR	503122	Identifier	bin		502872	0					
ANR	503123	Identifier	symbols		502872	1					
ANR	503124	Identifier	idx		502872	1					
ANR	503125	Identifier	n_scnum		502872	1					
ANR	503126	PrimaryExpression	0		502872	1					
ANR	503127	CompoundStatement		44:36:1099:1099	502872	1					
ANR	503128	ExpressionStatement	ptr -> paddr = bin -> scn_hdrs [ s -> n_scnum - 1 ] . s_scnptr + s -> n_value	89:2:2164:2228	502872	0	True				
ANR	503129	AssignmentExpression	ptr -> paddr = bin -> scn_hdrs [ s -> n_scnum - 1 ] . s_scnptr + s -> n_value		502872	0		=			
ANR	503130	PtrMemberAccess	ptr -> paddr		502872	0					
ANR	503131	Identifier	ptr		502872	0					
ANR	503132	Identifier	paddr		502872	1					
ANR	503133	AdditiveExpression	bin -> scn_hdrs [ s -> n_scnum - 1 ] . s_scnptr + s -> n_value		502872	1		+			
ANR	503134	MemberAccess	bin -> scn_hdrs [ s -> n_scnum - 1 ] . s_scnptr		502872	0					
ANR	503135	ArrayIndexing	bin -> scn_hdrs [ s -> n_scnum - 1 ]		502872	0					
ANR	503136	PtrMemberAccess	bin -> scn_hdrs		502872	0					
ANR	503137	Identifier	bin		502872	0					
ANR	503138	Identifier	scn_hdrs		502872	1					
ANR	503139	AdditiveExpression	s -> n_scnum - 1		502872	1		-			
ANR	503140	PtrMemberAccess	s -> n_scnum		502872	0					
ANR	503141	Identifier	s		502872	0					
ANR	503142	Identifier	n_scnum		502872	1					
ANR	503143	PrimaryExpression	1		502872	1					
ANR	503144	Identifier	s_scnptr		502872	1					
ANR	503145	PtrMemberAccess	s -> n_value		502872	1					
ANR	503146	Identifier	s		502872	0					
ANR	503147	Identifier	n_value		502872	1					
ANR	503148	ExpressionStatement	ptr -> size = 4	91:1:2234:2247	502872	12	True				
ANR	503149	AssignmentExpression	ptr -> size = 4		502872	0		=			
ANR	503150	PtrMemberAccess	ptr -> size		502872	0					
ANR	503151	Identifier	ptr		502872	0					
ANR	503152	Identifier	size		502872	1					
ANR	503153	PrimaryExpression	4		502872	1					
ANR	503154	ExpressionStatement	ptr -> ordinal = 0	92:1:2250:2266	502872	13	True				
ANR	503155	AssignmentExpression	ptr -> ordinal = 0		502872	0		=			
ANR	503156	PtrMemberAccess	ptr -> ordinal		502872	0					
ANR	503157	Identifier	ptr		502872	0					
ANR	503158	Identifier	ordinal		502872	1					
ANR	503159	PrimaryExpression	0		502872	1					
ANR	503160	ReturnStatement	return true ;	93:1:2269:2280	502872	14	True				
ANR	503161	Identifier	true		502872	0					
ANR	503162	ReturnType	static bool		502872	1					
ANR	503163	Identifier	_fill_bin_symbol		502872	2					
ANR	503164	ParameterList	"struct r_bin_coff_obj * bin , int idx , RBinSymbol * * sym"		502872	3					
ANR	503165	Parameter	struct r_bin_coff_obj * bin	44:29:969:994	502872	0	True				
ANR	503166	ParameterType	struct r_bin_coff_obj *		502872	0					
ANR	503167	Identifier	bin		502872	1					
ANR	503168	Parameter	int idx	44:57:997:1003	502872	1	True				
ANR	503169	ParameterType	int		502872	0					
ANR	503170	Identifier	idx		502872	1					
ANR	503171	Parameter	RBinSymbol * * sym	44:66:1006:1021	502872	2	True				
ANR	503172	ParameterType	RBinSymbol * *		502872	0					
ANR	503173	Identifier	sym		502872	1					
ANR	503174	CFGEntryNode	ENTRY		502872		True				
ANR	503175	CFGExitNode	EXIT		502872		True				
ANR	503176	Symbol	ptr -> paddr		502872						
ANR	503177	Symbol	ptr -> forwarder		502872						
ANR	503178	Symbol	s -> n_value		502872						
ANR	503179	Symbol	bin		502872						
ANR	503180	Symbol	sym		502872						
ANR	503181	Symbol	ptr -> name		502872						
ANR	503182	Symbol	R_BIN_TYPE_SECTION_STR		502872						
ANR	503183	Symbol	bin -> scn_hdrs [ s -> n_scnum - 1 ] . s_scnptr		502872						
ANR	503184	Symbol	r_coff_symbol_name		502872						
ANR	503185	Symbol	* bin		502872						
ANR	503186	Symbol	s -> n_scnum		502872						
ANR	503187	Symbol	R_BIN_TYPE_FUNC_STR		502872						
ANR	503188	Symbol	* bin -> scn_hdrs		502872						
ANR	503189	Symbol	s -> n_sclass		502872						
ANR	503190	Symbol	* ptr		502872						
ANR	503191	Symbol	* idx		502872						
ANR	503192	Symbol	* * s		502872						
ANR	503193	Symbol	* * bin		502872						
ANR	503194	Symbol	sdb_fmt		502872						
ANR	503195	Symbol	r_str_const		502872						
ANR	503196	Symbol	NULL		502872						
ANR	503197	Symbol	bin -> symbols		502872						
ANR	503198	Symbol	bin -> symbols [ idx ] . n_scnum		502872						
ANR	503199	Symbol	ptr -> type		502872						
ANR	503200	Symbol	bin -> scn_hdrs		502872						
ANR	503201	Symbol	false		502872						
ANR	503202	Symbol	bin -> hdr . f_nscns		502872						
ANR	503203	Symbol	* s -> n_scnum		502872						
ANR	503204	Symbol	ptr -> size		502872						
ANR	503205	Symbol	ptr		502872						
ANR	503206	Symbol	coffname		502872						
ANR	503207	Symbol	* sym		502872						
ANR	503208	Symbol	s		502872						
ANR	503209	Symbol	true		502872						
ANR	503210	Symbol	* bin -> symbols		502872						
ANR	503211	Symbol	bin -> hdr		502872						
ANR	503212	Symbol	bin -> hdr . f_nsyms		502872						
ANR	503213	Symbol	strdup		502872						
ANR	503214	Symbol	idx		502872						
ANR	503215	Symbol	* s		502872						
ANR	503216	Symbol	ptr -> ordinal		502872						
ANR	503217	Function	_fill_bin_import	96:0:2285:2824							
ANR	503218	FunctionDef	"_fill_bin_import (struct r_bin_coff_obj * bin , int idx)"		503217	0					
ANR	503219	CompoundStatement		96:73:2358:2824	503217	0					
ANR	503220	IdentifierDeclStatement	RBinImport * ptr = R_NEW0 ( RBinImport ) ;	97:1:2361:2398	503217	0	True				
ANR	503221	IdentifierDecl	* ptr = R_NEW0 ( RBinImport )		503217	0					
ANR	503222	IdentifierDeclType	RBinImport *		503217	0					
ANR	503223	Identifier	ptr		503217	1					
ANR	503224	AssignmentExpression	* ptr = R_NEW0 ( RBinImport )		503217	2		=			
ANR	503225	Identifier	ptr		503217	0					
ANR	503226	CallExpression	R_NEW0 ( RBinImport )		503217	1					
ANR	503227	Callee	R_NEW0		503217	0					
ANR	503228	Identifier	R_NEW0		503217	0					
ANR	503229	ArgumentList	RBinImport		503217	1					
ANR	503230	Argument	RBinImport		503217	0					
ANR	503231	Identifier	RBinImport		503217	0					
ANR	503232	IfStatement	if ( ! ptr || idx < 0 || idx > bin -> hdr . f_nsyms )		503217	1					
ANR	503233	Condition	! ptr || idx < 0 || idx > bin -> hdr . f_nsyms	98:5:2405:2445	503217	0	True				
ANR	503234	OrExpression	! ptr || idx < 0 || idx > bin -> hdr . f_nsyms		503217	0		||			
ANR	503235	UnaryOperationExpression	! ptr		503217	0					
ANR	503236	UnaryOperator	!		503217	0					
ANR	503237	Identifier	ptr		503217	1					
ANR	503238	OrExpression	idx < 0 || idx > bin -> hdr . f_nsyms		503217	1		||			
ANR	503239	RelationalExpression	idx < 0		503217	0		<			
ANR	503240	Identifier	idx		503217	0					
ANR	503241	PrimaryExpression	0		503217	1					
ANR	503242	RelationalExpression	idx > bin -> hdr . f_nsyms		503217	1		>			
ANR	503243	Identifier	idx		503217	0					
ANR	503244	MemberAccess	bin -> hdr . f_nsyms		503217	1					
ANR	503245	PtrMemberAccess	bin -> hdr		503217	0					
ANR	503246	Identifier	bin		503217	0					
ANR	503247	Identifier	hdr		503217	1					
ANR	503248	Identifier	f_nsyms		503217	1					
ANR	503249	CompoundStatement		3:48:89:89	503217	1					
ANR	503250	ExpressionStatement	R_FREE ( ptr )	99:2:2452:2464	503217	0	True				
ANR	503251	CallExpression	R_FREE ( ptr )		503217	0					
ANR	503252	Callee	R_FREE		503217	0					
ANR	503253	Identifier	R_FREE		503217	0					
ANR	503254	ArgumentList	ptr		503217	1					
ANR	503255	Argument	ptr		503217	0					
ANR	503256	Identifier	ptr		503217	0					
ANR	503257	ReturnStatement	return NULL ;	100:2:2468:2479	503217	1	True				
ANR	503258	Identifier	NULL		503217	0					
ANR	503259	IdentifierDeclStatement	struct coff_symbol * s = & bin -> symbols [ idx ] ;	102:1:2485:2527	503217	2	True				
ANR	503260	IdentifierDecl	* s = & bin -> symbols [ idx ]		503217	0					
ANR	503261	IdentifierDeclType	struct coff_symbol *		503217	0					
ANR	503262	Identifier	s		503217	1					
ANR	503263	AssignmentExpression	* s = & bin -> symbols [ idx ]		503217	2		=			
ANR	503264	Identifier	s		503217	0					
ANR	503265	UnaryOperationExpression	& bin -> symbols [ idx ]		503217	1					
ANR	503266	UnaryOperator	&		503217	0					
ANR	503267	ArrayIndexing	bin -> symbols [ idx ]		503217	1					
ANR	503268	PtrMemberAccess	bin -> symbols		503217	0					
ANR	503269	Identifier	bin		503217	0					
ANR	503270	Identifier	symbols		503217	1					
ANR	503271	Identifier	idx		503217	1					
ANR	503272	IfStatement	if ( s -> n_sclass != COFF_SYM_CLASS_EXTERNAL )		503217	3					
ANR	503273	Condition	s -> n_sclass != COFF_SYM_CLASS_EXTERNAL	103:5:2534:2571	503217	0	True				
ANR	503274	EqualityExpression	s -> n_sclass != COFF_SYM_CLASS_EXTERNAL		503217	0		!=			
ANR	503275	PtrMemberAccess	s -> n_sclass		503217	0					
ANR	503276	Identifier	s		503217	0					
ANR	503277	Identifier	n_sclass		503217	1					
ANR	503278	Identifier	COFF_SYM_CLASS_EXTERNAL		503217	1					
ANR	503279	CompoundStatement		8:45:215:215	503217	1					
ANR	503280	ExpressionStatement	R_FREE ( ptr )	104:2:2578:2590	503217	0	True				
ANR	503281	CallExpression	R_FREE ( ptr )		503217	0					
ANR	503282	Callee	R_FREE		503217	0					
ANR	503283	Identifier	R_FREE		503217	0					
ANR	503284	ArgumentList	ptr		503217	1					
ANR	503285	Argument	ptr		503217	0					
ANR	503286	Identifier	ptr		503217	0					
ANR	503287	ReturnStatement	return NULL ;	105:2:2594:2605	503217	1	True				
ANR	503288	Identifier	NULL		503217	0					
ANR	503289	IdentifierDeclStatement	"char * coffname = r_coff_symbol_name ( bin , s ) ;"	107:1:2611:2655	503217	4	True				
ANR	503290	IdentifierDecl	"* coffname = r_coff_symbol_name ( bin , s )"		503217	0					
ANR	503291	IdentifierDeclType	char *		503217	0					
ANR	503292	Identifier	coffname		503217	1					
ANR	503293	AssignmentExpression	"* coffname = r_coff_symbol_name ( bin , s )"		503217	2		=			
ANR	503294	Identifier	coffname		503217	0					
ANR	503295	CallExpression	"r_coff_symbol_name ( bin , s )"		503217	1					
ANR	503296	Callee	r_coff_symbol_name		503217	0					
ANR	503297	Identifier	r_coff_symbol_name		503217	0					
ANR	503298	ArgumentList	bin		503217	1					
ANR	503299	Argument	bin		503217	0					
ANR	503300	Identifier	bin		503217	0					
ANR	503301	Argument	s		503217	1					
ANR	503302	Identifier	s		503217	0					
ANR	503303	IfStatement	if ( ! coffname )		503217	5					
ANR	503304	Condition	! coffname	108:5:2662:2670	503217	0	True				
ANR	503305	UnaryOperationExpression	! coffname		503217	0					
ANR	503306	UnaryOperator	!		503217	0					
ANR	503307	Identifier	coffname		503217	1					
ANR	503308	CompoundStatement		13:16:314:314	503217	1					
ANR	503309	ExpressionStatement	R_FREE ( ptr )	109:2:2677:2689	503217	0	True				
ANR	503310	CallExpression	R_FREE ( ptr )		503217	0					
ANR	503311	Callee	R_FREE		503217	0					
ANR	503312	Identifier	R_FREE		503217	0					
ANR	503313	ArgumentList	ptr		503217	1					
ANR	503314	Argument	ptr		503217	0					
ANR	503315	Identifier	ptr		503217	0					
ANR	503316	ReturnStatement	return NULL ;	110:2:2693:2704	503217	1	True				
ANR	503317	Identifier	NULL		503217	0					
ANR	503318	ExpressionStatement	ptr -> name = strdup ( coffname )	112:1:2710:2739	503217	6	True				
ANR	503319	AssignmentExpression	ptr -> name = strdup ( coffname )		503217	0		=			
ANR	503320	PtrMemberAccess	ptr -> name		503217	0					
ANR	503321	Identifier	ptr		503217	0					
ANR	503322	Identifier	name		503217	1					
ANR	503323	CallExpression	strdup ( coffname )		503217	1					
ANR	503324	Callee	strdup		503217	0					
ANR	503325	Identifier	strdup		503217	0					
ANR	503326	ArgumentList	coffname		503217	1					
ANR	503327	Argument	coffname		503217	0					
ANR	503328	Identifier	coffname		503217	0					
ANR	503329	ExpressionStatement	"ptr -> bind = r_str_const ( ""NONE"" )"	113:1:2742:2774	503217	7	True				
ANR	503330	AssignmentExpression	"ptr -> bind = r_str_const ( ""NONE"" )"		503217	0		=			
ANR	503331	PtrMemberAccess	ptr -> bind		503217	0					
ANR	503332	Identifier	ptr		503217	0					
ANR	503333	Identifier	bind		503217	1					
ANR	503334	CallExpression	"r_str_const ( ""NONE"" )"		503217	1					
ANR	503335	Callee	r_str_const		503217	0					
ANR	503336	Identifier	r_str_const		503217	0					
ANR	503337	ArgumentList	"""NONE"""		503217	1					
ANR	503338	Argument	"""NONE"""		503217	0					
ANR	503339	PrimaryExpression	"""NONE"""		503217	0					
ANR	503340	ExpressionStatement	"ptr -> type = r_str_const ( ""FUNC"" )"	114:1:2777:2809	503217	8	True				
ANR	503341	AssignmentExpression	"ptr -> type = r_str_const ( ""FUNC"" )"		503217	0		=			
ANR	503342	PtrMemberAccess	ptr -> type		503217	0					
ANR	503343	Identifier	ptr		503217	0					
ANR	503344	Identifier	type		503217	1					
ANR	503345	CallExpression	"r_str_const ( ""FUNC"" )"		503217	1					
ANR	503346	Callee	r_str_const		503217	0					
ANR	503347	Identifier	r_str_const		503217	0					
ANR	503348	ArgumentList	"""FUNC"""		503217	1					
ANR	503349	Argument	"""FUNC"""		503217	0					
ANR	503350	PrimaryExpression	"""FUNC"""		503217	0					
ANR	503351	ReturnStatement	return ptr ;	115:1:2812:2822	503217	9	True				
ANR	503352	Identifier	ptr		503217	0					
ANR	503353	ReturnType	static RBinImport *		503217	1					
ANR	503354	Identifier	_fill_bin_import		503217	2					
ANR	503355	ParameterList	"struct r_bin_coff_obj * bin , int idx"		503217	3					
ANR	503356	Parameter	struct r_bin_coff_obj * bin	96:36:2321:2346	503217	0	True				
ANR	503357	ParameterType	struct r_bin_coff_obj *		503217	0					
ANR	503358	Identifier	bin		503217	1					
ANR	503359	Parameter	int idx	96:64:2349:2355	503217	1	True				
ANR	503360	ParameterType	int		503217	0					
ANR	503361	Identifier	idx		503217	1					
ANR	503362	CFGEntryNode	ENTRY		503217		True				
ANR	503363	CFGExitNode	EXIT		503217		True				
ANR	503364	Symbol	RBinImport		503217						
ANR	503365	Symbol	r_str_const		503217						
ANR	503366	Symbol	NULL		503217						
ANR	503367	Symbol	bin -> symbols		503217						
ANR	503368	Symbol	ptr -> type		503217						
ANR	503369	Symbol	bin		503217						
ANR	503370	Symbol	COFF_SYM_CLASS_EXTERNAL		503217						
ANR	503371	Symbol	ptr -> name		503217						
ANR	503372	Symbol	r_coff_symbol_name		503217						
ANR	503373	Symbol	* bin		503217						
ANR	503374	Symbol	ptr		503217						
ANR	503375	Symbol	coffname		503217						
ANR	503376	Symbol	ptr -> bind		503217						
ANR	503377	Symbol	R_NEW0		503217						
ANR	503378	Symbol	s		503217						
ANR	503379	Symbol	s -> n_sclass		503217						
ANR	503380	Symbol	* ptr		503217						
ANR	503381	Symbol	bin -> hdr		503217						
ANR	503382	Symbol	bin -> hdr . f_nsyms		503217						
ANR	503383	Symbol	strdup		503217						
ANR	503384	Symbol	idx		503217						
ANR	503385	Symbol	* s		503217						
ANR	503386	Function	entries	118:0:2827:3099							
ANR	503387	FunctionDef	entries (RBinFile * bf)		503386	0					
ANR	503388	CompoundStatement		118:36:2863:3099	503386	0					
ANR	503389	IdentifierDeclStatement	struct r_bin_coff_obj * obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj ;	119:1:2866:2933	503386	0	True				
ANR	503390	IdentifierDecl	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503386	0					
ANR	503391	IdentifierDeclType	struct r_bin_coff_obj *		503386	0					
ANR	503392	Identifier	obj		503386	1					
ANR	503393	AssignmentExpression	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503386	2		=			
ANR	503394	Identifier	obj		503386	0					
ANR	503395	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503386	1					
ANR	503396	CastTarget	struct r_bin_coff_obj *		503386	0					
ANR	503397	PtrMemberAccess	bf -> o -> bin_obj		503386	1					
ANR	503398	PtrMemberAccess	bf -> o		503386	0					
ANR	503399	Identifier	bf		503386	0					
ANR	503400	Identifier	o		503386	1					
ANR	503401	Identifier	bin_obj		503386	1					
ANR	503402	IdentifierDeclStatement	RList * ret ;	120:1:2936:2946	503386	1	True				
ANR	503403	IdentifierDecl	* ret		503386	0					
ANR	503404	IdentifierDeclType	RList *		503386	0					
ANR	503405	Identifier	ret		503386	1					
ANR	503406	IfStatement	if ( ! ( ret = r_list_newf ( free ) ) )		503386	2					
ANR	503407	Condition	! ( ret = r_list_newf ( free ) )	121:5:2953:2979	503386	0	True				
ANR	503408	UnaryOperationExpression	! ( ret = r_list_newf ( free ) )		503386	0					
ANR	503409	UnaryOperator	!		503386	0					
ANR	503410	AssignmentExpression	ret = r_list_newf ( free )		503386	1		=			
ANR	503411	Identifier	ret		503386	0					
ANR	503412	CallExpression	r_list_newf ( free )		503386	1					
ANR	503413	Callee	r_list_newf		503386	0					
ANR	503414	Identifier	r_list_newf		503386	0					
ANR	503415	ArgumentList	free		503386	1					
ANR	503416	Argument	free		503386	0					
ANR	503417	Identifier	free		503386	0					
ANR	503418	CompoundStatement		4:34:118:118	503386	1					
ANR	503419	ReturnStatement	return NULL ;	122:2:2986:2997	503386	0	True				
ANR	503420	Identifier	NULL		503386	0					
ANR	503421	IdentifierDeclStatement	RBinAddr * ptr = r_coff_get_entry ( obj ) ;	124:1:3003:3041	503386	3	True				
ANR	503422	IdentifierDecl	* ptr = r_coff_get_entry ( obj )		503386	0					
ANR	503423	IdentifierDeclType	RBinAddr *		503386	0					
ANR	503424	Identifier	ptr		503386	1					
ANR	503425	AssignmentExpression	* ptr = r_coff_get_entry ( obj )		503386	2		=			
ANR	503426	Identifier	ptr		503386	0					
ANR	503427	CallExpression	r_coff_get_entry ( obj )		503386	1					
ANR	503428	Callee	r_coff_get_entry		503386	0					
ANR	503429	Identifier	r_coff_get_entry		503386	0					
ANR	503430	ArgumentList	obj		503386	1					
ANR	503431	Argument	obj		503386	0					
ANR	503432	Identifier	obj		503386	0					
ANR	503433	IfStatement	if ( ptr )		503386	4					
ANR	503434	Condition	ptr	125:5:3048:3050	503386	0	True				
ANR	503435	Identifier	ptr		503386	0					
ANR	503436	CompoundStatement		8:10:189:189	503386	1					
ANR	503437	ExpressionStatement	"r_list_append ( ret , ptr )"	126:2:3057:3081	503386	0	True				
ANR	503438	CallExpression	"r_list_append ( ret , ptr )"		503386	0					
ANR	503439	Callee	r_list_append		503386	0					
ANR	503440	Identifier	r_list_append		503386	0					
ANR	503441	ArgumentList	ret		503386	1					
ANR	503442	Argument	ret		503386	0					
ANR	503443	Identifier	ret		503386	0					
ANR	503444	Argument	ptr		503386	1					
ANR	503445	Identifier	ptr		503386	0					
ANR	503446	ReturnStatement	return ret ;	128:1:3087:3097	503386	5	True				
ANR	503447	Identifier	ret		503386	0					
ANR	503448	ReturnType	static RList *		503386	1					
ANR	503449	Identifier	entries		503386	2					
ANR	503450	ParameterList	RBinFile * bf		503386	3					
ANR	503451	Parameter	RBinFile * bf	118:22:2849:2860	503386	0	True				
ANR	503452	ParameterType	RBinFile *		503386	0					
ANR	503453	Identifier	bf		503386	1					
ANR	503454	CFGEntryNode	ENTRY		503386		True				
ANR	503455	CFGExitNode	EXIT		503386		True				
ANR	503456	Symbol	bf -> o -> bin_obj		503386						
ANR	503457	Symbol	ret		503386						
ANR	503458	Symbol	NULL		503386						
ANR	503459	Symbol	bf		503386						
ANR	503460	Symbol	r_list_newf		503386						
ANR	503461	Symbol	* bf		503386						
ANR	503462	Symbol	r_coff_get_entry		503386						
ANR	503463	Symbol	* bf -> o		503386						
ANR	503464	Symbol	ptr		503386						
ANR	503465	Symbol	* * bf		503386						
ANR	503466	Symbol	bf -> o		503386						
ANR	503467	Symbol	obj		503386						
ANR	503468	Symbol	free		503386						
ANR	503469	Function	sections	131:0:3102:4295							
ANR	503470	FunctionDef	sections (RBinFile * bf)		503469	0					
ANR	503471	CompoundStatement		131:37:3139:4295	503469	0					
ANR	503472	IdentifierDeclStatement	char * tmp = NULL ;	132:1:3142:3158	503469	0	True				
ANR	503473	IdentifierDecl	* tmp = NULL		503469	0					
ANR	503474	IdentifierDeclType	char *		503469	0					
ANR	503475	Identifier	tmp		503469	1					
ANR	503476	AssignmentExpression	* tmp = NULL		503469	2		=			
ANR	503477	Identifier	NULL		503469	0					
ANR	503478	Identifier	NULL		503469	1					
ANR	503479	IdentifierDeclStatement	size_t i ;	133:1:3161:3169	503469	1	True				
ANR	503480	IdentifierDecl	i		503469	0					
ANR	503481	IdentifierDeclType	size_t		503469	0					
ANR	503482	Identifier	i		503469	1					
ANR	503483	IdentifierDeclStatement	RBinSection * ptr = NULL ;	134:1:3172:3195	503469	2	True				
ANR	503484	IdentifierDecl	* ptr = NULL		503469	0					
ANR	503485	IdentifierDeclType	RBinSection *		503469	0					
ANR	503486	Identifier	ptr		503469	1					
ANR	503487	AssignmentExpression	* ptr = NULL		503469	2		=			
ANR	503488	Identifier	NULL		503469	0					
ANR	503489	Identifier	NULL		503469	1					
ANR	503490	IdentifierDeclStatement	struct r_bin_coff_obj * obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj ;	135:1:3198:3265	503469	3	True				
ANR	503491	IdentifierDecl	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503469	0					
ANR	503492	IdentifierDeclType	struct r_bin_coff_obj *		503469	0					
ANR	503493	Identifier	obj		503469	1					
ANR	503494	AssignmentExpression	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503469	2		=			
ANR	503495	Identifier	obj		503469	0					
ANR	503496	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503469	1					
ANR	503497	CastTarget	struct r_bin_coff_obj *		503469	0					
ANR	503498	PtrMemberAccess	bf -> o -> bin_obj		503469	1					
ANR	503499	PtrMemberAccess	bf -> o		503469	0					
ANR	503500	Identifier	bf		503469	0					
ANR	503501	Identifier	o		503469	1					
ANR	503502	Identifier	bin_obj		503469	1					
ANR	503503	IdentifierDeclStatement	RList * ret = r_list_newf ( free ) ;	137:1:3269:3300	503469	4	True				
ANR	503504	IdentifierDecl	* ret = r_list_newf ( free )		503469	0					
ANR	503505	IdentifierDeclType	RList *		503469	0					
ANR	503506	Identifier	ret		503469	1					
ANR	503507	AssignmentExpression	* ret = r_list_newf ( free )		503469	2		=			
ANR	503508	Identifier	ret		503469	0					
ANR	503509	CallExpression	r_list_newf ( free )		503469	1					
ANR	503510	Callee	r_list_newf		503469	0					
ANR	503511	Identifier	r_list_newf		503469	0					
ANR	503512	ArgumentList	free		503469	1					
ANR	503513	Argument	free		503469	0					
ANR	503514	Identifier	free		503469	0					
ANR	503515	IfStatement	if ( ! ret )		503469	5					
ANR	503516	Condition	! ret	138:5:3307:3310	503469	0	True				
ANR	503517	UnaryOperationExpression	! ret		503469	0					
ANR	503518	UnaryOperator	!		503469	0					
ANR	503519	Identifier	ret		503469	1					
ANR	503520	CompoundStatement		8:11:173:173	503469	1					
ANR	503521	ReturnStatement	return NULL ;	139:2:3317:3328	503469	0	True				
ANR	503522	Identifier	NULL		503469	0					
ANR	503523	IfStatement	if ( obj && obj -> scn_hdrs )		503469	6					
ANR	503524	Condition	obj && obj -> scn_hdrs	141:5:3338:3357	503469	0	True				
ANR	503525	AndExpression	obj && obj -> scn_hdrs		503469	0		&&			
ANR	503526	Identifier	obj		503469	0					
ANR	503527	PtrMemberAccess	obj -> scn_hdrs		503469	1					
ANR	503528	Identifier	obj		503469	0					
ANR	503529	Identifier	scn_hdrs		503469	1					
ANR	503530	CompoundStatement		11:27:220:220	503469	1					
ANR	503531	ForStatement	for ( i = 0 ; i < obj -> hdr . f_nscns ; i ++ )		503469	0					
ANR	503532	ForInit	i = 0 ;	142:7:3369:3374	503469	0	True				
ANR	503533	AssignmentExpression	i = 0		503469	0		=			
ANR	503534	Identifier	i		503469	0					
ANR	503535	PrimaryExpression	0		503469	1					
ANR	503536	Condition	i < obj -> hdr . f_nscns	142:14:3376:3395	503469	1	True				
ANR	503537	RelationalExpression	i < obj -> hdr . f_nscns		503469	0		<			
ANR	503538	Identifier	i		503469	0					
ANR	503539	MemberAccess	obj -> hdr . f_nscns		503469	1					
ANR	503540	PtrMemberAccess	obj -> hdr		503469	0					
ANR	503541	Identifier	obj		503469	0					
ANR	503542	Identifier	hdr		503469	1					
ANR	503543	Identifier	f_nscns		503469	1					
ANR	503544	PostIncDecOperationExpression	i ++	142:36:3398:3400	503469	2	True				
ANR	503545	Identifier	i		503469	0					
ANR	503546	IncDec	++		503469	1					
ANR	503547	CompoundStatement		12:41:263:263	503469	3					
ANR	503548	ExpressionStatement	"tmp = r_coff_symbol_name ( obj , & obj -> scn_hdrs [ i ] )"	143:3:3408:3457	503469	0	True				
ANR	503549	AssignmentExpression	"tmp = r_coff_symbol_name ( obj , & obj -> scn_hdrs [ i ] )"		503469	0		=			
ANR	503550	Identifier	tmp		503469	0					
ANR	503551	CallExpression	"r_coff_symbol_name ( obj , & obj -> scn_hdrs [ i ] )"		503469	1					
ANR	503552	Callee	r_coff_symbol_name		503469	0					
ANR	503553	Identifier	r_coff_symbol_name		503469	0					
ANR	503554	ArgumentList	obj		503469	1					
ANR	503555	Argument	obj		503469	0					
ANR	503556	Identifier	obj		503469	0					
ANR	503557	Argument	& obj -> scn_hdrs [ i ]		503469	1					
ANR	503558	UnaryOperationExpression	& obj -> scn_hdrs [ i ]		503469	0					
ANR	503559	UnaryOperator	&		503469	0					
ANR	503560	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	1					
ANR	503561	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503562	Identifier	obj		503469	0					
ANR	503563	Identifier	scn_hdrs		503469	1					
ANR	503564	Identifier	i		503469	1					
ANR	503565	IfStatement	if ( ! tmp )		503469	1					
ANR	503566	Condition	! tmp	144:7:3466:3469	503469	0	True				
ANR	503567	UnaryOperationExpression	! tmp		503469	0					
ANR	503568	UnaryOperator	!		503469	0					
ANR	503569	Identifier	tmp		503469	1					
ANR	503570	CompoundStatement		14:13:332:332	503469	1					
ANR	503571	ExpressionStatement	r_list_free ( ret )	145:4:3478:3495	503469	0	True				
ANR	503572	CallExpression	r_list_free ( ret )		503469	0					
ANR	503573	Callee	r_list_free		503469	0					
ANR	503574	Identifier	r_list_free		503469	0					
ANR	503575	ArgumentList	ret		503469	1					
ANR	503576	Argument	ret		503469	0					
ANR	503577	Identifier	ret		503469	0					
ANR	503578	ReturnStatement	return NULL ;	146:4:3501:3512	503469	1	True				
ANR	503579	Identifier	NULL		503469	0					
ANR	503580	ExpressionStatement	ptr = R_NEW0 ( RBinSection )	150:3:3612:3638	503469	2	True				
ANR	503581	AssignmentExpression	ptr = R_NEW0 ( RBinSection )		503469	0		=			
ANR	503582	Identifier	ptr		503469	0					
ANR	503583	CallExpression	R_NEW0 ( RBinSection )		503469	1					
ANR	503584	Callee	R_NEW0		503469	0					
ANR	503585	Identifier	R_NEW0		503469	0					
ANR	503586	ArgumentList	RBinSection		503469	1					
ANR	503587	Argument	RBinSection		503469	0					
ANR	503588	Identifier	RBinSection		503469	0					
ANR	503589	IfStatement	if ( ! ptr )		503469	3					
ANR	503590	Condition	! ptr	151:7:3647:3650	503469	0	True				
ANR	503591	UnaryOperationExpression	! ptr		503469	0					
ANR	503592	UnaryOperator	!		503469	0					
ANR	503593	Identifier	ptr		503469	1					
ANR	503594	CompoundStatement		21:13:513:513	503469	1					
ANR	503595	ExpressionStatement	free ( tmp )	152:4:3659:3669	503469	0	True				
ANR	503596	CallExpression	free ( tmp )		503469	0					
ANR	503597	Callee	free		503469	0					
ANR	503598	Identifier	free		503469	0					
ANR	503599	ArgumentList	tmp		503469	1					
ANR	503600	Argument	tmp		503469	0					
ANR	503601	Identifier	tmp		503469	0					
ANR	503602	ReturnStatement	return ret ;	153:4:3675:3685	503469	1	True				
ANR	503603	Identifier	ret		503469	0					
ANR	503604	ExpressionStatement	"ptr -> name = r_str_newf ( ""%s-%d"" , tmp , i )"	155:3:3695:3735	503469	4	True				
ANR	503605	AssignmentExpression	"ptr -> name = r_str_newf ( ""%s-%d"" , tmp , i )"		503469	0		=			
ANR	503606	PtrMemberAccess	ptr -> name		503469	0					
ANR	503607	Identifier	ptr		503469	0					
ANR	503608	Identifier	name		503469	1					
ANR	503609	CallExpression	"r_str_newf ( ""%s-%d"" , tmp , i )"		503469	1					
ANR	503610	Callee	r_str_newf		503469	0					
ANR	503611	Identifier	r_str_newf		503469	0					
ANR	503612	ArgumentList	"""%s-%d"""		503469	1					
ANR	503613	Argument	"""%s-%d"""		503469	0					
ANR	503614	PrimaryExpression	"""%s-%d"""		503469	0					
ANR	503615	Argument	tmp		503469	1					
ANR	503616	Identifier	tmp		503469	0					
ANR	503617	Argument	i		503469	2					
ANR	503618	Identifier	i		503469	0					
ANR	503619	ExpressionStatement	free ( tmp )	156:3:3740:3750	503469	5	True				
ANR	503620	CallExpression	free ( tmp )		503469	0					
ANR	503621	Callee	free		503469	0					
ANR	503622	Identifier	free		503469	0					
ANR	503623	ArgumentList	tmp		503469	1					
ANR	503624	Argument	tmp		503469	0					
ANR	503625	Identifier	tmp		503469	0					
ANR	503626	IfStatement	"if ( strstr ( ptr -> name , ""data"" ) )"		503469	6					
ANR	503627	Condition	"strstr ( ptr -> name , ""data"" )"	157:7:3759:3784	503469	0	True				
ANR	503628	CallExpression	"strstr ( ptr -> name , ""data"" )"		503469	0					
ANR	503629	Callee	strstr		503469	0					
ANR	503630	Identifier	strstr		503469	0					
ANR	503631	ArgumentList	ptr -> name		503469	1					
ANR	503632	Argument	ptr -> name		503469	0					
ANR	503633	PtrMemberAccess	ptr -> name		503469	0					
ANR	503634	Identifier	ptr		503469	0					
ANR	503635	Identifier	name		503469	1					
ANR	503636	Argument	"""data"""		503469	1					
ANR	503637	PrimaryExpression	"""data"""		503469	0					
ANR	503638	CompoundStatement		27:35:647:647	503469	1					
ANR	503639	ExpressionStatement	ptr -> is_data = true	158:4:3793:3812	503469	0	True				
ANR	503640	AssignmentExpression	ptr -> is_data = true		503469	0		=			
ANR	503641	PtrMemberAccess	ptr -> is_data		503469	0					
ANR	503642	Identifier	ptr		503469	0					
ANR	503643	Identifier	is_data		503469	1					
ANR	503644	Identifier	true		503469	1					
ANR	503645	ExpressionStatement	ptr -> size = obj -> scn_hdrs [ i ] . s_size	160:3:3822:3857	503469	7	True				
ANR	503646	AssignmentExpression	ptr -> size = obj -> scn_hdrs [ i ] . s_size		503469	0		=			
ANR	503647	PtrMemberAccess	ptr -> size		503469	0					
ANR	503648	Identifier	ptr		503469	0					
ANR	503649	Identifier	size		503469	1					
ANR	503650	MemberAccess	obj -> scn_hdrs [ i ] . s_size		503469	1					
ANR	503651	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	0					
ANR	503652	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503653	Identifier	obj		503469	0					
ANR	503654	Identifier	scn_hdrs		503469	1					
ANR	503655	Identifier	i		503469	1					
ANR	503656	Identifier	s_size		503469	1					
ANR	503657	ExpressionStatement	ptr -> vsize = obj -> scn_hdrs [ i ] . s_size	161:3:3862:3898	503469	8	True				
ANR	503658	AssignmentExpression	ptr -> vsize = obj -> scn_hdrs [ i ] . s_size		503469	0		=			
ANR	503659	PtrMemberAccess	ptr -> vsize		503469	0					
ANR	503660	Identifier	ptr		503469	0					
ANR	503661	Identifier	vsize		503469	1					
ANR	503662	MemberAccess	obj -> scn_hdrs [ i ] . s_size		503469	1					
ANR	503663	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	0					
ANR	503664	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503665	Identifier	obj		503469	0					
ANR	503666	Identifier	scn_hdrs		503469	1					
ANR	503667	Identifier	i		503469	1					
ANR	503668	Identifier	s_size		503469	1					
ANR	503669	ExpressionStatement	ptr -> paddr = obj -> scn_hdrs [ i ] . s_scnptr	162:3:3903:3941	503469	9	True				
ANR	503670	AssignmentExpression	ptr -> paddr = obj -> scn_hdrs [ i ] . s_scnptr		503469	0		=			
ANR	503671	PtrMemberAccess	ptr -> paddr		503469	0					
ANR	503672	Identifier	ptr		503469	0					
ANR	503673	Identifier	paddr		503469	1					
ANR	503674	MemberAccess	obj -> scn_hdrs [ i ] . s_scnptr		503469	1					
ANR	503675	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	0					
ANR	503676	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503677	Identifier	obj		503469	0					
ANR	503678	Identifier	scn_hdrs		503469	1					
ANR	503679	Identifier	i		503469	1					
ANR	503680	Identifier	s_scnptr		503469	1					
ANR	503681	ExpressionStatement	ptr -> add = true	163:3:3946:3961	503469	10	True				
ANR	503682	AssignmentExpression	ptr -> add = true		503469	0		=			
ANR	503683	PtrMemberAccess	ptr -> add		503469	0					
ANR	503684	Identifier	ptr		503469	0					
ANR	503685	Identifier	add		503469	1					
ANR	503686	Identifier	true		503469	1					
ANR	503687	ExpressionStatement	ptr -> perm = 0	164:3:3966:3979	503469	11	True				
ANR	503688	AssignmentExpression	ptr -> perm = 0		503469	0		=			
ANR	503689	PtrMemberAccess	ptr -> perm		503469	0					
ANR	503690	Identifier	ptr		503469	0					
ANR	503691	Identifier	perm		503469	1					
ANR	503692	PrimaryExpression	0		503469	1					
ANR	503693	IfStatement	if ( obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_READ )		503469	12					
ANR	503694	Condition	obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_READ	165:7:3988:4031	503469	0	True				
ANR	503695	BitAndExpression	obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_READ		503469	0		&			
ANR	503696	MemberAccess	obj -> scn_hdrs [ i ] . s_flags		503469	0					
ANR	503697	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	0					
ANR	503698	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503699	Identifier	obj		503469	0					
ANR	503700	Identifier	scn_hdrs		503469	1					
ANR	503701	Identifier	i		503469	1					
ANR	503702	Identifier	s_flags		503469	1					
ANR	503703	Identifier	COFF_SCN_MEM_READ		503469	1					
ANR	503704	CompoundStatement		35:53:894:894	503469	1					
ANR	503705	ExpressionStatement	ptr -> perm |= R_PERM_R	166:4:4040:4061	503469	0	True				
ANR	503706	AssignmentExpression	ptr -> perm |= R_PERM_R		503469	0		|=			
ANR	503707	PtrMemberAccess	ptr -> perm		503469	0					
ANR	503708	Identifier	ptr		503469	0					
ANR	503709	Identifier	perm		503469	1					
ANR	503710	Identifier	R_PERM_R		503469	1					
ANR	503711	IfStatement	if ( obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_WRITE )		503469	13					
ANR	503712	Condition	obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_WRITE	168:7:4075:4119	503469	0	True				
ANR	503713	BitAndExpression	obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_WRITE		503469	0		&			
ANR	503714	MemberAccess	obj -> scn_hdrs [ i ] . s_flags		503469	0					
ANR	503715	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	0					
ANR	503716	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503717	Identifier	obj		503469	0					
ANR	503718	Identifier	scn_hdrs		503469	1					
ANR	503719	Identifier	i		503469	1					
ANR	503720	Identifier	s_flags		503469	1					
ANR	503721	Identifier	COFF_SCN_MEM_WRITE		503469	1					
ANR	503722	CompoundStatement		38:54:982:982	503469	1					
ANR	503723	ExpressionStatement	ptr -> perm |= R_PERM_W	169:4:4128:4149	503469	0	True				
ANR	503724	AssignmentExpression	ptr -> perm |= R_PERM_W		503469	0		|=			
ANR	503725	PtrMemberAccess	ptr -> perm		503469	0					
ANR	503726	Identifier	ptr		503469	0					
ANR	503727	Identifier	perm		503469	1					
ANR	503728	Identifier	R_PERM_W		503469	1					
ANR	503729	IfStatement	if ( obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_EXECUTE )		503469	14					
ANR	503730	Condition	obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_EXECUTE	171:7:4163:4209	503469	0	True				
ANR	503731	BitAndExpression	obj -> scn_hdrs [ i ] . s_flags & COFF_SCN_MEM_EXECUTE		503469	0		&			
ANR	503732	MemberAccess	obj -> scn_hdrs [ i ] . s_flags		503469	0					
ANR	503733	ArrayIndexing	obj -> scn_hdrs [ i ]		503469	0					
ANR	503734	PtrMemberAccess	obj -> scn_hdrs		503469	0					
ANR	503735	Identifier	obj		503469	0					
ANR	503736	Identifier	scn_hdrs		503469	1					
ANR	503737	Identifier	i		503469	1					
ANR	503738	Identifier	s_flags		503469	1					
ANR	503739	Identifier	COFF_SCN_MEM_EXECUTE		503469	1					
ANR	503740	CompoundStatement		41:56:1072:1072	503469	1					
ANR	503741	ExpressionStatement	ptr -> perm |= R_PERM_X	172:4:4218:4239	503469	0	True				
ANR	503742	AssignmentExpression	ptr -> perm |= R_PERM_X		503469	0		|=			
ANR	503743	PtrMemberAccess	ptr -> perm		503469	0					
ANR	503744	Identifier	ptr		503469	0					
ANR	503745	Identifier	perm		503469	1					
ANR	503746	Identifier	R_PERM_X		503469	1					
ANR	503747	ExpressionStatement	"r_list_append ( ret , ptr )"	174:3:4249:4273	503469	15	True				
ANR	503748	CallExpression	"r_list_append ( ret , ptr )"		503469	0					
ANR	503749	Callee	r_list_append		503469	0					
ANR	503750	Identifier	r_list_append		503469	0					
ANR	503751	ArgumentList	ret		503469	1					
ANR	503752	Argument	ret		503469	0					
ANR	503753	Identifier	ret		503469	0					
ANR	503754	Argument	ptr		503469	1					
ANR	503755	Identifier	ptr		503469	0					
ANR	503756	ReturnStatement	return ret ;	177:1:4283:4293	503469	7	True				
ANR	503757	Identifier	ret		503469	0					
ANR	503758	ReturnType	static RList *		503469	1					
ANR	503759	Identifier	sections		503469	2					
ANR	503760	ParameterList	RBinFile * bf		503469	3					
ANR	503761	Parameter	RBinFile * bf	131:23:3125:3136	503469	0	True				
ANR	503762	ParameterType	RBinFile *		503469	0					
ANR	503763	Identifier	bf		503469	1					
ANR	503764	CFGEntryNode	ENTRY		503469		True				
ANR	503765	CFGExitNode	EXIT		503469		True				
ANR	503766	Symbol	ptr -> paddr		503469						
ANR	503767	Symbol	obj -> hdr		503469						
ANR	503768	Symbol	bf		503469						
ANR	503769	Symbol	obj -> scn_hdrs [ i ] . s_flags		503469						
ANR	503770	Symbol	ptr -> name		503469						
ANR	503771	Symbol	r_str_newf		503469						
ANR	503772	Symbol	* * obj		503469						
ANR	503773	Symbol	r_coff_symbol_name		503469						
ANR	503774	Symbol	* bf -> o		503469						
ANR	503775	Symbol	ptr -> add		503469						
ANR	503776	Symbol	R_PERM_X		503469						
ANR	503777	Symbol	R_PERM_W		503469						
ANR	503778	Symbol	obj -> hdr . f_nscns		503469						
ANR	503779	Symbol	bf -> o		503469						
ANR	503780	Symbol	tmp		503469						
ANR	503781	Symbol	R_PERM_R		503469						
ANR	503782	Symbol	* ptr		503469						
ANR	503783	Symbol	* obj -> scn_hdrs		503469						
ANR	503784	Symbol	free		503469						
ANR	503785	Symbol	bf -> o -> bin_obj		503469						
ANR	503786	Symbol	ret		503469						
ANR	503787	Symbol	* obj		503469						
ANR	503788	Symbol	NULL		503469						
ANR	503789	Symbol	COFF_SCN_MEM_WRITE		503469						
ANR	503790	Symbol	r_list_newf		503469						
ANR	503791	Symbol	i		503469						
ANR	503792	Symbol	* bf		503469						
ANR	503793	Symbol	ptr -> size		503469						
ANR	503794	Symbol	obj -> scn_hdrs [ i ] . s_scnptr		503469						
ANR	503795	Symbol	ptr -> is_data		503469						
ANR	503796	Symbol	ptr		503469						
ANR	503797	Symbol	R_NEW0		503469						
ANR	503798	Symbol	* * bf		503469						
ANR	503799	Symbol	* i		503469						
ANR	503800	Symbol	strstr		503469						
ANR	503801	Symbol	obj		503469						
ANR	503802	Symbol	COFF_SCN_MEM_READ		503469						
ANR	503803	Symbol	true		503469						
ANR	503804	Symbol	ptr -> vsize		503469						
ANR	503805	Symbol	COFF_SCN_MEM_EXECUTE		503469						
ANR	503806	Symbol	RBinSection		503469						
ANR	503807	Symbol	obj -> scn_hdrs [ i ] . s_size		503469						
ANR	503808	Symbol	ptr -> perm		503469						
ANR	503809	Symbol	obj -> scn_hdrs		503469						
ANR	503810	Function	symbols	180:0:4298:4853							
ANR	503811	FunctionDef	symbols (RBinFile * bf)		503810	0					
ANR	503812	CompoundStatement		180:36:4334:4853	503810	0					
ANR	503813	IdentifierDeclStatement	int i ;	181:1:4337:4342	503810	0	True				
ANR	503814	IdentifierDecl	i		503810	0					
ANR	503815	IdentifierDeclType	int		503810	0					
ANR	503816	Identifier	i		503810	1					
ANR	503817	IdentifierDeclStatement	RList * ret = NULL ;	182:1:4345:4362	503810	1	True				
ANR	503818	IdentifierDecl	* ret = NULL		503810	0					
ANR	503819	IdentifierDeclType	RList *		503810	0					
ANR	503820	Identifier	ret		503810	1					
ANR	503821	AssignmentExpression	* ret = NULL		503810	2		=			
ANR	503822	Identifier	NULL		503810	0					
ANR	503823	Identifier	NULL		503810	1					
ANR	503824	IdentifierDeclStatement	RBinSymbol * ptr = NULL ;	183:1:4365:4387	503810	2	True				
ANR	503825	IdentifierDecl	* ptr = NULL		503810	0					
ANR	503826	IdentifierDeclType	RBinSymbol *		503810	0					
ANR	503827	Identifier	ptr		503810	1					
ANR	503828	AssignmentExpression	* ptr = NULL		503810	2		=			
ANR	503829	Identifier	NULL		503810	0					
ANR	503830	Identifier	NULL		503810	1					
ANR	503831	IdentifierDeclStatement	struct coff_symbol * s ;	184:1:4390:4411	503810	3	True				
ANR	503832	IdentifierDecl	* s		503810	0					
ANR	503833	IdentifierDeclType	struct coff_symbol *		503810	0					
ANR	503834	Identifier	s		503810	1					
ANR	503835	IdentifierDeclStatement	struct r_bin_coff_obj * obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj ;	185:1:4414:4481	503810	4	True				
ANR	503836	IdentifierDecl	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503810	0					
ANR	503837	IdentifierDeclType	struct r_bin_coff_obj *		503810	0					
ANR	503838	Identifier	obj		503810	1					
ANR	503839	AssignmentExpression	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503810	2		=			
ANR	503840	Identifier	obj		503810	0					
ANR	503841	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503810	1					
ANR	503842	CastTarget	struct r_bin_coff_obj *		503810	0					
ANR	503843	PtrMemberAccess	bf -> o -> bin_obj		503810	1					
ANR	503844	PtrMemberAccess	bf -> o		503810	0					
ANR	503845	Identifier	bf		503810	0					
ANR	503846	Identifier	o		503810	1					
ANR	503847	Identifier	bin_obj		503810	1					
ANR	503848	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		503810	5					
ANR	503849	Condition	! ( ret = r_list_new ( ) )	186:5:4488:4509	503810	0	True				
ANR	503850	UnaryOperationExpression	! ( ret = r_list_new ( ) )		503810	0					
ANR	503851	UnaryOperator	!		503810	0					
ANR	503852	AssignmentExpression	ret = r_list_new ( )		503810	1		=			
ANR	503853	Identifier	ret		503810	0					
ANR	503854	CallExpression	r_list_new ( )		503810	1					
ANR	503855	Callee	r_list_new		503810	0					
ANR	503856	Identifier	r_list_new		503810	0					
ANR	503857	ArgumentList			503810	1					
ANR	503858	CompoundStatement		7:29:177:177	503810	1					
ANR	503859	ReturnStatement	return ret ;	187:2:4516:4526	503810	0	True				
ANR	503860	Identifier	ret		503810	0					
ANR	503861	ExpressionStatement	ret -> free = free	189:1:4532:4548	503810	6	True				
ANR	503862	AssignmentExpression	ret -> free = free		503810	0		=			
ANR	503863	PtrMemberAccess	ret -> free		503810	0					
ANR	503864	Identifier	ret		503810	0					
ANR	503865	Identifier	free		503810	1					
ANR	503866	Identifier	free		503810	1					
ANR	503867	IfStatement	if ( obj -> symbols )		503810	7					
ANR	503868	Condition	obj -> symbols	190:5:4555:4566	503810	0	True				
ANR	503869	PtrMemberAccess	obj -> symbols		503810	0					
ANR	503870	Identifier	obj		503810	0					
ANR	503871	Identifier	symbols		503810	1					
ANR	503872	CompoundStatement		11:19:234:234	503810	1					
ANR	503873	ForStatement	for ( i = 0 ; i < obj -> hdr . f_nsyms ; i ++ )		503810	0					
ANR	503874	ForInit	i = 0 ;	191:7:4578:4583	503810	0	True				
ANR	503875	AssignmentExpression	i = 0		503810	0		=			
ANR	503876	Identifier	i		503810	0					
ANR	503877	PrimaryExpression	0		503810	1					
ANR	503878	Condition	i < obj -> hdr . f_nsyms	191:14:4585:4604	503810	1	True				
ANR	503879	RelationalExpression	i < obj -> hdr . f_nsyms		503810	0		<			
ANR	503880	Identifier	i		503810	0					
ANR	503881	MemberAccess	obj -> hdr . f_nsyms		503810	1					
ANR	503882	PtrMemberAccess	obj -> hdr		503810	0					
ANR	503883	Identifier	obj		503810	0					
ANR	503884	Identifier	hdr		503810	1					
ANR	503885	Identifier	f_nsyms		503810	1					
ANR	503886	PostIncDecOperationExpression	i ++	191:36:4607:4609	503810	2	True				
ANR	503887	Identifier	i		503810	0					
ANR	503888	IncDec	++		503810	1					
ANR	503889	CompoundStatement		12:41:277:277	503810	3					
ANR	503890	ExpressionStatement	s = & obj -> symbols [ i ]	192:3:4617:4637	503810	0	True				
ANR	503891	AssignmentExpression	s = & obj -> symbols [ i ]		503810	0		=			
ANR	503892	Identifier	s		503810	0					
ANR	503893	UnaryOperationExpression	& obj -> symbols [ i ]		503810	1					
ANR	503894	UnaryOperator	&		503810	0					
ANR	503895	ArrayIndexing	obj -> symbols [ i ]		503810	1					
ANR	503896	PtrMemberAccess	obj -> symbols		503810	0					
ANR	503897	Identifier	obj		503810	0					
ANR	503898	Identifier	symbols		503810	1					
ANR	503899	Identifier	i		503810	1					
ANR	503900	IfStatement	if ( ! ( ptr = R_NEW0 ( RBinSymbol ) ) )		503810	1					
ANR	503901	Condition	! ( ptr = R_NEW0 ( RBinSymbol ) )	193:7:4646:4673	503810	0	True				
ANR	503902	UnaryOperationExpression	! ( ptr = R_NEW0 ( RBinSymbol ) )		503810	0					
ANR	503903	UnaryOperator	!		503810	0					
ANR	503904	AssignmentExpression	ptr = R_NEW0 ( RBinSymbol )		503810	1		=			
ANR	503905	Identifier	ptr		503810	0					
ANR	503906	CallExpression	R_NEW0 ( RBinSymbol )		503810	1					
ANR	503907	Callee	R_NEW0		503810	0					
ANR	503908	Identifier	R_NEW0		503810	0					
ANR	503909	ArgumentList	RBinSymbol		503810	1					
ANR	503910	Argument	RBinSymbol		503810	0					
ANR	503911	Identifier	RBinSymbol		503810	0					
ANR	503912	CompoundStatement		14:37:341:341	503810	1					
ANR	503913	BreakStatement	break ;	194:4:4682:4687	503810	0	True				
ANR	503914	IfStatement	"if ( _fill_bin_symbol ( obj , i , & ptr ) )"		503810	2					
ANR	503915	Condition	"_fill_bin_symbol ( obj , i , & ptr )"	196:7:4701:4731	503810	0	True				
ANR	503916	CallExpression	"_fill_bin_symbol ( obj , i , & ptr )"		503810	0					
ANR	503917	Callee	_fill_bin_symbol		503810	0					
ANR	503918	Identifier	_fill_bin_symbol		503810	0					
ANR	503919	ArgumentList	obj		503810	1					
ANR	503920	Argument	obj		503810	0					
ANR	503921	Identifier	obj		503810	0					
ANR	503922	Argument	i		503810	1					
ANR	503923	Identifier	i		503810	0					
ANR	503924	Argument	& ptr		503810	2					
ANR	503925	UnaryOperationExpression	& ptr		503810	0					
ANR	503926	UnaryOperator	&		503810	0					
ANR	503927	Identifier	ptr		503810	1					
ANR	503928	CompoundStatement		17:40:399:399	503810	1					
ANR	503929	ExpressionStatement	"r_list_append ( ret , ptr )"	197:4:4740:4764	503810	0	True				
ANR	503930	CallExpression	"r_list_append ( ret , ptr )"		503810	0					
ANR	503931	Callee	r_list_append		503810	0					
ANR	503932	Identifier	r_list_append		503810	0					
ANR	503933	ArgumentList	ret		503810	1					
ANR	503934	Argument	ret		503810	0					
ANR	503935	Identifier	ret		503810	0					
ANR	503936	Argument	ptr		503810	1					
ANR	503937	Identifier	ptr		503810	0					
ANR	503938	ElseStatement	else		503810	0					
ANR	503939	CompoundStatement		19:10:441:441	503810	0					
ANR	503940	ExpressionStatement	free ( ptr )	199:4:4782:4792	503810	0	True				
ANR	503941	CallExpression	free ( ptr )		503810	0					
ANR	503942	Callee	free		503810	0					
ANR	503943	Identifier	free		503810	0					
ANR	503944	ArgumentList	ptr		503810	1					
ANR	503945	Argument	ptr		503810	0					
ANR	503946	Identifier	ptr		503810	0					
ANR	503947	ExpressionStatement	i += obj -> symbols [ i ] . n_numaux	201:3:4802:4831	503810	3	True				
ANR	503948	AssignmentExpression	i += obj -> symbols [ i ] . n_numaux		503810	0		+=			
ANR	503949	Identifier	i		503810	0					
ANR	503950	MemberAccess	obj -> symbols [ i ] . n_numaux		503810	1					
ANR	503951	ArrayIndexing	obj -> symbols [ i ]		503810	0					
ANR	503952	PtrMemberAccess	obj -> symbols		503810	0					
ANR	503953	Identifier	obj		503810	0					
ANR	503954	Identifier	symbols		503810	1					
ANR	503955	Identifier	i		503810	1					
ANR	503956	Identifier	n_numaux		503810	1					
ANR	503957	ReturnStatement	return ret ;	204:1:4841:4851	503810	8	True				
ANR	503958	Identifier	ret		503810	0					
ANR	503959	ReturnType	static RList *		503810	1					
ANR	503960	Identifier	symbols		503810	2					
ANR	503961	ParameterList	RBinFile * bf		503810	3					
ANR	503962	Parameter	RBinFile * bf	180:22:4320:4331	503810	0	True				
ANR	503963	ParameterType	RBinFile *		503810	0					
ANR	503964	Identifier	bf		503810	1					
ANR	503965	CFGEntryNode	ENTRY		503810		True				
ANR	503966	CFGExitNode	EXIT		503810		True				
ANR	503967	Symbol	obj -> hdr		503810						
ANR	503968	Symbol	bf		503810						
ANR	503969	Symbol	* ret		503810						
ANR	503970	Symbol	* * obj		503810						
ANR	503971	Symbol	ret -> free		503810						
ANR	503972	Symbol	* bf -> o		503810						
ANR	503973	Symbol	& ptr		503810						
ANR	503974	Symbol	bf -> o		503810						
ANR	503975	Symbol	_fill_bin_symbol		503810						
ANR	503976	Symbol	obj -> symbols		503810						
ANR	503977	Symbol	free		503810						
ANR	503978	Symbol	ret		503810						
ANR	503979	Symbol	bf -> o -> bin_obj		503810						
ANR	503980	Symbol	* obj		503810						
ANR	503981	Symbol	* obj -> symbols		503810						
ANR	503982	Symbol	NULL		503810						
ANR	503983	Symbol	obj -> hdr . f_nsyms		503810						
ANR	503984	Symbol	i		503810						
ANR	503985	Symbol	* bf		503810						
ANR	503986	Symbol	obj -> symbols [ i ] . n_numaux		503810						
ANR	503987	Symbol	ptr		503810						
ANR	503988	Symbol	R_NEW0		503810						
ANR	503989	Symbol	* * bf		503810						
ANR	503990	Symbol	s		503810						
ANR	503991	Symbol	* i		503810						
ANR	503992	Symbol	obj		503810						
ANR	503993	Symbol	r_list_new		503810						
ANR	503994	Symbol	RBinSymbol		503810						
ANR	503995	Function	imports	207:0:4856:5315							
ANR	503996	FunctionDef	imports (RBinFile * bf)		503995	0					
ANR	503997	CompoundStatement		207:36:4892:5315	503995	0					
ANR	503998	IdentifierDeclStatement	int i ;	208:1:4895:4900	503995	0	True				
ANR	503999	IdentifierDecl	i		503995	0					
ANR	504000	IdentifierDeclType	int		503995	0					
ANR	504001	Identifier	i		503995	1					
ANR	504002	IdentifierDeclStatement	RList * ret = NULL ;	209:1:4903:4920	503995	1	True				
ANR	504003	IdentifierDecl	* ret = NULL		503995	0					
ANR	504004	IdentifierDeclType	RList *		503995	0					
ANR	504005	Identifier	ret		503995	1					
ANR	504006	AssignmentExpression	* ret = NULL		503995	2		=			
ANR	504007	Identifier	NULL		503995	0					
ANR	504008	Identifier	NULL		503995	1					
ANR	504009	IdentifierDeclStatement	struct r_bin_coff_obj * obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj ;	210:1:4923:4990	503995	2	True				
ANR	504010	IdentifierDecl	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503995	0					
ANR	504011	IdentifierDeclType	struct r_bin_coff_obj *		503995	0					
ANR	504012	Identifier	obj		503995	1					
ANR	504013	AssignmentExpression	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503995	2		=			
ANR	504014	Identifier	obj		503995	0					
ANR	504015	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		503995	1					
ANR	504016	CastTarget	struct r_bin_coff_obj *		503995	0					
ANR	504017	PtrMemberAccess	bf -> o -> bin_obj		503995	1					
ANR	504018	PtrMemberAccess	bf -> o		503995	0					
ANR	504019	Identifier	bf		503995	0					
ANR	504020	Identifier	o		503995	1					
ANR	504021	Identifier	bin_obj		503995	1					
ANR	504022	IfStatement	if ( ! ( ret = r_list_new ( ) ) )		503995	3					
ANR	504023	Condition	! ( ret = r_list_new ( ) )	211:5:4997:5018	503995	0	True				
ANR	504024	UnaryOperationExpression	! ( ret = r_list_new ( ) )		503995	0					
ANR	504025	UnaryOperator	!		503995	0					
ANR	504026	AssignmentExpression	ret = r_list_new ( )		503995	1		=			
ANR	504027	Identifier	ret		503995	0					
ANR	504028	CallExpression	r_list_new ( )		503995	1					
ANR	504029	Callee	r_list_new		503995	0					
ANR	504030	Identifier	r_list_new		503995	0					
ANR	504031	ArgumentList			503995	1					
ANR	504032	CompoundStatement		5:29:128:128	503995	1					
ANR	504033	ReturnStatement	return ret ;	212:2:5025:5035	503995	0	True				
ANR	504034	Identifier	ret		503995	0					
ANR	504035	ExpressionStatement	ret -> free = free	214:1:5041:5057	503995	4	True				
ANR	504036	AssignmentExpression	ret -> free = free		503995	0		=			
ANR	504037	PtrMemberAccess	ret -> free		503995	0					
ANR	504038	Identifier	ret		503995	0					
ANR	504039	Identifier	free		503995	1					
ANR	504040	Identifier	free		503995	1					
ANR	504041	IfStatement	if ( obj -> symbols )		503995	5					
ANR	504042	Condition	obj -> symbols	215:5:5064:5075	503995	0	True				
ANR	504043	PtrMemberAccess	obj -> symbols		503995	0					
ANR	504044	Identifier	obj		503995	0					
ANR	504045	Identifier	symbols		503995	1					
ANR	504046	CompoundStatement		10:2:189:200	503995	1					
ANR	504047	IdentifierDeclStatement	int ord = 0 ;	216:2:5082:5093	503995	0	True				
ANR	504048	IdentifierDecl	ord = 0		503995	0					
ANR	504049	IdentifierDeclType	int		503995	0					
ANR	504050	Identifier	ord		503995	1					
ANR	504051	AssignmentExpression	ord = 0		503995	2		=			
ANR	504052	Identifier	ord		503995	0					
ANR	504053	PrimaryExpression	0		503995	1					
ANR	504054	ForStatement	for ( i = 0 ; i < obj -> hdr . f_nsyms ; i ++ )		503995	1					
ANR	504055	ForInit	i = 0 ;	217:7:5102:5107	503995	0	True				
ANR	504056	AssignmentExpression	i = 0		503995	0		=			
ANR	504057	Identifier	i		503995	0					
ANR	504058	PrimaryExpression	0		503995	1					
ANR	504059	Condition	i < obj -> hdr . f_nsyms	217:14:5109:5128	503995	1	True				
ANR	504060	RelationalExpression	i < obj -> hdr . f_nsyms		503995	0		<			
ANR	504061	Identifier	i		503995	0					
ANR	504062	MemberAccess	obj -> hdr . f_nsyms		503995	1					
ANR	504063	PtrMemberAccess	obj -> hdr		503995	0					
ANR	504064	Identifier	obj		503995	0					
ANR	504065	Identifier	hdr		503995	1					
ANR	504066	Identifier	f_nsyms		503995	1					
ANR	504067	PostIncDecOperationExpression	i ++	217:36:5131:5133	503995	2	True				
ANR	504068	Identifier	i		503995	0					
ANR	504069	IncDec	++		503995	1					
ANR	504070	CompoundStatement		12:3:248:291	503995	3					
ANR	504071	IdentifierDeclStatement	"RBinImport * ptr = _fill_bin_import ( obj , i ) ;"	218:3:5141:5184	503995	0	True				
ANR	504072	IdentifierDecl	"* ptr = _fill_bin_import ( obj , i )"		503995	0					
ANR	504073	IdentifierDeclType	RBinImport *		503995	0					
ANR	504074	Identifier	ptr		503995	1					
ANR	504075	AssignmentExpression	"* ptr = _fill_bin_import ( obj , i )"		503995	2		=			
ANR	504076	Identifier	ptr		503995	0					
ANR	504077	CallExpression	"_fill_bin_import ( obj , i )"		503995	1					
ANR	504078	Callee	_fill_bin_import		503995	0					
ANR	504079	Identifier	_fill_bin_import		503995	0					
ANR	504080	ArgumentList	obj		503995	1					
ANR	504081	Argument	obj		503995	0					
ANR	504082	Identifier	obj		503995	0					
ANR	504083	Argument	i		503995	1					
ANR	504084	Identifier	i		503995	0					
ANR	504085	IfStatement	if ( ptr )		503995	1					
ANR	504086	Condition	ptr	219:7:5193:5195	503995	0	True				
ANR	504087	Identifier	ptr		503995	0					
ANR	504088	CompoundStatement		13:12:305:305	503995	1					
ANR	504089	ExpressionStatement	ptr -> ordinal = ord ++	220:4:5204:5224	503995	0	True				
ANR	504090	AssignmentExpression	ptr -> ordinal = ord ++		503995	0		=			
ANR	504091	PtrMemberAccess	ptr -> ordinal		503995	0					
ANR	504092	Identifier	ptr		503995	0					
ANR	504093	Identifier	ordinal		503995	1					
ANR	504094	PostIncDecOperationExpression	ord ++		503995	1					
ANR	504095	Identifier	ord		503995	0					
ANR	504096	IncDec	++		503995	1					
ANR	504097	ExpressionStatement	"r_list_append ( ret , ptr )"	221:4:5230:5254	503995	1	True				
ANR	504098	CallExpression	"r_list_append ( ret , ptr )"		503995	0					
ANR	504099	Callee	r_list_append		503995	0					
ANR	504100	Identifier	r_list_append		503995	0					
ANR	504101	ArgumentList	ret		503995	1					
ANR	504102	Argument	ret		503995	0					
ANR	504103	Identifier	ret		503995	0					
ANR	504104	Argument	ptr		503995	1					
ANR	504105	Identifier	ptr		503995	0					
ANR	504106	ExpressionStatement	i += obj -> symbols [ i ] . n_numaux	223:3:5264:5293	503995	2	True				
ANR	504107	AssignmentExpression	i += obj -> symbols [ i ] . n_numaux		503995	0		+=			
ANR	504108	Identifier	i		503995	0					
ANR	504109	MemberAccess	obj -> symbols [ i ] . n_numaux		503995	1					
ANR	504110	ArrayIndexing	obj -> symbols [ i ]		503995	0					
ANR	504111	PtrMemberAccess	obj -> symbols		503995	0					
ANR	504112	Identifier	obj		503995	0					
ANR	504113	Identifier	symbols		503995	1					
ANR	504114	Identifier	i		503995	1					
ANR	504115	Identifier	n_numaux		503995	1					
ANR	504116	ReturnStatement	return ret ;	226:1:5303:5313	503995	6	True				
ANR	504117	Identifier	ret		503995	0					
ANR	504118	ReturnType	static RList *		503995	1					
ANR	504119	Identifier	imports		503995	2					
ANR	504120	ParameterList	RBinFile * bf		503995	3					
ANR	504121	Parameter	RBinFile * bf	207:22:4878:4889	503995	0	True				
ANR	504122	ParameterType	RBinFile *		503995	0					
ANR	504123	Identifier	bf		503995	1					
ANR	504124	CFGEntryNode	ENTRY		503995		True				
ANR	504125	CFGExitNode	EXIT		503995		True				
ANR	504126	Symbol	obj -> hdr		503995						
ANR	504127	Symbol	bf		503995						
ANR	504128	Symbol	_fill_bin_import		503995						
ANR	504129	Symbol	* ret		503995						
ANR	504130	Symbol	* * obj		503995						
ANR	504131	Symbol	ret -> free		503995						
ANR	504132	Symbol	* bf -> o		503995						
ANR	504133	Symbol	bf -> o		503995						
ANR	504134	Symbol	* ptr		503995						
ANR	504135	Symbol	obj -> symbols		503995						
ANR	504136	Symbol	free		503995						
ANR	504137	Symbol	ret		503995						
ANR	504138	Symbol	bf -> o -> bin_obj		503995						
ANR	504139	Symbol	ord		503995						
ANR	504140	Symbol	* obj		503995						
ANR	504141	Symbol	* obj -> symbols		503995						
ANR	504142	Symbol	NULL		503995						
ANR	504143	Symbol	obj -> hdr . f_nsyms		503995						
ANR	504144	Symbol	i		503995						
ANR	504145	Symbol	* bf		503995						
ANR	504146	Symbol	obj -> symbols [ i ] . n_numaux		503995						
ANR	504147	Symbol	ptr		503995						
ANR	504148	Symbol	* * bf		503995						
ANR	504149	Symbol	* i		503995						
ANR	504150	Symbol	obj		503995						
ANR	504151	Symbol	ptr -> ordinal		503995						
ANR	504152	Symbol	r_list_new		503995						
ANR	504153	Function	libs	229:0:5318:5367							
ANR	504154	FunctionDef	libs (RBinFile * bf)		504153	0					
ANR	504155	CompoundStatement		229:33:5351:5367	504153	0					
ANR	504156	ReturnStatement	return NULL ;	230:1:5354:5365	504153	0	True				
ANR	504157	Identifier	NULL		504153	0					
ANR	504158	ReturnType	static RList *		504153	1					
ANR	504159	Identifier	libs		504153	2					
ANR	504160	ParameterList	RBinFile * bf		504153	3					
ANR	504161	Parameter	RBinFile * bf	229:19:5337:5348	504153	0	True				
ANR	504162	ParameterType	RBinFile *		504153	0					
ANR	504163	Identifier	bf		504153	1					
ANR	504164	CFGEntryNode	ENTRY		504153		True				
ANR	504165	CFGExitNode	EXIT		504153		True				
ANR	504166	Symbol	NULL		504153						
ANR	504167	Symbol	bf		504153						
ANR	504168	Function	relocs	233:0:5370:6870							
ANR	504169	FunctionDef	relocs (RBinFile * bf)		504168	0					
ANR	504170	CompoundStatement		233:35:5405:6870	504168	0					
ANR	504171	IdentifierDeclStatement	struct r_bin_coff_obj * bin = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj ;	234:1:5408:5475	504168	0	True				
ANR	504172	IdentifierDecl	* bin = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		504168	0					
ANR	504173	IdentifierDeclType	struct r_bin_coff_obj *		504168	0					
ANR	504174	Identifier	bin		504168	1					
ANR	504175	AssignmentExpression	* bin = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		504168	2		=			
ANR	504176	Identifier	bin		504168	0					
ANR	504177	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		504168	1					
ANR	504178	CastTarget	struct r_bin_coff_obj *		504168	0					
ANR	504179	PtrMemberAccess	bf -> o -> bin_obj		504168	1					
ANR	504180	PtrMemberAccess	bf -> o		504168	0					
ANR	504181	Identifier	bf		504168	0					
ANR	504182	Identifier	o		504168	1					
ANR	504183	Identifier	bin_obj		504168	1					
ANR	504184	IdentifierDeclStatement	RBinReloc * reloc ;	235:1:5478:5494	504168	1	True				
ANR	504185	IdentifierDecl	* reloc		504168	0					
ANR	504186	IdentifierDeclType	RBinReloc *		504168	0					
ANR	504187	Identifier	reloc		504168	1					
ANR	504188	IdentifierDeclStatement	struct coff_reloc * rel ;	236:1:5497:5519	504168	2	True				
ANR	504189	IdentifierDecl	* rel		504168	0					
ANR	504190	IdentifierDeclType	struct coff_reloc *		504168	0					
ANR	504191	Identifier	rel		504168	1					
ANR	504192	IdentifierDeclStatement	"int j , i = 0 ;"	237:1:5522:5534	504168	3	True				
ANR	504193	IdentifierDecl	j		504168	0					
ANR	504194	IdentifierDeclType	int		504168	0					
ANR	504195	Identifier	j		504168	1					
ANR	504196	IdentifierDecl	i = 0		504168	1					
ANR	504197	IdentifierDeclType	int		504168	0					
ANR	504198	Identifier	i		504168	1					
ANR	504199	AssignmentExpression	i = 0		504168	2		=			
ANR	504200	Identifier	i		504168	0					
ANR	504201	PrimaryExpression	0		504168	1					
ANR	504202	IdentifierDeclStatement	RList * list_rel ;	238:1:5537:5552	504168	4	True				
ANR	504203	IdentifierDecl	* list_rel		504168	0					
ANR	504204	IdentifierDeclType	RList *		504168	0					
ANR	504205	Identifier	list_rel		504168	1					
ANR	504206	ExpressionStatement	list_rel = r_list_new ( )	239:1:5555:5579	504168	5	True				
ANR	504207	AssignmentExpression	list_rel = r_list_new ( )		504168	0		=			
ANR	504208	Identifier	list_rel		504168	0					
ANR	504209	CallExpression	r_list_new ( )		504168	1					
ANR	504210	Callee	r_list_new		504168	0					
ANR	504211	Identifier	r_list_new		504168	0					
ANR	504212	ArgumentList			504168	1					
ANR	504213	IfStatement	if ( ! list_rel || ! bin || ! bin -> scn_hdrs )		504168	6					
ANR	504214	Condition	! list_rel || ! bin || ! bin -> scn_hdrs	240:5:5586:5620	504168	0	True				
ANR	504215	OrExpression	! list_rel || ! bin || ! bin -> scn_hdrs		504168	0		||			
ANR	504216	UnaryOperationExpression	! list_rel		504168	0					
ANR	504217	UnaryOperator	!		504168	0					
ANR	504218	Identifier	list_rel		504168	1					
ANR	504219	OrExpression	! bin || ! bin -> scn_hdrs		504168	1		||			
ANR	504220	UnaryOperationExpression	! bin		504168	0					
ANR	504221	UnaryOperator	!		504168	0					
ANR	504222	Identifier	bin		504168	1					
ANR	504223	UnaryOperationExpression	! bin -> scn_hdrs		504168	1					
ANR	504224	UnaryOperator	!		504168	0					
ANR	504225	PtrMemberAccess	bin -> scn_hdrs		504168	1					
ANR	504226	Identifier	bin		504168	0					
ANR	504227	Identifier	scn_hdrs		504168	1					
ANR	504228	CompoundStatement		8:42:217:217	504168	1					
ANR	504229	ExpressionStatement	r_list_free ( list_rel )	241:2:5627:5649	504168	0	True				
ANR	504230	CallExpression	r_list_free ( list_rel )		504168	0					
ANR	504231	Callee	r_list_free		504168	0					
ANR	504232	Identifier	r_list_free		504168	0					
ANR	504233	ArgumentList	list_rel		504168	1					
ANR	504234	Argument	list_rel		504168	0					
ANR	504235	Identifier	list_rel		504168	0					
ANR	504236	ReturnStatement	return NULL ;	242:2:5653:5664	504168	1	True				
ANR	504237	Identifier	NULL		504168	0					
ANR	504238	ForStatement	for ( i = 0 ; i < bin -> hdr . f_nscns ; i ++ )		504168	7					
ANR	504239	ForInit	i = 0 ;	244:6:5675:5680	504168	0	True				
ANR	504240	AssignmentExpression	i = 0		504168	0		=			
ANR	504241	Identifier	i		504168	0					
ANR	504242	PrimaryExpression	0		504168	1					
ANR	504243	Condition	i < bin -> hdr . f_nscns	244:13:5682:5701	504168	1	True				
ANR	504244	RelationalExpression	i < bin -> hdr . f_nscns		504168	0		<			
ANR	504245	Identifier	i		504168	0					
ANR	504246	MemberAccess	bin -> hdr . f_nscns		504168	1					
ANR	504247	PtrMemberAccess	bin -> hdr		504168	0					
ANR	504248	Identifier	bin		504168	0					
ANR	504249	Identifier	hdr		504168	1					
ANR	504250	Identifier	f_nscns		504168	1					
ANR	504251	PostIncDecOperationExpression	i ++	244:35:5704:5706	504168	2	True				
ANR	504252	Identifier	i		504168	0					
ANR	504253	IncDec	++		504168	1					
ANR	504254	CompoundStatement		12:40:303:303	504168	3					
ANR	504255	IfStatement	if ( bin -> scn_hdrs [ i ] . s_nreloc )		504168	0					
ANR	504256	Condition	bin -> scn_hdrs [ i ] . s_nreloc	245:6:5717:5741	504168	0	True				
ANR	504257	MemberAccess	bin -> scn_hdrs [ i ] . s_nreloc		504168	0					
ANR	504258	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504259	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504260	Identifier	bin		504168	0					
ANR	504261	Identifier	scn_hdrs		504168	1					
ANR	504262	Identifier	i		504168	1					
ANR	504263	Identifier	s_nreloc		504168	1					
ANR	504264	CompoundStatement		14:3:343:417	504168	1					
ANR	504265	IdentifierDeclStatement	"int len = 0 , size = bin -> scn_hdrs [ i ] . s_nreloc * sizeof ( struct coff_reloc ) ;"	246:3:5749:5823	504168	0	True				
ANR	504266	IdentifierDecl	len = 0		504168	0					
ANR	504267	IdentifierDeclType	int		504168	0					
ANR	504268	Identifier	len		504168	1					
ANR	504269	AssignmentExpression	len = 0		504168	2		=			
ANR	504270	Identifier	len		504168	0					
ANR	504271	PrimaryExpression	0		504168	1					
ANR	504272	IdentifierDecl	size = bin -> scn_hdrs [ i ] . s_nreloc * sizeof ( struct coff_reloc )		504168	1					
ANR	504273	IdentifierDeclType	int		504168	0					
ANR	504274	Identifier	size		504168	1					
ANR	504275	AssignmentExpression	size = bin -> scn_hdrs [ i ] . s_nreloc * sizeof ( struct coff_reloc )		504168	2		=			
ANR	504276	Identifier	size		504168	0					
ANR	504277	MultiplicativeExpression	bin -> scn_hdrs [ i ] . s_nreloc * sizeof ( struct coff_reloc )		504168	1		*			
ANR	504278	MemberAccess	bin -> scn_hdrs [ i ] . s_nreloc		504168	0					
ANR	504279	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504280	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504281	Identifier	bin		504168	0					
ANR	504282	Identifier	scn_hdrs		504168	1					
ANR	504283	Identifier	i		504168	1					
ANR	504284	Identifier	s_nreloc		504168	1					
ANR	504285	SizeofExpression	sizeof ( struct coff_reloc )		504168	1					
ANR	504286	Sizeof	sizeof		504168	0					
ANR	504287	SizeofOperand	struct coff_reloc		504168	1					
ANR	504288	IfStatement	if ( size < 0 )		504168	1					
ANR	504289	Condition	size < 0	247:7:5832:5839	504168	0	True				
ANR	504290	RelationalExpression	size < 0		504168	0		<			
ANR	504291	Identifier	size		504168	0					
ANR	504292	PrimaryExpression	0		504168	1					
ANR	504293	CompoundStatement		15:17:436:436	504168	1					
ANR	504294	ReturnStatement	return list_rel ;	248:4:5848:5863	504168	0	True				
ANR	504295	Identifier	list_rel		504168	0					
ANR	504296	ExpressionStatement	"rel = calloc ( 1 , size + sizeof ( struct coff_reloc ) )"	250:3:5873:5924	504168	2	True				
ANR	504297	AssignmentExpression	"rel = calloc ( 1 , size + sizeof ( struct coff_reloc ) )"		504168	0		=			
ANR	504298	Identifier	rel		504168	0					
ANR	504299	CallExpression	"calloc ( 1 , size + sizeof ( struct coff_reloc ) )"		504168	1					
ANR	504300	Callee	calloc		504168	0					
ANR	504301	Identifier	calloc		504168	0					
ANR	504302	ArgumentList	1		504168	1					
ANR	504303	Argument	1		504168	0					
ANR	504304	PrimaryExpression	1		504168	0					
ANR	504305	Argument	size + sizeof ( struct coff_reloc )		504168	1					
ANR	504306	AdditiveExpression	size + sizeof ( struct coff_reloc )		504168	0		+			
ANR	504307	Identifier	size		504168	0					
ANR	504308	SizeofExpression	sizeof ( struct coff_reloc )		504168	1					
ANR	504309	Sizeof	sizeof		504168	0					
ANR	504310	SizeofOperand	struct coff_reloc		504168	1					
ANR	504311	IfStatement	if ( ! rel )		504168	3					
ANR	504312	Condition	! rel	251:7:5933:5936	504168	0	True				
ANR	504313	UnaryOperationExpression	! rel		504168	0					
ANR	504314	UnaryOperator	!		504168	0					
ANR	504315	Identifier	rel		504168	1					
ANR	504316	CompoundStatement		19:13:533:533	504168	1					
ANR	504317	ReturnStatement	return list_rel ;	252:4:5945:5960	504168	0	True				
ANR	504318	Identifier	list_rel		504168	0					
ANR	504319	IfStatement	if ( bin -> scn_hdrs [ i ] . s_relptr > bin -> size || bin -> scn_hdrs [ i ] . s_relptr + size > bin -> size )		504168	4					
ANR	504320	Condition	bin -> scn_hdrs [ i ] . s_relptr > bin -> size || bin -> scn_hdrs [ i ] . s_relptr + size > bin -> size	254:7:5974:6062	504168	0	True				
ANR	504321	OrExpression	bin -> scn_hdrs [ i ] . s_relptr > bin -> size || bin -> scn_hdrs [ i ] . s_relptr + size > bin -> size		504168	0		||			
ANR	504322	RelationalExpression	bin -> scn_hdrs [ i ] . s_relptr > bin -> size		504168	0		>			
ANR	504323	MemberAccess	bin -> scn_hdrs [ i ] . s_relptr		504168	0					
ANR	504324	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504325	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504326	Identifier	bin		504168	0					
ANR	504327	Identifier	scn_hdrs		504168	1					
ANR	504328	Identifier	i		504168	1					
ANR	504329	Identifier	s_relptr		504168	1					
ANR	504330	PtrMemberAccess	bin -> size		504168	1					
ANR	504331	Identifier	bin		504168	0					
ANR	504332	Identifier	size		504168	1					
ANR	504333	RelationalExpression	bin -> scn_hdrs [ i ] . s_relptr + size > bin -> size		504168	1		>			
ANR	504334	AdditiveExpression	bin -> scn_hdrs [ i ] . s_relptr + size		504168	0		+			
ANR	504335	MemberAccess	bin -> scn_hdrs [ i ] . s_relptr		504168	0					
ANR	504336	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504337	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504338	Identifier	bin		504168	0					
ANR	504339	Identifier	scn_hdrs		504168	1					
ANR	504340	Identifier	i		504168	1					
ANR	504341	Identifier	s_relptr		504168	1					
ANR	504342	Identifier	size		504168	1					
ANR	504343	PtrMemberAccess	bin -> size		504168	1					
ANR	504344	Identifier	bin		504168	0					
ANR	504345	Identifier	size		504168	1					
ANR	504346	CompoundStatement		23:50:659:659	504168	1					
ANR	504347	ExpressionStatement	free ( rel )	256:4:6071:6081	504168	0	True				
ANR	504348	CallExpression	free ( rel )		504168	0					
ANR	504349	Callee	free		504168	0					
ANR	504350	Identifier	free		504168	0					
ANR	504351	ArgumentList	rel		504168	1					
ANR	504352	Argument	rel		504168	0					
ANR	504353	Identifier	rel		504168	0					
ANR	504354	ReturnStatement	return list_rel ;	257:4:6087:6102	504168	1	True				
ANR	504355	Identifier	list_rel		504168	0					
ANR	504356	ExpressionStatement	"len = r_buf_read_at ( bin -> b , bin -> scn_hdrs [ i ] . s_relptr , ( ut8 * ) rel , size )"	259:3:6112:6184	504168	5	True				
ANR	504357	AssignmentExpression	"len = r_buf_read_at ( bin -> b , bin -> scn_hdrs [ i ] . s_relptr , ( ut8 * ) rel , size )"		504168	0		=			
ANR	504358	Identifier	len		504168	0					
ANR	504359	CallExpression	"r_buf_read_at ( bin -> b , bin -> scn_hdrs [ i ] . s_relptr , ( ut8 * ) rel , size )"		504168	1					
ANR	504360	Callee	r_buf_read_at		504168	0					
ANR	504361	Identifier	r_buf_read_at		504168	0					
ANR	504362	ArgumentList	bin -> b		504168	1					
ANR	504363	Argument	bin -> b		504168	0					
ANR	504364	PtrMemberAccess	bin -> b		504168	0					
ANR	504365	Identifier	bin		504168	0					
ANR	504366	Identifier	b		504168	1					
ANR	504367	Argument	bin -> scn_hdrs [ i ] . s_relptr		504168	1					
ANR	504368	MemberAccess	bin -> scn_hdrs [ i ] . s_relptr		504168	0					
ANR	504369	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504370	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504371	Identifier	bin		504168	0					
ANR	504372	Identifier	scn_hdrs		504168	1					
ANR	504373	Identifier	i		504168	1					
ANR	504374	Identifier	s_relptr		504168	1					
ANR	504375	Argument	( ut8 * ) rel		504168	2					
ANR	504376	CastExpression	( ut8 * ) rel		504168	0					
ANR	504377	CastTarget	ut8 *		504168	0					
ANR	504378	Identifier	rel		504168	1					
ANR	504379	Argument	size		504168	3					
ANR	504380	Identifier	size		504168	0					
ANR	504381	IfStatement	if ( len != size )		504168	6					
ANR	504382	Condition	len != size	260:7:6193:6203	504168	0	True				
ANR	504383	EqualityExpression	len != size		504168	0		!=			
ANR	504384	Identifier	len		504168	0					
ANR	504385	Identifier	size		504168	1					
ANR	504386	CompoundStatement		28:20:800:800	504168	1					
ANR	504387	ExpressionStatement	free ( rel )	261:4:6212:6222	504168	0	True				
ANR	504388	CallExpression	free ( rel )		504168	0					
ANR	504389	Callee	free		504168	0					
ANR	504390	Identifier	free		504168	0					
ANR	504391	ArgumentList	rel		504168	1					
ANR	504392	Argument	rel		504168	0					
ANR	504393	Identifier	rel		504168	0					
ANR	504394	ReturnStatement	return list_rel ;	262:4:6228:6243	504168	1	True				
ANR	504395	Identifier	list_rel		504168	0					
ANR	504396	ForStatement	for ( j = 0 ; j < bin -> scn_hdrs [ i ] . s_nreloc ; j ++ )		504168	7					
ANR	504397	ForInit	j = 0 ;	264:8:6258:6263	504168	0	True				
ANR	504398	AssignmentExpression	j = 0		504168	0		=			
ANR	504399	Identifier	j		504168	0					
ANR	504400	PrimaryExpression	0		504168	1					
ANR	504401	Condition	j < bin -> scn_hdrs [ i ] . s_nreloc	264:15:6265:6293	504168	1	True				
ANR	504402	RelationalExpression	j < bin -> scn_hdrs [ i ] . s_nreloc		504168	0		<			
ANR	504403	Identifier	j		504168	0					
ANR	504404	MemberAccess	bin -> scn_hdrs [ i ] . s_nreloc		504168	1					
ANR	504405	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504406	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504407	Identifier	bin		504168	0					
ANR	504408	Identifier	scn_hdrs		504168	1					
ANR	504409	Identifier	i		504168	1					
ANR	504410	Identifier	s_nreloc		504168	1					
ANR	504411	PostIncDecOperationExpression	j ++	264:46:6296:6298	504168	2	True				
ANR	504412	Identifier	j		504168	0					
ANR	504413	IncDec	++		504168	1					
ANR	504414	CompoundStatement		33:4:901:941	504168	3					
ANR	504415	IdentifierDeclStatement	RBinSymbol * symbol = R_NEW0 ( RBinSymbol ) ;	265:4:6307:6347	504168	0	True				
ANR	504416	IdentifierDecl	* symbol = R_NEW0 ( RBinSymbol )		504168	0					
ANR	504417	IdentifierDeclType	RBinSymbol *		504168	0					
ANR	504418	Identifier	symbol		504168	1					
ANR	504419	AssignmentExpression	* symbol = R_NEW0 ( RBinSymbol )		504168	2		=			
ANR	504420	Identifier	symbol		504168	0					
ANR	504421	CallExpression	R_NEW0 ( RBinSymbol )		504168	1					
ANR	504422	Callee	R_NEW0		504168	0					
ANR	504423	Identifier	R_NEW0		504168	0					
ANR	504424	ArgumentList	RBinSymbol		504168	1					
ANR	504425	Argument	RBinSymbol		504168	0					
ANR	504426	Identifier	RBinSymbol		504168	0					
ANR	504427	IfStatement	if ( ! symbol )		504168	1					
ANR	504428	Condition	! symbol	266:8:6357:6363	504168	0	True				
ANR	504429	UnaryOperationExpression	! symbol		504168	0					
ANR	504430	UnaryOperator	!		504168	0					
ANR	504431	Identifier	symbol		504168	1					
ANR	504432	CompoundStatement		34:17:960:960	504168	1					
ANR	504433	ContinueStatement	continue ;	267:5:6373:6381	504168	0	True				
ANR	504434	IfStatement	"if ( ! _fill_bin_symbol ( bin , rel [ j ] . r_symndx , & symbol ) )"		504168	2					
ANR	504435	Condition	"! _fill_bin_symbol ( bin , rel [ j ] . r_symndx , & symbol )"	269:8:6397:6445	504168	0	True				
ANR	504436	UnaryOperationExpression	"! _fill_bin_symbol ( bin , rel [ j ] . r_symndx , & symbol )"		504168	0					
ANR	504437	UnaryOperator	!		504168	0					
ANR	504438	CallExpression	"_fill_bin_symbol ( bin , rel [ j ] . r_symndx , & symbol )"		504168	1					
ANR	504439	Callee	_fill_bin_symbol		504168	0					
ANR	504440	Identifier	_fill_bin_symbol		504168	0					
ANR	504441	ArgumentList	bin		504168	1					
ANR	504442	Argument	bin		504168	0					
ANR	504443	Identifier	bin		504168	0					
ANR	504444	Argument	rel [ j ] . r_symndx		504168	1					
ANR	504445	MemberAccess	rel [ j ] . r_symndx		504168	0					
ANR	504446	ArrayIndexing	rel [ j ]		504168	0					
ANR	504447	Identifier	rel		504168	0					
ANR	504448	Identifier	j		504168	1					
ANR	504449	Identifier	r_symndx		504168	1					
ANR	504450	Argument	& symbol		504168	2					
ANR	504451	UnaryOperationExpression	& symbol		504168	0					
ANR	504452	UnaryOperator	&		504168	0					
ANR	504453	Identifier	symbol		504168	1					
ANR	504454	CompoundStatement		37:59:1042:1042	504168	1					
ANR	504455	ExpressionStatement	free ( symbol )	270:5:6455:6468	504168	0	True				
ANR	504456	CallExpression	free ( symbol )		504168	0					
ANR	504457	Callee	free		504168	0					
ANR	504458	Identifier	free		504168	0					
ANR	504459	ArgumentList	symbol		504168	1					
ANR	504460	Argument	symbol		504168	0					
ANR	504461	Identifier	symbol		504168	0					
ANR	504462	ContinueStatement	continue ;	271:5:6475:6483	504168	1	True				
ANR	504463	ExpressionStatement	reloc = R_NEW0 ( RBinReloc )	273:4:6495:6521	504168	3	True				
ANR	504464	AssignmentExpression	reloc = R_NEW0 ( RBinReloc )		504168	0		=			
ANR	504465	Identifier	reloc		504168	0					
ANR	504466	CallExpression	R_NEW0 ( RBinReloc )		504168	1					
ANR	504467	Callee	R_NEW0		504168	0					
ANR	504468	Identifier	R_NEW0		504168	0					
ANR	504469	ArgumentList	RBinReloc		504168	1					
ANR	504470	Argument	RBinReloc		504168	0					
ANR	504471	Identifier	RBinReloc		504168	0					
ANR	504472	IfStatement	if ( ! reloc )		504168	4					
ANR	504473	Condition	! reloc	274:8:6531:6536	504168	0	True				
ANR	504474	UnaryOperationExpression	! reloc		504168	0					
ANR	504475	UnaryOperator	!		504168	0					
ANR	504476	Identifier	reloc		504168	1					
ANR	504477	CompoundStatement		42:16:1133:1133	504168	1					
ANR	504478	ExpressionStatement	free ( symbol )	275:5:6546:6559	504168	0	True				
ANR	504479	CallExpression	free ( symbol )		504168	0					
ANR	504480	Callee	free		504168	0					
ANR	504481	Identifier	free		504168	0					
ANR	504482	ArgumentList	symbol		504168	1					
ANR	504483	Argument	symbol		504168	0					
ANR	504484	Identifier	symbol		504168	0					
ANR	504485	ContinueStatement	continue ;	276:5:6566:6574	504168	1	True				
ANR	504486	ExpressionStatement	reloc -> type = rel [ j ] . r_type	278:4:6586:6613	504168	5	True				
ANR	504487	AssignmentExpression	reloc -> type = rel [ j ] . r_type		504168	0		=			
ANR	504488	PtrMemberAccess	reloc -> type		504168	0					
ANR	504489	Identifier	reloc		504168	0					
ANR	504490	Identifier	type		504168	1					
ANR	504491	MemberAccess	rel [ j ] . r_type		504168	1					
ANR	504492	ArrayIndexing	rel [ j ]		504168	0					
ANR	504493	Identifier	rel		504168	0					
ANR	504494	Identifier	j		504168	1					
ANR	504495	Identifier	r_type		504168	1					
ANR	504496	ExpressionStatement	reloc -> symbol = symbol	279:4:6668:6690	504168	6	True				
ANR	504497	AssignmentExpression	reloc -> symbol = symbol		504168	0		=			
ANR	504498	PtrMemberAccess	reloc -> symbol		504168	0					
ANR	504499	Identifier	reloc		504168	0					
ANR	504500	Identifier	symbol		504168	1					
ANR	504501	Identifier	symbol		504168	1					
ANR	504502	ExpressionStatement	reloc -> paddr = bin -> scn_hdrs [ i ] . s_scnptr + rel [ j ] . r_vaddr	280:4:6696:6753	504168	7	True				
ANR	504503	AssignmentExpression	reloc -> paddr = bin -> scn_hdrs [ i ] . s_scnptr + rel [ j ] . r_vaddr		504168	0		=			
ANR	504504	PtrMemberAccess	reloc -> paddr		504168	0					
ANR	504505	Identifier	reloc		504168	0					
ANR	504506	Identifier	paddr		504168	1					
ANR	504507	AdditiveExpression	bin -> scn_hdrs [ i ] . s_scnptr + rel [ j ] . r_vaddr		504168	1		+			
ANR	504508	MemberAccess	bin -> scn_hdrs [ i ] . s_scnptr		504168	0					
ANR	504509	ArrayIndexing	bin -> scn_hdrs [ i ]		504168	0					
ANR	504510	PtrMemberAccess	bin -> scn_hdrs		504168	0					
ANR	504511	Identifier	bin		504168	0					
ANR	504512	Identifier	scn_hdrs		504168	1					
ANR	504513	Identifier	i		504168	1					
ANR	504514	Identifier	s_scnptr		504168	1					
ANR	504515	MemberAccess	rel [ j ] . r_vaddr		504168	1					
ANR	504516	ArrayIndexing	rel [ j ]		504168	0					
ANR	504517	Identifier	rel		504168	0					
ANR	504518	Identifier	j		504168	1					
ANR	504519	Identifier	r_vaddr		504168	1					
ANR	504520	ExpressionStatement	reloc -> vaddr = reloc -> paddr	281:4:6759:6786	504168	8	True				
ANR	504521	AssignmentExpression	reloc -> vaddr = reloc -> paddr		504168	0		=			
ANR	504522	PtrMemberAccess	reloc -> vaddr		504168	0					
ANR	504523	Identifier	reloc		504168	0					
ANR	504524	Identifier	vaddr		504168	1					
ANR	504525	PtrMemberAccess	reloc -> paddr		504168	1					
ANR	504526	Identifier	reloc		504168	0					
ANR	504527	Identifier	paddr		504168	1					
ANR	504528	ExpressionStatement	"r_list_append ( list_rel , reloc )"	282:4:6792:6823	504168	9	True				
ANR	504529	CallExpression	"r_list_append ( list_rel , reloc )"		504168	0					
ANR	504530	Callee	r_list_append		504168	0					
ANR	504531	Identifier	r_list_append		504168	0					
ANR	504532	ArgumentList	list_rel		504168	1					
ANR	504533	Argument	list_rel		504168	0					
ANR	504534	Identifier	list_rel		504168	0					
ANR	504535	Argument	reloc		504168	1					
ANR	504536	Identifier	reloc		504168	0					
ANR	504537	ExpressionStatement	free ( rel )	284:3:6833:6843	504168	8	True				
ANR	504538	CallExpression	free ( rel )		504168	0					
ANR	504539	Callee	free		504168	0					
ANR	504540	Identifier	free		504168	0					
ANR	504541	ArgumentList	rel		504168	1					
ANR	504542	Argument	rel		504168	0					
ANR	504543	Identifier	rel		504168	0					
ANR	504544	ReturnStatement	return list_rel ;	287:1:6853:6868	504168	8	True				
ANR	504545	Identifier	list_rel		504168	0					
ANR	504546	ReturnType	static RList *		504168	1					
ANR	504547	Identifier	relocs		504168	2					
ANR	504548	ParameterList	RBinFile * bf		504168	3					
ANR	504549	Parameter	RBinFile * bf	233:21:5391:5402	504168	0	True				
ANR	504550	ParameterType	RBinFile *		504168	0					
ANR	504551	Identifier	bf		504168	1					
ANR	504552	CFGEntryNode	ENTRY		504168		True				
ANR	504553	CFGExitNode	EXIT		504168		True				
ANR	504554	Symbol	bin -> size		504168						
ANR	504555	Symbol	symbol		504168						
ANR	504556	Symbol	list_rel		504168						
ANR	504557	Symbol	bin -> b		504168						
ANR	504558	Symbol	* rel		504168						
ANR	504559	Symbol	bf		504168						
ANR	504560	Symbol	bin		504168						
ANR	504561	Symbol	reloc -> paddr		504168						
ANR	504562	Symbol	calloc		504168						
ANR	504563	Symbol	reloc -> type		504168						
ANR	504564	Symbol	* bin		504168						
ANR	504565	Symbol	* bf -> o		504168						
ANR	504566	Symbol	* bin -> scn_hdrs		504168						
ANR	504567	Symbol	len		504168						
ANR	504568	Symbol	bf -> o		504168						
ANR	504569	Symbol	RBinReloc		504168						
ANR	504570	Symbol	rel		504168						
ANR	504571	Symbol	_fill_bin_symbol		504168						
ANR	504572	Symbol	reloc		504168						
ANR	504573	Symbol	* * bin		504168						
ANR	504574	Symbol	& symbol		504168						
ANR	504575	Symbol	bf -> o -> bin_obj		504168						
ANR	504576	Symbol	bin -> scn_hdrs [ i ] . s_nreloc		504168						
ANR	504577	Symbol	* reloc		504168						
ANR	504578	Symbol	rel [ j ] . r_symndx		504168						
ANR	504579	Symbol	NULL		504168						
ANR	504580	Symbol	bin -> scn_hdrs		504168						
ANR	504581	Symbol	reloc -> symbol		504168						
ANR	504582	Symbol	rel [ j ] . r_vaddr		504168						
ANR	504583	Symbol	* bf		504168						
ANR	504584	Symbol	i		504168						
ANR	504585	Symbol	j		504168						
ANR	504586	Symbol	bin -> hdr . f_nscns		504168						
ANR	504587	Symbol	reloc -> vaddr		504168						
ANR	504588	Symbol	R_NEW0		504168						
ANR	504589	Symbol	* * bf		504168						
ANR	504590	Symbol	* i		504168						
ANR	504591	Symbol	size		504168						
ANR	504592	Symbol	* j		504168						
ANR	504593	Symbol	bin -> scn_hdrs [ i ] . s_relptr		504168						
ANR	504594	Symbol	r_buf_read_at		504168						
ANR	504595	Symbol	bin -> hdr		504168						
ANR	504596	Symbol	bin -> scn_hdrs [ i ] . s_scnptr		504168						
ANR	504597	Symbol	r_list_new		504168						
ANR	504598	Symbol	RBinSymbol		504168						
ANR	504599	Symbol	rel [ j ] . r_type		504168						
ANR	504600	Function	info	290:0:6873:8836							
ANR	504601	FunctionDef	info (RBinFile * bf)		504600	0					
ANR	504602	CompoundStatement		290:36:6909:8836	504600	0					
ANR	504603	IdentifierDeclStatement	RBinInfo * ret = R_NEW0 ( RBinInfo ) ;	291:1:6912:6944	504600	0	True				
ANR	504604	IdentifierDecl	* ret = R_NEW0 ( RBinInfo )		504600	0					
ANR	504605	IdentifierDeclType	RBinInfo *		504600	0					
ANR	504606	Identifier	ret		504600	1					
ANR	504607	AssignmentExpression	* ret = R_NEW0 ( RBinInfo )		504600	2		=			
ANR	504608	Identifier	ret		504600	0					
ANR	504609	CallExpression	R_NEW0 ( RBinInfo )		504600	1					
ANR	504610	Callee	R_NEW0		504600	0					
ANR	504611	Identifier	R_NEW0		504600	0					
ANR	504612	ArgumentList	RBinInfo		504600	1					
ANR	504613	Argument	RBinInfo		504600	0					
ANR	504614	Identifier	RBinInfo		504600	0					
ANR	504615	IdentifierDeclStatement	struct r_bin_coff_obj * obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj ;	292:1:6947:7014	504600	1	True				
ANR	504616	IdentifierDecl	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		504600	0					
ANR	504617	IdentifierDeclType	struct r_bin_coff_obj *		504600	0					
ANR	504618	Identifier	obj		504600	1					
ANR	504619	AssignmentExpression	* obj = ( struct r_bin_coff_obj * ) bf -> o -> bin_obj		504600	2		=			
ANR	504620	Identifier	obj		504600	0					
ANR	504621	CastExpression	( struct r_bin_coff_obj * ) bf -> o -> bin_obj		504600	1					
ANR	504622	CastTarget	struct r_bin_coff_obj *		504600	0					
ANR	504623	PtrMemberAccess	bf -> o -> bin_obj		504600	1					
ANR	504624	PtrMemberAccess	bf -> o		504600	0					
ANR	504625	Identifier	bf		504600	0					
ANR	504626	Identifier	o		504600	1					
ANR	504627	Identifier	bin_obj		504600	1					
ANR	504628	ExpressionStatement	ret -> file = bf -> file ? strdup ( bf -> file ) : NULL	294:1:7018:7063	504600	2	True				
ANR	504629	AssignmentExpression	ret -> file = bf -> file ? strdup ( bf -> file ) : NULL		504600	0		=			
ANR	504630	PtrMemberAccess	ret -> file		504600	0					
ANR	504631	Identifier	ret		504600	0					
ANR	504632	Identifier	file		504600	1					
ANR	504633	ConditionalExpression	bf -> file ? strdup ( bf -> file ) : NULL		504600	1					
ANR	504634	Condition	bf -> file		504600	0					
ANR	504635	PtrMemberAccess	bf -> file		504600	0					
ANR	504636	Identifier	bf		504600	0					
ANR	504637	Identifier	file		504600	1					
ANR	504638	CallExpression	strdup ( bf -> file )		504600	1					
ANR	504639	Callee	strdup		504600	0					
ANR	504640	Identifier	strdup		504600	0					
ANR	504641	ArgumentList	bf -> file		504600	1					
ANR	504642	Argument	bf -> file		504600	0					
ANR	504643	PtrMemberAccess	bf -> file		504600	0					
ANR	504644	Identifier	bf		504600	0					
ANR	504645	Identifier	file		504600	1					
ANR	504646	Identifier	NULL		504600	2					
ANR	504647	ExpressionStatement	"ret -> rclass = strdup ( ""coff"" )"	295:1:7066:7095	504600	3	True				
ANR	504648	AssignmentExpression	"ret -> rclass = strdup ( ""coff"" )"		504600	0		=			
ANR	504649	PtrMemberAccess	ret -> rclass		504600	0					
ANR	504650	Identifier	ret		504600	0					
ANR	504651	Identifier	rclass		504600	1					
ANR	504652	CallExpression	"strdup ( ""coff"" )"		504600	1					
ANR	504653	Callee	strdup		504600	0					
ANR	504654	Identifier	strdup		504600	0					
ANR	504655	ArgumentList	"""coff"""		504600	1					
ANR	504656	Argument	"""coff"""		504600	0					
ANR	504657	PrimaryExpression	"""coff"""		504600	0					
ANR	504658	ExpressionStatement	"ret -> bclass = strdup ( ""coff"" )"	296:1:7098:7127	504600	4	True				
ANR	504659	AssignmentExpression	"ret -> bclass = strdup ( ""coff"" )"		504600	0		=			
ANR	504660	PtrMemberAccess	ret -> bclass		504600	0					
ANR	504661	Identifier	ret		504600	0					
ANR	504662	Identifier	bclass		504600	1					
ANR	504663	CallExpression	"strdup ( ""coff"" )"		504600	1					
ANR	504664	Callee	strdup		504600	0					
ANR	504665	Identifier	strdup		504600	0					
ANR	504666	ArgumentList	"""coff"""		504600	1					
ANR	504667	Argument	"""coff"""		504600	0					
ANR	504668	PrimaryExpression	"""coff"""		504600	0					
ANR	504669	ExpressionStatement	"ret -> type = strdup ( ""COFF (Executable file)"" )"	297:1:7130:7175	504600	5	True				
ANR	504670	AssignmentExpression	"ret -> type = strdup ( ""COFF (Executable file)"" )"		504600	0		=			
ANR	504671	PtrMemberAccess	ret -> type		504600	0					
ANR	504672	Identifier	ret		504600	0					
ANR	504673	Identifier	type		504600	1					
ANR	504674	CallExpression	"strdup ( ""COFF (Executable file)"" )"		504600	1					
ANR	504675	Callee	strdup		504600	0					
ANR	504676	Identifier	strdup		504600	0					
ANR	504677	ArgumentList	"""COFF (Executable file)"""		504600	1					
ANR	504678	Argument	"""COFF (Executable file)"""		504600	0					
ANR	504679	PrimaryExpression	"""COFF (Executable file)"""		504600	0					
ANR	504680	ExpressionStatement	"ret -> os = strdup ( ""any"" )"	298:1:7178:7202	504600	6	True				
ANR	504681	AssignmentExpression	"ret -> os = strdup ( ""any"" )"		504600	0		=			
ANR	504682	PtrMemberAccess	ret -> os		504600	0					
ANR	504683	Identifier	ret		504600	0					
ANR	504684	Identifier	os		504600	1					
ANR	504685	CallExpression	"strdup ( ""any"" )"		504600	1					
ANR	504686	Callee	strdup		504600	0					
ANR	504687	Identifier	strdup		504600	0					
ANR	504688	ArgumentList	"""any"""		504600	1					
ANR	504689	Argument	"""any"""		504600	0					
ANR	504690	PrimaryExpression	"""any"""		504600	0					
ANR	504691	ExpressionStatement	"ret -> subsystem = strdup ( ""any"" )"	299:1:7205:7236	504600	7	True				
ANR	504692	AssignmentExpression	"ret -> subsystem = strdup ( ""any"" )"		504600	0		=			
ANR	504693	PtrMemberAccess	ret -> subsystem		504600	0					
ANR	504694	Identifier	ret		504600	0					
ANR	504695	Identifier	subsystem		504600	1					
ANR	504696	CallExpression	"strdup ( ""any"" )"		504600	1					
ANR	504697	Callee	strdup		504600	0					
ANR	504698	Identifier	strdup		504600	0					
ANR	504699	ArgumentList	"""any"""		504600	1					
ANR	504700	Argument	"""any"""		504600	0					
ANR	504701	PrimaryExpression	"""any"""		504600	0					
ANR	504702	ExpressionStatement	ret -> big_endian = obj -> endian	300:1:7239:7268	504600	8	True				
ANR	504703	AssignmentExpression	ret -> big_endian = obj -> endian		504600	0		=			
ANR	504704	PtrMemberAccess	ret -> big_endian		504600	0					
ANR	504705	Identifier	ret		504600	0					
ANR	504706	Identifier	big_endian		504600	1					
ANR	504707	PtrMemberAccess	obj -> endian		504600	1					
ANR	504708	Identifier	obj		504600	0					
ANR	504709	Identifier	endian		504600	1					
ANR	504710	ExpressionStatement	ret -> has_va = false	301:1:7271:7290	504600	9	True				
ANR	504711	AssignmentExpression	ret -> has_va = false		504600	0		=			
ANR	504712	PtrMemberAccess	ret -> has_va		504600	0					
ANR	504713	Identifier	ret		504600	0					
ANR	504714	Identifier	has_va		504600	1					
ANR	504715	Identifier	false		504600	1					
ANR	504716	ExpressionStatement	ret -> dbg_info = 0	302:1:7293:7310	504600	10	True				
ANR	504717	AssignmentExpression	ret -> dbg_info = 0		504600	0		=			
ANR	504718	PtrMemberAccess	ret -> dbg_info		504600	0					
ANR	504719	Identifier	ret		504600	0					
ANR	504720	Identifier	dbg_info		504600	1					
ANR	504721	PrimaryExpression	0		504600	1					
ANR	504722	ExpressionStatement	ret -> has_lit = true	303:1:7313:7332	504600	11	True				
ANR	504723	AssignmentExpression	ret -> has_lit = true		504600	0		=			
ANR	504724	PtrMemberAccess	ret -> has_lit		504600	0					
ANR	504725	Identifier	ret		504600	0					
ANR	504726	Identifier	has_lit		504600	1					
ANR	504727	Identifier	true		504600	1					
ANR	504728	IfStatement	if ( r_coff_is_stripped ( obj ) )		504600	12					
ANR	504729	Condition	r_coff_is_stripped ( obj )	305:5:7340:7363	504600	0	True				
ANR	504730	CallExpression	r_coff_is_stripped ( obj )		504600	0					
ANR	504731	Callee	r_coff_is_stripped		504600	0					
ANR	504732	Identifier	r_coff_is_stripped		504600	0					
ANR	504733	ArgumentList	obj		504600	1					
ANR	504734	Argument	obj		504600	0					
ANR	504735	Identifier	obj		504600	0					
ANR	504736	CompoundStatement		16:31:456:456	504600	1					
ANR	504737	ExpressionStatement	ret -> dbg_info |= R_BIN_DBG_STRIPPED	306:2:7370:7405	504600	0	True				
ANR	504738	AssignmentExpression	ret -> dbg_info |= R_BIN_DBG_STRIPPED		504600	0		|=			
ANR	504739	PtrMemberAccess	ret -> dbg_info		504600	0					
ANR	504740	Identifier	ret		504600	0					
ANR	504741	Identifier	dbg_info		504600	1					
ANR	504742	Identifier	R_BIN_DBG_STRIPPED		504600	1					
ANR	504743	ElseStatement	else		504600	0					
ANR	504744	CompoundStatement		18:8:505:505	504600	0					
ANR	504745	IfStatement	if ( ! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_RELFLG ) )		504600	0					
ANR	504746	Condition	! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_RELFLG )	308:6:7423:7466	504600	0	True				
ANR	504747	UnaryOperationExpression	! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_RELFLG )		504600	0					
ANR	504748	UnaryOperator	!		504600	0					
ANR	504749	BitAndExpression	obj -> hdr . f_flags & COFF_FLAGS_TI_F_RELFLG		504600	1		&			
ANR	504750	MemberAccess	obj -> hdr . f_flags		504600	0					
ANR	504751	PtrMemberAccess	obj -> hdr		504600	0					
ANR	504752	Identifier	obj		504600	0					
ANR	504753	Identifier	hdr		504600	1					
ANR	504754	Identifier	f_flags		504600	1					
ANR	504755	Identifier	COFF_FLAGS_TI_F_RELFLG		504600	1					
ANR	504756	CompoundStatement		19:52:559:559	504600	1					
ANR	504757	ExpressionStatement	ret -> dbg_info |= R_BIN_DBG_RELOCS	309:3:7474:7507	504600	0	True				
ANR	504758	AssignmentExpression	ret -> dbg_info |= R_BIN_DBG_RELOCS		504600	0		|=			
ANR	504759	PtrMemberAccess	ret -> dbg_info		504600	0					
ANR	504760	Identifier	ret		504600	0					
ANR	504761	Identifier	dbg_info		504600	1					
ANR	504762	Identifier	R_BIN_DBG_RELOCS		504600	1					
ANR	504763	IfStatement	if ( ! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_LNNO ) )		504600	1					
ANR	504764	Condition	! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_LNNO )	311:6:7519:7560	504600	0	True				
ANR	504765	UnaryOperationExpression	! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_LNNO )		504600	0					
ANR	504766	UnaryOperator	!		504600	0					
ANR	504767	BitAndExpression	obj -> hdr . f_flags & COFF_FLAGS_TI_F_LNNO		504600	1		&			
ANR	504768	MemberAccess	obj -> hdr . f_flags		504600	0					
ANR	504769	PtrMemberAccess	obj -> hdr		504600	0					
ANR	504770	Identifier	obj		504600	0					
ANR	504771	Identifier	hdr		504600	1					
ANR	504772	Identifier	f_flags		504600	1					
ANR	504773	Identifier	COFF_FLAGS_TI_F_LNNO		504600	1					
ANR	504774	CompoundStatement		22:50:653:653	504600	1					
ANR	504775	ExpressionStatement	ret -> dbg_info |= R_BIN_DBG_LINENUMS	312:3:7568:7603	504600	0	True				
ANR	504776	AssignmentExpression	ret -> dbg_info |= R_BIN_DBG_LINENUMS		504600	0		|=			
ANR	504777	PtrMemberAccess	ret -> dbg_info		504600	0					
ANR	504778	Identifier	ret		504600	0					
ANR	504779	Identifier	dbg_info		504600	1					
ANR	504780	Identifier	R_BIN_DBG_LINENUMS		504600	1					
ANR	504781	IfStatement	if ( ! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_EXEC ) )		504600	2					
ANR	504782	Condition	! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_EXEC )	314:6:7615:7656	504600	0	True				
ANR	504783	UnaryOperationExpression	! ( obj -> hdr . f_flags & COFF_FLAGS_TI_F_EXEC )		504600	0					
ANR	504784	UnaryOperator	!		504600	0					
ANR	504785	BitAndExpression	obj -> hdr . f_flags & COFF_FLAGS_TI_F_EXEC		504600	1		&			
ANR	504786	MemberAccess	obj -> hdr . f_flags		504600	0					
ANR	504787	PtrMemberAccess	obj -> hdr		504600	0					
ANR	504788	Identifier	obj		504600	0					
ANR	504789	Identifier	hdr		504600	1					
ANR	504790	Identifier	f_flags		504600	1					
ANR	504791	Identifier	COFF_FLAGS_TI_F_EXEC		504600	1					
ANR	504792	CompoundStatement		25:50:749:749	504600	1					
ANR	504793	ExpressionStatement	ret -> dbg_info |= R_BIN_DBG_SYMS	315:3:7664:7695	504600	0	True				
ANR	504794	AssignmentExpression	ret -> dbg_info |= R_BIN_DBG_SYMS		504600	0		|=			
ANR	504795	PtrMemberAccess	ret -> dbg_info		504600	0					
ANR	504796	Identifier	ret		504600	0					
ANR	504797	Identifier	dbg_info		504600	1					
ANR	504798	Identifier	R_BIN_DBG_SYMS		504600	1					
ANR	504799	SwitchStatement	switch ( obj -> hdr . f_magic )		504600	13					
ANR	504800	Condition	obj -> hdr . f_magic	319:9:7714:7729	504600	0	True				
ANR	504801	MemberAccess	obj -> hdr . f_magic		504600	0					
ANR	504802	PtrMemberAccess	obj -> hdr		504600	0					
ANR	504803	Identifier	obj		504600	0					
ANR	504804	Identifier	hdr		504600	1					
ANR	504805	Identifier	f_magic		504600	1					
ANR	504806	CompoundStatement		30:27:822:822	504600	1					
ANR	504807	Label	case COFF_FILE_MACHINE_I386 :	320:1:7735:7762	504600	0	True				
ANR	504808	Identifier	COFF_FILE_MACHINE_I386		504600	0					
ANR	504809	ExpressionStatement	"ret -> machine = strdup ( ""i386"" )"	321:2:7766:7796	504600	1	True				
ANR	504810	AssignmentExpression	"ret -> machine = strdup ( ""i386"" )"		504600	0		=			
ANR	504811	PtrMemberAccess	ret -> machine		504600	0					
ANR	504812	Identifier	ret		504600	0					
ANR	504813	Identifier	machine		504600	1					
ANR	504814	CallExpression	"strdup ( ""i386"" )"		504600	1					
ANR	504815	Callee	strdup		504600	0					
ANR	504816	Identifier	strdup		504600	0					
ANR	504817	ArgumentList	"""i386"""		504600	1					
ANR	504818	Argument	"""i386"""		504600	0					
ANR	504819	PrimaryExpression	"""i386"""		504600	0					
ANR	504820	ExpressionStatement	"ret -> arch = strdup ( ""x86"" )"	322:2:7800:7826	504600	2	True				
ANR	504821	AssignmentExpression	"ret -> arch = strdup ( ""x86"" )"		504600	0		=			
ANR	504822	PtrMemberAccess	ret -> arch		504600	0					
ANR	504823	Identifier	ret		504600	0					
ANR	504824	Identifier	arch		504600	1					
ANR	504825	CallExpression	"strdup ( ""x86"" )"		504600	1					
ANR	504826	Callee	strdup		504600	0					
ANR	504827	Identifier	strdup		504600	0					
ANR	504828	ArgumentList	"""x86"""		504600	1					
ANR	504829	Argument	"""x86"""		504600	0					
ANR	504830	PrimaryExpression	"""x86"""		504600	0					
ANR	504831	ExpressionStatement	ret -> bits = 32	323:2:7830:7844	504600	3	True				
ANR	504832	AssignmentExpression	ret -> bits = 32		504600	0		=			
ANR	504833	PtrMemberAccess	ret -> bits		504600	0					
ANR	504834	Identifier	ret		504600	0					
ANR	504835	Identifier	bits		504600	1					
ANR	504836	PrimaryExpression	32		504600	1					
ANR	504837	BreakStatement	break ;	324:2:7848:7853	504600	4	True				
ANR	504838	Label	case COFF_FILE_MACHINE_AMD64 :	325:1:7856:7884	504600	5	True				
ANR	504839	Identifier	COFF_FILE_MACHINE_AMD64		504600	0					
ANR	504840	ExpressionStatement	"ret -> machine = strdup ( ""AMD64"" )"	326:2:7888:7919	504600	6	True				
ANR	504841	AssignmentExpression	"ret -> machine = strdup ( ""AMD64"" )"		504600	0		=			
ANR	504842	PtrMemberAccess	ret -> machine		504600	0					
ANR	504843	Identifier	ret		504600	0					
ANR	504844	Identifier	machine		504600	1					
ANR	504845	CallExpression	"strdup ( ""AMD64"" )"		504600	1					
ANR	504846	Callee	strdup		504600	0					
ANR	504847	Identifier	strdup		504600	0					
ANR	504848	ArgumentList	"""AMD64"""		504600	1					
ANR	504849	Argument	"""AMD64"""		504600	0					
ANR	504850	PrimaryExpression	"""AMD64"""		504600	0					
ANR	504851	ExpressionStatement	"ret -> arch = strdup ( ""x86"" )"	327:2:7923:7949	504600	7	True				
ANR	504852	AssignmentExpression	"ret -> arch = strdup ( ""x86"" )"		504600	0		=			
ANR	504853	PtrMemberAccess	ret -> arch		504600	0					
ANR	504854	Identifier	ret		504600	0					
ANR	504855	Identifier	arch		504600	1					
ANR	504856	CallExpression	"strdup ( ""x86"" )"		504600	1					
ANR	504857	Callee	strdup		504600	0					
ANR	504858	Identifier	strdup		504600	0					
ANR	504859	ArgumentList	"""x86"""		504600	1					
ANR	504860	Argument	"""x86"""		504600	0					
ANR	504861	PrimaryExpression	"""x86"""		504600	0					
ANR	504862	ExpressionStatement	ret -> bits = 64	328:2:7953:7967	504600	8	True				
ANR	504863	AssignmentExpression	ret -> bits = 64		504600	0		=			
ANR	504864	PtrMemberAccess	ret -> bits		504600	0					
ANR	504865	Identifier	ret		504600	0					
ANR	504866	Identifier	bits		504600	1					
ANR	504867	PrimaryExpression	64		504600	1					
ANR	504868	BreakStatement	break ;	329:2:7971:7976	504600	9	True				
ANR	504869	Label	case COFF_FILE_MACHINE_H8300 :	330:1:7979:8007	504600	10	True				
ANR	504870	Identifier	COFF_FILE_MACHINE_H8300		504600	0					
ANR	504871	ExpressionStatement	"ret -> machine = strdup ( ""H8300"" )"	331:2:8011:8042	504600	11	True				
ANR	504872	AssignmentExpression	"ret -> machine = strdup ( ""H8300"" )"		504600	0		=			
ANR	504873	PtrMemberAccess	ret -> machine		504600	0					
ANR	504874	Identifier	ret		504600	0					
ANR	504875	Identifier	machine		504600	1					
ANR	504876	CallExpression	"strdup ( ""H8300"" )"		504600	1					
ANR	504877	Callee	strdup		504600	0					
ANR	504878	Identifier	strdup		504600	0					
ANR	504879	ArgumentList	"""H8300"""		504600	1					
ANR	504880	Argument	"""H8300"""		504600	0					
ANR	504881	PrimaryExpression	"""H8300"""		504600	0					
ANR	504882	ExpressionStatement	"ret -> arch = strdup ( ""h8300"" )"	332:2:8046:8074	504600	12	True				
ANR	504883	AssignmentExpression	"ret -> arch = strdup ( ""h8300"" )"		504600	0		=			
ANR	504884	PtrMemberAccess	ret -> arch		504600	0					
ANR	504885	Identifier	ret		504600	0					
ANR	504886	Identifier	arch		504600	1					
ANR	504887	CallExpression	"strdup ( ""h8300"" )"		504600	1					
ANR	504888	Callee	strdup		504600	0					
ANR	504889	Identifier	strdup		504600	0					
ANR	504890	ArgumentList	"""h8300"""		504600	1					
ANR	504891	Argument	"""h8300"""		504600	0					
ANR	504892	PrimaryExpression	"""h8300"""		504600	0					
ANR	504893	ExpressionStatement	ret -> bits = 16	333:2:8078:8092	504600	13	True				
ANR	504894	AssignmentExpression	ret -> bits = 16		504600	0		=			
ANR	504895	PtrMemberAccess	ret -> bits		504600	0					
ANR	504896	Identifier	ret		504600	0					
ANR	504897	Identifier	bits		504600	1					
ANR	504898	PrimaryExpression	16		504600	1					
ANR	504899	BreakStatement	break ;	334:2:8096:8101	504600	14	True				
ANR	504900	Label	case COFF_FILE_MACHINE_AMD29KBE :	335:1:8104:8135	504600	15	True				
ANR	504901	Identifier	COFF_FILE_MACHINE_AMD29KBE		504600	0					
ANR	504902	Label	case COFF_FILE_MACHINE_AMD29KLE :	336:1:8138:8169	504600	16	True				
ANR	504903	Identifier	COFF_FILE_MACHINE_AMD29KLE		504600	0					
ANR	504904	ExpressionStatement	"ret -> cpu = strdup ( ""29000"" )"	337:2:8173:8200	504600	17	True				
ANR	504905	AssignmentExpression	"ret -> cpu = strdup ( ""29000"" )"		504600	0		=			
ANR	504906	PtrMemberAccess	ret -> cpu		504600	0					
ANR	504907	Identifier	ret		504600	0					
ANR	504908	Identifier	cpu		504600	1					
ANR	504909	CallExpression	"strdup ( ""29000"" )"		504600	1					
ANR	504910	Callee	strdup		504600	0					
ANR	504911	Identifier	strdup		504600	0					
ANR	504912	ArgumentList	"""29000"""		504600	1					
ANR	504913	Argument	"""29000"""		504600	0					
ANR	504914	PrimaryExpression	"""29000"""		504600	0					
ANR	504915	ExpressionStatement	"ret -> machine = strdup ( ""amd29k"" )"	338:2:8204:8236	504600	18	True				
ANR	504916	AssignmentExpression	"ret -> machine = strdup ( ""amd29k"" )"		504600	0		=			
ANR	504917	PtrMemberAccess	ret -> machine		504600	0					
ANR	504918	Identifier	ret		504600	0					
ANR	504919	Identifier	machine		504600	1					
ANR	504920	CallExpression	"strdup ( ""amd29k"" )"		504600	1					
ANR	504921	Callee	strdup		504600	0					
ANR	504922	Identifier	strdup		504600	0					
ANR	504923	ArgumentList	"""amd29k"""		504600	1					
ANR	504924	Argument	"""amd29k"""		504600	0					
ANR	504925	PrimaryExpression	"""amd29k"""		504600	0					
ANR	504926	ExpressionStatement	"ret -> arch = strdup ( ""amd29k"" )"	339:2:8240:8269	504600	19	True				
ANR	504927	AssignmentExpression	"ret -> arch = strdup ( ""amd29k"" )"		504600	0		=			
ANR	504928	PtrMemberAccess	ret -> arch		504600	0					
ANR	504929	Identifier	ret		504600	0					
ANR	504930	Identifier	arch		504600	1					
ANR	504931	CallExpression	"strdup ( ""amd29k"" )"		504600	1					
ANR	504932	Callee	strdup		504600	0					
ANR	504933	Identifier	strdup		504600	0					
ANR	504934	ArgumentList	"""amd29k"""		504600	1					
ANR	504935	Argument	"""amd29k"""		504600	0					
ANR	504936	PrimaryExpression	"""amd29k"""		504600	0					
ANR	504937	ExpressionStatement	ret -> bits = 32	340:2:8273:8287	504600	20	True				
ANR	504938	AssignmentExpression	ret -> bits = 32		504600	0		=			
ANR	504939	PtrMemberAccess	ret -> bits		504600	0					
ANR	504940	Identifier	ret		504600	0					
ANR	504941	Identifier	bits		504600	1					
ANR	504942	PrimaryExpression	32		504600	1					
ANR	504943	BreakStatement	break ;	341:2:8291:8296	504600	21	True				
ANR	504944	Label	case COFF_FILE_TI_COFF :	342:1:8300:8322	504600	22	True				
ANR	504945	Identifier	COFF_FILE_TI_COFF		504600	0					
ANR	504946	SwitchStatement	switch ( obj -> target_id )		504600	23					
ANR	504947	Condition	obj -> target_id	343:10:8334:8347	504600	0	True				
ANR	504948	PtrMemberAccess	obj -> target_id		504600	0					
ANR	504949	Identifier	obj		504600	0					
ANR	504950	Identifier	target_id		504600	1					
ANR	504951	CompoundStatement		54:26:1440:1440	504600	1					
ANR	504952	Label	case COFF_FILE_MACHINE_TMS320C54 :	344:2:8354:8386	504600	0	True				
ANR	504953	Identifier	COFF_FILE_MACHINE_TMS320C54		504600	0					
ANR	504954	ExpressionStatement	"ret -> machine = strdup ( ""c54x"" )"	345:3:8391:8421	504600	1	True				
ANR	504955	AssignmentExpression	"ret -> machine = strdup ( ""c54x"" )"		504600	0		=			
ANR	504956	PtrMemberAccess	ret -> machine		504600	0					
ANR	504957	Identifier	ret		504600	0					
ANR	504958	Identifier	machine		504600	1					
ANR	504959	CallExpression	"strdup ( ""c54x"" )"		504600	1					
ANR	504960	Callee	strdup		504600	0					
ANR	504961	Identifier	strdup		504600	0					
ANR	504962	ArgumentList	"""c54x"""		504600	1					
ANR	504963	Argument	"""c54x"""		504600	0					
ANR	504964	PrimaryExpression	"""c54x"""		504600	0					
ANR	504965	ExpressionStatement	"ret -> arch = strdup ( ""tms320"" )"	346:3:8426:8455	504600	2	True				
ANR	504966	AssignmentExpression	"ret -> arch = strdup ( ""tms320"" )"		504600	0		=			
ANR	504967	PtrMemberAccess	ret -> arch		504600	0					
ANR	504968	Identifier	ret		504600	0					
ANR	504969	Identifier	arch		504600	1					
ANR	504970	CallExpression	"strdup ( ""tms320"" )"		504600	1					
ANR	504971	Callee	strdup		504600	0					
ANR	504972	Identifier	strdup		504600	0					
ANR	504973	ArgumentList	"""tms320"""		504600	1					
ANR	504974	Argument	"""tms320"""		504600	0					
ANR	504975	PrimaryExpression	"""tms320"""		504600	0					
ANR	504976	ExpressionStatement	ret -> bits = 32	347:3:8460:8474	504600	3	True				
ANR	504977	AssignmentExpression	ret -> bits = 32		504600	0		=			
ANR	504978	PtrMemberAccess	ret -> bits		504600	0					
ANR	504979	Identifier	ret		504600	0					
ANR	504980	Identifier	bits		504600	1					
ANR	504981	PrimaryExpression	32		504600	1					
ANR	504982	BreakStatement	break ;	348:3:8479:8484	504600	4	True				
ANR	504983	Label	case COFF_FILE_MACHINE_TMS320C55 :	349:2:8488:8520	504600	5	True				
ANR	504984	Identifier	COFF_FILE_MACHINE_TMS320C55		504600	0					
ANR	504985	ExpressionStatement	"ret -> machine = strdup ( ""c55x"" )"	350:3:8525:8555	504600	6	True				
ANR	504986	AssignmentExpression	"ret -> machine = strdup ( ""c55x"" )"		504600	0		=			
ANR	504987	PtrMemberAccess	ret -> machine		504600	0					
ANR	504988	Identifier	ret		504600	0					
ANR	504989	Identifier	machine		504600	1					
ANR	504990	CallExpression	"strdup ( ""c55x"" )"		504600	1					
ANR	504991	Callee	strdup		504600	0					
ANR	504992	Identifier	strdup		504600	0					
ANR	504993	ArgumentList	"""c55x"""		504600	1					
ANR	504994	Argument	"""c55x"""		504600	0					
ANR	504995	PrimaryExpression	"""c55x"""		504600	0					
ANR	504996	ExpressionStatement	"ret -> arch = strdup ( ""tms320"" )"	351:3:8560:8589	504600	7	True				
ANR	504997	AssignmentExpression	"ret -> arch = strdup ( ""tms320"" )"		504600	0		=			
ANR	504998	PtrMemberAccess	ret -> arch		504600	0					
ANR	504999	Identifier	ret		504600	0					
ANR	505000	Identifier	arch		504600	1					
ANR	505001	CallExpression	"strdup ( ""tms320"" )"		504600	1					
ANR	505002	Callee	strdup		504600	0					
ANR	505003	Identifier	strdup		504600	0					
ANR	505004	ArgumentList	"""tms320"""		504600	1					
ANR	505005	Argument	"""tms320"""		504600	0					
ANR	505006	PrimaryExpression	"""tms320"""		504600	0					
ANR	505007	ExpressionStatement	ret -> bits = 32	352:3:8594:8608	504600	8	True				
ANR	505008	AssignmentExpression	ret -> bits = 32		504600	0		=			
ANR	505009	PtrMemberAccess	ret -> bits		504600	0					
ANR	505010	Identifier	ret		504600	0					
ANR	505011	Identifier	bits		504600	1					
ANR	505012	PrimaryExpression	32		504600	1					
ANR	505013	BreakStatement	break ;	353:3:8613:8618	504600	9	True				
ANR	505014	Label	case COFF_FILE_MACHINE_TMS320C55PLUS :	354:2:8622:8658	504600	10	True				
ANR	505015	Identifier	COFF_FILE_MACHINE_TMS320C55PLUS		504600	0					
ANR	505016	ExpressionStatement	"ret -> machine = strdup ( ""c55x+"" )"	355:3:8663:8694	504600	11	True				
ANR	505017	AssignmentExpression	"ret -> machine = strdup ( ""c55x+"" )"		504600	0		=			
ANR	505018	PtrMemberAccess	ret -> machine		504600	0					
ANR	505019	Identifier	ret		504600	0					
ANR	505020	Identifier	machine		504600	1					
ANR	505021	CallExpression	"strdup ( ""c55x+"" )"		504600	1					
ANR	505022	Callee	strdup		504600	0					
ANR	505023	Identifier	strdup		504600	0					
ANR	505024	ArgumentList	"""c55x+"""		504600	1					
ANR	505025	Argument	"""c55x+"""		504600	0					
ANR	505026	PrimaryExpression	"""c55x+"""		504600	0					
ANR	505027	ExpressionStatement	"ret -> arch = strdup ( ""tms320"" )"	356:3:8699:8728	504600	12	True				
ANR	505028	AssignmentExpression	"ret -> arch = strdup ( ""tms320"" )"		504600	0		=			
ANR	505029	PtrMemberAccess	ret -> arch		504600	0					
ANR	505030	Identifier	ret		504600	0					
ANR	505031	Identifier	arch		504600	1					
ANR	505032	CallExpression	"strdup ( ""tms320"" )"		504600	1					
ANR	505033	Callee	strdup		504600	0					
ANR	505034	Identifier	strdup		504600	0					
ANR	505035	ArgumentList	"""tms320"""		504600	1					
ANR	505036	Argument	"""tms320"""		504600	0					
ANR	505037	PrimaryExpression	"""tms320"""		504600	0					
ANR	505038	ExpressionStatement	ret -> bits = 32	357:3:8733:8747	504600	13	True				
ANR	505039	AssignmentExpression	ret -> bits = 32		504600	0		=			
ANR	505040	PtrMemberAccess	ret -> bits		504600	0					
ANR	505041	Identifier	ret		504600	0					
ANR	505042	Identifier	bits		504600	1					
ANR	505043	PrimaryExpression	32		504600	1					
ANR	505044	BreakStatement	break ;	358:3:8752:8757	504600	14	True				
ANR	505045	BreakStatement	break ;	360:2:8765:8770	504600	24	True				
ANR	505046	Label	default :	361:1:8773:8780	504600	25	True				
ANR	505047	Identifier	default		504600	0					
ANR	505048	ExpressionStatement	"ret -> machine = strdup ( ""unknown"" )"	362:2:8784:8817	504600	26	True				
ANR	505049	AssignmentExpression	"ret -> machine = strdup ( ""unknown"" )"		504600	0		=			
ANR	505050	PtrMemberAccess	ret -> machine		504600	0					
ANR	505051	Identifier	ret		504600	0					
ANR	505052	Identifier	machine		504600	1					
ANR	505053	CallExpression	"strdup ( ""unknown"" )"		504600	1					
ANR	505054	Callee	strdup		504600	0					
ANR	505055	Identifier	strdup		504600	0					
ANR	505056	ArgumentList	"""unknown"""		504600	1					
ANR	505057	Argument	"""unknown"""		504600	0					
ANR	505058	PrimaryExpression	"""unknown"""		504600	0					
ANR	505059	ReturnStatement	return ret ;	365:1:8824:8834	504600	14	True				
ANR	505060	Identifier	ret		504600	0					
ANR	505061	ReturnType	static RBinInfo *		504600	1					
ANR	505062	Identifier	info		504600	2					
ANR	505063	ParameterList	RBinFile * bf		504600	3					
ANR	505064	Parameter	RBinFile * bf	290:22:6895:6906	504600	0	True				
ANR	505065	ParameterType	RBinFile *		504600	0					
ANR	505066	Identifier	bf		504600	1					
ANR	505067	CFGEntryNode	ENTRY		504600		True				
ANR	505068	CFGExitNode	EXIT		504600		True				
ANR	505069	Symbol	obj -> target_id		504600						
ANR	505070	Symbol	obj -> hdr		504600						
ANR	505071	Symbol	ret -> big_endian		504600						
ANR	505072	Symbol	bf		504600						
ANR	505073	Symbol	ret -> subsystem		504600						
ANR	505074	Symbol	ret -> arch		504600						
ANR	505075	Symbol	* ret		504600						
ANR	505076	Symbol	* bf -> o		504600						
ANR	505077	Symbol	ret -> dbg_info		504600						
ANR	505078	Symbol	R_BIN_DBG_SYMS		504600						
ANR	505079	Symbol	ret -> bclass		504600						
ANR	505080	Symbol	bf -> file		504600						
ANR	505081	Symbol	ret -> rclass		504600						
ANR	505082	Symbol	bf -> o		504600						
ANR	505083	Symbol	R_BIN_DBG_RELOCS		504600						
ANR	505084	Symbol	ret -> has_lit		504600						
ANR	505085	Symbol	ret -> has_va		504600						
ANR	505086	Symbol	obj -> endian		504600						
ANR	505087	Symbol	COFF_FLAGS_TI_F_EXEC		504600						
ANR	505088	Symbol	ret -> cpu		504600						
ANR	505089	Symbol	ret		504600						
ANR	505090	Symbol	bf -> o -> bin_obj		504600						
ANR	505091	Symbol	ret -> os		504600						
ANR	505092	Symbol	* obj		504600						
ANR	505093	Symbol	COFF_FLAGS_TI_F_LNNO		504600						
ANR	505094	Symbol	NULL		504600						
ANR	505095	Symbol	R_BIN_DBG_STRIPPED		504600						
ANR	505096	Symbol	obj -> hdr . f_flags		504600						
ANR	505097	Symbol	R_BIN_DBG_LINENUMS		504600						
ANR	505098	Symbol	false		504600						
ANR	505099	Symbol	* bf		504600						
ANR	505100	Symbol	ret -> machine		504600						
ANR	505101	Symbol	COFF_FLAGS_TI_F_RELFLG		504600						
ANR	505102	Symbol	R_NEW0		504600						
ANR	505103	Symbol	* * bf		504600						
ANR	505104	Symbol	obj		504600						
ANR	505105	Symbol	obj -> hdr . f_magic		504600						
ANR	505106	Symbol	true		504600						
ANR	505107	Symbol	ret -> bits		504600						
ANR	505108	Symbol	RBinInfo		504600						
ANR	505109	Symbol	strdup		504600						
ANR	505110	Symbol	ret -> file		504600						
ANR	505111	Symbol	r_coff_is_stripped		504600						
ANR	505112	Symbol	ret -> type		504600						
ANR	505113	Function	fields	368:0:8839:8890							
ANR	505114	FunctionDef	fields (RBinFile * bf)		505113	0					
ANR	505115	CompoundStatement		368:35:8874:8890	505113	0					
ANR	505116	ReturnStatement	return NULL ;	369:1:8877:8888	505113	0	True				
ANR	505117	Identifier	NULL		505113	0					
ANR	505118	ReturnType	static RList *		505113	1					
ANR	505119	Identifier	fields		505113	2					
ANR	505120	ParameterList	RBinFile * bf		505113	3					
ANR	505121	Parameter	RBinFile * bf	368:21:8860:8871	505113	0	True				
ANR	505122	ParameterType	RBinFile *		505113	0					
ANR	505123	Identifier	bf		505113	1					
ANR	505124	CFGEntryNode	ENTRY		505113		True				
ANR	505125	CFGExitNode	EXIT		505113		True				
ANR	505126	Symbol	NULL		505113						
ANR	505127	Symbol	bf		505113						
ANR	505128	Function	size	373:0:8894:8938							
ANR	505129	FunctionDef	size (RBinFile * bf)		505128	0					
ANR	505130	CompoundStatement		373:31:8925:8938	505128	0					
ANR	505131	ReturnStatement	return 0 ;	374:1:8928:8936	505128	0	True				
ANR	505132	PrimaryExpression	0		505128	0					
ANR	505133	ReturnType	static ut64		505128	1					
ANR	505134	Identifier	size		505128	2					
ANR	505135	ParameterList	RBinFile * bf		505128	3					
ANR	505136	Parameter	RBinFile * bf	373:17:8911:8922	505128	0	True				
ANR	505137	ParameterType	RBinFile *		505128	0					
ANR	505138	Identifier	bf		505128	1					
ANR	505139	CFGEntryNode	ENTRY		505128		True				
ANR	505140	CFGExitNode	EXIT		505128		True				
ANR	505141	Symbol	bf		505128						
ANR	505142	Function	check_buffer	377:0:8941:9271							
ANR	505143	FunctionDef	check_buffer (RBuffer * buf)		505142	0					
ANR	505144	CompoundStatement		377:39:8980:9271	505142	0					
ANR	505145	Label	TODO :	379:0:8988:8992	505142	0	True				
ANR	505146	Identifier	TODO		505142	0					
ANR	505147	DoStatement	do		505142	1					
ANR	505148	Statement	more		505142	0					
ANR	505149	Statement	checks	379:14:9002:9007	505142	2	True				
ANR	505150	Statement	here	379:21:9009:9012	505142	3	True				
ANR	505151	Statement	to	379:26:9014:9015	505142	4	True				
ANR	505152	Statement	avoid	379:29:9017:9021	505142	5	True				
ANR	505153	Statement	false	379:35:9023:9027	505142	6	True				
ANR	505154	Statement	positives	379:41:9029:9037	505142	7	True				
ANR	505155	Statement	ut16	381:0:9040:9043	505142	8	True				
ANR	505156	Statement	MACHINE	381:5:9045:9051	505142	9	True				
ANR	505157	Statement	ut16	382:0:9053:9056	505142	10	True				
ANR	505158	Statement	NSECTIONS	382:5:9058:9066	505142	11	True				
ANR	505159	Statement	ut32	383:0:9068:9071	505142	12	True				
ANR	505160	Statement	DATE	383:5:9073:9076	505142	13	True				
ANR	505161	Statement	ut32	384:0:9078:9081	505142	14	True				
ANR	505162	Statement	PTRTOSYMTABLE	384:5:9083:9095	505142	15	True				
ANR	505163	Statement	ut32	385:0:9097:9100	505142	16	True				
ANR	505164	Statement	NUMOFSYMS	385:5:9102:9110	505142	17	True				
ANR	505165	Statement	ut16	386:0:9112:9115	505142	18	True				
ANR	505166	Statement	OPTHDRSIZE	386:5:9117:9126	505142	19	True				
ANR	505167	Statement	ut16	387:0:9128:9131	505142	20	True				
ANR	505168	Statement	CHARACTERISTICS	387:5:9133:9147	505142	21	True				
ANR	505169	IdentifierDeclStatement	ut8 tmp [ 20 ] ;	390:1:9158:9169	505142	22	True				
ANR	505170	IdentifierDecl	tmp [ 20 ]		505142	0					
ANR	505171	IdentifierDeclType	ut8 [ 20 ]		505142	0					
ANR	505172	Identifier	tmp		505142	1					
ANR	505173	PrimaryExpression	20		505142	2					
ANR	505174	IdentifierDeclStatement	"int r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) ) ;"	391:1:9172:9221	505142	23	True				
ANR	505175	IdentifierDecl	"r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		505142	0					
ANR	505176	IdentifierDeclType	int		505142	0					
ANR	505177	Identifier	r		505142	1					
ANR	505178	AssignmentExpression	"r = r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		505142	2		=			
ANR	505179	Identifier	r		505142	0					
ANR	505180	CallExpression	"r_buf_read_at ( buf , 0 , tmp , sizeof ( tmp ) )"		505142	1					
ANR	505181	Callee	r_buf_read_at		505142	0					
ANR	505182	Identifier	r_buf_read_at		505142	0					
ANR	505183	ArgumentList	buf		505142	1					
ANR	505184	Argument	buf		505142	0					
ANR	505185	Identifier	buf		505142	0					
ANR	505186	Argument	0		505142	1					
ANR	505187	PrimaryExpression	0		505142	0					
ANR	505188	Argument	tmp		505142	2					
ANR	505189	Identifier	tmp		505142	0					
ANR	505190	Argument	sizeof ( tmp )		505142	3					
ANR	505191	SizeofExpression	sizeof ( tmp )		505142	0					
ANR	505192	Sizeof	sizeof		505142	0					
ANR	505193	SizeofOperand	tmp		505142	1					
ANR	505194	ReturnStatement	return r >= 20 && r_coff_supported_arch ( tmp ) ;	392:1:9224:9269	505142	24	True				
ANR	505195	AndExpression	r >= 20 && r_coff_supported_arch ( tmp )		505142	0		&&			
ANR	505196	RelationalExpression	r >= 20		505142	0		>=			
ANR	505197	Identifier	r		505142	0					
ANR	505198	PrimaryExpression	20		505142	1					
ANR	505199	CallExpression	r_coff_supported_arch ( tmp )		505142	1					
ANR	505200	Callee	r_coff_supported_arch		505142	0					
ANR	505201	Identifier	r_coff_supported_arch		505142	0					
ANR	505202	ArgumentList	tmp		505142	1					
ANR	505203	Argument	tmp		505142	0					
ANR	505204	Identifier	tmp		505142	0					
ANR	505205	ReturnType	static bool		505142	1					
ANR	505206	Identifier	check_buffer		505142	2					
ANR	505207	ParameterList	RBuffer * buf		505142	3					
ANR	505208	Parameter	RBuffer * buf	377:25:8966:8977	505142	0	True				
ANR	505209	ParameterType	RBuffer *		505142	0					
ANR	505210	Identifier	buf		505142	1					
ANR	505211	CFGEntryNode	ENTRY		505142		True				
ANR	505212	CFGExitNode	EXIT		505142		True				
ANR	505213	CFGErrorNode	ERROR		505142		True				
ANR	505214	Symbol	buf		505142						
ANR	505215	Symbol	r		505142						
ANR	505216	Symbol	tmp		505142						
ANR	505217	Symbol	r_buf_read_at		505142						
ANR	505218	Symbol	r_coff_supported_arch		505142						
ANR	505219	DeclStmt									
ANR	505220	Decl							RBinPlugin	RBinPlugin	r_bin_plugin_coff
ANR	505221	DeclStmt									
ANR	505222	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
