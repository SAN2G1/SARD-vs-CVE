command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1223313	File	data/converged/CVE-2019-16718~_radare2/debug_qnx.c								
ANR	1223314	Function	__r_debug_pid_new	8:0:171:429							
ANR	1223315	FunctionDef	"__r_debug_pid_new (const char * path , int pid , char status , ut64 pc)"		1223314	0					
ANR	1223316	CompoundStatement		8:84:255:429	1223314	0					
ANR	1223317	IdentifierDeclStatement	RDebugPid * p = R_NEW0 ( RDebugPid ) ;	9:1:258:291	1223314	0	True				
ANR	1223318	IdentifierDecl	* p = R_NEW0 ( RDebugPid )		1223314	0					
ANR	1223319	IdentifierDeclType	RDebugPid *		1223314	0					
ANR	1223320	Identifier	p		1223314	1					
ANR	1223321	AssignmentExpression	* p = R_NEW0 ( RDebugPid )		1223314	2		=			
ANR	1223322	Identifier	p		1223314	0					
ANR	1223323	CallExpression	R_NEW0 ( RDebugPid )		1223314	1					
ANR	1223324	Callee	R_NEW0		1223314	0					
ANR	1223325	Identifier	R_NEW0		1223314	0					
ANR	1223326	ArgumentList	RDebugPid		1223314	1					
ANR	1223327	Argument	RDebugPid		1223314	0					
ANR	1223328	Identifier	RDebugPid		1223314	0					
ANR	1223329	IfStatement	if ( ! p )		1223314	1					
ANR	1223330	Condition	! p	10:5:298:299	1223314	0	True				
ANR	1223331	UnaryOperationExpression	! p		1223314	0					
ANR	1223332	UnaryOperator	!		1223314	0					
ANR	1223333	Identifier	p		1223314	1					
ANR	1223334	CompoundStatement		3:9:46:46	1223314	1					
ANR	1223335	ReturnStatement	return NULL ;	11:2:306:317	1223314	0	True				
ANR	1223336	Identifier	NULL		1223314	0					
ANR	1223337	ExpressionStatement	p -> path = strdup ( path )	13:1:323:346	1223314	2	True				
ANR	1223338	AssignmentExpression	p -> path = strdup ( path )		1223314	0		=			
ANR	1223339	PtrMemberAccess	p -> path		1223314	0					
ANR	1223340	Identifier	p		1223314	0					
ANR	1223341	Identifier	path		1223314	1					
ANR	1223342	CallExpression	strdup ( path )		1223314	1					
ANR	1223343	Callee	strdup		1223314	0					
ANR	1223344	Identifier	strdup		1223314	0					
ANR	1223345	ArgumentList	path		1223314	1					
ANR	1223346	Argument	path		1223314	0					
ANR	1223347	Identifier	path		1223314	0					
ANR	1223348	ExpressionStatement	p -> pid = pid	14:1:349:361	1223314	3	True				
ANR	1223349	AssignmentExpression	p -> pid = pid		1223314	0		=			
ANR	1223350	PtrMemberAccess	p -> pid		1223314	0					
ANR	1223351	Identifier	p		1223314	0					
ANR	1223352	Identifier	pid		1223314	1					
ANR	1223353	Identifier	pid		1223314	1					
ANR	1223354	ExpressionStatement	p -> status = status	15:1:364:382	1223314	4	True				
ANR	1223355	AssignmentExpression	p -> status = status		1223314	0		=			
ANR	1223356	PtrMemberAccess	p -> status		1223314	0					
ANR	1223357	Identifier	p		1223314	0					
ANR	1223358	Identifier	status		1223314	1					
ANR	1223359	Identifier	status		1223314	1					
ANR	1223360	ExpressionStatement	p -> runnable = true	16:1:385:403	1223314	5	True				
ANR	1223361	AssignmentExpression	p -> runnable = true		1223314	0		=			
ANR	1223362	PtrMemberAccess	p -> runnable		1223314	0					
ANR	1223363	Identifier	p		1223314	0					
ANR	1223364	Identifier	runnable		1223314	1					
ANR	1223365	Identifier	true		1223314	1					
ANR	1223366	ExpressionStatement	p -> pc = pc	17:1:406:416	1223314	6	True				
ANR	1223367	AssignmentExpression	p -> pc = pc		1223314	0		=			
ANR	1223368	PtrMemberAccess	p -> pc		1223314	0					
ANR	1223369	Identifier	p		1223314	0					
ANR	1223370	Identifier	pc		1223314	1					
ANR	1223371	Identifier	pc		1223314	1					
ANR	1223372	ReturnStatement	return p ;	18:1:419:427	1223314	7	True				
ANR	1223373	Identifier	p		1223314	0					
ANR	1223374	ReturnType	R_API RDebugPid *		1223314	1					
ANR	1223375	Identifier	__r_debug_pid_new		1223314	2					
ANR	1223376	ParameterList	"const char * path , int pid , char status , ut64 pc"		1223314	3					
ANR	1223377	Parameter	const char * path	8:35:206:221	1223314	0	True				
ANR	1223378	ParameterType	const char *		1223314	0					
ANR	1223379	Identifier	path		1223314	1					
ANR	1223380	Parameter	int pid	8:53:224:230	1223314	1	True				
ANR	1223381	ParameterType	int		1223314	0					
ANR	1223382	Identifier	pid		1223314	1					
ANR	1223383	Parameter	char status	8:62:233:243	1223314	2	True				
ANR	1223384	ParameterType	char		1223314	0					
ANR	1223385	Identifier	status		1223314	1					
ANR	1223386	Parameter	ut64 pc	8:75:246:252	1223314	3	True				
ANR	1223387	ParameterType	ut64		1223314	0					
ANR	1223388	Identifier	pc		1223314	1					
ANR	1223389	CFGEntryNode	ENTRY		1223314		True				
ANR	1223390	CFGExitNode	EXIT		1223314		True				
ANR	1223391	Symbol	NULL		1223314						
ANR	1223392	Symbol	p -> pid		1223314						
ANR	1223393	Symbol	RDebugPid		1223314						
ANR	1223394	Symbol	pid		1223314						
ANR	1223395	Symbol	p		1223314						
ANR	1223396	Symbol	p -> status		1223314						
ANR	1223397	Symbol	path		1223314						
ANR	1223398	Symbol	R_NEW0		1223314						
ANR	1223399	Symbol	pc		1223314						
ANR	1223400	Symbol	p -> path		1223314						
ANR	1223401	Symbol	true		1223314						
ANR	1223402	Symbol	p -> pc		1223314						
ANR	1223403	Symbol	* p		1223314						
ANR	1223404	Symbol	strdup		1223314						
ANR	1223405	Symbol	p -> runnable		1223314						
ANR	1223406	Symbol	status		1223314						
ANR	1223407	Function	__r_debug_pid_free	20:0:431:526							
ANR	1223408	FunctionDef	__r_debug_pid_free (RDebugPid * pid)		1223407	0					
ANR	1223409	CompoundStatement		20:47:478:526	1223407	0					
ANR	1223410	ExpressionStatement	free ( pid -> path )	21:1:481:497	1223407	0	True				
ANR	1223411	CallExpression	free ( pid -> path )		1223407	0					
ANR	1223412	Callee	free		1223407	0					
ANR	1223413	Identifier	free		1223407	0					
ANR	1223414	ArgumentList	pid -> path		1223407	1					
ANR	1223415	Argument	pid -> path		1223407	0					
ANR	1223416	PtrMemberAccess	pid -> path		1223407	0					
ANR	1223417	Identifier	pid		1223407	0					
ANR	1223418	Identifier	path		1223407	1					
ANR	1223419	ExpressionStatement	free ( pid )	22:1:500:510	1223407	1	True				
ANR	1223420	CallExpression	free ( pid )		1223407	0					
ANR	1223421	Callee	free		1223407	0					
ANR	1223422	Identifier	free		1223407	0					
ANR	1223423	ArgumentList	pid		1223407	1					
ANR	1223424	Argument	pid		1223407	0					
ANR	1223425	Identifier	pid		1223407	0					
ANR	1223426	ReturnStatement	return NULL ;	23:1:513:524	1223407	2	True				
ANR	1223427	Identifier	NULL		1223407	0					
ANR	1223428	ReturnType	R_API void *		1223407	1					
ANR	1223429	Identifier	__r_debug_pid_free		1223407	2					
ANR	1223430	ParameterList	RDebugPid * pid		1223407	3					
ANR	1223431	Parameter	RDebugPid * pid	20:31:462:475	1223407	0	True				
ANR	1223432	ParameterType	RDebugPid *		1223407	0					
ANR	1223433	Identifier	pid		1223407	1					
ANR	1223434	CFGEntryNode	ENTRY		1223407		True				
ANR	1223435	CFGExitNode	EXIT		1223407		True				
ANR	1223436	Symbol	NULL		1223407						
ANR	1223437	Symbol	pid -> path		1223407						
ANR	1223438	Symbol	* pid		1223407						
ANR	1223439	Symbol	pid		1223407						
ANR	1223440	ClassDef	<unnamed>	27:8:563:597							
ANR	1223441	DeclStmt									
ANR	1223442	Decl							libqnxr_t	libqnxr_t	desc
ANR	1223443	DeclStmt									
ANR	1223444	Decl									RIOQnx
ANR	1223445	DeclStmt									
ANR	1223446	Decl							libqnxr_t	libqnxr_t *	desc
ANR	1223447	DeclStmt									
ANR	1223448	Decl							ut8	ut8 *	reg_buf
ANR	1223449	DeclStmt									
ANR	1223450	Decl							int	int	buf_size
ANR	1223451	Function	pidlist_cb	35:0:685:827							
ANR	1223452	FunctionDef	"pidlist_cb (void * ctx , pid_t pid , char * name)"		1223451	0					
ANR	1223453	CompoundStatement		35:58:743:827	1223451	0					
ANR	1223454	IdentifierDeclStatement	RList * list = ctx ;	36:1:746:763	1223451	0	True				
ANR	1223455	IdentifierDecl	* list = ctx		1223451	0					
ANR	1223456	IdentifierDeclType	RList *		1223451	0					
ANR	1223457	Identifier	list		1223451	1					
ANR	1223458	AssignmentExpression	* list = ctx		1223451	2		=			
ANR	1223459	Identifier	ctx		1223451	0					
ANR	1223460	Identifier	ctx		1223451	1					
ANR	1223461	ExpressionStatement	"r_list_append ( list , __r_debug_pid_new ( name , pid , 's' , 0 ) )"	37:1:766:825	1223451	1	True				
ANR	1223462	CallExpression	"r_list_append ( list , __r_debug_pid_new ( name , pid , 's' , 0 ) )"		1223451	0					
ANR	1223463	Callee	r_list_append		1223451	0					
ANR	1223464	Identifier	r_list_append		1223451	0					
ANR	1223465	ArgumentList	list		1223451	1					
ANR	1223466	Argument	list		1223451	0					
ANR	1223467	Identifier	list		1223451	0					
ANR	1223468	Argument	"__r_debug_pid_new ( name , pid , 's' , 0 )"		1223451	1					
ANR	1223469	CallExpression	"__r_debug_pid_new ( name , pid , 's' , 0 )"		1223451	0					
ANR	1223470	Callee	__r_debug_pid_new		1223451	0					
ANR	1223471	Identifier	__r_debug_pid_new		1223451	0					
ANR	1223472	ArgumentList	name		1223451	1					
ANR	1223473	Argument	name		1223451	0					
ANR	1223474	Identifier	name		1223451	0					
ANR	1223475	Argument	pid		1223451	1					
ANR	1223476	Identifier	pid		1223451	0					
ANR	1223477	Argument	's'		1223451	2					
ANR	1223478	PrimaryExpression	's'		1223451	0					
ANR	1223479	Argument	0		1223451	3					
ANR	1223480	PrimaryExpression	0		1223451	0					
ANR	1223481	ReturnType	static void		1223451	1					
ANR	1223482	Identifier	pidlist_cb		1223451	2					
ANR	1223483	ParameterList	"void * ctx , pid_t pid , char * name"		1223451	3					
ANR	1223484	Parameter	void * ctx	35:24:709:717	1223451	0	True				
ANR	1223485	ParameterType	void *		1223451	0					
ANR	1223486	Identifier	ctx		1223451	1					
ANR	1223487	Parameter	pid_t pid	35:35:720:728	1223451	1	True				
ANR	1223488	ParameterType	pid_t		1223451	0					
ANR	1223489	Identifier	pid		1223451	1					
ANR	1223490	Parameter	char * name	35:46:731:740	1223451	2	True				
ANR	1223491	ParameterType	char *		1223451	0					
ANR	1223492	Identifier	name		1223451	1					
ANR	1223493	CFGEntryNode	ENTRY		1223451		True				
ANR	1223494	CFGExitNode	EXIT		1223451		True				
ANR	1223495	Symbol	ctx		1223451						
ANR	1223496	Symbol	name		1223451						
ANR	1223497	Symbol	pid		1223451						
ANR	1223498	Symbol	list		1223451						
ANR	1223499	Symbol	__r_debug_pid_new		1223451						
ANR	1223500	Function	r_debug_qnx_select	40:0:830:932							
ANR	1223501	FunctionDef	"r_debug_qnx_select (RDebug * dbg , int pid , int tid)"		1223500	0					
ANR	1223502	CompoundStatement		40:62:892:932	1223500	0					
ANR	1223503	ReturnStatement	"return qnxr_select ( desc , pid , tid ) ;"	41:1:895:930	1223500	0	True				
ANR	1223504	CallExpression	"qnxr_select ( desc , pid , tid )"		1223500	0					
ANR	1223505	Callee	qnxr_select		1223500	0					
ANR	1223506	Identifier	qnxr_select		1223500	0					
ANR	1223507	ArgumentList	desc		1223500	1					
ANR	1223508	Argument	desc		1223500	0					
ANR	1223509	Identifier	desc		1223500	0					
ANR	1223510	Argument	pid		1223500	1					
ANR	1223511	Identifier	pid		1223500	0					
ANR	1223512	Argument	tid		1223500	2					
ANR	1223513	Identifier	tid		1223500	0					
ANR	1223514	ReturnType	static int		1223500	1					
ANR	1223515	Identifier	r_debug_qnx_select		1223500	2					
ANR	1223516	ParameterList	"RDebug * dbg , int pid , int tid"		1223500	3					
ANR	1223517	Parameter	RDebug * dbg	40:31:861:871	1223500	0	True				
ANR	1223518	ParameterType	RDebug *		1223500	0					
ANR	1223519	Identifier	dbg		1223500	1					
ANR	1223520	Parameter	int pid	40:44:874:880	1223500	1	True				
ANR	1223521	ParameterType	int		1223500	0					
ANR	1223522	Identifier	pid		1223500	1					
ANR	1223523	Parameter	int tid	40:53:883:889	1223500	2	True				
ANR	1223524	ParameterType	int		1223500	0					
ANR	1223525	Identifier	tid		1223500	1					
ANR	1223526	CFGEntryNode	ENTRY		1223500		True				
ANR	1223527	CFGExitNode	EXIT		1223500		True				
ANR	1223528	Symbol	dbg		1223500						
ANR	1223529	Symbol	pid		1223500						
ANR	1223530	Symbol	tid		1223500						
ANR	1223531	Symbol	qnxr_select		1223500						
ANR	1223532	Symbol	desc		1223500						
ANR	1223533	Function	r_debug_qnx_tids	44:0:935:1049							
ANR	1223534	FunctionDef	"r_debug_qnx_tids (RDebug * dbg , int pid)"		1223533	0					
ANR	1223535	CompoundStatement		44:54:989:1049	1223533	0					
ANR	1223536	ExpressionStatement	"eprintf ( ""%s: TODO: Threads\\n"" , __func__ )"	45:1:992:1033	1223533	0	True				
ANR	1223537	CallExpression	"eprintf ( ""%s: TODO: Threads\\n"" , __func__ )"		1223533	0					
ANR	1223538	Callee	eprintf		1223533	0					
ANR	1223539	Identifier	eprintf		1223533	0					
ANR	1223540	ArgumentList	"""%s: TODO: Threads\\n"""		1223533	1					
ANR	1223541	Argument	"""%s: TODO: Threads\\n"""		1223533	0					
ANR	1223542	PrimaryExpression	"""%s: TODO: Threads\\n"""		1223533	0					
ANR	1223543	Argument	__func__		1223533	1					
ANR	1223544	Identifier	__func__		1223533	0					
ANR	1223545	ReturnStatement	return NULL ;	46:1:1036:1047	1223533	1	True				
ANR	1223546	Identifier	NULL		1223533	0					
ANR	1223547	ReturnType	static RList *		1223533	1					
ANR	1223548	Identifier	r_debug_qnx_tids		1223533	2					
ANR	1223549	ParameterList	"RDebug * dbg , int pid"		1223533	3					
ANR	1223550	Parameter	RDebug * dbg	44:32:967:977	1223533	0	True				
ANR	1223551	ParameterType	RDebug *		1223533	0					
ANR	1223552	Identifier	dbg		1223533	1					
ANR	1223553	Parameter	int pid	44:45:980:986	1223533	1	True				
ANR	1223554	ParameterType	int		1223533	0					
ANR	1223555	Identifier	pid		1223533	1					
ANR	1223556	CFGEntryNode	ENTRY		1223533		True				
ANR	1223557	CFGExitNode	EXIT		1223533		True				
ANR	1223558	Symbol	NULL		1223533						
ANR	1223559	Symbol	__func__		1223533						
ANR	1223560	Symbol	dbg		1223533						
ANR	1223561	Symbol	pid		1223533						
ANR	1223562	Function	r_debug_qnx_pids	50:0:1053:1382							
ANR	1223563	FunctionDef	"r_debug_qnx_pids (RDebug * dbg , int pid)"		1223562	0					
ANR	1223564	CompoundStatement		50:54:1107:1382	1223562	0					
ANR	1223565	IdentifierDeclStatement	RList * list = r_list_new ( ) ;	51:1:1110:1137	1223562	0	True				
ANR	1223566	IdentifierDecl	* list = r_list_new ( )		1223562	0					
ANR	1223567	IdentifierDeclType	RList *		1223562	0					
ANR	1223568	Identifier	list		1223562	1					
ANR	1223569	AssignmentExpression	* list = r_list_new ( )		1223562	2		=			
ANR	1223570	Identifier	list		1223562	0					
ANR	1223571	CallExpression	r_list_new ( )		1223562	1					
ANR	1223572	Callee	r_list_new		1223562	0					
ANR	1223573	Identifier	r_list_new		1223562	0					
ANR	1223574	ArgumentList			1223562	1					
ANR	1223575	IfStatement	if ( ! list )		1223562	1					
ANR	1223576	Condition	! list	52:5:1144:1148	1223562	0	True				
ANR	1223577	UnaryOperationExpression	! list		1223562	0					
ANR	1223578	UnaryOperator	!		1223562	0					
ANR	1223579	Identifier	list		1223562	1					
ANR	1223580	CompoundStatement		3:12:43:43	1223562	1					
ANR	1223581	ReturnStatement	return NULL ;	53:2:1155:1166	1223562	0	True				
ANR	1223582	Identifier	NULL		1223562	0					
ANR	1223583	ExpressionStatement	list -> free = ( RListFree ) & __r_debug_pid_free	55:1:1172:1215	1223562	2	True				
ANR	1223584	AssignmentExpression	list -> free = ( RListFree ) & __r_debug_pid_free		1223562	0		=			
ANR	1223585	PtrMemberAccess	list -> free		1223562	0					
ANR	1223586	Identifier	list		1223562	0					
ANR	1223587	Identifier	free		1223562	1					
ANR	1223588	CastExpression	( RListFree ) & __r_debug_pid_free		1223562	1					
ANR	1223589	CastTarget	RListFree		1223562	0					
ANR	1223590	UnaryOperationExpression	& __r_debug_pid_free		1223562	1					
ANR	1223591	UnaryOperator	&		1223562	0					
ANR	1223592	Identifier	__r_debug_pid_free		1223562	1					
ANR	1223593	IfStatement	if ( pid )		1223562	3					
ANR	1223594	Condition	pid	58:5:1235:1237	1223562	0	True				
ANR	1223595	Identifier	pid		1223562	0					
ANR	1223596	CompoundStatement		9:10:132:132	1223562	1					
ANR	1223597	ExpressionStatement	"r_list_append ( list , __r_debug_pid_new ( ""(current)"" , pid , 's' , 0 ) )"	59:2:1244:1310	1223562	0	True				
ANR	1223598	CallExpression	"r_list_append ( list , __r_debug_pid_new ( ""(current)"" , pid , 's' , 0 ) )"		1223562	0					
ANR	1223599	Callee	r_list_append		1223562	0					
ANR	1223600	Identifier	r_list_append		1223562	0					
ANR	1223601	ArgumentList	list		1223562	1					
ANR	1223602	Argument	list		1223562	0					
ANR	1223603	Identifier	list		1223562	0					
ANR	1223604	Argument	"__r_debug_pid_new ( ""(current)"" , pid , 's' , 0 )"		1223562	1					
ANR	1223605	CallExpression	"__r_debug_pid_new ( ""(current)"" , pid , 's' , 0 )"		1223562	0					
ANR	1223606	Callee	__r_debug_pid_new		1223562	0					
ANR	1223607	Identifier	__r_debug_pid_new		1223562	0					
ANR	1223608	ArgumentList	"""(current)"""		1223562	1					
ANR	1223609	Argument	"""(current)"""		1223562	0					
ANR	1223610	PrimaryExpression	"""(current)"""		1223562	0					
ANR	1223611	Argument	pid		1223562	1					
ANR	1223612	Identifier	pid		1223562	0					
ANR	1223613	Argument	's'		1223562	2					
ANR	1223614	PrimaryExpression	's'		1223562	0					
ANR	1223615	Argument	0		1223562	3					
ANR	1223616	PrimaryExpression	0		1223562	0					
ANR	1223617	ElseStatement	else		1223562	0					
ANR	1223618	CompoundStatement		11:8:212:212	1223562	0					
ANR	1223619	ExpressionStatement	"qnxr_pidlist ( desc , list , & pidlist_cb )"	61:2:1324:1362	1223562	0	True				
ANR	1223620	CallExpression	"qnxr_pidlist ( desc , list , & pidlist_cb )"		1223562	0					
ANR	1223621	Callee	qnxr_pidlist		1223562	0					
ANR	1223622	Identifier	qnxr_pidlist		1223562	0					
ANR	1223623	ArgumentList	desc		1223562	1					
ANR	1223624	Argument	desc		1223562	0					
ANR	1223625	Identifier	desc		1223562	0					
ANR	1223626	Argument	list		1223562	1					
ANR	1223627	Identifier	list		1223562	0					
ANR	1223628	Argument	& pidlist_cb		1223562	2					
ANR	1223629	UnaryOperationExpression	& pidlist_cb		1223562	0					
ANR	1223630	UnaryOperator	&		1223562	0					
ANR	1223631	Identifier	pidlist_cb		1223562	1					
ANR	1223632	ReturnStatement	return list ;	64:1:1369:1380	1223562	4	True				
ANR	1223633	Identifier	list		1223562	0					
ANR	1223634	ReturnType	static RList *		1223562	1					
ANR	1223635	Identifier	r_debug_qnx_pids		1223562	2					
ANR	1223636	ParameterList	"RDebug * dbg , int pid"		1223562	3					
ANR	1223637	Parameter	RDebug * dbg	50:32:1085:1095	1223562	0	True				
ANR	1223638	ParameterType	RDebug *		1223562	0					
ANR	1223639	Identifier	dbg		1223562	1					
ANR	1223640	Parameter	int pid	50:45:1098:1104	1223562	1	True				
ANR	1223641	ParameterType	int		1223562	0					
ANR	1223642	Identifier	pid		1223562	1					
ANR	1223643	CFGEntryNode	ENTRY		1223562		True				
ANR	1223644	CFGExitNode	EXIT		1223562		True				
ANR	1223645	Symbol	NULL		1223562						
ANR	1223646	Symbol	* list		1223562						
ANR	1223647	Symbol	list -> free		1223562						
ANR	1223648	Symbol	dbg		1223562						
ANR	1223649	Symbol	& pidlist_cb		1223562						
ANR	1223650	Symbol	pid		1223562						
ANR	1223651	Symbol	list		1223562						
ANR	1223652	Symbol	& __r_debug_pid_free		1223562						
ANR	1223653	Symbol	r_list_new		1223562						
ANR	1223654	Symbol	__r_debug_pid_new		1223562						
ANR	1223655	Symbol	desc		1223562						
ANR	1223656	Function	r_debug_qnx_reg_read	67:0:1385:2422							
ANR	1223657	FunctionDef	"r_debug_qnx_reg_read (RDebug * dbg , int type , ut8 * buf , int size)"		1223656	0					
ANR	1223658	CompoundStatement		67:76:1461:2422	1223656	0					
ANR	1223659	IdentifierDeclStatement	int copy_size ;	68:1:1464:1477	1223656	0	True				
ANR	1223660	IdentifierDecl	copy_size		1223656	0					
ANR	1223661	IdentifierDeclType	int		1223656	0					
ANR	1223662	Identifier	copy_size		1223656	1					
ANR	1223663	IdentifierDeclStatement	int buflen = 0 ;	69:1:1480:1494	1223656	1	True				
ANR	1223664	IdentifierDecl	buflen = 0		1223656	0					
ANR	1223665	IdentifierDeclType	int		1223656	0					
ANR	1223666	Identifier	buflen		1223656	1					
ANR	1223667	AssignmentExpression	buflen = 0		1223656	2		=			
ANR	1223668	Identifier	buflen		1223656	0					
ANR	1223669	PrimaryExpression	0		1223656	1					
ANR	1223670	IfStatement	if ( ! desc )		1223656	2					
ANR	1223671	Condition	! desc	70:5:1501:1505	1223656	0	True				
ANR	1223672	UnaryOperationExpression	! desc		1223656	0					
ANR	1223673	UnaryOperator	!		1223656	0					
ANR	1223674	Identifier	desc		1223656	1					
ANR	1223675	CompoundStatement		4:12:46:46	1223656	1					
ANR	1223676	ReturnStatement	return - 1 ;	71:2:1512:1521	1223656	0	True				
ANR	1223677	UnaryOperationExpression	- 1		1223656	0					
ANR	1223678	UnaryOperator	-		1223656	0					
ANR	1223679	PrimaryExpression	1		1223656	1					
ANR	1223680	IdentifierDeclStatement	int len = qnxr_read_registers ( desc ) ;	73:1:1527:1563	1223656	3	True				
ANR	1223681	IdentifierDecl	len = qnxr_read_registers ( desc )		1223656	0					
ANR	1223682	IdentifierDeclType	int		1223656	0					
ANR	1223683	Identifier	len		1223656	1					
ANR	1223684	AssignmentExpression	len = qnxr_read_registers ( desc )		1223656	2		=			
ANR	1223685	Identifier	len		1223656	0					
ANR	1223686	CallExpression	qnxr_read_registers ( desc )		1223656	1					
ANR	1223687	Callee	qnxr_read_registers		1223656	0					
ANR	1223688	Identifier	qnxr_read_registers		1223656	0					
ANR	1223689	ArgumentList	desc		1223656	1					
ANR	1223690	Argument	desc		1223656	0					
ANR	1223691	Identifier	desc		1223656	0					
ANR	1223692	IfStatement	if ( len <= 0 )		1223656	4					
ANR	1223693	Condition	len <= 0	74:5:1570:1577	1223656	0	True				
ANR	1223694	RelationalExpression	len <= 0		1223656	0		<=			
ANR	1223695	Identifier	len		1223656	0					
ANR	1223696	PrimaryExpression	0		1223656	1					
ANR	1223697	CompoundStatement		8:15:118:118	1223656	1					
ANR	1223698	ReturnStatement	return - 1 ;	75:2:1584:1593	1223656	0	True				
ANR	1223699	UnaryOperationExpression	- 1		1223656	0					
ANR	1223700	UnaryOperator	-		1223656	0					
ANR	1223701	PrimaryExpression	1		1223656	1					
ANR	1223702	ExpressionStatement	"free ( r_reg_get_bytes ( dbg -> reg , type , & buflen ) )"	78:1:1636:1684	1223656	5	True				
ANR	1223703	CallExpression	"free ( r_reg_get_bytes ( dbg -> reg , type , & buflen ) )"		1223656	0					
ANR	1223704	Callee	free		1223656	0					
ANR	1223705	Identifier	free		1223656	0					
ANR	1223706	ArgumentList	"r_reg_get_bytes ( dbg -> reg , type , & buflen )"		1223656	1					
ANR	1223707	Argument	"r_reg_get_bytes ( dbg -> reg , type , & buflen )"		1223656	0					
ANR	1223708	CallExpression	"r_reg_get_bytes ( dbg -> reg , type , & buflen )"		1223656	0					
ANR	1223709	Callee	r_reg_get_bytes		1223656	0					
ANR	1223710	Identifier	r_reg_get_bytes		1223656	0					
ANR	1223711	ArgumentList	dbg -> reg		1223656	1					
ANR	1223712	Argument	dbg -> reg		1223656	0					
ANR	1223713	PtrMemberAccess	dbg -> reg		1223656	0					
ANR	1223714	Identifier	dbg		1223656	0					
ANR	1223715	Identifier	reg		1223656	1					
ANR	1223716	Argument	type		1223656	1					
ANR	1223717	Identifier	type		1223656	0					
ANR	1223718	Argument	& buflen		1223656	2					
ANR	1223719	UnaryOperationExpression	& buflen		1223656	0					
ANR	1223720	UnaryOperator	&		1223656	0					
ANR	1223721	Identifier	buflen		1223656	1					
ANR	1223722	IfStatement	if ( size < len )		1223656	6					
ANR	1223723	Condition	size < len	79:5:1691:1700	1223656	0	True				
ANR	1223724	RelationalExpression	size < len		1223656	0		<			
ANR	1223725	Identifier	size		1223656	0					
ANR	1223726	Identifier	len		1223656	1					
ANR	1223727	CompoundStatement		13:17:241:241	1223656	1					
ANR	1223728	ExpressionStatement	"eprintf ( ""r_debug_qnx_reg_read: small buffer %d vs %d\\n"" , ( int ) size , ( int ) len )"	80:2:1707:1789	1223656	0	True				
ANR	1223729	CallExpression	"eprintf ( ""r_debug_qnx_reg_read: small buffer %d vs %d\\n"" , ( int ) size , ( int ) len )"		1223656	0					
ANR	1223730	Callee	eprintf		1223656	0					
ANR	1223731	Identifier	eprintf		1223656	0					
ANR	1223732	ArgumentList	"""r_debug_qnx_reg_read: small buffer %d vs %d\\n"""		1223656	1					
ANR	1223733	Argument	"""r_debug_qnx_reg_read: small buffer %d vs %d\\n"""		1223656	0					
ANR	1223734	PrimaryExpression	"""r_debug_qnx_reg_read: small buffer %d vs %d\\n"""		1223656	0					
ANR	1223735	Argument	( int ) size		1223656	1					
ANR	1223736	CastExpression	( int ) size		1223656	0					
ANR	1223737	CastTarget	int		1223656	0					
ANR	1223738	Identifier	size		1223656	1					
ANR	1223739	Argument	( int ) len		1223656	2					
ANR	1223740	CastExpression	( int ) len		1223656	0					
ANR	1223741	CastTarget	int		1223656	0					
ANR	1223742	Identifier	len		1223656	1					
ANR	1223743	ExpressionStatement	"copy_size = R_MIN ( len , size )"	83:1:1795:1824	1223656	7	True				
ANR	1223744	AssignmentExpression	"copy_size = R_MIN ( len , size )"		1223656	0		=			
ANR	1223745	Identifier	copy_size		1223656	0					
ANR	1223746	CallExpression	"R_MIN ( len , size )"		1223656	1					
ANR	1223747	Callee	R_MIN		1223656	0					
ANR	1223748	Identifier	R_MIN		1223656	0					
ANR	1223749	ArgumentList	len		1223656	1					
ANR	1223750	Argument	len		1223656	0					
ANR	1223751	Identifier	len		1223656	0					
ANR	1223752	Argument	size		1223656	1					
ANR	1223753	Identifier	size		1223656	0					
ANR	1223754	ExpressionStatement	"buflen = R_MAX ( len , buflen )"	84:1:1827:1855	1223656	8	True				
ANR	1223755	AssignmentExpression	"buflen = R_MAX ( len , buflen )"		1223656	0		=			
ANR	1223756	Identifier	buflen		1223656	0					
ANR	1223757	CallExpression	"R_MAX ( len , buflen )"		1223656	1					
ANR	1223758	Callee	R_MAX		1223656	0					
ANR	1223759	Identifier	R_MAX		1223656	0					
ANR	1223760	ArgumentList	len		1223656	1					
ANR	1223761	Argument	len		1223656	0					
ANR	1223762	Identifier	len		1223656	0					
ANR	1223763	Argument	buflen		1223656	1					
ANR	1223764	Identifier	buflen		1223656	0					
ANR	1223765	IfStatement	if ( reg_buf )		1223656	9					
ANR	1223766	Condition	reg_buf	85:5:1862:1868	1223656	0	True				
ANR	1223767	Identifier	reg_buf		1223656	0					
ANR	1223768	CompoundStatement		19:14:409:409	1223656	1					
ANR	1223769	IfStatement	if ( buf_size < copy_size )		1223656	0					
ANR	1223770	Condition	buf_size < copy_size	86:6:1879:1898	1223656	0	True				
ANR	1223771	RelationalExpression	buf_size < copy_size		1223656	0		<			
ANR	1223772	Identifier	buf_size		1223656	0					
ANR	1223773	Identifier	copy_size		1223656	1					
ANR	1223774	CompoundStatement		21:3:444:487	1223656	1					
ANR	1223775	IdentifierDeclStatement	"ut8 * new_buf = realloc ( reg_buf , copy_size ) ;"	87:3:1906:1949	1223656	0	True				
ANR	1223776	IdentifierDecl	"* new_buf = realloc ( reg_buf , copy_size )"		1223656	0					
ANR	1223777	IdentifierDeclType	ut8 *		1223656	0					
ANR	1223778	Identifier	new_buf		1223656	1					
ANR	1223779	AssignmentExpression	"* new_buf = realloc ( reg_buf , copy_size )"		1223656	2		=			
ANR	1223780	Identifier	new_buf		1223656	0					
ANR	1223781	CallExpression	"realloc ( reg_buf , copy_size )"		1223656	1					
ANR	1223782	Callee	realloc		1223656	0					
ANR	1223783	Identifier	realloc		1223656	0					
ANR	1223784	ArgumentList	reg_buf		1223656	1					
ANR	1223785	Argument	reg_buf		1223656	0					
ANR	1223786	Identifier	reg_buf		1223656	0					
ANR	1223787	Argument	copy_size		1223656	1					
ANR	1223788	Identifier	copy_size		1223656	0					
ANR	1223789	IfStatement	if ( ! new_buf )		1223656	1					
ANR	1223790	Condition	! new_buf	88:7:1958:1965	1223656	0	True				
ANR	1223791	UnaryOperationExpression	! new_buf		1223656	0					
ANR	1223792	UnaryOperator	!		1223656	0					
ANR	1223793	Identifier	new_buf		1223656	1					
ANR	1223794	CompoundStatement		22:17:506:506	1223656	1					
ANR	1223795	ReturnStatement	return - 1 ;	89:4:1974:1983	1223656	0	True				
ANR	1223796	UnaryOperationExpression	- 1		1223656	0					
ANR	1223797	UnaryOperator	-		1223656	0					
ANR	1223798	PrimaryExpression	1		1223656	1					
ANR	1223799	ExpressionStatement	reg_buf = new_buf	91:3:1993:2010	1223656	2	True				
ANR	1223800	AssignmentExpression	reg_buf = new_buf		1223656	0		=			
ANR	1223801	Identifier	reg_buf		1223656	0					
ANR	1223802	Identifier	new_buf		1223656	1					
ANR	1223803	ExpressionStatement	buflen = copy_size	92:3:2015:2033	1223656	3	True				
ANR	1223804	AssignmentExpression	buflen = copy_size		1223656	0		=			
ANR	1223805	Identifier	buflen		1223656	0					
ANR	1223806	Identifier	copy_size		1223656	1					
ANR	1223807	ExpressionStatement	buf_size = len	93:3:2038:2052	1223656	4	True				
ANR	1223808	AssignmentExpression	buf_size = len		1223656	0		=			
ANR	1223809	Identifier	buf_size		1223656	0					
ANR	1223810	Identifier	len		1223656	1					
ANR	1223811	ElseStatement	else		1223656	0					
ANR	1223812	CompoundStatement		29:8:604:604	1223656	0					
ANR	1223813	ExpressionStatement	"reg_buf = calloc ( buflen , 1 )"	96:2:2070:2098	1223656	0	True				
ANR	1223814	AssignmentExpression	"reg_buf = calloc ( buflen , 1 )"		1223656	0		=			
ANR	1223815	Identifier	reg_buf		1223656	0					
ANR	1223816	CallExpression	"calloc ( buflen , 1 )"		1223656	1					
ANR	1223817	Callee	calloc		1223656	0					
ANR	1223818	Identifier	calloc		1223656	0					
ANR	1223819	ArgumentList	buflen		1223656	1					
ANR	1223820	Argument	buflen		1223656	0					
ANR	1223821	Identifier	buflen		1223656	0					
ANR	1223822	Argument	1		1223656	1					
ANR	1223823	PrimaryExpression	1		1223656	0					
ANR	1223824	IfStatement	if ( ! reg_buf )		1223656	1					
ANR	1223825	Condition	! reg_buf	97:6:2106:2113	1223656	0	True				
ANR	1223826	UnaryOperationExpression	! reg_buf		1223656	0					
ANR	1223827	UnaryOperator	!		1223656	0					
ANR	1223828	Identifier	reg_buf		1223656	1					
ANR	1223829	CompoundStatement		31:16:654:654	1223656	1					
ANR	1223830	ReturnStatement	return - 1 ;	98:3:2121:2130	1223656	0	True				
ANR	1223831	UnaryOperationExpression	- 1		1223656	0					
ANR	1223832	UnaryOperator	-		1223656	0					
ANR	1223833	PrimaryExpression	1		1223656	1					
ANR	1223834	ExpressionStatement	buf_size = buflen	100:2:2138:2155	1223656	2	True				
ANR	1223835	AssignmentExpression	buf_size = buflen		1223656	0		=			
ANR	1223836	Identifier	buf_size		1223656	0					
ANR	1223837	Identifier	buflen		1223656	1					
ANR	1223838	ExpressionStatement	"memset ( ( void * ) ( volatile void * ) buf , 0 , size )"	102:1:2161:2208	1223656	10	True				
ANR	1223839	CallExpression	"memset ( ( void * ) ( volatile void * ) buf , 0 , size )"		1223656	0					
ANR	1223840	Callee	memset		1223656	0					
ANR	1223841	Identifier	memset		1223656	0					
ANR	1223842	ArgumentList	( void * ) ( volatile void * ) buf		1223656	1					
ANR	1223843	Argument	( void * ) ( volatile void * ) buf		1223656	0					
ANR	1223844	CastExpression	( void * ) ( volatile void * ) buf		1223656	0					
ANR	1223845	CastTarget	void *		1223656	0					
ANR	1223846	CastExpression	( volatile void * ) buf		1223656	1					
ANR	1223847	CastTarget	volatile void *		1223656	0					
ANR	1223848	Identifier	buf		1223656	1					
ANR	1223849	Argument	0		1223656	1					
ANR	1223850	PrimaryExpression	0		1223656	0					
ANR	1223851	Argument	size		1223656	2					
ANR	1223852	Identifier	size		1223656	0					
ANR	1223853	ExpressionStatement	"memcpy ( ( void * ) ( volatile void * ) buf , desc -> recv . data , copy_size )"	103:1:2211:2277	1223656	11	True				
ANR	1223854	CallExpression	"memcpy ( ( void * ) ( volatile void * ) buf , desc -> recv . data , copy_size )"		1223656	0					
ANR	1223855	Callee	memcpy		1223656	0					
ANR	1223856	Identifier	memcpy		1223656	0					
ANR	1223857	ArgumentList	( void * ) ( volatile void * ) buf		1223656	1					
ANR	1223858	Argument	( void * ) ( volatile void * ) buf		1223656	0					
ANR	1223859	CastExpression	( void * ) ( volatile void * ) buf		1223656	0					
ANR	1223860	CastTarget	void *		1223656	0					
ANR	1223861	CastExpression	( volatile void * ) buf		1223656	1					
ANR	1223862	CastTarget	volatile void *		1223656	0					
ANR	1223863	Identifier	buf		1223656	1					
ANR	1223864	Argument	desc -> recv . data		1223656	1					
ANR	1223865	MemberAccess	desc -> recv . data		1223656	0					
ANR	1223866	PtrMemberAccess	desc -> recv		1223656	0					
ANR	1223867	Identifier	desc		1223656	0					
ANR	1223868	Identifier	recv		1223656	1					
ANR	1223869	Identifier	data		1223656	1					
ANR	1223870	Argument	copy_size		1223656	2					
ANR	1223871	Identifier	copy_size		1223656	0					
ANR	1223872	ExpressionStatement	"memset ( ( void * ) ( volatile void * ) reg_buf , 0 , buflen )"	104:1:2280:2333	1223656	12	True				
ANR	1223873	CallExpression	"memset ( ( void * ) ( volatile void * ) reg_buf , 0 , buflen )"		1223656	0					
ANR	1223874	Callee	memset		1223656	0					
ANR	1223875	Identifier	memset		1223656	0					
ANR	1223876	ArgumentList	( void * ) ( volatile void * ) reg_buf		1223656	1					
ANR	1223877	Argument	( void * ) ( volatile void * ) reg_buf		1223656	0					
ANR	1223878	CastExpression	( void * ) ( volatile void * ) reg_buf		1223656	0					
ANR	1223879	CastTarget	void *		1223656	0					
ANR	1223880	CastExpression	( volatile void * ) reg_buf		1223656	1					
ANR	1223881	CastTarget	volatile void *		1223656	0					
ANR	1223882	Identifier	reg_buf		1223656	1					
ANR	1223883	Argument	0		1223656	1					
ANR	1223884	PrimaryExpression	0		1223656	0					
ANR	1223885	Argument	buflen		1223656	2					
ANR	1223886	Identifier	buflen		1223656	0					
ANR	1223887	ExpressionStatement	"memcpy ( ( void * ) ( volatile void * ) reg_buf , desc -> recv . data , copy_size )"	105:1:2336:2406	1223656	13	True				
ANR	1223888	CallExpression	"memcpy ( ( void * ) ( volatile void * ) reg_buf , desc -> recv . data , copy_size )"		1223656	0					
ANR	1223889	Callee	memcpy		1223656	0					
ANR	1223890	Identifier	memcpy		1223656	0					
ANR	1223891	ArgumentList	( void * ) ( volatile void * ) reg_buf		1223656	1					
ANR	1223892	Argument	( void * ) ( volatile void * ) reg_buf		1223656	0					
ANR	1223893	CastExpression	( void * ) ( volatile void * ) reg_buf		1223656	0					
ANR	1223894	CastTarget	void *		1223656	0					
ANR	1223895	CastExpression	( volatile void * ) reg_buf		1223656	1					
ANR	1223896	CastTarget	volatile void *		1223656	0					
ANR	1223897	Identifier	reg_buf		1223656	1					
ANR	1223898	Argument	desc -> recv . data		1223656	1					
ANR	1223899	MemberAccess	desc -> recv . data		1223656	0					
ANR	1223900	PtrMemberAccess	desc -> recv		1223656	0					
ANR	1223901	Identifier	desc		1223656	0					
ANR	1223902	Identifier	recv		1223656	1					
ANR	1223903	Identifier	data		1223656	1					
ANR	1223904	Argument	copy_size		1223656	2					
ANR	1223905	Identifier	copy_size		1223656	0					
ANR	1223906	ReturnStatement	return len ;	107:1:2410:2420	1223656	14	True				
ANR	1223907	Identifier	len		1223656	0					
ANR	1223908	ReturnType	static int		1223656	1					
ANR	1223909	Identifier	r_debug_qnx_reg_read		1223656	2					
ANR	1223910	ParameterList	"RDebug * dbg , int type , ut8 * buf , int size"		1223656	3					
ANR	1223911	Parameter	RDebug * dbg	67:33:1418:1428	1223656	0	True				
ANR	1223912	ParameterType	RDebug *		1223656	0					
ANR	1223913	Identifier	dbg		1223656	1					
ANR	1223914	Parameter	int type	67:46:1431:1438	1223656	1	True				
ANR	1223915	ParameterType	int		1223656	0					
ANR	1223916	Identifier	type		1223656	1					
ANR	1223917	Parameter	ut8 * buf	67:56:1441:1448	1223656	2	True				
ANR	1223918	ParameterType	ut8 *		1223656	0					
ANR	1223919	Identifier	buf		1223656	1					
ANR	1223920	Parameter	int size	67:66:1451:1458	1223656	3	True				
ANR	1223921	ParameterType	int		1223656	0					
ANR	1223922	Identifier	size		1223656	1					
ANR	1223923	CFGEntryNode	ENTRY		1223656		True				
ANR	1223924	CFGExitNode	EXIT		1223656		True				
ANR	1223925	Symbol	qnxr_read_registers		1223656						
ANR	1223926	Symbol	buf_size		1223656						
ANR	1223927	Symbol	dbg		1223656						
ANR	1223928	Symbol	r_reg_get_bytes		1223656						
ANR	1223929	Symbol	R_MIN		1223656						
ANR	1223930	Symbol	realloc		1223656						
ANR	1223931	Symbol	calloc		1223656						
ANR	1223932	Symbol	type		1223656						
ANR	1223933	Symbol	* dbg		1223656						
ANR	1223934	Symbol	desc -> recv . data		1223656						
ANR	1223935	Symbol	desc -> recv		1223656						
ANR	1223936	Symbol	buf		1223656						
ANR	1223937	Symbol	& buflen		1223656						
ANR	1223938	Symbol	size		1223656						
ANR	1223939	Symbol	len		1223656						
ANR	1223940	Symbol	new_buf		1223656						
ANR	1223941	Symbol	copy_size		1223656						
ANR	1223942	Symbol	R_MAX		1223656						
ANR	1223943	Symbol	buflen		1223656						
ANR	1223944	Symbol	* desc		1223656						
ANR	1223945	Symbol	dbg -> reg		1223656						
ANR	1223946	Symbol	desc		1223656						
ANR	1223947	Symbol	reg_buf		1223656						
ANR	1223948	Function	r_debug_qnx_map_get	110:0:2425:2489							
ANR	1223949	FunctionDef	r_debug_qnx_map_get (RDebug * dbg)		1223948	0					
ANR	1223950	CompoundStatement		110:48:2473:2489	1223948	0					
ANR	1223951	ReturnStatement	return NULL ;	111:1:2476:2487	1223948	0	True				
ANR	1223952	Identifier	NULL		1223948	0					
ANR	1223953	ReturnType	static RList *		1223948	1					
ANR	1223954	Identifier	r_debug_qnx_map_get		1223948	2					
ANR	1223955	ParameterList	RDebug * dbg		1223948	3					
ANR	1223956	Parameter	RDebug * dbg	110:35:2460:2470	1223948	0	True				
ANR	1223957	ParameterType	RDebug *		1223948	0					
ANR	1223958	Identifier	dbg		1223948	1					
ANR	1223959	CFGEntryNode	ENTRY		1223948		True				
ANR	1223960	CFGExitNode	EXIT		1223948		True				
ANR	1223961	Symbol	NULL		1223948						
ANR	1223962	Symbol	dbg		1223948						
ANR	1223963	Function	r_debug_qnx_reg_write	114:0:2492:3796							
ANR	1223964	FunctionDef	"r_debug_qnx_reg_write (RDebug * dbg , int type , const ut8 * buf , int size)"		1223963	0					
ANR	1223965	CompoundStatement		114:83:2575:3796	1223963	0					
ANR	1223966	IdentifierDeclStatement	int buflen = 0 ;	115:1:2578:2592	1223963	0	True				
ANR	1223967	IdentifierDecl	buflen = 0		1223963	0					
ANR	1223968	IdentifierDeclType	int		1223963	0					
ANR	1223969	Identifier	buflen		1223963	1					
ANR	1223970	AssignmentExpression	buflen = 0		1223963	2		=			
ANR	1223971	Identifier	buflen		1223963	0					
ANR	1223972	PrimaryExpression	0		1223963	1					
ANR	1223973	IdentifierDeclStatement	int bits = dbg -> anal -> bits ;	116:1:2595:2621	1223963	1	True				
ANR	1223974	IdentifierDecl	bits = dbg -> anal -> bits		1223963	0					
ANR	1223975	IdentifierDeclType	int		1223963	0					
ANR	1223976	Identifier	bits		1223963	1					
ANR	1223977	AssignmentExpression	bits = dbg -> anal -> bits		1223963	2		=			
ANR	1223978	Identifier	bits		1223963	0					
ANR	1223979	PtrMemberAccess	dbg -> anal -> bits		1223963	1					
ANR	1223980	PtrMemberAccess	dbg -> anal		1223963	0					
ANR	1223981	Identifier	dbg		1223963	0					
ANR	1223982	Identifier	anal		1223963	1					
ANR	1223983	Identifier	bits		1223963	1					
ANR	1223984	IdentifierDeclStatement	"const char * pcname = r_reg_get_name ( dbg -> anal -> reg , R_REG_NAME_PC ) ;"	117:1:2624:2691	1223963	2	True				
ANR	1223985	IdentifierDecl	"* pcname = r_reg_get_name ( dbg -> anal -> reg , R_REG_NAME_PC )"		1223963	0					
ANR	1223986	IdentifierDeclType	const char *		1223963	0					
ANR	1223987	Identifier	pcname		1223963	1					
ANR	1223988	AssignmentExpression	"* pcname = r_reg_get_name ( dbg -> anal -> reg , R_REG_NAME_PC )"		1223963	2		=			
ANR	1223989	Identifier	pcname		1223963	0					
ANR	1223990	CallExpression	"r_reg_get_name ( dbg -> anal -> reg , R_REG_NAME_PC )"		1223963	1					
ANR	1223991	Callee	r_reg_get_name		1223963	0					
ANR	1223992	Identifier	r_reg_get_name		1223963	0					
ANR	1223993	ArgumentList	dbg -> anal -> reg		1223963	1					
ANR	1223994	Argument	dbg -> anal -> reg		1223963	0					
ANR	1223995	PtrMemberAccess	dbg -> anal -> reg		1223963	0					
ANR	1223996	PtrMemberAccess	dbg -> anal		1223963	0					
ANR	1223997	Identifier	dbg		1223963	0					
ANR	1223998	Identifier	anal		1223963	1					
ANR	1223999	Identifier	reg		1223963	1					
ANR	1224000	Argument	R_REG_NAME_PC		1223963	1					
ANR	1224001	Identifier	R_REG_NAME_PC		1223963	0					
ANR	1224002	IdentifierDeclStatement	"RRegItem * reg = r_reg_get ( dbg -> anal -> reg , pcname , 0 ) ;"	118:1:2694:2747	1223963	3	True				
ANR	1224003	IdentifierDecl	"* reg = r_reg_get ( dbg -> anal -> reg , pcname , 0 )"		1223963	0					
ANR	1224004	IdentifierDeclType	RRegItem *		1223963	0					
ANR	1224005	Identifier	reg		1223963	1					
ANR	1224006	AssignmentExpression	"* reg = r_reg_get ( dbg -> anal -> reg , pcname , 0 )"		1223963	2		=			
ANR	1224007	Identifier	reg		1223963	0					
ANR	1224008	CallExpression	"r_reg_get ( dbg -> anal -> reg , pcname , 0 )"		1223963	1					
ANR	1224009	Callee	r_reg_get		1223963	0					
ANR	1224010	Identifier	r_reg_get		1223963	0					
ANR	1224011	ArgumentList	dbg -> anal -> reg		1223963	1					
ANR	1224012	Argument	dbg -> anal -> reg		1223963	0					
ANR	1224013	PtrMemberAccess	dbg -> anal -> reg		1223963	0					
ANR	1224014	PtrMemberAccess	dbg -> anal		1223963	0					
ANR	1224015	Identifier	dbg		1223963	0					
ANR	1224016	Identifier	anal		1223963	1					
ANR	1224017	Identifier	reg		1223963	1					
ANR	1224018	Argument	pcname		1223963	1					
ANR	1224019	Identifier	pcname		1223963	0					
ANR	1224020	Argument	0		1223963	2					
ANR	1224021	PrimaryExpression	0		1223963	0					
ANR	1224022	IfStatement	if ( ! reg_buf )		1223963	4					
ANR	1224023	Condition	! reg_buf	119:5:2754:2761	1223963	0	True				
ANR	1224024	UnaryOperationExpression	! reg_buf		1223963	0					
ANR	1224025	UnaryOperator	!		1223963	0					
ANR	1224026	Identifier	reg_buf		1223963	1					
ANR	1224027	CompoundStatement		6:15:188:188	1223963	1					
ANR	1224028	ReturnStatement	return - 1 ;	121:2:2824:2833	1223963	0	True				
ANR	1224029	UnaryOperationExpression	- 1		1223963	0					
ANR	1224030	UnaryOperator	-		1223963	0					
ANR	1224031	PrimaryExpression	1		1223963	1					
ANR	1224032	IfStatement	if ( reg )		1223963	5					
ANR	1224033	Condition	reg	123:5:2843:2845	1223963	0	True				
ANR	1224034	Identifier	reg		1223963	0					
ANR	1224035	CompoundStatement		10:10:272:272	1223963	1					
ANR	1224036	IfStatement	if ( dbg -> anal -> bits != reg -> size )		1223963	0					
ANR	1224037	Condition	dbg -> anal -> bits != reg -> size	124:6:2856:2883	1223963	0	True				
ANR	1224038	EqualityExpression	dbg -> anal -> bits != reg -> size		1223963	0		!=			
ANR	1224039	PtrMemberAccess	dbg -> anal -> bits		1223963	0					
ANR	1224040	PtrMemberAccess	dbg -> anal		1223963	0					
ANR	1224041	Identifier	dbg		1223963	0					
ANR	1224042	Identifier	anal		1223963	1					
ANR	1224043	Identifier	bits		1223963	1					
ANR	1224044	PtrMemberAccess	reg -> size		1223963	1					
ANR	1224045	Identifier	reg		1223963	0					
ANR	1224046	Identifier	size		1223963	1					
ANR	1224047	CompoundStatement		11:36:310:310	1223963	1					
ANR	1224048	ExpressionStatement	bits = reg -> size	125:3:2891:2907	1223963	0	True				
ANR	1224049	AssignmentExpression	bits = reg -> size		1223963	0		=			
ANR	1224050	Identifier	bits		1223963	0					
ANR	1224051	PtrMemberAccess	reg -> size		1223963	1					
ANR	1224052	Identifier	reg		1223963	0					
ANR	1224053	Identifier	size		1223963	1					
ANR	1224054	ExpressionStatement	"free ( r_reg_get_bytes ( dbg -> reg , type , & buflen ) )"	128:1:2917:2965	1223963	6	True				
ANR	1224055	CallExpression	"free ( r_reg_get_bytes ( dbg -> reg , type , & buflen ) )"		1223963	0					
ANR	1224056	Callee	free		1223963	0					
ANR	1224057	Identifier	free		1223963	0					
ANR	1224058	ArgumentList	"r_reg_get_bytes ( dbg -> reg , type , & buflen )"		1223963	1					
ANR	1224059	Argument	"r_reg_get_bytes ( dbg -> reg , type , & buflen )"		1223963	0					
ANR	1224060	CallExpression	"r_reg_get_bytes ( dbg -> reg , type , & buflen )"		1223963	0					
ANR	1224061	Callee	r_reg_get_bytes		1223963	0					
ANR	1224062	Identifier	r_reg_get_bytes		1223963	0					
ANR	1224063	ArgumentList	dbg -> reg		1223963	1					
ANR	1224064	Argument	dbg -> reg		1223963	0					
ANR	1224065	PtrMemberAccess	dbg -> reg		1223963	0					
ANR	1224066	Identifier	dbg		1223963	0					
ANR	1224067	Identifier	reg		1223963	1					
ANR	1224068	Argument	type		1223963	1					
ANR	1224069	Identifier	type		1223963	0					
ANR	1224070	Argument	& buflen		1223963	2					
ANR	1224071	UnaryOperationExpression	& buflen		1223963	0					
ANR	1224072	UnaryOperator	&		1223963	0					
ANR	1224073	Identifier	buflen		1223963	1					
ANR	1224074	IfStatement	if ( buf_size < buflen )		1223963	7					
ANR	1224075	Condition	buf_size < buflen	135:5:3301:3317	1223963	0	True				
ANR	1224076	RelationalExpression	buf_size < buflen		1223963	0		<			
ANR	1224077	Identifier	buf_size		1223963	0					
ANR	1224078	Identifier	buflen		1223963	1					
ANR	1224079	CompoundStatement		23:2:748:803	1223963	1					
ANR	1224080	IdentifierDeclStatement	"ut8 * new_buf = realloc ( reg_buf , buflen * sizeof ( ut8 ) ) ;"	136:2:3324:3379	1223963	0	True				
ANR	1224081	IdentifierDecl	"* new_buf = realloc ( reg_buf , buflen * sizeof ( ut8 ) )"		1223963	0					
ANR	1224082	IdentifierDeclType	ut8 *		1223963	0					
ANR	1224083	Identifier	new_buf		1223963	1					
ANR	1224084	AssignmentExpression	"* new_buf = realloc ( reg_buf , buflen * sizeof ( ut8 ) )"		1223963	2		=			
ANR	1224085	Identifier	new_buf		1223963	0					
ANR	1224086	CallExpression	"realloc ( reg_buf , buflen * sizeof ( ut8 ) )"		1223963	1					
ANR	1224087	Callee	realloc		1223963	0					
ANR	1224088	Identifier	realloc		1223963	0					
ANR	1224089	ArgumentList	reg_buf		1223963	1					
ANR	1224090	Argument	reg_buf		1223963	0					
ANR	1224091	Identifier	reg_buf		1223963	0					
ANR	1224092	Argument	buflen * sizeof ( ut8 )		1223963	1					
ANR	1224093	MultiplicativeExpression	buflen * sizeof ( ut8 )		1223963	0		*			
ANR	1224094	Identifier	buflen		1223963	0					
ANR	1224095	SizeofExpression	sizeof ( ut8 )		1223963	1					
ANR	1224096	Sizeof	sizeof		1223963	0					
ANR	1224097	SizeofOperand	ut8		1223963	1					
ANR	1224098	IfStatement	if ( ! new_buf )		1223963	1					
ANR	1224099	Condition	! new_buf	137:6:3387:3394	1223963	0	True				
ANR	1224100	UnaryOperationExpression	! new_buf		1223963	0					
ANR	1224101	UnaryOperator	!		1223963	0					
ANR	1224102	Identifier	new_buf		1223963	1					
ANR	1224103	CompoundStatement		24:16:821:821	1223963	1					
ANR	1224104	ReturnStatement	return - 1 ;	138:3:3402:3411	1223963	0	True				
ANR	1224105	UnaryOperationExpression	- 1		1223963	0					
ANR	1224106	UnaryOperator	-		1223963	0					
ANR	1224107	PrimaryExpression	1		1223963	1					
ANR	1224108	ExpressionStatement	reg_buf = new_buf	140:2:3419:3436	1223963	2	True				
ANR	1224109	AssignmentExpression	reg_buf = new_buf		1223963	0		=			
ANR	1224110	Identifier	reg_buf		1223963	0					
ANR	1224111	Identifier	new_buf		1223963	1					
ANR	1224112	ExpressionStatement	"memset ( new_buf + buf_size , 0 , buflen - buf_size )"	141:2:3440:3489	1223963	3	True				
ANR	1224113	CallExpression	"memset ( new_buf + buf_size , 0 , buflen - buf_size )"		1223963	0					
ANR	1224114	Callee	memset		1223963	0					
ANR	1224115	Identifier	memset		1223963	0					
ANR	1224116	ArgumentList	new_buf + buf_size		1223963	1					
ANR	1224117	Argument	new_buf + buf_size		1223963	0					
ANR	1224118	AdditiveExpression	new_buf + buf_size		1223963	0		+			
ANR	1224119	Identifier	new_buf		1223963	0					
ANR	1224120	Identifier	buf_size		1223963	1					
ANR	1224121	Argument	0		1223963	1					
ANR	1224122	PrimaryExpression	0		1223963	0					
ANR	1224123	Argument	buflen - buf_size		1223963	2					
ANR	1224124	AdditiveExpression	buflen - buf_size		1223963	0		-			
ANR	1224125	Identifier	buflen		1223963	0					
ANR	1224126	Identifier	buf_size		1223963	1					
ANR	1224127	IdentifierDeclStatement	RRegItem * current = NULL ;	144:1:3496:3520	1223963	8	True				
ANR	1224128	IdentifierDecl	* current = NULL		1223963	0					
ANR	1224129	IdentifierDeclType	RRegItem *		1223963	0					
ANR	1224130	Identifier	current		1223963	1					
ANR	1224131	AssignmentExpression	* current = NULL		1223963	2		=			
ANR	1224132	Identifier	NULL		1223963	0					
ANR	1224133	Identifier	NULL		1223963	1					
ANR	1224134	ForStatement	for ( ; ; )		1223963	9					
ANR	1224135	CompoundStatement		38:2:1120:1140	1223963	0					
ANR	1224136	ExpressionStatement	"current = r_reg_next_diff ( dbg -> reg , type , reg_buf , buflen , current , bits )"	146:2:3536:3610	1223963	0	True				
ANR	1224137	AssignmentExpression	"current = r_reg_next_diff ( dbg -> reg , type , reg_buf , buflen , current , bits )"		1223963	0		=			
ANR	1224138	Identifier	current		1223963	0					
ANR	1224139	CallExpression	"r_reg_next_diff ( dbg -> reg , type , reg_buf , buflen , current , bits )"		1223963	1					
ANR	1224140	Callee	r_reg_next_diff		1223963	0					
ANR	1224141	Identifier	r_reg_next_diff		1223963	0					
ANR	1224142	ArgumentList	dbg -> reg		1223963	1					
ANR	1224143	Argument	dbg -> reg		1223963	0					
ANR	1224144	PtrMemberAccess	dbg -> reg		1223963	0					
ANR	1224145	Identifier	dbg		1223963	0					
ANR	1224146	Identifier	reg		1223963	1					
ANR	1224147	Argument	type		1223963	1					
ANR	1224148	Identifier	type		1223963	0					
ANR	1224149	Argument	reg_buf		1223963	2					
ANR	1224150	Identifier	reg_buf		1223963	0					
ANR	1224151	Argument	buflen		1223963	3					
ANR	1224152	Identifier	buflen		1223963	0					
ANR	1224153	Argument	current		1223963	4					
ANR	1224154	Identifier	current		1223963	0					
ANR	1224155	Argument	bits		1223963	5					
ANR	1224156	Identifier	bits		1223963	0					
ANR	1224157	IfStatement	if ( ! current )		1223963	1					
ANR	1224158	Condition	! current	147:6:3618:3625	1223963	0	True				
ANR	1224159	UnaryOperationExpression	! current		1223963	0					
ANR	1224160	UnaryOperator	!		1223963	0					
ANR	1224161	Identifier	current		1223963	1					
ANR	1224162	CompoundStatement		34:16:1052:1052	1223963	1					
ANR	1224163	BreakStatement	break ;	148:3:3633:3638	1223963	0	True				
ANR	1224164	IdentifierDeclStatement	"ut64 val = r_reg_get_value ( dbg -> reg , current ) ;"	150:2:3646:3692	1223963	2	True				
ANR	1224165	IdentifierDecl	"val = r_reg_get_value ( dbg -> reg , current )"		1223963	0					
ANR	1224166	IdentifierDeclType	ut64		1223963	0					
ANR	1224167	Identifier	val		1223963	1					
ANR	1224168	AssignmentExpression	"val = r_reg_get_value ( dbg -> reg , current )"		1223963	2		=			
ANR	1224169	Identifier	val		1223963	0					
ANR	1224170	CallExpression	"r_reg_get_value ( dbg -> reg , current )"		1223963	1					
ANR	1224171	Callee	r_reg_get_value		1223963	0					
ANR	1224172	Identifier	r_reg_get_value		1223963	0					
ANR	1224173	ArgumentList	dbg -> reg		1223963	1					
ANR	1224174	Argument	dbg -> reg		1223963	0					
ANR	1224175	PtrMemberAccess	dbg -> reg		1223963	0					
ANR	1224176	Identifier	dbg		1223963	0					
ANR	1224177	Identifier	reg		1223963	1					
ANR	1224178	Argument	current		1223963	1					
ANR	1224179	Identifier	current		1223963	0					
ANR	1224180	IdentifierDeclStatement	int bytes = bits / 8 ;	151:2:3696:3716	1223963	3	True				
ANR	1224181	IdentifierDecl	bytes = bits / 8		1223963	0					
ANR	1224182	IdentifierDeclType	int		1223963	0					
ANR	1224183	Identifier	bytes		1223963	1					
ANR	1224184	AssignmentExpression	bytes = bits / 8		1223963	2		=			
ANR	1224185	Identifier	bytes		1223963	0					
ANR	1224186	MultiplicativeExpression	bits / 8		1223963	1		/			
ANR	1224187	Identifier	bits		1223963	0					
ANR	1224188	PrimaryExpression	8		1223963	1					
ANR	1224189	ExpressionStatement	"qnxr_write_reg ( desc , current -> name , ( char * ) & val , bytes )"	152:2:3720:3777	1223963	4	True				
ANR	1224190	CallExpression	"qnxr_write_reg ( desc , current -> name , ( char * ) & val , bytes )"		1223963	0					
ANR	1224191	Callee	qnxr_write_reg		1223963	0					
ANR	1224192	Identifier	qnxr_write_reg		1223963	0					
ANR	1224193	ArgumentList	desc		1223963	1					
ANR	1224194	Argument	desc		1223963	0					
ANR	1224195	Identifier	desc		1223963	0					
ANR	1224196	Argument	current -> name		1223963	1					
ANR	1224197	PtrMemberAccess	current -> name		1223963	0					
ANR	1224198	Identifier	current		1223963	0					
ANR	1224199	Identifier	name		1223963	1					
ANR	1224200	Argument	( char * ) & val		1223963	2					
ANR	1224201	CastExpression	( char * ) & val		1223963	0					
ANR	1224202	CastTarget	char *		1223963	0					
ANR	1224203	UnaryOperationExpression	& val		1223963	1					
ANR	1224204	UnaryOperator	&		1223963	0					
ANR	1224205	Identifier	val		1223963	1					
ANR	1224206	Argument	bytes		1223963	3					
ANR	1224207	Identifier	bytes		1223963	0					
ANR	1224208	ReturnStatement	return true ;	154:1:3783:3794	1223963	10	True				
ANR	1224209	Identifier	true		1223963	0					
ANR	1224210	ReturnType	static int		1223963	1					
ANR	1224211	Identifier	r_debug_qnx_reg_write		1223963	2					
ANR	1224212	ParameterList	"RDebug * dbg , int type , const ut8 * buf , int size"		1223963	3					
ANR	1224213	Parameter	RDebug * dbg	114:34:2526:2536	1223963	0	True				
ANR	1224214	ParameterType	RDebug *		1223963	0					
ANR	1224215	Identifier	dbg		1223963	1					
ANR	1224216	Parameter	int type	114:47:2539:2546	1223963	1	True				
ANR	1224217	ParameterType	int		1223963	0					
ANR	1224218	Identifier	type		1223963	1					
ANR	1224219	Parameter	const ut8 * buf	114:57:2549:2562	1223963	2	True				
ANR	1224220	ParameterType	const ut8 *		1223963	0					
ANR	1224221	Identifier	buf		1223963	1					
ANR	1224222	Parameter	int size	114:73:2565:2572	1223963	3	True				
ANR	1224223	ParameterType	int		1223963	0					
ANR	1224224	Identifier	size		1223963	1					
ANR	1224225	CFGEntryNode	ENTRY		1223963		True				
ANR	1224226	CFGExitNode	EXIT		1223963		True				
ANR	1224227	InfiniteForNode	true		1223963		True				
ANR	1224228	Symbol	& val		1223963						
ANR	1224229	Symbol	R_REG_NAME_PC		1223963						
ANR	1224230	Symbol	* current		1223963						
ANR	1224231	Symbol	realloc		1223963						
ANR	1224232	Symbol	type		1223963						
ANR	1224233	Symbol	current		1223963						
ANR	1224234	Symbol	new_buf		1223963						
ANR	1224235	Symbol	reg		1223963						
ANR	1224236	Symbol	buflen		1223963						
ANR	1224237	Symbol	r_reg_get		1223963						
ANR	1224238	Symbol	val		1223963						
ANR	1224239	Symbol	r_reg_get_value		1223963						
ANR	1224240	Symbol	dbg -> anal -> bits		1223963						
ANR	1224241	Symbol	NULL		1223963						
ANR	1224242	Symbol	r_reg_next_diff		1223963						
ANR	1224243	Symbol	dbg -> anal		1223963						
ANR	1224244	Symbol	buf_size		1223963						
ANR	1224245	Symbol	dbg		1223963						
ANR	1224246	Symbol	bits		1223963						
ANR	1224247	Symbol	dbg -> anal -> reg		1223963						
ANR	1224248	Symbol	r_reg_get_bytes		1223963						
ANR	1224249	Symbol	current -> name		1223963						
ANR	1224250	Symbol	* dbg		1223963						
ANR	1224251	Symbol	* dbg -> anal		1223963						
ANR	1224252	Symbol	buf		1223963						
ANR	1224253	Symbol	& buflen		1223963						
ANR	1224254	Symbol	size		1223963						
ANR	1224255	Symbol	r_reg_get_name		1223963						
ANR	1224256	Symbol	bytes		1223963						
ANR	1224257	Symbol	true		1223963						
ANR	1224258	Symbol	reg -> size		1223963						
ANR	1224259	Symbol	pcname		1223963						
ANR	1224260	Symbol	dbg -> reg		1223963						
ANR	1224261	Symbol	* * dbg		1223963						
ANR	1224262	Symbol	* reg		1223963						
ANR	1224263	Symbol	reg_buf		1223963						
ANR	1224264	Symbol	desc		1223963						
ANR	1224265	Function	r_debug_qnx_continue	157:0:3799:3915							
ANR	1224266	FunctionDef	"r_debug_qnx_continue (RDebug * dbg , int pid , int tid , int sig)"		1224265	0					
ANR	1224267	CompoundStatement		157:73:3872:3915	1224265	0					
ANR	1224268	ExpressionStatement	"qnxr_continue ( desc , - 1 )"	158:1:3875:3899	1224265	0	True				
ANR	1224269	CallExpression	"qnxr_continue ( desc , - 1 )"		1224265	0					
ANR	1224270	Callee	qnxr_continue		1224265	0					
ANR	1224271	Identifier	qnxr_continue		1224265	0					
ANR	1224272	ArgumentList	desc		1224265	1					
ANR	1224273	Argument	desc		1224265	0					
ANR	1224274	Identifier	desc		1224265	0					
ANR	1224275	Argument	- 1		1224265	1					
ANR	1224276	UnaryOperationExpression	- 1		1224265	0					
ANR	1224277	UnaryOperator	-		1224265	0					
ANR	1224278	PrimaryExpression	1		1224265	1					
ANR	1224279	ReturnStatement	return true ;	159:1:3902:3913	1224265	1	True				
ANR	1224280	Identifier	true		1224265	0					
ANR	1224281	ReturnType	static int		1224265	1					
ANR	1224282	Identifier	r_debug_qnx_continue		1224265	2					
ANR	1224283	ParameterList	"RDebug * dbg , int pid , int tid , int sig"		1224265	3					
ANR	1224284	Parameter	RDebug * dbg	157:33:3832:3842	1224265	0	True				
ANR	1224285	ParameterType	RDebug *		1224265	0					
ANR	1224286	Identifier	dbg		1224265	1					
ANR	1224287	Parameter	int pid	157:46:3845:3851	1224265	1	True				
ANR	1224288	ParameterType	int		1224265	0					
ANR	1224289	Identifier	pid		1224265	1					
ANR	1224290	Parameter	int tid	157:55:3854:3860	1224265	2	True				
ANR	1224291	ParameterType	int		1224265	0					
ANR	1224292	Identifier	tid		1224265	1					
ANR	1224293	Parameter	int sig	157:64:3863:3869	1224265	3	True				
ANR	1224294	ParameterType	int		1224265	0					
ANR	1224295	Identifier	sig		1224265	1					
ANR	1224296	CFGEntryNode	ENTRY		1224265		True				
ANR	1224297	CFGExitNode	EXIT		1224265		True				
ANR	1224298	Symbol	sig		1224265						
ANR	1224299	Symbol	dbg		1224265						
ANR	1224300	Symbol	true		1224265						
ANR	1224301	Symbol	pid		1224265						
ANR	1224302	Symbol	tid		1224265						
ANR	1224303	Symbol	desc		1224265						
ANR	1224304	Function	r_debug_qnx_step	162:0:3918:3999							
ANR	1224305	FunctionDef	r_debug_qnx_step (RDebug * dbg)		1224304	0					
ANR	1224306	CompoundStatement		162:42:3960:3999	1224304	0					
ANR	1224307	ExpressionStatement	"qnxr_step ( desc , - 1 )"	163:1:3963:3983	1224304	0	True				
ANR	1224308	CallExpression	"qnxr_step ( desc , - 1 )"		1224304	0					
ANR	1224309	Callee	qnxr_step		1224304	0					
ANR	1224310	Identifier	qnxr_step		1224304	0					
ANR	1224311	ArgumentList	desc		1224304	1					
ANR	1224312	Argument	desc		1224304	0					
ANR	1224313	Identifier	desc		1224304	0					
ANR	1224314	Argument	- 1		1224304	1					
ANR	1224315	UnaryOperationExpression	- 1		1224304	0					
ANR	1224316	UnaryOperator	-		1224304	0					
ANR	1224317	PrimaryExpression	1		1224304	1					
ANR	1224318	ReturnStatement	return true ;	164:1:3986:3997	1224304	1	True				
ANR	1224319	Identifier	true		1224304	0					
ANR	1224320	ReturnType	static int		1224304	1					
ANR	1224321	Identifier	r_debug_qnx_step		1224304	2					
ANR	1224322	ParameterList	RDebug * dbg		1224304	3					
ANR	1224323	Parameter	RDebug * dbg	162:29:3947:3957	1224304	0	True				
ANR	1224324	ParameterType	RDebug *		1224304	0					
ANR	1224325	Identifier	dbg		1224304	1					
ANR	1224326	CFGEntryNode	ENTRY		1224304		True				
ANR	1224327	CFGExitNode	EXIT		1224304		True				
ANR	1224328	Symbol	dbg		1224304						
ANR	1224329	Symbol	true		1224304						
ANR	1224330	Symbol	desc		1224304						
ANR	1224331	Function	r_debug_qnx_wait	167:0:4002:4210							
ANR	1224332	FunctionDef	"r_debug_qnx_wait (RDebug * dbg , int pid)"		1224331	0					
ANR	1224333	CompoundStatement		167:51:4053:4210	1224331	0					
ANR	1224334	IdentifierDeclStatement	"ptid_t ptid = qnxr_wait ( desc , pid ) ;"	168:1:4056:4091	1224331	0	True				
ANR	1224335	IdentifierDecl	"ptid = qnxr_wait ( desc , pid )"		1224331	0					
ANR	1224336	IdentifierDeclType	ptid_t		1224331	0					
ANR	1224337	Identifier	ptid		1224331	1					
ANR	1224338	AssignmentExpression	"ptid = qnxr_wait ( desc , pid )"		1224331	2		=			
ANR	1224339	Identifier	ptid		1224331	0					
ANR	1224340	CallExpression	"qnxr_wait ( desc , pid )"		1224331	1					
ANR	1224341	Callee	qnxr_wait		1224331	0					
ANR	1224342	Identifier	qnxr_wait		1224331	0					
ANR	1224343	ArgumentList	desc		1224331	1					
ANR	1224344	Argument	desc		1224331	0					
ANR	1224345	Identifier	desc		1224331	0					
ANR	1224346	Argument	pid		1224331	1					
ANR	1224347	Identifier	pid		1224331	0					
ANR	1224348	IfStatement	"if ( ! ptid_equal ( ptid , null_ptid ) )"		1224331	1					
ANR	1224349	Condition	"! ptid_equal ( ptid , null_ptid )"	169:5:4098:4126	1224331	0	True				
ANR	1224350	UnaryOperationExpression	"! ptid_equal ( ptid , null_ptid )"		1224331	0					
ANR	1224351	UnaryOperator	!		1224331	0					
ANR	1224352	CallExpression	"ptid_equal ( ptid , null_ptid )"		1224331	1					
ANR	1224353	Callee	ptid_equal		1224331	0					
ANR	1224354	Identifier	ptid_equal		1224331	0					
ANR	1224355	ArgumentList	ptid		1224331	1					
ANR	1224356	Argument	ptid		1224331	0					
ANR	1224357	Identifier	ptid		1224331	0					
ANR	1224358	Argument	null_ptid		1224331	1					
ANR	1224359	Identifier	null_ptid		1224331	0					
ANR	1224360	CompoundStatement		3:36:75:75	1224331	1					
ANR	1224361	ExpressionStatement	dbg -> reason . signum = desc -> signal	170:2:4133:4166	1224331	0	True				
ANR	1224362	AssignmentExpression	dbg -> reason . signum = desc -> signal		1224331	0		=			
ANR	1224363	MemberAccess	dbg -> reason . signum		1224331	0					
ANR	1224364	PtrMemberAccess	dbg -> reason		1224331	0					
ANR	1224365	Identifier	dbg		1224331	0					
ANR	1224366	Identifier	reason		1224331	1					
ANR	1224367	Identifier	signum		1224331	1					
ANR	1224368	PtrMemberAccess	desc -> signal		1224331	1					
ANR	1224369	Identifier	desc		1224331	0					
ANR	1224370	Identifier	signal		1224331	1					
ANR	1224371	ReturnStatement	return desc -> notify_type ;	171:2:4170:4194	1224331	1	True				
ANR	1224372	PtrMemberAccess	desc -> notify_type		1224331	0					
ANR	1224373	Identifier	desc		1224331	0					
ANR	1224374	Identifier	notify_type		1224331	1					
ANR	1224375	ReturnStatement	return 0 ;	173:1:4200:4208	1224331	2	True				
ANR	1224376	PrimaryExpression	0		1224331	0					
ANR	1224377	ReturnType	static int		1224331	1					
ANR	1224378	Identifier	r_debug_qnx_wait		1224331	2					
ANR	1224379	ParameterList	"RDebug * dbg , int pid"		1224331	3					
ANR	1224380	Parameter	RDebug * dbg	167:29:4031:4041	1224331	0	True				
ANR	1224381	ParameterType	RDebug *		1224331	0					
ANR	1224382	Identifier	dbg		1224331	1					
ANR	1224383	Parameter	int pid	167:42:4044:4050	1224331	1	True				
ANR	1224384	ParameterType	int		1224331	0					
ANR	1224385	Identifier	pid		1224331	1					
ANR	1224386	CFGEntryNode	ENTRY		1224331		True				
ANR	1224387	CFGExitNode	EXIT		1224331		True				
ANR	1224388	Symbol	qnxr_wait		1224331						
ANR	1224389	Symbol	dbg -> reason		1224331						
ANR	1224390	Symbol	desc -> signal		1224331						
ANR	1224391	Symbol	dbg		1224331						
ANR	1224392	Symbol	pid		1224331						
ANR	1224393	Symbol	ptid		1224331						
ANR	1224394	Symbol	* dbg		1224331						
ANR	1224395	Symbol	dbg -> reason . signum		1224331						
ANR	1224396	Symbol	* desc		1224331						
ANR	1224397	Symbol	ptid_equal		1224331						
ANR	1224398	Symbol	null_ptid		1224331						
ANR	1224399	Symbol	desc		1224331						
ANR	1224400	Symbol	desc -> notify_type		1224331						
ANR	1224401	Function	r_debug_qnx_stop	176:0:4213:4290							
ANR	1224402	FunctionDef	r_debug_qnx_stop (RDebug * dbg)		1224401	0					
ANR	1224403	CompoundStatement		176:42:4255:4290	1224401	0					
ANR	1224404	ExpressionStatement	qnxr_stop ( desc )	177:1:4258:4274	1224401	0	True				
ANR	1224405	CallExpression	qnxr_stop ( desc )		1224401	0					
ANR	1224406	Callee	qnxr_stop		1224401	0					
ANR	1224407	Identifier	qnxr_stop		1224401	0					
ANR	1224408	ArgumentList	desc		1224401	1					
ANR	1224409	Argument	desc		1224401	0					
ANR	1224410	Identifier	desc		1224401	0					
ANR	1224411	ReturnStatement	return true ;	178:1:4277:4288	1224401	1	True				
ANR	1224412	Identifier	true		1224401	0					
ANR	1224413	ReturnType	static int		1224401	1					
ANR	1224414	Identifier	r_debug_qnx_stop		1224401	2					
ANR	1224415	ParameterList	RDebug * dbg		1224401	3					
ANR	1224416	Parameter	RDebug * dbg	176:29:4242:4252	1224401	0	True				
ANR	1224417	ParameterType	RDebug *		1224401	0					
ANR	1224418	Identifier	dbg		1224401	1					
ANR	1224419	CFGEntryNode	ENTRY		1224401		True				
ANR	1224420	CFGExitNode	EXIT		1224401		True				
ANR	1224421	Symbol	dbg		1224401						
ANR	1224422	Symbol	true		1224401						
ANR	1224423	Symbol	desc		1224401						
ANR	1224424	Function	r_debug_qnx_attach	181:0:4293:5323							
ANR	1224425	FunctionDef	"r_debug_qnx_attach (RDebug * dbg , int pid)"		1224424	0					
ANR	1224426	CompoundStatement		181:53:4346:5323	1224424	0					
ANR	1224427	IdentifierDeclStatement	RIODesc * d = dbg -> iob . io -> desc ;	182:1:4349:4379	1224424	0	True				
ANR	1224428	IdentifierDecl	* d = dbg -> iob . io -> desc		1224424	0					
ANR	1224429	IdentifierDeclType	RIODesc *		1224424	0					
ANR	1224430	Identifier	d		1224424	1					
ANR	1224431	AssignmentExpression	* d = dbg -> iob . io -> desc		1224424	2		=			
ANR	1224432	Identifier	d		1224424	0					
ANR	1224433	PtrMemberAccess	dbg -> iob . io -> desc		1224424	1					
ANR	1224434	MemberAccess	dbg -> iob . io		1224424	0					
ANR	1224435	PtrMemberAccess	dbg -> iob		1224424	0					
ANR	1224436	Identifier	dbg		1224424	0					
ANR	1224437	Identifier	iob		1224424	1					
ANR	1224438	Identifier	io		1224424	1					
ANR	1224439	Identifier	desc		1224424	1					
ANR	1224440	ExpressionStatement	dbg -> swstep = false	183:1:4382:4401	1224424	1	True				
ANR	1224441	AssignmentExpression	dbg -> swstep = false		1224424	0		=			
ANR	1224442	PtrMemberAccess	dbg -> swstep		1224424	0					
ANR	1224443	Identifier	dbg		1224424	0					
ANR	1224444	Identifier	swstep		1224424	1					
ANR	1224445	Identifier	false		1224424	1					
ANR	1224446	IfStatement	if ( d && d -> plugin && d -> plugin -> name && d -> data )		1224424	2					
ANR	1224447	Condition	d && d -> plugin && d -> plugin -> name && d -> data	185:5:4409:4452	1224424	0	True				
ANR	1224448	AndExpression	d && d -> plugin && d -> plugin -> name && d -> data		1224424	0		&&			
ANR	1224449	Identifier	d		1224424	0					
ANR	1224450	AndExpression	d -> plugin && d -> plugin -> name && d -> data		1224424	1		&&			
ANR	1224451	PtrMemberAccess	d -> plugin		1224424	0					
ANR	1224452	Identifier	d		1224424	0					
ANR	1224453	Identifier	plugin		1224424	1					
ANR	1224454	AndExpression	d -> plugin -> name && d -> data		1224424	1		&&			
ANR	1224455	PtrMemberAccess	d -> plugin -> name		1224424	0					
ANR	1224456	PtrMemberAccess	d -> plugin		1224424	0					
ANR	1224457	Identifier	d		1224424	0					
ANR	1224458	Identifier	plugin		1224424	1					
ANR	1224459	Identifier	name		1224424	1					
ANR	1224460	PtrMemberAccess	d -> data		1224424	1					
ANR	1224461	Identifier	d		1224424	0					
ANR	1224462	Identifier	data		1224424	1					
ANR	1224463	CompoundStatement		5:51:108:108	1224424	1					
ANR	1224464	IfStatement	"if ( ! strcmp ( ""qnx"" , d -> plugin -> name ) )"		1224424	0					
ANR	1224465	Condition	"! strcmp ( ""qnx"" , d -> plugin -> name )"	186:6:4463:4494	1224424	0	True				
ANR	1224466	UnaryOperationExpression	"! strcmp ( ""qnx"" , d -> plugin -> name )"		1224424	0					
ANR	1224467	UnaryOperator	!		1224424	0					
ANR	1224468	CallExpression	"strcmp ( ""qnx"" , d -> plugin -> name )"		1224424	1					
ANR	1224469	Callee	strcmp		1224424	0					
ANR	1224470	Identifier	strcmp		1224424	0					
ANR	1224471	ArgumentList	"""qnx"""		1224424	1					
ANR	1224472	Argument	"""qnx"""		1224424	0					
ANR	1224473	PrimaryExpression	"""qnx"""		1224424	0					
ANR	1224474	Argument	d -> plugin -> name		1224424	1					
ANR	1224475	PtrMemberAccess	d -> plugin -> name		1224424	0					
ANR	1224476	PtrMemberAccess	d -> plugin		1224424	0					
ANR	1224477	Identifier	d		1224424	0					
ANR	1224478	Identifier	plugin		1224424	1					
ANR	1224479	Identifier	name		1224424	1					
ANR	1224480	CompoundStatement		9:3:220:246	1224424	1					
ANR	1224481	IdentifierDeclStatement	RIOQnx * g = d -> data ;	187:3:4502:4521	1224424	0	True				
ANR	1224482	IdentifierDecl	* g = d -> data		1224424	0					
ANR	1224483	IdentifierDeclType	RIOQnx *		1224424	0					
ANR	1224484	Identifier	g		1224424	1					
ANR	1224485	AssignmentExpression	* g = d -> data		1224424	2		=			
ANR	1224486	Identifier	g		1224424	0					
ANR	1224487	PtrMemberAccess	d -> data		1224424	1					
ANR	1224488	Identifier	d		1224424	0					
ANR	1224489	Identifier	data		1224424	1					
ANR	1224490	IdentifierDeclStatement	int arch = r_sys_arch_id ( dbg -> arch ) ;	188:3:4526:4562	1224424	1	True				
ANR	1224491	IdentifierDecl	arch = r_sys_arch_id ( dbg -> arch )		1224424	0					
ANR	1224492	IdentifierDeclType	int		1224424	0					
ANR	1224493	Identifier	arch		1224424	1					
ANR	1224494	AssignmentExpression	arch = r_sys_arch_id ( dbg -> arch )		1224424	2		=			
ANR	1224495	Identifier	arch		1224424	0					
ANR	1224496	CallExpression	r_sys_arch_id ( dbg -> arch )		1224424	1					
ANR	1224497	Callee	r_sys_arch_id		1224424	0					
ANR	1224498	Identifier	r_sys_arch_id		1224424	0					
ANR	1224499	ArgumentList	dbg -> arch		1224424	1					
ANR	1224500	Argument	dbg -> arch		1224424	0					
ANR	1224501	PtrMemberAccess	dbg -> arch		1224424	0					
ANR	1224502	Identifier	dbg		1224424	0					
ANR	1224503	Identifier	arch		1224424	1					
ANR	1224504	IdentifierDeclStatement	int bits = dbg -> anal -> bits ;	189:3:4567:4593	1224424	2	True				
ANR	1224505	IdentifierDecl	bits = dbg -> anal -> bits		1224424	0					
ANR	1224506	IdentifierDeclType	int		1224424	0					
ANR	1224507	Identifier	bits		1224424	1					
ANR	1224508	AssignmentExpression	bits = dbg -> anal -> bits		1224424	2		=			
ANR	1224509	Identifier	bits		1224424	0					
ANR	1224510	PtrMemberAccess	dbg -> anal -> bits		1224424	1					
ANR	1224511	PtrMemberAccess	dbg -> anal		1224424	0					
ANR	1224512	Identifier	dbg		1224424	0					
ANR	1224513	Identifier	anal		1224424	1					
ANR	1224514	Identifier	bits		1224424	1					
ANR	1224515	IfStatement	if ( ( desc = & g -> desc ) )		1224424	3					
ANR	1224516	Condition	desc = & g -> desc	190:7:4602:4618	1224424	0	True				
ANR	1224517	AssignmentExpression	desc = & g -> desc		1224424	0		=			
ANR	1224518	Identifier	desc		1224424	0					
ANR	1224519	UnaryOperationExpression	& g -> desc		1224424	1					
ANR	1224520	UnaryOperator	&		1224424	0					
ANR	1224521	PtrMemberAccess	g -> desc		1224424	1					
ANR	1224522	Identifier	g		1224424	0					
ANR	1224523	Identifier	desc		1224424	1					
ANR	1224524	CompoundStatement		10:26:274:274	1224424	1					
ANR	1224525	SwitchStatement	switch ( arch )		1224424	0					
ANR	1224526	Condition	arch	191:12:4635:4638	1224424	0	True				
ANR	1224527	Identifier	arch		1224424	0					
ANR	1224528	CompoundStatement		11:18:294:294	1224424	1					
ANR	1224529	Label	case R_SYS_ARCH_X86 :	192:4:4647:4666	1224424	0	True				
ANR	1224530	Identifier	R_SYS_ARCH_X86		1224424	0					
ANR	1224531	IfStatement	if ( bits == 16 || bits == 32 )		1224424	1					
ANR	1224532	Condition	bits == 16 || bits == 32	193:9:4677:4700	1224424	0	True				
ANR	1224533	OrExpression	bits == 16 || bits == 32		1224424	0		||			
ANR	1224534	EqualityExpression	bits == 16		1224424	0		==			
ANR	1224535	Identifier	bits		1224424	0					
ANR	1224536	PrimaryExpression	16		1224424	1					
ANR	1224537	EqualityExpression	bits == 32		1224424	1		==			
ANR	1224538	Identifier	bits		1224424	0					
ANR	1224539	PrimaryExpression	32		1224424	1					
ANR	1224540	CompoundStatement		13:35:356:356	1224424	1					
ANR	1224541	ExpressionStatement	"qnxr_set_architecture ( & g -> desc , X86_32 )"	194:6:4711:4751	1224424	0	True				
ANR	1224542	CallExpression	"qnxr_set_architecture ( & g -> desc , X86_32 )"		1224424	0					
ANR	1224543	Callee	qnxr_set_architecture		1224424	0					
ANR	1224544	Identifier	qnxr_set_architecture		1224424	0					
ANR	1224545	ArgumentList	& g -> desc		1224424	1					
ANR	1224546	Argument	& g -> desc		1224424	0					
ANR	1224547	UnaryOperationExpression	& g -> desc		1224424	0					
ANR	1224548	UnaryOperator	&		1224424	0					
ANR	1224549	PtrMemberAccess	g -> desc		1224424	1					
ANR	1224550	Identifier	g		1224424	0					
ANR	1224551	Identifier	desc		1224424	1					
ANR	1224552	Argument	X86_32		1224424	1					
ANR	1224553	Identifier	X86_32		1224424	0					
ANR	1224554	ElseStatement	else		1224424	0					
ANR	1224555	CompoundStatement		15:12:418:418	1224424	0					
ANR	1224556	ExpressionStatement	"eprintf ( ""Not supported register %s %d profile\\n"" , dbg -> arch , bits )"	196:6:4773:4840	1224424	0	True				
ANR	1224557	CallExpression	"eprintf ( ""Not supported register %s %d profile\\n"" , dbg -> arch , bits )"		1224424	0					
ANR	1224558	Callee	eprintf		1224424	0					
ANR	1224559	Identifier	eprintf		1224424	0					
ANR	1224560	ArgumentList	"""Not supported register %s %d profile\\n"""		1224424	1					
ANR	1224561	Argument	"""Not supported register %s %d profile\\n"""		1224424	0					
ANR	1224562	PrimaryExpression	"""Not supported register %s %d profile\\n"""		1224424	0					
ANR	1224563	Argument	dbg -> arch		1224424	1					
ANR	1224564	PtrMemberAccess	dbg -> arch		1224424	0					
ANR	1224565	Identifier	dbg		1224424	0					
ANR	1224566	Identifier	arch		1224424	1					
ANR	1224567	Argument	bits		1224424	2					
ANR	1224568	Identifier	bits		1224424	0					
ANR	1224569	ReturnStatement	return false ;	197:6:4848:4860	1224424	1	True				
ANR	1224570	Identifier	false		1224424	0					
ANR	1224571	BreakStatement	break ;	199:5:4874:4879	1224424	2	True				
ANR	1224572	Label	case R_SYS_ARCH_ARM :	200:4:4885:4904	1224424	3	True				
ANR	1224573	Identifier	R_SYS_ARCH_ARM		1224424	0					
ANR	1224574	IfStatement	if ( bits == 16 || bits == 32 )		1224424	4					
ANR	1224575	Condition	bits == 16 || bits == 32	201:9:4915:4938	1224424	0	True				
ANR	1224576	OrExpression	bits == 16 || bits == 32		1224424	0		||			
ANR	1224577	EqualityExpression	bits == 16		1224424	0		==			
ANR	1224578	Identifier	bits		1224424	0					
ANR	1224579	PrimaryExpression	16		1224424	1					
ANR	1224580	EqualityExpression	bits == 32		1224424	1		==			
ANR	1224581	Identifier	bits		1224424	0					
ANR	1224582	PrimaryExpression	32		1224424	1					
ANR	1224583	CompoundStatement		21:35:594:594	1224424	1					
ANR	1224584	ExpressionStatement	"qnxr_set_architecture ( & g -> desc , ARM_32 )"	202:6:4949:4989	1224424	0	True				
ANR	1224585	CallExpression	"qnxr_set_architecture ( & g -> desc , ARM_32 )"		1224424	0					
ANR	1224586	Callee	qnxr_set_architecture		1224424	0					
ANR	1224587	Identifier	qnxr_set_architecture		1224424	0					
ANR	1224588	ArgumentList	& g -> desc		1224424	1					
ANR	1224589	Argument	& g -> desc		1224424	0					
ANR	1224590	UnaryOperationExpression	& g -> desc		1224424	0					
ANR	1224591	UnaryOperator	&		1224424	0					
ANR	1224592	PtrMemberAccess	g -> desc		1224424	1					
ANR	1224593	Identifier	g		1224424	0					
ANR	1224594	Identifier	desc		1224424	1					
ANR	1224595	Argument	ARM_32		1224424	1					
ANR	1224596	Identifier	ARM_32		1224424	0					
ANR	1224597	ElseStatement	else		1224424	0					
ANR	1224598	CompoundStatement		23:12:656:656	1224424	0					
ANR	1224599	ExpressionStatement	"eprintf ( ""Not supported register %s %d profile\\n"" , dbg -> arch , bits )"	204:6:5011:5078	1224424	0	True				
ANR	1224600	CallExpression	"eprintf ( ""Not supported register %s %d profile\\n"" , dbg -> arch , bits )"		1224424	0					
ANR	1224601	Callee	eprintf		1224424	0					
ANR	1224602	Identifier	eprintf		1224424	0					
ANR	1224603	ArgumentList	"""Not supported register %s %d profile\\n"""		1224424	1					
ANR	1224604	Argument	"""Not supported register %s %d profile\\n"""		1224424	0					
ANR	1224605	PrimaryExpression	"""Not supported register %s %d profile\\n"""		1224424	0					
ANR	1224606	Argument	dbg -> arch		1224424	1					
ANR	1224607	PtrMemberAccess	dbg -> arch		1224424	0					
ANR	1224608	Identifier	dbg		1224424	0					
ANR	1224609	Identifier	arch		1224424	1					
ANR	1224610	Argument	bits		1224424	2					
ANR	1224611	Identifier	bits		1224424	0					
ANR	1224612	ReturnStatement	return false ;	205:6:5086:5098	1224424	1	True				
ANR	1224613	Identifier	false		1224424	0					
ANR	1224614	BreakStatement	break ;	207:5:5112:5117	1224424	5	True				
ANR	1224615	IfStatement	if ( pid )		1224424	4					
ANR	1224616	Condition	pid	210:7:5137:5139	1224424	0	True				
ANR	1224617	Identifier	pid		1224424	0					
ANR	1224618	CompoundStatement		30:12:795:795	1224424	1					
ANR	1224619	ExpressionStatement	"qnxr_attach ( desc , pid )"	211:4:5148:5171	1224424	0	True				
ANR	1224620	CallExpression	"qnxr_attach ( desc , pid )"		1224424	0					
ANR	1224621	Callee	qnxr_attach		1224424	0					
ANR	1224622	Identifier	qnxr_attach		1224424	0					
ANR	1224623	ArgumentList	desc		1224424	1					
ANR	1224624	Argument	desc		1224424	0					
ANR	1224625	Identifier	desc		1224424	0					
ANR	1224626	Argument	pid		1224424	1					
ANR	1224627	Identifier	pid		1224424	0					
ANR	1224628	ElseStatement	else		1224424	0					
ANR	1224629	CompoundStatement		33:9:840:840	1224424	0					
ANR	1224630	ExpressionStatement	"eprintf ( ""%s: error: underlying IO descriptor isn't a QNX one\\n"" , __func__ )"	214:3:5192:5267	1224424	0	True				
ANR	1224631	CallExpression	"eprintf ( ""%s: error: underlying IO descriptor isn't a QNX one\\n"" , __func__ )"		1224424	0					
ANR	1224632	Callee	eprintf		1224424	0					
ANR	1224633	Identifier	eprintf		1224424	0					
ANR	1224634	ArgumentList	"""%s: error: underlying IO descriptor isn't a QNX one\\n"""		1224424	1					
ANR	1224635	Argument	"""%s: error: underlying IO descriptor isn't a QNX one\\n"""		1224424	0					
ANR	1224636	PrimaryExpression	"""%s: error: underlying IO descriptor isn't a QNX one\\n"""		1224424	0					
ANR	1224637	Argument	__func__		1224424	1					
ANR	1224638	Identifier	__func__		1224424	0					
ANR	1224639	ReturnStatement	return false ;	215:3:5272:5284	1224424	1	True				
ANR	1224640	Identifier	false		1224424	0					
ANR	1224641	ExpressionStatement	dbg -> pid = 0	219:1:5295:5307	1224424	3	True				
ANR	1224642	AssignmentExpression	dbg -> pid = 0		1224424	0		=			
ANR	1224643	PtrMemberAccess	dbg -> pid		1224424	0					
ANR	1224644	Identifier	dbg		1224424	0					
ANR	1224645	Identifier	pid		1224424	1					
ANR	1224646	PrimaryExpression	0		1224424	1					
ANR	1224647	ReturnStatement	return true ;	220:1:5310:5321	1224424	4	True				
ANR	1224648	Identifier	true		1224424	0					
ANR	1224649	ReturnType	static int		1224424	1					
ANR	1224650	Identifier	r_debug_qnx_attach		1224424	2					
ANR	1224651	ParameterList	"RDebug * dbg , int pid"		1224424	3					
ANR	1224652	Parameter	RDebug * dbg	181:31:4324:4334	1224424	0	True				
ANR	1224653	ParameterType	RDebug *		1224424	0					
ANR	1224654	Identifier	dbg		1224424	1					
ANR	1224655	Parameter	int pid	181:44:4337:4343	1224424	1	True				
ANR	1224656	ParameterType	int		1224424	0					
ANR	1224657	Identifier	pid		1224424	1					
ANR	1224658	CFGEntryNode	ENTRY		1224424		True				
ANR	1224659	CFGExitNode	EXIT		1224424		True				
ANR	1224660	Symbol	dbg -> iob . io		1224424						
ANR	1224661	Symbol	* d -> plugin		1224424						
ANR	1224662	Symbol	pid		1224424						
ANR	1224663	Symbol	r_sys_arch_id		1224424						
ANR	1224664	Symbol	ARM_32		1224424						
ANR	1224665	Symbol	d -> plugin -> name		1224424						
ANR	1224666	Symbol	dbg -> iob . io -> desc		1224424						
ANR	1224667	Symbol	* dbg -> iob		1224424						
ANR	1224668	Symbol	strcmp		1224424						
ANR	1224669	Symbol	dbg -> iob		1224424						
ANR	1224670	Symbol	dbg -> anal -> bits		1224424						
ANR	1224671	Symbol	d		1224424						
ANR	1224672	Symbol	d -> plugin		1224424						
ANR	1224673	Symbol	dbg -> anal		1224424						
ANR	1224674	Symbol	* * d		1224424						
ANR	1224675	Symbol	g		1224424						
ANR	1224676	Symbol	dbg		1224424						
ANR	1224677	Symbol	false		1224424						
ANR	1224678	Symbol	bits		1224424						
ANR	1224679	Symbol	& g -> desc		1224424						
ANR	1224680	Symbol	d -> data		1224424						
ANR	1224681	Symbol	* dbg		1224424						
ANR	1224682	Symbol	* dbg -> iob . io		1224424						
ANR	1224683	Symbol	* d		1224424						
ANR	1224684	Symbol	* dbg -> anal		1224424						
ANR	1224685	Symbol	dbg -> swstep		1224424						
ANR	1224686	Symbol	X86_32		1224424						
ANR	1224687	Symbol	dbg -> pid		1224424						
ANR	1224688	Symbol	__func__		1224424						
ANR	1224689	Symbol	true		1224424						
ANR	1224690	Symbol	dbg -> arch		1224424						
ANR	1224691	Symbol	arch		1224424						
ANR	1224692	Symbol	* * dbg		1224424						
ANR	1224693	Symbol	desc		1224424						
ANR	1224694	Function	r_debug_qnx_detach	223:0:5326:5437							
ANR	1224695	FunctionDef	"r_debug_qnx_detach (RDebug * dbg , int pid)"		1224694	0					
ANR	1224696	CompoundStatement		223:53:5379:5437	1224694	0					
ANR	1224697	ExpressionStatement	qnxr_disconnect ( desc )	224:1:5382:5404	1224694	0	True				
ANR	1224698	CallExpression	qnxr_disconnect ( desc )		1224694	0					
ANR	1224699	Callee	qnxr_disconnect		1224694	0					
ANR	1224700	Identifier	qnxr_disconnect		1224694	0					
ANR	1224701	ArgumentList	desc		1224694	1					
ANR	1224702	Argument	desc		1224694	0					
ANR	1224703	Identifier	desc		1224694	0					
ANR	1224704	ExpressionStatement	free ( reg_buf )	225:1:5407:5421	1224694	1	True				
ANR	1224705	CallExpression	free ( reg_buf )		1224694	0					
ANR	1224706	Callee	free		1224694	0					
ANR	1224707	Identifier	free		1224694	0					
ANR	1224708	ArgumentList	reg_buf		1224694	1					
ANR	1224709	Argument	reg_buf		1224694	0					
ANR	1224710	Identifier	reg_buf		1224694	0					
ANR	1224711	ReturnStatement	return true ;	226:1:5424:5435	1224694	2	True				
ANR	1224712	Identifier	true		1224694	0					
ANR	1224713	ReturnType	static int		1224694	1					
ANR	1224714	Identifier	r_debug_qnx_detach		1224694	2					
ANR	1224715	ParameterList	"RDebug * dbg , int pid"		1224694	3					
ANR	1224716	Parameter	RDebug * dbg	223:31:5357:5367	1224694	0	True				
ANR	1224717	ParameterType	RDebug *		1224694	0					
ANR	1224718	Identifier	dbg		1224694	1					
ANR	1224719	Parameter	int pid	223:44:5370:5376	1224694	1	True				
ANR	1224720	ParameterType	int		1224694	0					
ANR	1224721	Identifier	pid		1224694	1					
ANR	1224722	CFGEntryNode	ENTRY		1224694		True				
ANR	1224723	CFGExitNode	EXIT		1224694		True				
ANR	1224724	Symbol	dbg		1224694						
ANR	1224725	Symbol	true		1224694						
ANR	1224726	Symbol	pid		1224694						
ANR	1224727	Symbol	desc		1224694						
ANR	1224728	Symbol	reg_buf		1224694						
ANR	1224729	Function	r_debug_qnx_reg_profile	229:0:5440:7929							
ANR	1224730	FunctionDef	r_debug_qnx_reg_profile (RDebug * dbg)		1224729	0					
ANR	1224731	CompoundStatement		229:57:5497:7929	1224729	0					
ANR	1224732	IdentifierDeclStatement	int arch = r_sys_arch_id ( dbg -> arch ) ;	230:1:5500:5536	1224729	0	True				
ANR	1224733	IdentifierDecl	arch = r_sys_arch_id ( dbg -> arch )		1224729	0					
ANR	1224734	IdentifierDeclType	int		1224729	0					
ANR	1224735	Identifier	arch		1224729	1					
ANR	1224736	AssignmentExpression	arch = r_sys_arch_id ( dbg -> arch )		1224729	2		=			
ANR	1224737	Identifier	arch		1224729	0					
ANR	1224738	CallExpression	r_sys_arch_id ( dbg -> arch )		1224729	1					
ANR	1224739	Callee	r_sys_arch_id		1224729	0					
ANR	1224740	Identifier	r_sys_arch_id		1224729	0					
ANR	1224741	ArgumentList	dbg -> arch		1224729	1					
ANR	1224742	Argument	dbg -> arch		1224729	0					
ANR	1224743	PtrMemberAccess	dbg -> arch		1224729	0					
ANR	1224744	Identifier	dbg		1224729	0					
ANR	1224745	Identifier	arch		1224729	1					
ANR	1224746	IdentifierDeclStatement	int bits = dbg -> anal -> bits ;	231:1:5539:5565	1224729	1	True				
ANR	1224747	IdentifierDecl	bits = dbg -> anal -> bits		1224729	0					
ANR	1224748	IdentifierDeclType	int		1224729	0					
ANR	1224749	Identifier	bits		1224729	1					
ANR	1224750	AssignmentExpression	bits = dbg -> anal -> bits		1224729	2		=			
ANR	1224751	Identifier	bits		1224729	0					
ANR	1224752	PtrMemberAccess	dbg -> anal -> bits		1224729	1					
ANR	1224753	PtrMemberAccess	dbg -> anal		1224729	0					
ANR	1224754	Identifier	dbg		1224729	0					
ANR	1224755	Identifier	anal		1224729	1					
ANR	1224756	Identifier	bits		1224729	1					
ANR	1224757	SwitchStatement	switch ( arch )		1224729	2					
ANR	1224758	Condition	arch	232:9:5576:5579	1224729	0	True				
ANR	1224759	Identifier	arch		1224729	0					
ANR	1224760	CompoundStatement		4:15:84:84	1224729	1					
ANR	1224761	Label	case R_SYS_ARCH_X86 :	233:1:5585:5604	1224729	0	True				
ANR	1224762	Identifier	R_SYS_ARCH_X86		1224729	0					
ANR	1224763	Statement	return	234:2:5608:5613	1224729	1	True				
ANR	1224764	Statement	strdup	234:9:5615:5620	1224729	2	True				
ANR	1224765	Statement	(	234:16:5622:5622	1224729	3	True				
ANR	1224766	Statement	"""=PC\\teip\\n"""	235:3:5627:5637	1224729	4	True				
ANR	1224767	Statement	"""=SP\\tesp\\n"""	236:3:5642:5652	1224729	5	True				
ANR	1224768	Statement	"""=BP\\tebp\\n"""	237:3:5657:5667	1224729	6	True				
ANR	1224769	Statement	"""=A0\\teax\\n"""	238:3:5672:5682	1224729	7	True				
ANR	1224770	Statement	"""=A1\\tebx\\n"""	239:3:5687:5697	1224729	8	True				
ANR	1224771	Statement	"""=A2\\tecx\\n"""	240:3:5702:5712	1224729	9	True				
ANR	1224772	Statement	"""=A3\\tedi\\n"""	241:3:5717:5727	1224729	10	True				
ANR	1224773	Statement	"""gpr\\teax\\t.32\\t0\\t0\\n"""	242:3:5732:5750	1224729	11	True				
ANR	1224774	Statement	"""gpr\\tecx\\t.32\\t4\\t0\\n"""	243:3:5755:5773	1224729	12	True				
ANR	1224775	Statement	"""gpr\\tedx\\t.32\\t8\\t0\\n"""	244:3:5778:5796	1224729	13	True				
ANR	1224776	Statement	"""gpr\\tebx\\t.32\\t12\\t0\\n"""	245:3:5801:5820	1224729	14	True				
ANR	1224777	Statement	"""gpr\\tesp\\t.32\\t16\\t0\\n"""	246:3:5825:5844	1224729	15	True				
ANR	1224778	Statement	"""gpr\\tebp\\t.32\\t20\\t0\\n"""	247:3:5849:5868	1224729	16	True				
ANR	1224779	Statement	"""gpr\\tesi\\t.32\\t24\\t0\\n"""	248:3:5873:5892	1224729	17	True				
ANR	1224780	Statement	"""gpr\\tedi\\t.32\\t28\\t0\\n"""	249:3:5897:5916	1224729	18	True				
ANR	1224781	Statement	"""gpr\\teip\\t.32\\t32\\t0\\n"""	250:3:5921:5940	1224729	19	True				
ANR	1224782	Statement	"""gpr\\teflags\\t.32\\t36\\t0\\n"""	251:3:5945:5967	1224729	20	True				
ANR	1224783	Statement	"""seg\\tcs\\t.32\\t40\\t0\\n"""	252:3:5972:5990	1224729	21	True				
ANR	1224784	Statement	"""seg\\tss\\t.32\\t44\\t0\\n"""	253:3:5995:6013	1224729	22	True				
ANR	1224785	Statement	"""seg\\tds\\t.32\\t48\\t0\\n"""	255:3:6024:6042	1224729	23	True				
ANR	1224786	Statement	"""seg\\tes\\t.32\\t52\\t0\\n"""	256:3:6047:6065	1224729	24	True				
ANR	1224787	Statement	"""seg\\tfs\\t.32\\t56\\t0\\n"""	257:3:6070:6088	1224729	25	True				
ANR	1224788	Statement	"""seg\\tgs\\t.32\\t60\\t0\\n"""	258:3:6093:6111	1224729	26	True				
ANR	1224789	Statement	)	260:3:6123:6123	1224729	27	True				
ANR	1224790	ExpressionStatement		260:4:6124:6124	1224729	28	True				
ANR	1224791	Label	case R_SYS_ARCH_ARM :	261:1:6127:6146	1224729	29	True				
ANR	1224792	Identifier	R_SYS_ARCH_ARM		1224729	0					
ANR	1224793	IfStatement	if ( bits == 32 )		1224729	30					
ANR	1224794	Condition	bits == 32	262:6:6154:6163	1224729	0	True				
ANR	1224795	EqualityExpression	bits == 32		1224729	0		==			
ANR	1224796	Identifier	bits		1224729	0					
ANR	1224797	PrimaryExpression	32		1224729	1					
ANR	1224798	CompoundStatement		34:18:668:668	1224729	1					
ANR	1224799	Statement	return	263:3:6171:6176	1224729	0	True				
ANR	1224800	Statement	strdup	263:10:6178:6183	1224729	1	True				
ANR	1224801	Statement	(	263:17:6185:6185	1224729	2	True				
ANR	1224802	Statement	"""=PC\\tr15\\n"""	264:4:6191:6201	1224729	3	True				
ANR	1224803	Statement	"""=SP\\tr14\\n"""	265:4:6207:6217	1224729	4	True				
ANR	1224804	Statement	"""=A0\\tr0\\n"""	266:4:6230:6239	1224729	5	True				
ANR	1224805	Statement	"""=A1\\tr1\\n"""	267:4:6245:6254	1224729	6	True				
ANR	1224806	Statement	"""=A2\\tr2\\n"""	268:4:6260:6269	1224729	7	True				
ANR	1224807	Statement	"""=A3\\tr3\\n"""	269:4:6275:6284	1224729	8	True				
ANR	1224808	Statement	"""gpr\\tr0\\t.32\\t0\\t0\\n"""	270:4:6290:6307	1224729	9	True				
ANR	1224809	Statement	"""gpr\\tr1\\t.32\\t4\\t0\\n"""	271:4:6313:6330	1224729	10	True				
ANR	1224810	Statement	"""gpr\\tr2\\t.32\\t8\\t0\\n"""	272:4:6336:6353	1224729	11	True				
ANR	1224811	Statement	"""gpr\\tr3\\t.32\\t12\\t0\\n"""	273:4:6359:6377	1224729	12	True				
ANR	1224812	Statement	"""gpr\\tr4\\t.32\\t16\\t0\\n"""	274:4:6383:6401	1224729	13	True				
ANR	1224813	Statement	"""gpr\\tr5\\t.32\\t20\\t0\\n"""	275:4:6407:6425	1224729	14	True				
ANR	1224814	Statement	"""gpr\\tr6\\t.32\\t24\\t0\\n"""	276:4:6431:6449	1224729	15	True				
ANR	1224815	Statement	"""gpr\\tr7\\t.32\\t28\\t0\\n"""	277:4:6455:6473	1224729	16	True				
ANR	1224816	Statement	"""gpr\\tr8\\t.32\\t32\\t0\\n"""	278:4:6479:6497	1224729	17	True				
ANR	1224817	Statement	"""gpr\\tr9\\t.32\\t36\\t0\\n"""	279:4:6503:6521	1224729	18	True				
ANR	1224818	Statement	"""gpr\\tr10\\t.32\\t40\\t0\\n"""	280:4:6527:6546	1224729	19	True				
ANR	1224819	Statement	"""gpr\\tr11\\t.32\\t44\\t0\\n"""	281:4:6552:6571	1224729	20	True				
ANR	1224820	Statement	"""gpr\\tr12\\t.32\\t48\\t0\\n"""	282:4:6577:6596	1224729	21	True				
ANR	1224821	Statement	"""gpr\\tsp\\t.32\\t52\\t0\\n"""	283:4:6602:6620	1224729	22	True				
ANR	1224822	Statement	"""gpr\\tlr\\t.32\\t56\\t0\\n"""	284:4:6633:6651	1224729	23	True				
ANR	1224823	Statement	"""gpr\\tpc\\t.32\\t60\\t0\\n"""	285:4:6664:6682	1224729	24	True				
ANR	1224824	Statement	"""gpr\\tr13\\t.32\\t52\\t0\\n"""	286:4:6695:6714	1224729	25	True				
ANR	1224825	Statement	"""gpr\\tr14\\t.32\\t56\\t0\\n"""	287:4:6720:6739	1224729	26	True				
ANR	1224826	Statement	"""gpr\\tr15\\t.32\\t60\\t0\\n"""	288:4:6745:6764	1224729	27	True				
ANR	1224827	Statement	"""gpr\\tcpsr\\t.96\\t64\\t0\\n"""	289:4:6770:6790	1224729	28	True				
ANR	1224828	Statement	"""mmx\\td0\\t.64\\t68\\t0\\n"""	290:4:6796:6814	1224729	29	True				
ANR	1224829	Statement	"""mmx\\td1\\t.64\\t76\\t0\\n"""	291:4:6828:6846	1224729	30	True				
ANR	1224830	Statement	"""mmx\\td2\\t.64\\t84\\t0\\n"""	292:4:6860:6878	1224729	31	True				
ANR	1224831	Statement	"""mmx\\td3\\t.64\\t92\\t0\\n"""	293:4:6892:6910	1224729	32	True				
ANR	1224832	Statement	"""mmx\\td4\\t.64\\t100\\t0\\n"""	294:4:6924:6943	1224729	33	True				
ANR	1224833	Statement	"""mmx\\td5\\t.64\\t108\\t0\\n"""	295:4:6957:6976	1224729	34	True				
ANR	1224834	Statement	"""mmx\\td6\\t.64\\t116\\t0\\n"""	296:4:6990:7009	1224729	35	True				
ANR	1224835	Statement	"""mmx\\td7\\t.64\\t124\\t0\\n"""	297:4:7023:7042	1224729	36	True				
ANR	1224836	Statement	"""mmx\\td8\\t.64\\t132\\t0\\n"""	298:4:7056:7075	1224729	37	True				
ANR	1224837	Statement	"""mmx\\td9\\t.64\\t140\\t0\\n"""	299:4:7089:7108	1224729	38	True				
ANR	1224838	Statement	"""mmx\\td10\\t.64\\t148\\t0\\n"""	300:4:7122:7142	1224729	39	True				
ANR	1224839	Statement	"""mmx\\td11\\t.64\\t156\\t0\\n"""	301:4:7156:7176	1224729	40	True				
ANR	1224840	Statement	"""mmx\\td12\\t.64\\t164\\t0\\n"""	302:4:7190:7210	1224729	41	True				
ANR	1224841	Statement	"""mmx\\td13\\t.64\\t172\\t0\\n"""	303:4:7224:7244	1224729	42	True				
ANR	1224842	Statement	"""mmx\\td14\\t.64\\t180\\t0\\n"""	304:4:7258:7278	1224729	43	True				
ANR	1224843	Statement	"""mmx\\td15\\t.64\\t188\\t0\\n"""	305:4:7292:7312	1224729	44	True				
ANR	1224844	Statement	"""mmx\\td16\\t.64\\t196\\t0\\n"""	306:4:7326:7346	1224729	45	True				
ANR	1224845	Statement	"""mmx\\td17\\t.64\\t204\\t0\\n"""	307:4:7360:7380	1224729	46	True				
ANR	1224846	Statement	"""mmx\\td18\\t.64\\t212\\t0\\n"""	308:4:7394:7414	1224729	47	True				
ANR	1224847	Statement	"""mmx\\td19\\t.64\\t220\\t0\\n"""	309:4:7428:7448	1224729	48	True				
ANR	1224848	Statement	"""mmx\\td20\\t.64\\t228\\t0\\n"""	310:4:7462:7482	1224729	49	True				
ANR	1224849	Statement	"""mmx\\td21\\t.64\\t236\\t0\\n"""	311:4:7496:7516	1224729	50	True				
ANR	1224850	Statement	"""mmx\\td22\\t.64\\t244\\t0\\n"""	312:4:7530:7550	1224729	51	True				
ANR	1224851	Statement	"""mmx\\td23\\t.64\\t252\\t0\\n"""	313:4:7564:7584	1224729	52	True				
ANR	1224852	Statement	"""mmx\\td24\\t.64\\t260\\t0\\n"""	314:4:7598:7618	1224729	53	True				
ANR	1224853	Statement	"""mmx\\td25\\t.64\\t268\\t0\\n"""	315:4:7632:7652	1224729	54	True				
ANR	1224854	Statement	"""mmx\\td26\\t.64\\t276\\t0\\n"""	316:4:7666:7686	1224729	55	True				
ANR	1224855	Statement	"""mmx\\td27\\t.64\\t284\\t0\\n"""	317:4:7700:7720	1224729	56	True				
ANR	1224856	Statement	"""mmx\\td28\\t.64\\t292\\t0\\n"""	318:4:7734:7754	1224729	57	True				
ANR	1224857	Statement	"""mmx\\td29\\t.64\\t300\\t0\\n"""	319:4:7768:7788	1224729	58	True				
ANR	1224858	Statement	"""mmx\\td30\\t.64\\t308\\t0\\n"""	320:4:7802:7822	1224729	59	True				
ANR	1224859	Statement	"""mmx\\td31\\t.64\\t316\\t0\\n"""	321:4:7836:7856	1224729	60	True				
ANR	1224860	Statement	"""mmx\\tfpscr\\t.32\\t324\\t0\\n"""	322:4:7870:7892	1224729	61	True				
ANR	1224861	Statement	)	323:3:7905:7905	1224729	62	True				
ANR	1224862	ExpressionStatement		323:4:7906:7906	1224729	63	True				
ANR	1224863	ReturnStatement	return NULL ;	326:1:7916:7927	1224729	3	True				
ANR	1224864	Identifier	NULL		1224729	0					
ANR	1224865	ReturnType	static const char *		1224729	1					
ANR	1224866	Identifier	r_debug_qnx_reg_profile		1224729	2					
ANR	1224867	ParameterList	RDebug * dbg		1224729	3					
ANR	1224868	Parameter	RDebug * dbg	229:44:5484:5494	1224729	0	True				
ANR	1224869	ParameterType	RDebug *		1224729	0					
ANR	1224870	Identifier	dbg		1224729	1					
ANR	1224871	CFGEntryNode	ENTRY		1224729		True				
ANR	1224872	CFGExitNode	EXIT		1224729		True				
ANR	1224873	Symbol	* dbg -> anal		1224729						
ANR	1224874	Symbol	dbg -> anal -> bits		1224729						
ANR	1224875	Symbol	NULL		1224729						
ANR	1224876	Symbol	dbg -> anal		1224729						
ANR	1224877	Symbol	dbg		1224729						
ANR	1224878	Symbol	bits		1224729						
ANR	1224879	Symbol	dbg -> arch		1224729						
ANR	1224880	Symbol	arch		1224729						
ANR	1224881	Symbol	r_sys_arch_id		1224729						
ANR	1224882	Symbol	* dbg		1224729						
ANR	1224883	Symbol	* * dbg		1224729						
ANR	1224884	Function	r_debug_qnx_breakpoint	329:0:7932:8246							
ANR	1224885	FunctionDef	"r_debug_qnx_breakpoint (RBreakpoint * bp , RBreakpointItem * b , bool set)"		1224884	0					
ANR	1224886	CompoundStatement		329:82:8014:8246	1224884	0					
ANR	1224887	IfStatement	if ( ! b )		1224884	0					
ANR	1224888	Condition	! b	330:5:8021:8022	1224884	0	True				
ANR	1224889	UnaryOperationExpression	! b		1224884	0					
ANR	1224890	UnaryOperator	!		1224884	0					
ANR	1224891	Identifier	b		1224884	1					
ANR	1224892	CompoundStatement		2:9:10:10	1224884	1					
ANR	1224893	ReturnStatement	return false ;	331:2:8029:8041	1224884	0	True				
ANR	1224894	Identifier	false		1224884	0					
ANR	1224895	IdentifierDeclStatement	"int ret = set ? b -> hw ? qnxr_set_hwbp ( desc , b -> addr , """" ) : qnxr_set_bp ( desc , b -> addr , """" ) : b -> hw ? qnxr_remove_hwbp ( desc , b -> addr ) : qnxr_remove_bp ( desc , b -> addr ) ;"	333:1:8047:8230	1224884	1	True				
ANR	1224896	IdentifierDecl	"ret = set ? b -> hw ? qnxr_set_hwbp ( desc , b -> addr , """" ) : qnxr_set_bp ( desc , b -> addr , """" ) : b -> hw ? qnxr_remove_hwbp ( desc , b -> addr ) : qnxr_remove_bp ( desc , b -> addr )"		1224884	0					
ANR	1224897	IdentifierDeclType	int		1224884	0					
ANR	1224898	Identifier	ret		1224884	1					
ANR	1224899	AssignmentExpression	"ret = set ? b -> hw ? qnxr_set_hwbp ( desc , b -> addr , """" ) : qnxr_set_bp ( desc , b -> addr , """" ) : b -> hw ? qnxr_remove_hwbp ( desc , b -> addr ) : qnxr_remove_bp ( desc , b -> addr )"		1224884	2		=			
ANR	1224900	Identifier	ret		1224884	0					
ANR	1224901	ConditionalExpression	"set ? b -> hw ? qnxr_set_hwbp ( desc , b -> addr , """" ) : qnxr_set_bp ( desc , b -> addr , """" ) : b -> hw ? qnxr_remove_hwbp ( desc , b -> addr ) : qnxr_remove_bp ( desc , b -> addr )"		1224884	1					
ANR	1224902	Condition	set		1224884	0					
ANR	1224903	Identifier	set		1224884	0					
ANR	1224904	ConditionalExpression	"b -> hw ? qnxr_set_hwbp ( desc , b -> addr , """" ) : qnxr_set_bp ( desc , b -> addr , """" )"		1224884	1					
ANR	1224905	Condition	b -> hw		1224884	0					
ANR	1224906	PtrMemberAccess	b -> hw		1224884	0					
ANR	1224907	Identifier	b		1224884	0					
ANR	1224908	Identifier	hw		1224884	1					
ANR	1224909	CallExpression	"qnxr_set_hwbp ( desc , b -> addr , """" )"		1224884	1					
ANR	1224910	Callee	qnxr_set_hwbp		1224884	0					
ANR	1224911	Identifier	qnxr_set_hwbp		1224884	0					
ANR	1224912	ArgumentList	desc		1224884	1					
ANR	1224913	Argument	desc		1224884	0					
ANR	1224914	Identifier	desc		1224884	0					
ANR	1224915	Argument	b -> addr		1224884	1					
ANR	1224916	PtrMemberAccess	b -> addr		1224884	0					
ANR	1224917	Identifier	b		1224884	0					
ANR	1224918	Identifier	addr		1224884	1					
ANR	1224919	Argument	""""""		1224884	2					
ANR	1224920	PrimaryExpression	""""""		1224884	0					
ANR	1224921	CallExpression	"qnxr_set_bp ( desc , b -> addr , """" )"		1224884	2					
ANR	1224922	Callee	qnxr_set_bp		1224884	0					
ANR	1224923	Identifier	qnxr_set_bp		1224884	0					
ANR	1224924	ArgumentList	desc		1224884	1					
ANR	1224925	Argument	desc		1224884	0					
ANR	1224926	Identifier	desc		1224884	0					
ANR	1224927	Argument	b -> addr		1224884	1					
ANR	1224928	PtrMemberAccess	b -> addr		1224884	0					
ANR	1224929	Identifier	b		1224884	0					
ANR	1224930	Identifier	addr		1224884	1					
ANR	1224931	Argument	""""""		1224884	2					
ANR	1224932	PrimaryExpression	""""""		1224884	0					
ANR	1224933	ConditionalExpression	"b -> hw ? qnxr_remove_hwbp ( desc , b -> addr ) : qnxr_remove_bp ( desc , b -> addr )"		1224884	2					
ANR	1224934	Condition	b -> hw		1224884	0					
ANR	1224935	PtrMemberAccess	b -> hw		1224884	0					
ANR	1224936	Identifier	b		1224884	0					
ANR	1224937	Identifier	hw		1224884	1					
ANR	1224938	CallExpression	"qnxr_remove_hwbp ( desc , b -> addr )"		1224884	1					
ANR	1224939	Callee	qnxr_remove_hwbp		1224884	0					
ANR	1224940	Identifier	qnxr_remove_hwbp		1224884	0					
ANR	1224941	ArgumentList	desc		1224884	1					
ANR	1224942	Argument	desc		1224884	0					
ANR	1224943	Identifier	desc		1224884	0					
ANR	1224944	Argument	b -> addr		1224884	1					
ANR	1224945	PtrMemberAccess	b -> addr		1224884	0					
ANR	1224946	Identifier	b		1224884	0					
ANR	1224947	Identifier	addr		1224884	1					
ANR	1224948	CallExpression	"qnxr_remove_bp ( desc , b -> addr )"		1224884	2					
ANR	1224949	Callee	qnxr_remove_bp		1224884	0					
ANR	1224950	Identifier	qnxr_remove_bp		1224884	0					
ANR	1224951	ArgumentList	desc		1224884	1					
ANR	1224952	Argument	desc		1224884	0					
ANR	1224953	Identifier	desc		1224884	0					
ANR	1224954	Argument	b -> addr		1224884	1					
ANR	1224955	PtrMemberAccess	b -> addr		1224884	0					
ANR	1224956	Identifier	b		1224884	0					
ANR	1224957	Identifier	addr		1224884	1					
ANR	1224958	ReturnStatement	return ! ret ;	340:1:8233:8244	1224884	2	True				
ANR	1224959	UnaryOperationExpression	! ret		1224884	0					
ANR	1224960	UnaryOperator	!		1224884	0					
ANR	1224961	Identifier	ret		1224884	1					
ANR	1224962	ReturnType	static int		1224884	1					
ANR	1224963	Identifier	r_debug_qnx_breakpoint		1224884	2					
ANR	1224964	ParameterList	"RBreakpoint * bp , RBreakpointItem * b , bool set"		1224884	3					
ANR	1224965	Parameter	RBreakpoint * bp	329:35:7967:7981	1224884	0	True				
ANR	1224966	ParameterType	RBreakpoint *		1224884	0					
ANR	1224967	Identifier	bp		1224884	1					
ANR	1224968	Parameter	RBreakpointItem * b	329:52:7984:8001	1224884	1	True				
ANR	1224969	ParameterType	RBreakpointItem *		1224884	0					
ANR	1224970	Identifier	b		1224884	1					
ANR	1224971	Parameter	bool set	329:72:8004:8011	1224884	2	True				
ANR	1224972	ParameterType	bool		1224884	0					
ANR	1224973	Identifier	set		1224884	1					
ANR	1224974	CFGEntryNode	ENTRY		1224884		True				
ANR	1224975	CFGExitNode	EXIT		1224884		True				
ANR	1224976	Symbol	ret		1224884						
ANR	1224977	Symbol	qnxr_remove_bp		1224884						
ANR	1224978	Symbol	b		1224884						
ANR	1224979	Symbol	set		1224884						
ANR	1224980	Symbol	false		1224884						
ANR	1224981	Symbol	* b		1224884						
ANR	1224982	Symbol	bp		1224884						
ANR	1224983	Symbol	b -> addr		1224884						
ANR	1224984	Symbol	qnxr_set_hwbp		1224884						
ANR	1224985	Symbol	qnxr_remove_hwbp		1224884						
ANR	1224986	Symbol	b -> hw		1224884						
ANR	1224987	Symbol	qnxr_set_bp		1224884						
ANR	1224988	Symbol	desc		1224884						
ANR	1224989	DeclStmt									
ANR	1224990	Decl							RDebugPlugin	RDebugPlugin	r_debug_plugin_qnx
ANR	1224991	DeclStmt									
ANR	1224992	Decl							R_API RLibStruct	R_API RLibStruct	radare_plugin
