command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1198526	File	data/converged/CVE-2019-16718~_radare2/debruijn.c								
ANR	1198527	DeclStmt									
ANR	1198528	Decl							const char	const char *	debruijn_charset
ANR	1198529	Function	de_bruijn_seq	14:0:555:1543							
ANR	1198530	FunctionDef	"de_bruijn_seq (int prenecklace_len_t , int lyndon_prefix_len_p , int order , int maxlen , int size , int * prenecklace_a , char * sequence , const char * charset)"		1198529	0					
ANR	1198531	CompoundStatement		15:81:721:1543	1198529	0					
ANR	1198532	IdentifierDeclStatement	int j ;	16:1:724:729	1198529	0	True				
ANR	1198533	IdentifierDecl	j		1198529	0					
ANR	1198534	IdentifierDeclType	int		1198529	0					
ANR	1198535	Identifier	j		1198529	1					
ANR	1198536	IfStatement	if ( ! charset || ! sequence || strlen ( sequence ) == maxlen )		1198529	1					
ANR	1198537	Condition	! charset || ! sequence || strlen ( sequence ) == maxlen	17:5:736:787	1198529	0	True				
ANR	1198538	OrExpression	! charset || ! sequence || strlen ( sequence ) == maxlen		1198529	0		||			
ANR	1198539	UnaryOperationExpression	! charset		1198529	0					
ANR	1198540	UnaryOperator	!		1198529	0					
ANR	1198541	Identifier	charset		1198529	1					
ANR	1198542	OrExpression	! sequence || strlen ( sequence ) == maxlen		1198529	1		||			
ANR	1198543	UnaryOperationExpression	! sequence		1198529	0					
ANR	1198544	UnaryOperator	!		1198529	0					
ANR	1198545	Identifier	sequence		1198529	1					
ANR	1198546	EqualityExpression	strlen ( sequence ) == maxlen		1198529	1		==			
ANR	1198547	CallExpression	strlen ( sequence )		1198529	0					
ANR	1198548	Callee	strlen		1198529	0					
ANR	1198549	Identifier	strlen		1198529	0					
ANR	1198550	ArgumentList	sequence		1198529	1					
ANR	1198551	Argument	sequence		1198529	0					
ANR	1198552	Identifier	sequence		1198529	0					
ANR	1198553	Identifier	maxlen		1198529	1					
ANR	1198554	CompoundStatement		3:59:68:68	1198529	1					
ANR	1198555	ReturnStatement	return ;	18:2:794:800	1198529	0	True				
ANR	1198556	IfStatement	if ( prenecklace_len_t > order )		1198529	2					
ANR	1198557	Condition	prenecklace_len_t > order	20:5:810:834	1198529	0	True				
ANR	1198558	RelationalExpression	prenecklace_len_t > order		1198529	0		>			
ANR	1198559	Identifier	prenecklace_len_t		1198529	0					
ANR	1198560	Identifier	order		1198529	1					
ANR	1198561	CompoundStatement		6:32:115:115	1198529	1					
ANR	1198562	IfStatement	if ( order % lyndon_prefix_len_p == 0 )		1198529	0					
ANR	1198563	Condition	order % lyndon_prefix_len_p == 0	21:6:845:876	1198529	0	True				
ANR	1198564	EqualityExpression	order % lyndon_prefix_len_p == 0		1198529	0		==			
ANR	1198565	MultiplicativeExpression	order % lyndon_prefix_len_p		1198529	0		%			
ANR	1198566	Identifier	order		1198529	0					
ANR	1198567	Identifier	lyndon_prefix_len_p		1198529	1					
ANR	1198568	PrimaryExpression	0		1198529	1					
ANR	1198569	CompoundStatement		7:40:157:157	1198529	1					
ANR	1198570	ForStatement	for ( j = 1 ; j <= lyndon_prefix_len_p ; ++ j )		1198529	0					
ANR	1198571	ForInit	j = 1 ;	22:8:889:894	1198529	0	True				
ANR	1198572	AssignmentExpression	j = 1		1198529	0		=			
ANR	1198573	Identifier	j		1198529	0					
ANR	1198574	PrimaryExpression	1		1198529	1					
ANR	1198575	Condition	j <= lyndon_prefix_len_p	22:15:896:919	1198529	1	True				
ANR	1198576	RelationalExpression	j <= lyndon_prefix_len_p		1198529	0		<=			
ANR	1198577	Identifier	j		1198529	0					
ANR	1198578	Identifier	lyndon_prefix_len_p		1198529	1					
ANR	1198579	UnaryExpression	++ j	22:41:922:924	1198529	2	True				
ANR	1198580	IncDec	++		1198529	0					
ANR	1198581	Identifier	j		1198529	1					
ANR	1198582	CompoundStatement		8:46:205:205	1198529	3					
ANR	1198583	ExpressionStatement	sequence [ strlen ( sequence ) ] = charset [ prenecklace_a [ j ] ]	23:4:933:987	1198529	0	True				
ANR	1198584	AssignmentExpression	sequence [ strlen ( sequence ) ] = charset [ prenecklace_a [ j ] ]		1198529	0		=			
ANR	1198585	ArrayIndexing	sequence [ strlen ( sequence ) ]		1198529	0					
ANR	1198586	Identifier	sequence		1198529	0					
ANR	1198587	CallExpression	strlen ( sequence )		1198529	1					
ANR	1198588	Callee	strlen		1198529	0					
ANR	1198589	Identifier	strlen		1198529	0					
ANR	1198590	ArgumentList	sequence		1198529	1					
ANR	1198591	Argument	sequence		1198529	0					
ANR	1198592	Identifier	sequence		1198529	0					
ANR	1198593	ArrayIndexing	charset [ prenecklace_a [ j ] ]		1198529	1					
ANR	1198594	Identifier	charset		1198529	0					
ANR	1198595	ArrayIndexing	prenecklace_a [ j ]		1198529	1					
ANR	1198596	Identifier	prenecklace_a		1198529	0					
ANR	1198597	Identifier	j		1198529	1					
ANR	1198598	IfStatement	if ( strlen ( sequence ) == maxlen )		1198529	1					
ANR	1198599	Condition	strlen ( sequence ) == maxlen	24:8:997:1023	1198529	0	True				
ANR	1198600	EqualityExpression	strlen ( sequence ) == maxlen		1198529	0		==			
ANR	1198601	CallExpression	strlen ( sequence )		1198529	0					
ANR	1198602	Callee	strlen		1198529	0					
ANR	1198603	Identifier	strlen		1198529	0					
ANR	1198604	ArgumentList	sequence		1198529	1					
ANR	1198605	Argument	sequence		1198529	0					
ANR	1198606	Identifier	sequence		1198529	0					
ANR	1198607	Identifier	maxlen		1198529	1					
ANR	1198608	CompoundStatement		10:37:304:304	1198529	1					
ANR	1198609	ReturnStatement	return ;	25:5:1033:1039	1198529	0	True				
ANR	1198610	ElseStatement	else		1198529	0					
ANR	1198611	CompoundStatement		15:8:342:342	1198529	0					
ANR	1198612	ExpressionStatement	prenecklace_a [ prenecklace_len_t ] = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]	30:2:1068:1160	1198529	0	True				
ANR	1198613	AssignmentExpression	prenecklace_a [ prenecklace_len_t ] = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]		1198529	0		=			
ANR	1198614	ArrayIndexing	prenecklace_a [ prenecklace_len_t ]		1198529	0					
ANR	1198615	Identifier	prenecklace_a		1198529	0					
ANR	1198616	Identifier	prenecklace_len_t		1198529	1					
ANR	1198617	ArrayIndexing	prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]		1198529	1					
ANR	1198618	Identifier	prenecklace_a		1198529	0					
ANR	1198619	AdditiveExpression	prenecklace_len_t - lyndon_prefix_len_p		1198529	1		-			
ANR	1198620	Identifier	prenecklace_len_t		1198529	0					
ANR	1198621	Identifier	lyndon_prefix_len_p		1198529	1					
ANR	1198622	ExpressionStatement	"de_bruijn_seq ( prenecklace_len_t + 1 , lyndon_prefix_len_p , order , maxlen , size , prenecklace_a , sequence , charset )"	32:2:1164:1280	1198529	1	True				
ANR	1198623	CallExpression	"de_bruijn_seq ( prenecklace_len_t + 1 , lyndon_prefix_len_p , order , maxlen , size , prenecklace_a , sequence , charset )"		1198529	0					
ANR	1198624	Callee	de_bruijn_seq		1198529	0					
ANR	1198625	Identifier	de_bruijn_seq		1198529	0					
ANR	1198626	ArgumentList	prenecklace_len_t + 1		1198529	1					
ANR	1198627	Argument	prenecklace_len_t + 1		1198529	0					
ANR	1198628	AdditiveExpression	prenecklace_len_t + 1		1198529	0		+			
ANR	1198629	Identifier	prenecklace_len_t		1198529	0					
ANR	1198630	PrimaryExpression	1		1198529	1					
ANR	1198631	Argument	lyndon_prefix_len_p		1198529	1					
ANR	1198632	Identifier	lyndon_prefix_len_p		1198529	0					
ANR	1198633	Argument	order		1198529	2					
ANR	1198634	Identifier	order		1198529	0					
ANR	1198635	Argument	maxlen		1198529	3					
ANR	1198636	Identifier	maxlen		1198529	0					
ANR	1198637	Argument	size		1198529	4					
ANR	1198638	Identifier	size		1198529	0					
ANR	1198639	Argument	prenecklace_a		1198529	5					
ANR	1198640	Identifier	prenecklace_a		1198529	0					
ANR	1198641	Argument	sequence		1198529	6					
ANR	1198642	Identifier	sequence		1198529	0					
ANR	1198643	Argument	charset		1198529	7					
ANR	1198644	Identifier	charset		1198529	0					
ANR	1198645	ForStatement	for ( j = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1 ; j < size ; ++ j )		1198529	2					
ANR	1198646	ForInit	j = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1 ;	34:7:1289:1351	1198529	0	True				
ANR	1198647	AssignmentExpression	j = prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1		1198529	0		=			
ANR	1198648	Identifier	j		1198529	0					
ANR	1198649	AdditiveExpression	prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ] + 1		1198529	1		+			
ANR	1198650	ArrayIndexing	prenecklace_a [ prenecklace_len_t - lyndon_prefix_len_p ]		1198529	0					
ANR	1198651	Identifier	prenecklace_a		1198529	0					
ANR	1198652	AdditiveExpression	prenecklace_len_t - lyndon_prefix_len_p		1198529	1		-			
ANR	1198653	Identifier	prenecklace_len_t		1198529	0					
ANR	1198654	Identifier	lyndon_prefix_len_p		1198529	1					
ANR	1198655	PrimaryExpression	1		1198529	1					
ANR	1198656	Condition	j < size	35:4:1357:1364	1198529	1	True				
ANR	1198657	RelationalExpression	j < size		1198529	0		<			
ANR	1198658	Identifier	j		1198529	0					
ANR	1198659	Identifier	size		1198529	1					
ANR	1198660	UnaryExpression	++ j	35:14:1367:1369	1198529	2	True				
ANR	1198661	IncDec	++		1198529	0					
ANR	1198662	Identifier	j		1198529	1					
ANR	1198663	CompoundStatement		21:19:650:650	1198529	3					
ANR	1198664	ExpressionStatement	prenecklace_a [ prenecklace_len_t ] = j	36:3:1377:1413	1198529	0	True				
ANR	1198665	AssignmentExpression	prenecklace_a [ prenecklace_len_t ] = j		1198529	0		=			
ANR	1198666	ArrayIndexing	prenecklace_a [ prenecklace_len_t ]		1198529	0					
ANR	1198667	Identifier	prenecklace_a		1198529	0					
ANR	1198668	Identifier	prenecklace_len_t		1198529	1					
ANR	1198669	Identifier	j		1198529	1					
ANR	1198670	ExpressionStatement	"de_bruijn_seq ( prenecklace_len_t + 1 , prenecklace_len_t , order , maxlen , size , prenecklace_a , sequence , charset )"	37:3:1418:1534	1198529	1	True				
ANR	1198671	CallExpression	"de_bruijn_seq ( prenecklace_len_t + 1 , prenecklace_len_t , order , maxlen , size , prenecklace_a , sequence , charset )"		1198529	0					
ANR	1198672	Callee	de_bruijn_seq		1198529	0					
ANR	1198673	Identifier	de_bruijn_seq		1198529	0					
ANR	1198674	ArgumentList	prenecklace_len_t + 1		1198529	1					
ANR	1198675	Argument	prenecklace_len_t + 1		1198529	0					
ANR	1198676	AdditiveExpression	prenecklace_len_t + 1		1198529	0		+			
ANR	1198677	Identifier	prenecklace_len_t		1198529	0					
ANR	1198678	PrimaryExpression	1		1198529	1					
ANR	1198679	Argument	prenecklace_len_t		1198529	1					
ANR	1198680	Identifier	prenecklace_len_t		1198529	0					
ANR	1198681	Argument	order		1198529	2					
ANR	1198682	Identifier	order		1198529	0					
ANR	1198683	Argument	maxlen		1198529	3					
ANR	1198684	Identifier	maxlen		1198529	0					
ANR	1198685	Argument	size		1198529	4					
ANR	1198686	Identifier	size		1198529	0					
ANR	1198687	Argument	prenecklace_a		1198529	5					
ANR	1198688	Identifier	prenecklace_a		1198529	0					
ANR	1198689	Argument	sequence		1198529	6					
ANR	1198690	Identifier	sequence		1198529	0					
ANR	1198691	Argument	charset		1198529	7					
ANR	1198692	Identifier	charset		1198529	0					
ANR	1198693	ReturnType	static void		1198529	1					
ANR	1198694	Identifier	de_bruijn_seq		1198529	2					
ANR	1198695	ParameterList	"int prenecklace_len_t , int lyndon_prefix_len_p , int order , int maxlen , int size , int * prenecklace_a , char * sequence , const char * charset"		1198529	3					
ANR	1198696	Parameter	int prenecklace_len_t	14:26:581:601	1198529	0	True				
ANR	1198697	ParameterType	int		1198529	0					
ANR	1198698	Identifier	prenecklace_len_t		1198529	1					
ANR	1198699	Parameter	int lyndon_prefix_len_p	14:49:604:626	1198529	1	True				
ANR	1198700	ParameterType	int		1198529	0					
ANR	1198701	Identifier	lyndon_prefix_len_p		1198529	1					
ANR	1198702	Parameter	int order	14:74:629:637	1198529	2	True				
ANR	1198703	ParameterType	int		1198529	0					
ANR	1198704	Identifier	order		1198529	1					
ANR	1198705	Parameter	int maxlen	15:2:642:651	1198529	3	True				
ANR	1198706	ParameterType	int		1198529	0					
ANR	1198707	Identifier	maxlen		1198529	1					
ANR	1198708	Parameter	int size	15:14:654:661	1198529	4	True				
ANR	1198709	ParameterType	int		1198529	0					
ANR	1198710	Identifier	size		1198529	1					
ANR	1198711	Parameter	int * prenecklace_a	15:24:664:681	1198529	5	True				
ANR	1198712	ParameterType	int *		1198529	0					
ANR	1198713	Identifier	prenecklace_a		1198529	1					
ANR	1198714	Parameter	char * sequence	15:44:684:697	1198529	6	True				
ANR	1198715	ParameterType	char *		1198529	0					
ANR	1198716	Identifier	sequence		1198529	1					
ANR	1198717	Parameter	const char * charset	15:60:700:718	1198529	7	True				
ANR	1198718	ParameterType	const char *		1198529	0					
ANR	1198719	Identifier	charset		1198529	1					
ANR	1198720	CFGEntryNode	ENTRY		1198529		True				
ANR	1198721	CFGExitNode	EXIT		1198529		True				
ANR	1198722	Symbol	charset		1198529						
ANR	1198723	Symbol	* * j		1198529						
ANR	1198724	Symbol	* lyndon_prefix_len_p		1198529						
ANR	1198725	Symbol	* * prenecklace_a		1198529						
ANR	1198726	Symbol	j		1198529						
ANR	1198727	Symbol	* prenecklace_a		1198529						
ANR	1198728	Symbol	prenecklace_a		1198529						
ANR	1198729	Symbol	* prenecklace_len_t		1198529						
ANR	1198730	Symbol	sequence		1198529						
ANR	1198731	Symbol	strlen		1198529						
ANR	1198732	Symbol	prenecklace_len_t		1198529						
ANR	1198733	Symbol	size		1198529						
ANR	1198734	Symbol	* j		1198529						
ANR	1198735	Symbol	* strlen		1198529						
ANR	1198736	Symbol	lyndon_prefix_len_p		1198529						
ANR	1198737	Symbol	* charset		1198529						
ANR	1198738	Symbol	* sequence		1198529						
ANR	1198739	Symbol	maxlen		1198529						
ANR	1198740	Symbol	order		1198529						
ANR	1198741	Function	de_bruijn	46:0:1682:2149							
ANR	1198742	FunctionDef	"de_bruijn (const char * charset , int order , int maxlen)"		1198741	0					
ANR	1198743	CompoundStatement		46:67:1749:2149	1198741	0					
ANR	1198744	IfStatement	if ( ! charset )		1198741	0					
ANR	1198745	Condition	! charset	47:5:1756:1763	1198741	0	True				
ANR	1198746	UnaryOperationExpression	! charset		1198741	0					
ANR	1198747	UnaryOperator	!		1198741	0					
ANR	1198748	Identifier	charset		1198741	1					
ANR	1198749	CompoundStatement		2:15:16:16	1198741	1					
ANR	1198750	ReturnStatement	return NULL ;	48:2:1770:1781	1198741	0	True				
ANR	1198751	Identifier	NULL		1198741	0					
ANR	1198752	IdentifierDeclStatement	int size = strlen ( charset ) ;	50:1:1787:1814	1198741	1	True				
ANR	1198753	IdentifierDecl	size = strlen ( charset )		1198741	0					
ANR	1198754	IdentifierDeclType	int		1198741	0					
ANR	1198755	Identifier	size		1198741	1					
ANR	1198756	AssignmentExpression	size = strlen ( charset )		1198741	2		=			
ANR	1198757	Identifier	size		1198741	0					
ANR	1198758	CallExpression	strlen ( charset )		1198741	1					
ANR	1198759	Callee	strlen		1198741	0					
ANR	1198760	Identifier	strlen		1198741	0					
ANR	1198761	ArgumentList	charset		1198741	1					
ANR	1198762	Argument	charset		1198741	0					
ANR	1198763	Identifier	charset		1198741	0					
ANR	1198764	IdentifierDeclStatement	"int * prenecklace_a = calloc ( size * order , sizeof ( int ) ) ;"	51:1:1817:1873	1198741	2	True				
ANR	1198765	IdentifierDecl	"* prenecklace_a = calloc ( size * order , sizeof ( int ) )"		1198741	0					
ANR	1198766	IdentifierDeclType	int *		1198741	0					
ANR	1198767	Identifier	prenecklace_a		1198741	1					
ANR	1198768	AssignmentExpression	"* prenecklace_a = calloc ( size * order , sizeof ( int ) )"		1198741	2		=			
ANR	1198769	Identifier	prenecklace_a		1198741	0					
ANR	1198770	CallExpression	"calloc ( size * order , sizeof ( int ) )"		1198741	1					
ANR	1198771	Callee	calloc		1198741	0					
ANR	1198772	Identifier	calloc		1198741	0					
ANR	1198773	ArgumentList	size * order		1198741	1					
ANR	1198774	Argument	size * order		1198741	0					
ANR	1198775	MultiplicativeExpression	size * order		1198741	0		*			
ANR	1198776	Identifier	size		1198741	0					
ANR	1198777	Identifier	order		1198741	1					
ANR	1198778	Argument	sizeof ( int )		1198741	1					
ANR	1198779	SizeofExpression	sizeof ( int )		1198741	0					
ANR	1198780	Sizeof	sizeof		1198741	0					
ANR	1198781	SizeofOperand	int		1198741	1					
ANR	1198782	IfStatement	if ( ! prenecklace_a )		1198741	3					
ANR	1198783	Condition	! prenecklace_a	52:5:1880:1893	1198741	0	True				
ANR	1198784	UnaryOperationExpression	! prenecklace_a		1198741	0					
ANR	1198785	UnaryOperator	!		1198741	0					
ANR	1198786	Identifier	prenecklace_a		1198741	1					
ANR	1198787	CompoundStatement		7:21:146:146	1198741	1					
ANR	1198788	ReturnStatement	return NULL ;	53:2:1900:1911	1198741	0	True				
ANR	1198789	Identifier	NULL		1198741	0					
ANR	1198790	IdentifierDeclStatement	"char * sequence = calloc ( maxlen + 1 , sizeof ( char ) ) ;"	55:1:1917:1968	1198741	4	True				
ANR	1198791	IdentifierDecl	"* sequence = calloc ( maxlen + 1 , sizeof ( char ) )"		1198741	0					
ANR	1198792	IdentifierDeclType	char *		1198741	0					
ANR	1198793	Identifier	sequence		1198741	1					
ANR	1198794	AssignmentExpression	"* sequence = calloc ( maxlen + 1 , sizeof ( char ) )"		1198741	2		=			
ANR	1198795	Identifier	sequence		1198741	0					
ANR	1198796	CallExpression	"calloc ( maxlen + 1 , sizeof ( char ) )"		1198741	1					
ANR	1198797	Callee	calloc		1198741	0					
ANR	1198798	Identifier	calloc		1198741	0					
ANR	1198799	ArgumentList	maxlen + 1		1198741	1					
ANR	1198800	Argument	maxlen + 1		1198741	0					
ANR	1198801	AdditiveExpression	maxlen + 1		1198741	0		+			
ANR	1198802	Identifier	maxlen		1198741	0					
ANR	1198803	PrimaryExpression	1		1198741	1					
ANR	1198804	Argument	sizeof ( char )		1198741	1					
ANR	1198805	SizeofExpression	sizeof ( char )		1198741	0					
ANR	1198806	Sizeof	sizeof		1198741	0					
ANR	1198807	SizeofOperand	char		1198741	1					
ANR	1198808	IfStatement	if ( ! sequence )		1198741	5					
ANR	1198809	Condition	! sequence	56:5:1975:1983	1198741	0	True				
ANR	1198810	UnaryOperationExpression	! sequence		1198741	0					
ANR	1198811	UnaryOperator	!		1198741	0					
ANR	1198812	Identifier	sequence		1198741	1					
ANR	1198813	CompoundStatement		11:16:236:236	1198741	1					
ANR	1198814	ExpressionStatement	free ( prenecklace_a )	57:2:1990:2010	1198741	0	True				
ANR	1198815	CallExpression	free ( prenecklace_a )		1198741	0					
ANR	1198816	Callee	free		1198741	0					
ANR	1198817	Identifier	free		1198741	0					
ANR	1198818	ArgumentList	prenecklace_a		1198741	1					
ANR	1198819	Argument	prenecklace_a		1198741	0					
ANR	1198820	Identifier	prenecklace_a		1198741	0					
ANR	1198821	ReturnStatement	return NULL ;	58:2:2014:2025	1198741	1	True				
ANR	1198822	Identifier	NULL		1198741	0					
ANR	1198823	ExpressionStatement	"de_bruijn_seq ( 1 , 1 , order , maxlen , size , prenecklace_a , sequence , charset )"	60:1:2031:2106	1198741	6	True				
ANR	1198824	CallExpression	"de_bruijn_seq ( 1 , 1 , order , maxlen , size , prenecklace_a , sequence , charset )"		1198741	0					
ANR	1198825	Callee	de_bruijn_seq		1198741	0					
ANR	1198826	Identifier	de_bruijn_seq		1198741	0					
ANR	1198827	ArgumentList	1		1198741	1					
ANR	1198828	Argument	1		1198741	0					
ANR	1198829	PrimaryExpression	1		1198741	0					
ANR	1198830	Argument	1		1198741	1					
ANR	1198831	PrimaryExpression	1		1198741	0					
ANR	1198832	Argument	order		1198741	2					
ANR	1198833	Identifier	order		1198741	0					
ANR	1198834	Argument	maxlen		1198741	3					
ANR	1198835	Identifier	maxlen		1198741	0					
ANR	1198836	Argument	size		1198741	4					
ANR	1198837	Identifier	size		1198741	0					
ANR	1198838	Argument	prenecklace_a		1198741	5					
ANR	1198839	Identifier	prenecklace_a		1198741	0					
ANR	1198840	Argument	sequence		1198741	6					
ANR	1198841	Identifier	sequence		1198741	0					
ANR	1198842	Argument	charset		1198741	7					
ANR	1198843	Identifier	charset		1198741	0					
ANR	1198844	ExpressionStatement	free ( prenecklace_a )	61:1:2109:2129	1198741	7	True				
ANR	1198845	CallExpression	free ( prenecklace_a )		1198741	0					
ANR	1198846	Callee	free		1198741	0					
ANR	1198847	Identifier	free		1198741	0					
ANR	1198848	ArgumentList	prenecklace_a		1198741	1					
ANR	1198849	Argument	prenecklace_a		1198741	0					
ANR	1198850	Identifier	prenecklace_a		1198741	0					
ANR	1198851	ReturnStatement	return sequence ;	62:1:2132:2147	1198741	8	True				
ANR	1198852	Identifier	sequence		1198741	0					
ANR	1198853	ReturnType	static char *		1198741	1					
ANR	1198854	Identifier	de_bruijn		1198741	2					
ANR	1198855	ParameterList	"const char * charset , int order , int maxlen"		1198741	3					
ANR	1198856	Parameter	const char * charset	46:23:1705:1723	1198741	0	True				
ANR	1198857	ParameterType	const char *		1198741	0					
ANR	1198858	Identifier	charset		1198741	1					
ANR	1198859	Parameter	int order	46:44:1726:1734	1198741	1	True				
ANR	1198860	ParameterType	int		1198741	0					
ANR	1198861	Identifier	order		1198741	1					
ANR	1198862	Parameter	int maxlen	46:55:1737:1746	1198741	2	True				
ANR	1198863	ParameterType	int		1198741	0					
ANR	1198864	Identifier	maxlen		1198741	1					
ANR	1198865	CFGEntryNode	ENTRY		1198741		True				
ANR	1198866	CFGExitNode	EXIT		1198741		True				
ANR	1198867	Symbol	charset		1198741						
ANR	1198868	Symbol	strlen		1198741						
ANR	1198869	Symbol	sequence		1198741						
ANR	1198870	Symbol	NULL		1198741						
ANR	1198871	Symbol	size		1198741						
ANR	1198872	Symbol	calloc		1198741						
ANR	1198873	Symbol	prenecklace_a		1198741						
ANR	1198874	Symbol	maxlen		1198741						
ANR	1198875	Symbol	order		1198741						
ANR	1198876	Function	r_debruijn_pattern	69:0:2354:3182							
ANR	1198877	FunctionDef	"r_debruijn_pattern (int size , int start , const char * charset)"		1198876	0					
ANR	1198878	CompoundStatement		69:73:2427:3182	1198876	0					
ANR	1198879	IdentifierDeclStatement	"char * pat , * pat2 ;"	70:1:2430:2446	1198876	0	True				
ANR	1198880	IdentifierDecl	* pat		1198876	0					
ANR	1198881	IdentifierDeclType	char *		1198876	0					
ANR	1198882	Identifier	pat		1198876	1					
ANR	1198883	IdentifierDecl	* pat2		1198876	1					
ANR	1198884	IdentifierDeclType	char *		1198876	0					
ANR	1198885	Identifier	pat2		1198876	1					
ANR	1198886	IdentifierDeclStatement	ut64 len ;	71:1:2449:2457	1198876	1	True				
ANR	1198887	IdentifierDecl	len		1198876	0					
ANR	1198888	IdentifierDeclType	ut64		1198876	0					
ANR	1198889	Identifier	len		1198876	1					
ANR	1198890	IfStatement	if ( ! charset )		1198876	2					
ANR	1198891	Condition	! charset	72:5:2464:2471	1198876	0	True				
ANR	1198892	UnaryOperationExpression	! charset		1198876	0					
ANR	1198893	UnaryOperator	!		1198876	0					
ANR	1198894	Identifier	charset		1198876	1					
ANR	1198895	CompoundStatement		4:15:46:46	1198876	1					
ANR	1198896	ExpressionStatement	charset = debruijn_charset	73:2:2478:2504	1198876	0	True				
ANR	1198897	AssignmentExpression	charset = debruijn_charset		1198876	0		=			
ANR	1198898	Identifier	charset		1198876	0					
ANR	1198899	Identifier	debruijn_charset		1198876	1					
ANR	1198900	IfStatement	if ( start >= size )		1198876	3					
ANR	1198901	Condition	start >= size	75:5:2514:2526	1198876	0	True				
ANR	1198902	RelationalExpression	start >= size		1198876	0		>=			
ANR	1198903	Identifier	start		1198876	0					
ANR	1198904	Identifier	size		1198876	1					
ANR	1198905	CompoundStatement		7:20:101:101	1198876	1					
ANR	1198906	ReturnStatement	return ( char * ) NULL ;	76:2:2533:2551	1198876	0	True				
ANR	1198907	CastExpression	( char * ) NULL		1198876	0					
ANR	1198908	CastTarget	char *		1198876	0					
ANR	1198909	Identifier	NULL		1198876	1					
ANR	1198910	ExpressionStatement	"pat = de_bruijn ( charset , 3 , size )"	78:1:2557:2614	1198876	4	True				
ANR	1198911	AssignmentExpression	"pat = de_bruijn ( charset , 3 , size )"		1198876	0		=			
ANR	1198912	Identifier	pat		1198876	0					
ANR	1198913	CallExpression	"de_bruijn ( charset , 3 , size )"		1198876	1					
ANR	1198914	Callee	de_bruijn		1198876	0					
ANR	1198915	Identifier	de_bruijn		1198876	0					
ANR	1198916	ArgumentList	charset		1198876	1					
ANR	1198917	Argument	charset		1198876	0					
ANR	1198918	Identifier	charset		1198876	0					
ANR	1198919	Argument	3		1198876	1					
ANR	1198920	PrimaryExpression	3		1198876	0					
ANR	1198921	Argument	size		1198876	2					
ANR	1198922	Identifier	size		1198876	0					
ANR	1198923	IfStatement	if ( ! pat )		1198876	5					
ANR	1198924	Condition	! pat	79:5:2621:2624	1198876	0	True				
ANR	1198925	UnaryOperationExpression	! pat		1198876	0					
ANR	1198926	UnaryOperator	!		1198876	0					
ANR	1198927	Identifier	pat		1198876	1					
ANR	1198928	CompoundStatement		11:11:199:199	1198876	1					
ANR	1198929	ReturnStatement	return NULL ;	80:2:2631:2642	1198876	0	True				
ANR	1198930	Identifier	NULL		1198876	0					
ANR	1198931	IfStatement	if ( start == 0 )		1198876	6					
ANR	1198932	Condition	start == 0	82:5:2652:2661	1198876	0	True				
ANR	1198933	EqualityExpression	start == 0		1198876	0		==			
ANR	1198934	Identifier	start		1198876	0					
ANR	1198935	PrimaryExpression	0		1198876	1					
ANR	1198936	CompoundStatement		14:17:236:236	1198876	1					
ANR	1198937	ExpressionStatement	len = strlen ( pat )	83:2:2668:2686	1198876	0	True				
ANR	1198938	AssignmentExpression	len = strlen ( pat )		1198876	0		=			
ANR	1198939	Identifier	len		1198876	0					
ANR	1198940	CallExpression	strlen ( pat )		1198876	1					
ANR	1198941	Callee	strlen		1198876	0					
ANR	1198942	Identifier	strlen		1198876	0					
ANR	1198943	ArgumentList	pat		1198876	1					
ANR	1198944	Argument	pat		1198876	0					
ANR	1198945	Identifier	pat		1198876	0					
ANR	1198946	IfStatement	if ( size != len )		1198876	1					
ANR	1198947	Condition	size != len	84:6:2694:2704	1198876	0	True				
ANR	1198948	EqualityExpression	size != len		1198876	0		!=			
ANR	1198949	Identifier	size		1198876	0					
ANR	1198950	Identifier	len		1198876	1					
ANR	1198951	CompoundStatement		16:19:279:279	1198876	1					
ANR	1198952	Statement	eprintf	85:3:2712:2718	1198876	0	True				
ANR	1198953	Statement	(	85:11:2720:2720	1198876	1	True				
ANR	1198954	Statement	"""warning: requested pattern of length %d, """	85:12:2721:2763	1198876	2	True				
ANR	1198955	Statement	"""generated length %"""	86:5:2770:2789	1198876	3	True				
ANR	1198956	Statement	PFMT64d	86:25:2790:2796	1198876	4	True				
ANR	1198957	Statement	"""\\n"""	86:32:2797:2800	1198876	5	True				
ANR	1198958	Statement	","	86:36:2801:2801	1198876	6	True				
ANR	1198959	Statement	size	86:38:2803:2806	1198876	7	True				
ANR	1198960	Statement	","	86:42:2807:2807	1198876	8	True				
ANR	1198961	Statement	len	86:44:2809:2811	1198876	9	True				
ANR	1198962	Statement	)	86:47:2812:2812	1198876	10	True				
ANR	1198963	ExpressionStatement		86:48:2813:2813	1198876	11	True				
ANR	1198964	ReturnStatement	return pat ;	88:2:2821:2831	1198876	2	True				
ANR	1198965	Identifier	pat		1198876	0					
ANR	1198966	ExpressionStatement	"pat2 = calloc ( ( size - start ) + 1 , sizeof ( char ) )"	90:1:2837:2885	1198876	7	True				
ANR	1198967	AssignmentExpression	"pat2 = calloc ( ( size - start ) + 1 , sizeof ( char ) )"		1198876	0		=			
ANR	1198968	Identifier	pat2		1198876	0					
ANR	1198969	CallExpression	"calloc ( ( size - start ) + 1 , sizeof ( char ) )"		1198876	1					
ANR	1198970	Callee	calloc		1198876	0					
ANR	1198971	Identifier	calloc		1198876	0					
ANR	1198972	ArgumentList	( size - start ) + 1		1198876	1					
ANR	1198973	Argument	( size - start ) + 1		1198876	0					
ANR	1198974	AdditiveExpression	( size - start ) + 1		1198876	0		+			
ANR	1198975	AdditiveExpression	size - start		1198876	0		-			
ANR	1198976	Identifier	size		1198876	0					
ANR	1198977	Identifier	start		1198876	1					
ANR	1198978	PrimaryExpression	1		1198876	1					
ANR	1198979	Argument	sizeof ( char )		1198876	1					
ANR	1198980	SizeofExpression	sizeof ( char )		1198876	0					
ANR	1198981	Sizeof	sizeof		1198876	0					
ANR	1198982	SizeofOperand	char		1198876	1					
ANR	1198983	IfStatement	if ( ! pat2 )		1198876	8					
ANR	1198984	Condition	! pat2	91:5:2892:2896	1198876	0	True				
ANR	1198985	UnaryOperationExpression	! pat2		1198876	0					
ANR	1198986	UnaryOperator	!		1198876	0					
ANR	1198987	Identifier	pat2		1198876	1					
ANR	1198988	CompoundStatement		23:12:471:471	1198876	1					
ANR	1198989	ExpressionStatement	free ( pat )	92:2:2903:2913	1198876	0	True				
ANR	1198990	CallExpression	free ( pat )		1198876	0					
ANR	1198991	Callee	free		1198876	0					
ANR	1198992	Identifier	free		1198876	0					
ANR	1198993	ArgumentList	pat		1198876	1					
ANR	1198994	Argument	pat		1198876	0					
ANR	1198995	Identifier	pat		1198876	0					
ANR	1198996	ReturnStatement	return NULL ;	93:2:2917:2928	1198876	1	True				
ANR	1198997	Identifier	NULL		1198876	0					
ANR	1198998	ExpressionStatement	"strncpy ( pat2 , pat + start , size - start )"	95:1:2934:2975	1198876	9	True				
ANR	1198999	CallExpression	"strncpy ( pat2 , pat + start , size - start )"		1198876	0					
ANR	1199000	Callee	strncpy		1198876	0					
ANR	1199001	Identifier	strncpy		1198876	0					
ANR	1199002	ArgumentList	pat2		1198876	1					
ANR	1199003	Argument	pat2		1198876	0					
ANR	1199004	Identifier	pat2		1198876	0					
ANR	1199005	Argument	pat + start		1198876	1					
ANR	1199006	AdditiveExpression	pat + start		1198876	0		+			
ANR	1199007	Identifier	pat		1198876	0					
ANR	1199008	Identifier	start		1198876	1					
ANR	1199009	Argument	size - start		1198876	2					
ANR	1199010	AdditiveExpression	size - start		1198876	0		-			
ANR	1199011	Identifier	size		1198876	0					
ANR	1199012	Identifier	start		1198876	1					
ANR	1199013	ExpressionStatement	pat2 [ size - start ] = 0	96:1:2978:2998	1198876	10	True				
ANR	1199014	AssignmentExpression	pat2 [ size - start ] = 0		1198876	0		=			
ANR	1199015	ArrayIndexing	pat2 [ size - start ]		1198876	0					
ANR	1199016	Identifier	pat2		1198876	0					
ANR	1199017	AdditiveExpression	size - start		1198876	1		-			
ANR	1199018	Identifier	size		1198876	0					
ANR	1199019	Identifier	start		1198876	1					
ANR	1199020	PrimaryExpression	0		1198876	1					
ANR	1199021	ExpressionStatement	free ( pat )	97:1:3001:3011	1198876	11	True				
ANR	1199022	CallExpression	free ( pat )		1198876	0					
ANR	1199023	Callee	free		1198876	0					
ANR	1199024	Identifier	free		1198876	0					
ANR	1199025	ArgumentList	pat		1198876	1					
ANR	1199026	Argument	pat		1198876	0					
ANR	1199027	Identifier	pat		1198876	0					
ANR	1199028	ExpressionStatement	len = strlen ( pat2 )	98:1:3014:3033	1198876	12	True				
ANR	1199029	AssignmentExpression	len = strlen ( pat2 )		1198876	0		=			
ANR	1199030	Identifier	len		1198876	0					
ANR	1199031	CallExpression	strlen ( pat2 )		1198876	1					
ANR	1199032	Callee	strlen		1198876	0					
ANR	1199033	Identifier	strlen		1198876	0					
ANR	1199034	ArgumentList	pat2		1198876	1					
ANR	1199035	Argument	pat2		1198876	0					
ANR	1199036	Identifier	pat2		1198876	0					
ANR	1199037	IfStatement	if ( size != len )		1198876	13					
ANR	1199038	Condition	size != len	99:5:3040:3050	1198876	0	True				
ANR	1199039	EqualityExpression	size != len		1198876	0		!=			
ANR	1199040	Identifier	size		1198876	0					
ANR	1199041	Identifier	len		1198876	1					
ANR	1199042	CompoundStatement		31:18:625:625	1198876	1					
ANR	1199043	Statement	eprintf	100:2:3057:3063	1198876	0	True				
ANR	1199044	Statement	(	100:10:3065:3065	1198876	1	True				
ANR	1199045	Statement	"""warning: requested pattern of length %d, """	100:11:3066:3108	1198876	2	True				
ANR	1199046	Statement	"""generated length %"""	101:5:3115:3134	1198876	3	True				
ANR	1199047	Statement	PFMT64d	101:25:3135:3141	1198876	4	True				
ANR	1199048	Statement	"""\\n"""	101:32:3142:3145	1198876	5	True				
ANR	1199049	Statement	","	101:36:3146:3146	1198876	6	True				
ANR	1199050	Statement	size	102:5:3153:3156	1198876	7	True				
ANR	1199051	Statement	","	102:9:3157:3157	1198876	8	True				
ANR	1199052	Statement	len	102:11:3159:3161	1198876	9	True				
ANR	1199053	Statement	)	102:14:3162:3162	1198876	10	True				
ANR	1199054	ExpressionStatement		102:15:3163:3163	1198876	11	True				
ANR	1199055	ReturnStatement	return pat2 ;	104:1:3169:3180	1198876	14	True				
ANR	1199056	Identifier	pat2		1198876	0					
ANR	1199057	ReturnType	R_API char *		1198876	1					
ANR	1199058	Identifier	r_debruijn_pattern		1198876	2					
ANR	1199059	ParameterList	"int size , int start , const char * charset"		1198876	3					
ANR	1199060	Parameter	int size	69:31:2385:2392	1198876	0	True				
ANR	1199061	ParameterType	int		1198876	0					
ANR	1199062	Identifier	size		1198876	1					
ANR	1199063	Parameter	int start	69:41:2395:2403	1198876	1	True				
ANR	1199064	ParameterType	int		1198876	0					
ANR	1199065	Identifier	start		1198876	1					
ANR	1199066	Parameter	const char * charset	69:52:2406:2424	1198876	2	True				
ANR	1199067	ParameterType	const char *		1198876	0					
ANR	1199068	Identifier	charset		1198876	1					
ANR	1199069	CFGEntryNode	ENTRY		1198876		True				
ANR	1199070	CFGExitNode	EXIT		1198876		True				
ANR	1199071	Symbol	charset		1198876						
ANR	1199072	Symbol	debruijn_charset		1198876						
ANR	1199073	Symbol	pat		1198876						
ANR	1199074	Symbol	NULL		1198876						
ANR	1199075	Symbol	* pat2		1198876						
ANR	1199076	Symbol	* start		1198876						
ANR	1199077	Symbol	start		1198876						
ANR	1199078	Symbol	calloc		1198876						
ANR	1199079	Symbol	strlen		1198876						
ANR	1199080	Symbol	* size		1198876						
ANR	1199081	Symbol	size		1198876						
ANR	1199082	Symbol	len		1198876						
ANR	1199083	Symbol	pat2		1198876						
ANR	1199084	Symbol	de_bruijn		1198876						
ANR	1199085	Function	r_debruijn_offset	108:0:3257:4014							
ANR	1199086	FunctionDef	"r_debruijn_offset (ut64 value , bool is_big_endian)"		1199085	0					
ANR	1199087	CompoundStatement		108:60:3317:4014	1199085	0					
ANR	1199088	IdentifierDeclStatement	"char * needle , * pattern , buf [ 9 ] ;"	109:1:3320:3350	1199085	0	True				
ANR	1199089	IdentifierDecl	* needle		1199085	0					
ANR	1199090	IdentifierDeclType	char *		1199085	0					
ANR	1199091	Identifier	needle		1199085	1					
ANR	1199092	IdentifierDecl	* pattern		1199085	1					
ANR	1199093	IdentifierDeclType	char *		1199085	0					
ANR	1199094	Identifier	pattern		1199085	1					
ANR	1199095	IdentifierDecl	buf [ 9 ]		1199085	2					
ANR	1199096	IdentifierDeclType	char [ 9 ]		1199085	0					
ANR	1199097	Identifier	buf		1199085	1					
ANR	1199098	PrimaryExpression	9		1199085	2					
ANR	1199099	IdentifierDeclStatement	int retval = - 1 ;	110:1:3353:3368	1199085	1	True				
ANR	1199100	IdentifierDecl	retval = - 1		1199085	0					
ANR	1199101	IdentifierDeclType	int		1199085	0					
ANR	1199102	Identifier	retval		1199085	1					
ANR	1199103	AssignmentExpression	retval = - 1		1199085	2		=			
ANR	1199104	Identifier	retval		1199085	0					
ANR	1199105	UnaryOperationExpression	- 1		1199085	1					
ANR	1199106	UnaryOperator	-		1199085	0					
ANR	1199107	PrimaryExpression	1		1199085	1					
ANR	1199108	IdentifierDeclStatement	char * pch ;	111:1:3371:3380	1199085	2	True				
ANR	1199109	IdentifierDecl	* pch		1199085	0					
ANR	1199110	IdentifierDeclType	char *		1199085	0					
ANR	1199111	Identifier	pch		1199085	1					
ANR	1199112	IdentifierDeclStatement	"int lens [ 2 ] = { 0x1000 , 0x10000 } ;"	114:1:3510:3541	1199085	3	True				
ANR	1199113	IdentifierDecl	"lens [ 2 ] = { 0x1000 , 0x10000 }"		1199085	0					
ANR	1199114	IdentifierDeclType	int [ 2 ]		1199085	0					
ANR	1199115	Identifier	lens		1199085	1					
ANR	1199116	PrimaryExpression	2		1199085	2					
ANR	1199117	AssignmentExpression	"lens [ 2 ] = { 0x1000 , 0x10000 }"		1199085	3		=			
ANR	1199118	Identifier	lens		1199085	0					
ANR	1199119	InitializerList	0x1000		1199085	1					
ANR	1199120	PrimaryExpression	0x1000		1199085	0					
ANR	1199121	PrimaryExpression	0x10000		1199085	1					
ANR	1199122	IdentifierDeclStatement	int j ;	115:1:3544:3549	1199085	4	True				
ANR	1199123	IdentifierDecl	j		1199085	0					
ANR	1199124	IdentifierDeclType	int		1199085	0					
ANR	1199125	Identifier	j		1199085	1					
ANR	1199126	IfStatement	if ( value == 0 )		1199085	5					
ANR	1199127	Condition	value == 0	117:5:3557:3566	1199085	0	True				
ANR	1199128	EqualityExpression	value == 0		1199085	0		==			
ANR	1199129	Identifier	value		1199085	0					
ANR	1199130	PrimaryExpression	0		1199085	1					
ANR	1199131	CompoundStatement		10:17:251:251	1199085	1					
ANR	1199132	ReturnStatement	return - 1 ;	118:2:3573:3582	1199085	0	True				
ANR	1199133	UnaryOperationExpression	- 1		1199085	0					
ANR	1199134	UnaryOperator	-		1199085	0					
ANR	1199135	PrimaryExpression	1		1199085	1					
ANR	1199136	ForStatement	for ( j = 0 ; j < 2 && retval == - 1 ; ++ j )		1199085	6					
ANR	1199137	ForInit	j = 0 ;	121:6:3594:3599	1199085	0	True				
ANR	1199138	AssignmentExpression	j = 0		1199085	0		=			
ANR	1199139	Identifier	j		1199085	0					
ANR	1199140	PrimaryExpression	0		1199085	1					
ANR	1199141	Condition	j < 2 && retval == - 1	121:13:3601:3621	1199085	1	True				
ANR	1199142	AndExpression	j < 2 && retval == - 1		1199085	0		&&			
ANR	1199143	RelationalExpression	j < 2		1199085	0		<			
ANR	1199144	Identifier	j		1199085	0					
ANR	1199145	PrimaryExpression	2		1199085	1					
ANR	1199146	EqualityExpression	retval == - 1		1199085	1		==			
ANR	1199147	Identifier	retval		1199085	0					
ANR	1199148	UnaryOperationExpression	- 1		1199085	1					
ANR	1199149	UnaryOperator	-		1199085	0					
ANR	1199150	PrimaryExpression	1		1199085	1					
ANR	1199151	UnaryExpression	++ j	121:36:3624:3626	1199085	2	True				
ANR	1199152	IncDec	++		1199085	0					
ANR	1199153	Identifier	j		1199085	1					
ANR	1199154	CompoundStatement		14:41:311:311	1199085	3					
ANR	1199155	ExpressionStatement	"pattern = r_debruijn_pattern ( lens [ j ] , 0 , debruijn_charset )"	122:2:3633:3692	1199085	0	True				
ANR	1199156	AssignmentExpression	"pattern = r_debruijn_pattern ( lens [ j ] , 0 , debruijn_charset )"		1199085	0		=			
ANR	1199157	Identifier	pattern		1199085	0					
ANR	1199158	CallExpression	"r_debruijn_pattern ( lens [ j ] , 0 , debruijn_charset )"		1199085	1					
ANR	1199159	Callee	r_debruijn_pattern		1199085	0					
ANR	1199160	Identifier	r_debruijn_pattern		1199085	0					
ANR	1199161	ArgumentList	lens [ j ]		1199085	1					
ANR	1199162	Argument	lens [ j ]		1199085	0					
ANR	1199163	ArrayIndexing	lens [ j ]		1199085	0					
ANR	1199164	Identifier	lens		1199085	0					
ANR	1199165	Identifier	j		1199085	1					
ANR	1199166	Argument	0		1199085	1					
ANR	1199167	PrimaryExpression	0		1199085	0					
ANR	1199168	Argument	debruijn_charset		1199085	2					
ANR	1199169	Identifier	debruijn_charset		1199085	0					
ANR	1199170	ExpressionStatement	buf [ 8 ] = '\\0'	124:2:3697:3710	1199085	1	True				
ANR	1199171	AssignmentExpression	buf [ 8 ] = '\\0'		1199085	0		=			
ANR	1199172	ArrayIndexing	buf [ 8 ]		1199085	0					
ANR	1199173	Identifier	buf		1199085	0					
ANR	1199174	PrimaryExpression	8		1199085	1					
ANR	1199175	PrimaryExpression	'\\0'		1199085	1					
ANR	1199176	IfStatement	if ( is_big_endian )		1199085	2					
ANR	1199177	Condition	is_big_endian	125:6:3718:3730	1199085	0	True				
ANR	1199178	Identifier	is_big_endian		1199085	0					
ANR	1199179	CompoundStatement		18:21:415:415	1199085	1					
ANR	1199180	ExpressionStatement	"r_write_be64 ( buf , value )"	126:3:3738:3763	1199085	0	True				
ANR	1199181	CallExpression	"r_write_be64 ( buf , value )"		1199085	0					
ANR	1199182	Callee	r_write_be64		1199085	0					
ANR	1199183	Identifier	r_write_be64		1199085	0					
ANR	1199184	ArgumentList	buf		1199085	1					
ANR	1199185	Argument	buf		1199085	0					
ANR	1199186	Identifier	buf		1199085	0					
ANR	1199187	Argument	value		1199085	1					
ANR	1199188	Identifier	value		1199085	0					
ANR	1199189	ElseStatement	else		1199085	0					
ANR	1199190	CompoundStatement		20:9:456:456	1199085	0					
ANR	1199191	ExpressionStatement	"r_write_le64 ( buf , value )"	128:3:3779:3804	1199085	0	True				
ANR	1199192	CallExpression	"r_write_le64 ( buf , value )"		1199085	0					
ANR	1199193	Callee	r_write_le64		1199085	0					
ANR	1199194	Identifier	r_write_le64		1199085	0					
ANR	1199195	ArgumentList	buf		1199085	1					
ANR	1199196	Argument	buf		1199085	0					
ANR	1199197	Identifier	buf		1199085	0					
ANR	1199198	Argument	value		1199085	1					
ANR	1199199	Identifier	value		1199085	0					
ANR	1199200	ForStatement	for ( needle = buf ; ! * needle ; needle ++ )		1199085	3					
ANR	1199201	ForInit	needle = buf ;	130:7:3817:3829	1199085	0	True				
ANR	1199202	AssignmentExpression	needle = buf		1199085	0		=			
ANR	1199203	Identifier	needle		1199085	0					
ANR	1199204	Identifier	buf		1199085	1					
ANR	1199205	Condition	! * needle	130:21:3831:3838	1199085	1	True				
ANR	1199206	UnaryOperationExpression	! * needle		1199085	0					
ANR	1199207	UnaryOperator	!		1199085	0					
ANR	1199208	UnaryOperationExpression	* needle		1199085	1					
ANR	1199209	UnaryOperator	*		1199085	0					
ANR	1199210	Identifier	needle		1199085	1					
ANR	1199211	PostIncDecOperationExpression	needle ++	130:31:3841:3848	1199085	2	True				
ANR	1199212	Identifier	needle		1199085	0					
ANR	1199213	IncDec	++		1199085	1					
ANR	1199214	CompoundStatement		23:41:533:533	1199085	3					
ANR	1199215	ExpressionStatement	"pch = strstr ( pattern , needle )"	134:2:3885:3915	1199085	4	True				
ANR	1199216	AssignmentExpression	"pch = strstr ( pattern , needle )"		1199085	0		=			
ANR	1199217	Identifier	pch		1199085	0					
ANR	1199218	CallExpression	"strstr ( pattern , needle )"		1199085	1					
ANR	1199219	Callee	strstr		1199085	0					
ANR	1199220	Identifier	strstr		1199085	0					
ANR	1199221	ArgumentList	pattern		1199085	1					
ANR	1199222	Argument	pattern		1199085	0					
ANR	1199223	Identifier	pattern		1199085	0					
ANR	1199224	Argument	needle		1199085	1					
ANR	1199225	Identifier	needle		1199085	0					
ANR	1199226	IfStatement	if ( pch )		1199085	5					
ANR	1199227	Condition	pch	136:6:3924:3926	1199085	0	True				
ANR	1199228	Identifier	pch		1199085	0					
ANR	1199229	CompoundStatement		29:11:611:611	1199085	1					
ANR	1199230	ExpressionStatement	retval = ( int ) ( size_t ) ( pch - pattern )	137:3:3934:3971	1199085	0	True				
ANR	1199231	AssignmentExpression	retval = ( int ) ( size_t ) ( pch - pattern )		1199085	0		=			
ANR	1199232	Identifier	retval		1199085	0					
ANR	1199233	CastExpression	( int ) ( size_t ) ( pch - pattern )		1199085	1					
ANR	1199234	CastTarget	int		1199085	0					
ANR	1199235	CastExpression	( size_t ) ( pch - pattern )		1199085	1					
ANR	1199236	CastTarget	size_t		1199085	0					
ANR	1199237	AdditiveExpression	pch - pattern		1199085	1		-			
ANR	1199238	Identifier	pch		1199085	0					
ANR	1199239	Identifier	pattern		1199085	1					
ANR	1199240	ExpressionStatement	free ( pattern )	139:2:3979:3993	1199085	6	True				
ANR	1199241	CallExpression	free ( pattern )		1199085	0					
ANR	1199242	Callee	free		1199085	0					
ANR	1199243	Identifier	free		1199085	0					
ANR	1199244	ArgumentList	pattern		1199085	1					
ANR	1199245	Argument	pattern		1199085	0					
ANR	1199246	Identifier	pattern		1199085	0					
ANR	1199247	ReturnStatement	return retval ;	141:1:3999:4012	1199085	7	True				
ANR	1199248	Identifier	retval		1199085	0					
ANR	1199249	ReturnType	R_API int		1199085	1					
ANR	1199250	Identifier	r_debruijn_offset		1199085	2					
ANR	1199251	ParameterList	"ut64 value , bool is_big_endian"		1199085	3					
ANR	1199252	Parameter	ut64 value	108:28:3285:3294	1199085	0	True				
ANR	1199253	ParameterType	ut64		1199085	0					
ANR	1199254	Identifier	value		1199085	1					
ANR	1199255	Parameter	bool is_big_endian	108:40:3297:3314	1199085	1	True				
ANR	1199256	ParameterType	bool		1199085	0					
ANR	1199257	Identifier	is_big_endian		1199085	1					
ANR	1199258	CFGEntryNode	ENTRY		1199085		True				
ANR	1199259	CFGExitNode	EXIT		1199085		True				
ANR	1199260	Symbol	debruijn_charset		1199085						
ANR	1199261	Symbol	* buf		1199085						
ANR	1199262	Symbol	r_debruijn_pattern		1199085						
ANR	1199263	Symbol	pattern		1199085						
ANR	1199264	Symbol	* needle		1199085						
ANR	1199265	Symbol	j		1199085						
ANR	1199266	Symbol	lens		1199085						
ANR	1199267	Symbol	retval		1199085						
ANR	1199268	Symbol	buf		1199085						
ANR	1199269	Symbol	pch		1199085						
ANR	1199270	Symbol	* j		1199085						
ANR	1199271	Symbol	* lens		1199085						
ANR	1199272	Symbol	strstr		1199085						
ANR	1199273	Symbol	is_big_endian		1199085						
ANR	1199274	Symbol	needle		1199085						
ANR	1199275	Symbol	value		1199085						
