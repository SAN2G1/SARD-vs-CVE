command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3269973	File	data/converged/CVE-2019-16718~_radare2/libr_asm_arch_i8080_i8080dis.c								
ANR	3269974	DeclStmt									
ANR	3269975	Decl							char	char * [ ]	reg
ANR	3269976	DeclStmt									
ANR	3269977	Decl							char	char * [ ]	rp
ANR	3269978	DeclStmt									
ANR	3269979	Decl							char	char * [ ]	push_rp
ANR	3269980	DeclStmt									
ANR	3269981	Decl							char	char * [ ]	cond
ANR	3269982	DeclStmt									
ANR	3269983	Decl							char	char * [ ]	rst
ANR	3269984	ClassDef	arg_t	38:0:1623:1739							
ANR	3269985	DeclStmt									
ANR	3269986	Decl							int	int	type
ANR	3269987	DeclStmt									
ANR	3269988	Decl							int	int	shift
ANR	3269989	DeclStmt									
ANR	3269990	Decl							int	int	mask
ANR	3269991	DeclStmt									
ANR	3269992	Decl							char	char * *	fmt
ANR	3269993	ClassDef	opcode_t	45:7:1750:3785							
ANR	3269994	DeclStmt									
ANR	3269995	Decl							unsigned char	unsigned char	cmd
ANR	3269996	DeclStmt									
ANR	3269997	Decl							int	int	size
ANR	3269998	DeclStmt									
ANR	3269999	Decl							char	char *	name
ANR	3270000	DeclStmt									
ANR	3270001	Decl							struct arg_t	struct arg_t	arg1
ANR	3270002	Decl							struct arg_t	struct arg_t	arg2
ANR	3270003	DeclStmt									
ANR	3270004	Decl							opcode_t	opcode_t [ ]	opcodes
ANR	3270005	Function	arg	112:0:3788:4083							
ANR	3270006	FunctionDef	"arg (char * s , int const cmd , struct arg_t const * arg , int val)"		3270005	0					
ANR	3270007	CompoundStatement		112:74:3862:4083	3270005	0					
ANR	3270008	IfStatement	if ( arg -> type == 3 )		3270005	0					
ANR	3270009	Condition	arg -> type == 3	113:6:3870:3883	3270005	0	True				
ANR	3270010	EqualityExpression	arg -> type == 3		3270005	0		==			
ANR	3270011	PtrMemberAccess	arg -> type		3270005	0					
ANR	3270012	Identifier	arg		3270005	0					
ANR	3270013	Identifier	type		3270005	1					
ANR	3270014	PrimaryExpression	3		3270005	1					
ANR	3270015	CompoundStatement		2:22:23:23	3270005	1					
ANR	3270016	ExpressionStatement	"strcat ( s , arg -> fmt [ ( cmd >> arg -> shift ) & arg -> mask ] )"	114:4:3892:3944	3270005	0	True				
ANR	3270017	CallExpression	"strcat ( s , arg -> fmt [ ( cmd >> arg -> shift ) & arg -> mask ] )"		3270005	0					
ANR	3270018	Callee	strcat		3270005	0					
ANR	3270019	Identifier	strcat		3270005	0					
ANR	3270020	ArgumentList	s		3270005	1					
ANR	3270021	Argument	s		3270005	0					
ANR	3270022	Identifier	s		3270005	0					
ANR	3270023	Argument	arg -> fmt [ ( cmd >> arg -> shift ) & arg -> mask ]		3270005	1					
ANR	3270024	ArrayIndexing	arg -> fmt [ ( cmd >> arg -> shift ) & arg -> mask ]		3270005	0					
ANR	3270025	PtrMemberAccess	arg -> fmt		3270005	0					
ANR	3270026	Identifier	arg		3270005	0					
ANR	3270027	Identifier	fmt		3270005	1					
ANR	3270028	BitAndExpression	( cmd >> arg -> shift ) & arg -> mask		3270005	1		&			
ANR	3270029	ShiftExpression	cmd >> arg -> shift		3270005	0		>>			
ANR	3270030	Identifier	cmd		3270005	0					
ANR	3270031	PtrMemberAccess	arg -> shift		3270005	1					
ANR	3270032	Identifier	arg		3270005	0					
ANR	3270033	Identifier	shift		3270005	1					
ANR	3270034	PtrMemberAccess	arg -> mask		3270005	1					
ANR	3270035	Identifier	arg		3270005	0					
ANR	3270036	Identifier	mask		3270005	1					
ANR	3270037	ElseStatement	else		3270005	0					
ANR	3270038	CompoundStatement		4:9:92:92	3270005	0					
ANR	3270039	IfStatement	if ( arg -> type == 1 )		3270005	0					
ANR	3270040	Condition	arg -> type == 1	116:8:3965:3978	3270005	0	True				
ANR	3270041	EqualityExpression	arg -> type == 1		3270005	0		==			
ANR	3270042	PtrMemberAccess	arg -> type		3270005	0					
ANR	3270043	Identifier	arg		3270005	0					
ANR	3270044	Identifier	type		3270005	1					
ANR	3270045	PrimaryExpression	1		3270005	1					
ANR	3270046	ExpressionStatement	"sprintf ( s , ""%02X"" , val & 0xff )"	117:6:3987:4017	3270005	1	True				
ANR	3270047	CallExpression	"sprintf ( s , ""%02X"" , val & 0xff )"		3270005	0					
ANR	3270048	Callee	sprintf		3270005	0					
ANR	3270049	Identifier	sprintf		3270005	0					
ANR	3270050	ArgumentList	s		3270005	1					
ANR	3270051	Argument	s		3270005	0					
ANR	3270052	Identifier	s		3270005	0					
ANR	3270053	Argument	"""%02X"""		3270005	1					
ANR	3270054	PrimaryExpression	"""%02X"""		3270005	0					
ANR	3270055	Argument	val & 0xff		3270005	2					
ANR	3270056	BitAndExpression	val & 0xff		3270005	0		&			
ANR	3270057	Identifier	val		3270005	0					
ANR	3270058	PrimaryExpression	0xff		3270005	1					
ANR	3270059	ElseStatement	else		3270005	0					
ANR	3270060	IfStatement	if ( arg -> type == 2 )		3270005	0					
ANR	3270061	Condition	arg -> type == 2	118:13:4032:4045	3270005	0	True				
ANR	3270062	EqualityExpression	arg -> type == 2		3270005	0		==			
ANR	3270063	PtrMemberAccess	arg -> type		3270005	0					
ANR	3270064	Identifier	arg		3270005	0					
ANR	3270065	Identifier	type		3270005	1					
ANR	3270066	PrimaryExpression	2		3270005	1					
ANR	3270067	ExpressionStatement	"sprintf ( s , ""%04X"" , val )"	119:6:4054:4077	3270005	1	True				
ANR	3270068	CallExpression	"sprintf ( s , ""%04X"" , val )"		3270005	0					
ANR	3270069	Callee	sprintf		3270005	0					
ANR	3270070	Identifier	sprintf		3270005	0					
ANR	3270071	ArgumentList	s		3270005	1					
ANR	3270072	Argument	s		3270005	0					
ANR	3270073	Identifier	s		3270005	0					
ANR	3270074	Argument	"""%04X"""		3270005	1					
ANR	3270075	PrimaryExpression	"""%04X"""		3270005	0					
ANR	3270076	Argument	val		3270005	2					
ANR	3270077	Identifier	val		3270005	0					
ANR	3270078	ReturnType	static void		3270005	1					
ANR	3270079	Identifier	arg		3270005	2					
ANR	3270080	ParameterList	"char * s , int const cmd , struct arg_t const * arg , int val"		3270005	3					
ANR	3270081	Parameter	char * s	112:16:3804:3810	3270005	0	True				
ANR	3270082	ParameterType	char *		3270005	0					
ANR	3270083	Identifier	s		3270005	1					
ANR	3270084	Parameter	int const cmd	112:25:3813:3825	3270005	1	True				
ANR	3270085	ParameterType	int const		3270005	0					
ANR	3270086	Identifier	cmd		3270005	1					
ANR	3270087	Parameter	struct arg_t const * arg	112:40:3828:3850	3270005	2	True				
ANR	3270088	ParameterType	struct arg_t const *		3270005	0					
ANR	3270089	Identifier	arg		3270005	1					
ANR	3270090	Parameter	int val	112:65:3853:3859	3270005	3	True				
ANR	3270091	ParameterType	int		3270005	0					
ANR	3270092	Identifier	val		3270005	1					
ANR	3270093	CFGEntryNode	ENTRY		3270005		True				
ANR	3270094	CFGExitNode	EXIT		3270005		True				
ANR	3270095	Symbol	val		3270005						
ANR	3270096	Symbol	* arg -> mask		3270005						
ANR	3270097	Symbol	arg -> shift		3270005						
ANR	3270098	Symbol	* * arg		3270005						
ANR	3270099	Symbol	* arg -> shift		3270005						
ANR	3270100	Symbol	s		3270005						
ANR	3270101	Symbol	* arg -> fmt		3270005						
ANR	3270102	Symbol	arg -> mask		3270005						
ANR	3270103	Symbol	arg		3270005						
ANR	3270104	Symbol	arg -> type		3270005						
ANR	3270105	Symbol	arg -> fmt		3270005						
ANR	3270106	Symbol	cmd		3270005						
ANR	3270107	Symbol	* cmd		3270005						
ANR	3270108	Symbol	* arg		3270005						
ANR	3270109	DeclStmt									
ANR	3270110	Decl							int const	int const	cmd
ANR	3270111	DeclStmt									
ANR	3270112	Decl							int const	int const	p
ANR	3270113	DeclStmt									
ANR	3270114	Decl							struct opcode_t const	struct opcode_t const *	op
ANR	3270115	DeclStmt									
ANR	3270116	Decl							int const	int const	grp
ANR	3270117	DeclStmt									
ANR	3270118	Decl							int const	int const	branch
